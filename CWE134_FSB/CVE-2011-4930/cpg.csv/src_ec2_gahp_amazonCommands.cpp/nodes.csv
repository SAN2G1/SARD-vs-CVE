command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5070142	File	data/converged/CVE-2011-4930_htcondor/src_ec2_gahp_amazonCommands.cpp								
ANR	5070143	Function	amazonURLEncode	51:0:1532:2864							
ANR	5070144	FunctionDef	amazonURLEncode (const std :: string & input)		5070143	0					
ANR	5070145	CompoundStatement		52:0:1589:2864	5070143	0					
ANR	5070146	IdentifierDeclStatement	std :: string output ;	61:4:1844:1862	5070143	0	True				
ANR	5070147	IdentifierDecl	output		5070143	0					
ANR	5070148	IdentifierDeclType	std :: string		5070143	0					
ANR	5070149	Identifier	output		5070143	1					
ANR	5070150	ForStatement	for ( unsigned i = 0 ; i < input . length ( ) ; ++ i )		5070143	1					
ANR	5070151	ForInit	unsigned i = 0 ;	62:9:1873:1887	5070143	0	True				
ANR	5070152	IdentifierDeclStatement	unsigned i = 0 ;		5070143	0					
ANR	5070153	IdentifierDecl	i = 0		5070143	0					
ANR	5070154	IdentifierDeclType	unsigned		5070143	0					
ANR	5070155	Identifier	i		5070143	1					
ANR	5070156	AssignmentExpression	i = 0		5070143	2		=			
ANR	5070157	Identifier	i		5070143	0					
ANR	5070158	PrimaryExpression	0		5070143	1					
ANR	5070159	Condition	i < input . length ( )	62:25:1889:1906	5070143	1	True				
ANR	5070160	RelationalExpression	i < input . length ( )		5070143	0		<			
ANR	5070161	Identifier	i		5070143	0					
ANR	5070162	CallExpression	input . length ( )		5070143	1					
ANR	5070163	Callee	input . length		5070143	0					
ANR	5070164	MemberAccess	input . length		5070143	0					
ANR	5070165	Identifier	input		5070143	0					
ANR	5070166	Identifier	length		5070143	1					
ANR	5070167	ArgumentList			5070143	1					
ANR	5070168	UnaryExpression	++ i	62:45:1909:1911	5070143	2	True				
ANR	5070169	IncDec	++		5070143	0					
ANR	5070170	Identifier	i		5070143	1					
ANR	5070171	CompoundStatement		11:51:325:325	5070143	3					
ANR	5070172	IfStatement	if ( ( 'A' <= input [ i ] && input [ i ] <= 'Z' ) || ( 'a' <= input [ i ] && input [ i ] <= 'z' ) || ( '0' <= input [ i ] && input [ i ] <= '9' ) || input [ i ] == '-' || input [ i ] == '_' || input [ i ] == '.' || input [ i ] == '~' )		5070143	0					
ANR	5070173	Condition	( 'A' <= input [ i ] && input [ i ] <= 'Z' ) || ( 'a' <= input [ i ] && input [ i ] <= 'z' ) || ( '0' <= input [ i ] && input [ i ] <= '9' ) || input [ i ] == '-' || input [ i ] == '_' || input [ i ] == '.' || input [ i ] == '~'	68:12:2253:2498	5070143	0	True				
ANR	5070174	OrExpression	( 'A' <= input [ i ] && input [ i ] <= 'Z' ) || ( 'a' <= input [ i ] && input [ i ] <= 'z' ) || ( '0' <= input [ i ] && input [ i ] <= '9' ) || input [ i ] == '-' || input [ i ] == '_' || input [ i ] == '.' || input [ i ] == '~'		5070143	0		||			
ANR	5070175	AndExpression	'A' <= input [ i ] && input [ i ] <= 'Z'		5070143	0		&&			
ANR	5070176	RelationalExpression	'A' <= input [ i ]		5070143	0		<=			
ANR	5070177	PrimaryExpression	'A'		5070143	0					
ANR	5070178	ArrayIndexing	input [ i ]		5070143	1					
ANR	5070179	Identifier	input		5070143	0					
ANR	5070180	Identifier	i		5070143	1					
ANR	5070181	RelationalExpression	input [ i ] <= 'Z'		5070143	1		<=			
ANR	5070182	ArrayIndexing	input [ i ]		5070143	0					
ANR	5070183	Identifier	input		5070143	0					
ANR	5070184	Identifier	i		5070143	1					
ANR	5070185	PrimaryExpression	'Z'		5070143	1					
ANR	5070186	OrExpression	( 'a' <= input [ i ] && input [ i ] <= 'z' ) || ( '0' <= input [ i ] && input [ i ] <= '9' ) || input [ i ] == '-' || input [ i ] == '_' || input [ i ] == '.' || input [ i ] == '~'		5070143	1		||			
ANR	5070187	AndExpression	'a' <= input [ i ] && input [ i ] <= 'z'		5070143	0		&&			
ANR	5070188	RelationalExpression	'a' <= input [ i ]		5070143	0		<=			
ANR	5070189	PrimaryExpression	'a'		5070143	0					
ANR	5070190	ArrayIndexing	input [ i ]		5070143	1					
ANR	5070191	Identifier	input		5070143	0					
ANR	5070192	Identifier	i		5070143	1					
ANR	5070193	RelationalExpression	input [ i ] <= 'z'		5070143	1		<=			
ANR	5070194	ArrayIndexing	input [ i ]		5070143	0					
ANR	5070195	Identifier	input		5070143	0					
ANR	5070196	Identifier	i		5070143	1					
ANR	5070197	PrimaryExpression	'z'		5070143	1					
ANR	5070198	OrExpression	( '0' <= input [ i ] && input [ i ] <= '9' ) || input [ i ] == '-' || input [ i ] == '_' || input [ i ] == '.' || input [ i ] == '~'		5070143	1		||			
ANR	5070199	AndExpression	'0' <= input [ i ] && input [ i ] <= '9'		5070143	0		&&			
ANR	5070200	RelationalExpression	'0' <= input [ i ]		5070143	0		<=			
ANR	5070201	PrimaryExpression	'0'		5070143	0					
ANR	5070202	ArrayIndexing	input [ i ]		5070143	1					
ANR	5070203	Identifier	input		5070143	0					
ANR	5070204	Identifier	i		5070143	1					
ANR	5070205	RelationalExpression	input [ i ] <= '9'		5070143	1		<=			
ANR	5070206	ArrayIndexing	input [ i ]		5070143	0					
ANR	5070207	Identifier	input		5070143	0					
ANR	5070208	Identifier	i		5070143	1					
ANR	5070209	PrimaryExpression	'9'		5070143	1					
ANR	5070210	OrExpression	input [ i ] == '-' || input [ i ] == '_' || input [ i ] == '.' || input [ i ] == '~'		5070143	1		||			
ANR	5070211	EqualityExpression	input [ i ] == '-'		5070143	0		==			
ANR	5070212	ArrayIndexing	input [ i ]		5070143	0					
ANR	5070213	Identifier	input		5070143	0					
ANR	5070214	Identifier	i		5070143	1					
ANR	5070215	PrimaryExpression	'-'		5070143	1					
ANR	5070216	OrExpression	input [ i ] == '_' || input [ i ] == '.' || input [ i ] == '~'		5070143	1		||			
ANR	5070217	EqualityExpression	input [ i ] == '_'		5070143	0		==			
ANR	5070218	ArrayIndexing	input [ i ]		5070143	0					
ANR	5070219	Identifier	input		5070143	0					
ANR	5070220	Identifier	i		5070143	1					
ANR	5070221	PrimaryExpression	'_'		5070143	1					
ANR	5070222	OrExpression	input [ i ] == '.' || input [ i ] == '~'		5070143	1		||			
ANR	5070223	EqualityExpression	input [ i ] == '.'		5070143	0		==			
ANR	5070224	ArrayIndexing	input [ i ]		5070143	0					
ANR	5070225	Identifier	input		5070143	0					
ANR	5070226	Identifier	i		5070143	1					
ANR	5070227	PrimaryExpression	'.'		5070143	1					
ANR	5070228	EqualityExpression	input [ i ] == '~'		5070143	1		==			
ANR	5070229	ArrayIndexing	input [ i ]		5070143	0					
ANR	5070230	Identifier	input		5070143	0					
ANR	5070231	Identifier	i		5070143	1					
ANR	5070232	PrimaryExpression	'~'		5070143	1					
ANR	5070233	CompoundStatement		24:12:926:947	5070143	1					
ANR	5070234	IdentifierDeclStatement	"char uglyHack [ ] = ""X"" ;"	75:12:2516:2537	5070143	0	True				
ANR	5070235	IdentifierDecl	"uglyHack [ ] = ""X"""		5070143	0					
ANR	5070236	IdentifierDeclType	char [ ]		5070143	0					
ANR	5070237	Identifier	uglyHack		5070143	1					
ANR	5070238	AssignmentExpression	"uglyHack [ ] = ""X"""		5070143	2		=			
ANR	5070239	Identifier	uglyHack		5070143	0					
ANR	5070240	PrimaryExpression	"""X"""		5070143	1					
ANR	5070241	ExpressionStatement	uglyHack [ 0 ] = input [ i ]	76:12:2551:2573	5070143	1	True				
ANR	5070242	AssignmentExpression	uglyHack [ 0 ] = input [ i ]		5070143	0		=			
ANR	5070243	ArrayIndexing	uglyHack [ 0 ]		5070143	0					
ANR	5070244	Identifier	uglyHack		5070143	0					
ANR	5070245	PrimaryExpression	0		5070143	1					
ANR	5070246	ArrayIndexing	input [ i ]		5070143	1					
ANR	5070247	Identifier	input		5070143	0					
ANR	5070248	Identifier	i		5070143	1					
ANR	5070249	ExpressionStatement	output . append ( uglyHack )	77:12:2587:2612	5070143	2	True				
ANR	5070250	CallExpression	output . append ( uglyHack )		5070143	0					
ANR	5070251	Callee	output . append		5070143	0					
ANR	5070252	MemberAccess	output . append		5070143	0					
ANR	5070253	Identifier	output		5070143	0					
ANR	5070254	Identifier	append		5070143	1					
ANR	5070255	ArgumentList	uglyHack		5070143	1					
ANR	5070256	Argument	uglyHack		5070143	0					
ANR	5070257	Identifier	uglyHack		5070143	0					
ANR	5070258	ElseStatement	else		5070143	0					
ANR	5070259	CompoundStatement		29:12:1088:1152	5070143	0					
ANR	5070260	IdentifierDeclStatement	char percentEncode [ 4 ] ;	79:12:2643:2664	5070143	0	True				
ANR	5070261	IdentifierDecl	percentEncode [ 4 ]		5070143	0					
ANR	5070262	IdentifierDeclType	char [ 4 ]		5070143	0					
ANR	5070263	Identifier	percentEncode		5070143	1					
ANR	5070264	PrimaryExpression	4		5070143	2					
ANR	5070265	IdentifierDeclStatement	"int written = snprintf ( percentEncode , 4 , ""%%%.2hhX"" , input [ i ] ) ;"	80:12:2678:2742	5070143	1	True				
ANR	5070266	IdentifierDecl	"written = snprintf ( percentEncode , 4 , ""%%%.2hhX"" , input [ i ] )"		5070143	0					
ANR	5070267	IdentifierDeclType	int		5070143	0					
ANR	5070268	Identifier	written		5070143	1					
ANR	5070269	AssignmentExpression	"written = snprintf ( percentEncode , 4 , ""%%%.2hhX"" , input [ i ] )"		5070143	2		=			
ANR	5070270	Identifier	written		5070143	0					
ANR	5070271	CallExpression	"snprintf ( percentEncode , 4 , ""%%%.2hhX"" , input [ i ] )"		5070143	1					
ANR	5070272	Callee	snprintf		5070143	0					
ANR	5070273	Identifier	snprintf		5070143	0					
ANR	5070274	ArgumentList	percentEncode		5070143	1					
ANR	5070275	Argument	percentEncode		5070143	0					
ANR	5070276	Identifier	percentEncode		5070143	0					
ANR	5070277	Argument	4		5070143	1					
ANR	5070278	PrimaryExpression	4		5070143	0					
ANR	5070279	Argument	"""%%%.2hhX"""		5070143	2					
ANR	5070280	PrimaryExpression	"""%%%.2hhX"""		5070143	0					
ANR	5070281	Argument	input [ i ]		5070143	3					
ANR	5070282	ArrayIndexing	input [ i ]		5070143	0					
ANR	5070283	Identifier	input		5070143	0					
ANR	5070284	Identifier	i		5070143	1					
ANR	5070285	ExpressionStatement	assert ( written == 3 )	81:12:2756:2778	5070143	2	True				
ANR	5070286	CallExpression	assert ( written == 3 )		5070143	0					
ANR	5070287	Callee	assert		5070143	0					
ANR	5070288	Identifier	assert		5070143	0					
ANR	5070289	ArgumentList	written == 3		5070143	1					
ANR	5070290	Argument	written == 3		5070143	0					
ANR	5070291	EqualityExpression	written == 3		5070143	0		==			
ANR	5070292	Identifier	written		5070143	0					
ANR	5070293	PrimaryExpression	3		5070143	1					
ANR	5070294	ExpressionStatement	output . append ( percentEncode )	82:12:2792:2822	5070143	3	True				
ANR	5070295	CallExpression	output . append ( percentEncode )		5070143	0					
ANR	5070296	Callee	output . append		5070143	0					
ANR	5070297	MemberAccess	output . append		5070143	0					
ANR	5070298	Identifier	output		5070143	0					
ANR	5070299	Identifier	append		5070143	1					
ANR	5070300	ArgumentList	percentEncode		5070143	1					
ANR	5070301	Argument	percentEncode		5070143	0					
ANR	5070302	Identifier	percentEncode		5070143	0					
ANR	5070303	ReturnStatement	return output ;	86:4:2849:2862	5070143	2	True				
ANR	5070304	Identifier	output		5070143	0					
ANR	5070305	ReturnType	std :: string		5070143	1					
ANR	5070306	Identifier	amazonURLEncode		5070143	2					
ANR	5070307	ParameterList	const std :: string & input		5070143	3					
ANR	5070308	Parameter	const std :: string & input	51:29:1561:1585	5070143	0	True				
ANR	5070309	ParameterType	const std :: string &		5070143	0					
ANR	5070310	Identifier	input		5070143	1					
ANR	5070311	CFGEntryNode	ENTRY		5070143		True				
ANR	5070312	CFGExitNode	EXIT		5070143		True				
ANR	5070313	Symbol	output		5070143						
ANR	5070314	Symbol	input		5070143						
ANR	5070315	Symbol	uglyHack		5070143						
ANR	5070316	Symbol	* i		5070143						
ANR	5070317	Symbol	* input		5070143						
ANR	5070318	Symbol	i		5070143						
ANR	5070319	Symbol	* uglyHack		5070143						
ANR	5070320	Symbol	written		5070143						
ANR	5070321	Symbol	input . length		5070143						
ANR	5070322	Symbol	percentEncode		5070143						
ANR	5070323	Symbol	snprintf		5070143						
ANR	5070324	Function	writeShortFile	92:0:2894:3612							
ANR	5070325	FunctionDef	"writeShortFile (const std :: string & fileName , const std :: string & contents)"		5070324	0					
ANR	5070326	CompoundStatement		92:82:2976:3612	5070324	0					
ANR	5070327	IdentifierDeclStatement	"int fd = safe_open_wrapper_follow ( fileName . c_str ( ) , O_WRONLY | O_CREAT | O_TRUNC , 0600 ) ;"	93:4:2982:3071	5070324	0	True				
ANR	5070328	IdentifierDecl	"fd = safe_open_wrapper_follow ( fileName . c_str ( ) , O_WRONLY | O_CREAT | O_TRUNC , 0600 )"		5070324	0					
ANR	5070329	IdentifierDeclType	int		5070324	0					
ANR	5070330	Identifier	fd		5070324	1					
ANR	5070331	AssignmentExpression	"fd = safe_open_wrapper_follow ( fileName . c_str ( ) , O_WRONLY | O_CREAT | O_TRUNC , 0600 )"		5070324	2		=			
ANR	5070332	Identifier	fd		5070324	0					
ANR	5070333	CallExpression	"safe_open_wrapper_follow ( fileName . c_str ( ) , O_WRONLY | O_CREAT | O_TRUNC , 0600 )"		5070324	1					
ANR	5070334	Callee	safe_open_wrapper_follow		5070324	0					
ANR	5070335	Identifier	safe_open_wrapper_follow		5070324	0					
ANR	5070336	ArgumentList	fileName . c_str ( )		5070324	1					
ANR	5070337	Argument	fileName . c_str ( )		5070324	0					
ANR	5070338	CallExpression	fileName . c_str ( )		5070324	0					
ANR	5070339	Callee	fileName . c_str		5070324	0					
ANR	5070340	MemberAccess	fileName . c_str		5070324	0					
ANR	5070341	Identifier	fileName		5070324	0					
ANR	5070342	Identifier	c_str		5070324	1					
ANR	5070343	ArgumentList			5070324	1					
ANR	5070344	Argument	O_WRONLY | O_CREAT | O_TRUNC		5070324	1					
ANR	5070345	InclusiveOrExpression	O_WRONLY | O_CREAT | O_TRUNC		5070324	0		|			
ANR	5070346	Identifier	O_WRONLY		5070324	0					
ANR	5070347	InclusiveOrExpression	O_CREAT | O_TRUNC		5070324	1		|			
ANR	5070348	Identifier	O_CREAT		5070324	0					
ANR	5070349	Identifier	O_TRUNC		5070324	1					
ANR	5070350	Argument	0600		5070324	2					
ANR	5070351	PrimaryExpression	0600		5070324	0					
ANR	5070352	IfStatement	if ( fd < 0 )		5070324	1					
ANR	5070353	Condition	fd < 0	95:8:3082:3087	5070324	0	True				
ANR	5070354	RelationalExpression	fd < 0		5070324	0		<			
ANR	5070355	Identifier	fd		5070324	0					
ANR	5070356	PrimaryExpression	0		5070324	1					
ANR	5070357	CompoundStatement		4:17:114:114	5070324	1					
ANR	5070358	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to open file '%s' for writing: '%s' (%d).\\n"" , fileName . c_str ( ) , strerror ( errno ) , errno )"	96:8:3101:3218	5070324	0	True				
ANR	5070359	CallExpression	"dprintf ( D_ALWAYS , ""Failed to open file '%s' for writing: '%s' (%d).\\n"" , fileName . c_str ( ) , strerror ( errno ) , errno )"		5070324	0					
ANR	5070360	Callee	dprintf		5070324	0					
ANR	5070361	Identifier	dprintf		5070324	0					
ANR	5070362	ArgumentList	D_ALWAYS		5070324	1					
ANR	5070363	Argument	D_ALWAYS		5070324	0					
ANR	5070364	Identifier	D_ALWAYS		5070324	0					
ANR	5070365	Argument	"""Failed to open file '%s' for writing: '%s' (%d).\\n"""		5070324	1					
ANR	5070366	PrimaryExpression	"""Failed to open file '%s' for writing: '%s' (%d).\\n"""		5070324	0					
ANR	5070367	Argument	fileName . c_str ( )		5070324	2					
ANR	5070368	CallExpression	fileName . c_str ( )		5070324	0					
ANR	5070369	Callee	fileName . c_str		5070324	0					
ANR	5070370	MemberAccess	fileName . c_str		5070324	0					
ANR	5070371	Identifier	fileName		5070324	0					
ANR	5070372	Identifier	c_str		5070324	1					
ANR	5070373	ArgumentList			5070324	1					
ANR	5070374	Argument	strerror ( errno )		5070324	3					
ANR	5070375	CallExpression	strerror ( errno )		5070324	0					
ANR	5070376	Callee	strerror		5070324	0					
ANR	5070377	Identifier	strerror		5070324	0					
ANR	5070378	ArgumentList	errno		5070324	1					
ANR	5070379	Argument	errno		5070324	0					
ANR	5070380	Identifier	errno		5070324	0					
ANR	5070381	Argument	errno		5070324	4					
ANR	5070382	Identifier	errno		5070324	0					
ANR	5070383	ReturnStatement	return false ;	97:8:3228:3240	5070324	1	True				
ANR	5070384	Identifier	false		5070324	0					
ANR	5070385	IdentifierDeclStatement	"unsigned long written = full_write ( fd , contents . c_str ( ) , contents . length ( ) ) ;"	100:4:3257:3334	5070324	2	True				
ANR	5070386	IdentifierDecl	"written = full_write ( fd , contents . c_str ( ) , contents . length ( ) )"		5070324	0					
ANR	5070387	IdentifierDeclType	unsigned long		5070324	0					
ANR	5070388	Identifier	written		5070324	1					
ANR	5070389	AssignmentExpression	"written = full_write ( fd , contents . c_str ( ) , contents . length ( ) )"		5070324	2		=			
ANR	5070390	Identifier	written		5070324	0					
ANR	5070391	CallExpression	"full_write ( fd , contents . c_str ( ) , contents . length ( ) )"		5070324	1					
ANR	5070392	Callee	full_write		5070324	0					
ANR	5070393	Identifier	full_write		5070324	0					
ANR	5070394	ArgumentList	fd		5070324	1					
ANR	5070395	Argument	fd		5070324	0					
ANR	5070396	Identifier	fd		5070324	0					
ANR	5070397	Argument	contents . c_str ( )		5070324	1					
ANR	5070398	CallExpression	contents . c_str ( )		5070324	0					
ANR	5070399	Callee	contents . c_str		5070324	0					
ANR	5070400	MemberAccess	contents . c_str		5070324	0					
ANR	5070401	Identifier	contents		5070324	0					
ANR	5070402	Identifier	c_str		5070324	1					
ANR	5070403	ArgumentList			5070324	1					
ANR	5070404	Argument	contents . length ( )		5070324	2					
ANR	5070405	CallExpression	contents . length ( )		5070324	0					
ANR	5070406	Callee	contents . length		5070324	0					
ANR	5070407	MemberAccess	contents . length		5070324	0					
ANR	5070408	Identifier	contents		5070324	0					
ANR	5070409	Identifier	length		5070324	1					
ANR	5070410	ArgumentList			5070324	1					
ANR	5070411	ExpressionStatement	close ( fd )	101:4:3340:3351	5070324	3	True				
ANR	5070412	CallExpression	close ( fd )		5070324	0					
ANR	5070413	Callee	close		5070324	0					
ANR	5070414	Identifier	close		5070324	0					
ANR	5070415	ArgumentList	fd		5070324	1					
ANR	5070416	Argument	fd		5070324	0					
ANR	5070417	Identifier	fd		5070324	0					
ANR	5070418	IfStatement	if ( written != contents . length ( ) )		5070324	4					
ANR	5070419	Condition	written != contents . length ( )	102:8:3361:3388	5070324	0	True				
ANR	5070420	EqualityExpression	written != contents . length ( )		5070324	0		!=			
ANR	5070421	Identifier	written		5070324	0					
ANR	5070422	CallExpression	contents . length ( )		5070324	1					
ANR	5070423	Callee	contents . length		5070324	0					
ANR	5070424	MemberAccess	contents . length		5070324	0					
ANR	5070425	Identifier	contents		5070324	0					
ANR	5070426	Identifier	length		5070324	1					
ANR	5070427	ArgumentList			5070324	1					
ANR	5070428	CompoundStatement		11:39:415:415	5070324	1					
ANR	5070429	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to completely write file '%s'; wanted to write %lu but only put %lu.\\n"" , fileName . c_str ( ) , contents . length ( ) , written )"	103:8:3402:3560	5070324	0	True				
ANR	5070430	CallExpression	"dprintf ( D_ALWAYS , ""Failed to completely write file '%s'; wanted to write %lu but only put %lu.\\n"" , fileName . c_str ( ) , contents . length ( ) , written )"		5070324	0					
ANR	5070431	Callee	dprintf		5070324	0					
ANR	5070432	Identifier	dprintf		5070324	0					
ANR	5070433	ArgumentList	D_ALWAYS		5070324	1					
ANR	5070434	Argument	D_ALWAYS		5070324	0					
ANR	5070435	Identifier	D_ALWAYS		5070324	0					
ANR	5070436	Argument	"""Failed to completely write file '%s'; wanted to write %lu but only put %lu.\\n"""		5070324	1					
ANR	5070437	PrimaryExpression	"""Failed to completely write file '%s'; wanted to write %lu but only put %lu.\\n"""		5070324	0					
ANR	5070438	Argument	fileName . c_str ( )		5070324	2					
ANR	5070439	CallExpression	fileName . c_str ( )		5070324	0					
ANR	5070440	Callee	fileName . c_str		5070324	0					
ANR	5070441	MemberAccess	fileName . c_str		5070324	0					
ANR	5070442	Identifier	fileName		5070324	0					
ANR	5070443	Identifier	c_str		5070324	1					
ANR	5070444	ArgumentList			5070324	1					
ANR	5070445	Argument	contents . length ( )		5070324	3					
ANR	5070446	CallExpression	contents . length ( )		5070324	0					
ANR	5070447	Callee	contents . length		5070324	0					
ANR	5070448	MemberAccess	contents . length		5070324	0					
ANR	5070449	Identifier	contents		5070324	0					
ANR	5070450	Identifier	length		5070324	1					
ANR	5070451	ArgumentList			5070324	1					
ANR	5070452	Argument	written		5070324	4					
ANR	5070453	Identifier	written		5070324	0					
ANR	5070454	ReturnStatement	return false ;	105:8:3570:3582	5070324	1	True				
ANR	5070455	Identifier	false		5070324	0					
ANR	5070456	ReturnStatement	return true ;	108:4:3599:3610	5070324	5	True				
ANR	5070457	Identifier	true		5070324	0					
ANR	5070458	ReturnType	bool		5070324	1					
ANR	5070459	Identifier	writeShortFile		5070324	2					
ANR	5070460	ParameterList	"const std :: string & fileName , const std :: string & contents"		5070324	3					
ANR	5070461	Parameter	const std :: string & fileName	92:21:2915:2942	5070324	0	True				
ANR	5070462	ParameterType	const std :: string &		5070324	0					
ANR	5070463	Identifier	fileName		5070324	1					
ANR	5070464	Parameter	const std :: string & contents	92:51:2945:2972	5070324	1	True				
ANR	5070465	ParameterType	const std :: string &		5070324	0					
ANR	5070466	Identifier	contents		5070324	1					
ANR	5070467	CFGEntryNode	ENTRY		5070324		True				
ANR	5070468	CFGExitNode	EXIT		5070324		True				
ANR	5070469	Symbol	fileName		5070324						
ANR	5070470	Symbol	errno		5070324						
ANR	5070471	Symbol	safe_open_wrapper_follow		5070324						
ANR	5070472	Symbol	O_CREAT		5070324						
ANR	5070473	Symbol	fileName . c_str		5070324						
ANR	5070474	Symbol	full_write		5070324						
ANR	5070475	Symbol	D_ALWAYS		5070324						
ANR	5070476	Symbol	false		5070324						
ANR	5070477	Symbol	contents . length		5070324						
ANR	5070478	Symbol	contents . c_str		5070324						
ANR	5070479	Symbol	strerror		5070324						
ANR	5070480	Symbol	O_TRUNC		5070324						
ANR	5070481	Symbol	contents		5070324						
ANR	5070482	Symbol	true		5070324						
ANR	5070483	Symbol	written		5070324						
ANR	5070484	Symbol	O_WRONLY		5070324						
ANR	5070485	Symbol	fd		5070324						
ANR	5070486	Function	readShortFile	114:0:3655:4594							
ANR	5070487	FunctionDef	"readShortFile (const std :: string & fileName , std :: string & contents)"		5070486	0					
ANR	5070488	CompoundStatement		114:75:3730:4594	5070486	0					
ANR	5070489	IdentifierDeclStatement	"int fd = safe_open_wrapper_follow ( fileName . c_str ( ) , O_RDONLY , 0600 ) ;"	115:4:3736:3805	5070486	0	True				
ANR	5070490	IdentifierDecl	"fd = safe_open_wrapper_follow ( fileName . c_str ( ) , O_RDONLY , 0600 )"		5070486	0					
ANR	5070491	IdentifierDeclType	int		5070486	0					
ANR	5070492	Identifier	fd		5070486	1					
ANR	5070493	AssignmentExpression	"fd = safe_open_wrapper_follow ( fileName . c_str ( ) , O_RDONLY , 0600 )"		5070486	2		=			
ANR	5070494	Identifier	fd		5070486	0					
ANR	5070495	CallExpression	"safe_open_wrapper_follow ( fileName . c_str ( ) , O_RDONLY , 0600 )"		5070486	1					
ANR	5070496	Callee	safe_open_wrapper_follow		5070486	0					
ANR	5070497	Identifier	safe_open_wrapper_follow		5070486	0					
ANR	5070498	ArgumentList	fileName . c_str ( )		5070486	1					
ANR	5070499	Argument	fileName . c_str ( )		5070486	0					
ANR	5070500	CallExpression	fileName . c_str ( )		5070486	0					
ANR	5070501	Callee	fileName . c_str		5070486	0					
ANR	5070502	MemberAccess	fileName . c_str		5070486	0					
ANR	5070503	Identifier	fileName		5070486	0					
ANR	5070504	Identifier	c_str		5070486	1					
ANR	5070505	ArgumentList			5070486	1					
ANR	5070506	Argument	O_RDONLY		5070486	1					
ANR	5070507	Identifier	O_RDONLY		5070486	0					
ANR	5070508	Argument	0600		5070486	2					
ANR	5070509	PrimaryExpression	0600		5070486	0					
ANR	5070510	IfStatement	if ( fd < 0 )		5070486	1					
ANR	5070511	Condition	fd < 0	117:8:3816:3821	5070486	0	True				
ANR	5070512	RelationalExpression	fd < 0		5070486	0		<			
ANR	5070513	Identifier	fd		5070486	0					
ANR	5070514	PrimaryExpression	0		5070486	1					
ANR	5070515	CompoundStatement		4:17:94:94	5070486	1					
ANR	5070516	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to open file '%s' for reading: '%s' (%d).\\n"" , fileName . c_str ( ) , strerror ( errno ) , errno )"	118:8:3835:3952	5070486	0	True				
ANR	5070517	CallExpression	"dprintf ( D_ALWAYS , ""Failed to open file '%s' for reading: '%s' (%d).\\n"" , fileName . c_str ( ) , strerror ( errno ) , errno )"		5070486	0					
ANR	5070518	Callee	dprintf		5070486	0					
ANR	5070519	Identifier	dprintf		5070486	0					
ANR	5070520	ArgumentList	D_ALWAYS		5070486	1					
ANR	5070521	Argument	D_ALWAYS		5070486	0					
ANR	5070522	Identifier	D_ALWAYS		5070486	0					
ANR	5070523	Argument	"""Failed to open file '%s' for reading: '%s' (%d).\\n"""		5070486	1					
ANR	5070524	PrimaryExpression	"""Failed to open file '%s' for reading: '%s' (%d).\\n"""		5070486	0					
ANR	5070525	Argument	fileName . c_str ( )		5070486	2					
ANR	5070526	CallExpression	fileName . c_str ( )		5070486	0					
ANR	5070527	Callee	fileName . c_str		5070486	0					
ANR	5070528	MemberAccess	fileName . c_str		5070486	0					
ANR	5070529	Identifier	fileName		5070486	0					
ANR	5070530	Identifier	c_str		5070486	1					
ANR	5070531	ArgumentList			5070486	1					
ANR	5070532	Argument	strerror ( errno )		5070486	3					
ANR	5070533	CallExpression	strerror ( errno )		5070486	0					
ANR	5070534	Callee	strerror		5070486	0					
ANR	5070535	Identifier	strerror		5070486	0					
ANR	5070536	ArgumentList	errno		5070486	1					
ANR	5070537	Argument	errno		5070486	0					
ANR	5070538	Identifier	errno		5070486	0					
ANR	5070539	Argument	errno		5070486	4					
ANR	5070540	Identifier	errno		5070486	0					
ANR	5070541	ReturnStatement	return false ;	119:8:3962:3974	5070486	1	True				
ANR	5070542	Identifier	false		5070486	0					
ANR	5070543	IdentifierDeclStatement	StatWrapper sw ( fd ) ;	122:4:3995:4015	5070486	2	True				
ANR	5070544	IdentifierDecl	sw ( fd )		5070486	0					
ANR	5070545	IdentifierDeclType	StatWrapper		5070486	0					
ANR	5070546	Identifier	sw		5070486	1					
ANR	5070547	Identifier	fd		5070486	2					
ANR	5070548	IdentifierDeclStatement	unsigned long fileSize = sw . GetBuf ( ) -> st_size ;	123:4:4021:4066	5070486	3	True				
ANR	5070549	IdentifierDecl	fileSize = sw . GetBuf ( ) -> st_size		5070486	0					
ANR	5070550	IdentifierDeclType	unsigned long		5070486	0					
ANR	5070551	Identifier	fileSize		5070486	1					
ANR	5070552	AssignmentExpression	fileSize = sw . GetBuf ( ) -> st_size		5070486	2		=			
ANR	5070553	Identifier	fileSize		5070486	0					
ANR	5070554	PtrMemberAccess	sw . GetBuf ( ) -> st_size		5070486	1					
ANR	5070555	CallExpression	sw . GetBuf ( )		5070486	0					
ANR	5070556	Callee	sw . GetBuf		5070486	0					
ANR	5070557	MemberAccess	sw . GetBuf		5070486	0					
ANR	5070558	Identifier	sw		5070486	0					
ANR	5070559	Identifier	GetBuf		5070486	1					
ANR	5070560	ArgumentList			5070486	1					
ANR	5070561	Identifier	st_size		5070486	1					
ANR	5070562	IdentifierDeclStatement	char * rawBuffer = ( char * ) malloc ( fileSize + 1 ) ;	125:4:4081:4130	5070486	4	True				
ANR	5070563	IdentifierDecl	* rawBuffer = ( char * ) malloc ( fileSize + 1 )		5070486	0					
ANR	5070564	IdentifierDeclType	char *		5070486	0					
ANR	5070565	Identifier	rawBuffer		5070486	1					
ANR	5070566	AssignmentExpression	* rawBuffer = ( char * ) malloc ( fileSize + 1 )		5070486	2		=			
ANR	5070567	Identifier	rawBuffer		5070486	0					
ANR	5070568	CastExpression	( char * ) malloc ( fileSize + 1 )		5070486	1					
ANR	5070569	CastTarget	char *		5070486	0					
ANR	5070570	CallExpression	malloc ( fileSize + 1 )		5070486	1					
ANR	5070571	Callee	malloc		5070486	0					
ANR	5070572	Identifier	malloc		5070486	0					
ANR	5070573	ArgumentList	fileSize + 1		5070486	1					
ANR	5070574	Argument	fileSize + 1		5070486	0					
ANR	5070575	AdditiveExpression	fileSize + 1		5070486	0		+			
ANR	5070576	Identifier	fileSize		5070486	0					
ANR	5070577	PrimaryExpression	1		5070486	1					
ANR	5070578	ExpressionStatement	assert ( rawBuffer != NULL )	126:4:4136:4163	5070486	5	True				
ANR	5070579	CallExpression	assert ( rawBuffer != NULL )		5070486	0					
ANR	5070580	Callee	assert		5070486	0					
ANR	5070581	Identifier	assert		5070486	0					
ANR	5070582	ArgumentList	rawBuffer != NULL		5070486	1					
ANR	5070583	Argument	rawBuffer != NULL		5070486	0					
ANR	5070584	EqualityExpression	rawBuffer != NULL		5070486	0		!=			
ANR	5070585	Identifier	rawBuffer		5070486	0					
ANR	5070586	Identifier	NULL		5070486	1					
ANR	5070587	IdentifierDeclStatement	"unsigned long totalRead = full_read ( fd , rawBuffer , fileSize ) ;"	127:4:4169:4231	5070486	6	True				
ANR	5070588	IdentifierDecl	"totalRead = full_read ( fd , rawBuffer , fileSize )"		5070486	0					
ANR	5070589	IdentifierDeclType	unsigned long		5070486	0					
ANR	5070590	Identifier	totalRead		5070486	1					
ANR	5070591	AssignmentExpression	"totalRead = full_read ( fd , rawBuffer , fileSize )"		5070486	2		=			
ANR	5070592	Identifier	totalRead		5070486	0					
ANR	5070593	CallExpression	"full_read ( fd , rawBuffer , fileSize )"		5070486	1					
ANR	5070594	Callee	full_read		5070486	0					
ANR	5070595	Identifier	full_read		5070486	0					
ANR	5070596	ArgumentList	fd		5070486	1					
ANR	5070597	Argument	fd		5070486	0					
ANR	5070598	Identifier	fd		5070486	0					
ANR	5070599	Argument	rawBuffer		5070486	1					
ANR	5070600	Identifier	rawBuffer		5070486	0					
ANR	5070601	Argument	fileSize		5070486	2					
ANR	5070602	Identifier	fileSize		5070486	0					
ANR	5070603	ExpressionStatement	close ( fd )	128:4:4237:4248	5070486	7	True				
ANR	5070604	CallExpression	close ( fd )		5070486	0					
ANR	5070605	Callee	close		5070486	0					
ANR	5070606	Identifier	close		5070486	0					
ANR	5070607	ArgumentList	fd		5070486	1					
ANR	5070608	Argument	fd		5070486	0					
ANR	5070609	Identifier	fd		5070486	0					
ANR	5070610	IfStatement	if ( totalRead != fileSize )		5070486	8					
ANR	5070611	Condition	totalRead != fileSize	129:8:4258:4278	5070486	0	True				
ANR	5070612	EqualityExpression	totalRead != fileSize		5070486	0		!=			
ANR	5070613	Identifier	totalRead		5070486	0					
ANR	5070614	Identifier	fileSize		5070486	1					
ANR	5070615	CompoundStatement		16:32:551:551	5070486	1					
ANR	5070616	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to completely read file '%s'; needed %lu but got %lu.\\n"" , fileName . c_str ( ) , fileSize , totalRead )"	130:8:4292:4428	5070486	0	True				
ANR	5070617	CallExpression	"dprintf ( D_ALWAYS , ""Failed to completely read file '%s'; needed %lu but got %lu.\\n"" , fileName . c_str ( ) , fileSize , totalRead )"		5070486	0					
ANR	5070618	Callee	dprintf		5070486	0					
ANR	5070619	Identifier	dprintf		5070486	0					
ANR	5070620	ArgumentList	D_ALWAYS		5070486	1					
ANR	5070621	Argument	D_ALWAYS		5070486	0					
ANR	5070622	Identifier	D_ALWAYS		5070486	0					
ANR	5070623	Argument	"""Failed to completely read file '%s'; needed %lu but got %lu.\\n"""		5070486	1					
ANR	5070624	PrimaryExpression	"""Failed to completely read file '%s'; needed %lu but got %lu.\\n"""		5070486	0					
ANR	5070625	Argument	fileName . c_str ( )		5070486	2					
ANR	5070626	CallExpression	fileName . c_str ( )		5070486	0					
ANR	5070627	Callee	fileName . c_str		5070486	0					
ANR	5070628	MemberAccess	fileName . c_str		5070486	0					
ANR	5070629	Identifier	fileName		5070486	0					
ANR	5070630	Identifier	c_str		5070486	1					
ANR	5070631	ArgumentList			5070486	1					
ANR	5070632	Argument	fileSize		5070486	3					
ANR	5070633	Identifier	fileSize		5070486	0					
ANR	5070634	Argument	totalRead		5070486	4					
ANR	5070635	Identifier	totalRead		5070486	0					
ANR	5070636	ExpressionStatement	free ( rawBuffer )	132:8:4438:4455	5070486	1	True				
ANR	5070637	CallExpression	free ( rawBuffer )		5070486	0					
ANR	5070638	Callee	free		5070486	0					
ANR	5070639	Identifier	free		5070486	0					
ANR	5070640	ArgumentList	rawBuffer		5070486	1					
ANR	5070641	Argument	rawBuffer		5070486	0					
ANR	5070642	Identifier	rawBuffer		5070486	0					
ANR	5070643	ReturnStatement	return false ;	133:8:4465:4477	5070486	2	True				
ANR	5070644	Identifier	false		5070486	0					
ANR	5070645	ExpressionStatement	rawBuffer [ fileSize ] = '\\0'	135:4:4493:4521	5070486	9	True				
ANR	5070646	AssignmentExpression	rawBuffer [ fileSize ] = '\\0'		5070486	0		=			
ANR	5070647	ArrayIndexing	rawBuffer [ fileSize ]		5070486	0					
ANR	5070648	Identifier	rawBuffer		5070486	0					
ANR	5070649	Identifier	fileSize		5070486	1					
ANR	5070650	PrimaryExpression	'\\0'		5070486	1					
ANR	5070651	ExpressionStatement	contents = rawBuffer	136:4:4527:4547	5070486	10	True				
ANR	5070652	AssignmentExpression	contents = rawBuffer		5070486	0		=			
ANR	5070653	Identifier	contents		5070486	0					
ANR	5070654	Identifier	rawBuffer		5070486	1					
ANR	5070655	ExpressionStatement	free ( rawBuffer )	137:4:4553:4570	5070486	11	True				
ANR	5070656	CallExpression	free ( rawBuffer )		5070486	0					
ANR	5070657	Callee	free		5070486	0					
ANR	5070658	Identifier	free		5070486	0					
ANR	5070659	ArgumentList	rawBuffer		5070486	1					
ANR	5070660	Argument	rawBuffer		5070486	0					
ANR	5070661	Identifier	rawBuffer		5070486	0					
ANR	5070662	ReturnStatement	return true ;	139:4:4581:4592	5070486	12	True				
ANR	5070663	Identifier	true		5070486	0					
ANR	5070664	ReturnType	bool		5070486	1					
ANR	5070665	Identifier	readShortFile		5070486	2					
ANR	5070666	ParameterList	"const std :: string & fileName , std :: string & contents"		5070486	3					
ANR	5070667	Parameter	const std :: string & fileName	114:20:3675:3702	5070486	0	True				
ANR	5070668	ParameterType	const std :: string &		5070486	0					
ANR	5070669	Identifier	fileName		5070486	1					
ANR	5070670	Parameter	std :: string & contents	114:50:3705:3726	5070486	1	True				
ANR	5070671	ParameterType	std :: string &		5070486	0					
ANR	5070672	Identifier	contents		5070486	1					
ANR	5070673	CFGEntryNode	ENTRY		5070486		True				
ANR	5070674	CFGExitNode	EXIT		5070486		True				
ANR	5070675	Symbol	malloc		5070486						
ANR	5070676	Symbol	fileName		5070486						
ANR	5070677	Symbol	errno		5070486						
ANR	5070678	Symbol	safe_open_wrapper_follow		5070486						
ANR	5070679	Symbol	NULL		5070486						
ANR	5070680	Symbol	sw		5070486						
ANR	5070681	Symbol	fileName . c_str		5070486						
ANR	5070682	Symbol	D_ALWAYS		5070486						
ANR	5070683	Symbol	false		5070486						
ANR	5070684	Symbol	* sw		5070486						
ANR	5070685	Symbol	totalRead		5070486						
ANR	5070686	Symbol	full_read		5070486						
ANR	5070687	Symbol	strerror		5070486						
ANR	5070688	Symbol	* fileSize		5070486						
ANR	5070689	Symbol	O_RDONLY		5070486						
ANR	5070690	Symbol	sw . GetBuf		5070486						
ANR	5070691	Symbol	contents		5070486						
ANR	5070692	Symbol	fileSize		5070486						
ANR	5070693	Symbol	* rawBuffer		5070486						
ANR	5070694	Symbol	true		5070486						
ANR	5070695	Symbol	* sw . GetBuf		5070486						
ANR	5070696	Symbol	rawBuffer		5070486						
ANR	5070697	Symbol	sw . GetBuf ( ) -> st_size		5070486						
ANR	5070698	Symbol	fd		5070486						
ANR	5070699	Function	appendToString	153:0:5156:5571							
ANR	5070700	FunctionDef	"appendToString (void * ptr , size_t size , size_t nmemb , void * str)"		5070699	0					
ANR	5070701	CompoundStatement		153:75:5231:5571	5070699	0					
ANR	5070702	IfStatement	if ( size == 0 || nmemb == 0 )		5070699	0					
ANR	5070703	Condition	size == 0 || nmemb == 0	154:8:5241:5263	5070699	0	True				
ANR	5070704	OrExpression	size == 0 || nmemb == 0		5070699	0		||			
ANR	5070705	EqualityExpression	size == 0		5070699	0		==			
ANR	5070706	Identifier	size		5070699	0					
ANR	5070707	PrimaryExpression	0		5070699	1					
ANR	5070708	EqualityExpression	nmemb == 0		5070699	1		==			
ANR	5070709	Identifier	nmemb		5070699	0					
ANR	5070710	PrimaryExpression	0		5070699	1					
ANR	5070711	CompoundStatement		2:34:35:35	5070699	1					
ANR	5070712	ReturnStatement	return 0 ;	154:36:5269:5277	5070699	0	True				
ANR	5070713	PrimaryExpression	0		5070699	0					
ANR	5070714	IdentifierDeclStatement	char * ucptr = ( char * ) ptr ;	156:4:5290:5316	5070699	1	True				
ANR	5070715	IdentifierDecl	* ucptr = ( char * ) ptr		5070699	0					
ANR	5070716	IdentifierDeclType	char *		5070699	0					
ANR	5070717	Identifier	ucptr		5070699	1					
ANR	5070718	AssignmentExpression	* ucptr = ( char * ) ptr		5070699	2		=			
ANR	5070719	Identifier	ucptr		5070699	0					
ANR	5070720	CastExpression	( char * ) ptr		5070699	1					
ANR	5070721	CastTarget	char *		5070699	0					
ANR	5070722	Identifier	ptr		5070699	1					
ANR	5070723	IdentifierDeclStatement	char last = ucptr [ ( size * nmemb ) - 1 ] ;	157:4:5322:5361	5070699	2	True				
ANR	5070724	IdentifierDecl	last = ucptr [ ( size * nmemb ) - 1 ]		5070699	0					
ANR	5070725	IdentifierDeclType	char		5070699	0					
ANR	5070726	Identifier	last		5070699	1					
ANR	5070727	AssignmentExpression	last = ucptr [ ( size * nmemb ) - 1 ]		5070699	2		=			
ANR	5070728	Identifier	last		5070699	0					
ANR	5070729	ArrayIndexing	ucptr [ ( size * nmemb ) - 1 ]		5070699	1					
ANR	5070730	Identifier	ucptr		5070699	0					
ANR	5070731	AdditiveExpression	( size * nmemb ) - 1		5070699	1		-			
ANR	5070732	MultiplicativeExpression	size * nmemb		5070699	0		*			
ANR	5070733	Identifier	size		5070699	0					
ANR	5070734	Identifier	nmemb		5070699	1					
ANR	5070735	PrimaryExpression	1		5070699	1					
ANR	5070736	ExpressionStatement	ucptr [ ( size * nmemb ) - 1 ] = '\\0'	158:4:5367:5401	5070699	3	True				
ANR	5070737	AssignmentExpression	ucptr [ ( size * nmemb ) - 1 ] = '\\0'		5070699	0		=			
ANR	5070738	ArrayIndexing	ucptr [ ( size * nmemb ) - 1 ]		5070699	0					
ANR	5070739	Identifier	ucptr		5070699	0					
ANR	5070740	AdditiveExpression	( size * nmemb ) - 1		5070699	1		-			
ANR	5070741	MultiplicativeExpression	size * nmemb		5070699	0		*			
ANR	5070742	Identifier	size		5070699	0					
ANR	5070743	Identifier	nmemb		5070699	1					
ANR	5070744	PrimaryExpression	1		5070699	1					
ANR	5070745	PrimaryExpression	'\\0'		5070699	1					
ANR	5070746	IdentifierDeclStatement	std :: string * ssptr = ( std :: string * ) str ;	159:4:5407:5447	5070699	4	True				
ANR	5070747	IdentifierDecl	* ssptr = ( std :: string * ) str		5070699	0					
ANR	5070748	IdentifierDeclType	std :: string *		5070699	0					
ANR	5070749	Identifier	ssptr		5070699	1					
ANR	5070750	AssignmentExpression	* ssptr = ( std :: string * ) str		5070699	2		=			
ANR	5070751	Identifier	ssptr		5070699	0					
ANR	5070752	CastExpression	( std :: string * ) str		5070699	1					
ANR	5070753	CastTarget	std :: string *		5070699	0					
ANR	5070754	Identifier	str		5070699	1					
ANR	5070755	ExpressionStatement	ssptr -> append ( ucptr )	160:4:5453:5475	5070699	5	True				
ANR	5070756	CallExpression	ssptr -> append ( ucptr )		5070699	0					
ANR	5070757	Callee	ssptr -> append		5070699	0					
ANR	5070758	PtrMemberAccess	ssptr -> append		5070699	0					
ANR	5070759	Identifier	ssptr		5070699	0					
ANR	5070760	Identifier	append		5070699	1					
ANR	5070761	ArgumentList	ucptr		5070699	1					
ANR	5070762	Argument	ucptr		5070699	0					
ANR	5070763	Identifier	ucptr		5070699	0					
ANR	5070764	ExpressionStatement	( * ssptr ) += last	161:4:5481:5497	5070699	6	True				
ANR	5070765	AssignmentExpression	( * ssptr ) += last		5070699	0		+=			
ANR	5070766	UnaryOperationExpression	* ssptr		5070699	0					
ANR	5070767	UnaryOperator	*		5070699	0					
ANR	5070768	Identifier	ssptr		5070699	1					
ANR	5070769	Identifier	last		5070699	1					
ANR	5070770	ExpressionStatement	ucptr [ ( size * nmemb ) - 1 ] = last	162:4:5503:5537	5070699	7	True				
ANR	5070771	AssignmentExpression	ucptr [ ( size * nmemb ) - 1 ] = last		5070699	0		=			
ANR	5070772	ArrayIndexing	ucptr [ ( size * nmemb ) - 1 ]		5070699	0					
ANR	5070773	Identifier	ucptr		5070699	0					
ANR	5070774	AdditiveExpression	( size * nmemb ) - 1		5070699	1		-			
ANR	5070775	MultiplicativeExpression	size * nmemb		5070699	0		*			
ANR	5070776	Identifier	size		5070699	0					
ANR	5070777	Identifier	nmemb		5070699	1					
ANR	5070778	PrimaryExpression	1		5070699	1					
ANR	5070779	Identifier	last		5070699	1					
ANR	5070780	ReturnStatement	return ( size * nmemb ) ;	164:4:5548:5569	5070699	8	True				
ANR	5070781	MultiplicativeExpression	size * nmemb		5070699	0		*			
ANR	5070782	Identifier	size		5070699	0					
ANR	5070783	Identifier	nmemb		5070699	1					
ANR	5070784	ReturnType	size_t		5070699	1					
ANR	5070785	Identifier	appendToString		5070699	2					
ANR	5070786	ParameterList	"void * ptr , size_t size , size_t nmemb , void * str"		5070699	3					
ANR	5070787	Parameter	void * ptr	153:23:5179:5188	5070699	0	True				
ANR	5070788	ParameterType	void *		5070699	0					
ANR	5070789	Identifier	ptr		5070699	1					
ANR	5070790	Parameter	size_t size	153:35:5191:5201	5070699	1	True				
ANR	5070791	ParameterType	size_t		5070699	0					
ANR	5070792	Identifier	size		5070699	1					
ANR	5070793	Parameter	size_t nmemb	153:48:5204:5215	5070699	2	True				
ANR	5070794	ParameterType	size_t		5070699	0					
ANR	5070795	Identifier	nmemb		5070699	1					
ANR	5070796	Parameter	void * str	153:62:5218:5227	5070699	3	True				
ANR	5070797	ParameterType	void *		5070699	0					
ANR	5070798	Identifier	str		5070699	1					
ANR	5070799	CFGEntryNode	ENTRY		5070699		True				
ANR	5070800	CFGExitNode	EXIT		5070699		True				
ANR	5070801	Symbol	str		5070699						
ANR	5070802	Symbol	* size		5070699						
ANR	5070803	Symbol	* ssptr		5070699						
ANR	5070804	Symbol	size		5070699						
ANR	5070805	Symbol	* nmemb		5070699						
ANR	5070806	Symbol	last		5070699						
ANR	5070807	Symbol	ssptr		5070699						
ANR	5070808	Symbol	nmemb		5070699						
ANR	5070809	Symbol	* ucptr		5070699						
ANR	5070810	Symbol	ptr		5070699						
ANR	5070811	Symbol	ucptr		5070699						
ANR	5070812	Function	AmazonRequest :: AmazonRequest	167:0:5574:5607							
ANR	5070813	FunctionDef	AmazonRequest :: AmazonRequest ()		5070812	0					
ANR	5070814	CompoundStatement		167:31:5605:5607	5070812	0					
ANR	5070815	Identifier	AmazonRequest :: AmazonRequest		5070812	1					
ANR	5070816	ParameterList			5070812	2					
ANR	5070817	CFGEntryNode	ENTRY		5070812		True				
ANR	5070818	CFGExitNode	EXIT		5070812		True				
ANR	5070819	Function	AmazonRequest :: ~AmazonRequest	169:0:5610:5644							
ANR	5070820	FunctionDef	AmazonRequest :: ~AmazonRequest ()		5070819	0					
ANR	5070821	CompoundStatement		169:32:5642:5644	5070819	0					
ANR	5070822	Identifier	AmazonRequest :: ~AmazonRequest		5070819	1					
ANR	5070823	ParameterList			5070819	2					
ANR	5070824	CFGEntryNode	ENTRY		5070819		True				
ANR	5070825	CFGExitNode	EXIT		5070819		True				
ANR	5070826	DeclStmt									
ANR	5070827	Decl							CURLcode rv	CURLcode rv	B
ANR	5070828	Function	AmazonRequest :: SendRequest	182:0:6066:19749							
ANR	5070829	FunctionDef	AmazonRequest :: SendRequest ()		5070828	0					
ANR	5070830	CompoundStatement		182:34:6100:19749	5070828	0					
ANR	5070831	IfStatement	"if ( query_parameters . find ( ""Action"" ) == query_parameters . end ( ) )"		5070828	0					
ANR	5070832	Condition	"query_parameters . find ( ""Action"" ) == query_parameters . end ( )"	190:8:6324:6382	5070828	0	True				
ANR	5070833	EqualityExpression	"query_parameters . find ( ""Action"" ) == query_parameters . end ( )"		5070828	0		==			
ANR	5070834	CallExpression	"query_parameters . find ( ""Action"" )"		5070828	0					
ANR	5070835	Callee	query_parameters . find		5070828	0					
ANR	5070836	MemberAccess	query_parameters . find		5070828	0					
ANR	5070837	Identifier	query_parameters		5070828	0					
ANR	5070838	Identifier	find		5070828	1					
ANR	5070839	ArgumentList	"""Action"""		5070828	1					
ANR	5070840	Argument	"""Action"""		5070828	0					
ANR	5070841	PrimaryExpression	"""Action"""		5070828	0					
ANR	5070842	CallExpression	query_parameters . end ( )		5070828	1					
ANR	5070843	Callee	query_parameters . end		5070828	0					
ANR	5070844	MemberAccess	query_parameters . end		5070828	0					
ANR	5070845	Identifier	query_parameters		5070828	0					
ANR	5070846	Identifier	end		5070828	1					
ANR	5070847	ArgumentList			5070828	1					
ANR	5070848	CompoundStatement		9:70:285:285	5070828	1					
ANR	5070849	ExpressionStatement	"this -> errorCode = ""E_INTERNAL"""	191:8:6396:6426	5070828	0	True				
ANR	5070850	AssignmentExpression	"this -> errorCode = ""E_INTERNAL"""		5070828	0		=			
ANR	5070851	PtrMemberAccess	this -> errorCode		5070828	0					
ANR	5070852	Identifier	this		5070828	0					
ANR	5070853	Identifier	errorCode		5070828	1					
ANR	5070854	PrimaryExpression	"""E_INTERNAL"""		5070828	1					
ANR	5070855	ExpressionStatement	"this -> errorMessage = ""No action specified in request."""	192:8:6436:6490	5070828	1	True				
ANR	5070856	AssignmentExpression	"this -> errorMessage = ""No action specified in request."""		5070828	0		=			
ANR	5070857	PtrMemberAccess	this -> errorMessage		5070828	0					
ANR	5070858	Identifier	this		5070828	0					
ANR	5070859	Identifier	errorMessage		5070828	1					
ANR	5070860	PrimaryExpression	"""No action specified in request."""		5070828	1					
ANR	5070861	ExpressionStatement	"dprintf ( D_ALWAYS , ""No action specified in request, failing.\\n"" )"	193:8:6500:6565	5070828	2	True				
ANR	5070862	CallExpression	"dprintf ( D_ALWAYS , ""No action specified in request, failing.\\n"" )"		5070828	0					
ANR	5070863	Callee	dprintf		5070828	0					
ANR	5070864	Identifier	dprintf		5070828	0					
ANR	5070865	ArgumentList	D_ALWAYS		5070828	1					
ANR	5070866	Argument	D_ALWAYS		5070828	0					
ANR	5070867	Identifier	D_ALWAYS		5070828	0					
ANR	5070868	Argument	"""No action specified in request, failing.\\n"""		5070828	1					
ANR	5070869	PrimaryExpression	"""No action specified in request, failing.\\n"""		5070828	0					
ANR	5070870	ReturnStatement	return false ;	194:8:6575:6587	5070828	3	True				
ANR	5070871	Identifier	false		5070828	0					
ANR	5070872	IdentifierDeclStatement	Regex r ;	202:4:6909:6916	5070828	1	True				
ANR	5070873	IdentifierDecl	r		5070828	0					
ANR	5070874	IdentifierDeclType	Regex		5070828	0					
ANR	5070875	Identifier	r		5070828	1					
ANR	5070876	IdentifierDeclStatement	int errCode = 0 ;	202:13:6918:6933	5070828	2	True				
ANR	5070877	IdentifierDecl	errCode = 0		5070828	0					
ANR	5070878	IdentifierDeclType	int		5070828	0					
ANR	5070879	Identifier	errCode		5070828	1					
ANR	5070880	AssignmentExpression	errCode = 0		5070828	2		=			
ANR	5070881	Identifier	errCode		5070828	0					
ANR	5070882	PrimaryExpression	0		5070828	1					
ANR	5070883	IdentifierDeclStatement	const char * errString = 0 ;	202:30:6935:6961	5070828	3	True				
ANR	5070884	IdentifierDecl	* errString = 0		5070828	0					
ANR	5070885	IdentifierDeclType	const char *		5070828	0					
ANR	5070886	Identifier	errString		5070828	1					
ANR	5070887	AssignmentExpression	* errString = 0		5070828	2		=			
ANR	5070888	Identifier	errString		5070828	0					
ANR	5070889	PrimaryExpression	0		5070828	1					
ANR	5070890	IdentifierDeclStatement	"bool patternOK = r . compile ( ""([^:]+)://(([^/]+)(/.*)?)"" , & errString , & errCode ) ;"	203:4:6967:7048	5070828	4	True				
ANR	5070891	IdentifierDecl	"patternOK = r . compile ( ""([^:]+)://(([^/]+)(/.*)?)"" , & errString , & errCode )"		5070828	0					
ANR	5070892	IdentifierDeclType	bool		5070828	0					
ANR	5070893	Identifier	patternOK		5070828	1					
ANR	5070894	AssignmentExpression	"patternOK = r . compile ( ""([^:]+)://(([^/]+)(/.*)?)"" , & errString , & errCode )"		5070828	2		=			
ANR	5070895	Identifier	patternOK		5070828	0					
ANR	5070896	CallExpression	"r . compile ( ""([^:]+)://(([^/]+)(/.*)?)"" , & errString , & errCode )"		5070828	1					
ANR	5070897	Callee	r . compile		5070828	0					
ANR	5070898	MemberAccess	r . compile		5070828	0					
ANR	5070899	Identifier	r		5070828	0					
ANR	5070900	Identifier	compile		5070828	1					
ANR	5070901	ArgumentList	"""([^:]+)://(([^/]+)(/.*)?)"""		5070828	1					
ANR	5070902	Argument	"""([^:]+)://(([^/]+)(/.*)?)"""		5070828	0					
ANR	5070903	PrimaryExpression	"""([^:]+)://(([^/]+)(/.*)?)"""		5070828	0					
ANR	5070904	Argument	& errString		5070828	1					
ANR	5070905	UnaryOperationExpression	& errString		5070828	0					
ANR	5070906	UnaryOperator	&		5070828	0					
ANR	5070907	Identifier	errString		5070828	1					
ANR	5070908	Argument	& errCode		5070828	2					
ANR	5070909	UnaryOperationExpression	& errCode		5070828	0					
ANR	5070910	UnaryOperator	&		5070828	0					
ANR	5070911	Identifier	errCode		5070828	1					
ANR	5070912	ExpressionStatement	assert ( patternOK )	204:4:7054:7073	5070828	5	True				
ANR	5070913	CallExpression	assert ( patternOK )		5070828	0					
ANR	5070914	Callee	assert		5070828	0					
ANR	5070915	Identifier	assert		5070828	0					
ANR	5070916	ArgumentList	patternOK		5070828	1					
ANR	5070917	Argument	patternOK		5070828	0					
ANR	5070918	Identifier	patternOK		5070828	0					
ANR	5070919	IdentifierDeclStatement	ExtArray < MyString > groups ( 5 ) ;	205:4:7079:7107	5070828	6	True				
ANR	5070920	IdentifierDecl	groups ( 5 )		5070828	0					
ANR	5070921	IdentifierDeclType	ExtArray < MyString >		5070828	0					
ANR	5070922	Identifier	groups		5070828	1					
ANR	5070923	PrimaryExpression	5		5070828	2					
ANR	5070924	IdentifierDeclStatement	"bool matchFound = r . match ( this -> serviceURL . c_str ( ) , & groups ) ;"	206:4:7113:7176	5070828	7	True				
ANR	5070925	IdentifierDecl	"matchFound = r . match ( this -> serviceURL . c_str ( ) , & groups )"		5070828	0					
ANR	5070926	IdentifierDeclType	bool		5070828	0					
ANR	5070927	Identifier	matchFound		5070828	1					
ANR	5070928	AssignmentExpression	"matchFound = r . match ( this -> serviceURL . c_str ( ) , & groups )"		5070828	2		=			
ANR	5070929	Identifier	matchFound		5070828	0					
ANR	5070930	CallExpression	"r . match ( this -> serviceURL . c_str ( ) , & groups )"		5070828	1					
ANR	5070931	Callee	r . match		5070828	0					
ANR	5070932	MemberAccess	r . match		5070828	0					
ANR	5070933	Identifier	r		5070828	0					
ANR	5070934	Identifier	match		5070828	1					
ANR	5070935	ArgumentList	this -> serviceURL . c_str ( )		5070828	1					
ANR	5070936	Argument	this -> serviceURL . c_str ( )		5070828	0					
ANR	5070937	CallExpression	this -> serviceURL . c_str ( )		5070828	0					
ANR	5070938	Callee	this -> serviceURL . c_str		5070828	0					
ANR	5070939	MemberAccess	this -> serviceURL . c_str		5070828	0					
ANR	5070940	PtrMemberAccess	this -> serviceURL		5070828	0					
ANR	5070941	Identifier	this		5070828	0					
ANR	5070942	Identifier	serviceURL		5070828	1					
ANR	5070943	Identifier	c_str		5070828	1					
ANR	5070944	ArgumentList			5070828	1					
ANR	5070945	Argument	& groups		5070828	1					
ANR	5070946	UnaryOperationExpression	& groups		5070828	0					
ANR	5070947	UnaryOperator	&		5070828	0					
ANR	5070948	Identifier	groups		5070828	1					
ANR	5070949	IfStatement	"if ( ( ! matchFound ) || ( groups [ 1 ] != ""http"" && groups [ 1 ] != ""https"" && groups [ 1 ] != ""x509"" ) )"		5070828	8					
ANR	5070950	Condition	"( ! matchFound ) || ( groups [ 1 ] != ""http"" && groups [ 1 ] != ""https"" && groups [ 1 ] != ""x509"" )"	207:8:7186:7272	5070828	0	True				
ANR	5070951	OrExpression	"( ! matchFound ) || ( groups [ 1 ] != ""http"" && groups [ 1 ] != ""https"" && groups [ 1 ] != ""x509"" )"		5070828	0		||			
ANR	5070952	UnaryOperationExpression	! matchFound		5070828	0					
ANR	5070953	UnaryOperator	!		5070828	0					
ANR	5070954	Identifier	matchFound		5070828	1					
ANR	5070955	AndExpression	"groups [ 1 ] != ""http"" && groups [ 1 ] != ""https"" && groups [ 1 ] != ""x509"""		5070828	1		&&			
ANR	5070956	EqualityExpression	"groups [ 1 ] != ""http"""		5070828	0		!=			
ANR	5070957	ArrayIndexing	groups [ 1 ]		5070828	0					
ANR	5070958	Identifier	groups		5070828	0					
ANR	5070959	PrimaryExpression	1		5070828	1					
ANR	5070960	PrimaryExpression	"""http"""		5070828	1					
ANR	5070961	AndExpression	"groups [ 1 ] != ""https"" && groups [ 1 ] != ""x509"""		5070828	1		&&			
ANR	5070962	EqualityExpression	"groups [ 1 ] != ""https"""		5070828	0		!=			
ANR	5070963	ArrayIndexing	groups [ 1 ]		5070828	0					
ANR	5070964	Identifier	groups		5070828	0					
ANR	5070965	PrimaryExpression	1		5070828	1					
ANR	5070966	PrimaryExpression	"""https"""		5070828	1					
ANR	5070967	EqualityExpression	"groups [ 1 ] != ""x509"""		5070828	1		!=			
ANR	5070968	ArrayIndexing	groups [ 1 ]		5070828	0					
ANR	5070969	Identifier	groups		5070828	0					
ANR	5070970	PrimaryExpression	1		5070828	1					
ANR	5070971	PrimaryExpression	"""x509"""		5070828	1					
ANR	5070972	CompoundStatement		26:98:1175:1175	5070828	1					
ANR	5070973	ExpressionStatement	"this -> errorCode = ""E_INVALID_SERVICE_URL"""	208:8:7286:7327	5070828	0	True				
ANR	5070974	AssignmentExpression	"this -> errorCode = ""E_INVALID_SERVICE_URL"""		5070828	0		=			
ANR	5070975	PtrMemberAccess	this -> errorCode		5070828	0					
ANR	5070976	Identifier	this		5070828	0					
ANR	5070977	Identifier	errorCode		5070828	1					
ANR	5070978	PrimaryExpression	"""E_INVALID_SERVICE_URL"""		5070828	1					
ANR	5070979	ExpressionStatement	"this -> errorMessage = ""Failed to parse service URL."""	209:8:7337:7388	5070828	1	True				
ANR	5070980	AssignmentExpression	"this -> errorMessage = ""Failed to parse service URL."""		5070828	0		=			
ANR	5070981	PtrMemberAccess	this -> errorMessage		5070828	0					
ANR	5070982	Identifier	this		5070828	0					
ANR	5070983	Identifier	errorMessage		5070828	1					
ANR	5070984	PrimaryExpression	"""Failed to parse service URL."""		5070828	1					
ANR	5070985	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to match regex against service URL '%s'.\\n"" , serviceURL . c_str ( ) )"	210:8:7398:7490	5070828	2	True				
ANR	5070986	CallExpression	"dprintf ( D_ALWAYS , ""Failed to match regex against service URL '%s'.\\n"" , serviceURL . c_str ( ) )"		5070828	0					
ANR	5070987	Callee	dprintf		5070828	0					
ANR	5070988	Identifier	dprintf		5070828	0					
ANR	5070989	ArgumentList	D_ALWAYS		5070828	1					
ANR	5070990	Argument	D_ALWAYS		5070828	0					
ANR	5070991	Identifier	D_ALWAYS		5070828	0					
ANR	5070992	Argument	"""Failed to match regex against service URL '%s'.\\n"""		5070828	1					
ANR	5070993	PrimaryExpression	"""Failed to match regex against service URL '%s'.\\n"""		5070828	0					
ANR	5070994	Argument	serviceURL . c_str ( )		5070828	2					
ANR	5070995	CallExpression	serviceURL . c_str ( )		5070828	0					
ANR	5070996	Callee	serviceURL . c_str		5070828	0					
ANR	5070997	MemberAccess	serviceURL . c_str		5070828	0					
ANR	5070998	Identifier	serviceURL		5070828	0					
ANR	5070999	Identifier	c_str		5070828	1					
ANR	5071000	ArgumentList			5070828	1					
ANR	5071001	ReturnStatement	return false ;	211:8:7500:7512	5070828	3	True				
ANR	5071002	Identifier	false		5070828	0					
ANR	5071003	IdentifierDeclStatement	std :: string protocol = groups [ 1 ] ;	213:4:7524:7556	5070828	9	True				
ANR	5071004	IdentifierDecl	protocol = groups [ 1 ]		5070828	0					
ANR	5071005	IdentifierDeclType	std :: string		5070828	0					
ANR	5071006	Identifier	protocol		5070828	1					
ANR	5071007	AssignmentExpression	protocol = groups [ 1 ]		5070828	2		=			
ANR	5071008	Identifier	protocol		5070828	0					
ANR	5071009	ArrayIndexing	groups [ 1 ]		5070828	1					
ANR	5071010	Identifier	groups		5070828	0					
ANR	5071011	PrimaryExpression	1		5070828	1					
ANR	5071012	IdentifierDeclStatement	std :: string hostAndPath = groups [ 2 ] ;	214:4:7562:7597	5070828	10	True				
ANR	5071013	IdentifierDecl	hostAndPath = groups [ 2 ]		5070828	0					
ANR	5071014	IdentifierDeclType	std :: string		5070828	0					
ANR	5071015	Identifier	hostAndPath		5070828	1					
ANR	5071016	AssignmentExpression	hostAndPath = groups [ 2 ]		5070828	2		=			
ANR	5071017	Identifier	hostAndPath		5070828	0					
ANR	5071018	ArrayIndexing	groups [ 2 ]		5070828	1					
ANR	5071019	Identifier	groups		5070828	0					
ANR	5071020	PrimaryExpression	2		5070828	1					
ANR	5071021	IdentifierDeclStatement	std :: string valueOfHostHeaderInLowercase = groups [ 3 ] ;	215:4:7603:7655	5070828	11	True				
ANR	5071022	IdentifierDecl	valueOfHostHeaderInLowercase = groups [ 3 ]		5070828	0					
ANR	5071023	IdentifierDeclType	std :: string		5070828	0					
ANR	5071024	Identifier	valueOfHostHeaderInLowercase		5070828	1					
ANR	5071025	AssignmentExpression	valueOfHostHeaderInLowercase = groups [ 3 ]		5070828	2		=			
ANR	5071026	Identifier	valueOfHostHeaderInLowercase		5070828	0					
ANR	5071027	ArrayIndexing	groups [ 3 ]		5070828	1					
ANR	5071028	Identifier	groups		5070828	0					
ANR	5071029	PrimaryExpression	3		5070828	1					
ANR	5071030	ExpressionStatement	"std :: transform ( valueOfHostHeaderInLowercase . begin ( ) , valueOfHostHeaderInLowercase . end ( ) , valueOfHostHeaderInLowercase . begin ( ) , & tolower )"	216:4:7661:7860	5070828	12	True				
ANR	5071031	CallExpression	"std :: transform ( valueOfHostHeaderInLowercase . begin ( ) , valueOfHostHeaderInLowercase . end ( ) , valueOfHostHeaderInLowercase . begin ( ) , & tolower )"		5070828	0					
ANR	5071032	Callee	std :: transform		5070828	0					
ANR	5071033	Identifier	std :: transform		5070828	0					
ANR	5071034	ArgumentList	valueOfHostHeaderInLowercase . begin ( )		5070828	1					
ANR	5071035	Argument	valueOfHostHeaderInLowercase . begin ( )		5070828	0					
ANR	5071036	CallExpression	valueOfHostHeaderInLowercase . begin ( )		5070828	0					
ANR	5071037	Callee	valueOfHostHeaderInLowercase . begin		5070828	0					
ANR	5071038	MemberAccess	valueOfHostHeaderInLowercase . begin		5070828	0					
ANR	5071039	Identifier	valueOfHostHeaderInLowercase		5070828	0					
ANR	5071040	Identifier	begin		5070828	1					
ANR	5071041	ArgumentList			5070828	1					
ANR	5071042	Argument	valueOfHostHeaderInLowercase . end ( )		5070828	1					
ANR	5071043	CallExpression	valueOfHostHeaderInLowercase . end ( )		5070828	0					
ANR	5071044	Callee	valueOfHostHeaderInLowercase . end		5070828	0					
ANR	5071045	MemberAccess	valueOfHostHeaderInLowercase . end		5070828	0					
ANR	5071046	Identifier	valueOfHostHeaderInLowercase		5070828	0					
ANR	5071047	Identifier	end		5070828	1					
ANR	5071048	ArgumentList			5070828	1					
ANR	5071049	Argument	valueOfHostHeaderInLowercase . begin ( )		5070828	2					
ANR	5071050	CallExpression	valueOfHostHeaderInLowercase . begin ( )		5070828	0					
ANR	5071051	Callee	valueOfHostHeaderInLowercase . begin		5070828	0					
ANR	5071052	MemberAccess	valueOfHostHeaderInLowercase . begin		5070828	0					
ANR	5071053	Identifier	valueOfHostHeaderInLowercase		5070828	0					
ANR	5071054	Identifier	begin		5070828	1					
ANR	5071055	ArgumentList			5070828	1					
ANR	5071056	Argument	& tolower		5070828	3					
ANR	5071057	UnaryOperationExpression	& tolower		5070828	0					
ANR	5071058	UnaryOperator	&		5070828	0					
ANR	5071059	Identifier	tolower		5070828	1					
ANR	5071060	IdentifierDeclStatement	std :: string httpRequestURI = groups [ 4 ] ;	220:4:7866:7904	5070828	13	True				
ANR	5071061	IdentifierDecl	httpRequestURI = groups [ 4 ]		5070828	0					
ANR	5071062	IdentifierDeclType	std :: string		5070828	0					
ANR	5071063	Identifier	httpRequestURI		5070828	1					
ANR	5071064	AssignmentExpression	httpRequestURI = groups [ 4 ]		5070828	2		=			
ANR	5071065	Identifier	httpRequestURI		5070828	0					
ANR	5071066	ArrayIndexing	groups [ 4 ]		5070828	1					
ANR	5071067	Identifier	groups		5070828	0					
ANR	5071068	PrimaryExpression	4		5070828	1					
ANR	5071069	IfStatement	if ( httpRequestURI . empty ( ) )		5070828	14					
ANR	5071070	Condition	httpRequestURI . empty ( )	221:8:7914:7935	5070828	0	True				
ANR	5071071	CallExpression	httpRequestURI . empty ( )		5070828	0					
ANR	5071072	Callee	httpRequestURI . empty		5070828	0					
ANR	5071073	MemberAccess	httpRequestURI . empty		5070828	0					
ANR	5071074	Identifier	httpRequestURI		5070828	0					
ANR	5071075	Identifier	empty		5070828	1					
ANR	5071076	ArgumentList			5070828	1					
ANR	5071077	CompoundStatement		40:33:1838:1838	5070828	1					
ANR	5071078	ExpressionStatement	"httpRequestURI = ""/"""	221:35:7941:7961	5070828	0	True				
ANR	5071079	AssignmentExpression	"httpRequestURI = ""/"""		5070828	0		=			
ANR	5071080	Identifier	httpRequestURI		5070828	0					
ANR	5071081	PrimaryExpression	"""/"""		5070828	1					
ANR	5071082	IdentifierDeclStatement	std :: string keyID ;	227:4:8102:8119	5070828	15	True				
ANR	5071083	IdentifierDecl	keyID		5070828	0					
ANR	5071084	IdentifierDeclType	std :: string		5070828	0					
ANR	5071085	Identifier	keyID		5070828	1					
ANR	5071086	IfStatement	"if ( protocol == ""x509"" )"		5070828	16					
ANR	5071087	Condition	"protocol == ""x509"""	228:8:8129:8146	5070828	0	True				
ANR	5071088	EqualityExpression	"protocol == ""x509"""		5070828	0		==			
ANR	5071089	Identifier	protocol		5070828	0					
ANR	5071090	PrimaryExpression	"""x509"""		5070828	1					
ANR	5071091	CompoundStatement		47:29:2049:2049	5070828	1					
ANR	5071092	ExpressionStatement	"keyID = getenv ( ""USER"" )"	229:8:8160:8184	5070828	0	True				
ANR	5071093	AssignmentExpression	"keyID = getenv ( ""USER"" )"		5070828	0		=			
ANR	5071094	Identifier	keyID		5070828	0					
ANR	5071095	CallExpression	"getenv ( ""USER"" )"		5070828	1					
ANR	5071096	Callee	getenv		5070828	0					
ANR	5071097	Identifier	getenv		5070828	0					
ANR	5071098	ArgumentList	"""USER"""		5070828	1					
ANR	5071099	Argument	"""USER"""		5070828	0					
ANR	5071100	PrimaryExpression	"""USER"""		5070828	0					
ANR	5071101	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Using '%s' as access key ID for x.509\\n"" , keyID . c_str ( ) )"	230:8:8194:8274	5070828	1	True				
ANR	5071102	CallExpression	"dprintf ( D_FULLDEBUG , ""Using '%s' as access key ID for x.509\\n"" , keyID . c_str ( ) )"		5070828	0					
ANR	5071103	Callee	dprintf		5070828	0					
ANR	5071104	Identifier	dprintf		5070828	0					
ANR	5071105	ArgumentList	D_FULLDEBUG		5070828	1					
ANR	5071106	Argument	D_FULLDEBUG		5070828	0					
ANR	5071107	Identifier	D_FULLDEBUG		5070828	0					
ANR	5071108	Argument	"""Using '%s' as access key ID for x.509\\n"""		5070828	1					
ANR	5071109	PrimaryExpression	"""Using '%s' as access key ID for x.509\\n"""		5070828	0					
ANR	5071110	Argument	keyID . c_str ( )		5070828	2					
ANR	5071111	CallExpression	keyID . c_str ( )		5070828	0					
ANR	5071112	Callee	keyID . c_str		5070828	0					
ANR	5071113	MemberAccess	keyID . c_str		5070828	0					
ANR	5071114	Identifier	keyID		5070828	0					
ANR	5071115	Identifier	c_str		5070828	1					
ANR	5071116	ArgumentList			5070828	1					
ANR	5071117	ElseStatement	else		5070828	0					
ANR	5071118	CompoundStatement		50:11:2186:2186	5070828	0					
ANR	5071119	IfStatement	"if ( ! readShortFile ( this -> accessKeyFile , keyID ) )"		5070828	0					
ANR	5071120	Condition	"! readShortFile ( this -> accessKeyFile , keyID )"	232:12:8301:8345	5070828	0	True				
ANR	5071121	UnaryOperationExpression	"! readShortFile ( this -> accessKeyFile , keyID )"		5070828	0					
ANR	5071122	UnaryOperator	!		5070828	0					
ANR	5071123	CallExpression	"readShortFile ( this -> accessKeyFile , keyID )"		5070828	1					
ANR	5071124	Callee	readShortFile		5070828	0					
ANR	5071125	Identifier	readShortFile		5070828	0					
ANR	5071126	ArgumentList	this -> accessKeyFile		5070828	1					
ANR	5071127	Argument	this -> accessKeyFile		5070828	0					
ANR	5071128	PtrMemberAccess	this -> accessKeyFile		5070828	0					
ANR	5071129	Identifier	this		5070828	0					
ANR	5071130	Identifier	accessKeyFile		5070828	1					
ANR	5071131	Argument	keyID		5070828	1					
ANR	5071132	Identifier	keyID		5070828	0					
ANR	5071133	CompoundStatement		51:60:2248:2248	5070828	1					
ANR	5071134	ExpressionStatement	"this -> errorCode = ""E_FILE_IO"""	233:12:8363:8392	5070828	0	True				
ANR	5071135	AssignmentExpression	"this -> errorCode = ""E_FILE_IO"""		5070828	0		=			
ANR	5071136	PtrMemberAccess	this -> errorCode		5070828	0					
ANR	5071137	Identifier	this		5070828	0					
ANR	5071138	Identifier	errorCode		5070828	1					
ANR	5071139	PrimaryExpression	"""E_FILE_IO"""		5070828	1					
ANR	5071140	ExpressionStatement	"this -> errorMessage = ""Unable to read from accesskey file '"" + this -> accessKeyFile + ""'."""	234:12:8406:8494	5070828	1	True				
ANR	5071141	AssignmentExpression	"this -> errorMessage = ""Unable to read from accesskey file '"" + this -> accessKeyFile + ""'."""		5070828	0		=			
ANR	5071142	PtrMemberAccess	this -> errorMessage		5070828	0					
ANR	5071143	Identifier	this		5070828	0					
ANR	5071144	Identifier	errorMessage		5070828	1					
ANR	5071145	AdditiveExpression	"""Unable to read from accesskey file '"" + this -> accessKeyFile + ""'."""		5070828	1		+			
ANR	5071146	PrimaryExpression	"""Unable to read from accesskey file '"""		5070828	0					
ANR	5071147	AdditiveExpression	"this -> accessKeyFile + ""'."""		5070828	1		+			
ANR	5071148	PtrMemberAccess	this -> accessKeyFile		5070828	0					
ANR	5071149	Identifier	this		5070828	0					
ANR	5071150	Identifier	accessKeyFile		5070828	1					
ANR	5071151	PrimaryExpression	"""'."""		5070828	1					
ANR	5071152	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to read accesskey file '%s', failing.\\n"" , this -> accessKeyFile . c_str ( ) )"	235:12:8508:8606	5070828	2	True				
ANR	5071153	CallExpression	"dprintf ( D_ALWAYS , ""Unable to read accesskey file '%s', failing.\\n"" , this -> accessKeyFile . c_str ( ) )"		5070828	0					
ANR	5071154	Callee	dprintf		5070828	0					
ANR	5071155	Identifier	dprintf		5070828	0					
ANR	5071156	ArgumentList	D_ALWAYS		5070828	1					
ANR	5071157	Argument	D_ALWAYS		5070828	0					
ANR	5071158	Identifier	D_ALWAYS		5070828	0					
ANR	5071159	Argument	"""Unable to read accesskey file '%s', failing.\\n"""		5070828	1					
ANR	5071160	PrimaryExpression	"""Unable to read accesskey file '%s', failing.\\n"""		5070828	0					
ANR	5071161	Argument	this -> accessKeyFile . c_str ( )		5070828	2					
ANR	5071162	CallExpression	this -> accessKeyFile . c_str ( )		5070828	0					
ANR	5071163	Callee	this -> accessKeyFile . c_str		5070828	0					
ANR	5071164	MemberAccess	this -> accessKeyFile . c_str		5070828	0					
ANR	5071165	PtrMemberAccess	this -> accessKeyFile		5070828	0					
ANR	5071166	Identifier	this		5070828	0					
ANR	5071167	Identifier	accessKeyFile		5070828	1					
ANR	5071168	Identifier	c_str		5070828	1					
ANR	5071169	ArgumentList			5070828	1					
ANR	5071170	ReturnStatement	return false ;	236:12:8620:8632	5070828	3	True				
ANR	5071171	Identifier	false		5070828	0					
ANR	5071172	IfStatement	if ( keyID [ keyID . length ( ) - 1 ] == '\\n' )		5070828	1					
ANR	5071173	Condition	keyID [ keyID . length ( ) - 1 ] == '\\n'	238:12:8656:8690	5070828	0	True				
ANR	5071174	EqualityExpression	keyID [ keyID . length ( ) - 1 ] == '\\n'		5070828	0		==			
ANR	5071175	ArrayIndexing	keyID [ keyID . length ( ) - 1 ]		5070828	0					
ANR	5071176	Identifier	keyID		5070828	0					
ANR	5071177	AdditiveExpression	keyID . length ( ) - 1		5070828	1		-			
ANR	5071178	CallExpression	keyID . length ( )		5070828	0					
ANR	5071179	Callee	keyID . length		5070828	0					
ANR	5071180	MemberAccess	keyID . length		5070828	0					
ANR	5071181	Identifier	keyID		5070828	0					
ANR	5071182	Identifier	length		5070828	1					
ANR	5071183	ArgumentList			5070828	1					
ANR	5071184	PrimaryExpression	1		5070828	1					
ANR	5071185	PrimaryExpression	'\\n'		5070828	1					
ANR	5071186	CompoundStatement		57:50:2593:2593	5070828	1					
ANR	5071187	ExpressionStatement	keyID . erase ( keyID . length ( ) - 1 )	238:52:8696:8729	5070828	0	True				
ANR	5071188	CallExpression	keyID . erase ( keyID . length ( ) - 1 )		5070828	0					
ANR	5071189	Callee	keyID . erase		5070828	0					
ANR	5071190	MemberAccess	keyID . erase		5070828	0					
ANR	5071191	Identifier	keyID		5070828	0					
ANR	5071192	Identifier	erase		5070828	1					
ANR	5071193	ArgumentList	keyID . length ( ) - 1		5070828	1					
ANR	5071194	Argument	keyID . length ( ) - 1		5070828	0					
ANR	5071195	AdditiveExpression	keyID . length ( ) - 1		5070828	0		-			
ANR	5071196	CallExpression	keyID . length ( )		5070828	0					
ANR	5071197	Callee	keyID . length		5070828	0					
ANR	5071198	MemberAccess	keyID . length		5070828	0					
ANR	5071199	Identifier	keyID		5070828	0					
ANR	5071200	Identifier	length		5070828	1					
ANR	5071201	ArgumentList			5070828	1					
ANR	5071202	PrimaryExpression	1		5070828	1					
ANR	5071203	ExpressionStatement	"query_parameters . insert ( std :: make_pair ( ""AWSAccessKeyId"" , keyID ) )"	240:4:8751:8819	5070828	17	True				
ANR	5071204	CallExpression	"query_parameters . insert ( std :: make_pair ( ""AWSAccessKeyId"" , keyID ) )"		5070828	0					
ANR	5071205	Callee	query_parameters . insert		5070828	0					
ANR	5071206	MemberAccess	query_parameters . insert		5070828	0					
ANR	5071207	Identifier	query_parameters		5070828	0					
ANR	5071208	Identifier	insert		5070828	1					
ANR	5071209	ArgumentList	"std :: make_pair ( ""AWSAccessKeyId"" , keyID )"		5070828	1					
ANR	5071210	Argument	"std :: make_pair ( ""AWSAccessKeyId"" , keyID )"		5070828	0					
ANR	5071211	CallExpression	"std :: make_pair ( ""AWSAccessKeyId"" , keyID )"		5070828	0					
ANR	5071212	Callee	std :: make_pair		5070828	0					
ANR	5071213	Identifier	std :: make_pair		5070828	0					
ANR	5071214	ArgumentList	"""AWSAccessKeyId"""		5070828	1					
ANR	5071215	Argument	"""AWSAccessKeyId"""		5070828	0					
ANR	5071216	PrimaryExpression	"""AWSAccessKeyId"""		5070828	0					
ANR	5071217	Argument	keyID		5070828	1					
ANR	5071218	Identifier	keyID		5070828	0					
ANR	5071219	ExpressionStatement	"query_parameters . insert ( std :: make_pair ( ""SignatureVersion"" , ""2"" ) )"	246:4:8936:9004	5070828	18	True				
ANR	5071220	CallExpression	"query_parameters . insert ( std :: make_pair ( ""SignatureVersion"" , ""2"" ) )"		5070828	0					
ANR	5071221	Callee	query_parameters . insert		5070828	0					
ANR	5071222	MemberAccess	query_parameters . insert		5070828	0					
ANR	5071223	Identifier	query_parameters		5070828	0					
ANR	5071224	Identifier	insert		5070828	1					
ANR	5071225	ArgumentList	"std :: make_pair ( ""SignatureVersion"" , ""2"" )"		5070828	1					
ANR	5071226	Argument	"std :: make_pair ( ""SignatureVersion"" , ""2"" )"		5070828	0					
ANR	5071227	CallExpression	"std :: make_pair ( ""SignatureVersion"" , ""2"" )"		5070828	0					
ANR	5071228	Callee	std :: make_pair		5070828	0					
ANR	5071229	Identifier	std :: make_pair		5070828	0					
ANR	5071230	ArgumentList	"""SignatureVersion"""		5070828	1					
ANR	5071231	Argument	"""SignatureVersion"""		5070828	0					
ANR	5071232	PrimaryExpression	"""SignatureVersion"""		5070828	0					
ANR	5071233	Argument	"""2"""		5070828	1					
ANR	5071234	PrimaryExpression	"""2"""		5070828	0					
ANR	5071235	ExpressionStatement	"query_parameters . insert ( std :: make_pair ( ""SignatureMethod"" , ""HmacSHA256"" ) )"	247:4:9010:9086	5070828	19	True				
ANR	5071236	CallExpression	"query_parameters . insert ( std :: make_pair ( ""SignatureMethod"" , ""HmacSHA256"" ) )"		5070828	0					
ANR	5071237	Callee	query_parameters . insert		5070828	0					
ANR	5071238	MemberAccess	query_parameters . insert		5070828	0					
ANR	5071239	Identifier	query_parameters		5070828	0					
ANR	5071240	Identifier	insert		5070828	1					
ANR	5071241	ArgumentList	"std :: make_pair ( ""SignatureMethod"" , ""HmacSHA256"" )"		5070828	1					
ANR	5071242	Argument	"std :: make_pair ( ""SignatureMethod"" , ""HmacSHA256"" )"		5070828	0					
ANR	5071243	CallExpression	"std :: make_pair ( ""SignatureMethod"" , ""HmacSHA256"" )"		5070828	0					
ANR	5071244	Callee	std :: make_pair		5070828	0					
ANR	5071245	Identifier	std :: make_pair		5070828	0					
ANR	5071246	ArgumentList	"""SignatureMethod"""		5070828	1					
ANR	5071247	Argument	"""SignatureMethod"""		5070828	0					
ANR	5071248	PrimaryExpression	"""SignatureMethod"""		5070828	0					
ANR	5071249	Argument	"""HmacSHA256"""		5070828	1					
ANR	5071250	PrimaryExpression	"""HmacSHA256"""		5070828	0					
ANR	5071251	ExpressionStatement	"query_parameters . insert ( std :: make_pair ( ""Version"" , ""2010-11-15"" ) )"	252:4:9188:9256	5070828	20	True				
ANR	5071252	CallExpression	"query_parameters . insert ( std :: make_pair ( ""Version"" , ""2010-11-15"" ) )"		5070828	0					
ANR	5071253	Callee	query_parameters . insert		5070828	0					
ANR	5071254	MemberAccess	query_parameters . insert		5070828	0					
ANR	5071255	Identifier	query_parameters		5070828	0					
ANR	5071256	Identifier	insert		5070828	1					
ANR	5071257	ArgumentList	"std :: make_pair ( ""Version"" , ""2010-11-15"" )"		5070828	1					
ANR	5071258	Argument	"std :: make_pair ( ""Version"" , ""2010-11-15"" )"		5070828	0					
ANR	5071259	CallExpression	"std :: make_pair ( ""Version"" , ""2010-11-15"" )"		5070828	0					
ANR	5071260	Callee	std :: make_pair		5070828	0					
ANR	5071261	Identifier	std :: make_pair		5070828	0					
ANR	5071262	ArgumentList	"""Version"""		5070828	1					
ANR	5071263	Argument	"""Version"""		5070828	0					
ANR	5071264	PrimaryExpression	"""Version"""		5070828	0					
ANR	5071265	Argument	"""2010-11-15"""		5070828	1					
ANR	5071266	PrimaryExpression	"""2010-11-15"""		5070828	0					
ANR	5071267	IdentifierDeclStatement	time_t now ;	257:4:9344:9354	5070828	21	True				
ANR	5071268	IdentifierDecl	now		5070828	0					
ANR	5071269	IdentifierDeclType	time_t		5070828	0					
ANR	5071270	Identifier	now		5070828	1					
ANR	5071271	ExpressionStatement	time ( & now )	257:16:9356:9369	5070828	22	True				
ANR	5071272	CallExpression	time ( & now )		5070828	0					
ANR	5071273	Callee	time		5070828	0					
ANR	5071274	Identifier	time		5070828	0					
ANR	5071275	ArgumentList	& now		5070828	1					
ANR	5071276	Argument	& now		5070828	0					
ANR	5071277	UnaryOperationExpression	& now		5070828	0					
ANR	5071278	UnaryOperator	&		5070828	0					
ANR	5071279	Identifier	now		5070828	1					
ANR	5071280	IdentifierDeclStatement	struct tm brokenDownTime ;	258:4:9375:9399	5070828	23	True				
ANR	5071281	IdentifierDecl	brokenDownTime		5070828	0					
ANR	5071282	IdentifierDeclType	struct tm		5070828	0					
ANR	5071283	Identifier	brokenDownTime		5070828	1					
ANR	5071284	ExpressionStatement	"gmtime_r ( & now , & brokenDownTime )"	258:30:9401:9436	5070828	24	True				
ANR	5071285	CallExpression	"gmtime_r ( & now , & brokenDownTime )"		5070828	0					
ANR	5071286	Callee	gmtime_r		5070828	0					
ANR	5071287	Identifier	gmtime_r		5070828	0					
ANR	5071288	ArgumentList	& now		5070828	1					
ANR	5071289	Argument	& now		5070828	0					
ANR	5071290	UnaryOperationExpression	& now		5070828	0					
ANR	5071291	UnaryOperator	&		5070828	0					
ANR	5071292	Identifier	now		5070828	1					
ANR	5071293	Argument	& brokenDownTime		5070828	1					
ANR	5071294	UnaryOperationExpression	& brokenDownTime		5070828	0					
ANR	5071295	UnaryOperator	&		5070828	0					
ANR	5071296	Identifier	brokenDownTime		5070828	1					
ANR	5071297	IdentifierDeclStatement	"char iso8601 [ ] = ""YYYY-MM-DDThh:mm:ssZ"" ;"	259:4:9442:9481	5070828	25	True				
ANR	5071298	IdentifierDecl	"iso8601 [ ] = ""YYYY-MM-DDThh:mm:ssZ"""		5070828	0					
ANR	5071299	IdentifierDeclType	char [ ]		5070828	0					
ANR	5071300	Identifier	iso8601		5070828	1					
ANR	5071301	AssignmentExpression	"iso8601 [ ] = ""YYYY-MM-DDThh:mm:ssZ"""		5070828	2		=			
ANR	5071302	Identifier	iso8601		5070828	0					
ANR	5071303	PrimaryExpression	"""YYYY-MM-DDThh:mm:ssZ"""		5070828	1					
ANR	5071304	ExpressionStatement	"strftime ( iso8601 , 20 , ""%Y-%m-%dT%H:%M:%SZ"" , & brokenDownTime )"	260:4:9487:9550	5070828	26	True				
ANR	5071305	CallExpression	"strftime ( iso8601 , 20 , ""%Y-%m-%dT%H:%M:%SZ"" , & brokenDownTime )"		5070828	0					
ANR	5071306	Callee	strftime		5070828	0					
ANR	5071307	Identifier	strftime		5070828	0					
ANR	5071308	ArgumentList	iso8601		5070828	1					
ANR	5071309	Argument	iso8601		5070828	0					
ANR	5071310	Identifier	iso8601		5070828	0					
ANR	5071311	Argument	20		5070828	1					
ANR	5071312	PrimaryExpression	20		5070828	0					
ANR	5071313	Argument	"""%Y-%m-%dT%H:%M:%SZ"""		5070828	2					
ANR	5071314	PrimaryExpression	"""%Y-%m-%dT%H:%M:%SZ"""		5070828	0					
ANR	5071315	Argument	& brokenDownTime		5070828	3					
ANR	5071316	UnaryOperationExpression	& brokenDownTime		5070828	0					
ANR	5071317	UnaryOperator	&		5070828	0					
ANR	5071318	Identifier	brokenDownTime		5070828	1					
ANR	5071319	ExpressionStatement	"query_parameters . insert ( std :: make_pair ( ""Timestamp"" , iso8601 ) )"	261:4:9556:9621	5070828	27	True				
ANR	5071320	CallExpression	"query_parameters . insert ( std :: make_pair ( ""Timestamp"" , iso8601 ) )"		5070828	0					
ANR	5071321	Callee	query_parameters . insert		5070828	0					
ANR	5071322	MemberAccess	query_parameters . insert		5070828	0					
ANR	5071323	Identifier	query_parameters		5070828	0					
ANR	5071324	Identifier	insert		5070828	1					
ANR	5071325	ArgumentList	"std :: make_pair ( ""Timestamp"" , iso8601 )"		5070828	1					
ANR	5071326	Argument	"std :: make_pair ( ""Timestamp"" , iso8601 )"		5070828	0					
ANR	5071327	CallExpression	"std :: make_pair ( ""Timestamp"" , iso8601 )"		5070828	0					
ANR	5071328	Callee	std :: make_pair		5070828	0					
ANR	5071329	Identifier	std :: make_pair		5070828	0					
ANR	5071330	ArgumentList	"""Timestamp"""		5070828	1					
ANR	5071331	Argument	"""Timestamp"""		5070828	0					
ANR	5071332	PrimaryExpression	"""Timestamp"""		5070828	0					
ANR	5071333	Argument	iso8601		5070828	1					
ANR	5071334	Identifier	iso8601		5070828	0					
ANR	5071335	IdentifierDeclStatement	std :: string canonicalizedQueryString ;	272:4:9912:9948	5070828	28	True				
ANR	5071336	IdentifierDecl	canonicalizedQueryString		5070828	0					
ANR	5071337	IdentifierDeclType	std :: string		5070828	0					
ANR	5071338	Identifier	canonicalizedQueryString		5070828	1					
ANR	5071339	IdentifierDeclStatement	AttributeValueMap encodedParameters ;	273:4:9954:9989	5070828	29	True				
ANR	5071340	IdentifierDecl	encodedParameters		5070828	0					
ANR	5071341	IdentifierDeclType	AttributeValueMap		5070828	0					
ANR	5071342	Identifier	encodedParameters		5070828	1					
ANR	5071343	IdentifierDeclStatement	AttributeValueMap :: const_iterator i ;	274:4:9995:10030	5070828	30	True				
ANR	5071344	IdentifierDecl	i		5070828	0					
ANR	5071345	IdentifierDeclType	AttributeValueMap :: const_iterator		5070828	0					
ANR	5071346	Identifier	i		5070828	1					
ANR	5071347	ForStatement	for ( i = query_parameters . begin ( ) ; i != query_parameters . end ( ) ; ++ i )		5070828	31					
ANR	5071348	ForInit	i = query_parameters . begin ( ) ;	275:9:10041:10069	5070828	0	True				
ANR	5071349	AssignmentExpression	i = query_parameters . begin ( )		5070828	0		=			
ANR	5071350	Identifier	i		5070828	0					
ANR	5071351	CallExpression	query_parameters . begin ( )		5070828	1					
ANR	5071352	Callee	query_parameters . begin		5070828	0					
ANR	5071353	MemberAccess	query_parameters . begin		5070828	0					
ANR	5071354	Identifier	query_parameters		5070828	0					
ANR	5071355	Identifier	begin		5070828	1					
ANR	5071356	ArgumentList			5070828	1					
ANR	5071357	Condition	i != query_parameters . end ( )	275:39:10071:10097	5070828	1	True				
ANR	5071358	EqualityExpression	i != query_parameters . end ( )		5070828	0		!=			
ANR	5071359	Identifier	i		5070828	0					
ANR	5071360	CallExpression	query_parameters . end ( )		5070828	1					
ANR	5071361	Callee	query_parameters . end		5070828	0					
ANR	5071362	MemberAccess	query_parameters . end		5070828	0					
ANR	5071363	Identifier	query_parameters		5070828	0					
ANR	5071364	Identifier	end		5070828	1					
ANR	5071365	ArgumentList			5070828	1					
ANR	5071366	UnaryExpression	++ i	275:68:10100:10102	5070828	2	True				
ANR	5071367	IncDec	++		5070828	0					
ANR	5071368	Identifier	i		5070828	1					
ANR	5071369	CompoundStatement		99:8:4202:4250	5070828	3					
ANR	5071370	IdentifierDeclStatement	std :: string name = amazonURLEncode ( i -> first ) ;	279:8:10247:10293	5070828	0	True				
ANR	5071371	IdentifierDecl	name = amazonURLEncode ( i -> first )		5070828	0					
ANR	5071372	IdentifierDeclType	std :: string		5070828	0					
ANR	5071373	Identifier	name		5070828	1					
ANR	5071374	AssignmentExpression	name = amazonURLEncode ( i -> first )		5070828	2		=			
ANR	5071375	Identifier	name		5070828	0					
ANR	5071376	CallExpression	amazonURLEncode ( i -> first )		5070828	1					
ANR	5071377	Callee	amazonURLEncode		5070828	0					
ANR	5071378	Identifier	amazonURLEncode		5070828	0					
ANR	5071379	ArgumentList	i -> first		5070828	1					
ANR	5071380	Argument	i -> first		5070828	0					
ANR	5071381	PtrMemberAccess	i -> first		5070828	0					
ANR	5071382	Identifier	i		5070828	0					
ANR	5071383	Identifier	first		5070828	1					
ANR	5071384	IdentifierDeclStatement	std :: string value = amazonURLEncode ( i -> second ) ;	280:8:10303:10351	5070828	1	True				
ANR	5071385	IdentifierDecl	value = amazonURLEncode ( i -> second )		5070828	0					
ANR	5071386	IdentifierDeclType	std :: string		5070828	0					
ANR	5071387	Identifier	value		5070828	1					
ANR	5071388	AssignmentExpression	value = amazonURLEncode ( i -> second )		5070828	2		=			
ANR	5071389	Identifier	value		5070828	0					
ANR	5071390	CallExpression	amazonURLEncode ( i -> second )		5070828	1					
ANR	5071391	Callee	amazonURLEncode		5070828	0					
ANR	5071392	Identifier	amazonURLEncode		5070828	0					
ANR	5071393	ArgumentList	i -> second		5070828	1					
ANR	5071394	Argument	i -> second		5070828	0					
ANR	5071395	PtrMemberAccess	i -> second		5070828	0					
ANR	5071396	Identifier	i		5070828	0					
ANR	5071397	Identifier	second		5070828	1					
ANR	5071398	ExpressionStatement	"encodedParameters . insert ( std :: make_pair ( name , value ) )"	281:8:10361:10418	5070828	2	True				
ANR	5071399	CallExpression	"encodedParameters . insert ( std :: make_pair ( name , value ) )"		5070828	0					
ANR	5071400	Callee	encodedParameters . insert		5070828	0					
ANR	5071401	MemberAccess	encodedParameters . insert		5070828	0					
ANR	5071402	Identifier	encodedParameters		5070828	0					
ANR	5071403	Identifier	insert		5070828	1					
ANR	5071404	ArgumentList	"std :: make_pair ( name , value )"		5070828	1					
ANR	5071405	Argument	"std :: make_pair ( name , value )"		5070828	0					
ANR	5071406	CallExpression	"std :: make_pair ( name , value )"		5070828	0					
ANR	5071407	Callee	std :: make_pair		5070828	0					
ANR	5071408	Identifier	std :: make_pair		5070828	0					
ANR	5071409	ArgumentList	name		5070828	1					
ANR	5071410	Argument	name		5070828	0					
ANR	5071411	Identifier	name		5070828	0					
ANR	5071412	Argument	value		5070828	1					
ANR	5071413	Identifier	value		5070828	0					
ANR	5071414	ExpressionStatement	canonicalizedQueryString += name + '=' + value	284:8:10504:10550	5070828	3	True				
ANR	5071415	AssignmentExpression	canonicalizedQueryString += name + '=' + value		5070828	0		+=			
ANR	5071416	Identifier	canonicalizedQueryString		5070828	0					
ANR	5071417	AdditiveExpression	name + '=' + value		5070828	1		+			
ANR	5071418	Identifier	name		5070828	0					
ANR	5071419	AdditiveExpression	'=' + value		5070828	1		+			
ANR	5071420	PrimaryExpression	'='		5070828	0					
ANR	5071421	Identifier	value		5070828	1					
ANR	5071422	ExpressionStatement	canonicalizedQueryString += '&'	287:8:10625:10656	5070828	4	True				
ANR	5071423	AssignmentExpression	canonicalizedQueryString += '&'		5070828	0		+=			
ANR	5071424	Identifier	canonicalizedQueryString		5070828	0					
ANR	5071425	PrimaryExpression	'&'		5070828	1					
ANR	5071426	ExpressionStatement	canonicalizedQueryString . erase ( canonicalizedQueryString . end ( ) - 1 )	290:4:10726:10794	5070828	32	True				
ANR	5071427	CallExpression	canonicalizedQueryString . erase ( canonicalizedQueryString . end ( ) - 1 )		5070828	0					
ANR	5071428	Callee	canonicalizedQueryString . erase		5070828	0					
ANR	5071429	MemberAccess	canonicalizedQueryString . erase		5070828	0					
ANR	5071430	Identifier	canonicalizedQueryString		5070828	0					
ANR	5071431	Identifier	erase		5070828	1					
ANR	5071432	ArgumentList	canonicalizedQueryString . end ( ) - 1		5070828	1					
ANR	5071433	Argument	canonicalizedQueryString . end ( ) - 1		5070828	0					
ANR	5071434	AdditiveExpression	canonicalizedQueryString . end ( ) - 1		5070828	0		-			
ANR	5071435	CallExpression	canonicalizedQueryString . end ( )		5070828	0					
ANR	5071436	Callee	canonicalizedQueryString . end		5070828	0					
ANR	5071437	MemberAccess	canonicalizedQueryString . end		5070828	0					
ANR	5071438	Identifier	canonicalizedQueryString		5070828	0					
ANR	5071439	Identifier	end		5070828	1					
ANR	5071440	ArgumentList			5070828	1					
ANR	5071441	PrimaryExpression	1		5070828	1					
ANR	5071442	IdentifierDeclStatement	"std :: string stringToSign = ""GET\\n"" + valueOfHostHeaderInLowercase + ""\\n"" + httpRequestURI + ""\\n"" + canonicalizedQueryString ;"	293:4:10847:11057	5070828	33	True				
ANR	5071443	IdentifierDecl	"stringToSign = ""GET\\n"" + valueOfHostHeaderInLowercase + ""\\n"" + httpRequestURI + ""\\n"" + canonicalizedQueryString"		5070828	0					
ANR	5071444	IdentifierDeclType	std :: string		5070828	0					
ANR	5071445	Identifier	stringToSign		5070828	1					
ANR	5071446	AssignmentExpression	"stringToSign = ""GET\\n"" + valueOfHostHeaderInLowercase + ""\\n"" + httpRequestURI + ""\\n"" + canonicalizedQueryString"		5070828	2		=			
ANR	5071447	Identifier	stringToSign		5070828	0					
ANR	5071448	AdditiveExpression	"""GET\\n"" + valueOfHostHeaderInLowercase + ""\\n"" + httpRequestURI + ""\\n"" + canonicalizedQueryString"		5070828	1		+			
ANR	5071449	PrimaryExpression	"""GET\\n"""		5070828	0					
ANR	5071450	AdditiveExpression	"valueOfHostHeaderInLowercase + ""\\n"" + httpRequestURI + ""\\n"" + canonicalizedQueryString"		5070828	1		+			
ANR	5071451	Identifier	valueOfHostHeaderInLowercase		5070828	0					
ANR	5071452	AdditiveExpression	"""\\n"" + httpRequestURI + ""\\n"" + canonicalizedQueryString"		5070828	1		+			
ANR	5071453	PrimaryExpression	"""\\n"""		5070828	0					
ANR	5071454	AdditiveExpression	"httpRequestURI + ""\\n"" + canonicalizedQueryString"		5070828	1		+			
ANR	5071455	Identifier	httpRequestURI		5070828	0					
ANR	5071456	AdditiveExpression	"""\\n"" + canonicalizedQueryString"		5070828	1		+			
ANR	5071457	PrimaryExpression	"""\\n"""		5070828	0					
ANR	5071458	Identifier	canonicalizedQueryString		5070828	1					
ANR	5071459	IdentifierDeclStatement	std :: string saKey ;	302:4:11326:11343	5070828	34	True				
ANR	5071460	IdentifierDecl	saKey		5070828	0					
ANR	5071461	IdentifierDeclType	std :: string		5070828	0					
ANR	5071462	Identifier	saKey		5070828	1					
ANR	5071463	IfStatement	"if ( protocol == ""x509"" )"		5070828	35					
ANR	5071464	Condition	"protocol == ""x509"""	303:8:11353:11370	5070828	0	True				
ANR	5071465	EqualityExpression	"protocol == ""x509"""		5070828	0		==			
ANR	5071466	Identifier	protocol		5070828	0					
ANR	5071467	PrimaryExpression	"""x509"""		5070828	1					
ANR	5071468	CompoundStatement		122:29:5273:5273	5070828	1					
ANR	5071469	ExpressionStatement	"saKey = std :: string ( ""<DN>/CN=UID:"" ) + getenv ( ""USER"" )"	308:8:11650:11706	5070828	0	True				
ANR	5071470	AssignmentExpression	"saKey = std :: string ( ""<DN>/CN=UID:"" ) + getenv ( ""USER"" )"		5070828	0		=			
ANR	5071471	Identifier	saKey		5070828	0					
ANR	5071472	AdditiveExpression	"std :: string ( ""<DN>/CN=UID:"" ) + getenv ( ""USER"" )"		5070828	1		+			
ANR	5071473	CallExpression	"std :: string ( ""<DN>/CN=UID:"" )"		5070828	0					
ANR	5071474	Callee	std :: string		5070828	0					
ANR	5071475	Identifier	std :: string		5070828	0					
ANR	5071476	ArgumentList	"""<DN>/CN=UID:"""		5070828	1					
ANR	5071477	Argument	"""<DN>/CN=UID:"""		5070828	0					
ANR	5071478	PrimaryExpression	"""<DN>/CN=UID:"""		5070828	0					
ANR	5071479	CallExpression	"getenv ( ""USER"" )"		5070828	1					
ANR	5071480	Callee	getenv		5070828	0					
ANR	5071481	Identifier	getenv		5070828	0					
ANR	5071482	ArgumentList	"""USER"""		5070828	1					
ANR	5071483	Argument	"""USER"""		5070828	0					
ANR	5071484	PrimaryExpression	"""USER"""		5070828	0					
ANR	5071485	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Using '%s' as secret key for x.509\\n"" , saKey . c_str ( ) )"	309:8:11716:11793	5070828	1	True				
ANR	5071486	CallExpression	"dprintf ( D_FULLDEBUG , ""Using '%s' as secret key for x.509\\n"" , saKey . c_str ( ) )"		5070828	0					
ANR	5071487	Callee	dprintf		5070828	0					
ANR	5071488	Identifier	dprintf		5070828	0					
ANR	5071489	ArgumentList	D_FULLDEBUG		5070828	1					
ANR	5071490	Argument	D_FULLDEBUG		5070828	0					
ANR	5071491	Identifier	D_FULLDEBUG		5070828	0					
ANR	5071492	Argument	"""Using '%s' as secret key for x.509\\n"""		5070828	1					
ANR	5071493	PrimaryExpression	"""Using '%s' as secret key for x.509\\n"""		5070828	0					
ANR	5071494	Argument	saKey . c_str ( )		5070828	2					
ANR	5071495	CallExpression	saKey . c_str ( )		5070828	0					
ANR	5071496	Callee	saKey . c_str		5070828	0					
ANR	5071497	MemberAccess	saKey . c_str		5070828	0					
ANR	5071498	Identifier	saKey		5070828	0					
ANR	5071499	Identifier	c_str		5070828	1					
ANR	5071500	ArgumentList			5070828	1					
ANR	5071501	ElseStatement	else		5070828	0					
ANR	5071502	CompoundStatement		129:11:5705:5705	5070828	0					
ANR	5071503	IfStatement	"if ( ! readShortFile ( this -> secretKeyFile , saKey ) )"		5070828	0					
ANR	5071504	Condition	"! readShortFile ( this -> secretKeyFile , saKey )"	311:12:11820:11864	5070828	0	True				
ANR	5071505	UnaryOperationExpression	"! readShortFile ( this -> secretKeyFile , saKey )"		5070828	0					
ANR	5071506	UnaryOperator	!		5070828	0					
ANR	5071507	CallExpression	"readShortFile ( this -> secretKeyFile , saKey )"		5070828	1					
ANR	5071508	Callee	readShortFile		5070828	0					
ANR	5071509	Identifier	readShortFile		5070828	0					
ANR	5071510	ArgumentList	this -> secretKeyFile		5070828	1					
ANR	5071511	Argument	this -> secretKeyFile		5070828	0					
ANR	5071512	PtrMemberAccess	this -> secretKeyFile		5070828	0					
ANR	5071513	Identifier	this		5070828	0					
ANR	5071514	Identifier	secretKeyFile		5070828	1					
ANR	5071515	Argument	saKey		5070828	1					
ANR	5071516	Identifier	saKey		5070828	0					
ANR	5071517	CompoundStatement		130:60:5767:5767	5070828	1					
ANR	5071518	ExpressionStatement	"this -> errorCode = ""E_FILE_IO"""	312:12:11882:11911	5070828	0	True				
ANR	5071519	AssignmentExpression	"this -> errorCode = ""E_FILE_IO"""		5070828	0		=			
ANR	5071520	PtrMemberAccess	this -> errorCode		5070828	0					
ANR	5071521	Identifier	this		5070828	0					
ANR	5071522	Identifier	errorCode		5070828	1					
ANR	5071523	PrimaryExpression	"""E_FILE_IO"""		5070828	1					
ANR	5071524	ExpressionStatement	"this -> errorMessage = ""Unable to read from secretkey file '"" + this -> secretKeyFile + ""'."""	313:12:11925:12013	5070828	1	True				
ANR	5071525	AssignmentExpression	"this -> errorMessage = ""Unable to read from secretkey file '"" + this -> secretKeyFile + ""'."""		5070828	0		=			
ANR	5071526	PtrMemberAccess	this -> errorMessage		5070828	0					
ANR	5071527	Identifier	this		5070828	0					
ANR	5071528	Identifier	errorMessage		5070828	1					
ANR	5071529	AdditiveExpression	"""Unable to read from secretkey file '"" + this -> secretKeyFile + ""'."""		5070828	1		+			
ANR	5071530	PrimaryExpression	"""Unable to read from secretkey file '"""		5070828	0					
ANR	5071531	AdditiveExpression	"this -> secretKeyFile + ""'."""		5070828	1		+			
ANR	5071532	PtrMemberAccess	this -> secretKeyFile		5070828	0					
ANR	5071533	Identifier	this		5070828	0					
ANR	5071534	Identifier	secretKeyFile		5070828	1					
ANR	5071535	PrimaryExpression	"""'."""		5070828	1					
ANR	5071536	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to read secretkey file '%s', failing.\\n"" , this -> secretKeyFile . c_str ( ) )"	314:12:12027:12125	5070828	2	True				
ANR	5071537	CallExpression	"dprintf ( D_ALWAYS , ""Unable to read secretkey file '%s', failing.\\n"" , this -> secretKeyFile . c_str ( ) )"		5070828	0					
ANR	5071538	Callee	dprintf		5070828	0					
ANR	5071539	Identifier	dprintf		5070828	0					
ANR	5071540	ArgumentList	D_ALWAYS		5070828	1					
ANR	5071541	Argument	D_ALWAYS		5070828	0					
ANR	5071542	Identifier	D_ALWAYS		5070828	0					
ANR	5071543	Argument	"""Unable to read secretkey file '%s', failing.\\n"""		5070828	1					
ANR	5071544	PrimaryExpression	"""Unable to read secretkey file '%s', failing.\\n"""		5070828	0					
ANR	5071545	Argument	this -> secretKeyFile . c_str ( )		5070828	2					
ANR	5071546	CallExpression	this -> secretKeyFile . c_str ( )		5070828	0					
ANR	5071547	Callee	this -> secretKeyFile . c_str		5070828	0					
ANR	5071548	MemberAccess	this -> secretKeyFile . c_str		5070828	0					
ANR	5071549	PtrMemberAccess	this -> secretKeyFile		5070828	0					
ANR	5071550	Identifier	this		5070828	0					
ANR	5071551	Identifier	secretKeyFile		5070828	1					
ANR	5071552	Identifier	c_str		5070828	1					
ANR	5071553	ArgumentList			5070828	1					
ANR	5071554	ReturnStatement	return false ;	315:12:12139:12151	5070828	3	True				
ANR	5071555	Identifier	false		5070828	0					
ANR	5071556	IfStatement	if ( saKey [ saKey . length ( ) - 1 ] == '\\n' )		5070828	1					
ANR	5071557	Condition	saKey [ saKey . length ( ) - 1 ] == '\\n'	318:12:12260:12294	5070828	0	True				
ANR	5071558	EqualityExpression	saKey [ saKey . length ( ) - 1 ] == '\\n'		5070828	0		==			
ANR	5071559	ArrayIndexing	saKey [ saKey . length ( ) - 1 ]		5070828	0					
ANR	5071560	Identifier	saKey		5070828	0					
ANR	5071561	AdditiveExpression	saKey . length ( ) - 1		5070828	1		-			
ANR	5071562	CallExpression	saKey . length ( )		5070828	0					
ANR	5071563	Callee	saKey . length		5070828	0					
ANR	5071564	MemberAccess	saKey . length		5070828	0					
ANR	5071565	Identifier	saKey		5070828	0					
ANR	5071566	Identifier	length		5070828	1					
ANR	5071567	ArgumentList			5070828	1					
ANR	5071568	PrimaryExpression	1		5070828	1					
ANR	5071569	PrimaryExpression	'\\n'		5070828	1					
ANR	5071570	CompoundStatement		137:50:6197:6197	5070828	1					
ANR	5071571	ExpressionStatement	saKey . erase ( saKey . length ( ) - 1 )	318:52:12300:12333	5070828	0	True				
ANR	5071572	CallExpression	saKey . erase ( saKey . length ( ) - 1 )		5070828	0					
ANR	5071573	Callee	saKey . erase		5070828	0					
ANR	5071574	MemberAccess	saKey . erase		5070828	0					
ANR	5071575	Identifier	saKey		5070828	0					
ANR	5071576	Identifier	erase		5070828	1					
ANR	5071577	ArgumentList	saKey . length ( ) - 1		5070828	1					
ANR	5071578	Argument	saKey . length ( ) - 1		5070828	0					
ANR	5071579	AdditiveExpression	saKey . length ( ) - 1		5070828	0		-			
ANR	5071580	CallExpression	saKey . length ( )		5070828	0					
ANR	5071581	Callee	saKey . length		5070828	0					
ANR	5071582	MemberAccess	saKey . length		5070828	0					
ANR	5071583	Identifier	saKey		5070828	0					
ANR	5071584	Identifier	length		5070828	1					
ANR	5071585	ArgumentList			5070828	1					
ANR	5071586	PrimaryExpression	1		5070828	1					
ANR	5071587	IdentifierDeclStatement	unsigned int mdLength = 0 ;	322:4:12437:12462	5070828	36	True				
ANR	5071588	IdentifierDecl	mdLength = 0		5070828	0					
ANR	5071589	IdentifierDeclType	unsigned int		5070828	0					
ANR	5071590	Identifier	mdLength		5070828	1					
ANR	5071591	AssignmentExpression	mdLength = 0		5070828	2		=			
ANR	5071592	Identifier	mdLength		5070828	0					
ANR	5071593	PrimaryExpression	0		5070828	1					
ANR	5071594	IdentifierDeclStatement	unsigned char messageDigest [ EVP_MAX_MD_SIZE ] ;	323:4:12468:12512	5070828	37	True				
ANR	5071595	IdentifierDecl	messageDigest [ EVP_MAX_MD_SIZE ]		5070828	0					
ANR	5071596	IdentifierDeclType	unsigned char [ EVP_MAX_MD_SIZE ]		5070828	0					
ANR	5071597	Identifier	messageDigest		5070828	1					
ANR	5071598	Identifier	EVP_MAX_MD_SIZE		5070828	2					
ANR	5071599	IdentifierDeclStatement	"const unsigned char * hmac = HMAC ( EVP_sha256 ( ) , saKey . c_str ( ) , saKey . length ( ) , ( unsigned char * ) stringToSign . c_str ( ) , stringToSign . length ( ) , messageDigest , & mdLength ) ;"	324:4:12518:12695	5070828	38	True				
ANR	5071600	IdentifierDecl	"* hmac = HMAC ( EVP_sha256 ( ) , saKey . c_str ( ) , saKey . length ( ) , ( unsigned char * ) stringToSign . c_str ( ) , stringToSign . length ( ) , messageDigest , & mdLength )"		5070828	0					
ANR	5071601	IdentifierDeclType	const unsigned char *		5070828	0					
ANR	5071602	Identifier	hmac		5070828	1					
ANR	5071603	AssignmentExpression	"* hmac = HMAC ( EVP_sha256 ( ) , saKey . c_str ( ) , saKey . length ( ) , ( unsigned char * ) stringToSign . c_str ( ) , stringToSign . length ( ) , messageDigest , & mdLength )"		5070828	2		=			
ANR	5071604	Identifier	hmac		5070828	0					
ANR	5071605	CallExpression	"HMAC ( EVP_sha256 ( ) , saKey . c_str ( ) , saKey . length ( ) , ( unsigned char * ) stringToSign . c_str ( ) , stringToSign . length ( ) , messageDigest , & mdLength )"		5070828	1					
ANR	5071606	Callee	HMAC		5070828	0					
ANR	5071607	Identifier	HMAC		5070828	0					
ANR	5071608	ArgumentList	EVP_sha256 ( )		5070828	1					
ANR	5071609	Argument	EVP_sha256 ( )		5070828	0					
ANR	5071610	CallExpression	EVP_sha256 ( )		5070828	0					
ANR	5071611	Callee	EVP_sha256		5070828	0					
ANR	5071612	Identifier	EVP_sha256		5070828	0					
ANR	5071613	ArgumentList			5070828	1					
ANR	5071614	Argument	saKey . c_str ( )		5070828	1					
ANR	5071615	CallExpression	saKey . c_str ( )		5070828	0					
ANR	5071616	Callee	saKey . c_str		5070828	0					
ANR	5071617	MemberAccess	saKey . c_str		5070828	0					
ANR	5071618	Identifier	saKey		5070828	0					
ANR	5071619	Identifier	c_str		5070828	1					
ANR	5071620	ArgumentList			5070828	1					
ANR	5071621	Argument	saKey . length ( )		5070828	2					
ANR	5071622	CallExpression	saKey . length ( )		5070828	0					
ANR	5071623	Callee	saKey . length		5070828	0					
ANR	5071624	MemberAccess	saKey . length		5070828	0					
ANR	5071625	Identifier	saKey		5070828	0					
ANR	5071626	Identifier	length		5070828	1					
ANR	5071627	ArgumentList			5070828	1					
ANR	5071628	Argument	( unsigned char * ) stringToSign . c_str ( )		5070828	3					
ANR	5071629	CastExpression	( unsigned char * ) stringToSign . c_str ( )		5070828	0					
ANR	5071630	CastTarget	unsigned char *		5070828	0					
ANR	5071631	CallExpression	stringToSign . c_str ( )		5070828	1					
ANR	5071632	Callee	stringToSign . c_str		5070828	0					
ANR	5071633	MemberAccess	stringToSign . c_str		5070828	0					
ANR	5071634	Identifier	stringToSign		5070828	0					
ANR	5071635	Identifier	c_str		5070828	1					
ANR	5071636	ArgumentList			5070828	1					
ANR	5071637	Argument	stringToSign . length ( )		5070828	4					
ANR	5071638	CallExpression	stringToSign . length ( )		5070828	0					
ANR	5071639	Callee	stringToSign . length		5070828	0					
ANR	5071640	MemberAccess	stringToSign . length		5070828	0					
ANR	5071641	Identifier	stringToSign		5070828	0					
ANR	5071642	Identifier	length		5070828	1					
ANR	5071643	ArgumentList			5070828	1					
ANR	5071644	Argument	messageDigest		5070828	5					
ANR	5071645	Identifier	messageDigest		5070828	0					
ANR	5071646	Argument	& mdLength		5070828	6					
ANR	5071647	UnaryOperationExpression	& mdLength		5070828	0					
ANR	5071648	UnaryOperator	&		5070828	0					
ANR	5071649	Identifier	mdLength		5070828	1					
ANR	5071650	IfStatement	if ( hmac == NULL )		5070828	39					
ANR	5071651	Condition	hmac == NULL	326:8:12705:12716	5070828	0	True				
ANR	5071652	EqualityExpression	hmac == NULL		5070828	0		==			
ANR	5071653	Identifier	hmac		5070828	0					
ANR	5071654	Identifier	NULL		5070828	1					
ANR	5071655	CompoundStatement		145:23:6619:6619	5070828	1					
ANR	5071656	ExpressionStatement	"this -> errorCode = ""E_INTERNAL"""	327:8:12730:12760	5070828	0	True				
ANR	5071657	AssignmentExpression	"this -> errorCode = ""E_INTERNAL"""		5070828	0		=			
ANR	5071658	PtrMemberAccess	this -> errorCode		5070828	0					
ANR	5071659	Identifier	this		5070828	0					
ANR	5071660	Identifier	errorCode		5070828	1					
ANR	5071661	PrimaryExpression	"""E_INTERNAL"""		5070828	1					
ANR	5071662	ExpressionStatement	"this -> errorMessage = ""Unable to calculate query signature (SHA256 HMAC)."""	328:8:12770:12843	5070828	1	True				
ANR	5071663	AssignmentExpression	"this -> errorMessage = ""Unable to calculate query signature (SHA256 HMAC)."""		5070828	0		=			
ANR	5071664	PtrMemberAccess	this -> errorMessage		5070828	0					
ANR	5071665	Identifier	this		5070828	0					
ANR	5071666	Identifier	errorMessage		5070828	1					
ANR	5071667	PrimaryExpression	"""Unable to calculate query signature (SHA256 HMAC)."""		5070828	1					
ANR	5071668	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to calculate SHA256 HMAC to sign query, failing.\\n"" )"	329:8:12853:12933	5070828	2	True				
ANR	5071669	CallExpression	"dprintf ( D_ALWAYS , ""Unable to calculate SHA256 HMAC to sign query, failing.\\n"" )"		5070828	0					
ANR	5071670	Callee	dprintf		5070828	0					
ANR	5071671	Identifier	dprintf		5070828	0					
ANR	5071672	ArgumentList	D_ALWAYS		5070828	1					
ANR	5071673	Argument	D_ALWAYS		5070828	0					
ANR	5071674	Identifier	D_ALWAYS		5070828	0					
ANR	5071675	Argument	"""Unable to calculate SHA256 HMAC to sign query, failing.\\n"""		5070828	1					
ANR	5071676	PrimaryExpression	"""Unable to calculate SHA256 HMAC to sign query, failing.\\n"""		5070828	0					
ANR	5071677	ReturnStatement	return false ;	330:8:12943:12955	5070828	3	True				
ANR	5071678	Identifier	false		5070828	0					
ANR	5071679	IdentifierDeclStatement	"char * base64Encoded = condor_base64_encode ( messageDigest , mdLength ) ;"	335:4:13107:13177	5070828	40	True				
ANR	5071680	IdentifierDecl	"* base64Encoded = condor_base64_encode ( messageDigest , mdLength )"		5070828	0					
ANR	5071681	IdentifierDeclType	char *		5070828	0					
ANR	5071682	Identifier	base64Encoded		5070828	1					
ANR	5071683	AssignmentExpression	"* base64Encoded = condor_base64_encode ( messageDigest , mdLength )"		5070828	2		=			
ANR	5071684	Identifier	base64Encoded		5070828	0					
ANR	5071685	CallExpression	"condor_base64_encode ( messageDigest , mdLength )"		5070828	1					
ANR	5071686	Callee	condor_base64_encode		5070828	0					
ANR	5071687	Identifier	condor_base64_encode		5070828	0					
ANR	5071688	ArgumentList	messageDigest		5070828	1					
ANR	5071689	Argument	messageDigest		5070828	0					
ANR	5071690	Identifier	messageDigest		5070828	0					
ANR	5071691	Argument	mdLength		5070828	1					
ANR	5071692	Identifier	mdLength		5070828	0					
ANR	5071693	IdentifierDeclStatement	std :: string signatureInBase64 = base64Encoded ;	336:4:13183:13228	5070828	41	True				
ANR	5071694	IdentifierDecl	signatureInBase64 = base64Encoded		5070828	0					
ANR	5071695	IdentifierDeclType	std :: string		5070828	0					
ANR	5071696	Identifier	signatureInBase64		5070828	1					
ANR	5071697	AssignmentExpression	signatureInBase64 = base64Encoded		5070828	2		=			
ANR	5071698	Identifier	base64Encoded		5070828	0					
ANR	5071699	Identifier	base64Encoded		5070828	1					
ANR	5071700	ExpressionStatement	free ( base64Encoded )	337:4:13234:13255	5070828	42	True				
ANR	5071701	CallExpression	free ( base64Encoded )		5070828	0					
ANR	5071702	Callee	free		5070828	0					
ANR	5071703	Identifier	free		5070828	0					
ANR	5071704	ArgumentList	base64Encoded		5070828	1					
ANR	5071705	Argument	base64Encoded		5070828	0					
ANR	5071706	Identifier	base64Encoded		5070828	0					
ANR	5071707	ExpressionStatement	"canonicalizedQueryString += ""&Signature="" + amazonURLEncode ( signatureInBase64 )"	340:4:13297:13377	5070828	43	True				
ANR	5071708	AssignmentExpression	"canonicalizedQueryString += ""&Signature="" + amazonURLEncode ( signatureInBase64 )"		5070828	0		+=			
ANR	5071709	Identifier	canonicalizedQueryString		5070828	0					
ANR	5071710	AdditiveExpression	"""&Signature="" + amazonURLEncode ( signatureInBase64 )"		5070828	1		+			
ANR	5071711	PrimaryExpression	"""&Signature="""		5070828	0					
ANR	5071712	CallExpression	amazonURLEncode ( signatureInBase64 )		5070828	1					
ANR	5071713	Callee	amazonURLEncode		5070828	0					
ANR	5071714	Identifier	amazonURLEncode		5070828	0					
ANR	5071715	ArgumentList	signatureInBase64		5070828	1					
ANR	5071716	Argument	signatureInBase64		5070828	0					
ANR	5071717	Identifier	signatureInBase64		5070828	0					
ANR	5071718	IdentifierDeclStatement	std :: string finalURI ;	341:4:13383:13403	5070828	44	True				
ANR	5071719	IdentifierDecl	finalURI		5070828	0					
ANR	5071720	IdentifierDeclType	std :: string		5070828	0					
ANR	5071721	Identifier	finalURI		5070828	1					
ANR	5071722	IfStatement	"if ( protocol == ""x509"" )"		5070828	45					
ANR	5071723	Condition	"protocol == ""x509"""	342:8:13413:13430	5070828	0	True				
ANR	5071724	EqualityExpression	"protocol == ""x509"""		5070828	0		==			
ANR	5071725	Identifier	protocol		5070828	0					
ANR	5071726	PrimaryExpression	"""x509"""		5070828	1					
ANR	5071727	CompoundStatement		161:29:7333:7333	5070828	1					
ANR	5071728	ExpressionStatement	"finalURI = ""https://"" + hostAndPath + ""?"" + canonicalizedQueryString"	343:8:13444:13512	5070828	0	True				
ANR	5071729	AssignmentExpression	"finalURI = ""https://"" + hostAndPath + ""?"" + canonicalizedQueryString"		5070828	0		=			
ANR	5071730	Identifier	finalURI		5070828	0					
ANR	5071731	AdditiveExpression	"""https://"" + hostAndPath + ""?"" + canonicalizedQueryString"		5070828	1		+			
ANR	5071732	PrimaryExpression	"""https://"""		5070828	0					
ANR	5071733	AdditiveExpression	"hostAndPath + ""?"" + canonicalizedQueryString"		5070828	1		+			
ANR	5071734	Identifier	hostAndPath		5070828	0					
ANR	5071735	AdditiveExpression	"""?"" + canonicalizedQueryString"		5070828	1		+			
ANR	5071736	PrimaryExpression	"""?"""		5070828	0					
ANR	5071737	Identifier	canonicalizedQueryString		5070828	1					
ANR	5071738	ElseStatement	else		5070828	0					
ANR	5071739	CompoundStatement		163:11:7424:7424	5070828	0					
ANR	5071740	ExpressionStatement	"finalURI = this -> serviceURL + ""?"" + canonicalizedQueryString"	345:8:13535:13595	5070828	0	True				
ANR	5071741	AssignmentExpression	"finalURI = this -> serviceURL + ""?"" + canonicalizedQueryString"		5070828	0		=			
ANR	5071742	Identifier	finalURI		5070828	0					
ANR	5071743	AdditiveExpression	"this -> serviceURL + ""?"" + canonicalizedQueryString"		5070828	1		+			
ANR	5071744	PtrMemberAccess	this -> serviceURL		5070828	0					
ANR	5071745	Identifier	this		5070828	0					
ANR	5071746	Identifier	serviceURL		5070828	1					
ANR	5071747	AdditiveExpression	"""?"" + canonicalizedQueryString"		5070828	1		+			
ANR	5071748	PrimaryExpression	"""?"""		5070828	0					
ANR	5071749	Identifier	canonicalizedQueryString		5070828	1					
ANR	5071750	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Request URI is '%s'\\n"" , finalURI . c_str ( ) )"	347:4:13607:13672	5070828	46	True				
ANR	5071751	CallExpression	"dprintf ( D_FULLDEBUG , ""Request URI is '%s'\\n"" , finalURI . c_str ( ) )"		5070828	0					
ANR	5071752	Callee	dprintf		5070828	0					
ANR	5071753	Identifier	dprintf		5070828	0					
ANR	5071754	ArgumentList	D_FULLDEBUG		5070828	1					
ANR	5071755	Argument	D_FULLDEBUG		5070828	0					
ANR	5071756	Identifier	D_FULLDEBUG		5070828	0					
ANR	5071757	Argument	"""Request URI is '%s'\\n"""		5070828	1					
ANR	5071758	PrimaryExpression	"""Request URI is '%s'\\n"""		5070828	0					
ANR	5071759	Argument	finalURI . c_str ( )		5070828	2					
ANR	5071760	CallExpression	finalURI . c_str ( )		5070828	0					
ANR	5071761	Callee	finalURI . c_str		5070828	0					
ANR	5071762	MemberAccess	finalURI . c_str		5070828	0					
ANR	5071763	Identifier	finalURI		5070828	0					
ANR	5071764	Identifier	c_str		5070828	1					
ANR	5071765	ArgumentList			5070828	1					
ANR	5071766	IdentifierDeclStatement	CURLcode rv = curl_global_init ( CURL_GLOBAL_ALL ) ;	352:4:13897:13946	5070828	47	True				
ANR	5071767	IdentifierDecl	rv = curl_global_init ( CURL_GLOBAL_ALL )		5070828	0					
ANR	5071768	IdentifierDeclType	CURLcode		5070828	0					
ANR	5071769	Identifier	rv		5070828	1					
ANR	5071770	AssignmentExpression	rv = curl_global_init ( CURL_GLOBAL_ALL )		5070828	2		=			
ANR	5071771	Identifier	rv		5070828	0					
ANR	5071772	CallExpression	curl_global_init ( CURL_GLOBAL_ALL )		5070828	1					
ANR	5071773	Callee	curl_global_init		5070828	0					
ANR	5071774	Identifier	curl_global_init		5070828	0					
ANR	5071775	ArgumentList	CURL_GLOBAL_ALL		5070828	1					
ANR	5071776	Argument	CURL_GLOBAL_ALL		5070828	0					
ANR	5071777	Identifier	CURL_GLOBAL_ALL		5070828	0					
ANR	5071778	IfStatement	if ( rv != 0 )		5070828	48					
ANR	5071779	Condition	rv != 0	353:8:13956:13962	5070828	0	True				
ANR	5071780	EqualityExpression	rv != 0		5070828	0		!=			
ANR	5071781	Identifier	rv		5070828	0					
ANR	5071782	PrimaryExpression	0		5070828	1					
ANR	5071783	CompoundStatement		172:18:7865:7865	5070828	1					
ANR	5071784	ExpressionStatement	"this -> errorCode = ""E_CURL_LIB"""	354:8:13976:14006	5070828	0	True				
ANR	5071785	AssignmentExpression	"this -> errorCode = ""E_CURL_LIB"""		5070828	0		=			
ANR	5071786	PtrMemberAccess	this -> errorCode		5070828	0					
ANR	5071787	Identifier	this		5070828	0					
ANR	5071788	Identifier	errorCode		5070828	1					
ANR	5071789	PrimaryExpression	"""E_CURL_LIB"""		5070828	1					
ANR	5071790	ExpressionStatement	"this -> errorMessage = ""curl_global_init() failed."""	355:8:14016:14065	5070828	1	True				
ANR	5071791	AssignmentExpression	"this -> errorMessage = ""curl_global_init() failed."""		5070828	0		=			
ANR	5071792	PtrMemberAccess	this -> errorMessage		5070828	0					
ANR	5071793	Identifier	this		5070828	0					
ANR	5071794	Identifier	errorMessage		5070828	1					
ANR	5071795	PrimaryExpression	"""curl_global_init() failed."""		5070828	1					
ANR	5071796	ExpressionStatement	"dprintf ( D_ALWAYS , ""curl_global_init() failed, failing.\\n"" )"	356:8:14075:14135	5070828	2	True				
ANR	5071797	CallExpression	"dprintf ( D_ALWAYS , ""curl_global_init() failed, failing.\\n"" )"		5070828	0					
ANR	5071798	Callee	dprintf		5070828	0					
ANR	5071799	Identifier	dprintf		5070828	0					
ANR	5071800	ArgumentList	D_ALWAYS		5070828	1					
ANR	5071801	Argument	D_ALWAYS		5070828	0					
ANR	5071802	Identifier	D_ALWAYS		5070828	0					
ANR	5071803	Argument	"""curl_global_init() failed, failing.\\n"""		5070828	1					
ANR	5071804	PrimaryExpression	"""curl_global_init() failed, failing.\\n"""		5070828	0					
ANR	5071805	ReturnStatement	return false ;	357:8:14145:14157	5070828	3	True				
ANR	5071806	Identifier	false		5070828	0					
ANR	5071807	IdentifierDeclStatement	CURL * curl = curl_easy_init ( ) ;	360:4:14174:14204	5070828	49	True				
ANR	5071808	IdentifierDecl	* curl = curl_easy_init ( )		5070828	0					
ANR	5071809	IdentifierDeclType	CURL *		5070828	0					
ANR	5071810	Identifier	curl		5070828	1					
ANR	5071811	AssignmentExpression	* curl = curl_easy_init ( )		5070828	2		=			
ANR	5071812	Identifier	curl		5070828	0					
ANR	5071813	CallExpression	curl_easy_init ( )		5070828	1					
ANR	5071814	Callee	curl_easy_init		5070828	0					
ANR	5071815	Identifier	curl_easy_init		5070828	0					
ANR	5071816	ArgumentList			5070828	1					
ANR	5071817	IfStatement	if ( curl == NULL )		5070828	50					
ANR	5071818	Condition	curl == NULL	361:8:14214:14225	5070828	0	True				
ANR	5071819	EqualityExpression	curl == NULL		5070828	0		==			
ANR	5071820	Identifier	curl		5070828	0					
ANR	5071821	Identifier	NULL		5070828	1					
ANR	5071822	CompoundStatement		180:23:8128:8128	5070828	1					
ANR	5071823	ExpressionStatement	"this -> errorCode = ""E_CURL_LIB"""	362:8:14239:14269	5070828	0	True				
ANR	5071824	AssignmentExpression	"this -> errorCode = ""E_CURL_LIB"""		5070828	0		=			
ANR	5071825	PtrMemberAccess	this -> errorCode		5070828	0					
ANR	5071826	Identifier	this		5070828	0					
ANR	5071827	Identifier	errorCode		5070828	1					
ANR	5071828	PrimaryExpression	"""E_CURL_LIB"""		5070828	1					
ANR	5071829	ExpressionStatement	"this -> errorMessage = ""curl_easy_init() failed."""	363:8:14279:14326	5070828	1	True				
ANR	5071830	AssignmentExpression	"this -> errorMessage = ""curl_easy_init() failed."""		5070828	0		=			
ANR	5071831	PtrMemberAccess	this -> errorMessage		5070828	0					
ANR	5071832	Identifier	this		5070828	0					
ANR	5071833	Identifier	errorMessage		5070828	1					
ANR	5071834	PrimaryExpression	"""curl_easy_init() failed."""		5070828	1					
ANR	5071835	ExpressionStatement	"dprintf ( D_ALWAYS , ""curl_easy_init() failed, failing.\\n"" )"	364:8:14336:14394	5070828	2	True				
ANR	5071836	CallExpression	"dprintf ( D_ALWAYS , ""curl_easy_init() failed, failing.\\n"" )"		5070828	0					
ANR	5071837	Callee	dprintf		5070828	0					
ANR	5071838	Identifier	dprintf		5070828	0					
ANR	5071839	ArgumentList	D_ALWAYS		5070828	1					
ANR	5071840	Argument	D_ALWAYS		5070828	0					
ANR	5071841	Identifier	D_ALWAYS		5070828	0					
ANR	5071842	Argument	"""curl_easy_init() failed, failing.\\n"""		5070828	1					
ANR	5071843	PrimaryExpression	"""curl_easy_init() failed, failing.\\n"""		5070828	0					
ANR	5071844	ReturnStatement	return false ;	365:8:14404:14416	5070828	3	True				
ANR	5071845	Identifier	false		5070828	0					
ANR	5071846	IdentifierDeclStatement	char errorBuffer [ CURL_ERROR_SIZE ] ;	368:4:14429:14462	5070828	51	True				
ANR	5071847	IdentifierDecl	errorBuffer [ CURL_ERROR_SIZE ]		5070828	0					
ANR	5071848	IdentifierDeclType	char [ CURL_ERROR_SIZE ]		5070828	0					
ANR	5071849	Identifier	errorBuffer		5070828	1					
ANR	5071850	Identifier	CURL_ERROR_SIZE		5070828	2					
ANR	5071851	ExpressionStatement	"rv = curl_easy_setopt ( curl , CURLOPT_ERRORBUFFER , errorBuffer )"	369:4:14468:14531	5070828	52	True				
ANR	5071852	AssignmentExpression	"rv = curl_easy_setopt ( curl , CURLOPT_ERRORBUFFER , errorBuffer )"		5070828	0		=			
ANR	5071853	Identifier	rv		5070828	0					
ANR	5071854	CallExpression	"curl_easy_setopt ( curl , CURLOPT_ERRORBUFFER , errorBuffer )"		5070828	1					
ANR	5071855	Callee	curl_easy_setopt		5070828	0					
ANR	5071856	Identifier	curl_easy_setopt		5070828	0					
ANR	5071857	ArgumentList	curl		5070828	1					
ANR	5071858	Argument	curl		5070828	0					
ANR	5071859	Identifier	curl		5070828	0					
ANR	5071860	Argument	CURLOPT_ERRORBUFFER		5070828	1					
ANR	5071861	Identifier	CURLOPT_ERRORBUFFER		5070828	0					
ANR	5071862	Argument	errorBuffer		5070828	2					
ANR	5071863	Identifier	errorBuffer		5070828	0					
ANR	5071864	ExpressionStatement	"rv = curl_easy_setopt ( curl , CURLOPT_URL , finalURI . c_str ( ) )"	371:4:14538:14598	5070828	53	True				
ANR	5071865	AssignmentExpression	"rv = curl_easy_setopt ( curl , CURLOPT_URL , finalURI . c_str ( ) )"		5070828	0		=			
ANR	5071866	Identifier	rv		5070828	0					
ANR	5071867	CallExpression	"curl_easy_setopt ( curl , CURLOPT_URL , finalURI . c_str ( ) )"		5070828	1					
ANR	5071868	Callee	curl_easy_setopt		5070828	0					
ANR	5071869	Identifier	curl_easy_setopt		5070828	0					
ANR	5071870	ArgumentList	curl		5070828	1					
ANR	5071871	Argument	curl		5070828	0					
ANR	5071872	Identifier	curl		5070828	0					
ANR	5071873	Argument	CURLOPT_URL		5070828	1					
ANR	5071874	Identifier	CURLOPT_URL		5070828	0					
ANR	5071875	Argument	finalURI . c_str ( )		5070828	2					
ANR	5071876	CallExpression	finalURI . c_str ( )		5070828	0					
ANR	5071877	Callee	finalURI . c_str		5070828	0					
ANR	5071878	MemberAccess	finalURI . c_str		5070828	0					
ANR	5071879	Identifier	finalURI		5070828	0					
ANR	5071880	Identifier	c_str		5070828	1					
ANR	5071881	ArgumentList			5070828	1					
ANR	5071882	IfStatement	if ( rv != CURLE_OK )		5070828	54					
ANR	5071883	Condition	rv != CURLE_OK	372:8:14608:14621	5070828	0	True				
ANR	5071884	EqualityExpression	rv != CURLE_OK		5070828	0		!=			
ANR	5071885	Identifier	rv		5070828	0					
ANR	5071886	Identifier	CURLE_OK		5070828	1					
ANR	5071887	CompoundStatement		191:25:8524:8524	5070828	1					
ANR	5071888	ExpressionStatement	"this -> errorCode = ""E_CURL_LIB"""	373:8:14635:14665	5070828	0	True				
ANR	5071889	AssignmentExpression	"this -> errorCode = ""E_CURL_LIB"""		5070828	0		=			
ANR	5071890	PtrMemberAccess	this -> errorCode		5070828	0					
ANR	5071891	Identifier	this		5070828	0					
ANR	5071892	Identifier	errorCode		5070828	1					
ANR	5071893	PrimaryExpression	"""E_CURL_LIB"""		5070828	1					
ANR	5071894	ExpressionStatement	"this -> errorMessage = ""curl_easy_setopt( CURLOPT_URL ) failed."""	374:8:14675:14737	5070828	1	True				
ANR	5071895	AssignmentExpression	"this -> errorMessage = ""curl_easy_setopt( CURLOPT_URL ) failed."""		5070828	0		=			
ANR	5071896	PtrMemberAccess	this -> errorMessage		5070828	0					
ANR	5071897	Identifier	this		5070828	0					
ANR	5071898	Identifier	errorMessage		5070828	1					
ANR	5071899	PrimaryExpression	"""curl_easy_setopt( CURLOPT_URL ) failed."""		5070828	1					
ANR	5071900	ExpressionStatement	"dprintf ( D_ALWAYS , ""curl_easy_setopt( CURLOPT_URL ) failed (%d): '%s', failing.\\n"" , rv , curl_easy_strerror ( rv ) )"	375:8:14747:14873	5070828	2	True				
ANR	5071901	CallExpression	"dprintf ( D_ALWAYS , ""curl_easy_setopt( CURLOPT_URL ) failed (%d): '%s', failing.\\n"" , rv , curl_easy_strerror ( rv ) )"		5070828	0					
ANR	5071902	Callee	dprintf		5070828	0					
ANR	5071903	Identifier	dprintf		5070828	0					
ANR	5071904	ArgumentList	D_ALWAYS		5070828	1					
ANR	5071905	Argument	D_ALWAYS		5070828	0					
ANR	5071906	Identifier	D_ALWAYS		5070828	0					
ANR	5071907	Argument	"""curl_easy_setopt( CURLOPT_URL ) failed (%d): '%s', failing.\\n"""		5070828	1					
ANR	5071908	PrimaryExpression	"""curl_easy_setopt( CURLOPT_URL ) failed (%d): '%s', failing.\\n"""		5070828	0					
ANR	5071909	Argument	rv		5070828	2					
ANR	5071910	Identifier	rv		5070828	0					
ANR	5071911	Argument	curl_easy_strerror ( rv )		5070828	3					
ANR	5071912	CallExpression	curl_easy_strerror ( rv )		5070828	0					
ANR	5071913	Callee	curl_easy_strerror		5070828	0					
ANR	5071914	Identifier	curl_easy_strerror		5070828	0					
ANR	5071915	ArgumentList	rv		5070828	1					
ANR	5071916	Argument	rv		5070828	0					
ANR	5071917	Identifier	rv		5070828	0					
ANR	5071918	ReturnStatement	return false ;	377:8:14883:14895	5070828	3	True				
ANR	5071919	Identifier	false		5070828	0					
ANR	5071920	ExpressionStatement	"rv = curl_easy_setopt ( curl , CURLOPT_NOPROGRESS , 1 )"	380:4:14908:14960	5070828	55	True				
ANR	5071921	AssignmentExpression	"rv = curl_easy_setopt ( curl , CURLOPT_NOPROGRESS , 1 )"		5070828	0		=			
ANR	5071922	Identifier	rv		5070828	0					
ANR	5071923	CallExpression	"curl_easy_setopt ( curl , CURLOPT_NOPROGRESS , 1 )"		5070828	1					
ANR	5071924	Callee	curl_easy_setopt		5070828	0					
ANR	5071925	Identifier	curl_easy_setopt		5070828	0					
ANR	5071926	ArgumentList	curl		5070828	1					
ANR	5071927	Argument	curl		5070828	0					
ANR	5071928	Identifier	curl		5070828	0					
ANR	5071929	Argument	CURLOPT_NOPROGRESS		5070828	1					
ANR	5071930	Identifier	CURLOPT_NOPROGRESS		5070828	0					
ANR	5071931	Argument	1		5070828	2					
ANR	5071932	PrimaryExpression	1		5070828	0					
ANR	5071933	IfStatement	if ( rv != CURLE_OK )		5070828	56					
ANR	5071934	Condition	rv != CURLE_OK	381:8:14970:14983	5070828	0	True				
ANR	5071935	EqualityExpression	rv != CURLE_OK		5070828	0		!=			
ANR	5071936	Identifier	rv		5070828	0					
ANR	5071937	Identifier	CURLE_OK		5070828	1					
ANR	5071938	CompoundStatement		200:25:8886:8886	5070828	1					
ANR	5071939	ExpressionStatement	"this -> errorCode = ""E_CURL_LIB"""	382:8:14997:15027	5070828	0	True				
ANR	5071940	AssignmentExpression	"this -> errorCode = ""E_CURL_LIB"""		5070828	0		=			
ANR	5071941	PtrMemberAccess	this -> errorCode		5070828	0					
ANR	5071942	Identifier	this		5070828	0					
ANR	5071943	Identifier	errorCode		5070828	1					
ANR	5071944	PrimaryExpression	"""E_CURL_LIB"""		5070828	1					
ANR	5071945	ExpressionStatement	"this -> errorMessage = ""curl_easy_setopt( CURLOPT_NOPROGRESS ) failed."""	383:8:15037:15106	5070828	1	True				
ANR	5071946	AssignmentExpression	"this -> errorMessage = ""curl_easy_setopt( CURLOPT_NOPROGRESS ) failed."""		5070828	0		=			
ANR	5071947	PtrMemberAccess	this -> errorMessage		5070828	0					
ANR	5071948	Identifier	this		5070828	0					
ANR	5071949	Identifier	errorMessage		5070828	1					
ANR	5071950	PrimaryExpression	"""curl_easy_setopt( CURLOPT_NOPROGRESS ) failed."""		5070828	1					
ANR	5071951	ExpressionStatement	"dprintf ( D_ALWAYS , ""curl_easy_setopt( CURLOPT_NOPROGRESS ) failed (%d): '%s', failing.\\n"" , rv , curl_easy_strerror ( rv ) )"	384:8:15116:15249	5070828	2	True				
ANR	5071952	CallExpression	"dprintf ( D_ALWAYS , ""curl_easy_setopt( CURLOPT_NOPROGRESS ) failed (%d): '%s', failing.\\n"" , rv , curl_easy_strerror ( rv ) )"		5070828	0					
ANR	5071953	Callee	dprintf		5070828	0					
ANR	5071954	Identifier	dprintf		5070828	0					
ANR	5071955	ArgumentList	D_ALWAYS		5070828	1					
ANR	5071956	Argument	D_ALWAYS		5070828	0					
ANR	5071957	Identifier	D_ALWAYS		5070828	0					
ANR	5071958	Argument	"""curl_easy_setopt( CURLOPT_NOPROGRESS ) failed (%d): '%s', failing.\\n"""		5070828	1					
ANR	5071959	PrimaryExpression	"""curl_easy_setopt( CURLOPT_NOPROGRESS ) failed (%d): '%s', failing.\\n"""		5070828	0					
ANR	5071960	Argument	rv		5070828	2					
ANR	5071961	Identifier	rv		5070828	0					
ANR	5071962	Argument	curl_easy_strerror ( rv )		5070828	3					
ANR	5071963	CallExpression	curl_easy_strerror ( rv )		5070828	0					
ANR	5071964	Callee	curl_easy_strerror		5070828	0					
ANR	5071965	Identifier	curl_easy_strerror		5070828	0					
ANR	5071966	ArgumentList	rv		5070828	1					
ANR	5071967	Argument	rv		5070828	0					
ANR	5071968	Identifier	rv		5070828	0					
ANR	5071969	ReturnStatement	return false ;	386:8:15259:15271	5070828	3	True				
ANR	5071970	Identifier	false		5070828	0					
ANR	5071971	ExpressionStatement	"rv = curl_easy_setopt ( curl , CURLOPT_WRITEFUNCTION , & appendToString )"	389:4:15288:15358	5070828	57	True				
ANR	5071972	AssignmentExpression	"rv = curl_easy_setopt ( curl , CURLOPT_WRITEFUNCTION , & appendToString )"		5070828	0		=			
ANR	5071973	Identifier	rv		5070828	0					
ANR	5071974	CallExpression	"curl_easy_setopt ( curl , CURLOPT_WRITEFUNCTION , & appendToString )"		5070828	1					
ANR	5071975	Callee	curl_easy_setopt		5070828	0					
ANR	5071976	Identifier	curl_easy_setopt		5070828	0					
ANR	5071977	ArgumentList	curl		5070828	1					
ANR	5071978	Argument	curl		5070828	0					
ANR	5071979	Identifier	curl		5070828	0					
ANR	5071980	Argument	CURLOPT_WRITEFUNCTION		5070828	1					
ANR	5071981	Identifier	CURLOPT_WRITEFUNCTION		5070828	0					
ANR	5071982	Argument	& appendToString		5070828	2					
ANR	5071983	UnaryOperationExpression	& appendToString		5070828	0					
ANR	5071984	UnaryOperator	&		5070828	0					
ANR	5071985	Identifier	appendToString		5070828	1					
ANR	5071986	IfStatement	if ( rv != CURLE_OK )		5070828	58					
ANR	5071987	Condition	rv != CURLE_OK	390:8:15368:15381	5070828	0	True				
ANR	5071988	EqualityExpression	rv != CURLE_OK		5070828	0		!=			
ANR	5071989	Identifier	rv		5070828	0					
ANR	5071990	Identifier	CURLE_OK		5070828	1					
ANR	5071991	CompoundStatement		209:25:9284:9284	5070828	1					
ANR	5071992	ExpressionStatement	"this -> errorCode = ""E_CURL_LIB"""	391:8:15395:15425	5070828	0	True				
ANR	5071993	AssignmentExpression	"this -> errorCode = ""E_CURL_LIB"""		5070828	0		=			
ANR	5071994	PtrMemberAccess	this -> errorCode		5070828	0					
ANR	5071995	Identifier	this		5070828	0					
ANR	5071996	Identifier	errorCode		5070828	1					
ANR	5071997	PrimaryExpression	"""E_CURL_LIB"""		5070828	1					
ANR	5071998	ExpressionStatement	"this -> errorMessage = ""curl_easy_setopt( CURLOPT_WRITEFUNCTION ) failed."""	392:8:15435:15507	5070828	1	True				
ANR	5071999	AssignmentExpression	"this -> errorMessage = ""curl_easy_setopt( CURLOPT_WRITEFUNCTION ) failed."""		5070828	0		=			
ANR	5072000	PtrMemberAccess	this -> errorMessage		5070828	0					
ANR	5072001	Identifier	this		5070828	0					
ANR	5072002	Identifier	errorMessage		5070828	1					
ANR	5072003	PrimaryExpression	"""curl_easy_setopt( CURLOPT_WRITEFUNCTION ) failed."""		5070828	1					
ANR	5072004	ExpressionStatement	"dprintf ( D_ALWAYS , ""curl_easy_setopt( CURLOPT_WRITEFUNCTION ) failed (%d): '%s', failing.\\n"" , rv , curl_easy_strerror ( rv ) )"	393:8:15517:15653	5070828	2	True				
ANR	5072005	CallExpression	"dprintf ( D_ALWAYS , ""curl_easy_setopt( CURLOPT_WRITEFUNCTION ) failed (%d): '%s', failing.\\n"" , rv , curl_easy_strerror ( rv ) )"		5070828	0					
ANR	5072006	Callee	dprintf		5070828	0					
ANR	5072007	Identifier	dprintf		5070828	0					
ANR	5072008	ArgumentList	D_ALWAYS		5070828	1					
ANR	5072009	Argument	D_ALWAYS		5070828	0					
ANR	5072010	Identifier	D_ALWAYS		5070828	0					
ANR	5072011	Argument	"""curl_easy_setopt( CURLOPT_WRITEFUNCTION ) failed (%d): '%s', failing.\\n"""		5070828	1					
ANR	5072012	PrimaryExpression	"""curl_easy_setopt( CURLOPT_WRITEFUNCTION ) failed (%d): '%s', failing.\\n"""		5070828	0					
ANR	5072013	Argument	rv		5070828	2					
ANR	5072014	Identifier	rv		5070828	0					
ANR	5072015	Argument	curl_easy_strerror ( rv )		5070828	3					
ANR	5072016	CallExpression	curl_easy_strerror ( rv )		5070828	0					
ANR	5072017	Callee	curl_easy_strerror		5070828	0					
ANR	5072018	Identifier	curl_easy_strerror		5070828	0					
ANR	5072019	ArgumentList	rv		5070828	1					
ANR	5072020	Argument	rv		5070828	0					
ANR	5072021	Identifier	rv		5070828	0					
ANR	5072022	ReturnStatement	return false ;	395:8:15663:15675	5070828	3	True				
ANR	5072023	Identifier	false		5070828	0					
ANR	5072024	ExpressionStatement	"rv = curl_easy_setopt ( curl , CURLOPT_WRITEDATA , & this -> resultString )"	398:4:15692:15762	5070828	59	True				
ANR	5072025	AssignmentExpression	"rv = curl_easy_setopt ( curl , CURLOPT_WRITEDATA , & this -> resultString )"		5070828	0		=			
ANR	5072026	Identifier	rv		5070828	0					
ANR	5072027	CallExpression	"curl_easy_setopt ( curl , CURLOPT_WRITEDATA , & this -> resultString )"		5070828	1					
ANR	5072028	Callee	curl_easy_setopt		5070828	0					
ANR	5072029	Identifier	curl_easy_setopt		5070828	0					
ANR	5072030	ArgumentList	curl		5070828	1					
ANR	5072031	Argument	curl		5070828	0					
ANR	5072032	Identifier	curl		5070828	0					
ANR	5072033	Argument	CURLOPT_WRITEDATA		5070828	1					
ANR	5072034	Identifier	CURLOPT_WRITEDATA		5070828	0					
ANR	5072035	Argument	& this -> resultString		5070828	2					
ANR	5072036	UnaryOperationExpression	& this -> resultString		5070828	0					
ANR	5072037	UnaryOperator	&		5070828	0					
ANR	5072038	PtrMemberAccess	this -> resultString		5070828	1					
ANR	5072039	Identifier	this		5070828	0					
ANR	5072040	Identifier	resultString		5070828	1					
ANR	5072041	IfStatement	if ( rv != CURLE_OK )		5070828	60					
ANR	5072042	Condition	rv != CURLE_OK	399:8:15772:15785	5070828	0	True				
ANR	5072043	EqualityExpression	rv != CURLE_OK		5070828	0		!=			
ANR	5072044	Identifier	rv		5070828	0					
ANR	5072045	Identifier	CURLE_OK		5070828	1					
ANR	5072046	CompoundStatement		218:25:9688:9688	5070828	1					
ANR	5072047	ExpressionStatement	"this -> errorCode = ""E_CURL_LIB"""	400:8:15799:15829	5070828	0	True				
ANR	5072048	AssignmentExpression	"this -> errorCode = ""E_CURL_LIB"""		5070828	0		=			
ANR	5072049	PtrMemberAccess	this -> errorCode		5070828	0					
ANR	5072050	Identifier	this		5070828	0					
ANR	5072051	Identifier	errorCode		5070828	1					
ANR	5072052	PrimaryExpression	"""E_CURL_LIB"""		5070828	1					
ANR	5072053	ExpressionStatement	"this -> errorMessage = ""curl_easy_setopt( CURLOPT_WRITEDATA ) failed."""	401:8:15839:15907	5070828	1	True				
ANR	5072054	AssignmentExpression	"this -> errorMessage = ""curl_easy_setopt( CURLOPT_WRITEDATA ) failed."""		5070828	0		=			
ANR	5072055	PtrMemberAccess	this -> errorMessage		5070828	0					
ANR	5072056	Identifier	this		5070828	0					
ANR	5072057	Identifier	errorMessage		5070828	1					
ANR	5072058	PrimaryExpression	"""curl_easy_setopt( CURLOPT_WRITEDATA ) failed."""		5070828	1					
ANR	5072059	ExpressionStatement	"dprintf ( D_ALWAYS , ""curl_easy_setopt( CURLOPT_WRITEDATA ) failed (%d): '%s', failing.\\n"" , rv , curl_easy_strerror ( rv ) )"	402:8:15917:16049	5070828	2	True				
ANR	5072060	CallExpression	"dprintf ( D_ALWAYS , ""curl_easy_setopt( CURLOPT_WRITEDATA ) failed (%d): '%s', failing.\\n"" , rv , curl_easy_strerror ( rv ) )"		5070828	0					
ANR	5072061	Callee	dprintf		5070828	0					
ANR	5072062	Identifier	dprintf		5070828	0					
ANR	5072063	ArgumentList	D_ALWAYS		5070828	1					
ANR	5072064	Argument	D_ALWAYS		5070828	0					
ANR	5072065	Identifier	D_ALWAYS		5070828	0					
ANR	5072066	Argument	"""curl_easy_setopt( CURLOPT_WRITEDATA ) failed (%d): '%s', failing.\\n"""		5070828	1					
ANR	5072067	PrimaryExpression	"""curl_easy_setopt( CURLOPT_WRITEDATA ) failed (%d): '%s', failing.\\n"""		5070828	0					
ANR	5072068	Argument	rv		5070828	2					
ANR	5072069	Identifier	rv		5070828	0					
ANR	5072070	Argument	curl_easy_strerror ( rv )		5070828	3					
ANR	5072071	CallExpression	curl_easy_strerror ( rv )		5070828	0					
ANR	5072072	Callee	curl_easy_strerror		5070828	0					
ANR	5072073	Identifier	curl_easy_strerror		5070828	0					
ANR	5072074	ArgumentList	rv		5070828	1					
ANR	5072075	Argument	rv		5070828	0					
ANR	5072076	Identifier	rv		5070828	0					
ANR	5072077	ReturnStatement	return false ;	404:8:16059:16071	5070828	3	True				
ANR	5072078	Identifier	false		5070828	0					
ANR	5072079	ExpressionStatement	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_SSL_VERIFYPEER , 1 )"	407:4:16088:16147	5070828	61	True				
ANR	5072080	CallExpression	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_SSL_VERIFYPEER , 1 )"		5070828	0					
ANR	5072081	Callee	SET_CURL_SECURITY_OPTION		5070828	0					
ANR	5072082	Identifier	SET_CURL_SECURITY_OPTION		5070828	0					
ANR	5072083	ArgumentList	curl		5070828	1					
ANR	5072084	Argument	curl		5070828	0					
ANR	5072085	Identifier	curl		5070828	0					
ANR	5072086	Argument	CURLOPT_SSL_VERIFYPEER		5070828	1					
ANR	5072087	Identifier	CURLOPT_SSL_VERIFYPEER		5070828	0					
ANR	5072088	Argument	1		5070828	2					
ANR	5072089	PrimaryExpression	1		5070828	0					
ANR	5072090	ExpressionStatement	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_SSL_VERIFYHOST , 2 )"	408:4:16153:16212	5070828	62	True				
ANR	5072091	CallExpression	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_SSL_VERIFYHOST , 2 )"		5070828	0					
ANR	5072092	Callee	SET_CURL_SECURITY_OPTION		5070828	0					
ANR	5072093	Identifier	SET_CURL_SECURITY_OPTION		5070828	0					
ANR	5072094	ArgumentList	curl		5070828	1					
ANR	5072095	Argument	curl		5070828	0					
ANR	5072096	Identifier	curl		5070828	0					
ANR	5072097	Argument	CURLOPT_SSL_VERIFYHOST		5070828	1					
ANR	5072098	Identifier	CURLOPT_SSL_VERIFYHOST		5070828	0					
ANR	5072099	Argument	2		5070828	2					
ANR	5072100	PrimaryExpression	2		5070828	0					
ANR	5072101	IdentifierDeclStatement	"std :: string CAFile = """" ;"	410:4:16219:16242	5070828	63	True				
ANR	5072102	IdentifierDecl	"CAFile = """""		5070828	0					
ANR	5072103	IdentifierDeclType	std :: string		5070828	0					
ANR	5072104	Identifier	CAFile		5070828	1					
ANR	5072105	AssignmentExpression	"CAFile = """""		5070828	2		=			
ANR	5072106	Identifier	CAFile		5070828	0					
ANR	5072107	PrimaryExpression	""""""		5070828	1					
ANR	5072108	IdentifierDeclStatement	"std :: string CAPath = """" ;"	411:4:16248:16271	5070828	64	True				
ANR	5072109	IdentifierDecl	"CAPath = """""		5070828	0					
ANR	5072110	IdentifierDeclType	std :: string		5070828	0					
ANR	5072111	Identifier	CAPath		5070828	1					
ANR	5072112	AssignmentExpression	"CAPath = """""		5070828	2		=			
ANR	5072113	Identifier	CAPath		5070828	0					
ANR	5072114	PrimaryExpression	""""""		5070828	1					
ANR	5072115	IfStatement	"if ( protocol == ""x509"" )"		5070828	65					
ANR	5072116	Condition	"protocol == ""x509"""	412:8:16281:16298	5070828	0	True				
ANR	5072117	EqualityExpression	"protocol == ""x509"""		5070828	0		==			
ANR	5072118	Identifier	protocol		5070828	0					
ANR	5072119	PrimaryExpression	"""x509"""		5070828	1					
ANR	5072120	CompoundStatement		252:8:11132:11180	5070828	1					
ANR	5072121	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Configuring x.509...\\n"" )"	413:8:16312:16360	5070828	0	True				
ANR	5072122	CallExpression	"dprintf ( D_FULLDEBUG , ""Configuring x.509...\\n"" )"		5070828	0					
ANR	5072123	Callee	dprintf		5070828	0					
ANR	5072124	Identifier	dprintf		5070828	0					
ANR	5072125	ArgumentList	D_FULLDEBUG		5070828	1					
ANR	5072126	Argument	D_FULLDEBUG		5070828	0					
ANR	5072127	Identifier	D_FULLDEBUG		5070828	0					
ANR	5072128	Argument	"""Configuring x.509...\\n"""		5070828	1					
ANR	5072129	PrimaryExpression	"""Configuring x.509...\\n"""		5070828	0					
ANR	5072130	ExpressionStatement	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_SSLKEYTYPE , ""PEM"" )"	415:8:16371:16430	5070828	1	True				
ANR	5072131	CallExpression	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_SSLKEYTYPE , ""PEM"" )"		5070828	0					
ANR	5072132	Callee	SET_CURL_SECURITY_OPTION		5070828	0					
ANR	5072133	Identifier	SET_CURL_SECURITY_OPTION		5070828	0					
ANR	5072134	ArgumentList	curl		5070828	1					
ANR	5072135	Argument	curl		5070828	0					
ANR	5072136	Identifier	curl		5070828	0					
ANR	5072137	Argument	CURLOPT_SSLKEYTYPE		5070828	1					
ANR	5072138	Identifier	CURLOPT_SSLKEYTYPE		5070828	0					
ANR	5072139	Argument	"""PEM"""		5070828	2					
ANR	5072140	PrimaryExpression	"""PEM"""		5070828	0					
ANR	5072141	ExpressionStatement	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_SSLKEY , this -> secretKeyFile . c_str ( ) )"	416:8:16440:16517	5070828	2	True				
ANR	5072142	CallExpression	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_SSLKEY , this -> secretKeyFile . c_str ( ) )"		5070828	0					
ANR	5072143	Callee	SET_CURL_SECURITY_OPTION		5070828	0					
ANR	5072144	Identifier	SET_CURL_SECURITY_OPTION		5070828	0					
ANR	5072145	ArgumentList	curl		5070828	1					
ANR	5072146	Argument	curl		5070828	0					
ANR	5072147	Identifier	curl		5070828	0					
ANR	5072148	Argument	CURLOPT_SSLKEY		5070828	1					
ANR	5072149	Identifier	CURLOPT_SSLKEY		5070828	0					
ANR	5072150	Argument	this -> secretKeyFile . c_str ( )		5070828	2					
ANR	5072151	CallExpression	this -> secretKeyFile . c_str ( )		5070828	0					
ANR	5072152	Callee	this -> secretKeyFile . c_str		5070828	0					
ANR	5072153	MemberAccess	this -> secretKeyFile . c_str		5070828	0					
ANR	5072154	PtrMemberAccess	this -> secretKeyFile		5070828	0					
ANR	5072155	Identifier	this		5070828	0					
ANR	5072156	Identifier	secretKeyFile		5070828	1					
ANR	5072157	Identifier	c_str		5070828	1					
ANR	5072158	ArgumentList			5070828	1					
ANR	5072159	ExpressionStatement	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_SSLCERTTYPE , ""PEM"" )"	418:8:16528:16588	5070828	3	True				
ANR	5072160	CallExpression	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_SSLCERTTYPE , ""PEM"" )"		5070828	0					
ANR	5072161	Callee	SET_CURL_SECURITY_OPTION		5070828	0					
ANR	5072162	Identifier	SET_CURL_SECURITY_OPTION		5070828	0					
ANR	5072163	ArgumentList	curl		5070828	1					
ANR	5072164	Argument	curl		5070828	0					
ANR	5072165	Identifier	curl		5070828	0					
ANR	5072166	Argument	CURLOPT_SSLCERTTYPE		5070828	1					
ANR	5072167	Identifier	CURLOPT_SSLCERTTYPE		5070828	0					
ANR	5072168	Argument	"""PEM"""		5070828	2					
ANR	5072169	PrimaryExpression	"""PEM"""		5070828	0					
ANR	5072170	ExpressionStatement	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_SSLCERT , this -> accessKeyFile . c_str ( ) )"	419:8:16598:16676	5070828	4	True				
ANR	5072171	CallExpression	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_SSLCERT , this -> accessKeyFile . c_str ( ) )"		5070828	0					
ANR	5072172	Callee	SET_CURL_SECURITY_OPTION		5070828	0					
ANR	5072173	Identifier	SET_CURL_SECURITY_OPTION		5070828	0					
ANR	5072174	ArgumentList	curl		5070828	1					
ANR	5072175	Argument	curl		5070828	0					
ANR	5072176	Identifier	curl		5070828	0					
ANR	5072177	Argument	CURLOPT_SSLCERT		5070828	1					
ANR	5072178	Identifier	CURLOPT_SSLCERT		5070828	0					
ANR	5072179	Argument	this -> accessKeyFile . c_str ( )		5070828	2					
ANR	5072180	CallExpression	this -> accessKeyFile . c_str ( )		5070828	0					
ANR	5072181	Callee	this -> accessKeyFile . c_str		5070828	0					
ANR	5072182	MemberAccess	this -> accessKeyFile . c_str		5070828	0					
ANR	5072183	PtrMemberAccess	this -> accessKeyFile		5070828	0					
ANR	5072184	Identifier	this		5070828	0					
ANR	5072185	Identifier	accessKeyFile		5070828	1					
ANR	5072186	Identifier	c_str		5070828	1					
ANR	5072187	ArgumentList			5070828	1					
ANR	5072188	IdentifierDeclStatement	"char * x509_ca_dir = getenv ( ""X509_CERT_DIR"" ) ;"	428:8:17096:17142	5070828	5	True				
ANR	5072189	IdentifierDecl	"* x509_ca_dir = getenv ( ""X509_CERT_DIR"" )"		5070828	0					
ANR	5072190	IdentifierDeclType	char *		5070828	0					
ANR	5072191	Identifier	x509_ca_dir		5070828	1					
ANR	5072192	AssignmentExpression	"* x509_ca_dir = getenv ( ""X509_CERT_DIR"" )"		5070828	2		=			
ANR	5072193	Identifier	x509_ca_dir		5070828	0					
ANR	5072194	CallExpression	"getenv ( ""X509_CERT_DIR"" )"		5070828	1					
ANR	5072195	Callee	getenv		5070828	0					
ANR	5072196	Identifier	getenv		5070828	0					
ANR	5072197	ArgumentList	"""X509_CERT_DIR"""		5070828	1					
ANR	5072198	Argument	"""X509_CERT_DIR"""		5070828	0					
ANR	5072199	PrimaryExpression	"""X509_CERT_DIR"""		5070828	0					
ANR	5072200	IfStatement	if ( x509_ca_dir != NULL )		5070828	6					
ANR	5072201	Condition	x509_ca_dir != NULL	429:12:17156:17174	5070828	0	True				
ANR	5072202	EqualityExpression	x509_ca_dir != NULL		5070828	0		!=			
ANR	5072203	Identifier	x509_ca_dir		5070828	0					
ANR	5072204	Identifier	NULL		5070828	1					
ANR	5072205	CompoundStatement		248:34:11077:11077	5070828	1					
ANR	5072206	ExpressionStatement	CAPath = x509_ca_dir	430:12:17192:17212	5070828	0	True				
ANR	5072207	AssignmentExpression	CAPath = x509_ca_dir		5070828	0		=			
ANR	5072208	Identifier	CAPath		5070828	0					
ANR	5072209	Identifier	x509_ca_dir		5070828	1					
ANR	5072210	IdentifierDeclStatement	"char * x509_ca_file = getenv ( ""X509_CERT_FILE"" ) ;"	433:8:17233:17281	5070828	7	True				
ANR	5072211	IdentifierDecl	"* x509_ca_file = getenv ( ""X509_CERT_FILE"" )"		5070828	0					
ANR	5072212	IdentifierDeclType	char *		5070828	0					
ANR	5072213	Identifier	x509_ca_file		5070828	1					
ANR	5072214	AssignmentExpression	"* x509_ca_file = getenv ( ""X509_CERT_FILE"" )"		5070828	2		=			
ANR	5072215	Identifier	x509_ca_file		5070828	0					
ANR	5072216	CallExpression	"getenv ( ""X509_CERT_FILE"" )"		5070828	1					
ANR	5072217	Callee	getenv		5070828	0					
ANR	5072218	Identifier	getenv		5070828	0					
ANR	5072219	ArgumentList	"""X509_CERT_FILE"""		5070828	1					
ANR	5072220	Argument	"""X509_CERT_FILE"""		5070828	0					
ANR	5072221	PrimaryExpression	"""X509_CERT_FILE"""		5070828	0					
ANR	5072222	IfStatement	if ( x509_ca_file != NULL )		5070828	8					
ANR	5072223	Condition	x509_ca_file != NULL	434:12:17295:17314	5070828	0	True				
ANR	5072224	EqualityExpression	x509_ca_file != NULL		5070828	0		!=			
ANR	5072225	Identifier	x509_ca_file		5070828	0					
ANR	5072226	Identifier	NULL		5070828	1					
ANR	5072227	CompoundStatement		253:35:11217:11217	5070828	1					
ANR	5072228	ExpressionStatement	CAFile = x509_ca_file	435:12:17332:17353	5070828	0	True				
ANR	5072229	AssignmentExpression	CAFile = x509_ca_file		5070828	0		=			
ANR	5072230	Identifier	CAFile		5070828	0					
ANR	5072231	Identifier	x509_ca_file		5070828	1					
ANR	5072232	IfStatement	if ( CAPath . empty ( ) )		5070828	9					
ANR	5072233	Condition	CAPath . empty ( )	438:12:17386:17399	5070828	0	True				
ANR	5072234	CallExpression	CAPath . empty ( )		5070828	0					
ANR	5072235	Callee	CAPath . empty		5070828	0					
ANR	5072236	MemberAccess	CAPath . empty		5070828	0					
ANR	5072237	Identifier	CAPath		5070828	0					
ANR	5072238	Identifier	empty		5070828	1					
ANR	5072239	ArgumentList			5070828	1					
ANR	5072240	CompoundStatement		258:12:11316:11368	5070828	1					
ANR	5072241	IdentifierDeclStatement	"char * soap_ssl_ca_dir = getenv ( ""SOAP_SSL_CA_DIR"" ) ;"	439:12:17417:17469	5070828	0	True				
ANR	5072242	IdentifierDecl	"* soap_ssl_ca_dir = getenv ( ""SOAP_SSL_CA_DIR"" )"		5070828	0					
ANR	5072243	IdentifierDeclType	char *		5070828	0					
ANR	5072244	Identifier	soap_ssl_ca_dir		5070828	1					
ANR	5072245	AssignmentExpression	"* soap_ssl_ca_dir = getenv ( ""SOAP_SSL_CA_DIR"" )"		5070828	2		=			
ANR	5072246	Identifier	soap_ssl_ca_dir		5070828	0					
ANR	5072247	CallExpression	"getenv ( ""SOAP_SSL_CA_DIR"" )"		5070828	1					
ANR	5072248	Callee	getenv		5070828	0					
ANR	5072249	Identifier	getenv		5070828	0					
ANR	5072250	ArgumentList	"""SOAP_SSL_CA_DIR"""		5070828	1					
ANR	5072251	Argument	"""SOAP_SSL_CA_DIR"""		5070828	0					
ANR	5072252	PrimaryExpression	"""SOAP_SSL_CA_DIR"""		5070828	0					
ANR	5072253	IfStatement	if ( soap_ssl_ca_dir != NULL )		5070828	1					
ANR	5072254	Condition	soap_ssl_ca_dir != NULL	440:16:17487:17509	5070828	0	True				
ANR	5072255	EqualityExpression	soap_ssl_ca_dir != NULL		5070828	0		!=			
ANR	5072256	Identifier	soap_ssl_ca_dir		5070828	0					
ANR	5072257	Identifier	NULL		5070828	1					
ANR	5072258	CompoundStatement		259:42:11412:11412	5070828	1					
ANR	5072259	ExpressionStatement	CAPath = soap_ssl_ca_dir	441:16:17531:17555	5070828	0	True				
ANR	5072260	AssignmentExpression	CAPath = soap_ssl_ca_dir		5070828	0		=			
ANR	5072261	Identifier	CAPath		5070828	0					
ANR	5072262	Identifier	soap_ssl_ca_dir		5070828	1					
ANR	5072263	IfStatement	if ( CAFile . empty ( ) )		5070828	10					
ANR	5072264	Condition	CAFile . empty ( )	445:12:17594:17607	5070828	0	True				
ANR	5072265	CallExpression	CAFile . empty ( )		5070828	0					
ANR	5072266	Callee	CAFile . empty		5070828	0					
ANR	5072267	MemberAccess	CAFile . empty		5070828	0					
ANR	5072268	Identifier	CAFile		5070828	0					
ANR	5072269	Identifier	empty		5070828	1					
ANR	5072270	ArgumentList			5070828	1					
ANR	5072271	CompoundStatement		265:12:11524:11578	5070828	1					
ANR	5072272	IdentifierDeclStatement	"char * soap_ssl_ca_file = getenv ( ""SOAP_SSL_CA_FILE"" ) ;"	446:12:17625:17679	5070828	0	True				
ANR	5072273	IdentifierDecl	"* soap_ssl_ca_file = getenv ( ""SOAP_SSL_CA_FILE"" )"		5070828	0					
ANR	5072274	IdentifierDeclType	char *		5070828	0					
ANR	5072275	Identifier	soap_ssl_ca_file		5070828	1					
ANR	5072276	AssignmentExpression	"* soap_ssl_ca_file = getenv ( ""SOAP_SSL_CA_FILE"" )"		5070828	2		=			
ANR	5072277	Identifier	soap_ssl_ca_file		5070828	0					
ANR	5072278	CallExpression	"getenv ( ""SOAP_SSL_CA_FILE"" )"		5070828	1					
ANR	5072279	Callee	getenv		5070828	0					
ANR	5072280	Identifier	getenv		5070828	0					
ANR	5072281	ArgumentList	"""SOAP_SSL_CA_FILE"""		5070828	1					
ANR	5072282	Argument	"""SOAP_SSL_CA_FILE"""		5070828	0					
ANR	5072283	PrimaryExpression	"""SOAP_SSL_CA_FILE"""		5070828	0					
ANR	5072284	IfStatement	if ( soap_ssl_ca_file != NULL )		5070828	1					
ANR	5072285	Condition	soap_ssl_ca_file != NULL	447:16:17697:17720	5070828	0	True				
ANR	5072286	EqualityExpression	soap_ssl_ca_file != NULL		5070828	0		!=			
ANR	5072287	Identifier	soap_ssl_ca_file		5070828	0					
ANR	5072288	Identifier	NULL		5070828	1					
ANR	5072289	CompoundStatement		266:43:11623:11623	5070828	1					
ANR	5072290	ExpressionStatement	CAFile = soap_ssl_ca_file	448:16:17742:17767	5070828	0	True				
ANR	5072291	AssignmentExpression	CAFile = soap_ssl_ca_file		5070828	0		=			
ANR	5072292	Identifier	CAFile		5070828	0					
ANR	5072293	Identifier	soap_ssl_ca_file		5070828	1					
ANR	5072294	IfStatement	if ( CAPath . empty ( ) )		5070828	11					
ANR	5072295	Condition	CAPath . empty ( )	452:12:17806:17819	5070828	0	True				
ANR	5072296	CallExpression	CAPath . empty ( )		5070828	0					
ANR	5072297	Callee	CAPath . empty		5070828	0					
ANR	5072298	MemberAccess	CAPath . empty		5070828	0					
ANR	5072299	Identifier	CAPath		5070828	0					
ANR	5072300	Identifier	empty		5070828	1					
ANR	5072301	ArgumentList			5070828	1					
ANR	5072302	CompoundStatement		271:29:11722:11722	5070828	1					
ANR	5072303	ExpressionStatement	"CAPath = ""/etc/grid-security/certificates"""	453:12:17837:17879	5070828	0	True				
ANR	5072304	AssignmentExpression	"CAPath = ""/etc/grid-security/certificates"""		5070828	0		=			
ANR	5072305	Identifier	CAPath		5070828	0					
ANR	5072306	PrimaryExpression	"""/etc/grid-security/certificates"""		5070828	1					
ANR	5072307	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Setting CA path to '%s'\\n"" , CAPath . c_str ( ) )"	455:8:17899:17966	5070828	12	True				
ANR	5072308	CallExpression	"dprintf ( D_FULLDEBUG , ""Setting CA path to '%s'\\n"" , CAPath . c_str ( ) )"		5070828	0					
ANR	5072309	Callee	dprintf		5070828	0					
ANR	5072310	Identifier	dprintf		5070828	0					
ANR	5072311	ArgumentList	D_FULLDEBUG		5070828	1					
ANR	5072312	Argument	D_FULLDEBUG		5070828	0					
ANR	5072313	Identifier	D_FULLDEBUG		5070828	0					
ANR	5072314	Argument	"""Setting CA path to '%s'\\n"""		5070828	1					
ANR	5072315	PrimaryExpression	"""Setting CA path to '%s'\\n"""		5070828	0					
ANR	5072316	Argument	CAPath . c_str ( )		5070828	2					
ANR	5072317	CallExpression	CAPath . c_str ( )		5070828	0					
ANR	5072318	Callee	CAPath . c_str		5070828	0					
ANR	5072319	MemberAccess	CAPath . c_str		5070828	0					
ANR	5072320	Identifier	CAPath		5070828	0					
ANR	5072321	Identifier	c_str		5070828	1					
ANR	5072322	ArgumentList			5070828	1					
ANR	5072323	ExpressionStatement	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_CAPATH , CAPath . c_str ( ) )"	456:8:17976:18040	5070828	13	True				
ANR	5072324	CallExpression	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_CAPATH , CAPath . c_str ( ) )"		5070828	0					
ANR	5072325	Callee	SET_CURL_SECURITY_OPTION		5070828	0					
ANR	5072326	Identifier	SET_CURL_SECURITY_OPTION		5070828	0					
ANR	5072327	ArgumentList	curl		5070828	1					
ANR	5072328	Argument	curl		5070828	0					
ANR	5072329	Identifier	curl		5070828	0					
ANR	5072330	Argument	CURLOPT_CAPATH		5070828	1					
ANR	5072331	Identifier	CURLOPT_CAPATH		5070828	0					
ANR	5072332	Argument	CAPath . c_str ( )		5070828	2					
ANR	5072333	CallExpression	CAPath . c_str ( )		5070828	0					
ANR	5072334	Callee	CAPath . c_str		5070828	0					
ANR	5072335	MemberAccess	CAPath . c_str		5070828	0					
ANR	5072336	Identifier	CAPath		5070828	0					
ANR	5072337	Identifier	c_str		5070828	1					
ANR	5072338	ArgumentList			5070828	1					
ANR	5072339	IfStatement	if ( ! CAFile . empty ( ) )		5070828	14					
ANR	5072340	Condition	! CAFile . empty ( )	458:12:18063:18078	5070828	0	True				
ANR	5072341	UnaryOperationExpression	! CAFile . empty ( )		5070828	0					
ANR	5072342	UnaryOperator	!		5070828	0					
ANR	5072343	CallExpression	CAFile . empty ( )		5070828	1					
ANR	5072344	Callee	CAFile . empty		5070828	0					
ANR	5072345	MemberAccess	CAFile . empty		5070828	0					
ANR	5072346	Identifier	CAFile		5070828	0					
ANR	5072347	Identifier	empty		5070828	1					
ANR	5072348	ArgumentList			5070828	1					
ANR	5072349	CompoundStatement		277:31:11981:11981	5070828	1					
ANR	5072350	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Setting CA file to '%s'\\n"" , CAFile . c_str ( ) )"	459:12:18096:18163	5070828	0	True				
ANR	5072351	CallExpression	"dprintf ( D_FULLDEBUG , ""Setting CA file to '%s'\\n"" , CAFile . c_str ( ) )"		5070828	0					
ANR	5072352	Callee	dprintf		5070828	0					
ANR	5072353	Identifier	dprintf		5070828	0					
ANR	5072354	ArgumentList	D_FULLDEBUG		5070828	1					
ANR	5072355	Argument	D_FULLDEBUG		5070828	0					
ANR	5072356	Identifier	D_FULLDEBUG		5070828	0					
ANR	5072357	Argument	"""Setting CA file to '%s'\\n"""		5070828	1					
ANR	5072358	PrimaryExpression	"""Setting CA file to '%s'\\n"""		5070828	0					
ANR	5072359	Argument	CAFile . c_str ( )		5070828	2					
ANR	5072360	CallExpression	CAFile . c_str ( )		5070828	0					
ANR	5072361	Callee	CAFile . c_str		5070828	0					
ANR	5072362	MemberAccess	CAFile . c_str		5070828	0					
ANR	5072363	Identifier	CAFile		5070828	0					
ANR	5072364	Identifier	c_str		5070828	1					
ANR	5072365	ArgumentList			5070828	1					
ANR	5072366	ExpressionStatement	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_CAINFO , CAFile . c_str ( ) )"	460:12:18177:18241	5070828	1	True				
ANR	5072367	CallExpression	"SET_CURL_SECURITY_OPTION ( curl , CURLOPT_CAINFO , CAFile . c_str ( ) )"		5070828	0					
ANR	5072368	Callee	SET_CURL_SECURITY_OPTION		5070828	0					
ANR	5072369	Identifier	SET_CURL_SECURITY_OPTION		5070828	0					
ANR	5072370	ArgumentList	curl		5070828	1					
ANR	5072371	Argument	curl		5070828	0					
ANR	5072372	Identifier	curl		5070828	0					
ANR	5072373	Argument	CURLOPT_CAINFO		5070828	1					
ANR	5072374	Identifier	CURLOPT_CAINFO		5070828	0					
ANR	5072375	Argument	CAFile . c_str ( )		5070828	2					
ANR	5072376	CallExpression	CAFile . c_str ( )		5070828	0					
ANR	5072377	Callee	CAFile . c_str		5070828	0					
ANR	5072378	MemberAccess	CAFile . c_str		5070828	0					
ANR	5072379	Identifier	CAFile		5070828	0					
ANR	5072380	Identifier	c_str		5070828	1					
ANR	5072381	ArgumentList			5070828	1					
ANR	5072382	IfStatement	"if ( setenv ( ""OPENSSL_ALLOW_PROXY"" , ""1"" , 0 ) != 0 )"		5070828	15					
ANR	5072383	Condition	"setenv ( ""OPENSSL_ALLOW_PROXY"" , ""1"" , 0 ) != 0"	463:12:18274:18317	5070828	0	True				
ANR	5072384	EqualityExpression	"setenv ( ""OPENSSL_ALLOW_PROXY"" , ""1"" , 0 ) != 0"		5070828	0		!=			
ANR	5072385	CallExpression	"setenv ( ""OPENSSL_ALLOW_PROXY"" , ""1"" , 0 )"		5070828	0					
ANR	5072386	Callee	setenv		5070828	0					
ANR	5072387	Identifier	setenv		5070828	0					
ANR	5072388	ArgumentList	"""OPENSSL_ALLOW_PROXY"""		5070828	1					
ANR	5072389	Argument	"""OPENSSL_ALLOW_PROXY"""		5070828	0					
ANR	5072390	PrimaryExpression	"""OPENSSL_ALLOW_PROXY"""		5070828	0					
ANR	5072391	Argument	"""1"""		5070828	1					
ANR	5072392	PrimaryExpression	"""1"""		5070828	0					
ANR	5072393	Argument	0		5070828	2					
ANR	5072394	PrimaryExpression	0		5070828	0					
ANR	5072395	PrimaryExpression	0		5070828	1					
ANR	5072396	CompoundStatement		282:59:12220:12220	5070828	1					
ANR	5072397	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Failed to set OPENSSL_ALLOW_PROXY.\\n"" )"	464:12:18335:18397	5070828	0	True				
ANR	5072398	CallExpression	"dprintf ( D_FULLDEBUG , ""Failed to set OPENSSL_ALLOW_PROXY.\\n"" )"		5070828	0					
ANR	5072399	Callee	dprintf		5070828	0					
ANR	5072400	Identifier	dprintf		5070828	0					
ANR	5072401	ArgumentList	D_FULLDEBUG		5070828	1					
ANR	5072402	Argument	D_FULLDEBUG		5070828	0					
ANR	5072403	Identifier	D_FULLDEBUG		5070828	0					
ANR	5072404	Argument	"""Failed to set OPENSSL_ALLOW_PROXY.\\n"""		5070828	1					
ANR	5072405	PrimaryExpression	"""Failed to set OPENSSL_ALLOW_PROXY.\\n"""		5070828	0					
ANR	5072406	ExpressionStatement	amazon_gahp_release_big_mutex ( )	468:4:18432:18463	5070828	66	True				
ANR	5072407	CallExpression	amazon_gahp_release_big_mutex ( )		5070828	0					
ANR	5072408	Callee	amazon_gahp_release_big_mutex		5070828	0					
ANR	5072409	Identifier	amazon_gahp_release_big_mutex		5070828	0					
ANR	5072410	ArgumentList			5070828	1					
ANR	5072411	ExpressionStatement	rv = curl_easy_perform ( curl )	469:4:18469:18499	5070828	67	True				
ANR	5072412	AssignmentExpression	rv = curl_easy_perform ( curl )		5070828	0		=			
ANR	5072413	Identifier	rv		5070828	0					
ANR	5072414	CallExpression	curl_easy_perform ( curl )		5070828	1					
ANR	5072415	Callee	curl_easy_perform		5070828	0					
ANR	5072416	Identifier	curl_easy_perform		5070828	0					
ANR	5072417	ArgumentList	curl		5070828	1					
ANR	5072418	Argument	curl		5070828	0					
ANR	5072419	Identifier	curl		5070828	0					
ANR	5072420	ExpressionStatement	amazon_gahp_grab_big_mutex ( )	470:4:18505:18533	5070828	68	True				
ANR	5072421	CallExpression	amazon_gahp_grab_big_mutex ( )		5070828	0					
ANR	5072422	Callee	amazon_gahp_grab_big_mutex		5070828	0					
ANR	5072423	Identifier	amazon_gahp_grab_big_mutex		5070828	0					
ANR	5072424	ArgumentList			5070828	1					
ANR	5072425	IfStatement	if ( rv != 0 )		5070828	69					
ANR	5072426	Condition	rv != 0	471:8:18543:18549	5070828	0	True				
ANR	5072427	EqualityExpression	rv != 0		5070828	0		!=			
ANR	5072428	Identifier	rv		5070828	0					
ANR	5072429	PrimaryExpression	0		5070828	1					
ANR	5072430	CompoundStatement		292:8:12501:12525	5070828	1					
ANR	5072431	ExpressionStatement	"this -> errorCode = ""E_CURL_IO"""	472:8:18563:18592	5070828	0	True				
ANR	5072432	AssignmentExpression	"this -> errorCode = ""E_CURL_IO"""		5070828	0		=			
ANR	5072433	PtrMemberAccess	this -> errorCode		5070828	0					
ANR	5072434	Identifier	this		5070828	0					
ANR	5072435	Identifier	errorCode		5070828	1					
ANR	5072436	PrimaryExpression	"""E_CURL_IO"""		5070828	1					
ANR	5072437	IdentifierDeclStatement	std :: ostringstream error ;	473:8:18602:18626	5070828	1	True				
ANR	5072438	IdentifierDecl	error		5070828	0					
ANR	5072439	IdentifierDeclType	std :: ostringstream		5070828	0					
ANR	5072440	Identifier	error		5070828	1					
ANR	5072441	ExpressionStatement	"error << ""curl_easy_perform() failed ("" << rv << ""): '"" << curl_easy_strerror ( rv ) << ""'."""	474:8:18636:18727	5070828	2	True				
ANR	5072442	ShiftExpression	"error << ""curl_easy_perform() failed ("" << rv << ""): '"" << curl_easy_strerror ( rv ) << ""'."""		5070828	0		<<			
ANR	5072443	Identifier	error		5070828	0					
ANR	5072444	ShiftExpression	"""curl_easy_perform() failed ("" << rv << ""): '"" << curl_easy_strerror ( rv ) << ""'."""		5070828	1		<<			
ANR	5072445	PrimaryExpression	"""curl_easy_perform() failed ("""		5070828	0					
ANR	5072446	ShiftExpression	"rv << ""): '"" << curl_easy_strerror ( rv ) << ""'."""		5070828	1		<<			
ANR	5072447	Identifier	rv		5070828	0					
ANR	5072448	ShiftExpression	"""): '"" << curl_easy_strerror ( rv ) << ""'."""		5070828	1		<<			
ANR	5072449	PrimaryExpression	"""): '"""		5070828	0					
ANR	5072450	ShiftExpression	"curl_easy_strerror ( rv ) << ""'."""		5070828	1		<<			
ANR	5072451	CallExpression	curl_easy_strerror ( rv )		5070828	0					
ANR	5072452	Callee	curl_easy_strerror		5070828	0					
ANR	5072453	Identifier	curl_easy_strerror		5070828	0					
ANR	5072454	ArgumentList	rv		5070828	1					
ANR	5072455	Argument	rv		5070828	0					
ANR	5072456	Identifier	rv		5070828	0					
ANR	5072457	PrimaryExpression	"""'."""		5070828	1					
ANR	5072458	ExpressionStatement	this -> errorMessage = error . str ( )	475:8:18737:18769	5070828	3	True				
ANR	5072459	AssignmentExpression	this -> errorMessage = error . str ( )		5070828	0		=			
ANR	5072460	PtrMemberAccess	this -> errorMessage		5070828	0					
ANR	5072461	Identifier	this		5070828	0					
ANR	5072462	Identifier	errorMessage		5070828	1					
ANR	5072463	CallExpression	error . str ( )		5070828	1					
ANR	5072464	Callee	error . str		5070828	0					
ANR	5072465	MemberAccess	error . str		5070828	0					
ANR	5072466	Identifier	error		5070828	0					
ANR	5072467	Identifier	str		5070828	1					
ANR	5072468	ArgumentList			5070828	1					
ANR	5072469	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s\\n"" , this -> errorMessage . c_str ( ) )"	476:8:18779:18834	5070828	4	True				
ANR	5072470	CallExpression	"dprintf ( D_ALWAYS , ""%s\\n"" , this -> errorMessage . c_str ( ) )"		5070828	0					
ANR	5072471	Callee	dprintf		5070828	0					
ANR	5072472	Identifier	dprintf		5070828	0					
ANR	5072473	ArgumentList	D_ALWAYS		5070828	1					
ANR	5072474	Argument	D_ALWAYS		5070828	0					
ANR	5072475	Identifier	D_ALWAYS		5070828	0					
ANR	5072476	Argument	"""%s\\n"""		5070828	1					
ANR	5072477	PrimaryExpression	"""%s\\n"""		5070828	0					
ANR	5072478	Argument	this -> errorMessage . c_str ( )		5070828	2					
ANR	5072479	CallExpression	this -> errorMessage . c_str ( )		5070828	0					
ANR	5072480	Callee	this -> errorMessage . c_str		5070828	0					
ANR	5072481	MemberAccess	this -> errorMessage . c_str		5070828	0					
ANR	5072482	PtrMemberAccess	this -> errorMessage		5070828	0					
ANR	5072483	Identifier	this		5070828	0					
ANR	5072484	Identifier	errorMessage		5070828	1					
ANR	5072485	Identifier	c_str		5070828	1					
ANR	5072486	ArgumentList			5070828	1					
ANR	5072487	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s\\n"" , errorBuffer )"	477:8:18844:18887	5070828	5	True				
ANR	5072488	CallExpression	"dprintf ( D_FULLDEBUG , ""%s\\n"" , errorBuffer )"		5070828	0					
ANR	5072489	Callee	dprintf		5070828	0					
ANR	5072490	Identifier	dprintf		5070828	0					
ANR	5072491	ArgumentList	D_FULLDEBUG		5070828	1					
ANR	5072492	Argument	D_FULLDEBUG		5070828	0					
ANR	5072493	Identifier	D_FULLDEBUG		5070828	0					
ANR	5072494	Argument	"""%s\\n"""		5070828	1					
ANR	5072495	PrimaryExpression	"""%s\\n"""		5070828	0					
ANR	5072496	Argument	errorBuffer		5070828	2					
ANR	5072497	Identifier	errorBuffer		5070828	0					
ANR	5072498	ReturnStatement	return false ;	478:8:18897:18909	5070828	6	True				
ANR	5072499	Identifier	false		5070828	0					
ANR	5072500	IdentifierDeclStatement	unsigned long responseCode = 0 ;	481:4:18922:18952	5070828	70	True				
ANR	5072501	IdentifierDecl	responseCode = 0		5070828	0					
ANR	5072502	IdentifierDeclType	unsigned long		5070828	0					
ANR	5072503	Identifier	responseCode		5070828	1					
ANR	5072504	AssignmentExpression	responseCode = 0		5070828	2		=			
ANR	5072505	Identifier	responseCode		5070828	0					
ANR	5072506	PrimaryExpression	0		5070828	1					
ANR	5072507	ExpressionStatement	"rv = curl_easy_getinfo ( curl , CURLINFO_RESPONSE_CODE , & responseCode )"	482:4:18958:19028	5070828	71	True				
ANR	5072508	AssignmentExpression	"rv = curl_easy_getinfo ( curl , CURLINFO_RESPONSE_CODE , & responseCode )"		5070828	0		=			
ANR	5072509	Identifier	rv		5070828	0					
ANR	5072510	CallExpression	"curl_easy_getinfo ( curl , CURLINFO_RESPONSE_CODE , & responseCode )"		5070828	1					
ANR	5072511	Callee	curl_easy_getinfo		5070828	0					
ANR	5072512	Identifier	curl_easy_getinfo		5070828	0					
ANR	5072513	ArgumentList	curl		5070828	1					
ANR	5072514	Argument	curl		5070828	0					
ANR	5072515	Identifier	curl		5070828	0					
ANR	5072516	Argument	CURLINFO_RESPONSE_CODE		5070828	1					
ANR	5072517	Identifier	CURLINFO_RESPONSE_CODE		5070828	0					
ANR	5072518	Argument	& responseCode		5070828	2					
ANR	5072519	UnaryOperationExpression	& responseCode		5070828	0					
ANR	5072520	UnaryOperator	&		5070828	0					
ANR	5072521	Identifier	responseCode		5070828	1					
ANR	5072522	IfStatement	if ( rv != CURLE_OK )		5070828	72					
ANR	5072523	Condition	rv != CURLE_OK	483:8:19038:19051	5070828	0	True				
ANR	5072524	EqualityExpression	rv != CURLE_OK		5070828	0		!=			
ANR	5072525	Identifier	rv		5070828	0					
ANR	5072526	Identifier	CURLE_OK		5070828	1					
ANR	5072527	CompoundStatement		302:25:12954:12954	5070828	1					
ANR	5072528	ExpressionStatement	"this -> errorCode = ""E_CURL_LIB"""	484:8:19065:19095	5070828	0	True				
ANR	5072529	AssignmentExpression	"this -> errorCode = ""E_CURL_LIB"""		5070828	0		=			
ANR	5072530	PtrMemberAccess	this -> errorCode		5070828	0					
ANR	5072531	Identifier	this		5070828	0					
ANR	5072532	Identifier	errorCode		5070828	1					
ANR	5072533	PrimaryExpression	"""E_CURL_LIB"""		5070828	1					
ANR	5072534	ExpressionStatement	"this -> errorMessage = ""curl_easy_getinfo() failed."""	485:8:19105:19155	5070828	1	True				
ANR	5072535	AssignmentExpression	"this -> errorMessage = ""curl_easy_getinfo() failed."""		5070828	0		=			
ANR	5072536	PtrMemberAccess	this -> errorMessage		5070828	0					
ANR	5072537	Identifier	this		5070828	0					
ANR	5072538	Identifier	errorMessage		5070828	1					
ANR	5072539	PrimaryExpression	"""curl_easy_getinfo() failed."""		5070828	1					
ANR	5072540	ExpressionStatement	"dprintf ( D_ALWAYS , ""curl_easy_getinfo( CURLINFO_RESPONSE_CODE ) failed (%d): '%s', failing.\\n"" , rv , curl_easy_strerror ( rv ) )"	486:8:19165:19303	5070828	2	True				
ANR	5072541	CallExpression	"dprintf ( D_ALWAYS , ""curl_easy_getinfo( CURLINFO_RESPONSE_CODE ) failed (%d): '%s', failing.\\n"" , rv , curl_easy_strerror ( rv ) )"		5070828	0					
ANR	5072542	Callee	dprintf		5070828	0					
ANR	5072543	Identifier	dprintf		5070828	0					
ANR	5072544	ArgumentList	D_ALWAYS		5070828	1					
ANR	5072545	Argument	D_ALWAYS		5070828	0					
ANR	5072546	Identifier	D_ALWAYS		5070828	0					
ANR	5072547	Argument	"""curl_easy_getinfo( CURLINFO_RESPONSE_CODE ) failed (%d): '%s', failing.\\n"""		5070828	1					
ANR	5072548	PrimaryExpression	"""curl_easy_getinfo( CURLINFO_RESPONSE_CODE ) failed (%d): '%s', failing.\\n"""		5070828	0					
ANR	5072549	Argument	rv		5070828	2					
ANR	5072550	Identifier	rv		5070828	0					
ANR	5072551	Argument	curl_easy_strerror ( rv )		5070828	3					
ANR	5072552	CallExpression	curl_easy_strerror ( rv )		5070828	0					
ANR	5072553	Callee	curl_easy_strerror		5070828	0					
ANR	5072554	Identifier	curl_easy_strerror		5070828	0					
ANR	5072555	ArgumentList	rv		5070828	1					
ANR	5072556	Argument	rv		5070828	0					
ANR	5072557	Identifier	rv		5070828	0					
ANR	5072558	ReturnStatement	return false ;	488:8:19313:19325	5070828	3	True				
ANR	5072559	Identifier	false		5070828	0					
ANR	5072560	ExpressionStatement	curl_easy_cleanup ( curl )	491:4:19350:19375	5070828	73	True				
ANR	5072561	CallExpression	curl_easy_cleanup ( curl )		5070828	0					
ANR	5072562	Callee	curl_easy_cleanup		5070828	0					
ANR	5072563	Identifier	curl_easy_cleanup		5070828	0					
ANR	5072564	ArgumentList	curl		5070828	1					
ANR	5072565	Argument	curl		5070828	0					
ANR	5072566	Identifier	curl		5070828	0					
ANR	5072567	IfStatement	if ( responseCode != 200 )		5070828	74					
ANR	5072568	Condition	responseCode != 200	493:8:19390:19408	5070828	0	True				
ANR	5072569	EqualityExpression	responseCode != 200		5070828	0		!=			
ANR	5072570	Identifier	responseCode		5070828	0					
ANR	5072571	PrimaryExpression	200		5070828	1					
ANR	5072572	CompoundStatement		312:30:13311:13311	5070828	1					
ANR	5072573	ExpressionStatement	"this -> errorCode = ""E_HTTP_RESPONSE_NOT_200"""	494:8:19422:19465	5070828	0	True				
ANR	5072574	AssignmentExpression	"this -> errorCode = ""E_HTTP_RESPONSE_NOT_200"""		5070828	0		=			
ANR	5072575	PtrMemberAccess	this -> errorCode		5070828	0					
ANR	5072576	Identifier	this		5070828	0					
ANR	5072577	Identifier	errorCode		5070828	1					
ANR	5072578	PrimaryExpression	"""E_HTTP_RESPONSE_NOT_200"""		5070828	1					
ANR	5072579	ExpressionStatement	this -> errorMessage = resultString	495:8:19475:19508	5070828	1	True				
ANR	5072580	AssignmentExpression	this -> errorMessage = resultString		5070828	0		=			
ANR	5072581	PtrMemberAccess	this -> errorMessage		5070828	0					
ANR	5072582	Identifier	this		5070828	0					
ANR	5072583	Identifier	errorMessage		5070828	1					
ANR	5072584	Identifier	resultString		5070828	1					
ANR	5072585	ExpressionStatement	"dprintf ( D_ALWAYS , ""Query did not return 200 (%lu), failing.\\n"" , responseCode )"	496:8:19518:19609	5070828	2	True				
ANR	5072586	CallExpression	"dprintf ( D_ALWAYS , ""Query did not return 200 (%lu), failing.\\n"" , responseCode )"		5070828	0					
ANR	5072587	Callee	dprintf		5070828	0					
ANR	5072588	Identifier	dprintf		5070828	0					
ANR	5072589	ArgumentList	D_ALWAYS		5070828	1					
ANR	5072590	Argument	D_ALWAYS		5070828	0					
ANR	5072591	Identifier	D_ALWAYS		5070828	0					
ANR	5072592	Argument	"""Query did not return 200 (%lu), failing.\\n"""		5070828	1					
ANR	5072593	PrimaryExpression	"""Query did not return 200 (%lu), failing.\\n"""		5070828	0					
ANR	5072594	Argument	responseCode		5070828	2					
ANR	5072595	Identifier	responseCode		5070828	0					
ANR	5072596	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failure response text was '%s'.\\n"" , resultString . c_str ( ) )"	498:8:19619:19697	5070828	3	True				
ANR	5072597	CallExpression	"dprintf ( D_ALWAYS , ""Failure response text was '%s'.\\n"" , resultString . c_str ( ) )"		5070828	0					
ANR	5072598	Callee	dprintf		5070828	0					
ANR	5072599	Identifier	dprintf		5070828	0					
ANR	5072600	ArgumentList	D_ALWAYS		5070828	1					
ANR	5072601	Argument	D_ALWAYS		5070828	0					
ANR	5072602	Identifier	D_ALWAYS		5070828	0					
ANR	5072603	Argument	"""Failure response text was '%s'.\\n"""		5070828	1					
ANR	5072604	PrimaryExpression	"""Failure response text was '%s'.\\n"""		5070828	0					
ANR	5072605	Argument	resultString . c_str ( )		5070828	2					
ANR	5072606	CallExpression	resultString . c_str ( )		5070828	0					
ANR	5072607	Callee	resultString . c_str		5070828	0					
ANR	5072608	MemberAccess	resultString . c_str		5070828	0					
ANR	5072609	Identifier	resultString		5070828	0					
ANR	5072610	Identifier	c_str		5070828	1					
ANR	5072611	ArgumentList			5070828	1					
ANR	5072612	ReturnStatement	return false ;	499:8:19707:19719	5070828	4	True				
ANR	5072613	Identifier	false		5070828	0					
ANR	5072614	ReturnStatement	return true ;	502:4:19736:19747	5070828	75	True				
ANR	5072615	Identifier	true		5070828	0					
ANR	5072616	ReturnType	bool		5070828	1					
ANR	5072617	Identifier	AmazonRequest :: SendRequest		5070828	2					
ANR	5072618	ParameterList			5070828	3					
ANR	5072619	CFGEntryNode	ENTRY		5070828		True				
ANR	5072620	CFGExitNode	EXIT		5070828		True				
ANR	5072621	Symbol	curl		5070828						
ANR	5072622	Symbol	amazonURLEncode		5070828						
ANR	5072623	Symbol	httpRequestURI		5070828						
ANR	5072624	Symbol	this -> errorCode		5070828						
ANR	5072625	Symbol	this -> serviceURL . c_str		5070828						
ANR	5072626	Symbol	r . compile		5070828						
ANR	5072627	Symbol	curl_easy_setopt		5070828						
ANR	5072628	Symbol	responseCode		5070828						
ANR	5072629	Symbol	EVP_sha256		5070828						
ANR	5072630	Symbol	CURLOPT_SSL_VERIFYPEER		5070828						
ANR	5072631	Symbol	CURLOPT_CAPATH		5070828						
ANR	5072632	Symbol	mdLength		5070828						
ANR	5072633	Symbol	CURLOPT_WRITEDATA		5070828						
ANR	5072634	Symbol	patternOK		5070828						
ANR	5072635	Symbol	resultString . c_str		5070828						
ANR	5072636	Symbol	this -> errorMessage		5070828						
ANR	5072637	Symbol	stringToSign . c_str		5070828						
ANR	5072638	Symbol	canonicalizedQueryString		5070828						
ANR	5072639	Symbol	CURLOPT_SSLKEY		5070828						
ANR	5072640	Symbol	std :: make_pair		5070828						
ANR	5072641	Symbol	CURLOPT_WRITEFUNCTION		5070828						
ANR	5072642	Symbol	CAPath . c_str		5070828						
ANR	5072643	Symbol	CAPath . empty		5070828						
ANR	5072644	Symbol	x509_ca_file		5070828						
ANR	5072645	Symbol	valueOfHostHeaderInLowercase . begin		5070828						
ANR	5072646	Symbol	* keyID		5070828						
ANR	5072647	Symbol	CURLOPT_NOPROGRESS		5070828						
ANR	5072648	Symbol	std :: string		5070828						
ANR	5072649	Symbol	errCode		5070828						
ANR	5072650	Symbol	i -> first		5070828						
ANR	5072651	Symbol	curl_easy_perform		5070828						
ANR	5072652	Symbol	saKey . length		5070828						
ANR	5072653	Symbol	CAFile . empty		5070828						
ANR	5072654	Symbol	* keyID . length		5070828						
ANR	5072655	Symbol	rv		5070828						
ANR	5072656	Symbol	x509_ca_dir		5070828						
ANR	5072657	Symbol	serviceURL		5070828						
ANR	5072658	Symbol	setenv		5070828						
ANR	5072659	Symbol	keyID . length		5070828						
ANR	5072660	Symbol	this -> secretKeyFile		5070828						
ANR	5072661	Symbol	messageDigest		5070828						
ANR	5072662	Symbol	stringToSign . length		5070828						
ANR	5072663	Symbol	this -> serviceURL		5070828						
ANR	5072664	Symbol	CURLOPT_SSLCERTTYPE		5070828						
ANR	5072665	Symbol	* saKey		5070828						
ANR	5072666	Symbol	& tolower		5070828						
ANR	5072667	Symbol	CURLOPT_SSLCERT		5070828						
ANR	5072668	Symbol	getenv		5070828						
ANR	5072669	Symbol	valueOfHostHeaderInLowercase		5070828						
ANR	5072670	Symbol	finalURI . c_str		5070828						
ANR	5072671	Symbol	& this -> resultString		5070828						
ANR	5072672	Symbol	this -> errorMessage . c_str		5070828						
ANR	5072673	Symbol	httpRequestURI . empty		5070828						
ANR	5072674	Symbol	r . match		5070828						
ANR	5072675	Symbol	iso8601		5070828						
ANR	5072676	Symbol	soap_ssl_ca_dir		5070828						
ANR	5072677	Symbol	CURLINFO_RESPONSE_CODE		5070828						
ANR	5072678	Symbol	i		5070828						
ANR	5072679	Symbol	query_parameters . find		5070828						
ANR	5072680	Symbol	query_parameters		5070828						
ANR	5072681	Symbol	* this		5070828						
ANR	5072682	Symbol	r		5070828						
ANR	5072683	Symbol	finalURI		5070828						
ANR	5072684	Symbol	readShortFile		5070828						
ANR	5072685	Symbol	matchFound		5070828						
ANR	5072686	Symbol	stringToSign		5070828						
ANR	5072687	Symbol	& errString		5070828						
ANR	5072688	Symbol	base64Encoded		5070828						
ANR	5072689	Symbol	* groups		5070828						
ANR	5072690	Symbol	& appendToString		5070828						
ANR	5072691	Symbol	& groups		5070828						
ANR	5072692	Symbol	i -> second		5070828						
ANR	5072693	Symbol	& brokenDownTime		5070828						
ANR	5072694	Symbol	& responseCode		5070828						
ANR	5072695	Symbol	canonicalizedQueryString . end		5070828						
ANR	5072696	Symbol	hostAndPath		5070828						
ANR	5072697	Symbol	curl_easy_getinfo		5070828						
ANR	5072698	Symbol	protocol		5070828						
ANR	5072699	Symbol	& mdLength		5070828						
ANR	5072700	Symbol	NULL		5070828						
ANR	5072701	Symbol	* saKey . length		5070828						
ANR	5072702	Symbol	CURLOPT_CAINFO		5070828						
ANR	5072703	Symbol	this		5070828						
ANR	5072704	Symbol	resultString		5070828						
ANR	5072705	Symbol	keyID		5070828						
ANR	5072706	Symbol	CURL_GLOBAL_ALL		5070828						
ANR	5072707	Symbol	CURLOPT_URL		5070828						
ANR	5072708	Symbol	D_FULLDEBUG		5070828						
ANR	5072709	Symbol	keyID . c_str		5070828						
ANR	5072710	Symbol	brokenDownTime		5070828						
ANR	5072711	Symbol	CAPath		5070828						
ANR	5072712	Symbol	saKey		5070828						
ANR	5072713	Symbol	name		5070828						
ANR	5072714	Symbol	true		5070828						
ANR	5072715	Symbol	errorBuffer		5070828						
ANR	5072716	Symbol	CURLOPT_ERRORBUFFER		5070828						
ANR	5072717	Symbol	valueOfHostHeaderInLowercase . end		5070828						
ANR	5072718	Symbol	curl_easy_strerror		5070828						
ANR	5072719	Symbol	soap_ssl_ca_file		5070828						
ANR	5072720	Symbol	query_parameters . end		5070828						
ANR	5072721	Symbol	HMAC		5070828						
ANR	5072722	Symbol	saKey . c_str		5070828						
ANR	5072723	Symbol	signatureInBase64		5070828						
ANR	5072724	Symbol	error		5070828						
ANR	5072725	Symbol	errString		5070828						
ANR	5072726	Symbol	CAFile . c_str		5070828						
ANR	5072727	Symbol	now		5070828						
ANR	5072728	Symbol	hmac		5070828						
ANR	5072729	Symbol	serviceURL . c_str		5070828						
ANR	5072730	Symbol	CURLOPT_SSL_VERIFYHOST		5070828						
ANR	5072731	Symbol	value		5070828						
ANR	5072732	Symbol	CURLE_OK		5070828						
ANR	5072733	Symbol	this -> accessKeyFile . c_str		5070828						
ANR	5072734	Symbol	encodedParameters		5070828						
ANR	5072735	Symbol	query_parameters . begin		5070828						
ANR	5072736	Symbol	this -> secretKeyFile . c_str		5070828						
ANR	5072737	Symbol	curl_global_init		5070828						
ANR	5072738	Symbol	error . str		5070828						
ANR	5072739	Symbol	D_ALWAYS		5070828						
ANR	5072740	Symbol	false		5070828						
ANR	5072741	Symbol	groups		5070828						
ANR	5072742	Symbol	& errCode		5070828						
ANR	5072743	Symbol	condor_base64_encode		5070828						
ANR	5072744	Symbol	CAFile		5070828						
ANR	5072745	Symbol	CURLOPT_SSLKEYTYPE		5070828						
ANR	5072746	Symbol	* i		5070828						
ANR	5072747	Symbol	curl_easy_init		5070828						
ANR	5072748	Symbol	& now		5070828						
ANR	5072749	Symbol	this -> accessKeyFile		5070828						
ANR	5072750	Function	AmazonVMStart :: AmazonVMStart	538:0:21313:21346							
ANR	5072751	FunctionDef	AmazonVMStart :: AmazonVMStart ()		5072750	0					
ANR	5072752	CompoundStatement		538:31:21344:21346	5072750	0					
ANR	5072753	Identifier	AmazonVMStart :: AmazonVMStart		5072750	1					
ANR	5072754	ParameterList			5072750	2					
ANR	5072755	CFGEntryNode	ENTRY		5072750		True				
ANR	5072756	CFGExitNode	EXIT		5072750		True				
ANR	5072757	Function	AmazonVMStart :: ~AmazonVMStart	540:0:21349:21383							
ANR	5072758	FunctionDef	AmazonVMStart :: ~AmazonVMStart ()		5072757	0					
ANR	5072759	CompoundStatement		540:32:21381:21383	5072757	0					
ANR	5072760	Identifier	AmazonVMStart :: ~AmazonVMStart		5072757	1					
ANR	5072761	ParameterList			5072757	2					
ANR	5072762	CFGEntryNode	ENTRY		5072757		True				
ANR	5072763	CFGExitNode	EXIT		5072757		True				
ANR	5072764	ClassDef	vmStartUD_t	542:0:21386:21545							
ANR	5072765	DeclStmt									
ANR	5072766	Decl							bool	bool	inInstanceId
ANR	5072767	DeclStmt									
ANR	5072768	Decl							std :: string	std :: string &	instanceID
ANR	5072769	Function	vmStartUD_t	546:4:21465:21543							
ANR	5072770	FunctionDef	vmStartUD_t (std :: string & iid)		5072769	2					
ANR	5072771	CompoundStatement		546:80:21541:21543	5072769	0					
ANR	5072772	Identifier	vmStartUD_t		5072769	1					
ANR	5072773	ParameterList	std :: string & iid		5072769	2					
ANR	5072774	Parameter	std :: string & iid	546:17:21478:21494	5072769	0	True				
ANR	5072775	ParameterType	std :: string &		5072769	0					
ANR	5072776	Identifier	iid		5072769	1					
ANR	5072777	CFGEntryNode	ENTRY		5072769		True				
ANR	5072778	CFGExitNode	EXIT		5072769		True				
ANR	5072779	Symbol	iid		5072769						
ANR	5072780	DeclStmt									
ANR	5072781	Decl							struct vmStartUD_t	struct vmStartUD_t	vmStartUD
ANR	5072782	DeclStmt									
ANR	5072783	Decl							vmStartUD	vmStartUD *	vsud
ANR	5072784	Function	vmStartCDH	557:0:21822:22055							
ANR	5072785	FunctionDef	"vmStartCDH (void * vUserData , const XML_Char * cdata , int len)"		5072784	0					
ANR	5072786	CompoundStatement		557:69:21891:22055	5072784	0					
ANR	5072787	IdentifierDeclStatement	vmStartUD * vsud = ( vmStartUD * ) vUserData ;	558:4:21897:21938	5072784	0	True				
ANR	5072788	IdentifierDecl	* vsud = ( vmStartUD * ) vUserData		5072784	0					
ANR	5072789	IdentifierDeclType	vmStartUD *		5072784	0					
ANR	5072790	Identifier	vsud		5072784	1					
ANR	5072791	AssignmentExpression	* vsud = ( vmStartUD * ) vUserData		5072784	2		=			
ANR	5072792	Identifier	vsud		5072784	0					
ANR	5072793	CastExpression	( vmStartUD * ) vUserData		5072784	1					
ANR	5072794	CastTarget	vmStartUD *		5072784	0					
ANR	5072795	Identifier	vUserData		5072784	1					
ANR	5072796	IfStatement	if ( vsud -> inInstanceId )		5072784	1					
ANR	5072797	Condition	vsud -> inInstanceId	559:8:21948:21965	5072784	0	True				
ANR	5072798	PtrMemberAccess	vsud -> inInstanceId		5072784	0					
ANR	5072799	Identifier	vsud		5072784	0					
ANR	5072800	Identifier	inInstanceId		5072784	1					
ANR	5072801	CompoundStatement		3:29:77:77	5072784	1					
ANR	5072802	ExpressionStatement	"appendToString ( ( void * ) cdata , len , 1 , ( void * ) & vsud -> instanceID )"	560:8:21979:22047	5072784	0	True				
ANR	5072803	CallExpression	"appendToString ( ( void * ) cdata , len , 1 , ( void * ) & vsud -> instanceID )"		5072784	0					
ANR	5072804	Callee	appendToString		5072784	0					
ANR	5072805	Identifier	appendToString		5072784	0					
ANR	5072806	ArgumentList	( void * ) cdata		5072784	1					
ANR	5072807	Argument	( void * ) cdata		5072784	0					
ANR	5072808	CastExpression	( void * ) cdata		5072784	0					
ANR	5072809	CastTarget	void *		5072784	0					
ANR	5072810	Identifier	cdata		5072784	1					
ANR	5072811	Argument	len		5072784	1					
ANR	5072812	Identifier	len		5072784	0					
ANR	5072813	Argument	1		5072784	2					
ANR	5072814	PrimaryExpression	1		5072784	0					
ANR	5072815	Argument	( void * ) & vsud -> instanceID		5072784	3					
ANR	5072816	CastExpression	( void * ) & vsud -> instanceID		5072784	0					
ANR	5072817	CastTarget	void *		5072784	0					
ANR	5072818	UnaryOperationExpression	& vsud -> instanceID		5072784	1					
ANR	5072819	UnaryOperator	&		5072784	0					
ANR	5072820	PtrMemberAccess	vsud -> instanceID		5072784	1					
ANR	5072821	Identifier	vsud		5072784	0					
ANR	5072822	Identifier	instanceID		5072784	1					
ANR	5072823	ReturnType	void		5072784	1					
ANR	5072824	Identifier	vmStartCDH		5072784	2					
ANR	5072825	ParameterList	"void * vUserData , const XML_Char * cdata , int len"		5072784	3					
ANR	5072826	Parameter	void * vUserData	557:17:21839:21854	5072784	0	True				
ANR	5072827	ParameterType	void *		5072784	0					
ANR	5072828	Identifier	vUserData		5072784	1					
ANR	5072829	Parameter	const XML_Char * cdata	557:35:21857:21878	5072784	1	True				
ANR	5072830	ParameterType	const XML_Char *		5072784	0					
ANR	5072831	Identifier	cdata		5072784	1					
ANR	5072832	Parameter	int len	557:59:21881:21887	5072784	2	True				
ANR	5072833	ParameterType	int		5072784	0					
ANR	5072834	Identifier	len		5072784	1					
ANR	5072835	CFGEntryNode	ENTRY		5072784		True				
ANR	5072836	CFGExitNode	EXIT		5072784		True				
ANR	5072837	Symbol	len		5072784						
ANR	5072838	Symbol	& vsud -> instanceID		5072784						
ANR	5072839	Symbol	vsud -> inInstanceId		5072784						
ANR	5072840	Symbol	vUserData		5072784						
ANR	5072841	Symbol	* vsud		5072784						
ANR	5072842	Symbol	vsud		5072784						
ANR	5072843	Symbol	cdata		5072784						
ANR	5072844	Function	vmStartEEH	564:0:22058:22272							
ANR	5072845	FunctionDef	"vmStartEEH (void * vUserData , const XML_Char * name)"		5072844	0					
ANR	5072846	CompoundStatement		564:59:22117:22272	5072844	0					
ANR	5072847	IdentifierDeclStatement	vmStartUD * vsud = ( vmStartUD * ) vUserData ;	565:4:22123:22164	5072844	0	True				
ANR	5072848	IdentifierDecl	* vsud = ( vmStartUD * ) vUserData		5072844	0					
ANR	5072849	IdentifierDeclType	vmStartUD *		5072844	0					
ANR	5072850	Identifier	vsud		5072844	1					
ANR	5072851	AssignmentExpression	* vsud = ( vmStartUD * ) vUserData		5072844	2		=			
ANR	5072852	Identifier	vsud		5072844	0					
ANR	5072853	CastExpression	( vmStartUD * ) vUserData		5072844	1					
ANR	5072854	CastTarget	vmStartUD *		5072844	0					
ANR	5072855	Identifier	vUserData		5072844	1					
ANR	5072856	IfStatement	"if ( strcasecmp ( ( const char * ) name , ""instanceId"" ) == 0 )"		5072844	1					
ANR	5072857	Condition	"strcasecmp ( ( const char * ) name , ""instanceId"" ) == 0"	566:8:22174:22224	5072844	0	True				
ANR	5072858	EqualityExpression	"strcasecmp ( ( const char * ) name , ""instanceId"" ) == 0"		5072844	0		==			
ANR	5072859	CallExpression	"strcasecmp ( ( const char * ) name , ""instanceId"" )"		5072844	0					
ANR	5072860	Callee	strcasecmp		5072844	0					
ANR	5072861	Identifier	strcasecmp		5072844	0					
ANR	5072862	ArgumentList	( const char * ) name		5072844	1					
ANR	5072863	Argument	( const char * ) name		5072844	0					
ANR	5072864	CastExpression	( const char * ) name		5072844	0					
ANR	5072865	CastTarget	const char *		5072844	0					
ANR	5072866	Identifier	name		5072844	1					
ANR	5072867	Argument	"""instanceId"""		5072844	1					
ANR	5072868	PrimaryExpression	"""instanceId"""		5072844	0					
ANR	5072869	PrimaryExpression	0		5072844	1					
ANR	5072870	CompoundStatement		3:62:110:110	5072844	1					
ANR	5072871	ExpressionStatement	vsud -> inInstanceId = false	567:8:22238:22264	5072844	0	True				
ANR	5072872	AssignmentExpression	vsud -> inInstanceId = false		5072844	0		=			
ANR	5072873	PtrMemberAccess	vsud -> inInstanceId		5072844	0					
ANR	5072874	Identifier	vsud		5072844	0					
ANR	5072875	Identifier	inInstanceId		5072844	1					
ANR	5072876	Identifier	false		5072844	1					
ANR	5072877	ReturnType	void		5072844	1					
ANR	5072878	Identifier	vmStartEEH		5072844	2					
ANR	5072879	ParameterList	"void * vUserData , const XML_Char * name"		5072844	3					
ANR	5072880	Parameter	void * vUserData	564:17:22075:22090	5072844	0	True				
ANR	5072881	ParameterType	void *		5072844	0					
ANR	5072882	Identifier	vUserData		5072844	1					
ANR	5072883	Parameter	const XML_Char * name	564:35:22093:22113	5072844	1	True				
ANR	5072884	ParameterType	const XML_Char *		5072844	0					
ANR	5072885	Identifier	name		5072844	1					
ANR	5072886	CFGEntryNode	ENTRY		5072844		True				
ANR	5072887	CFGExitNode	EXIT		5072844		True				
ANR	5072888	Symbol	vsud -> inInstanceId		5072844						
ANR	5072889	Symbol	vUserData		5072844						
ANR	5072890	Symbol	* vsud		5072844						
ANR	5072891	Symbol	name		5072844						
ANR	5072892	Symbol	false		5072844						
ANR	5072893	Symbol	vsud		5072844						
ANR	5072894	Symbol	strcasecmp		5072844						
ANR	5072895	Function	AmazonVMStart :: SendRequest	571:0:22275:23058							
ANR	5072896	FunctionDef	AmazonVMStart :: SendRequest ()		5072895	0					
ANR	5072897	CompoundStatement		571:34:22309:23058	5072895	0					
ANR	5072898	IdentifierDeclStatement	bool result = AmazonRequest :: SendRequest ( ) ;	572:4:22315:22357	5072895	0	True				
ANR	5072899	IdentifierDecl	result = AmazonRequest :: SendRequest ( )		5072895	0					
ANR	5072900	IdentifierDeclType	bool		5072895	0					
ANR	5072901	Identifier	result		5072895	1					
ANR	5072902	AssignmentExpression	result = AmazonRequest :: SendRequest ( )		5072895	2		=			
ANR	5072903	Identifier	result		5072895	0					
ANR	5072904	CallExpression	AmazonRequest :: SendRequest ( )		5072895	1					
ANR	5072905	Callee	AmazonRequest :: SendRequest		5072895	0					
ANR	5072906	Identifier	AmazonRequest :: SendRequest		5072895	0					
ANR	5072907	ArgumentList			5072895	1					
ANR	5072908	IfStatement	if ( result )		5072895	1					
ANR	5072909	Condition	result	573:9:22368:22373	5072895	0	True				
ANR	5072910	Identifier	result		5072895	0					
ANR	5072911	CompoundStatement		5:8:121:161	5072895	1					
ANR	5072912	IdentifierDeclStatement	vmStartUD vsud ( this -> instanceID ) ;	574:8:22387:22421	5072895	0	True				
ANR	5072913	IdentifierDecl	vsud ( this -> instanceID )		5072895	0					
ANR	5072914	IdentifierDeclType	vmStartUD		5072895	0					
ANR	5072915	Identifier	vsud		5072895	1					
ANR	5072916	PtrMemberAccess	this -> instanceID		5072895	2					
ANR	5072917	Identifier	this		5072895	0					
ANR	5072918	Identifier	instanceID		5072895	1					
ANR	5072919	IdentifierDeclStatement	XML_Parser xp = XML_ParserCreate ( NULL ) ;	575:8:22431:22471	5072895	1	True				
ANR	5072920	IdentifierDecl	xp = XML_ParserCreate ( NULL )		5072895	0					
ANR	5072921	IdentifierDeclType	XML_Parser		5072895	0					
ANR	5072922	Identifier	xp		5072895	1					
ANR	5072923	AssignmentExpression	xp = XML_ParserCreate ( NULL )		5072895	2		=			
ANR	5072924	Identifier	xp		5072895	0					
ANR	5072925	CallExpression	XML_ParserCreate ( NULL )		5072895	1					
ANR	5072926	Callee	XML_ParserCreate		5072895	0					
ANR	5072927	Identifier	XML_ParserCreate		5072895	0					
ANR	5072928	ArgumentList	NULL		5072895	1					
ANR	5072929	Argument	NULL		5072895	0					
ANR	5072930	Identifier	NULL		5072895	0					
ANR	5072931	ExpressionStatement	"XML_SetElementHandler ( xp , & vmStartESH , & vmStartEEH )"	576:8:22481:22536	5072895	2	True				
ANR	5072932	CallExpression	"XML_SetElementHandler ( xp , & vmStartESH , & vmStartEEH )"		5072895	0					
ANR	5072933	Callee	XML_SetElementHandler		5072895	0					
ANR	5072934	Identifier	XML_SetElementHandler		5072895	0					
ANR	5072935	ArgumentList	xp		5072895	1					
ANR	5072936	Argument	xp		5072895	0					
ANR	5072937	Identifier	xp		5072895	0					
ANR	5072938	Argument	& vmStartESH		5072895	1					
ANR	5072939	UnaryOperationExpression	& vmStartESH		5072895	0					
ANR	5072940	UnaryOperator	&		5072895	0					
ANR	5072941	Identifier	vmStartESH		5072895	1					
ANR	5072942	Argument	& vmStartEEH		5072895	2					
ANR	5072943	UnaryOperationExpression	& vmStartEEH		5072895	0					
ANR	5072944	UnaryOperator	&		5072895	0					
ANR	5072945	Identifier	vmStartEEH		5072895	1					
ANR	5072946	ExpressionStatement	"XML_SetCharacterDataHandler ( xp , & vmStartCDH )"	577:8:22546:22593	5072895	3	True				
ANR	5072947	CallExpression	"XML_SetCharacterDataHandler ( xp , & vmStartCDH )"		5072895	0					
ANR	5072948	Callee	XML_SetCharacterDataHandler		5072895	0					
ANR	5072949	Identifier	XML_SetCharacterDataHandler		5072895	0					
ANR	5072950	ArgumentList	xp		5072895	1					
ANR	5072951	Argument	xp		5072895	0					
ANR	5072952	Identifier	xp		5072895	0					
ANR	5072953	Argument	& vmStartCDH		5072895	1					
ANR	5072954	UnaryOperationExpression	& vmStartCDH		5072895	0					
ANR	5072955	UnaryOperator	&		5072895	0					
ANR	5072956	Identifier	vmStartCDH		5072895	1					
ANR	5072957	ExpressionStatement	"XML_SetUserData ( xp , & vsud )"	578:8:22603:22632	5072895	4	True				
ANR	5072958	CallExpression	"XML_SetUserData ( xp , & vsud )"		5072895	0					
ANR	5072959	Callee	XML_SetUserData		5072895	0					
ANR	5072960	Identifier	XML_SetUserData		5072895	0					
ANR	5072961	ArgumentList	xp		5072895	1					
ANR	5072962	Argument	xp		5072895	0					
ANR	5072963	Identifier	xp		5072895	0					
ANR	5072964	Argument	& vsud		5072895	1					
ANR	5072965	UnaryOperationExpression	& vsud		5072895	0					
ANR	5072966	UnaryOperator	&		5072895	0					
ANR	5072967	Identifier	vsud		5072895	1					
ANR	5072968	ExpressionStatement	"XML_Parse ( xp , this -> resultString . c_str ( ) , this -> resultString . length ( ) , 1 )"	579:8:22642:22717	5072895	5	True				
ANR	5072969	CallExpression	"XML_Parse ( xp , this -> resultString . c_str ( ) , this -> resultString . length ( ) , 1 )"		5072895	0					
ANR	5072970	Callee	XML_Parse		5072895	0					
ANR	5072971	Identifier	XML_Parse		5072895	0					
ANR	5072972	ArgumentList	xp		5072895	1					
ANR	5072973	Argument	xp		5072895	0					
ANR	5072974	Identifier	xp		5072895	0					
ANR	5072975	Argument	this -> resultString . c_str ( )		5072895	1					
ANR	5072976	CallExpression	this -> resultString . c_str ( )		5072895	0					
ANR	5072977	Callee	this -> resultString . c_str		5072895	0					
ANR	5072978	MemberAccess	this -> resultString . c_str		5072895	0					
ANR	5072979	PtrMemberAccess	this -> resultString		5072895	0					
ANR	5072980	Identifier	this		5072895	0					
ANR	5072981	Identifier	resultString		5072895	1					
ANR	5072982	Identifier	c_str		5072895	1					
ANR	5072983	ArgumentList			5072895	1					
ANR	5072984	Argument	this -> resultString . length ( )		5072895	2					
ANR	5072985	CallExpression	this -> resultString . length ( )		5072895	0					
ANR	5072986	Callee	this -> resultString . length		5072895	0					
ANR	5072987	MemberAccess	this -> resultString . length		5072895	0					
ANR	5072988	PtrMemberAccess	this -> resultString		5072895	0					
ANR	5072989	Identifier	this		5072895	0					
ANR	5072990	Identifier	resultString		5072895	1					
ANR	5072991	Identifier	length		5072895	1					
ANR	5072992	ArgumentList			5072895	1					
ANR	5072993	Argument	1		5072895	3					
ANR	5072994	PrimaryExpression	1		5072895	0					
ANR	5072995	ExpressionStatement	XML_ParserFree ( xp )	580:8:22727:22747	5072895	6	True				
ANR	5072996	CallExpression	XML_ParserFree ( xp )		5072895	0					
ANR	5072997	Callee	XML_ParserFree		5072895	0					
ANR	5072998	Identifier	XML_ParserFree		5072895	0					
ANR	5072999	ArgumentList	xp		5072895	1					
ANR	5073000	Argument	xp		5072895	0					
ANR	5073001	Identifier	xp		5072895	0					
ANR	5073002	ElseStatement	else		5072895	0					
ANR	5073003	CompoundStatement		11:11:450:450	5072895	0					
ANR	5073004	IfStatement	"if ( this -> errorCode == ""E_CURL_IO"" )"		5072895	0					
ANR	5073005	Condition	"this -> errorCode == ""E_CURL_IO"""	582:12:22774:22803	5072895	0	True				
ANR	5073006	EqualityExpression	"this -> errorCode == ""E_CURL_IO"""		5072895	0		==			
ANR	5073007	PtrMemberAccess	this -> errorCode		5072895	0					
ANR	5073008	Identifier	this		5072895	0					
ANR	5073009	Identifier	errorCode		5072895	1					
ANR	5073010	PrimaryExpression	"""E_CURL_IO"""		5072895	1					
ANR	5073011	CompoundStatement		12:45:497:497	5072895	1					
ANR	5073012	ExpressionStatement	"this -> errorCode = ""NEED_CHECK_VM_START"""	585:12:22955:22994	5072895	0	True				
ANR	5073013	AssignmentExpression	"this -> errorCode = ""NEED_CHECK_VM_START"""		5072895	0		=			
ANR	5073014	PtrMemberAccess	this -> errorCode		5072895	0					
ANR	5073015	Identifier	this		5072895	0					
ANR	5073016	Identifier	errorCode		5072895	1					
ANR	5073017	PrimaryExpression	"""NEED_CHECK_VM_START"""		5072895	1					
ANR	5073018	ReturnStatement	return false ;	586:12:23009:23021	5072895	1	True				
ANR	5073019	Identifier	false		5072895	0					
ANR	5073020	ReturnStatement	return result ;	589:4:23043:23056	5072895	2	True				
ANR	5073021	Identifier	result		5072895	0					
ANR	5073022	ReturnType	bool		5072895	1					
ANR	5073023	Identifier	AmazonVMStart :: SendRequest		5072895	2					
ANR	5073024	ParameterList			5072895	3					
ANR	5073025	CFGEntryNode	ENTRY		5072895		True				
ANR	5073026	CFGExitNode	EXIT		5072895		True				
ANR	5073027	Symbol	& vmStartESH		5072895						
ANR	5073028	Symbol	NULL		5072895						
ANR	5073029	Symbol	AmazonRequest :: SendRequest		5072895						
ANR	5073030	Symbol	this -> resultString		5072895						
ANR	5073031	Symbol	this -> resultString . length		5072895						
ANR	5073032	Symbol	this -> resultString . c_str		5072895						
ANR	5073033	Symbol	this		5072895						
ANR	5073034	Symbol	false		5072895						
ANR	5073035	Symbol	this -> errorCode		5072895						
ANR	5073036	Symbol	result		5072895						
ANR	5073037	Symbol	* this		5072895						
ANR	5073038	Symbol	& vsud		5072895						
ANR	5073039	Symbol	xp		5072895						
ANR	5073040	Symbol	vsud		5072895						
ANR	5073041	Symbol	XML_ParserCreate		5072895						
ANR	5073042	Symbol	& vmStartEEH		5072895						
ANR	5073043	Symbol	& vmStartCDH		5072895						
ANR	5073044	Function	AmazonVMStart :: workerFunction	595:0:23297:27284							
ANR	5073045	FunctionDef	"AmazonVMStart :: workerFunction (char * * argv , int argc , std :: string & result_string)"		5073044	0					
ANR	5073046	CompoundStatement		595:86:23383:27284	5073044	0					
ANR	5073047	ExpressionStatement	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_START"" ) == 0 )"	596:4:23389:23437	5073044	0	True				
ANR	5073048	CallExpression	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_START"" ) == 0 )"		5073044	0					
ANR	5073049	Callee	assert		5073044	0					
ANR	5073050	Identifier	assert		5073044	0					
ANR	5073051	ArgumentList	"strcmp ( argv [ 0 ] , ""EC2_VM_START"" ) == 0"		5073044	1					
ANR	5073052	Argument	"strcmp ( argv [ 0 ] , ""EC2_VM_START"" ) == 0"		5073044	0					
ANR	5073053	EqualityExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_START"" ) == 0"		5073044	0		==			
ANR	5073054	CallExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_START"" )"		5073044	0					
ANR	5073055	Callee	strcmp		5073044	0					
ANR	5073056	Identifier	strcmp		5073044	0					
ANR	5073057	ArgumentList	argv [ 0 ]		5073044	1					
ANR	5073058	Argument	argv [ 0 ]		5073044	0					
ANR	5073059	ArrayIndexing	argv [ 0 ]		5073044	0					
ANR	5073060	Identifier	argv		5073044	0					
ANR	5073061	PrimaryExpression	0		5073044	1					
ANR	5073062	Argument	"""EC2_VM_START"""		5073044	1					
ANR	5073063	PrimaryExpression	"""EC2_VM_START"""		5073044	0					
ANR	5073064	PrimaryExpression	0		5073044	1					
ANR	5073065	IdentifierDeclStatement	int requestID ;	601:4:23618:23631	5073044	1	True				
ANR	5073066	IdentifierDecl	requestID		5073044	0					
ANR	5073067	IdentifierDeclType	int		5073044	0					
ANR	5073068	Identifier	requestID		5073044	1					
ANR	5073069	ExpressionStatement	"get_int ( argv [ 1 ] , & requestID )"	602:4:23637:23668	5073044	2	True				
ANR	5073070	CallExpression	"get_int ( argv [ 1 ] , & requestID )"		5073044	0					
ANR	5073071	Callee	get_int		5073044	0					
ANR	5073072	Identifier	get_int		5073044	0					
ANR	5073073	ArgumentList	argv [ 1 ]		5073044	1					
ANR	5073074	Argument	argv [ 1 ]		5073044	0					
ANR	5073075	ArrayIndexing	argv [ 1 ]		5073044	0					
ANR	5073076	Identifier	argv		5073044	0					
ANR	5073077	PrimaryExpression	1		5073044	1					
ANR	5073078	Argument	& requestID		5073044	1					
ANR	5073079	UnaryOperationExpression	& requestID		5073044	0					
ANR	5073080	UnaryOperator	&		5073044	0					
ANR	5073081	Identifier	requestID		5073044	1					
ANR	5073082	IfStatement	"if ( ! verify_min_number_args ( argc , 10 ) )"		5073044	3					
ANR	5073083	Condition	"! verify_min_number_args ( argc , 10 )"	604:8:23683:23718	5073044	0	True				
ANR	5073084	UnaryOperationExpression	"! verify_min_number_args ( argc , 10 )"		5073044	0					
ANR	5073085	UnaryOperator	!		5073044	0					
ANR	5073086	CallExpression	"verify_min_number_args ( argc , 10 )"		5073044	1					
ANR	5073087	Callee	verify_min_number_args		5073044	0					
ANR	5073088	Identifier	verify_min_number_args		5073044	0					
ANR	5073089	ArgumentList	argc		5073044	1					
ANR	5073090	Argument	argc		5073044	0					
ANR	5073091	Identifier	argc		5073044	0					
ANR	5073092	Argument	10		5073044	1					
ANR	5073093	PrimaryExpression	10		5073044	0					
ANR	5073094	CompoundStatement		10:47:338:338	5073044	1					
ANR	5073095	ExpressionStatement	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"	605:8:23732:23807	5073044	0	True				
ANR	5073096	AssignmentExpression	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		5073044	0		=			
ANR	5073097	Identifier	result_string		5073044	0					
ANR	5073098	CallExpression	"create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		5073044	1					
ANR	5073099	Callee	create_failure_result		5073044	0					
ANR	5073100	Identifier	create_failure_result		5073044	0					
ANR	5073101	ArgumentList	requestID		5073044	1					
ANR	5073102	Argument	requestID		5073044	0					
ANR	5073103	Identifier	requestID		5073044	0					
ANR	5073104	Argument	"""Wrong_Argument_Number"""		5073044	1					
ANR	5073105	PrimaryExpression	"""Wrong_Argument_Number"""		5073044	0					
ANR	5073106	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 10 , argv [ 0 ] )"	606:8:23817:23930	5073044	1	True				
ANR	5073107	CallExpression	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 10 , argv [ 0 ] )"		5073044	0					
ANR	5073108	Callee	dprintf		5073044	0					
ANR	5073109	Identifier	dprintf		5073044	0					
ANR	5073110	ArgumentList	D_ALWAYS		5073044	1					
ANR	5073111	Argument	D_ALWAYS		5073044	0					
ANR	5073112	Identifier	D_ALWAYS		5073044	0					
ANR	5073113	Argument	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		5073044	1					
ANR	5073114	PrimaryExpression	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		5073044	0					
ANR	5073115	Argument	argc		5073044	2					
ANR	5073116	Identifier	argc		5073044	0					
ANR	5073117	Argument	10		5073044	3					
ANR	5073118	PrimaryExpression	10		5073044	0					
ANR	5073119	Argument	argv [ 0 ]		5073044	4					
ANR	5073120	ArrayIndexing	argv [ 0 ]		5073044	0					
ANR	5073121	Identifier	argv		5073044	0					
ANR	5073122	PrimaryExpression	0		5073044	1					
ANR	5073123	ReturnStatement	return false ;	608:8:23940:23952	5073044	2	True				
ANR	5073124	Identifier	false		5073044	0					
ANR	5073125	IdentifierDeclStatement	AmazonVMStart vmStartRequest ;	612:4:24014:24042	5073044	4	True				
ANR	5073126	IdentifierDecl	vmStartRequest		5073044	0					
ANR	5073127	IdentifierDeclType	AmazonVMStart		5073044	0					
ANR	5073128	Identifier	vmStartRequest		5073044	1					
ANR	5073129	ExpressionStatement	vmStartRequest . serviceURL = argv [ 2 ]	613:4:24048:24083	5073044	5	True				
ANR	5073130	AssignmentExpression	vmStartRequest . serviceURL = argv [ 2 ]		5073044	0		=			
ANR	5073131	MemberAccess	vmStartRequest . serviceURL		5073044	0					
ANR	5073132	Identifier	vmStartRequest		5073044	0					
ANR	5073133	Identifier	serviceURL		5073044	1					
ANR	5073134	ArrayIndexing	argv [ 2 ]		5073044	1					
ANR	5073135	Identifier	argv		5073044	0					
ANR	5073136	PrimaryExpression	2		5073044	1					
ANR	5073137	ExpressionStatement	vmStartRequest . accessKeyFile = argv [ 3 ]	614:4:24089:24127	5073044	6	True				
ANR	5073138	AssignmentExpression	vmStartRequest . accessKeyFile = argv [ 3 ]		5073044	0		=			
ANR	5073139	MemberAccess	vmStartRequest . accessKeyFile		5073044	0					
ANR	5073140	Identifier	vmStartRequest		5073044	0					
ANR	5073141	Identifier	accessKeyFile		5073044	1					
ANR	5073142	ArrayIndexing	argv [ 3 ]		5073044	1					
ANR	5073143	Identifier	argv		5073044	0					
ANR	5073144	PrimaryExpression	3		5073044	1					
ANR	5073145	ExpressionStatement	vmStartRequest . secretKeyFile = argv [ 4 ]	615:4:24133:24171	5073044	7	True				
ANR	5073146	AssignmentExpression	vmStartRequest . secretKeyFile = argv [ 4 ]		5073044	0		=			
ANR	5073147	MemberAccess	vmStartRequest . secretKeyFile		5073044	0					
ANR	5073148	Identifier	vmStartRequest		5073044	0					
ANR	5073149	Identifier	secretKeyFile		5073044	1					
ANR	5073150	ArrayIndexing	argv [ 4 ]		5073044	1					
ANR	5073151	Identifier	argv		5073044	0					
ANR	5073152	PrimaryExpression	4		5073044	1					
ANR	5073153	ExpressionStatement	"vmStartRequest . query_parameters [ ""Action"" ] = ""RunInstances"""	616:4:24177:24237	5073044	8	True				
ANR	5073154	AssignmentExpression	"vmStartRequest . query_parameters [ ""Action"" ] = ""RunInstances"""		5073044	0		=			
ANR	5073155	ArrayIndexing	"vmStartRequest . query_parameters [ ""Action"" ]"		5073044	0					
ANR	5073156	MemberAccess	vmStartRequest . query_parameters		5073044	0					
ANR	5073157	Identifier	vmStartRequest		5073044	0					
ANR	5073158	Identifier	query_parameters		5073044	1					
ANR	5073159	PrimaryExpression	"""Action"""		5073044	1					
ANR	5073160	PrimaryExpression	"""RunInstances"""		5073044	1					
ANR	5073161	ExpressionStatement	"vmStartRequest . query_parameters [ ""ImageId"" ] = argv [ 5 ]"	617:4:24243:24297	5073044	9	True				
ANR	5073162	AssignmentExpression	"vmStartRequest . query_parameters [ ""ImageId"" ] = argv [ 5 ]"		5073044	0		=			
ANR	5073163	ArrayIndexing	"vmStartRequest . query_parameters [ ""ImageId"" ]"		5073044	0					
ANR	5073164	MemberAccess	vmStartRequest . query_parameters		5073044	0					
ANR	5073165	Identifier	vmStartRequest		5073044	0					
ANR	5073166	Identifier	query_parameters		5073044	1					
ANR	5073167	PrimaryExpression	"""ImageId"""		5073044	1					
ANR	5073168	ArrayIndexing	argv [ 5 ]		5073044	1					
ANR	5073169	Identifier	argv		5073044	0					
ANR	5073170	PrimaryExpression	5		5073044	1					
ANR	5073171	ExpressionStatement	"vmStartRequest . query_parameters [ ""MinCount"" ] = ""1"""	618:4:24303:24354	5073044	10	True				
ANR	5073172	AssignmentExpression	"vmStartRequest . query_parameters [ ""MinCount"" ] = ""1"""		5073044	0		=			
ANR	5073173	ArrayIndexing	"vmStartRequest . query_parameters [ ""MinCount"" ]"		5073044	0					
ANR	5073174	MemberAccess	vmStartRequest . query_parameters		5073044	0					
ANR	5073175	Identifier	vmStartRequest		5073044	0					
ANR	5073176	Identifier	query_parameters		5073044	1					
ANR	5073177	PrimaryExpression	"""MinCount"""		5073044	1					
ANR	5073178	PrimaryExpression	"""1"""		5073044	1					
ANR	5073179	ExpressionStatement	"vmStartRequest . query_parameters [ ""MaxCount"" ] = ""1"""	619:4:24360:24411	5073044	11	True				
ANR	5073180	AssignmentExpression	"vmStartRequest . query_parameters [ ""MaxCount"" ] = ""1"""		5073044	0		=			
ANR	5073181	ArrayIndexing	"vmStartRequest . query_parameters [ ""MaxCount"" ]"		5073044	0					
ANR	5073182	MemberAccess	vmStartRequest . query_parameters		5073044	0					
ANR	5073183	Identifier	vmStartRequest		5073044	0					
ANR	5073184	Identifier	query_parameters		5073044	1					
ANR	5073185	PrimaryExpression	"""MaxCount"""		5073044	1					
ANR	5073186	PrimaryExpression	"""1"""		5073044	1					
ANR	5073187	ExpressionStatement	"vmStartRequest . query_parameters [ ""InstanceInitiatedShutdownBehavior"" ] = ""terminate"""	620:1:24414:24498	5073044	12	True				
ANR	5073188	AssignmentExpression	"vmStartRequest . query_parameters [ ""InstanceInitiatedShutdownBehavior"" ] = ""terminate"""		5073044	0		=			
ANR	5073189	ArrayIndexing	"vmStartRequest . query_parameters [ ""InstanceInitiatedShutdownBehavior"" ]"		5073044	0					
ANR	5073190	MemberAccess	vmStartRequest . query_parameters		5073044	0					
ANR	5073191	Identifier	vmStartRequest		5073044	0					
ANR	5073192	Identifier	query_parameters		5073044	1					
ANR	5073193	PrimaryExpression	"""InstanceInitiatedShutdownBehavior"""		5073044	1					
ANR	5073194	PrimaryExpression	"""terminate"""		5073044	1					
ANR	5073195	IfStatement	"if ( strcasecmp ( argv [ 6 ] , NULLSTRING ) )"		5073044	13					
ANR	5073196	Condition	"strcasecmp ( argv [ 6 ] , NULLSTRING )"	623:8:24549:24581	5073044	0	True				
ANR	5073197	CallExpression	"strcasecmp ( argv [ 6 ] , NULLSTRING )"		5073044	0					
ANR	5073198	Callee	strcasecmp		5073044	0					
ANR	5073199	Identifier	strcasecmp		5073044	0					
ANR	5073200	ArgumentList	argv [ 6 ]		5073044	1					
ANR	5073201	Argument	argv [ 6 ]		5073044	0					
ANR	5073202	ArrayIndexing	argv [ 6 ]		5073044	0					
ANR	5073203	Identifier	argv		5073044	0					
ANR	5073204	PrimaryExpression	6		5073044	1					
ANR	5073205	Argument	NULLSTRING		5073044	1					
ANR	5073206	Identifier	NULLSTRING		5073044	0					
ANR	5073207	CompoundStatement		29:44:1201:1201	5073044	1					
ANR	5073208	ExpressionStatement	"vmStartRequest . query_parameters [ ""KeyName"" ] = argv [ 6 ]"	624:8:24595:24649	5073044	0	True				
ANR	5073209	AssignmentExpression	"vmStartRequest . query_parameters [ ""KeyName"" ] = argv [ 6 ]"		5073044	0		=			
ANR	5073210	ArrayIndexing	"vmStartRequest . query_parameters [ ""KeyName"" ]"		5073044	0					
ANR	5073211	MemberAccess	vmStartRequest . query_parameters		5073044	0					
ANR	5073212	Identifier	vmStartRequest		5073044	0					
ANR	5073213	Identifier	query_parameters		5073044	1					
ANR	5073214	PrimaryExpression	"""KeyName"""		5073044	1					
ANR	5073215	ArrayIndexing	argv [ 6 ]		5073044	1					
ANR	5073216	Identifier	argv		5073044	0					
ANR	5073217	PrimaryExpression	6		5073044	1					
ANR	5073218	IfStatement	"if ( strcasecmp ( argv [ 9 ] , NULLSTRING ) )"		5073044	14					
ANR	5073219	Condition	"strcasecmp ( argv [ 9 ] , NULLSTRING )"	627:8:24670:24702	5073044	0	True				
ANR	5073220	CallExpression	"strcasecmp ( argv [ 9 ] , NULLSTRING )"		5073044	0					
ANR	5073221	Callee	strcasecmp		5073044	0					
ANR	5073222	Identifier	strcasecmp		5073044	0					
ANR	5073223	ArgumentList	argv [ 9 ]		5073044	1					
ANR	5073224	Argument	argv [ 9 ]		5073044	0					
ANR	5073225	ArrayIndexing	argv [ 9 ]		5073044	0					
ANR	5073226	Identifier	argv		5073044	0					
ANR	5073227	PrimaryExpression	9		5073044	1					
ANR	5073228	Argument	NULLSTRING		5073044	1					
ANR	5073229	Identifier	NULLSTRING		5073044	0					
ANR	5073230	CompoundStatement		33:44:1322:1322	5073044	1					
ANR	5073231	ExpressionStatement	"vmStartRequest . query_parameters [ ""InstanceType"" ] = argv [ 9 ]"	628:8:24716:24775	5073044	0	True				
ANR	5073232	AssignmentExpression	"vmStartRequest . query_parameters [ ""InstanceType"" ] = argv [ 9 ]"		5073044	0		=			
ANR	5073233	ArrayIndexing	"vmStartRequest . query_parameters [ ""InstanceType"" ]"		5073044	0					
ANR	5073234	MemberAccess	vmStartRequest . query_parameters		5073044	0					
ANR	5073235	Identifier	vmStartRequest		5073044	0					
ANR	5073236	Identifier	query_parameters		5073044	1					
ANR	5073237	PrimaryExpression	"""InstanceType"""		5073044	1					
ANR	5073238	ArrayIndexing	argv [ 9 ]		5073044	1					
ANR	5073239	Identifier	argv		5073044	0					
ANR	5073240	PrimaryExpression	9		5073044	1					
ANR	5073241	IfStatement	"if ( strcasecmp ( argv [ 10 ] , NULLSTRING ) )"		5073044	15					
ANR	5073242	Condition	"strcasecmp ( argv [ 10 ] , NULLSTRING )"	631:8:24796:24829	5073044	0	True				
ANR	5073243	CallExpression	"strcasecmp ( argv [ 10 ] , NULLSTRING )"		5073044	0					
ANR	5073244	Callee	strcasecmp		5073044	0					
ANR	5073245	Identifier	strcasecmp		5073044	0					
ANR	5073246	ArgumentList	argv [ 10 ]		5073044	1					
ANR	5073247	Argument	argv [ 10 ]		5073044	0					
ANR	5073248	ArrayIndexing	argv [ 10 ]		5073044	0					
ANR	5073249	Identifier	argv		5073044	0					
ANR	5073250	PrimaryExpression	10		5073044	1					
ANR	5073251	Argument	NULLSTRING		5073044	1					
ANR	5073252	Identifier	NULLSTRING		5073044	0					
ANR	5073253	CompoundStatement		37:45:1449:1449	5073044	1					
ANR	5073254	ExpressionStatement	"vmStartRequest . query_parameters [ ""Placement.AvailabilityZone"" ] = argv [ 10 ]"	632:8:24843:24917	5073044	0	True				
ANR	5073255	AssignmentExpression	"vmStartRequest . query_parameters [ ""Placement.AvailabilityZone"" ] = argv [ 10 ]"		5073044	0		=			
ANR	5073256	ArrayIndexing	"vmStartRequest . query_parameters [ ""Placement.AvailabilityZone"" ]"		5073044	0					
ANR	5073257	MemberAccess	vmStartRequest . query_parameters		5073044	0					
ANR	5073258	Identifier	vmStartRequest		5073044	0					
ANR	5073259	Identifier	query_parameters		5073044	1					
ANR	5073260	PrimaryExpression	"""Placement.AvailabilityZone"""		5073044	1					
ANR	5073261	ArrayIndexing	argv [ 10 ]		5073044	1					
ANR	5073262	Identifier	argv		5073044	0					
ANR	5073263	PrimaryExpression	10		5073044	1					
ANR	5073264	IfStatement	"if ( strcasecmp ( argv [ 11 ] , NULLSTRING ) )"		5073044	16					
ANR	5073265	Condition	"strcasecmp ( argv [ 11 ] , NULLSTRING )"	635:8:24938:24971	5073044	0	True				
ANR	5073266	CallExpression	"strcasecmp ( argv [ 11 ] , NULLSTRING )"		5073044	0					
ANR	5073267	Callee	strcasecmp		5073044	0					
ANR	5073268	Identifier	strcasecmp		5073044	0					
ANR	5073269	ArgumentList	argv [ 11 ]		5073044	1					
ANR	5073270	Argument	argv [ 11 ]		5073044	0					
ANR	5073271	ArrayIndexing	argv [ 11 ]		5073044	0					
ANR	5073272	Identifier	argv		5073044	0					
ANR	5073273	PrimaryExpression	11		5073044	1					
ANR	5073274	Argument	NULLSTRING		5073044	1					
ANR	5073275	Identifier	NULLSTRING		5073044	0					
ANR	5073276	CompoundStatement		41:45:1591:1591	5073044	1					
ANR	5073277	ExpressionStatement	"vmStartRequest . query_parameters [ ""SubnetId"" ] = argv [ 11 ]"	636:8:24985:25041	5073044	0	True				
ANR	5073278	AssignmentExpression	"vmStartRequest . query_parameters [ ""SubnetId"" ] = argv [ 11 ]"		5073044	0		=			
ANR	5073279	ArrayIndexing	"vmStartRequest . query_parameters [ ""SubnetId"" ]"		5073044	0					
ANR	5073280	MemberAccess	vmStartRequest . query_parameters		5073044	0					
ANR	5073281	Identifier	vmStartRequest		5073044	0					
ANR	5073282	Identifier	query_parameters		5073044	1					
ANR	5073283	PrimaryExpression	"""SubnetId"""		5073044	1					
ANR	5073284	ArrayIndexing	argv [ 11 ]		5073044	1					
ANR	5073285	Identifier	argv		5073044	0					
ANR	5073286	PrimaryExpression	11		5073044	1					
ANR	5073287	IfStatement	"if ( strcasecmp ( argv [ 12 ] , NULLSTRING ) )"		5073044	17					
ANR	5073288	Condition	"strcasecmp ( argv [ 12 ] , NULLSTRING )"	639:8:25062:25095	5073044	0	True				
ANR	5073289	CallExpression	"strcasecmp ( argv [ 12 ] , NULLSTRING )"		5073044	0					
ANR	5073290	Callee	strcasecmp		5073044	0					
ANR	5073291	Identifier	strcasecmp		5073044	0					
ANR	5073292	ArgumentList	argv [ 12 ]		5073044	1					
ANR	5073293	Argument	argv [ 12 ]		5073044	0					
ANR	5073294	ArrayIndexing	argv [ 12 ]		5073044	0					
ANR	5073295	Identifier	argv		5073044	0					
ANR	5073296	PrimaryExpression	12		5073044	1					
ANR	5073297	Argument	NULLSTRING		5073044	1					
ANR	5073298	Identifier	NULLSTRING		5073044	0					
ANR	5073299	CompoundStatement		45:45:1715:1715	5073044	1					
ANR	5073300	ExpressionStatement	"vmStartRequest . query_parameters [ ""PrivateIpAddress"" ] = argv [ 12 ]"	640:8:25109:25173	5073044	0	True				
ANR	5073301	AssignmentExpression	"vmStartRequest . query_parameters [ ""PrivateIpAddress"" ] = argv [ 12 ]"		5073044	0		=			
ANR	5073302	ArrayIndexing	"vmStartRequest . query_parameters [ ""PrivateIpAddress"" ]"		5073044	0					
ANR	5073303	MemberAccess	vmStartRequest . query_parameters		5073044	0					
ANR	5073304	Identifier	vmStartRequest		5073044	0					
ANR	5073305	Identifier	query_parameters		5073044	1					
ANR	5073306	PrimaryExpression	"""PrivateIpAddress"""		5073044	1					
ANR	5073307	ArrayIndexing	argv [ 12 ]		5073044	1					
ANR	5073308	Identifier	argv		5073044	0					
ANR	5073309	PrimaryExpression	12		5073044	1					
ANR	5073310	ForStatement	for ( int i = 13 ; i < argc ; ++ i )		5073044	18					
ANR	5073311	ForInit	int i = 13 ;	643:9:25191:25201	5073044	0	True				
ANR	5073312	IdentifierDeclStatement	int i = 13 ;		5073044	0					
ANR	5073313	IdentifierDecl	i = 13		5073044	0					
ANR	5073314	IdentifierDeclType	int		5073044	0					
ANR	5073315	Identifier	i		5073044	1					
ANR	5073316	AssignmentExpression	i = 13		5073044	2		=			
ANR	5073317	Identifier	i		5073044	0					
ANR	5073318	PrimaryExpression	13		5073044	1					
ANR	5073319	Condition	i < argc	643:21:25203:25210	5073044	1	True				
ANR	5073320	RelationalExpression	i < argc		5073044	0		<			
ANR	5073321	Identifier	i		5073044	0					
ANR	5073322	Identifier	argc		5073044	1					
ANR	5073323	UnaryExpression	++ i	643:31:25213:25215	5073044	2	True				
ANR	5073324	IncDec	++		5073044	0					
ANR	5073325	Identifier	i		5073044	1					
ANR	5073326	CompoundStatement		50:8:1845:1873	5073044	3					
ANR	5073327	IdentifierDeclStatement	std :: ostringstream groupName ;	644:8:25229:25257	5073044	0	True				
ANR	5073328	IdentifierDecl	groupName		5073044	0					
ANR	5073329	IdentifierDeclType	std :: ostringstream		5073044	0					
ANR	5073330	Identifier	groupName		5073044	1					
ANR	5073331	ExpressionStatement	"groupName << ""SecurityGroup."" << ( i - 13 + 1 )"	645:8:25267:25314	5073044	1	True				
ANR	5073332	ShiftExpression	"groupName << ""SecurityGroup."" << ( i - 13 + 1 )"		5073044	0		<<			
ANR	5073333	Identifier	groupName		5073044	0					
ANR	5073334	ShiftExpression	"""SecurityGroup."" << ( i - 13 + 1 )"		5073044	1		<<			
ANR	5073335	PrimaryExpression	"""SecurityGroup."""		5073044	0					
ANR	5073336	AdditiveExpression	i - 13 + 1		5073044	1		-			
ANR	5073337	Identifier	i		5073044	0					
ANR	5073338	AdditiveExpression	13 + 1		5073044	1		+			
ANR	5073339	PrimaryExpression	13		5073044	0					
ANR	5073340	PrimaryExpression	1		5073044	1					
ANR	5073341	ExpressionStatement	vmStartRequest . query_parameters [ groupName . str ( ) ] = argv [ i ]	646:8:25324:25386	5073044	2	True				
ANR	5073342	AssignmentExpression	vmStartRequest . query_parameters [ groupName . str ( ) ] = argv [ i ]		5073044	0		=			
ANR	5073343	ArrayIndexing	vmStartRequest . query_parameters [ groupName . str ( ) ]		5073044	0					
ANR	5073344	MemberAccess	vmStartRequest . query_parameters		5073044	0					
ANR	5073345	Identifier	vmStartRequest		5073044	0					
ANR	5073346	Identifier	query_parameters		5073044	1					
ANR	5073347	CallExpression	groupName . str ( )		5073044	1					
ANR	5073348	Callee	groupName . str		5073044	0					
ANR	5073349	MemberAccess	groupName . str		5073044	0					
ANR	5073350	Identifier	groupName		5073044	0					
ANR	5073351	Identifier	str		5073044	1					
ANR	5073352	ArgumentList			5073044	1					
ANR	5073353	ArrayIndexing	argv [ i ]		5073044	1					
ANR	5073354	Identifier	argv		5073044	0					
ANR	5073355	Identifier	i		5073044	1					
ANR	5073356	IdentifierDeclStatement	std :: string buffer ;	652:4:25442:25460	5073044	19	True				
ANR	5073357	IdentifierDecl	buffer		5073044	0					
ANR	5073358	IdentifierDeclType	std :: string		5073044	0					
ANR	5073359	Identifier	buffer		5073044	1					
ANR	5073360	IfStatement	"if ( strcasecmp ( argv [ 7 ] , NULLSTRING ) )"		5073044	20					
ANR	5073361	Condition	"strcasecmp ( argv [ 7 ] , NULLSTRING )"	653:8:25470:25502	5073044	0	True				
ANR	5073362	CallExpression	"strcasecmp ( argv [ 7 ] , NULLSTRING )"		5073044	0					
ANR	5073363	Callee	strcasecmp		5073044	0					
ANR	5073364	Identifier	strcasecmp		5073044	0					
ANR	5073365	ArgumentList	argv [ 7 ]		5073044	1					
ANR	5073366	Argument	argv [ 7 ]		5073044	0					
ANR	5073367	ArrayIndexing	argv [ 7 ]		5073044	0					
ANR	5073368	Identifier	argv		5073044	0					
ANR	5073369	PrimaryExpression	7		5073044	1					
ANR	5073370	Argument	NULLSTRING		5073044	1					
ANR	5073371	Identifier	NULLSTRING		5073044	0					
ANR	5073372	CompoundStatement		59:44:2122:2122	5073044	1					
ANR	5073373	ExpressionStatement	buffer = argv [ 7 ]	654:8:25516:25532	5073044	0	True				
ANR	5073374	AssignmentExpression	buffer = argv [ 7 ]		5073044	0		=			
ANR	5073375	Identifier	buffer		5073044	0					
ANR	5073376	ArrayIndexing	argv [ 7 ]		5073044	1					
ANR	5073377	Identifier	argv		5073044	0					
ANR	5073378	PrimaryExpression	7		5073044	1					
ANR	5073379	IfStatement	"if ( strcasecmp ( argv [ 8 ] , NULLSTRING ) )"		5073044	21					
ANR	5073380	Condition	"strcasecmp ( argv [ 8 ] , NULLSTRING )"	656:8:25548:25580	5073044	0	True				
ANR	5073381	CallExpression	"strcasecmp ( argv [ 8 ] , NULLSTRING )"		5073044	0					
ANR	5073382	Callee	strcasecmp		5073044	0					
ANR	5073383	Identifier	strcasecmp		5073044	0					
ANR	5073384	ArgumentList	argv [ 8 ]		5073044	1					
ANR	5073385	Argument	argv [ 8 ]		5073044	0					
ANR	5073386	ArrayIndexing	argv [ 8 ]		5073044	0					
ANR	5073387	Identifier	argv		5073044	0					
ANR	5073388	PrimaryExpression	8		5073044	1					
ANR	5073389	Argument	NULLSTRING		5073044	1					
ANR	5073390	Identifier	NULLSTRING		5073044	0					
ANR	5073391	CompoundStatement		64:8:2252:2278	5073044	1					
ANR	5073392	IdentifierDeclStatement	std :: string udFileName = argv [ 8 ] ;	657:8:25594:25626	5073044	0	True				
ANR	5073393	IdentifierDecl	udFileName = argv [ 8 ]		5073044	0					
ANR	5073394	IdentifierDeclType	std :: string		5073044	0					
ANR	5073395	Identifier	udFileName		5073044	1					
ANR	5073396	AssignmentExpression	udFileName = argv [ 8 ]		5073044	2		=			
ANR	5073397	Identifier	udFileName		5073044	0					
ANR	5073398	ArrayIndexing	argv [ 8 ]		5073044	1					
ANR	5073399	Identifier	argv		5073044	0					
ANR	5073400	PrimaryExpression	8		5073044	1					
ANR	5073401	IdentifierDeclStatement	std :: string udFileContents ;	658:8:25636:25662	5073044	1	True				
ANR	5073402	IdentifierDecl	udFileContents		5073044	0					
ANR	5073403	IdentifierDeclType	std :: string		5073044	0					
ANR	5073404	Identifier	udFileContents		5073044	1					
ANR	5073405	IfStatement	"if ( ! readShortFile ( udFileName , udFileContents ) )"		5073044	2					
ANR	5073406	Condition	"! readShortFile ( udFileName , udFileContents )"	659:12:25676:25720	5073044	0	True				
ANR	5073407	UnaryOperationExpression	"! readShortFile ( udFileName , udFileContents )"		5073044	0					
ANR	5073408	UnaryOperator	!		5073044	0					
ANR	5073409	CallExpression	"readShortFile ( udFileName , udFileContents )"		5073044	1					
ANR	5073410	Callee	readShortFile		5073044	0					
ANR	5073411	Identifier	readShortFile		5073044	0					
ANR	5073412	ArgumentList	udFileName		5073044	1					
ANR	5073413	Argument	udFileName		5073044	0					
ANR	5073414	Identifier	udFileName		5073044	0					
ANR	5073415	Argument	udFileContents		5073044	1					
ANR	5073416	Identifier	udFileContents		5073044	0					
ANR	5073417	CompoundStatement		65:60:2340:2340	5073044	1					
ANR	5073418	ExpressionStatement	"result_string = create_failure_result ( requestID , ""Failed to read userdata file."" , ""E_FILE_IO"" )"	660:12:25738:25834	5073044	0	True				
ANR	5073419	AssignmentExpression	"result_string = create_failure_result ( requestID , ""Failed to read userdata file."" , ""E_FILE_IO"" )"		5073044	0		=			
ANR	5073420	Identifier	result_string		5073044	0					
ANR	5073421	CallExpression	"create_failure_result ( requestID , ""Failed to read userdata file."" , ""E_FILE_IO"" )"		5073044	1					
ANR	5073422	Callee	create_failure_result		5073044	0					
ANR	5073423	Identifier	create_failure_result		5073044	0					
ANR	5073424	ArgumentList	requestID		5073044	1					
ANR	5073425	Argument	requestID		5073044	0					
ANR	5073426	Identifier	requestID		5073044	0					
ANR	5073427	Argument	"""Failed to read userdata file."""		5073044	1					
ANR	5073428	PrimaryExpression	"""Failed to read userdata file."""		5073044	0					
ANR	5073429	Argument	"""E_FILE_IO"""		5073044	2					
ANR	5073430	PrimaryExpression	"""E_FILE_IO"""		5073044	0					
ANR	5073431	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to read userdata file '%s'.\\n"" , udFileName . c_str ( ) )"	661:12:25848:25927	5073044	1	True				
ANR	5073432	CallExpression	"dprintf ( D_ALWAYS , ""Failed to read userdata file '%s'.\\n"" , udFileName . c_str ( ) )"		5073044	0					
ANR	5073433	Callee	dprintf		5073044	0					
ANR	5073434	Identifier	dprintf		5073044	0					
ANR	5073435	ArgumentList	D_ALWAYS		5073044	1					
ANR	5073436	Argument	D_ALWAYS		5073044	0					
ANR	5073437	Identifier	D_ALWAYS		5073044	0					
ANR	5073438	Argument	"""Failed to read userdata file '%s'.\\n"""		5073044	1					
ANR	5073439	PrimaryExpression	"""Failed to read userdata file '%s'.\\n"""		5073044	0					
ANR	5073440	Argument	udFileName . c_str ( )		5073044	2					
ANR	5073441	CallExpression	udFileName . c_str ( )		5073044	0					
ANR	5073442	Callee	udFileName . c_str		5073044	0					
ANR	5073443	MemberAccess	udFileName . c_str		5073044	0					
ANR	5073444	Identifier	udFileName		5073044	0					
ANR	5073445	Identifier	c_str		5073044	1					
ANR	5073446	ArgumentList			5073044	1					
ANR	5073447	ReturnStatement	return false ;	662:12:25941:25953	5073044	2	True				
ANR	5073448	Identifier	false		5073044	0					
ANR	5073449	ExpressionStatement	buffer += udFileContents	664:8:25977:26001	5073044	3	True				
ANR	5073450	AssignmentExpression	buffer += udFileContents		5073044	0		+=			
ANR	5073451	Identifier	buffer		5073044	0					
ANR	5073452	Identifier	udFileContents		5073044	1					
ANR	5073453	IfStatement	if ( ! buffer . empty ( ) )		5073044	22					
ANR	5073454	Condition	! buffer . empty ( )	666:8:26029:26044	5073044	0	True				
ANR	5073455	UnaryOperationExpression	! buffer . empty ( )		5073044	0					
ANR	5073456	UnaryOperator	!		5073044	0					
ANR	5073457	CallExpression	buffer . empty ( )		5073044	1					
ANR	5073458	Callee	buffer . empty		5073044	0					
ANR	5073459	MemberAccess	buffer . empty		5073044	0					
ANR	5073460	Identifier	buffer		5073044	0					
ANR	5073461	Identifier	empty		5073044	1					
ANR	5073462	ArgumentList			5073044	1					
ANR	5073463	CompoundStatement		73:8:2674:2775	5073044	1					
ANR	5073464	IdentifierDeclStatement	"char * base64Encoded = condor_base64_encode ( ( const unsigned char * ) buffer . c_str ( ) , buffer . length ( ) ) ;"	667:8:26058:26159	5073044	0	True				
ANR	5073465	IdentifierDecl	"* base64Encoded = condor_base64_encode ( ( const unsigned char * ) buffer . c_str ( ) , buffer . length ( ) )"		5073044	0					
ANR	5073466	IdentifierDeclType	char *		5073044	0					
ANR	5073467	Identifier	base64Encoded		5073044	1					
ANR	5073468	AssignmentExpression	"* base64Encoded = condor_base64_encode ( ( const unsigned char * ) buffer . c_str ( ) , buffer . length ( ) )"		5073044	2		=			
ANR	5073469	Identifier	base64Encoded		5073044	0					
ANR	5073470	CallExpression	"condor_base64_encode ( ( const unsigned char * ) buffer . c_str ( ) , buffer . length ( ) )"		5073044	1					
ANR	5073471	Callee	condor_base64_encode		5073044	0					
ANR	5073472	Identifier	condor_base64_encode		5073044	0					
ANR	5073473	ArgumentList	( const unsigned char * ) buffer . c_str ( )		5073044	1					
ANR	5073474	Argument	( const unsigned char * ) buffer . c_str ( )		5073044	0					
ANR	5073475	CastExpression	( const unsigned char * ) buffer . c_str ( )		5073044	0					
ANR	5073476	CastTarget	const unsigned char *		5073044	0					
ANR	5073477	CallExpression	buffer . c_str ( )		5073044	1					
ANR	5073478	Callee	buffer . c_str		5073044	0					
ANR	5073479	MemberAccess	buffer . c_str		5073044	0					
ANR	5073480	Identifier	buffer		5073044	0					
ANR	5073481	Identifier	c_str		5073044	1					
ANR	5073482	ArgumentList			5073044	1					
ANR	5073483	Argument	buffer . length ( )		5073044	1					
ANR	5073484	CallExpression	buffer . length ( )		5073044	0					
ANR	5073485	Callee	buffer . length		5073044	0					
ANR	5073486	MemberAccess	buffer . length		5073044	0					
ANR	5073487	Identifier	buffer		5073044	0					
ANR	5073488	Identifier	length		5073044	1					
ANR	5073489	ArgumentList			5073044	1					
ANR	5073490	ExpressionStatement	"vmStartRequest . query_parameters [ ""UserData"" ] = base64Encoded"	668:8:26169:26230	5073044	1	True				
ANR	5073491	AssignmentExpression	"vmStartRequest . query_parameters [ ""UserData"" ] = base64Encoded"		5073044	0		=			
ANR	5073492	ArrayIndexing	"vmStartRequest . query_parameters [ ""UserData"" ]"		5073044	0					
ANR	5073493	MemberAccess	vmStartRequest . query_parameters		5073044	0					
ANR	5073494	Identifier	vmStartRequest		5073044	0					
ANR	5073495	Identifier	query_parameters		5073044	1					
ANR	5073496	PrimaryExpression	"""UserData"""		5073044	1					
ANR	5073497	Identifier	base64Encoded		5073044	1					
ANR	5073498	ExpressionStatement	free ( base64Encoded )	669:8:26240:26261	5073044	2	True				
ANR	5073499	CallExpression	free ( base64Encoded )		5073044	0					
ANR	5073500	Callee	free		5073044	0					
ANR	5073501	Identifier	free		5073044	0					
ANR	5073502	ArgumentList	base64Encoded		5073044	1					
ANR	5073503	Argument	base64Encoded		5073044	0					
ANR	5073504	Identifier	base64Encoded		5073044	0					
ANR	5073505	IfStatement	if ( ! vmStartRequest . SendRequest ( ) )		5073044	23					
ANR	5073506	Condition	! vmStartRequest . SendRequest ( )	673:8:26307:26336	5073044	0	True				
ANR	5073507	UnaryOperationExpression	! vmStartRequest . SendRequest ( )		5073044	0					
ANR	5073508	UnaryOperator	!		5073044	0					
ANR	5073509	CallExpression	vmStartRequest . SendRequest ( )		5073044	1					
ANR	5073510	Callee	vmStartRequest . SendRequest		5073044	0					
ANR	5073511	MemberAccess	vmStartRequest . SendRequest		5073044	0					
ANR	5073512	Identifier	vmStartRequest		5073044	0					
ANR	5073513	Identifier	SendRequest		5073044	1					
ANR	5073514	ArgumentList			5073044	1					
ANR	5073515	CompoundStatement		79:41:2956:2956	5073044	1					
ANR	5073516	ExpressionStatement	"result_string = create_failure_result ( requestID , vmStartRequest . errorMessage . c_str ( ) , vmStartRequest . errorCode . c_str ( ) )"	674:8:26350:26495	5073044	0	True				
ANR	5073517	AssignmentExpression	"result_string = create_failure_result ( requestID , vmStartRequest . errorMessage . c_str ( ) , vmStartRequest . errorCode . c_str ( ) )"		5073044	0		=			
ANR	5073518	Identifier	result_string		5073044	0					
ANR	5073519	CallExpression	"create_failure_result ( requestID , vmStartRequest . errorMessage . c_str ( ) , vmStartRequest . errorCode . c_str ( ) )"		5073044	1					
ANR	5073520	Callee	create_failure_result		5073044	0					
ANR	5073521	Identifier	create_failure_result		5073044	0					
ANR	5073522	ArgumentList	requestID		5073044	1					
ANR	5073523	Argument	requestID		5073044	0					
ANR	5073524	Identifier	requestID		5073044	0					
ANR	5073525	Argument	vmStartRequest . errorMessage . c_str ( )		5073044	1					
ANR	5073526	CallExpression	vmStartRequest . errorMessage . c_str ( )		5073044	0					
ANR	5073527	Callee	vmStartRequest . errorMessage . c_str		5073044	0					
ANR	5073528	MemberAccess	vmStartRequest . errorMessage . c_str		5073044	0					
ANR	5073529	MemberAccess	vmStartRequest . errorMessage		5073044	0					
ANR	5073530	Identifier	vmStartRequest		5073044	0					
ANR	5073531	Identifier	errorMessage		5073044	1					
ANR	5073532	Identifier	c_str		5073044	1					
ANR	5073533	ArgumentList			5073044	1					
ANR	5073534	Argument	vmStartRequest . errorCode . c_str ( )		5073044	2					
ANR	5073535	CallExpression	vmStartRequest . errorCode . c_str ( )		5073044	0					
ANR	5073536	Callee	vmStartRequest . errorCode . c_str		5073044	0					
ANR	5073537	MemberAccess	vmStartRequest . errorCode . c_str		5073044	0					
ANR	5073538	MemberAccess	vmStartRequest . errorCode		5073044	0					
ANR	5073539	Identifier	vmStartRequest		5073044	0					
ANR	5073540	Identifier	errorCode		5073044	1					
ANR	5073541	Identifier	c_str		5073044	1					
ANR	5073542	ArgumentList			5073044	1					
ANR	5073543	ElseStatement	else		5073044	0					
ANR	5073544	CompoundStatement		83:11:3124:3124	5073044	0					
ANR	5073545	IfStatement	if ( vmStartRequest . instanceID . empty ( ) )		5073044	0					
ANR	5073546	Condition	vmStartRequest . instanceID . empty ( )	678:12:26522:26554	5073044	0	True				
ANR	5073547	CallExpression	vmStartRequest . instanceID . empty ( )		5073044	0					
ANR	5073548	Callee	vmStartRequest . instanceID . empty		5073044	0					
ANR	5073549	MemberAccess	vmStartRequest . instanceID . empty		5073044	0					
ANR	5073550	MemberAccess	vmStartRequest . instanceID		5073044	0					
ANR	5073551	Identifier	vmStartRequest		5073044	0					
ANR	5073552	Identifier	instanceID		5073044	1					
ANR	5073553	Identifier	empty		5073044	1					
ANR	5073554	ArgumentList			5073044	1					
ANR	5073555	CompoundStatement		84:48:3174:3174	5073044	1					
ANR	5073556	ExpressionStatement	"dprintf ( D_ALWAYS , ""Got result from endpoint that did not include an instance ID, failing.  Response follows.\\n"" )"	679:12:26572:26686	5073044	0	True				
ANR	5073557	CallExpression	"dprintf ( D_ALWAYS , ""Got result from endpoint that did not include an instance ID, failing.  Response follows.\\n"" )"		5073044	0					
ANR	5073558	Callee	dprintf		5073044	0					
ANR	5073559	Identifier	dprintf		5073044	0					
ANR	5073560	ArgumentList	D_ALWAYS		5073044	1					
ANR	5073561	Argument	D_ALWAYS		5073044	0					
ANR	5073562	Identifier	D_ALWAYS		5073044	0					
ANR	5073563	Argument	"""Got result from endpoint that did not include an instance ID, failing.  Response follows.\\n"""		5073044	1					
ANR	5073564	PrimaryExpression	"""Got result from endpoint that did not include an instance ID, failing.  Response follows.\\n"""		5073044	0					
ANR	5073565	ExpressionStatement	"dprintf ( D_ALWAYS , ""-- RESPONSE BEGINS --\\n"" )"	680:12:26700:26746	5073044	1	True				
ANR	5073566	CallExpression	"dprintf ( D_ALWAYS , ""-- RESPONSE BEGINS --\\n"" )"		5073044	0					
ANR	5073567	Callee	dprintf		5073044	0					
ANR	5073568	Identifier	dprintf		5073044	0					
ANR	5073569	ArgumentList	D_ALWAYS		5073044	1					
ANR	5073570	Argument	D_ALWAYS		5073044	0					
ANR	5073571	Identifier	D_ALWAYS		5073044	0					
ANR	5073572	Argument	"""-- RESPONSE BEGINS --\\n"""		5073044	1					
ANR	5073573	PrimaryExpression	"""-- RESPONSE BEGINS --\\n"""		5073044	0					
ANR	5073574	ExpressionStatement	"dprintf ( D_ALWAYS , vmStartRequest . resultString . c_str ( ) )"	681:12:26760:26816	5073044	2	True				
ANR	5073575	CallExpression	"dprintf ( D_ALWAYS , vmStartRequest . resultString . c_str ( ) )"		5073044	0					
ANR	5073576	Callee	dprintf		5073044	0					
ANR	5073577	Identifier	dprintf		5073044	0					
ANR	5073578	ArgumentList	D_ALWAYS		5073044	1					
ANR	5073579	Argument	D_ALWAYS		5073044	0					
ANR	5073580	Identifier	D_ALWAYS		5073044	0					
ANR	5073581	Argument	vmStartRequest . resultString . c_str ( )		5073044	1					
ANR	5073582	CallExpression	vmStartRequest . resultString . c_str ( )		5073044	0					
ANR	5073583	Callee	vmStartRequest . resultString . c_str		5073044	0					
ANR	5073584	MemberAccess	vmStartRequest . resultString . c_str		5073044	0					
ANR	5073585	MemberAccess	vmStartRequest . resultString		5073044	0					
ANR	5073586	Identifier	vmStartRequest		5073044	0					
ANR	5073587	Identifier	resultString		5073044	1					
ANR	5073588	Identifier	c_str		5073044	1					
ANR	5073589	ArgumentList			5073044	1					
ANR	5073590	ExpressionStatement	"dprintf ( D_ALWAYS , ""-- RESPONSE ENDS --\\n"" )"	682:12:26830:26874	5073044	3	True				
ANR	5073591	CallExpression	"dprintf ( D_ALWAYS , ""-- RESPONSE ENDS --\\n"" )"		5073044	0					
ANR	5073592	Callee	dprintf		5073044	0					
ANR	5073593	Identifier	dprintf		5073044	0					
ANR	5073594	ArgumentList	D_ALWAYS		5073044	1					
ANR	5073595	Argument	D_ALWAYS		5073044	0					
ANR	5073596	Identifier	D_ALWAYS		5073044	0					
ANR	5073597	Argument	"""-- RESPONSE ENDS --\\n"""		5073044	1					
ANR	5073598	PrimaryExpression	"""-- RESPONSE ENDS --\\n"""		5073044	0					
ANR	5073599	ExpressionStatement	"result_string = create_failure_result ( requestID , ""Could not find instance ID in response from server.  Check the EC2 GAHP log for details."" , ""E_NO_INSTANCE_ID"" )"	683:12:26888:27050	5073044	4	True				
ANR	5073600	AssignmentExpression	"result_string = create_failure_result ( requestID , ""Could not find instance ID in response from server.  Check the EC2 GAHP log for details."" , ""E_NO_INSTANCE_ID"" )"		5073044	0		=			
ANR	5073601	Identifier	result_string		5073044	0					
ANR	5073602	CallExpression	"create_failure_result ( requestID , ""Could not find instance ID in response from server.  Check the EC2 GAHP log for details."" , ""E_NO_INSTANCE_ID"" )"		5073044	1					
ANR	5073603	Callee	create_failure_result		5073044	0					
ANR	5073604	Identifier	create_failure_result		5073044	0					
ANR	5073605	ArgumentList	requestID		5073044	1					
ANR	5073606	Argument	requestID		5073044	0					
ANR	5073607	Identifier	requestID		5073044	0					
ANR	5073608	Argument	"""Could not find instance ID in response from server.  Check the EC2 GAHP log for details."""		5073044	1					
ANR	5073609	PrimaryExpression	"""Could not find instance ID in response from server.  Check the EC2 GAHP log for details."""		5073044	0					
ANR	5073610	Argument	"""E_NO_INSTANCE_ID"""		5073044	2					
ANR	5073611	PrimaryExpression	"""E_NO_INSTANCE_ID"""		5073044	0					
ANR	5073612	ElseStatement	else		5073044	0					
ANR	5073613	CompoundStatement		91:12:3697:3718	5073044	0					
ANR	5073614	IdentifierDeclStatement	StringList resultList ;	685:12:27081:27102	5073044	0	True				
ANR	5073615	IdentifierDecl	resultList		5073044	0					
ANR	5073616	IdentifierDeclType	StringList		5073044	0					
ANR	5073617	Identifier	resultList		5073044	1					
ANR	5073618	ExpressionStatement	resultList . append ( vmStartRequest . instanceID . c_str ( ) )	686:12:27116:27170	5073044	1	True				
ANR	5073619	CallExpression	resultList . append ( vmStartRequest . instanceID . c_str ( ) )		5073044	0					
ANR	5073620	Callee	resultList . append		5073044	0					
ANR	5073621	MemberAccess	resultList . append		5073044	0					
ANR	5073622	Identifier	resultList		5073044	0					
ANR	5073623	Identifier	append		5073044	1					
ANR	5073624	ArgumentList	vmStartRequest . instanceID . c_str ( )		5073044	1					
ANR	5073625	Argument	vmStartRequest . instanceID . c_str ( )		5073044	0					
ANR	5073626	CallExpression	vmStartRequest . instanceID . c_str ( )		5073044	0					
ANR	5073627	Callee	vmStartRequest . instanceID . c_str		5073044	0					
ANR	5073628	MemberAccess	vmStartRequest . instanceID . c_str		5073044	0					
ANR	5073629	MemberAccess	vmStartRequest . instanceID		5073044	0					
ANR	5073630	Identifier	vmStartRequest		5073044	0					
ANR	5073631	Identifier	instanceID		5073044	1					
ANR	5073632	Identifier	c_str		5073044	1					
ANR	5073633	ArgumentList			5073044	1					
ANR	5073634	ExpressionStatement	"result_string = create_success_result ( requestID , & resultList )"	687:12:27184:27248	5073044	2	True				
ANR	5073635	AssignmentExpression	"result_string = create_success_result ( requestID , & resultList )"		5073044	0		=			
ANR	5073636	Identifier	result_string		5073044	0					
ANR	5073637	CallExpression	"create_success_result ( requestID , & resultList )"		5073044	1					
ANR	5073638	Callee	create_success_result		5073044	0					
ANR	5073639	Identifier	create_success_result		5073044	0					
ANR	5073640	ArgumentList	requestID		5073044	1					
ANR	5073641	Argument	requestID		5073044	0					
ANR	5073642	Identifier	requestID		5073044	0					
ANR	5073643	Argument	& resultList		5073044	1					
ANR	5073644	UnaryOperationExpression	& resultList		5073044	0					
ANR	5073645	UnaryOperator	&		5073044	0					
ANR	5073646	Identifier	resultList		5073044	1					
ANR	5073647	ReturnStatement	return true ;	691:4:27271:27282	5073044	24	True				
ANR	5073648	Identifier	true		5073044	0					
ANR	5073649	ReturnType	bool		5073044	1					
ANR	5073650	Identifier	AmazonVMStart :: workerFunction		5073044	2					
ANR	5073651	ParameterList	"char * * argv , int argc , std :: string & result_string"		5073044	3					
ANR	5073652	Parameter	char * * argv	595:35:23332:23342	5073044	0	True				
ANR	5073653	ParameterType	char * *		5073044	0					
ANR	5073654	Identifier	argv		5073044	1					
ANR	5073655	Parameter	int argc	595:48:23345:23352	5073044	1	True				
ANR	5073656	ParameterType	int		5073044	0					
ANR	5073657	Identifier	argc		5073044	1					
ANR	5073658	Parameter	std :: string & result_string	595:58:23355:23380	5073044	2	True				
ANR	5073659	ParameterType	std :: string &		5073044	0					
ANR	5073660	Identifier	result_string		5073044	1					
ANR	5073661	CFGEntryNode	ENTRY		5073044		True				
ANR	5073662	CFGExitNode	EXIT		5073044		True				
ANR	5073663	Symbol	* argv		5073044						
ANR	5073664	Symbol	& requestID		5073044						
ANR	5073665	Symbol	vmStartRequest . errorCode . c_str		5073044						
ANR	5073666	Symbol	create_success_result		5073044						
ANR	5073667	Symbol	udFileContents		5073044						
ANR	5073668	Symbol	groupName . str		5073044						
ANR	5073669	Symbol	udFileName		5073044						
ANR	5073670	Symbol	result_string		5073044						
ANR	5073671	Symbol	vmStartRequest . serviceURL		5073044						
ANR	5073672	Symbol	buffer		5073044						
ANR	5073673	Symbol	strcasecmp		5073044						
ANR	5073674	Symbol	strcmp		5073044						
ANR	5073675	Symbol	vmStartRequest . accessKeyFile		5073044						
ANR	5073676	Symbol	vmStartRequest . secretKeyFile		5073044						
ANR	5073677	Symbol	* vmStartRequest		5073044						
ANR	5073678	Symbol	groupName		5073044						
ANR	5073679	Symbol	requestID		5073044						
ANR	5073680	Symbol	create_failure_result		5073044						
ANR	5073681	Symbol	* groupName . str		5073044						
ANR	5073682	Symbol	true		5073044						
ANR	5073683	Symbol	resultList		5073044						
ANR	5073684	Symbol	vmStartRequest . instanceID . c_str		5073044						
ANR	5073685	Symbol	vmStartRequest		5073044						
ANR	5073686	Symbol	vmStartRequest . resultString . c_str		5073044						
ANR	5073687	Symbol	argv		5073044						
ANR	5073688	Symbol	& resultList		5073044						
ANR	5073689	Symbol	buffer . length		5073044						
ANR	5073690	Symbol	vmStartRequest . instanceID . empty		5073044						
ANR	5073691	Symbol	vmStartRequest . instanceID		5073044						
ANR	5073692	Symbol	argc		5073044						
ANR	5073693	Symbol	buffer . c_str		5073044						
ANR	5073694	Symbol	vmStartRequest . errorCode		5073044						
ANR	5073695	Symbol	vmStartRequest . errorMessage . c_str		5073044						
ANR	5073696	Symbol	vmStartRequest . query_parameters		5073044						
ANR	5073697	Symbol	D_ALWAYS		5073044						
ANR	5073698	Symbol	false		5073044						
ANR	5073699	Symbol	i		5073044						
ANR	5073700	Symbol	verify_min_number_args		5073044						
ANR	5073701	Symbol	NULLSTRING		5073044						
ANR	5073702	Symbol	* vmStartRequest . query_parameters		5073044						
ANR	5073703	Symbol	vmStartRequest . errorMessage		5073044						
ANR	5073704	Symbol	udFileName . c_str		5073044						
ANR	5073705	Symbol	condor_base64_encode		5073044						
ANR	5073706	Symbol	* i		5073044						
ANR	5073707	Symbol	readShortFile		5073044						
ANR	5073708	Symbol	vmStartRequest . SendRequest		5073044						
ANR	5073709	Symbol	vmStartRequest . resultString		5073044						
ANR	5073710	Symbol	* groupName		5073044						
ANR	5073711	Symbol	base64Encoded		5073044						
ANR	5073712	Symbol	buffer . empty		5073044						
ANR	5073713	Function	AmazonVMStop :: AmazonVMStop	696:0:27367:27398							
ANR	5073714	FunctionDef	AmazonVMStop :: AmazonVMStop ()		5073713	0					
ANR	5073715	CompoundStatement		696:29:27396:27398	5073713	0					
ANR	5073716	Identifier	AmazonVMStop :: AmazonVMStop		5073713	1					
ANR	5073717	ParameterList			5073713	2					
ANR	5073718	CFGEntryNode	ENTRY		5073713		True				
ANR	5073719	CFGExitNode	EXIT		5073713		True				
ANR	5073720	Function	AmazonVMStop :: ~AmazonVMStop	698:0:27401:27433							
ANR	5073721	FunctionDef	AmazonVMStop :: ~AmazonVMStop ()		5073720	0					
ANR	5073722	CompoundStatement		698:30:27431:27433	5073720	0					
ANR	5073723	Identifier	AmazonVMStop :: ~AmazonVMStop		5073720	1					
ANR	5073724	ParameterList			5073720	2					
ANR	5073725	CFGEntryNode	ENTRY		5073720		True				
ANR	5073726	CFGExitNode	EXIT		5073720		True				
ANR	5073727	Function	AmazonVMStop :: workerFunction	701:0:27529:29112							
ANR	5073728	FunctionDef	"AmazonVMStop :: workerFunction (char * * argv , int argc , std :: string & result_string)"		5073727	0					
ANR	5073729	CompoundStatement		701:85:27614:29112	5073727	0					
ANR	5073730	ExpressionStatement	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_STOP"" ) == 0 )"	702:4:27620:27667	5073727	0	True				
ANR	5073731	CallExpression	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_STOP"" ) == 0 )"		5073727	0					
ANR	5073732	Callee	assert		5073727	0					
ANR	5073733	Identifier	assert		5073727	0					
ANR	5073734	ArgumentList	"strcmp ( argv [ 0 ] , ""EC2_VM_STOP"" ) == 0"		5073727	1					
ANR	5073735	Argument	"strcmp ( argv [ 0 ] , ""EC2_VM_STOP"" ) == 0"		5073727	0					
ANR	5073736	EqualityExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_STOP"" ) == 0"		5073727	0		==			
ANR	5073737	CallExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_STOP"" )"		5073727	0					
ANR	5073738	Callee	strcmp		5073727	0					
ANR	5073739	Identifier	strcmp		5073727	0					
ANR	5073740	ArgumentList	argv [ 0 ]		5073727	1					
ANR	5073741	Argument	argv [ 0 ]		5073727	0					
ANR	5073742	ArrayIndexing	argv [ 0 ]		5073727	0					
ANR	5073743	Identifier	argv		5073727	0					
ANR	5073744	PrimaryExpression	0		5073727	1					
ANR	5073745	Argument	"""EC2_VM_STOP"""		5073727	1					
ANR	5073746	PrimaryExpression	"""EC2_VM_STOP"""		5073727	0					
ANR	5073747	PrimaryExpression	0		5073727	1					
ANR	5073748	IdentifierDeclStatement	int requestID ;	707:4:27860:27873	5073727	1	True				
ANR	5073749	IdentifierDecl	requestID		5073727	0					
ANR	5073750	IdentifierDeclType	int		5073727	0					
ANR	5073751	Identifier	requestID		5073727	1					
ANR	5073752	ExpressionStatement	"get_int ( argv [ 1 ] , & requestID )"	708:4:27879:27910	5073727	2	True				
ANR	5073753	CallExpression	"get_int ( argv [ 1 ] , & requestID )"		5073727	0					
ANR	5073754	Callee	get_int		5073727	0					
ANR	5073755	Identifier	get_int		5073727	0					
ANR	5073756	ArgumentList	argv [ 1 ]		5073727	1					
ANR	5073757	Argument	argv [ 1 ]		5073727	0					
ANR	5073758	ArrayIndexing	argv [ 1 ]		5073727	0					
ANR	5073759	Identifier	argv		5073727	0					
ANR	5073760	PrimaryExpression	1		5073727	1					
ANR	5073761	Argument	& requestID		5073727	1					
ANR	5073762	UnaryOperationExpression	& requestID		5073727	0					
ANR	5073763	UnaryOperator	&		5073727	0					
ANR	5073764	Identifier	requestID		5073727	1					
ANR	5073765	IfStatement	"if ( ! verify_min_number_args ( argc , 6 ) )"		5073727	3					
ANR	5073766	Condition	"! verify_min_number_args ( argc , 6 )"	710:8:27925:27959	5073727	0	True				
ANR	5073767	UnaryOperationExpression	"! verify_min_number_args ( argc , 6 )"		5073727	0					
ANR	5073768	UnaryOperator	!		5073727	0					
ANR	5073769	CallExpression	"verify_min_number_args ( argc , 6 )"		5073727	1					
ANR	5073770	Callee	verify_min_number_args		5073727	0					
ANR	5073771	Identifier	verify_min_number_args		5073727	0					
ANR	5073772	ArgumentList	argc		5073727	1					
ANR	5073773	Argument	argc		5073727	0					
ANR	5073774	Identifier	argc		5073727	0					
ANR	5073775	Argument	6		5073727	1					
ANR	5073776	PrimaryExpression	6		5073727	0					
ANR	5073777	CompoundStatement		10:46:348:348	5073727	1					
ANR	5073778	ExpressionStatement	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"	711:8:27973:28048	5073727	0	True				
ANR	5073779	AssignmentExpression	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		5073727	0		=			
ANR	5073780	Identifier	result_string		5073727	0					
ANR	5073781	CallExpression	"create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		5073727	1					
ANR	5073782	Callee	create_failure_result		5073727	0					
ANR	5073783	Identifier	create_failure_result		5073727	0					
ANR	5073784	ArgumentList	requestID		5073727	1					
ANR	5073785	Argument	requestID		5073727	0					
ANR	5073786	Identifier	requestID		5073727	0					
ANR	5073787	Argument	"""Wrong_Argument_Number"""		5073727	1					
ANR	5073788	PrimaryExpression	"""Wrong_Argument_Number"""		5073727	0					
ANR	5073789	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 6 , argv [ 0 ] )"	712:8:28058:28170	5073727	1	True				
ANR	5073790	CallExpression	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 6 , argv [ 0 ] )"		5073727	0					
ANR	5073791	Callee	dprintf		5073727	0					
ANR	5073792	Identifier	dprintf		5073727	0					
ANR	5073793	ArgumentList	D_ALWAYS		5073727	1					
ANR	5073794	Argument	D_ALWAYS		5073727	0					
ANR	5073795	Identifier	D_ALWAYS		5073727	0					
ANR	5073796	Argument	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		5073727	1					
ANR	5073797	PrimaryExpression	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		5073727	0					
ANR	5073798	Argument	argc		5073727	2					
ANR	5073799	Identifier	argc		5073727	0					
ANR	5073800	Argument	6		5073727	3					
ANR	5073801	PrimaryExpression	6		5073727	0					
ANR	5073802	Argument	argv [ 0 ]		5073727	4					
ANR	5073803	ArrayIndexing	argv [ 0 ]		5073727	0					
ANR	5073804	Identifier	argv		5073727	0					
ANR	5073805	PrimaryExpression	0		5073727	1					
ANR	5073806	ReturnStatement	return false ;	714:8:28180:28192	5073727	2	True				
ANR	5073807	Identifier	false		5073727	0					
ANR	5073808	IdentifierDeclStatement	AmazonVMStop terminationRequest ;	718:4:28254:28285	5073727	4	True				
ANR	5073809	IdentifierDecl	terminationRequest		5073727	0					
ANR	5073810	IdentifierDeclType	AmazonVMStop		5073727	0					
ANR	5073811	Identifier	terminationRequest		5073727	1					
ANR	5073812	ExpressionStatement	terminationRequest . serviceURL = argv [ 2 ]	719:4:28291:28330	5073727	5	True				
ANR	5073813	AssignmentExpression	terminationRequest . serviceURL = argv [ 2 ]		5073727	0		=			
ANR	5073814	MemberAccess	terminationRequest . serviceURL		5073727	0					
ANR	5073815	Identifier	terminationRequest		5073727	0					
ANR	5073816	Identifier	serviceURL		5073727	1					
ANR	5073817	ArrayIndexing	argv [ 2 ]		5073727	1					
ANR	5073818	Identifier	argv		5073727	0					
ANR	5073819	PrimaryExpression	2		5073727	1					
ANR	5073820	ExpressionStatement	terminationRequest . accessKeyFile = argv [ 3 ]	720:4:28336:28378	5073727	6	True				
ANR	5073821	AssignmentExpression	terminationRequest . accessKeyFile = argv [ 3 ]		5073727	0		=			
ANR	5073822	MemberAccess	terminationRequest . accessKeyFile		5073727	0					
ANR	5073823	Identifier	terminationRequest		5073727	0					
ANR	5073824	Identifier	accessKeyFile		5073727	1					
ANR	5073825	ArrayIndexing	argv [ 3 ]		5073727	1					
ANR	5073826	Identifier	argv		5073727	0					
ANR	5073827	PrimaryExpression	3		5073727	1					
ANR	5073828	ExpressionStatement	terminationRequest . secretKeyFile = argv [ 4 ]	721:4:28384:28426	5073727	7	True				
ANR	5073829	AssignmentExpression	terminationRequest . secretKeyFile = argv [ 4 ]		5073727	0		=			
ANR	5073830	MemberAccess	terminationRequest . secretKeyFile		5073727	0					
ANR	5073831	Identifier	terminationRequest		5073727	0					
ANR	5073832	Identifier	secretKeyFile		5073727	1					
ANR	5073833	ArrayIndexing	argv [ 4 ]		5073727	1					
ANR	5073834	Identifier	argv		5073727	0					
ANR	5073835	PrimaryExpression	4		5073727	1					
ANR	5073836	ExpressionStatement	"terminationRequest . query_parameters [ ""Action"" ] = ""TerminateInstances"""	722:4:28432:28502	5073727	8	True				
ANR	5073837	AssignmentExpression	"terminationRequest . query_parameters [ ""Action"" ] = ""TerminateInstances"""		5073727	0		=			
ANR	5073838	ArrayIndexing	"terminationRequest . query_parameters [ ""Action"" ]"		5073727	0					
ANR	5073839	MemberAccess	terminationRequest . query_parameters		5073727	0					
ANR	5073840	Identifier	terminationRequest		5073727	0					
ANR	5073841	Identifier	query_parameters		5073727	1					
ANR	5073842	PrimaryExpression	"""Action"""		5073727	1					
ANR	5073843	PrimaryExpression	"""TerminateInstances"""		5073727	1					
ANR	5073844	ExpressionStatement	"terminationRequest . query_parameters [ ""InstanceId.1"" ] = argv [ 5 ]"	723:4:28508:28571	5073727	9	True				
ANR	5073845	AssignmentExpression	"terminationRequest . query_parameters [ ""InstanceId.1"" ] = argv [ 5 ]"		5073727	0		=			
ANR	5073846	ArrayIndexing	"terminationRequest . query_parameters [ ""InstanceId.1"" ]"		5073727	0					
ANR	5073847	MemberAccess	terminationRequest . query_parameters		5073727	0					
ANR	5073848	Identifier	terminationRequest		5073727	0					
ANR	5073849	Identifier	query_parameters		5073727	1					
ANR	5073850	PrimaryExpression	"""InstanceId.1"""		5073727	1					
ANR	5073851	ArrayIndexing	argv [ 5 ]		5073727	1					
ANR	5073852	Identifier	argv		5073727	0					
ANR	5073853	PrimaryExpression	5		5073727	1					
ANR	5073854	IfStatement	if ( ! terminationRequest . SendRequest ( ) )		5073727	10					
ANR	5073855	Condition	! terminationRequest . SendRequest ( )	726:8:28607:28640	5073727	0	True				
ANR	5073856	UnaryOperationExpression	! terminationRequest . SendRequest ( )		5073727	0					
ANR	5073857	UnaryOperator	!		5073727	0					
ANR	5073858	CallExpression	terminationRequest . SendRequest ( )		5073727	1					
ANR	5073859	Callee	terminationRequest . SendRequest		5073727	0					
ANR	5073860	MemberAccess	terminationRequest . SendRequest		5073727	0					
ANR	5073861	Identifier	terminationRequest		5073727	0					
ANR	5073862	Identifier	SendRequest		5073727	1					
ANR	5073863	ArgumentList			5073727	1					
ANR	5073864	CompoundStatement		26:45:1029:1029	5073727	1					
ANR	5073865	ExpressionStatement	"result_string = create_failure_result ( requestID , terminationRequest . errorMessage . c_str ( ) , terminationRequest . errorCode . c_str ( ) )"	727:8:28654:28807	5073727	0	True				
ANR	5073866	AssignmentExpression	"result_string = create_failure_result ( requestID , terminationRequest . errorMessage . c_str ( ) , terminationRequest . errorCode . c_str ( ) )"		5073727	0		=			
ANR	5073867	Identifier	result_string		5073727	0					
ANR	5073868	CallExpression	"create_failure_result ( requestID , terminationRequest . errorMessage . c_str ( ) , terminationRequest . errorCode . c_str ( ) )"		5073727	1					
ANR	5073869	Callee	create_failure_result		5073727	0					
ANR	5073870	Identifier	create_failure_result		5073727	0					
ANR	5073871	ArgumentList	requestID		5073727	1					
ANR	5073872	Argument	requestID		5073727	0					
ANR	5073873	Identifier	requestID		5073727	0					
ANR	5073874	Argument	terminationRequest . errorMessage . c_str ( )		5073727	1					
ANR	5073875	CallExpression	terminationRequest . errorMessage . c_str ( )		5073727	0					
ANR	5073876	Callee	terminationRequest . errorMessage . c_str		5073727	0					
ANR	5073877	MemberAccess	terminationRequest . errorMessage . c_str		5073727	0					
ANR	5073878	MemberAccess	terminationRequest . errorMessage		5073727	0					
ANR	5073879	Identifier	terminationRequest		5073727	0					
ANR	5073880	Identifier	errorMessage		5073727	1					
ANR	5073881	Identifier	c_str		5073727	1					
ANR	5073882	ArgumentList			5073727	1					
ANR	5073883	Argument	terminationRequest . errorCode . c_str ( )		5073727	2					
ANR	5073884	CallExpression	terminationRequest . errorCode . c_str ( )		5073727	0					
ANR	5073885	Callee	terminationRequest . errorCode . c_str		5073727	0					
ANR	5073886	MemberAccess	terminationRequest . errorCode . c_str		5073727	0					
ANR	5073887	MemberAccess	terminationRequest . errorCode		5073727	0					
ANR	5073888	Identifier	terminationRequest		5073727	0					
ANR	5073889	Identifier	errorCode		5073727	1					
ANR	5073890	Identifier	c_str		5073727	1					
ANR	5073891	ArgumentList			5073727	1					
ANR	5073892	ElseStatement	else		5073727	0					
ANR	5073893	CompoundStatement		30:11:1205:1205	5073727	0					
ANR	5073894	ExpressionStatement	"result_string = create_success_result ( requestID , NULL )"	734:8:29030:29086	5073727	0	True				
ANR	5073895	AssignmentExpression	"result_string = create_success_result ( requestID , NULL )"		5073727	0		=			
ANR	5073896	Identifier	result_string		5073727	0					
ANR	5073897	CallExpression	"create_success_result ( requestID , NULL )"		5073727	1					
ANR	5073898	Callee	create_success_result		5073727	0					
ANR	5073899	Identifier	create_success_result		5073727	0					
ANR	5073900	ArgumentList	requestID		5073727	1					
ANR	5073901	Argument	requestID		5073727	0					
ANR	5073902	Identifier	requestID		5073727	0					
ANR	5073903	Argument	NULL		5073727	1					
ANR	5073904	Identifier	NULL		5073727	0					
ANR	5073905	ReturnStatement	return true ;	737:4:29099:29110	5073727	11	True				
ANR	5073906	Identifier	true		5073727	0					
ANR	5073907	ReturnType	bool		5073727	1					
ANR	5073908	Identifier	AmazonVMStop :: workerFunction		5073727	2					
ANR	5073909	ParameterList	"char * * argv , int argc , std :: string & result_string"		5073727	3					
ANR	5073910	Parameter	char * * argv	701:34:27563:27573	5073727	0	True				
ANR	5073911	ParameterType	char * *		5073727	0					
ANR	5073912	Identifier	argv		5073727	1					
ANR	5073913	Parameter	int argc	701:47:27576:27583	5073727	1	True				
ANR	5073914	ParameterType	int		5073727	0					
ANR	5073915	Identifier	argc		5073727	1					
ANR	5073916	Parameter	std :: string & result_string	701:57:27586:27611	5073727	2	True				
ANR	5073917	ParameterType	std :: string &		5073727	0					
ANR	5073918	Identifier	result_string		5073727	1					
ANR	5073919	CFGEntryNode	ENTRY		5073727		True				
ANR	5073920	CFGExitNode	EXIT		5073727		True				
ANR	5073921	Symbol	* terminationRequest		5073727						
ANR	5073922	Symbol	* argv		5073727						
ANR	5073923	Symbol	argv		5073727						
ANR	5073924	Symbol	& requestID		5073727						
ANR	5073925	Symbol	create_success_result		5073727						
ANR	5073926	Symbol	terminationRequest . SendRequest		5073727						
ANR	5073927	Symbol	terminationRequest . errorMessage . c_str		5073727						
ANR	5073928	Symbol	terminationRequest . errorCode . c_str		5073727						
ANR	5073929	Symbol	terminationRequest . errorCode		5073727						
ANR	5073930	Symbol	result_string		5073727						
ANR	5073931	Symbol	argc		5073727						
ANR	5073932	Symbol	strcmp		5073727						
ANR	5073933	Symbol	terminationRequest . secretKeyFile		5073727						
ANR	5073934	Symbol	terminationRequest		5073727						
ANR	5073935	Symbol	NULL		5073727						
ANR	5073936	Symbol	terminationRequest . serviceURL		5073727						
ANR	5073937	Symbol	D_ALWAYS		5073727						
ANR	5073938	Symbol	false		5073727						
ANR	5073939	Symbol	verify_min_number_args		5073727						
ANR	5073940	Symbol	requestID		5073727						
ANR	5073941	Symbol	create_failure_result		5073727						
ANR	5073942	Symbol	terminationRequest . errorMessage		5073727						
ANR	5073943	Symbol	true		5073727						
ANR	5073944	Symbol	terminationRequest . query_parameters		5073727						
ANR	5073945	Symbol	* terminationRequest . query_parameters		5073727						
ANR	5073946	Symbol	terminationRequest . accessKeyFile		5073727						
ANR	5073947	Function	AmazonVMStatus :: AmazonVMStatus	742:0:29195:29230							
ANR	5073948	FunctionDef	AmazonVMStatus :: AmazonVMStatus ()		5073947	0					
ANR	5073949	CompoundStatement		742:33:29228:29230	5073947	0					
ANR	5073950	Identifier	AmazonVMStatus :: AmazonVMStatus		5073947	1					
ANR	5073951	ParameterList			5073947	2					
ANR	5073952	CFGEntryNode	ENTRY		5073947		True				
ANR	5073953	CFGExitNode	EXIT		5073947		True				
ANR	5073954	Function	AmazonVMStatus :: ~AmazonVMStatus	744:0:29233:29269							
ANR	5073955	FunctionDef	AmazonVMStatus :: ~AmazonVMStatus ()		5073954	0					
ANR	5073956	CompoundStatement		744:34:29267:29269	5073954	0					
ANR	5073957	Identifier	AmazonVMStatus :: ~AmazonVMStatus		5073954	1					
ANR	5073958	ParameterList			5073954	2					
ANR	5073959	CFGEntryNode	ENTRY		5073954		True				
ANR	5073960	CFGExitNode	EXIT		5073954		True				
ANR	5073961	Function	nullStringIfEmpty	746:0:29272:29410							
ANR	5073962	FunctionDef	nullStringIfEmpty (const std :: string & str)		5073961	0					
ANR	5073963	CompoundStatement		746:58:29330:29410	5073961	0					
ANR	5073964	IfStatement	if ( str . empty ( ) )		5073961	0					
ANR	5073965	Condition	str . empty ( )	747:8:29340:29350	5073961	0	True				
ANR	5073966	CallExpression	str . empty ( )		5073961	0					
ANR	5073967	Callee	str . empty		5073961	0					
ANR	5073968	MemberAccess	str . empty		5073961	0					
ANR	5073969	Identifier	str		5073961	0					
ANR	5073970	Identifier	empty		5073961	1					
ANR	5073971	ArgumentList			5073961	1					
ANR	5073972	CompoundStatement		2:22:23:23	5073961	1					
ANR	5073973	ReturnStatement	return NULLSTRING ;	747:24:29356:29373	5073961	0	True				
ANR	5073974	Identifier	NULLSTRING		5073961	0					
ANR	5073975	ElseStatement	else		5073961	0					
ANR	5073976	CompoundStatement		3:9:55:55	5073961	0					
ANR	5073977	ReturnStatement	return str . c_str ( ) ;	748:11:29388:29406	5073961	0	True				
ANR	5073978	CallExpression	str . c_str ( )		5073961	0					
ANR	5073979	Callee	str . c_str		5073961	0					
ANR	5073980	MemberAccess	str . c_str		5073961	0					
ANR	5073981	Identifier	str		5073961	0					
ANR	5073982	Identifier	c_str		5073961	1					
ANR	5073983	ArgumentList			5073961	1					
ANR	5073984	ReturnType	const char *		5073961	1					
ANR	5073985	Identifier	nullStringIfEmpty		5073961	2					
ANR	5073986	ParameterList	const std :: string & str		5073961	3					
ANR	5073987	Parameter	const std :: string & str	746:32:29304:29326	5073961	0	True				
ANR	5073988	ParameterType	const std :: string &		5073961	0					
ANR	5073989	Identifier	str		5073961	1					
ANR	5073990	CFGEntryNode	ENTRY		5073961		True				
ANR	5073991	CFGExitNode	EXIT		5073961		True				
ANR	5073992	Symbol	str		5073961						
ANR	5073993	Symbol	str . empty		5073961						
ANR	5073994	Symbol	str . c_str		5073961						
ANR	5073995	Symbol	NULLSTRING		5073961						
ANR	5073996	Function	AmazonVMStatus :: workerFunction	752:0:29512:32244							
ANR	5073997	FunctionDef	"AmazonVMStatus :: workerFunction (char * * argv , int argc , std :: string & result_string)"		5073996	0					
ANR	5073998	CompoundStatement		752:87:29599:32244	5073996	0					
ANR	5073999	ExpressionStatement	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_STATUS"" ) == 0 )"	753:4:29605:29654	5073996	0	True				
ANR	5074000	CallExpression	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_STATUS"" ) == 0 )"		5073996	0					
ANR	5074001	Callee	assert		5073996	0					
ANR	5074002	Identifier	assert		5073996	0					
ANR	5074003	ArgumentList	"strcmp ( argv [ 0 ] , ""EC2_VM_STATUS"" ) == 0"		5073996	1					
ANR	5074004	Argument	"strcmp ( argv [ 0 ] , ""EC2_VM_STATUS"" ) == 0"		5073996	0					
ANR	5074005	EqualityExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_STATUS"" ) == 0"		5073996	0		==			
ANR	5074006	CallExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_STATUS"" )"		5073996	0					
ANR	5074007	Callee	strcmp		5073996	0					
ANR	5074008	Identifier	strcmp		5073996	0					
ANR	5074009	ArgumentList	argv [ 0 ]		5073996	1					
ANR	5074010	Argument	argv [ 0 ]		5073996	0					
ANR	5074011	ArrayIndexing	argv [ 0 ]		5073996	0					
ANR	5074012	Identifier	argv		5073996	0					
ANR	5074013	PrimaryExpression	0		5073996	1					
ANR	5074014	Argument	"""EC2_VM_STATUS"""		5073996	1					
ANR	5074015	PrimaryExpression	"""EC2_VM_STATUS"""		5073996	0					
ANR	5074016	PrimaryExpression	0		5073996	1					
ANR	5074017	IdentifierDeclStatement	int requestID ;	758:4:29845:29858	5073996	1	True				
ANR	5074018	IdentifierDecl	requestID		5073996	0					
ANR	5074019	IdentifierDeclType	int		5073996	0					
ANR	5074020	Identifier	requestID		5073996	1					
ANR	5074021	ExpressionStatement	"get_int ( argv [ 1 ] , & requestID )"	759:4:29864:29895	5073996	2	True				
ANR	5074022	CallExpression	"get_int ( argv [ 1 ] , & requestID )"		5073996	0					
ANR	5074023	Callee	get_int		5073996	0					
ANR	5074024	Identifier	get_int		5073996	0					
ANR	5074025	ArgumentList	argv [ 1 ]		5073996	1					
ANR	5074026	Argument	argv [ 1 ]		5073996	0					
ANR	5074027	ArrayIndexing	argv [ 1 ]		5073996	0					
ANR	5074028	Identifier	argv		5073996	0					
ANR	5074029	PrimaryExpression	1		5073996	1					
ANR	5074030	Argument	& requestID		5073996	1					
ANR	5074031	UnaryOperationExpression	& requestID		5073996	0					
ANR	5074032	UnaryOperator	&		5073996	0					
ANR	5074033	Identifier	requestID		5073996	1					
ANR	5074034	IfStatement	"if ( ! verify_min_number_args ( argc , 6 ) )"		5073996	3					
ANR	5074035	Condition	"! verify_min_number_args ( argc , 6 )"	761:8:29910:29944	5073996	0	True				
ANR	5074036	UnaryOperationExpression	"! verify_min_number_args ( argc , 6 )"		5073996	0					
ANR	5074037	UnaryOperator	!		5073996	0					
ANR	5074038	CallExpression	"verify_min_number_args ( argc , 6 )"		5073996	1					
ANR	5074039	Callee	verify_min_number_args		5073996	0					
ANR	5074040	Identifier	verify_min_number_args		5073996	0					
ANR	5074041	ArgumentList	argc		5073996	1					
ANR	5074042	Argument	argc		5073996	0					
ANR	5074043	Identifier	argc		5073996	0					
ANR	5074044	Argument	6		5073996	1					
ANR	5074045	PrimaryExpression	6		5073996	0					
ANR	5074046	CompoundStatement		10:46:348:348	5073996	1					
ANR	5074047	ExpressionStatement	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"	762:8:29958:30033	5073996	0	True				
ANR	5074048	AssignmentExpression	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		5073996	0		=			
ANR	5074049	Identifier	result_string		5073996	0					
ANR	5074050	CallExpression	"create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		5073996	1					
ANR	5074051	Callee	create_failure_result		5073996	0					
ANR	5074052	Identifier	create_failure_result		5073996	0					
ANR	5074053	ArgumentList	requestID		5073996	1					
ANR	5074054	Argument	requestID		5073996	0					
ANR	5074055	Identifier	requestID		5073996	0					
ANR	5074056	Argument	"""Wrong_Argument_Number"""		5073996	1					
ANR	5074057	PrimaryExpression	"""Wrong_Argument_Number"""		5073996	0					
ANR	5074058	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 6 , argv [ 0 ] )"	763:8:30043:30155	5073996	1	True				
ANR	5074059	CallExpression	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 6 , argv [ 0 ] )"		5073996	0					
ANR	5074060	Callee	dprintf		5073996	0					
ANR	5074061	Identifier	dprintf		5073996	0					
ANR	5074062	ArgumentList	D_ALWAYS		5073996	1					
ANR	5074063	Argument	D_ALWAYS		5073996	0					
ANR	5074064	Identifier	D_ALWAYS		5073996	0					
ANR	5074065	Argument	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		5073996	1					
ANR	5074066	PrimaryExpression	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		5073996	0					
ANR	5074067	Argument	argc		5073996	2					
ANR	5074068	Identifier	argc		5073996	0					
ANR	5074069	Argument	6		5073996	3					
ANR	5074070	PrimaryExpression	6		5073996	0					
ANR	5074071	Argument	argv [ 0 ]		5073996	4					
ANR	5074072	ArrayIndexing	argv [ 0 ]		5073996	0					
ANR	5074073	Identifier	argv		5073996	0					
ANR	5074074	PrimaryExpression	0		5073996	1					
ANR	5074075	ReturnStatement	return false ;	765:8:30165:30177	5073996	2	True				
ANR	5074076	Identifier	false		5073996	0					
ANR	5074077	IdentifierDeclStatement	AmazonVMStatus sRequest ;	769:4:30239:30262	5073996	4	True				
ANR	5074078	IdentifierDecl	sRequest		5073996	0					
ANR	5074079	IdentifierDeclType	AmazonVMStatus		5073996	0					
ANR	5074080	Identifier	sRequest		5073996	1					
ANR	5074081	ExpressionStatement	sRequest . serviceURL = argv [ 2 ]	770:4:30268:30297	5073996	5	True				
ANR	5074082	AssignmentExpression	sRequest . serviceURL = argv [ 2 ]		5073996	0		=			
ANR	5074083	MemberAccess	sRequest . serviceURL		5073996	0					
ANR	5074084	Identifier	sRequest		5073996	0					
ANR	5074085	Identifier	serviceURL		5073996	1					
ANR	5074086	ArrayIndexing	argv [ 2 ]		5073996	1					
ANR	5074087	Identifier	argv		5073996	0					
ANR	5074088	PrimaryExpression	2		5073996	1					
ANR	5074089	ExpressionStatement	sRequest . accessKeyFile = argv [ 3 ]	771:4:30303:30335	5073996	6	True				
ANR	5074090	AssignmentExpression	sRequest . accessKeyFile = argv [ 3 ]		5073996	0		=			
ANR	5074091	MemberAccess	sRequest . accessKeyFile		5073996	0					
ANR	5074092	Identifier	sRequest		5073996	0					
ANR	5074093	Identifier	accessKeyFile		5073996	1					
ANR	5074094	ArrayIndexing	argv [ 3 ]		5073996	1					
ANR	5074095	Identifier	argv		5073996	0					
ANR	5074096	PrimaryExpression	3		5073996	1					
ANR	5074097	ExpressionStatement	sRequest . secretKeyFile = argv [ 4 ]	772:4:30341:30373	5073996	7	True				
ANR	5074098	AssignmentExpression	sRequest . secretKeyFile = argv [ 4 ]		5073996	0		=			
ANR	5074099	MemberAccess	sRequest . secretKeyFile		5073996	0					
ANR	5074100	Identifier	sRequest		5073996	0					
ANR	5074101	Identifier	secretKeyFile		5073996	1					
ANR	5074102	ArrayIndexing	argv [ 4 ]		5073996	1					
ANR	5074103	Identifier	argv		5073996	0					
ANR	5074104	PrimaryExpression	4		5073996	1					
ANR	5074105	ExpressionStatement	"sRequest . query_parameters [ ""Action"" ] = ""DescribeInstances"""	773:4:30379:30438	5073996	8	True				
ANR	5074106	AssignmentExpression	"sRequest . query_parameters [ ""Action"" ] = ""DescribeInstances"""		5073996	0		=			
ANR	5074107	ArrayIndexing	"sRequest . query_parameters [ ""Action"" ]"		5073996	0					
ANR	5074108	MemberAccess	sRequest . query_parameters		5073996	0					
ANR	5074109	Identifier	sRequest		5073996	0					
ANR	5074110	Identifier	query_parameters		5073996	1					
ANR	5074111	PrimaryExpression	"""Action"""		5073996	1					
ANR	5074112	PrimaryExpression	"""DescribeInstances"""		5073996	1					
ANR	5074113	IdentifierDeclStatement	std :: string instanceID = argv [ 5 ] ;	776:4:30570:30602	5073996	9	True				
ANR	5074114	IdentifierDecl	instanceID = argv [ 5 ]		5073996	0					
ANR	5074115	IdentifierDeclType	std :: string		5073996	0					
ANR	5074116	Identifier	instanceID		5073996	1					
ANR	5074117	AssignmentExpression	instanceID = argv [ 5 ]		5073996	2		=			
ANR	5074118	Identifier	instanceID		5073996	0					
ANR	5074119	ArrayIndexing	argv [ 5 ]		5073996	1					
ANR	5074120	Identifier	argv		5073996	0					
ANR	5074121	PrimaryExpression	5		5073996	1					
ANR	5074122	IfStatement	if ( ! sRequest . SendRequest ( ) )		5073996	10					
ANR	5074123	Condition	! sRequest . SendRequest ( )	779:8:30642:30665	5073996	0	True				
ANR	5074124	UnaryOperationExpression	! sRequest . SendRequest ( )		5073996	0					
ANR	5074125	UnaryOperator	!		5073996	0					
ANR	5074126	CallExpression	sRequest . SendRequest ( )		5073996	1					
ANR	5074127	Callee	sRequest . SendRequest		5073996	0					
ANR	5074128	MemberAccess	sRequest . SendRequest		5073996	0					
ANR	5074129	Identifier	sRequest		5073996	0					
ANR	5074130	Identifier	SendRequest		5073996	1					
ANR	5074131	ArgumentList			5073996	1					
ANR	5074132	CompoundStatement		28:35:1069:1069	5073996	1					
ANR	5074133	ExpressionStatement	"result_string = create_failure_result ( requestID , sRequest . errorMessage . c_str ( ) , sRequest . errorCode . c_str ( ) )"	780:8:30679:30812	5073996	0	True				
ANR	5074134	AssignmentExpression	"result_string = create_failure_result ( requestID , sRequest . errorMessage . c_str ( ) , sRequest . errorCode . c_str ( ) )"		5073996	0		=			
ANR	5074135	Identifier	result_string		5073996	0					
ANR	5074136	CallExpression	"create_failure_result ( requestID , sRequest . errorMessage . c_str ( ) , sRequest . errorCode . c_str ( ) )"		5073996	1					
ANR	5074137	Callee	create_failure_result		5073996	0					
ANR	5074138	Identifier	create_failure_result		5073996	0					
ANR	5074139	ArgumentList	requestID		5073996	1					
ANR	5074140	Argument	requestID		5073996	0					
ANR	5074141	Identifier	requestID		5073996	0					
ANR	5074142	Argument	sRequest . errorMessage . c_str ( )		5073996	1					
ANR	5074143	CallExpression	sRequest . errorMessage . c_str ( )		5073996	0					
ANR	5074144	Callee	sRequest . errorMessage . c_str		5073996	0					
ANR	5074145	MemberAccess	sRequest . errorMessage . c_str		5073996	0					
ANR	5074146	MemberAccess	sRequest . errorMessage		5073996	0					
ANR	5074147	Identifier	sRequest		5073996	0					
ANR	5074148	Identifier	errorMessage		5073996	1					
ANR	5074149	Identifier	c_str		5073996	1					
ANR	5074150	ArgumentList			5073996	1					
ANR	5074151	Argument	sRequest . errorCode . c_str ( )		5073996	2					
ANR	5074152	CallExpression	sRequest . errorCode . c_str ( )		5073996	0					
ANR	5074153	Callee	sRequest . errorCode . c_str		5073996	0					
ANR	5074154	MemberAccess	sRequest . errorCode . c_str		5073996	0					
ANR	5074155	MemberAccess	sRequest . errorCode		5073996	0					
ANR	5074156	Identifier	sRequest		5073996	0					
ANR	5074157	Identifier	errorCode		5073996	1					
ANR	5074158	Identifier	c_str		5073996	1					
ANR	5074159	ArgumentList			5073996	1					
ANR	5074160	ElseStatement	else		5073996	0					
ANR	5074161	CompoundStatement		32:11:1225:1225	5073996	0					
ANR	5074162	IfStatement	if ( sRequest . results . size ( ) == 0 )		5073996	0					
ANR	5074163	Condition	sRequest . results . size ( ) == 0	784:12:30839:30866	5073996	0	True				
ANR	5074164	EqualityExpression	sRequest . results . size ( ) == 0		5073996	0		==			
ANR	5074165	CallExpression	sRequest . results . size ( )		5073996	0					
ANR	5074166	Callee	sRequest . results . size		5073996	0					
ANR	5074167	MemberAccess	sRequest . results . size		5073996	0					
ANR	5074168	MemberAccess	sRequest . results		5073996	0					
ANR	5074169	Identifier	sRequest		5073996	0					
ANR	5074170	Identifier	results		5073996	1					
ANR	5074171	Identifier	size		5073996	1					
ANR	5074172	ArgumentList			5073996	1					
ANR	5074173	PrimaryExpression	0		5073996	1					
ANR	5074174	CompoundStatement		33:43:1270:1270	5073996	1					
ANR	5074175	ExpressionStatement	"result_string = create_success_result ( requestID , NULL )"	785:12:30884:30940	5073996	0	True				
ANR	5074176	AssignmentExpression	"result_string = create_success_result ( requestID , NULL )"		5073996	0		=			
ANR	5074177	Identifier	result_string		5073996	0					
ANR	5074178	CallExpression	"create_success_result ( requestID , NULL )"		5073996	1					
ANR	5074179	Callee	create_success_result		5073996	0					
ANR	5074180	Identifier	create_success_result		5073996	0					
ANR	5074181	ArgumentList	requestID		5073996	1					
ANR	5074182	Argument	requestID		5073996	0					
ANR	5074183	Identifier	requestID		5073996	0					
ANR	5074184	Argument	NULL		5073996	1					
ANR	5074185	Identifier	NULL		5073996	0					
ANR	5074186	ElseStatement	else		5073996	0					
ANR	5074187	CompoundStatement		36:12:1371:1392	5073996	0					
ANR	5074188	IdentifierDeclStatement	StringList resultList ;	787:12:30971:30992	5073996	0	True				
ANR	5074189	IdentifierDecl	resultList		5073996	0					
ANR	5074190	IdentifierDeclType	StringList		5073996	0					
ANR	5074191	Identifier	resultList		5073996	1					
ANR	5074192	ForStatement	for ( unsigned i = 0 ; i < sRequest . results . size ( ) ; ++ i )		5073996	1					
ANR	5074193	ForInit	unsigned i = 0 ;	788:17:31011:31025	5073996	0	True				
ANR	5074194	IdentifierDeclStatement	unsigned i = 0 ;		5073996	0					
ANR	5074195	IdentifierDecl	i = 0		5073996	0					
ANR	5074196	IdentifierDeclType	unsigned		5073996	0					
ANR	5074197	Identifier	i		5073996	1					
ANR	5074198	AssignmentExpression	i = 0		5073996	2		=			
ANR	5074199	Identifier	i		5073996	0					
ANR	5074200	PrimaryExpression	0		5073996	1					
ANR	5074201	Condition	i < sRequest . results . size ( )	788:33:31027:31053	5073996	1	True				
ANR	5074202	RelationalExpression	i < sRequest . results . size ( )		5073996	0		<			
ANR	5074203	Identifier	i		5073996	0					
ANR	5074204	CallExpression	sRequest . results . size ( )		5073996	1					
ANR	5074205	Callee	sRequest . results . size		5073996	0					
ANR	5074206	MemberAccess	sRequest . results . size		5073996	0					
ANR	5074207	MemberAccess	sRequest . results		5073996	0					
ANR	5074208	Identifier	sRequest		5073996	0					
ANR	5074209	Identifier	results		5073996	1					
ANR	5074210	Identifier	size		5073996	1					
ANR	5074211	ArgumentList			5073996	1					
ANR	5074212	UnaryExpression	++ i	788:62:31056:31058	5073996	2	True				
ANR	5074213	IncDec	++		5073996	0					
ANR	5074214	Identifier	i		5073996	1					
ANR	5074215	CompoundStatement		38:16:1480:1524	5073996	3					
ANR	5074216	IdentifierDeclStatement	AmazonStatusResult asr = sRequest . results [ i ] ;	789:16:31080:31124	5073996	0	True				
ANR	5074217	IdentifierDecl	asr = sRequest . results [ i ]		5073996	0					
ANR	5074218	IdentifierDeclType	AmazonStatusResult		5073996	0					
ANR	5074219	Identifier	asr		5073996	1					
ANR	5074220	AssignmentExpression	asr = sRequest . results [ i ]		5073996	2		=			
ANR	5074221	Identifier	asr		5073996	0					
ANR	5074222	ArrayIndexing	sRequest . results [ i ]		5073996	1					
ANR	5074223	MemberAccess	sRequest . results		5073996	0					
ANR	5074224	Identifier	sRequest		5073996	0					
ANR	5074225	Identifier	results		5073996	1					
ANR	5074226	Identifier	i		5073996	1					
ANR	5074227	IfStatement	if ( asr . instance_id != instanceID )		5073996	1					
ANR	5074228	Condition	asr . instance_id != instanceID	790:20:31146:31174	5073996	0	True				
ANR	5074229	EqualityExpression	asr . instance_id != instanceID		5073996	0		!=			
ANR	5074230	MemberAccess	asr . instance_id		5073996	0					
ANR	5074231	Identifier	asr		5073996	0					
ANR	5074232	Identifier	instance_id		5073996	1					
ANR	5074233	Identifier	instanceID		5073996	1					
ANR	5074234	CompoundStatement		39:52:1578:1578	5073996	1					
ANR	5074235	ContinueStatement	continue ;	790:54:31180:31188	5073996	0	True				
ANR	5074236	ExpressionStatement	resultList . append ( asr . instance_id . c_str ( ) )	792:16:31225:31269	5073996	2	True				
ANR	5074237	CallExpression	resultList . append ( asr . instance_id . c_str ( ) )		5073996	0					
ANR	5074238	Callee	resultList . append		5073996	0					
ANR	5074239	MemberAccess	resultList . append		5073996	0					
ANR	5074240	Identifier	resultList		5073996	0					
ANR	5074241	Identifier	append		5073996	1					
ANR	5074242	ArgumentList	asr . instance_id . c_str ( )		5073996	1					
ANR	5074243	Argument	asr . instance_id . c_str ( )		5073996	0					
ANR	5074244	CallExpression	asr . instance_id . c_str ( )		5073996	0					
ANR	5074245	Callee	asr . instance_id . c_str		5073996	0					
ANR	5074246	MemberAccess	asr . instance_id . c_str		5073996	0					
ANR	5074247	MemberAccess	asr . instance_id		5073996	0					
ANR	5074248	Identifier	asr		5073996	0					
ANR	5074249	Identifier	instance_id		5073996	1					
ANR	5074250	Identifier	c_str		5073996	1					
ANR	5074251	ArgumentList			5073996	1					
ANR	5074252	ExpressionStatement	resultList . append ( asr . status . c_str ( ) )	793:16:31287:31326	5073996	3	True				
ANR	5074253	CallExpression	resultList . append ( asr . status . c_str ( ) )		5073996	0					
ANR	5074254	Callee	resultList . append		5073996	0					
ANR	5074255	MemberAccess	resultList . append		5073996	0					
ANR	5074256	Identifier	resultList		5073996	0					
ANR	5074257	Identifier	append		5073996	1					
ANR	5074258	ArgumentList	asr . status . c_str ( )		5073996	1					
ANR	5074259	Argument	asr . status . c_str ( )		5073996	0					
ANR	5074260	CallExpression	asr . status . c_str ( )		5073996	0					
ANR	5074261	Callee	asr . status . c_str		5073996	0					
ANR	5074262	MemberAccess	asr . status . c_str		5073996	0					
ANR	5074263	MemberAccess	asr . status		5073996	0					
ANR	5074264	Identifier	asr		5073996	0					
ANR	5074265	Identifier	status		5073996	1					
ANR	5074266	Identifier	c_str		5073996	1					
ANR	5074267	ArgumentList			5073996	1					
ANR	5074268	ExpressionStatement	resultList . append ( asr . ami_id . c_str ( ) )	794:16:31344:31383	5073996	4	True				
ANR	5074269	CallExpression	resultList . append ( asr . ami_id . c_str ( ) )		5073996	0					
ANR	5074270	Callee	resultList . append		5073996	0					
ANR	5074271	MemberAccess	resultList . append		5073996	0					
ANR	5074272	Identifier	resultList		5073996	0					
ANR	5074273	Identifier	append		5073996	1					
ANR	5074274	ArgumentList	asr . ami_id . c_str ( )		5073996	1					
ANR	5074275	Argument	asr . ami_id . c_str ( )		5073996	0					
ANR	5074276	CallExpression	asr . ami_id . c_str ( )		5073996	0					
ANR	5074277	Callee	asr . ami_id . c_str		5073996	0					
ANR	5074278	MemberAccess	asr . ami_id . c_str		5073996	0					
ANR	5074279	MemberAccess	asr . ami_id		5073996	0					
ANR	5074280	Identifier	asr		5073996	0					
ANR	5074281	Identifier	ami_id		5073996	1					
ANR	5074282	Identifier	c_str		5073996	1					
ANR	5074283	ArgumentList			5073996	1					
ANR	5074284	IfStatement	"if ( strcasecmp ( asr . status . c_str ( ) , AMAZON_STATUS_RUNNING ) == 0 )"		5073996	5					
ANR	5074285	Condition	"strcasecmp ( asr . status . c_str ( ) , AMAZON_STATUS_RUNNING ) == 0"	796:20:31422:31481	5073996	0	True				
ANR	5074286	EqualityExpression	"strcasecmp ( asr . status . c_str ( ) , AMAZON_STATUS_RUNNING ) == 0"		5073996	0		==			
ANR	5074287	CallExpression	"strcasecmp ( asr . status . c_str ( ) , AMAZON_STATUS_RUNNING )"		5073996	0					
ANR	5074288	Callee	strcasecmp		5073996	0					
ANR	5074289	Identifier	strcasecmp		5073996	0					
ANR	5074290	ArgumentList	asr . status . c_str ( )		5073996	1					
ANR	5074291	Argument	asr . status . c_str ( )		5073996	0					
ANR	5074292	CallExpression	asr . status . c_str ( )		5073996	0					
ANR	5074293	Callee	asr . status . c_str		5073996	0					
ANR	5074294	MemberAccess	asr . status . c_str		5073996	0					
ANR	5074295	MemberAccess	asr . status		5073996	0					
ANR	5074296	Identifier	asr		5073996	0					
ANR	5074297	Identifier	status		5073996	1					
ANR	5074298	Identifier	c_str		5073996	1					
ANR	5074299	ArgumentList			5073996	1					
ANR	5074300	Argument	AMAZON_STATUS_RUNNING		5073996	1					
ANR	5074301	Identifier	AMAZON_STATUS_RUNNING		5073996	0					
ANR	5074302	PrimaryExpression	0		5073996	1					
ANR	5074303	CompoundStatement		45:83:1885:1885	5073996	1					
ANR	5074304	ExpressionStatement	resultList . append ( nullStringIfEmpty ( asr . public_dns ) )	797:20:31507:31563	5073996	0	True				
ANR	5074305	CallExpression	resultList . append ( nullStringIfEmpty ( asr . public_dns ) )		5073996	0					
ANR	5074306	Callee	resultList . append		5073996	0					
ANR	5074307	MemberAccess	resultList . append		5073996	0					
ANR	5074308	Identifier	resultList		5073996	0					
ANR	5074309	Identifier	append		5073996	1					
ANR	5074310	ArgumentList	nullStringIfEmpty ( asr . public_dns )		5073996	1					
ANR	5074311	Argument	nullStringIfEmpty ( asr . public_dns )		5073996	0					
ANR	5074312	CallExpression	nullStringIfEmpty ( asr . public_dns )		5073996	0					
ANR	5074313	Callee	nullStringIfEmpty		5073996	0					
ANR	5074314	Identifier	nullStringIfEmpty		5073996	0					
ANR	5074315	ArgumentList	asr . public_dns		5073996	1					
ANR	5074316	Argument	asr . public_dns		5073996	0					
ANR	5074317	MemberAccess	asr . public_dns		5073996	0					
ANR	5074318	Identifier	asr		5073996	0					
ANR	5074319	Identifier	public_dns		5073996	1					
ANR	5074320	ExpressionStatement	resultList . append ( nullStringIfEmpty ( asr . private_dns ) )	798:20:31585:31642	5073996	1	True				
ANR	5074321	CallExpression	resultList . append ( nullStringIfEmpty ( asr . private_dns ) )		5073996	0					
ANR	5074322	Callee	resultList . append		5073996	0					
ANR	5074323	MemberAccess	resultList . append		5073996	0					
ANR	5074324	Identifier	resultList		5073996	0					
ANR	5074325	Identifier	append		5073996	1					
ANR	5074326	ArgumentList	nullStringIfEmpty ( asr . private_dns )		5073996	1					
ANR	5074327	Argument	nullStringIfEmpty ( asr . private_dns )		5073996	0					
ANR	5074328	CallExpression	nullStringIfEmpty ( asr . private_dns )		5073996	0					
ANR	5074329	Callee	nullStringIfEmpty		5073996	0					
ANR	5074330	Identifier	nullStringIfEmpty		5073996	0					
ANR	5074331	ArgumentList	asr . private_dns		5073996	1					
ANR	5074332	Argument	asr . private_dns		5073996	0					
ANR	5074333	MemberAccess	asr . private_dns		5073996	0					
ANR	5074334	Identifier	asr		5073996	0					
ANR	5074335	Identifier	private_dns		5073996	1					
ANR	5074336	ExpressionStatement	resultList . append ( nullStringIfEmpty ( asr . keyname ) )	799:20:31664:31717	5073996	2	True				
ANR	5074337	CallExpression	resultList . append ( nullStringIfEmpty ( asr . keyname ) )		5073996	0					
ANR	5074338	Callee	resultList . append		5073996	0					
ANR	5074339	MemberAccess	resultList . append		5073996	0					
ANR	5074340	Identifier	resultList		5073996	0					
ANR	5074341	Identifier	append		5073996	1					
ANR	5074342	ArgumentList	nullStringIfEmpty ( asr . keyname )		5073996	1					
ANR	5074343	Argument	nullStringIfEmpty ( asr . keyname )		5073996	0					
ANR	5074344	CallExpression	nullStringIfEmpty ( asr . keyname )		5073996	0					
ANR	5074345	Callee	nullStringIfEmpty		5073996	0					
ANR	5074346	Identifier	nullStringIfEmpty		5073996	0					
ANR	5074347	ArgumentList	asr . keyname		5073996	1					
ANR	5074348	Argument	asr . keyname		5073996	0					
ANR	5074349	MemberAccess	asr . keyname		5073996	0					
ANR	5074350	Identifier	asr		5073996	0					
ANR	5074351	Identifier	keyname		5073996	1					
ANR	5074352	IfStatement	if ( asr . securityGroups . size ( ) == 0 )		5073996	3					
ANR	5074353	Condition	asr . securityGroups . size ( ) == 0	800:24:31743:31772	5073996	0	True				
ANR	5074354	EqualityExpression	asr . securityGroups . size ( ) == 0		5073996	0		==			
ANR	5074355	CallExpression	asr . securityGroups . size ( )		5073996	0					
ANR	5074356	Callee	asr . securityGroups . size		5073996	0					
ANR	5074357	MemberAccess	asr . securityGroups . size		5073996	0					
ANR	5074358	MemberAccess	asr . securityGroups		5073996	0					
ANR	5074359	Identifier	asr		5073996	0					
ANR	5074360	Identifier	securityGroups		5073996	1					
ANR	5074361	Identifier	size		5073996	1					
ANR	5074362	ArgumentList			5073996	1					
ANR	5074363	PrimaryExpression	0		5073996	1					
ANR	5074364	CompoundStatement		49:57:2176:2176	5073996	1					
ANR	5074365	ExpressionStatement	resultList . append ( NULLSTRING )	801:24:31802:31833	5073996	0	True				
ANR	5074366	CallExpression	resultList . append ( NULLSTRING )		5073996	0					
ANR	5074367	Callee	resultList . append		5073996	0					
ANR	5074368	MemberAccess	resultList . append		5073996	0					
ANR	5074369	Identifier	resultList		5073996	0					
ANR	5074370	Identifier	append		5073996	1					
ANR	5074371	ArgumentList	NULLSTRING		5073996	1					
ANR	5074372	Argument	NULLSTRING		5073996	0					
ANR	5074373	Identifier	NULLSTRING		5073996	0					
ANR	5074374	ElseStatement	else		5073996	0					
ANR	5074375	CompoundStatement		51:27:2262:2262	5073996	0					
ANR	5074376	ForStatement	for ( unsigned j = 0 ; j < asr . securityGroups . size ( ) ; ++ j )		5073996	0					
ANR	5074377	ForInit	unsigned j = 0 ;	803:29:31917:31931	5073996	0	True				
ANR	5074378	IdentifierDeclStatement	unsigned j = 0 ;		5073996	0					
ANR	5074379	IdentifierDecl	j = 0		5073996	0					
ANR	5074380	IdentifierDeclType	unsigned		5073996	0					
ANR	5074381	Identifier	j		5073996	1					
ANR	5074382	AssignmentExpression	j = 0		5073996	2		=			
ANR	5074383	Identifier	j		5073996	0					
ANR	5074384	PrimaryExpression	0		5073996	1					
ANR	5074385	Condition	j < asr . securityGroups . size ( )	803:45:31933:31961	5073996	1	True				
ANR	5074386	RelationalExpression	j < asr . securityGroups . size ( )		5073996	0		<			
ANR	5074387	Identifier	j		5073996	0					
ANR	5074388	CallExpression	asr . securityGroups . size ( )		5073996	1					
ANR	5074389	Callee	asr . securityGroups . size		5073996	0					
ANR	5074390	MemberAccess	asr . securityGroups . size		5073996	0					
ANR	5074391	MemberAccess	asr . securityGroups		5073996	0					
ANR	5074392	Identifier	asr		5073996	0					
ANR	5074393	Identifier	securityGroups		5073996	1					
ANR	5074394	Identifier	size		5073996	1					
ANR	5074395	ArgumentList			5073996	1					
ANR	5074396	UnaryExpression	++ j	803:76:31964:31966	5073996	2	True				
ANR	5074397	IncDec	++		5073996	0					
ANR	5074398	Identifier	j		5073996	1					
ANR	5074399	CompoundStatement		52:82:2370:2370	5073996	3					
ANR	5074400	ExpressionStatement	resultList . append ( asr . securityGroups [ j ] . c_str ( ) )	804:28:32000:32050	5073996	0	True				
ANR	5074401	CallExpression	resultList . append ( asr . securityGroups [ j ] . c_str ( ) )		5073996	0					
ANR	5074402	Callee	resultList . append		5073996	0					
ANR	5074403	MemberAccess	resultList . append		5073996	0					
ANR	5074404	Identifier	resultList		5073996	0					
ANR	5074405	Identifier	append		5073996	1					
ANR	5074406	ArgumentList	asr . securityGroups [ j ] . c_str ( )		5073996	1					
ANR	5074407	Argument	asr . securityGroups [ j ] . c_str ( )		5073996	0					
ANR	5074408	CallExpression	asr . securityGroups [ j ] . c_str ( )		5073996	0					
ANR	5074409	Callee	asr . securityGroups [ j ] . c_str		5073996	0					
ANR	5074410	MemberAccess	asr . securityGroups [ j ] . c_str		5073996	0					
ANR	5074411	ArrayIndexing	asr . securityGroups [ j ]		5073996	0					
ANR	5074412	MemberAccess	asr . securityGroups		5073996	0					
ANR	5074413	Identifier	asr		5073996	0					
ANR	5074414	Identifier	securityGroups		5073996	1					
ANR	5074415	Identifier	j		5073996	1					
ANR	5074416	Identifier	c_str		5073996	1					
ANR	5074417	ArgumentList			5073996	1					
ANR	5074418	ExpressionStatement	"result_string = create_success_result ( requestID , & resultList )"	809:12:32144:32208	5073996	2	True				
ANR	5074419	AssignmentExpression	"result_string = create_success_result ( requestID , & resultList )"		5073996	0		=			
ANR	5074420	Identifier	result_string		5073996	0					
ANR	5074421	CallExpression	"create_success_result ( requestID , & resultList )"		5073996	1					
ANR	5074422	Callee	create_success_result		5073996	0					
ANR	5074423	Identifier	create_success_result		5073996	0					
ANR	5074424	ArgumentList	requestID		5073996	1					
ANR	5074425	Argument	requestID		5073996	0					
ANR	5074426	Identifier	requestID		5073996	0					
ANR	5074427	Argument	& resultList		5073996	1					
ANR	5074428	UnaryOperationExpression	& resultList		5073996	0					
ANR	5074429	UnaryOperator	&		5073996	0					
ANR	5074430	Identifier	resultList		5073996	1					
ANR	5074431	ReturnStatement	return true ;	813:4:32231:32242	5073996	11	True				
ANR	5074432	Identifier	true		5073996	0					
ANR	5074433	ReturnType	bool		5073996	1					
ANR	5074434	Identifier	AmazonVMStatus :: workerFunction		5073996	2					
ANR	5074435	ParameterList	"char * * argv , int argc , std :: string & result_string"		5073996	3					
ANR	5074436	Parameter	char * * argv	752:36:29548:29558	5073996	0	True				
ANR	5074437	ParameterType	char * *		5073996	0					
ANR	5074438	Identifier	argv		5073996	1					
ANR	5074439	Parameter	int argc	752:49:29561:29568	5073996	1	True				
ANR	5074440	ParameterType	int		5073996	0					
ANR	5074441	Identifier	argc		5073996	1					
ANR	5074442	Parameter	std :: string & result_string	752:59:29571:29596	5073996	2	True				
ANR	5074443	ParameterType	std :: string &		5073996	0					
ANR	5074444	Identifier	result_string		5073996	1					
ANR	5074445	CFGEntryNode	ENTRY		5073996		True				
ANR	5074446	CFGExitNode	EXIT		5073996		True				
ANR	5074447	Symbol	asr		5073996						
ANR	5074448	Symbol	asr . keyname		5073996						
ANR	5074449	Symbol	asr . securityGroups . size		5073996						
ANR	5074450	Symbol	asr . securityGroups		5073996						
ANR	5074451	Symbol	* argv		5073996						
ANR	5074452	Symbol	& requestID		5073996						
ANR	5074453	Symbol	sRequest . errorMessage		5073996						
ANR	5074454	Symbol	* sRequest . results		5073996						
ANR	5074455	Symbol	sRequest . SendRequest		5073996						
ANR	5074456	Symbol	create_success_result		5073996						
ANR	5074457	Symbol	asr . instance_id . c_str		5073996						
ANR	5074458	Symbol	sRequest . secretKeyFile		5073996						
ANR	5074459	Symbol	sRequest . errorCode . c_str		5073996						
ANR	5074460	Symbol	result_string		5073996						
ANR	5074461	Symbol	* sRequest		5073996						
ANR	5074462	Symbol	strcasecmp		5073996						
ANR	5074463	Symbol	asr . status		5073996						
ANR	5074464	Symbol	strcmp		5073996						
ANR	5074465	Symbol	asr . public_dns		5073996						
ANR	5074466	Symbol	NULL		5073996						
ANR	5074467	Symbol	asr . ami_id . c_str		5073996						
ANR	5074468	Symbol	sRequest . accessKeyFile		5073996						
ANR	5074469	Symbol	AMAZON_STATUS_RUNNING		5073996						
ANR	5074470	Symbol	sRequest		5073996						
ANR	5074471	Symbol	instanceID		5073996						
ANR	5074472	Symbol	* asr . securityGroups		5073996						
ANR	5074473	Symbol	requestID		5073996						
ANR	5074474	Symbol	create_failure_result		5073996						
ANR	5074475	Symbol	asr . status . c_str		5073996						
ANR	5074476	Symbol	true		5073996						
ANR	5074477	Symbol	asr . instance_id		5073996						
ANR	5074478	Symbol	sRequest . errorCode		5073996						
ANR	5074479	Symbol	resultList		5073996						
ANR	5074480	Symbol	asr . private_dns		5073996						
ANR	5074481	Symbol	sRequest . errorMessage . c_str		5073996						
ANR	5074482	Symbol	argv		5073996						
ANR	5074483	Symbol	sRequest . serviceURL		5073996						
ANR	5074484	Symbol	& resultList		5073996						
ANR	5074485	Symbol	* asr		5073996						
ANR	5074486	Symbol	sRequest . query_parameters		5073996						
ANR	5074487	Symbol	argc		5073996						
ANR	5074488	Symbol	sRequest . results		5073996						
ANR	5074489	Symbol	D_ALWAYS		5073996						
ANR	5074490	Symbol	false		5073996						
ANR	5074491	Symbol	nullStringIfEmpty		5073996						
ANR	5074492	Symbol	i		5073996						
ANR	5074493	Symbol	j		5073996						
ANR	5074494	Symbol	verify_min_number_args		5073996						
ANR	5074495	Symbol	* sRequest . query_parameters		5073996						
ANR	5074496	Symbol	NULLSTRING		5073996						
ANR	5074497	Symbol	asr . ami_id		5073996						
ANR	5074498	Symbol	sRequest . results . size		5073996						
ANR	5074499	Symbol	* i		5073996						
ANR	5074500	Symbol	* j		5073996						
ANR	5074501	Symbol	asr . securityGroups [ j ] . c_str		5073996						
ANR	5074502	Function	AmazonVMStatusAll :: AmazonVMStatusAll	818:0:32327:32368							
ANR	5074503	FunctionDef	AmazonVMStatusAll :: AmazonVMStatusAll ()		5074502	0					
ANR	5074504	CompoundStatement		818:39:32366:32368	5074502	0					
ANR	5074505	Identifier	AmazonVMStatusAll :: AmazonVMStatusAll		5074502	1					
ANR	5074506	ParameterList			5074502	2					
ANR	5074507	CFGEntryNode	ENTRY		5074502		True				
ANR	5074508	CFGExitNode	EXIT		5074502		True				
ANR	5074509	Function	AmazonVMStatusAll :: ~AmazonVMStatusAll	820:0:32371:32413							
ANR	5074510	FunctionDef	AmazonVMStatusAll :: ~AmazonVMStatusAll ()		5074509	0					
ANR	5074511	CompoundStatement		820:40:32411:32413	5074509	0					
ANR	5074512	Identifier	AmazonVMStatusAll :: ~AmazonVMStatusAll		5074509	1					
ANR	5074513	ParameterList			5074509	2					
ANR	5074514	CFGEntryNode	ENTRY		5074509		True				
ANR	5074515	CFGExitNode	EXIT		5074509		True				
ANR	5074516	ClassDef	vmStatusUD_t	822:0:32416:33336							
ANR	5074517	ClassDef	vmStatusTags_t	823:4:32442:32634							
ANR	5074518	DeclStmt									
ANR	5074519	Decl							enum vmStatusTags_t	enum vmStatusTags_t	vmStatusTags
ANR	5074520	DeclStmt									
ANR	5074521	Decl							bool	bool	inInstancesSet
ANR	5074522	DeclStmt									
ANR	5074523	Decl							bool	bool	inInstance
ANR	5074524	DeclStmt									
ANR	5074525	Decl							bool	bool	inInstanceState
ANR	5074526	DeclStmt									
ANR	5074527	Decl							vmStatusTags	vmStatusTags	inWhichTag
ANR	5074528	DeclStmt									
ANR	5074529	Decl							AmazonStatusResult	AmazonStatusResult *	currentResult
ANR	5074530	DeclStmt									
ANR	5074531	Decl							std :: vector < AmazonStatusResult >	std :: vector < AmazonStatusResult > &	results
ANR	5074532	DeclStmt									
ANR	5074533	Decl							bool	bool	inGroupSet
ANR	5074534	DeclStmt									
ANR	5074535	Decl							bool	bool	inGroup
ANR	5074536	DeclStmt									
ANR	5074537	Decl							std :: string	std :: string	currentSecurityGroup
ANR	5074538	DeclStmt									
ANR	5074539	Decl							std :: vector < std :: string >	std :: vector < std :: string >	currentSecurityGroups
ANR	5074540	Function	vmStatusUD_t	848:4:33015:33334							
ANR	5074541	FunctionDef	vmStatusUD_t (std :: vector < AmazonStatusResult > & asrList)		5074540	12					
ANR	5074542	CompoundStatement		856:25:33332:33334	5074540	0					
ANR	5074543	Identifier	vmStatusUD_t		5074540	1					
ANR	5074544	ParameterList	std :: vector < AmazonStatusResult > & asrList		5074540	2					
ANR	5074545	Parameter	std :: vector < AmazonStatusResult > & asrList	848:18:33029:33071	5074540	0	True				
ANR	5074546	ParameterType	std :: vector < AmazonStatusResult > &		5074540	0					
ANR	5074547	Identifier	asrList		5074540	1					
ANR	5074548	CFGEntryNode	ENTRY		5074540		True				
ANR	5074549	CFGExitNode	EXIT		5074540		True				
ANR	5074550	Symbol	asrList		5074540						
ANR	5074551	DeclStmt									
ANR	5074552	Decl							struct vmStatusUD_t	struct vmStatusUD_t	vmStatusUD
ANR	5074553	DeclStmt									
ANR	5074554	Decl							vmStatusUD	vmStatusUD *	vsud
ANR	5074555	Function	vmStatusCDH	910:0:35314:36788							
ANR	5074556	FunctionDef	"vmStatusCDH (void * vUserData , const XML_Char * cdata , int len)"		5074555	0					
ANR	5074557	CompoundStatement		910:70:35384:36788	5074555	0					
ANR	5074558	IdentifierDeclStatement	vmStatusUD * vsud = ( vmStatusUD * ) vUserData ;	911:4:35390:35433	5074555	0	True				
ANR	5074559	IdentifierDecl	* vsud = ( vmStatusUD * ) vUserData		5074555	0					
ANR	5074560	IdentifierDeclType	vmStatusUD *		5074555	0					
ANR	5074561	Identifier	vsud		5074555	1					
ANR	5074562	AssignmentExpression	* vsud = ( vmStatusUD * ) vUserData		5074555	2		=			
ANR	5074563	Identifier	vsud		5074555	0					
ANR	5074564	CastExpression	( vmStatusUD * ) vUserData		5074555	1					
ANR	5074565	CastTarget	vmStatusUD *		5074555	0					
ANR	5074566	Identifier	vUserData		5074555	1					
ANR	5074567	IfStatement	if ( vsud -> inGroup )		5074555	1					
ANR	5074568	Condition	vsud -> inGroup	913:8:35444:35456	5074555	0	True				
ANR	5074569	PtrMemberAccess	vsud -> inGroup		5074555	0					
ANR	5074570	Identifier	vsud		5074555	0					
ANR	5074571	Identifier	inGroup		5074555	1					
ANR	5074572	CompoundStatement		4:24:75:75	5074555	1					
ANR	5074573	ExpressionStatement	"appendToString ( ( void * ) cdata , len , 1 , ( void * ) & vsud -> currentSecurityGroup )"	914:8:35470:35548	5074555	0	True				
ANR	5074574	CallExpression	"appendToString ( ( void * ) cdata , len , 1 , ( void * ) & vsud -> currentSecurityGroup )"		5074555	0					
ANR	5074575	Callee	appendToString		5074555	0					
ANR	5074576	Identifier	appendToString		5074555	0					
ANR	5074577	ArgumentList	( void * ) cdata		5074555	1					
ANR	5074578	Argument	( void * ) cdata		5074555	0					
ANR	5074579	CastExpression	( void * ) cdata		5074555	0					
ANR	5074580	CastTarget	void *		5074555	0					
ANR	5074581	Identifier	cdata		5074555	1					
ANR	5074582	Argument	len		5074555	1					
ANR	5074583	Identifier	len		5074555	0					
ANR	5074584	Argument	1		5074555	2					
ANR	5074585	PrimaryExpression	1		5074555	0					
ANR	5074586	Argument	( void * ) & vsud -> currentSecurityGroup		5074555	3					
ANR	5074587	CastExpression	( void * ) & vsud -> currentSecurityGroup		5074555	0					
ANR	5074588	CastTarget	void *		5074555	0					
ANR	5074589	UnaryOperationExpression	& vsud -> currentSecurityGroup		5074555	1					
ANR	5074590	UnaryOperator	&		5074555	0					
ANR	5074591	PtrMemberAccess	vsud -> currentSecurityGroup		5074555	1					
ANR	5074592	Identifier	vsud		5074555	0					
ANR	5074593	Identifier	currentSecurityGroup		5074555	1					
ANR	5074594	ReturnStatement	return ;	915:8:35558:35564	5074555	1	True				
ANR	5074595	IfStatement	if ( vsud -> currentResult == NULL )		5074555	2					
ANR	5074596	Condition	vsud -> currentResult == NULL	918:8:35581:35607	5074555	0	True				
ANR	5074597	EqualityExpression	vsud -> currentResult == NULL		5074555	0		==			
ANR	5074598	PtrMemberAccess	vsud -> currentResult		5074555	0					
ANR	5074599	Identifier	vsud		5074555	0					
ANR	5074600	Identifier	currentResult		5074555	1					
ANR	5074601	Identifier	NULL		5074555	1					
ANR	5074602	CompoundStatement		9:38:226:226	5074555	1					
ANR	5074603	ReturnStatement	return ;	919:8:35621:35627	5074555	0	True				
ANR	5074604	IdentifierDeclStatement	std :: string * targetString = NULL ;	922:4:35640:35673	5074555	3	True				
ANR	5074605	IdentifierDecl	* targetString = NULL		5074555	0					
ANR	5074606	IdentifierDeclType	std :: string *		5074555	0					
ANR	5074607	Identifier	targetString		5074555	1					
ANR	5074608	AssignmentExpression	* targetString = NULL		5074555	2		=			
ANR	5074609	Identifier	NULL		5074555	0					
ANR	5074610	Identifier	NULL		5074555	1					
ANR	5074611	SwitchStatement	switch ( vsud -> inWhichTag )		5074555	4					
ANR	5074612	Condition	vsud -> inWhichTag	923:12:35687:35702	5074555	0	True				
ANR	5074613	PtrMemberAccess	vsud -> inWhichTag		5074555	0					
ANR	5074614	Identifier	vsud		5074555	0					
ANR	5074615	Identifier	inWhichTag		5074555	1					
ANR	5074616	CompoundStatement		14:31:321:321	5074555	1					
ANR	5074617	Label	case vmStatusUD :: NONE :	924:8:35716:35737	5074555	0	True				
ANR	5074618	Identifier	vmStatusUD :: NONE		5074555	0					
ANR	5074619	ReturnStatement	return ;	925:12:35751:35757	5074555	1	True				
ANR	5074620	Label	case vmStatusUD :: INSTANCE_ID :	927:8:35776:35804	5074555	2	True				
ANR	5074621	Identifier	vmStatusUD :: INSTANCE_ID		5074555	0					
ANR	5074622	ExpressionStatement	targetString = & vsud -> currentResult -> instance_id	928:12:35818:35867	5074555	3	True				
ANR	5074623	AssignmentExpression	targetString = & vsud -> currentResult -> instance_id		5074555	0		=			
ANR	5074624	Identifier	targetString		5074555	0					
ANR	5074625	UnaryOperationExpression	& vsud -> currentResult -> instance_id		5074555	1					
ANR	5074626	UnaryOperator	&		5074555	0					
ANR	5074627	PtrMemberAccess	vsud -> currentResult -> instance_id		5074555	1					
ANR	5074628	PtrMemberAccess	vsud -> currentResult		5074555	0					
ANR	5074629	Identifier	vsud		5074555	0					
ANR	5074630	Identifier	currentResult		5074555	1					
ANR	5074631	Identifier	instance_id		5074555	1					
ANR	5074632	BreakStatement	break ;	929:12:35881:35886	5074555	4	True				
ANR	5074633	Label	case vmStatusUD :: STATUS :	931:8:35905:35928	5074555	5	True				
ANR	5074634	Identifier	vmStatusUD :: STATUS		5074555	0					
ANR	5074635	ExpressionStatement	targetString = & vsud -> currentResult -> status	932:12:35942:35986	5074555	6	True				
ANR	5074636	AssignmentExpression	targetString = & vsud -> currentResult -> status		5074555	0		=			
ANR	5074637	Identifier	targetString		5074555	0					
ANR	5074638	UnaryOperationExpression	& vsud -> currentResult -> status		5074555	1					
ANR	5074639	UnaryOperator	&		5074555	0					
ANR	5074640	PtrMemberAccess	vsud -> currentResult -> status		5074555	1					
ANR	5074641	PtrMemberAccess	vsud -> currentResult		5074555	0					
ANR	5074642	Identifier	vsud		5074555	0					
ANR	5074643	Identifier	currentResult		5074555	1					
ANR	5074644	Identifier	status		5074555	1					
ANR	5074645	BreakStatement	break ;	933:12:36000:36005	5074555	7	True				
ANR	5074646	Label	case vmStatusUD :: AMI_ID :	935:8:36024:36047	5074555	8	True				
ANR	5074647	Identifier	vmStatusUD :: AMI_ID		5074555	0					
ANR	5074648	ExpressionStatement	targetString = & vsud -> currentResult -> ami_id	936:12:36061:36105	5074555	9	True				
ANR	5074649	AssignmentExpression	targetString = & vsud -> currentResult -> ami_id		5074555	0		=			
ANR	5074650	Identifier	targetString		5074555	0					
ANR	5074651	UnaryOperationExpression	& vsud -> currentResult -> ami_id		5074555	1					
ANR	5074652	UnaryOperator	&		5074555	0					
ANR	5074653	PtrMemberAccess	vsud -> currentResult -> ami_id		5074555	1					
ANR	5074654	PtrMemberAccess	vsud -> currentResult		5074555	0					
ANR	5074655	Identifier	vsud		5074555	0					
ANR	5074656	Identifier	currentResult		5074555	1					
ANR	5074657	Identifier	ami_id		5074555	1					
ANR	5074658	BreakStatement	break ;	937:12:36119:36124	5074555	10	True				
ANR	5074659	Label	case vmStatusUD :: PRIVATE_DNS :	939:8:36143:36171	5074555	11	True				
ANR	5074660	Identifier	vmStatusUD :: PRIVATE_DNS		5074555	0					
ANR	5074661	ExpressionStatement	targetString = & vsud -> currentResult -> private_dns	940:12:36185:36234	5074555	12	True				
ANR	5074662	AssignmentExpression	targetString = & vsud -> currentResult -> private_dns		5074555	0		=			
ANR	5074663	Identifier	targetString		5074555	0					
ANR	5074664	UnaryOperationExpression	& vsud -> currentResult -> private_dns		5074555	1					
ANR	5074665	UnaryOperator	&		5074555	0					
ANR	5074666	PtrMemberAccess	vsud -> currentResult -> private_dns		5074555	1					
ANR	5074667	PtrMemberAccess	vsud -> currentResult		5074555	0					
ANR	5074668	Identifier	vsud		5074555	0					
ANR	5074669	Identifier	currentResult		5074555	1					
ANR	5074670	Identifier	private_dns		5074555	1					
ANR	5074671	BreakStatement	break ;	941:12:36248:36253	5074555	13	True				
ANR	5074672	Label	case vmStatusUD :: PUBLIC_DNS :	943:8:36276:36303	5074555	14	True				
ANR	5074673	Identifier	vmStatusUD :: PUBLIC_DNS		5074555	0					
ANR	5074674	ExpressionStatement	targetString = & vsud -> currentResult -> public_dns	944:12:36317:36365	5074555	15	True				
ANR	5074675	AssignmentExpression	targetString = & vsud -> currentResult -> public_dns		5074555	0		=			
ANR	5074676	Identifier	targetString		5074555	0					
ANR	5074677	UnaryOperationExpression	& vsud -> currentResult -> public_dns		5074555	1					
ANR	5074678	UnaryOperator	&		5074555	0					
ANR	5074679	PtrMemberAccess	vsud -> currentResult -> public_dns		5074555	1					
ANR	5074680	PtrMemberAccess	vsud -> currentResult		5074555	0					
ANR	5074681	Identifier	vsud		5074555	0					
ANR	5074682	Identifier	currentResult		5074555	1					
ANR	5074683	Identifier	public_dns		5074555	1					
ANR	5074684	BreakStatement	break ;	945:12:36379:36384	5074555	16	True				
ANR	5074685	Label	case vmStatusUD :: KEY_NAME :	947:8:36395:36420	5074555	17	True				
ANR	5074686	Identifier	vmStatusUD :: KEY_NAME		5074555	0					
ANR	5074687	ExpressionStatement	targetString = & vsud -> currentResult -> keyname	948:12:36434:36479	5074555	18	True				
ANR	5074688	AssignmentExpression	targetString = & vsud -> currentResult -> keyname		5074555	0		=			
ANR	5074689	Identifier	targetString		5074555	0					
ANR	5074690	UnaryOperationExpression	& vsud -> currentResult -> keyname		5074555	1					
ANR	5074691	UnaryOperator	&		5074555	0					
ANR	5074692	PtrMemberAccess	vsud -> currentResult -> keyname		5074555	1					
ANR	5074693	PtrMemberAccess	vsud -> currentResult		5074555	0					
ANR	5074694	Identifier	vsud		5074555	0					
ANR	5074695	Identifier	currentResult		5074555	1					
ANR	5074696	Identifier	keyname		5074555	1					
ANR	5074697	BreakStatement	break ;	949:12:36493:36498	5074555	19	True				
ANR	5074698	Label	case vmStatusUD :: INSTANCE_TYPE :	951:8:36517:36547	5074555	20	True				
ANR	5074699	Identifier	vmStatusUD :: INSTANCE_TYPE		5074555	0					
ANR	5074700	ExpressionStatement	targetString = & vsud -> currentResult -> instancetype	952:12:36561:36611	5074555	21	True				
ANR	5074701	AssignmentExpression	targetString = & vsud -> currentResult -> instancetype		5074555	0		=			
ANR	5074702	Identifier	targetString		5074555	0					
ANR	5074703	UnaryOperationExpression	& vsud -> currentResult -> instancetype		5074555	1					
ANR	5074704	UnaryOperator	&		5074555	0					
ANR	5074705	PtrMemberAccess	vsud -> currentResult -> instancetype		5074555	1					
ANR	5074706	PtrMemberAccess	vsud -> currentResult		5074555	0					
ANR	5074707	Identifier	vsud		5074555	0					
ANR	5074708	Identifier	currentResult		5074555	1					
ANR	5074709	Identifier	instancetype		5074555	1					
ANR	5074710	BreakStatement	break ;	953:12:36625:36630	5074555	22	True				
ANR	5074711	Label	default :	955:8:36641:36648	5074555	23	True				
ANR	5074712	Identifier	default		5074555	0					
ANR	5074713	ReturnStatement	return ;	957:12:36706:36712	5074555	24	True				
ANR	5074714	ExpressionStatement	"appendToString ( ( void * ) cdata , len , 1 , ( void * ) targetString )"	960:4:36725:36786	5074555	5	True				
ANR	5074715	CallExpression	"appendToString ( ( void * ) cdata , len , 1 , ( void * ) targetString )"		5074555	0					
ANR	5074716	Callee	appendToString		5074555	0					
ANR	5074717	Identifier	appendToString		5074555	0					
ANR	5074718	ArgumentList	( void * ) cdata		5074555	1					
ANR	5074719	Argument	( void * ) cdata		5074555	0					
ANR	5074720	CastExpression	( void * ) cdata		5074555	0					
ANR	5074721	CastTarget	void *		5074555	0					
ANR	5074722	Identifier	cdata		5074555	1					
ANR	5074723	Argument	len		5074555	1					
ANR	5074724	Identifier	len		5074555	0					
ANR	5074725	Argument	1		5074555	2					
ANR	5074726	PrimaryExpression	1		5074555	0					
ANR	5074727	Argument	( void * ) targetString		5074555	3					
ANR	5074728	CastExpression	( void * ) targetString		5074555	0					
ANR	5074729	CastTarget	void *		5074555	0					
ANR	5074730	Identifier	targetString		5074555	1					
ANR	5074731	ReturnType	void		5074555	1					
ANR	5074732	Identifier	vmStatusCDH		5074555	2					
ANR	5074733	ParameterList	"void * vUserData , const XML_Char * cdata , int len"		5074555	3					
ANR	5074734	Parameter	void * vUserData	910:18:35332:35347	5074555	0	True				
ANR	5074735	ParameterType	void *		5074555	0					
ANR	5074736	Identifier	vUserData		5074555	1					
ANR	5074737	Parameter	const XML_Char * cdata	910:36:35350:35371	5074555	1	True				
ANR	5074738	ParameterType	const XML_Char *		5074555	0					
ANR	5074739	Identifier	cdata		5074555	1					
ANR	5074740	Parameter	int len	910:60:35374:35380	5074555	2	True				
ANR	5074741	ParameterType	int		5074555	0					
ANR	5074742	Identifier	len		5074555	1					
ANR	5074743	CFGEntryNode	ENTRY		5074555		True				
ANR	5074744	CFGExitNode	EXIT		5074555		True				
ANR	5074745	Symbol	vsud -> currentResult		5074555						
ANR	5074746	Symbol	NULL		5074555						
ANR	5074747	Symbol	& vsud -> currentResult -> instancetype		5074555						
ANR	5074748	Symbol	targetString		5074555						
ANR	5074749	Symbol	& vsud -> currentResult -> ami_id		5074555						
ANR	5074750	Symbol	* vsud		5074555						
ANR	5074751	Symbol	& vsud -> currentResult -> instance_id		5074555						
ANR	5074752	Symbol	& vsud -> currentResult -> public_dns		5074555						
ANR	5074753	Symbol	vsud -> inWhichTag		5074555						
ANR	5074754	Symbol	& vsud -> currentResult -> private_dns		5074555						
ANR	5074755	Symbol	& vsud -> currentSecurityGroup		5074555						
ANR	5074756	Symbol	cdata		5074555						
ANR	5074757	Symbol	& vsud -> currentResult -> keyname		5074555						
ANR	5074758	Symbol	len		5074555						
ANR	5074759	Symbol	vUserData		5074555						
ANR	5074760	Symbol	vsud		5074555						
ANR	5074761	Symbol	vsud -> inGroup		5074555						
ANR	5074762	Symbol	& vsud -> currentResult -> status		5074555						
ANR	5074763	Function	vmStatusEEH	963:0:36791:38341							
ANR	5074764	FunctionDef	"vmStatusEEH (void * vUserData , const XML_Char * name)"		5074763	0					
ANR	5074765	CompoundStatement		963:60:36851:38341	5074763	0					
ANR	5074766	IdentifierDeclStatement	vmStatusUD * vsud = ( vmStatusUD * ) vUserData ;	964:4:36857:36900	5074763	0	True				
ANR	5074767	IdentifierDecl	* vsud = ( vmStatusUD * ) vUserData		5074763	0					
ANR	5074768	IdentifierDeclType	vmStatusUD *		5074763	0					
ANR	5074769	Identifier	vsud		5074763	1					
ANR	5074770	AssignmentExpression	* vsud = ( vmStatusUD * ) vUserData		5074763	2		=			
ANR	5074771	Identifier	vsud		5074763	0					
ANR	5074772	CastExpression	( vmStatusUD * ) vUserData		5074763	1					
ANR	5074773	CastTarget	vmStatusUD *		5074763	0					
ANR	5074774	Identifier	vUserData		5074763	1					
ANR	5074775	IfStatement	if ( vsud -> inGroupSet )		5074763	1					
ANR	5074776	Condition	vsud -> inGroupSet	966:8:36911:36926	5074763	0	True				
ANR	5074777	PtrMemberAccess	vsud -> inGroupSet		5074763	0					
ANR	5074778	Identifier	vsud		5074763	0					
ANR	5074779	Identifier	inGroupSet		5074763	1					
ANR	5074780	CompoundStatement		4:27:78:78	5074763	1					
ANR	5074781	IfStatement	"if ( strcasecmp ( ( const char * ) name , ""groupId"" ) == 0 )"		5074763	0					
ANR	5074782	Condition	"strcasecmp ( ( const char * ) name , ""groupId"" ) == 0"	967:12:36944:36991	5074763	0	True				
ANR	5074783	EqualityExpression	"strcasecmp ( ( const char * ) name , ""groupId"" ) == 0"		5074763	0		==			
ANR	5074784	CallExpression	"strcasecmp ( ( const char * ) name , ""groupId"" )"		5074763	0					
ANR	5074785	Callee	strcasecmp		5074763	0					
ANR	5074786	Identifier	strcasecmp		5074763	0					
ANR	5074787	ArgumentList	( const char * ) name		5074763	1					
ANR	5074788	Argument	( const char * ) name		5074763	0					
ANR	5074789	CastExpression	( const char * ) name		5074763	0					
ANR	5074790	CastTarget	const char *		5074763	0					
ANR	5074791	Identifier	name		5074763	1					
ANR	5074792	Argument	"""groupId"""		5074763	1					
ANR	5074793	PrimaryExpression	"""groupId"""		5074763	0					
ANR	5074794	PrimaryExpression	0		5074763	1					
ANR	5074795	CompoundStatement		5:63:143:143	5074763	1					
ANR	5074796	ExpressionStatement	vsud -> currentSecurityGroups . push_back ( vsud -> currentSecurityGroup )	969:12:37139:37206	5074763	0	True				
ANR	5074797	CallExpression	vsud -> currentSecurityGroups . push_back ( vsud -> currentSecurityGroup )		5074763	0					
ANR	5074798	Callee	vsud -> currentSecurityGroups . push_back		5074763	0					
ANR	5074799	MemberAccess	vsud -> currentSecurityGroups . push_back		5074763	0					
ANR	5074800	PtrMemberAccess	vsud -> currentSecurityGroups		5074763	0					
ANR	5074801	Identifier	vsud		5074763	0					
ANR	5074802	Identifier	currentSecurityGroups		5074763	1					
ANR	5074803	Identifier	push_back		5074763	1					
ANR	5074804	ArgumentList	vsud -> currentSecurityGroup		5074763	1					
ANR	5074805	Argument	vsud -> currentSecurityGroup		5074763	0					
ANR	5074806	PtrMemberAccess	vsud -> currentSecurityGroup		5074763	0					
ANR	5074807	Identifier	vsud		5074763	0					
ANR	5074808	Identifier	currentSecurityGroup		5074763	1					
ANR	5074809	ExpressionStatement	vsud -> currentSecurityGroup . erase ( )	970:12:37220:37254	5074763	1	True				
ANR	5074810	CallExpression	vsud -> currentSecurityGroup . erase ( )		5074763	0					
ANR	5074811	Callee	vsud -> currentSecurityGroup . erase		5074763	0					
ANR	5074812	MemberAccess	vsud -> currentSecurityGroup . erase		5074763	0					
ANR	5074813	PtrMemberAccess	vsud -> currentSecurityGroup		5074763	0					
ANR	5074814	Identifier	vsud		5074763	0					
ANR	5074815	Identifier	currentSecurityGroup		5074763	1					
ANR	5074816	Identifier	erase		5074763	1					
ANR	5074817	ArgumentList			5074763	1					
ANR	5074818	ExpressionStatement	vsud -> inGroup = false	971:12:37268:37289	5074763	2	True				
ANR	5074819	AssignmentExpression	vsud -> inGroup = false		5074763	0		=			
ANR	5074820	PtrMemberAccess	vsud -> inGroup		5074763	0					
ANR	5074821	Identifier	vsud		5074763	0					
ANR	5074822	Identifier	inGroup		5074763	1					
ANR	5074823	Identifier	false		5074763	1					
ANR	5074824	ReturnStatement	return ;	972:12:37303:37309	5074763	3	True				
ANR	5074825	ElseStatement	else		5074763	0					
ANR	5074826	IfStatement	"if ( strcasecmp ( ( const char * ) name , ""groupSet"" ) == 0 )"		5074763	0					
ANR	5074827	Condition	"strcasecmp ( ( const char * ) name , ""groupSet"" ) == 0"	973:19:37330:37378	5074763	0	True				
ANR	5074828	EqualityExpression	"strcasecmp ( ( const char * ) name , ""groupSet"" ) == 0"		5074763	0		==			
ANR	5074829	CallExpression	"strcasecmp ( ( const char * ) name , ""groupSet"" )"		5074763	0					
ANR	5074830	Callee	strcasecmp		5074763	0					
ANR	5074831	Identifier	strcasecmp		5074763	0					
ANR	5074832	ArgumentList	( const char * ) name		5074763	1					
ANR	5074833	Argument	( const char * ) name		5074763	0					
ANR	5074834	CastExpression	( const char * ) name		5074763	0					
ANR	5074835	CastTarget	const char *		5074763	0					
ANR	5074836	Identifier	name		5074763	1					
ANR	5074837	Argument	"""groupSet"""		5074763	1					
ANR	5074838	PrimaryExpression	"""groupSet"""		5074763	0					
ANR	5074839	PrimaryExpression	0		5074763	1					
ANR	5074840	CompoundStatement		11:71:530:530	5074763	1					
ANR	5074841	ExpressionStatement	vsud -> inGroupSet = false	974:12:37396:37420	5074763	0	True				
ANR	5074842	AssignmentExpression	vsud -> inGroupSet = false		5074763	0		=			
ANR	5074843	PtrMemberAccess	vsud -> inGroupSet		5074763	0					
ANR	5074844	Identifier	vsud		5074763	0					
ANR	5074845	Identifier	inGroupSet		5074763	1					
ANR	5074846	Identifier	false		5074763	1					
ANR	5074847	ReturnStatement	return ;	975:12:37434:37440	5074763	1	True				
ANR	5074848	IfStatement	"if ( vsud -> inInstance && strcasecmp ( ( const char * ) name , ""item"" ) == 0 )"		5074763	2					
ANR	5074849	Condition	"vsud -> inInstance && strcasecmp ( ( const char * ) name , ""item"" ) == 0"	979:8:37467:37531	5074763	0	True				
ANR	5074850	AndExpression	"vsud -> inInstance && strcasecmp ( ( const char * ) name , ""item"" ) == 0"		5074763	0		&&			
ANR	5074851	PtrMemberAccess	vsud -> inInstance		5074763	0					
ANR	5074852	Identifier	vsud		5074763	0					
ANR	5074853	Identifier	inInstance		5074763	1					
ANR	5074854	EqualityExpression	"strcasecmp ( ( const char * ) name , ""item"" ) == 0"		5074763	1		==			
ANR	5074855	CallExpression	"strcasecmp ( ( const char * ) name , ""item"" )"		5074763	0					
ANR	5074856	Callee	strcasecmp		5074763	0					
ANR	5074857	Identifier	strcasecmp		5074763	0					
ANR	5074858	ArgumentList	( const char * ) name		5074763	1					
ANR	5074859	Argument	( const char * ) name		5074763	0					
ANR	5074860	CastExpression	( const char * ) name		5074763	0					
ANR	5074861	CastTarget	const char *		5074763	0					
ANR	5074862	Identifier	name		5074763	1					
ANR	5074863	Argument	"""item"""		5074763	1					
ANR	5074864	PrimaryExpression	"""item"""		5074763	0					
ANR	5074865	PrimaryExpression	0		5074763	1					
ANR	5074866	CompoundStatement		17:76:683:683	5074763	1					
ANR	5074867	ExpressionStatement	vsud -> currentResult -> securityGroups = vsud -> currentSecurityGroups	983:8:37758:37823	5074763	0	True				
ANR	5074868	AssignmentExpression	vsud -> currentResult -> securityGroups = vsud -> currentSecurityGroups		5074763	0		=			
ANR	5074869	PtrMemberAccess	vsud -> currentResult -> securityGroups		5074763	0					
ANR	5074870	PtrMemberAccess	vsud -> currentResult		5074763	0					
ANR	5074871	Identifier	vsud		5074763	0					
ANR	5074872	Identifier	currentResult		5074763	1					
ANR	5074873	Identifier	securityGroups		5074763	1					
ANR	5074874	PtrMemberAccess	vsud -> currentSecurityGroups		5074763	1					
ANR	5074875	Identifier	vsud		5074763	0					
ANR	5074876	Identifier	currentSecurityGroups		5074763	1					
ANR	5074877	ExpressionStatement	vsud -> results . push_back ( * vsud -> currentResult )	984:8:37833:37881	5074763	1	True				
ANR	5074878	CallExpression	vsud -> results . push_back ( * vsud -> currentResult )		5074763	0					
ANR	5074879	Callee	vsud -> results . push_back		5074763	0					
ANR	5074880	MemberAccess	vsud -> results . push_back		5074763	0					
ANR	5074881	PtrMemberAccess	vsud -> results		5074763	0					
ANR	5074882	Identifier	vsud		5074763	0					
ANR	5074883	Identifier	results		5074763	1					
ANR	5074884	Identifier	push_back		5074763	1					
ANR	5074885	ArgumentList	* vsud -> currentResult		5074763	1					
ANR	5074886	Argument	* vsud -> currentResult		5074763	0					
ANR	5074887	UnaryOperationExpression	* vsud -> currentResult		5074763	0					
ANR	5074888	UnaryOperator	*		5074763	0					
ANR	5074889	PtrMemberAccess	vsud -> currentResult		5074763	1					
ANR	5074890	Identifier	vsud		5074763	0					
ANR	5074891	Identifier	currentResult		5074763	1					
ANR	5074892	Statement	delete	985:8:37891:37896	5074763	2	True				
ANR	5074893	ExpressionStatement	vsud -> currentResult	985:15:37898:37917	5074763	3	True				
ANR	5074894	PtrMemberAccess	vsud -> currentResult		5074763	0					
ANR	5074895	Identifier	vsud		5074763	0					
ANR	5074896	Identifier	currentResult		5074763	1					
ANR	5074897	ExpressionStatement	vsud -> currentResult = NULL	986:8:37927:37953	5074763	4	True				
ANR	5074898	AssignmentExpression	vsud -> currentResult = NULL		5074763	0		=			
ANR	5074899	PtrMemberAccess	vsud -> currentResult		5074763	0					
ANR	5074900	Identifier	vsud		5074763	0					
ANR	5074901	Identifier	currentResult		5074763	1					
ANR	5074902	Identifier	NULL		5074763	1					
ANR	5074903	ExpressionStatement	vsud -> inInstance = false	987:8:37963:37987	5074763	5	True				
ANR	5074904	AssignmentExpression	vsud -> inInstance = false		5074763	0		=			
ANR	5074905	PtrMemberAccess	vsud -> inInstance		5074763	0					
ANR	5074906	Identifier	vsud		5074763	0					
ANR	5074907	Identifier	inInstance		5074763	1					
ANR	5074908	Identifier	false		5074763	1					
ANR	5074909	ReturnStatement	return ;	988:8:37997:38003	5074763	6	True				
ANR	5074910	IfStatement	"if ( vsud -> inInstancesSet && strcasecmp ( ( const char * ) name , ""instancesSet"" ) == 0 )"		5074763	3					
ANR	5074911	Condition	"vsud -> inInstancesSet && strcasecmp ( ( const char * ) name , ""instancesSet"" ) == 0"	991:8:38024:38100	5074763	0	True				
ANR	5074912	AndExpression	"vsud -> inInstancesSet && strcasecmp ( ( const char * ) name , ""instancesSet"" ) == 0"		5074763	0		&&			
ANR	5074913	PtrMemberAccess	vsud -> inInstancesSet		5074763	0					
ANR	5074914	Identifier	vsud		5074763	0					
ANR	5074915	Identifier	inInstancesSet		5074763	1					
ANR	5074916	EqualityExpression	"strcasecmp ( ( const char * ) name , ""instancesSet"" ) == 0"		5074763	1		==			
ANR	5074917	CallExpression	"strcasecmp ( ( const char * ) name , ""instancesSet"" )"		5074763	0					
ANR	5074918	Callee	strcasecmp		5074763	0					
ANR	5074919	Identifier	strcasecmp		5074763	0					
ANR	5074920	ArgumentList	( const char * ) name		5074763	1					
ANR	5074921	Argument	( const char * ) name		5074763	0					
ANR	5074922	CastExpression	( const char * ) name		5074763	0					
ANR	5074923	CastTarget	const char *		5074763	0					
ANR	5074924	Identifier	name		5074763	1					
ANR	5074925	Argument	"""instancesSet"""		5074763	1					
ANR	5074926	PrimaryExpression	"""instancesSet"""		5074763	0					
ANR	5074927	PrimaryExpression	0		5074763	1					
ANR	5074928	CompoundStatement		29:88:1252:1252	5074763	1					
ANR	5074929	ExpressionStatement	vsud -> inInstancesSet = false	992:8:38114:38142	5074763	0	True				
ANR	5074930	AssignmentExpression	vsud -> inInstancesSet = false		5074763	0		=			
ANR	5074931	PtrMemberAccess	vsud -> inInstancesSet		5074763	0					
ANR	5074932	Identifier	vsud		5074763	0					
ANR	5074933	Identifier	inInstancesSet		5074763	1					
ANR	5074934	Identifier	false		5074763	1					
ANR	5074935	ReturnStatement	return ;	993:8:38152:38158	5074763	1	True				
ANR	5074936	IfStatement	"if ( strcasecmp ( ( const char * ) name , ""instanceState"" ) == 0 )"		5074763	4					
ANR	5074937	Condition	"strcasecmp ( ( const char * ) name , ""instanceState"" ) == 0"	996:8:38175:38228	5074763	0	True				
ANR	5074938	EqualityExpression	"strcasecmp ( ( const char * ) name , ""instanceState"" ) == 0"		5074763	0		==			
ANR	5074939	CallExpression	"strcasecmp ( ( const char * ) name , ""instanceState"" )"		5074763	0					
ANR	5074940	Callee	strcasecmp		5074763	0					
ANR	5074941	Identifier	strcasecmp		5074763	0					
ANR	5074942	ArgumentList	( const char * ) name		5074763	1					
ANR	5074943	Argument	( const char * ) name		5074763	0					
ANR	5074944	CastExpression	( const char * ) name		5074763	0					
ANR	5074945	CastTarget	const char *		5074763	0					
ANR	5074946	Identifier	name		5074763	1					
ANR	5074947	Argument	"""instanceState"""		5074763	1					
ANR	5074948	PrimaryExpression	"""instanceState"""		5074763	0					
ANR	5074949	PrimaryExpression	0		5074763	1					
ANR	5074950	CompoundStatement		34:65:1380:1380	5074763	1					
ANR	5074951	ExpressionStatement	vsud -> inInstanceState = false	997:8:38242:38271	5074763	0	True				
ANR	5074952	AssignmentExpression	vsud -> inInstanceState = false		5074763	0		=			
ANR	5074953	PtrMemberAccess	vsud -> inInstanceState		5074763	0					
ANR	5074954	Identifier	vsud		5074763	0					
ANR	5074955	Identifier	inInstanceState		5074763	1					
ANR	5074956	Identifier	false		5074763	1					
ANR	5074957	ReturnStatement	return ;	998:8:38281:38287	5074763	1	True				
ANR	5074958	ExpressionStatement	vsud -> inWhichTag = vmStatusUD :: NONE	1001:4:38304:38339	5074763	5	True				
ANR	5074959	AssignmentExpression	vsud -> inWhichTag = vmStatusUD :: NONE		5074763	0		=			
ANR	5074960	PtrMemberAccess	vsud -> inWhichTag		5074763	0					
ANR	5074961	Identifier	vsud		5074763	0					
ANR	5074962	Identifier	inWhichTag		5074763	1					
ANR	5074963	Identifier	vmStatusUD :: NONE		5074763	1					
ANR	5074964	ReturnType	void		5074763	1					
ANR	5074965	Identifier	vmStatusEEH		5074763	2					
ANR	5074966	ParameterList	"void * vUserData , const XML_Char * name"		5074763	3					
ANR	5074967	Parameter	void * vUserData	963:18:36809:36824	5074763	0	True				
ANR	5074968	ParameterType	void *		5074763	0					
ANR	5074969	Identifier	vUserData		5074763	1					
ANR	5074970	Parameter	const XML_Char * name	963:36:36827:36847	5074763	1	True				
ANR	5074971	ParameterType	const XML_Char *		5074763	0					
ANR	5074972	Identifier	name		5074763	1					
ANR	5074973	CFGEntryNode	ENTRY		5074763		True				
ANR	5074974	CFGExitNode	EXIT		5074763		True				
ANR	5074975	Symbol	vsud -> currentResult		5074763						
ANR	5074976	Symbol	NULL		5074763						
ANR	5074977	Symbol	* * vsud		5074763						
ANR	5074978	Symbol	vsud -> inInstanceState		5074763						
ANR	5074979	Symbol	* vsud		5074763						
ANR	5074980	Symbol	false		5074763						
ANR	5074981	Symbol	vsud -> inWhichTag		5074763						
ANR	5074982	Symbol	vmStatusUD :: NONE		5074763						
ANR	5074983	Symbol	vsud -> currentSecurityGroups		5074763						
ANR	5074984	Symbol	vsud -> currentResult -> securityGroups		5074763						
ANR	5074985	Symbol	* vsud -> currentResult		5074763						
ANR	5074986	Symbol	vsud -> results		5074763						
ANR	5074987	Symbol	vsud -> currentSecurityGroup		5074763						
ANR	5074988	Symbol	vUserData		5074763						
ANR	5074989	Symbol	vsud -> inInstance		5074763						
ANR	5074990	Symbol	name		5074763						
ANR	5074991	Symbol	vsud -> inGroupSet		5074763						
ANR	5074992	Symbol	vsud -> inInstancesSet		5074763						
ANR	5074993	Symbol	vsud		5074763						
ANR	5074994	Symbol	vsud -> inGroup		5074763						
ANR	5074995	Symbol	strcasecmp		5074763						
ANR	5074996	Function	AmazonVMStatusAll :: SendRequest	1004:0:38345:38848							
ANR	5074997	FunctionDef	AmazonVMStatusAll :: SendRequest ()		5074996	0					
ANR	5074998	CompoundStatement		1004:38:38383:38848	5074996	0					
ANR	5074999	IdentifierDeclStatement	bool result = AmazonRequest :: SendRequest ( ) ;	1005:4:38389:38431	5074996	0	True				
ANR	5075000	IdentifierDecl	result = AmazonRequest :: SendRequest ( )		5074996	0					
ANR	5075001	IdentifierDeclType	bool		5074996	0					
ANR	5075002	Identifier	result		5074996	1					
ANR	5075003	AssignmentExpression	result = AmazonRequest :: SendRequest ( )		5074996	2		=			
ANR	5075004	Identifier	result		5074996	0					
ANR	5075005	CallExpression	AmazonRequest :: SendRequest ( )		5074996	1					
ANR	5075006	Callee	AmazonRequest :: SendRequest		5074996	0					
ANR	5075007	Identifier	AmazonRequest :: SendRequest		5074996	0					
ANR	5075008	ArgumentList			5074996	1					
ANR	5075009	IfStatement	if ( result )		5074996	1					
ANR	5075010	Condition	result	1006:8:38441:38446	5074996	0	True				
ANR	5075011	Identifier	result		5074996	0					
ANR	5075012	CompoundStatement		5:8:118:158	5074996	1					
ANR	5075013	IdentifierDeclStatement	vmStatusUD vsud ( this -> results ) ;	1007:8:38460:38492	5074996	0	True				
ANR	5075014	IdentifierDecl	vsud ( this -> results )		5074996	0					
ANR	5075015	IdentifierDeclType	vmStatusUD		5074996	0					
ANR	5075016	Identifier	vsud		5074996	1					
ANR	5075017	PtrMemberAccess	this -> results		5074996	2					
ANR	5075018	Identifier	this		5074996	0					
ANR	5075019	Identifier	results		5074996	1					
ANR	5075020	IdentifierDeclStatement	XML_Parser xp = XML_ParserCreate ( NULL ) ;	1008:8:38502:38542	5074996	1	True				
ANR	5075021	IdentifierDecl	xp = XML_ParserCreate ( NULL )		5074996	0					
ANR	5075022	IdentifierDeclType	XML_Parser		5074996	0					
ANR	5075023	Identifier	xp		5074996	1					
ANR	5075024	AssignmentExpression	xp = XML_ParserCreate ( NULL )		5074996	2		=			
ANR	5075025	Identifier	xp		5074996	0					
ANR	5075026	CallExpression	XML_ParserCreate ( NULL )		5074996	1					
ANR	5075027	Callee	XML_ParserCreate		5074996	0					
ANR	5075028	Identifier	XML_ParserCreate		5074996	0					
ANR	5075029	ArgumentList	NULL		5074996	1					
ANR	5075030	Argument	NULL		5074996	0					
ANR	5075031	Identifier	NULL		5074996	0					
ANR	5075032	ExpressionStatement	"XML_SetElementHandler ( xp , & vmStatusESH , & vmStatusEEH )"	1009:8:38552:38609	5074996	2	True				
ANR	5075033	CallExpression	"XML_SetElementHandler ( xp , & vmStatusESH , & vmStatusEEH )"		5074996	0					
ANR	5075034	Callee	XML_SetElementHandler		5074996	0					
ANR	5075035	Identifier	XML_SetElementHandler		5074996	0					
ANR	5075036	ArgumentList	xp		5074996	1					
ANR	5075037	Argument	xp		5074996	0					
ANR	5075038	Identifier	xp		5074996	0					
ANR	5075039	Argument	& vmStatusESH		5074996	1					
ANR	5075040	UnaryOperationExpression	& vmStatusESH		5074996	0					
ANR	5075041	UnaryOperator	&		5074996	0					
ANR	5075042	Identifier	vmStatusESH		5074996	1					
ANR	5075043	Argument	& vmStatusEEH		5074996	2					
ANR	5075044	UnaryOperationExpression	& vmStatusEEH		5074996	0					
ANR	5075045	UnaryOperator	&		5074996	0					
ANR	5075046	Identifier	vmStatusEEH		5074996	1					
ANR	5075047	ExpressionStatement	"XML_SetCharacterDataHandler ( xp , & vmStatusCDH )"	1010:8:38619:38667	5074996	3	True				
ANR	5075048	CallExpression	"XML_SetCharacterDataHandler ( xp , & vmStatusCDH )"		5074996	0					
ANR	5075049	Callee	XML_SetCharacterDataHandler		5074996	0					
ANR	5075050	Identifier	XML_SetCharacterDataHandler		5074996	0					
ANR	5075051	ArgumentList	xp		5074996	1					
ANR	5075052	Argument	xp		5074996	0					
ANR	5075053	Identifier	xp		5074996	0					
ANR	5075054	Argument	& vmStatusCDH		5074996	1					
ANR	5075055	UnaryOperationExpression	& vmStatusCDH		5074996	0					
ANR	5075056	UnaryOperator	&		5074996	0					
ANR	5075057	Identifier	vmStatusCDH		5074996	1					
ANR	5075058	ExpressionStatement	"XML_SetUserData ( xp , & vsud )"	1011:8:38677:38706	5074996	4	True				
ANR	5075059	CallExpression	"XML_SetUserData ( xp , & vsud )"		5074996	0					
ANR	5075060	Callee	XML_SetUserData		5074996	0					
ANR	5075061	Identifier	XML_SetUserData		5074996	0					
ANR	5075062	ArgumentList	xp		5074996	1					
ANR	5075063	Argument	xp		5074996	0					
ANR	5075064	Identifier	xp		5074996	0					
ANR	5075065	Argument	& vsud		5074996	1					
ANR	5075066	UnaryOperationExpression	& vsud		5074996	0					
ANR	5075067	UnaryOperator	&		5074996	0					
ANR	5075068	Identifier	vsud		5074996	1					
ANR	5075069	ExpressionStatement	"XML_Parse ( xp , this -> resultString . c_str ( ) , this -> resultString . length ( ) , 1 )"	1012:8:38716:38791	5074996	5	True				
ANR	5075070	CallExpression	"XML_Parse ( xp , this -> resultString . c_str ( ) , this -> resultString . length ( ) , 1 )"		5074996	0					
ANR	5075071	Callee	XML_Parse		5074996	0					
ANR	5075072	Identifier	XML_Parse		5074996	0					
ANR	5075073	ArgumentList	xp		5074996	1					
ANR	5075074	Argument	xp		5074996	0					
ANR	5075075	Identifier	xp		5074996	0					
ANR	5075076	Argument	this -> resultString . c_str ( )		5074996	1					
ANR	5075077	CallExpression	this -> resultString . c_str ( )		5074996	0					
ANR	5075078	Callee	this -> resultString . c_str		5074996	0					
ANR	5075079	MemberAccess	this -> resultString . c_str		5074996	0					
ANR	5075080	PtrMemberAccess	this -> resultString		5074996	0					
ANR	5075081	Identifier	this		5074996	0					
ANR	5075082	Identifier	resultString		5074996	1					
ANR	5075083	Identifier	c_str		5074996	1					
ANR	5075084	ArgumentList			5074996	1					
ANR	5075085	Argument	this -> resultString . length ( )		5074996	2					
ANR	5075086	CallExpression	this -> resultString . length ( )		5074996	0					
ANR	5075087	Callee	this -> resultString . length		5074996	0					
ANR	5075088	MemberAccess	this -> resultString . length		5074996	0					
ANR	5075089	PtrMemberAccess	this -> resultString		5074996	0					
ANR	5075090	Identifier	this		5074996	0					
ANR	5075091	Identifier	resultString		5074996	1					
ANR	5075092	Identifier	length		5074996	1					
ANR	5075093	ArgumentList			5074996	1					
ANR	5075094	Argument	1		5074996	3					
ANR	5075095	PrimaryExpression	1		5074996	0					
ANR	5075096	ExpressionStatement	XML_ParserFree ( xp )	1013:8:38801:38821	5074996	6	True				
ANR	5075097	CallExpression	XML_ParserFree ( xp )		5074996	0					
ANR	5075098	Callee	XML_ParserFree		5074996	0					
ANR	5075099	Identifier	XML_ParserFree		5074996	0					
ANR	5075100	ArgumentList	xp		5074996	1					
ANR	5075101	Argument	xp		5074996	0					
ANR	5075102	Identifier	xp		5074996	0					
ANR	5075103	ReturnStatement	return result ;	1015:4:38833:38846	5074996	2	True				
ANR	5075104	Identifier	result		5074996	0					
ANR	5075105	ReturnType	bool		5074996	1					
ANR	5075106	Identifier	AmazonVMStatusAll :: SendRequest		5074996	2					
ANR	5075107	ParameterList			5074996	3					
ANR	5075108	CFGEntryNode	ENTRY		5074996		True				
ANR	5075109	CFGExitNode	EXIT		5074996		True				
ANR	5075110	Symbol	& vmStatusCDH		5074996						
ANR	5075111	Symbol	& vmStatusEEH		5074996						
ANR	5075112	Symbol	NULL		5074996						
ANR	5075113	Symbol	AmazonRequest :: SendRequest		5074996						
ANR	5075114	Symbol	this -> resultString		5074996						
ANR	5075115	Symbol	this -> resultString . length		5074996						
ANR	5075116	Symbol	this -> resultString . c_str		5074996						
ANR	5075117	Symbol	this		5074996						
ANR	5075118	Symbol	result		5074996						
ANR	5075119	Symbol	* this		5074996						
ANR	5075120	Symbol	& vmStatusESH		5074996						
ANR	5075121	Symbol	& vsud		5074996						
ANR	5075122	Symbol	xp		5074996						
ANR	5075123	Symbol	vsud		5074996						
ANR	5075124	Symbol	XML_ParserCreate		5074996						
ANR	5075125	Function	AmazonVMStatusAll :: workerFunction	1019:0:38936:41428							
ANR	5075126	FunctionDef	"AmazonVMStatusAll :: workerFunction (char * * argv , int argc , std :: string & result_string)"		5075125	0					
ANR	5075127	CompoundStatement		1019:90:39026:41428	5075125	0					
ANR	5075128	ExpressionStatement	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_STATUS_ALL"" ) == 0 )"	1020:4:39032:39085	5075125	0	True				
ANR	5075129	CallExpression	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_STATUS_ALL"" ) == 0 )"		5075125	0					
ANR	5075130	Callee	assert		5075125	0					
ANR	5075131	Identifier	assert		5075125	0					
ANR	5075132	ArgumentList	"strcmp ( argv [ 0 ] , ""EC2_VM_STATUS_ALL"" ) == 0"		5075125	1					
ANR	5075133	Argument	"strcmp ( argv [ 0 ] , ""EC2_VM_STATUS_ALL"" ) == 0"		5075125	0					
ANR	5075134	EqualityExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_STATUS_ALL"" ) == 0"		5075125	0		==			
ANR	5075135	CallExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_STATUS_ALL"" )"		5075125	0					
ANR	5075136	Callee	strcmp		5075125	0					
ANR	5075137	Identifier	strcmp		5075125	0					
ANR	5075138	ArgumentList	argv [ 0 ]		5075125	1					
ANR	5075139	Argument	argv [ 0 ]		5075125	0					
ANR	5075140	ArrayIndexing	argv [ 0 ]		5075125	0					
ANR	5075141	Identifier	argv		5075125	0					
ANR	5075142	PrimaryExpression	0		5075125	1					
ANR	5075143	Argument	"""EC2_VM_STATUS_ALL"""		5075125	1					
ANR	5075144	PrimaryExpression	"""EC2_VM_STATUS_ALL"""		5075125	0					
ANR	5075145	PrimaryExpression	0		5075125	1					
ANR	5075146	IdentifierDeclStatement	int requestID ;	1025:4:39276:39289	5075125	1	True				
ANR	5075147	IdentifierDecl	requestID		5075125	0					
ANR	5075148	IdentifierDeclType	int		5075125	0					
ANR	5075149	Identifier	requestID		5075125	1					
ANR	5075150	ExpressionStatement	"get_int ( argv [ 1 ] , & requestID )"	1026:4:39295:39326	5075125	2	True				
ANR	5075151	CallExpression	"get_int ( argv [ 1 ] , & requestID )"		5075125	0					
ANR	5075152	Callee	get_int		5075125	0					
ANR	5075153	Identifier	get_int		5075125	0					
ANR	5075154	ArgumentList	argv [ 1 ]		5075125	1					
ANR	5075155	Argument	argv [ 1 ]		5075125	0					
ANR	5075156	ArrayIndexing	argv [ 1 ]		5075125	0					
ANR	5075157	Identifier	argv		5075125	0					
ANR	5075158	PrimaryExpression	1		5075125	1					
ANR	5075159	Argument	& requestID		5075125	1					
ANR	5075160	UnaryOperationExpression	& requestID		5075125	0					
ANR	5075161	UnaryOperator	&		5075125	0					
ANR	5075162	Identifier	requestID		5075125	1					
ANR	5075163	IfStatement	"if ( ! verify_min_number_args ( argc , 5 ) )"		5075125	3					
ANR	5075164	Condition	"! verify_min_number_args ( argc , 5 )"	1028:8:39341:39375	5075125	0	True				
ANR	5075165	UnaryOperationExpression	"! verify_min_number_args ( argc , 5 )"		5075125	0					
ANR	5075166	UnaryOperator	!		5075125	0					
ANR	5075167	CallExpression	"verify_min_number_args ( argc , 5 )"		5075125	1					
ANR	5075168	Callee	verify_min_number_args		5075125	0					
ANR	5075169	Identifier	verify_min_number_args		5075125	0					
ANR	5075170	ArgumentList	argc		5075125	1					
ANR	5075171	Argument	argc		5075125	0					
ANR	5075172	Identifier	argc		5075125	0					
ANR	5075173	Argument	5		5075125	1					
ANR	5075174	PrimaryExpression	5		5075125	0					
ANR	5075175	CompoundStatement		10:46:352:352	5075125	1					
ANR	5075176	ExpressionStatement	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"	1029:8:39389:39464	5075125	0	True				
ANR	5075177	AssignmentExpression	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		5075125	0		=			
ANR	5075178	Identifier	result_string		5075125	0					
ANR	5075179	CallExpression	"create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		5075125	1					
ANR	5075180	Callee	create_failure_result		5075125	0					
ANR	5075181	Identifier	create_failure_result		5075125	0					
ANR	5075182	ArgumentList	requestID		5075125	1					
ANR	5075183	Argument	requestID		5075125	0					
ANR	5075184	Identifier	requestID		5075125	0					
ANR	5075185	Argument	"""Wrong_Argument_Number"""		5075125	1					
ANR	5075186	PrimaryExpression	"""Wrong_Argument_Number"""		5075125	0					
ANR	5075187	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 5 , argv [ 0 ] )"	1030:8:39474:39586	5075125	1	True				
ANR	5075188	CallExpression	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 5 , argv [ 0 ] )"		5075125	0					
ANR	5075189	Callee	dprintf		5075125	0					
ANR	5075190	Identifier	dprintf		5075125	0					
ANR	5075191	ArgumentList	D_ALWAYS		5075125	1					
ANR	5075192	Argument	D_ALWAYS		5075125	0					
ANR	5075193	Identifier	D_ALWAYS		5075125	0					
ANR	5075194	Argument	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		5075125	1					
ANR	5075195	PrimaryExpression	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		5075125	0					
ANR	5075196	Argument	argc		5075125	2					
ANR	5075197	Identifier	argc		5075125	0					
ANR	5075198	Argument	5		5075125	3					
ANR	5075199	PrimaryExpression	5		5075125	0					
ANR	5075200	Argument	argv [ 0 ]		5075125	4					
ANR	5075201	ArrayIndexing	argv [ 0 ]		5075125	0					
ANR	5075202	Identifier	argv		5075125	0					
ANR	5075203	PrimaryExpression	0		5075125	1					
ANR	5075204	ReturnStatement	return false ;	1032:8:39596:39608	5075125	2	True				
ANR	5075205	Identifier	false		5075125	0					
ANR	5075206	IdentifierDeclStatement	AmazonVMStatusAll saRequest ;	1036:4:39670:39697	5075125	4	True				
ANR	5075207	IdentifierDecl	saRequest		5075125	0					
ANR	5075208	IdentifierDeclType	AmazonVMStatusAll		5075125	0					
ANR	5075209	Identifier	saRequest		5075125	1					
ANR	5075210	ExpressionStatement	saRequest . serviceURL = argv [ 2 ]	1037:4:39703:39733	5075125	5	True				
ANR	5075211	AssignmentExpression	saRequest . serviceURL = argv [ 2 ]		5075125	0		=			
ANR	5075212	MemberAccess	saRequest . serviceURL		5075125	0					
ANR	5075213	Identifier	saRequest		5075125	0					
ANR	5075214	Identifier	serviceURL		5075125	1					
ANR	5075215	ArrayIndexing	argv [ 2 ]		5075125	1					
ANR	5075216	Identifier	argv		5075125	0					
ANR	5075217	PrimaryExpression	2		5075125	1					
ANR	5075218	ExpressionStatement	saRequest . accessKeyFile = argv [ 3 ]	1038:4:39739:39772	5075125	6	True				
ANR	5075219	AssignmentExpression	saRequest . accessKeyFile = argv [ 3 ]		5075125	0		=			
ANR	5075220	MemberAccess	saRequest . accessKeyFile		5075125	0					
ANR	5075221	Identifier	saRequest		5075125	0					
ANR	5075222	Identifier	accessKeyFile		5075125	1					
ANR	5075223	ArrayIndexing	argv [ 3 ]		5075125	1					
ANR	5075224	Identifier	argv		5075125	0					
ANR	5075225	PrimaryExpression	3		5075125	1					
ANR	5075226	ExpressionStatement	saRequest . secretKeyFile = argv [ 4 ]	1039:4:39778:39811	5075125	7	True				
ANR	5075227	AssignmentExpression	saRequest . secretKeyFile = argv [ 4 ]		5075125	0		=			
ANR	5075228	MemberAccess	saRequest . secretKeyFile		5075125	0					
ANR	5075229	Identifier	saRequest		5075125	0					
ANR	5075230	Identifier	secretKeyFile		5075125	1					
ANR	5075231	ArrayIndexing	argv [ 4 ]		5075125	1					
ANR	5075232	Identifier	argv		5075125	0					
ANR	5075233	PrimaryExpression	4		5075125	1					
ANR	5075234	ExpressionStatement	"saRequest . query_parameters [ ""Action"" ] = ""DescribeInstances"""	1040:4:39817:39877	5075125	8	True				
ANR	5075235	AssignmentExpression	"saRequest . query_parameters [ ""Action"" ] = ""DescribeInstances"""		5075125	0		=			
ANR	5075236	ArrayIndexing	"saRequest . query_parameters [ ""Action"" ]"		5075125	0					
ANR	5075237	MemberAccess	saRequest . query_parameters		5075125	0					
ANR	5075238	Identifier	saRequest		5075125	0					
ANR	5075239	Identifier	query_parameters		5075125	1					
ANR	5075240	PrimaryExpression	"""Action"""		5075125	1					
ANR	5075241	PrimaryExpression	"""DescribeInstances"""		5075125	1					
ANR	5075242	IfStatement	if ( ! saRequest . SendRequest ( ) )		5075125	9					
ANR	5075243	Condition	! saRequest . SendRequest ( )	1043:8:39917:39941	5075125	0	True				
ANR	5075244	UnaryOperationExpression	! saRequest . SendRequest ( )		5075125	0					
ANR	5075245	UnaryOperator	!		5075125	0					
ANR	5075246	CallExpression	saRequest . SendRequest ( )		5075125	1					
ANR	5075247	Callee	saRequest . SendRequest		5075125	0					
ANR	5075248	MemberAccess	saRequest . SendRequest		5075125	0					
ANR	5075249	Identifier	saRequest		5075125	0					
ANR	5075250	Identifier	SendRequest		5075125	1					
ANR	5075251	ArgumentList			5075125	1					
ANR	5075252	CompoundStatement		25:36:918:918	5075125	1					
ANR	5075253	ExpressionStatement	"result_string = create_failure_result ( requestID , saRequest . errorMessage . c_str ( ) , saRequest . errorCode . c_str ( ) )"	1044:8:39955:40090	5075125	0	True				
ANR	5075254	AssignmentExpression	"result_string = create_failure_result ( requestID , saRequest . errorMessage . c_str ( ) , saRequest . errorCode . c_str ( ) )"		5075125	0		=			
ANR	5075255	Identifier	result_string		5075125	0					
ANR	5075256	CallExpression	"create_failure_result ( requestID , saRequest . errorMessage . c_str ( ) , saRequest . errorCode . c_str ( ) )"		5075125	1					
ANR	5075257	Callee	create_failure_result		5075125	0					
ANR	5075258	Identifier	create_failure_result		5075125	0					
ANR	5075259	ArgumentList	requestID		5075125	1					
ANR	5075260	Argument	requestID		5075125	0					
ANR	5075261	Identifier	requestID		5075125	0					
ANR	5075262	Argument	saRequest . errorMessage . c_str ( )		5075125	1					
ANR	5075263	CallExpression	saRequest . errorMessage . c_str ( )		5075125	0					
ANR	5075264	Callee	saRequest . errorMessage . c_str		5075125	0					
ANR	5075265	MemberAccess	saRequest . errorMessage . c_str		5075125	0					
ANR	5075266	MemberAccess	saRequest . errorMessage		5075125	0					
ANR	5075267	Identifier	saRequest		5075125	0					
ANR	5075268	Identifier	errorMessage		5075125	1					
ANR	5075269	Identifier	c_str		5075125	1					
ANR	5075270	ArgumentList			5075125	1					
ANR	5075271	Argument	saRequest . errorCode . c_str ( )		5075125	2					
ANR	5075272	CallExpression	saRequest . errorCode . c_str ( )		5075125	0					
ANR	5075273	Callee	saRequest . errorCode . c_str		5075125	0					
ANR	5075274	MemberAccess	saRequest . errorCode . c_str		5075125	0					
ANR	5075275	MemberAccess	saRequest . errorCode		5075125	0					
ANR	5075276	Identifier	saRequest		5075125	0					
ANR	5075277	Identifier	errorCode		5075125	1					
ANR	5075278	Identifier	c_str		5075125	1					
ANR	5075279	ArgumentList			5075125	1					
ANR	5075280	ElseStatement	else		5075125	0					
ANR	5075281	CompoundStatement		29:11:1076:1076	5075125	0					
ANR	5075282	IfStatement	if ( saRequest . results . size ( ) == 0 )		5075125	0					
ANR	5075283	Condition	saRequest . results . size ( ) == 0	1048:12:40117:40145	5075125	0	True				
ANR	5075284	EqualityExpression	saRequest . results . size ( ) == 0		5075125	0		==			
ANR	5075285	CallExpression	saRequest . results . size ( )		5075125	0					
ANR	5075286	Callee	saRequest . results . size		5075125	0					
ANR	5075287	MemberAccess	saRequest . results . size		5075125	0					
ANR	5075288	MemberAccess	saRequest . results		5075125	0					
ANR	5075289	Identifier	saRequest		5075125	0					
ANR	5075290	Identifier	results		5075125	1					
ANR	5075291	Identifier	size		5075125	1					
ANR	5075292	ArgumentList			5075125	1					
ANR	5075293	PrimaryExpression	0		5075125	1					
ANR	5075294	CompoundStatement		30:44:1122:1122	5075125	1					
ANR	5075295	ExpressionStatement	"result_string = create_success_result ( requestID , NULL )"	1049:12:40163:40219	5075125	0	True				
ANR	5075296	AssignmentExpression	"result_string = create_success_result ( requestID , NULL )"		5075125	0		=			
ANR	5075297	Identifier	result_string		5075125	0					
ANR	5075298	CallExpression	"create_success_result ( requestID , NULL )"		5075125	1					
ANR	5075299	Callee	create_success_result		5075125	0					
ANR	5075300	Identifier	create_success_result		5075125	0					
ANR	5075301	ArgumentList	requestID		5075125	1					
ANR	5075302	Argument	requestID		5075125	0					
ANR	5075303	Identifier	requestID		5075125	0					
ANR	5075304	Argument	NULL		5075125	1					
ANR	5075305	Identifier	NULL		5075125	0					
ANR	5075306	ElseStatement	else		5075125	0					
ANR	5075307	CompoundStatement		33:12:1223:1244	5075125	0					
ANR	5075308	IdentifierDeclStatement	StringList resultList ;	1051:12:40250:40271	5075125	0	True				
ANR	5075309	IdentifierDecl	resultList		5075125	0					
ANR	5075310	IdentifierDeclType	StringList		5075125	0					
ANR	5075311	Identifier	resultList		5075125	1					
ANR	5075312	ForStatement	for ( unsigned i = 0 ; i < saRequest . results . size ( ) ; ++ i )		5075125	1					
ANR	5075313	ForInit	unsigned i = 0 ;	1052:17:40290:40304	5075125	0	True				
ANR	5075314	IdentifierDeclStatement	unsigned i = 0 ;		5075125	0					
ANR	5075315	IdentifierDecl	i = 0		5075125	0					
ANR	5075316	IdentifierDeclType	unsigned		5075125	0					
ANR	5075317	Identifier	i		5075125	1					
ANR	5075318	AssignmentExpression	i = 0		5075125	2		=			
ANR	5075319	Identifier	i		5075125	0					
ANR	5075320	PrimaryExpression	0		5075125	1					
ANR	5075321	Condition	i < saRequest . results . size ( )	1052:33:40306:40333	5075125	1	True				
ANR	5075322	RelationalExpression	i < saRequest . results . size ( )		5075125	0		<			
ANR	5075323	Identifier	i		5075125	0					
ANR	5075324	CallExpression	saRequest . results . size ( )		5075125	1					
ANR	5075325	Callee	saRequest . results . size		5075125	0					
ANR	5075326	MemberAccess	saRequest . results . size		5075125	0					
ANR	5075327	MemberAccess	saRequest . results		5075125	0					
ANR	5075328	Identifier	saRequest		5075125	0					
ANR	5075329	Identifier	results		5075125	1					
ANR	5075330	Identifier	size		5075125	1					
ANR	5075331	ArgumentList			5075125	1					
ANR	5075332	UnaryExpression	++ i	1052:63:40336:40338	5075125	2	True				
ANR	5075333	IncDec	++		5075125	0					
ANR	5075334	Identifier	i		5075125	1					
ANR	5075335	CompoundStatement		35:16:1333:1380	5075125	3					
ANR	5075336	IdentifierDeclStatement	AmazonStatusResult & asr = saRequest . results [ i ] ;	1053:16:40360:40407	5075125	0	True				
ANR	5075337	IdentifierDecl	& asr = saRequest . results [ i ]		5075125	0					
ANR	5075338	IdentifierDeclType	AmazonStatusResult &		5075125	0					
ANR	5075339	Identifier	asr		5075125	1					
ANR	5075340	AssignmentExpression	& asr = saRequest . results [ i ]		5075125	2		=			
ANR	5075341	Identifier	asr		5075125	0					
ANR	5075342	ArrayIndexing	saRequest . results [ i ]		5075125	1					
ANR	5075343	MemberAccess	saRequest . results		5075125	0					
ANR	5075344	Identifier	saRequest		5075125	0					
ANR	5075345	Identifier	results		5075125	1					
ANR	5075346	Identifier	i		5075125	1					
ANR	5075347	ExpressionStatement	resultList . append ( asr . instance_id . c_str ( ) )	1054:16:40425:40469	5075125	1	True				
ANR	5075348	CallExpression	resultList . append ( asr . instance_id . c_str ( ) )		5075125	0					
ANR	5075349	Callee	resultList . append		5075125	0					
ANR	5075350	MemberAccess	resultList . append		5075125	0					
ANR	5075351	Identifier	resultList		5075125	0					
ANR	5075352	Identifier	append		5075125	1					
ANR	5075353	ArgumentList	asr . instance_id . c_str ( )		5075125	1					
ANR	5075354	Argument	asr . instance_id . c_str ( )		5075125	0					
ANR	5075355	CallExpression	asr . instance_id . c_str ( )		5075125	0					
ANR	5075356	Callee	asr . instance_id . c_str		5075125	0					
ANR	5075357	MemberAccess	asr . instance_id . c_str		5075125	0					
ANR	5075358	MemberAccess	asr . instance_id		5075125	0					
ANR	5075359	Identifier	asr		5075125	0					
ANR	5075360	Identifier	instance_id		5075125	1					
ANR	5075361	Identifier	c_str		5075125	1					
ANR	5075362	ArgumentList			5075125	1					
ANR	5075363	ExpressionStatement	resultList . append ( asr . status . c_str ( ) )	1055:16:40487:40526	5075125	2	True				
ANR	5075364	CallExpression	resultList . append ( asr . status . c_str ( ) )		5075125	0					
ANR	5075365	Callee	resultList . append		5075125	0					
ANR	5075366	MemberAccess	resultList . append		5075125	0					
ANR	5075367	Identifier	resultList		5075125	0					
ANR	5075368	Identifier	append		5075125	1					
ANR	5075369	ArgumentList	asr . status . c_str ( )		5075125	1					
ANR	5075370	Argument	asr . status . c_str ( )		5075125	0					
ANR	5075371	CallExpression	asr . status . c_str ( )		5075125	0					
ANR	5075372	Callee	asr . status . c_str		5075125	0					
ANR	5075373	MemberAccess	asr . status . c_str		5075125	0					
ANR	5075374	MemberAccess	asr . status		5075125	0					
ANR	5075375	Identifier	asr		5075125	0					
ANR	5075376	Identifier	status		5075125	1					
ANR	5075377	Identifier	c_str		5075125	1					
ANR	5075378	ArgumentList			5075125	1					
ANR	5075379	ExpressionStatement	resultList . append ( asr . ami_id . c_str ( ) )	1056:16:40544:40583	5075125	3	True				
ANR	5075380	CallExpression	resultList . append ( asr . ami_id . c_str ( ) )		5075125	0					
ANR	5075381	Callee	resultList . append		5075125	0					
ANR	5075382	MemberAccess	resultList . append		5075125	0					
ANR	5075383	Identifier	resultList		5075125	0					
ANR	5075384	Identifier	append		5075125	1					
ANR	5075385	ArgumentList	asr . ami_id . c_str ( )		5075125	1					
ANR	5075386	Argument	asr . ami_id . c_str ( )		5075125	0					
ANR	5075387	CallExpression	asr . ami_id . c_str ( )		5075125	0					
ANR	5075388	Callee	asr . ami_id . c_str		5075125	0					
ANR	5075389	MemberAccess	asr . ami_id . c_str		5075125	0					
ANR	5075390	MemberAccess	asr . ami_id		5075125	0					
ANR	5075391	Identifier	asr		5075125	0					
ANR	5075392	Identifier	ami_id		5075125	1					
ANR	5075393	Identifier	c_str		5075125	1					
ANR	5075394	ArgumentList			5075125	1					
ANR	5075395	ExpressionStatement	"result_string = create_success_result ( requestID , & resultList )"	1073:12:41328:41392	5075125	2	True				
ANR	5075396	AssignmentExpression	"result_string = create_success_result ( requestID , & resultList )"		5075125	0		=			
ANR	5075397	Identifier	result_string		5075125	0					
ANR	5075398	CallExpression	"create_success_result ( requestID , & resultList )"		5075125	1					
ANR	5075399	Callee	create_success_result		5075125	0					
ANR	5075400	Identifier	create_success_result		5075125	0					
ANR	5075401	ArgumentList	requestID		5075125	1					
ANR	5075402	Argument	requestID		5075125	0					
ANR	5075403	Identifier	requestID		5075125	0					
ANR	5075404	Argument	& resultList		5075125	1					
ANR	5075405	UnaryOperationExpression	& resultList		5075125	0					
ANR	5075406	UnaryOperator	&		5075125	0					
ANR	5075407	Identifier	resultList		5075125	1					
ANR	5075408	ReturnStatement	return true ;	1077:4:41415:41426	5075125	10	True				
ANR	5075409	Identifier	true		5075125	0					
ANR	5075410	ReturnType	bool		5075125	1					
ANR	5075411	Identifier	AmazonVMStatusAll :: workerFunction		5075125	2					
ANR	5075412	ParameterList	"char * * argv , int argc , std :: string & result_string"		5075125	3					
ANR	5075413	Parameter	char * * argv	1019:39:38975:38985	5075125	0	True				
ANR	5075414	ParameterType	char * *		5075125	0					
ANR	5075415	Identifier	argv		5075125	1					
ANR	5075416	Parameter	int argc	1019:52:38988:38995	5075125	1	True				
ANR	5075417	ParameterType	int		5075125	0					
ANR	5075418	Identifier	argc		5075125	1					
ANR	5075419	Parameter	std :: string & result_string	1019:62:38998:39023	5075125	2	True				
ANR	5075420	ParameterType	std :: string &		5075125	0					
ANR	5075421	Identifier	result_string		5075125	1					
ANR	5075422	CFGEntryNode	ENTRY		5075125		True				
ANR	5075423	CFGExitNode	EXIT		5075125		True				
ANR	5075424	Symbol	saRequest . accessKeyFile		5075125						
ANR	5075425	Symbol	saRequest . errorCode . c_str		5075125						
ANR	5075426	Symbol	asr		5075125						
ANR	5075427	Symbol	saRequest . serviceURL		5075125						
ANR	5075428	Symbol	saRequest . secretKeyFile		5075125						
ANR	5075429	Symbol	* argv		5075125						
ANR	5075430	Symbol	argv		5075125						
ANR	5075431	Symbol	& requestID		5075125						
ANR	5075432	Symbol	& resultList		5075125						
ANR	5075433	Symbol	create_success_result		5075125						
ANR	5075434	Symbol	asr . instance_id . c_str		5075125						
ANR	5075435	Symbol	saRequest . results . size		5075125						
ANR	5075436	Symbol	result_string		5075125						
ANR	5075437	Symbol	saRequest . errorCode		5075125						
ANR	5075438	Symbol	asr . status		5075125						
ANR	5075439	Symbol	saRequest . errorMessage . c_str		5075125						
ANR	5075440	Symbol	argc		5075125						
ANR	5075441	Symbol	strcmp		5075125						
ANR	5075442	Symbol	saRequest . errorMessage		5075125						
ANR	5075443	Symbol	* saRequest		5075125						
ANR	5075444	Symbol	NULL		5075125						
ANR	5075445	Symbol	D_ALWAYS		5075125						
ANR	5075446	Symbol	false		5075125						
ANR	5075447	Symbol	asr . ami_id . c_str		5075125						
ANR	5075448	Symbol	i		5075125						
ANR	5075449	Symbol	verify_min_number_args		5075125						
ANR	5075450	Symbol	saRequest . results		5075125						
ANR	5075451	Symbol	asr . ami_id		5075125						
ANR	5075452	Symbol	saRequest . query_parameters		5075125						
ANR	5075453	Symbol	* i		5075125						
ANR	5075454	Symbol	saRequest . SendRequest		5075125						
ANR	5075455	Symbol	* saRequest . results		5075125						
ANR	5075456	Symbol	requestID		5075125						
ANR	5075457	Symbol	create_failure_result		5075125						
ANR	5075458	Symbol	saRequest		5075125						
ANR	5075459	Symbol	asr . status . c_str		5075125						
ANR	5075460	Symbol	true		5075125						
ANR	5075461	Symbol	* saRequest . query_parameters		5075125						
ANR	5075462	Symbol	asr . instance_id		5075125						
ANR	5075463	Symbol	resultList		5075125						
ANR	5075464	Function	AmazonVMRunningKeypair :: AmazonVMRunningKeypair	1082:0:41511:41562							
ANR	5075465	FunctionDef	AmazonVMRunningKeypair :: AmazonVMRunningKeypair ()		5075464	0					
ANR	5075466	CompoundStatement		1082:49:41560:41562	5075464	0					
ANR	5075467	Identifier	AmazonVMRunningKeypair :: AmazonVMRunningKeypair		5075464	1					
ANR	5075468	ParameterList			5075464	2					
ANR	5075469	CFGEntryNode	ENTRY		5075464		True				
ANR	5075470	CFGExitNode	EXIT		5075464		True				
ANR	5075471	Function	AmazonVMRunningKeypair :: ~AmazonVMRunningKeypair	1084:0:41565:41617							
ANR	5075472	FunctionDef	AmazonVMRunningKeypair :: ~AmazonVMRunningKeypair ()		5075471	0					
ANR	5075473	CompoundStatement		1084:50:41615:41617	5075471	0					
ANR	5075474	Identifier	AmazonVMRunningKeypair :: ~AmazonVMRunningKeypair		5075471	1					
ANR	5075475	ParameterList			5075471	2					
ANR	5075476	CFGEntryNode	ENTRY		5075471		True				
ANR	5075477	CFGExitNode	EXIT		5075471		True				
ANR	5075478	Function	AmazonVMRunningKeypair :: workerFunction	1087:0:41710:43688							
ANR	5075479	FunctionDef	"AmazonVMRunningKeypair :: workerFunction (char * * argv , int argc , std :: string & result_string)"		5075478	0					
ANR	5075480	CompoundStatement		1087:95:41805:43688	5075478	0					
ANR	5075481	ExpressionStatement	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_RUNNING_KEYPAIR"" ) == 0 )"	1088:4:41811:41869	5075478	0	True				
ANR	5075482	CallExpression	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_RUNNING_KEYPAIR"" ) == 0 )"		5075478	0					
ANR	5075483	Callee	assert		5075478	0					
ANR	5075484	Identifier	assert		5075478	0					
ANR	5075485	ArgumentList	"strcmp ( argv [ 0 ] , ""EC2_VM_RUNNING_KEYPAIR"" ) == 0"		5075478	1					
ANR	5075486	Argument	"strcmp ( argv [ 0 ] , ""EC2_VM_RUNNING_KEYPAIR"" ) == 0"		5075478	0					
ANR	5075487	EqualityExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_RUNNING_KEYPAIR"" ) == 0"		5075478	0		==			
ANR	5075488	CallExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_RUNNING_KEYPAIR"" )"		5075478	0					
ANR	5075489	Callee	strcmp		5075478	0					
ANR	5075490	Identifier	strcmp		5075478	0					
ANR	5075491	ArgumentList	argv [ 0 ]		5075478	1					
ANR	5075492	Argument	argv [ 0 ]		5075478	0					
ANR	5075493	ArrayIndexing	argv [ 0 ]		5075478	0					
ANR	5075494	Identifier	argv		5075478	0					
ANR	5075495	PrimaryExpression	0		5075478	1					
ANR	5075496	Argument	"""EC2_VM_RUNNING_KEYPAIR"""		5075478	1					
ANR	5075497	PrimaryExpression	"""EC2_VM_RUNNING_KEYPAIR"""		5075478	0					
ANR	5075498	PrimaryExpression	0		5075478	1					
ANR	5075499	IdentifierDeclStatement	int requestID ;	1093:4:42060:42073	5075478	1	True				
ANR	5075500	IdentifierDecl	requestID		5075478	0					
ANR	5075501	IdentifierDeclType	int		5075478	0					
ANR	5075502	Identifier	requestID		5075478	1					
ANR	5075503	ExpressionStatement	"get_int ( argv [ 1 ] , & requestID )"	1094:4:42079:42110	5075478	2	True				
ANR	5075504	CallExpression	"get_int ( argv [ 1 ] , & requestID )"		5075478	0					
ANR	5075505	Callee	get_int		5075478	0					
ANR	5075506	Identifier	get_int		5075478	0					
ANR	5075507	ArgumentList	argv [ 1 ]		5075478	1					
ANR	5075508	Argument	argv [ 1 ]		5075478	0					
ANR	5075509	ArrayIndexing	argv [ 1 ]		5075478	0					
ANR	5075510	Identifier	argv		5075478	0					
ANR	5075511	PrimaryExpression	1		5075478	1					
ANR	5075512	Argument	& requestID		5075478	1					
ANR	5075513	UnaryOperationExpression	& requestID		5075478	0					
ANR	5075514	UnaryOperator	&		5075478	0					
ANR	5075515	Identifier	requestID		5075478	1					
ANR	5075516	IfStatement	"if ( ! verify_min_number_args ( argc , 5 ) )"		5075478	3					
ANR	5075517	Condition	"! verify_min_number_args ( argc , 5 )"	1096:8:42125:42159	5075478	0	True				
ANR	5075518	UnaryOperationExpression	"! verify_min_number_args ( argc , 5 )"		5075478	0					
ANR	5075519	UnaryOperator	!		5075478	0					
ANR	5075520	CallExpression	"verify_min_number_args ( argc , 5 )"		5075478	1					
ANR	5075521	Callee	verify_min_number_args		5075478	0					
ANR	5075522	Identifier	verify_min_number_args		5075478	0					
ANR	5075523	ArgumentList	argc		5075478	1					
ANR	5075524	Argument	argc		5075478	0					
ANR	5075525	Identifier	argc		5075478	0					
ANR	5075526	Argument	5		5075478	1					
ANR	5075527	PrimaryExpression	5		5075478	0					
ANR	5075528	CompoundStatement		10:46:357:357	5075478	1					
ANR	5075529	ExpressionStatement	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"	1097:8:42173:42248	5075478	0	True				
ANR	5075530	AssignmentExpression	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		5075478	0		=			
ANR	5075531	Identifier	result_string		5075478	0					
ANR	5075532	CallExpression	"create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		5075478	1					
ANR	5075533	Callee	create_failure_result		5075478	0					
ANR	5075534	Identifier	create_failure_result		5075478	0					
ANR	5075535	ArgumentList	requestID		5075478	1					
ANR	5075536	Argument	requestID		5075478	0					
ANR	5075537	Identifier	requestID		5075478	0					
ANR	5075538	Argument	"""Wrong_Argument_Number"""		5075478	1					
ANR	5075539	PrimaryExpression	"""Wrong_Argument_Number"""		5075478	0					
ANR	5075540	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 5 , argv [ 0 ] )"	1098:8:42258:42370	5075478	1	True				
ANR	5075541	CallExpression	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 5 , argv [ 0 ] )"		5075478	0					
ANR	5075542	Callee	dprintf		5075478	0					
ANR	5075543	Identifier	dprintf		5075478	0					
ANR	5075544	ArgumentList	D_ALWAYS		5075478	1					
ANR	5075545	Argument	D_ALWAYS		5075478	0					
ANR	5075546	Identifier	D_ALWAYS		5075478	0					
ANR	5075547	Argument	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		5075478	1					
ANR	5075548	PrimaryExpression	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		5075478	0					
ANR	5075549	Argument	argc		5075478	2					
ANR	5075550	Identifier	argc		5075478	0					
ANR	5075551	Argument	5		5075478	3					
ANR	5075552	PrimaryExpression	5		5075478	0					
ANR	5075553	Argument	argv [ 0 ]		5075478	4					
ANR	5075554	ArrayIndexing	argv [ 0 ]		5075478	0					
ANR	5075555	Identifier	argv		5075478	0					
ANR	5075556	PrimaryExpression	0		5075478	1					
ANR	5075557	ReturnStatement	return false ;	1100:8:42380:42392	5075478	2	True				
ANR	5075558	Identifier	false		5075478	0					
ANR	5075559	IdentifierDeclStatement	AmazonVMRunningKeypair rkpRequest ;	1104:4:42454:42487	5075478	4	True				
ANR	5075560	IdentifierDecl	rkpRequest		5075478	0					
ANR	5075561	IdentifierDeclType	AmazonVMRunningKeypair		5075478	0					
ANR	5075562	Identifier	rkpRequest		5075478	1					
ANR	5075563	ExpressionStatement	rkpRequest . serviceURL = argv [ 2 ]	1105:4:42493:42524	5075478	5	True				
ANR	5075564	AssignmentExpression	rkpRequest . serviceURL = argv [ 2 ]		5075478	0		=			
ANR	5075565	MemberAccess	rkpRequest . serviceURL		5075478	0					
ANR	5075566	Identifier	rkpRequest		5075478	0					
ANR	5075567	Identifier	serviceURL		5075478	1					
ANR	5075568	ArrayIndexing	argv [ 2 ]		5075478	1					
ANR	5075569	Identifier	argv		5075478	0					
ANR	5075570	PrimaryExpression	2		5075478	1					
ANR	5075571	ExpressionStatement	rkpRequest . accessKeyFile = argv [ 3 ]	1106:4:42530:42564	5075478	6	True				
ANR	5075572	AssignmentExpression	rkpRequest . accessKeyFile = argv [ 3 ]		5075478	0		=			
ANR	5075573	MemberAccess	rkpRequest . accessKeyFile		5075478	0					
ANR	5075574	Identifier	rkpRequest		5075478	0					
ANR	5075575	Identifier	accessKeyFile		5075478	1					
ANR	5075576	ArrayIndexing	argv [ 3 ]		5075478	1					
ANR	5075577	Identifier	argv		5075478	0					
ANR	5075578	PrimaryExpression	3		5075478	1					
ANR	5075579	ExpressionStatement	rkpRequest . secretKeyFile = argv [ 4 ]	1107:4:42570:42604	5075478	7	True				
ANR	5075580	AssignmentExpression	rkpRequest . secretKeyFile = argv [ 4 ]		5075478	0		=			
ANR	5075581	MemberAccess	rkpRequest . secretKeyFile		5075478	0					
ANR	5075582	Identifier	rkpRequest		5075478	0					
ANR	5075583	Identifier	secretKeyFile		5075478	1					
ANR	5075584	ArrayIndexing	argv [ 4 ]		5075478	1					
ANR	5075585	Identifier	argv		5075478	0					
ANR	5075586	PrimaryExpression	4		5075478	1					
ANR	5075587	ExpressionStatement	"rkpRequest . query_parameters [ ""Action"" ] = ""DescribeInstances"""	1108:4:42610:42671	5075478	8	True				
ANR	5075588	AssignmentExpression	"rkpRequest . query_parameters [ ""Action"" ] = ""DescribeInstances"""		5075478	0		=			
ANR	5075589	ArrayIndexing	"rkpRequest . query_parameters [ ""Action"" ]"		5075478	0					
ANR	5075590	MemberAccess	rkpRequest . query_parameters		5075478	0					
ANR	5075591	Identifier	rkpRequest		5075478	0					
ANR	5075592	Identifier	query_parameters		5075478	1					
ANR	5075593	PrimaryExpression	"""Action"""		5075478	1					
ANR	5075594	PrimaryExpression	"""DescribeInstances"""		5075478	1					
ANR	5075595	IfStatement	if ( ! rkpRequest . SendRequest ( ) )		5075478	9					
ANR	5075596	Condition	! rkpRequest . SendRequest ( )	1111:8:42711:42736	5075478	0	True				
ANR	5075597	UnaryOperationExpression	! rkpRequest . SendRequest ( )		5075478	0					
ANR	5075598	UnaryOperator	!		5075478	0					
ANR	5075599	CallExpression	rkpRequest . SendRequest ( )		5075478	1					
ANR	5075600	Callee	rkpRequest . SendRequest		5075478	0					
ANR	5075601	MemberAccess	rkpRequest . SendRequest		5075478	0					
ANR	5075602	Identifier	rkpRequest		5075478	0					
ANR	5075603	Identifier	SendRequest		5075478	1					
ANR	5075604	ArgumentList			5075478	1					
ANR	5075605	CompoundStatement		25:37:934:934	5075478	1					
ANR	5075606	ExpressionStatement	"result_string = create_failure_result ( requestID , rkpRequest . errorMessage . c_str ( ) , rkpRequest . errorCode . c_str ( ) )"	1112:8:42750:42887	5075478	0	True				
ANR	5075607	AssignmentExpression	"result_string = create_failure_result ( requestID , rkpRequest . errorMessage . c_str ( ) , rkpRequest . errorCode . c_str ( ) )"		5075478	0		=			
ANR	5075608	Identifier	result_string		5075478	0					
ANR	5075609	CallExpression	"create_failure_result ( requestID , rkpRequest . errorMessage . c_str ( ) , rkpRequest . errorCode . c_str ( ) )"		5075478	1					
ANR	5075610	Callee	create_failure_result		5075478	0					
ANR	5075611	Identifier	create_failure_result		5075478	0					
ANR	5075612	ArgumentList	requestID		5075478	1					
ANR	5075613	Argument	requestID		5075478	0					
ANR	5075614	Identifier	requestID		5075478	0					
ANR	5075615	Argument	rkpRequest . errorMessage . c_str ( )		5075478	1					
ANR	5075616	CallExpression	rkpRequest . errorMessage . c_str ( )		5075478	0					
ANR	5075617	Callee	rkpRequest . errorMessage . c_str		5075478	0					
ANR	5075618	MemberAccess	rkpRequest . errorMessage . c_str		5075478	0					
ANR	5075619	MemberAccess	rkpRequest . errorMessage		5075478	0					
ANR	5075620	Identifier	rkpRequest		5075478	0					
ANR	5075621	Identifier	errorMessage		5075478	1					
ANR	5075622	Identifier	c_str		5075478	1					
ANR	5075623	ArgumentList			5075478	1					
ANR	5075624	Argument	rkpRequest . errorCode . c_str ( )		5075478	2					
ANR	5075625	CallExpression	rkpRequest . errorCode . c_str ( )		5075478	0					
ANR	5075626	Callee	rkpRequest . errorCode . c_str		5075478	0					
ANR	5075627	MemberAccess	rkpRequest . errorCode . c_str		5075478	0					
ANR	5075628	MemberAccess	rkpRequest . errorCode		5075478	0					
ANR	5075629	Identifier	rkpRequest		5075478	0					
ANR	5075630	Identifier	errorCode		5075478	1					
ANR	5075631	Identifier	c_str		5075478	1					
ANR	5075632	ArgumentList			5075478	1					
ANR	5075633	ElseStatement	else		5075478	0					
ANR	5075634	CompoundStatement		29:11:1094:1094	5075478	0					
ANR	5075635	IfStatement	if ( rkpRequest . results . size ( ) == 0 )		5075478	0					
ANR	5075636	Condition	rkpRequest . results . size ( ) == 0	1116:12:42914:42943	5075478	0	True				
ANR	5075637	EqualityExpression	rkpRequest . results . size ( ) == 0		5075478	0		==			
ANR	5075638	CallExpression	rkpRequest . results . size ( )		5075478	0					
ANR	5075639	Callee	rkpRequest . results . size		5075478	0					
ANR	5075640	MemberAccess	rkpRequest . results . size		5075478	0					
ANR	5075641	MemberAccess	rkpRequest . results		5075478	0					
ANR	5075642	Identifier	rkpRequest		5075478	0					
ANR	5075643	Identifier	results		5075478	1					
ANR	5075644	Identifier	size		5075478	1					
ANR	5075645	ArgumentList			5075478	1					
ANR	5075646	PrimaryExpression	0		5075478	1					
ANR	5075647	CompoundStatement		30:45:1141:1141	5075478	1					
ANR	5075648	ExpressionStatement	"result_string = create_success_result ( requestID , NULL )"	1117:12:42961:43017	5075478	0	True				
ANR	5075649	AssignmentExpression	"result_string = create_success_result ( requestID , NULL )"		5075478	0		=			
ANR	5075650	Identifier	result_string		5075478	0					
ANR	5075651	CallExpression	"create_success_result ( requestID , NULL )"		5075478	1					
ANR	5075652	Callee	create_success_result		5075478	0					
ANR	5075653	Identifier	create_success_result		5075478	0					
ANR	5075654	ArgumentList	requestID		5075478	1					
ANR	5075655	Argument	requestID		5075478	0					
ANR	5075656	Identifier	requestID		5075478	0					
ANR	5075657	Argument	NULL		5075478	1					
ANR	5075658	Identifier	NULL		5075478	0					
ANR	5075659	ElseStatement	else		5075478	0					
ANR	5075660	CompoundStatement		33:12:1242:1263	5075478	0					
ANR	5075661	IdentifierDeclStatement	StringList resultList ;	1119:12:43048:43069	5075478	0	True				
ANR	5075662	IdentifierDecl	resultList		5075478	0					
ANR	5075663	IdentifierDeclType	StringList		5075478	0					
ANR	5075664	Identifier	resultList		5075478	1					
ANR	5075665	ForStatement	for ( unsigned i = 0 ; i < rkpRequest . results . size ( ) ; ++ i )		5075478	1					
ANR	5075666	ForInit	unsigned i = 0 ;	1120:17:43088:43102	5075478	0	True				
ANR	5075667	IdentifierDeclStatement	unsigned i = 0 ;		5075478	0					
ANR	5075668	IdentifierDecl	i = 0		5075478	0					
ANR	5075669	IdentifierDeclType	unsigned		5075478	0					
ANR	5075670	Identifier	i		5075478	1					
ANR	5075671	AssignmentExpression	i = 0		5075478	2		=			
ANR	5075672	Identifier	i		5075478	0					
ANR	5075673	PrimaryExpression	0		5075478	1					
ANR	5075674	Condition	i < rkpRequest . results . size ( )	1120:33:43104:43132	5075478	1	True				
ANR	5075675	RelationalExpression	i < rkpRequest . results . size ( )		5075478	0		<			
ANR	5075676	Identifier	i		5075478	0					
ANR	5075677	CallExpression	rkpRequest . results . size ( )		5075478	1					
ANR	5075678	Callee	rkpRequest . results . size		5075478	0					
ANR	5075679	MemberAccess	rkpRequest . results . size		5075478	0					
ANR	5075680	MemberAccess	rkpRequest . results		5075478	0					
ANR	5075681	Identifier	rkpRequest		5075478	0					
ANR	5075682	Identifier	results		5075478	1					
ANR	5075683	Identifier	size		5075478	1					
ANR	5075684	ArgumentList			5075478	1					
ANR	5075685	UnaryExpression	++ i	1120:64:43135:43137	5075478	2	True				
ANR	5075686	IncDec	++		5075478	0					
ANR	5075687	Identifier	i		5075478	1					
ANR	5075688	CompoundStatement		35:16:1353:1401	5075478	3					
ANR	5075689	IdentifierDeclStatement	AmazonStatusResult & asr = rkpRequest . results [ i ] ;	1121:16:43159:43207	5075478	0	True				
ANR	5075690	IdentifierDecl	& asr = rkpRequest . results [ i ]		5075478	0					
ANR	5075691	IdentifierDeclType	AmazonStatusResult &		5075478	0					
ANR	5075692	Identifier	asr		5075478	1					
ANR	5075693	AssignmentExpression	& asr = rkpRequest . results [ i ]		5075478	2		=			
ANR	5075694	Identifier	asr		5075478	0					
ANR	5075695	ArrayIndexing	rkpRequest . results [ i ]		5075478	1					
ANR	5075696	MemberAccess	rkpRequest . results		5075478	0					
ANR	5075697	Identifier	rkpRequest		5075478	0					
ANR	5075698	Identifier	results		5075478	1					
ANR	5075699	Identifier	i		5075478	1					
ANR	5075700	IfStatement	if ( ! asr . keyname . empty ( ) )		5075478	1					
ANR	5075701	Condition	! asr . keyname . empty ( )	1125:20:43378:43398	5075478	0	True				
ANR	5075702	UnaryOperationExpression	! asr . keyname . empty ( )		5075478	0					
ANR	5075703	UnaryOperator	!		5075478	0					
ANR	5075704	CallExpression	asr . keyname . empty ( )		5075478	1					
ANR	5075705	Callee	asr . keyname . empty		5075478	0					
ANR	5075706	MemberAccess	asr . keyname . empty		5075478	0					
ANR	5075707	MemberAccess	asr . keyname		5075478	0					
ANR	5075708	Identifier	asr		5075478	0					
ANR	5075709	Identifier	keyname		5075478	1					
ANR	5075710	Identifier	empty		5075478	1					
ANR	5075711	ArgumentList			5075478	1					
ANR	5075712	CompoundStatement		39:44:1596:1596	5075478	1					
ANR	5075713	ExpressionStatement	resultList . append ( asr . instance_id . c_str ( ) )	1126:20:43424:43468	5075478	0	True				
ANR	5075714	CallExpression	resultList . append ( asr . instance_id . c_str ( ) )		5075478	0					
ANR	5075715	Callee	resultList . append		5075478	0					
ANR	5075716	MemberAccess	resultList . append		5075478	0					
ANR	5075717	Identifier	resultList		5075478	0					
ANR	5075718	Identifier	append		5075478	1					
ANR	5075719	ArgumentList	asr . instance_id . c_str ( )		5075478	1					
ANR	5075720	Argument	asr . instance_id . c_str ( )		5075478	0					
ANR	5075721	CallExpression	asr . instance_id . c_str ( )		5075478	0					
ANR	5075722	Callee	asr . instance_id . c_str		5075478	0					
ANR	5075723	MemberAccess	asr . instance_id . c_str		5075478	0					
ANR	5075724	MemberAccess	asr . instance_id		5075478	0					
ANR	5075725	Identifier	asr		5075478	0					
ANR	5075726	Identifier	instance_id		5075478	1					
ANR	5075727	Identifier	c_str		5075478	1					
ANR	5075728	ArgumentList			5075478	1					
ANR	5075729	ExpressionStatement	resultList . append ( asr . keyname . c_str ( ) )	1127:20:43490:43530	5075478	1	True				
ANR	5075730	CallExpression	resultList . append ( asr . keyname . c_str ( ) )		5075478	0					
ANR	5075731	Callee	resultList . append		5075478	0					
ANR	5075732	MemberAccess	resultList . append		5075478	0					
ANR	5075733	Identifier	resultList		5075478	0					
ANR	5075734	Identifier	append		5075478	1					
ANR	5075735	ArgumentList	asr . keyname . c_str ( )		5075478	1					
ANR	5075736	Argument	asr . keyname . c_str ( )		5075478	0					
ANR	5075737	CallExpression	asr . keyname . c_str ( )		5075478	0					
ANR	5075738	Callee	asr . keyname . c_str		5075478	0					
ANR	5075739	MemberAccess	asr . keyname . c_str		5075478	0					
ANR	5075740	MemberAccess	asr . keyname		5075478	0					
ANR	5075741	Identifier	asr		5075478	0					
ANR	5075742	Identifier	keyname		5075478	1					
ANR	5075743	Identifier	c_str		5075478	1					
ANR	5075744	ArgumentList			5075478	1					
ANR	5075745	ExpressionStatement	"result_string = create_success_result ( requestID , & resultList )"	1130:12:43576:43640	5075478	2	True				
ANR	5075746	AssignmentExpression	"result_string = create_success_result ( requestID , & resultList )"		5075478	0		=			
ANR	5075747	Identifier	result_string		5075478	0					
ANR	5075748	CallExpression	"create_success_result ( requestID , & resultList )"		5075478	1					
ANR	5075749	Callee	create_success_result		5075478	0					
ANR	5075750	Identifier	create_success_result		5075478	0					
ANR	5075751	ArgumentList	requestID		5075478	1					
ANR	5075752	Argument	requestID		5075478	0					
ANR	5075753	Identifier	requestID		5075478	0					
ANR	5075754	Argument	& resultList		5075478	1					
ANR	5075755	UnaryOperationExpression	& resultList		5075478	0					
ANR	5075756	UnaryOperator	&		5075478	0					
ANR	5075757	Identifier	resultList		5075478	1					
ANR	5075758	ReturnStatement	return true ;	1134:4:43675:43686	5075478	10	True				
ANR	5075759	Identifier	true		5075478	0					
ANR	5075760	ReturnType	bool		5075478	1					
ANR	5075761	Identifier	AmazonVMRunningKeypair :: workerFunction		5075478	2					
ANR	5075762	ParameterList	"char * * argv , int argc , std :: string & result_string"		5075478	3					
ANR	5075763	Parameter	char * * argv	1087:44:41754:41764	5075478	0	True				
ANR	5075764	ParameterType	char * *		5075478	0					
ANR	5075765	Identifier	argv		5075478	1					
ANR	5075766	Parameter	int argc	1087:57:41767:41774	5075478	1	True				
ANR	5075767	ParameterType	int		5075478	0					
ANR	5075768	Identifier	argc		5075478	1					
ANR	5075769	Parameter	std :: string & result_string	1087:67:41777:41802	5075478	2	True				
ANR	5075770	ParameterType	std :: string &		5075478	0					
ANR	5075771	Identifier	result_string		5075478	1					
ANR	5075772	CFGEntryNode	ENTRY		5075478		True				
ANR	5075773	CFGExitNode	EXIT		5075478		True				
ANR	5075774	Symbol	asr		5075478						
ANR	5075775	Symbol	rkpRequest . errorCode		5075478						
ANR	5075776	Symbol	asr . keyname		5075478						
ANR	5075777	Symbol	rkpRequest . secretKeyFile		5075478						
ANR	5075778	Symbol	* argv		5075478						
ANR	5075779	Symbol	argv		5075478						
ANR	5075780	Symbol	& requestID		5075478						
ANR	5075781	Symbol	& resultList		5075478						
ANR	5075782	Symbol	* rkpRequest . results		5075478						
ANR	5075783	Symbol	create_success_result		5075478						
ANR	5075784	Symbol	asr . instance_id . c_str		5075478						
ANR	5075785	Symbol	* rkpRequest . query_parameters		5075478						
ANR	5075786	Symbol	rkpRequest . errorMessage		5075478						
ANR	5075787	Symbol	result_string		5075478						
ANR	5075788	Symbol	asr . keyname . empty		5075478						
ANR	5075789	Symbol	argc		5075478						
ANR	5075790	Symbol	strcmp		5075478						
ANR	5075791	Symbol	rkpRequest		5075478						
ANR	5075792	Symbol	rkpRequest . errorMessage . c_str		5075478						
ANR	5075793	Symbol	NULL		5075478						
ANR	5075794	Symbol	D_ALWAYS		5075478						
ANR	5075795	Symbol	false		5075478						
ANR	5075796	Symbol	i		5075478						
ANR	5075797	Symbol	verify_min_number_args		5075478						
ANR	5075798	Symbol	rkpRequest . results . size		5075478						
ANR	5075799	Symbol	rkpRequest . results		5075478						
ANR	5075800	Symbol	rkpRequest . SendRequest		5075478						
ANR	5075801	Symbol	asr . keyname . c_str		5075478						
ANR	5075802	Symbol	* i		5075478						
ANR	5075803	Symbol	rkpRequest . errorCode . c_str		5075478						
ANR	5075804	Symbol	requestID		5075478						
ANR	5075805	Symbol	create_failure_result		5075478						
ANR	5075806	Symbol	rkpRequest . query_parameters		5075478						
ANR	5075807	Symbol	true		5075478						
ANR	5075808	Symbol	rkpRequest . serviceURL		5075478						
ANR	5075809	Symbol	* rkpRequest		5075478						
ANR	5075810	Symbol	asr . instance_id		5075478						
ANR	5075811	Symbol	resultList		5075478						
ANR	5075812	Symbol	rkpRequest . accessKeyFile		5075478						
ANR	5075813	Function	AmazonVMCreateKeypair :: AmazonVMCreateKeypair	1139:0:43771:43820							
ANR	5075814	FunctionDef	AmazonVMCreateKeypair :: AmazonVMCreateKeypair ()		5075813	0					
ANR	5075815	CompoundStatement		1139:47:43818:43820	5075813	0					
ANR	5075816	Identifier	AmazonVMCreateKeypair :: AmazonVMCreateKeypair		5075813	1					
ANR	5075817	ParameterList			5075813	2					
ANR	5075818	CFGEntryNode	ENTRY		5075813		True				
ANR	5075819	CFGExitNode	EXIT		5075813		True				
ANR	5075820	Function	AmazonVMCreateKeypair :: ~AmazonVMCreateKeypair	1141:0:43823:43873							
ANR	5075821	FunctionDef	AmazonVMCreateKeypair :: ~AmazonVMCreateKeypair ()		5075820	0					
ANR	5075822	CompoundStatement		1141:48:43871:43873	5075820	0					
ANR	5075823	Identifier	AmazonVMCreateKeypair :: ~AmazonVMCreateKeypair		5075820	1					
ANR	5075824	ParameterList			5075820	2					
ANR	5075825	CFGEntryNode	ENTRY		5075820		True				
ANR	5075826	CFGExitNode	EXIT		5075820		True				
ANR	5075827	ClassDef	privateKeyUD_t	1143:0:43876:44008							
ANR	5075828	DeclStmt									
ANR	5075829	Decl							bool	bool	inKeyMaterial
ANR	5075830	DeclStmt									
ANR	5075831	Decl							std :: string	std :: string	keyMaterial
ANR	5075832	Function	privateKeyUD_t	1147:4:43962:44006							
ANR	5075833	FunctionDef	privateKeyUD_t ()		5075832	2					
ANR	5075834	CompoundStatement		1147:46:44004:44006	5075832	0					
ANR	5075835	Identifier	privateKeyUD_t		5075832	1					
ANR	5075836	ParameterList			5075832	2					
ANR	5075837	CFGEntryNode	ENTRY		5075832		True				
ANR	5075838	CFGExitNode	EXIT		5075832		True				
ANR	5075839	DeclStmt									
ANR	5075840	Decl							struct privateKeyUD_t	struct privateKeyUD_t	privateKeyUD
ANR	5075841	DeclStmt									
ANR	5075842	Decl							privateKeyUD	privateKeyUD *	pkud
ANR	5075843	Function	createKeypairCDH	1158:0:44305:44552							
ANR	5075844	FunctionDef	"createKeypairCDH (void * vUserData , const XML_Char * cdata , int len)"		5075843	0					
ANR	5075845	CompoundStatement		1158:75:44380:44552	5075843	0					
ANR	5075846	IdentifierDeclStatement	privateKeyUD * pkud = ( privateKeyUD * ) vUserData ;	1159:4:44386:44433	5075843	0	True				
ANR	5075847	IdentifierDecl	* pkud = ( privateKeyUD * ) vUserData		5075843	0					
ANR	5075848	IdentifierDeclType	privateKeyUD *		5075843	0					
ANR	5075849	Identifier	pkud		5075843	1					
ANR	5075850	AssignmentExpression	* pkud = ( privateKeyUD * ) vUserData		5075843	2		=			
ANR	5075851	Identifier	pkud		5075843	0					
ANR	5075852	CastExpression	( privateKeyUD * ) vUserData		5075843	1					
ANR	5075853	CastTarget	privateKeyUD *		5075843	0					
ANR	5075854	Identifier	vUserData		5075843	1					
ANR	5075855	IfStatement	if ( pkud -> inKeyMaterial )		5075843	1					
ANR	5075856	Condition	pkud -> inKeyMaterial	1160:8:44443:44461	5075843	0	True				
ANR	5075857	PtrMemberAccess	pkud -> inKeyMaterial		5075843	0					
ANR	5075858	Identifier	pkud		5075843	0					
ANR	5075859	Identifier	inKeyMaterial		5075843	1					
ANR	5075860	CompoundStatement		3:30:84:84	5075843	1					
ANR	5075861	ExpressionStatement	"appendToString ( ( void * ) cdata , len , 1 , ( void * ) & pkud -> keyMaterial )"	1161:8:44475:44544	5075843	0	True				
ANR	5075862	CallExpression	"appendToString ( ( void * ) cdata , len , 1 , ( void * ) & pkud -> keyMaterial )"		5075843	0					
ANR	5075863	Callee	appendToString		5075843	0					
ANR	5075864	Identifier	appendToString		5075843	0					
ANR	5075865	ArgumentList	( void * ) cdata		5075843	1					
ANR	5075866	Argument	( void * ) cdata		5075843	0					
ANR	5075867	CastExpression	( void * ) cdata		5075843	0					
ANR	5075868	CastTarget	void *		5075843	0					
ANR	5075869	Identifier	cdata		5075843	1					
ANR	5075870	Argument	len		5075843	1					
ANR	5075871	Identifier	len		5075843	0					
ANR	5075872	Argument	1		5075843	2					
ANR	5075873	PrimaryExpression	1		5075843	0					
ANR	5075874	Argument	( void * ) & pkud -> keyMaterial		5075843	3					
ANR	5075875	CastExpression	( void * ) & pkud -> keyMaterial		5075843	0					
ANR	5075876	CastTarget	void *		5075843	0					
ANR	5075877	UnaryOperationExpression	& pkud -> keyMaterial		5075843	1					
ANR	5075878	UnaryOperator	&		5075843	0					
ANR	5075879	PtrMemberAccess	pkud -> keyMaterial		5075843	1					
ANR	5075880	Identifier	pkud		5075843	0					
ANR	5075881	Identifier	keyMaterial		5075843	1					
ANR	5075882	ReturnType	void		5075843	1					
ANR	5075883	Identifier	createKeypairCDH		5075843	2					
ANR	5075884	ParameterList	"void * vUserData , const XML_Char * cdata , int len"		5075843	3					
ANR	5075885	Parameter	void * vUserData	1158:23:44328:44343	5075843	0	True				
ANR	5075886	ParameterType	void *		5075843	0					
ANR	5075887	Identifier	vUserData		5075843	1					
ANR	5075888	Parameter	const XML_Char * cdata	1158:41:44346:44367	5075843	1	True				
ANR	5075889	ParameterType	const XML_Char *		5075843	0					
ANR	5075890	Identifier	cdata		5075843	1					
ANR	5075891	Parameter	int len	1158:65:44370:44376	5075843	2	True				
ANR	5075892	ParameterType	int		5075843	0					
ANR	5075893	Identifier	len		5075843	1					
ANR	5075894	CFGEntryNode	ENTRY		5075843		True				
ANR	5075895	CFGExitNode	EXIT		5075843		True				
ANR	5075896	Symbol	pkud -> inKeyMaterial		5075843						
ANR	5075897	Symbol	& pkud -> keyMaterial		5075843						
ANR	5075898	Symbol	* pkud		5075843						
ANR	5075899	Symbol	len		5075843						
ANR	5075900	Symbol	vUserData		5075843						
ANR	5075901	Symbol	pkud		5075843						
ANR	5075902	Symbol	cdata		5075843						
ANR	5075903	Function	createKeypairEEH	1165:0:44555:44787							
ANR	5075904	FunctionDef	"createKeypairEEH (void * vUserData , const XML_Char * name)"		5075903	0					
ANR	5075905	CompoundStatement		1165:65:44620:44787	5075903	0					
ANR	5075906	IdentifierDeclStatement	privateKeyUD * pkud = ( privateKeyUD * ) vUserData ;	1166:4:44626:44673	5075903	0	True				
ANR	5075907	IdentifierDecl	* pkud = ( privateKeyUD * ) vUserData		5075903	0					
ANR	5075908	IdentifierDeclType	privateKeyUD *		5075903	0					
ANR	5075909	Identifier	pkud		5075903	1					
ANR	5075910	AssignmentExpression	* pkud = ( privateKeyUD * ) vUserData		5075903	2		=			
ANR	5075911	Identifier	pkud		5075903	0					
ANR	5075912	CastExpression	( privateKeyUD * ) vUserData		5075903	1					
ANR	5075913	CastTarget	privateKeyUD *		5075903	0					
ANR	5075914	Identifier	vUserData		5075903	1					
ANR	5075915	IfStatement	"if ( strcasecmp ( ( const char * ) name , ""keyMaterial"" ) == 0 )"		5075903	1					
ANR	5075916	Condition	"strcasecmp ( ( const char * ) name , ""keyMaterial"" ) == 0"	1167:8:44683:44734	5075903	0	True				
ANR	5075917	EqualityExpression	"strcasecmp ( ( const char * ) name , ""keyMaterial"" ) == 0"		5075903	0		==			
ANR	5075918	CallExpression	"strcasecmp ( ( const char * ) name , ""keyMaterial"" )"		5075903	0					
ANR	5075919	Callee	strcasecmp		5075903	0					
ANR	5075920	Identifier	strcasecmp		5075903	0					
ANR	5075921	ArgumentList	( const char * ) name		5075903	1					
ANR	5075922	Argument	( const char * ) name		5075903	0					
ANR	5075923	CastExpression	( const char * ) name		5075903	0					
ANR	5075924	CastTarget	const char *		5075903	0					
ANR	5075925	Identifier	name		5075903	1					
ANR	5075926	Argument	"""keyMaterial"""		5075903	1					
ANR	5075927	PrimaryExpression	"""keyMaterial"""		5075903	0					
ANR	5075928	PrimaryExpression	0		5075903	1					
ANR	5075929	CompoundStatement		3:63:117:117	5075903	1					
ANR	5075930	ExpressionStatement	pkud -> inKeyMaterial = false	1168:8:44748:44775	5075903	0	True				
ANR	5075931	AssignmentExpression	pkud -> inKeyMaterial = false		5075903	0		=			
ANR	5075932	PtrMemberAccess	pkud -> inKeyMaterial		5075903	0					
ANR	5075933	Identifier	pkud		5075903	0					
ANR	5075934	Identifier	inKeyMaterial		5075903	1					
ANR	5075935	Identifier	false		5075903	1					
ANR	5075936	ReturnType	void		5075903	1					
ANR	5075937	Identifier	createKeypairEEH		5075903	2					
ANR	5075938	ParameterList	"void * vUserData , const XML_Char * name"		5075903	3					
ANR	5075939	Parameter	void * vUserData	1165:23:44578:44593	5075903	0	True				
ANR	5075940	ParameterType	void *		5075903	0					
ANR	5075941	Identifier	vUserData		5075903	1					
ANR	5075942	Parameter	const XML_Char * name	1165:41:44596:44616	5075903	1	True				
ANR	5075943	ParameterType	const XML_Char *		5075903	0					
ANR	5075944	Identifier	name		5075903	1					
ANR	5075945	CFGEntryNode	ENTRY		5075903		True				
ANR	5075946	CFGExitNode	EXIT		5075903		True				
ANR	5075947	Symbol	pkud -> inKeyMaterial		5075903						
ANR	5075948	Symbol	* pkud		5075903						
ANR	5075949	Symbol	vUserData		5075903						
ANR	5075950	Symbol	name		5075903						
ANR	5075951	Symbol	false		5075903						
ANR	5075952	Symbol	strcasecmp		5075903						
ANR	5075953	Symbol	pkud		5075903						
ANR	5075954	Function	AmazonVMCreateKeypair :: SendRequest	1172:0:44790:45956							
ANR	5075955	FunctionDef	AmazonVMCreateKeypair :: SendRequest ()		5075954	0					
ANR	5075956	CompoundStatement		1172:42:44832:45956	5075954	0					
ANR	5075957	IdentifierDeclStatement	bool result = AmazonRequest :: SendRequest ( ) ;	1173:4:44838:44880	5075954	0	True				
ANR	5075958	IdentifierDecl	result = AmazonRequest :: SendRequest ( )		5075954	0					
ANR	5075959	IdentifierDeclType	bool		5075954	0					
ANR	5075960	Identifier	result		5075954	1					
ANR	5075961	AssignmentExpression	result = AmazonRequest :: SendRequest ( )		5075954	2		=			
ANR	5075962	Identifier	result		5075954	0					
ANR	5075963	CallExpression	AmazonRequest :: SendRequest ( )		5075954	1					
ANR	5075964	Callee	AmazonRequest :: SendRequest		5075954	0					
ANR	5075965	Identifier	AmazonRequest :: SendRequest		5075954	0					
ANR	5075966	ArgumentList			5075954	1					
ANR	5075967	IfStatement	if ( result )		5075954	1					
ANR	5075968	Condition	result	1174:8:44890:44895	5075954	0	True				
ANR	5075969	Identifier	result		5075954	0					
ANR	5075970	CompoundStatement		5:8:103:143	5075954	1					
ANR	5075971	IdentifierDeclStatement	privateKeyUD pkud ;	1175:8:44909:44926	5075954	0	True				
ANR	5075972	IdentifierDecl	pkud		5075954	0					
ANR	5075973	IdentifierDeclType	privateKeyUD		5075954	0					
ANR	5075974	Identifier	pkud		5075954	1					
ANR	5075975	IdentifierDeclStatement	XML_Parser xp = XML_ParserCreate ( NULL ) ;	1176:8:44936:44976	5075954	1	True				
ANR	5075976	IdentifierDecl	xp = XML_ParserCreate ( NULL )		5075954	0					
ANR	5075977	IdentifierDeclType	XML_Parser		5075954	0					
ANR	5075978	Identifier	xp		5075954	1					
ANR	5075979	AssignmentExpression	xp = XML_ParserCreate ( NULL )		5075954	2		=			
ANR	5075980	Identifier	xp		5075954	0					
ANR	5075981	CallExpression	XML_ParserCreate ( NULL )		5075954	1					
ANR	5075982	Callee	XML_ParserCreate		5075954	0					
ANR	5075983	Identifier	XML_ParserCreate		5075954	0					
ANR	5075984	ArgumentList	NULL		5075954	1					
ANR	5075985	Argument	NULL		5075954	0					
ANR	5075986	Identifier	NULL		5075954	0					
ANR	5075987	ExpressionStatement	"XML_SetElementHandler ( xp , & createKeypairESH , & createKeypairEEH )"	1177:8:44986:45053	5075954	2	True				
ANR	5075988	CallExpression	"XML_SetElementHandler ( xp , & createKeypairESH , & createKeypairEEH )"		5075954	0					
ANR	5075989	Callee	XML_SetElementHandler		5075954	0					
ANR	5075990	Identifier	XML_SetElementHandler		5075954	0					
ANR	5075991	ArgumentList	xp		5075954	1					
ANR	5075992	Argument	xp		5075954	0					
ANR	5075993	Identifier	xp		5075954	0					
ANR	5075994	Argument	& createKeypairESH		5075954	1					
ANR	5075995	UnaryOperationExpression	& createKeypairESH		5075954	0					
ANR	5075996	UnaryOperator	&		5075954	0					
ANR	5075997	Identifier	createKeypairESH		5075954	1					
ANR	5075998	Argument	& createKeypairEEH		5075954	2					
ANR	5075999	UnaryOperationExpression	& createKeypairEEH		5075954	0					
ANR	5076000	UnaryOperator	&		5075954	0					
ANR	5076001	Identifier	createKeypairEEH		5075954	1					
ANR	5076002	ExpressionStatement	"XML_SetCharacterDataHandler ( xp , & createKeypairCDH )"	1178:8:45063:45116	5075954	3	True				
ANR	5076003	CallExpression	"XML_SetCharacterDataHandler ( xp , & createKeypairCDH )"		5075954	0					
ANR	5076004	Callee	XML_SetCharacterDataHandler		5075954	0					
ANR	5076005	Identifier	XML_SetCharacterDataHandler		5075954	0					
ANR	5076006	ArgumentList	xp		5075954	1					
ANR	5076007	Argument	xp		5075954	0					
ANR	5076008	Identifier	xp		5075954	0					
ANR	5076009	Argument	& createKeypairCDH		5075954	1					
ANR	5076010	UnaryOperationExpression	& createKeypairCDH		5075954	0					
ANR	5076011	UnaryOperator	&		5075954	0					
ANR	5076012	Identifier	createKeypairCDH		5075954	1					
ANR	5076013	ExpressionStatement	"XML_SetUserData ( xp , & pkud )"	1179:8:45126:45155	5075954	4	True				
ANR	5076014	CallExpression	"XML_SetUserData ( xp , & pkud )"		5075954	0					
ANR	5076015	Callee	XML_SetUserData		5075954	0					
ANR	5076016	Identifier	XML_SetUserData		5075954	0					
ANR	5076017	ArgumentList	xp		5075954	1					
ANR	5076018	Argument	xp		5075954	0					
ANR	5076019	Identifier	xp		5075954	0					
ANR	5076020	Argument	& pkud		5075954	1					
ANR	5076021	UnaryOperationExpression	& pkud		5075954	0					
ANR	5076022	UnaryOperator	&		5075954	0					
ANR	5076023	Identifier	pkud		5075954	1					
ANR	5076024	ExpressionStatement	"XML_Parse ( xp , this -> resultString . c_str ( ) , this -> resultString . length ( ) , 1 )"	1180:8:45165:45240	5075954	5	True				
ANR	5076025	CallExpression	"XML_Parse ( xp , this -> resultString . c_str ( ) , this -> resultString . length ( ) , 1 )"		5075954	0					
ANR	5076026	Callee	XML_Parse		5075954	0					
ANR	5076027	Identifier	XML_Parse		5075954	0					
ANR	5076028	ArgumentList	xp		5075954	1					
ANR	5076029	Argument	xp		5075954	0					
ANR	5076030	Identifier	xp		5075954	0					
ANR	5076031	Argument	this -> resultString . c_str ( )		5075954	1					
ANR	5076032	CallExpression	this -> resultString . c_str ( )		5075954	0					
ANR	5076033	Callee	this -> resultString . c_str		5075954	0					
ANR	5076034	MemberAccess	this -> resultString . c_str		5075954	0					
ANR	5076035	PtrMemberAccess	this -> resultString		5075954	0					
ANR	5076036	Identifier	this		5075954	0					
ANR	5076037	Identifier	resultString		5075954	1					
ANR	5076038	Identifier	c_str		5075954	1					
ANR	5076039	ArgumentList			5075954	1					
ANR	5076040	Argument	this -> resultString . length ( )		5075954	2					
ANR	5076041	CallExpression	this -> resultString . length ( )		5075954	0					
ANR	5076042	Callee	this -> resultString . length		5075954	0					
ANR	5076043	MemberAccess	this -> resultString . length		5075954	0					
ANR	5076044	PtrMemberAccess	this -> resultString		5075954	0					
ANR	5076045	Identifier	this		5075954	0					
ANR	5076046	Identifier	resultString		5075954	1					
ANR	5076047	Identifier	length		5075954	1					
ANR	5076048	ArgumentList			5075954	1					
ANR	5076049	Argument	1		5075954	3					
ANR	5076050	PrimaryExpression	1		5075954	0					
ANR	5076051	ExpressionStatement	XML_ParserFree ( xp )	1181:8:45250:45270	5075954	6	True				
ANR	5076052	CallExpression	XML_ParserFree ( xp )		5075954	0					
ANR	5076053	Callee	XML_ParserFree		5075954	0					
ANR	5076054	Identifier	XML_ParserFree		5075954	0					
ANR	5076055	ArgumentList	xp		5075954	1					
ANR	5076056	Argument	xp		5075954	0					
ANR	5076057	Identifier	xp		5075954	0					
ANR	5076058	IfStatement	"if ( ! writeShortFile ( this -> privateKeyFileName , pkud . keyMaterial ) )"		5075954	7					
ANR	5076059	Condition	"! writeShortFile ( this -> privateKeyFileName , pkud . keyMaterial )"	1183:12:45285:45346	5075954	0	True				
ANR	5076060	UnaryOperationExpression	"! writeShortFile ( this -> privateKeyFileName , pkud . keyMaterial )"		5075954	0					
ANR	5076061	UnaryOperator	!		5075954	0					
ANR	5076062	CallExpression	"writeShortFile ( this -> privateKeyFileName , pkud . keyMaterial )"		5075954	1					
ANR	5076063	Callee	writeShortFile		5075954	0					
ANR	5076064	Identifier	writeShortFile		5075954	0					
ANR	5076065	ArgumentList	this -> privateKeyFileName		5075954	1					
ANR	5076066	Argument	this -> privateKeyFileName		5075954	0					
ANR	5076067	PtrMemberAccess	this -> privateKeyFileName		5075954	0					
ANR	5076068	Identifier	this		5075954	0					
ANR	5076069	Identifier	privateKeyFileName		5075954	1					
ANR	5076070	Argument	pkud . keyMaterial		5075954	1					
ANR	5076071	MemberAccess	pkud . keyMaterial		5075954	0					
ANR	5076072	Identifier	pkud		5075954	0					
ANR	5076073	Identifier	keyMaterial		5075954	1					
ANR	5076074	CompoundStatement		12:77:517:517	5075954	1					
ANR	5076075	ExpressionStatement	"this -> errorCode = ""E_FILE_IO"""	1184:12:45364:45393	5075954	0	True				
ANR	5076076	AssignmentExpression	"this -> errorCode = ""E_FILE_IO"""		5075954	0		=			
ANR	5076077	PtrMemberAccess	this -> errorCode		5075954	0					
ANR	5076078	Identifier	this		5075954	0					
ANR	5076079	Identifier	errorCode		5075954	1					
ANR	5076080	PrimaryExpression	"""E_FILE_IO"""		5075954	1					
ANR	5076081	ExpressionStatement	"this -> errorMessage = ""Failed to write private key to file."""	1185:12:45407:45466	5075954	1	True				
ANR	5076082	AssignmentExpression	"this -> errorMessage = ""Failed to write private key to file."""		5075954	0		=			
ANR	5076083	PtrMemberAccess	this -> errorMessage		5075954	0					
ANR	5076084	Identifier	this		5075954	0					
ANR	5076085	Identifier	errorMessage		5075954	1					
ANR	5076086	PrimaryExpression	"""Failed to write private key to file."""		5075954	1					
ANR	5076087	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to write private key material to '%s', failing.\\n"" , this -> privateKeyFileName . c_str ( ) )"	1186:12:45480:45609	5075954	2	True				
ANR	5076088	CallExpression	"dprintf ( D_ALWAYS , ""Failed to write private key material to '%s', failing.\\n"" , this -> privateKeyFileName . c_str ( ) )"		5075954	0					
ANR	5076089	Callee	dprintf		5075954	0					
ANR	5076090	Identifier	dprintf		5075954	0					
ANR	5076091	ArgumentList	D_ALWAYS		5075954	1					
ANR	5076092	Argument	D_ALWAYS		5075954	0					
ANR	5076093	Identifier	D_ALWAYS		5075954	0					
ANR	5076094	Argument	"""Failed to write private key material to '%s', failing.\\n"""		5075954	1					
ANR	5076095	PrimaryExpression	"""Failed to write private key material to '%s', failing.\\n"""		5075954	0					
ANR	5076096	Argument	this -> privateKeyFileName . c_str ( )		5075954	2					
ANR	5076097	CallExpression	this -> privateKeyFileName . c_str ( )		5075954	0					
ANR	5076098	Callee	this -> privateKeyFileName . c_str		5075954	0					
ANR	5076099	MemberAccess	this -> privateKeyFileName . c_str		5075954	0					
ANR	5076100	PtrMemberAccess	this -> privateKeyFileName		5075954	0					
ANR	5076101	Identifier	this		5075954	0					
ANR	5076102	Identifier	privateKeyFileName		5075954	1					
ANR	5076103	Identifier	c_str		5075954	1					
ANR	5076104	ArgumentList			5075954	1					
ANR	5076105	ReturnStatement	return false ;	1188:12:45623:45635	5075954	3	True				
ANR	5076106	Identifier	false		5075954	0					
ANR	5076107	ElseStatement	else		5075954	0					
ANR	5076108	CompoundStatement		19:11:825:825	5075954	0					
ANR	5076109	IfStatement	"if ( this -> errorCode == ""E_CURL_IO"" )"		5075954	0					
ANR	5076110	Condition	"this -> errorCode == ""E_CURL_IO"""	1191:12:45672:45701	5075954	0	True				
ANR	5076111	EqualityExpression	"this -> errorCode == ""E_CURL_IO"""		5075954	0		==			
ANR	5076112	PtrMemberAccess	this -> errorCode		5075954	0					
ANR	5076113	Identifier	this		5075954	0					
ANR	5076114	Identifier	errorCode		5075954	1					
ANR	5076115	PrimaryExpression	"""E_CURL_IO"""		5075954	1					
ANR	5076116	CompoundStatement		20:45:872:872	5075954	1					
ANR	5076117	ExpressionStatement	"this -> errorCode = ""NEED_CHECK_SSHKEY"""	1194:12:45856:45893	5075954	0	True				
ANR	5076118	AssignmentExpression	"this -> errorCode = ""NEED_CHECK_SSHKEY"""		5075954	0		=			
ANR	5076119	PtrMemberAccess	this -> errorCode		5075954	0					
ANR	5076120	Identifier	this		5075954	0					
ANR	5076121	Identifier	errorCode		5075954	1					
ANR	5076122	PrimaryExpression	"""NEED_CHECK_SSHKEY"""		5075954	1					
ANR	5076123	ReturnStatement	return false ;	1195:12:45907:45919	5075954	1	True				
ANR	5076124	Identifier	false		5075954	0					
ANR	5076125	ReturnStatement	return result ;	1198:4:45941:45954	5075954	2	True				
ANR	5076126	Identifier	result		5075954	0					
ANR	5076127	ReturnType	bool		5075954	1					
ANR	5076128	Identifier	AmazonVMCreateKeypair :: SendRequest		5075954	2					
ANR	5076129	ParameterList			5075954	3					
ANR	5076130	CFGEntryNode	ENTRY		5075954		True				
ANR	5076131	CFGExitNode	EXIT		5075954		True				
ANR	5076132	Symbol	this -> errorMessage		5075954						
ANR	5076133	Symbol	NULL		5075954						
ANR	5076134	Symbol	AmazonRequest :: SendRequest		5075954						
ANR	5076135	Symbol	this -> resultString		5075954						
ANR	5076136	Symbol	this -> resultString . length		5075954						
ANR	5076137	Symbol	this -> resultString . c_str		5075954						
ANR	5076138	Symbol	this		5075954						
ANR	5076139	Symbol	D_ALWAYS		5075954						
ANR	5076140	Symbol	false		5075954						
ANR	5076141	Symbol	& createKeypairEEH		5075954						
ANR	5076142	Symbol	writeShortFile		5075954						
ANR	5076143	Symbol	& createKeypairCDH		5075954						
ANR	5076144	Symbol	& pkud		5075954						
ANR	5076145	Symbol	this -> errorCode		5075954						
ANR	5076146	Symbol	this -> privateKeyFileName		5075954						
ANR	5076147	Symbol	result		5075954						
ANR	5076148	Symbol	* this		5075954						
ANR	5076149	Symbol	this -> privateKeyFileName . c_str		5075954						
ANR	5076150	Symbol	xp		5075954						
ANR	5076151	Symbol	& createKeypairESH		5075954						
ANR	5076152	Symbol	XML_ParserCreate		5075954						
ANR	5076153	Symbol	pkud . keyMaterial		5075954						
ANR	5076154	Symbol	pkud		5075954						
ANR	5076155	Function	AmazonVMCreateKeypair :: workerFunction	1202:0:46071:47435							
ANR	5076156	FunctionDef	"AmazonVMCreateKeypair :: workerFunction (char * * argv , int argc , std :: string & result_string)"		5076155	0					
ANR	5076157	CompoundStatement		1202:94:46165:47435	5076155	0					
ANR	5076158	ExpressionStatement	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_CREATE_KEYPAIR"" ) == 0 )"	1203:4:46171:46228	5076155	0	True				
ANR	5076159	CallExpression	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_CREATE_KEYPAIR"" ) == 0 )"		5076155	0					
ANR	5076160	Callee	assert		5076155	0					
ANR	5076161	Identifier	assert		5076155	0					
ANR	5076162	ArgumentList	"strcmp ( argv [ 0 ] , ""EC2_VM_CREATE_KEYPAIR"" ) == 0"		5076155	1					
ANR	5076163	Argument	"strcmp ( argv [ 0 ] , ""EC2_VM_CREATE_KEYPAIR"" ) == 0"		5076155	0					
ANR	5076164	EqualityExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_CREATE_KEYPAIR"" ) == 0"		5076155	0		==			
ANR	5076165	CallExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_CREATE_KEYPAIR"" )"		5076155	0					
ANR	5076166	Callee	strcmp		5076155	0					
ANR	5076167	Identifier	strcmp		5076155	0					
ANR	5076168	ArgumentList	argv [ 0 ]		5076155	1					
ANR	5076169	Argument	argv [ 0 ]		5076155	0					
ANR	5076170	ArrayIndexing	argv [ 0 ]		5076155	0					
ANR	5076171	Identifier	argv		5076155	0					
ANR	5076172	PrimaryExpression	0		5076155	1					
ANR	5076173	Argument	"""EC2_VM_CREATE_KEYPAIR"""		5076155	1					
ANR	5076174	PrimaryExpression	"""EC2_VM_CREATE_KEYPAIR"""		5076155	0					
ANR	5076175	PrimaryExpression	0		5076155	1					
ANR	5076176	IdentifierDeclStatement	int requestID ;	1208:4:46411:46424	5076155	1	True				
ANR	5076177	IdentifierDecl	requestID		5076155	0					
ANR	5076178	IdentifierDeclType	int		5076155	0					
ANR	5076179	Identifier	requestID		5076155	1					
ANR	5076180	ExpressionStatement	"get_int ( argv [ 1 ] , & requestID )"	1209:4:46430:46461	5076155	2	True				
ANR	5076181	CallExpression	"get_int ( argv [ 1 ] , & requestID )"		5076155	0					
ANR	5076182	Callee	get_int		5076155	0					
ANR	5076183	Identifier	get_int		5076155	0					
ANR	5076184	ArgumentList	argv [ 1 ]		5076155	1					
ANR	5076185	Argument	argv [ 1 ]		5076155	0					
ANR	5076186	ArrayIndexing	argv [ 1 ]		5076155	0					
ANR	5076187	Identifier	argv		5076155	0					
ANR	5076188	PrimaryExpression	1		5076155	1					
ANR	5076189	Argument	& requestID		5076155	1					
ANR	5076190	UnaryOperationExpression	& requestID		5076155	0					
ANR	5076191	UnaryOperator	&		5076155	0					
ANR	5076192	Identifier	requestID		5076155	1					
ANR	5076193	IfStatement	"if ( ! verify_min_number_args ( argc , 7 ) )"		5076155	3					
ANR	5076194	Condition	"! verify_min_number_args ( argc , 7 )"	1211:8:46476:46510	5076155	0	True				
ANR	5076195	UnaryOperationExpression	"! verify_min_number_args ( argc , 7 )"		5076155	0					
ANR	5076196	UnaryOperator	!		5076155	0					
ANR	5076197	CallExpression	"verify_min_number_args ( argc , 7 )"		5076155	1					
ANR	5076198	Callee	verify_min_number_args		5076155	0					
ANR	5076199	Identifier	verify_min_number_args		5076155	0					
ANR	5076200	ArgumentList	argc		5076155	1					
ANR	5076201	Argument	argc		5076155	0					
ANR	5076202	Identifier	argc		5076155	0					
ANR	5076203	Argument	7		5076155	1					
ANR	5076204	PrimaryExpression	7		5076155	0					
ANR	5076205	CompoundStatement		10:46:348:348	5076155	1					
ANR	5076206	ExpressionStatement	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"	1212:8:46524:46599	5076155	0	True				
ANR	5076207	AssignmentExpression	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		5076155	0		=			
ANR	5076208	Identifier	result_string		5076155	0					
ANR	5076209	CallExpression	"create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		5076155	1					
ANR	5076210	Callee	create_failure_result		5076155	0					
ANR	5076211	Identifier	create_failure_result		5076155	0					
ANR	5076212	ArgumentList	requestID		5076155	1					
ANR	5076213	Argument	requestID		5076155	0					
ANR	5076214	Identifier	requestID		5076155	0					
ANR	5076215	Argument	"""Wrong_Argument_Number"""		5076155	1					
ANR	5076216	PrimaryExpression	"""Wrong_Argument_Number"""		5076155	0					
ANR	5076217	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 7 , argv [ 0 ] )"	1213:8:46609:46721	5076155	1	True				
ANR	5076218	CallExpression	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 7 , argv [ 0 ] )"		5076155	0					
ANR	5076219	Callee	dprintf		5076155	0					
ANR	5076220	Identifier	dprintf		5076155	0					
ANR	5076221	ArgumentList	D_ALWAYS		5076155	1					
ANR	5076222	Argument	D_ALWAYS		5076155	0					
ANR	5076223	Identifier	D_ALWAYS		5076155	0					
ANR	5076224	Argument	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		5076155	1					
ANR	5076225	PrimaryExpression	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		5076155	0					
ANR	5076226	Argument	argc		5076155	2					
ANR	5076227	Identifier	argc		5076155	0					
ANR	5076228	Argument	7		5076155	3					
ANR	5076229	PrimaryExpression	7		5076155	0					
ANR	5076230	Argument	argv [ 0 ]		5076155	4					
ANR	5076231	ArrayIndexing	argv [ 0 ]		5076155	0					
ANR	5076232	Identifier	argv		5076155	0					
ANR	5076233	PrimaryExpression	0		5076155	1					
ANR	5076234	ReturnStatement	return false ;	1215:8:46731:46743	5076155	2	True				
ANR	5076235	Identifier	false		5076155	0					
ANR	5076236	IdentifierDeclStatement	AmazonVMCreateKeypair ckpRequest ;	1219:4:46805:46837	5076155	4	True				
ANR	5076237	IdentifierDecl	ckpRequest		5076155	0					
ANR	5076238	IdentifierDeclType	AmazonVMCreateKeypair		5076155	0					
ANR	5076239	Identifier	ckpRequest		5076155	1					
ANR	5076240	ExpressionStatement	ckpRequest . serviceURL = argv [ 2 ]	1220:4:46843:46874	5076155	5	True				
ANR	5076241	AssignmentExpression	ckpRequest . serviceURL = argv [ 2 ]		5076155	0		=			
ANR	5076242	MemberAccess	ckpRequest . serviceURL		5076155	0					
ANR	5076243	Identifier	ckpRequest		5076155	0					
ANR	5076244	Identifier	serviceURL		5076155	1					
ANR	5076245	ArrayIndexing	argv [ 2 ]		5076155	1					
ANR	5076246	Identifier	argv		5076155	0					
ANR	5076247	PrimaryExpression	2		5076155	1					
ANR	5076248	ExpressionStatement	ckpRequest . accessKeyFile = argv [ 3 ]	1221:4:46880:46914	5076155	6	True				
ANR	5076249	AssignmentExpression	ckpRequest . accessKeyFile = argv [ 3 ]		5076155	0		=			
ANR	5076250	MemberAccess	ckpRequest . accessKeyFile		5076155	0					
ANR	5076251	Identifier	ckpRequest		5076155	0					
ANR	5076252	Identifier	accessKeyFile		5076155	1					
ANR	5076253	ArrayIndexing	argv [ 3 ]		5076155	1					
ANR	5076254	Identifier	argv		5076155	0					
ANR	5076255	PrimaryExpression	3		5076155	1					
ANR	5076256	ExpressionStatement	ckpRequest . secretKeyFile = argv [ 4 ]	1222:4:46920:46954	5076155	7	True				
ANR	5076257	AssignmentExpression	ckpRequest . secretKeyFile = argv [ 4 ]		5076155	0		=			
ANR	5076258	MemberAccess	ckpRequest . secretKeyFile		5076155	0					
ANR	5076259	Identifier	ckpRequest		5076155	0					
ANR	5076260	Identifier	secretKeyFile		5076155	1					
ANR	5076261	ArrayIndexing	argv [ 4 ]		5076155	1					
ANR	5076262	Identifier	argv		5076155	0					
ANR	5076263	PrimaryExpression	4		5076155	1					
ANR	5076264	ExpressionStatement	"ckpRequest . query_parameters [ ""Action"" ] = ""CreateKeyPair"""	1223:4:46960:47017	5076155	8	True				
ANR	5076265	AssignmentExpression	"ckpRequest . query_parameters [ ""Action"" ] = ""CreateKeyPair"""		5076155	0		=			
ANR	5076266	ArrayIndexing	"ckpRequest . query_parameters [ ""Action"" ]"		5076155	0					
ANR	5076267	MemberAccess	ckpRequest . query_parameters		5076155	0					
ANR	5076268	Identifier	ckpRequest		5076155	0					
ANR	5076269	Identifier	query_parameters		5076155	1					
ANR	5076270	PrimaryExpression	"""Action"""		5076155	1					
ANR	5076271	PrimaryExpression	"""CreateKeyPair"""		5076155	1					
ANR	5076272	ExpressionStatement	"ckpRequest . query_parameters [ ""KeyName"" ] = argv [ 5 ]"	1224:4:47023:47073	5076155	9	True				
ANR	5076273	AssignmentExpression	"ckpRequest . query_parameters [ ""KeyName"" ] = argv [ 5 ]"		5076155	0		=			
ANR	5076274	ArrayIndexing	"ckpRequest . query_parameters [ ""KeyName"" ]"		5076155	0					
ANR	5076275	MemberAccess	ckpRequest . query_parameters		5076155	0					
ANR	5076276	Identifier	ckpRequest		5076155	0					
ANR	5076277	Identifier	query_parameters		5076155	1					
ANR	5076278	PrimaryExpression	"""KeyName"""		5076155	1					
ANR	5076279	ArrayIndexing	argv [ 5 ]		5076155	1					
ANR	5076280	Identifier	argv		5076155	0					
ANR	5076281	PrimaryExpression	5		5076155	1					
ANR	5076282	ExpressionStatement	ckpRequest . privateKeyFileName = argv [ 6 ]	1225:4:47079:47118	5076155	10	True				
ANR	5076283	AssignmentExpression	ckpRequest . privateKeyFileName = argv [ 6 ]		5076155	0		=			
ANR	5076284	MemberAccess	ckpRequest . privateKeyFileName		5076155	0					
ANR	5076285	Identifier	ckpRequest		5076155	0					
ANR	5076286	Identifier	privateKeyFileName		5076155	1					
ANR	5076287	ArrayIndexing	argv [ 6 ]		5076155	1					
ANR	5076288	Identifier	argv		5076155	0					
ANR	5076289	PrimaryExpression	6		5076155	1					
ANR	5076290	IfStatement	if ( ! ckpRequest . SendRequest ( ) )		5076155	11					
ANR	5076291	Condition	! ckpRequest . SendRequest ( )	1228:8:47154:47179	5076155	0	True				
ANR	5076292	UnaryOperationExpression	! ckpRequest . SendRequest ( )		5076155	0					
ANR	5076293	UnaryOperator	!		5076155	0					
ANR	5076294	CallExpression	ckpRequest . SendRequest ( )		5076155	1					
ANR	5076295	Callee	ckpRequest . SendRequest		5076155	0					
ANR	5076296	MemberAccess	ckpRequest . SendRequest		5076155	0					
ANR	5076297	Identifier	ckpRequest		5076155	0					
ANR	5076298	Identifier	SendRequest		5076155	1					
ANR	5076299	ArgumentList			5076155	1					
ANR	5076300	CompoundStatement		27:37:1017:1017	5076155	1					
ANR	5076301	ExpressionStatement	"result_string = create_failure_result ( requestID , ckpRequest . errorMessage . c_str ( ) , ckpRequest . errorCode . c_str ( ) )"	1229:8:47193:47330	5076155	0	True				
ANR	5076302	AssignmentExpression	"result_string = create_failure_result ( requestID , ckpRequest . errorMessage . c_str ( ) , ckpRequest . errorCode . c_str ( ) )"		5076155	0		=			
ANR	5076303	Identifier	result_string		5076155	0					
ANR	5076304	CallExpression	"create_failure_result ( requestID , ckpRequest . errorMessage . c_str ( ) , ckpRequest . errorCode . c_str ( ) )"		5076155	1					
ANR	5076305	Callee	create_failure_result		5076155	0					
ANR	5076306	Identifier	create_failure_result		5076155	0					
ANR	5076307	ArgumentList	requestID		5076155	1					
ANR	5076308	Argument	requestID		5076155	0					
ANR	5076309	Identifier	requestID		5076155	0					
ANR	5076310	Argument	ckpRequest . errorMessage . c_str ( )		5076155	1					
ANR	5076311	CallExpression	ckpRequest . errorMessage . c_str ( )		5076155	0					
ANR	5076312	Callee	ckpRequest . errorMessage . c_str		5076155	0					
ANR	5076313	MemberAccess	ckpRequest . errorMessage . c_str		5076155	0					
ANR	5076314	MemberAccess	ckpRequest . errorMessage		5076155	0					
ANR	5076315	Identifier	ckpRequest		5076155	0					
ANR	5076316	Identifier	errorMessage		5076155	1					
ANR	5076317	Identifier	c_str		5076155	1					
ANR	5076318	ArgumentList			5076155	1					
ANR	5076319	Argument	ckpRequest . errorCode . c_str ( )		5076155	2					
ANR	5076320	CallExpression	ckpRequest . errorCode . c_str ( )		5076155	0					
ANR	5076321	Callee	ckpRequest . errorCode . c_str		5076155	0					
ANR	5076322	MemberAccess	ckpRequest . errorCode . c_str		5076155	0					
ANR	5076323	MemberAccess	ckpRequest . errorCode		5076155	0					
ANR	5076324	Identifier	ckpRequest		5076155	0					
ANR	5076325	Identifier	errorCode		5076155	1					
ANR	5076326	Identifier	c_str		5076155	1					
ANR	5076327	ArgumentList			5076155	1					
ANR	5076328	ElseStatement	else		5076155	0					
ANR	5076329	CompoundStatement		31:11:1177:1177	5076155	0					
ANR	5076330	ExpressionStatement	"result_string = create_success_result ( requestID , NULL )"	1233:8:47353:47409	5076155	0	True				
ANR	5076331	AssignmentExpression	"result_string = create_success_result ( requestID , NULL )"		5076155	0		=			
ANR	5076332	Identifier	result_string		5076155	0					
ANR	5076333	CallExpression	"create_success_result ( requestID , NULL )"		5076155	1					
ANR	5076334	Callee	create_success_result		5076155	0					
ANR	5076335	Identifier	create_success_result		5076155	0					
ANR	5076336	ArgumentList	requestID		5076155	1					
ANR	5076337	Argument	requestID		5076155	0					
ANR	5076338	Identifier	requestID		5076155	0					
ANR	5076339	Argument	NULL		5076155	1					
ANR	5076340	Identifier	NULL		5076155	0					
ANR	5076341	ReturnStatement	return true ;	1236:4:47422:47433	5076155	12	True				
ANR	5076342	Identifier	true		5076155	0					
ANR	5076343	ReturnType	bool		5076155	1					
ANR	5076344	Identifier	AmazonVMCreateKeypair :: workerFunction		5076155	2					
ANR	5076345	ParameterList	"char * * argv , int argc , std :: string & result_string"		5076155	3					
ANR	5076346	Parameter	char * * argv	1202:43:46114:46124	5076155	0	True				
ANR	5076347	ParameterType	char * *		5076155	0					
ANR	5076348	Identifier	argv		5076155	1					
ANR	5076349	Parameter	int argc	1202:56:46127:46134	5076155	1	True				
ANR	5076350	ParameterType	int		5076155	0					
ANR	5076351	Identifier	argc		5076155	1					
ANR	5076352	Parameter	std :: string & result_string	1202:66:46137:46162	5076155	2	True				
ANR	5076353	ParameterType	std :: string &		5076155	0					
ANR	5076354	Identifier	result_string		5076155	1					
ANR	5076355	CFGEntryNode	ENTRY		5076155		True				
ANR	5076356	CFGExitNode	EXIT		5076155		True				
ANR	5076357	Symbol	ckpRequest . errorCode . c_str		5076155						
ANR	5076358	Symbol	ckpRequest . serviceURL		5076155						
ANR	5076359	Symbol	ckpRequest . errorCode		5076155						
ANR	5076360	Symbol	* argv		5076155						
ANR	5076361	Symbol	argv		5076155						
ANR	5076362	Symbol	& requestID		5076155						
ANR	5076363	Symbol	create_success_result		5076155						
ANR	5076364	Symbol	* ckpRequest . query_parameters		5076155						
ANR	5076365	Symbol	ckpRequest . errorMessage . c_str		5076155						
ANR	5076366	Symbol	ckpRequest . SendRequest		5076155						
ANR	5076367	Symbol	* ckpRequest		5076155						
ANR	5076368	Symbol	result_string		5076155						
ANR	5076369	Symbol	ckpRequest . secretKeyFile		5076155						
ANR	5076370	Symbol	argc		5076155						
ANR	5076371	Symbol	strcmp		5076155						
ANR	5076372	Symbol	NULL		5076155						
ANR	5076373	Symbol	D_ALWAYS		5076155						
ANR	5076374	Symbol	false		5076155						
ANR	5076375	Symbol	ckpRequest . accessKeyFile		5076155						
ANR	5076376	Symbol	verify_min_number_args		5076155						
ANR	5076377	Symbol	ckpRequest		5076155						
ANR	5076378	Symbol	ckpRequest . errorMessage		5076155						
ANR	5076379	Symbol	ckpRequest . query_parameters		5076155						
ANR	5076380	Symbol	requestID		5076155						
ANR	5076381	Symbol	create_failure_result		5076155						
ANR	5076382	Symbol	true		5076155						
ANR	5076383	Symbol	ckpRequest . privateKeyFileName		5076155						
ANR	5076384	Function	AmazonVMDestroyKeypair :: AmazonVMDestroyKeypair	1241:0:47518:47569							
ANR	5076385	FunctionDef	AmazonVMDestroyKeypair :: AmazonVMDestroyKeypair ()		5076384	0					
ANR	5076386	CompoundStatement		1241:49:47567:47569	5076384	0					
ANR	5076387	Identifier	AmazonVMDestroyKeypair :: AmazonVMDestroyKeypair		5076384	1					
ANR	5076388	ParameterList			5076384	2					
ANR	5076389	CFGEntryNode	ENTRY		5076384		True				
ANR	5076390	CFGExitNode	EXIT		5076384		True				
ANR	5076391	Function	AmazonVMDestroyKeypair :: ~AmazonVMDestroyKeypair	1243:0:47572:47624							
ANR	5076392	FunctionDef	AmazonVMDestroyKeypair :: ~AmazonVMDestroyKeypair ()		5076391	0					
ANR	5076393	CompoundStatement		1243:50:47622:47624	5076391	0					
ANR	5076394	Identifier	AmazonVMDestroyKeypair :: ~AmazonVMDestroyKeypair		5076391	1					
ANR	5076395	ParameterList			5076391	2					
ANR	5076396	CFGEntryNode	ENTRY		5076391		True				
ANR	5076397	CFGExitNode	EXIT		5076391		True				
ANR	5076398	Function	AmazonVMDestroyKeypair :: workerFunction	1246:0:47727:49049							
ANR	5076399	FunctionDef	"AmazonVMDestroyKeypair :: workerFunction (char * * argv , int argc , std :: string & result_string)"		5076398	0					
ANR	5076400	CompoundStatement		1246:95:47822:49049	5076398	0					
ANR	5076401	ExpressionStatement	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_DESTROY_KEYPAIR"" ) == 0 )"	1247:4:47828:47886	5076398	0	True				
ANR	5076402	CallExpression	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_DESTROY_KEYPAIR"" ) == 0 )"		5076398	0					
ANR	5076403	Callee	assert		5076398	0					
ANR	5076404	Identifier	assert		5076398	0					
ANR	5076405	ArgumentList	"strcmp ( argv [ 0 ] , ""EC2_VM_DESTROY_KEYPAIR"" ) == 0"		5076398	1					
ANR	5076406	Argument	"strcmp ( argv [ 0 ] , ""EC2_VM_DESTROY_KEYPAIR"" ) == 0"		5076398	0					
ANR	5076407	EqualityExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_DESTROY_KEYPAIR"" ) == 0"		5076398	0		==			
ANR	5076408	CallExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_DESTROY_KEYPAIR"" )"		5076398	0					
ANR	5076409	Callee	strcmp		5076398	0					
ANR	5076410	Identifier	strcmp		5076398	0					
ANR	5076411	ArgumentList	argv [ 0 ]		5076398	1					
ANR	5076412	Argument	argv [ 0 ]		5076398	0					
ANR	5076413	ArrayIndexing	argv [ 0 ]		5076398	0					
ANR	5076414	Identifier	argv		5076398	0					
ANR	5076415	PrimaryExpression	0		5076398	1					
ANR	5076416	Argument	"""EC2_VM_DESTROY_KEYPAIR"""		5076398	1					
ANR	5076417	PrimaryExpression	"""EC2_VM_DESTROY_KEYPAIR"""		5076398	0					
ANR	5076418	PrimaryExpression	0		5076398	1					
ANR	5076419	IdentifierDeclStatement	int requestID ;	1252:4:48069:48082	5076398	1	True				
ANR	5076420	IdentifierDecl	requestID		5076398	0					
ANR	5076421	IdentifierDeclType	int		5076398	0					
ANR	5076422	Identifier	requestID		5076398	1					
ANR	5076423	ExpressionStatement	"get_int ( argv [ 1 ] , & requestID )"	1253:4:48088:48119	5076398	2	True				
ANR	5076424	CallExpression	"get_int ( argv [ 1 ] , & requestID )"		5076398	0					
ANR	5076425	Callee	get_int		5076398	0					
ANR	5076426	Identifier	get_int		5076398	0					
ANR	5076427	ArgumentList	argv [ 1 ]		5076398	1					
ANR	5076428	Argument	argv [ 1 ]		5076398	0					
ANR	5076429	ArrayIndexing	argv [ 1 ]		5076398	0					
ANR	5076430	Identifier	argv		5076398	0					
ANR	5076431	PrimaryExpression	1		5076398	1					
ANR	5076432	Argument	& requestID		5076398	1					
ANR	5076433	UnaryOperationExpression	& requestID		5076398	0					
ANR	5076434	UnaryOperator	&		5076398	0					
ANR	5076435	Identifier	requestID		5076398	1					
ANR	5076436	IfStatement	"if ( ! verify_min_number_args ( argc , 6 ) )"		5076398	3					
ANR	5076437	Condition	"! verify_min_number_args ( argc , 6 )"	1255:8:48134:48168	5076398	0	True				
ANR	5076438	UnaryOperationExpression	"! verify_min_number_args ( argc , 6 )"		5076398	0					
ANR	5076439	UnaryOperator	!		5076398	0					
ANR	5076440	CallExpression	"verify_min_number_args ( argc , 6 )"		5076398	1					
ANR	5076441	Callee	verify_min_number_args		5076398	0					
ANR	5076442	Identifier	verify_min_number_args		5076398	0					
ANR	5076443	ArgumentList	argc		5076398	1					
ANR	5076444	Argument	argc		5076398	0					
ANR	5076445	Identifier	argc		5076398	0					
ANR	5076446	Argument	6		5076398	1					
ANR	5076447	PrimaryExpression	6		5076398	0					
ANR	5076448	CompoundStatement		10:46:349:349	5076398	1					
ANR	5076449	ExpressionStatement	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"	1256:8:48182:48257	5076398	0	True				
ANR	5076450	AssignmentExpression	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		5076398	0		=			
ANR	5076451	Identifier	result_string		5076398	0					
ANR	5076452	CallExpression	"create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		5076398	1					
ANR	5076453	Callee	create_failure_result		5076398	0					
ANR	5076454	Identifier	create_failure_result		5076398	0					
ANR	5076455	ArgumentList	requestID		5076398	1					
ANR	5076456	Argument	requestID		5076398	0					
ANR	5076457	Identifier	requestID		5076398	0					
ANR	5076458	Argument	"""Wrong_Argument_Number"""		5076398	1					
ANR	5076459	PrimaryExpression	"""Wrong_Argument_Number"""		5076398	0					
ANR	5076460	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 6 , argv [ 0 ] )"	1257:8:48267:48379	5076398	1	True				
ANR	5076461	CallExpression	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 6 , argv [ 0 ] )"		5076398	0					
ANR	5076462	Callee	dprintf		5076398	0					
ANR	5076463	Identifier	dprintf		5076398	0					
ANR	5076464	ArgumentList	D_ALWAYS		5076398	1					
ANR	5076465	Argument	D_ALWAYS		5076398	0					
ANR	5076466	Identifier	D_ALWAYS		5076398	0					
ANR	5076467	Argument	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		5076398	1					
ANR	5076468	PrimaryExpression	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		5076398	0					
ANR	5076469	Argument	argc		5076398	2					
ANR	5076470	Identifier	argc		5076398	0					
ANR	5076471	Argument	6		5076398	3					
ANR	5076472	PrimaryExpression	6		5076398	0					
ANR	5076473	Argument	argv [ 0 ]		5076398	4					
ANR	5076474	ArrayIndexing	argv [ 0 ]		5076398	0					
ANR	5076475	Identifier	argv		5076398	0					
ANR	5076476	PrimaryExpression	0		5076398	1					
ANR	5076477	ReturnStatement	return false ;	1259:8:48389:48401	5076398	2	True				
ANR	5076478	Identifier	false		5076398	0					
ANR	5076479	IdentifierDeclStatement	AmazonVMDestroyKeypair dkpRequest ;	1263:4:48463:48496	5076398	4	True				
ANR	5076480	IdentifierDecl	dkpRequest		5076398	0					
ANR	5076481	IdentifierDeclType	AmazonVMDestroyKeypair		5076398	0					
ANR	5076482	Identifier	dkpRequest		5076398	1					
ANR	5076483	ExpressionStatement	dkpRequest . serviceURL = argv [ 2 ]	1264:4:48502:48533	5076398	5	True				
ANR	5076484	AssignmentExpression	dkpRequest . serviceURL = argv [ 2 ]		5076398	0		=			
ANR	5076485	MemberAccess	dkpRequest . serviceURL		5076398	0					
ANR	5076486	Identifier	dkpRequest		5076398	0					
ANR	5076487	Identifier	serviceURL		5076398	1					
ANR	5076488	ArrayIndexing	argv [ 2 ]		5076398	1					
ANR	5076489	Identifier	argv		5076398	0					
ANR	5076490	PrimaryExpression	2		5076398	1					
ANR	5076491	ExpressionStatement	dkpRequest . accessKeyFile = argv [ 3 ]	1265:4:48539:48573	5076398	6	True				
ANR	5076492	AssignmentExpression	dkpRequest . accessKeyFile = argv [ 3 ]		5076398	0		=			
ANR	5076493	MemberAccess	dkpRequest . accessKeyFile		5076398	0					
ANR	5076494	Identifier	dkpRequest		5076398	0					
ANR	5076495	Identifier	accessKeyFile		5076398	1					
ANR	5076496	ArrayIndexing	argv [ 3 ]		5076398	1					
ANR	5076497	Identifier	argv		5076398	0					
ANR	5076498	PrimaryExpression	3		5076398	1					
ANR	5076499	ExpressionStatement	dkpRequest . secretKeyFile = argv [ 4 ]	1266:4:48579:48613	5076398	7	True				
ANR	5076500	AssignmentExpression	dkpRequest . secretKeyFile = argv [ 4 ]		5076398	0		=			
ANR	5076501	MemberAccess	dkpRequest . secretKeyFile		5076398	0					
ANR	5076502	Identifier	dkpRequest		5076398	0					
ANR	5076503	Identifier	secretKeyFile		5076398	1					
ANR	5076504	ArrayIndexing	argv [ 4 ]		5076398	1					
ANR	5076505	Identifier	argv		5076398	0					
ANR	5076506	PrimaryExpression	4		5076398	1					
ANR	5076507	ExpressionStatement	"dkpRequest . query_parameters [ ""Action"" ] = ""DeleteKeyPair"""	1267:4:48619:48676	5076398	8	True				
ANR	5076508	AssignmentExpression	"dkpRequest . query_parameters [ ""Action"" ] = ""DeleteKeyPair"""		5076398	0		=			
ANR	5076509	ArrayIndexing	"dkpRequest . query_parameters [ ""Action"" ]"		5076398	0					
ANR	5076510	MemberAccess	dkpRequest . query_parameters		5076398	0					
ANR	5076511	Identifier	dkpRequest		5076398	0					
ANR	5076512	Identifier	query_parameters		5076398	1					
ANR	5076513	PrimaryExpression	"""Action"""		5076398	1					
ANR	5076514	PrimaryExpression	"""DeleteKeyPair"""		5076398	1					
ANR	5076515	ExpressionStatement	"dkpRequest . query_parameters [ ""KeyName"" ] = argv [ 5 ]"	1268:4:48682:48732	5076398	9	True				
ANR	5076516	AssignmentExpression	"dkpRequest . query_parameters [ ""KeyName"" ] = argv [ 5 ]"		5076398	0		=			
ANR	5076517	ArrayIndexing	"dkpRequest . query_parameters [ ""KeyName"" ]"		5076398	0					
ANR	5076518	MemberAccess	dkpRequest . query_parameters		5076398	0					
ANR	5076519	Identifier	dkpRequest		5076398	0					
ANR	5076520	Identifier	query_parameters		5076398	1					
ANR	5076521	PrimaryExpression	"""KeyName"""		5076398	1					
ANR	5076522	ArrayIndexing	argv [ 5 ]		5076398	1					
ANR	5076523	Identifier	argv		5076398	0					
ANR	5076524	PrimaryExpression	5		5076398	1					
ANR	5076525	IfStatement	if ( ! dkpRequest . SendRequest ( ) )		5076398	10					
ANR	5076526	Condition	! dkpRequest . SendRequest ( )	1271:8:48768:48793	5076398	0	True				
ANR	5076527	UnaryOperationExpression	! dkpRequest . SendRequest ( )		5076398	0					
ANR	5076528	UnaryOperator	!		5076398	0					
ANR	5076529	CallExpression	dkpRequest . SendRequest ( )		5076398	1					
ANR	5076530	Callee	dkpRequest . SendRequest		5076398	0					
ANR	5076531	MemberAccess	dkpRequest . SendRequest		5076398	0					
ANR	5076532	Identifier	dkpRequest		5076398	0					
ANR	5076533	Identifier	SendRequest		5076398	1					
ANR	5076534	ArgumentList			5076398	1					
ANR	5076535	CompoundStatement		26:37:974:974	5076398	1					
ANR	5076536	ExpressionStatement	"result_string = create_failure_result ( requestID , dkpRequest . errorMessage . c_str ( ) , dkpRequest . errorCode . c_str ( ) )"	1272:8:48807:48944	5076398	0	True				
ANR	5076537	AssignmentExpression	"result_string = create_failure_result ( requestID , dkpRequest . errorMessage . c_str ( ) , dkpRequest . errorCode . c_str ( ) )"		5076398	0		=			
ANR	5076538	Identifier	result_string		5076398	0					
ANR	5076539	CallExpression	"create_failure_result ( requestID , dkpRequest . errorMessage . c_str ( ) , dkpRequest . errorCode . c_str ( ) )"		5076398	1					
ANR	5076540	Callee	create_failure_result		5076398	0					
ANR	5076541	Identifier	create_failure_result		5076398	0					
ANR	5076542	ArgumentList	requestID		5076398	1					
ANR	5076543	Argument	requestID		5076398	0					
ANR	5076544	Identifier	requestID		5076398	0					
ANR	5076545	Argument	dkpRequest . errorMessage . c_str ( )		5076398	1					
ANR	5076546	CallExpression	dkpRequest . errorMessage . c_str ( )		5076398	0					
ANR	5076547	Callee	dkpRequest . errorMessage . c_str		5076398	0					
ANR	5076548	MemberAccess	dkpRequest . errorMessage . c_str		5076398	0					
ANR	5076549	MemberAccess	dkpRequest . errorMessage		5076398	0					
ANR	5076550	Identifier	dkpRequest		5076398	0					
ANR	5076551	Identifier	errorMessage		5076398	1					
ANR	5076552	Identifier	c_str		5076398	1					
ANR	5076553	ArgumentList			5076398	1					
ANR	5076554	Argument	dkpRequest . errorCode . c_str ( )		5076398	2					
ANR	5076555	CallExpression	dkpRequest . errorCode . c_str ( )		5076398	0					
ANR	5076556	Callee	dkpRequest . errorCode . c_str		5076398	0					
ANR	5076557	MemberAccess	dkpRequest . errorCode . c_str		5076398	0					
ANR	5076558	MemberAccess	dkpRequest . errorCode		5076398	0					
ANR	5076559	Identifier	dkpRequest		5076398	0					
ANR	5076560	Identifier	errorCode		5076398	1					
ANR	5076561	Identifier	c_str		5076398	1					
ANR	5076562	ArgumentList			5076398	1					
ANR	5076563	ElseStatement	else		5076398	0					
ANR	5076564	CompoundStatement		30:11:1134:1134	5076398	0					
ANR	5076565	ExpressionStatement	"result_string = create_success_result ( requestID , NULL )"	1276:8:48967:49023	5076398	0	True				
ANR	5076566	AssignmentExpression	"result_string = create_success_result ( requestID , NULL )"		5076398	0		=			
ANR	5076567	Identifier	result_string		5076398	0					
ANR	5076568	CallExpression	"create_success_result ( requestID , NULL )"		5076398	1					
ANR	5076569	Callee	create_success_result		5076398	0					
ANR	5076570	Identifier	create_success_result		5076398	0					
ANR	5076571	ArgumentList	requestID		5076398	1					
ANR	5076572	Argument	requestID		5076398	0					
ANR	5076573	Identifier	requestID		5076398	0					
ANR	5076574	Argument	NULL		5076398	1					
ANR	5076575	Identifier	NULL		5076398	0					
ANR	5076576	ReturnStatement	return true ;	1279:4:49036:49047	5076398	11	True				
ANR	5076577	Identifier	true		5076398	0					
ANR	5076578	ReturnType	bool		5076398	1					
ANR	5076579	Identifier	AmazonVMDestroyKeypair :: workerFunction		5076398	2					
ANR	5076580	ParameterList	"char * * argv , int argc , std :: string & result_string"		5076398	3					
ANR	5076581	Parameter	char * * argv	1246:44:47771:47781	5076398	0	True				
ANR	5076582	ParameterType	char * *		5076398	0					
ANR	5076583	Identifier	argv		5076398	1					
ANR	5076584	Parameter	int argc	1246:57:47784:47791	5076398	1	True				
ANR	5076585	ParameterType	int		5076398	0					
ANR	5076586	Identifier	argc		5076398	1					
ANR	5076587	Parameter	std :: string & result_string	1246:67:47794:47819	5076398	2	True				
ANR	5076588	ParameterType	std :: string &		5076398	0					
ANR	5076589	Identifier	result_string		5076398	1					
ANR	5076590	CFGEntryNode	ENTRY		5076398		True				
ANR	5076591	CFGExitNode	EXIT		5076398		True				
ANR	5076592	Symbol	* dkpRequest . query_parameters		5076398						
ANR	5076593	Symbol	dkpRequest . query_parameters		5076398						
ANR	5076594	Symbol	* argv		5076398						
ANR	5076595	Symbol	argv		5076398						
ANR	5076596	Symbol	& requestID		5076398						
ANR	5076597	Symbol	create_success_result		5076398						
ANR	5076598	Symbol	dkpRequest		5076398						
ANR	5076599	Symbol	dkpRequest . accessKeyFile		5076398						
ANR	5076600	Symbol	dkpRequest . errorCode . c_str		5076398						
ANR	5076601	Symbol	result_string		5076398						
ANR	5076602	Symbol	argc		5076398						
ANR	5076603	Symbol	strcmp		5076398						
ANR	5076604	Symbol	dkpRequest . errorCode		5076398						
ANR	5076605	Symbol	dkpRequest . errorMessage		5076398						
ANR	5076606	Symbol	NULL		5076398						
ANR	5076607	Symbol	D_ALWAYS		5076398						
ANR	5076608	Symbol	false		5076398						
ANR	5076609	Symbol	dkpRequest . secretKeyFile		5076398						
ANR	5076610	Symbol	verify_min_number_args		5076398						
ANR	5076611	Symbol	* dkpRequest		5076398						
ANR	5076612	Symbol	requestID		5076398						
ANR	5076613	Symbol	create_failure_result		5076398						
ANR	5076614	Symbol	true		5076398						
ANR	5076615	Symbol	dkpRequest . SendRequest		5076398						
ANR	5076616	Symbol	dkpRequest . errorMessage . c_str		5076398						
ANR	5076617	Symbol	dkpRequest . serviceURL		5076398						
ANR	5076618	Function	AmazonVMKeypairNames :: AmazonVMKeypairNames	1284:0:49132:49179							
ANR	5076619	FunctionDef	AmazonVMKeypairNames :: AmazonVMKeypairNames ()		5076618	0					
ANR	5076620	CompoundStatement		1284:45:49177:49179	5076618	0					
ANR	5076621	Identifier	AmazonVMKeypairNames :: AmazonVMKeypairNames		5076618	1					
ANR	5076622	ParameterList			5076618	2					
ANR	5076623	CFGEntryNode	ENTRY		5076618		True				
ANR	5076624	CFGExitNode	EXIT		5076618		True				
ANR	5076625	Function	AmazonVMKeypairNames :: ~AmazonVMKeypairNames	1286:0:49182:49230							
ANR	5076626	FunctionDef	AmazonVMKeypairNames :: ~AmazonVMKeypairNames ()		5076625	0					
ANR	5076627	CompoundStatement		1286:46:49228:49230	5076625	0					
ANR	5076628	Identifier	AmazonVMKeypairNames :: ~AmazonVMKeypairNames		5076625	1					
ANR	5076629	ParameterList			5076625	2					
ANR	5076630	CFGEntryNode	ENTRY		5076625		True				
ANR	5076631	CFGExitNode	EXIT		5076625		True				
ANR	5076632	ClassDef	keyNamesUD_t	1288:0:49233:49428							
ANR	5076633	DeclStmt									
ANR	5076634	Decl							bool	bool	inKeyName
ANR	5076635	DeclStmt									
ANR	5076636	Decl							std :: string	std :: string	keyName
ANR	5076637	DeclStmt									
ANR	5076638	Decl							StringList	StringList &	keyNameList
ANR	5076639	Function	keyNamesUD_t	1293:4:49339:49426							
ANR	5076640	FunctionDef	keyNamesUD_t (StringList & slr)		5076639	3					
ANR	5076641	CompoundStatement		1293:89:49424:49426	5076639	0					
ANR	5076642	Identifier	keyNamesUD_t		5076639	1					
ANR	5076643	ParameterList	StringList & slr		5076639	2					
ANR	5076644	Parameter	StringList & slr	1293:18:49353:49368	5076639	0	True				
ANR	5076645	ParameterType	StringList &		5076639	0					
ANR	5076646	Identifier	slr		5076639	1					
ANR	5076647	CFGEntryNode	ENTRY		5076639		True				
ANR	5076648	CFGExitNode	EXIT		5076639		True				
ANR	5076649	Symbol	slr		5076639						
ANR	5076650	DeclStmt									
ANR	5076651	Decl							struct keyNamesUD_t	struct keyNamesUD_t	keyNamesUD
ANR	5076652	DeclStmt									
ANR	5076653	Decl							keyNamesUD	keyNamesUD *	knud
ANR	5076654	Function	keypairNamesCDH	1311:0:49890:50124							
ANR	5076655	FunctionDef	"keypairNamesCDH (void * vUserData , const XML_Char * cdata , int len)"		5076654	0					
ANR	5076656	CompoundStatement		1311:74:49964:50124	5076654	0					
ANR	5076657	IdentifierDeclStatement	keyNamesUD * knud = ( keyNamesUD * ) vUserData ;	1312:4:49970:50013	5076654	0	True				
ANR	5076658	IdentifierDecl	* knud = ( keyNamesUD * ) vUserData		5076654	0					
ANR	5076659	IdentifierDeclType	keyNamesUD *		5076654	0					
ANR	5076660	Identifier	knud		5076654	1					
ANR	5076661	AssignmentExpression	* knud = ( keyNamesUD * ) vUserData		5076654	2		=			
ANR	5076662	Identifier	knud		5076654	0					
ANR	5076663	CastExpression	( keyNamesUD * ) vUserData		5076654	1					
ANR	5076664	CastTarget	keyNamesUD *		5076654	0					
ANR	5076665	Identifier	vUserData		5076654	1					
ANR	5076666	IfStatement	if ( knud -> inKeyName )		5076654	1					
ANR	5076667	Condition	knud -> inKeyName	1313:8:50023:50037	5076654	0	True				
ANR	5076668	PtrMemberAccess	knud -> inKeyName		5076654	0					
ANR	5076669	Identifier	knud		5076654	0					
ANR	5076670	Identifier	inKeyName		5076654	1					
ANR	5076671	CompoundStatement		3:26:76:76	5076654	1					
ANR	5076672	ExpressionStatement	"appendToString ( ( void * ) cdata , len , 1 , ( void * ) & knud -> keyName )"	1314:8:50051:50116	5076654	0	True				
ANR	5076673	CallExpression	"appendToString ( ( void * ) cdata , len , 1 , ( void * ) & knud -> keyName )"		5076654	0					
ANR	5076674	Callee	appendToString		5076654	0					
ANR	5076675	Identifier	appendToString		5076654	0					
ANR	5076676	ArgumentList	( void * ) cdata		5076654	1					
ANR	5076677	Argument	( void * ) cdata		5076654	0					
ANR	5076678	CastExpression	( void * ) cdata		5076654	0					
ANR	5076679	CastTarget	void *		5076654	0					
ANR	5076680	Identifier	cdata		5076654	1					
ANR	5076681	Argument	len		5076654	1					
ANR	5076682	Identifier	len		5076654	0					
ANR	5076683	Argument	1		5076654	2					
ANR	5076684	PrimaryExpression	1		5076654	0					
ANR	5076685	Argument	( void * ) & knud -> keyName		5076654	3					
ANR	5076686	CastExpression	( void * ) & knud -> keyName		5076654	0					
ANR	5076687	CastTarget	void *		5076654	0					
ANR	5076688	UnaryOperationExpression	& knud -> keyName		5076654	1					
ANR	5076689	UnaryOperator	&		5076654	0					
ANR	5076690	PtrMemberAccess	knud -> keyName		5076654	1					
ANR	5076691	Identifier	knud		5076654	0					
ANR	5076692	Identifier	keyName		5076654	1					
ANR	5076693	ReturnType	void		5076654	1					
ANR	5076694	Identifier	keypairNamesCDH		5076654	2					
ANR	5076695	ParameterList	"void * vUserData , const XML_Char * cdata , int len"		5076654	3					
ANR	5076696	Parameter	void * vUserData	1311:22:49912:49927	5076654	0	True				
ANR	5076697	ParameterType	void *		5076654	0					
ANR	5076698	Identifier	vUserData		5076654	1					
ANR	5076699	Parameter	const XML_Char * cdata	1311:40:49930:49951	5076654	1	True				
ANR	5076700	ParameterType	const XML_Char *		5076654	0					
ANR	5076701	Identifier	cdata		5076654	1					
ANR	5076702	Parameter	int len	1311:64:49954:49960	5076654	2	True				
ANR	5076703	ParameterType	int		5076654	0					
ANR	5076704	Identifier	len		5076654	1					
ANR	5076705	CFGEntryNode	ENTRY		5076654		True				
ANR	5076706	CFGExitNode	EXIT		5076654		True				
ANR	5076707	Symbol	knud		5076654						
ANR	5076708	Symbol	len		5076654						
ANR	5076709	Symbol	knud -> inKeyName		5076654						
ANR	5076710	Symbol	vUserData		5076654						
ANR	5076711	Symbol	* knud		5076654						
ANR	5076712	Symbol	& knud -> keyName		5076654						
ANR	5076713	Symbol	cdata		5076654						
ANR	5076714	Function	keypairNamesEEH	1319:0:50147:50542							
ANR	5076715	FunctionDef	"keypairNamesEEH (void * vUserData , const XML_Char * name)"		5076714	0					
ANR	5076716	CompoundStatement		1319:64:50211:50542	5076714	0					
ANR	5076717	IdentifierDeclStatement	keyNamesUD * knud = ( keyNamesUD * ) vUserData ;	1320:4:50217:50260	5076714	0	True				
ANR	5076718	IdentifierDecl	* knud = ( keyNamesUD * ) vUserData		5076714	0					
ANR	5076719	IdentifierDeclType	keyNamesUD *		5076714	0					
ANR	5076720	Identifier	knud		5076714	1					
ANR	5076721	AssignmentExpression	* knud = ( keyNamesUD * ) vUserData		5076714	2		=			
ANR	5076722	Identifier	knud		5076714	0					
ANR	5076723	CastExpression	( keyNamesUD * ) vUserData		5076714	1					
ANR	5076724	CastTarget	keyNamesUD *		5076714	0					
ANR	5076725	Identifier	vUserData		5076714	1					
ANR	5076726	IfStatement	"if ( strcasecmp ( ( const char * ) name , ""KeyName"" ) == 0 )"		5076714	1					
ANR	5076727	Condition	"strcasecmp ( ( const char * ) name , ""KeyName"" ) == 0"	1321:8:50270:50317	5076714	0	True				
ANR	5076728	EqualityExpression	"strcasecmp ( ( const char * ) name , ""KeyName"" ) == 0"		5076714	0		==			
ANR	5076729	CallExpression	"strcasecmp ( ( const char * ) name , ""KeyName"" )"		5076714	0					
ANR	5076730	Callee	strcasecmp		5076714	0					
ANR	5076731	Identifier	strcasecmp		5076714	0					
ANR	5076732	ArgumentList	( const char * ) name		5076714	1					
ANR	5076733	Argument	( const char * ) name		5076714	0					
ANR	5076734	CastExpression	( const char * ) name		5076714	0					
ANR	5076735	CastTarget	const char *		5076714	0					
ANR	5076736	Identifier	name		5076714	1					
ANR	5076737	Argument	"""KeyName"""		5076714	1					
ANR	5076738	PrimaryExpression	"""KeyName"""		5076714	0					
ANR	5076739	PrimaryExpression	0		5076714	1					
ANR	5076740	CompoundStatement		3:59:109:109	5076714	1					
ANR	5076741	ExpressionStatement	knud -> inKeyName = false	1322:8:50331:50354	5076714	0	True				
ANR	5076742	AssignmentExpression	knud -> inKeyName = false		5076714	0		=			
ANR	5076743	PtrMemberAccess	knud -> inKeyName		5076714	0					
ANR	5076744	Identifier	knud		5076714	0					
ANR	5076745	Identifier	inKeyName		5076714	1					
ANR	5076746	Identifier	false		5076714	1					
ANR	5076747	ExpressionStatement	knud -> keyNameList . append ( knud -> keyName . c_str ( ) )	1324:8:50454:50503	5076714	1	True				
ANR	5076748	CallExpression	knud -> keyNameList . append ( knud -> keyName . c_str ( ) )		5076714	0					
ANR	5076749	Callee	knud -> keyNameList . append		5076714	0					
ANR	5076750	MemberAccess	knud -> keyNameList . append		5076714	0					
ANR	5076751	PtrMemberAccess	knud -> keyNameList		5076714	0					
ANR	5076752	Identifier	knud		5076714	0					
ANR	5076753	Identifier	keyNameList		5076714	1					
ANR	5076754	Identifier	append		5076714	1					
ANR	5076755	ArgumentList	knud -> keyName . c_str ( )		5076714	1					
ANR	5076756	Argument	knud -> keyName . c_str ( )		5076714	0					
ANR	5076757	CallExpression	knud -> keyName . c_str ( )		5076714	0					
ANR	5076758	Callee	knud -> keyName . c_str		5076714	0					
ANR	5076759	MemberAccess	knud -> keyName . c_str		5076714	0					
ANR	5076760	PtrMemberAccess	knud -> keyName		5076714	0					
ANR	5076761	Identifier	knud		5076714	0					
ANR	5076762	Identifier	keyName		5076714	1					
ANR	5076763	Identifier	c_str		5076714	1					
ANR	5076764	ArgumentList			5076714	1					
ANR	5076765	ExpressionStatement	knud -> keyName . clear ( )	1325:8:50513:50534	5076714	2	True				
ANR	5076766	CallExpression	knud -> keyName . clear ( )		5076714	0					
ANR	5076767	Callee	knud -> keyName . clear		5076714	0					
ANR	5076768	MemberAccess	knud -> keyName . clear		5076714	0					
ANR	5076769	PtrMemberAccess	knud -> keyName		5076714	0					
ANR	5076770	Identifier	knud		5076714	0					
ANR	5076771	Identifier	keyName		5076714	1					
ANR	5076772	Identifier	clear		5076714	1					
ANR	5076773	ArgumentList			5076714	1					
ANR	5076774	ReturnType	void		5076714	1					
ANR	5076775	Identifier	keypairNamesEEH		5076714	2					
ANR	5076776	ParameterList	"void * vUserData , const XML_Char * name"		5076714	3					
ANR	5076777	Parameter	void * vUserData	1319:22:50169:50184	5076714	0	True				
ANR	5076778	ParameterType	void *		5076714	0					
ANR	5076779	Identifier	vUserData		5076714	1					
ANR	5076780	Parameter	const XML_Char * name	1319:40:50187:50207	5076714	1	True				
ANR	5076781	ParameterType	const XML_Char *		5076714	0					
ANR	5076782	Identifier	name		5076714	1					
ANR	5076783	CFGEntryNode	ENTRY		5076714		True				
ANR	5076784	CFGExitNode	EXIT		5076714		True				
ANR	5076785	Symbol	knud		5076714						
ANR	5076786	Symbol	knud -> inKeyName		5076714						
ANR	5076787	Symbol	knud -> keyNameList		5076714						
ANR	5076788	Symbol	vUserData		5076714						
ANR	5076789	Symbol	name		5076714						
ANR	5076790	Symbol	* knud		5076714						
ANR	5076791	Symbol	false		5076714						
ANR	5076792	Symbol	knud -> keyName		5076714						
ANR	5076793	Symbol	strcasecmp		5076714						
ANR	5076794	Symbol	knud -> keyName . c_str		5076714						
ANR	5076795	Function	AmazonVMKeypairNames :: SendRequest	1329:0:50545:51141							
ANR	5076796	FunctionDef	AmazonVMKeypairNames :: SendRequest ()		5076795	0					
ANR	5076797	CompoundStatement		1329:41:50586:51141	5076795	0					
ANR	5076798	IdentifierDeclStatement	bool result = AmazonRequest :: SendRequest ( ) ;	1330:4:50592:50634	5076795	0	True				
ANR	5076799	IdentifierDecl	result = AmazonRequest :: SendRequest ( )		5076795	0					
ANR	5076800	IdentifierDeclType	bool		5076795	0					
ANR	5076801	Identifier	result		5076795	1					
ANR	5076802	AssignmentExpression	result = AmazonRequest :: SendRequest ( )		5076795	2		=			
ANR	5076803	Identifier	result		5076795	0					
ANR	5076804	CallExpression	AmazonRequest :: SendRequest ( )		5076795	1					
ANR	5076805	Callee	AmazonRequest :: SendRequest		5076795	0					
ANR	5076806	Identifier	AmazonRequest :: SendRequest		5076795	0					
ANR	5076807	ArgumentList			5076795	1					
ANR	5076808	IfStatement	if ( result )		5076795	1					
ANR	5076809	Condition	result	1331:8:50644:50649	5076795	0	True				
ANR	5076810	Identifier	result		5076795	0					
ANR	5076811	CompoundStatement		6:8:196:236	5076795	1					
ANR	5076812	IdentifierDeclStatement	keyNamesUD knud ( this -> keyNames ) ;	1333:8:50740:50773	5076795	0	True				
ANR	5076813	IdentifierDecl	knud ( this -> keyNames )		5076795	0					
ANR	5076814	IdentifierDeclType	keyNamesUD		5076795	0					
ANR	5076815	Identifier	knud		5076795	1					
ANR	5076816	PtrMemberAccess	this -> keyNames		5076795	2					
ANR	5076817	Identifier	this		5076795	0					
ANR	5076818	Identifier	keyNames		5076795	1					
ANR	5076819	IdentifierDeclStatement	XML_Parser xp = XML_ParserCreate ( NULL ) ;	1334:8:50783:50823	5076795	1	True				
ANR	5076820	IdentifierDecl	xp = XML_ParserCreate ( NULL )		5076795	0					
ANR	5076821	IdentifierDeclType	XML_Parser		5076795	0					
ANR	5076822	Identifier	xp		5076795	1					
ANR	5076823	AssignmentExpression	xp = XML_ParserCreate ( NULL )		5076795	2		=			
ANR	5076824	Identifier	xp		5076795	0					
ANR	5076825	CallExpression	XML_ParserCreate ( NULL )		5076795	1					
ANR	5076826	Callee	XML_ParserCreate		5076795	0					
ANR	5076827	Identifier	XML_ParserCreate		5076795	0					
ANR	5076828	ArgumentList	NULL		5076795	1					
ANR	5076829	Argument	NULL		5076795	0					
ANR	5076830	Identifier	NULL		5076795	0					
ANR	5076831	ExpressionStatement	"XML_SetElementHandler ( xp , & keypairNamesESH , & keypairNamesEEH )"	1335:8:50833:50898	5076795	2	True				
ANR	5076832	CallExpression	"XML_SetElementHandler ( xp , & keypairNamesESH , & keypairNamesEEH )"		5076795	0					
ANR	5076833	Callee	XML_SetElementHandler		5076795	0					
ANR	5076834	Identifier	XML_SetElementHandler		5076795	0					
ANR	5076835	ArgumentList	xp		5076795	1					
ANR	5076836	Argument	xp		5076795	0					
ANR	5076837	Identifier	xp		5076795	0					
ANR	5076838	Argument	& keypairNamesESH		5076795	1					
ANR	5076839	UnaryOperationExpression	& keypairNamesESH		5076795	0					
ANR	5076840	UnaryOperator	&		5076795	0					
ANR	5076841	Identifier	keypairNamesESH		5076795	1					
ANR	5076842	Argument	& keypairNamesEEH		5076795	2					
ANR	5076843	UnaryOperationExpression	& keypairNamesEEH		5076795	0					
ANR	5076844	UnaryOperator	&		5076795	0					
ANR	5076845	Identifier	keypairNamesEEH		5076795	1					
ANR	5076846	ExpressionStatement	"XML_SetCharacterDataHandler ( xp , & keypairNamesCDH )"	1336:8:50908:50960	5076795	3	True				
ANR	5076847	CallExpression	"XML_SetCharacterDataHandler ( xp , & keypairNamesCDH )"		5076795	0					
ANR	5076848	Callee	XML_SetCharacterDataHandler		5076795	0					
ANR	5076849	Identifier	XML_SetCharacterDataHandler		5076795	0					
ANR	5076850	ArgumentList	xp		5076795	1					
ANR	5076851	Argument	xp		5076795	0					
ANR	5076852	Identifier	xp		5076795	0					
ANR	5076853	Argument	& keypairNamesCDH		5076795	1					
ANR	5076854	UnaryOperationExpression	& keypairNamesCDH		5076795	0					
ANR	5076855	UnaryOperator	&		5076795	0					
ANR	5076856	Identifier	keypairNamesCDH		5076795	1					
ANR	5076857	ExpressionStatement	"XML_SetUserData ( xp , & knud )"	1337:8:50970:50999	5076795	4	True				
ANR	5076858	CallExpression	"XML_SetUserData ( xp , & knud )"		5076795	0					
ANR	5076859	Callee	XML_SetUserData		5076795	0					
ANR	5076860	Identifier	XML_SetUserData		5076795	0					
ANR	5076861	ArgumentList	xp		5076795	1					
ANR	5076862	Argument	xp		5076795	0					
ANR	5076863	Identifier	xp		5076795	0					
ANR	5076864	Argument	& knud		5076795	1					
ANR	5076865	UnaryOperationExpression	& knud		5076795	0					
ANR	5076866	UnaryOperator	&		5076795	0					
ANR	5076867	Identifier	knud		5076795	1					
ANR	5076868	ExpressionStatement	"XML_Parse ( xp , this -> resultString . c_str ( ) , this -> resultString . length ( ) , 1 )"	1338:8:51009:51084	5076795	5	True				
ANR	5076869	CallExpression	"XML_Parse ( xp , this -> resultString . c_str ( ) , this -> resultString . length ( ) , 1 )"		5076795	0					
ANR	5076870	Callee	XML_Parse		5076795	0					
ANR	5076871	Identifier	XML_Parse		5076795	0					
ANR	5076872	ArgumentList	xp		5076795	1					
ANR	5076873	Argument	xp		5076795	0					
ANR	5076874	Identifier	xp		5076795	0					
ANR	5076875	Argument	this -> resultString . c_str ( )		5076795	1					
ANR	5076876	CallExpression	this -> resultString . c_str ( )		5076795	0					
ANR	5076877	Callee	this -> resultString . c_str		5076795	0					
ANR	5076878	MemberAccess	this -> resultString . c_str		5076795	0					
ANR	5076879	PtrMemberAccess	this -> resultString		5076795	0					
ANR	5076880	Identifier	this		5076795	0					
ANR	5076881	Identifier	resultString		5076795	1					
ANR	5076882	Identifier	c_str		5076795	1					
ANR	5076883	ArgumentList			5076795	1					
ANR	5076884	Argument	this -> resultString . length ( )		5076795	2					
ANR	5076885	CallExpression	this -> resultString . length ( )		5076795	0					
ANR	5076886	Callee	this -> resultString . length		5076795	0					
ANR	5076887	MemberAccess	this -> resultString . length		5076795	0					
ANR	5076888	PtrMemberAccess	this -> resultString		5076795	0					
ANR	5076889	Identifier	this		5076795	0					
ANR	5076890	Identifier	resultString		5076795	1					
ANR	5076891	Identifier	length		5076795	1					
ANR	5076892	ArgumentList			5076795	1					
ANR	5076893	Argument	1		5076795	3					
ANR	5076894	PrimaryExpression	1		5076795	0					
ANR	5076895	ExpressionStatement	XML_ParserFree ( xp )	1339:8:51094:51114	5076795	6	True				
ANR	5076896	CallExpression	XML_ParserFree ( xp )		5076795	0					
ANR	5076897	Callee	XML_ParserFree		5076795	0					
ANR	5076898	Identifier	XML_ParserFree		5076795	0					
ANR	5076899	ArgumentList	xp		5076795	1					
ANR	5076900	Argument	xp		5076795	0					
ANR	5076901	Identifier	xp		5076795	0					
ANR	5076902	ReturnStatement	return result ;	1341:4:51126:51139	5076795	2	True				
ANR	5076903	Identifier	result		5076795	0					
ANR	5076904	ReturnType	bool		5076795	1					
ANR	5076905	Identifier	AmazonVMKeypairNames :: SendRequest		5076795	2					
ANR	5076906	ParameterList			5076795	3					
ANR	5076907	CFGEntryNode	ENTRY		5076795		True				
ANR	5076908	CFGExitNode	EXIT		5076795		True				
ANR	5076909	Symbol	knud		5076795						
ANR	5076910	Symbol	& knud		5076795						
ANR	5076911	Symbol	NULL		5076795						
ANR	5076912	Symbol	AmazonRequest :: SendRequest		5076795						
ANR	5076913	Symbol	this -> resultString		5076795						
ANR	5076914	Symbol	this -> resultString . length		5076795						
ANR	5076915	Symbol	this -> resultString . c_str		5076795						
ANR	5076916	Symbol	this		5076795						
ANR	5076917	Symbol	result		5076795						
ANR	5076918	Symbol	* this		5076795						
ANR	5076919	Symbol	& keypairNamesCDH		5076795						
ANR	5076920	Symbol	& keypairNamesEEH		5076795						
ANR	5076921	Symbol	xp		5076795						
ANR	5076922	Symbol	XML_ParserCreate		5076795						
ANR	5076923	Symbol	& keypairNamesESH		5076795						
ANR	5076924	Function	AmazonVMKeypairNames :: workerFunction	1345:0:51232:52554							
ANR	5076925	FunctionDef	"AmazonVMKeypairNames :: workerFunction (char * * argv , int argc , std :: string & result_string)"		5076924	0					
ANR	5076926	CompoundStatement		1345:93:51325:52554	5076924	0					
ANR	5076927	ExpressionStatement	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_KEYPAIR_NAMES"" ) == 0 )"	1346:4:51331:51387	5076924	0	True				
ANR	5076928	CallExpression	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_KEYPAIR_NAMES"" ) == 0 )"		5076924	0					
ANR	5076929	Callee	assert		5076924	0					
ANR	5076930	Identifier	assert		5076924	0					
ANR	5076931	ArgumentList	"strcmp ( argv [ 0 ] , ""EC2_VM_KEYPAIR_NAMES"" ) == 0"		5076924	1					
ANR	5076932	Argument	"strcmp ( argv [ 0 ] , ""EC2_VM_KEYPAIR_NAMES"" ) == 0"		5076924	0					
ANR	5076933	EqualityExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_KEYPAIR_NAMES"" ) == 0"		5076924	0		==			
ANR	5076934	CallExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_KEYPAIR_NAMES"" )"		5076924	0					
ANR	5076935	Callee	strcmp		5076924	0					
ANR	5076936	Identifier	strcmp		5076924	0					
ANR	5076937	ArgumentList	argv [ 0 ]		5076924	1					
ANR	5076938	Argument	argv [ 0 ]		5076924	0					
ANR	5076939	ArrayIndexing	argv [ 0 ]		5076924	0					
ANR	5076940	Identifier	argv		5076924	0					
ANR	5076941	PrimaryExpression	0		5076924	1					
ANR	5076942	Argument	"""EC2_VM_KEYPAIR_NAMES"""		5076924	1					
ANR	5076943	PrimaryExpression	"""EC2_VM_KEYPAIR_NAMES"""		5076924	0					
ANR	5076944	PrimaryExpression	0		5076924	1					
ANR	5076945	IdentifierDeclStatement	int requestID ;	1351:4:51576:51589	5076924	1	True				
ANR	5076946	IdentifierDecl	requestID		5076924	0					
ANR	5076947	IdentifierDeclType	int		5076924	0					
ANR	5076948	Identifier	requestID		5076924	1					
ANR	5076949	ExpressionStatement	"get_int ( argv [ 1 ] , & requestID )"	1352:4:51595:51626	5076924	2	True				
ANR	5076950	CallExpression	"get_int ( argv [ 1 ] , & requestID )"		5076924	0					
ANR	5076951	Callee	get_int		5076924	0					
ANR	5076952	Identifier	get_int		5076924	0					
ANR	5076953	ArgumentList	argv [ 1 ]		5076924	1					
ANR	5076954	Argument	argv [ 1 ]		5076924	0					
ANR	5076955	ArrayIndexing	argv [ 1 ]		5076924	0					
ANR	5076956	Identifier	argv		5076924	0					
ANR	5076957	PrimaryExpression	1		5076924	1					
ANR	5076958	Argument	& requestID		5076924	1					
ANR	5076959	UnaryOperationExpression	& requestID		5076924	0					
ANR	5076960	UnaryOperator	&		5076924	0					
ANR	5076961	Identifier	requestID		5076924	1					
ANR	5076962	IfStatement	"if ( ! verify_min_number_args ( argc , 5 ) )"		5076924	3					
ANR	5076963	Condition	"! verify_min_number_args ( argc , 5 )"	1354:8:51641:51675	5076924	0	True				
ANR	5076964	UnaryOperationExpression	"! verify_min_number_args ( argc , 5 )"		5076924	0					
ANR	5076965	UnaryOperator	!		5076924	0					
ANR	5076966	CallExpression	"verify_min_number_args ( argc , 5 )"		5076924	1					
ANR	5076967	Callee	verify_min_number_args		5076924	0					
ANR	5076968	Identifier	verify_min_number_args		5076924	0					
ANR	5076969	ArgumentList	argc		5076924	1					
ANR	5076970	Argument	argc		5076924	0					
ANR	5076971	Identifier	argc		5076924	0					
ANR	5076972	Argument	5		5076924	1					
ANR	5076973	PrimaryExpression	5		5076924	0					
ANR	5076974	CompoundStatement		10:46:353:353	5076924	1					
ANR	5076975	ExpressionStatement	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"	1355:8:51689:51764	5076924	0	True				
ANR	5076976	AssignmentExpression	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		5076924	0		=			
ANR	5076977	Identifier	result_string		5076924	0					
ANR	5076978	CallExpression	"create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		5076924	1					
ANR	5076979	Callee	create_failure_result		5076924	0					
ANR	5076980	Identifier	create_failure_result		5076924	0					
ANR	5076981	ArgumentList	requestID		5076924	1					
ANR	5076982	Argument	requestID		5076924	0					
ANR	5076983	Identifier	requestID		5076924	0					
ANR	5076984	Argument	"""Wrong_Argument_Number"""		5076924	1					
ANR	5076985	PrimaryExpression	"""Wrong_Argument_Number"""		5076924	0					
ANR	5076986	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 5 , argv [ 0 ] )"	1356:8:51774:51886	5076924	1	True				
ANR	5076987	CallExpression	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 5 , argv [ 0 ] )"		5076924	0					
ANR	5076988	Callee	dprintf		5076924	0					
ANR	5076989	Identifier	dprintf		5076924	0					
ANR	5076990	ArgumentList	D_ALWAYS		5076924	1					
ANR	5076991	Argument	D_ALWAYS		5076924	0					
ANR	5076992	Identifier	D_ALWAYS		5076924	0					
ANR	5076993	Argument	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		5076924	1					
ANR	5076994	PrimaryExpression	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		5076924	0					
ANR	5076995	Argument	argc		5076924	2					
ANR	5076996	Identifier	argc		5076924	0					
ANR	5076997	Argument	5		5076924	3					
ANR	5076998	PrimaryExpression	5		5076924	0					
ANR	5076999	Argument	argv [ 0 ]		5076924	4					
ANR	5077000	ArrayIndexing	argv [ 0 ]		5076924	0					
ANR	5077001	Identifier	argv		5076924	0					
ANR	5077002	PrimaryExpression	0		5076924	1					
ANR	5077003	ReturnStatement	return false ;	1358:8:51896:51908	5076924	2	True				
ANR	5077004	Identifier	false		5076924	0					
ANR	5077005	IdentifierDeclStatement	AmazonVMKeypairNames keypairRequest ;	1362:4:51970:52005	5076924	4	True				
ANR	5077006	IdentifierDecl	keypairRequest		5076924	0					
ANR	5077007	IdentifierDeclType	AmazonVMKeypairNames		5076924	0					
ANR	5077008	Identifier	keypairRequest		5076924	1					
ANR	5077009	ExpressionStatement	keypairRequest . serviceURL = argv [ 2 ]	1363:4:52011:52046	5076924	5	True				
ANR	5077010	AssignmentExpression	keypairRequest . serviceURL = argv [ 2 ]		5076924	0		=			
ANR	5077011	MemberAccess	keypairRequest . serviceURL		5076924	0					
ANR	5077012	Identifier	keypairRequest		5076924	0					
ANR	5077013	Identifier	serviceURL		5076924	1					
ANR	5077014	ArrayIndexing	argv [ 2 ]		5076924	1					
ANR	5077015	Identifier	argv		5076924	0					
ANR	5077016	PrimaryExpression	2		5076924	1					
ANR	5077017	ExpressionStatement	keypairRequest . accessKeyFile = argv [ 3 ]	1364:4:52052:52090	5076924	6	True				
ANR	5077018	AssignmentExpression	keypairRequest . accessKeyFile = argv [ 3 ]		5076924	0		=			
ANR	5077019	MemberAccess	keypairRequest . accessKeyFile		5076924	0					
ANR	5077020	Identifier	keypairRequest		5076924	0					
ANR	5077021	Identifier	accessKeyFile		5076924	1					
ANR	5077022	ArrayIndexing	argv [ 3 ]		5076924	1					
ANR	5077023	Identifier	argv		5076924	0					
ANR	5077024	PrimaryExpression	3		5076924	1					
ANR	5077025	ExpressionStatement	keypairRequest . secretKeyFile = argv [ 4 ]	1365:4:52096:52134	5076924	7	True				
ANR	5077026	AssignmentExpression	keypairRequest . secretKeyFile = argv [ 4 ]		5076924	0		=			
ANR	5077027	MemberAccess	keypairRequest . secretKeyFile		5076924	0					
ANR	5077028	Identifier	keypairRequest		5076924	0					
ANR	5077029	Identifier	secretKeyFile		5076924	1					
ANR	5077030	ArrayIndexing	argv [ 4 ]		5076924	1					
ANR	5077031	Identifier	argv		5076924	0					
ANR	5077032	PrimaryExpression	4		5076924	1					
ANR	5077033	ExpressionStatement	"keypairRequest . query_parameters [ ""Action"" ] = ""DescribeKeyPairs"""	1366:4:52140:52204	5076924	8	True				
ANR	5077034	AssignmentExpression	"keypairRequest . query_parameters [ ""Action"" ] = ""DescribeKeyPairs"""		5076924	0		=			
ANR	5077035	ArrayIndexing	"keypairRequest . query_parameters [ ""Action"" ]"		5076924	0					
ANR	5077036	MemberAccess	keypairRequest . query_parameters		5076924	0					
ANR	5077037	Identifier	keypairRequest		5076924	0					
ANR	5077038	Identifier	query_parameters		5076924	1					
ANR	5077039	PrimaryExpression	"""Action"""		5076924	1					
ANR	5077040	PrimaryExpression	"""DescribeKeyPairs"""		5076924	1					
ANR	5077041	IfStatement	if ( ! keypairRequest . SendRequest ( ) )		5076924	9					
ANR	5077042	Condition	! keypairRequest . SendRequest ( )	1369:8:52240:52269	5076924	0	True				
ANR	5077043	UnaryOperationExpression	! keypairRequest . SendRequest ( )		5076924	0					
ANR	5077044	UnaryOperator	!		5076924	0					
ANR	5077045	CallExpression	keypairRequest . SendRequest ( )		5076924	1					
ANR	5077046	Callee	keypairRequest . SendRequest		5076924	0					
ANR	5077047	MemberAccess	keypairRequest . SendRequest		5076924	0					
ANR	5077048	Identifier	keypairRequest		5076924	0					
ANR	5077049	Identifier	SendRequest		5076924	1					
ANR	5077050	ArgumentList			5076924	1					
ANR	5077051	CompoundStatement		25:41:947:947	5076924	1					
ANR	5077052	ExpressionStatement	"result_string = create_failure_result ( requestID , keypairRequest . errorMessage . c_str ( ) , keypairRequest . errorCode . c_str ( ) )"	1370:8:52283:52428	5076924	0	True				
ANR	5077053	AssignmentExpression	"result_string = create_failure_result ( requestID , keypairRequest . errorMessage . c_str ( ) , keypairRequest . errorCode . c_str ( ) )"		5076924	0		=			
ANR	5077054	Identifier	result_string		5076924	0					
ANR	5077055	CallExpression	"create_failure_result ( requestID , keypairRequest . errorMessage . c_str ( ) , keypairRequest . errorCode . c_str ( ) )"		5076924	1					
ANR	5077056	Callee	create_failure_result		5076924	0					
ANR	5077057	Identifier	create_failure_result		5076924	0					
ANR	5077058	ArgumentList	requestID		5076924	1					
ANR	5077059	Argument	requestID		5076924	0					
ANR	5077060	Identifier	requestID		5076924	0					
ANR	5077061	Argument	keypairRequest . errorMessage . c_str ( )		5076924	1					
ANR	5077062	CallExpression	keypairRequest . errorMessage . c_str ( )		5076924	0					
ANR	5077063	Callee	keypairRequest . errorMessage . c_str		5076924	0					
ANR	5077064	MemberAccess	keypairRequest . errorMessage . c_str		5076924	0					
ANR	5077065	MemberAccess	keypairRequest . errorMessage		5076924	0					
ANR	5077066	Identifier	keypairRequest		5076924	0					
ANR	5077067	Identifier	errorMessage		5076924	1					
ANR	5077068	Identifier	c_str		5076924	1					
ANR	5077069	ArgumentList			5076924	1					
ANR	5077070	Argument	keypairRequest . errorCode . c_str ( )		5076924	2					
ANR	5077071	CallExpression	keypairRequest . errorCode . c_str ( )		5076924	0					
ANR	5077072	Callee	keypairRequest . errorCode . c_str		5076924	0					
ANR	5077073	MemberAccess	keypairRequest . errorCode . c_str		5076924	0					
ANR	5077074	MemberAccess	keypairRequest . errorCode		5076924	0					
ANR	5077075	Identifier	keypairRequest		5076924	0					
ANR	5077076	Identifier	errorCode		5076924	1					
ANR	5077077	Identifier	c_str		5076924	1					
ANR	5077078	ArgumentList			5076924	1					
ANR	5077079	ElseStatement	else		5076924	0					
ANR	5077080	CompoundStatement		29:11:1115:1115	5076924	0					
ANR	5077081	ExpressionStatement	"result_string = create_success_result ( requestID , & keypairRequest . keyNames )"	1374:8:52451:52528	5076924	0	True				
ANR	5077082	AssignmentExpression	"result_string = create_success_result ( requestID , & keypairRequest . keyNames )"		5076924	0		=			
ANR	5077083	Identifier	result_string		5076924	0					
ANR	5077084	CallExpression	"create_success_result ( requestID , & keypairRequest . keyNames )"		5076924	1					
ANR	5077085	Callee	create_success_result		5076924	0					
ANR	5077086	Identifier	create_success_result		5076924	0					
ANR	5077087	ArgumentList	requestID		5076924	1					
ANR	5077088	Argument	requestID		5076924	0					
ANR	5077089	Identifier	requestID		5076924	0					
ANR	5077090	Argument	& keypairRequest . keyNames		5076924	1					
ANR	5077091	UnaryOperationExpression	& keypairRequest . keyNames		5076924	0					
ANR	5077092	UnaryOperator	&		5076924	0					
ANR	5077093	MemberAccess	keypairRequest . keyNames		5076924	1					
ANR	5077094	Identifier	keypairRequest		5076924	0					
ANR	5077095	Identifier	keyNames		5076924	1					
ANR	5077096	ReturnStatement	return true ;	1377:4:52541:52552	5076924	10	True				
ANR	5077097	Identifier	true		5076924	0					
ANR	5077098	ReturnType	bool		5076924	1					
ANR	5077099	Identifier	AmazonVMKeypairNames :: workerFunction		5076924	2					
ANR	5077100	ParameterList	"char * * argv , int argc , std :: string & result_string"		5076924	3					
ANR	5077101	Parameter	char * * argv	1345:42:51274:51284	5076924	0	True				
ANR	5077102	ParameterType	char * *		5076924	0					
ANR	5077103	Identifier	argv		5076924	1					
ANR	5077104	Parameter	int argc	1345:55:51287:51294	5076924	1	True				
ANR	5077105	ParameterType	int		5076924	0					
ANR	5077106	Identifier	argc		5076924	1					
ANR	5077107	Parameter	std :: string & result_string	1345:65:51297:51322	5076924	2	True				
ANR	5077108	ParameterType	std :: string &		5076924	0					
ANR	5077109	Identifier	result_string		5076924	1					
ANR	5077110	CFGEntryNode	ENTRY		5076924		True				
ANR	5077111	CFGExitNode	EXIT		5076924		True				
ANR	5077112	Symbol	keypairRequest . errorMessage		5076924						
ANR	5077113	Symbol	& keypairRequest . keyNames		5076924						
ANR	5077114	Symbol	keypairRequest . errorCode . c_str		5076924						
ANR	5077115	Symbol	* argv		5076924						
ANR	5077116	Symbol	keypairRequest		5076924						
ANR	5077117	Symbol	argv		5076924						
ANR	5077118	Symbol	& requestID		5076924						
ANR	5077119	Symbol	create_success_result		5076924						
ANR	5077120	Symbol	keypairRequest . SendRequest		5076924						
ANR	5077121	Symbol	keypairRequest . query_parameters		5076924						
ANR	5077122	Symbol	keypairRequest . serviceURL		5076924						
ANR	5077123	Symbol	result_string		5076924						
ANR	5077124	Symbol	argc		5076924						
ANR	5077125	Symbol	strcmp		5076924						
ANR	5077126	Symbol	& keypairRequest		5076924						
ANR	5077127	Symbol	keypairRequest . errorCode		5076924						
ANR	5077128	Symbol	D_ALWAYS		5076924						
ANR	5077129	Symbol	false		5076924						
ANR	5077130	Symbol	* keypairRequest . query_parameters		5076924						
ANR	5077131	Symbol	verify_min_number_args		5076924						
ANR	5077132	Symbol	keypairRequest . secretKeyFile		5076924						
ANR	5077133	Symbol	keypairRequest . accessKeyFile		5076924						
ANR	5077134	Symbol	keypairRequest . errorMessage . c_str		5076924						
ANR	5077135	Symbol	* keypairRequest		5076924						
ANR	5077136	Symbol	requestID		5076924						
ANR	5077137	Symbol	create_failure_result		5076924						
ANR	5077138	Symbol	true		5076924						
ANR	5077139	Function	AmazonAssociateAddress :: AmazonAssociateAddress	1382:0:52637:52688							
ANR	5077140	FunctionDef	AmazonAssociateAddress :: AmazonAssociateAddress ()		5077139	0					
ANR	5077141	CompoundStatement		1382:49:52686:52688	5077139	0					
ANR	5077142	Identifier	AmazonAssociateAddress :: AmazonAssociateAddress		5077139	1					
ANR	5077143	ParameterList			5077139	2					
ANR	5077144	CFGEntryNode	ENTRY		5077139		True				
ANR	5077145	CFGExitNode	EXIT		5077139		True				
ANR	5077146	Function	AmazonAssociateAddress :: ~AmazonAssociateAddress	1384:0:52691:52743							
ANR	5077147	FunctionDef	AmazonAssociateAddress :: ~AmazonAssociateAddress ()		5077146	0					
ANR	5077148	CompoundStatement		1384:50:52741:52743	5077146	0					
ANR	5077149	Identifier	AmazonAssociateAddress :: ~AmazonAssociateAddress		5077146	1					
ANR	5077150	ParameterList			5077146	2					
ANR	5077151	CFGEntryNode	ENTRY		5077146		True				
ANR	5077152	CFGExitNode	EXIT		5077146		True				
ANR	5077153	Function	AmazonAssociateAddress :: workerFunction	1387:0:52865:54711							
ANR	5077154	FunctionDef	"AmazonAssociateAddress :: workerFunction (char * * argv , int argc , std :: string & result_string)"		5077153	0					
ANR	5077155	CompoundStatement		1387:95:52960:54711	5077153	0					
ANR	5077156	ExpressionStatement	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_ASSOCIATE_ADDRESS"" ) == 0 )"	1388:4:52966:53026	5077153	0	True				
ANR	5077157	CallExpression	"assert ( strcmp ( argv [ 0 ] , ""EC2_VM_ASSOCIATE_ADDRESS"" ) == 0 )"		5077153	0					
ANR	5077158	Callee	assert		5077153	0					
ANR	5077159	Identifier	assert		5077153	0					
ANR	5077160	ArgumentList	"strcmp ( argv [ 0 ] , ""EC2_VM_ASSOCIATE_ADDRESS"" ) == 0"		5077153	1					
ANR	5077161	Argument	"strcmp ( argv [ 0 ] , ""EC2_VM_ASSOCIATE_ADDRESS"" ) == 0"		5077153	0					
ANR	5077162	EqualityExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_ASSOCIATE_ADDRESS"" ) == 0"		5077153	0		==			
ANR	5077163	CallExpression	"strcmp ( argv [ 0 ] , ""EC2_VM_ASSOCIATE_ADDRESS"" )"		5077153	0					
ANR	5077164	Callee	strcmp		5077153	0					
ANR	5077165	Identifier	strcmp		5077153	0					
ANR	5077166	ArgumentList	argv [ 0 ]		5077153	1					
ANR	5077167	Argument	argv [ 0 ]		5077153	0					
ANR	5077168	ArrayIndexing	argv [ 0 ]		5077153	0					
ANR	5077169	Identifier	argv		5077153	0					
ANR	5077170	PrimaryExpression	0		5077153	1					
ANR	5077171	Argument	"""EC2_VM_ASSOCIATE_ADDRESS"""		5077153	1					
ANR	5077172	PrimaryExpression	"""EC2_VM_ASSOCIATE_ADDRESS"""		5077153	0					
ANR	5077173	PrimaryExpression	0		5077153	1					
ANR	5077174	IdentifierDeclStatement	int requestID ;	1393:4:53226:53239	5077153	1	True				
ANR	5077175	IdentifierDecl	requestID		5077153	0					
ANR	5077176	IdentifierDeclType	int		5077153	0					
ANR	5077177	Identifier	requestID		5077153	1					
ANR	5077178	ExpressionStatement	"get_int ( argv [ 1 ] , & requestID )"	1394:4:53245:53276	5077153	2	True				
ANR	5077179	CallExpression	"get_int ( argv [ 1 ] , & requestID )"		5077153	0					
ANR	5077180	Callee	get_int		5077153	0					
ANR	5077181	Identifier	get_int		5077153	0					
ANR	5077182	ArgumentList	argv [ 1 ]		5077153	1					
ANR	5077183	Argument	argv [ 1 ]		5077153	0					
ANR	5077184	ArrayIndexing	argv [ 1 ]		5077153	0					
ANR	5077185	Identifier	argv		5077153	0					
ANR	5077186	PrimaryExpression	1		5077153	1					
ANR	5077187	Argument	& requestID		5077153	1					
ANR	5077188	UnaryOperationExpression	& requestID		5077153	0					
ANR	5077189	UnaryOperator	&		5077153	0					
ANR	5077190	Identifier	requestID		5077153	1					
ANR	5077191	IfStatement	"if ( ! verify_min_number_args ( argc , 7 ) )"		5077153	3					
ANR	5077192	Condition	"! verify_min_number_args ( argc , 7 )"	1396:8:53291:53325	5077153	0	True				
ANR	5077193	UnaryOperationExpression	"! verify_min_number_args ( argc , 7 )"		5077153	0					
ANR	5077194	UnaryOperator	!		5077153	0					
ANR	5077195	CallExpression	"verify_min_number_args ( argc , 7 )"		5077153	1					
ANR	5077196	Callee	verify_min_number_args		5077153	0					
ANR	5077197	Identifier	verify_min_number_args		5077153	0					
ANR	5077198	ArgumentList	argc		5077153	1					
ANR	5077199	Argument	argc		5077153	0					
ANR	5077200	Identifier	argc		5077153	0					
ANR	5077201	Argument	7		5077153	1					
ANR	5077202	PrimaryExpression	7		5077153	0					
ANR	5077203	CompoundStatement		10:46:368:368	5077153	1					
ANR	5077204	ExpressionStatement	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"	1397:8:53339:53414	5077153	0	True				
ANR	5077205	AssignmentExpression	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		5077153	0		=			
ANR	5077206	Identifier	result_string		5077153	0					
ANR	5077207	CallExpression	"create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		5077153	1					
ANR	5077208	Callee	create_failure_result		5077153	0					
ANR	5077209	Identifier	create_failure_result		5077153	0					
ANR	5077210	ArgumentList	requestID		5077153	1					
ANR	5077211	Argument	requestID		5077153	0					
ANR	5077212	Identifier	requestID		5077153	0					
ANR	5077213	Argument	"""Wrong_Argument_Number"""		5077153	1					
ANR	5077214	PrimaryExpression	"""Wrong_Argument_Number"""		5077153	0					
ANR	5077215	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 7 , argv [ 0 ] )"	1398:8:53424:53519	5077153	1	True				
ANR	5077216	CallExpression	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 7 , argv [ 0 ] )"		5077153	0					
ANR	5077217	Callee	dprintf		5077153	0					
ANR	5077218	Identifier	dprintf		5077153	0					
ANR	5077219	ArgumentList	D_ALWAYS		5077153	1					
ANR	5077220	Argument	D_ALWAYS		5077153	0					
ANR	5077221	Identifier	D_ALWAYS		5077153	0					
ANR	5077222	Argument	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		5077153	1					
ANR	5077223	PrimaryExpression	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		5077153	0					
ANR	5077224	Argument	argc		5077153	2					
ANR	5077225	Identifier	argc		5077153	0					
ANR	5077226	Argument	7		5077153	3					
ANR	5077227	PrimaryExpression	7		5077153	0					
ANR	5077228	Argument	argv [ 0 ]		5077153	4					
ANR	5077229	ArrayIndexing	argv [ 0 ]		5077153	0					
ANR	5077230	Identifier	argv		5077153	0					
ANR	5077231	PrimaryExpression	0		5077153	1					
ANR	5077232	ReturnStatement	return false ;	1399:8:53529:53541	5077153	2	True				
ANR	5077233	Identifier	false		5077153	0					
ANR	5077234	IdentifierDeclStatement	AmazonAssociateAddress asRequest ;	1403:4:53603:53635	5077153	4	True				
ANR	5077235	IdentifierDecl	asRequest		5077153	0					
ANR	5077236	IdentifierDeclType	AmazonAssociateAddress		5077153	0					
ANR	5077237	Identifier	asRequest		5077153	1					
ANR	5077238	ExpressionStatement	asRequest . serviceURL = argv [ 2 ]	1404:4:53641:53671	5077153	5	True				
ANR	5077239	AssignmentExpression	asRequest . serviceURL = argv [ 2 ]		5077153	0		=			
ANR	5077240	MemberAccess	asRequest . serviceURL		5077153	0					
ANR	5077241	Identifier	asRequest		5077153	0					
ANR	5077242	Identifier	serviceURL		5077153	1					
ANR	5077243	ArrayIndexing	argv [ 2 ]		5077153	1					
ANR	5077244	Identifier	argv		5077153	0					
ANR	5077245	PrimaryExpression	2		5077153	1					
ANR	5077246	ExpressionStatement	asRequest . accessKeyFile = argv [ 3 ]	1405:4:53677:53710	5077153	6	True				
ANR	5077247	AssignmentExpression	asRequest . accessKeyFile = argv [ 3 ]		5077153	0		=			
ANR	5077248	MemberAccess	asRequest . accessKeyFile		5077153	0					
ANR	5077249	Identifier	asRequest		5077153	0					
ANR	5077250	Identifier	accessKeyFile		5077153	1					
ANR	5077251	ArrayIndexing	argv [ 3 ]		5077153	1					
ANR	5077252	Identifier	argv		5077153	0					
ANR	5077253	PrimaryExpression	3		5077153	1					
ANR	5077254	ExpressionStatement	asRequest . secretKeyFile = argv [ 4 ]	1406:4:53716:53749	5077153	7	True				
ANR	5077255	AssignmentExpression	asRequest . secretKeyFile = argv [ 4 ]		5077153	0		=			
ANR	5077256	MemberAccess	asRequest . secretKeyFile		5077153	0					
ANR	5077257	Identifier	asRequest		5077153	0					
ANR	5077258	Identifier	secretKeyFile		5077153	1					
ANR	5077259	ArrayIndexing	argv [ 4 ]		5077153	1					
ANR	5077260	Identifier	argv		5077153	0					
ANR	5077261	PrimaryExpression	4		5077153	1					
ANR	5077262	ExpressionStatement	"asRequest . query_parameters [ ""Action"" ] = ""AssociateAddress"""	1407:4:53755:53814	5077153	8	True				
ANR	5077263	AssignmentExpression	"asRequest . query_parameters [ ""Action"" ] = ""AssociateAddress"""		5077153	0		=			
ANR	5077264	ArrayIndexing	"asRequest . query_parameters [ ""Action"" ]"		5077153	0					
ANR	5077265	MemberAccess	asRequest . query_parameters		5077153	0					
ANR	5077266	Identifier	asRequest		5077153	0					
ANR	5077267	Identifier	query_parameters		5077153	1					
ANR	5077268	PrimaryExpression	"""Action"""		5077153	1					
ANR	5077269	PrimaryExpression	"""AssociateAddress"""		5077153	1					
ANR	5077270	ExpressionStatement	"asRequest . query_parameters [ ""InstanceId"" ] = argv [ 5 ]"	1408:4:53820:53872	5077153	9	True				
ANR	5077271	AssignmentExpression	"asRequest . query_parameters [ ""InstanceId"" ] = argv [ 5 ]"		5077153	0		=			
ANR	5077272	ArrayIndexing	"asRequest . query_parameters [ ""InstanceId"" ]"		5077153	0					
ANR	5077273	MemberAccess	asRequest . query_parameters		5077153	0					
ANR	5077274	Identifier	asRequest		5077153	0					
ANR	5077275	Identifier	query_parameters		5077153	1					
ANR	5077276	PrimaryExpression	"""InstanceId"""		5077153	1					
ANR	5077277	ArrayIndexing	argv [ 5 ]		5077153	1					
ANR	5077278	Identifier	argv		5077153	0					
ANR	5077279	PrimaryExpression	5		5077153	1					
ANR	5077280	IdentifierDeclStatement	const char * pszFullIPStr = argv [ 6 ] ;	1412:1:53964:53999	5077153	10	True				
ANR	5077281	IdentifierDecl	* pszFullIPStr = argv [ 6 ]		5077153	0					
ANR	5077282	IdentifierDeclType	const char *		5077153	0					
ANR	5077283	Identifier	pszFullIPStr		5077153	1					
ANR	5077284	AssignmentExpression	* pszFullIPStr = argv [ 6 ]		5077153	2		=			
ANR	5077285	Identifier	pszFullIPStr		5077153	0					
ANR	5077286	ArrayIndexing	argv [ 6 ]		5077153	1					
ANR	5077287	Identifier	argv		5077153	0					
ANR	5077288	PrimaryExpression	6		5077153	1					
ANR	5077289	IdentifierDeclStatement	const char * pszIPStr = 0 ;	1413:1:54002:54025	5077153	11	True				
ANR	5077290	IdentifierDecl	* pszIPStr = 0		5077153	0					
ANR	5077291	IdentifierDeclType	const char *		5077153	0					
ANR	5077292	Identifier	pszIPStr		5077153	1					
ANR	5077293	AssignmentExpression	* pszIPStr = 0		5077153	2		=			
ANR	5077294	Identifier	pszIPStr		5077153	0					
ANR	5077295	PrimaryExpression	0		5077153	1					
ANR	5077296	IdentifierDeclStatement	const char * pszAllocationId = 0 ;	1414:1:54028:54058	5077153	12	True				
ANR	5077297	IdentifierDecl	* pszAllocationId = 0		5077153	0					
ANR	5077298	IdentifierDeclType	const char *		5077153	0					
ANR	5077299	Identifier	pszAllocationId		5077153	1					
ANR	5077300	AssignmentExpression	* pszAllocationId = 0		5077153	2		=			
ANR	5077301	Identifier	pszAllocationId		5077153	0					
ANR	5077302	PrimaryExpression	0		5077153	1					
ANR	5077303	IdentifierDeclStatement	"StringList elastic_ip_addr_info ( pszFullIPStr , "":"" ) ;"	1415:1:54061:54112	5077153	13	True				
ANR	5077304	IdentifierDecl	"elastic_ip_addr_info ( pszFullIPStr , "":"" )"		5077153	0					
ANR	5077305	IdentifierDeclType	StringList		5077153	0					
ANR	5077306	Identifier	elastic_ip_addr_info		5077153	1					
ANR	5077307	Expression	"pszFullIPStr , "":"""		5077153	2					
ANR	5077308	Identifier	pszFullIPStr		5077153	0					
ANR	5077309	PrimaryExpression	""":"""		5077153	1					
ANR	5077310	ExpressionStatement	elastic_ip_addr_info . rewind ( )	1416:1:54115:54144	5077153	14	True				
ANR	5077311	CallExpression	elastic_ip_addr_info . rewind ( )		5077153	0					
ANR	5077312	Callee	elastic_ip_addr_info . rewind		5077153	0					
ANR	5077313	MemberAccess	elastic_ip_addr_info . rewind		5077153	0					
ANR	5077314	Identifier	elastic_ip_addr_info		5077153	0					
ANR	5077315	Identifier	rewind		5077153	1					
ANR	5077316	ArgumentList			5077153	1					
ANR	5077317	ExpressionStatement	pszIPStr = elastic_ip_addr_info . next ( )	1417:1:54147:54185	5077153	15	True				
ANR	5077318	AssignmentExpression	pszIPStr = elastic_ip_addr_info . next ( )		5077153	0		=			
ANR	5077319	Identifier	pszIPStr		5077153	0					
ANR	5077320	CallExpression	elastic_ip_addr_info . next ( )		5077153	1					
ANR	5077321	Callee	elastic_ip_addr_info . next		5077153	0					
ANR	5077322	MemberAccess	elastic_ip_addr_info . next		5077153	0					
ANR	5077323	Identifier	elastic_ip_addr_info		5077153	0					
ANR	5077324	Identifier	next		5077153	1					
ANR	5077325	ArgumentList			5077153	1					
ANR	5077326	ExpressionStatement	pszAllocationId = elastic_ip_addr_info . next ( )	1418:1:54188:54231	5077153	16	True				
ANR	5077327	AssignmentExpression	pszAllocationId = elastic_ip_addr_info . next ( )		5077153	0		=			
ANR	5077328	Identifier	pszAllocationId		5077153	0					
ANR	5077329	CallExpression	elastic_ip_addr_info . next ( )		5077153	1					
ANR	5077330	Callee	elastic_ip_addr_info . next		5077153	0					
ANR	5077331	MemberAccess	elastic_ip_addr_info . next		5077153	0					
ANR	5077332	Identifier	elastic_ip_addr_info		5077153	0					
ANR	5077333	Identifier	next		5077153	1					
ANR	5077334	ArgumentList			5077153	1					
ANR	5077335	IfStatement	if ( pszAllocationId )		5077153	17					
ANR	5077336	Condition	pszAllocationId	1420:6:54241:54255	5077153	0	True				
ANR	5077337	Identifier	pszAllocationId		5077153	0					
ANR	5077338	CompoundStatement		35:1:1299:1299	5077153	1					
ANR	5077339	ExpressionStatement	"asRequest . query_parameters [ ""AllocationId"" ] = pszAllocationId"	1422:2:54264:54326	5077153	0	True				
ANR	5077340	AssignmentExpression	"asRequest . query_parameters [ ""AllocationId"" ] = pszAllocationId"		5077153	0		=			
ANR	5077341	ArrayIndexing	"asRequest . query_parameters [ ""AllocationId"" ]"		5077153	0					
ANR	5077342	MemberAccess	asRequest . query_parameters		5077153	0					
ANR	5077343	Identifier	asRequest		5077153	0					
ANR	5077344	Identifier	query_parameters		5077153	1					
ANR	5077345	PrimaryExpression	"""AllocationId"""		5077153	1					
ANR	5077346	Identifier	pszAllocationId		5077153	1					
ANR	5077347	ElseStatement	else		5077153	0					
ANR	5077348	CompoundStatement		39:1:1377:1377	5077153	0					
ANR	5077349	ExpressionStatement	"asRequest . query_parameters [ ""PublicIp"" ] = pszIPStr"	1426:2:54342:54393	5077153	0	True				
ANR	5077350	AssignmentExpression	"asRequest . query_parameters [ ""PublicIp"" ] = pszIPStr"		5077153	0		=			
ANR	5077351	ArrayIndexing	"asRequest . query_parameters [ ""PublicIp"" ]"		5077153	0					
ANR	5077352	MemberAccess	asRequest . query_parameters		5077153	0					
ANR	5077353	Identifier	asRequest		5077153	0					
ANR	5077354	Identifier	query_parameters		5077153	1					
ANR	5077355	PrimaryExpression	"""PublicIp"""		5077153	1					
ANR	5077356	Identifier	pszIPStr		5077153	1					
ANR	5077357	IfStatement	if ( ! asRequest . SendRequest ( ) )		5077153	18					
ANR	5077358	Condition	! asRequest . SendRequest ( )	1430:8:54433:54457	5077153	0	True				
ANR	5077359	UnaryOperationExpression	! asRequest . SendRequest ( )		5077153	0					
ANR	5077360	UnaryOperator	!		5077153	0					
ANR	5077361	CallExpression	asRequest . SendRequest ( )		5077153	1					
ANR	5077362	Callee	asRequest . SendRequest		5077153	0					
ANR	5077363	MemberAccess	asRequest . SendRequest		5077153	0					
ANR	5077364	Identifier	asRequest		5077153	0					
ANR	5077365	Identifier	SendRequest		5077153	1					
ANR	5077366	ArgumentList			5077153	1					
ANR	5077367	CompoundStatement		44:36:1500:1500	5077153	1					
ANR	5077368	ExpressionStatement	"result_string = create_failure_result ( requestID , asRequest . errorMessage . c_str ( ) , asRequest . errorCode . c_str ( ) )"	1431:8:54471:54606	5077153	0	True				
ANR	5077369	AssignmentExpression	"result_string = create_failure_result ( requestID , asRequest . errorMessage . c_str ( ) , asRequest . errorCode . c_str ( ) )"		5077153	0		=			
ANR	5077370	Identifier	result_string		5077153	0					
ANR	5077371	CallExpression	"create_failure_result ( requestID , asRequest . errorMessage . c_str ( ) , asRequest . errorCode . c_str ( ) )"		5077153	1					
ANR	5077372	Callee	create_failure_result		5077153	0					
ANR	5077373	Identifier	create_failure_result		5077153	0					
ANR	5077374	ArgumentList	requestID		5077153	1					
ANR	5077375	Argument	requestID		5077153	0					
ANR	5077376	Identifier	requestID		5077153	0					
ANR	5077377	Argument	asRequest . errorMessage . c_str ( )		5077153	1					
ANR	5077378	CallExpression	asRequest . errorMessage . c_str ( )		5077153	0					
ANR	5077379	Callee	asRequest . errorMessage . c_str		5077153	0					
ANR	5077380	MemberAccess	asRequest . errorMessage . c_str		5077153	0					
ANR	5077381	MemberAccess	asRequest . errorMessage		5077153	0					
ANR	5077382	Identifier	asRequest		5077153	0					
ANR	5077383	Identifier	errorMessage		5077153	1					
ANR	5077384	Identifier	c_str		5077153	1					
ANR	5077385	ArgumentList			5077153	1					
ANR	5077386	Argument	asRequest . errorCode . c_str ( )		5077153	2					
ANR	5077387	CallExpression	asRequest . errorCode . c_str ( )		5077153	0					
ANR	5077388	Callee	asRequest . errorCode . c_str		5077153	0					
ANR	5077389	MemberAccess	asRequest . errorCode . c_str		5077153	0					
ANR	5077390	MemberAccess	asRequest . errorCode		5077153	0					
ANR	5077391	Identifier	asRequest		5077153	0					
ANR	5077392	Identifier	errorCode		5077153	1					
ANR	5077393	Identifier	c_str		5077153	1					
ANR	5077394	ArgumentList			5077153	1					
ANR	5077395	ElseStatement	else		5077153	0					
ANR	5077396	CompoundStatement		48:11:1658:1658	5077153	0					
ANR	5077397	ExpressionStatement	"result_string = create_success_result ( requestID , NULL )"	1435:8:54629:54685	5077153	0	True				
ANR	5077398	AssignmentExpression	"result_string = create_success_result ( requestID , NULL )"		5077153	0		=			
ANR	5077399	Identifier	result_string		5077153	0					
ANR	5077400	CallExpression	"create_success_result ( requestID , NULL )"		5077153	1					
ANR	5077401	Callee	create_success_result		5077153	0					
ANR	5077402	Identifier	create_success_result		5077153	0					
ANR	5077403	ArgumentList	requestID		5077153	1					
ANR	5077404	Argument	requestID		5077153	0					
ANR	5077405	Identifier	requestID		5077153	0					
ANR	5077406	Argument	NULL		5077153	1					
ANR	5077407	Identifier	NULL		5077153	0					
ANR	5077408	ReturnStatement	return true ;	1438:4:54698:54709	5077153	19	True				
ANR	5077409	Identifier	true		5077153	0					
ANR	5077410	ReturnType	bool		5077153	1					
ANR	5077411	Identifier	AmazonAssociateAddress :: workerFunction		5077153	2					
ANR	5077412	ParameterList	"char * * argv , int argc , std :: string & result_string"		5077153	3					
ANR	5077413	Parameter	char * * argv	1387:44:52909:52919	5077153	0	True				
ANR	5077414	ParameterType	char * *		5077153	0					
ANR	5077415	Identifier	argv		5077153	1					
ANR	5077416	Parameter	int argc	1387:57:52922:52929	5077153	1	True				
ANR	5077417	ParameterType	int		5077153	0					
ANR	5077418	Identifier	argc		5077153	1					
ANR	5077419	Parameter	std :: string & result_string	1387:67:52932:52957	5077153	2	True				
ANR	5077420	ParameterType	std :: string &		5077153	0					
ANR	5077421	Identifier	result_string		5077153	1					
ANR	5077422	CFGEntryNode	ENTRY		5077153		True				
ANR	5077423	CFGExitNode	EXIT		5077153		True				
ANR	5077424	Symbol	asRequest . serviceURL		5077153						
ANR	5077425	Symbol	* argv		5077153						
ANR	5077426	Symbol	argv		5077153						
ANR	5077427	Symbol	& requestID		5077153						
ANR	5077428	Symbol	create_success_result		5077153						
ANR	5077429	Symbol	asRequest . query_parameters		5077153						
ANR	5077430	Symbol	* asRequest		5077153						
ANR	5077431	Symbol	asRequest . errorCode		5077153						
ANR	5077432	Symbol	pszIPStr		5077153						
ANR	5077433	Symbol	result_string		5077153						
ANR	5077434	Symbol	pszAllocationId		5077153						
ANR	5077435	Symbol	asRequest . accessKeyFile		5077153						
ANR	5077436	Symbol	* asRequest . query_parameters		5077153						
ANR	5077437	Symbol	argc		5077153						
ANR	5077438	Symbol	strcmp		5077153						
ANR	5077439	Symbol	asRequest		5077153						
ANR	5077440	Symbol	asRequest . secretKeyFile		5077153						
ANR	5077441	Symbol	NULL		5077153						
ANR	5077442	Symbol	elastic_ip_addr_info . next		5077153						
ANR	5077443	Symbol	asRequest . errorMessage		5077153						
ANR	5077444	Symbol	D_ALWAYS		5077153						
ANR	5077445	Symbol	false		5077153						
ANR	5077446	Symbol	verify_min_number_args		5077153						
ANR	5077447	Symbol	pszFullIPStr		5077153						
ANR	5077448	Symbol	elastic_ip_addr_info		5077153						
ANR	5077449	Symbol	asRequest . errorMessage . c_str		5077153						
ANR	5077450	Symbol	requestID		5077153						
ANR	5077451	Symbol	create_failure_result		5077153						
ANR	5077452	Symbol	true		5077153						
ANR	5077453	Symbol	asRequest . errorCode . c_str		5077153						
ANR	5077454	Symbol	asRequest . SendRequest		5077153						
ANR	5077455	Function	AmazonAttachVolume :: AmazonAttachVolume	1441:0:54714:54757							
ANR	5077456	FunctionDef	AmazonAttachVolume :: AmazonAttachVolume ()		5077455	0					
ANR	5077457	CompoundStatement		1441:41:54755:54757	5077455	0					
ANR	5077458	Identifier	AmazonAttachVolume :: AmazonAttachVolume		5077455	1					
ANR	5077459	ParameterList			5077455	2					
ANR	5077460	CFGEntryNode	ENTRY		5077455		True				
ANR	5077461	CFGExitNode	EXIT		5077455		True				
ANR	5077462	Function	AmazonAttachVolume :: ~AmazonAttachVolume	1443:0:54760:54804							
ANR	5077463	FunctionDef	AmazonAttachVolume :: ~AmazonAttachVolume ()		5077462	0					
ANR	5077464	CompoundStatement		1443:42:54802:54804	5077462	0					
ANR	5077465	Identifier	AmazonAttachVolume :: ~AmazonAttachVolume		5077462	1					
ANR	5077466	ParameterList			5077462	2					
ANR	5077467	CFGEntryNode	ENTRY		5077462		True				
ANR	5077468	CFGExitNode	EXIT		5077462		True				
ANR	5077469	Function	AmazonAttachVolume :: workerFunction	1445:0:54807:56023							
ANR	5077470	FunctionDef	"AmazonAttachVolume :: workerFunction (char * * argv , int argc , std :: string & result_string)"		5077469	0					
ANR	5077471	CompoundStatement		1446:0:54899:56023	5077469	0					
ANR	5077472	ExpressionStatement	"assert ( strcmp ( argv [ 0 ] , ""EC_VM_ATTACH_VOLUME"" ) == 0 )"	1447:1:54902:54957	5077469	0	True				
ANR	5077473	CallExpression	"assert ( strcmp ( argv [ 0 ] , ""EC_VM_ATTACH_VOLUME"" ) == 0 )"		5077469	0					
ANR	5077474	Callee	assert		5077469	0					
ANR	5077475	Identifier	assert		5077469	0					
ANR	5077476	ArgumentList	"strcmp ( argv [ 0 ] , ""EC_VM_ATTACH_VOLUME"" ) == 0"		5077469	1					
ANR	5077477	Argument	"strcmp ( argv [ 0 ] , ""EC_VM_ATTACH_VOLUME"" ) == 0"		5077469	0					
ANR	5077478	EqualityExpression	"strcmp ( argv [ 0 ] , ""EC_VM_ATTACH_VOLUME"" ) == 0"		5077469	0		==			
ANR	5077479	CallExpression	"strcmp ( argv [ 0 ] , ""EC_VM_ATTACH_VOLUME"" )"		5077469	0					
ANR	5077480	Callee	strcmp		5077469	0					
ANR	5077481	Identifier	strcmp		5077469	0					
ANR	5077482	ArgumentList	argv [ 0 ]		5077469	1					
ANR	5077483	Argument	argv [ 0 ]		5077469	0					
ANR	5077484	ArrayIndexing	argv [ 0 ]		5077469	0					
ANR	5077485	Identifier	argv		5077469	0					
ANR	5077486	PrimaryExpression	0		5077469	1					
ANR	5077487	Argument	"""EC_VM_ATTACH_VOLUME"""		5077469	1					
ANR	5077488	PrimaryExpression	"""EC_VM_ATTACH_VOLUME"""		5077469	0					
ANR	5077489	PrimaryExpression	0		5077469	1					
ANR	5077490	IdentifierDeclStatement	int requestID ;	1449:1:54962:54975	5077469	1	True				
ANR	5077491	IdentifierDecl	requestID		5077469	0					
ANR	5077492	IdentifierDeclType	int		5077469	0					
ANR	5077493	Identifier	requestID		5077469	1					
ANR	5077494	ExpressionStatement	"get_int ( argv [ 1 ] , & requestID )"	1450:4:54981:55012	5077469	2	True				
ANR	5077495	CallExpression	"get_int ( argv [ 1 ] , & requestID )"		5077469	0					
ANR	5077496	Callee	get_int		5077469	0					
ANR	5077497	Identifier	get_int		5077469	0					
ANR	5077498	ArgumentList	argv [ 1 ]		5077469	1					
ANR	5077499	Argument	argv [ 1 ]		5077469	0					
ANR	5077500	ArrayIndexing	argv [ 1 ]		5077469	0					
ANR	5077501	Identifier	argv		5077469	0					
ANR	5077502	PrimaryExpression	1		5077469	1					
ANR	5077503	Argument	& requestID		5077469	1					
ANR	5077504	UnaryOperationExpression	& requestID		5077469	0					
ANR	5077505	UnaryOperator	&		5077469	0					
ANR	5077506	Identifier	requestID		5077469	1					
ANR	5077507	IfStatement	"if ( ! verify_min_number_args ( argc , 8 ) )"		5077469	3					
ANR	5077508	Condition	"! verify_min_number_args ( argc , 8 )"	1452:8:55027:55061	5077469	0	True				
ANR	5077509	UnaryOperationExpression	"! verify_min_number_args ( argc , 8 )"		5077469	0					
ANR	5077510	UnaryOperator	!		5077469	0					
ANR	5077511	CallExpression	"verify_min_number_args ( argc , 8 )"		5077469	1					
ANR	5077512	Callee	verify_min_number_args		5077469	0					
ANR	5077513	Identifier	verify_min_number_args		5077469	0					
ANR	5077514	ArgumentList	argc		5077469	1					
ANR	5077515	Argument	argc		5077469	0					
ANR	5077516	Identifier	argc		5077469	0					
ANR	5077517	Argument	8		5077469	1					
ANR	5077518	PrimaryExpression	8		5077469	0					
ANR	5077519	CompoundStatement		7:46:165:165	5077469	1					
ANR	5077520	ExpressionStatement	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"	1453:8:55075:55150	5077469	0	True				
ANR	5077521	AssignmentExpression	"result_string = create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		5077469	0		=			
ANR	5077522	Identifier	result_string		5077469	0					
ANR	5077523	CallExpression	"create_failure_result ( requestID , ""Wrong_Argument_Number"" )"		5077469	1					
ANR	5077524	Callee	create_failure_result		5077469	0					
ANR	5077525	Identifier	create_failure_result		5077469	0					
ANR	5077526	ArgumentList	requestID		5077469	1					
ANR	5077527	Argument	requestID		5077469	0					
ANR	5077528	Identifier	requestID		5077469	0					
ANR	5077529	Argument	"""Wrong_Argument_Number"""		5077469	1					
ANR	5077530	PrimaryExpression	"""Wrong_Argument_Number"""		5077469	0					
ANR	5077531	ExpressionStatement	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 8 , argv [ 0 ] )"	1454:8:55160:55255	5077469	1	True				
ANR	5077532	CallExpression	"dprintf ( D_ALWAYS , ""Wrong number of arguments (%d should be >= %d) to %s\\n"" , argc , 8 , argv [ 0 ] )"		5077469	0					
ANR	5077533	Callee	dprintf		5077469	0					
ANR	5077534	Identifier	dprintf		5077469	0					
ANR	5077535	ArgumentList	D_ALWAYS		5077469	1					
ANR	5077536	Argument	D_ALWAYS		5077469	0					
ANR	5077537	Identifier	D_ALWAYS		5077469	0					
ANR	5077538	Argument	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		5077469	1					
ANR	5077539	PrimaryExpression	"""Wrong number of arguments (%d should be >= %d) to %s\\n"""		5077469	0					
ANR	5077540	Argument	argc		5077469	2					
ANR	5077541	Identifier	argc		5077469	0					
ANR	5077542	Argument	8		5077469	3					
ANR	5077543	PrimaryExpression	8		5077469	0					
ANR	5077544	Argument	argv [ 0 ]		5077469	4					
ANR	5077545	ArrayIndexing	argv [ 0 ]		5077469	0					
ANR	5077546	Identifier	argv		5077469	0					
ANR	5077547	PrimaryExpression	0		5077469	1					
ANR	5077548	ReturnStatement	return false ;	1455:8:55265:55277	5077469	2	True				
ANR	5077549	Identifier	false		5077469	0					
ANR	5077550	IdentifierDeclStatement	AmazonAttachVolume asRequest ;	1459:4:55339:55367	5077469	4	True				
ANR	5077551	IdentifierDecl	asRequest		5077469	0					
ANR	5077552	IdentifierDeclType	AmazonAttachVolume		5077469	0					
ANR	5077553	Identifier	asRequest		5077469	1					
ANR	5077554	ExpressionStatement	asRequest . serviceURL = argv [ 2 ]	1460:4:55373:55403	5077469	5	True				
ANR	5077555	AssignmentExpression	asRequest . serviceURL = argv [ 2 ]		5077469	0		=			
ANR	5077556	MemberAccess	asRequest . serviceURL		5077469	0					
ANR	5077557	Identifier	asRequest		5077469	0					
ANR	5077558	Identifier	serviceURL		5077469	1					
ANR	5077559	ArrayIndexing	argv [ 2 ]		5077469	1					
ANR	5077560	Identifier	argv		5077469	0					
ANR	5077561	PrimaryExpression	2		5077469	1					
ANR	5077562	ExpressionStatement	asRequest . accessKeyFile = argv [ 3 ]	1461:4:55409:55442	5077469	6	True				
ANR	5077563	AssignmentExpression	asRequest . accessKeyFile = argv [ 3 ]		5077469	0		=			
ANR	5077564	MemberAccess	asRequest . accessKeyFile		5077469	0					
ANR	5077565	Identifier	asRequest		5077469	0					
ANR	5077566	Identifier	accessKeyFile		5077469	1					
ANR	5077567	ArrayIndexing	argv [ 3 ]		5077469	1					
ANR	5077568	Identifier	argv		5077469	0					
ANR	5077569	PrimaryExpression	3		5077469	1					
ANR	5077570	ExpressionStatement	asRequest . secretKeyFile = argv [ 4 ]	1462:4:55448:55481	5077469	7	True				
ANR	5077571	AssignmentExpression	asRequest . secretKeyFile = argv [ 4 ]		5077469	0		=			
ANR	5077572	MemberAccess	asRequest . secretKeyFile		5077469	0					
ANR	5077573	Identifier	asRequest		5077469	0					
ANR	5077574	Identifier	secretKeyFile		5077469	1					
ANR	5077575	ArrayIndexing	argv [ 4 ]		5077469	1					
ANR	5077576	Identifier	argv		5077469	0					
ANR	5077577	PrimaryExpression	4		5077469	1					
ANR	5077578	ExpressionStatement	"asRequest . query_parameters [ ""Action"" ] = ""AttachVolume"""	1463:4:55487:55542	5077469	8	True				
ANR	5077579	AssignmentExpression	"asRequest . query_parameters [ ""Action"" ] = ""AttachVolume"""		5077469	0		=			
ANR	5077580	ArrayIndexing	"asRequest . query_parameters [ ""Action"" ]"		5077469	0					
ANR	5077581	MemberAccess	asRequest . query_parameters		5077469	0					
ANR	5077582	Identifier	asRequest		5077469	0					
ANR	5077583	Identifier	query_parameters		5077469	1					
ANR	5077584	PrimaryExpression	"""Action"""		5077469	1					
ANR	5077585	PrimaryExpression	"""AttachVolume"""		5077469	1					
ANR	5077586	ExpressionStatement	"asRequest . query_parameters [ ""VolumeId"" ] = argv [ 5 ]"	1464:4:55548:55598	5077469	9	True				
ANR	5077587	AssignmentExpression	"asRequest . query_parameters [ ""VolumeId"" ] = argv [ 5 ]"		5077469	0		=			
ANR	5077588	ArrayIndexing	"asRequest . query_parameters [ ""VolumeId"" ]"		5077469	0					
ANR	5077589	MemberAccess	asRequest . query_parameters		5077469	0					
ANR	5077590	Identifier	asRequest		5077469	0					
ANR	5077591	Identifier	query_parameters		5077469	1					
ANR	5077592	PrimaryExpression	"""VolumeId"""		5077469	1					
ANR	5077593	ArrayIndexing	argv [ 5 ]		5077469	1					
ANR	5077594	Identifier	argv		5077469	0					
ANR	5077595	PrimaryExpression	5		5077469	1					
ANR	5077596	ExpressionStatement	"asRequest . query_parameters [ ""InstanceId"" ] = argv [ 6 ]"	1465:4:55604:55656	5077469	10	True				
ANR	5077597	AssignmentExpression	"asRequest . query_parameters [ ""InstanceId"" ] = argv [ 6 ]"		5077469	0		=			
ANR	5077598	ArrayIndexing	"asRequest . query_parameters [ ""InstanceId"" ]"		5077469	0					
ANR	5077599	MemberAccess	asRequest . query_parameters		5077469	0					
ANR	5077600	Identifier	asRequest		5077469	0					
ANR	5077601	Identifier	query_parameters		5077469	1					
ANR	5077602	PrimaryExpression	"""InstanceId"""		5077469	1					
ANR	5077603	ArrayIndexing	argv [ 6 ]		5077469	1					
ANR	5077604	Identifier	argv		5077469	0					
ANR	5077605	PrimaryExpression	6		5077469	1					
ANR	5077606	ExpressionStatement	"asRequest . query_parameters [ ""Device"" ] = argv [ 7 ]"	1466:1:55659:55707	5077469	11	True				
ANR	5077607	AssignmentExpression	"asRequest . query_parameters [ ""Device"" ] = argv [ 7 ]"		5077469	0		=			
ANR	5077608	ArrayIndexing	"asRequest . query_parameters [ ""Device"" ]"		5077469	0					
ANR	5077609	MemberAccess	asRequest . query_parameters		5077469	0					
ANR	5077610	Identifier	asRequest		5077469	0					
ANR	5077611	Identifier	query_parameters		5077469	1					
ANR	5077612	PrimaryExpression	"""Device"""		5077469	1					
ANR	5077613	ArrayIndexing	argv [ 7 ]		5077469	1					
ANR	5077614	Identifier	argv		5077469	0					
ANR	5077615	PrimaryExpression	7		5077469	1					
ANR	5077616	IfStatement	if ( ! asRequest . SendRequest ( ) )		5077469	12					
ANR	5077617	Condition	! asRequest . SendRequest ( )	1469:8:55743:55767	5077469	0	True				
ANR	5077618	UnaryOperationExpression	! asRequest . SendRequest ( )		5077469	0					
ANR	5077619	UnaryOperator	!		5077469	0					
ANR	5077620	CallExpression	asRequest . SendRequest ( )		5077469	1					
ANR	5077621	Callee	asRequest . SendRequest		5077469	0					
ANR	5077622	MemberAccess	asRequest . SendRequest		5077469	0					
ANR	5077623	Identifier	asRequest		5077469	0					
ANR	5077624	Identifier	SendRequest		5077469	1					
ANR	5077625	ArgumentList			5077469	1					
ANR	5077626	CompoundStatement		24:36:871:871	5077469	1					
ANR	5077627	ExpressionStatement	"result_string = create_failure_result ( requestID , asRequest . errorMessage . c_str ( ) , asRequest . errorCode . c_str ( ) )"	1470:8:55781:55916	5077469	0	True				
ANR	5077628	AssignmentExpression	"result_string = create_failure_result ( requestID , asRequest . errorMessage . c_str ( ) , asRequest . errorCode . c_str ( ) )"		5077469	0		=			
ANR	5077629	Identifier	result_string		5077469	0					
ANR	5077630	CallExpression	"create_failure_result ( requestID , asRequest . errorMessage . c_str ( ) , asRequest . errorCode . c_str ( ) )"		5077469	1					
ANR	5077631	Callee	create_failure_result		5077469	0					
ANR	5077632	Identifier	create_failure_result		5077469	0					
ANR	5077633	ArgumentList	requestID		5077469	1					
ANR	5077634	Argument	requestID		5077469	0					
ANR	5077635	Identifier	requestID		5077469	0					
ANR	5077636	Argument	asRequest . errorMessage . c_str ( )		5077469	1					
ANR	5077637	CallExpression	asRequest . errorMessage . c_str ( )		5077469	0					
ANR	5077638	Callee	asRequest . errorMessage . c_str		5077469	0					
ANR	5077639	MemberAccess	asRequest . errorMessage . c_str		5077469	0					
ANR	5077640	MemberAccess	asRequest . errorMessage		5077469	0					
ANR	5077641	Identifier	asRequest		5077469	0					
ANR	5077642	Identifier	errorMessage		5077469	1					
ANR	5077643	Identifier	c_str		5077469	1					
ANR	5077644	ArgumentList			5077469	1					
ANR	5077645	Argument	asRequest . errorCode . c_str ( )		5077469	2					
ANR	5077646	CallExpression	asRequest . errorCode . c_str ( )		5077469	0					
ANR	5077647	Callee	asRequest . errorCode . c_str		5077469	0					
ANR	5077648	MemberAccess	asRequest . errorCode . c_str		5077469	0					
ANR	5077649	MemberAccess	asRequest . errorCode		5077469	0					
ANR	5077650	Identifier	asRequest		5077469	0					
ANR	5077651	Identifier	errorCode		5077469	1					
ANR	5077652	Identifier	c_str		5077469	1					
ANR	5077653	ArgumentList			5077469	1					
ANR	5077654	ElseStatement	else		5077469	0					
ANR	5077655	CompoundStatement		28:11:1029:1029	5077469	0					
ANR	5077656	ExpressionStatement	"result_string = create_success_result ( requestID , NULL )"	1474:8:55939:55995	5077469	0	True				
ANR	5077657	AssignmentExpression	"result_string = create_success_result ( requestID , NULL )"		5077469	0		=			
ANR	5077658	Identifier	result_string		5077469	0					
ANR	5077659	CallExpression	"create_success_result ( requestID , NULL )"		5077469	1					
ANR	5077660	Callee	create_success_result		5077469	0					
ANR	5077661	Identifier	create_success_result		5077469	0					
ANR	5077662	ArgumentList	requestID		5077469	1					
ANR	5077663	Argument	requestID		5077469	0					
ANR	5077664	Identifier	requestID		5077469	0					
ANR	5077665	Argument	NULL		5077469	1					
ANR	5077666	Identifier	NULL		5077469	0					
ANR	5077667	ReturnStatement	return true ;	1477:4:56008:56019	5077469	13	True				
ANR	5077668	Identifier	true		5077469	0					
ANR	5077669	ReturnType	bool		5077469	1					
ANR	5077670	Identifier	AmazonAttachVolume :: workerFunction		5077469	2					
ANR	5077671	ParameterList	"char * * argv , int argc , std :: string & result_string"		5077469	3					
ANR	5077672	Parameter	char * * argv	1445:40:54847:54857	5077469	0	True				
ANR	5077673	ParameterType	char * *		5077469	0					
ANR	5077674	Identifier	argv		5077469	1					
ANR	5077675	Parameter	int argc	1445:53:54860:54867	5077469	1	True				
ANR	5077676	ParameterType	int		5077469	0					
ANR	5077677	Identifier	argc		5077469	1					
ANR	5077678	Parameter	std :: string & result_string	1445:63:54870:54895	5077469	2	True				
ANR	5077679	ParameterType	std :: string &		5077469	0					
ANR	5077680	Identifier	result_string		5077469	1					
ANR	5077681	CFGEntryNode	ENTRY		5077469		True				
ANR	5077682	CFGExitNode	EXIT		5077469		True				
ANR	5077683	Symbol	asRequest . serviceURL		5077469						
ANR	5077684	Symbol	* argv		5077469						
ANR	5077685	Symbol	argv		5077469						
ANR	5077686	Symbol	& requestID		5077469						
ANR	5077687	Symbol	create_success_result		5077469						
ANR	5077688	Symbol	asRequest . query_parameters		5077469						
ANR	5077689	Symbol	* asRequest		5077469						
ANR	5077690	Symbol	asRequest . errorCode		5077469						
ANR	5077691	Symbol	result_string		5077469						
ANR	5077692	Symbol	asRequest . accessKeyFile		5077469						
ANR	5077693	Symbol	* asRequest . query_parameters		5077469						
ANR	5077694	Symbol	argc		5077469						
ANR	5077695	Symbol	strcmp		5077469						
ANR	5077696	Symbol	asRequest		5077469						
ANR	5077697	Symbol	asRequest . secretKeyFile		5077469						
ANR	5077698	Symbol	NULL		5077469						
ANR	5077699	Symbol	asRequest . errorMessage		5077469						
ANR	5077700	Symbol	D_ALWAYS		5077469						
ANR	5077701	Symbol	false		5077469						
ANR	5077702	Symbol	verify_min_number_args		5077469						
ANR	5077703	Symbol	asRequest . errorMessage . c_str		5077469						
ANR	5077704	Symbol	requestID		5077469						
ANR	5077705	Symbol	create_failure_result		5077469						
ANR	5077706	Symbol	true		5077469						
ANR	5077707	Symbol	asRequest . errorCode . c_str		5077469						
ANR	5077708	Symbol	asRequest . SendRequest		5077469						
