command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4820019	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_my_hostname.cpp								
ANR	4820020	DeclStmt									
ANR	4820021	Decl							bool	bool	enable_convert_default_IP_to_socket_IP
ANR	4820022	DeclStmt									
ANR	4820023	Decl							std :: set < std :: string >	std :: set < std :: string >	configured_network_interface_ips
ANR	4820024	DeclStmt									
ANR	4820025	Decl							bool	bool	network_interface_matches_all
ANR	4820026	DeclStmt									
ANR	4820027	Decl							void	void ( )	init_hostnames
ANR	4820028	Function	my_hostname	38:0:1268:1503							
ANR	4820029	FunctionDef	my_hostname ()		4820028	0					
ANR	4820030	CompoundStatement		40:0:1289:1503	4820028	0					
ANR	4820031	Statement	static	45:4:1377:1382	4820028	0	True				
ANR	4820032	IdentifierDeclStatement	MyString __my_hostname ;	45:11:1384:1406	4820028	1	True				
ANR	4820033	IdentifierDecl	__my_hostname		4820028	0					
ANR	4820034	IdentifierDeclType	MyString		4820028	0					
ANR	4820035	Identifier	__my_hostname		4820028	1					
ANR	4820036	ExpressionStatement	__my_hostname = get_local_hostname ( )	46:4:1412:1448	4820028	2	True				
ANR	4820037	AssignmentExpression	__my_hostname = get_local_hostname ( )		4820028	0		=			
ANR	4820038	Identifier	__my_hostname		4820028	0					
ANR	4820039	CallExpression	get_local_hostname ( )		4820028	1					
ANR	4820040	Callee	get_local_hostname		4820028	0					
ANR	4820041	Identifier	get_local_hostname		4820028	0					
ANR	4820042	ArgumentList			4820028	1					
ANR	4820043	Statement	return	47:4:1454:1459	4820028	3	True				
ANR	4820044	Statement	const_cast	47:11:1461:1470	4820028	4	True				
ANR	4820045	Statement	<	47:21:1471:1471	4820028	5	True				
ANR	4820046	Statement	char	47:22:1472:1475	4820028	6	True				
ANR	4820047	Statement	*	47:26:1476:1476	4820028	7	True				
ANR	4820048	Statement	>	47:27:1477:1477	4820028	8	True				
ANR	4820049	ExpressionStatement	__my_hostname . Value ( )	47:28:1478:1501	4820028	9	True				
ANR	4820050	CallExpression	__my_hostname . Value ( )		4820028	0					
ANR	4820051	Callee	__my_hostname . Value		4820028	0					
ANR	4820052	MemberAccess	__my_hostname . Value		4820028	0					
ANR	4820053	Identifier	__my_hostname		4820028	0					
ANR	4820054	Identifier	Value		4820028	1					
ANR	4820055	ArgumentList			4820028	1					
ANR	4820056	ReturnType	char *		4820028	1					
ANR	4820057	Identifier	my_hostname		4820028	2					
ANR	4820058	ParameterList			4820028	3					
ANR	4820059	CFGEntryNode	ENTRY		4820028		True				
ANR	4820060	CFGExitNode	EXIT		4820028		True				
ANR	4820061	Symbol	get_local_hostname		4820028						
ANR	4820062	Symbol	__my_hostname		4820028						
ANR	4820063	Function	my_full_hostname	52:0:1574:1742							
ANR	4820064	FunctionDef	my_full_hostname ()		4820063	0					
ANR	4820065	CompoundStatement		52:25:1599:1742	4820063	0					
ANR	4820066	Statement	static	53:4:1605:1610	4820063	0	True				
ANR	4820067	IdentifierDeclStatement	MyString __my_full_hostname ;	53:11:1612:1639	4820063	1	True				
ANR	4820068	IdentifierDecl	__my_full_hostname		4820063	0					
ANR	4820069	IdentifierDeclType	MyString		4820063	0					
ANR	4820070	Identifier	__my_full_hostname		4820063	1					
ANR	4820071	ExpressionStatement	__my_full_hostname = get_local_fqdn ( )	54:4:1645:1682	4820063	2	True				
ANR	4820072	AssignmentExpression	__my_full_hostname = get_local_fqdn ( )		4820063	0		=			
ANR	4820073	Identifier	__my_full_hostname		4820063	0					
ANR	4820074	CallExpression	get_local_fqdn ( )		4820063	1					
ANR	4820075	Callee	get_local_fqdn		4820063	0					
ANR	4820076	Identifier	get_local_fqdn		4820063	0					
ANR	4820077	ArgumentList			4820063	1					
ANR	4820078	Statement	return	55:4:1688:1693	4820063	3	True				
ANR	4820079	Statement	const_cast	55:11:1695:1704	4820063	4	True				
ANR	4820080	Statement	<	55:21:1705:1705	4820063	5	True				
ANR	4820081	Statement	char	55:22:1706:1709	4820063	6	True				
ANR	4820082	Statement	*	55:26:1710:1710	4820063	7	True				
ANR	4820083	Statement	>	55:27:1711:1711	4820063	8	True				
ANR	4820084	ExpressionStatement	__my_full_hostname . Value ( )	55:28:1712:1740	4820063	9	True				
ANR	4820085	CallExpression	__my_full_hostname . Value ( )		4820063	0					
ANR	4820086	Callee	__my_full_hostname . Value		4820063	0					
ANR	4820087	MemberAccess	__my_full_hostname . Value		4820063	0					
ANR	4820088	Identifier	__my_full_hostname		4820063	0					
ANR	4820089	Identifier	Value		4820063	1					
ANR	4820090	ArgumentList			4820063	1					
ANR	4820091	ReturnType	char *		4820063	1					
ANR	4820092	Identifier	my_full_hostname		4820063	2					
ANR	4820093	ParameterList			4820063	3					
ANR	4820094	CFGEntryNode	ENTRY		4820063		True				
ANR	4820095	CFGExitNode	EXIT		4820063		True				
ANR	4820096	Symbol	get_local_fqdn		4820063						
ANR	4820097	Symbol	__my_full_hostname		4820063						
ANR	4820098	Function	my_ip_string	58:0:1745:1914							
ANR	4820099	FunctionDef	my_ip_string ()		4820098	0					
ANR	4820100	CompoundStatement		58:21:1766:1914	4820098	0					
ANR	4820101	Statement	static	59:4:1772:1777	4820098	0	True				
ANR	4820102	IdentifierDeclStatement	MyString __my_ip_string ;	59:11:1779:1802	4820098	1	True				
ANR	4820103	IdentifierDecl	__my_ip_string		4820098	0					
ANR	4820104	IdentifierDeclType	MyString		4820098	0					
ANR	4820105	Identifier	__my_ip_string		4820098	1					
ANR	4820106	ExpressionStatement	__my_ip_string = get_local_ipaddr ( ) . to_ip_string ( )	60:4:1808:1858	4820098	2	True				
ANR	4820107	AssignmentExpression	__my_ip_string = get_local_ipaddr ( ) . to_ip_string ( )		4820098	0		=			
ANR	4820108	Identifier	__my_ip_string		4820098	0					
ANR	4820109	CallExpression	get_local_ipaddr ( ) . to_ip_string ( )		4820098	1					
ANR	4820110	Callee	get_local_ipaddr ( ) . to_ip_string		4820098	0					
ANR	4820111	MemberAccess	get_local_ipaddr ( ) . to_ip_string		4820098	0					
ANR	4820112	CallExpression	get_local_ipaddr ( )		4820098	0					
ANR	4820113	Callee	get_local_ipaddr		4820098	0					
ANR	4820114	Identifier	get_local_ipaddr		4820098	0					
ANR	4820115	ArgumentList			4820098	1					
ANR	4820116	Identifier	to_ip_string		4820098	1					
ANR	4820117	ArgumentList			4820098	1					
ANR	4820118	Statement	return	61:4:1864:1869	4820098	3	True				
ANR	4820119	Statement	const_cast	61:11:1871:1880	4820098	4	True				
ANR	4820120	Statement	<	61:21:1881:1881	4820098	5	True				
ANR	4820121	Statement	char	61:22:1882:1885	4820098	6	True				
ANR	4820122	Statement	*	61:26:1886:1886	4820098	7	True				
ANR	4820123	Statement	>	61:27:1887:1887	4820098	8	True				
ANR	4820124	ExpressionStatement	__my_ip_string . Value ( )	61:28:1888:1912	4820098	9	True				
ANR	4820125	CallExpression	__my_ip_string . Value ( )		4820098	0					
ANR	4820126	Callee	__my_ip_string . Value		4820098	0					
ANR	4820127	MemberAccess	__my_ip_string . Value		4820098	0					
ANR	4820128	Identifier	__my_ip_string		4820098	0					
ANR	4820129	Identifier	Value		4820098	1					
ANR	4820130	ArgumentList			4820098	1					
ANR	4820131	ReturnType	char *		4820098	1					
ANR	4820132	Identifier	my_ip_string		4820098	2					
ANR	4820133	ParameterList			4820098	3					
ANR	4820134	CFGEntryNode	ENTRY		4820098		True				
ANR	4820135	CFGExitNode	EXIT		4820098		True				
ANR	4820136	Symbol	__my_ip_string		4820098						
ANR	4820137	Symbol	get_local_ipaddr		4820098						
ANR	4820138	Symbol	get_local_ipaddr ( ) . to_ip_string		4820098						
ANR	4820139	Function	network_interface_to_ip	84:0:2284:5162							
ANR	4820140	FunctionDef	"network_interface_to_ip (char const * interface_param_name , char const * interface_pattern , std :: string & ip , std :: set < std :: string > * network_interface_ips)"		4820139	0					
ANR	4820141	CompoundStatement		86:0:2440:5162	4820139	0					
ANR	4820142	ExpressionStatement	ASSERT ( interface_pattern )	87:1:2443:2470	4820139	0	True				
ANR	4820143	CallExpression	ASSERT ( interface_pattern )		4820139	0					
ANR	4820144	Callee	ASSERT		4820139	0					
ANR	4820145	Identifier	ASSERT		4820139	0					
ANR	4820146	ArgumentList	interface_pattern		4820139	1					
ANR	4820147	Argument	interface_pattern		4820139	0					
ANR	4820148	Identifier	interface_pattern		4820139	0					
ANR	4820149	IfStatement	if ( ! interface_param_name )		4820139	1					
ANR	4820150	Condition	! interface_param_name	88:5:2477:2497	4820139	0	True				
ANR	4820151	UnaryOperationExpression	! interface_param_name		4820139	0					
ANR	4820152	UnaryOperator	!		4820139	0					
ANR	4820153	Identifier	interface_param_name		4820139	1					
ANR	4820154	CompoundStatement		3:29:60:60	4820139	1					
ANR	4820155	ExpressionStatement	"interface_param_name = """""	89:2:2505:2530	4820139	0	True				
ANR	4820156	AssignmentExpression	"interface_param_name = """""		4820139	0		=			
ANR	4820157	Identifier	interface_param_name		4820139	0					
ANR	4820158	PrimaryExpression	""""""		4820139	1					
ANR	4820159	IfStatement	if ( network_interface_ips )		4820139	2					
ANR	4820160	Condition	network_interface_ips	92:5:2541:2561	4820139	0	True				
ANR	4820161	Identifier	network_interface_ips		4820139	0					
ANR	4820162	CompoundStatement		7:29:124:124	4820139	1					
ANR	4820163	ExpressionStatement	network_interface_ips -> clear ( )	93:2:2569:2599	4820139	0	True				
ANR	4820164	CallExpression	network_interface_ips -> clear ( )		4820139	0					
ANR	4820165	Callee	network_interface_ips -> clear		4820139	0					
ANR	4820166	PtrMemberAccess	network_interface_ips -> clear		4820139	0					
ANR	4820167	Identifier	network_interface_ips		4820139	0					
ANR	4820168	Identifier	clear		4820139	1					
ANR	4820169	ArgumentList			4820139	1					
ANR	4820170	IdentifierDeclStatement	condor_sockaddr addr ;	96:1:2606:2626	4820139	3	True				
ANR	4820171	IdentifierDecl	addr		4820139	0					
ANR	4820172	IdentifierDeclType	condor_sockaddr		4820139	0					
ANR	4820173	Identifier	addr		4820139	1					
ANR	4820174	IfStatement	if ( addr . from_ip_string ( interface_pattern ) )		4820139	4					
ANR	4820175	Condition	addr . from_ip_string ( interface_pattern )	97:5:2633:2670	4820139	0	True				
ANR	4820176	CallExpression	addr . from_ip_string ( interface_pattern )		4820139	0					
ANR	4820177	Callee	addr . from_ip_string		4820139	0					
ANR	4820178	MemberAccess	addr . from_ip_string		4820139	0					
ANR	4820179	Identifier	addr		4820139	0					
ANR	4820180	Identifier	from_ip_string		4820139	1					
ANR	4820181	ArgumentList	interface_pattern		4820139	1					
ANR	4820182	Argument	interface_pattern		4820139	0					
ANR	4820183	Identifier	interface_pattern		4820139	0					
ANR	4820184	CompoundStatement		12:45:232:232	4820139	1					
ANR	4820185	ExpressionStatement	ip = interface_pattern	98:2:2677:2699	4820139	0	True				
ANR	4820186	AssignmentExpression	ip = interface_pattern		4820139	0		=			
ANR	4820187	Identifier	ip		4820139	0					
ANR	4820188	Identifier	interface_pattern		4820139	1					
ANR	4820189	IfStatement	if ( network_interface_ips )		4820139	1					
ANR	4820190	Condition	network_interface_ips	99:6:2707:2727	4820139	0	True				
ANR	4820191	Identifier	network_interface_ips		4820139	0					
ANR	4820192	CompoundStatement		14:30:290:290	4820139	1					
ANR	4820193	ExpressionStatement	network_interface_ips -> insert ( ip )	100:3:2736:2771	4820139	0	True				
ANR	4820194	CallExpression	network_interface_ips -> insert ( ip )		4820139	0					
ANR	4820195	Callee	network_interface_ips -> insert		4820139	0					
ANR	4820196	PtrMemberAccess	network_interface_ips -> insert		4820139	0					
ANR	4820197	Identifier	network_interface_ips		4820139	0					
ANR	4820198	Identifier	insert		4820139	1					
ANR	4820199	ArgumentList	ip		4820139	1					
ANR	4820200	Argument	ip		4820139	0					
ANR	4820201	Identifier	ip		4820139	0					
ANR	4820202	ExpressionStatement	"dprintf ( D_HOSTNAME , ""%s=%s, so choosing IP %s\\n"" , interface_param_name , interface_pattern , ip . c_str ( ) )"	103:2:2780:2893	4820139	2	True				
ANR	4820203	CallExpression	"dprintf ( D_HOSTNAME , ""%s=%s, so choosing IP %s\\n"" , interface_param_name , interface_pattern , ip . c_str ( ) )"		4820139	0					
ANR	4820204	Callee	dprintf		4820139	0					
ANR	4820205	Identifier	dprintf		4820139	0					
ANR	4820206	ArgumentList	D_HOSTNAME		4820139	1					
ANR	4820207	Argument	D_HOSTNAME		4820139	0					
ANR	4820208	Identifier	D_HOSTNAME		4820139	0					
ANR	4820209	Argument	"""%s=%s, so choosing IP %s\\n"""		4820139	1					
ANR	4820210	PrimaryExpression	"""%s=%s, so choosing IP %s\\n"""		4820139	0					
ANR	4820211	Argument	interface_param_name		4820139	2					
ANR	4820212	Identifier	interface_param_name		4820139	0					
ANR	4820213	Argument	interface_pattern		4820139	3					
ANR	4820214	Identifier	interface_pattern		4820139	0					
ANR	4820215	Argument	ip . c_str ( )		4820139	4					
ANR	4820216	CallExpression	ip . c_str ( )		4820139	0					
ANR	4820217	Callee	ip . c_str		4820139	0					
ANR	4820218	MemberAccess	ip . c_str		4820139	0					
ANR	4820219	Identifier	ip		4820139	0					
ANR	4820220	Identifier	c_str		4820139	1					
ANR	4820221	ArgumentList			4820139	1					
ANR	4820222	ReturnStatement	return true ;	108:2:2898:2909	4820139	3	True				
ANR	4820223	Identifier	true		4820139	0					
ANR	4820224	IdentifierDeclStatement	StringList pattern ( interface_pattern ) ;	111:1:2916:2953	4820139	5	True				
ANR	4820225	IdentifierDecl	pattern ( interface_pattern )		4820139	0					
ANR	4820226	IdentifierDeclType	StringList		4820139	0					
ANR	4820227	Identifier	pattern		4820139	1					
ANR	4820228	Identifier	interface_pattern		4820139	2					
ANR	4820229	IdentifierDeclStatement	std :: string matches_str ;	113:1:2957:2980	4820139	6	True				
ANR	4820230	IdentifierDecl	matches_str		4820139	0					
ANR	4820231	IdentifierDeclType	std :: string		4820139	0					
ANR	4820232	Identifier	matches_str		4820139	1					
ANR	4820233	IdentifierDeclStatement	std :: vector < NetworkDeviceInfo > dev_list ;	114:1:2983:3022	4820139	7	True				
ANR	4820234	IdentifierDecl	dev_list		4820139	0					
ANR	4820235	IdentifierDeclType	std :: vector < NetworkDeviceInfo >		4820139	0					
ANR	4820236	Identifier	dev_list		4820139	1					
ANR	4820237	IdentifierDeclStatement	std :: vector < NetworkDeviceInfo > :: iterator dev ;	115:1:3025:3069	4820139	8	True				
ANR	4820238	IdentifierDecl	dev		4820139	0					
ANR	4820239	IdentifierDeclType	std :: vector < NetworkDeviceInfo > :: iterator		4820139	0					
ANR	4820240	Identifier	dev		4820139	1					
ANR	4820241	ExpressionStatement	sysapi_get_network_device_info ( dev_list )	117:1:3073:3113	4820139	9	True				
ANR	4820242	CallExpression	sysapi_get_network_device_info ( dev_list )		4820139	0					
ANR	4820243	Callee	sysapi_get_network_device_info		4820139	0					
ANR	4820244	Identifier	sysapi_get_network_device_info		4820139	0					
ANR	4820245	ArgumentList	dev_list		4820139	1					
ANR	4820246	Argument	dev_list		4820139	0					
ANR	4820247	Identifier	dev_list		4820139	0					
ANR	4820248	IdentifierDeclStatement	int best_so_far = - 1 ;	125:1:3283:3303	4820139	10	True				
ANR	4820249	IdentifierDecl	best_so_far = - 1		4820139	0					
ANR	4820250	IdentifierDeclType	int		4820139	0					
ANR	4820251	Identifier	best_so_far		4820139	1					
ANR	4820252	AssignmentExpression	best_so_far = - 1		4820139	2		=			
ANR	4820253	Identifier	best_so_far		4820139	0					
ANR	4820254	UnaryOperationExpression	- 1		4820139	1					
ANR	4820255	UnaryOperator	-		4820139	0					
ANR	4820256	PrimaryExpression	1		4820139	1					
ANR	4820257	ForStatement	for ( dev = dev_list . begin ( ) ; dev != dev_list . end ( ) ; dev ++ )		4820139	11					
ANR	4820258	ForInit	dev = dev_list . begin ( ) ;	127:5:3311:3333	4820139	0	True				
ANR	4820259	AssignmentExpression	dev = dev_list . begin ( )		4820139	0		=			
ANR	4820260	Identifier	dev		4820139	0					
ANR	4820261	CallExpression	dev_list . begin ( )		4820139	1					
ANR	4820262	Callee	dev_list . begin		4820139	0					
ANR	4820263	MemberAccess	dev_list . begin		4820139	0					
ANR	4820264	Identifier	dev_list		4820139	0					
ANR	4820265	Identifier	begin		4820139	1					
ANR	4820266	ArgumentList			4820139	1					
ANR	4820267	Condition	dev != dev_list . end ( )	128:2:3337:3357	4820139	1	True				
ANR	4820268	EqualityExpression	dev != dev_list . end ( )		4820139	0		!=			
ANR	4820269	Identifier	dev		4820139	0					
ANR	4820270	CallExpression	dev_list . end ( )		4820139	1					
ANR	4820271	Callee	dev_list . end		4820139	0					
ANR	4820272	MemberAccess	dev_list . end		4820139	0					
ANR	4820273	Identifier	dev_list		4820139	0					
ANR	4820274	Identifier	end		4820139	1					
ANR	4820275	ArgumentList			4820139	1					
ANR	4820276	PostIncDecOperationExpression	dev ++	129:2:3362:3366	4820139	2	True				
ANR	4820277	Identifier	dev		4820139	0					
ANR	4820278	IncDec	++		4820139	1					
ANR	4820279	CompoundStatement		83:2:1915:1932	4820139	3					
ANR	4820280	IdentifierDeclStatement	bool matches = false ;	131:2:3374:3394	4820139	0	True				
ANR	4820281	IdentifierDecl	matches = false		4820139	0					
ANR	4820282	IdentifierDeclType	bool		4820139	0					
ANR	4820283	Identifier	matches		4820139	1					
ANR	4820284	AssignmentExpression	matches = false		4820139	2		=			
ANR	4820285	Identifier	false		4820139	0					
ANR	4820286	Identifier	false		4820139	1					
ANR	4820287	IfStatement	"if ( strcmp ( dev -> name ( ) , """" ) != 0 && pattern . contains_anycase_withwildcard ( dev -> name ( ) ) )"		4820139	1					
ANR	4820288	Condition	"strcmp ( dev -> name ( ) , """" ) != 0 && pattern . contains_anycase_withwildcard ( dev -> name ( ) )"	132:6:3402:3483	4820139	0	True				
ANR	4820289	AndExpression	"strcmp ( dev -> name ( ) , """" ) != 0 && pattern . contains_anycase_withwildcard ( dev -> name ( ) )"		4820139	0		&&			
ANR	4820290	EqualityExpression	"strcmp ( dev -> name ( ) , """" ) != 0"		4820139	0		!=			
ANR	4820291	CallExpression	"strcmp ( dev -> name ( ) , """" )"		4820139	0					
ANR	4820292	Callee	strcmp		4820139	0					
ANR	4820293	Identifier	strcmp		4820139	0					
ANR	4820294	ArgumentList	dev -> name ( )		4820139	1					
ANR	4820295	Argument	dev -> name ( )		4820139	0					
ANR	4820296	CallExpression	dev -> name ( )		4820139	0					
ANR	4820297	Callee	dev -> name		4820139	0					
ANR	4820298	PtrMemberAccess	dev -> name		4820139	0					
ANR	4820299	Identifier	dev		4820139	0					
ANR	4820300	Identifier	name		4820139	1					
ANR	4820301	ArgumentList			4820139	1					
ANR	4820302	Argument	""""""		4820139	1					
ANR	4820303	PrimaryExpression	""""""		4820139	0					
ANR	4820304	PrimaryExpression	0		4820139	1					
ANR	4820305	CallExpression	pattern . contains_anycase_withwildcard ( dev -> name ( ) )		4820139	1					
ANR	4820306	Callee	pattern . contains_anycase_withwildcard		4820139	0					
ANR	4820307	MemberAccess	pattern . contains_anycase_withwildcard		4820139	0					
ANR	4820308	Identifier	pattern		4820139	0					
ANR	4820309	Identifier	contains_anycase_withwildcard		4820139	1					
ANR	4820310	ArgumentList	dev -> name ( )		4820139	1					
ANR	4820311	Argument	dev -> name ( )		4820139	0					
ANR	4820312	CallExpression	dev -> name ( )		4820139	0					
ANR	4820313	Callee	dev -> name		4820139	0					
ANR	4820314	PtrMemberAccess	dev -> name		4820139	0					
ANR	4820315	Identifier	dev		4820139	0					
ANR	4820316	Identifier	name		4820139	1					
ANR	4820317	ArgumentList			4820139	1					
ANR	4820318	CompoundStatement		49:2:1048:1048	4820139	1					
ANR	4820319	ExpressionStatement	matches = true	135:3:3494:3508	4820139	0	True				
ANR	4820320	AssignmentExpression	matches = true		4820139	0		=			
ANR	4820321	Identifier	matches		4820139	0					
ANR	4820322	Identifier	true		4820139	1					
ANR	4820323	ElseStatement	else		4820139	0					
ANR	4820324	IfStatement	"if ( strcmp ( dev -> IP ( ) , """" ) != 0 && pattern . contains_anycase_withwildcard ( dev -> IP ( ) ) )"		4820139	0					
ANR	4820325	Condition	"strcmp ( dev -> IP ( ) , """" ) != 0 && pattern . contains_anycase_withwildcard ( dev -> IP ( ) )"	137:11:3525:3604	4820139	0	True				
ANR	4820326	AndExpression	"strcmp ( dev -> IP ( ) , """" ) != 0 && pattern . contains_anycase_withwildcard ( dev -> IP ( ) )"		4820139	0		&&			
ANR	4820327	EqualityExpression	"strcmp ( dev -> IP ( ) , """" ) != 0"		4820139	0		!=			
ANR	4820328	CallExpression	"strcmp ( dev -> IP ( ) , """" )"		4820139	0					
ANR	4820329	Callee	strcmp		4820139	0					
ANR	4820330	Identifier	strcmp		4820139	0					
ANR	4820331	ArgumentList	dev -> IP ( )		4820139	1					
ANR	4820332	Argument	dev -> IP ( )		4820139	0					
ANR	4820333	CallExpression	dev -> IP ( )		4820139	0					
ANR	4820334	Callee	dev -> IP		4820139	0					
ANR	4820335	PtrMemberAccess	dev -> IP		4820139	0					
ANR	4820336	Identifier	dev		4820139	0					
ANR	4820337	Identifier	IP		4820139	1					
ANR	4820338	ArgumentList			4820139	1					
ANR	4820339	Argument	""""""		4820139	1					
ANR	4820340	PrimaryExpression	""""""		4820139	0					
ANR	4820341	PrimaryExpression	0		4820139	1					
ANR	4820342	CallExpression	pattern . contains_anycase_withwildcard ( dev -> IP ( ) )		4820139	1					
ANR	4820343	Callee	pattern . contains_anycase_withwildcard		4820139	0					
ANR	4820344	MemberAccess	pattern . contains_anycase_withwildcard		4820139	0					
ANR	4820345	Identifier	pattern		4820139	0					
ANR	4820346	Identifier	contains_anycase_withwildcard		4820139	1					
ANR	4820347	ArgumentList	dev -> IP ( )		4820139	1					
ANR	4820348	Argument	dev -> IP ( )		4820139	0					
ANR	4820349	CallExpression	dev -> IP ( )		4820139	0					
ANR	4820350	Callee	dev -> IP		4820139	0					
ANR	4820351	PtrMemberAccess	dev -> IP		4820139	0					
ANR	4820352	Identifier	dev		4820139	0					
ANR	4820353	Identifier	IP		4820139	1					
ANR	4820354	ArgumentList			4820139	1					
ANR	4820355	CompoundStatement		54:2:1169:1169	4820139	1					
ANR	4820356	ExpressionStatement	matches = true	140:3:3615:3629	4820139	0	True				
ANR	4820357	AssignmentExpression	matches = true		4820139	0		=			
ANR	4820358	Identifier	matches		4820139	0					
ANR	4820359	Identifier	true		4820139	1					
ANR	4820360	IfStatement	if ( ! matches )		4820139	2					
ANR	4820361	Condition	! matches	143:6:3642:3649	4820139	0	True				
ANR	4820362	UnaryOperationExpression	! matches		4820139	0					
ANR	4820363	UnaryOperator	!		4820139	0					
ANR	4820364	Identifier	matches		4820139	1					
ANR	4820365	CompoundStatement		58:17:1212:1212	4820139	1					
ANR	4820366	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Ignoring network interface %s (%s) because it does not match %s=%s.\\n"" , dev -> name ( ) , dev -> IP ( ) , interface_param_name , interface_pattern )"	144:3:3658:3819	4820139	0	True				
ANR	4820367	CallExpression	"dprintf ( D_HOSTNAME , ""Ignoring network interface %s (%s) because it does not match %s=%s.\\n"" , dev -> name ( ) , dev -> IP ( ) , interface_param_name , interface_pattern )"		4820139	0					
ANR	4820368	Callee	dprintf		4820139	0					
ANR	4820369	Identifier	dprintf		4820139	0					
ANR	4820370	ArgumentList	D_HOSTNAME		4820139	1					
ANR	4820371	Argument	D_HOSTNAME		4820139	0					
ANR	4820372	Identifier	D_HOSTNAME		4820139	0					
ANR	4820373	Argument	"""Ignoring network interface %s (%s) because it does not match %s=%s.\\n"""		4820139	1					
ANR	4820374	PrimaryExpression	"""Ignoring network interface %s (%s) because it does not match %s=%s.\\n"""		4820139	0					
ANR	4820375	Argument	dev -> name ( )		4820139	2					
ANR	4820376	CallExpression	dev -> name ( )		4820139	0					
ANR	4820377	Callee	dev -> name		4820139	0					
ANR	4820378	PtrMemberAccess	dev -> name		4820139	0					
ANR	4820379	Identifier	dev		4820139	0					
ANR	4820380	Identifier	name		4820139	1					
ANR	4820381	ArgumentList			4820139	1					
ANR	4820382	Argument	dev -> IP ( )		4820139	3					
ANR	4820383	CallExpression	dev -> IP ( )		4820139	0					
ANR	4820384	Callee	dev -> IP		4820139	0					
ANR	4820385	PtrMemberAccess	dev -> IP		4820139	0					
ANR	4820386	Identifier	dev		4820139	0					
ANR	4820387	Identifier	IP		4820139	1					
ANR	4820388	ArgumentList			4820139	1					
ANR	4820389	Argument	interface_param_name		4820139	4					
ANR	4820390	Identifier	interface_param_name		4820139	0					
ANR	4820391	Argument	interface_pattern		4820139	5					
ANR	4820392	Identifier	interface_pattern		4820139	0					
ANR	4820393	ContinueStatement	continue ;	146:3:3824:3832	4820139	1	True				
ANR	4820394	IdentifierDeclStatement	condor_sockaddr this_addr ;	149:2:3841:3866	4820139	3	True				
ANR	4820395	IdentifierDecl	this_addr		4820139	0					
ANR	4820396	IdentifierDeclType	condor_sockaddr		4820139	0					
ANR	4820397	Identifier	this_addr		4820139	1					
ANR	4820398	IfStatement	if ( ! this_addr . from_ip_string ( dev -> IP ( ) ) )		4820139	4					
ANR	4820399	Condition	! this_addr . from_ip_string ( dev -> IP ( ) )	150:6:3874:3909	4820139	0	True				
ANR	4820400	UnaryOperationExpression	! this_addr . from_ip_string ( dev -> IP ( ) )		4820139	0					
ANR	4820401	UnaryOperator	!		4820139	0					
ANR	4820402	CallExpression	this_addr . from_ip_string ( dev -> IP ( ) )		4820139	1					
ANR	4820403	Callee	this_addr . from_ip_string		4820139	0					
ANR	4820404	MemberAccess	this_addr . from_ip_string		4820139	0					
ANR	4820405	Identifier	this_addr		4820139	0					
ANR	4820406	Identifier	from_ip_string		4820139	1					
ANR	4820407	ArgumentList	dev -> IP ( )		4820139	1					
ANR	4820408	Argument	dev -> IP ( )		4820139	0					
ANR	4820409	CallExpression	dev -> IP ( )		4820139	0					
ANR	4820410	Callee	dev -> IP		4820139	0					
ANR	4820411	PtrMemberAccess	dev -> IP		4820139	0					
ANR	4820412	Identifier	dev		4820139	0					
ANR	4820413	Identifier	IP		4820139	1					
ANR	4820414	ArgumentList			4820139	1					
ANR	4820415	CompoundStatement		65:44:1471:1471	4820139	1					
ANR	4820416	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Ignoring network interface %s (%s) because it does not have a useable IP address.\\n"" , dev -> name ( ) , dev -> IP ( ) )"	152:3:3978:4112	4820139	0	True				
ANR	4820417	CallExpression	"dprintf ( D_HOSTNAME , ""Ignoring network interface %s (%s) because it does not have a useable IP address.\\n"" , dev -> name ( ) , dev -> IP ( ) )"		4820139	0					
ANR	4820418	Callee	dprintf		4820139	0					
ANR	4820419	Identifier	dprintf		4820139	0					
ANR	4820420	ArgumentList	D_HOSTNAME		4820139	1					
ANR	4820421	Argument	D_HOSTNAME		4820139	0					
ANR	4820422	Identifier	D_HOSTNAME		4820139	0					
ANR	4820423	Argument	"""Ignoring network interface %s (%s) because it does not have a useable IP address.\\n"""		4820139	1					
ANR	4820424	PrimaryExpression	"""Ignoring network interface %s (%s) because it does not have a useable IP address.\\n"""		4820139	0					
ANR	4820425	Argument	dev -> name ( )		4820139	2					
ANR	4820426	CallExpression	dev -> name ( )		4820139	0					
ANR	4820427	Callee	dev -> name		4820139	0					
ANR	4820428	PtrMemberAccess	dev -> name		4820139	0					
ANR	4820429	Identifier	dev		4820139	0					
ANR	4820430	Identifier	name		4820139	1					
ANR	4820431	ArgumentList			4820139	1					
ANR	4820432	Argument	dev -> IP ( )		4820139	3					
ANR	4820433	CallExpression	dev -> IP ( )		4820139	0					
ANR	4820434	Callee	dev -> IP		4820139	0					
ANR	4820435	PtrMemberAccess	dev -> IP		4820139	0					
ANR	4820436	Identifier	dev		4820139	0					
ANR	4820437	Identifier	IP		4820139	1					
ANR	4820438	ArgumentList			4820139	1					
ANR	4820439	ContinueStatement	continue ;	154:3:4117:4125	4820139	1	True				
ANR	4820440	IfStatement	if ( matches_str . size ( ) )		4820139	5					
ANR	4820441	Condition	matches_str . size ( )	157:6:4138:4155	4820139	0	True				
ANR	4820442	CallExpression	matches_str . size ( )		4820139	0					
ANR	4820443	Callee	matches_str . size		4820139	0					
ANR	4820444	MemberAccess	matches_str . size		4820139	0					
ANR	4820445	Identifier	matches_str		4820139	0					
ANR	4820446	Identifier	size		4820139	1					
ANR	4820447	ArgumentList			4820139	1					
ANR	4820448	CompoundStatement		72:27:1718:1718	4820139	1					
ANR	4820449	ExpressionStatement	"matches_str += "", """	158:3:4164:4183	4820139	0	True				
ANR	4820450	AssignmentExpression	"matches_str += "", """		4820139	0		+=			
ANR	4820451	Identifier	matches_str		4820139	0					
ANR	4820452	PrimaryExpression	""", """		4820139	1					
ANR	4820453	ExpressionStatement	matches_str += dev -> name ( )	160:2:4191:4217	4820139	6	True				
ANR	4820454	AssignmentExpression	matches_str += dev -> name ( )		4820139	0		+=			
ANR	4820455	Identifier	matches_str		4820139	0					
ANR	4820456	CallExpression	dev -> name ( )		4820139	1					
ANR	4820457	Callee	dev -> name		4820139	0					
ANR	4820458	PtrMemberAccess	dev -> name		4820139	0					
ANR	4820459	Identifier	dev		4820139	0					
ANR	4820460	Identifier	name		4820139	1					
ANR	4820461	ArgumentList			4820139	1					
ANR	4820462	ExpressionStatement	"matches_str += "" """	161:2:4221:4239	4820139	7	True				
ANR	4820463	AssignmentExpression	"matches_str += "" """		4820139	0		+=			
ANR	4820464	Identifier	matches_str		4820139	0					
ANR	4820465	PrimaryExpression	""" """		4820139	1					
ANR	4820466	ExpressionStatement	matches_str += dev -> IP ( )	162:2:4243:4267	4820139	8	True				
ANR	4820467	AssignmentExpression	matches_str += dev -> IP ( )		4820139	0		+=			
ANR	4820468	Identifier	matches_str		4820139	0					
ANR	4820469	CallExpression	dev -> IP ( )		4820139	1					
ANR	4820470	Callee	dev -> IP		4820139	0					
ANR	4820471	PtrMemberAccess	dev -> IP		4820139	0					
ANR	4820472	Identifier	dev		4820139	0					
ANR	4820473	Identifier	IP		4820139	1					
ANR	4820474	ArgumentList			4820139	1					
ANR	4820475	IfStatement	if ( network_interface_ips )		4820139	9					
ANR	4820476	Condition	network_interface_ips	164:6:4276:4296	4820139	0	True				
ANR	4820477	Identifier	network_interface_ips		4820139	0					
ANR	4820478	CompoundStatement		79:30:1859:1859	4820139	1					
ANR	4820479	ExpressionStatement	network_interface_ips -> insert ( dev -> IP ( ) )	165:3:4305:4347	4820139	0	True				
ANR	4820480	CallExpression	network_interface_ips -> insert ( dev -> IP ( ) )		4820139	0					
ANR	4820481	Callee	network_interface_ips -> insert		4820139	0					
ANR	4820482	PtrMemberAccess	network_interface_ips -> insert		4820139	0					
ANR	4820483	Identifier	network_interface_ips		4820139	0					
ANR	4820484	Identifier	insert		4820139	1					
ANR	4820485	ArgumentList	dev -> IP ( )		4820139	1					
ANR	4820486	Argument	dev -> IP ( )		4820139	0					
ANR	4820487	CallExpression	dev -> IP ( )		4820139	0					
ANR	4820488	Callee	dev -> IP		4820139	0					
ANR	4820489	PtrMemberAccess	dev -> IP		4820139	0					
ANR	4820490	Identifier	dev		4820139	0					
ANR	4820491	Identifier	IP		4820139	1					
ANR	4820492	ArgumentList			4820139	1					
ANR	4820493	IdentifierDeclStatement	int desireability ;	168:2:4356:4373	4820139	10	True				
ANR	4820494	IdentifierDecl	desireability		4820139	0					
ANR	4820495	IdentifierDeclType	int		4820139	0					
ANR	4820496	Identifier	desireability		4820139	1					
ANR	4820497	IfStatement	if ( this_addr . is_loopback ( ) )		4820139	11					
ANR	4820498	Condition	this_addr . is_loopback ( )	170:6:4382:4404	4820139	0	True				
ANR	4820499	CallExpression	this_addr . is_loopback ( )		4820139	0					
ANR	4820500	Callee	this_addr . is_loopback		4820139	0					
ANR	4820501	MemberAccess	this_addr . is_loopback		4820139	0					
ANR	4820502	Identifier	this_addr		4820139	0					
ANR	4820503	Identifier	is_loopback		4820139	1					
ANR	4820504	ArgumentList			4820139	1					
ANR	4820505	CompoundStatement		85:31:1966:1966	4820139	1					
ANR	4820506	ExpressionStatement	desireability = 1	171:3:4412:4429	4820139	0	True				
ANR	4820507	AssignmentExpression	desireability = 1		4820139	0		=			
ANR	4820508	Identifier	desireability		4820139	0					
ANR	4820509	PrimaryExpression	1		4820139	1					
ANR	4820510	ElseStatement	else		4820139	0					
ANR	4820511	IfStatement	if ( this_addr . is_private_network ( ) )		4820139	0					
ANR	4820512	Condition	this_addr . is_private_network ( )	173:11:4446:4475	4820139	0	True				
ANR	4820513	CallExpression	this_addr . is_private_network ( )		4820139	0					
ANR	4820514	Callee	this_addr . is_private_network		4820139	0					
ANR	4820515	MemberAccess	this_addr . is_private_network		4820139	0					
ANR	4820516	Identifier	this_addr		4820139	0					
ANR	4820517	Identifier	is_private_network		4820139	1					
ANR	4820518	ArgumentList			4820139	1					
ANR	4820519	CompoundStatement		88:43:2037:2037	4820139	1					
ANR	4820520	ExpressionStatement	desireability = 2	174:3:4483:4500	4820139	0	True				
ANR	4820521	AssignmentExpression	desireability = 2		4820139	0		=			
ANR	4820522	Identifier	desireability		4820139	0					
ANR	4820523	PrimaryExpression	2		4820139	1					
ANR	4820524	ElseStatement	else		4820139	0					
ANR	4820525	CompoundStatement		91:7:2072:2072	4820139	0					
ANR	4820526	ExpressionStatement	desireability = 3	177:3:4518:4535	4820139	0	True				
ANR	4820527	AssignmentExpression	desireability = 3		4820139	0		=			
ANR	4820528	Identifier	desireability		4820139	0					
ANR	4820529	PrimaryExpression	3		4820139	1					
ANR	4820530	IfStatement	if ( desireability > best_so_far )		4820139	12					
ANR	4820531	Condition	desireability > best_so_far	182:6:4722:4748	4820139	0	True				
ANR	4820532	RelationalExpression	desireability > best_so_far		4820139	0		>			
ANR	4820533	Identifier	desireability		4820139	0					
ANR	4820534	Identifier	best_so_far		4820139	1					
ANR	4820535	CompoundStatement		97:36:2311:2311	4820139	1					
ANR	4820536	ExpressionStatement	best_so_far = desireability	183:3:4757:4784	4820139	0	True				
ANR	4820537	AssignmentExpression	best_so_far = desireability		4820139	0		=			
ANR	4820538	Identifier	best_so_far		4820139	0					
ANR	4820539	Identifier	desireability		4820139	1					
ANR	4820540	ExpressionStatement	ip = dev -> IP ( )	184:3:4789:4803	4820139	1	True				
ANR	4820541	AssignmentExpression	ip = dev -> IP ( )		4820139	0		=			
ANR	4820542	Identifier	ip		4820139	0					
ANR	4820543	CallExpression	dev -> IP ( )		4820139	1					
ANR	4820544	Callee	dev -> IP		4820139	0					
ANR	4820545	PtrMemberAccess	dev -> IP		4820139	0					
ANR	4820546	Identifier	dev		4820139	0					
ANR	4820547	Identifier	IP		4820139	1					
ANR	4820548	ArgumentList			4820139	1					
ANR	4820549	IfStatement	if ( best_so_far < 0 )		4820139	12					
ANR	4820550	Condition	best_so_far < 0	188:5:4818:4832	4820139	0	True				
ANR	4820551	RelationalExpression	best_so_far < 0		4820139	0		<			
ANR	4820552	Identifier	best_so_far		4820139	0					
ANR	4820553	PrimaryExpression	0		4820139	1					
ANR	4820554	CompoundStatement		103:23:2395:2395	4820139	1					
ANR	4820555	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to convert %s=%s to an IP address.\\n"" , interface_param_name ? interface_param_name : """" , interface_pattern )"	189:2:4840:4980	4820139	0	True				
ANR	4820556	CallExpression	"dprintf ( D_ALWAYS , ""Failed to convert %s=%s to an IP address.\\n"" , interface_param_name ? interface_param_name : """" , interface_pattern )"		4820139	0					
ANR	4820557	Callee	dprintf		4820139	0					
ANR	4820558	Identifier	dprintf		4820139	0					
ANR	4820559	ArgumentList	D_ALWAYS		4820139	1					
ANR	4820560	Argument	D_ALWAYS		4820139	0					
ANR	4820561	Identifier	D_ALWAYS		4820139	0					
ANR	4820562	Argument	"""Failed to convert %s=%s to an IP address.\\n"""		4820139	1					
ANR	4820563	PrimaryExpression	"""Failed to convert %s=%s to an IP address.\\n"""		4820139	0					
ANR	4820564	Argument	"interface_param_name ? interface_param_name : """""		4820139	2					
ANR	4820565	ConditionalExpression	"interface_param_name ? interface_param_name : """""		4820139	0					
ANR	4820566	Condition	interface_param_name		4820139	0					
ANR	4820567	Identifier	interface_param_name		4820139	0					
ANR	4820568	Identifier	interface_param_name		4820139	1					
ANR	4820569	PrimaryExpression	""""""		4820139	2					
ANR	4820570	Argument	interface_pattern		4820139	3					
ANR	4820571	Identifier	interface_pattern		4820139	0					
ANR	4820572	ReturnStatement	return false ;	192:2:4984:4996	4820139	1	True				
ANR	4820573	Identifier	false		4820139	0					
ANR	4820574	ExpressionStatement	"dprintf ( D_HOSTNAME , ""%s=%s matches %s, choosing IP %s\\n"" , interface_param_name , interface_pattern , matches_str . c_str ( ) , ip . c_str ( ) )"	195:1:5003:5145	4820139	13	True				
ANR	4820575	CallExpression	"dprintf ( D_HOSTNAME , ""%s=%s matches %s, choosing IP %s\\n"" , interface_param_name , interface_pattern , matches_str . c_str ( ) , ip . c_str ( ) )"		4820139	0					
ANR	4820576	Callee	dprintf		4820139	0					
ANR	4820577	Identifier	dprintf		4820139	0					
ANR	4820578	ArgumentList	D_HOSTNAME		4820139	1					
ANR	4820579	Argument	D_HOSTNAME		4820139	0					
ANR	4820580	Identifier	D_HOSTNAME		4820139	0					
ANR	4820581	Argument	"""%s=%s matches %s, choosing IP %s\\n"""		4820139	1					
ANR	4820582	PrimaryExpression	"""%s=%s matches %s, choosing IP %s\\n"""		4820139	0					
ANR	4820583	Argument	interface_param_name		4820139	2					
ANR	4820584	Identifier	interface_param_name		4820139	0					
ANR	4820585	Argument	interface_pattern		4820139	3					
ANR	4820586	Identifier	interface_pattern		4820139	0					
ANR	4820587	Argument	matches_str . c_str ( )		4820139	4					
ANR	4820588	CallExpression	matches_str . c_str ( )		4820139	0					
ANR	4820589	Callee	matches_str . c_str		4820139	0					
ANR	4820590	MemberAccess	matches_str . c_str		4820139	0					
ANR	4820591	Identifier	matches_str		4820139	0					
ANR	4820592	Identifier	c_str		4820139	1					
ANR	4820593	ArgumentList			4820139	1					
ANR	4820594	Argument	ip . c_str ( )		4820139	5					
ANR	4820595	CallExpression	ip . c_str ( )		4820139	0					
ANR	4820596	Callee	ip . c_str		4820139	0					
ANR	4820597	MemberAccess	ip . c_str		4820139	0					
ANR	4820598	Identifier	ip		4820139	0					
ANR	4820599	Identifier	c_str		4820139	1					
ANR	4820600	ArgumentList			4820139	1					
ANR	4820601	ReturnStatement	return true ;	201:1:5149:5160	4820139	14	True				
ANR	4820602	Identifier	true		4820139	0					
ANR	4820603	ReturnType	bool		4820139	1					
ANR	4820604	Identifier	network_interface_to_ip		4820139	2					
ANR	4820605	ParameterList	"char const * interface_param_name , char const * interface_pattern , std :: string & ip , std :: set < std :: string > * network_interface_ips"		4820139	3					
ANR	4820606	Parameter	char const * interface_param_name	85:24:2313:2344	4820139	0	True				
ANR	4820607	ParameterType	char const *		4820139	0					
ANR	4820608	Identifier	interface_param_name		4820139	1					
ANR	4820609	Parameter	char const * interface_pattern	85:57:2346:2374	4820139	1	True				
ANR	4820610	ParameterType	char const *		4820139	0					
ANR	4820611	Identifier	interface_pattern		4820139	1					
ANR	4820612	Parameter	std :: string & ip	85:87:2376:2390	4820139	2	True				
ANR	4820613	ParameterType	std :: string &		4820139	0					
ANR	4820614	Identifier	ip		4820139	1					
ANR	4820615	Parameter	std :: set < std :: string > * network_interface_ips	85:103:2392:2437	4820139	3	True				
ANR	4820616	ParameterType	std :: set < std :: string > *		4820139	0					
ANR	4820617	Identifier	network_interface_ips		4820139	1					
ANR	4820618	CFGEntryNode	ENTRY		4820139		True				
ANR	4820619	CFGExitNode	EXIT		4820139		True				
ANR	4820620	Symbol	* dev		4820139						
ANR	4820621	Symbol	interface_param_name		4820139						
ANR	4820622	Symbol	desireability		4820139						
ANR	4820623	Symbol	dev_list . begin		4820139						
ANR	4820624	Symbol	pattern		4820139						
ANR	4820625	Symbol	matches_str		4820139						
ANR	4820626	Symbol	dev -> IP		4820139						
ANR	4820627	Symbol	pattern . contains_anycase_withwildcard		4820139						
ANR	4820628	Symbol	dev		4820139						
ANR	4820629	Symbol	interface_pattern		4820139						
ANR	4820630	Symbol	this_addr . from_ip_string		4820139						
ANR	4820631	Symbol	addr		4820139						
ANR	4820632	Symbol	dev_list		4820139						
ANR	4820633	Symbol	dev_list . end		4820139						
ANR	4820634	Symbol	addr . from_ip_string		4820139						
ANR	4820635	Symbol	D_HOSTNAME		4820139						
ANR	4820636	Symbol	strcmp		4820139						
ANR	4820637	Symbol	this_addr . is_private_network		4820139						
ANR	4820638	Symbol	this_addr		4820139						
ANR	4820639	Symbol	ip . c_str		4820139						
ANR	4820640	Symbol	ip		4820139						
ANR	4820641	Symbol	matches_str . size		4820139						
ANR	4820642	Symbol	this_addr . is_loopback		4820139						
ANR	4820643	Symbol	network_interface_ips		4820139						
ANR	4820644	Symbol	false		4820139						
ANR	4820645	Symbol	D_ALWAYS		4820139						
ANR	4820646	Symbol	best_so_far		4820139						
ANR	4820647	Symbol	matches		4820139						
ANR	4820648	Symbol	dev -> name		4820139						
ANR	4820649	Symbol	matches_str . c_str		4820139						
ANR	4820650	Symbol	true		4820139						
ANR	4820651	Function	init_network_interfaces	204:0:5165:5912							
ANR	4820652	FunctionDef	init_network_interfaces (int config_done)		4820651	0					
ANR	4820653	CompoundStatement		206:0:5213:5912	4820651	0					
ANR	4820654	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Trying to getting network interface informations (%s)\\n"" , config_done ? ""after reading config"" : ""config file not read"" )"	207:1:5216:5362	4820651	0	True				
ANR	4820655	CallExpression	"dprintf ( D_HOSTNAME , ""Trying to getting network interface informations (%s)\\n"" , config_done ? ""after reading config"" : ""config file not read"" )"		4820651	0					
ANR	4820656	Callee	dprintf		4820651	0					
ANR	4820657	Identifier	dprintf		4820651	0					
ANR	4820658	ArgumentList	D_HOSTNAME		4820651	1					
ANR	4820659	Argument	D_HOSTNAME		4820651	0					
ANR	4820660	Identifier	D_HOSTNAME		4820651	0					
ANR	4820661	Argument	"""Trying to getting network interface informations (%s)\\n"""		4820651	1					
ANR	4820662	PrimaryExpression	"""Trying to getting network interface informations (%s)\\n"""		4820651	0					
ANR	4820663	Argument	"config_done ? ""after reading config"" : ""config file not read"""		4820651	2					
ANR	4820664	ConditionalExpression	"config_done ? ""after reading config"" : ""config file not read"""		4820651	0					
ANR	4820665	Condition	config_done		4820651	0					
ANR	4820666	Identifier	config_done		4820651	0					
ANR	4820667	PrimaryExpression	"""after reading config"""		4820651	1					
ANR	4820668	PrimaryExpression	"""config file not read"""		4820651	2					
ANR	4820669	IdentifierDeclStatement	std :: string network_interface ;	210:1:5366:5395	4820651	1	True				
ANR	4820670	IdentifierDecl	network_interface		4820651	0					
ANR	4820671	IdentifierDeclType	std :: string		4820651	0					
ANR	4820672	Identifier	network_interface		4820651	1					
ANR	4820673	IfStatement	if ( config_done )		4820651	2					
ANR	4820674	Condition	config_done	212:5:5403:5413	4820651	0	True				
ANR	4820675	Identifier	config_done		4820651	0					
ANR	4820676	CompoundStatement		7:19:203:203	4820651	1					
ANR	4820677	ExpressionStatement	"param ( network_interface , ""NETWORK_INTERFACE"" )"	213:2:5421:5465	4820651	0	True				
ANR	4820678	CallExpression	"param ( network_interface , ""NETWORK_INTERFACE"" )"		4820651	0					
ANR	4820679	Callee	param		4820651	0					
ANR	4820680	Identifier	param		4820651	0					
ANR	4820681	ArgumentList	network_interface		4820651	1					
ANR	4820682	Argument	network_interface		4820651	0					
ANR	4820683	Identifier	network_interface		4820651	0					
ANR	4820684	Argument	"""NETWORK_INTERFACE"""		4820651	1					
ANR	4820685	PrimaryExpression	"""NETWORK_INTERFACE"""		4820651	0					
ANR	4820686	IfStatement	if ( network_interface . empty ( ) )		4820651	3					
ANR	4820687	Condition	network_interface . empty ( )	215:5:5475:5499	4820651	0	True				
ANR	4820688	CallExpression	network_interface . empty ( )		4820651	0					
ANR	4820689	Callee	network_interface . empty		4820651	0					
ANR	4820690	MemberAccess	network_interface . empty		4820651	0					
ANR	4820691	Identifier	network_interface		4820651	0					
ANR	4820692	Identifier	empty		4820651	1					
ANR	4820693	ArgumentList			4820651	1					
ANR	4820694	CompoundStatement		10:33:289:289	4820651	1					
ANR	4820695	ExpressionStatement	"network_interface = ""*"""	216:2:5507:5530	4820651	0	True				
ANR	4820696	AssignmentExpression	"network_interface = ""*"""		4820651	0		=			
ANR	4820697	Identifier	network_interface		4820651	0					
ANR	4820698	PrimaryExpression	"""*"""		4820651	1					
ANR	4820699	ExpressionStatement	"network_interface_matches_all = ( network_interface == ""*"" )"	219:1:5537:5595	4820651	4	True				
ANR	4820700	AssignmentExpression	"network_interface_matches_all = ( network_interface == ""*"" )"		4820651	0		=			
ANR	4820701	Identifier	network_interface_matches_all		4820651	0					
ANR	4820702	EqualityExpression	"network_interface == ""*"""		4820651	1		==			
ANR	4820703	Identifier	network_interface		4820651	0					
ANR	4820704	PrimaryExpression	"""*"""		4820651	1					
ANR	4820705	IdentifierDeclStatement	std :: string network_interface_ip ;	221:1:5599:5631	4820651	5	True				
ANR	4820706	IdentifierDecl	network_interface_ip		4820651	0					
ANR	4820707	IdentifierDeclType	std :: string		4820651	0					
ANR	4820708	Identifier	network_interface_ip		4820651	1					
ANR	4820709	IdentifierDeclStatement	bool ok ;	222:1:5634:5641	4820651	6	True				
ANR	4820710	IdentifierDecl	ok		4820651	0					
ANR	4820711	IdentifierDeclType	bool		4820651	0					
ANR	4820712	Identifier	ok		4820651	1					
ANR	4820713	ExpressionStatement	"ok = network_interface_to_ip ( ""NETWORK_INTERFACE"" , network_interface . c_str ( ) , network_interface_ip , & configured_network_interface_ips )"	223:1:5644:5786	4820651	7	True				
ANR	4820714	AssignmentExpression	"ok = network_interface_to_ip ( ""NETWORK_INTERFACE"" , network_interface . c_str ( ) , network_interface_ip , & configured_network_interface_ips )"		4820651	0		=			
ANR	4820715	Identifier	ok		4820651	0					
ANR	4820716	CallExpression	"network_interface_to_ip ( ""NETWORK_INTERFACE"" , network_interface . c_str ( ) , network_interface_ip , & configured_network_interface_ips )"		4820651	1					
ANR	4820717	Callee	network_interface_to_ip		4820651	0					
ANR	4820718	Identifier	network_interface_to_ip		4820651	0					
ANR	4820719	ArgumentList	"""NETWORK_INTERFACE"""		4820651	1					
ANR	4820720	Argument	"""NETWORK_INTERFACE"""		4820651	0					
ANR	4820721	PrimaryExpression	"""NETWORK_INTERFACE"""		4820651	0					
ANR	4820722	Argument	network_interface . c_str ( )		4820651	1					
ANR	4820723	CallExpression	network_interface . c_str ( )		4820651	0					
ANR	4820724	Callee	network_interface . c_str		4820651	0					
ANR	4820725	MemberAccess	network_interface . c_str		4820651	0					
ANR	4820726	Identifier	network_interface		4820651	0					
ANR	4820727	Identifier	c_str		4820651	1					
ANR	4820728	ArgumentList			4820651	1					
ANR	4820729	Argument	network_interface_ip		4820651	2					
ANR	4820730	Identifier	network_interface_ip		4820651	0					
ANR	4820731	Argument	& configured_network_interface_ips		4820651	3					
ANR	4820732	UnaryOperationExpression	& configured_network_interface_ips		4820651	0					
ANR	4820733	UnaryOperator	&		4820651	0					
ANR	4820734	Identifier	configured_network_interface_ips		4820651	1					
ANR	4820735	IfStatement	if ( ! ok )		4820651	8					
ANR	4820736	Condition	! ok	229:5:5794:5796	4820651	0	True				
ANR	4820737	UnaryOperationExpression	! ok		4820651	0					
ANR	4820738	UnaryOperator	!		4820651	0					
ANR	4820739	Identifier	ok		4820651	1					
ANR	4820740	CompoundStatement		24:11:586:586	4820651	1					
ANR	4820741	ExpressionStatement	"EXCEPT ( ""Failed to determine my IP address using NETWORK_INTERFACE=%s"" , network_interface . c_str ( ) )"	230:2:5804:5907	4820651	0	True				
ANR	4820742	CallExpression	"EXCEPT ( ""Failed to determine my IP address using NETWORK_INTERFACE=%s"" , network_interface . c_str ( ) )"		4820651	0					
ANR	4820743	Callee	EXCEPT		4820651	0					
ANR	4820744	Identifier	EXCEPT		4820651	0					
ANR	4820745	ArgumentList	"""Failed to determine my IP address using NETWORK_INTERFACE=%s"""		4820651	1					
ANR	4820746	Argument	"""Failed to determine my IP address using NETWORK_INTERFACE=%s"""		4820651	0					
ANR	4820747	PrimaryExpression	"""Failed to determine my IP address using NETWORK_INTERFACE=%s"""		4820651	0					
ANR	4820748	Argument	network_interface . c_str ( )		4820651	1					
ANR	4820749	CallExpression	network_interface . c_str ( )		4820651	0					
ANR	4820750	Callee	network_interface . c_str		4820651	0					
ANR	4820751	MemberAccess	network_interface . c_str		4820651	0					
ANR	4820752	Identifier	network_interface		4820651	0					
ANR	4820753	Identifier	c_str		4820651	1					
ANR	4820754	ArgumentList			4820651	1					
ANR	4820755	ReturnType	void		4820651	1					
ANR	4820756	Identifier	init_network_interfaces		4820651	2					
ANR	4820757	ParameterList	int config_done		4820651	3					
ANR	4820758	Parameter	int config_done	205:25:5195:5209	4820651	0	True				
ANR	4820759	ParameterType	int		4820651	0					
ANR	4820760	Identifier	config_done		4820651	1					
ANR	4820761	CFGEntryNode	ENTRY		4820651		True				
ANR	4820762	CFGExitNode	EXIT		4820651		True				
ANR	4820763	Symbol	D_HOSTNAME		4820651						
ANR	4820764	Symbol	network_interface_ip		4820651						
ANR	4820765	Symbol	network_interface . empty		4820651						
ANR	4820766	Symbol	network_interface_matches_all		4820651						
ANR	4820767	Symbol	network_interface . c_str		4820651						
ANR	4820768	Symbol	& configured_network_interface_ips		4820651						
ANR	4820769	Symbol	config_done		4820651						
ANR	4820770	Symbol	ok		4820651						
ANR	4820771	Symbol	network_interface_to_ip		4820651						
ANR	4820772	Symbol	network_interface		4820651						
ANR	4820773	Function	is_sender_ip_attr	356:0:9702:10055							
ANR	4820774	FunctionDef	is_sender_ip_attr (char const * attr_name)		4820773	0					
ANR	4820775	CompoundStatement		357:0:9755:10055	4820773	0					
ANR	4820776	IfStatement	"if ( strcmp ( attr_name , ATTR_MY_ADDRESS ) == 0 )"		4820773	0					
ANR	4820777	Condition	"strcmp ( attr_name , ATTR_MY_ADDRESS ) == 0"	358:7:9764:9801	4820773	0	True				
ANR	4820778	EqualityExpression	"strcmp ( attr_name , ATTR_MY_ADDRESS ) == 0"		4820773	0		==			
ANR	4820779	CallExpression	"strcmp ( attr_name , ATTR_MY_ADDRESS )"		4820773	0					
ANR	4820780	Callee	strcmp		4820773	0					
ANR	4820781	Identifier	strcmp		4820773	0					
ANR	4820782	ArgumentList	attr_name		4820773	1					
ANR	4820783	Argument	attr_name		4820773	0					
ANR	4820784	Identifier	attr_name		4820773	0					
ANR	4820785	Argument	ATTR_MY_ADDRESS		4820773	1					
ANR	4820786	Identifier	ATTR_MY_ADDRESS		4820773	0					
ANR	4820787	PrimaryExpression	0		4820773	1					
ANR	4820788	ReturnStatement	return true ;	358:47:9804:9815	4820773	1	True				
ANR	4820789	Identifier	true		4820773	0					
ANR	4820790	IfStatement	"if ( strcmp ( attr_name , ATTR_TRANSFER_SOCKET ) == 0 )"		4820773	1					
ANR	4820791	Condition	"strcmp ( attr_name , ATTR_TRANSFER_SOCKET ) == 0"	359:7:9824:9866	4820773	0	True				
ANR	4820792	EqualityExpression	"strcmp ( attr_name , ATTR_TRANSFER_SOCKET ) == 0"		4820773	0		==			
ANR	4820793	CallExpression	"strcmp ( attr_name , ATTR_TRANSFER_SOCKET )"		4820773	0					
ANR	4820794	Callee	strcmp		4820773	0					
ANR	4820795	Identifier	strcmp		4820773	0					
ANR	4820796	ArgumentList	attr_name		4820773	1					
ANR	4820797	Argument	attr_name		4820773	0					
ANR	4820798	Identifier	attr_name		4820773	0					
ANR	4820799	Argument	ATTR_TRANSFER_SOCKET		4820773	1					
ANR	4820800	Identifier	ATTR_TRANSFER_SOCKET		4820773	0					
ANR	4820801	PrimaryExpression	0		4820773	1					
ANR	4820802	ReturnStatement	return true ;	359:52:9869:9880	4820773	1	True				
ANR	4820803	Identifier	true		4820773	0					
ANR	4820804	IdentifierDeclStatement	size_t attr_name_len = strlen ( attr_name ) ;	360:1:9883:9923	4820773	2	True				
ANR	4820805	IdentifierDecl	attr_name_len = strlen ( attr_name )		4820773	0					
ANR	4820806	IdentifierDeclType	size_t		4820773	0					
ANR	4820807	Identifier	attr_name_len		4820773	1					
ANR	4820808	AssignmentExpression	attr_name_len = strlen ( attr_name )		4820773	2		=			
ANR	4820809	Identifier	attr_name_len		4820773	0					
ANR	4820810	CallExpression	strlen ( attr_name )		4820773	1					
ANR	4820811	Callee	strlen		4820773	0					
ANR	4820812	Identifier	strlen		4820773	0					
ANR	4820813	ArgumentList	attr_name		4820773	1					
ANR	4820814	Argument	attr_name		4820773	0					
ANR	4820815	Identifier	attr_name		4820773	0					
ANR	4820816	IfStatement	"if ( attr_name_len >= 6 && strcasecmp ( attr_name + attr_name_len - 6 , ""IpAddr"" ) == 0 )"		4820773	3					
ANR	4820817	Condition	"attr_name_len >= 6 && strcasecmp ( attr_name + attr_name_len - 6 , ""IpAddr"" ) == 0"	361:7:9932:10004	4820773	0	True				
ANR	4820818	AndExpression	"attr_name_len >= 6 && strcasecmp ( attr_name + attr_name_len - 6 , ""IpAddr"" ) == 0"		4820773	0		&&			
ANR	4820819	RelationalExpression	attr_name_len >= 6		4820773	0		>=			
ANR	4820820	Identifier	attr_name_len		4820773	0					
ANR	4820821	PrimaryExpression	6		4820773	1					
ANR	4820822	EqualityExpression	"strcasecmp ( attr_name + attr_name_len - 6 , ""IpAddr"" ) == 0"		4820773	1		==			
ANR	4820823	CallExpression	"strcasecmp ( attr_name + attr_name_len - 6 , ""IpAddr"" )"		4820773	0					
ANR	4820824	Callee	strcasecmp		4820773	0					
ANR	4820825	Identifier	strcasecmp		4820773	0					
ANR	4820826	ArgumentList	attr_name + attr_name_len - 6		4820773	1					
ANR	4820827	Argument	attr_name + attr_name_len - 6		4820773	0					
ANR	4820828	AdditiveExpression	attr_name + attr_name_len - 6		4820773	0		+			
ANR	4820829	Identifier	attr_name		4820773	0					
ANR	4820830	AdditiveExpression	attr_name_len - 6		4820773	1		-			
ANR	4820831	Identifier	attr_name_len		4820773	0					
ANR	4820832	PrimaryExpression	6		4820773	1					
ANR	4820833	Argument	"""IpAddr"""		4820773	1					
ANR	4820834	PrimaryExpression	"""IpAddr"""		4820773	0					
ANR	4820835	PrimaryExpression	0		4820773	1					
ANR	4820836	CompoundStatement		6:1:252:252	4820773	1					
ANR	4820837	ReturnStatement	return true ;	363:8:10018:10029	4820773	0	True				
ANR	4820838	Identifier	true		4820773	0					
ANR	4820839	ReturnStatement	return false ;	365:4:10041:10053	4820773	4	True				
ANR	4820840	Identifier	false		4820773	0					
ANR	4820841	ReturnType	static bool		4820773	1					
ANR	4820842	Identifier	is_sender_ip_attr		4820773	2					
ANR	4820843	ParameterList	char const * attr_name		4820773	3					
ANR	4820844	Parameter	char const * attr_name	356:30:9732:9752	4820773	0	True				
ANR	4820845	ParameterType	char const *		4820773	0					
ANR	4820846	Identifier	attr_name		4820773	1					
ANR	4820847	CFGEntryNode	ENTRY		4820773		True				
ANR	4820848	CFGExitNode	EXIT		4820773		True				
ANR	4820849	Symbol	strcmp		4820773						
ANR	4820850	Symbol	strlen		4820773						
ANR	4820851	Symbol	attr_name		4820773						
ANR	4820852	Symbol	attr_name_len		4820773						
ANR	4820853	Symbol	ATTR_TRANSFER_SOCKET		4820773						
ANR	4820854	Symbol	true		4820773						
ANR	4820855	Symbol	false		4820773						
ANR	4820856	Symbol	ATTR_MY_ADDRESS		4820773						
ANR	4820857	Symbol	strcasecmp		4820773						
ANR	4820858	Function	ConfigConvertDefaultIPToSocketIP	368:0:10058:11893							
ANR	4820859	FunctionDef	ConfigConvertDefaultIPToSocketIP ()		4820858	0					
ANR	4820860	CompoundStatement		369:0:10098:11893	4820858	0					
ANR	4820861	ExpressionStatement	enable_convert_default_IP_to_socket_IP = true	376:1:10255:10300	4820858	0	True				
ANR	4820862	AssignmentExpression	enable_convert_default_IP_to_socket_IP = true		4820858	0		=			
ANR	4820863	Identifier	enable_convert_default_IP_to_socket_IP		4820858	0					
ANR	4820864	Identifier	true		4820858	1					
ANR	4820865	IfStatement	"if ( param_boolean ( ""NET_REMAP_ENABLE"" , false ) )"		4820858	1					
ANR	4820866	Condition	"param_boolean ( ""NET_REMAP_ENABLE"" , false )"	389:5:10839:10878	4820858	0	True				
ANR	4820867	CallExpression	"param_boolean ( ""NET_REMAP_ENABLE"" , false )"		4820858	0					
ANR	4820868	Callee	param_boolean		4820858	0					
ANR	4820869	Identifier	param_boolean		4820858	0					
ANR	4820870	ArgumentList	"""NET_REMAP_ENABLE"""		4820858	1					
ANR	4820871	Argument	"""NET_REMAP_ENABLE"""		4820858	0					
ANR	4820872	PrimaryExpression	"""NET_REMAP_ENABLE"""		4820858	0					
ANR	4820873	Argument	false		4820858	1					
ANR	4820874	Identifier	false		4820858	0					
ANR	4820875	CompoundStatement		21:47:782:782	4820858	1					
ANR	4820876	ExpressionStatement	enable_convert_default_IP_to_socket_IP = false	390:2:10885:10931	4820858	0	True				
ANR	4820877	AssignmentExpression	enable_convert_default_IP_to_socket_IP = false		4820858	0		=			
ANR	4820878	Identifier	enable_convert_default_IP_to_socket_IP		4820858	0					
ANR	4820879	Identifier	false		4820858	1					
ANR	4820880	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Disabling ConvertDefaultIPToSocketIP() because NET_REMAP_ENABLE is true.\\n"" )"	391:2:10935:11032	4820858	1	True				
ANR	4820881	CallExpression	"dprintf ( D_FULLDEBUG , ""Disabling ConvertDefaultIPToSocketIP() because NET_REMAP_ENABLE is true.\\n"" )"		4820858	0					
ANR	4820882	Callee	dprintf		4820858	0					
ANR	4820883	Identifier	dprintf		4820858	0					
ANR	4820884	ArgumentList	D_FULLDEBUG		4820858	1					
ANR	4820885	Argument	D_FULLDEBUG		4820858	0					
ANR	4820886	Identifier	D_FULLDEBUG		4820858	0					
ANR	4820887	Argument	"""Disabling ConvertDefaultIPToSocketIP() because NET_REMAP_ENABLE is true.\\n"""		4820858	1					
ANR	4820888	PrimaryExpression	"""Disabling ConvertDefaultIPToSocketIP() because NET_REMAP_ENABLE is true.\\n"""		4820858	0					
ANR	4820889	IdentifierDeclStatement	"char * str = param ( ""TCP_FORWARDING_HOST"" ) ;"	399:1:11206:11246	4820858	2	True				
ANR	4820890	IdentifierDecl	"* str = param ( ""TCP_FORWARDING_HOST"" )"		4820858	0					
ANR	4820891	IdentifierDeclType	char *		4820858	0					
ANR	4820892	Identifier	str		4820858	1					
ANR	4820893	AssignmentExpression	"* str = param ( ""TCP_FORWARDING_HOST"" )"		4820858	2		=			
ANR	4820894	Identifier	str		4820858	0					
ANR	4820895	CallExpression	"param ( ""TCP_FORWARDING_HOST"" )"		4820858	1					
ANR	4820896	Callee	param		4820858	0					
ANR	4820897	Identifier	param		4820858	0					
ANR	4820898	ArgumentList	"""TCP_FORWARDING_HOST"""		4820858	1					
ANR	4820899	Argument	"""TCP_FORWARDING_HOST"""		4820858	0					
ANR	4820900	PrimaryExpression	"""TCP_FORWARDING_HOST"""		4820858	0					
ANR	4820901	IfStatement	if ( str && * str )		4820858	3					
ANR	4820902	Condition	str && * str	400:5:11253:11263	4820858	0	True				
ANR	4820903	AndExpression	str && * str		4820858	0		&&			
ANR	4820904	Identifier	str		4820858	0					
ANR	4820905	UnaryOperationExpression	* str		4820858	1					
ANR	4820906	UnaryOperator	*		4820858	0					
ANR	4820907	Identifier	str		4820858	1					
ANR	4820908	CompoundStatement		32:19:1168:1168	4820858	1					
ANR	4820909	ExpressionStatement	enable_convert_default_IP_to_socket_IP = false	401:2:11271:11317	4820858	0	True				
ANR	4820910	AssignmentExpression	enable_convert_default_IP_to_socket_IP = false		4820858	0		=			
ANR	4820911	Identifier	enable_convert_default_IP_to_socket_IP		4820858	0					
ANR	4820912	Identifier	false		4820858	1					
ANR	4820913	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Disabling ConvertDefaultIPToSocketIP() because TCP_FORWARDING_HOST is defined.\\n"" )"	402:2:11321:11424	4820858	1	True				
ANR	4820914	CallExpression	"dprintf ( D_FULLDEBUG , ""Disabling ConvertDefaultIPToSocketIP() because TCP_FORWARDING_HOST is defined.\\n"" )"		4820858	0					
ANR	4820915	Callee	dprintf		4820858	0					
ANR	4820916	Identifier	dprintf		4820858	0					
ANR	4820917	ArgumentList	D_FULLDEBUG		4820858	1					
ANR	4820918	Argument	D_FULLDEBUG		4820858	0					
ANR	4820919	Identifier	D_FULLDEBUG		4820858	0					
ANR	4820920	Argument	"""Disabling ConvertDefaultIPToSocketIP() because TCP_FORWARDING_HOST is defined.\\n"""		4820858	1					
ANR	4820921	PrimaryExpression	"""Disabling ConvertDefaultIPToSocketIP() because TCP_FORWARDING_HOST is defined.\\n"""		4820858	0					
ANR	4820922	ExpressionStatement	free ( str )	404:1:11430:11441	4820858	4	True				
ANR	4820923	CallExpression	free ( str )		4820858	0					
ANR	4820924	Callee	free		4820858	0					
ANR	4820925	Identifier	free		4820858	0					
ANR	4820926	ArgumentList	str		4820858	1					
ANR	4820927	Argument	str		4820858	0					
ANR	4820928	Identifier	str		4820858	0					
ANR	4820929	IfStatement	if ( configured_network_interface_ips . size ( ) <= 1 )		4820858	5					
ANR	4820930	Condition	configured_network_interface_ips . size ( ) <= 1	406:5:11449:11492	4820858	0	True				
ANR	4820931	RelationalExpression	configured_network_interface_ips . size ( ) <= 1		4820858	0		<=			
ANR	4820932	CallExpression	configured_network_interface_ips . size ( )		4820858	0					
ANR	4820933	Callee	configured_network_interface_ips . size		4820858	0					
ANR	4820934	MemberAccess	configured_network_interface_ips . size		4820858	0					
ANR	4820935	Identifier	configured_network_interface_ips		4820858	0					
ANR	4820936	Identifier	size		4820858	1					
ANR	4820937	ArgumentList			4820858	1					
ANR	4820938	PrimaryExpression	1		4820858	1					
ANR	4820939	CompoundStatement		38:52:1397:1397	4820858	1					
ANR	4820940	ExpressionStatement	enable_convert_default_IP_to_socket_IP = false	407:2:11500:11546	4820858	0	True				
ANR	4820941	AssignmentExpression	enable_convert_default_IP_to_socket_IP = false		4820858	0		=			
ANR	4820942	Identifier	enable_convert_default_IP_to_socket_IP		4820858	0					
ANR	4820943	Identifier	false		4820858	1					
ANR	4820944	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Disabling ConvertDefaultIPToSocketIP() because NETWORK_INTERFACE does not match multiple IPs.\\n"" )"	408:2:11550:11668	4820858	1	True				
ANR	4820945	CallExpression	"dprintf ( D_FULLDEBUG , ""Disabling ConvertDefaultIPToSocketIP() because NETWORK_INTERFACE does not match multiple IPs.\\n"" )"		4820858	0					
ANR	4820946	Callee	dprintf		4820858	0					
ANR	4820947	Identifier	dprintf		4820858	0					
ANR	4820948	ArgumentList	D_FULLDEBUG		4820858	1					
ANR	4820949	Argument	D_FULLDEBUG		4820858	0					
ANR	4820950	Identifier	D_FULLDEBUG		4820858	0					
ANR	4820951	Argument	"""Disabling ConvertDefaultIPToSocketIP() because NETWORK_INTERFACE does not match multiple IPs.\\n"""		4820858	1					
ANR	4820952	PrimaryExpression	"""Disabling ConvertDefaultIPToSocketIP() because NETWORK_INTERFACE does not match multiple IPs.\\n"""		4820858	0					
ANR	4820953	IfStatement	"if ( ! param_boolean ( ""ENABLE_ADDRESS_REWRITING"" , true ) )"		4820858	6					
ANR	4820954	Condition	"! param_boolean ( ""ENABLE_ADDRESS_REWRITING"" , true )"	411:5:11679:11725	4820858	0	True				
ANR	4820955	UnaryOperationExpression	"! param_boolean ( ""ENABLE_ADDRESS_REWRITING"" , true )"		4820858	0					
ANR	4820956	UnaryOperator	!		4820858	0					
ANR	4820957	CallExpression	"param_boolean ( ""ENABLE_ADDRESS_REWRITING"" , true )"		4820858	1					
ANR	4820958	Callee	param_boolean		4820858	0					
ANR	4820959	Identifier	param_boolean		4820858	0					
ANR	4820960	ArgumentList	"""ENABLE_ADDRESS_REWRITING"""		4820858	1					
ANR	4820961	Argument	"""ENABLE_ADDRESS_REWRITING"""		4820858	0					
ANR	4820962	PrimaryExpression	"""ENABLE_ADDRESS_REWRITING"""		4820858	0					
ANR	4820963	Argument	true		4820858	1					
ANR	4820964	Identifier	true		4820858	0					
ANR	4820965	CompoundStatement		43:55:1630:1630	4820858	1					
ANR	4820966	ExpressionStatement	enable_convert_default_IP_to_socket_IP = false	412:2:11733:11779	4820858	0	True				
ANR	4820967	AssignmentExpression	enable_convert_default_IP_to_socket_IP = false		4820858	0		=			
ANR	4820968	Identifier	enable_convert_default_IP_to_socket_IP		4820858	0					
ANR	4820969	Identifier	false		4820858	1					
ANR	4820970	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Disabling ConvertDefaultIPToSocketIP() because ENABLE_ADDRESS_REWRITING is true.\\n"" )"	413:2:11783:11888	4820858	1	True				
ANR	4820971	CallExpression	"dprintf ( D_FULLDEBUG , ""Disabling ConvertDefaultIPToSocketIP() because ENABLE_ADDRESS_REWRITING is true.\\n"" )"		4820858	0					
ANR	4820972	Callee	dprintf		4820858	0					
ANR	4820973	Identifier	dprintf		4820858	0					
ANR	4820974	ArgumentList	D_FULLDEBUG		4820858	1					
ANR	4820975	Argument	D_FULLDEBUG		4820858	0					
ANR	4820976	Identifier	D_FULLDEBUG		4820858	0					
ANR	4820977	Argument	"""Disabling ConvertDefaultIPToSocketIP() because ENABLE_ADDRESS_REWRITING is true.\\n"""		4820858	1					
ANR	4820978	PrimaryExpression	"""Disabling ConvertDefaultIPToSocketIP() because ENABLE_ADDRESS_REWRITING is true.\\n"""		4820858	0					
ANR	4820979	ReturnType	void		4820858	1					
ANR	4820980	Identifier	ConfigConvertDefaultIPToSocketIP		4820858	2					
ANR	4820981	ParameterList			4820858	3					
ANR	4820982	CFGEntryNode	ENTRY		4820858		True				
ANR	4820983	CFGExitNode	EXIT		4820858		True				
ANR	4820984	Symbol	enable_convert_default_IP_to_socket_IP		4820858						
ANR	4820985	Symbol	str		4820858						
ANR	4820986	Symbol	configured_network_interface_ips . size		4820858						
ANR	4820987	Symbol	param		4820858						
ANR	4820988	Symbol	true		4820858						
ANR	4820989	Symbol	false		4820858						
ANR	4820990	Symbol	param_boolean		4820858						
ANR	4820991	Symbol	D_FULLDEBUG		4820858						
ANR	4820992	Symbol	* str		4820858						
ANR	4820993	Symbol	configured_network_interface_ips		4820858						
ANR	4820994	Function	IPMatchesNetworkInterfaceSetting	417:0:11896:12224							
ANR	4820995	FunctionDef	IPMatchesNetworkInterfaceSetting (char const * ip)		4820994	0					
ANR	4820996	CompoundStatement		418:0:11957:12224	4820994	0					
ANR	4820997	ReturnStatement	return network_interface_matches_all || configured_network_interface_ips . count ( ip ) != 0 ;	422:1:12133:12222	4820994	0	True				
ANR	4820998	OrExpression	network_interface_matches_all || configured_network_interface_ips . count ( ip ) != 0		4820994	0		||			
ANR	4820999	Identifier	network_interface_matches_all		4820994	0					
ANR	4821000	EqualityExpression	configured_network_interface_ips . count ( ip ) != 0		4820994	1		!=			
ANR	4821001	CallExpression	configured_network_interface_ips . count ( ip )		4820994	0					
ANR	4821002	Callee	configured_network_interface_ips . count		4820994	0					
ANR	4821003	MemberAccess	configured_network_interface_ips . count		4820994	0					
ANR	4821004	Identifier	configured_network_interface_ips		4820994	0					
ANR	4821005	Identifier	count		4820994	1					
ANR	4821006	ArgumentList	ip		4820994	1					
ANR	4821007	Argument	ip		4820994	0					
ANR	4821008	Identifier	ip		4820994	0					
ANR	4821009	PrimaryExpression	0		4820994	1					
ANR	4821010	ReturnType	static bool		4820994	1					
ANR	4821011	Identifier	IPMatchesNetworkInterfaceSetting		4820994	2					
ANR	4821012	ParameterList	char const * ip		4820994	3					
ANR	4821013	Parameter	char const * ip	417:45:11941:11954	4820994	0	True				
ANR	4821014	ParameterType	char const *		4820994	0					
ANR	4821015	Identifier	ip		4820994	1					
ANR	4821016	CFGEntryNode	ENTRY		4820994		True				
ANR	4821017	CFGExitNode	EXIT		4820994		True				
ANR	4821018	Symbol	configured_network_interface_ips . count		4820994						
ANR	4821019	Symbol	network_interface_matches_all		4820994						
ANR	4821020	Symbol	ip		4820994						
ANR	4821021	Symbol	configured_network_interface_ips		4820994						
ANR	4821022	Function	ConvertDefaultIPToSocketIP	426:0:12227:14181							
ANR	4821023	FunctionDef	"ConvertDefaultIPToSocketIP (char const * attr_name , char const * old_expr_string , char * * new_expr_string , Stream & s)"		4821022	0					
ANR	4821024	CompoundStatement		427:0:12343:14181	4821022	0					
ANR	4821025	ExpressionStatement	* new_expr_string = NULL	428:1:12346:12369	4821022	0	True				
ANR	4821026	AssignmentExpression	* new_expr_string = NULL		4821022	0		=			
ANR	4821027	UnaryOperationExpression	* new_expr_string		4821022	0					
ANR	4821028	UnaryOperator	*		4821022	0					
ANR	4821029	Identifier	new_expr_string		4821022	1					
ANR	4821030	Identifier	NULL		4821022	1					
ANR	4821031	IfStatement	if ( ! enable_convert_default_IP_to_socket_IP )		4821022	1					
ANR	4821032	Condition	! enable_convert_default_IP_to_socket_IP	430:5:12377:12415	4821022	0	True				
ANR	4821033	UnaryOperationExpression	! enable_convert_default_IP_to_socket_IP		4821022	0					
ANR	4821034	UnaryOperator	!		4821022	0					
ANR	4821035	Identifier	enable_convert_default_IP_to_socket_IP		4821022	1					
ANR	4821036	CompoundStatement		4:47:75:75	4821022	1					
ANR	4821037	ReturnStatement	return ;	431:2:12423:12429	4821022	0	True				
ANR	4821038	IfStatement	if ( ! is_sender_ip_attr ( attr_name ) )		4821022	2					
ANR	4821039	Condition	! is_sender_ip_attr ( attr_name )	434:7:12442:12470	4821022	0	True				
ANR	4821040	UnaryOperationExpression	! is_sender_ip_attr ( attr_name )		4821022	0					
ANR	4821041	UnaryOperator	!		4821022	0					
ANR	4821042	CallExpression	is_sender_ip_attr ( attr_name )		4821022	1					
ANR	4821043	Callee	is_sender_ip_attr		4821022	0					
ANR	4821044	Identifier	is_sender_ip_attr		4821022	0					
ANR	4821045	ArgumentList	attr_name		4821022	1					
ANR	4821046	Argument	attr_name		4821022	0					
ANR	4821047	Identifier	attr_name		4821022	0					
ANR	4821048	CompoundStatement		8:38:129:129	4821022	1					
ANR	4821049	ReturnStatement	return ;	435:2:12477:12483	4821022	0	True				
ANR	4821050	IdentifierDeclStatement	char const * my_default_ip = my_ip_string ( ) ;	438:1:12490:12532	4821022	3	True				
ANR	4821051	IdentifierDecl	* my_default_ip = my_ip_string ( )		4821022	0					
ANR	4821052	IdentifierDeclType	char const *		4821022	0					
ANR	4821053	Identifier	my_default_ip		4821022	1					
ANR	4821054	AssignmentExpression	* my_default_ip = my_ip_string ( )		4821022	2		=			
ANR	4821055	Identifier	my_default_ip		4821022	0					
ANR	4821056	CallExpression	my_ip_string ( )		4821022	1					
ANR	4821057	Callee	my_ip_string		4821022	0					
ANR	4821058	Identifier	my_ip_string		4821022	0					
ANR	4821059	ArgumentList			4821022	1					
ANR	4821060	IdentifierDeclStatement	char const * my_sock_ip = s . my_ip_str ( ) ;	439:1:12535:12573	4821022	4	True				
ANR	4821061	IdentifierDecl	* my_sock_ip = s . my_ip_str ( )		4821022	0					
ANR	4821062	IdentifierDeclType	char const *		4821022	0					
ANR	4821063	Identifier	my_sock_ip		4821022	1					
ANR	4821064	AssignmentExpression	* my_sock_ip = s . my_ip_str ( )		4821022	2		=			
ANR	4821065	Identifier	my_sock_ip		4821022	0					
ANR	4821066	CallExpression	s . my_ip_str ( )		4821022	1					
ANR	4821067	Callee	s . my_ip_str		4821022	0					
ANR	4821068	MemberAccess	s . my_ip_str		4821022	0					
ANR	4821069	Identifier	s		4821022	0					
ANR	4821070	Identifier	my_ip_str		4821022	1					
ANR	4821071	ArgumentList			4821022	1					
ANR	4821072	IfStatement	if ( ! my_default_ip || ! my_sock_ip )		4821022	5					
ANR	4821073	Condition	! my_default_ip || ! my_sock_ip	440:4:12579:12607	4821022	0	True				
ANR	4821074	OrExpression	! my_default_ip || ! my_sock_ip		4821022	0		||			
ANR	4821075	UnaryOperationExpression	! my_default_ip		4821022	0					
ANR	4821076	UnaryOperator	!		4821022	0					
ANR	4821077	Identifier	my_default_ip		4821022	1					
ANR	4821078	UnaryOperationExpression	! my_sock_ip		4821022	1					
ANR	4821079	UnaryOperator	!		4821022	0					
ANR	4821080	Identifier	my_sock_ip		4821022	1					
ANR	4821081	CompoundStatement		14:35:266:266	4821022	1					
ANR	4821082	ReturnStatement	return ;	441:2:12614:12620	4821022	0	True				
ANR	4821083	IfStatement	"if ( strcmp ( my_default_ip , my_sock_ip ) == 0 )"		4821022	6					
ANR	4821084	Condition	"strcmp ( my_default_ip , my_sock_ip ) == 0"	443:4:12629:12665	4821022	0	True				
ANR	4821085	EqualityExpression	"strcmp ( my_default_ip , my_sock_ip ) == 0"		4821022	0		==			
ANR	4821086	CallExpression	"strcmp ( my_default_ip , my_sock_ip )"		4821022	0					
ANR	4821087	Callee	strcmp		4821022	0					
ANR	4821088	Identifier	strcmp		4821022	0					
ANR	4821089	ArgumentList	my_default_ip		4821022	1					
ANR	4821090	Argument	my_default_ip		4821022	0					
ANR	4821091	Identifier	my_default_ip		4821022	0					
ANR	4821092	Argument	my_sock_ip		4821022	1					
ANR	4821093	Identifier	my_sock_ip		4821022	0					
ANR	4821094	PrimaryExpression	0		4821022	1					
ANR	4821095	CompoundStatement		17:43:324:324	4821022	1					
ANR	4821096	ReturnStatement	return ;	444:2:12672:12678	4821022	0	True				
ANR	4821097	IdentifierDeclStatement	condor_sockaddr sock_addr ;	446:1:12684:12709	4821022	7	True				
ANR	4821098	IdentifierDecl	sock_addr		4821022	0					
ANR	4821099	IdentifierDeclType	condor_sockaddr		4821022	0					
ANR	4821100	Identifier	sock_addr		4821022	1					
ANR	4821101	IfStatement	if ( sock_addr . from_ip_string ( my_sock_ip ) && sock_addr . is_loopback ( ) )		4821022	8					
ANR	4821102	Condition	sock_addr . from_ip_string ( my_sock_ip ) && sock_addr . is_loopback ( )	448:5:12757:12819	4821022	0	True				
ANR	4821103	AndExpression	sock_addr . from_ip_string ( my_sock_ip ) && sock_addr . is_loopback ( )		4821022	0		&&			
ANR	4821104	CallExpression	sock_addr . from_ip_string ( my_sock_ip )		4821022	0					
ANR	4821105	Callee	sock_addr . from_ip_string		4821022	0					
ANR	4821106	MemberAccess	sock_addr . from_ip_string		4821022	0					
ANR	4821107	Identifier	sock_addr		4821022	0					
ANR	4821108	Identifier	from_ip_string		4821022	1					
ANR	4821109	ArgumentList	my_sock_ip		4821022	1					
ANR	4821110	Argument	my_sock_ip		4821022	0					
ANR	4821111	Identifier	my_sock_ip		4821022	0					
ANR	4821112	CallExpression	sock_addr . is_loopback ( )		4821022	1					
ANR	4821113	Callee	sock_addr . is_loopback		4821022	0					
ANR	4821114	MemberAccess	sock_addr . is_loopback		4821022	0					
ANR	4821115	Identifier	sock_addr		4821022	0					
ANR	4821116	Identifier	is_loopback		4821022	1					
ANR	4821117	ArgumentList			4821022	1					
ANR	4821118	CompoundStatement		22:70:478:478	4821022	1					
ANR	4821119	ReturnStatement	return ;	453:2:13055:13061	4821022	0	True				
ANR	4821120	IfStatement	if ( ! IPMatchesNetworkInterfaceSetting ( my_sock_ip ) )		4821022	9					
ANR	4821121	Condition	! IPMatchesNetworkInterfaceSetting ( my_sock_ip )	455:5:13071:13115	4821022	0	True				
ANR	4821122	UnaryOperationExpression	! IPMatchesNetworkInterfaceSetting ( my_sock_ip )		4821022	0					
ANR	4821123	UnaryOperator	!		4821022	0					
ANR	4821124	CallExpression	IPMatchesNetworkInterfaceSetting ( my_sock_ip )		4821022	1					
ANR	4821125	Callee	IPMatchesNetworkInterfaceSetting		4821022	0					
ANR	4821126	Identifier	IPMatchesNetworkInterfaceSetting		4821022	0					
ANR	4821127	ArgumentList	my_sock_ip		4821022	1					
ANR	4821128	Argument	my_sock_ip		4821022	0					
ANR	4821129	Identifier	my_sock_ip		4821022	0					
ANR	4821130	CompoundStatement		29:53:775:775	4821022	1					
ANR	4821131	ReturnStatement	return ;	456:2:13123:13129	4821022	0	True				
ANR	4821132	IdentifierDeclStatement	"char const * ref = strstr ( old_expr_string , my_default_ip ) ;"	459:1:13136:13191	4821022	10	True				
ANR	4821133	IdentifierDecl	"* ref = strstr ( old_expr_string , my_default_ip )"		4821022	0					
ANR	4821134	IdentifierDeclType	char const *		4821022	0					
ANR	4821135	Identifier	ref		4821022	1					
ANR	4821136	AssignmentExpression	"* ref = strstr ( old_expr_string , my_default_ip )"		4821022	2		=			
ANR	4821137	Identifier	ref		4821022	0					
ANR	4821138	CallExpression	"strstr ( old_expr_string , my_default_ip )"		4821022	1					
ANR	4821139	Callee	strstr		4821022	0					
ANR	4821140	Identifier	strstr		4821022	0					
ANR	4821141	ArgumentList	old_expr_string		4821022	1					
ANR	4821142	Argument	old_expr_string		4821022	0					
ANR	4821143	Identifier	old_expr_string		4821022	0					
ANR	4821144	Argument	my_default_ip		4821022	1					
ANR	4821145	Identifier	my_default_ip		4821022	0					
ANR	4821146	IfStatement	if ( ref )		4821022	11					
ANR	4821147	Condition	ref	460:4:13197:13199	4821022	0	True				
ANR	4821148	Identifier	ref		4821022	0					
ANR	4821149	CompoundStatement		34:9:858:858	4821022	1					
ANR	4821150	IfStatement	if ( isdigit ( ref [ strlen ( my_default_ip ) ] ) )		4821022	0					
ANR	4821151	Condition	isdigit ( ref [ strlen ( my_default_ip ) ] )	464:6:13404:13438	4821022	0	True				
ANR	4821152	CallExpression	isdigit ( ref [ strlen ( my_default_ip ) ] )		4821022	0					
ANR	4821153	Callee	isdigit		4821022	0					
ANR	4821154	Identifier	isdigit		4821022	0					
ANR	4821155	ArgumentList	ref [ strlen ( my_default_ip ) ]		4821022	1					
ANR	4821156	Argument	ref [ strlen ( my_default_ip ) ]		4821022	0					
ANR	4821157	ArrayIndexing	ref [ strlen ( my_default_ip ) ]		4821022	0					
ANR	4821158	Identifier	ref		4821022	0					
ANR	4821159	CallExpression	strlen ( my_default_ip )		4821022	1					
ANR	4821160	Callee	strlen		4821022	0					
ANR	4821161	Identifier	strlen		4821022	0					
ANR	4821162	ArgumentList	my_default_ip		4821022	1					
ANR	4821163	Argument	my_default_ip		4821022	0					
ANR	4821164	Identifier	my_default_ip		4821022	0					
ANR	4821165	CompoundStatement		38:44:1098:1098	4821022	1					
ANR	4821166	ExpressionStatement	ref = NULL	465:3:13447:13457	4821022	0	True				
ANR	4821167	AssignmentExpression	ref = NULL		4821022	0		=			
ANR	4821168	Identifier	ref		4821022	0					
ANR	4821169	Identifier	NULL		4821022	1					
ANR	4821170	IfStatement	if ( ref )		4821022	12					
ANR	4821171	Condition	ref	468:4:13470:13472	4821022	0	True				
ANR	4821172	Identifier	ref		4821022	0					
ANR	4821173	CompoundStatement		47:2:1327:1366	4821022	1					
ANR	4821174	IdentifierDeclStatement	int pos = ref - old_expr_string ;	471:2:13560:13589	4821022	0	True				
ANR	4821175	IdentifierDecl	pos = ref - old_expr_string		4821022	0					
ANR	4821176	IdentifierDeclType	int		4821022	0					
ANR	4821177	Identifier	pos		4821022	1					
ANR	4821178	AssignmentExpression	pos = ref - old_expr_string		4821022	2		=			
ANR	4821179	Identifier	pos		4821022	0					
ANR	4821180	AdditiveExpression	ref - old_expr_string		4821022	1		-			
ANR	4821181	Identifier	ref		4821022	0					
ANR	4821182	Identifier	old_expr_string		4821022	1					
ANR	4821183	IdentifierDeclStatement	int my_default_ip_len = strlen ( my_default_ip ) ;	472:2:13622:13667	4821022	1	True				
ANR	4821184	IdentifierDecl	my_default_ip_len = strlen ( my_default_ip )		4821022	0					
ANR	4821185	IdentifierDeclType	int		4821022	0					
ANR	4821186	Identifier	my_default_ip_len		4821022	1					
ANR	4821187	AssignmentExpression	my_default_ip_len = strlen ( my_default_ip )		4821022	2		=			
ANR	4821188	Identifier	my_default_ip_len		4821022	0					
ANR	4821189	CallExpression	strlen ( my_default_ip )		4821022	1					
ANR	4821190	Callee	strlen		4821022	0					
ANR	4821191	Identifier	strlen		4821022	0					
ANR	4821192	ArgumentList	my_default_ip		4821022	1					
ANR	4821193	Argument	my_default_ip		4821022	0					
ANR	4821194	Identifier	my_default_ip		4821022	0					
ANR	4821195	IdentifierDeclStatement	int my_sock_ip_len = strlen ( my_sock_ip ) ;	473:2:13671:13710	4821022	2	True				
ANR	4821196	IdentifierDecl	my_sock_ip_len = strlen ( my_sock_ip )		4821022	0					
ANR	4821197	IdentifierDeclType	int		4821022	0					
ANR	4821198	Identifier	my_sock_ip_len		4821022	1					
ANR	4821199	AssignmentExpression	my_sock_ip_len = strlen ( my_sock_ip )		4821022	2		=			
ANR	4821200	Identifier	my_sock_ip_len		4821022	0					
ANR	4821201	CallExpression	strlen ( my_sock_ip )		4821022	1					
ANR	4821202	Callee	strlen		4821022	0					
ANR	4821203	Identifier	strlen		4821022	0					
ANR	4821204	ArgumentList	my_sock_ip		4821022	1					
ANR	4821205	Argument	my_sock_ip		4821022	0					
ANR	4821206	Identifier	my_sock_ip		4821022	0					
ANR	4821207	ExpressionStatement	* new_expr_string = ( char * ) malloc ( strlen ( old_expr_string ) + my_sock_ip_len - my_default_ip_len + 1 )	475:2:13715:13814	4821022	3	True				
ANR	4821208	AssignmentExpression	* new_expr_string = ( char * ) malloc ( strlen ( old_expr_string ) + my_sock_ip_len - my_default_ip_len + 1 )		4821022	0		=			
ANR	4821209	UnaryOperationExpression	* new_expr_string		4821022	0					
ANR	4821210	UnaryOperator	*		4821022	0					
ANR	4821211	Identifier	new_expr_string		4821022	1					
ANR	4821212	CastExpression	( char * ) malloc ( strlen ( old_expr_string ) + my_sock_ip_len - my_default_ip_len + 1 )		4821022	1					
ANR	4821213	CastTarget	char *		4821022	0					
ANR	4821214	CallExpression	malloc ( strlen ( old_expr_string ) + my_sock_ip_len - my_default_ip_len + 1 )		4821022	1					
ANR	4821215	Callee	malloc		4821022	0					
ANR	4821216	Identifier	malloc		4821022	0					
ANR	4821217	ArgumentList	strlen ( old_expr_string ) + my_sock_ip_len - my_default_ip_len + 1		4821022	1					
ANR	4821218	Argument	strlen ( old_expr_string ) + my_sock_ip_len - my_default_ip_len + 1		4821022	0					
ANR	4821219	AdditiveExpression	strlen ( old_expr_string ) + my_sock_ip_len - my_default_ip_len + 1		4821022	0		+			
ANR	4821220	CallExpression	strlen ( old_expr_string )		4821022	0					
ANR	4821221	Callee	strlen		4821022	0					
ANR	4821222	Identifier	strlen		4821022	0					
ANR	4821223	ArgumentList	old_expr_string		4821022	1					
ANR	4821224	Argument	old_expr_string		4821022	0					
ANR	4821225	Identifier	old_expr_string		4821022	0					
ANR	4821226	AdditiveExpression	my_sock_ip_len - my_default_ip_len + 1		4821022	1		-			
ANR	4821227	Identifier	my_sock_ip_len		4821022	0					
ANR	4821228	AdditiveExpression	my_default_ip_len + 1		4821022	1		+			
ANR	4821229	Identifier	my_default_ip_len		4821022	0					
ANR	4821230	PrimaryExpression	1		4821022	1					
ANR	4821231	ExpressionStatement	ASSERT ( * new_expr_string )	476:2:13818:13842	4821022	4	True				
ANR	4821232	CallExpression	ASSERT ( * new_expr_string )		4821022	0					
ANR	4821233	Callee	ASSERT		4821022	0					
ANR	4821234	Identifier	ASSERT		4821022	0					
ANR	4821235	ArgumentList	* new_expr_string		4821022	1					
ANR	4821236	Argument	* new_expr_string		4821022	0					
ANR	4821237	UnaryOperationExpression	* new_expr_string		4821022	0					
ANR	4821238	UnaryOperator	*		4821022	0					
ANR	4821239	Identifier	new_expr_string		4821022	1					
ANR	4821240	ExpressionStatement	"strncpy ( * new_expr_string , old_expr_string , pos )"	478:2:13847:13893	4821022	5	True				
ANR	4821241	CallExpression	"strncpy ( * new_expr_string , old_expr_string , pos )"		4821022	0					
ANR	4821242	Callee	strncpy		4821022	0					
ANR	4821243	Identifier	strncpy		4821022	0					
ANR	4821244	ArgumentList	* new_expr_string		4821022	1					
ANR	4821245	Argument	* new_expr_string		4821022	0					
ANR	4821246	UnaryOperationExpression	* new_expr_string		4821022	0					
ANR	4821247	UnaryOperator	*		4821022	0					
ANR	4821248	Identifier	new_expr_string		4821022	1					
ANR	4821249	Argument	old_expr_string		4821022	1					
ANR	4821250	Identifier	old_expr_string		4821022	0					
ANR	4821251	Argument	pos		4821022	2					
ANR	4821252	Identifier	pos		4821022	0					
ANR	4821253	ExpressionStatement	"strcpy ( * new_expr_string + pos , my_sock_ip )"	479:2:13897:13937	4821022	6	True				
ANR	4821254	CallExpression	"strcpy ( * new_expr_string + pos , my_sock_ip )"		4821022	0					
ANR	4821255	Callee	strcpy		4821022	0					
ANR	4821256	Identifier	strcpy		4821022	0					
ANR	4821257	ArgumentList	* new_expr_string + pos		4821022	1					
ANR	4821258	Argument	* new_expr_string + pos		4821022	0					
ANR	4821259	AdditiveExpression	* new_expr_string + pos		4821022	0		+			
ANR	4821260	UnaryOperationExpression	* new_expr_string		4821022	0					
ANR	4821261	UnaryOperator	*		4821022	0					
ANR	4821262	Identifier	new_expr_string		4821022	1					
ANR	4821263	Identifier	pos		4821022	1					
ANR	4821264	Argument	my_sock_ip		4821022	1					
ANR	4821265	Identifier	my_sock_ip		4821022	0					
ANR	4821266	ExpressionStatement	"strcpy ( * new_expr_string + pos + my_sock_ip_len , old_expr_string + pos + my_default_ip_len )"	480:2:13941:14023	4821022	7	True				
ANR	4821267	CallExpression	"strcpy ( * new_expr_string + pos + my_sock_ip_len , old_expr_string + pos + my_default_ip_len )"		4821022	0					
ANR	4821268	Callee	strcpy		4821022	0					
ANR	4821269	Identifier	strcpy		4821022	0					
ANR	4821270	ArgumentList	* new_expr_string + pos + my_sock_ip_len		4821022	1					
ANR	4821271	Argument	* new_expr_string + pos + my_sock_ip_len		4821022	0					
ANR	4821272	AdditiveExpression	* new_expr_string + pos + my_sock_ip_len		4821022	0		+			
ANR	4821273	UnaryOperationExpression	* new_expr_string		4821022	0					
ANR	4821274	UnaryOperator	*		4821022	0					
ANR	4821275	Identifier	new_expr_string		4821022	1					
ANR	4821276	AdditiveExpression	pos + my_sock_ip_len		4821022	1		+			
ANR	4821277	Identifier	pos		4821022	0					
ANR	4821278	Identifier	my_sock_ip_len		4821022	1					
ANR	4821279	Argument	old_expr_string + pos + my_default_ip_len		4821022	1					
ANR	4821280	AdditiveExpression	old_expr_string + pos + my_default_ip_len		4821022	0		+			
ANR	4821281	Identifier	old_expr_string		4821022	0					
ANR	4821282	AdditiveExpression	pos + my_default_ip_len		4821022	1		+			
ANR	4821283	Identifier	pos		4821022	0					
ANR	4821284	Identifier	my_default_ip_len		4821022	1					
ANR	4821285	Statement	dprintf	482:2:14028:14034	4821022	8	True				
ANR	4821286	Statement	(	482:9:14035:14035	4821022	9	True				
ANR	4821287	Statement	D_NETWORK	482:10:14036:14044	4821022	10	True				
ANR	4821288	Statement	","	482:19:14045:14045	4821022	11	True				
ANR	4821289	Statement	"""Replaced default IP %s with connection IP %s """	482:20:14046:14092	4821022	12	True				
ANR	4821290	Statement	"""in outgoing ClassAd attribute %s.\\n"""	483:4:14098:14134	4821022	13	True				
ANR	4821291	Statement	","	483:41:14135:14135	4821022	14	True				
ANR	4821292	Statement	my_default_ip	484:4:14141:14153	4821022	15	True				
ANR	4821293	Statement	","	484:17:14154:14154	4821022	16	True				
ANR	4821294	Statement	my_sock_ip	484:18:14155:14164	4821022	17	True				
ANR	4821295	Statement	","	484:28:14165:14165	4821022	18	True				
ANR	4821296	Statement	attr_name	484:29:14166:14174	4821022	19	True				
ANR	4821297	Statement	)	484:38:14175:14175	4821022	20	True				
ANR	4821298	ExpressionStatement		484:39:14176:14176	4821022	21	True				
ANR	4821299	ReturnType	void		4821022	1					
ANR	4821300	Identifier	ConvertDefaultIPToSocketIP		4821022	2					
ANR	4821301	ParameterList	"char const * attr_name , char const * old_expr_string , char * * new_expr_string , Stream & s"		4821022	3					
ANR	4821302	Parameter	char const * attr_name	426:32:12259:12279	4821022	0	True				
ANR	4821303	ParameterType	char const *		4821022	0					
ANR	4821304	Identifier	attr_name		4821022	1					
ANR	4821305	Parameter	char const * old_expr_string	426:54:12281:12307	4821022	1	True				
ANR	4821306	ParameterType	char const *		4821022	0					
ANR	4821307	Identifier	old_expr_string		4821022	1					
ANR	4821308	Parameter	char * * new_expr_string	426:82:12309:12330	4821022	2	True				
ANR	4821309	ParameterType	char * *		4821022	0					
ANR	4821310	Identifier	new_expr_string		4821022	1					
ANR	4821311	Parameter	Stream & s	426:105:12332:12340	4821022	3	True				
ANR	4821312	ParameterType	Stream &		4821022	0					
ANR	4821313	Identifier	s		4821022	1					
ANR	4821314	CFGEntryNode	ENTRY		4821022		True				
ANR	4821315	CFGExitNode	EXIT		4821022		True				
ANR	4821316	Symbol	my_ip_string		4821022						
ANR	4821317	Symbol	my_sock_ip		4821022						
ANR	4821318	Symbol	my_default_ip		4821022						
ANR	4821319	Symbol	sock_addr . from_ip_string		4821022						
ANR	4821320	Symbol	my_default_ip_len		4821022						
ANR	4821321	Symbol	strlen		4821022						
ANR	4821322	Symbol	ref		4821022						
ANR	4821323	Symbol	pos		4821022						
ANR	4821324	Symbol	* new_expr_string		4821022						
ANR	4821325	Symbol	isdigit		4821022						
ANR	4821326	Symbol	strcmp		4821022						
ANR	4821327	Symbol	is_sender_ip_attr		4821022						
ANR	4821328	Symbol	malloc		4821022						
ANR	4821329	Symbol	NULL		4821022						
ANR	4821330	Symbol	sock_addr . is_loopback		4821022						
ANR	4821331	Symbol	my_sock_ip_len		4821022						
ANR	4821332	Symbol	sock_addr		4821022						
ANR	4821333	Symbol	attr_name		4821022						
ANR	4821334	Symbol	IPMatchesNetworkInterfaceSetting		4821022						
ANR	4821335	Symbol	enable_convert_default_IP_to_socket_IP		4821022						
ANR	4821336	Symbol	old_expr_string		4821022						
ANR	4821337	Symbol	s . my_ip_str		4821022						
ANR	4821338	Symbol	s		4821022						
ANR	4821339	Symbol	* strlen		4821022						
ANR	4821340	Symbol	strstr		4821022						
ANR	4821341	Symbol	new_expr_string		4821022						
ANR	4821342	Symbol	* ref		4821022						
ANR	4821343	Function	ConvertDefaultIPToSocketIP	488:0:14184:14537							
ANR	4821344	FunctionDef	"ConvertDefaultIPToSocketIP (char const * attr_name , char * * expr_string , Stream & s)"		4821343	0					
ANR	4821345	CompoundStatement		489:0:14268:14537	4821343	0					
ANR	4821346	IdentifierDeclStatement	char * new_expr_string = NULL ;	490:1:14271:14299	4821343	0	True				
ANR	4821347	IdentifierDecl	* new_expr_string = NULL		4821343	0					
ANR	4821348	IdentifierDeclType	char *		4821343	0					
ANR	4821349	Identifier	new_expr_string		4821343	1					
ANR	4821350	AssignmentExpression	* new_expr_string = NULL		4821343	2		=			
ANR	4821351	Identifier	NULL		4821343	0					
ANR	4821352	Identifier	NULL		4821343	1					
ANR	4821353	ExpressionStatement	"ConvertDefaultIPToSocketIP ( attr_name , * expr_string , & new_expr_string , s )"	491:1:14302:14371	4821343	1	True				
ANR	4821354	CallExpression	"ConvertDefaultIPToSocketIP ( attr_name , * expr_string , & new_expr_string , s )"		4821343	0					
ANR	4821355	Callee	ConvertDefaultIPToSocketIP		4821343	0					
ANR	4821356	Identifier	ConvertDefaultIPToSocketIP		4821343	0					
ANR	4821357	ArgumentList	attr_name		4821343	1					
ANR	4821358	Argument	attr_name		4821343	0					
ANR	4821359	Identifier	attr_name		4821343	0					
ANR	4821360	Argument	* expr_string		4821343	1					
ANR	4821361	UnaryOperationExpression	* expr_string		4821343	0					
ANR	4821362	UnaryOperator	*		4821343	0					
ANR	4821363	Identifier	expr_string		4821343	1					
ANR	4821364	Argument	& new_expr_string		4821343	2					
ANR	4821365	UnaryOperationExpression	& new_expr_string		4821343	0					
ANR	4821366	UnaryOperator	&		4821343	0					
ANR	4821367	Identifier	new_expr_string		4821343	1					
ANR	4821368	Argument	s		4821343	3					
ANR	4821369	Identifier	s		4821343	0					
ANR	4821370	IfStatement	if ( new_expr_string )		4821343	2					
ANR	4821371	Condition	new_expr_string	492:4:14377:14391	4821343	0	True				
ANR	4821372	Identifier	new_expr_string		4821343	0					
ANR	4821373	CompoundStatement		4:21:125:125	4821343	1					
ANR	4821374	ExpressionStatement	free ( * expr_string )	495:2:14480:14498	4821343	0	True				
ANR	4821375	CallExpression	free ( * expr_string )		4821343	0					
ANR	4821376	Callee	free		4821343	0					
ANR	4821377	Identifier	free		4821343	0					
ANR	4821378	ArgumentList	* expr_string		4821343	1					
ANR	4821379	Argument	* expr_string		4821343	0					
ANR	4821380	UnaryOperationExpression	* expr_string		4821343	0					
ANR	4821381	UnaryOperator	*		4821343	0					
ANR	4821382	Identifier	expr_string		4821343	1					
ANR	4821383	ExpressionStatement	* expr_string = new_expr_string	496:2:14502:14532	4821343	1	True				
ANR	4821384	AssignmentExpression	* expr_string = new_expr_string		4821343	0		=			
ANR	4821385	UnaryOperationExpression	* expr_string		4821343	0					
ANR	4821386	UnaryOperator	*		4821343	0					
ANR	4821387	Identifier	expr_string		4821343	1					
ANR	4821388	Identifier	new_expr_string		4821343	1					
ANR	4821389	ReturnType	void		4821343	1					
ANR	4821390	Identifier	ConvertDefaultIPToSocketIP		4821343	2					
ANR	4821391	ParameterList	"char const * attr_name , char * * expr_string , Stream & s"		4821343	3					
ANR	4821392	Parameter	char const * attr_name	488:32:14216:14236	4821343	0	True				
ANR	4821393	ParameterType	char const *		4821343	0					
ANR	4821394	Identifier	attr_name		4821343	1					
ANR	4821395	Parameter	char * * expr_string	488:54:14238:14255	4821343	1	True				
ANR	4821396	ParameterType	char * *		4821343	0					
ANR	4821397	Identifier	expr_string		4821343	1					
ANR	4821398	Parameter	Stream & s	488:73:14257:14265	4821343	2	True				
ANR	4821399	ParameterType	Stream &		4821343	0					
ANR	4821400	Identifier	s		4821343	1					
ANR	4821401	CFGEntryNode	ENTRY		4821343		True				
ANR	4821402	CFGExitNode	EXIT		4821343		True				
ANR	4821403	Symbol	& new_expr_string		4821343						
ANR	4821404	Symbol	* expr_string		4821343						
ANR	4821405	Symbol	s		4821343						
ANR	4821406	Symbol	NULL		4821343						
ANR	4821407	Symbol	attr_name		4821343						
ANR	4821408	Symbol	expr_string		4821343						
ANR	4821409	Symbol	new_expr_string		4821343						
ANR	4821410	Function	ConvertDefaultIPToSocketIP	500:0:14540:14908							
ANR	4821411	FunctionDef	"ConvertDefaultIPToSocketIP (char const * attr_name , std :: string & expr_string , Stream & s)"		4821410	0					
ANR	4821412	CompoundStatement		501:0:14630:14908	4821410	0					
ANR	4821413	IdentifierDeclStatement	char * new_expr_string = NULL ;	502:1:14633:14661	4821410	0	True				
ANR	4821414	IdentifierDecl	* new_expr_string = NULL		4821410	0					
ANR	4821415	IdentifierDeclType	char *		4821410	0					
ANR	4821416	Identifier	new_expr_string		4821410	1					
ANR	4821417	AssignmentExpression	* new_expr_string = NULL		4821410	2		=			
ANR	4821418	Identifier	NULL		4821410	0					
ANR	4821419	Identifier	NULL		4821410	1					
ANR	4821420	ExpressionStatement	"ConvertDefaultIPToSocketIP ( attr_name , expr_string . c_str ( ) , & new_expr_string , s )"	503:1:14664:14740	4821410	1	True				
ANR	4821421	CallExpression	"ConvertDefaultIPToSocketIP ( attr_name , expr_string . c_str ( ) , & new_expr_string , s )"		4821410	0					
ANR	4821422	Callee	ConvertDefaultIPToSocketIP		4821410	0					
ANR	4821423	Identifier	ConvertDefaultIPToSocketIP		4821410	0					
ANR	4821424	ArgumentList	attr_name		4821410	1					
ANR	4821425	Argument	attr_name		4821410	0					
ANR	4821426	Identifier	attr_name		4821410	0					
ANR	4821427	Argument	expr_string . c_str ( )		4821410	1					
ANR	4821428	CallExpression	expr_string . c_str ( )		4821410	0					
ANR	4821429	Callee	expr_string . c_str		4821410	0					
ANR	4821430	MemberAccess	expr_string . c_str		4821410	0					
ANR	4821431	Identifier	expr_string		4821410	0					
ANR	4821432	Identifier	c_str		4821410	1					
ANR	4821433	ArgumentList			4821410	1					
ANR	4821434	Argument	& new_expr_string		4821410	2					
ANR	4821435	UnaryOperationExpression	& new_expr_string		4821410	0					
ANR	4821436	UnaryOperator	&		4821410	0					
ANR	4821437	Identifier	new_expr_string		4821410	1					
ANR	4821438	Argument	s		4821410	3					
ANR	4821439	Identifier	s		4821410	0					
ANR	4821440	IfStatement	if ( new_expr_string )		4821410	2					
ANR	4821441	Condition	new_expr_string	504:4:14746:14760	4821410	0	True				
ANR	4821442	Identifier	new_expr_string		4821410	0					
ANR	4821443	CompoundStatement		4:21:132:132	4821410	1					
ANR	4821444	ExpressionStatement	expr_string = new_expr_string	507:2:14849:14878	4821410	0	True				
ANR	4821445	AssignmentExpression	expr_string = new_expr_string		4821410	0		=			
ANR	4821446	Identifier	expr_string		4821410	0					
ANR	4821447	Identifier	new_expr_string		4821410	1					
ANR	4821448	ExpressionStatement	free ( new_expr_string )	508:2:14882:14903	4821410	1	True				
ANR	4821449	CallExpression	free ( new_expr_string )		4821410	0					
ANR	4821450	Callee	free		4821410	0					
ANR	4821451	Identifier	free		4821410	0					
ANR	4821452	ArgumentList	new_expr_string		4821410	1					
ANR	4821453	Argument	new_expr_string		4821410	0					
ANR	4821454	Identifier	new_expr_string		4821410	0					
ANR	4821455	ReturnType	void		4821410	1					
ANR	4821456	Identifier	ConvertDefaultIPToSocketIP		4821410	2					
ANR	4821457	ParameterList	"char const * attr_name , std :: string & expr_string , Stream & s"		4821410	3					
ANR	4821458	Parameter	char const * attr_name	500:32:14572:14592	4821410	0	True				
ANR	4821459	ParameterType	char const *		4821410	0					
ANR	4821460	Identifier	attr_name		4821410	1					
ANR	4821461	Parameter	std :: string & expr_string	500:54:14594:14617	4821410	1	True				
ANR	4821462	ParameterType	std :: string &		4821410	0					
ANR	4821463	Identifier	expr_string		4821410	1					
ANR	4821464	Parameter	Stream & s	500:79:14619:14627	4821410	2	True				
ANR	4821465	ParameterType	Stream &		4821410	0					
ANR	4821466	Identifier	s		4821410	1					
ANR	4821467	CFGEntryNode	ENTRY		4821410		True				
ANR	4821468	CFGExitNode	EXIT		4821410		True				
ANR	4821469	Symbol	& new_expr_string		4821410						
ANR	4821470	Symbol	s		4821410						
ANR	4821471	Symbol	NULL		4821410						
ANR	4821472	Symbol	expr_string . c_str		4821410						
ANR	4821473	Symbol	attr_name		4821410						
ANR	4821474	Symbol	expr_string		4821410						
ANR	4821475	Symbol	new_expr_string		4821410						
