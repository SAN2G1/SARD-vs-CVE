command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3007009	File	data/converged/CVE-2011-4930_htcondor/src_condor_daemon_client_dc_lease_manager_lease.cpp								
ANR	3007010	Function	DCLeaseManagerLease :: DCLeaseManagerLease	35:1:1154:1445							
ANR	3007011	FunctionDef	DCLeaseManagerLease :: DCLeaseManagerLease (time_t now)		3007010	0					
ANR	3007012	CompoundStatement		40:0:1308:1445	3007010	0					
ANR	3007013	ExpressionStatement	m_lease_ad = NULL	41:1:1311:1328	3007010	0	True				
ANR	3007014	AssignmentExpression	m_lease_ad = NULL		3007010	0		=			
ANR	3007015	Identifier	m_lease_ad		3007010	0					
ANR	3007016	Identifier	NULL		3007010	1					
ANR	3007017	ExpressionStatement	m_lease_duration = 0	42:1:1331:1351	3007010	1	True				
ANR	3007018	AssignmentExpression	m_lease_duration = 0		3007010	0		=			
ANR	3007019	Identifier	m_lease_duration		3007010	0					
ANR	3007020	PrimaryExpression	0		3007010	1					
ANR	3007021	ExpressionStatement	m_release_lease_when_done = true	43:1:1354:1386	3007010	2	True				
ANR	3007022	AssignmentExpression	m_release_lease_when_done = true		3007010	0		=			
ANR	3007023	Identifier	m_release_lease_when_done		3007010	0					
ANR	3007024	Identifier	true		3007010	1					
ANR	3007025	ExpressionStatement	m_mark = false	44:1:1389:1403	3007010	3	True				
ANR	3007026	AssignmentExpression	m_mark = false		3007010	0		=			
ANR	3007027	Identifier	m_mark		3007010	0					
ANR	3007028	Identifier	false		3007010	1					
ANR	3007029	ExpressionStatement	m_dead = false	45:1:1406:1420	3007010	4	True				
ANR	3007030	AssignmentExpression	m_dead = false		3007010	0		=			
ANR	3007031	Identifier	m_dead		3007010	0					
ANR	3007032	Identifier	false		3007010	1					
ANR	3007033	ExpressionStatement	setLeaseStart ( now )	46:1:1423:1443	3007010	5	True				
ANR	3007034	CallExpression	setLeaseStart ( now )		3007010	0					
ANR	3007035	Callee	setLeaseStart		3007010	0					
ANR	3007036	Identifier	setLeaseStart		3007010	0					
ANR	3007037	ArgumentList	now		3007010	1					
ANR	3007038	Argument	now		3007010	0					
ANR	3007039	Identifier	now		3007010	0					
ANR	3007040	ReturnType	include < stdio . h >		3007010	1					
ANR	3007041	Identifier	DCLeaseManagerLease :: DCLeaseManagerLease		3007010	2					
ANR	3007042	ParameterList	time_t now		3007010	3					
ANR	3007043	Parameter	time_t now	39:42:1295:1304	3007010	0	True				
ANR	3007044	ParameterType	time_t		3007010	0					
ANR	3007045	Identifier	now		3007010	1					
ANR	3007046	CFGEntryNode	ENTRY		3007010		True				
ANR	3007047	CFGExitNode	EXIT		3007010		True				
ANR	3007048	Symbol	m_lease_ad		3007010						
ANR	3007049	Symbol	m_lease_duration		3007010						
ANR	3007050	Symbol	m_release_lease_when_done		3007010						
ANR	3007051	Symbol	m_mark		3007010						
ANR	3007052	Symbol	NULL		3007010						
ANR	3007053	Symbol	now		3007010						
ANR	3007054	Symbol	true		3007010						
ANR	3007055	Symbol	false		3007010						
ANR	3007056	Symbol	m_dead		3007010						
ANR	3007057	Function	DCLeaseManagerLease :: DCLeaseManagerLease	49:0:1448:1884							
ANR	3007058	FunctionDef	"DCLeaseManagerLease :: DCLeaseManagerLease (const DCLeaseManagerLease & lease , time_t now)"		3007057	0					
ANR	3007059	CompoundStatement		51:0:1549:1884	3007057	0					
ANR	3007060	ExpressionStatement	m_mark = false	52:1:1552:1566	3007057	0	True				
ANR	3007061	AssignmentExpression	m_mark = false		3007057	0		=			
ANR	3007062	Identifier	m_mark		3007057	0					
ANR	3007063	Identifier	false		3007057	1					
ANR	3007064	ExpressionStatement	m_dead = false	53:1:1569:1583	3007057	1	True				
ANR	3007065	AssignmentExpression	m_dead = false		3007057	0		=			
ANR	3007066	Identifier	m_dead		3007057	0					
ANR	3007067	Identifier	false		3007057	1					
ANR	3007068	IfStatement	if ( lease . leaseAd ( ) )		3007057	2					
ANR	3007069	Condition	lease . leaseAd ( )	54:6:1591:1606	3007057	0	True				
ANR	3007070	CallExpression	lease . leaseAd ( )		3007057	0					
ANR	3007071	Callee	lease . leaseAd		3007057	0					
ANR	3007072	MemberAccess	lease . leaseAd		3007057	0					
ANR	3007073	Identifier	lease		3007057	0					
ANR	3007074	Identifier	leaseAd		3007057	1					
ANR	3007075	ArgumentList			3007057	1					
ANR	3007076	CompoundStatement		4:25:60:60	3007057	1					
ANR	3007077	ExpressionStatement	this -> m_lease_ad = new classad :: ClassAd ( * ( lease . leaseAd ( ) ) )	55:2:1614:1676	3007057	0	True				
ANR	3007078	AssignmentExpression	this -> m_lease_ad = new classad :: ClassAd ( * ( lease . leaseAd ( ) ) )		3007057	0		=			
ANR	3007079	PtrMemberAccess	this -> m_lease_ad		3007057	0					
ANR	3007080	Identifier	this		3007057	0					
ANR	3007081	Identifier	m_lease_ad		3007057	1					
ANR	3007082	UnaryOperationExpression	* ( lease . leaseAd ( ) )		3007057	1					
ANR	3007083	UnaryOperator	*		3007057	0					
ANR	3007084	CallExpression	lease . leaseAd ( )		3007057	1					
ANR	3007085	Callee	lease . leaseAd		3007057	0					
ANR	3007086	MemberAccess	lease . leaseAd		3007057	0					
ANR	3007087	Identifier	lease		3007057	0					
ANR	3007088	Identifier	leaseAd		3007057	1					
ANR	3007089	ArgumentList			3007057	1					
ANR	3007090	ElseStatement	else		3007057	0					
ANR	3007091	CompoundStatement		6:8:136:136	3007057	0					
ANR	3007092	ExpressionStatement	this -> m_lease_ad = NULL	57:2:1690:1713	3007057	0	True				
ANR	3007093	AssignmentExpression	this -> m_lease_ad = NULL		3007057	0		=			
ANR	3007094	PtrMemberAccess	this -> m_lease_ad		3007057	0					
ANR	3007095	Identifier	this		3007057	0					
ANR	3007096	Identifier	m_lease_ad		3007057	1					
ANR	3007097	Identifier	NULL		3007057	1					
ANR	3007098	ExpressionStatement	setLeaseId ( lease . leaseId ( ) )	59:1:1719:1748	3007057	3	True				
ANR	3007099	CallExpression	setLeaseId ( lease . leaseId ( ) )		3007057	0					
ANR	3007100	Callee	setLeaseId		3007057	0					
ANR	3007101	Identifier	setLeaseId		3007057	0					
ANR	3007102	ArgumentList	lease . leaseId ( )		3007057	1					
ANR	3007103	Argument	lease . leaseId ( )		3007057	0					
ANR	3007104	CallExpression	lease . leaseId ( )		3007057	0					
ANR	3007105	Callee	lease . leaseId		3007057	0					
ANR	3007106	MemberAccess	lease . leaseId		3007057	0					
ANR	3007107	Identifier	lease		3007057	0					
ANR	3007108	Identifier	leaseId		3007057	1					
ANR	3007109	ArgumentList			3007057	1					
ANR	3007110	ExpressionStatement	setLeaseDuration ( lease . leaseDuration ( ) )	60:1:1751:1793	3007057	4	True				
ANR	3007111	CallExpression	setLeaseDuration ( lease . leaseDuration ( ) )		3007057	0					
ANR	3007112	Callee	setLeaseDuration		3007057	0					
ANR	3007113	Identifier	setLeaseDuration		3007057	0					
ANR	3007114	ArgumentList	lease . leaseDuration ( )		3007057	1					
ANR	3007115	Argument	lease . leaseDuration ( )		3007057	0					
ANR	3007116	CallExpression	lease . leaseDuration ( )		3007057	0					
ANR	3007117	Callee	lease . leaseDuration		3007057	0					
ANR	3007118	MemberAccess	lease . leaseDuration		3007057	0					
ANR	3007119	Identifier	lease		3007057	0					
ANR	3007120	Identifier	leaseDuration		3007057	1					
ANR	3007121	ArgumentList			3007057	1					
ANR	3007122	ExpressionStatement	this -> m_release_lease_when_done = lease . releaseLeaseWhenDone ( )	61:1:1796:1859	3007057	5	True				
ANR	3007123	AssignmentExpression	this -> m_release_lease_when_done = lease . releaseLeaseWhenDone ( )		3007057	0		=			
ANR	3007124	PtrMemberAccess	this -> m_release_lease_when_done		3007057	0					
ANR	3007125	Identifier	this		3007057	0					
ANR	3007126	Identifier	m_release_lease_when_done		3007057	1					
ANR	3007127	CallExpression	lease . releaseLeaseWhenDone ( )		3007057	1					
ANR	3007128	Callee	lease . releaseLeaseWhenDone		3007057	0					
ANR	3007129	MemberAccess	lease . releaseLeaseWhenDone		3007057	0					
ANR	3007130	Identifier	lease		3007057	0					
ANR	3007131	Identifier	releaseLeaseWhenDone		3007057	1					
ANR	3007132	ArgumentList			3007057	1					
ANR	3007133	ExpressionStatement	setLeaseStart ( now )	62:1:1862:1882	3007057	6	True				
ANR	3007134	CallExpression	setLeaseStart ( now )		3007057	0					
ANR	3007135	Callee	setLeaseStart		3007057	0					
ANR	3007136	Identifier	setLeaseStart		3007057	0					
ANR	3007137	ArgumentList	now		3007057	1					
ANR	3007138	Argument	now		3007057	0					
ANR	3007139	Identifier	now		3007057	0					
ANR	3007140	Identifier	DCLeaseManagerLease :: DCLeaseManagerLease		3007057	1					
ANR	3007141	ParameterList	"const DCLeaseManagerLease & lease , time_t now"		3007057	2					
ANR	3007142	Parameter	const DCLeaseManagerLease & lease	49:42:1490:1521	3007057	0	True				
ANR	3007143	ParameterType	const DCLeaseManagerLease &		3007057	0					
ANR	3007144	Identifier	lease		3007057	1					
ANR	3007145	Parameter	time_t now	50:12:1536:1545	3007057	1	True				
ANR	3007146	ParameterType	time_t		3007057	0					
ANR	3007147	Identifier	now		3007057	1					
ANR	3007148	CFGEntryNode	ENTRY		3007057		True				
ANR	3007149	CFGExitNode	EXIT		3007057		True				
ANR	3007150	Symbol	lease . leaseAd		3007057						
ANR	3007151	Symbol	this -> m_lease_ad		3007057						
ANR	3007152	Symbol	* ( lease . leaseAd ( ) )		3007057						
ANR	3007153	Symbol	NULL		3007057						
ANR	3007154	Symbol	* lease		3007057						
ANR	3007155	Symbol	false		3007057						
ANR	3007156	Symbol	this		3007057						
ANR	3007157	Symbol	this -> m_release_lease_when_done		3007057						
ANR	3007158	Symbol	* this		3007057						
ANR	3007159	Symbol	* lease . leaseAd		3007057						
ANR	3007160	Symbol	m_mark		3007057						
ANR	3007161	Symbol	lease . releaseLeaseWhenDone		3007057						
ANR	3007162	Symbol	lease . leaseDuration		3007057						
ANR	3007163	Symbol	now		3007057						
ANR	3007164	Symbol	lease . leaseId		3007057						
ANR	3007165	Symbol	lease		3007057						
ANR	3007166	Symbol	m_dead		3007057						
ANR	3007167	Function	DCLeaseManagerLease :: DCLeaseManagerLease	65:0:1887:2057							
ANR	3007168	FunctionDef	"DCLeaseManagerLease :: DCLeaseManagerLease (classad :: ClassAd * ad , time_t now)"		3007167	0					
ANR	3007169	CompoundStatement		69:0:1972:2057	3007167	0					
ANR	3007170	ExpressionStatement	m_mark = false	70:1:1975:1989	3007167	0	True				
ANR	3007171	AssignmentExpression	m_mark = false		3007167	0		=			
ANR	3007172	Identifier	m_mark		3007167	0					
ANR	3007173	Identifier	false		3007167	1					
ANR	3007174	ExpressionStatement	m_dead = false	71:1:1992:2006	3007167	1	True				
ANR	3007175	AssignmentExpression	m_dead = false		3007167	0		=			
ANR	3007176	Identifier	m_dead		3007167	0					
ANR	3007177	Identifier	false		3007167	1					
ANR	3007178	ExpressionStatement	m_lease_ad = NULL	72:1:2009:2026	3007167	2	True				
ANR	3007179	AssignmentExpression	m_lease_ad = NULL		3007167	0		=			
ANR	3007180	Identifier	m_lease_ad		3007167	0					
ANR	3007181	Identifier	NULL		3007167	1					
ANR	3007182	ExpressionStatement	"initFromClassAd ( ad , now )"	73:1:2029:2055	3007167	3	True				
ANR	3007183	CallExpression	"initFromClassAd ( ad , now )"		3007167	0					
ANR	3007184	Callee	initFromClassAd		3007167	0					
ANR	3007185	Identifier	initFromClassAd		3007167	0					
ANR	3007186	ArgumentList	ad		3007167	1					
ANR	3007187	Argument	ad		3007167	0					
ANR	3007188	Identifier	ad		3007167	0					
ANR	3007189	Argument	now		3007167	1					
ANR	3007190	Identifier	now		3007167	0					
ANR	3007191	Identifier	DCLeaseManagerLease :: DCLeaseManagerLease		3007167	1					
ANR	3007192	ParameterList	"classad :: ClassAd * ad , time_t now"		3007167	2					
ANR	3007193	Parameter	classad :: ClassAd * ad	66:1:1930:1950	3007167	0	True				
ANR	3007194	ParameterType	classad :: ClassAd *		3007167	0					
ANR	3007195	Identifier	ad		3007167	1					
ANR	3007196	Parameter	time_t now	67:1:1954:1967	3007167	1	True				
ANR	3007197	ParameterType	time_t		3007167	0					
ANR	3007198	Identifier	now		3007167	1					
ANR	3007199	CFGEntryNode	ENTRY		3007167		True				
ANR	3007200	CFGExitNode	EXIT		3007167		True				
ANR	3007201	Symbol	m_mark		3007167						
ANR	3007202	Symbol	m_lease_ad		3007167						
ANR	3007203	Symbol	ad		3007167						
ANR	3007204	Symbol	NULL		3007167						
ANR	3007205	Symbol	now		3007167						
ANR	3007206	Symbol	false		3007167						
ANR	3007207	Symbol	m_dead		3007167						
ANR	3007208	Function	DCLeaseManagerLease :: DCLeaseManagerLease	76:0:2060:2233							
ANR	3007209	FunctionDef	"DCLeaseManagerLease :: DCLeaseManagerLease (const classad :: ClassAd & ad , time_t now)"		3007208	0					
ANR	3007210	CompoundStatement		80:0:2148:2233	3007208	0					
ANR	3007211	ExpressionStatement	m_mark = false	81:1:2151:2165	3007208	0	True				
ANR	3007212	AssignmentExpression	m_mark = false		3007208	0		=			
ANR	3007213	Identifier	m_mark		3007208	0					
ANR	3007214	Identifier	false		3007208	1					
ANR	3007215	ExpressionStatement	m_dead = false	82:1:2168:2182	3007208	1	True				
ANR	3007216	AssignmentExpression	m_dead = false		3007208	0		=			
ANR	3007217	Identifier	m_dead		3007208	0					
ANR	3007218	Identifier	false		3007208	1					
ANR	3007219	ExpressionStatement	m_lease_ad = NULL	83:1:2185:2202	3007208	2	True				
ANR	3007220	AssignmentExpression	m_lease_ad = NULL		3007208	0		=			
ANR	3007221	Identifier	m_lease_ad		3007208	0					
ANR	3007222	Identifier	NULL		3007208	1					
ANR	3007223	ExpressionStatement	"initFromClassAd ( ad , now )"	84:1:2205:2231	3007208	3	True				
ANR	3007224	CallExpression	"initFromClassAd ( ad , now )"		3007208	0					
ANR	3007225	Callee	initFromClassAd		3007208	0					
ANR	3007226	Identifier	initFromClassAd		3007208	0					
ANR	3007227	ArgumentList	ad		3007208	1					
ANR	3007228	Argument	ad		3007208	0					
ANR	3007229	Identifier	ad		3007208	0					
ANR	3007230	Argument	now		3007208	1					
ANR	3007231	Identifier	now		3007208	0					
ANR	3007232	Identifier	DCLeaseManagerLease :: DCLeaseManagerLease		3007208	1					
ANR	3007233	ParameterList	"const classad :: ClassAd & ad , time_t now"		3007208	2					
ANR	3007234	Parameter	const classad :: ClassAd & ad	77:0:2102:2127	3007208	0	True				
ANR	3007235	ParameterType	const classad :: ClassAd &		3007208	0					
ANR	3007236	Identifier	ad		3007208	1					
ANR	3007237	Parameter	time_t now	78:1:2131:2143	3007208	1	True				
ANR	3007238	ParameterType	time_t		3007208	0					
ANR	3007239	Identifier	now		3007208	1					
ANR	3007240	CFGEntryNode	ENTRY		3007208		True				
ANR	3007241	CFGExitNode	EXIT		3007208		True				
ANR	3007242	Symbol	m_mark		3007208						
ANR	3007243	Symbol	m_lease_ad		3007208						
ANR	3007244	Symbol	ad		3007208						
ANR	3007245	Symbol	NULL		3007208						
ANR	3007246	Symbol	now		3007208						
ANR	3007247	Symbol	false		3007208						
ANR	3007248	Symbol	m_dead		3007208						
ANR	3007249	Function	DCLeaseManagerLease :: DCLeaseManagerLease	87:0:2236:2575							
ANR	3007250	FunctionDef	"DCLeaseManagerLease :: DCLeaseManagerLease (const string & lease_id , int lease_duration , bool release_when_done , time_t now)"		3007249	0					
ANR	3007251	CompoundStatement		92:0:2374:2575	3007249	0					
ANR	3007252	ExpressionStatement	m_mark = false	93:1:2377:2391	3007249	0	True				
ANR	3007253	AssignmentExpression	m_mark = false		3007249	0		=			
ANR	3007254	Identifier	m_mark		3007249	0					
ANR	3007255	Identifier	false		3007249	1					
ANR	3007256	ExpressionStatement	m_dead = false	94:1:2394:2408	3007249	1	True				
ANR	3007257	AssignmentExpression	m_dead = false		3007249	0		=			
ANR	3007258	Identifier	m_dead		3007249	0					
ANR	3007259	Identifier	false		3007249	1					
ANR	3007260	ExpressionStatement	this -> m_lease_ad = NULL	95:1:2411:2434	3007249	2	True				
ANR	3007261	AssignmentExpression	this -> m_lease_ad = NULL		3007249	0		=			
ANR	3007262	PtrMemberAccess	this -> m_lease_ad		3007249	0					
ANR	3007263	Identifier	this		3007249	0					
ANR	3007264	Identifier	m_lease_ad		3007249	1					
ANR	3007265	Identifier	NULL		3007249	1					
ANR	3007266	ExpressionStatement	setLeaseId ( lease_id )	96:1:2437:2459	3007249	3	True				
ANR	3007267	CallExpression	setLeaseId ( lease_id )		3007249	0					
ANR	3007268	Callee	setLeaseId		3007249	0					
ANR	3007269	Identifier	setLeaseId		3007249	0					
ANR	3007270	ArgumentList	lease_id		3007249	1					
ANR	3007271	Argument	lease_id		3007249	0					
ANR	3007272	Identifier	lease_id		3007249	0					
ANR	3007273	ExpressionStatement	setLeaseDuration ( lease_duration )	97:1:2462:2496	3007249	4	True				
ANR	3007274	CallExpression	setLeaseDuration ( lease_duration )		3007249	0					
ANR	3007275	Callee	setLeaseDuration		3007249	0					
ANR	3007276	Identifier	setLeaseDuration		3007249	0					
ANR	3007277	ArgumentList	lease_duration		3007249	1					
ANR	3007278	Argument	lease_duration		3007249	0					
ANR	3007279	Identifier	lease_duration		3007249	0					
ANR	3007280	ExpressionStatement	this -> m_release_lease_when_done = release_when_done	98:1:2499:2550	3007249	5	True				
ANR	3007281	AssignmentExpression	this -> m_release_lease_when_done = release_when_done		3007249	0		=			
ANR	3007282	PtrMemberAccess	this -> m_release_lease_when_done		3007249	0					
ANR	3007283	Identifier	this		3007249	0					
ANR	3007284	Identifier	m_release_lease_when_done		3007249	1					
ANR	3007285	Identifier	release_when_done		3007249	1					
ANR	3007286	ExpressionStatement	setLeaseStart ( now )	99:1:2553:2573	3007249	6	True				
ANR	3007287	CallExpression	setLeaseStart ( now )		3007249	0					
ANR	3007288	Callee	setLeaseStart		3007249	0					
ANR	3007289	Identifier	setLeaseStart		3007249	0					
ANR	3007290	ArgumentList	now		3007249	1					
ANR	3007291	Argument	now		3007249	0					
ANR	3007292	Identifier	now		3007249	0					
ANR	3007293	Identifier	DCLeaseManagerLease :: DCLeaseManagerLease		3007249	1					
ANR	3007294	ParameterList	"const string & lease_id , int lease_duration , bool release_when_done , time_t now"		3007249	2					
ANR	3007295	Parameter	const string & lease_id	88:1:2279:2301	3007249	0	True				
ANR	3007296	ParameterType	const string &		3007249	0					
ANR	3007297	Identifier	lease_id		3007249	1					
ANR	3007298	Parameter	int lease_duration	89:1:2305:2326	3007249	1	True				
ANR	3007299	ParameterType	int		3007249	0					
ANR	3007300	Identifier	lease_duration		3007249	1					
ANR	3007301	Parameter	bool release_when_done	90:1:2330:2354	3007249	2	True				
ANR	3007302	ParameterType	bool		3007249	0					
ANR	3007303	Identifier	release_when_done		3007249	1					
ANR	3007304	Parameter	time_t now	91:1:2358:2370	3007249	3	True				
ANR	3007305	ParameterType	time_t		3007249	0					
ANR	3007306	Identifier	now		3007249	1					
ANR	3007307	CFGEntryNode	ENTRY		3007249		True				
ANR	3007308	CFGExitNode	EXIT		3007249		True				
ANR	3007309	Symbol	release_when_done		3007249						
ANR	3007310	Symbol	this -> m_lease_ad		3007249						
ANR	3007311	Symbol	* this		3007249						
ANR	3007312	Symbol	m_mark		3007249						
ANR	3007313	Symbol	NULL		3007249						
ANR	3007314	Symbol	now		3007249						
ANR	3007315	Symbol	lease_duration		3007249						
ANR	3007316	Symbol	false		3007249						
ANR	3007317	Symbol	this		3007249						
ANR	3007318	Symbol	this -> m_release_lease_when_done		3007249						
ANR	3007319	Symbol	lease_id		3007249						
ANR	3007320	Symbol	m_dead		3007249						
ANR	3007321	Function	DCLeaseManagerLease :: ~DCLeaseManagerLease	102:0:2578:2675							
ANR	3007322	FunctionDef	DCLeaseManagerLease :: ~DCLeaseManagerLease ()		3007321	0					
ANR	3007323	CompoundStatement		103:0:2628:2675	3007321	0					
ANR	3007324	IfStatement	if ( m_lease_ad )		3007321	0					
ANR	3007325	Condition	m_lease_ad	104:6:2636:2645	3007321	0	True				
ANR	3007326	Identifier	m_lease_ad		3007321	0					
ANR	3007327	CompoundStatement		2:19:20:20	3007321	1					
ANR	3007328	Statement	delete	105:2:2653:2658	3007321	0	True				
ANR	3007329	ExpressionStatement	m_lease_ad	105:9:2660:2670	3007321	1	True				
ANR	3007330	Identifier	m_lease_ad		3007321	0					
ANR	3007331	Identifier	DCLeaseManagerLease :: ~DCLeaseManagerLease		3007321	1					
ANR	3007332	ParameterList			3007321	2					
ANR	3007333	CFGEntryNode	ENTRY		3007321		True				
ANR	3007334	CFGExitNode	EXIT		3007321		True				
ANR	3007335	Symbol	m_lease_ad		3007321						
ANR	3007336	Function	DCLeaseManagerLease :: setLeaseStart	109:0:2678:2811							
ANR	3007337	FunctionDef	DCLeaseManagerLease :: setLeaseStart (time_t now)		3007336	0					
ANR	3007338	CompoundStatement		111:0:2731:2811	3007336	0					
ANR	3007339	IfStatement	if ( ! now )		3007336	0					
ANR	3007340	Condition	! now	112:6:2739:2742	3007336	0	True				
ANR	3007341	UnaryOperationExpression	! now		3007336	0					
ANR	3007342	UnaryOperator	!		3007336	0					
ANR	3007343	Identifier	now		3007336	1					
ANR	3007344	CompoundStatement		2:13:14:14	3007336	1					
ANR	3007345	ExpressionStatement	now = time ( NULL )	113:2:2750:2768	3007336	0	True				
ANR	3007346	AssignmentExpression	now = time ( NULL )		3007336	0		=			
ANR	3007347	Identifier	now		3007336	0					
ANR	3007348	CallExpression	time ( NULL )		3007336	1					
ANR	3007349	Callee	time		3007336	0					
ANR	3007350	Identifier	time		3007336	0					
ANR	3007351	ArgumentList	NULL		3007336	1					
ANR	3007352	Argument	NULL		3007336	0					
ANR	3007353	Identifier	NULL		3007336	0					
ANR	3007354	ExpressionStatement	this -> m_lease_time = now	115:1:2774:2798	3007336	1	True				
ANR	3007355	AssignmentExpression	this -> m_lease_time = now		3007336	0		=			
ANR	3007356	PtrMemberAccess	this -> m_lease_time		3007336	0					
ANR	3007357	Identifier	this		3007336	0					
ANR	3007358	Identifier	m_lease_time		3007336	1					
ANR	3007359	Identifier	now		3007336	1					
ANR	3007360	ReturnStatement	return 0 ;	116:1:2801:2809	3007336	2	True				
ANR	3007361	PrimaryExpression	0		3007336	0					
ANR	3007362	ReturnType	int		3007336	1					
ANR	3007363	Identifier	DCLeaseManagerLease :: setLeaseStart		3007336	2					
ANR	3007364	ParameterList	time_t now		3007336	3					
ANR	3007365	Parameter	time_t now	110:36:2718:2727	3007336	0	True				
ANR	3007366	ParameterType	time_t		3007336	0					
ANR	3007367	Identifier	now		3007336	1					
ANR	3007368	CFGEntryNode	ENTRY		3007336		True				
ANR	3007369	CFGExitNode	EXIT		3007336		True				
ANR	3007370	Symbol	* this		3007336						
ANR	3007371	Symbol	NULL		3007336						
ANR	3007372	Symbol	now		3007336						
ANR	3007373	Symbol	this		3007336						
ANR	3007374	Symbol	time		3007336						
ANR	3007375	Symbol	this -> m_lease_time		3007336						
ANR	3007376	Function	DCLeaseManagerLease :: initFromClassAd	119:0:2814:2966							
ANR	3007377	FunctionDef	"DCLeaseManagerLease :: initFromClassAd (const classad :: ClassAd & ad , time_t now)"		3007376	0					
ANR	3007378	CompoundStatement		124:0:2904:2966	3007376	0					
ANR	3007379	ReturnStatement	"return initFromClassAd ( new classad :: ClassAd ( ad ) , now ) ;"	125:1:2907:2964	3007376	0	True				
ANR	3007380	CallExpression	"initFromClassAd ( new classad :: ClassAd ( ad ) , now )"		3007376	0					
ANR	3007381	Callee	initFromClassAd		3007376	0					
ANR	3007382	Identifier	initFromClassAd		3007376	0					
ANR	3007383	ArgumentList	ad		3007376	1					
ANR	3007384	Argument	ad		3007376	0					
ANR	3007385	Identifier	ad		3007376	0					
ANR	3007386	Argument	now		3007376	1					
ANR	3007387	Identifier	now		3007376	0					
ANR	3007388	ReturnType	int		3007376	1					
ANR	3007389	Identifier	DCLeaseManagerLease :: initFromClassAd		3007376	2					
ANR	3007390	ParameterList	"const classad :: ClassAd & ad , time_t now"		3007376	3					
ANR	3007391	Parameter	const classad :: ClassAd & ad	121:1:2857:2882	3007376	0	True				
ANR	3007392	ParameterType	const classad :: ClassAd &		3007376	0					
ANR	3007393	Identifier	ad		3007376	1					
ANR	3007394	Parameter	time_t now	122:1:2886:2899	3007376	1	True				
ANR	3007395	ParameterType	time_t		3007376	0					
ANR	3007396	Identifier	now		3007376	1					
ANR	3007397	CFGEntryNode	ENTRY		3007376		True				
ANR	3007398	CFGExitNode	EXIT		3007376		True				
ANR	3007399	Symbol	ad		3007376						
ANR	3007400	Symbol	now		3007376						
ANR	3007401	Symbol	initFromClassAd		3007376						
ANR	3007402	Function	DCLeaseManagerLease :: initFromClassAd	128:0:2969:3619							
ANR	3007403	FunctionDef	"DCLeaseManagerLease :: initFromClassAd (classad :: ClassAd * ad , time_t now)"		3007402	0					
ANR	3007404	CompoundStatement		133:0:3052:3619	3007402	0					
ANR	3007405	IdentifierDeclStatement	int status = 0 ;	134:1:3055:3070	3007402	0	True				
ANR	3007406	IdentifierDecl	status = 0		3007402	0					
ANR	3007407	IdentifierDeclType	int		3007402	0					
ANR	3007408	Identifier	status		3007402	1					
ANR	3007409	AssignmentExpression	status = 0		3007402	2		=			
ANR	3007410	Identifier	status		3007402	0					
ANR	3007411	PrimaryExpression	0		3007402	1					
ANR	3007412	IfStatement	if ( m_lease_ad && ( m_lease_ad != ad ) )		3007402	1					
ANR	3007413	Condition	m_lease_ad && ( m_lease_ad != ad )	135:6:3078:3110	3007402	0	True				
ANR	3007414	AndExpression	m_lease_ad && ( m_lease_ad != ad )		3007402	0		&&			
ANR	3007415	Identifier	m_lease_ad		3007402	0					
ANR	3007416	EqualityExpression	m_lease_ad != ad		3007402	1		!=			
ANR	3007417	Identifier	m_lease_ad		3007402	0					
ANR	3007418	Identifier	ad		3007402	1					
ANR	3007419	CompoundStatement		3:42:61:61	3007402	1					
ANR	3007420	Statement	delete	136:2:3118:3123	3007402	0	True				
ANR	3007421	ExpressionStatement	m_lease_ad	136:9:3125:3135	3007402	1	True				
ANR	3007422	Identifier	m_lease_ad		3007402	0					
ANR	3007423	ExpressionStatement	m_lease_ad = NULL	137:2:3139:3156	3007402	2	True				
ANR	3007424	AssignmentExpression	m_lease_ad = NULL		3007402	0		=			
ANR	3007425	Identifier	m_lease_ad		3007402	0					
ANR	3007426	Identifier	NULL		3007402	1					
ANR	3007427	IfStatement	if ( ! ad )		3007402	2					
ANR	3007428	Condition	! ad	139:6:3167:3169	3007402	0	True				
ANR	3007429	UnaryOperationExpression	! ad		3007402	0					
ANR	3007430	UnaryOperator	!		3007402	0					
ANR	3007431	Identifier	ad		3007402	1					
ANR	3007432	CompoundStatement		7:12:120:120	3007402	1					
ANR	3007433	ReturnStatement	return 0 ;	140:2:3177:3185	3007402	0	True				
ANR	3007434	PrimaryExpression	0		3007402	0					
ANR	3007435	ExpressionStatement	m_lease_ad = ad	143:1:3192:3207	3007402	3	True				
ANR	3007436	AssignmentExpression	m_lease_ad = ad		3007402	0		=			
ANR	3007437	Identifier	m_lease_ad		3007402	0					
ANR	3007438	Identifier	ad		3007402	1					
ANR	3007439	IfStatement	"if ( ! m_lease_ad -> EvaluateAttrString ( ""LeaseId"" , m_lease_id ) )"		3007402	4					
ANR	3007440	Condition	"! m_lease_ad -> EvaluateAttrString ( ""LeaseId"" , m_lease_id )"	144:6:3215:3270	3007402	0	True				
ANR	3007441	UnaryOperationExpression	"! m_lease_ad -> EvaluateAttrString ( ""LeaseId"" , m_lease_id )"		3007402	0					
ANR	3007442	UnaryOperator	!		3007402	0					
ANR	3007443	CallExpression	"m_lease_ad -> EvaluateAttrString ( ""LeaseId"" , m_lease_id )"		3007402	1					
ANR	3007444	Callee	m_lease_ad -> EvaluateAttrString		3007402	0					
ANR	3007445	PtrMemberAccess	m_lease_ad -> EvaluateAttrString		3007402	0					
ANR	3007446	Identifier	m_lease_ad		3007402	0					
ANR	3007447	Identifier	EvaluateAttrString		3007402	1					
ANR	3007448	ArgumentList	"""LeaseId"""		3007402	1					
ANR	3007449	Argument	"""LeaseId"""		3007402	0					
ANR	3007450	PrimaryExpression	"""LeaseId"""		3007402	0					
ANR	3007451	Argument	m_lease_id		3007402	1					
ANR	3007452	Identifier	m_lease_id		3007402	0					
ANR	3007453	CompoundStatement		12:65:221:221	3007402	1					
ANR	3007454	ExpressionStatement	status = 1	145:2:3278:3288	3007402	0	True				
ANR	3007455	AssignmentExpression	status = 1		3007402	0		=			
ANR	3007456	Identifier	status		3007402	0					
ANR	3007457	PrimaryExpression	1		3007402	1					
ANR	3007458	ExpressionStatement	"m_lease_id = """""	146:2:3292:3307	3007402	1	True				
ANR	3007459	AssignmentExpression	"m_lease_id = """""		3007402	0		=			
ANR	3007460	Identifier	m_lease_id		3007402	0					
ANR	3007461	PrimaryExpression	""""""		3007402	1					
ANR	3007462	IfStatement	"if ( ! m_lease_ad -> EvaluateAttrInt ( ""LeaseDuration"" , m_lease_duration ) )"		3007402	5					
ANR	3007463	Condition	"! m_lease_ad -> EvaluateAttrInt ( ""LeaseDuration"" , m_lease_duration )"	148:6:3318:3382	3007402	0	True				
ANR	3007464	UnaryOperationExpression	"! m_lease_ad -> EvaluateAttrInt ( ""LeaseDuration"" , m_lease_duration )"		3007402	0					
ANR	3007465	UnaryOperator	!		3007402	0					
ANR	3007466	CallExpression	"m_lease_ad -> EvaluateAttrInt ( ""LeaseDuration"" , m_lease_duration )"		3007402	1					
ANR	3007467	Callee	m_lease_ad -> EvaluateAttrInt		3007402	0					
ANR	3007468	PtrMemberAccess	m_lease_ad -> EvaluateAttrInt		3007402	0					
ANR	3007469	Identifier	m_lease_ad		3007402	0					
ANR	3007470	Identifier	EvaluateAttrInt		3007402	1					
ANR	3007471	ArgumentList	"""LeaseDuration"""		3007402	1					
ANR	3007472	Argument	"""LeaseDuration"""		3007402	0					
ANR	3007473	PrimaryExpression	"""LeaseDuration"""		3007402	0					
ANR	3007474	Argument	m_lease_duration		3007402	1					
ANR	3007475	Identifier	m_lease_duration		3007402	0					
ANR	3007476	CompoundStatement		16:74:333:333	3007402	1					
ANR	3007477	ExpressionStatement	status = 1	149:2:3390:3400	3007402	0	True				
ANR	3007478	AssignmentExpression	status = 1		3007402	0		=			
ANR	3007479	Identifier	status		3007402	0					
ANR	3007480	PrimaryExpression	1		3007402	1					
ANR	3007481	ExpressionStatement	m_lease_duration = 0	150:2:3404:3424	3007402	1	True				
ANR	3007482	AssignmentExpression	m_lease_duration = 0		3007402	0		=			
ANR	3007483	Identifier	m_lease_duration		3007402	0					
ANR	3007484	PrimaryExpression	0		3007402	1					
ANR	3007485	IfStatement	"if ( ! m_lease_ad -> EvaluateAttrBool ( ""ReleaseWhenDone"" , m_release_lease_when_done ) )"		3007402	6					
ANR	3007486	Condition	"! m_lease_ad -> EvaluateAttrBool ( ""ReleaseWhenDone"" , m_release_lease_when_done )"	152:6:3435:3521	3007402	0	True				
ANR	3007487	UnaryOperationExpression	"! m_lease_ad -> EvaluateAttrBool ( ""ReleaseWhenDone"" , m_release_lease_when_done )"		3007402	0					
ANR	3007488	UnaryOperator	!		3007402	0					
ANR	3007489	CallExpression	"m_lease_ad -> EvaluateAttrBool ( ""ReleaseWhenDone"" , m_release_lease_when_done )"		3007402	1					
ANR	3007490	Callee	m_lease_ad -> EvaluateAttrBool		3007402	0					
ANR	3007491	PtrMemberAccess	m_lease_ad -> EvaluateAttrBool		3007402	0					
ANR	3007492	Identifier	m_lease_ad		3007402	0					
ANR	3007493	Identifier	EvaluateAttrBool		3007402	1					
ANR	3007494	ArgumentList	"""ReleaseWhenDone"""		3007402	1					
ANR	3007495	Argument	"""ReleaseWhenDone"""		3007402	0					
ANR	3007496	PrimaryExpression	"""ReleaseWhenDone"""		3007402	0					
ANR	3007497	Argument	m_release_lease_when_done		3007402	1					
ANR	3007498	Identifier	m_release_lease_when_done		3007402	0					
ANR	3007499	CompoundStatement		21:40:472:472	3007402	1					
ANR	3007500	ExpressionStatement	status = 1	154:2:3529:3539	3007402	0	True				
ANR	3007501	AssignmentExpression	status = 1		3007402	0		=			
ANR	3007502	Identifier	status		3007402	0					
ANR	3007503	PrimaryExpression	1		3007402	1					
ANR	3007504	ExpressionStatement	m_release_lease_when_done = true	155:2:3543:3575	3007402	1	True				
ANR	3007505	AssignmentExpression	m_release_lease_when_done = true		3007402	0		=			
ANR	3007506	Identifier	m_release_lease_when_done		3007402	0					
ANR	3007507	Identifier	true		3007402	1					
ANR	3007508	ExpressionStatement	setLeaseStart ( now )	157:1:3581:3601	3007402	7	True				
ANR	3007509	CallExpression	setLeaseStart ( now )		3007402	0					
ANR	3007510	Callee	setLeaseStart		3007402	0					
ANR	3007511	Identifier	setLeaseStart		3007402	0					
ANR	3007512	ArgumentList	now		3007402	1					
ANR	3007513	Argument	now		3007402	0					
ANR	3007514	Identifier	now		3007402	0					
ANR	3007515	ReturnStatement	return status ;	158:1:3604:3617	3007402	8	True				
ANR	3007516	Identifier	status		3007402	0					
ANR	3007517	ReturnType	int		3007402	1					
ANR	3007518	Identifier	DCLeaseManagerLease :: initFromClassAd		3007402	2					
ANR	3007519	ParameterList	"classad :: ClassAd * ad , time_t now"		3007402	3					
ANR	3007520	Parameter	classad :: ClassAd * ad	130:1:3012:3031	3007402	0	True				
ANR	3007521	ParameterType	classad :: ClassAd *		3007402	0					
ANR	3007522	Identifier	ad		3007402	1					
ANR	3007523	Parameter	time_t now	131:1:3035:3047	3007402	1	True				
ANR	3007524	ParameterType	time_t		3007402	0					
ANR	3007525	Identifier	now		3007402	1					
ANR	3007526	CFGEntryNode	ENTRY		3007402		True				
ANR	3007527	CFGExitNode	EXIT		3007402		True				
ANR	3007528	Symbol	m_lease_ad -> EvaluateAttrString		3007402						
ANR	3007529	Symbol	m_lease_ad -> EvaluateAttrInt		3007402						
ANR	3007530	Symbol	m_release_lease_when_done		3007402						
ANR	3007531	Symbol	ad		3007402						
ANR	3007532	Symbol	NULL		3007402						
ANR	3007533	Symbol	m_lease_ad		3007402						
ANR	3007534	Symbol	m_lease_duration		3007402						
ANR	3007535	Symbol	* m_lease_ad		3007402						
ANR	3007536	Symbol	now		3007402						
ANR	3007537	Symbol	m_lease_ad -> EvaluateAttrBool		3007402						
ANR	3007538	Symbol	true		3007402						
ANR	3007539	Symbol	m_lease_id		3007402						
ANR	3007540	Symbol	status		3007402						
ANR	3007541	Function	DCLeaseManagerLease :: copyUpdates	161:0:3622:4468							
ANR	3007542	FunctionDef	DCLeaseManagerLease :: copyUpdates (const DCLeaseManagerLease & lease)		3007541	0					
ANR	3007543	CompoundStatement		163:0:3695:4468	3007541	0					
ANR	3007544	ExpressionStatement	setLeaseDuration ( lease . leaseDuration ( ) )	168:1:3755:3797	3007541	0	True				
ANR	3007545	CallExpression	setLeaseDuration ( lease . leaseDuration ( ) )		3007541	0					
ANR	3007546	Callee	setLeaseDuration		3007541	0					
ANR	3007547	Identifier	setLeaseDuration		3007541	0					
ANR	3007548	ArgumentList	lease . leaseDuration ( )		3007541	1					
ANR	3007549	Argument	lease . leaseDuration ( )		3007541	0					
ANR	3007550	CallExpression	lease . leaseDuration ( )		3007541	0					
ANR	3007551	Callee	lease . leaseDuration		3007541	0					
ANR	3007552	MemberAccess	lease . leaseDuration		3007541	0					
ANR	3007553	Identifier	lease		3007541	0					
ANR	3007554	Identifier	leaseDuration		3007541	1					
ANR	3007555	ArgumentList			3007541	1					
ANR	3007556	ExpressionStatement	this -> m_release_lease_when_done = lease . releaseLeaseWhenDone ( )	169:1:3800:3863	3007541	1	True				
ANR	3007557	AssignmentExpression	this -> m_release_lease_when_done = lease . releaseLeaseWhenDone ( )		3007541	0		=			
ANR	3007558	PtrMemberAccess	this -> m_release_lease_when_done		3007541	0					
ANR	3007559	Identifier	this		3007541	0					
ANR	3007560	Identifier	m_release_lease_when_done		3007541	1					
ANR	3007561	CallExpression	lease . releaseLeaseWhenDone ( )		3007541	1					
ANR	3007562	Callee	lease . releaseLeaseWhenDone		3007541	0					
ANR	3007563	MemberAccess	lease . releaseLeaseWhenDone		3007541	0					
ANR	3007564	Identifier	lease		3007541	0					
ANR	3007565	Identifier	releaseLeaseWhenDone		3007541	1					
ANR	3007566	ArgumentList			3007541	1					
ANR	3007567	ExpressionStatement	setLeaseStart ( lease . leaseTime ( ) )	170:1:3866:3900	3007541	2	True				
ANR	3007568	CallExpression	setLeaseStart ( lease . leaseTime ( ) )		3007541	0					
ANR	3007569	Callee	setLeaseStart		3007541	0					
ANR	3007570	Identifier	setLeaseStart		3007541	0					
ANR	3007571	ArgumentList	lease . leaseTime ( )		3007541	1					
ANR	3007572	Argument	lease . leaseTime ( )		3007541	0					
ANR	3007573	CallExpression	lease . leaseTime ( )		3007541	0					
ANR	3007574	Callee	lease . leaseTime		3007541	0					
ANR	3007575	MemberAccess	lease . leaseTime		3007541	0					
ANR	3007576	Identifier	lease		3007541	0					
ANR	3007577	Identifier	leaseTime		3007541	1					
ANR	3007578	ArgumentList			3007541	1					
ANR	3007579	ExpressionStatement	setMark ( lease . getMark ( ) )	171:1:3903:3929	3007541	3	True				
ANR	3007580	CallExpression	setMark ( lease . getMark ( ) )		3007541	0					
ANR	3007581	Callee	setMark		3007541	0					
ANR	3007582	Identifier	setMark		3007541	0					
ANR	3007583	ArgumentList	lease . getMark ( )		3007541	1					
ANR	3007584	Argument	lease . getMark ( )		3007541	0					
ANR	3007585	CallExpression	lease . getMark ( )		3007541	0					
ANR	3007586	Callee	lease . getMark		3007541	0					
ANR	3007587	MemberAccess	lease . getMark		3007541	0					
ANR	3007588	Identifier	lease		3007541	0					
ANR	3007589	Identifier	getMark		3007541	1					
ANR	3007590	ArgumentList			3007541	1					
ANR	3007591	ExpressionStatement	setDead ( lease . isDead ( ) )	172:1:3932:3957	3007541	4	True				
ANR	3007592	CallExpression	setDead ( lease . isDead ( ) )		3007541	0					
ANR	3007593	Callee	setDead		3007541	0					
ANR	3007594	Identifier	setDead		3007541	0					
ANR	3007595	ArgumentList	lease . isDead ( )		3007541	1					
ANR	3007596	Argument	lease . isDead ( )		3007541	0					
ANR	3007597	CallExpression	lease . isDead ( )		3007541	0					
ANR	3007598	Callee	lease . isDead		3007541	0					
ANR	3007599	MemberAccess	lease . isDead		3007541	0					
ANR	3007600	Identifier	lease		3007541	0					
ANR	3007601	Identifier	isDead		3007541	1					
ANR	3007602	ArgumentList			3007541	1					
ANR	3007603	IfStatement	if ( lease . leaseAd ( ) )		3007541	5					
ANR	3007604	Condition	lease . leaseAd ( )	175:6:4033:4048	3007541	0	True				
ANR	3007605	CallExpression	lease . leaseAd ( )		3007541	0					
ANR	3007606	Callee	lease . leaseAd		3007541	0					
ANR	3007607	MemberAccess	lease . leaseAd		3007541	0					
ANR	3007608	Identifier	lease		3007541	0					
ANR	3007609	Identifier	leaseAd		3007541	1					
ANR	3007610	ArgumentList			3007541	1					
ANR	3007611	CompoundStatement		13:25:356:356	3007541	1					
ANR	3007612	IfStatement	if ( this -> m_lease_ad )		3007541	0					
ANR	3007613	Condition	this -> m_lease_ad	176:7:4061:4076	3007541	0	True				
ANR	3007614	PtrMemberAccess	this -> m_lease_ad		3007541	0					
ANR	3007615	Identifier	this		3007541	0					
ANR	3007616	Identifier	m_lease_ad		3007541	1					
ANR	3007617	CompoundStatement		14:26:384:384	3007541	1					
ANR	3007618	Statement	delete	177:3:4085:4090	3007541	0	True				
ANR	3007619	ExpressionStatement	m_lease_ad	177:10:4092:4102	3007541	1	True				
ANR	3007620	Identifier	m_lease_ad		3007541	0					
ANR	3007621	ExpressionStatement	this -> m_lease_ad = new classad :: ClassAd ( * ( lease . leaseAd ( ) ) )	179:2:4110:4172	3007541	1	True				
ANR	3007622	AssignmentExpression	this -> m_lease_ad = new classad :: ClassAd ( * ( lease . leaseAd ( ) ) )		3007541	0		=			
ANR	3007623	PtrMemberAccess	this -> m_lease_ad		3007541	0					
ANR	3007624	Identifier	this		3007541	0					
ANR	3007625	Identifier	m_lease_ad		3007541	1					
ANR	3007626	UnaryOperationExpression	* ( lease . leaseAd ( ) )		3007541	1					
ANR	3007627	UnaryOperator	*		3007541	0					
ANR	3007628	CallExpression	lease . leaseAd ( )		3007541	1					
ANR	3007629	Callee	lease . leaseAd		3007541	0					
ANR	3007630	MemberAccess	lease . leaseAd		3007541	0					
ANR	3007631	Identifier	lease		3007541	0					
ANR	3007632	Identifier	leaseAd		3007541	1					
ANR	3007633	ArgumentList			3007541	1					
ANR	3007634	ElseStatement	else		3007541	0					
ANR	3007635	IfStatement	if ( this -> m_lease_ad )		3007541	0					
ANR	3007636	Condition	this -> m_lease_ad	182:11:4236:4251	3007541	0	True				
ANR	3007637	PtrMemberAccess	this -> m_lease_ad		3007541	0					
ANR	3007638	Identifier	this		3007541	0					
ANR	3007639	Identifier	m_lease_ad		3007541	1					
ANR	3007640	CompoundStatement		20:30:559:559	3007541	1					
ANR	3007641	ExpressionStatement	"this -> m_lease_ad -> InsertAttr ( ""LeaseDuration"" , this -> m_lease_duration )"	183:2:4259:4341	3007541	0	True				
ANR	3007642	CallExpression	"this -> m_lease_ad -> InsertAttr ( ""LeaseDuration"" , this -> m_lease_duration )"		3007541	0					
ANR	3007643	Callee	this -> m_lease_ad -> InsertAttr		3007541	0					
ANR	3007644	PtrMemberAccess	this -> m_lease_ad -> InsertAttr		3007541	0					
ANR	3007645	PtrMemberAccess	this -> m_lease_ad		3007541	0					
ANR	3007646	Identifier	this		3007541	0					
ANR	3007647	Identifier	m_lease_ad		3007541	1					
ANR	3007648	Identifier	InsertAttr		3007541	1					
ANR	3007649	ArgumentList	"""LeaseDuration"""		3007541	1					
ANR	3007650	Argument	"""LeaseDuration"""		3007541	0					
ANR	3007651	PrimaryExpression	"""LeaseDuration"""		3007541	0					
ANR	3007652	Argument	this -> m_lease_duration		3007541	1					
ANR	3007653	PtrMemberAccess	this -> m_lease_duration		3007541	0					
ANR	3007654	Identifier	this		3007541	0					
ANR	3007655	Identifier	m_lease_duration		3007541	1					
ANR	3007656	ExpressionStatement	"this -> m_lease_ad -> InsertAttr ( ""ReleaseWhenDone"" , this -> m_release_lease_when_done )"	185:2:4345:4438	3007541	1	True				
ANR	3007657	CallExpression	"this -> m_lease_ad -> InsertAttr ( ""ReleaseWhenDone"" , this -> m_release_lease_when_done )"		3007541	0					
ANR	3007658	Callee	this -> m_lease_ad -> InsertAttr		3007541	0					
ANR	3007659	PtrMemberAccess	this -> m_lease_ad -> InsertAttr		3007541	0					
ANR	3007660	PtrMemberAccess	this -> m_lease_ad		3007541	0					
ANR	3007661	Identifier	this		3007541	0					
ANR	3007662	Identifier	m_lease_ad		3007541	1					
ANR	3007663	Identifier	InsertAttr		3007541	1					
ANR	3007664	ArgumentList	"""ReleaseWhenDone"""		3007541	1					
ANR	3007665	Argument	"""ReleaseWhenDone"""		3007541	0					
ANR	3007666	PrimaryExpression	"""ReleaseWhenDone"""		3007541	0					
ANR	3007667	Argument	this -> m_release_lease_when_done		3007541	1					
ANR	3007668	PtrMemberAccess	this -> m_release_lease_when_done		3007541	0					
ANR	3007669	Identifier	this		3007541	0					
ANR	3007670	Identifier	m_release_lease_when_done		3007541	1					
ANR	3007671	ReturnStatement	return 0 ;	190:1:4458:4466	3007541	6	True				
ANR	3007672	PrimaryExpression	0		3007541	0					
ANR	3007673	ReturnType	int		3007541	1					
ANR	3007674	Identifier	DCLeaseManagerLease :: copyUpdates		3007541	2					
ANR	3007675	ParameterList	const DCLeaseManagerLease & lease		3007541	3					
ANR	3007676	Parameter	const DCLeaseManagerLease & lease	162:34:3660:3691	3007541	0	True				
ANR	3007677	ParameterType	const DCLeaseManagerLease &		3007541	0					
ANR	3007678	Identifier	lease		3007541	1					
ANR	3007679	CFGEntryNode	ENTRY		3007541		True				
ANR	3007680	CFGExitNode	EXIT		3007541		True				
ANR	3007681	Symbol	lease . leaseAd		3007541						
ANR	3007682	Symbol	this -> m_lease_ad		3007541						
ANR	3007683	Symbol	* ( lease . leaseAd ( ) )		3007541						
ANR	3007684	Symbol	lease . leaseTime		3007541						
ANR	3007685	Symbol	* lease		3007541						
ANR	3007686	Symbol	this		3007541						
ANR	3007687	Symbol	lease . getMark		3007541						
ANR	3007688	Symbol	this -> m_release_lease_when_done		3007541						
ANR	3007689	Symbol	* this		3007541						
ANR	3007690	Symbol	* lease . leaseAd		3007541						
ANR	3007691	Symbol	lease . releaseLeaseWhenDone		3007541						
ANR	3007692	Symbol	lease . isDead		3007541						
ANR	3007693	Symbol	lease . leaseDuration		3007541						
ANR	3007694	Symbol	this -> m_lease_duration		3007541						
ANR	3007695	Symbol	lease		3007541						
ANR	3007696	Function	DCLeaseManagerLease :: setLeaseId	193:0:4471:4578							
ANR	3007697	FunctionDef	DCLeaseManagerLease :: setLeaseId (const string & lease_id)		3007696	0					
ANR	3007698	CompoundStatement		196:0:4535:4578	3007696	0					
ANR	3007699	ExpressionStatement	this -> m_lease_id = lease_id	197:1:4538:4565	3007696	0	True				
ANR	3007700	AssignmentExpression	this -> m_lease_id = lease_id		3007696	0		=			
ANR	3007701	PtrMemberAccess	this -> m_lease_id		3007696	0					
ANR	3007702	Identifier	this		3007696	0					
ANR	3007703	Identifier	m_lease_id		3007696	1					
ANR	3007704	Identifier	lease_id		3007696	1					
ANR	3007705	ReturnStatement	return 0 ;	198:1:4568:4576	3007696	1	True				
ANR	3007706	PrimaryExpression	0		3007696	0					
ANR	3007707	ReturnType	int		3007696	1					
ANR	3007708	Identifier	DCLeaseManagerLease :: setLeaseId		3007696	2					
ANR	3007709	ParameterList	const string & lease_id		3007696	3					
ANR	3007710	Parameter	const string & lease_id	195:1:4509:4531	3007696	0	True				
ANR	3007711	ParameterType	const string &		3007696	0					
ANR	3007712	Identifier	lease_id		3007696	1					
ANR	3007713	CFGEntryNode	ENTRY		3007696		True				
ANR	3007714	CFGExitNode	EXIT		3007696		True				
ANR	3007715	Symbol	* this		3007696						
ANR	3007716	Symbol	this -> m_lease_id		3007696						
ANR	3007717	Symbol	this		3007696						
ANR	3007718	Symbol	lease_id		3007696						
ANR	3007719	Function	DCLeaseManagerLease :: setLeaseDuration	201:0:4581:4693							
ANR	3007720	FunctionDef	DCLeaseManagerLease :: setLeaseDuration (int duration)		3007719	0					
ANR	3007721	CompoundStatement		204:0:4644:4693	3007719	0					
ANR	3007722	ExpressionStatement	this -> m_lease_duration = duration	205:1:4647:4680	3007719	0	True				
ANR	3007723	AssignmentExpression	this -> m_lease_duration = duration		3007719	0		=			
ANR	3007724	PtrMemberAccess	this -> m_lease_duration		3007719	0					
ANR	3007725	Identifier	this		3007719	0					
ANR	3007726	Identifier	m_lease_duration		3007719	1					
ANR	3007727	Identifier	duration		3007719	1					
ANR	3007728	ReturnStatement	return 0 ;	206:1:4683:4691	3007719	1	True				
ANR	3007729	PrimaryExpression	0		3007719	0					
ANR	3007730	ReturnType	int		3007719	1					
ANR	3007731	Identifier	DCLeaseManagerLease :: setLeaseDuration		3007719	2					
ANR	3007732	ParameterList	int duration		3007719	3					
ANR	3007733	Parameter	int duration	203:1:4625:4640	3007719	0	True				
ANR	3007734	ParameterType	int		3007719	0					
ANR	3007735	Identifier	duration		3007719	1					
ANR	3007736	CFGEntryNode	ENTRY		3007719		True				
ANR	3007737	CFGExitNode	EXIT		3007719		True				
ANR	3007738	Symbol	duration		3007719						
ANR	3007739	Symbol	* this		3007719						
ANR	3007740	Symbol	this		3007719						
ANR	3007741	Symbol	this -> m_lease_duration		3007719						
ANR	3007742	ClassDef	LeaseIoBuf	209:0:4696:4922							
ANR	3007743	ClassDef	<unnamed>	211:1:4716:4898							
ANR	3007744	DeclStmt									
ANR	3007745	Decl							char	char [ 256 ]	m_lease_id
ANR	3007746	DeclStmt									
ANR	3007747	Decl							char	char [ 2048 ]	m_lease_ad
ANR	3007748	DeclStmt									
ANR	3007749	Decl							int	int	m_lease_duration
ANR	3007750	DeclStmt									
ANR	3007751	Decl							int	int	m_lease_time
ANR	3007752	DeclStmt									
ANR	3007753	Decl							bool	bool	m_release_lease_when_done
ANR	3007754	DeclStmt									
ANR	3007755	Decl							bool	bool	m_mark
ANR	3007756	DeclStmt									
ANR	3007757	Decl							bool	bool	m_dead
ANR	3007758	DeclStmt									
ANR	3007759	Decl									m_fields
ANR	3007760	DeclStmt									
ANR	3007761	Decl							char	char [ 4096 ]	m_static
ANR	3007762	Function	DCLeaseManagerLease :: fwrite	224:0:4926:5660							
ANR	3007763	FunctionDef	DCLeaseManagerLease :: fwrite (FILE * fp)		3007762	0					
ANR	3007764	CompoundStatement		226:0:4977:5660	3007762	0					
ANR	3007765	IdentifierDeclStatement	classad :: ClassAdUnParser unparser ;	227:1:4980:5013	3007762	0	True				
ANR	3007766	IdentifierDecl	unparser		3007762	0					
ANR	3007767	IdentifierDeclType	classad :: ClassAdUnParser		3007762	0					
ANR	3007768	Identifier	unparser		3007762	1					
ANR	3007769	IdentifierDeclStatement	LeaseIoBuf buf ;	228:1:5016:5034	3007762	1	True				
ANR	3007770	IdentifierDecl	buf		3007762	0					
ANR	3007771	IdentifierDeclType	LeaseIoBuf		3007762	0					
ANR	3007772	Identifier	buf		3007762	1					
ANR	3007773	IdentifierDeclStatement	string str ;	229:1:5037:5052	3007762	2	True				
ANR	3007774	IdentifierDecl	str		3007762	0					
ANR	3007775	IdentifierDeclType	string		3007762	0					
ANR	3007776	Identifier	str		3007762	1					
ANR	3007777	ExpressionStatement	"memset ( & buf , 0 , sizeof ( buf ) )"	231:1:5056:5086	3007762	3	True				
ANR	3007778	CallExpression	"memset ( & buf , 0 , sizeof ( buf ) )"		3007762	0					
ANR	3007779	Callee	memset		3007762	0					
ANR	3007780	Identifier	memset		3007762	0					
ANR	3007781	ArgumentList	& buf		3007762	1					
ANR	3007782	Argument	& buf		3007762	0					
ANR	3007783	UnaryOperationExpression	& buf		3007762	0					
ANR	3007784	UnaryOperator	&		3007762	0					
ANR	3007785	Identifier	buf		3007762	1					
ANR	3007786	Argument	0		3007762	1					
ANR	3007787	PrimaryExpression	0		3007762	0					
ANR	3007788	Argument	sizeof ( buf )		3007762	2					
ANR	3007789	SizeofExpression	sizeof ( buf )		3007762	0					
ANR	3007790	Sizeof	sizeof		3007762	0					
ANR	3007791	SizeofOperand	buf		3007762	1					
ANR	3007792	ExpressionStatement	"strncpy ( buf . m_fields . m_lease_id , this -> m_lease_id . c_str ( ) , sizeof ( buf . m_fields . m_lease_id ) - 1 )"	233:1:5090:5193	3007762	4	True				
ANR	3007793	CallExpression	"strncpy ( buf . m_fields . m_lease_id , this -> m_lease_id . c_str ( ) , sizeof ( buf . m_fields . m_lease_id ) - 1 )"		3007762	0					
ANR	3007794	Callee	strncpy		3007762	0					
ANR	3007795	Identifier	strncpy		3007762	0					
ANR	3007796	ArgumentList	buf . m_fields . m_lease_id		3007762	1					
ANR	3007797	Argument	buf . m_fields . m_lease_id		3007762	0					
ANR	3007798	MemberAccess	buf . m_fields . m_lease_id		3007762	0					
ANR	3007799	MemberAccess	buf . m_fields		3007762	0					
ANR	3007800	Identifier	buf		3007762	0					
ANR	3007801	Identifier	m_fields		3007762	1					
ANR	3007802	Identifier	m_lease_id		3007762	1					
ANR	3007803	Argument	this -> m_lease_id . c_str ( )		3007762	1					
ANR	3007804	CallExpression	this -> m_lease_id . c_str ( )		3007762	0					
ANR	3007805	Callee	this -> m_lease_id . c_str		3007762	0					
ANR	3007806	MemberAccess	this -> m_lease_id . c_str		3007762	0					
ANR	3007807	PtrMemberAccess	this -> m_lease_id		3007762	0					
ANR	3007808	Identifier	this		3007762	0					
ANR	3007809	Identifier	m_lease_id		3007762	1					
ANR	3007810	Identifier	c_str		3007762	1					
ANR	3007811	ArgumentList			3007762	1					
ANR	3007812	Argument	sizeof ( buf . m_fields . m_lease_id ) - 1		3007762	2					
ANR	3007813	AdditiveExpression	sizeof ( buf . m_fields . m_lease_id ) - 1		3007762	0		-			
ANR	3007814	SizeofExpression	sizeof ( buf . m_fields . m_lease_id )		3007762	0					
ANR	3007815	Sizeof	sizeof		3007762	0					
ANR	3007816	MemberAccess	buf . m_fields . m_lease_id		3007762	1					
ANR	3007817	MemberAccess	buf . m_fields		3007762	0					
ANR	3007818	Identifier	buf		3007762	0					
ANR	3007819	Identifier	m_fields		3007762	1					
ANR	3007820	Identifier	m_lease_id		3007762	1					
ANR	3007821	PrimaryExpression	1		3007762	1					
ANR	3007822	ExpressionStatement	"unparser . Unparse ( str , this -> m_lease_ad )"	237:1:5197:5238	3007762	5	True				
ANR	3007823	CallExpression	"unparser . Unparse ( str , this -> m_lease_ad )"		3007762	0					
ANR	3007824	Callee	unparser . Unparse		3007762	0					
ANR	3007825	MemberAccess	unparser . Unparse		3007762	0					
ANR	3007826	Identifier	unparser		3007762	0					
ANR	3007827	Identifier	Unparse		3007762	1					
ANR	3007828	ArgumentList	str		3007762	1					
ANR	3007829	Argument	str		3007762	0					
ANR	3007830	Identifier	str		3007762	0					
ANR	3007831	Argument	this -> m_lease_ad		3007762	1					
ANR	3007832	PtrMemberAccess	this -> m_lease_ad		3007762	0					
ANR	3007833	Identifier	this		3007762	0					
ANR	3007834	Identifier	m_lease_ad		3007762	1					
ANR	3007835	ExpressionStatement	"strncpy ( buf . m_fields . m_lease_ad , str . c_str ( ) , sizeof ( buf . m_fields . m_lease_ad ) - 1 )"	238:1:5241:5331	3007762	6	True				
ANR	3007836	CallExpression	"strncpy ( buf . m_fields . m_lease_ad , str . c_str ( ) , sizeof ( buf . m_fields . m_lease_ad ) - 1 )"		3007762	0					
ANR	3007837	Callee	strncpy		3007762	0					
ANR	3007838	Identifier	strncpy		3007762	0					
ANR	3007839	ArgumentList	buf . m_fields . m_lease_ad		3007762	1					
ANR	3007840	Argument	buf . m_fields . m_lease_ad		3007762	0					
ANR	3007841	MemberAccess	buf . m_fields . m_lease_ad		3007762	0					
ANR	3007842	MemberAccess	buf . m_fields		3007762	0					
ANR	3007843	Identifier	buf		3007762	0					
ANR	3007844	Identifier	m_fields		3007762	1					
ANR	3007845	Identifier	m_lease_ad		3007762	1					
ANR	3007846	Argument	str . c_str ( )		3007762	1					
ANR	3007847	CallExpression	str . c_str ( )		3007762	0					
ANR	3007848	Callee	str . c_str		3007762	0					
ANR	3007849	MemberAccess	str . c_str		3007762	0					
ANR	3007850	Identifier	str		3007762	0					
ANR	3007851	Identifier	c_str		3007762	1					
ANR	3007852	ArgumentList			3007762	1					
ANR	3007853	Argument	sizeof ( buf . m_fields . m_lease_ad ) - 1		3007762	2					
ANR	3007854	AdditiveExpression	sizeof ( buf . m_fields . m_lease_ad ) - 1		3007762	0		-			
ANR	3007855	SizeofExpression	sizeof ( buf . m_fields . m_lease_ad )		3007762	0					
ANR	3007856	Sizeof	sizeof		3007762	0					
ANR	3007857	MemberAccess	buf . m_fields . m_lease_ad		3007762	1					
ANR	3007858	MemberAccess	buf . m_fields		3007762	0					
ANR	3007859	Identifier	buf		3007762	0					
ANR	3007860	Identifier	m_fields		3007762	1					
ANR	3007861	Identifier	m_lease_ad		3007762	1					
ANR	3007862	PrimaryExpression	1		3007762	1					
ANR	3007863	ExpressionStatement	buf . m_fields . m_lease_duration = this -> m_lease_duration	242:1:5335:5391	3007762	7	True				
ANR	3007864	AssignmentExpression	buf . m_fields . m_lease_duration = this -> m_lease_duration		3007762	0		=			
ANR	3007865	MemberAccess	buf . m_fields . m_lease_duration		3007762	0					
ANR	3007866	MemberAccess	buf . m_fields		3007762	0					
ANR	3007867	Identifier	buf		3007762	0					
ANR	3007868	Identifier	m_fields		3007762	1					
ANR	3007869	Identifier	m_lease_duration		3007762	1					
ANR	3007870	PtrMemberAccess	this -> m_lease_duration		3007762	1					
ANR	3007871	Identifier	this		3007762	0					
ANR	3007872	Identifier	m_lease_duration		3007762	1					
ANR	3007873	ExpressionStatement	buf . m_fields . m_lease_time = this -> m_lease_time	243:1:5394:5443	3007762	8	True				
ANR	3007874	AssignmentExpression	buf . m_fields . m_lease_time = this -> m_lease_time		3007762	0		=			
ANR	3007875	MemberAccess	buf . m_fields . m_lease_time		3007762	0					
ANR	3007876	MemberAccess	buf . m_fields		3007762	0					
ANR	3007877	Identifier	buf		3007762	0					
ANR	3007878	Identifier	m_fields		3007762	1					
ANR	3007879	Identifier	m_lease_time		3007762	1					
ANR	3007880	PtrMemberAccess	this -> m_lease_time		3007762	1					
ANR	3007881	Identifier	this		3007762	0					
ANR	3007882	Identifier	m_lease_time		3007762	1					
ANR	3007883	ExpressionStatement	buf . m_fields . m_release_lease_when_done = this -> m_release_lease_when_done	244:1:5446:5518	3007762	9	True				
ANR	3007884	AssignmentExpression	buf . m_fields . m_release_lease_when_done = this -> m_release_lease_when_done		3007762	0		=			
ANR	3007885	MemberAccess	buf . m_fields . m_release_lease_when_done		3007762	0					
ANR	3007886	MemberAccess	buf . m_fields		3007762	0					
ANR	3007887	Identifier	buf		3007762	0					
ANR	3007888	Identifier	m_fields		3007762	1					
ANR	3007889	Identifier	m_release_lease_when_done		3007762	1					
ANR	3007890	PtrMemberAccess	this -> m_release_lease_when_done		3007762	1					
ANR	3007891	Identifier	this		3007762	0					
ANR	3007892	Identifier	m_release_lease_when_done		3007762	1					
ANR	3007893	ExpressionStatement	buf . m_fields . m_mark = this -> m_mark	245:1:5521:5560	3007762	10	True				
ANR	3007894	AssignmentExpression	buf . m_fields . m_mark = this -> m_mark		3007762	0		=			
ANR	3007895	MemberAccess	buf . m_fields . m_mark		3007762	0					
ANR	3007896	MemberAccess	buf . m_fields		3007762	0					
ANR	3007897	Identifier	buf		3007762	0					
ANR	3007898	Identifier	m_fields		3007762	1					
ANR	3007899	Identifier	m_mark		3007762	1					
ANR	3007900	PtrMemberAccess	this -> m_mark		3007762	1					
ANR	3007901	Identifier	this		3007762	0					
ANR	3007902	Identifier	m_mark		3007762	1					
ANR	3007903	ExpressionStatement	buf . m_fields . m_dead = this -> m_dead	246:1:5563:5602	3007762	11	True				
ANR	3007904	AssignmentExpression	buf . m_fields . m_dead = this -> m_dead		3007762	0		=			
ANR	3007905	MemberAccess	buf . m_fields . m_dead		3007762	0					
ANR	3007906	MemberAccess	buf . m_fields		3007762	0					
ANR	3007907	Identifier	buf		3007762	0					
ANR	3007908	Identifier	m_fields		3007762	1					
ANR	3007909	Identifier	m_dead		3007762	1					
ANR	3007910	PtrMemberAccess	this -> m_dead		3007762	1					
ANR	3007911	Identifier	this		3007762	0					
ANR	3007912	Identifier	m_dead		3007762	1					
ANR	3007913	Statement	return	248:1:5606:5611	3007762	12	True				
ANR	3007914	Statement	(	248:8:5613:5613	3007762	13	True				
ANR	3007915	Statement	::	248:10:5615:5616	3007762	14	True				
ANR	3007916	Statement	fwrite	248:12:5617:5622	3007762	15	True				
ANR	3007917	Statement	(	248:18:5623:5623	3007762	16	True				
ANR	3007918	Statement	&	248:20:5625:5625	3007762	17	True				
ANR	3007919	Statement	buf	248:21:5626:5628	3007762	18	True				
ANR	3007920	Statement	","	248:24:5629:5629	3007762	19	True				
ANR	3007921	Statement	sizeof	248:26:5631:5636	3007762	20	True				
ANR	3007922	Statement	(	248:32:5637:5637	3007762	21	True				
ANR	3007923	Statement	buf	248:33:5638:5640	3007762	22	True				
ANR	3007924	Statement	)	248:36:5641:5641	3007762	23	True				
ANR	3007925	Statement	","	248:37:5642:5642	3007762	24	True				
ANR	3007926	Statement	1	248:39:5644:5644	3007762	25	True				
ANR	3007927	Statement	","	248:40:5645:5645	3007762	26	True				
ANR	3007928	Statement	fp	248:42:5647:5648	3007762	27	True				
ANR	3007929	Statement	)	248:45:5650:5650	3007762	28	True				
ANR	3007930	Statement	==	248:47:5652:5653	3007762	29	True				
ANR	3007931	Statement	1	248:50:5655:5655	3007762	30	True				
ANR	3007932	Statement	)	248:52:5657:5657	3007762	31	True				
ANR	3007933	ExpressionStatement		248:53:5658:5658	3007762	32	True				
ANR	3007934	ReturnType	bool		3007762	1					
ANR	3007935	Identifier	DCLeaseManagerLease :: fwrite		3007762	2					
ANR	3007936	ParameterList	FILE * fp		3007762	3					
ANR	3007937	Parameter	FILE * fp	225:29:4960:4967	3007762	0	True				
ANR	3007938	ParameterType	FILE *		3007762	0					
ANR	3007939	Identifier	fp		3007762	1					
ANR	3007940	CFGEntryNode	ENTRY		3007762		True				
ANR	3007941	CFGExitNode	EXIT		3007762		True				
ANR	3007942	Symbol	this -> m_lease_ad		3007762						
ANR	3007943	Symbol	this -> m_dead		3007762						
ANR	3007944	Symbol	buf . m_fields . m_lease_ad		3007762						
ANR	3007945	Symbol	this		3007762						
ANR	3007946	Symbol	str . c_str		3007762						
ANR	3007947	Symbol	fp		3007762						
ANR	3007948	Symbol	buf . m_fields . m_release_lease_when_done		3007762						
ANR	3007949	Symbol	this -> m_mark		3007762						
ANR	3007950	Symbol	this -> m_release_lease_when_done		3007762						
ANR	3007951	Symbol	this -> m_lease_time		3007762						
ANR	3007952	Symbol	buf . m_fields . m_mark		3007762						
ANR	3007953	Symbol	str		3007762						
ANR	3007954	Symbol	* this		3007762						
ANR	3007955	Symbol	this -> m_lease_id . c_str		3007762						
ANR	3007956	Symbol	buf		3007762						
ANR	3007957	Symbol	buf . m_fields . m_lease_time		3007762						
ANR	3007958	Symbol	buf . m_fields		3007762						
ANR	3007959	Symbol	this -> m_lease_id		3007762						
ANR	3007960	Symbol	buf . m_fields . m_dead		3007762						
ANR	3007961	Symbol	unparser		3007762						
ANR	3007962	Symbol	this -> m_lease_duration		3007762						
ANR	3007963	Symbol	buf . m_fields . m_lease_duration		3007762						
ANR	3007964	Symbol	& buf		3007762						
ANR	3007965	Symbol	buf . m_fields . m_lease_id		3007762						
ANR	3007966	Function	DCLeaseManagerLease :: fread	251:0:5663:6307							
ANR	3007967	FunctionDef	DCLeaseManagerLease :: fread (FILE * fp)		3007966	0					
ANR	3007968	CompoundStatement		253:0:5707:6307	3007966	0					
ANR	3007969	IdentifierDeclStatement	classad :: ClassAdParser parser ;	254:1:5710:5739	3007966	0	True				
ANR	3007970	IdentifierDecl	parser		3007966	0					
ANR	3007971	IdentifierDeclType	classad :: ClassAdParser		3007966	0					
ANR	3007972	Identifier	parser		3007966	1					
ANR	3007973	IdentifierDeclStatement	LeaseIoBuf buf ;	255:1:5742:5759	3007966	1	True				
ANR	3007974	IdentifierDecl	buf		3007966	0					
ANR	3007975	IdentifierDeclType	LeaseIoBuf		3007966	0					
ANR	3007976	Identifier	buf		3007966	1					
ANR	3007977	IdentifierDeclStatement	string str ;	256:1:5762:5776	3007966	2	True				
ANR	3007978	IdentifierDecl	str		3007966	0					
ANR	3007979	IdentifierDeclType	string		3007966	0					
ANR	3007980	Identifier	str		3007966	1					
ANR	3007981	Statement	if	258:1:5780:5781	3007966	3	True				
ANR	3007982	Statement	(	258:4:5783:5783	3007966	4	True				
ANR	3007983	Statement	::	258:6:5785:5786	3007966	5	True				
ANR	3007984	Statement	fread	258:8:5787:5791	3007966	6	True				
ANR	3007985	Statement	(	258:13:5792:5792	3007966	7	True				
ANR	3007986	Statement	&	258:15:5794:5794	3007966	8	True				
ANR	3007987	Statement	buf	258:16:5795:5797	3007966	9	True				
ANR	3007988	Statement	","	258:19:5798:5798	3007966	10	True				
ANR	3007989	Statement	sizeof	258:21:5800:5805	3007966	11	True				
ANR	3007990	Statement	(	258:27:5806:5806	3007966	12	True				
ANR	3007991	Statement	buf	258:28:5807:5809	3007966	13	True				
ANR	3007992	Statement	)	258:31:5810:5810	3007966	14	True				
ANR	3007993	Statement	","	258:32:5811:5811	3007966	15	True				
ANR	3007994	Statement	1	258:34:5813:5813	3007966	16	True				
ANR	3007995	Statement	","	258:35:5814:5814	3007966	17	True				
ANR	3007996	Statement	fp	258:37:5816:5817	3007966	18	True				
ANR	3007997	Statement	)	258:40:5819:5819	3007966	19	True				
ANR	3007998	Statement	!=	258:42:5821:5822	3007966	20	True				
ANR	3007999	Statement	1	258:45:5824:5824	3007966	21	True				
ANR	3008000	Statement	)	258:47:5826:5826	3007966	22	True				
ANR	3008001	CompoundStatement		6:49:120:120	3007966	23					
ANR	3008002	ReturnStatement	return false ;	259:2:5832:5844	3007966	0	True				
ANR	3008003	Identifier	false		3007966	0					
ANR	3008004	ExpressionStatement	this -> m_lease_id = buf . m_fields . m_lease_id	262:1:5851:5893	3007966	24	True				
ANR	3008005	AssignmentExpression	this -> m_lease_id = buf . m_fields . m_lease_id		3007966	0		=			
ANR	3008006	PtrMemberAccess	this -> m_lease_id		3007966	0					
ANR	3008007	Identifier	this		3007966	0					
ANR	3008008	Identifier	m_lease_id		3007966	1					
ANR	3008009	MemberAccess	buf . m_fields . m_lease_id		3007966	1					
ANR	3008010	MemberAccess	buf . m_fields		3007966	0					
ANR	3008011	Identifier	buf		3007966	0					
ANR	3008012	Identifier	m_fields		3007966	1					
ANR	3008013	Identifier	m_lease_id		3007966	1					
ANR	3008014	ExpressionStatement	"this -> m_lease_ad = parser . ParseClassAd ( buf . m_fields . m_lease_ad , true )"	263:1:5896:5967	3007966	25	True				
ANR	3008015	AssignmentExpression	"this -> m_lease_ad = parser . ParseClassAd ( buf . m_fields . m_lease_ad , true )"		3007966	0		=			
ANR	3008016	PtrMemberAccess	this -> m_lease_ad		3007966	0					
ANR	3008017	Identifier	this		3007966	0					
ANR	3008018	Identifier	m_lease_ad		3007966	1					
ANR	3008019	CallExpression	"parser . ParseClassAd ( buf . m_fields . m_lease_ad , true )"		3007966	1					
ANR	3008020	Callee	parser . ParseClassAd		3007966	0					
ANR	3008021	MemberAccess	parser . ParseClassAd		3007966	0					
ANR	3008022	Identifier	parser		3007966	0					
ANR	3008023	Identifier	ParseClassAd		3007966	1					
ANR	3008024	ArgumentList	buf . m_fields . m_lease_ad		3007966	1					
ANR	3008025	Argument	buf . m_fields . m_lease_ad		3007966	0					
ANR	3008026	MemberAccess	buf . m_fields . m_lease_ad		3007966	0					
ANR	3008027	MemberAccess	buf . m_fields		3007966	0					
ANR	3008028	Identifier	buf		3007966	0					
ANR	3008029	Identifier	m_fields		3007966	1					
ANR	3008030	Identifier	m_lease_ad		3007966	1					
ANR	3008031	Argument	true		3007966	1					
ANR	3008032	Identifier	true		3007966	0					
ANR	3008033	IfStatement	if ( NULL == this -> m_lease_ad )		3007966	26					
ANR	3008034	Condition	NULL == this -> m_lease_ad	264:6:5975:5998	3007966	0	True				
ANR	3008035	EqualityExpression	NULL == this -> m_lease_ad		3007966	0		==			
ANR	3008036	Identifier	NULL		3007966	0					
ANR	3008037	PtrMemberAccess	this -> m_lease_ad		3007966	1					
ANR	3008038	Identifier	this		3007966	0					
ANR	3008039	Identifier	m_lease_ad		3007966	1					
ANR	3008040	CompoundStatement		12:33:294:294	3007966	1					
ANR	3008041	ReturnStatement	return false ;	265:2:6006:6018	3007966	0	True				
ANR	3008042	Identifier	false		3007966	0					
ANR	3008043	ExpressionStatement	this -> m_lease_duration = buf . m_fields . m_lease_duration	268:1:6025:6081	3007966	27	True				
ANR	3008044	AssignmentExpression	this -> m_lease_duration = buf . m_fields . m_lease_duration		3007966	0		=			
ANR	3008045	PtrMemberAccess	this -> m_lease_duration		3007966	0					
ANR	3008046	Identifier	this		3007966	0					
ANR	3008047	Identifier	m_lease_duration		3007966	1					
ANR	3008048	MemberAccess	buf . m_fields . m_lease_duration		3007966	1					
ANR	3008049	MemberAccess	buf . m_fields		3007966	0					
ANR	3008050	Identifier	buf		3007966	0					
ANR	3008051	Identifier	m_fields		3007966	1					
ANR	3008052	Identifier	m_lease_duration		3007966	1					
ANR	3008053	ExpressionStatement	this -> m_lease_time = buf . m_fields . m_lease_time	269:1:6084:6133	3007966	28	True				
ANR	3008054	AssignmentExpression	this -> m_lease_time = buf . m_fields . m_lease_time		3007966	0		=			
ANR	3008055	PtrMemberAccess	this -> m_lease_time		3007966	0					
ANR	3008056	Identifier	this		3007966	0					
ANR	3008057	Identifier	m_lease_time		3007966	1					
ANR	3008058	MemberAccess	buf . m_fields . m_lease_time		3007966	1					
ANR	3008059	MemberAccess	buf . m_fields		3007966	0					
ANR	3008060	Identifier	buf		3007966	0					
ANR	3008061	Identifier	m_fields		3007966	1					
ANR	3008062	Identifier	m_lease_time		3007966	1					
ANR	3008063	ExpressionStatement	this -> m_release_lease_when_done = buf . m_fields . m_release_lease_when_done	270:1:6136:6208	3007966	29	True				
ANR	3008064	AssignmentExpression	this -> m_release_lease_when_done = buf . m_fields . m_release_lease_when_done		3007966	0		=			
ANR	3008065	PtrMemberAccess	this -> m_release_lease_when_done		3007966	0					
ANR	3008066	Identifier	this		3007966	0					
ANR	3008067	Identifier	m_release_lease_when_done		3007966	1					
ANR	3008068	MemberAccess	buf . m_fields . m_release_lease_when_done		3007966	1					
ANR	3008069	MemberAccess	buf . m_fields		3007966	0					
ANR	3008070	Identifier	buf		3007966	0					
ANR	3008071	Identifier	m_fields		3007966	1					
ANR	3008072	Identifier	m_release_lease_when_done		3007966	1					
ANR	3008073	ExpressionStatement	this -> m_mark = buf . m_fields . m_mark	271:1:6211:6249	3007966	30	True				
ANR	3008074	AssignmentExpression	this -> m_mark = buf . m_fields . m_mark		3007966	0		=			
ANR	3008075	PtrMemberAccess	this -> m_mark		3007966	0					
ANR	3008076	Identifier	this		3007966	0					
ANR	3008077	Identifier	m_mark		3007966	1					
ANR	3008078	MemberAccess	buf . m_fields . m_mark		3007966	1					
ANR	3008079	MemberAccess	buf . m_fields		3007966	0					
ANR	3008080	Identifier	buf		3007966	0					
ANR	3008081	Identifier	m_fields		3007966	1					
ANR	3008082	Identifier	m_mark		3007966	1					
ANR	3008083	ExpressionStatement	this -> m_dead = buf . m_fields . m_dead	272:1:6252:6290	3007966	31	True				
ANR	3008084	AssignmentExpression	this -> m_dead = buf . m_fields . m_dead		3007966	0		=			
ANR	3008085	PtrMemberAccess	this -> m_dead		3007966	0					
ANR	3008086	Identifier	this		3007966	0					
ANR	3008087	Identifier	m_dead		3007966	1					
ANR	3008088	MemberAccess	buf . m_fields . m_dead		3007966	1					
ANR	3008089	MemberAccess	buf . m_fields		3007966	0					
ANR	3008090	Identifier	buf		3007966	0					
ANR	3008091	Identifier	m_fields		3007966	1					
ANR	3008092	Identifier	m_dead		3007966	1					
ANR	3008093	ReturnStatement	return true ;	274:1:6294:6305	3007966	32	True				
ANR	3008094	Identifier	true		3007966	0					
ANR	3008095	ReturnType	bool		3007966	1					
ANR	3008096	Identifier	DCLeaseManagerLease :: fread		3007966	2					
ANR	3008097	ParameterList	FILE * fp		3007966	3					
ANR	3008098	Parameter	FILE * fp	252:28:5696:5703	3007966	0	True				
ANR	3008099	ParameterType	FILE *		3007966	0					
ANR	3008100	Identifier	fp		3007966	1					
ANR	3008101	CFGEntryNode	ENTRY		3007966		True				
ANR	3008102	CFGExitNode	EXIT		3007966		True				
ANR	3008103	Symbol	this -> m_dead		3007966						
ANR	3008104	Symbol	fp		3007966						
ANR	3008105	Symbol	this -> m_release_lease_when_done		3007966						
ANR	3008106	Symbol	buf . m_fields . m_mark		3007966						
ANR	3008107	Symbol	this -> m_lease_id		3007966						
ANR	3008108	Symbol	buf . m_fields . m_dead		3007966						
ANR	3008109	Symbol	this -> m_lease_duration		3007966						
ANR	3008110	Symbol	buf . m_fields . m_lease_duration		3007966						
ANR	3008111	Symbol	buf . m_fields . m_lease_id		3007966						
ANR	3008112	Symbol	this -> m_lease_ad		3007966						
ANR	3008113	Symbol	NULL		3007966						
ANR	3008114	Symbol	buf . m_fields . m_lease_ad		3007966						
ANR	3008115	Symbol	false		3007966						
ANR	3008116	Symbol	this		3007966						
ANR	3008117	Symbol	buf . m_fields . m_release_lease_when_done		3007966						
ANR	3008118	Symbol	this -> m_mark		3007966						
ANR	3008119	Symbol	this -> m_lease_time		3007966						
ANR	3008120	Symbol	parser . ParseClassAd		3007966						
ANR	3008121	Symbol	str		3007966						
ANR	3008122	Symbol	* this		3007966						
ANR	3008123	Symbol	buf		3007966						
ANR	3008124	Symbol	parser		3007966						
ANR	3008125	Symbol	buf . m_fields . m_lease_time		3007966						
ANR	3008126	Symbol	buf . m_fields		3007966						
ANR	3008127	Symbol	true		3007966						
ANR	3008128	Function	DCLeaseManagerLease_freeList	280:0:6361:6613							
ANR	3008129	FunctionDef	DCLeaseManagerLease_freeList (list < DCLeaseManagerLease * > & lease_list)		3008128	0					
ANR	3008130	CompoundStatement		282:0:6437:6613	3008128	0					
ANR	3008131	IdentifierDeclStatement	int count = 0 ;	283:1:6440:6454	3008128	0	True				
ANR	3008132	IdentifierDecl	count = 0		3008128	0					
ANR	3008133	IdentifierDeclType	int		3008128	0					
ANR	3008134	Identifier	count		3008128	1					
ANR	3008135	AssignmentExpression	count = 0		3008128	2		=			
ANR	3008136	Identifier	count		3008128	0					
ANR	3008137	PrimaryExpression	0		3008128	1					
ANR	3008138	WhileStatement	while ( lease_list . size ( ) )		3008128	1					
ANR	3008139	Condition	lease_list . size ( )	284:8:6464:6480	3008128	0	True				
ANR	3008140	CallExpression	lease_list . size ( )		3008128	0					
ANR	3008141	Callee	lease_list . size		3008128	0					
ANR	3008142	MemberAccess	lease_list . size		3008128	0					
ANR	3008143	Identifier	lease_list		3008128	0					
ANR	3008144	Identifier	size		3008128	1					
ANR	3008145	ArgumentList			3008128	1					
ANR	3008146	CompoundStatement		4:2:50:101	3008128	1					
ANR	3008147	IdentifierDeclStatement	DCLeaseManagerLease * lease = * ( lease_list . begin ( ) ) ;	285:2:6488:6539	3008128	0	True				
ANR	3008148	IdentifierDecl	* lease = * ( lease_list . begin ( ) )		3008128	0					
ANR	3008149	IdentifierDeclType	DCLeaseManagerLease *		3008128	0					
ANR	3008150	Identifier	lease		3008128	1					
ANR	3008151	AssignmentExpression	* lease = * ( lease_list . begin ( ) )		3008128	2		=			
ANR	3008152	Identifier	lease		3008128	0					
ANR	3008153	UnaryOperationExpression	* ( lease_list . begin ( ) )		3008128	1					
ANR	3008154	UnaryOperator	*		3008128	0					
ANR	3008155	CallExpression	lease_list . begin ( )		3008128	1					
ANR	3008156	Callee	lease_list . begin		3008128	0					
ANR	3008157	MemberAccess	lease_list . begin		3008128	0					
ANR	3008158	Identifier	lease_list		3008128	0					
ANR	3008159	Identifier	begin		3008128	1					
ANR	3008160	ArgumentList			3008128	1					
ANR	3008161	Statement	delete	286:2:6543:6548	3008128	1	True				
ANR	3008162	ExpressionStatement	lease	286:9:6550:6555	3008128	2	True				
ANR	3008163	Identifier	lease		3008128	0					
ANR	3008164	ExpressionStatement	lease_list . pop_front ( )	287:2:6559:6582	3008128	3	True				
ANR	3008165	CallExpression	lease_list . pop_front ( )		3008128	0					
ANR	3008166	Callee	lease_list . pop_front		3008128	0					
ANR	3008167	MemberAccess	lease_list . pop_front		3008128	0					
ANR	3008168	Identifier	lease_list		3008128	0					
ANR	3008169	Identifier	pop_front		3008128	1					
ANR	3008170	ArgumentList			3008128	1					
ANR	3008171	ExpressionStatement	count ++	288:2:6586:6593	3008128	4	True				
ANR	3008172	PostIncDecOperationExpression	count ++		3008128	0					
ANR	3008173	Identifier	count		3008128	0					
ANR	3008174	IncDec	++		3008128	1					
ANR	3008175	ReturnStatement	return count ;	290:1:6599:6611	3008128	2	True				
ANR	3008176	Identifier	count		3008128	0					
ANR	3008177	ReturnType	int		3008128	1					
ANR	3008178	Identifier	DCLeaseManagerLease_freeList		3008128	2					
ANR	3008179	ParameterList	list < DCLeaseManagerLease * > & lease_list		3008128	3					
ANR	3008180	Parameter	list < DCLeaseManagerLease * > & lease_list	281:30:6395:6433	3008128	0	True				
ANR	3008181	ParameterType	list < DCLeaseManagerLease * > &		3008128	0					
ANR	3008182	Identifier	lease_list		3008128	1					
ANR	3008183	CFGEntryNode	ENTRY		3008128		True				
ANR	3008184	CFGExitNode	EXIT		3008128		True				
ANR	3008185	Symbol	lease_list		3008128						
ANR	3008186	Symbol	lease_list . begin		3008128						
ANR	3008187	Symbol	* lease_list . begin		3008128						
ANR	3008188	Symbol	* lease_list		3008128						
ANR	3008189	Symbol	* ( lease_list . begin ( ) )		3008128						
ANR	3008190	Symbol	count		3008128						
ANR	3008191	Symbol	lease_list . size		3008128						
ANR	3008192	Symbol	lease		3008128						
ANR	3008193	Function	DCLeaseManagerLease_copyList	293:0:6616:7009							
ANR	3008194	FunctionDef	"DCLeaseManagerLease_copyList (const list < const DCLeaseManagerLease * > & source_list , list < const DCLeaseManagerLease * > & dest_list)"		3008193	0					
ANR	3008195	CompoundStatement		297:0:6754:7009	3008193	0					
ANR	3008196	IdentifierDeclStatement	int count = 0 ;	298:1:6757:6771	3008193	0	True				
ANR	3008197	IdentifierDecl	count = 0		3008193	0					
ANR	3008198	IdentifierDeclType	int		3008193	0					
ANR	3008199	Identifier	count		3008193	1					
ANR	3008200	AssignmentExpression	count = 0		3008193	2		=			
ANR	3008201	Identifier	count		3008193	0					
ANR	3008202	PrimaryExpression	0		3008193	1					
ANR	3008203	IdentifierDeclStatement	list < const DCLeaseManagerLease * > :: const_iterator iter ;	300:1:6775:6829	3008193	1	True				
ANR	3008204	IdentifierDecl	iter		3008193	0					
ANR	3008205	IdentifierDeclType	list < const DCLeaseManagerLease * > :: const_iterator		3008193	0					
ANR	3008206	Identifier	iter		3008193	1					
ANR	3008207	ForStatement	for ( iter = source_list . begin ( ) ; iter != source_list . end ( ) ; iter ++ )		3008193	2					
ANR	3008208	ForInit	iter = source_list . begin ( ) ;	301:6:6837:6863	3008193	0	True				
ANR	3008209	AssignmentExpression	iter = source_list . begin ( )		3008193	0		=			
ANR	3008210	Identifier	iter		3008193	0					
ANR	3008211	CallExpression	source_list . begin ( )		3008193	1					
ANR	3008212	Callee	source_list . begin		3008193	0					
ANR	3008213	MemberAccess	source_list . begin		3008193	0					
ANR	3008214	Identifier	source_list		3008193	0					
ANR	3008215	Identifier	begin		3008193	1					
ANR	3008216	ArgumentList			3008193	1					
ANR	3008217	Condition	iter != source_list . end ( )	301:34:6865:6889	3008193	1	True				
ANR	3008218	EqualityExpression	iter != source_list . end ( )		3008193	0		!=			
ANR	3008219	Identifier	iter		3008193	0					
ANR	3008220	CallExpression	source_list . end ( )		3008193	1					
ANR	3008221	Callee	source_list . end		3008193	0					
ANR	3008222	MemberAccess	source_list . end		3008193	0					
ANR	3008223	Identifier	source_list		3008193	0					
ANR	3008224	Identifier	end		3008193	1					
ANR	3008225	ArgumentList			3008193	1					
ANR	3008226	PostIncDecOperationExpression	iter ++	301:61:6892:6897	3008193	2	True				
ANR	3008227	Identifier	iter		3008193	0					
ANR	3008228	IncDec	++		3008193	1					
ANR	3008229	CompoundStatement		6:2:150:190	3008193	3					
ANR	3008230	IdentifierDeclStatement	const DCLeaseManagerLease * lease = * iter ;	302:2:6905:6945	3008193	0	True				
ANR	3008231	IdentifierDecl	* lease = * iter		3008193	0					
ANR	3008232	IdentifierDeclType	const DCLeaseManagerLease *		3008193	0					
ANR	3008233	Identifier	lease		3008193	1					
ANR	3008234	AssignmentExpression	* lease = * iter		3008193	2		=			
ANR	3008235	Identifier	lease		3008193	0					
ANR	3008236	UnaryOperationExpression	* iter		3008193	1					
ANR	3008237	UnaryOperator	*		3008193	0					
ANR	3008238	Identifier	iter		3008193	1					
ANR	3008239	ExpressionStatement	dest_list . push_back ( lease )	303:2:6949:6977	3008193	1	True				
ANR	3008240	CallExpression	dest_list . push_back ( lease )		3008193	0					
ANR	3008241	Callee	dest_list . push_back		3008193	0					
ANR	3008242	MemberAccess	dest_list . push_back		3008193	0					
ANR	3008243	Identifier	dest_list		3008193	0					
ANR	3008244	Identifier	push_back		3008193	1					
ANR	3008245	ArgumentList	lease		3008193	1					
ANR	3008246	Argument	lease		3008193	0					
ANR	3008247	Identifier	lease		3008193	0					
ANR	3008248	ExpressionStatement	count ++	304:2:6981:6988	3008193	2	True				
ANR	3008249	PostIncDecOperationExpression	count ++		3008193	0					
ANR	3008250	Identifier	count		3008193	0					
ANR	3008251	IncDec	++		3008193	1					
ANR	3008252	ReturnStatement	return count ;	307:1:6995:7007	3008193	3	True				
ANR	3008253	Identifier	count		3008193	0					
ANR	3008254	ReturnType	int		3008193	1					
ANR	3008255	Identifier	DCLeaseManagerLease_copyList		3008193	2					
ANR	3008256	ParameterList	"const list < const DCLeaseManagerLease * > & source_list , list < const DCLeaseManagerLease * > & dest_list"		3008193	3					
ANR	3008257	Parameter	const list < const DCLeaseManagerLease * > & source_list	295:1:6651:6702	3008193	0	True				
ANR	3008258	ParameterType	const list < const DCLeaseManagerLease * > &		3008193	0					
ANR	3008259	Identifier	source_list		3008193	1					
ANR	3008260	Parameter	list < const DCLeaseManagerLease * > & dest_list	296:1:6706:6750	3008193	1	True				
ANR	3008261	ParameterType	list < const DCLeaseManagerLease * > &		3008193	0					
ANR	3008262	Identifier	dest_list		3008193	1					
ANR	3008263	CFGEntryNode	ENTRY		3008193		True				
ANR	3008264	CFGExitNode	EXIT		3008193		True				
ANR	3008265	Symbol	* iter		3008193						
ANR	3008266	Symbol	source_list		3008193						
ANR	3008267	Symbol	dest_list		3008193						
ANR	3008268	Symbol	source_list . begin		3008193						
ANR	3008269	Symbol	count		3008193						
ANR	3008270	Symbol	iter		3008193						
ANR	3008271	Symbol	lease		3008193						
ANR	3008272	Symbol	source_list . end		3008193						
ANR	3008273	Function	DCLeaseManagerLease_copyList	310:0:7012:7382							
ANR	3008274	FunctionDef	"DCLeaseManagerLease_copyList (const list < DCLeaseManagerLease * > & source_list , list < DCLeaseManagerLease * > & dest_list)"		3008273	0					
ANR	3008275	CompoundStatement		314:0:7139:7382	3008273	0					
ANR	3008276	IdentifierDeclStatement	int count = 0 ;	315:1:7142:7156	3008273	0	True				
ANR	3008277	IdentifierDecl	count = 0		3008273	0					
ANR	3008278	IdentifierDeclType	int		3008273	0					
ANR	3008279	Identifier	count		3008273	1					
ANR	3008280	AssignmentExpression	count = 0		3008273	2		=			
ANR	3008281	Identifier	count		3008273	0					
ANR	3008282	PrimaryExpression	0		3008273	1					
ANR	3008283	IdentifierDeclStatement	list < DCLeaseManagerLease * > :: const_iterator iter ;	317:1:7160:7208	3008273	1	True				
ANR	3008284	IdentifierDecl	iter		3008273	0					
ANR	3008285	IdentifierDeclType	list < DCLeaseManagerLease * > :: const_iterator		3008273	0					
ANR	3008286	Identifier	iter		3008273	1					
ANR	3008287	ForStatement	for ( iter = source_list . begin ( ) ; iter != source_list . end ( ) ; iter ++ )		3008273	2					
ANR	3008288	ForInit	iter = source_list . begin ( ) ;	318:6:7216:7242	3008273	0	True				
ANR	3008289	AssignmentExpression	iter = source_list . begin ( )		3008273	0		=			
ANR	3008290	Identifier	iter		3008273	0					
ANR	3008291	CallExpression	source_list . begin ( )		3008273	1					
ANR	3008292	Callee	source_list . begin		3008273	0					
ANR	3008293	MemberAccess	source_list . begin		3008273	0					
ANR	3008294	Identifier	source_list		3008273	0					
ANR	3008295	Identifier	begin		3008273	1					
ANR	3008296	ArgumentList			3008273	1					
ANR	3008297	Condition	iter != source_list . end ( )	318:34:7244:7268	3008273	1	True				
ANR	3008298	EqualityExpression	iter != source_list . end ( )		3008273	0		!=			
ANR	3008299	Identifier	iter		3008273	0					
ANR	3008300	CallExpression	source_list . end ( )		3008273	1					
ANR	3008301	Callee	source_list . end		3008273	0					
ANR	3008302	MemberAccess	source_list . end		3008273	0					
ANR	3008303	Identifier	source_list		3008273	0					
ANR	3008304	Identifier	end		3008273	1					
ANR	3008305	ArgumentList			3008273	1					
ANR	3008306	PostIncDecOperationExpression	iter ++	318:61:7271:7276	3008273	2	True				
ANR	3008307	Identifier	iter		3008273	0					
ANR	3008308	IncDec	++		3008273	1					
ANR	3008309	CompoundStatement		6:2:144:178	3008273	3					
ANR	3008310	IdentifierDeclStatement	DCLeaseManagerLease * lease = * iter ;	319:2:7284:7318	3008273	0	True				
ANR	3008311	IdentifierDecl	* lease = * iter		3008273	0					
ANR	3008312	IdentifierDeclType	DCLeaseManagerLease *		3008273	0					
ANR	3008313	Identifier	lease		3008273	1					
ANR	3008314	AssignmentExpression	* lease = * iter		3008273	2		=			
ANR	3008315	Identifier	lease		3008273	0					
ANR	3008316	UnaryOperationExpression	* iter		3008273	1					
ANR	3008317	UnaryOperator	*		3008273	0					
ANR	3008318	Identifier	iter		3008273	1					
ANR	3008319	ExpressionStatement	dest_list . push_back ( lease )	320:2:7322:7350	3008273	1	True				
ANR	3008320	CallExpression	dest_list . push_back ( lease )		3008273	0					
ANR	3008321	Callee	dest_list . push_back		3008273	0					
ANR	3008322	MemberAccess	dest_list . push_back		3008273	0					
ANR	3008323	Identifier	dest_list		3008273	0					
ANR	3008324	Identifier	push_back		3008273	1					
ANR	3008325	ArgumentList	lease		3008273	1					
ANR	3008326	Argument	lease		3008273	0					
ANR	3008327	Identifier	lease		3008273	0					
ANR	3008328	ExpressionStatement	count ++	321:2:7354:7361	3008273	2	True				
ANR	3008329	PostIncDecOperationExpression	count ++		3008273	0					
ANR	3008330	Identifier	count		3008273	0					
ANR	3008331	IncDec	++		3008273	1					
ANR	3008332	ReturnStatement	return count ;	324:1:7368:7380	3008273	3	True				
ANR	3008333	Identifier	count		3008273	0					
ANR	3008334	ReturnType	int		3008273	1					
ANR	3008335	Identifier	DCLeaseManagerLease_copyList		3008273	2					
ANR	3008336	ParameterList	"const list < DCLeaseManagerLease * > & source_list , list < DCLeaseManagerLease * > & dest_list"		3008273	3					
ANR	3008337	Parameter	const list < DCLeaseManagerLease * > & source_list	312:1:7047:7092	3008273	0	True				
ANR	3008338	ParameterType	const list < DCLeaseManagerLease * > &		3008273	0					
ANR	3008339	Identifier	source_list		3008273	1					
ANR	3008340	Parameter	list < DCLeaseManagerLease * > & dest_list	313:1:7096:7135	3008273	1	True				
ANR	3008341	ParameterType	list < DCLeaseManagerLease * > &		3008273	0					
ANR	3008342	Identifier	dest_list		3008273	1					
ANR	3008343	CFGEntryNode	ENTRY		3008273		True				
ANR	3008344	CFGExitNode	EXIT		3008273		True				
ANR	3008345	Symbol	* iter		3008273						
ANR	3008346	Symbol	source_list		3008273						
ANR	3008347	Symbol	dest_list		3008273						
ANR	3008348	Symbol	source_list . begin		3008273						
ANR	3008349	Symbol	count		3008273						
ANR	3008350	Symbol	iter		3008273						
ANR	3008351	Symbol	lease		3008273						
ANR	3008352	Symbol	source_list . end		3008273						
ANR	3008353	Function	DCLeaseManagerLease_removeLeases	327:0:7385:8127							
ANR	3008354	FunctionDef	"DCLeaseManagerLease_removeLeases (list < DCLeaseManagerLease * > & lease_list , const list < const DCLeaseManagerLease * > & remove_list)"		3008353	0					
ANR	3008355	CompoundStatement		332:0:7525:8127	3008353	0					
ANR	3008356	IdentifierDeclStatement	int errors = 0 ;	333:1:7528:7543	3008353	0	True				
ANR	3008357	IdentifierDecl	errors = 0		3008353	0					
ANR	3008358	IdentifierDeclType	int		3008353	0					
ANR	3008359	Identifier	errors		3008353	1					
ANR	3008360	AssignmentExpression	errors = 0		3008353	2		=			
ANR	3008361	Identifier	errors		3008353	0					
ANR	3008362	PrimaryExpression	0		3008353	1					
ANR	3008363	IdentifierDeclStatement	list < const DCLeaseManagerLease * > :: const_iterator iter ;	335:1:7547:7601	3008353	1	True				
ANR	3008364	IdentifierDecl	iter		3008353	0					
ANR	3008365	IdentifierDeclType	list < const DCLeaseManagerLease * > :: const_iterator		3008353	0					
ANR	3008366	Identifier	iter		3008353	1					
ANR	3008367	ForStatement	for ( iter = remove_list . begin ( ) ; iter != remove_list . end ( ) ; iter ++ )		3008353	2					
ANR	3008368	ForInit	iter = remove_list . begin ( ) ;	336:6:7609:7636	3008353	0	True				
ANR	3008369	AssignmentExpression	iter = remove_list . begin ( )		3008353	0		=			
ANR	3008370	Identifier	iter		3008353	0					
ANR	3008371	CallExpression	remove_list . begin ( )		3008353	1					
ANR	3008372	Callee	remove_list . begin		3008353	0					
ANR	3008373	MemberAccess	remove_list . begin		3008353	0					
ANR	3008374	Identifier	remove_list		3008353	0					
ANR	3008375	Identifier	begin		3008353	1					
ANR	3008376	ArgumentList			3008353	1					
ANR	3008377	Condition	iter != remove_list . end ( )	336:35:7638:7663	3008353	1	True				
ANR	3008378	EqualityExpression	iter != remove_list . end ( )		3008353	0		!=			
ANR	3008379	Identifier	iter		3008353	0					
ANR	3008380	CallExpression	remove_list . end ( )		3008353	1					
ANR	3008381	Callee	remove_list . end		3008353	0					
ANR	3008382	MemberAccess	remove_list . end		3008353	0					
ANR	3008383	Identifier	remove_list		3008353	0					
ANR	3008384	Identifier	end		3008353	1					
ANR	3008385	ArgumentList			3008353	1					
ANR	3008386	PostIncDecOperationExpression	iter ++	336:63:7666:7671	3008353	2	True				
ANR	3008387	Identifier	iter		3008353	0					
ANR	3008388	IncDec	++		3008353	1					
ANR	3008389	CompoundStatement		7:2:198:218	3008353	3					
ANR	3008390	IdentifierDeclStatement	const DCLeaseManagerLease * remove = * iter ;	337:2:7679:7720	3008353	0	True				
ANR	3008391	IdentifierDecl	* remove = * iter		3008353	0					
ANR	3008392	IdentifierDeclType	const DCLeaseManagerLease *		3008353	0					
ANR	3008393	Identifier	remove		3008353	1					
ANR	3008394	AssignmentExpression	* remove = * iter		3008353	2		=			
ANR	3008395	Identifier	remove		3008353	0					
ANR	3008396	UnaryOperationExpression	* iter		3008353	1					
ANR	3008397	UnaryOperator	*		3008353	0					
ANR	3008398	Identifier	iter		3008353	1					
ANR	3008399	IdentifierDeclStatement	bool matched = false ;	338:2:7724:7744	3008353	1	True				
ANR	3008400	IdentifierDecl	matched = false		3008353	0					
ANR	3008401	IdentifierDeclType	bool		3008353	0					
ANR	3008402	Identifier	matched		3008353	1					
ANR	3008403	AssignmentExpression	matched = false		3008353	2		=			
ANR	3008404	Identifier	false		3008353	0					
ANR	3008405	Identifier	false		3008353	1					
ANR	3008406	ForStatement	for ( list < DCLeaseManagerLease * > :: iterator iter2 = lease_list . begin ( ) ; iter2 != lease_list . end ( ) ; iter2 ++ )		3008353	2					
ANR	3008407	ForInit	list < DCLeaseManagerLease * > :: iterator iter2 = lease_list . begin ( ) ;	339:7:7753:7817	3008353	0	True				
ANR	3008408	IdentifierDeclStatement	list < DCLeaseManagerLease * > :: iterator iter2 = lease_list . begin ( ) ;		3008353	0					
ANR	3008409	IdentifierDecl	iter2 = lease_list . begin ( )		3008353	0					
ANR	3008410	IdentifierDeclType	list < DCLeaseManagerLease * > :: iterator		3008353	0					
ANR	3008411	Identifier	iter2		3008353	1					
ANR	3008412	AssignmentExpression	iter2 = lease_list . begin ( )		3008353	2		=			
ANR	3008413	Identifier	iter2		3008353	0					
ANR	3008414	CallExpression	lease_list . begin ( )		3008353	1					
ANR	3008415	Callee	lease_list . begin		3008353	0					
ANR	3008416	MemberAccess	lease_list . begin		3008353	0					
ANR	3008417	Identifier	lease_list		3008353	0					
ANR	3008418	Identifier	begin		3008353	1					
ANR	3008419	ArgumentList			3008353	1					
ANR	3008420	Condition	iter2 != lease_list . end ( )	340:4:7823:7847	3008353	1	True				
ANR	3008421	EqualityExpression	iter2 != lease_list . end ( )		3008353	0		!=			
ANR	3008422	Identifier	iter2		3008353	0					
ANR	3008423	CallExpression	lease_list . end ( )		3008353	1					
ANR	3008424	Callee	lease_list . end		3008353	0					
ANR	3008425	MemberAccess	lease_list . end		3008353	0					
ANR	3008426	Identifier	lease_list		3008353	0					
ANR	3008427	Identifier	end		3008353	1					
ANR	3008428	ArgumentList			3008353	1					
ANR	3008429	PostIncDecOperationExpression	iter2 ++	341:4:7854:7860	3008353	2	True				
ANR	3008430	Identifier	iter2		3008353	0					
ANR	3008431	IncDec	++		3008353	1					
ANR	3008432	CompoundStatement		11:3:343:378	3008353	3					
ANR	3008433	IdentifierDeclStatement	DCLeaseManagerLease * lease = * iter2 ;	342:3:7869:7904	3008353	0	True				
ANR	3008434	IdentifierDecl	* lease = * iter2		3008353	0					
ANR	3008435	IdentifierDeclType	DCLeaseManagerLease *		3008353	0					
ANR	3008436	Identifier	lease		3008353	1					
ANR	3008437	AssignmentExpression	* lease = * iter2		3008353	2		=			
ANR	3008438	Identifier	lease		3008353	0					
ANR	3008439	UnaryOperationExpression	* iter2		3008353	1					
ANR	3008440	UnaryOperator	*		3008353	0					
ANR	3008441	Identifier	iter2		3008353	1					
ANR	3008442	IfStatement	if ( remove -> leaseId ( ) == lease -> leaseId ( ) )		3008353	1					
ANR	3008443	Condition	remove -> leaseId ( ) == lease -> leaseId ( )	343:8:7914:7950	3008353	0	True				
ANR	3008444	EqualityExpression	remove -> leaseId ( ) == lease -> leaseId ( )		3008353	0		==			
ANR	3008445	CallExpression	remove -> leaseId ( )		3008353	0					
ANR	3008446	Callee	remove -> leaseId		3008353	0					
ANR	3008447	PtrMemberAccess	remove -> leaseId		3008353	0					
ANR	3008448	Identifier	remove		3008353	0					
ANR	3008449	Identifier	leaseId		3008353	1					
ANR	3008450	ArgumentList			3008353	1					
ANR	3008451	CallExpression	lease -> leaseId ( )		3008353	1					
ANR	3008452	Callee	lease -> leaseId		3008353	0					
ANR	3008453	PtrMemberAccess	lease -> leaseId		3008353	0					
ANR	3008454	Identifier	lease		3008353	0					
ANR	3008455	Identifier	leaseId		3008353	1					
ANR	3008456	ArgumentList			3008353	1					
ANR	3008457	CompoundStatement		12:48:428:428	3008353	1					
ANR	3008458	ExpressionStatement	matched = true	344:4:7960:7974	3008353	0	True				
ANR	3008459	AssignmentExpression	matched = true		3008353	0		=			
ANR	3008460	Identifier	matched		3008353	0					
ANR	3008461	Identifier	true		3008353	1					
ANR	3008462	ExpressionStatement	lease_list . erase ( iter2 )	345:4:7980:8005	3008353	1	True				
ANR	3008463	CallExpression	lease_list . erase ( iter2 )		3008353	0					
ANR	3008464	Callee	lease_list . erase		3008353	0					
ANR	3008465	MemberAccess	lease_list . erase		3008353	0					
ANR	3008466	Identifier	lease_list		3008353	0					
ANR	3008467	Identifier	erase		3008353	1					
ANR	3008468	ArgumentList	iter2		3008353	1					
ANR	3008469	Argument	iter2		3008353	0					
ANR	3008470	Identifier	iter2		3008353	0					
ANR	3008471	Statement	delete	346:4:8037:8042	3008353	2	True				
ANR	3008472	ExpressionStatement	lease	346:11:8044:8049	3008353	3	True				
ANR	3008473	Identifier	lease		3008353	0					
ANR	3008474	BreakStatement	break ;	347:4:8055:8060	3008353	4	True				
ANR	3008475	IfStatement	if ( ! matched )		3008353	3					
ANR	3008476	Condition	! matched	350:7:8078:8085	3008353	0	True				
ANR	3008477	UnaryOperationExpression	! matched		3008353	0					
ANR	3008478	UnaryOperator	!		3008353	0					
ANR	3008479	Identifier	matched		3008353	1					
ANR	3008480	CompoundStatement		19:18:563:563	3008353	1					
ANR	3008481	ExpressionStatement	errors ++	351:3:8094:8102	3008353	0	True				
ANR	3008482	PostIncDecOperationExpression	errors ++		3008353	0					
ANR	3008483	Identifier	errors		3008353	0					
ANR	3008484	IncDec	++		3008353	1					
ANR	3008485	ReturnStatement	return errors ;	354:1:8112:8125	3008353	3	True				
ANR	3008486	Identifier	errors		3008353	0					
ANR	3008487	ReturnType	int		3008353	1					
ANR	3008488	Identifier	DCLeaseManagerLease_removeLeases		3008353	2					
ANR	3008489	ParameterList	"list < DCLeaseManagerLease * > & lease_list , const list < const DCLeaseManagerLease * > & remove_list"		3008353	3					
ANR	3008490	Parameter	list < DCLeaseManagerLease * > & lease_list	329:1:7424:7465	3008353	0	True				
ANR	3008491	ParameterType	list < DCLeaseManagerLease * > &		3008353	0					
ANR	3008492	Identifier	lease_list		3008353	1					
ANR	3008493	Parameter	const list < const DCLeaseManagerLease * > & remove_list	330:1:7469:7520	3008353	1	True				
ANR	3008494	ParameterType	const list < const DCLeaseManagerLease * > &		3008353	0					
ANR	3008495	Identifier	remove_list		3008353	1					
ANR	3008496	CFGEntryNode	ENTRY		3008353		True				
ANR	3008497	CFGExitNode	EXIT		3008353		True				
ANR	3008498	Symbol	remove -> leaseId		3008353						
ANR	3008499	Symbol	lease_list		3008353						
ANR	3008500	Symbol	lease_list . begin		3008353						
ANR	3008501	Symbol	lease_list . end		3008353						
ANR	3008502	Symbol	remove_list		3008353						
ANR	3008503	Symbol	remove_list . begin		3008353						
ANR	3008504	Symbol	* lease		3008353						
ANR	3008505	Symbol	iter2		3008353						
ANR	3008506	Symbol	false		3008353						
ANR	3008507	Symbol	iter		3008353						
ANR	3008508	Symbol	remove		3008353						
ANR	3008509	Symbol	* iter		3008353						
ANR	3008510	Symbol	lease -> leaseId		3008353						
ANR	3008511	Symbol	true		3008353						
ANR	3008512	Symbol	* remove		3008353						
ANR	3008513	Symbol	matched		3008353						
ANR	3008514	Symbol	* iter2		3008353						
ANR	3008515	Symbol	lease		3008353						
ANR	3008516	Symbol	errors		3008353						
ANR	3008517	Symbol	remove_list . end		3008353						
ANR	3008518	Function	DCLeaseManagerLease_updateLeases	357:0:8130:8818							
ANR	3008519	FunctionDef	"DCLeaseManagerLease_updateLeases (list < DCLeaseManagerLease * > & lease_list , const list < const DCLeaseManagerLease * > & update_list)"		3008518	0					
ANR	3008520	CompoundStatement		362:0:8270:8818	3008518	0					
ANR	3008521	IdentifierDeclStatement	int errors = 0 ;	363:1:8273:8288	3008518	0	True				
ANR	3008522	IdentifierDecl	errors = 0		3008518	0					
ANR	3008523	IdentifierDeclType	int		3008518	0					
ANR	3008524	Identifier	errors		3008518	1					
ANR	3008525	AssignmentExpression	errors = 0		3008518	2		=			
ANR	3008526	Identifier	errors		3008518	0					
ANR	3008527	PrimaryExpression	0		3008518	1					
ANR	3008528	IdentifierDeclStatement	list < const DCLeaseManagerLease * > :: const_iterator iter ;	365:1:8292:8346	3008518	1	True				
ANR	3008529	IdentifierDecl	iter		3008518	0					
ANR	3008530	IdentifierDeclType	list < const DCLeaseManagerLease * > :: const_iterator		3008518	0					
ANR	3008531	Identifier	iter		3008518	1					
ANR	3008532	ForStatement	for ( iter = update_list . begin ( ) ; iter != update_list . end ( ) ; iter ++ )		3008518	2					
ANR	3008533	ForInit	iter = update_list . begin ( ) ;	366:6:8354:8381	3008518	0	True				
ANR	3008534	AssignmentExpression	iter = update_list . begin ( )		3008518	0		=			
ANR	3008535	Identifier	iter		3008518	0					
ANR	3008536	CallExpression	update_list . begin ( )		3008518	1					
ANR	3008537	Callee	update_list . begin		3008518	0					
ANR	3008538	MemberAccess	update_list . begin		3008518	0					
ANR	3008539	Identifier	update_list		3008518	0					
ANR	3008540	Identifier	begin		3008518	1					
ANR	3008541	ArgumentList			3008518	1					
ANR	3008542	Condition	iter != update_list . end ( )	366:35:8383:8408	3008518	1	True				
ANR	3008543	EqualityExpression	iter != update_list . end ( )		3008518	0		!=			
ANR	3008544	Identifier	iter		3008518	0					
ANR	3008545	CallExpression	update_list . end ( )		3008518	1					
ANR	3008546	Callee	update_list . end		3008518	0					
ANR	3008547	MemberAccess	update_list . end		3008518	0					
ANR	3008548	Identifier	update_list		3008518	0					
ANR	3008549	Identifier	end		3008518	1					
ANR	3008550	ArgumentList			3008518	1					
ANR	3008551	PostIncDecOperationExpression	iter ++	366:63:8411:8416	3008518	2	True				
ANR	3008552	Identifier	iter		3008518	0					
ANR	3008553	IncDec	++		3008518	1					
ANR	3008554	CompoundStatement		7:2:198:218	3008518	3					
ANR	3008555	IdentifierDeclStatement	const DCLeaseManagerLease * update = * iter ;	367:2:8424:8465	3008518	0	True				
ANR	3008556	IdentifierDecl	* update = * iter		3008518	0					
ANR	3008557	IdentifierDeclType	const DCLeaseManagerLease *		3008518	0					
ANR	3008558	Identifier	update		3008518	1					
ANR	3008559	AssignmentExpression	* update = * iter		3008518	2		=			
ANR	3008560	Identifier	update		3008518	0					
ANR	3008561	UnaryOperationExpression	* iter		3008518	1					
ANR	3008562	UnaryOperator	*		3008518	0					
ANR	3008563	Identifier	iter		3008518	1					
ANR	3008564	IdentifierDeclStatement	bool matched = false ;	368:2:8469:8489	3008518	1	True				
ANR	3008565	IdentifierDecl	matched = false		3008518	0					
ANR	3008566	IdentifierDeclType	bool		3008518	0					
ANR	3008567	Identifier	matched		3008518	1					
ANR	3008568	AssignmentExpression	matched = false		3008518	2		=			
ANR	3008569	Identifier	false		3008518	0					
ANR	3008570	Identifier	false		3008518	1					
ANR	3008571	ForStatement	for ( list < DCLeaseManagerLease * > :: iterator iter2 = lease_list . begin ( ) ; iter2 != lease_list . end ( ) ; iter2 ++ )		3008518	2					
ANR	3008572	ForInit	list < DCLeaseManagerLease * > :: iterator iter2 = lease_list . begin ( ) ;	369:7:8498:8562	3008518	0	True				
ANR	3008573	IdentifierDeclStatement	list < DCLeaseManagerLease * > :: iterator iter2 = lease_list . begin ( ) ;		3008518	0					
ANR	3008574	IdentifierDecl	iter2 = lease_list . begin ( )		3008518	0					
ANR	3008575	IdentifierDeclType	list < DCLeaseManagerLease * > :: iterator		3008518	0					
ANR	3008576	Identifier	iter2		3008518	1					
ANR	3008577	AssignmentExpression	iter2 = lease_list . begin ( )		3008518	2		=			
ANR	3008578	Identifier	iter2		3008518	0					
ANR	3008579	CallExpression	lease_list . begin ( )		3008518	1					
ANR	3008580	Callee	lease_list . begin		3008518	0					
ANR	3008581	MemberAccess	lease_list . begin		3008518	0					
ANR	3008582	Identifier	lease_list		3008518	0					
ANR	3008583	Identifier	begin		3008518	1					
ANR	3008584	ArgumentList			3008518	1					
ANR	3008585	Condition	iter2 != lease_list . end ( )	370:4:8568:8592	3008518	1	True				
ANR	3008586	EqualityExpression	iter2 != lease_list . end ( )		3008518	0		!=			
ANR	3008587	Identifier	iter2		3008518	0					
ANR	3008588	CallExpression	lease_list . end ( )		3008518	1					
ANR	3008589	Callee	lease_list . end		3008518	0					
ANR	3008590	MemberAccess	lease_list . end		3008518	0					
ANR	3008591	Identifier	lease_list		3008518	0					
ANR	3008592	Identifier	end		3008518	1					
ANR	3008593	ArgumentList			3008518	1					
ANR	3008594	PostIncDecOperationExpression	iter2 ++	371:4:8599:8605	3008518	2	True				
ANR	3008595	Identifier	iter2		3008518	0					
ANR	3008596	IncDec	++		3008518	1					
ANR	3008597	CompoundStatement		11:3:343:378	3008518	3					
ANR	3008598	IdentifierDeclStatement	DCLeaseManagerLease * lease = * iter2 ;	372:3:8614:8649	3008518	0	True				
ANR	3008599	IdentifierDecl	* lease = * iter2		3008518	0					
ANR	3008600	IdentifierDeclType	DCLeaseManagerLease *		3008518	0					
ANR	3008601	Identifier	lease		3008518	1					
ANR	3008602	AssignmentExpression	* lease = * iter2		3008518	2		=			
ANR	3008603	Identifier	lease		3008518	0					
ANR	3008604	UnaryOperationExpression	* iter2		3008518	1					
ANR	3008605	UnaryOperator	*		3008518	0					
ANR	3008606	Identifier	iter2		3008518	1					
ANR	3008607	IfStatement	if ( update -> idMatch ( * lease ) )		3008518	1					
ANR	3008608	Condition	update -> idMatch ( * lease )	373:8:8659:8681	3008518	0	True				
ANR	3008609	CallExpression	update -> idMatch ( * lease )		3008518	0					
ANR	3008610	Callee	update -> idMatch		3008518	0					
ANR	3008611	PtrMemberAccess	update -> idMatch		3008518	0					
ANR	3008612	Identifier	update		3008518	0					
ANR	3008613	Identifier	idMatch		3008518	1					
ANR	3008614	ArgumentList	* lease		3008518	1					
ANR	3008615	Argument	* lease		3008518	0					
ANR	3008616	UnaryOperationExpression	* lease		3008518	0					
ANR	3008617	UnaryOperator	*		3008518	0					
ANR	3008618	Identifier	lease		3008518	1					
ANR	3008619	CompoundStatement		12:34:414:414	3008518	1					
ANR	3008620	ExpressionStatement	matched = true	374:4:8691:8705	3008518	0	True				
ANR	3008621	AssignmentExpression	matched = true		3008518	0		=			
ANR	3008622	Identifier	matched		3008518	0					
ANR	3008623	Identifier	true		3008518	1					
ANR	3008624	ExpressionStatement	lease -> copyUpdates ( * update )	375:4:8711:8740	3008518	1	True				
ANR	3008625	CallExpression	lease -> copyUpdates ( * update )		3008518	0					
ANR	3008626	Callee	lease -> copyUpdates		3008518	0					
ANR	3008627	PtrMemberAccess	lease -> copyUpdates		3008518	0					
ANR	3008628	Identifier	lease		3008518	0					
ANR	3008629	Identifier	copyUpdates		3008518	1					
ANR	3008630	ArgumentList	* update		3008518	1					
ANR	3008631	Argument	* update		3008518	0					
ANR	3008632	UnaryOperationExpression	* update		3008518	0					
ANR	3008633	UnaryOperator	*		3008518	0					
ANR	3008634	Identifier	update		3008518	1					
ANR	3008635	BreakStatement	break ;	376:4:8746:8751	3008518	2	True				
ANR	3008636	IfStatement	if ( ! matched )		3008518	3					
ANR	3008637	Condition	! matched	379:7:8769:8776	3008518	0	True				
ANR	3008638	UnaryOperationExpression	! matched		3008518	0					
ANR	3008639	UnaryOperator	!		3008518	0					
ANR	3008640	Identifier	matched		3008518	1					
ANR	3008641	CompoundStatement		18:18:509:509	3008518	1					
ANR	3008642	ExpressionStatement	errors ++	380:3:8785:8793	3008518	0	True				
ANR	3008643	PostIncDecOperationExpression	errors ++		3008518	0					
ANR	3008644	Identifier	errors		3008518	0					
ANR	3008645	IncDec	++		3008518	1					
ANR	3008646	ReturnStatement	return errors ;	383:1:8803:8816	3008518	3	True				
ANR	3008647	Identifier	errors		3008518	0					
ANR	3008648	ReturnType	int		3008518	1					
ANR	3008649	Identifier	DCLeaseManagerLease_updateLeases		3008518	2					
ANR	3008650	ParameterList	"list < DCLeaseManagerLease * > & lease_list , const list < const DCLeaseManagerLease * > & update_list"		3008518	3					
ANR	3008651	Parameter	list < DCLeaseManagerLease * > & lease_list	359:1:8169:8210	3008518	0	True				
ANR	3008652	ParameterType	list < DCLeaseManagerLease * > &		3008518	0					
ANR	3008653	Identifier	lease_list		3008518	1					
ANR	3008654	Parameter	const list < const DCLeaseManagerLease * > & update_list	360:1:8214:8265	3008518	1	True				
ANR	3008655	ParameterType	const list < const DCLeaseManagerLease * > &		3008518	0					
ANR	3008656	Identifier	update_list		3008518	1					
ANR	3008657	CFGEntryNode	ENTRY		3008518		True				
ANR	3008658	CFGExitNode	EXIT		3008518		True				
ANR	3008659	Symbol	lease_list		3008518						
ANR	3008660	Symbol	lease_list . begin		3008518						
ANR	3008661	Symbol	lease_list . end		3008518						
ANR	3008662	Symbol	* lease		3008518						
ANR	3008663	Symbol	iter2		3008518						
ANR	3008664	Symbol	* update		3008518						
ANR	3008665	Symbol	false		3008518						
ANR	3008666	Symbol	iter		3008518						
ANR	3008667	Symbol	update		3008518						
ANR	3008668	Symbol	update -> idMatch		3008518						
ANR	3008669	Symbol	* iter		3008518						
ANR	3008670	Symbol	true		3008518						
ANR	3008671	Symbol	update_list		3008518						
ANR	3008672	Symbol	matched		3008518						
ANR	3008673	Symbol	* iter2		3008518						
ANR	3008674	Symbol	update_list . begin		3008518						
ANR	3008675	Symbol	lease		3008518						
ANR	3008676	Symbol	update_list . end		3008518						
ANR	3008677	Symbol	errors		3008518						
ANR	3008678	Function	DCLeaseManagerLease_markLeases	386:0:8821:9114							
ANR	3008679	FunctionDef	"DCLeaseManagerLease_markLeases (list < DCLeaseManagerLease * > & lease_list , bool mark)"		3008678	0					
ANR	3008680	CompoundStatement		391:0:8920:9114	3008678	0					
ANR	3008681	ForStatement	for ( list < DCLeaseManagerLease * > :: iterator iter = lease_list . begin ( ) ; iter != lease_list . end ( ) ; iter ++ )		3008678	0					
ANR	3008682	ForInit	list < DCLeaseManagerLease * > :: iterator iter = lease_list . begin ( ) ;	392:6:8928:8991	3008678	0	True				
ANR	3008683	IdentifierDeclStatement	list < DCLeaseManagerLease * > :: iterator iter = lease_list . begin ( ) ;		3008678	0					
ANR	3008684	IdentifierDecl	iter = lease_list . begin ( )		3008678	0					
ANR	3008685	IdentifierDeclType	list < DCLeaseManagerLease * > :: iterator		3008678	0					
ANR	3008686	Identifier	iter		3008678	1					
ANR	3008687	AssignmentExpression	iter = lease_list . begin ( )		3008678	2		=			
ANR	3008688	Identifier	iter		3008678	0					
ANR	3008689	CallExpression	lease_list . begin ( )		3008678	1					
ANR	3008690	Callee	lease_list . begin		3008678	0					
ANR	3008691	MemberAccess	lease_list . begin		3008678	0					
ANR	3008692	Identifier	lease_list		3008678	0					
ANR	3008693	Identifier	begin		3008678	1					
ANR	3008694	ArgumentList			3008678	1					
ANR	3008695	Condition	iter != lease_list . end ( )	393:3:8996:9019	3008678	1	True				
ANR	3008696	EqualityExpression	iter != lease_list . end ( )		3008678	0		!=			
ANR	3008697	Identifier	iter		3008678	0					
ANR	3008698	CallExpression	lease_list . end ( )		3008678	1					
ANR	3008699	Callee	lease_list . end		3008678	0					
ANR	3008700	MemberAccess	lease_list . end		3008678	0					
ANR	3008701	Identifier	lease_list		3008678	0					
ANR	3008702	Identifier	end		3008678	1					
ANR	3008703	ArgumentList			3008678	1					
ANR	3008704	PostIncDecOperationExpression	iter ++	394:3:9025:9030	3008678	2	True				
ANR	3008705	Identifier	iter		3008678	0					
ANR	3008706	IncDec	++		3008678	1					
ANR	3008707	CompoundStatement		5:2:117:151	3008678	3					
ANR	3008708	IdentifierDeclStatement	DCLeaseManagerLease * lease = * iter ;	395:2:9038:9072	3008678	0	True				
ANR	3008709	IdentifierDecl	* lease = * iter		3008678	0					
ANR	3008710	IdentifierDeclType	DCLeaseManagerLease *		3008678	0					
ANR	3008711	Identifier	lease		3008678	1					
ANR	3008712	AssignmentExpression	* lease = * iter		3008678	2		=			
ANR	3008713	Identifier	lease		3008678	0					
ANR	3008714	UnaryOperationExpression	* iter		3008678	1					
ANR	3008715	UnaryOperator	*		3008678	0					
ANR	3008716	Identifier	iter		3008678	1					
ANR	3008717	ExpressionStatement	lease -> setMark ( mark )	396:2:9076:9098	3008678	1	True				
ANR	3008718	CallExpression	lease -> setMark ( mark )		3008678	0					
ANR	3008719	Callee	lease -> setMark		3008678	0					
ANR	3008720	PtrMemberAccess	lease -> setMark		3008678	0					
ANR	3008721	Identifier	lease		3008678	0					
ANR	3008722	Identifier	setMark		3008678	1					
ANR	3008723	ArgumentList	mark		3008678	1					
ANR	3008724	Argument	mark		3008678	0					
ANR	3008725	Identifier	mark		3008678	0					
ANR	3008726	ReturnStatement	return 0 ;	398:1:9104:9112	3008678	1	True				
ANR	3008727	PrimaryExpression	0		3008678	0					
ANR	3008728	ReturnType	int		3008678	1					
ANR	3008729	Identifier	DCLeaseManagerLease_markLeases		3008678	2					
ANR	3008730	ParameterList	"list < DCLeaseManagerLease * > & lease_list , bool mark"		3008678	3					
ANR	3008731	Parameter	list < DCLeaseManagerLease * > & lease_list	388:1:8858:8897	3008678	0	True				
ANR	3008732	ParameterType	list < DCLeaseManagerLease * > &		3008678	0					
ANR	3008733	Identifier	lease_list		3008678	1					
ANR	3008734	Parameter	bool mark	389:1:8901:8915	3008678	1	True				
ANR	3008735	ParameterType	bool		3008678	0					
ANR	3008736	Identifier	mark		3008678	1					
ANR	3008737	CFGEntryNode	ENTRY		3008678		True				
ANR	3008738	CFGExitNode	EXIT		3008678		True				
ANR	3008739	Symbol	* iter		3008678						
ANR	3008740	Symbol	lease_list		3008678						
ANR	3008741	Symbol	lease_list . begin		3008678						
ANR	3008742	Symbol	lease_list . end		3008678						
ANR	3008743	Symbol	iter		3008678						
ANR	3008744	Symbol	lease		3008678						
ANR	3008745	Symbol	mark		3008678						
ANR	3008746	Function	DCLeaseManagerLease_removeMarkedLeases	401:0:9117:9702							
ANR	3008747	FunctionDef	"DCLeaseManagerLease_removeMarkedLeases (list < DCLeaseManagerLease * > & lease_list , bool mark)"		3008746	0					
ANR	3008748	CompoundStatement		406:0:9224:9702	3008746	0					
ANR	3008749	IdentifierDeclStatement	list < const DCLeaseManagerLease * > remove_list ;	407:1:9227:9272	3008746	0	True				
ANR	3008750	IdentifierDecl	remove_list		3008746	0					
ANR	3008751	IdentifierDeclType	list < const DCLeaseManagerLease * >		3008746	0					
ANR	3008752	Identifier	remove_list		3008746	1					
ANR	3008753	IdentifierDeclStatement	list < const DCLeaseManagerLease * > const_list = DCLeaseManagerLease_getConstList ( lease_list ) ;	408:1:9275:9370	3008746	1	True				
ANR	3008754	IdentifierDecl	const_list = DCLeaseManagerLease_getConstList ( lease_list )		3008746	0					
ANR	3008755	IdentifierDeclType	list < const DCLeaseManagerLease * >		3008746	0					
ANR	3008756	Identifier	const_list		3008746	1					
ANR	3008757	AssignmentExpression	const_list = DCLeaseManagerLease_getConstList ( lease_list )		3008746	2		=			
ANR	3008758	Identifier	const_list		3008746	0					
ANR	3008759	CallExpression	DCLeaseManagerLease_getConstList ( lease_list )		3008746	1					
ANR	3008760	Callee	DCLeaseManagerLease_getConstList		3008746	0					
ANR	3008761	Identifier	DCLeaseManagerLease_getConstList		3008746	0					
ANR	3008762	ArgumentList	lease_list		3008746	1					
ANR	3008763	Argument	lease_list		3008746	0					
ANR	3008764	Identifier	lease_list		3008746	0					
ANR	3008765	ExpressionStatement	"DCLeaseManagerLease_getMarkedLeases ( const_list , mark , remove_list )"	410:1:9373:9441	3008746	2	True				
ANR	3008766	CallExpression	"DCLeaseManagerLease_getMarkedLeases ( const_list , mark , remove_list )"		3008746	0					
ANR	3008767	Callee	DCLeaseManagerLease_getMarkedLeases		3008746	0					
ANR	3008768	Identifier	DCLeaseManagerLease_getMarkedLeases		3008746	0					
ANR	3008769	ArgumentList	const_list		3008746	1					
ANR	3008770	Argument	const_list		3008746	0					
ANR	3008771	Identifier	const_list		3008746	0					
ANR	3008772	Argument	mark		3008746	1					
ANR	3008773	Identifier	mark		3008746	0					
ANR	3008774	Argument	remove_list		3008746	2					
ANR	3008775	Identifier	remove_list		3008746	0					
ANR	3008776	IdentifierDeclStatement	list < const DCLeaseManagerLease * > :: iterator iter ;	412:1:9445:9493	3008746	3	True				
ANR	3008777	IdentifierDecl	iter		3008746	0					
ANR	3008778	IdentifierDeclType	list < const DCLeaseManagerLease * > :: iterator		3008746	0					
ANR	3008779	Identifier	iter		3008746	1					
ANR	3008780	ForStatement	for ( iter = remove_list . begin ( ) ; iter != remove_list . end ( ) ; iter ++ )		3008746	4					
ANR	3008781	ForInit	iter = remove_list . begin ( ) ;	413:6:9501:9527	3008746	0	True				
ANR	3008782	AssignmentExpression	iter = remove_list . begin ( )		3008746	0		=			
ANR	3008783	Identifier	iter		3008746	0					
ANR	3008784	CallExpression	remove_list . begin ( )		3008746	1					
ANR	3008785	Callee	remove_list . begin		3008746	0					
ANR	3008786	MemberAccess	remove_list . begin		3008746	0					
ANR	3008787	Identifier	remove_list		3008746	0					
ANR	3008788	Identifier	begin		3008746	1					
ANR	3008789	ArgumentList			3008746	1					
ANR	3008790	Condition	iter != remove_list . end ( )	413:34:9529:9553	3008746	1	True				
ANR	3008791	EqualityExpression	iter != remove_list . end ( )		3008746	0		!=			
ANR	3008792	Identifier	iter		3008746	0					
ANR	3008793	CallExpression	remove_list . end ( )		3008746	1					
ANR	3008794	Callee	remove_list . end		3008746	0					
ANR	3008795	MemberAccess	remove_list . end		3008746	0					
ANR	3008796	Identifier	remove_list		3008746	0					
ANR	3008797	Identifier	end		3008746	1					
ANR	3008798	ArgumentList			3008746	1					
ANR	3008799	PostIncDecOperationExpression	iter ++	413:61:9556:9561	3008746	2	True				
ANR	3008800	Identifier	iter		3008746	0					
ANR	3008801	IncDec	++		3008746	1					
ANR	3008802	CompoundStatement		8:70:340:340	3008746	3					
ANR	3008803	Statement	DCLeaseManagerLease	414:2:9569:9587	3008746	0	True				
ANR	3008804	Statement	*	414:22:9589:9589	3008746	1	True				
ANR	3008805	Statement	lease	414:23:9590:9594	3008746	2	True				
ANR	3008806	Statement	=	414:29:9596:9596	3008746	3	True				
ANR	3008807	Statement	const_cast	414:31:9598:9607	3008746	4	True				
ANR	3008808	Statement	<	414:41:9608:9608	3008746	5	True				
ANR	3008809	Statement	DCLeaseManagerLease	414:42:9609:9627	3008746	6	True				
ANR	3008810	Statement	*	414:61:9628:9628	3008746	7	True				
ANR	3008811	Statement	>	414:62:9629:9629	3008746	8	True				
ANR	3008812	ExpressionStatement	* iter	414:63:9630:9639	3008746	9	True				
ANR	3008813	UnaryOperationExpression	* iter		3008746	0					
ANR	3008814	UnaryOperator	*		3008746	0					
ANR	3008815	Identifier	iter		3008746	1					
ANR	3008816	ExpressionStatement	lease_list . remove ( lease )	415:2:9643:9669	3008746	10	True				
ANR	3008817	CallExpression	lease_list . remove ( lease )		3008746	0					
ANR	3008818	Callee	lease_list . remove		3008746	0					
ANR	3008819	MemberAccess	lease_list . remove		3008746	0					
ANR	3008820	Identifier	lease_list		3008746	0					
ANR	3008821	Identifier	remove		3008746	1					
ANR	3008822	ArgumentList	lease		3008746	1					
ANR	3008823	Argument	lease		3008746	0					
ANR	3008824	Identifier	lease		3008746	0					
ANR	3008825	Statement	delete	416:2:9673:9678	3008746	11	True				
ANR	3008826	ExpressionStatement	lease	416:9:9680:9685	3008746	12	True				
ANR	3008827	Identifier	lease		3008746	0					
ANR	3008828	ReturnStatement	return 0 ;	419:1:9692:9700	3008746	5	True				
ANR	3008829	PrimaryExpression	0		3008746	0					
ANR	3008830	ReturnType	int		3008746	1					
ANR	3008831	Identifier	DCLeaseManagerLease_removeMarkedLeases		3008746	2					
ANR	3008832	ParameterList	"list < DCLeaseManagerLease * > & lease_list , bool mark"		3008746	3					
ANR	3008833	Parameter	list < DCLeaseManagerLease * > & lease_list	403:1:9162:9201	3008746	0	True				
ANR	3008834	ParameterType	list < DCLeaseManagerLease * > &		3008746	0					
ANR	3008835	Identifier	lease_list		3008746	1					
ANR	3008836	Parameter	bool mark	404:1:9205:9219	3008746	1	True				
ANR	3008837	ParameterType	bool		3008746	0					
ANR	3008838	Identifier	mark		3008746	1					
ANR	3008839	CFGEntryNode	ENTRY		3008746		True				
ANR	3008840	CFGExitNode	EXIT		3008746		True				
ANR	3008841	Symbol	lease_list		3008746						
ANR	3008842	Symbol	DCLeaseManagerLease_getConstList		3008746						
ANR	3008843	Symbol	remove_list		3008746						
ANR	3008844	Symbol	remove_list . begin		3008746						
ANR	3008845	Symbol	iter		3008746						
ANR	3008846	Symbol	const_list		3008746						
ANR	3008847	Symbol	lease		3008746						
ANR	3008848	Symbol	mark		3008746						
ANR	3008849	Symbol	remove_list . end		3008746						
ANR	3008850	Function	DCLeaseManagerLease_countMarkedLeases	422:0:9705:10089							
ANR	3008851	FunctionDef	"DCLeaseManagerLease_countMarkedLeases (const list < const DCLeaseManagerLease * > & lease_list , bool mark)"		3008850	0					
ANR	3008852	CompoundStatement		427:0:9822:10089	3008850	0					
ANR	3008853	IdentifierDeclStatement	int count = 0 ;	428:1:9825:9839	3008850	0	True				
ANR	3008854	IdentifierDecl	count = 0		3008850	0					
ANR	3008855	IdentifierDeclType	int		3008850	0					
ANR	3008856	Identifier	count		3008850	1					
ANR	3008857	AssignmentExpression	count = 0		3008850	2		=			
ANR	3008858	Identifier	count		3008850	0					
ANR	3008859	PrimaryExpression	0		3008850	1					
ANR	3008860	IdentifierDeclStatement	list < const DCLeaseManagerLease * > :: const_iterator iter ;	429:1:9842:9896	3008850	1	True				
ANR	3008861	IdentifierDecl	iter		3008850	0					
ANR	3008862	IdentifierDeclType	list < const DCLeaseManagerLease * > :: const_iterator		3008850	0					
ANR	3008863	Identifier	iter		3008850	1					
ANR	3008864	ForStatement	for ( iter = lease_list . begin ( ) ; iter != lease_list . end ( ) ; iter ++ )		3008850	2					
ANR	3008865	ForInit	iter = lease_list . begin ( ) ;	430:6:9904:9929	3008850	0	True				
ANR	3008866	AssignmentExpression	iter = lease_list . begin ( )		3008850	0		=			
ANR	3008867	Identifier	iter		3008850	0					
ANR	3008868	CallExpression	lease_list . begin ( )		3008850	1					
ANR	3008869	Callee	lease_list . begin		3008850	0					
ANR	3008870	MemberAccess	lease_list . begin		3008850	0					
ANR	3008871	Identifier	lease_list		3008850	0					
ANR	3008872	Identifier	begin		3008850	1					
ANR	3008873	ArgumentList			3008850	1					
ANR	3008874	Condition	iter != lease_list . end ( )	431:3:9934:9957	3008850	1	True				
ANR	3008875	EqualityExpression	iter != lease_list . end ( )		3008850	0		!=			
ANR	3008876	Identifier	iter		3008850	0					
ANR	3008877	CallExpression	lease_list . end ( )		3008850	1					
ANR	3008878	Callee	lease_list . end		3008850	0					
ANR	3008879	MemberAccess	lease_list . end		3008850	0					
ANR	3008880	Identifier	lease_list		3008850	0					
ANR	3008881	Identifier	end		3008850	1					
ANR	3008882	ArgumentList			3008850	1					
ANR	3008883	PostIncDecOperationExpression	iter ++	432:3:9963:9968	3008850	2	True				
ANR	3008884	Identifier	iter		3008850	0					
ANR	3008885	IncDec	++		3008850	1					
ANR	3008886	CompoundStatement		7:2:153:193	3008850	3					
ANR	3008887	IdentifierDeclStatement	const DCLeaseManagerLease * lease = * iter ;	433:2:9976:10016	3008850	0	True				
ANR	3008888	IdentifierDecl	* lease = * iter		3008850	0					
ANR	3008889	IdentifierDeclType	const DCLeaseManagerLease *		3008850	0					
ANR	3008890	Identifier	lease		3008850	1					
ANR	3008891	AssignmentExpression	* lease = * iter		3008850	2		=			
ANR	3008892	Identifier	lease		3008850	0					
ANR	3008893	UnaryOperationExpression	* iter		3008850	1					
ANR	3008894	UnaryOperator	*		3008850	0					
ANR	3008895	Identifier	iter		3008850	1					
ANR	3008896	IfStatement	if ( mark == lease -> getMark ( ) )		3008850	1					
ANR	3008897	Condition	mark == lease -> getMark ( )	434:7:10025:10049	3008850	0	True				
ANR	3008898	EqualityExpression	mark == lease -> getMark ( )		3008850	0		==			
ANR	3008899	Identifier	mark		3008850	0					
ANR	3008900	CallExpression	lease -> getMark ( )		3008850	1					
ANR	3008901	Callee	lease -> getMark		3008850	0					
ANR	3008902	PtrMemberAccess	lease -> getMark		3008850	0					
ANR	3008903	Identifier	lease		3008850	0					
ANR	3008904	Identifier	getMark		3008850	1					
ANR	3008905	ArgumentList			3008850	1					
ANR	3008906	CompoundStatement		8:35:230:230	3008850	1					
ANR	3008907	ExpressionStatement	count ++	435:3:10058:10065	3008850	0	True				
ANR	3008908	PostIncDecOperationExpression	count ++		3008850	0					
ANR	3008909	Identifier	count		3008850	0					
ANR	3008910	IncDec	++		3008850	1					
ANR	3008911	ReturnStatement	return count ;	438:1:10075:10087	3008850	3	True				
ANR	3008912	Identifier	count		3008850	0					
ANR	3008913	ReturnType	int		3008850	1					
ANR	3008914	Identifier	DCLeaseManagerLease_countMarkedLeases		3008850	2					
ANR	3008915	ParameterList	"const list < const DCLeaseManagerLease * > & lease_list , bool mark"		3008850	3					
ANR	3008916	Parameter	const list < const DCLeaseManagerLease * > & lease_list	424:1:9749:9799	3008850	0	True				
ANR	3008917	ParameterType	const list < const DCLeaseManagerLease * > &		3008850	0					
ANR	3008918	Identifier	lease_list		3008850	1					
ANR	3008919	Parameter	bool mark	425:1:9803:9817	3008850	1	True				
ANR	3008920	ParameterType	bool		3008850	0					
ANR	3008921	Identifier	mark		3008850	1					
ANR	3008922	CFGEntryNode	ENTRY		3008850		True				
ANR	3008923	CFGExitNode	EXIT		3008850		True				
ANR	3008924	Symbol	* iter		3008850						
ANR	3008925	Symbol	lease_list		3008850						
ANR	3008926	Symbol	lease_list . begin		3008850						
ANR	3008927	Symbol	lease_list . end		3008850						
ANR	3008928	Symbol	* lease		3008850						
ANR	3008929	Symbol	count		3008850						
ANR	3008930	Symbol	iter		3008850						
ANR	3008931	Symbol	lease -> getMark		3008850						
ANR	3008932	Symbol	lease		3008850						
ANR	3008933	Symbol	mark		3008850						
ANR	3008934	Function	DCLeaseManagerLease_getMarkedLeases	441:0:10092:10575							
ANR	3008935	FunctionDef	"DCLeaseManagerLease_getMarkedLeases (const list < const DCLeaseManagerLease * > & lease_list , bool mark , list < const DCLeaseManagerLease * > & marked_lease_list)"		3008934	0					
ANR	3008936	CompoundStatement		447:0:10266:10575	3008934	0					
ANR	3008937	IdentifierDeclStatement	int count = 0 ;	448:1:10269:10283	3008934	0	True				
ANR	3008938	IdentifierDecl	count = 0		3008934	0					
ANR	3008939	IdentifierDeclType	int		3008934	0					
ANR	3008940	Identifier	count		3008934	1					
ANR	3008941	AssignmentExpression	count = 0		3008934	2		=			
ANR	3008942	Identifier	count		3008934	0					
ANR	3008943	PrimaryExpression	0		3008934	1					
ANR	3008944	IdentifierDeclStatement	list < const DCLeaseManagerLease * > :: const_iterator iter ;	449:1:10286:10340	3008934	1	True				
ANR	3008945	IdentifierDecl	iter		3008934	0					
ANR	3008946	IdentifierDeclType	list < const DCLeaseManagerLease * > :: const_iterator		3008934	0					
ANR	3008947	Identifier	iter		3008934	1					
ANR	3008948	ForStatement	for ( iter = lease_list . begin ( ) ; iter != lease_list . end ( ) ; iter ++ )		3008934	2					
ANR	3008949	ForInit	iter = lease_list . begin ( ) ;	450:6:10348:10374	3008934	0	True				
ANR	3008950	AssignmentExpression	iter = lease_list . begin ( )		3008934	0		=			
ANR	3008951	Identifier	iter		3008934	0					
ANR	3008952	CallExpression	lease_list . begin ( )		3008934	1					
ANR	3008953	Callee	lease_list . begin		3008934	0					
ANR	3008954	MemberAccess	lease_list . begin		3008934	0					
ANR	3008955	Identifier	lease_list		3008934	0					
ANR	3008956	Identifier	begin		3008934	1					
ANR	3008957	ArgumentList			3008934	1					
ANR	3008958	Condition	iter != lease_list . end ( )	451:3:10379:10402	3008934	1	True				
ANR	3008959	EqualityExpression	iter != lease_list . end ( )		3008934	0		!=			
ANR	3008960	Identifier	iter		3008934	0					
ANR	3008961	CallExpression	lease_list . end ( )		3008934	1					
ANR	3008962	Callee	lease_list . end		3008934	0					
ANR	3008963	MemberAccess	lease_list . end		3008934	0					
ANR	3008964	Identifier	lease_list		3008934	0					
ANR	3008965	Identifier	end		3008934	1					
ANR	3008966	ArgumentList			3008934	1					
ANR	3008967	PostIncDecOperationExpression	iter ++	452:3:10408:10414	3008934	2	True				
ANR	3008968	Identifier	iter		3008934	0					
ANR	3008969	IncDec	++		3008934	1					
ANR	3008970	CompoundStatement		7:2:155:195	3008934	3					
ANR	3008971	IdentifierDeclStatement	const DCLeaseManagerLease * lease = * iter ;	453:2:10422:10462	3008934	0	True				
ANR	3008972	IdentifierDecl	* lease = * iter		3008934	0					
ANR	3008973	IdentifierDeclType	const DCLeaseManagerLease *		3008934	0					
ANR	3008974	Identifier	lease		3008934	1					
ANR	3008975	AssignmentExpression	* lease = * iter		3008934	2		=			
ANR	3008976	Identifier	lease		3008934	0					
ANR	3008977	UnaryOperationExpression	* iter		3008934	1					
ANR	3008978	UnaryOperator	*		3008934	0					
ANR	3008979	Identifier	iter		3008934	1					
ANR	3008980	IfStatement	if ( lease -> getMark ( ) == mark )		3008934	1					
ANR	3008981	Condition	lease -> getMark ( ) == mark	454:7:10471:10494	3008934	0	True				
ANR	3008982	EqualityExpression	lease -> getMark ( ) == mark		3008934	0		==			
ANR	3008983	CallExpression	lease -> getMark ( )		3008934	0					
ANR	3008984	Callee	lease -> getMark		3008934	0					
ANR	3008985	PtrMemberAccess	lease -> getMark		3008934	0					
ANR	3008986	Identifier	lease		3008934	0					
ANR	3008987	Identifier	getMark		3008934	1					
ANR	3008988	ArgumentList			3008934	1					
ANR	3008989	Identifier	mark		3008934	1					
ANR	3008990	CompoundStatement		8:34:231:231	3008934	1					
ANR	3008991	ExpressionStatement	marked_lease_list . push_back ( lease )	455:3:10503:10539	3008934	0	True				
ANR	3008992	CallExpression	marked_lease_list . push_back ( lease )		3008934	0					
ANR	3008993	Callee	marked_lease_list . push_back		3008934	0					
ANR	3008994	MemberAccess	marked_lease_list . push_back		3008934	0					
ANR	3008995	Identifier	marked_lease_list		3008934	0					
ANR	3008996	Identifier	push_back		3008934	1					
ANR	3008997	ArgumentList	lease		3008934	1					
ANR	3008998	Argument	lease		3008934	0					
ANR	3008999	Identifier	lease		3008934	0					
ANR	3009000	ExpressionStatement	count ++	456:3:10544:10551	3008934	1	True				
ANR	3009001	PostIncDecOperationExpression	count ++		3008934	0					
ANR	3009002	Identifier	count		3008934	0					
ANR	3009003	IncDec	++		3008934	1					
ANR	3009004	ReturnStatement	return count ;	459:1:10561:10573	3008934	3	True				
ANR	3009005	Identifier	count		3008934	0					
ANR	3009006	ReturnType	int		3008934	1					
ANR	3009007	Identifier	DCLeaseManagerLease_getMarkedLeases		3008934	2					
ANR	3009008	ParameterList	"const list < const DCLeaseManagerLease * > & lease_list , bool mark , list < const DCLeaseManagerLease * > & marked_lease_list"		3008934	3					
ANR	3009009	Parameter	const list < const DCLeaseManagerLease * > & lease_list	443:1:10134:10184	3008934	0	True				
ANR	3009010	ParameterType	const list < const DCLeaseManagerLease * > &		3008934	0					
ANR	3009011	Identifier	lease_list		3008934	1					
ANR	3009012	Parameter	bool mark	444:1:10188:10204	3008934	1	True				
ANR	3009013	ParameterType	bool		3008934	0					
ANR	3009014	Identifier	mark		3008934	1					
ANR	3009015	Parameter	list < const DCLeaseManagerLease * > & marked_lease_list	445:1:10208:10261	3008934	2	True				
ANR	3009016	ParameterType	list < const DCLeaseManagerLease * > &		3008934	0					
ANR	3009017	Identifier	marked_lease_list		3008934	1					
ANR	3009018	CFGEntryNode	ENTRY		3008934		True				
ANR	3009019	CFGExitNode	EXIT		3008934		True				
ANR	3009020	Symbol	marked_lease_list		3008934						
ANR	3009021	Symbol	* iter		3008934						
ANR	3009022	Symbol	lease_list		3008934						
ANR	3009023	Symbol	lease_list . begin		3008934						
ANR	3009024	Symbol	lease_list . end		3008934						
ANR	3009025	Symbol	* lease		3008934						
ANR	3009026	Symbol	count		3008934						
ANR	3009027	Symbol	iter		3008934						
ANR	3009028	Symbol	lease -> getMark		3008934						
ANR	3009029	Symbol	lease		3008934						
ANR	3009030	Symbol	mark		3008934						
ANR	3009031	Function	DCLeaseManagerLease_getConstList	462:0:10578:10925							
ANR	3009032	FunctionDef	DCLeaseManagerLease_getConstList (const list < DCLeaseManagerLease * > & non_const_list)		3009031	0					
ANR	3009033	CompoundStatement		466:0:10702:10925	3009031	0					
ANR	3009034	IdentifierDeclStatement	list < DCLeaseManagerLease * > LeaseList ;	467:9:10713:10752	3009031	0	True				
ANR	3009035	IdentifierDecl	LeaseList		3009031	0					
ANR	3009036	IdentifierDeclType	list < DCLeaseManagerLease * >		3009031	0					
ANR	3009037	Identifier	LeaseList		3009031	1					
ANR	3009038	IdentifierDeclStatement	list < const DCLeaseManagerLease * > ConstList ;	468:9:10763:10806	3009031	1	True				
ANR	3009039	IdentifierDecl	ConstList		3009031	0					
ANR	3009040	IdentifierDeclType	list < const DCLeaseManagerLease * >		3009031	0					
ANR	3009041	Identifier	ConstList		3009031	1					
ANR	3009042	IdentifierDeclStatement	const ConstList * const_list = ( const ConstList * ) & non_const_list ;	470:1:10810:10875	3009031	2	True				
ANR	3009043	IdentifierDecl	* const_list = ( const ConstList * ) & non_const_list		3009031	0					
ANR	3009044	IdentifierDeclType	const ConstList *		3009031	0					
ANR	3009045	Identifier	const_list		3009031	1					
ANR	3009046	AssignmentExpression	* const_list = ( const ConstList * ) & non_const_list		3009031	2		=			
ANR	3009047	Identifier	const_list		3009031	0					
ANR	3009048	CastExpression	( const ConstList * ) & non_const_list		3009031	1					
ANR	3009049	CastTarget	const ConstList *		3009031	0					
ANR	3009050	UnaryOperationExpression	& non_const_list		3009031	1					
ANR	3009051	UnaryOperator	&		3009031	0					
ANR	3009052	Identifier	non_const_list		3009031	1					
ANR	3009053	Statement	return	471:1:10878:10883	3009031	3	True				
ANR	3009054	Statement	*	471:8:10885:10885	3009031	4	True				
ANR	3009055	Statement	(	471:9:10886:10886	3009031	5	True				
ANR	3009056	Statement	const_cast	471:10:10887:10896	3009031	6	True				
ANR	3009057	Statement	<	471:20:10897:10897	3009031	7	True				
ANR	3009058	Statement	ConstList	471:21:10898:10906	3009031	8	True				
ANR	3009059	Statement	*	471:31:10908:10908	3009031	9	True				
ANR	3009060	Statement	>	471:32:10909:10909	3009031	10	True				
ANR	3009061	Statement	(	471:33:10910:10910	3009031	11	True				
ANR	3009062	Statement	const_list	471:34:10911:10920	3009031	12	True				
ANR	3009063	Statement	)	471:44:10921:10921	3009031	13	True				
ANR	3009064	Statement	)	471:45:10922:10922	3009031	14	True				
ANR	3009065	ExpressionStatement		471:46:10923:10923	3009031	15	True				
ANR	3009066	ReturnType	list < const DCLeaseManagerLease * > &		3009031	1					
ANR	3009067	Identifier	DCLeaseManagerLease_getConstList		3009031	2					
ANR	3009068	ParameterList	const list < DCLeaseManagerLease * > & non_const_list		3009031	3					
ANR	3009069	Parameter	const list < DCLeaseManagerLease * > & non_const_list	464:1:10649:10697	3009031	0	True				
ANR	3009070	ParameterType	const list < DCLeaseManagerLease * > &		3009031	0					
ANR	3009071	Identifier	non_const_list		3009031	1					
ANR	3009072	CFGEntryNode	ENTRY		3009031		True				
ANR	3009073	CFGExitNode	EXIT		3009031		True				
ANR	3009074	Symbol	& non_const_list		3009031						
ANR	3009075	Symbol	const_list		3009031						
ANR	3009076	Symbol	non_const_list		3009031						
ANR	3009077	Symbol	LeaseList		3009031						
ANR	3009078	Symbol	ConstList		3009031						
ANR	3009079	Function	DCLeaseManagerLease_fwriteList	474:0:10928:11313							
ANR	3009080	FunctionDef	"DCLeaseManagerLease_fwriteList (const list < const DCLeaseManagerLease * > & lease_list , FILE * fp)"		3009079	0					
ANR	3009081	CompoundStatement		479:0:11039:11313	3009079	0					
ANR	3009082	IdentifierDeclStatement	int count = 0 ;	480:1:11042:11056	3009079	0	True				
ANR	3009083	IdentifierDecl	count = 0		3009079	0					
ANR	3009084	IdentifierDeclType	int		3009079	0					
ANR	3009085	Identifier	count		3009079	1					
ANR	3009086	AssignmentExpression	count = 0		3009079	2		=			
ANR	3009087	Identifier	count		3009079	0					
ANR	3009088	PrimaryExpression	0		3009079	1					
ANR	3009089	IdentifierDeclStatement	list < const DCLeaseManagerLease * > :: const_iterator iter ;	481:1:11059:11113	3009079	1	True				
ANR	3009090	IdentifierDecl	iter		3009079	0					
ANR	3009091	IdentifierDeclType	list < const DCLeaseManagerLease * > :: const_iterator		3009079	0					
ANR	3009092	Identifier	iter		3009079	1					
ANR	3009093	ForStatement	for ( iter = lease_list . begin ( ) ; iter != lease_list . end ( ) ; iter ++ )		3009079	2					
ANR	3009094	ForInit	iter = lease_list . begin ( ) ;	482:6:11121:11147	3009079	0	True				
ANR	3009095	AssignmentExpression	iter = lease_list . begin ( )		3009079	0		=			
ANR	3009096	Identifier	iter		3009079	0					
ANR	3009097	CallExpression	lease_list . begin ( )		3009079	1					
ANR	3009098	Callee	lease_list . begin		3009079	0					
ANR	3009099	MemberAccess	lease_list . begin		3009079	0					
ANR	3009100	Identifier	lease_list		3009079	0					
ANR	3009101	Identifier	begin		3009079	1					
ANR	3009102	ArgumentList			3009079	1					
ANR	3009103	Condition	iter != lease_list . end ( )	483:3:11152:11175	3009079	1	True				
ANR	3009104	EqualityExpression	iter != lease_list . end ( )		3009079	0		!=			
ANR	3009105	Identifier	iter		3009079	0					
ANR	3009106	CallExpression	lease_list . end ( )		3009079	1					
ANR	3009107	Callee	lease_list . end		3009079	0					
ANR	3009108	MemberAccess	lease_list . end		3009079	0					
ANR	3009109	Identifier	lease_list		3009079	0					
ANR	3009110	Identifier	end		3009079	1					
ANR	3009111	ArgumentList			3009079	1					
ANR	3009112	PostIncDecOperationExpression	iter ++	484:3:11181:11187	3009079	2	True				
ANR	3009113	Identifier	iter		3009079	0					
ANR	3009114	IncDec	++		3009079	1					
ANR	3009115	CompoundStatement		7:2:155:195	3009079	3					
ANR	3009116	IdentifierDeclStatement	const DCLeaseManagerLease * lease = * iter ;	485:2:11195:11235	3009079	0	True				
ANR	3009117	IdentifierDecl	* lease = * iter		3009079	0					
ANR	3009118	IdentifierDeclType	const DCLeaseManagerLease *		3009079	0					
ANR	3009119	Identifier	lease		3009079	1					
ANR	3009120	AssignmentExpression	* lease = * iter		3009079	2		=			
ANR	3009121	Identifier	lease		3009079	0					
ANR	3009122	UnaryOperationExpression	* iter		3009079	1					
ANR	3009123	UnaryOperator	*		3009079	0					
ANR	3009124	Identifier	iter		3009079	1					
ANR	3009125	IfStatement	if ( ! lease -> fwrite ( fp ) )		3009079	1					
ANR	3009126	Condition	! lease -> fwrite ( fp )	486:7:11244:11264	3009079	0	True				
ANR	3009127	UnaryOperationExpression	! lease -> fwrite ( fp )		3009079	0					
ANR	3009128	UnaryOperator	!		3009079	0					
ANR	3009129	CallExpression	lease -> fwrite ( fp )		3009079	1					
ANR	3009130	Callee	lease -> fwrite		3009079	0					
ANR	3009131	PtrMemberAccess	lease -> fwrite		3009079	0					
ANR	3009132	Identifier	lease		3009079	0					
ANR	3009133	Identifier	fwrite		3009079	1					
ANR	3009134	ArgumentList	fp		3009079	1					
ANR	3009135	Argument	fp		3009079	0					
ANR	3009136	Identifier	fp		3009079	0					
ANR	3009137	CompoundStatement		8:31:228:228	3009079	1					
ANR	3009138	BreakStatement	break ;	487:3:11273:11278	3009079	0	True				
ANR	3009139	ExpressionStatement	count ++	489:2:11286:11293	3009079	2	True				
ANR	3009140	PostIncDecOperationExpression	count ++		3009079	0					
ANR	3009141	Identifier	count		3009079	0					
ANR	3009142	IncDec	++		3009079	1					
ANR	3009143	ReturnStatement	return count ;	491:1:11299:11311	3009079	3	True				
ANR	3009144	Identifier	count		3009079	0					
ANR	3009145	ReturnType	int		3009079	1					
ANR	3009146	Identifier	DCLeaseManagerLease_fwriteList		3009079	2					
ANR	3009147	ParameterList	"const list < const DCLeaseManagerLease * > & lease_list , FILE * fp"		3009079	3					
ANR	3009148	Parameter	const list < const DCLeaseManagerLease * > & lease_list	476:1:10965:11015	3009079	0	True				
ANR	3009149	ParameterType	const list < const DCLeaseManagerLease * > &		3009079	0					
ANR	3009150	Identifier	lease_list		3009079	1					
ANR	3009151	Parameter	FILE * fp	477:1:11019:11034	3009079	1	True				
ANR	3009152	ParameterType	FILE *		3009079	0					
ANR	3009153	Identifier	fp		3009079	1					
ANR	3009154	CFGEntryNode	ENTRY		3009079		True				
ANR	3009155	CFGExitNode	EXIT		3009079		True				
ANR	3009156	Symbol	* iter		3009079						
ANR	3009157	Symbol	lease_list		3009079						
ANR	3009158	Symbol	lease_list . begin		3009079						
ANR	3009159	Symbol	lease_list . end		3009079						
ANR	3009160	Symbol	* lease		3009079						
ANR	3009161	Symbol	lease -> fwrite		3009079						
ANR	3009162	Symbol	count		3009079						
ANR	3009163	Symbol	iter		3009079						
ANR	3009164	Symbol	fp		3009079						
ANR	3009165	Symbol	lease		3009079						
ANR	3009166	Function	DCLeaseManagerLease_freadList	494:0:11316:11643							
ANR	3009167	FunctionDef	"DCLeaseManagerLease_freadList (list < DCLeaseManagerLease * > & lease_list , FILE * fp)"		3009166	0					
ANR	3009168	CompoundStatement		499:0:11413:11643	3009166	0					
ANR	3009169	IdentifierDeclStatement	int count = 0 ;	500:1:11416:11430	3009166	0	True				
ANR	3009170	IdentifierDecl	count = 0		3009166	0					
ANR	3009171	IdentifierDeclType	int		3009166	0					
ANR	3009172	Identifier	count		3009166	1					
ANR	3009173	AssignmentExpression	count = 0		3009166	2		=			
ANR	3009174	Identifier	count		3009166	0					
ANR	3009175	PrimaryExpression	0		3009166	1					
ANR	3009176	WhileStatement	while ( 1 )		3009166	1					
ANR	3009177	Condition	1	501:8:11440:11440	3009166	0	True				
ANR	3009178	PrimaryExpression	1		3009166	0					
ANR	3009179	CompoundStatement		4:2:34:89	3009166	1					
ANR	3009180	IdentifierDeclStatement	DCLeaseManagerLease * lease = new DCLeaseManagerLease ( ) ;	502:2:11448:11503	3009166	0	True				
ANR	3009181	IdentifierDecl	* lease = new DCLeaseManagerLease ( )		3009166	0					
ANR	3009182	IdentifierDeclType	DCLeaseManagerLease *		3009166	0					
ANR	3009183	Identifier	lease		3009166	1					
ANR	3009184	AssignmentExpression	* lease = new DCLeaseManagerLease ( )		3009166	2		=			
ANR	3009185	Identifier	lease		3009166	0					
ANR	3009186	UnaryExpression	new DCLeaseManagerLease ( )		3009166	1					
ANR	3009187	IfStatement	if ( lease -> fread ( fp ) )		3009166	1					
ANR	3009188	Condition	lease -> fread ( fp )	503:7:11512:11529	3009166	0	True				
ANR	3009189	CallExpression	lease -> fread ( fp )		3009166	0					
ANR	3009190	Callee	lease -> fread		3009166	0					
ANR	3009191	PtrMemberAccess	lease -> fread		3009166	0					
ANR	3009192	Identifier	lease		3009166	0					
ANR	3009193	Identifier	fread		3009166	1					
ANR	3009194	ArgumentList	fp		3009166	1					
ANR	3009195	Argument	fp		3009166	0					
ANR	3009196	Identifier	fp		3009166	0					
ANR	3009197	CompoundStatement		5:28:119:119	3009166	1					
ANR	3009198	ExpressionStatement	lease_list . push_back ( lease )	504:3:11538:11567	3009166	0	True				
ANR	3009199	CallExpression	lease_list . push_back ( lease )		3009166	0					
ANR	3009200	Callee	lease_list . push_back		3009166	0					
ANR	3009201	MemberAccess	lease_list . push_back		3009166	0					
ANR	3009202	Identifier	lease_list		3009166	0					
ANR	3009203	Identifier	push_back		3009166	1					
ANR	3009204	ArgumentList	lease		3009166	1					
ANR	3009205	Argument	lease		3009166	0					
ANR	3009206	Identifier	lease		3009166	0					
ANR	3009207	ExpressionStatement	count ++	505:3:11572:11579	3009166	1	True				
ANR	3009208	PostIncDecOperationExpression	count ++		3009166	0					
ANR	3009209	Identifier	count		3009166	0					
ANR	3009210	IncDec	++		3009166	1					
ANR	3009211	ElseStatement	else		3009166	0					
ANR	3009212	CompoundStatement		9:7:178:178	3009166	0					
ANR	3009213	Statement	delete	508:3:11597:11602	3009166	0	True				
ANR	3009214	ExpressionStatement	lease	508:10:11604:11609	3009166	1	True				
ANR	3009215	Identifier	lease		3009166	0					
ANR	3009216	BreakStatement	break ;	509:3:11614:11619	3009166	2	True				
ANR	3009217	ReturnStatement	return count ;	512:1:11629:11641	3009166	2	True				
ANR	3009218	Identifier	count		3009166	0					
ANR	3009219	ReturnType	int		3009166	1					
ANR	3009220	Identifier	DCLeaseManagerLease_freadList		3009166	2					
ANR	3009221	ParameterList	"list < DCLeaseManagerLease * > & lease_list , FILE * fp"		3009166	3					
ANR	3009222	Parameter	list < DCLeaseManagerLease * > & lease_list	496:1:11352:11391	3009166	0	True				
ANR	3009223	ParameterType	list < DCLeaseManagerLease * > &		3009166	0					
ANR	3009224	Identifier	lease_list		3009166	1					
ANR	3009225	Parameter	FILE * fp	497:1:11395:11408	3009166	1	True				
ANR	3009226	ParameterType	FILE *		3009166	0					
ANR	3009227	Identifier	fp		3009166	1					
ANR	3009228	CFGEntryNode	ENTRY		3009166		True				
ANR	3009229	CFGExitNode	EXIT		3009166		True				
ANR	3009230	Symbol	lease_list		3009166						
ANR	3009231	Symbol	* lease		3009166						
ANR	3009232	Symbol	count		3009166						
ANR	3009233	Symbol	lease -> fread		3009166						
ANR	3009234	Symbol	fp		3009166						
ANR	3009235	Symbol	lease		3009166						
