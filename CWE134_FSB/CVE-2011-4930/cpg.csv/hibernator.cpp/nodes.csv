command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1616642	File	data/converged/CVE-2011-4930_htcondor/hibernator.cpp								
ANR	1616643	Function	HibernatorBase :: HibernatorBase	34:0:1211:1306							
ANR	1616644	FunctionDef	HibernatorBase :: HibernatorBase ()		1616643	0					
ANR	1616645	CompoundStatement		37:0:1304:1306	1616643	0					
ANR	1616646	Identifier	HibernatorBase :: HibernatorBase		1616643	1					
ANR	1616647	ParameterList			1616643	2					
ANR	1616648	CFGEntryNode	ENTRY		1616643		True				
ANR	1616649	CFGExitNode	EXIT		1616643		True				
ANR	1616650	Function	HibernatorBase :: ~HibernatorBase	41:0:1310:1356							
ANR	1616651	FunctionDef	HibernatorBase :: ~HibernatorBase ()		1616650	0					
ANR	1616652	CompoundStatement		42:0:1354:1356	1616650	0					
ANR	1616653	Identifier	HibernatorBase :: ~HibernatorBase		1616650	1					
ANR	1616654	ParameterList			1616650	2					
ANR	1616655	CFGEntryNode	ENTRY		1616650		True				
ANR	1616656	CFGExitNode	EXIT		1616650		True				
ANR	1616657	Function	HibernatorBase :: isStateValid	45:0:1359:1632							
ANR	1616658	FunctionDef	HibernatorBase :: isStateValid (SLEEP_STATE state)		1616657	0					
ANR	1616659	CompoundStatement		47:0:1415:1632	1616657	0					
ANR	1616660	SwitchStatement	switch ( state )		1616657	0					
ANR	1616661	Condition	state	48:10:1427:1431	1616657	0	True				
ANR	1616662	Identifier	state		1616657	0					
ANR	1616663	CompoundStatement		2:18:19:19	1616657	1					
ANR	1616664	Label	case NONE :	49:1:1438:1447	1616657	0	True				
ANR	1616665	Identifier	NONE		1616657	0					
ANR	1616666	ReturnStatement	return true ;	50:2:1465:1476	1616657	1	True				
ANR	1616667	Identifier	true		1616657	0					
ANR	1616668	Label	case S1 :	51:1:1479:1486	1616657	2	True				
ANR	1616669	Identifier	S1		1616657	0					
ANR	1616670	ReturnStatement	return true ;	52:2:1490:1501	1616657	3	True				
ANR	1616671	Identifier	true		1616657	0					
ANR	1616672	Label	case S2 :	53:1:1504:1511	1616657	4	True				
ANR	1616673	Identifier	S2		1616657	0					
ANR	1616674	ReturnStatement	return true ;	54:2:1515:1526	1616657	5	True				
ANR	1616675	Identifier	true		1616657	0					
ANR	1616676	Label	case S3 :	55:1:1529:1536	1616657	6	True				
ANR	1616677	Identifier	S3		1616657	0					
ANR	1616678	ReturnStatement	return true ;	56:2:1540:1551	1616657	7	True				
ANR	1616679	Identifier	true		1616657	0					
ANR	1616680	Label	case S4 :	57:1:1554:1561	1616657	8	True				
ANR	1616681	Identifier	S4		1616657	0					
ANR	1616682	ReturnStatement	return true ;	58:2:1565:1576	1616657	9	True				
ANR	1616683	Identifier	true		1616657	0					
ANR	1616684	Label	case S5 :	59:1:1579:1586	1616657	10	True				
ANR	1616685	Identifier	S5		1616657	0					
ANR	1616686	ReturnStatement	return true ;	60:2:1590:1601	1616657	11	True				
ANR	1616687	Identifier	true		1616657	0					
ANR	1616688	Label	default :	61:1:1604:1611	1616657	12	True				
ANR	1616689	Identifier	default		1616657	0					
ANR	1616690	ReturnStatement	return false ;	62:2:1615:1627	1616657	13	True				
ANR	1616691	Identifier	false		1616657	0					
ANR	1616692	ReturnType	bool		1616657	1					
ANR	1616693	Identifier	HibernatorBase :: isStateValid		1616657	2					
ANR	1616694	ParameterList	SLEEP_STATE state		1616657	3					
ANR	1616695	Parameter	SLEEP_STATE state	46:31:1395:1411	1616657	0	True				
ANR	1616696	ParameterType	SLEEP_STATE		1616657	0					
ANR	1616697	Identifier	state		1616657	1					
ANR	1616698	CFGEntryNode	ENTRY		1616657		True				
ANR	1616699	CFGExitNode	EXIT		1616657		True				
ANR	1616700	Symbol	true		1616657						
ANR	1616701	Symbol	false		1616657						
ANR	1616702	Symbol	state		1616657						
ANR	1616703	Function	HibernatorBase :: isStateSupported	66:0:1635:1788							
ANR	1616704	FunctionDef	HibernatorBase :: isStateSupported (SLEEP_STATE state)		1616703	0					
ANR	1616705	CompoundStatement		68:0:1701:1788	1616703	0					
ANR	1616706	IfStatement	if ( NONE == state )		1616703	0					
ANR	1616707	Condition	NONE == state	69:6:1709:1721	1616703	0	True				
ANR	1616708	EqualityExpression	NONE == state		1616703	0		==			
ANR	1616709	Identifier	NONE		1616703	0					
ANR	1616710	Identifier	state		1616703	1					
ANR	1616711	CompoundStatement		2:22:23:23	1616703	1					
ANR	1616712	ReturnStatement	return true ;	70:2:1729:1740	1616703	0	True				
ANR	1616713	Identifier	true		1616703	0					
ANR	1616714	ReturnStatement	return ( m_states & state ) ? true : false ;	72:1:1746:1786	1616703	1	True				
ANR	1616715	ConditionalExpression	( m_states & state ) ? true : false		1616703	0					
ANR	1616716	Condition	m_states & state		1616703	0					
ANR	1616717	BitAndExpression	m_states & state		1616703	0		&			
ANR	1616718	Identifier	m_states		1616703	0					
ANR	1616719	Identifier	state		1616703	1					
ANR	1616720	Identifier	true		1616703	1					
ANR	1616721	Identifier	false		1616703	2					
ANR	1616722	ReturnType	bool		1616703	1					
ANR	1616723	Identifier	HibernatorBase :: isStateSupported		1616703	2					
ANR	1616724	ParameterList	SLEEP_STATE state		1616703	3					
ANR	1616725	Parameter	SLEEP_STATE state	67:35:1675:1691	1616703	0	True				
ANR	1616726	ParameterType	SLEEP_STATE		1616703	0					
ANR	1616727	Identifier	state		1616703	1					
ANR	1616728	CFGEntryNode	ENTRY		1616703		True				
ANR	1616729	CFGExitNode	EXIT		1616703		True				
ANR	1616730	Symbol	true		1616703						
ANR	1616731	Symbol	false		1616703						
ANR	1616732	Symbol	m_states		1616703						
ANR	1616733	Symbol	state		1616703						
ANR	1616734	Symbol	NONE		1616703						
ANR	1616735	Function	HibernatorBase :: switchToState	76:0:1792:2855							
ANR	1616736	FunctionDef	"HibernatorBase :: switchToState (SLEEP_STATE level , SLEEP_STATE & new_level , bool force)"		1616735	0					
ANR	1616737	CompoundStatement		80:0:1907:2855	1616735	0					
ANR	1616738	IfStatement	if ( ! isStateValid ( level ) )		1616735	0					
ANR	1616739	Condition	! isStateValid ( level )	81:6:1915:1937	1616735	0	True				
ANR	1616740	UnaryOperationExpression	! isStateValid ( level )		1616735	0					
ANR	1616741	UnaryOperator	!		1616735	0					
ANR	1616742	CallExpression	isStateValid ( level )		1616735	1					
ANR	1616743	Callee	isStateValid		1616735	0					
ANR	1616744	Identifier	isStateValid		1616735	0					
ANR	1616745	ArgumentList	level		1616735	1					
ANR	1616746	Argument	level		1616735	0					
ANR	1616747	Identifier	level		1616735	0					
ANR	1616748	CompoundStatement		2:32:33:33	1616735	1					
ANR	1616749	ExpressionStatement	"dprintf ( D_ALWAYS , ""Hibernator: Invalid power state 0x%02x\\n"" , level )"	82:2:1945:2022	1616735	0	True				
ANR	1616750	CallExpression	"dprintf ( D_ALWAYS , ""Hibernator: Invalid power state 0x%02x\\n"" , level )"		1616735	0					
ANR	1616751	Callee	dprintf		1616735	0					
ANR	1616752	Identifier	dprintf		1616735	0					
ANR	1616753	ArgumentList	D_ALWAYS		1616735	1					
ANR	1616754	Argument	D_ALWAYS		1616735	0					
ANR	1616755	Identifier	D_ALWAYS		1616735	0					
ANR	1616756	Argument	"""Hibernator: Invalid power state 0x%02x\\n"""		1616735	1					
ANR	1616757	PrimaryExpression	"""Hibernator: Invalid power state 0x%02x\\n"""		1616735	0					
ANR	1616758	Argument	level		1616735	2					
ANR	1616759	Identifier	level		1616735	0					
ANR	1616760	ReturnStatement	return false ;	84:2:2026:2038	1616735	1	True				
ANR	1616761	Identifier	false		1616735	0					
ANR	1616762	IfStatement	if ( ! isStateSupported ( level ) )		1616735	1					
ANR	1616763	Condition	! isStateSupported ( level )	86:6:2049:2075	1616735	0	True				
ANR	1616764	UnaryOperationExpression	! isStateSupported ( level )		1616735	0					
ANR	1616765	UnaryOperator	!		1616735	0					
ANR	1616766	CallExpression	isStateSupported ( level )		1616735	1					
ANR	1616767	Callee	isStateSupported		1616735	0					
ANR	1616768	Identifier	isStateSupported		1616735	0					
ANR	1616769	ArgumentList	level		1616735	1					
ANR	1616770	Argument	level		1616735	0					
ANR	1616771	Identifier	level		1616735	0					
ANR	1616772	CompoundStatement		7:37:172:172	1616735	1					
ANR	1616773	Statement	dprintf	87:2:2084:2090	1616735	0	True				
ANR	1616774	Statement	(	87:10:2092:2092	1616735	1	True				
ANR	1616775	Statement	D_ALWAYS	87:12:2094:2101	1616735	2	True				
ANR	1616776	Statement	","	87:20:2102:2102	1616735	3	True				
ANR	1616777	Statement	"""Hibernator: This machine does not """	87:22:2104:2139	1616735	4	True				
ANR	1616778	Statement	"""support low power state: %s\\n"""	88:3:2144:2174	1616735	5	True				
ANR	1616779	Statement	","	88:34:2175:2175	1616735	6	True				
ANR	1616780	Statement	sleepStateToString	88:36:2177:2194	1616735	7	True				
ANR	1616781	Statement	(	88:54:2195:2195	1616735	8	True				
ANR	1616782	Statement	level	88:55:2196:2200	1616735	9	True				
ANR	1616783	Statement	)	88:60:2201:2201	1616735	10	True				
ANR	1616784	Statement	)	88:62:2203:2203	1616735	11	True				
ANR	1616785	ExpressionStatement		88:63:2204:2204	1616735	12	True				
ANR	1616786	ReturnStatement	return false ;	89:2:2208:2220	1616735	13	True				
ANR	1616787	Identifier	false		1616735	0					
ANR	1616788	Statement	dprintf	91:1:2226:2232	1616735	2	True				
ANR	1616789	Statement	(	91:9:2234:2234	1616735	3	True				
ANR	1616790	Statement	D_FULLDEBUG	91:11:2236:2246	1616735	4	True				
ANR	1616791	Statement	","	91:22:2247:2247	1616735	5	True				
ANR	1616792	Statement	"""Hibernator: Entering sleep """	91:24:2249:2277	1616735	6	True				
ANR	1616793	Statement	"""state '%s'.\\n"""	92:5:2284:2298	1616735	7	True				
ANR	1616794	Statement	","	92:20:2299:2299	1616735	8	True				
ANR	1616795	Statement	sleepStateToString	92:22:2301:2318	1616735	9	True				
ANR	1616796	Statement	(	92:41:2320:2320	1616735	10	True				
ANR	1616797	Statement	level	92:43:2322:2326	1616735	11	True				
ANR	1616798	Statement	)	92:49:2328:2328	1616735	12	True				
ANR	1616799	Statement	)	92:51:2330:2330	1616735	13	True				
ANR	1616800	ExpressionStatement		92:52:2331:2331	1616735	14	True				
ANR	1616801	ExpressionStatement	new_level = NONE	94:1:2335:2351	1616735	15	True				
ANR	1616802	AssignmentExpression	new_level = NONE		1616735	0		=			
ANR	1616803	Identifier	new_level		1616735	0					
ANR	1616804	Identifier	NONE		1616735	1					
ANR	1616805	SwitchStatement	switch ( level )		1616735	16					
ANR	1616806	Condition	level	95:10:2363:2367	1616735	0	True				
ANR	1616807	Identifier	level		1616735	0					
ANR	1616808	CompoundStatement		16:18:463:463	1616735	1					
ANR	1616809	Label	case S1 :	97:1:2429:2436	1616735	0	True				
ANR	1616810	Identifier	S1		1616735	0					
ANR	1616811	ExpressionStatement	new_level = enterStateStandBy ( force )	98:2:2440:2478	1616735	1	True				
ANR	1616812	AssignmentExpression	new_level = enterStateStandBy ( force )		1616735	0		=			
ANR	1616813	Identifier	new_level		1616735	0					
ANR	1616814	CallExpression	enterStateStandBy ( force )		1616735	1					
ANR	1616815	Callee	enterStateStandBy		1616735	0					
ANR	1616816	Identifier	enterStateStandBy		1616735	0					
ANR	1616817	ArgumentList	force		1616735	1					
ANR	1616818	Argument	force		1616735	0					
ANR	1616819	Identifier	force		1616735	0					
ANR	1616820	BreakStatement	break ;	99:2:2482:2487	1616735	2	True				
ANR	1616821	Label	case S2 :	101:1:2491:2498	1616735	3	True				
ANR	1616822	Identifier	S2		1616735	0					
ANR	1616823	Label	case S3 :	102:1:2501:2508	1616735	4	True				
ANR	1616824	Identifier	S3		1616735	0					
ANR	1616825	ExpressionStatement	new_level = enterStateSuspend ( force )	103:2:2512:2550	1616735	5	True				
ANR	1616826	AssignmentExpression	new_level = enterStateSuspend ( force )		1616735	0		=			
ANR	1616827	Identifier	new_level		1616735	0					
ANR	1616828	CallExpression	enterStateSuspend ( force )		1616735	1					
ANR	1616829	Callee	enterStateSuspend		1616735	0					
ANR	1616830	Identifier	enterStateSuspend		1616735	0					
ANR	1616831	ArgumentList	force		1616735	1					
ANR	1616832	Argument	force		1616735	0					
ANR	1616833	Identifier	force		1616735	0					
ANR	1616834	BreakStatement	break ;	104:2:2554:2559	1616735	6	True				
ANR	1616835	Label	case S4 :	107:1:2607:2614	1616735	7	True				
ANR	1616836	Identifier	S4		1616735	0					
ANR	1616837	ExpressionStatement	new_level = enterStateHibernate ( force )	108:2:2618:2658	1616735	8	True				
ANR	1616838	AssignmentExpression	new_level = enterStateHibernate ( force )		1616735	0		=			
ANR	1616839	Identifier	new_level		1616735	0					
ANR	1616840	CallExpression	enterStateHibernate ( force )		1616735	1					
ANR	1616841	Callee	enterStateHibernate		1616735	0					
ANR	1616842	Identifier	enterStateHibernate		1616735	0					
ANR	1616843	ArgumentList	force		1616735	1					
ANR	1616844	Argument	force		1616735	0					
ANR	1616845	Identifier	force		1616735	0					
ANR	1616846	BreakStatement	break ;	109:2:2662:2667	1616735	9	True				
ANR	1616847	Label	case S5 :	112:1:2721:2728	1616735	10	True				
ANR	1616848	Identifier	S5		1616735	0					
ANR	1616849	ExpressionStatement	new_level = enterStatePowerOff ( force )	113:2:2732:2771	1616735	11	True				
ANR	1616850	AssignmentExpression	new_level = enterStatePowerOff ( force )		1616735	0		=			
ANR	1616851	Identifier	new_level		1616735	0					
ANR	1616852	CallExpression	enterStatePowerOff ( force )		1616735	1					
ANR	1616853	Callee	enterStatePowerOff		1616735	0					
ANR	1616854	Identifier	enterStatePowerOff		1616735	0					
ANR	1616855	ArgumentList	force		1616735	1					
ANR	1616856	Argument	force		1616735	0					
ANR	1616857	Identifier	force		1616735	0					
ANR	1616858	BreakStatement	break ;	114:2:2775:2780	1616735	12	True				
ANR	1616859	Label	default :	116:1:2784:2791	1616735	13	True				
ANR	1616860	Identifier	default		1616735	0					
ANR	1616861	ReturnStatement	return false ;	118:2:2823:2835	1616735	14	True				
ANR	1616862	Identifier	false		1616735	0					
ANR	1616863	ReturnStatement	return true ;	121:1:2842:2853	1616735	17	True				
ANR	1616864	Identifier	true		1616735	0					
ANR	1616865	ReturnType	bool		1616735	1					
ANR	1616866	Identifier	HibernatorBase :: switchToState		1616735	2					
ANR	1616867	ParameterList	"SLEEP_STATE level , SLEEP_STATE & new_level , bool force"		1616735	3					
ANR	1616868	Parameter	SLEEP_STATE level	77:32:1829:1845	1616735	0	True				
ANR	1616869	ParameterType	SLEEP_STATE		1616735	0					
ANR	1616870	Identifier	level		1616735	1					
ANR	1616871	Parameter	SLEEP_STATE & new_level	78:8:1856:1877	1616735	1	True				
ANR	1616872	ParameterType	SLEEP_STATE &		1616735	0					
ANR	1616873	Identifier	new_level		1616735	1					
ANR	1616874	Parameter	bool force	79:8:1888:1897	1616735	2	True				
ANR	1616875	ParameterType	bool		1616735	0					
ANR	1616876	Identifier	force		1616735	1					
ANR	1616877	CFGEntryNode	ENTRY		1616735		True				
ANR	1616878	CFGExitNode	EXIT		1616735		True				
ANR	1616879	Symbol	new_level		1616735						
ANR	1616880	Symbol	level		1616735						
ANR	1616881	Symbol	isStateValid		1616735						
ANR	1616882	Symbol	D_ALWAYS		1616735						
ANR	1616883	Symbol	false		1616735						
ANR	1616884	Symbol	enterStateStandBy		1616735						
ANR	1616885	Symbol	enterStatePowerOff		1616735						
ANR	1616886	Symbol	enterStateSuspend		1616735						
ANR	1616887	Symbol	true		1616735						
ANR	1616888	Symbol	force		1616735						
ANR	1616889	Symbol	NONE		1616735						
ANR	1616890	Symbol	isStateSupported		1616735						
ANR	1616891	Symbol	enterStateHibernate		1616735						
ANR	1616892	Function	HibernatorBase :: getStates	124:0:2858:2928							
ANR	1616893	FunctionDef	HibernatorBase :: getStates ()		1616892	0					
ANR	1616894	CompoundStatement		126:0:2908:2928	1616892	0					
ANR	1616895	ReturnStatement	return m_states ;	127:1:2911:2926	1616892	0	True				
ANR	1616896	Identifier	m_states		1616892	0					
ANR	1616897	ReturnType	unsigned short		1616892	1					
ANR	1616898	Identifier	HibernatorBase :: getStates		1616892	2					
ANR	1616899	ParameterList			1616892	3					
ANR	1616900	CFGEntryNode	ENTRY		1616892		True				
ANR	1616901	CFGExitNode	EXIT		1616892		True				
ANR	1616902	Symbol	m_states		1616892						
ANR	1616903	Function	HibernatorBase :: setStates	130:0:2931:3010							
ANR	1616904	FunctionDef	HibernatorBase :: setStates (unsigned short states)		1616903	0					
ANR	1616905	CompoundStatement		132:0:2988:3010	1616903	0					
ANR	1616906	ExpressionStatement	m_states = states	133:1:2991:3008	1616903	0	True				
ANR	1616907	AssignmentExpression	m_states = states		1616903	0		=			
ANR	1616908	Identifier	m_states		1616903	0					
ANR	1616909	Identifier	states		1616903	1					
ANR	1616910	ReturnType	void		1616903	1					
ANR	1616911	Identifier	HibernatorBase :: setStates		1616903	2					
ANR	1616912	ParameterList	unsigned short states		1616903	3					
ANR	1616913	Parameter	unsigned short states	131:28:2964:2984	1616903	0	True				
ANR	1616914	ParameterType	unsigned short		1616903	0					
ANR	1616915	Identifier	states		1616903	1					
ANR	1616916	CFGEntryNode	ENTRY		1616903		True				
ANR	1616917	CFGExitNode	EXIT		1616903		True				
ANR	1616918	Symbol	m_states		1616903						
ANR	1616919	Symbol	states		1616903						
ANR	1616920	Function	HibernatorBase :: addState	136:0:3013:3087							
ANR	1616921	FunctionDef	HibernatorBase :: addState (SLEEP_STATE state)		1616920	0					
ANR	1616922	CompoundStatement		138:0:3065:3087	1616920	0					
ANR	1616923	ExpressionStatement	m_states |= state	139:1:3068:3085	1616920	0	True				
ANR	1616924	AssignmentExpression	m_states |= state		1616920	0		|=			
ANR	1616925	Identifier	m_states		1616920	0					
ANR	1616926	Identifier	state		1616920	1					
ANR	1616927	ReturnType	void		1616920	1					
ANR	1616928	Identifier	HibernatorBase :: addState		1616920	2					
ANR	1616929	ParameterList	SLEEP_STATE state		1616920	3					
ANR	1616930	Parameter	SLEEP_STATE state	137:27:3045:3061	1616920	0	True				
ANR	1616931	ParameterType	SLEEP_STATE		1616920	0					
ANR	1616932	Identifier	state		1616920	1					
ANR	1616933	CFGEntryNode	ENTRY		1616920		True				
ANR	1616934	CFGExitNode	EXIT		1616920		True				
ANR	1616935	Symbol	m_states		1616920						
ANR	1616936	Symbol	state		1616920						
ANR	1616937	Function	HibernatorBase :: addState	142:0:3090:3187							
ANR	1616938	FunctionDef	HibernatorBase :: addState (const char * state)		1616937	0					
ANR	1616939	CompoundStatement		144:0:3142:3187	1616937	0					
ANR	1616940	ExpressionStatement	m_states |= stringToSleepState ( state )	145:1:3145:3185	1616937	0	True				
ANR	1616941	AssignmentExpression	m_states |= stringToSleepState ( state )		1616937	0		|=			
ANR	1616942	Identifier	m_states		1616937	0					
ANR	1616943	CallExpression	stringToSleepState ( state )		1616937	1					
ANR	1616944	Callee	stringToSleepState		1616937	0					
ANR	1616945	Identifier	stringToSleepState		1616937	0					
ANR	1616946	ArgumentList	state		1616937	1					
ANR	1616947	Argument	state		1616937	0					
ANR	1616948	Identifier	state		1616937	0					
ANR	1616949	ReturnType	void		1616937	1					
ANR	1616950	Identifier	HibernatorBase :: addState		1616937	2					
ANR	1616951	ParameterList	const char * state		1616937	3					
ANR	1616952	Parameter	const char * state	143:27:3122:3138	1616937	0	True				
ANR	1616953	ParameterType	const char *		1616937	0					
ANR	1616954	Identifier	state		1616937	1					
ANR	1616955	CFGEntryNode	ENTRY		1616937		True				
ANR	1616956	CFGExitNode	EXIT		1616937		True				
ANR	1616957	Symbol	m_states		1616937						
ANR	1616958	Symbol	state		1616937						
ANR	1616959	Symbol	stringToSleepState		1616937						
ANR	1616960	Function	HibernatorBase :: getMethod	148:0:3190:3258							
ANR	1616961	FunctionDef	HibernatorBase :: getMethod ()		1616960	0					
ANR	1616962	CompoundStatement		150:0:3237:3258	1616960	0					
ANR	1616963	ReturnStatement	"return ""default"" ;"	151:1:3240:3256	1616960	0	True				
ANR	1616964	PrimaryExpression	"""default"""		1616960	0					
ANR	1616965	ReturnType	const char *		1616960	1					
ANR	1616966	Identifier	HibernatorBase :: getMethod		1616960	2					
ANR	1616967	ParameterList			1616960	3					
ANR	1616968	CFGEntryNode	ENTRY		1616960		True				
ANR	1616969	CFGExitNode	EXIT		1616960		True				
ANR	1616970	ClassDef	HibernatorBase :: StateLookup	161:0:3469:3588							
ANR	1616971	DeclStmt									
ANR	1616972	Decl							int	int	number
ANR	1616973	DeclStmt									
ANR	1616974	Decl							HibernatorBase :: SLEEP_STATE	HibernatorBase :: SLEEP_STATE	state
ANR	1616975	DeclStmt									
ANR	1616976	Decl							const char	const char * *	strings
ANR	1616977	DeclStmt									
ANR	1616978	Decl							const char	const char * [ ]	s0names
ANR	1616979	DeclStmt									
ANR	1616980	Decl							const char	const char * [ ]	s1names
ANR	1616981	DeclStmt									
ANR	1616982	Decl							const char	const char * [ ]	s2names
ANR	1616983	DeclStmt									
ANR	1616984	Decl							const char	const char * [ ]	s3names
ANR	1616985	DeclStmt									
ANR	1616986	Decl							const char	const char * [ ]	s4names
ANR	1616987	DeclStmt									
ANR	1616988	Decl							const char	const char * [ ]	s5names
ANR	1616989	DeclStmt									
ANR	1616990	Decl							const char	const char * [ ]	sxnames
ANR	1616991	DeclStmt									
ANR	1616992	Decl							const HibernatorBase :: StateLookup	const HibernatorBase :: StateLookup [ ]	states
ANR	1616993	Function	HibernatorBase :: intToSleepState	185:0:4385:4482							
ANR	1616994	FunctionDef	HibernatorBase :: intToSleepState (int n)		1616993	0					
ANR	1616995	CompoundStatement		187:0:4455:4482	1616993	0					
ANR	1616996	ReturnStatement	return Lookup ( n ) . state ;	188:1:4458:4480	1616993	0	True				
ANR	1616997	MemberAccess	Lookup ( n ) . state		1616993	0					
ANR	1616998	CallExpression	Lookup ( n )		1616993	0					
ANR	1616999	Callee	Lookup		1616993	0					
ANR	1617000	Identifier	Lookup		1616993	0					
ANR	1617001	ArgumentList	n		1616993	1					
ANR	1617002	Argument	n		1616993	0					
ANR	1617003	Identifier	n		1616993	0					
ANR	1617004	Identifier	state		1616993	1					
ANR	1617005	ReturnType	HibernatorBase :: SLEEP_STATE		1616993	1					
ANR	1617006	Identifier	HibernatorBase :: intToSleepState		1616993	2					
ANR	1617007	ParameterList	int n		1616993	3					
ANR	1617008	Parameter	int n	186:34:4447:4451	1616993	0	True				
ANR	1617009	ParameterType	int		1616993	0					
ANR	1617010	Identifier	n		1616993	1					
ANR	1617011	CFGEntryNode	ENTRY		1616993		True				
ANR	1617012	CFGExitNode	EXIT		1616993		True				
ANR	1617013	Symbol	Lookup ( n ) . state		1616993						
ANR	1617014	Symbol	Lookup		1616993						
ANR	1617015	Symbol	n		1616993						
ANR	1617016	Function	HibernatorBase :: sleepStateToInt	191:0:4485:4591							
ANR	1617017	FunctionDef	HibernatorBase :: sleepStateToInt (HibernatorBase :: SLEEP_STATE state)		1617016	0					
ANR	1617018	CompoundStatement		193:0:4559:4591	1617016	0					
ANR	1617019	ReturnStatement	return Lookup ( state ) . number ;	194:1:4562:4589	1617016	0	True				
ANR	1617020	MemberAccess	Lookup ( state ) . number		1617016	0					
ANR	1617021	CallExpression	Lookup ( state )		1617016	0					
ANR	1617022	Callee	Lookup		1617016	0					
ANR	1617023	Identifier	Lookup		1617016	0					
ANR	1617024	ArgumentList	state		1617016	1					
ANR	1617025	Argument	state		1617016	0					
ANR	1617026	Identifier	state		1617016	0					
ANR	1617027	Identifier	number		1617016	1					
ANR	1617028	ReturnType	int		1617016	1					
ANR	1617029	Identifier	HibernatorBase :: sleepStateToInt		1617016	2					
ANR	1617030	ParameterList	HibernatorBase :: SLEEP_STATE state		1617016	3					
ANR	1617031	Parameter	HibernatorBase :: SLEEP_STATE state	192:34:4523:4555	1617016	0	True				
ANR	1617032	ParameterType	HibernatorBase :: SLEEP_STATE		1617016	0					
ANR	1617033	Identifier	state		1617016	1					
ANR	1617034	CFGEntryNode	ENTRY		1617016		True				
ANR	1617035	CFGExitNode	EXIT		1617016		True				
ANR	1617036	Symbol	Lookup		1617016						
ANR	1617037	Symbol	state		1617016						
ANR	1617038	Symbol	Lookup ( state ) . number		1617016						
ANR	1617039	Function	HibernatorBase :: sleepStateToString	197:0:4594:4755							
ANR	1617040	FunctionDef	HibernatorBase :: sleepStateToString (HibernatorBase :: SLEEP_STATE state)		1617039	0					
ANR	1617041	CompoundStatement		199:0:4679:4755	1617039	0					
ANR	1617042	IdentifierDeclStatement	int index = sleepStateToInt ( state ) ;	200:1:4682:4719	1617039	0	True				
ANR	1617043	IdentifierDecl	index = sleepStateToInt ( state )		1617039	0					
ANR	1617044	IdentifierDeclType	int		1617039	0					
ANR	1617045	Identifier	index		1617039	1					
ANR	1617046	AssignmentExpression	index = sleepStateToInt ( state )		1617039	2		=			
ANR	1617047	Identifier	index		1617039	0					
ANR	1617048	CallExpression	sleepStateToInt ( state )		1617039	1					
ANR	1617049	Callee	sleepStateToInt		1617039	0					
ANR	1617050	Identifier	sleepStateToInt		1617039	0					
ANR	1617051	ArgumentList	state		1617039	1					
ANR	1617052	Argument	state		1617039	0					
ANR	1617053	Identifier	state		1617039	0					
ANR	1617054	ReturnStatement	return states [ index ] . strings [ 0 ] ;	201:1:4722:4753	1617039	1	True				
ANR	1617055	ArrayIndexing	states [ index ] . strings [ 0 ]		1617039	0					
ANR	1617056	MemberAccess	states [ index ] . strings		1617039	0					
ANR	1617057	ArrayIndexing	states [ index ]		1617039	0					
ANR	1617058	Identifier	states		1617039	0					
ANR	1617059	Identifier	index		1617039	1					
ANR	1617060	Identifier	strings		1617039	1					
ANR	1617061	PrimaryExpression	0		1617039	1					
ANR	1617062	ReturnType	char const *		1617039	1					
ANR	1617063	Identifier	HibernatorBase :: sleepStateToString		1617039	2					
ANR	1617064	ParameterList	HibernatorBase :: SLEEP_STATE state		1617039	3					
ANR	1617065	Parameter	HibernatorBase :: SLEEP_STATE state	198:37:4643:4675	1617039	0	True				
ANR	1617066	ParameterType	HibernatorBase :: SLEEP_STATE		1617039	0					
ANR	1617067	Identifier	state		1617039	1					
ANR	1617068	CFGEntryNode	ENTRY		1617039		True				
ANR	1617069	CFGExitNode	EXIT		1617039		True				
ANR	1617070	Symbol	sleepStateToInt		1617039						
ANR	1617071	Symbol	states [ index ] . strings		1617039						
ANR	1617072	Symbol	* index		1617039						
ANR	1617073	Symbol	index		1617039						
ANR	1617074	Symbol	state		1617039						
ANR	1617075	Symbol	* * index		1617039						
ANR	1617076	Symbol	* states		1617039						
ANR	1617077	Symbol	* states [ index ] . strings		1617039						
ANR	1617078	Symbol	states		1617039						
ANR	1617079	Symbol	* * states		1617039						
ANR	1617080	Function	HibernatorBase :: stringToSleepState	204:0:4758:4872							
ANR	1617081	FunctionDef	HibernatorBase :: stringToSleepState (char const * name)		1617080	0					
ANR	1617082	CompoundStatement		206:0:4842:4872	1617080	0					
ANR	1617083	ReturnStatement	return Lookup ( name ) . state ;	207:1:4845:4870	1617080	0	True				
ANR	1617084	MemberAccess	Lookup ( name ) . state		1617080	0					
ANR	1617085	CallExpression	Lookup ( name )		1617080	0					
ANR	1617086	Callee	Lookup		1617080	0					
ANR	1617087	Identifier	Lookup		1617080	0					
ANR	1617088	ArgumentList	name		1617080	1					
ANR	1617089	Argument	name		1617080	0					
ANR	1617090	Identifier	name		1617080	0					
ANR	1617091	Identifier	state		1617080	1					
ANR	1617092	ReturnType	HibernatorBase :: SLEEP_STATE		1617080	1					
ANR	1617093	Identifier	HibernatorBase :: stringToSleepState		1617080	2					
ANR	1617094	ParameterList	char const * name		1617080	3					
ANR	1617095	Parameter	char const * name	205:37:4823:4838	1617080	0	True				
ANR	1617096	ParameterType	char const *		1617080	0					
ANR	1617097	Identifier	name		1617080	1					
ANR	1617098	CFGEntryNode	ENTRY		1617080		True				
ANR	1617099	CFGExitNode	EXIT		1617080		True				
ANR	1617100	Symbol	name		1617080						
ANR	1617101	Symbol	Lookup		1617080						
ANR	1617102	Symbol	Lookup ( name ) . state		1617080						
ANR	1617103	Function	HibernatorBase :: maskToStates	210:0:4875:5154							
ANR	1617104	FunctionDef	"HibernatorBase :: maskToStates (unsigned mask , ExtArray < SLEEP_STATE > & _states)"		1617103	0					
ANR	1617105	CompoundStatement		214:0:4965:5154	1617103	0					
ANR	1617106	ExpressionStatement	_states . truncate ( - 1 )	215:1:4968:4988	1617103	0	True				
ANR	1617107	CallExpression	_states . truncate ( - 1 )		1617103	0					
ANR	1617108	Callee	_states . truncate		1617103	0					
ANR	1617109	MemberAccess	_states . truncate		1617103	0					
ANR	1617110	Identifier	_states		1617103	0					
ANR	1617111	Identifier	truncate		1617103	1					
ANR	1617112	ArgumentList	- 1		1617103	1					
ANR	1617113	Argument	- 1		1617103	0					
ANR	1617114	UnaryOperationExpression	- 1		1617103	0					
ANR	1617115	UnaryOperator	-		1617103	0					
ANR	1617116	PrimaryExpression	1		1617103	1					
ANR	1617117	IdentifierDeclStatement	unsigned bit ;	216:1:4991:5003	1617103	1	True				
ANR	1617118	IdentifierDecl	bit		1617103	0					
ANR	1617119	IdentifierDeclType	unsigned		1617103	0					
ANR	1617120	Identifier	bit		1617103	1					
ANR	1617121	ForStatement	for ( bit = ( unsigned ) S1 ; bit <= ( unsigned ) S5 ; bit <<= 1 )		1617103	2					
ANR	1617122	ForInit	bit = ( unsigned ) S1 ;	217:7:5012:5030	1617103	0	True				
ANR	1617123	AssignmentExpression	bit = ( unsigned ) S1		1617103	0		=			
ANR	1617124	Identifier	bit		1617103	0					
ANR	1617125	CastExpression	( unsigned ) S1		1617103	1					
ANR	1617126	CastTarget	unsigned		1617103	0					
ANR	1617127	Identifier	S1		1617103	1					
ANR	1617128	Condition	bit <= ( unsigned ) S5	218:4:5036:5054	1617103	1	True				
ANR	1617129	RelationalExpression	bit <= ( unsigned ) S5		1617103	0		<=			
ANR	1617130	Identifier	bit		1617103	0					
ANR	1617131	CastExpression	( unsigned ) S5		1617103	1					
ANR	1617132	CastTarget	unsigned		1617103	0					
ANR	1617133	Identifier	S5		1617103	1					
ANR	1617134	AssignmentExpression	bit <<= 1	219:4:5061:5069	1617103	2	True	<<=			
ANR	1617135	Identifier	bit		1617103	0					
ANR	1617136	PrimaryExpression	1		1617103	1					
ANR	1617137	CompoundStatement		6:16:107:107	1617103	3					
ANR	1617138	IfStatement	if ( bit & mask )		1617103	0					
ANR	1617139	Condition	bit & mask	220:7:5082:5091	1617103	0	True				
ANR	1617140	BitAndExpression	bit & mask		1617103	0		&			
ANR	1617141	Identifier	bit		1617103	0					
ANR	1617142	Identifier	mask		1617103	1					
ANR	1617143	CompoundStatement		7:20:129:129	1617103	1					
ANR	1617144	ExpressionStatement	_states . add ( ( SLEEP_STATE ) bit )	221:3:5100:5131	1617103	0	True				
ANR	1617145	CallExpression	_states . add ( ( SLEEP_STATE ) bit )		1617103	0					
ANR	1617146	Callee	_states . add		1617103	0					
ANR	1617147	MemberAccess	_states . add		1617103	0					
ANR	1617148	Identifier	_states		1617103	0					
ANR	1617149	Identifier	add		1617103	1					
ANR	1617150	ArgumentList	( SLEEP_STATE ) bit		1617103	1					
ANR	1617151	Argument	( SLEEP_STATE ) bit		1617103	0					
ANR	1617152	CastExpression	( SLEEP_STATE ) bit		1617103	0					
ANR	1617153	CastTarget	SLEEP_STATE		1617103	0					
ANR	1617154	Identifier	bit		1617103	1					
ANR	1617155	ReturnStatement	return true ;	224:1:5141:5152	1617103	3	True				
ANR	1617156	Identifier	true		1617103	0					
ANR	1617157	ReturnType	bool		1617103	1					
ANR	1617158	Identifier	HibernatorBase :: maskToStates		1617103	2					
ANR	1617159	ParameterList	"unsigned mask , ExtArray < SLEEP_STATE > & _states"		1617103	3					
ANR	1617160	Parameter	unsigned mask	212:1:4911:4928	1617103	0	True				
ANR	1617161	ParameterType	unsigned		1617103	0					
ANR	1617162	Identifier	mask		1617103	1					
ANR	1617163	Parameter	ExtArray < SLEEP_STATE > & _states	213:1:4932:4961	1617103	1	True				
ANR	1617164	ParameterType	ExtArray < SLEEP_STATE > &		1617103	0					
ANR	1617165	Identifier	_states		1617103	1					
ANR	1617166	CFGEntryNode	ENTRY		1617103		True				
ANR	1617167	CFGExitNode	EXIT		1617103		True				
ANR	1617168	Symbol	S5		1617103						
ANR	1617169	Symbol	true		1617103						
ANR	1617170	Symbol	_states		1617103						
ANR	1617171	Symbol	bit		1617103						
ANR	1617172	Symbol	S1		1617103						
ANR	1617173	Symbol	mask		1617103						
ANR	1617174	Function	HibernatorBase :: statesToString	227:0:5157:5412							
ANR	1617175	FunctionDef	"HibernatorBase :: statesToString (const ExtArray < SLEEP_STATE > & _states , MyString & str)"		1617174	0					
ANR	1617176	CompoundStatement		230:0:5256:5412	1617174	0					
ANR	1617177	ExpressionStatement	"str = """""	231:1:5259:5267	1617174	0	True				
ANR	1617178	AssignmentExpression	"str = """""		1617174	0		=			
ANR	1617179	Identifier	str		1617174	0					
ANR	1617180	PrimaryExpression	""""""		1617174	1					
ANR	1617181	ForStatement	for ( int i = 0 ; i <= _states . getlast ( ) ; i ++ )		1617174	1					
ANR	1617182	ForInit	int i = 0 ;	232:6:5275:5284	1617174	0	True				
ANR	1617183	IdentifierDeclStatement	int i = 0 ;		1617174	0					
ANR	1617184	IdentifierDecl	i = 0		1617174	0					
ANR	1617185	IdentifierDeclType	int		1617174	0					
ANR	1617186	Identifier	i		1617174	1					
ANR	1617187	AssignmentExpression	i = 0		1617174	2		=			
ANR	1617188	Identifier	i		1617174	0					
ANR	1617189	PrimaryExpression	0		1617174	1					
ANR	1617190	Condition	i <= _states . getlast ( )	232:18:5287:5308	1617174	1	True				
ANR	1617191	RelationalExpression	i <= _states . getlast ( )		1617174	0		<=			
ANR	1617192	Identifier	i		1617174	0					
ANR	1617193	CallExpression	_states . getlast ( )		1617174	1					
ANR	1617194	Callee	_states . getlast		1617174	0					
ANR	1617195	MemberAccess	_states . getlast		1617174	0					
ANR	1617196	Identifier	_states		1617174	0					
ANR	1617197	Identifier	getlast		1617174	1					
ANR	1617198	ArgumentList			1617174	1					
ANR	1617199	PostIncDecOperationExpression	i ++	232:43:5312:5314	1617174	2	True				
ANR	1617200	Identifier	i		1617174	0					
ANR	1617201	IncDec	++		1617174	1					
ANR	1617202	CompoundStatement		3:49:61:61	1617174	3					
ANR	1617203	IfStatement	if ( i )		1617174	0					
ANR	1617204	Condition	i	233:7:5327:5327	1617174	0	True				
ANR	1617205	Identifier	i		1617174	0					
ANR	1617206	CompoundStatement		4:11:74:74	1617174	1					
ANR	1617207	ExpressionStatement	"str += "","""	234:3:5336:5346	1617174	0	True				
ANR	1617208	AssignmentExpression	"str += "","""		1617174	0		+=			
ANR	1617209	Identifier	str		1617174	0					
ANR	1617210	PrimaryExpression	""","""		1617174	1					
ANR	1617211	ExpressionStatement	str += sleepStateToString ( _states [ i ] )	236:2:5354:5393	1617174	1	True				
ANR	1617212	AssignmentExpression	str += sleepStateToString ( _states [ i ] )		1617174	0		+=			
ANR	1617213	Identifier	str		1617174	0					
ANR	1617214	CallExpression	sleepStateToString ( _states [ i ] )		1617174	1					
ANR	1617215	Callee	sleepStateToString		1617174	0					
ANR	1617216	Identifier	sleepStateToString		1617174	0					
ANR	1617217	ArgumentList	_states [ i ]		1617174	1					
ANR	1617218	Argument	_states [ i ]		1617174	0					
ANR	1617219	ArrayIndexing	_states [ i ]		1617174	0					
ANR	1617220	Identifier	_states		1617174	0					
ANR	1617221	Identifier	i		1617174	1					
ANR	1617222	ReturnStatement	return true ;	238:1:5399:5410	1617174	2	True				
ANR	1617223	Identifier	true		1617174	0					
ANR	1617224	ReturnType	bool		1617174	1					
ANR	1617225	Identifier	HibernatorBase :: statesToString		1617174	2					
ANR	1617226	ParameterList	"const ExtArray < SLEEP_STATE > & _states , MyString & str"		1617174	3					
ANR	1617227	Parameter	const ExtArray < SLEEP_STATE > & _states	228:32:5194:5229	1617174	0	True				
ANR	1617228	ParameterType	const ExtArray < SLEEP_STATE > &		1617174	0					
ANR	1617229	Identifier	_states		1617174	1					
ANR	1617230	Parameter	MyString & str	229:8:5240:5252	1617174	1	True				
ANR	1617231	ParameterType	MyString &		1617174	0					
ANR	1617232	Identifier	str		1617174	1					
ANR	1617233	CFGEntryNode	ENTRY		1617174		True				
ANR	1617234	CFGExitNode	EXIT		1617174		True				
ANR	1617235	Symbol	str		1617174						
ANR	1617236	Symbol	* i		1617174						
ANR	1617237	Symbol	* _states		1617174						
ANR	1617238	Symbol	sleepStateToString		1617174						
ANR	1617239	Symbol	true		1617174						
ANR	1617240	Symbol	i		1617174						
ANR	1617241	Symbol	_states		1617174						
ANR	1617242	Symbol	_states . getlast		1617174						
ANR	1617243	Function	HibernatorBase :: maskToString	241:0:5415:5614							
ANR	1617244	FunctionDef	"HibernatorBase :: maskToString (unsigned mask , MyString & str)"		1617243	0					
ANR	1617245	CompoundStatement		243:0:5481:5614	1617243	0					
ANR	1617246	IdentifierDeclStatement	ExtArray < SLEEP_STATE > _states ;	244:1:5484:5513	1617243	0	True				
ANR	1617247	IdentifierDecl	_states		1617243	0					
ANR	1617248	IdentifierDeclType	ExtArray < SLEEP_STATE >		1617243	0					
ANR	1617249	Identifier	_states		1617243	1					
ANR	1617250	IfStatement	"if ( ! maskToStates ( mask , _states ) )"		1617243	1					
ANR	1617251	Condition	"! maskToStates ( mask , _states )"	245:5:5520:5549	1617243	0	True				
ANR	1617252	UnaryOperationExpression	"! maskToStates ( mask , _states )"		1617243	0					
ANR	1617253	UnaryOperator	!		1617243	0					
ANR	1617254	CallExpression	"maskToStates ( mask , _states )"		1617243	1					
ANR	1617255	Callee	maskToStates		1617243	0					
ANR	1617256	Identifier	maskToStates		1617243	0					
ANR	1617257	ArgumentList	mask		1617243	1					
ANR	1617258	Argument	mask		1617243	0					
ANR	1617259	Identifier	mask		1617243	0					
ANR	1617260	Argument	_states		1617243	1					
ANR	1617261	Identifier	_states		1617243	0					
ANR	1617262	CompoundStatement		3:38:71:71	1617243	1					
ANR	1617263	ReturnStatement	return false ;	246:2:5557:5569	1617243	0	True				
ANR	1617264	Identifier	false		1617243	0					
ANR	1617265	ReturnStatement	"return statesToString ( _states , str ) ;"	248:1:5575:5612	1617243	2	True				
ANR	1617266	CallExpression	"statesToString ( _states , str )"		1617243	0					
ANR	1617267	Callee	statesToString		1617243	0					
ANR	1617268	Identifier	statesToString		1617243	0					
ANR	1617269	ArgumentList	_states		1617243	1					
ANR	1617270	Argument	_states		1617243	0					
ANR	1617271	Identifier	_states		1617243	0					
ANR	1617272	Argument	str		1617243	1					
ANR	1617273	Identifier	str		1617243	0					
ANR	1617274	ReturnType	bool		1617243	1					
ANR	1617275	Identifier	HibernatorBase :: maskToString		1617243	2					
ANR	1617276	ParameterList	"unsigned mask , MyString & str"		1617243	3					
ANR	1617277	Parameter	unsigned mask	242:30:5450:5462	1617243	0	True				
ANR	1617278	ParameterType	unsigned		1617243	0					
ANR	1617279	Identifier	mask		1617243	1					
ANR	1617280	Parameter	MyString & str	242:45:5465:5477	1617243	1	True				
ANR	1617281	ParameterType	MyString &		1617243	0					
ANR	1617282	Identifier	str		1617243	1					
ANR	1617283	CFGEntryNode	ENTRY		1617243		True				
ANR	1617284	CFGExitNode	EXIT		1617243		True				
ANR	1617285	Symbol	str		1617243						
ANR	1617286	Symbol	maskToStates		1617243						
ANR	1617287	Symbol	statesToString		1617243						
ANR	1617288	Symbol	false		1617243						
ANR	1617289	Symbol	_states		1617243						
ANR	1617290	Symbol	mask		1617243						
ANR	1617291	Function	HibernatorBase :: stringToStates	251:0:5617:5963							
ANR	1617292	FunctionDef	"HibernatorBase :: stringToStates (const char * str , ExtArray < SLEEP_STATE > & _states)"		1617291	0					
ANR	1617293	CompoundStatement		254:0:5712:5963	1617291	0					
ANR	1617294	ExpressionStatement	_states . truncate ( - 1 )	255:1:5715:5735	1617291	0	True				
ANR	1617295	CallExpression	_states . truncate ( - 1 )		1617291	0					
ANR	1617296	Callee	_states . truncate		1617291	0					
ANR	1617297	MemberAccess	_states . truncate		1617291	0					
ANR	1617298	Identifier	_states		1617291	0					
ANR	1617299	Identifier	truncate		1617291	1					
ANR	1617300	ArgumentList	- 1		1617291	1					
ANR	1617301	Argument	- 1		1617291	0					
ANR	1617302	UnaryOperationExpression	- 1		1617291	0					
ANR	1617303	UnaryOperator	-		1617291	0					
ANR	1617304	PrimaryExpression	1		1617291	1					
ANR	1617305	IdentifierDeclStatement	StringList strlist ( str ) ;	256:1:5738:5763	1617291	1	True				
ANR	1617306	IdentifierDecl	strlist ( str )		1617291	0					
ANR	1617307	IdentifierDeclType	StringList		1617291	0					
ANR	1617308	Identifier	strlist		1617291	1					
ANR	1617309	Identifier	str		1617291	2					
ANR	1617310	ExpressionStatement	strlist . rewind ( )	257:1:5766:5782	1617291	2	True				
ANR	1617311	CallExpression	strlist . rewind ( )		1617291	0					
ANR	1617312	Callee	strlist . rewind		1617291	0					
ANR	1617313	MemberAccess	strlist . rewind		1617291	0					
ANR	1617314	Identifier	strlist		1617291	0					
ANR	1617315	Identifier	rewind		1617291	1					
ANR	1617316	ArgumentList			1617291	1					
ANR	1617317	IdentifierDeclStatement	const char * name ;	258:1:5785:5801	1617291	3	True				
ANR	1617318	IdentifierDecl	* name		1617291	0					
ANR	1617319	IdentifierDeclType	const char *		1617291	0					
ANR	1617320	Identifier	name		1617291	1					
ANR	1617321	IdentifierDeclStatement	int n = 0 ;	259:1:5804:5815	1617291	4	True				
ANR	1617322	IdentifierDecl	n = 0		1617291	0					
ANR	1617323	IdentifierDeclType	int		1617291	0					
ANR	1617324	Identifier	n		1617291	1					
ANR	1617325	AssignmentExpression	n = 0		1617291	2		=			
ANR	1617326	Identifier	n		1617291	0					
ANR	1617327	PrimaryExpression	0		1617291	1					
ANR	1617328	WhileStatement	while ( ( name = strlist . next ( ) ) != NULL )		1617291	5					
ANR	1617329	Condition	( name = strlist . next ( ) ) != NULL	260:8:5825:5855	1617291	0	True				
ANR	1617330	EqualityExpression	( name = strlist . next ( ) ) != NULL		1617291	0		!=			
ANR	1617331	AssignmentExpression	name = strlist . next ( )		1617291	0		=			
ANR	1617332	Identifier	name		1617291	0					
ANR	1617333	CallExpression	strlist . next ( )		1617291	1					
ANR	1617334	Callee	strlist . next		1617291	0					
ANR	1617335	MemberAccess	strlist . next		1617291	0					
ANR	1617336	Identifier	strlist		1617291	0					
ANR	1617337	Identifier	next		1617291	1					
ANR	1617338	ArgumentList			1617291	1					
ANR	1617339	Identifier	NULL		1617291	1					
ANR	1617340	CompoundStatement		8:2:150:196	1617291	1					
ANR	1617341	IdentifierDeclStatement	SLEEP_STATE state = stringToSleepState ( name ) ;	261:2:5863:5909	1617291	0	True				
ANR	1617342	IdentifierDecl	state = stringToSleepState ( name )		1617291	0					
ANR	1617343	IdentifierDeclType	SLEEP_STATE		1617291	0					
ANR	1617344	Identifier	state		1617291	1					
ANR	1617345	AssignmentExpression	state = stringToSleepState ( name )		1617291	2		=			
ANR	1617346	Identifier	state		1617291	0					
ANR	1617347	CallExpression	stringToSleepState ( name )		1617291	1					
ANR	1617348	Callee	stringToSleepState		1617291	0					
ANR	1617349	Identifier	stringToSleepState		1617291	0					
ANR	1617350	ArgumentList	name		1617291	1					
ANR	1617351	Argument	name		1617291	0					
ANR	1617352	Identifier	name		1617291	0					
ANR	1617353	ExpressionStatement	_states . add ( state )	262:2:5913:5933	1617291	1	True				
ANR	1617354	CallExpression	_states . add ( state )		1617291	0					
ANR	1617355	Callee	_states . add		1617291	0					
ANR	1617356	MemberAccess	_states . add		1617291	0					
ANR	1617357	Identifier	_states		1617291	0					
ANR	1617358	Identifier	add		1617291	1					
ANR	1617359	ArgumentList	state		1617291	1					
ANR	1617360	Argument	state		1617291	0					
ANR	1617361	Identifier	state		1617291	0					
ANR	1617362	ExpressionStatement	n ++	263:2:5937:5940	1617291	2	True				
ANR	1617363	PostIncDecOperationExpression	n ++		1617291	0					
ANR	1617364	Identifier	n		1617291	0					
ANR	1617365	IncDec	++		1617291	1					
ANR	1617366	ReturnStatement	return ( n >= 1 ) ;	265:1:5946:5961	1617291	6	True				
ANR	1617367	RelationalExpression	n >= 1		1617291	0		>=			
ANR	1617368	Identifier	n		1617291	0					
ANR	1617369	PrimaryExpression	1		1617291	1					
ANR	1617370	ReturnType	bool		1617291	1					
ANR	1617371	Identifier	HibernatorBase :: stringToStates		1617291	2					
ANR	1617372	ParameterList	"const char * str , ExtArray < SLEEP_STATE > & _states"		1617291	3					
ANR	1617373	Parameter	const char * str	252:32:5654:5668	1617291	0	True				
ANR	1617374	ParameterType	const char *		1617291	0					
ANR	1617375	Identifier	str		1617291	1					
ANR	1617376	Parameter	ExtArray < SLEEP_STATE > & _states	253:8:5679:5708	1617291	1	True				
ANR	1617377	ParameterType	ExtArray < SLEEP_STATE > &		1617291	0					
ANR	1617378	Identifier	_states		1617291	1					
ANR	1617379	CFGEntryNode	ENTRY		1617291		True				
ANR	1617380	CFGExitNode	EXIT		1617291		True				
ANR	1617381	Symbol	str		1617291						
ANR	1617382	Symbol	NULL		1617291						
ANR	1617383	Symbol	strlist		1617291						
ANR	1617384	Symbol	name		1617291						
ANR	1617385	Symbol	stringToSleepState		1617291						
ANR	1617386	Symbol	state		1617291						
ANR	1617387	Symbol	_states		1617291						
ANR	1617388	Symbol	n		1617291						
ANR	1617389	Symbol	strlist . next		1617291						
ANR	1617390	Function	HibernatorBase :: statesToMask	268:0:5966:6170							
ANR	1617391	FunctionDef	"HibernatorBase :: statesToMask (const ExtArray < SLEEP_STATE > & _states , unsigned & mask)"		1617390	0					
ANR	1617392	CompoundStatement		271:0:6065:6170	1617390	0					
ANR	1617393	ExpressionStatement	mask = 0x0	272:1:6068:6078	1617390	0	True				
ANR	1617394	AssignmentExpression	mask = 0x0		1617390	0		=			
ANR	1617395	Identifier	mask		1617390	0					
ANR	1617396	PrimaryExpression	0x0		1617390	1					
ANR	1617397	ForStatement	for ( int i = 0 ; i <= _states . getlast ( ) ; i ++ )		1617390	1					
ANR	1617398	ForInit	int i = 0 ;	273:6:6086:6095	1617390	0	True				
ANR	1617399	IdentifierDeclStatement	int i = 0 ;		1617390	0					
ANR	1617400	IdentifierDecl	i = 0		1617390	0					
ANR	1617401	IdentifierDeclType	int		1617390	0					
ANR	1617402	Identifier	i		1617390	1					
ANR	1617403	AssignmentExpression	i = 0		1617390	2		=			
ANR	1617404	Identifier	i		1617390	0					
ANR	1617405	PrimaryExpression	0		1617390	1					
ANR	1617406	Condition	i <= _states . getlast ( )	273:18:6098:6119	1617390	1	True				
ANR	1617407	RelationalExpression	i <= _states . getlast ( )		1617390	0		<=			
ANR	1617408	Identifier	i		1617390	0					
ANR	1617409	CallExpression	_states . getlast ( )		1617390	1					
ANR	1617410	Callee	_states . getlast		1617390	0					
ANR	1617411	MemberAccess	_states . getlast		1617390	0					
ANR	1617412	Identifier	_states		1617390	0					
ANR	1617413	Identifier	getlast		1617390	1					
ANR	1617414	ArgumentList			1617390	1					
ANR	1617415	PostIncDecOperationExpression	i ++	273:43:6123:6125	1617390	2	True				
ANR	1617416	Identifier	i		1617390	0					
ANR	1617417	IncDec	++		1617390	1					
ANR	1617418	CompoundStatement		3:49:63:63	1617390	3					
ANR	1617419	ExpressionStatement	mask |= _states [ i ]	274:2:6133:6151	1617390	0	True				
ANR	1617420	AssignmentExpression	mask |= _states [ i ]		1617390	0		|=			
ANR	1617421	Identifier	mask		1617390	0					
ANR	1617422	ArrayIndexing	_states [ i ]		1617390	1					
ANR	1617423	Identifier	_states		1617390	0					
ANR	1617424	Identifier	i		1617390	1					
ANR	1617425	ReturnStatement	return true ;	276:1:6157:6168	1617390	2	True				
ANR	1617426	Identifier	true		1617390	0					
ANR	1617427	ReturnType	bool		1617390	1					
ANR	1617428	Identifier	HibernatorBase :: statesToMask		1617390	2					
ANR	1617429	ParameterList	"const ExtArray < SLEEP_STATE > & _states , unsigned & mask"		1617390	3					
ANR	1617430	Parameter	const ExtArray < SLEEP_STATE > & _states	269:30:6001:6036	1617390	0	True				
ANR	1617431	ParameterType	const ExtArray < SLEEP_STATE > &		1617390	0					
ANR	1617432	Identifier	_states		1617390	1					
ANR	1617433	Parameter	unsigned & mask	270:9:6048:6061	1617390	1	True				
ANR	1617434	ParameterType	unsigned &		1617390	0					
ANR	1617435	Identifier	mask		1617390	1					
ANR	1617436	CFGEntryNode	ENTRY		1617390		True				
ANR	1617437	CFGExitNode	EXIT		1617390		True				
ANR	1617438	Symbol	* i		1617390						
ANR	1617439	Symbol	* _states		1617390						
ANR	1617440	Symbol	true		1617390						
ANR	1617441	Symbol	i		1617390						
ANR	1617442	Symbol	_states		1617390						
ANR	1617443	Symbol	_states . getlast		1617390						
ANR	1617444	Symbol	mask		1617390						
ANR	1617445	Function	HibernatorBase :: stringToMask	279:0:6173:6398							
ANR	1617446	FunctionDef	"HibernatorBase :: stringToMask (const char * str , unsigned & mask)"		1617445	0					
ANR	1617447	CompoundStatement		282:0:6251:6398	1617445	0					
ANR	1617448	ExpressionStatement	mask = 0x0	283:1:6254:6264	1617445	0	True				
ANR	1617449	AssignmentExpression	mask = 0x0		1617445	0		=			
ANR	1617450	Identifier	mask		1617445	0					
ANR	1617451	PrimaryExpression	0x0		1617445	1					
ANR	1617452	IdentifierDeclStatement	ExtArray < SLEEP_STATE > _states ;	285:1:6268:6297	1617445	1	True				
ANR	1617453	IdentifierDecl	_states		1617445	0					
ANR	1617454	IdentifierDeclType	ExtArray < SLEEP_STATE >		1617445	0					
ANR	1617455	Identifier	_states		1617445	1					
ANR	1617456	IfStatement	"if ( ! stringToStates ( str , _states ) )"		1617445	2					
ANR	1617457	Condition	"! stringToStates ( str , _states )"	286:5:6304:6334	1617445	0	True				
ANR	1617458	UnaryOperationExpression	"! stringToStates ( str , _states )"		1617445	0					
ANR	1617459	UnaryOperator	!		1617445	0					
ANR	1617460	CallExpression	"stringToStates ( str , _states )"		1617445	1					
ANR	1617461	Callee	stringToStates		1617445	0					
ANR	1617462	Identifier	stringToStates		1617445	0					
ANR	1617463	ArgumentList	str		1617445	1					
ANR	1617464	Argument	str		1617445	0					
ANR	1617465	Identifier	str		1617445	0					
ANR	1617466	Argument	_states		1617445	1					
ANR	1617467	Identifier	_states		1617445	0					
ANR	1617468	CompoundStatement		5:39:86:86	1617445	1					
ANR	1617469	ReturnStatement	return false ;	287:2:6342:6354	1617445	0	True				
ANR	1617470	Identifier	false		1617445	0					
ANR	1617471	ReturnStatement	"return statesToMask ( _states , mask ) ;"	289:1:6360:6396	1617445	3	True				
ANR	1617472	CallExpression	"statesToMask ( _states , mask )"		1617445	0					
ANR	1617473	Callee	statesToMask		1617445	0					
ANR	1617474	Identifier	statesToMask		1617445	0					
ANR	1617475	ArgumentList	_states		1617445	1					
ANR	1617476	Argument	_states		1617445	0					
ANR	1617477	Identifier	_states		1617445	0					
ANR	1617478	Argument	mask		1617445	1					
ANR	1617479	Identifier	mask		1617445	0					
ANR	1617480	ReturnType	bool		1617445	1					
ANR	1617481	Identifier	HibernatorBase :: stringToMask		1617445	2					
ANR	1617482	ParameterList	"const char * str , unsigned & mask"		1617445	3					
ANR	1617483	Parameter	const char * str	280:30:6208:6222	1617445	0	True				
ANR	1617484	ParameterType	const char *		1617445	0					
ANR	1617485	Identifier	str		1617445	1					
ANR	1617486	Parameter	unsigned & mask	281:9:6234:6247	1617445	1	True				
ANR	1617487	ParameterType	unsigned &		1617445	0					
ANR	1617488	Identifier	mask		1617445	1					
ANR	1617489	CFGEntryNode	ENTRY		1617445		True				
ANR	1617490	CFGExitNode	EXIT		1617445		True				
ANR	1617491	Symbol	str		1617445						
ANR	1617492	Symbol	statesToMask		1617445						
ANR	1617493	Symbol	stringToStates		1617445						
ANR	1617494	Symbol	false		1617445						
ANR	1617495	Symbol	_states		1617445						
ANR	1617496	Symbol	mask		1617445						
ANR	1617497	Function	HibernatorBase :: Lookup	293:0:6402:6546							
ANR	1617498	FunctionDef	HibernatorBase :: Lookup (int n)		1617497	0					
ANR	1617499	CompoundStatement		295:0:6470:6546	1617497	0					
ANR	1617500	IfStatement	if ( ( n > 0 ) && ( n <= 5 ) )		1617497	0					
ANR	1617501	Condition	( n > 0 ) && ( n <= 5 )	296:6:6478:6498	1617497	0	True				
ANR	1617502	AndExpression	( n > 0 ) && ( n <= 5 )		1617497	0		&&			
ANR	1617503	RelationalExpression	n > 0		1617497	0		>			
ANR	1617504	Identifier	n		1617497	0					
ANR	1617505	PrimaryExpression	0		1617497	1					
ANR	1617506	RelationalExpression	n <= 5		1617497	1		<=			
ANR	1617507	Identifier	n		1617497	0					
ANR	1617508	PrimaryExpression	5		1617497	1					
ANR	1617509	CompoundStatement		2:30:31:31	1617497	1					
ANR	1617510	ReturnStatement	return states [ n ] ;	297:2:6506:6522	1617497	0	True				
ANR	1617511	ArrayIndexing	states [ n ]		1617497	0					
ANR	1617512	Identifier	states		1617497	0					
ANR	1617513	Identifier	n		1617497	1					
ANR	1617514	ReturnStatement	return states [ 0 ] ;	299:1:6528:6544	1617497	1	True				
ANR	1617515	ArrayIndexing	states [ 0 ]		1617497	0					
ANR	1617516	Identifier	states		1617497	0					
ANR	1617517	PrimaryExpression	0		1617497	1					
ANR	1617518	ReturnType	const HibernatorBase :: StateLookup &		1617497	1					
ANR	1617519	Identifier	HibernatorBase :: Lookup		1617497	2					
ANR	1617520	ParameterList	int n		1617497	3					
ANR	1617521	Parameter	int n	294:25:6462:6466	1617497	0	True				
ANR	1617522	ParameterType	int		1617497	0					
ANR	1617523	Identifier	n		1617497	1					
ANR	1617524	CFGEntryNode	ENTRY		1617497		True				
ANR	1617525	CFGExitNode	EXIT		1617497		True				
ANR	1617526	Symbol	* n		1617497						
ANR	1617527	Symbol	n		1617497						
ANR	1617528	Symbol	* states		1617497						
ANR	1617529	Symbol	states		1617497						
ANR	1617530	Function	HibernatorBase :: Lookup	302:0:6549:6764							
ANR	1617531	FunctionDef	HibernatorBase :: Lookup (SLEEP_STATE state)		1617530	0					
ANR	1617532	CompoundStatement		304:0:6629:6764	1617530	0					
ANR	1617533	ForStatement	for ( int i = 0 ; states [ i ] . number >= 0 ; i ++ )		1617530	0					
ANR	1617534	ForInit	int i = 0 ;	305:6:6637:6646	1617530	0	True				
ANR	1617535	IdentifierDeclStatement	int i = 0 ;		1617530	0					
ANR	1617536	IdentifierDecl	i = 0		1617530	0					
ANR	1617537	IdentifierDeclType	int		1617530	0					
ANR	1617538	Identifier	i		1617530	1					
ANR	1617539	AssignmentExpression	i = 0		1617530	2		=			
ANR	1617540	Identifier	i		1617530	0					
ANR	1617541	PrimaryExpression	0		1617530	1					
ANR	1617542	Condition	states [ i ] . number >= 0	305:18:6649:6669	1617530	1	True				
ANR	1617543	RelationalExpression	states [ i ] . number >= 0		1617530	0		>=			
ANR	1617544	MemberAccess	states [ i ] . number		1617530	0					
ANR	1617545	ArrayIndexing	states [ i ]		1617530	0					
ANR	1617546	Identifier	states		1617530	0					
ANR	1617547	Identifier	i		1617530	1					
ANR	1617548	Identifier	number		1617530	1					
ANR	1617549	PrimaryExpression	0		1617530	1					
ANR	1617550	PostIncDecOperationExpression	i ++	305:42:6673:6675	1617530	2	True				
ANR	1617551	Identifier	i		1617530	0					
ANR	1617552	IncDec	++		1617530	1					
ANR	1617553	CompoundStatement		2:48:49:49	1617530	3					
ANR	1617554	IfStatement	if ( states [ i ] . state == state )		1617530	0					
ANR	1617555	Condition	states [ i ] . state == state	306:7:6688:6711	1617530	0	True				
ANR	1617556	EqualityExpression	states [ i ] . state == state		1617530	0		==			
ANR	1617557	MemberAccess	states [ i ] . state		1617530	0					
ANR	1617558	ArrayIndexing	states [ i ]		1617530	0					
ANR	1617559	Identifier	states		1617530	0					
ANR	1617560	Identifier	i		1617530	1					
ANR	1617561	Identifier	state		1617530	1					
ANR	1617562	Identifier	state		1617530	1					
ANR	1617563	CompoundStatement		3:34:85:85	1617530	1					
ANR	1617564	ReturnStatement	return states [ i ] ;	307:3:6720:6736	1617530	0	True				
ANR	1617565	ArrayIndexing	states [ i ]		1617530	0					
ANR	1617566	Identifier	states		1617530	0					
ANR	1617567	Identifier	i		1617530	1					
ANR	1617568	ReturnStatement	return states [ 0 ] ;	310:1:6746:6762	1617530	1	True				
ANR	1617569	ArrayIndexing	states [ 0 ]		1617530	0					
ANR	1617570	Identifier	states		1617530	0					
ANR	1617571	PrimaryExpression	0		1617530	1					
ANR	1617572	ReturnType	const HibernatorBase :: StateLookup &		1617530	1					
ANR	1617573	Identifier	HibernatorBase :: Lookup		1617530	2					
ANR	1617574	ParameterList	SLEEP_STATE state		1617530	3					
ANR	1617575	Parameter	SLEEP_STATE state	303:25:6609:6625	1617530	0	True				
ANR	1617576	ParameterType	SLEEP_STATE		1617530	0					
ANR	1617577	Identifier	state		1617530	1					
ANR	1617578	CFGEntryNode	ENTRY		1617530		True				
ANR	1617579	CFGExitNode	EXIT		1617530		True				
ANR	1617580	Symbol	states [ i ] . number		1617530						
ANR	1617581	Symbol	* i		1617530						
ANR	1617582	Symbol	states [ i ] . state		1617530						
ANR	1617583	Symbol	i		1617530						
ANR	1617584	Symbol	state		1617530						
ANR	1617585	Symbol	* states		1617530						
ANR	1617586	Symbol	states		1617530						
ANR	1617587	Function	HibernatorBase :: Lookup	313:0:6767:7103							
ANR	1617588	FunctionDef	HibernatorBase :: Lookup (const char * name)		1617587	0					
ANR	1617589	CompoundStatement		315:0:6846:7103	1617587	0					
ANR	1617590	ForStatement	for ( int i = 0 ; states [ i ] . number >= 0 ; i ++ )		1617587	0					
ANR	1617591	ForInit	int i = 0 ;	316:6:6854:6863	1617587	0	True				
ANR	1617592	IdentifierDeclStatement	int i = 0 ;		1617587	0					
ANR	1617593	IdentifierDecl	i = 0		1617587	0					
ANR	1617594	IdentifierDeclType	int		1617587	0					
ANR	1617595	Identifier	i		1617587	1					
ANR	1617596	AssignmentExpression	i = 0		1617587	2		=			
ANR	1617597	Identifier	i		1617587	0					
ANR	1617598	PrimaryExpression	0		1617587	1					
ANR	1617599	Condition	states [ i ] . number >= 0	316:18:6866:6886	1617587	1	True				
ANR	1617600	RelationalExpression	states [ i ] . number >= 0		1617587	0		>=			
ANR	1617601	MemberAccess	states [ i ] . number		1617587	0					
ANR	1617602	ArrayIndexing	states [ i ]		1617587	0					
ANR	1617603	Identifier	states		1617587	0					
ANR	1617604	Identifier	i		1617587	1					
ANR	1617605	Identifier	number		1617587	1					
ANR	1617606	PrimaryExpression	0		1617587	1					
ANR	1617607	PostIncDecOperationExpression	i ++	316:42:6890:6892	1617587	2	True				
ANR	1617608	Identifier	i		1617587	0					
ANR	1617609	IncDec	++		1617587	1					
ANR	1617610	CompoundStatement		3:2:53:105	1617587	3					
ANR	1617611	IdentifierDeclStatement	const HibernatorBase :: StateLookup & state = states [ i ] ;	317:2:6900:6952	1617587	0	True				
ANR	1617612	IdentifierDecl	& state = states [ i ]		1617587	0					
ANR	1617613	IdentifierDeclType	const HibernatorBase :: StateLookup &		1617587	0					
ANR	1617614	Identifier	state		1617587	1					
ANR	1617615	AssignmentExpression	& state = states [ i ]		1617587	2		=			
ANR	1617616	Identifier	state		1617587	0					
ANR	1617617	ArrayIndexing	states [ i ]		1617587	1					
ANR	1617618	Identifier	states		1617587	0					
ANR	1617619	Identifier	i		1617587	1					
ANR	1617620	ForStatement	for ( int j = 0 ; state . strings [ j ] ; j ++ )		1617587	1					
ANR	1617621	ForInit	int j = 0 ;	319:7:6962:6971	1617587	0	True				
ANR	1617622	IdentifierDeclStatement	int j = 0 ;		1617587	0					
ANR	1617623	IdentifierDecl	j = 0		1617587	0					
ANR	1617624	IdentifierDeclType	int		1617587	0					
ANR	1617625	Identifier	j		1617587	1					
ANR	1617626	AssignmentExpression	j = 0		1617587	2		=			
ANR	1617627	Identifier	j		1617587	0					
ANR	1617628	PrimaryExpression	0		1617587	1					
ANR	1617629	Condition	state . strings [ j ]	319:19:6974:6989	1617587	1	True				
ANR	1617630	ArrayIndexing	state . strings [ j ]		1617587	0					
ANR	1617631	MemberAccess	state . strings		1617587	0					
ANR	1617632	Identifier	state		1617587	0					
ANR	1617633	Identifier	strings		1617587	1					
ANR	1617634	Identifier	j		1617587	1					
ANR	1617635	PostIncDecOperationExpression	j ++	319:38:6993:6995	1617587	2	True				
ANR	1617636	Identifier	j		1617587	0					
ANR	1617637	IncDec	++		1617587	1					
ANR	1617638	CompoundStatement		5:44:152:152	1617587	3					
ANR	1617639	IfStatement	"if ( strcasecmp ( state . strings [ j ] , name ) == 0 )"		1617587	0					
ANR	1617640	Condition	"strcasecmp ( state . strings [ j ] , name ) == 0"	320:8:7009:7048	1617587	0	True				
ANR	1617641	EqualityExpression	"strcasecmp ( state . strings [ j ] , name ) == 0"		1617587	0		==			
ANR	1617642	CallExpression	"strcasecmp ( state . strings [ j ] , name )"		1617587	0					
ANR	1617643	Callee	strcasecmp		1617587	0					
ANR	1617644	Identifier	strcasecmp		1617587	0					
ANR	1617645	ArgumentList	state . strings [ j ]		1617587	1					
ANR	1617646	Argument	state . strings [ j ]		1617587	0					
ANR	1617647	ArrayIndexing	state . strings [ j ]		1617587	0					
ANR	1617648	MemberAccess	state . strings		1617587	0					
ANR	1617649	Identifier	state		1617587	0					
ANR	1617650	Identifier	strings		1617587	1					
ANR	1617651	Identifier	j		1617587	1					
ANR	1617652	Argument	name		1617587	1					
ANR	1617653	Identifier	name		1617587	0					
ANR	1617654	PrimaryExpression	0		1617587	1					
ANR	1617655	CompoundStatement		6:51:205:205	1617587	1					
ANR	1617656	ReturnStatement	return state ;	321:4:7058:7070	1617587	0	True				
ANR	1617657	Identifier	state		1617587	0					
ANR	1617658	ReturnStatement	return states [ 0 ] ;	325:1:7085:7101	1617587	1	True				
ANR	1617659	ArrayIndexing	states [ 0 ]		1617587	0					
ANR	1617660	Identifier	states		1617587	0					
ANR	1617661	PrimaryExpression	0		1617587	1					
ANR	1617662	ReturnType	const HibernatorBase :: StateLookup &		1617587	1					
ANR	1617663	Identifier	HibernatorBase :: Lookup		1617587	2					
ANR	1617664	ParameterList	const char * name		1617587	3					
ANR	1617665	Parameter	const char * name	314:25:6827:6842	1617587	0	True				
ANR	1617666	ParameterType	const char *		1617587	0					
ANR	1617667	Identifier	name		1617587	1					
ANR	1617668	CFGEntryNode	ENTRY		1617587		True				
ANR	1617669	CFGExitNode	EXIT		1617587		True				
ANR	1617670	Symbol	state . strings		1617587						
ANR	1617671	Symbol	i		1617587						
ANR	1617672	Symbol	j		1617587						
ANR	1617673	Symbol	states		1617587						
ANR	1617674	Symbol	* state		1617587						
ANR	1617675	Symbol	states [ i ] . number		1617587						
ANR	1617676	Symbol	* i		1617587						
ANR	1617677	Symbol	* j		1617587						
ANR	1617678	Symbol	* state . strings		1617587						
ANR	1617679	Symbol	name		1617587						
ANR	1617680	Symbol	state		1617587						
ANR	1617681	Symbol	strcasecmp		1617587						
ANR	1617682	Symbol	* states		1617587						
