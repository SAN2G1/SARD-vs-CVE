command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3630891	File	data/converged/CVE-2011-4930_htcondor/src_condor_procd_proc_family_monitor.cpp								
ANR	3630892	Function	ProcFamilyMonitor :: ProcFamilyMonitor	40:0:1177:3669							
ANR	3630893	FunctionDef	"ProcFamilyMonitor :: ProcFamilyMonitor (pid_t pid , birthday_t birthday , int snapshot_interval , bool except_if_pid_dies)"		3630892	0					
ANR	3630894	CompoundStatement		48:0:1564:3669	3630892	0					
ANR	3630895	ExpressionStatement	ASSERT ( snapshot_interval >= - 1 )	52:1:1693:1724	3630892	0	True				
ANR	3630896	CallExpression	ASSERT ( snapshot_interval >= - 1 )		3630892	0					
ANR	3630897	Callee	ASSERT		3630892	0					
ANR	3630898	Identifier	ASSERT		3630892	0					
ANR	3630899	ArgumentList	snapshot_interval >= - 1		3630892	1					
ANR	3630900	Argument	snapshot_interval >= - 1		3630892	0					
ANR	3630901	RelationalExpression	snapshot_interval >= - 1		3630892	0		>=			
ANR	3630902	Identifier	snapshot_interval		3630892	0					
ANR	3630903	UnaryOperationExpression	- 1		3630892	1					
ANR	3630904	UnaryOperator	-		3630892	0					
ANR	3630905	PrimaryExpression	1		3630892	1					
ANR	3630906	ExpressionStatement	m_pid_tracker = new PIDTracker ( this )	57:1:1832:1868	3630892	1	True				
ANR	3630907	AssignmentExpression	m_pid_tracker = new PIDTracker ( this )		3630892	0		=			
ANR	3630908	Identifier	m_pid_tracker		3630892	0					
ANR	3630909	Identifier	this		3630892	1					
ANR	3630910	ExpressionStatement	ASSERT ( m_pid_tracker != NULL )	58:1:1871:1900	3630892	2	True				
ANR	3630911	CallExpression	ASSERT ( m_pid_tracker != NULL )		3630892	0					
ANR	3630912	Callee	ASSERT		3630892	0					
ANR	3630913	Identifier	ASSERT		3630892	0					
ANR	3630914	ArgumentList	m_pid_tracker != NULL		3630892	1					
ANR	3630915	Argument	m_pid_tracker != NULL		3630892	0					
ANR	3630916	EqualityExpression	m_pid_tracker != NULL		3630892	0		!=			
ANR	3630917	Identifier	m_pid_tracker		3630892	0					
ANR	3630918	Identifier	NULL		3630892	1					
ANR	3630919	ExpressionStatement	m_group_tracker = NULL	60:1:1922:1944	3630892	3	True				
ANR	3630920	AssignmentExpression	m_group_tracker = NULL		3630892	0		=			
ANR	3630921	Identifier	m_group_tracker		3630892	0					
ANR	3630922	Identifier	NULL		3630892	1					
ANR	3630923	ExpressionStatement	m_cgroup_tracker = NULL	63:1:1986:2009	3630892	4	True				
ANR	3630924	AssignmentExpression	m_cgroup_tracker = NULL		3630892	0		=			
ANR	3630925	Identifier	m_cgroup_tracker		3630892	0					
ANR	3630926	Identifier	NULL		3630892	1					
ANR	3630927	ExpressionStatement	m_login_tracker = new LoginTracker ( this )	65:1:2019:2059	3630892	5	True				
ANR	3630928	AssignmentExpression	m_login_tracker = new LoginTracker ( this )		3630892	0		=			
ANR	3630929	Identifier	m_login_tracker		3630892	0					
ANR	3630930	Identifier	this		3630892	1					
ANR	3630931	ExpressionStatement	ASSERT ( m_login_tracker != NULL )	66:1:2062:2093	3630892	6	True				
ANR	3630932	CallExpression	ASSERT ( m_login_tracker != NULL )		3630892	0					
ANR	3630933	Callee	ASSERT		3630892	0					
ANR	3630934	Identifier	ASSERT		3630892	0					
ANR	3630935	ArgumentList	m_login_tracker != NULL		3630892	1					
ANR	3630936	Argument	m_login_tracker != NULL		3630892	0					
ANR	3630937	EqualityExpression	m_login_tracker != NULL		3630892	0		!=			
ANR	3630938	Identifier	m_login_tracker		3630892	0					
ANR	3630939	Identifier	NULL		3630892	1					
ANR	3630940	ExpressionStatement	m_environment_tracker = new EnvironmentTracker ( this )	67:1:2096:2148	3630892	7	True				
ANR	3630941	AssignmentExpression	m_environment_tracker = new EnvironmentTracker ( this )		3630892	0		=			
ANR	3630942	Identifier	m_environment_tracker		3630892	0					
ANR	3630943	Identifier	this		3630892	1					
ANR	3630944	ExpressionStatement	ASSERT ( m_environment_tracker != NULL )	68:1:2151:2188	3630892	8	True				
ANR	3630945	CallExpression	ASSERT ( m_environment_tracker != NULL )		3630892	0					
ANR	3630946	Callee	ASSERT		3630892	0					
ANR	3630947	Identifier	ASSERT		3630892	0					
ANR	3630948	ArgumentList	m_environment_tracker != NULL		3630892	1					
ANR	3630949	Argument	m_environment_tracker != NULL		3630892	0					
ANR	3630950	EqualityExpression	m_environment_tracker != NULL		3630892	0		!=			
ANR	3630951	Identifier	m_environment_tracker		3630892	0					
ANR	3630952	Identifier	NULL		3630892	1					
ANR	3630953	ExpressionStatement	m_parent_tracker = new ParentTracker ( this )	69:1:2191:2233	3630892	9	True				
ANR	3630954	AssignmentExpression	m_parent_tracker = new ParentTracker ( this )		3630892	0		=			
ANR	3630955	Identifier	m_parent_tracker		3630892	0					
ANR	3630956	Identifier	this		3630892	1					
ANR	3630957	ExpressionStatement	ASSERT ( m_parent_tracker != NULL )	70:1:2236:2268	3630892	10	True				
ANR	3630958	CallExpression	ASSERT ( m_parent_tracker != NULL )		3630892	0					
ANR	3630959	Callee	ASSERT		3630892	0					
ANR	3630960	Identifier	ASSERT		3630892	0					
ANR	3630961	ArgumentList	m_parent_tracker != NULL		3630892	1					
ANR	3630962	Argument	m_parent_tracker != NULL		3630892	0					
ANR	3630963	EqualityExpression	m_parent_tracker != NULL		3630892	0		!=			
ANR	3630964	Identifier	m_parent_tracker		3630892	0					
ANR	3630965	Identifier	NULL		3630892	1					
ANR	3630966	ExpressionStatement	m_everybody_else = new ProcFamily ( this )	80:1:2618:2657	3630892	11	True				
ANR	3630967	AssignmentExpression	m_everybody_else = new ProcFamily ( this )		3630892	0		=			
ANR	3630968	Identifier	m_everybody_else		3630892	0					
ANR	3630969	Identifier	this		3630892	1					
ANR	3630970	ExpressionStatement	ASSERT ( m_everybody_else != NULL )	81:1:2660:2692	3630892	12	True				
ANR	3630971	CallExpression	ASSERT ( m_everybody_else != NULL )		3630892	0					
ANR	3630972	Callee	ASSERT		3630892	0					
ANR	3630973	Identifier	ASSERT		3630892	0					
ANR	3630974	ArgumentList	m_everybody_else != NULL		3630892	1					
ANR	3630975	Argument	m_everybody_else != NULL		3630892	0					
ANR	3630976	EqualityExpression	m_everybody_else != NULL		3630892	0		!=			
ANR	3630977	Identifier	m_everybody_else		3630892	0					
ANR	3630978	Identifier	NULL		3630892	1					
ANR	3630979	IdentifierDeclStatement	"ProcFamily * family = new ProcFamily ( this , pid , birthday , except_if_pid_dies ? pid : 0 , snapshot_interval ) ;"	88:1:2973:3226	3630892	13	True				
ANR	3630980	IdentifierDecl	"* family = new ProcFamily ( this , pid , birthday , except_if_pid_dies ? pid : 0 , snapshot_interval )"		3630892	0					
ANR	3630981	IdentifierDeclType	ProcFamily *		3630892	0					
ANR	3630982	Identifier	family		3630892	1					
ANR	3630983	AssignmentExpression	"* family = new ProcFamily ( this , pid , birthday , except_if_pid_dies ? pid : 0 , snapshot_interval )"		3630892	2		=			
ANR	3630984	Identifier	family		3630892	0					
ANR	3630985	Expression	"this , pid , birthday , except_if_pid_dies ? pid : 0 , snapshot_interval"		3630892	1					
ANR	3630986	Identifier	this		3630892	0					
ANR	3630987	Expression	"pid , birthday , except_if_pid_dies ? pid : 0 , snapshot_interval"		3630892	1					
ANR	3630988	Identifier	pid		3630892	0					
ANR	3630989	Expression	"birthday , except_if_pid_dies ? pid : 0 , snapshot_interval"		3630892	1					
ANR	3630990	Identifier	birthday		3630892	0					
ANR	3630991	Expression	"except_if_pid_dies ? pid : 0 , snapshot_interval"		3630892	1					
ANR	3630992	ConditionalExpression	except_if_pid_dies ? pid : 0		3630892	0					
ANR	3630993	Condition	except_if_pid_dies		3630892	0					
ANR	3630994	Identifier	except_if_pid_dies		3630892	0					
ANR	3630995	Identifier	pid		3630892	1					
ANR	3630996	PrimaryExpression	0		3630892	2					
ANR	3630997	Identifier	snapshot_interval		3630892	1					
ANR	3630998	ExpressionStatement	ASSERT ( family != NULL )	93:1:3229:3251	3630892	14	True				
ANR	3630999	CallExpression	ASSERT ( family != NULL )		3630892	0					
ANR	3631000	Callee	ASSERT		3630892	0					
ANR	3631001	Identifier	ASSERT		3630892	0					
ANR	3631002	ArgumentList	family != NULL		3630892	1					
ANR	3631003	Argument	family != NULL		3630892	0					
ANR	3631004	EqualityExpression	family != NULL		3630892	0		!=			
ANR	3631005	Identifier	family		3630892	0					
ANR	3631006	Identifier	NULL		3630892	1					
ANR	3631007	ExpressionStatement	"m_pid_tracker -> add_mapping ( family , pid , birthday )"	97:1:3325:3374	3630892	15	True				
ANR	3631008	CallExpression	"m_pid_tracker -> add_mapping ( family , pid , birthday )"		3630892	0					
ANR	3631009	Callee	m_pid_tracker -> add_mapping		3630892	0					
ANR	3631010	PtrMemberAccess	m_pid_tracker -> add_mapping		3630892	0					
ANR	3631011	Identifier	m_pid_tracker		3630892	0					
ANR	3631012	Identifier	add_mapping		3630892	1					
ANR	3631013	ArgumentList	family		3630892	1					
ANR	3631014	Argument	family		3630892	0					
ANR	3631015	Identifier	family		3630892	0					
ANR	3631016	Argument	pid		3630892	1					
ANR	3631017	Identifier	pid		3630892	0					
ANR	3631018	Argument	birthday		3630892	2					
ANR	3631019	Identifier	birthday		3630892	0					
ANR	3631020	ExpressionStatement	m_tree = new Tree < ProcFamily * > ( family )	101:1:3428:3466	3630892	16	True				
ANR	3631021	AssignmentExpression	m_tree = new Tree < ProcFamily * > ( family )		3630892	0		=			
ANR	3631022	Identifier	m_tree		3630892	0					
ANR	3631023	Identifier	family		3630892	1					
ANR	3631024	ExpressionStatement	ASSERT ( m_tree != NULL )	102:1:3469:3491	3630892	17	True				
ANR	3631025	CallExpression	ASSERT ( m_tree != NULL )		3630892	0					
ANR	3631026	Callee	ASSERT		3630892	0					
ANR	3631027	Identifier	ASSERT		3630892	0					
ANR	3631028	ArgumentList	m_tree != NULL		3630892	1					
ANR	3631029	Argument	m_tree != NULL		3630892	0					
ANR	3631030	EqualityExpression	m_tree != NULL		3630892	0		!=			
ANR	3631031	Identifier	m_tree		3630892	0					
ANR	3631032	Identifier	NULL		3630892	1					
ANR	3631033	IdentifierDeclStatement	"int ret = m_family_table . insert ( pid , m_tree ) ;"	106:1:3556:3600	3630892	18	True				
ANR	3631034	IdentifierDecl	"ret = m_family_table . insert ( pid , m_tree )"		3630892	0					
ANR	3631035	IdentifierDeclType	int		3630892	0					
ANR	3631036	Identifier	ret		3630892	1					
ANR	3631037	AssignmentExpression	"ret = m_family_table . insert ( pid , m_tree )"		3630892	2		=			
ANR	3631038	Identifier	ret		3630892	0					
ANR	3631039	CallExpression	"m_family_table . insert ( pid , m_tree )"		3630892	1					
ANR	3631040	Callee	m_family_table . insert		3630892	0					
ANR	3631041	MemberAccess	m_family_table . insert		3630892	0					
ANR	3631042	Identifier	m_family_table		3630892	0					
ANR	3631043	Identifier	insert		3630892	1					
ANR	3631044	ArgumentList	pid		3630892	1					
ANR	3631045	Argument	pid		3630892	0					
ANR	3631046	Identifier	pid		3630892	0					
ANR	3631047	Argument	m_tree		3630892	1					
ANR	3631048	Identifier	m_tree		3630892	0					
ANR	3631049	ExpressionStatement	ASSERT ( ret != - 1 )	107:1:3603:3620	3630892	19	True				
ANR	3631050	CallExpression	ASSERT ( ret != - 1 )		3630892	0					
ANR	3631051	Callee	ASSERT		3630892	0					
ANR	3631052	Identifier	ASSERT		3630892	0					
ANR	3631053	ArgumentList	ret != - 1		3630892	1					
ANR	3631054	Argument	ret != - 1		3630892	0					
ANR	3631055	EqualityExpression	ret != - 1		3630892	0		!=			
ANR	3631056	Identifier	ret		3630892	0					
ANR	3631057	UnaryOperationExpression	- 1		3630892	1					
ANR	3631058	UnaryOperator	-		3630892	0					
ANR	3631059	PrimaryExpression	1		3630892	1					
ANR	3631060	ExpressionStatement	snapshot ( )	111:1:3657:3667	3630892	20	True				
ANR	3631061	CallExpression	snapshot ( )		3630892	0					
ANR	3631062	Callee	snapshot		3630892	0					
ANR	3631063	Identifier	snapshot		3630892	0					
ANR	3631064	ArgumentList			3630892	1					
ANR	3631065	Identifier	ProcFamilyMonitor :: ProcFamilyMonitor		3630892	1					
ANR	3631066	ParameterList	"pid_t pid , birthday_t birthday , int snapshot_interval , bool except_if_pid_dies"		3630892	2					
ANR	3631067	Parameter	pid_t pid	40:37:1214:1222	3630892	0	True				
ANR	3631068	ParameterType	pid_t		3630892	0					
ANR	3631069	Identifier	pid		3630892	1					
ANR	3631070	Parameter	birthday_t birthday	41:37:1262:1280	3630892	1	True				
ANR	3631071	ParameterType	birthday_t		3630892	0					
ANR	3631072	Identifier	birthday		3630892	1					
ANR	3631073	Parameter	int snapshot_interval	42:37:1320:1340	3630892	2	True				
ANR	3631074	ParameterType	int		3630892	0					
ANR	3631075	Identifier	snapshot_interval		3630892	1					
ANR	3631076	Parameter	bool except_if_pid_dies	43:10:1353:1375	3630892	3	True				
ANR	3631077	ParameterType	bool		3630892	0					
ANR	3631078	Identifier	except_if_pid_dies		3630892	1					
ANR	3631079	CFGEntryNode	ENTRY		3630892		True				
ANR	3631080	CFGExitNode	EXIT		3630892		True				
ANR	3631081	Symbol	birthday		3630892						
ANR	3631082	Symbol	ret		3630892						
ANR	3631083	Symbol	m_tree		3630892						
ANR	3631084	Symbol	NULL		3630892						
ANR	3631085	Symbol	snapshot_interval		3630892						
ANR	3631086	Symbol	m_family_table . insert		3630892						
ANR	3631087	Symbol	this		3630892						
ANR	3631088	Symbol	pid		3630892						
ANR	3631089	Symbol	m_group_tracker		3630892						
ANR	3631090	Symbol	except_if_pid_dies		3630892						
ANR	3631091	Symbol	m_login_tracker		3630892						
ANR	3631092	Symbol	m_everybody_else		3630892						
ANR	3631093	Symbol	m_family_table		3630892						
ANR	3631094	Symbol	m_parent_tracker		3630892						
ANR	3631095	Symbol	m_environment_tracker		3630892						
ANR	3631096	Symbol	m_cgroup_tracker		3630892						
ANR	3631097	Symbol	family		3630892						
ANR	3631098	Symbol	m_pid_tracker		3630892						
ANR	3631099	Function	ProcFamilyMonitor :: ~ProcFamilyMonitor	114:0:3672:4080							
ANR	3631100	FunctionDef	ProcFamilyMonitor :: ~ProcFamilyMonitor ()		3631099	0					
ANR	3631101	CompoundStatement		115:0:3712:4080	3631099	0					
ANR	3631102	ExpressionStatement	delete_all_families ( m_tree )	116:1:3715:3742	3631099	0	True				
ANR	3631103	CallExpression	delete_all_families ( m_tree )		3631099	0					
ANR	3631104	Callee	delete_all_families		3631099	0					
ANR	3631105	Identifier	delete_all_families		3631099	0					
ANR	3631106	ArgumentList	m_tree		3631099	1					
ANR	3631107	Argument	m_tree		3631099	0					
ANR	3631108	Identifier	m_tree		3631099	0					
ANR	3631109	Statement	delete	117:1:3745:3750	3631099	1	True				
ANR	3631110	ExpressionStatement	m_tree	117:8:3752:3758	3631099	2	True				
ANR	3631111	Identifier	m_tree		3631099	0					
ANR	3631112	Statement	delete	118:1:3761:3766	3631099	3	True				
ANR	3631113	ExpressionStatement	m_everybody_else	118:8:3768:3784	3631099	4	True				
ANR	3631114	Identifier	m_everybody_else		3631099	0					
ANR	3631115	Statement	delete	119:1:3787:3792	3631099	5	True				
ANR	3631116	ExpressionStatement	m_parent_tracker	119:8:3794:3810	3631099	6	True				
ANR	3631117	Identifier	m_parent_tracker		3631099	0					
ANR	3631118	Statement	delete	120:1:3813:3818	3631099	7	True				
ANR	3631119	ExpressionStatement	m_environment_tracker	120:8:3820:3841	3631099	8	True				
ANR	3631120	Identifier	m_environment_tracker		3631099	0					
ANR	3631121	Statement	delete	121:1:3844:3849	3631099	9	True				
ANR	3631122	ExpressionStatement	m_login_tracker	121:8:3851:3866	3631099	10	True				
ANR	3631123	Identifier	m_login_tracker		3631099	0					
ANR	3631124	IfStatement	if ( m_group_tracker != NULL )		3631099	11					
ANR	3631125	Condition	m_group_tracker != NULL	123:5:3892:3914	3631099	0	True				
ANR	3631126	EqualityExpression	m_group_tracker != NULL		3631099	0		!=			
ANR	3631127	Identifier	m_group_tracker		3631099	0					
ANR	3631128	Identifier	NULL		3631099	1					
ANR	3631129	CompoundStatement		9:30:204:204	3631099	1					
ANR	3631130	Statement	delete	124:2:3921:3926	3631099	0	True				
ANR	3631131	ExpressionStatement	m_group_tracker	124:9:3928:3943	3631099	1	True				
ANR	3631132	Identifier	m_group_tracker		3631099	0					
ANR	3631133	IfStatement	if ( m_cgroup_tracker != NULL )		3631099	12					
ANR	3631134	Condition	m_cgroup_tracker != NULL	128:5:3992:4015	3631099	0	True				
ANR	3631135	EqualityExpression	m_cgroup_tracker != NULL		3631099	0		!=			
ANR	3631136	Identifier	m_cgroup_tracker		3631099	0					
ANR	3631137	Identifier	NULL		3631099	1					
ANR	3631138	CompoundStatement		14:31:305:305	3631099	1					
ANR	3631139	Statement	delete	129:2:4022:4027	3631099	0	True				
ANR	3631140	ExpressionStatement	m_cgroup_tracker	129:9:4029:4045	3631099	1	True				
ANR	3631141	Identifier	m_cgroup_tracker		3631099	0					
ANR	3631142	Statement	delete	132:1:4058:4063	3631099	13	True				
ANR	3631143	ExpressionStatement	m_pid_tracker	132:8:4065:4078	3631099	14	True				
ANR	3631144	Identifier	m_pid_tracker		3631099	0					
ANR	3631145	Identifier	ProcFamilyMonitor :: ~ProcFamilyMonitor		3631099	1					
ANR	3631146	ParameterList			3631099	2					
ANR	3631147	CFGEntryNode	ENTRY		3631099		True				
ANR	3631148	CFGExitNode	EXIT		3631099		True				
ANR	3631149	Symbol	m_tree		3631099						
ANR	3631150	Symbol	NULL		3631099						
ANR	3631151	Symbol	m_cgroup_tracker		3631099						
ANR	3631152	Symbol	m_group_tracker		3631099						
ANR	3631153	Function	ProcFamilyMonitor :: enable_group_tracking	136:0:4102:4510							
ANR	3631154	FunctionDef	"ProcFamilyMonitor :: enable_group_tracking (gid_t min_tracking_gid , gid_t max_tracking_gid , bool allocating)"		3631153	0					
ANR	3631155	CompoundStatement		140:0:4265:4510	3631153	0					
ANR	3631156	ExpressionStatement	ASSERT ( m_group_tracker == NULL )	141:1:4268:4299	3631153	0	True				
ANR	3631157	CallExpression	ASSERT ( m_group_tracker == NULL )		3631153	0					
ANR	3631158	Callee	ASSERT		3631153	0					
ANR	3631159	Identifier	ASSERT		3631153	0					
ANR	3631160	ArgumentList	m_group_tracker == NULL		3631153	1					
ANR	3631161	Argument	m_group_tracker == NULL		3631153	0					
ANR	3631162	EqualityExpression	m_group_tracker == NULL		3631153	0		==			
ANR	3631163	Identifier	m_group_tracker		3631153	0					
ANR	3631164	Identifier	NULL		3631153	1					
ANR	3631165	ExpressionStatement	"m_group_tracker = new GroupTracker ( this , min_tracking_gid , max_tracking_gid , allocating )"	142:1:4302:4474	3631153	1	True				
ANR	3631166	AssignmentExpression	"m_group_tracker = new GroupTracker ( this , min_tracking_gid , max_tracking_gid , allocating )"		3631153	0		=			
ANR	3631167	Identifier	m_group_tracker		3631153	0					
ANR	3631168	Expression	"this , min_tracking_gid , max_tracking_gid , allocating"		3631153	1					
ANR	3631169	Identifier	this		3631153	0					
ANR	3631170	Expression	"min_tracking_gid , max_tracking_gid , allocating"		3631153	1					
ANR	3631171	Identifier	min_tracking_gid		3631153	0					
ANR	3631172	Expression	"max_tracking_gid , allocating"		3631153	1					
ANR	3631173	Identifier	max_tracking_gid		3631153	0					
ANR	3631174	Identifier	allocating		3631153	1					
ANR	3631175	ExpressionStatement	ASSERT ( m_group_tracker != NULL )	146:1:4477:4508	3631153	2	True				
ANR	3631176	CallExpression	ASSERT ( m_group_tracker != NULL )		3631153	0					
ANR	3631177	Callee	ASSERT		3631153	0					
ANR	3631178	Identifier	ASSERT		3631153	0					
ANR	3631179	ArgumentList	m_group_tracker != NULL		3631153	1					
ANR	3631180	Argument	m_group_tracker != NULL		3631153	0					
ANR	3631181	EqualityExpression	m_group_tracker != NULL		3631153	0		!=			
ANR	3631182	Identifier	m_group_tracker		3631153	0					
ANR	3631183	Identifier	NULL		3631153	1					
ANR	3631184	ReturnType	void		3631153	1					
ANR	3631185	Identifier	ProcFamilyMonitor :: enable_group_tracking		3631153	2					
ANR	3631186	ParameterList	"gid_t min_tracking_gid , gid_t max_tracking_gid , bool allocating"		3631153	3					
ANR	3631187	Parameter	gid_t min_tracking_gid	137:41:4148:4169	3631153	0	True				
ANR	3631188	ParameterType	gid_t		3631153	0					
ANR	3631189	Identifier	min_tracking_gid		3631153	1					
ANR	3631190	Parameter	gid_t max_tracking_gid	138:41:4213:4234	3631153	1	True				
ANR	3631191	ParameterType	gid_t		3631153	0					
ANR	3631192	Identifier	max_tracking_gid		3631153	1					
ANR	3631193	Parameter	bool allocating	139:11:4248:4262	3631153	2	True				
ANR	3631194	ParameterType	bool		3631153	0					
ANR	3631195	Identifier	allocating		3631153	1					
ANR	3631196	CFGEntryNode	ENTRY		3631153		True				
ANR	3631197	CFGExitNode	EXIT		3631153		True				
ANR	3631198	Symbol	NULL		3631153						
ANR	3631199	Symbol	min_tracking_gid		3631153						
ANR	3631200	Symbol	allocating		3631153						
ANR	3631201	Symbol	this		3631153						
ANR	3631202	Symbol	max_tracking_gid		3631153						
ANR	3631203	Symbol	m_group_tracker		3631153						
ANR	3631204	Function	ProcFamilyMonitor :: enable_cgroup_tracking	151:0:4552:4718							
ANR	3631205	FunctionDef	ProcFamilyMonitor :: enable_cgroup_tracking ()		3631204	0					
ANR	3631206	CompoundStatement		153:0:4601:4718	3631204	0					
ANR	3631207	ExpressionStatement	ASSERT ( m_cgroup_tracker == NULL )	154:1:4604:4636	3631204	0	True				
ANR	3631208	CallExpression	ASSERT ( m_cgroup_tracker == NULL )		3631204	0					
ANR	3631209	Callee	ASSERT		3631204	0					
ANR	3631210	Identifier	ASSERT		3631204	0					
ANR	3631211	ArgumentList	m_cgroup_tracker == NULL		3631204	1					
ANR	3631212	Argument	m_cgroup_tracker == NULL		3631204	0					
ANR	3631213	EqualityExpression	m_cgroup_tracker == NULL		3631204	0		==			
ANR	3631214	Identifier	m_cgroup_tracker		3631204	0					
ANR	3631215	Identifier	NULL		3631204	1					
ANR	3631216	ExpressionStatement	m_cgroup_tracker = new CGroupTracker ( this )	155:1:4639:4681	3631204	1	True				
ANR	3631217	AssignmentExpression	m_cgroup_tracker = new CGroupTracker ( this )		3631204	0		=			
ANR	3631218	Identifier	m_cgroup_tracker		3631204	0					
ANR	3631219	Identifier	this		3631204	1					
ANR	3631220	ExpressionStatement	ASSERT ( m_cgroup_tracker != NULL )	156:1:4684:4716	3631204	2	True				
ANR	3631221	CallExpression	ASSERT ( m_cgroup_tracker != NULL )		3631204	0					
ANR	3631222	Callee	ASSERT		3631204	0					
ANR	3631223	Identifier	ASSERT		3631204	0					
ANR	3631224	ArgumentList	m_cgroup_tracker != NULL		3631204	1					
ANR	3631225	Argument	m_cgroup_tracker != NULL		3631204	0					
ANR	3631226	EqualityExpression	m_cgroup_tracker != NULL		3631204	0		!=			
ANR	3631227	Identifier	m_cgroup_tracker		3631204	0					
ANR	3631228	Identifier	NULL		3631204	1					
ANR	3631229	ReturnType	void		3631204	1					
ANR	3631230	Identifier	ProcFamilyMonitor :: enable_cgroup_tracking		3631204	2					
ANR	3631231	ParameterList			3631204	3					
ANR	3631232	CFGEntryNode	ENTRY		3631204		True				
ANR	3631233	CFGExitNode	EXIT		3631204		True				
ANR	3631234	Symbol	NULL		3631204						
ANR	3631235	Symbol	this		3631204						
ANR	3631236	Symbol	m_cgroup_tracker		3631204						
ANR	3631237	Function	ProcFamilyMonitor :: register_subfamily	160:0:4728:8059							
ANR	3631238	FunctionDef	"ProcFamilyMonitor :: register_subfamily (pid_t root_pid , pid_t watcher_pid , int max_snapshot_interval)"		3631237	0					
ANR	3631239	CompoundStatement		164:0:4924:8059	3631237	0					
ANR	3631240	IdentifierDeclStatement	int ret ;	165:1:4927:4934	3631237	0	True				
ANR	3631241	IdentifierDecl	ret		3631237	0					
ANR	3631242	IdentifierDeclType	int		3631237	0					
ANR	3631243	Identifier	ret		3631237	1					
ANR	3631244	IfStatement	if ( root_pid <= 0 )		3631237	1					
ANR	3631245	Condition	root_pid <= 0	169:5:4976:4988	3631237	0	True				
ANR	3631246	RelationalExpression	root_pid <= 0		3631237	0		<=			
ANR	3631247	Identifier	root_pid		3631237	0					
ANR	3631248	PrimaryExpression	0		3631237	1					
ANR	3631249	CompoundStatement		6:20:66:66	3631237	1					
ANR	3631250	ExpressionStatement	"dprintf ( D_ALWAYS , ""register_subfamily failure: bad root pid: %u\\n"" , root_pid )"	170:2:4995:5092	3631237	0	True				
ANR	3631251	CallExpression	"dprintf ( D_ALWAYS , ""register_subfamily failure: bad root pid: %u\\n"" , root_pid )"		3631237	0					
ANR	3631252	Callee	dprintf		3631237	0					
ANR	3631253	Identifier	dprintf		3631237	0					
ANR	3631254	ArgumentList	D_ALWAYS		3631237	1					
ANR	3631255	Argument	D_ALWAYS		3631237	0					
ANR	3631256	Identifier	D_ALWAYS		3631237	0					
ANR	3631257	Argument	"""register_subfamily failure: bad root pid: %u\\n"""		3631237	1					
ANR	3631258	PrimaryExpression	"""register_subfamily failure: bad root pid: %u\\n"""		3631237	0					
ANR	3631259	Argument	root_pid		3631237	2					
ANR	3631260	Identifier	root_pid		3631237	0					
ANR	3631261	ReturnStatement	return PROC_FAMILY_ERROR_BAD_ROOT_PID ;	173:2:5096:5133	3631237	1	True				
ANR	3631262	Identifier	PROC_FAMILY_ERROR_BAD_ROOT_PID		3631237	0					
ANR	3631263	IfStatement	if ( watcher_pid < 0 )		3631237	2					
ANR	3631264	Condition	watcher_pid < 0	180:5:5317:5331	3631237	0	True				
ANR	3631265	RelationalExpression	watcher_pid < 0		3631237	0		<			
ANR	3631266	Identifier	watcher_pid		3631237	0					
ANR	3631267	PrimaryExpression	0		3631237	1					
ANR	3631268	CompoundStatement		17:22:409:409	3631237	1					
ANR	3631269	ExpressionStatement	"dprintf ( D_ALWAYS , ""register_subfamily failure; bad watcher pid: %u\\n"" , watcher_pid )"	181:2:5338:5441	3631237	0	True				
ANR	3631270	CallExpression	"dprintf ( D_ALWAYS , ""register_subfamily failure; bad watcher pid: %u\\n"" , watcher_pid )"		3631237	0					
ANR	3631271	Callee	dprintf		3631237	0					
ANR	3631272	Identifier	dprintf		3631237	0					
ANR	3631273	ArgumentList	D_ALWAYS		3631237	1					
ANR	3631274	Argument	D_ALWAYS		3631237	0					
ANR	3631275	Identifier	D_ALWAYS		3631237	0					
ANR	3631276	Argument	"""register_subfamily failure; bad watcher pid: %u\\n"""		3631237	1					
ANR	3631277	PrimaryExpression	"""register_subfamily failure; bad watcher pid: %u\\n"""		3631237	0					
ANR	3631278	Argument	watcher_pid		3631237	2					
ANR	3631279	Identifier	watcher_pid		3631237	0					
ANR	3631280	ReturnStatement	return PROC_FAMILY_ERROR_BAD_WATCHER_PID ;	184:2:5445:5485	3631237	1	True				
ANR	3631281	Identifier	PROC_FAMILY_ERROR_BAD_WATCHER_PID		3631237	0					
ANR	3631282	IfStatement	if ( max_snapshot_interval < - 1 )		3631237	3					
ANR	3631283	Condition	max_snapshot_interval < - 1	190:5:5578:5603	3631237	0	True				
ANR	3631284	RelationalExpression	max_snapshot_interval < - 1		3631237	0		<			
ANR	3631285	Identifier	max_snapshot_interval		3631237	0					
ANR	3631286	UnaryOperationExpression	- 1		3631237	1					
ANR	3631287	UnaryOperator	-		3631237	0					
ANR	3631288	PrimaryExpression	1		3631237	1					
ANR	3631289	CompoundStatement		27:33:681:681	3631237	1					
ANR	3631290	ExpressionStatement	"dprintf ( D_ALWAYS , ""register_subfamily failure: bad max snapshot interval: %d\\n"" , max_snapshot_interval )"	191:2:5610:5733	3631237	0	True				
ANR	3631291	CallExpression	"dprintf ( D_ALWAYS , ""register_subfamily failure: bad max snapshot interval: %d\\n"" , max_snapshot_interval )"		3631237	0					
ANR	3631292	Callee	dprintf		3631237	0					
ANR	3631293	Identifier	dprintf		3631237	0					
ANR	3631294	ArgumentList	D_ALWAYS		3631237	1					
ANR	3631295	Argument	D_ALWAYS		3631237	0					
ANR	3631296	Identifier	D_ALWAYS		3631237	0					
ANR	3631297	Argument	"""register_subfamily failure: bad max snapshot interval: %d\\n"""		3631237	1					
ANR	3631298	PrimaryExpression	"""register_subfamily failure: bad max snapshot interval: %d\\n"""		3631237	0					
ANR	3631299	Argument	max_snapshot_interval		3631237	2					
ANR	3631300	Identifier	max_snapshot_interval		3631237	0					
ANR	3631301	ReturnStatement	return PROC_FAMILY_ERROR_BAD_SNAPSHOT_INTERVAL ;	194:2:5737:5783	3631237	1	True				
ANR	3631302	Identifier	PROC_FAMILY_ERROR_BAD_SNAPSHOT_INTERVAL		3631237	0					
ANR	3631303	ExpressionStatement	snapshot ( )	199:1:5850:5860	3631237	4	True				
ANR	3631304	CallExpression	snapshot ( )		3631237	0					
ANR	3631305	Callee	snapshot		3631237	0					
ANR	3631306	Identifier	snapshot		3631237	0					
ANR	3631307	ArgumentList			3631237	1					
ANR	3631308	IdentifierDeclStatement	ProcFamilyMember * member ;	205:1:6050:6074	3631237	5	True				
ANR	3631309	IdentifierDecl	* member		3631237	0					
ANR	3631310	IdentifierDeclType	ProcFamilyMember *		3631237	0					
ANR	3631311	Identifier	member		3631237	1					
ANR	3631312	ExpressionStatement	"ret = m_member_table . lookup ( root_pid , member )"	206:1:6077:6122	3631237	6	True				
ANR	3631313	AssignmentExpression	"ret = m_member_table . lookup ( root_pid , member )"		3631237	0		=			
ANR	3631314	Identifier	ret		3631237	0					
ANR	3631315	CallExpression	"m_member_table . lookup ( root_pid , member )"		3631237	1					
ANR	3631316	Callee	m_member_table . lookup		3631237	0					
ANR	3631317	MemberAccess	m_member_table . lookup		3631237	0					
ANR	3631318	Identifier	m_member_table		3631237	0					
ANR	3631319	Identifier	lookup		3631237	1					
ANR	3631320	ArgumentList	root_pid		3631237	1					
ANR	3631321	Argument	root_pid		3631237	0					
ANR	3631322	Identifier	root_pid		3631237	0					
ANR	3631323	Argument	member		3631237	1					
ANR	3631324	Identifier	member		3631237	0					
ANR	3631325	IfStatement	if ( ( ret == - 1 ) || ( member -> get_proc_family ( ) == m_everybody_else ) )		3631237	7					
ANR	3631326	Condition	( ret == - 1 ) || ( member -> get_proc_family ( ) == m_everybody_else )	207:5:6129:6190	3631237	0	True				
ANR	3631327	OrExpression	( ret == - 1 ) || ( member -> get_proc_family ( ) == m_everybody_else )		3631237	0		||			
ANR	3631328	EqualityExpression	ret == - 1		3631237	0		==			
ANR	3631329	Identifier	ret		3631237	0					
ANR	3631330	UnaryOperationExpression	- 1		3631237	1					
ANR	3631331	UnaryOperator	-		3631237	0					
ANR	3631332	PrimaryExpression	1		3631237	1					
ANR	3631333	EqualityExpression	member -> get_proc_family ( ) == m_everybody_else		3631237	1		==			
ANR	3631334	CallExpression	member -> get_proc_family ( )		3631237	0					
ANR	3631335	Callee	member -> get_proc_family		3631237	0					
ANR	3631336	PtrMemberAccess	member -> get_proc_family		3631237	0					
ANR	3631337	Identifier	member		3631237	0					
ANR	3631338	Identifier	get_proc_family		3631237	1					
ANR	3631339	ArgumentList			3631237	1					
ANR	3631340	Identifier	m_everybody_else		3631237	1					
ANR	3631341	CompoundStatement		44:69:1268:1268	3631237	1					
ANR	3631342	ExpressionStatement	"dprintf ( D_ALWAYS , ""register_subfamily failure: pid %u not in process tree\\n"" , root_pid )"	208:2:6197:6304	3631237	0	True				
ANR	3631343	CallExpression	"dprintf ( D_ALWAYS , ""register_subfamily failure: pid %u not in process tree\\n"" , root_pid )"		3631237	0					
ANR	3631344	Callee	dprintf		3631237	0					
ANR	3631345	Identifier	dprintf		3631237	0					
ANR	3631346	ArgumentList	D_ALWAYS		3631237	1					
ANR	3631347	Argument	D_ALWAYS		3631237	0					
ANR	3631348	Identifier	D_ALWAYS		3631237	0					
ANR	3631349	Argument	"""register_subfamily failure: pid %u not in process tree\\n"""		3631237	1					
ANR	3631350	PrimaryExpression	"""register_subfamily failure: pid %u not in process tree\\n"""		3631237	0					
ANR	3631351	Argument	root_pid		3631237	2					
ANR	3631352	Identifier	root_pid		3631237	0					
ANR	3631353	ReturnStatement	return PROC_FAMILY_ERROR_PROCESS_NOT_FAMILY ;	211:2:6308:6351	3631237	1	True				
ANR	3631354	Identifier	PROC_FAMILY_ERROR_PROCESS_NOT_FAMILY		3631237	0					
ANR	3631355	IdentifierDeclStatement	Tree < ProcFamily * > * tree = lookup_family ( root_pid ) ;	216:1:6424:6473	3631237	8	True				
ANR	3631356	IdentifierDecl	* tree = lookup_family ( root_pid )		3631237	0					
ANR	3631357	IdentifierDeclType	Tree < ProcFamily * > *		3631237	0					
ANR	3631358	Identifier	tree		3631237	1					
ANR	3631359	AssignmentExpression	* tree = lookup_family ( root_pid )		3631237	2		=			
ANR	3631360	Identifier	tree		3631237	0					
ANR	3631361	CallExpression	lookup_family ( root_pid )		3631237	1					
ANR	3631362	Callee	lookup_family		3631237	0					
ANR	3631363	Identifier	lookup_family		3631237	0					
ANR	3631364	ArgumentList	root_pid		3631237	1					
ANR	3631365	Argument	root_pid		3631237	0					
ANR	3631366	Identifier	root_pid		3631237	0					
ANR	3631367	IfStatement	if ( tree != NULL )		3631237	9					
ANR	3631368	Condition	tree != NULL	217:5:6480:6491	3631237	0	True				
ANR	3631369	EqualityExpression	tree != NULL		3631237	0		!=			
ANR	3631370	Identifier	tree		3631237	0					
ANR	3631371	Identifier	NULL		3631237	1					
ANR	3631372	CompoundStatement		54:19:1569:1569	3631237	1					
ANR	3631373	ExpressionStatement	"dprintf ( D_ALWAYS , ""register_subfamily: pid %u already registered\\n"" , root_pid )"	218:2:6498:6596	3631237	0	True				
ANR	3631374	CallExpression	"dprintf ( D_ALWAYS , ""register_subfamily: pid %u already registered\\n"" , root_pid )"		3631237	0					
ANR	3631375	Callee	dprintf		3631237	0					
ANR	3631376	Identifier	dprintf		3631237	0					
ANR	3631377	ArgumentList	D_ALWAYS		3631237	1					
ANR	3631378	Argument	D_ALWAYS		3631237	0					
ANR	3631379	Identifier	D_ALWAYS		3631237	0					
ANR	3631380	Argument	"""register_subfamily: pid %u already registered\\n"""		3631237	1					
ANR	3631381	PrimaryExpression	"""register_subfamily: pid %u already registered\\n"""		3631237	0					
ANR	3631382	Argument	root_pid		3631237	2					
ANR	3631383	Identifier	root_pid		3631237	0					
ANR	3631384	ReturnStatement	return PROC_FAMILY_ERROR_ALREADY_REGISTERED ;	221:2:6600:6643	3631237	1	True				
ANR	3631385	Identifier	PROC_FAMILY_ERROR_ALREADY_REGISTERED		3631237	0					
ANR	3631386	IdentifierDeclStatement	"ProcFamily * family = new ProcFamily ( this , root_pid , member -> get_proc_info ( ) -> birthday , watcher_pid , max_snapshot_interval ) ;"	226:1:6688:6958	3631237	10	True				
ANR	3631387	IdentifierDecl	"* family = new ProcFamily ( this , root_pid , member -> get_proc_info ( ) -> birthday , watcher_pid , max_snapshot_interval )"		3631237	0					
ANR	3631388	IdentifierDeclType	ProcFamily *		3631237	0					
ANR	3631389	Identifier	family		3631237	1					
ANR	3631390	AssignmentExpression	"* family = new ProcFamily ( this , root_pid , member -> get_proc_info ( ) -> birthday , watcher_pid , max_snapshot_interval )"		3631237	2		=			
ANR	3631391	Identifier	family		3631237	0					
ANR	3631392	Expression	"this , root_pid , member -> get_proc_info ( ) -> birthday , watcher_pid , max_snapshot_interval"		3631237	1					
ANR	3631393	Identifier	this		3631237	0					
ANR	3631394	Expression	"root_pid , member -> get_proc_info ( ) -> birthday , watcher_pid , max_snapshot_interval"		3631237	1					
ANR	3631395	Identifier	root_pid		3631237	0					
ANR	3631396	Expression	"member -> get_proc_info ( ) -> birthday , watcher_pid , max_snapshot_interval"		3631237	1					
ANR	3631397	PtrMemberAccess	member -> get_proc_info ( ) -> birthday		3631237	0					
ANR	3631398	CallExpression	member -> get_proc_info ( )		3631237	0					
ANR	3631399	Callee	member -> get_proc_info		3631237	0					
ANR	3631400	PtrMemberAccess	member -> get_proc_info		3631237	0					
ANR	3631401	Identifier	member		3631237	0					
ANR	3631402	Identifier	get_proc_info		3631237	1					
ANR	3631403	ArgumentList			3631237	1					
ANR	3631404	Identifier	birthday		3631237	1					
ANR	3631405	Expression	"watcher_pid , max_snapshot_interval"		3631237	1					
ANR	3631406	Identifier	watcher_pid		3631237	0					
ANR	3631407	Identifier	max_snapshot_interval		3631237	1					
ANR	3631408	ExpressionStatement	"m_pid_tracker -> add_mapping ( family , root_pid , member -> get_proc_info ( ) -> birthday )"	234:1:7025:7160	3631237	11	True				
ANR	3631409	CallExpression	"m_pid_tracker -> add_mapping ( family , root_pid , member -> get_proc_info ( ) -> birthday )"		3631237	0					
ANR	3631410	Callee	m_pid_tracker -> add_mapping		3631237	0					
ANR	3631411	PtrMemberAccess	m_pid_tracker -> add_mapping		3631237	0					
ANR	3631412	Identifier	m_pid_tracker		3631237	0					
ANR	3631413	Identifier	add_mapping		3631237	1					
ANR	3631414	ArgumentList	family		3631237	1					
ANR	3631415	Argument	family		3631237	0					
ANR	3631416	Identifier	family		3631237	0					
ANR	3631417	Argument	root_pid		3631237	1					
ANR	3631418	Identifier	root_pid		3631237	0					
ANR	3631419	Argument	member -> get_proc_info ( ) -> birthday		3631237	2					
ANR	3631420	PtrMemberAccess	member -> get_proc_info ( ) -> birthday		3631237	0					
ANR	3631421	CallExpression	member -> get_proc_info ( )		3631237	0					
ANR	3631422	Callee	member -> get_proc_info		3631237	0					
ANR	3631423	PtrMemberAccess	member -> get_proc_info		3631237	0					
ANR	3631424	Identifier	member		3631237	0					
ANR	3631425	Identifier	get_proc_info		3631237	1					
ANR	3631426	ArgumentList			3631237	1					
ANR	3631427	Identifier	birthday		3631237	1					
ANR	3631428	IdentifierDeclStatement	pid_t parent_root = member -> get_proc_family ( ) -> get_root_pid ( ) ;	241:1:7266:7327	3631237	12	True				
ANR	3631429	IdentifierDecl	parent_root = member -> get_proc_family ( ) -> get_root_pid ( )		3631237	0					
ANR	3631430	IdentifierDeclType	pid_t		3631237	0					
ANR	3631431	Identifier	parent_root		3631237	1					
ANR	3631432	AssignmentExpression	parent_root = member -> get_proc_family ( ) -> get_root_pid ( )		3631237	2		=			
ANR	3631433	Identifier	parent_root		3631237	0					
ANR	3631434	CallExpression	member -> get_proc_family ( ) -> get_root_pid ( )		3631237	1					
ANR	3631435	Callee	member -> get_proc_family ( ) -> get_root_pid		3631237	0					
ANR	3631436	PtrMemberAccess	member -> get_proc_family ( ) -> get_root_pid		3631237	0					
ANR	3631437	CallExpression	member -> get_proc_family ( )		3631237	0					
ANR	3631438	Callee	member -> get_proc_family		3631237	0					
ANR	3631439	PtrMemberAccess	member -> get_proc_family		3631237	0					
ANR	3631440	Identifier	member		3631237	0					
ANR	3631441	Identifier	get_proc_family		3631237	1					
ANR	3631442	ArgumentList			3631237	1					
ANR	3631443	Identifier	get_root_pid		3631237	1					
ANR	3631444	ArgumentList			3631237	1					
ANR	3631445	IdentifierDeclStatement	Tree < ProcFamily * > * parent_tree_node = lookup_family ( parent_root ) ;	242:1:7330:7394	3631237	13	True				
ANR	3631446	IdentifierDecl	* parent_tree_node = lookup_family ( parent_root )		3631237	0					
ANR	3631447	IdentifierDeclType	Tree < ProcFamily * > *		3631237	0					
ANR	3631448	Identifier	parent_tree_node		3631237	1					
ANR	3631449	AssignmentExpression	* parent_tree_node = lookup_family ( parent_root )		3631237	2		=			
ANR	3631450	Identifier	parent_tree_node		3631237	0					
ANR	3631451	CallExpression	lookup_family ( parent_root )		3631237	1					
ANR	3631452	Callee	lookup_family		3631237	0					
ANR	3631453	Identifier	lookup_family		3631237	0					
ANR	3631454	ArgumentList	parent_root		3631237	1					
ANR	3631455	Argument	parent_root		3631237	0					
ANR	3631456	Identifier	parent_root		3631237	0					
ANR	3631457	ExpressionStatement	ASSERT ( parent_tree_node != NULL )	243:1:7397:7429	3631237	14	True				
ANR	3631458	CallExpression	ASSERT ( parent_tree_node != NULL )		3631237	0					
ANR	3631459	Callee	ASSERT		3631237	0					
ANR	3631460	Identifier	ASSERT		3631237	0					
ANR	3631461	ArgumentList	parent_tree_node != NULL		3631237	1					
ANR	3631462	Argument	parent_tree_node != NULL		3631237	0					
ANR	3631463	EqualityExpression	parent_tree_node != NULL		3631237	0		!=			
ANR	3631464	Identifier	parent_tree_node		3631237	0					
ANR	3631465	Identifier	NULL		3631237	1					
ANR	3631466	IdentifierDeclStatement	Tree < ProcFamily * > * child_tree_node = parent_tree_node -> add_child ( family ) ;	244:1:7432:7506	3631237	15	True				
ANR	3631467	IdentifierDecl	* child_tree_node = parent_tree_node -> add_child ( family )		3631237	0					
ANR	3631468	IdentifierDeclType	Tree < ProcFamily * > *		3631237	0					
ANR	3631469	Identifier	child_tree_node		3631237	1					
ANR	3631470	AssignmentExpression	* child_tree_node = parent_tree_node -> add_child ( family )		3631237	2		=			
ANR	3631471	Identifier	child_tree_node		3631237	0					
ANR	3631472	CallExpression	parent_tree_node -> add_child ( family )		3631237	1					
ANR	3631473	Callee	parent_tree_node -> add_child		3631237	0					
ANR	3631474	PtrMemberAccess	parent_tree_node -> add_child		3631237	0					
ANR	3631475	Identifier	parent_tree_node		3631237	0					
ANR	3631476	Identifier	add_child		3631237	1					
ANR	3631477	ArgumentList	family		3631237	1					
ANR	3631478	Argument	family		3631237	0					
ANR	3631479	Identifier	family		3631237	0					
ANR	3631480	ExpressionStatement	ASSERT ( child_tree_node != NULL )	246:1:7509:7540	3631237	16	True				
ANR	3631481	CallExpression	ASSERT ( child_tree_node != NULL )		3631237	0					
ANR	3631482	Callee	ASSERT		3631237	0					
ANR	3631483	Identifier	ASSERT		3631237	0					
ANR	3631484	ArgumentList	child_tree_node != NULL		3631237	1					
ANR	3631485	Argument	child_tree_node != NULL		3631237	0					
ANR	3631486	EqualityExpression	child_tree_node != NULL		3631237	0		!=			
ANR	3631487	Identifier	child_tree_node		3631237	0					
ANR	3631488	Identifier	NULL		3631237	1					
ANR	3631489	ExpressionStatement	"dprintf ( D_ALWAYS , ""moving process %u into new subfamily %u\\n"" , root_pid , root_pid )"	250:1:7611:7720	3631237	17	True				
ANR	3631490	CallExpression	"dprintf ( D_ALWAYS , ""moving process %u into new subfamily %u\\n"" , root_pid , root_pid )"		3631237	0					
ANR	3631491	Callee	dprintf		3631237	0					
ANR	3631492	Identifier	dprintf		3631237	0					
ANR	3631493	ArgumentList	D_ALWAYS		3631237	1					
ANR	3631494	Argument	D_ALWAYS		3631237	0					
ANR	3631495	Identifier	D_ALWAYS		3631237	0					
ANR	3631496	Argument	"""moving process %u into new subfamily %u\\n"""		3631237	1					
ANR	3631497	PrimaryExpression	"""moving process %u into new subfamily %u\\n"""		3631237	0					
ANR	3631498	Argument	root_pid		3631237	2					
ANR	3631499	Identifier	root_pid		3631237	0					
ANR	3631500	Argument	root_pid		3631237	3					
ANR	3631501	Identifier	root_pid		3631237	0					
ANR	3631502	ExpressionStatement	member -> move_to_subfamily ( family )	254:1:7723:7756	3631237	18	True				
ANR	3631503	CallExpression	member -> move_to_subfamily ( family )		3631237	0					
ANR	3631504	Callee	member -> move_to_subfamily		3631237	0					
ANR	3631505	PtrMemberAccess	member -> move_to_subfamily		3631237	0					
ANR	3631506	Identifier	member		3631237	0					
ANR	3631507	Identifier	move_to_subfamily		3631237	1					
ANR	3631508	ArgumentList	family		3631237	1					
ANR	3631509	Argument	family		3631237	0					
ANR	3631510	Identifier	family		3631237	0					
ANR	3631511	ExpressionStatement	"ret = m_family_table . insert ( root_pid , child_tree_node )"	258:1:7821:7875	3631237	19	True				
ANR	3631512	AssignmentExpression	"ret = m_family_table . insert ( root_pid , child_tree_node )"		3631237	0		=			
ANR	3631513	Identifier	ret		3631237	0					
ANR	3631514	CallExpression	"m_family_table . insert ( root_pid , child_tree_node )"		3631237	1					
ANR	3631515	Callee	m_family_table . insert		3631237	0					
ANR	3631516	MemberAccess	m_family_table . insert		3631237	0					
ANR	3631517	Identifier	m_family_table		3631237	0					
ANR	3631518	Identifier	insert		3631237	1					
ANR	3631519	ArgumentList	root_pid		3631237	1					
ANR	3631520	Argument	root_pid		3631237	0					
ANR	3631521	Identifier	root_pid		3631237	0					
ANR	3631522	Argument	child_tree_node		3631237	1					
ANR	3631523	Identifier	child_tree_node		3631237	0					
ANR	3631524	ExpressionStatement	ASSERT ( ret != - 1 )	259:1:7878:7895	3631237	20	True				
ANR	3631525	CallExpression	ASSERT ( ret != - 1 )		3631237	0					
ANR	3631526	Callee	ASSERT		3631237	0					
ANR	3631527	Identifier	ASSERT		3631237	0					
ANR	3631528	ArgumentList	ret != - 1		3631237	1					
ANR	3631529	Argument	ret != - 1		3631237	0					
ANR	3631530	EqualityExpression	ret != - 1		3631237	0		!=			
ANR	3631531	Identifier	ret		3631237	0					
ANR	3631532	UnaryOperationExpression	- 1		3631237	1					
ANR	3631533	UnaryOperator	-		3631237	0					
ANR	3631534	PrimaryExpression	1		3631237	1					
ANR	3631535	ExpressionStatement	"dprintf ( D_ALWAYS , ""new subfamily registered: root = %u, watcher = %u\\n"" , root_pid , watcher_pid )"	261:1:7899:8021	3631237	21	True				
ANR	3631536	CallExpression	"dprintf ( D_ALWAYS , ""new subfamily registered: root = %u, watcher = %u\\n"" , root_pid , watcher_pid )"		3631237	0					
ANR	3631537	Callee	dprintf		3631237	0					
ANR	3631538	Identifier	dprintf		3631237	0					
ANR	3631539	ArgumentList	D_ALWAYS		3631237	1					
ANR	3631540	Argument	D_ALWAYS		3631237	0					
ANR	3631541	Identifier	D_ALWAYS		3631237	0					
ANR	3631542	Argument	"""new subfamily registered: root = %u, watcher = %u\\n"""		3631237	1					
ANR	3631543	PrimaryExpression	"""new subfamily registered: root = %u, watcher = %u\\n"""		3631237	0					
ANR	3631544	Argument	root_pid		3631237	2					
ANR	3631545	Identifier	root_pid		3631237	0					
ANR	3631546	Argument	watcher_pid		3631237	3					
ANR	3631547	Identifier	watcher_pid		3631237	0					
ANR	3631548	ReturnStatement	return PROC_FAMILY_ERROR_SUCCESS ;	266:1:8025:8057	3631237	22	True				
ANR	3631549	Identifier	PROC_FAMILY_ERROR_SUCCESS		3631237	0					
ANR	3631550	ReturnType	proc_family_error_t		3631237	1					
ANR	3631551	Identifier	ProcFamilyMonitor :: register_subfamily		3631237	2					
ANR	3631552	ParameterList	"pid_t root_pid , pid_t watcher_pid , int max_snapshot_interval"		3631237	3					
ANR	3631553	Parameter	pid_t root_pid	161:38:4786:4799	3631237	0	True				
ANR	3631554	ParameterType	pid_t		3631237	0					
ANR	3631555	Identifier	root_pid		3631237	1					
ANR	3631556	Parameter	pid_t watcher_pid	162:38:4840:4856	3631237	1	True				
ANR	3631557	ParameterType	pid_t		3631237	0					
ANR	3631558	Identifier	watcher_pid		3631237	1					
ANR	3631559	Parameter	int max_snapshot_interval	163:38:4897:4921	3631237	2	True				
ANR	3631560	ParameterType	int		3631237	0					
ANR	3631561	Identifier	max_snapshot_interval		3631237	1					
ANR	3631562	CFGEntryNode	ENTRY		3631237		True				
ANR	3631563	CFGExitNode	EXIT		3631237		True				
ANR	3631564	Symbol	PROC_FAMILY_ERROR_BAD_WATCHER_PID		3631237						
ANR	3631565	Symbol	watcher_pid		3631237						
ANR	3631566	Symbol	PROC_FAMILY_ERROR_ALREADY_REGISTERED		3631237						
ANR	3631567	Symbol	member -> get_proc_family		3631237						
ANR	3631568	Symbol	member -> get_proc_info		3631237						
ANR	3631569	Symbol	* * member		3631237						
ANR	3631570	Symbol	PROC_FAMILY_ERROR_BAD_SNAPSHOT_INTERVAL		3631237						
ANR	3631571	Symbol	parent_root		3631237						
ANR	3631572	Symbol	* parent_tree_node		3631237						
ANR	3631573	Symbol	m_member_table		3631237						
ANR	3631574	Symbol	m_family_table		3631237						
ANR	3631575	Symbol	member		3631237						
ANR	3631576	Symbol	ret		3631237						
ANR	3631577	Symbol	NULL		3631237						
ANR	3631578	Symbol	m_family_table . insert		3631237						
ANR	3631579	Symbol	D_ALWAYS		3631237						
ANR	3631580	Symbol	tree		3631237						
ANR	3631581	Symbol	this		3631237						
ANR	3631582	Symbol	parent_tree_node		3631237						
ANR	3631583	Symbol	member -> get_proc_family ( ) -> get_root_pid		3631237						
ANR	3631584	Symbol	PROC_FAMILY_ERROR_BAD_ROOT_PID		3631237						
ANR	3631585	Symbol	* member		3631237						
ANR	3631586	Symbol	* member -> get_proc_family		3631237						
ANR	3631587	Symbol	max_snapshot_interval		3631237						
ANR	3631588	Symbol	lookup_family		3631237						
ANR	3631589	Symbol	m_member_table . lookup		3631237						
ANR	3631590	Symbol	m_everybody_else		3631237						
ANR	3631591	Symbol	parent_tree_node -> add_child		3631237						
ANR	3631592	Symbol	* member -> get_proc_info		3631237						
ANR	3631593	Symbol	PROC_FAMILY_ERROR_SUCCESS		3631237						
ANR	3631594	Symbol	family		3631237						
ANR	3631595	Symbol	root_pid		3631237						
ANR	3631596	Symbol	m_pid_tracker		3631237						
ANR	3631597	Symbol	PROC_FAMILY_ERROR_PROCESS_NOT_FAMILY		3631237						
ANR	3631598	Symbol	member -> get_proc_info ( ) -> birthday		3631237						
ANR	3631599	Symbol	child_tree_node		3631237						
ANR	3631600	Function	ProcFamilyMonitor :: lookup_family	269:0:8062:8328							
ANR	3631601	FunctionDef	"ProcFamilyMonitor :: lookup_family (pid_t pid , bool zero_means_root)"		3631600	0					
ANR	3631602	CompoundStatement		271:0:8147:8328	3631600	0					
ANR	3631603	IfStatement	if ( zero_means_root && ( pid == 0 ) )		3631600	0					
ANR	3631604	Condition	zero_means_root && ( pid == 0 )	272:5:8154:8182	3631600	0	True				
ANR	3631605	AndExpression	zero_means_root && ( pid == 0 )		3631600	0		&&			
ANR	3631606	Identifier	zero_means_root		3631600	0					
ANR	3631607	EqualityExpression	pid == 0		3631600	1		==			
ANR	3631608	Identifier	pid		3631600	0					
ANR	3631609	PrimaryExpression	0		3631600	1					
ANR	3631610	CompoundStatement		2:36:37:37	3631600	1					
ANR	3631611	ReturnStatement	return m_tree ;	273:2:8189:8202	3631600	0	True				
ANR	3631612	Identifier	m_tree		3631600	0					
ANR	3631613	IdentifierDeclStatement	Tree < ProcFamily * > * tree ;	275:1:8208:8231	3631600	1	True				
ANR	3631614	IdentifierDecl	* tree		3631600	0					
ANR	3631615	IdentifierDeclType	Tree < ProcFamily * > *		3631600	0					
ANR	3631616	Identifier	tree		3631600	1					
ANR	3631617	IdentifierDeclStatement	"int ret = m_family_table . lookup ( pid , tree ) ;"	276:1:8234:8276	3631600	2	True				
ANR	3631618	IdentifierDecl	"ret = m_family_table . lookup ( pid , tree )"		3631600	0					
ANR	3631619	IdentifierDeclType	int		3631600	0					
ANR	3631620	Identifier	ret		3631600	1					
ANR	3631621	AssignmentExpression	"ret = m_family_table . lookup ( pid , tree )"		3631600	2		=			
ANR	3631622	Identifier	ret		3631600	0					
ANR	3631623	CallExpression	"m_family_table . lookup ( pid , tree )"		3631600	1					
ANR	3631624	Callee	m_family_table . lookup		3631600	0					
ANR	3631625	MemberAccess	m_family_table . lookup		3631600	0					
ANR	3631626	Identifier	m_family_table		3631600	0					
ANR	3631627	Identifier	lookup		3631600	1					
ANR	3631628	ArgumentList	pid		3631600	1					
ANR	3631629	Argument	pid		3631600	0					
ANR	3631630	Identifier	pid		3631600	0					
ANR	3631631	Argument	tree		3631600	1					
ANR	3631632	Identifier	tree		3631600	0					
ANR	3631633	IfStatement	if ( ret == - 1 )		3631600	3					
ANR	3631634	Condition	ret == - 1	277:5:8283:8291	3631600	0	True				
ANR	3631635	EqualityExpression	ret == - 1		3631600	0		==			
ANR	3631636	Identifier	ret		3631600	0					
ANR	3631637	UnaryOperationExpression	- 1		3631600	1					
ANR	3631638	UnaryOperator	-		3631600	0					
ANR	3631639	PrimaryExpression	1		3631600	1					
ANR	3631640	CompoundStatement		7:16:146:146	3631600	1					
ANR	3631641	ReturnStatement	return NULL ;	278:2:8298:8309	3631600	0	True				
ANR	3631642	Identifier	NULL		3631600	0					
ANR	3631643	ReturnStatement	return tree ;	280:1:8315:8326	3631600	4	True				
ANR	3631644	Identifier	tree		3631600	0					
ANR	3631645	ReturnType	Tree < ProcFamily * > *		3631600	1					
ANR	3631646	Identifier	ProcFamilyMonitor :: lookup_family		3631600	2					
ANR	3631647	ParameterList	"pid_t pid , bool zero_means_root"		3631600	3					
ANR	3631648	Parameter	pid_t pid	270:33:8114:8122	3631600	0	True				
ANR	3631649	ParameterType	pid_t		3631600	0					
ANR	3631650	Identifier	pid		3631600	1					
ANR	3631651	Parameter	bool zero_means_root	270:44:8125:8144	3631600	1	True				
ANR	3631652	ParameterType	bool		3631600	0					
ANR	3631653	Identifier	zero_means_root		3631600	1					
ANR	3631654	CFGEntryNode	ENTRY		3631600		True				
ANR	3631655	CFGExitNode	EXIT		3631600		True				
ANR	3631656	Symbol	ret		3631600						
ANR	3631657	Symbol	m_tree		3631600						
ANR	3631658	Symbol	NULL		3631600						
ANR	3631659	Symbol	m_family_table		3631600						
ANR	3631660	Symbol	tree		3631600						
ANR	3631661	Symbol	m_family_table . lookup		3631600						
ANR	3631662	Symbol	pid		3631600						
ANR	3631663	Symbol	zero_means_root		3631600						
ANR	3631664	Function	ProcFamilyMonitor :: track_family_via_environment	283:0:8331:8851							
ANR	3631665	FunctionDef	"ProcFamilyMonitor :: track_family_via_environment (pid_t pid , PidEnvID * penvid)"		3631664	0					
ANR	3631666	CompoundStatement		285:0:8428:8851	3631664	0					
ANR	3631667	IdentifierDeclStatement	"Tree < ProcFamily * > * tree = lookup_family ( pid , true ) ;"	288:1:8457:8507	3631664	0	True				
ANR	3631668	IdentifierDecl	"* tree = lookup_family ( pid , true )"		3631664	0					
ANR	3631669	IdentifierDeclType	Tree < ProcFamily * > *		3631664	0					
ANR	3631670	Identifier	tree		3631664	1					
ANR	3631671	AssignmentExpression	"* tree = lookup_family ( pid , true )"		3631664	2		=			
ANR	3631672	Identifier	tree		3631664	0					
ANR	3631673	CallExpression	"lookup_family ( pid , true )"		3631664	1					
ANR	3631674	Callee	lookup_family		3631664	0					
ANR	3631675	Identifier	lookup_family		3631664	0					
ANR	3631676	ArgumentList	pid		3631664	1					
ANR	3631677	Argument	pid		3631664	0					
ANR	3631678	Identifier	pid		3631664	0					
ANR	3631679	Argument	true		3631664	1					
ANR	3631680	Identifier	true		3631664	0					
ANR	3631681	IfStatement	if ( tree == NULL )		3631664	1					
ANR	3631682	Condition	tree == NULL	289:5:8514:8525	3631664	0	True				
ANR	3631683	EqualityExpression	tree == NULL		3631664	0		==			
ANR	3631684	Identifier	tree		3631664	0					
ANR	3631685	Identifier	NULL		3631664	1					
ANR	3631686	CompoundStatement		5:19:99:99	3631664	1					
ANR	3631687	Statement	dprintf	290:2:8532:8538	3631664	0	True				
ANR	3631688	Statement	(	290:9:8539:8539	3631664	1	True				
ANR	3631689	Statement	D_ALWAYS	290:10:8540:8547	3631664	2	True				
ANR	3631690	Statement	","	290:18:8548:8548	3631664	3	True				
ANR	3631691	Statement	"""track_family_via_environment failure: """	291:10:8560:8599	3631664	4	True				
ANR	3631692	Statement	"""family with root %u not found\\n"""	292:8:8609:8641	3631664	5	True				
ANR	3631693	Statement	","	292:41:8642:8642	3631664	6	True				
ANR	3631694	Statement	pid	293:10:8654:8656	3631664	7	True				
ANR	3631695	Statement	)	293:13:8657:8657	3631664	8	True				
ANR	3631696	ExpressionStatement		293:14:8658:8658	3631664	9	True				
ANR	3631697	ReturnStatement	return PROC_FAMILY_ERROR_FAMILY_NOT_FOUND ;	294:2:8662:8703	3631664	10	True				
ANR	3631698	Identifier	PROC_FAMILY_ERROR_FAMILY_NOT_FOUND		3631664	0					
ANR	3631699	ExpressionStatement	"m_environment_tracker -> add_mapping ( tree -> get_data ( ) , penvid )"	299:1:8754:8814	3631664	2	True				
ANR	3631700	CallExpression	"m_environment_tracker -> add_mapping ( tree -> get_data ( ) , penvid )"		3631664	0					
ANR	3631701	Callee	m_environment_tracker -> add_mapping		3631664	0					
ANR	3631702	PtrMemberAccess	m_environment_tracker -> add_mapping		3631664	0					
ANR	3631703	Identifier	m_environment_tracker		3631664	0					
ANR	3631704	Identifier	add_mapping		3631664	1					
ANR	3631705	ArgumentList	tree -> get_data ( )		3631664	1					
ANR	3631706	Argument	tree -> get_data ( )		3631664	0					
ANR	3631707	CallExpression	tree -> get_data ( )		3631664	0					
ANR	3631708	Callee	tree -> get_data		3631664	0					
ANR	3631709	PtrMemberAccess	tree -> get_data		3631664	0					
ANR	3631710	Identifier	tree		3631664	0					
ANR	3631711	Identifier	get_data		3631664	1					
ANR	3631712	ArgumentList			3631664	1					
ANR	3631713	Argument	penvid		3631664	1					
ANR	3631714	Identifier	penvid		3631664	0					
ANR	3631715	ReturnStatement	return PROC_FAMILY_ERROR_SUCCESS ;	300:1:8817:8849	3631664	3	True				
ANR	3631716	Identifier	PROC_FAMILY_ERROR_SUCCESS		3631664	0					
ANR	3631717	ReturnType	proc_family_error_t		3631664	1					
ANR	3631718	Identifier	ProcFamilyMonitor :: track_family_via_environment		3631664	2					
ANR	3631719	ParameterList	"pid_t pid , PidEnvID * penvid"		3631664	3					
ANR	3631720	Parameter	pid_t pid	284:48:8399:8407	3631664	0	True				
ANR	3631721	ParameterType	pid_t		3631664	0					
ANR	3631722	Identifier	pid		3631664	1					
ANR	3631723	Parameter	PidEnvID * penvid	284:59:8410:8425	3631664	1	True				
ANR	3631724	ParameterType	PidEnvID *		3631664	0					
ANR	3631725	Identifier	penvid		3631664	1					
ANR	3631726	CFGEntryNode	ENTRY		3631664		True				
ANR	3631727	CFGExitNode	EXIT		3631664		True				
ANR	3631728	Symbol	* tree		3631664						
ANR	3631729	Symbol	lookup_family		3631664						
ANR	3631730	Symbol	NULL		3631664						
ANR	3631731	Symbol	true		3631664						
ANR	3631732	Symbol	tree		3631664						
ANR	3631733	Symbol	PROC_FAMILY_ERROR_FAMILY_NOT_FOUND		3631664						
ANR	3631734	Symbol	penvid		3631664						
ANR	3631735	Symbol	m_environment_tracker		3631664						
ANR	3631736	Symbol	tree -> get_data		3631664						
ANR	3631737	Symbol	pid		3631664						
ANR	3631738	Symbol	PROC_FAMILY_ERROR_SUCCESS		3631664						
ANR	3631739	Function	ProcFamilyMonitor :: track_family_via_login	303:0:8854:9350							
ANR	3631740	FunctionDef	"ProcFamilyMonitor :: track_family_via_login (pid_t pid , char * login)"		3631739	0					
ANR	3631741	CompoundStatement		305:0:8940:9350	3631739	0					
ANR	3631742	IdentifierDeclStatement	"Tree < ProcFamily * > * tree = lookup_family ( pid , true ) ;"	308:1:8969:9019	3631739	0	True				
ANR	3631743	IdentifierDecl	"* tree = lookup_family ( pid , true )"		3631739	0					
ANR	3631744	IdentifierDeclType	Tree < ProcFamily * > *		3631739	0					
ANR	3631745	Identifier	tree		3631739	1					
ANR	3631746	AssignmentExpression	"* tree = lookup_family ( pid , true )"		3631739	2		=			
ANR	3631747	Identifier	tree		3631739	0					
ANR	3631748	CallExpression	"lookup_family ( pid , true )"		3631739	1					
ANR	3631749	Callee	lookup_family		3631739	0					
ANR	3631750	Identifier	lookup_family		3631739	0					
ANR	3631751	ArgumentList	pid		3631739	1					
ANR	3631752	Argument	pid		3631739	0					
ANR	3631753	Identifier	pid		3631739	0					
ANR	3631754	Argument	true		3631739	1					
ANR	3631755	Identifier	true		3631739	0					
ANR	3631756	IfStatement	if ( tree == NULL )		3631739	1					
ANR	3631757	Condition	tree == NULL	309:5:9026:9037	3631739	0	True				
ANR	3631758	EqualityExpression	tree == NULL		3631739	0		==			
ANR	3631759	Identifier	tree		3631739	0					
ANR	3631760	Identifier	NULL		3631739	1					
ANR	3631761	CompoundStatement		5:19:99:99	3631739	1					
ANR	3631762	Statement	dprintf	310:2:9044:9050	3631739	0	True				
ANR	3631763	Statement	(	310:9:9051:9051	3631739	1	True				
ANR	3631764	Statement	D_ALWAYS	310:10:9052:9059	3631739	2	True				
ANR	3631765	Statement	","	310:18:9060:9060	3631739	3	True				
ANR	3631766	Statement	"""track_family_via_login failure: """	311:10:9072:9105	3631739	4	True				
ANR	3631767	Statement	"""family with root %u not found\\n"""	312:8:9115:9147	3631739	5	True				
ANR	3631768	Statement	","	312:41:9148:9148	3631739	6	True				
ANR	3631769	Statement	pid	313:10:9160:9162	3631739	7	True				
ANR	3631770	Statement	)	313:13:9163:9163	3631739	8	True				
ANR	3631771	ExpressionStatement		313:14:9164:9164	3631739	9	True				
ANR	3631772	ReturnStatement	return PROC_FAMILY_ERROR_FAMILY_NOT_FOUND ;	314:2:9168:9209	3631739	10	True				
ANR	3631773	Identifier	PROC_FAMILY_ERROR_FAMILY_NOT_FOUND		3631739	0					
ANR	3631774	ExpressionStatement	"m_login_tracker -> add_mapping ( tree -> get_data ( ) , login )"	319:1:9260:9313	3631739	2	True				
ANR	3631775	CallExpression	"m_login_tracker -> add_mapping ( tree -> get_data ( ) , login )"		3631739	0					
ANR	3631776	Callee	m_login_tracker -> add_mapping		3631739	0					
ANR	3631777	PtrMemberAccess	m_login_tracker -> add_mapping		3631739	0					
ANR	3631778	Identifier	m_login_tracker		3631739	0					
ANR	3631779	Identifier	add_mapping		3631739	1					
ANR	3631780	ArgumentList	tree -> get_data ( )		3631739	1					
ANR	3631781	Argument	tree -> get_data ( )		3631739	0					
ANR	3631782	CallExpression	tree -> get_data ( )		3631739	0					
ANR	3631783	Callee	tree -> get_data		3631739	0					
ANR	3631784	PtrMemberAccess	tree -> get_data		3631739	0					
ANR	3631785	Identifier	tree		3631739	0					
ANR	3631786	Identifier	get_data		3631739	1					
ANR	3631787	ArgumentList			3631739	1					
ANR	3631788	Argument	login		3631739	1					
ANR	3631789	Identifier	login		3631739	0					
ANR	3631790	ReturnStatement	return PROC_FAMILY_ERROR_SUCCESS ;	320:1:9316:9348	3631739	3	True				
ANR	3631791	Identifier	PROC_FAMILY_ERROR_SUCCESS		3631739	0					
ANR	3631792	ReturnType	proc_family_error_t		3631739	1					
ANR	3631793	Identifier	ProcFamilyMonitor :: track_family_via_login		3631739	2					
ANR	3631794	ParameterList	"pid_t pid , char * login"		3631739	3					
ANR	3631795	Parameter	pid_t pid	304:42:8916:8924	3631739	0	True				
ANR	3631796	ParameterType	pid_t		3631739	0					
ANR	3631797	Identifier	pid		3631739	1					
ANR	3631798	Parameter	char * login	304:53:8927:8937	3631739	1	True				
ANR	3631799	ParameterType	char *		3631739	0					
ANR	3631800	Identifier	login		3631739	1					
ANR	3631801	CFGEntryNode	ENTRY		3631739		True				
ANR	3631802	CFGExitNode	EXIT		3631739		True				
ANR	3631803	Symbol	* tree		3631739						
ANR	3631804	Symbol	lookup_family		3631739						
ANR	3631805	Symbol	NULL		3631739						
ANR	3631806	Symbol	m_login_tracker		3631739						
ANR	3631807	Symbol	true		3631739						
ANR	3631808	Symbol	tree		3631739						
ANR	3631809	Symbol	PROC_FAMILY_ERROR_FAMILY_NOT_FOUND		3631739						
ANR	3631810	Symbol	tree -> get_data		3631739						
ANR	3631811	Symbol	pid		3631739						
ANR	3631812	Symbol	PROC_FAMILY_ERROR_SUCCESS		3631739						
ANR	3631813	Symbol	login		3631739						
ANR	3631814	Function	ProcFamilyMonitor :: track_family_via_supplementary_group	324:0:9372:10054							
ANR	3631815	FunctionDef	"ProcFamilyMonitor :: track_family_via_supplementary_group (pid_t pid , gid_t & gid)"		3631814	0					
ANR	3631816	CompoundStatement		326:0:9471:10054	3631814	0					
ANR	3631817	IfStatement	if ( m_group_tracker == NULL )		3631814	0					
ANR	3631818	Condition	m_group_tracker == NULL	329:5:9521:9543	3631814	0	True				
ANR	3631819	EqualityExpression	m_group_tracker == NULL		3631814	0		==			
ANR	3631820	Identifier	m_group_tracker		3631814	0					
ANR	3631821	Identifier	NULL		3631814	1					
ANR	3631822	CompoundStatement		4:30:74:74	3631814	1					
ANR	3631823	ReturnStatement	return PROC_FAMILY_ERROR_NO_GROUP_ID_AVAILABLE ;	330:2:9550:9596	3631814	0	True				
ANR	3631824	Identifier	PROC_FAMILY_ERROR_NO_GROUP_ID_AVAILABLE		3631814	0					
ANR	3631825	IdentifierDeclStatement	"Tree < ProcFamily * > * tree = lookup_family ( pid , true ) ;"	335:1:9629:9679	3631814	1	True				
ANR	3631826	IdentifierDecl	"* tree = lookup_family ( pid , true )"		3631814	0					
ANR	3631827	IdentifierDeclType	Tree < ProcFamily * > *		3631814	0					
ANR	3631828	Identifier	tree		3631814	1					
ANR	3631829	AssignmentExpression	"* tree = lookup_family ( pid , true )"		3631814	2		=			
ANR	3631830	Identifier	tree		3631814	0					
ANR	3631831	CallExpression	"lookup_family ( pid , true )"		3631814	1					
ANR	3631832	Callee	lookup_family		3631814	0					
ANR	3631833	Identifier	lookup_family		3631814	0					
ANR	3631834	ArgumentList	pid		3631814	1					
ANR	3631835	Argument	pid		3631814	0					
ANR	3631836	Identifier	pid		3631814	0					
ANR	3631837	Argument	true		3631814	1					
ANR	3631838	Identifier	true		3631814	0					
ANR	3631839	IfStatement	if ( tree == NULL )		3631814	2					
ANR	3631840	Condition	tree == NULL	336:5:9686:9697	3631814	0	True				
ANR	3631841	EqualityExpression	tree == NULL		3631814	0		==			
ANR	3631842	Identifier	tree		3631814	0					
ANR	3631843	Identifier	NULL		3631814	1					
ANR	3631844	CompoundStatement		11:19:228:228	3631814	1					
ANR	3631845	Statement	dprintf	337:2:9704:9710	3631814	0	True				
ANR	3631846	Statement	(	337:9:9711:9711	3631814	1	True				
ANR	3631847	Statement	D_ALWAYS	337:10:9712:9719	3631814	2	True				
ANR	3631848	Statement	","	337:18:9720:9720	3631814	3	True				
ANR	3631849	Statement	"""track_family_via_supplementary_group failure: """	338:10:9732:9779	3631814	4	True				
ANR	3631850	Statement	"""family with root %u not found\\n"""	339:8:9789:9821	3631814	5	True				
ANR	3631851	Statement	","	339:41:9822:9822	3631814	6	True				
ANR	3631852	Statement	pid	340:10:9834:9836	3631814	7	True				
ANR	3631853	Statement	)	340:13:9837:9837	3631814	8	True				
ANR	3631854	ExpressionStatement		340:14:9838:9838	3631814	9	True				
ANR	3631855	ReturnStatement	return PROC_FAMILY_ERROR_FAMILY_NOT_FOUND ;	341:2:9842:9883	3631814	10	True				
ANR	3631856	Identifier	PROC_FAMILY_ERROR_FAMILY_NOT_FOUND		3631814	0					
ANR	3631857	IdentifierDeclStatement	"bool ok = m_group_tracker -> add_mapping ( tree -> get_data ( ) , gid ) ;"	344:1:9890:9951	3631814	3	True				
ANR	3631858	IdentifierDecl	"ok = m_group_tracker -> add_mapping ( tree -> get_data ( ) , gid )"		3631814	0					
ANR	3631859	IdentifierDeclType	bool		3631814	0					
ANR	3631860	Identifier	ok		3631814	1					
ANR	3631861	AssignmentExpression	"ok = m_group_tracker -> add_mapping ( tree -> get_data ( ) , gid )"		3631814	2		=			
ANR	3631862	Identifier	ok		3631814	0					
ANR	3631863	CallExpression	"m_group_tracker -> add_mapping ( tree -> get_data ( ) , gid )"		3631814	1					
ANR	3631864	Callee	m_group_tracker -> add_mapping		3631814	0					
ANR	3631865	PtrMemberAccess	m_group_tracker -> add_mapping		3631814	0					
ANR	3631866	Identifier	m_group_tracker		3631814	0					
ANR	3631867	Identifier	add_mapping		3631814	1					
ANR	3631868	ArgumentList	tree -> get_data ( )		3631814	1					
ANR	3631869	Argument	tree -> get_data ( )		3631814	0					
ANR	3631870	CallExpression	tree -> get_data ( )		3631814	0					
ANR	3631871	Callee	tree -> get_data		3631814	0					
ANR	3631872	PtrMemberAccess	tree -> get_data		3631814	0					
ANR	3631873	Identifier	tree		3631814	0					
ANR	3631874	Identifier	get_data		3631814	1					
ANR	3631875	ArgumentList			3631814	1					
ANR	3631876	Argument	gid		3631814	1					
ANR	3631877	Identifier	gid		3631814	0					
ANR	3631878	IfStatement	if ( ! ok )		3631814	4					
ANR	3631879	Condition	! ok	345:5:9958:9960	3631814	0	True				
ANR	3631880	UnaryOperationExpression	! ok		3631814	0					
ANR	3631881	UnaryOperator	!		3631814	0					
ANR	3631882	Identifier	ok		3631814	1					
ANR	3631883	CompoundStatement		20:10:491:491	3631814	1					
ANR	3631884	ReturnStatement	return PROC_FAMILY_ERROR_NO_GROUP_ID_AVAILABLE ;	346:2:9967:10013	3631814	0	True				
ANR	3631885	Identifier	PROC_FAMILY_ERROR_NO_GROUP_ID_AVAILABLE		3631814	0					
ANR	3631886	ReturnStatement	return PROC_FAMILY_ERROR_SUCCESS ;	349:1:10020:10052	3631814	5	True				
ANR	3631887	Identifier	PROC_FAMILY_ERROR_SUCCESS		3631814	0					
ANR	3631888	ReturnType	proc_family_error_t		3631814	1					
ANR	3631889	Identifier	ProcFamilyMonitor :: track_family_via_supplementary_group		3631814	2					
ANR	3631890	ParameterList	"pid_t pid , gid_t & gid"		3631814	3					
ANR	3631891	Parameter	pid_t pid	325:56:9448:9456	3631814	0	True				
ANR	3631892	ParameterType	pid_t		3631814	0					
ANR	3631893	Identifier	pid		3631814	1					
ANR	3631894	Parameter	gid_t & gid	325:67:9459:9468	3631814	1	True				
ANR	3631895	ParameterType	gid_t &		3631814	0					
ANR	3631896	Identifier	gid		3631814	1					
ANR	3631897	CFGEntryNode	ENTRY		3631814		True				
ANR	3631898	CFGExitNode	EXIT		3631814		True				
ANR	3631899	Symbol	gid		3631814						
ANR	3631900	Symbol	NULL		3631814						
ANR	3631901	Symbol	PROC_FAMILY_ERROR_NO_GROUP_ID_AVAILABLE		3631814						
ANR	3631902	Symbol	tree		3631814						
ANR	3631903	Symbol	tree -> get_data		3631814						
ANR	3631904	Symbol	pid		3631814						
ANR	3631905	Symbol	m_group_tracker		3631814						
ANR	3631906	Symbol	* tree		3631814						
ANR	3631907	Symbol	m_group_tracker -> add_mapping		3631814						
ANR	3631908	Symbol	lookup_family		3631814						
ANR	3631909	Symbol	* m_group_tracker		3631814						
ANR	3631910	Symbol	true		3631814						
ANR	3631911	Symbol	PROC_FAMILY_ERROR_FAMILY_NOT_FOUND		3631814						
ANR	3631912	Symbol	PROC_FAMILY_ERROR_SUCCESS		3631814						
ANR	3631913	Symbol	ok		3631814						
ANR	3631914	Function	ProcFamilyMonitor :: track_family_via_cgroup	354:0:10096:10681							
ANR	3631915	FunctionDef	"ProcFamilyMonitor :: track_family_via_cgroup (pid_t pid , const char * cgroup)"		3631914	0					
ANR	3631916	CompoundStatement		356:0:10191:10681	3631914	0					
ANR	3631917	IfStatement	if ( m_cgroup_tracker == NULL )		3631914	0					
ANR	3631918	Condition	m_cgroup_tracker == NULL	357:5:10198:10221	3631914	0	True				
ANR	3631919	EqualityExpression	m_cgroup_tracker == NULL		3631914	0		==			
ANR	3631920	Identifier	m_cgroup_tracker		3631914	0					
ANR	3631921	Identifier	NULL		3631914	1					
ANR	3631922	CompoundStatement		2:31:32:32	3631914	1					
ANR	3631923	ReturnStatement	return PROC_FAMILY_ERROR_NO_CGROUP_ID_AVAILABLE ;	358:2:10228:10275	3631914	0	True				
ANR	3631924	Identifier	PROC_FAMILY_ERROR_NO_CGROUP_ID_AVAILABLE		3631914	0					
ANR	3631925	IdentifierDeclStatement	"Tree < ProcFamily * > * tree = lookup_family ( pid , true ) ;"	361:1:10282:10332	3631914	1	True				
ANR	3631926	IdentifierDecl	"* tree = lookup_family ( pid , true )"		3631914	0					
ANR	3631927	IdentifierDeclType	Tree < ProcFamily * > *		3631914	0					
ANR	3631928	Identifier	tree		3631914	1					
ANR	3631929	AssignmentExpression	"* tree = lookup_family ( pid , true )"		3631914	2		=			
ANR	3631930	Identifier	tree		3631914	0					
ANR	3631931	CallExpression	"lookup_family ( pid , true )"		3631914	1					
ANR	3631932	Callee	lookup_family		3631914	0					
ANR	3631933	Identifier	lookup_family		3631914	0					
ANR	3631934	ArgumentList	pid		3631914	1					
ANR	3631935	Argument	pid		3631914	0					
ANR	3631936	Identifier	pid		3631914	0					
ANR	3631937	Argument	true		3631914	1					
ANR	3631938	Identifier	true		3631914	0					
ANR	3631939	IfStatement	if ( tree == NULL )		3631914	2					
ANR	3631940	Condition	tree == NULL	362:5:10339:10350	3631914	0	True				
ANR	3631941	EqualityExpression	tree == NULL		3631914	0		==			
ANR	3631942	Identifier	tree		3631914	0					
ANR	3631943	Identifier	NULL		3631914	1					
ANR	3631944	CompoundStatement		7:19:161:161	3631914	1					
ANR	3631945	Statement	dprintf	363:2:10357:10363	3631914	0	True				
ANR	3631946	Statement	(	363:9:10364:10364	3631914	1	True				
ANR	3631947	Statement	D_ALWAYS	363:10:10365:10372	3631914	2	True				
ANR	3631948	Statement	","	363:18:10373:10373	3631914	3	True				
ANR	3631949	Statement	"""track_family_via_cgroup failure: """	364:3:10378:10412	3631914	4	True				
ANR	3631950	Statement	"""family with root %u not found\\n"""	365:4:10418:10450	3631914	5	True				
ANR	3631951	Statement	","	365:37:10451:10451	3631914	6	True				
ANR	3631952	Statement	pid	366:3:10456:10458	3631914	7	True				
ANR	3631953	Statement	)	366:6:10459:10459	3631914	8	True				
ANR	3631954	ExpressionStatement		366:7:10460:10460	3631914	9	True				
ANR	3631955	ReturnStatement	return PROC_FAMILY_ERROR_FAMILY_NOT_FOUND ;	367:2:10464:10505	3631914	10	True				
ANR	3631956	Identifier	PROC_FAMILY_ERROR_FAMILY_NOT_FOUND		3631914	0					
ANR	3631957	IdentifierDeclStatement	"bool ok = m_cgroup_tracker -> add_mapping ( tree -> get_data ( ) , cgroup ) ;"	370:1:10512:10577	3631914	3	True				
ANR	3631958	IdentifierDecl	"ok = m_cgroup_tracker -> add_mapping ( tree -> get_data ( ) , cgroup )"		3631914	0					
ANR	3631959	IdentifierDeclType	bool		3631914	0					
ANR	3631960	Identifier	ok		3631914	1					
ANR	3631961	AssignmentExpression	"ok = m_cgroup_tracker -> add_mapping ( tree -> get_data ( ) , cgroup )"		3631914	2		=			
ANR	3631962	Identifier	ok		3631914	0					
ANR	3631963	CallExpression	"m_cgroup_tracker -> add_mapping ( tree -> get_data ( ) , cgroup )"		3631914	1					
ANR	3631964	Callee	m_cgroup_tracker -> add_mapping		3631914	0					
ANR	3631965	PtrMemberAccess	m_cgroup_tracker -> add_mapping		3631914	0					
ANR	3631966	Identifier	m_cgroup_tracker		3631914	0					
ANR	3631967	Identifier	add_mapping		3631914	1					
ANR	3631968	ArgumentList	tree -> get_data ( )		3631914	1					
ANR	3631969	Argument	tree -> get_data ( )		3631914	0					
ANR	3631970	CallExpression	tree -> get_data ( )		3631914	0					
ANR	3631971	Callee	tree -> get_data		3631914	0					
ANR	3631972	PtrMemberAccess	tree -> get_data		3631914	0					
ANR	3631973	Identifier	tree		3631914	0					
ANR	3631974	Identifier	get_data		3631914	1					
ANR	3631975	ArgumentList			3631914	1					
ANR	3631976	Argument	cgroup		3631914	1					
ANR	3631977	Identifier	cgroup		3631914	0					
ANR	3631978	IfStatement	if ( ! ok )		3631914	4					
ANR	3631979	Condition	! ok	371:5:10584:10586	3631914	0	True				
ANR	3631980	UnaryOperationExpression	! ok		3631914	0					
ANR	3631981	UnaryOperator	!		3631914	0					
ANR	3631982	Identifier	ok		3631914	1					
ANR	3631983	CompoundStatement		16:10:397:397	3631914	1					
ANR	3631984	ReturnStatement	return PROC_FAMILY_ERROR_NO_CGROUP_ID_AVAILABLE ;	372:2:10593:10640	3631914	0	True				
ANR	3631985	Identifier	PROC_FAMILY_ERROR_NO_CGROUP_ID_AVAILABLE		3631914	0					
ANR	3631986	ReturnStatement	return PROC_FAMILY_ERROR_SUCCESS ;	375:1:10647:10679	3631914	5	True				
ANR	3631987	Identifier	PROC_FAMILY_ERROR_SUCCESS		3631914	0					
ANR	3631988	ReturnType	proc_family_error_t		3631914	1					
ANR	3631989	Identifier	ProcFamilyMonitor :: track_family_via_cgroup		3631914	2					
ANR	3631990	ParameterList	"pid_t pid , const char * cgroup"		3631914	3					
ANR	3631991	Parameter	pid_t pid	355:43:10159:10167	3631914	0	True				
ANR	3631992	ParameterType	pid_t		3631914	0					
ANR	3631993	Identifier	pid		3631914	1					
ANR	3631994	Parameter	const char * cgroup	355:54:10170:10188	3631914	1	True				
ANR	3631995	ParameterType	const char *		3631914	0					
ANR	3631996	Identifier	cgroup		3631914	1					
ANR	3631997	CFGEntryNode	ENTRY		3631914		True				
ANR	3631998	CFGExitNode	EXIT		3631914		True				
ANR	3631999	Symbol	NULL		3631914						
ANR	3632000	Symbol	tree		3631914						
ANR	3632001	Symbol	tree -> get_data		3631914						
ANR	3632002	Symbol	pid		3631914						
ANR	3632003	Symbol	cgroup		3631914						
ANR	3632004	Symbol	m_cgroup_tracker -> add_mapping		3631914						
ANR	3632005	Symbol	* tree		3631914						
ANR	3632006	Symbol	lookup_family		3631914						
ANR	3632007	Symbol	true		3631914						
ANR	3632008	Symbol	PROC_FAMILY_ERROR_FAMILY_NOT_FOUND		3631914						
ANR	3632009	Symbol	PROC_FAMILY_ERROR_SUCCESS		3631914						
ANR	3632010	Symbol	* m_cgroup_tracker		3631914						
ANR	3632011	Symbol	m_cgroup_tracker		3631914						
ANR	3632012	Symbol	PROC_FAMILY_ERROR_NO_CGROUP_ID_AVAILABLE		3631914						
ANR	3632013	Symbol	ok		3631914						
ANR	3632014	Function	ProcFamilyMonitor :: unregister_subfamily	379:0:10691:11442							
ANR	3632015	FunctionDef	ProcFamilyMonitor :: unregister_subfamily (pid_t pid)		3632014	0					
ANR	3632016	CompoundStatement		381:0:10762:11442	3632014	0					
ANR	3632017	IdentifierDeclStatement	Tree < ProcFamily * > * tree = lookup_family ( pid ) ;	384:1:10791:10835	3632014	0	True				
ANR	3632018	IdentifierDecl	* tree = lookup_family ( pid )		3632014	0					
ANR	3632019	IdentifierDeclType	Tree < ProcFamily * > *		3632014	0					
ANR	3632020	Identifier	tree		3632014	1					
ANR	3632021	AssignmentExpression	* tree = lookup_family ( pid )		3632014	2		=			
ANR	3632022	Identifier	tree		3632014	0					
ANR	3632023	CallExpression	lookup_family ( pid )		3632014	1					
ANR	3632024	Callee	lookup_family		3632014	0					
ANR	3632025	Identifier	lookup_family		3632014	0					
ANR	3632026	ArgumentList	pid		3632014	1					
ANR	3632027	Argument	pid		3632014	0					
ANR	3632028	Identifier	pid		3632014	0					
ANR	3632029	IfStatement	if ( tree == NULL )		3632014	1					
ANR	3632030	Condition	tree == NULL	385:5:10842:10853	3632014	0	True				
ANR	3632031	EqualityExpression	tree == NULL		3632014	0		==			
ANR	3632032	Identifier	tree		3632014	0					
ANR	3632033	Identifier	NULL		3632014	1					
ANR	3632034	CompoundStatement		5:19:93:93	3632014	1					
ANR	3632035	ExpressionStatement	"dprintf ( D_ALWAYS , ""unregister_subfamily failure: family with root %u not found\\n"" , pid )"	386:2:10860:10967	3632014	0	True				
ANR	3632036	CallExpression	"dprintf ( D_ALWAYS , ""unregister_subfamily failure: family with root %u not found\\n"" , pid )"		3632014	0					
ANR	3632037	Callee	dprintf		3632014	0					
ANR	3632038	Identifier	dprintf		3632014	0					
ANR	3632039	ArgumentList	D_ALWAYS		3632014	1					
ANR	3632040	Argument	D_ALWAYS		3632014	0					
ANR	3632041	Identifier	D_ALWAYS		3632014	0					
ANR	3632042	Argument	"""unregister_subfamily failure: family with root %u not found\\n"""		3632014	1					
ANR	3632043	PrimaryExpression	"""unregister_subfamily failure: family with root %u not found\\n"""		3632014	0					
ANR	3632044	Argument	pid		3632014	2					
ANR	3632045	Identifier	pid		3632014	0					
ANR	3632046	ReturnStatement	return PROC_FAMILY_ERROR_FAMILY_NOT_FOUND ;	389:2:10971:11012	3632014	1	True				
ANR	3632047	Identifier	PROC_FAMILY_ERROR_FAMILY_NOT_FOUND		3632014	0					
ANR	3632048	IfStatement	if ( tree -> get_parent ( ) == NULL )		3632014	2					
ANR	3632049	Condition	tree -> get_parent ( ) == NULL	394:5:11097:11122	3632014	0	True				
ANR	3632050	EqualityExpression	tree -> get_parent ( ) == NULL		3632014	0		==			
ANR	3632051	CallExpression	tree -> get_parent ( )		3632014	0					
ANR	3632052	Callee	tree -> get_parent		3632014	0					
ANR	3632053	PtrMemberAccess	tree -> get_parent		3632014	0					
ANR	3632054	Identifier	tree		3632014	0					
ANR	3632055	Identifier	get_parent		3632014	1					
ANR	3632056	ArgumentList			3632014	1					
ANR	3632057	Identifier	NULL		3632014	1					
ANR	3632058	CompoundStatement		14:33:362:362	3632014	1					
ANR	3632059	ExpressionStatement	"dprintf ( D_ALWAYS , ""unregister_subfamily failure: cannot unregister root family\\n"" )"	395:2:11129:11221	3632014	0	True				
ANR	3632060	CallExpression	"dprintf ( D_ALWAYS , ""unregister_subfamily failure: cannot unregister root family\\n"" )"		3632014	0					
ANR	3632061	Callee	dprintf		3632014	0					
ANR	3632062	Identifier	dprintf		3632014	0					
ANR	3632063	ArgumentList	D_ALWAYS		3632014	1					
ANR	3632064	Argument	D_ALWAYS		3632014	0					
ANR	3632065	Identifier	D_ALWAYS		3632014	0					
ANR	3632066	Argument	"""unregister_subfamily failure: cannot unregister root family\\n"""		3632014	1					
ANR	3632067	PrimaryExpression	"""unregister_subfamily failure: cannot unregister root family\\n"""		3632014	0					
ANR	3632068	ReturnStatement	return PROC_FAMILY_ERROR_UNREGISTER_ROOT ;	397:2:11225:11265	3632014	1	True				
ANR	3632069	Identifier	PROC_FAMILY_ERROR_UNREGISTER_ROOT		3632014	0					
ANR	3632070	ExpressionStatement	"dprintf ( D_ALWAYS , ""unregistering family with root pid %u\\n"" , pid )"	402:1:11292:11375	3632014	3	True				
ANR	3632071	CallExpression	"dprintf ( D_ALWAYS , ""unregistering family with root pid %u\\n"" , pid )"		3632014	0					
ANR	3632072	Callee	dprintf		3632014	0					
ANR	3632073	Identifier	dprintf		3632014	0					
ANR	3632074	ArgumentList	D_ALWAYS		3632014	1					
ANR	3632075	Argument	D_ALWAYS		3632014	0					
ANR	3632076	Identifier	D_ALWAYS		3632014	0					
ANR	3632077	Argument	"""unregistering family with root pid %u\\n"""		3632014	1					
ANR	3632078	PrimaryExpression	"""unregistering family with root pid %u\\n"""		3632014	0					
ANR	3632079	Argument	pid		3632014	2					
ANR	3632080	Identifier	pid		3632014	0					
ANR	3632081	ExpressionStatement	unregister_subfamily ( tree )	405:1:11378:11404	3632014	4	True				
ANR	3632082	CallExpression	unregister_subfamily ( tree )		3632014	0					
ANR	3632083	Callee	unregister_subfamily		3632014	0					
ANR	3632084	Identifier	unregister_subfamily		3632014	0					
ANR	3632085	ArgumentList	tree		3632014	1					
ANR	3632086	Argument	tree		3632014	0					
ANR	3632087	Identifier	tree		3632014	0					
ANR	3632088	ReturnStatement	return PROC_FAMILY_ERROR_SUCCESS ;	407:1:11408:11440	3632014	5	True				
ANR	3632089	Identifier	PROC_FAMILY_ERROR_SUCCESS		3632014	0					
ANR	3632090	ReturnType	proc_family_error_t		3632014	1					
ANR	3632091	Identifier	ProcFamilyMonitor :: unregister_subfamily		3632014	2					
ANR	3632092	ParameterList	pid_t pid		3632014	3					
ANR	3632093	Parameter	pid_t pid	380:40:10751:10759	3632014	0	True				
ANR	3632094	ParameterType	pid_t		3632014	0					
ANR	3632095	Identifier	pid		3632014	1					
ANR	3632096	CFGEntryNode	ENTRY		3632014		True				
ANR	3632097	CFGExitNode	EXIT		3632014		True				
ANR	3632098	Symbol	* tree		3632014						
ANR	3632099	Symbol	lookup_family		3632014						
ANR	3632100	Symbol	NULL		3632014						
ANR	3632101	Symbol	PROC_FAMILY_ERROR_UNREGISTER_ROOT		3632014						
ANR	3632102	Symbol	tree		3632014						
ANR	3632103	Symbol	D_ALWAYS		3632014						
ANR	3632104	Symbol	PROC_FAMILY_ERROR_FAMILY_NOT_FOUND		3632014						
ANR	3632105	Symbol	pid		3632014						
ANR	3632106	Symbol	tree -> get_parent		3632014						
ANR	3632107	Symbol	PROC_FAMILY_ERROR_SUCCESS		3632014						
ANR	3632108	Function	ProcFamilyMonitor :: use_glexec_for_family	411:0:11465:12220							
ANR	3632109	FunctionDef	"ProcFamilyMonitor :: use_glexec_for_family (pid_t pid , char * proxy)"		3632108	0					
ANR	3632110	CompoundStatement		413:0:11550:12220	3632108	0					
ANR	3632111	IfStatement	if ( ! glexec_kill_check ( ) )		3632108	0					
ANR	3632112	Condition	! glexec_kill_check ( )	417:5:11632:11651	3632108	0	True				
ANR	3632113	UnaryOperationExpression	! glexec_kill_check ( )		3632108	0					
ANR	3632114	UnaryOperator	!		3632108	0					
ANR	3632115	CallExpression	glexec_kill_check ( )		3632108	1					
ANR	3632116	Callee	glexec_kill_check		3632108	0					
ANR	3632117	Identifier	glexec_kill_check		3632108	0					
ANR	3632118	ArgumentList			3632108	1					
ANR	3632119	CompoundStatement		5:27:103:103	3632108	1					
ANR	3632120	Statement	dprintf	418:2:11658:11664	3632108	0	True				
ANR	3632121	Statement	(	418:9:11665:11665	3632108	1	True				
ANR	3632122	Statement	D_ALWAYS	418:10:11666:11673	3632108	2	True				
ANR	3632123	Statement	","	418:18:11674:11674	3632108	3	True				
ANR	3632124	Statement	"""use_glexec_for_family failure: """	419:10:11686:11718	3632108	4	True				
ANR	3632125	Statement	"""glexec_kill not initialized\\n"""	420:14:11734:11764	3632108	5	True				
ANR	3632126	Statement	)	420:45:11765:11765	3632108	6	True				
ANR	3632127	ExpressionStatement		420:46:11766:11766	3632108	7	True				
ANR	3632128	ReturnStatement	return PROC_FAMILY_ERROR_NO_GLEXEC ;	421:2:11770:11804	3632108	8	True				
ANR	3632129	Identifier	PROC_FAMILY_ERROR_NO_GLEXEC		3632108	0					
ANR	3632130	IdentifierDeclStatement	Tree < ProcFamily * > * tree ;	426:1:11837:11860	3632108	1	True				
ANR	3632131	IdentifierDecl	* tree		3632108	0					
ANR	3632132	IdentifierDeclType	Tree < ProcFamily * > *		3632108	0					
ANR	3632133	Identifier	tree		3632108	1					
ANR	3632134	IdentifierDeclStatement	"int ret = m_family_table . lookup ( pid , tree ) ;"	427:1:11863:11905	3632108	2	True				
ANR	3632135	IdentifierDecl	"ret = m_family_table . lookup ( pid , tree )"		3632108	0					
ANR	3632136	IdentifierDeclType	int		3632108	0					
ANR	3632137	Identifier	ret		3632108	1					
ANR	3632138	AssignmentExpression	"ret = m_family_table . lookup ( pid , tree )"		3632108	2		=			
ANR	3632139	Identifier	ret		3632108	0					
ANR	3632140	CallExpression	"m_family_table . lookup ( pid , tree )"		3632108	1					
ANR	3632141	Callee	m_family_table . lookup		3632108	0					
ANR	3632142	MemberAccess	m_family_table . lookup		3632108	0					
ANR	3632143	Identifier	m_family_table		3632108	0					
ANR	3632144	Identifier	lookup		3632108	1					
ANR	3632145	ArgumentList	pid		3632108	1					
ANR	3632146	Argument	pid		3632108	0					
ANR	3632147	Identifier	pid		3632108	0					
ANR	3632148	Argument	tree		3632108	1					
ANR	3632149	Identifier	tree		3632108	0					
ANR	3632150	IfStatement	if ( ret == - 1 )		3632108	3					
ANR	3632151	Condition	ret == - 1	428:5:11912:11920	3632108	0	True				
ANR	3632152	EqualityExpression	ret == - 1		3632108	0		==			
ANR	3632153	Identifier	ret		3632108	0					
ANR	3632154	UnaryOperationExpression	- 1		3632108	1					
ANR	3632155	UnaryOperator	-		3632108	0					
ANR	3632156	PrimaryExpression	1		3632108	1					
ANR	3632157	CompoundStatement		16:16:372:372	3632108	1					
ANR	3632158	Statement	dprintf	429:2:11927:11933	3632108	0	True				
ANR	3632159	Statement	(	429:9:11934:11934	3632108	1	True				
ANR	3632160	Statement	D_ALWAYS	429:10:11935:11942	3632108	2	True				
ANR	3632161	Statement	","	429:18:11943:11943	3632108	3	True				
ANR	3632162	Statement	"""use_glexec_for_family failure: """	430:10:11955:11987	3632108	4	True				
ANR	3632163	Statement	"""family with root %u not found\\n"""	431:14:12003:12035	3632108	5	True				
ANR	3632164	Statement	","	431:47:12036:12036	3632108	6	True				
ANR	3632165	Statement	pid	432:10:12048:12050	3632108	7	True				
ANR	3632166	Statement	)	432:13:12051:12051	3632108	8	True				
ANR	3632167	ExpressionStatement		432:14:12052:12052	3632108	9	True				
ANR	3632168	ReturnStatement	return PROC_FAMILY_ERROR_FAMILY_NOT_FOUND ;	433:2:12056:12097	3632108	10	True				
ANR	3632169	Identifier	PROC_FAMILY_ERROR_FAMILY_NOT_FOUND		3632108	0					
ANR	3632170	ExpressionStatement	tree -> get_data ( ) -> set_proxy ( proxy )	438:1:12148:12182	3632108	4	True				
ANR	3632171	CallExpression	tree -> get_data ( ) -> set_proxy ( proxy )		3632108	0					
ANR	3632172	Callee	tree -> get_data ( ) -> set_proxy		3632108	0					
ANR	3632173	PtrMemberAccess	tree -> get_data ( ) -> set_proxy		3632108	0					
ANR	3632174	CallExpression	tree -> get_data ( )		3632108	0					
ANR	3632175	Callee	tree -> get_data		3632108	0					
ANR	3632176	PtrMemberAccess	tree -> get_data		3632108	0					
ANR	3632177	Identifier	tree		3632108	0					
ANR	3632178	Identifier	get_data		3632108	1					
ANR	3632179	ArgumentList			3632108	1					
ANR	3632180	Identifier	set_proxy		3632108	1					
ANR	3632181	ArgumentList	proxy		3632108	1					
ANR	3632182	Argument	proxy		3632108	0					
ANR	3632183	Identifier	proxy		3632108	0					
ANR	3632184	ReturnStatement	return PROC_FAMILY_ERROR_SUCCESS ;	440:1:12186:12218	3632108	5	True				
ANR	3632185	Identifier	PROC_FAMILY_ERROR_SUCCESS		3632108	0					
ANR	3632186	ReturnType	proc_family_error_t		3632108	1					
ANR	3632187	Identifier	ProcFamilyMonitor :: use_glexec_for_family		3632108	2					
ANR	3632188	ParameterList	"pid_t pid , char * proxy"		3632108	3					
ANR	3632189	Parameter	pid_t pid	412:41:11526:11534	3632108	0	True				
ANR	3632190	ParameterType	pid_t		3632108	0					
ANR	3632191	Identifier	pid		3632108	1					
ANR	3632192	Parameter	char * proxy	412:52:11537:11547	3632108	1	True				
ANR	3632193	ParameterType	char *		3632108	0					
ANR	3632194	Identifier	proxy		3632108	1					
ANR	3632195	CFGEntryNode	ENTRY		3632108		True				
ANR	3632196	CFGExitNode	EXIT		3632108		True				
ANR	3632197	Symbol	glexec_kill_check		3632108						
ANR	3632198	Symbol	ret		3632108						
ANR	3632199	Symbol	* tree		3632108						
ANR	3632200	Symbol	proxy		3632108						
ANR	3632201	Symbol	PROC_FAMILY_ERROR_NO_GLEXEC		3632108						
ANR	3632202	Symbol	m_family_table		3632108						
ANR	3632203	Symbol	tree		3632108						
ANR	3632204	Symbol	PROC_FAMILY_ERROR_FAMILY_NOT_FOUND		3632108						
ANR	3632205	Symbol	m_family_table . lookup		3632108						
ANR	3632206	Symbol	tree -> get_data		3632108						
ANR	3632207	Symbol	pid		3632108						
ANR	3632208	Symbol	PROC_FAMILY_ERROR_SUCCESS		3632108						
ANR	3632209	Function	ProcFamilyMonitor :: get_snapshot_interval	444:0:12230:12318							
ANR	3632210	FunctionDef	ProcFamilyMonitor :: get_snapshot_interval ()		3632209	0					
ANR	3632211	CompoundStatement		446:0:12277:12318	3632209	0					
ANR	3632212	ReturnStatement	return get_snapshot_interval ( m_tree ) ;	447:1:12280:12316	3632209	0	True				
ANR	3632213	CallExpression	get_snapshot_interval ( m_tree )		3632209	0					
ANR	3632214	Callee	get_snapshot_interval		3632209	0					
ANR	3632215	Identifier	get_snapshot_interval		3632209	0					
ANR	3632216	ArgumentList	m_tree		3632209	1					
ANR	3632217	Argument	m_tree		3632209	0					
ANR	3632218	Identifier	m_tree		3632209	0					
ANR	3632219	ReturnType	int		3632209	1					
ANR	3632220	Identifier	ProcFamilyMonitor :: get_snapshot_interval		3632209	2					
ANR	3632221	ParameterList			3632209	3					
ANR	3632222	CFGEntryNode	ENTRY		3632209		True				
ANR	3632223	CFGExitNode	EXIT		3632209		True				
ANR	3632224	Symbol	m_tree		3632209						
ANR	3632225	Symbol	get_snapshot_interval		3632209						
ANR	3632226	Function	ProcFamilyMonitor :: signal_process	450:0:12321:12816							
ANR	3632227	FunctionDef	"ProcFamilyMonitor :: signal_process (pid_t pid , int sig)"		3632226	0					
ANR	3632228	CompoundStatement		452:0:12395:12816	3632226	0					
ANR	3632229	IdentifierDeclStatement	"Tree < ProcFamily * > * tree = lookup_family ( pid , true ) ;"	455:1:12455:12505	3632226	0	True				
ANR	3632230	IdentifierDecl	"* tree = lookup_family ( pid , true )"		3632226	0					
ANR	3632231	IdentifierDeclType	Tree < ProcFamily * > *		3632226	0					
ANR	3632232	Identifier	tree		3632226	1					
ANR	3632233	AssignmentExpression	"* tree = lookup_family ( pid , true )"		3632226	2		=			
ANR	3632234	Identifier	tree		3632226	0					
ANR	3632235	CallExpression	"lookup_family ( pid , true )"		3632226	1					
ANR	3632236	Callee	lookup_family		3632226	0					
ANR	3632237	Identifier	lookup_family		3632226	0					
ANR	3632238	ArgumentList	pid		3632226	1					
ANR	3632239	Argument	pid		3632226	0					
ANR	3632240	Identifier	pid		3632226	0					
ANR	3632241	Argument	true		3632226	1					
ANR	3632242	Identifier	true		3632226	0					
ANR	3632243	IfStatement	if ( tree == NULL )		3632226	1					
ANR	3632244	Condition	tree == NULL	456:5:12512:12523	3632226	0	True				
ANR	3632245	EqualityExpression	tree == NULL		3632226	0		==			
ANR	3632246	Identifier	tree		3632226	0					
ANR	3632247	Identifier	NULL		3632226	1					
ANR	3632248	CompoundStatement		5:19:130:130	3632226	1					
ANR	3632249	ExpressionStatement	"dprintf ( D_ALWAYS , ""signal_process failure: family with root %u not found\\n"" , pid )"	457:2:12530:12625	3632226	0	True				
ANR	3632250	CallExpression	"dprintf ( D_ALWAYS , ""signal_process failure: family with root %u not found\\n"" , pid )"		3632226	0					
ANR	3632251	Callee	dprintf		3632226	0					
ANR	3632252	Identifier	dprintf		3632226	0					
ANR	3632253	ArgumentList	D_ALWAYS		3632226	1					
ANR	3632254	Argument	D_ALWAYS		3632226	0					
ANR	3632255	Identifier	D_ALWAYS		3632226	0					
ANR	3632256	Argument	"""signal_process failure: family with root %u not found\\n"""		3632226	1					
ANR	3632257	PrimaryExpression	"""signal_process failure: family with root %u not found\\n"""		3632226	0					
ANR	3632258	Argument	pid		3632226	2					
ANR	3632259	Identifier	pid		3632226	0					
ANR	3632260	ReturnStatement	return PROC_FAMILY_ERROR_FAMILY_NOT_FOUND ;	460:2:12629:12670	3632226	1	True				
ANR	3632261	Identifier	PROC_FAMILY_ERROR_FAMILY_NOT_FOUND		3632226	0					
ANR	3632262	ExpressionStatement	"dprintf ( D_ALWAYS , ""sending signal %d to process %u\\n"" , sig , pid )"	463:1:12677:12741	3632226	2	True				
ANR	3632263	CallExpression	"dprintf ( D_ALWAYS , ""sending signal %d to process %u\\n"" , sig , pid )"		3632226	0					
ANR	3632264	Callee	dprintf		3632226	0					
ANR	3632265	Identifier	dprintf		3632226	0					
ANR	3632266	ArgumentList	D_ALWAYS		3632226	1					
ANR	3632267	Argument	D_ALWAYS		3632226	0					
ANR	3632268	Identifier	D_ALWAYS		3632226	0					
ANR	3632269	Argument	"""sending signal %d to process %u\\n"""		3632226	1					
ANR	3632270	PrimaryExpression	"""sending signal %d to process %u\\n"""		3632226	0					
ANR	3632271	Argument	sig		3632226	2					
ANR	3632272	Identifier	sig		3632226	0					
ANR	3632273	Argument	pid		3632226	3					
ANR	3632274	Identifier	pid		3632226	0					
ANR	3632275	ExpressionStatement	tree -> get_data ( ) -> signal_root ( sig )	464:1:12744:12778	3632226	3	True				
ANR	3632276	CallExpression	tree -> get_data ( ) -> signal_root ( sig )		3632226	0					
ANR	3632277	Callee	tree -> get_data ( ) -> signal_root		3632226	0					
ANR	3632278	PtrMemberAccess	tree -> get_data ( ) -> signal_root		3632226	0					
ANR	3632279	CallExpression	tree -> get_data ( )		3632226	0					
ANR	3632280	Callee	tree -> get_data		3632226	0					
ANR	3632281	PtrMemberAccess	tree -> get_data		3632226	0					
ANR	3632282	Identifier	tree		3632226	0					
ANR	3632283	Identifier	get_data		3632226	1					
ANR	3632284	ArgumentList			3632226	1					
ANR	3632285	Identifier	signal_root		3632226	1					
ANR	3632286	ArgumentList	sig		3632226	1					
ANR	3632287	Argument	sig		3632226	0					
ANR	3632288	Identifier	sig		3632226	0					
ANR	3632289	ReturnStatement	return PROC_FAMILY_ERROR_SUCCESS ;	466:1:12782:12814	3632226	4	True				
ANR	3632290	Identifier	PROC_FAMILY_ERROR_SUCCESS		3632226	0					
ANR	3632291	ReturnType	proc_family_error_t		3632226	1					
ANR	3632292	Identifier	ProcFamilyMonitor :: signal_process		3632226	2					
ANR	3632293	ParameterList	"pid_t pid , int sig"		3632226	3					
ANR	3632294	Parameter	pid_t pid	451:34:12375:12383	3632226	0	True				
ANR	3632295	ParameterType	pid_t		3632226	0					
ANR	3632296	Identifier	pid		3632226	1					
ANR	3632297	Parameter	int sig	451:45:12386:12392	3632226	1	True				
ANR	3632298	ParameterType	int		3632226	0					
ANR	3632299	Identifier	sig		3632226	1					
ANR	3632300	CFGEntryNode	ENTRY		3632226		True				
ANR	3632301	CFGExitNode	EXIT		3632226		True				
ANR	3632302	Symbol	sig		3632226						
ANR	3632303	Symbol	* tree		3632226						
ANR	3632304	Symbol	lookup_family		3632226						
ANR	3632305	Symbol	NULL		3632226						
ANR	3632306	Symbol	tree		3632226						
ANR	3632307	Symbol	true		3632226						
ANR	3632308	Symbol	D_ALWAYS		3632226						
ANR	3632309	Symbol	PROC_FAMILY_ERROR_FAMILY_NOT_FOUND		3632226						
ANR	3632310	Symbol	tree -> get_data		3632226						
ANR	3632311	Symbol	pid		3632226						
ANR	3632312	Symbol	PROC_FAMILY_ERROR_SUCCESS		3632226						
ANR	3632313	Function	ProcFamilyMonitor :: signal_family	469:0:12819:13374							
ANR	3632314	FunctionDef	"ProcFamilyMonitor :: signal_family (pid_t pid , int sig)"		3632313	0					
ANR	3632315	CompoundStatement		471:0:12892:13374	3632313	0					
ANR	3632316	ExpressionStatement	snapshot ( )	474:1:12933:12943	3632313	0	True				
ANR	3632317	CallExpression	snapshot ( )		3632313	0					
ANR	3632318	Callee	snapshot		3632313	0					
ANR	3632319	Identifier	snapshot		3632313	0					
ANR	3632320	ArgumentList			3632313	1					
ANR	3632321	IdentifierDeclStatement	"Tree < ProcFamily * > * tree = lookup_family ( pid , true ) ;"	478:1:12971:13021	3632313	1	True				
ANR	3632322	IdentifierDecl	"* tree = lookup_family ( pid , true )"		3632313	0					
ANR	3632323	IdentifierDeclType	Tree < ProcFamily * > *		3632313	0					
ANR	3632324	Identifier	tree		3632313	1					
ANR	3632325	AssignmentExpression	"* tree = lookup_family ( pid , true )"		3632313	2		=			
ANR	3632326	Identifier	tree		3632313	0					
ANR	3632327	CallExpression	"lookup_family ( pid , true )"		3632313	1					
ANR	3632328	Callee	lookup_family		3632313	0					
ANR	3632329	Identifier	lookup_family		3632313	0					
ANR	3632330	ArgumentList	pid		3632313	1					
ANR	3632331	Argument	pid		3632313	0					
ANR	3632332	Identifier	pid		3632313	0					
ANR	3632333	Argument	true		3632313	1					
ANR	3632334	Identifier	true		3632313	0					
ANR	3632335	IfStatement	if ( tree == NULL )		3632313	2					
ANR	3632336	Condition	tree == NULL	479:5:13028:13039	3632313	0	True				
ANR	3632337	EqualityExpression	tree == NULL		3632313	0		==			
ANR	3632338	Identifier	tree		3632313	0					
ANR	3632339	Identifier	NULL		3632313	1					
ANR	3632340	CompoundStatement		9:19:149:149	3632313	1					
ANR	3632341	ExpressionStatement	"dprintf ( D_ALWAYS , ""signal_family error: family with root %u not found\\n"" , pid )"	480:2:13046:13144	3632313	0	True				
ANR	3632342	CallExpression	"dprintf ( D_ALWAYS , ""signal_family error: family with root %u not found\\n"" , pid )"		3632313	0					
ANR	3632343	Callee	dprintf		3632313	0					
ANR	3632344	Identifier	dprintf		3632313	0					
ANR	3632345	ArgumentList	D_ALWAYS		3632313	1					
ANR	3632346	Argument	D_ALWAYS		3632313	0					
ANR	3632347	Identifier	D_ALWAYS		3632313	0					
ANR	3632348	Argument	"""signal_family error: family with root %u not found\\n"""		3632313	1					
ANR	3632349	PrimaryExpression	"""signal_family error: family with root %u not found\\n"""		3632313	0					
ANR	3632350	Argument	pid		3632313	2					
ANR	3632351	Identifier	pid		3632313	0					
ANR	3632352	ReturnStatement	return PROC_FAMILY_ERROR_FAMILY_NOT_FOUND ;	483:2:13148:13189	3632313	1	True				
ANR	3632353	Identifier	PROC_FAMILY_ERROR_FAMILY_NOT_FOUND		3632313	0					
ANR	3632354	ExpressionStatement	"dprintf ( D_ALWAYS , ""sending signal %d to family with root %u\\n"" , sig , pid )"	488:1:13236:13309	3632313	3	True				
ANR	3632355	CallExpression	"dprintf ( D_ALWAYS , ""sending signal %d to family with root %u\\n"" , sig , pid )"		3632313	0					
ANR	3632356	Callee	dprintf		3632313	0					
ANR	3632357	Identifier	dprintf		3632313	0					
ANR	3632358	ArgumentList	D_ALWAYS		3632313	1					
ANR	3632359	Argument	D_ALWAYS		3632313	0					
ANR	3632360	Identifier	D_ALWAYS		3632313	0					
ANR	3632361	Argument	"""sending signal %d to family with root %u\\n"""		3632313	1					
ANR	3632362	PrimaryExpression	"""sending signal %d to family with root %u\\n"""		3632313	0					
ANR	3632363	Argument	sig		3632313	2					
ANR	3632364	Identifier	sig		3632313	0					
ANR	3632365	Argument	pid		3632313	3					
ANR	3632366	Identifier	pid		3632313	0					
ANR	3632367	ExpressionStatement	"signal_family ( tree , sig )"	489:1:13312:13336	3632313	4	True				
ANR	3632368	CallExpression	"signal_family ( tree , sig )"		3632313	0					
ANR	3632369	Callee	signal_family		3632313	0					
ANR	3632370	Identifier	signal_family		3632313	0					
ANR	3632371	ArgumentList	tree		3632313	1					
ANR	3632372	Argument	tree		3632313	0					
ANR	3632373	Identifier	tree		3632313	0					
ANR	3632374	Argument	sig		3632313	1					
ANR	3632375	Identifier	sig		3632313	0					
ANR	3632376	ReturnStatement	return PROC_FAMILY_ERROR_SUCCESS ;	491:1:13340:13372	3632313	5	True				
ANR	3632377	Identifier	PROC_FAMILY_ERROR_SUCCESS		3632313	0					
ANR	3632378	ReturnType	proc_family_error_t		3632313	1					
ANR	3632379	Identifier	ProcFamilyMonitor :: signal_family		3632313	2					
ANR	3632380	ParameterList	"pid_t pid , int sig"		3632313	3					
ANR	3632381	Parameter	pid_t pid	470:33:12872:12880	3632313	0	True				
ANR	3632382	ParameterType	pid_t		3632313	0					
ANR	3632383	Identifier	pid		3632313	1					
ANR	3632384	Parameter	int sig	470:44:12883:12889	3632313	1	True				
ANR	3632385	ParameterType	int		3632313	0					
ANR	3632386	Identifier	sig		3632313	1					
ANR	3632387	CFGEntryNode	ENTRY		3632313		True				
ANR	3632388	CFGExitNode	EXIT		3632313		True				
ANR	3632389	Symbol	sig		3632313						
ANR	3632390	Symbol	lookup_family		3632313						
ANR	3632391	Symbol	NULL		3632313						
ANR	3632392	Symbol	tree		3632313						
ANR	3632393	Symbol	true		3632313						
ANR	3632394	Symbol	D_ALWAYS		3632313						
ANR	3632395	Symbol	PROC_FAMILY_ERROR_FAMILY_NOT_FOUND		3632313						
ANR	3632396	Symbol	pid		3632313						
ANR	3632397	Symbol	PROC_FAMILY_ERROR_SUCCESS		3632313						
ANR	3632398	Function	ProcFamilyMonitor :: get_family_usage	494:0:13377:14582							
ANR	3632399	FunctionDef	"ProcFamilyMonitor :: get_family_usage (pid_t pid , ProcFamilyUsage * usage)"		3632398	0					
ANR	3632400	CompoundStatement		496:0:13468:14582	3632398	0					
ANR	3632401	IdentifierDeclStatement	"Tree < ProcFamily * > * tree = lookup_family ( pid , true ) ;"	499:1:13495:13545	3632398	0	True				
ANR	3632402	IdentifierDecl	"* tree = lookup_family ( pid , true )"		3632398	0					
ANR	3632403	IdentifierDeclType	Tree < ProcFamily * > *		3632398	0					
ANR	3632404	Identifier	tree		3632398	1					
ANR	3632405	AssignmentExpression	"* tree = lookup_family ( pid , true )"		3632398	2		=			
ANR	3632406	Identifier	tree		3632398	0					
ANR	3632407	CallExpression	"lookup_family ( pid , true )"		3632398	1					
ANR	3632408	Callee	lookup_family		3632398	0					
ANR	3632409	Identifier	lookup_family		3632398	0					
ANR	3632410	ArgumentList	pid		3632398	1					
ANR	3632411	Argument	pid		3632398	0					
ANR	3632412	Identifier	pid		3632398	0					
ANR	3632413	Argument	true		3632398	1					
ANR	3632414	Identifier	true		3632398	0					
ANR	3632415	IfStatement	if ( tree == NULL )		3632398	1					
ANR	3632416	Condition	tree == NULL	500:5:13552:13563	3632398	0	True				
ANR	3632417	EqualityExpression	tree == NULL		3632398	0		==			
ANR	3632418	Identifier	tree		3632398	0					
ANR	3632419	Identifier	NULL		3632398	1					
ANR	3632420	CompoundStatement		5:19:97:97	3632398	1					
ANR	3632421	ExpressionStatement	"dprintf ( D_ALWAYS , ""get_family_usage failure: family with root %u not found\\n"" , pid )"	501:2:13570:13673	3632398	0	True				
ANR	3632422	CallExpression	"dprintf ( D_ALWAYS , ""get_family_usage failure: family with root %u not found\\n"" , pid )"		3632398	0					
ANR	3632423	Callee	dprintf		3632398	0					
ANR	3632424	Identifier	dprintf		3632398	0					
ANR	3632425	ArgumentList	D_ALWAYS		3632398	1					
ANR	3632426	Argument	D_ALWAYS		3632398	0					
ANR	3632427	Identifier	D_ALWAYS		3632398	0					
ANR	3632428	Argument	"""get_family_usage failure: family with root %u not found\\n"""		3632398	1					
ANR	3632429	PrimaryExpression	"""get_family_usage failure: family with root %u not found\\n"""		3632398	0					
ANR	3632430	Argument	pid		3632398	2					
ANR	3632431	Identifier	pid		3632398	0					
ANR	3632432	ReturnStatement	return PROC_FAMILY_ERROR_FAMILY_NOT_FOUND ;	504:2:13677:13718	3632398	1	True				
ANR	3632433	Identifier	PROC_FAMILY_ERROR_FAMILY_NOT_FOUND		3632398	0					
ANR	3632434	ExpressionStatement	"dprintf ( D_ALWAYS , ""gathering usage data for family with root pid %u\\n"" , pid )"	509:1:13789:13883	3632398	2	True				
ANR	3632435	CallExpression	"dprintf ( D_ALWAYS , ""gathering usage data for family with root pid %u\\n"" , pid )"		3632398	0					
ANR	3632436	Callee	dprintf		3632398	0					
ANR	3632437	Identifier	dprintf		3632398	0					
ANR	3632438	ArgumentList	D_ALWAYS		3632398	1					
ANR	3632439	Argument	D_ALWAYS		3632398	0					
ANR	3632440	Identifier	D_ALWAYS		3632398	0					
ANR	3632441	Argument	"""gathering usage data for family with root pid %u\\n"""		3632398	1					
ANR	3632442	PrimaryExpression	"""gathering usage data for family with root pid %u\\n"""		3632398	0					
ANR	3632443	Argument	pid		3632398	2					
ANR	3632444	Identifier	pid		3632398	0					
ANR	3632445	ExpressionStatement	ASSERT ( usage != NULL )	512:1:13886:13907	3632398	3	True				
ANR	3632446	CallExpression	ASSERT ( usage != NULL )		3632398	0					
ANR	3632447	Callee	ASSERT		3632398	0					
ANR	3632448	Identifier	ASSERT		3632398	0					
ANR	3632449	ArgumentList	usage != NULL		3632398	1					
ANR	3632450	Argument	usage != NULL		3632398	0					
ANR	3632451	EqualityExpression	usage != NULL		3632398	0		!=			
ANR	3632452	Identifier	usage		3632398	0					
ANR	3632453	Identifier	NULL		3632398	1					
ANR	3632454	ExpressionStatement	usage -> user_cpu_time = 0	513:1:13910:13934	3632398	4	True				
ANR	3632455	AssignmentExpression	usage -> user_cpu_time = 0		3632398	0		=			
ANR	3632456	PtrMemberAccess	usage -> user_cpu_time		3632398	0					
ANR	3632457	Identifier	usage		3632398	0					
ANR	3632458	Identifier	user_cpu_time		3632398	1					
ANR	3632459	PrimaryExpression	0		3632398	1					
ANR	3632460	ExpressionStatement	usage -> sys_cpu_time = 0	514:1:13937:13960	3632398	5	True				
ANR	3632461	AssignmentExpression	usage -> sys_cpu_time = 0		3632398	0		=			
ANR	3632462	PtrMemberAccess	usage -> sys_cpu_time		3632398	0					
ANR	3632463	Identifier	usage		3632398	0					
ANR	3632464	Identifier	sys_cpu_time		3632398	1					
ANR	3632465	PrimaryExpression	0		3632398	1					
ANR	3632466	ExpressionStatement	usage -> percent_cpu = 0.0	515:1:13963:13987	3632398	6	True				
ANR	3632467	AssignmentExpression	usage -> percent_cpu = 0.0		3632398	0		=			
ANR	3632468	PtrMemberAccess	usage -> percent_cpu		3632398	0					
ANR	3632469	Identifier	usage		3632398	0					
ANR	3632470	Identifier	percent_cpu		3632398	1					
ANR	3632471	PrimaryExpression	0.0		3632398	1					
ANR	3632472	ExpressionStatement	usage -> total_image_size = 0	516:1:13990:14017	3632398	7	True				
ANR	3632473	AssignmentExpression	usage -> total_image_size = 0		3632398	0		=			
ANR	3632474	PtrMemberAccess	usage -> total_image_size		3632398	0					
ANR	3632475	Identifier	usage		3632398	0					
ANR	3632476	Identifier	total_image_size		3632398	1					
ANR	3632477	PrimaryExpression	0		3632398	1					
ANR	3632478	ExpressionStatement	usage -> total_resident_set_size = 0	517:1:14020:14054	3632398	8	True				
ANR	3632479	AssignmentExpression	usage -> total_resident_set_size = 0		3632398	0		=			
ANR	3632480	PtrMemberAccess	usage -> total_resident_set_size		3632398	0					
ANR	3632481	Identifier	usage		3632398	0					
ANR	3632482	Identifier	total_resident_set_size		3632398	1					
ANR	3632483	PrimaryExpression	0		3632398	1					
ANR	3632484	ExpressionStatement	usage -> total_proportional_set_size = 0	519:4:14073:14111	3632398	9	True				
ANR	3632485	AssignmentExpression	usage -> total_proportional_set_size = 0		3632398	0		=			
ANR	3632486	PtrMemberAccess	usage -> total_proportional_set_size		3632398	0					
ANR	3632487	Identifier	usage		3632398	0					
ANR	3632488	Identifier	total_proportional_set_size		3632398	1					
ANR	3632489	PrimaryExpression	0		3632398	1					
ANR	3632490	ExpressionStatement	usage -> total_proportional_set_size_available = false	520:4:14117:14169	3632398	10	True				
ANR	3632491	AssignmentExpression	usage -> total_proportional_set_size_available = false		3632398	0		=			
ANR	3632492	PtrMemberAccess	usage -> total_proportional_set_size_available		3632398	0					
ANR	3632493	Identifier	usage		3632398	0					
ANR	3632494	Identifier	total_proportional_set_size_available		3632398	1					
ANR	3632495	Identifier	false		3632398	1					
ANR	3632496	ExpressionStatement	usage -> block_read_bytes = - 1	523:1:14264:14292	3632398	11	True				
ANR	3632497	AssignmentExpression	usage -> block_read_bytes = - 1		3632398	0		=			
ANR	3632498	PtrMemberAccess	usage -> block_read_bytes		3632398	0					
ANR	3632499	Identifier	usage		3632398	0					
ANR	3632500	Identifier	block_read_bytes		3632398	1					
ANR	3632501	UnaryOperationExpression	- 1		3632398	1					
ANR	3632502	UnaryOperator	-		3632398	0					
ANR	3632503	PrimaryExpression	1		3632398	1					
ANR	3632504	ExpressionStatement	usage -> block_write_bytes = - 1	524:1:14295:14324	3632398	12	True				
ANR	3632505	AssignmentExpression	usage -> block_write_bytes = - 1		3632398	0		=			
ANR	3632506	PtrMemberAccess	usage -> block_write_bytes		3632398	0					
ANR	3632507	Identifier	usage		3632398	0					
ANR	3632508	Identifier	block_write_bytes		3632398	1					
ANR	3632509	UnaryOperationExpression	- 1		3632398	1					
ANR	3632510	UnaryOperator	-		3632398	0					
ANR	3632511	PrimaryExpression	1		3632398	1					
ANR	3632512	ExpressionStatement	usage -> num_procs = 0	525:1:14327:14347	3632398	13	True				
ANR	3632513	AssignmentExpression	usage -> num_procs = 0		3632398	0		=			
ANR	3632514	PtrMemberAccess	usage -> num_procs		3632398	0					
ANR	3632515	Identifier	usage		3632398	0					
ANR	3632516	Identifier	num_procs		3632398	1					
ANR	3632517	PrimaryExpression	0		3632398	1					
ANR	3632518	ExpressionStatement	"get_family_usage ( tree , usage )"	526:1:14350:14379	3632398	14	True				
ANR	3632519	CallExpression	"get_family_usage ( tree , usage )"		3632398	0					
ANR	3632520	Callee	get_family_usage		3632398	0					
ANR	3632521	Identifier	get_family_usage		3632398	0					
ANR	3632522	ArgumentList	tree		3632398	1					
ANR	3632523	Argument	tree		3632398	0					
ANR	3632524	Identifier	tree		3632398	0					
ANR	3632525	Argument	usage		3632398	1					
ANR	3632526	Identifier	usage		3632398	0					
ANR	3632527	ExpressionStatement	usage -> max_image_size = tree -> get_data ( ) -> get_max_image_size ( )	531:1:14482:14544	3632398	15	True				
ANR	3632528	AssignmentExpression	usage -> max_image_size = tree -> get_data ( ) -> get_max_image_size ( )		3632398	0		=			
ANR	3632529	PtrMemberAccess	usage -> max_image_size		3632398	0					
ANR	3632530	Identifier	usage		3632398	0					
ANR	3632531	Identifier	max_image_size		3632398	1					
ANR	3632532	CallExpression	tree -> get_data ( ) -> get_max_image_size ( )		3632398	1					
ANR	3632533	Callee	tree -> get_data ( ) -> get_max_image_size		3632398	0					
ANR	3632534	PtrMemberAccess	tree -> get_data ( ) -> get_max_image_size		3632398	0					
ANR	3632535	CallExpression	tree -> get_data ( )		3632398	0					
ANR	3632536	Callee	tree -> get_data		3632398	0					
ANR	3632537	PtrMemberAccess	tree -> get_data		3632398	0					
ANR	3632538	Identifier	tree		3632398	0					
ANR	3632539	Identifier	get_data		3632398	1					
ANR	3632540	ArgumentList			3632398	1					
ANR	3632541	Identifier	get_max_image_size		3632398	1					
ANR	3632542	ArgumentList			3632398	1					
ANR	3632543	ReturnStatement	return PROC_FAMILY_ERROR_SUCCESS ;	533:1:14548:14580	3632398	16	True				
ANR	3632544	Identifier	PROC_FAMILY_ERROR_SUCCESS		3632398	0					
ANR	3632545	ReturnType	proc_family_error_t		3632398	1					
ANR	3632546	Identifier	ProcFamilyMonitor :: get_family_usage		3632398	2					
ANR	3632547	ParameterList	"pid_t pid , ProcFamilyUsage * usage"		3632398	3					
ANR	3632548	Parameter	pid_t pid	495:36:13433:13441	3632398	0	True				
ANR	3632549	ParameterType	pid_t		3632398	0					
ANR	3632550	Identifier	pid		3632398	1					
ANR	3632551	Parameter	ProcFamilyUsage * usage	495:47:13444:13465	3632398	1	True				
ANR	3632552	ParameterType	ProcFamilyUsage *		3632398	0					
ANR	3632553	Identifier	usage		3632398	1					
ANR	3632554	CFGEntryNode	ENTRY		3632398		True				
ANR	3632555	CFGExitNode	EXIT		3632398		True				
ANR	3632556	Symbol	usage -> user_cpu_time		3632398						
ANR	3632557	Symbol	* tree -> get_data		3632398						
ANR	3632558	Symbol	usage -> total_proportional_set_size_available		3632398						
ANR	3632559	Symbol	usage -> block_read_bytes		3632398						
ANR	3632560	Symbol	usage		3632398						
ANR	3632561	Symbol	tree -> get_data		3632398						
ANR	3632562	Symbol	pid		3632398						
ANR	3632563	Symbol	usage -> total_resident_set_size		3632398						
ANR	3632564	Symbol	* * tree		3632398						
ANR	3632565	Symbol	PROC_FAMILY_ERROR_FAMILY_NOT_FOUND		3632398						
ANR	3632566	Symbol	usage -> num_procs		3632398						
ANR	3632567	Symbol	NULL		3632398						
ANR	3632568	Symbol	usage -> total_proportional_set_size		3632398						
ANR	3632569	Symbol	tree -> get_data ( ) -> get_max_image_size		3632398						
ANR	3632570	Symbol	tree		3632398						
ANR	3632571	Symbol	D_ALWAYS		3632398						
ANR	3632572	Symbol	false		3632398						
ANR	3632573	Symbol	usage -> max_image_size		3632398						
ANR	3632574	Symbol	usage -> percent_cpu		3632398						
ANR	3632575	Symbol	* usage		3632398						
ANR	3632576	Symbol	* tree		3632398						
ANR	3632577	Symbol	lookup_family		3632398						
ANR	3632578	Symbol	usage -> sys_cpu_time		3632398						
ANR	3632579	Symbol	usage -> block_write_bytes		3632398						
ANR	3632580	Symbol	usage -> total_image_size		3632398						
ANR	3632581	Symbol	true		3632398						
ANR	3632582	Symbol	PROC_FAMILY_ERROR_SUCCESS		3632398						
ANR	3632583	Function	ProcFamilyMonitor :: snapshot	536:0:14585:18818							
ANR	3632584	FunctionDef	ProcFamilyMonitor :: snapshot ()		3632583	0					
ANR	3632585	CompoundStatement		538:0:14620:18818	3632583	0					
ANR	3632586	ExpressionStatement	"dprintf ( D_ALWAYS , ""taking a snapshot...\\n"" )"	539:1:14623:14666	3632583	0	True				
ANR	3632587	CallExpression	"dprintf ( D_ALWAYS , ""taking a snapshot...\\n"" )"		3632583	0					
ANR	3632588	Callee	dprintf		3632583	0					
ANR	3632589	Identifier	dprintf		3632583	0					
ANR	3632590	ArgumentList	D_ALWAYS		3632583	1					
ANR	3632591	Argument	D_ALWAYS		3632583	0					
ANR	3632592	Identifier	D_ALWAYS		3632583	0					
ANR	3632593	Argument	"""taking a snapshot...\\n"""		3632583	1					
ANR	3632594	PrimaryExpression	"""taking a snapshot...\\n"""		3632583	0					
ANR	3632595	IdentifierDeclStatement	procInfo * pi_list = ProcAPI :: getProcInfoList ( ) ;	546:1:14907:14953	3632583	1	True				
ANR	3632596	IdentifierDecl	* pi_list = ProcAPI :: getProcInfoList ( )		3632583	0					
ANR	3632597	IdentifierDeclType	procInfo *		3632583	0					
ANR	3632598	Identifier	pi_list		3632583	1					
ANR	3632599	AssignmentExpression	* pi_list = ProcAPI :: getProcInfoList ( )		3632583	2		=			
ANR	3632600	Identifier	pi_list		3632583	0					
ANR	3632601	CallExpression	ProcAPI :: getProcInfoList ( )		3632583	1					
ANR	3632602	Callee	ProcAPI :: getProcInfoList		3632583	0					
ANR	3632603	Identifier	ProcAPI :: getProcInfoList		3632583	0					
ANR	3632604	ArgumentList			3632583	1					
ANR	3632605	IdentifierDeclStatement	procInfo * * prev_ptr = & pi_list ;	572:1:15868:15898	3632583	2	True				
ANR	3632606	IdentifierDecl	* * prev_ptr = & pi_list		3632583	0					
ANR	3632607	IdentifierDeclType	procInfo * *		3632583	0					
ANR	3632608	Identifier	prev_ptr		3632583	1					
ANR	3632609	AssignmentExpression	* * prev_ptr = & pi_list		3632583	2		=			
ANR	3632610	Identifier	prev_ptr		3632583	0					
ANR	3632611	UnaryOperationExpression	& pi_list		3632583	1					
ANR	3632612	UnaryOperator	&		3632583	0					
ANR	3632613	Identifier	pi_list		3632583	1					
ANR	3632614	IdentifierDeclStatement	procInfo * curr = pi_list ;	573:1:15901:15925	3632583	3	True				
ANR	3632615	IdentifierDecl	* curr = pi_list		3632583	0					
ANR	3632616	IdentifierDeclType	procInfo *		3632583	0					
ANR	3632617	Identifier	curr		3632583	1					
ANR	3632618	AssignmentExpression	* curr = pi_list		3632583	2		=			
ANR	3632619	Identifier	pi_list		3632583	0					
ANR	3632620	Identifier	pi_list		3632583	1					
ANR	3632621	WhileStatement	while ( curr != NULL )		3632583	4					
ANR	3632622	Condition	curr != NULL	574:8:15935:15946	3632583	0	True				
ANR	3632623	EqualityExpression	curr != NULL		3632583	0		!=			
ANR	3632624	Identifier	curr		3632583	0					
ANR	3632625	Identifier	NULL		3632583	1					
ANR	3632626	CompoundStatement		47:2:1463:1509	3632583	1					
ANR	3632627	IfStatement	if ( curr -> pid == 0 )		3632583	0					
ANR	3632628	Condition	curr -> pid == 0	576:6:15958:15971	3632583	0	True				
ANR	3632629	EqualityExpression	curr -> pid == 0		3632583	0		==			
ANR	3632630	PtrMemberAccess	curr -> pid		3632583	0					
ANR	3632631	Identifier	curr		3632583	0					
ANR	3632632	Identifier	pid		3632583	1					
ANR	3632633	PrimaryExpression	0		3632583	1					
ANR	3632634	CompoundStatement		39:22:1353:1353	3632583	1					
ANR	3632635	ExpressionStatement	* prev_ptr = curr -> next	577:3:15979:16001	3632583	0	True				
ANR	3632636	AssignmentExpression	* prev_ptr = curr -> next		3632583	0		=			
ANR	3632637	UnaryOperationExpression	* prev_ptr		3632583	0					
ANR	3632638	UnaryOperator	*		3632583	0					
ANR	3632639	Identifier	prev_ptr		3632583	1					
ANR	3632640	PtrMemberAccess	curr -> next		3632583	1					
ANR	3632641	Identifier	curr		3632583	0					
ANR	3632642	Identifier	next		3632583	1					
ANR	3632643	Statement	delete	578:3:16006:16011	3632583	1	True				
ANR	3632644	ExpressionStatement	curr	578:10:16013:16017	3632583	2	True				
ANR	3632645	Identifier	curr		3632583	0					
ANR	3632646	ExpressionStatement	curr = * prev_ptr	579:3:16022:16038	3632583	3	True				
ANR	3632647	AssignmentExpression	curr = * prev_ptr		3632583	0		=			
ANR	3632648	Identifier	curr		3632583	0					
ANR	3632649	UnaryOperationExpression	* prev_ptr		3632583	1					
ANR	3632650	UnaryOperator	*		3632583	0					
ANR	3632651	Identifier	prev_ptr		3632583	1					
ANR	3632652	ContinueStatement	continue ;	580:3:16043:16051	3632583	4	True				
ANR	3632653	IdentifierDeclStatement	ProcFamilyMember * pm ;	583:2:16060:16080	3632583	1	True				
ANR	3632654	IdentifierDecl	* pm		3632583	0					
ANR	3632655	IdentifierDeclType	ProcFamilyMember *		3632583	0					
ANR	3632656	Identifier	pm		3632583	1					
ANR	3632657	IdentifierDeclStatement	"int ret = m_member_table . lookup ( curr -> pid , pm ) ;"	584:2:16084:16130	3632583	2	True				
ANR	3632658	IdentifierDecl	"ret = m_member_table . lookup ( curr -> pid , pm )"		3632583	0					
ANR	3632659	IdentifierDeclType	int		3632583	0					
ANR	3632660	Identifier	ret		3632583	1					
ANR	3632661	AssignmentExpression	"ret = m_member_table . lookup ( curr -> pid , pm )"		3632583	2		=			
ANR	3632662	Identifier	ret		3632583	0					
ANR	3632663	CallExpression	"m_member_table . lookup ( curr -> pid , pm )"		3632583	1					
ANR	3632664	Callee	m_member_table . lookup		3632583	0					
ANR	3632665	MemberAccess	m_member_table . lookup		3632583	0					
ANR	3632666	Identifier	m_member_table		3632583	0					
ANR	3632667	Identifier	lookup		3632583	1					
ANR	3632668	ArgumentList	curr -> pid		3632583	1					
ANR	3632669	Argument	curr -> pid		3632583	0					
ANR	3632670	PtrMemberAccess	curr -> pid		3632583	0					
ANR	3632671	Identifier	curr		3632583	0					
ANR	3632672	Identifier	pid		3632583	1					
ANR	3632673	Argument	pm		3632583	1					
ANR	3632674	Identifier	pm		3632583	0					
ANR	3632675	IfStatement	if ( ret != - 1 && pm -> get_proc_info ( ) -> birthday == curr -> birthday )		3632583	3					
ANR	3632676	Condition	ret != - 1 && pm -> get_proc_info ( ) -> birthday == curr -> birthday	585:6:16138:16203	3632583	0	True				
ANR	3632677	AndExpression	ret != - 1 && pm -> get_proc_info ( ) -> birthday == curr -> birthday		3632583	0		&&			
ANR	3632678	EqualityExpression	ret != - 1		3632583	0		!=			
ANR	3632679	Identifier	ret		3632583	0					
ANR	3632680	UnaryOperationExpression	- 1		3632583	1					
ANR	3632681	UnaryOperator	-		3632583	0					
ANR	3632682	PrimaryExpression	1		3632583	1					
ANR	3632683	EqualityExpression	pm -> get_proc_info ( ) -> birthday == curr -> birthday		3632583	1		==			
ANR	3632684	PtrMemberAccess	pm -> get_proc_info ( ) -> birthday		3632583	0					
ANR	3632685	CallExpression	pm -> get_proc_info ( )		3632583	0					
ANR	3632686	Callee	pm -> get_proc_info		3632583	0					
ANR	3632687	PtrMemberAccess	pm -> get_proc_info		3632583	0					
ANR	3632688	Identifier	pm		3632583	0					
ANR	3632689	Identifier	get_proc_info		3632583	1					
ANR	3632690	ArgumentList			3632583	1					
ANR	3632691	Identifier	birthday		3632583	1					
ANR	3632692	PtrMemberAccess	curr -> birthday		3632583	1					
ANR	3632693	Identifier	curr		3632583	0					
ANR	3632694	Identifier	birthday		3632583	1					
ANR	3632695	CompoundStatement		50:2:1587:1587	3632583	1					
ANR	3632696	ExpressionStatement	* prev_ptr = curr -> next	592:3:16373:16395	3632583	0	True				
ANR	3632697	AssignmentExpression	* prev_ptr = curr -> next		3632583	0		=			
ANR	3632698	UnaryOperationExpression	* prev_ptr		3632583	0					
ANR	3632699	UnaryOperator	*		3632583	0					
ANR	3632700	Identifier	prev_ptr		3632583	1					
ANR	3632701	PtrMemberAccess	curr -> next		3632583	1					
ANR	3632702	Identifier	curr		3632583	0					
ANR	3632703	Identifier	next		3632583	1					
ANR	3632704	ExpressionStatement	pm -> still_alive ( curr )	593:3:16400:16421	3632583	1	True				
ANR	3632705	CallExpression	pm -> still_alive ( curr )		3632583	0					
ANR	3632706	Callee	pm -> still_alive		3632583	0					
ANR	3632707	PtrMemberAccess	pm -> still_alive		3632583	0					
ANR	3632708	Identifier	pm		3632583	0					
ANR	3632709	Identifier	still_alive		3632583	1					
ANR	3632710	ArgumentList	curr		3632583	1					
ANR	3632711	Argument	curr		3632583	0					
ANR	3632712	Identifier	curr		3632583	0					
ANR	3632713	ElseStatement	else		3632583	0					
ANR	3632714	CompoundStatement		58:7:1813:1813	3632583	0					
ANR	3632715	ExpressionStatement	prev_ptr = & curr -> next	599:3:16525:16547	3632583	0	True				
ANR	3632716	AssignmentExpression	prev_ptr = & curr -> next		3632583	0		=			
ANR	3632717	Identifier	prev_ptr		3632583	0					
ANR	3632718	UnaryOperationExpression	& curr -> next		3632583	1					
ANR	3632719	UnaryOperator	&		3632583	0					
ANR	3632720	PtrMemberAccess	curr -> next		3632583	1					
ANR	3632721	Identifier	curr		3632583	0					
ANR	3632722	Identifier	next		3632583	1					
ANR	3632723	ExpressionStatement	curr = curr -> next	602:2:16556:16573	3632583	4	True				
ANR	3632724	AssignmentExpression	curr = curr -> next		3632583	0		=			
ANR	3632725	Identifier	curr		3632583	0					
ANR	3632726	PtrMemberAccess	curr -> next		3632583	1					
ANR	3632727	Identifier	curr		3632583	0					
ANR	3632728	Identifier	next		3632583	1					
ANR	3632729	ExpressionStatement	remove_exited_processes ( m_tree )	609:1:16796:16827	3632583	5	True				
ANR	3632730	CallExpression	remove_exited_processes ( m_tree )		3632583	0					
ANR	3632731	Callee	remove_exited_processes		3632583	0					
ANR	3632732	Identifier	remove_exited_processes		3632583	0					
ANR	3632733	ArgumentList	m_tree		3632583	1					
ANR	3632734	Argument	m_tree		3632583	0					
ANR	3632735	Identifier	m_tree		3632583	0					
ANR	3632736	ExpressionStatement	m_everybody_else -> remove_exited_processes ( )	610:1:16830:16873	3632583	6	True				
ANR	3632737	CallExpression	m_everybody_else -> remove_exited_processes ( )		3632583	0					
ANR	3632738	Callee	m_everybody_else -> remove_exited_processes		3632583	0					
ANR	3632739	PtrMemberAccess	m_everybody_else -> remove_exited_processes		3632583	0					
ANR	3632740	Identifier	m_everybody_else		3632583	0					
ANR	3632741	Identifier	remove_exited_processes		3632583	1					
ANR	3632742	ArgumentList			3632583	1					
ANR	3632743	ExpressionStatement	m_pid_tracker -> find_processes ( pi_list )	624:1:17584:17622	3632583	7	True				
ANR	3632744	CallExpression	m_pid_tracker -> find_processes ( pi_list )		3632583	0					
ANR	3632745	Callee	m_pid_tracker -> find_processes		3632583	0					
ANR	3632746	PtrMemberAccess	m_pid_tracker -> find_processes		3632583	0					
ANR	3632747	Identifier	m_pid_tracker		3632583	0					
ANR	3632748	Identifier	find_processes		3632583	1					
ANR	3632749	ArgumentList	pi_list		3632583	1					
ANR	3632750	Argument	pi_list		3632583	0					
ANR	3632751	Identifier	pi_list		3632583	0					
ANR	3632752	IfStatement	if ( m_group_tracker != NULL )		3632583	8					
ANR	3632753	Condition	m_group_tracker != NULL	626:5:17648:17670	3632583	0	True				
ANR	3632754	EqualityExpression	m_group_tracker != NULL		3632583	0		!=			
ANR	3632755	Identifier	m_group_tracker		3632583	0					
ANR	3632756	Identifier	NULL		3632583	1					
ANR	3632757	CompoundStatement		89:30:3052:3052	3632583	1					
ANR	3632758	ExpressionStatement	m_group_tracker -> find_processes ( pi_list )	627:2:17677:17717	3632583	0	True				
ANR	3632759	CallExpression	m_group_tracker -> find_processes ( pi_list )		3632583	0					
ANR	3632760	Callee	m_group_tracker -> find_processes		3632583	0					
ANR	3632761	PtrMemberAccess	m_group_tracker -> find_processes		3632583	0					
ANR	3632762	Identifier	m_group_tracker		3632583	0					
ANR	3632763	Identifier	find_processes		3632583	1					
ANR	3632764	ArgumentList	pi_list		3632583	1					
ANR	3632765	Argument	pi_list		3632583	0					
ANR	3632766	Identifier	pi_list		3632583	0					
ANR	3632767	IfStatement	if ( m_cgroup_tracker != NULL )		3632583	9					
ANR	3632768	Condition	m_cgroup_tracker != NULL	631:5:17766:17789	3632583	0	True				
ANR	3632769	EqualityExpression	m_cgroup_tracker != NULL		3632583	0		!=			
ANR	3632770	Identifier	m_cgroup_tracker		3632583	0					
ANR	3632771	Identifier	NULL		3632583	1					
ANR	3632772	CompoundStatement		94:31:3171:3171	3632583	1					
ANR	3632773	ExpressionStatement	m_cgroup_tracker -> find_processes ( pi_list )	632:2:17796:17837	3632583	0	True				
ANR	3632774	CallExpression	m_cgroup_tracker -> find_processes ( pi_list )		3632583	0					
ANR	3632775	Callee	m_cgroup_tracker -> find_processes		3632583	0					
ANR	3632776	PtrMemberAccess	m_cgroup_tracker -> find_processes		3632583	0					
ANR	3632777	Identifier	m_cgroup_tracker		3632583	0					
ANR	3632778	Identifier	find_processes		3632583	1					
ANR	3632779	ArgumentList	pi_list		3632583	1					
ANR	3632780	Argument	pi_list		3632583	0					
ANR	3632781	Identifier	pi_list		3632583	0					
ANR	3632782	ExpressionStatement	m_login_tracker -> find_processes ( pi_list )	635:1:17850:17890	3632583	10	True				
ANR	3632783	CallExpression	m_login_tracker -> find_processes ( pi_list )		3632583	0					
ANR	3632784	Callee	m_login_tracker -> find_processes		3632583	0					
ANR	3632785	PtrMemberAccess	m_login_tracker -> find_processes		3632583	0					
ANR	3632786	Identifier	m_login_tracker		3632583	0					
ANR	3632787	Identifier	find_processes		3632583	1					
ANR	3632788	ArgumentList	pi_list		3632583	1					
ANR	3632789	Argument	pi_list		3632583	0					
ANR	3632790	Identifier	pi_list		3632583	0					
ANR	3632791	ExpressionStatement	m_environment_tracker -> find_processes ( pi_list )	636:1:17893:17939	3632583	11	True				
ANR	3632792	CallExpression	m_environment_tracker -> find_processes ( pi_list )		3632583	0					
ANR	3632793	Callee	m_environment_tracker -> find_processes		3632583	0					
ANR	3632794	PtrMemberAccess	m_environment_tracker -> find_processes		3632583	0					
ANR	3632795	Identifier	m_environment_tracker		3632583	0					
ANR	3632796	Identifier	find_processes		3632583	1					
ANR	3632797	ArgumentList	pi_list		3632583	1					
ANR	3632798	Argument	pi_list		3632583	0					
ANR	3632799	Identifier	pi_list		3632583	0					
ANR	3632800	ExpressionStatement	m_parent_tracker -> find_processes ( pi_list )	637:1:17942:17983	3632583	12	True				
ANR	3632801	CallExpression	m_parent_tracker -> find_processes ( pi_list )		3632583	0					
ANR	3632802	Callee	m_parent_tracker -> find_processes		3632583	0					
ANR	3632803	PtrMemberAccess	m_parent_tracker -> find_processes		3632583	0					
ANR	3632804	Identifier	m_parent_tracker		3632583	0					
ANR	3632805	Identifier	find_processes		3632583	1					
ANR	3632806	ArgumentList	pi_list		3632583	1					
ANR	3632807	Argument	pi_list		3632583	0					
ANR	3632808	Identifier	pi_list		3632583	0					
ANR	3632809	ExpressionStatement	curr = pi_list	644:1:18228:18242	3632583	13	True				
ANR	3632810	AssignmentExpression	curr = pi_list		3632583	0		=			
ANR	3632811	Identifier	curr		3632583	0					
ANR	3632812	Identifier	pi_list		3632583	1					
ANR	3632813	WhileStatement	while ( curr != NULL )		3632583	14					
ANR	3632814	Condition	curr != NULL	645:8:18252:18263	3632583	0	True				
ANR	3632815	EqualityExpression	curr != NULL		3632583	0		!=			
ANR	3632816	Identifier	curr		3632583	0					
ANR	3632817	Identifier	NULL		3632583	1					
ANR	3632818	CompoundStatement		110:2:3674:3721	3632583	1					
ANR	3632819	IdentifierDeclStatement	ProcFamilyMember * pfm ;	646:2:18270:18291	3632583	0	True				
ANR	3632820	IdentifierDecl	* pfm		3632583	0					
ANR	3632821	IdentifierDeclType	ProcFamilyMember *		3632583	0					
ANR	3632822	Identifier	pfm		3632583	1					
ANR	3632823	IdentifierDeclStatement	"int ret = m_member_table . lookup ( curr -> pid , pfm ) ;"	647:2:18295:18342	3632583	1	True				
ANR	3632824	IdentifierDecl	"ret = m_member_table . lookup ( curr -> pid , pfm )"		3632583	0					
ANR	3632825	IdentifierDeclType	int		3632583	0					
ANR	3632826	Identifier	ret		3632583	1					
ANR	3632827	AssignmentExpression	"ret = m_member_table . lookup ( curr -> pid , pfm )"		3632583	2		=			
ANR	3632828	Identifier	ret		3632583	0					
ANR	3632829	CallExpression	"m_member_table . lookup ( curr -> pid , pfm )"		3632583	1					
ANR	3632830	Callee	m_member_table . lookup		3632583	0					
ANR	3632831	MemberAccess	m_member_table . lookup		3632583	0					
ANR	3632832	Identifier	m_member_table		3632583	0					
ANR	3632833	Identifier	lookup		3632583	1					
ANR	3632834	ArgumentList	curr -> pid		3632583	1					
ANR	3632835	Argument	curr -> pid		3632583	0					
ANR	3632836	PtrMemberAccess	curr -> pid		3632583	0					
ANR	3632837	Identifier	curr		3632583	0					
ANR	3632838	Identifier	pid		3632583	1					
ANR	3632839	Argument	pfm		3632583	1					
ANR	3632840	Identifier	pfm		3632583	0					
ANR	3632841	IfStatement	if ( ret == - 1 )		3632583	2					
ANR	3632842	Condition	ret == - 1	648:6:18350:18358	3632583	0	True				
ANR	3632843	EqualityExpression	ret == - 1		3632583	0		==			
ANR	3632844	Identifier	ret		3632583	0					
ANR	3632845	UnaryOperationExpression	- 1		3632583	1					
ANR	3632846	UnaryOperator	-		3632583	0					
ANR	3632847	PrimaryExpression	1		3632583	1					
ANR	3632848	CompoundStatement		111:17:3740:3740	3632583	1					
ANR	3632849	ExpressionStatement	"dprintf ( D_ALWAYS , ""no methods have determined process %u to be in a monitored family\\n"" , curr -> pid )"	649:3:18366:18487	3632583	0	True				
ANR	3632850	CallExpression	"dprintf ( D_ALWAYS , ""no methods have determined process %u to be in a monitored family\\n"" , curr -> pid )"		3632583	0					
ANR	3632851	Callee	dprintf		3632583	0					
ANR	3632852	Identifier	dprintf		3632583	0					
ANR	3632853	ArgumentList	D_ALWAYS		3632583	1					
ANR	3632854	Argument	D_ALWAYS		3632583	0					
ANR	3632855	Identifier	D_ALWAYS		3632583	0					
ANR	3632856	Argument	"""no methods have determined process %u to be in a monitored family\\n"""		3632583	1					
ANR	3632857	PrimaryExpression	"""no methods have determined process %u to be in a monitored family\\n"""		3632583	0					
ANR	3632858	Argument	curr -> pid		3632583	2					
ANR	3632859	PtrMemberAccess	curr -> pid		3632583	0					
ANR	3632860	Identifier	curr		3632583	0					
ANR	3632861	Identifier	pid		3632583	1					
ANR	3632862	ExpressionStatement	m_everybody_else -> add_member ( curr )	652:3:18492:18526	3632583	1	True				
ANR	3632863	CallExpression	m_everybody_else -> add_member ( curr )		3632583	0					
ANR	3632864	Callee	m_everybody_else -> add_member		3632583	0					
ANR	3632865	PtrMemberAccess	m_everybody_else -> add_member		3632583	0					
ANR	3632866	Identifier	m_everybody_else		3632583	0					
ANR	3632867	Identifier	add_member		3632583	1					
ANR	3632868	ArgumentList	curr		3632583	1					
ANR	3632869	Argument	curr		3632583	0					
ANR	3632870	Identifier	curr		3632583	0					
ANR	3632871	ExpressionStatement	curr = curr -> next	654:2:18534:18551	3632583	3	True				
ANR	3632872	AssignmentExpression	curr = curr -> next		3632583	0		=			
ANR	3632873	Identifier	curr		3632583	0					
ANR	3632874	PtrMemberAccess	curr -> next		3632583	1					
ANR	3632875	Identifier	curr		3632583	0					
ANR	3632876	Identifier	next		3632583	1					
ANR	3632877	ExpressionStatement	delete_unwatched_families ( m_tree )	659:1:18616:18649	3632583	15	True				
ANR	3632878	CallExpression	delete_unwatched_families ( m_tree )		3632583	0					
ANR	3632879	Callee	delete_unwatched_families		3632583	0					
ANR	3632880	Identifier	delete_unwatched_families		3632583	0					
ANR	3632881	ArgumentList	m_tree		3632583	1					
ANR	3632882	Argument	m_tree		3632583	0					
ANR	3632883	Identifier	m_tree		3632583	0					
ANR	3632884	ExpressionStatement	update_max_image_sizes ( m_tree )	664:1:18739:18769	3632583	16	True				
ANR	3632885	CallExpression	update_max_image_sizes ( m_tree )		3632583	0					
ANR	3632886	Callee	update_max_image_sizes		3632583	0					
ANR	3632887	Identifier	update_max_image_sizes		3632583	0					
ANR	3632888	ArgumentList	m_tree		3632583	1					
ANR	3632889	Argument	m_tree		3632583	0					
ANR	3632890	Identifier	m_tree		3632583	0					
ANR	3632891	ExpressionStatement	"dprintf ( D_ALWAYS , ""...snapshot complete\\n"" )"	666:1:18773:18816	3632583	17	True				
ANR	3632892	CallExpression	"dprintf ( D_ALWAYS , ""...snapshot complete\\n"" )"		3632583	0					
ANR	3632893	Callee	dprintf		3632583	0					
ANR	3632894	Identifier	dprintf		3632583	0					
ANR	3632895	ArgumentList	D_ALWAYS		3632583	1					
ANR	3632896	Argument	D_ALWAYS		3632583	0					
ANR	3632897	Identifier	D_ALWAYS		3632583	0					
ANR	3632898	Argument	"""...snapshot complete\\n"""		3632583	1					
ANR	3632899	PrimaryExpression	"""...snapshot complete\\n"""		3632583	0					
ANR	3632900	ReturnType	void		3632583	1					
ANR	3632901	Identifier	ProcFamilyMonitor :: snapshot		3632583	2					
ANR	3632902	ParameterList			3632583	3					
ANR	3632903	CFGEntryNode	ENTRY		3632583		True				
ANR	3632904	CFGExitNode	EXIT		3632583		True				
ANR	3632905	Symbol	m_tree		3632583						
ANR	3632906	Symbol	curr -> pid		3632583						
ANR	3632907	Symbol	& pi_list		3632583						
ANR	3632908	Symbol	m_group_tracker		3632583						
ANR	3632909	Symbol	curr -> next		3632583						
ANR	3632910	Symbol	m_login_tracker		3632583						
ANR	3632911	Symbol	m_member_table		3632583						
ANR	3632912	Symbol	ProcAPI :: getProcInfoList		3632583						
ANR	3632913	Symbol	curr -> birthday		3632583						
ANR	3632914	Symbol	pm -> get_proc_info		3632583						
ANR	3632915	Symbol	& curr -> next		3632583						
ANR	3632916	Symbol	curr		3632583						
ANR	3632917	Symbol	ret		3632583						
ANR	3632918	Symbol	* pm		3632583						
ANR	3632919	Symbol	* pm -> get_proc_info		3632583						
ANR	3632920	Symbol	NULL		3632583						
ANR	3632921	Symbol	D_ALWAYS		3632583						
ANR	3632922	Symbol	* * pm		3632583						
ANR	3632923	Symbol	prev_ptr		3632583						
ANR	3632924	Symbol	pi_list		3632583						
ANR	3632925	Symbol	* prev_ptr		3632583						
ANR	3632926	Symbol	* curr		3632583						
ANR	3632927	Symbol	m_member_table . lookup		3632583						
ANR	3632928	Symbol	pfm		3632583						
ANR	3632929	Symbol	m_everybody_else		3632583						
ANR	3632930	Symbol	m_parent_tracker		3632583						
ANR	3632931	Symbol	m_environment_tracker		3632583						
ANR	3632932	Symbol	pm -> get_proc_info ( ) -> birthday		3632583						
ANR	3632933	Symbol	m_cgroup_tracker		3632583						
ANR	3632934	Symbol	pm		3632583						
ANR	3632935	Symbol	m_pid_tracker		3632583						
ANR	3632936	Function	ProcFamilyMonitor :: add_member	669:0:18821:18976							
ANR	3632937	FunctionDef	ProcFamilyMonitor :: add_member (ProcFamilyMember * member)		3632936	0					
ANR	3632938	CompoundStatement		671:0:18882:18976	3632936	0					
ANR	3632939	IdentifierDeclStatement	"int ret = m_member_table . insert ( member -> get_proc_info ( ) -> pid , member ) ;"	672:1:18885:18954	3632936	0	True				
ANR	3632940	IdentifierDecl	"ret = m_member_table . insert ( member -> get_proc_info ( ) -> pid , member )"		3632936	0					
ANR	3632941	IdentifierDeclType	int		3632936	0					
ANR	3632942	Identifier	ret		3632936	1					
ANR	3632943	AssignmentExpression	"ret = m_member_table . insert ( member -> get_proc_info ( ) -> pid , member )"		3632936	2		=			
ANR	3632944	Identifier	ret		3632936	0					
ANR	3632945	CallExpression	"m_member_table . insert ( member -> get_proc_info ( ) -> pid , member )"		3632936	1					
ANR	3632946	Callee	m_member_table . insert		3632936	0					
ANR	3632947	MemberAccess	m_member_table . insert		3632936	0					
ANR	3632948	Identifier	m_member_table		3632936	0					
ANR	3632949	Identifier	insert		3632936	1					
ANR	3632950	ArgumentList	member -> get_proc_info ( ) -> pid		3632936	1					
ANR	3632951	Argument	member -> get_proc_info ( ) -> pid		3632936	0					
ANR	3632952	PtrMemberAccess	member -> get_proc_info ( ) -> pid		3632936	0					
ANR	3632953	CallExpression	member -> get_proc_info ( )		3632936	0					
ANR	3632954	Callee	member -> get_proc_info		3632936	0					
ANR	3632955	PtrMemberAccess	member -> get_proc_info		3632936	0					
ANR	3632956	Identifier	member		3632936	0					
ANR	3632957	Identifier	get_proc_info		3632936	1					
ANR	3632958	ArgumentList			3632936	1					
ANR	3632959	Identifier	pid		3632936	1					
ANR	3632960	Argument	member		3632936	1					
ANR	3632961	Identifier	member		3632936	0					
ANR	3632962	ExpressionStatement	ASSERT ( ret != - 1 )	673:1:18957:18974	3632936	1	True				
ANR	3632963	CallExpression	ASSERT ( ret != - 1 )		3632936	0					
ANR	3632964	Callee	ASSERT		3632936	0					
ANR	3632965	Identifier	ASSERT		3632936	0					
ANR	3632966	ArgumentList	ret != - 1		3632936	1					
ANR	3632967	Argument	ret != - 1		3632936	0					
ANR	3632968	EqualityExpression	ret != - 1		3632936	0		!=			
ANR	3632969	Identifier	ret		3632936	0					
ANR	3632970	UnaryOperationExpression	- 1		3632936	1					
ANR	3632971	UnaryOperator	-		3632936	0					
ANR	3632972	PrimaryExpression	1		3632936	1					
ANR	3632973	ReturnType	void		3632936	1					
ANR	3632974	Identifier	ProcFamilyMonitor :: add_member		3632936	2					
ANR	3632975	ParameterList	ProcFamilyMember * member		3632936	3					
ANR	3632976	Parameter	ProcFamilyMember * member	670:30:18856:18879	3632936	0	True				
ANR	3632977	ParameterType	ProcFamilyMember *		3632936	0					
ANR	3632978	Identifier	member		3632936	1					
ANR	3632979	CFGEntryNode	ENTRY		3632936		True				
ANR	3632980	CFGExitNode	EXIT		3632936		True				
ANR	3632981	Symbol	ret		3632936						
ANR	3632982	Symbol	member -> get_proc_info		3632936						
ANR	3632983	Symbol	* * member		3632936						
ANR	3632984	Symbol	m_member_table		3632936						
ANR	3632985	Symbol	member		3632936						
ANR	3632986	Symbol	m_member_table . insert		3632936						
ANR	3632987	Symbol	* member -> get_proc_info		3632936						
ANR	3632988	Symbol	* member		3632936						
ANR	3632989	Symbol	member -> get_proc_info ( ) -> pid		3632936						
ANR	3632990	Function	ProcFamilyMonitor :: remove_member	676:0:18979:19129							
ANR	3632991	FunctionDef	ProcFamilyMonitor :: remove_member (ProcFamilyMember * member)		3632990	0					
ANR	3632992	CompoundStatement		678:0:19043:19129	3632990	0					
ANR	3632993	IdentifierDeclStatement	int ret = m_member_table . remove ( member -> get_proc_info ( ) -> pid ) ;	679:1:19046:19107	3632990	0	True				
ANR	3632994	IdentifierDecl	ret = m_member_table . remove ( member -> get_proc_info ( ) -> pid )		3632990	0					
ANR	3632995	IdentifierDeclType	int		3632990	0					
ANR	3632996	Identifier	ret		3632990	1					
ANR	3632997	AssignmentExpression	ret = m_member_table . remove ( member -> get_proc_info ( ) -> pid )		3632990	2		=			
ANR	3632998	Identifier	ret		3632990	0					
ANR	3632999	CallExpression	m_member_table . remove ( member -> get_proc_info ( ) -> pid )		3632990	1					
ANR	3633000	Callee	m_member_table . remove		3632990	0					
ANR	3633001	MemberAccess	m_member_table . remove		3632990	0					
ANR	3633002	Identifier	m_member_table		3632990	0					
ANR	3633003	Identifier	remove		3632990	1					
ANR	3633004	ArgumentList	member -> get_proc_info ( ) -> pid		3632990	1					
ANR	3633005	Argument	member -> get_proc_info ( ) -> pid		3632990	0					
ANR	3633006	PtrMemberAccess	member -> get_proc_info ( ) -> pid		3632990	0					
ANR	3633007	CallExpression	member -> get_proc_info ( )		3632990	0					
ANR	3633008	Callee	member -> get_proc_info		3632990	0					
ANR	3633009	PtrMemberAccess	member -> get_proc_info		3632990	0					
ANR	3633010	Identifier	member		3632990	0					
ANR	3633011	Identifier	get_proc_info		3632990	1					
ANR	3633012	ArgumentList			3632990	1					
ANR	3633013	Identifier	pid		3632990	1					
ANR	3633014	ExpressionStatement	ASSERT ( ret != - 1 )	680:1:19110:19127	3632990	1	True				
ANR	3633015	CallExpression	ASSERT ( ret != - 1 )		3632990	0					
ANR	3633016	Callee	ASSERT		3632990	0					
ANR	3633017	Identifier	ASSERT		3632990	0					
ANR	3633018	ArgumentList	ret != - 1		3632990	1					
ANR	3633019	Argument	ret != - 1		3632990	0					
ANR	3633020	EqualityExpression	ret != - 1		3632990	0		!=			
ANR	3633021	Identifier	ret		3632990	0					
ANR	3633022	UnaryOperationExpression	- 1		3632990	1					
ANR	3633023	UnaryOperator	-		3632990	0					
ANR	3633024	PrimaryExpression	1		3632990	1					
ANR	3633025	ReturnType	void		3632990	1					
ANR	3633026	Identifier	ProcFamilyMonitor :: remove_member		3632990	2					
ANR	3633027	ParameterList	ProcFamilyMember * member		3632990	3					
ANR	3633028	Parameter	ProcFamilyMember * member	677:33:19017:19040	3632990	0	True				
ANR	3633029	ParameterType	ProcFamilyMember *		3632990	0					
ANR	3633030	Identifier	member		3632990	1					
ANR	3633031	CFGEntryNode	ENTRY		3632990		True				
ANR	3633032	CFGExitNode	EXIT		3632990		True				
ANR	3633033	Symbol	ret		3632990						
ANR	3633034	Symbol	member -> get_proc_info		3632990						
ANR	3633035	Symbol	* * member		3632990						
ANR	3633036	Symbol	m_member_table		3632990						
ANR	3633037	Symbol	member		3632990						
ANR	3633038	Symbol	* member -> get_proc_info		3632990						
ANR	3633039	Symbol	* member		3632990						
ANR	3633040	Symbol	member -> get_proc_info ( ) -> pid		3632990						
ANR	3633041	Symbol	m_member_table . remove		3632990						
ANR	3633042	Function	ProcFamilyMonitor :: lookup_member	683:0:19132:19295							
ANR	3633043	FunctionDef	ProcFamilyMonitor :: lookup_member (pid_t pid)		3633042	0					
ANR	3633044	CompoundStatement		685:0:19194:19295	3633042	0					
ANR	3633045	IdentifierDeclStatement	ProcFamilyMember * pm ;	686:1:19197:19217	3633042	0	True				
ANR	3633046	IdentifierDecl	* pm		3633042	0					
ANR	3633047	IdentifierDeclType	ProcFamilyMember *		3633042	0					
ANR	3633048	Identifier	pm		3633042	1					
ANR	3633049	IdentifierDeclStatement	"int ret = m_member_table . lookup ( pid , pm ) ;"	687:1:19220:19260	3633042	1	True				
ANR	3633050	IdentifierDecl	"ret = m_member_table . lookup ( pid , pm )"		3633042	0					
ANR	3633051	IdentifierDeclType	int		3633042	0					
ANR	3633052	Identifier	ret		3633042	1					
ANR	3633053	AssignmentExpression	"ret = m_member_table . lookup ( pid , pm )"		3633042	2		=			
ANR	3633054	Identifier	ret		3633042	0					
ANR	3633055	CallExpression	"m_member_table . lookup ( pid , pm )"		3633042	1					
ANR	3633056	Callee	m_member_table . lookup		3633042	0					
ANR	3633057	MemberAccess	m_member_table . lookup		3633042	0					
ANR	3633058	Identifier	m_member_table		3633042	0					
ANR	3633059	Identifier	lookup		3633042	1					
ANR	3633060	ArgumentList	pid		3633042	1					
ANR	3633061	Argument	pid		3633042	0					
ANR	3633062	Identifier	pid		3633042	0					
ANR	3633063	Argument	pm		3633042	1					
ANR	3633064	Identifier	pm		3633042	0					
ANR	3633065	ReturnStatement	return ( ret != - 1 ) ? pm : NULL ;	688:1:19263:19293	3633042	2	True				
ANR	3633066	ConditionalExpression	( ret != - 1 ) ? pm : NULL		3633042	0					
ANR	3633067	Condition	ret != - 1		3633042	0					
ANR	3633068	EqualityExpression	ret != - 1		3633042	0		!=			
ANR	3633069	Identifier	ret		3633042	0					
ANR	3633070	UnaryOperationExpression	- 1		3633042	1					
ANR	3633071	UnaryOperator	-		3633042	0					
ANR	3633072	PrimaryExpression	1		3633042	1					
ANR	3633073	Identifier	pm		3633042	1					
ANR	3633074	Identifier	NULL		3633042	2					
ANR	3633075	ReturnType	ProcFamilyMember *		3633042	1					
ANR	3633076	Identifier	ProcFamilyMonitor :: lookup_member		3633042	2					
ANR	3633077	ParameterList	pid_t pid		3633042	3					
ANR	3633078	Parameter	pid_t pid	684:33:19183:19191	3633042	0	True				
ANR	3633079	ParameterType	pid_t		3633042	0					
ANR	3633080	Identifier	pid		3633042	1					
ANR	3633081	CFGEntryNode	ENTRY		3633042		True				
ANR	3633082	CFGExitNode	EXIT		3633042		True				
ANR	3633083	Symbol	ret		3633042						
ANR	3633084	Symbol	NULL		3633042						
ANR	3633085	Symbol	m_member_table . lookup		3633042						
ANR	3633086	Symbol	m_member_table		3633042						
ANR	3633087	Symbol	pid		3633042						
ANR	3633088	Symbol	pm		3633042						
ANR	3633089	Function	ProcFamilyMonitor :: add_member_to_family	691:0:19298:21194							
ANR	3633090	FunctionDef	"ProcFamilyMonitor :: add_member_to_family (ProcFamily * pf , procInfo * pi , const char * method_str)"		3633089	0					
ANR	3633091	CompoundStatement		695:0:19477:21194	3633089	0					
ANR	3633092	IdentifierDeclStatement	ProcFamilyMember * pfm ;	698:1:19548:19569	3633089	0	True				
ANR	3633093	IdentifierDecl	* pfm		3633089	0					
ANR	3633094	IdentifierDeclType	ProcFamilyMember *		3633089	0					
ANR	3633095	Identifier	pfm		3633089	1					
ANR	3633096	IdentifierDeclStatement	"int ret = m_member_table . lookup ( pi -> pid , pfm ) ;"	699:1:19572:19617	3633089	1	True				
ANR	3633097	IdentifierDecl	"ret = m_member_table . lookup ( pi -> pid , pfm )"		3633089	0					
ANR	3633098	IdentifierDeclType	int		3633089	0					
ANR	3633099	Identifier	ret		3633089	1					
ANR	3633100	AssignmentExpression	"ret = m_member_table . lookup ( pi -> pid , pfm )"		3633089	2		=			
ANR	3633101	Identifier	ret		3633089	0					
ANR	3633102	CallExpression	"m_member_table . lookup ( pi -> pid , pfm )"		3633089	1					
ANR	3633103	Callee	m_member_table . lookup		3633089	0					
ANR	3633104	MemberAccess	m_member_table . lookup		3633089	0					
ANR	3633105	Identifier	m_member_table		3633089	0					
ANR	3633106	Identifier	lookup		3633089	1					
ANR	3633107	ArgumentList	pi -> pid		3633089	1					
ANR	3633108	Argument	pi -> pid		3633089	0					
ANR	3633109	PtrMemberAccess	pi -> pid		3633089	0					
ANR	3633110	Identifier	pi		3633089	0					
ANR	3633111	Identifier	pid		3633089	1					
ANR	3633112	Argument	pfm		3633089	1					
ANR	3633113	Identifier	pfm		3633089	0					
ANR	3633114	IfStatement	if ( ret == - 1 )		3633089	2					
ANR	3633115	Condition	ret == - 1	700:5:19624:19632	3633089	0	True				
ANR	3633116	EqualityExpression	ret == - 1		3633089	0		==			
ANR	3633117	Identifier	ret		3633089	0					
ANR	3633118	UnaryOperationExpression	- 1		3633089	1					
ANR	3633119	UnaryOperator	-		3633089	0					
ANR	3633120	PrimaryExpression	1		3633089	1					
ANR	3633121	CompoundStatement		6:16:157:157	3633089	1					
ANR	3633122	ExpressionStatement	"dprintf ( D_ALWAYS , ""method %s: found family %u for process %u\\n"" , method_str , pf -> get_root_pid ( ) , pi -> pid )"	705:2:19737:19882	3633089	0	True				
ANR	3633123	CallExpression	"dprintf ( D_ALWAYS , ""method %s: found family %u for process %u\\n"" , method_str , pf -> get_root_pid ( ) , pi -> pid )"		3633089	0					
ANR	3633124	Callee	dprintf		3633089	0					
ANR	3633125	Identifier	dprintf		3633089	0					
ANR	3633126	ArgumentList	D_ALWAYS		3633089	1					
ANR	3633127	Argument	D_ALWAYS		3633089	0					
ANR	3633128	Identifier	D_ALWAYS		3633089	0					
ANR	3633129	Argument	"""method %s: found family %u for process %u\\n"""		3633089	1					
ANR	3633130	PrimaryExpression	"""method %s: found family %u for process %u\\n"""		3633089	0					
ANR	3633131	Argument	method_str		3633089	2					
ANR	3633132	Identifier	method_str		3633089	0					
ANR	3633133	Argument	pf -> get_root_pid ( )		3633089	3					
ANR	3633134	CallExpression	pf -> get_root_pid ( )		3633089	0					
ANR	3633135	Callee	pf -> get_root_pid		3633089	0					
ANR	3633136	PtrMemberAccess	pf -> get_root_pid		3633089	0					
ANR	3633137	Identifier	pf		3633089	0					
ANR	3633138	Identifier	get_root_pid		3633089	1					
ANR	3633139	ArgumentList			3633089	1					
ANR	3633140	Argument	pi -> pid		3633089	4					
ANR	3633141	PtrMemberAccess	pi -> pid		3633089	0					
ANR	3633142	Identifier	pi		3633089	0					
ANR	3633143	Identifier	pid		3633089	1					
ANR	3633144	ExpressionStatement	pf -> add_member ( pi )	710:2:19886:19904	3633089	1	True				
ANR	3633145	CallExpression	pf -> add_member ( pi )		3633089	0					
ANR	3633146	Callee	pf -> add_member		3633089	0					
ANR	3633147	PtrMemberAccess	pf -> add_member		3633089	0					
ANR	3633148	Identifier	pf		3633089	0					
ANR	3633149	Identifier	add_member		3633089	1					
ANR	3633150	ArgumentList	pi		3633089	1					
ANR	3633151	Argument	pi		3633089	0					
ANR	3633152	Identifier	pi		3633089	0					
ANR	3633153	ReturnStatement	return true ;	711:2:19908:19919	3633089	2	True				
ANR	3633154	Identifier	true		3633089	0					
ANR	3633155	ElseStatement	else		3633089	0					
ANR	3633156	IfStatement	if ( pf != pfm -> get_proc_family ( ) )		3633089	0					
ANR	3633157	Condition	pf != pfm -> get_proc_family ( )	713:10:19934:19961	3633089	0	True				
ANR	3633158	EqualityExpression	pf != pfm -> get_proc_family ( )		3633089	0		!=			
ANR	3633159	Identifier	pf		3633089	0					
ANR	3633160	CallExpression	pfm -> get_proc_family ( )		3633089	1					
ANR	3633161	Callee	pfm -> get_proc_family		3633089	0					
ANR	3633162	PtrMemberAccess	pfm -> get_proc_family		3633089	0					
ANR	3633163	Identifier	pfm		3633089	0					
ANR	3633164	Identifier	get_proc_family		3633089	1					
ANR	3633165	ArgumentList			3633089	1					
ANR	3633166	CompoundStatement		26:2:701:760	3633089	1					
ANR	3633167	IdentifierDeclStatement	Tree < ProcFamily * > * node = lookup_family ( pf -> get_root_pid ( ) ) ;	720:2:20179:20238	3633089	0	True				
ANR	3633168	IdentifierDecl	* node = lookup_family ( pf -> get_root_pid ( ) )		3633089	0					
ANR	3633169	IdentifierDeclType	Tree < ProcFamily * > *		3633089	0					
ANR	3633170	Identifier	node		3633089	1					
ANR	3633171	AssignmentExpression	* node = lookup_family ( pf -> get_root_pid ( ) )		3633089	2		=			
ANR	3633172	Identifier	node		3633089	0					
ANR	3633173	CallExpression	lookup_family ( pf -> get_root_pid ( ) )		3633089	1					
ANR	3633174	Callee	lookup_family		3633089	0					
ANR	3633175	Identifier	lookup_family		3633089	0					
ANR	3633176	ArgumentList	pf -> get_root_pid ( )		3633089	1					
ANR	3633177	Argument	pf -> get_root_pid ( )		3633089	0					
ANR	3633178	CallExpression	pf -> get_root_pid ( )		3633089	0					
ANR	3633179	Callee	pf -> get_root_pid		3633089	0					
ANR	3633180	PtrMemberAccess	pf -> get_root_pid		3633089	0					
ANR	3633181	Identifier	pf		3633089	0					
ANR	3633182	Identifier	get_root_pid		3633089	1					
ANR	3633183	ArgumentList			3633089	1					
ANR	3633184	ExpressionStatement	ASSERT ( node != NULL )	721:2:20242:20262	3633089	1	True				
ANR	3633185	CallExpression	ASSERT ( node != NULL )		3633089	0					
ANR	3633186	Callee	ASSERT		3633089	0					
ANR	3633187	Identifier	ASSERT		3633089	0					
ANR	3633188	ArgumentList	node != NULL		3633089	1					
ANR	3633189	Argument	node != NULL		3633089	0					
ANR	3633190	EqualityExpression	node != NULL		3633089	0		!=			
ANR	3633191	Identifier	node		3633089	0					
ANR	3633192	Identifier	NULL		3633089	1					
ANR	3633193	WhileStatement	while ( node -> get_parent ( ) != NULL )		3633089	2					
ANR	3633194	Condition	node -> get_parent ( ) != NULL	722:8:20272:20297	3633089	0	True				
ANR	3633195	EqualityExpression	node -> get_parent ( ) != NULL		3633089	0		!=			
ANR	3633196	CallExpression	node -> get_parent ( )		3633089	0					
ANR	3633197	Callee	node -> get_parent		3633089	0					
ANR	3633198	PtrMemberAccess	node -> get_parent		3633089	0					
ANR	3633199	Identifier	node		3633089	0					
ANR	3633200	Identifier	get_parent		3633089	1					
ANR	3633201	ArgumentList			3633089	1					
ANR	3633202	Identifier	NULL		3633089	1					
ANR	3633203	CompoundStatement		28:36:822:822	3633089	1					
ANR	3633204	ExpressionStatement	node = node -> get_parent ( )	723:3:20305:20330	3633089	0	True				
ANR	3633205	AssignmentExpression	node = node -> get_parent ( )		3633089	0		=			
ANR	3633206	Identifier	node		3633089	0					
ANR	3633207	CallExpression	node -> get_parent ( )		3633089	1					
ANR	3633208	Callee	node -> get_parent		3633089	0					
ANR	3633209	PtrMemberAccess	node -> get_parent		3633089	0					
ANR	3633210	Identifier	node		3633089	0					
ANR	3633211	Identifier	get_parent		3633089	1					
ANR	3633212	ArgumentList			3633089	1					
ANR	3633213	IfStatement	if ( node -> get_data ( ) == pfm -> get_proc_family ( ) )		3633089	1					
ANR	3633214	Condition	node -> get_data ( ) == pfm -> get_proc_family ( )	724:7:20339:20380	3633089	0	True				
ANR	3633215	EqualityExpression	node -> get_data ( ) == pfm -> get_proc_family ( )		3633089	0		==			
ANR	3633216	CallExpression	node -> get_data ( )		3633089	0					
ANR	3633217	Callee	node -> get_data		3633089	0					
ANR	3633218	PtrMemberAccess	node -> get_data		3633089	0					
ANR	3633219	Identifier	node		3633089	0					
ANR	3633220	Identifier	get_data		3633089	1					
ANR	3633221	ArgumentList			3633089	1					
ANR	3633222	CallExpression	pfm -> get_proc_family ( )		3633089	1					
ANR	3633223	Callee	pfm -> get_proc_family		3633089	0					
ANR	3633224	PtrMemberAccess	pfm -> get_proc_family		3633089	0					
ANR	3633225	Identifier	pfm		3633089	0					
ANR	3633226	Identifier	get_proc_family		3633089	1					
ANR	3633227	ArgumentList			3633089	1					
ANR	3633228	CompoundStatement		30:51:905:905	3633089	1					
ANR	3633229	Statement	dprintf	725:4:20389:20395	3633089	0	True				
ANR	3633230	Statement	(	725:11:20396:20396	3633089	1	True				
ANR	3633231	Statement	D_ALWAYS	725:12:20397:20404	3633089	2	True				
ANR	3633232	Statement	","	725:20:20405:20405	3633089	3	True				
ANR	3633233	Statement	"""method %s: found family %u for process %u """	726:12:20419:20462	3633089	4	True				
ANR	3633234	Statement	"""(more specific than current family %u)\\n"""	727:13:20477:20518	3633089	5	True				
ANR	3633235	Statement	","	727:55:20519:20519	3633089	6	True				
ANR	3633236	Statement	method_str	728:12:20533:20542	3633089	7	True				
ANR	3633237	Statement	","	728:22:20543:20543	3633089	8	True				
ANR	3633238	Statement	pf	729:12:20557:20558	3633089	9	True				
ANR	3633239	Statement	->	729:14:20559:20560	3633089	10	True				
ANR	3633240	Statement	get_root_pid	729:16:20561:20572	3633089	11	True				
ANR	3633241	Statement	(	729:28:20573:20573	3633089	12	True				
ANR	3633242	Statement	)	729:29:20574:20574	3633089	13	True				
ANR	3633243	Statement	","	729:30:20575:20575	3633089	14	True				
ANR	3633244	Statement	pi	730:12:20589:20590	3633089	15	True				
ANR	3633245	Statement	->	730:14:20591:20592	3633089	16	True				
ANR	3633246	Statement	pid	730:16:20593:20595	3633089	17	True				
ANR	3633247	Statement	","	730:19:20596:20596	3633089	18	True				
ANR	3633248	Statement	pfm	731:12:20610:20612	3633089	19	True				
ANR	3633249	Statement	->	731:15:20613:20614	3633089	20	True				
ANR	3633250	Statement	get_proc_family	731:17:20615:20629	3633089	21	True				
ANR	3633251	Statement	(	731:32:20630:20630	3633089	22	True				
ANR	3633252	Statement	)	731:33:20631:20631	3633089	23	True				
ANR	3633253	Statement	->	731:34:20632:20633	3633089	24	True				
ANR	3633254	Statement	get_root_pid	731:36:20634:20645	3633089	25	True				
ANR	3633255	Statement	(	731:48:20646:20646	3633089	26	True				
ANR	3633256	Statement	)	731:49:20647:20647	3633089	27	True				
ANR	3633257	Statement	)	731:50:20648:20648	3633089	28	True				
ANR	3633258	ExpressionStatement		731:51:20649:20649	3633089	29	True				
ANR	3633259	ExpressionStatement	pfm -> move_to_subfamily ( pf )	732:4:20655:20681	3633089	30	True				
ANR	3633260	CallExpression	pfm -> move_to_subfamily ( pf )		3633089	0					
ANR	3633261	Callee	pfm -> move_to_subfamily		3633089	0					
ANR	3633262	PtrMemberAccess	pfm -> move_to_subfamily		3633089	0					
ANR	3633263	Identifier	pfm		3633089	0					
ANR	3633264	Identifier	move_to_subfamily		3633089	1					
ANR	3633265	ArgumentList	pf		3633089	1					
ANR	3633266	Argument	pf		3633089	0					
ANR	3633267	Identifier	pf		3633089	0					
ANR	3633268	ReturnStatement	return true ;	733:4:20687:20698	3633089	31	True				
ANR	3633269	Identifier	true		3633089	0					
ANR	3633270	Statement	dprintf	737:2:20712:20718	3633089	3	True				
ANR	3633271	Statement	(	737:9:20719:20719	3633089	4	True				
ANR	3633272	Statement	D_ALWAYS	737:10:20720:20727	3633089	5	True				
ANR	3633273	Statement	","	737:18:20728:20728	3633089	6	True				
ANR	3633274	Statement	"""method %s: found family %u for process %u """	738:10:20740:20783	3633089	7	True				
ANR	3633275	Statement	"""(less specific - ignoring)\\n"""	739:11:20796:20825	3633089	8	True				
ANR	3633276	Statement	","	739:41:20826:20826	3633089	9	True				
ANR	3633277	Statement	method_str	740:10:20838:20847	3633089	10	True				
ANR	3633278	Statement	","	740:20:20848:20848	3633089	11	True				
ANR	3633279	Statement	pf	741:10:20860:20861	3633089	12	True				
ANR	3633280	Statement	->	741:12:20862:20863	3633089	13	True				
ANR	3633281	Statement	get_root_pid	741:14:20864:20875	3633089	14	True				
ANR	3633282	Statement	(	741:26:20876:20876	3633089	15	True				
ANR	3633283	Statement	)	741:27:20877:20877	3633089	16	True				
ANR	3633284	Statement	","	741:28:20878:20878	3633089	17	True				
ANR	3633285	Statement	pi	742:10:20890:20891	3633089	18	True				
ANR	3633286	Statement	->	742:12:20892:20893	3633089	19	True				
ANR	3633287	Statement	pid	742:14:20894:20896	3633089	20	True				
ANR	3633288	Statement	)	742:17:20897:20897	3633089	21	True				
ANR	3633289	ExpressionStatement		742:18:20898:20898	3633089	22	True				
ANR	3633290	ReturnStatement	return false ;	743:2:20902:20914	3633089	23	True				
ANR	3633291	Identifier	false		3633089	0					
ANR	3633292	ElseStatement	else		3633089	0					
ANR	3633293	CompoundStatement		51:6:1447:1447	3633089	0					
ANR	3633294	Statement	dprintf	749:2:20993:20999	3633089	0	True				
ANR	3633295	Statement	(	749:9:21000:21000	3633089	1	True				
ANR	3633296	Statement	D_ALWAYS	749:10:21001:21008	3633089	2	True				
ANR	3633297	Statement	","	749:18:21009:21009	3633089	3	True				
ANR	3633298	Statement	"""method %s: found family %u for process %u """	750:10:21021:21064	3633089	4	True				
ANR	3633299	Statement	"""(already determined)\\n"""	751:11:21077:21100	3633089	5	True				
ANR	3633300	Statement	","	751:35:21101:21101	3633089	6	True				
ANR	3633301	Statement	method_str	752:10:21113:21122	3633089	7	True				
ANR	3633302	Statement	","	752:20:21123:21123	3633089	8	True				
ANR	3633303	Statement	pf	753:10:21135:21136	3633089	9	True				
ANR	3633304	Statement	->	753:12:21137:21138	3633089	10	True				
ANR	3633305	Statement	get_root_pid	753:14:21139:21150	3633089	11	True				
ANR	3633306	Statement	(	753:26:21151:21151	3633089	12	True				
ANR	3633307	Statement	)	753:27:21152:21152	3633089	13	True				
ANR	3633308	Statement	","	753:28:21153:21153	3633089	14	True				
ANR	3633309	Statement	pi	754:10:21165:21166	3633089	15	True				
ANR	3633310	Statement	->	754:12:21167:21168	3633089	16	True				
ANR	3633311	Statement	pid	754:14:21169:21171	3633089	17	True				
ANR	3633312	Statement	)	754:17:21172:21172	3633089	18	True				
ANR	3633313	ExpressionStatement		754:18:21173:21173	3633089	19	True				
ANR	3633314	ReturnStatement	return false ;	755:2:21177:21189	3633089	20	True				
ANR	3633315	Identifier	false		3633089	0					
ANR	3633316	ReturnType	bool		3633089	1					
ANR	3633317	Identifier	ProcFamilyMonitor :: add_member_to_family		3633089	2					
ANR	3633318	ParameterList	"ProcFamily * pf , procInfo * pi , const char * method_str"		3633089	3					
ANR	3633319	Parameter	ProcFamily * pf	692:40:19343:19356	3633089	0	True				
ANR	3633320	ParameterType	ProcFamily *		3633089	0					
ANR	3633321	Identifier	pf		3633089	1					
ANR	3633322	Parameter	procInfo * pi	693:40:19399:19410	3633089	1	True				
ANR	3633323	ParameterType	procInfo *		3633089	0					
ANR	3633324	Identifier	pi		3633089	1					
ANR	3633325	Parameter	const char * method_str	694:40:19453:19474	3633089	2	True				
ANR	3633326	ParameterType	const char *		3633089	0					
ANR	3633327	Identifier	method_str		3633089	1					
ANR	3633328	CFGEntryNode	ENTRY		3633089		True				
ANR	3633329	CFGExitNode	EXIT		3633089		True				
ANR	3633330	Symbol	ret		3633089						
ANR	3633331	Symbol	* pfm		3633089						
ANR	3633332	Symbol	NULL		3633089						
ANR	3633333	Symbol	pf -> get_root_pid		3633089						
ANR	3633334	Symbol	D_ALWAYS		3633089						
ANR	3633335	Symbol	false		3633089						
ANR	3633336	Symbol	node -> get_data		3633089						
ANR	3633337	Symbol	node -> get_parent		3633089						
ANR	3633338	Symbol	node		3633089						
ANR	3633339	Symbol	lookup_family		3633089						
ANR	3633340	Symbol	pi -> pid		3633089						
ANR	3633341	Symbol	m_member_table . lookup		3633089						
ANR	3633342	Symbol	pfm -> get_proc_family		3633089						
ANR	3633343	Symbol	pf		3633089						
ANR	3633344	Symbol	pfm		3633089						
ANR	3633345	Symbol	m_member_table		3633089						
ANR	3633346	Symbol	true		3633089						
ANR	3633347	Symbol	pi		3633089						
ANR	3633348	Symbol	* node		3633089						
ANR	3633349	Symbol	* pi		3633089						
ANR	3633350	Symbol	method_str		3633089						
ANR	3633351	Symbol	* pf		3633089						
ANR	3633352	Function	ProcFamilyMonitor :: get_snapshot_interval	759:0:21197:21723							
ANR	3633353	FunctionDef	ProcFamilyMonitor :: get_snapshot_interval (Tree < ProcFamily * > * tree)		3633352	0					
ANR	3633354	CompoundStatement		761:0:21267:21723	3633352	0					
ANR	3633355	IdentifierDeclStatement	int ret_value = tree -> get_data ( ) -> get_max_snapshot_interval ( ) ;	764:1:21326:21387	3633352	0	True				
ANR	3633356	IdentifierDecl	ret_value = tree -> get_data ( ) -> get_max_snapshot_interval ( )		3633352	0					
ANR	3633357	IdentifierDeclType	int		3633352	0					
ANR	3633358	Identifier	ret_value		3633352	1					
ANR	3633359	AssignmentExpression	ret_value = tree -> get_data ( ) -> get_max_snapshot_interval ( )		3633352	2		=			
ANR	3633360	Identifier	ret_value		3633352	0					
ANR	3633361	CallExpression	tree -> get_data ( ) -> get_max_snapshot_interval ( )		3633352	1					
ANR	3633362	Callee	tree -> get_data ( ) -> get_max_snapshot_interval		3633352	0					
ANR	3633363	PtrMemberAccess	tree -> get_data ( ) -> get_max_snapshot_interval		3633352	0					
ANR	3633364	CallExpression	tree -> get_data ( )		3633352	0					
ANR	3633365	Callee	tree -> get_data		3633352	0					
ANR	3633366	PtrMemberAccess	tree -> get_data		3633352	0					
ANR	3633367	Identifier	tree		3633352	0					
ANR	3633368	Identifier	get_data		3633352	1					
ANR	3633369	ArgumentList			3633352	1					
ANR	3633370	Identifier	get_max_snapshot_interval		3633352	1					
ANR	3633371	ArgumentList			3633352	1					
ANR	3633372	IdentifierDeclStatement	Tree < ProcFamily * > * child = tree -> get_child ( ) ;	768:1:21420:21464	3633352	1	True				
ANR	3633373	IdentifierDecl	* child = tree -> get_child ( )		3633352	0					
ANR	3633374	IdentifierDeclType	Tree < ProcFamily * > *		3633352	0					
ANR	3633375	Identifier	child		3633352	1					
ANR	3633376	AssignmentExpression	* child = tree -> get_child ( )		3633352	2		=			
ANR	3633377	Identifier	child		3633352	0					
ANR	3633378	CallExpression	tree -> get_child ( )		3633352	1					
ANR	3633379	Callee	tree -> get_child		3633352	0					
ANR	3633380	PtrMemberAccess	tree -> get_child		3633352	0					
ANR	3633381	Identifier	tree		3633352	0					
ANR	3633382	Identifier	get_child		3633352	1					
ANR	3633383	ArgumentList			3633352	1					
ANR	3633384	WhileStatement	while ( child != NULL )		3633352	2					
ANR	3633385	Condition	child != NULL	769:8:21474:21486	3633352	0	True				
ANR	3633386	EqualityExpression	child != NULL		3633352	0		!=			
ANR	3633387	Identifier	child		3633352	0					
ANR	3633388	Identifier	NULL		3633352	1					
ANR	3633389	CompoundStatement		10:2:225:271	3633352	1					
ANR	3633390	IdentifierDeclStatement	int child_value = get_snapshot_interval ( child ) ;	770:2:21493:21539	3633352	0	True				
ANR	3633391	IdentifierDecl	child_value = get_snapshot_interval ( child )		3633352	0					
ANR	3633392	IdentifierDeclType	int		3633352	0					
ANR	3633393	Identifier	child_value		3633352	1					
ANR	3633394	AssignmentExpression	child_value = get_snapshot_interval ( child )		3633352	2		=			
ANR	3633395	Identifier	child_value		3633352	0					
ANR	3633396	CallExpression	get_snapshot_interval ( child )		3633352	1					
ANR	3633397	Callee	get_snapshot_interval		3633352	0					
ANR	3633398	Identifier	get_snapshot_interval		3633352	0					
ANR	3633399	ArgumentList	child		3633352	1					
ANR	3633400	Argument	child		3633352	0					
ANR	3633401	Identifier	child		3633352	0					
ANR	3633402	IfStatement	if ( ret_value == - 1 )		3633352	1					
ANR	3633403	Condition	ret_value == - 1	771:6:21547:21561	3633352	0	True				
ANR	3633404	EqualityExpression	ret_value == - 1		3633352	0		==			
ANR	3633405	Identifier	ret_value		3633352	0					
ANR	3633406	UnaryOperationExpression	- 1		3633352	1					
ANR	3633407	UnaryOperator	-		3633352	0					
ANR	3633408	PrimaryExpression	1		3633352	1					
ANR	3633409	CompoundStatement		11:23:296:296	3633352	1					
ANR	3633410	ExpressionStatement	ret_value = child_value	772:3:21569:21592	3633352	0	True				
ANR	3633411	AssignmentExpression	ret_value = child_value		3633352	0		=			
ANR	3633412	Identifier	ret_value		3633352	0					
ANR	3633413	Identifier	child_value		3633352	1					
ANR	3633414	ElseStatement	else		3633352	0					
ANR	3633415	IfStatement	if ( child_value < ret_value )		3633352	0					
ANR	3633416	Condition	child_value < ret_value	774:11:21609:21631	3633352	0	True				
ANR	3633417	RelationalExpression	child_value < ret_value		3633352	0		<			
ANR	3633418	Identifier	child_value		3633352	0					
ANR	3633419	Identifier	ret_value		3633352	1					
ANR	3633420	CompoundStatement		14:36:366:366	3633352	1					
ANR	3633421	ExpressionStatement	ret_value = child_value	775:3:21639:21662	3633352	0	True				
ANR	3633422	AssignmentExpression	ret_value = child_value		3633352	0		=			
ANR	3633423	Identifier	ret_value		3633352	0					
ANR	3633424	Identifier	child_value		3633352	1					
ANR	3633425	ExpressionStatement	child = child -> get_sibling ( )	777:2:21670:21698	3633352	2	True				
ANR	3633426	AssignmentExpression	child = child -> get_sibling ( )		3633352	0		=			
ANR	3633427	Identifier	child		3633352	0					
ANR	3633428	CallExpression	child -> get_sibling ( )		3633352	1					
ANR	3633429	Callee	child -> get_sibling		3633352	0					
ANR	3633430	PtrMemberAccess	child -> get_sibling		3633352	0					
ANR	3633431	Identifier	child		3633352	0					
ANR	3633432	Identifier	get_sibling		3633352	1					
ANR	3633433	ArgumentList			3633352	1					
ANR	3633434	ReturnStatement	return ret_value ;	780:1:21705:21721	3633352	3	True				
ANR	3633435	Identifier	ret_value		3633352	0					
ANR	3633436	ReturnType	int		3633352	1					
ANR	3633437	Identifier	ProcFamilyMonitor :: get_snapshot_interval		3633352	2					
ANR	3633438	ParameterList	Tree < ProcFamily * > * tree		3633352	3					
ANR	3633439	Parameter	Tree < ProcFamily * > * tree	760:41:21242:21264	3633352	0	True				
ANR	3633440	ParameterType	Tree < ProcFamily * > *		3633352	0					
ANR	3633441	Identifier	tree		3633352	1					
ANR	3633442	CFGEntryNode	ENTRY		3633352		True				
ANR	3633443	CFGExitNode	EXIT		3633352		True				
ANR	3633444	Symbol	tree -> get_data ( ) -> get_max_snapshot_interval		3633352						
ANR	3633445	Symbol	child_value		3633352						
ANR	3633446	Symbol	* tree -> get_data		3633352						
ANR	3633447	Symbol	* child		3633352						
ANR	3633448	Symbol	NULL		3633352						
ANR	3633449	Symbol	tree		3633352						
ANR	3633450	Symbol	tree -> get_data		3633352						
ANR	3633451	Symbol	child -> get_sibling		3633352						
ANR	3633452	Symbol	* tree		3633352						
ANR	3633453	Symbol	* * tree		3633352						
ANR	3633454	Symbol	get_snapshot_interval		3633352						
ANR	3633455	Symbol	ret_value		3633352						
ANR	3633456	Symbol	tree -> get_child		3633352						
ANR	3633457	Symbol	child		3633352						
ANR	3633458	Function	ProcFamilyMonitor :: update_max_image_sizes	783:0:21726:22265							
ANR	3633459	FunctionDef	ProcFamilyMonitor :: update_max_image_sizes (Tree < ProcFamily * > * tree)		3633458	0					
ANR	3633460	CompoundStatement		785:0:21807:22265	3633458	0					
ANR	3633461	IdentifierDeclStatement	unsigned long sum = 0 ;	789:1:21890:21911	3633458	0	True				
ANR	3633462	IdentifierDecl	sum = 0		3633458	0					
ANR	3633463	IdentifierDeclType	unsigned long		3633458	0					
ANR	3633464	Identifier	sum		3633458	1					
ANR	3633465	AssignmentExpression	sum = 0		3633458	2		=			
ANR	3633466	Identifier	sum		3633458	0					
ANR	3633467	PrimaryExpression	0		3633458	1					
ANR	3633468	IdentifierDeclStatement	Tree < ProcFamily * > * child = tree -> get_child ( ) ;	790:1:21914:21958	3633458	1	True				
ANR	3633469	IdentifierDecl	* child = tree -> get_child ( )		3633458	0					
ANR	3633470	IdentifierDeclType	Tree < ProcFamily * > *		3633458	0					
ANR	3633471	Identifier	child		3633458	1					
ANR	3633472	AssignmentExpression	* child = tree -> get_child ( )		3633458	2		=			
ANR	3633473	Identifier	child		3633458	0					
ANR	3633474	CallExpression	tree -> get_child ( )		3633458	1					
ANR	3633475	Callee	tree -> get_child		3633458	0					
ANR	3633476	PtrMemberAccess	tree -> get_child		3633458	0					
ANR	3633477	Identifier	tree		3633458	0					
ANR	3633478	Identifier	get_child		3633458	1					
ANR	3633479	ArgumentList			3633458	1					
ANR	3633480	WhileStatement	while ( child != NULL )		3633458	2					
ANR	3633481	Condition	child != NULL	791:8:21968:21980	3633458	0	True				
ANR	3633482	EqualityExpression	child != NULL		3633458	0		!=			
ANR	3633483	Identifier	child		3633458	0					
ANR	3633484	Identifier	NULL		3633458	1					
ANR	3633485	CompoundStatement		7:23:175:175	3633458	1					
ANR	3633486	ExpressionStatement	sum += update_max_image_sizes ( child )	792:2:21987:22023	3633458	0	True				
ANR	3633487	AssignmentExpression	sum += update_max_image_sizes ( child )		3633458	0		+=			
ANR	3633488	Identifier	sum		3633458	0					
ANR	3633489	CallExpression	update_max_image_sizes ( child )		3633458	1					
ANR	3633490	Callee	update_max_image_sizes		3633458	0					
ANR	3633491	Identifier	update_max_image_sizes		3633458	0					
ANR	3633492	ArgumentList	child		3633458	1					
ANR	3633493	Argument	child		3633458	0					
ANR	3633494	Identifier	child		3633458	0					
ANR	3633495	ExpressionStatement	child = child -> get_sibling ( )	793:2:22027:22055	3633458	1	True				
ANR	3633496	AssignmentExpression	child = child -> get_sibling ( )		3633458	0		=			
ANR	3633497	Identifier	child		3633458	0					
ANR	3633498	CallExpression	child -> get_sibling ( )		3633458	1					
ANR	3633499	Callee	child -> get_sibling		3633458	0					
ANR	3633500	PtrMemberAccess	child -> get_sibling		3633458	0					
ANR	3633501	Identifier	child		3633458	0					
ANR	3633502	Identifier	get_sibling		3633458	1					
ANR	3633503	ArgumentList			3633458	1					
ANR	3633504	ReturnStatement	return tree -> get_data ( ) -> update_max_image_size ( sum ) ;	800:1:22212:22263	3633458	3	True				
ANR	3633505	CallExpression	tree -> get_data ( ) -> update_max_image_size ( sum )		3633458	0					
ANR	3633506	Callee	tree -> get_data ( ) -> update_max_image_size		3633458	0					
ANR	3633507	PtrMemberAccess	tree -> get_data ( ) -> update_max_image_size		3633458	0					
ANR	3633508	CallExpression	tree -> get_data ( )		3633458	0					
ANR	3633509	Callee	tree -> get_data		3633458	0					
ANR	3633510	PtrMemberAccess	tree -> get_data		3633458	0					
ANR	3633511	Identifier	tree		3633458	0					
ANR	3633512	Identifier	get_data		3633458	1					
ANR	3633513	ArgumentList			3633458	1					
ANR	3633514	Identifier	update_max_image_size		3633458	1					
ANR	3633515	ArgumentList	sum		3633458	1					
ANR	3633516	Argument	sum		3633458	0					
ANR	3633517	Identifier	sum		3633458	0					
ANR	3633518	ReturnType	unsigned long		3633458	1					
ANR	3633519	Identifier	ProcFamilyMonitor :: update_max_image_sizes		3633458	2					
ANR	3633520	ParameterList	Tree < ProcFamily * > * tree		3633458	3					
ANR	3633521	Parameter	Tree < ProcFamily * > * tree	784:42:21782:21804	3633458	0	True				
ANR	3633522	ParameterType	Tree < ProcFamily * > *		3633458	0					
ANR	3633523	Identifier	tree		3633458	1					
ANR	3633524	CFGEntryNode	ENTRY		3633458		True				
ANR	3633525	CFGExitNode	EXIT		3633458		True				
ANR	3633526	Symbol	* child		3633458						
ANR	3633527	Symbol	* tree -> get_data		3633458						
ANR	3633528	Symbol	NULL		3633458						
ANR	3633529	Symbol	tree		3633458						
ANR	3633530	Symbol	tree -> get_data		3633458						
ANR	3633531	Symbol	sum		3633458						
ANR	3633532	Symbol	child -> get_sibling		3633458						
ANR	3633533	Symbol	tree -> get_data ( ) -> update_max_image_size		3633458						
ANR	3633534	Symbol	* tree		3633458						
ANR	3633535	Symbol	update_max_image_sizes		3633458						
ANR	3633536	Symbol	* * tree		3633458						
ANR	3633537	Symbol	tree -> get_child		3633458						
ANR	3633538	Symbol	child		3633458						
ANR	3633539	Function	ProcFamilyMonitor :: get_family_usage	803:0:22268:22614							
ANR	3633540	FunctionDef	"ProcFamilyMonitor :: get_family_usage (Tree < ProcFamily * > * tree , ProcFamilyUsage * usage)"		3633539	0					
ANR	3633541	CompoundStatement		805:0:22358:22614	3633539	0					
ANR	3633542	ExpressionStatement	tree -> get_data ( ) -> aggregate_usage ( usage )	808:1:22402:22442	3633539	0	True				
ANR	3633543	CallExpression	tree -> get_data ( ) -> aggregate_usage ( usage )		3633539	0					
ANR	3633544	Callee	tree -> get_data ( ) -> aggregate_usage		3633539	0					
ANR	3633545	PtrMemberAccess	tree -> get_data ( ) -> aggregate_usage		3633539	0					
ANR	3633546	CallExpression	tree -> get_data ( )		3633539	0					
ANR	3633547	Callee	tree -> get_data		3633539	0					
ANR	3633548	PtrMemberAccess	tree -> get_data		3633539	0					
ANR	3633549	Identifier	tree		3633539	0					
ANR	3633550	Identifier	get_data		3633539	1					
ANR	3633551	ArgumentList			3633539	1					
ANR	3633552	Identifier	aggregate_usage		3633539	1					
ANR	3633553	ArgumentList	usage		3633539	1					
ANR	3633554	Argument	usage		3633539	0					
ANR	3633555	Identifier	usage		3633539	0					
ANR	3633556	IdentifierDeclStatement	Tree < ProcFamily * > * child = tree -> get_child ( ) ;	812:1:22474:22518	3633539	1	True				
ANR	3633557	IdentifierDecl	* child = tree -> get_child ( )		3633539	0					
ANR	3633558	IdentifierDeclType	Tree < ProcFamily * > *		3633539	0					
ANR	3633559	Identifier	child		3633539	1					
ANR	3633560	AssignmentExpression	* child = tree -> get_child ( )		3633539	2		=			
ANR	3633561	Identifier	child		3633539	0					
ANR	3633562	CallExpression	tree -> get_child ( )		3633539	1					
ANR	3633563	Callee	tree -> get_child		3633539	0					
ANR	3633564	PtrMemberAccess	tree -> get_child		3633539	0					
ANR	3633565	Identifier	tree		3633539	0					
ANR	3633566	Identifier	get_child		3633539	1					
ANR	3633567	ArgumentList			3633539	1					
ANR	3633568	WhileStatement	while ( child != NULL )		3633539	2					
ANR	3633569	Condition	child != NULL	813:8:22528:22540	3633539	0	True				
ANR	3633570	EqualityExpression	child != NULL		3633539	0		!=			
ANR	3633571	Identifier	child		3633539	0					
ANR	3633572	Identifier	NULL		3633539	1					
ANR	3633573	CompoundStatement		9:23:184:184	3633539	1					
ANR	3633574	ExpressionStatement	"get_family_usage ( child , usage )"	814:2:22547:22577	3633539	0	True				
ANR	3633575	CallExpression	"get_family_usage ( child , usage )"		3633539	0					
ANR	3633576	Callee	get_family_usage		3633539	0					
ANR	3633577	Identifier	get_family_usage		3633539	0					
ANR	3633578	ArgumentList	child		3633539	1					
ANR	3633579	Argument	child		3633539	0					
ANR	3633580	Identifier	child		3633539	0					
ANR	3633581	Argument	usage		3633539	1					
ANR	3633582	Identifier	usage		3633539	0					
ANR	3633583	ExpressionStatement	child = child -> get_sibling ( )	815:2:22581:22609	3633539	1	True				
ANR	3633584	AssignmentExpression	child = child -> get_sibling ( )		3633539	0		=			
ANR	3633585	Identifier	child		3633539	0					
ANR	3633586	CallExpression	child -> get_sibling ( )		3633539	1					
ANR	3633587	Callee	child -> get_sibling		3633539	0					
ANR	3633588	PtrMemberAccess	child -> get_sibling		3633539	0					
ANR	3633589	Identifier	child		3633539	0					
ANR	3633590	Identifier	get_sibling		3633539	1					
ANR	3633591	ArgumentList			3633539	1					
ANR	3633592	ReturnType	void		3633539	1					
ANR	3633593	Identifier	ProcFamilyMonitor :: get_family_usage		3633539	2					
ANR	3633594	ParameterList	"Tree < ProcFamily * > * tree , ProcFamilyUsage * usage"		3633539	3					
ANR	3633595	Parameter	Tree < ProcFamily * > * tree	804:36:22309:22331	3633539	0	True				
ANR	3633596	ParameterType	Tree < ProcFamily * > *		3633539	0					
ANR	3633597	Identifier	tree		3633539	1					
ANR	3633598	Parameter	ProcFamilyUsage * usage	804:61:22334:22355	3633539	1	True				
ANR	3633599	ParameterType	ProcFamilyUsage *		3633539	0					
ANR	3633600	Identifier	usage		3633539	1					
ANR	3633601	CFGEntryNode	ENTRY		3633539		True				
ANR	3633602	CFGExitNode	EXIT		3633539		True				
ANR	3633603	Symbol	* tree		3633539						
ANR	3633604	Symbol	* child		3633539						
ANR	3633605	Symbol	NULL		3633539						
ANR	3633606	Symbol	usage		3633539						
ANR	3633607	Symbol	tree		3633539						
ANR	3633608	Symbol	tree -> get_data		3633539						
ANR	3633609	Symbol	tree -> get_child		3633539						
ANR	3633610	Symbol	child -> get_sibling		3633539						
ANR	3633611	Symbol	child		3633539						
ANR	3633612	Function	ProcFamilyMonitor :: signal_family	819:0:22617:22920							
ANR	3633613	FunctionDef	"ProcFamilyMonitor :: signal_family (Tree < ProcFamily * > * tree , int sig)"		3633612	0					
ANR	3633614	CompoundStatement		821:0:22689:22920	3633612	0					
ANR	3633615	ExpressionStatement	tree -> get_data ( ) -> spree ( sig )	824:1:22725:22753	3633612	0	True				
ANR	3633616	CallExpression	tree -> get_data ( ) -> spree ( sig )		3633612	0					
ANR	3633617	Callee	tree -> get_data ( ) -> spree		3633612	0					
ANR	3633618	PtrMemberAccess	tree -> get_data ( ) -> spree		3633612	0					
ANR	3633619	CallExpression	tree -> get_data ( )		3633612	0					
ANR	3633620	Callee	tree -> get_data		3633612	0					
ANR	3633621	PtrMemberAccess	tree -> get_data		3633612	0					
ANR	3633622	Identifier	tree		3633612	0					
ANR	3633623	Identifier	get_data		3633612	1					
ANR	3633624	ArgumentList			3633612	1					
ANR	3633625	Identifier	spree		3633612	1					
ANR	3633626	ArgumentList	sig		3633612	1					
ANR	3633627	Argument	sig		3633612	0					
ANR	3633628	Identifier	sig		3633612	0					
ANR	3633629	IdentifierDeclStatement	Tree < ProcFamily * > * child = tree -> get_child ( ) ;	828:1:22785:22829	3633612	1	True				
ANR	3633630	IdentifierDecl	* child = tree -> get_child ( )		3633612	0					
ANR	3633631	IdentifierDeclType	Tree < ProcFamily * > *		3633612	0					
ANR	3633632	Identifier	child		3633612	1					
ANR	3633633	AssignmentExpression	* child = tree -> get_child ( )		3633612	2		=			
ANR	3633634	Identifier	child		3633612	0					
ANR	3633635	CallExpression	tree -> get_child ( )		3633612	1					
ANR	3633636	Callee	tree -> get_child		3633612	0					
ANR	3633637	PtrMemberAccess	tree -> get_child		3633612	0					
ANR	3633638	Identifier	tree		3633612	0					
ANR	3633639	Identifier	get_child		3633612	1					
ANR	3633640	ArgumentList			3633612	1					
ANR	3633641	WhileStatement	while ( child != NULL )		3633612	2					
ANR	3633642	Condition	child != NULL	829:8:22839:22851	3633612	0	True				
ANR	3633643	EqualityExpression	child != NULL		3633612	0		!=			
ANR	3633644	Identifier	child		3633612	0					
ANR	3633645	Identifier	NULL		3633612	1					
ANR	3633646	CompoundStatement		9:23:164:164	3633612	1					
ANR	3633647	ExpressionStatement	"signal_family ( child , sig )"	830:2:22858:22883	3633612	0	True				
ANR	3633648	CallExpression	"signal_family ( child , sig )"		3633612	0					
ANR	3633649	Callee	signal_family		3633612	0					
ANR	3633650	Identifier	signal_family		3633612	0					
ANR	3633651	ArgumentList	child		3633612	1					
ANR	3633652	Argument	child		3633612	0					
ANR	3633653	Identifier	child		3633612	0					
ANR	3633654	Argument	sig		3633612	1					
ANR	3633655	Identifier	sig		3633612	0					
ANR	3633656	ExpressionStatement	child = child -> get_sibling ( )	831:2:22887:22915	3633612	1	True				
ANR	3633657	AssignmentExpression	child = child -> get_sibling ( )		3633612	0		=			
ANR	3633658	Identifier	child		3633612	0					
ANR	3633659	CallExpression	child -> get_sibling ( )		3633612	1					
ANR	3633660	Callee	child -> get_sibling		3633612	0					
ANR	3633661	PtrMemberAccess	child -> get_sibling		3633612	0					
ANR	3633662	Identifier	child		3633612	0					
ANR	3633663	Identifier	get_sibling		3633612	1					
ANR	3633664	ArgumentList			3633612	1					
ANR	3633665	ReturnType	void		3633612	1					
ANR	3633666	Identifier	ProcFamilyMonitor :: signal_family		3633612	2					
ANR	3633667	ParameterList	"Tree < ProcFamily * > * tree , int sig"		3633612	3					
ANR	3633668	Parameter	Tree < ProcFamily * > * tree	820:33:22655:22677	3633612	0	True				
ANR	3633669	ParameterType	Tree < ProcFamily * > *		3633612	0					
ANR	3633670	Identifier	tree		3633612	1					
ANR	3633671	Parameter	int sig	820:58:22680:22686	3633612	1	True				
ANR	3633672	ParameterType	int		3633612	0					
ANR	3633673	Identifier	sig		3633612	1					
ANR	3633674	CFGEntryNode	ENTRY		3633612		True				
ANR	3633675	CFGExitNode	EXIT		3633612		True				
ANR	3633676	Symbol	sig		3633612						
ANR	3633677	Symbol	* tree		3633612						
ANR	3633678	Symbol	* child		3633612						
ANR	3633679	Symbol	NULL		3633612						
ANR	3633680	Symbol	tree		3633612						
ANR	3633681	Symbol	tree -> get_data		3633612						
ANR	3633682	Symbol	tree -> get_child		3633612						
ANR	3633683	Symbol	child -> get_sibling		3633612						
ANR	3633684	Symbol	child		3633612						
ANR	3633685	Function	ProcFamilyMonitor :: remove_exited_processes	835:0:22923:23269							
ANR	3633686	FunctionDef	ProcFamilyMonitor :: remove_exited_processes (Tree < ProcFamily * > * tree)		3633685	0					
ANR	3633687	CompoundStatement		837:0:22996:23269	3633685	0					
ANR	3633688	ExpressionStatement	tree -> get_data ( ) -> remove_exited_processes ( )	840:1:23054:23097	3633685	0	True				
ANR	3633689	CallExpression	tree -> get_data ( ) -> remove_exited_processes ( )		3633685	0					
ANR	3633690	Callee	tree -> get_data ( ) -> remove_exited_processes		3633685	0					
ANR	3633691	PtrMemberAccess	tree -> get_data ( ) -> remove_exited_processes		3633685	0					
ANR	3633692	CallExpression	tree -> get_data ( )		3633685	0					
ANR	3633693	Callee	tree -> get_data		3633685	0					
ANR	3633694	PtrMemberAccess	tree -> get_data		3633685	0					
ANR	3633695	Identifier	tree		3633685	0					
ANR	3633696	Identifier	get_data		3633685	1					
ANR	3633697	ArgumentList			3633685	1					
ANR	3633698	Identifier	remove_exited_processes		3633685	1					
ANR	3633699	ArgumentList			3633685	1					
ANR	3633700	IdentifierDeclStatement	Tree < ProcFamily * > * child = tree -> get_child ( ) ;	844:1:23129:23173	3633685	1	True				
ANR	3633701	IdentifierDecl	* child = tree -> get_child ( )		3633685	0					
ANR	3633702	IdentifierDeclType	Tree < ProcFamily * > *		3633685	0					
ANR	3633703	Identifier	child		3633685	1					
ANR	3633704	AssignmentExpression	* child = tree -> get_child ( )		3633685	2		=			
ANR	3633705	Identifier	child		3633685	0					
ANR	3633706	CallExpression	tree -> get_child ( )		3633685	1					
ANR	3633707	Callee	tree -> get_child		3633685	0					
ANR	3633708	PtrMemberAccess	tree -> get_child		3633685	0					
ANR	3633709	Identifier	tree		3633685	0					
ANR	3633710	Identifier	get_child		3633685	1					
ANR	3633711	ArgumentList			3633685	1					
ANR	3633712	WhileStatement	while ( child != NULL )		3633685	2					
ANR	3633713	Condition	child != NULL	845:8:23183:23195	3633685	0	True				
ANR	3633714	EqualityExpression	child != NULL		3633685	0		!=			
ANR	3633715	Identifier	child		3633685	0					
ANR	3633716	Identifier	NULL		3633685	1					
ANR	3633717	CompoundStatement		9:23:201:201	3633685	1					
ANR	3633718	ExpressionStatement	remove_exited_processes ( child )	846:2:23202:23232	3633685	0	True				
ANR	3633719	CallExpression	remove_exited_processes ( child )		3633685	0					
ANR	3633720	Callee	remove_exited_processes		3633685	0					
ANR	3633721	Identifier	remove_exited_processes		3633685	0					
ANR	3633722	ArgumentList	child		3633685	1					
ANR	3633723	Argument	child		3633685	0					
ANR	3633724	Identifier	child		3633685	0					
ANR	3633725	ExpressionStatement	child = child -> get_sibling ( )	847:2:23236:23264	3633685	1	True				
ANR	3633726	AssignmentExpression	child = child -> get_sibling ( )		3633685	0		=			
ANR	3633727	Identifier	child		3633685	0					
ANR	3633728	CallExpression	child -> get_sibling ( )		3633685	1					
ANR	3633729	Callee	child -> get_sibling		3633685	0					
ANR	3633730	PtrMemberAccess	child -> get_sibling		3633685	0					
ANR	3633731	Identifier	child		3633685	0					
ANR	3633732	Identifier	get_sibling		3633685	1					
ANR	3633733	ArgumentList			3633685	1					
ANR	3633734	ReturnType	void		3633685	1					
ANR	3633735	Identifier	ProcFamilyMonitor :: remove_exited_processes		3633685	2					
ANR	3633736	ParameterList	Tree < ProcFamily * > * tree		3633685	3					
ANR	3633737	Parameter	Tree < ProcFamily * > * tree	836:43:22971:22993	3633685	0	True				
ANR	3633738	ParameterType	Tree < ProcFamily * > *		3633685	0					
ANR	3633739	Identifier	tree		3633685	1					
ANR	3633740	CFGEntryNode	ENTRY		3633685		True				
ANR	3633741	CFGExitNode	EXIT		3633685		True				
ANR	3633742	Symbol	* tree		3633685						
ANR	3633743	Symbol	* child		3633685						
ANR	3633744	Symbol	NULL		3633685						
ANR	3633745	Symbol	tree		3633685						
ANR	3633746	Symbol	tree -> get_data		3633685						
ANR	3633747	Symbol	tree -> get_child		3633685						
ANR	3633748	Symbol	child -> get_sibling		3633685						
ANR	3633749	Symbol	child		3633685						
ANR	3633750	Function	ProcFamilyMonitor :: delete_unwatched_families	851:0:23272:25253							
ANR	3633751	FunctionDef	ProcFamilyMonitor :: delete_unwatched_families (Tree < ProcFamily * > * tree)		3633750	0					
ANR	3633752	CompoundStatement		853:0:23347:25253	3633750	0					
ANR	3633753	IdentifierDeclStatement	Tree < ProcFamily * > * child = tree -> get_child ( ) ;	856:1:23378:23422	3633750	0	True				
ANR	3633754	IdentifierDecl	* child = tree -> get_child ( )		3633750	0					
ANR	3633755	IdentifierDeclType	Tree < ProcFamily * > *		3633750	0					
ANR	3633756	Identifier	child		3633750	1					
ANR	3633757	AssignmentExpression	* child = tree -> get_child ( )		3633750	2		=			
ANR	3633758	Identifier	child		3633750	0					
ANR	3633759	CallExpression	tree -> get_child ( )		3633750	1					
ANR	3633760	Callee	tree -> get_child		3633750	0					
ANR	3633761	PtrMemberAccess	tree -> get_child		3633750	0					
ANR	3633762	Identifier	tree		3633750	0					
ANR	3633763	Identifier	get_child		3633750	1					
ANR	3633764	ArgumentList			3633750	1					
ANR	3633765	WhileStatement	while ( child != NULL )		3633750	1					
ANR	3633766	Condition	child != NULL	857:8:23432:23444	3633750	0	True				
ANR	3633767	EqualityExpression	child != NULL		3633750	0		!=			
ANR	3633768	Identifier	child		3633750	0					
ANR	3633769	Identifier	NULL		3633750	1					
ANR	3633770	CompoundStatement		10:2:224:276	3633750	1					
ANR	3633771	IdentifierDeclStatement	Tree < ProcFamily * > * next_child = child -> get_sibling ( ) ;	862:2:23572:23624	3633750	0	True				
ANR	3633772	IdentifierDecl	* next_child = child -> get_sibling ( )		3633750	0					
ANR	3633773	IdentifierDeclType	Tree < ProcFamily * > *		3633750	0					
ANR	3633774	Identifier	next_child		3633750	1					
ANR	3633775	AssignmentExpression	* next_child = child -> get_sibling ( )		3633750	2		=			
ANR	3633776	Identifier	next_child		3633750	0					
ANR	3633777	CallExpression	child -> get_sibling ( )		3633750	1					
ANR	3633778	Callee	child -> get_sibling		3633750	0					
ANR	3633779	PtrMemberAccess	child -> get_sibling		3633750	0					
ANR	3633780	Identifier	child		3633750	0					
ANR	3633781	Identifier	get_sibling		3633750	1					
ANR	3633782	ArgumentList			3633750	1					
ANR	3633783	ExpressionStatement	delete_unwatched_families ( child )	863:2:23628:23660	3633750	1	True				
ANR	3633784	CallExpression	delete_unwatched_families ( child )		3633750	0					
ANR	3633785	Callee	delete_unwatched_families		3633750	0					
ANR	3633786	Identifier	delete_unwatched_families		3633750	0					
ANR	3633787	ArgumentList	child		3633750	1					
ANR	3633788	Argument	child		3633750	0					
ANR	3633789	Identifier	child		3633750	0					
ANR	3633790	ExpressionStatement	child = next_child	864:2:23664:23682	3633750	2	True				
ANR	3633791	AssignmentExpression	child = next_child		3633750	0		=			
ANR	3633792	Identifier	child		3633750	0					
ANR	3633793	Identifier	next_child		3633750	1					
ANR	3633794	IdentifierDeclStatement	pid_t watcher_pid = tree -> get_data ( ) -> get_watcher_pid ( ) ;	870:1:23854:23909	3633750	2	True				
ANR	3633795	IdentifierDecl	watcher_pid = tree -> get_data ( ) -> get_watcher_pid ( )		3633750	0					
ANR	3633796	IdentifierDeclType	pid_t		3633750	0					
ANR	3633797	Identifier	watcher_pid		3633750	1					
ANR	3633798	AssignmentExpression	watcher_pid = tree -> get_data ( ) -> get_watcher_pid ( )		3633750	2		=			
ANR	3633799	Identifier	watcher_pid		3633750	0					
ANR	3633800	CallExpression	tree -> get_data ( ) -> get_watcher_pid ( )		3633750	1					
ANR	3633801	Callee	tree -> get_data ( ) -> get_watcher_pid		3633750	0					
ANR	3633802	PtrMemberAccess	tree -> get_data ( ) -> get_watcher_pid		3633750	0					
ANR	3633803	CallExpression	tree -> get_data ( )		3633750	0					
ANR	3633804	Callee	tree -> get_data		3633750	0					
ANR	3633805	PtrMemberAccess	tree -> get_data		3633750	0					
ANR	3633806	Identifier	tree		3633750	0					
ANR	3633807	Identifier	get_data		3633750	1					
ANR	3633808	ArgumentList			3633750	1					
ANR	3633809	Identifier	get_watcher_pid		3633750	1					
ANR	3633810	ArgumentList			3633750	1					
ANR	3633811	IfStatement	if ( watcher_pid == 0 )		3633750	3					
ANR	3633812	Condition	watcher_pid == 0	871:5:23916:23931	3633750	0	True				
ANR	3633813	EqualityExpression	watcher_pid == 0		3633750	0		==			
ANR	3633814	Identifier	watcher_pid		3633750	0					
ANR	3633815	PrimaryExpression	0		3633750	1					
ANR	3633816	CompoundStatement		19:23:586:586	3633750	1					
ANR	3633817	ReturnStatement	return ;	872:2:23938:23944	3633750	0	True				
ANR	3633818	IdentifierDeclStatement	ProcFamilyMember * member ;	875:1:23951:23975	3633750	4	True				
ANR	3633819	IdentifierDecl	* member		3633750	0					
ANR	3633820	IdentifierDeclType	ProcFamilyMember *		3633750	0					
ANR	3633821	Identifier	member		3633750	1					
ANR	3633822	IdentifierDeclStatement	"int ret = m_member_table . lookup ( watcher_pid , member ) ;"	876:1:23978:24030	3633750	5	True				
ANR	3633823	IdentifierDecl	"ret = m_member_table . lookup ( watcher_pid , member )"		3633750	0					
ANR	3633824	IdentifierDeclType	int		3633750	0					
ANR	3633825	Identifier	ret		3633750	1					
ANR	3633826	AssignmentExpression	"ret = m_member_table . lookup ( watcher_pid , member )"		3633750	2		=			
ANR	3633827	Identifier	ret		3633750	0					
ANR	3633828	CallExpression	"m_member_table . lookup ( watcher_pid , member )"		3633750	1					
ANR	3633829	Callee	m_member_table . lookup		3633750	0					
ANR	3633830	MemberAccess	m_member_table . lookup		3633750	0					
ANR	3633831	Identifier	m_member_table		3633750	0					
ANR	3633832	Identifier	lookup		3633750	1					
ANR	3633833	ArgumentList	watcher_pid		3633750	1					
ANR	3633834	Argument	watcher_pid		3633750	0					
ANR	3633835	Identifier	watcher_pid		3633750	0					
ANR	3633836	Argument	member		3633750	1					
ANR	3633837	Identifier	member		3633750	0					
ANR	3633838	IfStatement	if ( ret != - 1 )		3633750	6					
ANR	3633839	Condition	ret != - 1	877:5:24037:24045	3633750	0	True				
ANR	3633840	EqualityExpression	ret != - 1		3633750	0		!=			
ANR	3633841	Identifier	ret		3633750	0					
ANR	3633842	UnaryOperationExpression	- 1		3633750	1					
ANR	3633843	UnaryOperator	-		3633750	0					
ANR	3633844	PrimaryExpression	1		3633750	1					
ANR	3633845	CompoundStatement		25:16:700:700	3633750	1					
ANR	3633846	IfStatement	if ( member -> get_proc_info ( ) -> birthday <= tree -> get_data ( ) -> get_root_birthday ( ) )		3633750	0					
ANR	3633847	Condition	member -> get_proc_info ( ) -> birthday <= tree -> get_data ( ) -> get_root_birthday ( )	878:6:24056:24142	3633750	0	True				
ANR	3633848	RelationalExpression	member -> get_proc_info ( ) -> birthday <= tree -> get_data ( ) -> get_root_birthday ( )		3633750	0		<=			
ANR	3633849	PtrMemberAccess	member -> get_proc_info ( ) -> birthday		3633750	0					
ANR	3633850	CallExpression	member -> get_proc_info ( )		3633750	0					
ANR	3633851	Callee	member -> get_proc_info		3633750	0					
ANR	3633852	PtrMemberAccess	member -> get_proc_info		3633750	0					
ANR	3633853	Identifier	member		3633750	0					
ANR	3633854	Identifier	get_proc_info		3633750	1					
ANR	3633855	ArgumentList			3633750	1					
ANR	3633856	Identifier	birthday		3633750	1					
ANR	3633857	CallExpression	tree -> get_data ( ) -> get_root_birthday ( )		3633750	1					
ANR	3633858	Callee	tree -> get_data ( ) -> get_root_birthday		3633750	0					
ANR	3633859	PtrMemberAccess	tree -> get_data ( ) -> get_root_birthday		3633750	0					
ANR	3633860	CallExpression	tree -> get_data ( )		3633750	0					
ANR	3633861	Callee	tree -> get_data		3633750	0					
ANR	3633862	PtrMemberAccess	tree -> get_data		3633750	0					
ANR	3633863	Identifier	tree		3633750	0					
ANR	3633864	Identifier	get_data		3633750	1					
ANR	3633865	ArgumentList			3633750	1					
ANR	3633866	Identifier	get_root_birthday		3633750	1					
ANR	3633867	ArgumentList			3633750	1					
ANR	3633868	CompoundStatement		28:2:799:799	3633750	1					
ANR	3633869	ReturnStatement	return ;	883:3:24214:24220	3633750	0	True				
ANR	3633870	Statement	dprintf	885:2:24228:24234	3633750	1	True				
ANR	3633871	Statement	(	885:9:24235:24235	3633750	2	True				
ANR	3633872	Statement	D_ALWAYS	885:10:24236:24243	3633750	3	True				
ANR	3633873	Statement	","	885:18:24244:24244	3633750	4	True				
ANR	3633874	Statement	"""watcher %u found with later birthdate ("""	886:10:24256:24296	3633750	5	True				
ANR	3633875	Statement	PROCAPI_BIRTHDAY_FORMAT	887:14:24312:24334	3633750	6	True				
ANR	3633876	Statement	""") than watched process %u ("""	888:14:24350:24378	3633750	7	True				
ANR	3633877	Statement	PROCAPI_BIRTHDAY_FORMAT	889:14:24394:24416	3633750	8	True				
ANR	3633878	Statement	""")\\n"""	890:14:24432:24436	3633750	9	True				
ANR	3633879	Statement	","	890:19:24437:24437	3633750	10	True				
ANR	3633880	Statement	watcher_pid	891:10:24449:24459	3633750	11	True				
ANR	3633881	Statement	","	891:21:24460:24460	3633750	12	True				
ANR	3633882	Statement	member	892:10:24472:24477	3633750	13	True				
ANR	3633883	Statement	->	892:16:24478:24479	3633750	14	True				
ANR	3633884	Statement	get_proc_info	892:18:24480:24492	3633750	15	True				
ANR	3633885	Statement	(	892:31:24493:24493	3633750	16	True				
ANR	3633886	Statement	)	892:32:24494:24494	3633750	17	True				
ANR	3633887	Statement	->	892:33:24495:24496	3633750	18	True				
ANR	3633888	Statement	birthday	892:35:24497:24504	3633750	19	True				
ANR	3633889	Statement	","	892:43:24505:24505	3633750	20	True				
ANR	3633890	Statement	tree	893:10:24517:24520	3633750	21	True				
ANR	3633891	Statement	->	893:14:24521:24522	3633750	22	True				
ANR	3633892	Statement	get_data	893:16:24523:24530	3633750	23	True				
ANR	3633893	Statement	(	893:24:24531:24531	3633750	24	True				
ANR	3633894	Statement	)	893:25:24532:24532	3633750	25	True				
ANR	3633895	Statement	->	893:26:24533:24534	3633750	26	True				
ANR	3633896	Statement	get_root_pid	893:28:24535:24546	3633750	27	True				
ANR	3633897	Statement	(	893:40:24547:24547	3633750	28	True				
ANR	3633898	Statement	)	893:41:24548:24548	3633750	29	True				
ANR	3633899	Statement	","	893:42:24549:24549	3633750	30	True				
ANR	3633900	Statement	tree	894:10:24561:24564	3633750	31	True				
ANR	3633901	Statement	->	894:14:24565:24566	3633750	32	True				
ANR	3633902	Statement	get_data	894:16:24567:24574	3633750	33	True				
ANR	3633903	Statement	(	894:24:24575:24575	3633750	34	True				
ANR	3633904	Statement	)	894:25:24576:24576	3633750	35	True				
ANR	3633905	Statement	->	894:26:24577:24578	3633750	36	True				
ANR	3633906	Statement	get_root_birthday	894:28:24579:24595	3633750	37	True				
ANR	3633907	Statement	(	894:45:24596:24596	3633750	38	True				
ANR	3633908	Statement	)	894:46:24597:24597	3633750	39	True				
ANR	3633909	Statement	)	894:47:24598:24598	3633750	40	True				
ANR	3633910	ExpressionStatement		894:48:24599:24599	3633750	41	True				
ANR	3633911	IfStatement	if ( m_except_if_pid_dies && tree -> get_parent ( ) == NULL )		3633750	7					
ANR	3633912	Condition	m_except_if_pid_dies && tree -> get_parent ( ) == NULL	902:5:24850:24899	3633750	0	True				
ANR	3633913	AndExpression	m_except_if_pid_dies && tree -> get_parent ( ) == NULL		3633750	0		&&			
ANR	3633914	Identifier	m_except_if_pid_dies		3633750	0					
ANR	3633915	EqualityExpression	tree -> get_parent ( ) == NULL		3633750	1		==			
ANR	3633916	CallExpression	tree -> get_parent ( )		3633750	0					
ANR	3633917	Callee	tree -> get_parent		3633750	0					
ANR	3633918	PtrMemberAccess	tree -> get_parent		3633750	0					
ANR	3633919	Identifier	tree		3633750	0					
ANR	3633920	Identifier	get_parent		3633750	1					
ANR	3633921	ArgumentList			3633750	1					
ANR	3633922	Identifier	NULL		3633750	1					
ANR	3633923	CompoundStatement		50:57:1554:1554	3633750	1					
ANR	3633924	ExpressionStatement	"EXCEPT ( ""Watcher pid %lu exited so procd is exiting. Bye."" , ( unsigned long ) watcher_pid )"	903:2:24906:24995	3633750	0	True				
ANR	3633925	CallExpression	"EXCEPT ( ""Watcher pid %lu exited so procd is exiting. Bye."" , ( unsigned long ) watcher_pid )"		3633750	0					
ANR	3633926	Callee	EXCEPT		3633750	0					
ANR	3633927	Identifier	EXCEPT		3633750	0					
ANR	3633928	ArgumentList	"""Watcher pid %lu exited so procd is exiting. Bye."""		3633750	1					
ANR	3633929	Argument	"""Watcher pid %lu exited so procd is exiting. Bye."""		3633750	0					
ANR	3633930	PrimaryExpression	"""Watcher pid %lu exited so procd is exiting. Bye."""		3633750	0					
ANR	3633931	Argument	( unsigned long ) watcher_pid		3633750	1					
ANR	3633932	CastExpression	( unsigned long ) watcher_pid		3633750	0					
ANR	3633933	CastTarget	unsigned long		3633750	0					
ANR	3633934	Identifier	watcher_pid		3633750	1					
ANR	3633935	ExpressionStatement	ASSERT ( tree -> get_parent ( ) != NULL )	906:1:25001:25035	3633750	8	True				
ANR	3633936	CallExpression	ASSERT ( tree -> get_parent ( ) != NULL )		3633750	0					
ANR	3633937	Callee	ASSERT		3633750	0					
ANR	3633938	Identifier	ASSERT		3633750	0					
ANR	3633939	ArgumentList	tree -> get_parent ( ) != NULL		3633750	1					
ANR	3633940	Argument	tree -> get_parent ( ) != NULL		3633750	0					
ANR	3633941	EqualityExpression	tree -> get_parent ( ) != NULL		3633750	0		!=			
ANR	3633942	CallExpression	tree -> get_parent ( )		3633750	0					
ANR	3633943	Callee	tree -> get_parent		3633750	0					
ANR	3633944	PtrMemberAccess	tree -> get_parent		3633750	0					
ANR	3633945	Identifier	tree		3633750	0					
ANR	3633946	Identifier	get_parent		3633750	1					
ANR	3633947	ArgumentList			3633750	1					
ANR	3633948	Identifier	NULL		3633750	1					
ANR	3633949	IdentifierDeclStatement	pid_t root_pid = tree -> get_data ( ) -> get_root_pid ( ) ;	907:1:25038:25087	3633750	9	True				
ANR	3633950	IdentifierDecl	root_pid = tree -> get_data ( ) -> get_root_pid ( )		3633750	0					
ANR	3633951	IdentifierDeclType	pid_t		3633750	0					
ANR	3633952	Identifier	root_pid		3633750	1					
ANR	3633953	AssignmentExpression	root_pid = tree -> get_data ( ) -> get_root_pid ( )		3633750	2		=			
ANR	3633954	Identifier	root_pid		3633750	0					
ANR	3633955	CallExpression	tree -> get_data ( ) -> get_root_pid ( )		3633750	1					
ANR	3633956	Callee	tree -> get_data ( ) -> get_root_pid		3633750	0					
ANR	3633957	PtrMemberAccess	tree -> get_data ( ) -> get_root_pid		3633750	0					
ANR	3633958	CallExpression	tree -> get_data ( )		3633750	0					
ANR	3633959	Callee	tree -> get_data		3633750	0					
ANR	3633960	PtrMemberAccess	tree -> get_data		3633750	0					
ANR	3633961	Identifier	tree		3633750	0					
ANR	3633962	Identifier	get_data		3633750	1					
ANR	3633963	ArgumentList			3633750	1					
ANR	3633964	Identifier	get_root_pid		3633750	1					
ANR	3633965	ArgumentList			3633750	1					
ANR	3633966	ExpressionStatement	unregister_subfamily ( tree )	908:1:25090:25116	3633750	10	True				
ANR	3633967	CallExpression	unregister_subfamily ( tree )		3633750	0					
ANR	3633968	Callee	unregister_subfamily		3633750	0					
ANR	3633969	Identifier	unregister_subfamily		3633750	0					
ANR	3633970	ArgumentList	tree		3633750	1					
ANR	3633971	Argument	tree		3633750	0					
ANR	3633972	Identifier	tree		3633750	0					
ANR	3633973	ExpressionStatement	"dprintf ( D_ALWAYS , ""watcher %u of family with root %u has died; family removed\\n"" , watcher_pid , root_pid )"	910:1:25120:25251	3633750	11	True				
ANR	3633974	CallExpression	"dprintf ( D_ALWAYS , ""watcher %u of family with root %u has died; family removed\\n"" , watcher_pid , root_pid )"		3633750	0					
ANR	3633975	Callee	dprintf		3633750	0					
ANR	3633976	Identifier	dprintf		3633750	0					
ANR	3633977	ArgumentList	D_ALWAYS		3633750	1					
ANR	3633978	Argument	D_ALWAYS		3633750	0					
ANR	3633979	Identifier	D_ALWAYS		3633750	0					
ANR	3633980	Argument	"""watcher %u of family with root %u has died; family removed\\n"""		3633750	1					
ANR	3633981	PrimaryExpression	"""watcher %u of family with root %u has died; family removed\\n"""		3633750	0					
ANR	3633982	Argument	watcher_pid		3633750	2					
ANR	3633983	Identifier	watcher_pid		3633750	0					
ANR	3633984	Argument	root_pid		3633750	3					
ANR	3633985	Identifier	root_pid		3633750	0					
ANR	3633986	ReturnType	void		3633750	1					
ANR	3633987	Identifier	ProcFamilyMonitor :: delete_unwatched_families		3633750	2					
ANR	3633988	ParameterList	Tree < ProcFamily * > * tree		3633750	3					
ANR	3633989	Parameter	Tree < ProcFamily * > * tree	852:45:23322:23344	3633750	0	True				
ANR	3633990	ParameterType	Tree < ProcFamily * > *		3633750	0					
ANR	3633991	Identifier	tree		3633750	1					
ANR	3633992	CFGEntryNode	ENTRY		3633750		True				
ANR	3633993	CFGExitNode	EXIT		3633750		True				
ANR	3633994	Symbol	* tree -> get_data		3633750						
ANR	3633995	Symbol	watcher_pid		3633750						
ANR	3633996	Symbol	tree -> get_data		3633750						
ANR	3633997	Symbol	tree -> get_data ( ) -> get_root_birthday		3633750						
ANR	3633998	Symbol	child -> get_sibling		3633750						
ANR	3633999	Symbol	member -> get_proc_info		3633750						
ANR	3634000	Symbol	tree -> get_data ( ) -> get_root_pid		3633750						
ANR	3634001	Symbol	* * member		3633750						
ANR	3634002	Symbol	m_member_table		3633750						
ANR	3634003	Symbol	* * tree		3633750						
ANR	3634004	Symbol	member		3633750						
ANR	3634005	Symbol	tree -> get_child		3633750						
ANR	3634006	Symbol	ret		3633750						
ANR	3634007	Symbol	* child		3633750						
ANR	3634008	Symbol	NULL		3633750						
ANR	3634009	Symbol	m_except_if_pid_dies		3633750						
ANR	3634010	Symbol	tree		3633750						
ANR	3634011	Symbol	D_ALWAYS		3633750						
ANR	3634012	Symbol	tree -> get_data ( ) -> get_watcher_pid		3633750						
ANR	3634013	Symbol	tree -> get_parent		3633750						
ANR	3634014	Symbol	* member		3633750						
ANR	3634015	Symbol	* tree		3633750						
ANR	3634016	Symbol	m_member_table . lookup		3633750						
ANR	3634017	Symbol	* member -> get_proc_info		3633750						
ANR	3634018	Symbol	root_pid		3633750						
ANR	3634019	Symbol	next_child		3633750						
ANR	3634020	Symbol	child		3633750						
ANR	3634021	Symbol	member -> get_proc_info ( ) -> birthday		3633750						
ANR	3634022	Function	ProcFamilyMonitor :: unregister_subfamily	916:0:25256:26463							
ANR	3634023	FunctionDef	ProcFamilyMonitor :: unregister_subfamily (Tree < ProcFamily * > * tree)		3634022	0					
ANR	3634024	CompoundStatement		918:0:25326:26463	3634022	0					
ANR	3634025	ExpressionStatement	m_pid_tracker -> remove_mapping ( tree -> get_data ( ) )	922:1:25431:25478	3634022	0	True				
ANR	3634026	CallExpression	m_pid_tracker -> remove_mapping ( tree -> get_data ( ) )		3634022	0					
ANR	3634027	Callee	m_pid_tracker -> remove_mapping		3634022	0					
ANR	3634028	PtrMemberAccess	m_pid_tracker -> remove_mapping		3634022	0					
ANR	3634029	Identifier	m_pid_tracker		3634022	0					
ANR	3634030	Identifier	remove_mapping		3634022	1					
ANR	3634031	ArgumentList	tree -> get_data ( )		3634022	1					
ANR	3634032	Argument	tree -> get_data ( )		3634022	0					
ANR	3634033	CallExpression	tree -> get_data ( )		3634022	0					
ANR	3634034	Callee	tree -> get_data		3634022	0					
ANR	3634035	PtrMemberAccess	tree -> get_data		3634022	0					
ANR	3634036	Identifier	tree		3634022	0					
ANR	3634037	Identifier	get_data		3634022	1					
ANR	3634038	ArgumentList			3634022	1					
ANR	3634039	IfStatement	if ( m_group_tracker != NULL )		3634022	1					
ANR	3634040	Condition	m_group_tracker != NULL	924:5:25504:25526	3634022	0	True				
ANR	3634041	EqualityExpression	m_group_tracker != NULL		3634022	0		!=			
ANR	3634042	Identifier	m_group_tracker		3634022	0					
ANR	3634043	Identifier	NULL		3634022	1					
ANR	3634044	CompoundStatement		7:30:202:202	3634022	1					
ANR	3634045	ExpressionStatement	m_group_tracker -> remove_mapping ( tree -> get_data ( ) )	925:2:25533:25582	3634022	0	True				
ANR	3634046	CallExpression	m_group_tracker -> remove_mapping ( tree -> get_data ( ) )		3634022	0					
ANR	3634047	Callee	m_group_tracker -> remove_mapping		3634022	0					
ANR	3634048	PtrMemberAccess	m_group_tracker -> remove_mapping		3634022	0					
ANR	3634049	Identifier	m_group_tracker		3634022	0					
ANR	3634050	Identifier	remove_mapping		3634022	1					
ANR	3634051	ArgumentList	tree -> get_data ( )		3634022	1					
ANR	3634052	Argument	tree -> get_data ( )		3634022	0					
ANR	3634053	CallExpression	tree -> get_data ( )		3634022	0					
ANR	3634054	Callee	tree -> get_data		3634022	0					
ANR	3634055	PtrMemberAccess	tree -> get_data		3634022	0					
ANR	3634056	Identifier	tree		3634022	0					
ANR	3634057	Identifier	get_data		3634022	1					
ANR	3634058	ArgumentList			3634022	1					
ANR	3634059	IfStatement	if ( m_cgroup_tracker != NULL )		3634022	2					
ANR	3634060	Condition	m_cgroup_tracker != NULL	929:5:25631:25654	3634022	0	True				
ANR	3634061	EqualityExpression	m_cgroup_tracker != NULL		3634022	0		!=			
ANR	3634062	Identifier	m_cgroup_tracker		3634022	0					
ANR	3634063	Identifier	NULL		3634022	1					
ANR	3634064	CompoundStatement		12:31:330:330	3634022	1					
ANR	3634065	ExpressionStatement	m_cgroup_tracker -> remove_mapping ( tree -> get_data ( ) )	930:2:25661:25711	3634022	0	True				
ANR	3634066	CallExpression	m_cgroup_tracker -> remove_mapping ( tree -> get_data ( ) )		3634022	0					
ANR	3634067	Callee	m_cgroup_tracker -> remove_mapping		3634022	0					
ANR	3634068	PtrMemberAccess	m_cgroup_tracker -> remove_mapping		3634022	0					
ANR	3634069	Identifier	m_cgroup_tracker		3634022	0					
ANR	3634070	Identifier	remove_mapping		3634022	1					
ANR	3634071	ArgumentList	tree -> get_data ( )		3634022	1					
ANR	3634072	Argument	tree -> get_data ( )		3634022	0					
ANR	3634073	CallExpression	tree -> get_data ( )		3634022	0					
ANR	3634074	Callee	tree -> get_data		3634022	0					
ANR	3634075	PtrMemberAccess	tree -> get_data		3634022	0					
ANR	3634076	Identifier	tree		3634022	0					
ANR	3634077	Identifier	get_data		3634022	1					
ANR	3634078	ArgumentList			3634022	1					
ANR	3634079	ExpressionStatement	m_login_tracker -> remove_mapping ( tree -> get_data ( ) )	933:1:25724:25773	3634022	3	True				
ANR	3634080	CallExpression	m_login_tracker -> remove_mapping ( tree -> get_data ( ) )		3634022	0					
ANR	3634081	Callee	m_login_tracker -> remove_mapping		3634022	0					
ANR	3634082	PtrMemberAccess	m_login_tracker -> remove_mapping		3634022	0					
ANR	3634083	Identifier	m_login_tracker		3634022	0					
ANR	3634084	Identifier	remove_mapping		3634022	1					
ANR	3634085	ArgumentList	tree -> get_data ( )		3634022	1					
ANR	3634086	Argument	tree -> get_data ( )		3634022	0					
ANR	3634087	CallExpression	tree -> get_data ( )		3634022	0					
ANR	3634088	Callee	tree -> get_data		3634022	0					
ANR	3634089	PtrMemberAccess	tree -> get_data		3634022	0					
ANR	3634090	Identifier	tree		3634022	0					
ANR	3634091	Identifier	get_data		3634022	1					
ANR	3634092	ArgumentList			3634022	1					
ANR	3634093	ExpressionStatement	m_environment_tracker -> remove_mapping ( tree -> get_data ( ) )	934:1:25776:25831	3634022	4	True				
ANR	3634094	CallExpression	m_environment_tracker -> remove_mapping ( tree -> get_data ( ) )		3634022	0					
ANR	3634095	Callee	m_environment_tracker -> remove_mapping		3634022	0					
ANR	3634096	PtrMemberAccess	m_environment_tracker -> remove_mapping		3634022	0					
ANR	3634097	Identifier	m_environment_tracker		3634022	0					
ANR	3634098	Identifier	remove_mapping		3634022	1					
ANR	3634099	ArgumentList	tree -> get_data ( )		3634022	1					
ANR	3634100	Argument	tree -> get_data ( )		3634022	0					
ANR	3634101	CallExpression	tree -> get_data ( )		3634022	0					
ANR	3634102	Callee	tree -> get_data		3634022	0					
ANR	3634103	PtrMemberAccess	tree -> get_data		3634022	0					
ANR	3634104	Identifier	tree		3634022	0					
ANR	3634105	Identifier	get_data		3634022	1					
ANR	3634106	ArgumentList			3634022	1					
ANR	3634107	IdentifierDeclStatement	int ret = m_family_table . remove ( tree -> get_data ( ) -> get_root_pid ( ) ) ;	938:1:25891:25956	3634022	5	True				
ANR	3634108	IdentifierDecl	ret = m_family_table . remove ( tree -> get_data ( ) -> get_root_pid ( ) )		3634022	0					
ANR	3634109	IdentifierDeclType	int		3634022	0					
ANR	3634110	Identifier	ret		3634022	1					
ANR	3634111	AssignmentExpression	ret = m_family_table . remove ( tree -> get_data ( ) -> get_root_pid ( ) )		3634022	2		=			
ANR	3634112	Identifier	ret		3634022	0					
ANR	3634113	CallExpression	m_family_table . remove ( tree -> get_data ( ) -> get_root_pid ( ) )		3634022	1					
ANR	3634114	Callee	m_family_table . remove		3634022	0					
ANR	3634115	MemberAccess	m_family_table . remove		3634022	0					
ANR	3634116	Identifier	m_family_table		3634022	0					
ANR	3634117	Identifier	remove		3634022	1					
ANR	3634118	ArgumentList	tree -> get_data ( ) -> get_root_pid ( )		3634022	1					
ANR	3634119	Argument	tree -> get_data ( ) -> get_root_pid ( )		3634022	0					
ANR	3634120	CallExpression	tree -> get_data ( ) -> get_root_pid ( )		3634022	0					
ANR	3634121	Callee	tree -> get_data ( ) -> get_root_pid		3634022	0					
ANR	3634122	PtrMemberAccess	tree -> get_data ( ) -> get_root_pid		3634022	0					
ANR	3634123	CallExpression	tree -> get_data ( )		3634022	0					
ANR	3634124	Callee	tree -> get_data		3634022	0					
ANR	3634125	PtrMemberAccess	tree -> get_data		3634022	0					
ANR	3634126	Identifier	tree		3634022	0					
ANR	3634127	Identifier	get_data		3634022	1					
ANR	3634128	ArgumentList			3634022	1					
ANR	3634129	Identifier	get_root_pid		3634022	1					
ANR	3634130	ArgumentList			3634022	1					
ANR	3634131	ExpressionStatement	ASSERT ( ret != - 1 )	939:1:25959:25976	3634022	6	True				
ANR	3634132	CallExpression	ASSERT ( ret != - 1 )		3634022	0					
ANR	3634133	Callee	ASSERT		3634022	0					
ANR	3634134	Identifier	ASSERT		3634022	0					
ANR	3634135	ArgumentList	ret != - 1		3634022	1					
ANR	3634136	Argument	ret != - 1		3634022	0					
ANR	3634137	EqualityExpression	ret != - 1		3634022	0		!=			
ANR	3634138	Identifier	ret		3634022	0					
ANR	3634139	UnaryOperationExpression	- 1		3634022	1					
ANR	3634140	UnaryOperator	-		3634022	0					
ANR	3634141	PrimaryExpression	1		3634022	1					
ANR	3634142	ExpressionStatement	ASSERT ( tree -> get_parent ( ) != NULL )	944:1:26074:26108	3634022	7	True				
ANR	3634143	CallExpression	ASSERT ( tree -> get_parent ( ) != NULL )		3634022	0					
ANR	3634144	Callee	ASSERT		3634022	0					
ANR	3634145	Identifier	ASSERT		3634022	0					
ANR	3634146	ArgumentList	tree -> get_parent ( ) != NULL		3634022	1					
ANR	3634147	Argument	tree -> get_parent ( ) != NULL		3634022	0					
ANR	3634148	EqualityExpression	tree -> get_parent ( ) != NULL		3634022	0		!=			
ANR	3634149	CallExpression	tree -> get_parent ( )		3634022	0					
ANR	3634150	Callee	tree -> get_parent		3634022	0					
ANR	3634151	PtrMemberAccess	tree -> get_parent		3634022	0					
ANR	3634152	Identifier	tree		3634022	0					
ANR	3634153	Identifier	get_parent		3634022	1					
ANR	3634154	ArgumentList			3634022	1					
ANR	3634155	Identifier	NULL		3634022	1					
ANR	3634156	ExpressionStatement	tree -> get_data ( ) -> fold_into_parent ( tree -> get_parent ( ) -> get_data ( ) )	945:1:26111:26177	3634022	8	True				
ANR	3634157	CallExpression	tree -> get_data ( ) -> fold_into_parent ( tree -> get_parent ( ) -> get_data ( ) )		3634022	0					
ANR	3634158	Callee	tree -> get_data ( ) -> fold_into_parent		3634022	0					
ANR	3634159	PtrMemberAccess	tree -> get_data ( ) -> fold_into_parent		3634022	0					
ANR	3634160	CallExpression	tree -> get_data ( )		3634022	0					
ANR	3634161	Callee	tree -> get_data		3634022	0					
ANR	3634162	PtrMemberAccess	tree -> get_data		3634022	0					
ANR	3634163	Identifier	tree		3634022	0					
ANR	3634164	Identifier	get_data		3634022	1					
ANR	3634165	ArgumentList			3634022	1					
ANR	3634166	Identifier	fold_into_parent		3634022	1					
ANR	3634167	ArgumentList	tree -> get_parent ( ) -> get_data ( )		3634022	1					
ANR	3634168	Argument	tree -> get_parent ( ) -> get_data ( )		3634022	0					
ANR	3634169	CallExpression	tree -> get_parent ( ) -> get_data ( )		3634022	0					
ANR	3634170	Callee	tree -> get_parent ( ) -> get_data		3634022	0					
ANR	3634171	PtrMemberAccess	tree -> get_parent ( ) -> get_data		3634022	0					
ANR	3634172	CallExpression	tree -> get_parent ( )		3634022	0					
ANR	3634173	Callee	tree -> get_parent		3634022	0					
ANR	3634174	PtrMemberAccess	tree -> get_parent		3634022	0					
ANR	3634175	Identifier	tree		3634022	0					
ANR	3634176	Identifier	get_parent		3634022	1					
ANR	3634177	ArgumentList			3634022	1					
ANR	3634178	Identifier	get_data		3634022	1					
ANR	3634179	ArgumentList			3634022	1					
ANR	3634180	ExpressionStatement	tree -> remove ( )	950:1:26274:26288	3634022	9	True				
ANR	3634181	CallExpression	tree -> remove ( )		3634022	0					
ANR	3634182	Callee	tree -> remove		3634022	0					
ANR	3634183	PtrMemberAccess	tree -> remove		3634022	0					
ANR	3634184	Identifier	tree		3634022	0					
ANR	3634185	Identifier	remove		3634022	1					
ANR	3634186	ArgumentList			3634022	1					
ANR	3634187	Statement	delete	956:1:26424:26429	3634022	10	True				
ANR	3634188	ExpressionStatement	tree -> get_data ( )	956:8:26431:26447	3634022	11	True				
ANR	3634189	CallExpression	tree -> get_data ( )		3634022	0					
ANR	3634190	Callee	tree -> get_data		3634022	0					
ANR	3634191	PtrMemberAccess	tree -> get_data		3634022	0					
ANR	3634192	Identifier	tree		3634022	0					
ANR	3634193	Identifier	get_data		3634022	1					
ANR	3634194	ArgumentList			3634022	1					
ANR	3634195	Statement	delete	957:1:26450:26455	3634022	12	True				
ANR	3634196	ExpressionStatement	tree	957:8:26457:26461	3634022	13	True				
ANR	3634197	Identifier	tree		3634022	0					
ANR	3634198	ReturnType	void		3634022	1					
ANR	3634199	Identifier	ProcFamilyMonitor :: unregister_subfamily		3634022	2					
ANR	3634200	ParameterList	Tree < ProcFamily * > * tree		3634022	3					
ANR	3634201	Parameter	Tree < ProcFamily * > * tree	917:40:25301:25323	3634022	0	True				
ANR	3634202	ParameterType	Tree < ProcFamily * > *		3634022	0					
ANR	3634203	Identifier	tree		3634022	1					
ANR	3634204	CFGEntryNode	ENTRY		3634022		True				
ANR	3634205	CFGExitNode	EXIT		3634022		True				
ANR	3634206	Symbol	ret		3634022						
ANR	3634207	Symbol	* tree -> get_data		3634022						
ANR	3634208	Symbol	NULL		3634022						
ANR	3634209	Symbol	tree		3634022						
ANR	3634210	Symbol	tree -> get_data		3634022						
ANR	3634211	Symbol	tree -> get_parent		3634022						
ANR	3634212	Symbol	m_family_table . remove		3634022						
ANR	3634213	Symbol	m_group_tracker		3634022						
ANR	3634214	Symbol	* tree		3634022						
ANR	3634215	Symbol	tree -> get_data ( ) -> get_root_pid		3634022						
ANR	3634216	Symbol	m_login_tracker		3634022						
ANR	3634217	Symbol	tree -> get_parent ( ) -> get_data		3634022						
ANR	3634218	Symbol	* tree -> get_parent		3634022						
ANR	3634219	Symbol	m_family_table		3634022						
ANR	3634220	Symbol	* * tree		3634022						
ANR	3634221	Symbol	m_environment_tracker		3634022						
ANR	3634222	Symbol	m_cgroup_tracker		3634022						
ANR	3634223	Symbol	m_pid_tracker		3634022						
ANR	3634224	Function	ProcFamilyMonitor :: delete_all_families	960:0:26466:26784							
ANR	3634225	FunctionDef	ProcFamilyMonitor :: delete_all_families (Tree < ProcFamily * > * tree)		3634224	0					
ANR	3634226	CompoundStatement		962:0:26535:26784	3634224	0					
ANR	3634227	IdentifierDeclStatement	Tree < ProcFamily * > * child = tree -> get_child ( ) ;	965:1:26566:26610	3634224	0	True				
ANR	3634228	IdentifierDecl	* child = tree -> get_child ( )		3634224	0					
ANR	3634229	IdentifierDeclType	Tree < ProcFamily * > *		3634224	0					
ANR	3634230	Identifier	child		3634224	1					
ANR	3634231	AssignmentExpression	* child = tree -> get_child ( )		3634224	2		=			
ANR	3634232	Identifier	child		3634224	0					
ANR	3634233	CallExpression	tree -> get_child ( )		3634224	1					
ANR	3634234	Callee	tree -> get_child		3634224	0					
ANR	3634235	PtrMemberAccess	tree -> get_child		3634224	0					
ANR	3634236	Identifier	tree		3634224	0					
ANR	3634237	Identifier	get_child		3634224	1					
ANR	3634238	ArgumentList			3634224	1					
ANR	3634239	WhileStatement	while ( child != NULL )		3634224	1					
ANR	3634240	Condition	child != NULL	966:8:26620:26632	3634224	0	True				
ANR	3634241	EqualityExpression	child != NULL		3634224	0		!=			
ANR	3634242	Identifier	child		3634224	0					
ANR	3634243	Identifier	NULL		3634224	1					
ANR	3634244	CompoundStatement		5:23:99:99	3634224	1					
ANR	3634245	ExpressionStatement	delete_all_families ( child )	967:2:26639:26665	3634224	0	True				
ANR	3634246	CallExpression	delete_all_families ( child )		3634224	0					
ANR	3634247	Callee	delete_all_families		3634224	0					
ANR	3634248	Identifier	delete_all_families		3634224	0					
ANR	3634249	ArgumentList	child		3634224	1					
ANR	3634250	Argument	child		3634224	0					
ANR	3634251	Identifier	child		3634224	0					
ANR	3634252	ExpressionStatement	child = child -> get_sibling ( )	968:2:26669:26697	3634224	1	True				
ANR	3634253	AssignmentExpression	child = child -> get_sibling ( )		3634224	0		=			
ANR	3634254	Identifier	child		3634224	0					
ANR	3634255	CallExpression	child -> get_sibling ( )		3634224	1					
ANR	3634256	Callee	child -> get_sibling		3634224	0					
ANR	3634257	PtrMemberAccess	child -> get_sibling		3634224	0					
ANR	3634258	Identifier	child		3634224	0					
ANR	3634259	Identifier	get_sibling		3634224	1					
ANR	3634260	ArgumentList			3634224	1					
ANR	3634261	Statement	delete	973:1:26759:26764	3634224	2	True				
ANR	3634262	ExpressionStatement	tree -> get_data ( )	973:8:26766:26782	3634224	3	True				
ANR	3634263	CallExpression	tree -> get_data ( )		3634224	0					
ANR	3634264	Callee	tree -> get_data		3634224	0					
ANR	3634265	PtrMemberAccess	tree -> get_data		3634224	0					
ANR	3634266	Identifier	tree		3634224	0					
ANR	3634267	Identifier	get_data		3634224	1					
ANR	3634268	ArgumentList			3634224	1					
ANR	3634269	ReturnType	void		3634224	1					
ANR	3634270	Identifier	ProcFamilyMonitor :: delete_all_families		3634224	2					
ANR	3634271	ParameterList	Tree < ProcFamily * > * tree		3634224	3					
ANR	3634272	Parameter	Tree < ProcFamily * > * tree	961:39:26510:26532	3634224	0	True				
ANR	3634273	ParameterType	Tree < ProcFamily * > *		3634224	0					
ANR	3634274	Identifier	tree		3634224	1					
ANR	3634275	CFGEntryNode	ENTRY		3634224		True				
ANR	3634276	CFGExitNode	EXIT		3634224		True				
ANR	3634277	Symbol	* tree		3634224						
ANR	3634278	Symbol	* child		3634224						
ANR	3634279	Symbol	NULL		3634224						
ANR	3634280	Symbol	tree		3634224						
ANR	3634281	Symbol	tree -> get_child		3634224						
ANR	3634282	Symbol	child -> get_sibling		3634224						
ANR	3634283	Symbol	child		3634224						
ANR	3634284	Function	ProcFamilyMonitor :: dump	976:0:26787:27366							
ANR	3634285	FunctionDef	"ProcFamilyMonitor :: dump (pid_t pid , std :: vector < ProcFamilyDump > & vec)"		3634284	0					
ANR	3634286	CompoundStatement		978:0:26876:27366	3634284	0					
ANR	3634287	IdentifierDeclStatement	"Tree < ProcFamily * > * tree = lookup_family ( pid , true ) ;"	982:1:27008:27058	3634284	0	True				
ANR	3634288	IdentifierDecl	"* tree = lookup_family ( pid , true )"		3634284	0					
ANR	3634289	IdentifierDeclType	Tree < ProcFamily * > *		3634284	0					
ANR	3634290	Identifier	tree		3634284	1					
ANR	3634291	AssignmentExpression	"* tree = lookup_family ( pid , true )"		3634284	2		=			
ANR	3634292	Identifier	tree		3634284	0					
ANR	3634293	CallExpression	"lookup_family ( pid , true )"		3634284	1					
ANR	3634294	Callee	lookup_family		3634284	0					
ANR	3634295	Identifier	lookup_family		3634284	0					
ANR	3634296	ArgumentList	pid		3634284	1					
ANR	3634297	Argument	pid		3634284	0					
ANR	3634298	Identifier	pid		3634284	0					
ANR	3634299	Argument	true		3634284	1					
ANR	3634300	Identifier	true		3634284	0					
ANR	3634301	IfStatement	if ( tree == NULL )		3634284	1					
ANR	3634302	Condition	tree == NULL	983:5:27065:27076	3634284	0	True				
ANR	3634303	EqualityExpression	tree == NULL		3634284	0		==			
ANR	3634304	Identifier	tree		3634284	0					
ANR	3634305	Identifier	NULL		3634284	1					
ANR	3634306	CompoundStatement		6:19:202:202	3634284	1					
ANR	3634307	ExpressionStatement	"dprintf ( D_ALWAYS , ""output failure: family with root %u not found\\n"" , pid )"	984:2:27083:27176	3634284	0	True				
ANR	3634308	CallExpression	"dprintf ( D_ALWAYS , ""output failure: family with root %u not found\\n"" , pid )"		3634284	0					
ANR	3634309	Callee	dprintf		3634284	0					
ANR	3634310	Identifier	dprintf		3634284	0					
ANR	3634311	ArgumentList	D_ALWAYS		3634284	1					
ANR	3634312	Argument	D_ALWAYS		3634284	0					
ANR	3634313	Identifier	D_ALWAYS		3634284	0					
ANR	3634314	Argument	"""output failure: family with root %u not found\\n"""		3634284	1					
ANR	3634315	PrimaryExpression	"""output failure: family with root %u not found\\n"""		3634284	0					
ANR	3634316	Argument	pid		3634284	2					
ANR	3634317	Identifier	pid		3634284	0					
ANR	3634318	ReturnStatement	return PROC_FAMILY_ERROR_FAMILY_NOT_FOUND ;	987:2:27180:27221	3634284	1	True				
ANR	3634319	Identifier	PROC_FAMILY_ERROR_FAMILY_NOT_FOUND		3634284	0					
ANR	3634320	ExpressionStatement	vec . clear ( )	992:1:27299:27310	3634284	2	True				
ANR	3634321	CallExpression	vec . clear ( )		3634284	0					
ANR	3634322	Callee	vec . clear		3634284	0					
ANR	3634323	MemberAccess	vec . clear		3634284	0					
ANR	3634324	Identifier	vec		3634284	0					
ANR	3634325	Identifier	clear		3634284	1					
ANR	3634326	ArgumentList			3634284	1					
ANR	3634327	ExpressionStatement	"dump ( tree , vec )"	993:1:27313:27328	3634284	3	True				
ANR	3634328	CallExpression	"dump ( tree , vec )"		3634284	0					
ANR	3634329	Callee	dump		3634284	0					
ANR	3634330	Identifier	dump		3634284	0					
ANR	3634331	ArgumentList	tree		3634284	1					
ANR	3634332	Argument	tree		3634284	0					
ANR	3634333	Identifier	tree		3634284	0					
ANR	3634334	Argument	vec		3634284	1					
ANR	3634335	Identifier	vec		3634284	0					
ANR	3634336	ReturnStatement	return PROC_FAMILY_ERROR_SUCCESS ;	995:1:27332:27364	3634284	4	True				
ANR	3634337	Identifier	PROC_FAMILY_ERROR_SUCCESS		3634284	0					
ANR	3634338	ReturnType	proc_family_error_t		3634284	1					
ANR	3634339	Identifier	ProcFamilyMonitor :: dump		3634284	2					
ANR	3634340	ParameterList	"pid_t pid , std :: vector < ProcFamilyDump > & vec"		3634284	3					
ANR	3634341	Parameter	pid_t pid	977:24:26831:26839	3634284	0	True				
ANR	3634342	ParameterType	pid_t		3634284	0					
ANR	3634343	Identifier	pid		3634284	1					
ANR	3634344	Parameter	std :: vector < ProcFamilyDump > & vec	977:35:26842:26873	3634284	1	True				
ANR	3634345	ParameterType	std :: vector < ProcFamilyDump > &		3634284	0					
ANR	3634346	Identifier	vec		3634284	1					
ANR	3634347	CFGEntryNode	ENTRY		3634284		True				
ANR	3634348	CFGExitNode	EXIT		3634284		True				
ANR	3634349	Symbol	lookup_family		3634284						
ANR	3634350	Symbol	NULL		3634284						
ANR	3634351	Symbol	vec		3634284						
ANR	3634352	Symbol	true		3634284						
ANR	3634353	Symbol	tree		3634284						
ANR	3634354	Symbol	D_ALWAYS		3634284						
ANR	3634355	Symbol	PROC_FAMILY_ERROR_FAMILY_NOT_FOUND		3634284						
ANR	3634356	Symbol	pid		3634284						
ANR	3634357	Symbol	PROC_FAMILY_ERROR_SUCCESS		3634284						
ANR	3634358	Function	ProcFamilyMonitor :: dump	998:0:27369:27985							
ANR	3634359	FunctionDef	"ProcFamilyMonitor :: dump (Tree < ProcFamily * > * tree , std :: vector < ProcFamilyDump > & vec)"		3634358	0					
ANR	3634360	CompoundStatement		1001:0:27481:27985	3634358	0					
ANR	3634361	IdentifierDeclStatement	ProcFamilyDump fam ;	1004:1:27520:27538	3634358	0	True				
ANR	3634362	IdentifierDecl	fam		3634358	0					
ANR	3634363	IdentifierDeclType	ProcFamilyDump		3634358	0					
ANR	3634364	Identifier	fam		3634358	1					
ANR	3634365	ExpressionStatement	fam . parent_root = 0	1005:1:27541:27560	3634358	1	True				
ANR	3634366	AssignmentExpression	fam . parent_root = 0		3634358	0		=			
ANR	3634367	MemberAccess	fam . parent_root		3634358	0					
ANR	3634368	Identifier	fam		3634358	0					
ANR	3634369	Identifier	parent_root		3634358	1					
ANR	3634370	PrimaryExpression	0		3634358	1					
ANR	3634371	IfStatement	if ( tree -> get_parent ( ) != NULL )		3634358	2					
ANR	3634372	Condition	tree -> get_parent ( ) != NULL	1006:5:27567:27592	3634358	0	True				
ANR	3634373	EqualityExpression	tree -> get_parent ( ) != NULL		3634358	0		!=			
ANR	3634374	CallExpression	tree -> get_parent ( )		3634358	0					
ANR	3634375	Callee	tree -> get_parent		3634358	0					
ANR	3634376	PtrMemberAccess	tree -> get_parent		3634358	0					
ANR	3634377	Identifier	tree		3634358	0					
ANR	3634378	Identifier	get_parent		3634358	1					
ANR	3634379	ArgumentList			3634358	1					
ANR	3634380	Identifier	NULL		3634358	1					
ANR	3634381	CompoundStatement		6:33:113:113	3634358	1					
ANR	3634382	ExpressionStatement	fam . parent_root = tree -> get_parent ( ) -> get_data ( ) -> get_root_pid ( )	1007:2:27599:27663	3634358	0	True				
ANR	3634383	AssignmentExpression	fam . parent_root = tree -> get_parent ( ) -> get_data ( ) -> get_root_pid ( )		3634358	0		=			
ANR	3634384	MemberAccess	fam . parent_root		3634358	0					
ANR	3634385	Identifier	fam		3634358	0					
ANR	3634386	Identifier	parent_root		3634358	1					
ANR	3634387	CallExpression	tree -> get_parent ( ) -> get_data ( ) -> get_root_pid ( )		3634358	1					
ANR	3634388	Callee	tree -> get_parent ( ) -> get_data ( ) -> get_root_pid		3634358	0					
ANR	3634389	PtrMemberAccess	tree -> get_parent ( ) -> get_data ( ) -> get_root_pid		3634358	0					
ANR	3634390	CallExpression	tree -> get_parent ( ) -> get_data ( )		3634358	0					
ANR	3634391	Callee	tree -> get_parent ( ) -> get_data		3634358	0					
ANR	3634392	PtrMemberAccess	tree -> get_parent ( ) -> get_data		3634358	0					
ANR	3634393	CallExpression	tree -> get_parent ( )		3634358	0					
ANR	3634394	Callee	tree -> get_parent		3634358	0					
ANR	3634395	PtrMemberAccess	tree -> get_parent		3634358	0					
ANR	3634396	Identifier	tree		3634358	0					
ANR	3634397	Identifier	get_parent		3634358	1					
ANR	3634398	ArgumentList			3634358	1					
ANR	3634399	Identifier	get_data		3634358	1					
ANR	3634400	ArgumentList			3634358	1					
ANR	3634401	Identifier	get_root_pid		3634358	1					
ANR	3634402	ArgumentList			3634358	1					
ANR	3634403	ExpressionStatement	fam . root_pid = tree -> get_data ( ) -> get_root_pid ( )	1009:1:27669:27716	3634358	3	True				
ANR	3634404	AssignmentExpression	fam . root_pid = tree -> get_data ( ) -> get_root_pid ( )		3634358	0		=			
ANR	3634405	MemberAccess	fam . root_pid		3634358	0					
ANR	3634406	Identifier	fam		3634358	0					
ANR	3634407	Identifier	root_pid		3634358	1					
ANR	3634408	CallExpression	tree -> get_data ( ) -> get_root_pid ( )		3634358	1					
ANR	3634409	Callee	tree -> get_data ( ) -> get_root_pid		3634358	0					
ANR	3634410	PtrMemberAccess	tree -> get_data ( ) -> get_root_pid		3634358	0					
ANR	3634411	CallExpression	tree -> get_data ( )		3634358	0					
ANR	3634412	Callee	tree -> get_data		3634358	0					
ANR	3634413	PtrMemberAccess	tree -> get_data		3634358	0					
ANR	3634414	Identifier	tree		3634358	0					
ANR	3634415	Identifier	get_data		3634358	1					
ANR	3634416	ArgumentList			3634358	1					
ANR	3634417	Identifier	get_root_pid		3634358	1					
ANR	3634418	ArgumentList			3634358	1					
ANR	3634419	ExpressionStatement	fam . watcher_pid = tree -> get_data ( ) -> get_watcher_pid ( )	1010:1:27719:27772	3634358	4	True				
ANR	3634420	AssignmentExpression	fam . watcher_pid = tree -> get_data ( ) -> get_watcher_pid ( )		3634358	0		=			
ANR	3634421	MemberAccess	fam . watcher_pid		3634358	0					
ANR	3634422	Identifier	fam		3634358	0					
ANR	3634423	Identifier	watcher_pid		3634358	1					
ANR	3634424	CallExpression	tree -> get_data ( ) -> get_watcher_pid ( )		3634358	1					
ANR	3634425	Callee	tree -> get_data ( ) -> get_watcher_pid		3634358	0					
ANR	3634426	PtrMemberAccess	tree -> get_data ( ) -> get_watcher_pid		3634358	0					
ANR	3634427	CallExpression	tree -> get_data ( )		3634358	0					
ANR	3634428	Callee	tree -> get_data		3634358	0					
ANR	3634429	PtrMemberAccess	tree -> get_data		3634358	0					
ANR	3634430	Identifier	tree		3634358	0					
ANR	3634431	Identifier	get_data		3634358	1					
ANR	3634432	ArgumentList			3634358	1					
ANR	3634433	Identifier	get_watcher_pid		3634358	1					
ANR	3634434	ArgumentList			3634358	1					
ANR	3634435	ExpressionStatement	tree -> get_data ( ) -> dump ( fam )	1011:1:27775:27802	3634358	5	True				
ANR	3634436	CallExpression	tree -> get_data ( ) -> dump ( fam )		3634358	0					
ANR	3634437	Callee	tree -> get_data ( ) -> dump		3634358	0					
ANR	3634438	PtrMemberAccess	tree -> get_data ( ) -> dump		3634358	0					
ANR	3634439	CallExpression	tree -> get_data ( )		3634358	0					
ANR	3634440	Callee	tree -> get_data		3634358	0					
ANR	3634441	PtrMemberAccess	tree -> get_data		3634358	0					
ANR	3634442	Identifier	tree		3634358	0					
ANR	3634443	Identifier	get_data		3634358	1					
ANR	3634444	ArgumentList			3634358	1					
ANR	3634445	Identifier	dump		3634358	1					
ANR	3634446	ArgumentList	fam		3634358	1					
ANR	3634447	Argument	fam		3634358	0					
ANR	3634448	Identifier	fam		3634358	0					
ANR	3634449	ExpressionStatement	vec . push_back ( fam )	1012:1:27805:27823	3634358	6	True				
ANR	3634450	CallExpression	vec . push_back ( fam )		3634358	0					
ANR	3634451	Callee	vec . push_back		3634358	0					
ANR	3634452	MemberAccess	vec . push_back		3634358	0					
ANR	3634453	Identifier	vec		3634358	0					
ANR	3634454	Identifier	push_back		3634358	1					
ANR	3634455	ArgumentList	fam		3634358	1					
ANR	3634456	Argument	fam		3634358	0					
ANR	3634457	Identifier	fam		3634358	0					
ANR	3634458	IdentifierDeclStatement	Tree < ProcFamily * > * child = tree -> get_child ( ) ;	1016:1:27859:27903	3634358	7	True				
ANR	3634459	IdentifierDecl	* child = tree -> get_child ( )		3634358	0					
ANR	3634460	IdentifierDeclType	Tree < ProcFamily * > *		3634358	0					
ANR	3634461	Identifier	child		3634358	1					
ANR	3634462	AssignmentExpression	* child = tree -> get_child ( )		3634358	2		=			
ANR	3634463	Identifier	child		3634358	0					
ANR	3634464	CallExpression	tree -> get_child ( )		3634358	1					
ANR	3634465	Callee	tree -> get_child		3634358	0					
ANR	3634466	PtrMemberAccess	tree -> get_child		3634358	0					
ANR	3634467	Identifier	tree		3634358	0					
ANR	3634468	Identifier	get_child		3634358	1					
ANR	3634469	ArgumentList			3634358	1					
ANR	3634470	WhileStatement	while ( child != NULL )		3634358	8					
ANR	3634471	Condition	child != NULL	1017:8:27913:27925	3634358	0	True				
ANR	3634472	EqualityExpression	child != NULL		3634358	0		!=			
ANR	3634473	Identifier	child		3634358	0					
ANR	3634474	Identifier	NULL		3634358	1					
ANR	3634475	CompoundStatement		17:23:446:446	3634358	1					
ANR	3634476	ExpressionStatement	"dump ( child , vec )"	1018:2:27932:27948	3634358	0	True				
ANR	3634477	CallExpression	"dump ( child , vec )"		3634358	0					
ANR	3634478	Callee	dump		3634358	0					
ANR	3634479	Identifier	dump		3634358	0					
ANR	3634480	ArgumentList	child		3634358	1					
ANR	3634481	Argument	child		3634358	0					
ANR	3634482	Identifier	child		3634358	0					
ANR	3634483	Argument	vec		3634358	1					
ANR	3634484	Identifier	vec		3634358	0					
ANR	3634485	ExpressionStatement	child = child -> get_sibling ( )	1019:2:27952:27980	3634358	1	True				
ANR	3634486	AssignmentExpression	child = child -> get_sibling ( )		3634358	0		=			
ANR	3634487	Identifier	child		3634358	0					
ANR	3634488	CallExpression	child -> get_sibling ( )		3634358	1					
ANR	3634489	Callee	child -> get_sibling		3634358	0					
ANR	3634490	PtrMemberAccess	child -> get_sibling		3634358	0					
ANR	3634491	Identifier	child		3634358	0					
ANR	3634492	Identifier	get_sibling		3634358	1					
ANR	3634493	ArgumentList			3634358	1					
ANR	3634494	ReturnType	void		3634358	1					
ANR	3634495	Identifier	ProcFamilyMonitor :: dump		3634358	2					
ANR	3634496	ParameterList	"Tree < ProcFamily * > * tree , std :: vector < ProcFamilyDump > & vec"		3634358	3					
ANR	3634497	Parameter	Tree < ProcFamily * > * tree	999:24:27398:27420	3634358	0	True				
ANR	3634498	ParameterType	Tree < ProcFamily * > *		3634358	0					
ANR	3634499	Identifier	tree		3634358	1					
ANR	3634500	Parameter	std :: vector < ProcFamilyDump > & vec	1000:24:27447:27478	3634358	1	True				
ANR	3634501	ParameterType	std :: vector < ProcFamilyDump > &		3634358	0					
ANR	3634502	Identifier	vec		3634358	1					
ANR	3634503	CFGEntryNode	ENTRY		3634358		True				
ANR	3634504	CFGExitNode	EXIT		3634358		True				
ANR	3634505	Symbol	* tree -> get_data		3634358						
ANR	3634506	Symbol	* child		3634358						
ANR	3634507	Symbol	NULL		3634358						
ANR	3634508	Symbol	tree		3634358						
ANR	3634509	Symbol	tree -> get_data		3634358						
ANR	3634510	Symbol	tree -> get_parent		3634358						
ANR	3634511	Symbol	tree -> get_data ( ) -> get_watcher_pid		3634358						
ANR	3634512	Symbol	child -> get_sibling		3634358						
ANR	3634513	Symbol	fam . parent_root		3634358						
ANR	3634514	Symbol	fam . watcher_pid		3634358						
ANR	3634515	Symbol	* tree		3634358						
ANR	3634516	Symbol	tree -> get_data ( ) -> get_root_pid		3634358						
ANR	3634517	Symbol	fam		3634358						
ANR	3634518	Symbol	tree -> get_parent ( ) -> get_data		3634358						
ANR	3634519	Symbol	vec		3634358						
ANR	3634520	Symbol	* tree -> get_parent		3634358						
ANR	3634521	Symbol	* * tree		3634358						
ANR	3634522	Symbol	* * * tree		3634358						
ANR	3634523	Symbol	tree -> get_child		3634358						
ANR	3634524	Symbol	* tree -> get_parent ( ) -> get_data		3634358						
ANR	3634525	Symbol	tree -> get_parent ( ) -> get_data ( ) -> get_root_pid		3634358						
ANR	3634526	Symbol	* * tree -> get_parent		3634358						
ANR	3634527	Symbol	fam . root_pid		3634358						
ANR	3634528	Symbol	child		3634358						
