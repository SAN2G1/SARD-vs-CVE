command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4263323	File	data/converged/CVE-2011-4930_htcondor/src_condor_tools_version.cpp								
ANR	4263324	Function	usage	29:0:1015:1677							
ANR	4263325	FunctionDef	"usage (char name [ ] , int rval)"		4263324	0					
ANR	4263326	CompoundStatement		31:0:1051:1677	4263324	0					
ANR	4263327	ExpressionStatement	"fprintf ( stderr , ""Usage: %s [options]\\n"" , name )"	32:1:1054:1102	4263324	0	True				
ANR	4263328	CallExpression	"fprintf ( stderr , ""Usage: %s [options]\\n"" , name )"		4263324	0					
ANR	4263329	Callee	fprintf		4263324	0					
ANR	4263330	Identifier	fprintf		4263324	0					
ANR	4263331	ArgumentList	stderr		4263324	1					
ANR	4263332	Argument	stderr		4263324	0					
ANR	4263333	Identifier	stderr		4263324	0					
ANR	4263334	Argument	"""Usage: %s [options]\\n"""		4263324	1					
ANR	4263335	PrimaryExpression	"""Usage: %s [options]\\n"""		4263324	0					
ANR	4263336	Argument	name		4263324	2					
ANR	4263337	Identifier	name		4263324	0					
ANR	4263338	Statement	fprintf	33:4:1108:1114	4263324	1	True				
ANR	4263339	Statement	(	33:11:1115:1115	4263324	2	True				
ANR	4263340	Statement	stderr	33:13:1117:1122	4263324	3	True				
ANR	4263341	Statement	","	33:19:1123:1123	4263324	4	True				
ANR	4263342	Statement	"""   If no options are specified, print the """	33:21:1125:1168	4263324	5	True				
ANR	4263343	Statement	"""version and platform strings\\n   where the tool was built."""	34:4:1174:1233	4263324	6	True				
ANR	4263344	Statement	)	34:65:1235:1235	4263324	7	True				
ANR	4263345	ExpressionStatement		34:66:1236:1236	4263324	8	True				
ANR	4263346	ExpressionStatement	"fprintf ( stderr , ""  Valid options are:\\n"" )"	35:4:1242:1285	4263324	9	True				
ANR	4263347	CallExpression	"fprintf ( stderr , ""  Valid options are:\\n"" )"		4263324	0					
ANR	4263348	Callee	fprintf		4263324	0					
ANR	4263349	Identifier	fprintf		4263324	0					
ANR	4263350	ArgumentList	stderr		4263324	1					
ANR	4263351	Argument	stderr		4263324	0					
ANR	4263352	Identifier	stderr		4263324	0					
ANR	4263353	Argument	"""  Valid options are:\\n"""		4263324	1					
ANR	4263354	PrimaryExpression	"""  Valid options are:\\n"""		4263324	0					
ANR	4263355	ExpressionStatement	"fprintf ( stderr , ""   -help\\t(this message)\\n"" )"	36:4:1291:1338	4263324	10	True				
ANR	4263356	CallExpression	"fprintf ( stderr , ""   -help\\t(this message)\\n"" )"		4263324	0					
ANR	4263357	Callee	fprintf		4263324	0					
ANR	4263358	Identifier	fprintf		4263324	0					
ANR	4263359	ArgumentList	stderr		4263324	1					
ANR	4263360	Argument	stderr		4263324	0					
ANR	4263361	Identifier	stderr		4263324	0					
ANR	4263362	Argument	"""   -help\\t(this message)\\n"""		4263324	1					
ANR	4263363	PrimaryExpression	"""   -help\\t(this message)\\n"""		4263324	0					
ANR	4263364	ExpressionStatement	"fprintf ( stderr , ""   -arch\\t(print the ARCH string)\\n"" )"	37:4:1344:1405	4263324	11	True				
ANR	4263365	CallExpression	"fprintf ( stderr , ""   -arch\\t(print the ARCH string)\\n"" )"		4263324	0					
ANR	4263366	Callee	fprintf		4263324	0					
ANR	4263367	Identifier	fprintf		4263324	0					
ANR	4263368	ArgumentList	stderr		4263324	1					
ANR	4263369	Argument	stderr		4263324	0					
ANR	4263370	Identifier	stderr		4263324	0					
ANR	4263371	Argument	"""   -arch\\t(print the ARCH string)\\n"""		4263324	1					
ANR	4263372	PrimaryExpression	"""   -arch\\t(print the ARCH string)\\n"""		4263324	0					
ANR	4263373	ExpressionStatement	"fprintf ( stderr , ""   -opsys\\t(print the OPSYS string)\\n"" )"	39:4:1411:1474	4263324	12	True				
ANR	4263374	CallExpression	"fprintf ( stderr , ""   -opsys\\t(print the OPSYS string)\\n"" )"		4263324	0					
ANR	4263375	Callee	fprintf		4263324	0					
ANR	4263376	Identifier	fprintf		4263324	0					
ANR	4263377	ArgumentList	stderr		4263324	1					
ANR	4263378	Argument	stderr		4263324	0					
ANR	4263379	Identifier	stderr		4263324	0					
ANR	4263380	Argument	"""   -opsys\\t(print the OPSYS string)\\n"""		4263324	1					
ANR	4263381	PrimaryExpression	"""   -opsys\\t(print the OPSYS string)\\n"""		4263324	0					
ANR	4263382	Statement	fprintf	41:4:1480:1486	4263324	13	True				
ANR	4263383	Statement	(	41:11:1487:1487	4263324	14	True				
ANR	4263384	Statement	stderr	41:13:1489:1494	4263324	15	True				
ANR	4263385	Statement	","	41:19:1495:1495	4263324	16	True				
ANR	4263386	Statement	"""   -syscall\\t(get info from the libcondorsyscall.a """	41:21:1497:1549	4263324	17	True				
ANR	4263387	Statement	"""this Condor pool is\\n        \\t configured to use, not the """	42:4:1555:1615	4263324	18	True				
ANR	4263388	Statement	"""values where the tool was built)\\n"""	43:4:1621:1656	4263324	19	True				
ANR	4263389	Statement	)	43:41:1658:1658	4263324	20	True				
ANR	4263390	ExpressionStatement		43:42:1659:1659	4263324	21	True				
ANR	4263391	ExpressionStatement	exit ( rval )	45:1:1663:1675	4263324	22	True				
ANR	4263392	CallExpression	exit ( rval )		4263324	0					
ANR	4263393	Callee	exit		4263324	0					
ANR	4263394	Identifier	exit		4263324	0					
ANR	4263395	ArgumentList	rval		4263324	1					
ANR	4263396	Argument	rval		4263324	0					
ANR	4263397	Identifier	rval		4263324	0					
ANR	4263398	ReturnType	void		4263324	1					
ANR	4263399	Identifier	usage		4263324	2					
ANR	4263400	ParameterList	"char name [ ] , int rval"		4263324	3					
ANR	4263401	Parameter	char name [ ]	30:7:1027:1037	4263324	0	True				
ANR	4263402	ParameterType	char [ ]		4263324	0					
ANR	4263403	Identifier	name		4263324	1					
ANR	4263404	Parameter	int rval	30:20:1040:1047	4263324	1	True				
ANR	4263405	ParameterType	int		4263324	0					
ANR	4263406	Identifier	rval		4263324	1					
ANR	4263407	CFGEntryNode	ENTRY		4263324		True				
ANR	4263408	CFGExitNode	EXIT		4263324		True				
ANR	4263409	Symbol	name		4263324						
ANR	4263410	Symbol	rval		4263324						
ANR	4263411	Symbol	stderr		4263324						
ANR	4263412	Function	main	49:0:1681:3699							
ANR	4263413	FunctionDef	"main (int argc , char * argv [ ])"		4263412	0					
ANR	4263414	CompoundStatement		51:0:1714:3699	4263412	0					
ANR	4263415	ExpressionStatement	"myDistro -> Init ( argc , argv )"	53:1:1718:1746	4263412	0	True				
ANR	4263416	CallExpression	"myDistro -> Init ( argc , argv )"		4263412	0					
ANR	4263417	Callee	myDistro -> Init		4263412	0					
ANR	4263418	PtrMemberAccess	myDistro -> Init		4263412	0					
ANR	4263419	Identifier	myDistro		4263412	0					
ANR	4263420	Identifier	Init		4263412	1					
ANR	4263421	ArgumentList	argc		4263412	1					
ANR	4263422	Argument	argc		4263412	0					
ANR	4263423	Identifier	argc		4263412	0					
ANR	4263424	Argument	argv		4263412	1					
ANR	4263425	Identifier	argv		4263412	0					
ANR	4263426	IdentifierDeclStatement	CondorVersionInfo * version ;	54:1:1749:1775	4263412	1	True				
ANR	4263427	IdentifierDecl	* version		4263412	0					
ANR	4263428	IdentifierDeclType	CondorVersionInfo *		4263412	0					
ANR	4263429	Identifier	version		4263412	1					
ANR	4263430	IdentifierDeclStatement	bool use_syscall_lib = false ;	56:1:1779:1807	4263412	2	True				
ANR	4263431	IdentifierDecl	use_syscall_lib = false		4263412	0					
ANR	4263432	IdentifierDeclType	bool		4263412	0					
ANR	4263433	Identifier	use_syscall_lib		4263412	1					
ANR	4263434	AssignmentExpression	use_syscall_lib = false		4263412	2		=			
ANR	4263435	Identifier	false		4263412	0					
ANR	4263436	Identifier	false		4263412	1					
ANR	4263437	IdentifierDeclStatement	bool print_arch = false ;	57:1:1810:1833	4263412	3	True				
ANR	4263438	IdentifierDecl	print_arch = false		4263412	0					
ANR	4263439	IdentifierDeclType	bool		4263412	0					
ANR	4263440	Identifier	print_arch		4263412	1					
ANR	4263441	AssignmentExpression	print_arch = false		4263412	2		=			
ANR	4263442	Identifier	false		4263412	0					
ANR	4263443	Identifier	false		4263412	1					
ANR	4263444	IdentifierDeclStatement	bool print_opsys = false ;	58:1:1836:1860	4263412	4	True				
ANR	4263445	IdentifierDecl	print_opsys = false		4263412	0					
ANR	4263446	IdentifierDeclType	bool		4263412	0					
ANR	4263447	Identifier	print_opsys		4263412	1					
ANR	4263448	AssignmentExpression	print_opsys = false		4263412	2		=			
ANR	4263449	Identifier	false		4263412	0					
ANR	4263450	Identifier	false		4263412	1					
ANR	4263451	IdentifierDeclStatement	bool opsys_first = false ;	59:1:1863:1887	4263412	5	True				
ANR	4263452	IdentifierDecl	opsys_first = false		4263412	0					
ANR	4263453	IdentifierDeclType	bool		4263412	0					
ANR	4263454	Identifier	opsys_first		4263412	1					
ANR	4263455	AssignmentExpression	opsys_first = false		4263412	2		=			
ANR	4263456	Identifier	false		4263412	0					
ANR	4263457	Identifier	false		4263412	1					
ANR	4263458	ForStatement	for ( int i = 1 ; i < argc ; i ++ )		4263412	6					
ANR	4263459	ForInit	int i = 1 ;	62:5:1971:1980	4263412	0	True				
ANR	4263460	IdentifierDeclStatement	int i = 1 ;		4263412	0					
ANR	4263461	IdentifierDecl	i = 1		4263412	0					
ANR	4263462	IdentifierDeclType	int		4263412	0					
ANR	4263463	Identifier	i		4263412	1					
ANR	4263464	AssignmentExpression	i = 1		4263412	2		=			
ANR	4263465	Identifier	i		4263412	0					
ANR	4263466	PrimaryExpression	1		4263412	1					
ANR	4263467	Condition	i < argc	62:16:1982:1989	4263412	1	True				
ANR	4263468	RelationalExpression	i < argc		4263412	0		<			
ANR	4263469	Identifier	i		4263412	0					
ANR	4263470	Identifier	argc		4263412	1					
ANR	4263471	PostIncDecOperationExpression	i ++	62:26:1992:1994	4263412	2	True				
ANR	4263472	Identifier	i		4263412	0					
ANR	4263473	IncDec	++		4263412	1					
ANR	4263474	CompoundStatement		12:32:283:283	4263412	3					
ANR	4263475	IfStatement	if ( argv [ i ] [ 0 ] != '-' )		4263412	0					
ANR	4263476	Condition	argv [ i ] [ 0 ] != '-'	63:6:2006:2022	4263412	0	True				
ANR	4263477	EqualityExpression	argv [ i ] [ 0 ] != '-'		4263412	0		!=			
ANR	4263478	ArrayIndexing	argv [ i ] [ 0 ]		4263412	0					
ANR	4263479	ArrayIndexing	argv [ i ]		4263412	0					
ANR	4263480	Identifier	argv		4263412	0					
ANR	4263481	Identifier	i		4263412	1					
ANR	4263482	PrimaryExpression	0		4263412	1					
ANR	4263483	PrimaryExpression	'-'		4263412	1					
ANR	4263484	CompoundStatement		13:26:311:311	4263412	1					
ANR	4263485	ExpressionStatement	"fprintf ( stderr , ""ERROR: invalid argument: '%s'\\n"" , argv [ i ] )"	64:3:2031:2092	4263412	0	True				
ANR	4263486	CallExpression	"fprintf ( stderr , ""ERROR: invalid argument: '%s'\\n"" , argv [ i ] )"		4263412	0					
ANR	4263487	Callee	fprintf		4263412	0					
ANR	4263488	Identifier	fprintf		4263412	0					
ANR	4263489	ArgumentList	stderr		4263412	1					
ANR	4263490	Argument	stderr		4263412	0					
ANR	4263491	Identifier	stderr		4263412	0					
ANR	4263492	Argument	"""ERROR: invalid argument: '%s'\\n"""		4263412	1					
ANR	4263493	PrimaryExpression	"""ERROR: invalid argument: '%s'\\n"""		4263412	0					
ANR	4263494	Argument	argv [ i ]		4263412	2					
ANR	4263495	ArrayIndexing	argv [ i ]		4263412	0					
ANR	4263496	Identifier	argv		4263412	0					
ANR	4263497	Identifier	i		4263412	1					
ANR	4263498	ExpressionStatement	"usage ( argv [ 0 ] , 1 )"	65:3:2097:2116	4263412	1	True				
ANR	4263499	CallExpression	"usage ( argv [ 0 ] , 1 )"		4263412	0					
ANR	4263500	Callee	usage		4263412	0					
ANR	4263501	Identifier	usage		4263412	0					
ANR	4263502	ArgumentList	argv [ 0 ]		4263412	1					
ANR	4263503	Argument	argv [ 0 ]		4263412	0					
ANR	4263504	ArrayIndexing	argv [ 0 ]		4263412	0					
ANR	4263505	Identifier	argv		4263412	0					
ANR	4263506	PrimaryExpression	0		4263412	1					
ANR	4263507	Argument	1		4263412	1					
ANR	4263508	PrimaryExpression	1		4263412	0					
ANR	4263509	SwitchStatement	switch ( argv [ i ] [ 1 ] )		4263412	1					
ANR	4263510	Condition	argv [ i ] [ 1 ]	67:10:2132:2141	4263412	0	True				
ANR	4263511	ArrayIndexing	argv [ i ] [ 1 ]		4263412	0					
ANR	4263512	ArrayIndexing	argv [ i ]		4263412	0					
ANR	4263513	Identifier	argv		4263412	0					
ANR	4263514	Identifier	i		4263412	1					
ANR	4263515	PrimaryExpression	1		4263412	1					
ANR	4263516	CompoundStatement		17:23:430:430	4263412	1					
ANR	4263517	Label	case 's' :	68:2:2149:2157	4263412	0	True				
ANR	4263518	ExpressionStatement	use_syscall_lib = true	69:3:2162:2184	4263412	1	True				
ANR	4263519	AssignmentExpression	use_syscall_lib = true		4263412	0		=			
ANR	4263520	Identifier	use_syscall_lib		4263412	0					
ANR	4263521	Identifier	true		4263412	1					
ANR	4263522	BreakStatement	break ;	70:3:2189:2194	4263412	2	True				
ANR	4263523	Label	case 'a' :	71:2:2198:2206	4263412	3	True				
ANR	4263524	ExpressionStatement	print_arch = true	72:3:2211:2228	4263412	4	True				
ANR	4263525	AssignmentExpression	print_arch = true		4263412	0		=			
ANR	4263526	Identifier	print_arch		4263412	0					
ANR	4263527	Identifier	true		4263412	1					
ANR	4263528	BreakStatement	break ;	73:3:2233:2238	4263412	5	True				
ANR	4263529	Label	case 'o' :	74:2:2242:2250	4263412	6	True				
ANR	4263530	ExpressionStatement	print_opsys = true	75:3:2255:2273	4263412	7	True				
ANR	4263531	AssignmentExpression	print_opsys = true		4263412	0		=			
ANR	4263532	Identifier	print_opsys		4263412	0					
ANR	4263533	Identifier	true		4263412	1					
ANR	4263534	IfStatement	if ( ! print_arch )		4263412	8					
ANR	4263535	Condition	! print_arch	76:7:2282:2293	4263412	0	True				
ANR	4263536	UnaryOperationExpression	! print_arch		4263412	0					
ANR	4263537	UnaryOperator	!		4263412	0					
ANR	4263538	Identifier	print_arch		4263412	1					
ANR	4263539	CompoundStatement		26:22:582:582	4263412	1					
ANR	4263540	ExpressionStatement	opsys_first = true	77:4:2303:2321	4263412	0	True				
ANR	4263541	AssignmentExpression	opsys_first = true		4263412	0		=			
ANR	4263542	Identifier	opsys_first		4263412	0					
ANR	4263543	Identifier	true		4263412	1					
ANR	4263544	BreakStatement	break ;	79:3:2331:2336	4263412	9	True				
ANR	4263545	Label	case 'h' :	80:2:2340:2348	4263412	10	True				
ANR	4263546	ExpressionStatement	"usage ( argv [ 0 ] , 0 )"	81:3:2353:2372	4263412	11	True				
ANR	4263547	CallExpression	"usage ( argv [ 0 ] , 0 )"		4263412	0					
ANR	4263548	Callee	usage		4263412	0					
ANR	4263549	Identifier	usage		4263412	0					
ANR	4263550	ArgumentList	argv [ 0 ]		4263412	1					
ANR	4263551	Argument	argv [ 0 ]		4263412	0					
ANR	4263552	ArrayIndexing	argv [ 0 ]		4263412	0					
ANR	4263553	Identifier	argv		4263412	0					
ANR	4263554	PrimaryExpression	0		4263412	1					
ANR	4263555	Argument	0		4263412	1					
ANR	4263556	PrimaryExpression	0		4263412	0					
ANR	4263557	BreakStatement	break ;	82:3:2377:2382	4263412	12	True				
ANR	4263558	Label	default :	83:2:2386:2393	4263412	13	True				
ANR	4263559	Identifier	default		4263412	0					
ANR	4263560	ExpressionStatement	"fprintf ( stderr , ""ERROR: unrecognized argument: '%s'\\n"" , argv [ i ] )"	84:3:2398:2464	4263412	14	True				
ANR	4263561	CallExpression	"fprintf ( stderr , ""ERROR: unrecognized argument: '%s'\\n"" , argv [ i ] )"		4263412	0					
ANR	4263562	Callee	fprintf		4263412	0					
ANR	4263563	Identifier	fprintf		4263412	0					
ANR	4263564	ArgumentList	stderr		4263412	1					
ANR	4263565	Argument	stderr		4263412	0					
ANR	4263566	Identifier	stderr		4263412	0					
ANR	4263567	Argument	"""ERROR: unrecognized argument: '%s'\\n"""		4263412	1					
ANR	4263568	PrimaryExpression	"""ERROR: unrecognized argument: '%s'\\n"""		4263412	0					
ANR	4263569	Argument	argv [ i ]		4263412	2					
ANR	4263570	ArrayIndexing	argv [ i ]		4263412	0					
ANR	4263571	Identifier	argv		4263412	0					
ANR	4263572	Identifier	i		4263412	1					
ANR	4263573	ExpressionStatement	"usage ( argv [ 0 ] , 1 )"	85:3:2469:2488	4263412	15	True				
ANR	4263574	CallExpression	"usage ( argv [ 0 ] , 1 )"		4263412	0					
ANR	4263575	Callee	usage		4263412	0					
ANR	4263576	Identifier	usage		4263412	0					
ANR	4263577	ArgumentList	argv [ 0 ]		4263412	1					
ANR	4263578	Argument	argv [ 0 ]		4263412	0					
ANR	4263579	ArrayIndexing	argv [ 0 ]		4263412	0					
ANR	4263580	Identifier	argv		4263412	0					
ANR	4263581	PrimaryExpression	0		4263412	1					
ANR	4263582	Argument	1		4263412	1					
ANR	4263583	PrimaryExpression	1		4263412	0					
ANR	4263584	IdentifierDeclStatement	"char * path = NULL , * fullpath = NULL , * vername = NULL , * platform = NULL ;"	89:1:2499:2561	4263412	7	True				
ANR	4263585	IdentifierDecl	* path = NULL		4263412	0					
ANR	4263586	IdentifierDeclType	char *		4263412	0					
ANR	4263587	Identifier	path		4263412	1					
ANR	4263588	AssignmentExpression	* path = NULL		4263412	2		=			
ANR	4263589	Identifier	NULL		4263412	0					
ANR	4263590	Identifier	NULL		4263412	1					
ANR	4263591	IdentifierDecl	* fullpath = NULL		4263412	1					
ANR	4263592	IdentifierDeclType	char *		4263412	0					
ANR	4263593	Identifier	fullpath		4263412	1					
ANR	4263594	AssignmentExpression	* fullpath = NULL		4263412	2		=			
ANR	4263595	Identifier	NULL		4263412	0					
ANR	4263596	Identifier	NULL		4263412	1					
ANR	4263597	IdentifierDecl	* vername = NULL		4263412	2					
ANR	4263598	IdentifierDeclType	char *		4263412	0					
ANR	4263599	Identifier	vername		4263412	1					
ANR	4263600	AssignmentExpression	* vername = NULL		4263412	2		=			
ANR	4263601	Identifier	NULL		4263412	0					
ANR	4263602	Identifier	NULL		4263412	1					
ANR	4263603	IdentifierDecl	* platform = NULL		4263412	3					
ANR	4263604	IdentifierDeclType	char *		4263412	0					
ANR	4263605	Identifier	platform		4263412	1					
ANR	4263606	AssignmentExpression	* platform = NULL		4263412	2		=			
ANR	4263607	Identifier	NULL		4263412	0					
ANR	4263608	Identifier	NULL		4263412	1					
ANR	4263609	IfStatement	if ( use_syscall_lib )		4263412	8					
ANR	4263610	Condition	use_syscall_lib	90:5:2568:2582	4263412	0	True				
ANR	4263611	Identifier	use_syscall_lib		4263412	0					
ANR	4263612	CompoundStatement		40:23:871:871	4263412	1					
ANR	4263613	ExpressionStatement	config ( )	91:2:2590:2598	4263412	0	True				
ANR	4263614	CallExpression	config ( )		4263412	0					
ANR	4263615	Callee	config		4263412	0					
ANR	4263616	Identifier	config		4263412	0					
ANR	4263617	ArgumentList			4263412	1					
ANR	4263618	ExpressionStatement	"path = param ( ""LIB"" )"	92:2:2602:2623	4263412	1	True				
ANR	4263619	AssignmentExpression	"path = param ( ""LIB"" )"		4263412	0		=			
ANR	4263620	Identifier	path		4263412	0					
ANR	4263621	CallExpression	"param ( ""LIB"" )"		4263412	1					
ANR	4263622	Callee	param		4263412	0					
ANR	4263623	Identifier	param		4263412	0					
ANR	4263624	ArgumentList	"""LIB"""		4263412	1					
ANR	4263625	Argument	"""LIB"""		4263412	0					
ANR	4263626	PrimaryExpression	"""LIB"""		4263412	0					
ANR	4263627	IfStatement	if ( path == NULL )		4263412	2					
ANR	4263628	Condition	path == NULL	93:6:2631:2642	4263412	0	True				
ANR	4263629	EqualityExpression	path == NULL		4263412	0		==			
ANR	4263630	Identifier	path		4263412	0					
ANR	4263631	Identifier	NULL		4263412	1					
ANR	4263632	CompoundStatement		43:21:931:931	4263412	1					
ANR	4263633	Statement	fprintf	94:3:2651:2657	4263412	0	True				
ANR	4263634	Statement	(	94:10:2658:2658	4263412	1	True				
ANR	4263635	Statement	stderr	94:12:2660:2665	4263412	2	True				
ANR	4263636	Statement	","	94:18:2666:2666	4263412	3	True				
ANR	4263637	Statement	"""ERROR: -syscall_lib specified but 'LIB' not """	94:20:2668:2713	4263412	4	True				
ANR	4263638	Statement	"""defined in configuration!\\n"""	95:6:2721:2749	4263412	5	True				
ANR	4263639	Statement	)	95:36:2751:2751	4263412	6	True				
ANR	4263640	ExpressionStatement		95:37:2752:2752	4263412	7	True				
ANR	4263641	ExpressionStatement	"usage ( argv [ 0 ] , 1 )"	96:3:2757:2776	4263412	8	True				
ANR	4263642	CallExpression	"usage ( argv [ 0 ] , 1 )"		4263412	0					
ANR	4263643	Callee	usage		4263412	0					
ANR	4263644	Identifier	usage		4263412	0					
ANR	4263645	ArgumentList	argv [ 0 ]		4263412	1					
ANR	4263646	Argument	argv [ 0 ]		4263412	0					
ANR	4263647	ArrayIndexing	argv [ 0 ]		4263412	0					
ANR	4263648	Identifier	argv		4263412	0					
ANR	4263649	PrimaryExpression	0		4263412	1					
ANR	4263650	Argument	1		4263412	1					
ANR	4263651	PrimaryExpression	1		4263412	0					
ANR	4263652	ExpressionStatement	fullpath = ( char * ) malloc ( strlen ( path ) + 24 )	98:2:2784:2828	4263412	3	True				
ANR	4263653	AssignmentExpression	fullpath = ( char * ) malloc ( strlen ( path ) + 24 )		4263412	0		=			
ANR	4263654	Identifier	fullpath		4263412	0					
ANR	4263655	CastExpression	( char * ) malloc ( strlen ( path ) + 24 )		4263412	1					
ANR	4263656	CastTarget	char *		4263412	0					
ANR	4263657	CallExpression	malloc ( strlen ( path ) + 24 )		4263412	1					
ANR	4263658	Callee	malloc		4263412	0					
ANR	4263659	Identifier	malloc		4263412	0					
ANR	4263660	ArgumentList	strlen ( path ) + 24		4263412	1					
ANR	4263661	Argument	strlen ( path ) + 24		4263412	0					
ANR	4263662	AdditiveExpression	strlen ( path ) + 24		4263412	0		+			
ANR	4263663	CallExpression	strlen ( path )		4263412	0					
ANR	4263664	Callee	strlen		4263412	0					
ANR	4263665	Identifier	strlen		4263412	0					
ANR	4263666	ArgumentList	path		4263412	1					
ANR	4263667	Argument	path		4263412	0					
ANR	4263668	Identifier	path		4263412	0					
ANR	4263669	PrimaryExpression	24		4263412	1					
ANR	4263670	ExpressionStatement	"strcpy ( fullpath , path )"	99:2:2832:2854	4263412	4	True				
ANR	4263671	CallExpression	"strcpy ( fullpath , path )"		4263412	0					
ANR	4263672	Callee	strcpy		4263412	0					
ANR	4263673	Identifier	strcpy		4263412	0					
ANR	4263674	ArgumentList	fullpath		4263412	1					
ANR	4263675	Argument	fullpath		4263412	0					
ANR	4263676	Identifier	fullpath		4263412	0					
ANR	4263677	Argument	path		4263412	1					
ANR	4263678	Identifier	path		4263412	0					
ANR	4263679	ExpressionStatement	"strcat ( fullpath , ""/libcondorsyscall.a"" )"	100:2:2858:2897	4263412	5	True				
ANR	4263680	CallExpression	"strcat ( fullpath , ""/libcondorsyscall.a"" )"		4263412	0					
ANR	4263681	Callee	strcat		4263412	0					
ANR	4263682	Identifier	strcat		4263412	0					
ANR	4263683	ArgumentList	fullpath		4263412	1					
ANR	4263684	Argument	fullpath		4263412	0					
ANR	4263685	Identifier	fullpath		4263412	0					
ANR	4263686	Argument	"""/libcondorsyscall.a"""		4263412	1					
ANR	4263687	PrimaryExpression	"""/libcondorsyscall.a"""		4263412	0					
ANR	4263688	ExpressionStatement	vername = NULL	102:2:2906:2920	4263412	6	True				
ANR	4263689	AssignmentExpression	vername = NULL		4263412	0		=			
ANR	4263690	Identifier	vername		4263412	0					
ANR	4263691	Identifier	NULL		4263412	1					
ANR	4263692	ExpressionStatement	"vername = CondorVersionInfo :: get_version_from_file ( fullpath , vername )"	103:2:2924:2993	4263412	7	True				
ANR	4263693	AssignmentExpression	"vername = CondorVersionInfo :: get_version_from_file ( fullpath , vername )"		4263412	0		=			
ANR	4263694	Identifier	vername		4263412	0					
ANR	4263695	CallExpression	"CondorVersionInfo :: get_version_from_file ( fullpath , vername )"		4263412	1					
ANR	4263696	Callee	CondorVersionInfo :: get_version_from_file		4263412	0					
ANR	4263697	Identifier	CondorVersionInfo :: get_version_from_file		4263412	0					
ANR	4263698	ArgumentList	fullpath		4263412	1					
ANR	4263699	Argument	fullpath		4263412	0					
ANR	4263700	Identifier	fullpath		4263412	0					
ANR	4263701	Argument	vername		4263412	1					
ANR	4263702	Identifier	vername		4263412	0					
ANR	4263703	ExpressionStatement	platform = NULL	104:2:2997:3012	4263412	8	True				
ANR	4263704	AssignmentExpression	platform = NULL		4263412	0		=			
ANR	4263705	Identifier	platform		4263412	0					
ANR	4263706	Identifier	NULL		4263412	1					
ANR	4263707	ExpressionStatement	"platform = CondorVersionInfo :: get_platform_from_file ( fullpath , platform )"	105:2:3016:3088	4263412	9	True				
ANR	4263708	AssignmentExpression	"platform = CondorVersionInfo :: get_platform_from_file ( fullpath , platform )"		4263412	0		=			
ANR	4263709	Identifier	platform		4263412	0					
ANR	4263710	CallExpression	"CondorVersionInfo :: get_platform_from_file ( fullpath , platform )"		4263412	1					
ANR	4263711	Callee	CondorVersionInfo :: get_platform_from_file		4263412	0					
ANR	4263712	Identifier	CondorVersionInfo :: get_platform_from_file		4263412	0					
ANR	4263713	ArgumentList	fullpath		4263412	1					
ANR	4263714	Argument	fullpath		4263412	0					
ANR	4263715	Identifier	fullpath		4263412	0					
ANR	4263716	Argument	platform		4263412	1					
ANR	4263717	Identifier	platform		4263412	0					
ANR	4263718	ExpressionStatement	"version = new CondorVersionInfo ( vername , NULL , platform )"	107:2:3093:3149	4263412	10	True				
ANR	4263719	AssignmentExpression	"version = new CondorVersionInfo ( vername , NULL , platform )"		4263412	0		=			
ANR	4263720	Identifier	version		4263412	0					
ANR	4263721	Expression	"vername , NULL , platform"		4263412	1					
ANR	4263722	Identifier	vername		4263412	0					
ANR	4263723	Expression	"NULL , platform"		4263412	1					
ANR	4263724	Identifier	NULL		4263412	0					
ANR	4263725	Identifier	platform		4263412	1					
ANR	4263726	ExpressionStatement	free ( path )	108:2:3153:3163	4263412	11	True				
ANR	4263727	CallExpression	free ( path )		4263412	0					
ANR	4263728	Callee	free		4263412	0					
ANR	4263729	Identifier	free		4263412	0					
ANR	4263730	ArgumentList	path		4263412	1					
ANR	4263731	Argument	path		4263412	0					
ANR	4263732	Identifier	path		4263412	0					
ANR	4263733	ExpressionStatement	free ( fullpath )	109:2:3167:3181	4263412	12	True				
ANR	4263734	CallExpression	free ( fullpath )		4263412	0					
ANR	4263735	Callee	free		4263412	0					
ANR	4263736	Identifier	free		4263412	0					
ANR	4263737	ArgumentList	fullpath		4263412	1					
ANR	4263738	Argument	fullpath		4263412	0					
ANR	4263739	Identifier	fullpath		4263412	0					
ANR	4263740	ElseStatement	else		4263412	0					
ANR	4263741	CompoundStatement		60:8:1476:1476	4263412	0					
ANR	4263742	Statement	version	111:2:3195:3201	4263412	0	True				
ANR	4263743	Statement	=	111:10:3203:3203	4263412	1	True				
ANR	4263744	Statement	new	111:12:3205:3207	4263412	2	True				
ANR	4263745	ExpressionStatement	CondorVersionInfo	111:16:3209:3226	4263412	3	True				
ANR	4263746	Identifier	CondorVersionInfo		4263412	0					
ANR	4263747	IfStatement	if ( opsys_first )		4263412	9					
ANR	4263748	Condition	opsys_first	114:5:3237:3247	4263412	0	True				
ANR	4263749	Identifier	opsys_first		4263412	0					
ANR	4263750	CompoundStatement		64:19:1536:1536	4263412	1					
ANR	4263751	ExpressionStatement	assert ( print_opsys )	115:2:3255:3276	4263412	0	True				
ANR	4263752	CallExpression	assert ( print_opsys )		4263412	0					
ANR	4263753	Callee	assert		4263412	0					
ANR	4263754	Identifier	assert		4263412	0					
ANR	4263755	ArgumentList	print_opsys		4263412	1					
ANR	4263756	Argument	print_opsys		4263412	0					
ANR	4263757	Identifier	print_opsys		4263412	0					
ANR	4263758	ExpressionStatement	"printf ( ""%s\\n"" , version -> getOpSysVer ( ) )"	116:2:3280:3319	4263412	1	True				
ANR	4263759	CallExpression	"printf ( ""%s\\n"" , version -> getOpSysVer ( ) )"		4263412	0					
ANR	4263760	Callee	printf		4263412	0					
ANR	4263761	Identifier	printf		4263412	0					
ANR	4263762	ArgumentList	"""%s\\n"""		4263412	1					
ANR	4263763	Argument	"""%s\\n"""		4263412	0					
ANR	4263764	PrimaryExpression	"""%s\\n"""		4263412	0					
ANR	4263765	Argument	version -> getOpSysVer ( )		4263412	1					
ANR	4263766	CallExpression	version -> getOpSysVer ( )		4263412	0					
ANR	4263767	Callee	version -> getOpSysVer		4263412	0					
ANR	4263768	PtrMemberAccess	version -> getOpSysVer		4263412	0					
ANR	4263769	Identifier	version		4263412	0					
ANR	4263770	Identifier	getOpSysVer		4263412	1					
ANR	4263771	ArgumentList			4263412	1					
ANR	4263772	IfStatement	if ( print_arch )		4263412	10					
ANR	4263773	Condition	print_arch	118:5:3329:3338	4263412	0	True				
ANR	4263774	Identifier	print_arch		4263412	0					
ANR	4263775	CompoundStatement		68:18:1627:1627	4263412	1					
ANR	4263776	ExpressionStatement	"printf ( ""%s\\n"" , version -> getArchVer ( ) )"	119:2:3346:3384	4263412	0	True				
ANR	4263777	CallExpression	"printf ( ""%s\\n"" , version -> getArchVer ( ) )"		4263412	0					
ANR	4263778	Callee	printf		4263412	0					
ANR	4263779	Identifier	printf		4263412	0					
ANR	4263780	ArgumentList	"""%s\\n"""		4263412	1					
ANR	4263781	Argument	"""%s\\n"""		4263412	0					
ANR	4263782	PrimaryExpression	"""%s\\n"""		4263412	0					
ANR	4263783	Argument	version -> getArchVer ( )		4263412	1					
ANR	4263784	CallExpression	version -> getArchVer ( )		4263412	0					
ANR	4263785	Callee	version -> getArchVer		4263412	0					
ANR	4263786	PtrMemberAccess	version -> getArchVer		4263412	0					
ANR	4263787	Identifier	version		4263412	0					
ANR	4263788	Identifier	getArchVer		4263412	1					
ANR	4263789	ArgumentList			4263412	1					
ANR	4263790	IfStatement	if ( ! opsys_first && print_opsys )		4263412	11					
ANR	4263791	Condition	! opsys_first && print_opsys	121:5:3394:3421	4263412	0	True				
ANR	4263792	AndExpression	! opsys_first && print_opsys		4263412	0		&&			
ANR	4263793	UnaryOperationExpression	! opsys_first		4263412	0					
ANR	4263794	UnaryOperator	!		4263412	0					
ANR	4263795	Identifier	opsys_first		4263412	1					
ANR	4263796	Identifier	print_opsys		4263412	1					
ANR	4263797	CompoundStatement		71:36:1710:1710	4263412	1					
ANR	4263798	ExpressionStatement	"printf ( ""%s\\n"" , version -> getOpSysVer ( ) )"	122:2:3429:3468	4263412	0	True				
ANR	4263799	CallExpression	"printf ( ""%s\\n"" , version -> getOpSysVer ( ) )"		4263412	0					
ANR	4263800	Callee	printf		4263412	0					
ANR	4263801	Identifier	printf		4263412	0					
ANR	4263802	ArgumentList	"""%s\\n"""		4263412	1					
ANR	4263803	Argument	"""%s\\n"""		4263412	0					
ANR	4263804	PrimaryExpression	"""%s\\n"""		4263412	0					
ANR	4263805	Argument	version -> getOpSysVer ( )		4263412	1					
ANR	4263806	CallExpression	version -> getOpSysVer ( )		4263412	0					
ANR	4263807	Callee	version -> getOpSysVer		4263412	0					
ANR	4263808	PtrMemberAccess	version -> getOpSysVer		4263412	0					
ANR	4263809	Identifier	version		4263412	0					
ANR	4263810	Identifier	getOpSysVer		4263412	1					
ANR	4263811	ArgumentList			4263412	1					
ANR	4263812	IfStatement	if ( print_arch || print_opsys )		4263412	12					
ANR	4263813	Condition	print_arch || print_opsys	125:5:3479:3503	4263412	0	True				
ANR	4263814	OrExpression	print_arch || print_opsys		4263412	0		||			
ANR	4263815	Identifier	print_arch		4263412	0					
ANR	4263816	Identifier	print_opsys		4263412	1					
ANR	4263817	CompoundStatement		75:33:1792:1792	4263412	1					
ANR	4263818	ReturnStatement	return 0 ;	126:2:3511:3519	4263412	0	True				
ANR	4263819	PrimaryExpression	0		4263412	0					
ANR	4263820	IfStatement	if ( use_syscall_lib )		4263412	13					
ANR	4263821	Condition	use_syscall_lib	129:5:3530:3544	4263412	0	True				
ANR	4263822	Identifier	use_syscall_lib		4263412	0					
ANR	4263823	CompoundStatement		79:23:1833:1833	4263412	1					
ANR	4263824	ExpressionStatement	"printf ( ""%s\\n%s\\n"" , vername , platform )"	130:2:3552:3591	4263412	0	True				
ANR	4263825	CallExpression	"printf ( ""%s\\n%s\\n"" , vername , platform )"		4263412	0					
ANR	4263826	Callee	printf		4263412	0					
ANR	4263827	Identifier	printf		4263412	0					
ANR	4263828	ArgumentList	"""%s\\n%s\\n"""		4263412	1					
ANR	4263829	Argument	"""%s\\n%s\\n"""		4263412	0					
ANR	4263830	PrimaryExpression	"""%s\\n%s\\n"""		4263412	0					
ANR	4263831	Argument	vername		4263412	1					
ANR	4263832	Identifier	vername		4263412	0					
ANR	4263833	Argument	platform		4263412	2					
ANR	4263834	Identifier	platform		4263412	0					
ANR	4263835	ElseStatement	else		4263412	0					
ANR	4263836	CompoundStatement		81:8:1886:1886	4263412	0					
ANR	4263837	ExpressionStatement	"printf ( ""%s\\n%s\\n"" , CondorVersion ( ) , CondorPlatform ( ) )"	132:2:3606:3661	4263412	0	True				
ANR	4263838	CallExpression	"printf ( ""%s\\n%s\\n"" , CondorVersion ( ) , CondorPlatform ( ) )"		4263412	0					
ANR	4263839	Callee	printf		4263412	0					
ANR	4263840	Identifier	printf		4263412	0					
ANR	4263841	ArgumentList	"""%s\\n%s\\n"""		4263412	1					
ANR	4263842	Argument	"""%s\\n%s\\n"""		4263412	0					
ANR	4263843	PrimaryExpression	"""%s\\n%s\\n"""		4263412	0					
ANR	4263844	Argument	CondorVersion ( )		4263412	1					
ANR	4263845	CallExpression	CondorVersion ( )		4263412	0					
ANR	4263846	Callee	CondorVersion		4263412	0					
ANR	4263847	Identifier	CondorVersion		4263412	0					
ANR	4263848	ArgumentList			4263412	1					
ANR	4263849	Argument	CondorPlatform ( )		4263412	2					
ANR	4263850	CallExpression	CondorPlatform ( )		4263412	0					
ANR	4263851	Callee	CondorPlatform		4263412	0					
ANR	4263852	Identifier	CondorPlatform		4263412	0					
ANR	4263853	ArgumentList			4263412	1					
ANR	4263854	Statement	delete	135:1:3668:3673	4263412	14	True				
ANR	4263855	ExpressionStatement	version	135:7:3674:3685	4263412	15	True				
ANR	4263856	Identifier	version		4263412	0					
ANR	4263857	ReturnStatement	return 0 ;	137:1:3689:3697	4263412	16	True				
ANR	4263858	PrimaryExpression	0		4263412	0					
ANR	4263859	ReturnType	int		4263412	1					
ANR	4263860	Identifier	main		4263412	2					
ANR	4263861	ParameterList	"int argc , char * argv [ ]"		4263412	3					
ANR	4263862	Parameter	int argc	50:5:1690:1697	4263412	0	True				
ANR	4263863	ParameterType	int		4263412	0					
ANR	4263864	Identifier	argc		4263412	1					
ANR	4263865	Parameter	char * argv [ ]	50:15:1700:1711	4263412	1	True				
ANR	4263866	ParameterType	char * [ ]		4263412	0					
ANR	4263867	Identifier	argv		4263412	1					
ANR	4263868	CFGEntryNode	ENTRY		4263412		True				
ANR	4263869	CFGExitNode	EXIT		4263412		True				
ANR	4263870	Symbol	* argv		4263412						
ANR	4263871	Symbol	use_syscall_lib		4263412						
ANR	4263872	Symbol	argv		4263412						
ANR	4263873	Symbol	platform		4263412						
ANR	4263874	Symbol	path		4263412						
ANR	4263875	Symbol	strlen		4263412						
ANR	4263876	Symbol	param		4263412						
ANR	4263877	Symbol	CondorVersion		4263412						
ANR	4263878	Symbol	myDistro		4263412						
ANR	4263879	Symbol	print_arch		4263412						
ANR	4263880	Symbol	fullpath		4263412						
ANR	4263881	Symbol	CondorPlatform		4263412						
ANR	4263882	Symbol	* * argv		4263412						
ANR	4263883	Symbol	vername		4263412						
ANR	4263884	Symbol	argc		4263412						
ANR	4263885	Symbol	malloc		4263412						
ANR	4263886	Symbol	* * i		4263412						
ANR	4263887	Symbol	NULL		4263412						
ANR	4263888	Symbol	false		4263412						
ANR	4263889	Symbol	CondorVersionInfo :: get_platform_from_file		4263412						
ANR	4263890	Symbol	i		4263412						
ANR	4263891	Symbol	stderr		4263412						
ANR	4263892	Symbol	version		4263412						
ANR	4263893	Symbol	CondorVersionInfo :: get_version_from_file		4263412						
ANR	4263894	Symbol	print_opsys		4263412						
ANR	4263895	Symbol	version -> getOpSysVer		4263412						
ANR	4263896	Symbol	opsys_first		4263412						
ANR	4263897	Symbol	* i		4263412						
ANR	4263898	Symbol	* version		4263412						
ANR	4263899	Symbol	version -> getArchVer		4263412						
ANR	4263900	Symbol	true		4263412						
