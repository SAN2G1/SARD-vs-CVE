command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	97174	File	data/converged/CVE-2011-4930_htcondor/AviaryJob_SubmitJob.cpp								
ANR	97175	Function	AviaryJob :: SubmitJob :: SubmitJob	23:11:571:1645							
ANR	97176	FunctionDef	AviaryJob :: SubmitJob :: SubmitJob ()		97175	0					
ANR	97177	CompoundStatement		24:8:613:1645	97175	0					
ANR	97178	ExpressionStatement	qname = NULL	27:12:637:649	97175	0	True				
ANR	97179	AssignmentExpression	qname = NULL		97175	0		=			
ANR	97180	Identifier	qname		97175	0					
ANR	97181	Identifier	NULL		97175	1					
ANR	97182	ExpressionStatement	property_Cmd	29:20:680:692	97175	1	True				
ANR	97183	Identifier	property_Cmd		97175	0					
ANR	97184	ExpressionStatement	isValidCmd = false	31:12:723:742	97175	2	True				
ANR	97185	AssignmentExpression	isValidCmd = false		97175	0		=			
ANR	97186	Identifier	isValidCmd		97175	0					
ANR	97187	Identifier	false		97175	1					
ANR	97188	ExpressionStatement	property_Args	33:20:773:786	97175	3	True				
ANR	97189	Identifier	property_Args		97175	0					
ANR	97190	ExpressionStatement	isValidArgs = false	35:12:817:837	97175	4	True				
ANR	97191	AssignmentExpression	isValidArgs = false		97175	0		=			
ANR	97192	Identifier	isValidArgs		97175	0					
ANR	97193	Identifier	false		97175	1					
ANR	97194	ExpressionStatement	property_Owner	37:20:868:882	97175	5	True				
ANR	97195	Identifier	property_Owner		97175	0					
ANR	97196	ExpressionStatement	isValidOwner = false	39:12:913:934	97175	6	True				
ANR	97197	AssignmentExpression	isValidOwner = false		97175	0		=			
ANR	97198	Identifier	isValidOwner		97175	0					
ANR	97199	Identifier	false		97175	1					
ANR	97200	ExpressionStatement	property_Iwd	41:20:965:977	97175	7	True				
ANR	97201	Identifier	property_Iwd		97175	0					
ANR	97202	ExpressionStatement	isValidIwd = false	43:12:1008:1027	97175	8	True				
ANR	97203	AssignmentExpression	isValidIwd = false		97175	0		=			
ANR	97204	Identifier	isValidIwd		97175	0					
ANR	97205	Identifier	false		97175	1					
ANR	97206	ExpressionStatement	property_Submission_name	45:20:1058:1082	97175	9	True				
ANR	97207	Identifier	property_Submission_name		97175	0					
ANR	97208	ExpressionStatement	isValidSubmission_name = false	47:12:1113:1144	97175	10	True				
ANR	97209	AssignmentExpression	isValidSubmission_name = false		97175	0		=			
ANR	97210	Identifier	isValidSubmission_name		97175	0					
ANR	97211	Identifier	false		97175	1					
ANR	97212	ExpressionStatement	property_Requirements = NULL	49:16:1171:1200	97175	11	True				
ANR	97213	AssignmentExpression	property_Requirements = NULL		97175	0		=			
ANR	97214	Identifier	property_Requirements		97175	0					
ANR	97215	Identifier	NULL		97175	1					
ANR	97216	ExpressionStatement	isValidRequirements = false	51:12:1229:1257	97175	12	True				
ANR	97217	AssignmentExpression	isValidRequirements = false		97175	0		=			
ANR	97218	Identifier	isValidRequirements		97175	0					
ANR	97219	Identifier	false		97175	1					
ANR	97220	ExpressionStatement	property_Extra = NULL	53:16:1284:1306	97175	13	True				
ANR	97221	AssignmentExpression	property_Extra = NULL		97175	0		=			
ANR	97222	Identifier	property_Extra		97175	0					
ANR	97223	Identifier	NULL		97175	1					
ANR	97224	ExpressionStatement	isValidExtra = false	55:12:1335:1356	97175	14	True				
ANR	97225	AssignmentExpression	isValidExtra = false		97175	0		=			
ANR	97226	Identifier	isValidExtra		97175	0					
ANR	97227	Identifier	false		97175	1					
ANR	97228	ExpressionStatement	isValidAllowOverrides = false	57:12:1379:1409	97175	15	True				
ANR	97229	AssignmentExpression	isValidAllowOverrides = false		97175	0		=			
ANR	97230	Identifier	isValidAllowOverrides		97175	0					
ANR	97231	Identifier	false		97175	1					
ANR	97232	ExpressionStatement	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""SubmitJob"" , ""http://job.aviary.grid.redhat.com"" , NULL )"	59:18:1438:1618	97175	16	True				
ANR	97233	AssignmentExpression	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""SubmitJob"" , ""http://job.aviary.grid.redhat.com"" , NULL )"		97175	0		=			
ANR	97234	Identifier	qname		97175	0					
ANR	97235	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""SubmitJob"" , ""http://job.aviary.grid.redhat.com"" , NULL )"		97175	1					
ANR	97236	Callee	axutil_qname_create		97175	0					
ANR	97237	Identifier	axutil_qname_create		97175	0					
ANR	97238	ArgumentList	Environment :: getEnv ( )		97175	1					
ANR	97239	Argument	Environment :: getEnv ( )		97175	0					
ANR	97240	CallExpression	Environment :: getEnv ( )		97175	0					
ANR	97241	Callee	Environment :: getEnv		97175	0					
ANR	97242	Identifier	Environment :: getEnv		97175	0					
ANR	97243	ArgumentList			97175	1					
ANR	97244	Argument	"""SubmitJob"""		97175	1					
ANR	97245	PrimaryExpression	"""SubmitJob"""		97175	0					
ANR	97246	Argument	"""http://job.aviary.grid.redhat.com"""		97175	2					
ANR	97247	PrimaryExpression	"""http://job.aviary.grid.redhat.com"""		97175	0					
ANR	97248	Argument	NULL		97175	3					
ANR	97249	Identifier	NULL		97175	0					
ANR	97250	Identifier	AviaryJob :: SubmitJob :: SubmitJob		97175	1					
ANR	97251	ParameterList			97175	2					
ANR	97252	CFGEntryNode	ENTRY		97175		True				
ANR	97253	CFGExitNode	EXIT		97175		True				
ANR	97254	Symbol	property_Extra		97175						
ANR	97255	Symbol	Environment :: getEnv		97175						
ANR	97256	Symbol	NULL		97175						
ANR	97257	Symbol	isValidIwd		97175						
ANR	97258	Symbol	isValidArgs		97175						
ANR	97259	Symbol	isValidCmd		97175						
ANR	97260	Symbol	false		97175						
ANR	97261	Symbol	axutil_qname_create		97175						
ANR	97262	Symbol	isValidAllowOverrides		97175						
ANR	97263	Symbol	qname		97175						
ANR	97264	Symbol	isValidOwner		97175						
ANR	97265	Symbol	isValidRequirements		97175						
ANR	97266	Symbol	isValidExtra		97175						
ANR	97267	Symbol	isValidSubmission_name		97175						
ANR	97268	Symbol	property_Requirements		97175						
ANR	97269	Function	AviaryJob :: SubmitJob :: SubmitJob	66:7:1655:3512							
ANR	97270	FunctionDef	"AviaryJob :: SubmitJob :: SubmitJob (std :: string arg_Cmd , std :: string arg_Args , std :: string arg_Owner , std :: string arg_Iwd , std :: string arg_Submission_name , std :: vector < AviaryCommon :: ResourceConstraint * > * arg_Requirements , std :: vector < AviaryCommon :: Attribute * > * arg_Extra , bool arg_AllowOverrides)"		97269	0					
ANR	97271	CompoundStatement		67:8:1949:3512	97269	0					
ANR	97272	ExpressionStatement	qname = NULL	69:19:1984:1996	97269	0	True				
ANR	97273	AssignmentExpression	qname = NULL		97269	0		=			
ANR	97274	Identifier	qname		97269	0					
ANR	97275	Identifier	NULL		97269	1					
ANR	97276	ExpressionStatement	property_Cmd	71:17:2029:2041	97269	1	True				
ANR	97277	Identifier	property_Cmd		97269	0					
ANR	97278	ExpressionStatement	isValidCmd = true	73:12:2069:2087	97269	2	True				
ANR	97279	AssignmentExpression	isValidCmd = true		97269	0		=			
ANR	97280	Identifier	isValidCmd		97269	0					
ANR	97281	Identifier	true		97269	1					
ANR	97282	ExpressionStatement	property_Args	75:17:2119:2132	97269	3	True				
ANR	97283	Identifier	property_Args		97269	0					
ANR	97284	ExpressionStatement	isValidArgs = true	77:12:2160:2179	97269	4	True				
ANR	97285	AssignmentExpression	isValidArgs = true		97269	0		=			
ANR	97286	Identifier	isValidArgs		97269	0					
ANR	97287	Identifier	true		97269	1					
ANR	97288	ExpressionStatement	property_Owner	79:17:2211:2225	97269	5	True				
ANR	97289	Identifier	property_Owner		97269	0					
ANR	97290	ExpressionStatement	isValidOwner = true	81:12:2253:2273	97269	6	True				
ANR	97291	AssignmentExpression	isValidOwner = true		97269	0		=			
ANR	97292	Identifier	isValidOwner		97269	0					
ANR	97293	Identifier	true		97269	1					
ANR	97294	ExpressionStatement	property_Iwd	83:17:2305:2317	97269	7	True				
ANR	97295	Identifier	property_Iwd		97269	0					
ANR	97296	ExpressionStatement	isValidIwd = true	85:12:2345:2363	97269	8	True				
ANR	97297	AssignmentExpression	isValidIwd = true		97269	0		=			
ANR	97298	Identifier	isValidIwd		97269	0					
ANR	97299	Identifier	true		97269	1					
ANR	97300	ExpressionStatement	property_Submission_name	87:17:2395:2419	97269	9	True				
ANR	97301	Identifier	property_Submission_name		97269	0					
ANR	97302	ExpressionStatement	isValidSubmission_name = true	89:12:2447:2477	97269	10	True				
ANR	97303	AssignmentExpression	isValidSubmission_name = true		97269	0		=			
ANR	97304	Identifier	isValidSubmission_name		97269	0					
ANR	97305	Identifier	true		97269	1					
ANR	97306	ExpressionStatement	property_Requirements = NULL	91:15:2507:2536	97269	11	True				
ANR	97307	AssignmentExpression	property_Requirements = NULL		97269	0		=			
ANR	97308	Identifier	property_Requirements		97269	0					
ANR	97309	Identifier	NULL		97269	1					
ANR	97310	ExpressionStatement	isValidRequirements = true	93:12:2564:2591	97269	12	True				
ANR	97311	AssignmentExpression	isValidRequirements = true		97269	0		=			
ANR	97312	Identifier	isValidRequirements		97269	0					
ANR	97313	Identifier	true		97269	1					
ANR	97314	ExpressionStatement	property_Extra = NULL	95:15:2621:2643	97269	13	True				
ANR	97315	AssignmentExpression	property_Extra = NULL		97269	0		=			
ANR	97316	Identifier	property_Extra		97269	0					
ANR	97317	Identifier	NULL		97269	1					
ANR	97318	ExpressionStatement	isValidExtra = true	97:12:2671:2691	97269	14	True				
ANR	97319	AssignmentExpression	isValidExtra = true		97269	0		=			
ANR	97320	Identifier	isValidExtra		97269	0					
ANR	97321	Identifier	true		97269	1					
ANR	97322	ExpressionStatement	isValidAllowOverrides = true	99:12:2718:2747	97269	15	True				
ANR	97323	AssignmentExpression	isValidAllowOverrides = true		97269	0		=			
ANR	97324	Identifier	isValidAllowOverrides		97269	0					
ANR	97325	Identifier	true		97269	1					
ANR	97326	ExpressionStatement	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""SubmitJob"" , ""http://job.aviary.grid.redhat.com"" , NULL )"	101:17:2779:2956	97269	16	True				
ANR	97327	AssignmentExpression	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""SubmitJob"" , ""http://job.aviary.grid.redhat.com"" , NULL )"		97269	0		=			
ANR	97328	Identifier	qname		97269	0					
ANR	97329	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""SubmitJob"" , ""http://job.aviary.grid.redhat.com"" , NULL )"		97269	1					
ANR	97330	Callee	axutil_qname_create		97269	0					
ANR	97331	Identifier	axutil_qname_create		97269	0					
ANR	97332	ArgumentList	Environment :: getEnv ( )		97269	1					
ANR	97333	Argument	Environment :: getEnv ( )		97269	0					
ANR	97334	CallExpression	Environment :: getEnv ( )		97269	0					
ANR	97335	Callee	Environment :: getEnv		97269	0					
ANR	97336	Identifier	Environment :: getEnv		97269	0					
ANR	97337	ArgumentList			97269	1					
ANR	97338	Argument	"""SubmitJob"""		97269	1					
ANR	97339	PrimaryExpression	"""SubmitJob"""		97269	0					
ANR	97340	Argument	"""http://job.aviary.grid.redhat.com"""		97269	2					
ANR	97341	PrimaryExpression	"""http://job.aviary.grid.redhat.com"""		97269	0					
ANR	97342	Argument	NULL		97269	3					
ANR	97343	Identifier	NULL		97269	0					
ANR	97344	ExpressionStatement	property_Cmd = arg_Cmd	106:20:2994:3016	97269	17	True				
ANR	97345	AssignmentExpression	property_Cmd = arg_Cmd		97269	0		=			
ANR	97346	Identifier	property_Cmd		97269	0					
ANR	97347	Identifier	arg_Cmd		97269	1					
ANR	97348	ExpressionStatement	property_Args = arg_Args	108:20:3051:3075	97269	18	True				
ANR	97349	AssignmentExpression	property_Args = arg_Args		97269	0		=			
ANR	97350	Identifier	property_Args		97269	0					
ANR	97351	Identifier	arg_Args		97269	1					
ANR	97352	ExpressionStatement	property_Owner = arg_Owner	110:20:3110:3136	97269	19	True				
ANR	97353	AssignmentExpression	property_Owner = arg_Owner		97269	0		=			
ANR	97354	Identifier	property_Owner		97269	0					
ANR	97355	Identifier	arg_Owner		97269	1					
ANR	97356	ExpressionStatement	property_Iwd = arg_Iwd	112:20:3171:3193	97269	20	True				
ANR	97357	AssignmentExpression	property_Iwd = arg_Iwd		97269	0		=			
ANR	97358	Identifier	property_Iwd		97269	0					
ANR	97359	Identifier	arg_Iwd		97269	1					
ANR	97360	ExpressionStatement	property_Submission_name = arg_Submission_name	114:20:3228:3274	97269	21	True				
ANR	97361	AssignmentExpression	property_Submission_name = arg_Submission_name		97269	0		=			
ANR	97362	Identifier	property_Submission_name		97269	0					
ANR	97363	Identifier	arg_Submission_name		97269	1					
ANR	97364	ExpressionStatement	property_Requirements = arg_Requirements	116:20:3309:3349	97269	22	True				
ANR	97365	AssignmentExpression	property_Requirements = arg_Requirements		97269	0		=			
ANR	97366	Identifier	property_Requirements		97269	0					
ANR	97367	Identifier	arg_Requirements		97269	1					
ANR	97368	ExpressionStatement	property_Extra = arg_Extra	118:20:3384:3410	97269	23	True				
ANR	97369	AssignmentExpression	property_Extra = arg_Extra		97269	0		=			
ANR	97370	Identifier	property_Extra		97269	0					
ANR	97371	Identifier	arg_Extra		97269	1					
ANR	97372	ExpressionStatement	property_AllowOverrides = arg_AllowOverrides	120:20:3445:3489	97269	24	True				
ANR	97373	AssignmentExpression	property_AllowOverrides = arg_AllowOverrides		97269	0		=			
ANR	97374	Identifier	property_AllowOverrides		97269	0					
ANR	97375	Identifier	arg_AllowOverrides		97269	1					
ANR	97376	Identifier	AviaryJob :: SubmitJob :: SubmitJob		97269	1					
ANR	97377	ParameterList	"std :: string arg_Cmd , std :: string arg_Args , std :: string arg_Owner , std :: string arg_Iwd , std :: string arg_Submission_name , std :: vector < AviaryCommon :: ResourceConstraint * > * arg_Requirements , std :: vector < AviaryCommon :: Attribute * > * arg_Extra , bool arg_AllowOverrides"		97269	2					
ANR	97378	Parameter	std :: string arg_Cmd	66:39:1687:1705	97269	0	True				
ANR	97379	ParameterType	std :: string		97269	0					
ANR	97380	Identifier	arg_Cmd		97269	1					
ANR	97381	Parameter	std :: string arg_Args	66:59:1707:1726	97269	1	True				
ANR	97382	ParameterType	std :: string		97269	0					
ANR	97383	Identifier	arg_Args		97269	1					
ANR	97384	Parameter	std :: string arg_Owner	66:80:1728:1748	97269	2	True				
ANR	97385	ParameterType	std :: string		97269	0					
ANR	97386	Identifier	arg_Owner		97269	1					
ANR	97387	Parameter	std :: string arg_Iwd	66:102:1750:1768	97269	3	True				
ANR	97388	ParameterType	std :: string		97269	0					
ANR	97389	Identifier	arg_Iwd		97269	1					
ANR	97390	Parameter	std :: string arg_Submission_name	66:122:1770:1800	97269	4	True				
ANR	97391	ParameterType	std :: string		97269	0					
ANR	97392	Identifier	arg_Submission_name		97269	1					
ANR	97393	Parameter	std :: vector < AviaryCommon :: ResourceConstraint * > * arg_Requirements	66:154:1802:1865	97269	5	True				
ANR	97394	ParameterType	std :: vector < AviaryCommon :: ResourceConstraint * > *		97269	0					
ANR	97395	Identifier	arg_Requirements		97269	1					
ANR	97396	Parameter	std :: vector < AviaryCommon :: Attribute * > * arg_Extra	66:219:1867:1914	97269	6	True				
ANR	97397	ParameterType	std :: vector < AviaryCommon :: Attribute * > *		97269	0					
ANR	97398	Identifier	arg_Extra		97269	1					
ANR	97399	Parameter	bool arg_AllowOverrides	66:268:1916:1938	97269	7	True				
ANR	97400	ParameterType	bool		97269	0					
ANR	97401	Identifier	arg_AllowOverrides		97269	1					
ANR	97402	CFGEntryNode	ENTRY		97269		True				
ANR	97403	CFGExitNode	EXIT		97269		True				
ANR	97404	Symbol	property_Args		97269						
ANR	97405	Symbol	Environment :: getEnv		97269						
ANR	97406	Symbol	property_Submission_name		97269						
ANR	97407	Symbol	axutil_qname_create		97269						
ANR	97408	Symbol	isValidAllowOverrides		97269						
ANR	97409	Symbol	property_Cmd		97269						
ANR	97410	Symbol	property_Iwd		97269						
ANR	97411	Symbol	property_AllowOverrides		97269						
ANR	97412	Symbol	qname		97269						
ANR	97413	Symbol	isValidRequirements		97269						
ANR	97414	Symbol	property_Owner		97269						
ANR	97415	Symbol	isValidSubmission_name		97269						
ANR	97416	Symbol	arg_AllowOverrides		97269						
ANR	97417	Symbol	property_Requirements		97269						
ANR	97418	Symbol	property_Extra		97269						
ANR	97419	Symbol	NULL		97269						
ANR	97420	Symbol	isValidIwd		97269						
ANR	97421	Symbol	isValidArgs		97269						
ANR	97422	Symbol	isValidCmd		97269						
ANR	97423	Symbol	arg_Owner		97269						
ANR	97424	Symbol	arg_Requirements		97269						
ANR	97425	Symbol	arg_Cmd		97269						
ANR	97426	Symbol	arg_Iwd		97269						
ANR	97427	Symbol	arg_Extra		97269						
ANR	97428	Symbol	arg_Submission_name		97269						
ANR	97429	Symbol	arg_Args		97269						
ANR	97430	Symbol	isValidOwner		97269						
ANR	97431	Symbol	isValidExtra		97269						
ANR	97432	Symbol	true		97269						
ANR	97433	Function	AviaryJob :: SubmitJob :: ~SubmitJob	123:8:3522:4059							
ANR	97434	FunctionDef	AviaryJob :: SubmitJob :: ~SubmitJob ()		97433	0					
ANR	97435	CompoundStatement		124:8:3565:4059	97433	0					
ANR	97436	IfStatement	if ( property_Requirements )		97433	0					
ANR	97437	Condition	property_Requirements	125:16:3583:3603	97433	0	True				
ANR	97438	Identifier	property_Requirements		97433	0					
ANR	97439	CompoundStatement		2:39:40:40	97433	1					
ANR	97440	WhileStatement	while ( ! property_Requirements -> empty ( ) )		97433	0					
ANR	97441	Condition	! property_Requirements -> empty ( )	126:22:3630:3660	97433	0	True				
ANR	97442	UnaryOperationExpression	! property_Requirements -> empty ( )		97433	0					
ANR	97443	UnaryOperator	!		97433	0					
ANR	97444	CallExpression	property_Requirements -> empty ( )		97433	1					
ANR	97445	Callee	property_Requirements -> empty		97433	0					
ANR	97446	PtrMemberAccess	property_Requirements -> empty		97433	0					
ANR	97447	Identifier	property_Requirements		97433	0					
ANR	97448	Identifier	empty		97433	1					
ANR	97449	ArgumentList			97433	1					
ANR	97450	Statement	delete	126:55:3663:3668	97433	1	True				
ANR	97451	ExpressionStatement	"property_Requirements -> back ( ) , property_Requirements -> pop_back ( )"	126:62:3670:3734	97433	1	True				
ANR	97452	Expression	"property_Requirements -> back ( ) , property_Requirements -> pop_back ( )"		97433	0					
ANR	97453	CallExpression	property_Requirements -> back ( )		97433	0					
ANR	97454	Callee	property_Requirements -> back		97433	0					
ANR	97455	PtrMemberAccess	property_Requirements -> back		97433	0					
ANR	97456	Identifier	property_Requirements		97433	0					
ANR	97457	Identifier	back		97433	1					
ANR	97458	ArgumentList			97433	1					
ANR	97459	CallExpression	property_Requirements -> pop_back ( )		97433	1					
ANR	97460	Callee	property_Requirements -> pop_back		97433	0					
ANR	97461	PtrMemberAccess	property_Requirements -> pop_back		97433	0					
ANR	97462	Identifier	property_Requirements		97433	0					
ANR	97463	Identifier	pop_back		97433	1					
ANR	97464	ArgumentList			97433	1					
ANR	97465	Statement	delete	127:16:3752:3757	97433	2	True				
ANR	97466	ExpressionStatement	property_Requirements	127:23:3759:3780	97433	3	True				
ANR	97467	Identifier	property_Requirements		97433	0					
ANR	97468	IfStatement	if ( property_Extra )		97433	1					
ANR	97469	Condition	property_Extra	129:16:3812:3825	97433	0	True				
ANR	97470	Identifier	property_Extra		97433	0					
ANR	97471	CompoundStatement		6:32:262:262	97433	1					
ANR	97472	WhileStatement	while ( ! property_Extra -> empty ( ) )		97433	0					
ANR	97473	Condition	! property_Extra -> empty ( )	130:22:3852:3875	97433	0	True				
ANR	97474	UnaryOperationExpression	! property_Extra -> empty ( )		97433	0					
ANR	97475	UnaryOperator	!		97433	0					
ANR	97476	CallExpression	property_Extra -> empty ( )		97433	1					
ANR	97477	Callee	property_Extra -> empty		97433	0					
ANR	97478	PtrMemberAccess	property_Extra -> empty		97433	0					
ANR	97479	Identifier	property_Extra		97433	0					
ANR	97480	Identifier	empty		97433	1					
ANR	97481	ArgumentList			97433	1					
ANR	97482	Statement	delete	130:48:3878:3883	97433	1	True				
ANR	97483	ExpressionStatement	"property_Extra -> back ( ) , property_Extra -> pop_back ( )"	130:55:3885:3935	97433	1	True				
ANR	97484	Expression	"property_Extra -> back ( ) , property_Extra -> pop_back ( )"		97433	0					
ANR	97485	CallExpression	property_Extra -> back ( )		97433	0					
ANR	97486	Callee	property_Extra -> back		97433	0					
ANR	97487	PtrMemberAccess	property_Extra -> back		97433	0					
ANR	97488	Identifier	property_Extra		97433	0					
ANR	97489	Identifier	back		97433	1					
ANR	97490	ArgumentList			97433	1					
ANR	97491	CallExpression	property_Extra -> pop_back ( )		97433	1					
ANR	97492	Callee	property_Extra -> pop_back		97433	0					
ANR	97493	PtrMemberAccess	property_Extra -> pop_back		97433	0					
ANR	97494	Identifier	property_Extra		97433	0					
ANR	97495	Identifier	pop_back		97433	1					
ANR	97496	ArgumentList			97433	1					
ANR	97497	Statement	delete	131:16:3953:3958	97433	2	True				
ANR	97498	ExpressionStatement	property_Extra	131:23:3960:3974	97433	3	True				
ANR	97499	Identifier	property_Extra		97433	0					
ANR	97500	ExpressionStatement	"axutil_qname_free ( qname , Environment :: getEnv ( ) )"	133:12:4002:4049	97433	2	True				
ANR	97501	CallExpression	"axutil_qname_free ( qname , Environment :: getEnv ( ) )"		97433	0					
ANR	97502	Callee	axutil_qname_free		97433	0					
ANR	97503	Identifier	axutil_qname_free		97433	0					
ANR	97504	ArgumentList	qname		97433	1					
ANR	97505	Argument	qname		97433	0					
ANR	97506	Identifier	qname		97433	0					
ANR	97507	Argument	Environment :: getEnv ( )		97433	1					
ANR	97508	CallExpression	Environment :: getEnv ( )		97433	0					
ANR	97509	Callee	Environment :: getEnv		97433	0					
ANR	97510	Identifier	Environment :: getEnv		97433	0					
ANR	97511	ArgumentList			97433	1					
ANR	97512	Identifier	AviaryJob :: SubmitJob :: ~SubmitJob		97433	1					
ANR	97513	ParameterList			97433	2					
ANR	97514	CFGEntryNode	ENTRY		97433		True				
ANR	97515	CFGExitNode	EXIT		97433		True				
ANR	97516	Symbol	property_Extra		97433						
ANR	97517	Symbol	Environment :: getEnv		97433						
ANR	97518	Symbol	property_Requirements -> empty		97433						
ANR	97519	Symbol	* property_Requirements		97433						
ANR	97520	Symbol	qname		97433						
ANR	97521	Symbol	* property_Extra		97433						
ANR	97522	Symbol	property_Requirements		97433						
ANR	97523	Symbol	property_Extra -> empty		97433						
ANR	97524	Function	AviaryJob :: SubmitJob :: deserialize	138:8:4080:60925							
ANR	97525	FunctionDef	"AviaryJob :: SubmitJob :: deserialize (axiom_node_t * * dp_parent , bool * dp_is_early_node_valid , bool dont_care_minoccurs)"		97524	0					
ANR	97526	CompoundStatement		140:8:4225:60925	97524	0					
ANR	97527	IdentifierDeclStatement	axiom_node_t * parent = * dp_parent ;	141:10:4237:4270	97524	0	True				
ANR	97528	IdentifierDecl	* parent = * dp_parent		97524	0					
ANR	97529	IdentifierDeclType	axiom_node_t *		97524	0					
ANR	97530	Identifier	parent		97524	1					
ANR	97531	AssignmentExpression	* parent = * dp_parent		97524	2		=			
ANR	97532	Identifier	parent		97524	0					
ANR	97533	UnaryOperationExpression	* dp_parent		97524	1					
ANR	97534	UnaryOperator	*		97524	0					
ANR	97535	Identifier	dp_parent		97524	1					
ANR	97536	IdentifierDeclStatement	bool status = AXIS2_SUCCESS ;	143:10:4293:4320	97524	1	True				
ANR	97537	IdentifierDecl	status = AXIS2_SUCCESS		97524	0					
ANR	97538	IdentifierDeclType	bool		97524	0					
ANR	97539	Identifier	status		97524	1					
ANR	97540	AssignmentExpression	status = AXIS2_SUCCESS		97524	2		=			
ANR	97541	Identifier	AXIS2_SUCCESS		97524	0					
ANR	97542	Identifier	AXIS2_SUCCESS		97524	1					
ANR	97543	IdentifierDeclStatement	axiom_attribute_t * parent_attri = NULL ;	145:10:4343:4381	97524	2	True				
ANR	97544	IdentifierDecl	* parent_attri = NULL		97524	0					
ANR	97545	IdentifierDeclType	axiom_attribute_t *		97524	0					
ANR	97546	Identifier	parent_attri		97524	1					
ANR	97547	AssignmentExpression	* parent_attri = NULL		97524	2		=			
ANR	97548	Identifier	NULL		97524	0					
ANR	97549	Identifier	NULL		97524	1					
ANR	97550	IdentifierDeclStatement	axiom_element_t * parent_element = NULL ;	146:10:4393:4431	97524	3	True				
ANR	97551	IdentifierDecl	* parent_element = NULL		97524	0					
ANR	97552	IdentifierDeclType	axiom_element_t *		97524	0					
ANR	97553	Identifier	parent_element		97524	1					
ANR	97554	AssignmentExpression	* parent_element = NULL		97524	2		=			
ANR	97555	Identifier	NULL		97524	0					
ANR	97556	Identifier	NULL		97524	1					
ANR	97557	IdentifierDeclStatement	axis2_char_t * attrib_text = NULL ;	147:10:4443:4475	97524	4	True				
ANR	97558	IdentifierDecl	* attrib_text = NULL		97524	0					
ANR	97559	IdentifierDeclType	axis2_char_t *		97524	0					
ANR	97560	Identifier	attrib_text		97524	1					
ANR	97561	AssignmentExpression	* attrib_text = NULL		97524	2		=			
ANR	97562	Identifier	NULL		97524	0					
ANR	97563	Identifier	NULL		97524	1					
ANR	97564	IdentifierDeclStatement	axutil_hash_t * attribute_hash = NULL ;	149:10:4488:4524	97524	5	True				
ANR	97565	IdentifierDecl	* attribute_hash = NULL		97524	0					
ANR	97566	IdentifierDeclType	axutil_hash_t *		97524	0					
ANR	97567	Identifier	attribute_hash		97524	1					
ANR	97568	AssignmentExpression	* attribute_hash = NULL		97524	2		=			
ANR	97569	Identifier	NULL		97524	0					
ANR	97570	Identifier	NULL		97524	1					
ANR	97571	IdentifierDeclStatement	const axis2_char_t * text_value = NULL ;	152:9:4548:4585	97524	6	True				
ANR	97572	IdentifierDecl	* text_value = NULL		97524	0					
ANR	97573	IdentifierDeclType	const axis2_char_t *		97524	0					
ANR	97574	Identifier	text_value		97524	1					
ANR	97575	AssignmentExpression	* text_value = NULL		97524	2		=			
ANR	97576	Identifier	NULL		97524	0					
ANR	97577	Identifier	NULL		97524	1					
ANR	97578	IdentifierDeclStatement	axutil_qname_t * mqname = NULL ;	153:9:4596:4625	97524	7	True				
ANR	97579	IdentifierDecl	* mqname = NULL		97524	0					
ANR	97580	IdentifierDeclType	axutil_qname_t *		97524	0					
ANR	97581	Identifier	mqname		97524	1					
ANR	97582	AssignmentExpression	* mqname = NULL		97524	2		=			
ANR	97583	Identifier	NULL		97524	0					
ANR	97584	Identifier	NULL		97524	1					
ANR	97585	IdentifierDeclStatement	int i = 0 ;	155:15:4653:4662	97524	8	True				
ANR	97586	IdentifierDecl	i = 0		97524	0					
ANR	97587	IdentifierDeclType	int		97524	0					
ANR	97588	Identifier	i		97524	1					
ANR	97589	AssignmentExpression	i = 0		97524	2		=			
ANR	97590	Identifier	i		97524	0					
ANR	97591	PrimaryExpression	0		97524	1					
ANR	97592	IdentifierDeclStatement	int sequence_broken = 0 ;	157:15:4692:4715	97524	9	True				
ANR	97593	IdentifierDecl	sequence_broken = 0		97524	0					
ANR	97594	IdentifierDeclType	int		97524	0					
ANR	97595	Identifier	sequence_broken		97524	1					
ANR	97596	AssignmentExpression	sequence_broken = 0		97524	2		=			
ANR	97597	Identifier	sequence_broken		97524	0					
ANR	97598	PrimaryExpression	0		97524	1					
ANR	97599	IdentifierDeclStatement	axiom_node_t * tmp_node = NULL ;	158:15:4732:4761	97524	10	True				
ANR	97600	IdentifierDecl	* tmp_node = NULL		97524	0					
ANR	97601	IdentifierDeclType	axiom_node_t *		97524	0					
ANR	97602	Identifier	tmp_node		97524	1					
ANR	97603	AssignmentExpression	* tmp_node = NULL		97524	2		=			
ANR	97604	Identifier	NULL		97524	0					
ANR	97605	Identifier	NULL		97524	1					
ANR	97606	IdentifierDeclStatement	axutil_qname_t * element_qname = NULL ;	160:12:4788:4824	97524	11	True				
ANR	97607	IdentifierDecl	* element_qname = NULL		97524	0					
ANR	97608	IdentifierDeclType	axutil_qname_t *		97524	0					
ANR	97609	Identifier	element_qname		97524	1					
ANR	97610	AssignmentExpression	* element_qname = NULL		97524	2		=			
ANR	97611	Identifier	NULL		97524	0					
ANR	97612	Identifier	NULL		97524	1					
ANR	97613	IdentifierDeclStatement	axiom_node_t * first_node = NULL ;	162:15:4855:4886	97524	12	True				
ANR	97614	IdentifierDecl	* first_node = NULL		97524	0					
ANR	97615	IdentifierDeclType	axiom_node_t *		97524	0					
ANR	97616	Identifier	first_node		97524	1					
ANR	97617	AssignmentExpression	* first_node = NULL		97524	2		=			
ANR	97618	Identifier	NULL		97524	0					
ANR	97619	Identifier	NULL		97524	1					
ANR	97620	IdentifierDeclStatement	bool is_early_node_valid = true ;	163:15:4903:4934	97524	13	True				
ANR	97621	IdentifierDecl	is_early_node_valid = true		97524	0					
ANR	97622	IdentifierDeclType	bool		97524	0					
ANR	97623	Identifier	is_early_node_valid		97524	1					
ANR	97624	AssignmentExpression	is_early_node_valid = true		97524	2		=			
ANR	97625	Identifier	true		97524	0					
ANR	97626	Identifier	true		97524	1					
ANR	97627	IdentifierDeclStatement	axiom_node_t * current_node = NULL ;	164:15:4951:4984	97524	14	True				
ANR	97628	IdentifierDecl	* current_node = NULL		97524	0					
ANR	97629	IdentifierDeclType	axiom_node_t *		97524	0					
ANR	97630	Identifier	current_node		97524	1					
ANR	97631	AssignmentExpression	* current_node = NULL		97524	2		=			
ANR	97632	Identifier	NULL		97524	0					
ANR	97633	Identifier	NULL		97524	1					
ANR	97634	IdentifierDeclStatement	axiom_element_t * current_element = NULL ;	165:15:5001:5040	97524	15	True				
ANR	97635	IdentifierDecl	* current_element = NULL		97524	0					
ANR	97636	IdentifierDeclType	axiom_element_t *		97524	0					
ANR	97637	Identifier	current_element		97524	1					
ANR	97638	AssignmentExpression	* current_element = NULL		97524	2		=			
ANR	97639	Identifier	NULL		97524	0					
ANR	97640	Identifier	NULL		97524	1					
ANR	97641	WhileStatement	"while ( parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		97524	16					
ANR	97642	Condition	"parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	168:20:5090:5171	97524	0	True				
ANR	97643	AndExpression	"parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		97524	0		&&			
ANR	97644	Identifier	parent		97524	0					
ANR	97645	EqualityExpression	"axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		97524	1		!=			
ANR	97646	CallExpression	"axiom_node_get_node_type ( parent , Environment :: getEnv ( ) )"		97524	0					
ANR	97647	Callee	axiom_node_get_node_type		97524	0					
ANR	97648	Identifier	axiom_node_get_node_type		97524	0					
ANR	97649	ArgumentList	parent		97524	1					
ANR	97650	Argument	parent		97524	0					
ANR	97651	Identifier	parent		97524	0					
ANR	97652	Argument	Environment :: getEnv ( )		97524	1					
ANR	97653	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	97654	Callee	Environment :: getEnv		97524	0					
ANR	97655	Identifier	Environment :: getEnv		97524	0					
ANR	97656	ArgumentList			97524	1					
ANR	97657	Identifier	AXIOM_ELEMENT		97524	1					
ANR	97658	CompoundStatement		30:14:962:962	97524	1					
ANR	97659	ExpressionStatement	"parent = axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"	170:18:5208:5275	97524	0	True				
ANR	97660	AssignmentExpression	"parent = axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"		97524	0		=			
ANR	97661	Identifier	parent		97524	0					
ANR	97662	CallExpression	"axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"		97524	1					
ANR	97663	Callee	axiom_node_get_next_sibling		97524	0					
ANR	97664	Identifier	axiom_node_get_next_sibling		97524	0					
ANR	97665	ArgumentList	parent		97524	1					
ANR	97666	Argument	parent		97524	0					
ANR	97667	Identifier	parent		97524	0					
ANR	97668	Argument	Environment :: getEnv ( )		97524	1					
ANR	97669	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	97670	Callee	Environment :: getEnv		97524	0					
ANR	97671	Identifier	Environment :: getEnv		97524	0					
ANR	97672	ArgumentList			97524	1					
ANR	97673	IfStatement	if ( NULL == parent )		97524	17					
ANR	97674	Condition	NULL == parent	172:18:5311:5324	97524	0	True				
ANR	97675	EqualityExpression	NULL == parent		97524	0		==			
ANR	97676	Identifier	NULL		97524	0					
ANR	97677	Identifier	parent		97524	1					
ANR	97678	CompoundStatement		34:14:1115:1115	97524	1					
ANR	97679	ReturnStatement	return AXIS2_FAILURE ;	174:16:5362:5382	97524	0	True				
ANR	97680	Identifier	AXIS2_FAILURE		97524	0					
ANR	97681	ExpressionStatement	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"	178:20:5436:5531	97524	18	True				
ANR	97682	AssignmentExpression	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		97524	0		=			
ANR	97683	Identifier	current_element		97524	0					
ANR	97684	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		97524	1					
ANR	97685	CastTarget	axiom_element_t *		97524	0					
ANR	97686	CallExpression	"axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		97524	1					
ANR	97687	Callee	axiom_node_get_data_element		97524	0					
ANR	97688	Identifier	axiom_node_get_data_element		97524	0					
ANR	97689	ArgumentList	parent		97524	1					
ANR	97690	Argument	parent		97524	0					
ANR	97691	Identifier	parent		97524	0					
ANR	97692	Argument	Environment :: getEnv ( )		97524	1					
ANR	97693	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	97694	Callee	Environment :: getEnv		97524	0					
ANR	97695	Identifier	Environment :: getEnv		97524	0					
ANR	97696	ArgumentList			97524	1					
ANR	97697	ExpressionStatement	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , parent )"	179:20:5553:5633	97524	19	True				
ANR	97698	AssignmentExpression	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , parent )"		97524	0		=			
ANR	97699	Identifier	mqname		97524	0					
ANR	97700	CallExpression	"axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , parent )"		97524	1					
ANR	97701	Callee	axiom_element_get_qname		97524	0					
ANR	97702	Identifier	axiom_element_get_qname		97524	0					
ANR	97703	ArgumentList	current_element		97524	1					
ANR	97704	Argument	current_element		97524	0					
ANR	97705	Identifier	current_element		97524	0					
ANR	97706	Argument	Environment :: getEnv ( )		97524	1					
ANR	97707	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	97708	Callee	Environment :: getEnv		97524	0					
ANR	97709	Identifier	Environment :: getEnv		97524	0					
ANR	97710	ArgumentList			97524	1					
ANR	97711	Argument	parent		97524	2					
ANR	97712	Identifier	parent		97524	0					
ANR	97713	IfStatement	"if ( axutil_qname_equals ( mqname , Environment :: getEnv ( ) , this -> qname ) )"		97524	20					
ANR	97714	Condition	"axutil_qname_equals ( mqname , Environment :: getEnv ( ) , this -> qname )"	180:24:5659:5721	97524	0	True				
ANR	97715	CallExpression	"axutil_qname_equals ( mqname , Environment :: getEnv ( ) , this -> qname )"		97524	0					
ANR	97716	Callee	axutil_qname_equals		97524	0					
ANR	97717	Identifier	axutil_qname_equals		97524	0					
ANR	97718	ArgumentList	mqname		97524	1					
ANR	97719	Argument	mqname		97524	0					
ANR	97720	Identifier	mqname		97524	0					
ANR	97721	Argument	Environment :: getEnv ( )		97524	1					
ANR	97722	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	97723	Callee	Environment :: getEnv		97524	0					
ANR	97724	Identifier	Environment :: getEnv		97524	0					
ANR	97725	ArgumentList			97524	1					
ANR	97726	Argument	this -> qname		97524	2					
ANR	97727	PtrMemberAccess	this -> qname		97524	0					
ANR	97728	Identifier	this		97524	0					
ANR	97729	Identifier	qname		97524	1					
ANR	97730	CompoundStatement		42:20:1518:1518	97524	1					
ANR	97731	ExpressionStatement	"first_node = axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"	183:26:5797:5867	97524	0	True				
ANR	97732	AssignmentExpression	"first_node = axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"		97524	0		=			
ANR	97733	Identifier	first_node		97524	0					
ANR	97734	CallExpression	"axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"		97524	1					
ANR	97735	Callee	axiom_node_get_first_child		97524	0					
ANR	97736	Identifier	axiom_node_get_first_child		97524	0					
ANR	97737	ArgumentList	parent		97524	1					
ANR	97738	Argument	parent		97524	0					
ANR	97739	Identifier	parent		97524	0					
ANR	97740	Argument	Environment :: getEnv ( )		97524	1					
ANR	97741	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	97742	Callee	Environment :: getEnv		97524	0					
ANR	97743	Identifier	Environment :: getEnv		97524	0					
ANR	97744	ArgumentList			97524	1					
ANR	97745	ElseStatement	else		97524	0					
ANR	97746	CompoundStatement		48:20:1737:1737	97524	0					
ANR	97747	Statement	WSF_LOG_ERROR_MSG	188:24:5989:6005	97524	0	True				
ANR	97748	Statement	(	188:41:6006:6006	97524	1	True				
ANR	97749	Statement	Environment	188:42:6007:6017	97524	2	True				
ANR	97750	Statement	::	188:53:6018:6019	97524	3	True				
ANR	97751	Statement	getEnv	188:55:6020:6025	97524	4	True				
ANR	97752	Statement	(	188:61:6026:6026	97524	5	True				
ANR	97753	Statement	)	188:62:6027:6027	97524	6	True				
ANR	97754	Statement	->	188:63:6028:6029	97524	7	True				
ANR	97755	Statement	log	188:65:6030:6032	97524	8	True				
ANR	97756	Statement	","	188:68:6033:6033	97524	9	True				
ANR	97757	Statement	WSF_LOG_SI	188:70:6035:6044	97524	10	True				
ANR	97758	Statement	","	188:80:6045:6045	97524	11	True				
ANR	97759	Statement	"""Failed in building adb object for SubmitJob : """	189:30:6077:6124	97524	12	True				
ANR	97760	Statement	"""Expected %s but returned %s"""	190:30:6156:6184	97524	13	True				
ANR	97761	Statement	","	190:59:6185:6185	97524	14	True				
ANR	97762	Statement	axutil_qname_to_string	191:30:6217:6238	97524	15	True				
ANR	97763	Statement	(	191:52:6239:6239	97524	16	True				
ANR	97764	Statement	qname	191:53:6240:6244	97524	17	True				
ANR	97765	Statement	","	191:58:6245:6245	97524	18	True				
ANR	97766	Statement	Environment	191:60:6247:6257	97524	19	True				
ANR	97767	Statement	::	191:71:6258:6259	97524	20	True				
ANR	97768	Statement	getEnv	191:73:6260:6265	97524	21	True				
ANR	97769	Statement	(	191:79:6266:6266	97524	22	True				
ANR	97770	Statement	)	191:80:6267:6267	97524	23	True				
ANR	97771	Statement	)	191:81:6268:6268	97524	24	True				
ANR	97772	Statement	","	191:82:6269:6269	97524	25	True				
ANR	97773	Statement	axutil_qname_to_string	192:30:6301:6322	97524	26	True				
ANR	97774	Statement	(	192:52:6323:6323	97524	27	True				
ANR	97775	Statement	mqname	192:53:6324:6329	97524	28	True				
ANR	97776	Statement	","	192:59:6330:6330	97524	29	True				
ANR	97777	Statement	Environment	192:61:6332:6342	97524	30	True				
ANR	97778	Statement	::	192:72:6343:6344	97524	31	True				
ANR	97779	Statement	getEnv	192:74:6345:6350	97524	32	True				
ANR	97780	Statement	(	192:80:6351:6351	97524	33	True				
ANR	97781	Statement	)	192:81:6352:6352	97524	34	True				
ANR	97782	Statement	)	192:82:6353:6353	97524	35	True				
ANR	97783	Statement	)	192:83:6354:6354	97524	36	True				
ANR	97784	ExpressionStatement		192:84:6355:6355	97524	37	True				
ANR	97785	ReturnStatement	return AXIS2_FAILURE ;	194:24:6406:6426	97524	38	True				
ANR	97786	Identifier	AXIS2_FAILURE		97524	0					
ANR	97787	ExpressionStatement	"parent_element = ( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"	197:17:6488:6582	97524	21	True				
ANR	97788	AssignmentExpression	"parent_element = ( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		97524	0		=			
ANR	97789	Identifier	parent_element		97524	0					
ANR	97790	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		97524	1					
ANR	97791	CastTarget	axiom_element_t *		97524	0					
ANR	97792	CallExpression	"axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		97524	1					
ANR	97793	Callee	axiom_node_get_data_element		97524	0					
ANR	97794	Identifier	axiom_node_get_data_element		97524	0					
ANR	97795	ArgumentList	parent		97524	1					
ANR	97796	Argument	parent		97524	0					
ANR	97797	Identifier	parent		97524	0					
ANR	97798	Argument	Environment :: getEnv ( )		97524	1					
ANR	97799	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	97800	Callee	Environment :: getEnv		97524	0					
ANR	97801	Identifier	Environment :: getEnv		97524	0					
ANR	97802	ArgumentList			97524	1					
ANR	97803	ExpressionStatement	"attribute_hash = axiom_element_get_all_attributes ( parent_element , Environment :: getEnv ( ) )"	198:17:6601:6689	97524	22	True				
ANR	97804	AssignmentExpression	"attribute_hash = axiom_element_get_all_attributes ( parent_element , Environment :: getEnv ( ) )"		97524	0		=			
ANR	97805	Identifier	attribute_hash		97524	0					
ANR	97806	CallExpression	"axiom_element_get_all_attributes ( parent_element , Environment :: getEnv ( ) )"		97524	1					
ANR	97807	Callee	axiom_element_get_all_attributes		97524	0					
ANR	97808	Identifier	axiom_element_get_all_attributes		97524	0					
ANR	97809	ArgumentList	parent_element		97524	1					
ANR	97810	Argument	parent_element		97524	0					
ANR	97811	Identifier	parent_element		97524	0					
ANR	97812	Argument	Environment :: getEnv ( )		97524	1					
ANR	97813	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	97814	Callee	Environment :: getEnv		97524	0					
ANR	97815	Identifier	Environment :: getEnv		97524	0					
ANR	97816	ArgumentList			97524	1					
ANR	97817	ExpressionStatement	current_node = first_node	208:35:6924:6949	97524	23	True				
ANR	97818	AssignmentExpression	current_node = first_node		97524	0		=			
ANR	97819	Identifier	current_node		97524	0					
ANR	97820	Identifier	first_node		97524	1					
ANR	97821	ExpressionStatement	is_early_node_valid = false	209:35:6986:7013	97524	24	True				
ANR	97822	AssignmentExpression	is_early_node_valid = false		97524	0		=			
ANR	97823	Identifier	is_early_node_valid		97524	0					
ANR	97824	Identifier	false		97524	1					
ANR	97825	WhileStatement	"while ( current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		97524	25					
ANR	97826	Condition	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	212:42:7129:7222	97524	0	True				
ANR	97827	AndExpression	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		97524	0		&&			
ANR	97828	Identifier	current_node		97524	0					
ANR	97829	EqualityExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		97524	1		!=			
ANR	97830	CallExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) )"		97524	0					
ANR	97831	Callee	axiom_node_get_node_type		97524	0					
ANR	97832	Identifier	axiom_node_get_node_type		97524	0					
ANR	97833	ArgumentList	current_node		97524	1					
ANR	97834	Argument	current_node		97524	0					
ANR	97835	Identifier	current_node		97524	0					
ANR	97836	Argument	Environment :: getEnv ( )		97524	1					
ANR	97837	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	97838	Callee	Environment :: getEnv		97524	0					
ANR	97839	Identifier	Environment :: getEnv		97524	0					
ANR	97840	ArgumentList			97524	1					
ANR	97841	Identifier	AXIOM_ELEMENT		97524	1					
ANR	97842	CompoundStatement		74:36:3035:3035	97524	1					
ANR	97843	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	214:40:7303:7382	97524	0	True				
ANR	97844	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	0		=			
ANR	97845	Identifier	current_node		97524	0					
ANR	97846	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	97847	Callee	axiom_node_get_next_sibling		97524	0					
ANR	97848	Identifier	axiom_node_get_next_sibling		97524	0					
ANR	97849	ArgumentList	current_node		97524	1					
ANR	97850	Argument	current_node		97524	0					
ANR	97851	Identifier	current_node		97524	0					
ANR	97852	Argument	Environment :: getEnv ( )		97524	1					
ANR	97853	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	97854	Callee	Environment :: getEnv		97524	0					
ANR	97855	Identifier	Environment :: getEnv		97524	0					
ANR	97856	ArgumentList			97524	1					
ANR	97857	IfStatement	if ( current_node != NULL )		97524	26					
ANR	97858	Condition	current_node != NULL	216:39:7461:7480	97524	0	True				
ANR	97859	EqualityExpression	current_node != NULL		97524	0		!=			
ANR	97860	Identifier	current_node		97524	0					
ANR	97861	Identifier	NULL		97524	1					
ANR	97862	CompoundStatement		78:36:3293:3293	97524	1					
ANR	97863	ExpressionStatement	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	218:40:7561:7662	97524	0	True				
ANR	97864	AssignmentExpression	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		97524	0		=			
ANR	97865	Identifier	current_element		97524	0					
ANR	97866	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	97867	CastTarget	axiom_element_t *		97524	0					
ANR	97868	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	97869	Callee	axiom_node_get_data_element		97524	0					
ANR	97870	Identifier	axiom_node_get_data_element		97524	0					
ANR	97871	ArgumentList	current_node		97524	1					
ANR	97872	Argument	current_node		97524	0					
ANR	97873	Identifier	current_node		97524	0					
ANR	97874	Argument	Environment :: getEnv ( )		97524	1					
ANR	97875	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	97876	Callee	Environment :: getEnv		97524	0					
ANR	97877	Identifier	Environment :: getEnv		97524	0					
ANR	97878	ArgumentList			97524	1					
ANR	97879	ExpressionStatement	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"	219:40:7704:7790	97524	1	True				
ANR	97880	AssignmentExpression	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		97524	0		=			
ANR	97881	Identifier	mqname		97524	0					
ANR	97882	CallExpression	"axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		97524	1					
ANR	97883	Callee	axiom_element_get_qname		97524	0					
ANR	97884	Identifier	axiom_element_get_qname		97524	0					
ANR	97885	ArgumentList	current_element		97524	1					
ANR	97886	Argument	current_element		97524	0					
ANR	97887	Identifier	current_element		97524	0					
ANR	97888	Argument	Environment :: getEnv ( )		97524	1					
ANR	97889	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	97890	Callee	Environment :: getEnv		97524	0					
ANR	97891	Identifier	Environment :: getEnv		97524	0					
ANR	97892	ArgumentList			97524	1					
ANR	97893	Argument	current_node		97524	2					
ANR	97894	Identifier	current_node		97524	0					
ANR	97895	ExpressionStatement	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""cmd"" , NULL , NULL )"	222:33:7899:7976	97524	27	True				
ANR	97896	AssignmentExpression	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""cmd"" , NULL , NULL )"		97524	0		=			
ANR	97897	Identifier	element_qname		97524	0					
ANR	97898	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""cmd"" , NULL , NULL )"		97524	1					
ANR	97899	Callee	axutil_qname_create		97524	0					
ANR	97900	Identifier	axutil_qname_create		97524	0					
ANR	97901	ArgumentList	Environment :: getEnv ( )		97524	1					
ANR	97902	Argument	Environment :: getEnv ( )		97524	0					
ANR	97903	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	97904	Callee	Environment :: getEnv		97524	0					
ANR	97905	Identifier	Environment :: getEnv		97524	0					
ANR	97906	ArgumentList			97524	1					
ANR	97907	Argument	"""cmd"""		97524	1					
ANR	97908	PrimaryExpression	"""cmd"""		97524	0					
ANR	97909	Argument	NULL		97524	2					
ANR	97910	Identifier	NULL		97524	0					
ANR	97911	Argument	NULL		97524	3					
ANR	97912	Identifier	NULL		97524	0					
ANR	97913	IfStatement	"if ( ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""cmd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) ) )"		97524	28					
ANR	97914	Condition	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""cmd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"	226:32:8078:8277	97524	0	True				
ANR	97915	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""cmd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		97524	0		&&			
ANR	97916	Identifier	current_node		97524	0					
ANR	97917	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""cmd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		97524	1		&&			
ANR	97918	Identifier	current_element		97524	0					
ANR	97919	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""cmd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1		||			
ANR	97920	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		97524	0					
ANR	97921	Callee	axutil_qname_equals		97524	0					
ANR	97922	Identifier	axutil_qname_equals		97524	0					
ANR	97923	ArgumentList	element_qname		97524	1					
ANR	97924	Argument	element_qname		97524	0					
ANR	97925	Identifier	element_qname		97524	0					
ANR	97926	Argument	Environment :: getEnv ( )		97524	1					
ANR	97927	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	97928	Callee	Environment :: getEnv		97524	0					
ANR	97929	Identifier	Environment :: getEnv		97524	0					
ANR	97930	ArgumentList			97524	1					
ANR	97931	Argument	mqname		97524	2					
ANR	97932	Identifier	mqname		97524	0					
ANR	97933	UnaryOperationExpression	"! axutil_strcmp ( ""cmd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1					
ANR	97934	UnaryOperator	!		97524	0					
ANR	97935	CallExpression	"axutil_strcmp ( ""cmd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1					
ANR	97936	Callee	axutil_strcmp		97524	0					
ANR	97937	Identifier	axutil_strcmp		97524	0					
ANR	97938	ArgumentList	"""cmd"""		97524	1					
ANR	97939	Argument	"""cmd"""		97524	0					
ANR	97940	PrimaryExpression	"""cmd"""		97524	0					
ANR	97941	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		97524	1					
ANR	97942	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		97524	0					
ANR	97943	Callee	axiom_element_get_localname		97524	0					
ANR	97944	Identifier	axiom_element_get_localname		97524	0					
ANR	97945	ArgumentList	current_element		97524	1					
ANR	97946	Argument	current_element		97524	0					
ANR	97947	Identifier	current_element		97524	0					
ANR	97948	Argument	Environment :: getEnv ( )		97524	1					
ANR	97949	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	97950	Callee	Environment :: getEnv		97524	0					
ANR	97951	Identifier	Environment :: getEnv		97524	0					
ANR	97952	ArgumentList			97524	1					
ANR	97953	CompoundStatement		88:27:4081:4081	97524	1					
ANR	97954	IfStatement	"if ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""cmd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"		97524	0					
ANR	97955	Condition	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""cmd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"	228:34:8343:8540	97524	0	True				
ANR	97956	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""cmd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		97524	0		&&			
ANR	97957	Identifier	current_node		97524	0					
ANR	97958	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""cmd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		97524	1		&&			
ANR	97959	Identifier	current_element		97524	0					
ANR	97960	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""cmd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1		||			
ANR	97961	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		97524	0					
ANR	97962	Callee	axutil_qname_equals		97524	0					
ANR	97963	Identifier	axutil_qname_equals		97524	0					
ANR	97964	ArgumentList	element_qname		97524	1					
ANR	97965	Argument	element_qname		97524	0					
ANR	97966	Identifier	element_qname		97524	0					
ANR	97967	Argument	Environment :: getEnv ( )		97524	1					
ANR	97968	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	97969	Callee	Environment :: getEnv		97524	0					
ANR	97970	Identifier	Environment :: getEnv		97524	0					
ANR	97971	ArgumentList			97524	1					
ANR	97972	Argument	mqname		97524	2					
ANR	97973	Identifier	mqname		97524	0					
ANR	97974	UnaryOperationExpression	"! axutil_strcmp ( ""cmd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1					
ANR	97975	UnaryOperator	!		97524	0					
ANR	97976	CallExpression	"axutil_strcmp ( ""cmd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1					
ANR	97977	Callee	axutil_strcmp		97524	0					
ANR	97978	Identifier	axutil_strcmp		97524	0					
ANR	97979	ArgumentList	"""cmd"""		97524	1					
ANR	97980	Argument	"""cmd"""		97524	0					
ANR	97981	PrimaryExpression	"""cmd"""		97524	0					
ANR	97982	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		97524	1					
ANR	97983	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		97524	0					
ANR	97984	Callee	axiom_element_get_localname		97524	0					
ANR	97985	Identifier	axiom_element_get_localname		97524	0					
ANR	97986	ArgumentList	current_element		97524	1					
ANR	97987	Argument	current_element		97524	0					
ANR	97988	Identifier	current_element		97524	0					
ANR	97989	Argument	Environment :: getEnv ( )		97524	1					
ANR	97990	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	97991	Callee	Environment :: getEnv		97524	0					
ANR	97992	Identifier	Environment :: getEnv		97524	0					
ANR	97993	ArgumentList			97524	1					
ANR	97994	CompoundStatement		90:30:4347:4347	97524	1					
ANR	97995	ExpressionStatement	is_early_node_valid = true	230:32:8607:8633	97524	0	True				
ANR	97996	AssignmentExpression	is_early_node_valid = true		97524	0		=			
ANR	97997	Identifier	is_early_node_valid		97524	0					
ANR	97998	Identifier	true		97524	1					
ANR	97999	ExpressionStatement	"text_value = axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"	234:38:8770:8859	97524	1	True				
ANR	98000	AssignmentExpression	"text_value = axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"		97524	0		=			
ANR	98001	Identifier	text_value		97524	0					
ANR	98002	CallExpression	"axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"		97524	1					
ANR	98003	Callee	axiom_element_get_text		97524	0					
ANR	98004	Identifier	axiom_element_get_text		97524	0					
ANR	98005	ArgumentList	current_element		97524	1					
ANR	98006	Argument	current_element		97524	0					
ANR	98007	Identifier	current_element		97524	0					
ANR	98008	Argument	Environment :: getEnv ( )		97524	1					
ANR	98009	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98010	Callee	Environment :: getEnv		97524	0					
ANR	98011	Identifier	Environment :: getEnv		97524	0					
ANR	98012	ArgumentList			97524	1					
ANR	98013	Argument	current_node		97524	2					
ANR	98014	Identifier	current_node		97524	0					
ANR	98015	IfStatement	if ( text_value != NULL )		97524	2					
ANR	98016	Condition	text_value != NULL	235:41:8902:8919	97524	0	True				
ANR	98017	EqualityExpression	text_value != NULL		97524	0		!=			
ANR	98018	Identifier	text_value		97524	0					
ANR	98019	Identifier	NULL		97524	1					
ANR	98020	CompoundStatement		97:38:4734:4734	97524	1					
ANR	98021	ExpressionStatement	status = setCmd ( text_value )	237:44:9006:9033	97524	0	True				
ANR	98022	AssignmentExpression	status = setCmd ( text_value )		97524	0		=			
ANR	98023	Identifier	status		97524	0					
ANR	98024	CallExpression	setCmd ( text_value )		97524	1					
ANR	98025	Callee	setCmd		97524	0					
ANR	98026	Identifier	setCmd		97524	0					
ANR	98027	ArgumentList	text_value		97524	1					
ANR	98028	Argument	text_value		97524	0					
ANR	98029	Identifier	text_value		97524	0					
ANR	98030	ElseStatement	else		97524	0					
ANR	98031	CompoundStatement		114:44:5917:5953	97524	0					
ANR	98032	IdentifierDeclStatement	axiom_attribute_t * the_attri = NULL ;	251:44:9984:10019	97524	0	True				
ANR	98033	IdentifierDecl	* the_attri = NULL		97524	0					
ANR	98034	IdentifierDeclType	axiom_attribute_t *		97524	0					
ANR	98035	Identifier	the_attri		97524	1					
ANR	98036	AssignmentExpression	* the_attri = NULL		97524	2		=			
ANR	98037	Identifier	NULL		97524	0					
ANR	98038	Identifier	NULL		97524	1					
ANR	98039	IdentifierDeclStatement	axis2_char_t * attrib_text = NULL ;	252:44:10065:10097	97524	1	True				
ANR	98040	IdentifierDecl	* attrib_text = NULL		97524	0					
ANR	98041	IdentifierDeclType	axis2_char_t *		97524	0					
ANR	98042	Identifier	attrib_text		97524	1					
ANR	98043	AssignmentExpression	* attrib_text = NULL		97524	2		=			
ANR	98044	Identifier	NULL		97524	0					
ANR	98045	Identifier	NULL		97524	1					
ANR	98046	IdentifierDeclStatement	axutil_hash_t * attribute_hash = NULL ;	253:44:10143:10179	97524	2	True				
ANR	98047	IdentifierDecl	* attribute_hash = NULL		97524	0					
ANR	98048	IdentifierDeclType	axutil_hash_t *		97524	0					
ANR	98049	Identifier	attribute_hash		97524	1					
ANR	98050	AssignmentExpression	* attribute_hash = NULL		97524	2		=			
ANR	98051	Identifier	NULL		97524	0					
ANR	98052	Identifier	NULL		97524	1					
ANR	98053	ExpressionStatement	"attribute_hash = axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"	255:44:10226:10315	97524	3	True				
ANR	98054	AssignmentExpression	"attribute_hash = axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"		97524	0		=			
ANR	98055	Identifier	attribute_hash		97524	0					
ANR	98056	CallExpression	"axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"		97524	1					
ANR	98057	Callee	axiom_element_get_all_attributes		97524	0					
ANR	98058	Identifier	axiom_element_get_all_attributes		97524	0					
ANR	98059	ArgumentList	current_element		97524	1					
ANR	98060	Argument	current_element		97524	0					
ANR	98061	Identifier	current_element		97524	0					
ANR	98062	Argument	Environment :: getEnv ( )		97524	1					
ANR	98063	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98064	Callee	Environment :: getEnv		97524	0					
ANR	98065	Identifier	Environment :: getEnv		97524	0					
ANR	98066	ArgumentList			97524	1					
ANR	98067	ExpressionStatement	attrib_text = NULL	257:44:10362:10380	97524	4	True				
ANR	98068	AssignmentExpression	attrib_text = NULL		97524	0		=			
ANR	98069	Identifier	attrib_text		97524	0					
ANR	98070	Identifier	NULL		97524	1					
ANR	98071	IfStatement	if ( attribute_hash )		97524	5					
ANR	98072	Condition	attribute_hash	258:47:10429:10442	97524	0	True				
ANR	98073	Identifier	attribute_hash		97524	0					
ANR	98074	CompoundStatement		123:49:6448:6463	97524	1					
ANR	98075	IdentifierDeclStatement	axutil_hash_index_t * hi ;	260:49:10540:10563	97524	0	True				
ANR	98076	IdentifierDecl	* hi		97524	0					
ANR	98077	IdentifierDeclType	axutil_hash_index_t *		97524	0					
ANR	98078	Identifier	hi		97524	1					
ANR	98079	IdentifierDeclStatement	void * val ;	261:49:10614:10623	97524	1	True				
ANR	98080	IdentifierDecl	* val		97524	0					
ANR	98081	IdentifierDeclType	void *		97524	0					
ANR	98082	Identifier	val		97524	1					
ANR	98083	IdentifierDeclStatement	const void * key ;	262:49:10674:10689	97524	2	True				
ANR	98084	IdentifierDecl	* key		97524	0					
ANR	98085	IdentifierDeclType	const void *		97524	0					
ANR	98086	Identifier	key		97524	1					
ANR	98087	ForStatement	"for ( hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) ) ; hi ; hi = axutil_hash_next ( Environment :: getEnv ( ) , hi ) )"		97524	3					
ANR	98088	ForInit	"hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) ) ;"	264:54:10786:10847	97524	0	True				
ANR	98089	AssignmentExpression	"hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) )"		97524	0		=			
ANR	98090	Identifier	hi		97524	0					
ANR	98091	CallExpression	"axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) )"		97524	1					
ANR	98092	Callee	axutil_hash_first		97524	0					
ANR	98093	Identifier	axutil_hash_first		97524	0					
ANR	98094	ArgumentList	attribute_hash		97524	1					
ANR	98095	Argument	attribute_hash		97524	0					
ANR	98096	Identifier	attribute_hash		97524	0					
ANR	98097	Argument	Environment :: getEnv ( )		97524	1					
ANR	98098	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98099	Callee	Environment :: getEnv		97524	0					
ANR	98100	Identifier	Environment :: getEnv		97524	0					
ANR	98101	ArgumentList			97524	1					
ANR	98102	Condition	hi	264:117:10849:10850	97524	1	True				
ANR	98103	Identifier	hi		97524	0					
ANR	98104	AssignmentExpression	"hi = axutil_hash_next ( Environment :: getEnv ( ) , hi )"	264:121:10853:10900	97524	2	True	=			
ANR	98105	Identifier	hi		97524	0					
ANR	98106	CallExpression	"axutil_hash_next ( Environment :: getEnv ( ) , hi )"		97524	1					
ANR	98107	Callee	axutil_hash_next		97524	0					
ANR	98108	Identifier	axutil_hash_next		97524	0					
ANR	98109	ArgumentList	Environment :: getEnv ( )		97524	1					
ANR	98110	Argument	Environment :: getEnv ( )		97524	0					
ANR	98111	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98112	Callee	Environment :: getEnv		97524	0					
ANR	98113	Identifier	Environment :: getEnv		97524	0					
ANR	98114	ArgumentList			97524	1					
ANR	98115	Argument	hi		97524	1					
ANR	98116	Identifier	hi		97524	0					
ANR	98117	CompoundStatement		126:49:6726:6726	97524	3					
ANR	98118	ExpressionStatement	"axutil_hash_this ( hi , & key , NULL , & val )"	266:53:11007:11045	97524	0	True				
ANR	98119	CallExpression	"axutil_hash_this ( hi , & key , NULL , & val )"		97524	0					
ANR	98120	Callee	axutil_hash_this		97524	0					
ANR	98121	Identifier	axutil_hash_this		97524	0					
ANR	98122	ArgumentList	hi		97524	1					
ANR	98123	Argument	hi		97524	0					
ANR	98124	Identifier	hi		97524	0					
ANR	98125	Argument	& key		97524	1					
ANR	98126	UnaryOperationExpression	& key		97524	0					
ANR	98127	UnaryOperator	&		97524	0					
ANR	98128	Identifier	key		97524	1					
ANR	98129	Argument	NULL		97524	2					
ANR	98130	Identifier	NULL		97524	0					
ANR	98131	Argument	& val		97524	3					
ANR	98132	UnaryOperationExpression	& val		97524	0					
ANR	98133	UnaryOperator	&		97524	0					
ANR	98134	Identifier	val		97524	1					
ANR	98135	IfStatement	"if ( strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" ) )"		97524	1					
ANR	98136	Condition	"strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" )"	268:56:11157:11231	97524	0	True				
ANR	98137	CallExpression	"strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" )"		97524	0					
ANR	98138	Callee	strstr		97524	0					
ANR	98139	Identifier	strstr		97524	0					
ANR	98140	ArgumentList	( axis2_char_t * ) key		97524	1					
ANR	98141	Argument	( axis2_char_t * ) key		97524	0					
ANR	98142	CastExpression	( axis2_char_t * ) key		97524	0					
ANR	98143	CastTarget	axis2_char_t *		97524	0					
ANR	98144	Identifier	key		97524	1					
ANR	98145	Argument	"""nil|http://www.w3.org/2001/XMLSchema-instance"""		97524	1					
ANR	98146	PrimaryExpression	"""nil|http://www.w3.org/2001/XMLSchema-instance"""		97524	0					
ANR	98147	CompoundStatement		130:53:7061:7061	97524	1					
ANR	98148	ExpressionStatement	the_attri = ( axiom_attribute_t * ) val	270:57:11346:11381	97524	0	True				
ANR	98149	AssignmentExpression	the_attri = ( axiom_attribute_t * ) val		97524	0		=			
ANR	98150	Identifier	the_attri		97524	0					
ANR	98151	CastExpression	( axiom_attribute_t * ) val		97524	1					
ANR	98152	CastTarget	axiom_attribute_t *		97524	0					
ANR	98153	Identifier	val		97524	1					
ANR	98154	BreakStatement	break ;	271:57:11440:11445	97524	1	True				
ANR	98155	IfStatement	if ( the_attri )		97524	6					
ANR	98156	Condition	the_attri	276:47:11647:11655	97524	0	True				
ANR	98157	Identifier	the_attri		97524	0					
ANR	98158	CompoundStatement		138:44:7476:7476	97524	1					
ANR	98159	ExpressionStatement	"attrib_text = axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"	278:48:11752:11825	97524	0	True				
ANR	98160	AssignmentExpression	"attrib_text = axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"		97524	0		=			
ANR	98161	Identifier	attrib_text		97524	0					
ANR	98162	CallExpression	"axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"		97524	1					
ANR	98163	Callee	axiom_attribute_get_value		97524	0					
ANR	98164	Identifier	axiom_attribute_get_value		97524	0					
ANR	98165	ArgumentList	the_attri		97524	1					
ANR	98166	Argument	the_attri		97524	0					
ANR	98167	Identifier	the_attri		97524	0					
ANR	98168	Argument	Environment :: getEnv ( )		97524	1					
ANR	98169	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98170	Callee	Environment :: getEnv		97524	0					
ANR	98171	Identifier	Environment :: getEnv		97524	0					
ANR	98172	ArgumentList			97524	1					
ANR	98173	ElseStatement	else		97524	0					
ANR	98174	CompoundStatement		142:44:7740:7740	97524	0					
ANR	98175	ExpressionStatement	"attrib_text = axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"	283:48:12205:12307	97524	0	True				
ANR	98176	AssignmentExpression	"attrib_text = axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"		97524	0		=			
ANR	98177	Identifier	attrib_text		97524	0					
ANR	98178	CallExpression	"axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"		97524	1					
ANR	98179	Callee	axiom_element_get_attribute_value_by_name		97524	0					
ANR	98180	Identifier	axiom_element_get_attribute_value_by_name		97524	0					
ANR	98181	ArgumentList	current_element		97524	1					
ANR	98182	Argument	current_element		97524	0					
ANR	98183	Identifier	current_element		97524	0					
ANR	98184	Argument	Environment :: getEnv ( )		97524	1					
ANR	98185	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98186	Callee	Environment :: getEnv		97524	0					
ANR	98187	Identifier	Environment :: getEnv		97524	0					
ANR	98188	ArgumentList			97524	1					
ANR	98189	Argument	"""nil"""		97524	2					
ANR	98190	PrimaryExpression	"""nil"""		97524	0					
ANR	98191	IfStatement	"if ( attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" ) )"		97524	7					
ANR	98192	Condition	"attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" )"	286:47:12403:12453	97524	0	True				
ANR	98193	AndExpression	"attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" )"		97524	0		&&			
ANR	98194	Identifier	attrib_text		97524	0					
ANR	98195	EqualityExpression	"0 == axutil_strcmp ( attrib_text , ""1"" )"		97524	1		==			
ANR	98196	PrimaryExpression	0		97524	0					
ANR	98197	CallExpression	"axutil_strcmp ( attrib_text , ""1"" )"		97524	1					
ANR	98198	Callee	axutil_strcmp		97524	0					
ANR	98199	Identifier	axutil_strcmp		97524	0					
ANR	98200	ArgumentList	attrib_text		97524	1					
ANR	98201	Argument	attrib_text		97524	0					
ANR	98202	Identifier	attrib_text		97524	0					
ANR	98203	Argument	"""1"""		97524	1					
ANR	98204	PrimaryExpression	"""1"""		97524	0					
ANR	98205	CompoundStatement		148:44:8274:8274	97524	1					
ANR	98206	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""NULL value is set to a non nillable element cmd"" )"	288:48:12550:12658	97524	0	True				
ANR	98207	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""NULL value is set to a non nillable element cmd"" )"		97524	0					
ANR	98208	Callee	WSF_LOG_ERROR_MSG		97524	0					
ANR	98209	Identifier	WSF_LOG_ERROR_MSG		97524	0					
ANR	98210	ArgumentList	Environment :: getEnv ( ) -> log		97524	1					
ANR	98211	Argument	Environment :: getEnv ( ) -> log		97524	0					
ANR	98212	PtrMemberAccess	Environment :: getEnv ( ) -> log		97524	0					
ANR	98213	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98214	Callee	Environment :: getEnv		97524	0					
ANR	98215	Identifier	Environment :: getEnv		97524	0					
ANR	98216	ArgumentList			97524	1					
ANR	98217	Identifier	log		97524	1					
ANR	98218	Argument	WSF_LOG_SI		97524	1					
ANR	98219	Identifier	WSF_LOG_SI		97524	0					
ANR	98220	Argument	"""NULL value is set to a non nillable element cmd"""		97524	2					
ANR	98221	PrimaryExpression	"""NULL value is set to a non nillable element cmd"""		97524	0					
ANR	98222	ExpressionStatement	status = AXIS2_FAILURE	289:48:12708:12730	97524	1	True				
ANR	98223	AssignmentExpression	status = AXIS2_FAILURE		97524	0		=			
ANR	98224	Identifier	status		97524	0					
ANR	98225	Identifier	AXIS2_FAILURE		97524	1					
ANR	98226	ElseStatement	else		97524	0					
ANR	98227	CompoundStatement		153:44:8645:8645	97524	0					
ANR	98228	ExpressionStatement	"status = setCmd ( """" )"	294:48:13018:13037	97524	0	True				
ANR	98229	AssignmentExpression	"status = setCmd ( """" )"		97524	0		=			
ANR	98230	Identifier	status		97524	0					
ANR	98231	CallExpression	"setCmd ( """" )"		97524	1					
ANR	98232	Callee	setCmd		97524	0					
ANR	98233	Identifier	setCmd		97524	0					
ANR	98234	ArgumentList	""""""		97524	1					
ANR	98235	Argument	""""""		97524	0					
ANR	98236	PrimaryExpression	""""""		97524	0					
ANR	98237	IfStatement	if ( AXIS2_FAILURE == status )		97524	3					
ANR	98238	Condition	AXIS2_FAILURE == status	298:36:13200:13223	97524	0	True				
ANR	98239	EqualityExpression	AXIS2_FAILURE == status		97524	0		==			
ANR	98240	Identifier	AXIS2_FAILURE		97524	0					
ANR	98241	Identifier	status		97524	1					
ANR	98242	CompoundStatement		160:33:9033:9033	97524	1					
ANR	98243	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for cmd "" )"	300:37:13298:13394	97524	0	True				
ANR	98244	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for cmd "" )"		97524	0					
ANR	98245	Callee	WSF_LOG_ERROR_MSG		97524	0					
ANR	98246	Identifier	WSF_LOG_ERROR_MSG		97524	0					
ANR	98247	ArgumentList	Environment :: getEnv ( ) -> log		97524	1					
ANR	98248	Argument	Environment :: getEnv ( ) -> log		97524	0					
ANR	98249	PtrMemberAccess	Environment :: getEnv ( ) -> log		97524	0					
ANR	98250	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98251	Callee	Environment :: getEnv		97524	0					
ANR	98252	Identifier	Environment :: getEnv		97524	0					
ANR	98253	ArgumentList			97524	1					
ANR	98254	Identifier	log		97524	1					
ANR	98255	Argument	WSF_LOG_SI		97524	1					
ANR	98256	Identifier	WSF_LOG_SI		97524	0					
ANR	98257	Argument	"""failed in setting the value for cmd """		97524	2					
ANR	98258	PrimaryExpression	"""failed in setting the value for cmd """		97524	0					
ANR	98259	IfStatement	if ( element_qname )		97524	1					
ANR	98260	Condition	element_qname	301:40:13436:13448	97524	0	True				
ANR	98261	Identifier	element_qname		97524	0					
ANR	98262	CompoundStatement		163:37:9262:9262	97524	1					
ANR	98263	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	303:41:13531:13586	97524	0	True				
ANR	98264	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		97524	0					
ANR	98265	Callee	axutil_qname_free		97524	0					
ANR	98266	Identifier	axutil_qname_free		97524	0					
ANR	98267	ArgumentList	element_qname		97524	1					
ANR	98268	Argument	element_qname		97524	0					
ANR	98269	Identifier	element_qname		97524	0					
ANR	98270	Argument	Environment :: getEnv ( )		97524	1					
ANR	98271	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98272	Callee	Environment :: getEnv		97524	0					
ANR	98273	Identifier	Environment :: getEnv		97524	0					
ANR	98274	ArgumentList			97524	1					
ANR	98275	ReturnStatement	return AXIS2_FAILURE ;	305:37:13664:13684	97524	2	True				
ANR	98276	Identifier	AXIS2_FAILURE		97524	0					
ANR	98277	ElseStatement	else		97524	0					
ANR	98278	IfStatement	if ( ! dont_care_minoccurs )		97524	0					
ANR	98279	Condition	! dont_care_minoccurs	309:38:13819:13838	97524	0	True				
ANR	98280	UnaryOperationExpression	! dont_care_minoccurs		97524	0					
ANR	98281	UnaryOperator	!		97524	0					
ANR	98282	Identifier	dont_care_minoccurs		97524	1					
ANR	98283	CompoundStatement		171:30:9645:9645	97524	1					
ANR	98284	IfStatement	if ( element_qname )		97524	0					
ANR	98285	Condition	element_qname	311:37:13910:13922	97524	0	True				
ANR	98286	Identifier	element_qname		97524	0					
ANR	98287	CompoundStatement		173:34:9733:9733	97524	1					
ANR	98288	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	313:38:13999:14054	97524	0	True				
ANR	98289	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		97524	0					
ANR	98290	Callee	axutil_qname_free		97524	0					
ANR	98291	Identifier	axutil_qname_free		97524	0					
ANR	98292	ArgumentList	element_qname		97524	1					
ANR	98293	Argument	element_qname		97524	0					
ANR	98294	Identifier	element_qname		97524	0					
ANR	98295	Argument	Environment :: getEnv ( )		97524	1					
ANR	98296	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98297	Callee	Environment :: getEnv		97524	0					
ANR	98298	Identifier	Environment :: getEnv		97524	0					
ANR	98299	ArgumentList			97524	1					
ANR	98300	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""non nillable or minOuccrs != 0 element cmd missing"" )"	316:6:14168:14278	97524	1	True				
ANR	98301	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""non nillable or minOuccrs != 0 element cmd missing"" )"		97524	0					
ANR	98302	Callee	WSF_LOG_ERROR_MSG		97524	0					
ANR	98303	Identifier	WSF_LOG_ERROR_MSG		97524	0					
ANR	98304	ArgumentList	Environment :: getEnv ( ) -> log		97524	1					
ANR	98305	Argument	Environment :: getEnv ( ) -> log		97524	0					
ANR	98306	PtrMemberAccess	Environment :: getEnv ( ) -> log		97524	0					
ANR	98307	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98308	Callee	Environment :: getEnv		97524	0					
ANR	98309	Identifier	Environment :: getEnv		97524	0					
ANR	98310	ArgumentList			97524	1					
ANR	98311	Identifier	log		97524	1					
ANR	98312	Argument	WSF_LOG_SI		97524	1					
ANR	98313	Identifier	WSF_LOG_SI		97524	0					
ANR	98314	Argument	"""non nillable or minOuccrs != 0 element cmd missing"""		97524	2					
ANR	98315	PrimaryExpression	"""non nillable or minOuccrs != 0 element cmd missing"""		97524	0					
ANR	98316	ReturnStatement	return AXIS2_FAILURE ;	317:34:14314:14334	97524	2	True				
ANR	98317	Identifier	AXIS2_FAILURE		97524	0					
ANR	98318	IfStatement	if ( element_qname )		97524	29					
ANR	98319	Condition	element_qname	320:21:14417:14429	97524	0	True				
ANR	98320	Identifier	element_qname		97524	0					
ANR	98321	CompoundStatement		182:18:10224:10224	97524	1					
ANR	98322	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	322:21:14473:14528	97524	0	True				
ANR	98323	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		97524	0					
ANR	98324	Callee	axutil_qname_free		97524	0					
ANR	98325	Identifier	axutil_qname_free		97524	0					
ANR	98326	ArgumentList	element_qname		97524	1					
ANR	98327	Argument	element_qname		97524	0					
ANR	98328	Identifier	element_qname		97524	0					
ANR	98329	Argument	Environment :: getEnv ( )		97524	1					
ANR	98330	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98331	Callee	Environment :: getEnv		97524	0					
ANR	98332	Identifier	Environment :: getEnv		97524	0					
ANR	98333	ArgumentList			97524	1					
ANR	98334	ExpressionStatement	element_qname = NULL	323:21:14551:14571	97524	1	True				
ANR	98335	AssignmentExpression	element_qname = NULL		97524	0		=			
ANR	98336	Identifier	element_qname		97524	0					
ANR	98337	Identifier	NULL		97524	1					
ANR	98338	IfStatement	if ( current_node != NULL && is_early_node_valid )		97524	30					
ANR	98339	Condition	current_node != NULL && is_early_node_valid	339:38:15067:15109	97524	0	True				
ANR	98340	AndExpression	current_node != NULL && is_early_node_valid		97524	0		&&			
ANR	98341	EqualityExpression	current_node != NULL		97524	0		!=			
ANR	98342	Identifier	current_node		97524	0					
ANR	98343	Identifier	NULL		97524	1					
ANR	98344	Identifier	is_early_node_valid		97524	1					
ANR	98345	CompoundStatement		201:35:10921:10921	97524	1					
ANR	98346	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	341:39:15188:15267	97524	0	True				
ANR	98347	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	0		=			
ANR	98348	Identifier	current_node		97524	0					
ANR	98349	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	98350	Callee	axiom_node_get_next_sibling		97524	0					
ANR	98351	Identifier	axiom_node_get_next_sibling		97524	0					
ANR	98352	ArgumentList	current_node		97524	1					
ANR	98353	Argument	current_node		97524	0					
ANR	98354	Identifier	current_node		97524	0					
ANR	98355	Argument	Environment :: getEnv ( )		97524	1					
ANR	98356	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98357	Callee	Environment :: getEnv		97524	0					
ANR	98358	Identifier	Environment :: getEnv		97524	0					
ANR	98359	ArgumentList			97524	1					
ANR	98360	WhileStatement	"while ( current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		97524	1					
ANR	98361	Condition	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	344:46:15395:15488	97524	0	True				
ANR	98362	AndExpression	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		97524	0		&&			
ANR	98363	Identifier	current_node		97524	0					
ANR	98364	EqualityExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		97524	1		!=			
ANR	98365	CallExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) )"		97524	0					
ANR	98366	Callee	axiom_node_get_node_type		97524	0					
ANR	98367	Identifier	axiom_node_get_node_type		97524	0					
ANR	98368	ArgumentList	current_node		97524	1					
ANR	98369	Argument	current_node		97524	0					
ANR	98370	Identifier	current_node		97524	0					
ANR	98371	Argument	Environment :: getEnv ( )		97524	1					
ANR	98372	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98373	Callee	Environment :: getEnv		97524	0					
ANR	98374	Identifier	Environment :: getEnv		97524	0					
ANR	98375	ArgumentList			97524	1					
ANR	98376	Identifier	AXIOM_ELEMENT		97524	1					
ANR	98377	CompoundStatement		206:40:11305:11305	97524	1					
ANR	98378	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	346:44:15577:15656	97524	0	True				
ANR	98379	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	0		=			
ANR	98380	Identifier	current_node		97524	0					
ANR	98381	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	98382	Callee	axiom_node_get_next_sibling		97524	0					
ANR	98383	Identifier	axiom_node_get_next_sibling		97524	0					
ANR	98384	ArgumentList	current_node		97524	1					
ANR	98385	Argument	current_node		97524	0					
ANR	98386	Identifier	current_node		97524	0					
ANR	98387	Argument	Environment :: getEnv ( )		97524	1					
ANR	98388	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98389	Callee	Environment :: getEnv		97524	0					
ANR	98390	Identifier	Environment :: getEnv		97524	0					
ANR	98391	ArgumentList			97524	1					
ANR	98392	IfStatement	if ( current_node != NULL )		97524	2					
ANR	98393	Condition	current_node != NULL	348:43:15743:15762	97524	0	True				
ANR	98394	EqualityExpression	current_node != NULL		97524	0		!=			
ANR	98395	Identifier	current_node		97524	0					
ANR	98396	Identifier	NULL		97524	1					
ANR	98397	CompoundStatement		210:40:11579:11579	97524	1					
ANR	98398	ExpressionStatement	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	350:44:15851:15952	97524	0	True				
ANR	98399	AssignmentExpression	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		97524	0		=			
ANR	98400	Identifier	current_element		97524	0					
ANR	98401	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	98402	CastTarget	axiom_element_t *		97524	0					
ANR	98403	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	98404	Callee	axiom_node_get_data_element		97524	0					
ANR	98405	Identifier	axiom_node_get_data_element		97524	0					
ANR	98406	ArgumentList	current_node		97524	1					
ANR	98407	Argument	current_node		97524	0					
ANR	98408	Identifier	current_node		97524	0					
ANR	98409	Argument	Environment :: getEnv ( )		97524	1					
ANR	98410	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98411	Callee	Environment :: getEnv		97524	0					
ANR	98412	Identifier	Environment :: getEnv		97524	0					
ANR	98413	ArgumentList			97524	1					
ANR	98414	ExpressionStatement	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"	351:44:15998:16084	97524	1	True				
ANR	98415	AssignmentExpression	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		97524	0		=			
ANR	98416	Identifier	mqname		97524	0					
ANR	98417	CallExpression	"axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		97524	1					
ANR	98418	Callee	axiom_element_get_qname		97524	0					
ANR	98419	Identifier	axiom_element_get_qname		97524	0					
ANR	98420	ArgumentList	current_element		97524	1					
ANR	98421	Argument	current_element		97524	0					
ANR	98422	Identifier	current_element		97524	0					
ANR	98423	Argument	Environment :: getEnv ( )		97524	1					
ANR	98424	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98425	Callee	Environment :: getEnv		97524	0					
ANR	98426	Identifier	Environment :: getEnv		97524	0					
ANR	98427	ArgumentList			97524	1					
ANR	98428	Argument	current_node		97524	2					
ANR	98429	Identifier	current_node		97524	0					
ANR	98430	ExpressionStatement	is_early_node_valid = false	355:35:16240:16267	97524	31	True				
ANR	98431	AssignmentExpression	is_early_node_valid = false		97524	0		=			
ANR	98432	Identifier	is_early_node_valid		97524	0					
ANR	98433	Identifier	false		97524	1					
ANR	98434	ExpressionStatement	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""args"" , NULL , NULL )"	357:33:16336:16414	97524	32	True				
ANR	98435	AssignmentExpression	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""args"" , NULL , NULL )"		97524	0		=			
ANR	98436	Identifier	element_qname		97524	0					
ANR	98437	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""args"" , NULL , NULL )"		97524	1					
ANR	98438	Callee	axutil_qname_create		97524	0					
ANR	98439	Identifier	axutil_qname_create		97524	0					
ANR	98440	ArgumentList	Environment :: getEnv ( )		97524	1					
ANR	98441	Argument	Environment :: getEnv ( )		97524	0					
ANR	98442	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98443	Callee	Environment :: getEnv		97524	0					
ANR	98444	Identifier	Environment :: getEnv		97524	0					
ANR	98445	ArgumentList			97524	1					
ANR	98446	Argument	"""args"""		97524	1					
ANR	98447	PrimaryExpression	"""args"""		97524	0					
ANR	98448	Argument	NULL		97524	2					
ANR	98449	Identifier	NULL		97524	0					
ANR	98450	Argument	NULL		97524	3					
ANR	98451	Identifier	NULL		97524	0					
ANR	98452	IfStatement	"if ( ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""args"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) ) )"		97524	33					
ANR	98453	Condition	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""args"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"	361:32:16516:16716	97524	0	True				
ANR	98454	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""args"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		97524	0		&&			
ANR	98455	Identifier	current_node		97524	0					
ANR	98456	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""args"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		97524	1		&&			
ANR	98457	Identifier	current_element		97524	0					
ANR	98458	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""args"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1		||			
ANR	98459	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		97524	0					
ANR	98460	Callee	axutil_qname_equals		97524	0					
ANR	98461	Identifier	axutil_qname_equals		97524	0					
ANR	98462	ArgumentList	element_qname		97524	1					
ANR	98463	Argument	element_qname		97524	0					
ANR	98464	Identifier	element_qname		97524	0					
ANR	98465	Argument	Environment :: getEnv ( )		97524	1					
ANR	98466	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98467	Callee	Environment :: getEnv		97524	0					
ANR	98468	Identifier	Environment :: getEnv		97524	0					
ANR	98469	ArgumentList			97524	1					
ANR	98470	Argument	mqname		97524	2					
ANR	98471	Identifier	mqname		97524	0					
ANR	98472	UnaryOperationExpression	"! axutil_strcmp ( ""args"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1					
ANR	98473	UnaryOperator	!		97524	0					
ANR	98474	CallExpression	"axutil_strcmp ( ""args"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1					
ANR	98475	Callee	axutil_strcmp		97524	0					
ANR	98476	Identifier	axutil_strcmp		97524	0					
ANR	98477	ArgumentList	"""args"""		97524	1					
ANR	98478	Argument	"""args"""		97524	0					
ANR	98479	PrimaryExpression	"""args"""		97524	0					
ANR	98480	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		97524	1					
ANR	98481	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		97524	0					
ANR	98482	Callee	axiom_element_get_localname		97524	0					
ANR	98483	Identifier	axiom_element_get_localname		97524	0					
ANR	98484	ArgumentList	current_element		97524	1					
ANR	98485	Argument	current_element		97524	0					
ANR	98486	Identifier	current_element		97524	0					
ANR	98487	Argument	Environment :: getEnv ( )		97524	1					
ANR	98488	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98489	Callee	Environment :: getEnv		97524	0					
ANR	98490	Identifier	Environment :: getEnv		97524	0					
ANR	98491	ArgumentList			97524	1					
ANR	98492	CompoundStatement		223:27:12520:12520	97524	1					
ANR	98493	IfStatement	"if ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""args"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"		97524	0					
ANR	98494	Condition	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""args"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"	363:34:16782:16980	97524	0	True				
ANR	98495	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""args"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		97524	0		&&			
ANR	98496	Identifier	current_node		97524	0					
ANR	98497	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""args"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		97524	1		&&			
ANR	98498	Identifier	current_element		97524	0					
ANR	98499	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""args"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1		||			
ANR	98500	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		97524	0					
ANR	98501	Callee	axutil_qname_equals		97524	0					
ANR	98502	Identifier	axutil_qname_equals		97524	0					
ANR	98503	ArgumentList	element_qname		97524	1					
ANR	98504	Argument	element_qname		97524	0					
ANR	98505	Identifier	element_qname		97524	0					
ANR	98506	Argument	Environment :: getEnv ( )		97524	1					
ANR	98507	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98508	Callee	Environment :: getEnv		97524	0					
ANR	98509	Identifier	Environment :: getEnv		97524	0					
ANR	98510	ArgumentList			97524	1					
ANR	98511	Argument	mqname		97524	2					
ANR	98512	Identifier	mqname		97524	0					
ANR	98513	UnaryOperationExpression	"! axutil_strcmp ( ""args"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1					
ANR	98514	UnaryOperator	!		97524	0					
ANR	98515	CallExpression	"axutil_strcmp ( ""args"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1					
ANR	98516	Callee	axutil_strcmp		97524	0					
ANR	98517	Identifier	axutil_strcmp		97524	0					
ANR	98518	ArgumentList	"""args"""		97524	1					
ANR	98519	Argument	"""args"""		97524	0					
ANR	98520	PrimaryExpression	"""args"""		97524	0					
ANR	98521	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		97524	1					
ANR	98522	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		97524	0					
ANR	98523	Callee	axiom_element_get_localname		97524	0					
ANR	98524	Identifier	axiom_element_get_localname		97524	0					
ANR	98525	ArgumentList	current_element		97524	1					
ANR	98526	Argument	current_element		97524	0					
ANR	98527	Identifier	current_element		97524	0					
ANR	98528	Argument	Environment :: getEnv ( )		97524	1					
ANR	98529	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98530	Callee	Environment :: getEnv		97524	0					
ANR	98531	Identifier	Environment :: getEnv		97524	0					
ANR	98532	ArgumentList			97524	1					
ANR	98533	CompoundStatement		225:30:12787:12787	97524	1					
ANR	98534	ExpressionStatement	is_early_node_valid = true	365:32:17047:17073	97524	0	True				
ANR	98535	AssignmentExpression	is_early_node_valid = true		97524	0		=			
ANR	98536	Identifier	is_early_node_valid		97524	0					
ANR	98537	Identifier	true		97524	1					
ANR	98538	ExpressionStatement	"text_value = axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"	369:38:17210:17299	97524	1	True				
ANR	98539	AssignmentExpression	"text_value = axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"		97524	0		=			
ANR	98540	Identifier	text_value		97524	0					
ANR	98541	CallExpression	"axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"		97524	1					
ANR	98542	Callee	axiom_element_get_text		97524	0					
ANR	98543	Identifier	axiom_element_get_text		97524	0					
ANR	98544	ArgumentList	current_element		97524	1					
ANR	98545	Argument	current_element		97524	0					
ANR	98546	Identifier	current_element		97524	0					
ANR	98547	Argument	Environment :: getEnv ( )		97524	1					
ANR	98548	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98549	Callee	Environment :: getEnv		97524	0					
ANR	98550	Identifier	Environment :: getEnv		97524	0					
ANR	98551	ArgumentList			97524	1					
ANR	98552	Argument	current_node		97524	2					
ANR	98553	Identifier	current_node		97524	0					
ANR	98554	IfStatement	if ( text_value != NULL )		97524	2					
ANR	98555	Condition	text_value != NULL	370:41:17342:17359	97524	0	True				
ANR	98556	EqualityExpression	text_value != NULL		97524	0		!=			
ANR	98557	Identifier	text_value		97524	0					
ANR	98558	Identifier	NULL		97524	1					
ANR	98559	CompoundStatement		232:38:13174:13174	97524	1					
ANR	98560	ExpressionStatement	status = setArgs ( text_value )	372:44:17446:17474	97524	0	True				
ANR	98561	AssignmentExpression	status = setArgs ( text_value )		97524	0		=			
ANR	98562	Identifier	status		97524	0					
ANR	98563	CallExpression	setArgs ( text_value )		97524	1					
ANR	98564	Callee	setArgs		97524	0					
ANR	98565	Identifier	setArgs		97524	0					
ANR	98566	ArgumentList	text_value		97524	1					
ANR	98567	Argument	text_value		97524	0					
ANR	98568	Identifier	text_value		97524	0					
ANR	98569	ElseStatement	else		97524	0					
ANR	98570	CompoundStatement		249:44:14358:14394	97524	0					
ANR	98571	IdentifierDeclStatement	axiom_attribute_t * the_attri = NULL ;	386:44:18425:18460	97524	0	True				
ANR	98572	IdentifierDecl	* the_attri = NULL		97524	0					
ANR	98573	IdentifierDeclType	axiom_attribute_t *		97524	0					
ANR	98574	Identifier	the_attri		97524	1					
ANR	98575	AssignmentExpression	* the_attri = NULL		97524	2		=			
ANR	98576	Identifier	NULL		97524	0					
ANR	98577	Identifier	NULL		97524	1					
ANR	98578	IdentifierDeclStatement	axis2_char_t * attrib_text = NULL ;	387:44:18506:18538	97524	1	True				
ANR	98579	IdentifierDecl	* attrib_text = NULL		97524	0					
ANR	98580	IdentifierDeclType	axis2_char_t *		97524	0					
ANR	98581	Identifier	attrib_text		97524	1					
ANR	98582	AssignmentExpression	* attrib_text = NULL		97524	2		=			
ANR	98583	Identifier	NULL		97524	0					
ANR	98584	Identifier	NULL		97524	1					
ANR	98585	IdentifierDeclStatement	axutil_hash_t * attribute_hash = NULL ;	388:44:18584:18620	97524	2	True				
ANR	98586	IdentifierDecl	* attribute_hash = NULL		97524	0					
ANR	98587	IdentifierDeclType	axutil_hash_t *		97524	0					
ANR	98588	Identifier	attribute_hash		97524	1					
ANR	98589	AssignmentExpression	* attribute_hash = NULL		97524	2		=			
ANR	98590	Identifier	NULL		97524	0					
ANR	98591	Identifier	NULL		97524	1					
ANR	98592	ExpressionStatement	"attribute_hash = axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"	390:44:18667:18756	97524	3	True				
ANR	98593	AssignmentExpression	"attribute_hash = axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"		97524	0		=			
ANR	98594	Identifier	attribute_hash		97524	0					
ANR	98595	CallExpression	"axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"		97524	1					
ANR	98596	Callee	axiom_element_get_all_attributes		97524	0					
ANR	98597	Identifier	axiom_element_get_all_attributes		97524	0					
ANR	98598	ArgumentList	current_element		97524	1					
ANR	98599	Argument	current_element		97524	0					
ANR	98600	Identifier	current_element		97524	0					
ANR	98601	Argument	Environment :: getEnv ( )		97524	1					
ANR	98602	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98603	Callee	Environment :: getEnv		97524	0					
ANR	98604	Identifier	Environment :: getEnv		97524	0					
ANR	98605	ArgumentList			97524	1					
ANR	98606	ExpressionStatement	attrib_text = NULL	392:44:18803:18821	97524	4	True				
ANR	98607	AssignmentExpression	attrib_text = NULL		97524	0		=			
ANR	98608	Identifier	attrib_text		97524	0					
ANR	98609	Identifier	NULL		97524	1					
ANR	98610	IfStatement	if ( attribute_hash )		97524	5					
ANR	98611	Condition	attribute_hash	393:47:18870:18883	97524	0	True				
ANR	98612	Identifier	attribute_hash		97524	0					
ANR	98613	CompoundStatement		258:49:14889:14904	97524	1					
ANR	98614	IdentifierDeclStatement	axutil_hash_index_t * hi ;	395:49:18981:19004	97524	0	True				
ANR	98615	IdentifierDecl	* hi		97524	0					
ANR	98616	IdentifierDeclType	axutil_hash_index_t *		97524	0					
ANR	98617	Identifier	hi		97524	1					
ANR	98618	IdentifierDeclStatement	void * val ;	396:49:19055:19064	97524	1	True				
ANR	98619	IdentifierDecl	* val		97524	0					
ANR	98620	IdentifierDeclType	void *		97524	0					
ANR	98621	Identifier	val		97524	1					
ANR	98622	IdentifierDeclStatement	const void * key ;	397:49:19115:19130	97524	2	True				
ANR	98623	IdentifierDecl	* key		97524	0					
ANR	98624	IdentifierDeclType	const void *		97524	0					
ANR	98625	Identifier	key		97524	1					
ANR	98626	ForStatement	"for ( hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) ) ; hi ; hi = axutil_hash_next ( Environment :: getEnv ( ) , hi ) )"		97524	3					
ANR	98627	ForInit	"hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) ) ;"	399:54:19227:19288	97524	0	True				
ANR	98628	AssignmentExpression	"hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) )"		97524	0		=			
ANR	98629	Identifier	hi		97524	0					
ANR	98630	CallExpression	"axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) )"		97524	1					
ANR	98631	Callee	axutil_hash_first		97524	0					
ANR	98632	Identifier	axutil_hash_first		97524	0					
ANR	98633	ArgumentList	attribute_hash		97524	1					
ANR	98634	Argument	attribute_hash		97524	0					
ANR	98635	Identifier	attribute_hash		97524	0					
ANR	98636	Argument	Environment :: getEnv ( )		97524	1					
ANR	98637	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98638	Callee	Environment :: getEnv		97524	0					
ANR	98639	Identifier	Environment :: getEnv		97524	0					
ANR	98640	ArgumentList			97524	1					
ANR	98641	Condition	hi	399:117:19290:19291	97524	1	True				
ANR	98642	Identifier	hi		97524	0					
ANR	98643	AssignmentExpression	"hi = axutil_hash_next ( Environment :: getEnv ( ) , hi )"	399:121:19294:19341	97524	2	True	=			
ANR	98644	Identifier	hi		97524	0					
ANR	98645	CallExpression	"axutil_hash_next ( Environment :: getEnv ( ) , hi )"		97524	1					
ANR	98646	Callee	axutil_hash_next		97524	0					
ANR	98647	Identifier	axutil_hash_next		97524	0					
ANR	98648	ArgumentList	Environment :: getEnv ( )		97524	1					
ANR	98649	Argument	Environment :: getEnv ( )		97524	0					
ANR	98650	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98651	Callee	Environment :: getEnv		97524	0					
ANR	98652	Identifier	Environment :: getEnv		97524	0					
ANR	98653	ArgumentList			97524	1					
ANR	98654	Argument	hi		97524	1					
ANR	98655	Identifier	hi		97524	0					
ANR	98656	CompoundStatement		261:49:15167:15167	97524	3					
ANR	98657	ExpressionStatement	"axutil_hash_this ( hi , & key , NULL , & val )"	401:53:19448:19486	97524	0	True				
ANR	98658	CallExpression	"axutil_hash_this ( hi , & key , NULL , & val )"		97524	0					
ANR	98659	Callee	axutil_hash_this		97524	0					
ANR	98660	Identifier	axutil_hash_this		97524	0					
ANR	98661	ArgumentList	hi		97524	1					
ANR	98662	Argument	hi		97524	0					
ANR	98663	Identifier	hi		97524	0					
ANR	98664	Argument	& key		97524	1					
ANR	98665	UnaryOperationExpression	& key		97524	0					
ANR	98666	UnaryOperator	&		97524	0					
ANR	98667	Identifier	key		97524	1					
ANR	98668	Argument	NULL		97524	2					
ANR	98669	Identifier	NULL		97524	0					
ANR	98670	Argument	& val		97524	3					
ANR	98671	UnaryOperationExpression	& val		97524	0					
ANR	98672	UnaryOperator	&		97524	0					
ANR	98673	Identifier	val		97524	1					
ANR	98674	IfStatement	"if ( strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" ) )"		97524	1					
ANR	98675	Condition	"strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" )"	403:56:19598:19672	97524	0	True				
ANR	98676	CallExpression	"strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" )"		97524	0					
ANR	98677	Callee	strstr		97524	0					
ANR	98678	Identifier	strstr		97524	0					
ANR	98679	ArgumentList	( axis2_char_t * ) key		97524	1					
ANR	98680	Argument	( axis2_char_t * ) key		97524	0					
ANR	98681	CastExpression	( axis2_char_t * ) key		97524	0					
ANR	98682	CastTarget	axis2_char_t *		97524	0					
ANR	98683	Identifier	key		97524	1					
ANR	98684	Argument	"""nil|http://www.w3.org/2001/XMLSchema-instance"""		97524	1					
ANR	98685	PrimaryExpression	"""nil|http://www.w3.org/2001/XMLSchema-instance"""		97524	0					
ANR	98686	CompoundStatement		265:53:15502:15502	97524	1					
ANR	98687	ExpressionStatement	the_attri = ( axiom_attribute_t * ) val	405:57:19787:19822	97524	0	True				
ANR	98688	AssignmentExpression	the_attri = ( axiom_attribute_t * ) val		97524	0		=			
ANR	98689	Identifier	the_attri		97524	0					
ANR	98690	CastExpression	( axiom_attribute_t * ) val		97524	1					
ANR	98691	CastTarget	axiom_attribute_t *		97524	0					
ANR	98692	Identifier	val		97524	1					
ANR	98693	BreakStatement	break ;	406:57:19881:19886	97524	1	True				
ANR	98694	IfStatement	if ( the_attri )		97524	6					
ANR	98695	Condition	the_attri	411:47:20088:20096	97524	0	True				
ANR	98696	Identifier	the_attri		97524	0					
ANR	98697	CompoundStatement		273:44:15917:15917	97524	1					
ANR	98698	ExpressionStatement	"attrib_text = axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"	413:48:20193:20266	97524	0	True				
ANR	98699	AssignmentExpression	"attrib_text = axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"		97524	0		=			
ANR	98700	Identifier	attrib_text		97524	0					
ANR	98701	CallExpression	"axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"		97524	1					
ANR	98702	Callee	axiom_attribute_get_value		97524	0					
ANR	98703	Identifier	axiom_attribute_get_value		97524	0					
ANR	98704	ArgumentList	the_attri		97524	1					
ANR	98705	Argument	the_attri		97524	0					
ANR	98706	Identifier	the_attri		97524	0					
ANR	98707	Argument	Environment :: getEnv ( )		97524	1					
ANR	98708	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98709	Callee	Environment :: getEnv		97524	0					
ANR	98710	Identifier	Environment :: getEnv		97524	0					
ANR	98711	ArgumentList			97524	1					
ANR	98712	ElseStatement	else		97524	0					
ANR	98713	CompoundStatement		277:44:16181:16181	97524	0					
ANR	98714	ExpressionStatement	"attrib_text = axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"	418:48:20646:20748	97524	0	True				
ANR	98715	AssignmentExpression	"attrib_text = axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"		97524	0		=			
ANR	98716	Identifier	attrib_text		97524	0					
ANR	98717	CallExpression	"axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"		97524	1					
ANR	98718	Callee	axiom_element_get_attribute_value_by_name		97524	0					
ANR	98719	Identifier	axiom_element_get_attribute_value_by_name		97524	0					
ANR	98720	ArgumentList	current_element		97524	1					
ANR	98721	Argument	current_element		97524	0					
ANR	98722	Identifier	current_element		97524	0					
ANR	98723	Argument	Environment :: getEnv ( )		97524	1					
ANR	98724	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98725	Callee	Environment :: getEnv		97524	0					
ANR	98726	Identifier	Environment :: getEnv		97524	0					
ANR	98727	ArgumentList			97524	1					
ANR	98728	Argument	"""nil"""		97524	2					
ANR	98729	PrimaryExpression	"""nil"""		97524	0					
ANR	98730	IfStatement	"if ( attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" ) )"		97524	7					
ANR	98731	Condition	"attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" )"	421:47:20844:20894	97524	0	True				
ANR	98732	AndExpression	"attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" )"		97524	0		&&			
ANR	98733	Identifier	attrib_text		97524	0					
ANR	98734	EqualityExpression	"0 == axutil_strcmp ( attrib_text , ""1"" )"		97524	1		==			
ANR	98735	PrimaryExpression	0		97524	0					
ANR	98736	CallExpression	"axutil_strcmp ( attrib_text , ""1"" )"		97524	1					
ANR	98737	Callee	axutil_strcmp		97524	0					
ANR	98738	Identifier	axutil_strcmp		97524	0					
ANR	98739	ArgumentList	attrib_text		97524	1					
ANR	98740	Argument	attrib_text		97524	0					
ANR	98741	Identifier	attrib_text		97524	0					
ANR	98742	Argument	"""1"""		97524	1					
ANR	98743	PrimaryExpression	"""1"""		97524	0					
ANR	98744	CompoundStatement		283:44:16715:16715	97524	1					
ANR	98745	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""NULL value is set to a non nillable element args"" )"	423:48:20991:21100	97524	0	True				
ANR	98746	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""NULL value is set to a non nillable element args"" )"		97524	0					
ANR	98747	Callee	WSF_LOG_ERROR_MSG		97524	0					
ANR	98748	Identifier	WSF_LOG_ERROR_MSG		97524	0					
ANR	98749	ArgumentList	Environment :: getEnv ( ) -> log		97524	1					
ANR	98750	Argument	Environment :: getEnv ( ) -> log		97524	0					
ANR	98751	PtrMemberAccess	Environment :: getEnv ( ) -> log		97524	0					
ANR	98752	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98753	Callee	Environment :: getEnv		97524	0					
ANR	98754	Identifier	Environment :: getEnv		97524	0					
ANR	98755	ArgumentList			97524	1					
ANR	98756	Identifier	log		97524	1					
ANR	98757	Argument	WSF_LOG_SI		97524	1					
ANR	98758	Identifier	WSF_LOG_SI		97524	0					
ANR	98759	Argument	"""NULL value is set to a non nillable element args"""		97524	2					
ANR	98760	PrimaryExpression	"""NULL value is set to a non nillable element args"""		97524	0					
ANR	98761	ExpressionStatement	status = AXIS2_FAILURE	424:48:21150:21172	97524	1	True				
ANR	98762	AssignmentExpression	status = AXIS2_FAILURE		97524	0		=			
ANR	98763	Identifier	status		97524	0					
ANR	98764	Identifier	AXIS2_FAILURE		97524	1					
ANR	98765	ElseStatement	else		97524	0					
ANR	98766	CompoundStatement		288:44:17087:17087	97524	0					
ANR	98767	ExpressionStatement	"status = setArgs ( """" )"	429:48:21460:21480	97524	0	True				
ANR	98768	AssignmentExpression	"status = setArgs ( """" )"		97524	0		=			
ANR	98769	Identifier	status		97524	0					
ANR	98770	CallExpression	"setArgs ( """" )"		97524	1					
ANR	98771	Callee	setArgs		97524	0					
ANR	98772	Identifier	setArgs		97524	0					
ANR	98773	ArgumentList	""""""		97524	1					
ANR	98774	Argument	""""""		97524	0					
ANR	98775	PrimaryExpression	""""""		97524	0					
ANR	98776	IfStatement	if ( AXIS2_FAILURE == status )		97524	3					
ANR	98777	Condition	AXIS2_FAILURE == status	433:36:21643:21666	97524	0	True				
ANR	98778	EqualityExpression	AXIS2_FAILURE == status		97524	0		==			
ANR	98779	Identifier	AXIS2_FAILURE		97524	0					
ANR	98780	Identifier	status		97524	1					
ANR	98781	CompoundStatement		295:33:17476:17476	97524	1					
ANR	98782	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for args "" )"	435:37:21741:21838	97524	0	True				
ANR	98783	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for args "" )"		97524	0					
ANR	98784	Callee	WSF_LOG_ERROR_MSG		97524	0					
ANR	98785	Identifier	WSF_LOG_ERROR_MSG		97524	0					
ANR	98786	ArgumentList	Environment :: getEnv ( ) -> log		97524	1					
ANR	98787	Argument	Environment :: getEnv ( ) -> log		97524	0					
ANR	98788	PtrMemberAccess	Environment :: getEnv ( ) -> log		97524	0					
ANR	98789	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98790	Callee	Environment :: getEnv		97524	0					
ANR	98791	Identifier	Environment :: getEnv		97524	0					
ANR	98792	ArgumentList			97524	1					
ANR	98793	Identifier	log		97524	1					
ANR	98794	Argument	WSF_LOG_SI		97524	1					
ANR	98795	Identifier	WSF_LOG_SI		97524	0					
ANR	98796	Argument	"""failed in setting the value for args """		97524	2					
ANR	98797	PrimaryExpression	"""failed in setting the value for args """		97524	0					
ANR	98798	IfStatement	if ( element_qname )		97524	1					
ANR	98799	Condition	element_qname	436:40:21880:21892	97524	0	True				
ANR	98800	Identifier	element_qname		97524	0					
ANR	98801	CompoundStatement		298:37:17706:17706	97524	1					
ANR	98802	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	438:41:21975:22030	97524	0	True				
ANR	98803	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		97524	0					
ANR	98804	Callee	axutil_qname_free		97524	0					
ANR	98805	Identifier	axutil_qname_free		97524	0					
ANR	98806	ArgumentList	element_qname		97524	1					
ANR	98807	Argument	element_qname		97524	0					
ANR	98808	Identifier	element_qname		97524	0					
ANR	98809	Argument	Environment :: getEnv ( )		97524	1					
ANR	98810	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98811	Callee	Environment :: getEnv		97524	0					
ANR	98812	Identifier	Environment :: getEnv		97524	0					
ANR	98813	ArgumentList			97524	1					
ANR	98814	ReturnStatement	return AXIS2_FAILURE ;	440:37:22108:22128	97524	2	True				
ANR	98815	Identifier	AXIS2_FAILURE		97524	0					
ANR	98816	IfStatement	if ( element_qname )		97524	34					
ANR	98817	Condition	element_qname	444:21:22246:22258	97524	0	True				
ANR	98818	Identifier	element_qname		97524	0					
ANR	98819	CompoundStatement		306:18:18053:18053	97524	1					
ANR	98820	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	446:21:22302:22357	97524	0	True				
ANR	98821	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		97524	0					
ANR	98822	Callee	axutil_qname_free		97524	0					
ANR	98823	Identifier	axutil_qname_free		97524	0					
ANR	98824	ArgumentList	element_qname		97524	1					
ANR	98825	Argument	element_qname		97524	0					
ANR	98826	Identifier	element_qname		97524	0					
ANR	98827	Argument	Environment :: getEnv ( )		97524	1					
ANR	98828	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98829	Callee	Environment :: getEnv		97524	0					
ANR	98830	Identifier	Environment :: getEnv		97524	0					
ANR	98831	ArgumentList			97524	1					
ANR	98832	ExpressionStatement	element_qname = NULL	447:21:22380:22400	97524	1	True				
ANR	98833	AssignmentExpression	element_qname = NULL		97524	0		=			
ANR	98834	Identifier	element_qname		97524	0					
ANR	98835	Identifier	NULL		97524	1					
ANR	98836	IfStatement	if ( current_node != NULL && is_early_node_valid )		97524	35					
ANR	98837	Condition	current_node != NULL && is_early_node_valid	463:38:22897:22939	97524	0	True				
ANR	98838	AndExpression	current_node != NULL && is_early_node_valid		97524	0		&&			
ANR	98839	EqualityExpression	current_node != NULL		97524	0		!=			
ANR	98840	Identifier	current_node		97524	0					
ANR	98841	Identifier	NULL		97524	1					
ANR	98842	Identifier	is_early_node_valid		97524	1					
ANR	98843	CompoundStatement		325:35:18751:18751	97524	1					
ANR	98844	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	465:39:23018:23097	97524	0	True				
ANR	98845	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	0		=			
ANR	98846	Identifier	current_node		97524	0					
ANR	98847	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	98848	Callee	axiom_node_get_next_sibling		97524	0					
ANR	98849	Identifier	axiom_node_get_next_sibling		97524	0					
ANR	98850	ArgumentList	current_node		97524	1					
ANR	98851	Argument	current_node		97524	0					
ANR	98852	Identifier	current_node		97524	0					
ANR	98853	Argument	Environment :: getEnv ( )		97524	1					
ANR	98854	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98855	Callee	Environment :: getEnv		97524	0					
ANR	98856	Identifier	Environment :: getEnv		97524	0					
ANR	98857	ArgumentList			97524	1					
ANR	98858	WhileStatement	"while ( current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		97524	1					
ANR	98859	Condition	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	468:46:23225:23318	97524	0	True				
ANR	98860	AndExpression	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		97524	0		&&			
ANR	98861	Identifier	current_node		97524	0					
ANR	98862	EqualityExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		97524	1		!=			
ANR	98863	CallExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) )"		97524	0					
ANR	98864	Callee	axiom_node_get_node_type		97524	0					
ANR	98865	Identifier	axiom_node_get_node_type		97524	0					
ANR	98866	ArgumentList	current_node		97524	1					
ANR	98867	Argument	current_node		97524	0					
ANR	98868	Identifier	current_node		97524	0					
ANR	98869	Argument	Environment :: getEnv ( )		97524	1					
ANR	98870	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98871	Callee	Environment :: getEnv		97524	0					
ANR	98872	Identifier	Environment :: getEnv		97524	0					
ANR	98873	ArgumentList			97524	1					
ANR	98874	Identifier	AXIOM_ELEMENT		97524	1					
ANR	98875	CompoundStatement		330:40:19135:19135	97524	1					
ANR	98876	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	470:44:23407:23486	97524	0	True				
ANR	98877	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	0		=			
ANR	98878	Identifier	current_node		97524	0					
ANR	98879	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	98880	Callee	axiom_node_get_next_sibling		97524	0					
ANR	98881	Identifier	axiom_node_get_next_sibling		97524	0					
ANR	98882	ArgumentList	current_node		97524	1					
ANR	98883	Argument	current_node		97524	0					
ANR	98884	Identifier	current_node		97524	0					
ANR	98885	Argument	Environment :: getEnv ( )		97524	1					
ANR	98886	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98887	Callee	Environment :: getEnv		97524	0					
ANR	98888	Identifier	Environment :: getEnv		97524	0					
ANR	98889	ArgumentList			97524	1					
ANR	98890	IfStatement	if ( current_node != NULL )		97524	2					
ANR	98891	Condition	current_node != NULL	472:43:23573:23592	97524	0	True				
ANR	98892	EqualityExpression	current_node != NULL		97524	0		!=			
ANR	98893	Identifier	current_node		97524	0					
ANR	98894	Identifier	NULL		97524	1					
ANR	98895	CompoundStatement		334:40:19409:19409	97524	1					
ANR	98896	ExpressionStatement	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	474:44:23681:23782	97524	0	True				
ANR	98897	AssignmentExpression	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		97524	0		=			
ANR	98898	Identifier	current_element		97524	0					
ANR	98899	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	98900	CastTarget	axiom_element_t *		97524	0					
ANR	98901	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	98902	Callee	axiom_node_get_data_element		97524	0					
ANR	98903	Identifier	axiom_node_get_data_element		97524	0					
ANR	98904	ArgumentList	current_node		97524	1					
ANR	98905	Argument	current_node		97524	0					
ANR	98906	Identifier	current_node		97524	0					
ANR	98907	Argument	Environment :: getEnv ( )		97524	1					
ANR	98908	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98909	Callee	Environment :: getEnv		97524	0					
ANR	98910	Identifier	Environment :: getEnv		97524	0					
ANR	98911	ArgumentList			97524	1					
ANR	98912	ExpressionStatement	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"	475:44:23828:23914	97524	1	True				
ANR	98913	AssignmentExpression	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		97524	0		=			
ANR	98914	Identifier	mqname		97524	0					
ANR	98915	CallExpression	"axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		97524	1					
ANR	98916	Callee	axiom_element_get_qname		97524	0					
ANR	98917	Identifier	axiom_element_get_qname		97524	0					
ANR	98918	ArgumentList	current_element		97524	1					
ANR	98919	Argument	current_element		97524	0					
ANR	98920	Identifier	current_element		97524	0					
ANR	98921	Argument	Environment :: getEnv ( )		97524	1					
ANR	98922	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98923	Callee	Environment :: getEnv		97524	0					
ANR	98924	Identifier	Environment :: getEnv		97524	0					
ANR	98925	ArgumentList			97524	1					
ANR	98926	Argument	current_node		97524	2					
ANR	98927	Identifier	current_node		97524	0					
ANR	98928	ExpressionStatement	is_early_node_valid = false	479:35:24070:24097	97524	36	True				
ANR	98929	AssignmentExpression	is_early_node_valid = false		97524	0		=			
ANR	98930	Identifier	is_early_node_valid		97524	0					
ANR	98931	Identifier	false		97524	1					
ANR	98932	ExpressionStatement	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""owner"" , NULL , NULL )"	481:33:24166:24245	97524	37	True				
ANR	98933	AssignmentExpression	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""owner"" , NULL , NULL )"		97524	0		=			
ANR	98934	Identifier	element_qname		97524	0					
ANR	98935	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""owner"" , NULL , NULL )"		97524	1					
ANR	98936	Callee	axutil_qname_create		97524	0					
ANR	98937	Identifier	axutil_qname_create		97524	0					
ANR	98938	ArgumentList	Environment :: getEnv ( )		97524	1					
ANR	98939	Argument	Environment :: getEnv ( )		97524	0					
ANR	98940	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98941	Callee	Environment :: getEnv		97524	0					
ANR	98942	Identifier	Environment :: getEnv		97524	0					
ANR	98943	ArgumentList			97524	1					
ANR	98944	Argument	"""owner"""		97524	1					
ANR	98945	PrimaryExpression	"""owner"""		97524	0					
ANR	98946	Argument	NULL		97524	2					
ANR	98947	Identifier	NULL		97524	0					
ANR	98948	Argument	NULL		97524	3					
ANR	98949	Identifier	NULL		97524	0					
ANR	98950	IfStatement	"if ( ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) ) )"		97524	38					
ANR	98951	Condition	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"	485:32:24347:24548	97524	0	True				
ANR	98952	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		97524	0		&&			
ANR	98953	Identifier	current_node		97524	0					
ANR	98954	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		97524	1		&&			
ANR	98955	Identifier	current_element		97524	0					
ANR	98956	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1		||			
ANR	98957	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		97524	0					
ANR	98958	Callee	axutil_qname_equals		97524	0					
ANR	98959	Identifier	axutil_qname_equals		97524	0					
ANR	98960	ArgumentList	element_qname		97524	1					
ANR	98961	Argument	element_qname		97524	0					
ANR	98962	Identifier	element_qname		97524	0					
ANR	98963	Argument	Environment :: getEnv ( )		97524	1					
ANR	98964	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98965	Callee	Environment :: getEnv		97524	0					
ANR	98966	Identifier	Environment :: getEnv		97524	0					
ANR	98967	ArgumentList			97524	1					
ANR	98968	Argument	mqname		97524	2					
ANR	98969	Identifier	mqname		97524	0					
ANR	98970	UnaryOperationExpression	"! axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1					
ANR	98971	UnaryOperator	!		97524	0					
ANR	98972	CallExpression	"axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1					
ANR	98973	Callee	axutil_strcmp		97524	0					
ANR	98974	Identifier	axutil_strcmp		97524	0					
ANR	98975	ArgumentList	"""owner"""		97524	1					
ANR	98976	Argument	"""owner"""		97524	0					
ANR	98977	PrimaryExpression	"""owner"""		97524	0					
ANR	98978	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		97524	1					
ANR	98979	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		97524	0					
ANR	98980	Callee	axiom_element_get_localname		97524	0					
ANR	98981	Identifier	axiom_element_get_localname		97524	0					
ANR	98982	ArgumentList	current_element		97524	1					
ANR	98983	Argument	current_element		97524	0					
ANR	98984	Identifier	current_element		97524	0					
ANR	98985	Argument	Environment :: getEnv ( )		97524	1					
ANR	98986	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	98987	Callee	Environment :: getEnv		97524	0					
ANR	98988	Identifier	Environment :: getEnv		97524	0					
ANR	98989	ArgumentList			97524	1					
ANR	98990	CompoundStatement		347:27:20352:20352	97524	1					
ANR	98991	IfStatement	"if ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"		97524	0					
ANR	98992	Condition	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"	487:34:24614:24813	97524	0	True				
ANR	98993	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		97524	0		&&			
ANR	98994	Identifier	current_node		97524	0					
ANR	98995	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		97524	1		&&			
ANR	98996	Identifier	current_element		97524	0					
ANR	98997	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1		||			
ANR	98998	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		97524	0					
ANR	98999	Callee	axutil_qname_equals		97524	0					
ANR	99000	Identifier	axutil_qname_equals		97524	0					
ANR	99001	ArgumentList	element_qname		97524	1					
ANR	99002	Argument	element_qname		97524	0					
ANR	99003	Identifier	element_qname		97524	0					
ANR	99004	Argument	Environment :: getEnv ( )		97524	1					
ANR	99005	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99006	Callee	Environment :: getEnv		97524	0					
ANR	99007	Identifier	Environment :: getEnv		97524	0					
ANR	99008	ArgumentList			97524	1					
ANR	99009	Argument	mqname		97524	2					
ANR	99010	Identifier	mqname		97524	0					
ANR	99011	UnaryOperationExpression	"! axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1					
ANR	99012	UnaryOperator	!		97524	0					
ANR	99013	CallExpression	"axutil_strcmp ( ""owner"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1					
ANR	99014	Callee	axutil_strcmp		97524	0					
ANR	99015	Identifier	axutil_strcmp		97524	0					
ANR	99016	ArgumentList	"""owner"""		97524	1					
ANR	99017	Argument	"""owner"""		97524	0					
ANR	99018	PrimaryExpression	"""owner"""		97524	0					
ANR	99019	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		97524	1					
ANR	99020	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		97524	0					
ANR	99021	Callee	axiom_element_get_localname		97524	0					
ANR	99022	Identifier	axiom_element_get_localname		97524	0					
ANR	99023	ArgumentList	current_element		97524	1					
ANR	99024	Argument	current_element		97524	0					
ANR	99025	Identifier	current_element		97524	0					
ANR	99026	Argument	Environment :: getEnv ( )		97524	1					
ANR	99027	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99028	Callee	Environment :: getEnv		97524	0					
ANR	99029	Identifier	Environment :: getEnv		97524	0					
ANR	99030	ArgumentList			97524	1					
ANR	99031	CompoundStatement		349:30:20620:20620	97524	1					
ANR	99032	ExpressionStatement	is_early_node_valid = true	489:32:24880:24906	97524	0	True				
ANR	99033	AssignmentExpression	is_early_node_valid = true		97524	0		=			
ANR	99034	Identifier	is_early_node_valid		97524	0					
ANR	99035	Identifier	true		97524	1					
ANR	99036	ExpressionStatement	"text_value = axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"	493:38:25043:25132	97524	1	True				
ANR	99037	AssignmentExpression	"text_value = axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"		97524	0		=			
ANR	99038	Identifier	text_value		97524	0					
ANR	99039	CallExpression	"axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"		97524	1					
ANR	99040	Callee	axiom_element_get_text		97524	0					
ANR	99041	Identifier	axiom_element_get_text		97524	0					
ANR	99042	ArgumentList	current_element		97524	1					
ANR	99043	Argument	current_element		97524	0					
ANR	99044	Identifier	current_element		97524	0					
ANR	99045	Argument	Environment :: getEnv ( )		97524	1					
ANR	99046	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99047	Callee	Environment :: getEnv		97524	0					
ANR	99048	Identifier	Environment :: getEnv		97524	0					
ANR	99049	ArgumentList			97524	1					
ANR	99050	Argument	current_node		97524	2					
ANR	99051	Identifier	current_node		97524	0					
ANR	99052	IfStatement	if ( text_value != NULL )		97524	2					
ANR	99053	Condition	text_value != NULL	494:41:25175:25192	97524	0	True				
ANR	99054	EqualityExpression	text_value != NULL		97524	0		!=			
ANR	99055	Identifier	text_value		97524	0					
ANR	99056	Identifier	NULL		97524	1					
ANR	99057	CompoundStatement		356:38:21007:21007	97524	1					
ANR	99058	ExpressionStatement	status = setOwner ( text_value )	496:44:25279:25308	97524	0	True				
ANR	99059	AssignmentExpression	status = setOwner ( text_value )		97524	0		=			
ANR	99060	Identifier	status		97524	0					
ANR	99061	CallExpression	setOwner ( text_value )		97524	1					
ANR	99062	Callee	setOwner		97524	0					
ANR	99063	Identifier	setOwner		97524	0					
ANR	99064	ArgumentList	text_value		97524	1					
ANR	99065	Argument	text_value		97524	0					
ANR	99066	Identifier	text_value		97524	0					
ANR	99067	ElseStatement	else		97524	0					
ANR	99068	CompoundStatement		373:44:22192:22228	97524	0					
ANR	99069	IdentifierDeclStatement	axiom_attribute_t * the_attri = NULL ;	510:44:26259:26294	97524	0	True				
ANR	99070	IdentifierDecl	* the_attri = NULL		97524	0					
ANR	99071	IdentifierDeclType	axiom_attribute_t *		97524	0					
ANR	99072	Identifier	the_attri		97524	1					
ANR	99073	AssignmentExpression	* the_attri = NULL		97524	2		=			
ANR	99074	Identifier	NULL		97524	0					
ANR	99075	Identifier	NULL		97524	1					
ANR	99076	IdentifierDeclStatement	axis2_char_t * attrib_text = NULL ;	511:44:26340:26372	97524	1	True				
ANR	99077	IdentifierDecl	* attrib_text = NULL		97524	0					
ANR	99078	IdentifierDeclType	axis2_char_t *		97524	0					
ANR	99079	Identifier	attrib_text		97524	1					
ANR	99080	AssignmentExpression	* attrib_text = NULL		97524	2		=			
ANR	99081	Identifier	NULL		97524	0					
ANR	99082	Identifier	NULL		97524	1					
ANR	99083	IdentifierDeclStatement	axutil_hash_t * attribute_hash = NULL ;	512:44:26418:26454	97524	2	True				
ANR	99084	IdentifierDecl	* attribute_hash = NULL		97524	0					
ANR	99085	IdentifierDeclType	axutil_hash_t *		97524	0					
ANR	99086	Identifier	attribute_hash		97524	1					
ANR	99087	AssignmentExpression	* attribute_hash = NULL		97524	2		=			
ANR	99088	Identifier	NULL		97524	0					
ANR	99089	Identifier	NULL		97524	1					
ANR	99090	ExpressionStatement	"attribute_hash = axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"	514:44:26501:26590	97524	3	True				
ANR	99091	AssignmentExpression	"attribute_hash = axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"		97524	0		=			
ANR	99092	Identifier	attribute_hash		97524	0					
ANR	99093	CallExpression	"axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"		97524	1					
ANR	99094	Callee	axiom_element_get_all_attributes		97524	0					
ANR	99095	Identifier	axiom_element_get_all_attributes		97524	0					
ANR	99096	ArgumentList	current_element		97524	1					
ANR	99097	Argument	current_element		97524	0					
ANR	99098	Identifier	current_element		97524	0					
ANR	99099	Argument	Environment :: getEnv ( )		97524	1					
ANR	99100	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99101	Callee	Environment :: getEnv		97524	0					
ANR	99102	Identifier	Environment :: getEnv		97524	0					
ANR	99103	ArgumentList			97524	1					
ANR	99104	ExpressionStatement	attrib_text = NULL	516:44:26637:26655	97524	4	True				
ANR	99105	AssignmentExpression	attrib_text = NULL		97524	0		=			
ANR	99106	Identifier	attrib_text		97524	0					
ANR	99107	Identifier	NULL		97524	1					
ANR	99108	IfStatement	if ( attribute_hash )		97524	5					
ANR	99109	Condition	attribute_hash	517:47:26704:26717	97524	0	True				
ANR	99110	Identifier	attribute_hash		97524	0					
ANR	99111	CompoundStatement		382:49:22723:22738	97524	1					
ANR	99112	IdentifierDeclStatement	axutil_hash_index_t * hi ;	519:49:26815:26838	97524	0	True				
ANR	99113	IdentifierDecl	* hi		97524	0					
ANR	99114	IdentifierDeclType	axutil_hash_index_t *		97524	0					
ANR	99115	Identifier	hi		97524	1					
ANR	99116	IdentifierDeclStatement	void * val ;	520:49:26889:26898	97524	1	True				
ANR	99117	IdentifierDecl	* val		97524	0					
ANR	99118	IdentifierDeclType	void *		97524	0					
ANR	99119	Identifier	val		97524	1					
ANR	99120	IdentifierDeclStatement	const void * key ;	521:49:26949:26964	97524	2	True				
ANR	99121	IdentifierDecl	* key		97524	0					
ANR	99122	IdentifierDeclType	const void *		97524	0					
ANR	99123	Identifier	key		97524	1					
ANR	99124	ForStatement	"for ( hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) ) ; hi ; hi = axutil_hash_next ( Environment :: getEnv ( ) , hi ) )"		97524	3					
ANR	99125	ForInit	"hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) ) ;"	523:54:27061:27122	97524	0	True				
ANR	99126	AssignmentExpression	"hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) )"		97524	0		=			
ANR	99127	Identifier	hi		97524	0					
ANR	99128	CallExpression	"axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) )"		97524	1					
ANR	99129	Callee	axutil_hash_first		97524	0					
ANR	99130	Identifier	axutil_hash_first		97524	0					
ANR	99131	ArgumentList	attribute_hash		97524	1					
ANR	99132	Argument	attribute_hash		97524	0					
ANR	99133	Identifier	attribute_hash		97524	0					
ANR	99134	Argument	Environment :: getEnv ( )		97524	1					
ANR	99135	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99136	Callee	Environment :: getEnv		97524	0					
ANR	99137	Identifier	Environment :: getEnv		97524	0					
ANR	99138	ArgumentList			97524	1					
ANR	99139	Condition	hi	523:117:27124:27125	97524	1	True				
ANR	99140	Identifier	hi		97524	0					
ANR	99141	AssignmentExpression	"hi = axutil_hash_next ( Environment :: getEnv ( ) , hi )"	523:121:27128:27175	97524	2	True	=			
ANR	99142	Identifier	hi		97524	0					
ANR	99143	CallExpression	"axutil_hash_next ( Environment :: getEnv ( ) , hi )"		97524	1					
ANR	99144	Callee	axutil_hash_next		97524	0					
ANR	99145	Identifier	axutil_hash_next		97524	0					
ANR	99146	ArgumentList	Environment :: getEnv ( )		97524	1					
ANR	99147	Argument	Environment :: getEnv ( )		97524	0					
ANR	99148	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99149	Callee	Environment :: getEnv		97524	0					
ANR	99150	Identifier	Environment :: getEnv		97524	0					
ANR	99151	ArgumentList			97524	1					
ANR	99152	Argument	hi		97524	1					
ANR	99153	Identifier	hi		97524	0					
ANR	99154	CompoundStatement		385:49:23001:23001	97524	3					
ANR	99155	ExpressionStatement	"axutil_hash_this ( hi , & key , NULL , & val )"	525:53:27282:27320	97524	0	True				
ANR	99156	CallExpression	"axutil_hash_this ( hi , & key , NULL , & val )"		97524	0					
ANR	99157	Callee	axutil_hash_this		97524	0					
ANR	99158	Identifier	axutil_hash_this		97524	0					
ANR	99159	ArgumentList	hi		97524	1					
ANR	99160	Argument	hi		97524	0					
ANR	99161	Identifier	hi		97524	0					
ANR	99162	Argument	& key		97524	1					
ANR	99163	UnaryOperationExpression	& key		97524	0					
ANR	99164	UnaryOperator	&		97524	0					
ANR	99165	Identifier	key		97524	1					
ANR	99166	Argument	NULL		97524	2					
ANR	99167	Identifier	NULL		97524	0					
ANR	99168	Argument	& val		97524	3					
ANR	99169	UnaryOperationExpression	& val		97524	0					
ANR	99170	UnaryOperator	&		97524	0					
ANR	99171	Identifier	val		97524	1					
ANR	99172	IfStatement	"if ( strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" ) )"		97524	1					
ANR	99173	Condition	"strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" )"	527:56:27432:27506	97524	0	True				
ANR	99174	CallExpression	"strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" )"		97524	0					
ANR	99175	Callee	strstr		97524	0					
ANR	99176	Identifier	strstr		97524	0					
ANR	99177	ArgumentList	( axis2_char_t * ) key		97524	1					
ANR	99178	Argument	( axis2_char_t * ) key		97524	0					
ANR	99179	CastExpression	( axis2_char_t * ) key		97524	0					
ANR	99180	CastTarget	axis2_char_t *		97524	0					
ANR	99181	Identifier	key		97524	1					
ANR	99182	Argument	"""nil|http://www.w3.org/2001/XMLSchema-instance"""		97524	1					
ANR	99183	PrimaryExpression	"""nil|http://www.w3.org/2001/XMLSchema-instance"""		97524	0					
ANR	99184	CompoundStatement		389:53:23336:23336	97524	1					
ANR	99185	ExpressionStatement	the_attri = ( axiom_attribute_t * ) val	529:57:27621:27656	97524	0	True				
ANR	99186	AssignmentExpression	the_attri = ( axiom_attribute_t * ) val		97524	0		=			
ANR	99187	Identifier	the_attri		97524	0					
ANR	99188	CastExpression	( axiom_attribute_t * ) val		97524	1					
ANR	99189	CastTarget	axiom_attribute_t *		97524	0					
ANR	99190	Identifier	val		97524	1					
ANR	99191	BreakStatement	break ;	530:57:27715:27720	97524	1	True				
ANR	99192	IfStatement	if ( the_attri )		97524	6					
ANR	99193	Condition	the_attri	535:47:27922:27930	97524	0	True				
ANR	99194	Identifier	the_attri		97524	0					
ANR	99195	CompoundStatement		397:44:23751:23751	97524	1					
ANR	99196	ExpressionStatement	"attrib_text = axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"	537:48:28027:28100	97524	0	True				
ANR	99197	AssignmentExpression	"attrib_text = axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"		97524	0		=			
ANR	99198	Identifier	attrib_text		97524	0					
ANR	99199	CallExpression	"axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"		97524	1					
ANR	99200	Callee	axiom_attribute_get_value		97524	0					
ANR	99201	Identifier	axiom_attribute_get_value		97524	0					
ANR	99202	ArgumentList	the_attri		97524	1					
ANR	99203	Argument	the_attri		97524	0					
ANR	99204	Identifier	the_attri		97524	0					
ANR	99205	Argument	Environment :: getEnv ( )		97524	1					
ANR	99206	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99207	Callee	Environment :: getEnv		97524	0					
ANR	99208	Identifier	Environment :: getEnv		97524	0					
ANR	99209	ArgumentList			97524	1					
ANR	99210	ElseStatement	else		97524	0					
ANR	99211	CompoundStatement		401:44:24015:24015	97524	0					
ANR	99212	ExpressionStatement	"attrib_text = axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"	542:48:28480:28582	97524	0	True				
ANR	99213	AssignmentExpression	"attrib_text = axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"		97524	0		=			
ANR	99214	Identifier	attrib_text		97524	0					
ANR	99215	CallExpression	"axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"		97524	1					
ANR	99216	Callee	axiom_element_get_attribute_value_by_name		97524	0					
ANR	99217	Identifier	axiom_element_get_attribute_value_by_name		97524	0					
ANR	99218	ArgumentList	current_element		97524	1					
ANR	99219	Argument	current_element		97524	0					
ANR	99220	Identifier	current_element		97524	0					
ANR	99221	Argument	Environment :: getEnv ( )		97524	1					
ANR	99222	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99223	Callee	Environment :: getEnv		97524	0					
ANR	99224	Identifier	Environment :: getEnv		97524	0					
ANR	99225	ArgumentList			97524	1					
ANR	99226	Argument	"""nil"""		97524	2					
ANR	99227	PrimaryExpression	"""nil"""		97524	0					
ANR	99228	IfStatement	"if ( attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" ) )"		97524	7					
ANR	99229	Condition	"attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" )"	545:47:28678:28728	97524	0	True				
ANR	99230	AndExpression	"attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" )"		97524	0		&&			
ANR	99231	Identifier	attrib_text		97524	0					
ANR	99232	EqualityExpression	"0 == axutil_strcmp ( attrib_text , ""1"" )"		97524	1		==			
ANR	99233	PrimaryExpression	0		97524	0					
ANR	99234	CallExpression	"axutil_strcmp ( attrib_text , ""1"" )"		97524	1					
ANR	99235	Callee	axutil_strcmp		97524	0					
ANR	99236	Identifier	axutil_strcmp		97524	0					
ANR	99237	ArgumentList	attrib_text		97524	1					
ANR	99238	Argument	attrib_text		97524	0					
ANR	99239	Identifier	attrib_text		97524	0					
ANR	99240	Argument	"""1"""		97524	1					
ANR	99241	PrimaryExpression	"""1"""		97524	0					
ANR	99242	CompoundStatement		407:44:24549:24549	97524	1					
ANR	99243	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""NULL value is set to a non nillable element owner"" )"	547:48:28825:28935	97524	0	True				
ANR	99244	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""NULL value is set to a non nillable element owner"" )"		97524	0					
ANR	99245	Callee	WSF_LOG_ERROR_MSG		97524	0					
ANR	99246	Identifier	WSF_LOG_ERROR_MSG		97524	0					
ANR	99247	ArgumentList	Environment :: getEnv ( ) -> log		97524	1					
ANR	99248	Argument	Environment :: getEnv ( ) -> log		97524	0					
ANR	99249	PtrMemberAccess	Environment :: getEnv ( ) -> log		97524	0					
ANR	99250	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99251	Callee	Environment :: getEnv		97524	0					
ANR	99252	Identifier	Environment :: getEnv		97524	0					
ANR	99253	ArgumentList			97524	1					
ANR	99254	Identifier	log		97524	1					
ANR	99255	Argument	WSF_LOG_SI		97524	1					
ANR	99256	Identifier	WSF_LOG_SI		97524	0					
ANR	99257	Argument	"""NULL value is set to a non nillable element owner"""		97524	2					
ANR	99258	PrimaryExpression	"""NULL value is set to a non nillable element owner"""		97524	0					
ANR	99259	ExpressionStatement	status = AXIS2_FAILURE	548:48:28985:29007	97524	1	True				
ANR	99260	AssignmentExpression	status = AXIS2_FAILURE		97524	0		=			
ANR	99261	Identifier	status		97524	0					
ANR	99262	Identifier	AXIS2_FAILURE		97524	1					
ANR	99263	ElseStatement	else		97524	0					
ANR	99264	CompoundStatement		412:44:24922:24922	97524	0					
ANR	99265	ExpressionStatement	"status = setOwner ( """" )"	553:48:29295:29316	97524	0	True				
ANR	99266	AssignmentExpression	"status = setOwner ( """" )"		97524	0		=			
ANR	99267	Identifier	status		97524	0					
ANR	99268	CallExpression	"setOwner ( """" )"		97524	1					
ANR	99269	Callee	setOwner		97524	0					
ANR	99270	Identifier	setOwner		97524	0					
ANR	99271	ArgumentList	""""""		97524	1					
ANR	99272	Argument	""""""		97524	0					
ANR	99273	PrimaryExpression	""""""		97524	0					
ANR	99274	IfStatement	if ( AXIS2_FAILURE == status )		97524	3					
ANR	99275	Condition	AXIS2_FAILURE == status	557:36:29479:29502	97524	0	True				
ANR	99276	EqualityExpression	AXIS2_FAILURE == status		97524	0		==			
ANR	99277	Identifier	AXIS2_FAILURE		97524	0					
ANR	99278	Identifier	status		97524	1					
ANR	99279	CompoundStatement		419:33:25312:25312	97524	1					
ANR	99280	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for owner "" )"	559:37:29577:29675	97524	0	True				
ANR	99281	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for owner "" )"		97524	0					
ANR	99282	Callee	WSF_LOG_ERROR_MSG		97524	0					
ANR	99283	Identifier	WSF_LOG_ERROR_MSG		97524	0					
ANR	99284	ArgumentList	Environment :: getEnv ( ) -> log		97524	1					
ANR	99285	Argument	Environment :: getEnv ( ) -> log		97524	0					
ANR	99286	PtrMemberAccess	Environment :: getEnv ( ) -> log		97524	0					
ANR	99287	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99288	Callee	Environment :: getEnv		97524	0					
ANR	99289	Identifier	Environment :: getEnv		97524	0					
ANR	99290	ArgumentList			97524	1					
ANR	99291	Identifier	log		97524	1					
ANR	99292	Argument	WSF_LOG_SI		97524	1					
ANR	99293	Identifier	WSF_LOG_SI		97524	0					
ANR	99294	Argument	"""failed in setting the value for owner """		97524	2					
ANR	99295	PrimaryExpression	"""failed in setting the value for owner """		97524	0					
ANR	99296	IfStatement	if ( element_qname )		97524	1					
ANR	99297	Condition	element_qname	560:40:29717:29729	97524	0	True				
ANR	99298	Identifier	element_qname		97524	0					
ANR	99299	CompoundStatement		422:37:25543:25543	97524	1					
ANR	99300	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	562:41:29812:29867	97524	0	True				
ANR	99301	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		97524	0					
ANR	99302	Callee	axutil_qname_free		97524	0					
ANR	99303	Identifier	axutil_qname_free		97524	0					
ANR	99304	ArgumentList	element_qname		97524	1					
ANR	99305	Argument	element_qname		97524	0					
ANR	99306	Identifier	element_qname		97524	0					
ANR	99307	Argument	Environment :: getEnv ( )		97524	1					
ANR	99308	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99309	Callee	Environment :: getEnv		97524	0					
ANR	99310	Identifier	Environment :: getEnv		97524	0					
ANR	99311	ArgumentList			97524	1					
ANR	99312	ReturnStatement	return AXIS2_FAILURE ;	564:37:29945:29965	97524	2	True				
ANR	99313	Identifier	AXIS2_FAILURE		97524	0					
ANR	99314	ElseStatement	else		97524	0					
ANR	99315	IfStatement	if ( ! dont_care_minoccurs )		97524	0					
ANR	99316	Condition	! dont_care_minoccurs	568:38:30100:30119	97524	0	True				
ANR	99317	UnaryOperationExpression	! dont_care_minoccurs		97524	0					
ANR	99318	UnaryOperator	!		97524	0					
ANR	99319	Identifier	dont_care_minoccurs		97524	1					
ANR	99320	CompoundStatement		430:30:25926:25926	97524	1					
ANR	99321	IfStatement	if ( element_qname )		97524	0					
ANR	99322	Condition	element_qname	570:37:30191:30203	97524	0	True				
ANR	99323	Identifier	element_qname		97524	0					
ANR	99324	CompoundStatement		432:34:26014:26014	97524	1					
ANR	99325	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	572:38:30280:30335	97524	0	True				
ANR	99326	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		97524	0					
ANR	99327	Callee	axutil_qname_free		97524	0					
ANR	99328	Identifier	axutil_qname_free		97524	0					
ANR	99329	ArgumentList	element_qname		97524	1					
ANR	99330	Argument	element_qname		97524	0					
ANR	99331	Identifier	element_qname		97524	0					
ANR	99332	Argument	Environment :: getEnv ( )		97524	1					
ANR	99333	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99334	Callee	Environment :: getEnv		97524	0					
ANR	99335	Identifier	Environment :: getEnv		97524	0					
ANR	99336	ArgumentList			97524	1					
ANR	99337	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""non nillable or minOuccrs != 0 element owner missing"" )"	575:6:30449:30561	97524	1	True				
ANR	99338	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""non nillable or minOuccrs != 0 element owner missing"" )"		97524	0					
ANR	99339	Callee	WSF_LOG_ERROR_MSG		97524	0					
ANR	99340	Identifier	WSF_LOG_ERROR_MSG		97524	0					
ANR	99341	ArgumentList	Environment :: getEnv ( ) -> log		97524	1					
ANR	99342	Argument	Environment :: getEnv ( ) -> log		97524	0					
ANR	99343	PtrMemberAccess	Environment :: getEnv ( ) -> log		97524	0					
ANR	99344	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99345	Callee	Environment :: getEnv		97524	0					
ANR	99346	Identifier	Environment :: getEnv		97524	0					
ANR	99347	ArgumentList			97524	1					
ANR	99348	Identifier	log		97524	1					
ANR	99349	Argument	WSF_LOG_SI		97524	1					
ANR	99350	Identifier	WSF_LOG_SI		97524	0					
ANR	99351	Argument	"""non nillable or minOuccrs != 0 element owner missing"""		97524	2					
ANR	99352	PrimaryExpression	"""non nillable or minOuccrs != 0 element owner missing"""		97524	0					
ANR	99353	ReturnStatement	return AXIS2_FAILURE ;	576:34:30597:30617	97524	2	True				
ANR	99354	Identifier	AXIS2_FAILURE		97524	0					
ANR	99355	IfStatement	if ( element_qname )		97524	39					
ANR	99356	Condition	element_qname	579:21:30700:30712	97524	0	True				
ANR	99357	Identifier	element_qname		97524	0					
ANR	99358	CompoundStatement		441:18:26507:26507	97524	1					
ANR	99359	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	581:21:30756:30811	97524	0	True				
ANR	99360	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		97524	0					
ANR	99361	Callee	axutil_qname_free		97524	0					
ANR	99362	Identifier	axutil_qname_free		97524	0					
ANR	99363	ArgumentList	element_qname		97524	1					
ANR	99364	Argument	element_qname		97524	0					
ANR	99365	Identifier	element_qname		97524	0					
ANR	99366	Argument	Environment :: getEnv ( )		97524	1					
ANR	99367	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99368	Callee	Environment :: getEnv		97524	0					
ANR	99369	Identifier	Environment :: getEnv		97524	0					
ANR	99370	ArgumentList			97524	1					
ANR	99371	ExpressionStatement	element_qname = NULL	582:21:30834:30854	97524	1	True				
ANR	99372	AssignmentExpression	element_qname = NULL		97524	0		=			
ANR	99373	Identifier	element_qname		97524	0					
ANR	99374	Identifier	NULL		97524	1					
ANR	99375	IfStatement	if ( current_node != NULL && is_early_node_valid )		97524	40					
ANR	99376	Condition	current_node != NULL && is_early_node_valid	598:38:31349:31391	97524	0	True				
ANR	99377	AndExpression	current_node != NULL && is_early_node_valid		97524	0		&&			
ANR	99378	EqualityExpression	current_node != NULL		97524	0		!=			
ANR	99379	Identifier	current_node		97524	0					
ANR	99380	Identifier	NULL		97524	1					
ANR	99381	Identifier	is_early_node_valid		97524	1					
ANR	99382	CompoundStatement		460:35:27203:27203	97524	1					
ANR	99383	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	600:39:31470:31549	97524	0	True				
ANR	99384	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	0		=			
ANR	99385	Identifier	current_node		97524	0					
ANR	99386	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	99387	Callee	axiom_node_get_next_sibling		97524	0					
ANR	99388	Identifier	axiom_node_get_next_sibling		97524	0					
ANR	99389	ArgumentList	current_node		97524	1					
ANR	99390	Argument	current_node		97524	0					
ANR	99391	Identifier	current_node		97524	0					
ANR	99392	Argument	Environment :: getEnv ( )		97524	1					
ANR	99393	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99394	Callee	Environment :: getEnv		97524	0					
ANR	99395	Identifier	Environment :: getEnv		97524	0					
ANR	99396	ArgumentList			97524	1					
ANR	99397	WhileStatement	"while ( current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		97524	1					
ANR	99398	Condition	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	603:46:31677:31770	97524	0	True				
ANR	99399	AndExpression	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		97524	0		&&			
ANR	99400	Identifier	current_node		97524	0					
ANR	99401	EqualityExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		97524	1		!=			
ANR	99402	CallExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) )"		97524	0					
ANR	99403	Callee	axiom_node_get_node_type		97524	0					
ANR	99404	Identifier	axiom_node_get_node_type		97524	0					
ANR	99405	ArgumentList	current_node		97524	1					
ANR	99406	Argument	current_node		97524	0					
ANR	99407	Identifier	current_node		97524	0					
ANR	99408	Argument	Environment :: getEnv ( )		97524	1					
ANR	99409	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99410	Callee	Environment :: getEnv		97524	0					
ANR	99411	Identifier	Environment :: getEnv		97524	0					
ANR	99412	ArgumentList			97524	1					
ANR	99413	Identifier	AXIOM_ELEMENT		97524	1					
ANR	99414	CompoundStatement		465:40:27587:27587	97524	1					
ANR	99415	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	605:44:31859:31938	97524	0	True				
ANR	99416	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	0		=			
ANR	99417	Identifier	current_node		97524	0					
ANR	99418	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	99419	Callee	axiom_node_get_next_sibling		97524	0					
ANR	99420	Identifier	axiom_node_get_next_sibling		97524	0					
ANR	99421	ArgumentList	current_node		97524	1					
ANR	99422	Argument	current_node		97524	0					
ANR	99423	Identifier	current_node		97524	0					
ANR	99424	Argument	Environment :: getEnv ( )		97524	1					
ANR	99425	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99426	Callee	Environment :: getEnv		97524	0					
ANR	99427	Identifier	Environment :: getEnv		97524	0					
ANR	99428	ArgumentList			97524	1					
ANR	99429	IfStatement	if ( current_node != NULL )		97524	2					
ANR	99430	Condition	current_node != NULL	607:43:32025:32044	97524	0	True				
ANR	99431	EqualityExpression	current_node != NULL		97524	0		!=			
ANR	99432	Identifier	current_node		97524	0					
ANR	99433	Identifier	NULL		97524	1					
ANR	99434	CompoundStatement		469:40:27861:27861	97524	1					
ANR	99435	ExpressionStatement	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	609:44:32133:32234	97524	0	True				
ANR	99436	AssignmentExpression	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		97524	0		=			
ANR	99437	Identifier	current_element		97524	0					
ANR	99438	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	99439	CastTarget	axiom_element_t *		97524	0					
ANR	99440	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	99441	Callee	axiom_node_get_data_element		97524	0					
ANR	99442	Identifier	axiom_node_get_data_element		97524	0					
ANR	99443	ArgumentList	current_node		97524	1					
ANR	99444	Argument	current_node		97524	0					
ANR	99445	Identifier	current_node		97524	0					
ANR	99446	Argument	Environment :: getEnv ( )		97524	1					
ANR	99447	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99448	Callee	Environment :: getEnv		97524	0					
ANR	99449	Identifier	Environment :: getEnv		97524	0					
ANR	99450	ArgumentList			97524	1					
ANR	99451	ExpressionStatement	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"	610:44:32280:32366	97524	1	True				
ANR	99452	AssignmentExpression	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		97524	0		=			
ANR	99453	Identifier	mqname		97524	0					
ANR	99454	CallExpression	"axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		97524	1					
ANR	99455	Callee	axiom_element_get_qname		97524	0					
ANR	99456	Identifier	axiom_element_get_qname		97524	0					
ANR	99457	ArgumentList	current_element		97524	1					
ANR	99458	Argument	current_element		97524	0					
ANR	99459	Identifier	current_element		97524	0					
ANR	99460	Argument	Environment :: getEnv ( )		97524	1					
ANR	99461	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99462	Callee	Environment :: getEnv		97524	0					
ANR	99463	Identifier	Environment :: getEnv		97524	0					
ANR	99464	ArgumentList			97524	1					
ANR	99465	Argument	current_node		97524	2					
ANR	99466	Identifier	current_node		97524	0					
ANR	99467	ExpressionStatement	is_early_node_valid = false	614:35:32522:32549	97524	41	True				
ANR	99468	AssignmentExpression	is_early_node_valid = false		97524	0		=			
ANR	99469	Identifier	is_early_node_valid		97524	0					
ANR	99470	Identifier	false		97524	1					
ANR	99471	ExpressionStatement	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""iwd"" , NULL , NULL )"	616:33:32618:32695	97524	42	True				
ANR	99472	AssignmentExpression	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""iwd"" , NULL , NULL )"		97524	0		=			
ANR	99473	Identifier	element_qname		97524	0					
ANR	99474	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""iwd"" , NULL , NULL )"		97524	1					
ANR	99475	Callee	axutil_qname_create		97524	0					
ANR	99476	Identifier	axutil_qname_create		97524	0					
ANR	99477	ArgumentList	Environment :: getEnv ( )		97524	1					
ANR	99478	Argument	Environment :: getEnv ( )		97524	0					
ANR	99479	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99480	Callee	Environment :: getEnv		97524	0					
ANR	99481	Identifier	Environment :: getEnv		97524	0					
ANR	99482	ArgumentList			97524	1					
ANR	99483	Argument	"""iwd"""		97524	1					
ANR	99484	PrimaryExpression	"""iwd"""		97524	0					
ANR	99485	Argument	NULL		97524	2					
ANR	99486	Identifier	NULL		97524	0					
ANR	99487	Argument	NULL		97524	3					
ANR	99488	Identifier	NULL		97524	0					
ANR	99489	IfStatement	"if ( ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""iwd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) ) )"		97524	43					
ANR	99490	Condition	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""iwd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"	620:32:32797:32996	97524	0	True				
ANR	99491	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""iwd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		97524	0		&&			
ANR	99492	Identifier	current_node		97524	0					
ANR	99493	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""iwd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		97524	1		&&			
ANR	99494	Identifier	current_element		97524	0					
ANR	99495	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""iwd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1		||			
ANR	99496	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		97524	0					
ANR	99497	Callee	axutil_qname_equals		97524	0					
ANR	99498	Identifier	axutil_qname_equals		97524	0					
ANR	99499	ArgumentList	element_qname		97524	1					
ANR	99500	Argument	element_qname		97524	0					
ANR	99501	Identifier	element_qname		97524	0					
ANR	99502	Argument	Environment :: getEnv ( )		97524	1					
ANR	99503	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99504	Callee	Environment :: getEnv		97524	0					
ANR	99505	Identifier	Environment :: getEnv		97524	0					
ANR	99506	ArgumentList			97524	1					
ANR	99507	Argument	mqname		97524	2					
ANR	99508	Identifier	mqname		97524	0					
ANR	99509	UnaryOperationExpression	"! axutil_strcmp ( ""iwd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1					
ANR	99510	UnaryOperator	!		97524	0					
ANR	99511	CallExpression	"axutil_strcmp ( ""iwd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1					
ANR	99512	Callee	axutil_strcmp		97524	0					
ANR	99513	Identifier	axutil_strcmp		97524	0					
ANR	99514	ArgumentList	"""iwd"""		97524	1					
ANR	99515	Argument	"""iwd"""		97524	0					
ANR	99516	PrimaryExpression	"""iwd"""		97524	0					
ANR	99517	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		97524	1					
ANR	99518	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		97524	0					
ANR	99519	Callee	axiom_element_get_localname		97524	0					
ANR	99520	Identifier	axiom_element_get_localname		97524	0					
ANR	99521	ArgumentList	current_element		97524	1					
ANR	99522	Argument	current_element		97524	0					
ANR	99523	Identifier	current_element		97524	0					
ANR	99524	Argument	Environment :: getEnv ( )		97524	1					
ANR	99525	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99526	Callee	Environment :: getEnv		97524	0					
ANR	99527	Identifier	Environment :: getEnv		97524	0					
ANR	99528	ArgumentList			97524	1					
ANR	99529	CompoundStatement		482:27:28800:28800	97524	1					
ANR	99530	IfStatement	"if ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""iwd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"		97524	0					
ANR	99531	Condition	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""iwd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"	622:34:33062:33259	97524	0	True				
ANR	99532	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""iwd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		97524	0		&&			
ANR	99533	Identifier	current_node		97524	0					
ANR	99534	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""iwd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		97524	1		&&			
ANR	99535	Identifier	current_element		97524	0					
ANR	99536	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""iwd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1		||			
ANR	99537	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		97524	0					
ANR	99538	Callee	axutil_qname_equals		97524	0					
ANR	99539	Identifier	axutil_qname_equals		97524	0					
ANR	99540	ArgumentList	element_qname		97524	1					
ANR	99541	Argument	element_qname		97524	0					
ANR	99542	Identifier	element_qname		97524	0					
ANR	99543	Argument	Environment :: getEnv ( )		97524	1					
ANR	99544	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99545	Callee	Environment :: getEnv		97524	0					
ANR	99546	Identifier	Environment :: getEnv		97524	0					
ANR	99547	ArgumentList			97524	1					
ANR	99548	Argument	mqname		97524	2					
ANR	99549	Identifier	mqname		97524	0					
ANR	99550	UnaryOperationExpression	"! axutil_strcmp ( ""iwd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1					
ANR	99551	UnaryOperator	!		97524	0					
ANR	99552	CallExpression	"axutil_strcmp ( ""iwd"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1					
ANR	99553	Callee	axutil_strcmp		97524	0					
ANR	99554	Identifier	axutil_strcmp		97524	0					
ANR	99555	ArgumentList	"""iwd"""		97524	1					
ANR	99556	Argument	"""iwd"""		97524	0					
ANR	99557	PrimaryExpression	"""iwd"""		97524	0					
ANR	99558	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		97524	1					
ANR	99559	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		97524	0					
ANR	99560	Callee	axiom_element_get_localname		97524	0					
ANR	99561	Identifier	axiom_element_get_localname		97524	0					
ANR	99562	ArgumentList	current_element		97524	1					
ANR	99563	Argument	current_element		97524	0					
ANR	99564	Identifier	current_element		97524	0					
ANR	99565	Argument	Environment :: getEnv ( )		97524	1					
ANR	99566	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99567	Callee	Environment :: getEnv		97524	0					
ANR	99568	Identifier	Environment :: getEnv		97524	0					
ANR	99569	ArgumentList			97524	1					
ANR	99570	CompoundStatement		484:30:29066:29066	97524	1					
ANR	99571	ExpressionStatement	is_early_node_valid = true	624:32:33326:33352	97524	0	True				
ANR	99572	AssignmentExpression	is_early_node_valid = true		97524	0		=			
ANR	99573	Identifier	is_early_node_valid		97524	0					
ANR	99574	Identifier	true		97524	1					
ANR	99575	ExpressionStatement	"text_value = axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"	628:38:33489:33578	97524	1	True				
ANR	99576	AssignmentExpression	"text_value = axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"		97524	0		=			
ANR	99577	Identifier	text_value		97524	0					
ANR	99578	CallExpression	"axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"		97524	1					
ANR	99579	Callee	axiom_element_get_text		97524	0					
ANR	99580	Identifier	axiom_element_get_text		97524	0					
ANR	99581	ArgumentList	current_element		97524	1					
ANR	99582	Argument	current_element		97524	0					
ANR	99583	Identifier	current_element		97524	0					
ANR	99584	Argument	Environment :: getEnv ( )		97524	1					
ANR	99585	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99586	Callee	Environment :: getEnv		97524	0					
ANR	99587	Identifier	Environment :: getEnv		97524	0					
ANR	99588	ArgumentList			97524	1					
ANR	99589	Argument	current_node		97524	2					
ANR	99590	Identifier	current_node		97524	0					
ANR	99591	IfStatement	if ( text_value != NULL )		97524	2					
ANR	99592	Condition	text_value != NULL	629:41:33621:33638	97524	0	True				
ANR	99593	EqualityExpression	text_value != NULL		97524	0		!=			
ANR	99594	Identifier	text_value		97524	0					
ANR	99595	Identifier	NULL		97524	1					
ANR	99596	CompoundStatement		491:38:29453:29453	97524	1					
ANR	99597	ExpressionStatement	status = setIwd ( text_value )	631:44:33725:33752	97524	0	True				
ANR	99598	AssignmentExpression	status = setIwd ( text_value )		97524	0		=			
ANR	99599	Identifier	status		97524	0					
ANR	99600	CallExpression	setIwd ( text_value )		97524	1					
ANR	99601	Callee	setIwd		97524	0					
ANR	99602	Identifier	setIwd		97524	0					
ANR	99603	ArgumentList	text_value		97524	1					
ANR	99604	Argument	text_value		97524	0					
ANR	99605	Identifier	text_value		97524	0					
ANR	99606	ElseStatement	else		97524	0					
ANR	99607	CompoundStatement		508:44:30636:30672	97524	0					
ANR	99608	IdentifierDeclStatement	axiom_attribute_t * the_attri = NULL ;	645:44:34703:34738	97524	0	True				
ANR	99609	IdentifierDecl	* the_attri = NULL		97524	0					
ANR	99610	IdentifierDeclType	axiom_attribute_t *		97524	0					
ANR	99611	Identifier	the_attri		97524	1					
ANR	99612	AssignmentExpression	* the_attri = NULL		97524	2		=			
ANR	99613	Identifier	NULL		97524	0					
ANR	99614	Identifier	NULL		97524	1					
ANR	99615	IdentifierDeclStatement	axis2_char_t * attrib_text = NULL ;	646:44:34784:34816	97524	1	True				
ANR	99616	IdentifierDecl	* attrib_text = NULL		97524	0					
ANR	99617	IdentifierDeclType	axis2_char_t *		97524	0					
ANR	99618	Identifier	attrib_text		97524	1					
ANR	99619	AssignmentExpression	* attrib_text = NULL		97524	2		=			
ANR	99620	Identifier	NULL		97524	0					
ANR	99621	Identifier	NULL		97524	1					
ANR	99622	IdentifierDeclStatement	axutil_hash_t * attribute_hash = NULL ;	647:44:34862:34898	97524	2	True				
ANR	99623	IdentifierDecl	* attribute_hash = NULL		97524	0					
ANR	99624	IdentifierDeclType	axutil_hash_t *		97524	0					
ANR	99625	Identifier	attribute_hash		97524	1					
ANR	99626	AssignmentExpression	* attribute_hash = NULL		97524	2		=			
ANR	99627	Identifier	NULL		97524	0					
ANR	99628	Identifier	NULL		97524	1					
ANR	99629	ExpressionStatement	"attribute_hash = axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"	649:44:34945:35034	97524	3	True				
ANR	99630	AssignmentExpression	"attribute_hash = axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"		97524	0		=			
ANR	99631	Identifier	attribute_hash		97524	0					
ANR	99632	CallExpression	"axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"		97524	1					
ANR	99633	Callee	axiom_element_get_all_attributes		97524	0					
ANR	99634	Identifier	axiom_element_get_all_attributes		97524	0					
ANR	99635	ArgumentList	current_element		97524	1					
ANR	99636	Argument	current_element		97524	0					
ANR	99637	Identifier	current_element		97524	0					
ANR	99638	Argument	Environment :: getEnv ( )		97524	1					
ANR	99639	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99640	Callee	Environment :: getEnv		97524	0					
ANR	99641	Identifier	Environment :: getEnv		97524	0					
ANR	99642	ArgumentList			97524	1					
ANR	99643	ExpressionStatement	attrib_text = NULL	651:44:35081:35099	97524	4	True				
ANR	99644	AssignmentExpression	attrib_text = NULL		97524	0		=			
ANR	99645	Identifier	attrib_text		97524	0					
ANR	99646	Identifier	NULL		97524	1					
ANR	99647	IfStatement	if ( attribute_hash )		97524	5					
ANR	99648	Condition	attribute_hash	652:47:35148:35161	97524	0	True				
ANR	99649	Identifier	attribute_hash		97524	0					
ANR	99650	CompoundStatement		517:49:31167:31182	97524	1					
ANR	99651	IdentifierDeclStatement	axutil_hash_index_t * hi ;	654:49:35259:35282	97524	0	True				
ANR	99652	IdentifierDecl	* hi		97524	0					
ANR	99653	IdentifierDeclType	axutil_hash_index_t *		97524	0					
ANR	99654	Identifier	hi		97524	1					
ANR	99655	IdentifierDeclStatement	void * val ;	655:49:35333:35342	97524	1	True				
ANR	99656	IdentifierDecl	* val		97524	0					
ANR	99657	IdentifierDeclType	void *		97524	0					
ANR	99658	Identifier	val		97524	1					
ANR	99659	IdentifierDeclStatement	const void * key ;	656:49:35393:35408	97524	2	True				
ANR	99660	IdentifierDecl	* key		97524	0					
ANR	99661	IdentifierDeclType	const void *		97524	0					
ANR	99662	Identifier	key		97524	1					
ANR	99663	ForStatement	"for ( hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) ) ; hi ; hi = axutil_hash_next ( Environment :: getEnv ( ) , hi ) )"		97524	3					
ANR	99664	ForInit	"hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) ) ;"	658:54:35505:35566	97524	0	True				
ANR	99665	AssignmentExpression	"hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) )"		97524	0		=			
ANR	99666	Identifier	hi		97524	0					
ANR	99667	CallExpression	"axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) )"		97524	1					
ANR	99668	Callee	axutil_hash_first		97524	0					
ANR	99669	Identifier	axutil_hash_first		97524	0					
ANR	99670	ArgumentList	attribute_hash		97524	1					
ANR	99671	Argument	attribute_hash		97524	0					
ANR	99672	Identifier	attribute_hash		97524	0					
ANR	99673	Argument	Environment :: getEnv ( )		97524	1					
ANR	99674	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99675	Callee	Environment :: getEnv		97524	0					
ANR	99676	Identifier	Environment :: getEnv		97524	0					
ANR	99677	ArgumentList			97524	1					
ANR	99678	Condition	hi	658:117:35568:35569	97524	1	True				
ANR	99679	Identifier	hi		97524	0					
ANR	99680	AssignmentExpression	"hi = axutil_hash_next ( Environment :: getEnv ( ) , hi )"	658:121:35572:35619	97524	2	True	=			
ANR	99681	Identifier	hi		97524	0					
ANR	99682	CallExpression	"axutil_hash_next ( Environment :: getEnv ( ) , hi )"		97524	1					
ANR	99683	Callee	axutil_hash_next		97524	0					
ANR	99684	Identifier	axutil_hash_next		97524	0					
ANR	99685	ArgumentList	Environment :: getEnv ( )		97524	1					
ANR	99686	Argument	Environment :: getEnv ( )		97524	0					
ANR	99687	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99688	Callee	Environment :: getEnv		97524	0					
ANR	99689	Identifier	Environment :: getEnv		97524	0					
ANR	99690	ArgumentList			97524	1					
ANR	99691	Argument	hi		97524	1					
ANR	99692	Identifier	hi		97524	0					
ANR	99693	CompoundStatement		520:49:31445:31445	97524	3					
ANR	99694	ExpressionStatement	"axutil_hash_this ( hi , & key , NULL , & val )"	660:53:35726:35764	97524	0	True				
ANR	99695	CallExpression	"axutil_hash_this ( hi , & key , NULL , & val )"		97524	0					
ANR	99696	Callee	axutil_hash_this		97524	0					
ANR	99697	Identifier	axutil_hash_this		97524	0					
ANR	99698	ArgumentList	hi		97524	1					
ANR	99699	Argument	hi		97524	0					
ANR	99700	Identifier	hi		97524	0					
ANR	99701	Argument	& key		97524	1					
ANR	99702	UnaryOperationExpression	& key		97524	0					
ANR	99703	UnaryOperator	&		97524	0					
ANR	99704	Identifier	key		97524	1					
ANR	99705	Argument	NULL		97524	2					
ANR	99706	Identifier	NULL		97524	0					
ANR	99707	Argument	& val		97524	3					
ANR	99708	UnaryOperationExpression	& val		97524	0					
ANR	99709	UnaryOperator	&		97524	0					
ANR	99710	Identifier	val		97524	1					
ANR	99711	IfStatement	"if ( strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" ) )"		97524	1					
ANR	99712	Condition	"strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" )"	662:56:35876:35950	97524	0	True				
ANR	99713	CallExpression	"strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" )"		97524	0					
ANR	99714	Callee	strstr		97524	0					
ANR	99715	Identifier	strstr		97524	0					
ANR	99716	ArgumentList	( axis2_char_t * ) key		97524	1					
ANR	99717	Argument	( axis2_char_t * ) key		97524	0					
ANR	99718	CastExpression	( axis2_char_t * ) key		97524	0					
ANR	99719	CastTarget	axis2_char_t *		97524	0					
ANR	99720	Identifier	key		97524	1					
ANR	99721	Argument	"""nil|http://www.w3.org/2001/XMLSchema-instance"""		97524	1					
ANR	99722	PrimaryExpression	"""nil|http://www.w3.org/2001/XMLSchema-instance"""		97524	0					
ANR	99723	CompoundStatement		524:53:31780:31780	97524	1					
ANR	99724	ExpressionStatement	the_attri = ( axiom_attribute_t * ) val	664:57:36065:36100	97524	0	True				
ANR	99725	AssignmentExpression	the_attri = ( axiom_attribute_t * ) val		97524	0		=			
ANR	99726	Identifier	the_attri		97524	0					
ANR	99727	CastExpression	( axiom_attribute_t * ) val		97524	1					
ANR	99728	CastTarget	axiom_attribute_t *		97524	0					
ANR	99729	Identifier	val		97524	1					
ANR	99730	BreakStatement	break ;	665:57:36159:36164	97524	1	True				
ANR	99731	IfStatement	if ( the_attri )		97524	6					
ANR	99732	Condition	the_attri	670:47:36366:36374	97524	0	True				
ANR	99733	Identifier	the_attri		97524	0					
ANR	99734	CompoundStatement		532:44:32195:32195	97524	1					
ANR	99735	ExpressionStatement	"attrib_text = axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"	672:48:36471:36544	97524	0	True				
ANR	99736	AssignmentExpression	"attrib_text = axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"		97524	0		=			
ANR	99737	Identifier	attrib_text		97524	0					
ANR	99738	CallExpression	"axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"		97524	1					
ANR	99739	Callee	axiom_attribute_get_value		97524	0					
ANR	99740	Identifier	axiom_attribute_get_value		97524	0					
ANR	99741	ArgumentList	the_attri		97524	1					
ANR	99742	Argument	the_attri		97524	0					
ANR	99743	Identifier	the_attri		97524	0					
ANR	99744	Argument	Environment :: getEnv ( )		97524	1					
ANR	99745	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99746	Callee	Environment :: getEnv		97524	0					
ANR	99747	Identifier	Environment :: getEnv		97524	0					
ANR	99748	ArgumentList			97524	1					
ANR	99749	ElseStatement	else		97524	0					
ANR	99750	CompoundStatement		536:44:32459:32459	97524	0					
ANR	99751	ExpressionStatement	"attrib_text = axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"	677:48:36924:37026	97524	0	True				
ANR	99752	AssignmentExpression	"attrib_text = axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"		97524	0		=			
ANR	99753	Identifier	attrib_text		97524	0					
ANR	99754	CallExpression	"axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"		97524	1					
ANR	99755	Callee	axiom_element_get_attribute_value_by_name		97524	0					
ANR	99756	Identifier	axiom_element_get_attribute_value_by_name		97524	0					
ANR	99757	ArgumentList	current_element		97524	1					
ANR	99758	Argument	current_element		97524	0					
ANR	99759	Identifier	current_element		97524	0					
ANR	99760	Argument	Environment :: getEnv ( )		97524	1					
ANR	99761	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99762	Callee	Environment :: getEnv		97524	0					
ANR	99763	Identifier	Environment :: getEnv		97524	0					
ANR	99764	ArgumentList			97524	1					
ANR	99765	Argument	"""nil"""		97524	2					
ANR	99766	PrimaryExpression	"""nil"""		97524	0					
ANR	99767	IfStatement	"if ( attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" ) )"		97524	7					
ANR	99768	Condition	"attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" )"	680:47:37122:37172	97524	0	True				
ANR	99769	AndExpression	"attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" )"		97524	0		&&			
ANR	99770	Identifier	attrib_text		97524	0					
ANR	99771	EqualityExpression	"0 == axutil_strcmp ( attrib_text , ""1"" )"		97524	1		==			
ANR	99772	PrimaryExpression	0		97524	0					
ANR	99773	CallExpression	"axutil_strcmp ( attrib_text , ""1"" )"		97524	1					
ANR	99774	Callee	axutil_strcmp		97524	0					
ANR	99775	Identifier	axutil_strcmp		97524	0					
ANR	99776	ArgumentList	attrib_text		97524	1					
ANR	99777	Argument	attrib_text		97524	0					
ANR	99778	Identifier	attrib_text		97524	0					
ANR	99779	Argument	"""1"""		97524	1					
ANR	99780	PrimaryExpression	"""1"""		97524	0					
ANR	99781	CompoundStatement		542:44:32993:32993	97524	1					
ANR	99782	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""NULL value is set to a non nillable element iwd"" )"	682:48:37269:37377	97524	0	True				
ANR	99783	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""NULL value is set to a non nillable element iwd"" )"		97524	0					
ANR	99784	Callee	WSF_LOG_ERROR_MSG		97524	0					
ANR	99785	Identifier	WSF_LOG_ERROR_MSG		97524	0					
ANR	99786	ArgumentList	Environment :: getEnv ( ) -> log		97524	1					
ANR	99787	Argument	Environment :: getEnv ( ) -> log		97524	0					
ANR	99788	PtrMemberAccess	Environment :: getEnv ( ) -> log		97524	0					
ANR	99789	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99790	Callee	Environment :: getEnv		97524	0					
ANR	99791	Identifier	Environment :: getEnv		97524	0					
ANR	99792	ArgumentList			97524	1					
ANR	99793	Identifier	log		97524	1					
ANR	99794	Argument	WSF_LOG_SI		97524	1					
ANR	99795	Identifier	WSF_LOG_SI		97524	0					
ANR	99796	Argument	"""NULL value is set to a non nillable element iwd"""		97524	2					
ANR	99797	PrimaryExpression	"""NULL value is set to a non nillable element iwd"""		97524	0					
ANR	99798	ExpressionStatement	status = AXIS2_FAILURE	683:48:37427:37449	97524	1	True				
ANR	99799	AssignmentExpression	status = AXIS2_FAILURE		97524	0		=			
ANR	99800	Identifier	status		97524	0					
ANR	99801	Identifier	AXIS2_FAILURE		97524	1					
ANR	99802	ElseStatement	else		97524	0					
ANR	99803	CompoundStatement		547:44:33364:33364	97524	0					
ANR	99804	ExpressionStatement	"status = setIwd ( """" )"	688:48:37737:37756	97524	0	True				
ANR	99805	AssignmentExpression	"status = setIwd ( """" )"		97524	0		=			
ANR	99806	Identifier	status		97524	0					
ANR	99807	CallExpression	"setIwd ( """" )"		97524	1					
ANR	99808	Callee	setIwd		97524	0					
ANR	99809	Identifier	setIwd		97524	0					
ANR	99810	ArgumentList	""""""		97524	1					
ANR	99811	Argument	""""""		97524	0					
ANR	99812	PrimaryExpression	""""""		97524	0					
ANR	99813	IfStatement	if ( AXIS2_FAILURE == status )		97524	3					
ANR	99814	Condition	AXIS2_FAILURE == status	692:36:37919:37942	97524	0	True				
ANR	99815	EqualityExpression	AXIS2_FAILURE == status		97524	0		==			
ANR	99816	Identifier	AXIS2_FAILURE		97524	0					
ANR	99817	Identifier	status		97524	1					
ANR	99818	CompoundStatement		554:33:33752:33752	97524	1					
ANR	99819	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for iwd "" )"	694:37:38017:38113	97524	0	True				
ANR	99820	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for iwd "" )"		97524	0					
ANR	99821	Callee	WSF_LOG_ERROR_MSG		97524	0					
ANR	99822	Identifier	WSF_LOG_ERROR_MSG		97524	0					
ANR	99823	ArgumentList	Environment :: getEnv ( ) -> log		97524	1					
ANR	99824	Argument	Environment :: getEnv ( ) -> log		97524	0					
ANR	99825	PtrMemberAccess	Environment :: getEnv ( ) -> log		97524	0					
ANR	99826	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99827	Callee	Environment :: getEnv		97524	0					
ANR	99828	Identifier	Environment :: getEnv		97524	0					
ANR	99829	ArgumentList			97524	1					
ANR	99830	Identifier	log		97524	1					
ANR	99831	Argument	WSF_LOG_SI		97524	1					
ANR	99832	Identifier	WSF_LOG_SI		97524	0					
ANR	99833	Argument	"""failed in setting the value for iwd """		97524	2					
ANR	99834	PrimaryExpression	"""failed in setting the value for iwd """		97524	0					
ANR	99835	IfStatement	if ( element_qname )		97524	1					
ANR	99836	Condition	element_qname	695:40:38155:38167	97524	0	True				
ANR	99837	Identifier	element_qname		97524	0					
ANR	99838	CompoundStatement		557:37:33981:33981	97524	1					
ANR	99839	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	697:41:38250:38305	97524	0	True				
ANR	99840	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		97524	0					
ANR	99841	Callee	axutil_qname_free		97524	0					
ANR	99842	Identifier	axutil_qname_free		97524	0					
ANR	99843	ArgumentList	element_qname		97524	1					
ANR	99844	Argument	element_qname		97524	0					
ANR	99845	Identifier	element_qname		97524	0					
ANR	99846	Argument	Environment :: getEnv ( )		97524	1					
ANR	99847	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99848	Callee	Environment :: getEnv		97524	0					
ANR	99849	Identifier	Environment :: getEnv		97524	0					
ANR	99850	ArgumentList			97524	1					
ANR	99851	ReturnStatement	return AXIS2_FAILURE ;	699:37:38383:38403	97524	2	True				
ANR	99852	Identifier	AXIS2_FAILURE		97524	0					
ANR	99853	ElseStatement	else		97524	0					
ANR	99854	IfStatement	if ( ! dont_care_minoccurs )		97524	0					
ANR	99855	Condition	! dont_care_minoccurs	703:38:38538:38557	97524	0	True				
ANR	99856	UnaryOperationExpression	! dont_care_minoccurs		97524	0					
ANR	99857	UnaryOperator	!		97524	0					
ANR	99858	Identifier	dont_care_minoccurs		97524	1					
ANR	99859	CompoundStatement		565:30:34364:34364	97524	1					
ANR	99860	IfStatement	if ( element_qname )		97524	0					
ANR	99861	Condition	element_qname	705:37:38629:38641	97524	0	True				
ANR	99862	Identifier	element_qname		97524	0					
ANR	99863	CompoundStatement		567:34:34452:34452	97524	1					
ANR	99864	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	707:38:38718:38773	97524	0	True				
ANR	99865	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		97524	0					
ANR	99866	Callee	axutil_qname_free		97524	0					
ANR	99867	Identifier	axutil_qname_free		97524	0					
ANR	99868	ArgumentList	element_qname		97524	1					
ANR	99869	Argument	element_qname		97524	0					
ANR	99870	Identifier	element_qname		97524	0					
ANR	99871	Argument	Environment :: getEnv ( )		97524	1					
ANR	99872	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99873	Callee	Environment :: getEnv		97524	0					
ANR	99874	Identifier	Environment :: getEnv		97524	0					
ANR	99875	ArgumentList			97524	1					
ANR	99876	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""non nillable or minOuccrs != 0 element iwd missing"" )"	710:6:38887:38997	97524	1	True				
ANR	99877	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""non nillable or minOuccrs != 0 element iwd missing"" )"		97524	0					
ANR	99878	Callee	WSF_LOG_ERROR_MSG		97524	0					
ANR	99879	Identifier	WSF_LOG_ERROR_MSG		97524	0					
ANR	99880	ArgumentList	Environment :: getEnv ( ) -> log		97524	1					
ANR	99881	Argument	Environment :: getEnv ( ) -> log		97524	0					
ANR	99882	PtrMemberAccess	Environment :: getEnv ( ) -> log		97524	0					
ANR	99883	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99884	Callee	Environment :: getEnv		97524	0					
ANR	99885	Identifier	Environment :: getEnv		97524	0					
ANR	99886	ArgumentList			97524	1					
ANR	99887	Identifier	log		97524	1					
ANR	99888	Argument	WSF_LOG_SI		97524	1					
ANR	99889	Identifier	WSF_LOG_SI		97524	0					
ANR	99890	Argument	"""non nillable or minOuccrs != 0 element iwd missing"""		97524	2					
ANR	99891	PrimaryExpression	"""non nillable or minOuccrs != 0 element iwd missing"""		97524	0					
ANR	99892	ReturnStatement	return AXIS2_FAILURE ;	711:34:39033:39053	97524	2	True				
ANR	99893	Identifier	AXIS2_FAILURE		97524	0					
ANR	99894	IfStatement	if ( element_qname )		97524	44					
ANR	99895	Condition	element_qname	714:21:39136:39148	97524	0	True				
ANR	99896	Identifier	element_qname		97524	0					
ANR	99897	CompoundStatement		576:18:34943:34943	97524	1					
ANR	99898	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	716:21:39192:39247	97524	0	True				
ANR	99899	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		97524	0					
ANR	99900	Callee	axutil_qname_free		97524	0					
ANR	99901	Identifier	axutil_qname_free		97524	0					
ANR	99902	ArgumentList	element_qname		97524	1					
ANR	99903	Argument	element_qname		97524	0					
ANR	99904	Identifier	element_qname		97524	0					
ANR	99905	Argument	Environment :: getEnv ( )		97524	1					
ANR	99906	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99907	Callee	Environment :: getEnv		97524	0					
ANR	99908	Identifier	Environment :: getEnv		97524	0					
ANR	99909	ArgumentList			97524	1					
ANR	99910	ExpressionStatement	element_qname = NULL	717:21:39270:39290	97524	1	True				
ANR	99911	AssignmentExpression	element_qname = NULL		97524	0		=			
ANR	99912	Identifier	element_qname		97524	0					
ANR	99913	Identifier	NULL		97524	1					
ANR	99914	IfStatement	if ( current_node != NULL && is_early_node_valid )		97524	45					
ANR	99915	Condition	current_node != NULL && is_early_node_valid	733:38:39797:39839	97524	0	True				
ANR	99916	AndExpression	current_node != NULL && is_early_node_valid		97524	0		&&			
ANR	99917	EqualityExpression	current_node != NULL		97524	0		!=			
ANR	99918	Identifier	current_node		97524	0					
ANR	99919	Identifier	NULL		97524	1					
ANR	99920	Identifier	is_early_node_valid		97524	1					
ANR	99921	CompoundStatement		595:35:35651:35651	97524	1					
ANR	99922	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	735:39:39918:39997	97524	0	True				
ANR	99923	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	0		=			
ANR	99924	Identifier	current_node		97524	0					
ANR	99925	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	99926	Callee	axiom_node_get_next_sibling		97524	0					
ANR	99927	Identifier	axiom_node_get_next_sibling		97524	0					
ANR	99928	ArgumentList	current_node		97524	1					
ANR	99929	Argument	current_node		97524	0					
ANR	99930	Identifier	current_node		97524	0					
ANR	99931	Argument	Environment :: getEnv ( )		97524	1					
ANR	99932	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99933	Callee	Environment :: getEnv		97524	0					
ANR	99934	Identifier	Environment :: getEnv		97524	0					
ANR	99935	ArgumentList			97524	1					
ANR	99936	WhileStatement	"while ( current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		97524	1					
ANR	99937	Condition	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	738:46:40125:40218	97524	0	True				
ANR	99938	AndExpression	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		97524	0		&&			
ANR	99939	Identifier	current_node		97524	0					
ANR	99940	EqualityExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		97524	1		!=			
ANR	99941	CallExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) )"		97524	0					
ANR	99942	Callee	axiom_node_get_node_type		97524	0					
ANR	99943	Identifier	axiom_node_get_node_type		97524	0					
ANR	99944	ArgumentList	current_node		97524	1					
ANR	99945	Argument	current_node		97524	0					
ANR	99946	Identifier	current_node		97524	0					
ANR	99947	Argument	Environment :: getEnv ( )		97524	1					
ANR	99948	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99949	Callee	Environment :: getEnv		97524	0					
ANR	99950	Identifier	Environment :: getEnv		97524	0					
ANR	99951	ArgumentList			97524	1					
ANR	99952	Identifier	AXIOM_ELEMENT		97524	1					
ANR	99953	CompoundStatement		600:40:36035:36035	97524	1					
ANR	99954	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	740:44:40307:40386	97524	0	True				
ANR	99955	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	0		=			
ANR	99956	Identifier	current_node		97524	0					
ANR	99957	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	99958	Callee	axiom_node_get_next_sibling		97524	0					
ANR	99959	Identifier	axiom_node_get_next_sibling		97524	0					
ANR	99960	ArgumentList	current_node		97524	1					
ANR	99961	Argument	current_node		97524	0					
ANR	99962	Identifier	current_node		97524	0					
ANR	99963	Argument	Environment :: getEnv ( )		97524	1					
ANR	99964	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99965	Callee	Environment :: getEnv		97524	0					
ANR	99966	Identifier	Environment :: getEnv		97524	0					
ANR	99967	ArgumentList			97524	1					
ANR	99968	IfStatement	if ( current_node != NULL )		97524	2					
ANR	99969	Condition	current_node != NULL	742:43:40473:40492	97524	0	True				
ANR	99970	EqualityExpression	current_node != NULL		97524	0		!=			
ANR	99971	Identifier	current_node		97524	0					
ANR	99972	Identifier	NULL		97524	1					
ANR	99973	CompoundStatement		604:40:36309:36309	97524	1					
ANR	99974	ExpressionStatement	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	744:44:40581:40682	97524	0	True				
ANR	99975	AssignmentExpression	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		97524	0		=			
ANR	99976	Identifier	current_element		97524	0					
ANR	99977	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	99978	CastTarget	axiom_element_t *		97524	0					
ANR	99979	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	99980	Callee	axiom_node_get_data_element		97524	0					
ANR	99981	Identifier	axiom_node_get_data_element		97524	0					
ANR	99982	ArgumentList	current_node		97524	1					
ANR	99983	Argument	current_node		97524	0					
ANR	99984	Identifier	current_node		97524	0					
ANR	99985	Argument	Environment :: getEnv ( )		97524	1					
ANR	99986	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	99987	Callee	Environment :: getEnv		97524	0					
ANR	99988	Identifier	Environment :: getEnv		97524	0					
ANR	99989	ArgumentList			97524	1					
ANR	99990	ExpressionStatement	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"	745:44:40728:40814	97524	1	True				
ANR	99991	AssignmentExpression	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		97524	0		=			
ANR	99992	Identifier	mqname		97524	0					
ANR	99993	CallExpression	"axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		97524	1					
ANR	99994	Callee	axiom_element_get_qname		97524	0					
ANR	99995	Identifier	axiom_element_get_qname		97524	0					
ANR	99996	ArgumentList	current_element		97524	1					
ANR	99997	Argument	current_element		97524	0					
ANR	99998	Identifier	current_element		97524	0					
ANR	99999	Argument	Environment :: getEnv ( )		97524	1					
ANR	100000	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100001	Callee	Environment :: getEnv		97524	0					
ANR	100002	Identifier	Environment :: getEnv		97524	0					
ANR	100003	ArgumentList			97524	1					
ANR	100004	Argument	current_node		97524	2					
ANR	100005	Identifier	current_node		97524	0					
ANR	100006	ExpressionStatement	is_early_node_valid = false	749:35:40970:40997	97524	46	True				
ANR	100007	AssignmentExpression	is_early_node_valid = false		97524	0		=			
ANR	100008	Identifier	is_early_node_valid		97524	0					
ANR	100009	Identifier	false		97524	1					
ANR	100010	ExpressionStatement	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""submission_name"" , NULL , NULL )"	751:33:41066:41155	97524	47	True				
ANR	100011	AssignmentExpression	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""submission_name"" , NULL , NULL )"		97524	0		=			
ANR	100012	Identifier	element_qname		97524	0					
ANR	100013	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""submission_name"" , NULL , NULL )"		97524	1					
ANR	100014	Callee	axutil_qname_create		97524	0					
ANR	100015	Identifier	axutil_qname_create		97524	0					
ANR	100016	ArgumentList	Environment :: getEnv ( )		97524	1					
ANR	100017	Argument	Environment :: getEnv ( )		97524	0					
ANR	100018	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100019	Callee	Environment :: getEnv		97524	0					
ANR	100020	Identifier	Environment :: getEnv		97524	0					
ANR	100021	ArgumentList			97524	1					
ANR	100022	Argument	"""submission_name"""		97524	1					
ANR	100023	PrimaryExpression	"""submission_name"""		97524	0					
ANR	100024	Argument	NULL		97524	2					
ANR	100025	Identifier	NULL		97524	0					
ANR	100026	Argument	NULL		97524	3					
ANR	100027	Identifier	NULL		97524	0					
ANR	100028	IfStatement	"if ( ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""submission_name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) ) )"		97524	48					
ANR	100029	Condition	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""submission_name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"	755:32:41257:41468	97524	0	True				
ANR	100030	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""submission_name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		97524	0		&&			
ANR	100031	Identifier	current_node		97524	0					
ANR	100032	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""submission_name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		97524	1		&&			
ANR	100033	Identifier	current_element		97524	0					
ANR	100034	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""submission_name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1		||			
ANR	100035	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		97524	0					
ANR	100036	Callee	axutil_qname_equals		97524	0					
ANR	100037	Identifier	axutil_qname_equals		97524	0					
ANR	100038	ArgumentList	element_qname		97524	1					
ANR	100039	Argument	element_qname		97524	0					
ANR	100040	Identifier	element_qname		97524	0					
ANR	100041	Argument	Environment :: getEnv ( )		97524	1					
ANR	100042	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100043	Callee	Environment :: getEnv		97524	0					
ANR	100044	Identifier	Environment :: getEnv		97524	0					
ANR	100045	ArgumentList			97524	1					
ANR	100046	Argument	mqname		97524	2					
ANR	100047	Identifier	mqname		97524	0					
ANR	100048	UnaryOperationExpression	"! axutil_strcmp ( ""submission_name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1					
ANR	100049	UnaryOperator	!		97524	0					
ANR	100050	CallExpression	"axutil_strcmp ( ""submission_name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1					
ANR	100051	Callee	axutil_strcmp		97524	0					
ANR	100052	Identifier	axutil_strcmp		97524	0					
ANR	100053	ArgumentList	"""submission_name"""		97524	1					
ANR	100054	Argument	"""submission_name"""		97524	0					
ANR	100055	PrimaryExpression	"""submission_name"""		97524	0					
ANR	100056	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		97524	1					
ANR	100057	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		97524	0					
ANR	100058	Callee	axiom_element_get_localname		97524	0					
ANR	100059	Identifier	axiom_element_get_localname		97524	0					
ANR	100060	ArgumentList	current_element		97524	1					
ANR	100061	Argument	current_element		97524	0					
ANR	100062	Identifier	current_element		97524	0					
ANR	100063	Argument	Environment :: getEnv ( )		97524	1					
ANR	100064	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100065	Callee	Environment :: getEnv		97524	0					
ANR	100066	Identifier	Environment :: getEnv		97524	0					
ANR	100067	ArgumentList			97524	1					
ANR	100068	CompoundStatement		617:27:37272:37272	97524	1					
ANR	100069	IfStatement	"if ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""submission_name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"		97524	0					
ANR	100070	Condition	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""submission_name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"	757:34:41534:41743	97524	0	True				
ANR	100071	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""submission_name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		97524	0		&&			
ANR	100072	Identifier	current_node		97524	0					
ANR	100073	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""submission_name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		97524	1		&&			
ANR	100074	Identifier	current_element		97524	0					
ANR	100075	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""submission_name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1		||			
ANR	100076	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		97524	0					
ANR	100077	Callee	axutil_qname_equals		97524	0					
ANR	100078	Identifier	axutil_qname_equals		97524	0					
ANR	100079	ArgumentList	element_qname		97524	1					
ANR	100080	Argument	element_qname		97524	0					
ANR	100081	Identifier	element_qname		97524	0					
ANR	100082	Argument	Environment :: getEnv ( )		97524	1					
ANR	100083	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100084	Callee	Environment :: getEnv		97524	0					
ANR	100085	Identifier	Environment :: getEnv		97524	0					
ANR	100086	ArgumentList			97524	1					
ANR	100087	Argument	mqname		97524	2					
ANR	100088	Identifier	mqname		97524	0					
ANR	100089	UnaryOperationExpression	"! axutil_strcmp ( ""submission_name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1					
ANR	100090	UnaryOperator	!		97524	0					
ANR	100091	CallExpression	"axutil_strcmp ( ""submission_name"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1					
ANR	100092	Callee	axutil_strcmp		97524	0					
ANR	100093	Identifier	axutil_strcmp		97524	0					
ANR	100094	ArgumentList	"""submission_name"""		97524	1					
ANR	100095	Argument	"""submission_name"""		97524	0					
ANR	100096	PrimaryExpression	"""submission_name"""		97524	0					
ANR	100097	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		97524	1					
ANR	100098	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		97524	0					
ANR	100099	Callee	axiom_element_get_localname		97524	0					
ANR	100100	Identifier	axiom_element_get_localname		97524	0					
ANR	100101	ArgumentList	current_element		97524	1					
ANR	100102	Argument	current_element		97524	0					
ANR	100103	Identifier	current_element		97524	0					
ANR	100104	Argument	Environment :: getEnv ( )		97524	1					
ANR	100105	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100106	Callee	Environment :: getEnv		97524	0					
ANR	100107	Identifier	Environment :: getEnv		97524	0					
ANR	100108	ArgumentList			97524	1					
ANR	100109	CompoundStatement		619:30:37550:37550	97524	1					
ANR	100110	ExpressionStatement	is_early_node_valid = true	759:32:41810:41836	97524	0	True				
ANR	100111	AssignmentExpression	is_early_node_valid = true		97524	0		=			
ANR	100112	Identifier	is_early_node_valid		97524	0					
ANR	100113	Identifier	true		97524	1					
ANR	100114	ExpressionStatement	"text_value = axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"	763:38:41973:42062	97524	1	True				
ANR	100115	AssignmentExpression	"text_value = axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"		97524	0		=			
ANR	100116	Identifier	text_value		97524	0					
ANR	100117	CallExpression	"axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"		97524	1					
ANR	100118	Callee	axiom_element_get_text		97524	0					
ANR	100119	Identifier	axiom_element_get_text		97524	0					
ANR	100120	ArgumentList	current_element		97524	1					
ANR	100121	Argument	current_element		97524	0					
ANR	100122	Identifier	current_element		97524	0					
ANR	100123	Argument	Environment :: getEnv ( )		97524	1					
ANR	100124	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100125	Callee	Environment :: getEnv		97524	0					
ANR	100126	Identifier	Environment :: getEnv		97524	0					
ANR	100127	ArgumentList			97524	1					
ANR	100128	Argument	current_node		97524	2					
ANR	100129	Identifier	current_node		97524	0					
ANR	100130	IfStatement	if ( text_value != NULL )		97524	2					
ANR	100131	Condition	text_value != NULL	764:41:42105:42122	97524	0	True				
ANR	100132	EqualityExpression	text_value != NULL		97524	0		!=			
ANR	100133	Identifier	text_value		97524	0					
ANR	100134	Identifier	NULL		97524	1					
ANR	100135	CompoundStatement		626:38:37937:37937	97524	1					
ANR	100136	ExpressionStatement	status = setSubmission_name ( text_value )	766:44:42209:42248	97524	0	True				
ANR	100137	AssignmentExpression	status = setSubmission_name ( text_value )		97524	0		=			
ANR	100138	Identifier	status		97524	0					
ANR	100139	CallExpression	setSubmission_name ( text_value )		97524	1					
ANR	100140	Callee	setSubmission_name		97524	0					
ANR	100141	Identifier	setSubmission_name		97524	0					
ANR	100142	ArgumentList	text_value		97524	1					
ANR	100143	Argument	text_value		97524	0					
ANR	100144	Identifier	text_value		97524	0					
ANR	100145	ElseStatement	else		97524	0					
ANR	100146	CompoundStatement		643:44:39132:39168	97524	0					
ANR	100147	IdentifierDeclStatement	axiom_attribute_t * the_attri = NULL ;	780:44:43199:43234	97524	0	True				
ANR	100148	IdentifierDecl	* the_attri = NULL		97524	0					
ANR	100149	IdentifierDeclType	axiom_attribute_t *		97524	0					
ANR	100150	Identifier	the_attri		97524	1					
ANR	100151	AssignmentExpression	* the_attri = NULL		97524	2		=			
ANR	100152	Identifier	NULL		97524	0					
ANR	100153	Identifier	NULL		97524	1					
ANR	100154	IdentifierDeclStatement	axis2_char_t * attrib_text = NULL ;	781:44:43280:43312	97524	1	True				
ANR	100155	IdentifierDecl	* attrib_text = NULL		97524	0					
ANR	100156	IdentifierDeclType	axis2_char_t *		97524	0					
ANR	100157	Identifier	attrib_text		97524	1					
ANR	100158	AssignmentExpression	* attrib_text = NULL		97524	2		=			
ANR	100159	Identifier	NULL		97524	0					
ANR	100160	Identifier	NULL		97524	1					
ANR	100161	IdentifierDeclStatement	axutil_hash_t * attribute_hash = NULL ;	782:44:43358:43394	97524	2	True				
ANR	100162	IdentifierDecl	* attribute_hash = NULL		97524	0					
ANR	100163	IdentifierDeclType	axutil_hash_t *		97524	0					
ANR	100164	Identifier	attribute_hash		97524	1					
ANR	100165	AssignmentExpression	* attribute_hash = NULL		97524	2		=			
ANR	100166	Identifier	NULL		97524	0					
ANR	100167	Identifier	NULL		97524	1					
ANR	100168	ExpressionStatement	"attribute_hash = axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"	784:44:43441:43530	97524	3	True				
ANR	100169	AssignmentExpression	"attribute_hash = axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"		97524	0		=			
ANR	100170	Identifier	attribute_hash		97524	0					
ANR	100171	CallExpression	"axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"		97524	1					
ANR	100172	Callee	axiom_element_get_all_attributes		97524	0					
ANR	100173	Identifier	axiom_element_get_all_attributes		97524	0					
ANR	100174	ArgumentList	current_element		97524	1					
ANR	100175	Argument	current_element		97524	0					
ANR	100176	Identifier	current_element		97524	0					
ANR	100177	Argument	Environment :: getEnv ( )		97524	1					
ANR	100178	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100179	Callee	Environment :: getEnv		97524	0					
ANR	100180	Identifier	Environment :: getEnv		97524	0					
ANR	100181	ArgumentList			97524	1					
ANR	100182	ExpressionStatement	attrib_text = NULL	786:44:43577:43595	97524	4	True				
ANR	100183	AssignmentExpression	attrib_text = NULL		97524	0		=			
ANR	100184	Identifier	attrib_text		97524	0					
ANR	100185	Identifier	NULL		97524	1					
ANR	100186	IfStatement	if ( attribute_hash )		97524	5					
ANR	100187	Condition	attribute_hash	787:47:43644:43657	97524	0	True				
ANR	100188	Identifier	attribute_hash		97524	0					
ANR	100189	CompoundStatement		652:49:39663:39678	97524	1					
ANR	100190	IdentifierDeclStatement	axutil_hash_index_t * hi ;	789:49:43755:43778	97524	0	True				
ANR	100191	IdentifierDecl	* hi		97524	0					
ANR	100192	IdentifierDeclType	axutil_hash_index_t *		97524	0					
ANR	100193	Identifier	hi		97524	1					
ANR	100194	IdentifierDeclStatement	void * val ;	790:49:43829:43838	97524	1	True				
ANR	100195	IdentifierDecl	* val		97524	0					
ANR	100196	IdentifierDeclType	void *		97524	0					
ANR	100197	Identifier	val		97524	1					
ANR	100198	IdentifierDeclStatement	const void * key ;	791:49:43889:43904	97524	2	True				
ANR	100199	IdentifierDecl	* key		97524	0					
ANR	100200	IdentifierDeclType	const void *		97524	0					
ANR	100201	Identifier	key		97524	1					
ANR	100202	ForStatement	"for ( hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) ) ; hi ; hi = axutil_hash_next ( Environment :: getEnv ( ) , hi ) )"		97524	3					
ANR	100203	ForInit	"hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) ) ;"	793:54:44001:44062	97524	0	True				
ANR	100204	AssignmentExpression	"hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) )"		97524	0		=			
ANR	100205	Identifier	hi		97524	0					
ANR	100206	CallExpression	"axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) )"		97524	1					
ANR	100207	Callee	axutil_hash_first		97524	0					
ANR	100208	Identifier	axutil_hash_first		97524	0					
ANR	100209	ArgumentList	attribute_hash		97524	1					
ANR	100210	Argument	attribute_hash		97524	0					
ANR	100211	Identifier	attribute_hash		97524	0					
ANR	100212	Argument	Environment :: getEnv ( )		97524	1					
ANR	100213	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100214	Callee	Environment :: getEnv		97524	0					
ANR	100215	Identifier	Environment :: getEnv		97524	0					
ANR	100216	ArgumentList			97524	1					
ANR	100217	Condition	hi	793:117:44064:44065	97524	1	True				
ANR	100218	Identifier	hi		97524	0					
ANR	100219	AssignmentExpression	"hi = axutil_hash_next ( Environment :: getEnv ( ) , hi )"	793:121:44068:44115	97524	2	True	=			
ANR	100220	Identifier	hi		97524	0					
ANR	100221	CallExpression	"axutil_hash_next ( Environment :: getEnv ( ) , hi )"		97524	1					
ANR	100222	Callee	axutil_hash_next		97524	0					
ANR	100223	Identifier	axutil_hash_next		97524	0					
ANR	100224	ArgumentList	Environment :: getEnv ( )		97524	1					
ANR	100225	Argument	Environment :: getEnv ( )		97524	0					
ANR	100226	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100227	Callee	Environment :: getEnv		97524	0					
ANR	100228	Identifier	Environment :: getEnv		97524	0					
ANR	100229	ArgumentList			97524	1					
ANR	100230	Argument	hi		97524	1					
ANR	100231	Identifier	hi		97524	0					
ANR	100232	CompoundStatement		655:49:39941:39941	97524	3					
ANR	100233	ExpressionStatement	"axutil_hash_this ( hi , & key , NULL , & val )"	795:53:44222:44260	97524	0	True				
ANR	100234	CallExpression	"axutil_hash_this ( hi , & key , NULL , & val )"		97524	0					
ANR	100235	Callee	axutil_hash_this		97524	0					
ANR	100236	Identifier	axutil_hash_this		97524	0					
ANR	100237	ArgumentList	hi		97524	1					
ANR	100238	Argument	hi		97524	0					
ANR	100239	Identifier	hi		97524	0					
ANR	100240	Argument	& key		97524	1					
ANR	100241	UnaryOperationExpression	& key		97524	0					
ANR	100242	UnaryOperator	&		97524	0					
ANR	100243	Identifier	key		97524	1					
ANR	100244	Argument	NULL		97524	2					
ANR	100245	Identifier	NULL		97524	0					
ANR	100246	Argument	& val		97524	3					
ANR	100247	UnaryOperationExpression	& val		97524	0					
ANR	100248	UnaryOperator	&		97524	0					
ANR	100249	Identifier	val		97524	1					
ANR	100250	IfStatement	"if ( strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" ) )"		97524	1					
ANR	100251	Condition	"strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" )"	797:56:44372:44446	97524	0	True				
ANR	100252	CallExpression	"strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" )"		97524	0					
ANR	100253	Callee	strstr		97524	0					
ANR	100254	Identifier	strstr		97524	0					
ANR	100255	ArgumentList	( axis2_char_t * ) key		97524	1					
ANR	100256	Argument	( axis2_char_t * ) key		97524	0					
ANR	100257	CastExpression	( axis2_char_t * ) key		97524	0					
ANR	100258	CastTarget	axis2_char_t *		97524	0					
ANR	100259	Identifier	key		97524	1					
ANR	100260	Argument	"""nil|http://www.w3.org/2001/XMLSchema-instance"""		97524	1					
ANR	100261	PrimaryExpression	"""nil|http://www.w3.org/2001/XMLSchema-instance"""		97524	0					
ANR	100262	CompoundStatement		659:53:40276:40276	97524	1					
ANR	100263	ExpressionStatement	the_attri = ( axiom_attribute_t * ) val	799:57:44561:44596	97524	0	True				
ANR	100264	AssignmentExpression	the_attri = ( axiom_attribute_t * ) val		97524	0		=			
ANR	100265	Identifier	the_attri		97524	0					
ANR	100266	CastExpression	( axiom_attribute_t * ) val		97524	1					
ANR	100267	CastTarget	axiom_attribute_t *		97524	0					
ANR	100268	Identifier	val		97524	1					
ANR	100269	BreakStatement	break ;	800:57:44655:44660	97524	1	True				
ANR	100270	IfStatement	if ( the_attri )		97524	6					
ANR	100271	Condition	the_attri	805:47:44862:44870	97524	0	True				
ANR	100272	Identifier	the_attri		97524	0					
ANR	100273	CompoundStatement		667:44:40691:40691	97524	1					
ANR	100274	ExpressionStatement	"attrib_text = axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"	807:48:44967:45040	97524	0	True				
ANR	100275	AssignmentExpression	"attrib_text = axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"		97524	0		=			
ANR	100276	Identifier	attrib_text		97524	0					
ANR	100277	CallExpression	"axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"		97524	1					
ANR	100278	Callee	axiom_attribute_get_value		97524	0					
ANR	100279	Identifier	axiom_attribute_get_value		97524	0					
ANR	100280	ArgumentList	the_attri		97524	1					
ANR	100281	Argument	the_attri		97524	0					
ANR	100282	Identifier	the_attri		97524	0					
ANR	100283	Argument	Environment :: getEnv ( )		97524	1					
ANR	100284	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100285	Callee	Environment :: getEnv		97524	0					
ANR	100286	Identifier	Environment :: getEnv		97524	0					
ANR	100287	ArgumentList			97524	1					
ANR	100288	ElseStatement	else		97524	0					
ANR	100289	CompoundStatement		671:44:40955:40955	97524	0					
ANR	100290	ExpressionStatement	"attrib_text = axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"	812:48:45420:45522	97524	0	True				
ANR	100291	AssignmentExpression	"attrib_text = axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"		97524	0		=			
ANR	100292	Identifier	attrib_text		97524	0					
ANR	100293	CallExpression	"axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"		97524	1					
ANR	100294	Callee	axiom_element_get_attribute_value_by_name		97524	0					
ANR	100295	Identifier	axiom_element_get_attribute_value_by_name		97524	0					
ANR	100296	ArgumentList	current_element		97524	1					
ANR	100297	Argument	current_element		97524	0					
ANR	100298	Identifier	current_element		97524	0					
ANR	100299	Argument	Environment :: getEnv ( )		97524	1					
ANR	100300	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100301	Callee	Environment :: getEnv		97524	0					
ANR	100302	Identifier	Environment :: getEnv		97524	0					
ANR	100303	ArgumentList			97524	1					
ANR	100304	Argument	"""nil"""		97524	2					
ANR	100305	PrimaryExpression	"""nil"""		97524	0					
ANR	100306	IfStatement	"if ( attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" ) )"		97524	7					
ANR	100307	Condition	"attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" )"	815:47:45618:45668	97524	0	True				
ANR	100308	AndExpression	"attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" )"		97524	0		&&			
ANR	100309	Identifier	attrib_text		97524	0					
ANR	100310	EqualityExpression	"0 == axutil_strcmp ( attrib_text , ""1"" )"		97524	1		==			
ANR	100311	PrimaryExpression	0		97524	0					
ANR	100312	CallExpression	"axutil_strcmp ( attrib_text , ""1"" )"		97524	1					
ANR	100313	Callee	axutil_strcmp		97524	0					
ANR	100314	Identifier	axutil_strcmp		97524	0					
ANR	100315	ArgumentList	attrib_text		97524	1					
ANR	100316	Argument	attrib_text		97524	0					
ANR	100317	Identifier	attrib_text		97524	0					
ANR	100318	Argument	"""1"""		97524	1					
ANR	100319	PrimaryExpression	"""1"""		97524	0					
ANR	100320	CompoundStatement		677:44:41489:41489	97524	1					
ANR	100321	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""NULL value is set to a non nillable element submission_name"" )"	817:48:45765:45885	97524	0	True				
ANR	100322	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""NULL value is set to a non nillable element submission_name"" )"		97524	0					
ANR	100323	Callee	WSF_LOG_ERROR_MSG		97524	0					
ANR	100324	Identifier	WSF_LOG_ERROR_MSG		97524	0					
ANR	100325	ArgumentList	Environment :: getEnv ( ) -> log		97524	1					
ANR	100326	Argument	Environment :: getEnv ( ) -> log		97524	0					
ANR	100327	PtrMemberAccess	Environment :: getEnv ( ) -> log		97524	0					
ANR	100328	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100329	Callee	Environment :: getEnv		97524	0					
ANR	100330	Identifier	Environment :: getEnv		97524	0					
ANR	100331	ArgumentList			97524	1					
ANR	100332	Identifier	log		97524	1					
ANR	100333	Argument	WSF_LOG_SI		97524	1					
ANR	100334	Identifier	WSF_LOG_SI		97524	0					
ANR	100335	Argument	"""NULL value is set to a non nillable element submission_name"""		97524	2					
ANR	100336	PrimaryExpression	"""NULL value is set to a non nillable element submission_name"""		97524	0					
ANR	100337	ExpressionStatement	status = AXIS2_FAILURE	818:48:45935:45957	97524	1	True				
ANR	100338	AssignmentExpression	status = AXIS2_FAILURE		97524	0		=			
ANR	100339	Identifier	status		97524	0					
ANR	100340	Identifier	AXIS2_FAILURE		97524	1					
ANR	100341	ElseStatement	else		97524	0					
ANR	100342	CompoundStatement		682:44:41872:41872	97524	0					
ANR	100343	ExpressionStatement	"status = setSubmission_name ( """" )"	823:48:46245:46276	97524	0	True				
ANR	100344	AssignmentExpression	"status = setSubmission_name ( """" )"		97524	0		=			
ANR	100345	Identifier	status		97524	0					
ANR	100346	CallExpression	"setSubmission_name ( """" )"		97524	1					
ANR	100347	Callee	setSubmission_name		97524	0					
ANR	100348	Identifier	setSubmission_name		97524	0					
ANR	100349	ArgumentList	""""""		97524	1					
ANR	100350	Argument	""""""		97524	0					
ANR	100351	PrimaryExpression	""""""		97524	0					
ANR	100352	IfStatement	if ( AXIS2_FAILURE == status )		97524	3					
ANR	100353	Condition	AXIS2_FAILURE == status	827:36:46439:46462	97524	0	True				
ANR	100354	EqualityExpression	AXIS2_FAILURE == status		97524	0		==			
ANR	100355	Identifier	AXIS2_FAILURE		97524	0					
ANR	100356	Identifier	status		97524	1					
ANR	100357	CompoundStatement		689:33:42272:42272	97524	1					
ANR	100358	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for submission_name "" )"	829:37:46537:46645	97524	0	True				
ANR	100359	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for submission_name "" )"		97524	0					
ANR	100360	Callee	WSF_LOG_ERROR_MSG		97524	0					
ANR	100361	Identifier	WSF_LOG_ERROR_MSG		97524	0					
ANR	100362	ArgumentList	Environment :: getEnv ( ) -> log		97524	1					
ANR	100363	Argument	Environment :: getEnv ( ) -> log		97524	0					
ANR	100364	PtrMemberAccess	Environment :: getEnv ( ) -> log		97524	0					
ANR	100365	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100366	Callee	Environment :: getEnv		97524	0					
ANR	100367	Identifier	Environment :: getEnv		97524	0					
ANR	100368	ArgumentList			97524	1					
ANR	100369	Identifier	log		97524	1					
ANR	100370	Argument	WSF_LOG_SI		97524	1					
ANR	100371	Identifier	WSF_LOG_SI		97524	0					
ANR	100372	Argument	"""failed in setting the value for submission_name """		97524	2					
ANR	100373	PrimaryExpression	"""failed in setting the value for submission_name """		97524	0					
ANR	100374	IfStatement	if ( element_qname )		97524	1					
ANR	100375	Condition	element_qname	830:40:46687:46699	97524	0	True				
ANR	100376	Identifier	element_qname		97524	0					
ANR	100377	CompoundStatement		692:37:42513:42513	97524	1					
ANR	100378	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	832:41:46782:46837	97524	0	True				
ANR	100379	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		97524	0					
ANR	100380	Callee	axutil_qname_free		97524	0					
ANR	100381	Identifier	axutil_qname_free		97524	0					
ANR	100382	ArgumentList	element_qname		97524	1					
ANR	100383	Argument	element_qname		97524	0					
ANR	100384	Identifier	element_qname		97524	0					
ANR	100385	Argument	Environment :: getEnv ( )		97524	1					
ANR	100386	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100387	Callee	Environment :: getEnv		97524	0					
ANR	100388	Identifier	Environment :: getEnv		97524	0					
ANR	100389	ArgumentList			97524	1					
ANR	100390	ReturnStatement	return AXIS2_FAILURE ;	834:37:46915:46935	97524	2	True				
ANR	100391	Identifier	AXIS2_FAILURE		97524	0					
ANR	100392	IfStatement	if ( element_qname )		97524	49					
ANR	100393	Condition	element_qname	838:21:47053:47065	97524	0	True				
ANR	100394	Identifier	element_qname		97524	0					
ANR	100395	CompoundStatement		700:18:42860:42860	97524	1					
ANR	100396	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	840:21:47109:47164	97524	0	True				
ANR	100397	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		97524	0					
ANR	100398	Callee	axutil_qname_free		97524	0					
ANR	100399	Identifier	axutil_qname_free		97524	0					
ANR	100400	ArgumentList	element_qname		97524	1					
ANR	100401	Argument	element_qname		97524	0					
ANR	100402	Identifier	element_qname		97524	0					
ANR	100403	Argument	Environment :: getEnv ( )		97524	1					
ANR	100404	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100405	Callee	Environment :: getEnv		97524	0					
ANR	100406	Identifier	Environment :: getEnv		97524	0					
ANR	100407	ArgumentList			97524	1					
ANR	100408	ExpressionStatement	element_qname = NULL	841:21:47187:47207	97524	1	True				
ANR	100409	AssignmentExpression	element_qname = NULL		97524	0		=			
ANR	100410	Identifier	element_qname		97524	0					
ANR	100411	Identifier	NULL		97524	1					
ANR	100412	CompoundStatement		709:23:43168:43278	97524	50					
ANR	100413	IdentifierDeclStatement	std :: vector < AviaryCommon :: ResourceConstraint * > * arr_list = new std :: vector < AviaryCommon :: ResourceConstraint * > ( ) ;	848:23:47394:47504	97524	0	True				
ANR	100414	IdentifierDecl	* arr_list = new std :: vector < AviaryCommon :: ResourceConstraint * > ( )		97524	0					
ANR	100415	IdentifierDeclType	std :: vector < AviaryCommon :: ResourceConstraint * > *		97524	0					
ANR	100416	Identifier	arr_list		97524	1					
ANR	100417	AssignmentExpression	* arr_list = new std :: vector < AviaryCommon :: ResourceConstraint * > ( )		97524	2		=			
ANR	100418	Identifier	arr_list		97524	0					
ANR	100419	UnaryExpression	new std :: vector < AviaryCommon :: ResourceConstraint * > ( )		97524	1					
ANR	100420	ExpressionStatement	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""requirements"" , NULL , NULL )"	858:36:47754:47840	97524	1	True				
ANR	100421	AssignmentExpression	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""requirements"" , NULL , NULL )"		97524	0		=			
ANR	100422	Identifier	element_qname		97524	0					
ANR	100423	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""requirements"" , NULL , NULL )"		97524	1					
ANR	100424	Callee	axutil_qname_create		97524	0					
ANR	100425	Identifier	axutil_qname_create		97524	0					
ANR	100426	ArgumentList	Environment :: getEnv ( )		97524	1					
ANR	100427	Argument	Environment :: getEnv ( )		97524	0					
ANR	100428	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100429	Callee	Environment :: getEnv		97524	0					
ANR	100430	Identifier	Environment :: getEnv		97524	0					
ANR	100431	ArgumentList			97524	1					
ANR	100432	Argument	"""requirements"""		97524	1					
ANR	100433	PrimaryExpression	"""requirements"""		97524	0					
ANR	100434	Argument	NULL		97524	2					
ANR	100435	Identifier	NULL		97524	0					
ANR	100436	Argument	NULL		97524	3					
ANR	100437	Identifier	NULL		97524	0					
ANR	100438	ForStatement	"for ( i = 0 , sequence_broken = 0 , current_node = ( is_early_node_valid ? axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) ) : current_node ) ; ! sequence_broken && current_node != NULL ; )"		97524	2					
ANR	100439	ForInit	"i = 0 , sequence_broken = 0 , current_node = ( is_early_node_valid ? axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) ) : current_node ) ;"	861:36:47945:48087	97524	0	True				
ANR	100440	Expression	"i = 0 , sequence_broken = 0 , current_node = ( is_early_node_valid ? axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) ) : current_node )"		97524	0					
ANR	100441	AssignmentExpression	i = 0		97524	0		=			
ANR	100442	Identifier	i		97524	0					
ANR	100443	PrimaryExpression	0		97524	1					
ANR	100444	Expression	"sequence_broken = 0 , current_node = ( is_early_node_valid ? axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) ) : current_node )"		97524	1					
ANR	100445	AssignmentExpression	sequence_broken = 0		97524	0		=			
ANR	100446	Identifier	sequence_broken		97524	0					
ANR	100447	PrimaryExpression	0		97524	1					
ANR	100448	AssignmentExpression	"current_node = ( is_early_node_valid ? axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) ) : current_node )"		97524	1		=			
ANR	100449	Identifier	current_node		97524	0					
ANR	100450	ConditionalExpression	"is_early_node_valid ? axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) ) : current_node"		97524	1					
ANR	100451	Condition	is_early_node_valid		97524	0					
ANR	100452	Identifier	is_early_node_valid		97524	0					
ANR	100453	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	100454	Callee	axiom_node_get_next_sibling		97524	0					
ANR	100455	Identifier	axiom_node_get_next_sibling		97524	0					
ANR	100456	ArgumentList	current_node		97524	1					
ANR	100457	Argument	current_node		97524	0					
ANR	100458	Identifier	current_node		97524	0					
ANR	100459	Argument	Environment :: getEnv ( )		97524	1					
ANR	100460	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100461	Callee	Environment :: getEnv		97524	0					
ANR	100462	Identifier	Environment :: getEnv		97524	0					
ANR	100463	ArgumentList			97524	1					
ANR	100464	Identifier	current_node		97524	2					
ANR	100465	Condition	! sequence_broken && current_node != NULL	861:180:48089:48128	97524	1	True				
ANR	100466	AndExpression	! sequence_broken && current_node != NULL		97524	0		&&			
ANR	100467	UnaryOperationExpression	! sequence_broken		97524	0					
ANR	100468	UnaryOperator	!		97524	0					
ANR	100469	Identifier	sequence_broken		97524	1					
ANR	100470	EqualityExpression	current_node != NULL		97524	1		!=			
ANR	100471	Identifier	current_node		97524	0					
ANR	100472	Identifier	NULL		97524	1					
ANR	100473	CompoundStatement		724:31:43983:43983	97524	2					
ANR	100474	IfStatement	"if ( axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		97524	0					
ANR	100475	Condition	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	864:37:48248:48325	97524	0	True				
ANR	100476	EqualityExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		97524	0		!=			
ANR	100477	CallExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) )"		97524	0					
ANR	100478	Callee	axiom_node_get_node_type		97524	0					
ANR	100479	Identifier	axiom_node_get_node_type		97524	0					
ANR	100480	ArgumentList	current_node		97524	1					
ANR	100481	Argument	current_node		97524	0					
ANR	100482	Identifier	current_node		97524	0					
ANR	100483	Argument	Environment :: getEnv ( )		97524	1					
ANR	100484	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100485	Callee	Environment :: getEnv		97524	0					
ANR	100486	Identifier	Environment :: getEnv		97524	0					
ANR	100487	ArgumentList			97524	1					
ANR	100488	Identifier	AXIOM_ELEMENT		97524	1					
ANR	100489	CompoundStatement		726:34:44136:44136	97524	1					
ANR	100490	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	866:37:48401:48479	97524	0	True				
ANR	100491	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	0		=			
ANR	100492	Identifier	current_node		97524	0					
ANR	100493	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	100494	Callee	axiom_node_get_next_sibling		97524	0					
ANR	100495	Identifier	axiom_node_get_next_sibling		97524	0					
ANR	100496	ArgumentList	current_node		97524	1					
ANR	100497	Argument	current_node		97524	0					
ANR	100498	Identifier	current_node		97524	0					
ANR	100499	Argument	Environment :: getEnv ( )		97524	1					
ANR	100500	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100501	Callee	Environment :: getEnv		97524	0					
ANR	100502	Identifier	Environment :: getEnv		97524	0					
ANR	100503	ArgumentList			97524	1					
ANR	100504	ExpressionStatement	is_early_node_valid = false	867:37:48518:48545	97524	1	True				
ANR	100505	AssignmentExpression	is_early_node_valid = false		97524	0		=			
ANR	100506	Identifier	is_early_node_valid		97524	0					
ANR	100507	Identifier	false		97524	1					
ANR	100508	ContinueStatement	continue ;	868:37:48584:48592	97524	2	True				
ANR	100509	ExpressionStatement	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	871:34:48699:48800	97524	1	True				
ANR	100510	AssignmentExpression	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		97524	0		=			
ANR	100511	Identifier	current_element		97524	0					
ANR	100512	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	100513	CastTarget	axiom_element_t *		97524	0					
ANR	100514	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	100515	Callee	axiom_node_get_data_element		97524	0					
ANR	100516	Identifier	axiom_node_get_data_element		97524	0					
ANR	100517	ArgumentList	current_node		97524	1					
ANR	100518	Argument	current_node		97524	0					
ANR	100519	Identifier	current_node		97524	0					
ANR	100520	Argument	Environment :: getEnv ( )		97524	1					
ANR	100521	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100522	Callee	Environment :: getEnv		97524	0					
ANR	100523	Identifier	Environment :: getEnv		97524	0					
ANR	100524	ArgumentList			97524	1					
ANR	100525	ExpressionStatement	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"	872:34:48836:48922	97524	2	True				
ANR	100526	AssignmentExpression	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		97524	0		=			
ANR	100527	Identifier	mqname		97524	0					
ANR	100528	CallExpression	"axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		97524	1					
ANR	100529	Callee	axiom_element_get_qname		97524	0					
ANR	100530	Identifier	axiom_element_get_qname		97524	0					
ANR	100531	ArgumentList	current_element		97524	1					
ANR	100532	Argument	current_element		97524	0					
ANR	100533	Identifier	current_element		97524	0					
ANR	100534	Argument	Environment :: getEnv ( )		97524	1					
ANR	100535	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100536	Callee	Environment :: getEnv		97524	0					
ANR	100537	Identifier	Environment :: getEnv		97524	0					
ANR	100538	ArgumentList			97524	1					
ANR	100539	Argument	current_node		97524	2					
ANR	100540	Identifier	current_node		97524	0					
ANR	100541	IfStatement	"if ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""requirements"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		97524	3					
ANR	100542	Condition	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""requirements"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"	874:38:48963:49130	97524	0	True				
ANR	100543	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""requirements"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	0		||			
ANR	100544	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		97524	0					
ANR	100545	Callee	axutil_qname_equals		97524	0					
ANR	100546	Identifier	axutil_qname_equals		97524	0					
ANR	100547	ArgumentList	element_qname		97524	1					
ANR	100548	Argument	element_qname		97524	0					
ANR	100549	Identifier	element_qname		97524	0					
ANR	100550	Argument	Environment :: getEnv ( )		97524	1					
ANR	100551	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100552	Callee	Environment :: getEnv		97524	0					
ANR	100553	Identifier	Environment :: getEnv		97524	0					
ANR	100554	ArgumentList			97524	1					
ANR	100555	Argument	mqname		97524	2					
ANR	100556	Identifier	mqname		97524	0					
ANR	100557	UnaryOperationExpression	"! axutil_strcmp ( ""requirements"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1					
ANR	100558	UnaryOperator	!		97524	0					
ANR	100559	CallExpression	"axutil_strcmp ( ""requirements"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1					
ANR	100560	Callee	axutil_strcmp		97524	0					
ANR	100561	Identifier	axutil_strcmp		97524	0					
ANR	100562	ArgumentList	"""requirements"""		97524	1					
ANR	100563	Argument	"""requirements"""		97524	0					
ANR	100564	PrimaryExpression	"""requirements"""		97524	0					
ANR	100565	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		97524	1					
ANR	100566	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		97524	0					
ANR	100567	Callee	axiom_element_get_localname		97524	0					
ANR	100568	Identifier	axiom_element_get_localname		97524	0					
ANR	100569	ArgumentList	current_element		97524	1					
ANR	100570	Argument	current_element		97524	0					
ANR	100571	Identifier	current_element		97524	0					
ANR	100572	Argument	Environment :: getEnv ( )		97524	1					
ANR	100573	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100574	Callee	Environment :: getEnv		97524	0					
ANR	100575	Identifier	Environment :: getEnv		97524	0					
ANR	100576	ArgumentList			97524	1					
ANR	100577	CompoundStatement		740:37:45120:45202	97524	1					
ANR	100578	ExpressionStatement	is_early_node_valid = true	877:38:49242:49268	97524	0	True				
ANR	100579	AssignmentExpression	is_early_node_valid = true		97524	0		=			
ANR	100580	Identifier	is_early_node_valid		97524	0					
ANR	100581	Identifier	true		97524	1					
ANR	100582	IdentifierDeclStatement	AviaryCommon :: ResourceConstraint * element = new AviaryCommon :: ResourceConstraint ( ) ;	879:37:49346:49428	97524	1	True				
ANR	100583	IdentifierDecl	* element = new AviaryCommon :: ResourceConstraint ( )		97524	0					
ANR	100584	IdentifierDeclType	AviaryCommon :: ResourceConstraint *		97524	0					
ANR	100585	Identifier	element		97524	1					
ANR	100586	AssignmentExpression	* element = new AviaryCommon :: ResourceConstraint ( )		97524	2		=			
ANR	100587	Identifier	element		97524	0					
ANR	100588	UnaryExpression	new AviaryCommon :: ResourceConstraint ( )		97524	1					
ANR	100589	ExpressionStatement	"status = element -> deserialize ( & current_node , & is_early_node_valid , false )"	881:42:49515:49589	97524	2	True				
ANR	100590	AssignmentExpression	"status = element -> deserialize ( & current_node , & is_early_node_valid , false )"		97524	0		=			
ANR	100591	Identifier	status		97524	0					
ANR	100592	CallExpression	"element -> deserialize ( & current_node , & is_early_node_valid , false )"		97524	1					
ANR	100593	Callee	element -> deserialize		97524	0					
ANR	100594	PtrMemberAccess	element -> deserialize		97524	0					
ANR	100595	Identifier	element		97524	0					
ANR	100596	Identifier	deserialize		97524	1					
ANR	100597	ArgumentList	& current_node		97524	1					
ANR	100598	Argument	& current_node		97524	0					
ANR	100599	UnaryOperationExpression	& current_node		97524	0					
ANR	100600	UnaryOperator	&		97524	0					
ANR	100601	Identifier	current_node		97524	1					
ANR	100602	Argument	& is_early_node_valid		97524	1					
ANR	100603	UnaryOperationExpression	& is_early_node_valid		97524	0					
ANR	100604	UnaryOperator	&		97524	0					
ANR	100605	Identifier	is_early_node_valid		97524	1					
ANR	100606	Argument	false		97524	2					
ANR	100607	Identifier	false		97524	0					
ANR	100608	IfStatement	if ( AXIS2_FAILURE == status )		97524	3					
ANR	100609	Condition	AXIS2_FAILURE == status	883:45:49679:49702	97524	0	True				
ANR	100610	EqualityExpression	AXIS2_FAILURE == status		97524	0		==			
ANR	100611	Identifier	AXIS2_FAILURE		97524	0					
ANR	100612	Identifier	status		97524	1					
ANR	100613	CompoundStatement		745:42:45521:45521	97524	1					
ANR	100614	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in building element requirements "" )"	885:7:49756:49856	97524	0	True				
ANR	100615	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in building element requirements "" )"		97524	0					
ANR	100616	Callee	WSF_LOG_ERROR_MSG		97524	0					
ANR	100617	Identifier	WSF_LOG_ERROR_MSG		97524	0					
ANR	100618	ArgumentList	Environment :: getEnv ( ) -> log		97524	1					
ANR	100619	Argument	Environment :: getEnv ( ) -> log		97524	0					
ANR	100620	PtrMemberAccess	Environment :: getEnv ( ) -> log		97524	0					
ANR	100621	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100622	Callee	Environment :: getEnv		97524	0					
ANR	100623	Identifier	Environment :: getEnv		97524	0					
ANR	100624	ArgumentList			97524	1					
ANR	100625	Identifier	log		97524	1					
ANR	100626	Argument	WSF_LOG_SI		97524	1					
ANR	100627	Identifier	WSF_LOG_SI		97524	0					
ANR	100628	Argument	"""failed in building element requirements """		97524	2					
ANR	100629	PrimaryExpression	"""failed in building element requirements """		97524	0					
ANR	100630	ElseStatement	else		97524	0					
ANR	100631	CompoundStatement		749:42:45765:45765	97524	0					
ANR	100632	ExpressionStatement	arr_list -> push_back ( element )	889:44:50037:50065	97524	0	True				
ANR	100633	CallExpression	arr_list -> push_back ( element )		97524	0					
ANR	100634	Callee	arr_list -> push_back		97524	0					
ANR	100635	PtrMemberAccess	arr_list -> push_back		97524	0					
ANR	100636	Identifier	arr_list		97524	0					
ANR	100637	Identifier	push_back		97524	1					
ANR	100638	ArgumentList	element		97524	1					
ANR	100639	Argument	element		97524	0					
ANR	100640	Identifier	element		97524	0					
ANR	100641	IfStatement	if ( AXIS2_FAILURE == status )		97524	4					
ANR	100642	Condition	AXIS2_FAILURE == status	893:40:50237:50260	97524	0	True				
ANR	100643	EqualityExpression	AXIS2_FAILURE == status		97524	0		==			
ANR	100644	Identifier	AXIS2_FAILURE		97524	0					
ANR	100645	Identifier	status		97524	1					
ANR	100646	CompoundStatement		755:37:46074:46074	97524	1					
ANR	100647	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for requirements "" )"	895:41:50343:50449	97524	0	True				
ANR	100648	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for requirements "" )"		97524	0					
ANR	100649	Callee	WSF_LOG_ERROR_MSG		97524	0					
ANR	100650	Identifier	WSF_LOG_ERROR_MSG		97524	0					
ANR	100651	ArgumentList	Environment :: getEnv ( ) -> log		97524	1					
ANR	100652	Argument	Environment :: getEnv ( ) -> log		97524	0					
ANR	100653	PtrMemberAccess	Environment :: getEnv ( ) -> log		97524	0					
ANR	100654	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100655	Callee	Environment :: getEnv		97524	0					
ANR	100656	Identifier	Environment :: getEnv		97524	0					
ANR	100657	ArgumentList			97524	1					
ANR	100658	Identifier	log		97524	1					
ANR	100659	Argument	WSF_LOG_SI		97524	1					
ANR	100660	Identifier	WSF_LOG_SI		97524	0					
ANR	100661	Argument	"""failed in setting the value for requirements """		97524	2					
ANR	100662	PrimaryExpression	"""failed in setting the value for requirements """		97524	0					
ANR	100663	IfStatement	if ( element_qname )		97524	1					
ANR	100664	Condition	element_qname	896:44:50495:50507	97524	0	True				
ANR	100665	Identifier	element_qname		97524	0					
ANR	100666	CompoundStatement		758:41:46325:46325	97524	1					
ANR	100667	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	898:44:50597:50652	97524	0	True				
ANR	100668	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		97524	0					
ANR	100669	Callee	axutil_qname_free		97524	0					
ANR	100670	Identifier	axutil_qname_free		97524	0					
ANR	100671	ArgumentList	element_qname		97524	1					
ANR	100672	Argument	element_qname		97524	0					
ANR	100673	Identifier	element_qname		97524	0					
ANR	100674	Argument	Environment :: getEnv ( )		97524	1					
ANR	100675	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100676	Callee	Environment :: getEnv		97524	0					
ANR	100677	Identifier	Environment :: getEnv		97524	0					
ANR	100678	ArgumentList			97524	1					
ANR	100679	IfStatement	if ( arr_list )		97524	2					
ANR	100680	Condition	arr_list	900:44:50741:50748	97524	0	True				
ANR	100681	Identifier	arr_list		97524	0					
ANR	100682	CompoundStatement		762:41:46566:46566	97524	1					
ANR	100683	Statement	delete	902:44:50838:50843	97524	0	True				
ANR	100684	ExpressionStatement	arr_list	902:51:50845:50853	97524	1	True				
ANR	100685	Identifier	arr_list		97524	0					
ANR	100686	ReturnStatement	return false ;	904:41:50939:50951	97524	3	True				
ANR	100687	Identifier	false		97524	0					
ANR	100688	ExpressionStatement	i ++	907:37:51030:51033	97524	5	True				
ANR	100689	PostIncDecOperationExpression	i ++		97524	0					
ANR	100690	Identifier	i		97524	0					
ANR	100691	IncDec	++		97524	1					
ANR	100692	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	908:36:51071:51150	97524	6	True				
ANR	100693	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	0		=			
ANR	100694	Identifier	current_node		97524	0					
ANR	100695	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	100696	Callee	axiom_node_get_next_sibling		97524	0					
ANR	100697	Identifier	axiom_node_get_next_sibling		97524	0					
ANR	100698	ArgumentList	current_node		97524	1					
ANR	100699	Argument	current_node		97524	0					
ANR	100700	Identifier	current_node		97524	0					
ANR	100701	Argument	Environment :: getEnv ( )		97524	1					
ANR	100702	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100703	Callee	Environment :: getEnv		97524	0					
ANR	100704	Identifier	Environment :: getEnv		97524	0					
ANR	100705	ArgumentList			97524	1					
ANR	100706	ElseStatement	else		97524	0					
ANR	100707	CompoundStatement		772:34:47035:47035	97524	0					
ANR	100708	ExpressionStatement	is_early_node_valid = false	912:38:51301:51328	97524	0	True				
ANR	100709	AssignmentExpression	is_early_node_valid = false		97524	0		=			
ANR	100710	Identifier	is_early_node_valid		97524	0					
ANR	100711	Identifier	false		97524	1					
ANR	100712	ExpressionStatement	sequence_broken = 1	913:38:51368:51387	97524	1	True				
ANR	100713	AssignmentExpression	sequence_broken = 1		97524	0		=			
ANR	100714	Identifier	sequence_broken		97524	0					
ANR	100715	PrimaryExpression	1		97524	1					
ANR	100716	IfStatement	if ( i < 0 )		97524	3					
ANR	100717	Condition	i < 0	919:39:51565:51569	97524	0	True				
ANR	100718	RelationalExpression	i < 0		97524	0		<			
ANR	100719	Identifier	i		97524	0					
ANR	100720	PrimaryExpression	0		97524	1					
ANR	100721	CompoundStatement		781:35:47381:47381	97524	1					
ANR	100722	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""requirements (@minOccurs = '0') only have %d elements"" , i )"	922:37:51716:51832	97524	0	True				
ANR	100723	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""requirements (@minOccurs = '0') only have %d elements"" , i )"		97524	0					
ANR	100724	Callee	WSF_LOG_ERROR_MSG		97524	0					
ANR	100725	Identifier	WSF_LOG_ERROR_MSG		97524	0					
ANR	100726	ArgumentList	Environment :: getEnv ( ) -> log		97524	1					
ANR	100727	Argument	Environment :: getEnv ( ) -> log		97524	0					
ANR	100728	PtrMemberAccess	Environment :: getEnv ( ) -> log		97524	0					
ANR	100729	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100730	Callee	Environment :: getEnv		97524	0					
ANR	100731	Identifier	Environment :: getEnv		97524	0					
ANR	100732	ArgumentList			97524	1					
ANR	100733	Identifier	log		97524	1					
ANR	100734	Argument	WSF_LOG_SI		97524	1					
ANR	100735	Identifier	WSF_LOG_SI		97524	0					
ANR	100736	Argument	"""requirements (@minOccurs = '0') only have %d elements"""		97524	2					
ANR	100737	PrimaryExpression	"""requirements (@minOccurs = '0') only have %d elements"""		97524	0					
ANR	100738	Argument	i		97524	3					
ANR	100739	Identifier	i		97524	0					
ANR	100740	IfStatement	if ( element_qname )		97524	1					
ANR	100741	Condition	element_qname	923:40:51874:51886	97524	0	True				
ANR	100742	Identifier	element_qname		97524	0					
ANR	100743	CompoundStatement		785:37:47700:47700	97524	1					
ANR	100744	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	925:40:51968:52023	97524	0	True				
ANR	100745	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		97524	0					
ANR	100746	Callee	axutil_qname_free		97524	0					
ANR	100747	Identifier	axutil_qname_free		97524	0					
ANR	100748	ArgumentList	element_qname		97524	1					
ANR	100749	Argument	element_qname		97524	0					
ANR	100750	Identifier	element_qname		97524	0					
ANR	100751	Argument	Environment :: getEnv ( )		97524	1					
ANR	100752	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100753	Callee	Environment :: getEnv		97524	0					
ANR	100754	Identifier	Environment :: getEnv		97524	0					
ANR	100755	ArgumentList			97524	1					
ANR	100756	IfStatement	if ( arr_list )		97524	2					
ANR	100757	Condition	arr_list	927:40:52104:52111	97524	0	True				
ANR	100758	Identifier	arr_list		97524	0					
ANR	100759	CompoundStatement		789:37:47925:47925	97524	1					
ANR	100760	Statement	delete	929:40:52193:52198	97524	0	True				
ANR	100761	ExpressionStatement	arr_list	929:47:52200:52208	97524	1	True				
ANR	100762	Identifier	arr_list		97524	0					
ANR	100763	ReturnStatement	return false ;	931:37:52286:52298	97524	3	True				
ANR	100764	Identifier	false		97524	0					
ANR	100765	IfStatement	if ( 0 == arr_list -> size ( ) )		97524	4					
ANR	100766	Condition	0 == arr_list -> size ( )	935:34:52404:52424	97524	0	True				
ANR	100767	EqualityExpression	0 == arr_list -> size ( )		97524	0		==			
ANR	100768	PrimaryExpression	0		97524	0					
ANR	100769	CallExpression	arr_list -> size ( )		97524	1					
ANR	100770	Callee	arr_list -> size		97524	0					
ANR	100771	PtrMemberAccess	arr_list -> size		97524	0					
ANR	100772	Identifier	arr_list		97524	0					
ANR	100773	Identifier	size		97524	1					
ANR	100774	ArgumentList			97524	1					
ANR	100775	CompoundStatement		797:31:48232:48232	97524	1					
ANR	100776	Statement	delete	937:36:52496:52501	97524	0	True				
ANR	100777	ExpressionStatement	arr_list	937:43:52503:52511	97524	1	True				
ANR	100778	Identifier	arr_list		97524	0					
ANR	100779	ElseStatement	else		97524	0					
ANR	100780	CompoundStatement		801:31:48387:48387	97524	0					
ANR	100781	ExpressionStatement	status = setRequirements ( arr_list )	941:36:52651:52685	97524	0	True				
ANR	100782	AssignmentExpression	status = setRequirements ( arr_list )		97524	0		=			
ANR	100783	Identifier	status		97524	0					
ANR	100784	CallExpression	setRequirements ( arr_list )		97524	1					
ANR	100785	Callee	setRequirements		97524	0					
ANR	100786	Identifier	setRequirements		97524	0					
ANR	100787	ArgumentList	arr_list		97524	1					
ANR	100788	Argument	arr_list		97524	0					
ANR	100789	Identifier	arr_list		97524	0					
ANR	100790	IfStatement	if ( element_qname )		97524	51					
ANR	100791	Condition	element_qname	947:21:52829:52841	97524	0	True				
ANR	100792	Identifier	element_qname		97524	0					
ANR	100793	CompoundStatement		809:18:48636:48636	97524	1					
ANR	100794	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	949:21:52885:52940	97524	0	True				
ANR	100795	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		97524	0					
ANR	100796	Callee	axutil_qname_free		97524	0					
ANR	100797	Identifier	axutil_qname_free		97524	0					
ANR	100798	ArgumentList	element_qname		97524	1					
ANR	100799	Argument	element_qname		97524	0					
ANR	100800	Identifier	element_qname		97524	0					
ANR	100801	Argument	Environment :: getEnv ( )		97524	1					
ANR	100802	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100803	Callee	Environment :: getEnv		97524	0					
ANR	100804	Identifier	Environment :: getEnv		97524	0					
ANR	100805	ArgumentList			97524	1					
ANR	100806	ExpressionStatement	element_qname = NULL	950:21:52963:52983	97524	1	True				
ANR	100807	AssignmentExpression	element_qname = NULL		97524	0		=			
ANR	100808	Identifier	element_qname		97524	0					
ANR	100809	Identifier	NULL		97524	1					
ANR	100810	CompoundStatement		818:23:48937:49029	97524	52					
ANR	100811	IdentifierDeclStatement	std :: vector < AviaryCommon :: Attribute * > * arr_list = new std :: vector < AviaryCommon :: Attribute * > ( ) ;	957:23:53163:53255	97524	0	True				
ANR	100812	IdentifierDecl	* arr_list = new std :: vector < AviaryCommon :: Attribute * > ( )		97524	0					
ANR	100813	IdentifierDeclType	std :: vector < AviaryCommon :: Attribute * > *		97524	0					
ANR	100814	Identifier	arr_list		97524	1					
ANR	100815	AssignmentExpression	* arr_list = new std :: vector < AviaryCommon :: Attribute * > ( )		97524	2		=			
ANR	100816	Identifier	arr_list		97524	0					
ANR	100817	UnaryExpression	new std :: vector < AviaryCommon :: Attribute * > ( )		97524	1					
ANR	100818	ExpressionStatement	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""extra"" , NULL , NULL )"	967:36:53498:53577	97524	1	True				
ANR	100819	AssignmentExpression	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""extra"" , NULL , NULL )"		97524	0		=			
ANR	100820	Identifier	element_qname		97524	0					
ANR	100821	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""extra"" , NULL , NULL )"		97524	1					
ANR	100822	Callee	axutil_qname_create		97524	0					
ANR	100823	Identifier	axutil_qname_create		97524	0					
ANR	100824	ArgumentList	Environment :: getEnv ( )		97524	1					
ANR	100825	Argument	Environment :: getEnv ( )		97524	0					
ANR	100826	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100827	Callee	Environment :: getEnv		97524	0					
ANR	100828	Identifier	Environment :: getEnv		97524	0					
ANR	100829	ArgumentList			97524	1					
ANR	100830	Argument	"""extra"""		97524	1					
ANR	100831	PrimaryExpression	"""extra"""		97524	0					
ANR	100832	Argument	NULL		97524	2					
ANR	100833	Identifier	NULL		97524	0					
ANR	100834	Argument	NULL		97524	3					
ANR	100835	Identifier	NULL		97524	0					
ANR	100836	ForStatement	"for ( i = 0 , sequence_broken = 0 , current_node = ( is_early_node_valid ? axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) ) : current_node ) ; ! sequence_broken && current_node != NULL ; )"		97524	2					
ANR	100837	ForInit	"i = 0 , sequence_broken = 0 , current_node = ( is_early_node_valid ? axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) ) : current_node ) ;"	970:36:53682:53824	97524	0	True				
ANR	100838	Expression	"i = 0 , sequence_broken = 0 , current_node = ( is_early_node_valid ? axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) ) : current_node )"		97524	0					
ANR	100839	AssignmentExpression	i = 0		97524	0		=			
ANR	100840	Identifier	i		97524	0					
ANR	100841	PrimaryExpression	0		97524	1					
ANR	100842	Expression	"sequence_broken = 0 , current_node = ( is_early_node_valid ? axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) ) : current_node )"		97524	1					
ANR	100843	AssignmentExpression	sequence_broken = 0		97524	0		=			
ANR	100844	Identifier	sequence_broken		97524	0					
ANR	100845	PrimaryExpression	0		97524	1					
ANR	100846	AssignmentExpression	"current_node = ( is_early_node_valid ? axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) ) : current_node )"		97524	1		=			
ANR	100847	Identifier	current_node		97524	0					
ANR	100848	ConditionalExpression	"is_early_node_valid ? axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) ) : current_node"		97524	1					
ANR	100849	Condition	is_early_node_valid		97524	0					
ANR	100850	Identifier	is_early_node_valid		97524	0					
ANR	100851	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	100852	Callee	axiom_node_get_next_sibling		97524	0					
ANR	100853	Identifier	axiom_node_get_next_sibling		97524	0					
ANR	100854	ArgumentList	current_node		97524	1					
ANR	100855	Argument	current_node		97524	0					
ANR	100856	Identifier	current_node		97524	0					
ANR	100857	Argument	Environment :: getEnv ( )		97524	1					
ANR	100858	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100859	Callee	Environment :: getEnv		97524	0					
ANR	100860	Identifier	Environment :: getEnv		97524	0					
ANR	100861	ArgumentList			97524	1					
ANR	100862	Identifier	current_node		97524	2					
ANR	100863	Condition	! sequence_broken && current_node != NULL	970:180:53826:53865	97524	1	True				
ANR	100864	AndExpression	! sequence_broken && current_node != NULL		97524	0		&&			
ANR	100865	UnaryOperationExpression	! sequence_broken		97524	0					
ANR	100866	UnaryOperator	!		97524	0					
ANR	100867	Identifier	sequence_broken		97524	1					
ANR	100868	EqualityExpression	current_node != NULL		97524	1		!=			
ANR	100869	Identifier	current_node		97524	0					
ANR	100870	Identifier	NULL		97524	1					
ANR	100871	CompoundStatement		833:31:49720:49720	97524	2					
ANR	100872	IfStatement	"if ( axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		97524	0					
ANR	100873	Condition	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	973:37:53985:54062	97524	0	True				
ANR	100874	EqualityExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		97524	0		!=			
ANR	100875	CallExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) )"		97524	0					
ANR	100876	Callee	axiom_node_get_node_type		97524	0					
ANR	100877	Identifier	axiom_node_get_node_type		97524	0					
ANR	100878	ArgumentList	current_node		97524	1					
ANR	100879	Argument	current_node		97524	0					
ANR	100880	Identifier	current_node		97524	0					
ANR	100881	Argument	Environment :: getEnv ( )		97524	1					
ANR	100882	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100883	Callee	Environment :: getEnv		97524	0					
ANR	100884	Identifier	Environment :: getEnv		97524	0					
ANR	100885	ArgumentList			97524	1					
ANR	100886	Identifier	AXIOM_ELEMENT		97524	1					
ANR	100887	CompoundStatement		835:34:49873:49873	97524	1					
ANR	100888	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	975:37:54138:54216	97524	0	True				
ANR	100889	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	0		=			
ANR	100890	Identifier	current_node		97524	0					
ANR	100891	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	100892	Callee	axiom_node_get_next_sibling		97524	0					
ANR	100893	Identifier	axiom_node_get_next_sibling		97524	0					
ANR	100894	ArgumentList	current_node		97524	1					
ANR	100895	Argument	current_node		97524	0					
ANR	100896	Identifier	current_node		97524	0					
ANR	100897	Argument	Environment :: getEnv ( )		97524	1					
ANR	100898	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100899	Callee	Environment :: getEnv		97524	0					
ANR	100900	Identifier	Environment :: getEnv		97524	0					
ANR	100901	ArgumentList			97524	1					
ANR	100902	ExpressionStatement	is_early_node_valid = false	976:37:54255:54282	97524	1	True				
ANR	100903	AssignmentExpression	is_early_node_valid = false		97524	0		=			
ANR	100904	Identifier	is_early_node_valid		97524	0					
ANR	100905	Identifier	false		97524	1					
ANR	100906	ContinueStatement	continue ;	977:37:54321:54329	97524	2	True				
ANR	100907	ExpressionStatement	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	980:34:54436:54537	97524	1	True				
ANR	100908	AssignmentExpression	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		97524	0		=			
ANR	100909	Identifier	current_element		97524	0					
ANR	100910	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	100911	CastTarget	axiom_element_t *		97524	0					
ANR	100912	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	100913	Callee	axiom_node_get_data_element		97524	0					
ANR	100914	Identifier	axiom_node_get_data_element		97524	0					
ANR	100915	ArgumentList	current_node		97524	1					
ANR	100916	Argument	current_node		97524	0					
ANR	100917	Identifier	current_node		97524	0					
ANR	100918	Argument	Environment :: getEnv ( )		97524	1					
ANR	100919	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100920	Callee	Environment :: getEnv		97524	0					
ANR	100921	Identifier	Environment :: getEnv		97524	0					
ANR	100922	ArgumentList			97524	1					
ANR	100923	ExpressionStatement	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"	981:34:54573:54659	97524	2	True				
ANR	100924	AssignmentExpression	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		97524	0		=			
ANR	100925	Identifier	mqname		97524	0					
ANR	100926	CallExpression	"axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		97524	1					
ANR	100927	Callee	axiom_element_get_qname		97524	0					
ANR	100928	Identifier	axiom_element_get_qname		97524	0					
ANR	100929	ArgumentList	current_element		97524	1					
ANR	100930	Argument	current_element		97524	0					
ANR	100931	Identifier	current_element		97524	0					
ANR	100932	Argument	Environment :: getEnv ( )		97524	1					
ANR	100933	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100934	Callee	Environment :: getEnv		97524	0					
ANR	100935	Identifier	Environment :: getEnv		97524	0					
ANR	100936	ArgumentList			97524	1					
ANR	100937	Argument	current_node		97524	2					
ANR	100938	Identifier	current_node		97524	0					
ANR	100939	IfStatement	"if ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""extra"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		97524	3					
ANR	100940	Condition	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""extra"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"	983:38:54700:54860	97524	0	True				
ANR	100941	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""extra"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	0		||			
ANR	100942	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		97524	0					
ANR	100943	Callee	axutil_qname_equals		97524	0					
ANR	100944	Identifier	axutil_qname_equals		97524	0					
ANR	100945	ArgumentList	element_qname		97524	1					
ANR	100946	Argument	element_qname		97524	0					
ANR	100947	Identifier	element_qname		97524	0					
ANR	100948	Argument	Environment :: getEnv ( )		97524	1					
ANR	100949	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100950	Callee	Environment :: getEnv		97524	0					
ANR	100951	Identifier	Environment :: getEnv		97524	0					
ANR	100952	ArgumentList			97524	1					
ANR	100953	Argument	mqname		97524	2					
ANR	100954	Identifier	mqname		97524	0					
ANR	100955	UnaryOperationExpression	"! axutil_strcmp ( ""extra"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1					
ANR	100956	UnaryOperator	!		97524	0					
ANR	100957	CallExpression	"axutil_strcmp ( ""extra"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		97524	1					
ANR	100958	Callee	axutil_strcmp		97524	0					
ANR	100959	Identifier	axutil_strcmp		97524	0					
ANR	100960	ArgumentList	"""extra"""		97524	1					
ANR	100961	Argument	"""extra"""		97524	0					
ANR	100962	PrimaryExpression	"""extra"""		97524	0					
ANR	100963	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		97524	1					
ANR	100964	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		97524	0					
ANR	100965	Callee	axiom_element_get_localname		97524	0					
ANR	100966	Identifier	axiom_element_get_localname		97524	0					
ANR	100967	ArgumentList	current_element		97524	1					
ANR	100968	Argument	current_element		97524	0					
ANR	100969	Identifier	current_element		97524	0					
ANR	100970	Argument	Environment :: getEnv ( )		97524	1					
ANR	100971	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	100972	Callee	Environment :: getEnv		97524	0					
ANR	100973	Identifier	Environment :: getEnv		97524	0					
ANR	100974	ArgumentList			97524	1					
ANR	100975	CompoundStatement		849:37:50850:50914	97524	1					
ANR	100976	ExpressionStatement	is_early_node_valid = true	986:38:54972:54998	97524	0	True				
ANR	100977	AssignmentExpression	is_early_node_valid = true		97524	0		=			
ANR	100978	Identifier	is_early_node_valid		97524	0					
ANR	100979	Identifier	true		97524	1					
ANR	100980	IdentifierDeclStatement	AviaryCommon :: Attribute * element = new AviaryCommon :: Attribute ( ) ;	988:37:55076:55140	97524	1	True				
ANR	100981	IdentifierDecl	* element = new AviaryCommon :: Attribute ( )		97524	0					
ANR	100982	IdentifierDeclType	AviaryCommon :: Attribute *		97524	0					
ANR	100983	Identifier	element		97524	1					
ANR	100984	AssignmentExpression	* element = new AviaryCommon :: Attribute ( )		97524	2		=			
ANR	100985	Identifier	element		97524	0					
ANR	100986	UnaryExpression	new AviaryCommon :: Attribute ( )		97524	1					
ANR	100987	ExpressionStatement	"status = element -> deserialize ( & current_node , & is_early_node_valid , false )"	990:42:55227:55301	97524	2	True				
ANR	100988	AssignmentExpression	"status = element -> deserialize ( & current_node , & is_early_node_valid , false )"		97524	0		=			
ANR	100989	Identifier	status		97524	0					
ANR	100990	CallExpression	"element -> deserialize ( & current_node , & is_early_node_valid , false )"		97524	1					
ANR	100991	Callee	element -> deserialize		97524	0					
ANR	100992	PtrMemberAccess	element -> deserialize		97524	0					
ANR	100993	Identifier	element		97524	0					
ANR	100994	Identifier	deserialize		97524	1					
ANR	100995	ArgumentList	& current_node		97524	1					
ANR	100996	Argument	& current_node		97524	0					
ANR	100997	UnaryOperationExpression	& current_node		97524	0					
ANR	100998	UnaryOperator	&		97524	0					
ANR	100999	Identifier	current_node		97524	1					
ANR	101000	Argument	& is_early_node_valid		97524	1					
ANR	101001	UnaryOperationExpression	& is_early_node_valid		97524	0					
ANR	101002	UnaryOperator	&		97524	0					
ANR	101003	Identifier	is_early_node_valid		97524	1					
ANR	101004	Argument	false		97524	2					
ANR	101005	Identifier	false		97524	0					
ANR	101006	IfStatement	if ( AXIS2_FAILURE == status )		97524	3					
ANR	101007	Condition	AXIS2_FAILURE == status	992:45:55391:55414	97524	0	True				
ANR	101008	EqualityExpression	AXIS2_FAILURE == status		97524	0		==			
ANR	101009	Identifier	AXIS2_FAILURE		97524	0					
ANR	101010	Identifier	status		97524	1					
ANR	101011	CompoundStatement		854:42:51233:51233	97524	1					
ANR	101012	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in building element extra "" )"	994:7:55468:55561	97524	0	True				
ANR	101013	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in building element extra "" )"		97524	0					
ANR	101014	Callee	WSF_LOG_ERROR_MSG		97524	0					
ANR	101015	Identifier	WSF_LOG_ERROR_MSG		97524	0					
ANR	101016	ArgumentList	Environment :: getEnv ( ) -> log		97524	1					
ANR	101017	Argument	Environment :: getEnv ( ) -> log		97524	0					
ANR	101018	PtrMemberAccess	Environment :: getEnv ( ) -> log		97524	0					
ANR	101019	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	101020	Callee	Environment :: getEnv		97524	0					
ANR	101021	Identifier	Environment :: getEnv		97524	0					
ANR	101022	ArgumentList			97524	1					
ANR	101023	Identifier	log		97524	1					
ANR	101024	Argument	WSF_LOG_SI		97524	1					
ANR	101025	Identifier	WSF_LOG_SI		97524	0					
ANR	101026	Argument	"""failed in building element extra """		97524	2					
ANR	101027	PrimaryExpression	"""failed in building element extra """		97524	0					
ANR	101028	ElseStatement	else		97524	0					
ANR	101029	CompoundStatement		858:42:51470:51470	97524	0					
ANR	101030	ExpressionStatement	arr_list -> push_back ( element )	998:44:55742:55770	97524	0	True				
ANR	101031	CallExpression	arr_list -> push_back ( element )		97524	0					
ANR	101032	Callee	arr_list -> push_back		97524	0					
ANR	101033	PtrMemberAccess	arr_list -> push_back		97524	0					
ANR	101034	Identifier	arr_list		97524	0					
ANR	101035	Identifier	push_back		97524	1					
ANR	101036	ArgumentList	element		97524	1					
ANR	101037	Argument	element		97524	0					
ANR	101038	Identifier	element		97524	0					
ANR	101039	IfStatement	if ( AXIS2_FAILURE == status )		97524	4					
ANR	101040	Condition	AXIS2_FAILURE == status	1002:40:55942:55965	97524	0	True				
ANR	101041	EqualityExpression	AXIS2_FAILURE == status		97524	0		==			
ANR	101042	Identifier	AXIS2_FAILURE		97524	0					
ANR	101043	Identifier	status		97524	1					
ANR	101044	CompoundStatement		864:37:51779:51779	97524	1					
ANR	101045	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for extra "" )"	1004:41:56048:56147	97524	0	True				
ANR	101046	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for extra "" )"		97524	0					
ANR	101047	Callee	WSF_LOG_ERROR_MSG		97524	0					
ANR	101048	Identifier	WSF_LOG_ERROR_MSG		97524	0					
ANR	101049	ArgumentList	Environment :: getEnv ( ) -> log		97524	1					
ANR	101050	Argument	Environment :: getEnv ( ) -> log		97524	0					
ANR	101051	PtrMemberAccess	Environment :: getEnv ( ) -> log		97524	0					
ANR	101052	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	101053	Callee	Environment :: getEnv		97524	0					
ANR	101054	Identifier	Environment :: getEnv		97524	0					
ANR	101055	ArgumentList			97524	1					
ANR	101056	Identifier	log		97524	1					
ANR	101057	Argument	WSF_LOG_SI		97524	1					
ANR	101058	Identifier	WSF_LOG_SI		97524	0					
ANR	101059	Argument	"""failed in setting the value for extra """		97524	2					
ANR	101060	PrimaryExpression	"""failed in setting the value for extra """		97524	0					
ANR	101061	IfStatement	if ( element_qname )		97524	1					
ANR	101062	Condition	element_qname	1005:44:56193:56205	97524	0	True				
ANR	101063	Identifier	element_qname		97524	0					
ANR	101064	CompoundStatement		867:41:52023:52023	97524	1					
ANR	101065	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	1007:44:56295:56350	97524	0	True				
ANR	101066	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		97524	0					
ANR	101067	Callee	axutil_qname_free		97524	0					
ANR	101068	Identifier	axutil_qname_free		97524	0					
ANR	101069	ArgumentList	element_qname		97524	1					
ANR	101070	Argument	element_qname		97524	0					
ANR	101071	Identifier	element_qname		97524	0					
ANR	101072	Argument	Environment :: getEnv ( )		97524	1					
ANR	101073	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	101074	Callee	Environment :: getEnv		97524	0					
ANR	101075	Identifier	Environment :: getEnv		97524	0					
ANR	101076	ArgumentList			97524	1					
ANR	101077	IfStatement	if ( arr_list )		97524	2					
ANR	101078	Condition	arr_list	1009:44:56439:56446	97524	0	True				
ANR	101079	Identifier	arr_list		97524	0					
ANR	101080	CompoundStatement		871:41:52264:52264	97524	1					
ANR	101081	Statement	delete	1011:44:56536:56541	97524	0	True				
ANR	101082	ExpressionStatement	arr_list	1011:51:56543:56551	97524	1	True				
ANR	101083	Identifier	arr_list		97524	0					
ANR	101084	ReturnStatement	return false ;	1013:41:56637:56649	97524	3	True				
ANR	101085	Identifier	false		97524	0					
ANR	101086	ExpressionStatement	i ++	1016:37:56728:56731	97524	5	True				
ANR	101087	PostIncDecOperationExpression	i ++		97524	0					
ANR	101088	Identifier	i		97524	0					
ANR	101089	IncDec	++		97524	1					
ANR	101090	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	1017:36:56769:56848	97524	6	True				
ANR	101091	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	0		=			
ANR	101092	Identifier	current_node		97524	0					
ANR	101093	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		97524	1					
ANR	101094	Callee	axiom_node_get_next_sibling		97524	0					
ANR	101095	Identifier	axiom_node_get_next_sibling		97524	0					
ANR	101096	ArgumentList	current_node		97524	1					
ANR	101097	Argument	current_node		97524	0					
ANR	101098	Identifier	current_node		97524	0					
ANR	101099	Argument	Environment :: getEnv ( )		97524	1					
ANR	101100	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	101101	Callee	Environment :: getEnv		97524	0					
ANR	101102	Identifier	Environment :: getEnv		97524	0					
ANR	101103	ArgumentList			97524	1					
ANR	101104	ElseStatement	else		97524	0					
ANR	101105	CompoundStatement		881:34:52733:52733	97524	0					
ANR	101106	ExpressionStatement	is_early_node_valid = false	1021:38:56999:57026	97524	0	True				
ANR	101107	AssignmentExpression	is_early_node_valid = false		97524	0		=			
ANR	101108	Identifier	is_early_node_valid		97524	0					
ANR	101109	Identifier	false		97524	1					
ANR	101110	ExpressionStatement	sequence_broken = 1	1022:38:57066:57085	97524	1	True				
ANR	101111	AssignmentExpression	sequence_broken = 1		97524	0		=			
ANR	101112	Identifier	sequence_broken		97524	0					
ANR	101113	PrimaryExpression	1		97524	1					
ANR	101114	IfStatement	if ( i < 0 )		97524	3					
ANR	101115	Condition	i < 0	1028:39:57263:57267	97524	0	True				
ANR	101116	RelationalExpression	i < 0		97524	0		<			
ANR	101117	Identifier	i		97524	0					
ANR	101118	PrimaryExpression	0		97524	1					
ANR	101119	CompoundStatement		890:35:53079:53079	97524	1					
ANR	101120	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""extra (@minOccurs = '0') only have %d elements"" , i )"	1031:37:57414:57523	97524	0	True				
ANR	101121	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""extra (@minOccurs = '0') only have %d elements"" , i )"		97524	0					
ANR	101122	Callee	WSF_LOG_ERROR_MSG		97524	0					
ANR	101123	Identifier	WSF_LOG_ERROR_MSG		97524	0					
ANR	101124	ArgumentList	Environment :: getEnv ( ) -> log		97524	1					
ANR	101125	Argument	Environment :: getEnv ( ) -> log		97524	0					
ANR	101126	PtrMemberAccess	Environment :: getEnv ( ) -> log		97524	0					
ANR	101127	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	101128	Callee	Environment :: getEnv		97524	0					
ANR	101129	Identifier	Environment :: getEnv		97524	0					
ANR	101130	ArgumentList			97524	1					
ANR	101131	Identifier	log		97524	1					
ANR	101132	Argument	WSF_LOG_SI		97524	1					
ANR	101133	Identifier	WSF_LOG_SI		97524	0					
ANR	101134	Argument	"""extra (@minOccurs = '0') only have %d elements"""		97524	2					
ANR	101135	PrimaryExpression	"""extra (@minOccurs = '0') only have %d elements"""		97524	0					
ANR	101136	Argument	i		97524	3					
ANR	101137	Identifier	i		97524	0					
ANR	101138	IfStatement	if ( element_qname )		97524	1					
ANR	101139	Condition	element_qname	1032:40:57565:57577	97524	0	True				
ANR	101140	Identifier	element_qname		97524	0					
ANR	101141	CompoundStatement		894:37:53391:53391	97524	1					
ANR	101142	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	1034:40:57659:57714	97524	0	True				
ANR	101143	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		97524	0					
ANR	101144	Callee	axutil_qname_free		97524	0					
ANR	101145	Identifier	axutil_qname_free		97524	0					
ANR	101146	ArgumentList	element_qname		97524	1					
ANR	101147	Argument	element_qname		97524	0					
ANR	101148	Identifier	element_qname		97524	0					
ANR	101149	Argument	Environment :: getEnv ( )		97524	1					
ANR	101150	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	101151	Callee	Environment :: getEnv		97524	0					
ANR	101152	Identifier	Environment :: getEnv		97524	0					
ANR	101153	ArgumentList			97524	1					
ANR	101154	IfStatement	if ( arr_list )		97524	2					
ANR	101155	Condition	arr_list	1036:40:57795:57802	97524	0	True				
ANR	101156	Identifier	arr_list		97524	0					
ANR	101157	CompoundStatement		898:37:53616:53616	97524	1					
ANR	101158	Statement	delete	1038:40:57884:57889	97524	0	True				
ANR	101159	ExpressionStatement	arr_list	1038:47:57891:57899	97524	1	True				
ANR	101160	Identifier	arr_list		97524	0					
ANR	101161	ReturnStatement	return false ;	1040:37:57977:57989	97524	3	True				
ANR	101162	Identifier	false		97524	0					
ANR	101163	IfStatement	if ( 0 == arr_list -> size ( ) )		97524	4					
ANR	101164	Condition	0 == arr_list -> size ( )	1044:34:58095:58115	97524	0	True				
ANR	101165	EqualityExpression	0 == arr_list -> size ( )		97524	0		==			
ANR	101166	PrimaryExpression	0		97524	0					
ANR	101167	CallExpression	arr_list -> size ( )		97524	1					
ANR	101168	Callee	arr_list -> size		97524	0					
ANR	101169	PtrMemberAccess	arr_list -> size		97524	0					
ANR	101170	Identifier	arr_list		97524	0					
ANR	101171	Identifier	size		97524	1					
ANR	101172	ArgumentList			97524	1					
ANR	101173	CompoundStatement		906:31:53923:53923	97524	1					
ANR	101174	Statement	delete	1046:36:58187:58192	97524	0	True				
ANR	101175	ExpressionStatement	arr_list	1046:43:58194:58202	97524	1	True				
ANR	101176	Identifier	arr_list		97524	0					
ANR	101177	ElseStatement	else		97524	0					
ANR	101178	CompoundStatement		910:31:54078:54078	97524	0					
ANR	101179	ExpressionStatement	status = setExtra ( arr_list )	1050:36:58342:58369	97524	0	True				
ANR	101180	AssignmentExpression	status = setExtra ( arr_list )		97524	0		=			
ANR	101181	Identifier	status		97524	0					
ANR	101182	CallExpression	setExtra ( arr_list )		97524	1					
ANR	101183	Callee	setExtra		97524	0					
ANR	101184	Identifier	setExtra		97524	0					
ANR	101185	ArgumentList	arr_list		97524	1					
ANR	101186	Argument	arr_list		97524	0					
ANR	101187	Identifier	arr_list		97524	0					
ANR	101188	IfStatement	if ( element_qname )		97524	53					
ANR	101189	Condition	element_qname	1056:21:58513:58525	97524	0	True				
ANR	101190	Identifier	element_qname		97524	0					
ANR	101191	CompoundStatement		918:18:54320:54320	97524	1					
ANR	101192	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	1058:21:58569:58624	97524	0	True				
ANR	101193	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		97524	0					
ANR	101194	Callee	axutil_qname_free		97524	0					
ANR	101195	Identifier	axutil_qname_free		97524	0					
ANR	101196	ArgumentList	element_qname		97524	1					
ANR	101197	Argument	element_qname		97524	0					
ANR	101198	Identifier	element_qname		97524	0					
ANR	101199	Argument	Environment :: getEnv ( )		97524	1					
ANR	101200	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	101201	Callee	Environment :: getEnv		97524	0					
ANR	101202	Identifier	Environment :: getEnv		97524	0					
ANR	101203	ArgumentList			97524	1					
ANR	101204	ExpressionStatement	element_qname = NULL	1059:21:58647:58667	97524	1	True				
ANR	101205	AssignmentExpression	element_qname = NULL		97524	0		=			
ANR	101206	Identifier	element_qname		97524	0					
ANR	101207	Identifier	NULL		97524	1					
ANR	101208	ExpressionStatement	parent_attri = NULL	1064:18:58759:58778	97524	54	True				
ANR	101209	AssignmentExpression	parent_attri = NULL		97524	0		=			
ANR	101210	Identifier	parent_attri		97524	0					
ANR	101211	Identifier	NULL		97524	1					
ANR	101212	ExpressionStatement	attrib_text = NULL	1065:18:58798:58816	97524	55	True				
ANR	101213	AssignmentExpression	attrib_text = NULL		97524	0		=			
ANR	101214	Identifier	attrib_text		97524	0					
ANR	101215	Identifier	NULL		97524	1					
ANR	101216	IfStatement	if ( attribute_hash )		97524	56					
ANR	101217	Condition	attribute_hash	1066:21:58839:58852	97524	0	True				
ANR	101218	Identifier	attribute_hash		97524	0					
ANR	101219	CompoundStatement		931:23:54754:54769	97524	1					
ANR	101220	IdentifierDeclStatement	axutil_hash_index_t * hi ;	1068:23:58898:58921	97524	0	True				
ANR	101221	IdentifierDecl	* hi		97524	0					
ANR	101222	IdentifierDeclType	axutil_hash_index_t *		97524	0					
ANR	101223	Identifier	hi		97524	1					
ANR	101224	IdentifierDeclStatement	void * val ;	1069:23:58946:58955	97524	1	True				
ANR	101225	IdentifierDecl	* val		97524	0					
ANR	101226	IdentifierDeclType	void *		97524	0					
ANR	101227	Identifier	val		97524	1					
ANR	101228	IdentifierDeclStatement	const void * key ;	1070:23:58980:58995	97524	2	True				
ANR	101229	IdentifierDecl	* key		97524	0					
ANR	101230	IdentifierDeclType	const void *		97524	0					
ANR	101231	Identifier	key		97524	1					
ANR	101232	ForStatement	"for ( hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) ) ; hi ; hi = axutil_hash_next ( Environment :: getEnv ( ) , hi ) )"		97524	3					
ANR	101233	ForInit	"hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) ) ;"	1072:28:59026:59087	97524	0	True				
ANR	101234	AssignmentExpression	"hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) )"		97524	0		=			
ANR	101235	Identifier	hi		97524	0					
ANR	101236	CallExpression	"axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) )"		97524	1					
ANR	101237	Callee	axutil_hash_first		97524	0					
ANR	101238	Identifier	axutil_hash_first		97524	0					
ANR	101239	ArgumentList	attribute_hash		97524	1					
ANR	101240	Argument	attribute_hash		97524	0					
ANR	101241	Identifier	attribute_hash		97524	0					
ANR	101242	Argument	Environment :: getEnv ( )		97524	1					
ANR	101243	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	101244	Callee	Environment :: getEnv		97524	0					
ANR	101245	Identifier	Environment :: getEnv		97524	0					
ANR	101246	ArgumentList			97524	1					
ANR	101247	Condition	hi	1072:91:59089:59090	97524	1	True				
ANR	101248	Identifier	hi		97524	0					
ANR	101249	AssignmentExpression	"hi = axutil_hash_next ( Environment :: getEnv ( ) , hi )"	1072:95:59093:59140	97524	2	True	=			
ANR	101250	Identifier	hi		97524	0					
ANR	101251	CallExpression	"axutil_hash_next ( Environment :: getEnv ( ) , hi )"		97524	1					
ANR	101252	Callee	axutil_hash_next		97524	0					
ANR	101253	Identifier	axutil_hash_next		97524	0					
ANR	101254	ArgumentList	Environment :: getEnv ( )		97524	1					
ANR	101255	Argument	Environment :: getEnv ( )		97524	0					
ANR	101256	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	101257	Callee	Environment :: getEnv		97524	0					
ANR	101258	Identifier	Environment :: getEnv		97524	0					
ANR	101259	ArgumentList			97524	1					
ANR	101260	Argument	hi		97524	1					
ANR	101261	Identifier	hi		97524	0					
ANR	101262	CompoundStatement		934:23:54940:54940	97524	3					
ANR	101263	ExpressionStatement	"axutil_hash_this ( hi , & key , NULL , & val )"	1074:27:59195:59233	97524	0	True				
ANR	101264	CallExpression	"axutil_hash_this ( hi , & key , NULL , & val )"		97524	0					
ANR	101265	Callee	axutil_hash_this		97524	0					
ANR	101266	Identifier	axutil_hash_this		97524	0					
ANR	101267	ArgumentList	hi		97524	1					
ANR	101268	Argument	hi		97524	0					
ANR	101269	Identifier	hi		97524	0					
ANR	101270	Argument	& key		97524	1					
ANR	101271	UnaryOperationExpression	& key		97524	0					
ANR	101272	UnaryOperator	&		97524	0					
ANR	101273	Identifier	key		97524	1					
ANR	101274	Argument	NULL		97524	2					
ANR	101275	Identifier	NULL		97524	0					
ANR	101276	Argument	& val		97524	3					
ANR	101277	UnaryOperationExpression	& val		97524	0					
ANR	101278	UnaryOperator	&		97524	0					
ANR	101279	Identifier	val		97524	1					
ANR	101280	IfStatement	"if ( ! strcmp ( ( axis2_char_t * ) key , ""allowOverrides"" ) )"		97524	1					
ANR	101281	Condition	"! strcmp ( ( axis2_char_t * ) key , ""allowOverrides"" )"	1077:34:59325:59369	97524	0	True				
ANR	101282	UnaryOperationExpression	"! strcmp ( ( axis2_char_t * ) key , ""allowOverrides"" )"		97524	0					
ANR	101283	UnaryOperator	!		97524	0					
ANR	101284	CallExpression	"strcmp ( ( axis2_char_t * ) key , ""allowOverrides"" )"		97524	1					
ANR	101285	Callee	strcmp		97524	0					
ANR	101286	Identifier	strcmp		97524	0					
ANR	101287	ArgumentList	( axis2_char_t * ) key		97524	1					
ANR	101288	Argument	( axis2_char_t * ) key		97524	0					
ANR	101289	CastExpression	( axis2_char_t * ) key		97524	0					
ANR	101290	CastTarget	axis2_char_t *		97524	0					
ANR	101291	Identifier	key		97524	1					
ANR	101292	Argument	"""allowOverrides"""		97524	1					
ANR	101293	PrimaryExpression	"""allowOverrides"""		97524	0					
ANR	101294	CompoundStatement		940:31:55207:55207	97524	1					
ANR	101295	ExpressionStatement	parent_attri = ( axiom_attribute_t * ) val	1080:35:59470:59508	97524	0	True				
ANR	101296	AssignmentExpression	parent_attri = ( axiom_attribute_t * ) val		97524	0		=			
ANR	101297	Identifier	parent_attri		97524	0					
ANR	101298	CastExpression	( axiom_attribute_t * ) val		97524	1					
ANR	101299	CastTarget	axiom_attribute_t *		97524	0					
ANR	101300	Identifier	val		97524	1					
ANR	101301	BreakStatement	break ;	1081:35:59545:59550	97524	1	True				
ANR	101302	IfStatement	if ( parent_attri )		97524	57					
ANR	101303	Condition	parent_attri	1086:21:59652:59663	97524	0	True				
ANR	101304	Identifier	parent_attri		97524	0					
ANR	101305	CompoundStatement		948:18:55458:55458	97524	1					
ANR	101306	ExpressionStatement	"attrib_text = axiom_attribute_get_value ( parent_attri , Environment :: getEnv ( ) )"	1088:20:59706:59782	97524	0	True				
ANR	101307	AssignmentExpression	"attrib_text = axiom_attribute_get_value ( parent_attri , Environment :: getEnv ( ) )"		97524	0		=			
ANR	101308	Identifier	attrib_text		97524	0					
ANR	101309	CallExpression	"axiom_attribute_get_value ( parent_attri , Environment :: getEnv ( ) )"		97524	1					
ANR	101310	Callee	axiom_attribute_get_value		97524	0					
ANR	101311	Identifier	axiom_attribute_get_value		97524	0					
ANR	101312	ArgumentList	parent_attri		97524	1					
ANR	101313	Argument	parent_attri		97524	0					
ANR	101314	Identifier	parent_attri		97524	0					
ANR	101315	Argument	Environment :: getEnv ( )		97524	1					
ANR	101316	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	101317	Callee	Environment :: getEnv		97524	0					
ANR	101318	Identifier	Environment :: getEnv		97524	0					
ANR	101319	ArgumentList			97524	1					
ANR	101320	ElseStatement	else		97524	0					
ANR	101321	CompoundStatement		952:18:55619:55619	97524	0					
ANR	101322	ExpressionStatement	"attrib_text = axiom_element_get_attribute_value_by_name ( parent_element , Environment :: getEnv ( ) , ""allowOverrides"" )"	1093:20:60001:60113	97524	0	True				
ANR	101323	AssignmentExpression	"attrib_text = axiom_element_get_attribute_value_by_name ( parent_element , Environment :: getEnv ( ) , ""allowOverrides"" )"		97524	0		=			
ANR	101324	Identifier	attrib_text		97524	0					
ANR	101325	CallExpression	"axiom_element_get_attribute_value_by_name ( parent_element , Environment :: getEnv ( ) , ""allowOverrides"" )"		97524	1					
ANR	101326	Callee	axiom_element_get_attribute_value_by_name		97524	0					
ANR	101327	Identifier	axiom_element_get_attribute_value_by_name		97524	0					
ANR	101328	ArgumentList	parent_element		97524	1					
ANR	101329	Argument	parent_element		97524	0					
ANR	101330	Identifier	parent_element		97524	0					
ANR	101331	Argument	Environment :: getEnv ( )		97524	1					
ANR	101332	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	101333	Callee	Environment :: getEnv		97524	0					
ANR	101334	Identifier	Environment :: getEnv		97524	0					
ANR	101335	ArgumentList			97524	1					
ANR	101336	Argument	"""allowOverrides"""		97524	2					
ANR	101337	PrimaryExpression	"""allowOverrides"""		97524	0					
ANR	101338	IfStatement	if ( attrib_text != NULL )		97524	58					
ANR	101339	Condition	attrib_text != NULL	1096:21:60157:60175	97524	0	True				
ANR	101340	EqualityExpression	attrib_text != NULL		97524	0		!=			
ANR	101341	Identifier	attrib_text		97524	0					
ANR	101342	Identifier	NULL		97524	1					
ANR	101343	CompoundStatement		958:18:55970:55970	97524	1					
ANR	101344	IfStatement	"if ( ! axutil_strcmp ( attrib_text , ""TRUE"" ) || ! axutil_strcmp ( attrib_text , ""true"" ) )"		97524	0					
ANR	101345	Condition	"! axutil_strcmp ( attrib_text , ""TRUE"" ) || ! axutil_strcmp ( attrib_text , ""true"" )"	1100:31:60275:60348	97524	0	True				
ANR	101346	OrExpression	"! axutil_strcmp ( attrib_text , ""TRUE"" ) || ! axutil_strcmp ( attrib_text , ""true"" )"		97524	0		||			
ANR	101347	UnaryOperationExpression	"! axutil_strcmp ( attrib_text , ""TRUE"" )"		97524	0					
ANR	101348	UnaryOperator	!		97524	0					
ANR	101349	CallExpression	"axutil_strcmp ( attrib_text , ""TRUE"" )"		97524	1					
ANR	101350	Callee	axutil_strcmp		97524	0					
ANR	101351	Identifier	axutil_strcmp		97524	0					
ANR	101352	ArgumentList	attrib_text		97524	1					
ANR	101353	Argument	attrib_text		97524	0					
ANR	101354	Identifier	attrib_text		97524	0					
ANR	101355	Argument	"""TRUE"""		97524	1					
ANR	101356	PrimaryExpression	"""TRUE"""		97524	0					
ANR	101357	UnaryOperationExpression	"! axutil_strcmp ( attrib_text , ""true"" )"		97524	1					
ANR	101358	UnaryOperator	!		97524	0					
ANR	101359	CallExpression	"axutil_strcmp ( attrib_text , ""true"" )"		97524	1					
ANR	101360	Callee	axutil_strcmp		97524	0					
ANR	101361	Identifier	axutil_strcmp		97524	0					
ANR	101362	ArgumentList	attrib_text		97524	1					
ANR	101363	Argument	attrib_text		97524	0					
ANR	101364	Identifier	attrib_text		97524	0					
ANR	101365	Argument	"""true"""		97524	1					
ANR	101366	PrimaryExpression	"""true"""		97524	0					
ANR	101367	CompoundStatement		962:27:56152:56152	97524	1					
ANR	101368	ExpressionStatement	setAllowOverrides ( true )	1102:31:60411:60434	97524	0	True				
ANR	101369	CallExpression	setAllowOverrides ( true )		97524	0					
ANR	101370	Callee	setAllowOverrides		97524	0					
ANR	101371	Identifier	setAllowOverrides		97524	0					
ANR	101372	ArgumentList	true		97524	1					
ANR	101373	Argument	true		97524	0					
ANR	101374	Identifier	true		97524	0					
ANR	101375	ElseStatement	else		97524	0					
ANR	101376	CompoundStatement		966:27:56298:56298	97524	0					
ANR	101377	ExpressionStatement	setAllowOverrides ( false )	1106:31:60557:60581	97524	0	True				
ANR	101378	CallExpression	setAllowOverrides ( false )		97524	0					
ANR	101379	Callee	setAllowOverrides		97524	0					
ANR	101380	Identifier	setAllowOverrides		97524	0					
ANR	101381	ArgumentList	false		97524	1					
ANR	101382	Argument	false		97524	0					
ANR	101383	Identifier	false		97524	0					
ANR	101384	IfStatement	if ( element_qname )		97524	59					
ANR	101385	Condition	element_qname	1111:21:60699:60711	97524	0	True				
ANR	101386	Identifier	element_qname		97524	0					
ANR	101387	CompoundStatement		973:18:56506:56506	97524	1					
ANR	101388	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	1113:21:60755:60810	97524	0	True				
ANR	101389	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		97524	0					
ANR	101390	Callee	axutil_qname_free		97524	0					
ANR	101391	Identifier	axutil_qname_free		97524	0					
ANR	101392	ArgumentList	element_qname		97524	1					
ANR	101393	Argument	element_qname		97524	0					
ANR	101394	Identifier	element_qname		97524	0					
ANR	101395	Argument	Environment :: getEnv ( )		97524	1					
ANR	101396	CallExpression	Environment :: getEnv ( )		97524	0					
ANR	101397	Callee	Environment :: getEnv		97524	0					
ANR	101398	Identifier	Environment :: getEnv		97524	0					
ANR	101399	ArgumentList			97524	1					
ANR	101400	ExpressionStatement	element_qname = NULL	1114:21:60833:60853	97524	1	True				
ANR	101401	AssignmentExpression	element_qname = NULL		97524	0		=			
ANR	101402	Identifier	element_qname		97524	0					
ANR	101403	Identifier	NULL		97524	1					
ANR	101404	ReturnStatement	return status ;	1117:10:60903:60916	97524	60	True				
ANR	101405	Identifier	status		97524	0					
ANR	101406	ReturnType	bool WSF_CALL		97524	1					
ANR	101407	Identifier	AviaryJob :: SubmitJob :: deserialize		97524	2					
ANR	101408	ParameterList	"axiom_node_t * * dp_parent , bool * dp_is_early_node_valid , bool dont_care_minoccurs"		97524	3					
ANR	101409	Parameter	axiom_node_t * * dp_parent	139:42:4136:4159	97524	0	True				
ANR	101410	ParameterType	axiom_node_t * *		97524	0					
ANR	101411	Identifier	dp_parent		97524	1					
ANR	101412	Parameter	bool * dp_is_early_node_valid	139:67:4161:4188	97524	1	True				
ANR	101413	ParameterType	bool *		97524	0					
ANR	101414	Identifier	dp_is_early_node_valid		97524	1					
ANR	101415	Parameter	bool dont_care_minoccurs	139:97:4191:4214	97524	2	True				
ANR	101416	ParameterType	bool		97524	0					
ANR	101417	Identifier	dont_care_minoccurs		97524	1					
ANR	101418	CFGEntryNode	ENTRY		97524		True				
ANR	101419	CFGExitNode	EXIT		97524		True				
ANR	101420	Symbol	& val		97524						
ANR	101421	Symbol	parent		97524						
ANR	101422	Symbol	hi		97524						
ANR	101423	Symbol	is_early_node_valid		97524						
ANR	101424	Symbol	current_node		97524						
ANR	101425	Symbol	axiom_element_get_qname		97524						
ANR	101426	Symbol	AXIS2_FAILURE		97524						
ANR	101427	Symbol	setOwner		97524						
ANR	101428	Symbol	parent_attri		97524						
ANR	101429	Symbol	setSubmission_name		97524						
ANR	101430	Symbol	dp_is_early_node_valid		97524						
ANR	101431	Symbol	WSF_LOG_SI		97524						
ANR	101432	Symbol	& current_node		97524						
ANR	101433	Symbol	setArgs		97524						
ANR	101434	Symbol	& is_early_node_valid		97524						
ANR	101435	Symbol	axutil_hash_next		97524						
ANR	101436	Symbol	* arr_list		97524						
ANR	101437	Symbol	AXIS2_SUCCESS		97524						
ANR	101438	Symbol	element		97524						
ANR	101439	Symbol	val		97524						
ANR	101440	Symbol	strcmp		97524						
ANR	101441	Symbol	NULL		97524						
ANR	101442	Symbol	this		97524						
ANR	101443	Symbol	axiom_node_get_node_type		97524						
ANR	101444	Symbol	axiom_element_get_localname		97524						
ANR	101445	Symbol	arr_list -> size		97524						
ANR	101446	Symbol	text_value		97524						
ANR	101447	Symbol	axiom_node_get_next_sibling		97524						
ANR	101448	Symbol	the_attri		97524						
ANR	101449	Symbol	strstr		97524						
ANR	101450	Symbol	tmp_node		97524						
ANR	101451	Symbol	axutil_strcmp		97524						
ANR	101452	Symbol	setIwd		97524						
ANR	101453	Symbol	true		97524						
ANR	101454	Symbol	axutil_qname_equals		97524						
ANR	101455	Symbol	setRequirements		97524						
ANR	101456	Symbol	setExtra		97524						
ANR	101457	Symbol	status		97524						
ANR	101458	Symbol	sequence_broken		97524						
ANR	101459	Symbol	Environment :: getEnv		97524						
ANR	101460	Symbol	& key		97524						
ANR	101461	Symbol	attribute_hash		97524						
ANR	101462	Symbol	mqname		97524						
ANR	101463	Symbol	* element		97524						
ANR	101464	Symbol	axiom_element_get_attribute_value_by_name		97524						
ANR	101465	Symbol	element_qname		97524						
ANR	101466	Symbol	axutil_qname_create		97524						
ANR	101467	Symbol	axiom_attribute_get_value		97524						
ANR	101468	Symbol	* dp_parent		97524						
ANR	101469	Symbol	axiom_node_get_data_element		97524						
ANR	101470	Symbol	this -> qname		97524						
ANR	101471	Symbol	axiom_element_get_text		97524						
ANR	101472	Symbol	dont_care_minoccurs		97524						
ANR	101473	Symbol	attrib_text		97524						
ANR	101474	Symbol	first_node		97524						
ANR	101475	Symbol	key		97524						
ANR	101476	Symbol	current_element		97524						
ANR	101477	Symbol	parent_element		97524						
ANR	101478	Symbol	dp_parent		97524						
ANR	101479	Symbol	AXIOM_ELEMENT		97524						
ANR	101480	Symbol	false		97524						
ANR	101481	Symbol	i		97524						
ANR	101482	Symbol	Environment :: getEnv ( ) -> log		97524						
ANR	101483	Symbol	* this		97524						
ANR	101484	Symbol	axiom_element_get_all_attributes		97524						
ANR	101485	Symbol	axiom_node_get_first_child		97524						
ANR	101486	Symbol	arr_list		97524						
ANR	101487	Symbol	axutil_hash_first		97524						
ANR	101488	Symbol	* Environment :: getEnv		97524						
ANR	101489	Symbol	setCmd		97524						
ANR	101490	Symbol	element -> deserialize		97524						
ANR	101491	Function	AviaryJob :: SubmitJob :: isParticle	1120:10:60938:61078							
ANR	101492	FunctionDef	AviaryJob :: SubmitJob :: isParticle ()		101491	0					
ANR	101493	CompoundStatement		1122:10:61007:61078	101491	0					
ANR	101494	ReturnStatement	return false ;	1124:17:61039:61051	101491	0	True				
ANR	101495	Identifier	false		101491	0					
ANR	101496	ReturnType	bool WSF_CALL		101491	1					
ANR	101497	Identifier	AviaryJob :: SubmitJob :: isParticle		101491	2					
ANR	101498	ParameterList			101491	3					
ANR	101499	CFGEntryNode	ENTRY		101491		True				
ANR	101500	CFGExitNode	EXIT		101491		True				
ANR	101501	Symbol	false		101491						
ANR	101502	Function	AviaryJob :: SubmitJob :: declareParentNamespaces	1129:10:61092:61411							
ANR	101503	FunctionDef	"AviaryJob :: SubmitJob :: declareParentNamespaces (axiom_element_t * parent_element , axutil_hash_t * namespaces , int * next_ns_index)"		101502	0					
ANR	101504	CompoundStatement		1133:10:61293:61411	101502	0					
ANR	101505	ReturnType	void WSF_CALL		101502	1					
ANR	101506	Identifier	AviaryJob :: SubmitJob :: declareParentNamespaces		101502	2					
ANR	101507	ParameterList	"axiom_element_t * parent_element , axutil_hash_t * namespaces , int * next_ns_index"		101502	3					
ANR	101508	Parameter	axiom_element_t * parent_element	1131:20:61183:61213	101502	0	True				
ANR	101509	ParameterType	axiom_element_t *		101502	0					
ANR	101510	Identifier	parent_element		101502	1					
ANR	101511	Parameter	axutil_hash_t * namespaces	1132:20:61236:61260	101502	1	True				
ANR	101512	ParameterType	axutil_hash_t *		101502	0					
ANR	101513	Identifier	namespaces		101502	1					
ANR	101514	Parameter	int * next_ns_index	1132:47:61263:61280	101502	2	True				
ANR	101515	ParameterType	int *		101502	0					
ANR	101516	Identifier	next_ns_index		101502	1					
ANR	101517	CFGEntryNode	ENTRY		101502		True				
ANR	101518	CFGExitNode	EXIT		101502		True				
ANR	101519	Symbol	parent_element		101502						
ANR	101520	Symbol	next_ns_index		101502						
ANR	101521	Symbol	namespaces		101502						
ANR	101522	Function	AviaryJob :: SubmitJob :: serialize	1141:22:61454:90800							
ANR	101523	FunctionDef	"AviaryJob :: SubmitJob :: serialize (axiom_node_t * parent , axiom_element_t * parent_element , int parent_tag_closed , axutil_hash_t * namespaces , int * next_ns_index)"		101522	0					
ANR	101524	CompoundStatement		1147:8:61645:90800	101522	0					
ANR	101525	IdentifierDeclStatement	axiom_attribute_t * text_attri = NULL ;	1150:15:61688:61724	101522	0	True				
ANR	101526	IdentifierDecl	* text_attri = NULL		101522	0					
ANR	101527	IdentifierDeclType	axiom_attribute_t *		101522	0					
ANR	101528	Identifier	text_attri		101522	1					
ANR	101529	AssignmentExpression	* text_attri = NULL		101522	2		=			
ANR	101530	Identifier	NULL		101522	0					
ANR	101531	Identifier	NULL		101522	1					
ANR	101532	IdentifierDeclStatement	axis2_char_t * string_to_stream ;	1152:13:61753:61783	101522	1	True				
ANR	101533	IdentifierDecl	* string_to_stream		101522	0					
ANR	101534	IdentifierDeclType	axis2_char_t *		101522	0					
ANR	101535	Identifier	string_to_stream		101522	1					
ANR	101536	IdentifierDeclStatement	axiom_node_t * current_node = NULL ;	1155:9:61817:61850	101522	2	True				
ANR	101537	IdentifierDecl	* current_node = NULL		101522	0					
ANR	101538	IdentifierDeclType	axiom_node_t *		101522	0					
ANR	101539	Identifier	current_node		101522	1					
ANR	101540	AssignmentExpression	* current_node = NULL		101522	2		=			
ANR	101541	Identifier	NULL		101522	0					
ANR	101542	Identifier	NULL		101522	1					
ANR	101543	IdentifierDeclStatement	int tag_closed = 0 ;	1156:9:61861:61879	101522	3	True				
ANR	101544	IdentifierDecl	tag_closed = 0		101522	0					
ANR	101545	IdentifierDeclType	int		101522	0					
ANR	101546	Identifier	tag_closed		101522	1					
ANR	101547	AssignmentExpression	tag_closed = 0		101522	2		=			
ANR	101548	Identifier	tag_closed		101522	0					
ANR	101549	PrimaryExpression	0		101522	1					
ANR	101550	IdentifierDeclStatement	axiom_namespace_t * ns1 = NULL ;	1160:16:61918:61947	101522	4	True				
ANR	101551	IdentifierDecl	* ns1 = NULL		101522	0					
ANR	101552	IdentifierDeclType	axiom_namespace_t *		101522	0					
ANR	101553	Identifier	ns1		101522	1					
ANR	101554	AssignmentExpression	* ns1 = NULL		101522	2		=			
ANR	101555	Identifier	NULL		101522	0					
ANR	101556	Identifier	NULL		101522	1					
ANR	101557	IdentifierDeclStatement	axis2_char_t * qname_uri = NULL ;	1162:16:61966:61996	101522	5	True				
ANR	101558	IdentifierDecl	* qname_uri = NULL		101522	0					
ANR	101559	IdentifierDeclType	axis2_char_t *		101522	0					
ANR	101560	Identifier	qname_uri		101522	1					
ANR	101561	AssignmentExpression	* qname_uri = NULL		101522	2		=			
ANR	101562	Identifier	NULL		101522	0					
ANR	101563	Identifier	NULL		101522	1					
ANR	101564	IdentifierDeclStatement	axis2_char_t * qname_prefix = NULL ;	1163:16:62014:62047	101522	6	True				
ANR	101565	IdentifierDecl	* qname_prefix = NULL		101522	0					
ANR	101566	IdentifierDeclType	axis2_char_t *		101522	0					
ANR	101567	Identifier	qname_prefix		101522	1					
ANR	101568	AssignmentExpression	* qname_prefix = NULL		101522	2		=			
ANR	101569	Identifier	NULL		101522	0					
ANR	101570	Identifier	NULL		101522	1					
ANR	101571	IdentifierDeclStatement	axis2_char_t * p_prefix = NULL ;	1164:16:62065:62094	101522	7	True				
ANR	101572	IdentifierDecl	* p_prefix = NULL		101522	0					
ANR	101573	IdentifierDeclType	axis2_char_t *		101522	0					
ANR	101574	Identifier	p_prefix		101522	1					
ANR	101575	AssignmentExpression	* p_prefix = NULL		101522	2		=			
ANR	101576	Identifier	NULL		101522	0					
ANR	101577	Identifier	NULL		101522	1					
ANR	101578	IdentifierDeclStatement	int i = 0 ;	1166:15:62124:62133	101522	8	True				
ANR	101579	IdentifierDecl	i = 0		101522	0					
ANR	101580	IdentifierDeclType	int		101522	0					
ANR	101581	Identifier	i		101522	1					
ANR	101582	AssignmentExpression	i = 0		101522	2		=			
ANR	101583	Identifier	i		101522	0					
ANR	101584	PrimaryExpression	0		101522	1					
ANR	101585	IdentifierDeclStatement	int count = 0 ;	1167:15:62150:62163	101522	9	True				
ANR	101586	IdentifierDecl	count = 0		101522	0					
ANR	101587	IdentifierDeclType	int		101522	0					
ANR	101588	Identifier	count		101522	1					
ANR	101589	AssignmentExpression	count = 0		101522	2		=			
ANR	101590	Identifier	count		101522	0					
ANR	101591	PrimaryExpression	0		101522	1					
ANR	101592	IdentifierDeclStatement	void * element = NULL ;	1168:15:62180:62200	101522	10	True				
ANR	101593	IdentifierDecl	* element = NULL		101522	0					
ANR	101594	IdentifierDeclType	void *		101522	0					
ANR	101595	Identifier	element		101522	1					
ANR	101596	AssignmentExpression	* element = NULL		101522	2		=			
ANR	101597	Identifier	NULL		101522	0					
ANR	101598	Identifier	NULL		101522	1					
ANR	101599	IdentifierDeclStatement	axis2_char_t * text_value_1 ;	1170:20:62236:62262	101522	11	True				
ANR	101600	IdentifierDecl	* text_value_1		101522	0					
ANR	101601	IdentifierDeclType	axis2_char_t *		101522	0					
ANR	101602	Identifier	text_value_1		101522	1					
ANR	101603	IdentifierDeclStatement	axis2_char_t * text_value_1_temp ;	1171:20:62284:62315	101522	12	True				
ANR	101604	IdentifierDecl	* text_value_1_temp		101522	0					
ANR	101605	IdentifierDeclType	axis2_char_t *		101522	0					
ANR	101606	Identifier	text_value_1_temp		101522	1					
ANR	101607	IdentifierDeclStatement	axis2_char_t * text_value_2 ;	1173:20:62358:62384	101522	13	True				
ANR	101608	IdentifierDecl	* text_value_2		101522	0					
ANR	101609	IdentifierDeclType	axis2_char_t *		101522	0					
ANR	101610	Identifier	text_value_2		101522	1					
ANR	101611	IdentifierDeclStatement	axis2_char_t * text_value_2_temp ;	1174:20:62406:62437	101522	14	True				
ANR	101612	IdentifierDecl	* text_value_2_temp		101522	0					
ANR	101613	IdentifierDeclType	axis2_char_t *		101522	0					
ANR	101614	Identifier	text_value_2_temp		101522	1					
ANR	101615	IdentifierDeclStatement	axis2_char_t * text_value_3 ;	1176:20:62480:62506	101522	15	True				
ANR	101616	IdentifierDecl	* text_value_3		101522	0					
ANR	101617	IdentifierDeclType	axis2_char_t *		101522	0					
ANR	101618	Identifier	text_value_3		101522	1					
ANR	101619	IdentifierDeclStatement	axis2_char_t * text_value_3_temp ;	1177:20:62528:62559	101522	16	True				
ANR	101620	IdentifierDecl	* text_value_3_temp		101522	0					
ANR	101621	IdentifierDeclType	axis2_char_t *		101522	0					
ANR	101622	Identifier	text_value_3_temp		101522	1					
ANR	101623	IdentifierDeclStatement	axis2_char_t * text_value_4 ;	1179:20:62602:62628	101522	17	True				
ANR	101624	IdentifierDecl	* text_value_4		101522	0					
ANR	101625	IdentifierDeclType	axis2_char_t *		101522	0					
ANR	101626	Identifier	text_value_4		101522	1					
ANR	101627	IdentifierDeclStatement	axis2_char_t * text_value_4_temp ;	1180:20:62650:62681	101522	18	True				
ANR	101628	IdentifierDecl	* text_value_4_temp		101522	0					
ANR	101629	IdentifierDeclType	axis2_char_t *		101522	0					
ANR	101630	Identifier	text_value_4_temp		101522	1					
ANR	101631	IdentifierDeclStatement	axis2_char_t * text_value_5 ;	1182:20:62724:62750	101522	19	True				
ANR	101632	IdentifierDecl	* text_value_5		101522	0					
ANR	101633	IdentifierDeclType	axis2_char_t *		101522	0					
ANR	101634	Identifier	text_value_5		101522	1					
ANR	101635	IdentifierDeclStatement	axis2_char_t * text_value_5_temp ;	1183:20:62772:62803	101522	20	True				
ANR	101636	IdentifierDecl	* text_value_5_temp		101522	0					
ANR	101637	IdentifierDeclType	axis2_char_t *		101522	0					
ANR	101638	Identifier	text_value_5_temp		101522	1					
ANR	101639	IdentifierDeclStatement	axis2_char_t text_value_6 [ ADB_DEFAULT_DIGIT_LIMIT ] ;	1185:20:62846:62896	101522	21	True				
ANR	101640	IdentifierDecl	text_value_6 [ ADB_DEFAULT_DIGIT_LIMIT ]		101522	0					
ANR	101641	IdentifierDeclType	axis2_char_t [ ADB_DEFAULT_DIGIT_LIMIT ]		101522	0					
ANR	101642	Identifier	text_value_6		101522	1					
ANR	101643	Identifier	ADB_DEFAULT_DIGIT_LIMIT		101522	2					
ANR	101644	IdentifierDeclStatement	axis2_char_t text_value_7 [ ADB_DEFAULT_DIGIT_LIMIT ] ;	1187:20:62939:62989	101522	22	True				
ANR	101645	IdentifierDecl	text_value_7 [ ADB_DEFAULT_DIGIT_LIMIT ]		101522	0					
ANR	101646	IdentifierDeclType	axis2_char_t [ ADB_DEFAULT_DIGIT_LIMIT ]		101522	0					
ANR	101647	Identifier	text_value_7		101522	1					
ANR	101648	Identifier	ADB_DEFAULT_DIGIT_LIMIT		101522	2					
ANR	101649	IdentifierDeclStatement	axis2_char_t text_value_8 [ ADB_DEFAULT_DIGIT_LIMIT ] ;	1189:20:63032:63082	101522	23	True				
ANR	101650	IdentifierDecl	text_value_8 [ ADB_DEFAULT_DIGIT_LIMIT ]		101522	0					
ANR	101651	IdentifierDeclType	axis2_char_t [ ADB_DEFAULT_DIGIT_LIMIT ]		101522	0					
ANR	101652	Identifier	text_value_8		101522	1					
ANR	101653	Identifier	ADB_DEFAULT_DIGIT_LIMIT		101522	2					
ANR	101654	IdentifierDeclStatement	axis2_char_t * text_value = NULL ;	1191:16:63121:63152	101522	24	True				
ANR	101655	IdentifierDecl	* text_value = NULL		101522	0					
ANR	101656	IdentifierDeclType	axis2_char_t *		101522	0					
ANR	101657	Identifier	text_value		101522	1					
ANR	101658	AssignmentExpression	* text_value = NULL		101522	2		=			
ANR	101659	Identifier	NULL		101522	0					
ANR	101660	Identifier	NULL		101522	1					
ANR	101661	IdentifierDeclStatement	axis2_char_t * start_input_str = NULL ;	1193:15:63183:63219	101522	25	True				
ANR	101662	IdentifierDecl	* start_input_str = NULL		101522	0					
ANR	101663	IdentifierDeclType	axis2_char_t *		101522	0					
ANR	101664	Identifier	start_input_str		101522	1					
ANR	101665	AssignmentExpression	* start_input_str = NULL		101522	2		=			
ANR	101666	Identifier	NULL		101522	0					
ANR	101667	Identifier	NULL		101522	1					
ANR	101668	IdentifierDeclStatement	axis2_char_t * end_input_str = NULL ;	1194:15:63236:63270	101522	26	True				
ANR	101669	IdentifierDecl	* end_input_str = NULL		101522	0					
ANR	101670	IdentifierDeclType	axis2_char_t *		101522	0					
ANR	101671	Identifier	end_input_str		101522	1					
ANR	101672	AssignmentExpression	* end_input_str = NULL		101522	2		=			
ANR	101673	Identifier	NULL		101522	0					
ANR	101674	Identifier	NULL		101522	1					
ANR	101675	IdentifierDeclStatement	unsigned int start_input_str_len = 0 ;	1195:15:63287:63323	101522	27	True				
ANR	101676	IdentifierDecl	start_input_str_len = 0		101522	0					
ANR	101677	IdentifierDeclType	unsigned int		101522	0					
ANR	101678	Identifier	start_input_str_len		101522	1					
ANR	101679	AssignmentExpression	start_input_str_len = 0		101522	2		=			
ANR	101680	Identifier	start_input_str_len		101522	0					
ANR	101681	PrimaryExpression	0		101522	1					
ANR	101682	IdentifierDeclStatement	unsigned int end_input_str_len = 0 ;	1196:15:63340:63374	101522	28	True				
ANR	101683	IdentifierDecl	end_input_str_len = 0		101522	0					
ANR	101684	IdentifierDeclType	unsigned int		101522	0					
ANR	101685	Identifier	end_input_str_len		101522	1					
ANR	101686	AssignmentExpression	end_input_str_len = 0		101522	2		=			
ANR	101687	Identifier	end_input_str_len		101522	0					
ANR	101688	PrimaryExpression	0		101522	1					
ANR	101689	IdentifierDeclStatement	axiom_data_source_t * data_source = NULL ;	1199:15:63417:63456	101522	29	True				
ANR	101690	IdentifierDecl	* data_source = NULL		101522	0					
ANR	101691	IdentifierDeclType	axiom_data_source_t *		101522	0					
ANR	101692	Identifier	data_source		101522	1					
ANR	101693	AssignmentExpression	* data_source = NULL		101522	2		=			
ANR	101694	Identifier	NULL		101522	0					
ANR	101695	Identifier	NULL		101522	1					
ANR	101696	IdentifierDeclStatement	axutil_stream_t * stream = NULL ;	1200:15:63473:63503	101522	30	True				
ANR	101697	IdentifierDecl	* stream = NULL		101522	0					
ANR	101698	IdentifierDeclType	axutil_stream_t *		101522	0					
ANR	101699	Identifier	stream		101522	1					
ANR	101700	AssignmentExpression	* stream = NULL		101522	2		=			
ANR	101701	Identifier	NULL		101522	0					
ANR	101702	Identifier	NULL		101522	1					
ANR	101703	IdentifierDeclStatement	int next_ns_index_value = 0 ;	1203:16:63536:63563	101522	31	True				
ANR	101704	IdentifierDecl	next_ns_index_value = 0		101522	0					
ANR	101705	IdentifierDeclType	int		101522	0					
ANR	101706	Identifier	next_ns_index_value		101522	1					
ANR	101707	AssignmentExpression	next_ns_index_value = 0		101522	2		=			
ANR	101708	Identifier	next_ns_index_value		101522	0					
ANR	101709	PrimaryExpression	0		101522	1					
ANR	101710	ExpressionStatement	namespaces = axutil_hash_make ( Environment :: getEnv ( ) )	1205:20:63599:63651	101522	32	True				
ANR	101711	AssignmentExpression	namespaces = axutil_hash_make ( Environment :: getEnv ( ) )		101522	0		=			
ANR	101712	Identifier	namespaces		101522	0					
ANR	101713	CallExpression	axutil_hash_make ( Environment :: getEnv ( ) )		101522	1					
ANR	101714	Callee	axutil_hash_make		101522	0					
ANR	101715	Identifier	axutil_hash_make		101522	0					
ANR	101716	ArgumentList	Environment :: getEnv ( )		101522	1					
ANR	101717	Argument	Environment :: getEnv ( )		101522	0					
ANR	101718	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	101719	Callee	Environment :: getEnv		101522	0					
ANR	101720	Identifier	Environment :: getEnv		101522	0					
ANR	101721	ArgumentList			101522	1					
ANR	101722	ExpressionStatement	next_ns_index = & next_ns_index_value	1206:20:63673:63709	101522	33	True				
ANR	101723	AssignmentExpression	next_ns_index = & next_ns_index_value		101522	0		=			
ANR	101724	Identifier	next_ns_index		101522	0					
ANR	101725	UnaryOperationExpression	& next_ns_index_value		101522	1					
ANR	101726	UnaryOperator	&		101522	0					
ANR	101727	Identifier	next_ns_index_value		101522	1					
ANR	101728	ExpressionStatement	"ns1 = axiom_namespace_create ( Environment :: getEnv ( ) , ""http://job.aviary.grid.redhat.com"" , ""n"" )"	1208:27:63760:63944	101522	34	True				
ANR	101729	AssignmentExpression	"ns1 = axiom_namespace_create ( Environment :: getEnv ( ) , ""http://job.aviary.grid.redhat.com"" , ""n"" )"		101522	0		=			
ANR	101730	Identifier	ns1		101522	0					
ANR	101731	CallExpression	"axiom_namespace_create ( Environment :: getEnv ( ) , ""http://job.aviary.grid.redhat.com"" , ""n"" )"		101522	1					
ANR	101732	Callee	axiom_namespace_create		101522	0					
ANR	101733	Identifier	axiom_namespace_create		101522	0					
ANR	101734	ArgumentList	Environment :: getEnv ( )		101522	1					
ANR	101735	Argument	Environment :: getEnv ( )		101522	0					
ANR	101736	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	101737	Callee	Environment :: getEnv		101522	0					
ANR	101738	Identifier	Environment :: getEnv		101522	0					
ANR	101739	ArgumentList			101522	1					
ANR	101740	Argument	"""http://job.aviary.grid.redhat.com"""		101522	1					
ANR	101741	PrimaryExpression	"""http://job.aviary.grid.redhat.com"""		101522	0					
ANR	101742	Argument	"""n"""		101522	2					
ANR	101743	PrimaryExpression	"""n"""		101522	0					
ANR	101744	ExpressionStatement	"axutil_hash_set ( namespaces , ""http://job.aviary.grid.redhat.com"" , AXIS2_HASH_KEY_STRING , axutil_strdup ( Environment :: getEnv ( ) , ""n"" ) )"	1211:27:63974:64104	101522	35	True				
ANR	101745	CallExpression	"axutil_hash_set ( namespaces , ""http://job.aviary.grid.redhat.com"" , AXIS2_HASH_KEY_STRING , axutil_strdup ( Environment :: getEnv ( ) , ""n"" ) )"		101522	0					
ANR	101746	Callee	axutil_hash_set		101522	0					
ANR	101747	Identifier	axutil_hash_set		101522	0					
ANR	101748	ArgumentList	namespaces		101522	1					
ANR	101749	Argument	namespaces		101522	0					
ANR	101750	Identifier	namespaces		101522	0					
ANR	101751	Argument	"""http://job.aviary.grid.redhat.com"""		101522	1					
ANR	101752	PrimaryExpression	"""http://job.aviary.grid.redhat.com"""		101522	0					
ANR	101753	Argument	AXIS2_HASH_KEY_STRING		101522	2					
ANR	101754	Identifier	AXIS2_HASH_KEY_STRING		101522	0					
ANR	101755	Argument	"axutil_strdup ( Environment :: getEnv ( ) , ""n"" )"		101522	3					
ANR	101756	CallExpression	"axutil_strdup ( Environment :: getEnv ( ) , ""n"" )"		101522	0					
ANR	101757	Callee	axutil_strdup		101522	0					
ANR	101758	Identifier	axutil_strdup		101522	0					
ANR	101759	ArgumentList	Environment :: getEnv ( )		101522	1					
ANR	101760	Argument	Environment :: getEnv ( )		101522	0					
ANR	101761	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	101762	Callee	Environment :: getEnv		101522	0					
ANR	101763	Identifier	Environment :: getEnv		101522	0					
ANR	101764	ArgumentList			101522	1					
ANR	101765	Argument	"""n"""		101522	1					
ANR	101766	PrimaryExpression	"""n"""		101522	0					
ANR	101767	ExpressionStatement	"parent_element = axiom_element_create ( Environment :: getEnv ( ) , NULL , ""SubmitJob"" , ns1 , & parent )"	1214:20:64172:64267	101522	36	True				
ANR	101768	AssignmentExpression	"parent_element = axiom_element_create ( Environment :: getEnv ( ) , NULL , ""SubmitJob"" , ns1 , & parent )"		101522	0		=			
ANR	101769	Identifier	parent_element		101522	0					
ANR	101770	CallExpression	"axiom_element_create ( Environment :: getEnv ( ) , NULL , ""SubmitJob"" , ns1 , & parent )"		101522	1					
ANR	101771	Callee	axiom_element_create		101522	0					
ANR	101772	Identifier	axiom_element_create		101522	0					
ANR	101773	ArgumentList	Environment :: getEnv ( )		101522	1					
ANR	101774	Argument	Environment :: getEnv ( )		101522	0					
ANR	101775	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	101776	Callee	Environment :: getEnv		101522	0					
ANR	101777	Identifier	Environment :: getEnv		101522	0					
ANR	101778	ArgumentList			101522	1					
ANR	101779	Argument	NULL		101522	1					
ANR	101780	Identifier	NULL		101522	0					
ANR	101781	Argument	"""SubmitJob"""		101522	2					
ANR	101782	PrimaryExpression	"""SubmitJob"""		101522	0					
ANR	101783	Argument	ns1		101522	3					
ANR	101784	Identifier	ns1		101522	0					
ANR	101785	Argument	& parent		101522	4					
ANR	101786	UnaryOperationExpression	& parent		101522	0					
ANR	101787	UnaryOperator	&		101522	0					
ANR	101788	Identifier	parent		101522	1					
ANR	101789	ExpressionStatement	"axiom_element_set_namespace ( parent_element , Environment :: getEnv ( ) , ns1 , parent )"	1217:20:64331:64410	101522	37	True				
ANR	101790	CallExpression	"axiom_element_set_namespace ( parent_element , Environment :: getEnv ( ) , ns1 , parent )"		101522	0					
ANR	101791	Callee	axiom_element_set_namespace		101522	0					
ANR	101792	Identifier	axiom_element_set_namespace		101522	0					
ANR	101793	ArgumentList	parent_element		101522	1					
ANR	101794	Argument	parent_element		101522	0					
ANR	101795	Identifier	parent_element		101522	0					
ANR	101796	Argument	Environment :: getEnv ( )		101522	1					
ANR	101797	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	101798	Callee	Environment :: getEnv		101522	0					
ANR	101799	Identifier	Environment :: getEnv		101522	0					
ANR	101800	ArgumentList			101522	1					
ANR	101801	Argument	ns1		101522	2					
ANR	101802	Identifier	ns1		101522	0					
ANR	101803	Argument	parent		101522	3					
ANR	101804	Identifier	parent		101522	0					
ANR	101805	ExpressionStatement	"data_source = axiom_data_source_create ( Environment :: getEnv ( ) , parent , & current_node )"	1221:20:64447:64531	101522	38	True				
ANR	101806	AssignmentExpression	"data_source = axiom_data_source_create ( Environment :: getEnv ( ) , parent , & current_node )"		101522	0		=			
ANR	101807	Identifier	data_source		101522	0					
ANR	101808	CallExpression	"axiom_data_source_create ( Environment :: getEnv ( ) , parent , & current_node )"		101522	1					
ANR	101809	Callee	axiom_data_source_create		101522	0					
ANR	101810	Identifier	axiom_data_source_create		101522	0					
ANR	101811	ArgumentList	Environment :: getEnv ( )		101522	1					
ANR	101812	Argument	Environment :: getEnv ( )		101522	0					
ANR	101813	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	101814	Callee	Environment :: getEnv		101522	0					
ANR	101815	Identifier	Environment :: getEnv		101522	0					
ANR	101816	ArgumentList			101522	1					
ANR	101817	Argument	parent		101522	1					
ANR	101818	Identifier	parent		101522	0					
ANR	101819	Argument	& current_node		101522	2					
ANR	101820	UnaryOperationExpression	& current_node		101522	0					
ANR	101821	UnaryOperator	&		101522	0					
ANR	101822	Identifier	current_node		101522	1					
ANR	101823	ExpressionStatement	"stream = axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"	1222:20:64553:64626	101522	39	True				
ANR	101824	AssignmentExpression	"stream = axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"		101522	0		=			
ANR	101825	Identifier	stream		101522	0					
ANR	101826	CallExpression	"axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"		101522	1					
ANR	101827	Callee	axiom_data_source_get_stream		101522	0					
ANR	101828	Identifier	axiom_data_source_get_stream		101522	0					
ANR	101829	ArgumentList	data_source		101522	1					
ANR	101830	Argument	data_source		101522	0					
ANR	101831	Identifier	data_source		101522	0					
ANR	101832	Argument	Environment :: getEnv ( )		101522	1					
ANR	101833	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	101834	Callee	Environment :: getEnv		101522	0					
ANR	101835	Identifier	Environment :: getEnv		101522	0					
ANR	101836	ArgumentList			101522	1					
ANR	101837	IfStatement	if ( ! parent_tag_closed )		101522	40					
ANR	101838	Condition	! parent_tag_closed	1224:15:64662:64679	101522	0	True				
ANR	101839	UnaryOperationExpression	! parent_tag_closed		101522	0					
ANR	101840	UnaryOperator	!		101522	0					
ANR	101841	Identifier	parent_tag_closed		101522	1					
ANR	101842	CompoundStatement		79:12:3048:3048	101522	1					
ANR	101843	IfStatement	if ( isValidAllowOverrides )		101522	0					
ANR	101844	Condition	isValidAllowOverrides	1227:19:64728:64748	101522	0	True				
ANR	101845	Identifier	isValidAllowOverrides		101522	0					
ANR	101846	CompoundStatement		82:16:3121:3121	101522	1					
ANR	101847	ExpressionStatement	p_prefix = NULL	1230:24:64810:64825	101522	0	True				
ANR	101848	AssignmentExpression	p_prefix = NULL		101522	0		=			
ANR	101849	Identifier	p_prefix		101522	0					
ANR	101850	Identifier	NULL		101522	1					
ANR	101851	ExpressionStatement	"text_value = ( axis2_char_t * ) ( ( property_AllowOverrides ) ? ""true"" : ""false"" )"	1233:27:64905:64975	101522	1	True				
ANR	101852	AssignmentExpression	"text_value = ( axis2_char_t * ) ( ( property_AllowOverrides ) ? ""true"" : ""false"" )"		101522	0		=			
ANR	101853	Identifier	text_value		101522	0					
ANR	101854	CastExpression	"( axis2_char_t * ) ( ( property_AllowOverrides ) ? ""true"" : ""false"" )"		101522	1					
ANR	101855	CastTarget	axis2_char_t *		101522	0					
ANR	101856	ConditionalExpression	"( property_AllowOverrides ) ? ""true"" : ""false"""		101522	1					
ANR	101857	Condition	property_AllowOverrides		101522	0					
ANR	101858	Identifier	property_AllowOverrides		101522	0					
ANR	101859	PrimaryExpression	"""true"""		101522	1					
ANR	101860	PrimaryExpression	"""false"""		101522	2					
ANR	101861	ExpressionStatement	"string_to_stream = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT + axutil_strlen ( text_value ) + axutil_strlen ( ""allowOverrides"" ) ) )"	1234:27:65004:65399	101522	2	True				
ANR	101862	AssignmentExpression	"string_to_stream = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT + axutil_strlen ( text_value ) + axutil_strlen ( ""allowOverrides"" ) ) )"		101522	0		=			
ANR	101863	Identifier	string_to_stream		101522	0					
ANR	101864	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT + axutil_strlen ( text_value ) + axutil_strlen ( ""allowOverrides"" ) ) )"		101522	1					
ANR	101865	CastTarget	axis2_char_t *		101522	0					
ANR	101866	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT + axutil_strlen ( text_value ) + axutil_strlen ( ""allowOverrides"" ) ) )"		101522	1					
ANR	101867	Callee	AXIS2_MALLOC		101522	0					
ANR	101868	Identifier	AXIS2_MALLOC		101522	0					
ANR	101869	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	101870	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	101871	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	101872	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	101873	Callee	Environment :: getEnv		101522	0					
ANR	101874	Identifier	Environment :: getEnv		101522	0					
ANR	101875	ArgumentList			101522	1					
ANR	101876	Identifier	allocator		101522	1					
ANR	101877	Argument	"sizeof ( axis2_char_t ) * ( 5 + ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT + axutil_strlen ( text_value ) + axutil_strlen ( ""allowOverrides"" ) )"		101522	1					
ANR	101878	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 5 + ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT + axutil_strlen ( text_value ) + axutil_strlen ( ""allowOverrides"" ) )"		101522	0		*			
ANR	101879	SizeofExpression	sizeof ( axis2_char_t )		101522	0					
ANR	101880	Sizeof	sizeof		101522	0					
ANR	101881	SizeofOperand	axis2_char_t		101522	1					
ANR	101882	AdditiveExpression	"5 + ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT + axutil_strlen ( text_value ) + axutil_strlen ( ""allowOverrides"" )"		101522	1		+			
ANR	101883	PrimaryExpression	5		101522	0					
ANR	101884	AdditiveExpression	"ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT + axutil_strlen ( text_value ) + axutil_strlen ( ""allowOverrides"" )"		101522	1		+			
ANR	101885	Identifier	ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT		101522	0					
ANR	101886	AdditiveExpression	"axutil_strlen ( text_value ) + axutil_strlen ( ""allowOverrides"" )"		101522	1		+			
ANR	101887	CallExpression	axutil_strlen ( text_value )		101522	0					
ANR	101888	Callee	axutil_strlen		101522	0					
ANR	101889	Identifier	axutil_strlen		101522	0					
ANR	101890	ArgumentList	text_value		101522	1					
ANR	101891	Argument	text_value		101522	0					
ANR	101892	Identifier	text_value		101522	0					
ANR	101893	CallExpression	"axutil_strlen ( ""allowOverrides"" )"		101522	1					
ANR	101894	Callee	axutil_strlen		101522	0					
ANR	101895	Identifier	axutil_strlen		101522	0					
ANR	101896	ArgumentList	"""allowOverrides"""		101522	1					
ANR	101897	Argument	"""allowOverrides"""		101522	0					
ANR	101898	PrimaryExpression	"""allowOverrides"""		101522	0					
ANR	101899	ExpressionStatement	"sprintf ( string_to_stream , "" %s%s%s=\\""%s\\"""" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" , ""allowOverrides"" , text_value )"	1238:27:65428:65622	101522	3	True				
ANR	101900	CallExpression	"sprintf ( string_to_stream , "" %s%s%s=\\""%s\\"""" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" , ""allowOverrides"" , text_value )"		101522	0					
ANR	101901	Callee	sprintf		101522	0					
ANR	101902	Identifier	sprintf		101522	0					
ANR	101903	ArgumentList	string_to_stream		101522	1					
ANR	101904	Argument	string_to_stream		101522	0					
ANR	101905	Identifier	string_to_stream		101522	0					
ANR	101906	Argument	""" %s%s%s=\\""%s\\"""""		101522	1					
ANR	101907	PrimaryExpression	""" %s%s%s=\\""%s\\"""""		101522	0					
ANR	101908	Argument	"p_prefix ? p_prefix : """""		101522	2					
ANR	101909	ConditionalExpression	"p_prefix ? p_prefix : """""		101522	0					
ANR	101910	Condition	p_prefix		101522	0					
ANR	101911	Identifier	p_prefix		101522	0					
ANR	101912	Identifier	p_prefix		101522	1					
ANR	101913	PrimaryExpression	""""""		101522	2					
ANR	101914	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	3					
ANR	101915	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	0					
ANR	101916	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0					
ANR	101917	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0		&&			
ANR	101918	Identifier	p_prefix		101522	0					
ANR	101919	CallExpression	"axutil_strcmp ( p_prefix , """" )"		101522	1					
ANR	101920	Callee	axutil_strcmp		101522	0					
ANR	101921	Identifier	axutil_strcmp		101522	0					
ANR	101922	ArgumentList	p_prefix		101522	1					
ANR	101923	Argument	p_prefix		101522	0					
ANR	101924	Identifier	p_prefix		101522	0					
ANR	101925	Argument	""""""		101522	1					
ANR	101926	PrimaryExpression	""""""		101522	0					
ANR	101927	PrimaryExpression	""":"""		101522	1					
ANR	101928	PrimaryExpression	""""""		101522	2					
ANR	101929	Argument	"""allowOverrides"""		101522	4					
ANR	101930	PrimaryExpression	"""allowOverrides"""		101522	0					
ANR	101931	Argument	text_value		101522	5					
ANR	101932	Identifier	text_value		101522	0					
ANR	101933	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , string_to_stream , axutil_strlen ( string_to_stream ) )"	1240:27:65651:65752	101522	4	True				
ANR	101934	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , string_to_stream , axutil_strlen ( string_to_stream ) )"		101522	0					
ANR	101935	Callee	axutil_stream_write		101522	0					
ANR	101936	Identifier	axutil_stream_write		101522	0					
ANR	101937	ArgumentList	stream		101522	1					
ANR	101938	Argument	stream		101522	0					
ANR	101939	Identifier	stream		101522	0					
ANR	101940	Argument	Environment :: getEnv ( )		101522	1					
ANR	101941	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	101942	Callee	Environment :: getEnv		101522	0					
ANR	101943	Identifier	Environment :: getEnv		101522	0					
ANR	101944	ArgumentList			101522	1					
ANR	101945	Argument	string_to_stream		101522	2					
ANR	101946	Identifier	string_to_stream		101522	0					
ANR	101947	Argument	axutil_strlen ( string_to_stream )		101522	3					
ANR	101948	CallExpression	axutil_strlen ( string_to_stream )		101522	0					
ANR	101949	Callee	axutil_strlen		101522	0					
ANR	101950	Identifier	axutil_strlen		101522	0					
ANR	101951	ArgumentList	string_to_stream		101522	1					
ANR	101952	Argument	string_to_stream		101522	0					
ANR	101953	Identifier	string_to_stream		101522	0					
ANR	101954	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , string_to_stream )"	1241:27:65781:65844	101522	5	True				
ANR	101955	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , string_to_stream )"		101522	0					
ANR	101956	Callee	AXIS2_FREE		101522	0					
ANR	101957	Identifier	AXIS2_FREE		101522	0					
ANR	101958	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	101959	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	101960	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	101961	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	101962	Callee	Environment :: getEnv		101522	0					
ANR	101963	Identifier	Environment :: getEnv		101522	0					
ANR	101964	ArgumentList			101522	1					
ANR	101965	Identifier	allocator		101522	1					
ANR	101966	Argument	string_to_stream		101522	1					
ANR	101967	Identifier	string_to_stream		101522	0					
ANR	101968	ExpressionStatement	p_prefix = NULL	1247:23:65962:65977	101522	41	True				
ANR	101969	AssignmentExpression	p_prefix = NULL		101522	0		=			
ANR	101970	Identifier	p_prefix		101522	0					
ANR	101971	Identifier	NULL		101522	1					
ANR	101972	IfStatement	if ( ! isValidCmd )		101522	42					
ANR	101973	Condition	! isValidCmd	1250:23:66026:66036	101522	0	True				
ANR	101974	UnaryOperationExpression	! isValidCmd		101522	0					
ANR	101975	UnaryOperator	!		101522	0					
ANR	101976	Identifier	isValidCmd		101522	1					
ANR	101977	CompoundStatement		105:19:4412:4412	101522	1					
ANR	101978	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Nil value found in non-nillable property cmd"" )"	1254:28:66140:66244	101522	0	True				
ANR	101979	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Nil value found in non-nillable property cmd"" )"		101522	0					
ANR	101980	Callee	WSF_LOG_ERROR_MSG		101522	0					
ANR	101981	Identifier	WSF_LOG_ERROR_MSG		101522	0					
ANR	101982	ArgumentList	Environment :: getEnv ( ) -> log		101522	1					
ANR	101983	Argument	Environment :: getEnv ( ) -> log		101522	0					
ANR	101984	PtrMemberAccess	Environment :: getEnv ( ) -> log		101522	0					
ANR	101985	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	101986	Callee	Environment :: getEnv		101522	0					
ANR	101987	Identifier	Environment :: getEnv		101522	0					
ANR	101988	ArgumentList			101522	1					
ANR	101989	Identifier	log		101522	1					
ANR	101990	Argument	WSF_LOG_SI		101522	1					
ANR	101991	Identifier	WSF_LOG_SI		101522	0					
ANR	101992	Argument	"""Nil value found in non-nillable property cmd"""		101522	2					
ANR	101993	PrimaryExpression	"""Nil value found in non-nillable property cmd"""		101522	0					
ANR	101994	ReturnStatement	return NULL ;	1255:28:66274:66285	101522	1	True				
ANR	101995	Identifier	NULL		101522	0					
ANR	101996	ElseStatement	else		101522	0					
ANR	101997	CompoundStatement		113:19:4732:4732	101522	0					
ANR	101998	ExpressionStatement	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""cmd"" ) ) )"	1260:21:66401:66625	101522	0	True				
ANR	101999	AssignmentExpression	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""cmd"" ) ) )"		101522	0		=			
ANR	102000	Identifier	start_input_str		101522	0					
ANR	102001	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""cmd"" ) ) )"		101522	1					
ANR	102002	CastTarget	axis2_char_t *		101522	0					
ANR	102003	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""cmd"" ) ) )"		101522	1					
ANR	102004	Callee	AXIS2_MALLOC		101522	0					
ANR	102005	Identifier	AXIS2_MALLOC		101522	0					
ANR	102006	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	102007	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102008	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102009	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102010	Callee	Environment :: getEnv		101522	0					
ANR	102011	Identifier	Environment :: getEnv		101522	0					
ANR	102012	ArgumentList			101522	1					
ANR	102013	Identifier	allocator		101522	1					
ANR	102014	Argument	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""cmd"" ) )"		101522	1					
ANR	102015	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""cmd"" ) )"		101522	0		*			
ANR	102016	SizeofExpression	sizeof ( axis2_char_t )		101522	0					
ANR	102017	Sizeof	sizeof		101522	0					
ANR	102018	SizeofOperand	axis2_char_t		101522	1					
ANR	102019	AdditiveExpression	"4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""cmd"" )"		101522	1		+			
ANR	102020	PrimaryExpression	4		101522	0					
ANR	102021	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""cmd"" )"		101522	1		+			
ANR	102022	CallExpression	axutil_strlen ( p_prefix )		101522	0					
ANR	102023	Callee	axutil_strlen		101522	0					
ANR	102024	Identifier	axutil_strlen		101522	0					
ANR	102025	ArgumentList	p_prefix		101522	1					
ANR	102026	Argument	p_prefix		101522	0					
ANR	102027	Identifier	p_prefix		101522	0					
ANR	102028	CallExpression	"axutil_strlen ( ""cmd"" )"		101522	1					
ANR	102029	Callee	axutil_strlen		101522	0					
ANR	102030	Identifier	axutil_strlen		101522	0					
ANR	102031	ArgumentList	"""cmd"""		101522	1					
ANR	102032	Argument	"""cmd"""		101522	0					
ANR	102033	PrimaryExpression	"""cmd"""		101522	0					
ANR	102034	ExpressionStatement	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""cmd"" ) ) )"	1265:21:66751:66938	101522	1	True				
ANR	102035	AssignmentExpression	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""cmd"" ) ) )"		101522	0		=			
ANR	102036	Identifier	end_input_str		101522	0					
ANR	102037	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""cmd"" ) ) )"		101522	1					
ANR	102038	CastTarget	axis2_char_t *		101522	0					
ANR	102039	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""cmd"" ) ) )"		101522	1					
ANR	102040	Callee	AXIS2_MALLOC		101522	0					
ANR	102041	Identifier	AXIS2_MALLOC		101522	0					
ANR	102042	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	102043	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102044	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102045	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102046	Callee	Environment :: getEnv		101522	0					
ANR	102047	Identifier	Environment :: getEnv		101522	0					
ANR	102048	ArgumentList			101522	1					
ANR	102049	Identifier	allocator		101522	1					
ANR	102050	Argument	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""cmd"" ) )"		101522	1					
ANR	102051	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""cmd"" ) )"		101522	0		*			
ANR	102052	SizeofExpression	sizeof ( axis2_char_t )		101522	0					
ANR	102053	Sizeof	sizeof		101522	0					
ANR	102054	SizeofOperand	axis2_char_t		101522	1					
ANR	102055	AdditiveExpression	"5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""cmd"" )"		101522	1		+			
ANR	102056	PrimaryExpression	5		101522	0					
ANR	102057	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""cmd"" )"		101522	1		+			
ANR	102058	CallExpression	axutil_strlen ( p_prefix )		101522	0					
ANR	102059	Callee	axutil_strlen		101522	0					
ANR	102060	Identifier	axutil_strlen		101522	0					
ANR	102061	ArgumentList	p_prefix		101522	1					
ANR	102062	Argument	p_prefix		101522	0					
ANR	102063	Identifier	p_prefix		101522	0					
ANR	102064	CallExpression	"axutil_strlen ( ""cmd"" )"		101522	1					
ANR	102065	Callee	axutil_strlen		101522	0					
ANR	102066	Identifier	axutil_strlen		101522	0					
ANR	102067	ArgumentList	"""cmd"""		101522	1					
ANR	102068	Argument	"""cmd"""		101522	0					
ANR	102069	PrimaryExpression	"""cmd"""		101522	0					
ANR	102070	ExpressionStatement	"sprintf ( start_input_str , ""<%s%scmd>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	1280:28:67294:67469	101522	2	True				
ANR	102071	CallExpression	"sprintf ( start_input_str , ""<%s%scmd>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		101522	0					
ANR	102072	Callee	sprintf		101522	0					
ANR	102073	Identifier	sprintf		101522	0					
ANR	102074	ArgumentList	start_input_str		101522	1					
ANR	102075	Argument	start_input_str		101522	0					
ANR	102076	Identifier	start_input_str		101522	0					
ANR	102077	Argument	"""<%s%scmd>"""		101522	1					
ANR	102078	PrimaryExpression	"""<%s%scmd>"""		101522	0					
ANR	102079	Argument	"p_prefix ? p_prefix : """""		101522	2					
ANR	102080	ConditionalExpression	"p_prefix ? p_prefix : """""		101522	0					
ANR	102081	Condition	p_prefix		101522	0					
ANR	102082	Identifier	p_prefix		101522	0					
ANR	102083	Identifier	p_prefix		101522	1					
ANR	102084	PrimaryExpression	""""""		101522	2					
ANR	102085	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	3					
ANR	102086	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	0					
ANR	102087	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0					
ANR	102088	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0		&&			
ANR	102089	Identifier	p_prefix		101522	0					
ANR	102090	CallExpression	"axutil_strcmp ( p_prefix , """" )"		101522	1					
ANR	102091	Callee	axutil_strcmp		101522	0					
ANR	102092	Identifier	axutil_strcmp		101522	0					
ANR	102093	ArgumentList	p_prefix		101522	1					
ANR	102094	Argument	p_prefix		101522	0					
ANR	102095	Identifier	p_prefix		101522	0					
ANR	102096	Argument	""""""		101522	1					
ANR	102097	PrimaryExpression	""""""		101522	0					
ANR	102098	PrimaryExpression	""":"""		101522	1					
ANR	102099	PrimaryExpression	""""""		101522	2					
ANR	102100	ExpressionStatement	start_input_str_len = axutil_strlen ( start_input_str )	1284:24:67524:67576	101522	3	True				
ANR	102101	AssignmentExpression	start_input_str_len = axutil_strlen ( start_input_str )		101522	0		=			
ANR	102102	Identifier	start_input_str_len		101522	0					
ANR	102103	CallExpression	axutil_strlen ( start_input_str )		101522	1					
ANR	102104	Callee	axutil_strlen		101522	0					
ANR	102105	Identifier	axutil_strlen		101522	0					
ANR	102106	ArgumentList	start_input_str		101522	1					
ANR	102107	Argument	start_input_str		101522	0					
ANR	102108	Identifier	start_input_str		101522	0					
ANR	102109	ExpressionStatement	"sprintf ( end_input_str , ""</%s%scmd>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	1285:24:67602:67776	101522	4	True				
ANR	102110	CallExpression	"sprintf ( end_input_str , ""</%s%scmd>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		101522	0					
ANR	102111	Callee	sprintf		101522	0					
ANR	102112	Identifier	sprintf		101522	0					
ANR	102113	ArgumentList	end_input_str		101522	1					
ANR	102114	Argument	end_input_str		101522	0					
ANR	102115	Identifier	end_input_str		101522	0					
ANR	102116	Argument	"""</%s%scmd>"""		101522	1					
ANR	102117	PrimaryExpression	"""</%s%scmd>"""		101522	0					
ANR	102118	Argument	"p_prefix ? p_prefix : """""		101522	2					
ANR	102119	ConditionalExpression	"p_prefix ? p_prefix : """""		101522	0					
ANR	102120	Condition	p_prefix		101522	0					
ANR	102121	Identifier	p_prefix		101522	0					
ANR	102122	Identifier	p_prefix		101522	1					
ANR	102123	PrimaryExpression	""""""		101522	2					
ANR	102124	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	3					
ANR	102125	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	0					
ANR	102126	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0					
ANR	102127	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0		&&			
ANR	102128	Identifier	p_prefix		101522	0					
ANR	102129	CallExpression	"axutil_strcmp ( p_prefix , """" )"		101522	1					
ANR	102130	Callee	axutil_strcmp		101522	0					
ANR	102131	Identifier	axutil_strcmp		101522	0					
ANR	102132	ArgumentList	p_prefix		101522	1					
ANR	102133	Argument	p_prefix		101522	0					
ANR	102134	Identifier	p_prefix		101522	0					
ANR	102135	Argument	""""""		101522	1					
ANR	102136	PrimaryExpression	""""""		101522	0					
ANR	102137	PrimaryExpression	""":"""		101522	1					
ANR	102138	PrimaryExpression	""""""		101522	2					
ANR	102139	ExpressionStatement	end_input_str_len = axutil_strlen ( end_input_str )	1288:24:67802:67850	101522	5	True				
ANR	102140	AssignmentExpression	end_input_str_len = axutil_strlen ( end_input_str )		101522	0		=			
ANR	102141	Identifier	end_input_str_len		101522	0					
ANR	102142	CallExpression	axutil_strlen ( end_input_str )		101522	1					
ANR	102143	Callee	axutil_strlen		101522	0					
ANR	102144	Identifier	axutil_strlen		101522	0					
ANR	102145	ArgumentList	end_input_str		101522	1					
ANR	102146	Argument	end_input_str		101522	0					
ANR	102147	Identifier	end_input_str		101522	0					
ANR	102148	ExpressionStatement	text_value_1 = ( axis2_char_t * ) property_Cmd . c_str ( )	1290:27:67900:67950	101522	6	True				
ANR	102149	AssignmentExpression	text_value_1 = ( axis2_char_t * ) property_Cmd . c_str ( )		101522	0		=			
ANR	102150	Identifier	text_value_1		101522	0					
ANR	102151	CastExpression	( axis2_char_t * ) property_Cmd . c_str ( )		101522	1					
ANR	102152	CastTarget	axis2_char_t *		101522	0					
ANR	102153	CallExpression	property_Cmd . c_str ( )		101522	1					
ANR	102154	Callee	property_Cmd . c_str		101522	0					
ANR	102155	MemberAccess	property_Cmd . c_str		101522	0					
ANR	102156	Identifier	property_Cmd		101522	0					
ANR	102157	Identifier	c_str		101522	1					
ANR	102158	ArgumentList			101522	1					
ANR	102159	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"	1292:27:68007:68095	101522	7	True				
ANR	102160	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"		101522	0					
ANR	102161	Callee	axutil_stream_write		101522	0					
ANR	102162	Identifier	axutil_stream_write		101522	0					
ANR	102163	ArgumentList	stream		101522	1					
ANR	102164	Argument	stream		101522	0					
ANR	102165	Identifier	stream		101522	0					
ANR	102166	Argument	Environment :: getEnv ( )		101522	1					
ANR	102167	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102168	Callee	Environment :: getEnv		101522	0					
ANR	102169	Identifier	Environment :: getEnv		101522	0					
ANR	102170	ArgumentList			101522	1					
ANR	102171	Argument	start_input_str		101522	2					
ANR	102172	Identifier	start_input_str		101522	0					
ANR	102173	Argument	start_input_str_len		101522	3					
ANR	102174	Identifier	start_input_str_len		101522	0					
ANR	102175	ExpressionStatement	"text_value_1_temp = axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_1 , true )"	1295:27:68181:68267	101522	8	True				
ANR	102176	AssignmentExpression	"text_value_1_temp = axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_1 , true )"		101522	0		=			
ANR	102177	Identifier	text_value_1_temp		101522	0					
ANR	102178	CallExpression	"axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_1 , true )"		101522	1					
ANR	102179	Callee	axutil_xml_quote_string		101522	0					
ANR	102180	Identifier	axutil_xml_quote_string		101522	0					
ANR	102181	ArgumentList	Environment :: getEnv ( )		101522	1					
ANR	102182	Argument	Environment :: getEnv ( )		101522	0					
ANR	102183	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102184	Callee	Environment :: getEnv		101522	0					
ANR	102185	Identifier	Environment :: getEnv		101522	0					
ANR	102186	ArgumentList			101522	1					
ANR	102187	Argument	text_value_1		101522	1					
ANR	102188	Identifier	text_value_1		101522	0					
ANR	102189	Argument	true		101522	2					
ANR	102190	Identifier	true		101522	0					
ANR	102191	IfStatement	if ( text_value_1_temp )		101522	9					
ANR	102192	Condition	text_value_1_temp	1296:31:68300:68316	101522	0	True				
ANR	102193	Identifier	text_value_1_temp		101522	0					
ANR	102194	CompoundStatement		151:27:6700:6700	101522	1					
ANR	102195	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_1_temp , axutil_strlen ( text_value_1_temp ) )"	1298:31:68379:68482	101522	0	True				
ANR	102196	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_1_temp , axutil_strlen ( text_value_1_temp ) )"		101522	0					
ANR	102197	Callee	axutil_stream_write		101522	0					
ANR	102198	Identifier	axutil_stream_write		101522	0					
ANR	102199	ArgumentList	stream		101522	1					
ANR	102200	Argument	stream		101522	0					
ANR	102201	Identifier	stream		101522	0					
ANR	102202	Argument	Environment :: getEnv ( )		101522	1					
ANR	102203	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102204	Callee	Environment :: getEnv		101522	0					
ANR	102205	Identifier	Environment :: getEnv		101522	0					
ANR	102206	ArgumentList			101522	1					
ANR	102207	Argument	text_value_1_temp		101522	2					
ANR	102208	Identifier	text_value_1_temp		101522	0					
ANR	102209	Argument	axutil_strlen ( text_value_1_temp )		101522	3					
ANR	102210	CallExpression	axutil_strlen ( text_value_1_temp )		101522	0					
ANR	102211	Callee	axutil_strlen		101522	0					
ANR	102212	Identifier	axutil_strlen		101522	0					
ANR	102213	ArgumentList	text_value_1_temp		101522	1					
ANR	102214	Argument	text_value_1_temp		101522	0					
ANR	102215	Identifier	text_value_1_temp		101522	0					
ANR	102216	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value_1_temp )"	1299:31:68515:68578	101522	1	True				
ANR	102217	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value_1_temp )"		101522	0					
ANR	102218	Callee	AXIS2_FREE		101522	0					
ANR	102219	Identifier	AXIS2_FREE		101522	0					
ANR	102220	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	102221	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102222	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102223	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102224	Callee	Environment :: getEnv		101522	0					
ANR	102225	Identifier	Environment :: getEnv		101522	0					
ANR	102226	ArgumentList			101522	1					
ANR	102227	Identifier	allocator		101522	1					
ANR	102228	Argument	text_value_1_temp		101522	1					
ANR	102229	Identifier	text_value_1_temp		101522	0					
ANR	102230	ElseStatement	else		101522	0					
ANR	102231	CompoundStatement		156:27:7022:7022	101522	0					
ANR	102232	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_1 , axutil_strlen ( text_value_1 ) )"	1303:31:68701:68794	101522	0	True				
ANR	102233	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_1 , axutil_strlen ( text_value_1 ) )"		101522	0					
ANR	102234	Callee	axutil_stream_write		101522	0					
ANR	102235	Identifier	axutil_stream_write		101522	0					
ANR	102236	ArgumentList	stream		101522	1					
ANR	102237	Argument	stream		101522	0					
ANR	102238	Identifier	stream		101522	0					
ANR	102239	Argument	Environment :: getEnv ( )		101522	1					
ANR	102240	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102241	Callee	Environment :: getEnv		101522	0					
ANR	102242	Identifier	Environment :: getEnv		101522	0					
ANR	102243	ArgumentList			101522	1					
ANR	102244	Argument	text_value_1		101522	2					
ANR	102245	Identifier	text_value_1		101522	0					
ANR	102246	Argument	axutil_strlen ( text_value_1 )		101522	3					
ANR	102247	CallExpression	axutil_strlen ( text_value_1 )		101522	0					
ANR	102248	Callee	axutil_strlen		101522	0					
ANR	102249	Identifier	axutil_strlen		101522	0					
ANR	102250	ArgumentList	text_value_1		101522	1					
ANR	102251	Argument	text_value_1		101522	0					
ANR	102252	Identifier	text_value_1		101522	0					
ANR	102253	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"	1306:27:68880:68964	101522	10	True				
ANR	102254	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"		101522	0					
ANR	102255	Callee	axutil_stream_write		101522	0					
ANR	102256	Identifier	axutil_stream_write		101522	0					
ANR	102257	ArgumentList	stream		101522	1					
ANR	102258	Argument	stream		101522	0					
ANR	102259	Identifier	stream		101522	0					
ANR	102260	Argument	Environment :: getEnv ( )		101522	1					
ANR	102261	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102262	Callee	Environment :: getEnv		101522	0					
ANR	102263	Identifier	Environment :: getEnv		101522	0					
ANR	102264	ArgumentList			101522	1					
ANR	102265	Argument	end_input_str		101522	2					
ANR	102266	Identifier	end_input_str		101522	0					
ANR	102267	Argument	end_input_str_len		101522	3					
ANR	102268	Identifier	end_input_str_len		101522	0					
ANR	102269	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"	1309:21:69037:69097	101522	11	True				
ANR	102270	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"		101522	0					
ANR	102271	Callee	AXIS2_FREE		101522	0					
ANR	102272	Identifier	AXIS2_FREE		101522	0					
ANR	102273	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	102274	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102275	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102276	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102277	Callee	Environment :: getEnv		101522	0					
ANR	102278	Identifier	Environment :: getEnv		101522	0					
ANR	102279	ArgumentList			101522	1					
ANR	102280	Identifier	allocator		101522	1					
ANR	102281	Argument	start_input_str		101522	1					
ANR	102282	Identifier	start_input_str		101522	0					
ANR	102283	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"	1310:21:69120:69178	101522	12	True				
ANR	102284	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"		101522	0					
ANR	102285	Callee	AXIS2_FREE		101522	0					
ANR	102286	Identifier	AXIS2_FREE		101522	0					
ANR	102287	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	102288	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102289	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102290	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102291	Callee	Environment :: getEnv		101522	0					
ANR	102292	Identifier	Environment :: getEnv		101522	0					
ANR	102293	ArgumentList			101522	1					
ANR	102294	Identifier	allocator		101522	1					
ANR	102295	Argument	end_input_str		101522	1					
ANR	102296	Identifier	end_input_str		101522	0					
ANR	102297	ExpressionStatement	p_prefix = NULL	1314:23:69242:69257	101522	43	True				
ANR	102298	AssignmentExpression	p_prefix = NULL		101522	0		=			
ANR	102299	Identifier	p_prefix		101522	0					
ANR	102300	Identifier	NULL		101522	1					
ANR	102301	IfStatement	if ( ! isValidArgs )		101522	44					
ANR	102302	Condition	! isValidArgs	1317:23:69306:69317	101522	0	True				
ANR	102303	UnaryOperationExpression	! isValidArgs		101522	0					
ANR	102304	UnaryOperator	!		101522	0					
ANR	102305	Identifier	isValidArgs		101522	1					
ANR	102306	CompoundStatement		172:19:7693:7693	101522	1					
ANR	102307	ElseStatement	else		101522	0					
ANR	102308	CompoundStatement		179:19:7915:7915	101522	0					
ANR	102309	ExpressionStatement	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""args"" ) ) )"	1326:21:69584:69809	101522	0	True				
ANR	102310	AssignmentExpression	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""args"" ) ) )"		101522	0		=			
ANR	102311	Identifier	start_input_str		101522	0					
ANR	102312	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""args"" ) ) )"		101522	1					
ANR	102313	CastTarget	axis2_char_t *		101522	0					
ANR	102314	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""args"" ) ) )"		101522	1					
ANR	102315	Callee	AXIS2_MALLOC		101522	0					
ANR	102316	Identifier	AXIS2_MALLOC		101522	0					
ANR	102317	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	102318	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102319	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102320	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102321	Callee	Environment :: getEnv		101522	0					
ANR	102322	Identifier	Environment :: getEnv		101522	0					
ANR	102323	ArgumentList			101522	1					
ANR	102324	Identifier	allocator		101522	1					
ANR	102325	Argument	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""args"" ) )"		101522	1					
ANR	102326	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""args"" ) )"		101522	0		*			
ANR	102327	SizeofExpression	sizeof ( axis2_char_t )		101522	0					
ANR	102328	Sizeof	sizeof		101522	0					
ANR	102329	SizeofOperand	axis2_char_t		101522	1					
ANR	102330	AdditiveExpression	"4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""args"" )"		101522	1		+			
ANR	102331	PrimaryExpression	4		101522	0					
ANR	102332	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""args"" )"		101522	1		+			
ANR	102333	CallExpression	axutil_strlen ( p_prefix )		101522	0					
ANR	102334	Callee	axutil_strlen		101522	0					
ANR	102335	Identifier	axutil_strlen		101522	0					
ANR	102336	ArgumentList	p_prefix		101522	1					
ANR	102337	Argument	p_prefix		101522	0					
ANR	102338	Identifier	p_prefix		101522	0					
ANR	102339	CallExpression	"axutil_strlen ( ""args"" )"		101522	1					
ANR	102340	Callee	axutil_strlen		101522	0					
ANR	102341	Identifier	axutil_strlen		101522	0					
ANR	102342	ArgumentList	"""args"""		101522	1					
ANR	102343	Argument	"""args"""		101522	0					
ANR	102344	PrimaryExpression	"""args"""		101522	0					
ANR	102345	ExpressionStatement	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""args"" ) ) )"	1331:21:69935:70123	101522	1	True				
ANR	102346	AssignmentExpression	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""args"" ) ) )"		101522	0		=			
ANR	102347	Identifier	end_input_str		101522	0					
ANR	102348	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""args"" ) ) )"		101522	1					
ANR	102349	CastTarget	axis2_char_t *		101522	0					
ANR	102350	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""args"" ) ) )"		101522	1					
ANR	102351	Callee	AXIS2_MALLOC		101522	0					
ANR	102352	Identifier	AXIS2_MALLOC		101522	0					
ANR	102353	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	102354	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102355	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102356	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102357	Callee	Environment :: getEnv		101522	0					
ANR	102358	Identifier	Environment :: getEnv		101522	0					
ANR	102359	ArgumentList			101522	1					
ANR	102360	Identifier	allocator		101522	1					
ANR	102361	Argument	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""args"" ) )"		101522	1					
ANR	102362	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""args"" ) )"		101522	0		*			
ANR	102363	SizeofExpression	sizeof ( axis2_char_t )		101522	0					
ANR	102364	Sizeof	sizeof		101522	0					
ANR	102365	SizeofOperand	axis2_char_t		101522	1					
ANR	102366	AdditiveExpression	"5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""args"" )"		101522	1		+			
ANR	102367	PrimaryExpression	5		101522	0					
ANR	102368	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""args"" )"		101522	1		+			
ANR	102369	CallExpression	axutil_strlen ( p_prefix )		101522	0					
ANR	102370	Callee	axutil_strlen		101522	0					
ANR	102371	Identifier	axutil_strlen		101522	0					
ANR	102372	ArgumentList	p_prefix		101522	1					
ANR	102373	Argument	p_prefix		101522	0					
ANR	102374	Identifier	p_prefix		101522	0					
ANR	102375	CallExpression	"axutil_strlen ( ""args"" )"		101522	1					
ANR	102376	Callee	axutil_strlen		101522	0					
ANR	102377	Identifier	axutil_strlen		101522	0					
ANR	102378	ArgumentList	"""args"""		101522	1					
ANR	102379	Argument	"""args"""		101522	0					
ANR	102380	PrimaryExpression	"""args"""		101522	0					
ANR	102381	ExpressionStatement	"sprintf ( start_input_str , ""<%s%sargs>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	1346:28:70480:70656	101522	2	True				
ANR	102382	CallExpression	"sprintf ( start_input_str , ""<%s%sargs>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		101522	0					
ANR	102383	Callee	sprintf		101522	0					
ANR	102384	Identifier	sprintf		101522	0					
ANR	102385	ArgumentList	start_input_str		101522	1					
ANR	102386	Argument	start_input_str		101522	0					
ANR	102387	Identifier	start_input_str		101522	0					
ANR	102388	Argument	"""<%s%sargs>"""		101522	1					
ANR	102389	PrimaryExpression	"""<%s%sargs>"""		101522	0					
ANR	102390	Argument	"p_prefix ? p_prefix : """""		101522	2					
ANR	102391	ConditionalExpression	"p_prefix ? p_prefix : """""		101522	0					
ANR	102392	Condition	p_prefix		101522	0					
ANR	102393	Identifier	p_prefix		101522	0					
ANR	102394	Identifier	p_prefix		101522	1					
ANR	102395	PrimaryExpression	""""""		101522	2					
ANR	102396	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	3					
ANR	102397	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	0					
ANR	102398	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0					
ANR	102399	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0		&&			
ANR	102400	Identifier	p_prefix		101522	0					
ANR	102401	CallExpression	"axutil_strcmp ( p_prefix , """" )"		101522	1					
ANR	102402	Callee	axutil_strcmp		101522	0					
ANR	102403	Identifier	axutil_strcmp		101522	0					
ANR	102404	ArgumentList	p_prefix		101522	1					
ANR	102405	Argument	p_prefix		101522	0					
ANR	102406	Identifier	p_prefix		101522	0					
ANR	102407	Argument	""""""		101522	1					
ANR	102408	PrimaryExpression	""""""		101522	0					
ANR	102409	PrimaryExpression	""":"""		101522	1					
ANR	102410	PrimaryExpression	""""""		101522	2					
ANR	102411	ExpressionStatement	start_input_str_len = axutil_strlen ( start_input_str )	1350:24:70711:70763	101522	3	True				
ANR	102412	AssignmentExpression	start_input_str_len = axutil_strlen ( start_input_str )		101522	0		=			
ANR	102413	Identifier	start_input_str_len		101522	0					
ANR	102414	CallExpression	axutil_strlen ( start_input_str )		101522	1					
ANR	102415	Callee	axutil_strlen		101522	0					
ANR	102416	Identifier	axutil_strlen		101522	0					
ANR	102417	ArgumentList	start_input_str		101522	1					
ANR	102418	Argument	start_input_str		101522	0					
ANR	102419	Identifier	start_input_str		101522	0					
ANR	102420	ExpressionStatement	"sprintf ( end_input_str , ""</%s%sargs>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	1351:24:70789:70964	101522	4	True				
ANR	102421	CallExpression	"sprintf ( end_input_str , ""</%s%sargs>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		101522	0					
ANR	102422	Callee	sprintf		101522	0					
ANR	102423	Identifier	sprintf		101522	0					
ANR	102424	ArgumentList	end_input_str		101522	1					
ANR	102425	Argument	end_input_str		101522	0					
ANR	102426	Identifier	end_input_str		101522	0					
ANR	102427	Argument	"""</%s%sargs>"""		101522	1					
ANR	102428	PrimaryExpression	"""</%s%sargs>"""		101522	0					
ANR	102429	Argument	"p_prefix ? p_prefix : """""		101522	2					
ANR	102430	ConditionalExpression	"p_prefix ? p_prefix : """""		101522	0					
ANR	102431	Condition	p_prefix		101522	0					
ANR	102432	Identifier	p_prefix		101522	0					
ANR	102433	Identifier	p_prefix		101522	1					
ANR	102434	PrimaryExpression	""""""		101522	2					
ANR	102435	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	3					
ANR	102436	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	0					
ANR	102437	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0					
ANR	102438	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0		&&			
ANR	102439	Identifier	p_prefix		101522	0					
ANR	102440	CallExpression	"axutil_strcmp ( p_prefix , """" )"		101522	1					
ANR	102441	Callee	axutil_strcmp		101522	0					
ANR	102442	Identifier	axutil_strcmp		101522	0					
ANR	102443	ArgumentList	p_prefix		101522	1					
ANR	102444	Argument	p_prefix		101522	0					
ANR	102445	Identifier	p_prefix		101522	0					
ANR	102446	Argument	""""""		101522	1					
ANR	102447	PrimaryExpression	""""""		101522	0					
ANR	102448	PrimaryExpression	""":"""		101522	1					
ANR	102449	PrimaryExpression	""""""		101522	2					
ANR	102450	ExpressionStatement	end_input_str_len = axutil_strlen ( end_input_str )	1354:24:70990:71038	101522	5	True				
ANR	102451	AssignmentExpression	end_input_str_len = axutil_strlen ( end_input_str )		101522	0		=			
ANR	102452	Identifier	end_input_str_len		101522	0					
ANR	102453	CallExpression	axutil_strlen ( end_input_str )		101522	1					
ANR	102454	Callee	axutil_strlen		101522	0					
ANR	102455	Identifier	axutil_strlen		101522	0					
ANR	102456	ArgumentList	end_input_str		101522	1					
ANR	102457	Argument	end_input_str		101522	0					
ANR	102458	Identifier	end_input_str		101522	0					
ANR	102459	ExpressionStatement	text_value_2 = ( axis2_char_t * ) property_Args . c_str ( )	1356:27:71088:71139	101522	6	True				
ANR	102460	AssignmentExpression	text_value_2 = ( axis2_char_t * ) property_Args . c_str ( )		101522	0		=			
ANR	102461	Identifier	text_value_2		101522	0					
ANR	102462	CastExpression	( axis2_char_t * ) property_Args . c_str ( )		101522	1					
ANR	102463	CastTarget	axis2_char_t *		101522	0					
ANR	102464	CallExpression	property_Args . c_str ( )		101522	1					
ANR	102465	Callee	property_Args . c_str		101522	0					
ANR	102466	MemberAccess	property_Args . c_str		101522	0					
ANR	102467	Identifier	property_Args		101522	0					
ANR	102468	Identifier	c_str		101522	1					
ANR	102469	ArgumentList			101522	1					
ANR	102470	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"	1358:27:71196:71284	101522	7	True				
ANR	102471	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"		101522	0					
ANR	102472	Callee	axutil_stream_write		101522	0					
ANR	102473	Identifier	axutil_stream_write		101522	0					
ANR	102474	ArgumentList	stream		101522	1					
ANR	102475	Argument	stream		101522	0					
ANR	102476	Identifier	stream		101522	0					
ANR	102477	Argument	Environment :: getEnv ( )		101522	1					
ANR	102478	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102479	Callee	Environment :: getEnv		101522	0					
ANR	102480	Identifier	Environment :: getEnv		101522	0					
ANR	102481	ArgumentList			101522	1					
ANR	102482	Argument	start_input_str		101522	2					
ANR	102483	Identifier	start_input_str		101522	0					
ANR	102484	Argument	start_input_str_len		101522	3					
ANR	102485	Identifier	start_input_str_len		101522	0					
ANR	102486	ExpressionStatement	"text_value_2_temp = axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_2 , true )"	1361:27:71370:71456	101522	8	True				
ANR	102487	AssignmentExpression	"text_value_2_temp = axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_2 , true )"		101522	0		=			
ANR	102488	Identifier	text_value_2_temp		101522	0					
ANR	102489	CallExpression	"axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_2 , true )"		101522	1					
ANR	102490	Callee	axutil_xml_quote_string		101522	0					
ANR	102491	Identifier	axutil_xml_quote_string		101522	0					
ANR	102492	ArgumentList	Environment :: getEnv ( )		101522	1					
ANR	102493	Argument	Environment :: getEnv ( )		101522	0					
ANR	102494	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102495	Callee	Environment :: getEnv		101522	0					
ANR	102496	Identifier	Environment :: getEnv		101522	0					
ANR	102497	ArgumentList			101522	1					
ANR	102498	Argument	text_value_2		101522	1					
ANR	102499	Identifier	text_value_2		101522	0					
ANR	102500	Argument	true		101522	2					
ANR	102501	Identifier	true		101522	0					
ANR	102502	IfStatement	if ( text_value_2_temp )		101522	9					
ANR	102503	Condition	text_value_2_temp	1362:31:71489:71505	101522	0	True				
ANR	102504	Identifier	text_value_2_temp		101522	0					
ANR	102505	CompoundStatement		217:27:9889:9889	101522	1					
ANR	102506	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_2_temp , axutil_strlen ( text_value_2_temp ) )"	1364:31:71568:71671	101522	0	True				
ANR	102507	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_2_temp , axutil_strlen ( text_value_2_temp ) )"		101522	0					
ANR	102508	Callee	axutil_stream_write		101522	0					
ANR	102509	Identifier	axutil_stream_write		101522	0					
ANR	102510	ArgumentList	stream		101522	1					
ANR	102511	Argument	stream		101522	0					
ANR	102512	Identifier	stream		101522	0					
ANR	102513	Argument	Environment :: getEnv ( )		101522	1					
ANR	102514	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102515	Callee	Environment :: getEnv		101522	0					
ANR	102516	Identifier	Environment :: getEnv		101522	0					
ANR	102517	ArgumentList			101522	1					
ANR	102518	Argument	text_value_2_temp		101522	2					
ANR	102519	Identifier	text_value_2_temp		101522	0					
ANR	102520	Argument	axutil_strlen ( text_value_2_temp )		101522	3					
ANR	102521	CallExpression	axutil_strlen ( text_value_2_temp )		101522	0					
ANR	102522	Callee	axutil_strlen		101522	0					
ANR	102523	Identifier	axutil_strlen		101522	0					
ANR	102524	ArgumentList	text_value_2_temp		101522	1					
ANR	102525	Argument	text_value_2_temp		101522	0					
ANR	102526	Identifier	text_value_2_temp		101522	0					
ANR	102527	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value_2_temp )"	1365:31:71704:71767	101522	1	True				
ANR	102528	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value_2_temp )"		101522	0					
ANR	102529	Callee	AXIS2_FREE		101522	0					
ANR	102530	Identifier	AXIS2_FREE		101522	0					
ANR	102531	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	102532	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102533	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102534	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102535	Callee	Environment :: getEnv		101522	0					
ANR	102536	Identifier	Environment :: getEnv		101522	0					
ANR	102537	ArgumentList			101522	1					
ANR	102538	Identifier	allocator		101522	1					
ANR	102539	Argument	text_value_2_temp		101522	1					
ANR	102540	Identifier	text_value_2_temp		101522	0					
ANR	102541	ElseStatement	else		101522	0					
ANR	102542	CompoundStatement		222:27:10211:10211	101522	0					
ANR	102543	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_2 , axutil_strlen ( text_value_2 ) )"	1369:31:71890:71983	101522	0	True				
ANR	102544	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_2 , axutil_strlen ( text_value_2 ) )"		101522	0					
ANR	102545	Callee	axutil_stream_write		101522	0					
ANR	102546	Identifier	axutil_stream_write		101522	0					
ANR	102547	ArgumentList	stream		101522	1					
ANR	102548	Argument	stream		101522	0					
ANR	102549	Identifier	stream		101522	0					
ANR	102550	Argument	Environment :: getEnv ( )		101522	1					
ANR	102551	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102552	Callee	Environment :: getEnv		101522	0					
ANR	102553	Identifier	Environment :: getEnv		101522	0					
ANR	102554	ArgumentList			101522	1					
ANR	102555	Argument	text_value_2		101522	2					
ANR	102556	Identifier	text_value_2		101522	0					
ANR	102557	Argument	axutil_strlen ( text_value_2 )		101522	3					
ANR	102558	CallExpression	axutil_strlen ( text_value_2 )		101522	0					
ANR	102559	Callee	axutil_strlen		101522	0					
ANR	102560	Identifier	axutil_strlen		101522	0					
ANR	102561	ArgumentList	text_value_2		101522	1					
ANR	102562	Argument	text_value_2		101522	0					
ANR	102563	Identifier	text_value_2		101522	0					
ANR	102564	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"	1372:27:72069:72153	101522	10	True				
ANR	102565	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"		101522	0					
ANR	102566	Callee	axutil_stream_write		101522	0					
ANR	102567	Identifier	axutil_stream_write		101522	0					
ANR	102568	ArgumentList	stream		101522	1					
ANR	102569	Argument	stream		101522	0					
ANR	102570	Identifier	stream		101522	0					
ANR	102571	Argument	Environment :: getEnv ( )		101522	1					
ANR	102572	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102573	Callee	Environment :: getEnv		101522	0					
ANR	102574	Identifier	Environment :: getEnv		101522	0					
ANR	102575	ArgumentList			101522	1					
ANR	102576	Argument	end_input_str		101522	2					
ANR	102577	Identifier	end_input_str		101522	0					
ANR	102578	Argument	end_input_str_len		101522	3					
ANR	102579	Identifier	end_input_str_len		101522	0					
ANR	102580	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"	1375:21:72226:72286	101522	11	True				
ANR	102581	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"		101522	0					
ANR	102582	Callee	AXIS2_FREE		101522	0					
ANR	102583	Identifier	AXIS2_FREE		101522	0					
ANR	102584	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	102585	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102586	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102587	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102588	Callee	Environment :: getEnv		101522	0					
ANR	102589	Identifier	Environment :: getEnv		101522	0					
ANR	102590	ArgumentList			101522	1					
ANR	102591	Identifier	allocator		101522	1					
ANR	102592	Argument	start_input_str		101522	1					
ANR	102593	Identifier	start_input_str		101522	0					
ANR	102594	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"	1376:21:72309:72367	101522	12	True				
ANR	102595	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"		101522	0					
ANR	102596	Callee	AXIS2_FREE		101522	0					
ANR	102597	Identifier	AXIS2_FREE		101522	0					
ANR	102598	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	102599	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102600	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102601	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102602	Callee	Environment :: getEnv		101522	0					
ANR	102603	Identifier	Environment :: getEnv		101522	0					
ANR	102604	ArgumentList			101522	1					
ANR	102605	Identifier	allocator		101522	1					
ANR	102606	Argument	end_input_str		101522	1					
ANR	102607	Identifier	end_input_str		101522	0					
ANR	102608	ExpressionStatement	p_prefix = NULL	1380:23:72431:72446	101522	45	True				
ANR	102609	AssignmentExpression	p_prefix = NULL		101522	0		=			
ANR	102610	Identifier	p_prefix		101522	0					
ANR	102611	Identifier	NULL		101522	1					
ANR	102612	IfStatement	if ( ! isValidOwner )		101522	46					
ANR	102613	Condition	! isValidOwner	1383:23:72495:72507	101522	0	True				
ANR	102614	UnaryOperationExpression	! isValidOwner		101522	0					
ANR	102615	UnaryOperator	!		101522	0					
ANR	102616	Identifier	isValidOwner		101522	1					
ANR	102617	CompoundStatement		238:19:10883:10883	101522	1					
ANR	102618	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Nil value found in non-nillable property owner"" )"	1387:28:72611:72717	101522	0	True				
ANR	102619	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Nil value found in non-nillable property owner"" )"		101522	0					
ANR	102620	Callee	WSF_LOG_ERROR_MSG		101522	0					
ANR	102621	Identifier	WSF_LOG_ERROR_MSG		101522	0					
ANR	102622	ArgumentList	Environment :: getEnv ( ) -> log		101522	1					
ANR	102623	Argument	Environment :: getEnv ( ) -> log		101522	0					
ANR	102624	PtrMemberAccess	Environment :: getEnv ( ) -> log		101522	0					
ANR	102625	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102626	Callee	Environment :: getEnv		101522	0					
ANR	102627	Identifier	Environment :: getEnv		101522	0					
ANR	102628	ArgumentList			101522	1					
ANR	102629	Identifier	log		101522	1					
ANR	102630	Argument	WSF_LOG_SI		101522	1					
ANR	102631	Identifier	WSF_LOG_SI		101522	0					
ANR	102632	Argument	"""Nil value found in non-nillable property owner"""		101522	2					
ANR	102633	PrimaryExpression	"""Nil value found in non-nillable property owner"""		101522	0					
ANR	102634	ReturnStatement	return NULL ;	1388:28:72747:72758	101522	1	True				
ANR	102635	Identifier	NULL		101522	0					
ANR	102636	ElseStatement	else		101522	0					
ANR	102637	CompoundStatement		246:19:11205:11205	101522	0					
ANR	102638	ExpressionStatement	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" ) ) )"	1393:21:72874:73100	101522	0	True				
ANR	102639	AssignmentExpression	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" ) ) )"		101522	0		=			
ANR	102640	Identifier	start_input_str		101522	0					
ANR	102641	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" ) ) )"		101522	1					
ANR	102642	CastTarget	axis2_char_t *		101522	0					
ANR	102643	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" ) ) )"		101522	1					
ANR	102644	Callee	AXIS2_MALLOC		101522	0					
ANR	102645	Identifier	AXIS2_MALLOC		101522	0					
ANR	102646	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	102647	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102648	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102649	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102650	Callee	Environment :: getEnv		101522	0					
ANR	102651	Identifier	Environment :: getEnv		101522	0					
ANR	102652	ArgumentList			101522	1					
ANR	102653	Identifier	allocator		101522	1					
ANR	102654	Argument	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" ) )"		101522	1					
ANR	102655	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" ) )"		101522	0		*			
ANR	102656	SizeofExpression	sizeof ( axis2_char_t )		101522	0					
ANR	102657	Sizeof	sizeof		101522	0					
ANR	102658	SizeofOperand	axis2_char_t		101522	1					
ANR	102659	AdditiveExpression	"4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" )"		101522	1		+			
ANR	102660	PrimaryExpression	4		101522	0					
ANR	102661	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" )"		101522	1		+			
ANR	102662	CallExpression	axutil_strlen ( p_prefix )		101522	0					
ANR	102663	Callee	axutil_strlen		101522	0					
ANR	102664	Identifier	axutil_strlen		101522	0					
ANR	102665	ArgumentList	p_prefix		101522	1					
ANR	102666	Argument	p_prefix		101522	0					
ANR	102667	Identifier	p_prefix		101522	0					
ANR	102668	CallExpression	"axutil_strlen ( ""owner"" )"		101522	1					
ANR	102669	Callee	axutil_strlen		101522	0					
ANR	102670	Identifier	axutil_strlen		101522	0					
ANR	102671	ArgumentList	"""owner"""		101522	1					
ANR	102672	Argument	"""owner"""		101522	0					
ANR	102673	PrimaryExpression	"""owner"""		101522	0					
ANR	102674	ExpressionStatement	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" ) ) )"	1398:21:73226:73415	101522	1	True				
ANR	102675	AssignmentExpression	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" ) ) )"		101522	0		=			
ANR	102676	Identifier	end_input_str		101522	0					
ANR	102677	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" ) ) )"		101522	1					
ANR	102678	CastTarget	axis2_char_t *		101522	0					
ANR	102679	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" ) ) )"		101522	1					
ANR	102680	Callee	AXIS2_MALLOC		101522	0					
ANR	102681	Identifier	AXIS2_MALLOC		101522	0					
ANR	102682	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	102683	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102684	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102685	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102686	Callee	Environment :: getEnv		101522	0					
ANR	102687	Identifier	Environment :: getEnv		101522	0					
ANR	102688	ArgumentList			101522	1					
ANR	102689	Identifier	allocator		101522	1					
ANR	102690	Argument	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" ) )"		101522	1					
ANR	102691	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" ) )"		101522	0		*			
ANR	102692	SizeofExpression	sizeof ( axis2_char_t )		101522	0					
ANR	102693	Sizeof	sizeof		101522	0					
ANR	102694	SizeofOperand	axis2_char_t		101522	1					
ANR	102695	AdditiveExpression	"5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" )"		101522	1		+			
ANR	102696	PrimaryExpression	5		101522	0					
ANR	102697	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""owner"" )"		101522	1		+			
ANR	102698	CallExpression	axutil_strlen ( p_prefix )		101522	0					
ANR	102699	Callee	axutil_strlen		101522	0					
ANR	102700	Identifier	axutil_strlen		101522	0					
ANR	102701	ArgumentList	p_prefix		101522	1					
ANR	102702	Argument	p_prefix		101522	0					
ANR	102703	Identifier	p_prefix		101522	0					
ANR	102704	CallExpression	"axutil_strlen ( ""owner"" )"		101522	1					
ANR	102705	Callee	axutil_strlen		101522	0					
ANR	102706	Identifier	axutil_strlen		101522	0					
ANR	102707	ArgumentList	"""owner"""		101522	1					
ANR	102708	Argument	"""owner"""		101522	0					
ANR	102709	PrimaryExpression	"""owner"""		101522	0					
ANR	102710	ExpressionStatement	"sprintf ( start_input_str , ""<%s%sowner>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	1413:28:73773:73950	101522	2	True				
ANR	102711	CallExpression	"sprintf ( start_input_str , ""<%s%sowner>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		101522	0					
ANR	102712	Callee	sprintf		101522	0					
ANR	102713	Identifier	sprintf		101522	0					
ANR	102714	ArgumentList	start_input_str		101522	1					
ANR	102715	Argument	start_input_str		101522	0					
ANR	102716	Identifier	start_input_str		101522	0					
ANR	102717	Argument	"""<%s%sowner>"""		101522	1					
ANR	102718	PrimaryExpression	"""<%s%sowner>"""		101522	0					
ANR	102719	Argument	"p_prefix ? p_prefix : """""		101522	2					
ANR	102720	ConditionalExpression	"p_prefix ? p_prefix : """""		101522	0					
ANR	102721	Condition	p_prefix		101522	0					
ANR	102722	Identifier	p_prefix		101522	0					
ANR	102723	Identifier	p_prefix		101522	1					
ANR	102724	PrimaryExpression	""""""		101522	2					
ANR	102725	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	3					
ANR	102726	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	0					
ANR	102727	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0					
ANR	102728	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0		&&			
ANR	102729	Identifier	p_prefix		101522	0					
ANR	102730	CallExpression	"axutil_strcmp ( p_prefix , """" )"		101522	1					
ANR	102731	Callee	axutil_strcmp		101522	0					
ANR	102732	Identifier	axutil_strcmp		101522	0					
ANR	102733	ArgumentList	p_prefix		101522	1					
ANR	102734	Argument	p_prefix		101522	0					
ANR	102735	Identifier	p_prefix		101522	0					
ANR	102736	Argument	""""""		101522	1					
ANR	102737	PrimaryExpression	""""""		101522	0					
ANR	102738	PrimaryExpression	""":"""		101522	1					
ANR	102739	PrimaryExpression	""""""		101522	2					
ANR	102740	ExpressionStatement	start_input_str_len = axutil_strlen ( start_input_str )	1417:24:74005:74057	101522	3	True				
ANR	102741	AssignmentExpression	start_input_str_len = axutil_strlen ( start_input_str )		101522	0		=			
ANR	102742	Identifier	start_input_str_len		101522	0					
ANR	102743	CallExpression	axutil_strlen ( start_input_str )		101522	1					
ANR	102744	Callee	axutil_strlen		101522	0					
ANR	102745	Identifier	axutil_strlen		101522	0					
ANR	102746	ArgumentList	start_input_str		101522	1					
ANR	102747	Argument	start_input_str		101522	0					
ANR	102748	Identifier	start_input_str		101522	0					
ANR	102749	ExpressionStatement	"sprintf ( end_input_str , ""</%s%sowner>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	1418:24:74083:74259	101522	4	True				
ANR	102750	CallExpression	"sprintf ( end_input_str , ""</%s%sowner>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		101522	0					
ANR	102751	Callee	sprintf		101522	0					
ANR	102752	Identifier	sprintf		101522	0					
ANR	102753	ArgumentList	end_input_str		101522	1					
ANR	102754	Argument	end_input_str		101522	0					
ANR	102755	Identifier	end_input_str		101522	0					
ANR	102756	Argument	"""</%s%sowner>"""		101522	1					
ANR	102757	PrimaryExpression	"""</%s%sowner>"""		101522	0					
ANR	102758	Argument	"p_prefix ? p_prefix : """""		101522	2					
ANR	102759	ConditionalExpression	"p_prefix ? p_prefix : """""		101522	0					
ANR	102760	Condition	p_prefix		101522	0					
ANR	102761	Identifier	p_prefix		101522	0					
ANR	102762	Identifier	p_prefix		101522	1					
ANR	102763	PrimaryExpression	""""""		101522	2					
ANR	102764	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	3					
ANR	102765	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	0					
ANR	102766	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0					
ANR	102767	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0		&&			
ANR	102768	Identifier	p_prefix		101522	0					
ANR	102769	CallExpression	"axutil_strcmp ( p_prefix , """" )"		101522	1					
ANR	102770	Callee	axutil_strcmp		101522	0					
ANR	102771	Identifier	axutil_strcmp		101522	0					
ANR	102772	ArgumentList	p_prefix		101522	1					
ANR	102773	Argument	p_prefix		101522	0					
ANR	102774	Identifier	p_prefix		101522	0					
ANR	102775	Argument	""""""		101522	1					
ANR	102776	PrimaryExpression	""""""		101522	0					
ANR	102777	PrimaryExpression	""":"""		101522	1					
ANR	102778	PrimaryExpression	""""""		101522	2					
ANR	102779	ExpressionStatement	end_input_str_len = axutil_strlen ( end_input_str )	1421:24:74285:74333	101522	5	True				
ANR	102780	AssignmentExpression	end_input_str_len = axutil_strlen ( end_input_str )		101522	0		=			
ANR	102781	Identifier	end_input_str_len		101522	0					
ANR	102782	CallExpression	axutil_strlen ( end_input_str )		101522	1					
ANR	102783	Callee	axutil_strlen		101522	0					
ANR	102784	Identifier	axutil_strlen		101522	0					
ANR	102785	ArgumentList	end_input_str		101522	1					
ANR	102786	Argument	end_input_str		101522	0					
ANR	102787	Identifier	end_input_str		101522	0					
ANR	102788	ExpressionStatement	text_value_3 = ( axis2_char_t * ) property_Owner . c_str ( )	1423:27:74383:74435	101522	6	True				
ANR	102789	AssignmentExpression	text_value_3 = ( axis2_char_t * ) property_Owner . c_str ( )		101522	0		=			
ANR	102790	Identifier	text_value_3		101522	0					
ANR	102791	CastExpression	( axis2_char_t * ) property_Owner . c_str ( )		101522	1					
ANR	102792	CastTarget	axis2_char_t *		101522	0					
ANR	102793	CallExpression	property_Owner . c_str ( )		101522	1					
ANR	102794	Callee	property_Owner . c_str		101522	0					
ANR	102795	MemberAccess	property_Owner . c_str		101522	0					
ANR	102796	Identifier	property_Owner		101522	0					
ANR	102797	Identifier	c_str		101522	1					
ANR	102798	ArgumentList			101522	1					
ANR	102799	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"	1425:27:74492:74580	101522	7	True				
ANR	102800	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"		101522	0					
ANR	102801	Callee	axutil_stream_write		101522	0					
ANR	102802	Identifier	axutil_stream_write		101522	0					
ANR	102803	ArgumentList	stream		101522	1					
ANR	102804	Argument	stream		101522	0					
ANR	102805	Identifier	stream		101522	0					
ANR	102806	Argument	Environment :: getEnv ( )		101522	1					
ANR	102807	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102808	Callee	Environment :: getEnv		101522	0					
ANR	102809	Identifier	Environment :: getEnv		101522	0					
ANR	102810	ArgumentList			101522	1					
ANR	102811	Argument	start_input_str		101522	2					
ANR	102812	Identifier	start_input_str		101522	0					
ANR	102813	Argument	start_input_str_len		101522	3					
ANR	102814	Identifier	start_input_str_len		101522	0					
ANR	102815	ExpressionStatement	"text_value_3_temp = axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_3 , true )"	1428:27:74666:74752	101522	8	True				
ANR	102816	AssignmentExpression	"text_value_3_temp = axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_3 , true )"		101522	0		=			
ANR	102817	Identifier	text_value_3_temp		101522	0					
ANR	102818	CallExpression	"axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_3 , true )"		101522	1					
ANR	102819	Callee	axutil_xml_quote_string		101522	0					
ANR	102820	Identifier	axutil_xml_quote_string		101522	0					
ANR	102821	ArgumentList	Environment :: getEnv ( )		101522	1					
ANR	102822	Argument	Environment :: getEnv ( )		101522	0					
ANR	102823	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102824	Callee	Environment :: getEnv		101522	0					
ANR	102825	Identifier	Environment :: getEnv		101522	0					
ANR	102826	ArgumentList			101522	1					
ANR	102827	Argument	text_value_3		101522	1					
ANR	102828	Identifier	text_value_3		101522	0					
ANR	102829	Argument	true		101522	2					
ANR	102830	Identifier	true		101522	0					
ANR	102831	IfStatement	if ( text_value_3_temp )		101522	9					
ANR	102832	Condition	text_value_3_temp	1429:31:74785:74801	101522	0	True				
ANR	102833	Identifier	text_value_3_temp		101522	0					
ANR	102834	CompoundStatement		284:27:13185:13185	101522	1					
ANR	102835	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_3_temp , axutil_strlen ( text_value_3_temp ) )"	1431:31:74864:74967	101522	0	True				
ANR	102836	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_3_temp , axutil_strlen ( text_value_3_temp ) )"		101522	0					
ANR	102837	Callee	axutil_stream_write		101522	0					
ANR	102838	Identifier	axutil_stream_write		101522	0					
ANR	102839	ArgumentList	stream		101522	1					
ANR	102840	Argument	stream		101522	0					
ANR	102841	Identifier	stream		101522	0					
ANR	102842	Argument	Environment :: getEnv ( )		101522	1					
ANR	102843	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102844	Callee	Environment :: getEnv		101522	0					
ANR	102845	Identifier	Environment :: getEnv		101522	0					
ANR	102846	ArgumentList			101522	1					
ANR	102847	Argument	text_value_3_temp		101522	2					
ANR	102848	Identifier	text_value_3_temp		101522	0					
ANR	102849	Argument	axutil_strlen ( text_value_3_temp )		101522	3					
ANR	102850	CallExpression	axutil_strlen ( text_value_3_temp )		101522	0					
ANR	102851	Callee	axutil_strlen		101522	0					
ANR	102852	Identifier	axutil_strlen		101522	0					
ANR	102853	ArgumentList	text_value_3_temp		101522	1					
ANR	102854	Argument	text_value_3_temp		101522	0					
ANR	102855	Identifier	text_value_3_temp		101522	0					
ANR	102856	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value_3_temp )"	1432:31:75000:75063	101522	1	True				
ANR	102857	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value_3_temp )"		101522	0					
ANR	102858	Callee	AXIS2_FREE		101522	0					
ANR	102859	Identifier	AXIS2_FREE		101522	0					
ANR	102860	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	102861	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102862	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102863	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102864	Callee	Environment :: getEnv		101522	0					
ANR	102865	Identifier	Environment :: getEnv		101522	0					
ANR	102866	ArgumentList			101522	1					
ANR	102867	Identifier	allocator		101522	1					
ANR	102868	Argument	text_value_3_temp		101522	1					
ANR	102869	Identifier	text_value_3_temp		101522	0					
ANR	102870	ElseStatement	else		101522	0					
ANR	102871	CompoundStatement		289:27:13507:13507	101522	0					
ANR	102872	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_3 , axutil_strlen ( text_value_3 ) )"	1436:31:75186:75279	101522	0	True				
ANR	102873	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_3 , axutil_strlen ( text_value_3 ) )"		101522	0					
ANR	102874	Callee	axutil_stream_write		101522	0					
ANR	102875	Identifier	axutil_stream_write		101522	0					
ANR	102876	ArgumentList	stream		101522	1					
ANR	102877	Argument	stream		101522	0					
ANR	102878	Identifier	stream		101522	0					
ANR	102879	Argument	Environment :: getEnv ( )		101522	1					
ANR	102880	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102881	Callee	Environment :: getEnv		101522	0					
ANR	102882	Identifier	Environment :: getEnv		101522	0					
ANR	102883	ArgumentList			101522	1					
ANR	102884	Argument	text_value_3		101522	2					
ANR	102885	Identifier	text_value_3		101522	0					
ANR	102886	Argument	axutil_strlen ( text_value_3 )		101522	3					
ANR	102887	CallExpression	axutil_strlen ( text_value_3 )		101522	0					
ANR	102888	Callee	axutil_strlen		101522	0					
ANR	102889	Identifier	axutil_strlen		101522	0					
ANR	102890	ArgumentList	text_value_3		101522	1					
ANR	102891	Argument	text_value_3		101522	0					
ANR	102892	Identifier	text_value_3		101522	0					
ANR	102893	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"	1439:27:75365:75449	101522	10	True				
ANR	102894	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"		101522	0					
ANR	102895	Callee	axutil_stream_write		101522	0					
ANR	102896	Identifier	axutil_stream_write		101522	0					
ANR	102897	ArgumentList	stream		101522	1					
ANR	102898	Argument	stream		101522	0					
ANR	102899	Identifier	stream		101522	0					
ANR	102900	Argument	Environment :: getEnv ( )		101522	1					
ANR	102901	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102902	Callee	Environment :: getEnv		101522	0					
ANR	102903	Identifier	Environment :: getEnv		101522	0					
ANR	102904	ArgumentList			101522	1					
ANR	102905	Argument	end_input_str		101522	2					
ANR	102906	Identifier	end_input_str		101522	0					
ANR	102907	Argument	end_input_str_len		101522	3					
ANR	102908	Identifier	end_input_str_len		101522	0					
ANR	102909	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"	1442:21:75522:75582	101522	11	True				
ANR	102910	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"		101522	0					
ANR	102911	Callee	AXIS2_FREE		101522	0					
ANR	102912	Identifier	AXIS2_FREE		101522	0					
ANR	102913	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	102914	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102915	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102916	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102917	Callee	Environment :: getEnv		101522	0					
ANR	102918	Identifier	Environment :: getEnv		101522	0					
ANR	102919	ArgumentList			101522	1					
ANR	102920	Identifier	allocator		101522	1					
ANR	102921	Argument	start_input_str		101522	1					
ANR	102922	Identifier	start_input_str		101522	0					
ANR	102923	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"	1443:21:75605:75663	101522	12	True				
ANR	102924	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"		101522	0					
ANR	102925	Callee	AXIS2_FREE		101522	0					
ANR	102926	Identifier	AXIS2_FREE		101522	0					
ANR	102927	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	102928	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102929	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102930	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102931	Callee	Environment :: getEnv		101522	0					
ANR	102932	Identifier	Environment :: getEnv		101522	0					
ANR	102933	ArgumentList			101522	1					
ANR	102934	Identifier	allocator		101522	1					
ANR	102935	Argument	end_input_str		101522	1					
ANR	102936	Identifier	end_input_str		101522	0					
ANR	102937	ExpressionStatement	p_prefix = NULL	1447:23:75727:75742	101522	47	True				
ANR	102938	AssignmentExpression	p_prefix = NULL		101522	0		=			
ANR	102939	Identifier	p_prefix		101522	0					
ANR	102940	Identifier	NULL		101522	1					
ANR	102941	IfStatement	if ( ! isValidIwd )		101522	48					
ANR	102942	Condition	! isValidIwd	1450:23:75791:75801	101522	0	True				
ANR	102943	UnaryOperationExpression	! isValidIwd		101522	0					
ANR	102944	UnaryOperator	!		101522	0					
ANR	102945	Identifier	isValidIwd		101522	1					
ANR	102946	CompoundStatement		305:19:14177:14177	101522	1					
ANR	102947	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Nil value found in non-nillable property iwd"" )"	1454:28:75905:76009	101522	0	True				
ANR	102948	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Nil value found in non-nillable property iwd"" )"		101522	0					
ANR	102949	Callee	WSF_LOG_ERROR_MSG		101522	0					
ANR	102950	Identifier	WSF_LOG_ERROR_MSG		101522	0					
ANR	102951	ArgumentList	Environment :: getEnv ( ) -> log		101522	1					
ANR	102952	Argument	Environment :: getEnv ( ) -> log		101522	0					
ANR	102953	PtrMemberAccess	Environment :: getEnv ( ) -> log		101522	0					
ANR	102954	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102955	Callee	Environment :: getEnv		101522	0					
ANR	102956	Identifier	Environment :: getEnv		101522	0					
ANR	102957	ArgumentList			101522	1					
ANR	102958	Identifier	log		101522	1					
ANR	102959	Argument	WSF_LOG_SI		101522	1					
ANR	102960	Identifier	WSF_LOG_SI		101522	0					
ANR	102961	Argument	"""Nil value found in non-nillable property iwd"""		101522	2					
ANR	102962	PrimaryExpression	"""Nil value found in non-nillable property iwd"""		101522	0					
ANR	102963	ReturnStatement	return NULL ;	1455:28:76039:76050	101522	1	True				
ANR	102964	Identifier	NULL		101522	0					
ANR	102965	ElseStatement	else		101522	0					
ANR	102966	CompoundStatement		313:19:14497:14497	101522	0					
ANR	102967	ExpressionStatement	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""iwd"" ) ) )"	1460:21:76166:76390	101522	0	True				
ANR	102968	AssignmentExpression	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""iwd"" ) ) )"		101522	0		=			
ANR	102969	Identifier	start_input_str		101522	0					
ANR	102970	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""iwd"" ) ) )"		101522	1					
ANR	102971	CastTarget	axis2_char_t *		101522	0					
ANR	102972	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""iwd"" ) ) )"		101522	1					
ANR	102973	Callee	AXIS2_MALLOC		101522	0					
ANR	102974	Identifier	AXIS2_MALLOC		101522	0					
ANR	102975	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	102976	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102977	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	102978	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	102979	Callee	Environment :: getEnv		101522	0					
ANR	102980	Identifier	Environment :: getEnv		101522	0					
ANR	102981	ArgumentList			101522	1					
ANR	102982	Identifier	allocator		101522	1					
ANR	102983	Argument	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""iwd"" ) )"		101522	1					
ANR	102984	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""iwd"" ) )"		101522	0		*			
ANR	102985	SizeofExpression	sizeof ( axis2_char_t )		101522	0					
ANR	102986	Sizeof	sizeof		101522	0					
ANR	102987	SizeofOperand	axis2_char_t		101522	1					
ANR	102988	AdditiveExpression	"4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""iwd"" )"		101522	1		+			
ANR	102989	PrimaryExpression	4		101522	0					
ANR	102990	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""iwd"" )"		101522	1		+			
ANR	102991	CallExpression	axutil_strlen ( p_prefix )		101522	0					
ANR	102992	Callee	axutil_strlen		101522	0					
ANR	102993	Identifier	axutil_strlen		101522	0					
ANR	102994	ArgumentList	p_prefix		101522	1					
ANR	102995	Argument	p_prefix		101522	0					
ANR	102996	Identifier	p_prefix		101522	0					
ANR	102997	CallExpression	"axutil_strlen ( ""iwd"" )"		101522	1					
ANR	102998	Callee	axutil_strlen		101522	0					
ANR	102999	Identifier	axutil_strlen		101522	0					
ANR	103000	ArgumentList	"""iwd"""		101522	1					
ANR	103001	Argument	"""iwd"""		101522	0					
ANR	103002	PrimaryExpression	"""iwd"""		101522	0					
ANR	103003	ExpressionStatement	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""iwd"" ) ) )"	1465:21:76516:76703	101522	1	True				
ANR	103004	AssignmentExpression	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""iwd"" ) ) )"		101522	0		=			
ANR	103005	Identifier	end_input_str		101522	0					
ANR	103006	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""iwd"" ) ) )"		101522	1					
ANR	103007	CastTarget	axis2_char_t *		101522	0					
ANR	103008	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""iwd"" ) ) )"		101522	1					
ANR	103009	Callee	AXIS2_MALLOC		101522	0					
ANR	103010	Identifier	AXIS2_MALLOC		101522	0					
ANR	103011	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	103012	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103013	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103014	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103015	Callee	Environment :: getEnv		101522	0					
ANR	103016	Identifier	Environment :: getEnv		101522	0					
ANR	103017	ArgumentList			101522	1					
ANR	103018	Identifier	allocator		101522	1					
ANR	103019	Argument	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""iwd"" ) )"		101522	1					
ANR	103020	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""iwd"" ) )"		101522	0		*			
ANR	103021	SizeofExpression	sizeof ( axis2_char_t )		101522	0					
ANR	103022	Sizeof	sizeof		101522	0					
ANR	103023	SizeofOperand	axis2_char_t		101522	1					
ANR	103024	AdditiveExpression	"5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""iwd"" )"		101522	1		+			
ANR	103025	PrimaryExpression	5		101522	0					
ANR	103026	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""iwd"" )"		101522	1		+			
ANR	103027	CallExpression	axutil_strlen ( p_prefix )		101522	0					
ANR	103028	Callee	axutil_strlen		101522	0					
ANR	103029	Identifier	axutil_strlen		101522	0					
ANR	103030	ArgumentList	p_prefix		101522	1					
ANR	103031	Argument	p_prefix		101522	0					
ANR	103032	Identifier	p_prefix		101522	0					
ANR	103033	CallExpression	"axutil_strlen ( ""iwd"" )"		101522	1					
ANR	103034	Callee	axutil_strlen		101522	0					
ANR	103035	Identifier	axutil_strlen		101522	0					
ANR	103036	ArgumentList	"""iwd"""		101522	1					
ANR	103037	Argument	"""iwd"""		101522	0					
ANR	103038	PrimaryExpression	"""iwd"""		101522	0					
ANR	103039	ExpressionStatement	"sprintf ( start_input_str , ""<%s%siwd>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	1480:28:77059:77234	101522	2	True				
ANR	103040	CallExpression	"sprintf ( start_input_str , ""<%s%siwd>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		101522	0					
ANR	103041	Callee	sprintf		101522	0					
ANR	103042	Identifier	sprintf		101522	0					
ANR	103043	ArgumentList	start_input_str		101522	1					
ANR	103044	Argument	start_input_str		101522	0					
ANR	103045	Identifier	start_input_str		101522	0					
ANR	103046	Argument	"""<%s%siwd>"""		101522	1					
ANR	103047	PrimaryExpression	"""<%s%siwd>"""		101522	0					
ANR	103048	Argument	"p_prefix ? p_prefix : """""		101522	2					
ANR	103049	ConditionalExpression	"p_prefix ? p_prefix : """""		101522	0					
ANR	103050	Condition	p_prefix		101522	0					
ANR	103051	Identifier	p_prefix		101522	0					
ANR	103052	Identifier	p_prefix		101522	1					
ANR	103053	PrimaryExpression	""""""		101522	2					
ANR	103054	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	3					
ANR	103055	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	0					
ANR	103056	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0					
ANR	103057	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0		&&			
ANR	103058	Identifier	p_prefix		101522	0					
ANR	103059	CallExpression	"axutil_strcmp ( p_prefix , """" )"		101522	1					
ANR	103060	Callee	axutil_strcmp		101522	0					
ANR	103061	Identifier	axutil_strcmp		101522	0					
ANR	103062	ArgumentList	p_prefix		101522	1					
ANR	103063	Argument	p_prefix		101522	0					
ANR	103064	Identifier	p_prefix		101522	0					
ANR	103065	Argument	""""""		101522	1					
ANR	103066	PrimaryExpression	""""""		101522	0					
ANR	103067	PrimaryExpression	""":"""		101522	1					
ANR	103068	PrimaryExpression	""""""		101522	2					
ANR	103069	ExpressionStatement	start_input_str_len = axutil_strlen ( start_input_str )	1484:24:77289:77341	101522	3	True				
ANR	103070	AssignmentExpression	start_input_str_len = axutil_strlen ( start_input_str )		101522	0		=			
ANR	103071	Identifier	start_input_str_len		101522	0					
ANR	103072	CallExpression	axutil_strlen ( start_input_str )		101522	1					
ANR	103073	Callee	axutil_strlen		101522	0					
ANR	103074	Identifier	axutil_strlen		101522	0					
ANR	103075	ArgumentList	start_input_str		101522	1					
ANR	103076	Argument	start_input_str		101522	0					
ANR	103077	Identifier	start_input_str		101522	0					
ANR	103078	ExpressionStatement	"sprintf ( end_input_str , ""</%s%siwd>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	1485:24:77367:77541	101522	4	True				
ANR	103079	CallExpression	"sprintf ( end_input_str , ""</%s%siwd>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		101522	0					
ANR	103080	Callee	sprintf		101522	0					
ANR	103081	Identifier	sprintf		101522	0					
ANR	103082	ArgumentList	end_input_str		101522	1					
ANR	103083	Argument	end_input_str		101522	0					
ANR	103084	Identifier	end_input_str		101522	0					
ANR	103085	Argument	"""</%s%siwd>"""		101522	1					
ANR	103086	PrimaryExpression	"""</%s%siwd>"""		101522	0					
ANR	103087	Argument	"p_prefix ? p_prefix : """""		101522	2					
ANR	103088	ConditionalExpression	"p_prefix ? p_prefix : """""		101522	0					
ANR	103089	Condition	p_prefix		101522	0					
ANR	103090	Identifier	p_prefix		101522	0					
ANR	103091	Identifier	p_prefix		101522	1					
ANR	103092	PrimaryExpression	""""""		101522	2					
ANR	103093	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	3					
ANR	103094	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	0					
ANR	103095	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0					
ANR	103096	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0		&&			
ANR	103097	Identifier	p_prefix		101522	0					
ANR	103098	CallExpression	"axutil_strcmp ( p_prefix , """" )"		101522	1					
ANR	103099	Callee	axutil_strcmp		101522	0					
ANR	103100	Identifier	axutil_strcmp		101522	0					
ANR	103101	ArgumentList	p_prefix		101522	1					
ANR	103102	Argument	p_prefix		101522	0					
ANR	103103	Identifier	p_prefix		101522	0					
ANR	103104	Argument	""""""		101522	1					
ANR	103105	PrimaryExpression	""""""		101522	0					
ANR	103106	PrimaryExpression	""":"""		101522	1					
ANR	103107	PrimaryExpression	""""""		101522	2					
ANR	103108	ExpressionStatement	end_input_str_len = axutil_strlen ( end_input_str )	1488:24:77567:77615	101522	5	True				
ANR	103109	AssignmentExpression	end_input_str_len = axutil_strlen ( end_input_str )		101522	0		=			
ANR	103110	Identifier	end_input_str_len		101522	0					
ANR	103111	CallExpression	axutil_strlen ( end_input_str )		101522	1					
ANR	103112	Callee	axutil_strlen		101522	0					
ANR	103113	Identifier	axutil_strlen		101522	0					
ANR	103114	ArgumentList	end_input_str		101522	1					
ANR	103115	Argument	end_input_str		101522	0					
ANR	103116	Identifier	end_input_str		101522	0					
ANR	103117	ExpressionStatement	text_value_4 = ( axis2_char_t * ) property_Iwd . c_str ( )	1490:27:77665:77715	101522	6	True				
ANR	103118	AssignmentExpression	text_value_4 = ( axis2_char_t * ) property_Iwd . c_str ( )		101522	0		=			
ANR	103119	Identifier	text_value_4		101522	0					
ANR	103120	CastExpression	( axis2_char_t * ) property_Iwd . c_str ( )		101522	1					
ANR	103121	CastTarget	axis2_char_t *		101522	0					
ANR	103122	CallExpression	property_Iwd . c_str ( )		101522	1					
ANR	103123	Callee	property_Iwd . c_str		101522	0					
ANR	103124	MemberAccess	property_Iwd . c_str		101522	0					
ANR	103125	Identifier	property_Iwd		101522	0					
ANR	103126	Identifier	c_str		101522	1					
ANR	103127	ArgumentList			101522	1					
ANR	103128	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"	1492:27:77772:77860	101522	7	True				
ANR	103129	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"		101522	0					
ANR	103130	Callee	axutil_stream_write		101522	0					
ANR	103131	Identifier	axutil_stream_write		101522	0					
ANR	103132	ArgumentList	stream		101522	1					
ANR	103133	Argument	stream		101522	0					
ANR	103134	Identifier	stream		101522	0					
ANR	103135	Argument	Environment :: getEnv ( )		101522	1					
ANR	103136	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103137	Callee	Environment :: getEnv		101522	0					
ANR	103138	Identifier	Environment :: getEnv		101522	0					
ANR	103139	ArgumentList			101522	1					
ANR	103140	Argument	start_input_str		101522	2					
ANR	103141	Identifier	start_input_str		101522	0					
ANR	103142	Argument	start_input_str_len		101522	3					
ANR	103143	Identifier	start_input_str_len		101522	0					
ANR	103144	ExpressionStatement	"text_value_4_temp = axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_4 , true )"	1495:27:77946:78032	101522	8	True				
ANR	103145	AssignmentExpression	"text_value_4_temp = axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_4 , true )"		101522	0		=			
ANR	103146	Identifier	text_value_4_temp		101522	0					
ANR	103147	CallExpression	"axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_4 , true )"		101522	1					
ANR	103148	Callee	axutil_xml_quote_string		101522	0					
ANR	103149	Identifier	axutil_xml_quote_string		101522	0					
ANR	103150	ArgumentList	Environment :: getEnv ( )		101522	1					
ANR	103151	Argument	Environment :: getEnv ( )		101522	0					
ANR	103152	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103153	Callee	Environment :: getEnv		101522	0					
ANR	103154	Identifier	Environment :: getEnv		101522	0					
ANR	103155	ArgumentList			101522	1					
ANR	103156	Argument	text_value_4		101522	1					
ANR	103157	Identifier	text_value_4		101522	0					
ANR	103158	Argument	true		101522	2					
ANR	103159	Identifier	true		101522	0					
ANR	103160	IfStatement	if ( text_value_4_temp )		101522	9					
ANR	103161	Condition	text_value_4_temp	1496:31:78065:78081	101522	0	True				
ANR	103162	Identifier	text_value_4_temp		101522	0					
ANR	103163	CompoundStatement		351:27:16465:16465	101522	1					
ANR	103164	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_4_temp , axutil_strlen ( text_value_4_temp ) )"	1498:31:78144:78247	101522	0	True				
ANR	103165	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_4_temp , axutil_strlen ( text_value_4_temp ) )"		101522	0					
ANR	103166	Callee	axutil_stream_write		101522	0					
ANR	103167	Identifier	axutil_stream_write		101522	0					
ANR	103168	ArgumentList	stream		101522	1					
ANR	103169	Argument	stream		101522	0					
ANR	103170	Identifier	stream		101522	0					
ANR	103171	Argument	Environment :: getEnv ( )		101522	1					
ANR	103172	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103173	Callee	Environment :: getEnv		101522	0					
ANR	103174	Identifier	Environment :: getEnv		101522	0					
ANR	103175	ArgumentList			101522	1					
ANR	103176	Argument	text_value_4_temp		101522	2					
ANR	103177	Identifier	text_value_4_temp		101522	0					
ANR	103178	Argument	axutil_strlen ( text_value_4_temp )		101522	3					
ANR	103179	CallExpression	axutil_strlen ( text_value_4_temp )		101522	0					
ANR	103180	Callee	axutil_strlen		101522	0					
ANR	103181	Identifier	axutil_strlen		101522	0					
ANR	103182	ArgumentList	text_value_4_temp		101522	1					
ANR	103183	Argument	text_value_4_temp		101522	0					
ANR	103184	Identifier	text_value_4_temp		101522	0					
ANR	103185	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value_4_temp )"	1499:31:78280:78343	101522	1	True				
ANR	103186	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value_4_temp )"		101522	0					
ANR	103187	Callee	AXIS2_FREE		101522	0					
ANR	103188	Identifier	AXIS2_FREE		101522	0					
ANR	103189	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	103190	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103191	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103192	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103193	Callee	Environment :: getEnv		101522	0					
ANR	103194	Identifier	Environment :: getEnv		101522	0					
ANR	103195	ArgumentList			101522	1					
ANR	103196	Identifier	allocator		101522	1					
ANR	103197	Argument	text_value_4_temp		101522	1					
ANR	103198	Identifier	text_value_4_temp		101522	0					
ANR	103199	ElseStatement	else		101522	0					
ANR	103200	CompoundStatement		356:27:16787:16787	101522	0					
ANR	103201	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_4 , axutil_strlen ( text_value_4 ) )"	1503:31:78466:78559	101522	0	True				
ANR	103202	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_4 , axutil_strlen ( text_value_4 ) )"		101522	0					
ANR	103203	Callee	axutil_stream_write		101522	0					
ANR	103204	Identifier	axutil_stream_write		101522	0					
ANR	103205	ArgumentList	stream		101522	1					
ANR	103206	Argument	stream		101522	0					
ANR	103207	Identifier	stream		101522	0					
ANR	103208	Argument	Environment :: getEnv ( )		101522	1					
ANR	103209	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103210	Callee	Environment :: getEnv		101522	0					
ANR	103211	Identifier	Environment :: getEnv		101522	0					
ANR	103212	ArgumentList			101522	1					
ANR	103213	Argument	text_value_4		101522	2					
ANR	103214	Identifier	text_value_4		101522	0					
ANR	103215	Argument	axutil_strlen ( text_value_4 )		101522	3					
ANR	103216	CallExpression	axutil_strlen ( text_value_4 )		101522	0					
ANR	103217	Callee	axutil_strlen		101522	0					
ANR	103218	Identifier	axutil_strlen		101522	0					
ANR	103219	ArgumentList	text_value_4		101522	1					
ANR	103220	Argument	text_value_4		101522	0					
ANR	103221	Identifier	text_value_4		101522	0					
ANR	103222	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"	1506:27:78645:78729	101522	10	True				
ANR	103223	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"		101522	0					
ANR	103224	Callee	axutil_stream_write		101522	0					
ANR	103225	Identifier	axutil_stream_write		101522	0					
ANR	103226	ArgumentList	stream		101522	1					
ANR	103227	Argument	stream		101522	0					
ANR	103228	Identifier	stream		101522	0					
ANR	103229	Argument	Environment :: getEnv ( )		101522	1					
ANR	103230	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103231	Callee	Environment :: getEnv		101522	0					
ANR	103232	Identifier	Environment :: getEnv		101522	0					
ANR	103233	ArgumentList			101522	1					
ANR	103234	Argument	end_input_str		101522	2					
ANR	103235	Identifier	end_input_str		101522	0					
ANR	103236	Argument	end_input_str_len		101522	3					
ANR	103237	Identifier	end_input_str_len		101522	0					
ANR	103238	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"	1509:21:78802:78862	101522	11	True				
ANR	103239	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"		101522	0					
ANR	103240	Callee	AXIS2_FREE		101522	0					
ANR	103241	Identifier	AXIS2_FREE		101522	0					
ANR	103242	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	103243	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103244	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103245	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103246	Callee	Environment :: getEnv		101522	0					
ANR	103247	Identifier	Environment :: getEnv		101522	0					
ANR	103248	ArgumentList			101522	1					
ANR	103249	Identifier	allocator		101522	1					
ANR	103250	Argument	start_input_str		101522	1					
ANR	103251	Identifier	start_input_str		101522	0					
ANR	103252	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"	1510:21:78885:78943	101522	12	True				
ANR	103253	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"		101522	0					
ANR	103254	Callee	AXIS2_FREE		101522	0					
ANR	103255	Identifier	AXIS2_FREE		101522	0					
ANR	103256	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	103257	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103258	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103259	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103260	Callee	Environment :: getEnv		101522	0					
ANR	103261	Identifier	Environment :: getEnv		101522	0					
ANR	103262	ArgumentList			101522	1					
ANR	103263	Identifier	allocator		101522	1					
ANR	103264	Argument	end_input_str		101522	1					
ANR	103265	Identifier	end_input_str		101522	0					
ANR	103266	ExpressionStatement	p_prefix = NULL	1514:23:79007:79022	101522	49	True				
ANR	103267	AssignmentExpression	p_prefix = NULL		101522	0		=			
ANR	103268	Identifier	p_prefix		101522	0					
ANR	103269	Identifier	NULL		101522	1					
ANR	103270	IfStatement	if ( ! isValidSubmission_name )		101522	50					
ANR	103271	Condition	! isValidSubmission_name	1517:23:79071:79093	101522	0	True				
ANR	103272	UnaryOperationExpression	! isValidSubmission_name		101522	0					
ANR	103273	UnaryOperator	!		101522	0					
ANR	103274	Identifier	isValidSubmission_name		101522	1					
ANR	103275	CompoundStatement		372:19:17469:17469	101522	1					
ANR	103276	ElseStatement	else		101522	0					
ANR	103277	CompoundStatement		379:19:17691:17691	101522	0					
ANR	103278	ExpressionStatement	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""submission_name"" ) ) )"	1526:21:79360:79596	101522	0	True				
ANR	103279	AssignmentExpression	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""submission_name"" ) ) )"		101522	0		=			
ANR	103280	Identifier	start_input_str		101522	0					
ANR	103281	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""submission_name"" ) ) )"		101522	1					
ANR	103282	CastTarget	axis2_char_t *		101522	0					
ANR	103283	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""submission_name"" ) ) )"		101522	1					
ANR	103284	Callee	AXIS2_MALLOC		101522	0					
ANR	103285	Identifier	AXIS2_MALLOC		101522	0					
ANR	103286	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	103287	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103288	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103289	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103290	Callee	Environment :: getEnv		101522	0					
ANR	103291	Identifier	Environment :: getEnv		101522	0					
ANR	103292	ArgumentList			101522	1					
ANR	103293	Identifier	allocator		101522	1					
ANR	103294	Argument	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""submission_name"" ) )"		101522	1					
ANR	103295	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""submission_name"" ) )"		101522	0		*			
ANR	103296	SizeofExpression	sizeof ( axis2_char_t )		101522	0					
ANR	103297	Sizeof	sizeof		101522	0					
ANR	103298	SizeofOperand	axis2_char_t		101522	1					
ANR	103299	AdditiveExpression	"4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""submission_name"" )"		101522	1		+			
ANR	103300	PrimaryExpression	4		101522	0					
ANR	103301	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""submission_name"" )"		101522	1		+			
ANR	103302	CallExpression	axutil_strlen ( p_prefix )		101522	0					
ANR	103303	Callee	axutil_strlen		101522	0					
ANR	103304	Identifier	axutil_strlen		101522	0					
ANR	103305	ArgumentList	p_prefix		101522	1					
ANR	103306	Argument	p_prefix		101522	0					
ANR	103307	Identifier	p_prefix		101522	0					
ANR	103308	CallExpression	"axutil_strlen ( ""submission_name"" )"		101522	1					
ANR	103309	Callee	axutil_strlen		101522	0					
ANR	103310	Identifier	axutil_strlen		101522	0					
ANR	103311	ArgumentList	"""submission_name"""		101522	1					
ANR	103312	Argument	"""submission_name"""		101522	0					
ANR	103313	PrimaryExpression	"""submission_name"""		101522	0					
ANR	103314	ExpressionStatement	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""submission_name"" ) ) )"	1531:21:79722:79921	101522	1	True				
ANR	103315	AssignmentExpression	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""submission_name"" ) ) )"		101522	0		=			
ANR	103316	Identifier	end_input_str		101522	0					
ANR	103317	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""submission_name"" ) ) )"		101522	1					
ANR	103318	CastTarget	axis2_char_t *		101522	0					
ANR	103319	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""submission_name"" ) ) )"		101522	1					
ANR	103320	Callee	AXIS2_MALLOC		101522	0					
ANR	103321	Identifier	AXIS2_MALLOC		101522	0					
ANR	103322	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	103323	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103324	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103325	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103326	Callee	Environment :: getEnv		101522	0					
ANR	103327	Identifier	Environment :: getEnv		101522	0					
ANR	103328	ArgumentList			101522	1					
ANR	103329	Identifier	allocator		101522	1					
ANR	103330	Argument	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""submission_name"" ) )"		101522	1					
ANR	103331	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""submission_name"" ) )"		101522	0		*			
ANR	103332	SizeofExpression	sizeof ( axis2_char_t )		101522	0					
ANR	103333	Sizeof	sizeof		101522	0					
ANR	103334	SizeofOperand	axis2_char_t		101522	1					
ANR	103335	AdditiveExpression	"5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""submission_name"" )"		101522	1		+			
ANR	103336	PrimaryExpression	5		101522	0					
ANR	103337	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""submission_name"" )"		101522	1		+			
ANR	103338	CallExpression	axutil_strlen ( p_prefix )		101522	0					
ANR	103339	Callee	axutil_strlen		101522	0					
ANR	103340	Identifier	axutil_strlen		101522	0					
ANR	103341	ArgumentList	p_prefix		101522	1					
ANR	103342	Argument	p_prefix		101522	0					
ANR	103343	Identifier	p_prefix		101522	0					
ANR	103344	CallExpression	"axutil_strlen ( ""submission_name"" )"		101522	1					
ANR	103345	Callee	axutil_strlen		101522	0					
ANR	103346	Identifier	axutil_strlen		101522	0					
ANR	103347	ArgumentList	"""submission_name"""		101522	1					
ANR	103348	Argument	"""submission_name"""		101522	0					
ANR	103349	PrimaryExpression	"""submission_name"""		101522	0					
ANR	103350	ExpressionStatement	"sprintf ( start_input_str , ""<%s%ssubmission_name>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	1546:28:80289:80476	101522	2	True				
ANR	103351	CallExpression	"sprintf ( start_input_str , ""<%s%ssubmission_name>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		101522	0					
ANR	103352	Callee	sprintf		101522	0					
ANR	103353	Identifier	sprintf		101522	0					
ANR	103354	ArgumentList	start_input_str		101522	1					
ANR	103355	Argument	start_input_str		101522	0					
ANR	103356	Identifier	start_input_str		101522	0					
ANR	103357	Argument	"""<%s%ssubmission_name>"""		101522	1					
ANR	103358	PrimaryExpression	"""<%s%ssubmission_name>"""		101522	0					
ANR	103359	Argument	"p_prefix ? p_prefix : """""		101522	2					
ANR	103360	ConditionalExpression	"p_prefix ? p_prefix : """""		101522	0					
ANR	103361	Condition	p_prefix		101522	0					
ANR	103362	Identifier	p_prefix		101522	0					
ANR	103363	Identifier	p_prefix		101522	1					
ANR	103364	PrimaryExpression	""""""		101522	2					
ANR	103365	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	3					
ANR	103366	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	0					
ANR	103367	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0					
ANR	103368	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0		&&			
ANR	103369	Identifier	p_prefix		101522	0					
ANR	103370	CallExpression	"axutil_strcmp ( p_prefix , """" )"		101522	1					
ANR	103371	Callee	axutil_strcmp		101522	0					
ANR	103372	Identifier	axutil_strcmp		101522	0					
ANR	103373	ArgumentList	p_prefix		101522	1					
ANR	103374	Argument	p_prefix		101522	0					
ANR	103375	Identifier	p_prefix		101522	0					
ANR	103376	Argument	""""""		101522	1					
ANR	103377	PrimaryExpression	""""""		101522	0					
ANR	103378	PrimaryExpression	""":"""		101522	1					
ANR	103379	PrimaryExpression	""""""		101522	2					
ANR	103380	ExpressionStatement	start_input_str_len = axutil_strlen ( start_input_str )	1550:24:80531:80583	101522	3	True				
ANR	103381	AssignmentExpression	start_input_str_len = axutil_strlen ( start_input_str )		101522	0		=			
ANR	103382	Identifier	start_input_str_len		101522	0					
ANR	103383	CallExpression	axutil_strlen ( start_input_str )		101522	1					
ANR	103384	Callee	axutil_strlen		101522	0					
ANR	103385	Identifier	axutil_strlen		101522	0					
ANR	103386	ArgumentList	start_input_str		101522	1					
ANR	103387	Argument	start_input_str		101522	0					
ANR	103388	Identifier	start_input_str		101522	0					
ANR	103389	ExpressionStatement	"sprintf ( end_input_str , ""</%s%ssubmission_name>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	1551:24:80609:80795	101522	4	True				
ANR	103390	CallExpression	"sprintf ( end_input_str , ""</%s%ssubmission_name>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		101522	0					
ANR	103391	Callee	sprintf		101522	0					
ANR	103392	Identifier	sprintf		101522	0					
ANR	103393	ArgumentList	end_input_str		101522	1					
ANR	103394	Argument	end_input_str		101522	0					
ANR	103395	Identifier	end_input_str		101522	0					
ANR	103396	Argument	"""</%s%ssubmission_name>"""		101522	1					
ANR	103397	PrimaryExpression	"""</%s%ssubmission_name>"""		101522	0					
ANR	103398	Argument	"p_prefix ? p_prefix : """""		101522	2					
ANR	103399	ConditionalExpression	"p_prefix ? p_prefix : """""		101522	0					
ANR	103400	Condition	p_prefix		101522	0					
ANR	103401	Identifier	p_prefix		101522	0					
ANR	103402	Identifier	p_prefix		101522	1					
ANR	103403	PrimaryExpression	""""""		101522	2					
ANR	103404	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	3					
ANR	103405	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	0					
ANR	103406	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0					
ANR	103407	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0		&&			
ANR	103408	Identifier	p_prefix		101522	0					
ANR	103409	CallExpression	"axutil_strcmp ( p_prefix , """" )"		101522	1					
ANR	103410	Callee	axutil_strcmp		101522	0					
ANR	103411	Identifier	axutil_strcmp		101522	0					
ANR	103412	ArgumentList	p_prefix		101522	1					
ANR	103413	Argument	p_prefix		101522	0					
ANR	103414	Identifier	p_prefix		101522	0					
ANR	103415	Argument	""""""		101522	1					
ANR	103416	PrimaryExpression	""""""		101522	0					
ANR	103417	PrimaryExpression	""":"""		101522	1					
ANR	103418	PrimaryExpression	""""""		101522	2					
ANR	103419	ExpressionStatement	end_input_str_len = axutil_strlen ( end_input_str )	1554:24:80821:80869	101522	5	True				
ANR	103420	AssignmentExpression	end_input_str_len = axutil_strlen ( end_input_str )		101522	0		=			
ANR	103421	Identifier	end_input_str_len		101522	0					
ANR	103422	CallExpression	axutil_strlen ( end_input_str )		101522	1					
ANR	103423	Callee	axutil_strlen		101522	0					
ANR	103424	Identifier	axutil_strlen		101522	0					
ANR	103425	ArgumentList	end_input_str		101522	1					
ANR	103426	Argument	end_input_str		101522	0					
ANR	103427	Identifier	end_input_str		101522	0					
ANR	103428	ExpressionStatement	text_value_5 = ( axis2_char_t * ) property_Submission_name . c_str ( )	1556:27:80919:80981	101522	6	True				
ANR	103429	AssignmentExpression	text_value_5 = ( axis2_char_t * ) property_Submission_name . c_str ( )		101522	0		=			
ANR	103430	Identifier	text_value_5		101522	0					
ANR	103431	CastExpression	( axis2_char_t * ) property_Submission_name . c_str ( )		101522	1					
ANR	103432	CastTarget	axis2_char_t *		101522	0					
ANR	103433	CallExpression	property_Submission_name . c_str ( )		101522	1					
ANR	103434	Callee	property_Submission_name . c_str		101522	0					
ANR	103435	MemberAccess	property_Submission_name . c_str		101522	0					
ANR	103436	Identifier	property_Submission_name		101522	0					
ANR	103437	Identifier	c_str		101522	1					
ANR	103438	ArgumentList			101522	1					
ANR	103439	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"	1558:27:81038:81126	101522	7	True				
ANR	103440	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"		101522	0					
ANR	103441	Callee	axutil_stream_write		101522	0					
ANR	103442	Identifier	axutil_stream_write		101522	0					
ANR	103443	ArgumentList	stream		101522	1					
ANR	103444	Argument	stream		101522	0					
ANR	103445	Identifier	stream		101522	0					
ANR	103446	Argument	Environment :: getEnv ( )		101522	1					
ANR	103447	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103448	Callee	Environment :: getEnv		101522	0					
ANR	103449	Identifier	Environment :: getEnv		101522	0					
ANR	103450	ArgumentList			101522	1					
ANR	103451	Argument	start_input_str		101522	2					
ANR	103452	Identifier	start_input_str		101522	0					
ANR	103453	Argument	start_input_str_len		101522	3					
ANR	103454	Identifier	start_input_str_len		101522	0					
ANR	103455	ExpressionStatement	"text_value_5_temp = axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_5 , true )"	1561:27:81212:81298	101522	8	True				
ANR	103456	AssignmentExpression	"text_value_5_temp = axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_5 , true )"		101522	0		=			
ANR	103457	Identifier	text_value_5_temp		101522	0					
ANR	103458	CallExpression	"axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_5 , true )"		101522	1					
ANR	103459	Callee	axutil_xml_quote_string		101522	0					
ANR	103460	Identifier	axutil_xml_quote_string		101522	0					
ANR	103461	ArgumentList	Environment :: getEnv ( )		101522	1					
ANR	103462	Argument	Environment :: getEnv ( )		101522	0					
ANR	103463	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103464	Callee	Environment :: getEnv		101522	0					
ANR	103465	Identifier	Environment :: getEnv		101522	0					
ANR	103466	ArgumentList			101522	1					
ANR	103467	Argument	text_value_5		101522	1					
ANR	103468	Identifier	text_value_5		101522	0					
ANR	103469	Argument	true		101522	2					
ANR	103470	Identifier	true		101522	0					
ANR	103471	IfStatement	if ( text_value_5_temp )		101522	9					
ANR	103472	Condition	text_value_5_temp	1562:31:81331:81347	101522	0	True				
ANR	103473	Identifier	text_value_5_temp		101522	0					
ANR	103474	CompoundStatement		417:27:19731:19731	101522	1					
ANR	103475	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_5_temp , axutil_strlen ( text_value_5_temp ) )"	1564:31:81410:81513	101522	0	True				
ANR	103476	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_5_temp , axutil_strlen ( text_value_5_temp ) )"		101522	0					
ANR	103477	Callee	axutil_stream_write		101522	0					
ANR	103478	Identifier	axutil_stream_write		101522	0					
ANR	103479	ArgumentList	stream		101522	1					
ANR	103480	Argument	stream		101522	0					
ANR	103481	Identifier	stream		101522	0					
ANR	103482	Argument	Environment :: getEnv ( )		101522	1					
ANR	103483	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103484	Callee	Environment :: getEnv		101522	0					
ANR	103485	Identifier	Environment :: getEnv		101522	0					
ANR	103486	ArgumentList			101522	1					
ANR	103487	Argument	text_value_5_temp		101522	2					
ANR	103488	Identifier	text_value_5_temp		101522	0					
ANR	103489	Argument	axutil_strlen ( text_value_5_temp )		101522	3					
ANR	103490	CallExpression	axutil_strlen ( text_value_5_temp )		101522	0					
ANR	103491	Callee	axutil_strlen		101522	0					
ANR	103492	Identifier	axutil_strlen		101522	0					
ANR	103493	ArgumentList	text_value_5_temp		101522	1					
ANR	103494	Argument	text_value_5_temp		101522	0					
ANR	103495	Identifier	text_value_5_temp		101522	0					
ANR	103496	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value_5_temp )"	1565:31:81546:81609	101522	1	True				
ANR	103497	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value_5_temp )"		101522	0					
ANR	103498	Callee	AXIS2_FREE		101522	0					
ANR	103499	Identifier	AXIS2_FREE		101522	0					
ANR	103500	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	103501	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103502	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103503	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103504	Callee	Environment :: getEnv		101522	0					
ANR	103505	Identifier	Environment :: getEnv		101522	0					
ANR	103506	ArgumentList			101522	1					
ANR	103507	Identifier	allocator		101522	1					
ANR	103508	Argument	text_value_5_temp		101522	1					
ANR	103509	Identifier	text_value_5_temp		101522	0					
ANR	103510	ElseStatement	else		101522	0					
ANR	103511	CompoundStatement		422:27:20053:20053	101522	0					
ANR	103512	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_5 , axutil_strlen ( text_value_5 ) )"	1569:31:81732:81825	101522	0	True				
ANR	103513	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_5 , axutil_strlen ( text_value_5 ) )"		101522	0					
ANR	103514	Callee	axutil_stream_write		101522	0					
ANR	103515	Identifier	axutil_stream_write		101522	0					
ANR	103516	ArgumentList	stream		101522	1					
ANR	103517	Argument	stream		101522	0					
ANR	103518	Identifier	stream		101522	0					
ANR	103519	Argument	Environment :: getEnv ( )		101522	1					
ANR	103520	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103521	Callee	Environment :: getEnv		101522	0					
ANR	103522	Identifier	Environment :: getEnv		101522	0					
ANR	103523	ArgumentList			101522	1					
ANR	103524	Argument	text_value_5		101522	2					
ANR	103525	Identifier	text_value_5		101522	0					
ANR	103526	Argument	axutil_strlen ( text_value_5 )		101522	3					
ANR	103527	CallExpression	axutil_strlen ( text_value_5 )		101522	0					
ANR	103528	Callee	axutil_strlen		101522	0					
ANR	103529	Identifier	axutil_strlen		101522	0					
ANR	103530	ArgumentList	text_value_5		101522	1					
ANR	103531	Argument	text_value_5		101522	0					
ANR	103532	Identifier	text_value_5		101522	0					
ANR	103533	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"	1572:27:81911:81995	101522	10	True				
ANR	103534	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"		101522	0					
ANR	103535	Callee	axutil_stream_write		101522	0					
ANR	103536	Identifier	axutil_stream_write		101522	0					
ANR	103537	ArgumentList	stream		101522	1					
ANR	103538	Argument	stream		101522	0					
ANR	103539	Identifier	stream		101522	0					
ANR	103540	Argument	Environment :: getEnv ( )		101522	1					
ANR	103541	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103542	Callee	Environment :: getEnv		101522	0					
ANR	103543	Identifier	Environment :: getEnv		101522	0					
ANR	103544	ArgumentList			101522	1					
ANR	103545	Argument	end_input_str		101522	2					
ANR	103546	Identifier	end_input_str		101522	0					
ANR	103547	Argument	end_input_str_len		101522	3					
ANR	103548	Identifier	end_input_str_len		101522	0					
ANR	103549	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"	1575:21:82068:82128	101522	11	True				
ANR	103550	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"		101522	0					
ANR	103551	Callee	AXIS2_FREE		101522	0					
ANR	103552	Identifier	AXIS2_FREE		101522	0					
ANR	103553	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	103554	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103555	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103556	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103557	Callee	Environment :: getEnv		101522	0					
ANR	103558	Identifier	Environment :: getEnv		101522	0					
ANR	103559	ArgumentList			101522	1					
ANR	103560	Identifier	allocator		101522	1					
ANR	103561	Argument	start_input_str		101522	1					
ANR	103562	Identifier	start_input_str		101522	0					
ANR	103563	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"	1576:21:82151:82209	101522	12	True				
ANR	103564	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"		101522	0					
ANR	103565	Callee	AXIS2_FREE		101522	0					
ANR	103566	Identifier	AXIS2_FREE		101522	0					
ANR	103567	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	103568	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103569	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103570	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103571	Callee	Environment :: getEnv		101522	0					
ANR	103572	Identifier	Environment :: getEnv		101522	0					
ANR	103573	ArgumentList			101522	1					
ANR	103574	Identifier	allocator		101522	1					
ANR	103575	Argument	end_input_str		101522	1					
ANR	103576	Identifier	end_input_str		101522	0					
ANR	103577	ExpressionStatement	p_prefix = NULL	1580:23:82273:82288	101522	51	True				
ANR	103578	AssignmentExpression	p_prefix = NULL		101522	0		=			
ANR	103579	Identifier	p_prefix		101522	0					
ANR	103580	Identifier	NULL		101522	1					
ANR	103581	IfStatement	if ( ! isValidRequirements )		101522	52					
ANR	103582	Condition	! isValidRequirements	1583:23:82337:82356	101522	0	True				
ANR	103583	UnaryOperationExpression	! isValidRequirements		101522	0					
ANR	103584	UnaryOperator	!		101522	0					
ANR	103585	Identifier	isValidRequirements		101522	1					
ANR	103586	CompoundStatement		438:19:20732:20732	101522	1					
ANR	103587	ElseStatement	else		101522	0					
ANR	103588	CompoundStatement		445:19:20954:20954	101522	0					
ANR	103589	ExpressionStatement	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""requirements"" ) ) )"	1592:21:82623:82856	101522	0	True				
ANR	103590	AssignmentExpression	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""requirements"" ) ) )"		101522	0		=			
ANR	103591	Identifier	start_input_str		101522	0					
ANR	103592	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""requirements"" ) ) )"		101522	1					
ANR	103593	CastTarget	axis2_char_t *		101522	0					
ANR	103594	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""requirements"" ) ) )"		101522	1					
ANR	103595	Callee	AXIS2_MALLOC		101522	0					
ANR	103596	Identifier	AXIS2_MALLOC		101522	0					
ANR	103597	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	103598	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103599	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103600	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103601	Callee	Environment :: getEnv		101522	0					
ANR	103602	Identifier	Environment :: getEnv		101522	0					
ANR	103603	ArgumentList			101522	1					
ANR	103604	Identifier	allocator		101522	1					
ANR	103605	Argument	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""requirements"" ) )"		101522	1					
ANR	103606	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""requirements"" ) )"		101522	0		*			
ANR	103607	SizeofExpression	sizeof ( axis2_char_t )		101522	0					
ANR	103608	Sizeof	sizeof		101522	0					
ANR	103609	SizeofOperand	axis2_char_t		101522	1					
ANR	103610	AdditiveExpression	"4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""requirements"" )"		101522	1		+			
ANR	103611	PrimaryExpression	4		101522	0					
ANR	103612	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""requirements"" )"		101522	1		+			
ANR	103613	CallExpression	axutil_strlen ( p_prefix )		101522	0					
ANR	103614	Callee	axutil_strlen		101522	0					
ANR	103615	Identifier	axutil_strlen		101522	0					
ANR	103616	ArgumentList	p_prefix		101522	1					
ANR	103617	Argument	p_prefix		101522	0					
ANR	103618	Identifier	p_prefix		101522	0					
ANR	103619	CallExpression	"axutil_strlen ( ""requirements"" )"		101522	1					
ANR	103620	Callee	axutil_strlen		101522	0					
ANR	103621	Identifier	axutil_strlen		101522	0					
ANR	103622	ArgumentList	"""requirements"""		101522	1					
ANR	103623	Argument	"""requirements"""		101522	0					
ANR	103624	PrimaryExpression	"""requirements"""		101522	0					
ANR	103625	ExpressionStatement	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""requirements"" ) ) )"	1597:21:82982:83178	101522	1	True				
ANR	103626	AssignmentExpression	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""requirements"" ) ) )"		101522	0		=			
ANR	103627	Identifier	end_input_str		101522	0					
ANR	103628	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""requirements"" ) ) )"		101522	1					
ANR	103629	CastTarget	axis2_char_t *		101522	0					
ANR	103630	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""requirements"" ) ) )"		101522	1					
ANR	103631	Callee	AXIS2_MALLOC		101522	0					
ANR	103632	Identifier	AXIS2_MALLOC		101522	0					
ANR	103633	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	103634	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103635	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103636	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103637	Callee	Environment :: getEnv		101522	0					
ANR	103638	Identifier	Environment :: getEnv		101522	0					
ANR	103639	ArgumentList			101522	1					
ANR	103640	Identifier	allocator		101522	1					
ANR	103641	Argument	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""requirements"" ) )"		101522	1					
ANR	103642	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""requirements"" ) )"		101522	0		*			
ANR	103643	SizeofExpression	sizeof ( axis2_char_t )		101522	0					
ANR	103644	Sizeof	sizeof		101522	0					
ANR	103645	SizeofOperand	axis2_char_t		101522	1					
ANR	103646	AdditiveExpression	"5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""requirements"" )"		101522	1		+			
ANR	103647	PrimaryExpression	5		101522	0					
ANR	103648	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""requirements"" )"		101522	1		+			
ANR	103649	CallExpression	axutil_strlen ( p_prefix )		101522	0					
ANR	103650	Callee	axutil_strlen		101522	0					
ANR	103651	Identifier	axutil_strlen		101522	0					
ANR	103652	ArgumentList	p_prefix		101522	1					
ANR	103653	Argument	p_prefix		101522	0					
ANR	103654	Identifier	p_prefix		101522	0					
ANR	103655	CallExpression	"axutil_strlen ( ""requirements"" )"		101522	1					
ANR	103656	Callee	axutil_strlen		101522	0					
ANR	103657	Identifier	axutil_strlen		101522	0					
ANR	103658	ArgumentList	"""requirements"""		101522	1					
ANR	103659	Argument	"""requirements"""		101522	0					
ANR	103660	PrimaryExpression	"""requirements"""		101522	0					
ANR	103661	IfStatement	if ( property_Requirements != NULL )		101522	2					
ANR	103662	Condition	property_Requirements != NULL	1608:25:83473:83501	101522	0	True				
ANR	103663	EqualityExpression	property_Requirements != NULL		101522	0		!=			
ANR	103664	Identifier	property_Requirements		101522	0					
ANR	103665	Identifier	NULL		101522	1					
ANR	103666	CompoundStatement		463:21:21879:21879	101522	1					
ANR	103667	ExpressionStatement	"sprintf ( start_input_str , ""<%s%srequirements"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	1612:28:83581:83764	101522	0	True				
ANR	103668	CallExpression	"sprintf ( start_input_str , ""<%s%srequirements"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		101522	0					
ANR	103669	Callee	sprintf		101522	0					
ANR	103670	Identifier	sprintf		101522	0					
ANR	103671	ArgumentList	start_input_str		101522	1					
ANR	103672	Argument	start_input_str		101522	0					
ANR	103673	Identifier	start_input_str		101522	0					
ANR	103674	Argument	"""<%s%srequirements"""		101522	1					
ANR	103675	PrimaryExpression	"""<%s%srequirements"""		101522	0					
ANR	103676	Argument	"p_prefix ? p_prefix : """""		101522	2					
ANR	103677	ConditionalExpression	"p_prefix ? p_prefix : """""		101522	0					
ANR	103678	Condition	p_prefix		101522	0					
ANR	103679	Identifier	p_prefix		101522	0					
ANR	103680	Identifier	p_prefix		101522	1					
ANR	103681	PrimaryExpression	""""""		101522	2					
ANR	103682	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	3					
ANR	103683	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	0					
ANR	103684	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0					
ANR	103685	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0		&&			
ANR	103686	Identifier	p_prefix		101522	0					
ANR	103687	CallExpression	"axutil_strcmp ( p_prefix , """" )"		101522	1					
ANR	103688	Callee	axutil_strcmp		101522	0					
ANR	103689	Identifier	axutil_strcmp		101522	0					
ANR	103690	ArgumentList	p_prefix		101522	1					
ANR	103691	Argument	p_prefix		101522	0					
ANR	103692	Identifier	p_prefix		101522	0					
ANR	103693	Argument	""""""		101522	1					
ANR	103694	PrimaryExpression	""""""		101522	0					
ANR	103695	PrimaryExpression	""":"""		101522	1					
ANR	103696	PrimaryExpression	""""""		101522	2					
ANR	103697	ExpressionStatement	start_input_str_len = axutil_strlen ( start_input_str )	1616:25:83820:83872	101522	1	True				
ANR	103698	AssignmentExpression	start_input_str_len = axutil_strlen ( start_input_str )		101522	0		=			
ANR	103699	Identifier	start_input_str_len		101522	0					
ANR	103700	CallExpression	axutil_strlen ( start_input_str )		101522	1					
ANR	103701	Callee	axutil_strlen		101522	0					
ANR	103702	Identifier	axutil_strlen		101522	0					
ANR	103703	ArgumentList	start_input_str		101522	1					
ANR	103704	Argument	start_input_str		101522	0					
ANR	103705	Identifier	start_input_str		101522	0					
ANR	103706	ExpressionStatement	"sprintf ( end_input_str , ""</%s%srequirements>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	1618:25:83900:84083	101522	2	True				
ANR	103707	CallExpression	"sprintf ( end_input_str , ""</%s%srequirements>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		101522	0					
ANR	103708	Callee	sprintf		101522	0					
ANR	103709	Identifier	sprintf		101522	0					
ANR	103710	ArgumentList	end_input_str		101522	1					
ANR	103711	Argument	end_input_str		101522	0					
ANR	103712	Identifier	end_input_str		101522	0					
ANR	103713	Argument	"""</%s%srequirements>"""		101522	1					
ANR	103714	PrimaryExpression	"""</%s%srequirements>"""		101522	0					
ANR	103715	Argument	"p_prefix ? p_prefix : """""		101522	2					
ANR	103716	ConditionalExpression	"p_prefix ? p_prefix : """""		101522	0					
ANR	103717	Condition	p_prefix		101522	0					
ANR	103718	Identifier	p_prefix		101522	0					
ANR	103719	Identifier	p_prefix		101522	1					
ANR	103720	PrimaryExpression	""""""		101522	2					
ANR	103721	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	3					
ANR	103722	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	0					
ANR	103723	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0					
ANR	103724	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0		&&			
ANR	103725	Identifier	p_prefix		101522	0					
ANR	103726	CallExpression	"axutil_strcmp ( p_prefix , """" )"		101522	1					
ANR	103727	Callee	axutil_strcmp		101522	0					
ANR	103728	Identifier	axutil_strcmp		101522	0					
ANR	103729	ArgumentList	p_prefix		101522	1					
ANR	103730	Argument	p_prefix		101522	0					
ANR	103731	Identifier	p_prefix		101522	0					
ANR	103732	Argument	""""""		101522	1					
ANR	103733	PrimaryExpression	""""""		101522	0					
ANR	103734	PrimaryExpression	""":"""		101522	1					
ANR	103735	PrimaryExpression	""""""		101522	2					
ANR	103736	ExpressionStatement	end_input_str_len = axutil_strlen ( end_input_str )	1621:25:84110:84158	101522	3	True				
ANR	103737	AssignmentExpression	end_input_str_len = axutil_strlen ( end_input_str )		101522	0		=			
ANR	103738	Identifier	end_input_str_len		101522	0					
ANR	103739	CallExpression	axutil_strlen ( end_input_str )		101522	1					
ANR	103740	Callee	axutil_strlen		101522	0					
ANR	103741	Identifier	axutil_strlen		101522	0					
ANR	103742	ArgumentList	end_input_str		101522	1					
ANR	103743	Argument	end_input_str		101522	0					
ANR	103744	Identifier	end_input_str		101522	0					
ANR	103745	ExpressionStatement	count = property_Requirements -> size ( )	1623:25:84186:84223	101522	4	True				
ANR	103746	AssignmentExpression	count = property_Requirements -> size ( )		101522	0		=			
ANR	103747	Identifier	count		101522	0					
ANR	103748	CallExpression	property_Requirements -> size ( )		101522	1					
ANR	103749	Callee	property_Requirements -> size		101522	0					
ANR	103750	PtrMemberAccess	property_Requirements -> size		101522	0					
ANR	103751	Identifier	property_Requirements		101522	0					
ANR	103752	Identifier	size		101522	1					
ANR	103753	ArgumentList			101522	1					
ANR	103754	ForStatement	for ( i = 0 ; i < count ; i ++ )		101522	5					
ANR	103755	ForInit	i = 0 ;	1624:29:84254:84259	101522	0	True				
ANR	103756	AssignmentExpression	i = 0		101522	0		=			
ANR	103757	Identifier	i		101522	0					
ANR	103758	PrimaryExpression	0		101522	1					
ANR	103759	Condition	i < count	1624:36:84261:84269	101522	1	True				
ANR	103760	RelationalExpression	i < count		101522	0		<			
ANR	103761	Identifier	i		101522	0					
ANR	103762	Identifier	count		101522	1					
ANR	103763	PostIncDecOperationExpression	i ++	1624:47:84272:84274	101522	2	True				
ANR	103764	Identifier	i		101522	0					
ANR	103765	IncDec	++		101522	1					
ANR	103766	CompoundStatement		480:28:22686:22757	101522	3					
ANR	103767	IdentifierDeclStatement	AviaryCommon :: ResourceConstraint * element = ( * property_Requirements ) [ i ] ;	1626:28:84332:84403	101522	0	True				
ANR	103768	IdentifierDecl	* element = ( * property_Requirements ) [ i ]		101522	0					
ANR	103769	IdentifierDeclType	AviaryCommon :: ResourceConstraint *		101522	0					
ANR	103770	Identifier	element		101522	1					
ANR	103771	AssignmentExpression	* element = ( * property_Requirements ) [ i ]		101522	2		=			
ANR	103772	Identifier	element		101522	0					
ANR	103773	ArrayIndexing	( * property_Requirements ) [ i ]		101522	1					
ANR	103774	UnaryOperationExpression	* property_Requirements		101522	0					
ANR	103775	UnaryOperator	*		101522	0					
ANR	103776	Identifier	property_Requirements		101522	1					
ANR	103777	Identifier	i		101522	1					
ANR	103778	IfStatement	if ( NULL == element )		101522	1					
ANR	103779	Condition	NULL == element	1628:31:84437:84451	101522	0	True				
ANR	103780	EqualityExpression	NULL == element		101522	0		==			
ANR	103781	Identifier	NULL		101522	0					
ANR	103782	Identifier	element		101522	1					
ANR	103783	CompoundStatement		483:28:22837:22837	101522	1					
ANR	103784	ContinueStatement	continue ;	1630:32:84517:84525	101522	0	True				
ANR	103785	IfStatement	if ( ! element -> isParticle ( ) )		101522	2					
ANR	103786	Condition	! element -> isParticle ( )	1641:31:84778:84799	101522	0	True				
ANR	103787	UnaryOperationExpression	! element -> isParticle ( )		101522	0					
ANR	103788	UnaryOperator	!		101522	0					
ANR	103789	CallExpression	element -> isParticle ( )		101522	1					
ANR	103790	Callee	element -> isParticle		101522	0					
ANR	103791	PtrMemberAccess	element -> isParticle		101522	0					
ANR	103792	Identifier	element		101522	0					
ANR	103793	Identifier	isParticle		101522	1					
ANR	103794	ArgumentList			101522	1					
ANR	103795	CompoundStatement		496:28:23184:23184	101522	1					
ANR	103796	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"	1643:32:84864:84952	101522	0	True				
ANR	103797	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"		101522	0					
ANR	103798	Callee	axutil_stream_write		101522	0					
ANR	103799	Identifier	axutil_stream_write		101522	0					
ANR	103800	ArgumentList	stream		101522	1					
ANR	103801	Argument	stream		101522	0					
ANR	103802	Identifier	stream		101522	0					
ANR	103803	Argument	Environment :: getEnv ( )		101522	1					
ANR	103804	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103805	Callee	Environment :: getEnv		101522	0					
ANR	103806	Identifier	Environment :: getEnv		101522	0					
ANR	103807	ArgumentList			101522	1					
ANR	103808	Argument	start_input_str		101522	2					
ANR	103809	Identifier	start_input_str		101522	0					
ANR	103810	Argument	start_input_str_len		101522	3					
ANR	103811	Identifier	start_input_str_len		101522	0					
ANR	103812	ExpressionStatement	"element -> serialize ( current_node , parent_element , element -> isParticle ( ) || false , namespaces , next_ns_index )"	1645:28:85012:85200	101522	3	True				
ANR	103813	CallExpression	"element -> serialize ( current_node , parent_element , element -> isParticle ( ) || false , namespaces , next_ns_index )"		101522	0					
ANR	103814	Callee	element -> serialize		101522	0					
ANR	103815	PtrMemberAccess	element -> serialize		101522	0					
ANR	103816	Identifier	element		101522	0					
ANR	103817	Identifier	serialize		101522	1					
ANR	103818	ArgumentList	current_node		101522	1					
ANR	103819	Argument	current_node		101522	0					
ANR	103820	Identifier	current_node		101522	0					
ANR	103821	Argument	parent_element		101522	1					
ANR	103822	Identifier	parent_element		101522	0					
ANR	103823	Argument	element -> isParticle ( ) || false		101522	2					
ANR	103824	OrExpression	element -> isParticle ( ) || false		101522	0		||			
ANR	103825	CallExpression	element -> isParticle ( )		101522	0					
ANR	103826	Callee	element -> isParticle		101522	0					
ANR	103827	PtrMemberAccess	element -> isParticle		101522	0					
ANR	103828	Identifier	element		101522	0					
ANR	103829	Identifier	isParticle		101522	1					
ANR	103830	ArgumentList			101522	1					
ANR	103831	Identifier	false		101522	1					
ANR	103832	Argument	namespaces		101522	3					
ANR	103833	Identifier	namespaces		101522	0					
ANR	103834	Argument	next_ns_index		101522	4					
ANR	103835	Identifier	next_ns_index		101522	0					
ANR	103836	IfStatement	if ( ! element -> isParticle ( ) )		101522	4					
ANR	103837	Condition	! element -> isParticle ( )	1648:31:85262:85283	101522	0	True				
ANR	103838	UnaryOperationExpression	! element -> isParticle ( )		101522	0					
ANR	103839	UnaryOperator	!		101522	0					
ANR	103840	CallExpression	element -> isParticle ( )		101522	1					
ANR	103841	Callee	element -> isParticle		101522	0					
ANR	103842	PtrMemberAccess	element -> isParticle		101522	0					
ANR	103843	Identifier	element		101522	0					
ANR	103844	Identifier	isParticle		101522	1					
ANR	103845	ArgumentList			101522	1					
ANR	103846	CompoundStatement		503:28:23668:23668	101522	1					
ANR	103847	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"	1650:32:85348:85432	101522	0	True				
ANR	103848	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"		101522	0					
ANR	103849	Callee	axutil_stream_write		101522	0					
ANR	103850	Identifier	axutil_stream_write		101522	0					
ANR	103851	ArgumentList	stream		101522	1					
ANR	103852	Argument	stream		101522	0					
ANR	103853	Identifier	stream		101522	0					
ANR	103854	Argument	Environment :: getEnv ( )		101522	1					
ANR	103855	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103856	Callee	Environment :: getEnv		101522	0					
ANR	103857	Identifier	Environment :: getEnv		101522	0					
ANR	103858	ArgumentList			101522	1					
ANR	103859	Argument	end_input_str		101522	2					
ANR	103860	Identifier	end_input_str		101522	0					
ANR	103861	Argument	end_input_str_len		101522	3					
ANR	103862	Identifier	end_input_str_len		101522	0					
ANR	103863	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"	1657:21:85606:85666	101522	3	True				
ANR	103864	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"		101522	0					
ANR	103865	Callee	AXIS2_FREE		101522	0					
ANR	103866	Identifier	AXIS2_FREE		101522	0					
ANR	103867	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	103868	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103869	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103870	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103871	Callee	Environment :: getEnv		101522	0					
ANR	103872	Identifier	Environment :: getEnv		101522	0					
ANR	103873	ArgumentList			101522	1					
ANR	103874	Identifier	allocator		101522	1					
ANR	103875	Argument	start_input_str		101522	1					
ANR	103876	Identifier	start_input_str		101522	0					
ANR	103877	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"	1658:21:85689:85747	101522	4	True				
ANR	103878	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"		101522	0					
ANR	103879	Callee	AXIS2_FREE		101522	0					
ANR	103880	Identifier	AXIS2_FREE		101522	0					
ANR	103881	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	103882	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103883	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103884	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103885	Callee	Environment :: getEnv		101522	0					
ANR	103886	Identifier	Environment :: getEnv		101522	0					
ANR	103887	ArgumentList			101522	1					
ANR	103888	Identifier	allocator		101522	1					
ANR	103889	Argument	end_input_str		101522	1					
ANR	103890	Identifier	end_input_str		101522	0					
ANR	103891	ExpressionStatement	p_prefix = NULL	1662:23:85811:85826	101522	53	True				
ANR	103892	AssignmentExpression	p_prefix = NULL		101522	0		=			
ANR	103893	Identifier	p_prefix		101522	0					
ANR	103894	Identifier	NULL		101522	1					
ANR	103895	IfStatement	if ( ! isValidExtra )		101522	54					
ANR	103896	Condition	! isValidExtra	1665:23:85875:85887	101522	0	True				
ANR	103897	UnaryOperationExpression	! isValidExtra		101522	0					
ANR	103898	UnaryOperator	!		101522	0					
ANR	103899	Identifier	isValidExtra		101522	1					
ANR	103900	CompoundStatement		520:19:24263:24263	101522	1					
ANR	103901	ElseStatement	else		101522	0					
ANR	103902	CompoundStatement		527:19:24485:24485	101522	0					
ANR	103903	ExpressionStatement	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""extra"" ) ) )"	1674:21:86154:86380	101522	0	True				
ANR	103904	AssignmentExpression	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""extra"" ) ) )"		101522	0		=			
ANR	103905	Identifier	start_input_str		101522	0					
ANR	103906	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""extra"" ) ) )"		101522	1					
ANR	103907	CastTarget	axis2_char_t *		101522	0					
ANR	103908	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""extra"" ) ) )"		101522	1					
ANR	103909	Callee	AXIS2_MALLOC		101522	0					
ANR	103910	Identifier	AXIS2_MALLOC		101522	0					
ANR	103911	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	103912	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103913	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103914	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103915	Callee	Environment :: getEnv		101522	0					
ANR	103916	Identifier	Environment :: getEnv		101522	0					
ANR	103917	ArgumentList			101522	1					
ANR	103918	Identifier	allocator		101522	1					
ANR	103919	Argument	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""extra"" ) )"		101522	1					
ANR	103920	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""extra"" ) )"		101522	0		*			
ANR	103921	SizeofExpression	sizeof ( axis2_char_t )		101522	0					
ANR	103922	Sizeof	sizeof		101522	0					
ANR	103923	SizeofOperand	axis2_char_t		101522	1					
ANR	103924	AdditiveExpression	"4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""extra"" )"		101522	1		+			
ANR	103925	PrimaryExpression	4		101522	0					
ANR	103926	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""extra"" )"		101522	1		+			
ANR	103927	CallExpression	axutil_strlen ( p_prefix )		101522	0					
ANR	103928	Callee	axutil_strlen		101522	0					
ANR	103929	Identifier	axutil_strlen		101522	0					
ANR	103930	ArgumentList	p_prefix		101522	1					
ANR	103931	Argument	p_prefix		101522	0					
ANR	103932	Identifier	p_prefix		101522	0					
ANR	103933	CallExpression	"axutil_strlen ( ""extra"" )"		101522	1					
ANR	103934	Callee	axutil_strlen		101522	0					
ANR	103935	Identifier	axutil_strlen		101522	0					
ANR	103936	ArgumentList	"""extra"""		101522	1					
ANR	103937	Argument	"""extra"""		101522	0					
ANR	103938	PrimaryExpression	"""extra"""		101522	0					
ANR	103939	ExpressionStatement	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""extra"" ) ) )"	1679:21:86506:86695	101522	1	True				
ANR	103940	AssignmentExpression	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""extra"" ) ) )"		101522	0		=			
ANR	103941	Identifier	end_input_str		101522	0					
ANR	103942	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""extra"" ) ) )"		101522	1					
ANR	103943	CastTarget	axis2_char_t *		101522	0					
ANR	103944	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""extra"" ) ) )"		101522	1					
ANR	103945	Callee	AXIS2_MALLOC		101522	0					
ANR	103946	Identifier	AXIS2_MALLOC		101522	0					
ANR	103947	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	103948	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103949	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	103950	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	103951	Callee	Environment :: getEnv		101522	0					
ANR	103952	Identifier	Environment :: getEnv		101522	0					
ANR	103953	ArgumentList			101522	1					
ANR	103954	Identifier	allocator		101522	1					
ANR	103955	Argument	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""extra"" ) )"		101522	1					
ANR	103956	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""extra"" ) )"		101522	0		*			
ANR	103957	SizeofExpression	sizeof ( axis2_char_t )		101522	0					
ANR	103958	Sizeof	sizeof		101522	0					
ANR	103959	SizeofOperand	axis2_char_t		101522	1					
ANR	103960	AdditiveExpression	"5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""extra"" )"		101522	1		+			
ANR	103961	PrimaryExpression	5		101522	0					
ANR	103962	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""extra"" )"		101522	1		+			
ANR	103963	CallExpression	axutil_strlen ( p_prefix )		101522	0					
ANR	103964	Callee	axutil_strlen		101522	0					
ANR	103965	Identifier	axutil_strlen		101522	0					
ANR	103966	ArgumentList	p_prefix		101522	1					
ANR	103967	Argument	p_prefix		101522	0					
ANR	103968	Identifier	p_prefix		101522	0					
ANR	103969	CallExpression	"axutil_strlen ( ""extra"" )"		101522	1					
ANR	103970	Callee	axutil_strlen		101522	0					
ANR	103971	Identifier	axutil_strlen		101522	0					
ANR	103972	ArgumentList	"""extra"""		101522	1					
ANR	103973	Argument	"""extra"""		101522	0					
ANR	103974	PrimaryExpression	"""extra"""		101522	0					
ANR	103975	IfStatement	if ( property_Extra != NULL )		101522	2					
ANR	103976	Condition	property_Extra != NULL	1690:25:86983:87004	101522	0	True				
ANR	103977	EqualityExpression	property_Extra != NULL		101522	0		!=			
ANR	103978	Identifier	property_Extra		101522	0					
ANR	103979	Identifier	NULL		101522	1					
ANR	103980	CompoundStatement		545:21:25382:25382	101522	1					
ANR	103981	ExpressionStatement	"sprintf ( start_input_str , ""<%s%sextra"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	1694:28:87084:87260	101522	0	True				
ANR	103982	CallExpression	"sprintf ( start_input_str , ""<%s%sextra"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		101522	0					
ANR	103983	Callee	sprintf		101522	0					
ANR	103984	Identifier	sprintf		101522	0					
ANR	103985	ArgumentList	start_input_str		101522	1					
ANR	103986	Argument	start_input_str		101522	0					
ANR	103987	Identifier	start_input_str		101522	0					
ANR	103988	Argument	"""<%s%sextra"""		101522	1					
ANR	103989	PrimaryExpression	"""<%s%sextra"""		101522	0					
ANR	103990	Argument	"p_prefix ? p_prefix : """""		101522	2					
ANR	103991	ConditionalExpression	"p_prefix ? p_prefix : """""		101522	0					
ANR	103992	Condition	p_prefix		101522	0					
ANR	103993	Identifier	p_prefix		101522	0					
ANR	103994	Identifier	p_prefix		101522	1					
ANR	103995	PrimaryExpression	""""""		101522	2					
ANR	103996	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	3					
ANR	103997	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	0					
ANR	103998	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0					
ANR	103999	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0		&&			
ANR	104000	Identifier	p_prefix		101522	0					
ANR	104001	CallExpression	"axutil_strcmp ( p_prefix , """" )"		101522	1					
ANR	104002	Callee	axutil_strcmp		101522	0					
ANR	104003	Identifier	axutil_strcmp		101522	0					
ANR	104004	ArgumentList	p_prefix		101522	1					
ANR	104005	Argument	p_prefix		101522	0					
ANR	104006	Identifier	p_prefix		101522	0					
ANR	104007	Argument	""""""		101522	1					
ANR	104008	PrimaryExpression	""""""		101522	0					
ANR	104009	PrimaryExpression	""":"""		101522	1					
ANR	104010	PrimaryExpression	""""""		101522	2					
ANR	104011	ExpressionStatement	start_input_str_len = axutil_strlen ( start_input_str )	1698:25:87316:87368	101522	1	True				
ANR	104012	AssignmentExpression	start_input_str_len = axutil_strlen ( start_input_str )		101522	0		=			
ANR	104013	Identifier	start_input_str_len		101522	0					
ANR	104014	CallExpression	axutil_strlen ( start_input_str )		101522	1					
ANR	104015	Callee	axutil_strlen		101522	0					
ANR	104016	Identifier	axutil_strlen		101522	0					
ANR	104017	ArgumentList	start_input_str		101522	1					
ANR	104018	Argument	start_input_str		101522	0					
ANR	104019	Identifier	start_input_str		101522	0					
ANR	104020	ExpressionStatement	"sprintf ( end_input_str , ""</%s%sextra>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	1700:25:87396:87572	101522	2	True				
ANR	104021	CallExpression	"sprintf ( end_input_str , ""</%s%sextra>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		101522	0					
ANR	104022	Callee	sprintf		101522	0					
ANR	104023	Identifier	sprintf		101522	0					
ANR	104024	ArgumentList	end_input_str		101522	1					
ANR	104025	Argument	end_input_str		101522	0					
ANR	104026	Identifier	end_input_str		101522	0					
ANR	104027	Argument	"""</%s%sextra>"""		101522	1					
ANR	104028	PrimaryExpression	"""</%s%sextra>"""		101522	0					
ANR	104029	Argument	"p_prefix ? p_prefix : """""		101522	2					
ANR	104030	ConditionalExpression	"p_prefix ? p_prefix : """""		101522	0					
ANR	104031	Condition	p_prefix		101522	0					
ANR	104032	Identifier	p_prefix		101522	0					
ANR	104033	Identifier	p_prefix		101522	1					
ANR	104034	PrimaryExpression	""""""		101522	2					
ANR	104035	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	3					
ANR	104036	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		101522	0					
ANR	104037	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0					
ANR	104038	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		101522	0		&&			
ANR	104039	Identifier	p_prefix		101522	0					
ANR	104040	CallExpression	"axutil_strcmp ( p_prefix , """" )"		101522	1					
ANR	104041	Callee	axutil_strcmp		101522	0					
ANR	104042	Identifier	axutil_strcmp		101522	0					
ANR	104043	ArgumentList	p_prefix		101522	1					
ANR	104044	Argument	p_prefix		101522	0					
ANR	104045	Identifier	p_prefix		101522	0					
ANR	104046	Argument	""""""		101522	1					
ANR	104047	PrimaryExpression	""""""		101522	0					
ANR	104048	PrimaryExpression	""":"""		101522	1					
ANR	104049	PrimaryExpression	""""""		101522	2					
ANR	104050	ExpressionStatement	end_input_str_len = axutil_strlen ( end_input_str )	1703:25:87599:87647	101522	3	True				
ANR	104051	AssignmentExpression	end_input_str_len = axutil_strlen ( end_input_str )		101522	0		=			
ANR	104052	Identifier	end_input_str_len		101522	0					
ANR	104053	CallExpression	axutil_strlen ( end_input_str )		101522	1					
ANR	104054	Callee	axutil_strlen		101522	0					
ANR	104055	Identifier	axutil_strlen		101522	0					
ANR	104056	ArgumentList	end_input_str		101522	1					
ANR	104057	Argument	end_input_str		101522	0					
ANR	104058	Identifier	end_input_str		101522	0					
ANR	104059	ExpressionStatement	count = property_Extra -> size ( )	1705:25:87675:87705	101522	4	True				
ANR	104060	AssignmentExpression	count = property_Extra -> size ( )		101522	0		=			
ANR	104061	Identifier	count		101522	0					
ANR	104062	CallExpression	property_Extra -> size ( )		101522	1					
ANR	104063	Callee	property_Extra -> size		101522	0					
ANR	104064	PtrMemberAccess	property_Extra -> size		101522	0					
ANR	104065	Identifier	property_Extra		101522	0					
ANR	104066	Identifier	size		101522	1					
ANR	104067	ArgumentList			101522	1					
ANR	104068	ForStatement	for ( i = 0 ; i < count ; i ++ )		101522	5					
ANR	104069	ForInit	i = 0 ;	1706:29:87736:87741	101522	0	True				
ANR	104070	AssignmentExpression	i = 0		101522	0		=			
ANR	104071	Identifier	i		101522	0					
ANR	104072	PrimaryExpression	0		101522	1					
ANR	104073	Condition	i < count	1706:36:87743:87751	101522	1	True				
ANR	104074	RelationalExpression	i < count		101522	0		<			
ANR	104075	Identifier	i		101522	0					
ANR	104076	Identifier	count		101522	1					
ANR	104077	PostIncDecOperationExpression	i ++	1706:47:87754:87756	101522	2	True				
ANR	104078	Identifier	i		101522	0					
ANR	104079	IncDec	++		101522	1					
ANR	104080	CompoundStatement		562:28:26168:26223	101522	3					
ANR	104081	IdentifierDeclStatement	AviaryCommon :: Attribute * element = ( * property_Extra ) [ i ] ;	1708:28:87814:87869	101522	0	True				
ANR	104082	IdentifierDecl	* element = ( * property_Extra ) [ i ]		101522	0					
ANR	104083	IdentifierDeclType	AviaryCommon :: Attribute *		101522	0					
ANR	104084	Identifier	element		101522	1					
ANR	104085	AssignmentExpression	* element = ( * property_Extra ) [ i ]		101522	2		=			
ANR	104086	Identifier	element		101522	0					
ANR	104087	ArrayIndexing	( * property_Extra ) [ i ]		101522	1					
ANR	104088	UnaryOperationExpression	* property_Extra		101522	0					
ANR	104089	UnaryOperator	*		101522	0					
ANR	104090	Identifier	property_Extra		101522	1					
ANR	104091	Identifier	i		101522	1					
ANR	104092	IfStatement	if ( NULL == element )		101522	1					
ANR	104093	Condition	NULL == element	1710:31:87903:87917	101522	0	True				
ANR	104094	EqualityExpression	NULL == element		101522	0		==			
ANR	104095	Identifier	NULL		101522	0					
ANR	104096	Identifier	element		101522	1					
ANR	104097	CompoundStatement		565:28:26303:26303	101522	1					
ANR	104098	ContinueStatement	continue ;	1712:32:87983:87991	101522	0	True				
ANR	104099	IfStatement	if ( ! element -> isParticle ( ) )		101522	2					
ANR	104100	Condition	! element -> isParticle ( )	1723:31:88237:88258	101522	0	True				
ANR	104101	UnaryOperationExpression	! element -> isParticle ( )		101522	0					
ANR	104102	UnaryOperator	!		101522	0					
ANR	104103	CallExpression	element -> isParticle ( )		101522	1					
ANR	104104	Callee	element -> isParticle		101522	0					
ANR	104105	PtrMemberAccess	element -> isParticle		101522	0					
ANR	104106	Identifier	element		101522	0					
ANR	104107	Identifier	isParticle		101522	1					
ANR	104108	ArgumentList			101522	1					
ANR	104109	CompoundStatement		578:28:26643:26643	101522	1					
ANR	104110	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"	1725:32:88323:88411	101522	0	True				
ANR	104111	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"		101522	0					
ANR	104112	Callee	axutil_stream_write		101522	0					
ANR	104113	Identifier	axutil_stream_write		101522	0					
ANR	104114	ArgumentList	stream		101522	1					
ANR	104115	Argument	stream		101522	0					
ANR	104116	Identifier	stream		101522	0					
ANR	104117	Argument	Environment :: getEnv ( )		101522	1					
ANR	104118	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	104119	Callee	Environment :: getEnv		101522	0					
ANR	104120	Identifier	Environment :: getEnv		101522	0					
ANR	104121	ArgumentList			101522	1					
ANR	104122	Argument	start_input_str		101522	2					
ANR	104123	Identifier	start_input_str		101522	0					
ANR	104124	Argument	start_input_str_len		101522	3					
ANR	104125	Identifier	start_input_str_len		101522	0					
ANR	104126	ExpressionStatement	"element -> serialize ( current_node , parent_element , element -> isParticle ( ) || false , namespaces , next_ns_index )"	1727:28:88471:88659	101522	3	True				
ANR	104127	CallExpression	"element -> serialize ( current_node , parent_element , element -> isParticle ( ) || false , namespaces , next_ns_index )"		101522	0					
ANR	104128	Callee	element -> serialize		101522	0					
ANR	104129	PtrMemberAccess	element -> serialize		101522	0					
ANR	104130	Identifier	element		101522	0					
ANR	104131	Identifier	serialize		101522	1					
ANR	104132	ArgumentList	current_node		101522	1					
ANR	104133	Argument	current_node		101522	0					
ANR	104134	Identifier	current_node		101522	0					
ANR	104135	Argument	parent_element		101522	1					
ANR	104136	Identifier	parent_element		101522	0					
ANR	104137	Argument	element -> isParticle ( ) || false		101522	2					
ANR	104138	OrExpression	element -> isParticle ( ) || false		101522	0		||			
ANR	104139	CallExpression	element -> isParticle ( )		101522	0					
ANR	104140	Callee	element -> isParticle		101522	0					
ANR	104141	PtrMemberAccess	element -> isParticle		101522	0					
ANR	104142	Identifier	element		101522	0					
ANR	104143	Identifier	isParticle		101522	1					
ANR	104144	ArgumentList			101522	1					
ANR	104145	Identifier	false		101522	1					
ANR	104146	Argument	namespaces		101522	3					
ANR	104147	Identifier	namespaces		101522	0					
ANR	104148	Argument	next_ns_index		101522	4					
ANR	104149	Identifier	next_ns_index		101522	0					
ANR	104150	IfStatement	if ( ! element -> isParticle ( ) )		101522	4					
ANR	104151	Condition	! element -> isParticle ( )	1730:31:88721:88742	101522	0	True				
ANR	104152	UnaryOperationExpression	! element -> isParticle ( )		101522	0					
ANR	104153	UnaryOperator	!		101522	0					
ANR	104154	CallExpression	element -> isParticle ( )		101522	1					
ANR	104155	Callee	element -> isParticle		101522	0					
ANR	104156	PtrMemberAccess	element -> isParticle		101522	0					
ANR	104157	Identifier	element		101522	0					
ANR	104158	Identifier	isParticle		101522	1					
ANR	104159	ArgumentList			101522	1					
ANR	104160	CompoundStatement		585:28:27127:27127	101522	1					
ANR	104161	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"	1732:32:88807:88891	101522	0	True				
ANR	104162	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"		101522	0					
ANR	104163	Callee	axutil_stream_write		101522	0					
ANR	104164	Identifier	axutil_stream_write		101522	0					
ANR	104165	ArgumentList	stream		101522	1					
ANR	104166	Argument	stream		101522	0					
ANR	104167	Identifier	stream		101522	0					
ANR	104168	Argument	Environment :: getEnv ( )		101522	1					
ANR	104169	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	104170	Callee	Environment :: getEnv		101522	0					
ANR	104171	Identifier	Environment :: getEnv		101522	0					
ANR	104172	ArgumentList			101522	1					
ANR	104173	Argument	end_input_str		101522	2					
ANR	104174	Identifier	end_input_str		101522	0					
ANR	104175	Argument	end_input_str_len		101522	3					
ANR	104176	Identifier	end_input_str_len		101522	0					
ANR	104177	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"	1739:21:89065:89125	101522	3	True				
ANR	104178	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"		101522	0					
ANR	104179	Callee	AXIS2_FREE		101522	0					
ANR	104180	Identifier	AXIS2_FREE		101522	0					
ANR	104181	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	104182	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	104183	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	104184	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	104185	Callee	Environment :: getEnv		101522	0					
ANR	104186	Identifier	Environment :: getEnv		101522	0					
ANR	104187	ArgumentList			101522	1					
ANR	104188	Identifier	allocator		101522	1					
ANR	104189	Argument	start_input_str		101522	1					
ANR	104190	Identifier	start_input_str		101522	0					
ANR	104191	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"	1740:21:89148:89206	101522	4	True				
ANR	104192	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"		101522	0					
ANR	104193	Callee	AXIS2_FREE		101522	0					
ANR	104194	Identifier	AXIS2_FREE		101522	0					
ANR	104195	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	104196	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	104197	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	104198	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	104199	Callee	Environment :: getEnv		101522	0					
ANR	104200	Identifier	Environment :: getEnv		101522	0					
ANR	104201	ArgumentList			101522	1					
ANR	104202	Identifier	allocator		101522	1					
ANR	104203	Argument	end_input_str		101522	1					
ANR	104204	Identifier	end_input_str		101522	0					
ANR	104205	IfStatement	if ( parent_tag_closed )		101522	55					
ANR	104206	Condition	parent_tag_closed	1745:23:89291:89307	101522	0	True				
ANR	104207	Identifier	parent_tag_closed		101522	0					
ANR	104208	CompoundStatement		600:20:27684:27684	101522	1					
ANR	104209	IfStatement	if ( isValidAllowOverrides )		101522	0					
ANR	104210	Condition	isValidAllowOverrides	1747:26:89358:89378	101522	0	True				
ANR	104211	Identifier	isValidAllowOverrides		101522	0					
ANR	104212	CompoundStatement		602:23:27758:27758	101522	1					
ANR	104213	ExpressionStatement	p_prefix = NULL	1750:27:89457:89472	101522	0	True				
ANR	104214	AssignmentExpression	p_prefix = NULL		101522	0		=			
ANR	104215	Identifier	p_prefix		101522	0					
ANR	104216	Identifier	NULL		101522	1					
ANR	104217	ExpressionStatement	ns1 = NULL	1751:27:89501:89511	101522	1	True				
ANR	104218	AssignmentExpression	ns1 = NULL		101522	0		=			
ANR	104219	Identifier	ns1		101522	0					
ANR	104220	Identifier	NULL		101522	1					
ANR	104221	ExpressionStatement	"text_value = ( axis2_char_t * ) ( ( property_AllowOverrides ) ? axutil_strdup ( Environment :: getEnv ( ) , ""true"" ) : axutil_strdup ( Environment :: getEnv ( ) , ""false"" ) )"	1754:27:89594:89741	101522	2	True				
ANR	104222	AssignmentExpression	"text_value = ( axis2_char_t * ) ( ( property_AllowOverrides ) ? axutil_strdup ( Environment :: getEnv ( ) , ""true"" ) : axutil_strdup ( Environment :: getEnv ( ) , ""false"" ) )"		101522	0		=			
ANR	104223	Identifier	text_value		101522	0					
ANR	104224	CastExpression	"( axis2_char_t * ) ( ( property_AllowOverrides ) ? axutil_strdup ( Environment :: getEnv ( ) , ""true"" ) : axutil_strdup ( Environment :: getEnv ( ) , ""false"" ) )"		101522	1					
ANR	104225	CastTarget	axis2_char_t *		101522	0					
ANR	104226	ConditionalExpression	"( property_AllowOverrides ) ? axutil_strdup ( Environment :: getEnv ( ) , ""true"" ) : axutil_strdup ( Environment :: getEnv ( ) , ""false"" )"		101522	1					
ANR	104227	Condition	property_AllowOverrides		101522	0					
ANR	104228	Identifier	property_AllowOverrides		101522	0					
ANR	104229	CallExpression	"axutil_strdup ( Environment :: getEnv ( ) , ""true"" )"		101522	1					
ANR	104230	Callee	axutil_strdup		101522	0					
ANR	104231	Identifier	axutil_strdup		101522	0					
ANR	104232	ArgumentList	Environment :: getEnv ( )		101522	1					
ANR	104233	Argument	Environment :: getEnv ( )		101522	0					
ANR	104234	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	104235	Callee	Environment :: getEnv		101522	0					
ANR	104236	Identifier	Environment :: getEnv		101522	0					
ANR	104237	ArgumentList			101522	1					
ANR	104238	Argument	"""true"""		101522	1					
ANR	104239	PrimaryExpression	"""true"""		101522	0					
ANR	104240	CallExpression	"axutil_strdup ( Environment :: getEnv ( ) , ""false"" )"		101522	2					
ANR	104241	Callee	axutil_strdup		101522	0					
ANR	104242	Identifier	axutil_strdup		101522	0					
ANR	104243	ArgumentList	Environment :: getEnv ( )		101522	1					
ANR	104244	Argument	Environment :: getEnv ( )		101522	0					
ANR	104245	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	104246	Callee	Environment :: getEnv		101522	0					
ANR	104247	Identifier	Environment :: getEnv		101522	0					
ANR	104248	ArgumentList			101522	1					
ANR	104249	Argument	"""false"""		101522	1					
ANR	104250	PrimaryExpression	"""false"""		101522	0					
ANR	104251	ExpressionStatement	"text_attri = axiom_attribute_create ( Environment :: getEnv ( ) , ""allowOverrides"" , text_value , ns1 )"	1755:27:89770:89864	101522	3	True				
ANR	104252	AssignmentExpression	"text_attri = axiom_attribute_create ( Environment :: getEnv ( ) , ""allowOverrides"" , text_value , ns1 )"		101522	0		=			
ANR	104253	Identifier	text_attri		101522	0					
ANR	104254	CallExpression	"axiom_attribute_create ( Environment :: getEnv ( ) , ""allowOverrides"" , text_value , ns1 )"		101522	1					
ANR	104255	Callee	axiom_attribute_create		101522	0					
ANR	104256	Identifier	axiom_attribute_create		101522	0					
ANR	104257	ArgumentList	Environment :: getEnv ( )		101522	1					
ANR	104258	Argument	Environment :: getEnv ( )		101522	0					
ANR	104259	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	104260	Callee	Environment :: getEnv		101522	0					
ANR	104261	Identifier	Environment :: getEnv		101522	0					
ANR	104262	ArgumentList			101522	1					
ANR	104263	Argument	"""allowOverrides"""		101522	1					
ANR	104264	PrimaryExpression	"""allowOverrides"""		101522	0					
ANR	104265	Argument	text_value		101522	2					
ANR	104266	Identifier	text_value		101522	0					
ANR	104267	Argument	ns1		101522	3					
ANR	104268	Identifier	ns1		101522	0					
ANR	104269	ExpressionStatement	"axiom_element_add_attribute ( parent_element , Environment :: getEnv ( ) , text_attri , parent )"	1756:27:89893:89980	101522	4	True				
ANR	104270	CallExpression	"axiom_element_add_attribute ( parent_element , Environment :: getEnv ( ) , text_attri , parent )"		101522	0					
ANR	104271	Callee	axiom_element_add_attribute		101522	0					
ANR	104272	Identifier	axiom_element_add_attribute		101522	0					
ANR	104273	ArgumentList	parent_element		101522	1					
ANR	104274	Argument	parent_element		101522	0					
ANR	104275	Identifier	parent_element		101522	0					
ANR	104276	Argument	Environment :: getEnv ( )		101522	1					
ANR	104277	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	104278	Callee	Environment :: getEnv		101522	0					
ANR	104279	Identifier	Environment :: getEnv		101522	0					
ANR	104280	ArgumentList			101522	1					
ANR	104281	Argument	text_attri		101522	2					
ANR	104282	Identifier	text_attri		101522	0					
ANR	104283	Argument	parent		101522	3					
ANR	104284	Identifier	parent		101522	0					
ANR	104285	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value )"	1757:27:90009:90065	101522	5	True				
ANR	104286	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value )"		101522	0					
ANR	104287	Callee	AXIS2_FREE		101522	0					
ANR	104288	Identifier	AXIS2_FREE		101522	0					
ANR	104289	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	104290	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	104291	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	104292	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	104293	Callee	Environment :: getEnv		101522	0					
ANR	104294	Identifier	Environment :: getEnv		101522	0					
ANR	104295	ArgumentList			101522	1					
ANR	104296	Identifier	allocator		101522	1					
ANR	104297	Argument	text_value		101522	1					
ANR	104298	Identifier	text_value		101522	0					
ANR	104299	IfStatement	if ( namespaces )		101522	56					
ANR	104300	Condition	namespaces	1763:22:90199:90208	101522	0	True				
ANR	104301	Identifier	namespaces		101522	0					
ANR	104302	CompoundStatement		620:23:28657:28666	101522	1					
ANR	104303	IdentifierDeclStatement	axutil_hash_index_t * hi ;	1765:23:90255:90278	101522	0	True				
ANR	104304	IdentifierDecl	* hi		101522	0					
ANR	104305	IdentifierDeclType	axutil_hash_index_t *		101522	0					
ANR	104306	Identifier	hi		101522	1					
ANR	104307	IdentifierDeclStatement	void * val ;	1766:23:90303:90312	101522	1	True				
ANR	104308	IdentifierDecl	* val		101522	0					
ANR	104309	IdentifierDeclType	void *		101522	0					
ANR	104310	Identifier	val		101522	1					
ANR	104311	ForStatement	"for ( hi = axutil_hash_first ( namespaces , Environment :: getEnv ( ) ) ; hi ; hi = axutil_hash_next ( Environment :: getEnv ( ) , hi ) )"		101522	2					
ANR	104312	ForInit	"hi = axutil_hash_first ( namespaces , Environment :: getEnv ( ) ) ;"	1767:28:90342:90399	101522	0	True				
ANR	104313	AssignmentExpression	"hi = axutil_hash_first ( namespaces , Environment :: getEnv ( ) )"		101522	0		=			
ANR	104314	Identifier	hi		101522	0					
ANR	104315	CallExpression	"axutil_hash_first ( namespaces , Environment :: getEnv ( ) )"		101522	1					
ANR	104316	Callee	axutil_hash_first		101522	0					
ANR	104317	Identifier	axutil_hash_first		101522	0					
ANR	104318	ArgumentList	namespaces		101522	1					
ANR	104319	Argument	namespaces		101522	0					
ANR	104320	Identifier	namespaces		101522	0					
ANR	104321	Argument	Environment :: getEnv ( )		101522	1					
ANR	104322	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	104323	Callee	Environment :: getEnv		101522	0					
ANR	104324	Identifier	Environment :: getEnv		101522	0					
ANR	104325	ArgumentList			101522	1					
ANR	104326	Condition	hi	1767:87:90401:90402	101522	1	True				
ANR	104327	Identifier	hi		101522	0					
ANR	104328	AssignmentExpression	"hi = axutil_hash_next ( Environment :: getEnv ( ) , hi )"	1767:91:90405:90452	101522	2	True	=			
ANR	104329	Identifier	hi		101522	0					
ANR	104330	CallExpression	"axutil_hash_next ( Environment :: getEnv ( ) , hi )"		101522	1					
ANR	104331	Callee	axutil_hash_next		101522	0					
ANR	104332	Identifier	axutil_hash_next		101522	0					
ANR	104333	ArgumentList	Environment :: getEnv ( )		101522	1					
ANR	104334	Argument	Environment :: getEnv ( )		101522	0					
ANR	104335	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	104336	Callee	Environment :: getEnv		101522	0					
ANR	104337	Identifier	Environment :: getEnv		101522	0					
ANR	104338	ArgumentList			101522	1					
ANR	104339	Argument	hi		101522	1					
ANR	104340	Identifier	hi		101522	0					
ANR	104341	CompoundStatement		622:23:28832:28832	101522	3					
ANR	104342	ExpressionStatement	"axutil_hash_this ( hi , NULL , NULL , & val )"	1769:27:90507:90545	101522	0	True				
ANR	104343	CallExpression	"axutil_hash_this ( hi , NULL , NULL , & val )"		101522	0					
ANR	104344	Callee	axutil_hash_this		101522	0					
ANR	104345	Identifier	axutil_hash_this		101522	0					
ANR	104346	ArgumentList	hi		101522	1					
ANR	104347	Argument	hi		101522	0					
ANR	104348	Identifier	hi		101522	0					
ANR	104349	Argument	NULL		101522	1					
ANR	104350	Identifier	NULL		101522	0					
ANR	104351	Argument	NULL		101522	2					
ANR	104352	Identifier	NULL		101522	0					
ANR	104353	Argument	& val		101522	3					
ANR	104354	UnaryOperationExpression	& val		101522	0					
ANR	104355	UnaryOperator	&		101522	0					
ANR	104356	Identifier	val		101522	1					
ANR	104357	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , val )"	1770:27:90574:90623	101522	1	True				
ANR	104358	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , val )"		101522	0					
ANR	104359	Callee	AXIS2_FREE		101522	0					
ANR	104360	Identifier	AXIS2_FREE		101522	0					
ANR	104361	ArgumentList	Environment :: getEnv ( ) -> allocator		101522	1					
ANR	104362	Argument	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	104363	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		101522	0					
ANR	104364	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	104365	Callee	Environment :: getEnv		101522	0					
ANR	104366	Identifier	Environment :: getEnv		101522	0					
ANR	104367	ArgumentList			101522	1					
ANR	104368	Identifier	allocator		101522	1					
ANR	104369	Argument	val		101522	1					
ANR	104370	Identifier	val		101522	0					
ANR	104371	ExpressionStatement	"axutil_hash_free ( namespaces , Environment :: getEnv ( ) )"	1772:23:90673:90724	101522	3	True				
ANR	104372	CallExpression	"axutil_hash_free ( namespaces , Environment :: getEnv ( ) )"		101522	0					
ANR	104373	Callee	axutil_hash_free		101522	0					
ANR	104374	Identifier	axutil_hash_free		101522	0					
ANR	104375	ArgumentList	namespaces		101522	1					
ANR	104376	Argument	namespaces		101522	0					
ANR	104377	Identifier	namespaces		101522	0					
ANR	104378	Argument	Environment :: getEnv ( )		101522	1					
ANR	104379	CallExpression	Environment :: getEnv ( )		101522	0					
ANR	104380	Callee	Environment :: getEnv		101522	0					
ANR	104381	Identifier	Environment :: getEnv		101522	0					
ANR	104382	ArgumentList			101522	1					
ANR	104383	ReturnStatement	return parent ;	1776:12:90777:90790	101522	57	True				
ANR	104384	Identifier	parent		101522	0					
ANR	104385	ReturnType	WSF_CALL		101522	1					
ANR	104386	Identifier	AviaryJob :: SubmitJob :: serialize		101522	2					
ANR	104387	ParameterList	"axiom_node_t * parent , axiom_element_t * parent_element , int parent_tag_closed , axutil_hash_t * namespaces , int * next_ns_index"		101522	3					
ANR	104388	Parameter	axiom_node_t * parent	1142:33:61496:61515	101522	0	True				
ANR	104389	ParameterType	axiom_node_t *		101522	0					
ANR	104390	Identifier	parent		101522	1					
ANR	104391	Parameter	axiom_element_t * parent_element	1143:3:61522:61552	101522	1	True				
ANR	104392	ParameterType	axiom_element_t *		101522	0					
ANR	104393	Identifier	parent_element		101522	1					
ANR	104394	Parameter	int parent_tag_closed	1144:3:61559:61579	101522	2	True				
ANR	104395	ParameterType	int		101522	0					
ANR	104396	Identifier	parent_tag_closed		101522	1					
ANR	104397	Parameter	axutil_hash_t * namespaces	1145:3:61586:61610	101522	3	True				
ANR	104398	ParameterType	axutil_hash_t *		101522	0					
ANR	104399	Identifier	namespaces		101522	1					
ANR	104400	Parameter	int * next_ns_index	1146:3:61617:61634	101522	4	True				
ANR	104401	ParameterType	int *		101522	0					
ANR	104402	Identifier	next_ns_index		101522	1					
ANR	104403	CFGEntryNode	ENTRY		101522		True				
ANR	104404	CFGExitNode	EXIT		101522		True				
ANR	104405	Symbol	& val		101522						
ANR	104406	Symbol	parent		101522						
ANR	104407	Symbol	property_Args		101522						
ANR	104408	Symbol	hi		101522						
ANR	104409	Symbol	current_node		101522						
ANR	104410	Symbol	property_Cmd . c_str		101522						
ANR	104411	Symbol	property_Submission_name . c_str		101522						
ANR	104412	Symbol	property_Submission_name		101522						
ANR	104413	Symbol	axutil_strlen		101522						
ANR	104414	Symbol	text_value_5_temp		101522						
ANR	104415	Symbol	& next_ns_index_value		101522						
ANR	104416	Symbol	ns1		101522						
ANR	104417	Symbol	property_Iwd		101522						
ANR	104418	Symbol	WSF_LOG_SI		101522						
ANR	104419	Symbol	& current_node		101522						
ANR	104420	Symbol	axiom_attribute_create		101522						
ANR	104421	Symbol	isValidRequirements		101522						
ANR	104422	Symbol	property_Extra -> size		101522						
ANR	104423	Symbol	* * property_Extra		101522						
ANR	104424	Symbol	axutil_hash_next		101522						
ANR	104425	Symbol	isValidSubmission_name		101522						
ANR	104426	Symbol	axutil_hash_make		101522						
ANR	104427	Symbol	text_value_1_temp		101522						
ANR	104428	Symbol	property_Requirements		101522						
ANR	104429	Symbol	element		101522						
ANR	104430	Symbol	property_Iwd . c_str		101522						
ANR	104431	Symbol	val		101522						
ANR	104432	Symbol	axiom_data_source_get_stream		101522						
ANR	104433	Symbol	NULL		101522						
ANR	104434	Symbol	isValidIwd		101522						
ANR	104435	Symbol	count		101522						
ANR	104436	Symbol	parent_tag_closed		101522						
ANR	104437	Symbol	next_ns_index		101522						
ANR	104438	Symbol	data_source		101522						
ANR	104439	Symbol	* * property_Requirements		101522						
ANR	104440	Symbol	text_value		101522						
ANR	104441	Symbol	start_input_str_len		101522						
ANR	104442	Symbol	axiom_data_source_create		101522						
ANR	104443	Symbol	axutil_xml_quote_string		101522						
ANR	104444	Symbol	qname_prefix		101522						
ANR	104445	Symbol	next_ns_index_value		101522						
ANR	104446	Symbol	axutil_strcmp		101522						
ANR	104447	Symbol	isValidOwner		101522						
ANR	104448	Symbol	end_input_str		101522						
ANR	104449	Symbol	true		101522						
ANR	104450	Symbol	& parent		101522						
ANR	104451	Symbol	namespaces		101522						
ANR	104452	Symbol	AXIS2_HASH_KEY_STRING		101522						
ANR	104453	Symbol	Environment :: getEnv		101522						
ANR	104454	Symbol	* element		101522						
ANR	104455	Symbol	axiom_namespace_create		101522						
ANR	104456	Symbol	* property_Requirements		101522						
ANR	104457	Symbol	qname_uri		101522						
ANR	104458	Symbol	text_value_3_temp		101522						
ANR	104459	Symbol	p_prefix		101522						
ANR	104460	Symbol	isValidAllowOverrides		101522						
ANR	104461	Symbol	property_Cmd		101522						
ANR	104462	Symbol	text_value_6		101522						
ANR	104463	Symbol	text_value_7		101522						
ANR	104464	Symbol	text_value_4		101522						
ANR	104465	Symbol	property_AllowOverrides		101522						
ANR	104466	Symbol	text_value_5		101522						
ANR	104467	Symbol	text_value_2		101522						
ANR	104468	Symbol	text_value_3		101522						
ANR	104469	Symbol	stream		101522						
ANR	104470	Symbol	text_attri		101522						
ANR	104471	Symbol	text_value_1		101522						
ANR	104472	Symbol	AXIS2_MALLOC		101522						
ANR	104473	Symbol	Environment :: getEnv ( ) -> allocator		101522						
ANR	104474	Symbol	property_Owner		101522						
ANR	104475	Symbol	text_value_8		101522						
ANR	104476	Symbol	parent_element		101522						
ANR	104477	Symbol	text_value_4_temp		101522						
ANR	104478	Symbol	property_Extra		101522						
ANR	104479	Symbol	end_input_str_len		101522						
ANR	104480	Symbol	tag_closed		101522						
ANR	104481	Symbol	isValidArgs		101522						
ANR	104482	Symbol	isValidCmd		101522						
ANR	104483	Symbol	false		101522						
ANR	104484	Symbol	i		101522						
ANR	104485	Symbol	start_input_str		101522						
ANR	104486	Symbol	property_Requirements -> size		101522						
ANR	104487	Symbol	ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT		101522						
ANR	104488	Symbol	Environment :: getEnv ( ) -> log		101522						
ANR	104489	Symbol	string_to_stream		101522						
ANR	104490	Symbol	property_Args . c_str		101522						
ANR	104491	Symbol	property_Owner . c_str		101522						
ANR	104492	Symbol	* i		101522						
ANR	104493	Symbol	text_value_2_temp		101522						
ANR	104494	Symbol	axutil_hash_first		101522						
ANR	104495	Symbol	* Environment :: getEnv		101522						
ANR	104496	Symbol	isValidExtra		101522						
ANR	104497	Symbol	axutil_strdup		101522						
ANR	104498	Symbol	* property_Extra		101522						
ANR	104499	Symbol	element -> isParticle		101522						
ANR	104500	Symbol	axiom_element_create		101522						
ANR	104501	Function	AviaryJob :: SubmitJob :: getProperty1	1785:12:90910:91039							
ANR	104502	FunctionDef	AviaryJob :: SubmitJob :: getProperty1 ()		104501	0					
ANR	104503	CompoundStatement		1787:12:90992:91039	104501	0					
ANR	104504	ReturnStatement	return getCmd ( ) ;	1788:16:91010:91025	104501	0	True				
ANR	104505	CallExpression	getCmd ( )		104501	0					
ANR	104506	Callee	getCmd		104501	0					
ANR	104507	Identifier	getCmd		104501	0					
ANR	104508	ArgumentList			104501	1					
ANR	104509	ReturnType	std :: string WSF_CALL		104501	1					
ANR	104510	Identifier	AviaryJob :: SubmitJob :: getProperty1		104501	2					
ANR	104511	ParameterList			104501	3					
ANR	104512	CFGEntryNode	ENTRY		104501		True				
ANR	104513	CFGExitNode	EXIT		104501		True				
ANR	104514	Symbol	getCmd		104501						
ANR	104515	Function	AviaryJob :: SubmitJob :: getCmd	1794:12:91117:91246							
ANR	104516	FunctionDef	AviaryJob :: SubmitJob :: getCmd ()		104515	0					
ANR	104517	CompoundStatement		1796:13:91194:91246	104515	0					
ANR	104518	ReturnStatement	return property_Cmd ;	1797:16:91212:91231	104515	0	True				
ANR	104519	Identifier	property_Cmd		104515	0					
ANR	104520	ReturnType	std :: string WSF_CALL		104515	1					
ANR	104521	Identifier	AviaryJob :: SubmitJob :: getCmd		104515	2					
ANR	104522	ParameterList			104515	3					
ANR	104523	CFGEntryNode	ENTRY		104515		True				
ANR	104524	CFGExitNode	EXIT		104515		True				
ANR	104525	Symbol	property_Cmd		104515						
ANR	104526	Function	AviaryJob :: SubmitJob :: setCmd	1803:12:91323:92194							
ANR	104527	FunctionDef	AviaryJob :: SubmitJob :: setCmd (const std :: string arg_Cmd)		104526	0					
ANR	104528	CompoundStatement		1806:13:91440:92194	104526	0					
ANR	104529	IfStatement	if ( isValidCmd && arg_Cmd == property_Cmd )		104526	0					
ANR	104530	Condition	isValidCmd && arg_Cmd == property_Cmd	1809:19:91479:91539	104526	0	True				
ANR	104531	AndExpression	isValidCmd && arg_Cmd == property_Cmd		104526	0		&&			
ANR	104532	Identifier	isValidCmd		104526	0					
ANR	104533	EqualityExpression	arg_Cmd == property_Cmd		104526	1		==			
ANR	104534	Identifier	arg_Cmd		104526	0					
ANR	104535	Identifier	property_Cmd		104526	1					
ANR	104536	CompoundStatement		6:16:117:117	104526	1					
ANR	104537	ReturnStatement	return true ;	1813:20:91601:91612	104526	0	True				
ANR	104538	Identifier	true		104526	0					
ANR	104539	IfStatement	if ( arg_Cmd . empty ( ) )		104526	1					
ANR	104540	Condition	arg_Cmd . empty ( )	1817:21:91671:91685	104526	0	True				
ANR	104541	CallExpression	arg_Cmd . empty ( )		104526	0					
ANR	104542	Callee	arg_Cmd . empty		104526	0					
ANR	104543	MemberAccess	arg_Cmd . empty		104526	0					
ANR	104544	Identifier	arg_Cmd		104526	0					
ANR	104545	Identifier	empty		104526	1					
ANR	104546	ArgumentList			104526	1					
ANR	104547	CompoundStatement		14:18:289:289	104526	1					
ANR	104548	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""cmd is being set to NULL, but it is not a nullable element"" )"	1820:22:91754:91872	104526	0	True				
ANR	104549	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""cmd is being set to NULL, but it is not a nullable element"" )"		104526	0					
ANR	104550	Callee	WSF_LOG_ERROR_MSG		104526	0					
ANR	104551	Identifier	WSF_LOG_ERROR_MSG		104526	0					
ANR	104552	ArgumentList	Environment :: getEnv ( ) -> log		104526	1					
ANR	104553	Argument	Environment :: getEnv ( ) -> log		104526	0					
ANR	104554	PtrMemberAccess	Environment :: getEnv ( ) -> log		104526	0					
ANR	104555	CallExpression	Environment :: getEnv ( )		104526	0					
ANR	104556	Callee	Environment :: getEnv		104526	0					
ANR	104557	Identifier	Environment :: getEnv		104526	0					
ANR	104558	ArgumentList			104526	1					
ANR	104559	Identifier	log		104526	1					
ANR	104560	Argument	WSF_LOG_SI		104526	1					
ANR	104561	Identifier	WSF_LOG_SI		104526	0					
ANR	104562	Argument	"""cmd is being set to NULL, but it is not a nullable element"""		104526	2					
ANR	104563	PrimaryExpression	"""cmd is being set to NULL, but it is not a nullable element"""		104526	0					
ANR	104564	ReturnStatement	return AXIS2_FAILURE ;	1821:22:91896:91916	104526	1	True				
ANR	104565	Identifier	AXIS2_FAILURE		104526	0					
ANR	104566	ExpressionStatement	resetCmd ( )	1826:16:91989:91999	104526	2	True				
ANR	104567	CallExpression	resetCmd ( )		104526	0					
ANR	104568	Callee	resetCmd		104526	0					
ANR	104569	Identifier	resetCmd		104526	0					
ANR	104570	ArgumentList			104526	1					
ANR	104571	ExpressionStatement	property_Cmd = std :: string ( arg_Cmd . c_str ( ) )	1829:24:92043:92086	104526	3	True				
ANR	104572	AssignmentExpression	property_Cmd = std :: string ( arg_Cmd . c_str ( ) )		104526	0		=			
ANR	104573	Identifier	property_Cmd		104526	0					
ANR	104574	CallExpression	std :: string ( arg_Cmd . c_str ( ) )		104526	1					
ANR	104575	Callee	std :: string		104526	0					
ANR	104576	Identifier	std :: string		104526	0					
ANR	104577	ArgumentList	arg_Cmd . c_str ( )		104526	1					
ANR	104578	Argument	arg_Cmd . c_str ( )		104526	0					
ANR	104579	CallExpression	arg_Cmd . c_str ( )		104526	0					
ANR	104580	Callee	arg_Cmd . c_str		104526	0					
ANR	104581	MemberAccess	arg_Cmd . c_str		104526	0					
ANR	104582	Identifier	arg_Cmd		104526	0					
ANR	104583	Identifier	c_str		104526	1					
ANR	104584	ArgumentList			104526	1					
ANR	104585	ExpressionStatement	isValidCmd = true	1830:24:92112:92129	104526	4	True				
ANR	104586	AssignmentExpression	isValidCmd = true		104526	0		=			
ANR	104587	Identifier	isValidCmd		104526	0					
ANR	104588	Identifier	true		104526	1					
ANR	104589	ReturnStatement	return true ;	1832:16:92168:92179	104526	5	True				
ANR	104590	Identifier	true		104526	0					
ANR	104591	ReturnType	bool WSF_CALL		104526	1					
ANR	104592	Identifier	AviaryJob :: SubmitJob :: setCmd		104526	2					
ANR	104593	ParameterList	const std :: string arg_Cmd		104526	3					
ANR	104594	Parameter	const std :: string arg_Cmd	1805:20:91399:91424	104526	0	True				
ANR	104595	ParameterType	const std :: string		104526	0					
ANR	104596	Identifier	arg_Cmd		104526	1					
ANR	104597	CFGEntryNode	ENTRY		104526		True				
ANR	104598	CFGExitNode	EXIT		104526		True				
ANR	104599	Symbol	arg_Cmd . c_str		104526						
ANR	104600	Symbol	Environment :: getEnv		104526						
ANR	104601	Symbol	arg_Cmd . empty		104526						
ANR	104602	Symbol	WSF_LOG_SI		104526						
ANR	104603	Symbol	std :: string		104526						
ANR	104604	Symbol	* Environment :: getEnv		104526						
ANR	104605	Symbol	isValidCmd		104526						
ANR	104606	Symbol	true		104526						
ANR	104607	Symbol	arg_Cmd		104526						
ANR	104608	Symbol	property_Cmd		104526						
ANR	104609	Symbol	Environment :: getEnv ( ) -> log		104526						
ANR	104610	Symbol	AXIS2_FAILURE		104526						
ANR	104611	Function	AviaryJob :: SubmitJob :: resetCmd	1840:11:92284:92504							
ANR	104612	FunctionDef	AviaryJob :: SubmitJob :: resetCmd ()		104611	0					
ANR	104613	CompoundStatement		1842:11:92353:92504	104611	0					
ANR	104614	IdentifierDeclStatement	int i = 0 ;	1843:15:92370:92379	104611	0	True				
ANR	104615	IdentifierDecl	i = 0		104611	0					
ANR	104616	IdentifierDeclType	int		104611	0					
ANR	104617	Identifier	i		104611	1					
ANR	104618	AssignmentExpression	i = 0		104611	2		=			
ANR	104619	Identifier	i		104611	0					
ANR	104620	PrimaryExpression	0		104611	1					
ANR	104621	IdentifierDeclStatement	int count = 0 ;	1844:15:92396:92409	104611	1	True				
ANR	104622	IdentifierDecl	count = 0		104611	0					
ANR	104623	IdentifierDeclType	int		104611	0					
ANR	104624	Identifier	count		104611	1					
ANR	104625	AssignmentExpression	count = 0		104611	2		=			
ANR	104626	Identifier	count		104611	0					
ANR	104627	PrimaryExpression	0		104611	1					
ANR	104628	ExpressionStatement	isValidCmd = false	1848:15:92444:92462	104611	2	True				
ANR	104629	AssignmentExpression	isValidCmd = false		104611	0		=			
ANR	104630	Identifier	isValidCmd		104611	0					
ANR	104631	Identifier	false		104611	1					
ANR	104632	ReturnStatement	return true ;	1849:15:92480:92491	104611	3	True				
ANR	104633	Identifier	true		104611	0					
ANR	104634	ReturnType	bool WSF_CALL		104611	1					
ANR	104635	Identifier	AviaryJob :: SubmitJob :: resetCmd		104611	2					
ANR	104636	ParameterList			104611	3					
ANR	104637	CFGEntryNode	ENTRY		104611		True				
ANR	104638	CFGExitNode	EXIT		104611		True				
ANR	104639	Symbol	count		104611						
ANR	104640	Symbol	false		104611						
ANR	104641	Symbol	isValidCmd		104611						
ANR	104642	Symbol	true		104611						
ANR	104643	Symbol	i		104611						
ANR	104644	Function	AviaryJob :: SubmitJob :: isCmdNil	1855:11:92588:92705							
ANR	104645	FunctionDef	AviaryJob :: SubmitJob :: isCmdNil ()		104644	0					
ANR	104646	CompoundStatement		1857:11:92657:92705	104644	0					
ANR	104647	ReturnStatement	return ! isValidCmd ;	1858:15:92674:92692	104644	0	True				
ANR	104648	UnaryOperationExpression	! isValidCmd		104644	0					
ANR	104649	UnaryOperator	!		104644	0					
ANR	104650	Identifier	isValidCmd		104644	1					
ANR	104651	ReturnType	bool WSF_CALL		104644	1					
ANR	104652	Identifier	AviaryJob :: SubmitJob :: isCmdNil		104644	2					
ANR	104653	ParameterList			104644	3					
ANR	104654	CFGEntryNode	ENTRY		104644		True				
ANR	104655	CFGExitNode	EXIT		104644		True				
ANR	104656	Symbol	isValidCmd		104644						
ANR	104657	Function	AviaryJob :: SubmitJob :: setCmdNil	1864:11:92809:92926							
ANR	104658	FunctionDef	AviaryJob :: SubmitJob :: setCmdNil ()		104657	0					
ANR	104659	CompoundStatement		1866:11:92879:92926	104657	0					
ANR	104660	ReturnStatement	return resetCmd ( ) ;	1867:15:92896:92913	104657	0	True				
ANR	104661	CallExpression	resetCmd ( )		104657	0					
ANR	104662	Callee	resetCmd		104657	0					
ANR	104663	Identifier	resetCmd		104657	0					
ANR	104664	ArgumentList			104657	1					
ANR	104665	ReturnType	bool WSF_CALL		104657	1					
ANR	104666	Identifier	AviaryJob :: SubmitJob :: setCmdNil		104657	2					
ANR	104667	ParameterList			104657	3					
ANR	104668	CFGEntryNode	ENTRY		104657		True				
ANR	104669	CFGExitNode	EXIT		104657		True				
ANR	104670	Symbol	resetCmd		104657						
ANR	104671	Function	AviaryJob :: SubmitJob :: getProperty2	1875:12:93039:93169							
ANR	104672	FunctionDef	AviaryJob :: SubmitJob :: getProperty2 ()		104671	0					
ANR	104673	CompoundStatement		1877:12:93121:93169	104671	0					
ANR	104674	ReturnStatement	return getArgs ( ) ;	1878:16:93139:93155	104671	0	True				
ANR	104675	CallExpression	getArgs ( )		104671	0					
ANR	104676	Callee	getArgs		104671	0					
ANR	104677	Identifier	getArgs		104671	0					
ANR	104678	ArgumentList			104671	1					
ANR	104679	ReturnType	std :: string WSF_CALL		104671	1					
ANR	104680	Identifier	AviaryJob :: SubmitJob :: getProperty2		104671	2					
ANR	104681	ParameterList			104671	3					
ANR	104682	CFGEntryNode	ENTRY		104671		True				
ANR	104683	CFGExitNode	EXIT		104671		True				
ANR	104684	Symbol	getArgs		104671						
ANR	104685	Function	AviaryJob :: SubmitJob :: getArgs	1884:12:93248:93379							
ANR	104686	FunctionDef	AviaryJob :: SubmitJob :: getArgs ()		104685	0					
ANR	104687	CompoundStatement		1886:13:93326:93379	104685	0					
ANR	104688	ReturnStatement	return property_Args ;	1887:16:93344:93364	104685	0	True				
ANR	104689	Identifier	property_Args		104685	0					
ANR	104690	ReturnType	std :: string WSF_CALL		104685	1					
ANR	104691	Identifier	AviaryJob :: SubmitJob :: getArgs		104685	2					
ANR	104692	ParameterList			104685	3					
ANR	104693	CFGEntryNode	ENTRY		104685		True				
ANR	104694	CFGExitNode	EXIT		104685		True				
ANR	104695	Symbol	property_Args		104685						
ANR	104696	Function	AviaryJob :: SubmitJob :: setArgs	1893:12:93457:94032							
ANR	104697	FunctionDef	AviaryJob :: SubmitJob :: setArgs (const std :: string arg_Args)		104696	0					
ANR	104698	CompoundStatement		1896:13:93576:94032	104696	0					
ANR	104699	IfStatement	if ( isValidArgs && arg_Args == property_Args )		104696	0					
ANR	104700	Condition	isValidArgs && arg_Args == property_Args	1899:19:93615:93678	104696	0	True				
ANR	104701	AndExpression	isValidArgs && arg_Args == property_Args		104696	0		&&			
ANR	104702	Identifier	isValidArgs		104696	0					
ANR	104703	EqualityExpression	arg_Args == property_Args		104696	1		==			
ANR	104704	Identifier	arg_Args		104696	0					
ANR	104705	Identifier	property_Args		104696	1					
ANR	104706	CompoundStatement		6:16:120:120	104696	1					
ANR	104707	ReturnStatement	return true ;	1903:20:93740:93751	104696	0	True				
ANR	104708	Identifier	true		104696	0					
ANR	104709	ExpressionStatement	resetArgs ( )	1909:16:93823:93834	104696	1	True				
ANR	104710	CallExpression	resetArgs ( )		104696	0					
ANR	104711	Callee	resetArgs		104696	0					
ANR	104712	Identifier	resetArgs		104696	0					
ANR	104713	ArgumentList			104696	1					
ANR	104714	ExpressionStatement	property_Args = std :: string ( arg_Args . c_str ( ) )	1912:24:93878:93923	104696	2	True				
ANR	104715	AssignmentExpression	property_Args = std :: string ( arg_Args . c_str ( ) )		104696	0		=			
ANR	104716	Identifier	property_Args		104696	0					
ANR	104717	CallExpression	std :: string ( arg_Args . c_str ( ) )		104696	1					
ANR	104718	Callee	std :: string		104696	0					
ANR	104719	Identifier	std :: string		104696	0					
ANR	104720	ArgumentList	arg_Args . c_str ( )		104696	1					
ANR	104721	Argument	arg_Args . c_str ( )		104696	0					
ANR	104722	CallExpression	arg_Args . c_str ( )		104696	0					
ANR	104723	Callee	arg_Args . c_str		104696	0					
ANR	104724	MemberAccess	arg_Args . c_str		104696	0					
ANR	104725	Identifier	arg_Args		104696	0					
ANR	104726	Identifier	c_str		104696	1					
ANR	104727	ArgumentList			104696	1					
ANR	104728	ExpressionStatement	isValidArgs = true	1913:24:93949:93967	104696	3	True				
ANR	104729	AssignmentExpression	isValidArgs = true		104696	0		=			
ANR	104730	Identifier	isValidArgs		104696	0					
ANR	104731	Identifier	true		104696	1					
ANR	104732	ReturnStatement	return true ;	1915:16:94006:94017	104696	4	True				
ANR	104733	Identifier	true		104696	0					
ANR	104734	ReturnType	bool WSF_CALL		104696	1					
ANR	104735	Identifier	AviaryJob :: SubmitJob :: setArgs		104696	2					
ANR	104736	ParameterList	const std :: string arg_Args		104696	3					
ANR	104737	Parameter	const std :: string arg_Args	1895:20:93534:93560	104696	0	True				
ANR	104738	ParameterType	const std :: string		104696	0					
ANR	104739	Identifier	arg_Args		104696	1					
ANR	104740	CFGEntryNode	ENTRY		104696		True				
ANR	104741	CFGExitNode	EXIT		104696		True				
ANR	104742	Symbol	property_Args		104696						
ANR	104743	Symbol	arg_Args		104696						
ANR	104744	Symbol	std :: string		104696						
ANR	104745	Symbol	isValidArgs		104696						
ANR	104746	Symbol	true		104696						
ANR	104747	Symbol	arg_Args . c_str		104696						
ANR	104748	Function	AviaryJob :: SubmitJob :: resetArgs	1923:11:94123:94345							
ANR	104749	FunctionDef	AviaryJob :: SubmitJob :: resetArgs ()		104748	0					
ANR	104750	CompoundStatement		1925:11:94193:94345	104748	0					
ANR	104751	IdentifierDeclStatement	int i = 0 ;	1926:15:94210:94219	104748	0	True				
ANR	104752	IdentifierDecl	i = 0		104748	0					
ANR	104753	IdentifierDeclType	int		104748	0					
ANR	104754	Identifier	i		104748	1					
ANR	104755	AssignmentExpression	i = 0		104748	2		=			
ANR	104756	Identifier	i		104748	0					
ANR	104757	PrimaryExpression	0		104748	1					
ANR	104758	IdentifierDeclStatement	int count = 0 ;	1927:15:94236:94249	104748	1	True				
ANR	104759	IdentifierDecl	count = 0		104748	0					
ANR	104760	IdentifierDeclType	int		104748	0					
ANR	104761	Identifier	count		104748	1					
ANR	104762	AssignmentExpression	count = 0		104748	2		=			
ANR	104763	Identifier	count		104748	0					
ANR	104764	PrimaryExpression	0		104748	1					
ANR	104765	ExpressionStatement	isValidArgs = false	1931:15:94284:94303	104748	2	True				
ANR	104766	AssignmentExpression	isValidArgs = false		104748	0		=			
ANR	104767	Identifier	isValidArgs		104748	0					
ANR	104768	Identifier	false		104748	1					
ANR	104769	ReturnStatement	return true ;	1932:15:94321:94332	104748	3	True				
ANR	104770	Identifier	true		104748	0					
ANR	104771	ReturnType	bool WSF_CALL		104748	1					
ANR	104772	Identifier	AviaryJob :: SubmitJob :: resetArgs		104748	2					
ANR	104773	ParameterList			104748	3					
ANR	104774	CFGEntryNode	ENTRY		104748		True				
ANR	104775	CFGExitNode	EXIT		104748		True				
ANR	104776	Symbol	isValidArgs		104748						
ANR	104777	Symbol	count		104748						
ANR	104778	Symbol	false		104748						
ANR	104779	Symbol	true		104748						
ANR	104780	Symbol	i		104748						
ANR	104781	Function	AviaryJob :: SubmitJob :: isArgsNil	1938:11:94430:94549							
ANR	104782	FunctionDef	AviaryJob :: SubmitJob :: isArgsNil ()		104781	0					
ANR	104783	CompoundStatement		1940:11:94500:94549	104781	0					
ANR	104784	ReturnStatement	return ! isValidArgs ;	1941:15:94517:94536	104781	0	True				
ANR	104785	UnaryOperationExpression	! isValidArgs		104781	0					
ANR	104786	UnaryOperator	!		104781	0					
ANR	104787	Identifier	isValidArgs		104781	1					
ANR	104788	ReturnType	bool WSF_CALL		104781	1					
ANR	104789	Identifier	AviaryJob :: SubmitJob :: isArgsNil		104781	2					
ANR	104790	ParameterList			104781	3					
ANR	104791	CFGEntryNode	ENTRY		104781		True				
ANR	104792	CFGExitNode	EXIT		104781		True				
ANR	104793	Symbol	isValidArgs		104781						
ANR	104794	Function	AviaryJob :: SubmitJob :: setArgsNil	1947:11:94654:94773							
ANR	104795	FunctionDef	AviaryJob :: SubmitJob :: setArgsNil ()		104794	0					
ANR	104796	CompoundStatement		1949:11:94725:94773	104794	0					
ANR	104797	ReturnStatement	return resetArgs ( ) ;	1950:15:94742:94760	104794	0	True				
ANR	104798	CallExpression	resetArgs ( )		104794	0					
ANR	104799	Callee	resetArgs		104794	0					
ANR	104800	Identifier	resetArgs		104794	0					
ANR	104801	ArgumentList			104794	1					
ANR	104802	ReturnType	bool WSF_CALL		104794	1					
ANR	104803	Identifier	AviaryJob :: SubmitJob :: setArgsNil		104794	2					
ANR	104804	ParameterList			104794	3					
ANR	104805	CFGEntryNode	ENTRY		104794		True				
ANR	104806	CFGExitNode	EXIT		104794		True				
ANR	104807	Symbol	resetArgs		104794						
ANR	104808	Function	AviaryJob :: SubmitJob :: getProperty3	1958:12:94887:95018							
ANR	104809	FunctionDef	AviaryJob :: SubmitJob :: getProperty3 ()		104808	0					
ANR	104810	CompoundStatement		1960:12:94969:95018	104808	0					
ANR	104811	ReturnStatement	return getOwner ( ) ;	1961:16:94987:95004	104808	0	True				
ANR	104812	CallExpression	getOwner ( )		104808	0					
ANR	104813	Callee	getOwner		104808	0					
ANR	104814	Identifier	getOwner		104808	0					
ANR	104815	ArgumentList			104808	1					
ANR	104816	ReturnType	std :: string WSF_CALL		104808	1					
ANR	104817	Identifier	AviaryJob :: SubmitJob :: getProperty3		104808	2					
ANR	104818	ParameterList			104808	3					
ANR	104819	CFGEntryNode	ENTRY		104808		True				
ANR	104820	CFGExitNode	EXIT		104808		True				
ANR	104821	Symbol	getOwner		104808						
ANR	104822	Function	AviaryJob :: SubmitJob :: getOwner	1967:12:95098:95231							
ANR	104823	FunctionDef	AviaryJob :: SubmitJob :: getOwner ()		104822	0					
ANR	104824	CompoundStatement		1969:13:95177:95231	104822	0					
ANR	104825	ReturnStatement	return property_Owner ;	1970:16:95195:95216	104822	0	True				
ANR	104826	Identifier	property_Owner		104822	0					
ANR	104827	ReturnType	std :: string WSF_CALL		104822	1					
ANR	104828	Identifier	AviaryJob :: SubmitJob :: getOwner		104822	2					
ANR	104829	ParameterList			104822	3					
ANR	104830	CFGEntryNode	ENTRY		104822		True				
ANR	104831	CFGExitNode	EXIT		104822		True				
ANR	104832	Symbol	property_Owner		104822						
ANR	104833	Function	AviaryJob :: SubmitJob :: setOwner	1976:12:95310:96203							
ANR	104834	FunctionDef	AviaryJob :: SubmitJob :: setOwner (const std :: string arg_Owner)		104833	0					
ANR	104835	CompoundStatement		1979:13:95431:96203	104833	0					
ANR	104836	IfStatement	if ( isValidOwner && arg_Owner == property_Owner )		104833	0					
ANR	104837	Condition	isValidOwner && arg_Owner == property_Owner	1982:19:95470:95536	104833	0	True				
ANR	104838	AndExpression	isValidOwner && arg_Owner == property_Owner		104833	0		&&			
ANR	104839	Identifier	isValidOwner		104833	0					
ANR	104840	EqualityExpression	arg_Owner == property_Owner		104833	1		==			
ANR	104841	Identifier	arg_Owner		104833	0					
ANR	104842	Identifier	property_Owner		104833	1					
ANR	104843	CompoundStatement		6:16:123:123	104833	1					
ANR	104844	ReturnStatement	return true ;	1986:20:95598:95609	104833	0	True				
ANR	104845	Identifier	true		104833	0					
ANR	104846	IfStatement	if ( arg_Owner . empty ( ) )		104833	1					
ANR	104847	Condition	arg_Owner . empty ( )	1990:21:95668:95684	104833	0	True				
ANR	104848	CallExpression	arg_Owner . empty ( )		104833	0					
ANR	104849	Callee	arg_Owner . empty		104833	0					
ANR	104850	MemberAccess	arg_Owner . empty		104833	0					
ANR	104851	Identifier	arg_Owner		104833	0					
ANR	104852	Identifier	empty		104833	1					
ANR	104853	ArgumentList			104833	1					
ANR	104854	CompoundStatement		14:18:297:297	104833	1					
ANR	104855	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""owner is being set to NULL, but it is not a nullable element"" )"	1993:22:95753:95873	104833	0	True				
ANR	104856	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""owner is being set to NULL, but it is not a nullable element"" )"		104833	0					
ANR	104857	Callee	WSF_LOG_ERROR_MSG		104833	0					
ANR	104858	Identifier	WSF_LOG_ERROR_MSG		104833	0					
ANR	104859	ArgumentList	Environment :: getEnv ( ) -> log		104833	1					
ANR	104860	Argument	Environment :: getEnv ( ) -> log		104833	0					
ANR	104861	PtrMemberAccess	Environment :: getEnv ( ) -> log		104833	0					
ANR	104862	CallExpression	Environment :: getEnv ( )		104833	0					
ANR	104863	Callee	Environment :: getEnv		104833	0					
ANR	104864	Identifier	Environment :: getEnv		104833	0					
ANR	104865	ArgumentList			104833	1					
ANR	104866	Identifier	log		104833	1					
ANR	104867	Argument	WSF_LOG_SI		104833	1					
ANR	104868	Identifier	WSF_LOG_SI		104833	0					
ANR	104869	Argument	"""owner is being set to NULL, but it is not a nullable element"""		104833	2					
ANR	104870	PrimaryExpression	"""owner is being set to NULL, but it is not a nullable element"""		104833	0					
ANR	104871	ReturnStatement	return AXIS2_FAILURE ;	1994:22:95897:95917	104833	1	True				
ANR	104872	Identifier	AXIS2_FAILURE		104833	0					
ANR	104873	ExpressionStatement	resetOwner ( )	1999:16:95990:96002	104833	2	True				
ANR	104874	CallExpression	resetOwner ( )		104833	0					
ANR	104875	Callee	resetOwner		104833	0					
ANR	104876	Identifier	resetOwner		104833	0					
ANR	104877	ArgumentList			104833	1					
ANR	104878	ExpressionStatement	property_Owner = std :: string ( arg_Owner . c_str ( ) )	2002:24:96046:96093	104833	3	True				
ANR	104879	AssignmentExpression	property_Owner = std :: string ( arg_Owner . c_str ( ) )		104833	0		=			
ANR	104880	Identifier	property_Owner		104833	0					
ANR	104881	CallExpression	std :: string ( arg_Owner . c_str ( ) )		104833	1					
ANR	104882	Callee	std :: string		104833	0					
ANR	104883	Identifier	std :: string		104833	0					
ANR	104884	ArgumentList	arg_Owner . c_str ( )		104833	1					
ANR	104885	Argument	arg_Owner . c_str ( )		104833	0					
ANR	104886	CallExpression	arg_Owner . c_str ( )		104833	0					
ANR	104887	Callee	arg_Owner . c_str		104833	0					
ANR	104888	MemberAccess	arg_Owner . c_str		104833	0					
ANR	104889	Identifier	arg_Owner		104833	0					
ANR	104890	Identifier	c_str		104833	1					
ANR	104891	ArgumentList			104833	1					
ANR	104892	ExpressionStatement	isValidOwner = true	2003:24:96119:96138	104833	4	True				
ANR	104893	AssignmentExpression	isValidOwner = true		104833	0		=			
ANR	104894	Identifier	isValidOwner		104833	0					
ANR	104895	Identifier	true		104833	1					
ANR	104896	ReturnStatement	return true ;	2005:16:96177:96188	104833	5	True				
ANR	104897	Identifier	true		104833	0					
ANR	104898	ReturnType	bool WSF_CALL		104833	1					
ANR	104899	Identifier	AviaryJob :: SubmitJob :: setOwner		104833	2					
ANR	104900	ParameterList	const std :: string arg_Owner		104833	3					
ANR	104901	Parameter	const std :: string arg_Owner	1978:20:95388:95415	104833	0	True				
ANR	104902	ParameterType	const std :: string		104833	0					
ANR	104903	Identifier	arg_Owner		104833	1					
ANR	104904	CFGEntryNode	ENTRY		104833		True				
ANR	104905	CFGExitNode	EXIT		104833		True				
ANR	104906	Symbol	arg_Owner . empty		104833						
ANR	104907	Symbol	Environment :: getEnv		104833						
ANR	104908	Symbol	WSF_LOG_SI		104833						
ANR	104909	Symbol	std :: string		104833						
ANR	104910	Symbol	* Environment :: getEnv		104833						
ANR	104911	Symbol	isValidOwner		104833						
ANR	104912	Symbol	true		104833						
ANR	104913	Symbol	arg_Owner		104833						
ANR	104914	Symbol	property_Owner		104833						
ANR	104915	Symbol	arg_Owner . c_str		104833						
ANR	104916	Symbol	Environment :: getEnv ( ) -> log		104833						
ANR	104917	Symbol	AXIS2_FAILURE		104833						
ANR	104918	Function	AviaryJob :: SubmitJob :: resetOwner	2013:11:96295:96519							
ANR	104919	FunctionDef	AviaryJob :: SubmitJob :: resetOwner ()		104918	0					
ANR	104920	CompoundStatement		2015:11:96366:96519	104918	0					
ANR	104921	IdentifierDeclStatement	int i = 0 ;	2016:15:96383:96392	104918	0	True				
ANR	104922	IdentifierDecl	i = 0		104918	0					
ANR	104923	IdentifierDeclType	int		104918	0					
ANR	104924	Identifier	i		104918	1					
ANR	104925	AssignmentExpression	i = 0		104918	2		=			
ANR	104926	Identifier	i		104918	0					
ANR	104927	PrimaryExpression	0		104918	1					
ANR	104928	IdentifierDeclStatement	int count = 0 ;	2017:15:96409:96422	104918	1	True				
ANR	104929	IdentifierDecl	count = 0		104918	0					
ANR	104930	IdentifierDeclType	int		104918	0					
ANR	104931	Identifier	count		104918	1					
ANR	104932	AssignmentExpression	count = 0		104918	2		=			
ANR	104933	Identifier	count		104918	0					
ANR	104934	PrimaryExpression	0		104918	1					
ANR	104935	ExpressionStatement	isValidOwner = false	2021:15:96457:96477	104918	2	True				
ANR	104936	AssignmentExpression	isValidOwner = false		104918	0		=			
ANR	104937	Identifier	isValidOwner		104918	0					
ANR	104938	Identifier	false		104918	1					
ANR	104939	ReturnStatement	return true ;	2022:15:96495:96506	104918	3	True				
ANR	104940	Identifier	true		104918	0					
ANR	104941	ReturnType	bool WSF_CALL		104918	1					
ANR	104942	Identifier	AviaryJob :: SubmitJob :: resetOwner		104918	2					
ANR	104943	ParameterList			104918	3					
ANR	104944	CFGEntryNode	ENTRY		104918		True				
ANR	104945	CFGExitNode	EXIT		104918		True				
ANR	104946	Symbol	isValidOwner		104918						
ANR	104947	Symbol	count		104918						
ANR	104948	Symbol	false		104918						
ANR	104949	Symbol	true		104918						
ANR	104950	Symbol	i		104918						
ANR	104951	Function	AviaryJob :: SubmitJob :: isOwnerNil	2028:11:96605:96726							
ANR	104952	FunctionDef	AviaryJob :: SubmitJob :: isOwnerNil ()		104951	0					
ANR	104953	CompoundStatement		2030:11:96676:96726	104951	0					
ANR	104954	ReturnStatement	return ! isValidOwner ;	2031:15:96693:96713	104951	0	True				
ANR	104955	UnaryOperationExpression	! isValidOwner		104951	0					
ANR	104956	UnaryOperator	!		104951	0					
ANR	104957	Identifier	isValidOwner		104951	1					
ANR	104958	ReturnType	bool WSF_CALL		104951	1					
ANR	104959	Identifier	AviaryJob :: SubmitJob :: isOwnerNil		104951	2					
ANR	104960	ParameterList			104951	3					
ANR	104961	CFGEntryNode	ENTRY		104951		True				
ANR	104962	CFGExitNode	EXIT		104951		True				
ANR	104963	Symbol	isValidOwner		104951						
ANR	104964	Function	AviaryJob :: SubmitJob :: setOwnerNil	2037:11:96832:96953							
ANR	104965	FunctionDef	AviaryJob :: SubmitJob :: setOwnerNil ()		104964	0					
ANR	104966	CompoundStatement		2039:11:96904:96953	104964	0					
ANR	104967	ReturnStatement	return resetOwner ( ) ;	2040:15:96921:96940	104964	0	True				
ANR	104968	CallExpression	resetOwner ( )		104964	0					
ANR	104969	Callee	resetOwner		104964	0					
ANR	104970	Identifier	resetOwner		104964	0					
ANR	104971	ArgumentList			104964	1					
ANR	104972	ReturnType	bool WSF_CALL		104964	1					
ANR	104973	Identifier	AviaryJob :: SubmitJob :: setOwnerNil		104964	2					
ANR	104974	ParameterList			104964	3					
ANR	104975	CFGEntryNode	ENTRY		104964		True				
ANR	104976	CFGExitNode	EXIT		104964		True				
ANR	104977	Symbol	resetOwner		104964						
ANR	104978	Function	AviaryJob :: SubmitJob :: getProperty4	2048:12:97065:97194							
ANR	104979	FunctionDef	AviaryJob :: SubmitJob :: getProperty4 ()		104978	0					
ANR	104980	CompoundStatement		2050:12:97147:97194	104978	0					
ANR	104981	ReturnStatement	return getIwd ( ) ;	2051:16:97165:97180	104978	0	True				
ANR	104982	CallExpression	getIwd ( )		104978	0					
ANR	104983	Callee	getIwd		104978	0					
ANR	104984	Identifier	getIwd		104978	0					
ANR	104985	ArgumentList			104978	1					
ANR	104986	ReturnType	std :: string WSF_CALL		104978	1					
ANR	104987	Identifier	AviaryJob :: SubmitJob :: getProperty4		104978	2					
ANR	104988	ParameterList			104978	3					
ANR	104989	CFGEntryNode	ENTRY		104978		True				
ANR	104990	CFGExitNode	EXIT		104978		True				
ANR	104991	Symbol	getIwd		104978						
ANR	104992	Function	AviaryJob :: SubmitJob :: getIwd	2057:12:97272:97401							
ANR	104993	FunctionDef	AviaryJob :: SubmitJob :: getIwd ()		104992	0					
ANR	104994	CompoundStatement		2059:13:97349:97401	104992	0					
ANR	104995	ReturnStatement	return property_Iwd ;	2060:16:97367:97386	104992	0	True				
ANR	104996	Identifier	property_Iwd		104992	0					
ANR	104997	ReturnType	std :: string WSF_CALL		104992	1					
ANR	104998	Identifier	AviaryJob :: SubmitJob :: getIwd		104992	2					
ANR	104999	ParameterList			104992	3					
ANR	105000	CFGEntryNode	ENTRY		104992		True				
ANR	105001	CFGExitNode	EXIT		104992		True				
ANR	105002	Symbol	property_Iwd		104992						
ANR	105003	Function	AviaryJob :: SubmitJob :: setIwd	2066:12:97478:98349							
ANR	105004	FunctionDef	AviaryJob :: SubmitJob :: setIwd (const std :: string arg_Iwd)		105003	0					
ANR	105005	CompoundStatement		2069:13:97595:98349	105003	0					
ANR	105006	IfStatement	if ( isValidIwd && arg_Iwd == property_Iwd )		105003	0					
ANR	105007	Condition	isValidIwd && arg_Iwd == property_Iwd	2072:19:97634:97694	105003	0	True				
ANR	105008	AndExpression	isValidIwd && arg_Iwd == property_Iwd		105003	0		&&			
ANR	105009	Identifier	isValidIwd		105003	0					
ANR	105010	EqualityExpression	arg_Iwd == property_Iwd		105003	1		==			
ANR	105011	Identifier	arg_Iwd		105003	0					
ANR	105012	Identifier	property_Iwd		105003	1					
ANR	105013	CompoundStatement		6:16:117:117	105003	1					
ANR	105014	ReturnStatement	return true ;	2076:20:97756:97767	105003	0	True				
ANR	105015	Identifier	true		105003	0					
ANR	105016	IfStatement	if ( arg_Iwd . empty ( ) )		105003	1					
ANR	105017	Condition	arg_Iwd . empty ( )	2080:21:97826:97840	105003	0	True				
ANR	105018	CallExpression	arg_Iwd . empty ( )		105003	0					
ANR	105019	Callee	arg_Iwd . empty		105003	0					
ANR	105020	MemberAccess	arg_Iwd . empty		105003	0					
ANR	105021	Identifier	arg_Iwd		105003	0					
ANR	105022	Identifier	empty		105003	1					
ANR	105023	ArgumentList			105003	1					
ANR	105024	CompoundStatement		14:18:289:289	105003	1					
ANR	105025	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""iwd is being set to NULL, but it is not a nullable element"" )"	2083:22:97909:98027	105003	0	True				
ANR	105026	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""iwd is being set to NULL, but it is not a nullable element"" )"		105003	0					
ANR	105027	Callee	WSF_LOG_ERROR_MSG		105003	0					
ANR	105028	Identifier	WSF_LOG_ERROR_MSG		105003	0					
ANR	105029	ArgumentList	Environment :: getEnv ( ) -> log		105003	1					
ANR	105030	Argument	Environment :: getEnv ( ) -> log		105003	0					
ANR	105031	PtrMemberAccess	Environment :: getEnv ( ) -> log		105003	0					
ANR	105032	CallExpression	Environment :: getEnv ( )		105003	0					
ANR	105033	Callee	Environment :: getEnv		105003	0					
ANR	105034	Identifier	Environment :: getEnv		105003	0					
ANR	105035	ArgumentList			105003	1					
ANR	105036	Identifier	log		105003	1					
ANR	105037	Argument	WSF_LOG_SI		105003	1					
ANR	105038	Identifier	WSF_LOG_SI		105003	0					
ANR	105039	Argument	"""iwd is being set to NULL, but it is not a nullable element"""		105003	2					
ANR	105040	PrimaryExpression	"""iwd is being set to NULL, but it is not a nullable element"""		105003	0					
ANR	105041	ReturnStatement	return AXIS2_FAILURE ;	2084:22:98051:98071	105003	1	True				
ANR	105042	Identifier	AXIS2_FAILURE		105003	0					
ANR	105043	ExpressionStatement	resetIwd ( )	2089:16:98144:98154	105003	2	True				
ANR	105044	CallExpression	resetIwd ( )		105003	0					
ANR	105045	Callee	resetIwd		105003	0					
ANR	105046	Identifier	resetIwd		105003	0					
ANR	105047	ArgumentList			105003	1					
ANR	105048	ExpressionStatement	property_Iwd = std :: string ( arg_Iwd . c_str ( ) )	2092:24:98198:98241	105003	3	True				
ANR	105049	AssignmentExpression	property_Iwd = std :: string ( arg_Iwd . c_str ( ) )		105003	0		=			
ANR	105050	Identifier	property_Iwd		105003	0					
ANR	105051	CallExpression	std :: string ( arg_Iwd . c_str ( ) )		105003	1					
ANR	105052	Callee	std :: string		105003	0					
ANR	105053	Identifier	std :: string		105003	0					
ANR	105054	ArgumentList	arg_Iwd . c_str ( )		105003	1					
ANR	105055	Argument	arg_Iwd . c_str ( )		105003	0					
ANR	105056	CallExpression	arg_Iwd . c_str ( )		105003	0					
ANR	105057	Callee	arg_Iwd . c_str		105003	0					
ANR	105058	MemberAccess	arg_Iwd . c_str		105003	0					
ANR	105059	Identifier	arg_Iwd		105003	0					
ANR	105060	Identifier	c_str		105003	1					
ANR	105061	ArgumentList			105003	1					
ANR	105062	ExpressionStatement	isValidIwd = true	2093:24:98267:98284	105003	4	True				
ANR	105063	AssignmentExpression	isValidIwd = true		105003	0		=			
ANR	105064	Identifier	isValidIwd		105003	0					
ANR	105065	Identifier	true		105003	1					
ANR	105066	ReturnStatement	return true ;	2095:16:98323:98334	105003	5	True				
ANR	105067	Identifier	true		105003	0					
ANR	105068	ReturnType	bool WSF_CALL		105003	1					
ANR	105069	Identifier	AviaryJob :: SubmitJob :: setIwd		105003	2					
ANR	105070	ParameterList	const std :: string arg_Iwd		105003	3					
ANR	105071	Parameter	const std :: string arg_Iwd	2068:20:97554:97579	105003	0	True				
ANR	105072	ParameterType	const std :: string		105003	0					
ANR	105073	Identifier	arg_Iwd		105003	1					
ANR	105074	CFGEntryNode	ENTRY		105003		True				
ANR	105075	CFGExitNode	EXIT		105003		True				
ANR	105076	Symbol	arg_Iwd . c_str		105003						
ANR	105077	Symbol	arg_Iwd		105003						
ANR	105078	Symbol	property_Iwd		105003						
ANR	105079	Symbol	Environment :: getEnv		105003						
ANR	105080	Symbol	isValidIwd		105003						
ANR	105081	Symbol	WSF_LOG_SI		105003						
ANR	105082	Symbol	std :: string		105003						
ANR	105083	Symbol	* Environment :: getEnv		105003						
ANR	105084	Symbol	true		105003						
ANR	105085	Symbol	arg_Iwd . empty		105003						
ANR	105086	Symbol	Environment :: getEnv ( ) -> log		105003						
ANR	105087	Symbol	AXIS2_FAILURE		105003						
ANR	105088	Function	AviaryJob :: SubmitJob :: resetIwd	2103:11:98439:98659							
ANR	105089	FunctionDef	AviaryJob :: SubmitJob :: resetIwd ()		105088	0					
ANR	105090	CompoundStatement		2105:11:98508:98659	105088	0					
ANR	105091	IdentifierDeclStatement	int i = 0 ;	2106:15:98525:98534	105088	0	True				
ANR	105092	IdentifierDecl	i = 0		105088	0					
ANR	105093	IdentifierDeclType	int		105088	0					
ANR	105094	Identifier	i		105088	1					
ANR	105095	AssignmentExpression	i = 0		105088	2		=			
ANR	105096	Identifier	i		105088	0					
ANR	105097	PrimaryExpression	0		105088	1					
ANR	105098	IdentifierDeclStatement	int count = 0 ;	2107:15:98551:98564	105088	1	True				
ANR	105099	IdentifierDecl	count = 0		105088	0					
ANR	105100	IdentifierDeclType	int		105088	0					
ANR	105101	Identifier	count		105088	1					
ANR	105102	AssignmentExpression	count = 0		105088	2		=			
ANR	105103	Identifier	count		105088	0					
ANR	105104	PrimaryExpression	0		105088	1					
ANR	105105	ExpressionStatement	isValidIwd = false	2111:15:98599:98617	105088	2	True				
ANR	105106	AssignmentExpression	isValidIwd = false		105088	0		=			
ANR	105107	Identifier	isValidIwd		105088	0					
ANR	105108	Identifier	false		105088	1					
ANR	105109	ReturnStatement	return true ;	2112:15:98635:98646	105088	3	True				
ANR	105110	Identifier	true		105088	0					
ANR	105111	ReturnType	bool WSF_CALL		105088	1					
ANR	105112	Identifier	AviaryJob :: SubmitJob :: resetIwd		105088	2					
ANR	105113	ParameterList			105088	3					
ANR	105114	CFGEntryNode	ENTRY		105088		True				
ANR	105115	CFGExitNode	EXIT		105088		True				
ANR	105116	Symbol	isValidIwd		105088						
ANR	105117	Symbol	count		105088						
ANR	105118	Symbol	false		105088						
ANR	105119	Symbol	true		105088						
ANR	105120	Symbol	i		105088						
ANR	105121	Function	AviaryJob :: SubmitJob :: isIwdNil	2118:11:98743:98860							
ANR	105122	FunctionDef	AviaryJob :: SubmitJob :: isIwdNil ()		105121	0					
ANR	105123	CompoundStatement		2120:11:98812:98860	105121	0					
ANR	105124	ReturnStatement	return ! isValidIwd ;	2121:15:98829:98847	105121	0	True				
ANR	105125	UnaryOperationExpression	! isValidIwd		105121	0					
ANR	105126	UnaryOperator	!		105121	0					
ANR	105127	Identifier	isValidIwd		105121	1					
ANR	105128	ReturnType	bool WSF_CALL		105121	1					
ANR	105129	Identifier	AviaryJob :: SubmitJob :: isIwdNil		105121	2					
ANR	105130	ParameterList			105121	3					
ANR	105131	CFGEntryNode	ENTRY		105121		True				
ANR	105132	CFGExitNode	EXIT		105121		True				
ANR	105133	Symbol	isValidIwd		105121						
ANR	105134	Function	AviaryJob :: SubmitJob :: setIwdNil	2127:11:98964:99081							
ANR	105135	FunctionDef	AviaryJob :: SubmitJob :: setIwdNil ()		105134	0					
ANR	105136	CompoundStatement		2129:11:99034:99081	105134	0					
ANR	105137	ReturnStatement	return resetIwd ( ) ;	2130:15:99051:99068	105134	0	True				
ANR	105138	CallExpression	resetIwd ( )		105134	0					
ANR	105139	Callee	resetIwd		105134	0					
ANR	105140	Identifier	resetIwd		105134	0					
ANR	105141	ArgumentList			105134	1					
ANR	105142	ReturnType	bool WSF_CALL		105134	1					
ANR	105143	Identifier	AviaryJob :: SubmitJob :: setIwdNil		105134	2					
ANR	105144	ParameterList			105134	3					
ANR	105145	CFGEntryNode	ENTRY		105134		True				
ANR	105146	CFGExitNode	EXIT		105134		True				
ANR	105147	Symbol	resetIwd		105134						
ANR	105148	Function	AviaryJob :: SubmitJob :: getProperty5	2138:12:99205:99346							
ANR	105149	FunctionDef	AviaryJob :: SubmitJob :: getProperty5 ()		105148	0					
ANR	105150	CompoundStatement		2140:12:99287:99346	105148	0					
ANR	105151	ReturnStatement	return getSubmission_name ( ) ;	2141:16:99305:99332	105148	0	True				
ANR	105152	CallExpression	getSubmission_name ( )		105148	0					
ANR	105153	Callee	getSubmission_name		105148	0					
ANR	105154	Identifier	getSubmission_name		105148	0					
ANR	105155	ArgumentList			105148	1					
ANR	105156	ReturnType	std :: string WSF_CALL		105148	1					
ANR	105157	Identifier	AviaryJob :: SubmitJob :: getProperty5		105148	2					
ANR	105158	ParameterList			105148	3					
ANR	105159	CFGEntryNode	ENTRY		105148		True				
ANR	105160	CFGExitNode	EXIT		105148		True				
ANR	105161	Symbol	getSubmission_name		105148						
ANR	105162	Function	AviaryJob :: SubmitJob :: getSubmission_name	2147:12:99436:99589							
ANR	105163	FunctionDef	AviaryJob :: SubmitJob :: getSubmission_name ()		105162	0					
ANR	105164	CompoundStatement		2149:13:99525:99589	105162	0					
ANR	105165	ReturnStatement	return property_Submission_name ;	2150:16:99543:99574	105162	0	True				
ANR	105166	Identifier	property_Submission_name		105162	0					
ANR	105167	ReturnType	std :: string WSF_CALL		105162	1					
ANR	105168	Identifier	AviaryJob :: SubmitJob :: getSubmission_name		105162	2					
ANR	105169	ParameterList			105162	3					
ANR	105170	CFGEntryNode	ENTRY		105162		True				
ANR	105171	CFGExitNode	EXIT		105162		True				
ANR	105172	Symbol	property_Submission_name		105162						
ANR	105173	Function	AviaryJob :: SubmitJob :: setSubmission_name	2156:12:99678:100352							
ANR	105174	FunctionDef	AviaryJob :: SubmitJob :: setSubmission_name (const std :: string arg_Submission_name)		105173	0					
ANR	105175	CompoundStatement		2159:13:99819:100352	105173	0					
ANR	105176	IfStatement	if ( isValidSubmission_name && arg_Submission_name == property_Submission_name )		105173	0					
ANR	105177	Condition	isValidSubmission_name && arg_Submission_name == property_Submission_name	2162:19:99858:99954	105173	0	True				
ANR	105178	AndExpression	isValidSubmission_name && arg_Submission_name == property_Submission_name		105173	0		&&			
ANR	105179	Identifier	isValidSubmission_name		105173	0					
ANR	105180	EqualityExpression	arg_Submission_name == property_Submission_name		105173	1		==			
ANR	105181	Identifier	arg_Submission_name		105173	0					
ANR	105182	Identifier	property_Submission_name		105173	1					
ANR	105183	CompoundStatement		6:16:153:153	105173	1					
ANR	105184	ReturnStatement	return true ;	2166:20:100016:100027	105173	0	True				
ANR	105185	Identifier	true		105173	0					
ANR	105186	ExpressionStatement	resetSubmission_name ( )	2172:16:100099:100121	105173	1	True				
ANR	105187	CallExpression	resetSubmission_name ( )		105173	0					
ANR	105188	Callee	resetSubmission_name		105173	0					
ANR	105189	Identifier	resetSubmission_name		105173	0					
ANR	105190	ArgumentList			105173	1					
ANR	105191	ExpressionStatement	property_Submission_name = std :: string ( arg_Submission_name . c_str ( ) )	2175:24:100165:100232	105173	2	True				
ANR	105192	AssignmentExpression	property_Submission_name = std :: string ( arg_Submission_name . c_str ( ) )		105173	0		=			
ANR	105193	Identifier	property_Submission_name		105173	0					
ANR	105194	CallExpression	std :: string ( arg_Submission_name . c_str ( ) )		105173	1					
ANR	105195	Callee	std :: string		105173	0					
ANR	105196	Identifier	std :: string		105173	0					
ANR	105197	ArgumentList	arg_Submission_name . c_str ( )		105173	1					
ANR	105198	Argument	arg_Submission_name . c_str ( )		105173	0					
ANR	105199	CallExpression	arg_Submission_name . c_str ( )		105173	0					
ANR	105200	Callee	arg_Submission_name . c_str		105173	0					
ANR	105201	MemberAccess	arg_Submission_name . c_str		105173	0					
ANR	105202	Identifier	arg_Submission_name		105173	0					
ANR	105203	Identifier	c_str		105173	1					
ANR	105204	ArgumentList			105173	1					
ANR	105205	ExpressionStatement	isValidSubmission_name = true	2176:24:100258:100287	105173	3	True				
ANR	105206	AssignmentExpression	isValidSubmission_name = true		105173	0		=			
ANR	105207	Identifier	isValidSubmission_name		105173	0					
ANR	105208	Identifier	true		105173	1					
ANR	105209	ReturnStatement	return true ;	2178:16:100326:100337	105173	4	True				
ANR	105210	Identifier	true		105173	0					
ANR	105211	ReturnType	bool WSF_CALL		105173	1					
ANR	105212	Identifier	AviaryJob :: SubmitJob :: setSubmission_name		105173	2					
ANR	105213	ParameterList	const std :: string arg_Submission_name		105173	3					
ANR	105214	Parameter	const std :: string arg_Submission_name	2158:20:99766:99803	105173	0	True				
ANR	105215	ParameterType	const std :: string		105173	0					
ANR	105216	Identifier	arg_Submission_name		105173	1					
ANR	105217	CFGEntryNode	ENTRY		105173		True				
ANR	105218	CFGExitNode	EXIT		105173		True				
ANR	105219	Symbol	arg_Submission_name . c_str		105173						
ANR	105220	Symbol	arg_Submission_name		105173						
ANR	105221	Symbol	std :: string		105173						
ANR	105222	Symbol	property_Submission_name		105173						
ANR	105223	Symbol	true		105173						
ANR	105224	Symbol	isValidSubmission_name		105173						
ANR	105225	Function	AviaryJob :: SubmitJob :: resetSubmission_name	2186:11:100454:100698							
ANR	105226	FunctionDef	AviaryJob :: SubmitJob :: resetSubmission_name ()		105225	0					
ANR	105227	CompoundStatement		2188:11:100535:100698	105225	0					
ANR	105228	IdentifierDeclStatement	int i = 0 ;	2189:15:100552:100561	105225	0	True				
ANR	105229	IdentifierDecl	i = 0		105225	0					
ANR	105230	IdentifierDeclType	int		105225	0					
ANR	105231	Identifier	i		105225	1					
ANR	105232	AssignmentExpression	i = 0		105225	2		=			
ANR	105233	Identifier	i		105225	0					
ANR	105234	PrimaryExpression	0		105225	1					
ANR	105235	IdentifierDeclStatement	int count = 0 ;	2190:15:100578:100591	105225	1	True				
ANR	105236	IdentifierDecl	count = 0		105225	0					
ANR	105237	IdentifierDeclType	int		105225	0					
ANR	105238	Identifier	count		105225	1					
ANR	105239	AssignmentExpression	count = 0		105225	2		=			
ANR	105240	Identifier	count		105225	0					
ANR	105241	PrimaryExpression	0		105225	1					
ANR	105242	ExpressionStatement	isValidSubmission_name = false	2194:15:100626:100656	105225	2	True				
ANR	105243	AssignmentExpression	isValidSubmission_name = false		105225	0		=			
ANR	105244	Identifier	isValidSubmission_name		105225	0					
ANR	105245	Identifier	false		105225	1					
ANR	105246	ReturnStatement	return true ;	2195:15:100674:100685	105225	3	True				
ANR	105247	Identifier	true		105225	0					
ANR	105248	ReturnType	bool WSF_CALL		105225	1					
ANR	105249	Identifier	AviaryJob :: SubmitJob :: resetSubmission_name		105225	2					
ANR	105250	ParameterList			105225	3					
ANR	105251	CFGEntryNode	ENTRY		105225		True				
ANR	105252	CFGExitNode	EXIT		105225		True				
ANR	105253	Symbol	count		105225						
ANR	105254	Symbol	false		105225						
ANR	105255	Symbol	true		105225						
ANR	105256	Symbol	i		105225						
ANR	105257	Symbol	isValidSubmission_name		105225						
ANR	105258	Function	AviaryJob :: SubmitJob :: isSubmission_nameNil	2201:11:100794:100935							
ANR	105259	FunctionDef	AviaryJob :: SubmitJob :: isSubmission_nameNil ()		105258	0					
ANR	105260	CompoundStatement		2203:11:100875:100935	105258	0					
ANR	105261	ReturnStatement	return ! isValidSubmission_name ;	2204:15:100892:100922	105258	0	True				
ANR	105262	UnaryOperationExpression	! isValidSubmission_name		105258	0					
ANR	105263	UnaryOperator	!		105258	0					
ANR	105264	Identifier	isValidSubmission_name		105258	1					
ANR	105265	ReturnType	bool WSF_CALL		105258	1					
ANR	105266	Identifier	AviaryJob :: SubmitJob :: isSubmission_nameNil		105258	2					
ANR	105267	ParameterList			105258	3					
ANR	105268	CFGEntryNode	ENTRY		105258		True				
ANR	105269	CFGExitNode	EXIT		105258		True				
ANR	105270	Symbol	isValidSubmission_name		105258						
ANR	105271	Function	AviaryJob :: SubmitJob :: setSubmission_nameNil	2210:11:101051:101192							
ANR	105272	FunctionDef	AviaryJob :: SubmitJob :: setSubmission_nameNil ()		105271	0					
ANR	105273	CompoundStatement		2212:11:101133:101192	105271	0					
ANR	105274	ReturnStatement	return resetSubmission_name ( ) ;	2213:15:101150:101179	105271	0	True				
ANR	105275	CallExpression	resetSubmission_name ( )		105271	0					
ANR	105276	Callee	resetSubmission_name		105271	0					
ANR	105277	Identifier	resetSubmission_name		105271	0					
ANR	105278	ArgumentList			105271	1					
ANR	105279	ReturnType	bool WSF_CALL		105271	1					
ANR	105280	Identifier	AviaryJob :: SubmitJob :: setSubmission_nameNil		105271	2					
ANR	105281	ParameterList			105271	3					
ANR	105282	CFGEntryNode	ENTRY		105271		True				
ANR	105283	CFGExitNode	EXIT		105271		True				
ANR	105284	Symbol	resetSubmission_name		105271						
ANR	105285	Function	AviaryJob :: SubmitJob :: getProperty6	2221:60:101361:101487							
ANR	105286	FunctionDef	AviaryJob :: SubmitJob :: getProperty6 ()		105285	0					
ANR	105287	CompoundStatement		2223:12:101431:101487	105285	0					
ANR	105288	ReturnStatement	return getRequirements ( ) ;	2224:16:101449:101473	105285	0	True				
ANR	105289	CallExpression	getRequirements ( )		105285	0					
ANR	105290	Callee	getRequirements		105285	0					
ANR	105291	Identifier	getRequirements		105285	0					
ANR	105292	ArgumentList			105285	1					
ANR	105293	ReturnType	WSF_CALL		105285	1					
ANR	105294	Identifier	AviaryJob :: SubmitJob :: getProperty6		105285	2					
ANR	105295	ParameterList			105285	3					
ANR	105296	CFGEntryNode	ENTRY		105285		True				
ANR	105297	CFGExitNode	EXIT		105285		True				
ANR	105298	Symbol	getRequirements		105285						
ANR	105299	Function	AviaryJob :: SubmitJob :: getRequirements	2230:60:101622:101757							
ANR	105300	FunctionDef	AviaryJob :: SubmitJob :: getRequirements ()		105299	0					
ANR	105301	CompoundStatement		2232:13:101696:101757	105299	0					
ANR	105302	ReturnStatement	return property_Requirements ;	2233:16:101714:101742	105299	0	True				
ANR	105303	Identifier	property_Requirements		105299	0					
ANR	105304	ReturnType	WSF_CALL		105299	1					
ANR	105305	Identifier	AviaryJob :: SubmitJob :: getRequirements		105299	2					
ANR	105306	ParameterList			105299	3					
ANR	105307	CFGEntryNode	ENTRY		105299		True				
ANR	105308	CFGExitNode	EXIT		105299		True				
ANR	105309	Symbol	property_Requirements		105299						
ANR	105310	Function	AviaryJob :: SubmitJob :: setRequirements	2239:12:101843:103530							
ANR	105311	FunctionDef	AviaryJob :: SubmitJob :: setRequirements (std :: vector < AviaryCommon :: ResourceConstraint * > * arg_Requirements)		105310	0					
ANR	105312	CompoundStatement		2242:13:102008:103530	105310	0					
ANR	105313	IdentifierDeclStatement	int size = 0 ;	2244:17:102044:102056	105310	0	True				
ANR	105314	IdentifierDecl	size = 0		105310	0					
ANR	105315	IdentifierDeclType	int		105310	0					
ANR	105316	Identifier	size		105310	1					
ANR	105317	AssignmentExpression	size = 0		105310	2		=			
ANR	105318	Identifier	size		105310	0					
ANR	105319	PrimaryExpression	0		105310	1					
ANR	105320	IdentifierDeclStatement	int i = 0 ;	2245:17:102075:102084	105310	1	True				
ANR	105321	IdentifierDecl	i = 0		105310	0					
ANR	105322	IdentifierDeclType	int		105310	0					
ANR	105323	Identifier	i		105310	1					
ANR	105324	AssignmentExpression	i = 0		105310	2		=			
ANR	105325	Identifier	i		105310	0					
ANR	105326	PrimaryExpression	0		105310	1					
ANR	105327	IdentifierDeclStatement	bool non_nil_exists = false ;	2246:17:102103:102130	105310	2	True				
ANR	105328	IdentifierDecl	non_nil_exists = false		105310	0					
ANR	105329	IdentifierDeclType	bool		105310	0					
ANR	105330	Identifier	non_nil_exists		105310	1					
ANR	105331	AssignmentExpression	non_nil_exists = false		105310	2		=			
ANR	105332	Identifier	false		105310	0					
ANR	105333	Identifier	false		105310	1					
ANR	105334	IfStatement	if ( isValidRequirements && arg_Requirements == property_Requirements )		105310	3					
ANR	105335	Condition	isValidRequirements && arg_Requirements == property_Requirements	2249:19:102169:102256	105310	0	True				
ANR	105336	AndExpression	isValidRequirements && arg_Requirements == property_Requirements		105310	0		&&			
ANR	105337	Identifier	isValidRequirements		105310	0					
ANR	105338	EqualityExpression	arg_Requirements == property_Requirements		105310	1		==			
ANR	105339	Identifier	arg_Requirements		105310	0					
ANR	105340	Identifier	property_Requirements		105310	1					
ANR	105341	CompoundStatement		10:16:266:266	105310	1					
ANR	105342	ReturnStatement	return true ;	2253:20:102318:102329	105310	0	True				
ANR	105343	Identifier	true		105310	0					
ANR	105344	ExpressionStatement	size = arg_Requirements -> size ( )	2257:17:102384:102415	105310	4	True				
ANR	105345	AssignmentExpression	size = arg_Requirements -> size ( )		105310	0		=			
ANR	105346	Identifier	size		105310	0					
ANR	105347	CallExpression	arg_Requirements -> size ( )		105310	1					
ANR	105348	Callee	arg_Requirements -> size		105310	0					
ANR	105349	PtrMemberAccess	arg_Requirements -> size		105310	0					
ANR	105350	Identifier	arg_Requirements		105310	0					
ANR	105351	Identifier	size		105310	1					
ANR	105352	ArgumentList			105310	1					
ANR	105353	IfStatement	if ( size < 0 )		105310	5					
ANR	105354	Condition	size < 0	2259:21:102456:102463	105310	0	True				
ANR	105355	RelationalExpression	size < 0		105310	0		<			
ANR	105356	Identifier	size		105310	0					
ANR	105357	PrimaryExpression	0		105310	1					
ANR	105358	CompoundStatement		19:17:474:474	105310	1					
ANR	105359	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""requirements has less than minOccurs(0)"" )"	2261:21:102506:102605	105310	0	True				
ANR	105360	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""requirements has less than minOccurs(0)"" )"		105310	0					
ANR	105361	Callee	WSF_LOG_ERROR_MSG		105310	0					
ANR	105362	Identifier	WSF_LOG_ERROR_MSG		105310	0					
ANR	105363	ArgumentList	Environment :: getEnv ( ) -> log		105310	1					
ANR	105364	Argument	Environment :: getEnv ( ) -> log		105310	0					
ANR	105365	PtrMemberAccess	Environment :: getEnv ( ) -> log		105310	0					
ANR	105366	CallExpression	Environment :: getEnv ( )		105310	0					
ANR	105367	Callee	Environment :: getEnv		105310	0					
ANR	105368	Identifier	Environment :: getEnv		105310	0					
ANR	105369	ArgumentList			105310	1					
ANR	105370	Identifier	log		105310	1					
ANR	105371	Argument	WSF_LOG_SI		105310	1					
ANR	105372	Identifier	WSF_LOG_SI		105310	0					
ANR	105373	Argument	"""requirements has less than minOccurs(0)"""		105310	2					
ANR	105374	PrimaryExpression	"""requirements has less than minOccurs(0)"""		105310	0					
ANR	105375	ReturnStatement	return false ;	2262:21:102628:102640	105310	1	True				
ANR	105376	Identifier	false		105310	0					
ANR	105377	ForStatement	for ( i = 0 ; i < size ; i ++ )		105310	6					
ANR	105378	ForInit	i = 0 ;	2264:21:102682:102687	105310	0	True				
ANR	105379	AssignmentExpression	i = 0		105310	0		=			
ANR	105380	Identifier	i		105310	0					
ANR	105381	PrimaryExpression	0		105310	1					
ANR	105382	Condition	i < size	2264:28:102689:102696	105310	1	True				
ANR	105383	RelationalExpression	i < size		105310	0		<			
ANR	105384	Identifier	i		105310	0					
ANR	105385	Identifier	size		105310	1					
ANR	105386	PostIncDecOperationExpression	i ++	2264:38:102699:102702	105310	2	True				
ANR	105387	Identifier	i		105310	0					
ANR	105388	IncDec	++		105310	1					
ANR	105389	CompoundStatement		24:17:714:714	105310	3					
ANR	105390	IfStatement	if ( NULL != ( * arg_Requirements ) [ i ] )		105310	0					
ANR	105391	Condition	NULL != ( * arg_Requirements ) [ i ]	2266:24:102749:102778	105310	0	True				
ANR	105392	EqualityExpression	NULL != ( * arg_Requirements ) [ i ]		105310	0		!=			
ANR	105393	Identifier	NULL		105310	0					
ANR	105394	ArrayIndexing	( * arg_Requirements ) [ i ]		105310	1					
ANR	105395	UnaryOperationExpression	* arg_Requirements		105310	0					
ANR	105396	UnaryOperator	*		105310	0					
ANR	105397	Identifier	arg_Requirements		105310	1					
ANR	105398	Identifier	i		105310	1					
ANR	105399	CompoundStatement		26:21:793:793	105310	1					
ANR	105400	ExpressionStatement	non_nil_exists = true	2268:25:102829:102850	105310	0	True				
ANR	105401	AssignmentExpression	non_nil_exists = true		105310	0		=			
ANR	105402	Identifier	non_nil_exists		105310	0					
ANR	105403	Identifier	true		105310	1					
ANR	105404	BreakStatement	break ;	2269:25:102877:102882	105310	1	True				
ANR	105405	ExpressionStatement	resetRequirements ( )	2276:16:102979:102998	105310	7	True				
ANR	105406	CallExpression	resetRequirements ( )		105310	0					
ANR	105407	Callee	resetRequirements		105310	0					
ANR	105408	Identifier	resetRequirements		105310	0					
ANR	105409	ArgumentList			105310	1					
ANR	105410	IfStatement	if ( NULL == arg_Requirements )		105310	8					
ANR	105411	Condition	NULL == arg_Requirements	2279:23:103041:103064	105310	0	True				
ANR	105412	EqualityExpression	NULL == arg_Requirements		105310	0		==			
ANR	105413	Identifier	NULL		105310	0					
ANR	105414	Identifier	arg_Requirements		105310	1					
ANR	105415	CompoundStatement		40:16:1100:1100	105310	1					
ANR	105416	ReturnStatement	return true ;	2283:20:103177:103188	105310	0	True				
ANR	105417	Identifier	true		105310	0					
ANR	105418	ExpressionStatement	property_Requirements = arg_Requirements	2286:24:103249:103289	105310	9	True				
ANR	105419	AssignmentExpression	property_Requirements = arg_Requirements		105310	0		=			
ANR	105420	Identifier	property_Requirements		105310	0					
ANR	105421	Identifier	arg_Requirements		105310	1					
ANR	105422	IfStatement	if ( non_nil_exists )		105310	10					
ANR	105423	Condition	non_nil_exists	2287:27:103318:103331	105310	0	True				
ANR	105424	Identifier	non_nil_exists		105310	0					
ANR	105425	CompoundStatement		47:24:1349:1349	105310	1					
ANR	105426	ExpressionStatement	isValidRequirements = true	2289:28:103388:103414	105310	0	True				
ANR	105427	AssignmentExpression	isValidRequirements = true		105310	0		=			
ANR	105428	Identifier	isValidRequirements		105310	0					
ANR	105429	Identifier	true		105310	1					
ANR	105430	ReturnStatement	return true ;	2293:16:103504:103515	105310	11	True				
ANR	105431	Identifier	true		105310	0					
ANR	105432	ReturnType	bool WSF_CALL		105310	1					
ANR	105433	Identifier	AviaryJob :: SubmitJob :: setRequirements		105310	2					
ANR	105434	ParameterList	std :: vector < AviaryCommon :: ResourceConstraint * > * arg_Requirements		105310	3					
ANR	105435	Parameter	std :: vector < AviaryCommon :: ResourceConstraint * > * arg_Requirements	2241:20:101928:101992	105310	0	True				
ANR	105436	ParameterType	std :: vector < AviaryCommon :: ResourceConstraint * > *		105310	0					
ANR	105437	Identifier	arg_Requirements		105310	1					
ANR	105438	CFGEntryNode	ENTRY		105310		True				
ANR	105439	CFGExitNode	EXIT		105310		True				
ANR	105440	Symbol	Environment :: getEnv		105310						
ANR	105441	Symbol	NULL		105310						
ANR	105442	Symbol	arg_Requirements -> size		105310						
ANR	105443	Symbol	false		105310						
ANR	105444	Symbol	i		105310						
ANR	105445	Symbol	arg_Requirements		105310						
ANR	105446	Symbol	Environment :: getEnv ( ) -> log		105310						
ANR	105447	Symbol	* arg_Requirements		105310						
ANR	105448	Symbol	* i		105310						
ANR	105449	Symbol	size		105310						
ANR	105450	Symbol	WSF_LOG_SI		105310						
ANR	105451	Symbol	* Environment :: getEnv		105310						
ANR	105452	Symbol	isValidRequirements		105310						
ANR	105453	Symbol	non_nil_exists		105310						
ANR	105454	Symbol	true		105310						
ANR	105455	Symbol	property_Requirements		105310						
ANR	105456	Symbol	* * arg_Requirements		105310						
ANR	105457	Function	AviaryJob :: SubmitJob :: getRequirementsAt	2300:46:103672:104105							
ANR	105458	FunctionDef	AviaryJob :: SubmitJob :: getRequirementsAt (int i)		105457	0					
ANR	105459	CompoundStatement		2302:12:103752:104105	105457	0					
ANR	105460	IdentifierDeclStatement	AviaryCommon :: ResourceConstraint * ret_val ;	2303:16:103770:103811	105457	0	True				
ANR	105461	IdentifierDecl	* ret_val		105457	0					
ANR	105462	IdentifierDeclType	AviaryCommon :: ResourceConstraint *		105457	0					
ANR	105463	Identifier	ret_val		105457	1					
ANR	105464	IfStatement	if ( property_Requirements == NULL )		105457	1					
ANR	105465	Condition	property_Requirements == NULL	2304:19:103832:103860	105457	0	True				
ANR	105466	EqualityExpression	property_Requirements == NULL		105457	0		==			
ANR	105467	Identifier	property_Requirements		105457	0					
ANR	105468	Identifier	NULL		105457	1					
ANR	105469	CompoundStatement		4:16:126:126	105457	1					
ANR	105470	ReturnStatement	return ( AviaryCommon :: ResourceConstraint * ) 0 ;	2306:20:103901:103944	105457	0	True				
ANR	105471	CastExpression	( AviaryCommon :: ResourceConstraint * ) 0		105457	0					
ANR	105472	CastTarget	AviaryCommon :: ResourceConstraint *		105457	0					
ANR	105473	PrimaryExpression	0		105457	1					
ANR	105474	ExpressionStatement	ret_val = ( * property_Requirements ) [ i ]	2308:16:103980:104019	105457	2	True				
ANR	105475	AssignmentExpression	ret_val = ( * property_Requirements ) [ i ]		105457	0		=			
ANR	105476	Identifier	ret_val		105457	0					
ANR	105477	ArrayIndexing	( * property_Requirements ) [ i ]		105457	1					
ANR	105478	UnaryOperationExpression	* property_Requirements		105457	0					
ANR	105479	UnaryOperator	*		105457	0					
ANR	105480	Identifier	property_Requirements		105457	1					
ANR	105481	Identifier	i		105457	1					
ANR	105482	ReturnStatement	return ret_val ;	2310:20:104058:104072	105457	3	True				
ANR	105483	Identifier	ret_val		105457	0					
ANR	105484	ReturnType	WSF_CALL		105457	1					
ANR	105485	Identifier	AviaryJob :: SubmitJob :: getRequirementsAt		105457	2					
ANR	105486	ParameterList	int i		105457	3					
ANR	105487	Parameter	int i	2301:52:103733:103737	105457	0	True				
ANR	105488	ParameterType	int		105457	0					
ANR	105489	Identifier	i		105457	1					
ANR	105490	CFGEntryNode	ENTRY		105457		True				
ANR	105491	CFGExitNode	EXIT		105457		True				
ANR	105492	Symbol	NULL		105457						
ANR	105493	Symbol	* i		105457						
ANR	105494	Symbol	* property_Requirements		105457						
ANR	105495	Symbol	i		105457						
ANR	105496	Symbol	ret_val		105457						
ANR	105497	Symbol	property_Requirements		105457						
ANR	105498	Symbol	* * property_Requirements		105457						
ANR	105499	Function	AviaryJob :: SubmitJob :: setRequirementsAt	2317:11:104203:106105							
ANR	105500	FunctionDef	"AviaryJob :: SubmitJob :: setRequirementsAt (int i , AviaryCommon :: ResourceConstraint * arg_Requirements)"		105499	0					
ANR	105501	CompoundStatement		2320:12:104360:106105	105499	0					
ANR	105502	IdentifierDeclStatement	AviaryCommon :: ResourceConstraint * element ;	2321:17:104379:104420	105499	0	True				
ANR	105503	IdentifierDecl	* element		105499	0					
ANR	105504	IdentifierDeclType	AviaryCommon :: ResourceConstraint *		105499	0					
ANR	105505	Identifier	element		105499	1					
ANR	105506	IdentifierDeclStatement	int size = 0 ;	2322:16:104438:104450	105499	1	True				
ANR	105507	IdentifierDecl	size = 0		105499	0					
ANR	105508	IdentifierDeclType	int		105499	0					
ANR	105509	Identifier	size		105499	1					
ANR	105510	AssignmentExpression	size = 0		105499	2		=			
ANR	105511	Identifier	size		105499	0					
ANR	105512	PrimaryExpression	0		105499	1					
ANR	105513	IdentifierDeclStatement	int non_nil_count ;	2324:16:104469:104486	105499	2	True				
ANR	105514	IdentifierDecl	non_nil_count		105499	0					
ANR	105515	IdentifierDeclType	int		105499	0					
ANR	105516	Identifier	non_nil_count		105499	1					
ANR	105517	IdentifierDeclStatement	bool non_nil_exists = false ;	2325:16:104504:104531	105499	3	True				
ANR	105518	IdentifierDecl	non_nil_exists = false		105499	0					
ANR	105519	IdentifierDeclType	bool		105499	0					
ANR	105520	Identifier	non_nil_exists		105499	1					
ANR	105521	AssignmentExpression	non_nil_exists = false		105499	2		=			
ANR	105522	Identifier	false		105499	0					
ANR	105523	Identifier	false		105499	1					
ANR	105524	IfStatement	if ( isValidRequirements && property_Requirements && arg_Requirements == ( * property_Requirements ) [ i ] )		105499	4					
ANR	105525	Condition	isValidRequirements && property_Requirements && arg_Requirements == ( * property_Requirements ) [ i ]	2329:20:104573:104726	105499	0	True				
ANR	105526	AndExpression	isValidRequirements && property_Requirements && arg_Requirements == ( * property_Requirements ) [ i ]		105499	0		&&			
ANR	105527	Identifier	isValidRequirements		105499	0					
ANR	105528	AndExpression	property_Requirements && arg_Requirements == ( * property_Requirements ) [ i ]		105499	1		&&			
ANR	105529	Identifier	property_Requirements		105499	0					
ANR	105530	EqualityExpression	arg_Requirements == ( * property_Requirements ) [ i ]		105499	1		==			
ANR	105531	Identifier	arg_Requirements		105499	0					
ANR	105532	ArrayIndexing	( * property_Requirements ) [ i ]		105499	1					
ANR	105533	UnaryOperationExpression	* property_Requirements		105499	0					
ANR	105534	UnaryOperator	*		105499	0					
ANR	105535	Identifier	property_Requirements		105499	1					
ANR	105536	Identifier	i		105499	1					
ANR	105537	CompoundStatement		15:17:404:404	105499	1					
ANR	105538	ReturnStatement	return AXIS2_SUCCESS ;	2336:20:104808:104828	105499	0	True				
ANR	105539	Identifier	AXIS2_SUCCESS		105499	0					
ANR	105540	ExpressionStatement	non_nil_exists = true	2340:21:104891:104912	105499	5	True				
ANR	105541	AssignmentExpression	non_nil_exists = true		105499	0		=			
ANR	105542	Identifier	non_nil_exists		105499	0					
ANR	105543	Identifier	true		105499	1					
ANR	105544	IfStatement	if ( property_Requirements == NULL )		105499	6					
ANR	105545	Condition	property_Requirements == NULL	2343:19:104953:104981	105499	0	True				
ANR	105546	EqualityExpression	property_Requirements == NULL		105499	0		==			
ANR	105547	Identifier	property_Requirements		105499	0					
ANR	105548	Identifier	NULL		105499	1					
ANR	105549	CompoundStatement		25:16:639:639	105499	1					
ANR	105550	ExpressionStatement	property_Requirements = new std :: vector < AviaryCommon :: ResourceConstraint * > ( )	2345:20:105022:105098	105499	0	True				
ANR	105551	AssignmentExpression	property_Requirements = new std :: vector < AviaryCommon :: ResourceConstraint * > ( )		105499	0		=			
ANR	105552	Identifier	property_Requirements		105499	0					
ANR	105553	UnaryExpression	new std :: vector < AviaryCommon :: ResourceConstraint * > ( )		105499	1					
ANR	105554	ElseStatement	else		105499	0					
ANR	105555	CompoundStatement		28:20:777:777	105499	0					
ANR	105556	ExpressionStatement	element = ( * property_Requirements ) [ i ]	2349:16:105223:105260	105499	0	True				
ANR	105557	AssignmentExpression	element = ( * property_Requirements ) [ i ]		105499	0		=			
ANR	105558	Identifier	element		105499	0					
ANR	105559	ArrayIndexing	( * property_Requirements ) [ i ]		105499	1					
ANR	105560	UnaryOperationExpression	* property_Requirements		105499	0					
ANR	105561	UnaryOperator	*		105499	0					
ANR	105562	Identifier	property_Requirements		105499	1					
ANR	105563	Identifier	i		105499	1					
ANR	105564	IfStatement	if ( NULL != element )		105499	7					
ANR	105565	Condition	NULL != element	2353:27:105325:105339	105499	0	True				
ANR	105566	EqualityExpression	NULL != element		105499	0		!=			
ANR	105567	Identifier	NULL		105499	0					
ANR	105568	Identifier	element		105499	1					
ANR	105569	CompoundStatement		35:24:1005:1005	105499	1					
ANR	105570	Statement	delete	2358:32:105481:105486	105499	0	True				
ANR	105571	ExpressionStatement	element	2358:39:105488:105495	105499	1	True				
ANR	105572	Identifier	element		105499	0					
ANR	105573	IfStatement	if ( ! non_nil_exists )		105499	8					
ANR	105574	Condition	! non_nil_exists	2363:23:105622:105636	105499	0	True				
ANR	105575	UnaryOperationExpression	! non_nil_exists		105499	0					
ANR	105576	UnaryOperator	!		105499	0					
ANR	105577	Identifier	non_nil_exists		105499	1					
ANR	105578	CompoundStatement		45:20:1298:1298	105499	1					
ANR	105579	ExpressionStatement	isValidRequirements = true	2366:24:105710:105736	105499	0	True				
ANR	105580	AssignmentExpression	isValidRequirements = true		105499	0		=			
ANR	105581	Identifier	isValidRequirements		105499	0					
ANR	105582	Identifier	true		105499	1					
ANR	105583	ExpressionStatement	( * property_Requirements ) [ i ] = NULL	2367:24:105762:105795	105499	1	True				
ANR	105584	AssignmentExpression	( * property_Requirements ) [ i ] = NULL		105499	0		=			
ANR	105585	ArrayIndexing	( * property_Requirements ) [ i ]		105499	0					
ANR	105586	UnaryOperationExpression	* property_Requirements		105499	0					
ANR	105587	UnaryOperator	*		105499	0					
ANR	105588	Identifier	property_Requirements		105499	1					
ANR	105589	Identifier	i		105499	1					
ANR	105590	Identifier	NULL		105499	1					
ANR	105591	ReturnStatement	return AXIS2_SUCCESS ;	2369:24:105846:105866	105499	2	True				
ANR	105592	Identifier	AXIS2_SUCCESS		105499	0					
ANR	105593	ExpressionStatement	( * property_Requirements ) [ i ] = arg_Requirements	2372:20:105927:105973	105499	9	True				
ANR	105594	AssignmentExpression	( * property_Requirements ) [ i ] = arg_Requirements		105499	0		=			
ANR	105595	ArrayIndexing	( * property_Requirements ) [ i ]		105499	0					
ANR	105596	UnaryOperationExpression	* property_Requirements		105499	0					
ANR	105597	UnaryOperator	*		105499	0					
ANR	105598	Identifier	property_Requirements		105499	1					
ANR	105599	Identifier	i		105499	1					
ANR	105600	Identifier	arg_Requirements		105499	1					
ANR	105601	ExpressionStatement	isValidRequirements = true	2375:15:106010:106036	105499	10	True				
ANR	105602	AssignmentExpression	isValidRequirements = true		105499	0		=			
ANR	105603	Identifier	isValidRequirements		105499	0					
ANR	105604	Identifier	true		105499	1					
ANR	105605	ReturnStatement	return AXIS2_SUCCESS ;	2377:16:106071:106091	105499	11	True				
ANR	105606	Identifier	AXIS2_SUCCESS		105499	0					
ANR	105607	ReturnType	bool WSF_CALL		105499	1					
ANR	105608	Identifier	AviaryJob :: SubmitJob :: setRequirementsAt		105499	2					
ANR	105609	ParameterList	"int i , AviaryCommon :: ResourceConstraint * arg_Requirements"		105499	3					
ANR	105610	Parameter	int i	2318:52:104269:104273	105499	0	True				
ANR	105611	ParameterType	int		105499	0					
ANR	105612	Identifier	i		105499	1					
ANR	105613	Parameter	AviaryCommon :: ResourceConstraint * arg_Requirements	2319:20:104296:104345	105499	1	True				
ANR	105614	ParameterType	AviaryCommon :: ResourceConstraint *		105499	0					
ANR	105615	Identifier	arg_Requirements		105499	1					
ANR	105616	CFGEntryNode	ENTRY		105499		True				
ANR	105617	CFGExitNode	EXIT		105499		True				
ANR	105618	Symbol	NULL		105499						
ANR	105619	Symbol	* property_Requirements		105499						
ANR	105620	Symbol	false		105499						
ANR	105621	Symbol	i		105499						
ANR	105622	Symbol	arg_Requirements		105499						
ANR	105623	Symbol	non_nil_count		105499						
ANR	105624	Symbol	* * property_Requirements		105499						
ANR	105625	Symbol	* i		105499						
ANR	105626	Symbol	size		105499						
ANR	105627	Symbol	isValidRequirements		105499						
ANR	105628	Symbol	non_nil_exists		105499						
ANR	105629	Symbol	true		105499						
ANR	105630	Symbol	property_Requirements		105499						
ANR	105631	Symbol	element		105499						
ANR	105632	Symbol	AXIS2_SUCCESS		105499						
ANR	105633	Function	AviaryJob :: SubmitJob :: addRequirements	2383:12:106188:106950							
ANR	105634	FunctionDef	AviaryJob :: SubmitJob :: addRequirements (AviaryCommon :: ResourceConstraint * arg_Requirements)		105633	0					
ANR	105635	CompoundStatement		2386:13:106338:106950	105633	0					
ANR	105636	IfStatement	if ( NULL == arg_Requirements )		105633	0					
ANR	105637	Condition	NULL == arg_Requirements	2389:24:106382:106405	105633	0	True				
ANR	105638	EqualityExpression	NULL == arg_Requirements		105633	0		==			
ANR	105639	Identifier	NULL		105633	0					
ANR	105640	Identifier	arg_Requirements		105633	1					
ANR	105641	CompoundStatement		6:20:111:111	105633	1					
ANR	105642	ReturnStatement	return true ;	2393:27:106502:106513	105633	0	True				
ANR	105643	Identifier	true		105633	0					
ANR	105644	IfStatement	if ( property_Requirements == NULL )		105633	1					
ANR	105645	Condition	property_Requirements == NULL	2398:19:106602:106630	105633	0	True				
ANR	105646	EqualityExpression	property_Requirements == NULL		105633	0		==			
ANR	105647	Identifier	property_Requirements		105633	0					
ANR	105648	Identifier	NULL		105633	1					
ANR	105649	CompoundStatement		14:16:310:310	105633	1					
ANR	105650	ExpressionStatement	property_Requirements = new std :: vector < AviaryCommon :: ResourceConstraint * > ( )	2400:20:106671:106747	105633	0	True				
ANR	105651	AssignmentExpression	property_Requirements = new std :: vector < AviaryCommon :: ResourceConstraint * > ( )		105633	0		=			
ANR	105652	Identifier	property_Requirements		105633	0					
ANR	105653	UnaryExpression	new std :: vector < AviaryCommon :: ResourceConstraint * > ( )		105633	1					
ANR	105654	ExpressionStatement	property_Requirements -> push_back ( arg_Requirements )	2403:15:106797:106847	105633	2	True				
ANR	105655	CallExpression	property_Requirements -> push_back ( arg_Requirements )		105633	0					
ANR	105656	Callee	property_Requirements -> push_back		105633	0					
ANR	105657	PtrMemberAccess	property_Requirements -> push_back		105633	0					
ANR	105658	Identifier	property_Requirements		105633	0					
ANR	105659	Identifier	push_back		105633	1					
ANR	105660	ArgumentList	arg_Requirements		105633	1					
ANR	105661	Argument	arg_Requirements		105633	0					
ANR	105662	Identifier	arg_Requirements		105633	0					
ANR	105663	ExpressionStatement	isValidRequirements = true	2405:16:106880:106906	105633	3	True				
ANR	105664	AssignmentExpression	isValidRequirements = true		105633	0		=			
ANR	105665	Identifier	isValidRequirements		105633	0					
ANR	105666	Identifier	true		105633	1					
ANR	105667	ReturnStatement	return true ;	2406:16:106924:106935	105633	4	True				
ANR	105668	Identifier	true		105633	0					
ANR	105669	ReturnType	bool WSF_CALL		105633	1					
ANR	105670	Identifier	AviaryJob :: SubmitJob :: addRequirements		105633	2					
ANR	105671	ParameterList	AviaryCommon :: ResourceConstraint * arg_Requirements		105633	3					
ANR	105672	Parameter	AviaryCommon :: ResourceConstraint * arg_Requirements	2385:20:106273:106322	105633	0	True				
ANR	105673	ParameterType	AviaryCommon :: ResourceConstraint *		105633	0					
ANR	105674	Identifier	arg_Requirements		105633	1					
ANR	105675	CFGEntryNode	ENTRY		105633		True				
ANR	105676	CFGExitNode	EXIT		105633		True				
ANR	105677	Symbol	NULL		105633						
ANR	105678	Symbol	isValidRequirements		105633						
ANR	105679	Symbol	true		105633						
ANR	105680	Symbol	arg_Requirements		105633						
ANR	105681	Symbol	property_Requirements		105633						
ANR	105682	Function	AviaryJob :: SubmitJob :: sizeofRequirements	2412:12:107052:107317							
ANR	105683	FunctionDef	AviaryJob :: SubmitJob :: sizeofRequirements ()		105682	0					
ANR	105684	CompoundStatement		2414:12:107132:107317	105682	0					
ANR	105685	IfStatement	if ( property_Requirements == NULL )		105682	0					
ANR	105686	Condition	property_Requirements == NULL	2416:19:107154:107182	105682	0	True				
ANR	105687	EqualityExpression	property_Requirements == NULL		105682	0		==			
ANR	105688	Identifier	property_Requirements		105682	0					
ANR	105689	Identifier	NULL		105682	1					
ANR	105690	CompoundStatement		4:16:68:68	105682	1					
ANR	105691	ReturnStatement	return 0 ;	2418:20:107223:107231	105682	0	True				
ANR	105692	PrimaryExpression	0		105682	0					
ANR	105693	ReturnStatement	return property_Requirements -> size ( ) ;	2420:16:107267:107303	105682	1	True				
ANR	105694	CallExpression	property_Requirements -> size ( )		105682	0					
ANR	105695	Callee	property_Requirements -> size		105682	0					
ANR	105696	PtrMemberAccess	property_Requirements -> size		105682	0					
ANR	105697	Identifier	property_Requirements		105682	0					
ANR	105698	Identifier	size		105682	1					
ANR	105699	ArgumentList			105682	1					
ANR	105700	ReturnType	int WSF_CALL		105682	1					
ANR	105701	Identifier	AviaryJob :: SubmitJob :: sizeofRequirements		105682	2					
ANR	105702	ParameterList			105682	3					
ANR	105703	CFGEntryNode	ENTRY		105682		True				
ANR	105704	CFGExitNode	EXIT		105682		True				
ANR	105705	Symbol	NULL		105682						
ANR	105706	Symbol	* property_Requirements		105682						
ANR	105707	Symbol	property_Requirements -> size		105682						
ANR	105708	Symbol	property_Requirements		105682						
ANR	105709	Function	AviaryJob :: SubmitJob :: removeRequirementsAt	2426:12:107423:107573							
ANR	105710	FunctionDef	AviaryJob :: SubmitJob :: removeRequirementsAt (int i)		105709	0					
ANR	105711	CompoundStatement		2428:12:107511:107573	105709	0					
ANR	105712	ReturnStatement	return setRequirementsNilAt ( i ) ;	2429:16:107529:107559	105709	0	True				
ANR	105713	CallExpression	setRequirementsNilAt ( i )		105709	0					
ANR	105714	Callee	setRequirementsNilAt		105709	0					
ANR	105715	Identifier	setRequirementsNilAt		105709	0					
ANR	105716	ArgumentList	i		105709	1					
ANR	105717	Argument	i		105709	0					
ANR	105718	Identifier	i		105709	0					
ANR	105719	ReturnType	bool WSF_CALL		105709	1					
ANR	105720	Identifier	AviaryJob :: SubmitJob :: removeRequirementsAt		105709	2					
ANR	105721	ParameterList	int i		105709	3					
ANR	105722	Parameter	int i	2427:55:107492:107496	105709	0	True				
ANR	105723	ParameterType	int		105709	0					
ANR	105724	Identifier	i		105709	1					
ANR	105725	CFGEntryNode	ENTRY		105709		True				
ANR	105726	CFGExitNode	EXIT		105709		True				
ANR	105727	Symbol	i		105709						
ANR	105728	Symbol	setRequirementsNilAt		105709						
ANR	105729	Function	AviaryJob :: SubmitJob :: resetRequirements	2437:11:107671:108697							
ANR	105730	FunctionDef	AviaryJob :: SubmitJob :: resetRequirements ()		105729	0					
ANR	105731	CompoundStatement		2439:11:107749:108697	105729	0					
ANR	105732	IdentifierDeclStatement	int i = 0 ;	2440:15:107766:107775	105729	0	True				
ANR	105733	IdentifierDecl	i = 0		105729	0					
ANR	105734	IdentifierDeclType	int		105729	0					
ANR	105735	Identifier	i		105729	1					
ANR	105736	AssignmentExpression	i = 0		105729	2		=			
ANR	105737	Identifier	i		105729	0					
ANR	105738	PrimaryExpression	0		105729	1					
ANR	105739	IdentifierDeclStatement	int count = 0 ;	2441:15:107792:107805	105729	1	True				
ANR	105740	IdentifierDecl	count = 0		105729	0					
ANR	105741	IdentifierDeclType	int		105729	0					
ANR	105742	Identifier	count		105729	1					
ANR	105743	AssignmentExpression	count = 0		105729	2		=			
ANR	105744	Identifier	count		105729	0					
ANR	105745	PrimaryExpression	0		105729	1					
ANR	105746	IfStatement	if ( property_Requirements != NULL )		105729	2					
ANR	105747	Condition	property_Requirements != NULL	2445:20:107845:107873	105729	0	True				
ANR	105748	EqualityExpression	property_Requirements != NULL		105729	0		!=			
ANR	105749	Identifier	property_Requirements		105729	0					
ANR	105750	Identifier	NULL		105729	1					
ANR	105751	CompoundStatement		9:18:162:255	105729	1					
ANR	105752	IdentifierDeclStatement	std :: vector < AviaryCommon :: ResourceConstraint * > :: iterator it = property_Requirements -> begin ( ) ;	2447:18:107912:108005	105729	0	True				
ANR	105753	IdentifierDecl	it = property_Requirements -> begin ( )		105729	0					
ANR	105754	IdentifierDeclType	std :: vector < AviaryCommon :: ResourceConstraint * > :: iterator		105729	0					
ANR	105755	Identifier	it		105729	1					
ANR	105756	AssignmentExpression	it = property_Requirements -> begin ( )		105729	2		=			
ANR	105757	Identifier	it		105729	0					
ANR	105758	CallExpression	property_Requirements -> begin ( )		105729	1					
ANR	105759	Callee	property_Requirements -> begin		105729	0					
ANR	105760	PtrMemberAccess	property_Requirements -> begin		105729	0					
ANR	105761	Identifier	property_Requirements		105729	0					
ANR	105762	Identifier	begin		105729	1					
ANR	105763	ArgumentList			105729	1					
ANR	105764	ForStatement	for ( ; it < property_Requirements -> end ( ) ; ++ it )		105729	1					
ANR	105765	Condition	it < property_Requirements -> end ( )	2448:25:108032:108065	105729	0	True				
ANR	105766	RelationalExpression	it < property_Requirements -> end ( )		105729	0		<			
ANR	105767	Identifier	it		105729	0					
ANR	105768	CallExpression	property_Requirements -> end ( )		105729	1					
ANR	105769	Callee	property_Requirements -> end		105729	0					
ANR	105770	PtrMemberAccess	property_Requirements -> end		105729	0					
ANR	105771	Identifier	property_Requirements		105729	0					
ANR	105772	Identifier	end		105729	1					
ANR	105773	ArgumentList			105729	1					
ANR	105774	UnaryExpression	++ it	2448:62:108069:108072	105729	1	True				
ANR	105775	IncDec	++		105729	0					
ANR	105776	Identifier	it		105729	1					
ANR	105777	CompoundStatement		12:21:366:413	105729	2					
ANR	105778	IdentifierDeclStatement	AviaryCommon :: ResourceConstraint * element = * it ;	2450:21:108116:108163	105729	0	True				
ANR	105779	IdentifierDecl	* element = * it		105729	0					
ANR	105780	IdentifierDeclType	AviaryCommon :: ResourceConstraint *		105729	0					
ANR	105781	Identifier	element		105729	1					
ANR	105782	AssignmentExpression	* element = * it		105729	2		=			
ANR	105783	Identifier	element		105729	0					
ANR	105784	UnaryOperationExpression	* it		105729	1					
ANR	105785	UnaryOperator	*		105729	0					
ANR	105786	Identifier	it		105729	1					
ANR	105787	IfStatement	if ( element != NULL )		105729	1					
ANR	105788	Condition	element != NULL	2455:19:108232:108246	105729	0	True				
ANR	105789	EqualityExpression	element != NULL		105729	0		!=			
ANR	105790	Identifier	element		105729	0					
ANR	105791	Identifier	NULL		105729	1					
ANR	105792	CompoundStatement		18:16:515:515	105729	1					
ANR	105793	Statement	delete	2459:25:108332:108337	105729	0	True				
ANR	105794	ExpressionStatement	element	2459:33:108340:108347	105729	1	True				
ANR	105795	Identifier	element		105729	0					
ANR	105796	IfStatement	if ( NULL != property_Requirements )		105729	3					
ANR	105797	Condition	NULL != property_Requirements	2471:23:108518:108546	105729	0	True				
ANR	105798	EqualityExpression	NULL != property_Requirements		105729	0		!=			
ANR	105799	Identifier	NULL		105729	0					
ANR	105800	Identifier	property_Requirements		105729	1					
ANR	105801	Statement	delete	2472:17:108566:108571	105729	1	True				
ANR	105802	ExpressionStatement	property_Requirements	2472:24:108573:108594	105729	4	True				
ANR	105803	Identifier	property_Requirements		105729	0					
ANR	105804	ExpressionStatement	isValidRequirements = false	2474:15:108628:108655	105729	5	True				
ANR	105805	AssignmentExpression	isValidRequirements = false		105729	0		=			
ANR	105806	Identifier	isValidRequirements		105729	0					
ANR	105807	Identifier	false		105729	1					
ANR	105808	ReturnStatement	return true ;	2475:15:108673:108684	105729	6	True				
ANR	105809	Identifier	true		105729	0					
ANR	105810	ReturnType	bool WSF_CALL		105729	1					
ANR	105811	Identifier	AviaryJob :: SubmitJob :: resetRequirements		105729	2					
ANR	105812	ParameterList			105729	3					
ANR	105813	CFGEntryNode	ENTRY		105729		True				
ANR	105814	CFGExitNode	EXIT		105729		True				
ANR	105815	Symbol	NULL		105729						
ANR	105816	Symbol	* property_Requirements		105729						
ANR	105817	Symbol	count		105729						
ANR	105818	Symbol	false		105729						
ANR	105819	Symbol	i		105729						
ANR	105820	Symbol	it		105729						
ANR	105821	Symbol	* it		105729						
ANR	105822	Symbol	property_Requirements -> begin		105729						
ANR	105823	Symbol	isValidRequirements		105729						
ANR	105824	Symbol	true		105729						
ANR	105825	Symbol	property_Requirements		105729						
ANR	105826	Symbol	property_Requirements -> end		105729						
ANR	105827	Symbol	element		105729						
ANR	105828	Function	AviaryJob :: SubmitJob :: isRequirementsNil	2481:11:108790:108925							
ANR	105829	FunctionDef	AviaryJob :: SubmitJob :: isRequirementsNil ()		105828	0					
ANR	105830	CompoundStatement		2483:11:108868:108925	105828	0					
ANR	105831	ReturnStatement	return ! isValidRequirements ;	2484:15:108885:108912	105828	0	True				
ANR	105832	UnaryOperationExpression	! isValidRequirements		105828	0					
ANR	105833	UnaryOperator	!		105828	0					
ANR	105834	Identifier	isValidRequirements		105828	1					
ANR	105835	ReturnType	bool WSF_CALL		105828	1					
ANR	105836	Identifier	AviaryJob :: SubmitJob :: isRequirementsNil		105828	2					
ANR	105837	ParameterList			105828	3					
ANR	105838	CFGEntryNode	ENTRY		105828		True				
ANR	105839	CFGExitNode	EXIT		105828		True				
ANR	105840	Symbol	isValidRequirements		105828						
ANR	105841	Function	AviaryJob :: SubmitJob :: setRequirementsNil	2490:11:109038:109173							
ANR	105842	FunctionDef	AviaryJob :: SubmitJob :: setRequirementsNil ()		105841	0					
ANR	105843	CompoundStatement		2492:11:109117:109173	105841	0					
ANR	105844	ReturnStatement	return resetRequirements ( ) ;	2493:15:109134:109160	105841	0	True				
ANR	105845	CallExpression	resetRequirements ( )		105841	0					
ANR	105846	Callee	resetRequirements		105841	0					
ANR	105847	Identifier	resetRequirements		105841	0					
ANR	105848	ArgumentList			105841	1					
ANR	105849	ReturnType	bool WSF_CALL		105841	1					
ANR	105850	Identifier	AviaryJob :: SubmitJob :: setRequirementsNil		105841	2					
ANR	105851	ParameterList			105841	3					
ANR	105852	CFGEntryNode	ENTRY		105841		True				
ANR	105853	CFGExitNode	EXIT		105841		True				
ANR	105854	Symbol	resetRequirements		105841						
ANR	105855	Function	AviaryJob :: SubmitJob :: isRequirementsNilAt	2500:11:109283:109552							
ANR	105856	FunctionDef	AviaryJob :: SubmitJob :: isRequirementsNilAt (int i)		105855	0					
ANR	105857	CompoundStatement		2502:11:109368:109552	105855	0					
ANR	105858	ReturnStatement	return ( isValidRequirements == false || NULL == property_Requirements || NULL == ( * property_Requirements ) [ i ] ) ;	2503:15:109385:109538	105855	0	True				
ANR	105859	OrExpression	isValidRequirements == false || NULL == property_Requirements || NULL == ( * property_Requirements ) [ i ]		105855	0		||			
ANR	105860	EqualityExpression	isValidRequirements == false		105855	0		==			
ANR	105861	Identifier	isValidRequirements		105855	0					
ANR	105862	Identifier	false		105855	1					
ANR	105863	OrExpression	NULL == property_Requirements || NULL == ( * property_Requirements ) [ i ]		105855	1		||			
ANR	105864	EqualityExpression	NULL == property_Requirements		105855	0		==			
ANR	105865	Identifier	NULL		105855	0					
ANR	105866	Identifier	property_Requirements		105855	1					
ANR	105867	EqualityExpression	NULL == ( * property_Requirements ) [ i ]		105855	1		==			
ANR	105868	Identifier	NULL		105855	0					
ANR	105869	ArrayIndexing	( * property_Requirements ) [ i ]		105855	1					
ANR	105870	UnaryOperationExpression	* property_Requirements		105855	0					
ANR	105871	UnaryOperator	*		105855	0					
ANR	105872	Identifier	property_Requirements		105855	1					
ANR	105873	Identifier	i		105855	1					
ANR	105874	ReturnType	bool WSF_CALL		105855	1					
ANR	105875	Identifier	AviaryJob :: SubmitJob :: isRequirementsNilAt		105855	2					
ANR	105876	ParameterList	int i		105855	3					
ANR	105877	Parameter	int i	2501:53:109350:109354	105855	0	True				
ANR	105878	ParameterType	int		105855	0					
ANR	105879	Identifier	i		105855	1					
ANR	105880	CFGEntryNode	ENTRY		105855		True				
ANR	105881	CFGExitNode	EXIT		105855		True				
ANR	105882	Symbol	NULL		105855						
ANR	105883	Symbol	* i		105855						
ANR	105884	Symbol	* property_Requirements		105855						
ANR	105885	Symbol	isValidRequirements		105855						
ANR	105886	Symbol	false		105855						
ANR	105887	Symbol	i		105855						
ANR	105888	Symbol	property_Requirements		105855						
ANR	105889	Symbol	* * property_Requirements		105855						
ANR	105890	Function	AviaryJob :: SubmitJob :: setRequirementsNilAt	2511:11:109639:111979							
ANR	105891	FunctionDef	AviaryJob :: SubmitJob :: setRequirementsNilAt (int i)		105890	0					
ANR	105892	CompoundStatement		2513:11:109725:111979	105890	0					
ANR	105893	IdentifierDeclStatement	int size = 0 ;	2514:16:109743:109755	105890	0	True				
ANR	105894	IdentifierDecl	size = 0		105890	0					
ANR	105895	IdentifierDeclType	int		105890	0					
ANR	105896	Identifier	size		105890	1					
ANR	105897	AssignmentExpression	size = 0		105890	2		=			
ANR	105898	Identifier	size		105890	0					
ANR	105899	PrimaryExpression	0		105890	1					
ANR	105900	IdentifierDeclStatement	int j ;	2515:16:109773:109778	105890	1	True				
ANR	105901	IdentifierDecl	j		105890	0					
ANR	105902	IdentifierDeclType	int		105890	0					
ANR	105903	Identifier	j		105890	1					
ANR	105904	IdentifierDeclStatement	bool non_nil_exists = false ;	2516:16:109796:109823	105890	2	True				
ANR	105905	IdentifierDecl	non_nil_exists = false		105890	0					
ANR	105906	IdentifierDeclType	bool		105890	0					
ANR	105907	Identifier	non_nil_exists		105890	1					
ANR	105908	AssignmentExpression	non_nil_exists = false		105890	2		=			
ANR	105909	Identifier	false		105890	0					
ANR	105910	Identifier	false		105890	1					
ANR	105911	IdentifierDeclStatement	int k = 0 ;	2518:16:109842:109851	105890	3	True				
ANR	105912	IdentifierDecl	k = 0		105890	0					
ANR	105913	IdentifierDeclType	int		105890	0					
ANR	105914	Identifier	k		105890	1					
ANR	105915	AssignmentExpression	k = 0		105890	2		=			
ANR	105916	Identifier	k		105890	0					
ANR	105917	PrimaryExpression	0		105890	1					
ANR	105918	IfStatement	if ( property_Requirements == NULL || isValidRequirements == false )		105890	4					
ANR	105919	Condition	property_Requirements == NULL || isValidRequirements == false	2520:19:109873:109961	105890	0	True				
ANR	105920	OrExpression	property_Requirements == NULL || isValidRequirements == false		105890	0		||			
ANR	105921	EqualityExpression	property_Requirements == NULL		105890	0		==			
ANR	105922	Identifier	property_Requirements		105890	0					
ANR	105923	Identifier	NULL		105890	1					
ANR	105924	EqualityExpression	isValidRequirements == false		105890	1		==			
ANR	105925	Identifier	isValidRequirements		105890	0					
ANR	105926	Identifier	false		105890	1					
ANR	105927	CompoundStatement		10:16:254:254	105890	1					
ANR	105928	ExpressionStatement	non_nil_exists = false	2524:20:110023:110045	105890	0	True				
ANR	105929	AssignmentExpression	non_nil_exists = false		105890	0		=			
ANR	105930	Identifier	non_nil_exists		105890	0					
ANR	105931	Identifier	false		105890	1					
ANR	105932	ElseStatement	else		105890	0					
ANR	105933	CompoundStatement		15:16:376:376	105890	0					
ANR	105934	ExpressionStatement	size = property_Requirements -> size ( )	2528:20:110124:110160	105890	0	True				
ANR	105935	AssignmentExpression	size = property_Requirements -> size ( )		105890	0		=			
ANR	105936	Identifier	size		105890	0					
ANR	105937	CallExpression	property_Requirements -> size ( )		105890	1					
ANR	105938	Callee	property_Requirements -> size		105890	0					
ANR	105939	PtrMemberAccess	property_Requirements -> size		105890	0					
ANR	105940	Identifier	property_Requirements		105890	0					
ANR	105941	Identifier	size		105890	1					
ANR	105942	ArgumentList			105890	1					
ANR	105943	ForStatement	"for ( j = 0 , k = 0 ; j < size ; j ++ )"		105890	1					
ANR	105944	ForInit	"j = 0 , k = 0 ;"	2529:24:110186:110198	105890	0	True				
ANR	105945	Expression	"j = 0 , k = 0"		105890	0					
ANR	105946	AssignmentExpression	j = 0		105890	0		=			
ANR	105947	Identifier	j		105890	0					
ANR	105948	PrimaryExpression	0		105890	1					
ANR	105949	AssignmentExpression	k = 0		105890	1		=			
ANR	105950	Identifier	k		105890	0					
ANR	105951	PrimaryExpression	0		105890	1					
ANR	105952	Condition	j < size	2529:38:110200:110207	105890	1	True				
ANR	105953	RelationalExpression	j < size		105890	0		<			
ANR	105954	Identifier	j		105890	0					
ANR	105955	Identifier	size		105890	1					
ANR	105956	PostIncDecOperationExpression	j ++	2529:48:110210:110213	105890	2	True				
ANR	105957	Identifier	j		105890	0					
ANR	105958	IncDec	++		105890	1					
ANR	105959	CompoundStatement		18:20:511:511	105890	3					
ANR	105960	IfStatement	if ( i == j )		105890	0					
ANR	105961	Condition	i == j	2531:27:110266:110271	105890	0	True				
ANR	105962	EqualityExpression	i == j		105890	0		==			
ANR	105963	Identifier	i		105890	0					
ANR	105964	Identifier	j		105890	1					
ANR	105965	ContinueStatement	continue ;	2531:35:110274:110282	105890	1	True				
ANR	105966	IfStatement	if ( NULL != ( * property_Requirements ) [ i ] )		105890	1					
ANR	105967	Condition	NULL != ( * property_Requirements ) [ i ]	2532:27:110312:110346	105890	0	True				
ANR	105968	EqualityExpression	NULL != ( * property_Requirements ) [ i ]		105890	0		!=			
ANR	105969	Identifier	NULL		105890	0					
ANR	105970	ArrayIndexing	( * property_Requirements ) [ i ]		105890	1					
ANR	105971	UnaryOperationExpression	* property_Requirements		105890	0					
ANR	105972	UnaryOperator	*		105890	0					
ANR	105973	Identifier	property_Requirements		105890	1					
ANR	105974	Identifier	i		105890	1					
ANR	105975	CompoundStatement		21:24:647:647	105890	1					
ANR	105976	ExpressionStatement	k ++	2534:28:110403:110406	105890	0	True				
ANR	105977	PostIncDecOperationExpression	k ++		105890	0					
ANR	105978	Identifier	k		105890	0					
ANR	105979	IncDec	++		105890	1					
ANR	105980	ExpressionStatement	non_nil_exists = true	2535:28:110436:110457	105890	1	True				
ANR	105981	AssignmentExpression	non_nil_exists = true		105890	0		=			
ANR	105982	Identifier	non_nil_exists		105890	0					
ANR	105983	Identifier	true		105890	1					
ANR	105984	IfStatement	if ( k >= 0 )		105890	2					
ANR	105985	Condition	k >= 0	2536:32:110491:110496	105890	0	True				
ANR	105986	RelationalExpression	k >= 0		105890	0		>=			
ANR	105987	Identifier	k		105890	0					
ANR	105988	PrimaryExpression	0		105890	1					
ANR	105989	CompoundStatement		25:28:801:801	105890	1					
ANR	105990	BreakStatement	break ;	2538:32:110561:110566	105890	0	True				
ANR	105991	IfStatement	if ( k < 0 )		105890	5					
ANR	105992	Condition	k < 0	2545:20:110702:110706	105890	0	True				
ANR	105993	RelationalExpression	k < 0		105890	0		<			
ANR	105994	Identifier	k		105890	0					
ANR	105995	PrimaryExpression	0		105890	1					
ANR	105996	CompoundStatement		34:16:999:999	105890	1					
ANR	105997	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Size of the array of requirements is beinng set to be smaller than the specificed number of minOccurs(0)"" )"	2547:23:110750:110915	105890	0	True				
ANR	105998	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Size of the array of requirements is beinng set to be smaller than the specificed number of minOccurs(0)"" )"		105890	0					
ANR	105999	Callee	WSF_LOG_ERROR_MSG		105890	0					
ANR	106000	Identifier	WSF_LOG_ERROR_MSG		105890	0					
ANR	106001	ArgumentList	Environment :: getEnv ( ) -> log		105890	1					
ANR	106002	Argument	Environment :: getEnv ( ) -> log		105890	0					
ANR	106003	PtrMemberAccess	Environment :: getEnv ( ) -> log		105890	0					
ANR	106004	CallExpression	Environment :: getEnv ( )		105890	0					
ANR	106005	Callee	Environment :: getEnv		105890	0					
ANR	106006	Identifier	Environment :: getEnv		105890	0					
ANR	106007	ArgumentList			105890	1					
ANR	106008	Identifier	log		105890	1					
ANR	106009	Argument	WSF_LOG_SI		105890	1					
ANR	106010	Identifier	WSF_LOG_SI		105890	0					
ANR	106011	Argument	"""Size of the array of requirements is beinng set to be smaller than the specificed number of minOccurs(0)"""		105890	2					
ANR	106012	PrimaryExpression	"""Size of the array of requirements is beinng set to be smaller than the specificed number of minOccurs(0)"""		105890	0					
ANR	106013	ReturnStatement	return AXIS2_FAILURE ;	2548:23:110940:110960	105890	1	True				
ANR	106014	Identifier	AXIS2_FAILURE		105890	0					
ANR	106015	IfStatement	if ( property_Requirements == NULL )		105890	6					
ANR	106016	Condition	property_Requirements == NULL	2551:19:111001:111029	105890	0	True				
ANR	106017	EqualityExpression	property_Requirements == NULL		105890	0		==			
ANR	106018	Identifier	property_Requirements		105890	0					
ANR	106019	Identifier	NULL		105890	1					
ANR	106020	CompoundStatement		40:16:1322:1322	105890	1					
ANR	106021	ExpressionStatement	isValidRequirements = false	2553:20:111070:111097	105890	0	True				
ANR	106022	AssignmentExpression	isValidRequirements = false		105890	0		=			
ANR	106023	Identifier	isValidRequirements		105890	0					
ANR	106024	Identifier	false		105890	1					
ANR	106025	ReturnStatement	return true ;	2555:20:111140:111151	105890	1	True				
ANR	106026	Identifier	true		105890	0					
ANR	106027	IdentifierDeclStatement	AviaryCommon :: ResourceConstraint * element = ( * property_Requirements ) [ i ] ;	2559:17:111274:111345	105890	7	True				
ANR	106028	IdentifierDecl	* element = ( * property_Requirements ) [ i ]		105890	0					
ANR	106029	IdentifierDeclType	AviaryCommon :: ResourceConstraint *		105890	0					
ANR	106030	Identifier	element		105890	1					
ANR	106031	AssignmentExpression	* element = ( * property_Requirements ) [ i ]		105890	2		=			
ANR	106032	Identifier	element		105890	0					
ANR	106033	ArrayIndexing	( * property_Requirements ) [ i ]		105890	1					
ANR	106034	UnaryOperationExpression	* property_Requirements		105890	0					
ANR	106035	UnaryOperator	*		105890	0					
ANR	106036	Identifier	property_Requirements		105890	1					
ANR	106037	Identifier	i		105890	1					
ANR	106038	IfStatement	if ( NULL != element )		105890	8					
ANR	106039	Condition	NULL != element	2560:19:111366:111380	105890	0	True				
ANR	106040	EqualityExpression	NULL != element		105890	0		!=			
ANR	106041	Identifier	NULL		105890	0					
ANR	106042	Identifier	element		105890	1					
ANR	106043	CompoundStatement		49:16:1673:1673	105890	1					
ANR	106044	Statement	delete	2565:24:111482:111487	105890	0	True				
ANR	106045	ExpressionStatement	element	2565:31:111489:111496	105890	1	True				
ANR	106046	Identifier	element		105890	0					
ANR	106047	IfStatement	if ( ! non_nil_exists )		105890	9					
ANR	106048	Condition	! non_nil_exists	2569:23:111580:111594	105890	0	True				
ANR	106049	UnaryOperationExpression	! non_nil_exists		105890	0					
ANR	106050	UnaryOperator	!		105890	0					
ANR	106051	Identifier	non_nil_exists		105890	1					
ANR	106052	CompoundStatement		58:20:1891:1891	105890	1					
ANR	106053	ExpressionStatement	isValidRequirements = false	2572:24:111668:111695	105890	0	True				
ANR	106054	AssignmentExpression	isValidRequirements = false		105890	0		=			
ANR	106055	Identifier	isValidRequirements		105890	0					
ANR	106056	Identifier	false		105890	1					
ANR	106057	ExpressionStatement	( * property_Requirements ) [ i ] = NULL	2573:24:111721:111755	105890	1	True				
ANR	106058	AssignmentExpression	( * property_Requirements ) [ i ] = NULL		105890	0		=			
ANR	106059	ArrayIndexing	( * property_Requirements ) [ i ]		105890	0					
ANR	106060	UnaryOperationExpression	* property_Requirements		105890	0					
ANR	106061	UnaryOperator	*		105890	0					
ANR	106062	Identifier	property_Requirements		105890	1					
ANR	106063	Identifier	i		105890	1					
ANR	106064	Identifier	NULL		105890	1					
ANR	106065	ReturnStatement	return AXIS2_SUCCESS ;	2574:24:111781:111801	105890	2	True				
ANR	106066	Identifier	AXIS2_SUCCESS		105890	0					
ANR	106067	ExpressionStatement	( * property_Requirements ) [ i ] = NULL	2579:16:111876:111910	105890	10	True				
ANR	106068	AssignmentExpression	( * property_Requirements ) [ i ] = NULL		105890	0		=			
ANR	106069	ArrayIndexing	( * property_Requirements ) [ i ]		105890	0					
ANR	106070	UnaryOperationExpression	* property_Requirements		105890	0					
ANR	106071	UnaryOperator	*		105890	0					
ANR	106072	Identifier	property_Requirements		105890	1					
ANR	106073	Identifier	i		105890	1					
ANR	106074	Identifier	NULL		105890	1					
ANR	106075	ReturnStatement	return AXIS2_SUCCESS ;	2581:16:111945:111965	105890	11	True				
ANR	106076	Identifier	AXIS2_SUCCESS		105890	0					
ANR	106077	ReturnType	bool WSF_CALL		105890	1					
ANR	106078	Identifier	AviaryJob :: SubmitJob :: setRequirementsNilAt		105890	2					
ANR	106079	ParameterList	int i		105890	3					
ANR	106080	Parameter	int i	2512:54:109707:109711	105890	0	True				
ANR	106081	ParameterType	int		105890	0					
ANR	106082	Identifier	i		105890	1					
ANR	106083	CFGEntryNode	ENTRY		105890		True				
ANR	106084	CFGExitNode	EXIT		105890		True				
ANR	106085	Symbol	Environment :: getEnv		105890						
ANR	106086	Symbol	NULL		105890						
ANR	106087	Symbol	* property_Requirements		105890						
ANR	106088	Symbol	false		105890						
ANR	106089	Symbol	i		105890						
ANR	106090	Symbol	property_Requirements -> size		105890						
ANR	106091	Symbol	j		105890						
ANR	106092	Symbol	k		105890						
ANR	106093	Symbol	Environment :: getEnv ( ) -> log		105890						
ANR	106094	Symbol	AXIS2_FAILURE		105890						
ANR	106095	Symbol	* * property_Requirements		105890						
ANR	106096	Symbol	* i		105890						
ANR	106097	Symbol	size		105890						
ANR	106098	Symbol	WSF_LOG_SI		105890						
ANR	106099	Symbol	* Environment :: getEnv		105890						
ANR	106100	Symbol	isValidRequirements		105890						
ANR	106101	Symbol	non_nil_exists		105890						
ANR	106102	Symbol	true		105890						
ANR	106103	Symbol	property_Requirements		105890						
ANR	106104	Symbol	element		105890						
ANR	106105	Symbol	AXIS2_SUCCESS		105890						
ANR	106106	Function	AviaryJob :: SubmitJob :: getProperty7	2590:51:112132:112251							
ANR	106107	FunctionDef	AviaryJob :: SubmitJob :: getProperty7 ()		106106	0					
ANR	106108	CompoundStatement		2592:12:112202:112251	106106	0					
ANR	106109	ReturnStatement	return getExtra ( ) ;	2593:16:112220:112237	106106	0	True				
ANR	106110	CallExpression	getExtra ( )		106106	0					
ANR	106111	Callee	getExtra		106106	0					
ANR	106112	Identifier	getExtra		106106	0					
ANR	106113	ArgumentList			106106	1					
ANR	106114	ReturnType	WSF_CALL		106106	1					
ANR	106115	Identifier	AviaryJob :: SubmitJob :: getProperty7		106106	2					
ANR	106116	ParameterList			106106	3					
ANR	106117	CFGEntryNode	ENTRY		106106		True				
ANR	106118	CFGExitNode	EXIT		106106		True				
ANR	106119	Symbol	getExtra		106106						
ANR	106120	Function	AviaryJob :: SubmitJob :: getExtra	2599:51:112370:112491							
ANR	106121	FunctionDef	AviaryJob :: SubmitJob :: getExtra ()		106120	0					
ANR	106122	CompoundStatement		2601:13:112437:112491	106120	0					
ANR	106123	ReturnStatement	return property_Extra ;	2602:16:112455:112476	106120	0	True				
ANR	106124	Identifier	property_Extra		106120	0					
ANR	106125	ReturnType	WSF_CALL		106120	1					
ANR	106126	Identifier	AviaryJob :: SubmitJob :: getExtra		106120	2					
ANR	106127	ParameterList			106120	3					
ANR	106128	CFGEntryNode	ENTRY		106120		True				
ANR	106129	CFGExitNode	EXIT		106120		True				
ANR	106130	Symbol	property_Extra		106120						
ANR	106131	Function	AviaryJob :: SubmitJob :: setExtra	2608:12:112570:114157							
ANR	106132	FunctionDef	AviaryJob :: SubmitJob :: setExtra (std :: vector < AviaryCommon :: Attribute * > * arg_Extra)		106131	0					
ANR	106133	CompoundStatement		2611:13:112712:114157	106131	0					
ANR	106134	IdentifierDeclStatement	int size = 0 ;	2613:17:112748:112760	106131	0	True				
ANR	106135	IdentifierDecl	size = 0		106131	0					
ANR	106136	IdentifierDeclType	int		106131	0					
ANR	106137	Identifier	size		106131	1					
ANR	106138	AssignmentExpression	size = 0		106131	2		=			
ANR	106139	Identifier	size		106131	0					
ANR	106140	PrimaryExpression	0		106131	1					
ANR	106141	IdentifierDeclStatement	int i = 0 ;	2614:17:112779:112788	106131	1	True				
ANR	106142	IdentifierDecl	i = 0		106131	0					
ANR	106143	IdentifierDeclType	int		106131	0					
ANR	106144	Identifier	i		106131	1					
ANR	106145	AssignmentExpression	i = 0		106131	2		=			
ANR	106146	Identifier	i		106131	0					
ANR	106147	PrimaryExpression	0		106131	1					
ANR	106148	IdentifierDeclStatement	bool non_nil_exists = false ;	2615:17:112807:112834	106131	2	True				
ANR	106149	IdentifierDecl	non_nil_exists = false		106131	0					
ANR	106150	IdentifierDeclType	bool		106131	0					
ANR	106151	Identifier	non_nil_exists		106131	1					
ANR	106152	AssignmentExpression	non_nil_exists = false		106131	2		=			
ANR	106153	Identifier	false		106131	0					
ANR	106154	Identifier	false		106131	1					
ANR	106155	IfStatement	if ( isValidExtra && arg_Extra == property_Extra )		106131	3					
ANR	106156	Condition	isValidExtra && arg_Extra == property_Extra	2618:19:112873:112939	106131	0	True				
ANR	106157	AndExpression	isValidExtra && arg_Extra == property_Extra		106131	0		&&			
ANR	106158	Identifier	isValidExtra		106131	0					
ANR	106159	EqualityExpression	arg_Extra == property_Extra		106131	1		==			
ANR	106160	Identifier	arg_Extra		106131	0					
ANR	106161	Identifier	property_Extra		106131	1					
ANR	106162	CompoundStatement		10:16:245:245	106131	1					
ANR	106163	ReturnStatement	return true ;	2622:20:113001:113012	106131	0	True				
ANR	106164	Identifier	true		106131	0					
ANR	106165	ExpressionStatement	size = arg_Extra -> size ( )	2626:17:113067:113091	106131	4	True				
ANR	106166	AssignmentExpression	size = arg_Extra -> size ( )		106131	0		=			
ANR	106167	Identifier	size		106131	0					
ANR	106168	CallExpression	arg_Extra -> size ( )		106131	1					
ANR	106169	Callee	arg_Extra -> size		106131	0					
ANR	106170	PtrMemberAccess	arg_Extra -> size		106131	0					
ANR	106171	Identifier	arg_Extra		106131	0					
ANR	106172	Identifier	size		106131	1					
ANR	106173	ArgumentList			106131	1					
ANR	106174	IfStatement	if ( size < 0 )		106131	5					
ANR	106175	Condition	size < 0	2628:21:113132:113139	106131	0	True				
ANR	106176	RelationalExpression	size < 0		106131	0		<			
ANR	106177	Identifier	size		106131	0					
ANR	106178	PrimaryExpression	0		106131	1					
ANR	106179	CompoundStatement		19:17:446:446	106131	1					
ANR	106180	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""extra has less than minOccurs(0)"" )"	2630:21:113182:113274	106131	0	True				
ANR	106181	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""extra has less than minOccurs(0)"" )"		106131	0					
ANR	106182	Callee	WSF_LOG_ERROR_MSG		106131	0					
ANR	106183	Identifier	WSF_LOG_ERROR_MSG		106131	0					
ANR	106184	ArgumentList	Environment :: getEnv ( ) -> log		106131	1					
ANR	106185	Argument	Environment :: getEnv ( ) -> log		106131	0					
ANR	106186	PtrMemberAccess	Environment :: getEnv ( ) -> log		106131	0					
ANR	106187	CallExpression	Environment :: getEnv ( )		106131	0					
ANR	106188	Callee	Environment :: getEnv		106131	0					
ANR	106189	Identifier	Environment :: getEnv		106131	0					
ANR	106190	ArgumentList			106131	1					
ANR	106191	Identifier	log		106131	1					
ANR	106192	Argument	WSF_LOG_SI		106131	1					
ANR	106193	Identifier	WSF_LOG_SI		106131	0					
ANR	106194	Argument	"""extra has less than minOccurs(0)"""		106131	2					
ANR	106195	PrimaryExpression	"""extra has less than minOccurs(0)"""		106131	0					
ANR	106196	ReturnStatement	return false ;	2631:21:113297:113309	106131	1	True				
ANR	106197	Identifier	false		106131	0					
ANR	106198	ForStatement	for ( i = 0 ; i < size ; i ++ )		106131	6					
ANR	106199	ForInit	i = 0 ;	2633:21:113351:113356	106131	0	True				
ANR	106200	AssignmentExpression	i = 0		106131	0		=			
ANR	106201	Identifier	i		106131	0					
ANR	106202	PrimaryExpression	0		106131	1					
ANR	106203	Condition	i < size	2633:28:113358:113365	106131	1	True				
ANR	106204	RelationalExpression	i < size		106131	0		<			
ANR	106205	Identifier	i		106131	0					
ANR	106206	Identifier	size		106131	1					
ANR	106207	PostIncDecOperationExpression	i ++	2633:38:113368:113371	106131	2	True				
ANR	106208	Identifier	i		106131	0					
ANR	106209	IncDec	++		106131	1					
ANR	106210	CompoundStatement		24:17:679:679	106131	3					
ANR	106211	IfStatement	if ( NULL != ( * arg_Extra ) [ i ] )		106131	0					
ANR	106212	Condition	NULL != ( * arg_Extra ) [ i ]	2635:24:113418:113440	106131	0	True				
ANR	106213	EqualityExpression	NULL != ( * arg_Extra ) [ i ]		106131	0		!=			
ANR	106214	Identifier	NULL		106131	0					
ANR	106215	ArrayIndexing	( * arg_Extra ) [ i ]		106131	1					
ANR	106216	UnaryOperationExpression	* arg_Extra		106131	0					
ANR	106217	UnaryOperator	*		106131	0					
ANR	106218	Identifier	arg_Extra		106131	1					
ANR	106219	Identifier	i		106131	1					
ANR	106220	CompoundStatement		26:21:751:751	106131	1					
ANR	106221	ExpressionStatement	non_nil_exists = true	2637:25:113491:113512	106131	0	True				
ANR	106222	AssignmentExpression	non_nil_exists = true		106131	0		=			
ANR	106223	Identifier	non_nil_exists		106131	0					
ANR	106224	Identifier	true		106131	1					
ANR	106225	BreakStatement	break ;	2638:25:113539:113544	106131	1	True				
ANR	106226	ExpressionStatement	resetExtra ( )	2645:16:113641:113653	106131	7	True				
ANR	106227	CallExpression	resetExtra ( )		106131	0					
ANR	106228	Callee	resetExtra		106131	0					
ANR	106229	Identifier	resetExtra		106131	0					
ANR	106230	ArgumentList			106131	1					
ANR	106231	IfStatement	if ( NULL == arg_Extra )		106131	8					
ANR	106232	Condition	NULL == arg_Extra	2648:23:113696:113712	106131	0	True				
ANR	106233	EqualityExpression	NULL == arg_Extra		106131	0		==			
ANR	106234	Identifier	NULL		106131	0					
ANR	106235	Identifier	arg_Extra		106131	1					
ANR	106236	CompoundStatement		40:16:1044:1044	106131	1					
ANR	106237	ReturnStatement	return true ;	2652:20:113825:113836	106131	0	True				
ANR	106238	Identifier	true		106131	0					
ANR	106239	ExpressionStatement	property_Extra = arg_Extra	2655:24:113897:113923	106131	9	True				
ANR	106240	AssignmentExpression	property_Extra = arg_Extra		106131	0		=			
ANR	106241	Identifier	property_Extra		106131	0					
ANR	106242	Identifier	arg_Extra		106131	1					
ANR	106243	IfStatement	if ( non_nil_exists )		106131	10					
ANR	106244	Condition	non_nil_exists	2656:27:113952:113965	106131	0	True				
ANR	106245	Identifier	non_nil_exists		106131	0					
ANR	106246	CompoundStatement		47:24:1279:1279	106131	1					
ANR	106247	ExpressionStatement	isValidExtra = true	2658:28:114022:114041	106131	0	True				
ANR	106248	AssignmentExpression	isValidExtra = true		106131	0		=			
ANR	106249	Identifier	isValidExtra		106131	0					
ANR	106250	Identifier	true		106131	1					
ANR	106251	ReturnStatement	return true ;	2662:16:114131:114142	106131	11	True				
ANR	106252	Identifier	true		106131	0					
ANR	106253	ReturnType	bool WSF_CALL		106131	1					
ANR	106254	Identifier	AviaryJob :: SubmitJob :: setExtra		106131	2					
ANR	106255	ParameterList	std :: vector < AviaryCommon :: Attribute * > * arg_Extra		106131	3					
ANR	106256	Parameter	std :: vector < AviaryCommon :: Attribute * > * arg_Extra	2610:20:112648:112696	106131	0	True				
ANR	106257	ParameterType	std :: vector < AviaryCommon :: Attribute * > *		106131	0					
ANR	106258	Identifier	arg_Extra		106131	1					
ANR	106259	CFGEntryNode	ENTRY		106131		True				
ANR	106260	CFGExitNode	EXIT		106131		True				
ANR	106261	Symbol	property_Extra		106131						
ANR	106262	Symbol	Environment :: getEnv		106131						
ANR	106263	Symbol	NULL		106131						
ANR	106264	Symbol	* * arg_Extra		106131						
ANR	106265	Symbol	false		106131						
ANR	106266	Symbol	i		106131						
ANR	106267	Symbol	Environment :: getEnv ( ) -> log		106131						
ANR	106268	Symbol	arg_Extra		106131						
ANR	106269	Symbol	arg_Extra -> size		106131						
ANR	106270	Symbol	* i		106131						
ANR	106271	Symbol	size		106131						
ANR	106272	Symbol	WSF_LOG_SI		106131						
ANR	106273	Symbol	* Environment :: getEnv		106131						
ANR	106274	Symbol	isValidExtra		106131						
ANR	106275	Symbol	non_nil_exists		106131						
ANR	106276	Symbol	true		106131						
ANR	106277	Symbol	* arg_Extra		106131						
ANR	106278	Function	AviaryJob :: SubmitJob :: getExtraAt	2669:37:114283:114677							
ANR	106279	FunctionDef	AviaryJob :: SubmitJob :: getExtraAt (int i)		106278	0					
ANR	106280	CompoundStatement		2671:12:114356:114677	106278	0					
ANR	106281	IdentifierDeclStatement	AviaryCommon :: Attribute * ret_val ;	2672:16:114374:114406	106278	0	True				
ANR	106282	IdentifierDecl	* ret_val		106278	0					
ANR	106283	IdentifierDeclType	AviaryCommon :: Attribute *		106278	0					
ANR	106284	Identifier	ret_val		106278	1					
ANR	106285	IfStatement	if ( property_Extra == NULL )		106278	1					
ANR	106286	Condition	property_Extra == NULL	2673:19:114427:114448	106278	0	True				
ANR	106287	EqualityExpression	property_Extra == NULL		106278	0		==			
ANR	106288	Identifier	property_Extra		106278	0					
ANR	106289	Identifier	NULL		106278	1					
ANR	106290	CompoundStatement		4:16:110:110	106278	1					
ANR	106291	ReturnStatement	return ( AviaryCommon :: Attribute * ) 0 ;	2675:20:114489:114523	106278	0	True				
ANR	106292	CastExpression	( AviaryCommon :: Attribute * ) 0		106278	0					
ANR	106293	CastTarget	AviaryCommon :: Attribute *		106278	0					
ANR	106294	PrimaryExpression	0		106278	1					
ANR	106295	ExpressionStatement	ret_val = ( * property_Extra ) [ i ]	2677:16:114559:114591	106278	2	True				
ANR	106296	AssignmentExpression	ret_val = ( * property_Extra ) [ i ]		106278	0		=			
ANR	106297	Identifier	ret_val		106278	0					
ANR	106298	ArrayIndexing	( * property_Extra ) [ i ]		106278	1					
ANR	106299	UnaryOperationExpression	* property_Extra		106278	0					
ANR	106300	UnaryOperator	*		106278	0					
ANR	106301	Identifier	property_Extra		106278	1					
ANR	106302	Identifier	i		106278	1					
ANR	106303	ReturnStatement	return ret_val ;	2679:20:114630:114644	106278	3	True				
ANR	106304	Identifier	ret_val		106278	0					
ANR	106305	ReturnType	WSF_CALL		106278	1					
ANR	106306	Identifier	AviaryJob :: SubmitJob :: getExtraAt		106278	2					
ANR	106307	ParameterList	int i		106278	3					
ANR	106308	Parameter	int i	2670:45:114337:114341	106278	0	True				
ANR	106309	ParameterType	int		106278	0					
ANR	106310	Identifier	i		106278	1					
ANR	106311	CFGEntryNode	ENTRY		106278		True				
ANR	106312	CFGExitNode	EXIT		106278		True				
ANR	106313	Symbol	property_Extra		106278						
ANR	106314	Symbol	NULL		106278						
ANR	106315	Symbol	* i		106278						
ANR	106316	Symbol	* * property_Extra		106278						
ANR	106317	Symbol	i		106278						
ANR	106318	Symbol	ret_val		106278						
ANR	106319	Symbol	* property_Extra		106278						
ANR	106320	Function	AviaryJob :: SubmitJob :: setExtraAt	2686:11:114768:116545							
ANR	106321	FunctionDef	"AviaryJob :: SubmitJob :: setExtraAt (int i , AviaryCommon :: Attribute * arg_Extra)"		106320	0					
ANR	106322	CompoundStatement		2689:12:114902:116545	106320	0					
ANR	106323	IdentifierDeclStatement	AviaryCommon :: Attribute * element ;	2690:17:114921:114953	106320	0	True				
ANR	106324	IdentifierDecl	* element		106320	0					
ANR	106325	IdentifierDeclType	AviaryCommon :: Attribute *		106320	0					
ANR	106326	Identifier	element		106320	1					
ANR	106327	IdentifierDeclStatement	int size = 0 ;	2691:16:114971:114983	106320	1	True				
ANR	106328	IdentifierDecl	size = 0		106320	0					
ANR	106329	IdentifierDeclType	int		106320	0					
ANR	106330	Identifier	size		106320	1					
ANR	106331	AssignmentExpression	size = 0		106320	2		=			
ANR	106332	Identifier	size		106320	0					
ANR	106333	PrimaryExpression	0		106320	1					
ANR	106334	IdentifierDeclStatement	int non_nil_count ;	2693:16:115002:115019	106320	2	True				
ANR	106335	IdentifierDecl	non_nil_count		106320	0					
ANR	106336	IdentifierDeclType	int		106320	0					
ANR	106337	Identifier	non_nil_count		106320	1					
ANR	106338	IdentifierDeclStatement	bool non_nil_exists = false ;	2694:16:115037:115064	106320	3	True				
ANR	106339	IdentifierDecl	non_nil_exists = false		106320	0					
ANR	106340	IdentifierDeclType	bool		106320	0					
ANR	106341	Identifier	non_nil_exists		106320	1					
ANR	106342	AssignmentExpression	non_nil_exists = false		106320	2		=			
ANR	106343	Identifier	false		106320	0					
ANR	106344	Identifier	false		106320	1					
ANR	106345	IfStatement	if ( isValidExtra && property_Extra && arg_Extra == ( * property_Extra ) [ i ] )		106320	4					
ANR	106346	Condition	isValidExtra && property_Extra && arg_Extra == ( * property_Extra ) [ i ]	2698:20:115106:115231	106320	0	True				
ANR	106347	AndExpression	isValidExtra && property_Extra && arg_Extra == ( * property_Extra ) [ i ]		106320	0		&&			
ANR	106348	Identifier	isValidExtra		106320	0					
ANR	106349	AndExpression	property_Extra && arg_Extra == ( * property_Extra ) [ i ]		106320	1		&&			
ANR	106350	Identifier	property_Extra		106320	0					
ANR	106351	EqualityExpression	arg_Extra == ( * property_Extra ) [ i ]		106320	1		==			
ANR	106352	Identifier	arg_Extra		106320	0					
ANR	106353	ArrayIndexing	( * property_Extra ) [ i ]		106320	1					
ANR	106354	UnaryOperationExpression	* property_Extra		106320	0					
ANR	106355	UnaryOperator	*		106320	0					
ANR	106356	Identifier	property_Extra		106320	1					
ANR	106357	Identifier	i		106320	1					
ANR	106358	CompoundStatement		15:17:367:367	106320	1					
ANR	106359	ReturnStatement	return AXIS2_SUCCESS ;	2705:20:115313:115333	106320	0	True				
ANR	106360	Identifier	AXIS2_SUCCESS		106320	0					
ANR	106361	ExpressionStatement	non_nil_exists = true	2709:21:115396:115417	106320	5	True				
ANR	106362	AssignmentExpression	non_nil_exists = true		106320	0		=			
ANR	106363	Identifier	non_nil_exists		106320	0					
ANR	106364	Identifier	true		106320	1					
ANR	106365	IfStatement	if ( property_Extra == NULL )		106320	6					
ANR	106366	Condition	property_Extra == NULL	2712:19:115458:115479	106320	0	True				
ANR	106367	EqualityExpression	property_Extra == NULL		106320	0		==			
ANR	106368	Identifier	property_Extra		106320	0					
ANR	106369	Identifier	NULL		106320	1					
ANR	106370	CompoundStatement		25:16:595:595	106320	1					
ANR	106371	ExpressionStatement	property_Extra = new std :: vector < AviaryCommon :: Attribute * > ( )	2714:20:115520:115580	106320	0	True				
ANR	106372	AssignmentExpression	property_Extra = new std :: vector < AviaryCommon :: Attribute * > ( )		106320	0		=			
ANR	106373	Identifier	property_Extra		106320	0					
ANR	106374	UnaryExpression	new std :: vector < AviaryCommon :: Attribute * > ( )		106320	1					
ANR	106375	ElseStatement	else		106320	0					
ANR	106376	CompoundStatement		28:20:717:717	106320	0					
ANR	106377	ExpressionStatement	element = ( * property_Extra ) [ i ]	2718:16:115705:115735	106320	0	True				
ANR	106378	AssignmentExpression	element = ( * property_Extra ) [ i ]		106320	0		=			
ANR	106379	Identifier	element		106320	0					
ANR	106380	ArrayIndexing	( * property_Extra ) [ i ]		106320	1					
ANR	106381	UnaryOperationExpression	* property_Extra		106320	0					
ANR	106382	UnaryOperator	*		106320	0					
ANR	106383	Identifier	property_Extra		106320	1					
ANR	106384	Identifier	i		106320	1					
ANR	106385	IfStatement	if ( NULL != element )		106320	7					
ANR	106386	Condition	NULL != element	2722:27:115800:115814	106320	0	True				
ANR	106387	EqualityExpression	NULL != element		106320	0		!=			
ANR	106388	Identifier	NULL		106320	0					
ANR	106389	Identifier	element		106320	1					
ANR	106390	CompoundStatement		35:24:938:938	106320	1					
ANR	106391	Statement	delete	2727:32:115956:115961	106320	0	True				
ANR	106392	ExpressionStatement	element	2727:39:115963:115970	106320	1	True				
ANR	106393	Identifier	element		106320	0					
ANR	106394	IfStatement	if ( ! non_nil_exists )		106320	8					
ANR	106395	Condition	! non_nil_exists	2732:23:116097:116111	106320	0	True				
ANR	106396	UnaryOperationExpression	! non_nil_exists		106320	0					
ANR	106397	UnaryOperator	!		106320	0					
ANR	106398	Identifier	non_nil_exists		106320	1					
ANR	106399	CompoundStatement		45:20:1231:1231	106320	1					
ANR	106400	ExpressionStatement	isValidExtra = true	2735:24:116185:116204	106320	0	True				
ANR	106401	AssignmentExpression	isValidExtra = true		106320	0		=			
ANR	106402	Identifier	isValidExtra		106320	0					
ANR	106403	Identifier	true		106320	1					
ANR	106404	ExpressionStatement	( * property_Extra ) [ i ] = NULL	2736:24:116230:116256	106320	1	True				
ANR	106405	AssignmentExpression	( * property_Extra ) [ i ] = NULL		106320	0		=			
ANR	106406	ArrayIndexing	( * property_Extra ) [ i ]		106320	0					
ANR	106407	UnaryOperationExpression	* property_Extra		106320	0					
ANR	106408	UnaryOperator	*		106320	0					
ANR	106409	Identifier	property_Extra		106320	1					
ANR	106410	Identifier	i		106320	1					
ANR	106411	Identifier	NULL		106320	1					
ANR	106412	ReturnStatement	return AXIS2_SUCCESS ;	2738:24:116307:116327	106320	2	True				
ANR	106413	Identifier	AXIS2_SUCCESS		106320	0					
ANR	106414	ExpressionStatement	( * property_Extra ) [ i ] = arg_Extra	2741:20:116388:116420	106320	9	True				
ANR	106415	AssignmentExpression	( * property_Extra ) [ i ] = arg_Extra		106320	0		=			
ANR	106416	ArrayIndexing	( * property_Extra ) [ i ]		106320	0					
ANR	106417	UnaryOperationExpression	* property_Extra		106320	0					
ANR	106418	UnaryOperator	*		106320	0					
ANR	106419	Identifier	property_Extra		106320	1					
ANR	106420	Identifier	i		106320	1					
ANR	106421	Identifier	arg_Extra		106320	1					
ANR	106422	ExpressionStatement	isValidExtra = true	2744:15:116457:116476	106320	10	True				
ANR	106423	AssignmentExpression	isValidExtra = true		106320	0		=			
ANR	106424	Identifier	isValidExtra		106320	0					
ANR	106425	Identifier	true		106320	1					
ANR	106426	ReturnStatement	return AXIS2_SUCCESS ;	2746:16:116511:116531	106320	11	True				
ANR	106427	Identifier	AXIS2_SUCCESS		106320	0					
ANR	106428	ReturnType	bool WSF_CALL		106320	1					
ANR	106429	Identifier	AviaryJob :: SubmitJob :: setExtraAt		106320	2					
ANR	106430	ParameterList	"int i , AviaryCommon :: Attribute * arg_Extra"		106320	3					
ANR	106431	Parameter	int i	2687:45:114827:114831	106320	0	True				
ANR	106432	ParameterType	int		106320	0					
ANR	106433	Identifier	i		106320	1					
ANR	106434	Parameter	AviaryCommon :: Attribute * arg_Extra	2688:20:114854:114887	106320	1	True				
ANR	106435	ParameterType	AviaryCommon :: Attribute *		106320	0					
ANR	106436	Identifier	arg_Extra		106320	1					
ANR	106437	CFGEntryNode	ENTRY		106320		True				
ANR	106438	CFGExitNode	EXIT		106320		True				
ANR	106439	Symbol	property_Extra		106320						
ANR	106440	Symbol	NULL		106320						
ANR	106441	Symbol	false		106320						
ANR	106442	Symbol	i		106320						
ANR	106443	Symbol	non_nil_count		106320						
ANR	106444	Symbol	arg_Extra		106320						
ANR	106445	Symbol	* i		106320						
ANR	106446	Symbol	size		106320						
ANR	106447	Symbol	isValidExtra		106320						
ANR	106448	Symbol	non_nil_exists		106320						
ANR	106449	Symbol	* * property_Extra		106320						
ANR	106450	Symbol	true		106320						
ANR	106451	Symbol	* property_Extra		106320						
ANR	106452	Symbol	element		106320						
ANR	106453	Symbol	AXIS2_SUCCESS		106320						
ANR	106454	Function	AviaryJob :: SubmitJob :: addExtra	2752:12:116621:117309							
ANR	106455	FunctionDef	AviaryJob :: SubmitJob :: addExtra (AviaryCommon :: Attribute * arg_Extra)		106454	0					
ANR	106456	CompoundStatement		2755:13:116748:117309	106454	0					
ANR	106457	IfStatement	if ( NULL == arg_Extra )		106454	0					
ANR	106458	Condition	NULL == arg_Extra	2758:24:116792:116808	106454	0	True				
ANR	106459	EqualityExpression	NULL == arg_Extra		106454	0		==			
ANR	106460	Identifier	NULL		106454	0					
ANR	106461	Identifier	arg_Extra		106454	1					
ANR	106462	CompoundStatement		6:20:104:104	106454	1					
ANR	106463	ReturnStatement	return true ;	2762:27:116905:116916	106454	0	True				
ANR	106464	Identifier	true		106454	0					
ANR	106465	IfStatement	if ( property_Extra == NULL )		106454	1					
ANR	106466	Condition	property_Extra == NULL	2767:19:117005:117026	106454	0	True				
ANR	106467	EqualityExpression	property_Extra == NULL		106454	0		==			
ANR	106468	Identifier	property_Extra		106454	0					
ANR	106469	Identifier	NULL		106454	1					
ANR	106470	CompoundStatement		14:16:296:296	106454	1					
ANR	106471	ExpressionStatement	property_Extra = new std :: vector < AviaryCommon :: Attribute * > ( )	2769:20:117067:117127	106454	0	True				
ANR	106472	AssignmentExpression	property_Extra = new std :: vector < AviaryCommon :: Attribute * > ( )		106454	0		=			
ANR	106473	Identifier	property_Extra		106454	0					
ANR	106474	UnaryExpression	new std :: vector < AviaryCommon :: Attribute * > ( )		106454	1					
ANR	106475	ExpressionStatement	property_Extra -> push_back ( arg_Extra )	2772:15:117177:117213	106454	2	True				
ANR	106476	CallExpression	property_Extra -> push_back ( arg_Extra )		106454	0					
ANR	106477	Callee	property_Extra -> push_back		106454	0					
ANR	106478	PtrMemberAccess	property_Extra -> push_back		106454	0					
ANR	106479	Identifier	property_Extra		106454	0					
ANR	106480	Identifier	push_back		106454	1					
ANR	106481	ArgumentList	arg_Extra		106454	1					
ANR	106482	Argument	arg_Extra		106454	0					
ANR	106483	Identifier	arg_Extra		106454	0					
ANR	106484	ExpressionStatement	isValidExtra = true	2774:16:117246:117265	106454	3	True				
ANR	106485	AssignmentExpression	isValidExtra = true		106454	0		=			
ANR	106486	Identifier	isValidExtra		106454	0					
ANR	106487	Identifier	true		106454	1					
ANR	106488	ReturnStatement	return true ;	2775:16:117283:117294	106454	4	True				
ANR	106489	Identifier	true		106454	0					
ANR	106490	ReturnType	bool WSF_CALL		106454	1					
ANR	106491	Identifier	AviaryJob :: SubmitJob :: addExtra		106454	2					
ANR	106492	ParameterList	AviaryCommon :: Attribute * arg_Extra		106454	3					
ANR	106493	Parameter	AviaryCommon :: Attribute * arg_Extra	2754:20:116699:116732	106454	0	True				
ANR	106494	ParameterType	AviaryCommon :: Attribute *		106454	0					
ANR	106495	Identifier	arg_Extra		106454	1					
ANR	106496	CFGEntryNode	ENTRY		106454		True				
ANR	106497	CFGExitNode	EXIT		106454		True				
ANR	106498	Symbol	arg_Extra		106454						
ANR	106499	Symbol	property_Extra		106454						
ANR	106500	Symbol	NULL		106454						
ANR	106501	Symbol	isValidExtra		106454						
ANR	106502	Symbol	true		106454						
ANR	106503	Function	AviaryJob :: SubmitJob :: sizeofExtra	2781:12:117404:117648							
ANR	106504	FunctionDef	AviaryJob :: SubmitJob :: sizeofExtra ()		106503	0					
ANR	106505	CompoundStatement		2783:12:117477:117648	106503	0					
ANR	106506	IfStatement	if ( property_Extra == NULL )		106503	0					
ANR	106507	Condition	property_Extra == NULL	2785:19:117499:117520	106503	0	True				
ANR	106508	EqualityExpression	property_Extra == NULL		106503	0		==			
ANR	106509	Identifier	property_Extra		106503	0					
ANR	106510	Identifier	NULL		106503	1					
ANR	106511	CompoundStatement		4:16:61:61	106503	1					
ANR	106512	ReturnStatement	return 0 ;	2787:20:117561:117569	106503	0	True				
ANR	106513	PrimaryExpression	0		106503	0					
ANR	106514	ReturnStatement	return property_Extra -> size ( ) ;	2789:16:117605:117634	106503	1	True				
ANR	106515	CallExpression	property_Extra -> size ( )		106503	0					
ANR	106516	Callee	property_Extra -> size		106503	0					
ANR	106517	PtrMemberAccess	property_Extra -> size		106503	0					
ANR	106518	Identifier	property_Extra		106503	0					
ANR	106519	Identifier	size		106503	1					
ANR	106520	ArgumentList			106503	1					
ANR	106521	ReturnType	int WSF_CALL		106503	1					
ANR	106522	Identifier	AviaryJob :: SubmitJob :: sizeofExtra		106503	2					
ANR	106523	ParameterList			106503	3					
ANR	106524	CFGEntryNode	ENTRY		106503		True				
ANR	106525	CFGExitNode	EXIT		106503		True				
ANR	106526	Symbol	property_Extra		106503						
ANR	106527	Symbol	NULL		106503						
ANR	106528	Symbol	property_Extra -> size		106503						
ANR	106529	Symbol	* property_Extra		106503						
ANR	106530	Function	AviaryJob :: SubmitJob :: removeExtraAt	2795:12:117754:117890							
ANR	106531	FunctionDef	AviaryJob :: SubmitJob :: removeExtraAt (int i)		106530	0					
ANR	106532	CompoundStatement		2797:12:117835:117890	106530	0					
ANR	106533	ReturnStatement	return setExtraNilAt ( i ) ;	2798:16:117853:117876	106530	0	True				
ANR	106534	CallExpression	setExtraNilAt ( i )		106530	0					
ANR	106535	Callee	setExtraNilAt		106530	0					
ANR	106536	Identifier	setExtraNilAt		106530	0					
ANR	106537	ArgumentList	i		106530	1					
ANR	106538	Argument	i		106530	0					
ANR	106539	Identifier	i		106530	0					
ANR	106540	ReturnType	bool WSF_CALL		106530	1					
ANR	106541	Identifier	AviaryJob :: SubmitJob :: removeExtraAt		106530	2					
ANR	106542	ParameterList	int i		106530	3					
ANR	106543	Parameter	int i	2796:48:117816:117820	106530	0	True				
ANR	106544	ParameterType	int		106530	0					
ANR	106545	Identifier	i		106530	1					
ANR	106546	CFGEntryNode	ENTRY		106530		True				
ANR	106547	CFGExitNode	EXIT		106530		True				
ANR	106548	Symbol	setExtraNilAt		106530						
ANR	106549	Symbol	i		106530						
ANR	106550	Function	AviaryJob :: SubmitJob :: resetExtra	2806:11:117981:118940							
ANR	106551	FunctionDef	AviaryJob :: SubmitJob :: resetExtra ()		106550	0					
ANR	106552	CompoundStatement		2808:11:118052:118940	106550	0					
ANR	106553	IdentifierDeclStatement	int i = 0 ;	2809:15:118069:118078	106550	0	True				
ANR	106554	IdentifierDecl	i = 0		106550	0					
ANR	106555	IdentifierDeclType	int		106550	0					
ANR	106556	Identifier	i		106550	1					
ANR	106557	AssignmentExpression	i = 0		106550	2		=			
ANR	106558	Identifier	i		106550	0					
ANR	106559	PrimaryExpression	0		106550	1					
ANR	106560	IdentifierDeclStatement	int count = 0 ;	2810:15:118095:118108	106550	1	True				
ANR	106561	IdentifierDecl	count = 0		106550	0					
ANR	106562	IdentifierDeclType	int		106550	0					
ANR	106563	Identifier	count		106550	1					
ANR	106564	AssignmentExpression	count = 0		106550	2		=			
ANR	106565	Identifier	count		106550	0					
ANR	106566	PrimaryExpression	0		106550	1					
ANR	106567	IfStatement	if ( property_Extra != NULL )		106550	2					
ANR	106568	Condition	property_Extra != NULL	2814:20:118148:118169	106550	0	True				
ANR	106569	EqualityExpression	property_Extra != NULL		106550	0		!=			
ANR	106570	Identifier	property_Extra		106550	0					
ANR	106571	Identifier	NULL		106550	1					
ANR	106572	CompoundStatement		9:18:155:232	106550	1					
ANR	106573	IdentifierDeclStatement	std :: vector < AviaryCommon :: Attribute * > :: iterator it = property_Extra -> begin ( ) ;	2816:18:118208:118285	106550	0	True				
ANR	106574	IdentifierDecl	it = property_Extra -> begin ( )		106550	0					
ANR	106575	IdentifierDeclType	std :: vector < AviaryCommon :: Attribute * > :: iterator		106550	0					
ANR	106576	Identifier	it		106550	1					
ANR	106577	AssignmentExpression	it = property_Extra -> begin ( )		106550	2		=			
ANR	106578	Identifier	it		106550	0					
ANR	106579	CallExpression	property_Extra -> begin ( )		106550	1					
ANR	106580	Callee	property_Extra -> begin		106550	0					
ANR	106581	PtrMemberAccess	property_Extra -> begin		106550	0					
ANR	106582	Identifier	property_Extra		106550	0					
ANR	106583	Identifier	begin		106550	1					
ANR	106584	ArgumentList			106550	1					
ANR	106585	ForStatement	for ( ; it < property_Extra -> end ( ) ; ++ it )		106550	1					
ANR	106586	Condition	it < property_Extra -> end ( )	2817:25:118312:118338	106550	0	True				
ANR	106587	RelationalExpression	it < property_Extra -> end ( )		106550	0		<			
ANR	106588	Identifier	it		106550	0					
ANR	106589	CallExpression	property_Extra -> end ( )		106550	1					
ANR	106590	Callee	property_Extra -> end		106550	0					
ANR	106591	PtrMemberAccess	property_Extra -> end		106550	0					
ANR	106592	Identifier	property_Extra		106550	0					
ANR	106593	Identifier	end		106550	1					
ANR	106594	ArgumentList			106550	1					
ANR	106595	UnaryExpression	++ it	2817:55:118342:118345	106550	1	True				
ANR	106596	IncDec	++		106550	0					
ANR	106597	Identifier	it		106550	1					
ANR	106598	CompoundStatement		12:21:336:374	106550	2					
ANR	106599	IdentifierDeclStatement	AviaryCommon :: Attribute * element = * it ;	2819:21:118389:118427	106550	0	True				
ANR	106600	IdentifierDecl	* element = * it		106550	0					
ANR	106601	IdentifierDeclType	AviaryCommon :: Attribute *		106550	0					
ANR	106602	Identifier	element		106550	1					
ANR	106603	AssignmentExpression	* element = * it		106550	2		=			
ANR	106604	Identifier	element		106550	0					
ANR	106605	UnaryOperationExpression	* it		106550	1					
ANR	106606	UnaryOperator	*		106550	0					
ANR	106607	Identifier	it		106550	1					
ANR	106608	IfStatement	if ( element != NULL )		106550	1					
ANR	106609	Condition	element != NULL	2824:19:118496:118510	106550	0	True				
ANR	106610	EqualityExpression	element != NULL		106550	0		!=			
ANR	106611	Identifier	element		106550	0					
ANR	106612	Identifier	NULL		106550	1					
ANR	106613	CompoundStatement		18:16:476:476	106550	1					
ANR	106614	Statement	delete	2828:25:118596:118601	106550	0	True				
ANR	106615	ExpressionStatement	element	2828:33:118604:118611	106550	1	True				
ANR	106616	Identifier	element		106550	0					
ANR	106617	IfStatement	if ( NULL != property_Extra )		106550	3					
ANR	106618	Condition	NULL != property_Extra	2840:23:118782:118803	106550	0	True				
ANR	106619	EqualityExpression	NULL != property_Extra		106550	0		!=			
ANR	106620	Identifier	NULL		106550	0					
ANR	106621	Identifier	property_Extra		106550	1					
ANR	106622	Statement	delete	2841:17:118823:118828	106550	1	True				
ANR	106623	ExpressionStatement	property_Extra	2841:24:118830:118844	106550	4	True				
ANR	106624	Identifier	property_Extra		106550	0					
ANR	106625	ExpressionStatement	isValidExtra = false	2843:15:118878:118898	106550	5	True				
ANR	106626	AssignmentExpression	isValidExtra = false		106550	0		=			
ANR	106627	Identifier	isValidExtra		106550	0					
ANR	106628	Identifier	false		106550	1					
ANR	106629	ReturnStatement	return true ;	2844:15:118916:118927	106550	6	True				
ANR	106630	Identifier	true		106550	0					
ANR	106631	ReturnType	bool WSF_CALL		106550	1					
ANR	106632	Identifier	AviaryJob :: SubmitJob :: resetExtra		106550	2					
ANR	106633	ParameterList			106550	3					
ANR	106634	CFGEntryNode	ENTRY		106550		True				
ANR	106635	CFGExitNode	EXIT		106550		True				
ANR	106636	Symbol	property_Extra		106550						
ANR	106637	Symbol	NULL		106550						
ANR	106638	Symbol	property_Extra -> begin		106550						
ANR	106639	Symbol	count		106550						
ANR	106640	Symbol	false		106550						
ANR	106641	Symbol	i		106550						
ANR	106642	Symbol	it		106550						
ANR	106643	Symbol	* it		106550						
ANR	106644	Symbol	isValidExtra		106550						
ANR	106645	Symbol	true		106550						
ANR	106646	Symbol	property_Extra -> end		106550						
ANR	106647	Symbol	* property_Extra		106550						
ANR	106648	Symbol	element		106550						
ANR	106649	Function	AviaryJob :: SubmitJob :: isExtraNil	2850:11:119026:119147							
ANR	106650	FunctionDef	AviaryJob :: SubmitJob :: isExtraNil ()		106649	0					
ANR	106651	CompoundStatement		2852:11:119097:119147	106649	0					
ANR	106652	ReturnStatement	return ! isValidExtra ;	2853:15:119114:119134	106649	0	True				
ANR	106653	UnaryOperationExpression	! isValidExtra		106649	0					
ANR	106654	UnaryOperator	!		106649	0					
ANR	106655	Identifier	isValidExtra		106649	1					
ANR	106656	ReturnType	bool WSF_CALL		106649	1					
ANR	106657	Identifier	AviaryJob :: SubmitJob :: isExtraNil		106649	2					
ANR	106658	ParameterList			106649	3					
ANR	106659	CFGEntryNode	ENTRY		106649		True				
ANR	106660	CFGExitNode	EXIT		106649		True				
ANR	106661	Symbol	isValidExtra		106649						
ANR	106662	Function	AviaryJob :: SubmitJob :: setExtraNil	2859:11:119253:119374							
ANR	106663	FunctionDef	AviaryJob :: SubmitJob :: setExtraNil ()		106662	0					
ANR	106664	CompoundStatement		2861:11:119325:119374	106662	0					
ANR	106665	ReturnStatement	return resetExtra ( ) ;	2862:15:119342:119361	106662	0	True				
ANR	106666	CallExpression	resetExtra ( )		106662	0					
ANR	106667	Callee	resetExtra		106662	0					
ANR	106668	Identifier	resetExtra		106662	0					
ANR	106669	ArgumentList			106662	1					
ANR	106670	ReturnType	bool WSF_CALL		106662	1					
ANR	106671	Identifier	AviaryJob :: SubmitJob :: setExtraNil		106662	2					
ANR	106672	ParameterList			106662	3					
ANR	106673	CFGEntryNode	ENTRY		106662		True				
ANR	106674	CFGExitNode	EXIT		106662		True				
ANR	106675	Symbol	resetExtra		106662						
ANR	106676	Function	AviaryJob :: SubmitJob :: isExtraNilAt	2869:11:119477:119718							
ANR	106677	FunctionDef	AviaryJob :: SubmitJob :: isExtraNilAt (int i)		106676	0					
ANR	106678	CompoundStatement		2871:11:119555:119718	106676	0					
ANR	106679	ReturnStatement	return ( isValidExtra == false || NULL == property_Extra || NULL == ( * property_Extra ) [ i ] ) ;	2872:15:119572:119704	106676	0	True				
ANR	106680	OrExpression	isValidExtra == false || NULL == property_Extra || NULL == ( * property_Extra ) [ i ]		106676	0		||			
ANR	106681	EqualityExpression	isValidExtra == false		106676	0		==			
ANR	106682	Identifier	isValidExtra		106676	0					
ANR	106683	Identifier	false		106676	1					
ANR	106684	OrExpression	NULL == property_Extra || NULL == ( * property_Extra ) [ i ]		106676	1		||			
ANR	106685	EqualityExpression	NULL == property_Extra		106676	0		==			
ANR	106686	Identifier	NULL		106676	0					
ANR	106687	Identifier	property_Extra		106676	1					
ANR	106688	EqualityExpression	NULL == ( * property_Extra ) [ i ]		106676	1		==			
ANR	106689	Identifier	NULL		106676	0					
ANR	106690	ArrayIndexing	( * property_Extra ) [ i ]		106676	1					
ANR	106691	UnaryOperationExpression	* property_Extra		106676	0					
ANR	106692	UnaryOperator	*		106676	0					
ANR	106693	Identifier	property_Extra		106676	1					
ANR	106694	Identifier	i		106676	1					
ANR	106695	ReturnType	bool WSF_CALL		106676	1					
ANR	106696	Identifier	AviaryJob :: SubmitJob :: isExtraNilAt		106676	2					
ANR	106697	ParameterList	int i		106676	3					
ANR	106698	Parameter	int i	2870:46:119537:119541	106676	0	True				
ANR	106699	ParameterType	int		106676	0					
ANR	106700	Identifier	i		106676	1					
ANR	106701	CFGEntryNode	ENTRY		106676		True				
ANR	106702	CFGExitNode	EXIT		106676		True				
ANR	106703	Symbol	property_Extra		106676						
ANR	106704	Symbol	NULL		106676						
ANR	106705	Symbol	* i		106676						
ANR	106706	Symbol	isValidExtra		106676						
ANR	106707	Symbol	false		106676						
ANR	106708	Symbol	* * property_Extra		106676						
ANR	106709	Symbol	i		106676						
ANR	106710	Symbol	* property_Extra		106676						
ANR	106711	Function	AviaryJob :: SubmitJob :: setExtraNilAt	2880:11:119798:122045							
ANR	106712	FunctionDef	AviaryJob :: SubmitJob :: setExtraNilAt (int i)		106711	0					
ANR	106713	CompoundStatement		2882:11:119877:122045	106711	0					
ANR	106714	IdentifierDeclStatement	int size = 0 ;	2883:16:119895:119907	106711	0	True				
ANR	106715	IdentifierDecl	size = 0		106711	0					
ANR	106716	IdentifierDeclType	int		106711	0					
ANR	106717	Identifier	size		106711	1					
ANR	106718	AssignmentExpression	size = 0		106711	2		=			
ANR	106719	Identifier	size		106711	0					
ANR	106720	PrimaryExpression	0		106711	1					
ANR	106721	IdentifierDeclStatement	int j ;	2884:16:119925:119930	106711	1	True				
ANR	106722	IdentifierDecl	j		106711	0					
ANR	106723	IdentifierDeclType	int		106711	0					
ANR	106724	Identifier	j		106711	1					
ANR	106725	IdentifierDeclStatement	bool non_nil_exists = false ;	2885:16:119948:119975	106711	2	True				
ANR	106726	IdentifierDecl	non_nil_exists = false		106711	0					
ANR	106727	IdentifierDeclType	bool		106711	0					
ANR	106728	Identifier	non_nil_exists		106711	1					
ANR	106729	AssignmentExpression	non_nil_exists = false		106711	2		=			
ANR	106730	Identifier	false		106711	0					
ANR	106731	Identifier	false		106711	1					
ANR	106732	IdentifierDeclStatement	int k = 0 ;	2887:16:119994:120003	106711	3	True				
ANR	106733	IdentifierDecl	k = 0		106711	0					
ANR	106734	IdentifierDeclType	int		106711	0					
ANR	106735	Identifier	k		106711	1					
ANR	106736	AssignmentExpression	k = 0		106711	2		=			
ANR	106737	Identifier	k		106711	0					
ANR	106738	PrimaryExpression	0		106711	1					
ANR	106739	IfStatement	if ( property_Extra == NULL || isValidExtra == false )		106711	4					
ANR	106740	Condition	property_Extra == NULL || isValidExtra == false	2889:19:120025:120099	106711	0	True				
ANR	106741	OrExpression	property_Extra == NULL || isValidExtra == false		106711	0		||			
ANR	106742	EqualityExpression	property_Extra == NULL		106711	0		==			
ANR	106743	Identifier	property_Extra		106711	0					
ANR	106744	Identifier	NULL		106711	1					
ANR	106745	EqualityExpression	isValidExtra == false		106711	1		==			
ANR	106746	Identifier	isValidExtra		106711	0					
ANR	106747	Identifier	false		106711	1					
ANR	106748	CompoundStatement		10:16:240:240	106711	1					
ANR	106749	ExpressionStatement	non_nil_exists = false	2893:20:120161:120183	106711	0	True				
ANR	106750	AssignmentExpression	non_nil_exists = false		106711	0		=			
ANR	106751	Identifier	non_nil_exists		106711	0					
ANR	106752	Identifier	false		106711	1					
ANR	106753	ElseStatement	else		106711	0					
ANR	106754	CompoundStatement		15:16:362:362	106711	0					
ANR	106755	ExpressionStatement	size = property_Extra -> size ( )	2897:20:120262:120291	106711	0	True				
ANR	106756	AssignmentExpression	size = property_Extra -> size ( )		106711	0		=			
ANR	106757	Identifier	size		106711	0					
ANR	106758	CallExpression	property_Extra -> size ( )		106711	1					
ANR	106759	Callee	property_Extra -> size		106711	0					
ANR	106760	PtrMemberAccess	property_Extra -> size		106711	0					
ANR	106761	Identifier	property_Extra		106711	0					
ANR	106762	Identifier	size		106711	1					
ANR	106763	ArgumentList			106711	1					
ANR	106764	ForStatement	"for ( j = 0 , k = 0 ; j < size ; j ++ )"		106711	1					
ANR	106765	ForInit	"j = 0 , k = 0 ;"	2898:24:120317:120329	106711	0	True				
ANR	106766	Expression	"j = 0 , k = 0"		106711	0					
ANR	106767	AssignmentExpression	j = 0		106711	0		=			
ANR	106768	Identifier	j		106711	0					
ANR	106769	PrimaryExpression	0		106711	1					
ANR	106770	AssignmentExpression	k = 0		106711	1		=			
ANR	106771	Identifier	k		106711	0					
ANR	106772	PrimaryExpression	0		106711	1					
ANR	106773	Condition	j < size	2898:38:120331:120338	106711	1	True				
ANR	106774	RelationalExpression	j < size		106711	0		<			
ANR	106775	Identifier	j		106711	0					
ANR	106776	Identifier	size		106711	1					
ANR	106777	PostIncDecOperationExpression	j ++	2898:48:120341:120344	106711	2	True				
ANR	106778	Identifier	j		106711	0					
ANR	106779	IncDec	++		106711	1					
ANR	106780	CompoundStatement		18:20:490:490	106711	3					
ANR	106781	IfStatement	if ( i == j )		106711	0					
ANR	106782	Condition	i == j	2900:27:120397:120402	106711	0	True				
ANR	106783	EqualityExpression	i == j		106711	0		==			
ANR	106784	Identifier	i		106711	0					
ANR	106785	Identifier	j		106711	1					
ANR	106786	ContinueStatement	continue ;	2900:35:120405:120413	106711	1	True				
ANR	106787	IfStatement	if ( NULL != ( * property_Extra ) [ i ] )		106711	1					
ANR	106788	Condition	NULL != ( * property_Extra ) [ i ]	2901:27:120443:120470	106711	0	True				
ANR	106789	EqualityExpression	NULL != ( * property_Extra ) [ i ]		106711	0		!=			
ANR	106790	Identifier	NULL		106711	0					
ANR	106791	ArrayIndexing	( * property_Extra ) [ i ]		106711	1					
ANR	106792	UnaryOperationExpression	* property_Extra		106711	0					
ANR	106793	UnaryOperator	*		106711	0					
ANR	106794	Identifier	property_Extra		106711	1					
ANR	106795	Identifier	i		106711	1					
ANR	106796	CompoundStatement		21:24:619:619	106711	1					
ANR	106797	ExpressionStatement	k ++	2903:28:120527:120530	106711	0	True				
ANR	106798	PostIncDecOperationExpression	k ++		106711	0					
ANR	106799	Identifier	k		106711	0					
ANR	106800	IncDec	++		106711	1					
ANR	106801	ExpressionStatement	non_nil_exists = true	2904:28:120560:120581	106711	1	True				
ANR	106802	AssignmentExpression	non_nil_exists = true		106711	0		=			
ANR	106803	Identifier	non_nil_exists		106711	0					
ANR	106804	Identifier	true		106711	1					
ANR	106805	IfStatement	if ( k >= 0 )		106711	2					
ANR	106806	Condition	k >= 0	2905:32:120615:120620	106711	0	True				
ANR	106807	RelationalExpression	k >= 0		106711	0		>=			
ANR	106808	Identifier	k		106711	0					
ANR	106809	PrimaryExpression	0		106711	1					
ANR	106810	CompoundStatement		25:28:773:773	106711	1					
ANR	106811	BreakStatement	break ;	2907:32:120685:120690	106711	0	True				
ANR	106812	IfStatement	if ( k < 0 )		106711	5					
ANR	106813	Condition	k < 0	2914:20:120826:120830	106711	0	True				
ANR	106814	RelationalExpression	k < 0		106711	0		<			
ANR	106815	Identifier	k		106711	0					
ANR	106816	PrimaryExpression	0		106711	1					
ANR	106817	CompoundStatement		34:16:971:971	106711	1					
ANR	106818	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Size of the array of extra is beinng set to be smaller than the specificed number of minOccurs(0)"" )"	2916:23:120874:121032	106711	0	True				
ANR	106819	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Size of the array of extra is beinng set to be smaller than the specificed number of minOccurs(0)"" )"		106711	0					
ANR	106820	Callee	WSF_LOG_ERROR_MSG		106711	0					
ANR	106821	Identifier	WSF_LOG_ERROR_MSG		106711	0					
ANR	106822	ArgumentList	Environment :: getEnv ( ) -> log		106711	1					
ANR	106823	Argument	Environment :: getEnv ( ) -> log		106711	0					
ANR	106824	PtrMemberAccess	Environment :: getEnv ( ) -> log		106711	0					
ANR	106825	CallExpression	Environment :: getEnv ( )		106711	0					
ANR	106826	Callee	Environment :: getEnv		106711	0					
ANR	106827	Identifier	Environment :: getEnv		106711	0					
ANR	106828	ArgumentList			106711	1					
ANR	106829	Identifier	log		106711	1					
ANR	106830	Argument	WSF_LOG_SI		106711	1					
ANR	106831	Identifier	WSF_LOG_SI		106711	0					
ANR	106832	Argument	"""Size of the array of extra is beinng set to be smaller than the specificed number of minOccurs(0)"""		106711	2					
ANR	106833	PrimaryExpression	"""Size of the array of extra is beinng set to be smaller than the specificed number of minOccurs(0)"""		106711	0					
ANR	106834	ReturnStatement	return AXIS2_FAILURE ;	2917:23:121057:121077	106711	1	True				
ANR	106835	Identifier	AXIS2_FAILURE		106711	0					
ANR	106836	IfStatement	if ( property_Extra == NULL )		106711	6					
ANR	106837	Condition	property_Extra == NULL	2920:19:121118:121139	106711	0	True				
ANR	106838	EqualityExpression	property_Extra == NULL		106711	0		==			
ANR	106839	Identifier	property_Extra		106711	0					
ANR	106840	Identifier	NULL		106711	1					
ANR	106841	CompoundStatement		40:16:1280:1280	106711	1					
ANR	106842	ExpressionStatement	isValidExtra = false	2922:20:121180:121200	106711	0	True				
ANR	106843	AssignmentExpression	isValidExtra = false		106711	0		=			
ANR	106844	Identifier	isValidExtra		106711	0					
ANR	106845	Identifier	false		106711	1					
ANR	106846	ReturnStatement	return true ;	2924:20:121243:121254	106711	1	True				
ANR	106847	Identifier	true		106711	0					
ANR	106848	IdentifierDeclStatement	AviaryCommon :: Attribute * element = ( * property_Extra ) [ i ] ;	2928:17:121377:121432	106711	7	True				
ANR	106849	IdentifierDecl	* element = ( * property_Extra ) [ i ]		106711	0					
ANR	106850	IdentifierDeclType	AviaryCommon :: Attribute *		106711	0					
ANR	106851	Identifier	element		106711	1					
ANR	106852	AssignmentExpression	* element = ( * property_Extra ) [ i ]		106711	2		=			
ANR	106853	Identifier	element		106711	0					
ANR	106854	ArrayIndexing	( * property_Extra ) [ i ]		106711	1					
ANR	106855	UnaryOperationExpression	* property_Extra		106711	0					
ANR	106856	UnaryOperator	*		106711	0					
ANR	106857	Identifier	property_Extra		106711	1					
ANR	106858	Identifier	i		106711	1					
ANR	106859	IfStatement	if ( NULL != element )		106711	8					
ANR	106860	Condition	NULL != element	2929:19:121453:121467	106711	0	True				
ANR	106861	EqualityExpression	NULL != element		106711	0		!=			
ANR	106862	Identifier	NULL		106711	0					
ANR	106863	Identifier	element		106711	1					
ANR	106864	CompoundStatement		49:16:1608:1608	106711	1					
ANR	106865	Statement	delete	2934:24:121569:121574	106711	0	True				
ANR	106866	ExpressionStatement	element	2934:31:121576:121583	106711	1	True				
ANR	106867	Identifier	element		106711	0					
ANR	106868	IfStatement	if ( ! non_nil_exists )		106711	9					
ANR	106869	Condition	! non_nil_exists	2938:23:121667:121681	106711	0	True				
ANR	106870	UnaryOperationExpression	! non_nil_exists		106711	0					
ANR	106871	UnaryOperator	!		106711	0					
ANR	106872	Identifier	non_nil_exists		106711	1					
ANR	106873	CompoundStatement		58:20:1826:1826	106711	1					
ANR	106874	ExpressionStatement	isValidExtra = false	2941:24:121755:121775	106711	0	True				
ANR	106875	AssignmentExpression	isValidExtra = false		106711	0		=			
ANR	106876	Identifier	isValidExtra		106711	0					
ANR	106877	Identifier	false		106711	1					
ANR	106878	ExpressionStatement	( * property_Extra ) [ i ] = NULL	2942:24:121801:121828	106711	1	True				
ANR	106879	AssignmentExpression	( * property_Extra ) [ i ] = NULL		106711	0		=			
ANR	106880	ArrayIndexing	( * property_Extra ) [ i ]		106711	0					
ANR	106881	UnaryOperationExpression	* property_Extra		106711	0					
ANR	106882	UnaryOperator	*		106711	0					
ANR	106883	Identifier	property_Extra		106711	1					
ANR	106884	Identifier	i		106711	1					
ANR	106885	Identifier	NULL		106711	1					
ANR	106886	ReturnStatement	return AXIS2_SUCCESS ;	2943:24:121854:121874	106711	2	True				
ANR	106887	Identifier	AXIS2_SUCCESS		106711	0					
ANR	106888	ExpressionStatement	( * property_Extra ) [ i ] = NULL	2948:16:121949:121976	106711	10	True				
ANR	106889	AssignmentExpression	( * property_Extra ) [ i ] = NULL		106711	0		=			
ANR	106890	ArrayIndexing	( * property_Extra ) [ i ]		106711	0					
ANR	106891	UnaryOperationExpression	* property_Extra		106711	0					
ANR	106892	UnaryOperator	*		106711	0					
ANR	106893	Identifier	property_Extra		106711	1					
ANR	106894	Identifier	i		106711	1					
ANR	106895	Identifier	NULL		106711	1					
ANR	106896	ReturnStatement	return AXIS2_SUCCESS ;	2950:16:122011:122031	106711	11	True				
ANR	106897	Identifier	AXIS2_SUCCESS		106711	0					
ANR	106898	ReturnType	bool WSF_CALL		106711	1					
ANR	106899	Identifier	AviaryJob :: SubmitJob :: setExtraNilAt		106711	2					
ANR	106900	ParameterList	int i		106711	3					
ANR	106901	Parameter	int i	2881:47:119859:119863	106711	0	True				
ANR	106902	ParameterType	int		106711	0					
ANR	106903	Identifier	i		106711	1					
ANR	106904	CFGEntryNode	ENTRY		106711		True				
ANR	106905	CFGExitNode	EXIT		106711		True				
ANR	106906	Symbol	property_Extra		106711						
ANR	106907	Symbol	Environment :: getEnv		106711						
ANR	106908	Symbol	NULL		106711						
ANR	106909	Symbol	false		106711						
ANR	106910	Symbol	i		106711						
ANR	106911	Symbol	j		106711						
ANR	106912	Symbol	k		106711						
ANR	106913	Symbol	Environment :: getEnv ( ) -> log		106711						
ANR	106914	Symbol	AXIS2_FAILURE		106711						
ANR	106915	Symbol	* i		106711						
ANR	106916	Symbol	size		106711						
ANR	106917	Symbol	WSF_LOG_SI		106711						
ANR	106918	Symbol	* Environment :: getEnv		106711						
ANR	106919	Symbol	isValidExtra		106711						
ANR	106920	Symbol	property_Extra -> size		106711						
ANR	106921	Symbol	non_nil_exists		106711						
ANR	106922	Symbol	* * property_Extra		106711						
ANR	106923	Symbol	true		106711						
ANR	106924	Symbol	* property_Extra		106711						
ANR	106925	Symbol	element		106711						
ANR	106926	Symbol	AXIS2_SUCCESS		106711						
ANR	106927	Function	AviaryJob :: SubmitJob :: getProperty8	2959:12:122168:122301							
ANR	106928	FunctionDef	AviaryJob :: SubmitJob :: getProperty8 ()		106927	0					
ANR	106929	CompoundStatement		2961:12:122243:122301	106927	0					
ANR	106930	ReturnStatement	return getAllowOverrides ( ) ;	2962:16:122261:122287	106927	0	True				
ANR	106931	CallExpression	getAllowOverrides ( )		106927	0					
ANR	106932	Callee	getAllowOverrides		106927	0					
ANR	106933	Identifier	getAllowOverrides		106927	0					
ANR	106934	ArgumentList			106927	1					
ANR	106935	ReturnType	bool WSF_CALL		106927	1					
ANR	106936	Identifier	AviaryJob :: SubmitJob :: getProperty8		106927	2					
ANR	106937	ParameterList			106927	3					
ANR	106938	CFGEntryNode	ENTRY		106927		True				
ANR	106939	CFGExitNode	EXIT		106927		True				
ANR	106940	Symbol	getAllowOverrides		106927						
ANR	106941	Function	AviaryJob :: SubmitJob :: getAllowOverrides	2968:12:122390:122534							
ANR	106942	FunctionDef	AviaryJob :: SubmitJob :: getAllowOverrides ()		106941	0					
ANR	106943	CompoundStatement		2970:13:122471:122534	106941	0					
ANR	106944	ReturnStatement	return property_AllowOverrides ;	2971:16:122489:122519	106941	0	True				
ANR	106945	Identifier	property_AllowOverrides		106941	0					
ANR	106946	ReturnType	bool WSF_CALL		106941	1					
ANR	106947	Identifier	AviaryJob :: SubmitJob :: getAllowOverrides		106941	2					
ANR	106948	ParameterList			106941	3					
ANR	106949	CFGEntryNode	ENTRY		106941		True				
ANR	106950	CFGExitNode	EXIT		106941		True				
ANR	106951	Symbol	property_AllowOverrides		106941						
ANR	106952	Function	AviaryJob :: SubmitJob :: setAllowOverrides	2977:12:122622:123253							
ANR	106953	FunctionDef	AviaryJob :: SubmitJob :: setAllowOverrides (bool arg_AllowOverrides)		106952	0					
ANR	106954	CompoundStatement		2980:13:122748:123253	106952	0					
ANR	106955	IfStatement	if ( isValidAllowOverrides && arg_AllowOverrides == property_AllowOverrides )		106952	0					
ANR	106956	Condition	isValidAllowOverrides && arg_AllowOverrides == property_AllowOverrides	2983:19:122787:122880	106952	0	True				
ANR	106957	AndExpression	isValidAllowOverrides && arg_AllowOverrides == property_AllowOverrides		106952	0		&&			
ANR	106958	Identifier	isValidAllowOverrides		106952	0					
ANR	106959	EqualityExpression	arg_AllowOverrides == property_AllowOverrides		106952	1		==			
ANR	106960	Identifier	arg_AllowOverrides		106952	0					
ANR	106961	Identifier	property_AllowOverrides		106952	1					
ANR	106962	CompoundStatement		6:16:150:150	106952	1					
ANR	106963	ReturnStatement	return true ;	2987:20:122942:122953	106952	0	True				
ANR	106964	Identifier	true		106952	0					
ANR	106965	ExpressionStatement	resetAllowOverrides ( )	2993:16:123025:123046	106952	1	True				
ANR	106966	CallExpression	resetAllowOverrides ( )		106952	0					
ANR	106967	Callee	resetAllowOverrides		106952	0					
ANR	106968	Identifier	resetAllowOverrides		106952	0					
ANR	106969	ArgumentList			106952	1					
ANR	106970	ExpressionStatement	property_AllowOverrides = arg_AllowOverrides	2996:24:123090:123134	106952	2	True				
ANR	106971	AssignmentExpression	property_AllowOverrides = arg_AllowOverrides		106952	0		=			
ANR	106972	Identifier	property_AllowOverrides		106952	0					
ANR	106973	Identifier	arg_AllowOverrides		106952	1					
ANR	106974	ExpressionStatement	isValidAllowOverrides = true	2997:24:123160:123188	106952	3	True				
ANR	106975	AssignmentExpression	isValidAllowOverrides = true		106952	0		=			
ANR	106976	Identifier	isValidAllowOverrides		106952	0					
ANR	106977	Identifier	true		106952	1					
ANR	106978	ReturnStatement	return true ;	2999:16:123227:123238	106952	4	True				
ANR	106979	Identifier	true		106952	0					
ANR	106980	ReturnType	bool WSF_CALL		106952	1					
ANR	106981	Identifier	AviaryJob :: SubmitJob :: setAllowOverrides		106952	2					
ANR	106982	ParameterList	bool arg_AllowOverrides		106952	3					
ANR	106983	Parameter	bool arg_AllowOverrides	2979:20:122709:122732	106952	0	True				
ANR	106984	ParameterType	bool		106952	0					
ANR	106985	Identifier	arg_AllowOverrides		106952	1					
ANR	106986	CFGEntryNode	ENTRY		106952		True				
ANR	106987	CFGExitNode	EXIT		106952		True				
ANR	106988	Symbol	property_AllowOverrides		106952						
ANR	106989	Symbol	true		106952						
ANR	106990	Symbol	isValidAllowOverrides		106952						
ANR	106991	Symbol	arg_AllowOverrides		106952						
ANR	106992	Function	AviaryJob :: SubmitJob :: resetAllowOverrides	3007:11:123354:123596							
ANR	106993	FunctionDef	AviaryJob :: SubmitJob :: resetAllowOverrides ()		106992	0					
ANR	106994	CompoundStatement		3009:11:123434:123596	106992	0					
ANR	106995	IdentifierDeclStatement	int i = 0 ;	3010:15:123451:123460	106992	0	True				
ANR	106996	IdentifierDecl	i = 0		106992	0					
ANR	106997	IdentifierDeclType	int		106992	0					
ANR	106998	Identifier	i		106992	1					
ANR	106999	AssignmentExpression	i = 0		106992	2		=			
ANR	107000	Identifier	i		106992	0					
ANR	107001	PrimaryExpression	0		106992	1					
ANR	107002	IdentifierDeclStatement	int count = 0 ;	3011:15:123477:123490	106992	1	True				
ANR	107003	IdentifierDecl	count = 0		106992	0					
ANR	107004	IdentifierDeclType	int		106992	0					
ANR	107005	Identifier	count		106992	1					
ANR	107006	AssignmentExpression	count = 0		106992	2		=			
ANR	107007	Identifier	count		106992	0					
ANR	107008	PrimaryExpression	0		106992	1					
ANR	107009	ExpressionStatement	isValidAllowOverrides = false	3015:15:123525:123554	106992	2	True				
ANR	107010	AssignmentExpression	isValidAllowOverrides = false		106992	0		=			
ANR	107011	Identifier	isValidAllowOverrides		106992	0					
ANR	107012	Identifier	false		106992	1					
ANR	107013	ReturnStatement	return true ;	3016:15:123572:123583	106992	3	True				
ANR	107014	Identifier	true		106992	0					
ANR	107015	ReturnType	bool WSF_CALL		106992	1					
ANR	107016	Identifier	AviaryJob :: SubmitJob :: resetAllowOverrides		106992	2					
ANR	107017	ParameterList			106992	3					
ANR	107018	CFGEntryNode	ENTRY		106992		True				
ANR	107019	CFGExitNode	EXIT		106992		True				
ANR	107020	Symbol	count		106992						
ANR	107021	Symbol	false		106992						
ANR	107022	Symbol	true		106992						
ANR	107023	Symbol	i		106992						
ANR	107024	Symbol	isValidAllowOverrides		106992						
ANR	107025	Function	AviaryJob :: SubmitJob :: isAllowOverridesNil	3022:11:123691:123830							
ANR	107026	FunctionDef	AviaryJob :: SubmitJob :: isAllowOverridesNil ()		107025	0					
ANR	107027	CompoundStatement		3024:11:123771:123830	107025	0					
ANR	107028	ReturnStatement	return ! isValidAllowOverrides ;	3025:15:123788:123817	107025	0	True				
ANR	107029	UnaryOperationExpression	! isValidAllowOverrides		107025	0					
ANR	107030	UnaryOperator	!		107025	0					
ANR	107031	Identifier	isValidAllowOverrides		107025	1					
ANR	107032	ReturnType	bool WSF_CALL		107025	1					
ANR	107033	Identifier	AviaryJob :: SubmitJob :: isAllowOverridesNil		107025	2					
ANR	107034	ParameterList			107025	3					
ANR	107035	CFGEntryNode	ENTRY		107025		True				
ANR	107036	CFGExitNode	EXIT		107025		True				
ANR	107037	Symbol	isValidAllowOverrides		107025						
ANR	107038	Function	AviaryJob :: SubmitJob :: setAllowOverridesNil	3031:11:123945:124084							
ANR	107039	FunctionDef	AviaryJob :: SubmitJob :: setAllowOverridesNil ()		107038	0					
ANR	107040	CompoundStatement		3033:11:124026:124084	107038	0					
ANR	107041	ReturnStatement	return resetAllowOverrides ( ) ;	3034:15:124043:124071	107038	0	True				
ANR	107042	CallExpression	resetAllowOverrides ( )		107038	0					
ANR	107043	Callee	resetAllowOverrides		107038	0					
ANR	107044	Identifier	resetAllowOverrides		107038	0					
ANR	107045	ArgumentList			107038	1					
ANR	107046	ReturnType	bool WSF_CALL		107038	1					
ANR	107047	Identifier	AviaryJob :: SubmitJob :: setAllowOverridesNil		107038	2					
ANR	107048	ParameterList			107038	3					
ANR	107049	CFGEntryNode	ENTRY		107038		True				
ANR	107050	CFGExitNode	EXIT		107038		True				
ANR	107051	Symbol	resetAllowOverrides		107038						
