command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1303949	File	data/converged/CVE-2011-4930_htcondor/executable_scripts.WINDOWS.cpp								
ANR	1303950	DeclStmt									
ANR	1303951	Decl							void	"void ( LPCSTR from , LPCSTR file , LPCSTR params , LPSTR to , DWORD length )"	ExpandArgumentTemplate
ANR	1303952	Function	GetExecutableAndArgumentTemplateByExtention	62:0:2059:6756							
ANR	1303953	FunctionDef	"GetExecutableAndArgumentTemplateByExtention (LPCSTR extension , LPSTR executable , LPSTR arguments)"		1303952	0					
ANR	1303954	CompoundStatement		66:20:2171:6756	1303952	0					
ANR	1303955	IdentifierDeclStatement	DWORD last_error = ERROR_SUCCESS ;	68:1:2175:2211	1303952	0	True				
ANR	1303956	IdentifierDecl	last_error = ERROR_SUCCESS		1303952	0					
ANR	1303957	IdentifierDeclType	DWORD		1303952	0					
ANR	1303958	Identifier	last_error		1303952	1					
ANR	1303959	AssignmentExpression	last_error = ERROR_SUCCESS		1303952	2		=			
ANR	1303960	Identifier	ERROR_SUCCESS		1303952	0					
ANR	1303961	Identifier	ERROR_SUCCESS		1303952	1					
ANR	1303962	IdentifierDeclStatement	"LONG result , length ;"	69:1:2214:2240	1303952	1	True				
ANR	1303963	IdentifierDecl	result		1303952	0					
ANR	1303964	IdentifierDeclType	LONG		1303952	0					
ANR	1303965	Identifier	result		1303952	1					
ANR	1303966	IdentifierDecl	length		1303952	1					
ANR	1303967	IdentifierDeclType	LONG		1303952	0					
ANR	1303968	Identifier	length		1303952	1					
ANR	1303969	IdentifierDeclStatement	"CHAR value [ MAX_PATH + 1 ] , key [ MAX_PATH + 1 ] , name [ MAX_PATH + 1 ] , uppercase [ MAX_PATH + 1 ] , default_verb [ ] = ""Open"" ;"	71:4:2246:2423	1303952	2	True				
ANR	1303970	IdentifierDecl	value [ MAX_PATH + 1 ]		1303952	0					
ANR	1303971	IdentifierDeclType	CHAR [ MAX_PATH + 1 ]		1303952	0					
ANR	1303972	Identifier	value		1303952	1					
ANR	1303973	AdditiveExpression	MAX_PATH + 1		1303952	2		+			
ANR	1303974	Identifier	MAX_PATH		1303952	0					
ANR	1303975	PrimaryExpression	1		1303952	1					
ANR	1303976	IdentifierDecl	key [ MAX_PATH + 1 ]		1303952	1					
ANR	1303977	IdentifierDeclType	CHAR [ MAX_PATH + 1 ]		1303952	0					
ANR	1303978	Identifier	key		1303952	1					
ANR	1303979	AdditiveExpression	MAX_PATH + 1		1303952	2		+			
ANR	1303980	Identifier	MAX_PATH		1303952	0					
ANR	1303981	PrimaryExpression	1		1303952	1					
ANR	1303982	IdentifierDecl	name [ MAX_PATH + 1 ]		1303952	2					
ANR	1303983	IdentifierDeclType	CHAR [ MAX_PATH + 1 ]		1303952	0					
ANR	1303984	Identifier	name		1303952	1					
ANR	1303985	AdditiveExpression	MAX_PATH + 1		1303952	2		+			
ANR	1303986	Identifier	MAX_PATH		1303952	0					
ANR	1303987	PrimaryExpression	1		1303952	1					
ANR	1303988	IdentifierDecl	uppercase [ MAX_PATH + 1 ]		1303952	3					
ANR	1303989	IdentifierDeclType	CHAR [ MAX_PATH + 1 ]		1303952	0					
ANR	1303990	Identifier	uppercase		1303952	1					
ANR	1303991	AdditiveExpression	MAX_PATH + 1		1303952	2		+			
ANR	1303992	Identifier	MAX_PATH		1303952	0					
ANR	1303993	PrimaryExpression	1		1303952	1					
ANR	1303994	IdentifierDecl	"default_verb [ ] = ""Open"""		1303952	4					
ANR	1303995	IdentifierDeclType	CHAR [ ]		1303952	0					
ANR	1303996	Identifier	default_verb		1303952	1					
ANR	1303997	AssignmentExpression	"default_verb [ ] = ""Open"""		1303952	2		=			
ANR	1303998	Identifier	default_verb		1303952	0					
ANR	1303999	PrimaryExpression	"""Open"""		1303952	1					
ANR	1304000	IdentifierDeclStatement	LPSTR verb = NULL ;	76:4:2429:2471	1303952	3	True				
ANR	1304001	IdentifierDecl	verb = NULL		1303952	0					
ANR	1304002	IdentifierDeclType	LPSTR		1303952	0					
ANR	1304003	Identifier	verb		1303952	1					
ANR	1304004	AssignmentExpression	verb = NULL		1303952	2		=			
ANR	1304005	Identifier	NULL		1303952	0					
ANR	1304006	Identifier	NULL		1303952	1					
ANR	1304007	IdentifierDeclStatement	HANDLE found = INVALID_HANDLE_VALUE ;	77:1:2474:2514	1303952	4	True				
ANR	1304008	IdentifierDecl	found = INVALID_HANDLE_VALUE		1303952	0					
ANR	1304009	IdentifierDeclType	HANDLE		1303952	0					
ANR	1304010	Identifier	found		1303952	1					
ANR	1304011	AssignmentExpression	found = INVALID_HANDLE_VALUE		1303952	2		=			
ANR	1304012	Identifier	INVALID_HANDLE_VALUE		1303952	0					
ANR	1304013	Identifier	INVALID_HANDLE_VALUE		1303952	1					
ANR	1304014	IdentifierDeclStatement	WIN32_FIND_DATA find_data ;	78:1:2517:2542	1303952	5	True				
ANR	1304015	IdentifierDecl	find_data		1303952	0					
ANR	1304016	IdentifierDeclType	WIN32_FIND_DATA		1303952	0					
ANR	1304017	Identifier	find_data		1303952	1					
ANR	1304018	IdentifierDeclStatement	"LPSTR tmp , start = NULL ;"	79:1:2545:2579	1303952	6	True				
ANR	1304019	IdentifierDecl	tmp		1303952	0					
ANR	1304020	IdentifierDeclType	LPSTR		1303952	0					
ANR	1304021	Identifier	tmp		1303952	1					
ANR	1304022	IdentifierDecl	start = NULL		1303952	1					
ANR	1304023	IdentifierDeclType	LPSTR		1303952	0					
ANR	1304024	Identifier	start		1303952	1					
ANR	1304025	AssignmentExpression	start = NULL		1303952	2		=			
ANR	1304026	Identifier	NULL		1303952	0					
ANR	1304027	Identifier	NULL		1303952	1					
ANR	1304028	IdentifierDeclStatement	"BOOL quoted = FALSE , expanded = FALSE , ok = FALSE ;"	81:1:2587:2657	1303952	7	True				
ANR	1304029	IdentifierDecl	quoted = FALSE		1303952	0					
ANR	1304030	IdentifierDeclType	BOOL		1303952	0					
ANR	1304031	Identifier	quoted		1303952	1					
ANR	1304032	AssignmentExpression	quoted = FALSE		1303952	2		=			
ANR	1304033	Identifier	FALSE		1303952	0					
ANR	1304034	Identifier	FALSE		1303952	1					
ANR	1304035	IdentifierDecl	expanded = FALSE		1303952	1					
ANR	1304036	IdentifierDeclType	BOOL		1303952	0					
ANR	1304037	Identifier	expanded		1303952	1					
ANR	1304038	AssignmentExpression	expanded = FALSE		1303952	2		=			
ANR	1304039	Identifier	FALSE		1303952	0					
ANR	1304040	Identifier	FALSE		1303952	1					
ANR	1304041	IdentifierDecl	ok = FALSE		1303952	2					
ANR	1304042	IdentifierDeclType	BOOL		1303952	0					
ANR	1304043	Identifier	ok		1303952	1					
ANR	1304044	AssignmentExpression	ok = FALSE		1303952	2		=			
ANR	1304045	Identifier	FALSE		1303952	0					
ANR	1304046	Identifier	FALSE		1303952	1					
ANR	1304047	Statement	__try	85:1:2661:2665	1303952	8	True				
ANR	1304048	CompoundStatement		20:7:495:495	1303952	9					
ANR	1304049	ExpressionStatement	executable [ 0 ] = '\\0'	89:8:2788:2808	1303952	0	True				
ANR	1304050	AssignmentExpression	executable [ 0 ] = '\\0'		1303952	0		=			
ANR	1304051	ArrayIndexing	executable [ 0 ]		1303952	0					
ANR	1304052	Identifier	executable		1303952	0					
ANR	1304053	PrimaryExpression	0		1303952	1					
ANR	1304054	PrimaryExpression	'\\0'		1303952	1					
ANR	1304055	IfStatement	if ( arguments )		1303952	1					
ANR	1304056	Condition	arguments	90:13:2823:2831	1303952	0	True				
ANR	1304057	Identifier	arguments		1303952	0					
ANR	1304058	CompoundStatement		25:25:663:663	1303952	1					
ANR	1304059	ExpressionStatement	arguments [ 0 ] = '\\0'	91:12:2849:2868	1303952	0	True				
ANR	1304060	AssignmentExpression	arguments [ 0 ] = '\\0'		1303952	0		=			
ANR	1304061	ArrayIndexing	arguments [ 0 ]		1303952	0					
ANR	1304062	Identifier	arguments		1303952	0					
ANR	1304063	PrimaryExpression	0		1303952	1					
ANR	1304064	PrimaryExpression	'\\0'		1303952	1					
ANR	1304065	ExpressionStatement	length = MAX_PATH	95:2:2949:2966	1303952	2	True				
ANR	1304066	AssignmentExpression	length = MAX_PATH		1303952	0		=			
ANR	1304067	Identifier	length		1303952	0					
ANR	1304068	Identifier	MAX_PATH		1303952	1					
ANR	1304069	ExpressionStatement	"result = RegQueryValue ( HKEY_CLASSES_ROOT , extension , ( LPSTR ) value , & length )"	96:2:2970:3062	1303952	3	True				
ANR	1304070	AssignmentExpression	"result = RegQueryValue ( HKEY_CLASSES_ROOT , extension , ( LPSTR ) value , & length )"		1303952	0		=			
ANR	1304071	Identifier	result		1303952	0					
ANR	1304072	CallExpression	"RegQueryValue ( HKEY_CLASSES_ROOT , extension , ( LPSTR ) value , & length )"		1303952	1					
ANR	1304073	Callee	RegQueryValue		1303952	0					
ANR	1304074	Identifier	RegQueryValue		1303952	0					
ANR	1304075	ArgumentList	HKEY_CLASSES_ROOT		1303952	1					
ANR	1304076	Argument	HKEY_CLASSES_ROOT		1303952	0					
ANR	1304077	Identifier	HKEY_CLASSES_ROOT		1303952	0					
ANR	1304078	Argument	extension		1303952	1					
ANR	1304079	Identifier	extension		1303952	0					
ANR	1304080	Argument	( LPSTR ) value		1303952	2					
ANR	1304081	CastExpression	( LPSTR ) value		1303952	0					
ANR	1304082	CastTarget	LPSTR		1303952	0					
ANR	1304083	Identifier	value		1303952	1					
ANR	1304084	Argument	& length		1303952	3					
ANR	1304085	UnaryOperationExpression	& length		1303952	0					
ANR	1304086	UnaryOperator	&		1303952	0					
ANR	1304087	Identifier	length		1303952	1					
ANR	1304088	IfStatement	if ( ERROR_SUCCESS != result )		1303952	4					
ANR	1304089	Condition	ERROR_SUCCESS != result	102:7:3072:3094	1303952	0	True				
ANR	1304090	EqualityExpression	ERROR_SUCCESS != result		1303952	0		!=			
ANR	1304091	Identifier	ERROR_SUCCESS		1303952	0					
ANR	1304092	Identifier	result		1303952	1					
ANR	1304093	CompoundStatement		37:33:926:926	1303952	1					
ANR	1304094	ExpressionStatement	last_error = result	104:3:3104:3123	1303952	0	True				
ANR	1304095	AssignmentExpression	last_error = result		1303952	0		=			
ANR	1304096	Identifier	last_error		1303952	0					
ANR	1304097	Identifier	result		1303952	1					
ANR	1304098	Statement	dprintf	106:3:3129:3135	1303952	1	True				
ANR	1304099	Statement	(	106:11:3137:3137	1303952	2	True				
ANR	1304100	Statement	D_ALWAYS	107:16:3155:3162	1303952	3	True				
ANR	1304101	Statement	","	107:24:3163:3163	1303952	4	True				
ANR	1304102	Statement	"""GetExecutableAndArgumentsByExtention: failed to find """	108:4:3169:3223	1303952	5	True				
ANR	1304103	Statement	"""extension *%s in the registry (last-error = %d).\\n"""	109:4:3229:3280	1303952	6	True				
ANR	1304104	Statement	","	109:56:3281:3281	1303952	7	True				
ANR	1304105	Statement	extension	110:4:3287:3295	1303952	8	True				
ANR	1304106	Statement	","	110:13:3296:3296	1303952	9	True				
ANR	1304107	Statement	last_error	111:4:3303:3312	1303952	10	True				
ANR	1304108	Statement	)	111:15:3314:3314	1303952	11	True				
ANR	1304109	ExpressionStatement		111:16:3315:3315	1303952	12	True				
ANR	1304110	ExpressionStatement	__leave	113:3:3321:3328	1303952	13	True				
ANR	1304111	Identifier	__leave		1303952	0					
ANR	1304112	ExpressionStatement	"strcpy ( uppercase , extension + 1 )"	121:8:3568:3628	1303952	5	True				
ANR	1304113	CallExpression	"strcpy ( uppercase , extension + 1 )"		1303952	0					
ANR	1304114	Callee	strcpy		1303952	0					
ANR	1304115	Identifier	strcpy		1303952	0					
ANR	1304116	ArgumentList	uppercase		1303952	1					
ANR	1304117	Argument	uppercase		1303952	0					
ANR	1304118	Identifier	uppercase		1303952	0					
ANR	1304119	Argument	extension + 1		1303952	1					
ANR	1304120	AdditiveExpression	extension + 1		1303952	0		+			
ANR	1304121	Identifier	extension		1303952	0					
ANR	1304122	PrimaryExpression	1		1303952	1					
ANR	1304123	ExpressionStatement	"sprintf ( name , ""OPEN_VERB_FOR_%s_FILES"" , strupr ( uppercase ) )"	125:8:3639:3742	1303952	6	True				
ANR	1304124	CallExpression	"sprintf ( name , ""OPEN_VERB_FOR_%s_FILES"" , strupr ( uppercase ) )"		1303952	0					
ANR	1304125	Callee	sprintf		1303952	0					
ANR	1304126	Identifier	sprintf		1303952	0					
ANR	1304127	ArgumentList	name		1303952	1					
ANR	1304128	Argument	name		1303952	0					
ANR	1304129	Identifier	name		1303952	0					
ANR	1304130	Argument	"""OPEN_VERB_FOR_%s_FILES"""		1303952	1					
ANR	1304131	PrimaryExpression	"""OPEN_VERB_FOR_%s_FILES"""		1303952	0					
ANR	1304132	Argument	strupr ( uppercase )		1303952	2					
ANR	1304133	CallExpression	strupr ( uppercase )		1303952	0					
ANR	1304134	Callee	strupr		1303952	0					
ANR	1304135	Identifier	strupr		1303952	0					
ANR	1304136	ArgumentList	uppercase		1303952	1					
ANR	1304137	Argument	uppercase		1303952	0					
ANR	1304138	Identifier	uppercase		1303952	0					
ANR	1304139	ExpressionStatement	verb = param ( name )	130:8:3753:3774	1303952	7	True				
ANR	1304140	AssignmentExpression	verb = param ( name )		1303952	0		=			
ANR	1304141	Identifier	verb		1303952	0					
ANR	1304142	CallExpression	param ( name )		1303952	1					
ANR	1304143	Callee	param		1303952	0					
ANR	1304144	Identifier	param		1303952	0					
ANR	1304145	ArgumentList	name		1303952	1					
ANR	1304146	Argument	name		1303952	0					
ANR	1304147	Identifier	name		1303952	0					
ANR	1304148	ExpressionStatement	"sprintf ( key , ""%s\\\\Shell\\\\%s\\\\Command"" , value , verb ? verb : default_verb )"	132:8:3785:3913	1303952	8	True				
ANR	1304149	CallExpression	"sprintf ( key , ""%s\\\\Shell\\\\%s\\\\Command"" , value , verb ? verb : default_verb )"		1303952	0					
ANR	1304150	Callee	sprintf		1303952	0					
ANR	1304151	Identifier	sprintf		1303952	0					
ANR	1304152	ArgumentList	key		1303952	1					
ANR	1304153	Argument	key		1303952	0					
ANR	1304154	Identifier	key		1303952	0					
ANR	1304155	Argument	"""%s\\\\Shell\\\\%s\\\\Command"""		1303952	1					
ANR	1304156	PrimaryExpression	"""%s\\\\Shell\\\\%s\\\\Command"""		1303952	0					
ANR	1304157	Argument	value		1303952	2					
ANR	1304158	Identifier	value		1303952	0					
ANR	1304159	Argument	verb ? verb : default_verb		1303952	3					
ANR	1304160	ConditionalExpression	verb ? verb : default_verb		1303952	0					
ANR	1304161	Condition	verb		1303952	0					
ANR	1304162	Identifier	verb		1303952	0					
ANR	1304163	Identifier	verb		1303952	1					
ANR	1304164	Identifier	default_verb		1303952	2					
ANR	1304165	IfStatement	if ( verb )		1303952	9					
ANR	1304166	Condition	verb	138:13:3929:3932	1303952	0	True				
ANR	1304167	Identifier	verb		1303952	0					
ANR	1304168	CompoundStatement		73:20:1764:1764	1303952	1					
ANR	1304169	ExpressionStatement	free ( verb )	139:12:3950:3963	1303952	0	True				
ANR	1304170	CallExpression	free ( verb )		1303952	0					
ANR	1304171	Callee	free		1303952	0					
ANR	1304172	Identifier	free		1303952	0					
ANR	1304173	ArgumentList	verb		1303952	1					
ANR	1304174	Argument	verb		1303952	0					
ANR	1304175	Identifier	verb		1303952	0					
ANR	1304176	ExpressionStatement	length = MAX_PATH	142:8:3984:4001	1303952	10	True				
ANR	1304177	AssignmentExpression	length = MAX_PATH		1303952	0		=			
ANR	1304178	Identifier	length		1303952	0					
ANR	1304179	Identifier	MAX_PATH		1303952	1					
ANR	1304180	ExpressionStatement	"result = RegQueryValue ( HKEY_CLASSES_ROOT , key , ( LPSTR ) value , & length )"	143:5:4008:4106	1303952	11	True				
ANR	1304181	AssignmentExpression	"result = RegQueryValue ( HKEY_CLASSES_ROOT , key , ( LPSTR ) value , & length )"		1303952	0		=			
ANR	1304182	Identifier	result		1303952	0					
ANR	1304183	CallExpression	"RegQueryValue ( HKEY_CLASSES_ROOT , key , ( LPSTR ) value , & length )"		1303952	1					
ANR	1304184	Callee	RegQueryValue		1303952	0					
ANR	1304185	Identifier	RegQueryValue		1303952	0					
ANR	1304186	ArgumentList	HKEY_CLASSES_ROOT		1303952	1					
ANR	1304187	Argument	HKEY_CLASSES_ROOT		1303952	0					
ANR	1304188	Identifier	HKEY_CLASSES_ROOT		1303952	0					
ANR	1304189	Argument	key		1303952	1					
ANR	1304190	Identifier	key		1303952	0					
ANR	1304191	Argument	( LPSTR ) value		1303952	2					
ANR	1304192	CastExpression	( LPSTR ) value		1303952	0					
ANR	1304193	CastTarget	LPSTR		1303952	0					
ANR	1304194	Identifier	value		1303952	1					
ANR	1304195	Argument	& length		1303952	3					
ANR	1304196	UnaryOperationExpression	& length		1303952	0					
ANR	1304197	UnaryOperator	&		1303952	0					
ANR	1304198	Identifier	length		1303952	1					
ANR	1304199	IfStatement	if ( ERROR_SUCCESS != result )		1303952	12					
ANR	1304200	Condition	ERROR_SUCCESS != result	149:13:4122:4144	1303952	0	True				
ANR	1304201	EqualityExpression	ERROR_SUCCESS != result		1303952	0		!=			
ANR	1304202	Identifier	ERROR_SUCCESS		1303952	0					
ANR	1304203	Identifier	result		1303952	1					
ANR	1304204	CompoundStatement		84:39:1976:1976	1303952	1					
ANR	1304205	ExpressionStatement	last_error = result	151:3:4154:4173	1303952	0	True				
ANR	1304206	AssignmentExpression	last_error = result		1303952	0		=			
ANR	1304207	Identifier	last_error		1303952	0					
ANR	1304208	Identifier	result		1303952	1					
ANR	1304209	Statement	dprintf	153:3:4179:4185	1303952	1	True				
ANR	1304210	Statement	(	153:11:4187:4187	1303952	2	True				
ANR	1304211	Statement	D_ALWAYS	154:16:4205:4212	1303952	3	True				
ANR	1304212	Statement	","	154:24:4213:4213	1303952	4	True				
ANR	1304213	Statement	"""GetExecutableAndArgumentsByExtention: failed to """	155:4:4219:4268	1303952	5	True				
ANR	1304214	Statement	"""find a suitable handler for files with extension """	156:4:4274:4324	1303952	6	True				
ANR	1304215	Statement	"""'*%s'. (last-error = %d)\\n"""	157:4:4330:4357	1303952	7	True				
ANR	1304216	Statement	","	157:32:4358:4358	1303952	8	True				
ANR	1304217	Statement	extension	158:4:4364:4372	1303952	9	True				
ANR	1304218	Statement	","	158:13:4373:4373	1303952	10	True				
ANR	1304219	Statement	last_error	159:4:4380:4389	1303952	11	True				
ANR	1304220	Statement	)	159:15:4391:4391	1303952	12	True				
ANR	1304221	ExpressionStatement		159:16:4392:4392	1303952	13	True				
ANR	1304222	ExpressionStatement	__leave	161:3:4398:4405	1303952	14	True				
ANR	1304223	Identifier	__leave		1303952	0					
ANR	1304224	ExpressionStatement	tmp = ( LPSTR ) value	167:2:4508:4527	1303952	13	True				
ANR	1304225	AssignmentExpression	tmp = ( LPSTR ) value		1303952	0		=			
ANR	1304226	Identifier	tmp		1303952	0					
ANR	1304227	CastExpression	( LPSTR ) value		1303952	1					
ANR	1304228	CastTarget	LPSTR		1303952	0					
ANR	1304229	Identifier	value		1303952	1					
ANR	1304230	WhileStatement	while ( * tmp && iswspace ( * tmp ) )		1303952	14					
ANR	1304231	Condition	* tmp && iswspace ( * tmp )	170:16:4575:4599	1303952	0	True				
ANR	1304232	AndExpression	* tmp && iswspace ( * tmp )		1303952	0		&&			
ANR	1304233	UnaryOperationExpression	* tmp		1303952	0					
ANR	1304234	UnaryOperator	*		1303952	0					
ANR	1304235	Identifier	tmp		1303952	1					
ANR	1304236	CallExpression	iswspace ( * tmp )		1303952	1					
ANR	1304237	Callee	iswspace		1303952	0					
ANR	1304238	Identifier	iswspace		1303952	0					
ANR	1304239	ArgumentList	* tmp		1303952	1					
ANR	1304240	Argument	* tmp		1303952	0					
ANR	1304241	UnaryOperationExpression	* tmp		1303952	0					
ANR	1304242	UnaryOperator	*		1303952	0					
ANR	1304243	Identifier	tmp		1303952	1					
ANR	1304244	CompoundStatement		105:44:2431:2431	1303952	1					
ANR	1304245	ExpressionStatement	tmp ++	171:12:4617:4622	1303952	0	True				
ANR	1304246	PostIncDecOperationExpression	tmp ++		1303952	0					
ANR	1304247	Identifier	tmp		1303952	0					
ANR	1304248	IncDec	++		1303952	1					
ANR	1304249	ExpressionStatement	start = tmp	175:2:4700:4711	1303952	15	True				
ANR	1304250	AssignmentExpression	start = tmp		1303952	0		=			
ANR	1304251	Identifier	start		1303952	0					
ANR	1304252	Identifier	tmp		1303952	1					
ANR	1304253	ExpressionStatement	"quoted = ( '""' == * start )"	180:2:4869:4895	1303952	16	True				
ANR	1304254	AssignmentExpression	"quoted = ( '""' == * start )"		1303952	0		=			
ANR	1304255	Identifier	quoted		1303952	0					
ANR	1304256	EqualityExpression	"'""' == * start"		1303952	1		==			
ANR	1304257	PrimaryExpression	"'""'"		1303952	0					
ANR	1304258	UnaryOperationExpression	* start		1303952	1					
ANR	1304259	UnaryOperator	*		1303952	0					
ANR	1304260	Identifier	start		1303952	1					
ANR	1304261	IfStatement	if ( quoted )		1303952	17					
ANR	1304262	Condition	quoted	184:7:5023:5028	1303952	0	True				
ANR	1304263	Identifier	quoted		1303952	0					
ANR	1304264	CompoundStatement		119:16:2860:2860	1303952	1					
ANR	1304265	ExpressionStatement	start = ++ tmp	188:3:5155:5168	1303952	0	True				
ANR	1304266	AssignmentExpression	start = ++ tmp		1303952	0		=			
ANR	1304267	Identifier	start		1303952	0					
ANR	1304268	UnaryExpression	++ tmp		1303952	1					
ANR	1304269	IncDec	++		1303952	0					
ANR	1304270	Identifier	tmp		1303952	1					
ANR	1304271	WhileStatement	"while ( * tmp && ( '""' != * tmp ) )"		1303952	1					
ANR	1304272	Condition	"* tmp && ( '""' != * tmp )"	189:11:5181:5203	1303952	0	True				
ANR	1304273	AndExpression	"* tmp && ( '""' != * tmp )"		1303952	0		&&			
ANR	1304274	UnaryOperationExpression	* tmp		1303952	0					
ANR	1304275	UnaryOperator	*		1303952	0					
ANR	1304276	Identifier	tmp		1303952	1					
ANR	1304277	EqualityExpression	"'""' != * tmp"		1303952	1		!=			
ANR	1304278	PrimaryExpression	"'""'"		1303952	0					
ANR	1304279	UnaryOperationExpression	* tmp		1303952	1					
ANR	1304280	UnaryOperator	*		1303952	0					
ANR	1304281	Identifier	tmp		1303952	1					
ANR	1304282	CompoundStatement		124:37:3035:3035	1303952	1					
ANR	1304283	ExpressionStatement	tmp ++	190:4:5213:5218	1303952	0	True				
ANR	1304284	PostIncDecOperationExpression	tmp ++		1303952	0					
ANR	1304285	Identifier	tmp		1303952	0					
ANR	1304286	IncDec	++		1303952	1					
ANR	1304287	ElseStatement	else		1303952	0					
ANR	1304288	CompoundStatement		128:15:3072:3072	1303952	0					
ANR	1304289	ExpressionStatement	start = tmp	195:3:5250:5261	1303952	0	True				
ANR	1304290	AssignmentExpression	start = tmp		1303952	0		=			
ANR	1304291	Identifier	start		1303952	0					
ANR	1304292	Identifier	tmp		1303952	1					
ANR	1304293	WhileStatement	while ( * tmp && ! iswspace ( * tmp ) )		1303952	1					
ANR	1304294	Condition	* tmp && ! iswspace ( * tmp )	196:20:5283:5308	1303952	0	True				
ANR	1304295	AndExpression	* tmp && ! iswspace ( * tmp )		1303952	0		&&			
ANR	1304296	UnaryOperationExpression	* tmp		1303952	0					
ANR	1304297	UnaryOperator	*		1303952	0					
ANR	1304298	Identifier	tmp		1303952	1					
ANR	1304299	UnaryOperationExpression	! iswspace ( * tmp )		1303952	1					
ANR	1304300	UnaryOperator	!		1303952	0					
ANR	1304301	CallExpression	iswspace ( * tmp )		1303952	1					
ANR	1304302	Callee	iswspace		1303952	0					
ANR	1304303	Identifier	iswspace		1303952	0					
ANR	1304304	ArgumentList	* tmp		1303952	1					
ANR	1304305	Argument	* tmp		1303952	0					
ANR	1304306	UnaryOperationExpression	* tmp		1303952	0					
ANR	1304307	UnaryOperator	*		1303952	0					
ANR	1304308	Identifier	tmp		1303952	1					
ANR	1304309	CompoundStatement		131:49:3140:3140	1303952	1					
ANR	1304310	ExpressionStatement	tmp ++	197:16:5330:5335	1303952	0	True				
ANR	1304311	PostIncDecOperationExpression	tmp ++		1303952	0					
ANR	1304312	Identifier	tmp		1303952	0					
ANR	1304313	IncDec	++		1303952	1					
ANR	1304314	ExpressionStatement	* tmp = '\\0'	204:2:5473:5484	1303952	18	True				
ANR	1304315	AssignmentExpression	* tmp = '\\0'		1303952	0		=			
ANR	1304316	UnaryOperationExpression	* tmp		1303952	0					
ANR	1304317	UnaryOperator	*		1303952	0					
ANR	1304318	Identifier	tmp		1303952	1					
ANR	1304319	PrimaryExpression	'\\0'		1303952	1					
ANR	1304320	ExpressionStatement	"found = FindFirstFile ( start , & find_data )"	207:2:5539:5589	1303952	19	True				
ANR	1304321	AssignmentExpression	"found = FindFirstFile ( start , & find_data )"		1303952	0		=			
ANR	1304322	Identifier	found		1303952	0					
ANR	1304323	CallExpression	"FindFirstFile ( start , & find_data )"		1303952	1					
ANR	1304324	Callee	FindFirstFile		1303952	0					
ANR	1304325	Identifier	FindFirstFile		1303952	0					
ANR	1304326	ArgumentList	start		1303952	1					
ANR	1304327	Argument	start		1303952	0					
ANR	1304328	Identifier	start		1303952	0					
ANR	1304329	Argument	& find_data		1303952	1					
ANR	1304330	UnaryOperationExpression	& find_data		1303952	0					
ANR	1304331	UnaryOperator	&		1303952	0					
ANR	1304332	Identifier	find_data		1303952	1					
ANR	1304333	IfStatement	if ( INVALID_HANDLE_VALUE == found )		1303952	20					
ANR	1304334	Condition	INVALID_HANDLE_VALUE == found	211:7:5599:5627	1303952	0	True				
ANR	1304335	EqualityExpression	INVALID_HANDLE_VALUE == found		1303952	0		==			
ANR	1304336	Identifier	INVALID_HANDLE_VALUE		1303952	0					
ANR	1304337	Identifier	found		1303952	1					
ANR	1304338	CompoundStatement		146:39:3459:3459	1303952	1					
ANR	1304339	ExpressionStatement	last_error = GetLastError ( )	213:3:5637:5665	1303952	0	True				
ANR	1304340	AssignmentExpression	last_error = GetLastError ( )		1303952	0		=			
ANR	1304341	Identifier	last_error		1303952	0					
ANR	1304342	CallExpression	GetLastError ( )		1303952	1					
ANR	1304343	Callee	GetLastError		1303952	0					
ANR	1304344	Identifier	GetLastError		1303952	0					
ANR	1304345	ArgumentList			1303952	1					
ANR	1304346	Statement	dprintf	215:3:5671:5677	1303952	1	True				
ANR	1304347	Statement	(	215:11:5679:5679	1303952	2	True				
ANR	1304348	Statement	D_ALWAYS	216:16:5697:5704	1303952	3	True				
ANR	1304349	Statement	","	216:24:5705:5705	1303952	4	True				
ANR	1304350	Statement	"""GetExecutableAndArgumentsByExtention: failed to """	217:4:5711:5760	1303952	5	True				
ANR	1304351	Statement	"""locate the executable, %s, to handle files """	218:16:5778:5822	1303952	6	True				
ANR	1304352	Statement	"""with extension '*%s'. (last-error = %d)\\n"""	219:16:5840:5882	1303952	7	True				
ANR	1304353	Statement	","	219:59:5883:5883	1303952	8	True				
ANR	1304354	Statement	start	220:4:5889:5893	1303952	9	True				
ANR	1304355	Statement	","	220:9:5894:5894	1303952	10	True				
ANR	1304356	Statement	extension	221:4:5901:5909	1303952	11	True				
ANR	1304357	Statement	","	221:13:5910:5910	1303952	12	True				
ANR	1304358	Statement	last_error	222:4:5917:5926	1303952	13	True				
ANR	1304359	Statement	)	222:15:5928:5928	1303952	14	True				
ANR	1304360	ExpressionStatement		222:16:5929:5929	1303952	15	True				
ANR	1304361	ExpressionStatement	__leave	224:3:5935:5942	1303952	16	True				
ANR	1304362	Identifier	__leave		1303952	0					
ANR	1304363	ExpressionStatement	FindClose ( found )	229:2:5993:6012	1303952	21	True				
ANR	1304364	CallExpression	FindClose ( found )		1303952	0					
ANR	1304365	Callee	FindClose		1303952	0					
ANR	1304366	Identifier	FindClose		1303952	0					
ANR	1304367	ArgumentList	found		1303952	1					
ANR	1304368	Argument	found		1303952	0					
ANR	1304369	Identifier	found		1303952	0					
ANR	1304370	ExpressionStatement	"strcpy ( executable , start )"	232:2:6061:6089	1303952	22	True				
ANR	1304371	CallExpression	"strcpy ( executable , start )"		1303952	0					
ANR	1304372	Callee	strcpy		1303952	0					
ANR	1304373	Identifier	strcpy		1303952	0					
ANR	1304374	ArgumentList	executable		1303952	1					
ANR	1304375	Argument	executable		1303952	0					
ANR	1304376	Identifier	executable		1303952	0					
ANR	1304377	Argument	start		1303952	1					
ANR	1304378	Identifier	start		1303952	0					
ANR	1304379	ExpressionStatement	start = ++ tmp	236:2:6209:6222	1303952	23	True				
ANR	1304380	AssignmentExpression	start = ++ tmp		1303952	0		=			
ANR	1304381	Identifier	start		1303952	0					
ANR	1304382	UnaryExpression	++ tmp		1303952	1					
ANR	1304383	IncDec	++		1303952	0					
ANR	1304384	Identifier	tmp		1303952	1					
ANR	1304385	IfStatement	if ( arguments && value - start < length - 1 )		1303952	24					
ANR	1304386	Condition	arguments && value - start < length - 1	237:7:6231:6269	1303952	0	True				
ANR	1304387	AndExpression	arguments && value - start < length - 1		1303952	0		&&			
ANR	1304388	Identifier	arguments		1303952	0					
ANR	1304389	RelationalExpression	value - start < length - 1		1303952	1		<			
ANR	1304390	AdditiveExpression	value - start		1303952	0		-			
ANR	1304391	Identifier	value		1303952	0					
ANR	1304392	Identifier	start		1303952	1					
ANR	1304393	AdditiveExpression	length - 1		1303952	1		-			
ANR	1304394	Identifier	length		1303952	0					
ANR	1304395	PrimaryExpression	1		1303952	1					
ANR	1304396	CompoundStatement		172:49:4101:4101	1303952	1					
ANR	1304397	WhileStatement	while ( * start && iswspace ( * start ) )		1303952	0					
ANR	1304398	Condition	* start && iswspace ( * start )	241:20:6387:6415	1303952	0	True				
ANR	1304399	AndExpression	* start && iswspace ( * start )		1303952	0		&&			
ANR	1304400	UnaryOperationExpression	* start		1303952	0					
ANR	1304401	UnaryOperator	*		1303952	0					
ANR	1304402	Identifier	start		1303952	1					
ANR	1304403	CallExpression	iswspace ( * start )		1303952	1					
ANR	1304404	Callee	iswspace		1303952	0					
ANR	1304405	Identifier	iswspace		1303952	0					
ANR	1304406	ArgumentList	* start		1303952	1					
ANR	1304407	Argument	* start		1303952	0					
ANR	1304408	UnaryOperationExpression	* start		1303952	0					
ANR	1304409	UnaryOperator	*		1303952	0					
ANR	1304410	Identifier	start		1303952	1					
ANR	1304411	CompoundStatement		176:52:4247:4247	1303952	1					
ANR	1304412	ExpressionStatement	start ++	242:16:6437:6444	1303952	0	True				
ANR	1304413	PostIncDecOperationExpression	start ++		1303952	0					
ANR	1304414	Identifier	start		1303952	0					
ANR	1304415	IncDec	++		1303952	1					
ANR	1304416	ExpressionStatement	"strcpy ( arguments , start )"	246:12:6511:6538	1303952	1	True				
ANR	1304417	CallExpression	"strcpy ( arguments , start )"		1303952	0					
ANR	1304418	Callee	strcpy		1303952	0					
ANR	1304419	Identifier	strcpy		1303952	0					
ANR	1304420	ArgumentList	arguments		1303952	1					
ANR	1304421	Argument	arguments		1303952	0					
ANR	1304422	Identifier	arguments		1303952	0					
ANR	1304423	Argument	start		1303952	1					
ANR	1304424	Identifier	start		1303952	0					
ANR	1304425	ExpressionStatement	ok = TRUE	251:2:6608:6617	1303952	25	True				
ANR	1304426	AssignmentExpression	ok = TRUE		1303952	0		=			
ANR	1304427	Identifier	ok		1303952	0					
ANR	1304428	Identifier	TRUE		1303952	1					
ANR	1304429	Statement	__finally	254:1:6624:6632	1303952	10	True				
ANR	1304430	CompoundStatement		189:11:4462:4462	1303952	11					
ANR	1304431	ExpressionStatement	SetLastError ( ok ? ERROR_SUCCESS : last_error )	257:2:6686:6734	1303952	0	True				
ANR	1304432	CallExpression	SetLastError ( ok ? ERROR_SUCCESS : last_error )		1303952	0					
ANR	1304433	Callee	SetLastError		1303952	0					
ANR	1304434	Identifier	SetLastError		1303952	0					
ANR	1304435	ArgumentList	ok ? ERROR_SUCCESS : last_error		1303952	1					
ANR	1304436	Argument	ok ? ERROR_SUCCESS : last_error		1303952	0					
ANR	1304437	ConditionalExpression	ok ? ERROR_SUCCESS : last_error		1303952	0					
ANR	1304438	Condition	ok		1303952	0					
ANR	1304439	Identifier	ok		1303952	0					
ANR	1304440	Identifier	ERROR_SUCCESS		1303952	1					
ANR	1304441	Identifier	last_error		1303952	2					
ANR	1304442	ExpressionStatement		259:2:6739:6739	1303952	12	True				
ANR	1304443	ReturnStatement	return ok ;	261:1:6744:6753	1303952	13	True				
ANR	1304444	Identifier	ok		1303952	0					
ANR	1304445	ReturnType	BOOL		1303952	1					
ANR	1304446	Identifier	GetExecutableAndArgumentTemplateByExtention		1303952	2					
ANR	1304447	ParameterList	"LPCSTR extension , LPSTR executable , LPSTR arguments"		1303952	3					
ANR	1304448	Parameter	LPCSTR extension	64:1:2112:2127	1303952	0	True				
ANR	1304449	ParameterType	LPCSTR		1303952	0					
ANR	1304450	Identifier	extension		1303952	1					
ANR	1304451	Parameter	LPSTR executable	65:1:2132:2148	1303952	1	True				
ANR	1304452	ParameterType	LPSTR		1303952	0					
ANR	1304453	Identifier	executable		1303952	1					
ANR	1304454	Parameter	LPSTR arguments	66:1:2152:2167	1303952	2	True				
ANR	1304455	ParameterType	LPSTR		1303952	0					
ANR	1304456	Identifier	arguments		1303952	1					
ANR	1304457	CFGEntryNode	ENTRY		1303952		True				
ANR	1304458	CFGExitNode	EXIT		1303952		True				
ANR	1304459	Symbol	uppercase		1303952						
ANR	1304460	Symbol	* tmp		1303952						
ANR	1304461	Symbol	extension		1303952						
ANR	1304462	Symbol	* start		1303952						
ANR	1304463	Symbol	& find_data		1303952						
ANR	1304464	Symbol	RegQueryValue		1303952						
ANR	1304465	Symbol	FindFirstFile		1303952						
ANR	1304466	Symbol	result		1303952						
ANR	1304467	Symbol	quoted		1303952						
ANR	1304468	Symbol	ERROR_SUCCESS		1303952						
ANR	1304469	Symbol	expanded		1303952						
ANR	1304470	Symbol	found		1303952						
ANR	1304471	Symbol	param		1303952						
ANR	1304472	Symbol	tmp		1303952						
ANR	1304473	Symbol	last_error		1303952						
ANR	1304474	Symbol	ok		1303952						
ANR	1304475	Symbol	value		1303952						
ANR	1304476	Symbol	key		1303952						
ANR	1304477	Symbol	* executable		1303952						
ANR	1304478	Symbol	& length		1303952						
ANR	1304479	Symbol	default_verb		1303952						
ANR	1304480	Symbol	NULL		1303952						
ANR	1304481	Symbol	length		1303952						
ANR	1304482	Symbol	verb		1303952						
ANR	1304483	Symbol	start		1303952						
ANR	1304484	Symbol	TRUE		1303952						
ANR	1304485	Symbol	find_data		1303952						
ANR	1304486	Symbol	INVALID_HANDLE_VALUE		1303952						
ANR	1304487	Symbol	executable		1303952						
ANR	1304488	Symbol	HKEY_CLASSES_ROOT		1303952						
ANR	1304489	Symbol	strupr		1303952						
ANR	1304490	Symbol	GetLastError		1303952						
ANR	1304491	Symbol	name		1303952						
ANR	1304492	Symbol	iswspace		1303952						
ANR	1304493	Symbol	arguments		1303952						
ANR	1304494	Symbol	FALSE		1303952						
ANR	1304495	Symbol	MAX_PATH		1303952						
ANR	1304496	Symbol	* arguments		1303952						
ANR	1304497	Function	ExpandArgumentTemplate	266:0:6765:9073							
ANR	1304498	FunctionDef	"ExpandArgumentTemplate (LPCSTR from , LPCSTR file , LPCSTR params , LPSTR to , DWORD length)"		1304497	0					
ANR	1304499	CompoundStatement		272:18:6876:9073	1304497	0					
ANR	1304500	IdentifierDeclStatement	int i ;	274:1:6880:6886	1304497	0	True				
ANR	1304501	IdentifierDecl	i		1304497	0					
ANR	1304502	IdentifierDeclType	int		1304497	0					
ANR	1304503	Identifier	i		1304497	1					
ANR	1304504	IdentifierDeclStatement	LPCSTR tmp ;	275:1:6889:6899	1304497	1	True				
ANR	1304505	IdentifierDecl	tmp		1304497	0					
ANR	1304506	IdentifierDeclType	LPCSTR		1304497	0					
ANR	1304507	Identifier	tmp		1304497	1					
ANR	1304508	IdentifierDeclStatement	BOOL quoted = FALSE ;	276:1:6902:6921	1304497	2	True				
ANR	1304509	IdentifierDecl	quoted = FALSE		1304497	0					
ANR	1304510	IdentifierDeclType	BOOL		1304497	0					
ANR	1304511	Identifier	quoted		1304497	1					
ANR	1304512	AssignmentExpression	quoted = FALSE		1304497	2		=			
ANR	1304513	Identifier	FALSE		1304497	0					
ANR	1304514	Identifier	FALSE		1304497	1					
ANR	1304515	ForStatement	for ( ; * from && -- length ; ++ from )		1304497	3					
ANR	1304516	Condition	* from && -- length	278:8:6932:6948	1304497	0	True				
ANR	1304517	AndExpression	* from && -- length		1304497	0		&&			
ANR	1304518	UnaryOperationExpression	* from		1304497	0					
ANR	1304519	UnaryOperator	*		1304497	0					
ANR	1304520	Identifier	from		1304497	1					
ANR	1304521	UnaryExpression	-- length		1304497	1					
ANR	1304522	IncDec	--		1304497	0					
ANR	1304523	Identifier	length		1304497	1					
ANR	1304524	UnaryExpression	++ from	278:27:6951:6956	1304497	1	True				
ANR	1304525	IncDec	++		1304497	0					
ANR	1304526	Identifier	from		1304497	1					
ANR	1304527	CompoundStatement		7:36:83:83	1304497	2					
ANR	1304528	IfStatement	if ( '%' == * from )		1304497	0					
ANR	1304529	Condition	'%' == * from	280:7:6970:6981	1304497	0	True				
ANR	1304530	EqualityExpression	'%' == * from		1304497	0		==			
ANR	1304531	PrimaryExpression	'%'		1304497	0					
ANR	1304532	UnaryOperationExpression	* from		1304497	1					
ANR	1304533	UnaryOperator	*		1304497	0					
ANR	1304534	Identifier	from		1304497	1					
ANR	1304535	CompoundStatement		9:22:108:108	1304497	1					
ANR	1304536	ExpressionStatement	++ from	283:3:7031:7037	1304497	0	True				
ANR	1304537	UnaryExpression	++ from		1304497	0					
ANR	1304538	IncDec	++		1304497	0					
ANR	1304539	Identifier	from		1304497	1					
ANR	1304540	IfStatement	if ( '0' == * from )		1304497	1					
ANR	1304541	Condition	'0' == * from	287:8:7162:7173	1304497	0	True				
ANR	1304542	EqualityExpression	'0' == * from		1304497	0		==			
ANR	1304543	PrimaryExpression	'0'		1304497	0					
ANR	1304544	UnaryOperationExpression	* from		1304497	1					
ANR	1304545	UnaryOperator	*		1304497	0					
ANR	1304546	Identifier	from		1304497	1					
ANR	1304547	CompoundStatement		16:23:300:300	1304497	1					
ANR	1304548	ExpressionStatement	"strcpy ( to , file )"	288:4:7183:7202	1304497	0	True				
ANR	1304549	CallExpression	"strcpy ( to , file )"		1304497	0					
ANR	1304550	Callee	strcpy		1304497	0					
ANR	1304551	Identifier	strcpy		1304497	0					
ANR	1304552	ArgumentList	to		1304497	1					
ANR	1304553	Argument	to		1304497	0					
ANR	1304554	Identifier	to		1304497	0					
ANR	1304555	Argument	file		1304497	1					
ANR	1304556	Identifier	file		1304497	0					
ANR	1304557	ExpressionStatement	to += strlen ( to )	289:4:7208:7227	1304497	1	True				
ANR	1304558	AssignmentExpression	to += strlen ( to )		1304497	0		+=			
ANR	1304559	Identifier	to		1304497	0					
ANR	1304560	CallExpression	strlen ( to )		1304497	1					
ANR	1304561	Callee	strlen		1304497	0					
ANR	1304562	Identifier	strlen		1304497	0					
ANR	1304563	ArgumentList	to		1304497	1					
ANR	1304564	Argument	to		1304497	0					
ANR	1304565	Identifier	to		1304497	0					
ANR	1304566	ContinueStatement	continue ;	290:4:7233:7241	1304497	2	True				
ANR	1304567	IfStatement	if ( * from < '1' || * from > '9' )		1304497	2					
ANR	1304568	Condition	* from < '1' || * from > '9'	299:8:7593:7618	1304497	0	True				
ANR	1304569	OrExpression	* from < '1' || * from > '9'		1304497	0		||			
ANR	1304570	RelationalExpression	* from < '1'		1304497	0		<			
ANR	1304571	UnaryOperationExpression	* from		1304497	0					
ANR	1304572	UnaryOperator	*		1304497	0					
ANR	1304573	Identifier	from		1304497	1					
ANR	1304574	PrimaryExpression	'1'		1304497	1					
ANR	1304575	RelationalExpression	* from > '9'		1304497	1		>			
ANR	1304576	UnaryOperationExpression	* from		1304497	0					
ANR	1304577	UnaryOperator	*		1304497	0					
ANR	1304578	Identifier	from		1304497	1					
ANR	1304579	PrimaryExpression	'9'		1304497	1					
ANR	1304580	CompoundStatement		28:37:745:745	1304497	1					
ANR	1304581	ExpressionStatement	* to ++ = * from	300:4:7628:7641	1304497	0	True				
ANR	1304582	AssignmentExpression	* to ++ = * from		1304497	0		=			
ANR	1304583	UnaryOperationExpression	* to ++		1304497	0					
ANR	1304584	UnaryOperator	*		1304497	0					
ANR	1304585	PostIncDecOperationExpression	to ++		1304497	1					
ANR	1304586	Identifier	to		1304497	0					
ANR	1304587	IncDec	++		1304497	1					
ANR	1304588	UnaryOperationExpression	* from		1304497	1					
ANR	1304589	UnaryOperator	*		1304497	0					
ANR	1304590	Identifier	from		1304497	1					
ANR	1304591	ContinueStatement	continue ;	301:4:7647:7655	1304497	1	True				
ANR	1304592	IfStatement	if ( '1' == * from )		1304497	3					
ANR	1304593	Condition	'1' == * from	307:8:7856:7867	1304497	0	True				
ANR	1304594	EqualityExpression	'1' == * from		1304497	0		==			
ANR	1304595	PrimaryExpression	'1'		1304497	0					
ANR	1304596	UnaryOperationExpression	* from		1304497	1					
ANR	1304597	UnaryOperator	*		1304497	0					
ANR	1304598	Identifier	from		1304497	1					
ANR	1304599	CompoundStatement		36:23:994:994	1304497	1					
ANR	1304600	ExpressionStatement	tmp = file	308:4:7877:7887	1304497	0	True				
ANR	1304601	AssignmentExpression	tmp = file		1304497	0		=			
ANR	1304602	Identifier	tmp		1304497	0					
ANR	1304603	Identifier	file		1304497	1					
ANR	1304604	IfStatement	"if ( '""' == * file )"		1304497	1					
ANR	1304605	Condition	"'""' == * file"	309:9:7898:7909	1304497	0	True				
ANR	1304606	EqualityExpression	"'""' == * file"		1304497	0		==			
ANR	1304607	PrimaryExpression	"'""'"		1304497	0					
ANR	1304608	UnaryOperationExpression	* file		1304497	1					
ANR	1304609	UnaryOperator	*		1304497	0					
ANR	1304610	Identifier	file		1304497	1					
ANR	1304611	CompoundStatement		38:24:1036:1036	1304497	1					
ANR	1304612	ExpressionStatement	quoted = TRUE	310:5:7920:7933	1304497	0	True				
ANR	1304613	AssignmentExpression	quoted = TRUE		1304497	0		=			
ANR	1304614	Identifier	quoted		1304497	0					
ANR	1304615	Identifier	TRUE		1304497	1					
ANR	1304616	ExpressionStatement	tmp ++	311:5:7940:7945	1304497	1	True				
ANR	1304617	PostIncDecOperationExpression	tmp ++		1304497	0					
ANR	1304618	Identifier	tmp		1304497	0					
ANR	1304619	IncDec	++		1304497	1					
ANR	1304620	ElseStatement	else		1304497	0					
ANR	1304621	CompoundStatement		48:8:1305:1305	1304497	0					
ANR	1304622	ExpressionStatement	i = ( * from - '2' )	320:4:8188:8207	1304497	0	True				
ANR	1304623	AssignmentExpression	i = ( * from - '2' )		1304497	0		=			
ANR	1304624	Identifier	i		1304497	0					
ANR	1304625	AdditiveExpression	* from - '2'		1304497	1		-			
ANR	1304626	UnaryOperationExpression	* from		1304497	0					
ANR	1304627	UnaryOperator	*		1304497	0					
ANR	1304628	Identifier	from		1304497	1					
ANR	1304629	PrimaryExpression	'2'		1304497	1					
ANR	1304630	ExpressionStatement	tmp = params	321:4:8213:8225	1304497	1	True				
ANR	1304631	AssignmentExpression	tmp = params		1304497	0		=			
ANR	1304632	Identifier	tmp		1304497	0					
ANR	1304633	Identifier	params		1304497	1					
ANR	1304634	ForStatement	for ( ; ; )		1304497	2					
ANR	1304635	CompoundStatement		51:13:1363:1363	1304497	0					
ANR	1304636	WhileStatement	while ( iswspace ( * tmp ) )		1304497	0					
ANR	1304637	Condition	iswspace ( * tmp )	323:13:8260:8276	1304497	0	True				
ANR	1304638	CallExpression	iswspace ( * tmp )		1304497	0					
ANR	1304639	Callee	iswspace		1304497	0					
ANR	1304640	Identifier	iswspace		1304497	0					
ANR	1304641	ArgumentList	* tmp		1304497	1					
ANR	1304642	Argument	* tmp		1304497	0					
ANR	1304643	UnaryOperationExpression	* tmp		1304497	0					
ANR	1304644	UnaryOperator	*		1304497	0					
ANR	1304645	Identifier	tmp		1304497	1					
ANR	1304646	CompoundStatement		52:33:1403:1403	1304497	1					
ANR	1304647	ExpressionStatement	tmp ++	324:6:8288:8293	1304497	0	True				
ANR	1304648	PostIncDecOperationExpression	tmp ++		1304497	0					
ANR	1304649	Identifier	tmp		1304497	0					
ANR	1304650	IncDec	++		1304497	1					
ANR	1304651	IfStatement	if ( ! * tmp || ! i )		1304497	1					
ANR	1304652	Condition	! * tmp || ! i	326:10:8312:8322	1304497	0	True				
ANR	1304653	OrExpression	! * tmp || ! i		1304497	0		||			
ANR	1304654	UnaryOperationExpression	! * tmp		1304497	0					
ANR	1304655	UnaryOperator	!		1304497	0					
ANR	1304656	UnaryOperationExpression	* tmp		1304497	1					
ANR	1304657	UnaryOperator	*		1304497	0					
ANR	1304658	Identifier	tmp		1304497	1					
ANR	1304659	UnaryOperationExpression	! i		1304497	1					
ANR	1304660	UnaryOperator	!		1304497	0					
ANR	1304661	Identifier	i		1304497	1					
ANR	1304662	CompoundStatement		55:24:1449:1449	1304497	1					
ANR	1304663	BreakStatement	break ;	327:6:8334:8339	1304497	0	True				
ANR	1304664	ExpressionStatement	i --	329:5:8353:8356	1304497	2	True				
ANR	1304665	PostIncDecOperationExpression	i --		1304497	0					
ANR	1304666	Identifier	i		1304497	0					
ANR	1304667	IncDec	--		1304497	1					
ANR	1304668	WhileStatement	while ( iswspace ( * tmp ) )		1304497	3					
ANR	1304669	Condition	iswspace ( * tmp )	330:13:8371:8387	1304497	0	True				
ANR	1304670	CallExpression	iswspace ( * tmp )		1304497	0					
ANR	1304671	Callee	iswspace		1304497	0					
ANR	1304672	Identifier	iswspace		1304497	0					
ANR	1304673	ArgumentList	* tmp		1304497	1					
ANR	1304674	Argument	* tmp		1304497	0					
ANR	1304675	UnaryOperationExpression	* tmp		1304497	0					
ANR	1304676	UnaryOperator	*		1304497	0					
ANR	1304677	Identifier	tmp		1304497	1					
ANR	1304678	CompoundStatement		59:33:1514:1514	1304497	1					
ANR	1304679	ExpressionStatement	tmp ++	331:6:8399:8404	1304497	0	True				
ANR	1304680	PostIncDecOperationExpression	tmp ++		1304497	0					
ANR	1304681	Identifier	tmp		1304497	0					
ANR	1304682	IncDec	++		1304497	1					
ANR	1304683	IfStatement	if ( ! tmp )		1304497	4					
ANR	1304684	Condition	! tmp	333:10:8423:8426	1304497	0	True				
ANR	1304685	UnaryOperationExpression	! tmp		1304497	0					
ANR	1304686	UnaryOperator	!		1304497	0					
ANR	1304687	Identifier	tmp		1304497	1					
ANR	1304688	CompoundStatement		62:17:1553:1553	1304497	1					
ANR	1304689	ContinueStatement	continue ;	334:6:8438:8446	1304497	0	True				
ANR	1304690	WhileStatement	while ( * tmp )		1304497	4					
ANR	1304691	Condition	* tmp	343:11:8675:8678	1304497	0	True				
ANR	1304692	UnaryOperationExpression	* tmp		1304497	0					
ANR	1304693	UnaryOperator	*		1304497	0					
ANR	1304694	Identifier	tmp		1304497	1					
ANR	1304695	CompoundStatement		72:18:1805:1805	1304497	1					
ANR	1304696	IfStatement	if ( iswspace ( * tmp ) && ! quoted )		1304497	0					
ANR	1304697	Condition	iswspace ( * tmp ) && ! quoted	344:9:8693:8720	1304497	0	True				
ANR	1304698	AndExpression	iswspace ( * tmp ) && ! quoted		1304497	0		&&			
ANR	1304699	CallExpression	iswspace ( * tmp )		1304497	0					
ANR	1304700	Callee	iswspace		1304497	0					
ANR	1304701	Identifier	iswspace		1304497	0					
ANR	1304702	ArgumentList	* tmp		1304497	1					
ANR	1304703	Argument	* tmp		1304497	0					
ANR	1304704	UnaryOperationExpression	* tmp		1304497	0					
ANR	1304705	UnaryOperator	*		1304497	0					
ANR	1304706	Identifier	tmp		1304497	1					
ANR	1304707	UnaryOperationExpression	! quoted		1304497	1					
ANR	1304708	UnaryOperator	!		1304497	0					
ANR	1304709	Identifier	quoted		1304497	1					
ANR	1304710	CompoundStatement		73:40:1847:1847	1304497	1					
ANR	1304711	BreakStatement	break ;	345:5:8731:8736	1304497	0	True				
ANR	1304712	ExpressionStatement	* to ++ = * tmp ++	347:4:8748:8762	1304497	1	True				
ANR	1304713	AssignmentExpression	* to ++ = * tmp ++		1304497	0		=			
ANR	1304714	UnaryOperationExpression	* to ++		1304497	0					
ANR	1304715	UnaryOperator	*		1304497	0					
ANR	1304716	PostIncDecOperationExpression	to ++		1304497	1					
ANR	1304717	Identifier	to		1304497	0					
ANR	1304718	IncDec	++		1304497	1					
ANR	1304719	UnaryOperationExpression	* tmp ++		1304497	1					
ANR	1304720	UnaryOperator	*		1304497	0					
ANR	1304721	PostIncDecOperationExpression	tmp ++		1304497	1					
ANR	1304722	Identifier	tmp		1304497	0					
ANR	1304723	IncDec	++		1304497	1					
ANR	1304724	IfStatement	"if ( '""' == * tmp && quoted )"		1304497	2					
ANR	1304725	Condition	"'""' == * tmp && quoted"	348:9:8773:8793	1304497	0	True				
ANR	1304726	AndExpression	"'""' == * tmp && quoted"		1304497	0		&&			
ANR	1304727	EqualityExpression	"'""' == * tmp"		1304497	0		==			
ANR	1304728	PrimaryExpression	"'""'"		1304497	0					
ANR	1304729	UnaryOperationExpression	* tmp		1304497	1					
ANR	1304730	UnaryOperator	*		1304497	0					
ANR	1304731	Identifier	tmp		1304497	1					
ANR	1304732	Identifier	quoted		1304497	1					
ANR	1304733	CompoundStatement		77:33:1920:1920	1304497	1					
ANR	1304734	BreakStatement	break ;	349:5:8804:8809	1304497	0	True				
ANR	1304735	ExpressionStatement	quoted = FALSE	354:3:8853:8867	1304497	5	True				
ANR	1304736	AssignmentExpression	quoted = FALSE		1304497	0		=			
ANR	1304737	Identifier	quoted		1304497	0					
ANR	1304738	Identifier	FALSE		1304497	1					
ANR	1304739	ElseStatement	else		1304497	0					
ANR	1304740	CompoundStatement		85:9:2002:2002	1304497	0					
ANR	1304741	ExpressionStatement	* to ++ = * from	360:3:8992:9005	1304497	0	True				
ANR	1304742	AssignmentExpression	* to ++ = * from		1304497	0		=			
ANR	1304743	UnaryOperationExpression	* to ++		1304497	0					
ANR	1304744	UnaryOperator	*		1304497	0					
ANR	1304745	PostIncDecOperationExpression	to ++		1304497	1					
ANR	1304746	Identifier	to		1304497	0					
ANR	1304747	IncDec	++		1304497	1					
ANR	1304748	UnaryOperationExpression	* from		1304497	1					
ANR	1304749	UnaryOperator	*		1304497	0					
ANR	1304750	Identifier	from		1304497	1					
ANR	1304751	ExpressionStatement	* to = '\\0'	366:1:9060:9070	1304497	4	True				
ANR	1304752	AssignmentExpression	* to = '\\0'		1304497	0		=			
ANR	1304753	UnaryOperationExpression	* to		1304497	0					
ANR	1304754	UnaryOperator	*		1304497	0					
ANR	1304755	Identifier	to		1304497	1					
ANR	1304756	PrimaryExpression	'\\0'		1304497	1					
ANR	1304757	ReturnType	void		1304497	1					
ANR	1304758	Identifier	ExpandArgumentTemplate		1304497	2					
ANR	1304759	ParameterList	"LPCSTR from , LPCSTR file , LPCSTR params , LPSTR to , DWORD length"		1304497	3					
ANR	1304760	Parameter	LPCSTR from	268:1:6796:6808	1304497	0	True				
ANR	1304761	ParameterType	LPCSTR		1304497	0					
ANR	1304762	Identifier	from		1304497	1					
ANR	1304763	Parameter	LPCSTR file	269:1:6812:6824	1304497	1	True				
ANR	1304764	ParameterType	LPCSTR		1304497	0					
ANR	1304765	Identifier	file		1304497	1					
ANR	1304766	Parameter	LPCSTR params	270:1:6828:6842	1304497	2	True				
ANR	1304767	ParameterType	LPCSTR		1304497	0					
ANR	1304768	Identifier	params		1304497	1					
ANR	1304769	Parameter	LPSTR to	271:1:6846:6855	1304497	3	True				
ANR	1304770	ParameterType	LPSTR		1304497	0					
ANR	1304771	Identifier	to		1304497	1					
ANR	1304772	Parameter	DWORD length	272:1:6859:6872	1304497	4	True				
ANR	1304773	ParameterType	DWORD		1304497	0					
ANR	1304774	Identifier	length		1304497	1					
ANR	1304775	CFGEntryNode	ENTRY		1304497		True				
ANR	1304776	CFGExitNode	EXIT		1304497		True				
ANR	1304777	InfiniteForNode	true		1304497		True				
ANR	1304778	Symbol	* tmp		1304497						
ANR	1304779	Symbol	* tmp ++		1304497						
ANR	1304780	Symbol	* to		1304497						
ANR	1304781	Symbol	length		1304497						
ANR	1304782	Symbol	i		1304497						
ANR	1304783	Symbol	TRUE		1304497						
ANR	1304784	Symbol	params		1304497						
ANR	1304785	Symbol	* file		1304497						
ANR	1304786	Symbol	quoted		1304497						
ANR	1304787	Symbol	strlen		1304497						
ANR	1304788	Symbol	file		1304497						
ANR	1304789	Symbol	tmp		1304497						
ANR	1304790	Symbol	iswspace		1304497						
ANR	1304791	Symbol	* to ++		1304497						
ANR	1304792	Symbol	from		1304497						
ANR	1304793	Symbol	FALSE		1304497						
ANR	1304794	Symbol	to		1304497						
ANR	1304795	Symbol	* from		1304497						
