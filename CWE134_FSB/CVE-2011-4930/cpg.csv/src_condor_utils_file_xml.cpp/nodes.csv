command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4759405	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_file_xml.cpp								
ANR	4759406	Function	FILEXML :: file_readAttrList	32:0:1035:1226							
ANR	4759407	FunctionDef	FILEXML :: file_readAttrList ()		4759406	0					
ANR	4759408	CompoundStatement		33:0:1075:1226	4759406	0					
ANR	4759409	IdentifierDeclStatement	AttrList * ad = 0 ;	34:1:1078:1094	4759406	0	True				
ANR	4759410	IdentifierDecl	* ad = 0		4759406	0					
ANR	4759411	IdentifierDeclType	AttrList *		4759406	0					
ANR	4759412	Identifier	ad		4759406	1					
ANR	4759413	AssignmentExpression	* ad = 0		4759406	2		=			
ANR	4759414	Identifier	ad		4759406	0					
ANR	4759415	PrimaryExpression	0		4759406	1					
ANR	4759416	IfStatement	if ( is_dummy )		4759406	1					
ANR	4759417	Condition	is_dummy	36:8:1105:1112	4759406	0	True				
ANR	4759418	Identifier	is_dummy		4759406	0					
ANR	4759419	ReturnStatement	return ad ;	36:18:1115:1124	4759406	1	True				
ANR	4759420	Identifier	ad		4759406	0					
ANR	4759421	ExpressionStatement	"dprintf ( D_ALWAYS , ""file_readAttrList: Method not implemented for XML log files\\n"" )"	38:1:1128:1211	4759406	2	True				
ANR	4759422	CallExpression	"dprintf ( D_ALWAYS , ""file_readAttrList: Method not implemented for XML log files\\n"" )"		4759406	0					
ANR	4759423	Callee	dprintf		4759406	0					
ANR	4759424	Identifier	dprintf		4759406	0					
ANR	4759425	ArgumentList	D_ALWAYS		4759406	1					
ANR	4759426	Argument	D_ALWAYS		4759406	0					
ANR	4759427	Identifier	D_ALWAYS		4759406	0					
ANR	4759428	Argument	"""file_readAttrList: Method not implemented for XML log files\\n"""		4759406	1					
ANR	4759429	PrimaryExpression	"""file_readAttrList: Method not implemented for XML log files\\n"""		4759406	0					
ANR	4759430	ReturnStatement	return ad ;	40:1:1215:1224	4759406	3	True				
ANR	4759431	Identifier	ad		4759406	0					
ANR	4759432	ReturnType	AttrList *		4759406	1					
ANR	4759433	Identifier	FILEXML :: file_readAttrList		4759406	2					
ANR	4759434	ParameterList			4759406	3					
ANR	4759435	CFGEntryNode	ENTRY		4759406		True				
ANR	4759436	CFGExitNode	EXIT		4759406		True				
ANR	4759437	Symbol	ad		4759406						
ANR	4759438	Symbol	D_ALWAYS		4759406						
ANR	4759439	Symbol	is_dummy		4759406						
ANR	4759440	DeclStmt									
ANR	4759441	Decl							int	int	retval
ANR	4759442	DeclStmt									
ANR	4759443	Decl							struct stat	struct stat	file_status
ANR	4759444	DeclStmt									
ANR	4759445	Decl							int	int	xml_log_limit
ANR	4759446	DeclStmt									
ANR	4759447	Decl							MyString	MyString	temp
ANR	4759448	DeclStmt									
ANR	4759449	Decl							const char	const char *	tag
ANR	4759450	DeclStmt									
ANR	4759451	Decl							const char	const char *	val_temp
ANR	4759452	DeclStmt									
ANR	4759453	Decl							ExprTree	ExprTree *	value
ANR	4759454	Function	FILEXML :: file_deleteEvent	114:0:2866:3072							
ANR	4759455	FunctionDef	"FILEXML :: file_deleteEvent (const char * eventType , AttrList * condition)"		4759454	0					
ANR	4759456	CompoundStatement		115:33:2962:3072	4759454	0					
ANR	4759457	ExpressionStatement	"dprintf ( D_ALWAYS , ""file_deleteEvent: Method not implemented for XML log files\\n"" )"	117:1:2966:3046	4759454	0	True				
ANR	4759458	CallExpression	"dprintf ( D_ALWAYS , ""file_deleteEvent: Method not implemented for XML log files\\n"" )"		4759454	0					
ANR	4759459	Callee	dprintf		4759454	0					
ANR	4759460	Identifier	dprintf		4759454	0					
ANR	4759461	ArgumentList	D_ALWAYS		4759454	1					
ANR	4759462	Argument	D_ALWAYS		4759454	0					
ANR	4759463	Identifier	D_ALWAYS		4759454	0					
ANR	4759464	Argument	"""file_deleteEvent: Method not implemented for XML log files\\n"""		4759454	1					
ANR	4759465	PrimaryExpression	"""file_deleteEvent: Method not implemented for XML log files\\n"""		4759454	0					
ANR	4759466	ReturnStatement	return QUILL_FAILURE ;	118:1:3049:3069	4759454	1	True				
ANR	4759467	Identifier	QUILL_FAILURE		4759454	0					
ANR	4759468	ReturnType	QuillErrCode		4759454	1					
ANR	4759469	Identifier	FILEXML :: file_deleteEvent		4759454	2					
ANR	4759470	ParameterList	"const char * eventType , AttrList * condition"		4759454	3					
ANR	4759471	Parameter	const char * eventType	114:39:2905:2925	4759454	0	True				
ANR	4759472	ParameterType	const char *		4759454	0					
ANR	4759473	Identifier	eventType		4759454	1					
ANR	4759474	Parameter	AttrList * condition	115:12:2941:2959	4759454	1	True				
ANR	4759475	ParameterType	AttrList *		4759454	0					
ANR	4759476	Identifier	condition		4759454	1					
ANR	4759477	CFGEntryNode	ENTRY		4759454		True				
ANR	4759478	CFGExitNode	EXIT		4759454		True				
ANR	4759479	Symbol	condition		4759454						
ANR	4759480	Symbol	D_ALWAYS		4759454						
ANR	4759481	Symbol	eventType		4759454						
ANR	4759482	Symbol	QUILL_FAILURE		4759454						
ANR	4759483	DeclStmt									
ANR	4759484	Decl							FILEXML	FILEXML *	XMLObj
ANR	4759485	Function	FILEXML :: createInstanceXML	133:11:3578:4708							
ANR	4759486	FunctionDef	FILEXML :: createInstanceXML ()		4759485	0					
ANR	4759487	CompoundStatement		134:29:3617:4708	4759485	0					
ANR	4759488	IdentifierDeclStatement	FILEXML * ptr = NULL ;	135:1:3621:3640	4759485	0	True				
ANR	4759489	IdentifierDecl	* ptr = NULL		4759485	0					
ANR	4759490	IdentifierDeclType	FILEXML *		4759485	0					
ANR	4759491	Identifier	ptr		4759485	1					
ANR	4759492	AssignmentExpression	* ptr = NULL		4759485	2		=			
ANR	4759493	Identifier	NULL		4759485	0					
ANR	4759494	Identifier	NULL		4759485	1					
ANR	4759495	IdentifierDeclStatement	"char * tmp , * outfilename ;"	136:1:3643:3666	4759485	1	True				
ANR	4759496	IdentifierDecl	* tmp		4759485	0					
ANR	4759497	IdentifierDeclType	char *		4759485	0					
ANR	4759498	Identifier	tmp		4759485	1					
ANR	4759499	IdentifierDecl	* outfilename		4759485	1					
ANR	4759500	IdentifierDeclType	char *		4759485	0					
ANR	4759501	Identifier	outfilename		4759485	1					
ANR	4759502	IdentifierDeclStatement	char * tmpParamName ;	137:1:3669:3687	4759485	2	True				
ANR	4759503	IdentifierDecl	* tmpParamName		4759485	0					
ANR	4759504	IdentifierDeclType	char *		4759485	0					
ANR	4759505	Identifier	tmpParamName		4759485	1					
ANR	4759506	IdentifierDeclStatement	const char * daemon_name ;	138:1:3690:3713	4759485	3	True				
ANR	4759507	IdentifierDecl	* daemon_name		4759485	0					
ANR	4759508	IdentifierDeclType	const char *		4759485	0					
ANR	4759509	Identifier	daemon_name		4759485	1					
ANR	4759510	IdentifierDeclStatement	bool want_xml_log = false ;	139:4:3719:3744	4759485	4	True				
ANR	4759511	IdentifierDecl	want_xml_log = false		4759485	0					
ANR	4759512	IdentifierDeclType	bool		4759485	0					
ANR	4759513	Identifier	want_xml_log		4759485	1					
ANR	4759514	AssignmentExpression	want_xml_log = false		4759485	2		=			
ANR	4759515	Identifier	false		4759485	0					
ANR	4759516	Identifier	false		4759485	1					
ANR	4759517	ExpressionStatement	"want_xml_log = param_boolean ( ""WANT_XML_LOG"" , false )"	141:4:3751:3802	4759485	5	True				
ANR	4759518	AssignmentExpression	"want_xml_log = param_boolean ( ""WANT_XML_LOG"" , false )"		4759485	0		=			
ANR	4759519	Identifier	want_xml_log		4759485	0					
ANR	4759520	CallExpression	"param_boolean ( ""WANT_XML_LOG"" , false )"		4759485	1					
ANR	4759521	Callee	param_boolean		4759485	0					
ANR	4759522	Identifier	param_boolean		4759485	0					
ANR	4759523	ArgumentList	"""WANT_XML_LOG"""		4759485	1					
ANR	4759524	Argument	"""WANT_XML_LOG"""		4759485	0					
ANR	4759525	PrimaryExpression	"""WANT_XML_LOG"""		4759485	0					
ANR	4759526	Argument	false		4759485	1					
ANR	4759527	Identifier	false		4759485	0					
ANR	4759528	IfStatement	if ( ! want_xml_log )		4759485	6					
ANR	4759529	Condition	! want_xml_log	143:9:3814:3827	4759485	0	True				
ANR	4759530	UnaryOperationExpression	! want_xml_log		4759485	0					
ANR	4759531	UnaryOperator	!		4759485	0					
ANR	4759532	Identifier	want_xml_log		4759485	1					
ANR	4759533	CompoundStatement		10:26:213:213	4759485	1					
ANR	4759534	ExpressionStatement	ptr = new FILEXML ( )	144:8:3908:3927	4759485	0	True				
ANR	4759535	AssignmentExpression	ptr = new FILEXML ( )		4759485	0		=			
ANR	4759536	Identifier	ptr		4759485	0					
ANR	4759537	UnaryExpression	new FILEXML ( )		4759485	1					
ANR	4759538	ReturnStatement	return ptr ;	145:8:3937:3947	4759485	1	True				
ANR	4759539	Identifier	ptr		4759485	0					
ANR	4759540	ExpressionStatement	daemon_name = get_mySubSystem ( ) -> getName ( )	147:1:3956:3998	4759485	7	True				
ANR	4759541	AssignmentExpression	daemon_name = get_mySubSystem ( ) -> getName ( )		4759485	0		=			
ANR	4759542	Identifier	daemon_name		4759485	0					
ANR	4759543	CallExpression	get_mySubSystem ( ) -> getName ( )		4759485	1					
ANR	4759544	Callee	get_mySubSystem ( ) -> getName		4759485	0					
ANR	4759545	PtrMemberAccess	get_mySubSystem ( ) -> getName		4759485	0					
ANR	4759546	CallExpression	get_mySubSystem ( )		4759485	0					
ANR	4759547	Callee	get_mySubSystem		4759485	0					
ANR	4759548	Identifier	get_mySubSystem		4759485	0					
ANR	4759549	ArgumentList			4759485	1					
ANR	4759550	Identifier	getName		4759485	1					
ANR	4759551	ArgumentList			4759485	1					
ANR	4759552	ExpressionStatement	tmpParamName = ( char * ) malloc ( 10 + strlen ( daemon_name ) )	149:1:4002:4055	4759485	8	True				
ANR	4759553	AssignmentExpression	tmpParamName = ( char * ) malloc ( 10 + strlen ( daemon_name ) )		4759485	0		=			
ANR	4759554	Identifier	tmpParamName		4759485	0					
ANR	4759555	CastExpression	( char * ) malloc ( 10 + strlen ( daemon_name ) )		4759485	1					
ANR	4759556	CastTarget	char *		4759485	0					
ANR	4759557	CallExpression	malloc ( 10 + strlen ( daemon_name ) )		4759485	1					
ANR	4759558	Callee	malloc		4759485	0					
ANR	4759559	Identifier	malloc		4759485	0					
ANR	4759560	ArgumentList	10 + strlen ( daemon_name )		4759485	1					
ANR	4759561	Argument	10 + strlen ( daemon_name )		4759485	0					
ANR	4759562	AdditiveExpression	10 + strlen ( daemon_name )		4759485	0		+			
ANR	4759563	PrimaryExpression	10		4759485	0					
ANR	4759564	CallExpression	strlen ( daemon_name )		4759485	1					
ANR	4759565	Callee	strlen		4759485	0					
ANR	4759566	Identifier	strlen		4759485	0					
ANR	4759567	ArgumentList	daemon_name		4759485	1					
ANR	4759568	Argument	daemon_name		4759485	0					
ANR	4759569	Identifier	daemon_name		4759485	0					
ANR	4759570	ExpressionStatement	"sprintf ( tmpParamName , ""%s_XMLLOG"" , daemon_name )"	152:1:4113:4160	4759485	9	True				
ANR	4759571	CallExpression	"sprintf ( tmpParamName , ""%s_XMLLOG"" , daemon_name )"		4759485	0					
ANR	4759572	Callee	sprintf		4759485	0					
ANR	4759573	Identifier	sprintf		4759485	0					
ANR	4759574	ArgumentList	tmpParamName		4759485	1					
ANR	4759575	Argument	tmpParamName		4759485	0					
ANR	4759576	Identifier	tmpParamName		4759485	0					
ANR	4759577	Argument	"""%s_XMLLOG"""		4759485	1					
ANR	4759578	PrimaryExpression	"""%s_XMLLOG"""		4759485	0					
ANR	4759579	Argument	daemon_name		4759485	2					
ANR	4759580	Identifier	daemon_name		4759485	0					
ANR	4759581	ExpressionStatement	tmp = param ( tmpParamName )	153:1:4163:4188	4759485	10	True				
ANR	4759582	AssignmentExpression	tmp = param ( tmpParamName )		4759485	0		=			
ANR	4759583	Identifier	tmp		4759485	0					
ANR	4759584	CallExpression	param ( tmpParamName )		4759485	1					
ANR	4759585	Callee	param		4759485	0					
ANR	4759586	Identifier	param		4759485	0					
ANR	4759587	ArgumentList	tmpParamName		4759485	1					
ANR	4759588	Argument	tmpParamName		4759485	0					
ANR	4759589	Identifier	tmpParamName		4759485	0					
ANR	4759590	ExpressionStatement	free ( tmpParamName )	154:1:4191:4209	4759485	11	True				
ANR	4759591	CallExpression	free ( tmpParamName )		4759485	0					
ANR	4759592	Callee	free		4759485	0					
ANR	4759593	Identifier	free		4759485	0					
ANR	4759594	ArgumentList	tmpParamName		4759485	1					
ANR	4759595	Argument	tmpParamName		4759485	0					
ANR	4759596	Identifier	tmpParamName		4759485	0					
ANR	4759597	IfStatement	if ( tmp )		4759485	12					
ANR	4759598	Condition	tmp	156:5:4217:4219	4759485	0	True				
ANR	4759599	Identifier	tmp		4759485	0					
ANR	4759600	CompoundStatement		23:11:605:605	4759485	1					
ANR	4759601	ExpressionStatement	outfilename = tmp	157:2:4227:4244	4759485	0	True				
ANR	4759602	AssignmentExpression	outfilename = tmp		4759485	0		=			
ANR	4759603	Identifier	outfilename		4759485	0					
ANR	4759604	Identifier	tmp		4759485	1					
ANR	4759605	ElseStatement	else		4759485	0					
ANR	4759606	CompoundStatement		26:6:637:637	4759485	0					
ANR	4759607	ExpressionStatement	"tmp = param ( ""LOG"" )"	160:2:4259:4278	4759485	0	True				
ANR	4759608	AssignmentExpression	"tmp = param ( ""LOG"" )"		4759485	0		=			
ANR	4759609	Identifier	tmp		4759485	0					
ANR	4759610	CallExpression	"param ( ""LOG"" )"		4759485	1					
ANR	4759611	Callee	param		4759485	0					
ANR	4759612	Identifier	param		4759485	0					
ANR	4759613	ArgumentList	"""LOG"""		4759485	1					
ANR	4759614	Argument	"""LOG"""		4759485	0					
ANR	4759615	PrimaryExpression	"""LOG"""		4759485	0					
ANR	4759616	IfStatement	if ( tmp )		4759485	1					
ANR	4759617	Condition	tmp	162:6:4289:4291	4759485	0	True				
ANR	4759618	Identifier	tmp		4759485	0					
ANR	4759619	CompoundStatement		29:11:676:676	4759485	1					
ANR	4759620	ExpressionStatement	outfilename = ( char * ) malloc ( strlen ( tmp ) + 12 )	163:3:4299:4345	4759485	0	True				
ANR	4759621	AssignmentExpression	outfilename = ( char * ) malloc ( strlen ( tmp ) + 12 )		4759485	0		=			
ANR	4759622	Identifier	outfilename		4759485	0					
ANR	4759623	CastExpression	( char * ) malloc ( strlen ( tmp ) + 12 )		4759485	1					
ANR	4759624	CastTarget	char *		4759485	0					
ANR	4759625	CallExpression	malloc ( strlen ( tmp ) + 12 )		4759485	1					
ANR	4759626	Callee	malloc		4759485	0					
ANR	4759627	Identifier	malloc		4759485	0					
ANR	4759628	ArgumentList	strlen ( tmp ) + 12		4759485	1					
ANR	4759629	Argument	strlen ( tmp ) + 12		4759485	0					
ANR	4759630	AdditiveExpression	strlen ( tmp ) + 12		4759485	0		+			
ANR	4759631	CallExpression	strlen ( tmp )		4759485	0					
ANR	4759632	Callee	strlen		4759485	0					
ANR	4759633	Identifier	strlen		4759485	0					
ANR	4759634	ArgumentList	tmp		4759485	1					
ANR	4759635	Argument	tmp		4759485	0					
ANR	4759636	Identifier	tmp		4759485	0					
ANR	4759637	PrimaryExpression	12		4759485	1					
ANR	4759638	ExpressionStatement	"sprintf ( outfilename , ""%s/Events.xml"" , tmp )"	164:3:4350:4392	4759485	1	True				
ANR	4759639	CallExpression	"sprintf ( outfilename , ""%s/Events.xml"" , tmp )"		4759485	0					
ANR	4759640	Callee	sprintf		4759485	0					
ANR	4759641	Identifier	sprintf		4759485	0					
ANR	4759642	ArgumentList	outfilename		4759485	1					
ANR	4759643	Argument	outfilename		4759485	0					
ANR	4759644	Identifier	outfilename		4759485	0					
ANR	4759645	Argument	"""%s/Events.xml"""		4759485	1					
ANR	4759646	PrimaryExpression	"""%s/Events.xml"""		4759485	0					
ANR	4759647	Argument	tmp		4759485	2					
ANR	4759648	Identifier	tmp		4759485	0					
ANR	4759649	ExpressionStatement	free ( tmp )	165:3:4397:4406	4759485	2	True				
ANR	4759650	CallExpression	free ( tmp )		4759485	0					
ANR	4759651	Callee	free		4759485	0					
ANR	4759652	Identifier	free		4759485	0					
ANR	4759653	ArgumentList	tmp		4759485	1					
ANR	4759654	Argument	tmp		4759485	0					
ANR	4759655	Identifier	tmp		4759485	0					
ANR	4759656	ElseStatement	else		4759485	0					
ANR	4759657	CompoundStatement		34:7:801:801	4759485	0					
ANR	4759658	ExpressionStatement	outfilename = ( char * ) malloc ( 11 )	168:3:4424:4456	4759485	0	True				
ANR	4759659	AssignmentExpression	outfilename = ( char * ) malloc ( 11 )		4759485	0		=			
ANR	4759660	Identifier	outfilename		4759485	0					
ANR	4759661	CastExpression	( char * ) malloc ( 11 )		4759485	1					
ANR	4759662	CastTarget	char *		4759485	0					
ANR	4759663	CallExpression	malloc ( 11 )		4759485	1					
ANR	4759664	Callee	malloc		4759485	0					
ANR	4759665	Identifier	malloc		4759485	0					
ANR	4759666	ArgumentList	11		4759485	1					
ANR	4759667	Argument	11		4759485	0					
ANR	4759668	PrimaryExpression	11		4759485	0					
ANR	4759669	ExpressionStatement	"sprintf ( outfilename , ""Events.xml"" )"	169:3:4461:4495	4759485	1	True				
ANR	4759670	CallExpression	"sprintf ( outfilename , ""Events.xml"" )"		4759485	0					
ANR	4759671	Callee	sprintf		4759485	0					
ANR	4759672	Identifier	sprintf		4759485	0					
ANR	4759673	ArgumentList	outfilename		4759485	1					
ANR	4759674	Argument	outfilename		4759485	0					
ANR	4759675	Identifier	outfilename		4759485	0					
ANR	4759676	Argument	"""Events.xml"""		4759485	1					
ANR	4759677	PrimaryExpression	"""Events.xml"""		4759485	0					
ANR	4759678	ExpressionStatement	"ptr = new FILEXML ( outfilename , O_WRONLY | O_CREAT | O_APPEND , true )"	173:1:4506:4569	4759485	13	True				
ANR	4759679	AssignmentExpression	"ptr = new FILEXML ( outfilename , O_WRONLY | O_CREAT | O_APPEND , true )"		4759485	0		=			
ANR	4759680	Identifier	ptr		4759485	0					
ANR	4759681	Expression	"outfilename , O_WRONLY | O_CREAT | O_APPEND , true"		4759485	1					
ANR	4759682	Identifier	outfilename		4759485	0					
ANR	4759683	Expression	"O_WRONLY | O_CREAT | O_APPEND , true"		4759485	1					
ANR	4759684	InclusiveOrExpression	O_WRONLY | O_CREAT | O_APPEND		4759485	0		|			
ANR	4759685	Identifier	O_WRONLY		4759485	0					
ANR	4759686	InclusiveOrExpression	O_CREAT | O_APPEND		4759485	1		|			
ANR	4759687	Identifier	O_CREAT		4759485	0					
ANR	4759688	Identifier	O_APPEND		4759485	1					
ANR	4759689	Identifier	true		4759485	1					
ANR	4759690	ExpressionStatement	free ( outfilename )	175:1:4573:4590	4759485	14	True				
ANR	4759691	CallExpression	free ( outfilename )		4759485	0					
ANR	4759692	Callee	free		4759485	0					
ANR	4759693	Identifier	free		4759485	0					
ANR	4759694	ArgumentList	outfilename		4759485	1					
ANR	4759695	Argument	outfilename		4759485	0					
ANR	4759696	Identifier	outfilename		4759485	0					
ANR	4759697	IfStatement	if ( ptr -> file_open ( ) == QUILL_FAILURE )		4759485	15					
ANR	4759698	Condition	ptr -> file_open ( ) == QUILL_FAILURE	177:5:4598:4630	4759485	0	True				
ANR	4759699	EqualityExpression	ptr -> file_open ( ) == QUILL_FAILURE		4759485	0		==			
ANR	4759700	CallExpression	ptr -> file_open ( )		4759485	0					
ANR	4759701	Callee	ptr -> file_open		4759485	0					
ANR	4759702	PtrMemberAccess	ptr -> file_open		4759485	0					
ANR	4759703	Identifier	ptr		4759485	0					
ANR	4759704	Identifier	file_open		4759485	1					
ANR	4759705	ArgumentList			4759485	1					
ANR	4759706	Identifier	QUILL_FAILURE		4759485	1					
ANR	4759707	CompoundStatement		44:40:1015:1015	4759485	1					
ANR	4759708	ExpressionStatement	"dprintf ( D_ALWAYS , ""FILEXML createInstance failed\\n"" )"	178:2:4637:4689	4759485	0	True				
ANR	4759709	CallExpression	"dprintf ( D_ALWAYS , ""FILEXML createInstance failed\\n"" )"		4759485	0					
ANR	4759710	Callee	dprintf		4759485	0					
ANR	4759711	Identifier	dprintf		4759485	0					
ANR	4759712	ArgumentList	D_ALWAYS		4759485	1					
ANR	4759713	Argument	D_ALWAYS		4759485	0					
ANR	4759714	Identifier	D_ALWAYS		4759485	0					
ANR	4759715	Argument	"""FILEXML createInstance failed\\n"""		4759485	1					
ANR	4759716	PrimaryExpression	"""FILEXML createInstance failed\\n"""		4759485	0					
ANR	4759717	ReturnStatement	return ptr ;	181:1:4696:4706	4759485	16	True				
ANR	4759718	Identifier	ptr		4759485	0					
ANR	4759719	ReturnType	FILEXML *		4759485	1					
ANR	4759720	Identifier	FILEXML :: createInstanceXML		4759485	2					
ANR	4759721	ParameterList			4759485	3					
ANR	4759722	CFGEntryNode	ENTRY		4759485		True				
ANR	4759723	CFGExitNode	EXIT		4759485		True				
ANR	4759724	Symbol	malloc		4759485						
ANR	4759725	Symbol	NULL		4759485						
ANR	4759726	Symbol	get_mySubSystem ( ) -> getName		4759485						
ANR	4759727	Symbol	outfilename		4759485						
ANR	4759728	Symbol	* get_mySubSystem		4759485						
ANR	4759729	Symbol	daemon_name		4759485						
ANR	4759730	Symbol	O_CREAT		4759485						
ANR	4759731	Symbol	ptr -> file_open		4759485						
ANR	4759732	Symbol	tmpParamName		4759485						
ANR	4759733	Symbol	false		4759485						
ANR	4759734	Symbol	D_ALWAYS		4759485						
ANR	4759735	Symbol	param_boolean		4759485						
ANR	4759736	Symbol	want_xml_log		4759485						
ANR	4759737	Symbol	QUILL_FAILURE		4759485						
ANR	4759738	Symbol	O_APPEND		4759485						
ANR	4759739	Symbol	ptr		4759485						
ANR	4759740	Symbol	strlen		4759485						
ANR	4759741	Symbol	param		4759485						
ANR	4759742	Symbol	tmp		4759485						
ANR	4759743	Symbol	true		4759485						
ANR	4759744	Symbol	* ptr		4759485						
ANR	4759745	Symbol	O_WRONLY		4759485						
ANR	4759746	Symbol	get_mySubSystem		4759485						
