command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3637031	File	data/converged/CVE-2011-4930_htcondor/src_condor_procd_procd_ctl.cpp								
ANR	3637032	DeclStmt									
ANR	3637033	Decl							int	"int ( ProcFamilyClient & pfc , int argc , char * argv [ ] )"	register_family
ANR	3637034	DeclStmt									
ANR	3637035	Decl							int	"int ( ProcFamilyClient & pfc , int argc , char * argv [ ] )"	track_by_associated_gid
ANR	3637036	DeclStmt									
ANR	3637037	Decl							int	"int ( ProcFamilyClient & pfc , int argc , char * argv [ ] )"	track_by_associated_cgroup
ANR	3637038	DeclStmt									
ANR	3637039	Decl							int	"int ( ProcFamilyClient & pfc , int argc , char * argv [ ] )"	get_usage
ANR	3637040	DeclStmt									
ANR	3637041	Decl							int	"int ( ProcFamilyClient & pfc , int argc , char * argv [ ] )"	dump
ANR	3637042	DeclStmt									
ANR	3637043	Decl							int	"int ( ProcFamilyClient & pfc , int argc , char * argv [ ] )"	list
ANR	3637044	DeclStmt									
ANR	3637045	Decl							int	"int ( ProcFamilyClient & pfc , int argc , char * argv [ ] )"	signal_process
ANR	3637046	DeclStmt									
ANR	3637047	Decl							int	"int ( ProcFamilyClient & pfc , int argc , char * argv [ ] )"	suspend_family
ANR	3637048	DeclStmt									
ANR	3637049	Decl							int	"int ( ProcFamilyClient & pfc , int argc , char * argv [ ] )"	continue_family
ANR	3637050	DeclStmt									
ANR	3637051	Decl							int	"int ( ProcFamilyClient & pfc , int argc , char * argv [ ] )"	kill_family
ANR	3637052	DeclStmt									
ANR	3637053	Decl							int	"int ( ProcFamilyClient & pfc , int argc , char * argv [ ] )"	unregister_family
ANR	3637054	DeclStmt									
ANR	3637055	Decl							int	"int ( ProcFamilyClient & pfc , int argc , char * argv [ ] )"	snapshot
ANR	3637056	DeclStmt									
ANR	3637057	Decl							int	"int ( ProcFamilyClient & pfc , int argc , char * argv [ ] )"	quit
ANR	3637058	Function	list_commands	41:0:1875:2731							
ANR	3637059	FunctionDef	list_commands ()		3637058	0					
ANR	3637060	CompoundStatement		43:0:1903:2731	3637058	0					
ANR	3637061	ExpressionStatement	"fprintf ( stderr , ""  options:\\n"" )"	44:1:1906:1937	3637058	0	True				
ANR	3637062	CallExpression	"fprintf ( stderr , ""  options:\\n"" )"		3637058	0					
ANR	3637063	Callee	fprintf		3637058	0					
ANR	3637064	Identifier	fprintf		3637058	0					
ANR	3637065	ArgumentList	stderr		3637058	1					
ANR	3637066	Argument	stderr		3637058	0					
ANR	3637067	Identifier	stderr		3637058	0					
ANR	3637068	Argument	"""  options:\\n"""		3637058	1					
ANR	3637069	PrimaryExpression	"""  options:\\n"""		3637058	0					
ANR	3637070	ExpressionStatement	"fprintf ( stderr , ""    -h\\n"" )"	45:1:1940:1967	3637058	1	True				
ANR	3637071	CallExpression	"fprintf ( stderr , ""    -h\\n"" )"		3637058	0					
ANR	3637072	Callee	fprintf		3637058	0					
ANR	3637073	Identifier	fprintf		3637058	0					
ANR	3637074	ArgumentList	stderr		3637058	1					
ANR	3637075	Argument	stderr		3637058	0					
ANR	3637076	Identifier	stderr		3637058	0					
ANR	3637077	Argument	"""    -h\\n"""		3637058	1					
ANR	3637078	PrimaryExpression	"""    -h\\n"""		3637058	0					
ANR	3637079	ExpressionStatement	"fprintf ( stderr , ""    -A <procd address file>\\n"" )"	46:1:1970:2018	3637058	2	True				
ANR	3637080	CallExpression	"fprintf ( stderr , ""    -A <procd address file>\\n"" )"		3637058	0					
ANR	3637081	Callee	fprintf		3637058	0					
ANR	3637082	Identifier	fprintf		3637058	0					
ANR	3637083	ArgumentList	stderr		3637058	1					
ANR	3637084	Argument	stderr		3637058	0					
ANR	3637085	Identifier	stderr		3637058	0					
ANR	3637086	Argument	"""    -A <procd address file>\\n"""		3637058	1					
ANR	3637087	PrimaryExpression	"""    -A <procd address file>\\n"""		3637058	0					
ANR	3637088	ExpressionStatement	"fprintf ( stderr , ""  commands:\\n"" )"	47:1:2021:2053	3637058	3	True				
ANR	3637089	CallExpression	"fprintf ( stderr , ""  commands:\\n"" )"		3637058	0					
ANR	3637090	Callee	fprintf		3637058	0					
ANR	3637091	Identifier	fprintf		3637058	0					
ANR	3637092	ArgumentList	stderr		3637058	1					
ANR	3637093	Argument	stderr		3637058	0					
ANR	3637094	Identifier	stderr		3637058	0					
ANR	3637095	Argument	"""  commands:\\n"""		3637058	1					
ANR	3637096	PrimaryExpression	"""  commands:\\n"""		3637058	0					
ANR	3637097	ExpressionStatement	"fprintf ( stderr , ""    REGISTER_FAMILY <pid> <watcher_pid> <max_snapshot_interval>\\n"" )"	48:1:2056:2142	3637058	4	True				
ANR	3637098	CallExpression	"fprintf ( stderr , ""    REGISTER_FAMILY <pid> <watcher_pid> <max_snapshot_interval>\\n"" )"		3637058	0					
ANR	3637099	Callee	fprintf		3637058	0					
ANR	3637100	Identifier	fprintf		3637058	0					
ANR	3637101	ArgumentList	stderr		3637058	1					
ANR	3637102	Argument	stderr		3637058	0					
ANR	3637103	Identifier	stderr		3637058	0					
ANR	3637104	Argument	"""    REGISTER_FAMILY <pid> <watcher_pid> <max_snapshot_interval>\\n"""		3637058	1					
ANR	3637105	PrimaryExpression	"""    REGISTER_FAMILY <pid> <watcher_pid> <max_snapshot_interval>\\n"""		3637058	0					
ANR	3637106	ExpressionStatement	"fprintf ( stderr , ""    TRACK_BY_ASSOCIATED_GID <gid> [<pid>]\\n"" )"	50:1:2145:2207	3637058	5	True				
ANR	3637107	CallExpression	"fprintf ( stderr , ""    TRACK_BY_ASSOCIATED_GID <gid> [<pid>]\\n"" )"		3637058	0					
ANR	3637108	Callee	fprintf		3637058	0					
ANR	3637109	Identifier	fprintf		3637058	0					
ANR	3637110	ArgumentList	stderr		3637058	1					
ANR	3637111	Argument	stderr		3637058	0					
ANR	3637112	Identifier	stderr		3637058	0					
ANR	3637113	Argument	"""    TRACK_BY_ASSOCIATED_GID <gid> [<pid>]\\n"""		3637058	1					
ANR	3637114	PrimaryExpression	"""    TRACK_BY_ASSOCIATED_GID <gid> [<pid>]\\n"""		3637058	0					
ANR	3637115	ExpressionStatement	"fprintf ( stderr , ""    TRACK_BY_ASSOCIATED_CGROUP <cgroup> [<pid>]\\n"" )"	51:1:2210:2278	3637058	6	True				
ANR	3637116	CallExpression	"fprintf ( stderr , ""    TRACK_BY_ASSOCIATED_CGROUP <cgroup> [<pid>]\\n"" )"		3637058	0					
ANR	3637117	Callee	fprintf		3637058	0					
ANR	3637118	Identifier	fprintf		3637058	0					
ANR	3637119	ArgumentList	stderr		3637058	1					
ANR	3637120	Argument	stderr		3637058	0					
ANR	3637121	Identifier	stderr		3637058	0					
ANR	3637122	Argument	"""    TRACK_BY_ASSOCIATED_CGROUP <cgroup> [<pid>]\\n"""		3637058	1					
ANR	3637123	PrimaryExpression	"""    TRACK_BY_ASSOCIATED_CGROUP <cgroup> [<pid>]\\n"""		3637058	0					
ANR	3637124	ExpressionStatement	"fprintf ( stderr , ""    GET_USAGE [<pid>]\\n"" )"	52:1:2281:2323	3637058	7	True				
ANR	3637125	CallExpression	"fprintf ( stderr , ""    GET_USAGE [<pid>]\\n"" )"		3637058	0					
ANR	3637126	Callee	fprintf		3637058	0					
ANR	3637127	Identifier	fprintf		3637058	0					
ANR	3637128	ArgumentList	stderr		3637058	1					
ANR	3637129	Argument	stderr		3637058	0					
ANR	3637130	Identifier	stderr		3637058	0					
ANR	3637131	Argument	"""    GET_USAGE [<pid>]\\n"""		3637058	1					
ANR	3637132	PrimaryExpression	"""    GET_USAGE [<pid>]\\n"""		3637058	0					
ANR	3637133	ExpressionStatement	"fprintf ( stderr , ""    DUMP [<pid>]\\n"" )"	53:1:2326:2363	3637058	8	True				
ANR	3637134	CallExpression	"fprintf ( stderr , ""    DUMP [<pid>]\\n"" )"		3637058	0					
ANR	3637135	Callee	fprintf		3637058	0					
ANR	3637136	Identifier	fprintf		3637058	0					
ANR	3637137	ArgumentList	stderr		3637058	1					
ANR	3637138	Argument	stderr		3637058	0					
ANR	3637139	Identifier	stderr		3637058	0					
ANR	3637140	Argument	"""    DUMP [<pid>]\\n"""		3637058	1					
ANR	3637141	PrimaryExpression	"""    DUMP [<pid>]\\n"""		3637058	0					
ANR	3637142	ExpressionStatement	"fprintf ( stderr , ""    LIST [<pid>]\\n"" )"	54:1:2366:2403	3637058	9	True				
ANR	3637143	CallExpression	"fprintf ( stderr , ""    LIST [<pid>]\\n"" )"		3637058	0					
ANR	3637144	Callee	fprintf		3637058	0					
ANR	3637145	Identifier	fprintf		3637058	0					
ANR	3637146	ArgumentList	stderr		3637058	1					
ANR	3637147	Argument	stderr		3637058	0					
ANR	3637148	Identifier	stderr		3637058	0					
ANR	3637149	Argument	"""    LIST [<pid>]\\n"""		3637058	1					
ANR	3637150	PrimaryExpression	"""    LIST [<pid>]\\n"""		3637058	0					
ANR	3637151	ExpressionStatement	"fprintf ( stderr , ""    SIGNAL_PROCESS <signal> [<pid>]\\n"" )"	55:1:2406:2462	3637058	10	True				
ANR	3637152	CallExpression	"fprintf ( stderr , ""    SIGNAL_PROCESS <signal> [<pid>]\\n"" )"		3637058	0					
ANR	3637153	Callee	fprintf		3637058	0					
ANR	3637154	Identifier	fprintf		3637058	0					
ANR	3637155	ArgumentList	stderr		3637058	1					
ANR	3637156	Argument	stderr		3637058	0					
ANR	3637157	Identifier	stderr		3637058	0					
ANR	3637158	Argument	"""    SIGNAL_PROCESS <signal> [<pid>]\\n"""		3637058	1					
ANR	3637159	PrimaryExpression	"""    SIGNAL_PROCESS <signal> [<pid>]\\n"""		3637058	0					
ANR	3637160	ExpressionStatement	"fprintf ( stderr , ""    SUSPEND_FAMILY [<pid>]\\n"" )"	56:1:2465:2512	3637058	11	True				
ANR	3637161	CallExpression	"fprintf ( stderr , ""    SUSPEND_FAMILY [<pid>]\\n"" )"		3637058	0					
ANR	3637162	Callee	fprintf		3637058	0					
ANR	3637163	Identifier	fprintf		3637058	0					
ANR	3637164	ArgumentList	stderr		3637058	1					
ANR	3637165	Argument	stderr		3637058	0					
ANR	3637166	Identifier	stderr		3637058	0					
ANR	3637167	Argument	"""    SUSPEND_FAMILY [<pid>]\\n"""		3637058	1					
ANR	3637168	PrimaryExpression	"""    SUSPEND_FAMILY [<pid>]\\n"""		3637058	0					
ANR	3637169	ExpressionStatement	"fprintf ( stderr , ""    CONTINUE_FAMILY [<pid>]\\n"" )"	57:1:2515:2563	3637058	12	True				
ANR	3637170	CallExpression	"fprintf ( stderr , ""    CONTINUE_FAMILY [<pid>]\\n"" )"		3637058	0					
ANR	3637171	Callee	fprintf		3637058	0					
ANR	3637172	Identifier	fprintf		3637058	0					
ANR	3637173	ArgumentList	stderr		3637058	1					
ANR	3637174	Argument	stderr		3637058	0					
ANR	3637175	Identifier	stderr		3637058	0					
ANR	3637176	Argument	"""    CONTINUE_FAMILY [<pid>]\\n"""		3637058	1					
ANR	3637177	PrimaryExpression	"""    CONTINUE_FAMILY [<pid>]\\n"""		3637058	0					
ANR	3637178	ExpressionStatement	"fprintf ( stderr , ""    KILL_FAMILY [<pid>]\\n"" )"	58:1:2566:2610	3637058	13	True				
ANR	3637179	CallExpression	"fprintf ( stderr , ""    KILL_FAMILY [<pid>]\\n"" )"		3637058	0					
ANR	3637180	Callee	fprintf		3637058	0					
ANR	3637181	Identifier	fprintf		3637058	0					
ANR	3637182	ArgumentList	stderr		3637058	1					
ANR	3637183	Argument	stderr		3637058	0					
ANR	3637184	Identifier	stderr		3637058	0					
ANR	3637185	Argument	"""    KILL_FAMILY [<pid>]\\n"""		3637058	1					
ANR	3637186	PrimaryExpression	"""    KILL_FAMILY [<pid>]\\n"""		3637058	0					
ANR	3637187	ExpressionStatement	"fprintf ( stderr , ""    UNREGISTER_FAMILY <pid>\\n"" )"	59:1:2613:2661	3637058	14	True				
ANR	3637188	CallExpression	"fprintf ( stderr , ""    UNREGISTER_FAMILY <pid>\\n"" )"		3637058	0					
ANR	3637189	Callee	fprintf		3637058	0					
ANR	3637190	Identifier	fprintf		3637058	0					
ANR	3637191	ArgumentList	stderr		3637058	1					
ANR	3637192	Argument	stderr		3637058	0					
ANR	3637193	Identifier	stderr		3637058	0					
ANR	3637194	Argument	"""    UNREGISTER_FAMILY <pid>\\n"""		3637058	1					
ANR	3637195	PrimaryExpression	"""    UNREGISTER_FAMILY <pid>\\n"""		3637058	0					
ANR	3637196	ExpressionStatement	"fprintf ( stderr , ""    SNAPSHOT\\n"" )"	60:1:2664:2697	3637058	15	True				
ANR	3637197	CallExpression	"fprintf ( stderr , ""    SNAPSHOT\\n"" )"		3637058	0					
ANR	3637198	Callee	fprintf		3637058	0					
ANR	3637199	Identifier	fprintf		3637058	0					
ANR	3637200	ArgumentList	stderr		3637058	1					
ANR	3637201	Argument	stderr		3637058	0					
ANR	3637202	Identifier	stderr		3637058	0					
ANR	3637203	Argument	"""    SNAPSHOT\\n"""		3637058	1					
ANR	3637204	PrimaryExpression	"""    SNAPSHOT\\n"""		3637058	0					
ANR	3637205	ExpressionStatement	"fprintf ( stderr , ""    QUIT\\n"" )"	61:1:2700:2729	3637058	16	True				
ANR	3637206	CallExpression	"fprintf ( stderr , ""    QUIT\\n"" )"		3637058	0					
ANR	3637207	Callee	fprintf		3637058	0					
ANR	3637208	Identifier	fprintf		3637058	0					
ANR	3637209	ArgumentList	stderr		3637058	1					
ANR	3637210	Argument	stderr		3637058	0					
ANR	3637211	Identifier	stderr		3637058	0					
ANR	3637212	Argument	"""    QUIT\\n"""		3637058	1					
ANR	3637213	PrimaryExpression	"""    QUIT\\n"""		3637058	0					
ANR	3637214	ReturnType	static void		3637058	1					
ANR	3637215	Identifier	list_commands		3637058	2					
ANR	3637216	ParameterList			3637058	3					
ANR	3637217	CFGEntryNode	ENTRY		3637058		True				
ANR	3637218	CFGExitNode	EXIT		3637058		True				
ANR	3637219	Symbol	stderr		3637058						
ANR	3637220	Function	main	64:0:2734:6265							
ANR	3637221	FunctionDef	"main (int argc , char * argv [ ])"		3637220	0					
ANR	3637222	CompoundStatement		66:0:2767:6265	3637220	0					
ANR	3637223	IdentifierDeclStatement	char * procd_address = NULL ;	67:1:2770:2796	3637220	0	True				
ANR	3637224	IdentifierDecl	* procd_address = NULL		3637220	0					
ANR	3637225	IdentifierDeclType	char *		3637220	0					
ANR	3637226	Identifier	procd_address		3637220	1					
ANR	3637227	AssignmentExpression	* procd_address = NULL		3637220	2		=			
ANR	3637228	Identifier	NULL		3637220	0					
ANR	3637229	Identifier	NULL		3637220	1					
ANR	3637230	ExpressionStatement	"myDistro -> Init ( argc , argv )"	68:1:2799:2825	3637220	1	True				
ANR	3637231	CallExpression	"myDistro -> Init ( argc , argv )"		3637220	0					
ANR	3637232	Callee	myDistro -> Init		3637220	0					
ANR	3637233	PtrMemberAccess	myDistro -> Init		3637220	0					
ANR	3637234	Identifier	myDistro		3637220	0					
ANR	3637235	Identifier	Init		3637220	1					
ANR	3637236	ArgumentList	argc		3637220	1					
ANR	3637237	Argument	argc		3637220	0					
ANR	3637238	Identifier	argc		3637220	0					
ANR	3637239	Argument	argv		3637220	1					
ANR	3637240	Identifier	argv		3637220	0					
ANR	3637241	IfStatement	if ( argc < 2 )		3637220	2					
ANR	3637242	Condition	argc < 2	70:5:2833:2840	3637220	0	True				
ANR	3637243	RelationalExpression	argc < 2		3637220	0		<			
ANR	3637244	Identifier	argc		3637220	0					
ANR	3637245	PrimaryExpression	2		3637220	1					
ANR	3637246	CompoundStatement		5:15:75:75	3637220	1					
ANR	3637247	ExpressionStatement	"fprintf ( stderr , ""Usage: %s <options w/arguments> <command> [<arg> ...]\\n"" , argv [ 0 ] )"	71:2:2847:2937	3637220	0	True				
ANR	3637248	CallExpression	"fprintf ( stderr , ""Usage: %s <options w/arguments> <command> [<arg> ...]\\n"" , argv [ 0 ] )"		3637220	0					
ANR	3637249	Callee	fprintf		3637220	0					
ANR	3637250	Identifier	fprintf		3637220	0					
ANR	3637251	ArgumentList	stderr		3637220	1					
ANR	3637252	Argument	stderr		3637220	0					
ANR	3637253	Identifier	stderr		3637220	0					
ANR	3637254	Argument	"""Usage: %s <options w/arguments> <command> [<arg> ...]\\n"""		3637220	1					
ANR	3637255	PrimaryExpression	"""Usage: %s <options w/arguments> <command> [<arg> ...]\\n"""		3637220	0					
ANR	3637256	Argument	argv [ 0 ]		3637220	2					
ANR	3637257	ArrayIndexing	argv [ 0 ]		3637220	0					
ANR	3637258	Identifier	argv		3637220	0					
ANR	3637259	PrimaryExpression	0		3637220	1					
ANR	3637260	ExpressionStatement	list_commands ( )	74:2:2941:2956	3637220	1	True				
ANR	3637261	CallExpression	list_commands ( )		3637220	0					
ANR	3637262	Callee	list_commands		3637220	0					
ANR	3637263	Identifier	list_commands		3637220	0					
ANR	3637264	ArgumentList			3637220	1					
ANR	3637265	ReturnStatement	return 1 ;	75:2:2960:2968	3637220	2	True				
ANR	3637266	PrimaryExpression	1		3637220	0					
ANR	3637267	ExpressionStatement	config ( )	78:1:2975:2983	3637220	3	True				
ANR	3637268	CallExpression	config ( )		3637220	0					
ANR	3637269	Callee	config		3637220	0					
ANR	3637270	Identifier	config		3637220	0					
ANR	3637271	ArgumentList			3637220	1					
ANR	3637272	ExpressionStatement	Termlog = 1	79:1:2986:2997	3637220	4	True				
ANR	3637273	AssignmentExpression	Termlog = 1		3637220	0		=			
ANR	3637274	Identifier	Termlog		3637220	0					
ANR	3637275	PrimaryExpression	1		3637220	1					
ANR	3637276	ExpressionStatement	"dprintf_config ( ""TOOL"" , get_param_functions ( ) )"	80:1:3000:3045	3637220	5	True				
ANR	3637277	CallExpression	"dprintf_config ( ""TOOL"" , get_param_functions ( ) )"		3637220	0					
ANR	3637278	Callee	dprintf_config		3637220	0					
ANR	3637279	Identifier	dprintf_config		3637220	0					
ANR	3637280	ArgumentList	"""TOOL"""		3637220	1					
ANR	3637281	Argument	"""TOOL"""		3637220	0					
ANR	3637282	PrimaryExpression	"""TOOL"""		3637220	0					
ANR	3637283	Argument	get_param_functions ( )		3637220	1					
ANR	3637284	CallExpression	get_param_functions ( )		3637220	0					
ANR	3637285	Callee	get_param_functions		3637220	0					
ANR	3637286	Identifier	get_param_functions		3637220	0					
ANR	3637287	ArgumentList			3637220	1					
ANR	3637288	IdentifierDeclStatement	int cmd_argc = argc - 1 ;	82:1:3049:3072	3637220	6	True				
ANR	3637289	IdentifierDecl	cmd_argc = argc - 1		3637220	0					
ANR	3637290	IdentifierDeclType	int		3637220	0					
ANR	3637291	Identifier	cmd_argc		3637220	1					
ANR	3637292	AssignmentExpression	cmd_argc = argc - 1		3637220	2		=			
ANR	3637293	Identifier	cmd_argc		3637220	0					
ANR	3637294	AdditiveExpression	argc - 1		3637220	1		-			
ANR	3637295	Identifier	argc		3637220	0					
ANR	3637296	PrimaryExpression	1		3637220	1					
ANR	3637297	IdentifierDeclStatement	char * * cmd_argv = argv + 1 ;	83:1:3075:3101	3637220	7	True				
ANR	3637298	IdentifierDecl	* * cmd_argv = argv + 1		3637220	0					
ANR	3637299	IdentifierDeclType	char * *		3637220	0					
ANR	3637300	Identifier	cmd_argv		3637220	1					
ANR	3637301	AssignmentExpression	* * cmd_argv = argv + 1		3637220	2		=			
ANR	3637302	Identifier	cmd_argv		3637220	0					
ANR	3637303	AdditiveExpression	argv + 1		3637220	1		+			
ANR	3637304	Identifier	argv		3637220	0					
ANR	3637305	PrimaryExpression	1		3637220	1					
ANR	3637306	WhileStatement	while ( cmd_argv [ 0 ] != NULL && cmd_argv [ 0 ] [ 0 ] == '-' )		3637220	8					
ANR	3637307	Condition	cmd_argv [ 0 ] != NULL && cmd_argv [ 0 ] [ 0 ] == '-'	86:7:3149:3192	3637220	0	True				
ANR	3637308	AndExpression	cmd_argv [ 0 ] != NULL && cmd_argv [ 0 ] [ 0 ] == '-'		3637220	0		&&			
ANR	3637309	EqualityExpression	cmd_argv [ 0 ] != NULL		3637220	0		!=			
ANR	3637310	ArrayIndexing	cmd_argv [ 0 ]		3637220	0					
ANR	3637311	Identifier	cmd_argv		3637220	0					
ANR	3637312	PrimaryExpression	0		3637220	1					
ANR	3637313	Identifier	NULL		3637220	1					
ANR	3637314	EqualityExpression	cmd_argv [ 0 ] [ 0 ] == '-'		3637220	1		==			
ANR	3637315	ArrayIndexing	cmd_argv [ 0 ] [ 0 ]		3637220	0					
ANR	3637316	ArrayIndexing	cmd_argv [ 0 ]		3637220	0					
ANR	3637317	Identifier	cmd_argv		3637220	0					
ANR	3637318	PrimaryExpression	0		3637220	1					
ANR	3637319	PrimaryExpression	0		3637220	1					
ANR	3637320	PrimaryExpression	'-'		3637220	1					
ANR	3637321	CompoundStatement		22:1:428:428	3637220	1					
ANR	3637322	IfStatement	"if ( strcmp ( cmd_argv [ 0 ] , ""-A"" ) == MATCH )"		3637220	0					
ANR	3637323	Condition	"strcmp ( cmd_argv [ 0 ] , ""-A"" ) == MATCH"	88:6:3204:3237	3637220	0	True				
ANR	3637324	EqualityExpression	"strcmp ( cmd_argv [ 0 ] , ""-A"" ) == MATCH"		3637220	0		==			
ANR	3637325	CallExpression	"strcmp ( cmd_argv [ 0 ] , ""-A"" )"		3637220	0					
ANR	3637326	Callee	strcmp		3637220	0					
ANR	3637327	Identifier	strcmp		3637220	0					
ANR	3637328	ArgumentList	cmd_argv [ 0 ]		3637220	1					
ANR	3637329	Argument	cmd_argv [ 0 ]		3637220	0					
ANR	3637330	ArrayIndexing	cmd_argv [ 0 ]		3637220	0					
ANR	3637331	Identifier	cmd_argv		3637220	0					
ANR	3637332	PrimaryExpression	0		3637220	1					
ANR	3637333	Argument	"""-A"""		3637220	1					
ANR	3637334	PrimaryExpression	"""-A"""		3637220	0					
ANR	3637335	Identifier	MATCH		3637220	1					
ANR	3637336	CompoundStatement		23:42:472:472	3637220	1					
ANR	3637337	ExpressionStatement	cmd_argc --	89:3:3245:3255	3637220	0	True				
ANR	3637338	PostIncDecOperationExpression	cmd_argc --		3637220	0					
ANR	3637339	Identifier	cmd_argc		3637220	0					
ANR	3637340	IncDec	--		3637220	1					
ANR	3637341	ExpressionStatement	cmd_argv ++	90:3:3260:3270	3637220	1	True				
ANR	3637342	PostIncDecOperationExpression	cmd_argv ++		3637220	0					
ANR	3637343	Identifier	cmd_argv		3637220	0					
ANR	3637344	IncDec	++		3637220	1					
ANR	3637345	IfStatement	if ( cmd_argc == 0 )		3637220	2					
ANR	3637346	Condition	cmd_argc == 0	91:7:3279:3291	3637220	0	True				
ANR	3637347	EqualityExpression	cmd_argc == 0		3637220	0		==			
ANR	3637348	Identifier	cmd_argc		3637220	0					
ANR	3637349	PrimaryExpression	0		3637220	1					
ANR	3637350	CompoundStatement		26:22:526:526	3637220	1					
ANR	3637351	ExpressionStatement	"fprintf ( stderr , ""error: -A needs an argument\\n"" )"	92:4:3300:3348	3637220	0	True				
ANR	3637352	CallExpression	"fprintf ( stderr , ""error: -A needs an argument\\n"" )"		3637220	0					
ANR	3637353	Callee	fprintf		3637220	0					
ANR	3637354	Identifier	fprintf		3637220	0					
ANR	3637355	ArgumentList	stderr		3637220	1					
ANR	3637356	Argument	stderr		3637220	0					
ANR	3637357	Identifier	stderr		3637220	0					
ANR	3637358	Argument	"""error: -A needs an argument\\n"""		3637220	1					
ANR	3637359	PrimaryExpression	"""error: -A needs an argument\\n"""		3637220	0					
ANR	3637360	ExpressionStatement	list_commands ( )	93:4:3354:3369	3637220	1	True				
ANR	3637361	CallExpression	list_commands ( )		3637220	0					
ANR	3637362	Callee	list_commands		3637220	0					
ANR	3637363	Identifier	list_commands		3637220	0					
ANR	3637364	ArgumentList			3637220	1					
ANR	3637365	ReturnStatement	return 1 ;	94:4:3375:3383	3637220	2	True				
ANR	3637366	PrimaryExpression	1		3637220	0					
ANR	3637367	ExpressionStatement	procd_address = cmd_argv [ 0 ]	97:3:3447:3474	3637220	3	True				
ANR	3637368	AssignmentExpression	procd_address = cmd_argv [ 0 ]		3637220	0		=			
ANR	3637369	Identifier	procd_address		3637220	0					
ANR	3637370	ArrayIndexing	cmd_argv [ 0 ]		3637220	1					
ANR	3637371	Identifier	cmd_argv		3637220	0					
ANR	3637372	PrimaryExpression	0		3637220	1					
ANR	3637373	ExpressionStatement	cmd_argc --	98:3:3479:3489	3637220	4	True				
ANR	3637374	PostIncDecOperationExpression	cmd_argc --		3637220	0					
ANR	3637375	Identifier	cmd_argc		3637220	0					
ANR	3637376	IncDec	--		3637220	1					
ANR	3637377	ExpressionStatement	cmd_argv ++	99:3:3494:3504	3637220	5	True				
ANR	3637378	PostIncDecOperationExpression	cmd_argv ++		3637220	0					
ANR	3637379	Identifier	cmd_argv		3637220	0					
ANR	3637380	IncDec	++		3637220	1					
ANR	3637381	ContinueStatement	continue ;	100:3:3509:3517	3637220	6	True				
ANR	3637382	ElseStatement	else		3637220	0					
ANR	3637383	IfStatement	"if ( strcmp ( cmd_argv [ 0 ] , ""-h"" ) == MATCH )"		3637220	0					
ANR	3637384	Condition	"strcmp ( cmd_argv [ 0 ] , ""-h"" ) == MATCH"	101:13:3532:3565	3637220	0	True				
ANR	3637385	EqualityExpression	"strcmp ( cmd_argv [ 0 ] , ""-h"" ) == MATCH"		3637220	0		==			
ANR	3637386	CallExpression	"strcmp ( cmd_argv [ 0 ] , ""-h"" )"		3637220	0					
ANR	3637387	Callee	strcmp		3637220	0					
ANR	3637388	Identifier	strcmp		3637220	0					
ANR	3637389	ArgumentList	cmd_argv [ 0 ]		3637220	1					
ANR	3637390	Argument	cmd_argv [ 0 ]		3637220	0					
ANR	3637391	ArrayIndexing	cmd_argv [ 0 ]		3637220	0					
ANR	3637392	Identifier	cmd_argv		3637220	0					
ANR	3637393	PrimaryExpression	0		3637220	1					
ANR	3637394	Argument	"""-h"""		3637220	1					
ANR	3637395	PrimaryExpression	"""-h"""		3637220	0					
ANR	3637396	Identifier	MATCH		3637220	1					
ANR	3637397	CompoundStatement		36:49:800:800	3637220	1					
ANR	3637398	ExpressionStatement	cmd_argc --	102:3:3573:3583	3637220	0	True				
ANR	3637399	PostIncDecOperationExpression	cmd_argc --		3637220	0					
ANR	3637400	Identifier	cmd_argc		3637220	0					
ANR	3637401	IncDec	--		3637220	1					
ANR	3637402	ExpressionStatement	cmd_argv ++	103:3:3588:3598	3637220	1	True				
ANR	3637403	PostIncDecOperationExpression	cmd_argv ++		3637220	0					
ANR	3637404	Identifier	cmd_argv		3637220	0					
ANR	3637405	IncDec	++		3637220	1					
ANR	3637406	ExpressionStatement	"fprintf ( stderr , ""Usage: %s <options w/arguments> <command> [<arg> ...]\\n"" , argv [ 0 ] )"	104:3:3603:3695	3637220	2	True				
ANR	3637407	CallExpression	"fprintf ( stderr , ""Usage: %s <options w/arguments> <command> [<arg> ...]\\n"" , argv [ 0 ] )"		3637220	0					
ANR	3637408	Callee	fprintf		3637220	0					
ANR	3637409	Identifier	fprintf		3637220	0					
ANR	3637410	ArgumentList	stderr		3637220	1					
ANR	3637411	Argument	stderr		3637220	0					
ANR	3637412	Identifier	stderr		3637220	0					
ANR	3637413	Argument	"""Usage: %s <options w/arguments> <command> [<arg> ...]\\n"""		3637220	1					
ANR	3637414	PrimaryExpression	"""Usage: %s <options w/arguments> <command> [<arg> ...]\\n"""		3637220	0					
ANR	3637415	Argument	argv [ 0 ]		3637220	2					
ANR	3637416	ArrayIndexing	argv [ 0 ]		3637220	0					
ANR	3637417	Identifier	argv		3637220	0					
ANR	3637418	PrimaryExpression	0		3637220	1					
ANR	3637419	ExpressionStatement	list_commands ( )	107:3:3700:3715	3637220	3	True				
ANR	3637420	CallExpression	list_commands ( )		3637220	0					
ANR	3637421	Callee	list_commands		3637220	0					
ANR	3637422	Identifier	list_commands		3637220	0					
ANR	3637423	ArgumentList			3637220	1					
ANR	3637424	ReturnStatement	return 1 ;	108:3:3720:3728	3637220	4	True				
ANR	3637425	PrimaryExpression	1		3637220	0					
ANR	3637426	ContinueStatement	continue ;	109:3:3733:3741	3637220	5	True				
ANR	3637427	ExpressionStatement	"fprintf ( stderr , ""error: Don't understand option %s\\n"" , cmd_argv [ 0 ] )"	113:2:3819:3886	3637220	1	True				
ANR	3637428	CallExpression	"fprintf ( stderr , ""error: Don't understand option %s\\n"" , cmd_argv [ 0 ] )"		3637220	0					
ANR	3637429	Callee	fprintf		3637220	0					
ANR	3637430	Identifier	fprintf		3637220	0					
ANR	3637431	ArgumentList	stderr		3637220	1					
ANR	3637432	Argument	stderr		3637220	0					
ANR	3637433	Identifier	stderr		3637220	0					
ANR	3637434	Argument	"""error: Don't understand option %s\\n"""		3637220	1					
ANR	3637435	PrimaryExpression	"""error: Don't understand option %s\\n"""		3637220	0					
ANR	3637436	Argument	cmd_argv [ 0 ]		3637220	2					
ANR	3637437	ArrayIndexing	cmd_argv [ 0 ]		3637220	0					
ANR	3637438	Identifier	cmd_argv		3637220	0					
ANR	3637439	PrimaryExpression	0		3637220	1					
ANR	3637440	ExpressionStatement	list_commands ( )	114:2:3890:3905	3637220	2	True				
ANR	3637441	CallExpression	list_commands ( )		3637220	0					
ANR	3637442	Callee	list_commands		3637220	0					
ANR	3637443	Identifier	list_commands		3637220	0					
ANR	3637444	ArgumentList			3637220	1					
ANR	3637445	ReturnStatement	return 1 ;	115:2:3909:3917	3637220	3	True				
ANR	3637446	PrimaryExpression	1		3637220	0					
ANR	3637447	IfStatement	if ( cmd_argc == 0 )		3637220	9					
ANR	3637448	Condition	cmd_argc == 0	120:5:4055:4067	3637220	0	True				
ANR	3637449	EqualityExpression	cmd_argc == 0		3637220	0		==			
ANR	3637450	Identifier	cmd_argc		3637220	0					
ANR	3637451	PrimaryExpression	0		3637220	1					
ANR	3637452	CompoundStatement		55:20:1302:1302	3637220	1					
ANR	3637453	Statement	fprintf	121:2:4074:4080	3637220	0	True				
ANR	3637454	Statement	(	121:9:4081:4081	3637220	1	True				
ANR	3637455	Statement	stderr	121:10:4082:4087	3637220	2	True				
ANR	3637456	Statement	","	121:16:4088:4088	3637220	3	True				
ANR	3637457	Statement	"""Please specify a command.\\n"""	122:3:4094:4122	3637220	4	True				
ANR	3637458	Statement	"""Usage: %s <options w/arguments> <command> [<arg> ...]\\n"""	123:3:4127:4183	3637220	5	True				
ANR	3637459	Statement	","	123:60:4184:4184	3637220	6	True				
ANR	3637460	Statement	argv	124:3:4189:4192	3637220	7	True				
ANR	3637461	Statement	[	124:7:4193:4193	3637220	8	True				
ANR	3637462	Statement	0	124:8:4194:4194	3637220	9	True				
ANR	3637463	Statement	]	124:9:4195:4195	3637220	10	True				
ANR	3637464	Statement	)	124:10:4196:4196	3637220	11	True				
ANR	3637465	ExpressionStatement		124:11:4197:4197	3637220	12	True				
ANR	3637466	ExpressionStatement	list_commands ( )	125:2:4201:4216	3637220	13	True				
ANR	3637467	CallExpression	list_commands ( )		3637220	0					
ANR	3637468	Callee	list_commands		3637220	0					
ANR	3637469	Identifier	list_commands		3637220	0					
ANR	3637470	ArgumentList			3637220	1					
ANR	3637471	ReturnStatement	return 1 ;	126:2:4220:4228	3637220	14	True				
ANR	3637472	PrimaryExpression	1		3637220	0					
ANR	3637473	IfStatement	if ( procd_address == NULL )		3637220	10					
ANR	3637474	Condition	procd_address == NULL	131:5:4353:4373	3637220	0	True				
ANR	3637475	EqualityExpression	procd_address == NULL		3637220	0		==			
ANR	3637476	Identifier	procd_address		3637220	0					
ANR	3637477	Identifier	NULL		3637220	1					
ANR	3637478	CompoundStatement		66:28:1608:1608	3637220	1					
ANR	3637479	ExpressionStatement	"procd_address = param ( ""PROCD_ADDRESS"" )"	132:2:4380:4418	3637220	0	True				
ANR	3637480	AssignmentExpression	"procd_address = param ( ""PROCD_ADDRESS"" )"		3637220	0		=			
ANR	3637481	Identifier	procd_address		3637220	0					
ANR	3637482	CallExpression	"param ( ""PROCD_ADDRESS"" )"		3637220	1					
ANR	3637483	Callee	param		3637220	0					
ANR	3637484	Identifier	param		3637220	0					
ANR	3637485	ArgumentList	"""PROCD_ADDRESS"""		3637220	1					
ANR	3637486	Argument	"""PROCD_ADDRESS"""		3637220	0					
ANR	3637487	PrimaryExpression	"""PROCD_ADDRESS"""		3637220	0					
ANR	3637488	IfStatement	if ( procd_address == NULL )		3637220	1					
ANR	3637489	Condition	procd_address == NULL	133:6:4426:4446	3637220	0	True				
ANR	3637490	EqualityExpression	procd_address == NULL		3637220	0		==			
ANR	3637491	Identifier	procd_address		3637220	0					
ANR	3637492	Identifier	NULL		3637220	1					
ANR	3637493	CompoundStatement		68:29:1681:1681	3637220	1					
ANR	3637494	ExpressionStatement	"fprintf ( stderr , ""error: PROCD_ADDRESS not defined\\n"" )"	134:3:4454:4507	3637220	0	True				
ANR	3637495	CallExpression	"fprintf ( stderr , ""error: PROCD_ADDRESS not defined\\n"" )"		3637220	0					
ANR	3637496	Callee	fprintf		3637220	0					
ANR	3637497	Identifier	fprintf		3637220	0					
ANR	3637498	ArgumentList	stderr		3637220	1					
ANR	3637499	Argument	stderr		3637220	0					
ANR	3637500	Identifier	stderr		3637220	0					
ANR	3637501	Argument	"""error: PROCD_ADDRESS not defined\\n"""		3637220	1					
ANR	3637502	PrimaryExpression	"""error: PROCD_ADDRESS not defined\\n"""		3637220	0					
ANR	3637503	ReturnStatement	return 1 ;	135:3:4512:4520	3637220	1	True				
ANR	3637504	PrimaryExpression	1		3637220	0					
ANR	3637505	IdentifierDeclStatement	ProcFamilyClient pfc ;	140:1:4533:4553	3637220	11	True				
ANR	3637506	IdentifierDecl	pfc		3637220	0					
ANR	3637507	IdentifierDeclType	ProcFamilyClient		3637220	0					
ANR	3637508	Identifier	pfc		3637220	1					
ANR	3637509	IfStatement	if ( ! pfc . initialize ( procd_address ) )		3637220	12					
ANR	3637510	Condition	! pfc . initialize ( procd_address )	141:5:4560:4589	3637220	0	True				
ANR	3637511	UnaryOperationExpression	! pfc . initialize ( procd_address )		3637220	0					
ANR	3637512	UnaryOperator	!		3637220	0					
ANR	3637513	CallExpression	pfc . initialize ( procd_address )		3637220	1					
ANR	3637514	Callee	pfc . initialize		3637220	0					
ANR	3637515	MemberAccess	pfc . initialize		3637220	0					
ANR	3637516	Identifier	pfc		3637220	0					
ANR	3637517	Identifier	initialize		3637220	1					
ANR	3637518	ArgumentList	procd_address		3637220	1					
ANR	3637519	Argument	procd_address		3637220	0					
ANR	3637520	Identifier	procd_address		3637220	0					
ANR	3637521	CompoundStatement		76:37:1824:1824	3637220	1					
ANR	3637522	ExpressionStatement	"fprintf ( stderr , ""error: failed to initialize ProcD client\\n"" )"	142:2:4596:4657	3637220	0	True				
ANR	3637523	CallExpression	"fprintf ( stderr , ""error: failed to initialize ProcD client\\n"" )"		3637220	0					
ANR	3637524	Callee	fprintf		3637220	0					
ANR	3637525	Identifier	fprintf		3637220	0					
ANR	3637526	ArgumentList	stderr		3637220	1					
ANR	3637527	Argument	stderr		3637220	0					
ANR	3637528	Identifier	stderr		3637220	0					
ANR	3637529	Argument	"""error: failed to initialize ProcD client\\n"""		3637220	1					
ANR	3637530	PrimaryExpression	"""error: failed to initialize ProcD client\\n"""		3637220	0					
ANR	3637531	ReturnStatement	return 1 ;	143:2:4661:4669	3637220	1	True				
ANR	3637532	PrimaryExpression	1		3637220	0					
ANR	3637533	IfStatement	"if ( strcasecmp ( cmd_argv [ 0 ] , ""REGISTER_FAMILY"" ) == 0 )"		3637220	13					
ANR	3637534	Condition	"strcasecmp ( cmd_argv [ 0 ] , ""REGISTER_FAMILY"" ) == 0"	147:5:4736:4782	3637220	0	True				
ANR	3637535	EqualityExpression	"strcasecmp ( cmd_argv [ 0 ] , ""REGISTER_FAMILY"" ) == 0"		3637220	0		==			
ANR	3637536	CallExpression	"strcasecmp ( cmd_argv [ 0 ] , ""REGISTER_FAMILY"" )"		3637220	0					
ANR	3637537	Callee	strcasecmp		3637220	0					
ANR	3637538	Identifier	strcasecmp		3637220	0					
ANR	3637539	ArgumentList	cmd_argv [ 0 ]		3637220	1					
ANR	3637540	Argument	cmd_argv [ 0 ]		3637220	0					
ANR	3637541	ArrayIndexing	cmd_argv [ 0 ]		3637220	0					
ANR	3637542	Identifier	cmd_argv		3637220	0					
ANR	3637543	PrimaryExpression	0		3637220	1					
ANR	3637544	Argument	"""REGISTER_FAMILY"""		3637220	1					
ANR	3637545	PrimaryExpression	"""REGISTER_FAMILY"""		3637220	0					
ANR	3637546	PrimaryExpression	0		3637220	1					
ANR	3637547	CompoundStatement		82:54:2017:2017	3637220	1					
ANR	3637548	ReturnStatement	"return register_family ( pfc , cmd_argc , cmd_argv ) ;"	148:2:4789:4836	3637220	0	True				
ANR	3637549	CallExpression	"register_family ( pfc , cmd_argc , cmd_argv )"		3637220	0					
ANR	3637550	Callee	register_family		3637220	0					
ANR	3637551	Identifier	register_family		3637220	0					
ANR	3637552	ArgumentList	pfc		3637220	1					
ANR	3637553	Argument	pfc		3637220	0					
ANR	3637554	Identifier	pfc		3637220	0					
ANR	3637555	Argument	cmd_argc		3637220	1					
ANR	3637556	Identifier	cmd_argc		3637220	0					
ANR	3637557	Argument	cmd_argv		3637220	2					
ANR	3637558	Identifier	cmd_argv		3637220	0					
ANR	3637559	ElseStatement	else		3637220	0					
ANR	3637560	IfStatement	"if ( strcasecmp ( cmd_argv [ 0 ] , ""TRACK_BY_ASSOCIATED_GID"" ) == 0 )"		3637220	0					
ANR	3637561	Condition	"strcasecmp ( cmd_argv [ 0 ] , ""TRACK_BY_ASSOCIATED_GID"" ) == 0"	150:10:4851:4905	3637220	0	True				
ANR	3637562	EqualityExpression	"strcasecmp ( cmd_argv [ 0 ] , ""TRACK_BY_ASSOCIATED_GID"" ) == 0"		3637220	0		==			
ANR	3637563	CallExpression	"strcasecmp ( cmd_argv [ 0 ] , ""TRACK_BY_ASSOCIATED_GID"" )"		3637220	0					
ANR	3637564	Callee	strcasecmp		3637220	0					
ANR	3637565	Identifier	strcasecmp		3637220	0					
ANR	3637566	ArgumentList	cmd_argv [ 0 ]		3637220	1					
ANR	3637567	Argument	cmd_argv [ 0 ]		3637220	0					
ANR	3637568	ArrayIndexing	cmd_argv [ 0 ]		3637220	0					
ANR	3637569	Identifier	cmd_argv		3637220	0					
ANR	3637570	PrimaryExpression	0		3637220	1					
ANR	3637571	Argument	"""TRACK_BY_ASSOCIATED_GID"""		3637220	1					
ANR	3637572	PrimaryExpression	"""TRACK_BY_ASSOCIATED_GID"""		3637220	0					
ANR	3637573	PrimaryExpression	0		3637220	1					
ANR	3637574	CompoundStatement		85:67:2140:2140	3637220	1					
ANR	3637575	ReturnStatement	"return track_by_associated_gid ( pfc , cmd_argc , cmd_argv ) ;"	151:2:4912:4967	3637220	0	True				
ANR	3637576	CallExpression	"track_by_associated_gid ( pfc , cmd_argc , cmd_argv )"		3637220	0					
ANR	3637577	Callee	track_by_associated_gid		3637220	0					
ANR	3637578	Identifier	track_by_associated_gid		3637220	0					
ANR	3637579	ArgumentList	pfc		3637220	1					
ANR	3637580	Argument	pfc		3637220	0					
ANR	3637581	Identifier	pfc		3637220	0					
ANR	3637582	Argument	cmd_argc		3637220	1					
ANR	3637583	Identifier	cmd_argc		3637220	0					
ANR	3637584	Argument	cmd_argv		3637220	2					
ANR	3637585	Identifier	cmd_argv		3637220	0					
ANR	3637586	ElseStatement	else		3637220	0					
ANR	3637587	IfStatement	"if ( strcasecmp ( cmd_argv [ 0 ] , ""TRACK_BY_ASSOCIATED_CGROUP"" ) == 0 )"		3637220	0					
ANR	3637588	Condition	"strcasecmp ( cmd_argv [ 0 ] , ""TRACK_BY_ASSOCIATED_CGROUP"" ) == 0"	153:10:4982:5039	3637220	0	True				
ANR	3637589	EqualityExpression	"strcasecmp ( cmd_argv [ 0 ] , ""TRACK_BY_ASSOCIATED_CGROUP"" ) == 0"		3637220	0		==			
ANR	3637590	CallExpression	"strcasecmp ( cmd_argv [ 0 ] , ""TRACK_BY_ASSOCIATED_CGROUP"" )"		3637220	0					
ANR	3637591	Callee	strcasecmp		3637220	0					
ANR	3637592	Identifier	strcasecmp		3637220	0					
ANR	3637593	ArgumentList	cmd_argv [ 0 ]		3637220	1					
ANR	3637594	Argument	cmd_argv [ 0 ]		3637220	0					
ANR	3637595	ArrayIndexing	cmd_argv [ 0 ]		3637220	0					
ANR	3637596	Identifier	cmd_argv		3637220	0					
ANR	3637597	PrimaryExpression	0		3637220	1					
ANR	3637598	Argument	"""TRACK_BY_ASSOCIATED_CGROUP"""		3637220	1					
ANR	3637599	PrimaryExpression	"""TRACK_BY_ASSOCIATED_CGROUP"""		3637220	0					
ANR	3637600	PrimaryExpression	0		3637220	1					
ANR	3637601	CompoundStatement		88:70:2274:2274	3637220	1					
ANR	3637602	ReturnStatement	"return track_by_associated_cgroup ( pfc , cmd_argc , cmd_argv ) ;"	154:2:5046:5104	3637220	0	True				
ANR	3637603	CallExpression	"track_by_associated_cgroup ( pfc , cmd_argc , cmd_argv )"		3637220	0					
ANR	3637604	Callee	track_by_associated_cgroup		3637220	0					
ANR	3637605	Identifier	track_by_associated_cgroup		3637220	0					
ANR	3637606	ArgumentList	pfc		3637220	1					
ANR	3637607	Argument	pfc		3637220	0					
ANR	3637608	Identifier	pfc		3637220	0					
ANR	3637609	Argument	cmd_argc		3637220	1					
ANR	3637610	Identifier	cmd_argc		3637220	0					
ANR	3637611	Argument	cmd_argv		3637220	2					
ANR	3637612	Identifier	cmd_argv		3637220	0					
ANR	3637613	ElseStatement	else		3637220	0					
ANR	3637614	IfStatement	"if ( strcasecmp ( cmd_argv [ 0 ] , ""GET_USAGE"" ) == 0 )"		3637220	0					
ANR	3637615	Condition	"strcasecmp ( cmd_argv [ 0 ] , ""GET_USAGE"" ) == 0"	156:10:5119:5159	3637220	0	True				
ANR	3637616	EqualityExpression	"strcasecmp ( cmd_argv [ 0 ] , ""GET_USAGE"" ) == 0"		3637220	0		==			
ANR	3637617	CallExpression	"strcasecmp ( cmd_argv [ 0 ] , ""GET_USAGE"" )"		3637220	0					
ANR	3637618	Callee	strcasecmp		3637220	0					
ANR	3637619	Identifier	strcasecmp		3637220	0					
ANR	3637620	ArgumentList	cmd_argv [ 0 ]		3637220	1					
ANR	3637621	Argument	cmd_argv [ 0 ]		3637220	0					
ANR	3637622	ArrayIndexing	cmd_argv [ 0 ]		3637220	0					
ANR	3637623	Identifier	cmd_argv		3637220	0					
ANR	3637624	PrimaryExpression	0		3637220	1					
ANR	3637625	Argument	"""GET_USAGE"""		3637220	1					
ANR	3637626	PrimaryExpression	"""GET_USAGE"""		3637220	0					
ANR	3637627	PrimaryExpression	0		3637220	1					
ANR	3637628	CompoundStatement		91:53:2394:2394	3637220	1					
ANR	3637629	ReturnStatement	"return get_usage ( pfc , cmd_argc , cmd_argv ) ;"	157:2:5166:5207	3637220	0	True				
ANR	3637630	CallExpression	"get_usage ( pfc , cmd_argc , cmd_argv )"		3637220	0					
ANR	3637631	Callee	get_usage		3637220	0					
ANR	3637632	Identifier	get_usage		3637220	0					
ANR	3637633	ArgumentList	pfc		3637220	1					
ANR	3637634	Argument	pfc		3637220	0					
ANR	3637635	Identifier	pfc		3637220	0					
ANR	3637636	Argument	cmd_argc		3637220	1					
ANR	3637637	Identifier	cmd_argc		3637220	0					
ANR	3637638	Argument	cmd_argv		3637220	2					
ANR	3637639	Identifier	cmd_argv		3637220	0					
ANR	3637640	ElseStatement	else		3637220	0					
ANR	3637641	IfStatement	"if ( strcasecmp ( cmd_argv [ 0 ] , ""DUMP"" ) == 0 )"		3637220	0					
ANR	3637642	Condition	"strcasecmp ( cmd_argv [ 0 ] , ""DUMP"" ) == 0"	159:10:5222:5257	3637220	0	True				
ANR	3637643	EqualityExpression	"strcasecmp ( cmd_argv [ 0 ] , ""DUMP"" ) == 0"		3637220	0		==			
ANR	3637644	CallExpression	"strcasecmp ( cmd_argv [ 0 ] , ""DUMP"" )"		3637220	0					
ANR	3637645	Callee	strcasecmp		3637220	0					
ANR	3637646	Identifier	strcasecmp		3637220	0					
ANR	3637647	ArgumentList	cmd_argv [ 0 ]		3637220	1					
ANR	3637648	Argument	cmd_argv [ 0 ]		3637220	0					
ANR	3637649	ArrayIndexing	cmd_argv [ 0 ]		3637220	0					
ANR	3637650	Identifier	cmd_argv		3637220	0					
ANR	3637651	PrimaryExpression	0		3637220	1					
ANR	3637652	Argument	"""DUMP"""		3637220	1					
ANR	3637653	PrimaryExpression	"""DUMP"""		3637220	0					
ANR	3637654	PrimaryExpression	0		3637220	1					
ANR	3637655	CompoundStatement		94:48:2492:2492	3637220	1					
ANR	3637656	ReturnStatement	"return dump ( pfc , cmd_argc , cmd_argv ) ;"	160:2:5264:5300	3637220	0	True				
ANR	3637657	CallExpression	"dump ( pfc , cmd_argc , cmd_argv )"		3637220	0					
ANR	3637658	Callee	dump		3637220	0					
ANR	3637659	Identifier	dump		3637220	0					
ANR	3637660	ArgumentList	pfc		3637220	1					
ANR	3637661	Argument	pfc		3637220	0					
ANR	3637662	Identifier	pfc		3637220	0					
ANR	3637663	Argument	cmd_argc		3637220	1					
ANR	3637664	Identifier	cmd_argc		3637220	0					
ANR	3637665	Argument	cmd_argv		3637220	2					
ANR	3637666	Identifier	cmd_argv		3637220	0					
ANR	3637667	ElseStatement	else		3637220	0					
ANR	3637668	IfStatement	"if ( strcasecmp ( cmd_argv [ 0 ] , ""LIST"" ) == 0 )"		3637220	0					
ANR	3637669	Condition	"strcasecmp ( cmd_argv [ 0 ] , ""LIST"" ) == 0"	162:10:5315:5350	3637220	0	True				
ANR	3637670	EqualityExpression	"strcasecmp ( cmd_argv [ 0 ] , ""LIST"" ) == 0"		3637220	0		==			
ANR	3637671	CallExpression	"strcasecmp ( cmd_argv [ 0 ] , ""LIST"" )"		3637220	0					
ANR	3637672	Callee	strcasecmp		3637220	0					
ANR	3637673	Identifier	strcasecmp		3637220	0					
ANR	3637674	ArgumentList	cmd_argv [ 0 ]		3637220	1					
ANR	3637675	Argument	cmd_argv [ 0 ]		3637220	0					
ANR	3637676	ArrayIndexing	cmd_argv [ 0 ]		3637220	0					
ANR	3637677	Identifier	cmd_argv		3637220	0					
ANR	3637678	PrimaryExpression	0		3637220	1					
ANR	3637679	Argument	"""LIST"""		3637220	1					
ANR	3637680	PrimaryExpression	"""LIST"""		3637220	0					
ANR	3637681	PrimaryExpression	0		3637220	1					
ANR	3637682	CompoundStatement		97:48:2585:2585	3637220	1					
ANR	3637683	ReturnStatement	"return list ( pfc , cmd_argc , cmd_argv ) ;"	163:2:5357:5393	3637220	0	True				
ANR	3637684	CallExpression	"list ( pfc , cmd_argc , cmd_argv )"		3637220	0					
ANR	3637685	Callee	list		3637220	0					
ANR	3637686	Identifier	list		3637220	0					
ANR	3637687	ArgumentList	pfc		3637220	1					
ANR	3637688	Argument	pfc		3637220	0					
ANR	3637689	Identifier	pfc		3637220	0					
ANR	3637690	Argument	cmd_argc		3637220	1					
ANR	3637691	Identifier	cmd_argc		3637220	0					
ANR	3637692	Argument	cmd_argv		3637220	2					
ANR	3637693	Identifier	cmd_argv		3637220	0					
ANR	3637694	ElseStatement	else		3637220	0					
ANR	3637695	IfStatement	"if ( strcasecmp ( cmd_argv [ 0 ] , ""SIGNAL_PROCESS"" ) == 0 )"		3637220	0					
ANR	3637696	Condition	"strcasecmp ( cmd_argv [ 0 ] , ""SIGNAL_PROCESS"" ) == 0"	165:10:5408:5453	3637220	0	True				
ANR	3637697	EqualityExpression	"strcasecmp ( cmd_argv [ 0 ] , ""SIGNAL_PROCESS"" ) == 0"		3637220	0		==			
ANR	3637698	CallExpression	"strcasecmp ( cmd_argv [ 0 ] , ""SIGNAL_PROCESS"" )"		3637220	0					
ANR	3637699	Callee	strcasecmp		3637220	0					
ANR	3637700	Identifier	strcasecmp		3637220	0					
ANR	3637701	ArgumentList	cmd_argv [ 0 ]		3637220	1					
ANR	3637702	Argument	cmd_argv [ 0 ]		3637220	0					
ANR	3637703	ArrayIndexing	cmd_argv [ 0 ]		3637220	0					
ANR	3637704	Identifier	cmd_argv		3637220	0					
ANR	3637705	PrimaryExpression	0		3637220	1					
ANR	3637706	Argument	"""SIGNAL_PROCESS"""		3637220	1					
ANR	3637707	PrimaryExpression	"""SIGNAL_PROCESS"""		3637220	0					
ANR	3637708	PrimaryExpression	0		3637220	1					
ANR	3637709	CompoundStatement		100:58:2688:2688	3637220	1					
ANR	3637710	ReturnStatement	"return signal_process ( pfc , cmd_argc , cmd_argv ) ;"	166:2:5460:5506	3637220	0	True				
ANR	3637711	CallExpression	"signal_process ( pfc , cmd_argc , cmd_argv )"		3637220	0					
ANR	3637712	Callee	signal_process		3637220	0					
ANR	3637713	Identifier	signal_process		3637220	0					
ANR	3637714	ArgumentList	pfc		3637220	1					
ANR	3637715	Argument	pfc		3637220	0					
ANR	3637716	Identifier	pfc		3637220	0					
ANR	3637717	Argument	cmd_argc		3637220	1					
ANR	3637718	Identifier	cmd_argc		3637220	0					
ANR	3637719	Argument	cmd_argv		3637220	2					
ANR	3637720	Identifier	cmd_argv		3637220	0					
ANR	3637721	ElseStatement	else		3637220	0					
ANR	3637722	IfStatement	"if ( strcasecmp ( cmd_argv [ 0 ] , ""SUSPEND_FAMILY"" ) == 0 )"		3637220	0					
ANR	3637723	Condition	"strcasecmp ( cmd_argv [ 0 ] , ""SUSPEND_FAMILY"" ) == 0"	168:10:5521:5566	3637220	0	True				
ANR	3637724	EqualityExpression	"strcasecmp ( cmd_argv [ 0 ] , ""SUSPEND_FAMILY"" ) == 0"		3637220	0		==			
ANR	3637725	CallExpression	"strcasecmp ( cmd_argv [ 0 ] , ""SUSPEND_FAMILY"" )"		3637220	0					
ANR	3637726	Callee	strcasecmp		3637220	0					
ANR	3637727	Identifier	strcasecmp		3637220	0					
ANR	3637728	ArgumentList	cmd_argv [ 0 ]		3637220	1					
ANR	3637729	Argument	cmd_argv [ 0 ]		3637220	0					
ANR	3637730	ArrayIndexing	cmd_argv [ 0 ]		3637220	0					
ANR	3637731	Identifier	cmd_argv		3637220	0					
ANR	3637732	PrimaryExpression	0		3637220	1					
ANR	3637733	Argument	"""SUSPEND_FAMILY"""		3637220	1					
ANR	3637734	PrimaryExpression	"""SUSPEND_FAMILY"""		3637220	0					
ANR	3637735	PrimaryExpression	0		3637220	1					
ANR	3637736	CompoundStatement		103:58:2801:2801	3637220	1					
ANR	3637737	ReturnStatement	"return suspend_family ( pfc , cmd_argc , cmd_argv ) ;"	169:2:5573:5619	3637220	0	True				
ANR	3637738	CallExpression	"suspend_family ( pfc , cmd_argc , cmd_argv )"		3637220	0					
ANR	3637739	Callee	suspend_family		3637220	0					
ANR	3637740	Identifier	suspend_family		3637220	0					
ANR	3637741	ArgumentList	pfc		3637220	1					
ANR	3637742	Argument	pfc		3637220	0					
ANR	3637743	Identifier	pfc		3637220	0					
ANR	3637744	Argument	cmd_argc		3637220	1					
ANR	3637745	Identifier	cmd_argc		3637220	0					
ANR	3637746	Argument	cmd_argv		3637220	2					
ANR	3637747	Identifier	cmd_argv		3637220	0					
ANR	3637748	ElseStatement	else		3637220	0					
ANR	3637749	IfStatement	"if ( strcasecmp ( cmd_argv [ 0 ] , ""CONTINUE_FAMILY"" ) == 0 )"		3637220	0					
ANR	3637750	Condition	"strcasecmp ( cmd_argv [ 0 ] , ""CONTINUE_FAMILY"" ) == 0"	171:10:5634:5680	3637220	0	True				
ANR	3637751	EqualityExpression	"strcasecmp ( cmd_argv [ 0 ] , ""CONTINUE_FAMILY"" ) == 0"		3637220	0		==			
ANR	3637752	CallExpression	"strcasecmp ( cmd_argv [ 0 ] , ""CONTINUE_FAMILY"" )"		3637220	0					
ANR	3637753	Callee	strcasecmp		3637220	0					
ANR	3637754	Identifier	strcasecmp		3637220	0					
ANR	3637755	ArgumentList	cmd_argv [ 0 ]		3637220	1					
ANR	3637756	Argument	cmd_argv [ 0 ]		3637220	0					
ANR	3637757	ArrayIndexing	cmd_argv [ 0 ]		3637220	0					
ANR	3637758	Identifier	cmd_argv		3637220	0					
ANR	3637759	PrimaryExpression	0		3637220	1					
ANR	3637760	Argument	"""CONTINUE_FAMILY"""		3637220	1					
ANR	3637761	PrimaryExpression	"""CONTINUE_FAMILY"""		3637220	0					
ANR	3637762	PrimaryExpression	0		3637220	1					
ANR	3637763	CompoundStatement		106:59:2915:2915	3637220	1					
ANR	3637764	ReturnStatement	"return continue_family ( pfc , cmd_argc , cmd_argv ) ;"	172:2:5687:5734	3637220	0	True				
ANR	3637765	CallExpression	"continue_family ( pfc , cmd_argc , cmd_argv )"		3637220	0					
ANR	3637766	Callee	continue_family		3637220	0					
ANR	3637767	Identifier	continue_family		3637220	0					
ANR	3637768	ArgumentList	pfc		3637220	1					
ANR	3637769	Argument	pfc		3637220	0					
ANR	3637770	Identifier	pfc		3637220	0					
ANR	3637771	Argument	cmd_argc		3637220	1					
ANR	3637772	Identifier	cmd_argc		3637220	0					
ANR	3637773	Argument	cmd_argv		3637220	2					
ANR	3637774	Identifier	cmd_argv		3637220	0					
ANR	3637775	ElseStatement	else		3637220	0					
ANR	3637776	IfStatement	"if ( strcasecmp ( cmd_argv [ 0 ] , ""KILL_FAMILY"" ) == 0 )"		3637220	0					
ANR	3637777	Condition	"strcasecmp ( cmd_argv [ 0 ] , ""KILL_FAMILY"" ) == 0"	174:10:5749:5791	3637220	0	True				
ANR	3637778	EqualityExpression	"strcasecmp ( cmd_argv [ 0 ] , ""KILL_FAMILY"" ) == 0"		3637220	0		==			
ANR	3637779	CallExpression	"strcasecmp ( cmd_argv [ 0 ] , ""KILL_FAMILY"" )"		3637220	0					
ANR	3637780	Callee	strcasecmp		3637220	0					
ANR	3637781	Identifier	strcasecmp		3637220	0					
ANR	3637782	ArgumentList	cmd_argv [ 0 ]		3637220	1					
ANR	3637783	Argument	cmd_argv [ 0 ]		3637220	0					
ANR	3637784	ArrayIndexing	cmd_argv [ 0 ]		3637220	0					
ANR	3637785	Identifier	cmd_argv		3637220	0					
ANR	3637786	PrimaryExpression	0		3637220	1					
ANR	3637787	Argument	"""KILL_FAMILY"""		3637220	1					
ANR	3637788	PrimaryExpression	"""KILL_FAMILY"""		3637220	0					
ANR	3637789	PrimaryExpression	0		3637220	1					
ANR	3637790	CompoundStatement		109:55:3026:3026	3637220	1					
ANR	3637791	ReturnStatement	"return kill_family ( pfc , cmd_argc , cmd_argv ) ;"	175:2:5798:5841	3637220	0	True				
ANR	3637792	CallExpression	"kill_family ( pfc , cmd_argc , cmd_argv )"		3637220	0					
ANR	3637793	Callee	kill_family		3637220	0					
ANR	3637794	Identifier	kill_family		3637220	0					
ANR	3637795	ArgumentList	pfc		3637220	1					
ANR	3637796	Argument	pfc		3637220	0					
ANR	3637797	Identifier	pfc		3637220	0					
ANR	3637798	Argument	cmd_argc		3637220	1					
ANR	3637799	Identifier	cmd_argc		3637220	0					
ANR	3637800	Argument	cmd_argv		3637220	2					
ANR	3637801	Identifier	cmd_argv		3637220	0					
ANR	3637802	ElseStatement	else		3637220	0					
ANR	3637803	IfStatement	"if ( strcasecmp ( cmd_argv [ 0 ] , ""UNREGISTER_FAMILY"" ) == 0 )"		3637220	0					
ANR	3637804	Condition	"strcasecmp ( cmd_argv [ 0 ] , ""UNREGISTER_FAMILY"" ) == 0"	177:10:5856:5904	3637220	0	True				
ANR	3637805	EqualityExpression	"strcasecmp ( cmd_argv [ 0 ] , ""UNREGISTER_FAMILY"" ) == 0"		3637220	0		==			
ANR	3637806	CallExpression	"strcasecmp ( cmd_argv [ 0 ] , ""UNREGISTER_FAMILY"" )"		3637220	0					
ANR	3637807	Callee	strcasecmp		3637220	0					
ANR	3637808	Identifier	strcasecmp		3637220	0					
ANR	3637809	ArgumentList	cmd_argv [ 0 ]		3637220	1					
ANR	3637810	Argument	cmd_argv [ 0 ]		3637220	0					
ANR	3637811	ArrayIndexing	cmd_argv [ 0 ]		3637220	0					
ANR	3637812	Identifier	cmd_argv		3637220	0					
ANR	3637813	PrimaryExpression	0		3637220	1					
ANR	3637814	Argument	"""UNREGISTER_FAMILY"""		3637220	1					
ANR	3637815	PrimaryExpression	"""UNREGISTER_FAMILY"""		3637220	0					
ANR	3637816	PrimaryExpression	0		3637220	1					
ANR	3637817	CompoundStatement		112:61:3139:3139	3637220	1					
ANR	3637818	ReturnStatement	"return unregister_family ( pfc , cmd_argc , cmd_argv ) ;"	178:2:5911:5960	3637220	0	True				
ANR	3637819	CallExpression	"unregister_family ( pfc , cmd_argc , cmd_argv )"		3637220	0					
ANR	3637820	Callee	unregister_family		3637220	0					
ANR	3637821	Identifier	unregister_family		3637220	0					
ANR	3637822	ArgumentList	pfc		3637220	1					
ANR	3637823	Argument	pfc		3637220	0					
ANR	3637824	Identifier	pfc		3637220	0					
ANR	3637825	Argument	cmd_argc		3637220	1					
ANR	3637826	Identifier	cmd_argc		3637220	0					
ANR	3637827	Argument	cmd_argv		3637220	2					
ANR	3637828	Identifier	cmd_argv		3637220	0					
ANR	3637829	ElseStatement	else		3637220	0					
ANR	3637830	IfStatement	"if ( strcasecmp ( cmd_argv [ 0 ] , ""SNAPSHOT"" ) == 0 )"		3637220	0					
ANR	3637831	Condition	"strcasecmp ( cmd_argv [ 0 ] , ""SNAPSHOT"" ) == 0"	180:10:5975:6014	3637220	0	True				
ANR	3637832	EqualityExpression	"strcasecmp ( cmd_argv [ 0 ] , ""SNAPSHOT"" ) == 0"		3637220	0		==			
ANR	3637833	CallExpression	"strcasecmp ( cmd_argv [ 0 ] , ""SNAPSHOT"" )"		3637220	0					
ANR	3637834	Callee	strcasecmp		3637220	0					
ANR	3637835	Identifier	strcasecmp		3637220	0					
ANR	3637836	ArgumentList	cmd_argv [ 0 ]		3637220	1					
ANR	3637837	Argument	cmd_argv [ 0 ]		3637220	0					
ANR	3637838	ArrayIndexing	cmd_argv [ 0 ]		3637220	0					
ANR	3637839	Identifier	cmd_argv		3637220	0					
ANR	3637840	PrimaryExpression	0		3637220	1					
ANR	3637841	Argument	"""SNAPSHOT"""		3637220	1					
ANR	3637842	PrimaryExpression	"""SNAPSHOT"""		3637220	0					
ANR	3637843	PrimaryExpression	0		3637220	1					
ANR	3637844	CompoundStatement		115:52:3249:3249	3637220	1					
ANR	3637845	ReturnStatement	"return snapshot ( pfc , cmd_argc , cmd_argv ) ;"	181:2:6021:6061	3637220	0	True				
ANR	3637846	CallExpression	"snapshot ( pfc , cmd_argc , cmd_argv )"		3637220	0					
ANR	3637847	Callee	snapshot		3637220	0					
ANR	3637848	Identifier	snapshot		3637220	0					
ANR	3637849	ArgumentList	pfc		3637220	1					
ANR	3637850	Argument	pfc		3637220	0					
ANR	3637851	Identifier	pfc		3637220	0					
ANR	3637852	Argument	cmd_argc		3637220	1					
ANR	3637853	Identifier	cmd_argc		3637220	0					
ANR	3637854	Argument	cmd_argv		3637220	2					
ANR	3637855	Identifier	cmd_argv		3637220	0					
ANR	3637856	ElseStatement	else		3637220	0					
ANR	3637857	IfStatement	"if ( strcasecmp ( cmd_argv [ 0 ] , ""QUIT"" ) == 0 )"		3637220	0					
ANR	3637858	Condition	"strcasecmp ( cmd_argv [ 0 ] , ""QUIT"" ) == 0"	183:10:6076:6111	3637220	0	True				
ANR	3637859	EqualityExpression	"strcasecmp ( cmd_argv [ 0 ] , ""QUIT"" ) == 0"		3637220	0		==			
ANR	3637860	CallExpression	"strcasecmp ( cmd_argv [ 0 ] , ""QUIT"" )"		3637220	0					
ANR	3637861	Callee	strcasecmp		3637220	0					
ANR	3637862	Identifier	strcasecmp		3637220	0					
ANR	3637863	ArgumentList	cmd_argv [ 0 ]		3637220	1					
ANR	3637864	Argument	cmd_argv [ 0 ]		3637220	0					
ANR	3637865	ArrayIndexing	cmd_argv [ 0 ]		3637220	0					
ANR	3637866	Identifier	cmd_argv		3637220	0					
ANR	3637867	PrimaryExpression	0		3637220	1					
ANR	3637868	Argument	"""QUIT"""		3637220	1					
ANR	3637869	PrimaryExpression	"""QUIT"""		3637220	0					
ANR	3637870	PrimaryExpression	0		3637220	1					
ANR	3637871	CompoundStatement		118:48:3346:3346	3637220	1					
ANR	3637872	ReturnStatement	"return quit ( pfc , cmd_argc , cmd_argv ) ;"	184:2:6118:6154	3637220	0	True				
ANR	3637873	CallExpression	"quit ( pfc , cmd_argc , cmd_argv )"		3637220	0					
ANR	3637874	Callee	quit		3637220	0					
ANR	3637875	Identifier	quit		3637220	0					
ANR	3637876	ArgumentList	pfc		3637220	1					
ANR	3637877	Argument	pfc		3637220	0					
ANR	3637878	Identifier	pfc		3637220	0					
ANR	3637879	Argument	cmd_argc		3637220	1					
ANR	3637880	Identifier	cmd_argc		3637220	0					
ANR	3637881	Argument	cmd_argv		3637220	2					
ANR	3637882	Identifier	cmd_argv		3637220	0					
ANR	3637883	ElseStatement	else		3637220	0					
ANR	3637884	CompoundStatement		121:6:3397:3397	3637220	0					
ANR	3637885	ExpressionStatement	"fprintf ( stderr , ""error: invalid command: %s\\n"" , cmd_argv [ 0 ] )"	187:2:6169:6229	3637220	0	True				
ANR	3637886	CallExpression	"fprintf ( stderr , ""error: invalid command: %s\\n"" , cmd_argv [ 0 ] )"		3637220	0					
ANR	3637887	Callee	fprintf		3637220	0					
ANR	3637888	Identifier	fprintf		3637220	0					
ANR	3637889	ArgumentList	stderr		3637220	1					
ANR	3637890	Argument	stderr		3637220	0					
ANR	3637891	Identifier	stderr		3637220	0					
ANR	3637892	Argument	"""error: invalid command: %s\\n"""		3637220	1					
ANR	3637893	PrimaryExpression	"""error: invalid command: %s\\n"""		3637220	0					
ANR	3637894	Argument	cmd_argv [ 0 ]		3637220	2					
ANR	3637895	ArrayIndexing	cmd_argv [ 0 ]		3637220	0					
ANR	3637896	Identifier	cmd_argv		3637220	0					
ANR	3637897	PrimaryExpression	0		3637220	1					
ANR	3637898	ExpressionStatement	list_commands ( )	188:2:6233:6248	3637220	1	True				
ANR	3637899	CallExpression	list_commands ( )		3637220	0					
ANR	3637900	Callee	list_commands		3637220	0					
ANR	3637901	Identifier	list_commands		3637220	0					
ANR	3637902	ArgumentList			3637220	1					
ANR	3637903	ReturnStatement	return 1 ;	189:2:6252:6260	3637220	2	True				
ANR	3637904	PrimaryExpression	1		3637220	0					
ANR	3637905	ReturnType	int		3637220	1					
ANR	3637906	Identifier	main		3637220	2					
ANR	3637907	ParameterList	"int argc , char * argv [ ]"		3637220	3					
ANR	3637908	Parameter	int argc	65:5:2743:2750	3637220	0	True				
ANR	3637909	ParameterType	int		3637220	0					
ANR	3637910	Identifier	argc		3637220	1					
ANR	3637911	Parameter	char * argv [ ]	65:15:2753:2764	3637220	1	True				
ANR	3637912	ParameterType	char * [ ]		3637220	0					
ANR	3637913	Identifier	argv		3637220	1					
ANR	3637914	CFGEntryNode	ENTRY		3637220		True				
ANR	3637915	CFGExitNode	EXIT		3637220		True				
ANR	3637916	Symbol	pfc . initialize		3637220						
ANR	3637917	Symbol	* argv		3637220						
ANR	3637918	Symbol	argv		3637220						
ANR	3637919	Symbol	get_usage		3637220						
ANR	3637920	Symbol	* * cmd_argv		3637220						
ANR	3637921	Symbol	param		3637220						
ANR	3637922	Symbol	myDistro		3637220						
ANR	3637923	Symbol	cmd_argc		3637220						
ANR	3637924	Symbol	register_family		3637220						
ANR	3637925	Symbol	dump		3637220						
ANR	3637926	Symbol	strcasecmp		3637220						
ANR	3637927	Symbol	argc		3637220						
ANR	3637928	Symbol	strcmp		3637220						
ANR	3637929	Symbol	procd_address		3637220						
ANR	3637930	Symbol	NULL		3637220						
ANR	3637931	Symbol	Termlog		3637220						
ANR	3637932	Symbol	get_param_functions		3637220						
ANR	3637933	Symbol	stderr		3637220						
ANR	3637934	Symbol	pfc		3637220						
ANR	3637935	Symbol	track_by_associated_gid		3637220						
ANR	3637936	Symbol	list		3637220						
ANR	3637937	Symbol	unregister_family		3637220						
ANR	3637938	Symbol	cmd_argv		3637220						
ANR	3637939	Symbol	continue_family		3637220						
ANR	3637940	Symbol	track_by_associated_cgroup		3637220						
ANR	3637941	Symbol	signal_process		3637220						
ANR	3637942	Symbol	* cmd_argv		3637220						
ANR	3637943	Symbol	suspend_family		3637220						
ANR	3637944	Symbol	kill_family		3637220						
ANR	3637945	Symbol	quit		3637220						
ANR	3637946	Symbol	MATCH		3637220						
ANR	3637947	Symbol	snapshot		3637220						
ANR	3637948	Function	register_family	193:0:6268:7017							
ANR	3637949	FunctionDef	"register_family (ProcFamilyClient & pfc , int argc , char * argv [ ])"		3637948	0					
ANR	3637950	CompoundStatement		195:0:6342:7017	3637948	0					
ANR	3637951	IfStatement	if ( argc != 4 )		3637948	0					
ANR	3637952	Condition	argc != 4	196:5:6349:6357	3637948	0	True				
ANR	3637953	EqualityExpression	argc != 4		3637948	0		!=			
ANR	3637954	Identifier	argc		3637948	0					
ANR	3637955	PrimaryExpression	4		3637948	1					
ANR	3637956	CompoundStatement		2:16:17:17	3637948	1					
ANR	3637957	Statement	fprintf	197:2:6364:6370	3637948	0	True				
ANR	3637958	Statement	(	197:9:6371:6371	3637948	1	True				
ANR	3637959	Statement	stderr	197:10:6372:6377	3637948	2	True				
ANR	3637960	Statement	","	197:16:6378:6378	3637948	3	True				
ANR	3637961	Statement	"""error: argument synopsis for %s: """	198:10:6390:6424	3637948	4	True				
ANR	3637962	Statement	"""<pid> <watcher_pid> <max_snapshot interval>\\n"""	199:14:6440:6486	3637948	5	True				
ANR	3637963	Statement	","	199:61:6487:6487	3637948	6	True				
ANR	3637964	Statement	argv	200:10:6499:6502	3637948	7	True				
ANR	3637965	Statement	[	200:14:6503:6503	3637948	8	True				
ANR	3637966	Statement	0	200:15:6504:6504	3637948	9	True				
ANR	3637967	Statement	]	200:16:6505:6505	3637948	10	True				
ANR	3637968	Statement	)	200:17:6506:6506	3637948	11	True				
ANR	3637969	ExpressionStatement		200:18:6507:6507	3637948	12	True				
ANR	3637970	ReturnStatement	return 1 ;	201:2:6511:6519	3637948	13	True				
ANR	3637971	PrimaryExpression	1		3637948	0					
ANR	3637972	IdentifierDeclStatement	pid_t pid = atoi ( argv [ 1 ] ) ;	203:1:6525:6550	3637948	1	True				
ANR	3637973	IdentifierDecl	pid = atoi ( argv [ 1 ] )		3637948	0					
ANR	3637974	IdentifierDeclType	pid_t		3637948	0					
ANR	3637975	Identifier	pid		3637948	1					
ANR	3637976	AssignmentExpression	pid = atoi ( argv [ 1 ] )		3637948	2		=			
ANR	3637977	Identifier	pid		3637948	0					
ANR	3637978	CallExpression	atoi ( argv [ 1 ] )		3637948	1					
ANR	3637979	Callee	atoi		3637948	0					
ANR	3637980	Identifier	atoi		3637948	0					
ANR	3637981	ArgumentList	argv [ 1 ]		3637948	1					
ANR	3637982	Argument	argv [ 1 ]		3637948	0					
ANR	3637983	ArrayIndexing	argv [ 1 ]		3637948	0					
ANR	3637984	Identifier	argv		3637948	0					
ANR	3637985	PrimaryExpression	1		3637948	1					
ANR	3637986	IdentifierDeclStatement	pid_t watcher = atoi ( argv [ 2 ] ) ;	204:1:6553:6582	3637948	2	True				
ANR	3637987	IdentifierDecl	watcher = atoi ( argv [ 2 ] )		3637948	0					
ANR	3637988	IdentifierDeclType	pid_t		3637948	0					
ANR	3637989	Identifier	watcher		3637948	1					
ANR	3637990	AssignmentExpression	watcher = atoi ( argv [ 2 ] )		3637948	2		=			
ANR	3637991	Identifier	watcher		3637948	0					
ANR	3637992	CallExpression	atoi ( argv [ 2 ] )		3637948	1					
ANR	3637993	Callee	atoi		3637948	0					
ANR	3637994	Identifier	atoi		3637948	0					
ANR	3637995	ArgumentList	argv [ 2 ]		3637948	1					
ANR	3637996	Argument	argv [ 2 ]		3637948	0					
ANR	3637997	ArrayIndexing	argv [ 2 ]		3637948	0					
ANR	3637998	Identifier	argv		3637948	0					
ANR	3637999	PrimaryExpression	2		3637948	1					
ANR	3638000	IdentifierDeclStatement	int max_snapshot_interval = atoi ( argv [ 3 ] ) ;	205:1:6585:6626	3637948	3	True				
ANR	3638001	IdentifierDecl	max_snapshot_interval = atoi ( argv [ 3 ] )		3637948	0					
ANR	3638002	IdentifierDeclType	int		3637948	0					
ANR	3638003	Identifier	max_snapshot_interval		3637948	1					
ANR	3638004	AssignmentExpression	max_snapshot_interval = atoi ( argv [ 3 ] )		3637948	2		=			
ANR	3638005	Identifier	max_snapshot_interval		3637948	0					
ANR	3638006	CallExpression	atoi ( argv [ 3 ] )		3637948	1					
ANR	3638007	Callee	atoi		3637948	0					
ANR	3638008	Identifier	atoi		3637948	0					
ANR	3638009	ArgumentList	argv [ 3 ]		3637948	1					
ANR	3638010	Argument	argv [ 3 ]		3637948	0					
ANR	3638011	ArrayIndexing	argv [ 3 ]		3637948	0					
ANR	3638012	Identifier	argv		3637948	0					
ANR	3638013	PrimaryExpression	3		3637948	1					
ANR	3638014	IdentifierDeclStatement	bool success ;	206:1:6629:6641	3637948	4	True				
ANR	3638015	IdentifierDecl	success		3637948	0					
ANR	3638016	IdentifierDeclType	bool		3637948	0					
ANR	3638017	Identifier	success		3637948	1					
ANR	3638018	IfStatement	"if ( ! pfc . register_subfamily ( pid , watcher , max_snapshot_interval , success ) )"		3637948	5					
ANR	3638019	Condition	"! pfc . register_subfamily ( pid , watcher , max_snapshot_interval , success )"	207:5:6648:6803	3637948	0	True				
ANR	3638020	UnaryOperationExpression	"! pfc . register_subfamily ( pid , watcher , max_snapshot_interval , success )"		3637948	0					
ANR	3638021	UnaryOperator	!		3637948	0					
ANR	3638022	CallExpression	"pfc . register_subfamily ( pid , watcher , max_snapshot_interval , success )"		3637948	1					
ANR	3638023	Callee	pfc . register_subfamily		3637948	0					
ANR	3638024	MemberAccess	pfc . register_subfamily		3637948	0					
ANR	3638025	Identifier	pfc		3637948	0					
ANR	3638026	Identifier	register_subfamily		3637948	1					
ANR	3638027	ArgumentList	pid		3637948	1					
ANR	3638028	Argument	pid		3637948	0					
ANR	3638029	Identifier	pid		3637948	0					
ANR	3638030	Argument	watcher		3637948	1					
ANR	3638031	Identifier	watcher		3637948	0					
ANR	3638032	Argument	max_snapshot_interval		3637948	2					
ANR	3638033	Identifier	max_snapshot_interval		3637948	0					
ANR	3638034	Argument	success		3637948	3					
ANR	3638035	Identifier	success		3637948	0					
ANR	3638036	CompoundStatement		16:39:463:463	3637948	1					
ANR	3638037	ExpressionStatement	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"	211:2:6810:6868	3637948	0	True				
ANR	3638038	CallExpression	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"		3637948	0					
ANR	3638039	Callee	fprintf		3637948	0					
ANR	3638040	Identifier	fprintf		3637948	0					
ANR	3638041	ArgumentList	stderr		3637948	1					
ANR	3638042	Argument	stderr		3637948	0					
ANR	3638043	Identifier	stderr		3637948	0					
ANR	3638044	Argument	"""error: communication error with ProcD\\n"""		3637948	1					
ANR	3638045	PrimaryExpression	"""error: communication error with ProcD\\n"""		3637948	0					
ANR	3638046	ReturnStatement	return 1 ;	212:2:6872:6880	3637948	1	True				
ANR	3638047	PrimaryExpression	1		3637948	0					
ANR	3638048	IfStatement	if ( ! success )		3637948	6					
ANR	3638049	Condition	! success	214:5:6890:6897	3637948	0	True				
ANR	3638050	UnaryOperationExpression	! success		3637948	0					
ANR	3638051	UnaryOperator	!		3637948	0					
ANR	3638052	Identifier	success		3637948	1					
ANR	3638053	CompoundStatement		20:15:557:557	3637948	1					
ANR	3638054	ExpressionStatement	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"	215:2:6904:6989	3637948	0	True				
ANR	3638055	CallExpression	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"		3637948	0					
ANR	3638056	Callee	fprintf		3637948	0					
ANR	3638057	Identifier	fprintf		3637948	0					
ANR	3638058	ArgumentList	stderr		3637948	1					
ANR	3638059	Argument	stderr		3637948	0					
ANR	3638060	Identifier	stderr		3637948	0					
ANR	3638061	Argument	"""error: %s command failed with ProcD\\n"""		3637948	1					
ANR	3638062	PrimaryExpression	"""error: %s command failed with ProcD\\n"""		3637948	0					
ANR	3638063	Argument	argv [ 0 ]		3637948	2					
ANR	3638064	ArrayIndexing	argv [ 0 ]		3637948	0					
ANR	3638065	Identifier	argv		3637948	0					
ANR	3638066	PrimaryExpression	0		3637948	1					
ANR	3638067	ReturnStatement	return 1 ;	218:2:6993:7001	3637948	1	True				
ANR	3638068	PrimaryExpression	1		3637948	0					
ANR	3638069	ReturnStatement	return 0 ;	220:1:7007:7015	3637948	7	True				
ANR	3638070	PrimaryExpression	0		3637948	0					
ANR	3638071	ReturnType	static int		3637948	1					
ANR	3638072	Identifier	register_family		3637948	2					
ANR	3638073	ParameterList	"ProcFamilyClient & pfc , int argc , char * argv [ ]"		3637948	3					
ANR	3638074	Parameter	ProcFamilyClient & pfc	194:16:6295:6315	3637948	0	True				
ANR	3638075	ParameterType	ProcFamilyClient &		3637948	0					
ANR	3638076	Identifier	pfc		3637948	1					
ANR	3638077	Parameter	int argc	194:39:6318:6325	3637948	1	True				
ANR	3638078	ParameterType	int		3637948	0					
ANR	3638079	Identifier	argc		3637948	1					
ANR	3638080	Parameter	char * argv [ ]	194:49:6328:6339	3637948	2	True				
ANR	3638081	ParameterType	char * [ ]		3637948	0					
ANR	3638082	Identifier	argv		3637948	1					
ANR	3638083	CFGEntryNode	ENTRY		3637948		True				
ANR	3638084	CFGExitNode	EXIT		3637948		True				
ANR	3638085	Symbol	argc		3637948						
ANR	3638086	Symbol	atoi		3637948						
ANR	3638087	Symbol	watcher		3637948						
ANR	3638088	Symbol	max_snapshot_interval		3637948						
ANR	3638089	Symbol	success		3637948						
ANR	3638090	Symbol	pfc . register_subfamily		3637948						
ANR	3638091	Symbol	pid		3637948						
ANR	3638092	Symbol	* argv		3637948						
ANR	3638093	Symbol	pfc		3637948						
ANR	3638094	Symbol	stderr		3637948						
ANR	3638095	Symbol	argv		3637948						
ANR	3638096	Function	track_by_associated_gid	223:0:7020:7818							
ANR	3638097	FunctionDef	"track_by_associated_gid (ProcFamilyClient & pfc , int argc , char * argv [ ])"		3638096	0					
ANR	3638098	CompoundStatement		225:0:7102:7818	3638096	0					
ANR	3638099	IfStatement	if ( ( argc != 2 ) && ( argc != 3 ) )		3638096	0					
ANR	3638100	Condition	( argc != 2 ) && ( argc != 3 )	226:5:7109:7134	3638096	0	True				
ANR	3638101	AndExpression	( argc != 2 ) && ( argc != 3 )		3638096	0		&&			
ANR	3638102	EqualityExpression	argc != 2		3638096	0		!=			
ANR	3638103	Identifier	argc		3638096	0					
ANR	3638104	PrimaryExpression	2		3638096	1					
ANR	3638105	EqualityExpression	argc != 3		3638096	1		!=			
ANR	3638106	Identifier	argc		3638096	0					
ANR	3638107	PrimaryExpression	3		3638096	1					
ANR	3638108	CompoundStatement		2:33:34:34	3638096	1					
ANR	3638109	ExpressionStatement	"fprintf ( stderr , ""error: argument synopsis for %s: <gid> [<pid>]\\n"" , argv [ 0 ] )"	227:2:7141:7237	3638096	0	True				
ANR	3638110	CallExpression	"fprintf ( stderr , ""error: argument synopsis for %s: <gid> [<pid>]\\n"" , argv [ 0 ] )"		3638096	0					
ANR	3638111	Callee	fprintf		3638096	0					
ANR	3638112	Identifier	fprintf		3638096	0					
ANR	3638113	ArgumentList	stderr		3638096	1					
ANR	3638114	Argument	stderr		3638096	0					
ANR	3638115	Identifier	stderr		3638096	0					
ANR	3638116	Argument	"""error: argument synopsis for %s: <gid> [<pid>]\\n"""		3638096	1					
ANR	3638117	PrimaryExpression	"""error: argument synopsis for %s: <gid> [<pid>]\\n"""		3638096	0					
ANR	3638118	Argument	argv [ 0 ]		3638096	2					
ANR	3638119	ArrayIndexing	argv [ 0 ]		3638096	0					
ANR	3638120	Identifier	argv		3638096	0					
ANR	3638121	PrimaryExpression	0		3638096	1					
ANR	3638122	ReturnStatement	return 1 ;	230:2:7241:7249	3638096	1	True				
ANR	3638123	PrimaryExpression	1		3638096	0					
ANR	3638124	IdentifierDeclStatement	gid_t gid = atoi ( argv [ 1 ] ) ;	232:1:7255:7280	3638096	1	True				
ANR	3638125	IdentifierDecl	gid = atoi ( argv [ 1 ] )		3638096	0					
ANR	3638126	IdentifierDeclType	gid_t		3638096	0					
ANR	3638127	Identifier	gid		3638096	1					
ANR	3638128	AssignmentExpression	gid = atoi ( argv [ 1 ] )		3638096	2		=			
ANR	3638129	Identifier	gid		3638096	0					
ANR	3638130	CallExpression	atoi ( argv [ 1 ] )		3638096	1					
ANR	3638131	Callee	atoi		3638096	0					
ANR	3638132	Identifier	atoi		3638096	0					
ANR	3638133	ArgumentList	argv [ 1 ]		3638096	1					
ANR	3638134	Argument	argv [ 1 ]		3638096	0					
ANR	3638135	ArrayIndexing	argv [ 1 ]		3638096	0					
ANR	3638136	Identifier	argv		3638096	0					
ANR	3638137	PrimaryExpression	1		3638096	1					
ANR	3638138	IfStatement	if ( gid == 0 )		3638096	2					
ANR	3638139	Condition	gid == 0	233:5:7287:7294	3638096	0	True				
ANR	3638140	EqualityExpression	gid == 0		3638096	0		==			
ANR	3638141	Identifier	gid		3638096	0					
ANR	3638142	PrimaryExpression	0		3638096	1					
ANR	3638143	CompoundStatement		9:15:194:194	3638096	1					
ANR	3638144	ExpressionStatement	"fprintf ( stderr , ""invalid GID: %s\\n"" , argv [ 1 ] )"	234:2:7301:7346	3638096	0	True				
ANR	3638145	CallExpression	"fprintf ( stderr , ""invalid GID: %s\\n"" , argv [ 1 ] )"		3638096	0					
ANR	3638146	Callee	fprintf		3638096	0					
ANR	3638147	Identifier	fprintf		3638096	0					
ANR	3638148	ArgumentList	stderr		3638096	1					
ANR	3638149	Argument	stderr		3638096	0					
ANR	3638150	Identifier	stderr		3638096	0					
ANR	3638151	Argument	"""invalid GID: %s\\n"""		3638096	1					
ANR	3638152	PrimaryExpression	"""invalid GID: %s\\n"""		3638096	0					
ANR	3638153	Argument	argv [ 1 ]		3638096	2					
ANR	3638154	ArrayIndexing	argv [ 1 ]		3638096	0					
ANR	3638155	Identifier	argv		3638096	0					
ANR	3638156	PrimaryExpression	1		3638096	1					
ANR	3638157	ReturnStatement	return 1 ;	235:2:7350:7358	3638096	1	True				
ANR	3638158	PrimaryExpression	1		3638096	0					
ANR	3638159	IdentifierDeclStatement	pid_t pid = 0 ;	237:1:7364:7377	3638096	3	True				
ANR	3638160	IdentifierDecl	pid = 0		3638096	0					
ANR	3638161	IdentifierDeclType	pid_t		3638096	0					
ANR	3638162	Identifier	pid		3638096	1					
ANR	3638163	AssignmentExpression	pid = 0		3638096	2		=			
ANR	3638164	Identifier	pid		3638096	0					
ANR	3638165	PrimaryExpression	0		3638096	1					
ANR	3638166	IfStatement	if ( argc == 3 )		3638096	4					
ANR	3638167	Condition	argc == 3	238:5:7384:7392	3638096	0	True				
ANR	3638168	EqualityExpression	argc == 3		3638096	0		==			
ANR	3638169	Identifier	argc		3638096	0					
ANR	3638170	PrimaryExpression	3		3638096	1					
ANR	3638171	CompoundStatement		14:16:292:292	3638096	1					
ANR	3638172	ExpressionStatement	pid = atoi ( argv [ 2 ] )	239:2:7399:7418	3638096	0	True				
ANR	3638173	AssignmentExpression	pid = atoi ( argv [ 2 ] )		3638096	0		=			
ANR	3638174	Identifier	pid		3638096	0					
ANR	3638175	CallExpression	atoi ( argv [ 2 ] )		3638096	1					
ANR	3638176	Callee	atoi		3638096	0					
ANR	3638177	Identifier	atoi		3638096	0					
ANR	3638178	ArgumentList	argv [ 2 ]		3638096	1					
ANR	3638179	Argument	argv [ 2 ]		3638096	0					
ANR	3638180	ArrayIndexing	argv [ 2 ]		3638096	0					
ANR	3638181	Identifier	argv		3638096	0					
ANR	3638182	PrimaryExpression	2		3638096	1					
ANR	3638183	IfStatement	if ( pid <= 0 )		3638096	1					
ANR	3638184	Condition	pid <= 0	240:6:7426:7433	3638096	0	True				
ANR	3638185	RelationalExpression	pid <= 0		3638096	0		<=			
ANR	3638186	Identifier	pid		3638096	0					
ANR	3638187	PrimaryExpression	0		3638096	1					
ANR	3638188	CompoundStatement		16:16:333:333	3638096	1					
ANR	3638189	ExpressionStatement	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 2 ] )"	241:3:7441:7493	3638096	0	True				
ANR	3638190	CallExpression	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 2 ] )"		3638096	0					
ANR	3638191	Callee	fprintf		3638096	0					
ANR	3638192	Identifier	fprintf		3638096	0					
ANR	3638193	ArgumentList	stderr		3638096	1					
ANR	3638194	Argument	stderr		3638096	0					
ANR	3638195	Identifier	stderr		3638096	0					
ANR	3638196	Argument	"""error: invalid pid: %s\\n"""		3638096	1					
ANR	3638197	PrimaryExpression	"""error: invalid pid: %s\\n"""		3638096	0					
ANR	3638198	Argument	argv [ 2 ]		3638096	2					
ANR	3638199	ArrayIndexing	argv [ 2 ]		3638096	0					
ANR	3638200	Identifier	argv		3638096	0					
ANR	3638201	PrimaryExpression	2		3638096	1					
ANR	3638202	ReturnStatement	return 1 ;	242:3:7498:7506	3638096	1	True				
ANR	3638203	PrimaryExpression	1		3638096	0					
ANR	3638204	IdentifierDeclStatement	bool success ;	245:1:7516:7528	3638096	5	True				
ANR	3638205	IdentifierDecl	success		3638096	0					
ANR	3638206	IdentifierDeclType	bool		3638096	0					
ANR	3638207	Identifier	success		3638096	1					
ANR	3638208	IfStatement	"if ( ! pfc . track_family_via_associated_supplementary_group ( pid , gid , success ) )"		3638096	6					
ANR	3638209	Condition	"! pfc . track_family_via_associated_supplementary_group ( pid , gid , success )"	246:5:7535:7605	3638096	0	True				
ANR	3638210	UnaryOperationExpression	"! pfc . track_family_via_associated_supplementary_group ( pid , gid , success )"		3638096	0					
ANR	3638211	UnaryOperator	!		3638096	0					
ANR	3638212	CallExpression	"pfc . track_family_via_associated_supplementary_group ( pid , gid , success )"		3638096	1					
ANR	3638213	Callee	pfc . track_family_via_associated_supplementary_group		3638096	0					
ANR	3638214	MemberAccess	pfc . track_family_via_associated_supplementary_group		3638096	0					
ANR	3638215	Identifier	pfc		3638096	0					
ANR	3638216	Identifier	track_family_via_associated_supplementary_group		3638096	1					
ANR	3638217	ArgumentList	pid		3638096	1					
ANR	3638218	Argument	pid		3638096	0					
ANR	3638219	Identifier	pid		3638096	0					
ANR	3638220	Argument	gid		3638096	1					
ANR	3638221	Identifier	gid		3638096	0					
ANR	3638222	Argument	success		3638096	2					
ANR	3638223	Identifier	success		3638096	0					
ANR	3638224	CompoundStatement		22:78:505:505	3638096	1					
ANR	3638225	ExpressionStatement	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"	247:1:7611:7669	3638096	0	True				
ANR	3638226	CallExpression	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"		3638096	0					
ANR	3638227	Callee	fprintf		3638096	0					
ANR	3638228	Identifier	fprintf		3638096	0					
ANR	3638229	ArgumentList	stderr		3638096	1					
ANR	3638230	Argument	stderr		3638096	0					
ANR	3638231	Identifier	stderr		3638096	0					
ANR	3638232	Argument	"""error: communication error with ProcD\\n"""		3638096	1					
ANR	3638233	PrimaryExpression	"""error: communication error with ProcD\\n"""		3638096	0					
ANR	3638234	ReturnStatement	return 1 ;	248:2:7673:7681	3638096	1	True				
ANR	3638235	PrimaryExpression	1		3638096	0					
ANR	3638236	IfStatement	if ( ! success )		3638096	7					
ANR	3638237	Condition	! success	250:5:7691:7698	3638096	0	True				
ANR	3638238	UnaryOperationExpression	! success		3638096	0					
ANR	3638239	UnaryOperator	!		3638096	0					
ANR	3638240	Identifier	success		3638096	1					
ANR	3638241	CompoundStatement		26:15:598:598	3638096	1					
ANR	3638242	ExpressionStatement	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"	251:2:7705:7790	3638096	0	True				
ANR	3638243	CallExpression	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"		3638096	0					
ANR	3638244	Callee	fprintf		3638096	0					
ANR	3638245	Identifier	fprintf		3638096	0					
ANR	3638246	ArgumentList	stderr		3638096	1					
ANR	3638247	Argument	stderr		3638096	0					
ANR	3638248	Identifier	stderr		3638096	0					
ANR	3638249	Argument	"""error: %s command failed with ProcD\\n"""		3638096	1					
ANR	3638250	PrimaryExpression	"""error: %s command failed with ProcD\\n"""		3638096	0					
ANR	3638251	Argument	argv [ 0 ]		3638096	2					
ANR	3638252	ArrayIndexing	argv [ 0 ]		3638096	0					
ANR	3638253	Identifier	argv		3638096	0					
ANR	3638254	PrimaryExpression	0		3638096	1					
ANR	3638255	ReturnStatement	return 1 ;	254:2:7794:7802	3638096	1	True				
ANR	3638256	PrimaryExpression	1		3638096	0					
ANR	3638257	ReturnStatement	return 0 ;	256:1:7808:7816	3638096	8	True				
ANR	3638258	PrimaryExpression	0		3638096	0					
ANR	3638259	ReturnType	static int		3638096	1					
ANR	3638260	Identifier	track_by_associated_gid		3638096	2					
ANR	3638261	ParameterList	"ProcFamilyClient & pfc , int argc , char * argv [ ]"		3638096	3					
ANR	3638262	Parameter	ProcFamilyClient & pfc	224:24:7055:7075	3638096	0	True				
ANR	3638263	ParameterType	ProcFamilyClient &		3638096	0					
ANR	3638264	Identifier	pfc		3638096	1					
ANR	3638265	Parameter	int argc	224:47:7078:7085	3638096	1	True				
ANR	3638266	ParameterType	int		3638096	0					
ANR	3638267	Identifier	argc		3638096	1					
ANR	3638268	Parameter	char * argv [ ]	224:57:7088:7099	3638096	2	True				
ANR	3638269	ParameterType	char * [ ]		3638096	0					
ANR	3638270	Identifier	argv		3638096	1					
ANR	3638271	CFGEntryNode	ENTRY		3638096		True				
ANR	3638272	CFGExitNode	EXIT		3638096		True				
ANR	3638273	Symbol	argc		3638096						
ANR	3638274	Symbol	atoi		3638096						
ANR	3638275	Symbol	gid		3638096						
ANR	3638276	Symbol	success		3638096						
ANR	3638277	Symbol	pfc . track_family_via_associated_supplementary_group		3638096						
ANR	3638278	Symbol	* argv		3638096						
ANR	3638279	Symbol	pid		3638096						
ANR	3638280	Symbol	pfc		3638096						
ANR	3638281	Symbol	stderr		3638096						
ANR	3638282	Symbol	argv		3638096						
ANR	3638283	Function	track_by_associated_cgroup	260:0:7853:8532							
ANR	3638284	FunctionDef	"track_by_associated_cgroup (ProcFamilyClient & pfc , int argc , char * argv [ ])"		3638283	0					
ANR	3638285	CompoundStatement		262:0:7938:8532	3638283	0					
ANR	3638286	IfStatement	if ( ( argc != 2 ) && ( argc != 3 ) )		3638283	0					
ANR	3638287	Condition	( argc != 2 ) && ( argc != 3 )	263:5:7945:7970	3638283	0	True				
ANR	3638288	AndExpression	( argc != 2 ) && ( argc != 3 )		3638283	0		&&			
ANR	3638289	EqualityExpression	argc != 2		3638283	0		!=			
ANR	3638290	Identifier	argc		3638283	0					
ANR	3638291	PrimaryExpression	2		3638283	1					
ANR	3638292	EqualityExpression	argc != 3		3638283	1		!=			
ANR	3638293	Identifier	argc		3638283	0					
ANR	3638294	PrimaryExpression	3		3638283	1					
ANR	3638295	CompoundStatement		2:33:34:34	3638283	1					
ANR	3638296	ExpressionStatement	"fprintf ( stderr , ""error: argument synopsis for %s: <cgroup> [<pid>]\\n"" , argv [ 0 ] )"	264:2:7977:8062	3638283	0	True				
ANR	3638297	CallExpression	"fprintf ( stderr , ""error: argument synopsis for %s: <cgroup> [<pid>]\\n"" , argv [ 0 ] )"		3638283	0					
ANR	3638298	Callee	fprintf		3638283	0					
ANR	3638299	Identifier	fprintf		3638283	0					
ANR	3638300	ArgumentList	stderr		3638283	1					
ANR	3638301	Argument	stderr		3638283	0					
ANR	3638302	Identifier	stderr		3638283	0					
ANR	3638303	Argument	"""error: argument synopsis for %s: <cgroup> [<pid>]\\n"""		3638283	1					
ANR	3638304	PrimaryExpression	"""error: argument synopsis for %s: <cgroup> [<pid>]\\n"""		3638283	0					
ANR	3638305	Argument	argv [ 0 ]		3638283	2					
ANR	3638306	ArrayIndexing	argv [ 0 ]		3638283	0					
ANR	3638307	Identifier	argv		3638283	0					
ANR	3638308	PrimaryExpression	0		3638283	1					
ANR	3638309	ReturnStatement	return 1 ;	267:2:8066:8074	3638283	1	True				
ANR	3638310	PrimaryExpression	1		3638283	0					
ANR	3638311	IdentifierDeclStatement	const char * cgroup = argv [ 1 ] ;	269:1:8080:8109	3638283	1	True				
ANR	3638312	IdentifierDecl	* cgroup = argv [ 1 ]		3638283	0					
ANR	3638313	IdentifierDeclType	const char *		3638283	0					
ANR	3638314	Identifier	cgroup		3638283	1					
ANR	3638315	AssignmentExpression	* cgroup = argv [ 1 ]		3638283	2		=			
ANR	3638316	Identifier	cgroup		3638283	0					
ANR	3638317	ArrayIndexing	argv [ 1 ]		3638283	1					
ANR	3638318	Identifier	argv		3638283	0					
ANR	3638319	PrimaryExpression	1		3638283	1					
ANR	3638320	IdentifierDeclStatement	pid_t pid = 0 ;	270:1:8112:8125	3638283	2	True				
ANR	3638321	IdentifierDecl	pid = 0		3638283	0					
ANR	3638322	IdentifierDeclType	pid_t		3638283	0					
ANR	3638323	Identifier	pid		3638283	1					
ANR	3638324	AssignmentExpression	pid = 0		3638283	2		=			
ANR	3638325	Identifier	pid		3638283	0					
ANR	3638326	PrimaryExpression	0		3638283	1					
ANR	3638327	IfStatement	if ( argc == 3 )		3638283	3					
ANR	3638328	Condition	argc == 3	271:5:8132:8140	3638283	0	True				
ANR	3638329	EqualityExpression	argc == 3		3638283	0		==			
ANR	3638330	Identifier	argc		3638283	0					
ANR	3638331	PrimaryExpression	3		3638283	1					
ANR	3638332	CompoundStatement		10:16:204:204	3638283	1					
ANR	3638333	ExpressionStatement	pid = atoi ( argv [ 2 ] )	272:2:8147:8166	3638283	0	True				
ANR	3638334	AssignmentExpression	pid = atoi ( argv [ 2 ] )		3638283	0		=			
ANR	3638335	Identifier	pid		3638283	0					
ANR	3638336	CallExpression	atoi ( argv [ 2 ] )		3638283	1					
ANR	3638337	Callee	atoi		3638283	0					
ANR	3638338	Identifier	atoi		3638283	0					
ANR	3638339	ArgumentList	argv [ 2 ]		3638283	1					
ANR	3638340	Argument	argv [ 2 ]		3638283	0					
ANR	3638341	ArrayIndexing	argv [ 2 ]		3638283	0					
ANR	3638342	Identifier	argv		3638283	0					
ANR	3638343	PrimaryExpression	2		3638283	1					
ANR	3638344	IfStatement	if ( pid <= 0 )		3638283	1					
ANR	3638345	Condition	pid <= 0	273:6:8174:8181	3638283	0	True				
ANR	3638346	RelationalExpression	pid <= 0		3638283	0		<=			
ANR	3638347	Identifier	pid		3638283	0					
ANR	3638348	PrimaryExpression	0		3638283	1					
ANR	3638349	CompoundStatement		12:16:245:245	3638283	1					
ANR	3638350	ExpressionStatement	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 2 ] )"	274:3:8189:8241	3638283	0	True				
ANR	3638351	CallExpression	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 2 ] )"		3638283	0					
ANR	3638352	Callee	fprintf		3638283	0					
ANR	3638353	Identifier	fprintf		3638283	0					
ANR	3638354	ArgumentList	stderr		3638283	1					
ANR	3638355	Argument	stderr		3638283	0					
ANR	3638356	Identifier	stderr		3638283	0					
ANR	3638357	Argument	"""error: invalid pid: %s\\n"""		3638283	1					
ANR	3638358	PrimaryExpression	"""error: invalid pid: %s\\n"""		3638283	0					
ANR	3638359	Argument	argv [ 2 ]		3638283	2					
ANR	3638360	ArrayIndexing	argv [ 2 ]		3638283	0					
ANR	3638361	Identifier	argv		3638283	0					
ANR	3638362	PrimaryExpression	2		3638283	1					
ANR	3638363	ReturnStatement	return 1 ;	275:3:8246:8254	3638283	1	True				
ANR	3638364	PrimaryExpression	1		3638283	0					
ANR	3638365	IdentifierDeclStatement	bool success ;	278:1:8264:8276	3638283	4	True				
ANR	3638366	IdentifierDecl	success		3638283	0					
ANR	3638367	IdentifierDeclType	bool		3638283	0					
ANR	3638368	Identifier	success		3638283	1					
ANR	3638369	IfStatement	"if ( ! pfc . track_family_via_cgroup ( pid , cgroup , success ) )"		3638283	5					
ANR	3638370	Condition	"! pfc . track_family_via_cgroup ( pid , cgroup , success )"	279:5:8283:8332	3638283	0	True				
ANR	3638371	UnaryOperationExpression	"! pfc . track_family_via_cgroup ( pid , cgroup , success )"		3638283	0					
ANR	3638372	UnaryOperator	!		3638283	0					
ANR	3638373	CallExpression	"pfc . track_family_via_cgroup ( pid , cgroup , success )"		3638283	1					
ANR	3638374	Callee	pfc . track_family_via_cgroup		3638283	0					
ANR	3638375	MemberAccess	pfc . track_family_via_cgroup		3638283	0					
ANR	3638376	Identifier	pfc		3638283	0					
ANR	3638377	Identifier	track_family_via_cgroup		3638283	1					
ANR	3638378	ArgumentList	pid		3638283	1					
ANR	3638379	Argument	pid		3638283	0					
ANR	3638380	Identifier	pid		3638283	0					
ANR	3638381	Argument	cgroup		3638283	1					
ANR	3638382	Identifier	cgroup		3638283	0					
ANR	3638383	Argument	success		3638283	2					
ANR	3638384	Identifier	success		3638283	0					
ANR	3638385	CompoundStatement		18:57:396:396	3638283	1					
ANR	3638386	ExpressionStatement	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"	280:2:8339:8397	3638283	0	True				
ANR	3638387	CallExpression	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"		3638283	0					
ANR	3638388	Callee	fprintf		3638283	0					
ANR	3638389	Identifier	fprintf		3638283	0					
ANR	3638390	ArgumentList	stderr		3638283	1					
ANR	3638391	Argument	stderr		3638283	0					
ANR	3638392	Identifier	stderr		3638283	0					
ANR	3638393	Argument	"""error: communication error with ProcD\\n"""		3638283	1					
ANR	3638394	PrimaryExpression	"""error: communication error with ProcD\\n"""		3638283	0					
ANR	3638395	ReturnStatement	return 1 ;	281:2:8401:8409	3638283	1	True				
ANR	3638396	PrimaryExpression	1		3638283	0					
ANR	3638397	IfStatement	if ( ! success )		3638283	6					
ANR	3638398	Condition	! success	283:5:8419:8426	3638283	0	True				
ANR	3638399	UnaryOperationExpression	! success		3638283	0					
ANR	3638400	UnaryOperator	!		3638283	0					
ANR	3638401	Identifier	success		3638283	1					
ANR	3638402	CompoundStatement		22:15:490:490	3638283	1					
ANR	3638403	ExpressionStatement	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"	284:2:8433:8504	3638283	0	True				
ANR	3638404	CallExpression	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"		3638283	0					
ANR	3638405	Callee	fprintf		3638283	0					
ANR	3638406	Identifier	fprintf		3638283	0					
ANR	3638407	ArgumentList	stderr		3638283	1					
ANR	3638408	Argument	stderr		3638283	0					
ANR	3638409	Identifier	stderr		3638283	0					
ANR	3638410	Argument	"""error: %s command failed with ProcD\\n"""		3638283	1					
ANR	3638411	PrimaryExpression	"""error: %s command failed with ProcD\\n"""		3638283	0					
ANR	3638412	Argument	argv [ 0 ]		3638283	2					
ANR	3638413	ArrayIndexing	argv [ 0 ]		3638283	0					
ANR	3638414	Identifier	argv		3638283	0					
ANR	3638415	PrimaryExpression	0		3638283	1					
ANR	3638416	ReturnStatement	return 1 ;	287:2:8508:8516	3638283	1	True				
ANR	3638417	PrimaryExpression	1		3638283	0					
ANR	3638418	ReturnStatement	return 0 ;	289:1:8522:8530	3638283	7	True				
ANR	3638419	PrimaryExpression	0		3638283	0					
ANR	3638420	ReturnType	static int		3638283	1					
ANR	3638421	Identifier	track_by_associated_cgroup		3638283	2					
ANR	3638422	ParameterList	"ProcFamilyClient & pfc , int argc , char * argv [ ]"		3638283	3					
ANR	3638423	Parameter	ProcFamilyClient & pfc	261:27:7891:7911	3638283	0	True				
ANR	3638424	ParameterType	ProcFamilyClient &		3638283	0					
ANR	3638425	Identifier	pfc		3638283	1					
ANR	3638426	Parameter	int argc	261:50:7914:7921	3638283	1	True				
ANR	3638427	ParameterType	int		3638283	0					
ANR	3638428	Identifier	argc		3638283	1					
ANR	3638429	Parameter	char * argv [ ]	261:60:7924:7935	3638283	2	True				
ANR	3638430	ParameterType	char * [ ]		3638283	0					
ANR	3638431	Identifier	argv		3638283	1					
ANR	3638432	CFGEntryNode	ENTRY		3638283		True				
ANR	3638433	CFGExitNode	EXIT		3638283		True				
ANR	3638434	Symbol	argc		3638283						
ANR	3638435	Symbol	atoi		3638283						
ANR	3638436	Symbol	pfc . track_family_via_cgroup		3638283						
ANR	3638437	Symbol	success		3638283						
ANR	3638438	Symbol	* argv		3638283						
ANR	3638439	Symbol	pid		3638283						
ANR	3638440	Symbol	pfc		3638283						
ANR	3638441	Symbol	stderr		3638283						
ANR	3638442	Symbol	cgroup		3638283						
ANR	3638443	Symbol	argv		3638283						
ANR	3638444	Function	dump	299:0:8715:9888							
ANR	3638445	FunctionDef	"dump (ProcFamilyClient & pfc , int argc , char * argv [ ])"		3638444	0					
ANR	3638446	CompoundStatement		301:0:8778:9888	3638444	0					
ANR	3638447	IfStatement	if ( argc > 2 )		3638444	0					
ANR	3638448	Condition	argc > 2	302:5:8785:8792	3638444	0	True				
ANR	3638449	RelationalExpression	argc > 2		3638444	0		>			
ANR	3638450	Identifier	argc		3638444	0					
ANR	3638451	PrimaryExpression	2		3638444	1					
ANR	3638452	CompoundStatement		2:15:16:16	3638444	1					
ANR	3638453	ExpressionStatement	"fprintf ( stderr , ""error: argument synopsis for %s: [<pid>]\\n"" , argv [ 0 ] )"	303:2:8799:8889	3638444	0	True				
ANR	3638454	CallExpression	"fprintf ( stderr , ""error: argument synopsis for %s: [<pid>]\\n"" , argv [ 0 ] )"		3638444	0					
ANR	3638455	Callee	fprintf		3638444	0					
ANR	3638456	Identifier	fprintf		3638444	0					
ANR	3638457	ArgumentList	stderr		3638444	1					
ANR	3638458	Argument	stderr		3638444	0					
ANR	3638459	Identifier	stderr		3638444	0					
ANR	3638460	Argument	"""error: argument synopsis for %s: [<pid>]\\n"""		3638444	1					
ANR	3638461	PrimaryExpression	"""error: argument synopsis for %s: [<pid>]\\n"""		3638444	0					
ANR	3638462	Argument	argv [ 0 ]		3638444	2					
ANR	3638463	ArrayIndexing	argv [ 0 ]		3638444	0					
ANR	3638464	Identifier	argv		3638444	0					
ANR	3638465	PrimaryExpression	0		3638444	1					
ANR	3638466	ReturnStatement	return 1 ;	306:2:8893:8901	3638444	1	True				
ANR	3638467	PrimaryExpression	1		3638444	0					
ANR	3638468	IdentifierDeclStatement	pid_t pid = 0 ;	308:1:8907:8920	3638444	1	True				
ANR	3638469	IdentifierDecl	pid = 0		3638444	0					
ANR	3638470	IdentifierDeclType	pid_t		3638444	0					
ANR	3638471	Identifier	pid		3638444	1					
ANR	3638472	AssignmentExpression	pid = 0		3638444	2		=			
ANR	3638473	Identifier	pid		3638444	0					
ANR	3638474	PrimaryExpression	0		3638444	1					
ANR	3638475	IfStatement	if ( argc == 2 )		3638444	2					
ANR	3638476	Condition	argc == 2	309:5:8927:8935	3638444	0	True				
ANR	3638477	EqualityExpression	argc == 2		3638444	0		==			
ANR	3638478	Identifier	argc		3638444	0					
ANR	3638479	PrimaryExpression	2		3638444	1					
ANR	3638480	CompoundStatement		9:16:159:159	3638444	1					
ANR	3638481	ExpressionStatement	pid = atoi ( argv [ 1 ] )	310:2:8942:8961	3638444	0	True				
ANR	3638482	AssignmentExpression	pid = atoi ( argv [ 1 ] )		3638444	0		=			
ANR	3638483	Identifier	pid		3638444	0					
ANR	3638484	CallExpression	atoi ( argv [ 1 ] )		3638444	1					
ANR	3638485	Callee	atoi		3638444	0					
ANR	3638486	Identifier	atoi		3638444	0					
ANR	3638487	ArgumentList	argv [ 1 ]		3638444	1					
ANR	3638488	Argument	argv [ 1 ]		3638444	0					
ANR	3638489	ArrayIndexing	argv [ 1 ]		3638444	0					
ANR	3638490	Identifier	argv		3638444	0					
ANR	3638491	PrimaryExpression	1		3638444	1					
ANR	3638492	IfStatement	if ( pid == 0 )		3638444	1					
ANR	3638493	Condition	pid == 0	311:6:8969:8976	3638444	0	True				
ANR	3638494	EqualityExpression	pid == 0		3638444	0		==			
ANR	3638495	Identifier	pid		3638444	0					
ANR	3638496	PrimaryExpression	0		3638444	1					
ANR	3638497	CompoundStatement		11:16:200:200	3638444	1					
ANR	3638498	ExpressionStatement	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 1 ] )"	312:3:8984:9036	3638444	0	True				
ANR	3638499	CallExpression	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 1 ] )"		3638444	0					
ANR	3638500	Callee	fprintf		3638444	0					
ANR	3638501	Identifier	fprintf		3638444	0					
ANR	3638502	ArgumentList	stderr		3638444	1					
ANR	3638503	Argument	stderr		3638444	0					
ANR	3638504	Identifier	stderr		3638444	0					
ANR	3638505	Argument	"""error: invalid pid: %s\\n"""		3638444	1					
ANR	3638506	PrimaryExpression	"""error: invalid pid: %s\\n"""		3638444	0					
ANR	3638507	Argument	argv [ 1 ]		3638444	2					
ANR	3638508	ArrayIndexing	argv [ 1 ]		3638444	0					
ANR	3638509	Identifier	argv		3638444	0					
ANR	3638510	PrimaryExpression	1		3638444	1					
ANR	3638511	ReturnStatement	return 1 ;	313:3:9041:9049	3638444	1	True				
ANR	3638512	PrimaryExpression	1		3638444	0					
ANR	3638513	IdentifierDeclStatement	bool response ;	317:1:9060:9073	3638444	3	True				
ANR	3638514	IdentifierDecl	response		3638444	0					
ANR	3638515	IdentifierDeclType	bool		3638444	0					
ANR	3638516	Identifier	response		3638444	1					
ANR	3638517	IdentifierDeclStatement	std :: vector < ProcFamilyDump > vec ;	318:1:9076:9107	3638444	4	True				
ANR	3638518	IdentifierDecl	vec		3638444	0					
ANR	3638519	IdentifierDeclType	std :: vector < ProcFamilyDump >		3638444	0					
ANR	3638520	Identifier	vec		3638444	1					
ANR	3638521	IfStatement	"if ( ! pfc . dump ( pid , response , vec ) )"		3638444	5					
ANR	3638522	Condition	"! pfc . dump ( pid , response , vec )"	319:5:9114:9142	3638444	0	True				
ANR	3638523	UnaryOperationExpression	"! pfc . dump ( pid , response , vec )"		3638444	0					
ANR	3638524	UnaryOperator	!		3638444	0					
ANR	3638525	CallExpression	"pfc . dump ( pid , response , vec )"		3638444	1					
ANR	3638526	Callee	pfc . dump		3638444	0					
ANR	3638527	MemberAccess	pfc . dump		3638444	0					
ANR	3638528	Identifier	pfc		3638444	0					
ANR	3638529	Identifier	dump		3638444	1					
ANR	3638530	ArgumentList	pid		3638444	1					
ANR	3638531	Argument	pid		3638444	0					
ANR	3638532	Identifier	pid		3638444	0					
ANR	3638533	Argument	response		3638444	1					
ANR	3638534	Identifier	response		3638444	0					
ANR	3638535	Argument	vec		3638444	2					
ANR	3638536	Identifier	vec		3638444	0					
ANR	3638537	CompoundStatement		19:36:366:366	3638444	1					
ANR	3638538	ExpressionStatement	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"	320:2:9149:9207	3638444	0	True				
ANR	3638539	CallExpression	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"		3638444	0					
ANR	3638540	Callee	fprintf		3638444	0					
ANR	3638541	Identifier	fprintf		3638444	0					
ANR	3638542	ArgumentList	stderr		3638444	1					
ANR	3638543	Argument	stderr		3638444	0					
ANR	3638544	Identifier	stderr		3638444	0					
ANR	3638545	Argument	"""error: communication error with ProcD\\n"""		3638444	1					
ANR	3638546	PrimaryExpression	"""error: communication error with ProcD\\n"""		3638444	0					
ANR	3638547	ReturnStatement	return 1 ;	321:2:9211:9219	3638444	1	True				
ANR	3638548	PrimaryExpression	1		3638444	0					
ANR	3638549	IfStatement	if ( ! response )		3638444	6					
ANR	3638550	Condition	! response	323:5:9229:9237	3638444	0	True				
ANR	3638551	UnaryOperationExpression	! response		3638444	0					
ANR	3638552	UnaryOperator	!		3638444	0					
ANR	3638553	Identifier	response		3638444	1					
ANR	3638554	CompoundStatement		23:16:461:461	3638444	1					
ANR	3638555	ExpressionStatement	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"	324:2:9244:9329	3638444	0	True				
ANR	3638556	CallExpression	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"		3638444	0					
ANR	3638557	Callee	fprintf		3638444	0					
ANR	3638558	Identifier	fprintf		3638444	0					
ANR	3638559	ArgumentList	stderr		3638444	1					
ANR	3638560	Argument	stderr		3638444	0					
ANR	3638561	Identifier	stderr		3638444	0					
ANR	3638562	Argument	"""error: %s command failed with ProcD\\n"""		3638444	1					
ANR	3638563	PrimaryExpression	"""error: %s command failed with ProcD\\n"""		3638444	0					
ANR	3638564	Argument	argv [ 0 ]		3638444	2					
ANR	3638565	ArrayIndexing	argv [ 0 ]		3638444	0					
ANR	3638566	Identifier	argv		3638444	0					
ANR	3638567	PrimaryExpression	0		3638444	1					
ANR	3638568	ReturnStatement	return 1 ;	327:2:9333:9341	3638444	1	True				
ANR	3638569	PrimaryExpression	1		3638444	0					
ANR	3638570	ForStatement	for ( size_t i = 0 ; i < vec . size ( ) ; ++ i )		3638444	7					
ANR	3638571	ForInit	size_t i = 0 ;	330:6:9353:9365	3638444	0	True				
ANR	3638572	IdentifierDeclStatement	size_t i = 0 ;		3638444	0					
ANR	3638573	IdentifierDecl	i = 0		3638444	0					
ANR	3638574	IdentifierDeclType	size_t		3638444	0					
ANR	3638575	Identifier	i		3638444	1					
ANR	3638576	AssignmentExpression	i = 0		3638444	2		=			
ANR	3638577	Identifier	i		3638444	0					
ANR	3638578	PrimaryExpression	0		3638444	1					
ANR	3638579	Condition	i < vec . size ( )	330:20:9367:9380	3638444	1	True				
ANR	3638580	RelationalExpression	i < vec . size ( )		3638444	0		<			
ANR	3638581	Identifier	i		3638444	0					
ANR	3638582	CallExpression	vec . size ( )		3638444	1					
ANR	3638583	Callee	vec . size		3638444	0					
ANR	3638584	MemberAccess	vec . size		3638444	0					
ANR	3638585	Identifier	vec		3638444	0					
ANR	3638586	Identifier	size		3638444	1					
ANR	3638587	ArgumentList			3638444	1					
ANR	3638588	UnaryExpression	++ i	330:36:9383:9385	3638444	2	True				
ANR	3638589	IncDec	++		3638444	0					
ANR	3638590	Identifier	i		3638444	1					
ANR	3638591	CompoundStatement		30:41:609:609	3638444	3					
ANR	3638592	ExpressionStatement	"printf ( ""%u %u %u %d\\n"" , ( unsigned ) vec [ i ] . parent_root , ( unsigned ) vec [ i ] . root_pid , ( unsigned ) vec [ i ] . watcher_pid , ( int ) vec [ i ] . procs . size ( ) )"	331:2:9392:9564	3638444	0	True				
ANR	3638593	CallExpression	"printf ( ""%u %u %u %d\\n"" , ( unsigned ) vec [ i ] . parent_root , ( unsigned ) vec [ i ] . root_pid , ( unsigned ) vec [ i ] . watcher_pid , ( int ) vec [ i ] . procs . size ( ) )"		3638444	0					
ANR	3638594	Callee	printf		3638444	0					
ANR	3638595	Identifier	printf		3638444	0					
ANR	3638596	ArgumentList	"""%u %u %u %d\\n"""		3638444	1					
ANR	3638597	Argument	"""%u %u %u %d\\n"""		3638444	0					
ANR	3638598	PrimaryExpression	"""%u %u %u %d\\n"""		3638444	0					
ANR	3638599	Argument	( unsigned ) vec [ i ] . parent_root		3638444	1					
ANR	3638600	CastExpression	( unsigned ) vec [ i ] . parent_root		3638444	0					
ANR	3638601	CastTarget	unsigned		3638444	0					
ANR	3638602	MemberAccess	vec [ i ] . parent_root		3638444	1					
ANR	3638603	ArrayIndexing	vec [ i ]		3638444	0					
ANR	3638604	Identifier	vec		3638444	0					
ANR	3638605	Identifier	i		3638444	1					
ANR	3638606	Identifier	parent_root		3638444	1					
ANR	3638607	Argument	( unsigned ) vec [ i ] . root_pid		3638444	2					
ANR	3638608	CastExpression	( unsigned ) vec [ i ] . root_pid		3638444	0					
ANR	3638609	CastTarget	unsigned		3638444	0					
ANR	3638610	MemberAccess	vec [ i ] . root_pid		3638444	1					
ANR	3638611	ArrayIndexing	vec [ i ]		3638444	0					
ANR	3638612	Identifier	vec		3638444	0					
ANR	3638613	Identifier	i		3638444	1					
ANR	3638614	Identifier	root_pid		3638444	1					
ANR	3638615	Argument	( unsigned ) vec [ i ] . watcher_pid		3638444	3					
ANR	3638616	CastExpression	( unsigned ) vec [ i ] . watcher_pid		3638444	0					
ANR	3638617	CastTarget	unsigned		3638444	0					
ANR	3638618	MemberAccess	vec [ i ] . watcher_pid		3638444	1					
ANR	3638619	ArrayIndexing	vec [ i ]		3638444	0					
ANR	3638620	Identifier	vec		3638444	0					
ANR	3638621	Identifier	i		3638444	1					
ANR	3638622	Identifier	watcher_pid		3638444	1					
ANR	3638623	Argument	( int ) vec [ i ] . procs . size ( )		3638444	4					
ANR	3638624	CastExpression	( int ) vec [ i ] . procs . size ( )		3638444	0					
ANR	3638625	CastTarget	int		3638444	0					
ANR	3638626	CallExpression	vec [ i ] . procs . size ( )		3638444	1					
ANR	3638627	Callee	vec [ i ] . procs . size		3638444	0					
ANR	3638628	MemberAccess	vec [ i ] . procs . size		3638444	0					
ANR	3638629	MemberAccess	vec [ i ] . procs		3638444	0					
ANR	3638630	ArrayIndexing	vec [ i ]		3638444	0					
ANR	3638631	Identifier	vec		3638444	0					
ANR	3638632	Identifier	i		3638444	1					
ANR	3638633	Identifier	procs		3638444	1					
ANR	3638634	Identifier	size		3638444	1					
ANR	3638635	ArgumentList			3638444	1					
ANR	3638636	ForStatement	for ( size_t j = 0 ; j < vec [ i ] . procs . size ( ) ; ++ j )		3638444	1					
ANR	3638637	ForInit	size_t j = 0 ;	336:7:9573:9585	3638444	0	True				
ANR	3638638	IdentifierDeclStatement	size_t j = 0 ;		3638444	0					
ANR	3638639	IdentifierDecl	j = 0		3638444	0					
ANR	3638640	IdentifierDeclType	size_t		3638444	0					
ANR	3638641	Identifier	j		3638444	1					
ANR	3638642	AssignmentExpression	j = 0		3638444	2		=			
ANR	3638643	Identifier	j		3638444	0					
ANR	3638644	PrimaryExpression	0		3638444	1					
ANR	3638645	Condition	j < vec [ i ] . procs . size ( )	336:21:9587:9609	3638444	1	True				
ANR	3638646	RelationalExpression	j < vec [ i ] . procs . size ( )		3638444	0		<			
ANR	3638647	Identifier	j		3638444	0					
ANR	3638648	CallExpression	vec [ i ] . procs . size ( )		3638444	1					
ANR	3638649	Callee	vec [ i ] . procs . size		3638444	0					
ANR	3638650	MemberAccess	vec [ i ] . procs . size		3638444	0					
ANR	3638651	MemberAccess	vec [ i ] . procs		3638444	0					
ANR	3638652	ArrayIndexing	vec [ i ]		3638444	0					
ANR	3638653	Identifier	vec		3638444	0					
ANR	3638654	Identifier	i		3638444	1					
ANR	3638655	Identifier	procs		3638444	1					
ANR	3638656	Identifier	size		3638444	1					
ANR	3638657	ArgumentList			3638444	1					
ANR	3638658	UnaryExpression	++ j	336:46:9612:9614	3638444	2	True				
ANR	3638659	IncDec	++		3638444	0					
ANR	3638660	Identifier	j		3638444	1					
ANR	3638661	CompoundStatement		36:51:838:838	3638444	3					
ANR	3638662	Statement	printf	337:3:9622:9627	3638444	0	True				
ANR	3638663	Statement	(	337:9:9628:9628	3638444	1	True				
ANR	3638664	Statement	"""%u %u """	337:10:9629:9636	3638444	2	True				
ANR	3638665	Statement	PROCAPI_BIRTHDAY_FORMAT	337:19:9638:9660	3638444	3	True				
ANR	3638666	Statement	""" %ld %ld\\n"""	337:43:9662:9673	3638444	4	True				
ANR	3638667	Statement	","	337:55:9674:9674	3638444	5	True				
ANR	3638668	Statement	(	338:10:9686:9686	3638444	6	True				
ANR	3638669	Statement	unsigned	338:11:9687:9694	3638444	7	True				
ANR	3638670	Statement	)	338:19:9695:9695	3638444	8	True				
ANR	3638671	Statement	vec	338:20:9696:9698	3638444	9	True				
ANR	3638672	Statement	[	338:23:9699:9699	3638444	10	True				
ANR	3638673	Statement	i	338:24:9700:9700	3638444	11	True				
ANR	3638674	Statement	]	338:25:9701:9701	3638444	12	True				
ANR	3638675	Statement	.	338:26:9702:9702	3638444	13	True				
ANR	3638676	Statement	procs	338:27:9703:9707	3638444	14	True				
ANR	3638677	Statement	[	338:32:9708:9708	3638444	15	True				
ANR	3638678	Statement	j	338:33:9709:9709	3638444	16	True				
ANR	3638679	Statement	]	338:34:9710:9710	3638444	17	True				
ANR	3638680	Statement	.	338:35:9711:9711	3638444	18	True				
ANR	3638681	Statement	pid	338:36:9712:9714	3638444	19	True				
ANR	3638682	Statement	","	338:39:9715:9715	3638444	20	True				
ANR	3638683	Statement	(	339:10:9727:9727	3638444	21	True				
ANR	3638684	Statement	unsigned	339:11:9728:9735	3638444	22	True				
ANR	3638685	Statement	)	339:19:9736:9736	3638444	23	True				
ANR	3638686	Statement	vec	339:20:9737:9739	3638444	24	True				
ANR	3638687	Statement	[	339:23:9740:9740	3638444	25	True				
ANR	3638688	Statement	i	339:24:9741:9741	3638444	26	True				
ANR	3638689	Statement	]	339:25:9742:9742	3638444	27	True				
ANR	3638690	Statement	.	339:26:9743:9743	3638444	28	True				
ANR	3638691	Statement	procs	339:27:9744:9748	3638444	29	True				
ANR	3638692	Statement	[	339:32:9749:9749	3638444	30	True				
ANR	3638693	Statement	j	339:33:9750:9750	3638444	31	True				
ANR	3638694	Statement	]	339:34:9751:9751	3638444	32	True				
ANR	3638695	Statement	.	339:35:9752:9752	3638444	33	True				
ANR	3638696	Statement	ppid	339:36:9753:9756	3638444	34	True				
ANR	3638697	Statement	","	339:40:9757:9757	3638444	35	True				
ANR	3638698	Statement	vec	340:10:9769:9771	3638444	36	True				
ANR	3638699	Statement	[	340:13:9772:9772	3638444	37	True				
ANR	3638700	Statement	i	340:14:9773:9773	3638444	38	True				
ANR	3638701	Statement	]	340:15:9774:9774	3638444	39	True				
ANR	3638702	Statement	.	340:16:9775:9775	3638444	40	True				
ANR	3638703	Statement	procs	340:17:9776:9780	3638444	41	True				
ANR	3638704	Statement	[	340:22:9781:9781	3638444	42	True				
ANR	3638705	Statement	j	340:23:9782:9782	3638444	43	True				
ANR	3638706	Statement	]	340:24:9783:9783	3638444	44	True				
ANR	3638707	Statement	.	340:25:9784:9784	3638444	45	True				
ANR	3638708	Statement	birthday	340:26:9785:9792	3638444	46	True				
ANR	3638709	Statement	","	340:34:9793:9793	3638444	47	True				
ANR	3638710	Statement	vec	341:10:9805:9807	3638444	48	True				
ANR	3638711	Statement	[	341:13:9808:9808	3638444	49	True				
ANR	3638712	Statement	i	341:14:9809:9809	3638444	50	True				
ANR	3638713	Statement	]	341:15:9810:9810	3638444	51	True				
ANR	3638714	Statement	.	341:16:9811:9811	3638444	52	True				
ANR	3638715	Statement	procs	341:17:9812:9816	3638444	53	True				
ANR	3638716	Statement	[	341:22:9817:9817	3638444	54	True				
ANR	3638717	Statement	j	341:23:9818:9818	3638444	55	True				
ANR	3638718	Statement	]	341:24:9819:9819	3638444	56	True				
ANR	3638719	Statement	.	341:25:9820:9820	3638444	57	True				
ANR	3638720	Statement	user_time	341:26:9821:9829	3638444	58	True				
ANR	3638721	Statement	","	341:35:9830:9830	3638444	59	True				
ANR	3638722	Statement	vec	342:10:9842:9844	3638444	60	True				
ANR	3638723	Statement	[	342:13:9845:9845	3638444	61	True				
ANR	3638724	Statement	i	342:14:9846:9846	3638444	62	True				
ANR	3638725	Statement	]	342:15:9847:9847	3638444	63	True				
ANR	3638726	Statement	.	342:16:9848:9848	3638444	64	True				
ANR	3638727	Statement	procs	342:17:9849:9853	3638444	65	True				
ANR	3638728	Statement	[	342:22:9854:9854	3638444	66	True				
ANR	3638729	Statement	j	342:23:9855:9855	3638444	67	True				
ANR	3638730	Statement	]	342:24:9856:9856	3638444	68	True				
ANR	3638731	Statement	.	342:25:9857:9857	3638444	69	True				
ANR	3638732	Statement	sys_time	342:26:9858:9865	3638444	70	True				
ANR	3638733	Statement	)	342:34:9866:9866	3638444	71	True				
ANR	3638734	ExpressionStatement		342:35:9867:9867	3638444	72	True				
ANR	3638735	ReturnStatement	return 0 ;	346:1:9878:9886	3638444	8	True				
ANR	3638736	PrimaryExpression	0		3638444	0					
ANR	3638737	ReturnType	static int		3638444	1					
ANR	3638738	Identifier	dump		3638444	2					
ANR	3638739	ParameterList	"ProcFamilyClient & pfc , int argc , char * argv [ ]"		3638444	3					
ANR	3638740	Parameter	ProcFamilyClient & pfc	300:5:8731:8751	3638444	0	True				
ANR	3638741	ParameterType	ProcFamilyClient &		3638444	0					
ANR	3638742	Identifier	pfc		3638444	1					
ANR	3638743	Parameter	int argc	300:28:8754:8761	3638444	1	True				
ANR	3638744	ParameterType	int		3638444	0					
ANR	3638745	Identifier	argc		3638444	1					
ANR	3638746	Parameter	char * argv [ ]	300:38:8764:8775	3638444	2	True				
ANR	3638747	ParameterType	char * [ ]		3638444	0					
ANR	3638748	Identifier	argv		3638444	1					
ANR	3638749	CFGEntryNode	ENTRY		3638444		True				
ANR	3638750	CFGExitNode	EXIT		3638444		True				
ANR	3638751	Symbol	argc		3638444						
ANR	3638752	Symbol	atoi		3638444						
ANR	3638753	Symbol	vec [ i ] . root_pid		3638444						
ANR	3638754	Symbol	i		3638444						
ANR	3638755	Symbol	* argv		3638444						
ANR	3638756	Symbol	pid		3638444						
ANR	3638757	Symbol	j		3638444						
ANR	3638758	Symbol	pfc . dump		3638444						
ANR	3638759	Symbol	vec [ i ] . procs		3638444						
ANR	3638760	Symbol	pfc		3638444						
ANR	3638761	Symbol	stderr		3638444						
ANR	3638762	Symbol	argv		3638444						
ANR	3638763	Symbol	vec . size		3638444						
ANR	3638764	Symbol	* i		3638444						
ANR	3638765	Symbol	vec		3638444						
ANR	3638766	Symbol	response		3638444						
ANR	3638767	Symbol	vec [ i ] . watcher_pid		3638444						
ANR	3638768	Symbol	vec [ i ] . procs . size		3638444						
ANR	3638769	Symbol	vec [ i ] . parent_root		3638444						
ANR	3638770	Symbol	* vec		3638444						
ANR	3638771	Function	list	349:0:9891:10940							
ANR	3638772	FunctionDef	"list (ProcFamilyClient & pfc , int argc , char * argv [ ])"		3638771	0					
ANR	3638773	CompoundStatement		351:0:9954:10940	3638771	0					
ANR	3638774	IfStatement	if ( argc > 2 )		3638771	0					
ANR	3638775	Condition	argc > 2	352:5:9961:9968	3638771	0	True				
ANR	3638776	RelationalExpression	argc > 2		3638771	0		>			
ANR	3638777	Identifier	argc		3638771	0					
ANR	3638778	PrimaryExpression	2		3638771	1					
ANR	3638779	CompoundStatement		2:15:16:16	3638771	1					
ANR	3638780	ExpressionStatement	"fprintf ( stderr , ""error: argument synopsis for %s: [<pid>]\\n"" , argv [ 0 ] )"	353:2:9975:10065	3638771	0	True				
ANR	3638781	CallExpression	"fprintf ( stderr , ""error: argument synopsis for %s: [<pid>]\\n"" , argv [ 0 ] )"		3638771	0					
ANR	3638782	Callee	fprintf		3638771	0					
ANR	3638783	Identifier	fprintf		3638771	0					
ANR	3638784	ArgumentList	stderr		3638771	1					
ANR	3638785	Argument	stderr		3638771	0					
ANR	3638786	Identifier	stderr		3638771	0					
ANR	3638787	Argument	"""error: argument synopsis for %s: [<pid>]\\n"""		3638771	1					
ANR	3638788	PrimaryExpression	"""error: argument synopsis for %s: [<pid>]\\n"""		3638771	0					
ANR	3638789	Argument	argv [ 0 ]		3638771	2					
ANR	3638790	ArrayIndexing	argv [ 0 ]		3638771	0					
ANR	3638791	Identifier	argv		3638771	0					
ANR	3638792	PrimaryExpression	0		3638771	1					
ANR	3638793	ReturnStatement	return 1 ;	356:2:10069:10077	3638771	1	True				
ANR	3638794	PrimaryExpression	1		3638771	0					
ANR	3638795	IdentifierDeclStatement	pid_t pid = 0 ;	358:1:10083:10096	3638771	1	True				
ANR	3638796	IdentifierDecl	pid = 0		3638771	0					
ANR	3638797	IdentifierDeclType	pid_t		3638771	0					
ANR	3638798	Identifier	pid		3638771	1					
ANR	3638799	AssignmentExpression	pid = 0		3638771	2		=			
ANR	3638800	Identifier	pid		3638771	0					
ANR	3638801	PrimaryExpression	0		3638771	1					
ANR	3638802	IfStatement	if ( argc == 2 )		3638771	2					
ANR	3638803	Condition	argc == 2	359:5:10103:10111	3638771	0	True				
ANR	3638804	EqualityExpression	argc == 2		3638771	0		==			
ANR	3638805	Identifier	argc		3638771	0					
ANR	3638806	PrimaryExpression	2		3638771	1					
ANR	3638807	CompoundStatement		9:16:159:159	3638771	1					
ANR	3638808	ExpressionStatement	pid = atoi ( argv [ 1 ] )	360:2:10118:10137	3638771	0	True				
ANR	3638809	AssignmentExpression	pid = atoi ( argv [ 1 ] )		3638771	0		=			
ANR	3638810	Identifier	pid		3638771	0					
ANR	3638811	CallExpression	atoi ( argv [ 1 ] )		3638771	1					
ANR	3638812	Callee	atoi		3638771	0					
ANR	3638813	Identifier	atoi		3638771	0					
ANR	3638814	ArgumentList	argv [ 1 ]		3638771	1					
ANR	3638815	Argument	argv [ 1 ]		3638771	0					
ANR	3638816	ArrayIndexing	argv [ 1 ]		3638771	0					
ANR	3638817	Identifier	argv		3638771	0					
ANR	3638818	PrimaryExpression	1		3638771	1					
ANR	3638819	IfStatement	if ( pid == 0 )		3638771	1					
ANR	3638820	Condition	pid == 0	361:6:10145:10152	3638771	0	True				
ANR	3638821	EqualityExpression	pid == 0		3638771	0		==			
ANR	3638822	Identifier	pid		3638771	0					
ANR	3638823	PrimaryExpression	0		3638771	1					
ANR	3638824	CompoundStatement		11:16:200:200	3638771	1					
ANR	3638825	ExpressionStatement	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 1 ] )"	362:3:10160:10212	3638771	0	True				
ANR	3638826	CallExpression	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 1 ] )"		3638771	0					
ANR	3638827	Callee	fprintf		3638771	0					
ANR	3638828	Identifier	fprintf		3638771	0					
ANR	3638829	ArgumentList	stderr		3638771	1					
ANR	3638830	Argument	stderr		3638771	0					
ANR	3638831	Identifier	stderr		3638771	0					
ANR	3638832	Argument	"""error: invalid pid: %s\\n"""		3638771	1					
ANR	3638833	PrimaryExpression	"""error: invalid pid: %s\\n"""		3638771	0					
ANR	3638834	Argument	argv [ 1 ]		3638771	2					
ANR	3638835	ArrayIndexing	argv [ 1 ]		3638771	0					
ANR	3638836	Identifier	argv		3638771	0					
ANR	3638837	PrimaryExpression	1		3638771	1					
ANR	3638838	ReturnStatement	return 1 ;	363:3:10217:10225	3638771	1	True				
ANR	3638839	PrimaryExpression	1		3638771	0					
ANR	3638840	IdentifierDeclStatement	bool response ;	367:1:10236:10249	3638771	3	True				
ANR	3638841	IdentifierDecl	response		3638771	0					
ANR	3638842	IdentifierDeclType	bool		3638771	0					
ANR	3638843	Identifier	response		3638771	1					
ANR	3638844	IdentifierDeclStatement	std :: vector < ProcFamilyDump > vec ;	368:1:10252:10283	3638771	4	True				
ANR	3638845	IdentifierDecl	vec		3638771	0					
ANR	3638846	IdentifierDeclType	std :: vector < ProcFamilyDump >		3638771	0					
ANR	3638847	Identifier	vec		3638771	1					
ANR	3638848	IfStatement	"if ( ! pfc . dump ( pid , response , vec ) )"		3638771	5					
ANR	3638849	Condition	"! pfc . dump ( pid , response , vec )"	369:5:10290:10318	3638771	0	True				
ANR	3638850	UnaryOperationExpression	"! pfc . dump ( pid , response , vec )"		3638771	0					
ANR	3638851	UnaryOperator	!		3638771	0					
ANR	3638852	CallExpression	"pfc . dump ( pid , response , vec )"		3638771	1					
ANR	3638853	Callee	pfc . dump		3638771	0					
ANR	3638854	MemberAccess	pfc . dump		3638771	0					
ANR	3638855	Identifier	pfc		3638771	0					
ANR	3638856	Identifier	dump		3638771	1					
ANR	3638857	ArgumentList	pid		3638771	1					
ANR	3638858	Argument	pid		3638771	0					
ANR	3638859	Identifier	pid		3638771	0					
ANR	3638860	Argument	response		3638771	1					
ANR	3638861	Identifier	response		3638771	0					
ANR	3638862	Argument	vec		3638771	2					
ANR	3638863	Identifier	vec		3638771	0					
ANR	3638864	CompoundStatement		19:36:366:366	3638771	1					
ANR	3638865	ExpressionStatement	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"	370:2:10325:10383	3638771	0	True				
ANR	3638866	CallExpression	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"		3638771	0					
ANR	3638867	Callee	fprintf		3638771	0					
ANR	3638868	Identifier	fprintf		3638771	0					
ANR	3638869	ArgumentList	stderr		3638771	1					
ANR	3638870	Argument	stderr		3638771	0					
ANR	3638871	Identifier	stderr		3638771	0					
ANR	3638872	Argument	"""error: communication error with ProcD\\n"""		3638771	1					
ANR	3638873	PrimaryExpression	"""error: communication error with ProcD\\n"""		3638771	0					
ANR	3638874	ReturnStatement	return 1 ;	371:2:10387:10395	3638771	1	True				
ANR	3638875	PrimaryExpression	1		3638771	0					
ANR	3638876	IfStatement	if ( ! response )		3638771	6					
ANR	3638877	Condition	! response	373:5:10405:10413	3638771	0	True				
ANR	3638878	UnaryOperationExpression	! response		3638771	0					
ANR	3638879	UnaryOperator	!		3638771	0					
ANR	3638880	Identifier	response		3638771	1					
ANR	3638881	CompoundStatement		23:16:461:461	3638771	1					
ANR	3638882	ExpressionStatement	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"	374:2:10420:10505	3638771	0	True				
ANR	3638883	CallExpression	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"		3638771	0					
ANR	3638884	Callee	fprintf		3638771	0					
ANR	3638885	Identifier	fprintf		3638771	0					
ANR	3638886	ArgumentList	stderr		3638771	1					
ANR	3638887	Argument	stderr		3638771	0					
ANR	3638888	Identifier	stderr		3638771	0					
ANR	3638889	Argument	"""error: %s command failed with ProcD\\n"""		3638771	1					
ANR	3638890	PrimaryExpression	"""error: %s command failed with ProcD\\n"""		3638771	0					
ANR	3638891	Argument	argv [ 0 ]		3638771	2					
ANR	3638892	ArrayIndexing	argv [ 0 ]		3638771	0					
ANR	3638893	Identifier	argv		3638771	0					
ANR	3638894	PrimaryExpression	0		3638771	1					
ANR	3638895	ReturnStatement	return 1 ;	377:2:10509:10517	3638771	1	True				
ANR	3638896	PrimaryExpression	1		3638771	0					
ANR	3638897	ExpressionStatement	"printf ( ""PID PPID START_TIME USER_TIME SYS_TIME\\n"" )"	380:1:10524:10574	3638771	7	True				
ANR	3638898	CallExpression	"printf ( ""PID PPID START_TIME USER_TIME SYS_TIME\\n"" )"		3638771	0					
ANR	3638899	Callee	printf		3638771	0					
ANR	3638900	Identifier	printf		3638771	0					
ANR	3638901	ArgumentList	"""PID PPID START_TIME USER_TIME SYS_TIME\\n"""		3638771	1					
ANR	3638902	Argument	"""PID PPID START_TIME USER_TIME SYS_TIME\\n"""		3638771	0					
ANR	3638903	PrimaryExpression	"""PID PPID START_TIME USER_TIME SYS_TIME\\n"""		3638771	0					
ANR	3638904	ForStatement	for ( size_t i = 0 ; i < vec . size ( ) ; ++ i )		3638771	8					
ANR	3638905	ForInit	size_t i = 0 ;	381:6:10582:10594	3638771	0	True				
ANR	3638906	IdentifierDeclStatement	size_t i = 0 ;		3638771	0					
ANR	3638907	IdentifierDecl	i = 0		3638771	0					
ANR	3638908	IdentifierDeclType	size_t		3638771	0					
ANR	3638909	Identifier	i		3638771	1					
ANR	3638910	AssignmentExpression	i = 0		3638771	2		=			
ANR	3638911	Identifier	i		3638771	0					
ANR	3638912	PrimaryExpression	0		3638771	1					
ANR	3638913	Condition	i < vec . size ( )	381:20:10596:10609	3638771	1	True				
ANR	3638914	RelationalExpression	i < vec . size ( )		3638771	0		<			
ANR	3638915	Identifier	i		3638771	0					
ANR	3638916	CallExpression	vec . size ( )		3638771	1					
ANR	3638917	Callee	vec . size		3638771	0					
ANR	3638918	MemberAccess	vec . size		3638771	0					
ANR	3638919	Identifier	vec		3638771	0					
ANR	3638920	Identifier	size		3638771	1					
ANR	3638921	ArgumentList			3638771	1					
ANR	3638922	UnaryExpression	++ i	381:36:10612:10614	3638771	2	True				
ANR	3638923	IncDec	++		3638771	0					
ANR	3638924	Identifier	i		3638771	1					
ANR	3638925	CompoundStatement		31:41:662:662	3638771	3					
ANR	3638926	ForStatement	for ( size_t j = 0 ; j < vec [ i ] . procs . size ( ) ; ++ j )		3638771	0					
ANR	3638927	ForInit	size_t j = 0 ;	382:7:10626:10638	3638771	0	True				
ANR	3638928	IdentifierDeclStatement	size_t j = 0 ;		3638771	0					
ANR	3638929	IdentifierDecl	j = 0		3638771	0					
ANR	3638930	IdentifierDeclType	size_t		3638771	0					
ANR	3638931	Identifier	j		3638771	1					
ANR	3638932	AssignmentExpression	j = 0		3638771	2		=			
ANR	3638933	Identifier	j		3638771	0					
ANR	3638934	PrimaryExpression	0		3638771	1					
ANR	3638935	Condition	j < vec [ i ] . procs . size ( )	382:21:10640:10662	3638771	1	True				
ANR	3638936	RelationalExpression	j < vec [ i ] . procs . size ( )		3638771	0		<			
ANR	3638937	Identifier	j		3638771	0					
ANR	3638938	CallExpression	vec [ i ] . procs . size ( )		3638771	1					
ANR	3638939	Callee	vec [ i ] . procs . size		3638771	0					
ANR	3638940	MemberAccess	vec [ i ] . procs . size		3638771	0					
ANR	3638941	MemberAccess	vec [ i ] . procs		3638771	0					
ANR	3638942	ArrayIndexing	vec [ i ]		3638771	0					
ANR	3638943	Identifier	vec		3638771	0					
ANR	3638944	Identifier	i		3638771	1					
ANR	3638945	Identifier	procs		3638771	1					
ANR	3638946	Identifier	size		3638771	1					
ANR	3638947	ArgumentList			3638771	1					
ANR	3638948	UnaryExpression	++ j	382:46:10665:10667	3638771	2	True				
ANR	3638949	IncDec	++		3638771	0					
ANR	3638950	Identifier	j		3638771	1					
ANR	3638951	CompoundStatement		32:51:715:715	3638771	3					
ANR	3638952	Statement	printf	383:3:10675:10680	3638771	0	True				
ANR	3638953	Statement	(	383:9:10681:10681	3638771	1	True				
ANR	3638954	Statement	"""%u %u """	383:10:10682:10689	3638771	2	True				
ANR	3638955	Statement	PROCAPI_BIRTHDAY_FORMAT	383:19:10691:10713	3638771	3	True				
ANR	3638956	Statement	""" %ld %ld\\n"""	383:43:10715:10726	3638771	4	True				
ANR	3638957	Statement	","	383:55:10727:10727	3638771	5	True				
ANR	3638958	Statement	(	384:10:10739:10739	3638771	6	True				
ANR	3638959	Statement	unsigned	384:11:10740:10747	3638771	7	True				
ANR	3638960	Statement	)	384:19:10748:10748	3638771	8	True				
ANR	3638961	Statement	vec	384:20:10749:10751	3638771	9	True				
ANR	3638962	Statement	[	384:23:10752:10752	3638771	10	True				
ANR	3638963	Statement	i	384:24:10753:10753	3638771	11	True				
ANR	3638964	Statement	]	384:25:10754:10754	3638771	12	True				
ANR	3638965	Statement	.	384:26:10755:10755	3638771	13	True				
ANR	3638966	Statement	procs	384:27:10756:10760	3638771	14	True				
ANR	3638967	Statement	[	384:32:10761:10761	3638771	15	True				
ANR	3638968	Statement	j	384:33:10762:10762	3638771	16	True				
ANR	3638969	Statement	]	384:34:10763:10763	3638771	17	True				
ANR	3638970	Statement	.	384:35:10764:10764	3638771	18	True				
ANR	3638971	Statement	pid	384:36:10765:10767	3638771	19	True				
ANR	3638972	Statement	","	384:39:10768:10768	3638771	20	True				
ANR	3638973	Statement	(	385:10:10780:10780	3638771	21	True				
ANR	3638974	Statement	unsigned	385:11:10781:10788	3638771	22	True				
ANR	3638975	Statement	)	385:19:10789:10789	3638771	23	True				
ANR	3638976	Statement	vec	385:20:10790:10792	3638771	24	True				
ANR	3638977	Statement	[	385:23:10793:10793	3638771	25	True				
ANR	3638978	Statement	i	385:24:10794:10794	3638771	26	True				
ANR	3638979	Statement	]	385:25:10795:10795	3638771	27	True				
ANR	3638980	Statement	.	385:26:10796:10796	3638771	28	True				
ANR	3638981	Statement	procs	385:27:10797:10801	3638771	29	True				
ANR	3638982	Statement	[	385:32:10802:10802	3638771	30	True				
ANR	3638983	Statement	j	385:33:10803:10803	3638771	31	True				
ANR	3638984	Statement	]	385:34:10804:10804	3638771	32	True				
ANR	3638985	Statement	.	385:35:10805:10805	3638771	33	True				
ANR	3638986	Statement	ppid	385:36:10806:10809	3638771	34	True				
ANR	3638987	Statement	","	385:40:10810:10810	3638771	35	True				
ANR	3638988	Statement	vec	386:10:10822:10824	3638771	36	True				
ANR	3638989	Statement	[	386:13:10825:10825	3638771	37	True				
ANR	3638990	Statement	i	386:14:10826:10826	3638771	38	True				
ANR	3638991	Statement	]	386:15:10827:10827	3638771	39	True				
ANR	3638992	Statement	.	386:16:10828:10828	3638771	40	True				
ANR	3638993	Statement	procs	386:17:10829:10833	3638771	41	True				
ANR	3638994	Statement	[	386:22:10834:10834	3638771	42	True				
ANR	3638995	Statement	j	386:23:10835:10835	3638771	43	True				
ANR	3638996	Statement	]	386:24:10836:10836	3638771	44	True				
ANR	3638997	Statement	.	386:25:10837:10837	3638771	45	True				
ANR	3638998	Statement	birthday	386:26:10838:10845	3638771	46	True				
ANR	3638999	Statement	","	386:34:10846:10846	3638771	47	True				
ANR	3639000	Statement	vec	387:10:10858:10860	3638771	48	True				
ANR	3639001	Statement	[	387:13:10861:10861	3638771	49	True				
ANR	3639002	Statement	i	387:14:10862:10862	3638771	50	True				
ANR	3639003	Statement	]	387:15:10863:10863	3638771	51	True				
ANR	3639004	Statement	.	387:16:10864:10864	3638771	52	True				
ANR	3639005	Statement	procs	387:17:10865:10869	3638771	53	True				
ANR	3639006	Statement	[	387:22:10870:10870	3638771	54	True				
ANR	3639007	Statement	j	387:23:10871:10871	3638771	55	True				
ANR	3639008	Statement	]	387:24:10872:10872	3638771	56	True				
ANR	3639009	Statement	.	387:25:10873:10873	3638771	57	True				
ANR	3639010	Statement	user_time	387:26:10874:10882	3638771	58	True				
ANR	3639011	Statement	","	387:35:10883:10883	3638771	59	True				
ANR	3639012	Statement	vec	388:10:10895:10897	3638771	60	True				
ANR	3639013	Statement	[	388:13:10898:10898	3638771	61	True				
ANR	3639014	Statement	i	388:14:10899:10899	3638771	62	True				
ANR	3639015	Statement	]	388:15:10900:10900	3638771	63	True				
ANR	3639016	Statement	.	388:16:10901:10901	3638771	64	True				
ANR	3639017	Statement	procs	388:17:10902:10906	3638771	65	True				
ANR	3639018	Statement	[	388:22:10907:10907	3638771	66	True				
ANR	3639019	Statement	j	388:23:10908:10908	3638771	67	True				
ANR	3639020	Statement	]	388:24:10909:10909	3638771	68	True				
ANR	3639021	Statement	.	388:25:10910:10910	3638771	69	True				
ANR	3639022	Statement	sys_time	388:26:10911:10918	3638771	70	True				
ANR	3639023	Statement	)	388:34:10919:10919	3638771	71	True				
ANR	3639024	ExpressionStatement		388:35:10920:10920	3638771	72	True				
ANR	3639025	ReturnStatement	return 0 ;	391:1:10930:10938	3638771	9	True				
ANR	3639026	PrimaryExpression	0		3638771	0					
ANR	3639027	ReturnType	static int		3638771	1					
ANR	3639028	Identifier	list		3638771	2					
ANR	3639029	ParameterList	"ProcFamilyClient & pfc , int argc , char * argv [ ]"		3638771	3					
ANR	3639030	Parameter	ProcFamilyClient & pfc	350:5:9907:9927	3638771	0	True				
ANR	3639031	ParameterType	ProcFamilyClient &		3638771	0					
ANR	3639032	Identifier	pfc		3638771	1					
ANR	3639033	Parameter	int argc	350:28:9930:9937	3638771	1	True				
ANR	3639034	ParameterType	int		3638771	0					
ANR	3639035	Identifier	argc		3638771	1					
ANR	3639036	Parameter	char * argv [ ]	350:38:9940:9951	3638771	2	True				
ANR	3639037	ParameterType	char * [ ]		3638771	0					
ANR	3639038	Identifier	argv		3638771	1					
ANR	3639039	CFGEntryNode	ENTRY		3638771		True				
ANR	3639040	CFGExitNode	EXIT		3638771		True				
ANR	3639041	Symbol	argc		3638771						
ANR	3639042	Symbol	atoi		3638771						
ANR	3639043	Symbol	i		3638771						
ANR	3639044	Symbol	* argv		3638771						
ANR	3639045	Symbol	pid		3638771						
ANR	3639046	Symbol	j		3638771						
ANR	3639047	Symbol	pfc . dump		3638771						
ANR	3639048	Symbol	vec [ i ] . procs		3638771						
ANR	3639049	Symbol	pfc		3638771						
ANR	3639050	Symbol	stderr		3638771						
ANR	3639051	Symbol	argv		3638771						
ANR	3639052	Symbol	vec . size		3638771						
ANR	3639053	Symbol	* i		3638771						
ANR	3639054	Symbol	vec		3638771						
ANR	3639055	Symbol	response		3638771						
ANR	3639056	Symbol	vec [ i ] . procs . size		3638771						
ANR	3639057	Symbol	* vec		3638771						
ANR	3639058	Function	get_usage	394:0:10943:12155							
ANR	3639059	FunctionDef	"get_usage (ProcFamilyClient & pfc , int argc , char * argv [ ])"		3639058	0					
ANR	3639060	CompoundStatement		396:0:11011:12155	3639058	0					
ANR	3639061	IfStatement	if ( argc > 2 )		3639058	0					
ANR	3639062	Condition	argc > 2	397:5:11018:11025	3639058	0	True				
ANR	3639063	RelationalExpression	argc > 2		3639058	0		>			
ANR	3639064	Identifier	argc		3639058	0					
ANR	3639065	PrimaryExpression	2		3639058	1					
ANR	3639066	CompoundStatement		2:15:16:16	3639058	1					
ANR	3639067	ExpressionStatement	"fprintf ( stderr , ""error: argument synopsis for %s: [<pid>]\\n"" , argv [ 0 ] )"	398:2:11032:11122	3639058	0	True				
ANR	3639068	CallExpression	"fprintf ( stderr , ""error: argument synopsis for %s: [<pid>]\\n"" , argv [ 0 ] )"		3639058	0					
ANR	3639069	Callee	fprintf		3639058	0					
ANR	3639070	Identifier	fprintf		3639058	0					
ANR	3639071	ArgumentList	stderr		3639058	1					
ANR	3639072	Argument	stderr		3639058	0					
ANR	3639073	Identifier	stderr		3639058	0					
ANR	3639074	Argument	"""error: argument synopsis for %s: [<pid>]\\n"""		3639058	1					
ANR	3639075	PrimaryExpression	"""error: argument synopsis for %s: [<pid>]\\n"""		3639058	0					
ANR	3639076	Argument	argv [ 0 ]		3639058	2					
ANR	3639077	ArrayIndexing	argv [ 0 ]		3639058	0					
ANR	3639078	Identifier	argv		3639058	0					
ANR	3639079	PrimaryExpression	0		3639058	1					
ANR	3639080	ReturnStatement	return 1 ;	401:2:11126:11134	3639058	1	True				
ANR	3639081	PrimaryExpression	1		3639058	0					
ANR	3639082	IdentifierDeclStatement	pid_t pid = 0 ;	403:1:11140:11153	3639058	1	True				
ANR	3639083	IdentifierDecl	pid = 0		3639058	0					
ANR	3639084	IdentifierDeclType	pid_t		3639058	0					
ANR	3639085	Identifier	pid		3639058	1					
ANR	3639086	AssignmentExpression	pid = 0		3639058	2		=			
ANR	3639087	Identifier	pid		3639058	0					
ANR	3639088	PrimaryExpression	0		3639058	1					
ANR	3639089	IfStatement	if ( argc == 2 )		3639058	2					
ANR	3639090	Condition	argc == 2	404:5:11160:11168	3639058	0	True				
ANR	3639091	EqualityExpression	argc == 2		3639058	0		==			
ANR	3639092	Identifier	argc		3639058	0					
ANR	3639093	PrimaryExpression	2		3639058	1					
ANR	3639094	CompoundStatement		9:16:159:159	3639058	1					
ANR	3639095	ExpressionStatement	pid = atoi ( argv [ 1 ] )	405:2:11175:11194	3639058	0	True				
ANR	3639096	AssignmentExpression	pid = atoi ( argv [ 1 ] )		3639058	0		=			
ANR	3639097	Identifier	pid		3639058	0					
ANR	3639098	CallExpression	atoi ( argv [ 1 ] )		3639058	1					
ANR	3639099	Callee	atoi		3639058	0					
ANR	3639100	Identifier	atoi		3639058	0					
ANR	3639101	ArgumentList	argv [ 1 ]		3639058	1					
ANR	3639102	Argument	argv [ 1 ]		3639058	0					
ANR	3639103	ArrayIndexing	argv [ 1 ]		3639058	0					
ANR	3639104	Identifier	argv		3639058	0					
ANR	3639105	PrimaryExpression	1		3639058	1					
ANR	3639106	IfStatement	if ( pid == 0 )		3639058	1					
ANR	3639107	Condition	pid == 0	406:6:11202:11209	3639058	0	True				
ANR	3639108	EqualityExpression	pid == 0		3639058	0		==			
ANR	3639109	Identifier	pid		3639058	0					
ANR	3639110	PrimaryExpression	0		3639058	1					
ANR	3639111	CompoundStatement		11:16:200:200	3639058	1					
ANR	3639112	ExpressionStatement	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 1 ] )"	407:3:11217:11269	3639058	0	True				
ANR	3639113	CallExpression	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 1 ] )"		3639058	0					
ANR	3639114	Callee	fprintf		3639058	0					
ANR	3639115	Identifier	fprintf		3639058	0					
ANR	3639116	ArgumentList	stderr		3639058	1					
ANR	3639117	Argument	stderr		3639058	0					
ANR	3639118	Identifier	stderr		3639058	0					
ANR	3639119	Argument	"""error: invalid pid: %s\\n"""		3639058	1					
ANR	3639120	PrimaryExpression	"""error: invalid pid: %s\\n"""		3639058	0					
ANR	3639121	Argument	argv [ 1 ]		3639058	2					
ANR	3639122	ArrayIndexing	argv [ 1 ]		3639058	0					
ANR	3639123	Identifier	argv		3639058	0					
ANR	3639124	PrimaryExpression	1		3639058	1					
ANR	3639125	ReturnStatement	return 1 ;	408:3:11274:11282	3639058	1	True				
ANR	3639126	PrimaryExpression	1		3639058	0					
ANR	3639127	IdentifierDeclStatement	ProcFamilyUsage pfu ;	411:1:11292:11311	3639058	3	True				
ANR	3639128	IdentifierDecl	pfu		3639058	0					
ANR	3639129	IdentifierDeclType	ProcFamilyUsage		3639058	0					
ANR	3639130	Identifier	pfu		3639058	1					
ANR	3639131	IdentifierDeclStatement	bool success ;	412:1:11314:11326	3639058	4	True				
ANR	3639132	IdentifierDecl	success		3639058	0					
ANR	3639133	IdentifierDeclType	bool		3639058	0					
ANR	3639134	Identifier	success		3639058	1					
ANR	3639135	IfStatement	"if ( ! pfc . get_usage ( pid , pfu , success ) )"		3639058	5					
ANR	3639136	Condition	"! pfc . get_usage ( pid , pfu , success )"	413:5:11333:11365	3639058	0	True				
ANR	3639137	UnaryOperationExpression	"! pfc . get_usage ( pid , pfu , success )"		3639058	0					
ANR	3639138	UnaryOperator	!		3639058	0					
ANR	3639139	CallExpression	"pfc . get_usage ( pid , pfu , success )"		3639058	1					
ANR	3639140	Callee	pfc . get_usage		3639058	0					
ANR	3639141	MemberAccess	pfc . get_usage		3639058	0					
ANR	3639142	Identifier	pfc		3639058	0					
ANR	3639143	Identifier	get_usage		3639058	1					
ANR	3639144	ArgumentList	pid		3639058	1					
ANR	3639145	Argument	pid		3639058	0					
ANR	3639146	Identifier	pid		3639058	0					
ANR	3639147	Argument	pfu		3639058	1					
ANR	3639148	Identifier	pfu		3639058	0					
ANR	3639149	Argument	success		3639058	2					
ANR	3639150	Identifier	success		3639058	0					
ANR	3639151	CompoundStatement		18:40:356:356	3639058	1					
ANR	3639152	ExpressionStatement	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"	414:1:11371:11429	3639058	0	True				
ANR	3639153	CallExpression	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"		3639058	0					
ANR	3639154	Callee	fprintf		3639058	0					
ANR	3639155	Identifier	fprintf		3639058	0					
ANR	3639156	ArgumentList	stderr		3639058	1					
ANR	3639157	Argument	stderr		3639058	0					
ANR	3639158	Identifier	stderr		3639058	0					
ANR	3639159	Argument	"""error: communication error with ProcD\\n"""		3639058	1					
ANR	3639160	PrimaryExpression	"""error: communication error with ProcD\\n"""		3639058	0					
ANR	3639161	ReturnStatement	return 1 ;	415:2:11433:11441	3639058	1	True				
ANR	3639162	PrimaryExpression	1		3639058	0					
ANR	3639163	IfStatement	if ( ! success )		3639058	6					
ANR	3639164	Condition	! success	417:5:11451:11458	3639058	0	True				
ANR	3639165	UnaryOperationExpression	! success		3639058	0					
ANR	3639166	UnaryOperator	!		3639058	0					
ANR	3639167	Identifier	success		3639058	1					
ANR	3639168	CompoundStatement		22:15:449:449	3639058	1					
ANR	3639169	ExpressionStatement	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"	418:2:11465:11550	3639058	0	True				
ANR	3639170	CallExpression	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"		3639058	0					
ANR	3639171	Callee	fprintf		3639058	0					
ANR	3639172	Identifier	fprintf		3639058	0					
ANR	3639173	ArgumentList	stderr		3639058	1					
ANR	3639174	Argument	stderr		3639058	0					
ANR	3639175	Identifier	stderr		3639058	0					
ANR	3639176	Argument	"""error: %s command failed with ProcD\\n"""		3639058	1					
ANR	3639177	PrimaryExpression	"""error: %s command failed with ProcD\\n"""		3639058	0					
ANR	3639178	Argument	argv [ 0 ]		3639058	2					
ANR	3639179	ArrayIndexing	argv [ 0 ]		3639058	0					
ANR	3639180	Identifier	argv		3639058	0					
ANR	3639181	PrimaryExpression	0		3639058	1					
ANR	3639182	ReturnStatement	return 1 ;	421:2:11554:11562	3639058	1	True				
ANR	3639183	PrimaryExpression	1		3639058	0					
ANR	3639184	ExpressionStatement	"printf ( ""Number of Processes: %d\\n"" , pfu . num_procs )"	423:1:11568:11618	3639058	7	True				
ANR	3639185	CallExpression	"printf ( ""Number of Processes: %d\\n"" , pfu . num_procs )"		3639058	0					
ANR	3639186	Callee	printf		3639058	0					
ANR	3639187	Identifier	printf		3639058	0					
ANR	3639188	ArgumentList	"""Number of Processes: %d\\n"""		3639058	1					
ANR	3639189	Argument	"""Number of Processes: %d\\n"""		3639058	0					
ANR	3639190	PrimaryExpression	"""Number of Processes: %d\\n"""		3639058	0					
ANR	3639191	Argument	pfu . num_procs		3639058	1					
ANR	3639192	MemberAccess	pfu . num_procs		3639058	0					
ANR	3639193	Identifier	pfu		3639058	0					
ANR	3639194	Identifier	num_procs		3639058	1					
ANR	3639195	ExpressionStatement	"printf ( ""User CPU Time (s): %ld\\n"" , pfu . user_cpu_time )"	424:1:11621:11674	3639058	8	True				
ANR	3639196	CallExpression	"printf ( ""User CPU Time (s): %ld\\n"" , pfu . user_cpu_time )"		3639058	0					
ANR	3639197	Callee	printf		3639058	0					
ANR	3639198	Identifier	printf		3639058	0					
ANR	3639199	ArgumentList	"""User CPU Time (s): %ld\\n"""		3639058	1					
ANR	3639200	Argument	"""User CPU Time (s): %ld\\n"""		3639058	0					
ANR	3639201	PrimaryExpression	"""User CPU Time (s): %ld\\n"""		3639058	0					
ANR	3639202	Argument	pfu . user_cpu_time		3639058	1					
ANR	3639203	MemberAccess	pfu . user_cpu_time		3639058	0					
ANR	3639204	Identifier	pfu		3639058	0					
ANR	3639205	Identifier	user_cpu_time		3639058	1					
ANR	3639206	ExpressionStatement	"printf ( ""System CPU Time (s): %ld\\n"" , pfu . sys_cpu_time )"	425:1:11677:11731	3639058	9	True				
ANR	3639207	CallExpression	"printf ( ""System CPU Time (s): %ld\\n"" , pfu . sys_cpu_time )"		3639058	0					
ANR	3639208	Callee	printf		3639058	0					
ANR	3639209	Identifier	printf		3639058	0					
ANR	3639210	ArgumentList	"""System CPU Time (s): %ld\\n"""		3639058	1					
ANR	3639211	Argument	"""System CPU Time (s): %ld\\n"""		3639058	0					
ANR	3639212	PrimaryExpression	"""System CPU Time (s): %ld\\n"""		3639058	0					
ANR	3639213	Argument	pfu . sys_cpu_time		3639058	1					
ANR	3639214	MemberAccess	pfu . sys_cpu_time		3639058	0					
ANR	3639215	Identifier	pfu		3639058	0					
ANR	3639216	Identifier	sys_cpu_time		3639058	1					
ANR	3639217	ExpressionStatement	"printf ( ""CPU Percentage (%%): %f\\n"" , pfu . percent_cpu )"	426:1:11734:11786	3639058	10	True				
ANR	3639218	CallExpression	"printf ( ""CPU Percentage (%%): %f\\n"" , pfu . percent_cpu )"		3639058	0					
ANR	3639219	Callee	printf		3639058	0					
ANR	3639220	Identifier	printf		3639058	0					
ANR	3639221	ArgumentList	"""CPU Percentage (%%): %f\\n"""		3639058	1					
ANR	3639222	Argument	"""CPU Percentage (%%): %f\\n"""		3639058	0					
ANR	3639223	PrimaryExpression	"""CPU Percentage (%%): %f\\n"""		3639058	0					
ANR	3639224	Argument	pfu . percent_cpu		3639058	1					
ANR	3639225	MemberAccess	pfu . percent_cpu		3639058	0					
ANR	3639226	Identifier	pfu		3639058	0					
ANR	3639227	Identifier	percent_cpu		3639058	1					
ANR	3639228	ExpressionStatement	"printf ( ""Maximum Image Size (KB): %lu\\n"" , pfu . max_image_size )"	427:1:11789:11849	3639058	11	True				
ANR	3639229	CallExpression	"printf ( ""Maximum Image Size (KB): %lu\\n"" , pfu . max_image_size )"		3639058	0					
ANR	3639230	Callee	printf		3639058	0					
ANR	3639231	Identifier	printf		3639058	0					
ANR	3639232	ArgumentList	"""Maximum Image Size (KB): %lu\\n"""		3639058	1					
ANR	3639233	Argument	"""Maximum Image Size (KB): %lu\\n"""		3639058	0					
ANR	3639234	PrimaryExpression	"""Maximum Image Size (KB): %lu\\n"""		3639058	0					
ANR	3639235	Argument	pfu . max_image_size		3639058	1					
ANR	3639236	MemberAccess	pfu . max_image_size		3639058	0					
ANR	3639237	Identifier	pfu		3639058	0					
ANR	3639238	Identifier	max_image_size		3639058	1					
ANR	3639239	ExpressionStatement	"printf ( ""Total Image Size(KB): %lu\\n"" , pfu . total_image_size )"	428:1:11852:11911	3639058	12	True				
ANR	3639240	CallExpression	"printf ( ""Total Image Size(KB): %lu\\n"" , pfu . total_image_size )"		3639058	0					
ANR	3639241	Callee	printf		3639058	0					
ANR	3639242	Identifier	printf		3639058	0					
ANR	3639243	ArgumentList	"""Total Image Size(KB): %lu\\n"""		3639058	1					
ANR	3639244	Argument	"""Total Image Size(KB): %lu\\n"""		3639058	0					
ANR	3639245	PrimaryExpression	"""Total Image Size(KB): %lu\\n"""		3639058	0					
ANR	3639246	Argument	pfu . total_image_size		3639058	1					
ANR	3639247	MemberAccess	pfu . total_image_size		3639058	0					
ANR	3639248	Identifier	pfu		3639058	0					
ANR	3639249	Identifier	total_image_size		3639058	1					
ANR	3639250	IfStatement	if ( pfu . block_read_bytes >= 0 )		3639058	13					
ANR	3639251	Condition	pfu . block_read_bytes >= 0	429:5:11918:11942	3639058	0	True				
ANR	3639252	RelationalExpression	pfu . block_read_bytes >= 0		3639058	0		>=			
ANR	3639253	MemberAccess	pfu . block_read_bytes		3639058	0					
ANR	3639254	Identifier	pfu		3639058	0					
ANR	3639255	Identifier	block_read_bytes		3639058	1					
ANR	3639256	PrimaryExpression	0		3639058	1					
ANR	3639257	ExpressionStatement	"printf ( ""Bytes read from block devices (KB): %lu\\n"" , pfu . block_read_bytes / 1024 )"	430:2:11947:12025	3639058	1	True				
ANR	3639258	CallExpression	"printf ( ""Bytes read from block devices (KB): %lu\\n"" , pfu . block_read_bytes / 1024 )"		3639058	0					
ANR	3639259	Callee	printf		3639058	0					
ANR	3639260	Identifier	printf		3639058	0					
ANR	3639261	ArgumentList	"""Bytes read from block devices (KB): %lu\\n"""		3639058	1					
ANR	3639262	Argument	"""Bytes read from block devices (KB): %lu\\n"""		3639058	0					
ANR	3639263	PrimaryExpression	"""Bytes read from block devices (KB): %lu\\n"""		3639058	0					
ANR	3639264	Argument	pfu . block_read_bytes / 1024		3639058	1					
ANR	3639265	MultiplicativeExpression	pfu . block_read_bytes / 1024		3639058	0		/			
ANR	3639266	MemberAccess	pfu . block_read_bytes		3639058	0					
ANR	3639267	Identifier	pfu		3639058	0					
ANR	3639268	Identifier	block_read_bytes		3639058	1					
ANR	3639269	PrimaryExpression	1024		3639058	1					
ANR	3639270	IfStatement	if ( pfu . block_write_bytes >= 0 )		3639058	14					
ANR	3639271	Condition	pfu . block_write_bytes >= 0	431:5:12032:12057	3639058	0	True				
ANR	3639272	RelationalExpression	pfu . block_write_bytes >= 0		3639058	0		>=			
ANR	3639273	MemberAccess	pfu . block_write_bytes		3639058	0					
ANR	3639274	Identifier	pfu		3639058	0					
ANR	3639275	Identifier	block_write_bytes		3639058	1					
ANR	3639276	PrimaryExpression	0		3639058	1					
ANR	3639277	ExpressionStatement	"printf ( ""Bytes written to block devices (KB): %lu\\n"" , pfu . block_write_bytes / 1024 )"	432:2:12062:12142	3639058	1	True				
ANR	3639278	CallExpression	"printf ( ""Bytes written to block devices (KB): %lu\\n"" , pfu . block_write_bytes / 1024 )"		3639058	0					
ANR	3639279	Callee	printf		3639058	0					
ANR	3639280	Identifier	printf		3639058	0					
ANR	3639281	ArgumentList	"""Bytes written to block devices (KB): %lu\\n"""		3639058	1					
ANR	3639282	Argument	"""Bytes written to block devices (KB): %lu\\n"""		3639058	0					
ANR	3639283	PrimaryExpression	"""Bytes written to block devices (KB): %lu\\n"""		3639058	0					
ANR	3639284	Argument	pfu . block_write_bytes / 1024		3639058	1					
ANR	3639285	MultiplicativeExpression	pfu . block_write_bytes / 1024		3639058	0		/			
ANR	3639286	MemberAccess	pfu . block_write_bytes		3639058	0					
ANR	3639287	Identifier	pfu		3639058	0					
ANR	3639288	Identifier	block_write_bytes		3639058	1					
ANR	3639289	PrimaryExpression	1024		3639058	1					
ANR	3639290	ReturnStatement	return 0 ;	433:1:12145:12153	3639058	15	True				
ANR	3639291	PrimaryExpression	0		3639058	0					
ANR	3639292	ReturnType	static int		3639058	1					
ANR	3639293	Identifier	get_usage		3639058	2					
ANR	3639294	ParameterList	"ProcFamilyClient & pfc , int argc , char * argv [ ]"		3639058	3					
ANR	3639295	Parameter	ProcFamilyClient & pfc	395:10:10964:10984	3639058	0	True				
ANR	3639296	ParameterType	ProcFamilyClient &		3639058	0					
ANR	3639297	Identifier	pfc		3639058	1					
ANR	3639298	Parameter	int argc	395:33:10987:10994	3639058	1	True				
ANR	3639299	ParameterType	int		3639058	0					
ANR	3639300	Identifier	argc		3639058	1					
ANR	3639301	Parameter	char * argv [ ]	395:43:10997:11008	3639058	2	True				
ANR	3639302	ParameterType	char * [ ]		3639058	0					
ANR	3639303	Identifier	argv		3639058	1					
ANR	3639304	CFGEntryNode	ENTRY		3639058		True				
ANR	3639305	CFGExitNode	EXIT		3639058		True				
ANR	3639306	Symbol	argc		3639058						
ANR	3639307	Symbol	atoi		3639058						
ANR	3639308	Symbol	pfu . percent_cpu		3639058						
ANR	3639309	Symbol	pfu . max_image_size		3639058						
ANR	3639310	Symbol	pfu . total_image_size		3639058						
ANR	3639311	Symbol	* argv		3639058						
ANR	3639312	Symbol	pid		3639058						
ANR	3639313	Symbol	pfu . sys_cpu_time		3639058						
ANR	3639314	Symbol	pfc . get_usage		3639058						
ANR	3639315	Symbol	pfu . block_write_bytes		3639058						
ANR	3639316	Symbol	pfc		3639058						
ANR	3639317	Symbol	stderr		3639058						
ANR	3639318	Symbol	argv		3639058						
ANR	3639319	Symbol	pfu . block_read_bytes		3639058						
ANR	3639320	Symbol	success		3639058						
ANR	3639321	Symbol	pfu . user_cpu_time		3639058						
ANR	3639322	Symbol	pfu		3639058						
ANR	3639323	Symbol	pfu . num_procs		3639058						
ANR	3639324	Function	signal_process	436:0:12158:12921							
ANR	3639325	FunctionDef	"signal_process (ProcFamilyClient & pfc , int argc , char * argv [ ])"		3639324	0					
ANR	3639326	CompoundStatement		438:0:12224:12921	3639324	0					
ANR	3639327	IfStatement	if ( ( argc != 2 ) && ( argc != 3 ) )		3639324	0					
ANR	3639328	Condition	( argc != 2 ) && ( argc != 3 )	439:5:12231:12256	3639324	0	True				
ANR	3639329	AndExpression	( argc != 2 ) && ( argc != 3 )		3639324	0		&&			
ANR	3639330	EqualityExpression	argc != 2		3639324	0		!=			
ANR	3639331	Identifier	argc		3639324	0					
ANR	3639332	PrimaryExpression	2		3639324	1					
ANR	3639333	EqualityExpression	argc != 3		3639324	1		!=			
ANR	3639334	Identifier	argc		3639324	0					
ANR	3639335	PrimaryExpression	3		3639324	1					
ANR	3639336	CompoundStatement		2:33:34:34	3639324	1					
ANR	3639337	ExpressionStatement	"fprintf ( stderr , ""error: argument synopsis for %s: <signal> [<pid>]\\n"" , argv [ 0 ] )"	440:2:12263:12362	3639324	0	True				
ANR	3639338	CallExpression	"fprintf ( stderr , ""error: argument synopsis for %s: <signal> [<pid>]\\n"" , argv [ 0 ] )"		3639324	0					
ANR	3639339	Callee	fprintf		3639324	0					
ANR	3639340	Identifier	fprintf		3639324	0					
ANR	3639341	ArgumentList	stderr		3639324	1					
ANR	3639342	Argument	stderr		3639324	0					
ANR	3639343	Identifier	stderr		3639324	0					
ANR	3639344	Argument	"""error: argument synopsis for %s: <signal> [<pid>]\\n"""		3639324	1					
ANR	3639345	PrimaryExpression	"""error: argument synopsis for %s: <signal> [<pid>]\\n"""		3639324	0					
ANR	3639346	Argument	argv [ 0 ]		3639324	2					
ANR	3639347	ArrayIndexing	argv [ 0 ]		3639324	0					
ANR	3639348	Identifier	argv		3639324	0					
ANR	3639349	PrimaryExpression	0		3639324	1					
ANR	3639350	ReturnStatement	return 1 ;	443:2:12366:12374	3639324	1	True				
ANR	3639351	PrimaryExpression	1		3639324	0					
ANR	3639352	IdentifierDeclStatement	int signal = atoi ( argv [ 1 ] ) ;	445:1:12380:12406	3639324	1	True				
ANR	3639353	IdentifierDecl	signal = atoi ( argv [ 1 ] )		3639324	0					
ANR	3639354	IdentifierDeclType	int		3639324	0					
ANR	3639355	Identifier	signal		3639324	1					
ANR	3639356	AssignmentExpression	signal = atoi ( argv [ 1 ] )		3639324	2		=			
ANR	3639357	Identifier	signal		3639324	0					
ANR	3639358	CallExpression	atoi ( argv [ 1 ] )		3639324	1					
ANR	3639359	Callee	atoi		3639324	0					
ANR	3639360	Identifier	atoi		3639324	0					
ANR	3639361	ArgumentList	argv [ 1 ]		3639324	1					
ANR	3639362	Argument	argv [ 1 ]		3639324	0					
ANR	3639363	ArrayIndexing	argv [ 1 ]		3639324	0					
ANR	3639364	Identifier	argv		3639324	0					
ANR	3639365	PrimaryExpression	1		3639324	1					
ANR	3639366	IfStatement	if ( signal == 0 )		3639324	2					
ANR	3639367	Condition	signal == 0	446:5:12413:12423	3639324	0	True				
ANR	3639368	EqualityExpression	signal == 0		3639324	0		==			
ANR	3639369	Identifier	signal		3639324	0					
ANR	3639370	PrimaryExpression	0		3639324	1					
ANR	3639371	CompoundStatement		9:18:201:201	3639324	1					
ANR	3639372	ExpressionStatement	"fprintf ( stderr , ""invalid signal: %s\\n"" , argv [ 1 ] )"	447:2:12430:12478	3639324	0	True				
ANR	3639373	CallExpression	"fprintf ( stderr , ""invalid signal: %s\\n"" , argv [ 1 ] )"		3639324	0					
ANR	3639374	Callee	fprintf		3639324	0					
ANR	3639375	Identifier	fprintf		3639324	0					
ANR	3639376	ArgumentList	stderr		3639324	1					
ANR	3639377	Argument	stderr		3639324	0					
ANR	3639378	Identifier	stderr		3639324	0					
ANR	3639379	Argument	"""invalid signal: %s\\n"""		3639324	1					
ANR	3639380	PrimaryExpression	"""invalid signal: %s\\n"""		3639324	0					
ANR	3639381	Argument	argv [ 1 ]		3639324	2					
ANR	3639382	ArrayIndexing	argv [ 1 ]		3639324	0					
ANR	3639383	Identifier	argv		3639324	0					
ANR	3639384	PrimaryExpression	1		3639324	1					
ANR	3639385	ReturnStatement	return 1 ;	448:2:12482:12490	3639324	1	True				
ANR	3639386	PrimaryExpression	1		3639324	0					
ANR	3639387	IdentifierDeclStatement	pid_t pid = 0 ;	450:1:12496:12509	3639324	3	True				
ANR	3639388	IdentifierDecl	pid = 0		3639324	0					
ANR	3639389	IdentifierDeclType	pid_t		3639324	0					
ANR	3639390	Identifier	pid		3639324	1					
ANR	3639391	AssignmentExpression	pid = 0		3639324	2		=			
ANR	3639392	Identifier	pid		3639324	0					
ANR	3639393	PrimaryExpression	0		3639324	1					
ANR	3639394	IfStatement	if ( argc == 3 )		3639324	4					
ANR	3639395	Condition	argc == 3	451:5:12516:12524	3639324	0	True				
ANR	3639396	EqualityExpression	argc == 3		3639324	0		==			
ANR	3639397	Identifier	argc		3639324	0					
ANR	3639398	PrimaryExpression	3		3639324	1					
ANR	3639399	CompoundStatement		14:16:302:302	3639324	1					
ANR	3639400	ExpressionStatement	pid = atoi ( argv [ 2 ] )	452:2:12531:12550	3639324	0	True				
ANR	3639401	AssignmentExpression	pid = atoi ( argv [ 2 ] )		3639324	0		=			
ANR	3639402	Identifier	pid		3639324	0					
ANR	3639403	CallExpression	atoi ( argv [ 2 ] )		3639324	1					
ANR	3639404	Callee	atoi		3639324	0					
ANR	3639405	Identifier	atoi		3639324	0					
ANR	3639406	ArgumentList	argv [ 2 ]		3639324	1					
ANR	3639407	Argument	argv [ 2 ]		3639324	0					
ANR	3639408	ArrayIndexing	argv [ 2 ]		3639324	0					
ANR	3639409	Identifier	argv		3639324	0					
ANR	3639410	PrimaryExpression	2		3639324	1					
ANR	3639411	IfStatement	if ( pid == 0 )		3639324	1					
ANR	3639412	Condition	pid == 0	453:6:12558:12565	3639324	0	True				
ANR	3639413	EqualityExpression	pid == 0		3639324	0		==			
ANR	3639414	Identifier	pid		3639324	0					
ANR	3639415	PrimaryExpression	0		3639324	1					
ANR	3639416	CompoundStatement		16:16:343:343	3639324	1					
ANR	3639417	ExpressionStatement	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 2 ] )"	454:3:12573:12625	3639324	0	True				
ANR	3639418	CallExpression	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 2 ] )"		3639324	0					
ANR	3639419	Callee	fprintf		3639324	0					
ANR	3639420	Identifier	fprintf		3639324	0					
ANR	3639421	ArgumentList	stderr		3639324	1					
ANR	3639422	Argument	stderr		3639324	0					
ANR	3639423	Identifier	stderr		3639324	0					
ANR	3639424	Argument	"""error: invalid pid: %s\\n"""		3639324	1					
ANR	3639425	PrimaryExpression	"""error: invalid pid: %s\\n"""		3639324	0					
ANR	3639426	Argument	argv [ 2 ]		3639324	2					
ANR	3639427	ArrayIndexing	argv [ 2 ]		3639324	0					
ANR	3639428	Identifier	argv		3639324	0					
ANR	3639429	PrimaryExpression	2		3639324	1					
ANR	3639430	ReturnStatement	return 1 ;	455:3:12630:12638	3639324	1	True				
ANR	3639431	PrimaryExpression	1		3639324	0					
ANR	3639432	IdentifierDeclStatement	bool success ;	458:1:12648:12660	3639324	5	True				
ANR	3639433	IdentifierDecl	success		3639324	0					
ANR	3639434	IdentifierDeclType	bool		3639324	0					
ANR	3639435	Identifier	success		3639324	1					
ANR	3639436	IfStatement	"if ( ! pfc . signal_process ( pid , signal , success ) )"		3639324	6					
ANR	3639437	Condition	"! pfc . signal_process ( pid , signal , success )"	459:5:12667:12707	3639324	0	True				
ANR	3639438	UnaryOperationExpression	"! pfc . signal_process ( pid , signal , success )"		3639324	0					
ANR	3639439	UnaryOperator	!		3639324	0					
ANR	3639440	CallExpression	"pfc . signal_process ( pid , signal , success )"		3639324	1					
ANR	3639441	Callee	pfc . signal_process		3639324	0					
ANR	3639442	MemberAccess	pfc . signal_process		3639324	0					
ANR	3639443	Identifier	pfc		3639324	0					
ANR	3639444	Identifier	signal_process		3639324	1					
ANR	3639445	ArgumentList	pid		3639324	1					
ANR	3639446	Argument	pid		3639324	0					
ANR	3639447	Identifier	pid		3639324	0					
ANR	3639448	Argument	signal		3639324	1					
ANR	3639449	Identifier	signal		3639324	0					
ANR	3639450	Argument	success		3639324	2					
ANR	3639451	Identifier	success		3639324	0					
ANR	3639452	CompoundStatement		22:48:485:485	3639324	1					
ANR	3639453	ExpressionStatement	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"	460:2:12714:12772	3639324	0	True				
ANR	3639454	CallExpression	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"		3639324	0					
ANR	3639455	Callee	fprintf		3639324	0					
ANR	3639456	Identifier	fprintf		3639324	0					
ANR	3639457	ArgumentList	stderr		3639324	1					
ANR	3639458	Argument	stderr		3639324	0					
ANR	3639459	Identifier	stderr		3639324	0					
ANR	3639460	Argument	"""error: communication error with ProcD\\n"""		3639324	1					
ANR	3639461	PrimaryExpression	"""error: communication error with ProcD\\n"""		3639324	0					
ANR	3639462	ReturnStatement	return 1 ;	461:2:12776:12784	3639324	1	True				
ANR	3639463	PrimaryExpression	1		3639324	0					
ANR	3639464	IfStatement	if ( ! success )		3639324	7					
ANR	3639465	Condition	! success	463:5:12794:12801	3639324	0	True				
ANR	3639466	UnaryOperationExpression	! success		3639324	0					
ANR	3639467	UnaryOperator	!		3639324	0					
ANR	3639468	Identifier	success		3639324	1					
ANR	3639469	CompoundStatement		26:15:579:579	3639324	1					
ANR	3639470	ExpressionStatement	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"	464:2:12808:12893	3639324	0	True				
ANR	3639471	CallExpression	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"		3639324	0					
ANR	3639472	Callee	fprintf		3639324	0					
ANR	3639473	Identifier	fprintf		3639324	0					
ANR	3639474	ArgumentList	stderr		3639324	1					
ANR	3639475	Argument	stderr		3639324	0					
ANR	3639476	Identifier	stderr		3639324	0					
ANR	3639477	Argument	"""error: %s command failed with ProcD\\n"""		3639324	1					
ANR	3639478	PrimaryExpression	"""error: %s command failed with ProcD\\n"""		3639324	0					
ANR	3639479	Argument	argv [ 0 ]		3639324	2					
ANR	3639480	ArrayIndexing	argv [ 0 ]		3639324	0					
ANR	3639481	Identifier	argv		3639324	0					
ANR	3639482	PrimaryExpression	0		3639324	1					
ANR	3639483	ReturnStatement	return 1 ;	467:2:12897:12905	3639324	1	True				
ANR	3639484	PrimaryExpression	1		3639324	0					
ANR	3639485	ReturnStatement	return 0 ;	469:1:12911:12919	3639324	8	True				
ANR	3639486	PrimaryExpression	0		3639324	0					
ANR	3639487	ReturnType	int		3639324	1					
ANR	3639488	Identifier	signal_process		3639324	2					
ANR	3639489	ParameterList	"ProcFamilyClient & pfc , int argc , char * argv [ ]"		3639324	3					
ANR	3639490	Parameter	ProcFamilyClient & pfc	437:15:12177:12197	3639324	0	True				
ANR	3639491	ParameterType	ProcFamilyClient &		3639324	0					
ANR	3639492	Identifier	pfc		3639324	1					
ANR	3639493	Parameter	int argc	437:38:12200:12207	3639324	1	True				
ANR	3639494	ParameterType	int		3639324	0					
ANR	3639495	Identifier	argc		3639324	1					
ANR	3639496	Parameter	char * argv [ ]	437:48:12210:12221	3639324	2	True				
ANR	3639497	ParameterType	char * [ ]		3639324	0					
ANR	3639498	Identifier	argv		3639324	1					
ANR	3639499	CFGEntryNode	ENTRY		3639324		True				
ANR	3639500	CFGExitNode	EXIT		3639324		True				
ANR	3639501	Symbol	argc		3639324						
ANR	3639502	Symbol	atoi		3639324						
ANR	3639503	Symbol	success		3639324						
ANR	3639504	Symbol	* argv		3639324						
ANR	3639505	Symbol	pid		3639324						
ANR	3639506	Symbol	pfc . signal_process		3639324						
ANR	3639507	Symbol	pfc		3639324						
ANR	3639508	Symbol	stderr		3639324						
ANR	3639509	Symbol	argv		3639324						
ANR	3639510	Symbol	signal		3639324						
ANR	3639511	Function	suspend_family	472:0:12924:13536							
ANR	3639512	FunctionDef	"suspend_family (ProcFamilyClient & pfc , int argc , char * argv [ ])"		3639511	0					
ANR	3639513	CompoundStatement		474:0:12990:13536	3639511	0					
ANR	3639514	IfStatement	if ( argc > 2 )		3639511	0					
ANR	3639515	Condition	argc > 2	475:5:12997:13004	3639511	0	True				
ANR	3639516	RelationalExpression	argc > 2		3639511	0		>			
ANR	3639517	Identifier	argc		3639511	0					
ANR	3639518	PrimaryExpression	2		3639511	1					
ANR	3639519	CompoundStatement		2:15:16:16	3639511	1					
ANR	3639520	ExpressionStatement	"fprintf ( stderr , ""error: argument synopsis for %s: [<pid>]\\n"" , argv [ 0 ] )"	476:2:13011:13101	3639511	0	True				
ANR	3639521	CallExpression	"fprintf ( stderr , ""error: argument synopsis for %s: [<pid>]\\n"" , argv [ 0 ] )"		3639511	0					
ANR	3639522	Callee	fprintf		3639511	0					
ANR	3639523	Identifier	fprintf		3639511	0					
ANR	3639524	ArgumentList	stderr		3639511	1					
ANR	3639525	Argument	stderr		3639511	0					
ANR	3639526	Identifier	stderr		3639511	0					
ANR	3639527	Argument	"""error: argument synopsis for %s: [<pid>]\\n"""		3639511	1					
ANR	3639528	PrimaryExpression	"""error: argument synopsis for %s: [<pid>]\\n"""		3639511	0					
ANR	3639529	Argument	argv [ 0 ]		3639511	2					
ANR	3639530	ArrayIndexing	argv [ 0 ]		3639511	0					
ANR	3639531	Identifier	argv		3639511	0					
ANR	3639532	PrimaryExpression	0		3639511	1					
ANR	3639533	ReturnStatement	return 1 ;	479:2:13105:13113	3639511	1	True				
ANR	3639534	PrimaryExpression	1		3639511	0					
ANR	3639535	IdentifierDeclStatement	pid_t pid = 0 ;	481:1:13119:13132	3639511	1	True				
ANR	3639536	IdentifierDecl	pid = 0		3639511	0					
ANR	3639537	IdentifierDeclType	pid_t		3639511	0					
ANR	3639538	Identifier	pid		3639511	1					
ANR	3639539	AssignmentExpression	pid = 0		3639511	2		=			
ANR	3639540	Identifier	pid		3639511	0					
ANR	3639541	PrimaryExpression	0		3639511	1					
ANR	3639542	IfStatement	if ( argc == 2 )		3639511	2					
ANR	3639543	Condition	argc == 2	482:5:13139:13147	3639511	0	True				
ANR	3639544	EqualityExpression	argc == 2		3639511	0		==			
ANR	3639545	Identifier	argc		3639511	0					
ANR	3639546	PrimaryExpression	2		3639511	1					
ANR	3639547	CompoundStatement		9:16:159:159	3639511	1					
ANR	3639548	ExpressionStatement	pid = atoi ( argv [ 1 ] )	483:2:13154:13173	3639511	0	True				
ANR	3639549	AssignmentExpression	pid = atoi ( argv [ 1 ] )		3639511	0		=			
ANR	3639550	Identifier	pid		3639511	0					
ANR	3639551	CallExpression	atoi ( argv [ 1 ] )		3639511	1					
ANR	3639552	Callee	atoi		3639511	0					
ANR	3639553	Identifier	atoi		3639511	0					
ANR	3639554	ArgumentList	argv [ 1 ]		3639511	1					
ANR	3639555	Argument	argv [ 1 ]		3639511	0					
ANR	3639556	ArrayIndexing	argv [ 1 ]		3639511	0					
ANR	3639557	Identifier	argv		3639511	0					
ANR	3639558	PrimaryExpression	1		3639511	1					
ANR	3639559	IfStatement	if ( pid == 0 )		3639511	1					
ANR	3639560	Condition	pid == 0	484:6:13181:13188	3639511	0	True				
ANR	3639561	EqualityExpression	pid == 0		3639511	0		==			
ANR	3639562	Identifier	pid		3639511	0					
ANR	3639563	PrimaryExpression	0		3639511	1					
ANR	3639564	CompoundStatement		11:16:200:200	3639511	1					
ANR	3639565	ExpressionStatement	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 1 ] )"	485:3:13196:13248	3639511	0	True				
ANR	3639566	CallExpression	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 1 ] )"		3639511	0					
ANR	3639567	Callee	fprintf		3639511	0					
ANR	3639568	Identifier	fprintf		3639511	0					
ANR	3639569	ArgumentList	stderr		3639511	1					
ANR	3639570	Argument	stderr		3639511	0					
ANR	3639571	Identifier	stderr		3639511	0					
ANR	3639572	Argument	"""error: invalid pid: %s\\n"""		3639511	1					
ANR	3639573	PrimaryExpression	"""error: invalid pid: %s\\n"""		3639511	0					
ANR	3639574	Argument	argv [ 1 ]		3639511	2					
ANR	3639575	ArrayIndexing	argv [ 1 ]		3639511	0					
ANR	3639576	Identifier	argv		3639511	0					
ANR	3639577	PrimaryExpression	1		3639511	1					
ANR	3639578	ReturnStatement	return 1 ;	486:3:13253:13261	3639511	1	True				
ANR	3639579	PrimaryExpression	1		3639511	0					
ANR	3639580	IdentifierDeclStatement	bool success ;	489:1:13271:13283	3639511	3	True				
ANR	3639581	IdentifierDecl	success		3639511	0					
ANR	3639582	IdentifierDeclType	bool		3639511	0					
ANR	3639583	Identifier	success		3639511	1					
ANR	3639584	IfStatement	"if ( ! pfc . suspend_family ( pid , success ) )"		3639511	4					
ANR	3639585	Condition	"! pfc . suspend_family ( pid , success )"	490:5:13290:13322	3639511	0	True				
ANR	3639586	UnaryOperationExpression	"! pfc . suspend_family ( pid , success )"		3639511	0					
ANR	3639587	UnaryOperator	!		3639511	0					
ANR	3639588	CallExpression	"pfc . suspend_family ( pid , success )"		3639511	1					
ANR	3639589	Callee	pfc . suspend_family		3639511	0					
ANR	3639590	MemberAccess	pfc . suspend_family		3639511	0					
ANR	3639591	Identifier	pfc		3639511	0					
ANR	3639592	Identifier	suspend_family		3639511	1					
ANR	3639593	ArgumentList	pid		3639511	1					
ANR	3639594	Argument	pid		3639511	0					
ANR	3639595	Identifier	pid		3639511	0					
ANR	3639596	Argument	success		3639511	1					
ANR	3639597	Identifier	success		3639511	0					
ANR	3639598	CompoundStatement		17:40:334:334	3639511	1					
ANR	3639599	ExpressionStatement	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"	491:2:13329:13387	3639511	0	True				
ANR	3639600	CallExpression	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"		3639511	0					
ANR	3639601	Callee	fprintf		3639511	0					
ANR	3639602	Identifier	fprintf		3639511	0					
ANR	3639603	ArgumentList	stderr		3639511	1					
ANR	3639604	Argument	stderr		3639511	0					
ANR	3639605	Identifier	stderr		3639511	0					
ANR	3639606	Argument	"""error: communication error with ProcD\\n"""		3639511	1					
ANR	3639607	PrimaryExpression	"""error: communication error with ProcD\\n"""		3639511	0					
ANR	3639608	ReturnStatement	return 1 ;	492:2:13391:13399	3639511	1	True				
ANR	3639609	PrimaryExpression	1		3639511	0					
ANR	3639610	IfStatement	if ( ! success )		3639511	5					
ANR	3639611	Condition	! success	494:5:13409:13416	3639511	0	True				
ANR	3639612	UnaryOperationExpression	! success		3639511	0					
ANR	3639613	UnaryOperator	!		3639511	0					
ANR	3639614	Identifier	success		3639511	1					
ANR	3639615	CompoundStatement		21:15:428:428	3639511	1					
ANR	3639616	ExpressionStatement	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"	495:2:13423:13508	3639511	0	True				
ANR	3639617	CallExpression	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"		3639511	0					
ANR	3639618	Callee	fprintf		3639511	0					
ANR	3639619	Identifier	fprintf		3639511	0					
ANR	3639620	ArgumentList	stderr		3639511	1					
ANR	3639621	Argument	stderr		3639511	0					
ANR	3639622	Identifier	stderr		3639511	0					
ANR	3639623	Argument	"""error: %s command failed with ProcD\\n"""		3639511	1					
ANR	3639624	PrimaryExpression	"""error: %s command failed with ProcD\\n"""		3639511	0					
ANR	3639625	Argument	argv [ 0 ]		3639511	2					
ANR	3639626	ArrayIndexing	argv [ 0 ]		3639511	0					
ANR	3639627	Identifier	argv		3639511	0					
ANR	3639628	PrimaryExpression	0		3639511	1					
ANR	3639629	ReturnStatement	return 1 ;	498:2:13512:13520	3639511	1	True				
ANR	3639630	PrimaryExpression	1		3639511	0					
ANR	3639631	ReturnStatement	return 0 ;	500:1:13526:13534	3639511	6	True				
ANR	3639632	PrimaryExpression	0		3639511	0					
ANR	3639633	ReturnType	int		3639511	1					
ANR	3639634	Identifier	suspend_family		3639511	2					
ANR	3639635	ParameterList	"ProcFamilyClient & pfc , int argc , char * argv [ ]"		3639511	3					
ANR	3639636	Parameter	ProcFamilyClient & pfc	473:15:12943:12963	3639511	0	True				
ANR	3639637	ParameterType	ProcFamilyClient &		3639511	0					
ANR	3639638	Identifier	pfc		3639511	1					
ANR	3639639	Parameter	int argc	473:38:12966:12973	3639511	1	True				
ANR	3639640	ParameterType	int		3639511	0					
ANR	3639641	Identifier	argc		3639511	1					
ANR	3639642	Parameter	char * argv [ ]	473:48:12976:12987	3639511	2	True				
ANR	3639643	ParameterType	char * [ ]		3639511	0					
ANR	3639644	Identifier	argv		3639511	1					
ANR	3639645	CFGEntryNode	ENTRY		3639511		True				
ANR	3639646	CFGExitNode	EXIT		3639511		True				
ANR	3639647	Symbol	argc		3639511						
ANR	3639648	Symbol	atoi		3639511						
ANR	3639649	Symbol	pfc . suspend_family		3639511						
ANR	3639650	Symbol	success		3639511						
ANR	3639651	Symbol	* argv		3639511						
ANR	3639652	Symbol	pid		3639511						
ANR	3639653	Symbol	pfc		3639511						
ANR	3639654	Symbol	stderr		3639511						
ANR	3639655	Symbol	argv		3639511						
ANR	3639656	Function	continue_family	503:0:13539:14153							
ANR	3639657	FunctionDef	"continue_family (ProcFamilyClient & pfc , int argc , char * argv [ ])"		3639656	0					
ANR	3639658	CompoundStatement		505:0:13606:14153	3639656	0					
ANR	3639659	IfStatement	if ( argc > 2 )		3639656	0					
ANR	3639660	Condition	argc > 2	506:5:13613:13620	3639656	0	True				
ANR	3639661	RelationalExpression	argc > 2		3639656	0		>			
ANR	3639662	Identifier	argc		3639656	0					
ANR	3639663	PrimaryExpression	2		3639656	1					
ANR	3639664	CompoundStatement		2:15:16:16	3639656	1					
ANR	3639665	ExpressionStatement	"fprintf ( stderr , ""error: argument synopsis for %s: [<pid>]\\n"" , argv [ 0 ] )"	507:2:13627:13717	3639656	0	True				
ANR	3639666	CallExpression	"fprintf ( stderr , ""error: argument synopsis for %s: [<pid>]\\n"" , argv [ 0 ] )"		3639656	0					
ANR	3639667	Callee	fprintf		3639656	0					
ANR	3639668	Identifier	fprintf		3639656	0					
ANR	3639669	ArgumentList	stderr		3639656	1					
ANR	3639670	Argument	stderr		3639656	0					
ANR	3639671	Identifier	stderr		3639656	0					
ANR	3639672	Argument	"""error: argument synopsis for %s: [<pid>]\\n"""		3639656	1					
ANR	3639673	PrimaryExpression	"""error: argument synopsis for %s: [<pid>]\\n"""		3639656	0					
ANR	3639674	Argument	argv [ 0 ]		3639656	2					
ANR	3639675	ArrayIndexing	argv [ 0 ]		3639656	0					
ANR	3639676	Identifier	argv		3639656	0					
ANR	3639677	PrimaryExpression	0		3639656	1					
ANR	3639678	ReturnStatement	return 1 ;	510:2:13721:13729	3639656	1	True				
ANR	3639679	PrimaryExpression	1		3639656	0					
ANR	3639680	IdentifierDeclStatement	pid_t pid = 0 ;	512:1:13735:13748	3639656	1	True				
ANR	3639681	IdentifierDecl	pid = 0		3639656	0					
ANR	3639682	IdentifierDeclType	pid_t		3639656	0					
ANR	3639683	Identifier	pid		3639656	1					
ANR	3639684	AssignmentExpression	pid = 0		3639656	2		=			
ANR	3639685	Identifier	pid		3639656	0					
ANR	3639686	PrimaryExpression	0		3639656	1					
ANR	3639687	IfStatement	if ( argc == 2 )		3639656	2					
ANR	3639688	Condition	argc == 2	513:5:13755:13763	3639656	0	True				
ANR	3639689	EqualityExpression	argc == 2		3639656	0		==			
ANR	3639690	Identifier	argc		3639656	0					
ANR	3639691	PrimaryExpression	2		3639656	1					
ANR	3639692	CompoundStatement		9:16:159:159	3639656	1					
ANR	3639693	ExpressionStatement	pid = atoi ( argv [ 1 ] )	514:2:13770:13789	3639656	0	True				
ANR	3639694	AssignmentExpression	pid = atoi ( argv [ 1 ] )		3639656	0		=			
ANR	3639695	Identifier	pid		3639656	0					
ANR	3639696	CallExpression	atoi ( argv [ 1 ] )		3639656	1					
ANR	3639697	Callee	atoi		3639656	0					
ANR	3639698	Identifier	atoi		3639656	0					
ANR	3639699	ArgumentList	argv [ 1 ]		3639656	1					
ANR	3639700	Argument	argv [ 1 ]		3639656	0					
ANR	3639701	ArrayIndexing	argv [ 1 ]		3639656	0					
ANR	3639702	Identifier	argv		3639656	0					
ANR	3639703	PrimaryExpression	1		3639656	1					
ANR	3639704	IfStatement	if ( pid == 0 )		3639656	1					
ANR	3639705	Condition	pid == 0	515:6:13797:13804	3639656	0	True				
ANR	3639706	EqualityExpression	pid == 0		3639656	0		==			
ANR	3639707	Identifier	pid		3639656	0					
ANR	3639708	PrimaryExpression	0		3639656	1					
ANR	3639709	CompoundStatement		11:16:200:200	3639656	1					
ANR	3639710	ExpressionStatement	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 1 ] )"	516:3:13812:13864	3639656	0	True				
ANR	3639711	CallExpression	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 1 ] )"		3639656	0					
ANR	3639712	Callee	fprintf		3639656	0					
ANR	3639713	Identifier	fprintf		3639656	0					
ANR	3639714	ArgumentList	stderr		3639656	1					
ANR	3639715	Argument	stderr		3639656	0					
ANR	3639716	Identifier	stderr		3639656	0					
ANR	3639717	Argument	"""error: invalid pid: %s\\n"""		3639656	1					
ANR	3639718	PrimaryExpression	"""error: invalid pid: %s\\n"""		3639656	0					
ANR	3639719	Argument	argv [ 1 ]		3639656	2					
ANR	3639720	ArrayIndexing	argv [ 1 ]		3639656	0					
ANR	3639721	Identifier	argv		3639656	0					
ANR	3639722	PrimaryExpression	1		3639656	1					
ANR	3639723	ReturnStatement	return 1 ;	517:3:13869:13877	3639656	1	True				
ANR	3639724	PrimaryExpression	1		3639656	0					
ANR	3639725	IdentifierDeclStatement	bool success ;	520:1:13887:13899	3639656	3	True				
ANR	3639726	IdentifierDecl	success		3639656	0					
ANR	3639727	IdentifierDeclType	bool		3639656	0					
ANR	3639728	Identifier	success		3639656	1					
ANR	3639729	IfStatement	"if ( ! pfc . continue_family ( pid , success ) )"		3639656	4					
ANR	3639730	Condition	"! pfc . continue_family ( pid , success )"	521:5:13906:13939	3639656	0	True				
ANR	3639731	UnaryOperationExpression	"! pfc . continue_family ( pid , success )"		3639656	0					
ANR	3639732	UnaryOperator	!		3639656	0					
ANR	3639733	CallExpression	"pfc . continue_family ( pid , success )"		3639656	1					
ANR	3639734	Callee	pfc . continue_family		3639656	0					
ANR	3639735	MemberAccess	pfc . continue_family		3639656	0					
ANR	3639736	Identifier	pfc		3639656	0					
ANR	3639737	Identifier	continue_family		3639656	1					
ANR	3639738	ArgumentList	pid		3639656	1					
ANR	3639739	Argument	pid		3639656	0					
ANR	3639740	Identifier	pid		3639656	0					
ANR	3639741	Argument	success		3639656	1					
ANR	3639742	Identifier	success		3639656	0					
ANR	3639743	CompoundStatement		17:41:335:335	3639656	1					
ANR	3639744	ExpressionStatement	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"	522:2:13946:14004	3639656	0	True				
ANR	3639745	CallExpression	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"		3639656	0					
ANR	3639746	Callee	fprintf		3639656	0					
ANR	3639747	Identifier	fprintf		3639656	0					
ANR	3639748	ArgumentList	stderr		3639656	1					
ANR	3639749	Argument	stderr		3639656	0					
ANR	3639750	Identifier	stderr		3639656	0					
ANR	3639751	Argument	"""error: communication error with ProcD\\n"""		3639656	1					
ANR	3639752	PrimaryExpression	"""error: communication error with ProcD\\n"""		3639656	0					
ANR	3639753	ReturnStatement	return 1 ;	523:2:14008:14016	3639656	1	True				
ANR	3639754	PrimaryExpression	1		3639656	0					
ANR	3639755	IfStatement	if ( ! success )		3639656	5					
ANR	3639756	Condition	! success	525:5:14026:14033	3639656	0	True				
ANR	3639757	UnaryOperationExpression	! success		3639656	0					
ANR	3639758	UnaryOperator	!		3639656	0					
ANR	3639759	Identifier	success		3639656	1					
ANR	3639760	CompoundStatement		21:15:429:429	3639656	1					
ANR	3639761	ExpressionStatement	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"	526:2:14040:14125	3639656	0	True				
ANR	3639762	CallExpression	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"		3639656	0					
ANR	3639763	Callee	fprintf		3639656	0					
ANR	3639764	Identifier	fprintf		3639656	0					
ANR	3639765	ArgumentList	stderr		3639656	1					
ANR	3639766	Argument	stderr		3639656	0					
ANR	3639767	Identifier	stderr		3639656	0					
ANR	3639768	Argument	"""error: %s command failed with ProcD\\n"""		3639656	1					
ANR	3639769	PrimaryExpression	"""error: %s command failed with ProcD\\n"""		3639656	0					
ANR	3639770	Argument	argv [ 0 ]		3639656	2					
ANR	3639771	ArrayIndexing	argv [ 0 ]		3639656	0					
ANR	3639772	Identifier	argv		3639656	0					
ANR	3639773	PrimaryExpression	0		3639656	1					
ANR	3639774	ReturnStatement	return 1 ;	529:2:14129:14137	3639656	1	True				
ANR	3639775	PrimaryExpression	1		3639656	0					
ANR	3639776	ReturnStatement	return 0 ;	531:1:14143:14151	3639656	6	True				
ANR	3639777	PrimaryExpression	0		3639656	0					
ANR	3639778	ReturnType	int		3639656	1					
ANR	3639779	Identifier	continue_family		3639656	2					
ANR	3639780	ParameterList	"ProcFamilyClient & pfc , int argc , char * argv [ ]"		3639656	3					
ANR	3639781	Parameter	ProcFamilyClient & pfc	504:16:13559:13579	3639656	0	True				
ANR	3639782	ParameterType	ProcFamilyClient &		3639656	0					
ANR	3639783	Identifier	pfc		3639656	1					
ANR	3639784	Parameter	int argc	504:39:13582:13589	3639656	1	True				
ANR	3639785	ParameterType	int		3639656	0					
ANR	3639786	Identifier	argc		3639656	1					
ANR	3639787	Parameter	char * argv [ ]	504:49:13592:13603	3639656	2	True				
ANR	3639788	ParameterType	char * [ ]		3639656	0					
ANR	3639789	Identifier	argv		3639656	1					
ANR	3639790	CFGEntryNode	ENTRY		3639656		True				
ANR	3639791	CFGExitNode	EXIT		3639656		True				
ANR	3639792	Symbol	argc		3639656						
ANR	3639793	Symbol	atoi		3639656						
ANR	3639794	Symbol	success		3639656						
ANR	3639795	Symbol	* argv		3639656						
ANR	3639796	Symbol	pid		3639656						
ANR	3639797	Symbol	pfc		3639656						
ANR	3639798	Symbol	stderr		3639656						
ANR	3639799	Symbol	argv		3639656						
ANR	3639800	Symbol	pfc . continue_family		3639656						
ANR	3639801	Function	kill_family	534:0:14156:14762							
ANR	3639802	FunctionDef	"kill_family (ProcFamilyClient & pfc , int argc , char * argv [ ])"		3639801	0					
ANR	3639803	CompoundStatement		536:0:14219:14762	3639801	0					
ANR	3639804	IfStatement	if ( argc > 2 )		3639801	0					
ANR	3639805	Condition	argc > 2	537:5:14226:14233	3639801	0	True				
ANR	3639806	RelationalExpression	argc > 2		3639801	0		>			
ANR	3639807	Identifier	argc		3639801	0					
ANR	3639808	PrimaryExpression	2		3639801	1					
ANR	3639809	CompoundStatement		2:15:16:16	3639801	1					
ANR	3639810	ExpressionStatement	"fprintf ( stderr , ""error: argument synopsis for %s: [<pid>]\\n"" , argv [ 0 ] )"	538:2:14240:14330	3639801	0	True				
ANR	3639811	CallExpression	"fprintf ( stderr , ""error: argument synopsis for %s: [<pid>]\\n"" , argv [ 0 ] )"		3639801	0					
ANR	3639812	Callee	fprintf		3639801	0					
ANR	3639813	Identifier	fprintf		3639801	0					
ANR	3639814	ArgumentList	stderr		3639801	1					
ANR	3639815	Argument	stderr		3639801	0					
ANR	3639816	Identifier	stderr		3639801	0					
ANR	3639817	Argument	"""error: argument synopsis for %s: [<pid>]\\n"""		3639801	1					
ANR	3639818	PrimaryExpression	"""error: argument synopsis for %s: [<pid>]\\n"""		3639801	0					
ANR	3639819	Argument	argv [ 0 ]		3639801	2					
ANR	3639820	ArrayIndexing	argv [ 0 ]		3639801	0					
ANR	3639821	Identifier	argv		3639801	0					
ANR	3639822	PrimaryExpression	0		3639801	1					
ANR	3639823	ReturnStatement	return 1 ;	541:2:14334:14342	3639801	1	True				
ANR	3639824	PrimaryExpression	1		3639801	0					
ANR	3639825	IdentifierDeclStatement	pid_t pid = 0 ;	543:1:14348:14361	3639801	1	True				
ANR	3639826	IdentifierDecl	pid = 0		3639801	0					
ANR	3639827	IdentifierDeclType	pid_t		3639801	0					
ANR	3639828	Identifier	pid		3639801	1					
ANR	3639829	AssignmentExpression	pid = 0		3639801	2		=			
ANR	3639830	Identifier	pid		3639801	0					
ANR	3639831	PrimaryExpression	0		3639801	1					
ANR	3639832	IfStatement	if ( argc == 2 )		3639801	2					
ANR	3639833	Condition	argc == 2	544:5:14368:14376	3639801	0	True				
ANR	3639834	EqualityExpression	argc == 2		3639801	0		==			
ANR	3639835	Identifier	argc		3639801	0					
ANR	3639836	PrimaryExpression	2		3639801	1					
ANR	3639837	CompoundStatement		9:16:159:159	3639801	1					
ANR	3639838	ExpressionStatement	pid = atoi ( argv [ 1 ] )	545:2:14383:14402	3639801	0	True				
ANR	3639839	AssignmentExpression	pid = atoi ( argv [ 1 ] )		3639801	0		=			
ANR	3639840	Identifier	pid		3639801	0					
ANR	3639841	CallExpression	atoi ( argv [ 1 ] )		3639801	1					
ANR	3639842	Callee	atoi		3639801	0					
ANR	3639843	Identifier	atoi		3639801	0					
ANR	3639844	ArgumentList	argv [ 1 ]		3639801	1					
ANR	3639845	Argument	argv [ 1 ]		3639801	0					
ANR	3639846	ArrayIndexing	argv [ 1 ]		3639801	0					
ANR	3639847	Identifier	argv		3639801	0					
ANR	3639848	PrimaryExpression	1		3639801	1					
ANR	3639849	IfStatement	if ( pid == 0 )		3639801	1					
ANR	3639850	Condition	pid == 0	546:6:14410:14417	3639801	0	True				
ANR	3639851	EqualityExpression	pid == 0		3639801	0		==			
ANR	3639852	Identifier	pid		3639801	0					
ANR	3639853	PrimaryExpression	0		3639801	1					
ANR	3639854	CompoundStatement		11:16:200:200	3639801	1					
ANR	3639855	ExpressionStatement	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 1 ] )"	547:3:14425:14477	3639801	0	True				
ANR	3639856	CallExpression	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 1 ] )"		3639801	0					
ANR	3639857	Callee	fprintf		3639801	0					
ANR	3639858	Identifier	fprintf		3639801	0					
ANR	3639859	ArgumentList	stderr		3639801	1					
ANR	3639860	Argument	stderr		3639801	0					
ANR	3639861	Identifier	stderr		3639801	0					
ANR	3639862	Argument	"""error: invalid pid: %s\\n"""		3639801	1					
ANR	3639863	PrimaryExpression	"""error: invalid pid: %s\\n"""		3639801	0					
ANR	3639864	Argument	argv [ 1 ]		3639801	2					
ANR	3639865	ArrayIndexing	argv [ 1 ]		3639801	0					
ANR	3639866	Identifier	argv		3639801	0					
ANR	3639867	PrimaryExpression	1		3639801	1					
ANR	3639868	ReturnStatement	return 1 ;	548:3:14482:14490	3639801	1	True				
ANR	3639869	PrimaryExpression	1		3639801	0					
ANR	3639870	IdentifierDeclStatement	bool success ;	551:1:14500:14512	3639801	3	True				
ANR	3639871	IdentifierDecl	success		3639801	0					
ANR	3639872	IdentifierDeclType	bool		3639801	0					
ANR	3639873	Identifier	success		3639801	1					
ANR	3639874	IfStatement	"if ( ! pfc . kill_family ( pid , success ) )"		3639801	4					
ANR	3639875	Condition	"! pfc . kill_family ( pid , success )"	552:5:14519:14548	3639801	0	True				
ANR	3639876	UnaryOperationExpression	"! pfc . kill_family ( pid , success )"		3639801	0					
ANR	3639877	UnaryOperator	!		3639801	0					
ANR	3639878	CallExpression	"pfc . kill_family ( pid , success )"		3639801	1					
ANR	3639879	Callee	pfc . kill_family		3639801	0					
ANR	3639880	MemberAccess	pfc . kill_family		3639801	0					
ANR	3639881	Identifier	pfc		3639801	0					
ANR	3639882	Identifier	kill_family		3639801	1					
ANR	3639883	ArgumentList	pid		3639801	1					
ANR	3639884	Argument	pid		3639801	0					
ANR	3639885	Identifier	pid		3639801	0					
ANR	3639886	Argument	success		3639801	1					
ANR	3639887	Identifier	success		3639801	0					
ANR	3639888	CompoundStatement		17:37:331:331	3639801	1					
ANR	3639889	ExpressionStatement	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"	553:2:14555:14613	3639801	0	True				
ANR	3639890	CallExpression	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"		3639801	0					
ANR	3639891	Callee	fprintf		3639801	0					
ANR	3639892	Identifier	fprintf		3639801	0					
ANR	3639893	ArgumentList	stderr		3639801	1					
ANR	3639894	Argument	stderr		3639801	0					
ANR	3639895	Identifier	stderr		3639801	0					
ANR	3639896	Argument	"""error: communication error with ProcD\\n"""		3639801	1					
ANR	3639897	PrimaryExpression	"""error: communication error with ProcD\\n"""		3639801	0					
ANR	3639898	ReturnStatement	return 1 ;	554:2:14617:14625	3639801	1	True				
ANR	3639899	PrimaryExpression	1		3639801	0					
ANR	3639900	IfStatement	if ( ! success )		3639801	5					
ANR	3639901	Condition	! success	556:5:14635:14642	3639801	0	True				
ANR	3639902	UnaryOperationExpression	! success		3639801	0					
ANR	3639903	UnaryOperator	!		3639801	0					
ANR	3639904	Identifier	success		3639801	1					
ANR	3639905	CompoundStatement		21:15:425:425	3639801	1					
ANR	3639906	ExpressionStatement	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"	557:2:14649:14734	3639801	0	True				
ANR	3639907	CallExpression	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"		3639801	0					
ANR	3639908	Callee	fprintf		3639801	0					
ANR	3639909	Identifier	fprintf		3639801	0					
ANR	3639910	ArgumentList	stderr		3639801	1					
ANR	3639911	Argument	stderr		3639801	0					
ANR	3639912	Identifier	stderr		3639801	0					
ANR	3639913	Argument	"""error: %s command failed with ProcD\\n"""		3639801	1					
ANR	3639914	PrimaryExpression	"""error: %s command failed with ProcD\\n"""		3639801	0					
ANR	3639915	Argument	argv [ 0 ]		3639801	2					
ANR	3639916	ArrayIndexing	argv [ 0 ]		3639801	0					
ANR	3639917	Identifier	argv		3639801	0					
ANR	3639918	PrimaryExpression	0		3639801	1					
ANR	3639919	ReturnStatement	return 1 ;	560:2:14738:14746	3639801	1	True				
ANR	3639920	PrimaryExpression	1		3639801	0					
ANR	3639921	ReturnStatement	return 0 ;	562:1:14752:14760	3639801	6	True				
ANR	3639922	PrimaryExpression	0		3639801	0					
ANR	3639923	ReturnType	int		3639801	1					
ANR	3639924	Identifier	kill_family		3639801	2					
ANR	3639925	ParameterList	"ProcFamilyClient & pfc , int argc , char * argv [ ]"		3639801	3					
ANR	3639926	Parameter	ProcFamilyClient & pfc	535:12:14172:14192	3639801	0	True				
ANR	3639927	ParameterType	ProcFamilyClient &		3639801	0					
ANR	3639928	Identifier	pfc		3639801	1					
ANR	3639929	Parameter	int argc	535:35:14195:14202	3639801	1	True				
ANR	3639930	ParameterType	int		3639801	0					
ANR	3639931	Identifier	argc		3639801	1					
ANR	3639932	Parameter	char * argv [ ]	535:45:14205:14216	3639801	2	True				
ANR	3639933	ParameterType	char * [ ]		3639801	0					
ANR	3639934	Identifier	argv		3639801	1					
ANR	3639935	CFGEntryNode	ENTRY		3639801		True				
ANR	3639936	CFGExitNode	EXIT		3639801		True				
ANR	3639937	Symbol	argc		3639801						
ANR	3639938	Symbol	atoi		3639801						
ANR	3639939	Symbol	success		3639801						
ANR	3639940	Symbol	* argv		3639801						
ANR	3639941	Symbol	pid		3639801						
ANR	3639942	Symbol	pfc		3639801						
ANR	3639943	Symbol	stderr		3639801						
ANR	3639944	Symbol	argv		3639801						
ANR	3639945	Symbol	pfc . kill_family		3639801						
ANR	3639946	Function	unregister_family	565:0:14765:15258							
ANR	3639947	FunctionDef	"unregister_family (ProcFamilyClient & pfc , int argc , char * argv [ ])"		3639946	0					
ANR	3639948	CompoundStatement		567:0:14834:15258	3639946	0					
ANR	3639949	IfStatement	if ( argc != 2 )		3639946	0					
ANR	3639950	Condition	argc != 2	568:5:14841:14849	3639946	0	True				
ANR	3639951	EqualityExpression	argc != 2		3639946	0		!=			
ANR	3639952	Identifier	argc		3639946	0					
ANR	3639953	PrimaryExpression	2		3639946	1					
ANR	3639954	CompoundStatement		2:16:17:17	3639946	1					
ANR	3639955	ExpressionStatement	"fprintf ( stderr , ""error: argument synopsis for %s: <pid>\\n"" , argv [ 0 ] )"	569:2:14856:14944	3639946	0	True				
ANR	3639956	CallExpression	"fprintf ( stderr , ""error: argument synopsis for %s: <pid>\\n"" , argv [ 0 ] )"		3639946	0					
ANR	3639957	Callee	fprintf		3639946	0					
ANR	3639958	Identifier	fprintf		3639946	0					
ANR	3639959	ArgumentList	stderr		3639946	1					
ANR	3639960	Argument	stderr		3639946	0					
ANR	3639961	Identifier	stderr		3639946	0					
ANR	3639962	Argument	"""error: argument synopsis for %s: <pid>\\n"""		3639946	1					
ANR	3639963	PrimaryExpression	"""error: argument synopsis for %s: <pid>\\n"""		3639946	0					
ANR	3639964	Argument	argv [ 0 ]		3639946	2					
ANR	3639965	ArrayIndexing	argv [ 0 ]		3639946	0					
ANR	3639966	Identifier	argv		3639946	0					
ANR	3639967	PrimaryExpression	0		3639946	1					
ANR	3639968	ReturnStatement	return 1 ;	572:2:14948:14956	3639946	1	True				
ANR	3639969	PrimaryExpression	1		3639946	0					
ANR	3639970	IdentifierDeclStatement	pid_t pid = atoi ( argv [ 1 ] ) ;	574:1:14962:14987	3639946	1	True				
ANR	3639971	IdentifierDecl	pid = atoi ( argv [ 1 ] )		3639946	0					
ANR	3639972	IdentifierDeclType	pid_t		3639946	0					
ANR	3639973	Identifier	pid		3639946	1					
ANR	3639974	AssignmentExpression	pid = atoi ( argv [ 1 ] )		3639946	2		=			
ANR	3639975	Identifier	pid		3639946	0					
ANR	3639976	CallExpression	atoi ( argv [ 1 ] )		3639946	1					
ANR	3639977	Callee	atoi		3639946	0					
ANR	3639978	Identifier	atoi		3639946	0					
ANR	3639979	ArgumentList	argv [ 1 ]		3639946	1					
ANR	3639980	Argument	argv [ 1 ]		3639946	0					
ANR	3639981	ArrayIndexing	argv [ 1 ]		3639946	0					
ANR	3639982	Identifier	argv		3639946	0					
ANR	3639983	PrimaryExpression	1		3639946	1					
ANR	3639984	IdentifierDeclStatement	bool success ;	575:1:14990:15002	3639946	2	True				
ANR	3639985	IdentifierDecl	success		3639946	0					
ANR	3639986	IdentifierDeclType	bool		3639946	0					
ANR	3639987	Identifier	success		3639946	1					
ANR	3639988	IfStatement	"if ( ! pfc . unregister_family ( pid , success ) )"		3639946	3					
ANR	3639989	Condition	"! pfc . unregister_family ( pid , success )"	576:5:15009:15044	3639946	0	True				
ANR	3639990	UnaryOperationExpression	"! pfc . unregister_family ( pid , success )"		3639946	0					
ANR	3639991	UnaryOperator	!		3639946	0					
ANR	3639992	CallExpression	"pfc . unregister_family ( pid , success )"		3639946	1					
ANR	3639993	Callee	pfc . unregister_family		3639946	0					
ANR	3639994	MemberAccess	pfc . unregister_family		3639946	0					
ANR	3639995	Identifier	pfc		3639946	0					
ANR	3639996	Identifier	unregister_family		3639946	1					
ANR	3639997	ArgumentList	pid		3639946	1					
ANR	3639998	Argument	pid		3639946	0					
ANR	3639999	Identifier	pid		3639946	0					
ANR	3640000	Argument	success		3639946	1					
ANR	3640001	Identifier	success		3639946	0					
ANR	3640002	CompoundStatement		10:43:212:212	3639946	1					
ANR	3640003	ExpressionStatement	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"	577:2:15051:15109	3639946	0	True				
ANR	3640004	CallExpression	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"		3639946	0					
ANR	3640005	Callee	fprintf		3639946	0					
ANR	3640006	Identifier	fprintf		3639946	0					
ANR	3640007	ArgumentList	stderr		3639946	1					
ANR	3640008	Argument	stderr		3639946	0					
ANR	3640009	Identifier	stderr		3639946	0					
ANR	3640010	Argument	"""error: communication error with ProcD\\n"""		3639946	1					
ANR	3640011	PrimaryExpression	"""error: communication error with ProcD\\n"""		3639946	0					
ANR	3640012	ReturnStatement	return 1 ;	578:2:15113:15121	3639946	1	True				
ANR	3640013	PrimaryExpression	1		3639946	0					
ANR	3640014	IfStatement	if ( ! success )		3639946	4					
ANR	3640015	Condition	! success	580:5:15131:15138	3639946	0	True				
ANR	3640016	UnaryOperationExpression	! success		3639946	0					
ANR	3640017	UnaryOperator	!		3639946	0					
ANR	3640018	Identifier	success		3639946	1					
ANR	3640019	CompoundStatement		14:15:306:306	3639946	1					
ANR	3640020	ExpressionStatement	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"	581:2:15145:15230	3639946	0	True				
ANR	3640021	CallExpression	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"		3639946	0					
ANR	3640022	Callee	fprintf		3639946	0					
ANR	3640023	Identifier	fprintf		3639946	0					
ANR	3640024	ArgumentList	stderr		3639946	1					
ANR	3640025	Argument	stderr		3639946	0					
ANR	3640026	Identifier	stderr		3639946	0					
ANR	3640027	Argument	"""error: %s command failed with ProcD\\n"""		3639946	1					
ANR	3640028	PrimaryExpression	"""error: %s command failed with ProcD\\n"""		3639946	0					
ANR	3640029	Argument	argv [ 0 ]		3639946	2					
ANR	3640030	ArrayIndexing	argv [ 0 ]		3639946	0					
ANR	3640031	Identifier	argv		3639946	0					
ANR	3640032	PrimaryExpression	0		3639946	1					
ANR	3640033	ReturnStatement	return 1 ;	584:2:15234:15242	3639946	1	True				
ANR	3640034	PrimaryExpression	1		3639946	0					
ANR	3640035	ReturnStatement	return 0 ;	586:1:15248:15256	3639946	5	True				
ANR	3640036	PrimaryExpression	0		3639946	0					
ANR	3640037	ReturnType	int		3639946	1					
ANR	3640038	Identifier	unregister_family		3639946	2					
ANR	3640039	ParameterList	"ProcFamilyClient & pfc , int argc , char * argv [ ]"		3639946	3					
ANR	3640040	Parameter	ProcFamilyClient & pfc	566:18:14787:14807	3639946	0	True				
ANR	3640041	ParameterType	ProcFamilyClient &		3639946	0					
ANR	3640042	Identifier	pfc		3639946	1					
ANR	3640043	Parameter	int argc	566:41:14810:14817	3639946	1	True				
ANR	3640044	ParameterType	int		3639946	0					
ANR	3640045	Identifier	argc		3639946	1					
ANR	3640046	Parameter	char * argv [ ]	566:51:14820:14831	3639946	2	True				
ANR	3640047	ParameterType	char * [ ]		3639946	0					
ANR	3640048	Identifier	argv		3639946	1					
ANR	3640049	CFGEntryNode	ENTRY		3639946		True				
ANR	3640050	CFGExitNode	EXIT		3639946		True				
ANR	3640051	Symbol	argc		3639946						
ANR	3640052	Symbol	atoi		3639946						
ANR	3640053	Symbol	pfc . unregister_family		3639946						
ANR	3640054	Symbol	success		3639946						
ANR	3640055	Symbol	* argv		3639946						
ANR	3640056	Symbol	pid		3639946						
ANR	3640057	Symbol	pfc		3639946						
ANR	3640058	Symbol	stderr		3639946						
ANR	3640059	Symbol	argv		3639946						
ANR	3640060	Function	snapshot	589:0:15261:15700							
ANR	3640061	FunctionDef	"snapshot (ProcFamilyClient & pfc , int argc , char * argv [ ])"		3640060	0					
ANR	3640062	CompoundStatement		591:0:15321:15700	3640060	0					
ANR	3640063	IfStatement	if ( argc != 1 )		3640060	0					
ANR	3640064	Condition	argc != 1	592:5:15328:15336	3640060	0	True				
ANR	3640065	EqualityExpression	argc != 1		3640060	0		!=			
ANR	3640066	Identifier	argc		3640060	0					
ANR	3640067	PrimaryExpression	1		3640060	1					
ANR	3640068	CompoundStatement		2:16:17:17	3640060	1					
ANR	3640069	ExpressionStatement	"fprintf ( stderr , ""error: no arguments required for %s\\n"" , argv [ 0 ] )"	593:2:15343:15428	3640060	0	True				
ANR	3640070	CallExpression	"fprintf ( stderr , ""error: no arguments required for %s\\n"" , argv [ 0 ] )"		3640060	0					
ANR	3640071	Callee	fprintf		3640060	0					
ANR	3640072	Identifier	fprintf		3640060	0					
ANR	3640073	ArgumentList	stderr		3640060	1					
ANR	3640074	Argument	stderr		3640060	0					
ANR	3640075	Identifier	stderr		3640060	0					
ANR	3640076	Argument	"""error: no arguments required for %s\\n"""		3640060	1					
ANR	3640077	PrimaryExpression	"""error: no arguments required for %s\\n"""		3640060	0					
ANR	3640078	Argument	argv [ 0 ]		3640060	2					
ANR	3640079	ArrayIndexing	argv [ 0 ]		3640060	0					
ANR	3640080	Identifier	argv		3640060	0					
ANR	3640081	PrimaryExpression	0		3640060	1					
ANR	3640082	ReturnStatement	return 1 ;	596:2:15432:15440	3640060	1	True				
ANR	3640083	PrimaryExpression	1		3640060	0					
ANR	3640084	IdentifierDeclStatement	bool success ;	598:1:15446:15458	3640060	1	True				
ANR	3640085	IdentifierDecl	success		3640060	0					
ANR	3640086	IdentifierDeclType	bool		3640060	0					
ANR	3640087	Identifier	success		3640060	1					
ANR	3640088	IfStatement	if ( ! pfc . snapshot ( success ) )		3640060	2					
ANR	3640089	Condition	! pfc . snapshot ( success )	599:5:15465:15486	3640060	0	True				
ANR	3640090	UnaryOperationExpression	! pfc . snapshot ( success )		3640060	0					
ANR	3640091	UnaryOperator	!		3640060	0					
ANR	3640092	CallExpression	pfc . snapshot ( success )		3640060	1					
ANR	3640093	Callee	pfc . snapshot		3640060	0					
ANR	3640094	MemberAccess	pfc . snapshot		3640060	0					
ANR	3640095	Identifier	pfc		3640060	0					
ANR	3640096	Identifier	snapshot		3640060	1					
ANR	3640097	ArgumentList	success		3640060	1					
ANR	3640098	Argument	success		3640060	0					
ANR	3640099	Identifier	success		3640060	0					
ANR	3640100	CompoundStatement		9:29:167:167	3640060	1					
ANR	3640101	ExpressionStatement	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"	600:2:15493:15551	3640060	0	True				
ANR	3640102	CallExpression	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"		3640060	0					
ANR	3640103	Callee	fprintf		3640060	0					
ANR	3640104	Identifier	fprintf		3640060	0					
ANR	3640105	ArgumentList	stderr		3640060	1					
ANR	3640106	Argument	stderr		3640060	0					
ANR	3640107	Identifier	stderr		3640060	0					
ANR	3640108	Argument	"""error: communication error with ProcD\\n"""		3640060	1					
ANR	3640109	PrimaryExpression	"""error: communication error with ProcD\\n"""		3640060	0					
ANR	3640110	ReturnStatement	return 1 ;	601:2:15555:15563	3640060	1	True				
ANR	3640111	PrimaryExpression	1		3640060	0					
ANR	3640112	IfStatement	if ( ! success )		3640060	3					
ANR	3640113	Condition	! success	603:5:15573:15580	3640060	0	True				
ANR	3640114	UnaryOperationExpression	! success		3640060	0					
ANR	3640115	UnaryOperator	!		3640060	0					
ANR	3640116	Identifier	success		3640060	1					
ANR	3640117	CompoundStatement		13:15:261:261	3640060	1					
ANR	3640118	ExpressionStatement	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"	604:2:15587:15672	3640060	0	True				
ANR	3640119	CallExpression	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"		3640060	0					
ANR	3640120	Callee	fprintf		3640060	0					
ANR	3640121	Identifier	fprintf		3640060	0					
ANR	3640122	ArgumentList	stderr		3640060	1					
ANR	3640123	Argument	stderr		3640060	0					
ANR	3640124	Identifier	stderr		3640060	0					
ANR	3640125	Argument	"""error: %s command failed with ProcD\\n"""		3640060	1					
ANR	3640126	PrimaryExpression	"""error: %s command failed with ProcD\\n"""		3640060	0					
ANR	3640127	Argument	argv [ 0 ]		3640060	2					
ANR	3640128	ArrayIndexing	argv [ 0 ]		3640060	0					
ANR	3640129	Identifier	argv		3640060	0					
ANR	3640130	PrimaryExpression	0		3640060	1					
ANR	3640131	ReturnStatement	return 1 ;	607:2:15676:15684	3640060	1	True				
ANR	3640132	PrimaryExpression	1		3640060	0					
ANR	3640133	ReturnStatement	return 0 ;	609:1:15690:15698	3640060	4	True				
ANR	3640134	PrimaryExpression	0		3640060	0					
ANR	3640135	ReturnType	int		3640060	1					
ANR	3640136	Identifier	snapshot		3640060	2					
ANR	3640137	ParameterList	"ProcFamilyClient & pfc , int argc , char * argv [ ]"		3640060	3					
ANR	3640138	Parameter	ProcFamilyClient & pfc	590:9:15274:15294	3640060	0	True				
ANR	3640139	ParameterType	ProcFamilyClient &		3640060	0					
ANR	3640140	Identifier	pfc		3640060	1					
ANR	3640141	Parameter	int argc	590:32:15297:15304	3640060	1	True				
ANR	3640142	ParameterType	int		3640060	0					
ANR	3640143	Identifier	argc		3640060	1					
ANR	3640144	Parameter	char * argv [ ]	590:42:15307:15318	3640060	2	True				
ANR	3640145	ParameterType	char * [ ]		3640060	0					
ANR	3640146	Identifier	argv		3640060	1					
ANR	3640147	CFGEntryNode	ENTRY		3640060		True				
ANR	3640148	CFGExitNode	EXIT		3640060		True				
ANR	3640149	Symbol	argc		3640060						
ANR	3640150	Symbol	success		3640060						
ANR	3640151	Symbol	pfc . snapshot		3640060						
ANR	3640152	Symbol	* argv		3640060						
ANR	3640153	Symbol	pfc		3640060						
ANR	3640154	Symbol	stderr		3640060						
ANR	3640155	Symbol	argv		3640060						
ANR	3640156	Function	quit	612:0:15703:16134							
ANR	3640157	FunctionDef	"quit (ProcFamilyClient & pfc , int argc , char * argv [ ])"		3640156	0					
ANR	3640158	CompoundStatement		614:0:15759:16134	3640156	0					
ANR	3640159	IfStatement	if ( argc != 1 )		3640156	0					
ANR	3640160	Condition	argc != 1	615:5:15766:15774	3640156	0	True				
ANR	3640161	EqualityExpression	argc != 1		3640156	0		!=			
ANR	3640162	Identifier	argc		3640156	0					
ANR	3640163	PrimaryExpression	1		3640156	1					
ANR	3640164	CompoundStatement		2:16:17:17	3640156	1					
ANR	3640165	ExpressionStatement	"fprintf ( stderr , ""error: no arguments required for %s\\n"" , argv [ 0 ] )"	616:2:15781:15866	3640156	0	True				
ANR	3640166	CallExpression	"fprintf ( stderr , ""error: no arguments required for %s\\n"" , argv [ 0 ] )"		3640156	0					
ANR	3640167	Callee	fprintf		3640156	0					
ANR	3640168	Identifier	fprintf		3640156	0					
ANR	3640169	ArgumentList	stderr		3640156	1					
ANR	3640170	Argument	stderr		3640156	0					
ANR	3640171	Identifier	stderr		3640156	0					
ANR	3640172	Argument	"""error: no arguments required for %s\\n"""		3640156	1					
ANR	3640173	PrimaryExpression	"""error: no arguments required for %s\\n"""		3640156	0					
ANR	3640174	Argument	argv [ 0 ]		3640156	2					
ANR	3640175	ArrayIndexing	argv [ 0 ]		3640156	0					
ANR	3640176	Identifier	argv		3640156	0					
ANR	3640177	PrimaryExpression	0		3640156	1					
ANR	3640178	ReturnStatement	return 1 ;	619:2:15870:15878	3640156	1	True				
ANR	3640179	PrimaryExpression	1		3640156	0					
ANR	3640180	IdentifierDeclStatement	bool success ;	621:1:15884:15896	3640156	1	True				
ANR	3640181	IdentifierDecl	success		3640156	0					
ANR	3640182	IdentifierDeclType	bool		3640156	0					
ANR	3640183	Identifier	success		3640156	1					
ANR	3640184	IfStatement	if ( ! pfc . quit ( success ) )		3640156	2					
ANR	3640185	Condition	! pfc . quit ( success )	622:5:15903:15920	3640156	0	True				
ANR	3640186	UnaryOperationExpression	! pfc . quit ( success )		3640156	0					
ANR	3640187	UnaryOperator	!		3640156	0					
ANR	3640188	CallExpression	pfc . quit ( success )		3640156	1					
ANR	3640189	Callee	pfc . quit		3640156	0					
ANR	3640190	MemberAccess	pfc . quit		3640156	0					
ANR	3640191	Identifier	pfc		3640156	0					
ANR	3640192	Identifier	quit		3640156	1					
ANR	3640193	ArgumentList	success		3640156	1					
ANR	3640194	Argument	success		3640156	0					
ANR	3640195	Identifier	success		3640156	0					
ANR	3640196	CompoundStatement		9:25:163:163	3640156	1					
ANR	3640197	ExpressionStatement	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"	623:2:15927:15985	3640156	0	True				
ANR	3640198	CallExpression	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"		3640156	0					
ANR	3640199	Callee	fprintf		3640156	0					
ANR	3640200	Identifier	fprintf		3640156	0					
ANR	3640201	ArgumentList	stderr		3640156	1					
ANR	3640202	Argument	stderr		3640156	0					
ANR	3640203	Identifier	stderr		3640156	0					
ANR	3640204	Argument	"""error: communication error with ProcD\\n"""		3640156	1					
ANR	3640205	PrimaryExpression	"""error: communication error with ProcD\\n"""		3640156	0					
ANR	3640206	ReturnStatement	return 1 ;	624:2:15989:15997	3640156	1	True				
ANR	3640207	PrimaryExpression	1		3640156	0					
ANR	3640208	IfStatement	if ( ! success )		3640156	3					
ANR	3640209	Condition	! success	626:5:16007:16014	3640156	0	True				
ANR	3640210	UnaryOperationExpression	! success		3640156	0					
ANR	3640211	UnaryOperator	!		3640156	0					
ANR	3640212	Identifier	success		3640156	1					
ANR	3640213	CompoundStatement		13:15:257:257	3640156	1					
ANR	3640214	ExpressionStatement	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"	627:2:16021:16106	3640156	0	True				
ANR	3640215	CallExpression	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"		3640156	0					
ANR	3640216	Callee	fprintf		3640156	0					
ANR	3640217	Identifier	fprintf		3640156	0					
ANR	3640218	ArgumentList	stderr		3640156	1					
ANR	3640219	Argument	stderr		3640156	0					
ANR	3640220	Identifier	stderr		3640156	0					
ANR	3640221	Argument	"""error: %s command failed with ProcD\\n"""		3640156	1					
ANR	3640222	PrimaryExpression	"""error: %s command failed with ProcD\\n"""		3640156	0					
ANR	3640223	Argument	argv [ 0 ]		3640156	2					
ANR	3640224	ArrayIndexing	argv [ 0 ]		3640156	0					
ANR	3640225	Identifier	argv		3640156	0					
ANR	3640226	PrimaryExpression	0		3640156	1					
ANR	3640227	ReturnStatement	return 1 ;	630:2:16110:16118	3640156	1	True				
ANR	3640228	PrimaryExpression	1		3640156	0					
ANR	3640229	ReturnStatement	return 0 ;	632:1:16124:16132	3640156	4	True				
ANR	3640230	PrimaryExpression	0		3640156	0					
ANR	3640231	ReturnType	int		3640156	1					
ANR	3640232	Identifier	quit		3640156	2					
ANR	3640233	ParameterList	"ProcFamilyClient & pfc , int argc , char * argv [ ]"		3640156	3					
ANR	3640234	Parameter	ProcFamilyClient & pfc	613:5:15712:15732	3640156	0	True				
ANR	3640235	ParameterType	ProcFamilyClient &		3640156	0					
ANR	3640236	Identifier	pfc		3640156	1					
ANR	3640237	Parameter	int argc	613:28:15735:15742	3640156	1	True				
ANR	3640238	ParameterType	int		3640156	0					
ANR	3640239	Identifier	argc		3640156	1					
ANR	3640240	Parameter	char * argv [ ]	613:38:15745:15756	3640156	2	True				
ANR	3640241	ParameterType	char * [ ]		3640156	0					
ANR	3640242	Identifier	argv		3640156	1					
ANR	3640243	CFGEntryNode	ENTRY		3640156		True				
ANR	3640244	CFGExitNode	EXIT		3640156		True				
ANR	3640245	Symbol	argc		3640156						
ANR	3640246	Symbol	success		3640156						
ANR	3640247	Symbol	* argv		3640156						
ANR	3640248	Symbol	pfc		3640156						
ANR	3640249	Symbol	stderr		3640156						
ANR	3640250	Symbol	pfc . quit		3640156						
ANR	3640251	Symbol	argv		3640156						
