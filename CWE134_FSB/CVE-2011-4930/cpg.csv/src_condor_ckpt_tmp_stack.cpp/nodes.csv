command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2724516	File	data/converged/CVE-2011-4930_htcondor/src_condor_ckpt_tmp_stack.cpp								
ANR	2724517	DeclStmt									
ANR	2724518	Decl							void ( * ) ( )	void ( * ) ( )	SaveFunc
ANR	2724519	DeclStmt									
ANR	2724520	Decl							const int	const int	KILO
ANR	2724521	DeclStmt									
ANR	2724522	Decl							const int	const int	TmpStackSize
ANR	2724523	DeclStmt									
ANR	2724524	Decl							double	double *	TmpStack
ANR	2724525	DeclStmt									
ANR	2724526	Decl							double	double [ TmpStackSize ]	TmpStack
ANR	2724527	DeclStmt									
ANR	2724528	Decl							const long	const long	OverrunFlag
ANR	2724529	Function	GetOverrunPos	61:0:1935:2074							
ANR	2724530	FunctionDef	GetOverrunPos ()		2724529	0					
ANR	2724531	CompoundStatement		62:0:1964:2074	2724529	0					
ANR	2724532	IfStatement	if ( StackGrowsDown ( ) )		2724529	0					
ANR	2724533	Condition	StackGrowsDown ( )	63:5:1971:1986	2724529	0	True				
ANR	2724534	CallExpression	StackGrowsDown ( )		2724529	0					
ANR	2724535	Callee	StackGrowsDown		2724529	0					
ANR	2724536	Identifier	StackGrowsDown		2724529	0					
ANR	2724537	ArgumentList			2724529	1					
ANR	2724538	CompoundStatement		2:24:25:25	2724529	1					
ANR	2724539	ReturnStatement	return ( long * ) TmpStack ;	64:2:1994:2016	2724529	0	True				
ANR	2724540	CastExpression	( long * ) TmpStack		2724529	0					
ANR	2724541	CastTarget	long *		2724529	0					
ANR	2724542	Identifier	TmpStack		2724529	1					
ANR	2724543	ElseStatement	else		2724529	0					
ANR	2724544	CompoundStatement		4:8:61:61	2724529	0					
ANR	2724545	ReturnStatement	return ( long * ) ( TmpStack + TmpStackSize - 2 ) ;	66:2:2030:2069	2724529	0	True				
ANR	2724546	CastExpression	( long * ) ( TmpStack + TmpStackSize - 2 )		2724529	0					
ANR	2724547	CastTarget	long *		2724529	0					
ANR	2724548	AdditiveExpression	TmpStack + TmpStackSize - 2		2724529	1		+			
ANR	2724549	Identifier	TmpStack		2724529	0					
ANR	2724550	AdditiveExpression	TmpStackSize - 2		2724529	1		-			
ANR	2724551	Identifier	TmpStackSize		2724529	0					
ANR	2724552	PrimaryExpression	2		2724529	1					
ANR	2724553	ReturnType	static long *		2724529	1					
ANR	2724554	Identifier	GetOverrunPos		2724529	2					
ANR	2724555	ParameterList			2724529	3					
ANR	2724556	CFGEntryNode	ENTRY		2724529		True				
ANR	2724557	CFGExitNode	EXIT		2724529		True				
ANR	2724558	Symbol	TmpStack		2724529						
ANR	2724559	Symbol	TmpStackSize		2724529						
ANR	2724560	Symbol	StackGrowsDown		2724529						
ANR	2724561	Function	ExecuteOnTmpStk	70:0:2077:3630							
ANR	2724562	FunctionDef	ExecuteOnTmpStk (void ( * func ) ( ))		2724561	0					
ANR	2724563	CompoundStatement		71:0:2116:3630	2724561	0					
ANR	2724564	IdentifierDeclStatement	jmp_buf env ;	72:1:2119:2130	2724561	0	True				
ANR	2724565	IdentifierDecl	env		2724561	0					
ANR	2724566	IdentifierDeclType	jmp_buf		2724561	0					
ANR	2724567	Identifier	env		2724561	1					
ANR	2724568	ExpressionStatement	SaveFunc = func	73:1:2133:2148	2724561	1	True				
ANR	2724569	AssignmentExpression	SaveFunc = func		2724561	0		=			
ANR	2724570	Identifier	SaveFunc		2724561	0					
ANR	2724571	Identifier	func		2724561	1					
ANR	2724572	IdentifierDeclStatement	unsigned long addr ;	74:1:2151:2169	2724561	2	True				
ANR	2724573	IdentifierDecl	addr		2724561	0					
ANR	2724574	IdentifierDeclType	unsigned long		2724561	0					
ANR	2724575	Identifier	addr		2724561	1					
ANR	2724576	ExpressionStatement	TmpStack = ( double * ) condor_malloc ( TmpStackSize * sizeof ( double ) )	83:1:2376:2439	2724561	3	True				
ANR	2724577	AssignmentExpression	TmpStack = ( double * ) condor_malloc ( TmpStackSize * sizeof ( double ) )		2724561	0		=			
ANR	2724578	Identifier	TmpStack		2724561	0					
ANR	2724579	CastExpression	( double * ) condor_malloc ( TmpStackSize * sizeof ( double ) )		2724561	1					
ANR	2724580	CastTarget	double *		2724561	0					
ANR	2724581	CallExpression	condor_malloc ( TmpStackSize * sizeof ( double ) )		2724561	1					
ANR	2724582	Callee	condor_malloc		2724561	0					
ANR	2724583	Identifier	condor_malloc		2724561	0					
ANR	2724584	ArgumentList	TmpStackSize * sizeof ( double )		2724561	1					
ANR	2724585	Argument	TmpStackSize * sizeof ( double )		2724561	0					
ANR	2724586	MultiplicativeExpression	TmpStackSize * sizeof ( double )		2724561	0		*			
ANR	2724587	Identifier	TmpStackSize		2724561	0					
ANR	2724588	SizeofExpression	sizeof ( double )		2724561	1					
ANR	2724589	Sizeof	sizeof		2724561	0					
ANR	2724590	SizeofOperand	double		2724561	1					
ANR	2724591	IfStatement	if ( ! TmpStack )		2724561	4					
ANR	2724592	Condition	! TmpStack	84:4:2445:2453	2724561	0	True				
ANR	2724593	UnaryOperationExpression	! TmpStack		2724561	0					
ANR	2724594	UnaryOperator	!		2724561	0					
ANR	2724595	Identifier	TmpStack		2724561	1					
ANR	2724596	ExpressionStatement	"EXCEPT ( ""Unable to allocate temporary stack!"" )"	84:15:2456:2501	2724561	1	True				
ANR	2724597	CallExpression	"EXCEPT ( ""Unable to allocate temporary stack!"" )"		2724561	0					
ANR	2724598	Callee	EXCEPT		2724561	0					
ANR	2724599	Identifier	EXCEPT		2724561	0					
ANR	2724600	ArgumentList	"""Unable to allocate temporary stack!"""		2724561	1					
ANR	2724601	Argument	"""Unable to allocate temporary stack!"""		2724561	0					
ANR	2724602	PrimaryExpression	"""Unable to allocate temporary stack!"""		2724561	0					
ANR	2724603	ExpressionStatement	* ( GetOverrunPos ( ) ) = OverrunFlag	87:1:2513:2545	2724561	5	True				
ANR	2724604	AssignmentExpression	* ( GetOverrunPos ( ) ) = OverrunFlag		2724561	0		=			
ANR	2724605	UnaryOperationExpression	* ( GetOverrunPos ( ) )		2724561	0					
ANR	2724606	UnaryOperator	*		2724561	0					
ANR	2724607	CallExpression	GetOverrunPos ( )		2724561	1					
ANR	2724608	Callee	GetOverrunPos		2724561	0					
ANR	2724609	Identifier	GetOverrunPos		2724561	0					
ANR	2724610	ArgumentList			2724561	1					
ANR	2724611	Identifier	OverrunFlag		2724561	1					
ANR	2724612	IfStatement	if ( SETJMP ( env ) == 0 )		2724561	6					
ANR	2724613	Condition	SETJMP ( env ) == 0	89:5:2553:2568	2724561	0	True				
ANR	2724614	EqualityExpression	SETJMP ( env ) == 0		2724561	0		==			
ANR	2724615	CallExpression	SETJMP ( env )		2724561	0					
ANR	2724616	Callee	SETJMP		2724561	0					
ANR	2724617	Identifier	SETJMP		2724561	0					
ANR	2724618	ArgumentList	env		2724561	1					
ANR	2724619	Argument	env		2724561	0					
ANR	2724620	Identifier	env		2724561	0					
ANR	2724621	PrimaryExpression	0		2724561	1					
ANR	2724622	CompoundStatement		19:24:455:455	2724561	1					
ANR	2724623	IfStatement	if ( StackGrowsDown ( ) )		2724561	0					
ANR	2724624	Condition	StackGrowsDown ( )	91:6:2615:2630	2724561	0	True				
ANR	2724625	CallExpression	StackGrowsDown ( )		2724561	0					
ANR	2724626	Callee	StackGrowsDown		2724561	0					
ANR	2724627	Identifier	StackGrowsDown		2724561	0					
ANR	2724628	ArgumentList			2724561	1					
ANR	2724629	CompoundStatement		21:25:517:517	2724561	1					
ANR	2724630	ExpressionStatement	addr = ( long ) ( TmpStack + TmpStackSize - 2 )	100:3:3001:3043	2724561	0	True				
ANR	2724631	AssignmentExpression	addr = ( long ) ( TmpStack + TmpStackSize - 2 )		2724561	0		=			
ANR	2724632	Identifier	addr		2724561	0					
ANR	2724633	CastExpression	( long ) ( TmpStack + TmpStackSize - 2 )		2724561	1					
ANR	2724634	CastTarget	long		2724561	0					
ANR	2724635	AdditiveExpression	TmpStack + TmpStackSize - 2		2724561	1		+			
ANR	2724636	Identifier	TmpStack		2724561	0					
ANR	2724637	AdditiveExpression	TmpStackSize - 2		2724561	1		-			
ANR	2724638	Identifier	TmpStackSize		2724561	0					
ANR	2724639	PrimaryExpression	2		2724561	1					
ANR	2724640	ElseStatement	else		2724561	0					
ANR	2724641	CompoundStatement		31:9:937:937	2724561	0					
ANR	2724642	ExpressionStatement	addr = ( long ) TmpStack	102:3:3059:3080	2724561	0	True				
ANR	2724643	AssignmentExpression	addr = ( long ) TmpStack		2724561	0		=			
ANR	2724644	Identifier	addr		2724561	0					
ANR	2724645	CastExpression	( long ) TmpStack		2724561	1					
ANR	2724646	CastTarget	long		2724561	0					
ANR	2724647	Identifier	TmpStack		2724561	1					
ANR	2724648	ExpressionStatement	PTR_ENCRYPT ( addr )	105:2:3138:3155	2724561	1	True				
ANR	2724649	CallExpression	PTR_ENCRYPT ( addr )		2724561	0					
ANR	2724650	Callee	PTR_ENCRYPT		2724561	0					
ANR	2724651	Identifier	PTR_ENCRYPT		2724561	0					
ANR	2724652	ArgumentList	addr		2724561	1					
ANR	2724653	Argument	addr		2724561	0					
ANR	2724654	Identifier	addr		2724561	0					
ANR	2724655	ExpressionStatement	JMP_BUF_SP ( env ) = addr	106:2:3159:3181	2724561	2	True				
ANR	2724656	AssignmentExpression	JMP_BUF_SP ( env ) = addr		2724561	0		=			
ANR	2724657	CallExpression	JMP_BUF_SP ( env )		2724561	0					
ANR	2724658	Callee	JMP_BUF_SP		2724561	0					
ANR	2724659	Identifier	JMP_BUF_SP		2724561	0					
ANR	2724660	ArgumentList	env		2724561	1					
ANR	2724661	Argument	env		2724561	0					
ANR	2724662	Identifier	env		2724561	0					
ANR	2724663	Identifier	addr		2724561	1					
ANR	2724664	ExpressionStatement	"dprintf ( D_CKPT , ""About to execute on tmpstack.\\n"" )"	108:2:3186:3236	2724561	3	True				
ANR	2724665	CallExpression	"dprintf ( D_CKPT , ""About to execute on tmpstack.\\n"" )"		2724561	0					
ANR	2724666	Callee	dprintf		2724561	0					
ANR	2724667	Identifier	dprintf		2724561	0					
ANR	2724668	ArgumentList	D_CKPT		2724561	1					
ANR	2724669	Argument	D_CKPT		2724561	0					
ANR	2724670	Identifier	D_CKPT		2724561	0					
ANR	2724671	Argument	"""About to execute on tmpstack.\\n"""		2724561	1					
ANR	2724672	PrimaryExpression	"""About to execute on tmpstack.\\n"""		2724561	0					
ANR	2724673	ExpressionStatement	"LONGJMP ( env , 1 )"	109:2:3240:3257	2724561	4	True				
ANR	2724674	CallExpression	"LONGJMP ( env , 1 )"		2724561	0					
ANR	2724675	Callee	LONGJMP		2724561	0					
ANR	2724676	Identifier	LONGJMP		2724561	0					
ANR	2724677	ArgumentList	env		2724561	1					
ANR	2724678	Argument	env		2724561	0					
ANR	2724679	Identifier	env		2724561	0					
ANR	2724680	Argument	1		2724561	1					
ANR	2724681	PrimaryExpression	1		2724561	0					
ANR	2724682	ExpressionStatement	"dprintf ( D_CKPT , ""How did I get here after LONGJMP()!?!\\n"" )"	110:2:3261:3319	2724561	5	True				
ANR	2724683	CallExpression	"dprintf ( D_CKPT , ""How did I get here after LONGJMP()!?!\\n"" )"		2724561	0					
ANR	2724684	Callee	dprintf		2724561	0					
ANR	2724685	Identifier	dprintf		2724561	0					
ANR	2724686	ArgumentList	D_CKPT		2724561	1					
ANR	2724687	Argument	D_CKPT		2724561	0					
ANR	2724688	Identifier	D_CKPT		2724561	0					
ANR	2724689	Argument	"""How did I get here after LONGJMP()!?!\\n"""		2724561	1					
ANR	2724690	PrimaryExpression	"""How did I get here after LONGJMP()!?!\\n"""		2724561	0					
ANR	2724691	ElseStatement	else		2724561	0					
ANR	2724692	CompoundStatement		41:8:1212:1212	2724561	0					
ANR	2724693	ExpressionStatement	"dprintf ( D_CKPT , ""Beginning Execution on TmpStack.\\n"" )"	113:2:3379:3432	2724561	0	True				
ANR	2724694	CallExpression	"dprintf ( D_CKPT , ""Beginning Execution on TmpStack.\\n"" )"		2724561	0					
ANR	2724695	Callee	dprintf		2724561	0					
ANR	2724696	Identifier	dprintf		2724561	0					
ANR	2724697	ArgumentList	D_CKPT		2724561	1					
ANR	2724698	Argument	D_CKPT		2724561	0					
ANR	2724699	Identifier	D_CKPT		2724561	0					
ANR	2724700	Argument	"""Beginning Execution on TmpStack.\\n"""		2724561	1					
ANR	2724701	PrimaryExpression	"""Beginning Execution on TmpStack.\\n"""		2724561	0					
ANR	2724702	ExpressionStatement	SaveFunc ( )	114:2:3436:3446	2724561	1	True				
ANR	2724703	CallExpression	SaveFunc ( )		2724561	0					
ANR	2724704	Callee	SaveFunc		2724561	0					
ANR	2724705	Identifier	SaveFunc		2724561	0					
ANR	2724706	ArgumentList			2724561	1					
ANR	2724707	ExpressionStatement	condor_free ( TmpStack )	120:1:3503:3524	2724561	7	True				
ANR	2724708	CallExpression	condor_free ( TmpStack )		2724561	0					
ANR	2724709	Callee	condor_free		2724561	0					
ANR	2724710	Identifier	condor_free		2724561	0					
ANR	2724711	ArgumentList	TmpStack		2724561	1					
ANR	2724712	Argument	TmpStack		2724561	0					
ANR	2724713	Identifier	TmpStack		2724561	0					
ANR	2724714	IfStatement	if ( * ( GetOverrunPos ( ) ) != OverrunFlag )		2724561	8					
ANR	2724715	Condition	* ( GetOverrunPos ( ) ) != OverrunFlag	123:5:3540:3572	2724561	0	True				
ANR	2724716	EqualityExpression	* ( GetOverrunPos ( ) ) != OverrunFlag		2724561	0		!=			
ANR	2724717	UnaryOperationExpression	* ( GetOverrunPos ( ) )		2724561	0					
ANR	2724718	UnaryOperator	*		2724561	0					
ANR	2724719	CallExpression	GetOverrunPos ( )		2724561	1					
ANR	2724720	Callee	GetOverrunPos		2724561	0					
ANR	2724721	Identifier	GetOverrunPos		2724561	0					
ANR	2724722	ArgumentList			2724561	1					
ANR	2724723	Identifier	OverrunFlag		2724561	1					
ANR	2724724	CompoundStatement		53:41:1459:1459	2724561	1					
ANR	2724725	ExpressionStatement	"EXCEPT ( ""Stack overrun in ExecuteOnTmpStack."" )"	124:2:3580:3625	2724561	0	True				
ANR	2724726	CallExpression	"EXCEPT ( ""Stack overrun in ExecuteOnTmpStack."" )"		2724561	0					
ANR	2724727	Callee	EXCEPT		2724561	0					
ANR	2724728	Identifier	EXCEPT		2724561	0					
ANR	2724729	ArgumentList	"""Stack overrun in ExecuteOnTmpStack."""		2724561	1					
ANR	2724730	Argument	"""Stack overrun in ExecuteOnTmpStack."""		2724561	0					
ANR	2724731	PrimaryExpression	"""Stack overrun in ExecuteOnTmpStack."""		2724561	0					
ANR	2724732	ReturnType	void		2724561	1					
ANR	2724733	Identifier	ExecuteOnTmpStk		2724561	2					
ANR	2724734	ParameterList	void ( * func ) ( )		2724561	3					
ANR	2724735	Parameter	void ( * func ) ( )	70:22:2099:2112	2724561	0	True				
ANR	2724736	ParameterType	(( ) void) *		2724561	0					
ANR	2724737	Identifier	func		2724561	1					
ANR	2724738	CFGEntryNode	ENTRY		2724561		True				
ANR	2724739	CFGExitNode	EXIT		2724561		True				
ANR	2724740	Symbol	TmpStack		2724561						
ANR	2724741	Symbol	D_CKPT		2724561						
ANR	2724742	Symbol	TmpStackSize		2724561						
ANR	2724743	Symbol	SaveFunc		2724561						
ANR	2724744	Symbol	env		2724561						
ANR	2724745	Symbol	StackGrowsDown		2724561						
ANR	2724746	Symbol	condor_malloc		2724561						
ANR	2724747	Symbol	OverrunFlag		2724561						
ANR	2724748	Symbol	func		2724561						
ANR	2724749	Symbol	JMP_BUF_SP		2724561						
ANR	2724750	Symbol	* GetOverrunPos		2724561						
ANR	2724751	Symbol	addr		2724561						
ANR	2724752	Symbol	* ( GetOverrunPos ( ) )		2724561						
ANR	2724753	Symbol	SETJMP		2724561						
ANR	2724754	Symbol	GetOverrunPos		2724561						
