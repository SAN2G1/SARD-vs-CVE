command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4664712	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_condor_sockaddr.cpp								
ANR	4664713	DeclStmt									
ANR	4664714	Decl							condor_sockaddr	condor_sockaddr	condor_sockaddr :: null
ANR	4664715	Function	condor_sockaddr :: clear	8:0:146:226							
ANR	4664716	FunctionDef	condor_sockaddr :: clear ()		4664715	0					
ANR	4664717	CompoundStatement		9:0:176:226	4664715	0					
ANR	4664718	ExpressionStatement	"memset ( & storage , 0 , sizeof ( sockaddr_storage ) )"	10:1:179:224	4664715	0	True				
ANR	4664719	CallExpression	"memset ( & storage , 0 , sizeof ( sockaddr_storage ) )"		4664715	0					
ANR	4664720	Callee	memset		4664715	0					
ANR	4664721	Identifier	memset		4664715	0					
ANR	4664722	ArgumentList	& storage		4664715	1					
ANR	4664723	Argument	& storage		4664715	0					
ANR	4664724	UnaryOperationExpression	& storage		4664715	0					
ANR	4664725	UnaryOperator	&		4664715	0					
ANR	4664726	Identifier	storage		4664715	1					
ANR	4664727	Argument	0		4664715	1					
ANR	4664728	PrimaryExpression	0		4664715	0					
ANR	4664729	Argument	sizeof ( sockaddr_storage )		4664715	2					
ANR	4664730	SizeofExpression	sizeof ( sockaddr_storage )		4664715	0					
ANR	4664731	Sizeof	sizeof		4664715	0					
ANR	4664732	SizeofOperand	sockaddr_storage		4664715	1					
ANR	4664733	ReturnType	void		4664715	1					
ANR	4664734	Identifier	condor_sockaddr :: clear		4664715	2					
ANR	4664735	ParameterList			4664715	3					
ANR	4664736	CFGEntryNode	ENTRY		4664715		True				
ANR	4664737	CFGExitNode	EXIT		4664715		True				
ANR	4664738	Symbol	& storage		4664715						
ANR	4664739	Function	condor_sockaddr :: init	14:0:278:498							
ANR	4664740	FunctionDef	"condor_sockaddr :: init (int32_t ip , unsigned port)"		4664739	0					
ANR	4664741	CompoundStatement		15:0:332:498	4664739	0					
ANR	4664742	ExpressionStatement	clear ( )	16:1:335:342	4664739	0	True				
ANR	4664743	CallExpression	clear ( )		4664739	0					
ANR	4664744	Callee	clear		4664739	0					
ANR	4664745	Identifier	clear		4664739	0					
ANR	4664746	ArgumentList			4664739	1					
ANR	4664747	ExpressionStatement	v4 . sin_len = sizeof ( sockaddr_in )	18:1:384:416	4664739	1	True				
ANR	4664748	AssignmentExpression	v4 . sin_len = sizeof ( sockaddr_in )		4664739	0		=			
ANR	4664749	MemberAccess	v4 . sin_len		4664739	0					
ANR	4664750	Identifier	v4		4664739	0					
ANR	4664751	Identifier	sin_len		4664739	1					
ANR	4664752	SizeofExpression	sizeof ( sockaddr_in )		4664739	1					
ANR	4664753	Sizeof	sizeof		4664739	0					
ANR	4664754	SizeofOperand	sockaddr_in		4664739	1					
ANR	4664755	ExpressionStatement	v4 . sin_family = AF_INET	20:1:426:449	4664739	2	True				
ANR	4664756	AssignmentExpression	v4 . sin_family = AF_INET		4664739	0		=			
ANR	4664757	MemberAccess	v4 . sin_family		4664739	0					
ANR	4664758	Identifier	v4		4664739	0					
ANR	4664759	Identifier	sin_family		4664739	1					
ANR	4664760	Identifier	AF_INET		4664739	1					
ANR	4664761	ExpressionStatement	v4 . sin_port = port	21:1:452:470	4664739	3	True				
ANR	4664762	AssignmentExpression	v4 . sin_port = port		4664739	0		=			
ANR	4664763	MemberAccess	v4 . sin_port		4664739	0					
ANR	4664764	Identifier	v4		4664739	0					
ANR	4664765	Identifier	sin_port		4664739	1					
ANR	4664766	Identifier	port		4664739	1					
ANR	4664767	ExpressionStatement	v4 . sin_addr . s_addr = ip	22:1:473:496	4664739	4	True				
ANR	4664768	AssignmentExpression	v4 . sin_addr . s_addr = ip		4664739	0		=			
ANR	4664769	MemberAccess	v4 . sin_addr . s_addr		4664739	0					
ANR	4664770	MemberAccess	v4 . sin_addr		4664739	0					
ANR	4664771	Identifier	v4		4664739	0					
ANR	4664772	Identifier	sin_addr		4664739	1					
ANR	4664773	Identifier	s_addr		4664739	1					
ANR	4664774	Identifier	ip		4664739	1					
ANR	4664775	ReturnType	void		4664739	1					
ANR	4664776	Identifier	condor_sockaddr :: init		4664739	2					
ANR	4664777	ParameterList	"int32_t ip , unsigned port"		4664739	3					
ANR	4664778	Parameter	int32_t ip	14:27:305:314	4664739	0	True				
ANR	4664779	ParameterType	int32_t		4664739	0					
ANR	4664780	Identifier	ip		4664739	1					
ANR	4664781	Parameter	unsigned port	14:39:317:329	4664739	1	True				
ANR	4664782	ParameterType	unsigned		4664739	0					
ANR	4664783	Identifier	port		4664739	1					
ANR	4664784	CFGEntryNode	ENTRY		4664739		True				
ANR	4664785	CFGExitNode	EXIT		4664739		True				
ANR	4664786	Symbol	v4 . sin_len		4664739						
ANR	4664787	Symbol	v4 . sin_family		4664739						
ANR	4664788	Symbol	v4 . sin_addr . s_addr		4664739						
ANR	4664789	Symbol	port		4664739						
ANR	4664790	Symbol	v4 . sin_port		4664739						
ANR	4664791	Symbol	ip		4664739						
ANR	4664792	Symbol	v4 . sin_addr		4664739						
ANR	4664793	Symbol	AF_INET		4664739						
ANR	4664794	Symbol	v4		4664739						
ANR	4664795	Function	condor_sockaddr :: condor_sockaddr	25:0:501:548							
ANR	4664796	FunctionDef	condor_sockaddr :: condor_sockaddr ()		4664795	0					
ANR	4664797	CompoundStatement		26:0:536:548	4664795	0					
ANR	4664798	ExpressionStatement	clear ( )	27:1:539:546	4664795	0	True				
ANR	4664799	CallExpression	clear ( )		4664795	0					
ANR	4664800	Callee	clear		4664795	0					
ANR	4664801	Identifier	clear		4664795	0					
ANR	4664802	ArgumentList			4664795	1					
ANR	4664803	Identifier	condor_sockaddr :: condor_sockaddr		4664795	1					
ANR	4664804	ParameterList			4664795	2					
ANR	4664805	CFGEntryNode	ENTRY		4664795		True				
ANR	4664806	CFGExitNode	EXIT		4664795		True				
ANR	4664807	Function	condor_sockaddr :: condor_sockaddr	30:0:551:650							
ANR	4664808	FunctionDef	"condor_sockaddr :: condor_sockaddr (in_addr ip , unsigned short port)"		4664807	0					
ANR	4664809	CompoundStatement		31:0:617:650	4664807	0					
ANR	4664810	ExpressionStatement	"init ( ip . s_addr , htons ( port ) )"	32:1:620:648	4664807	0	True				
ANR	4664811	CallExpression	"init ( ip . s_addr , htons ( port ) )"		4664807	0					
ANR	4664812	Callee	init		4664807	0					
ANR	4664813	Identifier	init		4664807	0					
ANR	4664814	ArgumentList	ip . s_addr		4664807	1					
ANR	4664815	Argument	ip . s_addr		4664807	0					
ANR	4664816	MemberAccess	ip . s_addr		4664807	0					
ANR	4664817	Identifier	ip		4664807	0					
ANR	4664818	Identifier	s_addr		4664807	1					
ANR	4664819	Argument	htons ( port )		4664807	1					
ANR	4664820	CallExpression	htons ( port )		4664807	0					
ANR	4664821	Callee	htons		4664807	0					
ANR	4664822	Identifier	htons		4664807	0					
ANR	4664823	ArgumentList	port		4664807	1					
ANR	4664824	Argument	port		4664807	0					
ANR	4664825	Identifier	port		4664807	0					
ANR	4664826	Identifier	condor_sockaddr :: condor_sockaddr		4664807	1					
ANR	4664827	ParameterList	"in_addr ip , unsigned short port"		4664807	2					
ANR	4664828	Parameter	in_addr ip	30:33:584:593	4664807	0	True				
ANR	4664829	ParameterType	in_addr		4664807	0					
ANR	4664830	Identifier	ip		4664807	1					
ANR	4664831	Parameter	unsigned short port	30:45:596:614	4664807	1	True				
ANR	4664832	ParameterType	unsigned short		4664807	0					
ANR	4664833	Identifier	port		4664807	1					
ANR	4664834	CFGEntryNode	ENTRY		4664807		True				
ANR	4664835	CFGExitNode	EXIT		4664807		True				
ANR	4664836	Symbol	port		4664807						
ANR	4664837	Symbol	ip		4664807						
ANR	4664838	Symbol	htons		4664807						
ANR	4664839	Symbol	ip . s_addr		4664807						
ANR	4664840	Function	condor_sockaddr :: condor_sockaddr	35:0:653:901							
ANR	4664841	FunctionDef	"condor_sockaddr :: condor_sockaddr (const in6_addr & in6 , unsigned short port)"		4664840	0					
ANR	4664842	CompoundStatement		36:0:728:901	4664840	0					
ANR	4664843	ExpressionStatement	clear ( )	37:1:731:738	4664840	0	True				
ANR	4664844	CallExpression	clear ( )		4664840	0					
ANR	4664845	Callee	clear		4664840	0					
ANR	4664846	Identifier	clear		4664840	0					
ANR	4664847	ArgumentList			4664840	1					
ANR	4664848	ExpressionStatement	v6 . sin6_len = sizeof ( sockaddr_in6 )	39:1:780:814	4664840	1	True				
ANR	4664849	AssignmentExpression	v6 . sin6_len = sizeof ( sockaddr_in6 )		4664840	0		=			
ANR	4664850	MemberAccess	v6 . sin6_len		4664840	0					
ANR	4664851	Identifier	v6		4664840	0					
ANR	4664852	Identifier	sin6_len		4664840	1					
ANR	4664853	SizeofExpression	sizeof ( sockaddr_in6 )		4664840	1					
ANR	4664854	Sizeof	sizeof		4664840	0					
ANR	4664855	SizeofOperand	sockaddr_in6		4664840	1					
ANR	4664856	ExpressionStatement	v6 . sin6_family = AF_INET6	41:1:824:849	4664840	2	True				
ANR	4664857	AssignmentExpression	v6 . sin6_family = AF_INET6		4664840	0		=			
ANR	4664858	MemberAccess	v6 . sin6_family		4664840	0					
ANR	4664859	Identifier	v6		4664840	0					
ANR	4664860	Identifier	sin6_family		4664840	1					
ANR	4664861	Identifier	AF_INET6		4664840	1					
ANR	4664862	ExpressionStatement	v6 . sin6_port = htons ( port )	42:1:852:878	4664840	3	True				
ANR	4664863	AssignmentExpression	v6 . sin6_port = htons ( port )		4664840	0		=			
ANR	4664864	MemberAccess	v6 . sin6_port		4664840	0					
ANR	4664865	Identifier	v6		4664840	0					
ANR	4664866	Identifier	sin6_port		4664840	1					
ANR	4664867	CallExpression	htons ( port )		4664840	1					
ANR	4664868	Callee	htons		4664840	0					
ANR	4664869	Identifier	htons		4664840	0					
ANR	4664870	ArgumentList	port		4664840	1					
ANR	4664871	Argument	port		4664840	0					
ANR	4664872	Identifier	port		4664840	0					
ANR	4664873	ExpressionStatement	v6 . sin6_addr = in6	43:1:881:899	4664840	4	True				
ANR	4664874	AssignmentExpression	v6 . sin6_addr = in6		4664840	0		=			
ANR	4664875	MemberAccess	v6 . sin6_addr		4664840	0					
ANR	4664876	Identifier	v6		4664840	0					
ANR	4664877	Identifier	sin6_addr		4664840	1					
ANR	4664878	Identifier	in6		4664840	1					
ANR	4664879	Identifier	condor_sockaddr :: condor_sockaddr		4664840	1					
ANR	4664880	ParameterList	"const in6_addr & in6 , unsigned short port"		4664840	2					
ANR	4664881	Parameter	const in6_addr & in6	35:33:686:704	4664840	0	True				
ANR	4664882	ParameterType	const in6_addr &		4664840	0					
ANR	4664883	Identifier	in6		4664840	1					
ANR	4664884	Parameter	unsigned short port	35:54:707:725	4664840	1	True				
ANR	4664885	ParameterType	unsigned short		4664840	0					
ANR	4664886	Identifier	port		4664840	1					
ANR	4664887	CFGEntryNode	ENTRY		4664840		True				
ANR	4664888	CFGExitNode	EXIT		4664840		True				
ANR	4664889	Symbol	in6		4664840						
ANR	4664890	Symbol	v6		4664840						
ANR	4664891	Symbol	v6 . sin6_len		4664840						
ANR	4664892	Symbol	v6 . sin6_port		4664840						
ANR	4664893	Symbol	port		4664840						
ANR	4664894	Symbol	htons		4664840						
ANR	4664895	Symbol	v6 . sin6_family		4664840						
ANR	4664896	Symbol	v6 . sin6_addr		4664840						
ANR	4664897	Symbol	AF_INET6		4664840						
ANR	4664898	Function	condor_sockaddr :: condor_sockaddr	46:0:904:1197							
ANR	4664899	FunctionDef	condor_sockaddr :: condor_sockaddr (const sockaddr * sa)		4664898	0					
ANR	4664900	CompoundStatement		47:0:957:1197	4664898	0					
ANR	4664901	IfStatement	if ( sa -> sa_family == AF_INET )		4664898	0					
ANR	4664902	Condition	sa -> sa_family == AF_INET	48:5:964:987	4664898	0	True				
ANR	4664903	EqualityExpression	sa -> sa_family == AF_INET		4664898	0		==			
ANR	4664904	PtrMemberAccess	sa -> sa_family		4664898	0					
ANR	4664905	Identifier	sa		4664898	0					
ANR	4664906	Identifier	sa_family		4664898	1					
ANR	4664907	Identifier	AF_INET		4664898	1					
ANR	4664908	CompoundStatement		3:2:36:71	4664898	1					
ANR	4664909	IdentifierDeclStatement	sockaddr_in * sin = ( sockaddr_in * ) sa ;	49:2:994:1029	4664898	0	True				
ANR	4664910	IdentifierDecl	* sin = ( sockaddr_in * ) sa		4664898	0					
ANR	4664911	IdentifierDeclType	sockaddr_in *		4664898	0					
ANR	4664912	Identifier	sin		4664898	1					
ANR	4664913	AssignmentExpression	* sin = ( sockaddr_in * ) sa		4664898	2		=			
ANR	4664914	Identifier	sin		4664898	0					
ANR	4664915	CastExpression	( sockaddr_in * ) sa		4664898	1					
ANR	4664916	CastTarget	sockaddr_in *		4664898	0					
ANR	4664917	Identifier	sa		4664898	1					
ANR	4664918	ExpressionStatement	"init ( sin -> sin_addr . s_addr , sin -> sin_port )"	50:2:1033:1074	4664898	1	True				
ANR	4664919	CallExpression	"init ( sin -> sin_addr . s_addr , sin -> sin_port )"		4664898	0					
ANR	4664920	Callee	init		4664898	0					
ANR	4664921	Identifier	init		4664898	0					
ANR	4664922	ArgumentList	sin -> sin_addr . s_addr		4664898	1					
ANR	4664923	Argument	sin -> sin_addr . s_addr		4664898	0					
ANR	4664924	MemberAccess	sin -> sin_addr . s_addr		4664898	0					
ANR	4664925	PtrMemberAccess	sin -> sin_addr		4664898	0					
ANR	4664926	Identifier	sin		4664898	0					
ANR	4664927	Identifier	sin_addr		4664898	1					
ANR	4664928	Identifier	s_addr		4664898	1					
ANR	4664929	Argument	sin -> sin_port		4664898	1					
ANR	4664930	PtrMemberAccess	sin -> sin_port		4664898	0					
ANR	4664931	Identifier	sin		4664898	0					
ANR	4664932	Identifier	sin_port		4664898	1					
ANR	4664933	ElseStatement	else		4664898	0					
ANR	4664934	IfStatement	if ( sa -> sa_family == AF_INET6 )		4664898	0					
ANR	4664935	Condition	sa -> sa_family == AF_INET6	51:12:1088:1112	4664898	0	True				
ANR	4664936	EqualityExpression	sa -> sa_family == AF_INET6		4664898	0		==			
ANR	4664937	PtrMemberAccess	sa -> sa_family		4664898	0					
ANR	4664938	Identifier	sa		4664898	0					
ANR	4664939	Identifier	sa_family		4664898	1					
ANR	4664940	Identifier	AF_INET6		4664898	1					
ANR	4664941	CompoundStatement		6:2:161:199	4664898	1					
ANR	4664942	IdentifierDeclStatement	sockaddr_in6 * sin6 = ( sockaddr_in6 * ) sa ;	52:2:1119:1157	4664898	0	True				
ANR	4664943	IdentifierDecl	* sin6 = ( sockaddr_in6 * ) sa		4664898	0					
ANR	4664944	IdentifierDeclType	sockaddr_in6 *		4664898	0					
ANR	4664945	Identifier	sin6		4664898	1					
ANR	4664946	AssignmentExpression	* sin6 = ( sockaddr_in6 * ) sa		4664898	2		=			
ANR	4664947	Identifier	sin6		4664898	0					
ANR	4664948	CastExpression	( sockaddr_in6 * ) sa		4664898	1					
ANR	4664949	CastTarget	sockaddr_in6 *		4664898	0					
ANR	4664950	Identifier	sa		4664898	1					
ANR	4664951	ExpressionStatement	v6 = * sin6	53:2:1161:1171	4664898	1	True				
ANR	4664952	AssignmentExpression	v6 = * sin6		4664898	0		=			
ANR	4664953	Identifier	v6		4664898	0					
ANR	4664954	UnaryOperationExpression	* sin6		4664898	1					
ANR	4664955	UnaryOperator	*		4664898	0					
ANR	4664956	Identifier	sin6		4664898	1					
ANR	4664957	ElseStatement	else		4664898	0					
ANR	4664958	CompoundStatement		8:8:223:223	4664898	0					
ANR	4664959	ExpressionStatement	clear ( )	55:2:1185:1192	4664898	0	True				
ANR	4664960	CallExpression	clear ( )		4664898	0					
ANR	4664961	Callee	clear		4664898	0					
ANR	4664962	Identifier	clear		4664898	0					
ANR	4664963	ArgumentList			4664898	1					
ANR	4664964	Identifier	condor_sockaddr :: condor_sockaddr		4664898	1					
ANR	4664965	ParameterList	const sockaddr * sa		4664898	2					
ANR	4664966	Parameter	const sockaddr * sa	46:33:937:954	4664898	0	True				
ANR	4664967	ParameterType	const sockaddr *		4664898	0					
ANR	4664968	Identifier	sa		4664898	1					
ANR	4664969	CFGEntryNode	ENTRY		4664898		True				
ANR	4664970	CFGExitNode	EXIT		4664898		True				
ANR	4664971	Symbol	v6		4664898						
ANR	4664972	Symbol	sin -> sin_port		4664898						
ANR	4664973	Symbol	* sin		4664898						
ANR	4664974	Symbol	sa -> sa_family		4664898						
ANR	4664975	Symbol	AF_INET		4664898						
ANR	4664976	Symbol	sin6		4664898						
ANR	4664977	Symbol	sa		4664898						
ANR	4664978	Symbol	AF_INET6		4664898						
ANR	4664979	Symbol	* sin6		4664898						
ANR	4664980	Symbol	* sa		4664898						
ANR	4664981	Symbol	sin -> sin_addr		4664898						
ANR	4664982	Symbol	sin		4664898						
ANR	4664983	Symbol	sin -> sin_addr . s_addr		4664898						
ANR	4664984	Function	condor_sockaddr :: condor_sockaddr	59:0:1200:1304							
ANR	4664985	FunctionDef	condor_sockaddr :: condor_sockaddr (const sockaddr_in * sin)		4664984	0					
ANR	4664986	CompoundStatement		60:0:1258:1304	4664984	0					
ANR	4664987	ExpressionStatement	"init ( sin -> sin_addr . s_addr , sin -> sin_port )"	61:1:1261:1302	4664984	0	True				
ANR	4664988	CallExpression	"init ( sin -> sin_addr . s_addr , sin -> sin_port )"		4664984	0					
ANR	4664989	Callee	init		4664984	0					
ANR	4664990	Identifier	init		4664984	0					
ANR	4664991	ArgumentList	sin -> sin_addr . s_addr		4664984	1					
ANR	4664992	Argument	sin -> sin_addr . s_addr		4664984	0					
ANR	4664993	MemberAccess	sin -> sin_addr . s_addr		4664984	0					
ANR	4664994	PtrMemberAccess	sin -> sin_addr		4664984	0					
ANR	4664995	Identifier	sin		4664984	0					
ANR	4664996	Identifier	sin_addr		4664984	1					
ANR	4664997	Identifier	s_addr		4664984	1					
ANR	4664998	Argument	sin -> sin_port		4664984	1					
ANR	4664999	PtrMemberAccess	sin -> sin_port		4664984	0					
ANR	4665000	Identifier	sin		4664984	0					
ANR	4665001	Identifier	sin_port		4664984	1					
ANR	4665002	Identifier	condor_sockaddr :: condor_sockaddr		4664984	1					
ANR	4665003	ParameterList	const sockaddr_in * sin		4664984	2					
ANR	4665004	Parameter	const sockaddr_in * sin	59:33:1233:1254	4664984	0	True				
ANR	4665005	ParameterType	const sockaddr_in *		4664984	0					
ANR	4665006	Identifier	sin		4664984	1					
ANR	4665007	CFGEntryNode	ENTRY		4664984		True				
ANR	4665008	CFGExitNode	EXIT		4664984		True				
ANR	4665009	Symbol	sin -> sin_port		4664984						
ANR	4665010	Symbol	* sin		4664984						
ANR	4665011	Symbol	sin -> sin_addr		4664984						
ANR	4665012	Symbol	sin		4664984						
ANR	4665013	Symbol	sin -> sin_addr . s_addr		4664984						
ANR	4665014	Function	condor_sockaddr :: condor_sockaddr	64:0:1307:1381							
ANR	4665015	FunctionDef	condor_sockaddr :: condor_sockaddr (const sockaddr_in6 * sin6)		4665014	0					
ANR	4665016	CompoundStatement		65:0:1366:1381	4665014	0					
ANR	4665017	ExpressionStatement	v6 = * sin6	66:1:1369:1379	4665014	0	True				
ANR	4665018	AssignmentExpression	v6 = * sin6		4665014	0		=			
ANR	4665019	Identifier	v6		4665014	0					
ANR	4665020	UnaryOperationExpression	* sin6		4665014	1					
ANR	4665021	UnaryOperator	*		4665014	0					
ANR	4665022	Identifier	sin6		4665014	1					
ANR	4665023	Identifier	condor_sockaddr :: condor_sockaddr		4665014	1					
ANR	4665024	ParameterList	const sockaddr_in6 * sin6		4665014	2					
ANR	4665025	Parameter	const sockaddr_in6 * sin6	64:33:1340:1363	4665014	0	True				
ANR	4665026	ParameterType	const sockaddr_in6 *		4665014	0					
ANR	4665027	Identifier	sin6		4665014	1					
ANR	4665028	CFGEntryNode	ENTRY		4665014		True				
ANR	4665029	CFGExitNode	EXIT		4665014		True				
ANR	4665030	Symbol	* sin6		4665014						
ANR	4665031	Symbol	v6		4665014						
ANR	4665032	Symbol	sin6		4665014						
ANR	4665033	Function	condor_sockaddr :: to_sin	69:0:1384:1442							
ANR	4665034	FunctionDef	condor_sockaddr :: to_sin ()		4665033	0					
ANR	4665035	CompoundStatement		70:0:1428:1442	4665033	0					
ANR	4665036	ReturnStatement	return v4 ;	71:1:1431:1440	4665033	0	True				
ANR	4665037	Identifier	v4		4665033	0					
ANR	4665038	ReturnType	sockaddr_in		4665033	1					
ANR	4665039	Identifier	condor_sockaddr :: to_sin		4665033	2					
ANR	4665040	ParameterList			4665033	3					
ANR	4665041	CFGEntryNode	ENTRY		4665033		True				
ANR	4665042	CFGExitNode	EXIT		4665033		True				
ANR	4665043	Symbol	v4		4665033						
ANR	4665044	Function	condor_sockaddr :: to_sin6	74:0:1445:1505							
ANR	4665045	FunctionDef	condor_sockaddr :: to_sin6 ()		4665044	0					
ANR	4665046	CompoundStatement		75:0:1491:1505	4665044	0					
ANR	4665047	ReturnStatement	return v6 ;	76:1:1494:1503	4665044	0	True				
ANR	4665048	Identifier	v6		4665044	0					
ANR	4665049	ReturnType	sockaddr_in6		4665044	1					
ANR	4665050	Identifier	condor_sockaddr :: to_sin6		4665044	2					
ANR	4665051	ParameterList			4665044	3					
ANR	4665052	CFGEntryNode	ENTRY		4665044		True				
ANR	4665053	CFGExitNode	EXIT		4665044		True				
ANR	4665054	Symbol	v6		4665044						
ANR	4665055	Function	condor_sockaddr :: is_ipv4	79:0:1508:1582							
ANR	4665056	FunctionDef	condor_sockaddr :: is_ipv4 ()		4665055	0					
ANR	4665057	CompoundStatement		80:0:1546:1582	4665055	0					
ANR	4665058	ReturnStatement	return v4 . sin_family == AF_INET ;	81:1:1549:1580	4665055	0	True				
ANR	4665059	EqualityExpression	v4 . sin_family == AF_INET		4665055	0		==			
ANR	4665060	MemberAccess	v4 . sin_family		4665055	0					
ANR	4665061	Identifier	v4		4665055	0					
ANR	4665062	Identifier	sin_family		4665055	1					
ANR	4665063	Identifier	AF_INET		4665055	1					
ANR	4665064	ReturnType	bool		4665055	1					
ANR	4665065	Identifier	condor_sockaddr :: is_ipv4		4665055	2					
ANR	4665066	ParameterList			4665055	3					
ANR	4665067	CFGEntryNode	ENTRY		4665055		True				
ANR	4665068	CFGExitNode	EXIT		4665055		True				
ANR	4665069	Symbol	v4 . sin_family		4665055						
ANR	4665070	Symbol	AF_INET		4665055						
ANR	4665071	Symbol	v4		4665055						
ANR	4665072	Function	condor_sockaddr :: is_ipv6	84:0:1585:1661							
ANR	4665073	FunctionDef	condor_sockaddr :: is_ipv6 ()		4665072	0					
ANR	4665074	CompoundStatement		85:0:1623:1661	4665072	0					
ANR	4665075	ReturnStatement	return v6 . sin6_family == AF_INET6 ;	86:1:1626:1659	4665072	0	True				
ANR	4665076	EqualityExpression	v6 . sin6_family == AF_INET6		4665072	0		==			
ANR	4665077	MemberAccess	v6 . sin6_family		4665072	0					
ANR	4665078	Identifier	v6		4665072	0					
ANR	4665079	Identifier	sin6_family		4665072	1					
ANR	4665080	Identifier	AF_INET6		4665072	1					
ANR	4665081	ReturnType	bool		4665072	1					
ANR	4665082	Identifier	condor_sockaddr :: is_ipv6		4665072	2					
ANR	4665083	ParameterList			4665072	3					
ANR	4665084	CFGEntryNode	ENTRY		4665072		True				
ANR	4665085	CFGExitNode	EXIT		4665072		True				
ANR	4665086	Symbol	v6		4665072						
ANR	4665087	Symbol	v6 . sin6_family		4665072						
ANR	4665088	Symbol	AF_INET6		4665072						
ANR	4665089	Function	condor_sockaddr :: is_addr_any	92:0:1811:2016							
ANR	4665090	FunctionDef	condor_sockaddr :: is_addr_any ()		4665089	0					
ANR	4665091	CompoundStatement		93:0:1853:2016	4665089	0					
ANR	4665092	IfStatement	if ( is_ipv4 ( ) )		4665089	0					
ANR	4665093	Condition	is_ipv4 ( )	94:5:1860:1868	4665089	0	True				
ANR	4665094	CallExpression	is_ipv4 ( )		4665089	0					
ANR	4665095	Callee	is_ipv4		4665089	0					
ANR	4665096	Identifier	is_ipv4		4665089	0					
ANR	4665097	ArgumentList			4665089	1					
ANR	4665098	CompoundStatement		2:16:17:17	4665089	1					
ANR	4665099	ReturnStatement	return v4 . sin_addr . s_addr == ntohl ( INADDR_ANY ) ;	95:2:1875:1921	4665089	0	True				
ANR	4665100	EqualityExpression	v4 . sin_addr . s_addr == ntohl ( INADDR_ANY )		4665089	0		==			
ANR	4665101	MemberAccess	v4 . sin_addr . s_addr		4665089	0					
ANR	4665102	MemberAccess	v4 . sin_addr		4665089	0					
ANR	4665103	Identifier	v4		4665089	0					
ANR	4665104	Identifier	sin_addr		4665089	1					
ANR	4665105	Identifier	s_addr		4665089	1					
ANR	4665106	CallExpression	ntohl ( INADDR_ANY )		4665089	1					
ANR	4665107	Callee	ntohl		4665089	0					
ANR	4665108	Identifier	ntohl		4665089	0					
ANR	4665109	ArgumentList	INADDR_ANY		4665089	1					
ANR	4665110	Argument	INADDR_ANY		4665089	0					
ANR	4665111	Identifier	INADDR_ANY		4665089	0					
ANR	4665112	ElseStatement	else		4665089	0					
ANR	4665113	IfStatement	if ( is_ipv6 ( ) )		4665089	0					
ANR	4665114	Condition	is_ipv6 ( )	97:10:1936:1944	4665089	0	True				
ANR	4665115	CallExpression	is_ipv6 ( )		4665089	0					
ANR	4665116	Callee	is_ipv6		4665089	0					
ANR	4665117	Identifier	is_ipv6		4665089	0					
ANR	4665118	ArgumentList			4665089	1					
ANR	4665119	CompoundStatement		5:21:93:93	4665089	1					
ANR	4665120	ReturnStatement	return IN6_IS_ADDR_UNSPECIFIED ( & v6 . sin6_addr ) ;	98:2:1951:1996	4665089	0	True				
ANR	4665121	CallExpression	IN6_IS_ADDR_UNSPECIFIED ( & v6 . sin6_addr )		4665089	0					
ANR	4665122	Callee	IN6_IS_ADDR_UNSPECIFIED		4665089	0					
ANR	4665123	Identifier	IN6_IS_ADDR_UNSPECIFIED		4665089	0					
ANR	4665124	ArgumentList	& v6 . sin6_addr		4665089	1					
ANR	4665125	Argument	& v6 . sin6_addr		4665089	0					
ANR	4665126	UnaryOperationExpression	& v6 . sin6_addr		4665089	0					
ANR	4665127	UnaryOperator	&		4665089	0					
ANR	4665128	MemberAccess	v6 . sin6_addr		4665089	1					
ANR	4665129	Identifier	v6		4665089	0					
ANR	4665130	Identifier	sin6_addr		4665089	1					
ANR	4665131	ReturnStatement	return false ;	100:1:2002:2014	4665089	1	True				
ANR	4665132	Identifier	false		4665089	0					
ANR	4665133	ReturnType	bool		4665089	1					
ANR	4665134	Identifier	condor_sockaddr :: is_addr_any		4665089	2					
ANR	4665135	ParameterList			4665089	3					
ANR	4665136	CFGEntryNode	ENTRY		4665089		True				
ANR	4665137	CFGExitNode	EXIT		4665089		True				
ANR	4665138	Symbol	v6		4665089						
ANR	4665139	Symbol	v4 . sin_addr . s_addr		4665089						
ANR	4665140	Symbol	IN6_IS_ADDR_UNSPECIFIED		4665089						
ANR	4665141	Symbol	v4 . sin_addr		4665089						
ANR	4665142	Symbol	& v6 . sin6_addr		4665089						
ANR	4665143	Symbol	false		4665089						
ANR	4665144	Symbol	ntohl		4665089						
ANR	4665145	Symbol	INADDR_ANY		4665089						
ANR	4665146	Symbol	is_ipv6		4665089						
ANR	4665147	Symbol	& v6		4665089						
ANR	4665148	Symbol	is_ipv4		4665089						
ANR	4665149	Symbol	v4		4665089						
ANR	4665150	Function	condor_sockaddr :: set_addr_any	103:0:2019:2177							
ANR	4665151	FunctionDef	condor_sockaddr :: set_addr_any ()		4665150	0					
ANR	4665152	CompoundStatement		104:0:2056:2177	4665150	0					
ANR	4665153	IfStatement	if ( is_ipv4 ( ) )		4665150	0					
ANR	4665154	Condition	is_ipv4 ( )	105:5:2063:2071	4665150	0	True				
ANR	4665155	CallExpression	is_ipv4 ( )		4665150	0					
ANR	4665156	Callee	is_ipv4		4665150	0					
ANR	4665157	Identifier	is_ipv4		4665150	0					
ANR	4665158	ArgumentList			4665150	1					
ANR	4665159	CompoundStatement		2:16:17:17	4665150	1					
ANR	4665160	ExpressionStatement	v4 . sin_addr . s_addr = ntohl ( INADDR_ANY )	106:2:2078:2116	4665150	0	True				
ANR	4665161	AssignmentExpression	v4 . sin_addr . s_addr = ntohl ( INADDR_ANY )		4665150	0		=			
ANR	4665162	MemberAccess	v4 . sin_addr . s_addr		4665150	0					
ANR	4665163	MemberAccess	v4 . sin_addr		4665150	0					
ANR	4665164	Identifier	v4		4665150	0					
ANR	4665165	Identifier	sin_addr		4665150	1					
ANR	4665166	Identifier	s_addr		4665150	1					
ANR	4665167	CallExpression	ntohl ( INADDR_ANY )		4665150	1					
ANR	4665168	Callee	ntohl		4665150	0					
ANR	4665169	Identifier	ntohl		4665150	0					
ANR	4665170	ArgumentList	INADDR_ANY		4665150	1					
ANR	4665171	Argument	INADDR_ANY		4665150	0					
ANR	4665172	Identifier	INADDR_ANY		4665150	0					
ANR	4665173	ElseStatement	else		4665150	0					
ANR	4665174	IfStatement	if ( is_ipv6 ( ) )		4665150	0					
ANR	4665175	Condition	is_ipv6 ( )	108:10:2131:2139	4665150	0	True				
ANR	4665176	CallExpression	is_ipv6 ( )		4665150	0					
ANR	4665177	Callee	is_ipv6		4665150	0					
ANR	4665178	Identifier	is_ipv6		4665150	0					
ANR	4665179	ArgumentList			4665150	1					
ANR	4665180	CompoundStatement		5:21:85:85	4665150	1					
ANR	4665181	ExpressionStatement	v6 . sin6_addr = in6addr_any	109:2:2146:2172	4665150	0	True				
ANR	4665182	AssignmentExpression	v6 . sin6_addr = in6addr_any		4665150	0		=			
ANR	4665183	MemberAccess	v6 . sin6_addr		4665150	0					
ANR	4665184	Identifier	v6		4665150	0					
ANR	4665185	Identifier	sin6_addr		4665150	1					
ANR	4665186	Identifier	in6addr_any		4665150	1					
ANR	4665187	ReturnType	void		4665150	1					
ANR	4665188	Identifier	condor_sockaddr :: set_addr_any		4665150	2					
ANR	4665189	ParameterList			4665150	3					
ANR	4665190	CFGEntryNode	ENTRY		4665150		True				
ANR	4665191	CFGExitNode	EXIT		4665150		True				
ANR	4665192	Symbol	v6		4665150						
ANR	4665193	Symbol	v4 . sin_addr . s_addr		4665150						
ANR	4665194	Symbol	v4 . sin_addr		4665150						
ANR	4665195	Symbol	ntohl		4665150						
ANR	4665196	Symbol	INADDR_ANY		4665150						
ANR	4665197	Symbol	is_ipv6		4665150						
ANR	4665198	Symbol	in6addr_any		4665150						
ANR	4665199	Symbol	is_ipv4		4665150						
ANR	4665200	Symbol	v6 . sin6_addr		4665150						
ANR	4665201	Symbol	v4		4665150						
ANR	4665202	Function	condor_sockaddr :: is_loopback	113:0:2180:2364							
ANR	4665203	FunctionDef	condor_sockaddr :: is_loopback ()		4665202	0					
ANR	4665204	CompoundStatement		114:0:2222:2364	4665202	0					
ANR	4665205	IfStatement	if ( is_ipv4 ( ) )		4665202	0					
ANR	4665206	Condition	is_ipv4 ( )	115:5:2229:2237	4665202	0	True				
ANR	4665207	CallExpression	is_ipv4 ( )		4665202	0					
ANR	4665208	Callee	is_ipv4		4665202	0					
ANR	4665209	Identifier	is_ipv4		4665202	0					
ANR	4665210	ArgumentList			4665202	1					
ANR	4665211	CompoundStatement		2:16:17:17	4665202	1					
ANR	4665212	ReturnStatement	return ( ( v4 . sin_addr . s_addr & 0xFF ) == 0x7F ) ;	116:5:2247:2291	4665202	0	True				
ANR	4665213	EqualityExpression	( v4 . sin_addr . s_addr & 0xFF ) == 0x7F		4665202	0		==			
ANR	4665214	BitAndExpression	v4 . sin_addr . s_addr & 0xFF		4665202	0		&			
ANR	4665215	MemberAccess	v4 . sin_addr . s_addr		4665202	0					
ANR	4665216	MemberAccess	v4 . sin_addr		4665202	0					
ANR	4665217	Identifier	v4		4665202	0					
ANR	4665218	Identifier	sin_addr		4665202	1					
ANR	4665219	Identifier	s_addr		4665202	1					
ANR	4665220	PrimaryExpression	0xFF		4665202	1					
ANR	4665221	PrimaryExpression	0x7F		4665202	1					
ANR	4665222	ElseStatement	else		4665202	0					
ANR	4665223	CompoundStatement		5:6:88:88	4665202	0					
ANR	4665224	ReturnStatement	return IN6_IS_ADDR_LOOPBACK ( & v6 . sin6_addr ) ;	119:2:2315:2359	4665202	0	True				
ANR	4665225	CallExpression	IN6_IS_ADDR_LOOPBACK ( & v6 . sin6_addr )		4665202	0					
ANR	4665226	Callee	IN6_IS_ADDR_LOOPBACK		4665202	0					
ANR	4665227	Identifier	IN6_IS_ADDR_LOOPBACK		4665202	0					
ANR	4665228	ArgumentList	& v6 . sin6_addr		4665202	1					
ANR	4665229	Argument	& v6 . sin6_addr		4665202	0					
ANR	4665230	UnaryOperationExpression	& v6 . sin6_addr		4665202	0					
ANR	4665231	UnaryOperator	&		4665202	0					
ANR	4665232	MemberAccess	v6 . sin6_addr		4665202	1					
ANR	4665233	Identifier	v6		4665202	0					
ANR	4665234	Identifier	sin6_addr		4665202	1					
ANR	4665235	ReturnType	bool		4665202	1					
ANR	4665236	Identifier	condor_sockaddr :: is_loopback		4665202	2					
ANR	4665237	ParameterList			4665202	3					
ANR	4665238	CFGEntryNode	ENTRY		4665202		True				
ANR	4665239	CFGExitNode	EXIT		4665202		True				
ANR	4665240	Symbol	v6		4665202						
ANR	4665241	Symbol	IN6_IS_ADDR_LOOPBACK		4665202						
ANR	4665242	Symbol	v4 . sin_addr . s_addr		4665202						
ANR	4665243	Symbol	v4 . sin_addr		4665202						
ANR	4665244	Symbol	& v6 . sin6_addr		4665202						
ANR	4665245	Symbol	& v6		4665202						
ANR	4665246	Symbol	is_ipv4		4665202						
ANR	4665247	Symbol	v4		4665202						
ANR	4665248	Function	condor_sockaddr :: set_loopback	123:0:2367:2520							
ANR	4665249	FunctionDef	condor_sockaddr :: set_loopback ()		4665248	0					
ANR	4665250	CompoundStatement		124:0:2404:2520	4665248	0					
ANR	4665251	IfStatement	if ( is_ipv4 ( ) )		4665248	0					
ANR	4665252	Condition	is_ipv4 ( )	125:5:2411:2419	4665248	0	True				
ANR	4665253	CallExpression	is_ipv4 ( )		4665248	0					
ANR	4665254	Callee	is_ipv4		4665248	0					
ANR	4665255	Identifier	is_ipv4		4665248	0					
ANR	4665256	ArgumentList			4665248	1					
ANR	4665257	CompoundStatement		2:16:17:17	4665248	1					
ANR	4665258	ExpressionStatement	v4 . sin_addr . s_addr = ntohl ( INADDR_LOOPBACK )	126:2:2426:2469	4665248	0	True				
ANR	4665259	AssignmentExpression	v4 . sin_addr . s_addr = ntohl ( INADDR_LOOPBACK )		4665248	0		=			
ANR	4665260	MemberAccess	v4 . sin_addr . s_addr		4665248	0					
ANR	4665261	MemberAccess	v4 . sin_addr		4665248	0					
ANR	4665262	Identifier	v4		4665248	0					
ANR	4665263	Identifier	sin_addr		4665248	1					
ANR	4665264	Identifier	s_addr		4665248	1					
ANR	4665265	CallExpression	ntohl ( INADDR_LOOPBACK )		4665248	1					
ANR	4665266	Callee	ntohl		4665248	0					
ANR	4665267	Identifier	ntohl		4665248	0					
ANR	4665268	ArgumentList	INADDR_LOOPBACK		4665248	1					
ANR	4665269	Argument	INADDR_LOOPBACK		4665248	0					
ANR	4665270	Identifier	INADDR_LOOPBACK		4665248	0					
ANR	4665271	ElseStatement	else		4665248	0					
ANR	4665272	CompoundStatement		5:6:75:75	4665248	0					
ANR	4665273	ExpressionStatement	v6 . sin6_addr = in6addr_loopback	129:2:2484:2515	4665248	0	True				
ANR	4665274	AssignmentExpression	v6 . sin6_addr = in6addr_loopback		4665248	0		=			
ANR	4665275	MemberAccess	v6 . sin6_addr		4665248	0					
ANR	4665276	Identifier	v6		4665248	0					
ANR	4665277	Identifier	sin6_addr		4665248	1					
ANR	4665278	Identifier	in6addr_loopback		4665248	1					
ANR	4665279	ReturnType	void		4665248	1					
ANR	4665280	Identifier	condor_sockaddr :: set_loopback		4665248	2					
ANR	4665281	ParameterList			4665248	3					
ANR	4665282	CFGEntryNode	ENTRY		4665248		True				
ANR	4665283	CFGExitNode	EXIT		4665248		True				
ANR	4665284	Symbol	v6		4665248						
ANR	4665285	Symbol	v4 . sin_addr . s_addr		4665248						
ANR	4665286	Symbol	v4 . sin_addr		4665248						
ANR	4665287	Symbol	ntohl		4665248						
ANR	4665288	Symbol	in6addr_loopback		4665248						
ANR	4665289	Symbol	INADDR_LOOPBACK		4665248						
ANR	4665290	Symbol	is_ipv4		4665248						
ANR	4665291	Symbol	v6 . sin6_addr		4665248						
ANR	4665292	Symbol	v4		4665248						
ANR	4665293	Function	condor_sockaddr :: get_port	133:0:2523:2665							
ANR	4665294	FunctionDef	condor_sockaddr :: get_port ()		4665293	0					
ANR	4665295	CompoundStatement		134:0:2572:2665	4665293	0					
ANR	4665296	IfStatement	if ( is_ipv4 ( ) )		4665293	0					
ANR	4665297	Condition	is_ipv4 ( )	135:5:2579:2587	4665293	0	True				
ANR	4665298	CallExpression	is_ipv4 ( )		4665293	0					
ANR	4665299	Callee	is_ipv4		4665293	0					
ANR	4665300	Identifier	is_ipv4		4665293	0					
ANR	4665301	ArgumentList			4665293	1					
ANR	4665302	CompoundStatement		2:16:17:17	4665293	1					
ANR	4665303	ReturnStatement	return ntohs ( v4 . sin_port ) ;	136:2:2594:2619	4665293	0	True				
ANR	4665304	CallExpression	ntohs ( v4 . sin_port )		4665293	0					
ANR	4665305	Callee	ntohs		4665293	0					
ANR	4665306	Identifier	ntohs		4665293	0					
ANR	4665307	ArgumentList	v4 . sin_port		4665293	1					
ANR	4665308	Argument	v4 . sin_port		4665293	0					
ANR	4665309	MemberAccess	v4 . sin_port		4665293	0					
ANR	4665310	Identifier	v4		4665293	0					
ANR	4665311	Identifier	sin_port		4665293	1					
ANR	4665312	ElseStatement	else		4665293	0					
ANR	4665313	CompoundStatement		5:6:57:57	4665293	0					
ANR	4665314	ReturnStatement	return ntohs ( v6 . sin6_port ) ;	139:2:2634:2660	4665293	0	True				
ANR	4665315	CallExpression	ntohs ( v6 . sin6_port )		4665293	0					
ANR	4665316	Callee	ntohs		4665293	0					
ANR	4665317	Identifier	ntohs		4665293	0					
ANR	4665318	ArgumentList	v6 . sin6_port		4665293	1					
ANR	4665319	Argument	v6 . sin6_port		4665293	0					
ANR	4665320	MemberAccess	v6 . sin6_port		4665293	0					
ANR	4665321	Identifier	v6		4665293	0					
ANR	4665322	Identifier	sin6_port		4665293	1					
ANR	4665323	ReturnType	unsigned short		4665293	1					
ANR	4665324	Identifier	condor_sockaddr :: get_port		4665293	2					
ANR	4665325	ParameterList			4665293	3					
ANR	4665326	CFGEntryNode	ENTRY		4665293		True				
ANR	4665327	CFGExitNode	EXIT		4665293		True				
ANR	4665328	Symbol	ntohs		4665293						
ANR	4665329	Symbol	v6		4665293						
ANR	4665330	Symbol	v6 . sin6_port		4665293						
ANR	4665331	Symbol	v4 . sin_port		4665293						
ANR	4665332	Symbol	is_ipv4		4665293						
ANR	4665333	Symbol	v4		4665293						
ANR	4665334	Function	condor_sockaddr :: set_port	143:0:2668:2813							
ANR	4665335	FunctionDef	condor_sockaddr :: set_port (unsigned short port)		4665334	0					
ANR	4665336	CompoundStatement		144:0:2720:2813	4665334	0					
ANR	4665337	IfStatement	if ( is_ipv4 ( ) )		4665334	0					
ANR	4665338	Condition	is_ipv4 ( )	145:5:2727:2735	4665334	0	True				
ANR	4665339	CallExpression	is_ipv4 ( )		4665334	0					
ANR	4665340	Callee	is_ipv4		4665334	0					
ANR	4665341	Identifier	is_ipv4		4665334	0					
ANR	4665342	ArgumentList			4665334	1					
ANR	4665343	CompoundStatement		2:16:17:17	4665334	1					
ANR	4665344	ExpressionStatement	v4 . sin_port = htons ( port )	146:2:2742:2767	4665334	0	True				
ANR	4665345	AssignmentExpression	v4 . sin_port = htons ( port )		4665334	0		=			
ANR	4665346	MemberAccess	v4 . sin_port		4665334	0					
ANR	4665347	Identifier	v4		4665334	0					
ANR	4665348	Identifier	sin_port		4665334	1					
ANR	4665349	CallExpression	htons ( port )		4665334	1					
ANR	4665350	Callee	htons		4665334	0					
ANR	4665351	Identifier	htons		4665334	0					
ANR	4665352	ArgumentList	port		4665334	1					
ANR	4665353	Argument	port		4665334	0					
ANR	4665354	Identifier	port		4665334	0					
ANR	4665355	ElseStatement	else		4665334	0					
ANR	4665356	CompoundStatement		5:6:57:57	4665334	0					
ANR	4665357	ExpressionStatement	v6 . sin6_port = htons ( port )	149:2:2782:2808	4665334	0	True				
ANR	4665358	AssignmentExpression	v6 . sin6_port = htons ( port )		4665334	0		=			
ANR	4665359	MemberAccess	v6 . sin6_port		4665334	0					
ANR	4665360	Identifier	v6		4665334	0					
ANR	4665361	Identifier	sin6_port		4665334	1					
ANR	4665362	CallExpression	htons ( port )		4665334	1					
ANR	4665363	Callee	htons		4665334	0					
ANR	4665364	Identifier	htons		4665334	0					
ANR	4665365	ArgumentList	port		4665334	1					
ANR	4665366	Argument	port		4665334	0					
ANR	4665367	Identifier	port		4665334	0					
ANR	4665368	ReturnType	void		4665334	1					
ANR	4665369	Identifier	condor_sockaddr :: set_port		4665334	2					
ANR	4665370	ParameterList	unsigned short port		4665334	3					
ANR	4665371	Parameter	unsigned short port	143:31:2699:2717	4665334	0	True				
ANR	4665372	ParameterType	unsigned short		4665334	0					
ANR	4665373	Identifier	port		4665334	1					
ANR	4665374	CFGEntryNode	ENTRY		4665334		True				
ANR	4665375	CFGExitNode	EXIT		4665334		True				
ANR	4665376	Symbol	v6		4665334						
ANR	4665377	Symbol	v6 . sin6_port		4665334						
ANR	4665378	Symbol	port		4665334						
ANR	4665379	Symbol	v4 . sin_port		4665334						
ANR	4665380	Symbol	htons		4665334						
ANR	4665381	Symbol	is_ipv4		4665334						
ANR	4665382	Symbol	v4		4665334						
ANR	4665383	Function	condor_sockaddr :: to_sinful	153:0:2816:3198							
ANR	4665384	FunctionDef	condor_sockaddr :: to_sinful ()		4665383	0					
ANR	4665385	CompoundStatement		154:0:2860:3198	4665383	0					
ANR	4665386	IdentifierDeclStatement	MyString ret ;	155:1:2863:2875	4665383	0	True				
ANR	4665387	IdentifierDecl	ret		4665383	0					
ANR	4665388	IdentifierDeclType	MyString		4665383	0					
ANR	4665389	Identifier	ret		4665383	1					
ANR	4665390	IdentifierDeclStatement	char tmp [ IP_STRING_BUF_SIZE ] ;	156:1:2878:2906	4665383	1	True				
ANR	4665391	IdentifierDecl	tmp [ IP_STRING_BUF_SIZE ]		4665383	0					
ANR	4665392	IdentifierDeclType	char [ IP_STRING_BUF_SIZE ]		4665383	0					
ANR	4665393	Identifier	tmp		4665383	1					
ANR	4665394	Identifier	IP_STRING_BUF_SIZE		4665383	2					
ANR	4665395	IfStatement	"if ( ! to_ip_string_ex ( tmp , IP_STRING_BUF_SIZE ) )"		4665383	2					
ANR	4665396	Condition	"! to_ip_string_ex ( tmp , IP_STRING_BUF_SIZE )"	158:6:2973:3013	4665383	0	True				
ANR	4665397	UnaryOperationExpression	"! to_ip_string_ex ( tmp , IP_STRING_BUF_SIZE )"		4665383	0					
ANR	4665398	UnaryOperator	!		4665383	0					
ANR	4665399	CallExpression	"to_ip_string_ex ( tmp , IP_STRING_BUF_SIZE )"		4665383	1					
ANR	4665400	Callee	to_ip_string_ex		4665383	0					
ANR	4665401	Identifier	to_ip_string_ex		4665383	0					
ANR	4665402	ArgumentList	tmp		4665383	1					
ANR	4665403	Argument	tmp		4665383	0					
ANR	4665404	Identifier	tmp		4665383	0					
ANR	4665405	Argument	IP_STRING_BUF_SIZE		4665383	1					
ANR	4665406	Identifier	IP_STRING_BUF_SIZE		4665383	0					
ANR	4665407	ReturnStatement	return ret ;	159:2:3019:3029	4665383	1	True				
ANR	4665408	Identifier	ret		4665383	0					
ANR	4665409	IfStatement	if ( is_ipv4 ( ) )		4665383	3					
ANR	4665410	Condition	is_ipv4 ( )	161:5:3037:3045	4665383	0	True				
ANR	4665411	CallExpression	is_ipv4 ( )		4665383	0					
ANR	4665412	Callee	is_ipv4		4665383	0					
ANR	4665413	Identifier	is_ipv4		4665383	0					
ANR	4665414	ArgumentList			4665383	1					
ANR	4665415	CompoundStatement		8:16:187:187	4665383	1					
ANR	4665416	ExpressionStatement	"ret . sprintf ( ""<%s:%d>"" , tmp , ntohs ( v4 . sin_port ) )"	162:2:3052:3099	4665383	0	True				
ANR	4665417	CallExpression	"ret . sprintf ( ""<%s:%d>"" , tmp , ntohs ( v4 . sin_port ) )"		4665383	0					
ANR	4665418	Callee	ret . sprintf		4665383	0					
ANR	4665419	MemberAccess	ret . sprintf		4665383	0					
ANR	4665420	Identifier	ret		4665383	0					
ANR	4665421	Identifier	sprintf		4665383	1					
ANR	4665422	ArgumentList	"""<%s:%d>"""		4665383	1					
ANR	4665423	Argument	"""<%s:%d>"""		4665383	0					
ANR	4665424	PrimaryExpression	"""<%s:%d>"""		4665383	0					
ANR	4665425	Argument	tmp		4665383	1					
ANR	4665426	Identifier	tmp		4665383	0					
ANR	4665427	Argument	ntohs ( v4 . sin_port )		4665383	2					
ANR	4665428	CallExpression	ntohs ( v4 . sin_port )		4665383	0					
ANR	4665429	Callee	ntohs		4665383	0					
ANR	4665430	Identifier	ntohs		4665383	0					
ANR	4665431	ArgumentList	v4 . sin_port		4665383	1					
ANR	4665432	Argument	v4 . sin_port		4665383	0					
ANR	4665433	MemberAccess	v4 . sin_port		4665383	0					
ANR	4665434	Identifier	v4		4665383	0					
ANR	4665435	Identifier	sin_port		4665383	1					
ANR	4665436	ElseStatement	else		4665383	0					
ANR	4665437	IfStatement	if ( is_ipv6 ( ) )		4665383	0					
ANR	4665438	Condition	is_ipv6 ( )	164:10:3114:3122	4665383	0	True				
ANR	4665439	CallExpression	is_ipv6 ( )		4665383	0					
ANR	4665440	Callee	is_ipv6		4665383	0					
ANR	4665441	Identifier	is_ipv6		4665383	0					
ANR	4665442	ArgumentList			4665383	1					
ANR	4665443	CompoundStatement		11:21:264:264	4665383	1					
ANR	4665444	ExpressionStatement	"ret . sprintf ( ""<[%s]:%d>"" , tmp , ntohs ( v6 . sin6_port ) )"	165:2:3129:3179	4665383	0	True				
ANR	4665445	CallExpression	"ret . sprintf ( ""<[%s]:%d>"" , tmp , ntohs ( v6 . sin6_port ) )"		4665383	0					
ANR	4665446	Callee	ret . sprintf		4665383	0					
ANR	4665447	MemberAccess	ret . sprintf		4665383	0					
ANR	4665448	Identifier	ret		4665383	0					
ANR	4665449	Identifier	sprintf		4665383	1					
ANR	4665450	ArgumentList	"""<[%s]:%d>"""		4665383	1					
ANR	4665451	Argument	"""<[%s]:%d>"""		4665383	0					
ANR	4665452	PrimaryExpression	"""<[%s]:%d>"""		4665383	0					
ANR	4665453	Argument	tmp		4665383	1					
ANR	4665454	Identifier	tmp		4665383	0					
ANR	4665455	Argument	ntohs ( v6 . sin6_port )		4665383	2					
ANR	4665456	CallExpression	ntohs ( v6 . sin6_port )		4665383	0					
ANR	4665457	Callee	ntohs		4665383	0					
ANR	4665458	Identifier	ntohs		4665383	0					
ANR	4665459	ArgumentList	v6 . sin6_port		4665383	1					
ANR	4665460	Argument	v6 . sin6_port		4665383	0					
ANR	4665461	MemberAccess	v6 . sin6_port		4665383	0					
ANR	4665462	Identifier	v6		4665383	0					
ANR	4665463	Identifier	sin6_port		4665383	1					
ANR	4665464	ReturnStatement	return ret ;	168:1:3186:3196	4665383	4	True				
ANR	4665465	Identifier	ret		4665383	0					
ANR	4665466	ReturnType	MyString		4665383	1					
ANR	4665467	Identifier	condor_sockaddr :: to_sinful		4665383	2					
ANR	4665468	ParameterList			4665383	3					
ANR	4665469	CFGEntryNode	ENTRY		4665383		True				
ANR	4665470	CFGExitNode	EXIT		4665383		True				
ANR	4665471	Symbol	ret		4665383						
ANR	4665472	Symbol	ntohs		4665383						
ANR	4665473	Symbol	v6		4665383						
ANR	4665474	Symbol	IP_STRING_BUF_SIZE		4665383						
ANR	4665475	Symbol	to_ip_string_ex		4665383						
ANR	4665476	Symbol	v6 . sin6_port		4665383						
ANR	4665477	Symbol	tmp		4665383						
ANR	4665478	Symbol	v4 . sin_port		4665383						
ANR	4665479	Symbol	is_ipv6		4665383						
ANR	4665480	Symbol	is_ipv4		4665383						
ANR	4665481	Symbol	v4		4665383						
ANR	4665482	Function	condor_sockaddr :: to_sinful	171:0:3201:3604							
ANR	4665483	FunctionDef	"condor_sockaddr :: to_sinful (char * buf , int len)"		4665482	0					
ANR	4665484	CompoundStatement		172:0:3266:3604	4665482	0					
ANR	4665485	IdentifierDeclStatement	char tmp [ IP_STRING_BUF_SIZE ] ;	173:1:3269:3297	4665482	0	True				
ANR	4665486	IdentifierDecl	tmp [ IP_STRING_BUF_SIZE ]		4665482	0					
ANR	4665487	IdentifierDeclType	char [ IP_STRING_BUF_SIZE ]		4665482	0					
ANR	4665488	Identifier	tmp		4665482	1					
ANR	4665489	Identifier	IP_STRING_BUF_SIZE		4665482	2					
ANR	4665490	IfStatement	"if ( ! to_ip_string_ex ( tmp , IP_STRING_BUF_SIZE ) )"		4665482	1					
ANR	4665491	Condition	"! to_ip_string_ex ( tmp , IP_STRING_BUF_SIZE )"	175:6:3364:3404	4665482	0	True				
ANR	4665492	UnaryOperationExpression	"! to_ip_string_ex ( tmp , IP_STRING_BUF_SIZE )"		4665482	0					
ANR	4665493	UnaryOperator	!		4665482	0					
ANR	4665494	CallExpression	"to_ip_string_ex ( tmp , IP_STRING_BUF_SIZE )"		4665482	1					
ANR	4665495	Callee	to_ip_string_ex		4665482	0					
ANR	4665496	Identifier	to_ip_string_ex		4665482	0					
ANR	4665497	ArgumentList	tmp		4665482	1					
ANR	4665498	Argument	tmp		4665482	0					
ANR	4665499	Identifier	tmp		4665482	0					
ANR	4665500	Argument	IP_STRING_BUF_SIZE		4665482	1					
ANR	4665501	Identifier	IP_STRING_BUF_SIZE		4665482	0					
ANR	4665502	ReturnStatement	return NULL ;	176:2:3410:3421	4665482	1	True				
ANR	4665503	Identifier	NULL		4665482	0					
ANR	4665504	IfStatement	if ( is_ipv4 ( ) )		4665482	2					
ANR	4665505	Condition	is_ipv4 ( )	178:5:3429:3437	4665482	0	True				
ANR	4665506	CallExpression	is_ipv4 ( )		4665482	0					
ANR	4665507	Callee	is_ipv4		4665482	0					
ANR	4665508	Identifier	is_ipv4		4665482	0					
ANR	4665509	ArgumentList			4665482	1					
ANR	4665510	CompoundStatement		7:16:173:173	4665482	1					
ANR	4665511	ExpressionStatement	"snprintf ( buf , len , ""<%s:%d>"" , tmp , ntohs ( v4 . sin_port ) )"	179:2:3444:3498	4665482	0	True				
ANR	4665512	CallExpression	"snprintf ( buf , len , ""<%s:%d>"" , tmp , ntohs ( v4 . sin_port ) )"		4665482	0					
ANR	4665513	Callee	snprintf		4665482	0					
ANR	4665514	Identifier	snprintf		4665482	0					
ANR	4665515	ArgumentList	buf		4665482	1					
ANR	4665516	Argument	buf		4665482	0					
ANR	4665517	Identifier	buf		4665482	0					
ANR	4665518	Argument	len		4665482	1					
ANR	4665519	Identifier	len		4665482	0					
ANR	4665520	Argument	"""<%s:%d>"""		4665482	2					
ANR	4665521	PrimaryExpression	"""<%s:%d>"""		4665482	0					
ANR	4665522	Argument	tmp		4665482	3					
ANR	4665523	Identifier	tmp		4665482	0					
ANR	4665524	Argument	ntohs ( v4 . sin_port )		4665482	4					
ANR	4665525	CallExpression	ntohs ( v4 . sin_port )		4665482	0					
ANR	4665526	Callee	ntohs		4665482	0					
ANR	4665527	Identifier	ntohs		4665482	0					
ANR	4665528	ArgumentList	v4 . sin_port		4665482	1					
ANR	4665529	Argument	v4 . sin_port		4665482	0					
ANR	4665530	MemberAccess	v4 . sin_port		4665482	0					
ANR	4665531	Identifier	v4		4665482	0					
ANR	4665532	Identifier	sin_port		4665482	1					
ANR	4665533	ElseStatement	else		4665482	0					
ANR	4665534	IfStatement	if ( is_ipv6 ( ) )		4665482	0					
ANR	4665535	Condition	is_ipv6 ( )	181:10:3513:3521	4665482	0	True				
ANR	4665536	CallExpression	is_ipv6 ( )		4665482	0					
ANR	4665537	Callee	is_ipv6		4665482	0					
ANR	4665538	Identifier	is_ipv6		4665482	0					
ANR	4665539	ArgumentList			4665482	1					
ANR	4665540	CompoundStatement		10:21:257:257	4665482	1					
ANR	4665541	ExpressionStatement	"snprintf ( buf , len , ""<[%s]:%d>"" , tmp , ntohs ( v6 . sin6_port ) )"	182:2:3528:3585	4665482	0	True				
ANR	4665542	CallExpression	"snprintf ( buf , len , ""<[%s]:%d>"" , tmp , ntohs ( v6 . sin6_port ) )"		4665482	0					
ANR	4665543	Callee	snprintf		4665482	0					
ANR	4665544	Identifier	snprintf		4665482	0					
ANR	4665545	ArgumentList	buf		4665482	1					
ANR	4665546	Argument	buf		4665482	0					
ANR	4665547	Identifier	buf		4665482	0					
ANR	4665548	Argument	len		4665482	1					
ANR	4665549	Identifier	len		4665482	0					
ANR	4665550	Argument	"""<[%s]:%d>"""		4665482	2					
ANR	4665551	PrimaryExpression	"""<[%s]:%d>"""		4665482	0					
ANR	4665552	Argument	tmp		4665482	3					
ANR	4665553	Identifier	tmp		4665482	0					
ANR	4665554	Argument	ntohs ( v6 . sin6_port )		4665482	4					
ANR	4665555	CallExpression	ntohs ( v6 . sin6_port )		4665482	0					
ANR	4665556	Callee	ntohs		4665482	0					
ANR	4665557	Identifier	ntohs		4665482	0					
ANR	4665558	ArgumentList	v6 . sin6_port		4665482	1					
ANR	4665559	Argument	v6 . sin6_port		4665482	0					
ANR	4665560	MemberAccess	v6 . sin6_port		4665482	0					
ANR	4665561	Identifier	v6		4665482	0					
ANR	4665562	Identifier	sin6_port		4665482	1					
ANR	4665563	ReturnStatement	return buf ;	185:1:3592:3602	4665482	3	True				
ANR	4665564	Identifier	buf		4665482	0					
ANR	4665565	ReturnType	const char *		4665482	1					
ANR	4665566	Identifier	condor_sockaddr :: to_sinful		4665482	2					
ANR	4665567	ParameterList	"char * buf , int len"		4665482	3					
ANR	4665568	Parameter	char * buf	171:39:3240:3248	4665482	0	True				
ANR	4665569	ParameterType	char *		4665482	0					
ANR	4665570	Identifier	buf		4665482	1					
ANR	4665571	Parameter	int len	171:50:3251:3257	4665482	1	True				
ANR	4665572	ParameterType	int		4665482	0					
ANR	4665573	Identifier	len		4665482	1					
ANR	4665574	CFGEntryNode	ENTRY		4665482		True				
ANR	4665575	CFGExitNode	EXIT		4665482		True				
ANR	4665576	Symbol	v6		4665482						
ANR	4665577	Symbol	IP_STRING_BUF_SIZE		4665482						
ANR	4665578	Symbol	NULL		4665482						
ANR	4665579	Symbol	v6 . sin6_port		4665482						
ANR	4665580	Symbol	is_ipv6		4665482						
ANR	4665581	Symbol	is_ipv4		4665482						
ANR	4665582	Symbol	ntohs		4665482						
ANR	4665583	Symbol	buf		4665482						
ANR	4665584	Symbol	len		4665482						
ANR	4665585	Symbol	to_ip_string_ex		4665482						
ANR	4665586	Symbol	tmp		4665482						
ANR	4665587	Symbol	v4 . sin_port		4665482						
ANR	4665588	Symbol	v4		4665482						
ANR	4665589	Function	condor_sockaddr :: from_sinful	188:0:3607:3704							
ANR	4665590	FunctionDef	condor_sockaddr :: from_sinful (const MyString & sinful)		4665589	0					
ANR	4665591	CompoundStatement		188:58:3665:3704	4665589	0					
ANR	4665592	ReturnStatement	return from_sinful ( sinful . Value ( ) ) ;	189:1:3668:3702	4665589	0	True				
ANR	4665593	CallExpression	from_sinful ( sinful . Value ( ) )		4665589	0					
ANR	4665594	Callee	from_sinful		4665589	0					
ANR	4665595	Identifier	from_sinful		4665589	0					
ANR	4665596	ArgumentList	sinful . Value ( )		4665589	1					
ANR	4665597	Argument	sinful . Value ( )		4665589	0					
ANR	4665598	CallExpression	sinful . Value ( )		4665589	0					
ANR	4665599	Callee	sinful . Value		4665589	0					
ANR	4665600	MemberAccess	sinful . Value		4665589	0					
ANR	4665601	Identifier	sinful		4665589	0					
ANR	4665602	Identifier	Value		4665589	1					
ANR	4665603	ArgumentList			4665589	1					
ANR	4665604	ReturnType	bool		4665589	1					
ANR	4665605	Identifier	condor_sockaddr :: from_sinful		4665589	2					
ANR	4665606	ParameterList	const MyString & sinful		4665589	3					
ANR	4665607	Parameter	const MyString & sinful	188:34:3641:3662	4665589	0	True				
ANR	4665608	ParameterType	const MyString &		4665589	0					
ANR	4665609	Identifier	sinful		4665589	1					
ANR	4665610	CFGEntryNode	ENTRY		4665589		True				
ANR	4665611	CFGExitNode	EXIT		4665589		True				
ANR	4665612	Symbol	from_sinful		4665589						
ANR	4665613	Symbol	sinful . Value		4665589						
ANR	4665614	Symbol	sinful		4665589						
ANR	4665615	Function	condor_sockaddr :: from_sinful	193:0:3769:5595							
ANR	4665616	FunctionDef	condor_sockaddr :: from_sinful (const char * sinful)		4665615	0					
ANR	4665617	CompoundStatement		194:0:3823:5595	4665615	0					
ANR	4665618	IdentifierDeclStatement	const char * addr = sinful ;	195:1:3826:3851	4665615	0	True				
ANR	4665619	IdentifierDecl	* addr = sinful		4665615	0					
ANR	4665620	IdentifierDeclType	const char *		4665615	0					
ANR	4665621	Identifier	addr		4665615	1					
ANR	4665622	AssignmentExpression	* addr = sinful		4665615	2		=			
ANR	4665623	Identifier	sinful		4665615	0					
ANR	4665624	Identifier	sinful		4665615	1					
ANR	4665625	IdentifierDeclStatement	bool ipv6 = false ;	196:1:3854:3871	4665615	1	True				
ANR	4665626	IdentifierDecl	ipv6 = false		4665615	0					
ANR	4665627	IdentifierDeclType	bool		4665615	0					
ANR	4665628	Identifier	ipv6		4665615	1					
ANR	4665629	AssignmentExpression	ipv6 = false		4665615	2		=			
ANR	4665630	Identifier	false		4665615	0					
ANR	4665631	Identifier	false		4665615	1					
ANR	4665632	IdentifierDeclStatement	const char * addr_begin = NULL ;	197:1:3874:3903	4665615	2	True				
ANR	4665633	IdentifierDecl	* addr_begin = NULL		4665615	0					
ANR	4665634	IdentifierDeclType	const char *		4665615	0					
ANR	4665635	Identifier	addr_begin		4665615	1					
ANR	4665636	AssignmentExpression	* addr_begin = NULL		4665615	2		=			
ANR	4665637	Identifier	NULL		4665615	0					
ANR	4665638	Identifier	NULL		4665615	1					
ANR	4665639	IdentifierDeclStatement	const char * port_begin = NULL ;	198:1:3906:3935	4665615	3	True				
ANR	4665640	IdentifierDecl	* port_begin = NULL		4665615	0					
ANR	4665641	IdentifierDeclType	const char *		4665615	0					
ANR	4665642	Identifier	port_begin		4665615	1					
ANR	4665643	AssignmentExpression	* port_begin = NULL		4665615	2		=			
ANR	4665644	Identifier	NULL		4665615	0					
ANR	4665645	Identifier	NULL		4665615	1					
ANR	4665646	IdentifierDeclStatement	int addr_len = 0 ;	199:1:3938:3954	4665615	4	True				
ANR	4665647	IdentifierDecl	addr_len = 0		4665615	0					
ANR	4665648	IdentifierDeclType	int		4665615	0					
ANR	4665649	Identifier	addr_len		4665615	1					
ANR	4665650	AssignmentExpression	addr_len = 0		4665615	2		=			
ANR	4665651	Identifier	addr_len		4665615	0					
ANR	4665652	PrimaryExpression	0		4665615	1					
ANR	4665653	IdentifierDeclStatement	int port_len = 0 ;	200:1:3957:3973	4665615	5	True				
ANR	4665654	IdentifierDecl	port_len = 0		4665615	0					
ANR	4665655	IdentifierDeclType	int		4665615	0					
ANR	4665656	Identifier	port_len		4665615	1					
ANR	4665657	AssignmentExpression	port_len = 0		4665615	2		=			
ANR	4665658	Identifier	port_len		4665615	0					
ANR	4665659	PrimaryExpression	0		4665615	1					
ANR	4665660	IfStatement	if ( * addr != '<' )		4665615	6					
ANR	4665661	Condition	* addr != '<'	201:6:3981:3992	4665615	0	True				
ANR	4665662	EqualityExpression	* addr != '<'		4665615	0		!=			
ANR	4665663	UnaryOperationExpression	* addr		4665615	0					
ANR	4665664	UnaryOperator	*		4665615	0					
ANR	4665665	Identifier	addr		4665615	1					
ANR	4665666	PrimaryExpression	'<'		4665615	1					
ANR	4665667	ReturnStatement	return false ;	201:21:3996:4008	4665615	1	True				
ANR	4665668	Identifier	false		4665615	0					
ANR	4665669	ExpressionStatement	addr ++	202:1:4011:4017	4665615	7	True				
ANR	4665670	PostIncDecOperationExpression	addr ++		4665615	0					
ANR	4665671	Identifier	addr		4665615	0					
ANR	4665672	IncDec	++		4665615	1					
ANR	4665673	IfStatement	if ( * addr == '[' )		4665615	8					
ANR	4665674	Condition	* addr == '['	203:6:4025:4036	4665615	0	True				
ANR	4665675	EqualityExpression	* addr == '['		4665615	0		==			
ANR	4665676	UnaryOperationExpression	* addr		4665615	0					
ANR	4665677	UnaryOperator	*		4665615	0					
ANR	4665678	Identifier	addr		4665615	1					
ANR	4665679	PrimaryExpression	'['		4665615	1					
ANR	4665680	CompoundStatement		10:21:216:216	4665615	1					
ANR	4665681	ExpressionStatement	ipv6 = true	204:2:4044:4055	4665615	0	True				
ANR	4665682	AssignmentExpression	ipv6 = true		4665615	0		=			
ANR	4665683	Identifier	ipv6		4665615	0					
ANR	4665684	Identifier	true		4665615	1					
ANR	4665685	ExpressionStatement	addr ++	205:2:4059:4065	4665615	1	True				
ANR	4665686	PostIncDecOperationExpression	addr ++		4665615	0					
ANR	4665687	Identifier	addr		4665615	0					
ANR	4665688	IncDec	++		4665615	1					
ANR	4665689	ExpressionStatement	addr_begin = addr	206:2:4069:4086	4665615	2	True				
ANR	4665690	AssignmentExpression	addr_begin = addr		4665615	0		=			
ANR	4665691	Identifier	addr_begin		4665615	0					
ANR	4665692	Identifier	addr		4665615	1					
ANR	4665693	WhileStatement	while ( * addr && * addr != ']' )		4665615	3					
ANR	4665694	Condition	* addr && * addr != ']'	208:9:4098:4118	4665615	0	True				
ANR	4665695	AndExpression	* addr && * addr != ']'		4665615	0		&&			
ANR	4665696	UnaryOperationExpression	* addr		4665615	0					
ANR	4665697	UnaryOperator	*		4665615	0					
ANR	4665698	Identifier	addr		4665615	1					
ANR	4665699	EqualityExpression	* addr != ']'		4665615	1		!=			
ANR	4665700	UnaryOperationExpression	* addr		4665615	0					
ANR	4665701	UnaryOperator	*		4665615	0					
ANR	4665702	Identifier	addr		4665615	1					
ANR	4665703	PrimaryExpression	']'		4665615	1					
ANR	4665704	ExpressionStatement	addr ++	209:3:4125:4131	4665615	1	True				
ANR	4665705	PostIncDecOperationExpression	addr ++		4665615	0					
ANR	4665706	Identifier	addr		4665615	0					
ANR	4665707	IncDec	++		4665615	1					
ANR	4665708	IfStatement	if ( * addr == 0 )		4665615	4					
ANR	4665709	Condition	* addr == 0	211:7:4141:4150	4665615	0	True				
ANR	4665710	EqualityExpression	* addr == 0		4665615	0		==			
ANR	4665711	UnaryOperationExpression	* addr		4665615	0					
ANR	4665712	UnaryOperator	*		4665615	0					
ANR	4665713	Identifier	addr		4665615	1					
ANR	4665714	PrimaryExpression	0		4665615	1					
ANR	4665715	ReturnStatement	return false ;	211:20:4154:4166	4665615	1	True				
ANR	4665716	Identifier	false		4665615	0					
ANR	4665717	ExpressionStatement	addr_len = addr - addr_begin	213:2:4171:4197	4665615	5	True				
ANR	4665718	AssignmentExpression	addr_len = addr - addr_begin		4665615	0		=			
ANR	4665719	Identifier	addr_len		4665615	0					
ANR	4665720	AdditiveExpression	addr - addr_begin		4665615	1		-			
ANR	4665721	Identifier	addr		4665615	0					
ANR	4665722	Identifier	addr_begin		4665615	1					
ANR	4665723	ExpressionStatement	addr ++	214:2:4201:4207	4665615	6	True				
ANR	4665724	PostIncDecOperationExpression	addr ++		4665615	0					
ANR	4665725	Identifier	addr		4665615	0					
ANR	4665726	IncDec	++		4665615	1					
ANR	4665727	ElseStatement	else		4665615	0					
ANR	4665728	CompoundStatement		23:6:394:394	4665615	0					
ANR	4665729	ExpressionStatement	addr_begin = addr	217:2:4222:4239	4665615	0	True				
ANR	4665730	AssignmentExpression	addr_begin = addr		4665615	0		=			
ANR	4665731	Identifier	addr_begin		4665615	0					
ANR	4665732	Identifier	addr		4665615	1					
ANR	4665733	WhileStatement	while ( * addr && * addr != ':' && * addr != '>' )		4665615	1					
ANR	4665734	Condition	* addr && * addr != ':' && * addr != '>'	218:10:4251:4287	4665615	0	True				
ANR	4665735	AndExpression	* addr && * addr != ':' && * addr != '>'		4665615	0		&&			
ANR	4665736	UnaryOperationExpression	* addr		4665615	0					
ANR	4665737	UnaryOperator	*		4665615	0					
ANR	4665738	Identifier	addr		4665615	1					
ANR	4665739	AndExpression	* addr != ':' && * addr != '>'		4665615	1		&&			
ANR	4665740	EqualityExpression	* addr != ':'		4665615	0		!=			
ANR	4665741	UnaryOperationExpression	* addr		4665615	0					
ANR	4665742	UnaryOperator	*		4665615	0					
ANR	4665743	Identifier	addr		4665615	1					
ANR	4665744	PrimaryExpression	':'		4665615	1					
ANR	4665745	EqualityExpression	* addr != '>'		4665615	1		!=			
ANR	4665746	UnaryOperationExpression	* addr		4665615	0					
ANR	4665747	UnaryOperator	*		4665615	0					
ANR	4665748	Identifier	addr		4665615	1					
ANR	4665749	PrimaryExpression	'>'		4665615	1					
ANR	4665750	ExpressionStatement	addr ++	219:3:4294:4300	4665615	1	True				
ANR	4665751	PostIncDecOperationExpression	addr ++		4665615	0					
ANR	4665752	Identifier	addr		4665615	0					
ANR	4665753	IncDec	++		4665615	1					
ANR	4665754	IfStatement	if ( * addr == 0 )		4665615	2					
ANR	4665755	Condition	* addr == 0	221:7:4310:4319	4665615	0	True				
ANR	4665756	EqualityExpression	* addr == 0		4665615	0		==			
ANR	4665757	UnaryOperationExpression	* addr		4665615	0					
ANR	4665758	UnaryOperator	*		4665615	0					
ANR	4665759	Identifier	addr		4665615	1					
ANR	4665760	PrimaryExpression	0		4665615	1					
ANR	4665761	ReturnStatement	return false ;	221:20:4323:4335	4665615	1	True				
ANR	4665762	Identifier	false		4665615	0					
ANR	4665763	ExpressionStatement	addr_len = addr - addr_begin	223:2:4340:4366	4665615	3	True				
ANR	4665764	AssignmentExpression	addr_len = addr - addr_begin		4665615	0		=			
ANR	4665765	Identifier	addr_len		4665615	0					
ANR	4665766	AdditiveExpression	addr - addr_begin		4665615	1		-			
ANR	4665767	Identifier	addr		4665615	0					
ANR	4665768	Identifier	addr_begin		4665615	1					
ANR	4665769	IfStatement	if ( * addr == ':' )		4665615	9					
ANR	4665770	Condition	* addr == ':'	227:6:4415:4426	4665615	0	True				
ANR	4665771	EqualityExpression	* addr == ':'		4665615	0		==			
ANR	4665772	UnaryOperationExpression	* addr		4665615	0					
ANR	4665773	UnaryOperator	*		4665615	0					
ANR	4665774	Identifier	addr		4665615	1					
ANR	4665775	PrimaryExpression	':'		4665615	1					
ANR	4665776	CompoundStatement		34:21:606:606	4665615	1					
ANR	4665777	ExpressionStatement	addr ++	228:2:4434:4440	4665615	0	True				
ANR	4665778	PostIncDecOperationExpression	addr ++		4665615	0					
ANR	4665779	Identifier	addr		4665615	0					
ANR	4665780	IncDec	++		4665615	1					
ANR	4665781	ExpressionStatement	port_begin = addr	229:2:4444:4461	4665615	1	True				
ANR	4665782	AssignmentExpression	port_begin = addr		4665615	0		=			
ANR	4665783	Identifier	port_begin		4665615	0					
ANR	4665784	Identifier	addr		4665615	1					
ANR	4665785	ExpressionStatement	"port_len = strspn ( addr , ""0123456789"" )"	230:2:4465:4502	4665615	2	True				
ANR	4665786	AssignmentExpression	"port_len = strspn ( addr , ""0123456789"" )"		4665615	0		=			
ANR	4665787	Identifier	port_len		4665615	0					
ANR	4665788	CallExpression	"strspn ( addr , ""0123456789"" )"		4665615	1					
ANR	4665789	Callee	strspn		4665615	0					
ANR	4665790	Identifier	strspn		4665615	0					
ANR	4665791	ArgumentList	addr		4665615	1					
ANR	4665792	Argument	addr		4665615	0					
ANR	4665793	Identifier	addr		4665615	0					
ANR	4665794	Argument	"""0123456789"""		4665615	1					
ANR	4665795	PrimaryExpression	"""0123456789"""		4665615	0					
ANR	4665796	ExpressionStatement	addr += port_len	231:2:4506:4522	4665615	3	True				
ANR	4665797	AssignmentExpression	addr += port_len		4665615	0		+=			
ANR	4665798	Identifier	addr		4665615	0					
ANR	4665799	Identifier	port_len		4665615	1					
ANR	4665800	IfStatement	if ( * addr == '?' )		4665615	10					
ANR	4665801	Condition	* addr == '?'	233:6:4533:4544	4665615	0	True				
ANR	4665802	EqualityExpression	* addr == '?'		4665615	0		==			
ANR	4665803	UnaryOperationExpression	* addr		4665615	0					
ANR	4665804	UnaryOperator	*		4665615	0					
ANR	4665805	Identifier	addr		4665615	1					
ANR	4665806	PrimaryExpression	'?'		4665615	1					
ANR	4665807	CompoundStatement		42:2:738:766	4665615	1					
ANR	4665808	ExpressionStatement	addr ++	234:2:4552:4558	4665615	0	True				
ANR	4665809	PostIncDecOperationExpression	addr ++		4665615	0					
ANR	4665810	Identifier	addr		4665615	0					
ANR	4665811	IncDec	++		4665615	1					
ANR	4665812	IdentifierDeclStatement	"int len = strcspn ( addr , "">"" ) ;"	235:2:4562:4590	4665615	1	True				
ANR	4665813	IdentifierDecl	"len = strcspn ( addr , "">"" )"		4665615	0					
ANR	4665814	IdentifierDeclType	int		4665615	0					
ANR	4665815	Identifier	len		4665615	1					
ANR	4665816	AssignmentExpression	"len = strcspn ( addr , "">"" )"		4665615	2		=			
ANR	4665817	Identifier	len		4665615	0					
ANR	4665818	CallExpression	"strcspn ( addr , "">"" )"		4665615	1					
ANR	4665819	Callee	strcspn		4665615	0					
ANR	4665820	Identifier	strcspn		4665615	0					
ANR	4665821	ArgumentList	addr		4665615	1					
ANR	4665822	Argument	addr		4665615	0					
ANR	4665823	Identifier	addr		4665615	0					
ANR	4665824	Argument	""">"""		4665615	1					
ANR	4665825	PrimaryExpression	""">"""		4665615	0					
ANR	4665826	ExpressionStatement	addr += len	236:2:4594:4605	4665615	2	True				
ANR	4665827	AssignmentExpression	addr += len		4665615	0		+=			
ANR	4665828	Identifier	addr		4665615	0					
ANR	4665829	Identifier	len		4665615	1					
ANR	4665830	IfStatement	if ( addr [ 0 ] != '>' || addr [ 1 ] != '\\0' )		4665615	11					
ANR	4665831	Condition	addr [ 0 ] != '>' || addr [ 1 ] != '\\0'	239:6:4617:4649	4665615	0	True				
ANR	4665832	OrExpression	addr [ 0 ] != '>' || addr [ 1 ] != '\\0'		4665615	0		||			
ANR	4665833	EqualityExpression	addr [ 0 ] != '>'		4665615	0		!=			
ANR	4665834	ArrayIndexing	addr [ 0 ]		4665615	0					
ANR	4665835	Identifier	addr		4665615	0					
ANR	4665836	PrimaryExpression	0		4665615	1					
ANR	4665837	PrimaryExpression	'>'		4665615	1					
ANR	4665838	EqualityExpression	addr [ 1 ] != '\\0'		4665615	1		!=			
ANR	4665839	ArrayIndexing	addr [ 1 ]		4665615	0					
ANR	4665840	Identifier	addr		4665615	0					
ANR	4665841	PrimaryExpression	1		4665615	1					
ANR	4665842	PrimaryExpression	'\\0'		4665615	1					
ANR	4665843	ReturnStatement	return false ;	239:42:4653:4665	4665615	1	True				
ANR	4665844	Identifier	false		4665615	0					
ANR	4665845	ExpressionStatement	clear ( )	241:1:4669:4676	4665615	12	True				
ANR	4665846	CallExpression	clear ( )		4665615	0					
ANR	4665847	Callee	clear		4665615	0					
ANR	4665848	Identifier	clear		4665615	0					
ANR	4665849	ArgumentList			4665615	1					
ANR	4665850	IdentifierDeclStatement	int port_no = atoi ( port_begin ) ;	243:1:4680:4710	4665615	13	True				
ANR	4665851	IdentifierDecl	port_no = atoi ( port_begin )		4665615	0					
ANR	4665852	IdentifierDeclType	int		4665615	0					
ANR	4665853	Identifier	port_no		4665615	1					
ANR	4665854	AssignmentExpression	port_no = atoi ( port_begin )		4665615	2		=			
ANR	4665855	Identifier	port_no		4665615	0					
ANR	4665856	CallExpression	atoi ( port_begin )		4665615	1					
ANR	4665857	Callee	atoi		4665615	0					
ANR	4665858	Identifier	atoi		4665615	0					
ANR	4665859	ArgumentList	port_begin		4665615	1					
ANR	4665860	Argument	port_begin		4665615	0					
ANR	4665861	Identifier	port_begin		4665615	0					
ANR	4665862	IdentifierDeclStatement	char tmp [ NI_MAXHOST ] ;	245:1:4714:4734	4665615	14	True				
ANR	4665863	IdentifierDecl	tmp [ NI_MAXHOST ]		4665615	0					
ANR	4665864	IdentifierDeclType	char [ NI_MAXHOST ]		4665615	0					
ANR	4665865	Identifier	tmp		4665615	1					
ANR	4665866	Identifier	NI_MAXHOST		4665615	2					
ANR	4665867	IfStatement	if ( ipv6 )		4665615	15					
ANR	4665868	Condition	ipv6	246:6:4742:4745	4665615	0	True				
ANR	4665869	Identifier	ipv6		4665615	0					
ANR	4665870	CompoundStatement		53:13:925:925	4665615	1					
ANR	4665871	IfStatement	if ( addr_len >= INET6_ADDRSTRLEN )		4665615	0					
ANR	4665872	Condition	addr_len >= INET6_ADDRSTRLEN	247:6:4757:4784	4665615	0	True				
ANR	4665873	RelationalExpression	addr_len >= INET6_ADDRSTRLEN		4665615	0		>=			
ANR	4665874	Identifier	addr_len		4665615	0					
ANR	4665875	Identifier	INET6_ADDRSTRLEN		4665615	1					
ANR	4665876	ReturnStatement	return false ;	248:3:4791:4803	4665615	1	True				
ANR	4665877	Identifier	false		4665615	0					
ANR	4665878	ExpressionStatement	"memcpy ( tmp , addr_begin , addr_len )"	249:2:4807:4840	4665615	1	True				
ANR	4665879	CallExpression	"memcpy ( tmp , addr_begin , addr_len )"		4665615	0					
ANR	4665880	Callee	memcpy		4665615	0					
ANR	4665881	Identifier	memcpy		4665615	0					
ANR	4665882	ArgumentList	tmp		4665615	1					
ANR	4665883	Argument	tmp		4665615	0					
ANR	4665884	Identifier	tmp		4665615	0					
ANR	4665885	Argument	addr_begin		4665615	1					
ANR	4665886	Identifier	addr_begin		4665615	0					
ANR	4665887	Argument	addr_len		4665615	2					
ANR	4665888	Identifier	addr_len		4665615	0					
ANR	4665889	ExpressionStatement	tmp [ addr_len ] = '\\0'	250:2:4844:4864	4665615	2	True				
ANR	4665890	AssignmentExpression	tmp [ addr_len ] = '\\0'		4665615	0		=			
ANR	4665891	ArrayIndexing	tmp [ addr_len ]		4665615	0					
ANR	4665892	Identifier	tmp		4665615	0					
ANR	4665893	Identifier	addr_len		4665615	1					
ANR	4665894	PrimaryExpression	'\\0'		4665615	1					
ANR	4665895	ExpressionStatement	v6 . sin6_len = sizeof ( sockaddr_in6 )	252:2:4907:4941	4665615	3	True				
ANR	4665896	AssignmentExpression	v6 . sin6_len = sizeof ( sockaddr_in6 )		4665615	0		=			
ANR	4665897	MemberAccess	v6 . sin6_len		4665615	0					
ANR	4665898	Identifier	v6		4665615	0					
ANR	4665899	Identifier	sin6_len		4665615	1					
ANR	4665900	SizeofExpression	sizeof ( sockaddr_in6 )		4665615	1					
ANR	4665901	Sizeof	sizeof		4665615	0					
ANR	4665902	SizeofOperand	sockaddr_in6		4665615	1					
ANR	4665903	ExpressionStatement	v6 . sin6_family = AF_INET6	254:2:4952:4977	4665615	4	True				
ANR	4665904	AssignmentExpression	v6 . sin6_family = AF_INET6		4665615	0		=			
ANR	4665905	MemberAccess	v6 . sin6_family		4665615	0					
ANR	4665906	Identifier	v6		4665615	0					
ANR	4665907	Identifier	sin6_family		4665615	1					
ANR	4665908	Identifier	AF_INET6		4665615	1					
ANR	4665909	IfStatement	"if ( inet_pton ( AF_INET6 , tmp , & v6 . sin6_addr ) <= 0 )"		4665615	5					
ANR	4665910	Condition	"inet_pton ( AF_INET6 , tmp , & v6 . sin6_addr ) <= 0"	255:7:4986:5029	4665615	0	True				
ANR	4665911	RelationalExpression	"inet_pton ( AF_INET6 , tmp , & v6 . sin6_addr ) <= 0"		4665615	0		<=			
ANR	4665912	CallExpression	"inet_pton ( AF_INET6 , tmp , & v6 . sin6_addr )"		4665615	0					
ANR	4665913	Callee	inet_pton		4665615	0					
ANR	4665914	Identifier	inet_pton		4665615	0					
ANR	4665915	ArgumentList	AF_INET6		4665615	1					
ANR	4665916	Argument	AF_INET6		4665615	0					
ANR	4665917	Identifier	AF_INET6		4665615	0					
ANR	4665918	Argument	tmp		4665615	1					
ANR	4665919	Identifier	tmp		4665615	0					
ANR	4665920	Argument	& v6 . sin6_addr		4665615	2					
ANR	4665921	UnaryOperationExpression	& v6 . sin6_addr		4665615	0					
ANR	4665922	UnaryOperator	&		4665615	0					
ANR	4665923	MemberAccess	v6 . sin6_addr		4665615	1					
ANR	4665924	Identifier	v6		4665615	0					
ANR	4665925	Identifier	sin6_addr		4665615	1					
ANR	4665926	PrimaryExpression	0		4665615	1					
ANR	4665927	ReturnStatement	return false ;	255:53:5032:5044	4665615	1	True				
ANR	4665928	Identifier	false		4665615	0					
ANR	4665929	ExpressionStatement	v6 . sin6_port = htons ( port_no )	256:2:5048:5077	4665615	6	True				
ANR	4665930	AssignmentExpression	v6 . sin6_port = htons ( port_no )		4665615	0		=			
ANR	4665931	MemberAccess	v6 . sin6_port		4665615	0					
ANR	4665932	Identifier	v6		4665615	0					
ANR	4665933	Identifier	sin6_port		4665615	1					
ANR	4665934	CallExpression	htons ( port_no )		4665615	1					
ANR	4665935	Callee	htons		4665615	0					
ANR	4665936	Identifier	htons		4665615	0					
ANR	4665937	ArgumentList	port_no		4665615	1					
ANR	4665938	Argument	port_no		4665615	0					
ANR	4665939	Identifier	port_no		4665615	0					
ANR	4665940	ElseStatement	else		4665615	0					
ANR	4665941	CompoundStatement		65:6:1265:1265	4665615	0					
ANR	4665942	IfStatement	if ( addr_len >= NI_MAXHOST )		4665615	0					
ANR	4665943	Condition	addr_len >= NI_MAXHOST	259:6:5097:5118	4665615	0	True				
ANR	4665944	RelationalExpression	addr_len >= NI_MAXHOST		4665615	0		>=			
ANR	4665945	Identifier	addr_len		4665615	0					
ANR	4665946	Identifier	NI_MAXHOST		4665615	1					
ANR	4665947	ReturnStatement	return false ;	260:3:5124:5136	4665615	1	True				
ANR	4665948	Identifier	false		4665615	0					
ANR	4665949	ExpressionStatement	"memcpy ( tmp , addr_begin , addr_len )"	261:2:5140:5173	4665615	1	True				
ANR	4665950	CallExpression	"memcpy ( tmp , addr_begin , addr_len )"		4665615	0					
ANR	4665951	Callee	memcpy		4665615	0					
ANR	4665952	Identifier	memcpy		4665615	0					
ANR	4665953	ArgumentList	tmp		4665615	1					
ANR	4665954	Argument	tmp		4665615	0					
ANR	4665955	Identifier	tmp		4665615	0					
ANR	4665956	Argument	addr_begin		4665615	1					
ANR	4665957	Identifier	addr_begin		4665615	0					
ANR	4665958	Argument	addr_len		4665615	2					
ANR	4665959	Identifier	addr_len		4665615	0					
ANR	4665960	ExpressionStatement	tmp [ addr_len ] = '\\0'	262:2:5177:5197	4665615	2	True				
ANR	4665961	AssignmentExpression	tmp [ addr_len ] = '\\0'		4665615	0		=			
ANR	4665962	ArrayIndexing	tmp [ addr_len ]		4665615	0					
ANR	4665963	Identifier	tmp		4665615	0					
ANR	4665964	Identifier	addr_len		4665615	1					
ANR	4665965	PrimaryExpression	'\\0'		4665615	1					
ANR	4665966	IfStatement	"if ( inet_pton ( AF_INET , tmp , & v4 . sin_addr ) > 0 )"		4665615	3					
ANR	4665967	Condition	"inet_pton ( AF_INET , tmp , & v4 . sin_addr ) > 0"	264:6:5206:5246	4665615	0	True				
ANR	4665968	RelationalExpression	"inet_pton ( AF_INET , tmp , & v4 . sin_addr ) > 0"		4665615	0		>			
ANR	4665969	CallExpression	"inet_pton ( AF_INET , tmp , & v4 . sin_addr )"		4665615	0					
ANR	4665970	Callee	inet_pton		4665615	0					
ANR	4665971	Identifier	inet_pton		4665615	0					
ANR	4665972	ArgumentList	AF_INET		4665615	1					
ANR	4665973	Argument	AF_INET		4665615	0					
ANR	4665974	Identifier	AF_INET		4665615	0					
ANR	4665975	Argument	tmp		4665615	1					
ANR	4665976	Identifier	tmp		4665615	0					
ANR	4665977	Argument	& v4 . sin_addr		4665615	2					
ANR	4665978	UnaryOperationExpression	& v4 . sin_addr		4665615	0					
ANR	4665979	UnaryOperator	&		4665615	0					
ANR	4665980	MemberAccess	v4 . sin_addr		4665615	1					
ANR	4665981	Identifier	v4		4665615	0					
ANR	4665982	Identifier	sin_addr		4665615	1					
ANR	4665983	PrimaryExpression	0		4665615	1					
ANR	4665984	CompoundStatement		71:49:1425:1425	4665615	1					
ANR	4665985	ExpressionStatement	v4 . sin_len = sizeof ( sockaddr_in )	266:3:5293:5325	4665615	0	True				
ANR	4665986	AssignmentExpression	v4 . sin_len = sizeof ( sockaddr_in )		4665615	0		=			
ANR	4665987	MemberAccess	v4 . sin_len		4665615	0					
ANR	4665988	Identifier	v4		4665615	0					
ANR	4665989	Identifier	sin_len		4665615	1					
ANR	4665990	SizeofExpression	sizeof ( sockaddr_in )		4665615	1					
ANR	4665991	Sizeof	sizeof		4665615	0					
ANR	4665992	SizeofOperand	sockaddr_in		4665615	1					
ANR	4665993	ExpressionStatement	v4 . sin_family = AF_INET	268:3:5337:5360	4665615	1	True				
ANR	4665994	AssignmentExpression	v4 . sin_family = AF_INET		4665615	0		=			
ANR	4665995	MemberAccess	v4 . sin_family		4665615	0					
ANR	4665996	Identifier	v4		4665615	0					
ANR	4665997	Identifier	sin_family		4665615	1					
ANR	4665998	Identifier	AF_INET		4665615	1					
ANR	4665999	ExpressionStatement	v4 . sin_port = htons ( port_no )	269:3:5365:5393	4665615	2	True				
ANR	4666000	AssignmentExpression	v4 . sin_port = htons ( port_no )		4665615	0		=			
ANR	4666001	MemberAccess	v4 . sin_port		4665615	0					
ANR	4666002	Identifier	v4		4665615	0					
ANR	4666003	Identifier	sin_port		4665615	1					
ANR	4666004	CallExpression	htons ( port_no )		4665615	1					
ANR	4666005	Callee	htons		4665615	0					
ANR	4666006	Identifier	htons		4665615	0					
ANR	4666007	ArgumentList	port_no		4665615	1					
ANR	4666008	Argument	port_no		4665615	0					
ANR	4666009	Identifier	port_no		4665615	0					
ANR	4666010	ElseStatement	else		4665615	0					
ANR	4666011	CompoundStatement		78:3:1585:1617	4665615	0					
ANR	4666012	IdentifierDeclStatement	std :: vector < condor_sockaddr > ret ;	271:3:5409:5441	4665615	0	True				
ANR	4666013	IdentifierDecl	ret		4665615	0					
ANR	4666014	IdentifierDeclType	std :: vector < condor_sockaddr >		4665615	0					
ANR	4666015	Identifier	ret		4665615	1					
ANR	4666016	ExpressionStatement	ret = resolve_hostname ( tmp )	272:3:5446:5473	4665615	1	True				
ANR	4666017	AssignmentExpression	ret = resolve_hostname ( tmp )		4665615	0		=			
ANR	4666018	Identifier	ret		4665615	0					
ANR	4666019	CallExpression	resolve_hostname ( tmp )		4665615	1					
ANR	4666020	Callee	resolve_hostname		4665615	0					
ANR	4666021	Identifier	resolve_hostname		4665615	0					
ANR	4666022	ArgumentList	tmp		4665615	1					
ANR	4666023	Argument	tmp		4665615	0					
ANR	4666024	Identifier	tmp		4665615	0					
ANR	4666025	IfStatement	if ( ! ret . empty ( ) )		4665615	2					
ANR	4666026	Condition	! ret . empty ( )	273:7:5482:5493	4665615	0	True				
ANR	4666027	UnaryOperationExpression	! ret . empty ( )		4665615	0					
ANR	4666028	UnaryOperator	!		4665615	0					
ANR	4666029	CallExpression	ret . empty ( )		4665615	1					
ANR	4666030	Callee	ret . empty		4665615	0					
ANR	4666031	MemberAccess	ret . empty		4665615	0					
ANR	4666032	Identifier	ret		4665615	0					
ANR	4666033	Identifier	empty		4665615	1					
ANR	4666034	ArgumentList			4665615	1					
ANR	4666035	CompoundStatement		80:21:1672:1672	4665615	1					
ANR	4666036	ExpressionStatement	* this = ret . front ( )	274:4:5502:5521	4665615	0	True				
ANR	4666037	AssignmentExpression	* this = ret . front ( )		4665615	0		=			
ANR	4666038	UnaryOperationExpression	* this		4665615	0					
ANR	4666039	UnaryOperator	*		4665615	0					
ANR	4666040	Identifier	this		4665615	1					
ANR	4666041	CallExpression	ret . front ( )		4665615	1					
ANR	4666042	Callee	ret . front		4665615	0					
ANR	4666043	MemberAccess	ret . front		4665615	0					
ANR	4666044	Identifier	ret		4665615	0					
ANR	4666045	Identifier	front		4665615	1					
ANR	4666046	ArgumentList			4665615	1					
ANR	4666047	ExpressionStatement	set_port ( port_no )	275:4:5527:5544	4665615	1	True				
ANR	4666048	CallExpression	set_port ( port_no )		4665615	0					
ANR	4666049	Callee	set_port		4665615	0					
ANR	4666050	Identifier	set_port		4665615	0					
ANR	4666051	ArgumentList	port_no		4665615	1					
ANR	4666052	Argument	port_no		4665615	0					
ANR	4666053	Identifier	port_no		4665615	0					
ANR	4666054	ElseStatement	else		4665615	0					
ANR	4666055	ReturnStatement	return false ;	277:4:5560:5572	4665615	0	True				
ANR	4666056	Identifier	false		4665615	0					
ANR	4666057	ReturnStatement	return true ;	280:1:5582:5593	4665615	16	True				
ANR	4666058	Identifier	true		4665615	0					
ANR	4666059	ReturnType	bool		4665615	1					
ANR	4666060	Identifier	condor_sockaddr :: from_sinful		4665615	2					
ANR	4666061	ParameterList	const char * sinful		4665615	3					
ANR	4666062	Parameter	const char * sinful	193:34:3803:3820	4665615	0	True				
ANR	4666063	ParameterType	const char *		4665615	0					
ANR	4666064	Identifier	sinful		4665615	1					
ANR	4666065	CFGEntryNode	ENTRY		4665615		True				
ANR	4666066	CFGExitNode	EXIT		4665615		True				
ANR	4666067	Symbol	v6		4665615						
ANR	4666068	Symbol	* tmp		4665615						
ANR	4666069	Symbol	v6 . sin6_port		4665615						
ANR	4666070	Symbol	htons		4665615						
ANR	4666071	Symbol	strcspn		4665615						
ANR	4666072	Symbol	* addr_len		4665615						
ANR	4666073	Symbol	v4 . sin_len		4665615						
ANR	4666074	Symbol	len		4665615						
ANR	4666075	Symbol	v4 . sin_family		4665615						
ANR	4666076	Symbol	ipv6		4665615						
ANR	4666077	Symbol	tmp		4665615						
ANR	4666078	Symbol	v4 . sin_port		4665615						
ANR	4666079	Symbol	& v6 . sin6_addr		4665615						
ANR	4666080	Symbol	v6 . sin6_family		4665615						
ANR	4666081	Symbol	addr		4665615						
ANR	4666082	Symbol	& v4 . sin_addr		4665615						
ANR	4666083	Symbol	sinful		4665615						
ANR	4666084	Symbol	addr_len		4665615						
ANR	4666085	Symbol	port_no		4665615						
ANR	4666086	Symbol	addr_begin		4665615						
ANR	4666087	Symbol	atoi		4665615						
ANR	4666088	Symbol	ret		4665615						
ANR	4666089	Symbol	v6 . sin6_len		4665615						
ANR	4666090	Symbol	NULL		4665615						
ANR	4666091	Symbol	inet_pton		4665615						
ANR	4666092	Symbol	false		4665615						
ANR	4666093	Symbol	this		4665615						
ANR	4666094	Symbol	& v4		4665615						
ANR	4666095	Symbol	ret . empty		4665615						
ANR	4666096	Symbol	INET6_ADDRSTRLEN		4665615						
ANR	4666097	Symbol	& v6		4665615						
ANR	4666098	Symbol	AF_INET		4665615						
ANR	4666099	Symbol	AF_INET6		4665615						
ANR	4666100	Symbol	NI_MAXHOST		4665615						
ANR	4666101	Symbol	* this		4665615						
ANR	4666102	Symbol	strspn		4665615						
ANR	4666103	Symbol	resolve_hostname		4665615						
ANR	4666104	Symbol	port_len		4665615						
ANR	4666105	Symbol	true		4665615						
ANR	4666106	Symbol	* addr		4665615						
ANR	4666107	Symbol	port_begin		4665615						
ANR	4666108	Symbol	ret . front		4665615						
ANR	4666109	Symbol	v4		4665615						
ANR	4666110	Function	condor_sockaddr :: to_sockaddr	283:0:5598:5676							
ANR	4666111	FunctionDef	condor_sockaddr :: to_sockaddr ()		4666110	0					
ANR	4666112	CompoundStatement		284:0:5645:5676	4666110	0					
ANR	4666113	ReturnStatement	return ( sockaddr * ) & storage ;	285:1:5648:5674	4666110	0	True				
ANR	4666114	CastExpression	( sockaddr * ) & storage		4666110	0					
ANR	4666115	CastTarget	sockaddr *		4666110	0					
ANR	4666116	UnaryOperationExpression	& storage		4666110	1					
ANR	4666117	UnaryOperator	&		4666110	0					
ANR	4666118	Identifier	storage		4666110	1					
ANR	4666119	ReturnType	sockaddr *		4666110	1					
ANR	4666120	Identifier	condor_sockaddr :: to_sockaddr		4666110	2					
ANR	4666121	ParameterList			4666110	3					
ANR	4666122	CFGEntryNode	ENTRY		4666110		True				
ANR	4666123	CFGExitNode	EXIT		4666110		True				
ANR	4666124	Symbol	& storage		4666110						
ANR	4666125	Function	condor_sockaddr :: get_socklen	288:0:5679:5867							
ANR	4666126	FunctionDef	condor_sockaddr :: get_socklen ()		4666125	0					
ANR	4666127	CompoundStatement		289:0:5726:5867	4666125	0					
ANR	4666128	IfStatement	if ( is_ipv4 ( ) )		4666125	0					
ANR	4666129	Condition	is_ipv4 ( )	290:5:5733:5741	4666125	0	True				
ANR	4666130	CallExpression	is_ipv4 ( )		4666125	0					
ANR	4666131	Callee	is_ipv4		4666125	0					
ANR	4666132	Identifier	is_ipv4		4666125	0					
ANR	4666133	ArgumentList			4666125	1					
ANR	4666134	ReturnStatement	return sizeof ( sockaddr_in ) ;	291:2:5746:5772	4666125	1	True				
ANR	4666135	SizeofExpression	sizeof ( sockaddr_in )		4666125	0					
ANR	4666136	Sizeof	sizeof		4666125	0					
ANR	4666137	SizeofOperand	sockaddr_in		4666125	1					
ANR	4666138	ElseStatement	else		4666125	0					
ANR	4666139	IfStatement	if ( is_ipv6 ( ) )		4666125	0					
ANR	4666140	Condition	is_ipv6 ( )	292:10:5784:5792	4666125	0	True				
ANR	4666141	CallExpression	is_ipv6 ( )		4666125	0					
ANR	4666142	Callee	is_ipv6		4666125	0					
ANR	4666143	Identifier	is_ipv6		4666125	0					
ANR	4666144	ArgumentList			4666125	1					
ANR	4666145	ReturnStatement	return sizeof ( sockaddr_in6 ) ;	293:2:5797:5824	4666125	1	True				
ANR	4666146	SizeofExpression	sizeof ( sockaddr_in6 )		4666125	0					
ANR	4666147	Sizeof	sizeof		4666125	0					
ANR	4666148	SizeofOperand	sockaddr_in6		4666125	1					
ANR	4666149	ElseStatement	else		4666125	0					
ANR	4666150	ReturnStatement	return sizeof ( sockaddr_storage ) ;	295:2:5834:5865	4666125	0	True				
ANR	4666151	SizeofExpression	sizeof ( sockaddr_storage )		4666125	0					
ANR	4666152	Sizeof	sizeof		4666125	0					
ANR	4666153	SizeofOperand	sockaddr_storage		4666125	1					
ANR	4666154	ReturnType	socklen_t		4666125	1					
ANR	4666155	Identifier	condor_sockaddr :: get_socklen		4666125	2					
ANR	4666156	ParameterList			4666125	3					
ANR	4666157	CFGEntryNode	ENTRY		4666125		True				
ANR	4666158	CFGExitNode	EXIT		4666125		True				
ANR	4666159	Symbol	is_ipv6		4666125						
ANR	4666160	Symbol	is_ipv4		4666125						
ANR	4666161	Function	condor_sockaddr :: from_ip_string	298:0:5870:5979							
ANR	4666162	FunctionDef	condor_sockaddr :: from_ip_string (const MyString & ip_string)		4666161	0					
ANR	4666163	CompoundStatement		299:0:5934:5979	4666161	0					
ANR	4666164	ReturnStatement	return from_ip_string ( ip_string . Value ( ) ) ;	300:1:5937:5977	4666161	0	True				
ANR	4666165	CallExpression	from_ip_string ( ip_string . Value ( ) )		4666161	0					
ANR	4666166	Callee	from_ip_string		4666161	0					
ANR	4666167	Identifier	from_ip_string		4666161	0					
ANR	4666168	ArgumentList	ip_string . Value ( )		4666161	1					
ANR	4666169	Argument	ip_string . Value ( )		4666161	0					
ANR	4666170	CallExpression	ip_string . Value ( )		4666161	0					
ANR	4666171	Callee	ip_string . Value		4666161	0					
ANR	4666172	MemberAccess	ip_string . Value		4666161	0					
ANR	4666173	Identifier	ip_string		4666161	0					
ANR	4666174	Identifier	Value		4666161	1					
ANR	4666175	ArgumentList			4666161	1					
ANR	4666176	ReturnType	bool		4666161	1					
ANR	4666177	Identifier	condor_sockaddr :: from_ip_string		4666161	2					
ANR	4666178	ParameterList	const MyString & ip_string		4666161	3					
ANR	4666179	Parameter	const MyString & ip_string	298:37:5907:5931	4666161	0	True				
ANR	4666180	ParameterType	const MyString &		4666161	0					
ANR	4666181	Identifier	ip_string		4666161	1					
ANR	4666182	CFGEntryNode	ENTRY		4666161		True				
ANR	4666183	CFGExitNode	EXIT		4666161		True				
ANR	4666184	Symbol	ip_string		4666161						
ANR	4666185	Symbol	ip_string . Value		4666161						
ANR	4666186	Symbol	from_ip_string		4666161						
ANR	4666187	Function	condor_sockaddr :: from_ip_string	303:0:5982:6475							
ANR	4666188	FunctionDef	condor_sockaddr :: from_ip_string (const char * ip_string)		4666187	0					
ANR	4666189	CompoundStatement		304:0:6042:6475	4666187	0					
ANR	4666190	IfStatement	"if ( inet_pton ( AF_INET , ip_string , & v4 . sin_addr ) == 1 )"		4666187	0					
ANR	4666191	Condition	"inet_pton ( AF_INET , ip_string , & v4 . sin_addr ) == 1"	305:5:6049:6096	4666187	0	True				
ANR	4666192	EqualityExpression	"inet_pton ( AF_INET , ip_string , & v4 . sin_addr ) == 1"		4666187	0		==			
ANR	4666193	CallExpression	"inet_pton ( AF_INET , ip_string , & v4 . sin_addr )"		4666187	0					
ANR	4666194	Callee	inet_pton		4666187	0					
ANR	4666195	Identifier	inet_pton		4666187	0					
ANR	4666196	ArgumentList	AF_INET		4666187	1					
ANR	4666197	Argument	AF_INET		4666187	0					
ANR	4666198	Identifier	AF_INET		4666187	0					
ANR	4666199	Argument	ip_string		4666187	1					
ANR	4666200	Identifier	ip_string		4666187	0					
ANR	4666201	Argument	& v4 . sin_addr		4666187	2					
ANR	4666202	UnaryOperationExpression	& v4 . sin_addr		4666187	0					
ANR	4666203	UnaryOperator	&		4666187	0					
ANR	4666204	MemberAccess	v4 . sin_addr		4666187	1					
ANR	4666205	Identifier	v4		4666187	0					
ANR	4666206	Identifier	sin_addr		4666187	1					
ANR	4666207	PrimaryExpression	1		4666187	1					
ANR	4666208	CompoundStatement		2:55:56:56	4666187	1					
ANR	4666209	ExpressionStatement	v4 . sin_len = sizeof ( sockaddr_in )	307:2:6142:6174	4666187	0	True				
ANR	4666210	AssignmentExpression	v4 . sin_len = sizeof ( sockaddr_in )		4666187	0		=			
ANR	4666211	MemberAccess	v4 . sin_len		4666187	0					
ANR	4666212	Identifier	v4		4666187	0					
ANR	4666213	Identifier	sin_len		4666187	1					
ANR	4666214	SizeofExpression	sizeof ( sockaddr_in )		4666187	1					
ANR	4666215	Sizeof	sizeof		4666187	0					
ANR	4666216	SizeofOperand	sockaddr_in		4666187	1					
ANR	4666217	ExpressionStatement	v4 . sin_family = AF_INET	309:2:6185:6208	4666187	1	True				
ANR	4666218	AssignmentExpression	v4 . sin_family = AF_INET		4666187	0		=			
ANR	4666219	MemberAccess	v4 . sin_family		4666187	0					
ANR	4666220	Identifier	v4		4666187	0					
ANR	4666221	Identifier	sin_family		4666187	1					
ANR	4666222	Identifier	AF_INET		4666187	1					
ANR	4666223	ExpressionStatement	v4 . sin_port = 0	310:2:6212:6227	4666187	2	True				
ANR	4666224	AssignmentExpression	v4 . sin_port = 0		4666187	0		=			
ANR	4666225	MemberAccess	v4 . sin_port		4666187	0					
ANR	4666226	Identifier	v4		4666187	0					
ANR	4666227	Identifier	sin_port		4666187	1					
ANR	4666228	PrimaryExpression	0		4666187	1					
ANR	4666229	ReturnStatement	return true ;	311:2:6231:6242	4666187	3	True				
ANR	4666230	Identifier	true		4666187	0					
ANR	4666231	ElseStatement	else		4666187	0					
ANR	4666232	IfStatement	"if ( inet_pton ( AF_INET6 , ip_string , & v6 . sin6_addr ) == 1 )"		4666187	0					
ANR	4666233	Condition	"inet_pton ( AF_INET6 , ip_string , & v6 . sin6_addr ) == 1"	312:12:6256:6305	4666187	0	True				
ANR	4666234	EqualityExpression	"inet_pton ( AF_INET6 , ip_string , & v6 . sin6_addr ) == 1"		4666187	0		==			
ANR	4666235	CallExpression	"inet_pton ( AF_INET6 , ip_string , & v6 . sin6_addr )"		4666187	0					
ANR	4666236	Callee	inet_pton		4666187	0					
ANR	4666237	Identifier	inet_pton		4666187	0					
ANR	4666238	ArgumentList	AF_INET6		4666187	1					
ANR	4666239	Argument	AF_INET6		4666187	0					
ANR	4666240	Identifier	AF_INET6		4666187	0					
ANR	4666241	Argument	ip_string		4666187	1					
ANR	4666242	Identifier	ip_string		4666187	0					
ANR	4666243	Argument	& v6 . sin6_addr		4666187	2					
ANR	4666244	UnaryOperationExpression	& v6 . sin6_addr		4666187	0					
ANR	4666245	UnaryOperator	&		4666187	0					
ANR	4666246	MemberAccess	v6 . sin6_addr		4666187	1					
ANR	4666247	Identifier	v6		4666187	0					
ANR	4666248	Identifier	sin6_addr		4666187	1					
ANR	4666249	PrimaryExpression	1		4666187	1					
ANR	4666250	CompoundStatement		9:64:265:265	4666187	1					
ANR	4666251	ExpressionStatement	v6 . sin6_len = sizeof ( sockaddr_in )	314:2:6351:6384	4666187	0	True				
ANR	4666252	AssignmentExpression	v6 . sin6_len = sizeof ( sockaddr_in )		4666187	0		=			
ANR	4666253	MemberAccess	v6 . sin6_len		4666187	0					
ANR	4666254	Identifier	v6		4666187	0					
ANR	4666255	Identifier	sin6_len		4666187	1					
ANR	4666256	SizeofExpression	sizeof ( sockaddr_in )		4666187	1					
ANR	4666257	Sizeof	sizeof		4666187	0					
ANR	4666258	SizeofOperand	sockaddr_in		4666187	1					
ANR	4666259	ExpressionStatement	v6 . sin6_family = AF_INET6	316:2:6395:6420	4666187	1	True				
ANR	4666260	AssignmentExpression	v6 . sin6_family = AF_INET6		4666187	0		=			
ANR	4666261	MemberAccess	v6 . sin6_family		4666187	0					
ANR	4666262	Identifier	v6		4666187	0					
ANR	4666263	Identifier	sin6_family		4666187	1					
ANR	4666264	Identifier	AF_INET6		4666187	1					
ANR	4666265	ExpressionStatement	v6 . sin6_port = 0	317:2:6424:6440	4666187	2	True				
ANR	4666266	AssignmentExpression	v6 . sin6_port = 0		4666187	0		=			
ANR	4666267	MemberAccess	v6 . sin6_port		4666187	0					
ANR	4666268	Identifier	v6		4666187	0					
ANR	4666269	Identifier	sin6_port		4666187	1					
ANR	4666270	PrimaryExpression	0		4666187	1					
ANR	4666271	ReturnStatement	return true ;	318:2:6444:6455	4666187	3	True				
ANR	4666272	Identifier	true		4666187	0					
ANR	4666273	ReturnStatement	return false ;	320:1:6461:6473	4666187	1	True				
ANR	4666274	Identifier	false		4666187	0					
ANR	4666275	ReturnType	bool		4666187	1					
ANR	4666276	Identifier	condor_sockaddr :: from_ip_string		4666187	2					
ANR	4666277	ParameterList	const char * ip_string		4666187	3					
ANR	4666278	Parameter	const char * ip_string	303:37:6019:6039	4666187	0	True				
ANR	4666279	ParameterType	const char *		4666187	0					
ANR	4666280	Identifier	ip_string		4666187	1					
ANR	4666281	CFGEntryNode	ENTRY		4666187		True				
ANR	4666282	CFGExitNode	EXIT		4666187		True				
ANR	4666283	Symbol	v6		4666187						
ANR	4666284	Symbol	v6 . sin6_len		4666187						
ANR	4666285	Symbol	v6 . sin6_port		4666187						
ANR	4666286	Symbol	inet_pton		4666187						
ANR	4666287	Symbol	false		4666187						
ANR	4666288	Symbol	& v4		4666187						
ANR	4666289	Symbol	AF_INET		4666187						
ANR	4666290	Symbol	& v6		4666187						
ANR	4666291	Symbol	AF_INET6		4666187						
ANR	4666292	Symbol	v4 . sin_len		4666187						
ANR	4666293	Symbol	ip_string		4666187						
ANR	4666294	Symbol	v4 . sin_family		4666187						
ANR	4666295	Symbol	v4 . sin_port		4666187						
ANR	4666296	Symbol	true		4666187						
ANR	4666297	Symbol	& v6 . sin6_addr		4666187						
ANR	4666298	Symbol	v6 . sin6_family		4666187						
ANR	4666299	Symbol	& v4 . sin_addr		4666187						
ANR	4666300	Symbol	v4		4666187						
ANR	4666301	Function	condor_sockaddr :: to_ip_string	341:0:6849:7826							
ANR	4666302	FunctionDef	"condor_sockaddr :: to_ip_string (char * buf , int len)"		4666301	0					
ANR	4666303	CompoundStatement		342:0:6917:7826	4666301	0					
ANR	4666304	IfStatement	if ( is_ipv4 ( ) )		4666301	0					
ANR	4666305	Condition	is_ipv4 ( )	343:6:6925:6933	4666301	0	True				
ANR	4666306	CallExpression	is_ipv4 ( )		4666301	0					
ANR	4666307	Callee	is_ipv4		4666301	0					
ANR	4666308	Identifier	is_ipv4		4666301	0					
ANR	4666309	ArgumentList			4666301	1					
ANR	4666310	ReturnStatement	"return inet_ntop ( AF_INET , & v4 . sin_addr , buf , len ) ;"	344:2:6940:6989	4666301	1	True				
ANR	4666311	CallExpression	"inet_ntop ( AF_INET , & v4 . sin_addr , buf , len )"		4666301	0					
ANR	4666312	Callee	inet_ntop		4666301	0					
ANR	4666313	Identifier	inet_ntop		4666301	0					
ANR	4666314	ArgumentList	AF_INET		4666301	1					
ANR	4666315	Argument	AF_INET		4666301	0					
ANR	4666316	Identifier	AF_INET		4666301	0					
ANR	4666317	Argument	& v4 . sin_addr		4666301	1					
ANR	4666318	UnaryOperationExpression	& v4 . sin_addr		4666301	0					
ANR	4666319	UnaryOperator	&		4666301	0					
ANR	4666320	MemberAccess	v4 . sin_addr		4666301	1					
ANR	4666321	Identifier	v4		4666301	0					
ANR	4666322	Identifier	sin_addr		4666301	1					
ANR	4666323	Argument	buf		4666301	2					
ANR	4666324	Identifier	buf		4666301	0					
ANR	4666325	Argument	len		4666301	3					
ANR	4666326	Identifier	len		4666301	0					
ANR	4666327	ElseStatement	else		4666301	0					
ANR	4666328	IfStatement	if ( is_ipv6 ( ) )		4666301	0					
ANR	4666329	Condition	is_ipv6 ( )	345:10:7002:7010	4666301	0	True				
ANR	4666330	CallExpression	is_ipv6 ( )		4666301	0					
ANR	4666331	Callee	is_ipv6		4666301	0					
ANR	4666332	Identifier	is_ipv6		4666301	0					
ANR	4666333	ArgumentList			4666301	1					
ANR	4666334	CompoundStatement		16:2:568:609	4666301	1					
ANR	4666335	IdentifierDeclStatement	uint32_t * addr = ( uint32_t * ) & v6 . sin6_addr ;	357:2:7486:7527	4666301	0	True				
ANR	4666336	IdentifierDecl	* addr = ( uint32_t * ) & v6 . sin6_addr		4666301	0					
ANR	4666337	IdentifierDeclType	uint32_t *		4666301	0					
ANR	4666338	Identifier	addr		4666301	1					
ANR	4666339	AssignmentExpression	* addr = ( uint32_t * ) & v6 . sin6_addr		4666301	2		=			
ANR	4666340	Identifier	addr		4666301	0					
ANR	4666341	CastExpression	( uint32_t * ) & v6 . sin6_addr		4666301	1					
ANR	4666342	CastTarget	uint32_t *		4666301	0					
ANR	4666343	UnaryOperationExpression	& v6 . sin6_addr		4666301	1					
ANR	4666344	UnaryOperator	&		4666301	0					
ANR	4666345	MemberAccess	v6 . sin6_addr		4666301	1					
ANR	4666346	Identifier	v6		4666301	0					
ANR	4666347	Identifier	sin6_addr		4666301	1					
ANR	4666348	IfStatement	if ( addr [ 0 ] == 0 && addr [ 1 ] == 0 && addr [ 2 ] == ntohl ( 0xffff ) )		4666301	1					
ANR	4666349	Condition	addr [ 0 ] == 0 && addr [ 1 ] == 0 && addr [ 2 ] == ntohl ( 0xffff )	358:6:7535:7590	4666301	0	True				
ANR	4666350	AndExpression	addr [ 0 ] == 0 && addr [ 1 ] == 0 && addr [ 2 ] == ntohl ( 0xffff )		4666301	0		&&			
ANR	4666351	EqualityExpression	addr [ 0 ] == 0		4666301	0		==			
ANR	4666352	ArrayIndexing	addr [ 0 ]		4666301	0					
ANR	4666353	Identifier	addr		4666301	0					
ANR	4666354	PrimaryExpression	0		4666301	1					
ANR	4666355	PrimaryExpression	0		4666301	1					
ANR	4666356	AndExpression	addr [ 1 ] == 0 && addr [ 2 ] == ntohl ( 0xffff )		4666301	1		&&			
ANR	4666357	EqualityExpression	addr [ 1 ] == 0		4666301	0		==			
ANR	4666358	ArrayIndexing	addr [ 1 ]		4666301	0					
ANR	4666359	Identifier	addr		4666301	0					
ANR	4666360	PrimaryExpression	1		4666301	1					
ANR	4666361	PrimaryExpression	0		4666301	1					
ANR	4666362	EqualityExpression	addr [ 2 ] == ntohl ( 0xffff )		4666301	1		==			
ANR	4666363	ArrayIndexing	addr [ 2 ]		4666301	0					
ANR	4666364	Identifier	addr		4666301	0					
ANR	4666365	PrimaryExpression	2		4666301	1					
ANR	4666366	CallExpression	ntohl ( 0xffff )		4666301	1					
ANR	4666367	Callee	ntohl		4666301	0					
ANR	4666368	Identifier	ntohl		4666301	0					
ANR	4666369	ArgumentList	0xffff		4666301	1					
ANR	4666370	Argument	0xffff		4666301	0					
ANR	4666371	PrimaryExpression	0xffff		4666301	0					
ANR	4666372	CompoundStatement		17:64:675:675	4666301	1					
ANR	4666373	ReturnStatement	"return inet_ntop ( AF_INET , ( const void * ) & addr [ 3 ] , buf , len ) ;"	359:3:7598:7656	4666301	0	True				
ANR	4666374	CallExpression	"inet_ntop ( AF_INET , ( const void * ) & addr [ 3 ] , buf , len )"		4666301	0					
ANR	4666375	Callee	inet_ntop		4666301	0					
ANR	4666376	Identifier	inet_ntop		4666301	0					
ANR	4666377	ArgumentList	AF_INET		4666301	1					
ANR	4666378	Argument	AF_INET		4666301	0					
ANR	4666379	Identifier	AF_INET		4666301	0					
ANR	4666380	Argument	( const void * ) & addr [ 3 ]		4666301	1					
ANR	4666381	CastExpression	( const void * ) & addr [ 3 ]		4666301	0					
ANR	4666382	CastTarget	const void *		4666301	0					
ANR	4666383	UnaryOperationExpression	& addr [ 3 ]		4666301	1					
ANR	4666384	UnaryOperator	&		4666301	0					
ANR	4666385	ArrayIndexing	addr [ 3 ]		4666301	1					
ANR	4666386	Identifier	addr		4666301	0					
ANR	4666387	PrimaryExpression	3		4666301	1					
ANR	4666388	Argument	buf		4666301	2					
ANR	4666389	Identifier	buf		4666301	0					
ANR	4666390	Argument	len		4666301	3					
ANR	4666391	Identifier	len		4666301	0					
ANR	4666392	ReturnStatement	"return inet_ntop ( AF_INET6 , & v6 . sin6_addr , buf , len ) ;"	362:2:7665:7716	4666301	2	True				
ANR	4666393	CallExpression	"inet_ntop ( AF_INET6 , & v6 . sin6_addr , buf , len )"		4666301	0					
ANR	4666394	Callee	inet_ntop		4666301	0					
ANR	4666395	Identifier	inet_ntop		4666301	0					
ANR	4666396	ArgumentList	AF_INET6		4666301	1					
ANR	4666397	Argument	AF_INET6		4666301	0					
ANR	4666398	Identifier	AF_INET6		4666301	0					
ANR	4666399	Argument	& v6 . sin6_addr		4666301	1					
ANR	4666400	UnaryOperationExpression	& v6 . sin6_addr		4666301	0					
ANR	4666401	UnaryOperator	&		4666301	0					
ANR	4666402	MemberAccess	v6 . sin6_addr		4666301	1					
ANR	4666403	Identifier	v6		4666301	0					
ANR	4666404	Identifier	sin6_addr		4666301	1					
ANR	4666405	Argument	buf		4666301	2					
ANR	4666406	Identifier	buf		4666301	0					
ANR	4666407	Argument	len		4666301	3					
ANR	4666408	Identifier	len		4666301	0					
ANR	4666409	ElseStatement	else		4666301	0					
ANR	4666410	CompoundStatement		22:8:808:808	4666301	0					
ANR	4666411	ExpressionStatement	"snprintf ( buf , len , ""%x INVALID ADDRESS FAMILY"" , ( unsigned int ) v4 . sin_family )"	364:2:7730:7806	4666301	0	True				
ANR	4666412	CallExpression	"snprintf ( buf , len , ""%x INVALID ADDRESS FAMILY"" , ( unsigned int ) v4 . sin_family )"		4666301	0					
ANR	4666413	Callee	snprintf		4666301	0					
ANR	4666414	Identifier	snprintf		4666301	0					
ANR	4666415	ArgumentList	buf		4666301	1					
ANR	4666416	Argument	buf		4666301	0					
ANR	4666417	Identifier	buf		4666301	0					
ANR	4666418	Argument	len		4666301	1					
ANR	4666419	Identifier	len		4666301	0					
ANR	4666420	Argument	"""%x INVALID ADDRESS FAMILY"""		4666301	2					
ANR	4666421	PrimaryExpression	"""%x INVALID ADDRESS FAMILY"""		4666301	0					
ANR	4666422	Argument	( unsigned int ) v4 . sin_family		4666301	3					
ANR	4666423	CastExpression	( unsigned int ) v4 . sin_family		4666301	0					
ANR	4666424	CastTarget	unsigned int		4666301	0					
ANR	4666425	MemberAccess	v4 . sin_family		4666301	1					
ANR	4666426	Identifier	v4		4666301	0					
ANR	4666427	Identifier	sin_family		4666301	1					
ANR	4666428	ReturnStatement	return NULL ;	365:2:7810:7821	4666301	1	True				
ANR	4666429	Identifier	NULL		4666301	0					
ANR	4666430	ReturnType	const char *		4666301	1					
ANR	4666431	Identifier	condor_sockaddr :: to_ip_string		4666301	2					
ANR	4666432	ParameterList	"char * buf , int len"		4666301	3					
ANR	4666433	Parameter	char * buf	341:42:6891:6899	4666301	0	True				
ANR	4666434	ParameterType	char *		4666301	0					
ANR	4666435	Identifier	buf		4666301	1					
ANR	4666436	Parameter	int len	341:53:6902:6908	4666301	1	True				
ANR	4666437	ParameterType	int		4666301	0					
ANR	4666438	Identifier	len		4666301	1					
ANR	4666439	CFGEntryNode	ENTRY		4666301		True				
ANR	4666440	CFGExitNode	EXIT		4666301		True				
ANR	4666441	Symbol	v6		4666301						
ANR	4666442	Symbol	NULL		4666301						
ANR	4666443	Symbol	& v4		4666301						
ANR	4666444	Symbol	ntohl		4666301						
ANR	4666445	Symbol	AF_INET		4666301						
ANR	4666446	Symbol	is_ipv6		4666301						
ANR	4666447	Symbol	& v6		4666301						
ANR	4666448	Symbol	is_ipv4		4666301						
ANR	4666449	Symbol	AF_INET6		4666301						
ANR	4666450	Symbol	buf		4666301						
ANR	4666451	Symbol	len		4666301						
ANR	4666452	Symbol	v4 . sin_family		4666301						
ANR	4666453	Symbol	& v6 . sin6_addr		4666301						
ANR	4666454	Symbol	inet_ntop		4666301						
ANR	4666455	Symbol	* addr		4666301						
ANR	4666456	Symbol	& v4 . sin_addr		4666301						
ANR	4666457	Symbol	addr		4666301						
ANR	4666458	Symbol	v4		4666301						
ANR	4666459	Function	condor_sockaddr :: to_ip_string	369:0:7829:8010							
ANR	4666460	FunctionDef	condor_sockaddr :: to_ip_string ()		4666459	0					
ANR	4666461	CompoundStatement		370:0:7876:8010	4666459	0					
ANR	4666462	IdentifierDeclStatement	char tmp [ IP_STRING_BUF_SIZE ] ;	371:1:7879:7907	4666459	0	True				
ANR	4666463	IdentifierDecl	tmp [ IP_STRING_BUF_SIZE ]		4666459	0					
ANR	4666464	IdentifierDeclType	char [ IP_STRING_BUF_SIZE ]		4666459	0					
ANR	4666465	Identifier	tmp		4666459	1					
ANR	4666466	Identifier	IP_STRING_BUF_SIZE		4666459	2					
ANR	4666467	IdentifierDeclStatement	MyString ret ;	372:1:7910:7922	4666459	1	True				
ANR	4666468	IdentifierDecl	ret		4666459	0					
ANR	4666469	IdentifierDeclType	MyString		4666459	0					
ANR	4666470	Identifier	ret		4666459	1					
ANR	4666471	IfStatement	"if ( ! to_ip_string ( tmp , IP_STRING_BUF_SIZE ) )"		4666459	2					
ANR	4666472	Condition	"! to_ip_string ( tmp , IP_STRING_BUF_SIZE )"	373:6:7930:7967	4666459	0	True				
ANR	4666473	UnaryOperationExpression	"! to_ip_string ( tmp , IP_STRING_BUF_SIZE )"		4666459	0					
ANR	4666474	UnaryOperator	!		4666459	0					
ANR	4666475	CallExpression	"to_ip_string ( tmp , IP_STRING_BUF_SIZE )"		4666459	1					
ANR	4666476	Callee	to_ip_string		4666459	0					
ANR	4666477	Identifier	to_ip_string		4666459	0					
ANR	4666478	ArgumentList	tmp		4666459	1					
ANR	4666479	Argument	tmp		4666459	0					
ANR	4666480	Identifier	tmp		4666459	0					
ANR	4666481	Argument	IP_STRING_BUF_SIZE		4666459	1					
ANR	4666482	Identifier	IP_STRING_BUF_SIZE		4666459	0					
ANR	4666483	ReturnStatement	return ret ;	374:2:7973:7983	4666459	1	True				
ANR	4666484	Identifier	ret		4666459	0					
ANR	4666485	ExpressionStatement	ret = tmp	375:1:7986:7995	4666459	3	True				
ANR	4666486	AssignmentExpression	ret = tmp		4666459	0		=			
ANR	4666487	Identifier	ret		4666459	0					
ANR	4666488	Identifier	tmp		4666459	1					
ANR	4666489	ReturnStatement	return ret ;	376:1:7998:8008	4666459	4	True				
ANR	4666490	Identifier	ret		4666459	0					
ANR	4666491	ReturnType	MyString		4666459	1					
ANR	4666492	Identifier	condor_sockaddr :: to_ip_string		4666459	2					
ANR	4666493	ParameterList			4666459	3					
ANR	4666494	CFGEntryNode	ENTRY		4666459		True				
ANR	4666495	CFGExitNode	EXIT		4666459		True				
ANR	4666496	Symbol	ret		4666459						
ANR	4666497	Symbol	IP_STRING_BUF_SIZE		4666459						
ANR	4666498	Symbol	tmp		4666459						
ANR	4666499	Symbol	to_ip_string		4666459						
ANR	4666500	Function	condor_sockaddr :: to_ip_string_ex	379:0:8013:8195							
ANR	4666501	FunctionDef	condor_sockaddr :: to_ip_string_ex ()		4666500	0					
ANR	4666502	CompoundStatement		380:0:8063:8195	4666500	0					
ANR	4666503	IfStatement	if ( is_addr_any ( ) )		4666500	0					
ANR	4666504	Condition	is_addr_any ( )	382:6:8104:8116	4666500	0	True				
ANR	4666505	CallExpression	is_addr_any ( )		4666500	0					
ANR	4666506	Callee	is_addr_any		4666500	0					
ANR	4666507	Identifier	is_addr_any		4666500	0					
ANR	4666508	ArgumentList			4666500	1					
ANR	4666509	ReturnStatement	return get_local_ipaddr ( ) . to_ip_string ( ) ;	383:2:8122:8162	4666500	1	True				
ANR	4666510	CallExpression	get_local_ipaddr ( ) . to_ip_string ( )		4666500	0					
ANR	4666511	Callee	get_local_ipaddr ( ) . to_ip_string		4666500	0					
ANR	4666512	MemberAccess	get_local_ipaddr ( ) . to_ip_string		4666500	0					
ANR	4666513	CallExpression	get_local_ipaddr ( )		4666500	0					
ANR	4666514	Callee	get_local_ipaddr		4666500	0					
ANR	4666515	Identifier	get_local_ipaddr		4666500	0					
ANR	4666516	ArgumentList			4666500	1					
ANR	4666517	Identifier	to_ip_string		4666500	1					
ANR	4666518	ArgumentList			4666500	1					
ANR	4666519	ElseStatement	else		4666500	0					
ANR	4666520	ReturnStatement	return to_ip_string ( ) ;	385:2:8172:8193	4666500	0	True				
ANR	4666521	CallExpression	to_ip_string ( )		4666500	0					
ANR	4666522	Callee	to_ip_string		4666500	0					
ANR	4666523	Identifier	to_ip_string		4666500	0					
ANR	4666524	ArgumentList			4666500	1					
ANR	4666525	ReturnType	MyString		4666500	1					
ANR	4666526	Identifier	condor_sockaddr :: to_ip_string_ex		4666500	2					
ANR	4666527	ParameterList			4666500	3					
ANR	4666528	CFGEntryNode	ENTRY		4666500		True				
ANR	4666529	CFGExitNode	EXIT		4666500		True				
ANR	4666530	Symbol	get_local_ipaddr		4666500						
ANR	4666531	Symbol	to_ip_string		4666500						
ANR	4666532	Symbol	is_addr_any		4666500						
ANR	4666533	Symbol	get_local_ipaddr ( ) . to_ip_string		4666500						
ANR	4666534	Function	condor_sockaddr :: to_ip_string_ex	388:0:8198:8415							
ANR	4666535	FunctionDef	"condor_sockaddr :: to_ip_string_ex (char * buf , int len)"		4666534	0					
ANR	4666536	CompoundStatement		389:0:8269:8415	4666534	0					
ANR	4666537	IfStatement	if ( is_addr_any ( ) )		4666534	0					
ANR	4666538	Condition	is_addr_any ( )	391:5:8309:8321	4666534	0	True				
ANR	4666539	CallExpression	is_addr_any ( )		4666534	0					
ANR	4666540	Callee	is_addr_any		4666534	0					
ANR	4666541	Identifier	is_addr_any		4666534	0					
ANR	4666542	ArgumentList			4666534	1					
ANR	4666543	ReturnStatement	"return get_local_ipaddr ( ) . to_ip_string ( buf , len ) ;"	392:2:8326:8374	4666534	1	True				
ANR	4666544	CallExpression	"get_local_ipaddr ( ) . to_ip_string ( buf , len )"		4666534	0					
ANR	4666545	Callee	get_local_ipaddr ( ) . to_ip_string		4666534	0					
ANR	4666546	MemberAccess	get_local_ipaddr ( ) . to_ip_string		4666534	0					
ANR	4666547	CallExpression	get_local_ipaddr ( )		4666534	0					
ANR	4666548	Callee	get_local_ipaddr		4666534	0					
ANR	4666549	Identifier	get_local_ipaddr		4666534	0					
ANR	4666550	ArgumentList			4666534	1					
ANR	4666551	Identifier	to_ip_string		4666534	1					
ANR	4666552	ArgumentList	buf		4666534	1					
ANR	4666553	Argument	buf		4666534	0					
ANR	4666554	Identifier	buf		4666534	0					
ANR	4666555	Argument	len		4666534	1					
ANR	4666556	Identifier	len		4666534	0					
ANR	4666557	ElseStatement	else		4666534	0					
ANR	4666558	ReturnStatement	"return to_ip_string ( buf , len ) ;"	394:2:8384:8413	4666534	0	True				
ANR	4666559	CallExpression	"to_ip_string ( buf , len )"		4666534	0					
ANR	4666560	Callee	to_ip_string		4666534	0					
ANR	4666561	Identifier	to_ip_string		4666534	0					
ANR	4666562	ArgumentList	buf		4666534	1					
ANR	4666563	Argument	buf		4666534	0					
ANR	4666564	Identifier	buf		4666534	0					
ANR	4666565	Argument	len		4666534	1					
ANR	4666566	Identifier	len		4666534	0					
ANR	4666567	ReturnType	const char *		4666534	1					
ANR	4666568	Identifier	condor_sockaddr :: to_ip_string_ex		4666534	2					
ANR	4666569	ParameterList	"char * buf , int len"		4666534	3					
ANR	4666570	Parameter	char * buf	388:45:8243:8251	4666534	0	True				
ANR	4666571	ParameterType	char *		4666534	0					
ANR	4666572	Identifier	buf		4666534	1					
ANR	4666573	Parameter	int len	388:56:8254:8260	4666534	1	True				
ANR	4666574	ParameterType	int		4666534	0					
ANR	4666575	Identifier	len		4666534	1					
ANR	4666576	CFGEntryNode	ENTRY		4666534		True				
ANR	4666577	CFGExitNode	EXIT		4666534		True				
ANR	4666578	Symbol	buf		4666534						
ANR	4666579	Symbol	len		4666534						
ANR	4666580	Symbol	get_local_ipaddr		4666534						
ANR	4666581	Symbol	to_ip_string		4666534						
ANR	4666582	Symbol	is_addr_any		4666534						
ANR	4666583	Symbol	get_local_ipaddr ( ) . to_ip_string		4666534						
ANR	4666584	Function	condor_sockaddr :: is_valid	397:0:8418:8819							
ANR	4666585	FunctionDef	condor_sockaddr :: is_valid ()		4666584	0					
ANR	4666586	CompoundStatement		398:0:8457:8819	4666584	0					
ANR	4666587	ReturnStatement	return v4 . sin_family == AF_INET || v6 . sin6_family == AF_INET6 ;	404:1:8756:8817	4666584	0	True				
ANR	4666588	OrExpression	v4 . sin_family == AF_INET || v6 . sin6_family == AF_INET6		4666584	0		||			
ANR	4666589	EqualityExpression	v4 . sin_family == AF_INET		4666584	0		==			
ANR	4666590	MemberAccess	v4 . sin_family		4666584	0					
ANR	4666591	Identifier	v4		4666584	0					
ANR	4666592	Identifier	sin_family		4666584	1					
ANR	4666593	Identifier	AF_INET		4666584	1					
ANR	4666594	EqualityExpression	v6 . sin6_family == AF_INET6		4666584	1		==			
ANR	4666595	MemberAccess	v6 . sin6_family		4666584	0					
ANR	4666596	Identifier	v6		4666584	0					
ANR	4666597	Identifier	sin6_family		4666584	1					
ANR	4666598	Identifier	AF_INET6		4666584	1					
ANR	4666599	ReturnType	bool		4666584	1					
ANR	4666600	Identifier	condor_sockaddr :: is_valid		4666584	2					
ANR	4666601	ParameterList			4666584	3					
ANR	4666602	CFGEntryNode	ENTRY		4666584		True				
ANR	4666603	CFGExitNode	EXIT		4666584		True				
ANR	4666604	Symbol	v6		4666584						
ANR	4666605	Symbol	v4 . sin_family		4666584						
ANR	4666606	Symbol	AF_INET		4666584						
ANR	4666607	Symbol	v6 . sin6_family		4666584						
ANR	4666608	Symbol	AF_INET6		4666584						
ANR	4666609	Symbol	v4		4666584						
ANR	4666610	Function	condor_sockaddr :: is_private_network	407:0:8822:9213							
ANR	4666611	FunctionDef	condor_sockaddr :: is_private_network ()		4666610	0					
ANR	4666612	CompoundStatement		408:0:8871:9213	4666610	0					
ANR	4666613	IfStatement	if ( is_ipv4 ( ) )		4666610	0					
ANR	4666614	Condition	is_ipv4 ( )	409:5:8878:8886	4666610	0	True				
ANR	4666615	CallExpression	is_ipv4 ( )		4666610	0					
ANR	4666616	Callee	is_ipv4		4666610	0					
ANR	4666617	Identifier	is_ipv4		4666610	0					
ANR	4666618	ArgumentList			4666610	1					
ANR	4666619	CompoundStatement		3:2:21:63	4666610	1					
ANR	4666620	IdentifierDeclStatement	uint32_t ip = ( uint32_t ) v4 . sin_addr . s_addr ;	410:2:8893:8935	4666610	0	True				
ANR	4666621	IdentifierDecl	ip = ( uint32_t ) v4 . sin_addr . s_addr		4666610	0					
ANR	4666622	IdentifierDeclType	uint32_t		4666610	0					
ANR	4666623	Identifier	ip		4666610	1					
ANR	4666624	AssignmentExpression	ip = ( uint32_t ) v4 . sin_addr . s_addr		4666610	2		=			
ANR	4666625	Identifier	ip		4666610	0					
ANR	4666626	CastExpression	( uint32_t ) v4 . sin_addr . s_addr		4666610	1					
ANR	4666627	CastTarget	uint32_t		4666610	0					
ANR	4666628	MemberAccess	v4 . sin_addr . s_addr		4666610	1					
ANR	4666629	MemberAccess	v4 . sin_addr		4666610	0					
ANR	4666630	Identifier	v4		4666610	0					
ANR	4666631	Identifier	sin_addr		4666610	1					
ANR	4666632	Identifier	s_addr		4666610	1					
ANR	4666633	ReturnStatement	return ( ( ip & 0xFF000000 ) == 0x0A000000 || ( ip & 0xFFF00000 ) == 0xAC100000 || ( ip & 0xFFFF0000 ) == 0xC0A80000 ) ;	411:2:8939:9088	4666610	1	True				
ANR	4666634	OrExpression	( ip & 0xFF000000 ) == 0x0A000000 || ( ip & 0xFFF00000 ) == 0xAC100000 || ( ip & 0xFFFF0000 ) == 0xC0A80000		4666610	0		||			
ANR	4666635	EqualityExpression	( ip & 0xFF000000 ) == 0x0A000000		4666610	0		==			
ANR	4666636	BitAndExpression	ip & 0xFF000000		4666610	0		&			
ANR	4666637	Identifier	ip		4666610	0					
ANR	4666638	PrimaryExpression	0xFF000000		4666610	1					
ANR	4666639	PrimaryExpression	0x0A000000		4666610	1					
ANR	4666640	OrExpression	( ip & 0xFFF00000 ) == 0xAC100000 || ( ip & 0xFFFF0000 ) == 0xC0A80000		4666610	1		||			
ANR	4666641	EqualityExpression	( ip & 0xFFF00000 ) == 0xAC100000		4666610	0		==			
ANR	4666642	BitAndExpression	ip & 0xFFF00000		4666610	0		&			
ANR	4666643	Identifier	ip		4666610	0					
ANR	4666644	PrimaryExpression	0xFFF00000		4666610	1					
ANR	4666645	PrimaryExpression	0xAC100000		4666610	1					
ANR	4666646	EqualityExpression	( ip & 0xFFFF0000 ) == 0xC0A80000		4666610	1		==			
ANR	4666647	BitAndExpression	ip & 0xFFFF0000		4666610	0		&			
ANR	4666648	Identifier	ip		4666610	0					
ANR	4666649	PrimaryExpression	0xFFFF0000		4666610	1					
ANR	4666650	PrimaryExpression	0xC0A80000		4666610	1					
ANR	4666651	ElseStatement	else		4666610	0					
ANR	4666652	IfStatement	if ( is_ipv6 ( ) )		4666610	0					
ANR	4666653	Condition	is_ipv6 ( )	415:10:9123:9131	4666610	0	True				
ANR	4666654	CallExpression	is_ipv6 ( )		4666610	0					
ANR	4666655	Callee	is_ipv6		4666610	0					
ANR	4666656	Identifier	is_ipv6		4666610	0					
ANR	4666657	ArgumentList			4666610	1					
ANR	4666658	CompoundStatement		8:21:262:262	4666610	1					
ANR	4666659	ReturnStatement	return IN6_IS_ADDR_LINKLOCAL ( & v6 . sin6_addr ) ;	416:2:9138:9181	4666610	0	True				
ANR	4666660	CallExpression	IN6_IS_ADDR_LINKLOCAL ( & v6 . sin6_addr )		4666610	0					
ANR	4666661	Callee	IN6_IS_ADDR_LINKLOCAL		4666610	0					
ANR	4666662	Identifier	IN6_IS_ADDR_LINKLOCAL		4666610	0					
ANR	4666663	ArgumentList	& v6 . sin6_addr		4666610	1					
ANR	4666664	Argument	& v6 . sin6_addr		4666610	0					
ANR	4666665	UnaryOperationExpression	& v6 . sin6_addr		4666610	0					
ANR	4666666	UnaryOperator	&		4666610	0					
ANR	4666667	MemberAccess	v6 . sin6_addr		4666610	1					
ANR	4666668	Identifier	v6		4666610	0					
ANR	4666669	Identifier	sin6_addr		4666610	1					
ANR	4666670	ElseStatement	else		4666610	0					
ANR	4666671	CompoundStatement		11:6:320:320	4666610	0					
ANR	4666672	ReturnStatement	return false ;	421:1:9199:9211	4666610	1	True				
ANR	4666673	Identifier	false		4666610	0					
ANR	4666674	ReturnType	bool		4666610	1					
ANR	4666675	Identifier	condor_sockaddr :: is_private_network		4666610	2					
ANR	4666676	ParameterList			4666610	3					
ANR	4666677	CFGEntryNode	ENTRY		4666610		True				
ANR	4666678	CFGExitNode	EXIT		4666610		True				
ANR	4666679	Symbol	v6		4666610						
ANR	4666680	Symbol	v4 . sin_addr . s_addr		4666610						
ANR	4666681	Symbol	ip		4666610						
ANR	4666682	Symbol	v4 . sin_addr		4666610						
ANR	4666683	Symbol	& v6 . sin6_addr		4666610						
ANR	4666684	Symbol	false		4666610						
ANR	4666685	Symbol	is_ipv6		4666610						
ANR	4666686	Symbol	& v6		4666610						
ANR	4666687	Symbol	is_ipv4		4666610						
ANR	4666688	Symbol	v4		4666610						
ANR	4666689	Symbol	IN6_IS_ADDR_LINKLOCAL		4666610						
ANR	4666690	Function	condor_sockaddr :: set_ipv4	424:0:9216:9277							
ANR	4666691	FunctionDef	condor_sockaddr :: set_ipv4 ()		4666690	0					
ANR	4666692	CompoundStatement		424:33:9249:9277	4666690	0					
ANR	4666693	ExpressionStatement	v4 . sin_family = AF_INET	425:1:9252:9275	4666690	0	True				
ANR	4666694	AssignmentExpression	v4 . sin_family = AF_INET		4666690	0		=			
ANR	4666695	MemberAccess	v4 . sin_family		4666690	0					
ANR	4666696	Identifier	v4		4666690	0					
ANR	4666697	Identifier	sin_family		4666690	1					
ANR	4666698	Identifier	AF_INET		4666690	1					
ANR	4666699	ReturnType	void		4666690	1					
ANR	4666700	Identifier	condor_sockaddr :: set_ipv4		4666690	2					
ANR	4666701	ParameterList			4666690	3					
ANR	4666702	CFGEntryNode	ENTRY		4666690		True				
ANR	4666703	CFGExitNode	EXIT		4666690		True				
ANR	4666704	Symbol	v4 . sin_family		4666690						
ANR	4666705	Symbol	AF_INET		4666690						
ANR	4666706	Symbol	v4		4666690						
ANR	4666707	Function	condor_sockaddr :: set_ipv6	428:0:9280:9343							
ANR	4666708	FunctionDef	condor_sockaddr :: set_ipv6 ()		4666707	0					
ANR	4666709	CompoundStatement		428:33:9313:9343	4666707	0					
ANR	4666710	ExpressionStatement	v6 . sin6_family = AF_INET6	429:1:9316:9341	4666707	0	True				
ANR	4666711	AssignmentExpression	v6 . sin6_family = AF_INET6		4666707	0		=			
ANR	4666712	MemberAccess	v6 . sin6_family		4666707	0					
ANR	4666713	Identifier	v6		4666707	0					
ANR	4666714	Identifier	sin6_family		4666707	1					
ANR	4666715	Identifier	AF_INET6		4666707	1					
ANR	4666716	ReturnType	void		4666707	1					
ANR	4666717	Identifier	condor_sockaddr :: set_ipv6		4666707	2					
ANR	4666718	ParameterList			4666707	3					
ANR	4666719	CFGEntryNode	ENTRY		4666707		True				
ANR	4666720	CFGExitNode	EXIT		4666707		True				
ANR	4666721	Symbol	v6		4666707						
ANR	4666722	Symbol	v6 . sin6_family		4666707						
ANR	4666723	Symbol	AF_INET6		4666707						
ANR	4666724	Function	condor_sockaddr :: get_aftype	432:0:9346:9481							
ANR	4666725	FunctionDef	condor_sockaddr :: get_aftype ()		4666724	0					
ANR	4666726	CompoundStatement		432:40:9386:9481	4666724	0					
ANR	4666727	IfStatement	if ( is_ipv4 ( ) )		4666724	0					
ANR	4666728	Condition	is_ipv4 ( )	433:5:9393:9401	4666724	0	True				
ANR	4666729	CallExpression	is_ipv4 ( )		4666724	0					
ANR	4666730	Callee	is_ipv4		4666724	0					
ANR	4666731	Identifier	is_ipv4		4666724	0					
ANR	4666732	ArgumentList			4666724	1					
ANR	4666733	ReturnStatement	return AF_INET ;	434:2:9406:9420	4666724	1	True				
ANR	4666734	Identifier	AF_INET		4666724	0					
ANR	4666735	ElseStatement	else		4666724	0					
ANR	4666736	IfStatement	if ( is_ipv6 ( ) )		4666724	0					
ANR	4666737	Condition	is_ipv6 ( )	435:10:9432:9440	4666724	0	True				
ANR	4666738	CallExpression	is_ipv6 ( )		4666724	0					
ANR	4666739	Callee	is_ipv6		4666724	0					
ANR	4666740	Identifier	is_ipv6		4666724	0					
ANR	4666741	ArgumentList			4666724	1					
ANR	4666742	ReturnStatement	return AF_INET6 ;	436:2:9445:9460	4666724	1	True				
ANR	4666743	Identifier	AF_INET6		4666724	0					
ANR	4666744	ReturnStatement	return AF_UNSPEC ;	437:1:9463:9479	4666724	1	True				
ANR	4666745	Identifier	AF_UNSPEC		4666724	0					
ANR	4666746	ReturnType	int		4666724	1					
ANR	4666747	Identifier	condor_sockaddr :: get_aftype		4666724	2					
ANR	4666748	ParameterList			4666724	3					
ANR	4666749	CFGEntryNode	ENTRY		4666724		True				
ANR	4666750	CFGExitNode	EXIT		4666724		True				
ANR	4666751	Symbol	AF_INET		4666724						
ANR	4666752	Symbol	is_ipv6		4666724						
ANR	4666753	Symbol	is_ipv4		4666724						
ANR	4666754	Symbol	AF_INET6		4666724						
ANR	4666755	Symbol	AF_UNSPEC		4666724						
ANR	4666756	Function	condor_sockaddr :: get_address	440:0:9484:9690							
ANR	4666757	FunctionDef	condor_sockaddr :: get_address ()		4666756	0					
ANR	4666758	CompoundStatement		440:53:9537:9690	4666756	0					
ANR	4666759	SwitchStatement	switch ( v4 . sin_family )		4666756	0					
ANR	4666760	Condition	v4 . sin_family	441:8:9547:9559	4666756	0	True				
ANR	4666761	MemberAccess	v4 . sin_family		4666756	0					
ANR	4666762	Identifier	v4		4666756	0					
ANR	4666763	Identifier	sin_family		4666756	1					
ANR	4666764	CompoundStatement		2:23:24:24	4666756	1					
ANR	4666765	Label	case AF_INET :	442:1:9565:9577	4666756	0	True				
ANR	4666766	Identifier	AF_INET		4666756	0					
ANR	4666767	ReturnStatement	return ( const uint32_t * ) & v4 . sin_addr ;	443:2:9581:9617	4666756	1	True				
ANR	4666768	CastExpression	( const uint32_t * ) & v4 . sin_addr		4666756	0					
ANR	4666769	CastTarget	const uint32_t *		4666756	0					
ANR	4666770	UnaryOperationExpression	& v4 . sin_addr		4666756	1					
ANR	4666771	UnaryOperator	&		4666756	0					
ANR	4666772	MemberAccess	v4 . sin_addr		4666756	1					
ANR	4666773	Identifier	v4		4666756	0					
ANR	4666774	Identifier	sin_addr		4666756	1					
ANR	4666775	Label	case AF_INET6 :	444:1:9620:9633	4666756	2	True				
ANR	4666776	Identifier	AF_INET6		4666756	0					
ANR	4666777	ReturnStatement	return ( const uint32_t * ) & v6 . sin6_addr ;	445:2:9637:9674	4666756	3	True				
ANR	4666778	CastExpression	( const uint32_t * ) & v6 . sin6_addr		4666756	0					
ANR	4666779	CastTarget	const uint32_t *		4666756	0					
ANR	4666780	UnaryOperationExpression	& v6 . sin6_addr		4666756	1					
ANR	4666781	UnaryOperator	&		4666756	0					
ANR	4666782	MemberAccess	v6 . sin6_addr		4666756	1					
ANR	4666783	Identifier	v6		4666756	0					
ANR	4666784	Identifier	sin6_addr		4666756	1					
ANR	4666785	ReturnStatement	return 0 ;	447:1:9680:9688	4666756	1	True				
ANR	4666786	PrimaryExpression	0		4666756	0					
ANR	4666787	ReturnType	const uint32_t *		4666756	1					
ANR	4666788	Identifier	condor_sockaddr :: get_address		4666756	2					
ANR	4666789	ParameterList			4666756	3					
ANR	4666790	CFGEntryNode	ENTRY		4666756		True				
ANR	4666791	CFGExitNode	EXIT		4666756		True				
ANR	4666792	Symbol	v6		4666756						
ANR	4666793	Symbol	v4 . sin_family		4666756						
ANR	4666794	Symbol	& v6 . sin6_addr		4666756						
ANR	4666795	Symbol	& v4		4666756						
ANR	4666796	Symbol	& v6		4666756						
ANR	4666797	Symbol	& v4 . sin_addr		4666756						
ANR	4666798	Symbol	v4		4666756						
ANR	4666799	Function	condor_sockaddr :: get_address_len	450:0:9693:9834							
ANR	4666800	FunctionDef	condor_sockaddr :: get_address_len ()		4666799	0					
ANR	4666801	CompoundStatement		450:45:9738:9834	4666799	0					
ANR	4666802	SwitchStatement	switch ( v4 . sin_family )		4666799	0					
ANR	4666803	Condition	v4 . sin_family	451:8:9748:9760	4666799	0	True				
ANR	4666804	MemberAccess	v4 . sin_family		4666799	0					
ANR	4666805	Identifier	v4		4666799	0					
ANR	4666806	Identifier	sin_family		4666799	1					
ANR	4666807	CompoundStatement		2:23:24:24	4666799	1					
ANR	4666808	Label	case AF_INET :	452:1:9766:9778	4666799	0	True				
ANR	4666809	Identifier	AF_INET		4666799	0					
ANR	4666810	ReturnStatement	return 1 ;	453:2:9782:9790	4666799	1	True				
ANR	4666811	PrimaryExpression	1		4666799	0					
ANR	4666812	Label	case AF_INET6 :	454:1:9793:9806	4666799	2	True				
ANR	4666813	Identifier	AF_INET6		4666799	0					
ANR	4666814	ReturnStatement	return 4 ;	455:2:9810:9818	4666799	3	True				
ANR	4666815	PrimaryExpression	4		4666799	0					
ANR	4666816	ReturnStatement	return 0 ;	457:1:9824:9832	4666799	1	True				
ANR	4666817	PrimaryExpression	0		4666799	0					
ANR	4666818	ReturnType	int		4666799	1					
ANR	4666819	Identifier	condor_sockaddr :: get_address_len		4666799	2					
ANR	4666820	ParameterList			4666799	3					
ANR	4666821	CFGEntryNode	ENTRY		4666799		True				
ANR	4666822	CFGExitNode	EXIT		4666799		True				
ANR	4666823	Symbol	v4 . sin_family		4666799						
ANR	4666824	Symbol	v4		4666799						
ANR	4666825	Function	condor_sockaddr :: to_ipv6_address	460:0:9837:10179							
ANR	4666826	FunctionDef	condor_sockaddr :: to_ipv6_address ()		4666825	0					
ANR	4666827	CompoundStatement		461:0:9887:10179	4666825	0					
ANR	4666828	IfStatement	if ( is_ipv6 ( ) )		4666825	0					
ANR	4666829	Condition	is_ipv6 ( )	462:5:9894:9902	4666825	0	True				
ANR	4666830	CallExpression	is_ipv6 ( )		4666825	0					
ANR	4666831	Callee	is_ipv6		4666825	0					
ANR	4666832	Identifier	is_ipv6		4666825	0					
ANR	4666833	ArgumentList			4666825	1					
ANR	4666834	ReturnStatement	return v6 . sin6_addr ;	462:16:9905:9924	4666825	1	True				
ANR	4666835	MemberAccess	v6 . sin6_addr		4666825	0					
ANR	4666836	Identifier	v6		4666825	0					
ANR	4666837	Identifier	sin6_addr		4666825	1					
ANR	4666838	IdentifierDeclStatement	in6_addr ret ;	463:1:9927:9939	4666825	1	True				
ANR	4666839	IdentifierDecl	ret		4666825	0					
ANR	4666840	IdentifierDeclType	in6_addr		4666825	0					
ANR	4666841	Identifier	ret		4666825	1					
ANR	4666842	IdentifierDeclStatement	uint32_t * addr = ( uint32_t * ) & ret ;	466:1:10047:10079	4666825	2	True				
ANR	4666843	IdentifierDecl	* addr = ( uint32_t * ) & ret		4666825	0					
ANR	4666844	IdentifierDeclType	uint32_t *		4666825	0					
ANR	4666845	Identifier	addr		4666825	1					
ANR	4666846	AssignmentExpression	* addr = ( uint32_t * ) & ret		4666825	2		=			
ANR	4666847	Identifier	addr		4666825	0					
ANR	4666848	CastExpression	( uint32_t * ) & ret		4666825	1					
ANR	4666849	CastTarget	uint32_t *		4666825	0					
ANR	4666850	UnaryOperationExpression	& ret		4666825	1					
ANR	4666851	UnaryOperator	&		4666825	0					
ANR	4666852	Identifier	ret		4666825	1					
ANR	4666853	ExpressionStatement	addr [ 0 ] = 0	467:1:10082:10093	4666825	3	True				
ANR	4666854	AssignmentExpression	addr [ 0 ] = 0		4666825	0		=			
ANR	4666855	ArrayIndexing	addr [ 0 ]		4666825	0					
ANR	4666856	Identifier	addr		4666825	0					
ANR	4666857	PrimaryExpression	0		4666825	1					
ANR	4666858	PrimaryExpression	0		4666825	1					
ANR	4666859	ExpressionStatement	addr [ 1 ] = 0	468:1:10096:10107	4666825	4	True				
ANR	4666860	AssignmentExpression	addr [ 1 ] = 0		4666825	0		=			
ANR	4666861	ArrayIndexing	addr [ 1 ]		4666825	0					
ANR	4666862	Identifier	addr		4666825	0					
ANR	4666863	PrimaryExpression	1		4666825	1					
ANR	4666864	PrimaryExpression	0		4666825	1					
ANR	4666865	ExpressionStatement	addr [ 2 ] = htonl ( 0xffff )	469:1:10110:10133	4666825	5	True				
ANR	4666866	AssignmentExpression	addr [ 2 ] = htonl ( 0xffff )		4666825	0		=			
ANR	4666867	ArrayIndexing	addr [ 2 ]		4666825	0					
ANR	4666868	Identifier	addr		4666825	0					
ANR	4666869	PrimaryExpression	2		4666825	1					
ANR	4666870	CallExpression	htonl ( 0xffff )		4666825	1					
ANR	4666871	Callee	htonl		4666825	0					
ANR	4666872	Identifier	htonl		4666825	0					
ANR	4666873	ArgumentList	0xffff		4666825	1					
ANR	4666874	Argument	0xffff		4666825	0					
ANR	4666875	PrimaryExpression	0xffff		4666825	0					
ANR	4666876	ExpressionStatement	addr [ 3 ] = v4 . sin_addr . s_addr	470:1:10136:10164	4666825	6	True				
ANR	4666877	AssignmentExpression	addr [ 3 ] = v4 . sin_addr . s_addr		4666825	0		=			
ANR	4666878	ArrayIndexing	addr [ 3 ]		4666825	0					
ANR	4666879	Identifier	addr		4666825	0					
ANR	4666880	PrimaryExpression	3		4666825	1					
ANR	4666881	MemberAccess	v4 . sin_addr . s_addr		4666825	1					
ANR	4666882	MemberAccess	v4 . sin_addr		4666825	0					
ANR	4666883	Identifier	v4		4666825	0					
ANR	4666884	Identifier	sin_addr		4666825	1					
ANR	4666885	Identifier	s_addr		4666825	1					
ANR	4666886	ReturnStatement	return ret ;	471:1:10167:10177	4666825	7	True				
ANR	4666887	Identifier	ret		4666825	0					
ANR	4666888	ReturnType	in6_addr		4666825	1					
ANR	4666889	Identifier	condor_sockaddr :: to_ipv6_address		4666825	2					
ANR	4666890	ParameterList			4666825	3					
ANR	4666891	CFGEntryNode	ENTRY		4666825		True				
ANR	4666892	CFGExitNode	EXIT		4666825		True				
ANR	4666893	Symbol	v6		4666825						
ANR	4666894	Symbol	ret		4666825						
ANR	4666895	Symbol	& ret		4666825						
ANR	4666896	Symbol	v4 . sin_addr . s_addr		4666825						
ANR	4666897	Symbol	v4 . sin_addr		4666825						
ANR	4666898	Symbol	is_ipv6		4666825						
ANR	4666899	Symbol	* addr		4666825						
ANR	4666900	Symbol	addr		4666825						
ANR	4666901	Symbol	v6 . sin6_addr		4666825						
ANR	4666902	Symbol	htonl		4666825						
ANR	4666903	Symbol	v4		4666825						
ANR	4666904	Function	condor_sockaddr :: convert_to_ipv6	474:0:10182:10424							
ANR	4666905	FunctionDef	condor_sockaddr :: convert_to_ipv6 ()		4666904	0					
ANR	4666906	CompoundStatement		474:40:10222:10424	4666904	0					
ANR	4666907	IfStatement	if ( ! is_ipv4 ( ) )		4666904	0					
ANR	4666908	Condition	! is_ipv4 ( )	476:5:10269:10278	4666904	0	True				
ANR	4666909	UnaryOperationExpression	! is_ipv4 ( )		4666904	0					
ANR	4666910	UnaryOperator	!		4666904	0					
ANR	4666911	CallExpression	is_ipv4 ( )		4666904	1					
ANR	4666912	Callee	is_ipv4		4666904	0					
ANR	4666913	Identifier	is_ipv4		4666904	0					
ANR	4666914	ArgumentList			4666904	1					
ANR	4666915	ReturnStatement	return ;	477:2:10283:10289	4666904	1	True				
ANR	4666916	IdentifierDeclStatement	in6_addr addr = to_ipv6_address ( ) ;	478:1:10292:10325	4666904	1	True				
ANR	4666917	IdentifierDecl	addr = to_ipv6_address ( )		4666904	0					
ANR	4666918	IdentifierDeclType	in6_addr		4666904	0					
ANR	4666919	Identifier	addr		4666904	1					
ANR	4666920	AssignmentExpression	addr = to_ipv6_address ( )		4666904	2		=			
ANR	4666921	Identifier	addr		4666904	0					
ANR	4666922	CallExpression	to_ipv6_address ( )		4666904	1					
ANR	4666923	Callee	to_ipv6_address		4666904	0					
ANR	4666924	Identifier	to_ipv6_address		4666904	0					
ANR	4666925	ArgumentList			4666904	1					
ANR	4666926	IdentifierDeclStatement	unsigned short port = get_port ( ) ;	479:1:10328:10360	4666904	2	True				
ANR	4666927	IdentifierDecl	port = get_port ( )		4666904	0					
ANR	4666928	IdentifierDeclType	unsigned short		4666904	0					
ANR	4666929	Identifier	port		4666904	1					
ANR	4666930	AssignmentExpression	port = get_port ( )		4666904	2		=			
ANR	4666931	Identifier	port		4666904	0					
ANR	4666932	CallExpression	get_port ( )		4666904	1					
ANR	4666933	Callee	get_port		4666904	0					
ANR	4666934	Identifier	get_port		4666904	0					
ANR	4666935	ArgumentList			4666904	1					
ANR	4666936	ExpressionStatement	clear ( )	480:1:10363:10370	4666904	3	True				
ANR	4666937	CallExpression	clear ( )		4666904	0					
ANR	4666938	Callee	clear		4666904	0					
ANR	4666939	Identifier	clear		4666904	0					
ANR	4666940	ArgumentList			4666904	1					
ANR	4666941	ExpressionStatement	set_ipv6 ( )	481:1:10373:10383	4666904	4	True				
ANR	4666942	CallExpression	set_ipv6 ( )		4666904	0					
ANR	4666943	Callee	set_ipv6		4666904	0					
ANR	4666944	Identifier	set_ipv6		4666904	0					
ANR	4666945	ArgumentList			4666904	1					
ANR	4666946	ExpressionStatement	set_port ( port )	482:1:10386:10400	4666904	5	True				
ANR	4666947	CallExpression	set_port ( port )		4666904	0					
ANR	4666948	Callee	set_port		4666904	0					
ANR	4666949	Identifier	set_port		4666904	0					
ANR	4666950	ArgumentList	port		4666904	1					
ANR	4666951	Argument	port		4666904	0					
ANR	4666952	Identifier	port		4666904	0					
ANR	4666953	ExpressionStatement	v6 . sin6_addr = addr	483:1:10403:10422	4666904	6	True				
ANR	4666954	AssignmentExpression	v6 . sin6_addr = addr		4666904	0		=			
ANR	4666955	MemberAccess	v6 . sin6_addr		4666904	0					
ANR	4666956	Identifier	v6		4666904	0					
ANR	4666957	Identifier	sin6_addr		4666904	1					
ANR	4666958	Identifier	addr		4666904	1					
ANR	4666959	ReturnType	void		4666904	1					
ANR	4666960	Identifier	condor_sockaddr :: convert_to_ipv6		4666904	2					
ANR	4666961	ParameterList			4666904	3					
ANR	4666962	CFGEntryNode	ENTRY		4666904		True				
ANR	4666963	CFGExitNode	EXIT		4666904		True				
ANR	4666964	Symbol	v6		4666904						
ANR	4666965	Symbol	to_ipv6_address		4666904						
ANR	4666966	Symbol	get_port		4666904						
ANR	4666967	Symbol	port		4666904						
ANR	4666968	Symbol	addr		4666904						
ANR	4666969	Symbol	is_ipv4		4666904						
ANR	4666970	Symbol	v6 . sin6_addr		4666904						
ANR	4666971	Function	condor_sockaddr :: compare_address	486:0:10427:10814							
ANR	4666972	FunctionDef	condor_sockaddr :: compare_address (const condor_sockaddr & addr)		4666971	0					
ANR	4666973	CompoundStatement		487:0:10500:10814	4666971	0					
ANR	4666974	IfStatement	if ( is_ipv4 ( ) )		4666971	0					
ANR	4666975	Condition	is_ipv4 ( )	488:5:10507:10515	4666971	0	True				
ANR	4666976	CallExpression	is_ipv4 ( )		4666971	0					
ANR	4666977	Callee	is_ipv4		4666971	0					
ANR	4666978	Identifier	is_ipv4		4666971	0					
ANR	4666979	ArgumentList			4666971	1					
ANR	4666980	CompoundStatement		2:16:17:17	4666971	1					
ANR	4666981	IfStatement	if ( ! addr . is_ipv4 ( ) )		4666971	0					
ANR	4666982	Condition	! addr . is_ipv4 ( )	489:6:10526:10540	4666971	0	True				
ANR	4666983	UnaryOperationExpression	! addr . is_ipv4 ( )		4666971	0					
ANR	4666984	UnaryOperator	!		4666971	0					
ANR	4666985	CallExpression	addr . is_ipv4 ( )		4666971	1					
ANR	4666986	Callee	addr . is_ipv4		4666971	0					
ANR	4666987	MemberAccess	addr . is_ipv4		4666971	0					
ANR	4666988	Identifier	addr		4666971	0					
ANR	4666989	Identifier	is_ipv4		4666971	1					
ANR	4666990	ArgumentList			4666971	1					
ANR	4666991	ReturnStatement	return false ;	490:3:10546:10558	4666971	1	True				
ANR	4666992	Identifier	false		4666971	0					
ANR	4666993	ReturnStatement	return v4 . sin_addr . s_addr == addr . v4 . sin_addr . s_addr ;	491:2:10562:10614	4666971	1	True				
ANR	4666994	EqualityExpression	v4 . sin_addr . s_addr == addr . v4 . sin_addr . s_addr		4666971	0		==			
ANR	4666995	MemberAccess	v4 . sin_addr . s_addr		4666971	0					
ANR	4666996	MemberAccess	v4 . sin_addr		4666971	0					
ANR	4666997	Identifier	v4		4666971	0					
ANR	4666998	Identifier	sin_addr		4666971	1					
ANR	4666999	Identifier	s_addr		4666971	1					
ANR	4667000	MemberAccess	addr . v4 . sin_addr . s_addr		4666971	1					
ANR	4667001	MemberAccess	addr . v4 . sin_addr		4666971	0					
ANR	4667002	MemberAccess	addr . v4		4666971	0					
ANR	4667003	Identifier	addr		4666971	0					
ANR	4667004	Identifier	v4		4666971	1					
ANR	4667005	Identifier	sin_addr		4666971	1					
ANR	4667006	Identifier	s_addr		4666971	1					
ANR	4667007	ElseStatement	else		4666971	0					
ANR	4667008	IfStatement	if ( is_ipv6 ( ) )		4666971	0					
ANR	4667009	Condition	is_ipv6 ( )	492:12:10628:10636	4666971	0	True				
ANR	4667010	CallExpression	is_ipv6 ( )		4666971	0					
ANR	4667011	Callee	is_ipv6		4666971	0					
ANR	4667012	Identifier	is_ipv6		4666971	0					
ANR	4667013	ArgumentList			4666971	1					
ANR	4667014	CompoundStatement		6:23:138:138	4666971	1					
ANR	4667015	IfStatement	if ( ! addr . is_ipv6 ( ) )		4666971	0					
ANR	4667016	Condition	! addr . is_ipv6 ( )	493:6:10647:10661	4666971	0	True				
ANR	4667017	UnaryOperationExpression	! addr . is_ipv6 ( )		4666971	0					
ANR	4667018	UnaryOperator	!		4666971	0					
ANR	4667019	CallExpression	addr . is_ipv6 ( )		4666971	1					
ANR	4667020	Callee	addr . is_ipv6		4666971	0					
ANR	4667021	MemberAccess	addr . is_ipv6		4666971	0					
ANR	4667022	Identifier	addr		4666971	0					
ANR	4667023	Identifier	is_ipv6		4666971	1					
ANR	4667024	ArgumentList			4666971	1					
ANR	4667025	ReturnStatement	return false ;	494:3:10667:10679	4666971	1	True				
ANR	4667026	Identifier	false		4666971	0					
ANR	4667027	ReturnStatement	"return memcmp ( ( const void * ) & v6 . sin6_addr , ( const void * ) & addr . v6 . sin6_addr , sizeof ( in6_addr ) ) == 0 ;"	495:2:10683:10794	4666971	1	True				
ANR	4667028	EqualityExpression	"memcmp ( ( const void * ) & v6 . sin6_addr , ( const void * ) & addr . v6 . sin6_addr , sizeof ( in6_addr ) ) == 0"		4666971	0		==			
ANR	4667029	CallExpression	"memcmp ( ( const void * ) & v6 . sin6_addr , ( const void * ) & addr . v6 . sin6_addr , sizeof ( in6_addr ) )"		4666971	0					
ANR	4667030	Callee	memcmp		4666971	0					
ANR	4667031	Identifier	memcmp		4666971	0					
ANR	4667032	ArgumentList	( const void * ) & v6 . sin6_addr		4666971	1					
ANR	4667033	Argument	( const void * ) & v6 . sin6_addr		4666971	0					
ANR	4667034	CastExpression	( const void * ) & v6 . sin6_addr		4666971	0					
ANR	4667035	CastTarget	const void *		4666971	0					
ANR	4667036	UnaryOperationExpression	& v6 . sin6_addr		4666971	1					
ANR	4667037	UnaryOperator	&		4666971	0					
ANR	4667038	MemberAccess	v6 . sin6_addr		4666971	1					
ANR	4667039	Identifier	v6		4666971	0					
ANR	4667040	Identifier	sin6_addr		4666971	1					
ANR	4667041	Argument	( const void * ) & addr . v6 . sin6_addr		4666971	1					
ANR	4667042	CastExpression	( const void * ) & addr . v6 . sin6_addr		4666971	0					
ANR	4667043	CastTarget	const void *		4666971	0					
ANR	4667044	UnaryOperationExpression	& addr . v6 . sin6_addr		4666971	1					
ANR	4667045	UnaryOperator	&		4666971	0					
ANR	4667046	MemberAccess	addr . v6 . sin6_addr		4666971	1					
ANR	4667047	MemberAccess	addr . v6		4666971	0					
ANR	4667048	Identifier	addr		4666971	0					
ANR	4667049	Identifier	v6		4666971	1					
ANR	4667050	Identifier	sin6_addr		4666971	1					
ANR	4667051	Argument	sizeof ( in6_addr )		4666971	2					
ANR	4667052	SizeofExpression	sizeof ( in6_addr )		4666971	0					
ANR	4667053	Sizeof	sizeof		4666971	0					
ANR	4667054	SizeofOperand	in6_addr		4666971	1					
ANR	4667055	PrimaryExpression	0		4666971	1					
ANR	4667056	ReturnStatement	return false ;	499:1:10800:10812	4666971	1	True				
ANR	4667057	Identifier	false		4666971	0					
ANR	4667058	ReturnType	bool		4666971	1					
ANR	4667059	Identifier	condor_sockaddr :: compare_address		4666971	2					
ANR	4667060	ParameterList	const condor_sockaddr & addr		4666971	3					
ANR	4667061	Parameter	const condor_sockaddr & addr	486:38:10465:10491	4666971	0	True				
ANR	4667062	ParameterType	const condor_sockaddr &		4666971	0					
ANR	4667063	Identifier	addr		4666971	1					
ANR	4667064	CFGEntryNode	ENTRY		4666971		True				
ANR	4667065	CFGExitNode	EXIT		4666971		True				
ANR	4667066	Symbol	v6		4666971						
ANR	4667067	Symbol	& addr		4666971						
ANR	4667068	Symbol	v4 . sin_addr . s_addr		4666971						
ANR	4667069	Symbol	false		4666971						
ANR	4667070	Symbol	v4 . sin_addr		4666971						
ANR	4667071	Symbol	is_ipv6		4666971						
ANR	4667072	Symbol	& v6		4666971						
ANR	4667073	Symbol	addr . v4		4666971						
ANR	4667074	Symbol	addr . v4 . sin_addr		4666971						
ANR	4667075	Symbol	is_ipv4		4666971						
ANR	4667076	Symbol	addr . v4 . sin_addr . s_addr		4666971						
ANR	4667077	Symbol	addr . is_ipv6		4666971						
ANR	4667078	Symbol	addr . is_ipv4		4666971						
ANR	4667079	Symbol	addr . v6		4666971						
ANR	4667080	Symbol	memcmp		4666971						
ANR	4667081	Symbol	& addr . v6		4666971						
ANR	4667082	Symbol	& addr . v6 . sin6_addr		4666971						
ANR	4667083	Symbol	& v6 . sin6_addr		4666971						
ANR	4667084	Symbol	addr		4666971						
ANR	4667085	Symbol	v4		4666971						
ANR	4667086	Function	operator <	507:22:10944:11126							
ANR	4667087	FunctionDef	operator < (const condor_sockaddr & rhs)		4667086	0					
ANR	4667088	CompoundStatement		508:0:10988:11126	4667086	0					
ANR	4667089	IdentifierDeclStatement	const void * l = ( const void * ) & storage ;	509:1:10991:11028	4667086	0	True				
ANR	4667090	IdentifierDecl	* l = ( const void * ) & storage		4667086	0					
ANR	4667091	IdentifierDeclType	const void *		4667086	0					
ANR	4667092	Identifier	l		4667086	1					
ANR	4667093	AssignmentExpression	* l = ( const void * ) & storage		4667086	2		=			
ANR	4667094	Identifier	l		4667086	0					
ANR	4667095	CastExpression	( const void * ) & storage		4667086	1					
ANR	4667096	CastTarget	const void *		4667086	0					
ANR	4667097	UnaryOperationExpression	& storage		4667086	1					
ANR	4667098	UnaryOperator	&		4667086	0					
ANR	4667099	Identifier	storage		4667086	1					
ANR	4667100	IdentifierDeclStatement	const void * r = ( const void * ) & rhs . storage ;	510:1:11031:11072	4667086	1	True				
ANR	4667101	IdentifierDecl	* r = ( const void * ) & rhs . storage		4667086	0					
ANR	4667102	IdentifierDeclType	const void *		4667086	0					
ANR	4667103	Identifier	r		4667086	1					
ANR	4667104	AssignmentExpression	* r = ( const void * ) & rhs . storage		4667086	2		=			
ANR	4667105	Identifier	r		4667086	0					
ANR	4667106	CastExpression	( const void * ) & rhs . storage		4667086	1					
ANR	4667107	CastTarget	const void *		4667086	0					
ANR	4667108	UnaryOperationExpression	& rhs . storage		4667086	1					
ANR	4667109	UnaryOperator	&		4667086	0					
ANR	4667110	MemberAccess	rhs . storage		4667086	1					
ANR	4667111	Identifier	rhs		4667086	0					
ANR	4667112	Identifier	storage		4667086	1					
ANR	4667113	ReturnStatement	"return memcmp ( l , r , sizeof ( sockaddr_storage ) ) < 0 ;"	511:1:11075:11124	4667086	2	True				
ANR	4667114	RelationalExpression	"memcmp ( l , r , sizeof ( sockaddr_storage ) ) < 0"		4667086	0		<			
ANR	4667115	CallExpression	"memcmp ( l , r , sizeof ( sockaddr_storage ) )"		4667086	0					
ANR	4667116	Callee	memcmp		4667086	0					
ANR	4667117	Identifier	memcmp		4667086	0					
ANR	4667118	ArgumentList	l		4667086	1					
ANR	4667119	Argument	l		4667086	0					
ANR	4667120	Identifier	l		4667086	0					
ANR	4667121	Argument	r		4667086	1					
ANR	4667122	Identifier	r		4667086	0					
ANR	4667123	Argument	sizeof ( sockaddr_storage )		4667086	2					
ANR	4667124	SizeofExpression	sizeof ( sockaddr_storage )		4667086	0					
ANR	4667125	Sizeof	sizeof		4667086	0					
ANR	4667126	SizeofOperand	sockaddr_storage		4667086	1					
ANR	4667127	PrimaryExpression	0		4667086	1					
ANR	4667128	Identifier	operator <		4667086	1					
ANR	4667129	ParameterList	const condor_sockaddr & rhs		4667086	2					
ANR	4667130	Parameter	const condor_sockaddr & rhs	507:32:10954:10979	4667086	0	True				
ANR	4667131	ParameterType	const condor_sockaddr &		4667086	0					
ANR	4667132	Identifier	rhs		4667086	1					
ANR	4667133	CFGEntryNode	ENTRY		4667086		True				
ANR	4667134	CFGExitNode	EXIT		4667086		True				
ANR	4667135	Symbol	r		4667086						
ANR	4667136	Symbol	memcmp		4667086						
ANR	4667137	Symbol	& rhs		4667086						
ANR	4667138	Symbol	& rhs . storage		4667086						
ANR	4667139	Symbol	rhs		4667086						
ANR	4667140	Symbol	l		4667086						
ANR	4667141	Symbol	& storage		4667086						
ANR	4667142	Function	operator ==	514:22:11151:11335							
ANR	4667143	FunctionDef	operator == (const condor_sockaddr & rhs)		4667142	0					
ANR	4667144	CompoundStatement		515:0:11196:11335	4667142	0					
ANR	4667145	IdentifierDeclStatement	const void * l = ( const void * ) & storage ;	516:1:11199:11236	4667142	0	True				
ANR	4667146	IdentifierDecl	* l = ( const void * ) & storage		4667142	0					
ANR	4667147	IdentifierDeclType	const void *		4667142	0					
ANR	4667148	Identifier	l		4667142	1					
ANR	4667149	AssignmentExpression	* l = ( const void * ) & storage		4667142	2		=			
ANR	4667150	Identifier	l		4667142	0					
ANR	4667151	CastExpression	( const void * ) & storage		4667142	1					
ANR	4667152	CastTarget	const void *		4667142	0					
ANR	4667153	UnaryOperationExpression	& storage		4667142	1					
ANR	4667154	UnaryOperator	&		4667142	0					
ANR	4667155	Identifier	storage		4667142	1					
ANR	4667156	IdentifierDeclStatement	const void * r = ( const void * ) & rhs . storage ;	517:1:11239:11280	4667142	1	True				
ANR	4667157	IdentifierDecl	* r = ( const void * ) & rhs . storage		4667142	0					
ANR	4667158	IdentifierDeclType	const void *		4667142	0					
ANR	4667159	Identifier	r		4667142	1					
ANR	4667160	AssignmentExpression	* r = ( const void * ) & rhs . storage		4667142	2		=			
ANR	4667161	Identifier	r		4667142	0					
ANR	4667162	CastExpression	( const void * ) & rhs . storage		4667142	1					
ANR	4667163	CastTarget	const void *		4667142	0					
ANR	4667164	UnaryOperationExpression	& rhs . storage		4667142	1					
ANR	4667165	UnaryOperator	&		4667142	0					
ANR	4667166	MemberAccess	rhs . storage		4667142	1					
ANR	4667167	Identifier	rhs		4667142	0					
ANR	4667168	Identifier	storage		4667142	1					
ANR	4667169	ReturnStatement	"return memcmp ( l , r , sizeof ( sockaddr_storage ) ) == 0 ;"	518:1:11283:11333	4667142	2	True				
ANR	4667170	EqualityExpression	"memcmp ( l , r , sizeof ( sockaddr_storage ) ) == 0"		4667142	0		==			
ANR	4667171	CallExpression	"memcmp ( l , r , sizeof ( sockaddr_storage ) )"		4667142	0					
ANR	4667172	Callee	memcmp		4667142	0					
ANR	4667173	Identifier	memcmp		4667142	0					
ANR	4667174	ArgumentList	l		4667142	1					
ANR	4667175	Argument	l		4667142	0					
ANR	4667176	Identifier	l		4667142	0					
ANR	4667177	Argument	r		4667142	1					
ANR	4667178	Identifier	r		4667142	0					
ANR	4667179	Argument	sizeof ( sockaddr_storage )		4667142	2					
ANR	4667180	SizeofExpression	sizeof ( sockaddr_storage )		4667142	0					
ANR	4667181	Sizeof	sizeof		4667142	0					
ANR	4667182	SizeofOperand	sockaddr_storage		4667142	1					
ANR	4667183	PrimaryExpression	0		4667142	1					
ANR	4667184	Identifier	operator ==		4667142	1					
ANR	4667185	ParameterList	const condor_sockaddr & rhs		4667142	2					
ANR	4667186	Parameter	const condor_sockaddr & rhs	514:33:11162:11187	4667142	0	True				
ANR	4667187	ParameterType	const condor_sockaddr &		4667142	0					
ANR	4667188	Identifier	rhs		4667142	1					
ANR	4667189	CFGEntryNode	ENTRY		4667142		True				
ANR	4667190	CFGExitNode	EXIT		4667142		True				
ANR	4667191	Symbol	r		4667142						
ANR	4667192	Symbol	memcmp		4667142						
ANR	4667193	Symbol	& rhs		4667142						
ANR	4667194	Symbol	& rhs . storage		4667142						
ANR	4667195	Symbol	rhs		4667142						
ANR	4667196	Symbol	l		4667142						
ANR	4667197	Symbol	& storage		4667142						
ANR	4667198	Function	condor_sockaddr :: is_link_local	521:0:11338:11674							
ANR	4667199	FunctionDef	condor_sockaddr :: is_link_local ()		4667198	0					
ANR	4667200	CompoundStatement		521:44:11382:11674	4667198	0					
ANR	4667201	IfStatement	if ( is_ipv4 ( ) )		4667198	0					
ANR	4667202	Condition	is_ipv4 ( )	522:5:11389:11397	4667198	0	True				
ANR	4667203	CallExpression	is_ipv4 ( )		4667198	0					
ANR	4667204	Callee	is_ipv4		4667198	0					
ANR	4667205	Identifier	is_ipv4		4667198	0					
ANR	4667206	ArgumentList			4667198	1					
ANR	4667207	CompoundStatement		4:2:58:84	4667198	1					
ANR	4667208	IdentifierDeclStatement	uint32_t mask = 0xa9fe0000 ;	524:2:11441:11467	4667198	0	True				
ANR	4667209	IdentifierDecl	mask = 0xa9fe0000		4667198	0					
ANR	4667210	IdentifierDeclType	uint32_t		4667198	0					
ANR	4667211	Identifier	mask		4667198	1					
ANR	4667212	AssignmentExpression	mask = 0xa9fe0000		4667198	2		=			
ANR	4667213	Identifier	mask		4667198	0					
ANR	4667214	PrimaryExpression	0xa9fe0000		4667198	1					
ANR	4667215	ReturnStatement	return ( ( uint32_t ) v4 . sin_addr . s_addr & mask ) == mask ;	525:2:11471:11523	4667198	1	True				
ANR	4667216	EqualityExpression	( ( uint32_t ) v4 . sin_addr . s_addr & mask ) == mask		4667198	0		==			
ANR	4667217	BitAndExpression	( uint32_t ) v4 . sin_addr . s_addr & mask		4667198	0		&			
ANR	4667218	CastExpression	( uint32_t ) v4 . sin_addr . s_addr		4667198	0					
ANR	4667219	CastTarget	uint32_t		4667198	0					
ANR	4667220	MemberAccess	v4 . sin_addr . s_addr		4667198	1					
ANR	4667221	MemberAccess	v4 . sin_addr		4667198	0					
ANR	4667222	Identifier	v4		4667198	0					
ANR	4667223	Identifier	sin_addr		4667198	1					
ANR	4667224	Identifier	s_addr		4667198	1					
ANR	4667225	Identifier	mask		4667198	1					
ANR	4667226	Identifier	mask		4667198	1					
ANR	4667227	ElseStatement	else		4667198	0					
ANR	4667228	IfStatement	if ( is_ipv6 ( ) )		4667198	0					
ANR	4667229	Condition	is_ipv6 ( )	526:12:11537:11545	4667198	0	True				
ANR	4667230	CallExpression	is_ipv6 ( )		4667198	0					
ANR	4667231	Callee	is_ipv6		4667198	0					
ANR	4667232	Identifier	is_ipv6		4667198	0					
ANR	4667233	ArgumentList			4667198	1					
ANR	4667234	CompoundStatement		6:23:165:165	4667198	1					
ANR	4667235	ReturnStatement	return v6 . sin6_addr . s6_addr [ 0 ] == 0xfe && v6 . sin6_addr . s6_addr [ 1 ] == 0x80 ;	528:2:11577:11654	4667198	0	True				
ANR	4667236	AndExpression	v6 . sin6_addr . s6_addr [ 0 ] == 0xfe && v6 . sin6_addr . s6_addr [ 1 ] == 0x80		4667198	0		&&			
ANR	4667237	EqualityExpression	v6 . sin6_addr . s6_addr [ 0 ] == 0xfe		4667198	0		==			
ANR	4667238	ArrayIndexing	v6 . sin6_addr . s6_addr [ 0 ]		4667198	0					
ANR	4667239	MemberAccess	v6 . sin6_addr . s6_addr		4667198	0					
ANR	4667240	MemberAccess	v6 . sin6_addr		4667198	0					
ANR	4667241	Identifier	v6		4667198	0					
ANR	4667242	Identifier	sin6_addr		4667198	1					
ANR	4667243	Identifier	s6_addr		4667198	1					
ANR	4667244	PrimaryExpression	0		4667198	1					
ANR	4667245	PrimaryExpression	0xfe		4667198	1					
ANR	4667246	EqualityExpression	v6 . sin6_addr . s6_addr [ 1 ] == 0x80		4667198	1		==			
ANR	4667247	ArrayIndexing	v6 . sin6_addr . s6_addr [ 1 ]		4667198	0					
ANR	4667248	MemberAccess	v6 . sin6_addr . s6_addr		4667198	0					
ANR	4667249	MemberAccess	v6 . sin6_addr		4667198	0					
ANR	4667250	Identifier	v6		4667198	0					
ANR	4667251	Identifier	sin6_addr		4667198	1					
ANR	4667252	Identifier	s6_addr		4667198	1					
ANR	4667253	PrimaryExpression	1		4667198	1					
ANR	4667254	PrimaryExpression	0x80		4667198	1					
ANR	4667255	ReturnStatement	return false ;	531:1:11660:11672	4667198	1	True				
ANR	4667256	Identifier	false		4667198	0					
ANR	4667257	ReturnType	bool		4667198	1					
ANR	4667258	Identifier	condor_sockaddr :: is_link_local		4667198	2					
ANR	4667259	ParameterList			4667198	3					
ANR	4667260	CFGEntryNode	ENTRY		4667198		True				
ANR	4667261	CFGExitNode	EXIT		4667198		True				
ANR	4667262	Symbol	v6		4667198						
ANR	4667263	Symbol	v6 . sin6_addr . s6_addr		4667198						
ANR	4667264	Symbol	v4 . sin_addr . s_addr		4667198						
ANR	4667265	Symbol	* v6		4667198						
ANR	4667266	Symbol	v4 . sin_addr		4667198						
ANR	4667267	Symbol	false		4667198						
ANR	4667268	Symbol	is_ipv6		4667198						
ANR	4667269	Symbol	is_ipv4		4667198						
ANR	4667270	Symbol	v6 . sin6_addr		4667198						
ANR	4667271	Symbol	* v6 . sin6_addr . s6_addr		4667198						
ANR	4667272	Symbol	v4		4667198						
ANR	4667273	Symbol	mask		4667198						
ANR	4667274	Symbol	* v6 . sin6_addr		4667198						
ANR	4667275	Function	condor_sockaddr :: set_scope_id	534:0:11677:11791							
ANR	4667276	FunctionDef	condor_sockaddr :: set_scope_id (uint32_t scope_id)		4667275	0					
ANR	4667277	CompoundStatement		534:54:11731:11791	4667275	0					
ANR	4667278	IfStatement	if ( ! is_ipv6 ( ) )		4667275	0					
ANR	4667279	Condition	! is_ipv6 ( )	535:5:11738:11747	4667275	0	True				
ANR	4667280	UnaryOperationExpression	! is_ipv6 ( )		4667275	0					
ANR	4667281	UnaryOperator	!		4667275	0					
ANR	4667282	CallExpression	is_ipv6 ( )		4667275	1					
ANR	4667283	Callee	is_ipv6		4667275	0					
ANR	4667284	Identifier	is_ipv6		4667275	0					
ANR	4667285	ArgumentList			4667275	1					
ANR	4667286	ReturnStatement	return ;	536:2:11752:11758	4667275	1	True				
ANR	4667287	ExpressionStatement	v6 . sin6_scope_id = scope_id	538:1:11762:11789	4667275	1	True				
ANR	4667288	AssignmentExpression	v6 . sin6_scope_id = scope_id		4667275	0		=			
ANR	4667289	MemberAccess	v6 . sin6_scope_id		4667275	0					
ANR	4667290	Identifier	v6		4667275	0					
ANR	4667291	Identifier	sin6_scope_id		4667275	1					
ANR	4667292	Identifier	scope_id		4667275	1					
ANR	4667293	ReturnType	void		4667275	1					
ANR	4667294	Identifier	condor_sockaddr :: set_scope_id		4667275	2					
ANR	4667295	ParameterList	uint32_t scope_id		4667275	3					
ANR	4667296	Parameter	uint32_t scope_id	534:35:11712:11728	4667275	0	True				
ANR	4667297	ParameterType	uint32_t		4667275	0					
ANR	4667298	Identifier	scope_id		4667275	1					
ANR	4667299	CFGEntryNode	ENTRY		4667275		True				
ANR	4667300	CFGExitNode	EXIT		4667275		True				
ANR	4667301	Symbol	v6		4667275						
ANR	4667302	Symbol	scope_id		4667275						
ANR	4667303	Symbol	is_ipv6		4667275						
ANR	4667304	Symbol	v6 . sin6_scope_id		4667275						
