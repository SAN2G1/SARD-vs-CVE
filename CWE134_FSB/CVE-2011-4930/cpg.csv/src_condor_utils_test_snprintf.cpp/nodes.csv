command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4977294	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_test_snprintf.cpp								
ANR	4977295	Function	main	24:0:867:2431							
ANR	4977296	FunctionDef	"main (int argc , char * * argv)"		4977295	0					
ANR	4977297	CompoundStatement		25:0:899:2431	4977295	0					
ANR	4977298	IdentifierDeclStatement	char output [ 11 ] ;	27:1:947:962	4977295	0	True				
ANR	4977299	IdentifierDecl	output [ 11 ]		4977295	0					
ANR	4977300	IdentifierDeclType	char [ 11 ]		4977295	0					
ANR	4977301	Identifier	output		4977295	1					
ANR	4977302	PrimaryExpression	11		4977295	2					
ANR	4977303	IdentifierDeclStatement	"char input [ ] = ""1234567890abcdefghijklmnopqrstuvwxyz"" ;"	30:1:998:1051	4977295	1	True				
ANR	4977304	IdentifierDecl	"input [ ] = ""1234567890abcdefghijklmnopqrstuvwxyz"""		4977295	0					
ANR	4977305	IdentifierDeclType	char [ ]		4977295	0					
ANR	4977306	Identifier	input		4977295	1					
ANR	4977307	AssignmentExpression	"input [ ] = ""1234567890abcdefghijklmnopqrstuvwxyz"""		4977295	2		=			
ANR	4977308	Identifier	input		4977295	0					
ANR	4977309	PrimaryExpression	"""1234567890abcdefghijklmnopqrstuvwxyz"""		4977295	1					
ANR	4977310	IdentifierDeclStatement	int num_chars ;	32:1:1055:1068	4977295	2	True				
ANR	4977311	IdentifierDecl	num_chars		4977295	0					
ANR	4977312	IdentifierDeclType	int		4977295	0					
ANR	4977313	Identifier	num_chars		4977295	1					
ANR	4977314	IdentifierDeclStatement	int reported_length ;	33:1:1071:1090	4977295	3	True				
ANR	4977315	IdentifierDecl	reported_length		4977295	0					
ANR	4977316	IdentifierDeclType	int		4977295	0					
ANR	4977317	Identifier	reported_length		4977295	1					
ANR	4977318	ExpressionStatement	output [ 0 ] = 0	35:1:1094:1107	4977295	4	True				
ANR	4977319	AssignmentExpression	output [ 0 ] = 0		4977295	0		=			
ANR	4977320	ArrayIndexing	output [ 0 ]		4977295	0					
ANR	4977321	Identifier	output		4977295	0					
ANR	4977322	PrimaryExpression	0		4977295	1					
ANR	4977323	PrimaryExpression	0		4977295	1					
ANR	4977324	ForStatement	for ( num_chars = 0 ; num_chars < 10 ; num_chars ++ )		4977295	5					
ANR	4977325	ForInit	num_chars = 0 ;	36:6:1115:1128	4977295	0	True				
ANR	4977326	AssignmentExpression	num_chars = 0		4977295	0		=			
ANR	4977327	Identifier	num_chars		4977295	0					
ANR	4977328	PrimaryExpression	0		4977295	1					
ANR	4977329	Condition	num_chars < 10	36:21:1130:1143	4977295	1	True				
ANR	4977330	RelationalExpression	num_chars < 10		4977295	0		<			
ANR	4977331	Identifier	num_chars		4977295	0					
ANR	4977332	PrimaryExpression	10		4977295	1					
ANR	4977333	PostIncDecOperationExpression	num_chars ++	36:37:1146:1156	4977295	2	True				
ANR	4977334	Identifier	num_chars		4977295	0					
ANR	4977335	IncDec	++		4977295	1					
ANR	4977336	CompoundStatement		12:50:259:259	4977295	3					
ANR	4977337	ExpressionStatement	"reported_length = snprintf ( output , num_chars + 1 , ""%s"" , input )"	39:2:1276:1336	4977295	0	True				
ANR	4977338	AssignmentExpression	"reported_length = snprintf ( output , num_chars + 1 , ""%s"" , input )"		4977295	0		=			
ANR	4977339	Identifier	reported_length		4977295	0					
ANR	4977340	CallExpression	"snprintf ( output , num_chars + 1 , ""%s"" , input )"		4977295	1					
ANR	4977341	Callee	snprintf		4977295	0					
ANR	4977342	Identifier	snprintf		4977295	0					
ANR	4977343	ArgumentList	output		4977295	1					
ANR	4977344	Argument	output		4977295	0					
ANR	4977345	Identifier	output		4977295	0					
ANR	4977346	Argument	num_chars + 1		4977295	1					
ANR	4977347	AdditiveExpression	num_chars + 1		4977295	0		+			
ANR	4977348	Identifier	num_chars		4977295	0					
ANR	4977349	PrimaryExpression	1		4977295	1					
ANR	4977350	Argument	"""%s"""		4977295	2					
ANR	4977351	PrimaryExpression	"""%s"""		4977295	0					
ANR	4977352	Argument	input		4977295	3					
ANR	4977353	Identifier	input		4977295	0					
ANR	4977354	IfStatement	if ( strlen ( output ) == num_chars )		4977295	1					
ANR	4977355	Condition	strlen ( output ) == num_chars	40:6:1344:1370	4977295	0	True				
ANR	4977356	EqualityExpression	strlen ( output ) == num_chars		4977295	0		==			
ANR	4977357	CallExpression	strlen ( output )		4977295	0					
ANR	4977358	Callee	strlen		4977295	0					
ANR	4977359	Identifier	strlen		4977295	0					
ANR	4977360	ArgumentList	output		4977295	1					
ANR	4977361	Argument	output		4977295	0					
ANR	4977362	Identifier	output		4977295	0					
ANR	4977363	Identifier	num_chars		4977295	1					
ANR	4977364	CompoundStatement		16:35:473:473	4977295	1					
ANR	4977365	ExpressionStatement	"printf ( ""PASSED: Our snprintf output %d characters, as expected\\n"" , num_chars )"	41:3:1378:1462	4977295	0	True				
ANR	4977366	CallExpression	"printf ( ""PASSED: Our snprintf output %d characters, as expected\\n"" , num_chars )"		4977295	0					
ANR	4977367	Callee	printf		4977295	0					
ANR	4977368	Identifier	printf		4977295	0					
ANR	4977369	ArgumentList	"""PASSED: Our snprintf output %d characters, as expected\\n"""		4977295	1					
ANR	4977370	Argument	"""PASSED: Our snprintf output %d characters, as expected\\n"""		4977295	0					
ANR	4977371	PrimaryExpression	"""PASSED: Our snprintf output %d characters, as expected\\n"""		4977295	0					
ANR	4977372	Argument	num_chars		4977295	1					
ANR	4977373	Identifier	num_chars		4977295	0					
ANR	4977374	ElseStatement	else		4977295	0					
ANR	4977375	CompoundStatement		19:9:573:573	4977295	0					
ANR	4977376	Statement	printf	44:3:1478:1483	4977295	0	True				
ANR	4977377	Statement	(	44:9:1484:1484	4977295	1	True				
ANR	4977378	Statement	"""FAILED: Our snprintf output %d characters instead of """	44:10:1485:1539	4977295	2	True				
ANR	4977379	Statement	"""%d characters!\\n"""	45:7:1548:1565	4977295	3	True				
ANR	4977380	Statement	","	45:25:1566:1566	4977295	4	True				
ANR	4977381	Statement	strlen	45:27:1568:1573	4977295	5	True				
ANR	4977382	Statement	(	45:33:1574:1574	4977295	6	True				
ANR	4977383	Statement	output	45:34:1575:1580	4977295	7	True				
ANR	4977384	Statement	)	45:40:1581:1581	4977295	8	True				
ANR	4977385	Statement	","	45:41:1582:1582	4977295	9	True				
ANR	4977386	Statement	num_chars	45:43:1584:1592	4977295	10	True				
ANR	4977387	Statement	)	45:52:1593:1593	4977295	11	True				
ANR	4977388	ExpressionStatement		45:53:1594:1594	4977295	12	True				
ANR	4977389	IfStatement	if ( reported_length == strlen ( input ) )		4977295	2					
ANR	4977390	Condition	reported_length == strlen ( input )	48:6:1607:1638	4977295	0	True				
ANR	4977391	EqualityExpression	reported_length == strlen ( input )		4977295	0		==			
ANR	4977392	Identifier	reported_length		4977295	0					
ANR	4977393	CallExpression	strlen ( input )		4977295	1					
ANR	4977394	Callee	strlen		4977295	0					
ANR	4977395	Identifier	strlen		4977295	0					
ANR	4977396	ArgumentList	input		4977295	1					
ANR	4977397	Argument	input		4977295	0					
ANR	4977398	Identifier	input		4977295	0					
ANR	4977399	CompoundStatement		24:40:741:741	4977295	1					
ANR	4977400	Statement	printf	49:3:1646:1651	4977295	0	True				
ANR	4977401	Statement	(	49:9:1652:1652	4977295	1	True				
ANR	4977402	Statement	"""PASSED: Our snprintf reported the desired length (%d) """	49:10:1653:1708	4977295	2	True				
ANR	4977403	Statement	"""correctly.\\n"""	50:7:1717:1730	4977295	3	True				
ANR	4977404	Statement	","	50:21:1731:1731	4977295	4	True				
ANR	4977405	Statement	reported_length	50:23:1733:1747	4977295	5	True				
ANR	4977406	Statement	)	50:38:1748:1748	4977295	6	True				
ANR	4977407	ExpressionStatement		50:39:1749:1749	4977295	7	True				
ANR	4977408	ElseStatement	else		4977295	0					
ANR	4977409	CompoundStatement		27:9:860:860	4977295	0					
ANR	4977410	ExpressionStatement	"printf ( ""FAILED: Our snprintf reported %d instead of %d.\\n"" , reported_length , strlen ( input ) )"	52:3:1765:1863	4977295	0	True				
ANR	4977411	CallExpression	"printf ( ""FAILED: Our snprintf reported %d instead of %d.\\n"" , reported_length , strlen ( input ) )"		4977295	0					
ANR	4977412	Callee	printf		4977295	0					
ANR	4977413	Identifier	printf		4977295	0					
ANR	4977414	ArgumentList	"""FAILED: Our snprintf reported %d instead of %d.\\n"""		4977295	1					
ANR	4977415	Argument	"""FAILED: Our snprintf reported %d instead of %d.\\n"""		4977295	0					
ANR	4977416	PrimaryExpression	"""FAILED: Our snprintf reported %d instead of %d.\\n"""		4977295	0					
ANR	4977417	Argument	reported_length		4977295	1					
ANR	4977418	Identifier	reported_length		4977295	0					
ANR	4977419	Argument	strlen ( input )		4977295	2					
ANR	4977420	CallExpression	strlen ( input )		4977295	0					
ANR	4977421	Callee	strlen		4977295	0					
ANR	4977422	Identifier	strlen		4977295	0					
ANR	4977423	ArgumentList	input		4977295	1					
ANR	4977424	Argument	input		4977295	0					
ANR	4977425	Identifier	input		4977295	0					
ANR	4977426	ExpressionStatement	output [ 0 ] = 0	57:1:1877:1890	4977295	6	True				
ANR	4977427	AssignmentExpression	output [ 0 ] = 0		4977295	0		=			
ANR	4977428	ArrayIndexing	output [ 0 ]		4977295	0					
ANR	4977429	Identifier	output		4977295	0					
ANR	4977430	PrimaryExpression	0		4977295	1					
ANR	4977431	PrimaryExpression	0		4977295	1					
ANR	4977432	ExpressionStatement	"reported_length = snprintf ( output , 0 , ""%s"" , input )"	58:1:1893:1943	4977295	7	True				
ANR	4977433	AssignmentExpression	"reported_length = snprintf ( output , 0 , ""%s"" , input )"		4977295	0		=			
ANR	4977434	Identifier	reported_length		4977295	0					
ANR	4977435	CallExpression	"snprintf ( output , 0 , ""%s"" , input )"		4977295	1					
ANR	4977436	Callee	snprintf		4977295	0					
ANR	4977437	Identifier	snprintf		4977295	0					
ANR	4977438	ArgumentList	output		4977295	1					
ANR	4977439	Argument	output		4977295	0					
ANR	4977440	Identifier	output		4977295	0					
ANR	4977441	Argument	0		4977295	1					
ANR	4977442	PrimaryExpression	0		4977295	0					
ANR	4977443	Argument	"""%s"""		4977295	2					
ANR	4977444	PrimaryExpression	"""%s"""		4977295	0					
ANR	4977445	Argument	input		4977295	3					
ANR	4977446	Identifier	input		4977295	0					
ANR	4977447	IfStatement	if ( strlen ( output ) == 0 )		4977295	8					
ANR	4977448	Condition	strlen ( output ) == 0	59:5:1950:1968	4977295	0	True				
ANR	4977449	EqualityExpression	strlen ( output ) == 0		4977295	0		==			
ANR	4977450	CallExpression	strlen ( output )		4977295	0					
ANR	4977451	Callee	strlen		4977295	0					
ANR	4977452	Identifier	strlen		4977295	0					
ANR	4977453	ArgumentList	output		4977295	1					
ANR	4977454	Argument	output		4977295	0					
ANR	4977455	Identifier	output		4977295	0					
ANR	4977456	PrimaryExpression	0		4977295	1					
ANR	4977457	CompoundStatement		35:26:1071:1071	4977295	1					
ANR	4977458	ExpressionStatement	"printf ( ""PASSED: The degenerative case worked.\\n"" )"	60:2:1975:2024	4977295	0	True				
ANR	4977459	CallExpression	"printf ( ""PASSED: The degenerative case worked.\\n"" )"		4977295	0					
ANR	4977460	Callee	printf		4977295	0					
ANR	4977461	Identifier	printf		4977295	0					
ANR	4977462	ArgumentList	"""PASSED: The degenerative case worked.\\n"""		4977295	1					
ANR	4977463	Argument	"""PASSED: The degenerative case worked.\\n"""		4977295	0					
ANR	4977464	PrimaryExpression	"""PASSED: The degenerative case worked.\\n"""		4977295	0					
ANR	4977465	ElseStatement	else		4977295	0					
ANR	4977466	CompoundStatement		37:8:1134:1134	4977295	0					
ANR	4977467	ExpressionStatement	"printf ( ""FAILED: The degenerative case made a string with %d chars.\\n"" , strlen ( output ) )"	62:2:2038:2130	4977295	0	True				
ANR	4977468	CallExpression	"printf ( ""FAILED: The degenerative case made a string with %d chars.\\n"" , strlen ( output ) )"		4977295	0					
ANR	4977469	Callee	printf		4977295	0					
ANR	4977470	Identifier	printf		4977295	0					
ANR	4977471	ArgumentList	"""FAILED: The degenerative case made a string with %d chars.\\n"""		4977295	1					
ANR	4977472	Argument	"""FAILED: The degenerative case made a string with %d chars.\\n"""		4977295	0					
ANR	4977473	PrimaryExpression	"""FAILED: The degenerative case made a string with %d chars.\\n"""		4977295	0					
ANR	4977474	Argument	strlen ( output )		4977295	1					
ANR	4977475	CallExpression	strlen ( output )		4977295	0					
ANR	4977476	Callee	strlen		4977295	0					
ANR	4977477	Identifier	strlen		4977295	0					
ANR	4977478	ArgumentList	output		4977295	1					
ANR	4977479	Argument	output		4977295	0					
ANR	4977480	Identifier	output		4977295	0					
ANR	4977481	IfStatement	if ( reported_length == strlen ( input ) )		4977295	9					
ANR	4977482	Condition	reported_length == strlen ( input )	66:5:2143:2174	4977295	0	True				
ANR	4977483	EqualityExpression	reported_length == strlen ( input )		4977295	0		==			
ANR	4977484	Identifier	reported_length		4977295	0					
ANR	4977485	CallExpression	strlen ( input )		4977295	1					
ANR	4977486	Callee	strlen		4977295	0					
ANR	4977487	Identifier	strlen		4977295	0					
ANR	4977488	ArgumentList	input		4977295	1					
ANR	4977489	Argument	input		4977295	0					
ANR	4977490	Identifier	input		4977295	0					
ANR	4977491	CompoundStatement		42:39:1277:1277	4977295	1					
ANR	4977492	Statement	printf	67:2:2181:2186	4977295	0	True				
ANR	4977493	Statement	(	67:8:2187:2187	4977295	1	True				
ANR	4977494	Statement	"""PASSED: The degenerative case reported the desired length """	67:9:2188:2247	4977295	2	True				
ANR	4977495	Statement	"""(%d) correctly.\\n"""	68:6:2255:2273	4977295	3	True				
ANR	4977496	Statement	","	68:25:2274:2274	4977295	4	True				
ANR	4977497	Statement	reported_length	68:27:2276:2290	4977295	5	True				
ANR	4977498	Statement	)	68:42:2291:2291	4977295	6	True				
ANR	4977499	ExpressionStatement		68:43:2292:2292	4977295	7	True				
ANR	4977500	ElseStatement	else		4977295	0					
ANR	4977501	CompoundStatement		45:8:1402:1402	4977295	0					
ANR	4977502	ExpressionStatement	"printf ( ""FAILED: The degenerative case reported %d instead of %d.\\n"" , reported_length , strlen ( input ) )"	70:2:2306:2412	4977295	0	True				
ANR	4977503	CallExpression	"printf ( ""FAILED: The degenerative case reported %d instead of %d.\\n"" , reported_length , strlen ( input ) )"		4977295	0					
ANR	4977504	Callee	printf		4977295	0					
ANR	4977505	Identifier	printf		4977295	0					
ANR	4977506	ArgumentList	"""FAILED: The degenerative case reported %d instead of %d.\\n"""		4977295	1					
ANR	4977507	Argument	"""FAILED: The degenerative case reported %d instead of %d.\\n"""		4977295	0					
ANR	4977508	PrimaryExpression	"""FAILED: The degenerative case reported %d instead of %d.\\n"""		4977295	0					
ANR	4977509	Argument	reported_length		4977295	1					
ANR	4977510	Identifier	reported_length		4977295	0					
ANR	4977511	Argument	strlen ( input )		4977295	2					
ANR	4977512	CallExpression	strlen ( input )		4977295	0					
ANR	4977513	Callee	strlen		4977295	0					
ANR	4977514	Identifier	strlen		4977295	0					
ANR	4977515	ArgumentList	input		4977295	1					
ANR	4977516	Argument	input		4977295	0					
ANR	4977517	Identifier	input		4977295	0					
ANR	4977518	ReturnStatement	return 0 ;	74:1:2421:2429	4977295	10	True				
ANR	4977519	PrimaryExpression	0		4977295	0					
ANR	4977520	ReturnType	int		4977295	1					
ANR	4977521	Identifier	main		4977295	2					
ANR	4977522	ParameterList	"int argc , char * * argv"		4977295	3					
ANR	4977523	Parameter	int argc	24:9:876:883	4977295	0	True				
ANR	4977524	ParameterType	int		4977295	0					
ANR	4977525	Identifier	argc		4977295	1					
ANR	4977526	Parameter	char * * argv	24:19:886:896	4977295	1	True				
ANR	4977527	ParameterType	char * *		4977295	0					
ANR	4977528	Identifier	argv		4977295	1					
ANR	4977529	CFGEntryNode	ENTRY		4977295		True				
ANR	4977530	CFGExitNode	EXIT		4977295		True				
ANR	4977531	Symbol	argc		4977295						
ANR	4977532	Symbol	output		4977295						
ANR	4977533	Symbol	input		4977295						
ANR	4977534	Symbol	strlen		4977295						
ANR	4977535	Symbol	reported_length		4977295						
ANR	4977536	Symbol	num_chars		4977295						
ANR	4977537	Symbol	argv		4977295						
ANR	4977538	Symbol	* output		4977295						
ANR	4977539	Symbol	snprintf		4977295						
