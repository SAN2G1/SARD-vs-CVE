command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	208408	File	data/converged/CVE-2011-4930_htcondor/HookClient.cpp								
ANR	208409	Function	HookClient :: HookClient	26:0:947:1191							
ANR	208410	FunctionDef	"HookClient :: HookClient (HookType hook_type , const char * hook_path , bool wants_output)"		208409	0					
ANR	208411	CompoundStatement		28:0:1040:1191	208409	0					
ANR	208412	ExpressionStatement	m_hook_path = strdup ( hook_path )	29:1:1043:1074	208409	0	True				
ANR	208413	AssignmentExpression	m_hook_path = strdup ( hook_path )		208409	0		=			
ANR	208414	Identifier	m_hook_path		208409	0					
ANR	208415	CallExpression	strdup ( hook_path )		208409	1					
ANR	208416	Callee	strdup		208409	0					
ANR	208417	Identifier	strdup		208409	0					
ANR	208418	ArgumentList	hook_path		208409	1					
ANR	208419	Argument	hook_path		208409	0					
ANR	208420	Identifier	hook_path		208409	0					
ANR	208421	ExpressionStatement	m_hook_type = hook_type	30:1:1077:1100	208409	1	True				
ANR	208422	AssignmentExpression	m_hook_type = hook_type		208409	0		=			
ANR	208423	Identifier	m_hook_type		208409	0					
ANR	208424	Identifier	hook_type		208409	1					
ANR	208425	ExpressionStatement	m_pid = - 1	31:1:1103:1113	208409	2	True				
ANR	208426	AssignmentExpression	m_pid = - 1		208409	0		=			
ANR	208427	Identifier	m_pid		208409	0					
ANR	208428	UnaryOperationExpression	- 1		208409	1					
ANR	208429	UnaryOperator	-		208409	0					
ANR	208430	PrimaryExpression	1		208409	1					
ANR	208431	ExpressionStatement	m_exit_status = - 1	32:1:1116:1134	208409	3	True				
ANR	208432	AssignmentExpression	m_exit_status = - 1		208409	0		=			
ANR	208433	Identifier	m_exit_status		208409	0					
ANR	208434	UnaryOperationExpression	- 1		208409	1					
ANR	208435	UnaryOperator	-		208409	0					
ANR	208436	PrimaryExpression	1		208409	1					
ANR	208437	ExpressionStatement	m_has_exited = false	33:1:1137:1157	208409	4	True				
ANR	208438	AssignmentExpression	m_has_exited = false		208409	0		=			
ANR	208439	Identifier	m_has_exited		208409	0					
ANR	208440	Identifier	false		208409	1					
ANR	208441	ExpressionStatement	m_wants_output = wants_output	34:1:1160:1189	208409	5	True				
ANR	208442	AssignmentExpression	m_wants_output = wants_output		208409	0		=			
ANR	208443	Identifier	m_wants_output		208409	0					
ANR	208444	Identifier	wants_output		208409	1					
ANR	208445	Identifier	HookClient :: HookClient		208409	1					
ANR	208446	ParameterList	"HookType hook_type , const char * hook_path , bool wants_output"		208409	2					
ANR	208447	Parameter	HookType hook_type	26:23:970:987	208409	0	True				
ANR	208448	ParameterType	HookType		208409	0					
ANR	208449	Identifier	hook_type		208409	1					
ANR	208450	Parameter	const char * hook_path	26:43:990:1010	208409	1	True				
ANR	208451	ParameterType	const char *		208409	0					
ANR	208452	Identifier	hook_path		208409	1					
ANR	208453	Parameter	bool wants_output	27:8:1021:1037	208409	2	True				
ANR	208454	ParameterType	bool		208409	0					
ANR	208455	Identifier	wants_output		208409	1					
ANR	208456	CFGEntryNode	ENTRY		208409		True				
ANR	208457	CFGExitNode	EXIT		208409		True				
ANR	208458	Symbol	m_exit_status		208409						
ANR	208459	Symbol	m_pid		208409						
ANR	208460	Symbol	m_hook_path		208409						
ANR	208461	Symbol	m_has_exited		208409						
ANR	208462	Symbol	m_hook_type		208409						
ANR	208463	Symbol	false		208409						
ANR	208464	Symbol	hook_path		208409						
ANR	208465	Symbol	wants_output		208409						
ANR	208466	Symbol	strdup		208409						
ANR	208467	Symbol	m_wants_output		208409						
ANR	208468	Symbol	hook_type		208409						
ANR	208469	Function	HookClient :: ~HookClient	38:0:1195:1360							
ANR	208470	FunctionDef	HookClient :: ~HookClient ()		208469	0					
ANR	208471	CompoundStatement		38:26:1221:1360	208469	0					
ANR	208472	IfStatement	if ( m_hook_path )		208469	0					
ANR	208473	Condition	m_hook_path	39:5:1228:1238	208469	0	True				
ANR	208474	Identifier	m_hook_path		208469	0					
ANR	208475	CompoundStatement		2:18:19:19	208469	1					
ANR	208476	ExpressionStatement	free ( m_hook_path )	40:2:1245:1262	208469	0	True				
ANR	208477	CallExpression	free ( m_hook_path )		208469	0					
ANR	208478	Callee	free		208469	0					
ANR	208479	Identifier	free		208469	0					
ANR	208480	ArgumentList	m_hook_path		208469	1					
ANR	208481	Argument	m_hook_path		208469	0					
ANR	208482	Identifier	m_hook_path		208469	0					
ANR	208483	ExpressionStatement	m_hook_path = NULL	41:2:1266:1284	208469	1	True				
ANR	208484	AssignmentExpression	m_hook_path = NULL		208469	0		=			
ANR	208485	Identifier	m_hook_path		208469	0					
ANR	208486	Identifier	NULL		208469	1					
ANR	208487	IfStatement	if ( m_pid != - 1 && ! m_has_exited )		208469	1					
ANR	208488	Condition	m_pid != - 1 && ! m_has_exited	43:5:1294:1321	208469	0	True				
ANR	208489	AndExpression	m_pid != - 1 && ! m_has_exited		208469	0		&&			
ANR	208490	EqualityExpression	m_pid != - 1		208469	0		!=			
ANR	208491	Identifier	m_pid		208469	0					
ANR	208492	UnaryOperationExpression	- 1		208469	1					
ANR	208493	UnaryOperator	-		208469	0					
ANR	208494	PrimaryExpression	1		208469	1					
ANR	208495	UnaryOperationExpression	! m_has_exited		208469	1					
ANR	208496	UnaryOperator	!		208469	0					
ANR	208497	Identifier	m_has_exited		208469	1					
ANR	208498	CompoundStatement		6:35:102:102	208469	1					
ANR	208499	Identifier	HookClient :: ~HookClient		208469	1					
ANR	208500	ParameterList			208469	2					
ANR	208501	CFGEntryNode	ENTRY		208469		True				
ANR	208502	CFGExitNode	EXIT		208469		True				
ANR	208503	Symbol	NULL		208469						
ANR	208504	Symbol	m_pid		208469						
ANR	208505	Symbol	m_hook_path		208469						
ANR	208506	Symbol	m_has_exited		208469						
ANR	208507	Function	HookClient :: getStdOut	50:0:1364:1490							
ANR	208508	FunctionDef	HookClient :: getStdOut ()		208507	0					
ANR	208509	CompoundStatement		51:24:1398:1490	208507	0					
ANR	208510	IfStatement	if ( m_has_exited )		208507	0					
ANR	208511	Condition	m_has_exited	52:5:1405:1416	208507	0	True				
ANR	208512	Identifier	m_has_exited		208507	0					
ANR	208513	CompoundStatement		2:19:20:20	208507	1					
ANR	208514	ReturnStatement	return & m_std_out ;	53:2:1423:1440	208507	0	True				
ANR	208515	UnaryOperationExpression	& m_std_out		208507	0					
ANR	208516	UnaryOperator	&		208507	0					
ANR	208517	Identifier	m_std_out		208507	1					
ANR	208518	ReturnStatement	"return daemonCore -> Read_Std_Pipe ( m_pid , 1 ) ;"	55:1:1446:1488	208507	1	True				
ANR	208519	CallExpression	"daemonCore -> Read_Std_Pipe ( m_pid , 1 )"		208507	0					
ANR	208520	Callee	daemonCore -> Read_Std_Pipe		208507	0					
ANR	208521	PtrMemberAccess	daemonCore -> Read_Std_Pipe		208507	0					
ANR	208522	Identifier	daemonCore		208507	0					
ANR	208523	Identifier	Read_Std_Pipe		208507	1					
ANR	208524	ArgumentList	m_pid		208507	1					
ANR	208525	Argument	m_pid		208507	0					
ANR	208526	Identifier	m_pid		208507	0					
ANR	208527	Argument	1		208507	1					
ANR	208528	PrimaryExpression	1		208507	0					
ANR	208529	ReturnType	MyString *		208507	1					
ANR	208530	Identifier	HookClient :: getStdOut		208507	2					
ANR	208531	ParameterList			208507	3					
ANR	208532	CFGEntryNode	ENTRY		208507		True				
ANR	208533	CFGExitNode	EXIT		208507		True				
ANR	208534	Symbol	m_pid		208507						
ANR	208535	Symbol	m_has_exited		208507						
ANR	208536	Symbol	& m_std_out		208507						
ANR	208537	Symbol	* daemonCore		208507						
ANR	208538	Symbol	daemonCore -> Read_Std_Pipe		208507						
ANR	208539	Symbol	daemonCore		208507						
ANR	208540	Function	HookClient :: getStdErr	59:0:1494:1620							
ANR	208541	FunctionDef	HookClient :: getStdErr ()		208540	0					
ANR	208542	CompoundStatement		60:24:1528:1620	208540	0					
ANR	208543	IfStatement	if ( m_has_exited )		208540	0					
ANR	208544	Condition	m_has_exited	61:5:1535:1546	208540	0	True				
ANR	208545	Identifier	m_has_exited		208540	0					
ANR	208546	CompoundStatement		2:19:20:20	208540	1					
ANR	208547	ReturnStatement	return & m_std_err ;	62:2:1553:1570	208540	0	True				
ANR	208548	UnaryOperationExpression	& m_std_err		208540	0					
ANR	208549	UnaryOperator	&		208540	0					
ANR	208550	Identifier	m_std_err		208540	1					
ANR	208551	ReturnStatement	"return daemonCore -> Read_Std_Pipe ( m_pid , 2 ) ;"	64:1:1576:1618	208540	1	True				
ANR	208552	CallExpression	"daemonCore -> Read_Std_Pipe ( m_pid , 2 )"		208540	0					
ANR	208553	Callee	daemonCore -> Read_Std_Pipe		208540	0					
ANR	208554	PtrMemberAccess	daemonCore -> Read_Std_Pipe		208540	0					
ANR	208555	Identifier	daemonCore		208540	0					
ANR	208556	Identifier	Read_Std_Pipe		208540	1					
ANR	208557	ArgumentList	m_pid		208540	1					
ANR	208558	Argument	m_pid		208540	0					
ANR	208559	Identifier	m_pid		208540	0					
ANR	208560	Argument	2		208540	1					
ANR	208561	PrimaryExpression	2		208540	0					
ANR	208562	ReturnType	MyString *		208540	1					
ANR	208563	Identifier	HookClient :: getStdErr		208540	2					
ANR	208564	ParameterList			208540	3					
ANR	208565	CFGEntryNode	ENTRY		208540		True				
ANR	208566	CFGExitNode	EXIT		208540		True				
ANR	208567	Symbol	m_pid		208540						
ANR	208568	Symbol	m_has_exited		208540						
ANR	208569	Symbol	* daemonCore		208540						
ANR	208570	Symbol	daemonCore -> Read_Std_Pipe		208540						
ANR	208571	Symbol	daemonCore		208540						
ANR	208572	Symbol	& m_std_err		208540						
ANR	208573	Function	HookClient :: hookExited	68:0:1624:2108							
ANR	208574	FunctionDef	HookClient :: hookExited (int exit_status)		208573	0					
ANR	208575	CompoundStatement		69:40:1669:2108	208573	0					
ANR	208576	ExpressionStatement	m_has_exited = true	70:1:1672:1691	208573	0	True				
ANR	208577	AssignmentExpression	m_has_exited = true		208573	0		=			
ANR	208578	Identifier	m_has_exited		208573	0					
ANR	208579	Identifier	true		208573	1					
ANR	208580	ExpressionStatement	m_exit_status = exit_status	71:1:1694:1721	208573	1	True				
ANR	208581	AssignmentExpression	m_exit_status = exit_status		208573	0		=			
ANR	208582	Identifier	m_exit_status		208573	0					
ANR	208583	Identifier	exit_status		208573	1					
ANR	208584	IdentifierDeclStatement	MyString status_txt ;	73:1:1725:1744	208573	2	True				
ANR	208585	IdentifierDecl	status_txt		208573	0					
ANR	208586	IdentifierDeclType	MyString		208573	0					
ANR	208587	Identifier	status_txt		208573	1					
ANR	208588	ExpressionStatement	"status_txt . sprintf ( ""HookClient %s (pid %d) "" , m_hook_path , m_pid )"	74:1:1747:1812	208573	3	True				
ANR	208589	CallExpression	"status_txt . sprintf ( ""HookClient %s (pid %d) "" , m_hook_path , m_pid )"		208573	0					
ANR	208590	Callee	status_txt . sprintf		208573	0					
ANR	208591	MemberAccess	status_txt . sprintf		208573	0					
ANR	208592	Identifier	status_txt		208573	0					
ANR	208593	Identifier	sprintf		208573	1					
ANR	208594	ArgumentList	"""HookClient %s (pid %d) """		208573	1					
ANR	208595	Argument	"""HookClient %s (pid %d) """		208573	0					
ANR	208596	PrimaryExpression	"""HookClient %s (pid %d) """		208573	0					
ANR	208597	Argument	m_hook_path		208573	1					
ANR	208598	Identifier	m_hook_path		208573	0					
ANR	208599	Argument	m_pid		208573	2					
ANR	208600	Identifier	m_pid		208573	0					
ANR	208601	ExpressionStatement	"statusString ( exit_status , status_txt )"	75:1:1815:1852	208573	4	True				
ANR	208602	CallExpression	"statusString ( exit_status , status_txt )"		208573	0					
ANR	208603	Callee	statusString		208573	0					
ANR	208604	Identifier	statusString		208573	0					
ANR	208605	ArgumentList	exit_status		208573	1					
ANR	208606	Argument	exit_status		208573	0					
ANR	208607	Identifier	exit_status		208573	0					
ANR	208608	Argument	status_txt		208573	1					
ANR	208609	Identifier	status_txt		208573	0					
ANR	208610	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""%s\\n"" , status_txt . Value ( ) )"	76:1:1855:1903	208573	5	True				
ANR	208611	CallExpression	"dprintf ( D_FULLDEBUG , ""%s\\n"" , status_txt . Value ( ) )"		208573	0					
ANR	208612	Callee	dprintf		208573	0					
ANR	208613	Identifier	dprintf		208573	0					
ANR	208614	ArgumentList	D_FULLDEBUG		208573	1					
ANR	208615	Argument	D_FULLDEBUG		208573	0					
ANR	208616	Identifier	D_FULLDEBUG		208573	0					
ANR	208617	Argument	"""%s\\n"""		208573	1					
ANR	208618	PrimaryExpression	"""%s\\n"""		208573	0					
ANR	208619	Argument	status_txt . Value ( )		208573	2					
ANR	208620	CallExpression	status_txt . Value ( )		208573	0					
ANR	208621	Callee	status_txt . Value		208573	0					
ANR	208622	MemberAccess	status_txt . Value		208573	0					
ANR	208623	Identifier	status_txt		208573	0					
ANR	208624	Identifier	Value		208573	1					
ANR	208625	ArgumentList			208573	1					
ANR	208626	IdentifierDeclStatement	"MyString * std_out = daemonCore -> Read_Std_Pipe ( m_pid , 1 ) ;"	78:1:1907:1962	208573	6	True				
ANR	208627	IdentifierDecl	"* std_out = daemonCore -> Read_Std_Pipe ( m_pid , 1 )"		208573	0					
ANR	208628	IdentifierDeclType	MyString *		208573	0					
ANR	208629	Identifier	std_out		208573	1					
ANR	208630	AssignmentExpression	"* std_out = daemonCore -> Read_Std_Pipe ( m_pid , 1 )"		208573	2		=			
ANR	208631	Identifier	std_out		208573	0					
ANR	208632	CallExpression	"daemonCore -> Read_Std_Pipe ( m_pid , 1 )"		208573	1					
ANR	208633	Callee	daemonCore -> Read_Std_Pipe		208573	0					
ANR	208634	PtrMemberAccess	daemonCore -> Read_Std_Pipe		208573	0					
ANR	208635	Identifier	daemonCore		208573	0					
ANR	208636	Identifier	Read_Std_Pipe		208573	1					
ANR	208637	ArgumentList	m_pid		208573	1					
ANR	208638	Argument	m_pid		208573	0					
ANR	208639	Identifier	m_pid		208573	0					
ANR	208640	Argument	1		208573	1					
ANR	208641	PrimaryExpression	1		208573	0					
ANR	208642	IfStatement	if ( std_out )		208573	7					
ANR	208643	Condition	std_out	79:5:1969:1975	208573	0	True				
ANR	208644	Identifier	std_out		208573	0					
ANR	208645	CompoundStatement		11:14:308:308	208573	1					
ANR	208646	ExpressionStatement	m_std_out = * std_out	80:2:1982:2002	208573	0	True				
ANR	208647	AssignmentExpression	m_std_out = * std_out		208573	0		=			
ANR	208648	Identifier	m_std_out		208573	0					
ANR	208649	UnaryOperationExpression	* std_out		208573	1					
ANR	208650	UnaryOperator	*		208573	0					
ANR	208651	Identifier	std_out		208573	1					
ANR	208652	IdentifierDeclStatement	"MyString * std_err = daemonCore -> Read_Std_Pipe ( m_pid , 2 ) ;"	82:1:2008:2063	208573	8	True				
ANR	208653	IdentifierDecl	"* std_err = daemonCore -> Read_Std_Pipe ( m_pid , 2 )"		208573	0					
ANR	208654	IdentifierDeclType	MyString *		208573	0					
ANR	208655	Identifier	std_err		208573	1					
ANR	208656	AssignmentExpression	"* std_err = daemonCore -> Read_Std_Pipe ( m_pid , 2 )"		208573	2		=			
ANR	208657	Identifier	std_err		208573	0					
ANR	208658	CallExpression	"daemonCore -> Read_Std_Pipe ( m_pid , 2 )"		208573	1					
ANR	208659	Callee	daemonCore -> Read_Std_Pipe		208573	0					
ANR	208660	PtrMemberAccess	daemonCore -> Read_Std_Pipe		208573	0					
ANR	208661	Identifier	daemonCore		208573	0					
ANR	208662	Identifier	Read_Std_Pipe		208573	1					
ANR	208663	ArgumentList	m_pid		208573	1					
ANR	208664	Argument	m_pid		208573	0					
ANR	208665	Identifier	m_pid		208573	0					
ANR	208666	Argument	2		208573	1					
ANR	208667	PrimaryExpression	2		208573	0					
ANR	208668	IfStatement	if ( std_err )		208573	9					
ANR	208669	Condition	std_err	83:5:2070:2076	208573	0	True				
ANR	208670	Identifier	std_err		208573	0					
ANR	208671	CompoundStatement		15:14:409:409	208573	1					
ANR	208672	ExpressionStatement	m_std_err = * std_err	84:2:2083:2103	208573	0	True				
ANR	208673	AssignmentExpression	m_std_err = * std_err		208573	0		=			
ANR	208674	Identifier	m_std_err		208573	0					
ANR	208675	UnaryOperationExpression	* std_err		208573	1					
ANR	208676	UnaryOperator	*		208573	0					
ANR	208677	Identifier	std_err		208573	1					
ANR	208678	ReturnType	void		208573	1					
ANR	208679	Identifier	HookClient :: hookExited		208573	2					
ANR	208680	ParameterList	int exit_status		208573	3					
ANR	208681	Parameter	int exit_status	69:23:1652:1666	208573	0	True				
ANR	208682	ParameterType	int		208573	0					
ANR	208683	Identifier	exit_status		208573	1					
ANR	208684	CFGEntryNode	ENTRY		208573		True				
ANR	208685	CFGExitNode	EXIT		208573		True				
ANR	208686	Symbol	std_err		208573						
ANR	208687	Symbol	m_hook_path		208573						
ANR	208688	Symbol	m_std_err		208573						
ANR	208689	Symbol	D_FULLDEBUG		208573						
ANR	208690	Symbol	exit_status		208573						
ANR	208691	Symbol	status_txt		208573						
ANR	208692	Symbol	* std_out		208573						
ANR	208693	Symbol	status_txt . Value		208573						
ANR	208694	Symbol	m_exit_status		208573						
ANR	208695	Symbol	m_pid		208573						
ANR	208696	Symbol	m_has_exited		208573						
ANR	208697	Symbol	* daemonCore		208573						
ANR	208698	Symbol	daemonCore -> Read_Std_Pipe		208573						
ANR	208699	Symbol	daemonCore		208573						
ANR	208700	Symbol	true		208573						
ANR	208701	Symbol	std_out		208573						
ANR	208702	Symbol	m_std_out		208573						
ANR	208703	Symbol	* std_err		208573						
