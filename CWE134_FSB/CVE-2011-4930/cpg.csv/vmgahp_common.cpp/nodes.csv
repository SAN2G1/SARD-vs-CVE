command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5567771	File	data/converged/CVE-2011-4930_htcondor/vmgahp_common.cpp								
ANR	5567772	DeclStmt									
ANR	5567773	Decl							extern DLL_IMPORT_MAGIC char	extern DLL_IMPORT_MAGIC char * *	environ
ANR	5567774	DeclStmt									
ANR	5567775	Decl							MyString	MyString	caller_name
ANR	5567776	DeclStmt									
ANR	5567777	Decl							MyString	MyString	job_user_name
ANR	5567778	DeclStmt									
ANR	5567779	Decl							uid_t	uid_t	caller_uid
ANR	5567780	DeclStmt									
ANR	5567781	Decl							gid_t	gid_t	caller_gid
ANR	5567782	DeclStmt									
ANR	5567783	Decl							uid_t	uid_t	job_user_uid
ANR	5567784	DeclStmt									
ANR	5567785	Decl							uid_t	uid_t	job_user_gid
ANR	5567786	DeclStmt									
ANR	5567787	Decl							const char	const char * [ ]	support_vms_list
ANR	5567788	Function	parse_vmgahp_command	63:0:1879:2939							
ANR	5567789	FunctionDef	"parse_vmgahp_command (const char * raw , Gahp_Args & args)"		5567788	0					
ANR	5567790	CompoundStatement		64:0:1940:2939	5567788	0					
ANR	5567791	IfStatement	if ( ! raw )		5567788	0					
ANR	5567792	Condition	! raw	65:5:1947:1950	5567788	0	True				
ANR	5567793	UnaryOperationExpression	! raw		5567788	0					
ANR	5567794	UnaryOperator	!		5567788	0					
ANR	5567795	Identifier	raw		5567788	1					
ANR	5567796	CompoundStatement		2:11:12:12	5567788	1					
ANR	5567797	ExpressionStatement	"vmprintf ( D_ALWAYS , ""ERROR parse_vmgahp_command: empty command\\n"" )"	66:2:1957:2021	5567788	0	True				
ANR	5567798	CallExpression	"vmprintf ( D_ALWAYS , ""ERROR parse_vmgahp_command: empty command\\n"" )"		5567788	0					
ANR	5567799	Callee	vmprintf		5567788	0					
ANR	5567800	Identifier	vmprintf		5567788	0					
ANR	5567801	ArgumentList	D_ALWAYS		5567788	1					
ANR	5567802	Argument	D_ALWAYS		5567788	0					
ANR	5567803	Identifier	D_ALWAYS		5567788	0					
ANR	5567804	Argument	"""ERROR parse_vmgahp_command: empty command\\n"""		5567788	1					
ANR	5567805	PrimaryExpression	"""ERROR parse_vmgahp_command: empty command\\n"""		5567788	0					
ANR	5567806	ReturnStatement	return false ;	67:2:2025:2037	5567788	1	True				
ANR	5567807	Identifier	false		5567788	0					
ANR	5567808	ExpressionStatement	args . reset ( )	70:1:2044:2056	5567788	1	True				
ANR	5567809	CallExpression	args . reset ( )		5567788	0					
ANR	5567810	Callee	args . reset		5567788	0					
ANR	5567811	MemberAccess	args . reset		5567788	0					
ANR	5567812	Identifier	args		5567788	0					
ANR	5567813	Identifier	reset		5567788	1					
ANR	5567814	ArgumentList			5567788	1					
ANR	5567815	IdentifierDeclStatement	int beginning = 0 ;	72:1:2060:2077	5567788	2	True				
ANR	5567816	IdentifierDecl	beginning = 0		5567788	0					
ANR	5567817	IdentifierDeclType	int		5567788	0					
ANR	5567818	Identifier	beginning		5567788	1					
ANR	5567819	AssignmentExpression	beginning = 0		5567788	2		=			
ANR	5567820	Identifier	beginning		5567788	0					
ANR	5567821	PrimaryExpression	0		5567788	1					
ANR	5567822	IdentifierDeclStatement	int len = strlen ( raw ) ;	74:1:2081:2100	5567788	3	True				
ANR	5567823	IdentifierDecl	len = strlen ( raw )		5567788	0					
ANR	5567824	IdentifierDeclType	int		5567788	0					
ANR	5567825	Identifier	len		5567788	1					
ANR	5567826	AssignmentExpression	len = strlen ( raw )		5567788	2		=			
ANR	5567827	Identifier	len		5567788	0					
ANR	5567828	CallExpression	strlen ( raw )		5567788	1					
ANR	5567829	Callee	strlen		5567788	0					
ANR	5567830	Identifier	strlen		5567788	0					
ANR	5567831	ArgumentList	raw		5567788	1					
ANR	5567832	Argument	raw		5567788	0					
ANR	5567833	Identifier	raw		5567788	0					
ANR	5567834	IdentifierDeclStatement	char * buff = ( char * ) malloc ( len + 1 ) ;	76:1:2104:2138	5567788	4	True				
ANR	5567835	IdentifierDecl	* buff = ( char * ) malloc ( len + 1 )		5567788	0					
ANR	5567836	IdentifierDeclType	char *		5567788	0					
ANR	5567837	Identifier	buff		5567788	1					
ANR	5567838	AssignmentExpression	* buff = ( char * ) malloc ( len + 1 )		5567788	2		=			
ANR	5567839	Identifier	buff		5567788	0					
ANR	5567840	CastExpression	( char * ) malloc ( len + 1 )		5567788	1					
ANR	5567841	CastTarget	char *		5567788	0					
ANR	5567842	CallExpression	malloc ( len + 1 )		5567788	1					
ANR	5567843	Callee	malloc		5567788	0					
ANR	5567844	Identifier	malloc		5567788	0					
ANR	5567845	ArgumentList	len + 1		5567788	1					
ANR	5567846	Argument	len + 1		5567788	0					
ANR	5567847	AdditiveExpression	len + 1		5567788	0		+			
ANR	5567848	Identifier	len		5567788	0					
ANR	5567849	PrimaryExpression	1		5567788	1					
ANR	5567850	IdentifierDeclStatement	int buff_len = 0 ;	77:1:2141:2157	5567788	5	True				
ANR	5567851	IdentifierDecl	buff_len = 0		5567788	0					
ANR	5567852	IdentifierDeclType	int		5567788	0					
ANR	5567853	Identifier	buff_len		5567788	1					
ANR	5567854	AssignmentExpression	buff_len = 0		5567788	2		=			
ANR	5567855	Identifier	buff_len		5567788	0					
ANR	5567856	PrimaryExpression	0		5567788	1					
ANR	5567857	ForStatement	for ( int i = 0 ; i < len ; i ++ )		5567788	6					
ANR	5567858	ForInit	int i = 0 ;	79:6:2166:2175	5567788	0	True				
ANR	5567859	IdentifierDeclStatement	int i = 0 ;		5567788	0					
ANR	5567860	IdentifierDecl	i = 0		5567788	0					
ANR	5567861	IdentifierDeclType	int		5567788	0					
ANR	5567862	Identifier	i		5567788	1					
ANR	5567863	AssignmentExpression	i = 0		5567788	2		=			
ANR	5567864	Identifier	i		5567788	0					
ANR	5567865	PrimaryExpression	0		5567788	1					
ANR	5567866	Condition	i < len	79:17:2177:2181	5567788	1	True				
ANR	5567867	RelationalExpression	i < len		5567788	0		<			
ANR	5567868	Identifier	i		5567788	0					
ANR	5567869	Identifier	len		5567788	1					
ANR	5567870	PostIncDecOperationExpression	i ++	79:24:2184:2186	5567788	2	True				
ANR	5567871	Identifier	i		5567788	0					
ANR	5567872	IncDec	++		5567788	1					
ANR	5567873	CompoundStatement		16:29:248:248	5567788	3					
ANR	5567874	IfStatement	if ( raw [ i ] == '\\\\' )		5567788	0					
ANR	5567875	Condition	raw [ i ] == '\\\\'	81:7:2199:2212	5567788	0	True				
ANR	5567876	EqualityExpression	raw [ i ] == '\\\\'		5567788	0		==			
ANR	5567877	ArrayIndexing	raw [ i ]		5567788	0					
ANR	5567878	Identifier	raw		5567788	0					
ANR	5567879	Identifier	i		5567788	1					
ANR	5567880	PrimaryExpression	'\\\\'		5567788	1					
ANR	5567881	CompoundStatement		18:24:275:275	5567788	1					
ANR	5567882	ExpressionStatement	i ++	82:3:2221:2224	5567788	0	True				
ANR	5567883	PostIncDecOperationExpression	i ++		5567788	0					
ANR	5567884	Identifier	i		5567788	0					
ANR	5567885	IncDec	++		5567788	1					
ANR	5567886	IfStatement	if ( i < ( len - 1 ) )		5567788	1					
ANR	5567887	Condition	i < ( len - 1 )	83:7:2253:2261	5567788	0	True				
ANR	5567888	RelationalExpression	i < ( len - 1 )		5567788	0		<			
ANR	5567889	Identifier	i		5567788	0					
ANR	5567890	AdditiveExpression	len - 1		5567788	1		-			
ANR	5567891	Identifier	len		5567788	0					
ANR	5567892	PrimaryExpression	1		5567788	1					
ANR	5567893	CompoundStatement		20:18:323:323	5567788	1					
ANR	5567894	ExpressionStatement	buff [ buff_len ++ ] = raw [ i ]	84:4:2270:2295	5567788	0	True				
ANR	5567895	AssignmentExpression	buff [ buff_len ++ ] = raw [ i ]		5567788	0		=			
ANR	5567896	ArrayIndexing	buff [ buff_len ++ ]		5567788	0					
ANR	5567897	Identifier	buff		5567788	0					
ANR	5567898	PostIncDecOperationExpression	buff_len ++		5567788	1					
ANR	5567899	Identifier	buff_len		5567788	0					
ANR	5567900	IncDec	++		5567788	1					
ANR	5567901	ArrayIndexing	raw [ i ]		5567788	1					
ANR	5567902	Identifier	raw		5567788	0					
ANR	5567903	Identifier	i		5567788	1					
ANR	5567904	ContinueStatement	continue ;	86:3:2305:2313	5567788	2	True				
ANR	5567905	IfStatement	if ( raw [ i ] == ' ' || raw [ i ] == '\\t' || raw [ i ] == '\\r' || raw [ i ] == '\\n' )		5567788	1					
ANR	5567906	Condition	raw [ i ] == ' ' || raw [ i ] == '\\t' || raw [ i ] == '\\r' || raw [ i ] == '\\n'	90:7:2374:2434	5567788	0	True				
ANR	5567907	OrExpression	raw [ i ] == ' ' || raw [ i ] == '\\t' || raw [ i ] == '\\r' || raw [ i ] == '\\n'		5567788	0		||			
ANR	5567908	EqualityExpression	raw [ i ] == ' '		5567788	0		==			
ANR	5567909	ArrayIndexing	raw [ i ]		5567788	0					
ANR	5567910	Identifier	raw		5567788	0					
ANR	5567911	Identifier	i		5567788	1					
ANR	5567912	PrimaryExpression	' '		5567788	1					
ANR	5567913	OrExpression	raw [ i ] == '\\t' || raw [ i ] == '\\r' || raw [ i ] == '\\n'		5567788	1		||			
ANR	5567914	EqualityExpression	raw [ i ] == '\\t'		5567788	0		==			
ANR	5567915	ArrayIndexing	raw [ i ]		5567788	0					
ANR	5567916	Identifier	raw		5567788	0					
ANR	5567917	Identifier	i		5567788	1					
ANR	5567918	PrimaryExpression	'\\t'		5567788	1					
ANR	5567919	OrExpression	raw [ i ] == '\\r' || raw [ i ] == '\\n'		5567788	1		||			
ANR	5567920	EqualityExpression	raw [ i ] == '\\r'		5567788	0		==			
ANR	5567921	ArrayIndexing	raw [ i ]		5567788	0					
ANR	5567922	Identifier	raw		5567788	0					
ANR	5567923	Identifier	i		5567788	1					
ANR	5567924	PrimaryExpression	'\\r'		5567788	1					
ANR	5567925	EqualityExpression	raw [ i ] == '\\n'		5567788	1		==			
ANR	5567926	ArrayIndexing	raw [ i ]		5567788	0					
ANR	5567927	Identifier	raw		5567788	0					
ANR	5567928	Identifier	i		5567788	1					
ANR	5567929	PrimaryExpression	'\\n'		5567788	1					
ANR	5567930	CompoundStatement		27:70:496:496	5567788	1					
ANR	5567931	ExpressionStatement	buff [ buff_len ++ ] = '\\0'	95:3:2566:2589	5567788	0	True				
ANR	5567932	AssignmentExpression	buff [ buff_len ++ ] = '\\0'		5567788	0		=			
ANR	5567933	ArrayIndexing	buff [ buff_len ++ ]		5567788	0					
ANR	5567934	Identifier	buff		5567788	0					
ANR	5567935	PostIncDecOperationExpression	buff_len ++		5567788	1					
ANR	5567936	Identifier	buff_len		5567788	0					
ANR	5567937	IncDec	++		5567788	1					
ANR	5567938	PrimaryExpression	'\\0'		5567788	1					
ANR	5567939	ExpressionStatement	args . add_arg ( strdup ( buff ) )	96:3:2594:2622	5567788	1	True				
ANR	5567940	CallExpression	args . add_arg ( strdup ( buff ) )		5567788	0					
ANR	5567941	Callee	args . add_arg		5567788	0					
ANR	5567942	MemberAccess	args . add_arg		5567788	0					
ANR	5567943	Identifier	args		5567788	0					
ANR	5567944	Identifier	add_arg		5567788	1					
ANR	5567945	ArgumentList	strdup ( buff )		5567788	1					
ANR	5567946	Argument	strdup ( buff )		5567788	0					
ANR	5567947	CallExpression	strdup ( buff )		5567788	0					
ANR	5567948	Callee	strdup		5567788	0					
ANR	5567949	Identifier	strdup		5567788	0					
ANR	5567950	ArgumentList	buff		5567788	1					
ANR	5567951	Argument	buff		5567788	0					
ANR	5567952	Identifier	buff		5567788	0					
ANR	5567953	ExpressionStatement	buff_len = 0	97:3:2627:2639	5567788	2	True				
ANR	5567954	AssignmentExpression	buff_len = 0		5567788	0		=			
ANR	5567955	Identifier	buff_len		5567788	0					
ANR	5567956	PrimaryExpression	0		5567788	1					
ANR	5567957	ExpressionStatement	beginning = i + 1	99:3:2672:2687	5567788	3	True				
ANR	5567958	AssignmentExpression	beginning = i + 1		5567788	0		=			
ANR	5567959	Identifier	beginning		5567788	0					
ANR	5567960	AdditiveExpression	i + 1		5567788	1		+			
ANR	5567961	Identifier	i		5567788	0					
ANR	5567962	PrimaryExpression	1		5567788	1					
ANR	5567963	ElseStatement	else		5567788	0					
ANR	5567964	CompoundStatement		37:9:799:799	5567788	0					
ANR	5567965	ExpressionStatement	buff [ buff_len ++ ] = raw [ i ]	102:3:2790:2815	5567788	0	True				
ANR	5567966	AssignmentExpression	buff [ buff_len ++ ] = raw [ i ]		5567788	0		=			
ANR	5567967	ArrayIndexing	buff [ buff_len ++ ]		5567788	0					
ANR	5567968	Identifier	buff		5567788	0					
ANR	5567969	PostIncDecOperationExpression	buff_len ++		5567788	1					
ANR	5567970	Identifier	buff_len		5567788	0					
ANR	5567971	IncDec	++		5567788	1					
ANR	5567972	ArrayIndexing	raw [ i ]		5567788	1					
ANR	5567973	Identifier	raw		5567788	0					
ANR	5567974	Identifier	i		5567788	1					
ANR	5567975	ExpressionStatement	buff [ buff_len ++ ] = '\\0'	107:1:2855:2878	5567788	7	True				
ANR	5567976	AssignmentExpression	buff [ buff_len ++ ] = '\\0'		5567788	0		=			
ANR	5567977	ArrayIndexing	buff [ buff_len ++ ]		5567788	0					
ANR	5567978	Identifier	buff		5567788	0					
ANR	5567979	PostIncDecOperationExpression	buff_len ++		5567788	1					
ANR	5567980	Identifier	buff_len		5567788	0					
ANR	5567981	IncDec	++		5567788	1					
ANR	5567982	PrimaryExpression	'\\0'		5567788	1					
ANR	5567983	ExpressionStatement	args . add_arg ( strdup ( buff ) )	108:1:2881:2908	5567788	8	True				
ANR	5567984	CallExpression	args . add_arg ( strdup ( buff ) )		5567788	0					
ANR	5567985	Callee	args . add_arg		5567788	0					
ANR	5567986	MemberAccess	args . add_arg		5567788	0					
ANR	5567987	Identifier	args		5567788	0					
ANR	5567988	Identifier	add_arg		5567788	1					
ANR	5567989	ArgumentList	strdup ( buff )		5567788	1					
ANR	5567990	Argument	strdup ( buff )		5567788	0					
ANR	5567991	CallExpression	strdup ( buff )		5567788	0					
ANR	5567992	Callee	strdup		5567788	0					
ANR	5567993	Identifier	strdup		5567788	0					
ANR	5567994	ArgumentList	buff		5567788	1					
ANR	5567995	Argument	buff		5567788	0					
ANR	5567996	Identifier	buff		5567788	0					
ANR	5567997	ExpressionStatement	free ( buff )	110:1:2912:2923	5567788	9	True				
ANR	5567998	CallExpression	free ( buff )		5567788	0					
ANR	5567999	Callee	free		5567788	0					
ANR	5568000	Identifier	free		5567788	0					
ANR	5568001	ArgumentList	buff		5567788	1					
ANR	5568002	Argument	buff		5567788	0					
ANR	5568003	Identifier	buff		5567788	0					
ANR	5568004	ReturnStatement	return true ;	111:1:2926:2937	5567788	10	True				
ANR	5568005	Identifier	true		5567788	0					
ANR	5568006	ReturnType	bool		5567788	1					
ANR	5568007	Identifier	parse_vmgahp_command		5567788	2					
ANR	5568008	ParameterList	"const char * raw , Gahp_Args & args"		5567788	3					
ANR	5568009	Parameter	const char * raw	63:26:1905:1919	5567788	0	True				
ANR	5568010	ParameterType	const char *		5567788	0					
ANR	5568011	Identifier	raw		5567788	1					
ANR	5568012	Parameter	Gahp_Args & args	63:43:1922:1936	5567788	1	True				
ANR	5568013	ParameterType	Gahp_Args &		5567788	0					
ANR	5568014	Identifier	args		5567788	1					
ANR	5568015	CFGEntryNode	ENTRY		5567788		True				
ANR	5568016	CFGExitNode	EXIT		5567788		True				
ANR	5568017	Symbol	malloc		5567788						
ANR	5568018	Symbol	beginning		5567788						
ANR	5568019	Symbol	D_ALWAYS		5567788						
ANR	5568020	Symbol	false		5567788						
ANR	5568021	Symbol	raw		5567788						
ANR	5568022	Symbol	i		5567788						
ANR	5568023	Symbol	buff_len		5567788						
ANR	5568024	Symbol	args		5567788						
ANR	5568025	Symbol	strlen		5567788						
ANR	5568026	Symbol	* raw		5567788						
ANR	5568027	Symbol	* i		5567788						
ANR	5568028	Symbol	len		5567788						
ANR	5568029	Symbol	* buff		5567788						
ANR	5568030	Symbol	true		5567788						
ANR	5568031	Symbol	strdup		5567788						
ANR	5568032	Symbol	buff		5567788						
ANR	5568033	Function	verify_vm_type	115:0:3004:3254							
ANR	5568034	FunctionDef	verify_vm_type (const char * vmtype)		5568033	0					
ANR	5568035	CompoundStatement		117:0:3045:3254	5568033	0					
ANR	5568036	IdentifierDeclStatement	int i = 0 ;	118:1:3048:3055	5568033	0	True				
ANR	5568037	IdentifierDecl	i = 0		5568033	0					
ANR	5568038	IdentifierDeclType	int		5568033	0					
ANR	5568039	Identifier	i		5568033	1					
ANR	5568040	AssignmentExpression	i = 0		5568033	2		=			
ANR	5568041	Identifier	i		5568033	0					
ANR	5568042	PrimaryExpression	0		5568033	1					
ANR	5568043	WhileStatement	while ( support_vms_list [ i ] != NULL )		5568033	1					
ANR	5568044	Condition	support_vms_list [ i ] != NULL	119:7:3064:3090	5568033	0	True				
ANR	5568045	EqualityExpression	support_vms_list [ i ] != NULL		5568033	0		!=			
ANR	5568046	ArrayIndexing	support_vms_list [ i ]		5568033	0					
ANR	5568047	Identifier	support_vms_list		5568033	0					
ANR	5568048	Identifier	i		5568033	1					
ANR	5568049	Identifier	NULL		5568033	1					
ANR	5568050	CompoundStatement		3:36:47:47	5568033	1					
ANR	5568051	IfStatement	"if ( strcasecmp ( vmtype , support_vms_list [ i ] ) == 0 )"		5568033	0					
ANR	5568052	Condition	"strcasecmp ( vmtype , support_vms_list [ i ] ) == 0"	120:5:3100:3143	5568033	0	True				
ANR	5568053	EqualityExpression	"strcasecmp ( vmtype , support_vms_list [ i ] ) == 0"		5568033	0		==			
ANR	5568054	CallExpression	"strcasecmp ( vmtype , support_vms_list [ i ] )"		5568033	0					
ANR	5568055	Callee	strcasecmp		5568033	0					
ANR	5568056	Identifier	strcasecmp		5568033	0					
ANR	5568057	ArgumentList	vmtype		5568033	1					
ANR	5568058	Argument	vmtype		5568033	0					
ANR	5568059	Identifier	vmtype		5568033	0					
ANR	5568060	Argument	support_vms_list [ i ]		5568033	1					
ANR	5568061	ArrayIndexing	support_vms_list [ i ]		5568033	0					
ANR	5568062	Identifier	support_vms_list		5568033	0					
ANR	5568063	Identifier	i		5568033	1					
ANR	5568064	PrimaryExpression	0		5568033	1					
ANR	5568065	CompoundStatement		4:52:101:101	5568033	1					
ANR	5568066	ReturnStatement	return true ;	121:3:3152:3163	5568033	0	True				
ANR	5568067	Identifier	true		5568033	0					
ANR	5568068	ExpressionStatement	i ++	123:2:3171:3174	5568033	1	True				
ANR	5568069	PostIncDecOperationExpression	i ++		5568033	0					
ANR	5568070	Identifier	i		5568033	0					
ANR	5568071	IncDec	++		5568033	1					
ANR	5568072	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Not supported VM TYPE(%s)\\n"" , vmtype )"	125:1:3180:3237	5568033	2	True				
ANR	5568073	CallExpression	"vmprintf ( D_ALWAYS , ""Not supported VM TYPE(%s)\\n"" , vmtype )"		5568033	0					
ANR	5568074	Callee	vmprintf		5568033	0					
ANR	5568075	Identifier	vmprintf		5568033	0					
ANR	5568076	ArgumentList	D_ALWAYS		5568033	1					
ANR	5568077	Argument	D_ALWAYS		5568033	0					
ANR	5568078	Identifier	D_ALWAYS		5568033	0					
ANR	5568079	Argument	"""Not supported VM TYPE(%s)\\n"""		5568033	1					
ANR	5568080	PrimaryExpression	"""Not supported VM TYPE(%s)\\n"""		5568033	0					
ANR	5568081	Argument	vmtype		5568033	2					
ANR	5568082	Identifier	vmtype		5568033	0					
ANR	5568083	ReturnStatement	return false ;	126:1:3240:3252	5568033	3	True				
ANR	5568084	Identifier	false		5568033	0					
ANR	5568085	ReturnType	bool		5568033	1					
ANR	5568086	Identifier	verify_vm_type		5568033	2					
ANR	5568087	ParameterList	const char * vmtype		5568033	3					
ANR	5568088	Parameter	const char * vmtype	116:15:3025:3042	5568033	0	True				
ANR	5568089	ParameterType	const char *		5568033	0					
ANR	5568090	Identifier	vmtype		5568033	1					
ANR	5568091	CFGEntryNode	ENTRY		5568033		True				
ANR	5568092	CFGExitNode	EXIT		5568033		True				
ANR	5568093	Symbol	support_vms_list		5568033						
ANR	5568094	Symbol	vmtype		5568033						
ANR	5568095	Symbol	* i		5568033						
ANR	5568096	Symbol	NULL		5568033						
ANR	5568097	Symbol	true		5568033						
ANR	5568098	Symbol	D_ALWAYS		5568033						
ANR	5568099	Symbol	false		5568033						
ANR	5568100	Symbol	i		5568033						
ANR	5568101	Symbol	* support_vms_list		5568033						
ANR	5568102	Symbol	strcasecmp		5568033						
ANR	5568103	Function	check_vm_read_access_file	130:0:3258:3653							
ANR	5568104	FunctionDef	"check_vm_read_access_file (const char * file , bool is_root)"		5568103	0					
ANR	5568105	CompoundStatement		132:0:3331:3653	5568103	0					
ANR	5568106	IfStatement	if ( ( file == NULL ) || ( file [ 0 ] == '\\0' ) )		5568103	0					
ANR	5568107	Condition	( file == NULL ) || ( file [ 0 ] == '\\0' )	133:5:3338:3372	5568103	0	True				
ANR	5568108	OrExpression	( file == NULL ) || ( file [ 0 ] == '\\0' )		5568103	0		||			
ANR	5568109	EqualityExpression	file == NULL		5568103	0		==			
ANR	5568110	Identifier	file		5568103	0					
ANR	5568111	Identifier	NULL		5568103	1					
ANR	5568112	EqualityExpression	file [ 0 ] == '\\0'		5568103	1		==			
ANR	5568113	ArrayIndexing	file [ 0 ]		5568103	0					
ANR	5568114	Identifier	file		5568103	0					
ANR	5568115	PrimaryExpression	0		5568103	1					
ANR	5568116	PrimaryExpression	'\\0'		5568103	1					
ANR	5568117	CompoundStatement		2:43:44:44	5568103	1					
ANR	5568118	ReturnStatement	return false ;	134:2:3380:3392	5568103	0	True				
ANR	5568119	Identifier	false		5568103	0					
ANR	5568120	IdentifierDeclStatement	priv_state priv = PRIV_UNKNOWN ;	137:1:3399:3429	5568103	1	True				
ANR	5568121	IdentifierDecl	priv = PRIV_UNKNOWN		5568103	0					
ANR	5568122	IdentifierDeclType	priv_state		5568103	0					
ANR	5568123	Identifier	priv		5568103	1					
ANR	5568124	AssignmentExpression	priv = PRIV_UNKNOWN		5568103	2		=			
ANR	5568125	Identifier	PRIV_UNKNOWN		5568103	0					
ANR	5568126	Identifier	PRIV_UNKNOWN		5568103	1					
ANR	5568127	IfStatement	if ( is_root )		5568103	2					
ANR	5568128	Condition	is_root	138:5:3436:3442	5568103	0	True				
ANR	5568129	Identifier	is_root		5568103	0					
ANR	5568130	CompoundStatement		7:15:114:114	5568103	1					
ANR	5568131	ExpressionStatement	priv = set_root_priv ( )	139:2:3450:3472	5568103	0	True				
ANR	5568132	AssignmentExpression	priv = set_root_priv ( )		5568103	0		=			
ANR	5568133	Identifier	priv		5568103	0					
ANR	5568134	CallExpression	set_root_priv ( )		5568103	1					
ANR	5568135	Callee	set_root_priv		5568103	0					
ANR	5568136	Identifier	set_root_priv		5568103	0					
ANR	5568137	ArgumentList			5568103	1					
ANR	5568138	IdentifierDeclStatement	"int ret = access ( file , R_OK ) ;"	141:1:3478:3506	5568103	3	True				
ANR	5568139	IdentifierDecl	"ret = access ( file , R_OK )"		5568103	0					
ANR	5568140	IdentifierDeclType	int		5568103	0					
ANR	5568141	Identifier	ret		5568103	1					
ANR	5568142	AssignmentExpression	"ret = access ( file , R_OK )"		5568103	2		=			
ANR	5568143	Identifier	ret		5568103	0					
ANR	5568144	CallExpression	"access ( file , R_OK )"		5568103	1					
ANR	5568145	Callee	access		5568103	0					
ANR	5568146	Identifier	access		5568103	0					
ANR	5568147	ArgumentList	file		5568103	1					
ANR	5568148	Argument	file		5568103	0					
ANR	5568149	Identifier	file		5568103	0					
ANR	5568150	Argument	R_OK		5568103	1					
ANR	5568151	Identifier	R_OK		5568103	0					
ANR	5568152	IfStatement	if ( is_root )		5568103	4					
ANR	5568153	Condition	is_root	142:5:3513:3519	5568103	0	True				
ANR	5568154	Identifier	is_root		5568103	0					
ANR	5568155	CompoundStatement		11:15:191:191	5568103	1					
ANR	5568156	ExpressionStatement	set_priv ( priv )	143:2:3527:3541	5568103	0	True				
ANR	5568157	CallExpression	set_priv ( priv )		5568103	0					
ANR	5568158	Callee	set_priv		5568103	0					
ANR	5568159	Identifier	set_priv		5568103	0					
ANR	5568160	ArgumentList	priv		5568103	1					
ANR	5568161	Argument	priv		5568103	0					
ANR	5568162	Identifier	priv		5568103	0					
ANR	5568163	IfStatement	if ( ret < 0 )		5568103	5					
ANR	5568164	Condition	ret < 0	146:5:3552:3558	5568103	0	True				
ANR	5568165	RelationalExpression	ret < 0		5568103	0		<			
ANR	5568166	Identifier	ret		5568103	0					
ANR	5568167	PrimaryExpression	0		5568103	1					
ANR	5568168	CompoundStatement		15:15:230:230	5568103	1					
ANR	5568169	ExpressionStatement	"vmprintf ( D_ALWAYS , ""File(%s) can't be read\\n"" , file )"	147:2:3566:3618	5568103	0	True				
ANR	5568170	CallExpression	"vmprintf ( D_ALWAYS , ""File(%s) can't be read\\n"" , file )"		5568103	0					
ANR	5568171	Callee	vmprintf		5568103	0					
ANR	5568172	Identifier	vmprintf		5568103	0					
ANR	5568173	ArgumentList	D_ALWAYS		5568103	1					
ANR	5568174	Argument	D_ALWAYS		5568103	0					
ANR	5568175	Identifier	D_ALWAYS		5568103	0					
ANR	5568176	Argument	"""File(%s) can't be read\\n"""		5568103	1					
ANR	5568177	PrimaryExpression	"""File(%s) can't be read\\n"""		5568103	0					
ANR	5568178	Argument	file		5568103	2					
ANR	5568179	Identifier	file		5568103	0					
ANR	5568180	ReturnStatement	return false ;	148:2:3622:3634	5568103	1	True				
ANR	5568181	Identifier	false		5568103	0					
ANR	5568182	ReturnStatement	return true ;	150:1:3640:3651	5568103	6	True				
ANR	5568183	Identifier	true		5568103	0					
ANR	5568184	ReturnType	bool		5568103	1					
ANR	5568185	Identifier	check_vm_read_access_file		5568103	2					
ANR	5568186	ParameterList	"const char * file , bool is_root"		5568103	3					
ANR	5568187	Parameter	const char * file	131:26:3289:3304	5568103	0	True				
ANR	5568188	ParameterType	const char *		5568103	0					
ANR	5568189	Identifier	file		5568103	1					
ANR	5568190	Parameter	bool is_root	131:44:3307:3318	5568103	1	True				
ANR	5568191	ParameterType	bool		5568103	0					
ANR	5568192	Identifier	is_root		5568103	1					
ANR	5568193	CFGEntryNode	ENTRY		5568103		True				
ANR	5568194	CFGExitNode	EXIT		5568103		True				
ANR	5568195	Symbol	ret		5568103						
ANR	5568196	Symbol	NULL		5568103						
ANR	5568197	Symbol	access		5568103						
ANR	5568198	Symbol	false		5568103						
ANR	5568199	Symbol	D_ALWAYS		5568103						
ANR	5568200	Symbol	set_root_priv		5568103						
ANR	5568201	Symbol	is_root		5568103						
ANR	5568202	Symbol	* file		5568103						
ANR	5568203	Symbol	PRIV_UNKNOWN		5568103						
ANR	5568204	Symbol	R_OK		5568103						
ANR	5568205	Symbol	file		5568103						
ANR	5568206	Symbol	true		5568103						
ANR	5568207	Symbol	priv		5568103						
ANR	5568208	Function	check_vm_write_access_file	153:0:3656:4056							
ANR	5568209	FunctionDef	"check_vm_write_access_file (const char * file , bool is_root)"		5568208	0					
ANR	5568210	CompoundStatement		155:0:3730:4056	5568208	0					
ANR	5568211	IfStatement	if ( ( file == NULL ) || ( file [ 0 ] == '\\0' ) )		5568208	0					
ANR	5568212	Condition	( file == NULL ) || ( file [ 0 ] == '\\0' )	156:5:3737:3771	5568208	0	True				
ANR	5568213	OrExpression	( file == NULL ) || ( file [ 0 ] == '\\0' )		5568208	0		||			
ANR	5568214	EqualityExpression	file == NULL		5568208	0		==			
ANR	5568215	Identifier	file		5568208	0					
ANR	5568216	Identifier	NULL		5568208	1					
ANR	5568217	EqualityExpression	file [ 0 ] == '\\0'		5568208	1		==			
ANR	5568218	ArrayIndexing	file [ 0 ]		5568208	0					
ANR	5568219	Identifier	file		5568208	0					
ANR	5568220	PrimaryExpression	0		5568208	1					
ANR	5568221	PrimaryExpression	'\\0'		5568208	1					
ANR	5568222	CompoundStatement		2:43:44:44	5568208	1					
ANR	5568223	ReturnStatement	return false ;	157:2:3779:3791	5568208	0	True				
ANR	5568224	Identifier	false		5568208	0					
ANR	5568225	IdentifierDeclStatement	priv_state priv = PRIV_UNKNOWN ;	160:1:3798:3828	5568208	1	True				
ANR	5568226	IdentifierDecl	priv = PRIV_UNKNOWN		5568208	0					
ANR	5568227	IdentifierDeclType	priv_state		5568208	0					
ANR	5568228	Identifier	priv		5568208	1					
ANR	5568229	AssignmentExpression	priv = PRIV_UNKNOWN		5568208	2		=			
ANR	5568230	Identifier	PRIV_UNKNOWN		5568208	0					
ANR	5568231	Identifier	PRIV_UNKNOWN		5568208	1					
ANR	5568232	IfStatement	if ( is_root )		5568208	2					
ANR	5568233	Condition	is_root	161:5:3835:3841	5568208	0	True				
ANR	5568234	Identifier	is_root		5568208	0					
ANR	5568235	CompoundStatement		7:15:114:114	5568208	1					
ANR	5568236	ExpressionStatement	priv = set_root_priv ( )	162:2:3849:3871	5568208	0	True				
ANR	5568237	AssignmentExpression	priv = set_root_priv ( )		5568208	0		=			
ANR	5568238	Identifier	priv		5568208	0					
ANR	5568239	CallExpression	set_root_priv ( )		5568208	1					
ANR	5568240	Callee	set_root_priv		5568208	0					
ANR	5568241	Identifier	set_root_priv		5568208	0					
ANR	5568242	ArgumentList			5568208	1					
ANR	5568243	IdentifierDeclStatement	"int ret = access ( file , W_OK ) ;"	164:1:3877:3905	5568208	3	True				
ANR	5568244	IdentifierDecl	"ret = access ( file , W_OK )"		5568208	0					
ANR	5568245	IdentifierDeclType	int		5568208	0					
ANR	5568246	Identifier	ret		5568208	1					
ANR	5568247	AssignmentExpression	"ret = access ( file , W_OK )"		5568208	2		=			
ANR	5568248	Identifier	ret		5568208	0					
ANR	5568249	CallExpression	"access ( file , W_OK )"		5568208	1					
ANR	5568250	Callee	access		5568208	0					
ANR	5568251	Identifier	access		5568208	0					
ANR	5568252	ArgumentList	file		5568208	1					
ANR	5568253	Argument	file		5568208	0					
ANR	5568254	Identifier	file		5568208	0					
ANR	5568255	Argument	W_OK		5568208	1					
ANR	5568256	Identifier	W_OK		5568208	0					
ANR	5568257	IfStatement	if ( is_root )		5568208	4					
ANR	5568258	Condition	is_root	165:5:3912:3918	5568208	0	True				
ANR	5568259	Identifier	is_root		5568208	0					
ANR	5568260	CompoundStatement		11:15:191:191	5568208	1					
ANR	5568261	ExpressionStatement	set_priv ( priv )	166:2:3926:3940	5568208	0	True				
ANR	5568262	CallExpression	set_priv ( priv )		5568208	0					
ANR	5568263	Callee	set_priv		5568208	0					
ANR	5568264	Identifier	set_priv		5568208	0					
ANR	5568265	ArgumentList	priv		5568208	1					
ANR	5568266	Argument	priv		5568208	0					
ANR	5568267	Identifier	priv		5568208	0					
ANR	5568268	IfStatement	if ( ret < 0 )		5568208	5					
ANR	5568269	Condition	ret < 0	169:5:3951:3957	5568208	0	True				
ANR	5568270	RelationalExpression	ret < 0		5568208	0		<			
ANR	5568271	Identifier	ret		5568208	0					
ANR	5568272	PrimaryExpression	0		5568208	1					
ANR	5568273	CompoundStatement		15:15:230:230	5568208	1					
ANR	5568274	ExpressionStatement	"vmprintf ( D_ALWAYS , ""File(%s) can't be modified\\n"" , file )"	170:2:3965:4021	5568208	0	True				
ANR	5568275	CallExpression	"vmprintf ( D_ALWAYS , ""File(%s) can't be modified\\n"" , file )"		5568208	0					
ANR	5568276	Callee	vmprintf		5568208	0					
ANR	5568277	Identifier	vmprintf		5568208	0					
ANR	5568278	ArgumentList	D_ALWAYS		5568208	1					
ANR	5568279	Argument	D_ALWAYS		5568208	0					
ANR	5568280	Identifier	D_ALWAYS		5568208	0					
ANR	5568281	Argument	"""File(%s) can't be modified\\n"""		5568208	1					
ANR	5568282	PrimaryExpression	"""File(%s) can't be modified\\n"""		5568208	0					
ANR	5568283	Argument	file		5568208	2					
ANR	5568284	Identifier	file		5568208	0					
ANR	5568285	ReturnStatement	return false ;	171:2:4025:4037	5568208	1	True				
ANR	5568286	Identifier	false		5568208	0					
ANR	5568287	ReturnStatement	return true ;	173:1:4043:4054	5568208	6	True				
ANR	5568288	Identifier	true		5568208	0					
ANR	5568289	ReturnType	bool		5568208	1					
ANR	5568290	Identifier	check_vm_write_access_file		5568208	2					
ANR	5568291	ParameterList	"const char * file , bool is_root"		5568208	3					
ANR	5568292	Parameter	const char * file	154:27:3688:3703	5568208	0	True				
ANR	5568293	ParameterType	const char *		5568208	0					
ANR	5568294	Identifier	file		5568208	1					
ANR	5568295	Parameter	bool is_root	154:45:3706:3717	5568208	1	True				
ANR	5568296	ParameterType	bool		5568208	0					
ANR	5568297	Identifier	is_root		5568208	1					
ANR	5568298	CFGEntryNode	ENTRY		5568208		True				
ANR	5568299	CFGExitNode	EXIT		5568208		True				
ANR	5568300	Symbol	ret		5568208						
ANR	5568301	Symbol	NULL		5568208						
ANR	5568302	Symbol	access		5568208						
ANR	5568303	Symbol	false		5568208						
ANR	5568304	Symbol	D_ALWAYS		5568208						
ANR	5568305	Symbol	set_root_priv		5568208						
ANR	5568306	Symbol	is_root		5568208						
ANR	5568307	Symbol	* file		5568208						
ANR	5568308	Symbol	W_OK		5568208						
ANR	5568309	Symbol	PRIV_UNKNOWN		5568208						
ANR	5568310	Symbol	file		5568208						
ANR	5568311	Symbol	true		5568208						
ANR	5568312	Symbol	priv		5568208						
ANR	5568313	Function	check_vm_execute_file	176:0:4059:4454							
ANR	5568314	FunctionDef	"check_vm_execute_file (const char * file , bool is_root)"		5568313	0					
ANR	5568315	CompoundStatement		178:0:4128:4454	5568313	0					
ANR	5568316	IfStatement	if ( ( file == NULL ) || ( file [ 0 ] == '\\0' ) )		5568313	0					
ANR	5568317	Condition	( file == NULL ) || ( file [ 0 ] == '\\0' )	179:5:4135:4169	5568313	0	True				
ANR	5568318	OrExpression	( file == NULL ) || ( file [ 0 ] == '\\0' )		5568313	0		||			
ANR	5568319	EqualityExpression	file == NULL		5568313	0		==			
ANR	5568320	Identifier	file		5568313	0					
ANR	5568321	Identifier	NULL		5568313	1					
ANR	5568322	EqualityExpression	file [ 0 ] == '\\0'		5568313	1		==			
ANR	5568323	ArrayIndexing	file [ 0 ]		5568313	0					
ANR	5568324	Identifier	file		5568313	0					
ANR	5568325	PrimaryExpression	0		5568313	1					
ANR	5568326	PrimaryExpression	'\\0'		5568313	1					
ANR	5568327	CompoundStatement		2:43:44:44	5568313	1					
ANR	5568328	ReturnStatement	return false ;	180:2:4177:4189	5568313	0	True				
ANR	5568329	Identifier	false		5568313	0					
ANR	5568330	IdentifierDeclStatement	priv_state priv = PRIV_UNKNOWN ;	183:1:4196:4226	5568313	1	True				
ANR	5568331	IdentifierDecl	priv = PRIV_UNKNOWN		5568313	0					
ANR	5568332	IdentifierDeclType	priv_state		5568313	0					
ANR	5568333	Identifier	priv		5568313	1					
ANR	5568334	AssignmentExpression	priv = PRIV_UNKNOWN		5568313	2		=			
ANR	5568335	Identifier	PRIV_UNKNOWN		5568313	0					
ANR	5568336	Identifier	PRIV_UNKNOWN		5568313	1					
ANR	5568337	IfStatement	if ( is_root )		5568313	2					
ANR	5568338	Condition	is_root	184:5:4233:4239	5568313	0	True				
ANR	5568339	Identifier	is_root		5568313	0					
ANR	5568340	CompoundStatement		7:15:114:114	5568313	1					
ANR	5568341	ExpressionStatement	priv = set_root_priv ( )	185:2:4247:4269	5568313	0	True				
ANR	5568342	AssignmentExpression	priv = set_root_priv ( )		5568313	0		=			
ANR	5568343	Identifier	priv		5568313	0					
ANR	5568344	CallExpression	set_root_priv ( )		5568313	1					
ANR	5568345	Callee	set_root_priv		5568313	0					
ANR	5568346	Identifier	set_root_priv		5568313	0					
ANR	5568347	ArgumentList			5568313	1					
ANR	5568348	IdentifierDeclStatement	"int ret = access ( file , X_OK ) ;"	187:1:4275:4303	5568313	3	True				
ANR	5568349	IdentifierDecl	"ret = access ( file , X_OK )"		5568313	0					
ANR	5568350	IdentifierDeclType	int		5568313	0					
ANR	5568351	Identifier	ret		5568313	1					
ANR	5568352	AssignmentExpression	"ret = access ( file , X_OK )"		5568313	2		=			
ANR	5568353	Identifier	ret		5568313	0					
ANR	5568354	CallExpression	"access ( file , X_OK )"		5568313	1					
ANR	5568355	Callee	access		5568313	0					
ANR	5568356	Identifier	access		5568313	0					
ANR	5568357	ArgumentList	file		5568313	1					
ANR	5568358	Argument	file		5568313	0					
ANR	5568359	Identifier	file		5568313	0					
ANR	5568360	Argument	X_OK		5568313	1					
ANR	5568361	Identifier	X_OK		5568313	0					
ANR	5568362	IfStatement	if ( is_root )		5568313	4					
ANR	5568363	Condition	is_root	188:5:4310:4316	5568313	0	True				
ANR	5568364	Identifier	is_root		5568313	0					
ANR	5568365	CompoundStatement		11:15:191:191	5568313	1					
ANR	5568366	ExpressionStatement	set_priv ( priv )	189:2:4324:4338	5568313	0	True				
ANR	5568367	CallExpression	set_priv ( priv )		5568313	0					
ANR	5568368	Callee	set_priv		5568313	0					
ANR	5568369	Identifier	set_priv		5568313	0					
ANR	5568370	ArgumentList	priv		5568313	1					
ANR	5568371	Argument	priv		5568313	0					
ANR	5568372	Identifier	priv		5568313	0					
ANR	5568373	IfStatement	if ( ret < 0 )		5568313	5					
ANR	5568374	Condition	ret < 0	192:5:4349:4355	5568313	0	True				
ANR	5568375	RelationalExpression	ret < 0		5568313	0		<			
ANR	5568376	Identifier	ret		5568313	0					
ANR	5568377	PrimaryExpression	0		5568313	1					
ANR	5568378	CompoundStatement		15:15:230:230	5568313	1					
ANR	5568379	ExpressionStatement	"vmprintf ( D_ALWAYS , ""File(%s) can't be executed\\n"" , file )"	193:2:4363:4419	5568313	0	True				
ANR	5568380	CallExpression	"vmprintf ( D_ALWAYS , ""File(%s) can't be executed\\n"" , file )"		5568313	0					
ANR	5568381	Callee	vmprintf		5568313	0					
ANR	5568382	Identifier	vmprintf		5568313	0					
ANR	5568383	ArgumentList	D_ALWAYS		5568313	1					
ANR	5568384	Argument	D_ALWAYS		5568313	0					
ANR	5568385	Identifier	D_ALWAYS		5568313	0					
ANR	5568386	Argument	"""File(%s) can't be executed\\n"""		5568313	1					
ANR	5568387	PrimaryExpression	"""File(%s) can't be executed\\n"""		5568313	0					
ANR	5568388	Argument	file		5568313	2					
ANR	5568389	Identifier	file		5568313	0					
ANR	5568390	ReturnStatement	return false ;	194:2:4423:4435	5568313	1	True				
ANR	5568391	Identifier	false		5568313	0					
ANR	5568392	ReturnStatement	return true ;	196:1:4441:4452	5568313	6	True				
ANR	5568393	Identifier	true		5568313	0					
ANR	5568394	ReturnType	bool		5568313	1					
ANR	5568395	Identifier	check_vm_execute_file		5568313	2					
ANR	5568396	ParameterList	"const char * file , bool is_root"		5568313	3					
ANR	5568397	Parameter	const char * file	177:22:4086:4101	5568313	0	True				
ANR	5568398	ParameterType	const char *		5568313	0					
ANR	5568399	Identifier	file		5568313	1					
ANR	5568400	Parameter	bool is_root	177:40:4104:4115	5568313	1	True				
ANR	5568401	ParameterType	bool		5568313	0					
ANR	5568402	Identifier	is_root		5568313	1					
ANR	5568403	CFGEntryNode	ENTRY		5568313		True				
ANR	5568404	CFGExitNode	EXIT		5568313		True				
ANR	5568405	Symbol	ret		5568313						
ANR	5568406	Symbol	NULL		5568313						
ANR	5568407	Symbol	access		5568313						
ANR	5568408	Symbol	false		5568313						
ANR	5568409	Symbol	D_ALWAYS		5568313						
ANR	5568410	Symbol	set_root_priv		5568313						
ANR	5568411	Symbol	X_OK		5568313						
ANR	5568412	Symbol	is_root		5568313						
ANR	5568413	Symbol	* file		5568313						
ANR	5568414	Symbol	PRIV_UNKNOWN		5568313						
ANR	5568415	Symbol	file		5568313						
ANR	5568416	Symbol	true		5568313						
ANR	5568417	Symbol	priv		5568313						
ANR	5568418	Function	write_local_settings_from_file	199:0:4457:5719							
ANR	5568419	FunctionDef	"write_local_settings_from_file (FILE * out_fp , const char * param_name , const char * start_mark , const char * end_mark)"		5568418	0					
ANR	5568420	CompoundStatement		204:0:4670:5719	5568418	0					
ANR	5568421	IdentifierDeclStatement	char * tmp = param ( param_name ) ;	205:1:4673:4702	5568418	0	True				
ANR	5568422	IdentifierDecl	* tmp = param ( param_name )		5568418	0					
ANR	5568423	IdentifierDeclType	char *		5568418	0					
ANR	5568424	Identifier	tmp		5568418	1					
ANR	5568425	AssignmentExpression	* tmp = param ( param_name )		5568418	2		=			
ANR	5568426	Identifier	tmp		5568418	0					
ANR	5568427	CallExpression	param ( param_name )		5568418	1					
ANR	5568428	Callee	param		5568418	0					
ANR	5568429	Identifier	param		5568418	0					
ANR	5568430	ArgumentList	param_name		5568418	1					
ANR	5568431	Argument	param_name		5568418	0					
ANR	5568432	Identifier	param_name		5568418	0					
ANR	5568433	IfStatement	if ( tmp == NULL )		5568418	1					
ANR	5568434	Condition	tmp == NULL	206:5:4709:4719	5568418	0	True				
ANR	5568435	EqualityExpression	tmp == NULL		5568418	0		==			
ANR	5568436	Identifier	tmp		5568418	0					
ANR	5568437	Identifier	NULL		5568418	1					
ANR	5568438	CompoundStatement		3:18:51:51	5568418	1					
ANR	5568439	ReturnStatement	return true ;	207:2:4726:4737	5568418	0	True				
ANR	5568440	Identifier	true		5568418	0					
ANR	5568441	IdentifierDeclStatement	MyString local_settings_file = tmp ;	209:1:4743:4777	5568418	2	True				
ANR	5568442	IdentifierDecl	local_settings_file = tmp		5568418	0					
ANR	5568443	IdentifierDeclType	MyString		5568418	0					
ANR	5568444	Identifier	local_settings_file		5568418	1					
ANR	5568445	AssignmentExpression	local_settings_file = tmp		5568418	2		=			
ANR	5568446	Identifier	tmp		5568418	0					
ANR	5568447	Identifier	tmp		5568418	1					
ANR	5568448	ExpressionStatement	free ( tmp )	210:1:4780:4789	5568418	3	True				
ANR	5568449	CallExpression	free ( tmp )		5568418	0					
ANR	5568450	Callee	free		5568418	0					
ANR	5568451	Identifier	free		5568418	0					
ANR	5568452	ArgumentList	tmp		5568418	1					
ANR	5568453	Argument	tmp		5568418	0					
ANR	5568454	Identifier	tmp		5568418	0					
ANR	5568455	IfStatement	if ( start_mark != NULL )		5568418	4					
ANR	5568456	Condition	start_mark != NULL	211:5:4796:4813	5568418	0	True				
ANR	5568457	EqualityExpression	start_mark != NULL		5568418	0		!=			
ANR	5568458	Identifier	start_mark		5568418	0					
ANR	5568459	Identifier	NULL		5568418	1					
ANR	5568460	CompoundStatement		8:25:145:145	5568418	1					
ANR	5568461	IfStatement	"if ( fprintf ( out_fp , ""%s\\n"" , start_mark ) < 0 )"		5568418	0					
ANR	5568462	Condition	"fprintf ( out_fp , ""%s\\n"" , start_mark ) < 0"	212:6:4824:4862	5568418	0	True				
ANR	5568463	RelationalExpression	"fprintf ( out_fp , ""%s\\n"" , start_mark ) < 0"		5568418	0		<			
ANR	5568464	CallExpression	"fprintf ( out_fp , ""%s\\n"" , start_mark )"		5568418	0					
ANR	5568465	Callee	fprintf		5568418	0					
ANR	5568466	Identifier	fprintf		5568418	0					
ANR	5568467	ArgumentList	out_fp		5568418	1					
ANR	5568468	Argument	out_fp		5568418	0					
ANR	5568469	Identifier	out_fp		5568418	0					
ANR	5568470	Argument	"""%s\\n"""		5568418	1					
ANR	5568471	PrimaryExpression	"""%s\\n"""		5568418	0					
ANR	5568472	Argument	start_mark		5568418	2					
ANR	5568473	Identifier	start_mark		5568418	0					
ANR	5568474	PrimaryExpression	0		5568418	1					
ANR	5568475	CompoundStatement		9:47:194:194	5568418	1					
ANR	5568476	ExpressionStatement	"vmprintf ( D_ALWAYS , ""fprintf error writing start marker: %s\\n"" , strerror ( errno ) )"	213:3:4870:4973	5568418	0	True				
ANR	5568477	CallExpression	"vmprintf ( D_ALWAYS , ""fprintf error writing start marker: %s\\n"" , strerror ( errno ) )"		5568418	0					
ANR	5568478	Callee	vmprintf		5568418	0					
ANR	5568479	Identifier	vmprintf		5568418	0					
ANR	5568480	ArgumentList	D_ALWAYS		5568418	1					
ANR	5568481	Argument	D_ALWAYS		5568418	0					
ANR	5568482	Identifier	D_ALWAYS		5568418	0					
ANR	5568483	Argument	"""fprintf error writing start marker: %s\\n"""		5568418	1					
ANR	5568484	PrimaryExpression	"""fprintf error writing start marker: %s\\n"""		5568418	0					
ANR	5568485	Argument	strerror ( errno )		5568418	2					
ANR	5568486	CallExpression	strerror ( errno )		5568418	0					
ANR	5568487	Callee	strerror		5568418	0					
ANR	5568488	Identifier	strerror		5568418	0					
ANR	5568489	ArgumentList	errno		5568418	1					
ANR	5568490	Argument	errno		5568418	0					
ANR	5568491	Identifier	errno		5568418	0					
ANR	5568492	ReturnStatement	return false ;	216:3:4978:4990	5568418	1	True				
ANR	5568493	Identifier	false		5568418	0					
ANR	5568494	IdentifierDeclStatement	"FILE * in_fp = safe_fopen_wrapper_follow ( local_settings_file . Value ( ) , ""r"" ) ;"	219:1:5000:5073	5568418	5	True				
ANR	5568495	IdentifierDecl	"* in_fp = safe_fopen_wrapper_follow ( local_settings_file . Value ( ) , ""r"" )"		5568418	0					
ANR	5568496	IdentifierDeclType	FILE *		5568418	0					
ANR	5568497	Identifier	in_fp		5568418	1					
ANR	5568498	AssignmentExpression	"* in_fp = safe_fopen_wrapper_follow ( local_settings_file . Value ( ) , ""r"" )"		5568418	2		=			
ANR	5568499	Identifier	in_fp		5568418	0					
ANR	5568500	CallExpression	"safe_fopen_wrapper_follow ( local_settings_file . Value ( ) , ""r"" )"		5568418	1					
ANR	5568501	Callee	safe_fopen_wrapper_follow		5568418	0					
ANR	5568502	Identifier	safe_fopen_wrapper_follow		5568418	0					
ANR	5568503	ArgumentList	local_settings_file . Value ( )		5568418	1					
ANR	5568504	Argument	local_settings_file . Value ( )		5568418	0					
ANR	5568505	CallExpression	local_settings_file . Value ( )		5568418	0					
ANR	5568506	Callee	local_settings_file . Value		5568418	0					
ANR	5568507	MemberAccess	local_settings_file . Value		5568418	0					
ANR	5568508	Identifier	local_settings_file		5568418	0					
ANR	5568509	Identifier	Value		5568418	1					
ANR	5568510	ArgumentList			5568418	1					
ANR	5568511	Argument	"""r"""		5568418	1					
ANR	5568512	PrimaryExpression	"""r"""		5568418	0					
ANR	5568513	IfStatement	if ( in_fp == NULL )		5568418	6					
ANR	5568514	Condition	in_fp == NULL	220:5:5080:5092	5568418	0	True				
ANR	5568515	EqualityExpression	in_fp == NULL		5568418	0		==			
ANR	5568516	Identifier	in_fp		5568418	0					
ANR	5568517	Identifier	NULL		5568418	1					
ANR	5568518	CompoundStatement		17:20:424:424	5568418	1					
ANR	5568519	ExpressionStatement	"vmprintf ( D_ALWAYS , ""fopen error on %s: %s\\n"" , local_settings_file . Value ( ) , strerror ( errno ) )"	221:2:5099:5223	5568418	0	True				
ANR	5568520	CallExpression	"vmprintf ( D_ALWAYS , ""fopen error on %s: %s\\n"" , local_settings_file . Value ( ) , strerror ( errno ) )"		5568418	0					
ANR	5568521	Callee	vmprintf		5568418	0					
ANR	5568522	Identifier	vmprintf		5568418	0					
ANR	5568523	ArgumentList	D_ALWAYS		5568418	1					
ANR	5568524	Argument	D_ALWAYS		5568418	0					
ANR	5568525	Identifier	D_ALWAYS		5568418	0					
ANR	5568526	Argument	"""fopen error on %s: %s\\n"""		5568418	1					
ANR	5568527	PrimaryExpression	"""fopen error on %s: %s\\n"""		5568418	0					
ANR	5568528	Argument	local_settings_file . Value ( )		5568418	2					
ANR	5568529	CallExpression	local_settings_file . Value ( )		5568418	0					
ANR	5568530	Callee	local_settings_file . Value		5568418	0					
ANR	5568531	MemberAccess	local_settings_file . Value		5568418	0					
ANR	5568532	Identifier	local_settings_file		5568418	0					
ANR	5568533	Identifier	Value		5568418	1					
ANR	5568534	ArgumentList			5568418	1					
ANR	5568535	Argument	strerror ( errno )		5568418	3					
ANR	5568536	CallExpression	strerror ( errno )		5568418	0					
ANR	5568537	Callee	strerror		5568418	0					
ANR	5568538	Identifier	strerror		5568418	0					
ANR	5568539	ArgumentList	errno		5568418	1					
ANR	5568540	Argument	errno		5568418	0					
ANR	5568541	Identifier	errno		5568418	0					
ANR	5568542	ReturnStatement	return false ;	225:2:5227:5239	5568418	1	True				
ANR	5568543	Identifier	false		5568418	0					
ANR	5568544	IdentifierDeclStatement	MyString line ;	227:1:5245:5258	5568418	7	True				
ANR	5568545	IdentifierDecl	line		5568418	0					
ANR	5568546	IdentifierDeclType	MyString		5568418	0					
ANR	5568547	Identifier	line		5568418	1					
ANR	5568548	WhileStatement	while ( line . readLine ( in_fp ) )		5568418	8					
ANR	5568549	Condition	line . readLine ( in_fp )	228:8:5268:5287	5568418	0	True				
ANR	5568550	CallExpression	line . readLine ( in_fp )		5568418	0					
ANR	5568551	Callee	line . readLine		5568418	0					
ANR	5568552	MemberAccess	line . readLine		5568418	0					
ANR	5568553	Identifier	line		5568418	0					
ANR	5568554	Identifier	readLine		5568418	1					
ANR	5568555	ArgumentList	in_fp		5568418	1					
ANR	5568556	Argument	in_fp		5568418	0					
ANR	5568557	Identifier	in_fp		5568418	0					
ANR	5568558	CompoundStatement		25:30:619:619	5568418	1					
ANR	5568559	IfStatement	"if ( fputs ( line . Value ( ) , out_fp ) == EOF )"		5568418	0					
ANR	5568560	Condition	"fputs ( line . Value ( ) , out_fp ) == EOF"	229:6:5298:5331	5568418	0	True				
ANR	5568561	EqualityExpression	"fputs ( line . Value ( ) , out_fp ) == EOF"		5568418	0		==			
ANR	5568562	CallExpression	"fputs ( line . Value ( ) , out_fp )"		5568418	0					
ANR	5568563	Callee	fputs		5568418	0					
ANR	5568564	Identifier	fputs		5568418	0					
ANR	5568565	ArgumentList	line . Value ( )		5568418	1					
ANR	5568566	Argument	line . Value ( )		5568418	0					
ANR	5568567	CallExpression	line . Value ( )		5568418	0					
ANR	5568568	Callee	line . Value		5568418	0					
ANR	5568569	MemberAccess	line . Value		5568418	0					
ANR	5568570	Identifier	line		5568418	0					
ANR	5568571	Identifier	Value		5568418	1					
ANR	5568572	ArgumentList			5568418	1					
ANR	5568573	Argument	out_fp		5568418	1					
ANR	5568574	Identifier	out_fp		5568418	0					
ANR	5568575	Identifier	EOF		5568418	1					
ANR	5568576	CompoundStatement		26:42:663:663	5568418	1					
ANR	5568577	ExpressionStatement	"vmprintf ( D_ALWAYS , ""fputs error copying local settings: %s\\n"" , strerror ( errno ) )"	230:3:5339:5442	5568418	0	True				
ANR	5568578	CallExpression	"vmprintf ( D_ALWAYS , ""fputs error copying local settings: %s\\n"" , strerror ( errno ) )"		5568418	0					
ANR	5568579	Callee	vmprintf		5568418	0					
ANR	5568580	Identifier	vmprintf		5568418	0					
ANR	5568581	ArgumentList	D_ALWAYS		5568418	1					
ANR	5568582	Argument	D_ALWAYS		5568418	0					
ANR	5568583	Identifier	D_ALWAYS		5568418	0					
ANR	5568584	Argument	"""fputs error copying local settings: %s\\n"""		5568418	1					
ANR	5568585	PrimaryExpression	"""fputs error copying local settings: %s\\n"""		5568418	0					
ANR	5568586	Argument	strerror ( errno )		5568418	2					
ANR	5568587	CallExpression	strerror ( errno )		5568418	0					
ANR	5568588	Callee	strerror		5568418	0					
ANR	5568589	Identifier	strerror		5568418	0					
ANR	5568590	ArgumentList	errno		5568418	1					
ANR	5568591	Argument	errno		5568418	0					
ANR	5568592	Identifier	errno		5568418	0					
ANR	5568593	ExpressionStatement	fclose ( in_fp )	233:3:5447:5460	5568418	1	True				
ANR	5568594	CallExpression	fclose ( in_fp )		5568418	0					
ANR	5568595	Callee	fclose		5568418	0					
ANR	5568596	Identifier	fclose		5568418	0					
ANR	5568597	ArgumentList	in_fp		5568418	1					
ANR	5568598	Argument	in_fp		5568418	0					
ANR	5568599	Identifier	in_fp		5568418	0					
ANR	5568600	ReturnStatement	return false ;	234:3:5465:5477	5568418	2	True				
ANR	5568601	Identifier	false		5568418	0					
ANR	5568602	ExpressionStatement	fclose ( in_fp )	237:1:5487:5500	5568418	9	True				
ANR	5568603	CallExpression	fclose ( in_fp )		5568418	0					
ANR	5568604	Callee	fclose		5568418	0					
ANR	5568605	Identifier	fclose		5568418	0					
ANR	5568606	ArgumentList	in_fp		5568418	1					
ANR	5568607	Argument	in_fp		5568418	0					
ANR	5568608	Identifier	in_fp		5568418	0					
ANR	5568609	IfStatement	if ( end_mark != NULL )		5568418	10					
ANR	5568610	Condition	end_mark != NULL	238:5:5507:5522	5568418	0	True				
ANR	5568611	EqualityExpression	end_mark != NULL		5568418	0		!=			
ANR	5568612	Identifier	end_mark		5568418	0					
ANR	5568613	Identifier	NULL		5568418	1					
ANR	5568614	CompoundStatement		35:23:854:854	5568418	1					
ANR	5568615	IfStatement	"if ( fprintf ( out_fp , ""%s\\n"" , end_mark ) == EOF )"		5568418	0					
ANR	5568616	Condition	"fprintf ( out_fp , ""%s\\n"" , end_mark ) == EOF"	239:6:5533:5572	5568418	0	True				
ANR	5568617	EqualityExpression	"fprintf ( out_fp , ""%s\\n"" , end_mark ) == EOF"		5568418	0		==			
ANR	5568618	CallExpression	"fprintf ( out_fp , ""%s\\n"" , end_mark )"		5568418	0					
ANR	5568619	Callee	fprintf		5568418	0					
ANR	5568620	Identifier	fprintf		5568418	0					
ANR	5568621	ArgumentList	out_fp		5568418	1					
ANR	5568622	Argument	out_fp		5568418	0					
ANR	5568623	Identifier	out_fp		5568418	0					
ANR	5568624	Argument	"""%s\\n"""		5568418	1					
ANR	5568625	PrimaryExpression	"""%s\\n"""		5568418	0					
ANR	5568626	Argument	end_mark		5568418	2					
ANR	5568627	Identifier	end_mark		5568418	0					
ANR	5568628	Identifier	EOF		5568418	1					
ANR	5568629	CompoundStatement		36:48:904:904	5568418	1					
ANR	5568630	ExpressionStatement	"vmprintf ( D_ALWAYS , ""fputs error writing end marker: %s\\n"" , strerror ( errno ) )"	240:3:5580:5679	5568418	0	True				
ANR	5568631	CallExpression	"vmprintf ( D_ALWAYS , ""fputs error writing end marker: %s\\n"" , strerror ( errno ) )"		5568418	0					
ANR	5568632	Callee	vmprintf		5568418	0					
ANR	5568633	Identifier	vmprintf		5568418	0					
ANR	5568634	ArgumentList	D_ALWAYS		5568418	1					
ANR	5568635	Argument	D_ALWAYS		5568418	0					
ANR	5568636	Identifier	D_ALWAYS		5568418	0					
ANR	5568637	Argument	"""fputs error writing end marker: %s\\n"""		5568418	1					
ANR	5568638	PrimaryExpression	"""fputs error writing end marker: %s\\n"""		5568418	0					
ANR	5568639	Argument	strerror ( errno )		5568418	2					
ANR	5568640	CallExpression	strerror ( errno )		5568418	0					
ANR	5568641	Callee	strerror		5568418	0					
ANR	5568642	Identifier	strerror		5568418	0					
ANR	5568643	ArgumentList	errno		5568418	1					
ANR	5568644	Argument	errno		5568418	0					
ANR	5568645	Identifier	errno		5568418	0					
ANR	5568646	ReturnStatement	return false ;	243:3:5684:5696	5568418	1	True				
ANR	5568647	Identifier	false		5568418	0					
ANR	5568648	ReturnStatement	return true ;	246:1:5706:5717	5568418	11	True				
ANR	5568649	Identifier	true		5568418	0					
ANR	5568650	ReturnType	bool		5568418	1					
ANR	5568651	Identifier	write_local_settings_from_file		5568418	2					
ANR	5568652	ParameterList	"FILE * out_fp , const char * param_name , const char * start_mark , const char * end_mark"		5568418	3					
ANR	5568653	Parameter	FILE * out_fp	200:31:4493:4504	5568418	0	True				
ANR	5568654	ParameterType	FILE *		5568418	0					
ANR	5568655	Identifier	out_fp		5568418	1					
ANR	5568656	Parameter	const char * param_name	201:31:4538:4559	5568418	1	True				
ANR	5568657	ParameterType	const char *		5568418	0					
ANR	5568658	Identifier	param_name		5568418	1					
ANR	5568659	Parameter	const char * start_mark	202:31:4593:4614	5568418	2	True				
ANR	5568660	ParameterType	const char *		5568418	0					
ANR	5568661	Identifier	start_mark		5568418	1					
ANR	5568662	Parameter	const char * end_mark	203:31:4648:4667	5568418	3	True				
ANR	5568663	ParameterType	const char *		5568418	0					
ANR	5568664	Identifier	end_mark		5568418	1					
ANR	5568665	CFGEntryNode	ENTRY		5568418		True				
ANR	5568666	CFGExitNode	EXIT		5568418		True				
ANR	5568667	Symbol	line . readLine		5568418						
ANR	5568668	Symbol	errno		5568418						
ANR	5568669	Symbol	NULL		5568418						
ANR	5568670	Symbol	line . Value		5568418						
ANR	5568671	Symbol	line		5568418						
ANR	5568672	Symbol	end_mark		5568418						
ANR	5568673	Symbol	D_ALWAYS		5568418						
ANR	5568674	Symbol	false		5568418						
ANR	5568675	Symbol	local_settings_file		5568418						
ANR	5568676	Symbol	out_fp		5568418						
ANR	5568677	Symbol	fprintf		5568418						
ANR	5568678	Symbol	strerror		5568418						
ANR	5568679	Symbol	start_mark		5568418						
ANR	5568680	Symbol	param		5568418						
ANR	5568681	Symbol	tmp		5568418						
ANR	5568682	Symbol	true		5568418						
ANR	5568683	Symbol	fputs		5568418						
ANR	5568684	Symbol	local_settings_file . Value		5568418						
ANR	5568685	Symbol	param_name		5568418						
ANR	5568686	Symbol	safe_fopen_wrapper_follow		5568418						
ANR	5568687	Symbol	EOF		5568418						
ANR	5568688	Symbol	in_fp		5568418						
ANR	5568689	Function	parse_result_string	255:0:5977:6382							
ANR	5568690	FunctionDef	"parse_result_string (const char * result_string , int field_num)"		5568689	0					
ANR	5568691	CompoundStatement		256:0:6049:6382	5568689	0					
ANR	5568692	IdentifierDeclStatement	"StringList result_list ( result_string , "" "" ) ;"	257:1:6052:6094	5568689	0	True				
ANR	5568693	IdentifierDecl	"result_list ( result_string , "" "" )"		5568689	0					
ANR	5568694	IdentifierDeclType	StringList		5568689	0					
ANR	5568695	Identifier	result_list		5568689	1					
ANR	5568696	Expression	"result_string , "" """		5568689	2					
ANR	5568697	Identifier	result_string		5568689	0					
ANR	5568698	PrimaryExpression	""" """		5568689	1					
ANR	5568699	IfStatement	if ( result_list . isEmpty ( ) )		5568689	1					
ANR	5568700	Condition	result_list . isEmpty ( )	258:5:6101:6121	5568689	0	True				
ANR	5568701	CallExpression	result_list . isEmpty ( )		5568689	0					
ANR	5568702	Callee	result_list . isEmpty		5568689	0					
ANR	5568703	MemberAccess	result_list . isEmpty		5568689	0					
ANR	5568704	Identifier	result_list		5568689	0					
ANR	5568705	Identifier	isEmpty		5568689	1					
ANR	5568706	ArgumentList			5568689	1					
ANR	5568707	CompoundStatement		3:29:75:75	5568689	1					
ANR	5568708	ReturnStatement	"return """" ;"	259:2:6129:6138	5568689	0	True				
ANR	5568709	PrimaryExpression	""""""		5568689	0					
ANR	5568710	IfStatement	if ( field_num > result_list . number ( ) )		5568689	2					
ANR	5568711	Condition	field_num > result_list . number ( )	262:5:6149:6180	5568689	0	True				
ANR	5568712	RelationalExpression	field_num > result_list . number ( )		5568689	0		>			
ANR	5568713	Identifier	field_num		5568689	0					
ANR	5568714	CallExpression	result_list . number ( )		5568689	1					
ANR	5568715	Callee	result_list . number		5568689	0					
ANR	5568716	MemberAccess	result_list . number		5568689	0					
ANR	5568717	Identifier	result_list		5568689	0					
ANR	5568718	Identifier	number		5568689	1					
ANR	5568719	ArgumentList			5568689	1					
ANR	5568720	CompoundStatement		7:40:134:134	5568689	1					
ANR	5568721	ReturnStatement	"return """" ;"	263:2:6188:6197	5568689	0	True				
ANR	5568722	PrimaryExpression	""""""		5568689	0					
ANR	5568723	IdentifierDeclStatement	char * arg = NULL ;	266:1:6204:6220	5568689	3	True				
ANR	5568724	IdentifierDecl	* arg = NULL		5568689	0					
ANR	5568725	IdentifierDeclType	char *		5568689	0					
ANR	5568726	Identifier	arg		5568689	1					
ANR	5568727	AssignmentExpression	* arg = NULL		5568689	2		=			
ANR	5568728	Identifier	NULL		5568689	0					
ANR	5568729	Identifier	NULL		5568689	1					
ANR	5568730	IdentifierDeclStatement	int field = 0 ;	267:1:6223:6236	5568689	4	True				
ANR	5568731	IdentifierDecl	field = 0		5568689	0					
ANR	5568732	IdentifierDeclType	int		5568689	0					
ANR	5568733	Identifier	field		5568689	1					
ANR	5568734	AssignmentExpression	field = 0		5568689	2		=			
ANR	5568735	Identifier	field		5568689	0					
ANR	5568736	PrimaryExpression	0		5568689	1					
ANR	5568737	ExpressionStatement	result_list . rewind ( )	268:1:6239:6259	5568689	5	True				
ANR	5568738	CallExpression	result_list . rewind ( )		5568689	0					
ANR	5568739	Callee	result_list . rewind		5568689	0					
ANR	5568740	MemberAccess	result_list . rewind		5568689	0					
ANR	5568741	Identifier	result_list		5568689	0					
ANR	5568742	Identifier	rewind		5568689	1					
ANR	5568743	ArgumentList			5568689	1					
ANR	5568744	WhileStatement	while ( ( arg = result_list . next ( ) ) != NULL )		5568689	6					
ANR	5568745	Condition	( arg = result_list . next ( ) ) != NULL	269:8:6269:6302	5568689	0	True				
ANR	5568746	EqualityExpression	( arg = result_list . next ( ) ) != NULL		5568689	0		!=			
ANR	5568747	AssignmentExpression	arg = result_list . next ( )		5568689	0		=			
ANR	5568748	Identifier	arg		5568689	0					
ANR	5568749	CallExpression	result_list . next ( )		5568689	1					
ANR	5568750	Callee	result_list . next		5568689	0					
ANR	5568751	MemberAccess	result_list . next		5568689	0					
ANR	5568752	Identifier	result_list		5568689	0					
ANR	5568753	Identifier	next		5568689	1					
ANR	5568754	ArgumentList			5568689	1					
ANR	5568755	Identifier	NULL		5568689	1					
ANR	5568756	CompoundStatement		14:45:256:256	5568689	1					
ANR	5568757	ExpressionStatement	field ++	270:2:6310:6317	5568689	0	True				
ANR	5568758	PostIncDecOperationExpression	field ++		5568689	0					
ANR	5568759	Identifier	field		5568689	0					
ANR	5568760	IncDec	++		5568689	1					
ANR	5568761	IfStatement	if ( field == field_num )		5568689	1					
ANR	5568762	Condition	field == field_num	271:6:6325:6342	5568689	0	True				
ANR	5568763	EqualityExpression	field == field_num		5568689	0		==			
ANR	5568764	Identifier	field		5568689	0					
ANR	5568765	Identifier	field_num		5568689	1					
ANR	5568766	CompoundStatement		16:27:296:296	5568689	1					
ANR	5568767	ReturnStatement	return arg ;	272:3:6351:6361	5568689	0	True				
ANR	5568768	Identifier	arg		5568689	0					
ANR	5568769	ReturnStatement	"return """" ;"	275:1:6371:6380	5568689	7	True				
ANR	5568770	PrimaryExpression	""""""		5568689	0					
ANR	5568771	ReturnType	MyString		5568689	1					
ANR	5568772	Identifier	parse_result_string		5568689	2					
ANR	5568773	ParameterList	"const char * result_string , int field_num"		5568689	3					
ANR	5568774	Parameter	const char * result_string	255:30:6007:6031	5568689	0	True				
ANR	5568775	ParameterType	const char *		5568689	0					
ANR	5568776	Identifier	result_string		5568689	1					
ANR	5568777	Parameter	int field_num	255:57:6034:6046	5568689	1	True				
ANR	5568778	ParameterType	int		5568689	0					
ANR	5568779	Identifier	field_num		5568689	1					
ANR	5568780	CFGEntryNode	ENTRY		5568689		True				
ANR	5568781	CFGExitNode	EXIT		5568689		True				
ANR	5568782	Symbol	result_list . isEmpty		5568689						
ANR	5568783	Symbol	NULL		5568689						
ANR	5568784	Symbol	field		5568689						
ANR	5568785	Symbol	result_list . next		5568689						
ANR	5568786	Symbol	arg		5568689						
ANR	5568787	Symbol	result_list . number		5568689						
ANR	5568788	Symbol	result_list		5568689						
ANR	5568789	Symbol	result_string		5568689						
ANR	5568790	Symbol	field_num		5568689						
ANR	5568791	Function	verify_digit_arg	278:0:6385:6617							
ANR	5568792	FunctionDef	verify_digit_arg (const char * s)		5568791	0					
ANR	5568793	CompoundStatement		279:0:6422:6617	5568791	0					
ANR	5568794	IfStatement	if ( ! s )		5568791	0					
ANR	5568795	Condition	! s	280:5:6429:6430	5568791	0	True				
ANR	5568796	UnaryOperationExpression	! s		5568791	0					
ANR	5568797	UnaryOperator	!		5568791	0					
ANR	5568798	Identifier	s		5568791	1					
ANR	5568799	CompoundStatement		2:10:11:11	5568791	1					
ANR	5568800	ReturnStatement	return false ;	281:2:6438:6450	5568791	0	True				
ANR	5568801	Identifier	false		5568791	0					
ANR	5568802	IdentifierDeclStatement	unsigned int i = 0 ;	283:1:6456:6474	5568791	1	True				
ANR	5568803	IdentifierDecl	i = 0		5568791	0					
ANR	5568804	IdentifierDeclType	unsigned int		5568791	0					
ANR	5568805	Identifier	i		5568791	1					
ANR	5568806	AssignmentExpression	i = 0		5568791	2		=			
ANR	5568807	Identifier	i		5568791	0					
ANR	5568808	PrimaryExpression	0		5568791	1					
ANR	5568809	ForStatement	for ( i = 0 ; i < strlen ( s ) ; i ++ )		5568791	2					
ANR	5568810	ForInit	i = 0 ;	284:5:6481:6484	5568791	0	True				
ANR	5568811	AssignmentExpression	i = 0		5568791	0		=			
ANR	5568812	Identifier	i		5568791	0					
ANR	5568813	PrimaryExpression	0		5568791	1					
ANR	5568814	Condition	i < strlen ( s )	284:9:6485:6495	5568791	1	True				
ANR	5568815	RelationalExpression	i < strlen ( s )		5568791	0		<			
ANR	5568816	Identifier	i		5568791	0					
ANR	5568817	CallExpression	strlen ( s )		5568791	1					
ANR	5568818	Callee	strlen		5568791	0					
ANR	5568819	Identifier	strlen		5568791	0					
ANR	5568820	ArgumentList	s		5568791	1					
ANR	5568821	Argument	s		5568791	0					
ANR	5568822	Identifier	s		5568791	0					
ANR	5568823	PostIncDecOperationExpression	i ++	284:21:6497:6499	5568791	2	True				
ANR	5568824	Identifier	i		5568791	0					
ANR	5568825	IncDec	++		5568791	1					
ANR	5568826	CompoundStatement		6:26:79:79	5568791	3					
ANR	5568827	IfStatement	if ( ! isdigit ( s [ i ] ) )		5568791	0					
ANR	5568828	Condition	! isdigit ( s [ i ] )	285:5:6509:6522	5568791	0	True				
ANR	5568829	UnaryOperationExpression	! isdigit ( s [ i ] )		5568791	0					
ANR	5568830	UnaryOperator	!		5568791	0					
ANR	5568831	CallExpression	isdigit ( s [ i ] )		5568791	1					
ANR	5568832	Callee	isdigit		5568791	0					
ANR	5568833	Identifier	isdigit		5568791	0					
ANR	5568834	ArgumentList	s [ i ]		5568791	1					
ANR	5568835	Argument	s [ i ]		5568791	0					
ANR	5568836	ArrayIndexing	s [ i ]		5568791	0					
ANR	5568837	Identifier	s		5568791	0					
ANR	5568838	Identifier	i		5568791	1					
ANR	5568839	CompoundStatement		7:21:102:102	5568791	1					
ANR	5568840	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Arg(%s) is not digit\\n"" , s )"	286:3:6530:6577	5568791	0	True				
ANR	5568841	CallExpression	"vmprintf ( D_ALWAYS , ""Arg(%s) is not digit\\n"" , s )"		5568791	0					
ANR	5568842	Callee	vmprintf		5568791	0					
ANR	5568843	Identifier	vmprintf		5568791	0					
ANR	5568844	ArgumentList	D_ALWAYS		5568791	1					
ANR	5568845	Argument	D_ALWAYS		5568791	0					
ANR	5568846	Identifier	D_ALWAYS		5568791	0					
ANR	5568847	Argument	"""Arg(%s) is not digit\\n"""		5568791	1					
ANR	5568848	PrimaryExpression	"""Arg(%s) is not digit\\n"""		5568791	0					
ANR	5568849	Argument	s		5568791	2					
ANR	5568850	Identifier	s		5568791	0					
ANR	5568851	ReturnStatement	return false ;	287:3:6582:6594	5568791	1	True				
ANR	5568852	Identifier	false		5568791	0					
ANR	5568853	ReturnStatement	return true ;	290:1:6604:6615	5568791	3	True				
ANR	5568854	Identifier	true		5568791	0					
ANR	5568855	ReturnType	bool		5568791	1					
ANR	5568856	Identifier	verify_digit_arg		5568791	2					
ANR	5568857	ParameterList	const char * s		5568791	3					
ANR	5568858	Parameter	const char * s	278:22:6407:6419	5568791	0	True				
ANR	5568859	ParameterType	const char *		5568791	0					
ANR	5568860	Identifier	s		5568791	1					
ANR	5568861	CFGEntryNode	ENTRY		5568791		True				
ANR	5568862	CFGExitNode	EXIT		5568791		True				
ANR	5568863	Symbol	strlen		5568791						
ANR	5568864	Symbol	s		5568791						
ANR	5568865	Symbol	* i		5568791						
ANR	5568866	Symbol	false		5568791						
ANR	5568867	Symbol	D_ALWAYS		5568791						
ANR	5568868	Symbol	true		5568791						
ANR	5568869	Symbol	i		5568791						
ANR	5568870	Symbol	* s		5568791						
ANR	5568871	Symbol	isdigit		5568791						
ANR	5568872	Function	verify_number_args	293:0:6620:6814							
ANR	5568873	FunctionDef	"verify_number_args (const int is , const int should_be)"		5568872	0					
ANR	5568874	CompoundStatement		294:0:6680:6814	5568872	0					
ANR	5568875	IfStatement	if ( is != should_be )		5568872	0					
ANR	5568876	Condition	is != should_be	295:5:6687:6701	5568872	0	True				
ANR	5568877	EqualityExpression	is != should_be		5568872	0		!=			
ANR	5568878	Identifier	is		5568872	0					
ANR	5568879	Identifier	should_be		5568872	1					
ANR	5568880	CompoundStatement		2:22:23:23	5568872	1					
ANR	5568881	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Wrong # of args %d, should be %d\\n"" , is , should_be )"	296:2:6708:6779	5568872	0	True				
ANR	5568882	CallExpression	"vmprintf ( D_ALWAYS , ""Wrong # of args %d, should be %d\\n"" , is , should_be )"		5568872	0					
ANR	5568883	Callee	vmprintf		5568872	0					
ANR	5568884	Identifier	vmprintf		5568872	0					
ANR	5568885	ArgumentList	D_ALWAYS		5568872	1					
ANR	5568886	Argument	D_ALWAYS		5568872	0					
ANR	5568887	Identifier	D_ALWAYS		5568872	0					
ANR	5568888	Argument	"""Wrong # of args %d, should be %d\\n"""		5568872	1					
ANR	5568889	PrimaryExpression	"""Wrong # of args %d, should be %d\\n"""		5568872	0					
ANR	5568890	Argument	is		5568872	2					
ANR	5568891	Identifier	is		5568872	0					
ANR	5568892	Argument	should_be		5568872	3					
ANR	5568893	Identifier	should_be		5568872	0					
ANR	5568894	ReturnStatement	return false ;	297:2:6783:6795	5568872	1	True				
ANR	5568895	Identifier	false		5568872	0					
ANR	5568896	ReturnStatement	return true ;	299:1:6801:6812	5568872	1	True				
ANR	5568897	Identifier	true		5568872	0					
ANR	5568898	ReturnType	bool		5568872	1					
ANR	5568899	Identifier	verify_number_args		5568872	2					
ANR	5568900	ParameterList	"const int is , const int should_be"		5568872	3					
ANR	5568901	Parameter	const int is	293:24:6644:6655	5568872	0	True				
ANR	5568902	ParameterType	const int		5568872	0					
ANR	5568903	Identifier	is		5568872	1					
ANR	5568904	Parameter	const int should_be	293:38:6658:6676	5568872	1	True				
ANR	5568905	ParameterType	const int		5568872	0					
ANR	5568906	Identifier	should_be		5568872	1					
ANR	5568907	CFGEntryNode	ENTRY		5568872		True				
ANR	5568908	CFGExitNode	EXIT		5568872		True				
ANR	5568909	Symbol	D_ALWAYS		5568872						
ANR	5568910	Symbol	false		5568872						
ANR	5568911	Symbol	true		5568872						
ANR	5568912	Symbol	is		5568872						
ANR	5568913	Symbol	should_be		5568872						
ANR	5568914	Function	validate_vmgahp_result_string	303:0:6845:7613							
ANR	5568915	FunctionDef	validate_vmgahp_result_string (const char * result_string)		5568914	0					
ANR	5568916	CompoundStatement		304:0:6907:7613	5568914	0					
ANR	5568917	IdentifierDeclStatement	"StringList result_list ( result_string , "" "" ) ;"	305:1:6910:6952	5568914	0	True				
ANR	5568918	IdentifierDecl	"result_list ( result_string , "" "" )"		5568914	0					
ANR	5568919	IdentifierDeclType	StringList		5568914	0					
ANR	5568920	Identifier	result_list		5568914	1					
ANR	5568921	Expression	"result_string , "" """		5568914	2					
ANR	5568922	Identifier	result_string		5568914	0					
ANR	5568923	PrimaryExpression	""" """		5568914	1					
ANR	5568924	IfStatement	if ( result_list . isEmpty ( ) )		5568914	1					
ANR	5568925	Condition	result_list . isEmpty ( )	306:5:6959:6979	5568914	0	True				
ANR	5568926	CallExpression	result_list . isEmpty ( )		5568914	0					
ANR	5568927	Callee	result_list . isEmpty		5568914	0					
ANR	5568928	MemberAccess	result_list . isEmpty		5568914	0					
ANR	5568929	Identifier	result_list		5568914	0					
ANR	5568930	Identifier	isEmpty		5568914	1					
ANR	5568931	ArgumentList			5568914	1					
ANR	5568932	CompoundStatement		3:29:75:75	5568914	1					
ANR	5568933	ReturnStatement	return false ;	307:2:6987:6999	5568914	0	True				
ANR	5568934	Identifier	false		5568914	0					
ANR	5568935	IfStatement	if ( result_list . number ( ) < 3 )		5568914	2					
ANR	5568936	Condition	result_list . number ( ) < 3	313:4:7082:7105	5568914	0	True				
ANR	5568937	RelationalExpression	result_list . number ( ) < 3		5568914	0		<			
ANR	5568938	CallExpression	result_list . number ( )		5568914	0					
ANR	5568939	Callee	result_list . number		5568914	0					
ANR	5568940	MemberAccess	result_list . number		5568914	0					
ANR	5568941	Identifier	result_list		5568914	0					
ANR	5568942	Identifier	number		5568914	1					
ANR	5568943	ArgumentList			5568914	1					
ANR	5568944	PrimaryExpression	3		5568914	1					
ANR	5568945	CompoundStatement		10:31:201:201	5568914	1					
ANR	5568946	ReturnStatement	return false ;	314:2:7113:7125	5568914	0	True				
ANR	5568947	Identifier	false		5568914	0					
ANR	5568948	IdentifierDeclStatement	char * arg = NULL ;	317:1:7132:7148	5568914	3	True				
ANR	5568949	IdentifierDecl	* arg = NULL		5568914	0					
ANR	5568950	IdentifierDeclType	char *		5568914	0					
ANR	5568951	Identifier	arg		5568914	1					
ANR	5568952	AssignmentExpression	* arg = NULL		5568914	2		=			
ANR	5568953	Identifier	NULL		5568914	0					
ANR	5568954	Identifier	NULL		5568914	1					
ANR	5568955	ExpressionStatement	result_list . rewind ( )	318:1:7151:7171	5568914	4	True				
ANR	5568956	CallExpression	result_list . rewind ( )		5568914	0					
ANR	5568957	Callee	result_list . rewind		5568914	0					
ANR	5568958	MemberAccess	result_list . rewind		5568914	0					
ANR	5568959	Identifier	result_list		5568914	0					
ANR	5568960	Identifier	rewind		5568914	1					
ANR	5568961	ArgumentList			5568914	1					
ANR	5568962	ExpressionStatement	arg = result_list . next ( )	321:1:7203:7227	5568914	5	True				
ANR	5568963	AssignmentExpression	arg = result_list . next ( )		5568914	0		=			
ANR	5568964	Identifier	arg		5568914	0					
ANR	5568965	CallExpression	result_list . next ( )		5568914	1					
ANR	5568966	Callee	result_list . next		5568914	0					
ANR	5568967	MemberAccess	result_list . next		5568914	0					
ANR	5568968	Identifier	result_list		5568914	0					
ANR	5568969	Identifier	next		5568914	1					
ANR	5568970	ArgumentList			5568914	1					
ANR	5568971	IfStatement	if ( ! arg || ! verify_digit_arg ( arg ) )		5568914	6					
ANR	5568972	Condition	! arg || ! verify_digit_arg ( arg )	322:5:7234:7263	5568914	0	True				
ANR	5568973	OrExpression	! arg || ! verify_digit_arg ( arg )		5568914	0		||			
ANR	5568974	UnaryOperationExpression	! arg		5568914	0					
ANR	5568975	UnaryOperator	!		5568914	0					
ANR	5568976	Identifier	arg		5568914	1					
ANR	5568977	UnaryOperationExpression	! verify_digit_arg ( arg )		5568914	1					
ANR	5568978	UnaryOperator	!		5568914	0					
ANR	5568979	CallExpression	verify_digit_arg ( arg )		5568914	1					
ANR	5568980	Callee	verify_digit_arg		5568914	0					
ANR	5568981	Identifier	verify_digit_arg		5568914	0					
ANR	5568982	ArgumentList	arg		5568914	1					
ANR	5568983	Argument	arg		5568914	0					
ANR	5568984	Identifier	arg		5568914	0					
ANR	5568985	CompoundStatement		19:37:358:358	5568914	1					
ANR	5568986	ExpressionStatement	"vmprintf ( D_ALWAYS , ""First arg in result must be digit: %s\\n"" , result_string )"	323:2:7270:7346	5568914	0	True				
ANR	5568987	CallExpression	"vmprintf ( D_ALWAYS , ""First arg in result must be digit: %s\\n"" , result_string )"		5568914	0					
ANR	5568988	Callee	vmprintf		5568914	0					
ANR	5568989	Identifier	vmprintf		5568914	0					
ANR	5568990	ArgumentList	D_ALWAYS		5568914	1					
ANR	5568991	Argument	D_ALWAYS		5568914	0					
ANR	5568992	Identifier	D_ALWAYS		5568914	0					
ANR	5568993	Argument	"""First arg in result must be digit: %s\\n"""		5568914	1					
ANR	5568994	PrimaryExpression	"""First arg in result must be digit: %s\\n"""		5568914	0					
ANR	5568995	Argument	result_string		5568914	2					
ANR	5568996	Identifier	result_string		5568914	0					
ANR	5568997	ReturnStatement	return false ;	324:2:7350:7362	5568914	1	True				
ANR	5568998	Identifier	false		5568914	0					
ANR	5568999	ExpressionStatement	arg = result_list . next ( )	328:1:7406:7430	5568914	7	True				
ANR	5569000	AssignmentExpression	arg = result_list . next ( )		5568914	0		=			
ANR	5569001	Identifier	arg		5568914	0					
ANR	5569002	CallExpression	result_list . next ( )		5568914	1					
ANR	5569003	Callee	result_list . next		5568914	0					
ANR	5569004	MemberAccess	result_list . next		5568914	0					
ANR	5569005	Identifier	result_list		5568914	0					
ANR	5569006	Identifier	next		5568914	1					
ANR	5569007	ArgumentList			5568914	1					
ANR	5569008	IfStatement	"if ( ! arg || ( strcmp ( arg , ""0"" ) && strcmp ( arg , ""1"" ) ) )"		5568914	8					
ANR	5569009	Condition	"! arg || ( strcmp ( arg , ""0"" ) && strcmp ( arg , ""1"" ) )"	329:5:7437:7484	5568914	0	True				
ANR	5569010	OrExpression	"! arg || ( strcmp ( arg , ""0"" ) && strcmp ( arg , ""1"" ) )"		5568914	0		||			
ANR	5569011	UnaryOperationExpression	! arg		5568914	0					
ANR	5569012	UnaryOperator	!		5568914	0					
ANR	5569013	Identifier	arg		5568914	1					
ANR	5569014	AndExpression	"strcmp ( arg , ""0"" ) && strcmp ( arg , ""1"" )"		5568914	1		&&			
ANR	5569015	CallExpression	"strcmp ( arg , ""0"" )"		5568914	0					
ANR	5569016	Callee	strcmp		5568914	0					
ANR	5569017	Identifier	strcmp		5568914	0					
ANR	5569018	ArgumentList	arg		5568914	1					
ANR	5569019	Argument	arg		5568914	0					
ANR	5569020	Identifier	arg		5568914	0					
ANR	5569021	Argument	"""0"""		5568914	1					
ANR	5569022	PrimaryExpression	"""0"""		5568914	0					
ANR	5569023	CallExpression	"strcmp ( arg , ""1"" )"		5568914	1					
ANR	5569024	Callee	strcmp		5568914	0					
ANR	5569025	Identifier	strcmp		5568914	0					
ANR	5569026	ArgumentList	arg		5568914	1					
ANR	5569027	Argument	arg		5568914	0					
ANR	5569028	Identifier	arg		5568914	0					
ANR	5569029	Argument	"""1"""		5568914	1					
ANR	5569030	PrimaryExpression	"""1"""		5568914	0					
ANR	5569031	CompoundStatement		26:56:580:580	5568914	1					
ANR	5569032	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Second arg in result must be either 0 or 1: %s\\n"" , result_string )"	330:2:7492:7577	5568914	0	True				
ANR	5569033	CallExpression	"vmprintf ( D_ALWAYS , ""Second arg in result must be either 0 or 1: %s\\n"" , result_string )"		5568914	0					
ANR	5569034	Callee	vmprintf		5568914	0					
ANR	5569035	Identifier	vmprintf		5568914	0					
ANR	5569036	ArgumentList	D_ALWAYS		5568914	1					
ANR	5569037	Argument	D_ALWAYS		5568914	0					
ANR	5569038	Identifier	D_ALWAYS		5568914	0					
ANR	5569039	Argument	"""Second arg in result must be either 0 or 1: %s\\n"""		5568914	1					
ANR	5569040	PrimaryExpression	"""Second arg in result must be either 0 or 1: %s\\n"""		5568914	0					
ANR	5569041	Argument	result_string		5568914	2					
ANR	5569042	Identifier	result_string		5568914	0					
ANR	5569043	ReturnStatement	return false ;	331:2:7581:7593	5568914	1	True				
ANR	5569044	Identifier	false		5568914	0					
ANR	5569045	ReturnStatement	return true ;	334:1:7600:7611	5568914	9	True				
ANR	5569046	Identifier	true		5568914	0					
ANR	5569047	ReturnType	bool		5568914	1					
ANR	5569048	Identifier	validate_vmgahp_result_string		5568914	2					
ANR	5569049	ParameterList	const char * result_string		5568914	3					
ANR	5569050	Parameter	const char * result_string	303:35:6880:6904	5568914	0	True				
ANR	5569051	ParameterType	const char *		5568914	0					
ANR	5569052	Identifier	result_string		5568914	1					
ANR	5569053	CFGEntryNode	ENTRY		5568914		True				
ANR	5569054	CFGExitNode	EXIT		5568914		True				
ANR	5569055	Symbol	strcmp		5568914						
ANR	5569056	Symbol	result_list . isEmpty		5568914						
ANR	5569057	Symbol	NULL		5568914						
ANR	5569058	Symbol	result_list . next		5568914						
ANR	5569059	Symbol	arg		5568914						
ANR	5569060	Symbol	false		5568914						
ANR	5569061	Symbol	result_list . number		5568914						
ANR	5569062	Symbol	D_ALWAYS		5568914						
ANR	5569063	Symbol	true		5568914						
ANR	5569064	Symbol	result_list		5568914						
ANR	5569065	Symbol	verify_digit_arg		5568914						
ANR	5569066	Symbol	result_string		5568914						
ANR	5569067	Function	write_to_daemoncore_pipe	337:0:7616:7816							
ANR	5569068	FunctionDef	"write_to_daemoncore_pipe (int pipefd , const char * str , int len)"		5569067	0					
ANR	5569069	CompoundStatement		339:0:7684:7816	5569067	0					
ANR	5569070	IfStatement	if ( pipefd == - 1 || ! str || len <= 0 || ! daemonCore )		5569067	0					
ANR	5569071	Condition	pipefd == - 1 || ! str || len <= 0 || ! daemonCore	340:5:7691:7737	5569067	0	True				
ANR	5569072	OrExpression	pipefd == - 1 || ! str || len <= 0 || ! daemonCore		5569067	0		||			
ANR	5569073	EqualityExpression	pipefd == - 1		5569067	0		==			
ANR	5569074	Identifier	pipefd		5569067	0					
ANR	5569075	UnaryOperationExpression	- 1		5569067	1					
ANR	5569076	UnaryOperator	-		5569067	0					
ANR	5569077	PrimaryExpression	1		5569067	1					
ANR	5569078	OrExpression	! str || len <= 0 || ! daemonCore		5569067	1		||			
ANR	5569079	UnaryOperationExpression	! str		5569067	0					
ANR	5569080	UnaryOperator	!		5569067	0					
ANR	5569081	Identifier	str		5569067	1					
ANR	5569082	OrExpression	len <= 0 || ! daemonCore		5569067	1		||			
ANR	5569083	RelationalExpression	len <= 0		5569067	0		<=			
ANR	5569084	Identifier	len		5569067	0					
ANR	5569085	PrimaryExpression	0		5569067	1					
ANR	5569086	UnaryOperationExpression	! daemonCore		5569067	1					
ANR	5569087	UnaryOperator	!		5569067	0					
ANR	5569088	Identifier	daemonCore		5569067	1					
ANR	5569089	CompoundStatement		2:55:56:56	5569067	1					
ANR	5569090	ReturnStatement	return ;	341:2:7745:7751	5569067	0	True				
ANR	5569091	ExpressionStatement	"daemonCore -> Write_Pipe ( pipefd , str , len )"	345:1:7773:7814	5569067	1	True				
ANR	5569092	CallExpression	"daemonCore -> Write_Pipe ( pipefd , str , len )"		5569067	0					
ANR	5569093	Callee	daemonCore -> Write_Pipe		5569067	0					
ANR	5569094	PtrMemberAccess	daemonCore -> Write_Pipe		5569067	0					
ANR	5569095	Identifier	daemonCore		5569067	0					
ANR	5569096	Identifier	Write_Pipe		5569067	1					
ANR	5569097	ArgumentList	pipefd		5569067	1					
ANR	5569098	Argument	pipefd		5569067	0					
ANR	5569099	Identifier	pipefd		5569067	0					
ANR	5569100	Argument	str		5569067	1					
ANR	5569101	Identifier	str		5569067	0					
ANR	5569102	Argument	len		5569067	2					
ANR	5569103	Identifier	len		5569067	0					
ANR	5569104	ReturnType	void		5569067	1					
ANR	5569105	Identifier	write_to_daemoncore_pipe		5569067	2					
ANR	5569106	ParameterList	"int pipefd , const char * str , int len"		5569067	3					
ANR	5569107	Parameter	int pipefd	338:25:7646:7655	5569067	0	True				
ANR	5569108	ParameterType	int		5569067	0					
ANR	5569109	Identifier	pipefd		5569067	1					
ANR	5569110	Parameter	const char * str	338:37:7658:7672	5569067	1	True				
ANR	5569111	ParameterType	const char *		5569067	0					
ANR	5569112	Identifier	str		5569067	1					
ANR	5569113	Parameter	int len	338:54:7675:7681	5569067	2	True				
ANR	5569114	ParameterType	int		5569067	0					
ANR	5569115	Identifier	len		5569067	1					
ANR	5569116	CFGEntryNode	ENTRY		5569067		True				
ANR	5569117	CFGExitNode	EXIT		5569067		True				
ANR	5569118	Symbol	str		5569067						
ANR	5569119	Symbol	len		5569067						
ANR	5569120	Symbol	pipefd		5569067						
ANR	5569121	Symbol	daemonCore		5569067						
ANR	5569122	Function	write_to_daemoncore_pipe	348:0:7819:8105							
ANR	5569123	FunctionDef	write_to_daemoncore_pipe (const char * fmt)		5569122	0					
ANR	5569124	CompoundStatement		350:0:7872:8105	5569122	0					
ANR	5569125	IfStatement	if ( vmgahp_stdout_pipe == - 1 )		5569122	0					
ANR	5569126	Condition	vmgahp_stdout_pipe == - 1	351:5:7879:7902	5569122	0	True				
ANR	5569127	EqualityExpression	vmgahp_stdout_pipe == - 1		5569122	0		==			
ANR	5569128	Identifier	vmgahp_stdout_pipe		5569122	0					
ANR	5569129	UnaryOperationExpression	- 1		5569122	1					
ANR	5569130	UnaryOperator	-		5569122	0					
ANR	5569131	PrimaryExpression	1		5569122	1					
ANR	5569132	CompoundStatement		2:32:33:33	5569122	1					
ANR	5569133	ReturnStatement	return ;	352:2:7910:7916	5569122	0	True				
ANR	5569134	IdentifierDeclStatement	MyString output ;	355:1:7923:7938	5569122	1	True				
ANR	5569135	IdentifierDecl	output		5569122	0					
ANR	5569136	IdentifierDeclType	MyString		5569122	0					
ANR	5569137	Identifier	output		5569122	1					
ANR	5569138	IdentifierDeclStatement	va_list args ;	356:1:7941:7953	5569122	2	True				
ANR	5569139	IdentifierDecl	args		5569122	0					
ANR	5569140	IdentifierDeclType	va_list		5569122	0					
ANR	5569141	Identifier	args		5569122	1					
ANR	5569142	ExpressionStatement	"va_start ( args , fmt )"	357:1:7956:7975	5569122	3	True				
ANR	5569143	CallExpression	"va_start ( args , fmt )"		5569122	0					
ANR	5569144	Callee	va_start		5569122	0					
ANR	5569145	Identifier	va_start		5569122	0					
ANR	5569146	ArgumentList	args		5569122	1					
ANR	5569147	Argument	args		5569122	0					
ANR	5569148	Identifier	args		5569122	0					
ANR	5569149	Argument	fmt		5569122	1					
ANR	5569150	Identifier	fmt		5569122	0					
ANR	5569151	ExpressionStatement	"output . vsprintf ( fmt , args )"	358:1:7978:8004	5569122	4	True				
ANR	5569152	CallExpression	"output . vsprintf ( fmt , args )"		5569122	0					
ANR	5569153	Callee	output . vsprintf		5569122	0					
ANR	5569154	MemberAccess	output . vsprintf		5569122	0					
ANR	5569155	Identifier	output		5569122	0					
ANR	5569156	Identifier	vsprintf		5569122	1					
ANR	5569157	ArgumentList	fmt		5569122	1					
ANR	5569158	Argument	fmt		5569122	0					
ANR	5569159	Identifier	fmt		5569122	0					
ANR	5569160	Argument	args		5569122	1					
ANR	5569161	Identifier	args		5569122	0					
ANR	5569162	ExpressionStatement	"write_to_daemoncore_pipe ( vmgahp_stdout_pipe , output . Value ( ) , output . Length ( ) )"	359:1:8007:8088	5569122	5	True				
ANR	5569163	CallExpression	"write_to_daemoncore_pipe ( vmgahp_stdout_pipe , output . Value ( ) , output . Length ( ) )"		5569122	0					
ANR	5569164	Callee	write_to_daemoncore_pipe		5569122	0					
ANR	5569165	Identifier	write_to_daemoncore_pipe		5569122	0					
ANR	5569166	ArgumentList	vmgahp_stdout_pipe		5569122	1					
ANR	5569167	Argument	vmgahp_stdout_pipe		5569122	0					
ANR	5569168	Identifier	vmgahp_stdout_pipe		5569122	0					
ANR	5569169	Argument	output . Value ( )		5569122	1					
ANR	5569170	CallExpression	output . Value ( )		5569122	0					
ANR	5569171	Callee	output . Value		5569122	0					
ANR	5569172	MemberAccess	output . Value		5569122	0					
ANR	5569173	Identifier	output		5569122	0					
ANR	5569174	Identifier	Value		5569122	1					
ANR	5569175	ArgumentList			5569122	1					
ANR	5569176	Argument	output . Length ( )		5569122	2					
ANR	5569177	CallExpression	output . Length ( )		5569122	0					
ANR	5569178	Callee	output . Length		5569122	0					
ANR	5569179	MemberAccess	output . Length		5569122	0					
ANR	5569180	Identifier	output		5569122	0					
ANR	5569181	Identifier	Length		5569122	1					
ANR	5569182	ArgumentList			5569122	1					
ANR	5569183	ExpressionStatement	va_end ( args )	361:1:8091:8103	5569122	6	True				
ANR	5569184	CallExpression	va_end ( args )		5569122	0					
ANR	5569185	Callee	va_end		5569122	0					
ANR	5569186	Identifier	va_end		5569122	0					
ANR	5569187	ArgumentList	args		5569122	1					
ANR	5569188	Argument	args		5569122	0					
ANR	5569189	Identifier	args		5569122	0					
ANR	5569190	ReturnType	void		5569122	1					
ANR	5569191	Identifier	write_to_daemoncore_pipe		5569122	2					
ANR	5569192	ParameterList	const char * fmt		5569122	3					
ANR	5569193	Parameter	const char * fmt	349:25:7849:7863	5569122	0	True				
ANR	5569194	ParameterType	const char *		5569122	0					
ANR	5569195	Identifier	fmt		5569122	1					
ANR	5569196	CFGEntryNode	ENTRY		5569122		True				
ANR	5569197	CFGExitNode	EXIT		5569122		True				
ANR	5569198	Symbol	output		5569122						
ANR	5569199	Symbol	args		5569122						
ANR	5569200	Symbol	output . Value		5569122						
ANR	5569201	Symbol	output . Length		5569122						
ANR	5569202	Symbol	vmgahp_stdout_pipe		5569122						
ANR	5569203	Symbol	fmt		5569122						
ANR	5569204	Function	write_stderr_to_pipe	364:0:8108:8403							
ANR	5569205	FunctionDef	write_stderr_to_pipe ()		5569204	0					
ANR	5569206	CompoundStatement		366:0:8136:8403	5569204	0					
ANR	5569207	IfStatement	if ( vmgahp_stderr_pipe == - 1 )		5569204	0					
ANR	5569208	Condition	vmgahp_stderr_pipe == - 1	367:5:8143:8166	5569204	0	True				
ANR	5569209	EqualityExpression	vmgahp_stderr_pipe == - 1		5569204	0		==			
ANR	5569210	Identifier	vmgahp_stderr_pipe		5569204	0					
ANR	5569211	UnaryOperationExpression	- 1		5569204	1					
ANR	5569212	UnaryOperator	-		5569204	0					
ANR	5569213	PrimaryExpression	1		5569204	1					
ANR	5569214	CompoundStatement		2:32:33:33	5569204	1					
ANR	5569215	ReturnStatement	return ;	368:2:8174:8180	5569204	0	True				
ANR	5569216	ExpressionStatement	vmgahp_stderr_buffer . Write ( )	371:1:8187:8215	5569204	1	True				
ANR	5569217	CallExpression	vmgahp_stderr_buffer . Write ( )		5569204	0					
ANR	5569218	Callee	vmgahp_stderr_buffer . Write		5569204	0					
ANR	5569219	MemberAccess	vmgahp_stderr_buffer . Write		5569204	0					
ANR	5569220	Identifier	vmgahp_stderr_buffer		5569204	0					
ANR	5569221	Identifier	Write		5569204	1					
ANR	5569222	ArgumentList			5569204	1					
ANR	5569223	IfStatement	if ( vmgahp_stderr_buffer . IsError ( ) )		5569204	2					
ANR	5569224	Condition	vmgahp_stderr_buffer . IsError ( )	373:5:8223:8252	5569204	0	True				
ANR	5569225	CallExpression	vmgahp_stderr_buffer . IsError ( )		5569204	0					
ANR	5569226	Callee	vmgahp_stderr_buffer . IsError		5569204	0					
ANR	5569227	MemberAccess	vmgahp_stderr_buffer . IsError		5569204	0					
ANR	5569228	Identifier	vmgahp_stderr_buffer		5569204	0					
ANR	5569229	Identifier	IsError		5569204	1					
ANR	5569230	ArgumentList			5569204	1					
ANR	5569231	CompoundStatement		8:38:119:119	5569204	1					
ANR	5569232	IfStatement	if ( vmgahp_stderr_tid != - 1 )		5569204	0					
ANR	5569233	Condition	vmgahp_stderr_tid != - 1	374:6:8265:8287	5569204	0	True				
ANR	5569234	EqualityExpression	vmgahp_stderr_tid != - 1		5569204	0		!=			
ANR	5569235	Identifier	vmgahp_stderr_tid		5569204	0					
ANR	5569236	UnaryOperationExpression	- 1		5569204	1					
ANR	5569237	UnaryOperator	-		5569204	0					
ANR	5569238	PrimaryExpression	1		5569204	1					
ANR	5569239	CompoundStatement		9:32:154:154	5569204	1					
ANR	5569240	ExpressionStatement	daemonCore -> Cancel_Timer ( vmgahp_stderr_tid )	375:3:8296:8339	5569204	0	True				
ANR	5569241	CallExpression	daemonCore -> Cancel_Timer ( vmgahp_stderr_tid )		5569204	0					
ANR	5569242	Callee	daemonCore -> Cancel_Timer		5569204	0					
ANR	5569243	PtrMemberAccess	daemonCore -> Cancel_Timer		5569204	0					
ANR	5569244	Identifier	daemonCore		5569204	0					
ANR	5569245	Identifier	Cancel_Timer		5569204	1					
ANR	5569246	ArgumentList	vmgahp_stderr_tid		5569204	1					
ANR	5569247	Argument	vmgahp_stderr_tid		5569204	0					
ANR	5569248	Identifier	vmgahp_stderr_tid		5569204	0					
ANR	5569249	ExpressionStatement	vmgahp_stderr_tid = - 1	376:3:8344:8366	5569204	1	True				
ANR	5569250	AssignmentExpression	vmgahp_stderr_tid = - 1		5569204	0		=			
ANR	5569251	Identifier	vmgahp_stderr_tid		5569204	0					
ANR	5569252	UnaryOperationExpression	- 1		5569204	1					
ANR	5569253	UnaryOperator	-		5569204	0					
ANR	5569254	PrimaryExpression	1		5569204	1					
ANR	5569255	ExpressionStatement	vmgahp_stderr_pipe = - 1	377:3:8371:8394	5569204	2	True				
ANR	5569256	AssignmentExpression	vmgahp_stderr_pipe = - 1		5569204	0		=			
ANR	5569257	Identifier	vmgahp_stderr_pipe		5569204	0					
ANR	5569258	UnaryOperationExpression	- 1		5569204	1					
ANR	5569259	UnaryOperator	-		5569204	0					
ANR	5569260	PrimaryExpression	1		5569204	1					
ANR	5569261	ReturnType	void		5569204	1					
ANR	5569262	Identifier	write_stderr_to_pipe		5569204	2					
ANR	5569263	ParameterList			5569204	3					
ANR	5569264	CFGEntryNode	ENTRY		5569204		True				
ANR	5569265	CFGExitNode	EXIT		5569204		True				
ANR	5569266	Symbol	vmgahp_stderr_buffer		5569204						
ANR	5569267	Symbol	vmgahp_stderr_pipe		5569204						
ANR	5569268	Symbol	daemonCore		5569204						
ANR	5569269	Symbol	vmgahp_stderr_buffer . IsError		5569204						
ANR	5569270	Symbol	vmgahp_stderr_tid		5569204						
ANR	5569271	Function	vmprintf	382:0:8406:9380							
ANR	5569272	FunctionDef	"vmprintf (int flags , const char * fmt)"		5569271	0					
ANR	5569273	CompoundStatement		383:0:8456:9380	5569271	0					
ANR	5569274	IdentifierDeclStatement	int saved_flags = 0 ;	384:1:8459:8478	5569271	0	True				
ANR	5569275	IdentifierDecl	saved_flags = 0		5569271	0					
ANR	5569276	IdentifierDeclType	int		5569271	0					
ANR	5569277	Identifier	saved_flags		5569271	1					
ANR	5569278	AssignmentExpression	saved_flags = 0		5569271	2		=			
ANR	5569279	Identifier	saved_flags		5569271	0					
ANR	5569280	PrimaryExpression	0		5569271	1					
ANR	5569281	Statement	static	385:1:8481:8486	5569271	1	True				
ANR	5569282	IdentifierDeclStatement	pid_t mypid = 0 ;	385:8:8488:8503	5569271	2	True				
ANR	5569283	IdentifierDecl	mypid = 0		5569271	0					
ANR	5569284	IdentifierDeclType	pid_t		5569271	0					
ANR	5569285	Identifier	mypid		5569271	1					
ANR	5569286	AssignmentExpression	mypid = 0		5569271	2		=			
ANR	5569287	Identifier	mypid		5569271	0					
ANR	5569288	PrimaryExpression	0		5569271	1					
ANR	5569289	IfStatement	if ( ! mypid )		5569271	3					
ANR	5569290	Condition	! mypid	387:5:8511:8516	5569271	0	True				
ANR	5569291	UnaryOperationExpression	! mypid		5569271	0					
ANR	5569292	UnaryOperator	!		5569271	0					
ANR	5569293	Identifier	mypid		5569271	1					
ANR	5569294	CompoundStatement		5:14:63:63	5569271	1					
ANR	5569295	ExpressionStatement	mypid = daemonCore -> getpid ( )	388:2:8524:8552	5569271	0	True				
ANR	5569296	AssignmentExpression	mypid = daemonCore -> getpid ( )		5569271	0		=			
ANR	5569297	Identifier	mypid		5569271	0					
ANR	5569298	CallExpression	daemonCore -> getpid ( )		5569271	1					
ANR	5569299	Callee	daemonCore -> getpid		5569271	0					
ANR	5569300	PtrMemberAccess	daemonCore -> getpid		5569271	0					
ANR	5569301	Identifier	daemonCore		5569271	0					
ANR	5569302	Identifier	getpid		5569271	1					
ANR	5569303	ArgumentList			5569271	1					
ANR	5569304	IfStatement	if ( ! fmt )		5569271	4					
ANR	5569305	Condition	! fmt	391:5:8563:8566	5569271	0	True				
ANR	5569306	UnaryOperationExpression	! fmt		5569271	0					
ANR	5569307	UnaryOperator	!		5569271	0					
ANR	5569308	Identifier	fmt		5569271	1					
ANR	5569309	CompoundStatement		9:12:113:113	5569271	1					
ANR	5569310	ReturnStatement	return ;	392:2:8574:8580	5569271	0	True				
ANR	5569311	IfStatement	if ( ! ( flags & oriDebugFlags ) )		5569271	5					
ANR	5569312	Condition	! ( flags & oriDebugFlags )	395:5:8591:8614	5569271	0	True				
ANR	5569313	UnaryOperationExpression	! ( flags & oriDebugFlags )		5569271	0					
ANR	5569314	UnaryOperator	!		5569271	0					
ANR	5569315	BitAndExpression	flags & oriDebugFlags		5569271	1		&			
ANR	5569316	Identifier	flags		5569271	0					
ANR	5569317	Identifier	oriDebugFlags		5569271	1					
ANR	5569318	CompoundStatement		13:32:161:161	5569271	1					
ANR	5569319	ReturnStatement	return ;	396:2:8622:8628	5569271	0	True				
ANR	5569320	ExpressionStatement	saved_flags = oriDebugFlags	399:1:8635:8662	5569271	6	True				
ANR	5569321	AssignmentExpression	saved_flags = oriDebugFlags		5569271	0		=			
ANR	5569322	Identifier	saved_flags		5569271	0					
ANR	5569323	Identifier	oriDebugFlags		5569271	1					
ANR	5569324	ExpressionStatement	oriDebugFlags = 0	400:1:8693:8710	5569271	7	True				
ANR	5569325	AssignmentExpression	oriDebugFlags = 0		5569271	0		=			
ANR	5569326	Identifier	oriDebugFlags		5569271	0					
ANR	5569327	PrimaryExpression	0		5569271	1					
ANR	5569328	IdentifierDeclStatement	MyString output ;	402:1:8714:8729	5569271	8	True				
ANR	5569329	IdentifierDecl	output		5569271	0					
ANR	5569330	IdentifierDeclType	MyString		5569271	0					
ANR	5569331	Identifier	output		5569271	1					
ANR	5569332	IdentifierDeclStatement	va_list args ;	403:1:8732:8744	5569271	9	True				
ANR	5569333	IdentifierDecl	args		5569271	0					
ANR	5569334	IdentifierDeclType	va_list		5569271	0					
ANR	5569335	Identifier	args		5569271	1					
ANR	5569336	ExpressionStatement	"va_start ( args , fmt )"	404:1:8747:8766	5569271	10	True				
ANR	5569337	CallExpression	"va_start ( args , fmt )"		5569271	0					
ANR	5569338	Callee	va_start		5569271	0					
ANR	5569339	Identifier	va_start		5569271	0					
ANR	5569340	ArgumentList	args		5569271	1					
ANR	5569341	Argument	args		5569271	0					
ANR	5569342	Identifier	args		5569271	0					
ANR	5569343	Argument	fmt		5569271	1					
ANR	5569344	Identifier	fmt		5569271	0					
ANR	5569345	ExpressionStatement	"output . vsprintf ( fmt , args )"	405:1:8769:8795	5569271	11	True				
ANR	5569346	CallExpression	"output . vsprintf ( fmt , args )"		5569271	0					
ANR	5569347	Callee	output . vsprintf		5569271	0					
ANR	5569348	MemberAccess	output . vsprintf		5569271	0					
ANR	5569349	Identifier	output		5569271	0					
ANR	5569350	Identifier	vsprintf		5569271	1					
ANR	5569351	ArgumentList	fmt		5569271	1					
ANR	5569352	Argument	fmt		5569271	0					
ANR	5569353	Identifier	fmt		5569271	0					
ANR	5569354	Argument	args		5569271	1					
ANR	5569355	Identifier	args		5569271	0					
ANR	5569356	ExpressionStatement	va_end ( args )	406:1:8798:8810	5569271	12	True				
ANR	5569357	CallExpression	va_end ( args )		5569271	0					
ANR	5569358	Callee	va_end		5569271	0					
ANR	5569359	Identifier	va_end		5569271	0					
ANR	5569360	ArgumentList	args		5569271	1					
ANR	5569361	Argument	args		5569271	0					
ANR	5569362	Identifier	args		5569271	0					
ANR	5569363	IfStatement	if ( output . IsEmpty ( ) )		5569271	13					
ANR	5569364	Condition	output . IsEmpty ( )	407:5:8817:8832	5569271	0	True				
ANR	5569365	CallExpression	output . IsEmpty ( )		5569271	0					
ANR	5569366	Callee	output . IsEmpty		5569271	0					
ANR	5569367	MemberAccess	output . IsEmpty		5569271	0					
ANR	5569368	Identifier	output		5569271	0					
ANR	5569369	Identifier	IsEmpty		5569271	1					
ANR	5569370	ArgumentList			5569271	1					
ANR	5569371	CompoundStatement		25:24:379:379	5569271	1					
ANR	5569372	ExpressionStatement	oriDebugFlags = saved_flags	408:2:8840:8867	5569271	0	True				
ANR	5569373	AssignmentExpression	oriDebugFlags = saved_flags		5569271	0		=			
ANR	5569374	Identifier	oriDebugFlags		5569271	0					
ANR	5569375	Identifier	saved_flags		5569271	1					
ANR	5569376	ReturnStatement	return ;	409:2:8871:8877	5569271	1	True				
ANR	5569377	IfStatement	if ( Termlog )		5569271	14					
ANR	5569378	Condition	Termlog	412:5:8888:8894	5569271	0	True				
ANR	5569379	Identifier	Termlog		5569271	0					
ANR	5569380	CompoundStatement		30:15:441:441	5569271	1					
ANR	5569381	IfStatement	if ( ( vmgahp_mode == VMGAHP_TEST_MODE ) || ( vmgahp_mode == VMGAHP_KILL_MODE ) )		5569271	0					
ANR	5569382	Condition	( vmgahp_mode == VMGAHP_TEST_MODE ) || ( vmgahp_mode == VMGAHP_KILL_MODE )	413:6:8906:8979	5569271	0	True				
ANR	5569383	OrExpression	( vmgahp_mode == VMGAHP_TEST_MODE ) || ( vmgahp_mode == VMGAHP_KILL_MODE )		5569271	0		||			
ANR	5569384	EqualityExpression	vmgahp_mode == VMGAHP_TEST_MODE		5569271	0		==			
ANR	5569385	Identifier	vmgahp_mode		5569271	0					
ANR	5569386	Identifier	VMGAHP_TEST_MODE		5569271	1					
ANR	5569387	EqualityExpression	vmgahp_mode == VMGAHP_KILL_MODE		5569271	1		==			
ANR	5569388	Identifier	vmgahp_mode		5569271	0					
ANR	5569389	Identifier	VMGAHP_KILL_MODE		5569271	1					
ANR	5569390	CompoundStatement		32:40:526:526	5569271	1					
ANR	5569391	ExpressionStatement	"fprintf ( stderr , ""VMGAHP[%d]: %s"" , ( int ) mypid , output . Value ( ) )"	415:3:8988:9049	5569271	0	True				
ANR	5569392	CallExpression	"fprintf ( stderr , ""VMGAHP[%d]: %s"" , ( int ) mypid , output . Value ( ) )"		5569271	0					
ANR	5569393	Callee	fprintf		5569271	0					
ANR	5569394	Identifier	fprintf		5569271	0					
ANR	5569395	ArgumentList	stderr		5569271	1					
ANR	5569396	Argument	stderr		5569271	0					
ANR	5569397	Identifier	stderr		5569271	0					
ANR	5569398	Argument	"""VMGAHP[%d]: %s"""		5569271	1					
ANR	5569399	PrimaryExpression	"""VMGAHP[%d]: %s"""		5569271	0					
ANR	5569400	Argument	( int ) mypid		5569271	2					
ANR	5569401	CastExpression	( int ) mypid		5569271	0					
ANR	5569402	CastTarget	int		5569271	0					
ANR	5569403	Identifier	mypid		5569271	1					
ANR	5569404	Argument	output . Value ( )		5569271	3					
ANR	5569405	CallExpression	output . Value ( )		5569271	0					
ANR	5569406	Callee	output . Value		5569271	0					
ANR	5569407	MemberAccess	output . Value		5569271	0					
ANR	5569408	Identifier	output		5569271	0					
ANR	5569409	Identifier	Value		5569271	1					
ANR	5569410	ArgumentList			5569271	1					
ANR	5569411	ExpressionStatement	oriDebugFlags = saved_flags	416:3:9054:9081	5569271	1	True				
ANR	5569412	AssignmentExpression	oriDebugFlags = saved_flags		5569271	0		=			
ANR	5569413	Identifier	oriDebugFlags		5569271	0					
ANR	5569414	Identifier	saved_flags		5569271	1					
ANR	5569415	ReturnStatement	return ;	417:3:9086:9092	5569271	2	True				
ANR	5569416	IfStatement	if ( ( vmgahp_stderr_tid != - 1 ) && ( vmgahp_stderr_pipe != - 1 ) )		5569271	1					
ANR	5569417	Condition	( vmgahp_stderr_tid != - 1 ) && ( vmgahp_stderr_pipe != - 1 )	420:6:9105:9165	5569271	0	True				
ANR	5569418	AndExpression	( vmgahp_stderr_tid != - 1 ) && ( vmgahp_stderr_pipe != - 1 )		5569271	0		&&			
ANR	5569419	EqualityExpression	vmgahp_stderr_tid != - 1		5569271	0		!=			
ANR	5569420	Identifier	vmgahp_stderr_tid		5569271	0					
ANR	5569421	UnaryOperationExpression	- 1		5569271	1					
ANR	5569422	UnaryOperator	-		5569271	0					
ANR	5569423	PrimaryExpression	1		5569271	1					
ANR	5569424	EqualityExpression	vmgahp_stderr_pipe != - 1		5569271	1		!=			
ANR	5569425	Identifier	vmgahp_stderr_pipe		5569271	0					
ANR	5569426	UnaryOperationExpression	- 1		5569271	1					
ANR	5569427	UnaryOperator	-		5569271	0					
ANR	5569428	PrimaryExpression	1		5569271	1					
ANR	5569429	CompoundStatement		39:33:711:711	5569271	1					
ANR	5569430	ExpressionStatement	vmgahp_stderr_buffer . Write ( output . Value ( ) )	422:3:9173:9215	5569271	0	True				
ANR	5569431	CallExpression	vmgahp_stderr_buffer . Write ( output . Value ( ) )		5569271	0					
ANR	5569432	Callee	vmgahp_stderr_buffer . Write		5569271	0					
ANR	5569433	MemberAccess	vmgahp_stderr_buffer . Write		5569271	0					
ANR	5569434	Identifier	vmgahp_stderr_buffer		5569271	0					
ANR	5569435	Identifier	Write		5569271	1					
ANR	5569436	ArgumentList	output . Value ( )		5569271	1					
ANR	5569437	Argument	output . Value ( )		5569271	0					
ANR	5569438	CallExpression	output . Value ( )		5569271	0					
ANR	5569439	Callee	output . Value		5569271	0					
ANR	5569440	MemberAccess	output . Value		5569271	0					
ANR	5569441	Identifier	output		5569271	0					
ANR	5569442	Identifier	Value		5569271	1					
ANR	5569443	ArgumentList			5569271	1					
ANR	5569444	ExpressionStatement	"daemonCore -> Reset_Timer ( vmgahp_stderr_tid , 0 , 2 )"	423:3:9220:9268	5569271	1	True				
ANR	5569445	CallExpression	"daemonCore -> Reset_Timer ( vmgahp_stderr_tid , 0 , 2 )"		5569271	0					
ANR	5569446	Callee	daemonCore -> Reset_Timer		5569271	0					
ANR	5569447	PtrMemberAccess	daemonCore -> Reset_Timer		5569271	0					
ANR	5569448	Identifier	daemonCore		5569271	0					
ANR	5569449	Identifier	Reset_Timer		5569271	1					
ANR	5569450	ArgumentList	vmgahp_stderr_tid		5569271	1					
ANR	5569451	Argument	vmgahp_stderr_tid		5569271	0					
ANR	5569452	Identifier	vmgahp_stderr_tid		5569271	0					
ANR	5569453	Argument	0		5569271	1					
ANR	5569454	PrimaryExpression	0		5569271	0					
ANR	5569455	Argument	2		5569271	2					
ANR	5569456	PrimaryExpression	2		5569271	0					
ANR	5569457	ElseStatement	else		5569271	0					
ANR	5569458	CompoundStatement		43:7:824:824	5569271	0					
ANR	5569459	ExpressionStatement	"dprintf ( flags , ""VMGAHP[%d]: %s"" , ( int ) mypid , output . Value ( ) )"	426:2:9285:9345	5569271	0	True				
ANR	5569460	CallExpression	"dprintf ( flags , ""VMGAHP[%d]: %s"" , ( int ) mypid , output . Value ( ) )"		5569271	0					
ANR	5569461	Callee	dprintf		5569271	0					
ANR	5569462	Identifier	dprintf		5569271	0					
ANR	5569463	ArgumentList	flags		5569271	1					
ANR	5569464	Argument	flags		5569271	0					
ANR	5569465	Identifier	flags		5569271	0					
ANR	5569466	Argument	"""VMGAHP[%d]: %s"""		5569271	1					
ANR	5569467	PrimaryExpression	"""VMGAHP[%d]: %s"""		5569271	0					
ANR	5569468	Argument	( int ) mypid		5569271	2					
ANR	5569469	CastExpression	( int ) mypid		5569271	0					
ANR	5569470	CastTarget	int		5569271	0					
ANR	5569471	Identifier	mypid		5569271	1					
ANR	5569472	Argument	output . Value ( )		5569271	3					
ANR	5569473	CallExpression	output . Value ( )		5569271	0					
ANR	5569474	Callee	output . Value		5569271	0					
ANR	5569475	MemberAccess	output . Value		5569271	0					
ANR	5569476	Identifier	output		5569271	0					
ANR	5569477	Identifier	Value		5569271	1					
ANR	5569478	ArgumentList			5569271	1					
ANR	5569479	ExpressionStatement	oriDebugFlags = saved_flags	428:1:9351:9378	5569271	15	True				
ANR	5569480	AssignmentExpression	oriDebugFlags = saved_flags		5569271	0		=			
ANR	5569481	Identifier	oriDebugFlags		5569271	0					
ANR	5569482	Identifier	saved_flags		5569271	1					
ANR	5569483	ReturnType	void		5569271	1					
ANR	5569484	Identifier	vmprintf		5569271	2					
ANR	5569485	ParameterList	"int flags , const char * fmt"		5569271	3					
ANR	5569486	Parameter	int flags	382:15:8421:8429	5569271	0	True				
ANR	5569487	ParameterType	int		5569271	0					
ANR	5569488	Identifier	flags		5569271	1					
ANR	5569489	Parameter	const char * fmt	382:26:8432:8446	5569271	1	True				
ANR	5569490	ParameterType	const char *		5569271	0					
ANR	5569491	Identifier	fmt		5569271	1					
ANR	5569492	CFGEntryNode	ENTRY		5569271		True				
ANR	5569493	CFGExitNode	EXIT		5569271		True				
ANR	5569494	Symbol	vmgahp_stderr_buffer		5569271						
ANR	5569495	Symbol	saved_flags		5569271						
ANR	5569496	Symbol	Termlog		5569271						
ANR	5569497	Symbol	mypid		5569271						
ANR	5569498	Symbol	flags		5569271						
ANR	5569499	Symbol	daemonCore -> getpid		5569271						
ANR	5569500	Symbol	vmgahp_stderr_tid		5569271						
ANR	5569501	Symbol	fmt		5569271						
ANR	5569502	Symbol	stderr		5569271						
ANR	5569503	Symbol	oriDebugFlags		5569271						
ANR	5569504	Symbol	output		5569271						
ANR	5569505	Symbol	args		5569271						
ANR	5569506	Symbol	output . Value		5569271						
ANR	5569507	Symbol	* daemonCore		5569271						
ANR	5569508	Symbol	vmgahp_mode		5569271						
ANR	5569509	Symbol	daemonCore		5569271						
ANR	5569510	Symbol	vmgahp_stderr_pipe		5569271						
ANR	5569511	Symbol	output . IsEmpty		5569271						
ANR	5569512	Symbol	VMGAHP_TEST_MODE		5569271						
ANR	5569513	Symbol	VMGAHP_KILL_MODE		5569271						
ANR	5569514	Function	initialize_uids	432:0:9384:10389							
ANR	5569515	FunctionDef	initialize_uids ()		5569514	0					
ANR	5569516	CompoundStatement		434:0:9412:10389	5569514	0					
ANR	5569517	Statement	include	436:1:9434:9440	5569514	0	True				
ANR	5569518	Statement	"""my_username.h"""	436:9:9442:9456	5569514	1	True				
ANR	5569519	IdentifierDeclStatement	char * name = NULL ;	438:1:9460:9477	5569514	2	True				
ANR	5569520	IdentifierDecl	* name = NULL		5569514	0					
ANR	5569521	IdentifierDeclType	char *		5569514	0					
ANR	5569522	Identifier	name		5569514	1					
ANR	5569523	AssignmentExpression	* name = NULL		5569514	2		=			
ANR	5569524	Identifier	NULL		5569514	0					
ANR	5569525	Identifier	NULL		5569514	1					
ANR	5569526	IdentifierDeclStatement	char * domain = NULL ;	439:1:9480:9499	5569514	3	True				
ANR	5569527	IdentifierDecl	* domain = NULL		5569514	0					
ANR	5569528	IdentifierDeclType	char *		5569514	0					
ANR	5569529	Identifier	domain		5569514	1					
ANR	5569530	AssignmentExpression	* domain = NULL		5569514	2		=			
ANR	5569531	Identifier	NULL		5569514	0					
ANR	5569532	Identifier	NULL		5569514	1					
ANR	5569533	ExpressionStatement	name = my_username ( )	441:1:9503:9523	5569514	4	True				
ANR	5569534	AssignmentExpression	name = my_username ( )		5569514	0		=			
ANR	5569535	Identifier	name		5569514	0					
ANR	5569536	CallExpression	my_username ( )		5569514	1					
ANR	5569537	Callee	my_username		5569514	0					
ANR	5569538	Identifier	my_username		5569514	0					
ANR	5569539	ArgumentList			5569514	1					
ANR	5569540	ExpressionStatement	domain = my_domainname ( )	442:1:9526:9550	5569514	5	True				
ANR	5569541	AssignmentExpression	domain = my_domainname ( )		5569514	0		=			
ANR	5569542	Identifier	domain		5569514	0					
ANR	5569543	CallExpression	my_domainname ( )		5569514	1					
ANR	5569544	Callee	my_domainname		5569514	0					
ANR	5569545	Identifier	my_domainname		5569514	0					
ANR	5569546	ArgumentList			5569514	1					
ANR	5569547	ExpressionStatement	caller_name = name	444:1:9554:9572	5569514	6	True				
ANR	5569548	AssignmentExpression	caller_name = name		5569514	0		=			
ANR	5569549	Identifier	caller_name		5569514	0					
ANR	5569550	Identifier	name		5569514	1					
ANR	5569551	ExpressionStatement	job_user_name = name	445:1:9575:9595	5569514	7	True				
ANR	5569552	AssignmentExpression	job_user_name = name		5569514	0		=			
ANR	5569553	Identifier	job_user_name		5569514	0					
ANR	5569554	Identifier	name		5569514	1					
ANR	5569555	IfStatement	"if ( ! init_user_ids ( name , domain ) )"		5569514	8					
ANR	5569556	Condition	"! init_user_ids ( name , domain )"	447:6:9604:9632	5569514	0	True				
ANR	5569557	UnaryOperationExpression	"! init_user_ids ( name , domain )"		5569514	0					
ANR	5569558	UnaryOperator	!		5569514	0					
ANR	5569559	CallExpression	"init_user_ids ( name , domain )"		5569514	1					
ANR	5569560	Callee	init_user_ids		5569514	0					
ANR	5569561	Identifier	init_user_ids		5569514	0					
ANR	5569562	ArgumentList	name		5569514	1					
ANR	5569563	Argument	name		5569514	0					
ANR	5569564	Identifier	name		5569514	0					
ANR	5569565	Argument	domain		5569514	1					
ANR	5569566	Identifier	domain		5569514	0					
ANR	5569567	CompoundStatement		14:38:223:223	5569514	1					
ANR	5569568	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Could not initialize user_priv with our own token!\\n"" )"	449:2:9696:9770	5569514	0	True				
ANR	5569569	CallExpression	"vmprintf ( D_ALWAYS , ""Could not initialize user_priv with our own token!\\n"" )"		5569514	0					
ANR	5569570	Callee	vmprintf		5569514	0					
ANR	5569571	Identifier	vmprintf		5569514	0					
ANR	5569572	ArgumentList	D_ALWAYS		5569514	1					
ANR	5569573	Argument	D_ALWAYS		5569514	0					
ANR	5569574	Identifier	D_ALWAYS		5569514	0					
ANR	5569575	Argument	"""Could not initialize user_priv with our own token!\\n"""		5569514	1					
ANR	5569576	PrimaryExpression	"""Could not initialize user_priv with our own token!\\n"""		5569514	0					
ANR	5569577	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Initialize Uids: caller=%s@%s, job user=%s@%s\\n"" , caller_name . Value ( ) , domain , job_user_name . Value ( ) , domain )"	452:1:9777:9910	5569514	9	True				
ANR	5569578	CallExpression	"vmprintf ( D_ALWAYS , ""Initialize Uids: caller=%s@%s, job user=%s@%s\\n"" , caller_name . Value ( ) , domain , job_user_name . Value ( ) , domain )"		5569514	0					
ANR	5569579	Callee	vmprintf		5569514	0					
ANR	5569580	Identifier	vmprintf		5569514	0					
ANR	5569581	ArgumentList	D_ALWAYS		5569514	1					
ANR	5569582	Argument	D_ALWAYS		5569514	0					
ANR	5569583	Identifier	D_ALWAYS		5569514	0					
ANR	5569584	Argument	"""Initialize Uids: caller=%s@%s, job user=%s@%s\\n"""		5569514	1					
ANR	5569585	PrimaryExpression	"""Initialize Uids: caller=%s@%s, job user=%s@%s\\n"""		5569514	0					
ANR	5569586	Argument	caller_name . Value ( )		5569514	2					
ANR	5569587	CallExpression	caller_name . Value ( )		5569514	0					
ANR	5569588	Callee	caller_name . Value		5569514	0					
ANR	5569589	MemberAccess	caller_name . Value		5569514	0					
ANR	5569590	Identifier	caller_name		5569514	0					
ANR	5569591	Identifier	Value		5569514	1					
ANR	5569592	ArgumentList			5569514	1					
ANR	5569593	Argument	domain		5569514	3					
ANR	5569594	Identifier	domain		5569514	0					
ANR	5569595	Argument	job_user_name . Value ( )		5569514	4					
ANR	5569596	CallExpression	job_user_name . Value ( )		5569514	0					
ANR	5569597	Callee	job_user_name . Value		5569514	0					
ANR	5569598	MemberAccess	job_user_name . Value		5569514	0					
ANR	5569599	Identifier	job_user_name		5569514	0					
ANR	5569600	Identifier	Value		5569514	1					
ANR	5569601	ArgumentList			5569514	1					
ANR	5569602	Argument	domain		5569514	5					
ANR	5569603	Identifier	domain		5569514	0					
ANR	5569604	IfStatement	if ( name )		5569514	10					
ANR	5569605	Condition	name	455:5:9918:9921	5569514	0	True				
ANR	5569606	Identifier	name		5569514	0					
ANR	5569607	CompoundStatement		22:12:512:512	5569514	1					
ANR	5569608	ExpressionStatement	free ( name )	456:2:9929:9939	5569514	0	True				
ANR	5569609	CallExpression	free ( name )		5569514	0					
ANR	5569610	Callee	free		5569514	0					
ANR	5569611	Identifier	free		5569514	0					
ANR	5569612	ArgumentList	name		5569514	1					
ANR	5569613	Argument	name		5569514	0					
ANR	5569614	Identifier	name		5569514	0					
ANR	5569615	IfStatement	if ( domain )		5569514	11					
ANR	5569616	Condition	domain	458:5:9949:9954	5569514	0	True				
ANR	5569617	Identifier	domain		5569514	0					
ANR	5569618	CompoundStatement		25:14:545:545	5569514	1					
ANR	5569619	ExpressionStatement	free ( domain )	459:2:9962:9974	5569514	0	True				
ANR	5569620	CallExpression	free ( domain )		5569514	0					
ANR	5569621	Callee	free		5569514	0					
ANR	5569622	Identifier	free		5569514	0					
ANR	5569623	ArgumentList	domain		5569514	1					
ANR	5569624	Argument	domain		5569514	0					
ANR	5569625	Identifier	domain		5569514	0					
ANR	5569626	ReturnStatement	return ;	461:1:9980:9986	5569514	12	True				
ANR	5569627	ReturnType	void		5569514	1					
ANR	5569628	Identifier	initialize_uids		5569514	2					
ANR	5569629	ParameterList			5569514	3					
ANR	5569630	CFGEntryNode	ENTRY		5569514		True				
ANR	5569631	CFGExitNode	EXIT		5569514		True				
ANR	5569632	Symbol	caller_name		5569514						
ANR	5569633	Symbol	caller_name . Value		5569514						
ANR	5569634	Symbol	NULL		5569514						
ANR	5569635	Symbol	job_user_name		5569514						
ANR	5569636	Symbol	my_domainname		5569514						
ANR	5569637	Symbol	domain		5569514						
ANR	5569638	Symbol	name		5569514						
ANR	5569639	Symbol	D_ALWAYS		5569514						
ANR	5569640	Symbol	job_user_name . Value		5569514						
ANR	5569641	Symbol	my_username		5569514						
ANR	5569642	Symbol	init_user_ids		5569514						
ANR	5569643	Function	get_caller_uid	476:0:10392:10442							
ANR	5569644	FunctionDef	get_caller_uid ()		5569643	0					
ANR	5569645	CompoundStatement		478:0:10420:10442	5569643	0					
ANR	5569646	ReturnStatement	return caller_uid ;	479:1:10423:10440	5569643	0	True				
ANR	5569647	Identifier	caller_uid		5569643	0					
ANR	5569648	ReturnType	uid_t		5569643	1					
ANR	5569649	Identifier	get_caller_uid		5569643	2					
ANR	5569650	ParameterList			5569643	3					
ANR	5569651	CFGEntryNode	ENTRY		5569643		True				
ANR	5569652	CFGExitNode	EXIT		5569643		True				
ANR	5569653	Symbol	caller_uid		5569643						
ANR	5569654	Function	get_caller_gid	482:0:10445:10495							
ANR	5569655	FunctionDef	get_caller_gid ()		5569654	0					
ANR	5569656	CompoundStatement		484:0:10473:10495	5569654	0					
ANR	5569657	ReturnStatement	return caller_gid ;	485:1:10476:10493	5569654	0	True				
ANR	5569658	Identifier	caller_gid		5569654	0					
ANR	5569659	ReturnType	gid_t		5569654	1					
ANR	5569660	Identifier	get_caller_gid		5569654	2					
ANR	5569661	ParameterList			5569654	3					
ANR	5569662	CFGEntryNode	ENTRY		5569654		True				
ANR	5569663	CFGExitNode	EXIT		5569654		True				
ANR	5569664	Symbol	caller_gid		5569654						
ANR	5569665	Function	get_job_user_uid	488:0:10498:10552							
ANR	5569666	FunctionDef	get_job_user_uid ()		5569665	0					
ANR	5569667	CompoundStatement		490:0:10528:10552	5569665	0					
ANR	5569668	ReturnStatement	return job_user_uid ;	491:1:10531:10550	5569665	0	True				
ANR	5569669	Identifier	job_user_uid		5569665	0					
ANR	5569670	ReturnType	uid_t		5569665	1					
ANR	5569671	Identifier	get_job_user_uid		5569665	2					
ANR	5569672	ParameterList			5569665	3					
ANR	5569673	CFGEntryNode	ENTRY		5569665		True				
ANR	5569674	CFGExitNode	EXIT		5569665		True				
ANR	5569675	Symbol	job_user_uid		5569665						
ANR	5569676	Function	get_job_user_gid	494:0:10555:10609							
ANR	5569677	FunctionDef	get_job_user_gid ()		5569676	0					
ANR	5569678	CompoundStatement		496:0:10585:10609	5569676	0					
ANR	5569679	ReturnStatement	return job_user_gid ;	497:1:10588:10607	5569676	0	True				
ANR	5569680	Identifier	job_user_gid		5569676	0					
ANR	5569681	ReturnType	gid_t		5569676	1					
ANR	5569682	Identifier	get_job_user_gid		5569676	2					
ANR	5569683	ParameterList			5569676	3					
ANR	5569684	CFGEntryNode	ENTRY		5569676		True				
ANR	5569685	CFGExitNode	EXIT		5569676		True				
ANR	5569686	Symbol	job_user_gid		5569676						
ANR	5569687	Function	get_caller_name	500:0:10612:10678							
ANR	5569688	FunctionDef	get_caller_name ()		5569687	0					
ANR	5569689	CompoundStatement		502:0:10647:10678	5569687	0					
ANR	5569690	ReturnStatement	return caller_name . Value ( ) ;	503:1:10650:10676	5569687	0	True				
ANR	5569691	CallExpression	caller_name . Value ( )		5569687	0					
ANR	5569692	Callee	caller_name . Value		5569687	0					
ANR	5569693	MemberAccess	caller_name . Value		5569687	0					
ANR	5569694	Identifier	caller_name		5569687	0					
ANR	5569695	Identifier	Value		5569687	1					
ANR	5569696	ArgumentList			5569687	1					
ANR	5569697	ReturnType	const char *		5569687	1					
ANR	5569698	Identifier	get_caller_name		5569687	2					
ANR	5569699	ParameterList			5569687	3					
ANR	5569700	CFGEntryNode	ENTRY		5569687		True				
ANR	5569701	CFGExitNode	EXIT		5569687		True				
ANR	5569702	Symbol	caller_name		5569687						
ANR	5569703	Symbol	caller_name . Value		5569687						
ANR	5569704	Function	get_job_user_name	506:0:10681:10751							
ANR	5569705	FunctionDef	get_job_user_name ()		5569704	0					
ANR	5569706	CompoundStatement		508:0:10718:10751	5569704	0					
ANR	5569707	ReturnStatement	return job_user_name . Value ( ) ;	509:1:10721:10749	5569704	0	True				
ANR	5569708	CallExpression	job_user_name . Value ( )		5569704	0					
ANR	5569709	Callee	job_user_name . Value		5569704	0					
ANR	5569710	MemberAccess	job_user_name . Value		5569704	0					
ANR	5569711	Identifier	job_user_name		5569704	0					
ANR	5569712	Identifier	Value		5569704	1					
ANR	5569713	ArgumentList			5569704	1					
ANR	5569714	ReturnType	const char *		5569704	1					
ANR	5569715	Identifier	get_job_user_name		5569704	2					
ANR	5569716	ParameterList			5569704	3					
ANR	5569717	CFGEntryNode	ENTRY		5569704		True				
ANR	5569718	CFGExitNode	EXIT		5569704		True				
ANR	5569719	Symbol	job_user_name		5569704						
ANR	5569720	Symbol	job_user_name . Value		5569704						
ANR	5569721	Function	canSwitchUid	512:0:10754:10806							
ANR	5569722	FunctionDef	canSwitchUid ()		5569721	0					
ANR	5569723	CompoundStatement		513:0:10778:10806	5569721	0					
ANR	5569724	ReturnStatement	return can_switch_ids ( ) ;	514:1:10781:10804	5569721	0	True				
ANR	5569725	CallExpression	can_switch_ids ( )		5569721	0					
ANR	5569726	Callee	can_switch_ids		5569721	0					
ANR	5569727	Identifier	can_switch_ids		5569721	0					
ANR	5569728	ArgumentList			5569721	1					
ANR	5569729	ReturnType	bool		5569721	1					
ANR	5569730	Identifier	canSwitchUid		5569721	2					
ANR	5569731	ParameterList			5569721	3					
ANR	5569732	CFGEntryNode	ENTRY		5569721		True				
ANR	5569733	CFGExitNode	EXIT		5569721		True				
ANR	5569734	Symbol	can_switch_ids		5569721						
ANR	5569735	Function	systemCommand	522:0:10992:17964							
ANR	5569736	FunctionDef	"systemCommand (ArgList & args , priv_state priv , StringList * cmd_out , StringList * cmd_in , StringList * cmd_err , bool merge_stderr_with_stdout)"		5569735	0					
ANR	5569737	CompoundStatement		524:0:11142:17964	5569735	0					
ANR	5569738	IdentifierDeclStatement	int result = 0 ;	525:1:11145:11159	5569735	0	True				
ANR	5569739	IdentifierDecl	result = 0		5569735	0					
ANR	5569740	IdentifierDeclType	int		5569735	0					
ANR	5569741	Identifier	result		5569735	1					
ANR	5569742	AssignmentExpression	result = 0		5569735	2		=			
ANR	5569743	Identifier	result		5569735	0					
ANR	5569744	PrimaryExpression	0		5569735	1					
ANR	5569745	IdentifierDeclStatement	FILE * fp = NULL ;	526:1:11162:11177	5569735	1	True				
ANR	5569746	IdentifierDecl	* fp = NULL		5569735	0					
ANR	5569747	IdentifierDeclType	FILE *		5569735	0					
ANR	5569748	Identifier	fp		5569735	1					
ANR	5569749	AssignmentExpression	* fp = NULL		5569735	2		=			
ANR	5569750	Identifier	NULL		5569735	0					
ANR	5569751	Identifier	NULL		5569735	1					
ANR	5569752	IdentifierDeclStatement	FILE * fp_for_stdin = NULL ;	527:1:11180:11206	5569735	2	True				
ANR	5569753	IdentifierDecl	* fp_for_stdin = NULL		5569735	0					
ANR	5569754	IdentifierDeclType	FILE *		5569735	0					
ANR	5569755	Identifier	fp_for_stdin		5569735	1					
ANR	5569756	AssignmentExpression	* fp_for_stdin = NULL		5569735	2		=			
ANR	5569757	Identifier	NULL		5569735	0					
ANR	5569758	Identifier	NULL		5569735	1					
ANR	5569759	IdentifierDeclStatement	FILE * childerr = NULL ;	528:1:11209:11231	5569735	3	True				
ANR	5569760	IdentifierDecl	* childerr = NULL		5569735	0					
ANR	5569761	IdentifierDeclType	FILE *		5569735	0					
ANR	5569762	Identifier	childerr		5569735	1					
ANR	5569763	AssignmentExpression	* childerr = NULL		5569735	2		=			
ANR	5569764	Identifier	NULL		5569735	0					
ANR	5569765	Identifier	NULL		5569735	1					
ANR	5569766	IdentifierDeclStatement	MyString line ;	529:1:11234:11247	5569735	4	True				
ANR	5569767	IdentifierDecl	line		5569735	0					
ANR	5569768	IdentifierDeclType	MyString		5569735	0					
ANR	5569769	Identifier	line		5569735	1					
ANR	5569770	IdentifierDeclStatement	char buff [ 1024 ] ;	530:1:11250:11265	5569735	5	True				
ANR	5569771	IdentifierDecl	buff [ 1024 ]		5569735	0					
ANR	5569772	IdentifierDeclType	char [ 1024 ]		5569735	0					
ANR	5569773	Identifier	buff		5569735	1					
ANR	5569774	PrimaryExpression	1024		5569735	2					
ANR	5569775	IdentifierDeclStatement	StringList * my_cmd_out = cmd_out ;	531:1:11268:11300	5569735	6	True				
ANR	5569776	IdentifierDecl	* my_cmd_out = cmd_out		5569735	0					
ANR	5569777	IdentifierDeclType	StringList *		5569735	0					
ANR	5569778	Identifier	my_cmd_out		5569735	1					
ANR	5569779	AssignmentExpression	* my_cmd_out = cmd_out		5569735	2		=			
ANR	5569780	Identifier	cmd_out		5569735	0					
ANR	5569781	Identifier	cmd_out		5569735	1					
ANR	5569782	IdentifierDeclStatement	priv_state prev = PRIV_UNKNOWN ;	533:1:11304:11334	5569735	7	True				
ANR	5569783	IdentifierDecl	prev = PRIV_UNKNOWN		5569735	0					
ANR	5569784	IdentifierDeclType	priv_state		5569735	0					
ANR	5569785	Identifier	prev		5569735	1					
ANR	5569786	AssignmentExpression	prev = PRIV_UNKNOWN		5569735	2		=			
ANR	5569787	Identifier	PRIV_UNKNOWN		5569735	0					
ANR	5569788	Identifier	PRIV_UNKNOWN		5569735	1					
ANR	5569789	IdentifierDeclStatement	int stdout_pipes [ 2 ] ;	535:1:11338:11357	5569735	8	True				
ANR	5569790	IdentifierDecl	stdout_pipes [ 2 ]		5569735	0					
ANR	5569791	IdentifierDeclType	int [ 2 ]		5569735	0					
ANR	5569792	Identifier	stdout_pipes		5569735	1					
ANR	5569793	PrimaryExpression	2		5569735	2					
ANR	5569794	IdentifierDeclStatement	int stdin_pipes [ 2 ] ;	536:1:11360:11378	5569735	9	True				
ANR	5569795	IdentifierDecl	stdin_pipes [ 2 ]		5569735	0					
ANR	5569796	IdentifierDeclType	int [ 2 ]		5569735	0					
ANR	5569797	Identifier	stdin_pipes		5569735	1					
ANR	5569798	PrimaryExpression	2		5569735	2					
ANR	5569799	IdentifierDeclStatement	int pid ;	537:1:11381:11388	5569735	10	True				
ANR	5569800	IdentifierDecl	pid		5569735	0					
ANR	5569801	IdentifierDeclType	int		5569735	0					
ANR	5569802	Identifier	pid		5569735	1					
ANR	5569803	IdentifierDeclStatement	bool use_privsep = false ;	538:1:11391:11415	5569735	11	True				
ANR	5569804	IdentifierDecl	use_privsep = false		5569735	0					
ANR	5569805	IdentifierDeclType	bool		5569735	0					
ANR	5569806	Identifier	use_privsep		5569735	1					
ANR	5569807	AssignmentExpression	use_privsep = false		5569735	2		=			
ANR	5569808	Identifier	false		5569735	0					
ANR	5569809	Identifier	false		5569735	1					
ANR	5569810	SwitchStatement	switch ( priv )		5569735	12					
ANR	5569811	Condition	priv	539:10:11427:11430	5569735	0	True				
ANR	5569812	Identifier	priv		5569735	0					
ANR	5569813	CompoundStatement		16:17:291:291	5569735	1					
ANR	5569814	Label	case PRIV_ROOT :	540:1:11437:11451	5569735	0	True				
ANR	5569815	Identifier	PRIV_ROOT		5569735	0					
ANR	5569816	ExpressionStatement	prev = set_root_priv ( )	541:2:11455:11477	5569735	1	True				
ANR	5569817	AssignmentExpression	prev = set_root_priv ( )		5569735	0		=			
ANR	5569818	Identifier	prev		5569735	0					
ANR	5569819	CallExpression	set_root_priv ( )		5569735	1					
ANR	5569820	Callee	set_root_priv		5569735	0					
ANR	5569821	Identifier	set_root_priv		5569735	0					
ANR	5569822	ArgumentList			5569735	1					
ANR	5569823	BreakStatement	break ;	542:2:11481:11486	5569735	2	True				
ANR	5569824	Label	case PRIV_USER :	543:1:11489:11503	5569735	3	True				
ANR	5569825	Identifier	PRIV_USER		5569735	0					
ANR	5569826	Label	case PRIV_USER_FINAL :	544:1:11506:11526	5569735	4	True				
ANR	5569827	Identifier	PRIV_USER_FINAL		5569735	0					
ANR	5569828	ExpressionStatement	prev = set_user_priv ( )	545:2:11530:11552	5569735	5	True				
ANR	5569829	AssignmentExpression	prev = set_user_priv ( )		5569735	0		=			
ANR	5569830	Identifier	prev		5569735	0					
ANR	5569831	CallExpression	set_user_priv ( )		5569735	1					
ANR	5569832	Callee	set_user_priv		5569735	0					
ANR	5569833	Identifier	set_user_priv		5569735	0					
ANR	5569834	ArgumentList			5569735	1					
ANR	5569835	IfStatement	if ( privsep_enabled ( ) && ( job_user_uid != get_condor_uid ( ) ) )		5569735	6					
ANR	5569836	Condition	privsep_enabled ( ) && ( job_user_uid != get_condor_uid ( ) )	547:7:11581:11635	5569735	0	True				
ANR	5569837	AndExpression	privsep_enabled ( ) && ( job_user_uid != get_condor_uid ( ) )		5569735	0		&&			
ANR	5569838	CallExpression	privsep_enabled ( )		5569735	0					
ANR	5569839	Callee	privsep_enabled		5569735	0					
ANR	5569840	Identifier	privsep_enabled		5569735	0					
ANR	5569841	ArgumentList			5569735	1					
ANR	5569842	EqualityExpression	job_user_uid != get_condor_uid ( )		5569735	1		!=			
ANR	5569843	Identifier	job_user_uid		5569735	0					
ANR	5569844	CallExpression	get_condor_uid ( )		5569735	1					
ANR	5569845	Callee	get_condor_uid		5569735	0					
ANR	5569846	Identifier	get_condor_uid		5569735	0					
ANR	5569847	ArgumentList			5569735	1					
ANR	5569848	CompoundStatement		24:65:496:496	5569735	1					
ANR	5569849	ExpressionStatement	use_privsep = true	548:3:11644:11662	5569735	0	True				
ANR	5569850	AssignmentExpression	use_privsep = true		5569735	0		=			
ANR	5569851	Identifier	use_privsep		5569735	0					
ANR	5569852	Identifier	true		5569735	1					
ANR	5569853	BreakStatement	break ;	551:2:11677:11682	5569735	7	True				
ANR	5569854	Label	default :	552:1:11685:11692	5569735	8	True				
ANR	5569855	Identifier	default		5569735	0					
ANR	5569856	ExpressionStatement		554:2:11721:11721	5569735	9	True				
ANR	5569857	IfStatement	if ( ( cmd_in != NULL ) || ( cmd_err != NULL ) )		5569735	13					
ANR	5569858	Condition	( cmd_in != NULL ) || ( cmd_err != NULL )	557:4:11749:11785	5569735	0	True				
ANR	5569859	OrExpression	( cmd_in != NULL ) || ( cmd_err != NULL )		5569735	0		||			
ANR	5569860	EqualityExpression	cmd_in != NULL		5569735	0		!=			
ANR	5569861	Identifier	cmd_in		5569735	0					
ANR	5569862	Identifier	NULL		5569735	1					
ANR	5569863	EqualityExpression	cmd_err != NULL		5569735	1		!=			
ANR	5569864	Identifier	cmd_err		5569735	0					
ANR	5569865	Identifier	NULL		5569735	1					
ANR	5569866	CompoundStatement		35:3:648:648	5569735	1					
ANR	5569867	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Invalid use of systemCommand() in Windows.\\n"" )"	559:5:11798:11864	5569735	0	True				
ANR	5569868	CallExpression	"vmprintf ( D_ALWAYS , ""Invalid use of systemCommand() in Windows.\\n"" )"		5569735	0					
ANR	5569869	Callee	vmprintf		5569735	0					
ANR	5569870	Identifier	vmprintf		5569735	0					
ANR	5569871	ArgumentList	D_ALWAYS		5569735	1					
ANR	5569872	Argument	D_ALWAYS		5569735	0					
ANR	5569873	Identifier	D_ALWAYS		5569735	0					
ANR	5569874	Argument	"""Invalid use of systemCommand() in Windows.\\n"""		5569735	1					
ANR	5569875	PrimaryExpression	"""Invalid use of systemCommand() in Windows.\\n"""		5569735	0					
ANR	5569876	ReturnStatement	return - 1 ;	560:5:11871:11880	5569735	1	True				
ANR	5569877	UnaryOperationExpression	- 1		5569735	0					
ANR	5569878	UnaryOperator	-		5569735	0					
ANR	5569879	PrimaryExpression	1		5569735	1					
ANR	5569880	ExpressionStatement	"fp = my_popen ( args , ""r"" , merge_stderr_with_stdout )"	566:1:11989:12041	5569735	14	True				
ANR	5569881	AssignmentExpression	"fp = my_popen ( args , ""r"" , merge_stderr_with_stdout )"		5569735	0		=			
ANR	5569882	Identifier	fp		5569735	0					
ANR	5569883	CallExpression	"my_popen ( args , ""r"" , merge_stderr_with_stdout )"		5569735	1					
ANR	5569884	Callee	my_popen		5569735	0					
ANR	5569885	Identifier	my_popen		5569735	0					
ANR	5569886	ArgumentList	args		5569735	1					
ANR	5569887	Argument	args		5569735	0					
ANR	5569888	Identifier	args		5569735	0					
ANR	5569889	Argument	"""r"""		5569735	1					
ANR	5569890	PrimaryExpression	"""r"""		5569735	0					
ANR	5569891	Argument	merge_stderr_with_stdout		5569735	2					
ANR	5569892	Identifier	merge_stderr_with_stdout		5569735	0					
ANR	5569893	ExpressionStatement	set_priv ( prev )	736:1:16120:16136	5569735	15	True				
ANR	5569894	CallExpression	set_priv ( prev )		5569735	0					
ANR	5569895	Callee	set_priv		5569735	0					
ANR	5569896	Identifier	set_priv		5569735	0					
ANR	5569897	ArgumentList	prev		5569735	1					
ANR	5569898	Argument	prev		5569735	0					
ANR	5569899	Identifier	prev		5569735	0					
ANR	5569900	IfStatement	if ( fp == NULL )		5569735	16					
ANR	5569901	Condition	fp == NULL	737:6:16144:16153	5569735	0	True				
ANR	5569902	EqualityExpression	fp == NULL		5569735	0		==			
ANR	5569903	Identifier	fp		5569735	0					
ANR	5569904	Identifier	NULL		5569735	1					
ANR	5569905	CompoundStatement		215:2:5018:5038	5569735	1					
ANR	5569906	IdentifierDeclStatement	MyString args_string ;	738:2:16161:16181	5569735	0	True				
ANR	5569907	IdentifierDecl	args_string		5569735	0					
ANR	5569908	IdentifierDeclType	MyString		5569735	0					
ANR	5569909	Identifier	args_string		5569735	1					
ANR	5569910	ExpressionStatement	"args . GetArgsStringForDisplay ( & args_string , 0 )"	739:2:16185:16232	5569735	1	True				
ANR	5569911	CallExpression	"args . GetArgsStringForDisplay ( & args_string , 0 )"		5569735	0					
ANR	5569912	Callee	args . GetArgsStringForDisplay		5569735	0					
ANR	5569913	MemberAccess	args . GetArgsStringForDisplay		5569735	0					
ANR	5569914	Identifier	args		5569735	0					
ANR	5569915	Identifier	GetArgsStringForDisplay		5569735	1					
ANR	5569916	ArgumentList	& args_string		5569735	1					
ANR	5569917	Argument	& args_string		5569735	0					
ANR	5569918	UnaryOperationExpression	& args_string		5569735	0					
ANR	5569919	UnaryOperator	&		5569735	0					
ANR	5569920	Identifier	args_string		5569735	1					
ANR	5569921	Argument	0		5569735	1					
ANR	5569922	PrimaryExpression	0		5569735	0					
ANR	5569923	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Failed to execute command: %s\\n"" , args_string . Value ( ) )"	740:2:16236:16318	5569735	2	True				
ANR	5569924	CallExpression	"vmprintf ( D_ALWAYS , ""Failed to execute command: %s\\n"" , args_string . Value ( ) )"		5569735	0					
ANR	5569925	Callee	vmprintf		5569735	0					
ANR	5569926	Identifier	vmprintf		5569735	0					
ANR	5569927	ArgumentList	D_ALWAYS		5569735	1					
ANR	5569928	Argument	D_ALWAYS		5569735	0					
ANR	5569929	Identifier	D_ALWAYS		5569735	0					
ANR	5569930	Argument	"""Failed to execute command: %s\\n"""		5569735	1					
ANR	5569931	PrimaryExpression	"""Failed to execute command: %s\\n"""		5569735	0					
ANR	5569932	Argument	args_string . Value ( )		5569735	2					
ANR	5569933	CallExpression	args_string . Value ( )		5569735	0					
ANR	5569934	Callee	args_string . Value		5569735	0					
ANR	5569935	MemberAccess	args_string . Value		5569735	0					
ANR	5569936	Identifier	args_string		5569735	0					
ANR	5569937	Identifier	Value		5569735	1					
ANR	5569938	ArgumentList			5569735	1					
ANR	5569939	ExpressionStatement	fclose ( childerr )	742:5:16325:16341	5569735	3	True				
ANR	5569940	CallExpression	fclose ( childerr )		5569735	0					
ANR	5569941	Callee	fclose		5569735	0					
ANR	5569942	Identifier	fclose		5569735	0					
ANR	5569943	ArgumentList	childerr		5569735	1					
ANR	5569944	Argument	childerr		5569735	0					
ANR	5569945	Identifier	childerr		5569735	0					
ANR	5569946	ReturnStatement	return - 1 ;	743:2:16345:16354	5569735	4	True				
ANR	5569947	UnaryOperationExpression	- 1		5569735	0					
ANR	5569948	UnaryOperator	-		5569735	0					
ANR	5569949	PrimaryExpression	1		5569735	1					
ANR	5569950	IfStatement	if ( cmd_in != NULL )		5569735	17					
ANR	5569951	Condition	cmd_in != NULL	746:4:16364:16377	5569735	0	True				
ANR	5569952	EqualityExpression	cmd_in != NULL		5569735	0		!=			
ANR	5569953	Identifier	cmd_in		5569735	0					
ANR	5569954	Identifier	NULL		5569735	1					
ANR	5569955	CompoundStatement		225:3:5263:5273	5569735	1					
ANR	5569956	ExpressionStatement	cmd_in -> rewind ( )	747:3:16385:16401	5569735	0	True				
ANR	5569957	CallExpression	cmd_in -> rewind ( )		5569735	0					
ANR	5569958	Callee	cmd_in -> rewind		5569735	0					
ANR	5569959	PtrMemberAccess	cmd_in -> rewind		5569735	0					
ANR	5569960	Identifier	cmd_in		5569735	0					
ANR	5569961	Identifier	rewind		5569735	1					
ANR	5569962	ArgumentList			5569735	1					
ANR	5569963	IdentifierDeclStatement	char * tmp ;	748:3:16406:16416	5569735	1	True				
ANR	5569964	IdentifierDecl	* tmp		5569735	0					
ANR	5569965	IdentifierDeclType	char *		5569735	0					
ANR	5569966	Identifier	tmp		5569735	1					
ANR	5569967	WhileStatement	while ( ( tmp = cmd_in -> next ( ) ) != NULL )		5569735	2					
ANR	5569968	Condition	( tmp = cmd_in -> next ( ) ) != NULL	749:9:16427:16456	5569735	0	True				
ANR	5569969	EqualityExpression	( tmp = cmd_in -> next ( ) ) != NULL		5569735	0		!=			
ANR	5569970	AssignmentExpression	tmp = cmd_in -> next ( )		5569735	0		=			
ANR	5569971	Identifier	tmp		5569735	0					
ANR	5569972	CallExpression	cmd_in -> next ( )		5569735	1					
ANR	5569973	Callee	cmd_in -> next		5569735	0					
ANR	5569974	PtrMemberAccess	cmd_in -> next		5569735	0					
ANR	5569975	Identifier	cmd_in		5569735	0					
ANR	5569976	Identifier	next		5569735	1					
ANR	5569977	ArgumentList			5569735	1					
ANR	5569978	Identifier	NULL		5569735	1					
ANR	5569979	CompoundStatement		227:5:5321:5321	5569735	1					
ANR	5569980	ExpressionStatement	"fprintf ( fp_for_stdin , ""%s\\n"" , tmp )"	751:7:16473:16507	5569735	0	True				
ANR	5569981	CallExpression	"fprintf ( fp_for_stdin , ""%s\\n"" , tmp )"		5569735	0					
ANR	5569982	Callee	fprintf		5569735	0					
ANR	5569983	Identifier	fprintf		5569735	0					
ANR	5569984	ArgumentList	fp_for_stdin		5569735	1					
ANR	5569985	Argument	fp_for_stdin		5569735	0					
ANR	5569986	Identifier	fp_for_stdin		5569735	0					
ANR	5569987	Argument	"""%s\\n"""		5569735	1					
ANR	5569988	PrimaryExpression	"""%s\\n"""		5569735	0					
ANR	5569989	Argument	tmp		5569735	2					
ANR	5569990	Identifier	tmp		5569735	0					
ANR	5569991	ExpressionStatement	fflush ( fp_for_stdin )	752:7:16516:16536	5569735	1	True				
ANR	5569992	CallExpression	fflush ( fp_for_stdin )		5569735	0					
ANR	5569993	Callee	fflush		5569735	0					
ANR	5569994	Identifier	fflush		5569735	0					
ANR	5569995	ArgumentList	fp_for_stdin		5569735	1					
ANR	5569996	Argument	fp_for_stdin		5569735	0					
ANR	5569997	Identifier	fp_for_stdin		5569735	0					
ANR	5569998	IfStatement	if ( fp_for_stdin )		5569735	18					
ANR	5569999	Condition	fp_for_stdin	755:5:16553:16564	5569735	0	True				
ANR	5570000	Identifier	fp_for_stdin		5569735	0					
ANR	5570001	CompoundStatement		232:19:5424:5424	5569735	1					
ANR	5570002	ExpressionStatement	fclose ( fp_for_stdin )	758:3:16673:16693	5569735	0	True				
ANR	5570003	CallExpression	fclose ( fp_for_stdin )		5569735	0					
ANR	5570004	Callee	fclose		5569735	0					
ANR	5570005	Identifier	fclose		5569735	0					
ANR	5570006	ArgumentList	fp_for_stdin		5569735	1					
ANR	5570007	Argument	fp_for_stdin		5569735	0					
ANR	5570008	Identifier	fp_for_stdin		5569735	0					
ANR	5570009	IfStatement	if ( my_cmd_out == NULL )		5569735	19					
ANR	5570010	Condition	my_cmd_out == NULL	761:6:16705:16722	5569735	0	True				
ANR	5570011	EqualityExpression	my_cmd_out == NULL		5569735	0		==			
ANR	5570012	Identifier	my_cmd_out		5569735	0					
ANR	5570013	Identifier	NULL		5569735	1					
ANR	5570014	CompoundStatement		238:27:5583:5583	5569735	1					
ANR	5570015	ExpressionStatement	my_cmd_out = new StringList ( )	762:2:16730:16759	5569735	0	True				
ANR	5570016	AssignmentExpression	my_cmd_out = new StringList ( )		5569735	0		=			
ANR	5570017	Identifier	my_cmd_out		5569735	0					
ANR	5570018	UnaryExpression	new StringList ( )		5569735	1					
ANR	5570019	WhileStatement	"while ( fgets ( buff , sizeof ( buff ) , fp ) != NULL )"		5569735	20					
ANR	5570020	Condition	"fgets ( buff , sizeof ( buff ) , fp ) != NULL"	765:9:16774:16812	5569735	0	True				
ANR	5570021	EqualityExpression	"fgets ( buff , sizeof ( buff ) , fp ) != NULL"		5569735	0		!=			
ANR	5570022	CallExpression	"fgets ( buff , sizeof ( buff ) , fp )"		5569735	0					
ANR	5570023	Callee	fgets		5569735	0					
ANR	5570024	Identifier	fgets		5569735	0					
ANR	5570025	ArgumentList	buff		5569735	1					
ANR	5570026	Argument	buff		5569735	0					
ANR	5570027	Identifier	buff		5569735	0					
ANR	5570028	Argument	sizeof ( buff )		5569735	1					
ANR	5570029	SizeofExpression	sizeof ( buff )		5569735	0					
ANR	5570030	Sizeof	sizeof		5569735	0					
ANR	5570031	SizeofOperand	buff		5569735	1					
ANR	5570032	Argument	fp		5569735	2					
ANR	5570033	Identifier	fp		5569735	0					
ANR	5570034	Identifier	NULL		5569735	1					
ANR	5570035	CompoundStatement		242:51:5673:5673	5569735	1					
ANR	5570036	ExpressionStatement	line += buff	766:2:16820:16832	5569735	0	True				
ANR	5570037	AssignmentExpression	line += buff		5569735	0		+=			
ANR	5570038	Identifier	line		5569735	0					
ANR	5570039	Identifier	buff		5569735	1					
ANR	5570040	IfStatement	if ( line . chomp ( ) )		5569735	1					
ANR	5570041	Condition	line . chomp ( )	767:7:16841:16852	5569735	0	True				
ANR	5570042	CallExpression	line . chomp ( )		5569735	0					
ANR	5570043	Callee	line . chomp		5569735	0					
ANR	5570044	MemberAccess	line . chomp		5569735	0					
ANR	5570045	Identifier	line		5569735	0					
ANR	5570046	Identifier	chomp		5569735	1					
ANR	5570047	ArgumentList			5569735	1					
ANR	5570048	CompoundStatement		244:22:5713:5713	5569735	1					
ANR	5570049	ExpressionStatement	my_cmd_out -> append ( line . Value ( ) )	768:3:16861:16895	5569735	0	True				
ANR	5570050	CallExpression	my_cmd_out -> append ( line . Value ( ) )		5569735	0					
ANR	5570051	Callee	my_cmd_out -> append		5569735	0					
ANR	5570052	PtrMemberAccess	my_cmd_out -> append		5569735	0					
ANR	5570053	Identifier	my_cmd_out		5569735	0					
ANR	5570054	Identifier	append		5569735	1					
ANR	5570055	ArgumentList	line . Value ( )		5569735	1					
ANR	5570056	Argument	line . Value ( )		5569735	0					
ANR	5570057	CallExpression	line . Value ( )		5569735	0					
ANR	5570058	Callee	line . Value		5569735	0					
ANR	5570059	MemberAccess	line . Value		5569735	0					
ANR	5570060	Identifier	line		5569735	0					
ANR	5570061	Identifier	Value		5569735	1					
ANR	5570062	ArgumentList			5569735	1					
ANR	5570063	ExpressionStatement	"line = """""	769:3:16900:16909	5569735	1	True				
ANR	5570064	AssignmentExpression	"line = """""		5569735	0		=			
ANR	5570065	Identifier	line		5569735	0					
ANR	5570066	PrimaryExpression	""""""		5569735	1					
ANR	5570067	IfStatement	if ( cmd_err != NULL )		5569735	21					
ANR	5570068	Condition	cmd_err != NULL	773:4:16923:16937	5569735	0	True				
ANR	5570069	EqualityExpression	cmd_err != NULL		5569735	0		!=			
ANR	5570070	Identifier	cmd_err		5569735	0					
ANR	5570071	Identifier	NULL		5569735	1					
ANR	5570072	CompoundStatement		251:3:5800:5800	5569735	1					
ANR	5570073	WhileStatement	"while ( fgets ( buff , sizeof ( buff ) , childerr ) != NULL )"		5569735	0					
ANR	5570074	Condition	"fgets ( buff , sizeof ( buff ) , childerr ) != NULL"	775:11:16956:16998	5569735	0	True				
ANR	5570075	EqualityExpression	"fgets ( buff , sizeof ( buff ) , childerr ) != NULL"		5569735	0		!=			
ANR	5570076	CallExpression	"fgets ( buff , sizeof ( buff ) , childerr )"		5569735	0					
ANR	5570077	Callee	fgets		5569735	0					
ANR	5570078	Identifier	fgets		5569735	0					
ANR	5570079	ArgumentList	buff		5569735	1					
ANR	5570080	Argument	buff		5569735	0					
ANR	5570081	Identifier	buff		5569735	0					
ANR	5570082	Argument	sizeof ( buff )		5569735	1					
ANR	5570083	SizeofExpression	sizeof ( buff )		5569735	0					
ANR	5570084	Sizeof	sizeof		5569735	0					
ANR	5570085	SizeofOperand	buff		5569735	1					
ANR	5570086	Argument	childerr		5569735	2					
ANR	5570087	Identifier	childerr		5569735	0					
ANR	5570088	Identifier	NULL		5569735	1					
ANR	5570089	CompoundStatement		253:7:5865:5865	5569735	1					
ANR	5570090	ExpressionStatement	line += buff	777:2:17012:17024	5569735	0	True				
ANR	5570091	AssignmentExpression	line += buff		5569735	0		+=			
ANR	5570092	Identifier	line		5569735	0					
ANR	5570093	Identifier	buff		5569735	1					
ANR	5570094	IfStatement	if ( line . chomp ( ) )		5569735	1					
ANR	5570095	Condition	line . chomp ( )	778:5:17031:17042	5569735	0	True				
ANR	5570096	CallExpression	line . chomp ( )		5569735	0					
ANR	5570097	Callee	line . chomp		5569735	0					
ANR	5570098	MemberAccess	line . chomp		5569735	0					
ANR	5570099	Identifier	line		5569735	0					
ANR	5570100	Identifier	chomp		5569735	1					
ANR	5570101	ArgumentList			5569735	1					
ANR	5570102	CompoundStatement		256:4:5906:5906	5569735	1					
ANR	5570103	ExpressionStatement	cmd_err -> append ( line . Value ( ) )	780:6:17057:17086	5569735	0	True				
ANR	5570104	CallExpression	cmd_err -> append ( line . Value ( ) )		5569735	0					
ANR	5570105	Callee	cmd_err -> append		5569735	0					
ANR	5570106	PtrMemberAccess	cmd_err -> append		5569735	0					
ANR	5570107	Identifier	cmd_err		5569735	0					
ANR	5570108	Identifier	append		5569735	1					
ANR	5570109	ArgumentList	line . Value ( )		5569735	1					
ANR	5570110	Argument	line . Value ( )		5569735	0					
ANR	5570111	CallExpression	line . Value ( )		5569735	0					
ANR	5570112	Callee	line . Value		5569735	0					
ANR	5570113	MemberAccess	line . Value		5569735	0					
ANR	5570114	Identifier	line		5569735	0					
ANR	5570115	Identifier	Value		5569735	1					
ANR	5570116	ArgumentList			5569735	1					
ANR	5570117	ExpressionStatement	"line = """""	781:6:17094:17103	5569735	1	True				
ANR	5570118	AssignmentExpression	"line = """""		5569735	0		=			
ANR	5570119	Identifier	line		5569735	0					
ANR	5570120	PrimaryExpression	""""""		5569735	1					
ANR	5570121	ExpressionStatement	fclose ( childerr )	784:5:17125:17141	5569735	1	True				
ANR	5570122	CallExpression	fclose ( childerr )		5569735	0					
ANR	5570123	Callee	fclose		5569735	0					
ANR	5570124	Identifier	fclose		5569735	0					
ANR	5570125	ArgumentList	childerr		5569735	1					
ANR	5570126	Argument	childerr		5569735	0					
ANR	5570127	Identifier	childerr		5569735	0					
ANR	5570128	ExpressionStatement	result = my_pclose ( fp )	787:1:17168:17192	5569735	22	True				
ANR	5570129	AssignmentExpression	result = my_pclose ( fp )		5569735	0		=			
ANR	5570130	Identifier	result		5569735	0					
ANR	5570131	CallExpression	my_pclose ( fp )		5569735	1					
ANR	5570132	Callee	my_pclose		5569735	0					
ANR	5570133	Identifier	my_pclose		5569735	0					
ANR	5570134	ArgumentList	fp		5569735	1					
ANR	5570135	Argument	fp		5569735	0					
ANR	5570136	Identifier	fp		5569735	0					
ANR	5570137	IfStatement	if ( result != 0 )		5569735	23					
ANR	5570138	Condition	result != 0	803:5:17561:17571	5569735	0	True				
ANR	5570139	EqualityExpression	result != 0		5569735	0		!=			
ANR	5570140	Identifier	result		5569735	0					
ANR	5570141	PrimaryExpression	0		5569735	1					
ANR	5570142	CompoundStatement		287:2:6632:6653	5569735	1					
ANR	5570143	IdentifierDeclStatement	MyString args_string ;	804:2:17579:17599	5569735	0	True				
ANR	5570144	IdentifierDecl	args_string		5569735	0					
ANR	5570145	IdentifierDeclType	MyString		5569735	0					
ANR	5570146	Identifier	args_string		5569735	1					
ANR	5570147	ExpressionStatement	"args . GetArgsStringForDisplay ( & args_string , 0 )"	805:2:17603:17647	5569735	1	True				
ANR	5570148	CallExpression	"args . GetArgsStringForDisplay ( & args_string , 0 )"		5569735	0					
ANR	5570149	Callee	args . GetArgsStringForDisplay		5569735	0					
ANR	5570150	MemberAccess	args . GetArgsStringForDisplay		5569735	0					
ANR	5570151	Identifier	args		5569735	0					
ANR	5570152	Identifier	GetArgsStringForDisplay		5569735	1					
ANR	5570153	ArgumentList	& args_string		5569735	1					
ANR	5570154	Argument	& args_string		5569735	0					
ANR	5570155	UnaryOperationExpression	& args_string		5569735	0					
ANR	5570156	UnaryOperator	&		5569735	0					
ANR	5570157	Identifier	args_string		5569735	1					
ANR	5570158	Argument	0		5569735	1					
ANR	5570159	PrimaryExpression	0		5569735	0					
ANR	5570160	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Command returned non-zero: %s\\n"" , args_string . Value ( ) )"	806:2:17651:17747	5569735	2	True				
ANR	5570161	CallExpression	"vmprintf ( D_ALWAYS , ""Command returned non-zero: %s\\n"" , args_string . Value ( ) )"		5569735	0					
ANR	5570162	Callee	vmprintf		5569735	0					
ANR	5570163	Identifier	vmprintf		5569735	0					
ANR	5570164	ArgumentList	D_ALWAYS		5569735	1					
ANR	5570165	Argument	D_ALWAYS		5569735	0					
ANR	5570166	Identifier	D_ALWAYS		5569735	0					
ANR	5570167	Argument	"""Command returned non-zero: %s\\n"""		5569735	1					
ANR	5570168	PrimaryExpression	"""Command returned non-zero: %s\\n"""		5569735	0					
ANR	5570169	Argument	args_string . Value ( )		5569735	2					
ANR	5570170	CallExpression	args_string . Value ( )		5569735	0					
ANR	5570171	Callee	args_string . Value		5569735	0					
ANR	5570172	MemberAccess	args_string . Value		5569735	0					
ANR	5570173	Identifier	args_string		5569735	0					
ANR	5570174	Identifier	Value		5569735	1					
ANR	5570175	ArgumentList			5569735	1					
ANR	5570176	ExpressionStatement	my_cmd_out -> rewind ( )	809:2:17751:17771	5569735	3	True				
ANR	5570177	CallExpression	my_cmd_out -> rewind ( )		5569735	0					
ANR	5570178	Callee	my_cmd_out -> rewind		5569735	0					
ANR	5570179	PtrMemberAccess	my_cmd_out -> rewind		5569735	0					
ANR	5570180	Identifier	my_cmd_out		5569735	0					
ANR	5570181	Identifier	rewind		5569735	1					
ANR	5570182	ArgumentList			5569735	1					
ANR	5570183	IdentifierDeclStatement	const char * next_line ;	810:2:17775:17796	5569735	4	True				
ANR	5570184	IdentifierDecl	* next_line		5569735	0					
ANR	5570185	IdentifierDeclType	const char *		5569735	0					
ANR	5570186	Identifier	next_line		5569735	1					
ANR	5570187	WhileStatement	while ( ( next_line = my_cmd_out -> next ( ) ) )		5569735	5					
ANR	5570188	Condition	next_line = my_cmd_out -> next ( )	811:10:17808:17839	5569735	0	True				
ANR	5570189	AssignmentExpression	next_line = my_cmd_out -> next ( )		5569735	0		=			
ANR	5570190	Identifier	next_line		5569735	0					
ANR	5570191	CallExpression	my_cmd_out -> next ( )		5569735	1					
ANR	5570192	Callee	my_cmd_out -> next		5569735	0					
ANR	5570193	PtrMemberAccess	my_cmd_out -> next		5569735	0					
ANR	5570194	Identifier	my_cmd_out		5569735	0					
ANR	5570195	Identifier	next		5569735	1					
ANR	5570196	ArgumentList			5569735	1					
ANR	5570197	CompoundStatement		288:45:6700:6700	5569735	1					
ANR	5570198	ExpressionStatement	"vmprintf ( D_ALWAYS , ""  %s\\n"" , next_line )"	812:3:17848:17889	5569735	0	True				
ANR	5570199	CallExpression	"vmprintf ( D_ALWAYS , ""  %s\\n"" , next_line )"		5569735	0					
ANR	5570200	Callee	vmprintf		5569735	0					
ANR	5570201	Identifier	vmprintf		5569735	0					
ANR	5570202	ArgumentList	D_ALWAYS		5569735	1					
ANR	5570203	Argument	D_ALWAYS		5569735	0					
ANR	5570204	Identifier	D_ALWAYS		5569735	0					
ANR	5570205	Argument	"""  %s\\n"""		5569735	1					
ANR	5570206	PrimaryExpression	"""  %s\\n"""		5569735	0					
ANR	5570207	Argument	next_line		5569735	2					
ANR	5570208	Identifier	next_line		5569735	0					
ANR	5570209	IfStatement	if ( cmd_out == NULL )		5569735	24					
ANR	5570210	Condition	cmd_out == NULL	815:6:17904:17918	5569735	0	True				
ANR	5570211	EqualityExpression	cmd_out == NULL		5569735	0		==			
ANR	5570212	Identifier	cmd_out		5569735	0					
ANR	5570213	Identifier	NULL		5569735	1					
ANR	5570214	CompoundStatement		292:24:6779:6779	5569735	1					
ANR	5570215	Statement	delete	816:2:17926:17931	5569735	0	True				
ANR	5570216	ExpressionStatement	my_cmd_out	816:9:17933:17943	5569735	1	True				
ANR	5570217	Identifier	my_cmd_out		5569735	0					
ANR	5570218	ReturnStatement	return result ;	818:1:17949:17962	5569735	25	True				
ANR	5570219	Identifier	result		5569735	0					
ANR	5570220	ReturnType	int		5569735	1					
ANR	5570221	Identifier	systemCommand		5569735	2					
ANR	5570222	ParameterList	"ArgList & args , priv_state priv , StringList * cmd_out , StringList * cmd_in , StringList * cmd_err , bool merge_stderr_with_stdout"		5569735	3					
ANR	5570223	Parameter	ArgList & args	522:19:11011:11023	5569735	0	True				
ANR	5570224	ParameterType	ArgList &		5569735	0					
ANR	5570225	Identifier	args		5569735	1					
ANR	5570226	Parameter	priv_state priv	522:34:11026:11040	5569735	1	True				
ANR	5570227	ParameterType	priv_state		5569735	0					
ANR	5570228	Identifier	priv		5569735	1					
ANR	5570229	Parameter	StringList * cmd_out	522:51:11043:11061	5569735	2	True				
ANR	5570230	ParameterType	StringList *		5569735	0					
ANR	5570231	Identifier	cmd_out		5569735	1					
ANR	5570232	Parameter	StringList * cmd_in	522:72:11064:11082	5569735	3	True				
ANR	5570233	ParameterType	StringList *		5569735	0					
ANR	5570234	Identifier	cmd_in		5569735	1					
ANR	5570235	Parameter	StringList * cmd_err	523:5:11090:11108	5569735	4	True				
ANR	5570236	ParameterType	StringList *		5569735	0					
ANR	5570237	Identifier	cmd_err		5569735	1					
ANR	5570238	Parameter	bool merge_stderr_with_stdout	523:26:11111:11139	5569735	5	True				
ANR	5570239	ParameterType	bool		5569735	0					
ANR	5570240	Identifier	merge_stderr_with_stdout		5569735	1					
ANR	5570241	CFGEntryNode	ENTRY		5569735		True				
ANR	5570242	CFGExitNode	EXIT		5569735		True				
ANR	5570243	Symbol	& args_string		5569735						
ANR	5570244	Symbol	use_privsep		5569735						
ANR	5570245	Symbol	job_user_uid		5569735						
ANR	5570246	Symbol	line		5569735						
ANR	5570247	Symbol	prev		5569735						
ANR	5570248	Symbol	merge_stderr_with_stdout		5569735						
ANR	5570249	Symbol	set_user_priv		5569735						
ANR	5570250	Symbol	next_line		5569735						
ANR	5570251	Symbol	fp		5569735						
ANR	5570252	Symbol	pid		5569735						
ANR	5570253	Symbol	my_popen		5569735						
ANR	5570254	Symbol	PRIV_UNKNOWN		5569735						
ANR	5570255	Symbol	fgets		5569735						
ANR	5570256	Symbol	result		5569735						
ANR	5570257	Symbol	my_cmd_out -> next		5569735						
ANR	5570258	Symbol	my_cmd_out		5569735						
ANR	5570259	Symbol	cmd_in		5569735						
ANR	5570260	Symbol	cmd_in -> next		5569735						
ANR	5570261	Symbol	tmp		5569735						
ANR	5570262	Symbol	cmd_err		5569735						
ANR	5570263	Symbol	* cmd_in		5569735						
ANR	5570264	Symbol	priv		5569735						
ANR	5570265	Symbol	args_string		5569735						
ANR	5570266	Symbol	NULL		5569735						
ANR	5570267	Symbol	childerr		5569735						
ANR	5570268	Symbol	line . Value		5569735						
ANR	5570269	Symbol	false		5569735						
ANR	5570270	Symbol	D_ALWAYS		5569735						
ANR	5570271	Symbol	args_string . Value		5569735						
ANR	5570272	Symbol	set_root_priv		5569735						
ANR	5570273	Symbol	stdout_pipes		5569735						
ANR	5570274	Symbol	args		5569735						
ANR	5570275	Symbol	stdin_pipes		5569735						
ANR	5570276	Symbol	* my_cmd_out		5569735						
ANR	5570277	Symbol	get_condor_uid		5569735						
ANR	5570278	Symbol	fp_for_stdin		5569735						
ANR	5570279	Symbol	privsep_enabled		5569735						
ANR	5570280	Symbol	true		5569735						
ANR	5570281	Symbol	buff		5569735						
ANR	5570282	Symbol	my_pclose		5569735						
ANR	5570283	Symbol	cmd_out		5569735						
ANR	5570284	Symbol	line . chomp		5569735						
ANR	5570285	Function	makeErrorMessage	821:0:17967:18288							
ANR	5570286	FunctionDef	makeErrorMessage (const char * err_string)		5570285	0					
ANR	5570287	CompoundStatement		823:0:18017:18288	5570285	0					
ANR	5570288	IdentifierDeclStatement	MyString buffer ;	824:1:18020:18035	5570285	0	True				
ANR	5570289	IdentifierDecl	buffer		5570285	0					
ANR	5570290	IdentifierDeclType	MyString		5570285	0					
ANR	5570291	Identifier	buffer		5570285	1					
ANR	5570292	IfStatement	if ( err_string )		5570285	1					
ANR	5570293	Condition	err_string	826:5:18043:18052	5570285	0	True				
ANR	5570294	Identifier	err_string		5570285	0					
ANR	5570295	CompoundStatement		4:18:38:38	5570285	1					
ANR	5570296	ForStatement	for ( int i = 0 ; err_string [ i ] != '\\0' ; i ++ )		5570285	0					
ANR	5570297	ForInit	int i = 0 ;	827:7:18065:18074	5570285	0	True				
ANR	5570298	IdentifierDeclStatement	int i = 0 ;		5570285	0					
ANR	5570299	IdentifierDecl	i = 0		5570285	0					
ANR	5570300	IdentifierDeclType	int		5570285	0					
ANR	5570301	Identifier	i		5570285	1					
ANR	5570302	AssignmentExpression	i = 0		5570285	2		=			
ANR	5570303	Identifier	i		5570285	0					
ANR	5570304	PrimaryExpression	0		5570285	1					
ANR	5570305	Condition	err_string [ i ] != '\\0'	827:18:18076:18096	5570285	1	True				
ANR	5570306	EqualityExpression	err_string [ i ] != '\\0'		5570285	0		!=			
ANR	5570307	ArrayIndexing	err_string [ i ]		5570285	0					
ANR	5570308	Identifier	err_string		5570285	0					
ANR	5570309	Identifier	i		5570285	1					
ANR	5570310	PrimaryExpression	'\\0'		5570285	1					
ANR	5570311	PostIncDecOperationExpression	i ++	827:41:18099:18101	5570285	2	True				
ANR	5570312	Identifier	i		5570285	0					
ANR	5570313	IncDec	++		5570285	1					
ANR	5570314	CompoundStatement		5:47:87:87	5570285	3					
ANR	5570315	SwitchStatement	switch ( err_string [ i ] )		5570285	0					
ANR	5570316	Condition	err_string [ i ]	828:11:18118:18130	5570285	0	True				
ANR	5570317	ArrayIndexing	err_string [ i ]		5570285	0					
ANR	5570318	Identifier	err_string		5570285	0					
ANR	5570319	Identifier	i		5570285	1					
ANR	5570320	CompoundStatement		6:27:116:116	5570285	1					
ANR	5570321	Label	case ' ' :	829:4:18140:18148	5570285	0	True				
ANR	5570322	Label	case '\\\\' :	830:4:18154:18163	5570285	1	True				
ANR	5570323	Label	case '\\r' :	831:4:18169:18178	5570285	2	True				
ANR	5570324	Label	case '\\n' :	832:4:18184:18193	5570285	3	True				
ANR	5570325	ExpressionStatement	buffer += '\\\\'	833:5:18200:18214	5570285	4	True				
ANR	5570326	AssignmentExpression	buffer += '\\\\'		5570285	0		+=			
ANR	5570327	Identifier	buffer		5570285	0					
ANR	5570328	PrimaryExpression	'\\\\'		5570285	1					
ANR	5570329	Label	default :	834:4:18220:18227	5570285	5	True				
ANR	5570330	Identifier	default		5570285	0					
ANR	5570331	ExpressionStatement	buffer += err_string [ i ]	835:5:18234:18257	5570285	6	True				
ANR	5570332	AssignmentExpression	buffer += err_string [ i ]		5570285	0		+=			
ANR	5570333	Identifier	buffer		5570285	0					
ANR	5570334	ArrayIndexing	err_string [ i ]		5570285	1					
ANR	5570335	Identifier	err_string		5570285	0					
ANR	5570336	Identifier	i		5570285	1					
ANR	5570337	ReturnStatement	return buffer ;	840:1:18273:18286	5570285	2	True				
ANR	5570338	Identifier	buffer		5570285	0					
ANR	5570339	ReturnType	MyString		5570285	1					
ANR	5570340	Identifier	makeErrorMessage		5570285	2					
ANR	5570341	ParameterList	const char * err_string		5570285	3					
ANR	5570342	Parameter	const char * err_string	822:17:17993:18014	5570285	0	True				
ANR	5570343	ParameterType	const char *		5570285	0					
ANR	5570344	Identifier	err_string		5570285	1					
ANR	5570345	CFGEntryNode	ENTRY		5570285		True				
ANR	5570346	CFGExitNode	EXIT		5570285		True				
ANR	5570347	Symbol	* i		5570285						
ANR	5570348	Symbol	err_string		5570285						
ANR	5570349	Symbol	* err_string		5570285						
ANR	5570350	Symbol	i		5570285						
ANR	5570351	Symbol	buffer		5570285						
