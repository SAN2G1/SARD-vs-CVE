command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5232880	File	data/converged/CVE-2011-4930_htcondor/starter_mgr.cpp								
ANR	5232881	Function	StarterMgr :: StarterMgr	41:0:1387:1414							
ANR	5232882	FunctionDef	StarterMgr :: StarterMgr ()		5232881	0					
ANR	5232883	CompoundStatement		42:0:1412:1414	5232881	0					
ANR	5232884	Identifier	StarterMgr :: StarterMgr		5232881	1					
ANR	5232885	ParameterList			5232881	2					
ANR	5232886	CFGEntryNode	ENTRY		5232881		True				
ANR	5232887	CFGExitNode	EXIT		5232881		True				
ANR	5232888	Function	StarterMgr :: ~StarterMgr	46:0:1418:1584							
ANR	5232889	FunctionDef	StarterMgr :: ~StarterMgr ()		5232888	0					
ANR	5232890	CompoundStatement		47:0:1444:1584	5232888	0					
ANR	5232891	IdentifierDeclStatement	Starter * tmp_starter ;	48:1:1447:1467	5232888	0	True				
ANR	5232892	IdentifierDecl	* tmp_starter		5232888	0					
ANR	5232893	IdentifierDeclType	Starter *		5232888	0					
ANR	5232894	Identifier	tmp_starter		5232888	1					
ANR	5232895	ExpressionStatement	starters . Rewind ( )	49:1:1470:1487	5232888	1	True				
ANR	5232896	CallExpression	starters . Rewind ( )		5232888	0					
ANR	5232897	Callee	starters . Rewind		5232888	0					
ANR	5232898	MemberAccess	starters . Rewind		5232888	0					
ANR	5232899	Identifier	starters		5232888	0					
ANR	5232900	Identifier	Rewind		5232888	1					
ANR	5232901	ArgumentList			5232888	1					
ANR	5232902	WhileStatement	while ( starters . Next ( tmp_starter ) )		5232888	2					
ANR	5232903	Condition	starters . Next ( tmp_starter )	50:8:1497:1522	5232888	0	True				
ANR	5232904	CallExpression	starters . Next ( tmp_starter )		5232888	0					
ANR	5232905	Callee	starters . Next		5232888	0					
ANR	5232906	MemberAccess	starters . Next		5232888	0					
ANR	5232907	Identifier	starters		5232888	0					
ANR	5232908	Identifier	Next		5232888	1					
ANR	5232909	ArgumentList	tmp_starter		5232888	1					
ANR	5232910	Argument	tmp_starter		5232888	0					
ANR	5232911	Identifier	tmp_starter		5232888	0					
ANR	5232912	CompoundStatement		4:37:81:81	5232888	1					
ANR	5232913	Statement	delete	51:2:1530:1535	5232888	0	True				
ANR	5232914	ExpressionStatement	tmp_starter	51:8:1536:1551	5232888	1	True				
ANR	5232915	Identifier	tmp_starter		5232888	0					
ANR	5232916	ExpressionStatement	starters . DeleteCurrent ( )	52:2:1555:1579	5232888	2	True				
ANR	5232917	CallExpression	starters . DeleteCurrent ( )		5232888	0					
ANR	5232918	Callee	starters . DeleteCurrent		5232888	0					
ANR	5232919	MemberAccess	starters . DeleteCurrent		5232888	0					
ANR	5232920	Identifier	starters		5232888	0					
ANR	5232921	Identifier	DeleteCurrent		5232888	1					
ANR	5232922	ArgumentList			5232888	1					
ANR	5232923	Identifier	StarterMgr :: ~StarterMgr		5232888	1					
ANR	5232924	ParameterList			5232888	2					
ANR	5232925	CFGEntryNode	ENTRY		5232888		True				
ANR	5232926	CFGExitNode	EXIT		5232888		True				
ANR	5232927	Symbol	tmp_starter		5232888						
ANR	5232928	Symbol	starters		5232888						
ANR	5232929	Symbol	starters . Next		5232888						
ANR	5232930	Function	StarterMgr :: init	57:0:1588:3531							
ANR	5232931	FunctionDef	StarterMgr :: init ()		5232930	0					
ANR	5232932	CompoundStatement		59:0:1618:3531	5232930	0					
ANR	5232933	Statement	static	60:1:1621:1626	5232930	0	True				
ANR	5232934	IdentifierDeclStatement	bool did_warning = false ;	60:8:1628:1652	5232930	1	True				
ANR	5232935	IdentifierDecl	did_warning = false		5232930	0					
ANR	5232936	IdentifierDeclType	bool		5232930	0					
ANR	5232937	Identifier	did_warning		5232930	1					
ANR	5232938	AssignmentExpression	did_warning = false		5232930	2		=			
ANR	5232939	Identifier	false		5232930	0					
ANR	5232940	Identifier	false		5232930	1					
ANR	5232941	IdentifierDeclStatement	StringList starter_list ;	61:1:1655:1678	5232930	2	True				
ANR	5232942	IdentifierDecl	starter_list		5232930	0					
ANR	5232943	IdentifierDeclType	StringList		5232930	0					
ANR	5232944	Identifier	starter_list		5232930	1					
ANR	5232945	IdentifierDeclStatement	StringList checked_starter_list ;	62:1:1681:1712	5232930	3	True				
ANR	5232946	IdentifierDecl	checked_starter_list		5232930	0					
ANR	5232947	IdentifierDeclType	StringList		5232930	0					
ANR	5232948	Identifier	checked_starter_list		5232930	1					
ANR	5232949	IdentifierDeclStatement	Starter * tmp_starter ;	63:1:1715:1735	5232930	4	True				
ANR	5232950	IdentifierDecl	* tmp_starter		5232930	0					
ANR	5232951	IdentifierDeclType	Starter *		5232930	0					
ANR	5232952	Identifier	tmp_starter		5232930	1					
ANR	5232953	ExpressionStatement	starters . Rewind ( )	64:1:1738:1755	5232930	5	True				
ANR	5232954	CallExpression	starters . Rewind ( )		5232930	0					
ANR	5232955	Callee	starters . Rewind		5232930	0					
ANR	5232956	MemberAccess	starters . Rewind		5232930	0					
ANR	5232957	Identifier	starters		5232930	0					
ANR	5232958	Identifier	Rewind		5232930	1					
ANR	5232959	ArgumentList			5232930	1					
ANR	5232960	WhileStatement	while ( starters . Next ( tmp_starter ) )		5232930	6					
ANR	5232961	Condition	starters . Next ( tmp_starter )	65:8:1765:1790	5232930	0	True				
ANR	5232962	CallExpression	starters . Next ( tmp_starter )		5232930	0					
ANR	5232963	Callee	starters . Next		5232930	0					
ANR	5232964	MemberAccess	starters . Next		5232930	0					
ANR	5232965	Identifier	starters		5232930	0					
ANR	5232966	Identifier	Next		5232930	1					
ANR	5232967	ArgumentList	tmp_starter		5232930	1					
ANR	5232968	Argument	tmp_starter		5232930	0					
ANR	5232969	Identifier	tmp_starter		5232930	0					
ANR	5232970	CompoundStatement		7:37:175:175	5232930	1					
ANR	5232971	Statement	delete	66:2:1798:1803	5232930	0	True				
ANR	5232972	ExpressionStatement	tmp_starter	66:8:1804:1819	5232930	1	True				
ANR	5232973	Identifier	tmp_starter		5232930	0					
ANR	5232974	ExpressionStatement	starters . DeleteCurrent ( )	67:2:1823:1847	5232930	2	True				
ANR	5232975	CallExpression	starters . DeleteCurrent ( )		5232930	0					
ANR	5232976	Callee	starters . DeleteCurrent		5232930	0					
ANR	5232977	MemberAccess	starters . DeleteCurrent		5232930	0					
ANR	5232978	Identifier	starters		5232930	0					
ANR	5232979	Identifier	DeleteCurrent		5232930	1					
ANR	5232980	ArgumentList			5232930	1					
ANR	5232981	IdentifierDeclStatement	"char * tmp , * starter_path = NULL ;"	70:1:1854:1885	5232930	7	True				
ANR	5232982	IdentifierDecl	* tmp		5232930	0					
ANR	5232983	IdentifierDeclType	char *		5232930	0					
ANR	5232984	Identifier	tmp		5232930	1					
ANR	5232985	IdentifierDecl	* starter_path = NULL		5232930	1					
ANR	5232986	IdentifierDeclType	char *		5232930	0					
ANR	5232987	Identifier	starter_path		5232930	1					
ANR	5232988	AssignmentExpression	* starter_path = NULL		5232930	2		=			
ANR	5232989	Identifier	NULL		5232930	0					
ANR	5232990	Identifier	NULL		5232930	1					
ANR	5232991	ExpressionStatement	"tmp = param ( ""STARTER_LIST"" )"	71:1:1888:1917	5232930	8	True				
ANR	5232992	AssignmentExpression	"tmp = param ( ""STARTER_LIST"" )"		5232930	0		=			
ANR	5232993	Identifier	tmp		5232930	0					
ANR	5232994	CallExpression	"param ( ""STARTER_LIST"" )"		5232930	1					
ANR	5232995	Callee	param		5232930	0					
ANR	5232996	Identifier	param		5232930	0					
ANR	5232997	ArgumentList	"""STARTER_LIST"""		5232930	1					
ANR	5232998	Argument	"""STARTER_LIST"""		5232930	0					
ANR	5232999	PrimaryExpression	"""STARTER_LIST"""		5232930	0					
ANR	5233000	IfStatement	if ( ! tmp )		5232930	9					
ANR	5233001	Condition	! tmp	72:5:1924:1928	5232930	0	True				
ANR	5233002	UnaryOperationExpression	! tmp		5232930	0					
ANR	5233003	UnaryOperator	!		5232930	0					
ANR	5233004	Identifier	tmp		5232930	1					
ANR	5233005	CompoundStatement		14:13:313:313	5232930	1					
ANR	5233006	Statement	tmp	74:2:1975:1977	5232930	0	True				
ANR	5233007	Statement	=	74:6:1979:1979	5232930	1	True				
ANR	5233008	Statement	strdup	74:8:1981:1986	5232930	2	True				
ANR	5233009	Statement	(	74:14:1987:1987	5232930	3	True				
ANR	5233010	Statement	"""STARTER, STARTER_1, STARTER_2, """	74:16:1989:2021	5232930	4	True				
ANR	5233011	Statement	"""ALTERNATE_STARTER_1, ALTERNATE_STARTER_2"""	75:7:2030:2071	5232930	5	True				
ANR	5233012	Statement	)	75:50:2073:2073	5232930	6	True				
ANR	5233013	ExpressionStatement		75:51:2074:2074	5232930	7	True				
ANR	5233014	IfStatement	if ( ! did_warning )		5232930	8					
ANR	5233015	Condition	! did_warning	76:6:2082:2094	5232930	0	True				
ANR	5233016	UnaryOperationExpression	! did_warning		5232930	0					
ANR	5233017	UnaryOperator	!		5232930	0					
ANR	5233018	Identifier	did_warning		5232930	1					
ANR	5233019	CompoundStatement		18:22:479:479	5232930	1					
ANR	5233020	Statement	dprintf	77:3:2103:2109	5232930	0	True				
ANR	5233021	Statement	(	77:10:2110:2110	5232930	1	True				
ANR	5233022	Statement	D_ALWAYS	77:11:2111:2118	5232930	2	True				
ANR	5233023	Statement	","	77:19:2119:2119	5232930	3	True				
ANR	5233024	Statement	"""WARNING: STARTER_LIST not defined in config file, """	78:5:2126:2177	5232930	4	True				
ANR	5233025	Statement	"""using default: %s\\n"""	79:5:2184:2204	5232930	5	True				
ANR	5233026	Statement	","	79:26:2205:2205	5232930	6	True				
ANR	5233027	Statement	tmp	79:28:2207:2209	5232930	7	True				
ANR	5233028	Statement	)	79:31:2210:2210	5232930	8	True				
ANR	5233029	ExpressionStatement		79:32:2211:2211	5232930	9	True				
ANR	5233030	ExpressionStatement	did_warning = true	80:3:2216:2234	5232930	10	True				
ANR	5233031	AssignmentExpression	did_warning = true		5232930	0		=			
ANR	5233032	Identifier	did_warning		5232930	0					
ANR	5233033	Identifier	true		5232930	1					
ANR	5233034	ExpressionStatement	starter_list . initializeFromString ( tmp )	83:1:2244:2284	5232930	10	True				
ANR	5233035	CallExpression	starter_list . initializeFromString ( tmp )		5232930	0					
ANR	5233036	Callee	starter_list . initializeFromString		5232930	0					
ANR	5233037	MemberAccess	starter_list . initializeFromString		5232930	0					
ANR	5233038	Identifier	starter_list		5232930	0					
ANR	5233039	Identifier	initializeFromString		5232930	1					
ANR	5233040	ArgumentList	tmp		5232930	1					
ANR	5233041	Argument	tmp		5232930	0					
ANR	5233042	Identifier	tmp		5232930	0					
ANR	5233043	ExpressionStatement	free ( tmp )	84:1:2287:2298	5232930	11	True				
ANR	5233044	CallExpression	free ( tmp )		5232930	0					
ANR	5233045	Callee	free		5232930	0					
ANR	5233046	Identifier	free		5232930	0					
ANR	5233047	ArgumentList	tmp		5232930	1					
ANR	5233048	Argument	tmp		5232930	0					
ANR	5233049	Identifier	tmp		5232930	0					
ANR	5233050	ExpressionStatement	starter_list . rewind ( )	86:1:2302:2323	5232930	12	True				
ANR	5233051	CallExpression	starter_list . rewind ( )		5232930	0					
ANR	5233052	Callee	starter_list . rewind		5232930	0					
ANR	5233053	MemberAccess	starter_list . rewind		5232930	0					
ANR	5233054	Identifier	starter_list		5232930	0					
ANR	5233055	Identifier	rewind		5232930	1					
ANR	5233056	ArgumentList			5232930	1					
ANR	5233057	WhileStatement	while ( ( tmp = starter_list . next ( ) ) )		5232930	13					
ANR	5233058	Condition	tmp = starter_list . next ( )	87:8:2333:2359	5232930	0	True				
ANR	5233059	AssignmentExpression	tmp = starter_list . next ( )		5232930	0		=			
ANR	5233060	Identifier	tmp		5232930	0					
ANR	5233061	CallExpression	starter_list . next ( )		5232930	1					
ANR	5233062	Callee	starter_list . next		5232930	0					
ANR	5233063	MemberAccess	starter_list . next		5232930	0					
ANR	5233064	Identifier	starter_list		5232930	0					
ANR	5233065	Identifier	next		5232930	1					
ANR	5233066	ArgumentList			5232930	1					
ANR	5233067	CompoundStatement		29:38:744:744	5232930	1					
ANR	5233068	ExpressionStatement	starter_path = param ( tmp )	88:2:2367:2394	5232930	0	True				
ANR	5233069	AssignmentExpression	starter_path = param ( tmp )		5232930	0		=			
ANR	5233070	Identifier	starter_path		5232930	0					
ANR	5233071	CallExpression	param ( tmp )		5232930	1					
ANR	5233072	Callee	param		5232930	0					
ANR	5233073	Identifier	param		5232930	0					
ANR	5233074	ArgumentList	tmp		5232930	1					
ANR	5233075	Argument	tmp		5232930	0					
ANR	5233076	Identifier	tmp		5232930	0					
ANR	5233077	IfStatement	if ( ! starter_path )		5232930	1					
ANR	5233078	Condition	! starter_path	89:6:2402:2415	5232930	0	True				
ANR	5233079	UnaryOperationExpression	! starter_path		5232930	0					
ANR	5233080	UnaryOperator	!		5232930	0					
ANR	5233081	Identifier	starter_path		5232930	1					
ANR	5233082	CompoundStatement		31:23:800:800	5232930	1					
ANR	5233083	Statement	dprintf	90:3:2424:2430	5232930	0	True				
ANR	5233084	Statement	(	90:10:2431:2431	5232930	1	True				
ANR	5233085	Statement	D_ALWAYS	90:12:2433:2440	5232930	2	True				
ANR	5233086	Statement	","	90:20:2441:2441	5232930	3	True				
ANR	5233087	Statement	"""Starter specified in STARTER_LIST """	90:22:2443:2478	5232930	4	True				
ANR	5233088	Statement	"""\\""%s\\"" not found in config file, ignoring.\\n"""	91:6:2486:2531	5232930	5	True				
ANR	5233089	Statement	","	91:52:2532:2532	5232930	6	True				
ANR	5233090	Statement	tmp	92:6:2540:2542	5232930	7	True				
ANR	5233091	Statement	)	92:10:2544:2544	5232930	8	True				
ANR	5233092	ExpressionStatement		92:11:2545:2545	5232930	9	True				
ANR	5233093	ContinueStatement	continue ;	93:3:2551:2559	5232930	10	True				
ANR	5233094	IfStatement	if ( checked_starter_list . contains ( starter_path ) )		5232930	2					
ANR	5233095	Condition	checked_starter_list . contains ( starter_path )	95:6:2571:2613	5232930	0	True				
ANR	5233096	CallExpression	checked_starter_list . contains ( starter_path )		5232930	0					
ANR	5233097	Callee	checked_starter_list . contains		5232930	0					
ANR	5233098	MemberAccess	checked_starter_list . contains		5232930	0					
ANR	5233099	Identifier	checked_starter_list		5232930	0					
ANR	5233100	Identifier	contains		5232930	1					
ANR	5233101	ArgumentList	starter_path		5232930	1					
ANR	5233102	Argument	starter_path		5232930	0					
ANR	5233103	Identifier	starter_path		5232930	0					
ANR	5233104	CompoundStatement		37:52:998:998	5232930	1					
ANR	5233105	Statement	dprintf	96:3:2622:2628	5232930	0	True				
ANR	5233106	Statement	(	96:10:2629:2629	5232930	1	True				
ANR	5233107	Statement	D_ALWAYS	96:12:2631:2638	5232930	2	True				
ANR	5233108	Statement	","	96:20:2639:2639	5232930	3	True				
ANR	5233109	Statement	"""Starter pointed to by \\""%s\\"" (%s) is """	96:22:2641:2679	5232930	4	True				
ANR	5233110	Statement	"""in STARTER_LIST more than once, ignoring.\\n"""	97:6:2687:2731	5232930	5	True				
ANR	5233111	Statement	","	97:51:2732:2732	5232930	6	True				
ANR	5233112	Statement	tmp	98:6:2741:2743	5232930	7	True				
ANR	5233113	Statement	","	98:9:2744:2744	5232930	8	True				
ANR	5233114	Statement	starter_path	98:11:2746:2757	5232930	9	True				
ANR	5233115	Statement	)	98:24:2759:2759	5232930	10	True				
ANR	5233116	ExpressionStatement		98:25:2760:2760	5232930	11	True				
ANR	5233117	ExpressionStatement	free ( starter_path )	99:3:2765:2783	5232930	12	True				
ANR	5233118	CallExpression	free ( starter_path )		5232930	0					
ANR	5233119	Callee	free		5232930	0					
ANR	5233120	Identifier	free		5232930	0					
ANR	5233121	ArgumentList	starter_path		5232930	1					
ANR	5233122	Argument	starter_path		5232930	0					
ANR	5233123	Identifier	starter_path		5232930	0					
ANR	5233124	ContinueStatement	continue ;	100:3:2788:2796	5232930	13	True				
ANR	5233125	ExpressionStatement	tmp_starter = makeStarter ( starter_path )	107:2:3034:3075	5232930	3	True				
ANR	5233126	AssignmentExpression	tmp_starter = makeStarter ( starter_path )		5232930	0		=			
ANR	5233127	Identifier	tmp_starter		5232930	0					
ANR	5233128	CallExpression	makeStarter ( starter_path )		5232930	1					
ANR	5233129	Callee	makeStarter		5232930	0					
ANR	5233130	Identifier	makeStarter		5232930	0					
ANR	5233131	ArgumentList	starter_path		5232930	1					
ANR	5233132	Argument	starter_path		5232930	0					
ANR	5233133	Identifier	starter_path		5232930	0					
ANR	5233134	IfStatement	if ( tmp_starter )		5232930	4					
ANR	5233135	Condition	tmp_starter	108:6:3083:3093	5232930	0	True				
ANR	5233136	Identifier	tmp_starter		5232930	0					
ANR	5233137	CompoundStatement		50:20:1478:1478	5232930	1					
ANR	5233138	ExpressionStatement	starters . Append ( tmp_starter )	109:3:3102:3132	5232930	0	True				
ANR	5233139	CallExpression	starters . Append ( tmp_starter )		5232930	0					
ANR	5233140	Callee	starters . Append		5232930	0					
ANR	5233141	MemberAccess	starters . Append		5232930	0					
ANR	5233142	Identifier	starters		5232930	0					
ANR	5233143	Identifier	Append		5232930	1					
ANR	5233144	ArgumentList	tmp_starter		5232930	1					
ANR	5233145	Argument	tmp_starter		5232930	0					
ANR	5233146	Identifier	tmp_starter		5232930	0					
ANR	5233147	ExpressionStatement	checked_starter_list . append ( starter_path )	113:2:3253:3296	5232930	5	True				
ANR	5233148	CallExpression	checked_starter_list . append ( starter_path )		5232930	0					
ANR	5233149	Callee	checked_starter_list . append		5232930	0					
ANR	5233150	MemberAccess	checked_starter_list . append		5232930	0					
ANR	5233151	Identifier	checked_starter_list		5232930	0					
ANR	5233152	Identifier	append		5232930	1					
ANR	5233153	ArgumentList	starter_path		5232930	1					
ANR	5233154	Argument	starter_path		5232930	0					
ANR	5233155	Identifier	starter_path		5232930	0					
ANR	5233156	ExpressionStatement	free ( starter_path )	114:2:3300:3320	5232930	6	True				
ANR	5233157	CallExpression	free ( starter_path )		5232930	0					
ANR	5233158	Callee	free		5232930	0					
ANR	5233159	Identifier	free		5232930	0					
ANR	5233160	ArgumentList	starter_path		5232930	1					
ANR	5233161	Argument	starter_path		5232930	0					
ANR	5233162	Identifier	starter_path		5232930	0					
ANR	5233163	IfStatement	if ( starters . IsEmpty ( ) )		5232930	14					
ANR	5233164	Condition	starters . IsEmpty ( )	117:5:3331:3348	5232930	0	True				
ANR	5233165	CallExpression	starters . IsEmpty ( )		5232930	0					
ANR	5233166	Callee	starters . IsEmpty		5232930	0					
ANR	5233167	MemberAccess	starters . IsEmpty		5232930	0					
ANR	5233168	Identifier	starters		5232930	0					
ANR	5233169	Identifier	IsEmpty		5232930	1					
ANR	5233170	ArgumentList			5232930	1					
ANR	5233171	CompoundStatement		59:26:1733:1733	5232930	1					
ANR	5233172	ExpressionStatement	"dprintf ( D_ALWAYS , ""WARNING WARNING WARNING: No valid starters were found!  Is something wrong with your Condor installation?  This startd will not be able to run jobs.\\n"" )"	118:2:3356:3526	5232930	0	True				
ANR	5233173	CallExpression	"dprintf ( D_ALWAYS , ""WARNING WARNING WARNING: No valid starters were found!  Is something wrong with your Condor installation?  This startd will not be able to run jobs.\\n"" )"		5232930	0					
ANR	5233174	Callee	dprintf		5232930	0					
ANR	5233175	Identifier	dprintf		5232930	0					
ANR	5233176	ArgumentList	D_ALWAYS		5232930	1					
ANR	5233177	Argument	D_ALWAYS		5232930	0					
ANR	5233178	Identifier	D_ALWAYS		5232930	0					
ANR	5233179	Argument	"""WARNING WARNING WARNING: No valid starters were found!  Is something wrong with your Condor installation?  This startd will not be able to run jobs.\\n"""		5232930	1					
ANR	5233180	PrimaryExpression	"""WARNING WARNING WARNING: No valid starters were found!  Is something wrong with your Condor installation?  This startd will not be able to run jobs.\\n"""		5232930	0					
ANR	5233181	ReturnType	void		5232930	1					
ANR	5233182	Identifier	StarterMgr :: init		5232930	2					
ANR	5233183	ParameterList			5232930	3					
ANR	5233184	CFGEntryNode	ENTRY		5232930		True				
ANR	5233185	CFGExitNode	EXIT		5232930		True				
ANR	5233186	Symbol	checked_starter_list		5232930						
ANR	5233187	Symbol	starter_list		5232930						
ANR	5233188	Symbol	NULL		5232930						
ANR	5233189	Symbol	checked_starter_list . contains		5232930						
ANR	5233190	Symbol	starter_path		5232930						
ANR	5233191	Symbol	false		5232930						
ANR	5233192	Symbol	D_ALWAYS		5232930						
ANR	5233193	Symbol	makeStarter		5232930						
ANR	5233194	Symbol	starter_list . next		5232930						
ANR	5233195	Symbol	starters . IsEmpty		5232930						
ANR	5233196	Symbol	param		5232930						
ANR	5233197	Symbol	tmp_starter		5232930						
ANR	5233198	Symbol	tmp		5232930						
ANR	5233199	Symbol	starters		5232930						
ANR	5233200	Symbol	true		5232930						
ANR	5233201	Symbol	did_warning		5232930						
ANR	5233202	Symbol	starters . Next		5232930						
ANR	5233203	Function	StarterMgr :: printStarterInfo	123:0:3535:3716							
ANR	5233204	FunctionDef	StarterMgr :: printStarterInfo (int debug_level)		5233203	0					
ANR	5233205	CompoundStatement		125:0:3588:3716	5233203	0					
ANR	5233206	IdentifierDeclStatement	Starter * tmp_starter ;	126:1:3591:3611	5233203	0	True				
ANR	5233207	IdentifierDecl	* tmp_starter		5233203	0					
ANR	5233208	IdentifierDeclType	Starter *		5233203	0					
ANR	5233209	Identifier	tmp_starter		5233203	1					
ANR	5233210	ExpressionStatement	starters . Rewind ( )	127:1:3614:3631	5233203	1	True				
ANR	5233211	CallExpression	starters . Rewind ( )		5233203	0					
ANR	5233212	Callee	starters . Rewind		5233203	0					
ANR	5233213	MemberAccess	starters . Rewind		5233203	0					
ANR	5233214	Identifier	starters		5233203	0					
ANR	5233215	Identifier	Rewind		5233203	1					
ANR	5233216	ArgumentList			5233203	1					
ANR	5233217	WhileStatement	while ( starters . Next ( tmp_starter ) )		5233203	2					
ANR	5233218	Condition	starters . Next ( tmp_starter )	128:8:3641:3666	5233203	0	True				
ANR	5233219	CallExpression	starters . Next ( tmp_starter )		5233203	0					
ANR	5233220	Callee	starters . Next		5233203	0					
ANR	5233221	MemberAccess	starters . Next		5233203	0					
ANR	5233222	Identifier	starters		5233203	0					
ANR	5233223	Identifier	Next		5233203	1					
ANR	5233224	ArgumentList	tmp_starter		5233203	1					
ANR	5233225	Argument	tmp_starter		5233203	0					
ANR	5233226	Identifier	tmp_starter		5233203	0					
ANR	5233227	CompoundStatement		4:37:81:81	5233203	1					
ANR	5233228	ExpressionStatement	tmp_starter -> printInfo ( debug_level )	129:2:3674:3711	5233203	0	True				
ANR	5233229	CallExpression	tmp_starter -> printInfo ( debug_level )		5233203	0					
ANR	5233230	Callee	tmp_starter -> printInfo		5233203	0					
ANR	5233231	PtrMemberAccess	tmp_starter -> printInfo		5233203	0					
ANR	5233232	Identifier	tmp_starter		5233203	0					
ANR	5233233	Identifier	printInfo		5233203	1					
ANR	5233234	ArgumentList	debug_level		5233203	1					
ANR	5233235	Argument	debug_level		5233203	0					
ANR	5233236	Identifier	debug_level		5233203	0					
ANR	5233237	ReturnType	void		5233203	1					
ANR	5233238	Identifier	StarterMgr :: printStarterInfo		5233203	2					
ANR	5233239	ParameterList	int debug_level		5233203	3					
ANR	5233240	Parameter	int debug_level	124:30:3570:3584	5233203	0	True				
ANR	5233241	ParameterType	int		5233203	0					
ANR	5233242	Identifier	debug_level		5233203	1					
ANR	5233243	CFGEntryNode	ENTRY		5233203		True				
ANR	5233244	CFGExitNode	EXIT		5233203		True				
ANR	5233245	Symbol	debug_level		5233203						
ANR	5233246	Symbol	tmp_starter		5233203						
ANR	5233247	Symbol	starters		5233203						
ANR	5233248	Symbol	starters . Next		5233203						
ANR	5233249	Function	StarterMgr :: publish	134:0:3720:4449							
ANR	5233250	FunctionDef	"StarterMgr :: publish (ClassAd * ad , amask_t mask)"		5233249	0					
ANR	5233251	CompoundStatement		136:0:3774:4449	5233249	0					
ANR	5233252	IfStatement	if ( ! ( IS_STATIC ( mask ) && IS_PUBLIC ( mask ) ) )		5233249	0					
ANR	5233253	Condition	! ( IS_STATIC ( mask ) && IS_PUBLIC ( mask ) )	137:5:3781:3817	5233249	0	True				
ANR	5233254	UnaryOperationExpression	! ( IS_STATIC ( mask ) && IS_PUBLIC ( mask ) )		5233249	0					
ANR	5233255	UnaryOperator	!		5233249	0					
ANR	5233256	AndExpression	IS_STATIC ( mask ) && IS_PUBLIC ( mask )		5233249	1		&&			
ANR	5233257	CallExpression	IS_STATIC ( mask )		5233249	0					
ANR	5233258	Callee	IS_STATIC		5233249	0					
ANR	5233259	Identifier	IS_STATIC		5233249	0					
ANR	5233260	ArgumentList	mask		5233249	1					
ANR	5233261	Argument	mask		5233249	0					
ANR	5233262	Identifier	mask		5233249	0					
ANR	5233263	CallExpression	IS_PUBLIC ( mask )		5233249	1					
ANR	5233264	Callee	IS_PUBLIC		5233249	0					
ANR	5233265	Identifier	IS_PUBLIC		5233249	0					
ANR	5233266	ArgumentList	mask		5233249	1					
ANR	5233267	Argument	mask		5233249	0					
ANR	5233268	Identifier	mask		5233249	0					
ANR	5233269	CompoundStatement		2:45:46:46	5233249	1					
ANR	5233270	ReturnStatement	return ;	138:2:3825:3831	5233249	0	True				
ANR	5233271	IdentifierDeclStatement	Starter * tmp_starter ;	140:1:3837:3857	5233249	1	True				
ANR	5233272	IdentifierDecl	* tmp_starter		5233249	0					
ANR	5233273	IdentifierDeclType	Starter *		5233249	0					
ANR	5233274	Identifier	tmp_starter		5233249	1					
ANR	5233275	IdentifierDeclStatement	StringList ability_list ;	141:1:3860:3883	5233249	2	True				
ANR	5233276	IdentifierDecl	ability_list		5233249	0					
ANR	5233277	IdentifierDeclType	StringList		5233249	0					
ANR	5233278	Identifier	ability_list		5233249	1					
ANR	5233279	ExpressionStatement	starters . Rewind ( )	142:1:3886:3903	5233249	3	True				
ANR	5233280	CallExpression	starters . Rewind ( )		5233249	0					
ANR	5233281	Callee	starters . Rewind		5233249	0					
ANR	5233282	MemberAccess	starters . Rewind		5233249	0					
ANR	5233283	Identifier	starters		5233249	0					
ANR	5233284	Identifier	Rewind		5233249	1					
ANR	5233285	ArgumentList			5233249	1					
ANR	5233286	WhileStatement	while ( starters . Next ( tmp_starter ) )		5233249	4					
ANR	5233287	Condition	starters . Next ( tmp_starter )	143:8:3913:3938	5233249	0	True				
ANR	5233288	CallExpression	starters . Next ( tmp_starter )		5233249	0					
ANR	5233289	Callee	starters . Next		5233249	0					
ANR	5233290	MemberAccess	starters . Next		5233249	0					
ANR	5233291	Identifier	starters		5233249	0					
ANR	5233292	Identifier	Next		5233249	1					
ANR	5233293	ArgumentList	tmp_starter		5233249	1					
ANR	5233294	Argument	tmp_starter		5233249	0					
ANR	5233295	Identifier	tmp_starter		5233249	0					
ANR	5233296	CompoundStatement		8:37:167:167	5233249	1					
ANR	5233297	ExpressionStatement	"tmp_starter -> publish ( ad , mask , & ability_list )"	144:2:3946:3993	5233249	0	True				
ANR	5233298	CallExpression	"tmp_starter -> publish ( ad , mask , & ability_list )"		5233249	0					
ANR	5233299	Callee	tmp_starter -> publish		5233249	0					
ANR	5233300	PtrMemberAccess	tmp_starter -> publish		5233249	0					
ANR	5233301	Identifier	tmp_starter		5233249	0					
ANR	5233302	Identifier	publish		5233249	1					
ANR	5233303	ArgumentList	ad		5233249	1					
ANR	5233304	Argument	ad		5233249	0					
ANR	5233305	Identifier	ad		5233249	0					
ANR	5233306	Argument	mask		5233249	1					
ANR	5233307	Identifier	mask		5233249	0					
ANR	5233308	Argument	& ability_list		5233249	2					
ANR	5233309	UnaryOperationExpression	& ability_list		5233249	0					
ANR	5233310	UnaryOperator	&		5233249	0					
ANR	5233311	Identifier	ability_list		5233249	1					
ANR	5233312	IdentifierDeclStatement	char * ability_str = ability_list . print_to_string ( ) ;	148:1:4114:4164	5233249	5	True				
ANR	5233313	IdentifierDecl	* ability_str = ability_list . print_to_string ( )		5233249	0					
ANR	5233314	IdentifierDeclType	char *		5233249	0					
ANR	5233315	Identifier	ability_str		5233249	1					
ANR	5233316	AssignmentExpression	* ability_str = ability_list . print_to_string ( )		5233249	2		=			
ANR	5233317	Identifier	ability_str		5233249	0					
ANR	5233318	CallExpression	ability_list . print_to_string ( )		5233249	1					
ANR	5233319	Callee	ability_list . print_to_string		5233249	0					
ANR	5233320	MemberAccess	ability_list . print_to_string		5233249	0					
ANR	5233321	Identifier	ability_list		5233249	0					
ANR	5233322	Identifier	print_to_string		5233249	1					
ANR	5233323	ArgumentList			5233249	1					
ANR	5233324	IfStatement	if ( NULL == ability_str )		5233249	6					
ANR	5233325	Condition	NULL == ability_str	152:6:4293:4311	5233249	0	True				
ANR	5233326	EqualityExpression	NULL == ability_str		5233249	0		==			
ANR	5233327	Identifier	NULL		5233249	0					
ANR	5233328	Identifier	ability_str		5233249	1					
ANR	5233329	CompoundStatement		17:28:540:540	5233249	1					
ANR	5233330	ExpressionStatement	"ability_str = strdup ( ""\\0"" )"	153:2:4319:4345	5233249	0	True				
ANR	5233331	AssignmentExpression	"ability_str = strdup ( ""\\0"" )"		5233249	0		=			
ANR	5233332	Identifier	ability_str		5233249	0					
ANR	5233333	CallExpression	"strdup ( ""\\0"" )"		5233249	1					
ANR	5233334	Callee	strdup		5233249	0					
ANR	5233335	Identifier	strdup		5233249	0					
ANR	5233336	ArgumentList	"""\\0"""		5233249	1					
ANR	5233337	Argument	"""\\0"""		5233249	0					
ANR	5233338	PrimaryExpression	"""\\0"""		5233249	0					
ANR	5233339	ExpressionStatement	ASSERT ( ability_str )	155:1:4351:4370	5233249	7	True				
ANR	5233340	CallExpression	ASSERT ( ability_str )		5233249	0					
ANR	5233341	Callee	ASSERT		5233249	0					
ANR	5233342	Identifier	ASSERT		5233249	0					
ANR	5233343	ArgumentList	ability_str		5233249	1					
ANR	5233344	Argument	ability_str		5233249	0					
ANR	5233345	Identifier	ability_str		5233249	0					
ANR	5233346	ExpressionStatement	"ad -> Assign ( ATTR_STARTER_ABILITY_LIST , ability_str )"	156:1:4373:4425	5233249	8	True				
ANR	5233347	CallExpression	"ad -> Assign ( ATTR_STARTER_ABILITY_LIST , ability_str )"		5233249	0					
ANR	5233348	Callee	ad -> Assign		5233249	0					
ANR	5233349	PtrMemberAccess	ad -> Assign		5233249	0					
ANR	5233350	Identifier	ad		5233249	0					
ANR	5233351	Identifier	Assign		5233249	1					
ANR	5233352	ArgumentList	ATTR_STARTER_ABILITY_LIST		5233249	1					
ANR	5233353	Argument	ATTR_STARTER_ABILITY_LIST		5233249	0					
ANR	5233354	Identifier	ATTR_STARTER_ABILITY_LIST		5233249	0					
ANR	5233355	Argument	ability_str		5233249	1					
ANR	5233356	Identifier	ability_str		5233249	0					
ANR	5233357	ExpressionStatement	free ( ability_str )	157:1:4428:4447	5233249	9	True				
ANR	5233358	CallExpression	free ( ability_str )		5233249	0					
ANR	5233359	Callee	free		5233249	0					
ANR	5233360	Identifier	free		5233249	0					
ANR	5233361	ArgumentList	ability_str		5233249	1					
ANR	5233362	Argument	ability_str		5233249	0					
ANR	5233363	Identifier	ability_str		5233249	0					
ANR	5233364	ReturnType	void		5233249	1					
ANR	5233365	Identifier	StarterMgr :: publish		5233249	2					
ANR	5233366	ParameterList	"ClassAd * ad , amask_t mask"		5233249	3					
ANR	5233367	Parameter	ClassAd * ad	135:21:3746:3756	5233249	0	True				
ANR	5233368	ParameterType	ClassAd *		5233249	0					
ANR	5233369	Identifier	ad		5233249	1					
ANR	5233370	Parameter	amask_t mask	135:34:3759:3770	5233249	1	True				
ANR	5233371	ParameterType	amask_t		5233249	0					
ANR	5233372	Identifier	mask		5233249	1					
ANR	5233373	CFGEntryNode	ENTRY		5233249		True				
ANR	5233374	CFGExitNode	EXIT		5233249		True				
ANR	5233375	Symbol	ad		5233249						
ANR	5233376	Symbol	ability_list		5233249						
ANR	5233377	Symbol	NULL		5233249						
ANR	5233378	Symbol	ATTR_STARTER_ABILITY_LIST		5233249						
ANR	5233379	Symbol	ability_list . print_to_string		5233249						
ANR	5233380	Symbol	& ability_list		5233249						
ANR	5233381	Symbol	IS_STATIC		5233249						
ANR	5233382	Symbol	tmp_starter		5233249						
ANR	5233383	Symbol	ability_str		5233249						
ANR	5233384	Symbol	starters		5233249						
ANR	5233385	Symbol	IS_PUBLIC		5233249						
ANR	5233386	Symbol	starters . Next		5233249						
ANR	5233387	Symbol	strdup		5233249						
ANR	5233388	Symbol	mask		5233249						
ANR	5233389	Function	StarterMgr :: findStarter	161:0:4453:5786							
ANR	5233390	FunctionDef	"StarterMgr :: findStarter (ClassAd * job_ad , ClassAd * mach_ad , bool & no_starter , int starter_num)"		5233389	0					
ANR	5233391	CompoundStatement		164:0:4566:5786	5233389	0					
ANR	5233392	IdentifierDeclStatement	"Starter * new_starter , * tmp_starter ;"	165:1:4569:4603	5233389	0	True				
ANR	5233393	IdentifierDecl	* new_starter		5233389	0					
ANR	5233394	IdentifierDeclType	Starter *		5233389	0					
ANR	5233395	Identifier	new_starter		5233389	1					
ANR	5233396	IdentifierDecl	* tmp_starter		5233389	1					
ANR	5233397	IdentifierDeclType	Starter *		5233389	0					
ANR	5233398	Identifier	tmp_starter		5233389	1					
ANR	5233399	ExpressionStatement	no_starter = true	167:1:4607:4624	5233389	1	True				
ANR	5233400	AssignmentExpression	no_starter = true		5233389	0		=			
ANR	5233401	Identifier	no_starter		5233389	0					
ANR	5233402	Identifier	true		5233389	1					
ANR	5233403	ExpressionStatement	starters . Rewind ( )	169:1:4628:4645	5233389	2	True				
ANR	5233404	CallExpression	starters . Rewind ( )		5233389	0					
ANR	5233405	Callee	starters . Rewind		5233389	0					
ANR	5233406	MemberAccess	starters . Rewind		5233389	0					
ANR	5233407	Identifier	starters		5233389	0					
ANR	5233408	Identifier	Rewind		5233389	1					
ANR	5233409	ArgumentList			5233389	1					
ANR	5233410	WhileStatement	while ( starters . Next ( tmp_starter ) )		5233389	3					
ANR	5233411	Condition	starters . Next ( tmp_starter )	170:8:4655:4680	5233389	0	True				
ANR	5233412	CallExpression	starters . Next ( tmp_starter )		5233389	0					
ANR	5233413	Callee	starters . Next		5233389	0					
ANR	5233414	MemberAccess	starters . Next		5233389	0					
ANR	5233415	Identifier	starters		5233389	0					
ANR	5233416	Identifier	Next		5233389	1					
ANR	5233417	ArgumentList	tmp_starter		5233389	1					
ANR	5233418	Argument	tmp_starter		5233389	0					
ANR	5233419	Identifier	tmp_starter		5233389	0					
ANR	5233420	CompoundStatement		7:37:117:117	5233389	1					
ANR	5233421	SwitchStatement	switch ( starter_num )		5233389	0					
ANR	5233422	Condition	starter_num	171:10:4696:4706	5233389	0	True				
ANR	5233423	Identifier	starter_num		5233389	0					
ANR	5233424	CompoundStatement		8:24:143:143	5233389	1					
ANR	5233425	Statement	case	172:2:4714:4717	5233389	0	True				
ANR	5233426	Statement	-	172:7:4719:4719	5233389	1	True				
ANR	5233427	Label	1 :	172:8:4720:4721	5233389	2	True				
ANR	5233428	BreakStatement	break ;	174:3:4781:4786	5233389	3	True				
ANR	5233429	Label	case 0 :	175:2:4790:4796	5233389	4	True				
ANR	5233430	IfStatement	if ( tmp_starter -> is_dc ( ) || ! ( tmp_starter -> provides ( ATTR_HAS_REMOTE_SYSCALLS ) ) )		5233389	5					
ANR	5233431	Condition	tmp_starter -> is_dc ( ) || ! ( tmp_starter -> provides ( ATTR_HAS_REMOTE_SYSCALLS ) )	177:7:4844:4921	5233389	0	True				
ANR	5233432	OrExpression	tmp_starter -> is_dc ( ) || ! ( tmp_starter -> provides ( ATTR_HAS_REMOTE_SYSCALLS ) )		5233389	0		||			
ANR	5233433	CallExpression	tmp_starter -> is_dc ( )		5233389	0					
ANR	5233434	Callee	tmp_starter -> is_dc		5233389	0					
ANR	5233435	PtrMemberAccess	tmp_starter -> is_dc		5233389	0					
ANR	5233436	Identifier	tmp_starter		5233389	0					
ANR	5233437	Identifier	is_dc		5233389	1					
ANR	5233438	ArgumentList			5233389	1					
ANR	5233439	UnaryOperationExpression	! ( tmp_starter -> provides ( ATTR_HAS_REMOTE_SYSCALLS ) )		5233389	1					
ANR	5233440	UnaryOperator	!		5233389	0					
ANR	5233441	CallExpression	tmp_starter -> provides ( ATTR_HAS_REMOTE_SYSCALLS )		5233389	1					
ANR	5233442	Callee	tmp_starter -> provides		5233389	0					
ANR	5233443	PtrMemberAccess	tmp_starter -> provides		5233389	0					
ANR	5233444	Identifier	tmp_starter		5233389	0					
ANR	5233445	Identifier	provides		5233389	1					
ANR	5233446	ArgumentList	ATTR_HAS_REMOTE_SYSCALLS		5233389	1					
ANR	5233447	Argument	ATTR_HAS_REMOTE_SYSCALLS		5233389	0					
ANR	5233448	Identifier	ATTR_HAS_REMOTE_SYSCALLS		5233389	0					
ANR	5233449	CompoundStatement		15:57:358:358	5233389	1					
ANR	5233450	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Job wants old RSC/Ckpt starter, skipping %s\\n"" , tmp_starter -> path ( ) )"	179:4:4931:5038	5233389	0	True				
ANR	5233451	CallExpression	"dprintf ( D_FULLDEBUG , ""Job wants old RSC/Ckpt starter, skipping %s\\n"" , tmp_starter -> path ( ) )"		5233389	0					
ANR	5233452	Callee	dprintf		5233389	0					
ANR	5233453	Identifier	dprintf		5233389	0					
ANR	5233454	ArgumentList	D_FULLDEBUG		5233389	1					
ANR	5233455	Argument	D_FULLDEBUG		5233389	0					
ANR	5233456	Identifier	D_FULLDEBUG		5233389	0					
ANR	5233457	Argument	"""Job wants old RSC/Ckpt starter, skipping %s\\n"""		5233389	1					
ANR	5233458	PrimaryExpression	"""Job wants old RSC/Ckpt starter, skipping %s\\n"""		5233389	0					
ANR	5233459	Argument	tmp_starter -> path ( )		5233389	2					
ANR	5233460	CallExpression	tmp_starter -> path ( )		5233389	0					
ANR	5233461	Callee	tmp_starter -> path		5233389	0					
ANR	5233462	PtrMemberAccess	tmp_starter -> path		5233389	0					
ANR	5233463	Identifier	tmp_starter		5233389	0					
ANR	5233464	Identifier	path		5233389	1					
ANR	5233465	ArgumentList			5233389	1					
ANR	5233466	ContinueStatement	continue ;	182:4:5044:5052	5233389	1	True				
ANR	5233467	BreakStatement	break ;	184:3:5062:5067	5233389	6	True				
ANR	5233468	Label	case 1 :	185:2:5071:5077	5233389	7	True				
ANR	5233469	Statement	dprintf	187:3:5108:5114	5233389	8	True				
ANR	5233470	Statement	(	187:10:5115:5115	5233389	9	True				
ANR	5233471	Statement	D_ALWAYS	187:12:5117:5124	5233389	10	True				
ANR	5233472	Statement	","	187:20:5125:5125	5233389	11	True				
ANR	5233473	Statement	"""ERROR: PVM starter is not supported, """	187:22:5127:5165	5233389	12	True				
ANR	5233474	Statement	"""returning failure\\n"""	188:6:5173:5193	5233389	13	True				
ANR	5233475	Statement	)	188:28:5195:5195	5233389	14	True				
ANR	5233476	ExpressionStatement		188:29:5196:5196	5233389	15	True				
ANR	5233477	ReturnStatement	return NULL ;	189:3:5201:5212	5233389	16	True				
ANR	5233478	Identifier	NULL		5233389	0					
ANR	5233479	BreakStatement	break ;	190:3:5217:5222	5233389	17	True				
ANR	5233480	Label	case 2 :	191:2:5226:5232	5233389	18	True				
ANR	5233481	IfStatement	if ( ! tmp_starter -> is_dc ( ) )		5233389	19					
ANR	5233482	Condition	! tmp_starter -> is_dc ( )	193:7:5276:5297	5233389	0	True				
ANR	5233483	UnaryOperationExpression	! tmp_starter -> is_dc ( )		5233389	0					
ANR	5233484	UnaryOperator	!		5233389	0					
ANR	5233485	CallExpression	tmp_starter -> is_dc ( )		5233389	1					
ANR	5233486	Callee	tmp_starter -> is_dc		5233389	0					
ANR	5233487	PtrMemberAccess	tmp_starter -> is_dc		5233389	0					
ANR	5233488	Identifier	tmp_starter		5233389	0					
ANR	5233489	Identifier	is_dc		5233389	1					
ANR	5233490	ArgumentList			5233389	1					
ANR	5233491	CompoundStatement		30:32:734:734	5233389	1					
ANR	5233492	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Job wants DaemonCore starter, skipping %s\\n"" , tmp_starter -> path ( ) )"	194:4:5307:5412	5233389	0	True				
ANR	5233493	CallExpression	"dprintf ( D_FULLDEBUG , ""Job wants DaemonCore starter, skipping %s\\n"" , tmp_starter -> path ( ) )"		5233389	0					
ANR	5233494	Callee	dprintf		5233389	0					
ANR	5233495	Identifier	dprintf		5233389	0					
ANR	5233496	ArgumentList	D_FULLDEBUG		5233389	1					
ANR	5233497	Argument	D_FULLDEBUG		5233389	0					
ANR	5233498	Identifier	D_FULLDEBUG		5233389	0					
ANR	5233499	Argument	"""Job wants DaemonCore starter, skipping %s\\n"""		5233389	1					
ANR	5233500	PrimaryExpression	"""Job wants DaemonCore starter, skipping %s\\n"""		5233389	0					
ANR	5233501	Argument	tmp_starter -> path ( )		5233389	2					
ANR	5233502	CallExpression	tmp_starter -> path ( )		5233389	0					
ANR	5233503	Callee	tmp_starter -> path		5233389	0					
ANR	5233504	PtrMemberAccess	tmp_starter -> path		5233389	0					
ANR	5233505	Identifier	tmp_starter		5233389	0					
ANR	5233506	Identifier	path		5233389	1					
ANR	5233507	ArgumentList			5233389	1					
ANR	5233508	ContinueStatement	continue ;	197:4:5418:5426	5233389	1	True				
ANR	5233509	BreakStatement	break ;	199:3:5436:5441	5233389	20	True				
ANR	5233510	Label	default :	200:2:5445:5452	5233389	21	True				
ANR	5233511	Identifier	default		5233389	0					
ANR	5233512	Statement	dprintf	201:3:5457:5463	5233389	22	True				
ANR	5233513	Statement	(	201:10:5464:5464	5233389	23	True				
ANR	5233514	Statement	D_ALWAYS	201:12:5466:5473	5233389	24	True				
ANR	5233515	Statement	","	201:20:5474:5474	5233389	25	True				
ANR	5233516	Statement	"""ERROR: unknown starter type (%d) in """	201:22:5476:5513	5233389	26	True				
ANR	5233517	Statement	"""StarterMgr::findStarter(), returning failure\\n"""	202:6:5521:5568	5233389	27	True				
ANR	5233518	Statement	","	202:54:5569:5569	5233389	28	True				
ANR	5233519	Statement	starter_num	203:6:5577:5587	5233389	29	True				
ANR	5233520	Statement	)	203:18:5589:5589	5233389	30	True				
ANR	5233521	ExpressionStatement		203:19:5590:5590	5233389	31	True				
ANR	5233522	ReturnStatement	return NULL ;	204:3:5595:5606	5233389	32	True				
ANR	5233523	Identifier	NULL		5233389	0					
ANR	5233524	BreakStatement	break ;	205:3:5611:5616	5233389	33	True				
ANR	5233525	ExpressionStatement	no_starter = false	208:2:5625:5643	5233389	1	True				
ANR	5233526	AssignmentExpression	no_starter = false		5233389	0		=			
ANR	5233527	Identifier	no_starter		5233389	0					
ANR	5233528	Identifier	false		5233389	1					
ANR	5233529	IfStatement	"if ( tmp_starter -> satisfies ( job_ad , mach_ad ) )"		5233389	2					
ANR	5233530	Condition	"tmp_starter -> satisfies ( job_ad , mach_ad )"	210:6:5652:5690	5233389	0	True				
ANR	5233531	CallExpression	"tmp_starter -> satisfies ( job_ad , mach_ad )"		5233389	0					
ANR	5233532	Callee	tmp_starter -> satisfies		5233389	0					
ANR	5233533	PtrMemberAccess	tmp_starter -> satisfies		5233389	0					
ANR	5233534	Identifier	tmp_starter		5233389	0					
ANR	5233535	Identifier	satisfies		5233389	1					
ANR	5233536	ArgumentList	job_ad		5233389	1					
ANR	5233537	Argument	job_ad		5233389	0					
ANR	5233538	Identifier	job_ad		5233389	0					
ANR	5233539	Argument	mach_ad		5233389	1					
ANR	5233540	Identifier	mach_ad		5233389	0					
ANR	5233541	CompoundStatement		47:48:1127:1127	5233389	1					
ANR	5233542	ExpressionStatement	new_starter = new Starter ( * tmp_starter )	211:3:5699:5740	5233389	0	True				
ANR	5233543	AssignmentExpression	new_starter = new Starter ( * tmp_starter )		5233389	0		=			
ANR	5233544	Identifier	new_starter		5233389	0					
ANR	5233545	UnaryOperationExpression	* tmp_starter		5233389	1					
ANR	5233546	UnaryOperator	*		5233389	0					
ANR	5233547	Identifier	tmp_starter		5233389	1					
ANR	5233548	ReturnStatement	return new_starter ;	212:3:5745:5763	5233389	1	True				
ANR	5233549	Identifier	new_starter		5233389	0					
ANR	5233550	ReturnStatement	return NULL ;	215:1:5773:5784	5233389	4	True				
ANR	5233551	Identifier	NULL		5233389	0					
ANR	5233552	ReturnType	Starter *		5233389	1					
ANR	5233553	Identifier	StarterMgr :: findStarter		5233389	2					
ANR	5233554	ParameterList	"ClassAd * job_ad , ClassAd * mach_ad , bool & no_starter , int starter_num"		5233389	3					
ANR	5233555	Parameter	ClassAd * job_ad	162:25:4487:4501	5233389	0	True				
ANR	5233556	ParameterType	ClassAd *		5233389	0					
ANR	5233557	Identifier	job_ad		5233389	1					
ANR	5233558	Parameter	ClassAd * mach_ad	162:42:4504:4519	5233389	1	True				
ANR	5233559	ParameterType	ClassAd *		5233389	0					
ANR	5233560	Identifier	mach_ad		5233389	1					
ANR	5233561	Parameter	bool & no_starter	162:60:4522:4537	5233389	2	True				
ANR	5233562	ParameterType	bool &		5233389	0					
ANR	5233563	Identifier	no_starter		5233389	1					
ANR	5233564	Parameter	int starter_num	163:7:4547:4561	5233389	3	True				
ANR	5233565	ParameterType	int		5233389	0					
ANR	5233566	Identifier	starter_num		5233389	1					
ANR	5233567	CFGEntryNode	ENTRY		5233389		True				
ANR	5233568	CFGExitNode	EXIT		5233389		True				
ANR	5233569	Symbol	starter_num		5233389						
ANR	5233570	Symbol	tmp_starter -> is_dc		5233389						
ANR	5233571	Symbol	NULL		5233389						
ANR	5233572	Symbol	no_starter		5233389						
ANR	5233573	Symbol	false		5233389						
ANR	5233574	Symbol	ATTR_HAS_REMOTE_SYSCALLS		5233389						
ANR	5233575	Symbol	D_FULLDEBUG		5233389						
ANR	5233576	Symbol	tmp_starter -> provides		5233389						
ANR	5233577	Symbol	job_ad		5233389						
ANR	5233578	Symbol	tmp_starter -> path		5233389						
ANR	5233579	Symbol	tmp_starter -> satisfies		5233389						
ANR	5233580	Symbol	* tmp_starter		5233389						
ANR	5233581	Symbol	tmp_starter		5233389						
ANR	5233582	Symbol	mach_ad		5233389						
ANR	5233583	Symbol	new_starter		5233389						
ANR	5233584	Symbol	true		5233389						
ANR	5233585	Symbol	starters		5233389						
ANR	5233586	Symbol	starters . Next		5233389						
ANR	5233587	Function	StarterMgr :: makeStarter	219:0:5790:6929							
ANR	5233588	FunctionDef	StarterMgr :: makeStarter (const char * path)		5233587	0					
ANR	5233589	CompoundStatement		221:0:5843:6929	5233587	0					
ANR	5233590	IdentifierDeclStatement	Starter * new_starter ;	222:1:5846:5866	5233587	0	True				
ANR	5233591	IdentifierDecl	* new_starter		5233587	0					
ANR	5233592	IdentifierDeclType	Starter *		5233587	0					
ANR	5233593	Identifier	new_starter		5233587	1					
ANR	5233594	IdentifierDeclStatement	FILE * fp ;	223:1:5869:5877	5233587	1	True				
ANR	5233595	IdentifierDecl	* fp		5233587	0					
ANR	5233596	IdentifierDeclType	FILE *		5233587	0					
ANR	5233597	Identifier	fp		5233587	1					
ANR	5233598	Statement	char	224:1:5880:5883	5233587	2	True				
ANR	5233599	Statement	*	224:6:5885:5885	5233587	3	True				
ANR	5233600	Statement	args	224:7:5886:5889	5233587	4	True				
ANR	5233601	Statement	[	224:11:5890:5890	5233587	5	True				
ANR	5233602	Statement	]	224:12:5891:5891	5233587	6	True				
ANR	5233603	Statement	=	224:14:5893:5893	5233587	7	True				
ANR	5233604	CompoundStatement		4:16:51:51	5233587	8					
ANR	5233605	Statement	const_cast	224:18:5897:5906	5233587	0	True				
ANR	5233606	Statement	<	224:28:5907:5907	5233587	1	True				
ANR	5233607	Statement	char	224:29:5908:5911	5233587	2	True				
ANR	5233608	Statement	*	224:33:5912:5912	5233587	3	True				
ANR	5233609	Statement	>	224:34:5913:5913	5233587	4	True				
ANR	5233610	Statement	(	224:35:5914:5914	5233587	5	True				
ANR	5233611	Statement	path	224:36:5915:5918	5233587	6	True				
ANR	5233612	Statement	)	224:40:5919:5919	5233587	7	True				
ANR	5233613	Statement	","	224:41:5920:5920	5233587	8	True				
ANR	5233614	Statement	const_cast	225:6:5928:5937	5233587	9	True				
ANR	5233615	Statement	<	225:16:5938:5938	5233587	10	True				
ANR	5233616	Statement	char	225:17:5939:5942	5233587	11	True				
ANR	5233617	Statement	*	225:21:5943:5943	5233587	12	True				
ANR	5233618	Statement	>	225:22:5944:5944	5233587	13	True				
ANR	5233619	Statement	(	225:23:5945:5945	5233587	14	True				
ANR	5233620	Statement	"""-classad"""	225:24:5946:5955	5233587	15	True				
ANR	5233621	Statement	)	225:34:5956:5956	5233587	16	True				
ANR	5233622	Statement	","	225:35:5957:5957	5233587	17	True				
ANR	5233623	Statement	NULL	226:6:5965:5968	5233587	18	True				
ANR	5233624	ExpressionStatement		226:12:5971:5971	5233587	9	True				
ANR	5233625	IdentifierDeclStatement	char buf [ 1024 ] ;	227:1:5974:5988	5233587	10	True				
ANR	5233626	IdentifierDecl	buf [ 1024 ]		5233587	0					
ANR	5233627	IdentifierDeclType	char [ 1024 ]		5233587	0					
ANR	5233628	Identifier	buf		5233587	1					
ANR	5233629	PrimaryExpression	1024		5233587	2					
ANR	5233630	ExpressionStatement	"fp = my_popenv ( args , ""r"" , FALSE )"	231:1:6098:6132	5233587	11	True				
ANR	5233631	AssignmentExpression	"fp = my_popenv ( args , ""r"" , FALSE )"		5233587	0		=			
ANR	5233632	Identifier	fp		5233587	0					
ANR	5233633	CallExpression	"my_popenv ( args , ""r"" , FALSE )"		5233587	1					
ANR	5233634	Callee	my_popenv		5233587	0					
ANR	5233635	Identifier	my_popenv		5233587	0					
ANR	5233636	ArgumentList	args		5233587	1					
ANR	5233637	Argument	args		5233587	0					
ANR	5233638	Identifier	args		5233587	0					
ANR	5233639	Argument	"""r"""		5233587	1					
ANR	5233640	PrimaryExpression	"""r"""		5233587	0					
ANR	5233641	Argument	FALSE		5233587	2					
ANR	5233642	Identifier	FALSE		5233587	0					
ANR	5233643	IfStatement	if ( ! fp )		5233587	12					
ANR	5233644	Condition	! fp	233:5:6140:6143	5233587	0	True				
ANR	5233645	UnaryOperationExpression	! fp		5233587	0					
ANR	5233646	UnaryOperator	!		5233587	0					
ANR	5233647	Identifier	fp		5233587	1					
ANR	5233648	CompoundStatement		13:12:303:303	5233587	1					
ANR	5233649	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to execute %s, ignoring\\n"" , path )"	234:2:6151:6212	5233587	0	True				
ANR	5233650	CallExpression	"dprintf ( D_ALWAYS , ""Failed to execute %s, ignoring\\n"" , path )"		5233587	0					
ANR	5233651	Callee	dprintf		5233587	0					
ANR	5233652	Identifier	dprintf		5233587	0					
ANR	5233653	ArgumentList	D_ALWAYS		5233587	1					
ANR	5233654	Argument	D_ALWAYS		5233587	0					
ANR	5233655	Identifier	D_ALWAYS		5233587	0					
ANR	5233656	Argument	"""Failed to execute %s, ignoring\\n"""		5233587	1					
ANR	5233657	PrimaryExpression	"""Failed to execute %s, ignoring\\n"""		5233587	0					
ANR	5233658	Argument	path		5233587	2					
ANR	5233659	Identifier	path		5233587	0					
ANR	5233660	ReturnStatement	return NULL ;	235:2:6216:6227	5233587	1	True				
ANR	5233661	Identifier	NULL		5233587	0					
ANR	5233662	Statement	ClassAd	237:1:6233:6239	5233587	13	True				
ANR	5233663	Statement	*	237:8:6240:6240	5233587	14	True				
ANR	5233664	Statement	ad	237:10:6242:6243	5233587	15	True				
ANR	5233665	Statement	=	237:13:6245:6245	5233587	16	True				
ANR	5233666	Statement	new	237:15:6247:6249	5233587	17	True				
ANR	5233667	ExpressionStatement	ClassAd	237:19:6251:6258	5233587	18	True				
ANR	5233668	Identifier	ClassAd		5233587	0					
ANR	5233669	IdentifierDeclStatement	bool read_something = false ;	238:1:6261:6288	5233587	19	True				
ANR	5233670	IdentifierDecl	read_something = false		5233587	0					
ANR	5233671	IdentifierDeclType	bool		5233587	0					
ANR	5233672	Identifier	read_something		5233587	1					
ANR	5233673	AssignmentExpression	read_something = false		5233587	2		=			
ANR	5233674	Identifier	false		5233587	0					
ANR	5233675	Identifier	false		5233587	1					
ANR	5233676	WhileStatement	"while ( fgets ( buf , 1024 , fp ) )"		5233587	20					
ANR	5233677	Condition	"fgets ( buf , 1024 , fp )"	239:8:6298:6317	5233587	0	True				
ANR	5233678	CallExpression	"fgets ( buf , 1024 , fp )"		5233587	0					
ANR	5233679	Callee	fgets		5233587	0					
ANR	5233680	Identifier	fgets		5233587	0					
ANR	5233681	ArgumentList	buf		5233587	1					
ANR	5233682	Argument	buf		5233587	0					
ANR	5233683	Identifier	buf		5233587	0					
ANR	5233684	Argument	1024		5233587	1					
ANR	5233685	PrimaryExpression	1024		5233587	0					
ANR	5233686	Argument	fp		5233587	2					
ANR	5233687	Identifier	fp		5233587	0					
ANR	5233688	CompoundStatement		19:31:477:477	5233587	1					
ANR	5233689	ExpressionStatement	read_something = true	240:2:6325:6346	5233587	0	True				
ANR	5233690	AssignmentExpression	read_something = true		5233587	0		=			
ANR	5233691	Identifier	read_something		5233587	0					
ANR	5233692	Identifier	true		5233587	1					
ANR	5233693	IfStatement	if ( ! ad -> Insert ( buf ) )		5233587	1					
ANR	5233694	Condition	! ad -> Insert ( buf )	241:6:6354:6370	5233587	0	True				
ANR	5233695	UnaryOperationExpression	! ad -> Insert ( buf )		5233587	0					
ANR	5233696	UnaryOperator	!		5233587	0					
ANR	5233697	CallExpression	ad -> Insert ( buf )		5233587	1					
ANR	5233698	Callee	ad -> Insert		5233587	0					
ANR	5233699	PtrMemberAccess	ad -> Insert		5233587	0					
ANR	5233700	Identifier	ad		5233587	0					
ANR	5233701	Identifier	Insert		5233587	1					
ANR	5233702	ArgumentList	buf		5233587	1					
ANR	5233703	Argument	buf		5233587	0					
ANR	5233704	Identifier	buf		5233587	0					
ANR	5233705	CompoundStatement		21:26:530:530	5233587	1					
ANR	5233706	Statement	dprintf	242:3:6379:6385	5233587	0	True				
ANR	5233707	Statement	(	242:10:6386:6386	5233587	1	True				
ANR	5233708	Statement	D_ALWAYS	242:12:6388:6395	5233587	2	True				
ANR	5233709	Statement	","	242:20:6396:6396	5233587	3	True				
ANR	5233710	Statement	"""Failed to insert \\""%s\\"" into ClassAd, """	242:22:6398:6437	5233587	4	True				
ANR	5233711	Statement	"""ignoring invalid starter\\n"""	243:6:6445:6472	5233587	5	True				
ANR	5233712	Statement	","	243:34:6473:6473	5233587	6	True				
ANR	5233713	Statement	buf	243:36:6475:6477	5233587	7	True				
ANR	5233714	Statement	)	243:40:6479:6479	5233587	8	True				
ANR	5233715	ExpressionStatement		243:41:6480:6480	5233587	9	True				
ANR	5233716	Statement	delete	244:3:6485:6490	5233587	10	True				
ANR	5233717	ExpressionStatement	ad	244:9:6491:6497	5233587	11	True				
ANR	5233718	Identifier	ad		5233587	0					
ANR	5233719	ExpressionStatement	pclose ( fp )	245:3:6502:6514	5233587	12	True				
ANR	5233720	CallExpression	pclose ( fp )		5233587	0					
ANR	5233721	Callee	pclose		5233587	0					
ANR	5233722	Identifier	pclose		5233587	0					
ANR	5233723	ArgumentList	fp		5233587	1					
ANR	5233724	Argument	fp		5233587	0					
ANR	5233725	Identifier	fp		5233587	0					
ANR	5233726	ReturnStatement	return NULL ;	246:3:6519:6530	5233587	13	True				
ANR	5233727	Identifier	NULL		5233587	0					
ANR	5233728	ExpressionStatement	my_pclose ( fp )	249:1:6540:6555	5233587	21	True				
ANR	5233729	CallExpression	my_pclose ( fp )		5233587	0					
ANR	5233730	Callee	my_pclose		5233587	0					
ANR	5233731	Identifier	my_pclose		5233587	0					
ANR	5233732	ArgumentList	fp		5233587	1					
ANR	5233733	Argument	fp		5233587	0					
ANR	5233734	Identifier	fp		5233587	0					
ANR	5233735	IfStatement	if ( ! read_something )		5233587	22					
ANR	5233736	Condition	! read_something	250:5:6562:6577	5233587	0	True				
ANR	5233737	UnaryOperationExpression	! read_something		5233587	0					
ANR	5233738	UnaryOperator	!		5233587	0					
ANR	5233739	Identifier	read_something		5233587	1					
ANR	5233740	CompoundStatement		30:24:737:737	5233587	1					
ANR	5233741	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\""%s -classad\\"" did not produce any output, ignoring\\n"" , path )"	251:2:6585:6680	5233587	0	True				
ANR	5233742	CallExpression	"dprintf ( D_ALWAYS , ""\\""%s -classad\\"" did not produce any output, ignoring\\n"" , path )"		5233587	0					
ANR	5233743	Callee	dprintf		5233587	0					
ANR	5233744	Identifier	dprintf		5233587	0					
ANR	5233745	ArgumentList	D_ALWAYS		5233587	1					
ANR	5233746	Argument	D_ALWAYS		5233587	0					
ANR	5233747	Identifier	D_ALWAYS		5233587	0					
ANR	5233748	Argument	"""\\""%s -classad\\"" did not produce any output, ignoring\\n"""		5233587	1					
ANR	5233749	PrimaryExpression	"""\\""%s -classad\\"" did not produce any output, ignoring\\n"""		5233587	0					
ANR	5233750	Argument	path		5233587	2					
ANR	5233751	Identifier	path		5233587	0					
ANR	5233752	Statement	delete	254:2:6685:6690	5233587	1	True				
ANR	5233753	ExpressionStatement	ad	254:8:6691:6697	5233587	2	True				
ANR	5233754	Identifier	ad		5233587	0					
ANR	5233755	ReturnStatement	return NULL ;	255:2:6701:6712	5233587	3	True				
ANR	5233756	Identifier	NULL		5233587	0					
ANR	5233757	ExpressionStatement	new_starter = new Starter ( )	258:1:6719:6746	5233587	23	True				
ANR	5233758	AssignmentExpression	new_starter = new Starter ( )		5233587	0		=			
ANR	5233759	Identifier	new_starter		5233587	0					
ANR	5233760	UnaryExpression	new Starter ( )		5233587	1					
ANR	5233761	ExpressionStatement	new_starter -> setAd ( ad )	259:1:6749:6773	5233587	24	True				
ANR	5233762	CallExpression	new_starter -> setAd ( ad )		5233587	0					
ANR	5233763	Callee	new_starter -> setAd		5233587	0					
ANR	5233764	PtrMemberAccess	new_starter -> setAd		5233587	0					
ANR	5233765	Identifier	new_starter		5233587	0					
ANR	5233766	Identifier	setAd		5233587	1					
ANR	5233767	ArgumentList	ad		5233587	1					
ANR	5233768	Argument	ad		5233587	0					
ANR	5233769	Identifier	ad		5233587	0					
ANR	5233770	ExpressionStatement	new_starter -> setPath ( path )	260:1:6776:6804	5233587	25	True				
ANR	5233771	CallExpression	new_starter -> setPath ( path )		5233587	0					
ANR	5233772	Callee	new_starter -> setPath		5233587	0					
ANR	5233773	PtrMemberAccess	new_starter -> setPath		5233587	0					
ANR	5233774	Identifier	new_starter		5233587	0					
ANR	5233775	Identifier	setPath		5233587	1					
ANR	5233776	ArgumentList	path		5233587	1					
ANR	5233777	Argument	path		5233587	0					
ANR	5233778	Identifier	path		5233587	0					
ANR	5233779	IdentifierDeclStatement	int is_dc = 0 ;	261:1:6807:6820	5233587	26	True				
ANR	5233780	IdentifierDecl	is_dc = 0		5233587	0					
ANR	5233781	IdentifierDeclType	int		5233587	0					
ANR	5233782	Identifier	is_dc		5233587	1					
ANR	5233783	AssignmentExpression	is_dc = 0		5233587	2		=			
ANR	5233784	Identifier	is_dc		5233587	0					
ANR	5233785	PrimaryExpression	0		5233587	1					
ANR	5233786	ExpressionStatement	"ad -> LookupBool ( ATTR_IS_DAEMON_CORE , is_dc )"	262:1:6823:6867	5233587	27	True				
ANR	5233787	CallExpression	"ad -> LookupBool ( ATTR_IS_DAEMON_CORE , is_dc )"		5233587	0					
ANR	5233788	Callee	ad -> LookupBool		5233587	0					
ANR	5233789	PtrMemberAccess	ad -> LookupBool		5233587	0					
ANR	5233790	Identifier	ad		5233587	0					
ANR	5233791	Identifier	LookupBool		5233587	1					
ANR	5233792	ArgumentList	ATTR_IS_DAEMON_CORE		5233587	1					
ANR	5233793	Argument	ATTR_IS_DAEMON_CORE		5233587	0					
ANR	5233794	Identifier	ATTR_IS_DAEMON_CORE		5233587	0					
ANR	5233795	Argument	is_dc		5233587	1					
ANR	5233796	Identifier	is_dc		5233587	0					
ANR	5233797	ExpressionStatement	new_starter -> setIsDC ( ( bool ) is_dc )	263:1:6870:6905	5233587	28	True				
ANR	5233798	CallExpression	new_starter -> setIsDC ( ( bool ) is_dc )		5233587	0					
ANR	5233799	Callee	new_starter -> setIsDC		5233587	0					
ANR	5233800	PtrMemberAccess	new_starter -> setIsDC		5233587	0					
ANR	5233801	Identifier	new_starter		5233587	0					
ANR	5233802	Identifier	setIsDC		5233587	1					
ANR	5233803	ArgumentList	( bool ) is_dc		5233587	1					
ANR	5233804	Argument	( bool ) is_dc		5233587	0					
ANR	5233805	CastExpression	( bool ) is_dc		5233587	0					
ANR	5233806	CastTarget	bool		5233587	0					
ANR	5233807	Identifier	is_dc		5233587	1					
ANR	5233808	ReturnStatement	return new_starter ;	265:1:6909:6927	5233587	29	True				
ANR	5233809	Identifier	new_starter		5233587	0					
ANR	5233810	ReturnType	Starter *		5233587	1					
ANR	5233811	Identifier	StarterMgr :: makeStarter		5233587	2					
ANR	5233812	ParameterList	const char * path		5233587	3					
ANR	5233813	Parameter	const char * path	220:25:5824:5839	5233587	0	True				
ANR	5233814	ParameterType	const char *		5233587	0					
ANR	5233815	Identifier	path		5233587	1					
ANR	5233816	CFGEntryNode	ENTRY		5233587		True				
ANR	5233817	CFGExitNode	EXIT		5233587		True				
ANR	5233818	Symbol	read_something		5233587						
ANR	5233819	Symbol	NULL		5233587						
ANR	5233820	Symbol	ad		5233587						
ANR	5233821	Symbol	D_ALWAYS		5233587						
ANR	5233822	Symbol	false		5233587						
ANR	5233823	Symbol	ATTR_IS_DAEMON_CORE		5233587						
ANR	5233824	Symbol	is_dc		5233587						
ANR	5233825	Symbol	fp		5233587						
ANR	5233826	Symbol	ad -> Insert		5233587						
ANR	5233827	Symbol	* ad		5233587						
ANR	5233828	Symbol	fgets		5233587						
ANR	5233829	Symbol	args		5233587						
ANR	5233830	Symbol	path		5233587						
ANR	5233831	Symbol	buf		5233587						
ANR	5233832	Symbol	new_starter		5233587						
ANR	5233833	Symbol	true		5233587						
ANR	5233834	Symbol	FALSE		5233587						
ANR	5233835	Symbol	my_popenv		5233587						
