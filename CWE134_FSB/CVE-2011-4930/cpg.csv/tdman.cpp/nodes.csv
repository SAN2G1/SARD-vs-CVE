command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5347415	File	data/converged/CVE-2011-4930_htcondor/tdman.cpp								
ANR	5347416	Function	TransferDaemon :: TransferDaemon	32:0:1073:1451							
ANR	5347417	FunctionDef	"TransferDaemon :: TransferDaemon (MyString fquser , MyString id , TDMode status)"		5347416	0					
ANR	5347418	CompoundStatement		34:0:1195:1451	5347416	0					
ANR	5347419	ExpressionStatement	m_fquser = fquser	35:1:1198:1215	5347416	0	True				
ANR	5347420	AssignmentExpression	m_fquser = fquser		5347416	0		=			
ANR	5347421	Identifier	m_fquser		5347416	0					
ANR	5347422	Identifier	fquser		5347416	1					
ANR	5347423	ExpressionStatement	m_id = id	36:1:1218:1227	5347416	1	True				
ANR	5347424	AssignmentExpression	m_id = id		5347416	0		=			
ANR	5347425	Identifier	m_id		5347416	0					
ANR	5347426	Identifier	id		5347416	1					
ANR	5347427	ExpressionStatement	m_status = status	37:1:1230:1247	5347416	2	True				
ANR	5347428	AssignmentExpression	m_status = status		5347416	0		=			
ANR	5347429	Identifier	m_status		5347416	0					
ANR	5347430	Identifier	status		5347416	1					
ANR	5347431	ExpressionStatement	"m_sinful = """""	39:1:1251:1264	5347416	3	True				
ANR	5347432	AssignmentExpression	"m_sinful = """""		5347416	0		=			
ANR	5347433	Identifier	m_sinful		5347416	0					
ANR	5347434	PrimaryExpression	""""""		5347416	1					
ANR	5347435	ExpressionStatement	m_update_sock = NULL	40:1:1267:1287	5347416	4	True				
ANR	5347436	AssignmentExpression	m_update_sock = NULL		5347416	0		=			
ANR	5347437	Identifier	m_update_sock		5347416	0					
ANR	5347438	Identifier	NULL		5347416	1					
ANR	5347439	ExpressionStatement	m_treq_sock = NULL	41:1:1290:1308	5347416	5	True				
ANR	5347440	AssignmentExpression	m_treq_sock = NULL		5347416	0		=			
ANR	5347441	Identifier	m_treq_sock		5347416	0					
ANR	5347442	Identifier	NULL		5347416	1					
ANR	5347443	ExpressionStatement	"m_reg_func_desc = """""	43:1:1312:1332	5347416	6	True				
ANR	5347444	AssignmentExpression	"m_reg_func_desc = """""		5347416	0		=			
ANR	5347445	Identifier	m_reg_func_desc		5347416	0					
ANR	5347446	PrimaryExpression	""""""		5347416	1					
ANR	5347447	ExpressionStatement	m_reg_func = NULL	44:1:1335:1352	5347416	7	True				
ANR	5347448	AssignmentExpression	m_reg_func = NULL		5347416	0		=			
ANR	5347449	Identifier	m_reg_func		5347416	0					
ANR	5347450	Identifier	NULL		5347416	1					
ANR	5347451	ExpressionStatement	m_reg_func_this = NULL	45:1:1355:1377	5347416	8	True				
ANR	5347452	AssignmentExpression	m_reg_func_this = NULL		5347416	0		=			
ANR	5347453	Identifier	m_reg_func_this		5347416	0					
ANR	5347454	Identifier	NULL		5347416	1					
ANR	5347455	ExpressionStatement	"m_reap_func_desc = """""	47:1:1381:1402	5347416	9	True				
ANR	5347456	AssignmentExpression	"m_reap_func_desc = """""		5347416	0		=			
ANR	5347457	Identifier	m_reap_func_desc		5347416	0					
ANR	5347458	PrimaryExpression	""""""		5347416	1					
ANR	5347459	ExpressionStatement	m_reap_func = NULL	48:1:1405:1423	5347416	10	True				
ANR	5347460	AssignmentExpression	m_reap_func = NULL		5347416	0		=			
ANR	5347461	Identifier	m_reap_func		5347416	0					
ANR	5347462	Identifier	NULL		5347416	1					
ANR	5347463	ExpressionStatement	m_reap_func_this = NULL	49:1:1426:1449	5347416	11	True				
ANR	5347464	AssignmentExpression	m_reap_func_this = NULL		5347416	0		=			
ANR	5347465	Identifier	m_reap_func_this		5347416	0					
ANR	5347466	Identifier	NULL		5347416	1					
ANR	5347467	Identifier	TransferDaemon :: TransferDaemon		5347416	1					
ANR	5347468	ParameterList	"MyString fquser , MyString id , TDMode status"		5347416	2					
ANR	5347469	Parameter	MyString fquser	32:31:1104:1118	5347416	0	True				
ANR	5347470	ParameterType	MyString		5347416	0					
ANR	5347471	Identifier	fquser		5347416	1					
ANR	5347472	Parameter	MyString id	32:48:1121:1131	5347416	1	True				
ANR	5347473	ParameterType	MyString		5347416	0					
ANR	5347474	Identifier	id		5347416	1					
ANR	5347475	Parameter	TDMode status	32:61:1134:1146	5347416	2	True				
ANR	5347476	ParameterType	TDMode		5347416	0					
ANR	5347477	Identifier	status		5347416	1					
ANR	5347478	CFGEntryNode	ENTRY		5347416		True				
ANR	5347479	CFGExitNode	EXIT		5347416		True				
ANR	5347480	Symbol	NULL		5347416						
ANR	5347481	Symbol	m_treq_sock		5347416						
ANR	5347482	Symbol	m_fquser		5347416						
ANR	5347483	Symbol	fquser		5347416						
ANR	5347484	Symbol	m_reg_func_desc		5347416						
ANR	5347485	Symbol	m_update_sock		5347416						
ANR	5347486	Symbol	m_reap_func_desc		5347416						
ANR	5347487	Symbol	m_reg_func		5347416						
ANR	5347488	Symbol	m_reg_func_this		5347416						
ANR	5347489	Symbol	m_reap_func_this		5347416						
ANR	5347490	Symbol	m_reap_func		5347416						
ANR	5347491	Symbol	m_status		5347416						
ANR	5347492	Symbol	id		5347416						
ANR	5347493	Symbol	status		5347416						
ANR	5347494	Symbol	m_id		5347416						
ANR	5347495	Symbol	m_sinful		5347416						
ANR	5347496	Function	TransferDaemon :: ~TransferDaemon	52:0:1454:1503							
ANR	5347497	FunctionDef	TransferDaemon :: ~TransferDaemon ()		5347496	0					
ANR	5347498	CompoundStatement		53:0:1488:1503	5347496	0					
ANR	5347499	Identifier	TransferDaemon :: ~TransferDaemon		5347496	1					
ANR	5347500	ParameterList			5347496	2					
ANR	5347501	CFGEntryNode	ENTRY		5347496		True				
ANR	5347502	CFGExitNode	EXIT		5347496		True				
ANR	5347503	Function	TransferDaemon :: clear	57:0:1506:1629							
ANR	5347504	FunctionDef	TransferDaemon :: clear ()		5347503	0					
ANR	5347505	CompoundStatement		59:0:1539:1629	5347503	0					
ANR	5347506	ExpressionStatement	m_status = TD_PRE_INVOKED	60:1:1542:1567	5347503	0	True				
ANR	5347507	AssignmentExpression	m_status = TD_PRE_INVOKED		5347503	0		=			
ANR	5347508	Identifier	m_status		5347503	0					
ANR	5347509	Identifier	TD_PRE_INVOKED		5347503	1					
ANR	5347510	ExpressionStatement	"m_sinful = """""	61:1:1570:1583	5347503	1	True				
ANR	5347511	AssignmentExpression	"m_sinful = """""		5347503	0		=			
ANR	5347512	Identifier	m_sinful		5347503	0					
ANR	5347513	PrimaryExpression	""""""		5347503	1					
ANR	5347514	ExpressionStatement	m_update_sock = NULL	62:1:1586:1606	5347503	2	True				
ANR	5347515	AssignmentExpression	m_update_sock = NULL		5347503	0		=			
ANR	5347516	Identifier	m_update_sock		5347503	0					
ANR	5347517	Identifier	NULL		5347503	1					
ANR	5347518	ExpressionStatement	m_treq_sock = NULL	63:1:1609:1627	5347503	3	True				
ANR	5347519	AssignmentExpression	m_treq_sock = NULL		5347503	0		=			
ANR	5347520	Identifier	m_treq_sock		5347503	0					
ANR	5347521	Identifier	NULL		5347503	1					
ANR	5347522	ReturnType	void		5347503	1					
ANR	5347523	Identifier	TransferDaemon :: clear		5347503	2					
ANR	5347524	ParameterList			5347503	3					
ANR	5347525	CFGEntryNode	ENTRY		5347503		True				
ANR	5347526	CFGExitNode	EXIT		5347503		True				
ANR	5347527	Symbol	TD_PRE_INVOKED		5347503						
ANR	5347528	Symbol	NULL		5347503						
ANR	5347529	Symbol	m_treq_sock		5347503						
ANR	5347530	Symbol	m_status		5347503						
ANR	5347531	Symbol	m_sinful		5347503						
ANR	5347532	Symbol	m_update_sock		5347503						
ANR	5347533	Function	TransferDaemon :: set_fquser	66:0:1632:1703							
ANR	5347534	FunctionDef	TransferDaemon :: set_fquser (MyString fquser)		5347533	0					
ANR	5347535	CompoundStatement		68:0:1681:1703	5347533	0					
ANR	5347536	ExpressionStatement	m_fquser = fquser	69:1:1684:1701	5347533	0	True				
ANR	5347537	AssignmentExpression	m_fquser = fquser		5347533	0		=			
ANR	5347538	Identifier	m_fquser		5347533	0					
ANR	5347539	Identifier	fquser		5347533	1					
ANR	5347540	ReturnType	void		5347533	1					
ANR	5347541	Identifier	TransferDaemon :: set_fquser		5347533	2					
ANR	5347542	ParameterList	MyString fquser		5347533	3					
ANR	5347543	Parameter	MyString fquser	67:27:1664:1678	5347533	0	True				
ANR	5347544	ParameterType	MyString		5347533	0					
ANR	5347545	Identifier	fquser		5347533	1					
ANR	5347546	CFGEntryNode	ENTRY		5347533		True				
ANR	5347547	CFGExitNode	EXIT		5347533		True				
ANR	5347548	Symbol	m_fquser		5347533						
ANR	5347549	Symbol	fquser		5347533						
ANR	5347550	Function	TransferDaemon :: get_fquser	72:0:1706:1768							
ANR	5347551	FunctionDef	TransferDaemon :: get_fquser ()		5347550	0					
ANR	5347552	CompoundStatement		74:0:1748:1768	5347550	0					
ANR	5347553	ReturnStatement	return m_fquser ;	75:1:1751:1766	5347550	0	True				
ANR	5347554	Identifier	m_fquser		5347550	0					
ANR	5347555	ReturnType	MyString		5347550	1					
ANR	5347556	Identifier	TransferDaemon :: get_fquser		5347550	2					
ANR	5347557	ParameterList			5347550	3					
ANR	5347558	CFGEntryNode	ENTRY		5347550		True				
ANR	5347559	CFGExitNode	EXIT		5347550		True				
ANR	5347560	Symbol	m_fquser		5347550						
ANR	5347561	Function	TransferDaemon :: set_id	78:0:1771:1826							
ANR	5347562	FunctionDef	TransferDaemon :: set_id (MyString id)		5347561	0					
ANR	5347563	CompoundStatement		80:0:1812:1826	5347561	0					
ANR	5347564	ExpressionStatement	m_id = id	81:1:1815:1824	5347561	0	True				
ANR	5347565	AssignmentExpression	m_id = id		5347561	0		=			
ANR	5347566	Identifier	m_id		5347561	0					
ANR	5347567	Identifier	id		5347561	1					
ANR	5347568	ReturnType	void		5347561	1					
ANR	5347569	Identifier	TransferDaemon :: set_id		5347561	2					
ANR	5347570	ParameterList	MyString id		5347561	3					
ANR	5347571	Parameter	MyString id	79:23:1799:1809	5347561	0	True				
ANR	5347572	ParameterType	MyString		5347561	0					
ANR	5347573	Identifier	id		5347561	1					
ANR	5347574	CFGEntryNode	ENTRY		5347561		True				
ANR	5347575	CFGExitNode	EXIT		5347561		True				
ANR	5347576	Symbol	id		5347561						
ANR	5347577	Symbol	m_id		5347561						
ANR	5347578	Function	TransferDaemon :: get_id	84:0:1829:1883							
ANR	5347579	FunctionDef	TransferDaemon :: get_id ()		5347578	0					
ANR	5347580	CompoundStatement		86:0:1867:1883	5347578	0					
ANR	5347581	ReturnStatement	return m_id ;	87:1:1870:1881	5347578	0	True				
ANR	5347582	Identifier	m_id		5347578	0					
ANR	5347583	ReturnType	MyString		5347578	1					
ANR	5347584	Identifier	TransferDaemon :: get_id		5347578	2					
ANR	5347585	ParameterList			5347578	3					
ANR	5347586	CFGEntryNode	ENTRY		5347578		True				
ANR	5347587	CFGExitNode	EXIT		5347578		True				
ANR	5347588	Symbol	m_id		5347578						
ANR	5347589	Function	TransferDaemon :: set_status	90:0:1886:1949							
ANR	5347590	FunctionDef	TransferDaemon :: set_status (TDMode tds)		5347589	0					
ANR	5347591	CompoundStatement		92:0:1930:1949	5347589	0					
ANR	5347592	ExpressionStatement	m_status = tds	93:1:1933:1947	5347589	0	True				
ANR	5347593	AssignmentExpression	m_status = tds		5347589	0		=			
ANR	5347594	Identifier	m_status		5347589	0					
ANR	5347595	Identifier	tds		5347589	1					
ANR	5347596	ReturnType	void		5347589	1					
ANR	5347597	Identifier	TransferDaemon :: set_status		5347589	2					
ANR	5347598	ParameterList	TDMode tds		5347589	3					
ANR	5347599	Parameter	TDMode tds	91:27:1918:1927	5347589	0	True				
ANR	5347600	ParameterType	TDMode		5347589	0					
ANR	5347601	Identifier	tds		5347589	1					
ANR	5347602	CFGEntryNode	ENTRY		5347589		True				
ANR	5347603	CFGExitNode	EXIT		5347589		True				
ANR	5347604	Symbol	tds		5347589						
ANR	5347605	Symbol	m_status		5347589						
ANR	5347606	Function	TransferDaemon :: get_status	96:0:1952:2008							
ANR	5347607	FunctionDef	TransferDaemon :: get_status ()		5347606	0					
ANR	5347608	CompoundStatement		98:0:1988:2008	5347606	0					
ANR	5347609	ReturnStatement	return m_status ;	99:1:1991:2006	5347606	0	True				
ANR	5347610	Identifier	m_status		5347606	0					
ANR	5347611	ReturnType	TDMode		5347606	1					
ANR	5347612	Identifier	TransferDaemon :: get_status		5347606	2					
ANR	5347613	ParameterList			5347606	3					
ANR	5347614	CFGEntryNode	ENTRY		5347606		True				
ANR	5347615	CFGExitNode	EXIT		5347606		True				
ANR	5347616	Symbol	m_status		5347606						
ANR	5347617	Function	TransferDaemon :: set_schedd_sinful	102:0:2011:2096							
ANR	5347618	FunctionDef	TransferDaemon :: set_schedd_sinful (MyString sinful)		5347617	0					
ANR	5347619	CompoundStatement		104:0:2067:2096	5347617	0					
ANR	5347620	ExpressionStatement	m_schedd_sinful = sinful	105:1:2070:2094	5347617	0	True				
ANR	5347621	AssignmentExpression	m_schedd_sinful = sinful		5347617	0		=			
ANR	5347622	Identifier	m_schedd_sinful		5347617	0					
ANR	5347623	Identifier	sinful		5347617	1					
ANR	5347624	ReturnType	void		5347617	1					
ANR	5347625	Identifier	TransferDaemon :: set_schedd_sinful		5347617	2					
ANR	5347626	ParameterList	MyString sinful		5347617	3					
ANR	5347627	Parameter	MyString sinful	103:34:2050:2064	5347617	0	True				
ANR	5347628	ParameterType	MyString		5347617	0					
ANR	5347629	Identifier	sinful		5347617	1					
ANR	5347630	CFGEntryNode	ENTRY		5347617		True				
ANR	5347631	CFGExitNode	EXIT		5347617		True				
ANR	5347632	Symbol	m_schedd_sinful		5347617						
ANR	5347633	Symbol	sinful		5347617						
ANR	5347634	Function	TransferDaemon :: get_schedd_sinful	108:0:2099:2171							
ANR	5347635	FunctionDef	TransferDaemon :: get_schedd_sinful ()		5347634	0					
ANR	5347636	CompoundStatement		110:0:2144:2171	5347634	0					
ANR	5347637	ReturnStatement	return m_schedd_sinful ;	111:1:2147:2169	5347634	0	True				
ANR	5347638	Identifier	m_schedd_sinful		5347634	0					
ANR	5347639	ReturnType	MyString		5347634	1					
ANR	5347640	Identifier	TransferDaemon :: get_schedd_sinful		5347634	2					
ANR	5347641	ParameterList			5347634	3					
ANR	5347642	CFGEntryNode	ENTRY		5347634		True				
ANR	5347643	CFGExitNode	EXIT		5347634		True				
ANR	5347644	Symbol	m_schedd_sinful		5347634						
ANR	5347645	Function	TransferDaemon :: set_sinful	114:0:2174:2245							
ANR	5347646	FunctionDef	TransferDaemon :: set_sinful (MyString sinful)		5347645	0					
ANR	5347647	CompoundStatement		116:0:2223:2245	5347645	0					
ANR	5347648	ExpressionStatement	m_sinful = sinful	117:1:2226:2243	5347645	0	True				
ANR	5347649	AssignmentExpression	m_sinful = sinful		5347645	0		=			
ANR	5347650	Identifier	m_sinful		5347645	0					
ANR	5347651	Identifier	sinful		5347645	1					
ANR	5347652	ReturnType	void		5347645	1					
ANR	5347653	Identifier	TransferDaemon :: set_sinful		5347645	2					
ANR	5347654	ParameterList	MyString sinful		5347645	3					
ANR	5347655	Parameter	MyString sinful	115:27:2206:2220	5347645	0	True				
ANR	5347656	ParameterType	MyString		5347645	0					
ANR	5347657	Identifier	sinful		5347645	1					
ANR	5347658	CFGEntryNode	ENTRY		5347645		True				
ANR	5347659	CFGExitNode	EXIT		5347645		True				
ANR	5347660	Symbol	sinful		5347645						
ANR	5347661	Symbol	m_sinful		5347645						
ANR	5347662	Function	TransferDaemon :: set_sinful	120:0:2248:2345							
ANR	5347663	FunctionDef	TransferDaemon :: set_sinful (char * sinful)		5347662	0					
ANR	5347664	CompoundStatement		122:0:2294:2345	5347662	0					
ANR	5347665	IdentifierDeclStatement	MyString sin ;	123:1:2297:2309	5347662	0	True				
ANR	5347666	IdentifierDecl	sin		5347662	0					
ANR	5347667	IdentifierDeclType	MyString		5347662	0					
ANR	5347668	Identifier	sin		5347662	1					
ANR	5347669	ExpressionStatement	sin = sinful	124:1:2312:2324	5347662	1	True				
ANR	5347670	AssignmentExpression	sin = sinful		5347662	0		=			
ANR	5347671	Identifier	sin		5347662	0					
ANR	5347672	Identifier	sinful		5347662	1					
ANR	5347673	ExpressionStatement	set_sinful ( sin )	126:1:2328:2343	5347662	2	True				
ANR	5347674	CallExpression	set_sinful ( sin )		5347662	0					
ANR	5347675	Callee	set_sinful		5347662	0					
ANR	5347676	Identifier	set_sinful		5347662	0					
ANR	5347677	ArgumentList	sin		5347662	1					
ANR	5347678	Argument	sin		5347662	0					
ANR	5347679	Identifier	sin		5347662	0					
ANR	5347680	ReturnType	void		5347662	1					
ANR	5347681	Identifier	TransferDaemon :: set_sinful		5347662	2					
ANR	5347682	ParameterList	char * sinful		5347662	3					
ANR	5347683	Parameter	char * sinful	121:27:2280:2291	5347662	0	True				
ANR	5347684	ParameterType	char *		5347662	0					
ANR	5347685	Identifier	sinful		5347662	1					
ANR	5347686	CFGEntryNode	ENTRY		5347662		True				
ANR	5347687	CFGExitNode	EXIT		5347662		True				
ANR	5347688	Symbol	sin		5347662						
ANR	5347689	Symbol	sinful		5347662						
ANR	5347690	Function	TransferDaemon :: get_sinful	129:0:2348:2406							
ANR	5347691	FunctionDef	TransferDaemon :: get_sinful ()		5347690	0					
ANR	5347692	CompoundStatement		131:0:2386:2406	5347690	0					
ANR	5347693	ReturnStatement	return m_sinful ;	132:1:2389:2404	5347690	0	True				
ANR	5347694	Identifier	m_sinful		5347690	0					
ANR	5347695	ReturnType	MyString		5347690	1					
ANR	5347696	Identifier	TransferDaemon :: get_sinful		5347690	2					
ANR	5347697	ParameterList			5347690	3					
ANR	5347698	CFGEntryNode	ENTRY		5347690		True				
ANR	5347699	CFGExitNode	EXIT		5347690		True				
ANR	5347700	Symbol	m_sinful		5347690						
ANR	5347701	Function	TransferDaemon :: set_update_sock	135:0:2409:2501							
ANR	5347702	FunctionDef	TransferDaemon :: set_update_sock (ReliSock * update_sock)		5347701	0					
ANR	5347703	CompoundStatement		137:0:2469:2501	5347701	0					
ANR	5347704	ExpressionStatement	m_update_sock = update_sock	138:1:2472:2499	5347701	0	True				
ANR	5347705	AssignmentExpression	m_update_sock = update_sock		5347701	0		=			
ANR	5347706	Identifier	m_update_sock		5347701	0					
ANR	5347707	Identifier	update_sock		5347701	1					
ANR	5347708	ReturnType	void		5347701	1					
ANR	5347709	Identifier	TransferDaemon :: set_update_sock		5347701	2					
ANR	5347710	ParameterList	ReliSock * update_sock		5347701	3					
ANR	5347711	Parameter	ReliSock * update_sock	136:32:2446:2466	5347701	0	True				
ANR	5347712	ParameterType	ReliSock *		5347701	0					
ANR	5347713	Identifier	update_sock		5347701	1					
ANR	5347714	CFGEntryNode	ENTRY		5347701		True				
ANR	5347715	CFGExitNode	EXIT		5347701		True				
ANR	5347716	Symbol	update_sock		5347701						
ANR	5347717	Symbol	m_update_sock		5347701						
ANR	5347718	Function	TransferDaemon :: get_update_sock	141:0:2504:2577							
ANR	5347719	FunctionDef	TransferDaemon :: get_update_sock ()		5347718	0					
ANR	5347720	CompoundStatement		143:0:2552:2577	5347718	0					
ANR	5347721	ReturnStatement	return m_update_sock ;	144:1:2555:2575	5347718	0	True				
ANR	5347722	Identifier	m_update_sock		5347718	0					
ANR	5347723	ReturnType	ReliSock *		5347718	1					
ANR	5347724	Identifier	TransferDaemon :: get_update_sock		5347718	2					
ANR	5347725	ParameterList			5347718	3					
ANR	5347726	CFGEntryNode	ENTRY		5347718		True				
ANR	5347727	CFGExitNode	EXIT		5347718		True				
ANR	5347728	Symbol	m_update_sock		5347718						
ANR	5347729	Function	TransferDaemon :: set_treq_sock	147:0:2580:2664							
ANR	5347730	FunctionDef	TransferDaemon :: set_treq_sock (ReliSock * treq_sock)		5347729	0					
ANR	5347731	CompoundStatement		149:0:2636:2664	5347729	0					
ANR	5347732	ExpressionStatement	m_treq_sock = treq_sock	150:1:2639:2662	5347729	0	True				
ANR	5347733	AssignmentExpression	m_treq_sock = treq_sock		5347729	0		=			
ANR	5347734	Identifier	m_treq_sock		5347729	0					
ANR	5347735	Identifier	treq_sock		5347729	1					
ANR	5347736	ReturnType	void		5347729	1					
ANR	5347737	Identifier	TransferDaemon :: set_treq_sock		5347729	2					
ANR	5347738	ParameterList	ReliSock * treq_sock		5347729	3					
ANR	5347739	Parameter	ReliSock * treq_sock	148:30:2615:2633	5347729	0	True				
ANR	5347740	ParameterType	ReliSock *		5347729	0					
ANR	5347741	Identifier	treq_sock		5347729	1					
ANR	5347742	CFGEntryNode	ENTRY		5347729		True				
ANR	5347743	CFGExitNode	EXIT		5347729		True				
ANR	5347744	Symbol	m_treq_sock		5347729						
ANR	5347745	Symbol	treq_sock		5347729						
ANR	5347746	Function	TransferDaemon :: get_treq_sock	153:0:2667:2736							
ANR	5347747	FunctionDef	TransferDaemon :: get_treq_sock ()		5347746	0					
ANR	5347748	CompoundStatement		155:0:2713:2736	5347746	0					
ANR	5347749	ReturnStatement	return m_treq_sock ;	156:1:2716:2734	5347746	0	True				
ANR	5347750	Identifier	m_treq_sock		5347746	0					
ANR	5347751	ReturnType	ReliSock *		5347746	1					
ANR	5347752	Identifier	TransferDaemon :: get_treq_sock		5347746	2					
ANR	5347753	ParameterList			5347746	3					
ANR	5347754	CFGEntryNode	ENTRY		5347746		True				
ANR	5347755	CFGExitNode	EXIT		5347746		True				
ANR	5347756	Symbol	m_treq_sock		5347746						
ANR	5347757	Function	TransferDaemon :: add_transfer_request	159:0:2739:2836							
ANR	5347758	FunctionDef	TransferDaemon :: add_transfer_request (TransferRequest * treq)		5347757	0					
ANR	5347759	CompoundStatement		161:0:2804:2836	5347757	0					
ANR	5347760	ReturnStatement	return m_treqs . Append ( treq ) ;	162:1:2807:2834	5347757	0	True				
ANR	5347761	CallExpression	m_treqs . Append ( treq )		5347757	0					
ANR	5347762	Callee	m_treqs . Append		5347757	0					
ANR	5347763	MemberAccess	m_treqs . Append		5347757	0					
ANR	5347764	Identifier	m_treqs		5347757	0					
ANR	5347765	Identifier	Append		5347757	1					
ANR	5347766	ArgumentList	treq		5347757	1					
ANR	5347767	Argument	treq		5347757	0					
ANR	5347768	Identifier	treq		5347757	0					
ANR	5347769	ReturnType	bool		5347757	1					
ANR	5347770	Identifier	TransferDaemon :: add_transfer_request		5347757	2					
ANR	5347771	ParameterList	TransferRequest * treq		5347757	3					
ANR	5347772	Parameter	TransferRequest * treq	160:37:2781:2801	5347757	0	True				
ANR	5347773	ParameterType	TransferRequest *		5347757	0					
ANR	5347774	Identifier	treq		5347757	1					
ANR	5347775	CFGEntryNode	ENTRY		5347757		True				
ANR	5347776	CFGExitNode	EXIT		5347757		True				
ANR	5347777	Symbol	m_treqs . Append		5347757						
ANR	5347778	Symbol	treq		5347757						
ANR	5347779	Symbol	m_treqs		5347757						
ANR	5347780	Function	TransferDaemon :: push_transfer_requests	165:0:2839:9616							
ANR	5347781	FunctionDef	TransferDaemon :: push_transfer_requests ()		5347780	0					
ANR	5347782	CompoundStatement		167:0:2889:9616	5347780	0					
ANR	5347783	IdentifierDeclStatement	TransferRequest * treq = NULL ;	168:1:2892:2920	5347780	0	True				
ANR	5347784	IdentifierDecl	* treq = NULL		5347780	0					
ANR	5347785	IdentifierDeclType	TransferRequest *		5347780	0					
ANR	5347786	Identifier	treq		5347780	1					
ANR	5347787	AssignmentExpression	* treq = NULL		5347780	2		=			
ANR	5347788	Identifier	NULL		5347780	0					
ANR	5347789	Identifier	NULL		5347780	1					
ANR	5347790	IdentifierDeclStatement	TreqAction ret ;	169:1:2923:2937	5347780	1	True				
ANR	5347791	IdentifierDecl	ret		5347780	0					
ANR	5347792	IdentifierDeclType	TreqAction		5347780	0					
ANR	5347793	Identifier	ret		5347780	1					
ANR	5347794	IdentifierDeclStatement	MyString capability ;	170:1:2940:2959	5347780	2	True				
ANR	5347795	IdentifierDecl	capability		5347780	0					
ANR	5347796	IdentifierDeclType	MyString		5347780	0					
ANR	5347797	Identifier	capability		5347780	1					
ANR	5347798	IdentifierDeclStatement	MyString rej_reason ;	171:1:2962:2981	5347780	3	True				
ANR	5347799	IdentifierDecl	rej_reason		5347780	0					
ANR	5347800	IdentifierDeclType	MyString		5347780	0					
ANR	5347801	Identifier	rej_reason		5347780	1					
ANR	5347802	IdentifierDeclStatement	"char encap [ ] = ""ENCAPSULATION_METHOD_OLD_CLASSADS\\n"" ;"	172:1:2984:3036	5347780	4	True				
ANR	5347803	IdentifierDecl	"encap [ ] = ""ENCAPSULATION_METHOD_OLD_CLASSADS\\n"""		5347780	0					
ANR	5347804	IdentifierDeclType	char [ ]		5347780	0					
ANR	5347805	Identifier	encap		5347780	1					
ANR	5347806	AssignmentExpression	"encap [ ] = ""ENCAPSULATION_METHOD_OLD_CLASSADS\\n"""		5347780	2		=			
ANR	5347807	Identifier	encap		5347780	0					
ANR	5347808	PrimaryExpression	"""ENCAPSULATION_METHOD_OLD_CLASSADS\\n"""		5347780	1					
ANR	5347809	IdentifierDeclStatement	ClassAd respad ;	173:1:3039:3053	5347780	5	True				
ANR	5347810	IdentifierDecl	respad		5347780	0					
ANR	5347811	IdentifierDeclType	ClassAd		5347780	0					
ANR	5347812	Identifier	respad		5347780	1					
ANR	5347813	IdentifierDeclStatement	int invalid ;	174:1:3056:3067	5347780	6	True				
ANR	5347814	IdentifierDecl	invalid		5347780	0					
ANR	5347815	IdentifierDeclType	int		5347780	0					
ANR	5347816	Identifier	invalid		5347780	1					
ANR	5347817	ExpressionStatement	"dprintf ( D_ALWAYS , ""Entering TransferDaemon::push_transfer_requests()\\n"" )"	176:1:3071:3146	5347780	7	True				
ANR	5347818	CallExpression	"dprintf ( D_ALWAYS , ""Entering TransferDaemon::push_transfer_requests()\\n"" )"		5347780	0					
ANR	5347819	Callee	dprintf		5347780	0					
ANR	5347820	Identifier	dprintf		5347780	0					
ANR	5347821	ArgumentList	D_ALWAYS		5347780	1					
ANR	5347822	Argument	D_ALWAYS		5347780	0					
ANR	5347823	Identifier	D_ALWAYS		5347780	0					
ANR	5347824	Argument	"""Entering TransferDaemon::push_transfer_requests()\\n"""		5347780	1					
ANR	5347825	PrimaryExpression	"""Entering TransferDaemon::push_transfer_requests()\\n"""		5347780	0					
ANR	5347826	IfStatement	if ( m_treq_sock == NULL )		5347780	8					
ANR	5347827	Condition	m_treq_sock == NULL	179:5:3154:3172	5347780	0	True				
ANR	5347828	EqualityExpression	m_treq_sock == NULL		5347780	0		==			
ANR	5347829	Identifier	m_treq_sock		5347780	0					
ANR	5347830	Identifier	NULL		5347780	1					
ANR	5347831	CompoundStatement		13:26:285:285	5347780	1					
ANR	5347832	Statement	EXCEPT	180:2:3179:3184	5347780	0	True				
ANR	5347833	Statement	(	180:8:3185:3185	5347780	1	True				
ANR	5347834	Statement	"""TransferDaemon::push_transfer_requests(): TD object was not """	180:9:3186:3247	5347780	2	True				
ANR	5347835	Statement	"""up to have a real daemon backend prior to pushing requests"""	181:4:3253:3312	5347780	3	True				
ANR	5347836	Statement	)	181:64:3313:3313	5347780	4	True				
ANR	5347837	ExpressionStatement		181:65:3314:3314	5347780	5	True				
ANR	5347838	ExpressionStatement	m_treqs . Rewind ( )	185:1:3363:3379	5347780	9	True				
ANR	5347839	CallExpression	m_treqs . Rewind ( )		5347780	0					
ANR	5347840	Callee	m_treqs . Rewind		5347780	0					
ANR	5347841	MemberAccess	m_treqs . Rewind		5347780	0					
ANR	5347842	Identifier	m_treqs		5347780	0					
ANR	5347843	Identifier	Rewind		5347780	1					
ANR	5347844	ArgumentList			5347780	1					
ANR	5347845	WhileStatement	while ( m_treqs . Next ( treq ) )		5347780	10					
ANR	5347846	Condition	m_treqs . Next ( treq )	186:7:3388:3405	5347780	0	True				
ANR	5347847	CallExpression	m_treqs . Next ( treq )		5347780	0					
ANR	5347848	Callee	m_treqs . Next		5347780	0					
ANR	5347849	MemberAccess	m_treqs . Next		5347780	0					
ANR	5347850	Identifier	m_treqs		5347780	0					
ANR	5347851	Identifier	Next		5347780	1					
ANR	5347852	ArgumentList	treq		5347780	1					
ANR	5347853	Argument	treq		5347780	0					
ANR	5347854	Identifier	treq		5347780	0					
ANR	5347855	CompoundStatement		21:1:519:519	5347780	1					
ANR	5347856	ExpressionStatement	"ret = treq -> call_pre_push_callback ( treq , this )"	196:2:3775:3821	5347780	0	True				
ANR	5347857	AssignmentExpression	"ret = treq -> call_pre_push_callback ( treq , this )"		5347780	0		=			
ANR	5347858	Identifier	ret		5347780	0					
ANR	5347859	CallExpression	"treq -> call_pre_push_callback ( treq , this )"		5347780	1					
ANR	5347860	Callee	treq -> call_pre_push_callback		5347780	0					
ANR	5347861	PtrMemberAccess	treq -> call_pre_push_callback		5347780	0					
ANR	5347862	Identifier	treq		5347780	0					
ANR	5347863	Identifier	call_pre_push_callback		5347780	1					
ANR	5347864	ArgumentList	treq		5347780	1					
ANR	5347865	Argument	treq		5347780	0					
ANR	5347866	Identifier	treq		5347780	0					
ANR	5347867	Argument	this		5347780	1					
ANR	5347868	Identifier	this		5347780	0					
ANR	5347869	SwitchStatement	switch ( ret )		5347780	1					
ANR	5347870	Condition	ret	198:9:3833:3835	5347780	0	True				
ANR	5347871	Identifier	ret		5347780	0					
ANR	5347872	CompoundStatement		32:14:948:948	5347780	1					
ANR	5347873	Label	case TREQ_ACTION_CONTINUE :	199:3:3843:3868	5347780	0	True				
ANR	5347874	Identifier	TREQ_ACTION_CONTINUE		5347780	0					
ANR	5347875	BreakStatement	break ;	202:4:3995:4000	5347780	1	True				
ANR	5347876	Label	case TREQ_ACTION_FORGET :	204:3:4006:4029	5347780	2	True				
ANR	5347877	Identifier	TREQ_ACTION_FORGET		5347780	0					
ANR	5347878	ExpressionStatement	m_treqs . DeleteCurrent ( )	210:4:4291:4314	5347780	3	True				
ANR	5347879	CallExpression	m_treqs . DeleteCurrent ( )		5347780	0					
ANR	5347880	Callee	m_treqs . DeleteCurrent		5347780	0					
ANR	5347881	MemberAccess	m_treqs . DeleteCurrent		5347780	0					
ANR	5347882	Identifier	m_treqs		5347780	0					
ANR	5347883	Identifier	DeleteCurrent		5347780	1					
ANR	5347884	ArgumentList			5347780	1					
ANR	5347885	ContinueStatement	continue ;	214:4:4420:4428	5347780	4	True				
ANR	5347886	BreakStatement	break ;	216:4:4435:4440	5347780	5	True				
ANR	5347887	Label	case TREQ_ACTION_TERMINATE :	218:3:4446:4472	5347780	6	True				
ANR	5347888	Identifier	TREQ_ACTION_TERMINATE		5347780	0					
ANR	5347889	ExpressionStatement	m_treqs . DeleteCurrent ( )	221:4:4577:4600	5347780	7	True				
ANR	5347890	CallExpression	m_treqs . DeleteCurrent ( )		5347780	0					
ANR	5347891	Callee	m_treqs . DeleteCurrent		5347780	0					
ANR	5347892	MemberAccess	m_treqs . DeleteCurrent		5347780	0					
ANR	5347893	Identifier	m_treqs		5347780	0					
ANR	5347894	Identifier	DeleteCurrent		5347780	1					
ANR	5347895	ArgumentList			5347780	1					
ANR	5347896	Statement	delete	223:4:4607:4612	5347780	8	True				
ANR	5347897	ExpressionStatement	treq	223:11:4614:4618	5347780	9	True				
ANR	5347898	Identifier	treq		5347780	0					
ANR	5347899	ContinueStatement	continue ;	227:4:4724:4732	5347780	10	True				
ANR	5347900	BreakStatement	break ;	229:4:4739:4744	5347780	11	True				
ANR	5347901	Label	default :	231:3:4750:4757	5347780	12	True				
ANR	5347902	Identifier	default		5347780	0					
ANR	5347903	Statement	EXCEPT	232:4:4763:4768	5347780	13	True				
ANR	5347904	Statement	(	232:10:4769:4769	5347780	14	True				
ANR	5347905	Statement	"""TransferDaemon::push_transfer_requests(): Programmer """	232:11:4770:4824	5347780	15	True				
ANR	5347906	Statement	"""Error. Unknown pre TreqAction\\n"""	233:5:4831:4863	5347780	16	True				
ANR	5347907	Statement	)	233:38:4864:4864	5347780	17	True				
ANR	5347908	ExpressionStatement		233:39:4865:4865	5347780	18	True				
ANR	5347909	BreakStatement	break ;	234:4:4871:4876	5347780	19	True				
ANR	5347910	ExpressionStatement	m_treq_sock -> encode ( )	242:2:5099:5120	5347780	2	True				
ANR	5347911	CallExpression	m_treq_sock -> encode ( )		5347780	0					
ANR	5347912	Callee	m_treq_sock -> encode		5347780	0					
ANR	5347913	PtrMemberAccess	m_treq_sock -> encode		5347780	0					
ANR	5347914	Identifier	m_treq_sock		5347780	0					
ANR	5347915	Identifier	encode		5347780	1					
ANR	5347916	ArgumentList			5347780	1					
ANR	5347917	ExpressionStatement	m_treq_sock -> code ( ( unsigned char * ) encap )	243:2:5124:5165	5347780	3	True				
ANR	5347918	CallExpression	m_treq_sock -> code ( ( unsigned char * ) encap )		5347780	0					
ANR	5347919	Callee	m_treq_sock -> code		5347780	0					
ANR	5347920	PtrMemberAccess	m_treq_sock -> code		5347780	0					
ANR	5347921	Identifier	m_treq_sock		5347780	0					
ANR	5347922	Identifier	code		5347780	1					
ANR	5347923	ArgumentList	( unsigned char * ) encap		5347780	1					
ANR	5347924	Argument	( unsigned char * ) encap		5347780	0					
ANR	5347925	CastExpression	( unsigned char * ) encap		5347780	0					
ANR	5347926	CastTarget	unsigned char *		5347780	0					
ANR	5347927	Identifier	encap		5347780	1					
ANR	5347928	ExpressionStatement	m_treq_sock -> end_of_message ( )	244:2:5169:5198	5347780	4	True				
ANR	5347929	CallExpression	m_treq_sock -> end_of_message ( )		5347780	0					
ANR	5347930	Callee	m_treq_sock -> end_of_message		5347780	0					
ANR	5347931	PtrMemberAccess	m_treq_sock -> end_of_message		5347780	0					
ANR	5347932	Identifier	m_treq_sock		5347780	0					
ANR	5347933	Identifier	end_of_message		5347780	1					
ANR	5347934	ArgumentList			5347780	1					
ANR	5347935	ExpressionStatement	treq -> put ( m_treq_sock )	249:2:5365:5387	5347780	5	True				
ANR	5347936	CallExpression	treq -> put ( m_treq_sock )		5347780	0					
ANR	5347937	Callee	treq -> put		5347780	0					
ANR	5347938	PtrMemberAccess	treq -> put		5347780	0					
ANR	5347939	Identifier	treq		5347780	0					
ANR	5347940	Identifier	put		5347780	1					
ANR	5347941	ArgumentList	m_treq_sock		5347780	1					
ANR	5347942	Argument	m_treq_sock		5347780	0					
ANR	5347943	Identifier	m_treq_sock		5347780	0					
ANR	5347944	ExpressionStatement	m_treq_sock -> end_of_message ( )	250:2:5391:5420	5347780	6	True				
ANR	5347945	CallExpression	m_treq_sock -> end_of_message ( )		5347780	0					
ANR	5347946	Callee	m_treq_sock -> end_of_message		5347780	0					
ANR	5347947	PtrMemberAccess	m_treq_sock -> end_of_message		5347780	0					
ANR	5347948	Identifier	m_treq_sock		5347780	0					
ANR	5347949	Identifier	end_of_message		5347780	1					
ANR	5347950	ArgumentList			5347780	1					
ANR	5347951	ExpressionStatement	m_treq_sock -> decode ( )	257:2:5629:5650	5347780	7	True				
ANR	5347952	CallExpression	m_treq_sock -> decode ( )		5347780	0					
ANR	5347953	Callee	m_treq_sock -> decode		5347780	0					
ANR	5347954	PtrMemberAccess	m_treq_sock -> decode		5347780	0					
ANR	5347955	Identifier	m_treq_sock		5347780	0					
ANR	5347956	Identifier	decode		5347780	1					
ANR	5347957	ArgumentList			5347780	1					
ANR	5347958	ExpressionStatement	respad . initFromStream ( * m_treq_sock )	279:2:6380:6415	5347780	8	True				
ANR	5347959	CallExpression	respad . initFromStream ( * m_treq_sock )		5347780	0					
ANR	5347960	Callee	respad . initFromStream		5347780	0					
ANR	5347961	MemberAccess	respad . initFromStream		5347780	0					
ANR	5347962	Identifier	respad		5347780	0					
ANR	5347963	Identifier	initFromStream		5347780	1					
ANR	5347964	ArgumentList	* m_treq_sock		5347780	1					
ANR	5347965	Argument	* m_treq_sock		5347780	0					
ANR	5347966	UnaryOperationExpression	* m_treq_sock		5347780	0					
ANR	5347967	UnaryOperator	*		5347780	0					
ANR	5347968	Identifier	m_treq_sock		5347780	1					
ANR	5347969	ExpressionStatement	m_treq_sock -> end_of_message ( )	280:2:6419:6448	5347780	9	True				
ANR	5347970	CallExpression	m_treq_sock -> end_of_message ( )		5347780	0					
ANR	5347971	Callee	m_treq_sock -> end_of_message		5347780	0					
ANR	5347972	PtrMemberAccess	m_treq_sock -> end_of_message		5347780	0					
ANR	5347973	Identifier	m_treq_sock		5347780	0					
ANR	5347974	Identifier	end_of_message		5347780	1					
ANR	5347975	ArgumentList			5347780	1					
ANR	5347976	ExpressionStatement	"respad . LookupInteger ( ATTR_TREQ_INVALID_REQUEST , invalid )"	286:2:6609:6665	5347780	10	True				
ANR	5347977	CallExpression	"respad . LookupInteger ( ATTR_TREQ_INVALID_REQUEST , invalid )"		5347780	0					
ANR	5347978	Callee	respad . LookupInteger		5347780	0					
ANR	5347979	MemberAccess	respad . LookupInteger		5347780	0					
ANR	5347980	Identifier	respad		5347780	0					
ANR	5347981	Identifier	LookupInteger		5347780	1					
ANR	5347982	ArgumentList	ATTR_TREQ_INVALID_REQUEST		5347780	1					
ANR	5347983	Argument	ATTR_TREQ_INVALID_REQUEST		5347780	0					
ANR	5347984	Identifier	ATTR_TREQ_INVALID_REQUEST		5347780	0					
ANR	5347985	Argument	invalid		5347780	1					
ANR	5347986	Identifier	invalid		5347780	0					
ANR	5347987	IfStatement	if ( invalid == FALSE )		5347780	11					
ANR	5347988	Condition	invalid == FALSE	287:6:6673:6688	5347780	0	True				
ANR	5347989	EqualityExpression	invalid == FALSE		5347780	0		==			
ANR	5347990	Identifier	invalid		5347780	0					
ANR	5347991	Identifier	FALSE		5347780	1					
ANR	5347992	CompoundStatement		121:24:3801:3801	5347780	1					
ANR	5347993	ExpressionStatement	"dprintf ( D_ALWAYS , ""Transferd said request was valid.\\n"" )"	288:3:6696:6752	5347780	0	True				
ANR	5347994	CallExpression	"dprintf ( D_ALWAYS , ""Transferd said request was valid.\\n"" )"		5347780	0					
ANR	5347995	Callee	dprintf		5347780	0					
ANR	5347996	Identifier	dprintf		5347780	0					
ANR	5347997	ArgumentList	D_ALWAYS		5347780	1					
ANR	5347998	Argument	D_ALWAYS		5347780	0					
ANR	5347999	Identifier	D_ALWAYS		5347780	0					
ANR	5348000	Argument	"""Transferd said request was valid.\\n"""		5347780	1					
ANR	5348001	PrimaryExpression	"""Transferd said request was valid.\\n"""		5347780	0					
ANR	5348002	ExpressionStatement	"respad . LookupString ( ATTR_TREQ_CAPABILITY , capability )"	290:3:6758:6811	5347780	1	True				
ANR	5348003	CallExpression	"respad . LookupString ( ATTR_TREQ_CAPABILITY , capability )"		5347780	0					
ANR	5348004	Callee	respad . LookupString		5347780	0					
ANR	5348005	MemberAccess	respad . LookupString		5347780	0					
ANR	5348006	Identifier	respad		5347780	0					
ANR	5348007	Identifier	LookupString		5347780	1					
ANR	5348008	ArgumentList	ATTR_TREQ_CAPABILITY		5347780	1					
ANR	5348009	Argument	ATTR_TREQ_CAPABILITY		5347780	0					
ANR	5348010	Identifier	ATTR_TREQ_CAPABILITY		5347780	0					
ANR	5348011	Argument	capability		5347780	1					
ANR	5348012	Identifier	capability		5347780	0					
ANR	5348013	ExpressionStatement	treq -> set_capability ( capability )	291:3:6816:6848	5347780	2	True				
ANR	5348014	CallExpression	treq -> set_capability ( capability )		5347780	0					
ANR	5348015	Callee	treq -> set_capability		5347780	0					
ANR	5348016	PtrMemberAccess	treq -> set_capability		5347780	0					
ANR	5348017	Identifier	treq		5347780	0					
ANR	5348018	Identifier	set_capability		5347780	1					
ANR	5348019	ArgumentList	capability		5347780	1					
ANR	5348020	Argument	capability		5347780	0					
ANR	5348021	Identifier	capability		5347780	0					
ANR	5348022	ExpressionStatement	m_treqs . DeleteCurrent ( )	295:3:6953:6976	5347780	3	True				
ANR	5348023	CallExpression	m_treqs . DeleteCurrent ( )		5347780	0					
ANR	5348024	Callee	m_treqs . DeleteCurrent		5347780	0					
ANR	5348025	MemberAccess	m_treqs . DeleteCurrent		5347780	0					
ANR	5348026	Identifier	m_treqs		5347780	0					
ANR	5348027	Identifier	DeleteCurrent		5347780	1					
ANR	5348028	ArgumentList			5347780	1					
ANR	5348029	ExpressionStatement	"m_treqs_in_progress . insert ( treq -> get_capability ( ) , treq )"	296:3:6981:7037	5347780	4	True				
ANR	5348030	CallExpression	"m_treqs_in_progress . insert ( treq -> get_capability ( ) , treq )"		5347780	0					
ANR	5348031	Callee	m_treqs_in_progress . insert		5347780	0					
ANR	5348032	MemberAccess	m_treqs_in_progress . insert		5347780	0					
ANR	5348033	Identifier	m_treqs_in_progress		5347780	0					
ANR	5348034	Identifier	insert		5347780	1					
ANR	5348035	ArgumentList	treq -> get_capability ( )		5347780	1					
ANR	5348036	Argument	treq -> get_capability ( )		5347780	0					
ANR	5348037	CallExpression	treq -> get_capability ( )		5347780	0					
ANR	5348038	Callee	treq -> get_capability		5347780	0					
ANR	5348039	PtrMemberAccess	treq -> get_capability		5347780	0					
ANR	5348040	Identifier	treq		5347780	0					
ANR	5348041	Identifier	get_capability		5347780	1					
ANR	5348042	ArgumentList			5347780	1					
ANR	5348043	Argument	treq		5347780	1					
ANR	5348044	Identifier	treq		5347780	0					
ANR	5348045	ElseStatement	else		5347780	0					
ANR	5348046	CompoundStatement		132:9:4159:4159	5347780	0					
ANR	5348047	ExpressionStatement	"dprintf ( D_ALWAYS , ""Transferd said request was invalid.\\n"" )"	299:3:7054:7112	5347780	0	True				
ANR	5348048	CallExpression	"dprintf ( D_ALWAYS , ""Transferd said request was invalid.\\n"" )"		5347780	0					
ANR	5348049	Callee	dprintf		5347780	0					
ANR	5348050	Identifier	dprintf		5347780	0					
ANR	5348051	ArgumentList	D_ALWAYS		5347780	1					
ANR	5348052	Argument	D_ALWAYS		5347780	0					
ANR	5348053	Identifier	D_ALWAYS		5347780	0					
ANR	5348054	Argument	"""Transferd said request was invalid.\\n"""		5347780	1					
ANR	5348055	PrimaryExpression	"""Transferd said request was invalid.\\n"""		5347780	0					
ANR	5348056	ExpressionStatement	treq -> set_rejected ( true )	302:3:7177:7201	5347780	1	True				
ANR	5348057	CallExpression	treq -> set_rejected ( true )		5347780	0					
ANR	5348058	Callee	treq -> set_rejected		5347780	0					
ANR	5348059	PtrMemberAccess	treq -> set_rejected		5347780	0					
ANR	5348060	Identifier	treq		5347780	0					
ANR	5348061	Identifier	set_rejected		5347780	1					
ANR	5348062	ArgumentList	true		5347780	1					
ANR	5348063	Argument	true		5347780	0					
ANR	5348064	Identifier	true		5347780	0					
ANR	5348065	ExpressionStatement	"respad . LookupString ( ATTR_TREQ_INVALID_REASON , rej_reason )"	303:3:7206:7263	5347780	2	True				
ANR	5348066	CallExpression	"respad . LookupString ( ATTR_TREQ_INVALID_REASON , rej_reason )"		5347780	0					
ANR	5348067	Callee	respad . LookupString		5347780	0					
ANR	5348068	MemberAccess	respad . LookupString		5347780	0					
ANR	5348069	Identifier	respad		5347780	0					
ANR	5348070	Identifier	LookupString		5347780	1					
ANR	5348071	ArgumentList	ATTR_TREQ_INVALID_REASON		5347780	1					
ANR	5348072	Argument	ATTR_TREQ_INVALID_REASON		5347780	0					
ANR	5348073	Identifier	ATTR_TREQ_INVALID_REASON		5347780	0					
ANR	5348074	Argument	rej_reason		5347780	1					
ANR	5348075	Identifier	rej_reason		5347780	0					
ANR	5348076	ExpressionStatement	treq -> set_rejected_reason ( rej_reason )	304:3:7268:7305	5347780	3	True				
ANR	5348077	CallExpression	treq -> set_rejected_reason ( rej_reason )		5347780	0					
ANR	5348078	Callee	treq -> set_rejected_reason		5347780	0					
ANR	5348079	PtrMemberAccess	treq -> set_rejected_reason		5347780	0					
ANR	5348080	Identifier	treq		5347780	0					
ANR	5348081	Identifier	set_rejected_reason		5347780	1					
ANR	5348082	ArgumentList	rej_reason		5347780	1					
ANR	5348083	Argument	rej_reason		5347780	0					
ANR	5348084	Identifier	rej_reason		5347780	0					
ANR	5348085	ExpressionStatement	"ret = treq -> call_post_push_callback ( treq , this )"	314:2:7642:7689	5347780	12	True				
ANR	5348086	AssignmentExpression	"ret = treq -> call_post_push_callback ( treq , this )"		5347780	0		=			
ANR	5348087	Identifier	ret		5347780	0					
ANR	5348088	CallExpression	"treq -> call_post_push_callback ( treq , this )"		5347780	1					
ANR	5348089	Callee	treq -> call_post_push_callback		5347780	0					
ANR	5348090	PtrMemberAccess	treq -> call_post_push_callback		5347780	0					
ANR	5348091	Identifier	treq		5347780	0					
ANR	5348092	Identifier	call_post_push_callback		5347780	1					
ANR	5348093	ArgumentList	treq		5347780	1					
ANR	5348094	Argument	treq		5347780	0					
ANR	5348095	Identifier	treq		5347780	0					
ANR	5348096	Argument	this		5347780	1					
ANR	5348097	Identifier	this		5347780	0					
ANR	5348098	SwitchStatement	switch ( ret )		5347780	13					
ANR	5348099	Condition	ret	321:9:7971:7973	5347780	0	True				
ANR	5348100	Identifier	ret		5347780	0					
ANR	5348101	CompoundStatement		155:14:5086:5086	5347780	1					
ANR	5348102	Label	case TREQ_ACTION_CONTINUE :	322:3:7981:8006	5347780	0	True				
ANR	5348103	Identifier	TREQ_ACTION_CONTINUE		5347780	0					
ANR	5348104	BreakStatement	break ;	325:4:8134:8139	5347780	1	True				
ANR	5348105	Label	case TREQ_ACTION_FORGET :	327:3:8145:8168	5347780	2	True				
ANR	5348106	Identifier	TREQ_ACTION_FORGET		5347780	0					
ANR	5348107	ExpressionStatement	m_treqs . DeleteCurrent ( )	331:4:8352:8375	5347780	3	True				
ANR	5348108	CallExpression	m_treqs . DeleteCurrent ( )		5347780	0					
ANR	5348109	Callee	m_treqs . DeleteCurrent		5347780	0					
ANR	5348110	MemberAccess	m_treqs . DeleteCurrent		5347780	0					
ANR	5348111	Identifier	m_treqs		5347780	0					
ANR	5348112	Identifier	DeleteCurrent		5347780	1					
ANR	5348113	ArgumentList			5347780	1					
ANR	5348114	Statement	EXCEPT	337:4:8533:8538	5347780	4	True				
ANR	5348115	Statement	(	337:10:8539:8539	5347780	5	True				
ANR	5348116	Statement	"""TransferDaemon::push_transfer_requests(): NOT """	337:11:8540:8587	5347780	6	True				
ANR	5348117	Statement	"""IMPLEMENTED: aborting an treq after the push to the """	338:5:8594:8647	5347780	7	True				
ANR	5348118	Statement	"""transferd. To implement this functionality, you must """	339:5:8654:8708	5347780	8	True				
ANR	5348119	Statement	"""contact the transferd here and have it also abort """	340:5:8715:8766	5347780	9	True				
ANR	5348120	Statement	"""the request."""	341:5:8773:8786	5347780	10	True				
ANR	5348121	Statement	)	341:19:8787:8787	5347780	11	True				
ANR	5348122	ExpressionStatement		341:20:8788:8788	5347780	12	True				
ANR	5348123	BreakStatement	break ;	343:4:8795:8800	5347780	13	True				
ANR	5348124	Label	case TREQ_ACTION_TERMINATE :	345:3:8806:8832	5347780	14	True				
ANR	5348125	Identifier	TREQ_ACTION_TERMINATE		5347780	0					
ANR	5348126	ExpressionStatement	m_treqs . DeleteCurrent ( )	348:4:8917:8940	5347780	15	True				
ANR	5348127	CallExpression	m_treqs . DeleteCurrent ( )		5347780	0					
ANR	5348128	Callee	m_treqs . DeleteCurrent		5347780	0					
ANR	5348129	MemberAccess	m_treqs . DeleteCurrent		5347780	0					
ANR	5348130	Identifier	m_treqs		5347780	0					
ANR	5348131	Identifier	DeleteCurrent		5347780	1					
ANR	5348132	ArgumentList			5347780	1					
ANR	5348133	Statement	delete	349:4:8946:8951	5347780	16	True				
ANR	5348134	ExpressionStatement	treq	349:11:8953:8957	5347780	17	True				
ANR	5348135	Identifier	treq		5347780	0					
ANR	5348136	Statement	EXCEPT	355:4:9115:9120	5347780	18	True				
ANR	5348137	Statement	(	355:10:9121:9121	5347780	19	True				
ANR	5348138	Statement	"""TransferDaemon::push_transfer_requests(): NOT """	355:11:9122:9169	5347780	20	True				
ANR	5348139	Statement	"""IMPLEMENTED: aborting an treq after the push to the """	356:5:9176:9229	5347780	21	True				
ANR	5348140	Statement	"""transferd. To implement this functionality, you must """	357:5:9236:9290	5347780	22	True				
ANR	5348141	Statement	"""contact the transferd here and have it also abort """	358:5:9297:9348	5347780	23	True				
ANR	5348142	Statement	"""the request."""	359:5:9355:9368	5347780	24	True				
ANR	5348143	Statement	)	359:19:9369:9369	5347780	25	True				
ANR	5348144	ExpressionStatement		359:20:9370:9370	5347780	26	True				
ANR	5348145	BreakStatement	break ;	361:4:9377:9382	5347780	27	True				
ANR	5348146	Label	default :	363:3:9388:9395	5347780	28	True				
ANR	5348147	Identifier	default		5347780	0					
ANR	5348148	Statement	EXCEPT	364:4:9401:9406	5347780	29	True				
ANR	5348149	Statement	(	364:10:9407:9407	5347780	30	True				
ANR	5348150	Statement	"""TransferDaemon::push_transfer_requests(): Programmer """	364:11:9408:9462	5347780	31	True				
ANR	5348151	Statement	"""Error. Unknown post TreqAction\\n"""	365:5:9469:9502	5347780	32	True				
ANR	5348152	Statement	)	365:39:9503:9503	5347780	33	True				
ANR	5348153	ExpressionStatement		365:40:9504:9504	5347780	34	True				
ANR	5348154	BreakStatement	break ;	366:4:9510:9515	5347780	35	True				
ANR	5348155	ExpressionStatement	"dprintf ( D_ALWAYS , ""Leaving TransferDaemon::push_transfer_requests()\\n"" )"	370:1:9526:9599	5347780	11	True				
ANR	5348156	CallExpression	"dprintf ( D_ALWAYS , ""Leaving TransferDaemon::push_transfer_requests()\\n"" )"		5347780	0					
ANR	5348157	Callee	dprintf		5347780	0					
ANR	5348158	Identifier	dprintf		5347780	0					
ANR	5348159	ArgumentList	D_ALWAYS		5347780	1					
ANR	5348160	Argument	D_ALWAYS		5347780	0					
ANR	5348161	Identifier	D_ALWAYS		5347780	0					
ANR	5348162	Argument	"""Leaving TransferDaemon::push_transfer_requests()\\n"""		5347780	1					
ANR	5348163	PrimaryExpression	"""Leaving TransferDaemon::push_transfer_requests()\\n"""		5347780	0					
ANR	5348164	ReturnStatement	return true ;	373:1:9603:9614	5347780	12	True				
ANR	5348165	Identifier	true		5347780	0					
ANR	5348166	ReturnType	bool		5347780	1					
ANR	5348167	Identifier	TransferDaemon :: push_transfer_requests		5347780	2					
ANR	5348168	ParameterList			5347780	3					
ANR	5348169	CFGEntryNode	ENTRY		5347780		True				
ANR	5348170	CFGExitNode	EXIT		5347780		True				
ANR	5348171	Symbol	ret		5347780						
ANR	5348172	Symbol	NULL		5347780						
ANR	5348173	Symbol	m_treq_sock		5347780						
ANR	5348174	Symbol	* treq		5347780						
ANR	5348175	Symbol	treq -> call_post_push_callback		5347780						
ANR	5348176	Symbol	m_treqs . Next		5347780						
ANR	5348177	Symbol	* m_treq_sock		5347780						
ANR	5348178	Symbol	D_ALWAYS		5347780						
ANR	5348179	Symbol	this		5347780						
ANR	5348180	Symbol	treq -> get_capability		5347780						
ANR	5348181	Symbol	rej_reason		5347780						
ANR	5348182	Symbol	encap		5347780						
ANR	5348183	Symbol	m_treqs		5347780						
ANR	5348184	Symbol	m_treqs_in_progress		5347780						
ANR	5348185	Symbol	capability		5347780						
ANR	5348186	Symbol	ATTR_TREQ_CAPABILITY		5347780						
ANR	5348187	Symbol	ATTR_TREQ_INVALID_REQUEST		5347780						
ANR	5348188	Symbol	invalid		5347780						
ANR	5348189	Symbol	true		5347780						
ANR	5348190	Symbol	treq -> call_pre_push_callback		5347780						
ANR	5348191	Symbol	FALSE		5347780						
ANR	5348192	Symbol	treq		5347780						
ANR	5348193	Symbol	respad		5347780						
ANR	5348194	Symbol	ATTR_TREQ_INVALID_REASON		5347780						
ANR	5348195	Function	TransferDaemon :: update_transfer_request	376:0:9619:11977							
ANR	5348196	FunctionDef	TransferDaemon :: update_transfer_request (ClassAd * update)		5348195	0					
ANR	5348197	CompoundStatement		378:0:9681:11977	5348195	0					
ANR	5348198	IdentifierDeclStatement	MyString cap ;	379:1:9684:9696	5348195	0	True				
ANR	5348199	IdentifierDecl	cap		5348195	0					
ANR	5348200	IdentifierDeclType	MyString		5348195	0					
ANR	5348201	Identifier	cap		5348195	1					
ANR	5348202	IdentifierDeclStatement	TransferRequest * treq = NULL ;	380:1:9699:9727	5348195	1	True				
ANR	5348203	IdentifierDecl	* treq = NULL		5348195	0					
ANR	5348204	IdentifierDeclType	TransferRequest *		5348195	0					
ANR	5348205	Identifier	treq		5348195	1					
ANR	5348206	AssignmentExpression	* treq = NULL		5348195	2		=			
ANR	5348207	Identifier	NULL		5348195	0					
ANR	5348208	Identifier	NULL		5348195	1					
ANR	5348209	IdentifierDeclStatement	int ret ;	381:1:9730:9737	5348195	2	True				
ANR	5348210	IdentifierDecl	ret		5348195	0					
ANR	5348211	IdentifierDeclType	int		5348195	0					
ANR	5348212	Identifier	ret		5348195	1					
ANR	5348213	IdentifierDeclStatement	TransferDaemon * td = NULL ;	382:1:9740:9765	5348195	3	True				
ANR	5348214	IdentifierDecl	* td = NULL		5348195	0					
ANR	5348215	IdentifierDeclType	TransferDaemon *		5348195	0					
ANR	5348216	Identifier	td		5348195	1					
ANR	5348217	AssignmentExpression	* td = NULL		5348195	2		=			
ANR	5348218	Identifier	NULL		5348195	0					
ANR	5348219	Identifier	NULL		5348195	1					
ANR	5348220	ExpressionStatement	"dprintf ( D_ALWAYS , ""Entering TransferDaemon::update_transfer_request()\\n"" )"	384:1:9769:9844	5348195	4	True				
ANR	5348221	CallExpression	"dprintf ( D_ALWAYS , ""Entering TransferDaemon::update_transfer_request()\\n"" )"		5348195	0					
ANR	5348222	Callee	dprintf		5348195	0					
ANR	5348223	Identifier	dprintf		5348195	0					
ANR	5348224	ArgumentList	D_ALWAYS		5348195	1					
ANR	5348225	Argument	D_ALWAYS		5348195	0					
ANR	5348226	Identifier	D_ALWAYS		5348195	0					
ANR	5348227	Argument	"""Entering TransferDaemon::update_transfer_request()\\n"""		5348195	1					
ANR	5348228	PrimaryExpression	"""Entering TransferDaemon::update_transfer_request()\\n"""		5348195	0					
ANR	5348229	ExpressionStatement	"update -> LookupString ( ATTR_TREQ_CAPABILITY , cap )"	391:1:10079:10126	5348195	5	True				
ANR	5348230	CallExpression	"update -> LookupString ( ATTR_TREQ_CAPABILITY , cap )"		5348195	0					
ANR	5348231	Callee	update -> LookupString		5348195	0					
ANR	5348232	PtrMemberAccess	update -> LookupString		5348195	0					
ANR	5348233	Identifier	update		5348195	0					
ANR	5348234	Identifier	LookupString		5348195	1					
ANR	5348235	ArgumentList	ATTR_TREQ_CAPABILITY		5348195	1					
ANR	5348236	Argument	ATTR_TREQ_CAPABILITY		5348195	0					
ANR	5348237	Identifier	ATTR_TREQ_CAPABILITY		5348195	0					
ANR	5348238	Argument	cap		5348195	1					
ANR	5348239	Identifier	cap		5348195	0					
ANR	5348240	IfStatement	"if ( m_treqs_in_progress . lookup ( cap , treq ) != 0 )"		5348195	6					
ANR	5348241	Condition	"m_treqs_in_progress . lookup ( cap , treq ) != 0"	398:5:10468:10509	5348195	0	True				
ANR	5348242	EqualityExpression	"m_treqs_in_progress . lookup ( cap , treq ) != 0"		5348195	0		!=			
ANR	5348243	CallExpression	"m_treqs_in_progress . lookup ( cap , treq )"		5348195	0					
ANR	5348244	Callee	m_treqs_in_progress . lookup		5348195	0					
ANR	5348245	MemberAccess	m_treqs_in_progress . lookup		5348195	0					
ANR	5348246	Identifier	m_treqs_in_progress		5348195	0					
ANR	5348247	Identifier	lookup		5348195	1					
ANR	5348248	ArgumentList	cap		5348195	1					
ANR	5348249	Argument	cap		5348195	0					
ANR	5348250	Identifier	cap		5348195	0					
ANR	5348251	Argument	treq		5348195	1					
ANR	5348252	Identifier	treq		5348195	0					
ANR	5348253	PrimaryExpression	0		5348195	1					
ANR	5348254	CompoundStatement		21:49:830:830	5348195	1					
ANR	5348255	Statement	dprintf	399:2:10516:10522	5348195	0	True				
ANR	5348256	Statement	(	399:9:10523:10523	5348195	1	True				
ANR	5348257	Statement	D_ALWAYS	399:10:10524:10531	5348195	2	True				
ANR	5348258	Statement	","	399:18:10532:10532	5348195	3	True				
ANR	5348259	Statement	"""TransferDaemon::update_transfer_request(): """	399:20:10534:10578	5348195	4	True				
ANR	5348260	Statement	"""Got update for treq that the schedd had already thrown away, """	400:3:10583:10645	5348195	5	True				
ANR	5348261	Statement	"""ignoring.\\n"""	401:3:10650:10662	5348195	6	True				
ANR	5348262	Statement	)	401:16:10663:10663	5348195	7	True				
ANR	5348263	ExpressionStatement		401:17:10664:10664	5348195	8	True				
ANR	5348264	ReturnStatement	return TRUE ;	402:2:10668:10679	5348195	9	True				
ANR	5348265	Identifier	TRUE		5348195	0					
ANR	5348266	Statement	dprintf	407:1:10779:10785	5348195	7	True				
ANR	5348267	Statement	(	407:8:10786:10786	5348195	8	True				
ANR	5348268	Statement	D_ALWAYS	407:9:10787:10794	5348195	9	True				
ANR	5348269	Statement	","	407:17:10795:10795	5348195	10	True				
ANR	5348270	Statement	"""TransferDaemon::update_transfer_request(): """	407:19:10797:10841	5348195	11	True				
ANR	5348271	Statement	"""Calling schedd update callback\\n"""	408:2:10845:10878	5348195	12	True				
ANR	5348272	Statement	)	408:36:10879:10879	5348195	13	True				
ANR	5348273	ExpressionStatement		408:37:10880:10880	5348195	14	True				
ANR	5348274	ExpressionStatement	"ret = treq -> call_update_callback ( treq , td , update )"	410:1:10884:10934	5348195	15	True				
ANR	5348275	AssignmentExpression	"ret = treq -> call_update_callback ( treq , td , update )"		5348195	0		=			
ANR	5348276	Identifier	ret		5348195	0					
ANR	5348277	CallExpression	"treq -> call_update_callback ( treq , td , update )"		5348195	1					
ANR	5348278	Callee	treq -> call_update_callback		5348195	0					
ANR	5348279	PtrMemberAccess	treq -> call_update_callback		5348195	0					
ANR	5348280	Identifier	treq		5348195	0					
ANR	5348281	Identifier	call_update_callback		5348195	1					
ANR	5348282	ArgumentList	treq		5348195	1					
ANR	5348283	Argument	treq		5348195	0					
ANR	5348284	Identifier	treq		5348195	0					
ANR	5348285	Argument	td		5348195	1					
ANR	5348286	Identifier	td		5348195	0					
ANR	5348287	Argument	update		5348195	2					
ANR	5348288	Identifier	update		5348195	0					
ANR	5348289	SwitchStatement	switch ( ret )		5348195	16					
ANR	5348290	Condition	ret	412:8:10945:10947	5348195	0	True				
ANR	5348291	Identifier	ret		5348195	0					
ANR	5348292	CompoundStatement		35:13:1268:1268	5348195	1					
ANR	5348293	Label	case TREQ_ACTION_CONTINUE :	413:2:10954:10979	5348195	0	True				
ANR	5348294	Identifier	TREQ_ACTION_CONTINUE		5348195	0					
ANR	5348295	BreakStatement	break ;	417:3:11169:11174	5348195	1	True				
ANR	5348296	Label	case TREQ_ACTION_FORGET :	419:2:11179:11202	5348195	2	True				
ANR	5348297	Identifier	TREQ_ACTION_FORGET		5348195	0					
ANR	5348298	ExpressionStatement	ASSERT ( m_treqs_in_progress . remove ( cap ) == 0 )	425:3:11497:11541	5348195	3	True				
ANR	5348299	CallExpression	ASSERT ( m_treqs_in_progress . remove ( cap ) == 0 )		5348195	0					
ANR	5348300	Callee	ASSERT		5348195	0					
ANR	5348301	Identifier	ASSERT		5348195	0					
ANR	5348302	ArgumentList	m_treqs_in_progress . remove ( cap ) == 0		5348195	1					
ANR	5348303	Argument	m_treqs_in_progress . remove ( cap ) == 0		5348195	0					
ANR	5348304	EqualityExpression	m_treqs_in_progress . remove ( cap ) == 0		5348195	0		==			
ANR	5348305	CallExpression	m_treqs_in_progress . remove ( cap )		5348195	0					
ANR	5348306	Callee	m_treqs_in_progress . remove		5348195	0					
ANR	5348307	MemberAccess	m_treqs_in_progress . remove		5348195	0					
ANR	5348308	Identifier	m_treqs_in_progress		5348195	0					
ANR	5348309	Identifier	remove		5348195	1					
ANR	5348310	ArgumentList	cap		5348195	1					
ANR	5348311	Argument	cap		5348195	0					
ANR	5348312	Identifier	cap		5348195	0					
ANR	5348313	PrimaryExpression	0		5348195	1					
ANR	5348314	BreakStatement	break ;	427:3:11547:11552	5348195	4	True				
ANR	5348315	Label	case TREQ_ACTION_TERMINATE :	429:2:11557:11583	5348195	5	True				
ANR	5348316	Identifier	TREQ_ACTION_TERMINATE		5348195	0					
ANR	5348317	ExpressionStatement	ASSERT ( m_treqs_in_progress . remove ( cap ) == 0 )	432:3:11674:11718	5348195	6	True				
ANR	5348318	CallExpression	ASSERT ( m_treqs_in_progress . remove ( cap ) == 0 )		5348195	0					
ANR	5348319	Callee	ASSERT		5348195	0					
ANR	5348320	Identifier	ASSERT		5348195	0					
ANR	5348321	ArgumentList	m_treqs_in_progress . remove ( cap ) == 0		5348195	1					
ANR	5348322	Argument	m_treqs_in_progress . remove ( cap ) == 0		5348195	0					
ANR	5348323	EqualityExpression	m_treqs_in_progress . remove ( cap ) == 0		5348195	0		==			
ANR	5348324	CallExpression	m_treqs_in_progress . remove ( cap )		5348195	0					
ANR	5348325	Callee	m_treqs_in_progress . remove		5348195	0					
ANR	5348326	MemberAccess	m_treqs_in_progress . remove		5348195	0					
ANR	5348327	Identifier	m_treqs_in_progress		5348195	0					
ANR	5348328	Identifier	remove		5348195	1					
ANR	5348329	ArgumentList	cap		5348195	1					
ANR	5348330	Argument	cap		5348195	0					
ANR	5348331	Identifier	cap		5348195	0					
ANR	5348332	PrimaryExpression	0		5348195	1					
ANR	5348333	Statement	delete	434:3:11724:11729	5348195	7	True				
ANR	5348334	ExpressionStatement	treq	434:10:11731:11735	5348195	8	True				
ANR	5348335	Identifier	treq		5348195	0					
ANR	5348336	BreakStatement	break ;	436:3:11741:11746	5348195	9	True				
ANR	5348337	Label	default :	438:2:11751:11758	5348195	10	True				
ANR	5348338	Identifier	default		5348195	0					
ANR	5348339	Statement	EXCEPT	439:3:11763:11768	5348195	11	True				
ANR	5348340	Statement	(	439:9:11769:11769	5348195	12	True				
ANR	5348341	Statement	"""TransferDaemon::update_transfer_request(): Programmer """	439:10:11770:11825	5348195	13	True				
ANR	5348342	Statement	"""Error. Unknown update TreqAction\\n"""	440:4:11831:11866	5348195	14	True				
ANR	5348343	Statement	)	440:40:11867:11867	5348195	15	True				
ANR	5348344	ExpressionStatement		440:41:11868:11868	5348195	16	True				
ANR	5348345	BreakStatement	break ;	441:3:11873:11878	5348195	17	True				
ANR	5348346	ExpressionStatement	"dprintf ( D_ALWAYS , ""Leaving TransferDaemon::update_transfer_request()\\n"" )"	444:1:11885:11959	5348195	17	True				
ANR	5348347	CallExpression	"dprintf ( D_ALWAYS , ""Leaving TransferDaemon::update_transfer_request()\\n"" )"		5348195	0					
ANR	5348348	Callee	dprintf		5348195	0					
ANR	5348349	Identifier	dprintf		5348195	0					
ANR	5348350	ArgumentList	D_ALWAYS		5348195	1					
ANR	5348351	Argument	D_ALWAYS		5348195	0					
ANR	5348352	Identifier	D_ALWAYS		5348195	0					
ANR	5348353	Argument	"""Leaving TransferDaemon::update_transfer_request()\\n"""		5348195	1					
ANR	5348354	PrimaryExpression	"""Leaving TransferDaemon::update_transfer_request()\\n"""		5348195	0					
ANR	5348355	ReturnStatement	return TRUE ;	447:1:11964:11975	5348195	18	True				
ANR	5348356	Identifier	TRUE		5348195	0					
ANR	5348357	ReturnType	bool		5348195	1					
ANR	5348358	Identifier	TransferDaemon :: update_transfer_request		5348195	2					
ANR	5348359	ParameterList	ClassAd * update		5348195	3					
ANR	5348360	Parameter	ClassAd * update	377:40:9664:9678	5348195	0	True				
ANR	5348361	ParameterType	ClassAd *		5348195	0					
ANR	5348362	Identifier	update		5348195	1					
ANR	5348363	CFGEntryNode	ENTRY		5348195		True				
ANR	5348364	CFGExitNode	EXIT		5348195		True				
ANR	5348365	Symbol	ret		5348195						
ANR	5348366	Symbol	treq -> call_update_callback		5348195						
ANR	5348367	Symbol	NULL		5348195						
ANR	5348368	Symbol	* treq		5348195						
ANR	5348369	Symbol	D_ALWAYS		5348195						
ANR	5348370	Symbol	update		5348195						
ANR	5348371	Symbol	TRUE		5348195						
ANR	5348372	Symbol	m_treqs_in_progress		5348195						
ANR	5348373	Symbol	td		5348195						
ANR	5348374	Symbol	m_treqs_in_progress . remove		5348195						
ANR	5348375	Symbol	cap		5348195						
ANR	5348376	Symbol	ATTR_TREQ_CAPABILITY		5348195						
ANR	5348377	Symbol	m_treqs_in_progress . lookup		5348195						
ANR	5348378	Symbol	treq		5348195						
ANR	5348379	Function	TransferDaemon :: reap_all_transfer_requests	450:0:11980:13138							
ANR	5348380	FunctionDef	TransferDaemon :: reap_all_transfer_requests ()		5348379	0					
ANR	5348381	CompoundStatement		452:0:12034:13138	5348379	0					
ANR	5348382	IdentifierDeclStatement	TransferRequest * treq = NULL ;	453:1:12037:12065	5348379	0	True				
ANR	5348383	IdentifierDecl	* treq = NULL		5348379	0					
ANR	5348384	IdentifierDeclType	TransferRequest *		5348379	0					
ANR	5348385	Identifier	treq		5348379	1					
ANR	5348386	AssignmentExpression	* treq = NULL		5348379	2		=			
ANR	5348387	Identifier	NULL		5348379	0					
ANR	5348388	Identifier	NULL		5348379	1					
ANR	5348389	IdentifierDeclStatement	TreqAction ret ;	454:1:12068:12082	5348379	1	True				
ANR	5348390	IdentifierDecl	ret		5348379	0					
ANR	5348391	IdentifierDeclType	TreqAction		5348379	0					
ANR	5348392	Identifier	ret		5348379	1					
ANR	5348393	IdentifierDeclStatement	MyString key ;	455:1:12085:12097	5348379	2	True				
ANR	5348394	IdentifierDecl	key		5348379	0					
ANR	5348395	IdentifierDeclType	MyString		5348379	0					
ANR	5348396	Identifier	key		5348379	1					
ANR	5348397	ExpressionStatement	m_treqs . Rewind ( )	465:1:12512:12528	5348379	3	True				
ANR	5348398	CallExpression	m_treqs . Rewind ( )		5348379	0					
ANR	5348399	Callee	m_treqs . Rewind		5348379	0					
ANR	5348400	MemberAccess	m_treqs . Rewind		5348379	0					
ANR	5348401	Identifier	m_treqs		5348379	0					
ANR	5348402	Identifier	Rewind		5348379	1					
ANR	5348403	ArgumentList			5348379	1					
ANR	5348404	WhileStatement	while ( m_treqs . Next ( treq ) )		5348379	4					
ANR	5348405	Condition	m_treqs . Next ( treq )	466:7:12537:12554	5348379	0	True				
ANR	5348406	CallExpression	m_treqs . Next ( treq )		5348379	0					
ANR	5348407	Callee	m_treqs . Next		5348379	0					
ANR	5348408	MemberAccess	m_treqs . Next		5348379	0					
ANR	5348409	Identifier	m_treqs		5348379	0					
ANR	5348410	Identifier	Next		5348379	1					
ANR	5348411	ArgumentList	treq		5348379	1					
ANR	5348412	Argument	treq		5348379	0					
ANR	5348413	Identifier	treq		5348379	0					
ANR	5348414	CompoundStatement		16:1:523:523	5348379	1					
ANR	5348415	ExpressionStatement	m_treqs . DeleteCurrent ( )	468:2:12562:12585	5348379	0	True				
ANR	5348416	CallExpression	m_treqs . DeleteCurrent ( )		5348379	0					
ANR	5348417	Callee	m_treqs . DeleteCurrent		5348379	0					
ANR	5348418	MemberAccess	m_treqs . DeleteCurrent		5348379	0					
ANR	5348419	Identifier	m_treqs		5348379	0					
ANR	5348420	Identifier	DeleteCurrent		5348379	1					
ANR	5348421	ArgumentList			5348379	1					
ANR	5348422	ExpressionStatement	ret = treq -> call_reaper_callback ( treq )	470:2:12592:12630	5348379	1	True				
ANR	5348423	AssignmentExpression	ret = treq -> call_reaper_callback ( treq )		5348379	0		=			
ANR	5348424	Identifier	ret		5348379	0					
ANR	5348425	CallExpression	treq -> call_reaper_callback ( treq )		5348379	1					
ANR	5348426	Callee	treq -> call_reaper_callback		5348379	0					
ANR	5348427	PtrMemberAccess	treq -> call_reaper_callback		5348379	0					
ANR	5348428	Identifier	treq		5348379	0					
ANR	5348429	Identifier	call_reaper_callback		5348379	1					
ANR	5348430	ArgumentList	treq		5348379	1					
ANR	5348431	Argument	treq		5348379	0					
ANR	5348432	Identifier	treq		5348379	0					
ANR	5348433	ExpressionStatement	ASSERT ( ret == TREQ_ACTION_TERMINATE )	473:2:12700:12736	5348379	2	True				
ANR	5348434	CallExpression	ASSERT ( ret == TREQ_ACTION_TERMINATE )		5348379	0					
ANR	5348435	Callee	ASSERT		5348379	0					
ANR	5348436	Identifier	ASSERT		5348379	0					
ANR	5348437	ArgumentList	ret == TREQ_ACTION_TERMINATE		5348379	1					
ANR	5348438	Argument	ret == TREQ_ACTION_TERMINATE		5348379	0					
ANR	5348439	EqualityExpression	ret == TREQ_ACTION_TERMINATE		5348379	0		==			
ANR	5348440	Identifier	ret		5348379	0					
ANR	5348441	Identifier	TREQ_ACTION_TERMINATE		5348379	1					
ANR	5348442	Statement	delete	475:2:12741:12746	5348379	3	True				
ANR	5348443	ExpressionStatement	treq	475:9:12748:12752	5348379	4	True				
ANR	5348444	Identifier	treq		5348379	0					
ANR	5348445	ExpressionStatement	m_treqs_in_progress . startIterations ( )	480:1:12846:12883	5348379	5	True				
ANR	5348446	CallExpression	m_treqs_in_progress . startIterations ( )		5348379	0					
ANR	5348447	Callee	m_treqs_in_progress . startIterations		5348379	0					
ANR	5348448	MemberAccess	m_treqs_in_progress . startIterations		5348379	0					
ANR	5348449	Identifier	m_treqs_in_progress		5348379	0					
ANR	5348450	Identifier	startIterations		5348379	1					
ANR	5348451	ArgumentList			5348379	1					
ANR	5348452	WhileStatement	"while ( m_treqs_in_progress . iterate ( key , treq ) )"		5348379	6					
ANR	5348453	Condition	"m_treqs_in_progress . iterate ( key , treq )"	481:7:12892:12929	5348379	0	True				
ANR	5348454	CallExpression	"m_treqs_in_progress . iterate ( key , treq )"		5348379	0					
ANR	5348455	Callee	m_treqs_in_progress . iterate		5348379	0					
ANR	5348456	MemberAccess	m_treqs_in_progress . iterate		5348379	0					
ANR	5348457	Identifier	m_treqs_in_progress		5348379	0					
ANR	5348458	Identifier	iterate		5348379	1					
ANR	5348459	ArgumentList	key		5348379	1					
ANR	5348460	Argument	key		5348379	0					
ANR	5348461	Identifier	key		5348379	0					
ANR	5348462	Argument	treq		5348379	1					
ANR	5348463	Identifier	treq		5348379	0					
ANR	5348464	CompoundStatement		31:1:898:898	5348379	1					
ANR	5348465	ExpressionStatement	m_treqs_in_progress . remove ( key )	483:2:12937:12968	5348379	0	True				
ANR	5348466	CallExpression	m_treqs_in_progress . remove ( key )		5348379	0					
ANR	5348467	Callee	m_treqs_in_progress . remove		5348379	0					
ANR	5348468	MemberAccess	m_treqs_in_progress . remove		5348379	0					
ANR	5348469	Identifier	m_treqs_in_progress		5348379	0					
ANR	5348470	Identifier	remove		5348379	1					
ANR	5348471	ArgumentList	key		5348379	1					
ANR	5348472	Argument	key		5348379	0					
ANR	5348473	Identifier	key		5348379	0					
ANR	5348474	ExpressionStatement	ret = treq -> call_reaper_callback ( treq )	485:2:12973:13011	5348379	1	True				
ANR	5348475	AssignmentExpression	ret = treq -> call_reaper_callback ( treq )		5348379	0		=			
ANR	5348476	Identifier	ret		5348379	0					
ANR	5348477	CallExpression	treq -> call_reaper_callback ( treq )		5348379	1					
ANR	5348478	Callee	treq -> call_reaper_callback		5348379	0					
ANR	5348479	PtrMemberAccess	treq -> call_reaper_callback		5348379	0					
ANR	5348480	Identifier	treq		5348379	0					
ANR	5348481	Identifier	call_reaper_callback		5348379	1					
ANR	5348482	ArgumentList	treq		5348379	1					
ANR	5348483	Argument	treq		5348379	0					
ANR	5348484	Identifier	treq		5348379	0					
ANR	5348485	ExpressionStatement	ASSERT ( ret == TREQ_ACTION_TERMINATE )	488:2:13081:13117	5348379	2	True				
ANR	5348486	CallExpression	ASSERT ( ret == TREQ_ACTION_TERMINATE )		5348379	0					
ANR	5348487	Callee	ASSERT		5348379	0					
ANR	5348488	Identifier	ASSERT		5348379	0					
ANR	5348489	ArgumentList	ret == TREQ_ACTION_TERMINATE		5348379	1					
ANR	5348490	Argument	ret == TREQ_ACTION_TERMINATE		5348379	0					
ANR	5348491	EqualityExpression	ret == TREQ_ACTION_TERMINATE		5348379	0		==			
ANR	5348492	Identifier	ret		5348379	0					
ANR	5348493	Identifier	TREQ_ACTION_TERMINATE		5348379	1					
ANR	5348494	Statement	delete	490:2:13122:13127	5348379	3	True				
ANR	5348495	ExpressionStatement	treq	490:9:13129:13133	5348379	4	True				
ANR	5348496	Identifier	treq		5348379	0					
ANR	5348497	ReturnType	void		5348379	1					
ANR	5348498	Identifier	TransferDaemon :: reap_all_transfer_requests		5348379	2					
ANR	5348499	ParameterList			5348379	3					
ANR	5348500	CFGEntryNode	ENTRY		5348379		True				
ANR	5348501	CFGExitNode	EXIT		5348379		True				
ANR	5348502	Symbol	ret		5348379						
ANR	5348503	Symbol	NULL		5348379						
ANR	5348504	Symbol	* treq		5348379						
ANR	5348505	Symbol	m_treqs_in_progress . iterate		5348379						
ANR	5348506	Symbol	m_treqs . Next		5348379						
ANR	5348507	Symbol	treq -> call_reaper_callback		5348379						
ANR	5348508	Symbol	treq		5348379						
ANR	5348509	Symbol	m_treqs		5348379						
ANR	5348510	Symbol	key		5348379						
ANR	5348511	Symbol	m_treqs_in_progress		5348379						
ANR	5348512	Symbol	TREQ_ACTION_TERMINATE		5348379						
ANR	5348513	Function	TransferDaemon :: set_reg_callback	494:0:13141:13317							
ANR	5348514	FunctionDef	"TransferDaemon :: set_reg_callback (MyString desc , TDRegisterCallback callback , Service * base)"		5348513	0					
ANR	5348515	CompoundStatement		497:0:13241:13317	5348513	0					
ANR	5348516	ExpressionStatement	m_reg_func_desc = desc	498:1:13244:13266	5348513	0	True				
ANR	5348517	AssignmentExpression	m_reg_func_desc = desc		5348513	0		=			
ANR	5348518	Identifier	m_reg_func_desc		5348513	0					
ANR	5348519	Identifier	desc		5348513	1					
ANR	5348520	ExpressionStatement	m_reg_func = callback	499:1:13269:13290	5348513	1	True				
ANR	5348521	AssignmentExpression	m_reg_func = callback		5348513	0		=			
ANR	5348522	Identifier	m_reg_func		5348513	0					
ANR	5348523	Identifier	callback		5348513	1					
ANR	5348524	ExpressionStatement	m_reg_func_this = base	500:1:13293:13315	5348513	2	True				
ANR	5348525	AssignmentExpression	m_reg_func_this = base		5348513	0		=			
ANR	5348526	Identifier	m_reg_func_this		5348513	0					
ANR	5348527	Identifier	base		5348513	1					
ANR	5348528	ReturnType	void		5348513	1					
ANR	5348529	Identifier	TransferDaemon :: set_reg_callback		5348513	2					
ANR	5348530	ParameterList	"MyString desc , TDRegisterCallback callback , Service * base"		5348513	3					
ANR	5348531	Parameter	MyString desc	495:33:13180:13192	5348513	0	True				
ANR	5348532	ParameterType	MyString		5348513	0					
ANR	5348533	Identifier	desc		5348513	1					
ANR	5348534	Parameter	TDRegisterCallback callback	495:48:13195:13221	5348513	1	True				
ANR	5348535	ParameterType	TDRegisterCallback		5348513	0					
ANR	5348536	Identifier	callback		5348513	1					
ANR	5348537	Parameter	Service * base	496:1:13226:13238	5348513	2	True				
ANR	5348538	ParameterType	Service *		5348513	0					
ANR	5348539	Identifier	base		5348513	1					
ANR	5348540	CFGEntryNode	ENTRY		5348513		True				
ANR	5348541	CFGExitNode	EXIT		5348513		True				
ANR	5348542	Symbol	m_reg_func		5348513						
ANR	5348543	Symbol	m_reg_func_this		5348513						
ANR	5348544	Symbol	callback		5348513						
ANR	5348545	Symbol	m_reg_func_desc		5348513						
ANR	5348546	Symbol	desc		5348513						
ANR	5348547	Symbol	base		5348513						
ANR	5348548	Function	TransferDaemon :: get_reg_callback	503:0:13320:13499							
ANR	5348549	FunctionDef	"TransferDaemon :: get_reg_callback (MyString & desc , TDRegisterCallback & callback , Service * & base)"		5348548	0					
ANR	5348550	CompoundStatement		506:0:13423:13499	5348548	0					
ANR	5348551	ExpressionStatement	desc = m_reg_func_desc	507:1:13426:13448	5348548	0	True				
ANR	5348552	AssignmentExpression	desc = m_reg_func_desc		5348548	0		=			
ANR	5348553	Identifier	desc		5348548	0					
ANR	5348554	Identifier	m_reg_func_desc		5348548	1					
ANR	5348555	ExpressionStatement	callback = m_reg_func	508:1:13451:13472	5348548	1	True				
ANR	5348556	AssignmentExpression	callback = m_reg_func		5348548	0		=			
ANR	5348557	Identifier	callback		5348548	0					
ANR	5348558	Identifier	m_reg_func		5348548	1					
ANR	5348559	ExpressionStatement	base = m_reg_func_this	509:1:13475:13497	5348548	2	True				
ANR	5348560	AssignmentExpression	base = m_reg_func_this		5348548	0		=			
ANR	5348561	Identifier	base		5348548	0					
ANR	5348562	Identifier	m_reg_func_this		5348548	1					
ANR	5348563	ReturnType	void		5348548	1					
ANR	5348564	Identifier	TransferDaemon :: get_reg_callback		5348548	2					
ANR	5348565	ParameterList	"MyString & desc , TDRegisterCallback & callback , Service * & base"		5348548	3					
ANR	5348566	Parameter	MyString & desc	504:33:13359:13372	5348548	0	True				
ANR	5348567	ParameterType	MyString &		5348548	0					
ANR	5348568	Identifier	desc		5348548	1					
ANR	5348569	Parameter	TDRegisterCallback & callback	504:49:13375:13402	5348548	1	True				
ANR	5348570	ParameterType	TDRegisterCallback &		5348548	0					
ANR	5348571	Identifier	callback		5348548	1					
ANR	5348572	Parameter	Service * & base	505:1:13407:13420	5348548	2	True				
ANR	5348573	ParameterType	Service * &		5348548	0					
ANR	5348574	Identifier	base		5348548	1					
ANR	5348575	CFGEntryNode	ENTRY		5348548		True				
ANR	5348576	CFGExitNode	EXIT		5348548		True				
ANR	5348577	Symbol	m_reg_func		5348548						
ANR	5348578	Symbol	m_reg_func_this		5348548						
ANR	5348579	Symbol	callback		5348548						
ANR	5348580	Symbol	m_reg_func_desc		5348548						
ANR	5348581	Symbol	desc		5348548						
ANR	5348582	Symbol	base		5348548						
ANR	5348583	Function	TransferDaemon :: call_reg_callback	512:0:13502:13852							
ANR	5348584	FunctionDef	TransferDaemon :: call_reg_callback (TransferDaemon * td)		5348583	0					
ANR	5348585	CompoundStatement		514:0:13566:13852	5348583	0					
ANR	5348586	IfStatement	if ( m_reg_func == NULL )		5348583	0					
ANR	5348587	Condition	m_reg_func == NULL	519:5:13751:13768	5348583	0	True				
ANR	5348588	EqualityExpression	m_reg_func == NULL		5348583	0		==			
ANR	5348589	Identifier	m_reg_func		5348583	0					
ANR	5348590	Identifier	NULL		5348583	1					
ANR	5348591	CompoundStatement		6:25:204:204	5348583	1					
ANR	5348592	ReturnStatement	return TD_ACTION_CONTINUE ;	520:2:13775:13800	5348583	0	True				
ANR	5348593	Identifier	TD_ACTION_CONTINUE		5348583	0					
ANR	5348594	Statement	return	523:1:13807:13812	5348583	1	True				
ANR	5348595	Statement	(	523:8:13814:13814	5348583	2	True				
ANR	5348596	Statement	m_reg_func_this	523:9:13815:13829	5348583	3	True				
ANR	5348597	Statement	->*	523:24:13830:13832	5348583	4	True				
ANR	5348598	Statement	(	523:27:13833:13833	5348583	5	True				
ANR	5348599	Statement	m_reg_func	523:28:13834:13843	5348583	6	True				
ANR	5348600	Statement	)	523:38:13844:13844	5348583	7	True				
ANR	5348601	Statement	)	523:39:13845:13845	5348583	8	True				
ANR	5348602	ExpressionStatement	td	523:40:13846:13850	5348583	9	True				
ANR	5348603	Identifier	td		5348583	0					
ANR	5348604	ReturnType	TdAction		5348583	1					
ANR	5348605	Identifier	TransferDaemon :: call_reg_callback		5348583	2					
ANR	5348606	ParameterList	TransferDaemon * td		5348583	3					
ANR	5348607	Parameter	TransferDaemon * td	513:34:13546:13563	5348583	0	True				
ANR	5348608	ParameterType	TransferDaemon *		5348583	0					
ANR	5348609	Identifier	td		5348583	1					
ANR	5348610	CFGEntryNode	ENTRY		5348583		True				
ANR	5348611	CFGExitNode	EXIT		5348583		True				
ANR	5348612	Symbol	td		5348583						
ANR	5348613	Symbol	m_reg_func		5348583						
ANR	5348614	Symbol	NULL		5348583						
ANR	5348615	Symbol	TD_ACTION_CONTINUE		5348583						
ANR	5348616	Function	TransferDaemon :: set_reaper_callback	526:0:13855:14034							
ANR	5348617	FunctionDef	"TransferDaemon :: set_reaper_callback (MyString desc , TDReaperCallback callback , Service * base)"		5348616	0					
ANR	5348618	CompoundStatement		529:0:13955:14034	5348616	0					
ANR	5348619	ExpressionStatement	m_reap_func_desc = desc	530:1:13958:13981	5348616	0	True				
ANR	5348620	AssignmentExpression	m_reap_func_desc = desc		5348616	0		=			
ANR	5348621	Identifier	m_reap_func_desc		5348616	0					
ANR	5348622	Identifier	desc		5348616	1					
ANR	5348623	ExpressionStatement	m_reap_func = callback	531:1:13984:14006	5348616	1	True				
ANR	5348624	AssignmentExpression	m_reap_func = callback		5348616	0		=			
ANR	5348625	Identifier	m_reap_func		5348616	0					
ANR	5348626	Identifier	callback		5348616	1					
ANR	5348627	ExpressionStatement	m_reap_func_this = base	532:1:14009:14032	5348616	2	True				
ANR	5348628	AssignmentExpression	m_reap_func_this = base		5348616	0		=			
ANR	5348629	Identifier	m_reap_func_this		5348616	0					
ANR	5348630	Identifier	base		5348616	1					
ANR	5348631	ReturnType	void		5348616	1					
ANR	5348632	Identifier	TransferDaemon :: set_reaper_callback		5348616	2					
ANR	5348633	ParameterList	"MyString desc , TDReaperCallback callback , Service * base"		5348616	3					
ANR	5348634	Parameter	MyString desc	527:36:13897:13909	5348616	0	True				
ANR	5348635	ParameterType	MyString		5348616	0					
ANR	5348636	Identifier	desc		5348616	1					
ANR	5348637	Parameter	TDReaperCallback callback	527:51:13912:13936	5348616	1	True				
ANR	5348638	ParameterType	TDReaperCallback		5348616	0					
ANR	5348639	Identifier	callback		5348616	1					
ANR	5348640	Parameter	Service * base	528:1:13940:13952	5348616	2	True				
ANR	5348641	ParameterType	Service *		5348616	0					
ANR	5348642	Identifier	base		5348616	1					
ANR	5348643	CFGEntryNode	ENTRY		5348616		True				
ANR	5348644	CFGExitNode	EXIT		5348616		True				
ANR	5348645	Symbol	m_reap_func_desc		5348616						
ANR	5348646	Symbol	m_reap_func_this		5348616						
ANR	5348647	Symbol	m_reap_func		5348616						
ANR	5348648	Symbol	callback		5348616						
ANR	5348649	Symbol	desc		5348616						
ANR	5348650	Symbol	base		5348616						
ANR	5348651	Function	TransferDaemon :: get_reaper_callback	535:0:14037:14220							
ANR	5348652	FunctionDef	"TransferDaemon :: get_reaper_callback (MyString & desc , TDReaperCallback & callback , Service * & base)"		5348651	0					
ANR	5348653	CompoundStatement		538:0:14141:14220	5348651	0					
ANR	5348654	ExpressionStatement	desc = m_reap_func_desc	539:1:14144:14167	5348651	0	True				
ANR	5348655	AssignmentExpression	desc = m_reap_func_desc		5348651	0		=			
ANR	5348656	Identifier	desc		5348651	0					
ANR	5348657	Identifier	m_reap_func_desc		5348651	1					
ANR	5348658	ExpressionStatement	callback = m_reap_func	540:1:14170:14192	5348651	1	True				
ANR	5348659	AssignmentExpression	callback = m_reap_func		5348651	0		=			
ANR	5348660	Identifier	callback		5348651	0					
ANR	5348661	Identifier	m_reap_func		5348651	1					
ANR	5348662	ExpressionStatement	base = m_reap_func_this	541:1:14195:14218	5348651	2	True				
ANR	5348663	AssignmentExpression	base = m_reap_func_this		5348651	0		=			
ANR	5348664	Identifier	base		5348651	0					
ANR	5348665	Identifier	m_reap_func_this		5348651	1					
ANR	5348666	ReturnType	void		5348651	1					
ANR	5348667	Identifier	TransferDaemon :: get_reaper_callback		5348651	2					
ANR	5348668	ParameterList	"MyString & desc , TDReaperCallback & callback , Service * & base"		5348651	3					
ANR	5348669	Parameter	MyString & desc	536:36:14079:14092	5348651	0	True				
ANR	5348670	ParameterType	MyString &		5348651	0					
ANR	5348671	Identifier	desc		5348651	1					
ANR	5348672	Parameter	TDReaperCallback & callback	537:1:14097:14122	5348651	1	True				
ANR	5348673	ParameterType	TDReaperCallback &		5348651	0					
ANR	5348674	Identifier	callback		5348651	1					
ANR	5348675	Parameter	Service * & base	537:29:14125:14138	5348651	2	True				
ANR	5348676	ParameterType	Service * &		5348651	0					
ANR	5348677	Identifier	base		5348651	1					
ANR	5348678	CFGEntryNode	ENTRY		5348651		True				
ANR	5348679	CFGExitNode	EXIT		5348651		True				
ANR	5348680	Symbol	m_reap_func_desc		5348651						
ANR	5348681	Symbol	m_reap_func_this		5348651						
ANR	5348682	Symbol	m_reap_func		5348651						
ANR	5348683	Symbol	callback		5348651						
ANR	5348684	Symbol	desc		5348651						
ANR	5348685	Symbol	base		5348651						
ANR	5348686	Function	TransferDaemon :: call_reaper_callback	544:0:14223:14606							
ANR	5348687	FunctionDef	"TransferDaemon :: call_reaper_callback (long pid , int status , TransferDaemon * td)"		5348686	0					
ANR	5348688	CompoundStatement		546:0:14312:14606	5348686	0					
ANR	5348689	IfStatement	if ( m_reap_func == NULL )		5348686	0					
ANR	5348690	Condition	m_reap_func == NULL	551:5:14488:14506	5348686	0	True				
ANR	5348691	EqualityExpression	m_reap_func == NULL		5348686	0		==			
ANR	5348692	Identifier	m_reap_func		5348686	0					
ANR	5348693	Identifier	NULL		5348686	1					
ANR	5348694	CompoundStatement		6:26:196:196	5348686	1					
ANR	5348695	ReturnStatement	return TD_ACTION_TERMINATE ;	552:2:14513:14539	5348686	0	True				
ANR	5348696	Identifier	TD_ACTION_TERMINATE		5348686	0					
ANR	5348697	Statement	return	555:1:14546:14551	5348686	1	True				
ANR	5348698	Statement	(	555:8:14553:14553	5348686	2	True				
ANR	5348699	Statement	m_reap_func_this	555:9:14554:14569	5348686	3	True				
ANR	5348700	Statement	->*	555:25:14570:14572	5348686	4	True				
ANR	5348701	Statement	(	555:28:14573:14573	5348686	5	True				
ANR	5348702	Statement	m_reap_func	555:29:14574:14584	5348686	6	True				
ANR	5348703	Statement	)	555:40:14585:14585	5348686	7	True				
ANR	5348704	Statement	)	555:41:14586:14586	5348686	8	True				
ANR	5348705	ExpressionStatement	"pid , status , td"	555:42:14587:14604	5348686	9	True				
ANR	5348706	Expression	"pid , status , td"		5348686	0					
ANR	5348707	Identifier	pid		5348686	0					
ANR	5348708	Expression	"status , td"		5348686	1					
ANR	5348709	Identifier	status		5348686	0					
ANR	5348710	Identifier	td		5348686	1					
ANR	5348711	ReturnType	TdAction		5348686	1					
ANR	5348712	Identifier	TransferDaemon :: call_reaper_callback		5348686	2					
ANR	5348713	ParameterList	"long pid , int status , TransferDaemon * td"		5348686	3					
ANR	5348714	Parameter	long pid	545:37:14270:14277	5348686	0	True				
ANR	5348715	ParameterType	long		5348686	0					
ANR	5348716	Identifier	pid		5348686	1					
ANR	5348717	Parameter	int status	545:47:14280:14289	5348686	1	True				
ANR	5348718	ParameterType	int		5348686	0					
ANR	5348719	Identifier	status		5348686	1					
ANR	5348720	Parameter	TransferDaemon * td	545:59:14292:14309	5348686	2	True				
ANR	5348721	ParameterType	TransferDaemon *		5348686	0					
ANR	5348722	Identifier	td		5348686	1					
ANR	5348723	CFGEntryNode	ENTRY		5348686		True				
ANR	5348724	CFGExitNode	EXIT		5348686		True				
ANR	5348725	Symbol	td		5348686						
ANR	5348726	Symbol	NULL		5348686						
ANR	5348727	Symbol	m_reap_func		5348686						
ANR	5348728	Symbol	TD_ACTION_TERMINATE		5348686						
ANR	5348729	Symbol	pid		5348686						
ANR	5348730	Symbol	status		5348686						
ANR	5348731	Function	TDMan :: TDMan	563:0:14802:15054							
ANR	5348732	FunctionDef	TDMan :: TDMan ()		5348731	0					
ANR	5348733	CompoundStatement		564:0:14817:15054	5348731	0					
ANR	5348734	ExpressionStatement	"m_td_table = new HashTable < MyString , TransferDaemon * > ( 200 , hashFuncMyString )"	565:1:14820:14899	5348731	0	True				
ANR	5348735	AssignmentExpression	"m_td_table = new HashTable < MyString , TransferDaemon * > ( 200 , hashFuncMyString )"		5348731	0		=			
ANR	5348736	Identifier	m_td_table		5348731	0					
ANR	5348737	Expression	"200 , hashFuncMyString"		5348731	1					
ANR	5348738	PrimaryExpression	200		5348731	0					
ANR	5348739	Identifier	hashFuncMyString		5348731	1					
ANR	5348740	ExpressionStatement	"m_id_table = new HashTable < MyString , MyString > ( 200 , hashFuncMyString )"	567:1:14902:14974	5348731	1	True				
ANR	5348741	AssignmentExpression	"m_id_table = new HashTable < MyString , MyString > ( 200 , hashFuncMyString )"		5348731	0		=			
ANR	5348742	Identifier	m_id_table		5348731	0					
ANR	5348743	Expression	"200 , hashFuncMyString"		5348731	1					
ANR	5348744	PrimaryExpression	200		5348731	0					
ANR	5348745	Identifier	hashFuncMyString		5348731	1					
ANR	5348746	ExpressionStatement	"m_td_pid_table = new HashTable < long , TransferDaemon * > ( 200 , hashFuncLong )"	569:1:14977:15052	5348731	2	True				
ANR	5348747	AssignmentExpression	"m_td_pid_table = new HashTable < long , TransferDaemon * > ( 200 , hashFuncLong )"		5348731	0		=			
ANR	5348748	Identifier	m_td_pid_table		5348731	0					
ANR	5348749	Expression	"200 , hashFuncLong"		5348731	1					
ANR	5348750	PrimaryExpression	200		5348731	0					
ANR	5348751	Identifier	hashFuncLong		5348731	1					
ANR	5348752	Identifier	TDMan :: TDMan		5348731	1					
ANR	5348753	ParameterList			5348731	2					
ANR	5348754	CFGEntryNode	ENTRY		5348731		True				
ANR	5348755	CFGExitNode	EXIT		5348731		True				
ANR	5348756	Symbol	m_td_pid_table		5348731						
ANR	5348757	Symbol	hashFuncMyString		5348731						
ANR	5348758	Symbol	hashFuncLong		5348731						
ANR	5348759	Symbol	m_id_table		5348731						
ANR	5348760	Symbol	m_td_table		5348731						
ANR	5348761	Function	TDMan :: ~TDMan	573:0:15057:15214							
ANR	5348762	FunctionDef	TDMan :: ~TDMan ()		5348761	0					
ANR	5348763	CompoundStatement		574:0:15073:15214	5348761	0					
ANR	5348764	Statement	delete	576:1:15151:15156	5348761	0	True				
ANR	5348765	ExpressionStatement	m_td_table	576:8:15158:15168	5348761	1	True				
ANR	5348766	Identifier	m_td_table		5348761	0					
ANR	5348767	Statement	delete	577:1:15171:15176	5348761	2	True				
ANR	5348768	ExpressionStatement	m_id_table	577:8:15178:15188	5348761	3	True				
ANR	5348769	Identifier	m_id_table		5348761	0					
ANR	5348770	Statement	delete	578:1:15191:15196	5348761	4	True				
ANR	5348771	ExpressionStatement	m_td_pid_table	578:8:15198:15212	5348761	5	True				
ANR	5348772	Identifier	m_td_pid_table		5348761	0					
ANR	5348773	Identifier	TDMan :: ~TDMan		5348761	1					
ANR	5348774	ParameterList			5348761	2					
ANR	5348775	CFGEntryNode	ENTRY		5348761		True				
ANR	5348776	CFGExitNode	EXIT		5348761		True				
ANR	5348777	Function	TDMan :: register_handlers	581:0:15217:15428							
ANR	5348778	FunctionDef	TDMan :: register_handlers ()		5348777	0					
ANR	5348779	CompoundStatement		582:0:15253:15428	5348777	0					
ANR	5348780	ExpressionStatement	"daemonCore -> Register_Command ( TRANSFERD_REGISTER , ""TRANSFERD_REGISTER"" , ( CommandHandlercpp ) & TDMan :: transferd_registration , ""transferd_registration"" , this , WRITE )"	583:2:15257:15426	5348777	0	True				
ANR	5348781	CallExpression	"daemonCore -> Register_Command ( TRANSFERD_REGISTER , ""TRANSFERD_REGISTER"" , ( CommandHandlercpp ) & TDMan :: transferd_registration , ""transferd_registration"" , this , WRITE )"		5348777	0					
ANR	5348782	Callee	daemonCore -> Register_Command		5348777	0					
ANR	5348783	PtrMemberAccess	daemonCore -> Register_Command		5348777	0					
ANR	5348784	Identifier	daemonCore		5348777	0					
ANR	5348785	Identifier	Register_Command		5348777	1					
ANR	5348786	ArgumentList	TRANSFERD_REGISTER		5348777	1					
ANR	5348787	Argument	TRANSFERD_REGISTER		5348777	0					
ANR	5348788	Identifier	TRANSFERD_REGISTER		5348777	0					
ANR	5348789	Argument	"""TRANSFERD_REGISTER"""		5348777	1					
ANR	5348790	PrimaryExpression	"""TRANSFERD_REGISTER"""		5348777	0					
ANR	5348791	Argument	( CommandHandlercpp ) & TDMan :: transferd_registration		5348777	2					
ANR	5348792	CastExpression	( CommandHandlercpp ) & TDMan :: transferd_registration		5348777	0					
ANR	5348793	CastTarget	CommandHandlercpp		5348777	0					
ANR	5348794	UnaryOperationExpression	& TDMan :: transferd_registration		5348777	1					
ANR	5348795	UnaryOperator	&		5348777	0					
ANR	5348796	Identifier	TDMan :: transferd_registration		5348777	1					
ANR	5348797	Argument	"""transferd_registration"""		5348777	3					
ANR	5348798	PrimaryExpression	"""transferd_registration"""		5348777	0					
ANR	5348799	Argument	this		5348777	4					
ANR	5348800	Identifier	this		5348777	0					
ANR	5348801	Argument	WRITE		5348777	5					
ANR	5348802	Identifier	WRITE		5348777	0					
ANR	5348803	ReturnType	void		5348777	1					
ANR	5348804	Identifier	TDMan :: register_handlers		5348777	2					
ANR	5348805	ParameterList			5348777	3					
ANR	5348806	CFGEntryNode	ENTRY		5348777		True				
ANR	5348807	CFGExitNode	EXIT		5348777		True				
ANR	5348808	Symbol	daemonCore		5348777						
ANR	5348809	Symbol	this		5348777						
ANR	5348810	Symbol	TRANSFERD_REGISTER		5348777						
ANR	5348811	Symbol	& TDMan :: transferd_registration		5348777						
ANR	5348812	Symbol	WRITE		5348777						
ANR	5348813	Function	TDMan :: find_td_by_user	589:0:15431:15631							
ANR	5348814	FunctionDef	TDMan :: find_td_by_user (MyString fquser)		5348813	0					
ANR	5348815	CompoundStatement		591:0:15487:15631	5348813	0					
ANR	5348816	IdentifierDeclStatement	int ret ;	592:1:15490:15497	5348813	0	True				
ANR	5348817	IdentifierDecl	ret		5348813	0					
ANR	5348818	IdentifierDeclType	int		5348813	0					
ANR	5348819	Identifier	ret		5348813	1					
ANR	5348820	IdentifierDeclStatement	TransferDaemon * td = NULL ;	593:1:15500:15525	5348813	1	True				
ANR	5348821	IdentifierDecl	* td = NULL		5348813	0					
ANR	5348822	IdentifierDeclType	TransferDaemon *		5348813	0					
ANR	5348823	Identifier	td		5348813	1					
ANR	5348824	AssignmentExpression	* td = NULL		5348813	2		=			
ANR	5348825	Identifier	NULL		5348813	0					
ANR	5348826	Identifier	NULL		5348813	1					
ANR	5348827	ExpressionStatement	"ret = m_td_table -> lookup ( fquser , td )"	595:1:15529:15565	5348813	2	True				
ANR	5348828	AssignmentExpression	"ret = m_td_table -> lookup ( fquser , td )"		5348813	0		=			
ANR	5348829	Identifier	ret		5348813	0					
ANR	5348830	CallExpression	"m_td_table -> lookup ( fquser , td )"		5348813	1					
ANR	5348831	Callee	m_td_table -> lookup		5348813	0					
ANR	5348832	PtrMemberAccess	m_td_table -> lookup		5348813	0					
ANR	5348833	Identifier	m_td_table		5348813	0					
ANR	5348834	Identifier	lookup		5348813	1					
ANR	5348835	ArgumentList	fquser		5348813	1					
ANR	5348836	Argument	fquser		5348813	0					
ANR	5348837	Identifier	fquser		5348813	0					
ANR	5348838	Argument	td		5348813	1					
ANR	5348839	Identifier	td		5348813	0					
ANR	5348840	IfStatement	if ( ret != 0 )		5348813	3					
ANR	5348841	Condition	ret != 0	597:5:15573:15580	5348813	0	True				
ANR	5348842	EqualityExpression	ret != 0		5348813	0		!=			
ANR	5348843	Identifier	ret		5348813	0					
ANR	5348844	PrimaryExpression	0		5348813	1					
ANR	5348845	CompoundStatement		7:15:95:95	5348813	1					
ANR	5348846	ReturnStatement	return NULL ;	599:2:15602:15613	5348813	0	True				
ANR	5348847	Identifier	NULL		5348813	0					
ANR	5348848	ReturnStatement	return td ;	602:1:15620:15629	5348813	4	True				
ANR	5348849	Identifier	td		5348813	0					
ANR	5348850	ReturnType	TransferDaemon *		5348813	1					
ANR	5348851	Identifier	TDMan :: find_td_by_user		5348813	2					
ANR	5348852	ParameterList	MyString fquser		5348813	3					
ANR	5348853	Parameter	MyString fquser	590:23:15470:15484	5348813	0	True				
ANR	5348854	ParameterType	MyString		5348813	0					
ANR	5348855	Identifier	fquser		5348813	1					
ANR	5348856	CFGEntryNode	ENTRY		5348813		True				
ANR	5348857	CFGExitNode	EXIT		5348813		True				
ANR	5348858	Symbol	ret		5348813						
ANR	5348859	Symbol	td		5348813						
ANR	5348860	Symbol	NULL		5348813						
ANR	5348861	Symbol	fquser		5348813						
ANR	5348862	Symbol	* m_td_table		5348813						
ANR	5348863	Symbol	m_td_table -> lookup		5348813						
ANR	5348864	Symbol	m_td_table		5348813						
ANR	5348865	Function	TDMan :: find_td_by_user	605:0:15634:15751							
ANR	5348866	FunctionDef	TDMan :: find_td_by_user (char * fquser)		5348865	0					
ANR	5348867	CompoundStatement		607:0:15687:15751	5348865	0					
ANR	5348868	IdentifierDeclStatement	MyString str ;	608:1:15690:15702	5348865	0	True				
ANR	5348869	IdentifierDecl	str		5348865	0					
ANR	5348870	IdentifierDeclType	MyString		5348865	0					
ANR	5348871	Identifier	str		5348865	1					
ANR	5348872	ExpressionStatement	str = fquser	610:1:15706:15718	5348865	1	True				
ANR	5348873	AssignmentExpression	str = fquser		5348865	0		=			
ANR	5348874	Identifier	str		5348865	0					
ANR	5348875	Identifier	fquser		5348865	1					
ANR	5348876	ReturnStatement	return find_td_by_user ( str ) ;	612:1:15722:15749	5348865	2	True				
ANR	5348877	CallExpression	find_td_by_user ( str )		5348865	0					
ANR	5348878	Callee	find_td_by_user		5348865	0					
ANR	5348879	Identifier	find_td_by_user		5348865	0					
ANR	5348880	ArgumentList	str		5348865	1					
ANR	5348881	Argument	str		5348865	0					
ANR	5348882	Identifier	str		5348865	0					
ANR	5348883	ReturnType	TransferDaemon *		5348865	1					
ANR	5348884	Identifier	TDMan :: find_td_by_user		5348865	2					
ANR	5348885	ParameterList	char * fquser		5348865	3					
ANR	5348886	Parameter	char * fquser	606:23:15673:15684	5348865	0	True				
ANR	5348887	ParameterType	char *		5348865	0					
ANR	5348888	Identifier	fquser		5348865	1					
ANR	5348889	CFGEntryNode	ENTRY		5348865		True				
ANR	5348890	CFGExitNode	EXIT		5348865		True				
ANR	5348891	Symbol	str		5348865						
ANR	5348892	Symbol	fquser		5348865						
ANR	5348893	Symbol	find_td_by_user		5348865						
ANR	5348894	Function	TDMan :: find_td_by_ident	615:0:15754:16146							
ANR	5348895	FunctionDef	TDMan :: find_td_by_ident (MyString id)		5348894	0					
ANR	5348896	CompoundStatement		617:0:15807:16146	5348894	0					
ANR	5348897	IdentifierDeclStatement	int ret ;	618:1:15810:15817	5348894	0	True				
ANR	5348898	IdentifierDecl	ret		5348894	0					
ANR	5348899	IdentifierDeclType	int		5348894	0					
ANR	5348900	Identifier	ret		5348894	1					
ANR	5348901	IdentifierDeclStatement	MyString fquser ;	619:1:15820:15835	5348894	1	True				
ANR	5348902	IdentifierDecl	fquser		5348894	0					
ANR	5348903	IdentifierDeclType	MyString		5348894	0					
ANR	5348904	Identifier	fquser		5348894	1					
ANR	5348905	IdentifierDeclStatement	TransferDaemon * td = NULL ;	620:1:15838:15863	5348894	2	True				
ANR	5348906	IdentifierDecl	* td = NULL		5348894	0					
ANR	5348907	IdentifierDeclType	TransferDaemon *		5348894	0					
ANR	5348908	Identifier	td		5348894	1					
ANR	5348909	AssignmentExpression	* td = NULL		5348894	2		=			
ANR	5348910	Identifier	NULL		5348894	0					
ANR	5348911	Identifier	NULL		5348894	1					
ANR	5348912	ExpressionStatement	"ret = m_id_table -> lookup ( id , fquser )"	623:1:15914:15950	5348894	3	True				
ANR	5348913	AssignmentExpression	"ret = m_id_table -> lookup ( id , fquser )"		5348894	0		=			
ANR	5348914	Identifier	ret		5348894	0					
ANR	5348915	CallExpression	"m_id_table -> lookup ( id , fquser )"		5348894	1					
ANR	5348916	Callee	m_id_table -> lookup		5348894	0					
ANR	5348917	PtrMemberAccess	m_id_table -> lookup		5348894	0					
ANR	5348918	Identifier	m_id_table		5348894	0					
ANR	5348919	Identifier	lookup		5348894	1					
ANR	5348920	ArgumentList	id		5348894	1					
ANR	5348921	Argument	id		5348894	0					
ANR	5348922	Identifier	id		5348894	0					
ANR	5348923	Argument	fquser		5348894	1					
ANR	5348924	Identifier	fquser		5348894	0					
ANR	5348925	IfStatement	if ( ret != 0 )		5348894	4					
ANR	5348926	Condition	ret != 0	624:5:15957:15964	5348894	0	True				
ANR	5348927	EqualityExpression	ret != 0		5348894	0		!=			
ANR	5348928	Identifier	ret		5348894	0					
ANR	5348929	PrimaryExpression	0		5348894	1					
ANR	5348930	CompoundStatement		8:15:159:159	5348894	1					
ANR	5348931	ReturnStatement	return NULL ;	626:2:15986:15997	5348894	0	True				
ANR	5348932	Identifier	NULL		5348894	0					
ANR	5348933	ExpressionStatement	"ret = m_td_table -> lookup ( fquser , td )"	630:1:16045:16081	5348894	5	True				
ANR	5348934	AssignmentExpression	"ret = m_td_table -> lookup ( fquser , td )"		5348894	0		=			
ANR	5348935	Identifier	ret		5348894	0					
ANR	5348936	CallExpression	"m_td_table -> lookup ( fquser , td )"		5348894	1					
ANR	5348937	Callee	m_td_table -> lookup		5348894	0					
ANR	5348938	PtrMemberAccess	m_td_table -> lookup		5348894	0					
ANR	5348939	Identifier	m_td_table		5348894	0					
ANR	5348940	Identifier	lookup		5348894	1					
ANR	5348941	ArgumentList	fquser		5348894	1					
ANR	5348942	Argument	fquser		5348894	0					
ANR	5348943	Identifier	fquser		5348894	0					
ANR	5348944	Argument	td		5348894	1					
ANR	5348945	Identifier	td		5348894	0					
ANR	5348946	IfStatement	if ( ret != 0 )		5348894	6					
ANR	5348947	Condition	ret != 0	631:5:16088:16095	5348894	0	True				
ANR	5348948	EqualityExpression	ret != 0		5348894	0		!=			
ANR	5348949	Identifier	ret		5348894	0					
ANR	5348950	PrimaryExpression	0		5348894	1					
ANR	5348951	CompoundStatement		15:15:290:290	5348894	1					
ANR	5348952	ReturnStatement	return NULL ;	633:2:16117:16128	5348894	0	True				
ANR	5348953	Identifier	NULL		5348894	0					
ANR	5348954	ReturnStatement	return td ;	636:1:16135:16144	5348894	7	True				
ANR	5348955	Identifier	td		5348894	0					
ANR	5348956	ReturnType	TransferDaemon *		5348894	1					
ANR	5348957	Identifier	TDMan :: find_td_by_ident		5348894	2					
ANR	5348958	ParameterList	MyString id		5348894	3					
ANR	5348959	Parameter	MyString id	616:24:15794:15804	5348894	0	True				
ANR	5348960	ParameterType	MyString		5348894	0					
ANR	5348961	Identifier	id		5348894	1					
ANR	5348962	CFGEntryNode	ENTRY		5348894		True				
ANR	5348963	CFGExitNode	EXIT		5348894		True				
ANR	5348964	Symbol	ret		5348894						
ANR	5348965	Symbol	td		5348894						
ANR	5348966	Symbol	NULL		5348894						
ANR	5348967	Symbol	m_id_table -> lookup		5348894						
ANR	5348968	Symbol	id		5348894						
ANR	5348969	Symbol	fquser		5348894						
ANR	5348970	Symbol	m_id_table		5348894						
ANR	5348971	Symbol	* m_td_table		5348894						
ANR	5348972	Symbol	m_td_table -> lookup		5348894						
ANR	5348973	Symbol	* m_id_table		5348894						
ANR	5348974	Symbol	m_td_table		5348894						
ANR	5348975	Function	TDMan :: find_td_by_ident	639:0:16149:16263							
ANR	5348976	FunctionDef	TDMan :: find_td_by_ident (char * ident)		5348975	0					
ANR	5348977	CompoundStatement		641:0:16202:16263	5348975	0					
ANR	5348978	IdentifierDeclStatement	MyString id ;	642:1:16205:16216	5348975	0	True				
ANR	5348979	IdentifierDecl	id		5348975	0					
ANR	5348980	IdentifierDeclType	MyString		5348975	0					
ANR	5348981	Identifier	id		5348975	1					
ANR	5348982	ExpressionStatement	id = ident	644:1:16220:16230	5348975	1	True				
ANR	5348983	AssignmentExpression	id = ident		5348975	0		=			
ANR	5348984	Identifier	id		5348975	0					
ANR	5348985	Identifier	ident		5348975	1					
ANR	5348986	ReturnStatement	return find_td_by_ident ( id ) ;	646:1:16234:16261	5348975	2	True				
ANR	5348987	CallExpression	find_td_by_ident ( id )		5348975	0					
ANR	5348988	Callee	find_td_by_ident		5348975	0					
ANR	5348989	Identifier	find_td_by_ident		5348975	0					
ANR	5348990	ArgumentList	id		5348975	1					
ANR	5348991	Argument	id		5348975	0					
ANR	5348992	Identifier	id		5348975	0					
ANR	5348993	ReturnType	TransferDaemon *		5348975	1					
ANR	5348994	Identifier	TDMan :: find_td_by_ident		5348975	2					
ANR	5348995	ParameterList	char * ident		5348975	3					
ANR	5348996	Parameter	char * ident	640:24:16189:16199	5348975	0	True				
ANR	5348997	ParameterType	char *		5348975	0					
ANR	5348998	Identifier	ident		5348975	1					
ANR	5348999	CFGEntryNode	ENTRY		5348975		True				
ANR	5349000	CFGExitNode	EXIT		5348975		True				
ANR	5349001	Symbol	find_td_by_ident		5348975						
ANR	5349002	Symbol	ident		5348975						
ANR	5349003	Symbol	id		5348975						
ANR	5349004	Function	TDMan :: invoke_a_td	650:0:16267:19537							
ANR	5349005	FunctionDef	TDMan :: invoke_a_td (TransferDaemon * td)		5349004	0					
ANR	5349006	CompoundStatement		652:0:16311:19537	5349004	0					
ANR	5349007	IdentifierDeclStatement	TransferDaemon * found_td = NULL ;	653:1:16314:16345	5349004	0	True				
ANR	5349008	IdentifierDecl	* found_td = NULL		5349004	0					
ANR	5349009	IdentifierDeclType	TransferDaemon *		5349004	0					
ANR	5349010	Identifier	found_td		5349004	1					
ANR	5349011	AssignmentExpression	* found_td = NULL		5349004	2		=			
ANR	5349012	Identifier	NULL		5349004	0					
ANR	5349013	Identifier	NULL		5349004	1					
ANR	5349014	IdentifierDeclStatement	MyString found_id ;	654:1:16348:16365	5349004	1	True				
ANR	5349015	IdentifierDecl	found_id		5349004	0					
ANR	5349016	IdentifierDeclType	MyString		5349004	0					
ANR	5349017	Identifier	found_id		5349004	1					
ANR	5349018	IdentifierDeclStatement	ArgList args ;	655:1:16368:16380	5349004	2	True				
ANR	5349019	IdentifierDecl	args		5349004	0					
ANR	5349020	IdentifierDeclType	ArgList		5349004	0					
ANR	5349021	Identifier	args		5349004	1					
ANR	5349022	IdentifierDeclStatement	char * td_path = NULL ;	656:1:16383:16403	5349004	3	True				
ANR	5349023	IdentifierDecl	* td_path = NULL		5349004	0					
ANR	5349024	IdentifierDeclType	char *		5349004	0					
ANR	5349025	Identifier	td_path		5349004	1					
ANR	5349026	AssignmentExpression	* td_path = NULL		5349004	2		=			
ANR	5349027	Identifier	NULL		5349004	0					
ANR	5349028	Identifier	NULL		5349004	1					
ANR	5349029	IdentifierDeclStatement	pid_t pid ;	657:1:16406:16415	5349004	4	True				
ANR	5349030	IdentifierDecl	pid		5349004	0					
ANR	5349031	IdentifierDeclType	pid_t		5349004	0					
ANR	5349032	Identifier	pid		5349004	1					
ANR	5349033	IdentifierDeclStatement	MyString args_display ;	658:1:16418:16439	5349004	5	True				
ANR	5349034	IdentifierDecl	args_display		5349004	0					
ANR	5349035	IdentifierDeclType	MyString		5349004	0					
ANR	5349036	Identifier	args_display		5349004	1					
ANR	5349037	Statement	static	659:1:16442:16447	5349004	6	True				
ANR	5349038	IdentifierDeclStatement	int rid = - 1 ;	659:8:16449:16461	5349004	7	True				
ANR	5349039	IdentifierDecl	rid = - 1		5349004	0					
ANR	5349040	IdentifierDeclType	int		5349004	0					
ANR	5349041	Identifier	rid		5349004	1					
ANR	5349042	AssignmentExpression	rid = - 1		5349004	2		=			
ANR	5349043	Identifier	rid		5349004	0					
ANR	5349044	UnaryOperationExpression	- 1		5349004	1					
ANR	5349045	UnaryOperator	-		5349004	0					
ANR	5349046	PrimaryExpression	1		5349004	1					
ANR	5349047	ExpressionStatement	ASSERT ( td != NULL )	661:1:16465:16483	5349004	8	True				
ANR	5349048	CallExpression	ASSERT ( td != NULL )		5349004	0					
ANR	5349049	Callee	ASSERT		5349004	0					
ANR	5349050	Identifier	ASSERT		5349004	0					
ANR	5349051	ArgumentList	td != NULL		5349004	1					
ANR	5349052	Argument	td != NULL		5349004	0					
ANR	5349053	EqualityExpression	td != NULL		5349004	0		!=			
ANR	5349054	Identifier	td		5349004	0					
ANR	5349055	Identifier	NULL		5349004	1					
ANR	5349056	SwitchStatement	switch ( td -> get_status ( ) )		5349004	9					
ANR	5349057	Condition	td -> get_status ( )	666:8:16621:16636	5349004	0	True				
ANR	5349058	CallExpression	td -> get_status ( )		5349004	0					
ANR	5349059	Callee	td -> get_status		5349004	0					
ANR	5349060	PtrMemberAccess	td -> get_status		5349004	0					
ANR	5349061	Identifier	td		5349004	0					
ANR	5349062	Identifier	get_status		5349004	1					
ANR	5349063	ArgumentList			5349004	1					
ANR	5349064	CompoundStatement		15:26:327:327	5349004	1					
ANR	5349065	Label	case TD_PRE_INVOKED :	667:2:16643:16662	5349004	0	True				
ANR	5349066	Identifier	TD_PRE_INVOKED		5349004	0					
ANR	5349067	BreakStatement	break ;	669:3:16682:16687	5349004	1	True				
ANR	5349068	Label	case TD_INVOKED :	670:2:16691:16706	5349004	2	True				
ANR	5349069	Identifier	TD_INVOKED		5349004	0					
ANR	5349070	BreakStatement	break ;	672:3:16771:16776	5349004	3	True				
ANR	5349071	Label	case TD_REGISTERED :	673:2:16780:16798	5349004	4	True				
ANR	5349072	Identifier	TD_REGISTERED		5349004	0					
ANR	5349073	ReturnStatement	return false ;	675:3:16869:16881	5349004	5	True				
ANR	5349074	Identifier	false		5349004	0					
ANR	5349075	BreakStatement	break ;	676:3:16886:16891	5349004	6	True				
ANR	5349076	Label	case TD_MIA :	677:2:16895:16906	5349004	7	True				
ANR	5349077	Identifier	TD_MIA		5349004	0					
ANR	5349078	BreakStatement	break ;	679:3:16937:16942	5349004	8	True				
ANR	5349079	IfStatement	"if ( m_td_table -> lookup ( td -> get_fquser ( ) , found_td ) != 0 )"		5349004	10					
ANR	5349080	Condition	"m_td_table -> lookup ( td -> get_fquser ( ) , found_td ) != 0"	690:5:17223:17273	5349004	0	True				
ANR	5349081	EqualityExpression	"m_td_table -> lookup ( td -> get_fquser ( ) , found_td ) != 0"		5349004	0		!=			
ANR	5349082	CallExpression	"m_td_table -> lookup ( td -> get_fquser ( ) , found_td )"		5349004	0					
ANR	5349083	Callee	m_td_table -> lookup		5349004	0					
ANR	5349084	PtrMemberAccess	m_td_table -> lookup		5349004	0					
ANR	5349085	Identifier	m_td_table		5349004	0					
ANR	5349086	Identifier	lookup		5349004	1					
ANR	5349087	ArgumentList	td -> get_fquser ( )		5349004	1					
ANR	5349088	Argument	td -> get_fquser ( )		5349004	0					
ANR	5349089	CallExpression	td -> get_fquser ( )		5349004	0					
ANR	5349090	Callee	td -> get_fquser		5349004	0					
ANR	5349091	PtrMemberAccess	td -> get_fquser		5349004	0					
ANR	5349092	Identifier	td		5349004	0					
ANR	5349093	Identifier	get_fquser		5349004	1					
ANR	5349094	ArgumentList			5349004	1					
ANR	5349095	Argument	found_td		5349004	1					
ANR	5349096	Identifier	found_td		5349004	0					
ANR	5349097	PrimaryExpression	0		5349004	1					
ANR	5349098	CompoundStatement		39:58:964:964	5349004	1					
ANR	5349099	ExpressionStatement	"m_td_table -> insert ( td -> get_fquser ( ) , td )"	691:2:17280:17320	5349004	0	True				
ANR	5349100	CallExpression	"m_td_table -> insert ( td -> get_fquser ( ) , td )"		5349004	0					
ANR	5349101	Callee	m_td_table -> insert		5349004	0					
ANR	5349102	PtrMemberAccess	m_td_table -> insert		5349004	0					
ANR	5349103	Identifier	m_td_table		5349004	0					
ANR	5349104	Identifier	insert		5349004	1					
ANR	5349105	ArgumentList	td -> get_fquser ( )		5349004	1					
ANR	5349106	Argument	td -> get_fquser ( )		5349004	0					
ANR	5349107	CallExpression	td -> get_fquser ( )		5349004	0					
ANR	5349108	Callee	td -> get_fquser		5349004	0					
ANR	5349109	PtrMemberAccess	td -> get_fquser		5349004	0					
ANR	5349110	Identifier	td		5349004	0					
ANR	5349111	Identifier	get_fquser		5349004	1					
ANR	5349112	ArgumentList			5349004	1					
ANR	5349113	Argument	td		5349004	1					
ANR	5349114	Identifier	td		5349004	0					
ANR	5349115	IfStatement	"if ( m_id_table -> lookup ( td -> get_id ( ) , found_id ) != 0 )"		5349004	11					
ANR	5349116	Condition	"m_id_table -> lookup ( td -> get_id ( ) , found_id ) != 0"	695:5:17369:17415	5349004	0	True				
ANR	5349117	EqualityExpression	"m_id_table -> lookup ( td -> get_id ( ) , found_id ) != 0"		5349004	0		!=			
ANR	5349118	CallExpression	"m_id_table -> lookup ( td -> get_id ( ) , found_id )"		5349004	0					
ANR	5349119	Callee	m_id_table -> lookup		5349004	0					
ANR	5349120	PtrMemberAccess	m_id_table -> lookup		5349004	0					
ANR	5349121	Identifier	m_id_table		5349004	0					
ANR	5349122	Identifier	lookup		5349004	1					
ANR	5349123	ArgumentList	td -> get_id ( )		5349004	1					
ANR	5349124	Argument	td -> get_id ( )		5349004	0					
ANR	5349125	CallExpression	td -> get_id ( )		5349004	0					
ANR	5349126	Callee	td -> get_id		5349004	0					
ANR	5349127	PtrMemberAccess	td -> get_id		5349004	0					
ANR	5349128	Identifier	td		5349004	0					
ANR	5349129	Identifier	get_id		5349004	1					
ANR	5349130	ArgumentList			5349004	1					
ANR	5349131	Argument	found_id		5349004	1					
ANR	5349132	Identifier	found_id		5349004	0					
ANR	5349133	PrimaryExpression	0		5349004	1					
ANR	5349134	CompoundStatement		44:54:1106:1106	5349004	1					
ANR	5349135	ExpressionStatement	"m_id_table -> insert ( td -> get_id ( ) , td -> get_fquser ( ) )"	696:2:17422:17472	5349004	0	True				
ANR	5349136	CallExpression	"m_id_table -> insert ( td -> get_id ( ) , td -> get_fquser ( ) )"		5349004	0					
ANR	5349137	Callee	m_id_table -> insert		5349004	0					
ANR	5349138	PtrMemberAccess	m_id_table -> insert		5349004	0					
ANR	5349139	Identifier	m_id_table		5349004	0					
ANR	5349140	Identifier	insert		5349004	1					
ANR	5349141	ArgumentList	td -> get_id ( )		5349004	1					
ANR	5349142	Argument	td -> get_id ( )		5349004	0					
ANR	5349143	CallExpression	td -> get_id ( )		5349004	0					
ANR	5349144	Callee	td -> get_id		5349004	0					
ANR	5349145	PtrMemberAccess	td -> get_id		5349004	0					
ANR	5349146	Identifier	td		5349004	0					
ANR	5349147	Identifier	get_id		5349004	1					
ANR	5349148	ArgumentList			5349004	1					
ANR	5349149	Argument	td -> get_fquser ( )		5349004	1					
ANR	5349150	CallExpression	td -> get_fquser ( )		5349004	0					
ANR	5349151	Callee	td -> get_fquser		5349004	0					
ANR	5349152	PtrMemberAccess	td -> get_fquser		5349004	0					
ANR	5349153	Identifier	td		5349004	0					
ANR	5349154	Identifier	get_fquser		5349004	1					
ANR	5349155	ArgumentList			5349004	1					
ANR	5349156	ExpressionStatement	"td_path = param ( ""TRANSFERD"" )"	703:1:17599:17627	5349004	12	True				
ANR	5349157	AssignmentExpression	"td_path = param ( ""TRANSFERD"" )"		5349004	0		=			
ANR	5349158	Identifier	td_path		5349004	0					
ANR	5349159	CallExpression	"param ( ""TRANSFERD"" )"		5349004	1					
ANR	5349160	Callee	param		5349004	0					
ANR	5349161	Identifier	param		5349004	0					
ANR	5349162	ArgumentList	"""TRANSFERD"""		5349004	1					
ANR	5349163	Argument	"""TRANSFERD"""		5349004	0					
ANR	5349164	PrimaryExpression	"""TRANSFERD"""		5349004	0					
ANR	5349165	IfStatement	if ( td_path == NULL )		5349004	13					
ANR	5349166	Condition	td_path == NULL	704:5:17634:17648	5349004	0	True				
ANR	5349167	EqualityExpression	td_path == NULL		5349004	0		==			
ANR	5349168	Identifier	td_path		5349004	0					
ANR	5349169	Identifier	NULL		5349004	1					
ANR	5349170	CompoundStatement		53:22:1339:1339	5349004	1					
ANR	5349171	ExpressionStatement	"EXCEPT ( ""TRANSFERD must be defined in the config file!"" )"	705:2:17655:17710	5349004	0	True				
ANR	5349172	CallExpression	"EXCEPT ( ""TRANSFERD must be defined in the config file!"" )"		5349004	0					
ANR	5349173	Callee	EXCEPT		5349004	0					
ANR	5349174	Identifier	EXCEPT		5349004	0					
ANR	5349175	ArgumentList	"""TRANSFERD must be defined in the config file!"""		5349004	1					
ANR	5349176	Argument	"""TRANSFERD must be defined in the config file!"""		5349004	0					
ANR	5349177	PrimaryExpression	"""TRANSFERD must be defined in the config file!"""		5349004	0					
ANR	5349178	ExpressionStatement	args . AppendArg ( condor_basename ( td_path ) )	712:1:17870:17910	5349004	14	True				
ANR	5349179	CallExpression	args . AppendArg ( condor_basename ( td_path ) )		5349004	0					
ANR	5349180	Callee	args . AppendArg		5349004	0					
ANR	5349181	MemberAccess	args . AppendArg		5349004	0					
ANR	5349182	Identifier	args		5349004	0					
ANR	5349183	Identifier	AppendArg		5349004	1					
ANR	5349184	ArgumentList	condor_basename ( td_path )		5349004	1					
ANR	5349185	Argument	condor_basename ( td_path )		5349004	0					
ANR	5349186	CallExpression	condor_basename ( td_path )		5349004	0					
ANR	5349187	Callee	condor_basename		5349004	0					
ANR	5349188	Identifier	condor_basename		5349004	0					
ANR	5349189	ArgumentList	td_path		5349004	1					
ANR	5349190	Argument	td_path		5349004	0					
ANR	5349191	Identifier	td_path		5349004	0					
ANR	5349192	ExpressionStatement	"args . AppendArg ( ""-f"" )"	715:1:17947:17967	5349004	15	True				
ANR	5349193	CallExpression	"args . AppendArg ( ""-f"" )"		5349004	0					
ANR	5349194	Callee	args . AppendArg		5349004	0					
ANR	5349195	MemberAccess	args . AppendArg		5349004	0					
ANR	5349196	Identifier	args		5349004	0					
ANR	5349197	Identifier	AppendArg		5349004	1					
ANR	5349198	ArgumentList	"""-f"""		5349004	1					
ANR	5349199	Argument	"""-f"""		5349004	0					
ANR	5349200	PrimaryExpression	"""-f"""		5349004	0					
ANR	5349201	ExpressionStatement	"args . AppendArg ( ""--schedd"" )"	718:1:18002:18028	5349004	16	True				
ANR	5349202	CallExpression	"args . AppendArg ( ""--schedd"" )"		5349004	0					
ANR	5349203	Callee	args . AppendArg		5349004	0					
ANR	5349204	MemberAccess	args . AppendArg		5349004	0					
ANR	5349205	Identifier	args		5349004	0					
ANR	5349206	Identifier	AppendArg		5349004	1					
ANR	5349207	ArgumentList	"""--schedd"""		5349004	1					
ANR	5349208	Argument	"""--schedd"""		5349004	0					
ANR	5349209	PrimaryExpression	"""--schedd"""		5349004	0					
ANR	5349210	ExpressionStatement	args . AppendArg ( daemonCore -> InfoCommandSinfulString ( ) )	719:1:18031:18084	5349004	17	True				
ANR	5349211	CallExpression	args . AppendArg ( daemonCore -> InfoCommandSinfulString ( ) )		5349004	0					
ANR	5349212	Callee	args . AppendArg		5349004	0					
ANR	5349213	MemberAccess	args . AppendArg		5349004	0					
ANR	5349214	Identifier	args		5349004	0					
ANR	5349215	Identifier	AppendArg		5349004	1					
ANR	5349216	ArgumentList	daemonCore -> InfoCommandSinfulString ( )		5349004	1					
ANR	5349217	Argument	daemonCore -> InfoCommandSinfulString ( )		5349004	0					
ANR	5349218	CallExpression	daemonCore -> InfoCommandSinfulString ( )		5349004	0					
ANR	5349219	Callee	daemonCore -> InfoCommandSinfulString		5349004	0					
ANR	5349220	PtrMemberAccess	daemonCore -> InfoCommandSinfulString		5349004	0					
ANR	5349221	Identifier	daemonCore		5349004	0					
ANR	5349222	Identifier	InfoCommandSinfulString		5349004	1					
ANR	5349223	ArgumentList			5349004	1					
ANR	5349224	ExpressionStatement	"args . AppendArg ( ""--id"" )"	722:1:18114:18136	5349004	18	True				
ANR	5349225	CallExpression	"args . AppendArg ( ""--id"" )"		5349004	0					
ANR	5349226	Callee	args . AppendArg		5349004	0					
ANR	5349227	MemberAccess	args . AppendArg		5349004	0					
ANR	5349228	Identifier	args		5349004	0					
ANR	5349229	Identifier	AppendArg		5349004	1					
ANR	5349230	ArgumentList	"""--id"""		5349004	1					
ANR	5349231	Argument	"""--id"""		5349004	0					
ANR	5349232	PrimaryExpression	"""--id"""		5349004	0					
ANR	5349233	ExpressionStatement	args . AppendArg ( td -> get_id ( ) )	723:1:18139:18167	5349004	19	True				
ANR	5349234	CallExpression	args . AppendArg ( td -> get_id ( ) )		5349004	0					
ANR	5349235	Callee	args . AppendArg		5349004	0					
ANR	5349236	MemberAccess	args . AppendArg		5349004	0					
ANR	5349237	Identifier	args		5349004	0					
ANR	5349238	Identifier	AppendArg		5349004	1					
ANR	5349239	ArgumentList	td -> get_id ( )		5349004	1					
ANR	5349240	Argument	td -> get_id ( )		5349004	0					
ANR	5349241	CallExpression	td -> get_id ( )		5349004	0					
ANR	5349242	Callee	td -> get_id		5349004	0					
ANR	5349243	PtrMemberAccess	td -> get_id		5349004	0					
ANR	5349244	Identifier	td		5349004	0					
ANR	5349245	Identifier	get_id		5349004	1					
ANR	5349246	ArgumentList			5349004	1					
ANR	5349247	ExpressionStatement	"args . AppendArg ( ""--timeout"" )"	726:1:18231:18258	5349004	20	True				
ANR	5349248	CallExpression	"args . AppendArg ( ""--timeout"" )"		5349004	0					
ANR	5349249	Callee	args . AppendArg		5349004	0					
ANR	5349250	MemberAccess	args . AppendArg		5349004	0					
ANR	5349251	Identifier	args		5349004	0					
ANR	5349252	Identifier	AppendArg		5349004	1					
ANR	5349253	ArgumentList	"""--timeout"""		5349004	1					
ANR	5349254	Argument	"""--timeout"""		5349004	0					
ANR	5349255	PrimaryExpression	"""--timeout"""		5349004	0					
ANR	5349256	ExpressionStatement	args . AppendArg ( 20 * 60 )	727:1:18261:18282	5349004	21	True				
ANR	5349257	CallExpression	args . AppendArg ( 20 * 60 )		5349004	0					
ANR	5349258	Callee	args . AppendArg		5349004	0					
ANR	5349259	MemberAccess	args . AppendArg		5349004	0					
ANR	5349260	Identifier	args		5349004	0					
ANR	5349261	Identifier	AppendArg		5349004	1					
ANR	5349262	ArgumentList	20 * 60		5349004	1					
ANR	5349263	Argument	20 * 60		5349004	0					
ANR	5349264	MultiplicativeExpression	20 * 60		5349004	0		*			
ANR	5349265	PrimaryExpression	20		5349004	0					
ANR	5349266	PrimaryExpression	60		5349004	1					
ANR	5349267	IfStatement	if ( rid == - 1 )		5349004	22					
ANR	5349268	Condition	rid == - 1	733:5:18479:18487	5349004	0	True				
ANR	5349269	EqualityExpression	rid == - 1		5349004	0		==			
ANR	5349270	Identifier	rid		5349004	0					
ANR	5349271	UnaryOperationExpression	- 1		5349004	1					
ANR	5349272	UnaryOperator	-		5349004	0					
ANR	5349273	PrimaryExpression	1		5349004	1					
ANR	5349274	CompoundStatement		82:16:2178:2178	5349004	1					
ANR	5349275	ExpressionStatement	"rid = daemonCore -> Register_Reaper ( ""transferd_reaper"" , ( ReaperHandlercpp ) & TDMan :: transferd_reaper , ""transferd_reaper"" , this )"	734:2:18494:18626	5349004	0	True				
ANR	5349276	AssignmentExpression	"rid = daemonCore -> Register_Reaper ( ""transferd_reaper"" , ( ReaperHandlercpp ) & TDMan :: transferd_reaper , ""transferd_reaper"" , this )"		5349004	0		=			
ANR	5349277	Identifier	rid		5349004	0					
ANR	5349278	CallExpression	"daemonCore -> Register_Reaper ( ""transferd_reaper"" , ( ReaperHandlercpp ) & TDMan :: transferd_reaper , ""transferd_reaper"" , this )"		5349004	1					
ANR	5349279	Callee	daemonCore -> Register_Reaper		5349004	0					
ANR	5349280	PtrMemberAccess	daemonCore -> Register_Reaper		5349004	0					
ANR	5349281	Identifier	daemonCore		5349004	0					
ANR	5349282	Identifier	Register_Reaper		5349004	1					
ANR	5349283	ArgumentList	"""transferd_reaper"""		5349004	1					
ANR	5349284	Argument	"""transferd_reaper"""		5349004	0					
ANR	5349285	PrimaryExpression	"""transferd_reaper"""		5349004	0					
ANR	5349286	Argument	( ReaperHandlercpp ) & TDMan :: transferd_reaper		5349004	1					
ANR	5349287	CastExpression	( ReaperHandlercpp ) & TDMan :: transferd_reaper		5349004	0					
ANR	5349288	CastTarget	ReaperHandlercpp		5349004	0					
ANR	5349289	UnaryOperationExpression	& TDMan :: transferd_reaper		5349004	1					
ANR	5349290	UnaryOperator	&		5349004	0					
ANR	5349291	Identifier	TDMan :: transferd_reaper		5349004	1					
ANR	5349292	Argument	"""transferd_reaper"""		5349004	2					
ANR	5349293	PrimaryExpression	"""transferd_reaper"""		5349004	0					
ANR	5349294	Argument	this		5349004	3					
ANR	5349295	Identifier	this		5349004	0					
ANR	5349296	ExpressionStatement	args . GetArgsStringForDisplay ( & args_display )	743:1:18729:18772	5349004	23	True				
ANR	5349297	CallExpression	args . GetArgsStringForDisplay ( & args_display )		5349004	0					
ANR	5349298	Callee	args . GetArgsStringForDisplay		5349004	0					
ANR	5349299	MemberAccess	args . GetArgsStringForDisplay		5349004	0					
ANR	5349300	Identifier	args		5349004	0					
ANR	5349301	Identifier	GetArgsStringForDisplay		5349004	1					
ANR	5349302	ArgumentList	& args_display		5349004	1					
ANR	5349303	Argument	& args_display		5349004	0					
ANR	5349304	UnaryOperationExpression	& args_display		5349004	0					
ANR	5349305	UnaryOperator	&		5349004	0					
ANR	5349306	Identifier	args_display		5349004	1					
ANR	5349307	ExpressionStatement	"dprintf ( D_ALWAYS , ""Invoking for user '%s' a transferd: %s\\n"" , td -> get_fquser ( ) . Value ( ) , args_display . Value ( ) )"	744:1:18775:18889	5349004	24	True				
ANR	5349308	CallExpression	"dprintf ( D_ALWAYS , ""Invoking for user '%s' a transferd: %s\\n"" , td -> get_fquser ( ) . Value ( ) , args_display . Value ( ) )"		5349004	0					
ANR	5349309	Callee	dprintf		5349004	0					
ANR	5349310	Identifier	dprintf		5349004	0					
ANR	5349311	ArgumentList	D_ALWAYS		5349004	1					
ANR	5349312	Argument	D_ALWAYS		5349004	0					
ANR	5349313	Identifier	D_ALWAYS		5349004	0					
ANR	5349314	Argument	"""Invoking for user '%s' a transferd: %s\\n"""		5349004	1					
ANR	5349315	PrimaryExpression	"""Invoking for user '%s' a transferd: %s\\n"""		5349004	0					
ANR	5349316	Argument	td -> get_fquser ( ) . Value ( )		5349004	2					
ANR	5349317	CallExpression	td -> get_fquser ( ) . Value ( )		5349004	0					
ANR	5349318	Callee	td -> get_fquser ( ) . Value		5349004	0					
ANR	5349319	MemberAccess	td -> get_fquser ( ) . Value		5349004	0					
ANR	5349320	CallExpression	td -> get_fquser ( )		5349004	0					
ANR	5349321	Callee	td -> get_fquser		5349004	0					
ANR	5349322	PtrMemberAccess	td -> get_fquser		5349004	0					
ANR	5349323	Identifier	td		5349004	0					
ANR	5349324	Identifier	get_fquser		5349004	1					
ANR	5349325	ArgumentList			5349004	1					
ANR	5349326	Identifier	Value		5349004	1					
ANR	5349327	ArgumentList			5349004	1					
ANR	5349328	Argument	args_display . Value ( )		5349004	3					
ANR	5349329	CallExpression	args_display . Value ( )		5349004	0					
ANR	5349330	Callee	args_display . Value		5349004	0					
ANR	5349331	MemberAccess	args_display . Value		5349004	0					
ANR	5349332	Identifier	args_display		5349004	0					
ANR	5349333	Identifier	Value		5349004	1					
ANR	5349334	ArgumentList			5349004	1					
ANR	5349335	ExpressionStatement	"pid = daemonCore -> Create_Process ( td_path , args , PRIV_ROOT , rid )"	749:1:18933:18998	5349004	25	True				
ANR	5349336	AssignmentExpression	"pid = daemonCore -> Create_Process ( td_path , args , PRIV_ROOT , rid )"		5349004	0		=			
ANR	5349337	Identifier	pid		5349004	0					
ANR	5349338	CallExpression	"daemonCore -> Create_Process ( td_path , args , PRIV_ROOT , rid )"		5349004	1					
ANR	5349339	Callee	daemonCore -> Create_Process		5349004	0					
ANR	5349340	PtrMemberAccess	daemonCore -> Create_Process		5349004	0					
ANR	5349341	Identifier	daemonCore		5349004	0					
ANR	5349342	Identifier	Create_Process		5349004	1					
ANR	5349343	ArgumentList	td_path		5349004	1					
ANR	5349344	Argument	td_path		5349004	0					
ANR	5349345	Identifier	td_path		5349004	0					
ANR	5349346	Argument	args		5349004	1					
ANR	5349347	Identifier	args		5349004	0					
ANR	5349348	Argument	PRIV_ROOT		5349004	2					
ANR	5349349	Identifier	PRIV_ROOT		5349004	0					
ANR	5349350	Argument	rid		5349004	3					
ANR	5349351	Identifier	rid		5349004	0					
ANR	5349352	ExpressionStatement	"dprintf ( D_ALWAYS , ""Created transferd with pid %d\\n"" , pid )"	750:1:19001:19058	5349004	26	True				
ANR	5349353	CallExpression	"dprintf ( D_ALWAYS , ""Created transferd with pid %d\\n"" , pid )"		5349004	0					
ANR	5349354	Callee	dprintf		5349004	0					
ANR	5349355	Identifier	dprintf		5349004	0					
ANR	5349356	ArgumentList	D_ALWAYS		5349004	1					
ANR	5349357	Argument	D_ALWAYS		5349004	0					
ANR	5349358	Identifier	D_ALWAYS		5349004	0					
ANR	5349359	Argument	"""Created transferd with pid %d\\n"""		5349004	1					
ANR	5349360	PrimaryExpression	"""Created transferd with pid %d\\n"""		5349004	0					
ANR	5349361	Argument	pid		5349004	2					
ANR	5349362	Identifier	pid		5349004	0					
ANR	5349363	IfStatement	if ( pid == FALSE )		5349004	27					
ANR	5349364	Condition	pid == FALSE	752:5:19066:19077	5349004	0	True				
ANR	5349365	EqualityExpression	pid == FALSE		5349004	0		==			
ANR	5349366	Identifier	pid		5349004	0					
ANR	5349367	Identifier	FALSE		5349004	1					
ANR	5349368	CompoundStatement		101:19:2768:2768	5349004	1					
ANR	5349369	ExpressionStatement	"EXCEPT ( ""failed to create transferd process."" )"	754:2:19098:19143	5349004	0	True				
ANR	5349370	CallExpression	"EXCEPT ( ""failed to create transferd process."" )"		5349004	0					
ANR	5349371	Callee	EXCEPT		5349004	0					
ANR	5349372	Identifier	EXCEPT		5349004	0					
ANR	5349373	ArgumentList	"""failed to create transferd process."""		5349004	1					
ANR	5349374	Argument	"""failed to create transferd process."""		5349004	0					
ANR	5349375	PrimaryExpression	"""failed to create transferd process."""		5349004	0					
ANR	5349376	ReturnStatement	return FALSE ;	755:2:19147:19159	5349004	1	True				
ANR	5349377	Identifier	FALSE		5349004	0					
ANR	5349378	ExpressionStatement	"ASSERT ( m_td_pid_table -> lookup ( ( long ) pid , found_td ) != 0 )"	762:1:19317:19373	5349004	28	True				
ANR	5349379	CallExpression	"ASSERT ( m_td_pid_table -> lookup ( ( long ) pid , found_td ) != 0 )"		5349004	0					
ANR	5349380	Callee	ASSERT		5349004	0					
ANR	5349381	Identifier	ASSERT		5349004	0					
ANR	5349382	ArgumentList	"m_td_pid_table -> lookup ( ( long ) pid , found_td ) != 0"		5349004	1					
ANR	5349383	Argument	"m_td_pid_table -> lookup ( ( long ) pid , found_td ) != 0"		5349004	0					
ANR	5349384	EqualityExpression	"m_td_pid_table -> lookup ( ( long ) pid , found_td ) != 0"		5349004	0		!=			
ANR	5349385	CallExpression	"m_td_pid_table -> lookup ( ( long ) pid , found_td )"		5349004	0					
ANR	5349386	Callee	m_td_pid_table -> lookup		5349004	0					
ANR	5349387	PtrMemberAccess	m_td_pid_table -> lookup		5349004	0					
ANR	5349388	Identifier	m_td_pid_table		5349004	0					
ANR	5349389	Identifier	lookup		5349004	1					
ANR	5349390	ArgumentList	( long ) pid		5349004	1					
ANR	5349391	Argument	( long ) pid		5349004	0					
ANR	5349392	CastExpression	( long ) pid		5349004	0					
ANR	5349393	CastTarget	long		5349004	0					
ANR	5349394	Identifier	pid		5349004	1					
ANR	5349395	Argument	found_td		5349004	1					
ANR	5349396	Identifier	found_td		5349004	0					
ANR	5349397	PrimaryExpression	0		5349004	1					
ANR	5349398	ExpressionStatement	"m_td_pid_table -> insert ( ( long ) pid , td )"	765:1:19435:19472	5349004	29	True				
ANR	5349399	CallExpression	"m_td_pid_table -> insert ( ( long ) pid , td )"		5349004	0					
ANR	5349400	Callee	m_td_pid_table -> insert		5349004	0					
ANR	5349401	PtrMemberAccess	m_td_pid_table -> insert		5349004	0					
ANR	5349402	Identifier	m_td_pid_table		5349004	0					
ANR	5349403	Identifier	insert		5349004	1					
ANR	5349404	ArgumentList	( long ) pid		5349004	1					
ANR	5349405	Argument	( long ) pid		5349004	0					
ANR	5349406	CastExpression	( long ) pid		5349004	0					
ANR	5349407	CastTarget	long		5349004	0					
ANR	5349408	Identifier	pid		5349004	1					
ANR	5349409	Argument	td		5349004	1					
ANR	5349410	Identifier	td		5349004	0					
ANR	5349411	ExpressionStatement	free ( td_path )	767:1:19477:19490	5349004	30	True				
ANR	5349412	CallExpression	free ( td_path )		5349004	0					
ANR	5349413	Callee	free		5349004	0					
ANR	5349414	Identifier	free		5349004	0					
ANR	5349415	ArgumentList	td_path		5349004	1					
ANR	5349416	Argument	td_path		5349004	0					
ANR	5349417	Identifier	td_path		5349004	0					
ANR	5349418	ExpressionStatement	td -> set_status ( TD_INVOKED )	769:1:19494:19520	5349004	31	True				
ANR	5349419	CallExpression	td -> set_status ( TD_INVOKED )		5349004	0					
ANR	5349420	Callee	td -> set_status		5349004	0					
ANR	5349421	PtrMemberAccess	td -> set_status		5349004	0					
ANR	5349422	Identifier	td		5349004	0					
ANR	5349423	Identifier	set_status		5349004	1					
ANR	5349424	ArgumentList	TD_INVOKED		5349004	1					
ANR	5349425	Argument	TD_INVOKED		5349004	0					
ANR	5349426	Identifier	TD_INVOKED		5349004	0					
ANR	5349427	ReturnStatement	return TRUE ;	771:1:19524:19535	5349004	32	True				
ANR	5349428	Identifier	TRUE		5349004	0					
ANR	5349429	ReturnType	bool		5349004	1					
ANR	5349430	Identifier	TDMan :: invoke_a_td		5349004	2					
ANR	5349431	ParameterList	TransferDaemon * td		5349004	3					
ANR	5349432	Parameter	TransferDaemon * td	651:19:16291:16308	5349004	0	True				
ANR	5349433	ParameterType	TransferDaemon *		5349004	0					
ANR	5349434	Identifier	td		5349004	1					
ANR	5349435	CFGEntryNode	ENTRY		5349004		True				
ANR	5349436	CFGExitNode	EXIT		5349004		True				
ANR	5349437	Symbol	daemonCore -> Create_Process		5349004						
ANR	5349438	Symbol	m_id_table -> lookup		5349004						
ANR	5349439	Symbol	TD_INVOKED		5349004						
ANR	5349440	Symbol	args_display		5349004						
ANR	5349441	Symbol	m_td_pid_table -> lookup		5349004						
ANR	5349442	Symbol	pid		5349004						
ANR	5349443	Symbol	rid		5349004						
ANR	5349444	Symbol	* m_td_table		5349004						
ANR	5349445	Symbol	td -> get_fquser		5349004						
ANR	5349446	Symbol	param		5349004						
ANR	5349447	Symbol	m_td_pid_table		5349004						
ANR	5349448	Symbol	found_id		5349004						
ANR	5349449	Symbol	daemonCore		5349004						
ANR	5349450	Symbol	& TDMan :: transferd_reaper		5349004						
ANR	5349451	Symbol	args_display . Value		5349004						
ANR	5349452	Symbol	m_id_table		5349004						
ANR	5349453	Symbol	m_td_table -> lookup		5349004						
ANR	5349454	Symbol	m_td_table		5349004						
ANR	5349455	Symbol	td -> get_id		5349004						
ANR	5349456	Symbol	daemonCore -> InfoCommandSinfulString		5349004						
ANR	5349457	Symbol	found_td		5349004						
ANR	5349458	Symbol	NULL		5349004						
ANR	5349459	Symbol	td -> get_status		5349004						
ANR	5349460	Symbol	false		5349004						
ANR	5349461	Symbol	this		5349004						
ANR	5349462	Symbol	D_ALWAYS		5349004						
ANR	5349463	Symbol	& args_display		5349004						
ANR	5349464	Symbol	TRUE		5349004						
ANR	5349465	Symbol	* m_id_table		5349004						
ANR	5349466	Symbol	td -> get_fquser ( ) . Value		5349004						
ANR	5349467	Symbol	td		5349004						
ANR	5349468	Symbol	args		5349004						
ANR	5349469	Symbol	daemonCore -> Register_Reaper		5349004						
ANR	5349470	Symbol	td_path		5349004						
ANR	5349471	Symbol	* m_td_pid_table		5349004						
ANR	5349472	Symbol	* td		5349004						
ANR	5349473	Symbol	* daemonCore		5349004						
ANR	5349474	Symbol	PRIV_ROOT		5349004						
ANR	5349475	Symbol	FALSE		5349004						
ANR	5349476	Symbol	condor_basename		5349004						
ANR	5349477	Function	TDMan :: refuse	774:0:19540:19627							
ANR	5349478	FunctionDef	TDMan :: refuse (Stream * s)		5349477	0					
ANR	5349479	CompoundStatement		776:0:19570:19627	5349477	0					
ANR	5349480	ExpressionStatement	s -> encode ( )	777:1:19573:19584	5349477	0	True				
ANR	5349481	CallExpression	s -> encode ( )		5349477	0					
ANR	5349482	Callee	s -> encode		5349477	0					
ANR	5349483	PtrMemberAccess	s -> encode		5349477	0					
ANR	5349484	Identifier	s		5349477	0					
ANR	5349485	Identifier	encode		5349477	1					
ANR	5349486	ArgumentList			5349477	1					
ANR	5349487	ExpressionStatement	s -> put ( NOT_OK )	778:1:19587:19603	5349477	1	True				
ANR	5349488	CallExpression	s -> put ( NOT_OK )		5349477	0					
ANR	5349489	Callee	s -> put		5349477	0					
ANR	5349490	PtrMemberAccess	s -> put		5349477	0					
ANR	5349491	Identifier	s		5349477	0					
ANR	5349492	Identifier	put		5349477	1					
ANR	5349493	ArgumentList	NOT_OK		5349477	1					
ANR	5349494	Argument	NOT_OK		5349477	0					
ANR	5349495	Identifier	NOT_OK		5349477	0					
ANR	5349496	ExpressionStatement	s -> end_of_message ( )	779:1:19606:19625	5349477	2	True				
ANR	5349497	CallExpression	s -> end_of_message ( )		5349477	0					
ANR	5349498	Callee	s -> end_of_message		5349477	0					
ANR	5349499	PtrMemberAccess	s -> end_of_message		5349477	0					
ANR	5349500	Identifier	s		5349477	0					
ANR	5349501	Identifier	end_of_message		5349477	1					
ANR	5349502	ArgumentList			5349477	1					
ANR	5349503	ReturnType	void		5349477	1					
ANR	5349504	Identifier	TDMan :: refuse		5349477	2					
ANR	5349505	ParameterList	Stream * s		5349477	3					
ANR	5349506	Parameter	Stream * s	775:14:19559:19567	5349477	0	True				
ANR	5349507	ParameterType	Stream *		5349477	0					
ANR	5349508	Identifier	s		5349477	1					
ANR	5349509	CFGEntryNode	ENTRY		5349477		True				
ANR	5349510	CFGExitNode	EXIT		5349477		True				
ANR	5349511	Symbol	NOT_OK		5349477						
ANR	5349512	Symbol	s		5349477						
ANR	5349513	Function	TDMan :: transferd_reaper	783:0:19684:21428							
ANR	5349514	FunctionDef	"TDMan :: transferd_reaper (long pid , int status)"		5349513	0					
ANR	5349515	CompoundStatement		785:0:19735:21428	5349513	0					
ANR	5349516	IdentifierDeclStatement	MyString fquser ;	786:1:19738:19753	5349513	0	True				
ANR	5349517	IdentifierDecl	fquser		5349513	0					
ANR	5349518	IdentifierDeclType	MyString		5349513	0					
ANR	5349519	Identifier	fquser		5349513	1					
ANR	5349520	IdentifierDeclStatement	MyString id ;	787:1:19756:19767	5349513	1	True				
ANR	5349521	IdentifierDecl	id		5349513	0					
ANR	5349522	IdentifierDeclType	MyString		5349513	0					
ANR	5349523	Identifier	id		5349513	1					
ANR	5349524	IdentifierDeclStatement	TransferDaemon * dead_td = NULL ;	788:1:19770:19800	5349513	2	True				
ANR	5349525	IdentifierDecl	* dead_td = NULL		5349513	0					
ANR	5349526	IdentifierDeclType	TransferDaemon *		5349513	0					
ANR	5349527	Identifier	dead_td		5349513	1					
ANR	5349528	AssignmentExpression	* dead_td = NULL		5349513	2		=			
ANR	5349529	Identifier	NULL		5349513	0					
ANR	5349530	Identifier	NULL		5349513	1					
ANR	5349531	IdentifierDeclStatement	TdAction ret ;	789:1:19803:19815	5349513	3	True				
ANR	5349532	IdentifierDecl	ret		5349513	0					
ANR	5349533	IdentifierDeclType	TdAction		5349513	0					
ANR	5349534	Identifier	ret		5349513	1					
ANR	5349535	ExpressionStatement	"dprintf ( D_ALWAYS , ""TDMan: Reaped transferd pid %ld with status %d\\n"" , pid , status )"	791:1:19819:19904	5349513	4	True				
ANR	5349536	CallExpression	"dprintf ( D_ALWAYS , ""TDMan: Reaped transferd pid %ld with status %d\\n"" , pid , status )"		5349513	0					
ANR	5349537	Callee	dprintf		5349513	0					
ANR	5349538	Identifier	dprintf		5349513	0					
ANR	5349539	ArgumentList	D_ALWAYS		5349513	1					
ANR	5349540	Argument	D_ALWAYS		5349513	0					
ANR	5349541	Identifier	D_ALWAYS		5349513	0					
ANR	5349542	Argument	"""TDMan: Reaped transferd pid %ld with status %d\\n"""		5349513	1					
ANR	5349543	PrimaryExpression	"""TDMan: Reaped transferd pid %ld with status %d\\n"""		5349513	0					
ANR	5349544	Argument	pid		5349513	2					
ANR	5349545	Identifier	pid		5349513	0					
ANR	5349546	Argument	status		5349513	3					
ANR	5349547	Identifier	status		5349513	0					
ANR	5349548	ExpressionStatement	"m_td_pid_table -> lookup ( ( long ) pid , dead_td )"	801:1:20287:20329	5349513	5	True				
ANR	5349549	CallExpression	"m_td_pid_table -> lookup ( ( long ) pid , dead_td )"		5349513	0					
ANR	5349550	Callee	m_td_pid_table -> lookup		5349513	0					
ANR	5349551	PtrMemberAccess	m_td_pid_table -> lookup		5349513	0					
ANR	5349552	Identifier	m_td_pid_table		5349513	0					
ANR	5349553	Identifier	lookup		5349513	1					
ANR	5349554	ArgumentList	( long ) pid		5349513	1					
ANR	5349555	Argument	( long ) pid		5349513	0					
ANR	5349556	CastExpression	( long ) pid		5349513	0					
ANR	5349557	CastTarget	long		5349513	0					
ANR	5349558	Identifier	pid		5349513	1					
ANR	5349559	Argument	dead_td		5349513	1					
ANR	5349560	Identifier	dead_td		5349513	0					
ANR	5349561	ExpressionStatement	ASSERT ( dead_td != NULL )	802:1:20332:20355	5349513	6	True				
ANR	5349562	CallExpression	ASSERT ( dead_td != NULL )		5349513	0					
ANR	5349563	Callee	ASSERT		5349513	0					
ANR	5349564	Identifier	ASSERT		5349513	0					
ANR	5349565	ArgumentList	dead_td != NULL		5349513	1					
ANR	5349566	Argument	dead_td != NULL		5349513	0					
ANR	5349567	EqualityExpression	dead_td != NULL		5349513	0		!=			
ANR	5349568	Identifier	dead_td		5349513	0					
ANR	5349569	Identifier	NULL		5349513	1					
ANR	5349570	ExpressionStatement	ASSERT ( m_td_pid_table -> remove ( ( long ) pid ) == 0 )	803:1:20358:20404	5349513	7	True				
ANR	5349571	CallExpression	ASSERT ( m_td_pid_table -> remove ( ( long ) pid ) == 0 )		5349513	0					
ANR	5349572	Callee	ASSERT		5349513	0					
ANR	5349573	Identifier	ASSERT		5349513	0					
ANR	5349574	ArgumentList	m_td_pid_table -> remove ( ( long ) pid ) == 0		5349513	1					
ANR	5349575	Argument	m_td_pid_table -> remove ( ( long ) pid ) == 0		5349513	0					
ANR	5349576	EqualityExpression	m_td_pid_table -> remove ( ( long ) pid ) == 0		5349513	0		==			
ANR	5349577	CallExpression	m_td_pid_table -> remove ( ( long ) pid )		5349513	0					
ANR	5349578	Callee	m_td_pid_table -> remove		5349513	0					
ANR	5349579	PtrMemberAccess	m_td_pid_table -> remove		5349513	0					
ANR	5349580	Identifier	m_td_pid_table		5349513	0					
ANR	5349581	Identifier	remove		5349513	1					
ANR	5349582	ArgumentList	( long ) pid		5349513	1					
ANR	5349583	Argument	( long ) pid		5349513	0					
ANR	5349584	CastExpression	( long ) pid		5349513	0					
ANR	5349585	CastTarget	long		5349513	0					
ANR	5349586	Identifier	pid		5349513	1					
ANR	5349587	PrimaryExpression	0		5349513	1					
ANR	5349588	ExpressionStatement	id = dead_td -> get_id ( )	805:1:20408:20430	5349513	8	True				
ANR	5349589	AssignmentExpression	id = dead_td -> get_id ( )		5349513	0		=			
ANR	5349590	Identifier	id		5349513	0					
ANR	5349591	CallExpression	dead_td -> get_id ( )		5349513	1					
ANR	5349592	Callee	dead_td -> get_id		5349513	0					
ANR	5349593	PtrMemberAccess	dead_td -> get_id		5349513	0					
ANR	5349594	Identifier	dead_td		5349513	0					
ANR	5349595	Identifier	get_id		5349513	1					
ANR	5349596	ArgumentList			5349513	1					
ANR	5349597	ExpressionStatement	fquser = dead_td -> get_fquser ( )	806:1:20433:20463	5349513	9	True				
ANR	5349598	AssignmentExpression	fquser = dead_td -> get_fquser ( )		5349513	0		=			
ANR	5349599	Identifier	fquser		5349513	0					
ANR	5349600	CallExpression	dead_td -> get_fquser ( )		5349513	1					
ANR	5349601	Callee	dead_td -> get_fquser		5349513	0					
ANR	5349602	PtrMemberAccess	dead_td -> get_fquser		5349513	0					
ANR	5349603	Identifier	dead_td		5349513	0					
ANR	5349604	Identifier	get_fquser		5349513	1					
ANR	5349605	ArgumentList			5349513	1					
ANR	5349606	ExpressionStatement	ASSERT ( m_id_table -> remove ( id ) == 0 )	809:1:20518:20553	5349513	10	True				
ANR	5349607	CallExpression	ASSERT ( m_id_table -> remove ( id ) == 0 )		5349513	0					
ANR	5349608	Callee	ASSERT		5349513	0					
ANR	5349609	Identifier	ASSERT		5349513	0					
ANR	5349610	ArgumentList	m_id_table -> remove ( id ) == 0		5349513	1					
ANR	5349611	Argument	m_id_table -> remove ( id ) == 0		5349513	0					
ANR	5349612	EqualityExpression	m_id_table -> remove ( id ) == 0		5349513	0		==			
ANR	5349613	CallExpression	m_id_table -> remove ( id )		5349513	0					
ANR	5349614	Callee	m_id_table -> remove		5349513	0					
ANR	5349615	PtrMemberAccess	m_id_table -> remove		5349513	0					
ANR	5349616	Identifier	m_id_table		5349513	0					
ANR	5349617	Identifier	remove		5349513	1					
ANR	5349618	ArgumentList	id		5349513	1					
ANR	5349619	Argument	id		5349513	0					
ANR	5349620	Identifier	id		5349513	0					
ANR	5349621	PrimaryExpression	0		5349513	1					
ANR	5349622	ExpressionStatement	ASSERT ( m_td_table -> remove ( fquser ) == 0 )	812:1:20612:20651	5349513	11	True				
ANR	5349623	CallExpression	ASSERT ( m_td_table -> remove ( fquser ) == 0 )		5349513	0					
ANR	5349624	Callee	ASSERT		5349513	0					
ANR	5349625	Identifier	ASSERT		5349513	0					
ANR	5349626	ArgumentList	m_td_table -> remove ( fquser ) == 0		5349513	1					
ANR	5349627	Argument	m_td_table -> remove ( fquser ) == 0		5349513	0					
ANR	5349628	EqualityExpression	m_td_table -> remove ( fquser ) == 0		5349513	0		==			
ANR	5349629	CallExpression	m_td_table -> remove ( fquser )		5349513	0					
ANR	5349630	Callee	m_td_table -> remove		5349513	0					
ANR	5349631	PtrMemberAccess	m_td_table -> remove		5349513	0					
ANR	5349632	Identifier	m_td_table		5349513	0					
ANR	5349633	Identifier	remove		5349513	1					
ANR	5349634	ArgumentList	fquser		5349513	1					
ANR	5349635	Argument	fquser		5349513	0					
ANR	5349636	Identifier	fquser		5349513	0					
ANR	5349637	PrimaryExpression	0		5349513	1					
ANR	5349638	ExpressionStatement	"ret = dead_td -> call_reaper_callback ( pid , status , dead_td )"	819:1:20934:20991	5349513	12	True				
ANR	5349639	AssignmentExpression	"ret = dead_td -> call_reaper_callback ( pid , status , dead_td )"		5349513	0		=			
ANR	5349640	Identifier	ret		5349513	0					
ANR	5349641	CallExpression	"dead_td -> call_reaper_callback ( pid , status , dead_td )"		5349513	1					
ANR	5349642	Callee	dead_td -> call_reaper_callback		5349513	0					
ANR	5349643	PtrMemberAccess	dead_td -> call_reaper_callback		5349513	0					
ANR	5349644	Identifier	dead_td		5349513	0					
ANR	5349645	Identifier	call_reaper_callback		5349513	1					
ANR	5349646	ArgumentList	pid		5349513	1					
ANR	5349647	Argument	pid		5349513	0					
ANR	5349648	Identifier	pid		5349513	0					
ANR	5349649	Argument	status		5349513	1					
ANR	5349650	Identifier	status		5349513	0					
ANR	5349651	Argument	dead_td		5349513	2					
ANR	5349652	Identifier	dead_td		5349513	0					
ANR	5349653	SwitchStatement	switch ( ret )		5349513	13					
ANR	5349654	Condition	ret	820:8:21001:21003	5349513	0	True				
ANR	5349655	Identifier	ret		5349513	0					
ANR	5349656	CompoundStatement		36:13:1270:1270	5349513	1					
ANR	5349657	Label	case TD_ACTION_TERMINATE :	821:2:21010:21034	5349513	0	True				
ANR	5349658	Identifier	TD_ACTION_TERMINATE		5349513	0					
ANR	5349659	Statement	delete	823:3:21081:21086	5349513	1	True				
ANR	5349660	ExpressionStatement	dead_td	823:10:21088:21095	5349513	2	True				
ANR	5349661	Identifier	dead_td		5349513	0					
ANR	5349662	BreakStatement	break ;	824:3:21100:21105	5349513	3	True				
ANR	5349663	Label	case TD_ACTION_CONTINUE :	826:2:21110:21133	5349513	4	True				
ANR	5349664	Identifier	TD_ACTION_CONTINUE		5349513	0					
ANR	5349665	Statement	EXCEPT	827:3:21138:21143	5349513	5	True				
ANR	5349666	Statement	(	827:9:21144:21144	5349513	6	True				
ANR	5349667	Statement	"""TDMan::transferd_reaper(): Programmer Error! You must """	827:10:21145:21200	5349513	7	True				
ANR	5349668	Statement	"""return TD_ACTION_TERMINATE only from a transferd reaper!"""	828:4:21206:21263	5349513	8	True				
ANR	5349669	Statement	)	828:62:21264:21264	5349513	9	True				
ANR	5349670	ExpressionStatement		828:63:21265:21265	5349513	10	True				
ANR	5349671	BreakStatement	break ;	829:3:21270:21275	5349513	11	True				
ANR	5349672	Label	default :	831:2:21280:21287	5349513	12	True				
ANR	5349673	Identifier	default		5349513	0					
ANR	5349674	Statement	EXCEPT	832:3:21292:21297	5349513	13	True				
ANR	5349675	Statement	(	832:9:21298:21298	5349513	14	True				
ANR	5349676	Statement	"""TDMan::transferd_reaper(): Programmer Error! """	832:10:21299:21345	5349513	15	True				
ANR	5349677	Statement	"""Unknown return code from td reaper callback"""	833:4:21351:21395	5349513	16	True				
ANR	5349678	Statement	)	833:49:21396:21396	5349513	17	True				
ANR	5349679	ExpressionStatement		833:50:21397:21397	5349513	18	True				
ANR	5349680	BreakStatement	break ;	834:3:21402:21407	5349513	19	True				
ANR	5349681	ReturnStatement	return TRUE ;	837:1:21415:21426	5349513	14	True				
ANR	5349682	Identifier	TRUE		5349513	0					
ANR	5349683	ReturnType	int		5349513	1					
ANR	5349684	Identifier	TDMan :: transferd_reaper		5349513	2					
ANR	5349685	ParameterList	"long pid , int status"		5349513	3					
ANR	5349686	Parameter	long pid	784:24:19712:19719	5349513	0	True				
ANR	5349687	ParameterType	long		5349513	0					
ANR	5349688	Identifier	pid		5349513	1					
ANR	5349689	Parameter	int status	784:34:19722:19731	5349513	1	True				
ANR	5349690	ParameterType	int		5349513	0					
ANR	5349691	Identifier	status		5349513	1					
ANR	5349692	CFGEntryNode	ENTRY		5349513		True				
ANR	5349693	CFGExitNode	EXIT		5349513		True				
ANR	5349694	Symbol	ret		5349513						
ANR	5349695	Symbol	m_td_pid_table -> remove		5349513						
ANR	5349696	Symbol	m_id_table -> remove		5349513						
ANR	5349697	Symbol	NULL		5349513						
ANR	5349698	Symbol	dead_td		5349513						
ANR	5349699	Symbol	dead_td -> get_fquser		5349513						
ANR	5349700	Symbol	D_ALWAYS		5349513						
ANR	5349701	Symbol	TRUE		5349513						
ANR	5349702	Symbol	pid		5349513						
ANR	5349703	Symbol	fquser		5349513						
ANR	5349704	Symbol	* m_td_table		5349513						
ANR	5349705	Symbol	* m_id_table		5349513						
ANR	5349706	Symbol	m_td_table -> remove		5349513						
ANR	5349707	Symbol	dead_td -> get_id		5349513						
ANR	5349708	Symbol	* m_td_pid_table		5349513						
ANR	5349709	Symbol	m_td_pid_table		5349513						
ANR	5349710	Symbol	id		5349513						
ANR	5349711	Symbol	* dead_td		5349513						
ANR	5349712	Symbol	dead_td -> call_reaper_callback		5349513						
ANR	5349713	Symbol	m_id_table		5349513						
ANR	5349714	Symbol	status		5349513						
ANR	5349715	Symbol	m_td_table		5349513						
ANR	5349716	Function	TDMan :: transferd_registration	846:0:21760:30525							
ANR	5349717	FunctionDef	"TDMan :: transferd_registration (int cmd , Stream * sock)"		5349716	0					
ANR	5349718	CompoundStatement		848:0:21818:30525	5349716	0					
ANR	5349719	IdentifierDeclStatement	ReliSock * rsock = ( ReliSock * ) sock ;	849:1:21821:21854	5349716	0	True				
ANR	5349720	IdentifierDecl	* rsock = ( ReliSock * ) sock		5349716	0					
ANR	5349721	IdentifierDeclType	ReliSock *		5349716	0					
ANR	5349722	Identifier	rsock		5349716	1					
ANR	5349723	AssignmentExpression	* rsock = ( ReliSock * ) sock		5349716	2		=			
ANR	5349724	Identifier	rsock		5349716	0					
ANR	5349725	CastExpression	( ReliSock * ) sock		5349716	1					
ANR	5349726	CastTarget	ReliSock *		5349716	0					
ANR	5349727	Identifier	sock		5349716	1					
ANR	5349728	IdentifierDeclStatement	MyString td_sinful ;	850:1:21857:21875	5349716	1	True				
ANR	5349729	IdentifierDecl	td_sinful		5349716	0					
ANR	5349730	IdentifierDeclType	MyString		5349716	0					
ANR	5349731	Identifier	td_sinful		5349716	1					
ANR	5349732	IdentifierDeclStatement	MyString td_id ;	851:1:21878:21892	5349716	2	True				
ANR	5349733	IdentifierDecl	td_id		5349716	0					
ANR	5349734	IdentifierDeclType	MyString		5349716	0					
ANR	5349735	Identifier	td_id		5349716	1					
ANR	5349736	IdentifierDeclStatement	MyString fquser ;	852:1:21895:21910	5349716	3	True				
ANR	5349737	IdentifierDecl	fquser		5349716	0					
ANR	5349738	IdentifierDeclType	MyString		5349716	0					
ANR	5349739	Identifier	fquser		5349716	1					
ANR	5349740	IdentifierDeclStatement	TDUpdateContinuation * tdup = NULL ;	853:1:21913:21946	5349716	4	True				
ANR	5349741	IdentifierDecl	* tdup = NULL		5349716	0					
ANR	5349742	IdentifierDeclType	TDUpdateContinuation *		5349716	0					
ANR	5349743	Identifier	tdup		5349716	1					
ANR	5349744	AssignmentExpression	* tdup = NULL		5349716	2		=			
ANR	5349745	Identifier	NULL		5349716	0					
ANR	5349746	Identifier	NULL		5349716	1					
ANR	5349747	IdentifierDeclStatement	TransferDaemon * td = NULL ;	854:1:21949:21974	5349716	5	True				
ANR	5349748	IdentifierDecl	* td = NULL		5349716	0					
ANR	5349749	IdentifierDeclType	TransferDaemon *		5349716	0					
ANR	5349750	Identifier	td		5349716	1					
ANR	5349751	AssignmentExpression	* td = NULL		5349716	2		=			
ANR	5349752	Identifier	NULL		5349716	0					
ANR	5349753	Identifier	NULL		5349716	1					
ANR	5349754	IdentifierDeclStatement	TdAction ret ;	855:1:21977:21989	5349716	6	True				
ANR	5349755	IdentifierDecl	ret		5349716	0					
ANR	5349756	IdentifierDeclType	TdAction		5349716	0					
ANR	5349757	Identifier	ret		5349716	1					
ANR	5349758	IdentifierDeclStatement	ClassAd regad ;	856:1:21992:22005	5349716	7	True				
ANR	5349759	IdentifierDecl	regad		5349716	0					
ANR	5349760	IdentifierDeclType	ClassAd		5349716	0					
ANR	5349761	Identifier	regad		5349716	1					
ANR	5349762	IdentifierDeclStatement	ClassAd respad ;	857:1:22008:22022	5349716	8	True				
ANR	5349763	IdentifierDecl	respad		5349716	0					
ANR	5349764	IdentifierDeclType	ClassAd		5349716	0					
ANR	5349765	Identifier	respad		5349716	1					
ANR	5349766	ExpressionStatement	cmd = cmd	859:1:22026:22035	5349716	9	True				
ANR	5349767	AssignmentExpression	cmd = cmd		5349716	0		=			
ANR	5349768	Identifier	cmd		5349716	0					
ANR	5349769	Identifier	cmd		5349716	1					
ANR	5349770	ExpressionStatement	"dprintf ( D_ALWAYS , ""Entering TDMan::transferd_registration()\\n"" )"	861:1:22061:22124	5349716	10	True				
ANR	5349771	CallExpression	"dprintf ( D_ALWAYS , ""Entering TDMan::transferd_registration()\\n"" )"		5349716	0					
ANR	5349772	Callee	dprintf		5349716	0					
ANR	5349773	Identifier	dprintf		5349716	0					
ANR	5349774	ArgumentList	D_ALWAYS		5349716	1					
ANR	5349775	Argument	D_ALWAYS		5349716	0					
ANR	5349776	Identifier	D_ALWAYS		5349716	0					
ANR	5349777	Argument	"""Entering TDMan::transferd_registration()\\n"""		5349716	1					
ANR	5349778	PrimaryExpression	"""Entering TDMan::transferd_registration()\\n"""		5349716	0					
ANR	5349779	ExpressionStatement	"dprintf ( D_ALWAYS , ""Got TRANSFERD_REGISTER message!\\n"" )"	863:1:22128:22182	5349716	11	True				
ANR	5349780	CallExpression	"dprintf ( D_ALWAYS , ""Got TRANSFERD_REGISTER message!\\n"" )"		5349716	0					
ANR	5349781	Callee	dprintf		5349716	0					
ANR	5349782	Identifier	dprintf		5349716	0					
ANR	5349783	ArgumentList	D_ALWAYS		5349716	1					
ANR	5349784	Argument	D_ALWAYS		5349716	0					
ANR	5349785	Identifier	D_ALWAYS		5349716	0					
ANR	5349786	Argument	"""Got TRANSFERD_REGISTER message!\\n"""		5349716	1					
ANR	5349787	PrimaryExpression	"""Got TRANSFERD_REGISTER message!\\n"""		5349716	0					
ANR	5349788	ExpressionStatement	rsock -> decode ( )	865:1:22186:22201	5349716	12	True				
ANR	5349789	CallExpression	rsock -> decode ( )		5349716	0					
ANR	5349790	Callee	rsock -> decode		5349716	0					
ANR	5349791	PtrMemberAccess	rsock -> decode		5349716	0					
ANR	5349792	Identifier	rsock		5349716	0					
ANR	5349793	Identifier	decode		5349716	1					
ANR	5349794	ArgumentList			5349716	1					
ANR	5349795	IfStatement	if ( ! rsock -> triedAuthentication ( ) )		5349716	13					
ANR	5349796	Condition	! rsock -> triedAuthentication ( )	870:5:22374:22403	5349716	0	True				
ANR	5349797	UnaryOperationExpression	! rsock -> triedAuthentication ( )		5349716	0					
ANR	5349798	UnaryOperator	!		5349716	0					
ANR	5349799	CallExpression	rsock -> triedAuthentication ( )		5349716	1					
ANR	5349800	Callee	rsock -> triedAuthentication		5349716	0					
ANR	5349801	PtrMemberAccess	rsock -> triedAuthentication		5349716	0					
ANR	5349802	Identifier	rsock		5349716	0					
ANR	5349803	Identifier	triedAuthentication		5349716	1					
ANR	5349804	ArgumentList			5349716	1					
ANR	5349805	CompoundStatement		24:2:592:612	5349716	1					
ANR	5349806	IdentifierDeclStatement	CondorError errstack ;	871:2:22411:22431	5349716	0	True				
ANR	5349807	IdentifierDecl	errstack		5349716	0					
ANR	5349808	IdentifierDeclType	CondorError		5349716	0					
ANR	5349809	Identifier	errstack		5349716	1					
ANR	5349810	IfStatement	"if ( ! SecMan :: authenticate_sock ( rsock , WRITE , & errstack ) )"		5349716	1					
ANR	5349811	Condition	"! SecMan :: authenticate_sock ( rsock , WRITE , & errstack )"	872:6:22439:22490	5349716	0	True				
ANR	5349812	UnaryOperationExpression	"! SecMan :: authenticate_sock ( rsock , WRITE , & errstack )"		5349716	0					
ANR	5349813	UnaryOperator	!		5349716	0					
ANR	5349814	CallExpression	"SecMan :: authenticate_sock ( rsock , WRITE , & errstack )"		5349716	1					
ANR	5349815	Callee	SecMan :: authenticate_sock		5349716	0					
ANR	5349816	Identifier	SecMan :: authenticate_sock		5349716	0					
ANR	5349817	ArgumentList	rsock		5349716	1					
ANR	5349818	Argument	rsock		5349716	0					
ANR	5349819	Identifier	rsock		5349716	0					
ANR	5349820	Argument	WRITE		5349716	1					
ANR	5349821	Identifier	WRITE		5349716	0					
ANR	5349822	Argument	& errstack		5349716	2					
ANR	5349823	UnaryOperationExpression	& errstack		5349716	0					
ANR	5349824	UnaryOperator	&		5349716	0					
ANR	5349825	Identifier	errstack		5349716	1					
ANR	5349826	CompoundStatement		25:61:675:675	5349716	1					
ANR	5349827	ExpressionStatement	"errstack . push ( ""SCHEDD::TDMan"" , 42 , ""Failure to register transferd - Authentication failed"" )"	878:3:22742:22840	5349716	0	True				
ANR	5349828	CallExpression	"errstack . push ( ""SCHEDD::TDMan"" , 42 , ""Failure to register transferd - Authentication failed"" )"		5349716	0					
ANR	5349829	Callee	errstack . push		5349716	0					
ANR	5349830	MemberAccess	errstack . push		5349716	0					
ANR	5349831	Identifier	errstack		5349716	0					
ANR	5349832	Identifier	push		5349716	1					
ANR	5349833	ArgumentList	"""SCHEDD::TDMan"""		5349716	1					
ANR	5349834	Argument	"""SCHEDD::TDMan"""		5349716	0					
ANR	5349835	PrimaryExpression	"""SCHEDD::TDMan"""		5349716	0					
ANR	5349836	Argument	42		5349716	1					
ANR	5349837	PrimaryExpression	42		5349716	0					
ANR	5349838	Argument	"""Failure to register transferd - Authentication failed"""		5349716	2					
ANR	5349839	PrimaryExpression	"""Failure to register transferd - Authentication failed"""		5349716	0					
ANR	5349840	ExpressionStatement	"dprintf ( D_ALWAYS , ""transferd_registration() aborting: %s\\n"" , errstack . getFullText ( ) )"	880:3:22845:22937	5349716	1	True				
ANR	5349841	CallExpression	"dprintf ( D_ALWAYS , ""transferd_registration() aborting: %s\\n"" , errstack . getFullText ( ) )"		5349716	0					
ANR	5349842	Callee	dprintf		5349716	0					
ANR	5349843	Identifier	dprintf		5349716	0					
ANR	5349844	ArgumentList	D_ALWAYS		5349716	1					
ANR	5349845	Argument	D_ALWAYS		5349716	0					
ANR	5349846	Identifier	D_ALWAYS		5349716	0					
ANR	5349847	Argument	"""transferd_registration() aborting: %s\\n"""		5349716	1					
ANR	5349848	PrimaryExpression	"""transferd_registration() aborting: %s\\n"""		5349716	0					
ANR	5349849	Argument	errstack . getFullText ( )		5349716	2					
ANR	5349850	CallExpression	errstack . getFullText ( )		5349716	0					
ANR	5349851	Callee	errstack . getFullText		5349716	0					
ANR	5349852	MemberAccess	errstack . getFullText		5349716	0					
ANR	5349853	Identifier	errstack		5349716	0					
ANR	5349854	Identifier	getFullText		5349716	1					
ANR	5349855	ArgumentList			5349716	1					
ANR	5349856	ExpressionStatement	refuse ( rsock )	882:3:22942:22957	5349716	2	True				
ANR	5349857	CallExpression	refuse ( rsock )		5349716	0					
ANR	5349858	Callee	refuse		5349716	0					
ANR	5349859	Identifier	refuse		5349716	0					
ANR	5349860	ArgumentList	rsock		5349716	1					
ANR	5349861	Argument	rsock		5349716	0					
ANR	5349862	Identifier	rsock		5349716	0					
ANR	5349863	ExpressionStatement	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"	883:3:22962:23024	5349716	3	True				
ANR	5349864	CallExpression	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"		5349716	0					
ANR	5349865	Callee	dprintf		5349716	0					
ANR	5349866	Identifier	dprintf		5349716	0					
ANR	5349867	ArgumentList	D_ALWAYS		5349716	1					
ANR	5349868	Argument	D_ALWAYS		5349716	0					
ANR	5349869	Identifier	D_ALWAYS		5349716	0					
ANR	5349870	Argument	"""Leaving TDMan::transferd_registration()\\n"""		5349716	1					
ANR	5349871	PrimaryExpression	"""Leaving TDMan::transferd_registration()\\n"""		5349716	0					
ANR	5349872	ReturnStatement	return CLOSE_STREAM ;	884:3:23029:23048	5349716	4	True				
ANR	5349873	Identifier	CLOSE_STREAM		5349716	0					
ANR	5349874	ExpressionStatement	fquser = rsock -> getFullyQualifiedUser ( )	892:1:23224:23263	5349716	14	True				
ANR	5349875	AssignmentExpression	fquser = rsock -> getFullyQualifiedUser ( )		5349716	0		=			
ANR	5349876	Identifier	fquser		5349716	0					
ANR	5349877	CallExpression	rsock -> getFullyQualifiedUser ( )		5349716	1					
ANR	5349878	Callee	rsock -> getFullyQualifiedUser		5349716	0					
ANR	5349879	PtrMemberAccess	rsock -> getFullyQualifiedUser		5349716	0					
ANR	5349880	Identifier	rsock		5349716	0					
ANR	5349881	Identifier	getFullyQualifiedUser		5349716	1					
ANR	5349882	ArgumentList			5349716	1					
ANR	5349883	IfStatement	"if ( fquser == """" )"		5349716	15					
ANR	5349884	Condition	"fquser == """""	893:5:23270:23281	5349716	0	True				
ANR	5349885	EqualityExpression	"fquser == """""		5349716	0		==			
ANR	5349886	Identifier	fquser		5349716	0					
ANR	5349887	PrimaryExpression	""""""		5349716	1					
ANR	5349888	CompoundStatement		46:19:1465:1465	5349716	1					
ANR	5349889	ExpressionStatement	"dprintf ( D_ALWAYS , ""Transferd identity is unverifiable. Denied.\\n"" )"	894:2:23288:23354	5349716	0	True				
ANR	5349890	CallExpression	"dprintf ( D_ALWAYS , ""Transferd identity is unverifiable. Denied.\\n"" )"		5349716	0					
ANR	5349891	Callee	dprintf		5349716	0					
ANR	5349892	Identifier	dprintf		5349716	0					
ANR	5349893	ArgumentList	D_ALWAYS		5349716	1					
ANR	5349894	Argument	D_ALWAYS		5349716	0					
ANR	5349895	Identifier	D_ALWAYS		5349716	0					
ANR	5349896	Argument	"""Transferd identity is unverifiable. Denied.\\n"""		5349716	1					
ANR	5349897	PrimaryExpression	"""Transferd identity is unverifiable. Denied.\\n"""		5349716	0					
ANR	5349898	ExpressionStatement	refuse ( rsock )	895:2:23358:23371	5349716	1	True				
ANR	5349899	CallExpression	refuse ( rsock )		5349716	0					
ANR	5349900	Callee	refuse		5349716	0					
ANR	5349901	Identifier	refuse		5349716	0					
ANR	5349902	ArgumentList	rsock		5349716	1					
ANR	5349903	Argument	rsock		5349716	0					
ANR	5349904	Identifier	rsock		5349716	0					
ANR	5349905	ExpressionStatement	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"	896:2:23375:23437	5349716	2	True				
ANR	5349906	CallExpression	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"		5349716	0					
ANR	5349907	Callee	dprintf		5349716	0					
ANR	5349908	Identifier	dprintf		5349716	0					
ANR	5349909	ArgumentList	D_ALWAYS		5349716	1					
ANR	5349910	Argument	D_ALWAYS		5349716	0					
ANR	5349911	Identifier	D_ALWAYS		5349716	0					
ANR	5349912	Argument	"""Leaving TDMan::transferd_registration()\\n"""		5349716	1					
ANR	5349913	PrimaryExpression	"""Leaving TDMan::transferd_registration()\\n"""		5349716	0					
ANR	5349914	ReturnStatement	return CLOSE_STREAM ;	897:2:23441:23460	5349716	3	True				
ANR	5349915	Identifier	CLOSE_STREAM		5349716	0					
ANR	5349916	ExpressionStatement	rsock -> decode ( )	904:1:23653:23668	5349716	16	True				
ANR	5349917	CallExpression	rsock -> decode ( )		5349716	0					
ANR	5349918	Callee	rsock -> decode		5349716	0					
ANR	5349919	PtrMemberAccess	rsock -> decode		5349716	0					
ANR	5349920	Identifier	rsock		5349716	0					
ANR	5349921	Identifier	decode		5349716	1					
ANR	5349922	ArgumentList			5349716	1					
ANR	5349923	ExpressionStatement	regad . initFromStream ( * rsock )	909:1:23766:23794	5349716	17	True				
ANR	5349924	CallExpression	regad . initFromStream ( * rsock )		5349716	0					
ANR	5349925	Callee	regad . initFromStream		5349716	0					
ANR	5349926	MemberAccess	regad . initFromStream		5349716	0					
ANR	5349927	Identifier	regad		5349716	0					
ANR	5349928	Identifier	initFromStream		5349716	1					
ANR	5349929	ArgumentList	* rsock		5349716	1					
ANR	5349930	Argument	* rsock		5349716	0					
ANR	5349931	UnaryOperationExpression	* rsock		5349716	0					
ANR	5349932	UnaryOperator	*		5349716	0					
ANR	5349933	Identifier	rsock		5349716	1					
ANR	5349934	ExpressionStatement	rsock -> end_of_message ( )	910:1:23797:23820	5349716	18	True				
ANR	5349935	CallExpression	rsock -> end_of_message ( )		5349716	0					
ANR	5349936	Callee	rsock -> end_of_message		5349716	0					
ANR	5349937	PtrMemberAccess	rsock -> end_of_message		5349716	0					
ANR	5349938	Identifier	rsock		5349716	0					
ANR	5349939	Identifier	end_of_message		5349716	1					
ANR	5349940	ArgumentList			5349716	1					
ANR	5349941	ExpressionStatement	"regad . LookupString ( ATTR_TREQ_TD_SINFUL , td_sinful )"	911:1:23823:23873	5349716	19	True				
ANR	5349942	CallExpression	"regad . LookupString ( ATTR_TREQ_TD_SINFUL , td_sinful )"		5349716	0					
ANR	5349943	Callee	regad . LookupString		5349716	0					
ANR	5349944	MemberAccess	regad . LookupString		5349716	0					
ANR	5349945	Identifier	regad		5349716	0					
ANR	5349946	Identifier	LookupString		5349716	1					
ANR	5349947	ArgumentList	ATTR_TREQ_TD_SINFUL		5349716	1					
ANR	5349948	Argument	ATTR_TREQ_TD_SINFUL		5349716	0					
ANR	5349949	Identifier	ATTR_TREQ_TD_SINFUL		5349716	0					
ANR	5349950	Argument	td_sinful		5349716	1					
ANR	5349951	Identifier	td_sinful		5349716	0					
ANR	5349952	ExpressionStatement	"regad . LookupString ( ATTR_TREQ_TD_ID , td_id )"	912:1:23876:23918	5349716	20	True				
ANR	5349953	CallExpression	"regad . LookupString ( ATTR_TREQ_TD_ID , td_id )"		5349716	0					
ANR	5349954	Callee	regad . LookupString		5349716	0					
ANR	5349955	MemberAccess	regad . LookupString		5349716	0					
ANR	5349956	Identifier	regad		5349716	0					
ANR	5349957	Identifier	LookupString		5349716	1					
ANR	5349958	ArgumentList	ATTR_TREQ_TD_ID		5349716	1					
ANR	5349959	Argument	ATTR_TREQ_TD_ID		5349716	0					
ANR	5349960	Identifier	ATTR_TREQ_TD_ID		5349716	0					
ANR	5349961	Argument	td_id		5349716	1					
ANR	5349962	Identifier	td_id		5349716	0					
ANR	5349963	Statement	dprintf	914:1:23922:23928	5349716	21	True				
ANR	5349964	Statement	(	914:8:23929:23929	5349716	22	True				
ANR	5349965	Statement	D_ALWAYS	914:9:23930:23937	5349716	23	True				
ANR	5349966	Statement	","	914:17:23938:23938	5349716	24	True				
ANR	5349967	Statement	"""Transferd %s, id: %s, owned by '%s' """	914:19:23940:23977	5349716	25	True				
ANR	5349968	Statement	"""attempting to register!\\n"""	915:2:23981:24007	5349716	26	True				
ANR	5349969	Statement	","	915:29:24008:24008	5349716	27	True				
ANR	5349970	Statement	td_sinful	916:2:24012:24020	5349716	28	True				
ANR	5349971	Statement	.	916:11:24021:24021	5349716	29	True				
ANR	5349972	Statement	Value	916:12:24022:24026	5349716	30	True				
ANR	5349973	Statement	(	916:17:24027:24027	5349716	31	True				
ANR	5349974	Statement	)	916:18:24028:24028	5349716	32	True				
ANR	5349975	Statement	","	916:19:24029:24029	5349716	33	True				
ANR	5349976	Statement	td_id	916:21:24031:24035	5349716	34	True				
ANR	5349977	Statement	.	916:26:24036:24036	5349716	35	True				
ANR	5349978	Statement	Value	916:27:24037:24041	5349716	36	True				
ANR	5349979	Statement	(	916:32:24042:24042	5349716	37	True				
ANR	5349980	Statement	)	916:33:24043:24043	5349716	38	True				
ANR	5349981	Statement	","	916:34:24044:24044	5349716	39	True				
ANR	5349982	Statement	fquser	916:36:24046:24051	5349716	40	True				
ANR	5349983	Statement	.	916:42:24052:24052	5349716	41	True				
ANR	5349984	Statement	Value	916:43:24053:24057	5349716	42	True				
ANR	5349985	Statement	(	916:48:24058:24058	5349716	43	True				
ANR	5349986	Statement	)	916:49:24059:24059	5349716	44	True				
ANR	5349987	Statement	)	916:50:24060:24060	5349716	45	True				
ANR	5349988	ExpressionStatement		916:51:24061:24061	5349716	46	True				
ANR	5349989	ExpressionStatement	rsock -> encode ( )	922:1:24270:24285	5349716	47	True				
ANR	5349990	CallExpression	rsock -> encode ( )		5349716	0					
ANR	5349991	Callee	rsock -> encode		5349716	0					
ANR	5349992	PtrMemberAccess	rsock -> encode		5349716	0					
ANR	5349993	Identifier	rsock		5349716	0					
ANR	5349994	Identifier	encode		5349716	1					
ANR	5349995	ArgumentList			5349716	1					
ANR	5349996	ExpressionStatement	td = find_td_by_ident ( td_id )	925:1:24330:24358	5349716	48	True				
ANR	5349997	AssignmentExpression	td = find_td_by_ident ( td_id )		5349716	0		=			
ANR	5349998	Identifier	td		5349716	0					
ANR	5349999	CallExpression	find_td_by_ident ( td_id )		5349716	1					
ANR	5350000	Callee	find_td_by_ident		5349716	0					
ANR	5350001	Identifier	find_td_by_ident		5349716	0					
ANR	5350002	ArgumentList	td_id		5349716	1					
ANR	5350003	Argument	td_id		5349716	0					
ANR	5350004	Identifier	td_id		5349716	0					
ANR	5350005	IfStatement	if ( td == NULL )		5349716	49					
ANR	5350006	Condition	td == NULL	926:5:24365:24374	5349716	0	True				
ANR	5350007	EqualityExpression	td == NULL		5349716	0		==			
ANR	5350008	Identifier	td		5349716	0					
ANR	5350009	Identifier	NULL		5349716	1					
ANR	5350010	CompoundStatement		79:17:2558:2558	5349716	1					
ANR	5350011	Statement	dprintf	928:2:24407:24413	5349716	0	True				
ANR	5350012	Statement	(	928:9:24414:24414	5349716	1	True				
ANR	5350013	Statement	D_ALWAYS	928:10:24415:24422	5349716	2	True				
ANR	5350014	Statement	","	928:18:24423:24423	5349716	3	True				
ANR	5350015	Statement	"""Did not request a transferd with that id for any user. """	929:3:24429:24485	5349716	4	True				
ANR	5350016	Statement	"""Refuse.\\n"""	930:3:24490:24500	5349716	5	True				
ANR	5350017	Statement	)	930:14:24501:24501	5349716	6	True				
ANR	5350018	ExpressionStatement		930:15:24502:24502	5349716	7	True				
ANR	5350019	ExpressionStatement	"respad . Assign ( ATTR_TREQ_INVALID_REQUEST , TRUE )"	932:2:24507:24553	5349716	8	True				
ANR	5350020	CallExpression	"respad . Assign ( ATTR_TREQ_INVALID_REQUEST , TRUE )"		5349716	0					
ANR	5350021	Callee	respad . Assign		5349716	0					
ANR	5350022	MemberAccess	respad . Assign		5349716	0					
ANR	5350023	Identifier	respad		5349716	0					
ANR	5350024	Identifier	Assign		5349716	1					
ANR	5350025	ArgumentList	ATTR_TREQ_INVALID_REQUEST		5349716	1					
ANR	5350026	Argument	ATTR_TREQ_INVALID_REQUEST		5349716	0					
ANR	5350027	Identifier	ATTR_TREQ_INVALID_REQUEST		5349716	0					
ANR	5350028	Argument	TRUE		5349716	1					
ANR	5350029	Identifier	TRUE		5349716	0					
ANR	5350030	ExpressionStatement	"respad . Assign ( ATTR_TREQ_INVALID_REASON , ""Did not request a transferd with that id for any user."" )"	933:2:24557:24658	5349716	9	True				
ANR	5350031	CallExpression	"respad . Assign ( ATTR_TREQ_INVALID_REASON , ""Did not request a transferd with that id for any user."" )"		5349716	0					
ANR	5350032	Callee	respad . Assign		5349716	0					
ANR	5350033	MemberAccess	respad . Assign		5349716	0					
ANR	5350034	Identifier	respad		5349716	0					
ANR	5350035	Identifier	Assign		5349716	1					
ANR	5350036	ArgumentList	ATTR_TREQ_INVALID_REASON		5349716	1					
ANR	5350037	Argument	ATTR_TREQ_INVALID_REASON		5349716	0					
ANR	5350038	Identifier	ATTR_TREQ_INVALID_REASON		5349716	0					
ANR	5350039	Argument	"""Did not request a transferd with that id for any user."""		5349716	1					
ANR	5350040	PrimaryExpression	"""Did not request a transferd with that id for any user."""		5349716	0					
ANR	5350041	ExpressionStatement	respad . put ( * rsock )	935:2:24662:24680	5349716	10	True				
ANR	5350042	CallExpression	respad . put ( * rsock )		5349716	0					
ANR	5350043	Callee	respad . put		5349716	0					
ANR	5350044	MemberAccess	respad . put		5349716	0					
ANR	5350045	Identifier	respad		5349716	0					
ANR	5350046	Identifier	put		5349716	1					
ANR	5350047	ArgumentList	* rsock		5349716	1					
ANR	5350048	Argument	* rsock		5349716	0					
ANR	5350049	UnaryOperationExpression	* rsock		5349716	0					
ANR	5350050	UnaryOperator	*		5349716	0					
ANR	5350051	Identifier	rsock		5349716	1					
ANR	5350052	ExpressionStatement	rsock -> end_of_message ( )	936:2:24684:24707	5349716	11	True				
ANR	5350053	CallExpression	rsock -> end_of_message ( )		5349716	0					
ANR	5350054	Callee	rsock -> end_of_message		5349716	0					
ANR	5350055	PtrMemberAccess	rsock -> end_of_message		5349716	0					
ANR	5350056	Identifier	rsock		5349716	0					
ANR	5350057	Identifier	end_of_message		5349716	1					
ANR	5350058	ArgumentList			5349716	1					
ANR	5350059	ExpressionStatement	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"	938:2:24712:24774	5349716	12	True				
ANR	5350060	CallExpression	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"		5349716	0					
ANR	5350061	Callee	dprintf		5349716	0					
ANR	5350062	Identifier	dprintf		5349716	0					
ANR	5350063	ArgumentList	D_ALWAYS		5349716	1					
ANR	5350064	Argument	D_ALWAYS		5349716	0					
ANR	5350065	Identifier	D_ALWAYS		5349716	0					
ANR	5350066	Argument	"""Leaving TDMan::transferd_registration()\\n"""		5349716	1					
ANR	5350067	PrimaryExpression	"""Leaving TDMan::transferd_registration()\\n"""		5349716	0					
ANR	5350068	ReturnStatement	return CLOSE_STREAM ;	939:2:24778:24797	5349716	13	True				
ANR	5350069	Identifier	CLOSE_STREAM		5349716	0					
ANR	5350070	IfStatement	if ( td -> get_fquser ( ) != fquser )		5349716	50					
ANR	5350071	Condition	td -> get_fquser ( ) != fquser	943:5:24876:24901	5349716	0	True				
ANR	5350072	EqualityExpression	td -> get_fquser ( ) != fquser		5349716	0		!=			
ANR	5350073	CallExpression	td -> get_fquser ( )		5349716	0					
ANR	5350074	Callee	td -> get_fquser		5349716	0					
ANR	5350075	PtrMemberAccess	td -> get_fquser		5349716	0					
ANR	5350076	Identifier	td		5349716	0					
ANR	5350077	Identifier	get_fquser		5349716	1					
ANR	5350078	ArgumentList			5349716	1					
ANR	5350079	Identifier	fquser		5349716	1					
ANR	5350080	CompoundStatement		96:33:3085:3085	5349716	1					
ANR	5350081	Statement	dprintf	945:2:24934:24940	5349716	0	True				
ANR	5350082	Statement	(	945:9:24941:24941	5349716	1	True				
ANR	5350083	Statement	D_ALWAYS	945:10:24942:24949	5349716	2	True				
ANR	5350084	Statement	","	945:18:24950:24950	5349716	3	True				
ANR	5350085	Statement	"""Did not request a transferd with that id for this specific user. """	946:3:24956:25022	5349716	4	True				
ANR	5350086	Statement	"""Refuse.\\n"""	947:3:25027:25037	5349716	5	True				
ANR	5350087	Statement	)	947:14:25038:25038	5349716	6	True				
ANR	5350088	ExpressionStatement		947:15:25039:25039	5349716	7	True				
ANR	5350089	ExpressionStatement	"respad . Assign ( ATTR_TREQ_INVALID_REQUEST , TRUE )"	949:2:25044:25090	5349716	8	True				
ANR	5350090	CallExpression	"respad . Assign ( ATTR_TREQ_INVALID_REQUEST , TRUE )"		5349716	0					
ANR	5350091	Callee	respad . Assign		5349716	0					
ANR	5350092	MemberAccess	respad . Assign		5349716	0					
ANR	5350093	Identifier	respad		5349716	0					
ANR	5350094	Identifier	Assign		5349716	1					
ANR	5350095	ArgumentList	ATTR_TREQ_INVALID_REQUEST		5349716	1					
ANR	5350096	Argument	ATTR_TREQ_INVALID_REQUEST		5349716	0					
ANR	5350097	Identifier	ATTR_TREQ_INVALID_REQUEST		5349716	0					
ANR	5350098	Argument	TRUE		5349716	1					
ANR	5350099	Identifier	TRUE		5349716	0					
ANR	5350100	ExpressionStatement	"respad . Assign ( ATTR_TREQ_INVALID_REASON , ""Did not request a transferd with that id for this specific user."" )"	950:2:25094:25205	5349716	9	True				
ANR	5350101	CallExpression	"respad . Assign ( ATTR_TREQ_INVALID_REASON , ""Did not request a transferd with that id for this specific user."" )"		5349716	0					
ANR	5350102	Callee	respad . Assign		5349716	0					
ANR	5350103	MemberAccess	respad . Assign		5349716	0					
ANR	5350104	Identifier	respad		5349716	0					
ANR	5350105	Identifier	Assign		5349716	1					
ANR	5350106	ArgumentList	ATTR_TREQ_INVALID_REASON		5349716	1					
ANR	5350107	Argument	ATTR_TREQ_INVALID_REASON		5349716	0					
ANR	5350108	Identifier	ATTR_TREQ_INVALID_REASON		5349716	0					
ANR	5350109	Argument	"""Did not request a transferd with that id for this specific user."""		5349716	1					
ANR	5350110	PrimaryExpression	"""Did not request a transferd with that id for this specific user."""		5349716	0					
ANR	5350111	ExpressionStatement	respad . put ( * rsock )	952:2:25209:25227	5349716	10	True				
ANR	5350112	CallExpression	respad . put ( * rsock )		5349716	0					
ANR	5350113	Callee	respad . put		5349716	0					
ANR	5350114	MemberAccess	respad . put		5349716	0					
ANR	5350115	Identifier	respad		5349716	0					
ANR	5350116	Identifier	put		5349716	1					
ANR	5350117	ArgumentList	* rsock		5349716	1					
ANR	5350118	Argument	* rsock		5349716	0					
ANR	5350119	UnaryOperationExpression	* rsock		5349716	0					
ANR	5350120	UnaryOperator	*		5349716	0					
ANR	5350121	Identifier	rsock		5349716	1					
ANR	5350122	ExpressionStatement	rsock -> end_of_message ( )	953:2:25231:25254	5349716	11	True				
ANR	5350123	CallExpression	rsock -> end_of_message ( )		5349716	0					
ANR	5350124	Callee	rsock -> end_of_message		5349716	0					
ANR	5350125	PtrMemberAccess	rsock -> end_of_message		5349716	0					
ANR	5350126	Identifier	rsock		5349716	0					
ANR	5350127	Identifier	end_of_message		5349716	1					
ANR	5350128	ArgumentList			5349716	1					
ANR	5350129	ExpressionStatement	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"	955:2:25259:25321	5349716	12	True				
ANR	5350130	CallExpression	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"		5349716	0					
ANR	5350131	Callee	dprintf		5349716	0					
ANR	5350132	Identifier	dprintf		5349716	0					
ANR	5350133	ArgumentList	D_ALWAYS		5349716	1					
ANR	5350134	Argument	D_ALWAYS		5349716	0					
ANR	5350135	Identifier	D_ALWAYS		5349716	0					
ANR	5350136	Argument	"""Leaving TDMan::transferd_registration()\\n"""		5349716	1					
ANR	5350137	PrimaryExpression	"""Leaving TDMan::transferd_registration()\\n"""		5349716	0					
ANR	5350138	ReturnStatement	return CLOSE_STREAM ;	956:2:25325:25344	5349716	13	True				
ANR	5350139	Identifier	CLOSE_STREAM		5349716	0					
ANR	5350140	IfStatement	if ( td -> get_status ( ) != TD_INVOKED )		5349716	51					
ANR	5350141	Condition	td -> get_status ( ) != TD_INVOKED	960:5:25390:25419	5349716	0	True				
ANR	5350142	EqualityExpression	td -> get_status ( ) != TD_INVOKED		5349716	0		!=			
ANR	5350143	CallExpression	td -> get_status ( )		5349716	0					
ANR	5350144	Callee	td -> get_status		5349716	0					
ANR	5350145	PtrMemberAccess	td -> get_status		5349716	0					
ANR	5350146	Identifier	td		5349716	0					
ANR	5350147	Identifier	get_status		5349716	1					
ANR	5350148	ArgumentList			5349716	1					
ANR	5350149	Identifier	TD_INVOKED		5349716	1					
ANR	5350150	CompoundStatement		113:37:3603:3603	5349716	1					
ANR	5350151	ExpressionStatement	"dprintf ( D_ALWAYS , ""Transferd for user not in TD_PRE_INVOKED state. Refuse.\\n"" )"	963:2:25453:25535	5349716	0	True				
ANR	5350152	CallExpression	"dprintf ( D_ALWAYS , ""Transferd for user not in TD_PRE_INVOKED state. Refuse.\\n"" )"		5349716	0					
ANR	5350153	Callee	dprintf		5349716	0					
ANR	5350154	Identifier	dprintf		5349716	0					
ANR	5350155	ArgumentList	D_ALWAYS		5349716	1					
ANR	5350156	Argument	D_ALWAYS		5349716	0					
ANR	5350157	Identifier	D_ALWAYS		5349716	0					
ANR	5350158	Argument	"""Transferd for user not in TD_PRE_INVOKED state. Refuse.\\n"""		5349716	1					
ANR	5350159	PrimaryExpression	"""Transferd for user not in TD_PRE_INVOKED state. Refuse.\\n"""		5349716	0					
ANR	5350160	ExpressionStatement	"respad . Assign ( ATTR_TREQ_INVALID_REQUEST , TRUE )"	966:2:25540:25586	5349716	1	True				
ANR	5350161	CallExpression	"respad . Assign ( ATTR_TREQ_INVALID_REQUEST , TRUE )"		5349716	0					
ANR	5350162	Callee	respad . Assign		5349716	0					
ANR	5350163	MemberAccess	respad . Assign		5349716	0					
ANR	5350164	Identifier	respad		5349716	0					
ANR	5350165	Identifier	Assign		5349716	1					
ANR	5350166	ArgumentList	ATTR_TREQ_INVALID_REQUEST		5349716	1					
ANR	5350167	Argument	ATTR_TREQ_INVALID_REQUEST		5349716	0					
ANR	5350168	Identifier	ATTR_TREQ_INVALID_REQUEST		5349716	0					
ANR	5350169	Argument	TRUE		5349716	1					
ANR	5350170	Identifier	TRUE		5349716	0					
ANR	5350171	ExpressionStatement	"respad . Assign ( ATTR_TREQ_INVALID_REASON , ""Transferd for user not in TD_PRE_INVOKED state.\\n"" )"	967:2:25590:25686	5349716	2	True				
ANR	5350172	CallExpression	"respad . Assign ( ATTR_TREQ_INVALID_REASON , ""Transferd for user not in TD_PRE_INVOKED state.\\n"" )"		5349716	0					
ANR	5350173	Callee	respad . Assign		5349716	0					
ANR	5350174	MemberAccess	respad . Assign		5349716	0					
ANR	5350175	Identifier	respad		5349716	0					
ANR	5350176	Identifier	Assign		5349716	1					
ANR	5350177	ArgumentList	ATTR_TREQ_INVALID_REASON		5349716	1					
ANR	5350178	Argument	ATTR_TREQ_INVALID_REASON		5349716	0					
ANR	5350179	Identifier	ATTR_TREQ_INVALID_REASON		5349716	0					
ANR	5350180	Argument	"""Transferd for user not in TD_PRE_INVOKED state.\\n"""		5349716	1					
ANR	5350181	PrimaryExpression	"""Transferd for user not in TD_PRE_INVOKED state.\\n"""		5349716	0					
ANR	5350182	ExpressionStatement	respad . put ( * rsock )	969:2:25690:25708	5349716	3	True				
ANR	5350183	CallExpression	respad . put ( * rsock )		5349716	0					
ANR	5350184	Callee	respad . put		5349716	0					
ANR	5350185	MemberAccess	respad . put		5349716	0					
ANR	5350186	Identifier	respad		5349716	0					
ANR	5350187	Identifier	put		5349716	1					
ANR	5350188	ArgumentList	* rsock		5349716	1					
ANR	5350189	Argument	* rsock		5349716	0					
ANR	5350190	UnaryOperationExpression	* rsock		5349716	0					
ANR	5350191	UnaryOperator	*		5349716	0					
ANR	5350192	Identifier	rsock		5349716	1					
ANR	5350193	ExpressionStatement	rsock -> end_of_message ( )	970:2:25712:25735	5349716	4	True				
ANR	5350194	CallExpression	rsock -> end_of_message ( )		5349716	0					
ANR	5350195	Callee	rsock -> end_of_message		5349716	0					
ANR	5350196	PtrMemberAccess	rsock -> end_of_message		5349716	0					
ANR	5350197	Identifier	rsock		5349716	0					
ANR	5350198	Identifier	end_of_message		5349716	1					
ANR	5350199	ArgumentList			5349716	1					
ANR	5350200	ExpressionStatement	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"	972:2:25740:25802	5349716	5	True				
ANR	5350201	CallExpression	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"		5349716	0					
ANR	5350202	Callee	dprintf		5349716	0					
ANR	5350203	Identifier	dprintf		5349716	0					
ANR	5350204	ArgumentList	D_ALWAYS		5349716	1					
ANR	5350205	Argument	D_ALWAYS		5349716	0					
ANR	5350206	Identifier	D_ALWAYS		5349716	0					
ANR	5350207	Argument	"""Leaving TDMan::transferd_registration()\\n"""		5349716	1					
ANR	5350208	PrimaryExpression	"""Leaving TDMan::transferd_registration()\\n"""		5349716	0					
ANR	5350209	ReturnStatement	return CLOSE_STREAM ;	973:2:25806:25825	5349716	6	True				
ANR	5350210	Identifier	CLOSE_STREAM		5349716	0					
ANR	5350211	ExpressionStatement	"respad . Assign ( ATTR_TREQ_INVALID_REQUEST , FALSE )"	977:1:25883:25930	5349716	52	True				
ANR	5350212	CallExpression	"respad . Assign ( ATTR_TREQ_INVALID_REQUEST , FALSE )"		5349716	0					
ANR	5350213	Callee	respad . Assign		5349716	0					
ANR	5350214	MemberAccess	respad . Assign		5349716	0					
ANR	5350215	Identifier	respad		5349716	0					
ANR	5350216	Identifier	Assign		5349716	1					
ANR	5350217	ArgumentList	ATTR_TREQ_INVALID_REQUEST		5349716	1					
ANR	5350218	Argument	ATTR_TREQ_INVALID_REQUEST		5349716	0					
ANR	5350219	Identifier	ATTR_TREQ_INVALID_REQUEST		5349716	0					
ANR	5350220	Argument	FALSE		5349716	1					
ANR	5350221	Identifier	FALSE		5349716	0					
ANR	5350222	ExpressionStatement	respad . put ( * rsock )	978:1:25933:25951	5349716	53	True				
ANR	5350223	CallExpression	respad . put ( * rsock )		5349716	0					
ANR	5350224	Callee	respad . put		5349716	0					
ANR	5350225	MemberAccess	respad . put		5349716	0					
ANR	5350226	Identifier	respad		5349716	0					
ANR	5350227	Identifier	put		5349716	1					
ANR	5350228	ArgumentList	* rsock		5349716	1					
ANR	5350229	Argument	* rsock		5349716	0					
ANR	5350230	UnaryOperationExpression	* rsock		5349716	0					
ANR	5350231	UnaryOperator	*		5349716	0					
ANR	5350232	Identifier	rsock		5349716	1					
ANR	5350233	ExpressionStatement	rsock -> end_of_message ( )	979:1:25954:25977	5349716	54	True				
ANR	5350234	CallExpression	rsock -> end_of_message ( )		5349716	0					
ANR	5350235	Callee	rsock -> end_of_message		5349716	0					
ANR	5350236	PtrMemberAccess	rsock -> end_of_message		5349716	0					
ANR	5350237	Identifier	rsock		5349716	0					
ANR	5350238	Identifier	end_of_message		5349716	1					
ANR	5350239	ArgumentList			5349716	1					
ANR	5350240	ExpressionStatement	td -> set_status ( TD_REGISTERED )	986:1:26228:26257	5349716	55	True				
ANR	5350241	CallExpression	td -> set_status ( TD_REGISTERED )		5349716	0					
ANR	5350242	Callee	td -> set_status		5349716	0					
ANR	5350243	PtrMemberAccess	td -> set_status		5349716	0					
ANR	5350244	Identifier	td		5349716	0					
ANR	5350245	Identifier	set_status		5349716	1					
ANR	5350246	ArgumentList	TD_REGISTERED		5349716	1					
ANR	5350247	Argument	TD_REGISTERED		5349716	0					
ANR	5350248	Identifier	TD_REGISTERED		5349716	0					
ANR	5350249	ExpressionStatement	td -> set_sinful ( td_sinful )	987:1:26260:26285	5349716	56	True				
ANR	5350250	CallExpression	td -> set_sinful ( td_sinful )		5349716	0					
ANR	5350251	Callee	td -> set_sinful		5349716	0					
ANR	5350252	PtrMemberAccess	td -> set_sinful		5349716	0					
ANR	5350253	Identifier	td		5349716	0					
ANR	5350254	Identifier	set_sinful		5349716	1					
ANR	5350255	ArgumentList	td_sinful		5349716	1					
ANR	5350256	Argument	td_sinful		5349716	0					
ANR	5350257	Identifier	td_sinful		5349716	0					
ANR	5350258	ExpressionStatement	td -> set_update_sock ( rsock )	988:1:26288:26314	5349716	57	True				
ANR	5350259	CallExpression	td -> set_update_sock ( rsock )		5349716	0					
ANR	5350260	Callee	td -> set_update_sock		5349716	0					
ANR	5350261	PtrMemberAccess	td -> set_update_sock		5349716	0					
ANR	5350262	Identifier	td		5349716	0					
ANR	5350263	Identifier	set_update_sock		5349716	1					
ANR	5350264	ArgumentList	rsock		5349716	1					
ANR	5350265	Argument	rsock		5349716	0					
ANR	5350266	Identifier	rsock		5349716	0					
ANR	5350267	ExpressionStatement	"dprintf ( D_ALWAYS , ""Registration is valid...\\n"" )"	1006:1:27045:27092	5349716	58	True				
ANR	5350268	CallExpression	"dprintf ( D_ALWAYS , ""Registration is valid...\\n"" )"		5349716	0					
ANR	5350269	Callee	dprintf		5349716	0					
ANR	5350270	Identifier	dprintf		5349716	0					
ANR	5350271	ArgumentList	D_ALWAYS		5349716	1					
ANR	5350272	Argument	D_ALWAYS		5349716	0					
ANR	5350273	Identifier	D_ALWAYS		5349716	0					
ANR	5350274	Argument	"""Registration is valid...\\n"""		5349716	1					
ANR	5350275	PrimaryExpression	"""Registration is valid...\\n"""		5349716	0					
ANR	5350276	ExpressionStatement	"dprintf ( D_ALWAYS , ""Creating TransferRequest channel to transferd.\\n"" )"	1007:1:27095:27164	5349716	59	True				
ANR	5350277	CallExpression	"dprintf ( D_ALWAYS , ""Creating TransferRequest channel to transferd.\\n"" )"		5349716	0					
ANR	5350278	Callee	dprintf		5349716	0					
ANR	5350279	Identifier	dprintf		5349716	0					
ANR	5350280	ArgumentList	D_ALWAYS		5349716	1					
ANR	5350281	Argument	D_ALWAYS		5349716	0					
ANR	5350282	Identifier	D_ALWAYS		5349716	0					
ANR	5350283	Argument	"""Creating TransferRequest channel to transferd.\\n"""		5349716	1					
ANR	5350284	PrimaryExpression	"""Creating TransferRequest channel to transferd.\\n"""		5349716	0					
ANR	5350285	IdentifierDeclStatement	CondorError errstack ;	1008:1:27167:27187	5349716	60	True				
ANR	5350286	IdentifierDecl	errstack		5349716	0					
ANR	5350287	IdentifierDeclType	CondorError		5349716	0					
ANR	5350288	Identifier	errstack		5349716	1					
ANR	5350289	IdentifierDeclStatement	ReliSock * td_req_sock = NULL ;	1009:1:27190:27218	5349716	61	True				
ANR	5350290	IdentifierDecl	* td_req_sock = NULL		5349716	0					
ANR	5350291	IdentifierDeclType	ReliSock *		5349716	0					
ANR	5350292	Identifier	td_req_sock		5349716	1					
ANR	5350293	AssignmentExpression	* td_req_sock = NULL		5349716	2		=			
ANR	5350294	Identifier	NULL		5349716	0					
ANR	5350295	Identifier	NULL		5349716	1					
ANR	5350296	IdentifierDeclStatement	DCTransferD dctd ( td_sinful . Value ( ) ) ;	1010:1:27221:27256	5349716	62	True				
ANR	5350297	IdentifierDecl	dctd ( td_sinful . Value ( ) )		5349716	0					
ANR	5350298	IdentifierDeclType	DCTransferD		5349716	0					
ANR	5350299	Identifier	dctd		5349716	1					
ANR	5350300	CallExpression	td_sinful . Value ( )		5349716	2					
ANR	5350301	Callee	td_sinful . Value		5349716	0					
ANR	5350302	MemberAccess	td_sinful . Value		5349716	0					
ANR	5350303	Identifier	td_sinful		5349716	0					
ANR	5350304	Identifier	Value		5349716	1					
ANR	5350305	ArgumentList			5349716	1					
ANR	5350306	IfStatement	"if ( dctd . setup_treq_channel ( & td_req_sock , 20 , & errstack ) == false )"		5349716	63					
ANR	5350307	Condition	"dctd . setup_treq_channel ( & td_req_sock , 20 , & errstack ) == false"	1013:5:27320:27380	5349716	0	True				
ANR	5350308	EqualityExpression	"dctd . setup_treq_channel ( & td_req_sock , 20 , & errstack ) == false"		5349716	0		==			
ANR	5350309	CallExpression	"dctd . setup_treq_channel ( & td_req_sock , 20 , & errstack )"		5349716	0					
ANR	5350310	Callee	dctd . setup_treq_channel		5349716	0					
ANR	5350311	MemberAccess	dctd . setup_treq_channel		5349716	0					
ANR	5350312	Identifier	dctd		5349716	0					
ANR	5350313	Identifier	setup_treq_channel		5349716	1					
ANR	5350314	ArgumentList	& td_req_sock		5349716	1					
ANR	5350315	Argument	& td_req_sock		5349716	0					
ANR	5350316	UnaryOperationExpression	& td_req_sock		5349716	0					
ANR	5350317	UnaryOperator	&		5349716	0					
ANR	5350318	Identifier	td_req_sock		5349716	1					
ANR	5350319	Argument	20		5349716	1					
ANR	5350320	PrimaryExpression	20		5349716	0					
ANR	5350321	Argument	& errstack		5349716	2					
ANR	5350322	UnaryOperationExpression	& errstack		5349716	0					
ANR	5350323	UnaryOperator	&		5349716	0					
ANR	5350324	Identifier	errstack		5349716	1					
ANR	5350325	Identifier	false		5349716	1					
ANR	5350326	CompoundStatement		166:68:5564:5564	5349716	1					
ANR	5350327	ExpressionStatement	"dprintf ( D_ALWAYS , ""Refusing errant transferd.\\n"" )"	1014:2:27387:27436	5349716	0	True				
ANR	5350328	CallExpression	"dprintf ( D_ALWAYS , ""Refusing errant transferd.\\n"" )"		5349716	0					
ANR	5350329	Callee	dprintf		5349716	0					
ANR	5350330	Identifier	dprintf		5349716	0					
ANR	5350331	ArgumentList	D_ALWAYS		5349716	1					
ANR	5350332	Argument	D_ALWAYS		5349716	0					
ANR	5350333	Identifier	D_ALWAYS		5349716	0					
ANR	5350334	Argument	"""Refusing errant transferd.\\n"""		5349716	1					
ANR	5350335	PrimaryExpression	"""Refusing errant transferd.\\n"""		5349716	0					
ANR	5350336	ExpressionStatement	refuse ( rsock )	1015:2:27440:27453	5349716	1	True				
ANR	5350337	CallExpression	refuse ( rsock )		5349716	0					
ANR	5350338	Callee	refuse		5349716	0					
ANR	5350339	Identifier	refuse		5349716	0					
ANR	5350340	ArgumentList	rsock		5349716	1					
ANR	5350341	Argument	rsock		5349716	0					
ANR	5350342	Identifier	rsock		5349716	0					
ANR	5350343	ExpressionStatement	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"	1016:2:27457:27519	5349716	2	True				
ANR	5350344	CallExpression	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"		5349716	0					
ANR	5350345	Callee	dprintf		5349716	0					
ANR	5350346	Identifier	dprintf		5349716	0					
ANR	5350347	ArgumentList	D_ALWAYS		5349716	1					
ANR	5350348	Argument	D_ALWAYS		5349716	0					
ANR	5350349	Identifier	D_ALWAYS		5349716	0					
ANR	5350350	Argument	"""Leaving TDMan::transferd_registration()\\n"""		5349716	1					
ANR	5350351	PrimaryExpression	"""Leaving TDMan::transferd_registration()\\n"""		5349716	0					
ANR	5350352	ReturnStatement	return CLOSE_STREAM ;	1017:2:27523:27542	5349716	3	True				
ANR	5350353	Identifier	CLOSE_STREAM		5349716	0					
ANR	5350354	ExpressionStatement	td -> set_treq_sock ( td_req_sock )	1027:1:27757:27787	5349716	64	True				
ANR	5350355	CallExpression	td -> set_treq_sock ( td_req_sock )		5349716	0					
ANR	5350356	Callee	td -> set_treq_sock		5349716	0					
ANR	5350357	PtrMemberAccess	td -> set_treq_sock		5349716	0					
ANR	5350358	Identifier	td		5349716	0					
ANR	5350359	Identifier	set_treq_sock		5349716	1					
ANR	5350360	ArgumentList	td_req_sock		5349716	1					
ANR	5350361	Argument	td_req_sock		5349716	0					
ANR	5350362	Identifier	td_req_sock		5349716	0					
ANR	5350363	ExpressionStatement	"dprintf ( D_ALWAYS , ""TransferRequest channel created. Transferd appears stable.\\n"" )"	1028:1:27790:27874	5349716	65	True				
ANR	5350364	CallExpression	"dprintf ( D_ALWAYS , ""TransferRequest channel created. Transferd appears stable.\\n"" )"		5349716	0					
ANR	5350365	Callee	dprintf		5349716	0					
ANR	5350366	Identifier	dprintf		5349716	0					
ANR	5350367	ArgumentList	D_ALWAYS		5349716	1					
ANR	5350368	Argument	D_ALWAYS		5349716	0					
ANR	5350369	Identifier	D_ALWAYS		5349716	0					
ANR	5350370	Argument	"""TransferRequest channel created. Transferd appears stable.\\n"""		5349716	1					
ANR	5350371	PrimaryExpression	"""TransferRequest channel created. Transferd appears stable.\\n"""		5349716	0					
ANR	5350372	IdentifierDeclStatement	MyString sock_id ;	1036:1:28135:28151	5349716	66	True				
ANR	5350373	IdentifierDecl	sock_id		5349716	0					
ANR	5350374	IdentifierDeclType	MyString		5349716	0					
ANR	5350375	Identifier	sock_id		5349716	1					
ANR	5350376	ExpressionStatement	"sock_id += ""<Update-Socket-For-TD-"""	1037:1:28154:28189	5349716	67	True				
ANR	5350377	AssignmentExpression	"sock_id += ""<Update-Socket-For-TD-"""		5349716	0		+=			
ANR	5350378	Identifier	sock_id		5349716	0					
ANR	5350379	PrimaryExpression	"""<Update-Socket-For-TD-"""		5349716	1					
ANR	5350380	ExpressionStatement	sock_id += td_sinful	1038:1:28192:28212	5349716	68	True				
ANR	5350381	AssignmentExpression	sock_id += td_sinful		5349716	0		+=			
ANR	5350382	Identifier	sock_id		5349716	0					
ANR	5350383	Identifier	td_sinful		5349716	1					
ANR	5350384	ExpressionStatement	"sock_id += ""-"""	1039:1:28215:28229	5349716	69	True				
ANR	5350385	AssignmentExpression	"sock_id += ""-"""		5349716	0		+=			
ANR	5350386	Identifier	sock_id		5349716	0					
ANR	5350387	PrimaryExpression	"""-"""		5349716	1					
ANR	5350388	ExpressionStatement	sock_id += fquser	1040:1:28232:28249	5349716	70	True				
ANR	5350389	AssignmentExpression	sock_id += fquser		5349716	0		+=			
ANR	5350390	Identifier	sock_id		5349716	0					
ANR	5350391	Identifier	fquser		5349716	1					
ANR	5350392	ExpressionStatement	"sock_id += ""-"""	1041:1:28252:28266	5349716	71	True				
ANR	5350393	AssignmentExpression	"sock_id += ""-"""		5349716	0		+=			
ANR	5350394	Identifier	sock_id		5349716	0					
ANR	5350395	PrimaryExpression	"""-"""		5349716	1					
ANR	5350396	ExpressionStatement	sock_id += td_id	1042:1:28269:28285	5349716	72	True				
ANR	5350397	AssignmentExpression	sock_id += td_id		5349716	0		+=			
ANR	5350398	Identifier	sock_id		5349716	0					
ANR	5350399	Identifier	td_id		5349716	1					
ANR	5350400	ExpressionStatement	"sock_id += "">"""	1043:1:28288:28302	5349716	73	True				
ANR	5350401	AssignmentExpression	"sock_id += "">"""		5349716	0		+=			
ANR	5350402	Identifier	sock_id		5349716	0					
ANR	5350403	PrimaryExpression	""">"""		5349716	1					
ANR	5350404	ExpressionStatement	"daemonCore -> Register_Socket ( sock , sock_id . Value ( ) , ( SocketHandlercpp ) & TDMan :: transferd_update , ""TDMan::transferd_update"" , this , ALLOW )"	1045:1:28306:28444	5349716	74	True				
ANR	5350405	CallExpression	"daemonCore -> Register_Socket ( sock , sock_id . Value ( ) , ( SocketHandlercpp ) & TDMan :: transferd_update , ""TDMan::transferd_update"" , this , ALLOW )"		5349716	0					
ANR	5350406	Callee	daemonCore -> Register_Socket		5349716	0					
ANR	5350407	PtrMemberAccess	daemonCore -> Register_Socket		5349716	0					
ANR	5350408	Identifier	daemonCore		5349716	0					
ANR	5350409	Identifier	Register_Socket		5349716	1					
ANR	5350410	ArgumentList	sock		5349716	1					
ANR	5350411	Argument	sock		5349716	0					
ANR	5350412	Identifier	sock		5349716	0					
ANR	5350413	Argument	sock_id . Value ( )		5349716	1					
ANR	5350414	CallExpression	sock_id . Value ( )		5349716	0					
ANR	5350415	Callee	sock_id . Value		5349716	0					
ANR	5350416	MemberAccess	sock_id . Value		5349716	0					
ANR	5350417	Identifier	sock_id		5349716	0					
ANR	5350418	Identifier	Value		5349716	1					
ANR	5350419	ArgumentList			5349716	1					
ANR	5350420	Argument	( SocketHandlercpp ) & TDMan :: transferd_update		5349716	2					
ANR	5350421	CastExpression	( SocketHandlercpp ) & TDMan :: transferd_update		5349716	0					
ANR	5350422	CastTarget	SocketHandlercpp		5349716	0					
ANR	5350423	UnaryOperationExpression	& TDMan :: transferd_update		5349716	1					
ANR	5350424	UnaryOperator	&		5349716	0					
ANR	5350425	Identifier	TDMan :: transferd_update		5349716	1					
ANR	5350426	Argument	"""TDMan::transferd_update"""		5349716	3					
ANR	5350427	PrimaryExpression	"""TDMan::transferd_update"""		5349716	0					
ANR	5350428	Argument	this		5349716	4					
ANR	5350429	Identifier	this		5349716	0					
ANR	5350430	Argument	ALLOW		5349716	5					
ANR	5350431	Identifier	ALLOW		5349716	0					
ANR	5350432	ExpressionStatement	"tdup = new TDUpdateContinuation ( td_sinful , fquser , td_id , sock_id . Value ( ) )"	1055:1:28827:28901	5349716	75	True				
ANR	5350433	AssignmentExpression	"tdup = new TDUpdateContinuation ( td_sinful , fquser , td_id , sock_id . Value ( ) )"		5349716	0		=			
ANR	5350434	Identifier	tdup		5349716	0					
ANR	5350435	Expression	"td_sinful , fquser , td_id , sock_id . Value ( )"		5349716	1					
ANR	5350436	Identifier	td_sinful		5349716	0					
ANR	5350437	Expression	"fquser , td_id , sock_id . Value ( )"		5349716	1					
ANR	5350438	Identifier	fquser		5349716	0					
ANR	5350439	Expression	"td_id , sock_id . Value ( )"		5349716	1					
ANR	5350440	Identifier	td_id		5349716	0					
ANR	5350441	CallExpression	sock_id . Value ( )		5349716	1					
ANR	5350442	Callee	sock_id . Value		5349716	0					
ANR	5350443	MemberAccess	sock_id . Value		5349716	0					
ANR	5350444	Identifier	sock_id		5349716	0					
ANR	5350445	Identifier	Value		5349716	1					
ANR	5350446	ArgumentList			5349716	1					
ANR	5350447	ExpressionStatement	ASSERT ( tdup )	1056:1:28904:28916	5349716	76	True				
ANR	5350448	CallExpression	ASSERT ( tdup )		5349716	0					
ANR	5350449	Callee	ASSERT		5349716	0					
ANR	5350450	Identifier	ASSERT		5349716	0					
ANR	5350451	ArgumentList	tdup		5349716	1					
ANR	5350452	Argument	tdup		5349716	0					
ANR	5350453	Identifier	tdup		5349716	0					
ANR	5350454	ExpressionStatement	daemonCore -> Register_DataPtr ( tdup )	1059:1:28978:29012	5349716	77	True				
ANR	5350455	CallExpression	daemonCore -> Register_DataPtr ( tdup )		5349716	0					
ANR	5350456	Callee	daemonCore -> Register_DataPtr		5349716	0					
ANR	5350457	PtrMemberAccess	daemonCore -> Register_DataPtr		5349716	0					
ANR	5350458	Identifier	daemonCore		5349716	0					
ANR	5350459	Identifier	Register_DataPtr		5349716	1					
ANR	5350460	ArgumentList	tdup		5349716	1					
ANR	5350461	Argument	tdup		5349716	0					
ANR	5350462	Identifier	tdup		5349716	0					
ANR	5350463	ExpressionStatement	ret = td -> call_reg_callback ( td )	1068:1:29369:29400	5349716	78	True				
ANR	5350464	AssignmentExpression	ret = td -> call_reg_callback ( td )		5349716	0		=			
ANR	5350465	Identifier	ret		5349716	0					
ANR	5350466	CallExpression	td -> call_reg_callback ( td )		5349716	1					
ANR	5350467	Callee	td -> call_reg_callback		5349716	0					
ANR	5350468	PtrMemberAccess	td -> call_reg_callback		5349716	0					
ANR	5350469	Identifier	td		5349716	0					
ANR	5350470	Identifier	call_reg_callback		5349716	1					
ANR	5350471	ArgumentList	td		5349716	1					
ANR	5350472	Argument	td		5349716	0					
ANR	5350473	Identifier	td		5349716	0					
ANR	5350474	SwitchStatement	switch ( ret )		5349716	79					
ANR	5350475	Condition	ret	1069:8:29410:29412	5349716	0	True				
ANR	5350476	Identifier	ret		5349716	0					
ANR	5350477	CompoundStatement		222:13:7596:7596	5349716	1					
ANR	5350478	Label	case TD_ACTION_CONTINUE :	1070:2:29419:29442	5349716	0	True				
ANR	5350479	Identifier	TD_ACTION_CONTINUE		5349716	0					
ANR	5350480	BreakStatement	break ;	1072:3:29484:29489	5349716	1	True				
ANR	5350481	Label	case TD_ACTION_TERMINATE :	1074:2:29494:29518	5349716	2	True				
ANR	5350482	Identifier	TD_ACTION_TERMINATE		5349716	0					
ANR	5350483	Statement	EXCEPT	1075:3:29523:29528	5349716	3	True				
ANR	5350484	Statement	(	1075:9:29529:29529	5349716	4	True				
ANR	5350485	Statement	"""TDMan::transferd_registration() Programmer Error! """	1075:10:29530:29581	5349716	5	True				
ANR	5350486	Statement	"""Termination of transferd in registration callback not """	1076:4:29587:29642	5349716	6	True				
ANR	5350487	Statement	"""implemented."""	1077:4:29648:29661	5349716	7	True				
ANR	5350488	Statement	)	1077:18:29662:29662	5349716	8	True				
ANR	5350489	ExpressionStatement		1077:19:29663:29663	5349716	9	True				
ANR	5350490	BreakStatement	break ;	1078:3:29668:29673	5349716	10	True				
ANR	5350491	Label	default :	1080:2:29678:29685	5349716	11	True				
ANR	5350492	Identifier	default		5349716	0					
ANR	5350493	Statement	EXCEPT	1081:3:29690:29695	5349716	12	True				
ANR	5350494	Statement	(	1081:9:29696:29696	5349716	13	True				
ANR	5350495	Statement	"""TDMan::transferd_registration() Programmer Error! """	1081:10:29697:29748	5349716	14	True				
ANR	5350496	Statement	"""Unknown return code from the registration callback!"""	1082:4:29754:29806	5349716	15	True				
ANR	5350497	Statement	)	1082:57:29807:29807	5349716	16	True				
ANR	5350498	ExpressionStatement		1082:58:29808:29808	5349716	17	True				
ANR	5350499	BreakStatement	break ;	1083:3:29813:29818	5349716	18	True				
ANR	5350500	ExpressionStatement	"dprintf ( D_ALWAYS , ""TDMan::transferd_registration() pushing queued requests\\n"" )"	1095:1:30323:30404	5349716	80	True				
ANR	5350501	CallExpression	"dprintf ( D_ALWAYS , ""TDMan::transferd_registration() pushing queued requests\\n"" )"		5349716	0					
ANR	5350502	Callee	dprintf		5349716	0					
ANR	5350503	Identifier	dprintf		5349716	0					
ANR	5350504	ArgumentList	D_ALWAYS		5349716	1					
ANR	5350505	Argument	D_ALWAYS		5349716	0					
ANR	5350506	Identifier	D_ALWAYS		5349716	0					
ANR	5350507	Argument	"""TDMan::transferd_registration() pushing queued requests\\n"""		5349716	1					
ANR	5350508	PrimaryExpression	"""TDMan::transferd_registration() pushing queued requests\\n"""		5349716	0					
ANR	5350509	ExpressionStatement	td -> push_transfer_requests ( )	1098:1:30408:30436	5349716	81	True				
ANR	5350510	CallExpression	td -> push_transfer_requests ( )		5349716	0					
ANR	5350511	Callee	td -> push_transfer_requests		5349716	0					
ANR	5350512	PtrMemberAccess	td -> push_transfer_requests		5349716	0					
ANR	5350513	Identifier	td		5349716	0					
ANR	5350514	Identifier	push_transfer_requests		5349716	1					
ANR	5350515	ArgumentList			5349716	1					
ANR	5350516	ExpressionStatement	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"	1100:1:30440:30502	5349716	82	True				
ANR	5350517	CallExpression	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"		5349716	0					
ANR	5350518	Callee	dprintf		5349716	0					
ANR	5350519	Identifier	dprintf		5349716	0					
ANR	5350520	ArgumentList	D_ALWAYS		5349716	1					
ANR	5350521	Argument	D_ALWAYS		5349716	0					
ANR	5350522	Identifier	D_ALWAYS		5349716	0					
ANR	5350523	Argument	"""Leaving TDMan::transferd_registration()\\n"""		5349716	1					
ANR	5350524	PrimaryExpression	"""Leaving TDMan::transferd_registration()\\n"""		5349716	0					
ANR	5350525	ReturnStatement	return KEEP_STREAM ;	1101:1:30505:30523	5349716	83	True				
ANR	5350526	Identifier	KEEP_STREAM		5349716	0					
ANR	5350527	ReturnType	int		5349716	1					
ANR	5350528	Identifier	TDMan :: transferd_registration		5349716	2					
ANR	5350529	ParameterList	"int cmd , Stream * sock"		5349716	3					
ANR	5350530	Parameter	int cmd	847:30:21795:21801	5349716	0	True				
ANR	5350531	ParameterType	int		5349716	0					
ANR	5350532	Identifier	cmd		5349716	1					
ANR	5350533	Parameter	Stream * sock	847:39:21804:21815	5349716	1	True				
ANR	5350534	ParameterType	Stream *		5349716	0					
ANR	5350535	Identifier	sock		5349716	1					
ANR	5350536	CFGEntryNode	ENTRY		5349716		True				
ANR	5350537	CFGExitNode	EXIT		5349716		True				
ANR	5350538	Symbol	CLOSE_STREAM		5349716						
ANR	5350539	Symbol	dctd		5349716						
ANR	5350540	Symbol	regad		5349716						
ANR	5350541	Symbol	TD_INVOKED		5349716						
ANR	5350542	Symbol	& td_req_sock		5349716						
ANR	5350543	Symbol	rsock		5349716						
ANR	5350544	Symbol	ATTR_TREQ_TD_SINFUL		5349716						
ANR	5350545	Symbol	sock_id		5349716						
ANR	5350546	Symbol	KEEP_STREAM		5349716						
ANR	5350547	Symbol	rsock -> triedAuthentication		5349716						
ANR	5350548	Symbol	WRITE		5349716						
ANR	5350549	Symbol	td -> get_fquser		5349716						
ANR	5350550	Symbol	dctd . setup_treq_channel		5349716						
ANR	5350551	Symbol	td -> call_reg_callback		5349716						
ANR	5350552	Symbol	daemonCore		5349716						
ANR	5350553	Symbol	& errstack		5349716						
ANR	5350554	Symbol	td_id		5349716						
ANR	5350555	Symbol	* rsock		5349716						
ANR	5350556	Symbol	sock_id . Value		5349716						
ANR	5350557	Symbol	ALLOW		5349716						
ANR	5350558	Symbol	ret		5349716						
ANR	5350559	Symbol	SecMan :: authenticate_sock		5349716						
ANR	5350560	Symbol	find_td_by_ident		5349716						
ANR	5350561	Symbol	td_req_sock		5349716						
ANR	5350562	Symbol	NULL		5349716						
ANR	5350563	Symbol	td -> get_status		5349716						
ANR	5350564	Symbol	D_ALWAYS		5349716						
ANR	5350565	Symbol	false		5349716						
ANR	5350566	Symbol	this		5349716						
ANR	5350567	Symbol	ATTR_TREQ_TD_ID		5349716						
ANR	5350568	Symbol	TRUE		5349716						
ANR	5350569	Symbol	fquser		5349716						
ANR	5350570	Symbol	td		5349716						
ANR	5350571	Symbol	TD_REGISTERED		5349716						
ANR	5350572	Symbol	sock		5349716						
ANR	5350573	Symbol	& TDMan :: transferd_update		5349716						
ANR	5350574	Symbol	errstack		5349716						
ANR	5350575	Symbol	td_sinful		5349716						
ANR	5350576	Symbol	* td		5349716						
ANR	5350577	Symbol	ATTR_TREQ_INVALID_REQUEST		5349716						
ANR	5350578	Symbol	errstack . getFullText		5349716						
ANR	5350579	Symbol	FALSE		5349716						
ANR	5350580	Symbol	cmd		5349716						
ANR	5350581	Symbol	rsock -> getFullyQualifiedUser		5349716						
ANR	5350582	Symbol	tdup		5349716						
ANR	5350583	Symbol	respad		5349716						
ANR	5350584	Symbol	ATTR_TREQ_INVALID_REASON		5349716						
ANR	5350585	Function	TDMan :: transferd_update	1108:0:30748:33577							
ANR	5350586	FunctionDef	TDMan :: transferd_update (Stream * sock)		5350585	0					
ANR	5350587	CompoundStatement		1110:0:30791:33577	5350585	0					
ANR	5350588	IdentifierDeclStatement	ReliSock * rsock = ( ReliSock * ) sock ;	1111:1:30794:30827	5350585	0	True				
ANR	5350589	IdentifierDecl	* rsock = ( ReliSock * ) sock		5350585	0					
ANR	5350590	IdentifierDeclType	ReliSock *		5350585	0					
ANR	5350591	Identifier	rsock		5350585	1					
ANR	5350592	AssignmentExpression	* rsock = ( ReliSock * ) sock		5350585	2		=			
ANR	5350593	Identifier	rsock		5350585	0					
ANR	5350594	CastExpression	( ReliSock * ) sock		5350585	1					
ANR	5350595	CastTarget	ReliSock *		5350585	0					
ANR	5350596	Identifier	sock		5350585	1					
ANR	5350597	IdentifierDeclStatement	TDUpdateContinuation * tdup = NULL ;	1112:1:30830:30863	5350585	1	True				
ANR	5350598	IdentifierDecl	* tdup = NULL		5350585	0					
ANR	5350599	IdentifierDeclType	TDUpdateContinuation *		5350585	0					
ANR	5350600	Identifier	tdup		5350585	1					
ANR	5350601	AssignmentExpression	* tdup = NULL		5350585	2		=			
ANR	5350602	Identifier	NULL		5350585	0					
ANR	5350603	Identifier	NULL		5350585	1					
ANR	5350604	IdentifierDeclStatement	ClassAd update ;	1113:1:30866:30880	5350585	2	True				
ANR	5350605	IdentifierDecl	update		5350585	0					
ANR	5350606	IdentifierDeclType	ClassAd		5350585	0					
ANR	5350607	Identifier	update		5350585	1					
ANR	5350608	IdentifierDeclStatement	MyString cap ;	1114:1:30883:30895	5350585	3	True				
ANR	5350609	IdentifierDecl	cap		5350585	0					
ANR	5350610	IdentifierDeclType	MyString		5350585	0					
ANR	5350611	Identifier	cap		5350585	1					
ANR	5350612	IdentifierDeclStatement	MyString status ;	1115:1:30898:30913	5350585	4	True				
ANR	5350613	IdentifierDecl	status		5350585	0					
ANR	5350614	IdentifierDeclType	MyString		5350585	0					
ANR	5350615	Identifier	status		5350585	1					
ANR	5350616	IdentifierDeclStatement	MyString reason ;	1116:1:30916:30931	5350585	5	True				
ANR	5350617	IdentifierDecl	reason		5350585	0					
ANR	5350618	IdentifierDeclType	MyString		5350585	0					
ANR	5350619	Identifier	reason		5350585	1					
ANR	5350620	IdentifierDeclStatement	TransferDaemon * td = NULL ;	1117:1:30934:30959	5350585	6	True				
ANR	5350621	IdentifierDecl	* td = NULL		5350585	0					
ANR	5350622	IdentifierDeclType	TransferDaemon *		5350585	0					
ANR	5350623	Identifier	td		5350585	1					
ANR	5350624	AssignmentExpression	* td = NULL		5350585	2		=			
ANR	5350625	Identifier	NULL		5350585	0					
ANR	5350626	Identifier	NULL		5350585	1					
ANR	5350627	ExpressionStatement	tdup = ( TDUpdateContinuation * ) daemonCore -> GetDataPtr ( )	1125:1:31314:31368	5350585	7	True				
ANR	5350628	AssignmentExpression	tdup = ( TDUpdateContinuation * ) daemonCore -> GetDataPtr ( )		5350585	0		=			
ANR	5350629	Identifier	tdup		5350585	0					
ANR	5350630	CastExpression	( TDUpdateContinuation * ) daemonCore -> GetDataPtr ( )		5350585	1					
ANR	5350631	CastTarget	TDUpdateContinuation *		5350585	0					
ANR	5350632	CallExpression	daemonCore -> GetDataPtr ( )		5350585	1					
ANR	5350633	Callee	daemonCore -> GetDataPtr		5350585	0					
ANR	5350634	PtrMemberAccess	daemonCore -> GetDataPtr		5350585	0					
ANR	5350635	Identifier	daemonCore		5350585	0					
ANR	5350636	Identifier	GetDataPtr		5350585	1					
ANR	5350637	ArgumentList			5350585	1					
ANR	5350638	ExpressionStatement	ASSERT ( tdup != NULL )	1126:1:31371:31391	5350585	8	True				
ANR	5350639	CallExpression	ASSERT ( tdup != NULL )		5350585	0					
ANR	5350640	Callee	ASSERT		5350585	0					
ANR	5350641	Identifier	ASSERT		5350585	0					
ANR	5350642	ArgumentList	tdup != NULL		5350585	1					
ANR	5350643	Argument	tdup != NULL		5350585	0					
ANR	5350644	EqualityExpression	tdup != NULL		5350585	0		!=			
ANR	5350645	Identifier	tdup		5350585	0					
ANR	5350646	Identifier	NULL		5350585	1					
ANR	5350647	ExpressionStatement	"dprintf ( D_ALWAYS , ""Transferd update from: addr(%s) fquser(%s) id(%s)\\n"" , tdup -> sinful . Value ( ) , tdup -> fquser . Value ( ) , tdup -> id . Value ( ) )"	1128:1:31395:31532	5350585	9	True				
ANR	5350648	CallExpression	"dprintf ( D_ALWAYS , ""Transferd update from: addr(%s) fquser(%s) id(%s)\\n"" , tdup -> sinful . Value ( ) , tdup -> fquser . Value ( ) , tdup -> id . Value ( ) )"		5350585	0					
ANR	5350649	Callee	dprintf		5350585	0					
ANR	5350650	Identifier	dprintf		5350585	0					
ANR	5350651	ArgumentList	D_ALWAYS		5350585	1					
ANR	5350652	Argument	D_ALWAYS		5350585	0					
ANR	5350653	Identifier	D_ALWAYS		5350585	0					
ANR	5350654	Argument	"""Transferd update from: addr(%s) fquser(%s) id(%s)\\n"""		5350585	1					
ANR	5350655	PrimaryExpression	"""Transferd update from: addr(%s) fquser(%s) id(%s)\\n"""		5350585	0					
ANR	5350656	Argument	tdup -> sinful . Value ( )		5350585	2					
ANR	5350657	CallExpression	tdup -> sinful . Value ( )		5350585	0					
ANR	5350658	Callee	tdup -> sinful . Value		5350585	0					
ANR	5350659	MemberAccess	tdup -> sinful . Value		5350585	0					
ANR	5350660	PtrMemberAccess	tdup -> sinful		5350585	0					
ANR	5350661	Identifier	tdup		5350585	0					
ANR	5350662	Identifier	sinful		5350585	1					
ANR	5350663	Identifier	Value		5350585	1					
ANR	5350664	ArgumentList			5350585	1					
ANR	5350665	Argument	tdup -> fquser . Value ( )		5350585	3					
ANR	5350666	CallExpression	tdup -> fquser . Value ( )		5350585	0					
ANR	5350667	Callee	tdup -> fquser . Value		5350585	0					
ANR	5350668	MemberAccess	tdup -> fquser . Value		5350585	0					
ANR	5350669	PtrMemberAccess	tdup -> fquser		5350585	0					
ANR	5350670	Identifier	tdup		5350585	0					
ANR	5350671	Identifier	fquser		5350585	1					
ANR	5350672	Identifier	Value		5350585	1					
ANR	5350673	ArgumentList			5350585	1					
ANR	5350674	Argument	tdup -> id . Value ( )		5350585	4					
ANR	5350675	CallExpression	tdup -> id . Value ( )		5350585	0					
ANR	5350676	Callee	tdup -> id . Value		5350585	0					
ANR	5350677	MemberAccess	tdup -> id . Value		5350585	0					
ANR	5350678	PtrMemberAccess	tdup -> id		5350585	0					
ANR	5350679	Identifier	tdup		5350585	0					
ANR	5350680	Identifier	id		5350585	1					
ANR	5350681	Identifier	Value		5350585	1					
ANR	5350682	ArgumentList			5350585	1					
ANR	5350683	IfStatement	if ( update . initFromStream ( * rsock ) == 0 )		5350585	10					
ANR	5350684	Condition	update . initFromStream ( * rsock ) == 0	1136:5:31787:31820	5350585	0	True				
ANR	5350685	EqualityExpression	update . initFromStream ( * rsock ) == 0		5350585	0		==			
ANR	5350686	CallExpression	update . initFromStream ( * rsock )		5350585	0					
ANR	5350687	Callee	update . initFromStream		5350585	0					
ANR	5350688	MemberAccess	update . initFromStream		5350585	0					
ANR	5350689	Identifier	update		5350585	0					
ANR	5350690	Identifier	initFromStream		5350585	1					
ANR	5350691	ArgumentList	* rsock		5350585	1					
ANR	5350692	Argument	* rsock		5350585	0					
ANR	5350693	UnaryOperationExpression	* rsock		5350585	0					
ANR	5350694	UnaryOperator	*		5350585	0					
ANR	5350695	Identifier	rsock		5350585	1					
ANR	5350696	PrimaryExpression	0		5350585	1					
ANR	5350697	CompoundStatement		27:41:1031:1031	5350585	1					
ANR	5350698	Statement	dprintf	1138:2:31877:31883	5350585	0	True				
ANR	5350699	Statement	(	1138:9:31884:31884	5350585	1	True				
ANR	5350700	Statement	D_ALWAYS	1138:10:31885:31892	5350585	2	True				
ANR	5350701	Statement	","	1138:18:31893:31893	5350585	3	True				
ANR	5350702	Statement	"""Update socket was closed. """	1138:20:31895:31922	5350585	4	True				
ANR	5350703	Statement	"""Transferd for user: %s with id: %s at location: %s will soon be """	1139:3:31927:31992	5350585	5	True				
ANR	5350704	Statement	"""reaped.\\n"""	1140:3:31997:32007	5350585	6	True				
ANR	5350705	Statement	","	1140:14:32008:32008	5350585	7	True				
ANR	5350706	Statement	tdup	1141:3:32014:32017	5350585	8	True				
ANR	5350707	Statement	->	1141:7:32018:32019	5350585	9	True				
ANR	5350708	Statement	fquser	1141:9:32020:32025	5350585	10	True				
ANR	5350709	Statement	.	1141:15:32026:32026	5350585	11	True				
ANR	5350710	Statement	Value	1141:16:32027:32031	5350585	12	True				
ANR	5350711	Statement	(	1141:21:32032:32032	5350585	13	True				
ANR	5350712	Statement	)	1141:22:32033:32033	5350585	14	True				
ANR	5350713	Statement	","	1141:23:32034:32034	5350585	15	True				
ANR	5350714	Statement	tdup	1141:25:32036:32039	5350585	16	True				
ANR	5350715	Statement	->	1141:29:32040:32041	5350585	17	True				
ANR	5350716	Statement	id	1141:31:32042:32043	5350585	18	True				
ANR	5350717	Statement	.	1141:33:32044:32044	5350585	19	True				
ANR	5350718	Statement	Value	1141:34:32045:32049	5350585	20	True				
ANR	5350719	Statement	(	1141:39:32050:32050	5350585	21	True				
ANR	5350720	Statement	)	1141:40:32051:32051	5350585	22	True				
ANR	5350721	Statement	","	1141:41:32052:32052	5350585	23	True				
ANR	5350722	Statement	tdup	1141:43:32054:32057	5350585	24	True				
ANR	5350723	Statement	->	1141:47:32058:32059	5350585	25	True				
ANR	5350724	Statement	sinful	1141:49:32060:32065	5350585	26	True				
ANR	5350725	Statement	.	1141:55:32066:32066	5350585	27	True				
ANR	5350726	Statement	Value	1141:56:32067:32071	5350585	28	True				
ANR	5350727	Statement	(	1141:61:32072:32072	5350585	29	True				
ANR	5350728	Statement	)	1141:62:32073:32073	5350585	30	True				
ANR	5350729	Statement	)	1141:63:32074:32074	5350585	31	True				
ANR	5350730	ExpressionStatement		1141:64:32075:32075	5350585	32	True				
ANR	5350731	Statement	delete	1143:2:32080:32085	5350585	33	True				
ANR	5350732	ExpressionStatement	tdup	1143:9:32087:32091	5350585	34	True				
ANR	5350733	Identifier	tdup		5350585	0					
ANR	5350734	ExpressionStatement	daemonCore -> SetDataPtr ( NULL )	1144:2:32095:32123	5350585	35	True				
ANR	5350735	CallExpression	daemonCore -> SetDataPtr ( NULL )		5350585	0					
ANR	5350736	Callee	daemonCore -> SetDataPtr		5350585	0					
ANR	5350737	PtrMemberAccess	daemonCore -> SetDataPtr		5350585	0					
ANR	5350738	Identifier	daemonCore		5350585	0					
ANR	5350739	Identifier	SetDataPtr		5350585	1					
ANR	5350740	ArgumentList	NULL		5350585	1					
ANR	5350741	Argument	NULL		5350585	0					
ANR	5350742	Identifier	NULL		5350585	0					
ANR	5350743	ReturnStatement	return CLOSE_STREAM ;	1145:2:32127:32146	5350585	36	True				
ANR	5350744	Identifier	CLOSE_STREAM		5350585	0					
ANR	5350745	ExpressionStatement	rsock -> end_of_message ( )	1147:1:32152:32175	5350585	11	True				
ANR	5350746	CallExpression	rsock -> end_of_message ( )		5350585	0					
ANR	5350747	Callee	rsock -> end_of_message		5350585	0					
ANR	5350748	PtrMemberAccess	rsock -> end_of_message		5350585	0					
ANR	5350749	Identifier	rsock		5350585	0					
ANR	5350750	Identifier	end_of_message		5350585	1					
ANR	5350751	ArgumentList			5350585	1					
ANR	5350752	ExpressionStatement	"update . LookupString ( ATTR_TREQ_CAPABILITY , cap )"	1149:1:32179:32225	5350585	12	True				
ANR	5350753	CallExpression	"update . LookupString ( ATTR_TREQ_CAPABILITY , cap )"		5350585	0					
ANR	5350754	Callee	update . LookupString		5350585	0					
ANR	5350755	MemberAccess	update . LookupString		5350585	0					
ANR	5350756	Identifier	update		5350585	0					
ANR	5350757	Identifier	LookupString		5350585	1					
ANR	5350758	ArgumentList	ATTR_TREQ_CAPABILITY		5350585	1					
ANR	5350759	Argument	ATTR_TREQ_CAPABILITY		5350585	0					
ANR	5350760	Identifier	ATTR_TREQ_CAPABILITY		5350585	0					
ANR	5350761	Argument	cap		5350585	1					
ANR	5350762	Identifier	cap		5350585	0					
ANR	5350763	ExpressionStatement	"update . LookupString ( ATTR_TREQ_UPDATE_STATUS , status )"	1150:1:32228:32280	5350585	13	True				
ANR	5350764	CallExpression	"update . LookupString ( ATTR_TREQ_UPDATE_STATUS , status )"		5350585	0					
ANR	5350765	Callee	update . LookupString		5350585	0					
ANR	5350766	MemberAccess	update . LookupString		5350585	0					
ANR	5350767	Identifier	update		5350585	0					
ANR	5350768	Identifier	LookupString		5350585	1					
ANR	5350769	ArgumentList	ATTR_TREQ_UPDATE_STATUS		5350585	1					
ANR	5350770	Argument	ATTR_TREQ_UPDATE_STATUS		5350585	0					
ANR	5350771	Identifier	ATTR_TREQ_UPDATE_STATUS		5350585	0					
ANR	5350772	Argument	status		5350585	1					
ANR	5350773	Identifier	status		5350585	0					
ANR	5350774	ExpressionStatement	"update . LookupString ( ATTR_TREQ_UPDATE_REASON , reason )"	1151:1:32283:32335	5350585	14	True				
ANR	5350775	CallExpression	"update . LookupString ( ATTR_TREQ_UPDATE_REASON , reason )"		5350585	0					
ANR	5350776	Callee	update . LookupString		5350585	0					
ANR	5350777	MemberAccess	update . LookupString		5350585	0					
ANR	5350778	Identifier	update		5350585	0					
ANR	5350779	Identifier	LookupString		5350585	1					
ANR	5350780	ArgumentList	ATTR_TREQ_UPDATE_REASON		5350585	1					
ANR	5350781	Argument	ATTR_TREQ_UPDATE_REASON		5350585	0					
ANR	5350782	Identifier	ATTR_TREQ_UPDATE_REASON		5350585	0					
ANR	5350783	Argument	reason		5350585	1					
ANR	5350784	Identifier	reason		5350585	0					
ANR	5350785	ExpressionStatement	"dprintf ( D_ALWAYS , ""Update was: cap = %s, status = %s,  reason = %s\\n"" , cap . Value ( ) , status . Value ( ) , reason . Value ( ) )"	1153:1:32339:32456	5350585	15	True				
ANR	5350786	CallExpression	"dprintf ( D_ALWAYS , ""Update was: cap = %s, status = %s,  reason = %s\\n"" , cap . Value ( ) , status . Value ( ) , reason . Value ( ) )"		5350585	0					
ANR	5350787	Callee	dprintf		5350585	0					
ANR	5350788	Identifier	dprintf		5350585	0					
ANR	5350789	ArgumentList	D_ALWAYS		5350585	1					
ANR	5350790	Argument	D_ALWAYS		5350585	0					
ANR	5350791	Identifier	D_ALWAYS		5350585	0					
ANR	5350792	Argument	"""Update was: cap = %s, status = %s,  reason = %s\\n"""		5350585	1					
ANR	5350793	PrimaryExpression	"""Update was: cap = %s, status = %s,  reason = %s\\n"""		5350585	0					
ANR	5350794	Argument	cap . Value ( )		5350585	2					
ANR	5350795	CallExpression	cap . Value ( )		5350585	0					
ANR	5350796	Callee	cap . Value		5350585	0					
ANR	5350797	MemberAccess	cap . Value		5350585	0					
ANR	5350798	Identifier	cap		5350585	0					
ANR	5350799	Identifier	Value		5350585	1					
ANR	5350800	ArgumentList			5350585	1					
ANR	5350801	Argument	status . Value ( )		5350585	3					
ANR	5350802	CallExpression	status . Value ( )		5350585	0					
ANR	5350803	Callee	status . Value		5350585	0					
ANR	5350804	MemberAccess	status . Value		5350585	0					
ANR	5350805	Identifier	status		5350585	0					
ANR	5350806	Identifier	Value		5350585	1					
ANR	5350807	ArgumentList			5350585	1					
ANR	5350808	Argument	reason . Value ( )		5350585	4					
ANR	5350809	CallExpression	reason . Value ( )		5350585	0					
ANR	5350810	Callee	reason . Value		5350585	0					
ANR	5350811	MemberAccess	reason . Value		5350585	0					
ANR	5350812	Identifier	reason		5350585	0					
ANR	5350813	Identifier	Value		5350585	1					
ANR	5350814	ArgumentList			5350585	1					
ANR	5350815	ExpressionStatement	td = find_td_by_ident ( tdup -> id )	1160:1:32674:32705	5350585	16	True				
ANR	5350816	AssignmentExpression	td = find_td_by_ident ( tdup -> id )		5350585	0		=			
ANR	5350817	Identifier	td		5350585	0					
ANR	5350818	CallExpression	find_td_by_ident ( tdup -> id )		5350585	1					
ANR	5350819	Callee	find_td_by_ident		5350585	0					
ANR	5350820	Identifier	find_td_by_ident		5350585	0					
ANR	5350821	ArgumentList	tdup -> id		5350585	1					
ANR	5350822	Argument	tdup -> id		5350585	0					
ANR	5350823	PtrMemberAccess	tdup -> id		5350585	0					
ANR	5350824	Identifier	tdup		5350585	0					
ANR	5350825	Identifier	id		5350585	1					
ANR	5350826	ExpressionStatement	ASSERT ( td != NULL )	1166:1:33014:33032	5350585	17	True				
ANR	5350827	CallExpression	ASSERT ( td != NULL )		5350585	0					
ANR	5350828	Callee	ASSERT		5350585	0					
ANR	5350829	Identifier	ASSERT		5350585	0					
ANR	5350830	ArgumentList	td != NULL		5350585	1					
ANR	5350831	Argument	td != NULL		5350585	0					
ANR	5350832	EqualityExpression	td != NULL		5350585	0		!=			
ANR	5350833	Identifier	td		5350585	0					
ANR	5350834	Identifier	NULL		5350585	1					
ANR	5350835	ExpressionStatement	td -> update_transfer_request ( & update )	1173:1:33326:33362	5350585	18	True				
ANR	5350836	CallExpression	td -> update_transfer_request ( & update )		5350585	0					
ANR	5350837	Callee	td -> update_transfer_request		5350585	0					
ANR	5350838	PtrMemberAccess	td -> update_transfer_request		5350585	0					
ANR	5350839	Identifier	td		5350585	0					
ANR	5350840	Identifier	update_transfer_request		5350585	1					
ANR	5350841	ArgumentList	& update		5350585	1					
ANR	5350842	Argument	& update		5350585	0					
ANR	5350843	UnaryOperationExpression	& update		5350585	0					
ANR	5350844	UnaryOperator	&		5350585	0					
ANR	5350845	Identifier	update		5350585	1					
ANR	5350846	ReturnStatement	return KEEP_STREAM ;	1179:1:33557:33575	5350585	19	True				
ANR	5350847	Identifier	KEEP_STREAM		5350585	0					
ANR	5350848	ReturnType	int		5350585	1					
ANR	5350849	Identifier	TDMan :: transferd_update		5350585	2					
ANR	5350850	ParameterList	Stream * sock		5350585	3					
ANR	5350851	Parameter	Stream * sock	1109:24:30777:30788	5350585	0	True				
ANR	5350852	ParameterType	Stream *		5350585	0					
ANR	5350853	Identifier	sock		5350585	1					
ANR	5350854	CFGEntryNode	ENTRY		5350585		True				
ANR	5350855	CFGExitNode	EXIT		5350585		True				
ANR	5350856	Symbol	reason		5350585						
ANR	5350857	Symbol	CLOSE_STREAM		5350585						
ANR	5350858	Symbol	tdup -> id		5350585						
ANR	5350859	Symbol	update		5350585						
ANR	5350860	Symbol	daemonCore -> GetDataPtr		5350585						
ANR	5350861	Symbol	reason . Value		5350585						
ANR	5350862	Symbol	rsock		5350585						
ANR	5350863	Symbol	tdup -> id . Value		5350585						
ANR	5350864	Symbol	ATTR_TREQ_UPDATE_STATUS		5350585						
ANR	5350865	Symbol	KEEP_STREAM		5350585						
ANR	5350866	Symbol	cap		5350585						
ANR	5350867	Symbol	ATTR_TREQ_UPDATE_REASON		5350585						
ANR	5350868	Symbol	daemonCore		5350585						
ANR	5350869	Symbol	* rsock		5350585						
ANR	5350870	Symbol	tdup -> fquser . Value		5350585						
ANR	5350871	Symbol	tdup -> fquser		5350585						
ANR	5350872	Symbol	tdup -> sinful . Value		5350585						
ANR	5350873	Symbol	find_td_by_ident		5350585						
ANR	5350874	Symbol	NULL		5350585						
ANR	5350875	Symbol	* tdup		5350585						
ANR	5350876	Symbol	D_ALWAYS		5350585						
ANR	5350877	Symbol	cap . Value		5350585						
ANR	5350878	Symbol	td		5350585						
ANR	5350879	Symbol	sock		5350585						
ANR	5350880	Symbol	tdup -> sinful		5350585						
ANR	5350881	Symbol	ATTR_TREQ_CAPABILITY		5350585						
ANR	5350882	Symbol	* daemonCore		5350585						
ANR	5350883	Symbol	update . initFromStream		5350585						
ANR	5350884	Symbol	& update		5350585						
ANR	5350885	Symbol	status . Value		5350585						
ANR	5350886	Symbol	tdup		5350585						
ANR	5350887	Symbol	status		5350585						
