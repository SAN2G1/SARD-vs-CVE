command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2049903	File	data/converged/CVE-2011-4930_htcondor/procd_ctl.cpp								
ANR	2049904	DeclStmt									
ANR	2049905	Decl							int	"int ( ProcFamilyClient & pfc , int argc , char * argv [ ] )"	register_family
ANR	2049906	DeclStmt									
ANR	2049907	Decl							int	"int ( ProcFamilyClient & pfc , int argc , char * argv [ ] )"	track_by_associated_gid
ANR	2049908	DeclStmt									
ANR	2049909	Decl							int	"int ( ProcFamilyClient & pfc , int argc , char * argv [ ] )"	track_by_associated_cgroup
ANR	2049910	DeclStmt									
ANR	2049911	Decl							int	"int ( ProcFamilyClient & pfc , int argc , char * argv [ ] )"	get_usage
ANR	2049912	DeclStmt									
ANR	2049913	Decl							int	"int ( ProcFamilyClient & pfc , int argc , char * argv [ ] )"	dump
ANR	2049914	DeclStmt									
ANR	2049915	Decl							int	"int ( ProcFamilyClient & pfc , int argc , char * argv [ ] )"	list
ANR	2049916	DeclStmt									
ANR	2049917	Decl							int	"int ( ProcFamilyClient & pfc , int argc , char * argv [ ] )"	signal_process
ANR	2049918	DeclStmt									
ANR	2049919	Decl							int	"int ( ProcFamilyClient & pfc , int argc , char * argv [ ] )"	suspend_family
ANR	2049920	DeclStmt									
ANR	2049921	Decl							int	"int ( ProcFamilyClient & pfc , int argc , char * argv [ ] )"	continue_family
ANR	2049922	DeclStmt									
ANR	2049923	Decl							int	"int ( ProcFamilyClient & pfc , int argc , char * argv [ ] )"	kill_family
ANR	2049924	DeclStmt									
ANR	2049925	Decl							int	"int ( ProcFamilyClient & pfc , int argc , char * argv [ ] )"	unregister_family
ANR	2049926	DeclStmt									
ANR	2049927	Decl							int	"int ( ProcFamilyClient & pfc , int argc , char * argv [ ] )"	snapshot
ANR	2049928	DeclStmt									
ANR	2049929	Decl							int	"int ( ProcFamilyClient & pfc , int argc , char * argv [ ] )"	quit
ANR	2049930	Function	list_commands	41:0:1875:2731							
ANR	2049931	FunctionDef	list_commands ()		2049930	0					
ANR	2049932	CompoundStatement		43:0:1903:2731	2049930	0					
ANR	2049933	ExpressionStatement	"fprintf ( stderr , ""  options:\\n"" )"	44:1:1906:1937	2049930	0	True				
ANR	2049934	CallExpression	"fprintf ( stderr , ""  options:\\n"" )"		2049930	0					
ANR	2049935	Callee	fprintf		2049930	0					
ANR	2049936	Identifier	fprintf		2049930	0					
ANR	2049937	ArgumentList	stderr		2049930	1					
ANR	2049938	Argument	stderr		2049930	0					
ANR	2049939	Identifier	stderr		2049930	0					
ANR	2049940	Argument	"""  options:\\n"""		2049930	1					
ANR	2049941	PrimaryExpression	"""  options:\\n"""		2049930	0					
ANR	2049942	ExpressionStatement	"fprintf ( stderr , ""    -h\\n"" )"	45:1:1940:1967	2049930	1	True				
ANR	2049943	CallExpression	"fprintf ( stderr , ""    -h\\n"" )"		2049930	0					
ANR	2049944	Callee	fprintf		2049930	0					
ANR	2049945	Identifier	fprintf		2049930	0					
ANR	2049946	ArgumentList	stderr		2049930	1					
ANR	2049947	Argument	stderr		2049930	0					
ANR	2049948	Identifier	stderr		2049930	0					
ANR	2049949	Argument	"""    -h\\n"""		2049930	1					
ANR	2049950	PrimaryExpression	"""    -h\\n"""		2049930	0					
ANR	2049951	ExpressionStatement	"fprintf ( stderr , ""    -A <procd address file>\\n"" )"	46:1:1970:2018	2049930	2	True				
ANR	2049952	CallExpression	"fprintf ( stderr , ""    -A <procd address file>\\n"" )"		2049930	0					
ANR	2049953	Callee	fprintf		2049930	0					
ANR	2049954	Identifier	fprintf		2049930	0					
ANR	2049955	ArgumentList	stderr		2049930	1					
ANR	2049956	Argument	stderr		2049930	0					
ANR	2049957	Identifier	stderr		2049930	0					
ANR	2049958	Argument	"""    -A <procd address file>\\n"""		2049930	1					
ANR	2049959	PrimaryExpression	"""    -A <procd address file>\\n"""		2049930	0					
ANR	2049960	ExpressionStatement	"fprintf ( stderr , ""  commands:\\n"" )"	47:1:2021:2053	2049930	3	True				
ANR	2049961	CallExpression	"fprintf ( stderr , ""  commands:\\n"" )"		2049930	0					
ANR	2049962	Callee	fprintf		2049930	0					
ANR	2049963	Identifier	fprintf		2049930	0					
ANR	2049964	ArgumentList	stderr		2049930	1					
ANR	2049965	Argument	stderr		2049930	0					
ANR	2049966	Identifier	stderr		2049930	0					
ANR	2049967	Argument	"""  commands:\\n"""		2049930	1					
ANR	2049968	PrimaryExpression	"""  commands:\\n"""		2049930	0					
ANR	2049969	ExpressionStatement	"fprintf ( stderr , ""    REGISTER_FAMILY <pid> <watcher_pid> <max_snapshot_interval>\\n"" )"	48:1:2056:2142	2049930	4	True				
ANR	2049970	CallExpression	"fprintf ( stderr , ""    REGISTER_FAMILY <pid> <watcher_pid> <max_snapshot_interval>\\n"" )"		2049930	0					
ANR	2049971	Callee	fprintf		2049930	0					
ANR	2049972	Identifier	fprintf		2049930	0					
ANR	2049973	ArgumentList	stderr		2049930	1					
ANR	2049974	Argument	stderr		2049930	0					
ANR	2049975	Identifier	stderr		2049930	0					
ANR	2049976	Argument	"""    REGISTER_FAMILY <pid> <watcher_pid> <max_snapshot_interval>\\n"""		2049930	1					
ANR	2049977	PrimaryExpression	"""    REGISTER_FAMILY <pid> <watcher_pid> <max_snapshot_interval>\\n"""		2049930	0					
ANR	2049978	ExpressionStatement	"fprintf ( stderr , ""    TRACK_BY_ASSOCIATED_GID <gid> [<pid>]\\n"" )"	50:1:2145:2207	2049930	5	True				
ANR	2049979	CallExpression	"fprintf ( stderr , ""    TRACK_BY_ASSOCIATED_GID <gid> [<pid>]\\n"" )"		2049930	0					
ANR	2049980	Callee	fprintf		2049930	0					
ANR	2049981	Identifier	fprintf		2049930	0					
ANR	2049982	ArgumentList	stderr		2049930	1					
ANR	2049983	Argument	stderr		2049930	0					
ANR	2049984	Identifier	stderr		2049930	0					
ANR	2049985	Argument	"""    TRACK_BY_ASSOCIATED_GID <gid> [<pid>]\\n"""		2049930	1					
ANR	2049986	PrimaryExpression	"""    TRACK_BY_ASSOCIATED_GID <gid> [<pid>]\\n"""		2049930	0					
ANR	2049987	ExpressionStatement	"fprintf ( stderr , ""    TRACK_BY_ASSOCIATED_CGROUP <cgroup> [<pid>]\\n"" )"	51:1:2210:2278	2049930	6	True				
ANR	2049988	CallExpression	"fprintf ( stderr , ""    TRACK_BY_ASSOCIATED_CGROUP <cgroup> [<pid>]\\n"" )"		2049930	0					
ANR	2049989	Callee	fprintf		2049930	0					
ANR	2049990	Identifier	fprintf		2049930	0					
ANR	2049991	ArgumentList	stderr		2049930	1					
ANR	2049992	Argument	stderr		2049930	0					
ANR	2049993	Identifier	stderr		2049930	0					
ANR	2049994	Argument	"""    TRACK_BY_ASSOCIATED_CGROUP <cgroup> [<pid>]\\n"""		2049930	1					
ANR	2049995	PrimaryExpression	"""    TRACK_BY_ASSOCIATED_CGROUP <cgroup> [<pid>]\\n"""		2049930	0					
ANR	2049996	ExpressionStatement	"fprintf ( stderr , ""    GET_USAGE [<pid>]\\n"" )"	52:1:2281:2323	2049930	7	True				
ANR	2049997	CallExpression	"fprintf ( stderr , ""    GET_USAGE [<pid>]\\n"" )"		2049930	0					
ANR	2049998	Callee	fprintf		2049930	0					
ANR	2049999	Identifier	fprintf		2049930	0					
ANR	2050000	ArgumentList	stderr		2049930	1					
ANR	2050001	Argument	stderr		2049930	0					
ANR	2050002	Identifier	stderr		2049930	0					
ANR	2050003	Argument	"""    GET_USAGE [<pid>]\\n"""		2049930	1					
ANR	2050004	PrimaryExpression	"""    GET_USAGE [<pid>]\\n"""		2049930	0					
ANR	2050005	ExpressionStatement	"fprintf ( stderr , ""    DUMP [<pid>]\\n"" )"	53:1:2326:2363	2049930	8	True				
ANR	2050006	CallExpression	"fprintf ( stderr , ""    DUMP [<pid>]\\n"" )"		2049930	0					
ANR	2050007	Callee	fprintf		2049930	0					
ANR	2050008	Identifier	fprintf		2049930	0					
ANR	2050009	ArgumentList	stderr		2049930	1					
ANR	2050010	Argument	stderr		2049930	0					
ANR	2050011	Identifier	stderr		2049930	0					
ANR	2050012	Argument	"""    DUMP [<pid>]\\n"""		2049930	1					
ANR	2050013	PrimaryExpression	"""    DUMP [<pid>]\\n"""		2049930	0					
ANR	2050014	ExpressionStatement	"fprintf ( stderr , ""    LIST [<pid>]\\n"" )"	54:1:2366:2403	2049930	9	True				
ANR	2050015	CallExpression	"fprintf ( stderr , ""    LIST [<pid>]\\n"" )"		2049930	0					
ANR	2050016	Callee	fprintf		2049930	0					
ANR	2050017	Identifier	fprintf		2049930	0					
ANR	2050018	ArgumentList	stderr		2049930	1					
ANR	2050019	Argument	stderr		2049930	0					
ANR	2050020	Identifier	stderr		2049930	0					
ANR	2050021	Argument	"""    LIST [<pid>]\\n"""		2049930	1					
ANR	2050022	PrimaryExpression	"""    LIST [<pid>]\\n"""		2049930	0					
ANR	2050023	ExpressionStatement	"fprintf ( stderr , ""    SIGNAL_PROCESS <signal> [<pid>]\\n"" )"	55:1:2406:2462	2049930	10	True				
ANR	2050024	CallExpression	"fprintf ( stderr , ""    SIGNAL_PROCESS <signal> [<pid>]\\n"" )"		2049930	0					
ANR	2050025	Callee	fprintf		2049930	0					
ANR	2050026	Identifier	fprintf		2049930	0					
ANR	2050027	ArgumentList	stderr		2049930	1					
ANR	2050028	Argument	stderr		2049930	0					
ANR	2050029	Identifier	stderr		2049930	0					
ANR	2050030	Argument	"""    SIGNAL_PROCESS <signal> [<pid>]\\n"""		2049930	1					
ANR	2050031	PrimaryExpression	"""    SIGNAL_PROCESS <signal> [<pid>]\\n"""		2049930	0					
ANR	2050032	ExpressionStatement	"fprintf ( stderr , ""    SUSPEND_FAMILY [<pid>]\\n"" )"	56:1:2465:2512	2049930	11	True				
ANR	2050033	CallExpression	"fprintf ( stderr , ""    SUSPEND_FAMILY [<pid>]\\n"" )"		2049930	0					
ANR	2050034	Callee	fprintf		2049930	0					
ANR	2050035	Identifier	fprintf		2049930	0					
ANR	2050036	ArgumentList	stderr		2049930	1					
ANR	2050037	Argument	stderr		2049930	0					
ANR	2050038	Identifier	stderr		2049930	0					
ANR	2050039	Argument	"""    SUSPEND_FAMILY [<pid>]\\n"""		2049930	1					
ANR	2050040	PrimaryExpression	"""    SUSPEND_FAMILY [<pid>]\\n"""		2049930	0					
ANR	2050041	ExpressionStatement	"fprintf ( stderr , ""    CONTINUE_FAMILY [<pid>]\\n"" )"	57:1:2515:2563	2049930	12	True				
ANR	2050042	CallExpression	"fprintf ( stderr , ""    CONTINUE_FAMILY [<pid>]\\n"" )"		2049930	0					
ANR	2050043	Callee	fprintf		2049930	0					
ANR	2050044	Identifier	fprintf		2049930	0					
ANR	2050045	ArgumentList	stderr		2049930	1					
ANR	2050046	Argument	stderr		2049930	0					
ANR	2050047	Identifier	stderr		2049930	0					
ANR	2050048	Argument	"""    CONTINUE_FAMILY [<pid>]\\n"""		2049930	1					
ANR	2050049	PrimaryExpression	"""    CONTINUE_FAMILY [<pid>]\\n"""		2049930	0					
ANR	2050050	ExpressionStatement	"fprintf ( stderr , ""    KILL_FAMILY [<pid>]\\n"" )"	58:1:2566:2610	2049930	13	True				
ANR	2050051	CallExpression	"fprintf ( stderr , ""    KILL_FAMILY [<pid>]\\n"" )"		2049930	0					
ANR	2050052	Callee	fprintf		2049930	0					
ANR	2050053	Identifier	fprintf		2049930	0					
ANR	2050054	ArgumentList	stderr		2049930	1					
ANR	2050055	Argument	stderr		2049930	0					
ANR	2050056	Identifier	stderr		2049930	0					
ANR	2050057	Argument	"""    KILL_FAMILY [<pid>]\\n"""		2049930	1					
ANR	2050058	PrimaryExpression	"""    KILL_FAMILY [<pid>]\\n"""		2049930	0					
ANR	2050059	ExpressionStatement	"fprintf ( stderr , ""    UNREGISTER_FAMILY <pid>\\n"" )"	59:1:2613:2661	2049930	14	True				
ANR	2050060	CallExpression	"fprintf ( stderr , ""    UNREGISTER_FAMILY <pid>\\n"" )"		2049930	0					
ANR	2050061	Callee	fprintf		2049930	0					
ANR	2050062	Identifier	fprintf		2049930	0					
ANR	2050063	ArgumentList	stderr		2049930	1					
ANR	2050064	Argument	stderr		2049930	0					
ANR	2050065	Identifier	stderr		2049930	0					
ANR	2050066	Argument	"""    UNREGISTER_FAMILY <pid>\\n"""		2049930	1					
ANR	2050067	PrimaryExpression	"""    UNREGISTER_FAMILY <pid>\\n"""		2049930	0					
ANR	2050068	ExpressionStatement	"fprintf ( stderr , ""    SNAPSHOT\\n"" )"	60:1:2664:2697	2049930	15	True				
ANR	2050069	CallExpression	"fprintf ( stderr , ""    SNAPSHOT\\n"" )"		2049930	0					
ANR	2050070	Callee	fprintf		2049930	0					
ANR	2050071	Identifier	fprintf		2049930	0					
ANR	2050072	ArgumentList	stderr		2049930	1					
ANR	2050073	Argument	stderr		2049930	0					
ANR	2050074	Identifier	stderr		2049930	0					
ANR	2050075	Argument	"""    SNAPSHOT\\n"""		2049930	1					
ANR	2050076	PrimaryExpression	"""    SNAPSHOT\\n"""		2049930	0					
ANR	2050077	ExpressionStatement	"fprintf ( stderr , ""    QUIT\\n"" )"	61:1:2700:2729	2049930	16	True				
ANR	2050078	CallExpression	"fprintf ( stderr , ""    QUIT\\n"" )"		2049930	0					
ANR	2050079	Callee	fprintf		2049930	0					
ANR	2050080	Identifier	fprintf		2049930	0					
ANR	2050081	ArgumentList	stderr		2049930	1					
ANR	2050082	Argument	stderr		2049930	0					
ANR	2050083	Identifier	stderr		2049930	0					
ANR	2050084	Argument	"""    QUIT\\n"""		2049930	1					
ANR	2050085	PrimaryExpression	"""    QUIT\\n"""		2049930	0					
ANR	2050086	ReturnType	static void		2049930	1					
ANR	2050087	Identifier	list_commands		2049930	2					
ANR	2050088	ParameterList			2049930	3					
ANR	2050089	CFGEntryNode	ENTRY		2049930		True				
ANR	2050090	CFGExitNode	EXIT		2049930		True				
ANR	2050091	Symbol	stderr		2049930						
ANR	2050092	Function	main	64:0:2734:6265							
ANR	2050093	FunctionDef	"main (int argc , char * argv [ ])"		2050092	0					
ANR	2050094	CompoundStatement		66:0:2767:6265	2050092	0					
ANR	2050095	IdentifierDeclStatement	char * procd_address = NULL ;	67:1:2770:2796	2050092	0	True				
ANR	2050096	IdentifierDecl	* procd_address = NULL		2050092	0					
ANR	2050097	IdentifierDeclType	char *		2050092	0					
ANR	2050098	Identifier	procd_address		2050092	1					
ANR	2050099	AssignmentExpression	* procd_address = NULL		2050092	2		=			
ANR	2050100	Identifier	NULL		2050092	0					
ANR	2050101	Identifier	NULL		2050092	1					
ANR	2050102	ExpressionStatement	"myDistro -> Init ( argc , argv )"	68:1:2799:2825	2050092	1	True				
ANR	2050103	CallExpression	"myDistro -> Init ( argc , argv )"		2050092	0					
ANR	2050104	Callee	myDistro -> Init		2050092	0					
ANR	2050105	PtrMemberAccess	myDistro -> Init		2050092	0					
ANR	2050106	Identifier	myDistro		2050092	0					
ANR	2050107	Identifier	Init		2050092	1					
ANR	2050108	ArgumentList	argc		2050092	1					
ANR	2050109	Argument	argc		2050092	0					
ANR	2050110	Identifier	argc		2050092	0					
ANR	2050111	Argument	argv		2050092	1					
ANR	2050112	Identifier	argv		2050092	0					
ANR	2050113	IfStatement	if ( argc < 2 )		2050092	2					
ANR	2050114	Condition	argc < 2	70:5:2833:2840	2050092	0	True				
ANR	2050115	RelationalExpression	argc < 2		2050092	0		<			
ANR	2050116	Identifier	argc		2050092	0					
ANR	2050117	PrimaryExpression	2		2050092	1					
ANR	2050118	CompoundStatement		5:15:75:75	2050092	1					
ANR	2050119	ExpressionStatement	"fprintf ( stderr , ""Usage: %s <options w/arguments> <command> [<arg> ...]\\n"" , argv [ 0 ] )"	71:2:2847:2937	2050092	0	True				
ANR	2050120	CallExpression	"fprintf ( stderr , ""Usage: %s <options w/arguments> <command> [<arg> ...]\\n"" , argv [ 0 ] )"		2050092	0					
ANR	2050121	Callee	fprintf		2050092	0					
ANR	2050122	Identifier	fprintf		2050092	0					
ANR	2050123	ArgumentList	stderr		2050092	1					
ANR	2050124	Argument	stderr		2050092	0					
ANR	2050125	Identifier	stderr		2050092	0					
ANR	2050126	Argument	"""Usage: %s <options w/arguments> <command> [<arg> ...]\\n"""		2050092	1					
ANR	2050127	PrimaryExpression	"""Usage: %s <options w/arguments> <command> [<arg> ...]\\n"""		2050092	0					
ANR	2050128	Argument	argv [ 0 ]		2050092	2					
ANR	2050129	ArrayIndexing	argv [ 0 ]		2050092	0					
ANR	2050130	Identifier	argv		2050092	0					
ANR	2050131	PrimaryExpression	0		2050092	1					
ANR	2050132	ExpressionStatement	list_commands ( )	74:2:2941:2956	2050092	1	True				
ANR	2050133	CallExpression	list_commands ( )		2050092	0					
ANR	2050134	Callee	list_commands		2050092	0					
ANR	2050135	Identifier	list_commands		2050092	0					
ANR	2050136	ArgumentList			2050092	1					
ANR	2050137	ReturnStatement	return 1 ;	75:2:2960:2968	2050092	2	True				
ANR	2050138	PrimaryExpression	1		2050092	0					
ANR	2050139	ExpressionStatement	config ( )	78:1:2975:2983	2050092	3	True				
ANR	2050140	CallExpression	config ( )		2050092	0					
ANR	2050141	Callee	config		2050092	0					
ANR	2050142	Identifier	config		2050092	0					
ANR	2050143	ArgumentList			2050092	1					
ANR	2050144	ExpressionStatement	Termlog = 1	79:1:2986:2997	2050092	4	True				
ANR	2050145	AssignmentExpression	Termlog = 1		2050092	0		=			
ANR	2050146	Identifier	Termlog		2050092	0					
ANR	2050147	PrimaryExpression	1		2050092	1					
ANR	2050148	ExpressionStatement	"dprintf_config ( ""TOOL"" , get_param_functions ( ) )"	80:1:3000:3045	2050092	5	True				
ANR	2050149	CallExpression	"dprintf_config ( ""TOOL"" , get_param_functions ( ) )"		2050092	0					
ANR	2050150	Callee	dprintf_config		2050092	0					
ANR	2050151	Identifier	dprintf_config		2050092	0					
ANR	2050152	ArgumentList	"""TOOL"""		2050092	1					
ANR	2050153	Argument	"""TOOL"""		2050092	0					
ANR	2050154	PrimaryExpression	"""TOOL"""		2050092	0					
ANR	2050155	Argument	get_param_functions ( )		2050092	1					
ANR	2050156	CallExpression	get_param_functions ( )		2050092	0					
ANR	2050157	Callee	get_param_functions		2050092	0					
ANR	2050158	Identifier	get_param_functions		2050092	0					
ANR	2050159	ArgumentList			2050092	1					
ANR	2050160	IdentifierDeclStatement	int cmd_argc = argc - 1 ;	82:1:3049:3072	2050092	6	True				
ANR	2050161	IdentifierDecl	cmd_argc = argc - 1		2050092	0					
ANR	2050162	IdentifierDeclType	int		2050092	0					
ANR	2050163	Identifier	cmd_argc		2050092	1					
ANR	2050164	AssignmentExpression	cmd_argc = argc - 1		2050092	2		=			
ANR	2050165	Identifier	cmd_argc		2050092	0					
ANR	2050166	AdditiveExpression	argc - 1		2050092	1		-			
ANR	2050167	Identifier	argc		2050092	0					
ANR	2050168	PrimaryExpression	1		2050092	1					
ANR	2050169	IdentifierDeclStatement	char * * cmd_argv = argv + 1 ;	83:1:3075:3101	2050092	7	True				
ANR	2050170	IdentifierDecl	* * cmd_argv = argv + 1		2050092	0					
ANR	2050171	IdentifierDeclType	char * *		2050092	0					
ANR	2050172	Identifier	cmd_argv		2050092	1					
ANR	2050173	AssignmentExpression	* * cmd_argv = argv + 1		2050092	2		=			
ANR	2050174	Identifier	cmd_argv		2050092	0					
ANR	2050175	AdditiveExpression	argv + 1		2050092	1		+			
ANR	2050176	Identifier	argv		2050092	0					
ANR	2050177	PrimaryExpression	1		2050092	1					
ANR	2050178	WhileStatement	while ( cmd_argv [ 0 ] != NULL && cmd_argv [ 0 ] [ 0 ] == '-' )		2050092	8					
ANR	2050179	Condition	cmd_argv [ 0 ] != NULL && cmd_argv [ 0 ] [ 0 ] == '-'	86:7:3149:3192	2050092	0	True				
ANR	2050180	AndExpression	cmd_argv [ 0 ] != NULL && cmd_argv [ 0 ] [ 0 ] == '-'		2050092	0		&&			
ANR	2050181	EqualityExpression	cmd_argv [ 0 ] != NULL		2050092	0		!=			
ANR	2050182	ArrayIndexing	cmd_argv [ 0 ]		2050092	0					
ANR	2050183	Identifier	cmd_argv		2050092	0					
ANR	2050184	PrimaryExpression	0		2050092	1					
ANR	2050185	Identifier	NULL		2050092	1					
ANR	2050186	EqualityExpression	cmd_argv [ 0 ] [ 0 ] == '-'		2050092	1		==			
ANR	2050187	ArrayIndexing	cmd_argv [ 0 ] [ 0 ]		2050092	0					
ANR	2050188	ArrayIndexing	cmd_argv [ 0 ]		2050092	0					
ANR	2050189	Identifier	cmd_argv		2050092	0					
ANR	2050190	PrimaryExpression	0		2050092	1					
ANR	2050191	PrimaryExpression	0		2050092	1					
ANR	2050192	PrimaryExpression	'-'		2050092	1					
ANR	2050193	CompoundStatement		22:1:428:428	2050092	1					
ANR	2050194	IfStatement	"if ( strcmp ( cmd_argv [ 0 ] , ""-A"" ) == MATCH )"		2050092	0					
ANR	2050195	Condition	"strcmp ( cmd_argv [ 0 ] , ""-A"" ) == MATCH"	88:6:3204:3237	2050092	0	True				
ANR	2050196	EqualityExpression	"strcmp ( cmd_argv [ 0 ] , ""-A"" ) == MATCH"		2050092	0		==			
ANR	2050197	CallExpression	"strcmp ( cmd_argv [ 0 ] , ""-A"" )"		2050092	0					
ANR	2050198	Callee	strcmp		2050092	0					
ANR	2050199	Identifier	strcmp		2050092	0					
ANR	2050200	ArgumentList	cmd_argv [ 0 ]		2050092	1					
ANR	2050201	Argument	cmd_argv [ 0 ]		2050092	0					
ANR	2050202	ArrayIndexing	cmd_argv [ 0 ]		2050092	0					
ANR	2050203	Identifier	cmd_argv		2050092	0					
ANR	2050204	PrimaryExpression	0		2050092	1					
ANR	2050205	Argument	"""-A"""		2050092	1					
ANR	2050206	PrimaryExpression	"""-A"""		2050092	0					
ANR	2050207	Identifier	MATCH		2050092	1					
ANR	2050208	CompoundStatement		23:42:472:472	2050092	1					
ANR	2050209	ExpressionStatement	cmd_argc --	89:3:3245:3255	2050092	0	True				
ANR	2050210	PostIncDecOperationExpression	cmd_argc --		2050092	0					
ANR	2050211	Identifier	cmd_argc		2050092	0					
ANR	2050212	IncDec	--		2050092	1					
ANR	2050213	ExpressionStatement	cmd_argv ++	90:3:3260:3270	2050092	1	True				
ANR	2050214	PostIncDecOperationExpression	cmd_argv ++		2050092	0					
ANR	2050215	Identifier	cmd_argv		2050092	0					
ANR	2050216	IncDec	++		2050092	1					
ANR	2050217	IfStatement	if ( cmd_argc == 0 )		2050092	2					
ANR	2050218	Condition	cmd_argc == 0	91:7:3279:3291	2050092	0	True				
ANR	2050219	EqualityExpression	cmd_argc == 0		2050092	0		==			
ANR	2050220	Identifier	cmd_argc		2050092	0					
ANR	2050221	PrimaryExpression	0		2050092	1					
ANR	2050222	CompoundStatement		26:22:526:526	2050092	1					
ANR	2050223	ExpressionStatement	"fprintf ( stderr , ""error: -A needs an argument\\n"" )"	92:4:3300:3348	2050092	0	True				
ANR	2050224	CallExpression	"fprintf ( stderr , ""error: -A needs an argument\\n"" )"		2050092	0					
ANR	2050225	Callee	fprintf		2050092	0					
ANR	2050226	Identifier	fprintf		2050092	0					
ANR	2050227	ArgumentList	stderr		2050092	1					
ANR	2050228	Argument	stderr		2050092	0					
ANR	2050229	Identifier	stderr		2050092	0					
ANR	2050230	Argument	"""error: -A needs an argument\\n"""		2050092	1					
ANR	2050231	PrimaryExpression	"""error: -A needs an argument\\n"""		2050092	0					
ANR	2050232	ExpressionStatement	list_commands ( )	93:4:3354:3369	2050092	1	True				
ANR	2050233	CallExpression	list_commands ( )		2050092	0					
ANR	2050234	Callee	list_commands		2050092	0					
ANR	2050235	Identifier	list_commands		2050092	0					
ANR	2050236	ArgumentList			2050092	1					
ANR	2050237	ReturnStatement	return 1 ;	94:4:3375:3383	2050092	2	True				
ANR	2050238	PrimaryExpression	1		2050092	0					
ANR	2050239	ExpressionStatement	procd_address = cmd_argv [ 0 ]	97:3:3447:3474	2050092	3	True				
ANR	2050240	AssignmentExpression	procd_address = cmd_argv [ 0 ]		2050092	0		=			
ANR	2050241	Identifier	procd_address		2050092	0					
ANR	2050242	ArrayIndexing	cmd_argv [ 0 ]		2050092	1					
ANR	2050243	Identifier	cmd_argv		2050092	0					
ANR	2050244	PrimaryExpression	0		2050092	1					
ANR	2050245	ExpressionStatement	cmd_argc --	98:3:3479:3489	2050092	4	True				
ANR	2050246	PostIncDecOperationExpression	cmd_argc --		2050092	0					
ANR	2050247	Identifier	cmd_argc		2050092	0					
ANR	2050248	IncDec	--		2050092	1					
ANR	2050249	ExpressionStatement	cmd_argv ++	99:3:3494:3504	2050092	5	True				
ANR	2050250	PostIncDecOperationExpression	cmd_argv ++		2050092	0					
ANR	2050251	Identifier	cmd_argv		2050092	0					
ANR	2050252	IncDec	++		2050092	1					
ANR	2050253	ContinueStatement	continue ;	100:3:3509:3517	2050092	6	True				
ANR	2050254	ElseStatement	else		2050092	0					
ANR	2050255	IfStatement	"if ( strcmp ( cmd_argv [ 0 ] , ""-h"" ) == MATCH )"		2050092	0					
ANR	2050256	Condition	"strcmp ( cmd_argv [ 0 ] , ""-h"" ) == MATCH"	101:13:3532:3565	2050092	0	True				
ANR	2050257	EqualityExpression	"strcmp ( cmd_argv [ 0 ] , ""-h"" ) == MATCH"		2050092	0		==			
ANR	2050258	CallExpression	"strcmp ( cmd_argv [ 0 ] , ""-h"" )"		2050092	0					
ANR	2050259	Callee	strcmp		2050092	0					
ANR	2050260	Identifier	strcmp		2050092	0					
ANR	2050261	ArgumentList	cmd_argv [ 0 ]		2050092	1					
ANR	2050262	Argument	cmd_argv [ 0 ]		2050092	0					
ANR	2050263	ArrayIndexing	cmd_argv [ 0 ]		2050092	0					
ANR	2050264	Identifier	cmd_argv		2050092	0					
ANR	2050265	PrimaryExpression	0		2050092	1					
ANR	2050266	Argument	"""-h"""		2050092	1					
ANR	2050267	PrimaryExpression	"""-h"""		2050092	0					
ANR	2050268	Identifier	MATCH		2050092	1					
ANR	2050269	CompoundStatement		36:49:800:800	2050092	1					
ANR	2050270	ExpressionStatement	cmd_argc --	102:3:3573:3583	2050092	0	True				
ANR	2050271	PostIncDecOperationExpression	cmd_argc --		2050092	0					
ANR	2050272	Identifier	cmd_argc		2050092	0					
ANR	2050273	IncDec	--		2050092	1					
ANR	2050274	ExpressionStatement	cmd_argv ++	103:3:3588:3598	2050092	1	True				
ANR	2050275	PostIncDecOperationExpression	cmd_argv ++		2050092	0					
ANR	2050276	Identifier	cmd_argv		2050092	0					
ANR	2050277	IncDec	++		2050092	1					
ANR	2050278	ExpressionStatement	"fprintf ( stderr , ""Usage: %s <options w/arguments> <command> [<arg> ...]\\n"" , argv [ 0 ] )"	104:3:3603:3695	2050092	2	True				
ANR	2050279	CallExpression	"fprintf ( stderr , ""Usage: %s <options w/arguments> <command> [<arg> ...]\\n"" , argv [ 0 ] )"		2050092	0					
ANR	2050280	Callee	fprintf		2050092	0					
ANR	2050281	Identifier	fprintf		2050092	0					
ANR	2050282	ArgumentList	stderr		2050092	1					
ANR	2050283	Argument	stderr		2050092	0					
ANR	2050284	Identifier	stderr		2050092	0					
ANR	2050285	Argument	"""Usage: %s <options w/arguments> <command> [<arg> ...]\\n"""		2050092	1					
ANR	2050286	PrimaryExpression	"""Usage: %s <options w/arguments> <command> [<arg> ...]\\n"""		2050092	0					
ANR	2050287	Argument	argv [ 0 ]		2050092	2					
ANR	2050288	ArrayIndexing	argv [ 0 ]		2050092	0					
ANR	2050289	Identifier	argv		2050092	0					
ANR	2050290	PrimaryExpression	0		2050092	1					
ANR	2050291	ExpressionStatement	list_commands ( )	107:3:3700:3715	2050092	3	True				
ANR	2050292	CallExpression	list_commands ( )		2050092	0					
ANR	2050293	Callee	list_commands		2050092	0					
ANR	2050294	Identifier	list_commands		2050092	0					
ANR	2050295	ArgumentList			2050092	1					
ANR	2050296	ReturnStatement	return 1 ;	108:3:3720:3728	2050092	4	True				
ANR	2050297	PrimaryExpression	1		2050092	0					
ANR	2050298	ContinueStatement	continue ;	109:3:3733:3741	2050092	5	True				
ANR	2050299	ExpressionStatement	"fprintf ( stderr , ""error: Don't understand option %s\\n"" , cmd_argv [ 0 ] )"	113:2:3819:3886	2050092	1	True				
ANR	2050300	CallExpression	"fprintf ( stderr , ""error: Don't understand option %s\\n"" , cmd_argv [ 0 ] )"		2050092	0					
ANR	2050301	Callee	fprintf		2050092	0					
ANR	2050302	Identifier	fprintf		2050092	0					
ANR	2050303	ArgumentList	stderr		2050092	1					
ANR	2050304	Argument	stderr		2050092	0					
ANR	2050305	Identifier	stderr		2050092	0					
ANR	2050306	Argument	"""error: Don't understand option %s\\n"""		2050092	1					
ANR	2050307	PrimaryExpression	"""error: Don't understand option %s\\n"""		2050092	0					
ANR	2050308	Argument	cmd_argv [ 0 ]		2050092	2					
ANR	2050309	ArrayIndexing	cmd_argv [ 0 ]		2050092	0					
ANR	2050310	Identifier	cmd_argv		2050092	0					
ANR	2050311	PrimaryExpression	0		2050092	1					
ANR	2050312	ExpressionStatement	list_commands ( )	114:2:3890:3905	2050092	2	True				
ANR	2050313	CallExpression	list_commands ( )		2050092	0					
ANR	2050314	Callee	list_commands		2050092	0					
ANR	2050315	Identifier	list_commands		2050092	0					
ANR	2050316	ArgumentList			2050092	1					
ANR	2050317	ReturnStatement	return 1 ;	115:2:3909:3917	2050092	3	True				
ANR	2050318	PrimaryExpression	1		2050092	0					
ANR	2050319	IfStatement	if ( cmd_argc == 0 )		2050092	9					
ANR	2050320	Condition	cmd_argc == 0	120:5:4055:4067	2050092	0	True				
ANR	2050321	EqualityExpression	cmd_argc == 0		2050092	0		==			
ANR	2050322	Identifier	cmd_argc		2050092	0					
ANR	2050323	PrimaryExpression	0		2050092	1					
ANR	2050324	CompoundStatement		55:20:1302:1302	2050092	1					
ANR	2050325	Statement	fprintf	121:2:4074:4080	2050092	0	True				
ANR	2050326	Statement	(	121:9:4081:4081	2050092	1	True				
ANR	2050327	Statement	stderr	121:10:4082:4087	2050092	2	True				
ANR	2050328	Statement	","	121:16:4088:4088	2050092	3	True				
ANR	2050329	Statement	"""Please specify a command.\\n"""	122:3:4094:4122	2050092	4	True				
ANR	2050330	Statement	"""Usage: %s <options w/arguments> <command> [<arg> ...]\\n"""	123:3:4127:4183	2050092	5	True				
ANR	2050331	Statement	","	123:60:4184:4184	2050092	6	True				
ANR	2050332	Statement	argv	124:3:4189:4192	2050092	7	True				
ANR	2050333	Statement	[	124:7:4193:4193	2050092	8	True				
ANR	2050334	Statement	0	124:8:4194:4194	2050092	9	True				
ANR	2050335	Statement	]	124:9:4195:4195	2050092	10	True				
ANR	2050336	Statement	)	124:10:4196:4196	2050092	11	True				
ANR	2050337	ExpressionStatement		124:11:4197:4197	2050092	12	True				
ANR	2050338	ExpressionStatement	list_commands ( )	125:2:4201:4216	2050092	13	True				
ANR	2050339	CallExpression	list_commands ( )		2050092	0					
ANR	2050340	Callee	list_commands		2050092	0					
ANR	2050341	Identifier	list_commands		2050092	0					
ANR	2050342	ArgumentList			2050092	1					
ANR	2050343	ReturnStatement	return 1 ;	126:2:4220:4228	2050092	14	True				
ANR	2050344	PrimaryExpression	1		2050092	0					
ANR	2050345	IfStatement	if ( procd_address == NULL )		2050092	10					
ANR	2050346	Condition	procd_address == NULL	131:5:4353:4373	2050092	0	True				
ANR	2050347	EqualityExpression	procd_address == NULL		2050092	0		==			
ANR	2050348	Identifier	procd_address		2050092	0					
ANR	2050349	Identifier	NULL		2050092	1					
ANR	2050350	CompoundStatement		66:28:1608:1608	2050092	1					
ANR	2050351	ExpressionStatement	"procd_address = param ( ""PROCD_ADDRESS"" )"	132:2:4380:4418	2050092	0	True				
ANR	2050352	AssignmentExpression	"procd_address = param ( ""PROCD_ADDRESS"" )"		2050092	0		=			
ANR	2050353	Identifier	procd_address		2050092	0					
ANR	2050354	CallExpression	"param ( ""PROCD_ADDRESS"" )"		2050092	1					
ANR	2050355	Callee	param		2050092	0					
ANR	2050356	Identifier	param		2050092	0					
ANR	2050357	ArgumentList	"""PROCD_ADDRESS"""		2050092	1					
ANR	2050358	Argument	"""PROCD_ADDRESS"""		2050092	0					
ANR	2050359	PrimaryExpression	"""PROCD_ADDRESS"""		2050092	0					
ANR	2050360	IfStatement	if ( procd_address == NULL )		2050092	1					
ANR	2050361	Condition	procd_address == NULL	133:6:4426:4446	2050092	0	True				
ANR	2050362	EqualityExpression	procd_address == NULL		2050092	0		==			
ANR	2050363	Identifier	procd_address		2050092	0					
ANR	2050364	Identifier	NULL		2050092	1					
ANR	2050365	CompoundStatement		68:29:1681:1681	2050092	1					
ANR	2050366	ExpressionStatement	"fprintf ( stderr , ""error: PROCD_ADDRESS not defined\\n"" )"	134:3:4454:4507	2050092	0	True				
ANR	2050367	CallExpression	"fprintf ( stderr , ""error: PROCD_ADDRESS not defined\\n"" )"		2050092	0					
ANR	2050368	Callee	fprintf		2050092	0					
ANR	2050369	Identifier	fprintf		2050092	0					
ANR	2050370	ArgumentList	stderr		2050092	1					
ANR	2050371	Argument	stderr		2050092	0					
ANR	2050372	Identifier	stderr		2050092	0					
ANR	2050373	Argument	"""error: PROCD_ADDRESS not defined\\n"""		2050092	1					
ANR	2050374	PrimaryExpression	"""error: PROCD_ADDRESS not defined\\n"""		2050092	0					
ANR	2050375	ReturnStatement	return 1 ;	135:3:4512:4520	2050092	1	True				
ANR	2050376	PrimaryExpression	1		2050092	0					
ANR	2050377	IdentifierDeclStatement	ProcFamilyClient pfc ;	140:1:4533:4553	2050092	11	True				
ANR	2050378	IdentifierDecl	pfc		2050092	0					
ANR	2050379	IdentifierDeclType	ProcFamilyClient		2050092	0					
ANR	2050380	Identifier	pfc		2050092	1					
ANR	2050381	IfStatement	if ( ! pfc . initialize ( procd_address ) )		2050092	12					
ANR	2050382	Condition	! pfc . initialize ( procd_address )	141:5:4560:4589	2050092	0	True				
ANR	2050383	UnaryOperationExpression	! pfc . initialize ( procd_address )		2050092	0					
ANR	2050384	UnaryOperator	!		2050092	0					
ANR	2050385	CallExpression	pfc . initialize ( procd_address )		2050092	1					
ANR	2050386	Callee	pfc . initialize		2050092	0					
ANR	2050387	MemberAccess	pfc . initialize		2050092	0					
ANR	2050388	Identifier	pfc		2050092	0					
ANR	2050389	Identifier	initialize		2050092	1					
ANR	2050390	ArgumentList	procd_address		2050092	1					
ANR	2050391	Argument	procd_address		2050092	0					
ANR	2050392	Identifier	procd_address		2050092	0					
ANR	2050393	CompoundStatement		76:37:1824:1824	2050092	1					
ANR	2050394	ExpressionStatement	"fprintf ( stderr , ""error: failed to initialize ProcD client\\n"" )"	142:2:4596:4657	2050092	0	True				
ANR	2050395	CallExpression	"fprintf ( stderr , ""error: failed to initialize ProcD client\\n"" )"		2050092	0					
ANR	2050396	Callee	fprintf		2050092	0					
ANR	2050397	Identifier	fprintf		2050092	0					
ANR	2050398	ArgumentList	stderr		2050092	1					
ANR	2050399	Argument	stderr		2050092	0					
ANR	2050400	Identifier	stderr		2050092	0					
ANR	2050401	Argument	"""error: failed to initialize ProcD client\\n"""		2050092	1					
ANR	2050402	PrimaryExpression	"""error: failed to initialize ProcD client\\n"""		2050092	0					
ANR	2050403	ReturnStatement	return 1 ;	143:2:4661:4669	2050092	1	True				
ANR	2050404	PrimaryExpression	1		2050092	0					
ANR	2050405	IfStatement	"if ( strcasecmp ( cmd_argv [ 0 ] , ""REGISTER_FAMILY"" ) == 0 )"		2050092	13					
ANR	2050406	Condition	"strcasecmp ( cmd_argv [ 0 ] , ""REGISTER_FAMILY"" ) == 0"	147:5:4736:4782	2050092	0	True				
ANR	2050407	EqualityExpression	"strcasecmp ( cmd_argv [ 0 ] , ""REGISTER_FAMILY"" ) == 0"		2050092	0		==			
ANR	2050408	CallExpression	"strcasecmp ( cmd_argv [ 0 ] , ""REGISTER_FAMILY"" )"		2050092	0					
ANR	2050409	Callee	strcasecmp		2050092	0					
ANR	2050410	Identifier	strcasecmp		2050092	0					
ANR	2050411	ArgumentList	cmd_argv [ 0 ]		2050092	1					
ANR	2050412	Argument	cmd_argv [ 0 ]		2050092	0					
ANR	2050413	ArrayIndexing	cmd_argv [ 0 ]		2050092	0					
ANR	2050414	Identifier	cmd_argv		2050092	0					
ANR	2050415	PrimaryExpression	0		2050092	1					
ANR	2050416	Argument	"""REGISTER_FAMILY"""		2050092	1					
ANR	2050417	PrimaryExpression	"""REGISTER_FAMILY"""		2050092	0					
ANR	2050418	PrimaryExpression	0		2050092	1					
ANR	2050419	CompoundStatement		82:54:2017:2017	2050092	1					
ANR	2050420	ReturnStatement	"return register_family ( pfc , cmd_argc , cmd_argv ) ;"	148:2:4789:4836	2050092	0	True				
ANR	2050421	CallExpression	"register_family ( pfc , cmd_argc , cmd_argv )"		2050092	0					
ANR	2050422	Callee	register_family		2050092	0					
ANR	2050423	Identifier	register_family		2050092	0					
ANR	2050424	ArgumentList	pfc		2050092	1					
ANR	2050425	Argument	pfc		2050092	0					
ANR	2050426	Identifier	pfc		2050092	0					
ANR	2050427	Argument	cmd_argc		2050092	1					
ANR	2050428	Identifier	cmd_argc		2050092	0					
ANR	2050429	Argument	cmd_argv		2050092	2					
ANR	2050430	Identifier	cmd_argv		2050092	0					
ANR	2050431	ElseStatement	else		2050092	0					
ANR	2050432	IfStatement	"if ( strcasecmp ( cmd_argv [ 0 ] , ""TRACK_BY_ASSOCIATED_GID"" ) == 0 )"		2050092	0					
ANR	2050433	Condition	"strcasecmp ( cmd_argv [ 0 ] , ""TRACK_BY_ASSOCIATED_GID"" ) == 0"	150:10:4851:4905	2050092	0	True				
ANR	2050434	EqualityExpression	"strcasecmp ( cmd_argv [ 0 ] , ""TRACK_BY_ASSOCIATED_GID"" ) == 0"		2050092	0		==			
ANR	2050435	CallExpression	"strcasecmp ( cmd_argv [ 0 ] , ""TRACK_BY_ASSOCIATED_GID"" )"		2050092	0					
ANR	2050436	Callee	strcasecmp		2050092	0					
ANR	2050437	Identifier	strcasecmp		2050092	0					
ANR	2050438	ArgumentList	cmd_argv [ 0 ]		2050092	1					
ANR	2050439	Argument	cmd_argv [ 0 ]		2050092	0					
ANR	2050440	ArrayIndexing	cmd_argv [ 0 ]		2050092	0					
ANR	2050441	Identifier	cmd_argv		2050092	0					
ANR	2050442	PrimaryExpression	0		2050092	1					
ANR	2050443	Argument	"""TRACK_BY_ASSOCIATED_GID"""		2050092	1					
ANR	2050444	PrimaryExpression	"""TRACK_BY_ASSOCIATED_GID"""		2050092	0					
ANR	2050445	PrimaryExpression	0		2050092	1					
ANR	2050446	CompoundStatement		85:67:2140:2140	2050092	1					
ANR	2050447	ReturnStatement	"return track_by_associated_gid ( pfc , cmd_argc , cmd_argv ) ;"	151:2:4912:4967	2050092	0	True				
ANR	2050448	CallExpression	"track_by_associated_gid ( pfc , cmd_argc , cmd_argv )"		2050092	0					
ANR	2050449	Callee	track_by_associated_gid		2050092	0					
ANR	2050450	Identifier	track_by_associated_gid		2050092	0					
ANR	2050451	ArgumentList	pfc		2050092	1					
ANR	2050452	Argument	pfc		2050092	0					
ANR	2050453	Identifier	pfc		2050092	0					
ANR	2050454	Argument	cmd_argc		2050092	1					
ANR	2050455	Identifier	cmd_argc		2050092	0					
ANR	2050456	Argument	cmd_argv		2050092	2					
ANR	2050457	Identifier	cmd_argv		2050092	0					
ANR	2050458	ElseStatement	else		2050092	0					
ANR	2050459	IfStatement	"if ( strcasecmp ( cmd_argv [ 0 ] , ""TRACK_BY_ASSOCIATED_CGROUP"" ) == 0 )"		2050092	0					
ANR	2050460	Condition	"strcasecmp ( cmd_argv [ 0 ] , ""TRACK_BY_ASSOCIATED_CGROUP"" ) == 0"	153:10:4982:5039	2050092	0	True				
ANR	2050461	EqualityExpression	"strcasecmp ( cmd_argv [ 0 ] , ""TRACK_BY_ASSOCIATED_CGROUP"" ) == 0"		2050092	0		==			
ANR	2050462	CallExpression	"strcasecmp ( cmd_argv [ 0 ] , ""TRACK_BY_ASSOCIATED_CGROUP"" )"		2050092	0					
ANR	2050463	Callee	strcasecmp		2050092	0					
ANR	2050464	Identifier	strcasecmp		2050092	0					
ANR	2050465	ArgumentList	cmd_argv [ 0 ]		2050092	1					
ANR	2050466	Argument	cmd_argv [ 0 ]		2050092	0					
ANR	2050467	ArrayIndexing	cmd_argv [ 0 ]		2050092	0					
ANR	2050468	Identifier	cmd_argv		2050092	0					
ANR	2050469	PrimaryExpression	0		2050092	1					
ANR	2050470	Argument	"""TRACK_BY_ASSOCIATED_CGROUP"""		2050092	1					
ANR	2050471	PrimaryExpression	"""TRACK_BY_ASSOCIATED_CGROUP"""		2050092	0					
ANR	2050472	PrimaryExpression	0		2050092	1					
ANR	2050473	CompoundStatement		88:70:2274:2274	2050092	1					
ANR	2050474	ReturnStatement	"return track_by_associated_cgroup ( pfc , cmd_argc , cmd_argv ) ;"	154:2:5046:5104	2050092	0	True				
ANR	2050475	CallExpression	"track_by_associated_cgroup ( pfc , cmd_argc , cmd_argv )"		2050092	0					
ANR	2050476	Callee	track_by_associated_cgroup		2050092	0					
ANR	2050477	Identifier	track_by_associated_cgroup		2050092	0					
ANR	2050478	ArgumentList	pfc		2050092	1					
ANR	2050479	Argument	pfc		2050092	0					
ANR	2050480	Identifier	pfc		2050092	0					
ANR	2050481	Argument	cmd_argc		2050092	1					
ANR	2050482	Identifier	cmd_argc		2050092	0					
ANR	2050483	Argument	cmd_argv		2050092	2					
ANR	2050484	Identifier	cmd_argv		2050092	0					
ANR	2050485	ElseStatement	else		2050092	0					
ANR	2050486	IfStatement	"if ( strcasecmp ( cmd_argv [ 0 ] , ""GET_USAGE"" ) == 0 )"		2050092	0					
ANR	2050487	Condition	"strcasecmp ( cmd_argv [ 0 ] , ""GET_USAGE"" ) == 0"	156:10:5119:5159	2050092	0	True				
ANR	2050488	EqualityExpression	"strcasecmp ( cmd_argv [ 0 ] , ""GET_USAGE"" ) == 0"		2050092	0		==			
ANR	2050489	CallExpression	"strcasecmp ( cmd_argv [ 0 ] , ""GET_USAGE"" )"		2050092	0					
ANR	2050490	Callee	strcasecmp		2050092	0					
ANR	2050491	Identifier	strcasecmp		2050092	0					
ANR	2050492	ArgumentList	cmd_argv [ 0 ]		2050092	1					
ANR	2050493	Argument	cmd_argv [ 0 ]		2050092	0					
ANR	2050494	ArrayIndexing	cmd_argv [ 0 ]		2050092	0					
ANR	2050495	Identifier	cmd_argv		2050092	0					
ANR	2050496	PrimaryExpression	0		2050092	1					
ANR	2050497	Argument	"""GET_USAGE"""		2050092	1					
ANR	2050498	PrimaryExpression	"""GET_USAGE"""		2050092	0					
ANR	2050499	PrimaryExpression	0		2050092	1					
ANR	2050500	CompoundStatement		91:53:2394:2394	2050092	1					
ANR	2050501	ReturnStatement	"return get_usage ( pfc , cmd_argc , cmd_argv ) ;"	157:2:5166:5207	2050092	0	True				
ANR	2050502	CallExpression	"get_usage ( pfc , cmd_argc , cmd_argv )"		2050092	0					
ANR	2050503	Callee	get_usage		2050092	0					
ANR	2050504	Identifier	get_usage		2050092	0					
ANR	2050505	ArgumentList	pfc		2050092	1					
ANR	2050506	Argument	pfc		2050092	0					
ANR	2050507	Identifier	pfc		2050092	0					
ANR	2050508	Argument	cmd_argc		2050092	1					
ANR	2050509	Identifier	cmd_argc		2050092	0					
ANR	2050510	Argument	cmd_argv		2050092	2					
ANR	2050511	Identifier	cmd_argv		2050092	0					
ANR	2050512	ElseStatement	else		2050092	0					
ANR	2050513	IfStatement	"if ( strcasecmp ( cmd_argv [ 0 ] , ""DUMP"" ) == 0 )"		2050092	0					
ANR	2050514	Condition	"strcasecmp ( cmd_argv [ 0 ] , ""DUMP"" ) == 0"	159:10:5222:5257	2050092	0	True				
ANR	2050515	EqualityExpression	"strcasecmp ( cmd_argv [ 0 ] , ""DUMP"" ) == 0"		2050092	0		==			
ANR	2050516	CallExpression	"strcasecmp ( cmd_argv [ 0 ] , ""DUMP"" )"		2050092	0					
ANR	2050517	Callee	strcasecmp		2050092	0					
ANR	2050518	Identifier	strcasecmp		2050092	0					
ANR	2050519	ArgumentList	cmd_argv [ 0 ]		2050092	1					
ANR	2050520	Argument	cmd_argv [ 0 ]		2050092	0					
ANR	2050521	ArrayIndexing	cmd_argv [ 0 ]		2050092	0					
ANR	2050522	Identifier	cmd_argv		2050092	0					
ANR	2050523	PrimaryExpression	0		2050092	1					
ANR	2050524	Argument	"""DUMP"""		2050092	1					
ANR	2050525	PrimaryExpression	"""DUMP"""		2050092	0					
ANR	2050526	PrimaryExpression	0		2050092	1					
ANR	2050527	CompoundStatement		94:48:2492:2492	2050092	1					
ANR	2050528	ReturnStatement	"return dump ( pfc , cmd_argc , cmd_argv ) ;"	160:2:5264:5300	2050092	0	True				
ANR	2050529	CallExpression	"dump ( pfc , cmd_argc , cmd_argv )"		2050092	0					
ANR	2050530	Callee	dump		2050092	0					
ANR	2050531	Identifier	dump		2050092	0					
ANR	2050532	ArgumentList	pfc		2050092	1					
ANR	2050533	Argument	pfc		2050092	0					
ANR	2050534	Identifier	pfc		2050092	0					
ANR	2050535	Argument	cmd_argc		2050092	1					
ANR	2050536	Identifier	cmd_argc		2050092	0					
ANR	2050537	Argument	cmd_argv		2050092	2					
ANR	2050538	Identifier	cmd_argv		2050092	0					
ANR	2050539	ElseStatement	else		2050092	0					
ANR	2050540	IfStatement	"if ( strcasecmp ( cmd_argv [ 0 ] , ""LIST"" ) == 0 )"		2050092	0					
ANR	2050541	Condition	"strcasecmp ( cmd_argv [ 0 ] , ""LIST"" ) == 0"	162:10:5315:5350	2050092	0	True				
ANR	2050542	EqualityExpression	"strcasecmp ( cmd_argv [ 0 ] , ""LIST"" ) == 0"		2050092	0		==			
ANR	2050543	CallExpression	"strcasecmp ( cmd_argv [ 0 ] , ""LIST"" )"		2050092	0					
ANR	2050544	Callee	strcasecmp		2050092	0					
ANR	2050545	Identifier	strcasecmp		2050092	0					
ANR	2050546	ArgumentList	cmd_argv [ 0 ]		2050092	1					
ANR	2050547	Argument	cmd_argv [ 0 ]		2050092	0					
ANR	2050548	ArrayIndexing	cmd_argv [ 0 ]		2050092	0					
ANR	2050549	Identifier	cmd_argv		2050092	0					
ANR	2050550	PrimaryExpression	0		2050092	1					
ANR	2050551	Argument	"""LIST"""		2050092	1					
ANR	2050552	PrimaryExpression	"""LIST"""		2050092	0					
ANR	2050553	PrimaryExpression	0		2050092	1					
ANR	2050554	CompoundStatement		97:48:2585:2585	2050092	1					
ANR	2050555	ReturnStatement	"return list ( pfc , cmd_argc , cmd_argv ) ;"	163:2:5357:5393	2050092	0	True				
ANR	2050556	CallExpression	"list ( pfc , cmd_argc , cmd_argv )"		2050092	0					
ANR	2050557	Callee	list		2050092	0					
ANR	2050558	Identifier	list		2050092	0					
ANR	2050559	ArgumentList	pfc		2050092	1					
ANR	2050560	Argument	pfc		2050092	0					
ANR	2050561	Identifier	pfc		2050092	0					
ANR	2050562	Argument	cmd_argc		2050092	1					
ANR	2050563	Identifier	cmd_argc		2050092	0					
ANR	2050564	Argument	cmd_argv		2050092	2					
ANR	2050565	Identifier	cmd_argv		2050092	0					
ANR	2050566	ElseStatement	else		2050092	0					
ANR	2050567	IfStatement	"if ( strcasecmp ( cmd_argv [ 0 ] , ""SIGNAL_PROCESS"" ) == 0 )"		2050092	0					
ANR	2050568	Condition	"strcasecmp ( cmd_argv [ 0 ] , ""SIGNAL_PROCESS"" ) == 0"	165:10:5408:5453	2050092	0	True				
ANR	2050569	EqualityExpression	"strcasecmp ( cmd_argv [ 0 ] , ""SIGNAL_PROCESS"" ) == 0"		2050092	0		==			
ANR	2050570	CallExpression	"strcasecmp ( cmd_argv [ 0 ] , ""SIGNAL_PROCESS"" )"		2050092	0					
ANR	2050571	Callee	strcasecmp		2050092	0					
ANR	2050572	Identifier	strcasecmp		2050092	0					
ANR	2050573	ArgumentList	cmd_argv [ 0 ]		2050092	1					
ANR	2050574	Argument	cmd_argv [ 0 ]		2050092	0					
ANR	2050575	ArrayIndexing	cmd_argv [ 0 ]		2050092	0					
ANR	2050576	Identifier	cmd_argv		2050092	0					
ANR	2050577	PrimaryExpression	0		2050092	1					
ANR	2050578	Argument	"""SIGNAL_PROCESS"""		2050092	1					
ANR	2050579	PrimaryExpression	"""SIGNAL_PROCESS"""		2050092	0					
ANR	2050580	PrimaryExpression	0		2050092	1					
ANR	2050581	CompoundStatement		100:58:2688:2688	2050092	1					
ANR	2050582	ReturnStatement	"return signal_process ( pfc , cmd_argc , cmd_argv ) ;"	166:2:5460:5506	2050092	0	True				
ANR	2050583	CallExpression	"signal_process ( pfc , cmd_argc , cmd_argv )"		2050092	0					
ANR	2050584	Callee	signal_process		2050092	0					
ANR	2050585	Identifier	signal_process		2050092	0					
ANR	2050586	ArgumentList	pfc		2050092	1					
ANR	2050587	Argument	pfc		2050092	0					
ANR	2050588	Identifier	pfc		2050092	0					
ANR	2050589	Argument	cmd_argc		2050092	1					
ANR	2050590	Identifier	cmd_argc		2050092	0					
ANR	2050591	Argument	cmd_argv		2050092	2					
ANR	2050592	Identifier	cmd_argv		2050092	0					
ANR	2050593	ElseStatement	else		2050092	0					
ANR	2050594	IfStatement	"if ( strcasecmp ( cmd_argv [ 0 ] , ""SUSPEND_FAMILY"" ) == 0 )"		2050092	0					
ANR	2050595	Condition	"strcasecmp ( cmd_argv [ 0 ] , ""SUSPEND_FAMILY"" ) == 0"	168:10:5521:5566	2050092	0	True				
ANR	2050596	EqualityExpression	"strcasecmp ( cmd_argv [ 0 ] , ""SUSPEND_FAMILY"" ) == 0"		2050092	0		==			
ANR	2050597	CallExpression	"strcasecmp ( cmd_argv [ 0 ] , ""SUSPEND_FAMILY"" )"		2050092	0					
ANR	2050598	Callee	strcasecmp		2050092	0					
ANR	2050599	Identifier	strcasecmp		2050092	0					
ANR	2050600	ArgumentList	cmd_argv [ 0 ]		2050092	1					
ANR	2050601	Argument	cmd_argv [ 0 ]		2050092	0					
ANR	2050602	ArrayIndexing	cmd_argv [ 0 ]		2050092	0					
ANR	2050603	Identifier	cmd_argv		2050092	0					
ANR	2050604	PrimaryExpression	0		2050092	1					
ANR	2050605	Argument	"""SUSPEND_FAMILY"""		2050092	1					
ANR	2050606	PrimaryExpression	"""SUSPEND_FAMILY"""		2050092	0					
ANR	2050607	PrimaryExpression	0		2050092	1					
ANR	2050608	CompoundStatement		103:58:2801:2801	2050092	1					
ANR	2050609	ReturnStatement	"return suspend_family ( pfc , cmd_argc , cmd_argv ) ;"	169:2:5573:5619	2050092	0	True				
ANR	2050610	CallExpression	"suspend_family ( pfc , cmd_argc , cmd_argv )"		2050092	0					
ANR	2050611	Callee	suspend_family		2050092	0					
ANR	2050612	Identifier	suspend_family		2050092	0					
ANR	2050613	ArgumentList	pfc		2050092	1					
ANR	2050614	Argument	pfc		2050092	0					
ANR	2050615	Identifier	pfc		2050092	0					
ANR	2050616	Argument	cmd_argc		2050092	1					
ANR	2050617	Identifier	cmd_argc		2050092	0					
ANR	2050618	Argument	cmd_argv		2050092	2					
ANR	2050619	Identifier	cmd_argv		2050092	0					
ANR	2050620	ElseStatement	else		2050092	0					
ANR	2050621	IfStatement	"if ( strcasecmp ( cmd_argv [ 0 ] , ""CONTINUE_FAMILY"" ) == 0 )"		2050092	0					
ANR	2050622	Condition	"strcasecmp ( cmd_argv [ 0 ] , ""CONTINUE_FAMILY"" ) == 0"	171:10:5634:5680	2050092	0	True				
ANR	2050623	EqualityExpression	"strcasecmp ( cmd_argv [ 0 ] , ""CONTINUE_FAMILY"" ) == 0"		2050092	0		==			
ANR	2050624	CallExpression	"strcasecmp ( cmd_argv [ 0 ] , ""CONTINUE_FAMILY"" )"		2050092	0					
ANR	2050625	Callee	strcasecmp		2050092	0					
ANR	2050626	Identifier	strcasecmp		2050092	0					
ANR	2050627	ArgumentList	cmd_argv [ 0 ]		2050092	1					
ANR	2050628	Argument	cmd_argv [ 0 ]		2050092	0					
ANR	2050629	ArrayIndexing	cmd_argv [ 0 ]		2050092	0					
ANR	2050630	Identifier	cmd_argv		2050092	0					
ANR	2050631	PrimaryExpression	0		2050092	1					
ANR	2050632	Argument	"""CONTINUE_FAMILY"""		2050092	1					
ANR	2050633	PrimaryExpression	"""CONTINUE_FAMILY"""		2050092	0					
ANR	2050634	PrimaryExpression	0		2050092	1					
ANR	2050635	CompoundStatement		106:59:2915:2915	2050092	1					
ANR	2050636	ReturnStatement	"return continue_family ( pfc , cmd_argc , cmd_argv ) ;"	172:2:5687:5734	2050092	0	True				
ANR	2050637	CallExpression	"continue_family ( pfc , cmd_argc , cmd_argv )"		2050092	0					
ANR	2050638	Callee	continue_family		2050092	0					
ANR	2050639	Identifier	continue_family		2050092	0					
ANR	2050640	ArgumentList	pfc		2050092	1					
ANR	2050641	Argument	pfc		2050092	0					
ANR	2050642	Identifier	pfc		2050092	0					
ANR	2050643	Argument	cmd_argc		2050092	1					
ANR	2050644	Identifier	cmd_argc		2050092	0					
ANR	2050645	Argument	cmd_argv		2050092	2					
ANR	2050646	Identifier	cmd_argv		2050092	0					
ANR	2050647	ElseStatement	else		2050092	0					
ANR	2050648	IfStatement	"if ( strcasecmp ( cmd_argv [ 0 ] , ""KILL_FAMILY"" ) == 0 )"		2050092	0					
ANR	2050649	Condition	"strcasecmp ( cmd_argv [ 0 ] , ""KILL_FAMILY"" ) == 0"	174:10:5749:5791	2050092	0	True				
ANR	2050650	EqualityExpression	"strcasecmp ( cmd_argv [ 0 ] , ""KILL_FAMILY"" ) == 0"		2050092	0		==			
ANR	2050651	CallExpression	"strcasecmp ( cmd_argv [ 0 ] , ""KILL_FAMILY"" )"		2050092	0					
ANR	2050652	Callee	strcasecmp		2050092	0					
ANR	2050653	Identifier	strcasecmp		2050092	0					
ANR	2050654	ArgumentList	cmd_argv [ 0 ]		2050092	1					
ANR	2050655	Argument	cmd_argv [ 0 ]		2050092	0					
ANR	2050656	ArrayIndexing	cmd_argv [ 0 ]		2050092	0					
ANR	2050657	Identifier	cmd_argv		2050092	0					
ANR	2050658	PrimaryExpression	0		2050092	1					
ANR	2050659	Argument	"""KILL_FAMILY"""		2050092	1					
ANR	2050660	PrimaryExpression	"""KILL_FAMILY"""		2050092	0					
ANR	2050661	PrimaryExpression	0		2050092	1					
ANR	2050662	CompoundStatement		109:55:3026:3026	2050092	1					
ANR	2050663	ReturnStatement	"return kill_family ( pfc , cmd_argc , cmd_argv ) ;"	175:2:5798:5841	2050092	0	True				
ANR	2050664	CallExpression	"kill_family ( pfc , cmd_argc , cmd_argv )"		2050092	0					
ANR	2050665	Callee	kill_family		2050092	0					
ANR	2050666	Identifier	kill_family		2050092	0					
ANR	2050667	ArgumentList	pfc		2050092	1					
ANR	2050668	Argument	pfc		2050092	0					
ANR	2050669	Identifier	pfc		2050092	0					
ANR	2050670	Argument	cmd_argc		2050092	1					
ANR	2050671	Identifier	cmd_argc		2050092	0					
ANR	2050672	Argument	cmd_argv		2050092	2					
ANR	2050673	Identifier	cmd_argv		2050092	0					
ANR	2050674	ElseStatement	else		2050092	0					
ANR	2050675	IfStatement	"if ( strcasecmp ( cmd_argv [ 0 ] , ""UNREGISTER_FAMILY"" ) == 0 )"		2050092	0					
ANR	2050676	Condition	"strcasecmp ( cmd_argv [ 0 ] , ""UNREGISTER_FAMILY"" ) == 0"	177:10:5856:5904	2050092	0	True				
ANR	2050677	EqualityExpression	"strcasecmp ( cmd_argv [ 0 ] , ""UNREGISTER_FAMILY"" ) == 0"		2050092	0		==			
ANR	2050678	CallExpression	"strcasecmp ( cmd_argv [ 0 ] , ""UNREGISTER_FAMILY"" )"		2050092	0					
ANR	2050679	Callee	strcasecmp		2050092	0					
ANR	2050680	Identifier	strcasecmp		2050092	0					
ANR	2050681	ArgumentList	cmd_argv [ 0 ]		2050092	1					
ANR	2050682	Argument	cmd_argv [ 0 ]		2050092	0					
ANR	2050683	ArrayIndexing	cmd_argv [ 0 ]		2050092	0					
ANR	2050684	Identifier	cmd_argv		2050092	0					
ANR	2050685	PrimaryExpression	0		2050092	1					
ANR	2050686	Argument	"""UNREGISTER_FAMILY"""		2050092	1					
ANR	2050687	PrimaryExpression	"""UNREGISTER_FAMILY"""		2050092	0					
ANR	2050688	PrimaryExpression	0		2050092	1					
ANR	2050689	CompoundStatement		112:61:3139:3139	2050092	1					
ANR	2050690	ReturnStatement	"return unregister_family ( pfc , cmd_argc , cmd_argv ) ;"	178:2:5911:5960	2050092	0	True				
ANR	2050691	CallExpression	"unregister_family ( pfc , cmd_argc , cmd_argv )"		2050092	0					
ANR	2050692	Callee	unregister_family		2050092	0					
ANR	2050693	Identifier	unregister_family		2050092	0					
ANR	2050694	ArgumentList	pfc		2050092	1					
ANR	2050695	Argument	pfc		2050092	0					
ANR	2050696	Identifier	pfc		2050092	0					
ANR	2050697	Argument	cmd_argc		2050092	1					
ANR	2050698	Identifier	cmd_argc		2050092	0					
ANR	2050699	Argument	cmd_argv		2050092	2					
ANR	2050700	Identifier	cmd_argv		2050092	0					
ANR	2050701	ElseStatement	else		2050092	0					
ANR	2050702	IfStatement	"if ( strcasecmp ( cmd_argv [ 0 ] , ""SNAPSHOT"" ) == 0 )"		2050092	0					
ANR	2050703	Condition	"strcasecmp ( cmd_argv [ 0 ] , ""SNAPSHOT"" ) == 0"	180:10:5975:6014	2050092	0	True				
ANR	2050704	EqualityExpression	"strcasecmp ( cmd_argv [ 0 ] , ""SNAPSHOT"" ) == 0"		2050092	0		==			
ANR	2050705	CallExpression	"strcasecmp ( cmd_argv [ 0 ] , ""SNAPSHOT"" )"		2050092	0					
ANR	2050706	Callee	strcasecmp		2050092	0					
ANR	2050707	Identifier	strcasecmp		2050092	0					
ANR	2050708	ArgumentList	cmd_argv [ 0 ]		2050092	1					
ANR	2050709	Argument	cmd_argv [ 0 ]		2050092	0					
ANR	2050710	ArrayIndexing	cmd_argv [ 0 ]		2050092	0					
ANR	2050711	Identifier	cmd_argv		2050092	0					
ANR	2050712	PrimaryExpression	0		2050092	1					
ANR	2050713	Argument	"""SNAPSHOT"""		2050092	1					
ANR	2050714	PrimaryExpression	"""SNAPSHOT"""		2050092	0					
ANR	2050715	PrimaryExpression	0		2050092	1					
ANR	2050716	CompoundStatement		115:52:3249:3249	2050092	1					
ANR	2050717	ReturnStatement	"return snapshot ( pfc , cmd_argc , cmd_argv ) ;"	181:2:6021:6061	2050092	0	True				
ANR	2050718	CallExpression	"snapshot ( pfc , cmd_argc , cmd_argv )"		2050092	0					
ANR	2050719	Callee	snapshot		2050092	0					
ANR	2050720	Identifier	snapshot		2050092	0					
ANR	2050721	ArgumentList	pfc		2050092	1					
ANR	2050722	Argument	pfc		2050092	0					
ANR	2050723	Identifier	pfc		2050092	0					
ANR	2050724	Argument	cmd_argc		2050092	1					
ANR	2050725	Identifier	cmd_argc		2050092	0					
ANR	2050726	Argument	cmd_argv		2050092	2					
ANR	2050727	Identifier	cmd_argv		2050092	0					
ANR	2050728	ElseStatement	else		2050092	0					
ANR	2050729	IfStatement	"if ( strcasecmp ( cmd_argv [ 0 ] , ""QUIT"" ) == 0 )"		2050092	0					
ANR	2050730	Condition	"strcasecmp ( cmd_argv [ 0 ] , ""QUIT"" ) == 0"	183:10:6076:6111	2050092	0	True				
ANR	2050731	EqualityExpression	"strcasecmp ( cmd_argv [ 0 ] , ""QUIT"" ) == 0"		2050092	0		==			
ANR	2050732	CallExpression	"strcasecmp ( cmd_argv [ 0 ] , ""QUIT"" )"		2050092	0					
ANR	2050733	Callee	strcasecmp		2050092	0					
ANR	2050734	Identifier	strcasecmp		2050092	0					
ANR	2050735	ArgumentList	cmd_argv [ 0 ]		2050092	1					
ANR	2050736	Argument	cmd_argv [ 0 ]		2050092	0					
ANR	2050737	ArrayIndexing	cmd_argv [ 0 ]		2050092	0					
ANR	2050738	Identifier	cmd_argv		2050092	0					
ANR	2050739	PrimaryExpression	0		2050092	1					
ANR	2050740	Argument	"""QUIT"""		2050092	1					
ANR	2050741	PrimaryExpression	"""QUIT"""		2050092	0					
ANR	2050742	PrimaryExpression	0		2050092	1					
ANR	2050743	CompoundStatement		118:48:3346:3346	2050092	1					
ANR	2050744	ReturnStatement	"return quit ( pfc , cmd_argc , cmd_argv ) ;"	184:2:6118:6154	2050092	0	True				
ANR	2050745	CallExpression	"quit ( pfc , cmd_argc , cmd_argv )"		2050092	0					
ANR	2050746	Callee	quit		2050092	0					
ANR	2050747	Identifier	quit		2050092	0					
ANR	2050748	ArgumentList	pfc		2050092	1					
ANR	2050749	Argument	pfc		2050092	0					
ANR	2050750	Identifier	pfc		2050092	0					
ANR	2050751	Argument	cmd_argc		2050092	1					
ANR	2050752	Identifier	cmd_argc		2050092	0					
ANR	2050753	Argument	cmd_argv		2050092	2					
ANR	2050754	Identifier	cmd_argv		2050092	0					
ANR	2050755	ElseStatement	else		2050092	0					
ANR	2050756	CompoundStatement		121:6:3397:3397	2050092	0					
ANR	2050757	ExpressionStatement	"fprintf ( stderr , ""error: invalid command: %s\\n"" , cmd_argv [ 0 ] )"	187:2:6169:6229	2050092	0	True				
ANR	2050758	CallExpression	"fprintf ( stderr , ""error: invalid command: %s\\n"" , cmd_argv [ 0 ] )"		2050092	0					
ANR	2050759	Callee	fprintf		2050092	0					
ANR	2050760	Identifier	fprintf		2050092	0					
ANR	2050761	ArgumentList	stderr		2050092	1					
ANR	2050762	Argument	stderr		2050092	0					
ANR	2050763	Identifier	stderr		2050092	0					
ANR	2050764	Argument	"""error: invalid command: %s\\n"""		2050092	1					
ANR	2050765	PrimaryExpression	"""error: invalid command: %s\\n"""		2050092	0					
ANR	2050766	Argument	cmd_argv [ 0 ]		2050092	2					
ANR	2050767	ArrayIndexing	cmd_argv [ 0 ]		2050092	0					
ANR	2050768	Identifier	cmd_argv		2050092	0					
ANR	2050769	PrimaryExpression	0		2050092	1					
ANR	2050770	ExpressionStatement	list_commands ( )	188:2:6233:6248	2050092	1	True				
ANR	2050771	CallExpression	list_commands ( )		2050092	0					
ANR	2050772	Callee	list_commands		2050092	0					
ANR	2050773	Identifier	list_commands		2050092	0					
ANR	2050774	ArgumentList			2050092	1					
ANR	2050775	ReturnStatement	return 1 ;	189:2:6252:6260	2050092	2	True				
ANR	2050776	PrimaryExpression	1		2050092	0					
ANR	2050777	ReturnType	int		2050092	1					
ANR	2050778	Identifier	main		2050092	2					
ANR	2050779	ParameterList	"int argc , char * argv [ ]"		2050092	3					
ANR	2050780	Parameter	int argc	65:5:2743:2750	2050092	0	True				
ANR	2050781	ParameterType	int		2050092	0					
ANR	2050782	Identifier	argc		2050092	1					
ANR	2050783	Parameter	char * argv [ ]	65:15:2753:2764	2050092	1	True				
ANR	2050784	ParameterType	char * [ ]		2050092	0					
ANR	2050785	Identifier	argv		2050092	1					
ANR	2050786	CFGEntryNode	ENTRY		2050092		True				
ANR	2050787	CFGExitNode	EXIT		2050092		True				
ANR	2050788	Symbol	pfc . initialize		2050092						
ANR	2050789	Symbol	* argv		2050092						
ANR	2050790	Symbol	argv		2050092						
ANR	2050791	Symbol	get_usage		2050092						
ANR	2050792	Symbol	* * cmd_argv		2050092						
ANR	2050793	Symbol	param		2050092						
ANR	2050794	Symbol	myDistro		2050092						
ANR	2050795	Symbol	cmd_argc		2050092						
ANR	2050796	Symbol	register_family		2050092						
ANR	2050797	Symbol	dump		2050092						
ANR	2050798	Symbol	strcasecmp		2050092						
ANR	2050799	Symbol	argc		2050092						
ANR	2050800	Symbol	strcmp		2050092						
ANR	2050801	Symbol	procd_address		2050092						
ANR	2050802	Symbol	NULL		2050092						
ANR	2050803	Symbol	Termlog		2050092						
ANR	2050804	Symbol	get_param_functions		2050092						
ANR	2050805	Symbol	stderr		2050092						
ANR	2050806	Symbol	pfc		2050092						
ANR	2050807	Symbol	track_by_associated_gid		2050092						
ANR	2050808	Symbol	list		2050092						
ANR	2050809	Symbol	unregister_family		2050092						
ANR	2050810	Symbol	cmd_argv		2050092						
ANR	2050811	Symbol	continue_family		2050092						
ANR	2050812	Symbol	track_by_associated_cgroup		2050092						
ANR	2050813	Symbol	signal_process		2050092						
ANR	2050814	Symbol	* cmd_argv		2050092						
ANR	2050815	Symbol	suspend_family		2050092						
ANR	2050816	Symbol	kill_family		2050092						
ANR	2050817	Symbol	quit		2050092						
ANR	2050818	Symbol	MATCH		2050092						
ANR	2050819	Symbol	snapshot		2050092						
ANR	2050820	Function	register_family	193:0:6268:7017							
ANR	2050821	FunctionDef	"register_family (ProcFamilyClient & pfc , int argc , char * argv [ ])"		2050820	0					
ANR	2050822	CompoundStatement		195:0:6342:7017	2050820	0					
ANR	2050823	IfStatement	if ( argc != 4 )		2050820	0					
ANR	2050824	Condition	argc != 4	196:5:6349:6357	2050820	0	True				
ANR	2050825	EqualityExpression	argc != 4		2050820	0		!=			
ANR	2050826	Identifier	argc		2050820	0					
ANR	2050827	PrimaryExpression	4		2050820	1					
ANR	2050828	CompoundStatement		2:16:17:17	2050820	1					
ANR	2050829	Statement	fprintf	197:2:6364:6370	2050820	0	True				
ANR	2050830	Statement	(	197:9:6371:6371	2050820	1	True				
ANR	2050831	Statement	stderr	197:10:6372:6377	2050820	2	True				
ANR	2050832	Statement	","	197:16:6378:6378	2050820	3	True				
ANR	2050833	Statement	"""error: argument synopsis for %s: """	198:10:6390:6424	2050820	4	True				
ANR	2050834	Statement	"""<pid> <watcher_pid> <max_snapshot interval>\\n"""	199:14:6440:6486	2050820	5	True				
ANR	2050835	Statement	","	199:61:6487:6487	2050820	6	True				
ANR	2050836	Statement	argv	200:10:6499:6502	2050820	7	True				
ANR	2050837	Statement	[	200:14:6503:6503	2050820	8	True				
ANR	2050838	Statement	0	200:15:6504:6504	2050820	9	True				
ANR	2050839	Statement	]	200:16:6505:6505	2050820	10	True				
ANR	2050840	Statement	)	200:17:6506:6506	2050820	11	True				
ANR	2050841	ExpressionStatement		200:18:6507:6507	2050820	12	True				
ANR	2050842	ReturnStatement	return 1 ;	201:2:6511:6519	2050820	13	True				
ANR	2050843	PrimaryExpression	1		2050820	0					
ANR	2050844	IdentifierDeclStatement	pid_t pid = atoi ( argv [ 1 ] ) ;	203:1:6525:6550	2050820	1	True				
ANR	2050845	IdentifierDecl	pid = atoi ( argv [ 1 ] )		2050820	0					
ANR	2050846	IdentifierDeclType	pid_t		2050820	0					
ANR	2050847	Identifier	pid		2050820	1					
ANR	2050848	AssignmentExpression	pid = atoi ( argv [ 1 ] )		2050820	2		=			
ANR	2050849	Identifier	pid		2050820	0					
ANR	2050850	CallExpression	atoi ( argv [ 1 ] )		2050820	1					
ANR	2050851	Callee	atoi		2050820	0					
ANR	2050852	Identifier	atoi		2050820	0					
ANR	2050853	ArgumentList	argv [ 1 ]		2050820	1					
ANR	2050854	Argument	argv [ 1 ]		2050820	0					
ANR	2050855	ArrayIndexing	argv [ 1 ]		2050820	0					
ANR	2050856	Identifier	argv		2050820	0					
ANR	2050857	PrimaryExpression	1		2050820	1					
ANR	2050858	IdentifierDeclStatement	pid_t watcher = atoi ( argv [ 2 ] ) ;	204:1:6553:6582	2050820	2	True				
ANR	2050859	IdentifierDecl	watcher = atoi ( argv [ 2 ] )		2050820	0					
ANR	2050860	IdentifierDeclType	pid_t		2050820	0					
ANR	2050861	Identifier	watcher		2050820	1					
ANR	2050862	AssignmentExpression	watcher = atoi ( argv [ 2 ] )		2050820	2		=			
ANR	2050863	Identifier	watcher		2050820	0					
ANR	2050864	CallExpression	atoi ( argv [ 2 ] )		2050820	1					
ANR	2050865	Callee	atoi		2050820	0					
ANR	2050866	Identifier	atoi		2050820	0					
ANR	2050867	ArgumentList	argv [ 2 ]		2050820	1					
ANR	2050868	Argument	argv [ 2 ]		2050820	0					
ANR	2050869	ArrayIndexing	argv [ 2 ]		2050820	0					
ANR	2050870	Identifier	argv		2050820	0					
ANR	2050871	PrimaryExpression	2		2050820	1					
ANR	2050872	IdentifierDeclStatement	int max_snapshot_interval = atoi ( argv [ 3 ] ) ;	205:1:6585:6626	2050820	3	True				
ANR	2050873	IdentifierDecl	max_snapshot_interval = atoi ( argv [ 3 ] )		2050820	0					
ANR	2050874	IdentifierDeclType	int		2050820	0					
ANR	2050875	Identifier	max_snapshot_interval		2050820	1					
ANR	2050876	AssignmentExpression	max_snapshot_interval = atoi ( argv [ 3 ] )		2050820	2		=			
ANR	2050877	Identifier	max_snapshot_interval		2050820	0					
ANR	2050878	CallExpression	atoi ( argv [ 3 ] )		2050820	1					
ANR	2050879	Callee	atoi		2050820	0					
ANR	2050880	Identifier	atoi		2050820	0					
ANR	2050881	ArgumentList	argv [ 3 ]		2050820	1					
ANR	2050882	Argument	argv [ 3 ]		2050820	0					
ANR	2050883	ArrayIndexing	argv [ 3 ]		2050820	0					
ANR	2050884	Identifier	argv		2050820	0					
ANR	2050885	PrimaryExpression	3		2050820	1					
ANR	2050886	IdentifierDeclStatement	bool success ;	206:1:6629:6641	2050820	4	True				
ANR	2050887	IdentifierDecl	success		2050820	0					
ANR	2050888	IdentifierDeclType	bool		2050820	0					
ANR	2050889	Identifier	success		2050820	1					
ANR	2050890	IfStatement	"if ( ! pfc . register_subfamily ( pid , watcher , max_snapshot_interval , success ) )"		2050820	5					
ANR	2050891	Condition	"! pfc . register_subfamily ( pid , watcher , max_snapshot_interval , success )"	207:5:6648:6803	2050820	0	True				
ANR	2050892	UnaryOperationExpression	"! pfc . register_subfamily ( pid , watcher , max_snapshot_interval , success )"		2050820	0					
ANR	2050893	UnaryOperator	!		2050820	0					
ANR	2050894	CallExpression	"pfc . register_subfamily ( pid , watcher , max_snapshot_interval , success )"		2050820	1					
ANR	2050895	Callee	pfc . register_subfamily		2050820	0					
ANR	2050896	MemberAccess	pfc . register_subfamily		2050820	0					
ANR	2050897	Identifier	pfc		2050820	0					
ANR	2050898	Identifier	register_subfamily		2050820	1					
ANR	2050899	ArgumentList	pid		2050820	1					
ANR	2050900	Argument	pid		2050820	0					
ANR	2050901	Identifier	pid		2050820	0					
ANR	2050902	Argument	watcher		2050820	1					
ANR	2050903	Identifier	watcher		2050820	0					
ANR	2050904	Argument	max_snapshot_interval		2050820	2					
ANR	2050905	Identifier	max_snapshot_interval		2050820	0					
ANR	2050906	Argument	success		2050820	3					
ANR	2050907	Identifier	success		2050820	0					
ANR	2050908	CompoundStatement		16:39:463:463	2050820	1					
ANR	2050909	ExpressionStatement	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"	211:2:6810:6868	2050820	0	True				
ANR	2050910	CallExpression	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"		2050820	0					
ANR	2050911	Callee	fprintf		2050820	0					
ANR	2050912	Identifier	fprintf		2050820	0					
ANR	2050913	ArgumentList	stderr		2050820	1					
ANR	2050914	Argument	stderr		2050820	0					
ANR	2050915	Identifier	stderr		2050820	0					
ANR	2050916	Argument	"""error: communication error with ProcD\\n"""		2050820	1					
ANR	2050917	PrimaryExpression	"""error: communication error with ProcD\\n"""		2050820	0					
ANR	2050918	ReturnStatement	return 1 ;	212:2:6872:6880	2050820	1	True				
ANR	2050919	PrimaryExpression	1		2050820	0					
ANR	2050920	IfStatement	if ( ! success )		2050820	6					
ANR	2050921	Condition	! success	214:5:6890:6897	2050820	0	True				
ANR	2050922	UnaryOperationExpression	! success		2050820	0					
ANR	2050923	UnaryOperator	!		2050820	0					
ANR	2050924	Identifier	success		2050820	1					
ANR	2050925	CompoundStatement		20:15:557:557	2050820	1					
ANR	2050926	ExpressionStatement	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"	215:2:6904:6989	2050820	0	True				
ANR	2050927	CallExpression	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"		2050820	0					
ANR	2050928	Callee	fprintf		2050820	0					
ANR	2050929	Identifier	fprintf		2050820	0					
ANR	2050930	ArgumentList	stderr		2050820	1					
ANR	2050931	Argument	stderr		2050820	0					
ANR	2050932	Identifier	stderr		2050820	0					
ANR	2050933	Argument	"""error: %s command failed with ProcD\\n"""		2050820	1					
ANR	2050934	PrimaryExpression	"""error: %s command failed with ProcD\\n"""		2050820	0					
ANR	2050935	Argument	argv [ 0 ]		2050820	2					
ANR	2050936	ArrayIndexing	argv [ 0 ]		2050820	0					
ANR	2050937	Identifier	argv		2050820	0					
ANR	2050938	PrimaryExpression	0		2050820	1					
ANR	2050939	ReturnStatement	return 1 ;	218:2:6993:7001	2050820	1	True				
ANR	2050940	PrimaryExpression	1		2050820	0					
ANR	2050941	ReturnStatement	return 0 ;	220:1:7007:7015	2050820	7	True				
ANR	2050942	PrimaryExpression	0		2050820	0					
ANR	2050943	ReturnType	static int		2050820	1					
ANR	2050944	Identifier	register_family		2050820	2					
ANR	2050945	ParameterList	"ProcFamilyClient & pfc , int argc , char * argv [ ]"		2050820	3					
ANR	2050946	Parameter	ProcFamilyClient & pfc	194:16:6295:6315	2050820	0	True				
ANR	2050947	ParameterType	ProcFamilyClient &		2050820	0					
ANR	2050948	Identifier	pfc		2050820	1					
ANR	2050949	Parameter	int argc	194:39:6318:6325	2050820	1	True				
ANR	2050950	ParameterType	int		2050820	0					
ANR	2050951	Identifier	argc		2050820	1					
ANR	2050952	Parameter	char * argv [ ]	194:49:6328:6339	2050820	2	True				
ANR	2050953	ParameterType	char * [ ]		2050820	0					
ANR	2050954	Identifier	argv		2050820	1					
ANR	2050955	CFGEntryNode	ENTRY		2050820		True				
ANR	2050956	CFGExitNode	EXIT		2050820		True				
ANR	2050957	Symbol	argc		2050820						
ANR	2050958	Symbol	atoi		2050820						
ANR	2050959	Symbol	watcher		2050820						
ANR	2050960	Symbol	max_snapshot_interval		2050820						
ANR	2050961	Symbol	success		2050820						
ANR	2050962	Symbol	pfc . register_subfamily		2050820						
ANR	2050963	Symbol	pid		2050820						
ANR	2050964	Symbol	* argv		2050820						
ANR	2050965	Symbol	pfc		2050820						
ANR	2050966	Symbol	stderr		2050820						
ANR	2050967	Symbol	argv		2050820						
ANR	2050968	Function	track_by_associated_gid	223:0:7020:7818							
ANR	2050969	FunctionDef	"track_by_associated_gid (ProcFamilyClient & pfc , int argc , char * argv [ ])"		2050968	0					
ANR	2050970	CompoundStatement		225:0:7102:7818	2050968	0					
ANR	2050971	IfStatement	if ( ( argc != 2 ) && ( argc != 3 ) )		2050968	0					
ANR	2050972	Condition	( argc != 2 ) && ( argc != 3 )	226:5:7109:7134	2050968	0	True				
ANR	2050973	AndExpression	( argc != 2 ) && ( argc != 3 )		2050968	0		&&			
ANR	2050974	EqualityExpression	argc != 2		2050968	0		!=			
ANR	2050975	Identifier	argc		2050968	0					
ANR	2050976	PrimaryExpression	2		2050968	1					
ANR	2050977	EqualityExpression	argc != 3		2050968	1		!=			
ANR	2050978	Identifier	argc		2050968	0					
ANR	2050979	PrimaryExpression	3		2050968	1					
ANR	2050980	CompoundStatement		2:33:34:34	2050968	1					
ANR	2050981	ExpressionStatement	"fprintf ( stderr , ""error: argument synopsis for %s: <gid> [<pid>]\\n"" , argv [ 0 ] )"	227:2:7141:7237	2050968	0	True				
ANR	2050982	CallExpression	"fprintf ( stderr , ""error: argument synopsis for %s: <gid> [<pid>]\\n"" , argv [ 0 ] )"		2050968	0					
ANR	2050983	Callee	fprintf		2050968	0					
ANR	2050984	Identifier	fprintf		2050968	0					
ANR	2050985	ArgumentList	stderr		2050968	1					
ANR	2050986	Argument	stderr		2050968	0					
ANR	2050987	Identifier	stderr		2050968	0					
ANR	2050988	Argument	"""error: argument synopsis for %s: <gid> [<pid>]\\n"""		2050968	1					
ANR	2050989	PrimaryExpression	"""error: argument synopsis for %s: <gid> [<pid>]\\n"""		2050968	0					
ANR	2050990	Argument	argv [ 0 ]		2050968	2					
ANR	2050991	ArrayIndexing	argv [ 0 ]		2050968	0					
ANR	2050992	Identifier	argv		2050968	0					
ANR	2050993	PrimaryExpression	0		2050968	1					
ANR	2050994	ReturnStatement	return 1 ;	230:2:7241:7249	2050968	1	True				
ANR	2050995	PrimaryExpression	1		2050968	0					
ANR	2050996	IdentifierDeclStatement	gid_t gid = atoi ( argv [ 1 ] ) ;	232:1:7255:7280	2050968	1	True				
ANR	2050997	IdentifierDecl	gid = atoi ( argv [ 1 ] )		2050968	0					
ANR	2050998	IdentifierDeclType	gid_t		2050968	0					
ANR	2050999	Identifier	gid		2050968	1					
ANR	2051000	AssignmentExpression	gid = atoi ( argv [ 1 ] )		2050968	2		=			
ANR	2051001	Identifier	gid		2050968	0					
ANR	2051002	CallExpression	atoi ( argv [ 1 ] )		2050968	1					
ANR	2051003	Callee	atoi		2050968	0					
ANR	2051004	Identifier	atoi		2050968	0					
ANR	2051005	ArgumentList	argv [ 1 ]		2050968	1					
ANR	2051006	Argument	argv [ 1 ]		2050968	0					
ANR	2051007	ArrayIndexing	argv [ 1 ]		2050968	0					
ANR	2051008	Identifier	argv		2050968	0					
ANR	2051009	PrimaryExpression	1		2050968	1					
ANR	2051010	IfStatement	if ( gid == 0 )		2050968	2					
ANR	2051011	Condition	gid == 0	233:5:7287:7294	2050968	0	True				
ANR	2051012	EqualityExpression	gid == 0		2050968	0		==			
ANR	2051013	Identifier	gid		2050968	0					
ANR	2051014	PrimaryExpression	0		2050968	1					
ANR	2051015	CompoundStatement		9:15:194:194	2050968	1					
ANR	2051016	ExpressionStatement	"fprintf ( stderr , ""invalid GID: %s\\n"" , argv [ 1 ] )"	234:2:7301:7346	2050968	0	True				
ANR	2051017	CallExpression	"fprintf ( stderr , ""invalid GID: %s\\n"" , argv [ 1 ] )"		2050968	0					
ANR	2051018	Callee	fprintf		2050968	0					
ANR	2051019	Identifier	fprintf		2050968	0					
ANR	2051020	ArgumentList	stderr		2050968	1					
ANR	2051021	Argument	stderr		2050968	0					
ANR	2051022	Identifier	stderr		2050968	0					
ANR	2051023	Argument	"""invalid GID: %s\\n"""		2050968	1					
ANR	2051024	PrimaryExpression	"""invalid GID: %s\\n"""		2050968	0					
ANR	2051025	Argument	argv [ 1 ]		2050968	2					
ANR	2051026	ArrayIndexing	argv [ 1 ]		2050968	0					
ANR	2051027	Identifier	argv		2050968	0					
ANR	2051028	PrimaryExpression	1		2050968	1					
ANR	2051029	ReturnStatement	return 1 ;	235:2:7350:7358	2050968	1	True				
ANR	2051030	PrimaryExpression	1		2050968	0					
ANR	2051031	IdentifierDeclStatement	pid_t pid = 0 ;	237:1:7364:7377	2050968	3	True				
ANR	2051032	IdentifierDecl	pid = 0		2050968	0					
ANR	2051033	IdentifierDeclType	pid_t		2050968	0					
ANR	2051034	Identifier	pid		2050968	1					
ANR	2051035	AssignmentExpression	pid = 0		2050968	2		=			
ANR	2051036	Identifier	pid		2050968	0					
ANR	2051037	PrimaryExpression	0		2050968	1					
ANR	2051038	IfStatement	if ( argc == 3 )		2050968	4					
ANR	2051039	Condition	argc == 3	238:5:7384:7392	2050968	0	True				
ANR	2051040	EqualityExpression	argc == 3		2050968	0		==			
ANR	2051041	Identifier	argc		2050968	0					
ANR	2051042	PrimaryExpression	3		2050968	1					
ANR	2051043	CompoundStatement		14:16:292:292	2050968	1					
ANR	2051044	ExpressionStatement	pid = atoi ( argv [ 2 ] )	239:2:7399:7418	2050968	0	True				
ANR	2051045	AssignmentExpression	pid = atoi ( argv [ 2 ] )		2050968	0		=			
ANR	2051046	Identifier	pid		2050968	0					
ANR	2051047	CallExpression	atoi ( argv [ 2 ] )		2050968	1					
ANR	2051048	Callee	atoi		2050968	0					
ANR	2051049	Identifier	atoi		2050968	0					
ANR	2051050	ArgumentList	argv [ 2 ]		2050968	1					
ANR	2051051	Argument	argv [ 2 ]		2050968	0					
ANR	2051052	ArrayIndexing	argv [ 2 ]		2050968	0					
ANR	2051053	Identifier	argv		2050968	0					
ANR	2051054	PrimaryExpression	2		2050968	1					
ANR	2051055	IfStatement	if ( pid <= 0 )		2050968	1					
ANR	2051056	Condition	pid <= 0	240:6:7426:7433	2050968	0	True				
ANR	2051057	RelationalExpression	pid <= 0		2050968	0		<=			
ANR	2051058	Identifier	pid		2050968	0					
ANR	2051059	PrimaryExpression	0		2050968	1					
ANR	2051060	CompoundStatement		16:16:333:333	2050968	1					
ANR	2051061	ExpressionStatement	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 2 ] )"	241:3:7441:7493	2050968	0	True				
ANR	2051062	CallExpression	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 2 ] )"		2050968	0					
ANR	2051063	Callee	fprintf		2050968	0					
ANR	2051064	Identifier	fprintf		2050968	0					
ANR	2051065	ArgumentList	stderr		2050968	1					
ANR	2051066	Argument	stderr		2050968	0					
ANR	2051067	Identifier	stderr		2050968	0					
ANR	2051068	Argument	"""error: invalid pid: %s\\n"""		2050968	1					
ANR	2051069	PrimaryExpression	"""error: invalid pid: %s\\n"""		2050968	0					
ANR	2051070	Argument	argv [ 2 ]		2050968	2					
ANR	2051071	ArrayIndexing	argv [ 2 ]		2050968	0					
ANR	2051072	Identifier	argv		2050968	0					
ANR	2051073	PrimaryExpression	2		2050968	1					
ANR	2051074	ReturnStatement	return 1 ;	242:3:7498:7506	2050968	1	True				
ANR	2051075	PrimaryExpression	1		2050968	0					
ANR	2051076	IdentifierDeclStatement	bool success ;	245:1:7516:7528	2050968	5	True				
ANR	2051077	IdentifierDecl	success		2050968	0					
ANR	2051078	IdentifierDeclType	bool		2050968	0					
ANR	2051079	Identifier	success		2050968	1					
ANR	2051080	IfStatement	"if ( ! pfc . track_family_via_associated_supplementary_group ( pid , gid , success ) )"		2050968	6					
ANR	2051081	Condition	"! pfc . track_family_via_associated_supplementary_group ( pid , gid , success )"	246:5:7535:7605	2050968	0	True				
ANR	2051082	UnaryOperationExpression	"! pfc . track_family_via_associated_supplementary_group ( pid , gid , success )"		2050968	0					
ANR	2051083	UnaryOperator	!		2050968	0					
ANR	2051084	CallExpression	"pfc . track_family_via_associated_supplementary_group ( pid , gid , success )"		2050968	1					
ANR	2051085	Callee	pfc . track_family_via_associated_supplementary_group		2050968	0					
ANR	2051086	MemberAccess	pfc . track_family_via_associated_supplementary_group		2050968	0					
ANR	2051087	Identifier	pfc		2050968	0					
ANR	2051088	Identifier	track_family_via_associated_supplementary_group		2050968	1					
ANR	2051089	ArgumentList	pid		2050968	1					
ANR	2051090	Argument	pid		2050968	0					
ANR	2051091	Identifier	pid		2050968	0					
ANR	2051092	Argument	gid		2050968	1					
ANR	2051093	Identifier	gid		2050968	0					
ANR	2051094	Argument	success		2050968	2					
ANR	2051095	Identifier	success		2050968	0					
ANR	2051096	CompoundStatement		22:78:505:505	2050968	1					
ANR	2051097	ExpressionStatement	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"	247:1:7611:7669	2050968	0	True				
ANR	2051098	CallExpression	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"		2050968	0					
ANR	2051099	Callee	fprintf		2050968	0					
ANR	2051100	Identifier	fprintf		2050968	0					
ANR	2051101	ArgumentList	stderr		2050968	1					
ANR	2051102	Argument	stderr		2050968	0					
ANR	2051103	Identifier	stderr		2050968	0					
ANR	2051104	Argument	"""error: communication error with ProcD\\n"""		2050968	1					
ANR	2051105	PrimaryExpression	"""error: communication error with ProcD\\n"""		2050968	0					
ANR	2051106	ReturnStatement	return 1 ;	248:2:7673:7681	2050968	1	True				
ANR	2051107	PrimaryExpression	1		2050968	0					
ANR	2051108	IfStatement	if ( ! success )		2050968	7					
ANR	2051109	Condition	! success	250:5:7691:7698	2050968	0	True				
ANR	2051110	UnaryOperationExpression	! success		2050968	0					
ANR	2051111	UnaryOperator	!		2050968	0					
ANR	2051112	Identifier	success		2050968	1					
ANR	2051113	CompoundStatement		26:15:598:598	2050968	1					
ANR	2051114	ExpressionStatement	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"	251:2:7705:7790	2050968	0	True				
ANR	2051115	CallExpression	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"		2050968	0					
ANR	2051116	Callee	fprintf		2050968	0					
ANR	2051117	Identifier	fprintf		2050968	0					
ANR	2051118	ArgumentList	stderr		2050968	1					
ANR	2051119	Argument	stderr		2050968	0					
ANR	2051120	Identifier	stderr		2050968	0					
ANR	2051121	Argument	"""error: %s command failed with ProcD\\n"""		2050968	1					
ANR	2051122	PrimaryExpression	"""error: %s command failed with ProcD\\n"""		2050968	0					
ANR	2051123	Argument	argv [ 0 ]		2050968	2					
ANR	2051124	ArrayIndexing	argv [ 0 ]		2050968	0					
ANR	2051125	Identifier	argv		2050968	0					
ANR	2051126	PrimaryExpression	0		2050968	1					
ANR	2051127	ReturnStatement	return 1 ;	254:2:7794:7802	2050968	1	True				
ANR	2051128	PrimaryExpression	1		2050968	0					
ANR	2051129	ReturnStatement	return 0 ;	256:1:7808:7816	2050968	8	True				
ANR	2051130	PrimaryExpression	0		2050968	0					
ANR	2051131	ReturnType	static int		2050968	1					
ANR	2051132	Identifier	track_by_associated_gid		2050968	2					
ANR	2051133	ParameterList	"ProcFamilyClient & pfc , int argc , char * argv [ ]"		2050968	3					
ANR	2051134	Parameter	ProcFamilyClient & pfc	224:24:7055:7075	2050968	0	True				
ANR	2051135	ParameterType	ProcFamilyClient &		2050968	0					
ANR	2051136	Identifier	pfc		2050968	1					
ANR	2051137	Parameter	int argc	224:47:7078:7085	2050968	1	True				
ANR	2051138	ParameterType	int		2050968	0					
ANR	2051139	Identifier	argc		2050968	1					
ANR	2051140	Parameter	char * argv [ ]	224:57:7088:7099	2050968	2	True				
ANR	2051141	ParameterType	char * [ ]		2050968	0					
ANR	2051142	Identifier	argv		2050968	1					
ANR	2051143	CFGEntryNode	ENTRY		2050968		True				
ANR	2051144	CFGExitNode	EXIT		2050968		True				
ANR	2051145	Symbol	argc		2050968						
ANR	2051146	Symbol	atoi		2050968						
ANR	2051147	Symbol	gid		2050968						
ANR	2051148	Symbol	success		2050968						
ANR	2051149	Symbol	pfc . track_family_via_associated_supplementary_group		2050968						
ANR	2051150	Symbol	* argv		2050968						
ANR	2051151	Symbol	pid		2050968						
ANR	2051152	Symbol	pfc		2050968						
ANR	2051153	Symbol	stderr		2050968						
ANR	2051154	Symbol	argv		2050968						
ANR	2051155	Function	track_by_associated_cgroup	260:0:7853:8532							
ANR	2051156	FunctionDef	"track_by_associated_cgroup (ProcFamilyClient & pfc , int argc , char * argv [ ])"		2051155	0					
ANR	2051157	CompoundStatement		262:0:7938:8532	2051155	0					
ANR	2051158	IfStatement	if ( ( argc != 2 ) && ( argc != 3 ) )		2051155	0					
ANR	2051159	Condition	( argc != 2 ) && ( argc != 3 )	263:5:7945:7970	2051155	0	True				
ANR	2051160	AndExpression	( argc != 2 ) && ( argc != 3 )		2051155	0		&&			
ANR	2051161	EqualityExpression	argc != 2		2051155	0		!=			
ANR	2051162	Identifier	argc		2051155	0					
ANR	2051163	PrimaryExpression	2		2051155	1					
ANR	2051164	EqualityExpression	argc != 3		2051155	1		!=			
ANR	2051165	Identifier	argc		2051155	0					
ANR	2051166	PrimaryExpression	3		2051155	1					
ANR	2051167	CompoundStatement		2:33:34:34	2051155	1					
ANR	2051168	ExpressionStatement	"fprintf ( stderr , ""error: argument synopsis for %s: <cgroup> [<pid>]\\n"" , argv [ 0 ] )"	264:2:7977:8062	2051155	0	True				
ANR	2051169	CallExpression	"fprintf ( stderr , ""error: argument synopsis for %s: <cgroup> [<pid>]\\n"" , argv [ 0 ] )"		2051155	0					
ANR	2051170	Callee	fprintf		2051155	0					
ANR	2051171	Identifier	fprintf		2051155	0					
ANR	2051172	ArgumentList	stderr		2051155	1					
ANR	2051173	Argument	stderr		2051155	0					
ANR	2051174	Identifier	stderr		2051155	0					
ANR	2051175	Argument	"""error: argument synopsis for %s: <cgroup> [<pid>]\\n"""		2051155	1					
ANR	2051176	PrimaryExpression	"""error: argument synopsis for %s: <cgroup> [<pid>]\\n"""		2051155	0					
ANR	2051177	Argument	argv [ 0 ]		2051155	2					
ANR	2051178	ArrayIndexing	argv [ 0 ]		2051155	0					
ANR	2051179	Identifier	argv		2051155	0					
ANR	2051180	PrimaryExpression	0		2051155	1					
ANR	2051181	ReturnStatement	return 1 ;	267:2:8066:8074	2051155	1	True				
ANR	2051182	PrimaryExpression	1		2051155	0					
ANR	2051183	IdentifierDeclStatement	const char * cgroup = argv [ 1 ] ;	269:1:8080:8109	2051155	1	True				
ANR	2051184	IdentifierDecl	* cgroup = argv [ 1 ]		2051155	0					
ANR	2051185	IdentifierDeclType	const char *		2051155	0					
ANR	2051186	Identifier	cgroup		2051155	1					
ANR	2051187	AssignmentExpression	* cgroup = argv [ 1 ]		2051155	2		=			
ANR	2051188	Identifier	cgroup		2051155	0					
ANR	2051189	ArrayIndexing	argv [ 1 ]		2051155	1					
ANR	2051190	Identifier	argv		2051155	0					
ANR	2051191	PrimaryExpression	1		2051155	1					
ANR	2051192	IdentifierDeclStatement	pid_t pid = 0 ;	270:1:8112:8125	2051155	2	True				
ANR	2051193	IdentifierDecl	pid = 0		2051155	0					
ANR	2051194	IdentifierDeclType	pid_t		2051155	0					
ANR	2051195	Identifier	pid		2051155	1					
ANR	2051196	AssignmentExpression	pid = 0		2051155	2		=			
ANR	2051197	Identifier	pid		2051155	0					
ANR	2051198	PrimaryExpression	0		2051155	1					
ANR	2051199	IfStatement	if ( argc == 3 )		2051155	3					
ANR	2051200	Condition	argc == 3	271:5:8132:8140	2051155	0	True				
ANR	2051201	EqualityExpression	argc == 3		2051155	0		==			
ANR	2051202	Identifier	argc		2051155	0					
ANR	2051203	PrimaryExpression	3		2051155	1					
ANR	2051204	CompoundStatement		10:16:204:204	2051155	1					
ANR	2051205	ExpressionStatement	pid = atoi ( argv [ 2 ] )	272:2:8147:8166	2051155	0	True				
ANR	2051206	AssignmentExpression	pid = atoi ( argv [ 2 ] )		2051155	0		=			
ANR	2051207	Identifier	pid		2051155	0					
ANR	2051208	CallExpression	atoi ( argv [ 2 ] )		2051155	1					
ANR	2051209	Callee	atoi		2051155	0					
ANR	2051210	Identifier	atoi		2051155	0					
ANR	2051211	ArgumentList	argv [ 2 ]		2051155	1					
ANR	2051212	Argument	argv [ 2 ]		2051155	0					
ANR	2051213	ArrayIndexing	argv [ 2 ]		2051155	0					
ANR	2051214	Identifier	argv		2051155	0					
ANR	2051215	PrimaryExpression	2		2051155	1					
ANR	2051216	IfStatement	if ( pid <= 0 )		2051155	1					
ANR	2051217	Condition	pid <= 0	273:6:8174:8181	2051155	0	True				
ANR	2051218	RelationalExpression	pid <= 0		2051155	0		<=			
ANR	2051219	Identifier	pid		2051155	0					
ANR	2051220	PrimaryExpression	0		2051155	1					
ANR	2051221	CompoundStatement		12:16:245:245	2051155	1					
ANR	2051222	ExpressionStatement	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 2 ] )"	274:3:8189:8241	2051155	0	True				
ANR	2051223	CallExpression	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 2 ] )"		2051155	0					
ANR	2051224	Callee	fprintf		2051155	0					
ANR	2051225	Identifier	fprintf		2051155	0					
ANR	2051226	ArgumentList	stderr		2051155	1					
ANR	2051227	Argument	stderr		2051155	0					
ANR	2051228	Identifier	stderr		2051155	0					
ANR	2051229	Argument	"""error: invalid pid: %s\\n"""		2051155	1					
ANR	2051230	PrimaryExpression	"""error: invalid pid: %s\\n"""		2051155	0					
ANR	2051231	Argument	argv [ 2 ]		2051155	2					
ANR	2051232	ArrayIndexing	argv [ 2 ]		2051155	0					
ANR	2051233	Identifier	argv		2051155	0					
ANR	2051234	PrimaryExpression	2		2051155	1					
ANR	2051235	ReturnStatement	return 1 ;	275:3:8246:8254	2051155	1	True				
ANR	2051236	PrimaryExpression	1		2051155	0					
ANR	2051237	IdentifierDeclStatement	bool success ;	278:1:8264:8276	2051155	4	True				
ANR	2051238	IdentifierDecl	success		2051155	0					
ANR	2051239	IdentifierDeclType	bool		2051155	0					
ANR	2051240	Identifier	success		2051155	1					
ANR	2051241	IfStatement	"if ( ! pfc . track_family_via_cgroup ( pid , cgroup , success ) )"		2051155	5					
ANR	2051242	Condition	"! pfc . track_family_via_cgroup ( pid , cgroup , success )"	279:5:8283:8332	2051155	0	True				
ANR	2051243	UnaryOperationExpression	"! pfc . track_family_via_cgroup ( pid , cgroup , success )"		2051155	0					
ANR	2051244	UnaryOperator	!		2051155	0					
ANR	2051245	CallExpression	"pfc . track_family_via_cgroup ( pid , cgroup , success )"		2051155	1					
ANR	2051246	Callee	pfc . track_family_via_cgroup		2051155	0					
ANR	2051247	MemberAccess	pfc . track_family_via_cgroup		2051155	0					
ANR	2051248	Identifier	pfc		2051155	0					
ANR	2051249	Identifier	track_family_via_cgroup		2051155	1					
ANR	2051250	ArgumentList	pid		2051155	1					
ANR	2051251	Argument	pid		2051155	0					
ANR	2051252	Identifier	pid		2051155	0					
ANR	2051253	Argument	cgroup		2051155	1					
ANR	2051254	Identifier	cgroup		2051155	0					
ANR	2051255	Argument	success		2051155	2					
ANR	2051256	Identifier	success		2051155	0					
ANR	2051257	CompoundStatement		18:57:396:396	2051155	1					
ANR	2051258	ExpressionStatement	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"	280:2:8339:8397	2051155	0	True				
ANR	2051259	CallExpression	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"		2051155	0					
ANR	2051260	Callee	fprintf		2051155	0					
ANR	2051261	Identifier	fprintf		2051155	0					
ANR	2051262	ArgumentList	stderr		2051155	1					
ANR	2051263	Argument	stderr		2051155	0					
ANR	2051264	Identifier	stderr		2051155	0					
ANR	2051265	Argument	"""error: communication error with ProcD\\n"""		2051155	1					
ANR	2051266	PrimaryExpression	"""error: communication error with ProcD\\n"""		2051155	0					
ANR	2051267	ReturnStatement	return 1 ;	281:2:8401:8409	2051155	1	True				
ANR	2051268	PrimaryExpression	1		2051155	0					
ANR	2051269	IfStatement	if ( ! success )		2051155	6					
ANR	2051270	Condition	! success	283:5:8419:8426	2051155	0	True				
ANR	2051271	UnaryOperationExpression	! success		2051155	0					
ANR	2051272	UnaryOperator	!		2051155	0					
ANR	2051273	Identifier	success		2051155	1					
ANR	2051274	CompoundStatement		22:15:490:490	2051155	1					
ANR	2051275	ExpressionStatement	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"	284:2:8433:8504	2051155	0	True				
ANR	2051276	CallExpression	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"		2051155	0					
ANR	2051277	Callee	fprintf		2051155	0					
ANR	2051278	Identifier	fprintf		2051155	0					
ANR	2051279	ArgumentList	stderr		2051155	1					
ANR	2051280	Argument	stderr		2051155	0					
ANR	2051281	Identifier	stderr		2051155	0					
ANR	2051282	Argument	"""error: %s command failed with ProcD\\n"""		2051155	1					
ANR	2051283	PrimaryExpression	"""error: %s command failed with ProcD\\n"""		2051155	0					
ANR	2051284	Argument	argv [ 0 ]		2051155	2					
ANR	2051285	ArrayIndexing	argv [ 0 ]		2051155	0					
ANR	2051286	Identifier	argv		2051155	0					
ANR	2051287	PrimaryExpression	0		2051155	1					
ANR	2051288	ReturnStatement	return 1 ;	287:2:8508:8516	2051155	1	True				
ANR	2051289	PrimaryExpression	1		2051155	0					
ANR	2051290	ReturnStatement	return 0 ;	289:1:8522:8530	2051155	7	True				
ANR	2051291	PrimaryExpression	0		2051155	0					
ANR	2051292	ReturnType	static int		2051155	1					
ANR	2051293	Identifier	track_by_associated_cgroup		2051155	2					
ANR	2051294	ParameterList	"ProcFamilyClient & pfc , int argc , char * argv [ ]"		2051155	3					
ANR	2051295	Parameter	ProcFamilyClient & pfc	261:27:7891:7911	2051155	0	True				
ANR	2051296	ParameterType	ProcFamilyClient &		2051155	0					
ANR	2051297	Identifier	pfc		2051155	1					
ANR	2051298	Parameter	int argc	261:50:7914:7921	2051155	1	True				
ANR	2051299	ParameterType	int		2051155	0					
ANR	2051300	Identifier	argc		2051155	1					
ANR	2051301	Parameter	char * argv [ ]	261:60:7924:7935	2051155	2	True				
ANR	2051302	ParameterType	char * [ ]		2051155	0					
ANR	2051303	Identifier	argv		2051155	1					
ANR	2051304	CFGEntryNode	ENTRY		2051155		True				
ANR	2051305	CFGExitNode	EXIT		2051155		True				
ANR	2051306	Symbol	argc		2051155						
ANR	2051307	Symbol	atoi		2051155						
ANR	2051308	Symbol	pfc . track_family_via_cgroup		2051155						
ANR	2051309	Symbol	success		2051155						
ANR	2051310	Symbol	* argv		2051155						
ANR	2051311	Symbol	pid		2051155						
ANR	2051312	Symbol	pfc		2051155						
ANR	2051313	Symbol	stderr		2051155						
ANR	2051314	Symbol	cgroup		2051155						
ANR	2051315	Symbol	argv		2051155						
ANR	2051316	Function	dump	299:0:8715:9888							
ANR	2051317	FunctionDef	"dump (ProcFamilyClient & pfc , int argc , char * argv [ ])"		2051316	0					
ANR	2051318	CompoundStatement		301:0:8778:9888	2051316	0					
ANR	2051319	IfStatement	if ( argc > 2 )		2051316	0					
ANR	2051320	Condition	argc > 2	302:5:8785:8792	2051316	0	True				
ANR	2051321	RelationalExpression	argc > 2		2051316	0		>			
ANR	2051322	Identifier	argc		2051316	0					
ANR	2051323	PrimaryExpression	2		2051316	1					
ANR	2051324	CompoundStatement		2:15:16:16	2051316	1					
ANR	2051325	ExpressionStatement	"fprintf ( stderr , ""error: argument synopsis for %s: [<pid>]\\n"" , argv [ 0 ] )"	303:2:8799:8889	2051316	0	True				
ANR	2051326	CallExpression	"fprintf ( stderr , ""error: argument synopsis for %s: [<pid>]\\n"" , argv [ 0 ] )"		2051316	0					
ANR	2051327	Callee	fprintf		2051316	0					
ANR	2051328	Identifier	fprintf		2051316	0					
ANR	2051329	ArgumentList	stderr		2051316	1					
ANR	2051330	Argument	stderr		2051316	0					
ANR	2051331	Identifier	stderr		2051316	0					
ANR	2051332	Argument	"""error: argument synopsis for %s: [<pid>]\\n"""		2051316	1					
ANR	2051333	PrimaryExpression	"""error: argument synopsis for %s: [<pid>]\\n"""		2051316	0					
ANR	2051334	Argument	argv [ 0 ]		2051316	2					
ANR	2051335	ArrayIndexing	argv [ 0 ]		2051316	0					
ANR	2051336	Identifier	argv		2051316	0					
ANR	2051337	PrimaryExpression	0		2051316	1					
ANR	2051338	ReturnStatement	return 1 ;	306:2:8893:8901	2051316	1	True				
ANR	2051339	PrimaryExpression	1		2051316	0					
ANR	2051340	IdentifierDeclStatement	pid_t pid = 0 ;	308:1:8907:8920	2051316	1	True				
ANR	2051341	IdentifierDecl	pid = 0		2051316	0					
ANR	2051342	IdentifierDeclType	pid_t		2051316	0					
ANR	2051343	Identifier	pid		2051316	1					
ANR	2051344	AssignmentExpression	pid = 0		2051316	2		=			
ANR	2051345	Identifier	pid		2051316	0					
ANR	2051346	PrimaryExpression	0		2051316	1					
ANR	2051347	IfStatement	if ( argc == 2 )		2051316	2					
ANR	2051348	Condition	argc == 2	309:5:8927:8935	2051316	0	True				
ANR	2051349	EqualityExpression	argc == 2		2051316	0		==			
ANR	2051350	Identifier	argc		2051316	0					
ANR	2051351	PrimaryExpression	2		2051316	1					
ANR	2051352	CompoundStatement		9:16:159:159	2051316	1					
ANR	2051353	ExpressionStatement	pid = atoi ( argv [ 1 ] )	310:2:8942:8961	2051316	0	True				
ANR	2051354	AssignmentExpression	pid = atoi ( argv [ 1 ] )		2051316	0		=			
ANR	2051355	Identifier	pid		2051316	0					
ANR	2051356	CallExpression	atoi ( argv [ 1 ] )		2051316	1					
ANR	2051357	Callee	atoi		2051316	0					
ANR	2051358	Identifier	atoi		2051316	0					
ANR	2051359	ArgumentList	argv [ 1 ]		2051316	1					
ANR	2051360	Argument	argv [ 1 ]		2051316	0					
ANR	2051361	ArrayIndexing	argv [ 1 ]		2051316	0					
ANR	2051362	Identifier	argv		2051316	0					
ANR	2051363	PrimaryExpression	1		2051316	1					
ANR	2051364	IfStatement	if ( pid == 0 )		2051316	1					
ANR	2051365	Condition	pid == 0	311:6:8969:8976	2051316	0	True				
ANR	2051366	EqualityExpression	pid == 0		2051316	0		==			
ANR	2051367	Identifier	pid		2051316	0					
ANR	2051368	PrimaryExpression	0		2051316	1					
ANR	2051369	CompoundStatement		11:16:200:200	2051316	1					
ANR	2051370	ExpressionStatement	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 1 ] )"	312:3:8984:9036	2051316	0	True				
ANR	2051371	CallExpression	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 1 ] )"		2051316	0					
ANR	2051372	Callee	fprintf		2051316	0					
ANR	2051373	Identifier	fprintf		2051316	0					
ANR	2051374	ArgumentList	stderr		2051316	1					
ANR	2051375	Argument	stderr		2051316	0					
ANR	2051376	Identifier	stderr		2051316	0					
ANR	2051377	Argument	"""error: invalid pid: %s\\n"""		2051316	1					
ANR	2051378	PrimaryExpression	"""error: invalid pid: %s\\n"""		2051316	0					
ANR	2051379	Argument	argv [ 1 ]		2051316	2					
ANR	2051380	ArrayIndexing	argv [ 1 ]		2051316	0					
ANR	2051381	Identifier	argv		2051316	0					
ANR	2051382	PrimaryExpression	1		2051316	1					
ANR	2051383	ReturnStatement	return 1 ;	313:3:9041:9049	2051316	1	True				
ANR	2051384	PrimaryExpression	1		2051316	0					
ANR	2051385	IdentifierDeclStatement	bool response ;	317:1:9060:9073	2051316	3	True				
ANR	2051386	IdentifierDecl	response		2051316	0					
ANR	2051387	IdentifierDeclType	bool		2051316	0					
ANR	2051388	Identifier	response		2051316	1					
ANR	2051389	IdentifierDeclStatement	std :: vector < ProcFamilyDump > vec ;	318:1:9076:9107	2051316	4	True				
ANR	2051390	IdentifierDecl	vec		2051316	0					
ANR	2051391	IdentifierDeclType	std :: vector < ProcFamilyDump >		2051316	0					
ANR	2051392	Identifier	vec		2051316	1					
ANR	2051393	IfStatement	"if ( ! pfc . dump ( pid , response , vec ) )"		2051316	5					
ANR	2051394	Condition	"! pfc . dump ( pid , response , vec )"	319:5:9114:9142	2051316	0	True				
ANR	2051395	UnaryOperationExpression	"! pfc . dump ( pid , response , vec )"		2051316	0					
ANR	2051396	UnaryOperator	!		2051316	0					
ANR	2051397	CallExpression	"pfc . dump ( pid , response , vec )"		2051316	1					
ANR	2051398	Callee	pfc . dump		2051316	0					
ANR	2051399	MemberAccess	pfc . dump		2051316	0					
ANR	2051400	Identifier	pfc		2051316	0					
ANR	2051401	Identifier	dump		2051316	1					
ANR	2051402	ArgumentList	pid		2051316	1					
ANR	2051403	Argument	pid		2051316	0					
ANR	2051404	Identifier	pid		2051316	0					
ANR	2051405	Argument	response		2051316	1					
ANR	2051406	Identifier	response		2051316	0					
ANR	2051407	Argument	vec		2051316	2					
ANR	2051408	Identifier	vec		2051316	0					
ANR	2051409	CompoundStatement		19:36:366:366	2051316	1					
ANR	2051410	ExpressionStatement	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"	320:2:9149:9207	2051316	0	True				
ANR	2051411	CallExpression	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"		2051316	0					
ANR	2051412	Callee	fprintf		2051316	0					
ANR	2051413	Identifier	fprintf		2051316	0					
ANR	2051414	ArgumentList	stderr		2051316	1					
ANR	2051415	Argument	stderr		2051316	0					
ANR	2051416	Identifier	stderr		2051316	0					
ANR	2051417	Argument	"""error: communication error with ProcD\\n"""		2051316	1					
ANR	2051418	PrimaryExpression	"""error: communication error with ProcD\\n"""		2051316	0					
ANR	2051419	ReturnStatement	return 1 ;	321:2:9211:9219	2051316	1	True				
ANR	2051420	PrimaryExpression	1		2051316	0					
ANR	2051421	IfStatement	if ( ! response )		2051316	6					
ANR	2051422	Condition	! response	323:5:9229:9237	2051316	0	True				
ANR	2051423	UnaryOperationExpression	! response		2051316	0					
ANR	2051424	UnaryOperator	!		2051316	0					
ANR	2051425	Identifier	response		2051316	1					
ANR	2051426	CompoundStatement		23:16:461:461	2051316	1					
ANR	2051427	ExpressionStatement	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"	324:2:9244:9329	2051316	0	True				
ANR	2051428	CallExpression	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"		2051316	0					
ANR	2051429	Callee	fprintf		2051316	0					
ANR	2051430	Identifier	fprintf		2051316	0					
ANR	2051431	ArgumentList	stderr		2051316	1					
ANR	2051432	Argument	stderr		2051316	0					
ANR	2051433	Identifier	stderr		2051316	0					
ANR	2051434	Argument	"""error: %s command failed with ProcD\\n"""		2051316	1					
ANR	2051435	PrimaryExpression	"""error: %s command failed with ProcD\\n"""		2051316	0					
ANR	2051436	Argument	argv [ 0 ]		2051316	2					
ANR	2051437	ArrayIndexing	argv [ 0 ]		2051316	0					
ANR	2051438	Identifier	argv		2051316	0					
ANR	2051439	PrimaryExpression	0		2051316	1					
ANR	2051440	ReturnStatement	return 1 ;	327:2:9333:9341	2051316	1	True				
ANR	2051441	PrimaryExpression	1		2051316	0					
ANR	2051442	ForStatement	for ( size_t i = 0 ; i < vec . size ( ) ; ++ i )		2051316	7					
ANR	2051443	ForInit	size_t i = 0 ;	330:6:9353:9365	2051316	0	True				
ANR	2051444	IdentifierDeclStatement	size_t i = 0 ;		2051316	0					
ANR	2051445	IdentifierDecl	i = 0		2051316	0					
ANR	2051446	IdentifierDeclType	size_t		2051316	0					
ANR	2051447	Identifier	i		2051316	1					
ANR	2051448	AssignmentExpression	i = 0		2051316	2		=			
ANR	2051449	Identifier	i		2051316	0					
ANR	2051450	PrimaryExpression	0		2051316	1					
ANR	2051451	Condition	i < vec . size ( )	330:20:9367:9380	2051316	1	True				
ANR	2051452	RelationalExpression	i < vec . size ( )		2051316	0		<			
ANR	2051453	Identifier	i		2051316	0					
ANR	2051454	CallExpression	vec . size ( )		2051316	1					
ANR	2051455	Callee	vec . size		2051316	0					
ANR	2051456	MemberAccess	vec . size		2051316	0					
ANR	2051457	Identifier	vec		2051316	0					
ANR	2051458	Identifier	size		2051316	1					
ANR	2051459	ArgumentList			2051316	1					
ANR	2051460	UnaryExpression	++ i	330:36:9383:9385	2051316	2	True				
ANR	2051461	IncDec	++		2051316	0					
ANR	2051462	Identifier	i		2051316	1					
ANR	2051463	CompoundStatement		30:41:609:609	2051316	3					
ANR	2051464	ExpressionStatement	"printf ( ""%u %u %u %d\\n"" , ( unsigned ) vec [ i ] . parent_root , ( unsigned ) vec [ i ] . root_pid , ( unsigned ) vec [ i ] . watcher_pid , ( int ) vec [ i ] . procs . size ( ) )"	331:2:9392:9564	2051316	0	True				
ANR	2051465	CallExpression	"printf ( ""%u %u %u %d\\n"" , ( unsigned ) vec [ i ] . parent_root , ( unsigned ) vec [ i ] . root_pid , ( unsigned ) vec [ i ] . watcher_pid , ( int ) vec [ i ] . procs . size ( ) )"		2051316	0					
ANR	2051466	Callee	printf		2051316	0					
ANR	2051467	Identifier	printf		2051316	0					
ANR	2051468	ArgumentList	"""%u %u %u %d\\n"""		2051316	1					
ANR	2051469	Argument	"""%u %u %u %d\\n"""		2051316	0					
ANR	2051470	PrimaryExpression	"""%u %u %u %d\\n"""		2051316	0					
ANR	2051471	Argument	( unsigned ) vec [ i ] . parent_root		2051316	1					
ANR	2051472	CastExpression	( unsigned ) vec [ i ] . parent_root		2051316	0					
ANR	2051473	CastTarget	unsigned		2051316	0					
ANR	2051474	MemberAccess	vec [ i ] . parent_root		2051316	1					
ANR	2051475	ArrayIndexing	vec [ i ]		2051316	0					
ANR	2051476	Identifier	vec		2051316	0					
ANR	2051477	Identifier	i		2051316	1					
ANR	2051478	Identifier	parent_root		2051316	1					
ANR	2051479	Argument	( unsigned ) vec [ i ] . root_pid		2051316	2					
ANR	2051480	CastExpression	( unsigned ) vec [ i ] . root_pid		2051316	0					
ANR	2051481	CastTarget	unsigned		2051316	0					
ANR	2051482	MemberAccess	vec [ i ] . root_pid		2051316	1					
ANR	2051483	ArrayIndexing	vec [ i ]		2051316	0					
ANR	2051484	Identifier	vec		2051316	0					
ANR	2051485	Identifier	i		2051316	1					
ANR	2051486	Identifier	root_pid		2051316	1					
ANR	2051487	Argument	( unsigned ) vec [ i ] . watcher_pid		2051316	3					
ANR	2051488	CastExpression	( unsigned ) vec [ i ] . watcher_pid		2051316	0					
ANR	2051489	CastTarget	unsigned		2051316	0					
ANR	2051490	MemberAccess	vec [ i ] . watcher_pid		2051316	1					
ANR	2051491	ArrayIndexing	vec [ i ]		2051316	0					
ANR	2051492	Identifier	vec		2051316	0					
ANR	2051493	Identifier	i		2051316	1					
ANR	2051494	Identifier	watcher_pid		2051316	1					
ANR	2051495	Argument	( int ) vec [ i ] . procs . size ( )		2051316	4					
ANR	2051496	CastExpression	( int ) vec [ i ] . procs . size ( )		2051316	0					
ANR	2051497	CastTarget	int		2051316	0					
ANR	2051498	CallExpression	vec [ i ] . procs . size ( )		2051316	1					
ANR	2051499	Callee	vec [ i ] . procs . size		2051316	0					
ANR	2051500	MemberAccess	vec [ i ] . procs . size		2051316	0					
ANR	2051501	MemberAccess	vec [ i ] . procs		2051316	0					
ANR	2051502	ArrayIndexing	vec [ i ]		2051316	0					
ANR	2051503	Identifier	vec		2051316	0					
ANR	2051504	Identifier	i		2051316	1					
ANR	2051505	Identifier	procs		2051316	1					
ANR	2051506	Identifier	size		2051316	1					
ANR	2051507	ArgumentList			2051316	1					
ANR	2051508	ForStatement	for ( size_t j = 0 ; j < vec [ i ] . procs . size ( ) ; ++ j )		2051316	1					
ANR	2051509	ForInit	size_t j = 0 ;	336:7:9573:9585	2051316	0	True				
ANR	2051510	IdentifierDeclStatement	size_t j = 0 ;		2051316	0					
ANR	2051511	IdentifierDecl	j = 0		2051316	0					
ANR	2051512	IdentifierDeclType	size_t		2051316	0					
ANR	2051513	Identifier	j		2051316	1					
ANR	2051514	AssignmentExpression	j = 0		2051316	2		=			
ANR	2051515	Identifier	j		2051316	0					
ANR	2051516	PrimaryExpression	0		2051316	1					
ANR	2051517	Condition	j < vec [ i ] . procs . size ( )	336:21:9587:9609	2051316	1	True				
ANR	2051518	RelationalExpression	j < vec [ i ] . procs . size ( )		2051316	0		<			
ANR	2051519	Identifier	j		2051316	0					
ANR	2051520	CallExpression	vec [ i ] . procs . size ( )		2051316	1					
ANR	2051521	Callee	vec [ i ] . procs . size		2051316	0					
ANR	2051522	MemberAccess	vec [ i ] . procs . size		2051316	0					
ANR	2051523	MemberAccess	vec [ i ] . procs		2051316	0					
ANR	2051524	ArrayIndexing	vec [ i ]		2051316	0					
ANR	2051525	Identifier	vec		2051316	0					
ANR	2051526	Identifier	i		2051316	1					
ANR	2051527	Identifier	procs		2051316	1					
ANR	2051528	Identifier	size		2051316	1					
ANR	2051529	ArgumentList			2051316	1					
ANR	2051530	UnaryExpression	++ j	336:46:9612:9614	2051316	2	True				
ANR	2051531	IncDec	++		2051316	0					
ANR	2051532	Identifier	j		2051316	1					
ANR	2051533	CompoundStatement		36:51:838:838	2051316	3					
ANR	2051534	Statement	printf	337:3:9622:9627	2051316	0	True				
ANR	2051535	Statement	(	337:9:9628:9628	2051316	1	True				
ANR	2051536	Statement	"""%u %u """	337:10:9629:9636	2051316	2	True				
ANR	2051537	Statement	PROCAPI_BIRTHDAY_FORMAT	337:19:9638:9660	2051316	3	True				
ANR	2051538	Statement	""" %ld %ld\\n"""	337:43:9662:9673	2051316	4	True				
ANR	2051539	Statement	","	337:55:9674:9674	2051316	5	True				
ANR	2051540	Statement	(	338:10:9686:9686	2051316	6	True				
ANR	2051541	Statement	unsigned	338:11:9687:9694	2051316	7	True				
ANR	2051542	Statement	)	338:19:9695:9695	2051316	8	True				
ANR	2051543	Statement	vec	338:20:9696:9698	2051316	9	True				
ANR	2051544	Statement	[	338:23:9699:9699	2051316	10	True				
ANR	2051545	Statement	i	338:24:9700:9700	2051316	11	True				
ANR	2051546	Statement	]	338:25:9701:9701	2051316	12	True				
ANR	2051547	Statement	.	338:26:9702:9702	2051316	13	True				
ANR	2051548	Statement	procs	338:27:9703:9707	2051316	14	True				
ANR	2051549	Statement	[	338:32:9708:9708	2051316	15	True				
ANR	2051550	Statement	j	338:33:9709:9709	2051316	16	True				
ANR	2051551	Statement	]	338:34:9710:9710	2051316	17	True				
ANR	2051552	Statement	.	338:35:9711:9711	2051316	18	True				
ANR	2051553	Statement	pid	338:36:9712:9714	2051316	19	True				
ANR	2051554	Statement	","	338:39:9715:9715	2051316	20	True				
ANR	2051555	Statement	(	339:10:9727:9727	2051316	21	True				
ANR	2051556	Statement	unsigned	339:11:9728:9735	2051316	22	True				
ANR	2051557	Statement	)	339:19:9736:9736	2051316	23	True				
ANR	2051558	Statement	vec	339:20:9737:9739	2051316	24	True				
ANR	2051559	Statement	[	339:23:9740:9740	2051316	25	True				
ANR	2051560	Statement	i	339:24:9741:9741	2051316	26	True				
ANR	2051561	Statement	]	339:25:9742:9742	2051316	27	True				
ANR	2051562	Statement	.	339:26:9743:9743	2051316	28	True				
ANR	2051563	Statement	procs	339:27:9744:9748	2051316	29	True				
ANR	2051564	Statement	[	339:32:9749:9749	2051316	30	True				
ANR	2051565	Statement	j	339:33:9750:9750	2051316	31	True				
ANR	2051566	Statement	]	339:34:9751:9751	2051316	32	True				
ANR	2051567	Statement	.	339:35:9752:9752	2051316	33	True				
ANR	2051568	Statement	ppid	339:36:9753:9756	2051316	34	True				
ANR	2051569	Statement	","	339:40:9757:9757	2051316	35	True				
ANR	2051570	Statement	vec	340:10:9769:9771	2051316	36	True				
ANR	2051571	Statement	[	340:13:9772:9772	2051316	37	True				
ANR	2051572	Statement	i	340:14:9773:9773	2051316	38	True				
ANR	2051573	Statement	]	340:15:9774:9774	2051316	39	True				
ANR	2051574	Statement	.	340:16:9775:9775	2051316	40	True				
ANR	2051575	Statement	procs	340:17:9776:9780	2051316	41	True				
ANR	2051576	Statement	[	340:22:9781:9781	2051316	42	True				
ANR	2051577	Statement	j	340:23:9782:9782	2051316	43	True				
ANR	2051578	Statement	]	340:24:9783:9783	2051316	44	True				
ANR	2051579	Statement	.	340:25:9784:9784	2051316	45	True				
ANR	2051580	Statement	birthday	340:26:9785:9792	2051316	46	True				
ANR	2051581	Statement	","	340:34:9793:9793	2051316	47	True				
ANR	2051582	Statement	vec	341:10:9805:9807	2051316	48	True				
ANR	2051583	Statement	[	341:13:9808:9808	2051316	49	True				
ANR	2051584	Statement	i	341:14:9809:9809	2051316	50	True				
ANR	2051585	Statement	]	341:15:9810:9810	2051316	51	True				
ANR	2051586	Statement	.	341:16:9811:9811	2051316	52	True				
ANR	2051587	Statement	procs	341:17:9812:9816	2051316	53	True				
ANR	2051588	Statement	[	341:22:9817:9817	2051316	54	True				
ANR	2051589	Statement	j	341:23:9818:9818	2051316	55	True				
ANR	2051590	Statement	]	341:24:9819:9819	2051316	56	True				
ANR	2051591	Statement	.	341:25:9820:9820	2051316	57	True				
ANR	2051592	Statement	user_time	341:26:9821:9829	2051316	58	True				
ANR	2051593	Statement	","	341:35:9830:9830	2051316	59	True				
ANR	2051594	Statement	vec	342:10:9842:9844	2051316	60	True				
ANR	2051595	Statement	[	342:13:9845:9845	2051316	61	True				
ANR	2051596	Statement	i	342:14:9846:9846	2051316	62	True				
ANR	2051597	Statement	]	342:15:9847:9847	2051316	63	True				
ANR	2051598	Statement	.	342:16:9848:9848	2051316	64	True				
ANR	2051599	Statement	procs	342:17:9849:9853	2051316	65	True				
ANR	2051600	Statement	[	342:22:9854:9854	2051316	66	True				
ANR	2051601	Statement	j	342:23:9855:9855	2051316	67	True				
ANR	2051602	Statement	]	342:24:9856:9856	2051316	68	True				
ANR	2051603	Statement	.	342:25:9857:9857	2051316	69	True				
ANR	2051604	Statement	sys_time	342:26:9858:9865	2051316	70	True				
ANR	2051605	Statement	)	342:34:9866:9866	2051316	71	True				
ANR	2051606	ExpressionStatement		342:35:9867:9867	2051316	72	True				
ANR	2051607	ReturnStatement	return 0 ;	346:1:9878:9886	2051316	8	True				
ANR	2051608	PrimaryExpression	0		2051316	0					
ANR	2051609	ReturnType	static int		2051316	1					
ANR	2051610	Identifier	dump		2051316	2					
ANR	2051611	ParameterList	"ProcFamilyClient & pfc , int argc , char * argv [ ]"		2051316	3					
ANR	2051612	Parameter	ProcFamilyClient & pfc	300:5:8731:8751	2051316	0	True				
ANR	2051613	ParameterType	ProcFamilyClient &		2051316	0					
ANR	2051614	Identifier	pfc		2051316	1					
ANR	2051615	Parameter	int argc	300:28:8754:8761	2051316	1	True				
ANR	2051616	ParameterType	int		2051316	0					
ANR	2051617	Identifier	argc		2051316	1					
ANR	2051618	Parameter	char * argv [ ]	300:38:8764:8775	2051316	2	True				
ANR	2051619	ParameterType	char * [ ]		2051316	0					
ANR	2051620	Identifier	argv		2051316	1					
ANR	2051621	CFGEntryNode	ENTRY		2051316		True				
ANR	2051622	CFGExitNode	EXIT		2051316		True				
ANR	2051623	Symbol	argc		2051316						
ANR	2051624	Symbol	atoi		2051316						
ANR	2051625	Symbol	vec [ i ] . root_pid		2051316						
ANR	2051626	Symbol	i		2051316						
ANR	2051627	Symbol	* argv		2051316						
ANR	2051628	Symbol	pid		2051316						
ANR	2051629	Symbol	j		2051316						
ANR	2051630	Symbol	pfc . dump		2051316						
ANR	2051631	Symbol	vec [ i ] . procs		2051316						
ANR	2051632	Symbol	pfc		2051316						
ANR	2051633	Symbol	stderr		2051316						
ANR	2051634	Symbol	argv		2051316						
ANR	2051635	Symbol	vec . size		2051316						
ANR	2051636	Symbol	* i		2051316						
ANR	2051637	Symbol	vec		2051316						
ANR	2051638	Symbol	response		2051316						
ANR	2051639	Symbol	vec [ i ] . watcher_pid		2051316						
ANR	2051640	Symbol	vec [ i ] . parent_root		2051316						
ANR	2051641	Symbol	vec [ i ] . procs . size		2051316						
ANR	2051642	Symbol	* vec		2051316						
ANR	2051643	Function	list	349:0:9891:10940							
ANR	2051644	FunctionDef	"list (ProcFamilyClient & pfc , int argc , char * argv [ ])"		2051643	0					
ANR	2051645	CompoundStatement		351:0:9954:10940	2051643	0					
ANR	2051646	IfStatement	if ( argc > 2 )		2051643	0					
ANR	2051647	Condition	argc > 2	352:5:9961:9968	2051643	0	True				
ANR	2051648	RelationalExpression	argc > 2		2051643	0		>			
ANR	2051649	Identifier	argc		2051643	0					
ANR	2051650	PrimaryExpression	2		2051643	1					
ANR	2051651	CompoundStatement		2:15:16:16	2051643	1					
ANR	2051652	ExpressionStatement	"fprintf ( stderr , ""error: argument synopsis for %s: [<pid>]\\n"" , argv [ 0 ] )"	353:2:9975:10065	2051643	0	True				
ANR	2051653	CallExpression	"fprintf ( stderr , ""error: argument synopsis for %s: [<pid>]\\n"" , argv [ 0 ] )"		2051643	0					
ANR	2051654	Callee	fprintf		2051643	0					
ANR	2051655	Identifier	fprintf		2051643	0					
ANR	2051656	ArgumentList	stderr		2051643	1					
ANR	2051657	Argument	stderr		2051643	0					
ANR	2051658	Identifier	stderr		2051643	0					
ANR	2051659	Argument	"""error: argument synopsis for %s: [<pid>]\\n"""		2051643	1					
ANR	2051660	PrimaryExpression	"""error: argument synopsis for %s: [<pid>]\\n"""		2051643	0					
ANR	2051661	Argument	argv [ 0 ]		2051643	2					
ANR	2051662	ArrayIndexing	argv [ 0 ]		2051643	0					
ANR	2051663	Identifier	argv		2051643	0					
ANR	2051664	PrimaryExpression	0		2051643	1					
ANR	2051665	ReturnStatement	return 1 ;	356:2:10069:10077	2051643	1	True				
ANR	2051666	PrimaryExpression	1		2051643	0					
ANR	2051667	IdentifierDeclStatement	pid_t pid = 0 ;	358:1:10083:10096	2051643	1	True				
ANR	2051668	IdentifierDecl	pid = 0		2051643	0					
ANR	2051669	IdentifierDeclType	pid_t		2051643	0					
ANR	2051670	Identifier	pid		2051643	1					
ANR	2051671	AssignmentExpression	pid = 0		2051643	2		=			
ANR	2051672	Identifier	pid		2051643	0					
ANR	2051673	PrimaryExpression	0		2051643	1					
ANR	2051674	IfStatement	if ( argc == 2 )		2051643	2					
ANR	2051675	Condition	argc == 2	359:5:10103:10111	2051643	0	True				
ANR	2051676	EqualityExpression	argc == 2		2051643	0		==			
ANR	2051677	Identifier	argc		2051643	0					
ANR	2051678	PrimaryExpression	2		2051643	1					
ANR	2051679	CompoundStatement		9:16:159:159	2051643	1					
ANR	2051680	ExpressionStatement	pid = atoi ( argv [ 1 ] )	360:2:10118:10137	2051643	0	True				
ANR	2051681	AssignmentExpression	pid = atoi ( argv [ 1 ] )		2051643	0		=			
ANR	2051682	Identifier	pid		2051643	0					
ANR	2051683	CallExpression	atoi ( argv [ 1 ] )		2051643	1					
ANR	2051684	Callee	atoi		2051643	0					
ANR	2051685	Identifier	atoi		2051643	0					
ANR	2051686	ArgumentList	argv [ 1 ]		2051643	1					
ANR	2051687	Argument	argv [ 1 ]		2051643	0					
ANR	2051688	ArrayIndexing	argv [ 1 ]		2051643	0					
ANR	2051689	Identifier	argv		2051643	0					
ANR	2051690	PrimaryExpression	1		2051643	1					
ANR	2051691	IfStatement	if ( pid == 0 )		2051643	1					
ANR	2051692	Condition	pid == 0	361:6:10145:10152	2051643	0	True				
ANR	2051693	EqualityExpression	pid == 0		2051643	0		==			
ANR	2051694	Identifier	pid		2051643	0					
ANR	2051695	PrimaryExpression	0		2051643	1					
ANR	2051696	CompoundStatement		11:16:200:200	2051643	1					
ANR	2051697	ExpressionStatement	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 1 ] )"	362:3:10160:10212	2051643	0	True				
ANR	2051698	CallExpression	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 1 ] )"		2051643	0					
ANR	2051699	Callee	fprintf		2051643	0					
ANR	2051700	Identifier	fprintf		2051643	0					
ANR	2051701	ArgumentList	stderr		2051643	1					
ANR	2051702	Argument	stderr		2051643	0					
ANR	2051703	Identifier	stderr		2051643	0					
ANR	2051704	Argument	"""error: invalid pid: %s\\n"""		2051643	1					
ANR	2051705	PrimaryExpression	"""error: invalid pid: %s\\n"""		2051643	0					
ANR	2051706	Argument	argv [ 1 ]		2051643	2					
ANR	2051707	ArrayIndexing	argv [ 1 ]		2051643	0					
ANR	2051708	Identifier	argv		2051643	0					
ANR	2051709	PrimaryExpression	1		2051643	1					
ANR	2051710	ReturnStatement	return 1 ;	363:3:10217:10225	2051643	1	True				
ANR	2051711	PrimaryExpression	1		2051643	0					
ANR	2051712	IdentifierDeclStatement	bool response ;	367:1:10236:10249	2051643	3	True				
ANR	2051713	IdentifierDecl	response		2051643	0					
ANR	2051714	IdentifierDeclType	bool		2051643	0					
ANR	2051715	Identifier	response		2051643	1					
ANR	2051716	IdentifierDeclStatement	std :: vector < ProcFamilyDump > vec ;	368:1:10252:10283	2051643	4	True				
ANR	2051717	IdentifierDecl	vec		2051643	0					
ANR	2051718	IdentifierDeclType	std :: vector < ProcFamilyDump >		2051643	0					
ANR	2051719	Identifier	vec		2051643	1					
ANR	2051720	IfStatement	"if ( ! pfc . dump ( pid , response , vec ) )"		2051643	5					
ANR	2051721	Condition	"! pfc . dump ( pid , response , vec )"	369:5:10290:10318	2051643	0	True				
ANR	2051722	UnaryOperationExpression	"! pfc . dump ( pid , response , vec )"		2051643	0					
ANR	2051723	UnaryOperator	!		2051643	0					
ANR	2051724	CallExpression	"pfc . dump ( pid , response , vec )"		2051643	1					
ANR	2051725	Callee	pfc . dump		2051643	0					
ANR	2051726	MemberAccess	pfc . dump		2051643	0					
ANR	2051727	Identifier	pfc		2051643	0					
ANR	2051728	Identifier	dump		2051643	1					
ANR	2051729	ArgumentList	pid		2051643	1					
ANR	2051730	Argument	pid		2051643	0					
ANR	2051731	Identifier	pid		2051643	0					
ANR	2051732	Argument	response		2051643	1					
ANR	2051733	Identifier	response		2051643	0					
ANR	2051734	Argument	vec		2051643	2					
ANR	2051735	Identifier	vec		2051643	0					
ANR	2051736	CompoundStatement		19:36:366:366	2051643	1					
ANR	2051737	ExpressionStatement	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"	370:2:10325:10383	2051643	0	True				
ANR	2051738	CallExpression	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"		2051643	0					
ANR	2051739	Callee	fprintf		2051643	0					
ANR	2051740	Identifier	fprintf		2051643	0					
ANR	2051741	ArgumentList	stderr		2051643	1					
ANR	2051742	Argument	stderr		2051643	0					
ANR	2051743	Identifier	stderr		2051643	0					
ANR	2051744	Argument	"""error: communication error with ProcD\\n"""		2051643	1					
ANR	2051745	PrimaryExpression	"""error: communication error with ProcD\\n"""		2051643	0					
ANR	2051746	ReturnStatement	return 1 ;	371:2:10387:10395	2051643	1	True				
ANR	2051747	PrimaryExpression	1		2051643	0					
ANR	2051748	IfStatement	if ( ! response )		2051643	6					
ANR	2051749	Condition	! response	373:5:10405:10413	2051643	0	True				
ANR	2051750	UnaryOperationExpression	! response		2051643	0					
ANR	2051751	UnaryOperator	!		2051643	0					
ANR	2051752	Identifier	response		2051643	1					
ANR	2051753	CompoundStatement		23:16:461:461	2051643	1					
ANR	2051754	ExpressionStatement	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"	374:2:10420:10505	2051643	0	True				
ANR	2051755	CallExpression	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"		2051643	0					
ANR	2051756	Callee	fprintf		2051643	0					
ANR	2051757	Identifier	fprintf		2051643	0					
ANR	2051758	ArgumentList	stderr		2051643	1					
ANR	2051759	Argument	stderr		2051643	0					
ANR	2051760	Identifier	stderr		2051643	0					
ANR	2051761	Argument	"""error: %s command failed with ProcD\\n"""		2051643	1					
ANR	2051762	PrimaryExpression	"""error: %s command failed with ProcD\\n"""		2051643	0					
ANR	2051763	Argument	argv [ 0 ]		2051643	2					
ANR	2051764	ArrayIndexing	argv [ 0 ]		2051643	0					
ANR	2051765	Identifier	argv		2051643	0					
ANR	2051766	PrimaryExpression	0		2051643	1					
ANR	2051767	ReturnStatement	return 1 ;	377:2:10509:10517	2051643	1	True				
ANR	2051768	PrimaryExpression	1		2051643	0					
ANR	2051769	ExpressionStatement	"printf ( ""PID PPID START_TIME USER_TIME SYS_TIME\\n"" )"	380:1:10524:10574	2051643	7	True				
ANR	2051770	CallExpression	"printf ( ""PID PPID START_TIME USER_TIME SYS_TIME\\n"" )"		2051643	0					
ANR	2051771	Callee	printf		2051643	0					
ANR	2051772	Identifier	printf		2051643	0					
ANR	2051773	ArgumentList	"""PID PPID START_TIME USER_TIME SYS_TIME\\n"""		2051643	1					
ANR	2051774	Argument	"""PID PPID START_TIME USER_TIME SYS_TIME\\n"""		2051643	0					
ANR	2051775	PrimaryExpression	"""PID PPID START_TIME USER_TIME SYS_TIME\\n"""		2051643	0					
ANR	2051776	ForStatement	for ( size_t i = 0 ; i < vec . size ( ) ; ++ i )		2051643	8					
ANR	2051777	ForInit	size_t i = 0 ;	381:6:10582:10594	2051643	0	True				
ANR	2051778	IdentifierDeclStatement	size_t i = 0 ;		2051643	0					
ANR	2051779	IdentifierDecl	i = 0		2051643	0					
ANR	2051780	IdentifierDeclType	size_t		2051643	0					
ANR	2051781	Identifier	i		2051643	1					
ANR	2051782	AssignmentExpression	i = 0		2051643	2		=			
ANR	2051783	Identifier	i		2051643	0					
ANR	2051784	PrimaryExpression	0		2051643	1					
ANR	2051785	Condition	i < vec . size ( )	381:20:10596:10609	2051643	1	True				
ANR	2051786	RelationalExpression	i < vec . size ( )		2051643	0		<			
ANR	2051787	Identifier	i		2051643	0					
ANR	2051788	CallExpression	vec . size ( )		2051643	1					
ANR	2051789	Callee	vec . size		2051643	0					
ANR	2051790	MemberAccess	vec . size		2051643	0					
ANR	2051791	Identifier	vec		2051643	0					
ANR	2051792	Identifier	size		2051643	1					
ANR	2051793	ArgumentList			2051643	1					
ANR	2051794	UnaryExpression	++ i	381:36:10612:10614	2051643	2	True				
ANR	2051795	IncDec	++		2051643	0					
ANR	2051796	Identifier	i		2051643	1					
ANR	2051797	CompoundStatement		31:41:662:662	2051643	3					
ANR	2051798	ForStatement	for ( size_t j = 0 ; j < vec [ i ] . procs . size ( ) ; ++ j )		2051643	0					
ANR	2051799	ForInit	size_t j = 0 ;	382:7:10626:10638	2051643	0	True				
ANR	2051800	IdentifierDeclStatement	size_t j = 0 ;		2051643	0					
ANR	2051801	IdentifierDecl	j = 0		2051643	0					
ANR	2051802	IdentifierDeclType	size_t		2051643	0					
ANR	2051803	Identifier	j		2051643	1					
ANR	2051804	AssignmentExpression	j = 0		2051643	2		=			
ANR	2051805	Identifier	j		2051643	0					
ANR	2051806	PrimaryExpression	0		2051643	1					
ANR	2051807	Condition	j < vec [ i ] . procs . size ( )	382:21:10640:10662	2051643	1	True				
ANR	2051808	RelationalExpression	j < vec [ i ] . procs . size ( )		2051643	0		<			
ANR	2051809	Identifier	j		2051643	0					
ANR	2051810	CallExpression	vec [ i ] . procs . size ( )		2051643	1					
ANR	2051811	Callee	vec [ i ] . procs . size		2051643	0					
ANR	2051812	MemberAccess	vec [ i ] . procs . size		2051643	0					
ANR	2051813	MemberAccess	vec [ i ] . procs		2051643	0					
ANR	2051814	ArrayIndexing	vec [ i ]		2051643	0					
ANR	2051815	Identifier	vec		2051643	0					
ANR	2051816	Identifier	i		2051643	1					
ANR	2051817	Identifier	procs		2051643	1					
ANR	2051818	Identifier	size		2051643	1					
ANR	2051819	ArgumentList			2051643	1					
ANR	2051820	UnaryExpression	++ j	382:46:10665:10667	2051643	2	True				
ANR	2051821	IncDec	++		2051643	0					
ANR	2051822	Identifier	j		2051643	1					
ANR	2051823	CompoundStatement		32:51:715:715	2051643	3					
ANR	2051824	Statement	printf	383:3:10675:10680	2051643	0	True				
ANR	2051825	Statement	(	383:9:10681:10681	2051643	1	True				
ANR	2051826	Statement	"""%u %u """	383:10:10682:10689	2051643	2	True				
ANR	2051827	Statement	PROCAPI_BIRTHDAY_FORMAT	383:19:10691:10713	2051643	3	True				
ANR	2051828	Statement	""" %ld %ld\\n"""	383:43:10715:10726	2051643	4	True				
ANR	2051829	Statement	","	383:55:10727:10727	2051643	5	True				
ANR	2051830	Statement	(	384:10:10739:10739	2051643	6	True				
ANR	2051831	Statement	unsigned	384:11:10740:10747	2051643	7	True				
ANR	2051832	Statement	)	384:19:10748:10748	2051643	8	True				
ANR	2051833	Statement	vec	384:20:10749:10751	2051643	9	True				
ANR	2051834	Statement	[	384:23:10752:10752	2051643	10	True				
ANR	2051835	Statement	i	384:24:10753:10753	2051643	11	True				
ANR	2051836	Statement	]	384:25:10754:10754	2051643	12	True				
ANR	2051837	Statement	.	384:26:10755:10755	2051643	13	True				
ANR	2051838	Statement	procs	384:27:10756:10760	2051643	14	True				
ANR	2051839	Statement	[	384:32:10761:10761	2051643	15	True				
ANR	2051840	Statement	j	384:33:10762:10762	2051643	16	True				
ANR	2051841	Statement	]	384:34:10763:10763	2051643	17	True				
ANR	2051842	Statement	.	384:35:10764:10764	2051643	18	True				
ANR	2051843	Statement	pid	384:36:10765:10767	2051643	19	True				
ANR	2051844	Statement	","	384:39:10768:10768	2051643	20	True				
ANR	2051845	Statement	(	385:10:10780:10780	2051643	21	True				
ANR	2051846	Statement	unsigned	385:11:10781:10788	2051643	22	True				
ANR	2051847	Statement	)	385:19:10789:10789	2051643	23	True				
ANR	2051848	Statement	vec	385:20:10790:10792	2051643	24	True				
ANR	2051849	Statement	[	385:23:10793:10793	2051643	25	True				
ANR	2051850	Statement	i	385:24:10794:10794	2051643	26	True				
ANR	2051851	Statement	]	385:25:10795:10795	2051643	27	True				
ANR	2051852	Statement	.	385:26:10796:10796	2051643	28	True				
ANR	2051853	Statement	procs	385:27:10797:10801	2051643	29	True				
ANR	2051854	Statement	[	385:32:10802:10802	2051643	30	True				
ANR	2051855	Statement	j	385:33:10803:10803	2051643	31	True				
ANR	2051856	Statement	]	385:34:10804:10804	2051643	32	True				
ANR	2051857	Statement	.	385:35:10805:10805	2051643	33	True				
ANR	2051858	Statement	ppid	385:36:10806:10809	2051643	34	True				
ANR	2051859	Statement	","	385:40:10810:10810	2051643	35	True				
ANR	2051860	Statement	vec	386:10:10822:10824	2051643	36	True				
ANR	2051861	Statement	[	386:13:10825:10825	2051643	37	True				
ANR	2051862	Statement	i	386:14:10826:10826	2051643	38	True				
ANR	2051863	Statement	]	386:15:10827:10827	2051643	39	True				
ANR	2051864	Statement	.	386:16:10828:10828	2051643	40	True				
ANR	2051865	Statement	procs	386:17:10829:10833	2051643	41	True				
ANR	2051866	Statement	[	386:22:10834:10834	2051643	42	True				
ANR	2051867	Statement	j	386:23:10835:10835	2051643	43	True				
ANR	2051868	Statement	]	386:24:10836:10836	2051643	44	True				
ANR	2051869	Statement	.	386:25:10837:10837	2051643	45	True				
ANR	2051870	Statement	birthday	386:26:10838:10845	2051643	46	True				
ANR	2051871	Statement	","	386:34:10846:10846	2051643	47	True				
ANR	2051872	Statement	vec	387:10:10858:10860	2051643	48	True				
ANR	2051873	Statement	[	387:13:10861:10861	2051643	49	True				
ANR	2051874	Statement	i	387:14:10862:10862	2051643	50	True				
ANR	2051875	Statement	]	387:15:10863:10863	2051643	51	True				
ANR	2051876	Statement	.	387:16:10864:10864	2051643	52	True				
ANR	2051877	Statement	procs	387:17:10865:10869	2051643	53	True				
ANR	2051878	Statement	[	387:22:10870:10870	2051643	54	True				
ANR	2051879	Statement	j	387:23:10871:10871	2051643	55	True				
ANR	2051880	Statement	]	387:24:10872:10872	2051643	56	True				
ANR	2051881	Statement	.	387:25:10873:10873	2051643	57	True				
ANR	2051882	Statement	user_time	387:26:10874:10882	2051643	58	True				
ANR	2051883	Statement	","	387:35:10883:10883	2051643	59	True				
ANR	2051884	Statement	vec	388:10:10895:10897	2051643	60	True				
ANR	2051885	Statement	[	388:13:10898:10898	2051643	61	True				
ANR	2051886	Statement	i	388:14:10899:10899	2051643	62	True				
ANR	2051887	Statement	]	388:15:10900:10900	2051643	63	True				
ANR	2051888	Statement	.	388:16:10901:10901	2051643	64	True				
ANR	2051889	Statement	procs	388:17:10902:10906	2051643	65	True				
ANR	2051890	Statement	[	388:22:10907:10907	2051643	66	True				
ANR	2051891	Statement	j	388:23:10908:10908	2051643	67	True				
ANR	2051892	Statement	]	388:24:10909:10909	2051643	68	True				
ANR	2051893	Statement	.	388:25:10910:10910	2051643	69	True				
ANR	2051894	Statement	sys_time	388:26:10911:10918	2051643	70	True				
ANR	2051895	Statement	)	388:34:10919:10919	2051643	71	True				
ANR	2051896	ExpressionStatement		388:35:10920:10920	2051643	72	True				
ANR	2051897	ReturnStatement	return 0 ;	391:1:10930:10938	2051643	9	True				
ANR	2051898	PrimaryExpression	0		2051643	0					
ANR	2051899	ReturnType	static int		2051643	1					
ANR	2051900	Identifier	list		2051643	2					
ANR	2051901	ParameterList	"ProcFamilyClient & pfc , int argc , char * argv [ ]"		2051643	3					
ANR	2051902	Parameter	ProcFamilyClient & pfc	350:5:9907:9927	2051643	0	True				
ANR	2051903	ParameterType	ProcFamilyClient &		2051643	0					
ANR	2051904	Identifier	pfc		2051643	1					
ANR	2051905	Parameter	int argc	350:28:9930:9937	2051643	1	True				
ANR	2051906	ParameterType	int		2051643	0					
ANR	2051907	Identifier	argc		2051643	1					
ANR	2051908	Parameter	char * argv [ ]	350:38:9940:9951	2051643	2	True				
ANR	2051909	ParameterType	char * [ ]		2051643	0					
ANR	2051910	Identifier	argv		2051643	1					
ANR	2051911	CFGEntryNode	ENTRY		2051643		True				
ANR	2051912	CFGExitNode	EXIT		2051643		True				
ANR	2051913	Symbol	argc		2051643						
ANR	2051914	Symbol	atoi		2051643						
ANR	2051915	Symbol	i		2051643						
ANR	2051916	Symbol	* argv		2051643						
ANR	2051917	Symbol	pid		2051643						
ANR	2051918	Symbol	j		2051643						
ANR	2051919	Symbol	pfc . dump		2051643						
ANR	2051920	Symbol	vec [ i ] . procs		2051643						
ANR	2051921	Symbol	pfc		2051643						
ANR	2051922	Symbol	stderr		2051643						
ANR	2051923	Symbol	argv		2051643						
ANR	2051924	Symbol	vec . size		2051643						
ANR	2051925	Symbol	* i		2051643						
ANR	2051926	Symbol	vec		2051643						
ANR	2051927	Symbol	response		2051643						
ANR	2051928	Symbol	vec [ i ] . procs . size		2051643						
ANR	2051929	Symbol	* vec		2051643						
ANR	2051930	Function	get_usage	394:0:10943:12155							
ANR	2051931	FunctionDef	"get_usage (ProcFamilyClient & pfc , int argc , char * argv [ ])"		2051930	0					
ANR	2051932	CompoundStatement		396:0:11011:12155	2051930	0					
ANR	2051933	IfStatement	if ( argc > 2 )		2051930	0					
ANR	2051934	Condition	argc > 2	397:5:11018:11025	2051930	0	True				
ANR	2051935	RelationalExpression	argc > 2		2051930	0		>			
ANR	2051936	Identifier	argc		2051930	0					
ANR	2051937	PrimaryExpression	2		2051930	1					
ANR	2051938	CompoundStatement		2:15:16:16	2051930	1					
ANR	2051939	ExpressionStatement	"fprintf ( stderr , ""error: argument synopsis for %s: [<pid>]\\n"" , argv [ 0 ] )"	398:2:11032:11122	2051930	0	True				
ANR	2051940	CallExpression	"fprintf ( stderr , ""error: argument synopsis for %s: [<pid>]\\n"" , argv [ 0 ] )"		2051930	0					
ANR	2051941	Callee	fprintf		2051930	0					
ANR	2051942	Identifier	fprintf		2051930	0					
ANR	2051943	ArgumentList	stderr		2051930	1					
ANR	2051944	Argument	stderr		2051930	0					
ANR	2051945	Identifier	stderr		2051930	0					
ANR	2051946	Argument	"""error: argument synopsis for %s: [<pid>]\\n"""		2051930	1					
ANR	2051947	PrimaryExpression	"""error: argument synopsis for %s: [<pid>]\\n"""		2051930	0					
ANR	2051948	Argument	argv [ 0 ]		2051930	2					
ANR	2051949	ArrayIndexing	argv [ 0 ]		2051930	0					
ANR	2051950	Identifier	argv		2051930	0					
ANR	2051951	PrimaryExpression	0		2051930	1					
ANR	2051952	ReturnStatement	return 1 ;	401:2:11126:11134	2051930	1	True				
ANR	2051953	PrimaryExpression	1		2051930	0					
ANR	2051954	IdentifierDeclStatement	pid_t pid = 0 ;	403:1:11140:11153	2051930	1	True				
ANR	2051955	IdentifierDecl	pid = 0		2051930	0					
ANR	2051956	IdentifierDeclType	pid_t		2051930	0					
ANR	2051957	Identifier	pid		2051930	1					
ANR	2051958	AssignmentExpression	pid = 0		2051930	2		=			
ANR	2051959	Identifier	pid		2051930	0					
ANR	2051960	PrimaryExpression	0		2051930	1					
ANR	2051961	IfStatement	if ( argc == 2 )		2051930	2					
ANR	2051962	Condition	argc == 2	404:5:11160:11168	2051930	0	True				
ANR	2051963	EqualityExpression	argc == 2		2051930	0		==			
ANR	2051964	Identifier	argc		2051930	0					
ANR	2051965	PrimaryExpression	2		2051930	1					
ANR	2051966	CompoundStatement		9:16:159:159	2051930	1					
ANR	2051967	ExpressionStatement	pid = atoi ( argv [ 1 ] )	405:2:11175:11194	2051930	0	True				
ANR	2051968	AssignmentExpression	pid = atoi ( argv [ 1 ] )		2051930	0		=			
ANR	2051969	Identifier	pid		2051930	0					
ANR	2051970	CallExpression	atoi ( argv [ 1 ] )		2051930	1					
ANR	2051971	Callee	atoi		2051930	0					
ANR	2051972	Identifier	atoi		2051930	0					
ANR	2051973	ArgumentList	argv [ 1 ]		2051930	1					
ANR	2051974	Argument	argv [ 1 ]		2051930	0					
ANR	2051975	ArrayIndexing	argv [ 1 ]		2051930	0					
ANR	2051976	Identifier	argv		2051930	0					
ANR	2051977	PrimaryExpression	1		2051930	1					
ANR	2051978	IfStatement	if ( pid == 0 )		2051930	1					
ANR	2051979	Condition	pid == 0	406:6:11202:11209	2051930	0	True				
ANR	2051980	EqualityExpression	pid == 0		2051930	0		==			
ANR	2051981	Identifier	pid		2051930	0					
ANR	2051982	PrimaryExpression	0		2051930	1					
ANR	2051983	CompoundStatement		11:16:200:200	2051930	1					
ANR	2051984	ExpressionStatement	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 1 ] )"	407:3:11217:11269	2051930	0	True				
ANR	2051985	CallExpression	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 1 ] )"		2051930	0					
ANR	2051986	Callee	fprintf		2051930	0					
ANR	2051987	Identifier	fprintf		2051930	0					
ANR	2051988	ArgumentList	stderr		2051930	1					
ANR	2051989	Argument	stderr		2051930	0					
ANR	2051990	Identifier	stderr		2051930	0					
ANR	2051991	Argument	"""error: invalid pid: %s\\n"""		2051930	1					
ANR	2051992	PrimaryExpression	"""error: invalid pid: %s\\n"""		2051930	0					
ANR	2051993	Argument	argv [ 1 ]		2051930	2					
ANR	2051994	ArrayIndexing	argv [ 1 ]		2051930	0					
ANR	2051995	Identifier	argv		2051930	0					
ANR	2051996	PrimaryExpression	1		2051930	1					
ANR	2051997	ReturnStatement	return 1 ;	408:3:11274:11282	2051930	1	True				
ANR	2051998	PrimaryExpression	1		2051930	0					
ANR	2051999	IdentifierDeclStatement	ProcFamilyUsage pfu ;	411:1:11292:11311	2051930	3	True				
ANR	2052000	IdentifierDecl	pfu		2051930	0					
ANR	2052001	IdentifierDeclType	ProcFamilyUsage		2051930	0					
ANR	2052002	Identifier	pfu		2051930	1					
ANR	2052003	IdentifierDeclStatement	bool success ;	412:1:11314:11326	2051930	4	True				
ANR	2052004	IdentifierDecl	success		2051930	0					
ANR	2052005	IdentifierDeclType	bool		2051930	0					
ANR	2052006	Identifier	success		2051930	1					
ANR	2052007	IfStatement	"if ( ! pfc . get_usage ( pid , pfu , success ) )"		2051930	5					
ANR	2052008	Condition	"! pfc . get_usage ( pid , pfu , success )"	413:5:11333:11365	2051930	0	True				
ANR	2052009	UnaryOperationExpression	"! pfc . get_usage ( pid , pfu , success )"		2051930	0					
ANR	2052010	UnaryOperator	!		2051930	0					
ANR	2052011	CallExpression	"pfc . get_usage ( pid , pfu , success )"		2051930	1					
ANR	2052012	Callee	pfc . get_usage		2051930	0					
ANR	2052013	MemberAccess	pfc . get_usage		2051930	0					
ANR	2052014	Identifier	pfc		2051930	0					
ANR	2052015	Identifier	get_usage		2051930	1					
ANR	2052016	ArgumentList	pid		2051930	1					
ANR	2052017	Argument	pid		2051930	0					
ANR	2052018	Identifier	pid		2051930	0					
ANR	2052019	Argument	pfu		2051930	1					
ANR	2052020	Identifier	pfu		2051930	0					
ANR	2052021	Argument	success		2051930	2					
ANR	2052022	Identifier	success		2051930	0					
ANR	2052023	CompoundStatement		18:40:356:356	2051930	1					
ANR	2052024	ExpressionStatement	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"	414:1:11371:11429	2051930	0	True				
ANR	2052025	CallExpression	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"		2051930	0					
ANR	2052026	Callee	fprintf		2051930	0					
ANR	2052027	Identifier	fprintf		2051930	0					
ANR	2052028	ArgumentList	stderr		2051930	1					
ANR	2052029	Argument	stderr		2051930	0					
ANR	2052030	Identifier	stderr		2051930	0					
ANR	2052031	Argument	"""error: communication error with ProcD\\n"""		2051930	1					
ANR	2052032	PrimaryExpression	"""error: communication error with ProcD\\n"""		2051930	0					
ANR	2052033	ReturnStatement	return 1 ;	415:2:11433:11441	2051930	1	True				
ANR	2052034	PrimaryExpression	1		2051930	0					
ANR	2052035	IfStatement	if ( ! success )		2051930	6					
ANR	2052036	Condition	! success	417:5:11451:11458	2051930	0	True				
ANR	2052037	UnaryOperationExpression	! success		2051930	0					
ANR	2052038	UnaryOperator	!		2051930	0					
ANR	2052039	Identifier	success		2051930	1					
ANR	2052040	CompoundStatement		22:15:449:449	2051930	1					
ANR	2052041	ExpressionStatement	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"	418:2:11465:11550	2051930	0	True				
ANR	2052042	CallExpression	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"		2051930	0					
ANR	2052043	Callee	fprintf		2051930	0					
ANR	2052044	Identifier	fprintf		2051930	0					
ANR	2052045	ArgumentList	stderr		2051930	1					
ANR	2052046	Argument	stderr		2051930	0					
ANR	2052047	Identifier	stderr		2051930	0					
ANR	2052048	Argument	"""error: %s command failed with ProcD\\n"""		2051930	1					
ANR	2052049	PrimaryExpression	"""error: %s command failed with ProcD\\n"""		2051930	0					
ANR	2052050	Argument	argv [ 0 ]		2051930	2					
ANR	2052051	ArrayIndexing	argv [ 0 ]		2051930	0					
ANR	2052052	Identifier	argv		2051930	0					
ANR	2052053	PrimaryExpression	0		2051930	1					
ANR	2052054	ReturnStatement	return 1 ;	421:2:11554:11562	2051930	1	True				
ANR	2052055	PrimaryExpression	1		2051930	0					
ANR	2052056	ExpressionStatement	"printf ( ""Number of Processes: %d\\n"" , pfu . num_procs )"	423:1:11568:11618	2051930	7	True				
ANR	2052057	CallExpression	"printf ( ""Number of Processes: %d\\n"" , pfu . num_procs )"		2051930	0					
ANR	2052058	Callee	printf		2051930	0					
ANR	2052059	Identifier	printf		2051930	0					
ANR	2052060	ArgumentList	"""Number of Processes: %d\\n"""		2051930	1					
ANR	2052061	Argument	"""Number of Processes: %d\\n"""		2051930	0					
ANR	2052062	PrimaryExpression	"""Number of Processes: %d\\n"""		2051930	0					
ANR	2052063	Argument	pfu . num_procs		2051930	1					
ANR	2052064	MemberAccess	pfu . num_procs		2051930	0					
ANR	2052065	Identifier	pfu		2051930	0					
ANR	2052066	Identifier	num_procs		2051930	1					
ANR	2052067	ExpressionStatement	"printf ( ""User CPU Time (s): %ld\\n"" , pfu . user_cpu_time )"	424:1:11621:11674	2051930	8	True				
ANR	2052068	CallExpression	"printf ( ""User CPU Time (s): %ld\\n"" , pfu . user_cpu_time )"		2051930	0					
ANR	2052069	Callee	printf		2051930	0					
ANR	2052070	Identifier	printf		2051930	0					
ANR	2052071	ArgumentList	"""User CPU Time (s): %ld\\n"""		2051930	1					
ANR	2052072	Argument	"""User CPU Time (s): %ld\\n"""		2051930	0					
ANR	2052073	PrimaryExpression	"""User CPU Time (s): %ld\\n"""		2051930	0					
ANR	2052074	Argument	pfu . user_cpu_time		2051930	1					
ANR	2052075	MemberAccess	pfu . user_cpu_time		2051930	0					
ANR	2052076	Identifier	pfu		2051930	0					
ANR	2052077	Identifier	user_cpu_time		2051930	1					
ANR	2052078	ExpressionStatement	"printf ( ""System CPU Time (s): %ld\\n"" , pfu . sys_cpu_time )"	425:1:11677:11731	2051930	9	True				
ANR	2052079	CallExpression	"printf ( ""System CPU Time (s): %ld\\n"" , pfu . sys_cpu_time )"		2051930	0					
ANR	2052080	Callee	printf		2051930	0					
ANR	2052081	Identifier	printf		2051930	0					
ANR	2052082	ArgumentList	"""System CPU Time (s): %ld\\n"""		2051930	1					
ANR	2052083	Argument	"""System CPU Time (s): %ld\\n"""		2051930	0					
ANR	2052084	PrimaryExpression	"""System CPU Time (s): %ld\\n"""		2051930	0					
ANR	2052085	Argument	pfu . sys_cpu_time		2051930	1					
ANR	2052086	MemberAccess	pfu . sys_cpu_time		2051930	0					
ANR	2052087	Identifier	pfu		2051930	0					
ANR	2052088	Identifier	sys_cpu_time		2051930	1					
ANR	2052089	ExpressionStatement	"printf ( ""CPU Percentage (%%): %f\\n"" , pfu . percent_cpu )"	426:1:11734:11786	2051930	10	True				
ANR	2052090	CallExpression	"printf ( ""CPU Percentage (%%): %f\\n"" , pfu . percent_cpu )"		2051930	0					
ANR	2052091	Callee	printf		2051930	0					
ANR	2052092	Identifier	printf		2051930	0					
ANR	2052093	ArgumentList	"""CPU Percentage (%%): %f\\n"""		2051930	1					
ANR	2052094	Argument	"""CPU Percentage (%%): %f\\n"""		2051930	0					
ANR	2052095	PrimaryExpression	"""CPU Percentage (%%): %f\\n"""		2051930	0					
ANR	2052096	Argument	pfu . percent_cpu		2051930	1					
ANR	2052097	MemberAccess	pfu . percent_cpu		2051930	0					
ANR	2052098	Identifier	pfu		2051930	0					
ANR	2052099	Identifier	percent_cpu		2051930	1					
ANR	2052100	ExpressionStatement	"printf ( ""Maximum Image Size (KB): %lu\\n"" , pfu . max_image_size )"	427:1:11789:11849	2051930	11	True				
ANR	2052101	CallExpression	"printf ( ""Maximum Image Size (KB): %lu\\n"" , pfu . max_image_size )"		2051930	0					
ANR	2052102	Callee	printf		2051930	0					
ANR	2052103	Identifier	printf		2051930	0					
ANR	2052104	ArgumentList	"""Maximum Image Size (KB): %lu\\n"""		2051930	1					
ANR	2052105	Argument	"""Maximum Image Size (KB): %lu\\n"""		2051930	0					
ANR	2052106	PrimaryExpression	"""Maximum Image Size (KB): %lu\\n"""		2051930	0					
ANR	2052107	Argument	pfu . max_image_size		2051930	1					
ANR	2052108	MemberAccess	pfu . max_image_size		2051930	0					
ANR	2052109	Identifier	pfu		2051930	0					
ANR	2052110	Identifier	max_image_size		2051930	1					
ANR	2052111	ExpressionStatement	"printf ( ""Total Image Size(KB): %lu\\n"" , pfu . total_image_size )"	428:1:11852:11911	2051930	12	True				
ANR	2052112	CallExpression	"printf ( ""Total Image Size(KB): %lu\\n"" , pfu . total_image_size )"		2051930	0					
ANR	2052113	Callee	printf		2051930	0					
ANR	2052114	Identifier	printf		2051930	0					
ANR	2052115	ArgumentList	"""Total Image Size(KB): %lu\\n"""		2051930	1					
ANR	2052116	Argument	"""Total Image Size(KB): %lu\\n"""		2051930	0					
ANR	2052117	PrimaryExpression	"""Total Image Size(KB): %lu\\n"""		2051930	0					
ANR	2052118	Argument	pfu . total_image_size		2051930	1					
ANR	2052119	MemberAccess	pfu . total_image_size		2051930	0					
ANR	2052120	Identifier	pfu		2051930	0					
ANR	2052121	Identifier	total_image_size		2051930	1					
ANR	2052122	IfStatement	if ( pfu . block_read_bytes >= 0 )		2051930	13					
ANR	2052123	Condition	pfu . block_read_bytes >= 0	429:5:11918:11942	2051930	0	True				
ANR	2052124	RelationalExpression	pfu . block_read_bytes >= 0		2051930	0		>=			
ANR	2052125	MemberAccess	pfu . block_read_bytes		2051930	0					
ANR	2052126	Identifier	pfu		2051930	0					
ANR	2052127	Identifier	block_read_bytes		2051930	1					
ANR	2052128	PrimaryExpression	0		2051930	1					
ANR	2052129	ExpressionStatement	"printf ( ""Bytes read from block devices (KB): %lu\\n"" , pfu . block_read_bytes / 1024 )"	430:2:11947:12025	2051930	1	True				
ANR	2052130	CallExpression	"printf ( ""Bytes read from block devices (KB): %lu\\n"" , pfu . block_read_bytes / 1024 )"		2051930	0					
ANR	2052131	Callee	printf		2051930	0					
ANR	2052132	Identifier	printf		2051930	0					
ANR	2052133	ArgumentList	"""Bytes read from block devices (KB): %lu\\n"""		2051930	1					
ANR	2052134	Argument	"""Bytes read from block devices (KB): %lu\\n"""		2051930	0					
ANR	2052135	PrimaryExpression	"""Bytes read from block devices (KB): %lu\\n"""		2051930	0					
ANR	2052136	Argument	pfu . block_read_bytes / 1024		2051930	1					
ANR	2052137	MultiplicativeExpression	pfu . block_read_bytes / 1024		2051930	0		/			
ANR	2052138	MemberAccess	pfu . block_read_bytes		2051930	0					
ANR	2052139	Identifier	pfu		2051930	0					
ANR	2052140	Identifier	block_read_bytes		2051930	1					
ANR	2052141	PrimaryExpression	1024		2051930	1					
ANR	2052142	IfStatement	if ( pfu . block_write_bytes >= 0 )		2051930	14					
ANR	2052143	Condition	pfu . block_write_bytes >= 0	431:5:12032:12057	2051930	0	True				
ANR	2052144	RelationalExpression	pfu . block_write_bytes >= 0		2051930	0		>=			
ANR	2052145	MemberAccess	pfu . block_write_bytes		2051930	0					
ANR	2052146	Identifier	pfu		2051930	0					
ANR	2052147	Identifier	block_write_bytes		2051930	1					
ANR	2052148	PrimaryExpression	0		2051930	1					
ANR	2052149	ExpressionStatement	"printf ( ""Bytes written to block devices (KB): %lu\\n"" , pfu . block_write_bytes / 1024 )"	432:2:12062:12142	2051930	1	True				
ANR	2052150	CallExpression	"printf ( ""Bytes written to block devices (KB): %lu\\n"" , pfu . block_write_bytes / 1024 )"		2051930	0					
ANR	2052151	Callee	printf		2051930	0					
ANR	2052152	Identifier	printf		2051930	0					
ANR	2052153	ArgumentList	"""Bytes written to block devices (KB): %lu\\n"""		2051930	1					
ANR	2052154	Argument	"""Bytes written to block devices (KB): %lu\\n"""		2051930	0					
ANR	2052155	PrimaryExpression	"""Bytes written to block devices (KB): %lu\\n"""		2051930	0					
ANR	2052156	Argument	pfu . block_write_bytes / 1024		2051930	1					
ANR	2052157	MultiplicativeExpression	pfu . block_write_bytes / 1024		2051930	0		/			
ANR	2052158	MemberAccess	pfu . block_write_bytes		2051930	0					
ANR	2052159	Identifier	pfu		2051930	0					
ANR	2052160	Identifier	block_write_bytes		2051930	1					
ANR	2052161	PrimaryExpression	1024		2051930	1					
ANR	2052162	ReturnStatement	return 0 ;	433:1:12145:12153	2051930	15	True				
ANR	2052163	PrimaryExpression	0		2051930	0					
ANR	2052164	ReturnType	static int		2051930	1					
ANR	2052165	Identifier	get_usage		2051930	2					
ANR	2052166	ParameterList	"ProcFamilyClient & pfc , int argc , char * argv [ ]"		2051930	3					
ANR	2052167	Parameter	ProcFamilyClient & pfc	395:10:10964:10984	2051930	0	True				
ANR	2052168	ParameterType	ProcFamilyClient &		2051930	0					
ANR	2052169	Identifier	pfc		2051930	1					
ANR	2052170	Parameter	int argc	395:33:10987:10994	2051930	1	True				
ANR	2052171	ParameterType	int		2051930	0					
ANR	2052172	Identifier	argc		2051930	1					
ANR	2052173	Parameter	char * argv [ ]	395:43:10997:11008	2051930	2	True				
ANR	2052174	ParameterType	char * [ ]		2051930	0					
ANR	2052175	Identifier	argv		2051930	1					
ANR	2052176	CFGEntryNode	ENTRY		2051930		True				
ANR	2052177	CFGExitNode	EXIT		2051930		True				
ANR	2052178	Symbol	argc		2051930						
ANR	2052179	Symbol	atoi		2051930						
ANR	2052180	Symbol	pfu . percent_cpu		2051930						
ANR	2052181	Symbol	pfu . max_image_size		2051930						
ANR	2052182	Symbol	pfu . total_image_size		2051930						
ANR	2052183	Symbol	* argv		2051930						
ANR	2052184	Symbol	pid		2051930						
ANR	2052185	Symbol	pfu . sys_cpu_time		2051930						
ANR	2052186	Symbol	pfc . get_usage		2051930						
ANR	2052187	Symbol	pfu . block_write_bytes		2051930						
ANR	2052188	Symbol	pfc		2051930						
ANR	2052189	Symbol	stderr		2051930						
ANR	2052190	Symbol	argv		2051930						
ANR	2052191	Symbol	pfu . block_read_bytes		2051930						
ANR	2052192	Symbol	success		2051930						
ANR	2052193	Symbol	pfu . user_cpu_time		2051930						
ANR	2052194	Symbol	pfu		2051930						
ANR	2052195	Symbol	pfu . num_procs		2051930						
ANR	2052196	Function	signal_process	436:0:12158:12921							
ANR	2052197	FunctionDef	"signal_process (ProcFamilyClient & pfc , int argc , char * argv [ ])"		2052196	0					
ANR	2052198	CompoundStatement		438:0:12224:12921	2052196	0					
ANR	2052199	IfStatement	if ( ( argc != 2 ) && ( argc != 3 ) )		2052196	0					
ANR	2052200	Condition	( argc != 2 ) && ( argc != 3 )	439:5:12231:12256	2052196	0	True				
ANR	2052201	AndExpression	( argc != 2 ) && ( argc != 3 )		2052196	0		&&			
ANR	2052202	EqualityExpression	argc != 2		2052196	0		!=			
ANR	2052203	Identifier	argc		2052196	0					
ANR	2052204	PrimaryExpression	2		2052196	1					
ANR	2052205	EqualityExpression	argc != 3		2052196	1		!=			
ANR	2052206	Identifier	argc		2052196	0					
ANR	2052207	PrimaryExpression	3		2052196	1					
ANR	2052208	CompoundStatement		2:33:34:34	2052196	1					
ANR	2052209	ExpressionStatement	"fprintf ( stderr , ""error: argument synopsis for %s: <signal> [<pid>]\\n"" , argv [ 0 ] )"	440:2:12263:12362	2052196	0	True				
ANR	2052210	CallExpression	"fprintf ( stderr , ""error: argument synopsis for %s: <signal> [<pid>]\\n"" , argv [ 0 ] )"		2052196	0					
ANR	2052211	Callee	fprintf		2052196	0					
ANR	2052212	Identifier	fprintf		2052196	0					
ANR	2052213	ArgumentList	stderr		2052196	1					
ANR	2052214	Argument	stderr		2052196	0					
ANR	2052215	Identifier	stderr		2052196	0					
ANR	2052216	Argument	"""error: argument synopsis for %s: <signal> [<pid>]\\n"""		2052196	1					
ANR	2052217	PrimaryExpression	"""error: argument synopsis for %s: <signal> [<pid>]\\n"""		2052196	0					
ANR	2052218	Argument	argv [ 0 ]		2052196	2					
ANR	2052219	ArrayIndexing	argv [ 0 ]		2052196	0					
ANR	2052220	Identifier	argv		2052196	0					
ANR	2052221	PrimaryExpression	0		2052196	1					
ANR	2052222	ReturnStatement	return 1 ;	443:2:12366:12374	2052196	1	True				
ANR	2052223	PrimaryExpression	1		2052196	0					
ANR	2052224	IdentifierDeclStatement	int signal = atoi ( argv [ 1 ] ) ;	445:1:12380:12406	2052196	1	True				
ANR	2052225	IdentifierDecl	signal = atoi ( argv [ 1 ] )		2052196	0					
ANR	2052226	IdentifierDeclType	int		2052196	0					
ANR	2052227	Identifier	signal		2052196	1					
ANR	2052228	AssignmentExpression	signal = atoi ( argv [ 1 ] )		2052196	2		=			
ANR	2052229	Identifier	signal		2052196	0					
ANR	2052230	CallExpression	atoi ( argv [ 1 ] )		2052196	1					
ANR	2052231	Callee	atoi		2052196	0					
ANR	2052232	Identifier	atoi		2052196	0					
ANR	2052233	ArgumentList	argv [ 1 ]		2052196	1					
ANR	2052234	Argument	argv [ 1 ]		2052196	0					
ANR	2052235	ArrayIndexing	argv [ 1 ]		2052196	0					
ANR	2052236	Identifier	argv		2052196	0					
ANR	2052237	PrimaryExpression	1		2052196	1					
ANR	2052238	IfStatement	if ( signal == 0 )		2052196	2					
ANR	2052239	Condition	signal == 0	446:5:12413:12423	2052196	0	True				
ANR	2052240	EqualityExpression	signal == 0		2052196	0		==			
ANR	2052241	Identifier	signal		2052196	0					
ANR	2052242	PrimaryExpression	0		2052196	1					
ANR	2052243	CompoundStatement		9:18:201:201	2052196	1					
ANR	2052244	ExpressionStatement	"fprintf ( stderr , ""invalid signal: %s\\n"" , argv [ 1 ] )"	447:2:12430:12478	2052196	0	True				
ANR	2052245	CallExpression	"fprintf ( stderr , ""invalid signal: %s\\n"" , argv [ 1 ] )"		2052196	0					
ANR	2052246	Callee	fprintf		2052196	0					
ANR	2052247	Identifier	fprintf		2052196	0					
ANR	2052248	ArgumentList	stderr		2052196	1					
ANR	2052249	Argument	stderr		2052196	0					
ANR	2052250	Identifier	stderr		2052196	0					
ANR	2052251	Argument	"""invalid signal: %s\\n"""		2052196	1					
ANR	2052252	PrimaryExpression	"""invalid signal: %s\\n"""		2052196	0					
ANR	2052253	Argument	argv [ 1 ]		2052196	2					
ANR	2052254	ArrayIndexing	argv [ 1 ]		2052196	0					
ANR	2052255	Identifier	argv		2052196	0					
ANR	2052256	PrimaryExpression	1		2052196	1					
ANR	2052257	ReturnStatement	return 1 ;	448:2:12482:12490	2052196	1	True				
ANR	2052258	PrimaryExpression	1		2052196	0					
ANR	2052259	IdentifierDeclStatement	pid_t pid = 0 ;	450:1:12496:12509	2052196	3	True				
ANR	2052260	IdentifierDecl	pid = 0		2052196	0					
ANR	2052261	IdentifierDeclType	pid_t		2052196	0					
ANR	2052262	Identifier	pid		2052196	1					
ANR	2052263	AssignmentExpression	pid = 0		2052196	2		=			
ANR	2052264	Identifier	pid		2052196	0					
ANR	2052265	PrimaryExpression	0		2052196	1					
ANR	2052266	IfStatement	if ( argc == 3 )		2052196	4					
ANR	2052267	Condition	argc == 3	451:5:12516:12524	2052196	0	True				
ANR	2052268	EqualityExpression	argc == 3		2052196	0		==			
ANR	2052269	Identifier	argc		2052196	0					
ANR	2052270	PrimaryExpression	3		2052196	1					
ANR	2052271	CompoundStatement		14:16:302:302	2052196	1					
ANR	2052272	ExpressionStatement	pid = atoi ( argv [ 2 ] )	452:2:12531:12550	2052196	0	True				
ANR	2052273	AssignmentExpression	pid = atoi ( argv [ 2 ] )		2052196	0		=			
ANR	2052274	Identifier	pid		2052196	0					
ANR	2052275	CallExpression	atoi ( argv [ 2 ] )		2052196	1					
ANR	2052276	Callee	atoi		2052196	0					
ANR	2052277	Identifier	atoi		2052196	0					
ANR	2052278	ArgumentList	argv [ 2 ]		2052196	1					
ANR	2052279	Argument	argv [ 2 ]		2052196	0					
ANR	2052280	ArrayIndexing	argv [ 2 ]		2052196	0					
ANR	2052281	Identifier	argv		2052196	0					
ANR	2052282	PrimaryExpression	2		2052196	1					
ANR	2052283	IfStatement	if ( pid == 0 )		2052196	1					
ANR	2052284	Condition	pid == 0	453:6:12558:12565	2052196	0	True				
ANR	2052285	EqualityExpression	pid == 0		2052196	0		==			
ANR	2052286	Identifier	pid		2052196	0					
ANR	2052287	PrimaryExpression	0		2052196	1					
ANR	2052288	CompoundStatement		16:16:343:343	2052196	1					
ANR	2052289	ExpressionStatement	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 2 ] )"	454:3:12573:12625	2052196	0	True				
ANR	2052290	CallExpression	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 2 ] )"		2052196	0					
ANR	2052291	Callee	fprintf		2052196	0					
ANR	2052292	Identifier	fprintf		2052196	0					
ANR	2052293	ArgumentList	stderr		2052196	1					
ANR	2052294	Argument	stderr		2052196	0					
ANR	2052295	Identifier	stderr		2052196	0					
ANR	2052296	Argument	"""error: invalid pid: %s\\n"""		2052196	1					
ANR	2052297	PrimaryExpression	"""error: invalid pid: %s\\n"""		2052196	0					
ANR	2052298	Argument	argv [ 2 ]		2052196	2					
ANR	2052299	ArrayIndexing	argv [ 2 ]		2052196	0					
ANR	2052300	Identifier	argv		2052196	0					
ANR	2052301	PrimaryExpression	2		2052196	1					
ANR	2052302	ReturnStatement	return 1 ;	455:3:12630:12638	2052196	1	True				
ANR	2052303	PrimaryExpression	1		2052196	0					
ANR	2052304	IdentifierDeclStatement	bool success ;	458:1:12648:12660	2052196	5	True				
ANR	2052305	IdentifierDecl	success		2052196	0					
ANR	2052306	IdentifierDeclType	bool		2052196	0					
ANR	2052307	Identifier	success		2052196	1					
ANR	2052308	IfStatement	"if ( ! pfc . signal_process ( pid , signal , success ) )"		2052196	6					
ANR	2052309	Condition	"! pfc . signal_process ( pid , signal , success )"	459:5:12667:12707	2052196	0	True				
ANR	2052310	UnaryOperationExpression	"! pfc . signal_process ( pid , signal , success )"		2052196	0					
ANR	2052311	UnaryOperator	!		2052196	0					
ANR	2052312	CallExpression	"pfc . signal_process ( pid , signal , success )"		2052196	1					
ANR	2052313	Callee	pfc . signal_process		2052196	0					
ANR	2052314	MemberAccess	pfc . signal_process		2052196	0					
ANR	2052315	Identifier	pfc		2052196	0					
ANR	2052316	Identifier	signal_process		2052196	1					
ANR	2052317	ArgumentList	pid		2052196	1					
ANR	2052318	Argument	pid		2052196	0					
ANR	2052319	Identifier	pid		2052196	0					
ANR	2052320	Argument	signal		2052196	1					
ANR	2052321	Identifier	signal		2052196	0					
ANR	2052322	Argument	success		2052196	2					
ANR	2052323	Identifier	success		2052196	0					
ANR	2052324	CompoundStatement		22:48:485:485	2052196	1					
ANR	2052325	ExpressionStatement	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"	460:2:12714:12772	2052196	0	True				
ANR	2052326	CallExpression	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"		2052196	0					
ANR	2052327	Callee	fprintf		2052196	0					
ANR	2052328	Identifier	fprintf		2052196	0					
ANR	2052329	ArgumentList	stderr		2052196	1					
ANR	2052330	Argument	stderr		2052196	0					
ANR	2052331	Identifier	stderr		2052196	0					
ANR	2052332	Argument	"""error: communication error with ProcD\\n"""		2052196	1					
ANR	2052333	PrimaryExpression	"""error: communication error with ProcD\\n"""		2052196	0					
ANR	2052334	ReturnStatement	return 1 ;	461:2:12776:12784	2052196	1	True				
ANR	2052335	PrimaryExpression	1		2052196	0					
ANR	2052336	IfStatement	if ( ! success )		2052196	7					
ANR	2052337	Condition	! success	463:5:12794:12801	2052196	0	True				
ANR	2052338	UnaryOperationExpression	! success		2052196	0					
ANR	2052339	UnaryOperator	!		2052196	0					
ANR	2052340	Identifier	success		2052196	1					
ANR	2052341	CompoundStatement		26:15:579:579	2052196	1					
ANR	2052342	ExpressionStatement	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"	464:2:12808:12893	2052196	0	True				
ANR	2052343	CallExpression	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"		2052196	0					
ANR	2052344	Callee	fprintf		2052196	0					
ANR	2052345	Identifier	fprintf		2052196	0					
ANR	2052346	ArgumentList	stderr		2052196	1					
ANR	2052347	Argument	stderr		2052196	0					
ANR	2052348	Identifier	stderr		2052196	0					
ANR	2052349	Argument	"""error: %s command failed with ProcD\\n"""		2052196	1					
ANR	2052350	PrimaryExpression	"""error: %s command failed with ProcD\\n"""		2052196	0					
ANR	2052351	Argument	argv [ 0 ]		2052196	2					
ANR	2052352	ArrayIndexing	argv [ 0 ]		2052196	0					
ANR	2052353	Identifier	argv		2052196	0					
ANR	2052354	PrimaryExpression	0		2052196	1					
ANR	2052355	ReturnStatement	return 1 ;	467:2:12897:12905	2052196	1	True				
ANR	2052356	PrimaryExpression	1		2052196	0					
ANR	2052357	ReturnStatement	return 0 ;	469:1:12911:12919	2052196	8	True				
ANR	2052358	PrimaryExpression	0		2052196	0					
ANR	2052359	ReturnType	int		2052196	1					
ANR	2052360	Identifier	signal_process		2052196	2					
ANR	2052361	ParameterList	"ProcFamilyClient & pfc , int argc , char * argv [ ]"		2052196	3					
ANR	2052362	Parameter	ProcFamilyClient & pfc	437:15:12177:12197	2052196	0	True				
ANR	2052363	ParameterType	ProcFamilyClient &		2052196	0					
ANR	2052364	Identifier	pfc		2052196	1					
ANR	2052365	Parameter	int argc	437:38:12200:12207	2052196	1	True				
ANR	2052366	ParameterType	int		2052196	0					
ANR	2052367	Identifier	argc		2052196	1					
ANR	2052368	Parameter	char * argv [ ]	437:48:12210:12221	2052196	2	True				
ANR	2052369	ParameterType	char * [ ]		2052196	0					
ANR	2052370	Identifier	argv		2052196	1					
ANR	2052371	CFGEntryNode	ENTRY		2052196		True				
ANR	2052372	CFGExitNode	EXIT		2052196		True				
ANR	2052373	Symbol	argc		2052196						
ANR	2052374	Symbol	atoi		2052196						
ANR	2052375	Symbol	success		2052196						
ANR	2052376	Symbol	* argv		2052196						
ANR	2052377	Symbol	pid		2052196						
ANR	2052378	Symbol	pfc . signal_process		2052196						
ANR	2052379	Symbol	pfc		2052196						
ANR	2052380	Symbol	stderr		2052196						
ANR	2052381	Symbol	argv		2052196						
ANR	2052382	Symbol	signal		2052196						
ANR	2052383	Function	suspend_family	472:0:12924:13536							
ANR	2052384	FunctionDef	"suspend_family (ProcFamilyClient & pfc , int argc , char * argv [ ])"		2052383	0					
ANR	2052385	CompoundStatement		474:0:12990:13536	2052383	0					
ANR	2052386	IfStatement	if ( argc > 2 )		2052383	0					
ANR	2052387	Condition	argc > 2	475:5:12997:13004	2052383	0	True				
ANR	2052388	RelationalExpression	argc > 2		2052383	0		>			
ANR	2052389	Identifier	argc		2052383	0					
ANR	2052390	PrimaryExpression	2		2052383	1					
ANR	2052391	CompoundStatement		2:15:16:16	2052383	1					
ANR	2052392	ExpressionStatement	"fprintf ( stderr , ""error: argument synopsis for %s: [<pid>]\\n"" , argv [ 0 ] )"	476:2:13011:13101	2052383	0	True				
ANR	2052393	CallExpression	"fprintf ( stderr , ""error: argument synopsis for %s: [<pid>]\\n"" , argv [ 0 ] )"		2052383	0					
ANR	2052394	Callee	fprintf		2052383	0					
ANR	2052395	Identifier	fprintf		2052383	0					
ANR	2052396	ArgumentList	stderr		2052383	1					
ANR	2052397	Argument	stderr		2052383	0					
ANR	2052398	Identifier	stderr		2052383	0					
ANR	2052399	Argument	"""error: argument synopsis for %s: [<pid>]\\n"""		2052383	1					
ANR	2052400	PrimaryExpression	"""error: argument synopsis for %s: [<pid>]\\n"""		2052383	0					
ANR	2052401	Argument	argv [ 0 ]		2052383	2					
ANR	2052402	ArrayIndexing	argv [ 0 ]		2052383	0					
ANR	2052403	Identifier	argv		2052383	0					
ANR	2052404	PrimaryExpression	0		2052383	1					
ANR	2052405	ReturnStatement	return 1 ;	479:2:13105:13113	2052383	1	True				
ANR	2052406	PrimaryExpression	1		2052383	0					
ANR	2052407	IdentifierDeclStatement	pid_t pid = 0 ;	481:1:13119:13132	2052383	1	True				
ANR	2052408	IdentifierDecl	pid = 0		2052383	0					
ANR	2052409	IdentifierDeclType	pid_t		2052383	0					
ANR	2052410	Identifier	pid		2052383	1					
ANR	2052411	AssignmentExpression	pid = 0		2052383	2		=			
ANR	2052412	Identifier	pid		2052383	0					
ANR	2052413	PrimaryExpression	0		2052383	1					
ANR	2052414	IfStatement	if ( argc == 2 )		2052383	2					
ANR	2052415	Condition	argc == 2	482:5:13139:13147	2052383	0	True				
ANR	2052416	EqualityExpression	argc == 2		2052383	0		==			
ANR	2052417	Identifier	argc		2052383	0					
ANR	2052418	PrimaryExpression	2		2052383	1					
ANR	2052419	CompoundStatement		9:16:159:159	2052383	1					
ANR	2052420	ExpressionStatement	pid = atoi ( argv [ 1 ] )	483:2:13154:13173	2052383	0	True				
ANR	2052421	AssignmentExpression	pid = atoi ( argv [ 1 ] )		2052383	0		=			
ANR	2052422	Identifier	pid		2052383	0					
ANR	2052423	CallExpression	atoi ( argv [ 1 ] )		2052383	1					
ANR	2052424	Callee	atoi		2052383	0					
ANR	2052425	Identifier	atoi		2052383	0					
ANR	2052426	ArgumentList	argv [ 1 ]		2052383	1					
ANR	2052427	Argument	argv [ 1 ]		2052383	0					
ANR	2052428	ArrayIndexing	argv [ 1 ]		2052383	0					
ANR	2052429	Identifier	argv		2052383	0					
ANR	2052430	PrimaryExpression	1		2052383	1					
ANR	2052431	IfStatement	if ( pid == 0 )		2052383	1					
ANR	2052432	Condition	pid == 0	484:6:13181:13188	2052383	0	True				
ANR	2052433	EqualityExpression	pid == 0		2052383	0		==			
ANR	2052434	Identifier	pid		2052383	0					
ANR	2052435	PrimaryExpression	0		2052383	1					
ANR	2052436	CompoundStatement		11:16:200:200	2052383	1					
ANR	2052437	ExpressionStatement	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 1 ] )"	485:3:13196:13248	2052383	0	True				
ANR	2052438	CallExpression	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 1 ] )"		2052383	0					
ANR	2052439	Callee	fprintf		2052383	0					
ANR	2052440	Identifier	fprintf		2052383	0					
ANR	2052441	ArgumentList	stderr		2052383	1					
ANR	2052442	Argument	stderr		2052383	0					
ANR	2052443	Identifier	stderr		2052383	0					
ANR	2052444	Argument	"""error: invalid pid: %s\\n"""		2052383	1					
ANR	2052445	PrimaryExpression	"""error: invalid pid: %s\\n"""		2052383	0					
ANR	2052446	Argument	argv [ 1 ]		2052383	2					
ANR	2052447	ArrayIndexing	argv [ 1 ]		2052383	0					
ANR	2052448	Identifier	argv		2052383	0					
ANR	2052449	PrimaryExpression	1		2052383	1					
ANR	2052450	ReturnStatement	return 1 ;	486:3:13253:13261	2052383	1	True				
ANR	2052451	PrimaryExpression	1		2052383	0					
ANR	2052452	IdentifierDeclStatement	bool success ;	489:1:13271:13283	2052383	3	True				
ANR	2052453	IdentifierDecl	success		2052383	0					
ANR	2052454	IdentifierDeclType	bool		2052383	0					
ANR	2052455	Identifier	success		2052383	1					
ANR	2052456	IfStatement	"if ( ! pfc . suspend_family ( pid , success ) )"		2052383	4					
ANR	2052457	Condition	"! pfc . suspend_family ( pid , success )"	490:5:13290:13322	2052383	0	True				
ANR	2052458	UnaryOperationExpression	"! pfc . suspend_family ( pid , success )"		2052383	0					
ANR	2052459	UnaryOperator	!		2052383	0					
ANR	2052460	CallExpression	"pfc . suspend_family ( pid , success )"		2052383	1					
ANR	2052461	Callee	pfc . suspend_family		2052383	0					
ANR	2052462	MemberAccess	pfc . suspend_family		2052383	0					
ANR	2052463	Identifier	pfc		2052383	0					
ANR	2052464	Identifier	suspend_family		2052383	1					
ANR	2052465	ArgumentList	pid		2052383	1					
ANR	2052466	Argument	pid		2052383	0					
ANR	2052467	Identifier	pid		2052383	0					
ANR	2052468	Argument	success		2052383	1					
ANR	2052469	Identifier	success		2052383	0					
ANR	2052470	CompoundStatement		17:40:334:334	2052383	1					
ANR	2052471	ExpressionStatement	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"	491:2:13329:13387	2052383	0	True				
ANR	2052472	CallExpression	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"		2052383	0					
ANR	2052473	Callee	fprintf		2052383	0					
ANR	2052474	Identifier	fprintf		2052383	0					
ANR	2052475	ArgumentList	stderr		2052383	1					
ANR	2052476	Argument	stderr		2052383	0					
ANR	2052477	Identifier	stderr		2052383	0					
ANR	2052478	Argument	"""error: communication error with ProcD\\n"""		2052383	1					
ANR	2052479	PrimaryExpression	"""error: communication error with ProcD\\n"""		2052383	0					
ANR	2052480	ReturnStatement	return 1 ;	492:2:13391:13399	2052383	1	True				
ANR	2052481	PrimaryExpression	1		2052383	0					
ANR	2052482	IfStatement	if ( ! success )		2052383	5					
ANR	2052483	Condition	! success	494:5:13409:13416	2052383	0	True				
ANR	2052484	UnaryOperationExpression	! success		2052383	0					
ANR	2052485	UnaryOperator	!		2052383	0					
ANR	2052486	Identifier	success		2052383	1					
ANR	2052487	CompoundStatement		21:15:428:428	2052383	1					
ANR	2052488	ExpressionStatement	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"	495:2:13423:13508	2052383	0	True				
ANR	2052489	CallExpression	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"		2052383	0					
ANR	2052490	Callee	fprintf		2052383	0					
ANR	2052491	Identifier	fprintf		2052383	0					
ANR	2052492	ArgumentList	stderr		2052383	1					
ANR	2052493	Argument	stderr		2052383	0					
ANR	2052494	Identifier	stderr		2052383	0					
ANR	2052495	Argument	"""error: %s command failed with ProcD\\n"""		2052383	1					
ANR	2052496	PrimaryExpression	"""error: %s command failed with ProcD\\n"""		2052383	0					
ANR	2052497	Argument	argv [ 0 ]		2052383	2					
ANR	2052498	ArrayIndexing	argv [ 0 ]		2052383	0					
ANR	2052499	Identifier	argv		2052383	0					
ANR	2052500	PrimaryExpression	0		2052383	1					
ANR	2052501	ReturnStatement	return 1 ;	498:2:13512:13520	2052383	1	True				
ANR	2052502	PrimaryExpression	1		2052383	0					
ANR	2052503	ReturnStatement	return 0 ;	500:1:13526:13534	2052383	6	True				
ANR	2052504	PrimaryExpression	0		2052383	0					
ANR	2052505	ReturnType	int		2052383	1					
ANR	2052506	Identifier	suspend_family		2052383	2					
ANR	2052507	ParameterList	"ProcFamilyClient & pfc , int argc , char * argv [ ]"		2052383	3					
ANR	2052508	Parameter	ProcFamilyClient & pfc	473:15:12943:12963	2052383	0	True				
ANR	2052509	ParameterType	ProcFamilyClient &		2052383	0					
ANR	2052510	Identifier	pfc		2052383	1					
ANR	2052511	Parameter	int argc	473:38:12966:12973	2052383	1	True				
ANR	2052512	ParameterType	int		2052383	0					
ANR	2052513	Identifier	argc		2052383	1					
ANR	2052514	Parameter	char * argv [ ]	473:48:12976:12987	2052383	2	True				
ANR	2052515	ParameterType	char * [ ]		2052383	0					
ANR	2052516	Identifier	argv		2052383	1					
ANR	2052517	CFGEntryNode	ENTRY		2052383		True				
ANR	2052518	CFGExitNode	EXIT		2052383		True				
ANR	2052519	Symbol	argc		2052383						
ANR	2052520	Symbol	atoi		2052383						
ANR	2052521	Symbol	pfc . suspend_family		2052383						
ANR	2052522	Symbol	success		2052383						
ANR	2052523	Symbol	* argv		2052383						
ANR	2052524	Symbol	pid		2052383						
ANR	2052525	Symbol	pfc		2052383						
ANR	2052526	Symbol	stderr		2052383						
ANR	2052527	Symbol	argv		2052383						
ANR	2052528	Function	continue_family	503:0:13539:14153							
ANR	2052529	FunctionDef	"continue_family (ProcFamilyClient & pfc , int argc , char * argv [ ])"		2052528	0					
ANR	2052530	CompoundStatement		505:0:13606:14153	2052528	0					
ANR	2052531	IfStatement	if ( argc > 2 )		2052528	0					
ANR	2052532	Condition	argc > 2	506:5:13613:13620	2052528	0	True				
ANR	2052533	RelationalExpression	argc > 2		2052528	0		>			
ANR	2052534	Identifier	argc		2052528	0					
ANR	2052535	PrimaryExpression	2		2052528	1					
ANR	2052536	CompoundStatement		2:15:16:16	2052528	1					
ANR	2052537	ExpressionStatement	"fprintf ( stderr , ""error: argument synopsis for %s: [<pid>]\\n"" , argv [ 0 ] )"	507:2:13627:13717	2052528	0	True				
ANR	2052538	CallExpression	"fprintf ( stderr , ""error: argument synopsis for %s: [<pid>]\\n"" , argv [ 0 ] )"		2052528	0					
ANR	2052539	Callee	fprintf		2052528	0					
ANR	2052540	Identifier	fprintf		2052528	0					
ANR	2052541	ArgumentList	stderr		2052528	1					
ANR	2052542	Argument	stderr		2052528	0					
ANR	2052543	Identifier	stderr		2052528	0					
ANR	2052544	Argument	"""error: argument synopsis for %s: [<pid>]\\n"""		2052528	1					
ANR	2052545	PrimaryExpression	"""error: argument synopsis for %s: [<pid>]\\n"""		2052528	0					
ANR	2052546	Argument	argv [ 0 ]		2052528	2					
ANR	2052547	ArrayIndexing	argv [ 0 ]		2052528	0					
ANR	2052548	Identifier	argv		2052528	0					
ANR	2052549	PrimaryExpression	0		2052528	1					
ANR	2052550	ReturnStatement	return 1 ;	510:2:13721:13729	2052528	1	True				
ANR	2052551	PrimaryExpression	1		2052528	0					
ANR	2052552	IdentifierDeclStatement	pid_t pid = 0 ;	512:1:13735:13748	2052528	1	True				
ANR	2052553	IdentifierDecl	pid = 0		2052528	0					
ANR	2052554	IdentifierDeclType	pid_t		2052528	0					
ANR	2052555	Identifier	pid		2052528	1					
ANR	2052556	AssignmentExpression	pid = 0		2052528	2		=			
ANR	2052557	Identifier	pid		2052528	0					
ANR	2052558	PrimaryExpression	0		2052528	1					
ANR	2052559	IfStatement	if ( argc == 2 )		2052528	2					
ANR	2052560	Condition	argc == 2	513:5:13755:13763	2052528	0	True				
ANR	2052561	EqualityExpression	argc == 2		2052528	0		==			
ANR	2052562	Identifier	argc		2052528	0					
ANR	2052563	PrimaryExpression	2		2052528	1					
ANR	2052564	CompoundStatement		9:16:159:159	2052528	1					
ANR	2052565	ExpressionStatement	pid = atoi ( argv [ 1 ] )	514:2:13770:13789	2052528	0	True				
ANR	2052566	AssignmentExpression	pid = atoi ( argv [ 1 ] )		2052528	0		=			
ANR	2052567	Identifier	pid		2052528	0					
ANR	2052568	CallExpression	atoi ( argv [ 1 ] )		2052528	1					
ANR	2052569	Callee	atoi		2052528	0					
ANR	2052570	Identifier	atoi		2052528	0					
ANR	2052571	ArgumentList	argv [ 1 ]		2052528	1					
ANR	2052572	Argument	argv [ 1 ]		2052528	0					
ANR	2052573	ArrayIndexing	argv [ 1 ]		2052528	0					
ANR	2052574	Identifier	argv		2052528	0					
ANR	2052575	PrimaryExpression	1		2052528	1					
ANR	2052576	IfStatement	if ( pid == 0 )		2052528	1					
ANR	2052577	Condition	pid == 0	515:6:13797:13804	2052528	0	True				
ANR	2052578	EqualityExpression	pid == 0		2052528	0		==			
ANR	2052579	Identifier	pid		2052528	0					
ANR	2052580	PrimaryExpression	0		2052528	1					
ANR	2052581	CompoundStatement		11:16:200:200	2052528	1					
ANR	2052582	ExpressionStatement	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 1 ] )"	516:3:13812:13864	2052528	0	True				
ANR	2052583	CallExpression	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 1 ] )"		2052528	0					
ANR	2052584	Callee	fprintf		2052528	0					
ANR	2052585	Identifier	fprintf		2052528	0					
ANR	2052586	ArgumentList	stderr		2052528	1					
ANR	2052587	Argument	stderr		2052528	0					
ANR	2052588	Identifier	stderr		2052528	0					
ANR	2052589	Argument	"""error: invalid pid: %s\\n"""		2052528	1					
ANR	2052590	PrimaryExpression	"""error: invalid pid: %s\\n"""		2052528	0					
ANR	2052591	Argument	argv [ 1 ]		2052528	2					
ANR	2052592	ArrayIndexing	argv [ 1 ]		2052528	0					
ANR	2052593	Identifier	argv		2052528	0					
ANR	2052594	PrimaryExpression	1		2052528	1					
ANR	2052595	ReturnStatement	return 1 ;	517:3:13869:13877	2052528	1	True				
ANR	2052596	PrimaryExpression	1		2052528	0					
ANR	2052597	IdentifierDeclStatement	bool success ;	520:1:13887:13899	2052528	3	True				
ANR	2052598	IdentifierDecl	success		2052528	0					
ANR	2052599	IdentifierDeclType	bool		2052528	0					
ANR	2052600	Identifier	success		2052528	1					
ANR	2052601	IfStatement	"if ( ! pfc . continue_family ( pid , success ) )"		2052528	4					
ANR	2052602	Condition	"! pfc . continue_family ( pid , success )"	521:5:13906:13939	2052528	0	True				
ANR	2052603	UnaryOperationExpression	"! pfc . continue_family ( pid , success )"		2052528	0					
ANR	2052604	UnaryOperator	!		2052528	0					
ANR	2052605	CallExpression	"pfc . continue_family ( pid , success )"		2052528	1					
ANR	2052606	Callee	pfc . continue_family		2052528	0					
ANR	2052607	MemberAccess	pfc . continue_family		2052528	0					
ANR	2052608	Identifier	pfc		2052528	0					
ANR	2052609	Identifier	continue_family		2052528	1					
ANR	2052610	ArgumentList	pid		2052528	1					
ANR	2052611	Argument	pid		2052528	0					
ANR	2052612	Identifier	pid		2052528	0					
ANR	2052613	Argument	success		2052528	1					
ANR	2052614	Identifier	success		2052528	0					
ANR	2052615	CompoundStatement		17:41:335:335	2052528	1					
ANR	2052616	ExpressionStatement	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"	522:2:13946:14004	2052528	0	True				
ANR	2052617	CallExpression	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"		2052528	0					
ANR	2052618	Callee	fprintf		2052528	0					
ANR	2052619	Identifier	fprintf		2052528	0					
ANR	2052620	ArgumentList	stderr		2052528	1					
ANR	2052621	Argument	stderr		2052528	0					
ANR	2052622	Identifier	stderr		2052528	0					
ANR	2052623	Argument	"""error: communication error with ProcD\\n"""		2052528	1					
ANR	2052624	PrimaryExpression	"""error: communication error with ProcD\\n"""		2052528	0					
ANR	2052625	ReturnStatement	return 1 ;	523:2:14008:14016	2052528	1	True				
ANR	2052626	PrimaryExpression	1		2052528	0					
ANR	2052627	IfStatement	if ( ! success )		2052528	5					
ANR	2052628	Condition	! success	525:5:14026:14033	2052528	0	True				
ANR	2052629	UnaryOperationExpression	! success		2052528	0					
ANR	2052630	UnaryOperator	!		2052528	0					
ANR	2052631	Identifier	success		2052528	1					
ANR	2052632	CompoundStatement		21:15:429:429	2052528	1					
ANR	2052633	ExpressionStatement	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"	526:2:14040:14125	2052528	0	True				
ANR	2052634	CallExpression	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"		2052528	0					
ANR	2052635	Callee	fprintf		2052528	0					
ANR	2052636	Identifier	fprintf		2052528	0					
ANR	2052637	ArgumentList	stderr		2052528	1					
ANR	2052638	Argument	stderr		2052528	0					
ANR	2052639	Identifier	stderr		2052528	0					
ANR	2052640	Argument	"""error: %s command failed with ProcD\\n"""		2052528	1					
ANR	2052641	PrimaryExpression	"""error: %s command failed with ProcD\\n"""		2052528	0					
ANR	2052642	Argument	argv [ 0 ]		2052528	2					
ANR	2052643	ArrayIndexing	argv [ 0 ]		2052528	0					
ANR	2052644	Identifier	argv		2052528	0					
ANR	2052645	PrimaryExpression	0		2052528	1					
ANR	2052646	ReturnStatement	return 1 ;	529:2:14129:14137	2052528	1	True				
ANR	2052647	PrimaryExpression	1		2052528	0					
ANR	2052648	ReturnStatement	return 0 ;	531:1:14143:14151	2052528	6	True				
ANR	2052649	PrimaryExpression	0		2052528	0					
ANR	2052650	ReturnType	int		2052528	1					
ANR	2052651	Identifier	continue_family		2052528	2					
ANR	2052652	ParameterList	"ProcFamilyClient & pfc , int argc , char * argv [ ]"		2052528	3					
ANR	2052653	Parameter	ProcFamilyClient & pfc	504:16:13559:13579	2052528	0	True				
ANR	2052654	ParameterType	ProcFamilyClient &		2052528	0					
ANR	2052655	Identifier	pfc		2052528	1					
ANR	2052656	Parameter	int argc	504:39:13582:13589	2052528	1	True				
ANR	2052657	ParameterType	int		2052528	0					
ANR	2052658	Identifier	argc		2052528	1					
ANR	2052659	Parameter	char * argv [ ]	504:49:13592:13603	2052528	2	True				
ANR	2052660	ParameterType	char * [ ]		2052528	0					
ANR	2052661	Identifier	argv		2052528	1					
ANR	2052662	CFGEntryNode	ENTRY		2052528		True				
ANR	2052663	CFGExitNode	EXIT		2052528		True				
ANR	2052664	Symbol	argc		2052528						
ANR	2052665	Symbol	atoi		2052528						
ANR	2052666	Symbol	success		2052528						
ANR	2052667	Symbol	* argv		2052528						
ANR	2052668	Symbol	pid		2052528						
ANR	2052669	Symbol	pfc		2052528						
ANR	2052670	Symbol	stderr		2052528						
ANR	2052671	Symbol	argv		2052528						
ANR	2052672	Symbol	pfc . continue_family		2052528						
ANR	2052673	Function	kill_family	534:0:14156:14762							
ANR	2052674	FunctionDef	"kill_family (ProcFamilyClient & pfc , int argc , char * argv [ ])"		2052673	0					
ANR	2052675	CompoundStatement		536:0:14219:14762	2052673	0					
ANR	2052676	IfStatement	if ( argc > 2 )		2052673	0					
ANR	2052677	Condition	argc > 2	537:5:14226:14233	2052673	0	True				
ANR	2052678	RelationalExpression	argc > 2		2052673	0		>			
ANR	2052679	Identifier	argc		2052673	0					
ANR	2052680	PrimaryExpression	2		2052673	1					
ANR	2052681	CompoundStatement		2:15:16:16	2052673	1					
ANR	2052682	ExpressionStatement	"fprintf ( stderr , ""error: argument synopsis for %s: [<pid>]\\n"" , argv [ 0 ] )"	538:2:14240:14330	2052673	0	True				
ANR	2052683	CallExpression	"fprintf ( stderr , ""error: argument synopsis for %s: [<pid>]\\n"" , argv [ 0 ] )"		2052673	0					
ANR	2052684	Callee	fprintf		2052673	0					
ANR	2052685	Identifier	fprintf		2052673	0					
ANR	2052686	ArgumentList	stderr		2052673	1					
ANR	2052687	Argument	stderr		2052673	0					
ANR	2052688	Identifier	stderr		2052673	0					
ANR	2052689	Argument	"""error: argument synopsis for %s: [<pid>]\\n"""		2052673	1					
ANR	2052690	PrimaryExpression	"""error: argument synopsis for %s: [<pid>]\\n"""		2052673	0					
ANR	2052691	Argument	argv [ 0 ]		2052673	2					
ANR	2052692	ArrayIndexing	argv [ 0 ]		2052673	0					
ANR	2052693	Identifier	argv		2052673	0					
ANR	2052694	PrimaryExpression	0		2052673	1					
ANR	2052695	ReturnStatement	return 1 ;	541:2:14334:14342	2052673	1	True				
ANR	2052696	PrimaryExpression	1		2052673	0					
ANR	2052697	IdentifierDeclStatement	pid_t pid = 0 ;	543:1:14348:14361	2052673	1	True				
ANR	2052698	IdentifierDecl	pid = 0		2052673	0					
ANR	2052699	IdentifierDeclType	pid_t		2052673	0					
ANR	2052700	Identifier	pid		2052673	1					
ANR	2052701	AssignmentExpression	pid = 0		2052673	2		=			
ANR	2052702	Identifier	pid		2052673	0					
ANR	2052703	PrimaryExpression	0		2052673	1					
ANR	2052704	IfStatement	if ( argc == 2 )		2052673	2					
ANR	2052705	Condition	argc == 2	544:5:14368:14376	2052673	0	True				
ANR	2052706	EqualityExpression	argc == 2		2052673	0		==			
ANR	2052707	Identifier	argc		2052673	0					
ANR	2052708	PrimaryExpression	2		2052673	1					
ANR	2052709	CompoundStatement		9:16:159:159	2052673	1					
ANR	2052710	ExpressionStatement	pid = atoi ( argv [ 1 ] )	545:2:14383:14402	2052673	0	True				
ANR	2052711	AssignmentExpression	pid = atoi ( argv [ 1 ] )		2052673	0		=			
ANR	2052712	Identifier	pid		2052673	0					
ANR	2052713	CallExpression	atoi ( argv [ 1 ] )		2052673	1					
ANR	2052714	Callee	atoi		2052673	0					
ANR	2052715	Identifier	atoi		2052673	0					
ANR	2052716	ArgumentList	argv [ 1 ]		2052673	1					
ANR	2052717	Argument	argv [ 1 ]		2052673	0					
ANR	2052718	ArrayIndexing	argv [ 1 ]		2052673	0					
ANR	2052719	Identifier	argv		2052673	0					
ANR	2052720	PrimaryExpression	1		2052673	1					
ANR	2052721	IfStatement	if ( pid == 0 )		2052673	1					
ANR	2052722	Condition	pid == 0	546:6:14410:14417	2052673	0	True				
ANR	2052723	EqualityExpression	pid == 0		2052673	0		==			
ANR	2052724	Identifier	pid		2052673	0					
ANR	2052725	PrimaryExpression	0		2052673	1					
ANR	2052726	CompoundStatement		11:16:200:200	2052673	1					
ANR	2052727	ExpressionStatement	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 1 ] )"	547:3:14425:14477	2052673	0	True				
ANR	2052728	CallExpression	"fprintf ( stderr , ""error: invalid pid: %s\\n"" , argv [ 1 ] )"		2052673	0					
ANR	2052729	Callee	fprintf		2052673	0					
ANR	2052730	Identifier	fprintf		2052673	0					
ANR	2052731	ArgumentList	stderr		2052673	1					
ANR	2052732	Argument	stderr		2052673	0					
ANR	2052733	Identifier	stderr		2052673	0					
ANR	2052734	Argument	"""error: invalid pid: %s\\n"""		2052673	1					
ANR	2052735	PrimaryExpression	"""error: invalid pid: %s\\n"""		2052673	0					
ANR	2052736	Argument	argv [ 1 ]		2052673	2					
ANR	2052737	ArrayIndexing	argv [ 1 ]		2052673	0					
ANR	2052738	Identifier	argv		2052673	0					
ANR	2052739	PrimaryExpression	1		2052673	1					
ANR	2052740	ReturnStatement	return 1 ;	548:3:14482:14490	2052673	1	True				
ANR	2052741	PrimaryExpression	1		2052673	0					
ANR	2052742	IdentifierDeclStatement	bool success ;	551:1:14500:14512	2052673	3	True				
ANR	2052743	IdentifierDecl	success		2052673	0					
ANR	2052744	IdentifierDeclType	bool		2052673	0					
ANR	2052745	Identifier	success		2052673	1					
ANR	2052746	IfStatement	"if ( ! pfc . kill_family ( pid , success ) )"		2052673	4					
ANR	2052747	Condition	"! pfc . kill_family ( pid , success )"	552:5:14519:14548	2052673	0	True				
ANR	2052748	UnaryOperationExpression	"! pfc . kill_family ( pid , success )"		2052673	0					
ANR	2052749	UnaryOperator	!		2052673	0					
ANR	2052750	CallExpression	"pfc . kill_family ( pid , success )"		2052673	1					
ANR	2052751	Callee	pfc . kill_family		2052673	0					
ANR	2052752	MemberAccess	pfc . kill_family		2052673	0					
ANR	2052753	Identifier	pfc		2052673	0					
ANR	2052754	Identifier	kill_family		2052673	1					
ANR	2052755	ArgumentList	pid		2052673	1					
ANR	2052756	Argument	pid		2052673	0					
ANR	2052757	Identifier	pid		2052673	0					
ANR	2052758	Argument	success		2052673	1					
ANR	2052759	Identifier	success		2052673	0					
ANR	2052760	CompoundStatement		17:37:331:331	2052673	1					
ANR	2052761	ExpressionStatement	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"	553:2:14555:14613	2052673	0	True				
ANR	2052762	CallExpression	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"		2052673	0					
ANR	2052763	Callee	fprintf		2052673	0					
ANR	2052764	Identifier	fprintf		2052673	0					
ANR	2052765	ArgumentList	stderr		2052673	1					
ANR	2052766	Argument	stderr		2052673	0					
ANR	2052767	Identifier	stderr		2052673	0					
ANR	2052768	Argument	"""error: communication error with ProcD\\n"""		2052673	1					
ANR	2052769	PrimaryExpression	"""error: communication error with ProcD\\n"""		2052673	0					
ANR	2052770	ReturnStatement	return 1 ;	554:2:14617:14625	2052673	1	True				
ANR	2052771	PrimaryExpression	1		2052673	0					
ANR	2052772	IfStatement	if ( ! success )		2052673	5					
ANR	2052773	Condition	! success	556:5:14635:14642	2052673	0	True				
ANR	2052774	UnaryOperationExpression	! success		2052673	0					
ANR	2052775	UnaryOperator	!		2052673	0					
ANR	2052776	Identifier	success		2052673	1					
ANR	2052777	CompoundStatement		21:15:425:425	2052673	1					
ANR	2052778	ExpressionStatement	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"	557:2:14649:14734	2052673	0	True				
ANR	2052779	CallExpression	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"		2052673	0					
ANR	2052780	Callee	fprintf		2052673	0					
ANR	2052781	Identifier	fprintf		2052673	0					
ANR	2052782	ArgumentList	stderr		2052673	1					
ANR	2052783	Argument	stderr		2052673	0					
ANR	2052784	Identifier	stderr		2052673	0					
ANR	2052785	Argument	"""error: %s command failed with ProcD\\n"""		2052673	1					
ANR	2052786	PrimaryExpression	"""error: %s command failed with ProcD\\n"""		2052673	0					
ANR	2052787	Argument	argv [ 0 ]		2052673	2					
ANR	2052788	ArrayIndexing	argv [ 0 ]		2052673	0					
ANR	2052789	Identifier	argv		2052673	0					
ANR	2052790	PrimaryExpression	0		2052673	1					
ANR	2052791	ReturnStatement	return 1 ;	560:2:14738:14746	2052673	1	True				
ANR	2052792	PrimaryExpression	1		2052673	0					
ANR	2052793	ReturnStatement	return 0 ;	562:1:14752:14760	2052673	6	True				
ANR	2052794	PrimaryExpression	0		2052673	0					
ANR	2052795	ReturnType	int		2052673	1					
ANR	2052796	Identifier	kill_family		2052673	2					
ANR	2052797	ParameterList	"ProcFamilyClient & pfc , int argc , char * argv [ ]"		2052673	3					
ANR	2052798	Parameter	ProcFamilyClient & pfc	535:12:14172:14192	2052673	0	True				
ANR	2052799	ParameterType	ProcFamilyClient &		2052673	0					
ANR	2052800	Identifier	pfc		2052673	1					
ANR	2052801	Parameter	int argc	535:35:14195:14202	2052673	1	True				
ANR	2052802	ParameterType	int		2052673	0					
ANR	2052803	Identifier	argc		2052673	1					
ANR	2052804	Parameter	char * argv [ ]	535:45:14205:14216	2052673	2	True				
ANR	2052805	ParameterType	char * [ ]		2052673	0					
ANR	2052806	Identifier	argv		2052673	1					
ANR	2052807	CFGEntryNode	ENTRY		2052673		True				
ANR	2052808	CFGExitNode	EXIT		2052673		True				
ANR	2052809	Symbol	argc		2052673						
ANR	2052810	Symbol	atoi		2052673						
ANR	2052811	Symbol	success		2052673						
ANR	2052812	Symbol	* argv		2052673						
ANR	2052813	Symbol	pid		2052673						
ANR	2052814	Symbol	pfc		2052673						
ANR	2052815	Symbol	stderr		2052673						
ANR	2052816	Symbol	argv		2052673						
ANR	2052817	Symbol	pfc . kill_family		2052673						
ANR	2052818	Function	unregister_family	565:0:14765:15258							
ANR	2052819	FunctionDef	"unregister_family (ProcFamilyClient & pfc , int argc , char * argv [ ])"		2052818	0					
ANR	2052820	CompoundStatement		567:0:14834:15258	2052818	0					
ANR	2052821	IfStatement	if ( argc != 2 )		2052818	0					
ANR	2052822	Condition	argc != 2	568:5:14841:14849	2052818	0	True				
ANR	2052823	EqualityExpression	argc != 2		2052818	0		!=			
ANR	2052824	Identifier	argc		2052818	0					
ANR	2052825	PrimaryExpression	2		2052818	1					
ANR	2052826	CompoundStatement		2:16:17:17	2052818	1					
ANR	2052827	ExpressionStatement	"fprintf ( stderr , ""error: argument synopsis for %s: <pid>\\n"" , argv [ 0 ] )"	569:2:14856:14944	2052818	0	True				
ANR	2052828	CallExpression	"fprintf ( stderr , ""error: argument synopsis for %s: <pid>\\n"" , argv [ 0 ] )"		2052818	0					
ANR	2052829	Callee	fprintf		2052818	0					
ANR	2052830	Identifier	fprintf		2052818	0					
ANR	2052831	ArgumentList	stderr		2052818	1					
ANR	2052832	Argument	stderr		2052818	0					
ANR	2052833	Identifier	stderr		2052818	0					
ANR	2052834	Argument	"""error: argument synopsis for %s: <pid>\\n"""		2052818	1					
ANR	2052835	PrimaryExpression	"""error: argument synopsis for %s: <pid>\\n"""		2052818	0					
ANR	2052836	Argument	argv [ 0 ]		2052818	2					
ANR	2052837	ArrayIndexing	argv [ 0 ]		2052818	0					
ANR	2052838	Identifier	argv		2052818	0					
ANR	2052839	PrimaryExpression	0		2052818	1					
ANR	2052840	ReturnStatement	return 1 ;	572:2:14948:14956	2052818	1	True				
ANR	2052841	PrimaryExpression	1		2052818	0					
ANR	2052842	IdentifierDeclStatement	pid_t pid = atoi ( argv [ 1 ] ) ;	574:1:14962:14987	2052818	1	True				
ANR	2052843	IdentifierDecl	pid = atoi ( argv [ 1 ] )		2052818	0					
ANR	2052844	IdentifierDeclType	pid_t		2052818	0					
ANR	2052845	Identifier	pid		2052818	1					
ANR	2052846	AssignmentExpression	pid = atoi ( argv [ 1 ] )		2052818	2		=			
ANR	2052847	Identifier	pid		2052818	0					
ANR	2052848	CallExpression	atoi ( argv [ 1 ] )		2052818	1					
ANR	2052849	Callee	atoi		2052818	0					
ANR	2052850	Identifier	atoi		2052818	0					
ANR	2052851	ArgumentList	argv [ 1 ]		2052818	1					
ANR	2052852	Argument	argv [ 1 ]		2052818	0					
ANR	2052853	ArrayIndexing	argv [ 1 ]		2052818	0					
ANR	2052854	Identifier	argv		2052818	0					
ANR	2052855	PrimaryExpression	1		2052818	1					
ANR	2052856	IdentifierDeclStatement	bool success ;	575:1:14990:15002	2052818	2	True				
ANR	2052857	IdentifierDecl	success		2052818	0					
ANR	2052858	IdentifierDeclType	bool		2052818	0					
ANR	2052859	Identifier	success		2052818	1					
ANR	2052860	IfStatement	"if ( ! pfc . unregister_family ( pid , success ) )"		2052818	3					
ANR	2052861	Condition	"! pfc . unregister_family ( pid , success )"	576:5:15009:15044	2052818	0	True				
ANR	2052862	UnaryOperationExpression	"! pfc . unregister_family ( pid , success )"		2052818	0					
ANR	2052863	UnaryOperator	!		2052818	0					
ANR	2052864	CallExpression	"pfc . unregister_family ( pid , success )"		2052818	1					
ANR	2052865	Callee	pfc . unregister_family		2052818	0					
ANR	2052866	MemberAccess	pfc . unregister_family		2052818	0					
ANR	2052867	Identifier	pfc		2052818	0					
ANR	2052868	Identifier	unregister_family		2052818	1					
ANR	2052869	ArgumentList	pid		2052818	1					
ANR	2052870	Argument	pid		2052818	0					
ANR	2052871	Identifier	pid		2052818	0					
ANR	2052872	Argument	success		2052818	1					
ANR	2052873	Identifier	success		2052818	0					
ANR	2052874	CompoundStatement		10:43:212:212	2052818	1					
ANR	2052875	ExpressionStatement	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"	577:2:15051:15109	2052818	0	True				
ANR	2052876	CallExpression	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"		2052818	0					
ANR	2052877	Callee	fprintf		2052818	0					
ANR	2052878	Identifier	fprintf		2052818	0					
ANR	2052879	ArgumentList	stderr		2052818	1					
ANR	2052880	Argument	stderr		2052818	0					
ANR	2052881	Identifier	stderr		2052818	0					
ANR	2052882	Argument	"""error: communication error with ProcD\\n"""		2052818	1					
ANR	2052883	PrimaryExpression	"""error: communication error with ProcD\\n"""		2052818	0					
ANR	2052884	ReturnStatement	return 1 ;	578:2:15113:15121	2052818	1	True				
ANR	2052885	PrimaryExpression	1		2052818	0					
ANR	2052886	IfStatement	if ( ! success )		2052818	4					
ANR	2052887	Condition	! success	580:5:15131:15138	2052818	0	True				
ANR	2052888	UnaryOperationExpression	! success		2052818	0					
ANR	2052889	UnaryOperator	!		2052818	0					
ANR	2052890	Identifier	success		2052818	1					
ANR	2052891	CompoundStatement		14:15:306:306	2052818	1					
ANR	2052892	ExpressionStatement	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"	581:2:15145:15230	2052818	0	True				
ANR	2052893	CallExpression	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"		2052818	0					
ANR	2052894	Callee	fprintf		2052818	0					
ANR	2052895	Identifier	fprintf		2052818	0					
ANR	2052896	ArgumentList	stderr		2052818	1					
ANR	2052897	Argument	stderr		2052818	0					
ANR	2052898	Identifier	stderr		2052818	0					
ANR	2052899	Argument	"""error: %s command failed with ProcD\\n"""		2052818	1					
ANR	2052900	PrimaryExpression	"""error: %s command failed with ProcD\\n"""		2052818	0					
ANR	2052901	Argument	argv [ 0 ]		2052818	2					
ANR	2052902	ArrayIndexing	argv [ 0 ]		2052818	0					
ANR	2052903	Identifier	argv		2052818	0					
ANR	2052904	PrimaryExpression	0		2052818	1					
ANR	2052905	ReturnStatement	return 1 ;	584:2:15234:15242	2052818	1	True				
ANR	2052906	PrimaryExpression	1		2052818	0					
ANR	2052907	ReturnStatement	return 0 ;	586:1:15248:15256	2052818	5	True				
ANR	2052908	PrimaryExpression	0		2052818	0					
ANR	2052909	ReturnType	int		2052818	1					
ANR	2052910	Identifier	unregister_family		2052818	2					
ANR	2052911	ParameterList	"ProcFamilyClient & pfc , int argc , char * argv [ ]"		2052818	3					
ANR	2052912	Parameter	ProcFamilyClient & pfc	566:18:14787:14807	2052818	0	True				
ANR	2052913	ParameterType	ProcFamilyClient &		2052818	0					
ANR	2052914	Identifier	pfc		2052818	1					
ANR	2052915	Parameter	int argc	566:41:14810:14817	2052818	1	True				
ANR	2052916	ParameterType	int		2052818	0					
ANR	2052917	Identifier	argc		2052818	1					
ANR	2052918	Parameter	char * argv [ ]	566:51:14820:14831	2052818	2	True				
ANR	2052919	ParameterType	char * [ ]		2052818	0					
ANR	2052920	Identifier	argv		2052818	1					
ANR	2052921	CFGEntryNode	ENTRY		2052818		True				
ANR	2052922	CFGExitNode	EXIT		2052818		True				
ANR	2052923	Symbol	argc		2052818						
ANR	2052924	Symbol	atoi		2052818						
ANR	2052925	Symbol	pfc . unregister_family		2052818						
ANR	2052926	Symbol	success		2052818						
ANR	2052927	Symbol	* argv		2052818						
ANR	2052928	Symbol	pid		2052818						
ANR	2052929	Symbol	pfc		2052818						
ANR	2052930	Symbol	stderr		2052818						
ANR	2052931	Symbol	argv		2052818						
ANR	2052932	Function	snapshot	589:0:15261:15700							
ANR	2052933	FunctionDef	"snapshot (ProcFamilyClient & pfc , int argc , char * argv [ ])"		2052932	0					
ANR	2052934	CompoundStatement		591:0:15321:15700	2052932	0					
ANR	2052935	IfStatement	if ( argc != 1 )		2052932	0					
ANR	2052936	Condition	argc != 1	592:5:15328:15336	2052932	0	True				
ANR	2052937	EqualityExpression	argc != 1		2052932	0		!=			
ANR	2052938	Identifier	argc		2052932	0					
ANR	2052939	PrimaryExpression	1		2052932	1					
ANR	2052940	CompoundStatement		2:16:17:17	2052932	1					
ANR	2052941	ExpressionStatement	"fprintf ( stderr , ""error: no arguments required for %s\\n"" , argv [ 0 ] )"	593:2:15343:15428	2052932	0	True				
ANR	2052942	CallExpression	"fprintf ( stderr , ""error: no arguments required for %s\\n"" , argv [ 0 ] )"		2052932	0					
ANR	2052943	Callee	fprintf		2052932	0					
ANR	2052944	Identifier	fprintf		2052932	0					
ANR	2052945	ArgumentList	stderr		2052932	1					
ANR	2052946	Argument	stderr		2052932	0					
ANR	2052947	Identifier	stderr		2052932	0					
ANR	2052948	Argument	"""error: no arguments required for %s\\n"""		2052932	1					
ANR	2052949	PrimaryExpression	"""error: no arguments required for %s\\n"""		2052932	0					
ANR	2052950	Argument	argv [ 0 ]		2052932	2					
ANR	2052951	ArrayIndexing	argv [ 0 ]		2052932	0					
ANR	2052952	Identifier	argv		2052932	0					
ANR	2052953	PrimaryExpression	0		2052932	1					
ANR	2052954	ReturnStatement	return 1 ;	596:2:15432:15440	2052932	1	True				
ANR	2052955	PrimaryExpression	1		2052932	0					
ANR	2052956	IdentifierDeclStatement	bool success ;	598:1:15446:15458	2052932	1	True				
ANR	2052957	IdentifierDecl	success		2052932	0					
ANR	2052958	IdentifierDeclType	bool		2052932	0					
ANR	2052959	Identifier	success		2052932	1					
ANR	2052960	IfStatement	if ( ! pfc . snapshot ( success ) )		2052932	2					
ANR	2052961	Condition	! pfc . snapshot ( success )	599:5:15465:15486	2052932	0	True				
ANR	2052962	UnaryOperationExpression	! pfc . snapshot ( success )		2052932	0					
ANR	2052963	UnaryOperator	!		2052932	0					
ANR	2052964	CallExpression	pfc . snapshot ( success )		2052932	1					
ANR	2052965	Callee	pfc . snapshot		2052932	0					
ANR	2052966	MemberAccess	pfc . snapshot		2052932	0					
ANR	2052967	Identifier	pfc		2052932	0					
ANR	2052968	Identifier	snapshot		2052932	1					
ANR	2052969	ArgumentList	success		2052932	1					
ANR	2052970	Argument	success		2052932	0					
ANR	2052971	Identifier	success		2052932	0					
ANR	2052972	CompoundStatement		9:29:167:167	2052932	1					
ANR	2052973	ExpressionStatement	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"	600:2:15493:15551	2052932	0	True				
ANR	2052974	CallExpression	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"		2052932	0					
ANR	2052975	Callee	fprintf		2052932	0					
ANR	2052976	Identifier	fprintf		2052932	0					
ANR	2052977	ArgumentList	stderr		2052932	1					
ANR	2052978	Argument	stderr		2052932	0					
ANR	2052979	Identifier	stderr		2052932	0					
ANR	2052980	Argument	"""error: communication error with ProcD\\n"""		2052932	1					
ANR	2052981	PrimaryExpression	"""error: communication error with ProcD\\n"""		2052932	0					
ANR	2052982	ReturnStatement	return 1 ;	601:2:15555:15563	2052932	1	True				
ANR	2052983	PrimaryExpression	1		2052932	0					
ANR	2052984	IfStatement	if ( ! success )		2052932	3					
ANR	2052985	Condition	! success	603:5:15573:15580	2052932	0	True				
ANR	2052986	UnaryOperationExpression	! success		2052932	0					
ANR	2052987	UnaryOperator	!		2052932	0					
ANR	2052988	Identifier	success		2052932	1					
ANR	2052989	CompoundStatement		13:15:261:261	2052932	1					
ANR	2052990	ExpressionStatement	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"	604:2:15587:15672	2052932	0	True				
ANR	2052991	CallExpression	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"		2052932	0					
ANR	2052992	Callee	fprintf		2052932	0					
ANR	2052993	Identifier	fprintf		2052932	0					
ANR	2052994	ArgumentList	stderr		2052932	1					
ANR	2052995	Argument	stderr		2052932	0					
ANR	2052996	Identifier	stderr		2052932	0					
ANR	2052997	Argument	"""error: %s command failed with ProcD\\n"""		2052932	1					
ANR	2052998	PrimaryExpression	"""error: %s command failed with ProcD\\n"""		2052932	0					
ANR	2052999	Argument	argv [ 0 ]		2052932	2					
ANR	2053000	ArrayIndexing	argv [ 0 ]		2052932	0					
ANR	2053001	Identifier	argv		2052932	0					
ANR	2053002	PrimaryExpression	0		2052932	1					
ANR	2053003	ReturnStatement	return 1 ;	607:2:15676:15684	2052932	1	True				
ANR	2053004	PrimaryExpression	1		2052932	0					
ANR	2053005	ReturnStatement	return 0 ;	609:1:15690:15698	2052932	4	True				
ANR	2053006	PrimaryExpression	0		2052932	0					
ANR	2053007	ReturnType	int		2052932	1					
ANR	2053008	Identifier	snapshot		2052932	2					
ANR	2053009	ParameterList	"ProcFamilyClient & pfc , int argc , char * argv [ ]"		2052932	3					
ANR	2053010	Parameter	ProcFamilyClient & pfc	590:9:15274:15294	2052932	0	True				
ANR	2053011	ParameterType	ProcFamilyClient &		2052932	0					
ANR	2053012	Identifier	pfc		2052932	1					
ANR	2053013	Parameter	int argc	590:32:15297:15304	2052932	1	True				
ANR	2053014	ParameterType	int		2052932	0					
ANR	2053015	Identifier	argc		2052932	1					
ANR	2053016	Parameter	char * argv [ ]	590:42:15307:15318	2052932	2	True				
ANR	2053017	ParameterType	char * [ ]		2052932	0					
ANR	2053018	Identifier	argv		2052932	1					
ANR	2053019	CFGEntryNode	ENTRY		2052932		True				
ANR	2053020	CFGExitNode	EXIT		2052932		True				
ANR	2053021	Symbol	argc		2052932						
ANR	2053022	Symbol	success		2052932						
ANR	2053023	Symbol	pfc . snapshot		2052932						
ANR	2053024	Symbol	* argv		2052932						
ANR	2053025	Symbol	pfc		2052932						
ANR	2053026	Symbol	stderr		2052932						
ANR	2053027	Symbol	argv		2052932						
ANR	2053028	Function	quit	612:0:15703:16134							
ANR	2053029	FunctionDef	"quit (ProcFamilyClient & pfc , int argc , char * argv [ ])"		2053028	0					
ANR	2053030	CompoundStatement		614:0:15759:16134	2053028	0					
ANR	2053031	IfStatement	if ( argc != 1 )		2053028	0					
ANR	2053032	Condition	argc != 1	615:5:15766:15774	2053028	0	True				
ANR	2053033	EqualityExpression	argc != 1		2053028	0		!=			
ANR	2053034	Identifier	argc		2053028	0					
ANR	2053035	PrimaryExpression	1		2053028	1					
ANR	2053036	CompoundStatement		2:16:17:17	2053028	1					
ANR	2053037	ExpressionStatement	"fprintf ( stderr , ""error: no arguments required for %s\\n"" , argv [ 0 ] )"	616:2:15781:15866	2053028	0	True				
ANR	2053038	CallExpression	"fprintf ( stderr , ""error: no arguments required for %s\\n"" , argv [ 0 ] )"		2053028	0					
ANR	2053039	Callee	fprintf		2053028	0					
ANR	2053040	Identifier	fprintf		2053028	0					
ANR	2053041	ArgumentList	stderr		2053028	1					
ANR	2053042	Argument	stderr		2053028	0					
ANR	2053043	Identifier	stderr		2053028	0					
ANR	2053044	Argument	"""error: no arguments required for %s\\n"""		2053028	1					
ANR	2053045	PrimaryExpression	"""error: no arguments required for %s\\n"""		2053028	0					
ANR	2053046	Argument	argv [ 0 ]		2053028	2					
ANR	2053047	ArrayIndexing	argv [ 0 ]		2053028	0					
ANR	2053048	Identifier	argv		2053028	0					
ANR	2053049	PrimaryExpression	0		2053028	1					
ANR	2053050	ReturnStatement	return 1 ;	619:2:15870:15878	2053028	1	True				
ANR	2053051	PrimaryExpression	1		2053028	0					
ANR	2053052	IdentifierDeclStatement	bool success ;	621:1:15884:15896	2053028	1	True				
ANR	2053053	IdentifierDecl	success		2053028	0					
ANR	2053054	IdentifierDeclType	bool		2053028	0					
ANR	2053055	Identifier	success		2053028	1					
ANR	2053056	IfStatement	if ( ! pfc . quit ( success ) )		2053028	2					
ANR	2053057	Condition	! pfc . quit ( success )	622:5:15903:15920	2053028	0	True				
ANR	2053058	UnaryOperationExpression	! pfc . quit ( success )		2053028	0					
ANR	2053059	UnaryOperator	!		2053028	0					
ANR	2053060	CallExpression	pfc . quit ( success )		2053028	1					
ANR	2053061	Callee	pfc . quit		2053028	0					
ANR	2053062	MemberAccess	pfc . quit		2053028	0					
ANR	2053063	Identifier	pfc		2053028	0					
ANR	2053064	Identifier	quit		2053028	1					
ANR	2053065	ArgumentList	success		2053028	1					
ANR	2053066	Argument	success		2053028	0					
ANR	2053067	Identifier	success		2053028	0					
ANR	2053068	CompoundStatement		9:25:163:163	2053028	1					
ANR	2053069	ExpressionStatement	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"	623:2:15927:15985	2053028	0	True				
ANR	2053070	CallExpression	"fprintf ( stderr , ""error: communication error with ProcD\\n"" )"		2053028	0					
ANR	2053071	Callee	fprintf		2053028	0					
ANR	2053072	Identifier	fprintf		2053028	0					
ANR	2053073	ArgumentList	stderr		2053028	1					
ANR	2053074	Argument	stderr		2053028	0					
ANR	2053075	Identifier	stderr		2053028	0					
ANR	2053076	Argument	"""error: communication error with ProcD\\n"""		2053028	1					
ANR	2053077	PrimaryExpression	"""error: communication error with ProcD\\n"""		2053028	0					
ANR	2053078	ReturnStatement	return 1 ;	624:2:15989:15997	2053028	1	True				
ANR	2053079	PrimaryExpression	1		2053028	0					
ANR	2053080	IfStatement	if ( ! success )		2053028	3					
ANR	2053081	Condition	! success	626:5:16007:16014	2053028	0	True				
ANR	2053082	UnaryOperationExpression	! success		2053028	0					
ANR	2053083	UnaryOperator	!		2053028	0					
ANR	2053084	Identifier	success		2053028	1					
ANR	2053085	CompoundStatement		13:15:257:257	2053028	1					
ANR	2053086	ExpressionStatement	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"	627:2:16021:16106	2053028	0	True				
ANR	2053087	CallExpression	"fprintf ( stderr , ""error: %s command failed with ProcD\\n"" , argv [ 0 ] )"		2053028	0					
ANR	2053088	Callee	fprintf		2053028	0					
ANR	2053089	Identifier	fprintf		2053028	0					
ANR	2053090	ArgumentList	stderr		2053028	1					
ANR	2053091	Argument	stderr		2053028	0					
ANR	2053092	Identifier	stderr		2053028	0					
ANR	2053093	Argument	"""error: %s command failed with ProcD\\n"""		2053028	1					
ANR	2053094	PrimaryExpression	"""error: %s command failed with ProcD\\n"""		2053028	0					
ANR	2053095	Argument	argv [ 0 ]		2053028	2					
ANR	2053096	ArrayIndexing	argv [ 0 ]		2053028	0					
ANR	2053097	Identifier	argv		2053028	0					
ANR	2053098	PrimaryExpression	0		2053028	1					
ANR	2053099	ReturnStatement	return 1 ;	630:2:16110:16118	2053028	1	True				
ANR	2053100	PrimaryExpression	1		2053028	0					
ANR	2053101	ReturnStatement	return 0 ;	632:1:16124:16132	2053028	4	True				
ANR	2053102	PrimaryExpression	0		2053028	0					
ANR	2053103	ReturnType	int		2053028	1					
ANR	2053104	Identifier	quit		2053028	2					
ANR	2053105	ParameterList	"ProcFamilyClient & pfc , int argc , char * argv [ ]"		2053028	3					
ANR	2053106	Parameter	ProcFamilyClient & pfc	613:5:15712:15732	2053028	0	True				
ANR	2053107	ParameterType	ProcFamilyClient &		2053028	0					
ANR	2053108	Identifier	pfc		2053028	1					
ANR	2053109	Parameter	int argc	613:28:15735:15742	2053028	1	True				
ANR	2053110	ParameterType	int		2053028	0					
ANR	2053111	Identifier	argc		2053028	1					
ANR	2053112	Parameter	char * argv [ ]	613:38:15745:15756	2053028	2	True				
ANR	2053113	ParameterType	char * [ ]		2053028	0					
ANR	2053114	Identifier	argv		2053028	1					
ANR	2053115	CFGEntryNode	ENTRY		2053028		True				
ANR	2053116	CFGExitNode	EXIT		2053028		True				
ANR	2053117	Symbol	argc		2053028						
ANR	2053118	Symbol	success		2053028						
ANR	2053119	Symbol	* argv		2053028						
ANR	2053120	Symbol	pfc		2053028						
ANR	2053121	Symbol	stderr		2053028						
ANR	2053122	Symbol	pfc . quit		2053028						
ANR	2053123	Symbol	argv		2053028						
