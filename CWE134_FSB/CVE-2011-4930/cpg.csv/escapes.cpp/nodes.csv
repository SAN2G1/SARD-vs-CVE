command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1300475	File	data/converged/CVE-2011-4930_htcondor/escapes.cpp								
ANR	1300476	DeclStmt									
ANR	1300477	Decl							int	int ( int )	getHexDigitValue
ANR	1300478	Function	collapse_escapes	28:0:918:2442							
ANR	1300479	FunctionDef	collapse_escapes (char * str)		1300478	0					
ANR	1300480	CompoundStatement		29:0:954:2442	1300478	0					
ANR	1300481	IdentifierDeclStatement	char * cp = str ;	30:1:957:971	1300478	0	True				
ANR	1300482	IdentifierDecl	* cp = str		1300478	0					
ANR	1300483	IdentifierDeclType	char *		1300478	0					
ANR	1300484	Identifier	cp		1300478	1					
ANR	1300485	AssignmentExpression	* cp = str		1300478	2		=			
ANR	1300486	Identifier	str		1300478	0					
ANR	1300487	Identifier	str		1300478	1					
ANR	1300488	IdentifierDeclStatement	char * np ;	31:1:974:982	1300478	1	True				
ANR	1300489	IdentifierDecl	* np		1300478	0					
ANR	1300490	IdentifierDeclType	char *		1300478	0					
ANR	1300491	Identifier	np		1300478	1					
ANR	1300492	IdentifierDeclStatement	int value ;	32:1:985:995	1300478	2	True				
ANR	1300493	IdentifierDecl	value		1300478	0					
ANR	1300494	IdentifierDeclType	int		1300478	0					
ANR	1300495	Identifier	value		1300478	1					
ANR	1300496	IdentifierDeclStatement	int length = strlen ( str ) ;	33:1:998:1025	1300478	3	True				
ANR	1300497	IdentifierDecl	length = strlen ( str )		1300478	0					
ANR	1300498	IdentifierDeclType	int		1300478	0					
ANR	1300499	Identifier	length		1300478	1					
ANR	1300500	AssignmentExpression	length = strlen ( str )		1300478	2		=			
ANR	1300501	Identifier	length		1300478	0					
ANR	1300502	CallExpression	strlen ( str )		1300478	1					
ANR	1300503	Callee	strlen		1300478	0					
ANR	1300504	Identifier	strlen		1300478	0					
ANR	1300505	ArgumentList	str		1300478	1					
ANR	1300506	Argument	str		1300478	0					
ANR	1300507	Identifier	str		1300478	0					
ANR	1300508	IdentifierDeclStatement	int count ;	34:1:1028:1038	1300478	4	True				
ANR	1300509	IdentifierDecl	count		1300478	0					
ANR	1300510	IdentifierDeclType	int		1300478	0					
ANR	1300511	Identifier	count		1300478	1					
ANR	1300512	WhileStatement	while ( * cp )		1300478	5					
ANR	1300513	Condition	* cp	36:8:1049:1051	1300478	0	True				
ANR	1300514	UnaryOperationExpression	* cp		1300478	0					
ANR	1300515	UnaryOperator	*		1300478	0					
ANR	1300516	Identifier	cp		1300478	1					
ANR	1300517	CompoundStatement		8:14:100:100	1300478	1					
ANR	1300518	WhileStatement	while ( * cp && * cp != '\\\\' )		1300478	0					
ANR	1300519	Condition	* cp && * cp != '\\\\'	38:9:1103:1120	1300478	0	True				
ANR	1300520	AndExpression	* cp && * cp != '\\\\'		1300478	0		&&			
ANR	1300521	UnaryOperationExpression	* cp		1300478	0					
ANR	1300522	UnaryOperator	*		1300478	0					
ANR	1300523	Identifier	cp		1300478	1					
ANR	1300524	EqualityExpression	* cp != '\\\\'		1300478	1		!=			
ANR	1300525	UnaryOperationExpression	* cp		1300478	0					
ANR	1300526	UnaryOperator	*		1300478	0					
ANR	1300527	Identifier	cp		1300478	1					
ANR	1300528	PrimaryExpression	'\\\\'		1300478	1					
ANR	1300529	ExpressionStatement	cp ++	38:30:1124:1128	1300478	1	True				
ANR	1300530	PostIncDecOperationExpression	cp ++		1300478	0					
ANR	1300531	Identifier	cp		1300478	0					
ANR	1300532	IncDec	++		1300478	1					
ANR	1300533	IfStatement	if ( ! * cp )		1300478	1					
ANR	1300534	Condition	! * cp	41:6:1157:1160	1300478	0	True				
ANR	1300535	UnaryOperationExpression	! * cp		1300478	0					
ANR	1300536	UnaryOperator	!		1300478	0					
ANR	1300537	UnaryOperationExpression	* cp		1300478	1					
ANR	1300538	UnaryOperator	*		1300478	0					
ANR	1300539	Identifier	cp		1300478	1					
ANR	1300540	BreakStatement	break ;	41:13:1164:1169	1300478	1	True				
ANR	1300541	ExpressionStatement	np = cp + 1	44:2:1199:1210	1300478	2	True				
ANR	1300542	AssignmentExpression	np = cp + 1		1300478	0		=			
ANR	1300543	Identifier	np		1300478	0					
ANR	1300544	AdditiveExpression	cp + 1		1300478	1		+			
ANR	1300545	Identifier	cp		1300478	0					
ANR	1300546	PrimaryExpression	1		1300478	1					
ANR	1300547	SwitchStatement	switch ( * np )		1300478	3					
ANR	1300548	Condition	* np	45:10:1222:1224	1300478	0	True				
ANR	1300549	UnaryOperationExpression	* np		1300478	0					
ANR	1300550	UnaryOperator	*		1300478	0					
ANR	1300551	Identifier	np		1300478	1					
ANR	1300552	CompoundStatement		17:16:273:273	1300478	1					
ANR	1300553	Label	case 'a' :	46:3:1233:1241	1300478	0	True				
ANR	1300554	ExpressionStatement	value = '\\a'	46:13:1243:1255	1300478	1	True				
ANR	1300555	AssignmentExpression	value = '\\a'		1300478	0		=			
ANR	1300556	Identifier	value		1300478	0					
ANR	1300557	PrimaryExpression	'\\a'		1300478	1					
ANR	1300558	ExpressionStatement	np ++	46:27:1257:1261	1300478	2	True				
ANR	1300559	PostIncDecOperationExpression	np ++		1300478	0					
ANR	1300560	Identifier	np		1300478	0					
ANR	1300561	IncDec	++		1300478	1					
ANR	1300562	BreakStatement	break ;	46:33:1263:1268	1300478	3	True				
ANR	1300563	Label	case 'b' :	47:3:1273:1281	1300478	4	True				
ANR	1300564	ExpressionStatement	value = '\\b'	47:13:1283:1295	1300478	5	True				
ANR	1300565	AssignmentExpression	value = '\\b'		1300478	0		=			
ANR	1300566	Identifier	value		1300478	0					
ANR	1300567	PrimaryExpression	'\\b'		1300478	1					
ANR	1300568	ExpressionStatement	np ++	47:27:1297:1301	1300478	6	True				
ANR	1300569	PostIncDecOperationExpression	np ++		1300478	0					
ANR	1300570	Identifier	np		1300478	0					
ANR	1300571	IncDec	++		1300478	1					
ANR	1300572	BreakStatement	break ;	47:33:1303:1308	1300478	7	True				
ANR	1300573	Label	case 'f' :	48:3:1313:1321	1300478	8	True				
ANR	1300574	ExpressionStatement	value = '\\f'	48:13:1323:1335	1300478	9	True				
ANR	1300575	AssignmentExpression	value = '\\f'		1300478	0		=			
ANR	1300576	Identifier	value		1300478	0					
ANR	1300577	PrimaryExpression	'\\f'		1300478	1					
ANR	1300578	ExpressionStatement	np ++	48:27:1337:1341	1300478	10	True				
ANR	1300579	PostIncDecOperationExpression	np ++		1300478	0					
ANR	1300580	Identifier	np		1300478	0					
ANR	1300581	IncDec	++		1300478	1					
ANR	1300582	BreakStatement	break ;	48:33:1343:1348	1300478	11	True				
ANR	1300583	Label	case 'n' :	49:3:1353:1361	1300478	12	True				
ANR	1300584	ExpressionStatement	value = '\\n'	49:13:1363:1375	1300478	13	True				
ANR	1300585	AssignmentExpression	value = '\\n'		1300478	0		=			
ANR	1300586	Identifier	value		1300478	0					
ANR	1300587	PrimaryExpression	'\\n'		1300478	1					
ANR	1300588	ExpressionStatement	np ++	49:27:1377:1381	1300478	14	True				
ANR	1300589	PostIncDecOperationExpression	np ++		1300478	0					
ANR	1300590	Identifier	np		1300478	0					
ANR	1300591	IncDec	++		1300478	1					
ANR	1300592	BreakStatement	break ;	49:33:1383:1388	1300478	15	True				
ANR	1300593	Label	case 'r' :	50:3:1393:1401	1300478	16	True				
ANR	1300594	ExpressionStatement	value = '\\r'	50:13:1403:1415	1300478	17	True				
ANR	1300595	AssignmentExpression	value = '\\r'		1300478	0		=			
ANR	1300596	Identifier	value		1300478	0					
ANR	1300597	PrimaryExpression	'\\r'		1300478	1					
ANR	1300598	ExpressionStatement	np ++	50:27:1417:1421	1300478	18	True				
ANR	1300599	PostIncDecOperationExpression	np ++		1300478	0					
ANR	1300600	Identifier	np		1300478	0					
ANR	1300601	IncDec	++		1300478	1					
ANR	1300602	BreakStatement	break ;	50:33:1423:1428	1300478	19	True				
ANR	1300603	Label	case 't' :	51:3:1433:1441	1300478	20	True				
ANR	1300604	ExpressionStatement	value = '\\t'	51:13:1443:1455	1300478	21	True				
ANR	1300605	AssignmentExpression	value = '\\t'		1300478	0		=			
ANR	1300606	Identifier	value		1300478	0					
ANR	1300607	PrimaryExpression	'\\t'		1300478	1					
ANR	1300608	ExpressionStatement	np ++	51:27:1457:1461	1300478	22	True				
ANR	1300609	PostIncDecOperationExpression	np ++		1300478	0					
ANR	1300610	Identifier	np		1300478	0					
ANR	1300611	IncDec	++		1300478	1					
ANR	1300612	BreakStatement	break ;	51:33:1463:1468	1300478	23	True				
ANR	1300613	Label	case 'v' :	52:3:1473:1481	1300478	24	True				
ANR	1300614	ExpressionStatement	value = '\\v'	52:13:1483:1495	1300478	25	True				
ANR	1300615	AssignmentExpression	value = '\\v'		1300478	0		=			
ANR	1300616	Identifier	value		1300478	0					
ANR	1300617	PrimaryExpression	'\\v'		1300478	1					
ANR	1300618	ExpressionStatement	np ++	52:27:1497:1501	1300478	26	True				
ANR	1300619	PostIncDecOperationExpression	np ++		1300478	0					
ANR	1300620	Identifier	np		1300478	0					
ANR	1300621	IncDec	++		1300478	1					
ANR	1300622	BreakStatement	break ;	52:33:1503:1508	1300478	27	True				
ANR	1300623	Label	case '\\\\' :	53:3:1513:1522	1300478	28	True				
ANR	1300624	ExpressionStatement	value = '\\\\'	53:14:1524:1536	1300478	29	True				
ANR	1300625	AssignmentExpression	value = '\\\\'		1300478	0		=			
ANR	1300626	Identifier	value		1300478	0					
ANR	1300627	PrimaryExpression	'\\\\'		1300478	1					
ANR	1300628	ExpressionStatement	np ++	53:28:1538:1542	1300478	30	True				
ANR	1300629	PostIncDecOperationExpression	np ++		1300478	0					
ANR	1300630	Identifier	np		1300478	0					
ANR	1300631	IncDec	++		1300478	1					
ANR	1300632	BreakStatement	break ;	53:34:1544:1549	1300478	31	True				
ANR	1300633	Label	case '\\?' :	54:3:1554:1563	1300478	32	True				
ANR	1300634	ExpressionStatement	value = '\\?'	54:14:1565:1577	1300478	33	True				
ANR	1300635	AssignmentExpression	value = '\\?'		1300478	0		=			
ANR	1300636	Identifier	value		1300478	0					
ANR	1300637	PrimaryExpression	'\\?'		1300478	1					
ANR	1300638	ExpressionStatement	np ++	54:28:1579:1583	1300478	34	True				
ANR	1300639	PostIncDecOperationExpression	np ++		1300478	0					
ANR	1300640	Identifier	np		1300478	0					
ANR	1300641	IncDec	++		1300478	1					
ANR	1300642	BreakStatement	break ;	54:34:1585:1590	1300478	35	True				
ANR	1300643	Label	case '\\'' :	55:3:1595:1604	1300478	36	True				
ANR	1300644	ExpressionStatement	value = '\\''	55:14:1606:1618	1300478	37	True				
ANR	1300645	AssignmentExpression	value = '\\''		1300478	0		=			
ANR	1300646	Identifier	value		1300478	0					
ANR	1300647	PrimaryExpression	'\\''		1300478	1					
ANR	1300648	ExpressionStatement	np ++	55:28:1620:1624	1300478	38	True				
ANR	1300649	PostIncDecOperationExpression	np ++		1300478	0					
ANR	1300650	Identifier	np		1300478	0					
ANR	1300651	IncDec	++		1300478	1					
ANR	1300652	BreakStatement	break ;	55:34:1626:1631	1300478	39	True				
ANR	1300653	Label	"case '\\""' :"	56:3:1636:1645	1300478	40	True				
ANR	1300654	ExpressionStatement	"value = '\\""'"	56:14:1647:1659	1300478	41	True				
ANR	1300655	AssignmentExpression	"value = '\\""'"		1300478	0		=			
ANR	1300656	Identifier	value		1300478	0					
ANR	1300657	PrimaryExpression	"'\\""'"		1300478	1					
ANR	1300658	ExpressionStatement	np ++	56:28:1661:1665	1300478	42	True				
ANR	1300659	PostIncDecOperationExpression	np ++		1300478	0					
ANR	1300660	Identifier	np		1300478	0					
ANR	1300661	IncDec	++		1300478	1					
ANR	1300662	BreakStatement	break ;	56:34:1667:1672	1300478	43	True				
ANR	1300663	Label	default :	58:3:1678:1685	1300478	44	True				
ANR	1300664	Identifier	default		1300478	0					
ANR	1300665	IfStatement	if ( isdigit ( * np ) )		1300478	45					
ANR	1300666	Condition	isdigit ( * np )	60:8:1717:1730	1300478	0	True				
ANR	1300667	CallExpression	isdigit ( * np )		1300478	0					
ANR	1300668	Callee	isdigit		1300478	0					
ANR	1300669	Identifier	isdigit		1300478	0					
ANR	1300670	ArgumentList	* np		1300478	1					
ANR	1300671	Argument	* np		1300478	0					
ANR	1300672	UnaryOperationExpression	* np		1300478	0					
ANR	1300673	UnaryOperator	*		1300478	0					
ANR	1300674	Identifier	np		1300478	1					
ANR	1300675	CompoundStatement		32:25:779:779	1300478	1					
ANR	1300676	ExpressionStatement	value = 0	61:5:1741:1750	1300478	0	True				
ANR	1300677	AssignmentExpression	value = 0		1300478	0		=			
ANR	1300678	Identifier	value		1300478	0					
ANR	1300679	PrimaryExpression	0		1300478	1					
ANR	1300680	WhileStatement	while ( * np && isdigit ( * np ) )		1300478	1					
ANR	1300681	Condition	* np && isdigit ( * np )	62:12:1764:1784	1300478	0	True				
ANR	1300682	AndExpression	* np && isdigit ( * np )		1300478	0		&&			
ANR	1300683	UnaryOperationExpression	* np		1300478	0					
ANR	1300684	UnaryOperator	*		1300478	0					
ANR	1300685	Identifier	np		1300478	1					
ANR	1300686	CallExpression	isdigit ( * np )		1300478	1					
ANR	1300687	Callee	isdigit		1300478	0					
ANR	1300688	Identifier	isdigit		1300478	0					
ANR	1300689	ArgumentList	* np		1300478	1					
ANR	1300690	Argument	* np		1300478	0					
ANR	1300691	UnaryOperationExpression	* np		1300478	0					
ANR	1300692	UnaryOperator	*		1300478	0					
ANR	1300693	Identifier	np		1300478	1					
ANR	1300694	CompoundStatement		34:36:833:833	1300478	1					
ANR	1300695	ExpressionStatement	value += value * 8 + ( ( * np ) - '0' )	63:6:1796:1828	1300478	0	True				
ANR	1300696	AssignmentExpression	value += value * 8 + ( ( * np ) - '0' )		1300478	0		+=			
ANR	1300697	Identifier	value		1300478	0					
ANR	1300698	AdditiveExpression	value * 8 + ( ( * np ) - '0' )		1300478	1		+			
ANR	1300699	MultiplicativeExpression	value * 8		1300478	0		*			
ANR	1300700	Identifier	value		1300478	0					
ANR	1300701	PrimaryExpression	8		1300478	1					
ANR	1300702	AdditiveExpression	( * np ) - '0'		1300478	1		-			
ANR	1300703	UnaryOperationExpression	* np		1300478	0					
ANR	1300704	UnaryOperator	*		1300478	0					
ANR	1300705	Identifier	np		1300478	1					
ANR	1300706	PrimaryExpression	'0'		1300478	1					
ANR	1300707	ExpressionStatement	np ++	64:6:1836:1840	1300478	1	True				
ANR	1300708	PostIncDecOperationExpression	np ++		1300478	0					
ANR	1300709	Identifier	np		1300478	0					
ANR	1300710	IncDec	++		1300478	1					
ANR	1300711	ElseStatement	else		1300478	0					
ANR	1300712	IfStatement	if ( * np == 'x' )		1300478	0					
ANR	1300713	Condition	* np == 'x'	66:16:1865:1874	1300478	0	True				
ANR	1300714	EqualityExpression	* np == 'x'		1300478	0		==			
ANR	1300715	UnaryOperationExpression	* np		1300478	0					
ANR	1300716	UnaryOperator	*		1300478	0					
ANR	1300717	Identifier	np		1300478	1					
ANR	1300718	PrimaryExpression	'x'		1300478	1					
ANR	1300719	CompoundStatement		38:29:923:923	1300478	1					
ANR	1300720	ExpressionStatement	value = 0	68:5:1914:1923	1300478	0	True				
ANR	1300721	AssignmentExpression	value = 0		1300478	0		=			
ANR	1300722	Identifier	value		1300478	0					
ANR	1300723	PrimaryExpression	0		1300478	1					
ANR	1300724	ExpressionStatement	np ++	69:5:1930:1934	1300478	1	True				
ANR	1300725	PostIncDecOperationExpression	np ++		1300478	0					
ANR	1300726	Identifier	np		1300478	0					
ANR	1300727	IncDec	++		1300478	1					
ANR	1300728	WhileStatement	while ( * np && isxdigit ( * np ) )		1300478	2					
ANR	1300729	Condition	* np && isxdigit ( * np )	70:12:1948:1969	1300478	0	True				
ANR	1300730	AndExpression	* np && isxdigit ( * np )		1300478	0		&&			
ANR	1300731	UnaryOperationExpression	* np		1300478	0					
ANR	1300732	UnaryOperator	*		1300478	0					
ANR	1300733	Identifier	np		1300478	1					
ANR	1300734	CallExpression	isxdigit ( * np )		1300478	1					
ANR	1300735	Callee	isxdigit		1300478	0					
ANR	1300736	Identifier	isxdigit		1300478	0					
ANR	1300737	ArgumentList	* np		1300478	1					
ANR	1300738	Argument	* np		1300478	0					
ANR	1300739	UnaryOperationExpression	* np		1300478	0					
ANR	1300740	UnaryOperator	*		1300478	0					
ANR	1300741	Identifier	np		1300478	1					
ANR	1300742	CompoundStatement		42:37:1018:1018	1300478	1					
ANR	1300743	ExpressionStatement	value += value * 16 + getHexDigitValue ( * np )	71:6:1981:2022	1300478	0	True				
ANR	1300744	AssignmentExpression	value += value * 16 + getHexDigitValue ( * np )		1300478	0		+=			
ANR	1300745	Identifier	value		1300478	0					
ANR	1300746	AdditiveExpression	value * 16 + getHexDigitValue ( * np )		1300478	1		+			
ANR	1300747	MultiplicativeExpression	value * 16		1300478	0		*			
ANR	1300748	Identifier	value		1300478	0					
ANR	1300749	PrimaryExpression	16		1300478	1					
ANR	1300750	CallExpression	getHexDigitValue ( * np )		1300478	1					
ANR	1300751	Callee	getHexDigitValue		1300478	0					
ANR	1300752	Identifier	getHexDigitValue		1300478	0					
ANR	1300753	ArgumentList	* np		1300478	1					
ANR	1300754	Argument	* np		1300478	0					
ANR	1300755	UnaryOperationExpression	* np		1300478	0					
ANR	1300756	UnaryOperator	*		1300478	0					
ANR	1300757	Identifier	np		1300478	1					
ANR	1300758	ExpressionStatement	np ++	72:6:2030:2034	1300478	1	True				
ANR	1300759	PostIncDecOperationExpression	np ++		1300478	0					
ANR	1300760	Identifier	np		1300478	0					
ANR	1300761	IncDec	++		1300478	1					
ANR	1300762	ElseStatement	else		1300478	0					
ANR	1300763	CompoundStatement		46:11:1099:1099	1300478	0					
ANR	1300764	ExpressionStatement	value = * np	76:5:2099:2110	1300478	0	True				
ANR	1300765	AssignmentExpression	value = * np		1300478	0		=			
ANR	1300766	Identifier	value		1300478	0					
ANR	1300767	UnaryOperationExpression	* np		1300478	1					
ANR	1300768	UnaryOperator	*		1300478	0					
ANR	1300769	Identifier	np		1300478	1					
ANR	1300770	ExpressionStatement	np ++	77:5:2117:2121	1300478	1	True				
ANR	1300771	PostIncDecOperationExpression	np ++		1300478	0					
ANR	1300772	Identifier	np		1300478	0					
ANR	1300773	IncDec	++		1300478	1					
ANR	1300774	ExpressionStatement	count = length - ( np - str ) + 1	82:2:2197:2229	1300478	4	True				
ANR	1300775	AssignmentExpression	count = length - ( np - str ) + 1		1300478	0		=			
ANR	1300776	Identifier	count		1300478	0					
ANR	1300777	AdditiveExpression	length - ( np - str ) + 1		1300478	1		-			
ANR	1300778	Identifier	length		1300478	0					
ANR	1300779	AdditiveExpression	( np - str ) + 1		1300478	1		+			
ANR	1300780	AdditiveExpression	np - str		1300478	0		-			
ANR	1300781	Identifier	np		1300478	0					
ANR	1300782	Identifier	str		1300478	1					
ANR	1300783	PrimaryExpression	1		1300478	1					
ANR	1300784	ExpressionStatement	length = length - ( np - cp ) + 1	83:2:2233:2265	1300478	5	True				
ANR	1300785	AssignmentExpression	length = length - ( np - cp ) + 1		1300478	0		=			
ANR	1300786	Identifier	length		1300478	0					
ANR	1300787	AdditiveExpression	length - ( np - cp ) + 1		1300478	1		-			
ANR	1300788	Identifier	length		1300478	0					
ANR	1300789	AdditiveExpression	( np - cp ) + 1		1300478	1		+			
ANR	1300790	AdditiveExpression	np - cp		1300478	0		-			
ANR	1300791	Identifier	np		1300478	0					
ANR	1300792	Identifier	cp		1300478	1					
ANR	1300793	PrimaryExpression	1		1300478	1					
ANR	1300794	ExpressionStatement	* cp = value	86:2:2341:2352	1300478	6	True				
ANR	1300795	AssignmentExpression	* cp = value		1300478	0		=			
ANR	1300796	UnaryOperationExpression	* cp		1300478	0					
ANR	1300797	UnaryOperator	*		1300478	0					
ANR	1300798	Identifier	cp		1300478	1					
ANR	1300799	Identifier	value		1300478	1					
ANR	1300800	ExpressionStatement	"memmove ( cp + 1 , np , count )"	87:2:2356:2382	1300478	7	True				
ANR	1300801	CallExpression	"memmove ( cp + 1 , np , count )"		1300478	0					
ANR	1300802	Callee	memmove		1300478	0					
ANR	1300803	Identifier	memmove		1300478	0					
ANR	1300804	ArgumentList	cp + 1		1300478	1					
ANR	1300805	Argument	cp + 1		1300478	0					
ANR	1300806	AdditiveExpression	cp + 1		1300478	0		+			
ANR	1300807	Identifier	cp		1300478	0					
ANR	1300808	PrimaryExpression	1		1300478	1					
ANR	1300809	Argument	np		1300478	1					
ANR	1300810	Identifier	np		1300478	0					
ANR	1300811	Argument	count		1300478	2					
ANR	1300812	Identifier	count		1300478	0					
ANR	1300813	ExpressionStatement	cp ++	90:2:2418:2422	1300478	8	True				
ANR	1300814	PostIncDecOperationExpression	cp ++		1300478	0					
ANR	1300815	Identifier	cp		1300478	0					
ANR	1300816	IncDec	++		1300478	1					
ANR	1300817	ReturnStatement	return str ;	93:1:2430:2440	1300478	6	True				
ANR	1300818	Identifier	str		1300478	0					
ANR	1300819	ReturnType	char *		1300478	1					
ANR	1300820	Identifier	collapse_escapes		1300478	2					
ANR	1300821	ParameterList	char * str		1300478	3					
ANR	1300822	Parameter	char * str	28:24:942:950	1300478	0	True				
ANR	1300823	ParameterType	char *		1300478	0					
ANR	1300824	Identifier	str		1300478	1					
ANR	1300825	CFGEntryNode	ENTRY		1300478		True				
ANR	1300826	CFGExitNode	EXIT		1300478		True				
ANR	1300827	Symbol	str		1300478						
ANR	1300828	Symbol	* cp		1300478						
ANR	1300829	Symbol	strlen		1300478						
ANR	1300830	Symbol	np		1300478						
ANR	1300831	Symbol	getHexDigitValue		1300478						
ANR	1300832	Symbol	length		1300478						
ANR	1300833	Symbol	count		1300478						
ANR	1300834	Symbol	* np		1300478						
ANR	1300835	Symbol	cp		1300478						
ANR	1300836	Symbol	value		1300478						
ANR	1300837	Symbol	isdigit		1300478						
ANR	1300838	Symbol	isxdigit		1300478						
ANR	1300839	Function	getHexDigitValue	97:0:2446:2589							
ANR	1300840	FunctionDef	getHexDigitValue (int c)		1300839	0					
ANR	1300841	CompoundStatement		99:0:2484:2589	1300839	0					
ANR	1300842	ExpressionStatement	c = tolower ( c )	100:1:2487:2501	1300839	0	True				
ANR	1300843	AssignmentExpression	c = tolower ( c )		1300839	0		=			
ANR	1300844	Identifier	c		1300839	0					
ANR	1300845	CallExpression	tolower ( c )		1300839	1					
ANR	1300846	Callee	tolower		1300839	0					
ANR	1300847	Identifier	tolower		1300839	0					
ANR	1300848	ArgumentList	c		1300839	1					
ANR	1300849	Argument	c		1300839	0					
ANR	1300850	Identifier	c		1300839	0					
ANR	1300851	IfStatement	if ( isdigit ( c ) )		1300839	1					
ANR	1300852	Condition	isdigit ( c )	101:5:2508:2517	1300839	0	True				
ANR	1300853	CallExpression	isdigit ( c )		1300839	0					
ANR	1300854	Callee	isdigit		1300839	0					
ANR	1300855	Identifier	isdigit		1300839	0					
ANR	1300856	ArgumentList	c		1300839	1					
ANR	1300857	Argument	c		1300839	0					
ANR	1300858	Identifier	c		1300839	0					
ANR	1300859	ReturnStatement	return ( c - '0' ) ;	101:17:2520:2536	1300839	1	True				
ANR	1300860	AdditiveExpression	c - '0'		1300839	0		-			
ANR	1300861	Identifier	c		1300839	0					
ANR	1300862	PrimaryExpression	'0'		1300839	1					
ANR	1300863	IfStatement	if ( isxdigit ( c ) )		1300839	2					
ANR	1300864	Condition	isxdigit ( c )	102:5:2543:2553	1300839	0	True				
ANR	1300865	CallExpression	isxdigit ( c )		1300839	0					
ANR	1300866	Callee	isxdigit		1300839	0					
ANR	1300867	Identifier	isxdigit		1300839	0					
ANR	1300868	ArgumentList	c		1300839	1					
ANR	1300869	Argument	c		1300839	0					
ANR	1300870	Identifier	c		1300839	0					
ANR	1300871	ReturnStatement	return ( c - 'a' ) + 10 ;	102:17:2555:2576	1300839	1	True				
ANR	1300872	AdditiveExpression	( c - 'a' ) + 10		1300839	0		+			
ANR	1300873	AdditiveExpression	c - 'a'		1300839	0		-			
ANR	1300874	Identifier	c		1300839	0					
ANR	1300875	PrimaryExpression	'a'		1300839	1					
ANR	1300876	PrimaryExpression	10		1300839	1					
ANR	1300877	ReturnStatement	return 0 ;	103:1:2579:2587	1300839	3	True				
ANR	1300878	PrimaryExpression	0		1300839	0					
ANR	1300879	ReturnType	static int		1300839	1					
ANR	1300880	Identifier	getHexDigitValue		1300839	2					
ANR	1300881	ParameterList	int c		1300839	3					
ANR	1300882	Parameter	int c	98:18:2476:2480	1300839	0	True				
ANR	1300883	ParameterType	int		1300839	0					
ANR	1300884	Identifier	c		1300839	1					
ANR	1300885	CFGEntryNode	ENTRY		1300839		True				
ANR	1300886	CFGExitNode	EXIT		1300839		True				
ANR	1300887	Symbol	c		1300839						
ANR	1300888	Symbol	tolower		1300839						
ANR	1300889	Symbol	isdigit		1300839						
ANR	1300890	Symbol	isxdigit		1300839						
