command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3951744	File	data/converged/CVE-2011-4930_htcondor/src_condor_startd.V6_vmuniverse_mgr.cpp								
ANR	3951745	DeclStmt									
ANR	3951746	Decl							extern ResMgr	extern ResMgr *	resmgr
ANR	3951747	Function	get_image_size	42:0:1333:1456							
ANR	3951748	FunctionDef	get_image_size (procInfo & pi)		3951747	0					
ANR	3951749	CompoundStatement		43:0:1383:1456	3951747	0					
ANR	3951750	ReturnStatement	return pi . rssize ;	45:1:1405:1421	3951747	0	True				
ANR	3951751	MemberAccess	pi . rssize		3951747	0					
ANR	3951752	Identifier	pi		3951747	0					
ANR	3951753	Identifier	rssize		3951747	1					
ANR	3951754	ReturnType	static unsigned long		3951747	1					
ANR	3951755	Identifier	get_image_size		3951747	2					
ANR	3951756	ParameterList	procInfo & pi		3951747	3					
ANR	3951757	Parameter	procInfo & pi	42:36:1369:1380	3951747	0	True				
ANR	3951758	ParameterType	procInfo &		3951747	0					
ANR	3951759	Identifier	pi		3951747	1					
ANR	3951760	CFGEntryNode	ENTRY		3951747		True				
ANR	3951761	CFGExitNode	EXIT		3951747		True				
ANR	3951762	Symbol	pi . rssize		3951747						
ANR	3951763	Symbol	pi		3951747						
ANR	3951764	Function	VMStarterInfo :: VMStarterInfo	51:0:1459:1664							
ANR	3951765	FunctionDef	VMStarterInfo :: VMStarterInfo ()		3951764	0					
ANR	3951766	CompoundStatement		52:0:1490:1664	3951764	0					
ANR	3951767	ExpressionStatement	m_pid = 0	53:1:1493:1502	3951764	0	True				
ANR	3951768	AssignmentExpression	m_pid = 0		3951764	0		=			
ANR	3951769	Identifier	m_pid		3951764	0					
ANR	3951770	PrimaryExpression	0		3951764	1					
ANR	3951771	ExpressionStatement	m_memory = 0	54:1:1505:1517	3951764	1	True				
ANR	3951772	AssignmentExpression	m_memory = 0		3951764	0		=			
ANR	3951773	Identifier	m_memory		3951764	0					
ANR	3951774	PrimaryExpression	0		3951764	1					
ANR	3951775	ExpressionStatement	m_vcpus = 1	55:1:1520:1531	3951764	2	True				
ANR	3951776	AssignmentExpression	m_vcpus = 1		3951764	0		=			
ANR	3951777	Identifier	m_vcpus		3951764	0					
ANR	3951778	PrimaryExpression	1		3951764	1					
ANR	3951779	ExpressionStatement	m_vm_pid = 0	56:1:1534:1546	3951764	3	True				
ANR	3951780	AssignmentExpression	m_vm_pid = 0		3951764	0		=			
ANR	3951781	Identifier	m_vm_pid		3951764	0					
ANR	3951782	PrimaryExpression	0		3951764	1					
ANR	3951783	ExpressionStatement	"memset ( & m_vm_exited_pinfo , 0 , sizeof ( m_vm_exited_pinfo ) )"	57:1:1549:1605	3951764	4	True				
ANR	3951784	CallExpression	"memset ( & m_vm_exited_pinfo , 0 , sizeof ( m_vm_exited_pinfo ) )"		3951764	0					
ANR	3951785	Callee	memset		3951764	0					
ANR	3951786	Identifier	memset		3951764	0					
ANR	3951787	ArgumentList	& m_vm_exited_pinfo		3951764	1					
ANR	3951788	Argument	& m_vm_exited_pinfo		3951764	0					
ANR	3951789	UnaryOperationExpression	& m_vm_exited_pinfo		3951764	0					
ANR	3951790	UnaryOperator	&		3951764	0					
ANR	3951791	Identifier	m_vm_exited_pinfo		3951764	1					
ANR	3951792	Argument	0		3951764	1					
ANR	3951793	PrimaryExpression	0		3951764	0					
ANR	3951794	Argument	sizeof ( m_vm_exited_pinfo )		3951764	2					
ANR	3951795	SizeofExpression	sizeof ( m_vm_exited_pinfo )		3951764	0					
ANR	3951796	Sizeof	sizeof		3951764	0					
ANR	3951797	SizeofOperand	m_vm_exited_pinfo		3951764	1					
ANR	3951798	ExpressionStatement	"memset ( & m_vm_alive_pinfo , 0 , sizeof ( m_vm_alive_pinfo ) )"	58:1:1608:1662	3951764	5	True				
ANR	3951799	CallExpression	"memset ( & m_vm_alive_pinfo , 0 , sizeof ( m_vm_alive_pinfo ) )"		3951764	0					
ANR	3951800	Callee	memset		3951764	0					
ANR	3951801	Identifier	memset		3951764	0					
ANR	3951802	ArgumentList	& m_vm_alive_pinfo		3951764	1					
ANR	3951803	Argument	& m_vm_alive_pinfo		3951764	0					
ANR	3951804	UnaryOperationExpression	& m_vm_alive_pinfo		3951764	0					
ANR	3951805	UnaryOperator	&		3951764	0					
ANR	3951806	Identifier	m_vm_alive_pinfo		3951764	1					
ANR	3951807	Argument	0		3951764	1					
ANR	3951808	PrimaryExpression	0		3951764	0					
ANR	3951809	Argument	sizeof ( m_vm_alive_pinfo )		3951764	2					
ANR	3951810	SizeofExpression	sizeof ( m_vm_alive_pinfo )		3951764	0					
ANR	3951811	Sizeof	sizeof		3951764	0					
ANR	3951812	SizeofOperand	m_vm_alive_pinfo		3951764	1					
ANR	3951813	Identifier	VMStarterInfo :: VMStarterInfo		3951764	1					
ANR	3951814	ParameterList			3951764	2					
ANR	3951815	CFGEntryNode	ENTRY		3951764		True				
ANR	3951816	CFGExitNode	EXIT		3951764		True				
ANR	3951817	Symbol	m_memory		3951764						
ANR	3951818	Symbol	m_pid		3951764						
ANR	3951819	Symbol	& m_vm_alive_pinfo		3951764						
ANR	3951820	Symbol	m_vm_pid		3951764						
ANR	3951821	Symbol	m_vcpus		3951764						
ANR	3951822	Symbol	& m_vm_exited_pinfo		3951764						
ANR	3951823	Function	VMStarterInfo :: updateUsageOfVM	61:0:1667:2288							
ANR	3951824	FunctionDef	VMStarterInfo :: updateUsageOfVM ()		3951823	0					
ANR	3951825	CompoundStatement		63:0:1709:2288	3951823	0					
ANR	3951826	IfStatement	if ( m_vm_pid == 0 )		3951823	0					
ANR	3951827	Condition	m_vm_pid == 0	64:5:1716:1728	3951823	0	True				
ANR	3951828	EqualityExpression	m_vm_pid == 0		3951823	0		==			
ANR	3951829	Identifier	m_vm_pid		3951823	0					
ANR	3951830	PrimaryExpression	0		3951823	1					
ANR	3951831	CompoundStatement		2:20:21:21	3951823	1					
ANR	3951832	ReturnStatement	return false ;	65:2:1735:1747	3951823	0	True				
ANR	3951833	Identifier	false		3951823	0					
ANR	3951834	IdentifierDeclStatement	int proc_status = PROCAPI_OK ;	68:1:1754:1782	3951823	1	True				
ANR	3951835	IdentifierDecl	proc_status = PROCAPI_OK		3951823	0					
ANR	3951836	IdentifierDeclType	int		3951823	0					
ANR	3951837	Identifier	proc_status		3951823	1					
ANR	3951838	AssignmentExpression	proc_status = PROCAPI_OK		3951823	2		=			
ANR	3951839	Identifier	PROCAPI_OK		3951823	0					
ANR	3951840	Identifier	PROCAPI_OK		3951823	1					
ANR	3951841	IdentifierDeclStatement	piPTR pi = NULL ;	70:1:1786:1801	3951823	2	True				
ANR	3951842	IdentifierDecl	pi = NULL		3951823	0					
ANR	3951843	IdentifierDeclType	piPTR		3951823	0					
ANR	3951844	Identifier	pi		3951823	1					
ANR	3951845	AssignmentExpression	pi = NULL		3951823	2		=			
ANR	3951846	Identifier	NULL		3951823	0					
ANR	3951847	Identifier	NULL		3951823	1					
ANR	3951848	IfStatement	"if ( ProcAPI :: getProcInfo ( m_vm_pid , pi , proc_status ) == PROCAPI_SUCCESS )"		3951823	3					
ANR	3951849	Condition	"ProcAPI :: getProcInfo ( m_vm_pid , pi , proc_status ) == PROCAPI_SUCCESS"	71:5:1808:1877	3951823	0	True				
ANR	3951850	EqualityExpression	"ProcAPI :: getProcInfo ( m_vm_pid , pi , proc_status ) == PROCAPI_SUCCESS"		3951823	0		==			
ANR	3951851	CallExpression	"ProcAPI :: getProcInfo ( m_vm_pid , pi , proc_status )"		3951823	0					
ANR	3951852	Callee	ProcAPI :: getProcInfo		3951823	0					
ANR	3951853	Identifier	ProcAPI :: getProcInfo		3951823	0					
ANR	3951854	ArgumentList	m_vm_pid		3951823	1					
ANR	3951855	Argument	m_vm_pid		3951823	0					
ANR	3951856	Identifier	m_vm_pid		3951823	0					
ANR	3951857	Argument	pi		3951823	1					
ANR	3951858	Identifier	pi		3951823	0					
ANR	3951859	Argument	proc_status		3951823	2					
ANR	3951860	Identifier	proc_status		3951823	0					
ANR	3951861	Identifier	PROCAPI_SUCCESS		3951823	1					
ANR	3951862	CompoundStatement		10:21:171:171	3951823	1					
ANR	3951863	ExpressionStatement	"memcpy ( & m_vm_alive_pinfo , pi , sizeof ( struct procInfo ) )"	73:2:1885:1939	3951823	0	True				
ANR	3951864	CallExpression	"memcpy ( & m_vm_alive_pinfo , pi , sizeof ( struct procInfo ) )"		3951823	0					
ANR	3951865	Callee	memcpy		3951823	0					
ANR	3951866	Identifier	memcpy		3951823	0					
ANR	3951867	ArgumentList	& m_vm_alive_pinfo		3951823	1					
ANR	3951868	Argument	& m_vm_alive_pinfo		3951823	0					
ANR	3951869	UnaryOperationExpression	& m_vm_alive_pinfo		3951823	0					
ANR	3951870	UnaryOperator	&		3951823	0					
ANR	3951871	Identifier	m_vm_alive_pinfo		3951823	1					
ANR	3951872	Argument	pi		3951823	1					
ANR	3951873	Identifier	pi		3951823	0					
ANR	3951874	Argument	sizeof ( struct procInfo )		3951823	2					
ANR	3951875	SizeofExpression	sizeof ( struct procInfo )		3951823	0					
ANR	3951876	Sizeof	sizeof		3951823	0					
ANR	3951877	SizeofOperand	struct procInfo		3951823	1					
ANR	3951878	IfStatement	if ( ( DebugFlags & D_FULLDEBUG ) && ( DebugFlags & D_LOAD ) )		3951823	1					
ANR	3951879	Condition	( DebugFlags & D_FULLDEBUG ) && ( DebugFlags & D_LOAD )	74:6:1947:1997	3951823	0	True				
ANR	3951880	AndExpression	( DebugFlags & D_FULLDEBUG ) && ( DebugFlags & D_LOAD )		3951823	0		&&			
ANR	3951881	BitAndExpression	DebugFlags & D_FULLDEBUG		3951823	0		&			
ANR	3951882	Identifier	DebugFlags		3951823	0					
ANR	3951883	Identifier	D_FULLDEBUG		3951823	1					
ANR	3951884	BitAndExpression	DebugFlags & D_LOAD		3951823	1		&			
ANR	3951885	Identifier	DebugFlags		3951823	0					
ANR	3951886	Identifier	D_LOAD		3951823	1					
ANR	3951887	CompoundStatement		12:60:291:291	3951823	1					
ANR	3951888	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Usage of process[%d] for a VM is updated\\n"" , m_vm_pid )"	75:3:2006:2087	3951823	0	True				
ANR	3951889	CallExpression	"dprintf ( D_FULLDEBUG , ""Usage of process[%d] for a VM is updated\\n"" , m_vm_pid )"		3951823	0					
ANR	3951890	Callee	dprintf		3951823	0					
ANR	3951891	Identifier	dprintf		3951823	0					
ANR	3951892	ArgumentList	D_FULLDEBUG		3951823	1					
ANR	3951893	Argument	D_FULLDEBUG		3951823	0					
ANR	3951894	Identifier	D_FULLDEBUG		3951823	0					
ANR	3951895	Argument	"""Usage of process[%d] for a VM is updated\\n"""		3951823	1					
ANR	3951896	PrimaryExpression	"""Usage of process[%d] for a VM is updated\\n"""		3951823	0					
ANR	3951897	Argument	m_vm_pid		3951823	2					
ANR	3951898	Identifier	m_vm_pid		3951823	0					
ANR	3951899	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""sys_time=%lu, user_time=%lu, image_size=%lu\\n"" , pi -> sys_time , pi -> user_time , get_image_size ( * pi ) )"	77:3:2092:2216	3951823	1	True				
ANR	3951900	CallExpression	"dprintf ( D_FULLDEBUG , ""sys_time=%lu, user_time=%lu, image_size=%lu\\n"" , pi -> sys_time , pi -> user_time , get_image_size ( * pi ) )"		3951823	0					
ANR	3951901	Callee	dprintf		3951823	0					
ANR	3951902	Identifier	dprintf		3951823	0					
ANR	3951903	ArgumentList	D_FULLDEBUG		3951823	1					
ANR	3951904	Argument	D_FULLDEBUG		3951823	0					
ANR	3951905	Identifier	D_FULLDEBUG		3951823	0					
ANR	3951906	Argument	"""sys_time=%lu, user_time=%lu, image_size=%lu\\n"""		3951823	1					
ANR	3951907	PrimaryExpression	"""sys_time=%lu, user_time=%lu, image_size=%lu\\n"""		3951823	0					
ANR	3951908	Argument	pi -> sys_time		3951823	2					
ANR	3951909	PtrMemberAccess	pi -> sys_time		3951823	0					
ANR	3951910	Identifier	pi		3951823	0					
ANR	3951911	Identifier	sys_time		3951823	1					
ANR	3951912	Argument	pi -> user_time		3951823	3					
ANR	3951913	PtrMemberAccess	pi -> user_time		3951823	0					
ANR	3951914	Identifier	pi		3951823	0					
ANR	3951915	Identifier	user_time		3951823	1					
ANR	3951916	Argument	get_image_size ( * pi )		3951823	4					
ANR	3951917	CallExpression	get_image_size ( * pi )		3951823	0					
ANR	3951918	Callee	get_image_size		3951823	0					
ANR	3951919	Identifier	get_image_size		3951823	0					
ANR	3951920	ArgumentList	* pi		3951823	1					
ANR	3951921	Argument	* pi		3951823	0					
ANR	3951922	UnaryOperationExpression	* pi		3951823	0					
ANR	3951923	UnaryOperator	*		3951823	0					
ANR	3951924	Identifier	pi		3951823	1					
ANR	3951925	Statement	delete	80:2:2224:2229	3951823	2	True				
ANR	3951926	ExpressionStatement	pi	80:9:2231:2233	3951823	3	True				
ANR	3951927	Identifier	pi		3951823	0					
ANR	3951928	ReturnStatement	return true ;	81:2:2237:2248	3951823	4	True				
ANR	3951929	Identifier	true		3951823	0					
ANR	3951930	IfStatement	if ( pi )		3951823	4					
ANR	3951931	Condition	pi	83:5:2258:2259	3951823	0	True				
ANR	3951932	Identifier	pi		3951823	0					
ANR	3951933	Statement	delete	83:9:2262:2267	3951823	1	True				
ANR	3951934	ExpressionStatement	pi	83:16:2269:2271	3951823	5	True				
ANR	3951935	Identifier	pi		3951823	0					
ANR	3951936	ReturnStatement	return false ;	84:1:2274:2286	3951823	6	True				
ANR	3951937	Identifier	false		3951823	0					
ANR	3951938	ReturnType	bool		3951823	1					
ANR	3951939	Identifier	VMStarterInfo :: updateUsageOfVM		3951823	2					
ANR	3951940	ParameterList			3951823	3					
ANR	3951941	CFGEntryNode	ENTRY		3951823		True				
ANR	3951942	CFGExitNode	EXIT		3951823		True				
ANR	3951943	Symbol	NULL		3951823						
ANR	3951944	Symbol	PROCAPI_OK		3951823						
ANR	3951945	Symbol	get_image_size		3951823						
ANR	3951946	Symbol	pi -> user_time		3951823						
ANR	3951947	Symbol	false		3951823						
ANR	3951948	Symbol	PROCAPI_SUCCESS		3951823						
ANR	3951949	Symbol	D_LOAD		3951823						
ANR	3951950	Symbol	D_FULLDEBUG		3951823						
ANR	3951951	Symbol	DebugFlags		3951823						
ANR	3951952	Symbol	pi -> sys_time		3951823						
ANR	3951953	Symbol	m_vm_pid		3951823						
ANR	3951954	Symbol	ProcAPI :: getProcInfo		3951823						
ANR	3951955	Symbol	true		3951823						
ANR	3951956	Symbol	pi		3951823						
ANR	3951957	Symbol	& m_vm_alive_pinfo		3951823						
ANR	3951958	Symbol	proc_status		3951823						
ANR	3951959	Symbol	* pi		3951823						
ANR	3951960	Function	VMStarterInfo :: getUsageOfVM	87:0:2291:3591							
ANR	3951961	FunctionDef	VMStarterInfo :: getUsageOfVM (ProcFamilyUsage & usage)		3951960	0					
ANR	3951962	CompoundStatement		89:0:2348:3591	3951960	0					
ANR	3951963	IdentifierDeclStatement	bool updated = updateUsageOfVM ( ) ;	90:1:2351:2383	3951960	0	True				
ANR	3951964	IdentifierDecl	updated = updateUsageOfVM ( )		3951960	0					
ANR	3951965	IdentifierDeclType	bool		3951960	0					
ANR	3951966	Identifier	updated		3951960	1					
ANR	3951967	AssignmentExpression	updated = updateUsageOfVM ( )		3951960	2		=			
ANR	3951968	Identifier	updated		3951960	0					
ANR	3951969	CallExpression	updateUsageOfVM ( )		3951960	1					
ANR	3951970	Callee	updateUsageOfVM		3951960	0					
ANR	3951971	Identifier	updateUsageOfVM		3951960	0					
ANR	3951972	ArgumentList			3951960	1					
ANR	3951973	ExpressionStatement	usage . user_cpu_time = m_vm_exited_pinfo . user_time + m_vm_alive_pinfo . user_time	92:1:2387:2465	3951960	1	True				
ANR	3951974	AssignmentExpression	usage . user_cpu_time = m_vm_exited_pinfo . user_time + m_vm_alive_pinfo . user_time		3951960	0		=			
ANR	3951975	MemberAccess	usage . user_cpu_time		3951960	0					
ANR	3951976	Identifier	usage		3951960	0					
ANR	3951977	Identifier	user_cpu_time		3951960	1					
ANR	3951978	AdditiveExpression	m_vm_exited_pinfo . user_time + m_vm_alive_pinfo . user_time		3951960	1		+			
ANR	3951979	MemberAccess	m_vm_exited_pinfo . user_time		3951960	0					
ANR	3951980	Identifier	m_vm_exited_pinfo		3951960	0					
ANR	3951981	Identifier	user_time		3951960	1					
ANR	3951982	MemberAccess	m_vm_alive_pinfo . user_time		3951960	1					
ANR	3951983	Identifier	m_vm_alive_pinfo		3951960	0					
ANR	3951984	Identifier	user_time		3951960	1					
ANR	3951985	ExpressionStatement	usage . sys_cpu_time = m_vm_exited_pinfo . sys_time + m_vm_alive_pinfo . sys_time	93:1:2468:2543	3951960	2	True				
ANR	3951986	AssignmentExpression	usage . sys_cpu_time = m_vm_exited_pinfo . sys_time + m_vm_alive_pinfo . sys_time		3951960	0		=			
ANR	3951987	MemberAccess	usage . sys_cpu_time		3951960	0					
ANR	3951988	Identifier	usage		3951960	0					
ANR	3951989	Identifier	sys_cpu_time		3951960	1					
ANR	3951990	AdditiveExpression	m_vm_exited_pinfo . sys_time + m_vm_alive_pinfo . sys_time		3951960	1		+			
ANR	3951991	MemberAccess	m_vm_exited_pinfo . sys_time		3951960	0					
ANR	3951992	Identifier	m_vm_exited_pinfo		3951960	0					
ANR	3951993	Identifier	sys_time		3951960	1					
ANR	3951994	MemberAccess	m_vm_alive_pinfo . sys_time		3951960	1					
ANR	3951995	Identifier	m_vm_alive_pinfo		3951960	0					
ANR	3951996	Identifier	sys_time		3951960	1					
ANR	3951997	IfStatement	if ( updated )		3951960	3					
ANR	3951998	Condition	updated	95:5:2551:2557	3951960	0	True				
ANR	3951999	Identifier	updated		3951960	0					
ANR	3952000	CompoundStatement		7:15:212:212	3951960	1					
ANR	3952001	ExpressionStatement	usage . percent_cpu = m_vm_alive_pinfo . cpuusage	96:2:2565:2610	3951960	0	True				
ANR	3952002	AssignmentExpression	usage . percent_cpu = m_vm_alive_pinfo . cpuusage		3951960	0		=			
ANR	3952003	MemberAccess	usage . percent_cpu		3951960	0					
ANR	3952004	Identifier	usage		3951960	0					
ANR	3952005	Identifier	percent_cpu		3951960	1					
ANR	3952006	MemberAccess	m_vm_alive_pinfo . cpuusage		3951960	1					
ANR	3952007	Identifier	m_vm_alive_pinfo		3951960	0					
ANR	3952008	Identifier	cpuusage		3951960	1					
ANR	3952009	ElseStatement	else		3951960	0					
ANR	3952010	ExpressionStatement	usage . percent_cpu = 0	98:2:2621:2642	3951960	0	True				
ANR	3952011	AssignmentExpression	usage . percent_cpu = 0		3951960	0		=			
ANR	3952012	MemberAccess	usage . percent_cpu		3951960	0					
ANR	3952013	Identifier	usage		3951960	0					
ANR	3952014	Identifier	percent_cpu		3951960	1					
ANR	3952015	PrimaryExpression	0		3951960	1					
ANR	3952016	IdentifierDeclStatement	unsigned long exited_max_image = get_image_size ( m_vm_exited_pinfo ) ;	100:1:2646:2712	3951960	4	True				
ANR	3952017	IdentifierDecl	exited_max_image = get_image_size ( m_vm_exited_pinfo )		3951960	0					
ANR	3952018	IdentifierDeclType	unsigned long		3951960	0					
ANR	3952019	Identifier	exited_max_image		3951960	1					
ANR	3952020	AssignmentExpression	exited_max_image = get_image_size ( m_vm_exited_pinfo )		3951960	2		=			
ANR	3952021	Identifier	exited_max_image		3951960	0					
ANR	3952022	CallExpression	get_image_size ( m_vm_exited_pinfo )		3951960	1					
ANR	3952023	Callee	get_image_size		3951960	0					
ANR	3952024	Identifier	get_image_size		3951960	0					
ANR	3952025	ArgumentList	m_vm_exited_pinfo		3951960	1					
ANR	3952026	Argument	m_vm_exited_pinfo		3951960	0					
ANR	3952027	Identifier	m_vm_exited_pinfo		3951960	0					
ANR	3952028	IdentifierDeclStatement	unsigned long alive_max_image = get_image_size ( m_vm_alive_pinfo ) ;	101:1:2715:2779	3951960	5	True				
ANR	3952029	IdentifierDecl	alive_max_image = get_image_size ( m_vm_alive_pinfo )		3951960	0					
ANR	3952030	IdentifierDeclType	unsigned long		3951960	0					
ANR	3952031	Identifier	alive_max_image		3951960	1					
ANR	3952032	AssignmentExpression	alive_max_image = get_image_size ( m_vm_alive_pinfo )		3951960	2		=			
ANR	3952033	Identifier	alive_max_image		3951960	0					
ANR	3952034	CallExpression	get_image_size ( m_vm_alive_pinfo )		3951960	1					
ANR	3952035	Callee	get_image_size		3951960	0					
ANR	3952036	Identifier	get_image_size		3951960	0					
ANR	3952037	ArgumentList	m_vm_alive_pinfo		3951960	1					
ANR	3952038	Argument	m_vm_alive_pinfo		3951960	0					
ANR	3952039	Identifier	m_vm_alive_pinfo		3951960	0					
ANR	3952040	ExpressionStatement	usage . max_image_size = ( exited_max_image > alive_max_image ) ? exited_max_image : alive_max_image	103:1:2783:2885	3951960	6	True				
ANR	3952041	AssignmentExpression	usage . max_image_size = ( exited_max_image > alive_max_image ) ? exited_max_image : alive_max_image		3951960	0		=			
ANR	3952042	MemberAccess	usage . max_image_size		3951960	0					
ANR	3952043	Identifier	usage		3951960	0					
ANR	3952044	Identifier	max_image_size		3951960	1					
ANR	3952045	ConditionalExpression	( exited_max_image > alive_max_image ) ? exited_max_image : alive_max_image		3951960	1					
ANR	3952046	Condition	exited_max_image > alive_max_image		3951960	0					
ANR	3952047	RelationalExpression	exited_max_image > alive_max_image		3951960	0		>			
ANR	3952048	Identifier	exited_max_image		3951960	0					
ANR	3952049	Identifier	alive_max_image		3951960	1					
ANR	3952050	Identifier	exited_max_image		3951960	1					
ANR	3952051	Identifier	alive_max_image		3951960	2					
ANR	3952052	IfStatement	if ( updated )		3951960	7					
ANR	3952053	Condition	updated	106:5:2893:2899	3951960	0	True				
ANR	3952054	Identifier	updated		3951960	0					
ANR	3952055	CompoundStatement		18:15:554:554	3951960	1					
ANR	3952056	ExpressionStatement	usage . total_image_size = m_vm_alive_pinfo . imgsize	107:2:2907:2956	3951960	0	True				
ANR	3952057	AssignmentExpression	usage . total_image_size = m_vm_alive_pinfo . imgsize		3951960	0		=			
ANR	3952058	MemberAccess	usage . total_image_size		3951960	0					
ANR	3952059	Identifier	usage		3951960	0					
ANR	3952060	Identifier	total_image_size		3951960	1					
ANR	3952061	MemberAccess	m_vm_alive_pinfo . imgsize		3951960	1					
ANR	3952062	Identifier	m_vm_alive_pinfo		3951960	0					
ANR	3952063	Identifier	imgsize		3951960	1					
ANR	3952064	ExpressionStatement	usage . total_resident_set_size = m_vm_alive_pinfo . rssize	108:2:2960:3015	3951960	1	True				
ANR	3952065	AssignmentExpression	usage . total_resident_set_size = m_vm_alive_pinfo . rssize		3951960	0		=			
ANR	3952066	MemberAccess	usage . total_resident_set_size		3951960	0					
ANR	3952067	Identifier	usage		3951960	0					
ANR	3952068	Identifier	total_resident_set_size		3951960	1					
ANR	3952069	MemberAccess	m_vm_alive_pinfo . rssize		3951960	1					
ANR	3952070	Identifier	m_vm_alive_pinfo		3951960	0					
ANR	3952071	Identifier	rssize		3951960	1					
ANR	3952072	ExpressionStatement	usage . total_proportional_set_size = m_vm_alive_pinfo . pssize	110:2:3032:3091	3951960	2	True				
ANR	3952073	AssignmentExpression	usage . total_proportional_set_size = m_vm_alive_pinfo . pssize		3951960	0		=			
ANR	3952074	MemberAccess	usage . total_proportional_set_size		3951960	0					
ANR	3952075	Identifier	usage		3951960	0					
ANR	3952076	Identifier	total_proportional_set_size		3951960	1					
ANR	3952077	MemberAccess	m_vm_alive_pinfo . pssize		3951960	1					
ANR	3952078	Identifier	m_vm_alive_pinfo		3951960	0					
ANR	3952079	Identifier	pssize		3951960	1					
ANR	3952080	ExpressionStatement	usage . total_proportional_set_size = m_vm_alive_pinfo . pssize_available	111:2:3095:3164	3951960	3	True				
ANR	3952081	AssignmentExpression	usage . total_proportional_set_size = m_vm_alive_pinfo . pssize_available		3951960	0		=			
ANR	3952082	MemberAccess	usage . total_proportional_set_size		3951960	0					
ANR	3952083	Identifier	usage		3951960	0					
ANR	3952084	Identifier	total_proportional_set_size		3951960	1					
ANR	3952085	MemberAccess	m_vm_alive_pinfo . pssize_available		3951960	1					
ANR	3952086	Identifier	m_vm_alive_pinfo		3951960	0					
ANR	3952087	Identifier	pssize_available		3951960	1					
ANR	3952088	ElseStatement	else		3951960	0					
ANR	3952089	CompoundStatement		25:7:831:831	3951960	0					
ANR	3952090	ExpressionStatement	usage . total_image_size = 0	114:2:3184:3210	3951960	0	True				
ANR	3952091	AssignmentExpression	usage . total_image_size = 0		3951960	0		=			
ANR	3952092	MemberAccess	usage . total_image_size		3951960	0					
ANR	3952093	Identifier	usage		3951960	0					
ANR	3952094	Identifier	total_image_size		3951960	1					
ANR	3952095	PrimaryExpression	0		3951960	1					
ANR	3952096	ExpressionStatement	usage . total_resident_set_size = 0	115:8:3220:3253	3951960	1	True				
ANR	3952097	AssignmentExpression	usage . total_resident_set_size = 0		3951960	0		=			
ANR	3952098	MemberAccess	usage . total_resident_set_size		3951960	0					
ANR	3952099	Identifier	usage		3951960	0					
ANR	3952100	Identifier	total_resident_set_size		3951960	1					
ANR	3952101	PrimaryExpression	0		3951960	1					
ANR	3952102	ExpressionStatement	usage . total_proportional_set_size = 0	117:2:3270:3307	3951960	2	True				
ANR	3952103	AssignmentExpression	usage . total_proportional_set_size = 0		3951960	0		=			
ANR	3952104	MemberAccess	usage . total_proportional_set_size		3951960	0					
ANR	3952105	Identifier	usage		3951960	0					
ANR	3952106	Identifier	total_proportional_set_size		3951960	1					
ANR	3952107	PrimaryExpression	0		3951960	1					
ANR	3952108	ExpressionStatement	usage . total_proportional_set_size = false	118:2:3311:3352	3951960	3	True				
ANR	3952109	AssignmentExpression	usage . total_proportional_set_size = false		3951960	0		=			
ANR	3952110	MemberAccess	usage . total_proportional_set_size		3951960	0					
ANR	3952111	Identifier	usage		3951960	0					
ANR	3952112	Identifier	total_proportional_set_size		3951960	1					
ANR	3952113	Identifier	false		3951960	1					
ANR	3952114	IfStatement	if ( ( DebugFlags & D_FULLDEBUG ) && ( DebugFlags & D_LOAD ) )		3951960	8					
ANR	3952115	Condition	( DebugFlags & D_FULLDEBUG ) && ( DebugFlags & D_LOAD )	122:5:3370:3420	3951960	0	True				
ANR	3952116	AndExpression	( DebugFlags & D_FULLDEBUG ) && ( DebugFlags & D_LOAD )		3951960	0		&&			
ANR	3952117	BitAndExpression	DebugFlags & D_FULLDEBUG		3951960	0		&			
ANR	3952118	Identifier	DebugFlags		3951960	0					
ANR	3952119	Identifier	D_FULLDEBUG		3951960	1					
ANR	3952120	BitAndExpression	DebugFlags & D_LOAD		3951960	1		&			
ANR	3952121	Identifier	DebugFlags		3951960	0					
ANR	3952122	Identifier	D_LOAD		3951960	1					
ANR	3952123	CompoundStatement		34:59:1075:1075	3951960	1					
ANR	3952124	Statement	dprintf	123:2:3428:3434	3951960	0	True				
ANR	3952125	Statement	(	123:9:3435:3435	3951960	1	True				
ANR	3952126	Statement	D_FULLDEBUG	123:11:3437:3447	3951960	2	True				
ANR	3952127	Statement	","	123:22:3448:3448	3951960	3	True				
ANR	3952128	Statement	"""VMStarterInfo::getUsageOfVM(): Percent CPU usage """	124:4:3454:3504	3951960	4	True				
ANR	3952129	Statement	"""for VM process with pid %u is: %f\\n"""	125:4:3510:3546	3951960	5	True				
ANR	3952130	Statement	","	125:41:3547:3547	3951960	6	True				
ANR	3952131	Statement	m_vm_pid	126:4:3553:3560	3951960	7	True				
ANR	3952132	Statement	","	126:12:3561:3561	3951960	8	True				
ANR	3952133	Statement	usage	127:4:3567:3571	3951960	9	True				
ANR	3952134	Statement	.	127:9:3572:3572	3951960	10	True				
ANR	3952135	Statement	percent_cpu	127:10:3573:3583	3951960	11	True				
ANR	3952136	Statement	)	127:22:3585:3585	3951960	12	True				
ANR	3952137	ExpressionStatement		127:23:3586:3586	3951960	13	True				
ANR	3952138	ReturnType	void		3951960	1					
ANR	3952139	Identifier	VMStarterInfo :: getUsageOfVM		3951960	2					
ANR	3952140	ParameterList	ProcFamilyUsage & usage		3951960	3					
ANR	3952141	Parameter	ProcFamilyUsage & usage	88:28:2324:2345	3951960	0	True				
ANR	3952142	ParameterType	ProcFamilyUsage &		3951960	0					
ANR	3952143	Identifier	usage		3951960	1					
ANR	3952144	CFGEntryNode	ENTRY		3951960		True				
ANR	3952145	CFGExitNode	EXIT		3951960		True				
ANR	3952146	Symbol	usage . sys_cpu_time		3951960						
ANR	3952147	Symbol	usage		3951960						
ANR	3952148	Symbol	alive_max_image		3951960						
ANR	3952149	Symbol	m_vm_exited_pinfo . user_time		3951960						
ANR	3952150	Symbol	m_vm_alive_pinfo . sys_time		3951960						
ANR	3952151	Symbol	usage . percent_cpu		3951960						
ANR	3952152	Symbol	usage . total_proportional_set_size		3951960						
ANR	3952153	Symbol	exited_max_image		3951960						
ANR	3952154	Symbol	m_vm_exited_pinfo		3951960						
ANR	3952155	Symbol	usage . total_resident_set_size		3951960						
ANR	3952156	Symbol	get_image_size		3951960						
ANR	3952157	Symbol	m_vm_alive_pinfo . cpuusage		3951960						
ANR	3952158	Symbol	usage . max_image_size		3951960						
ANR	3952159	Symbol	false		3951960						
ANR	3952160	Symbol	D_LOAD		3951960						
ANR	3952161	Symbol	m_vm_alive_pinfo . pssize		3951960						
ANR	3952162	Symbol	D_FULLDEBUG		3951960						
ANR	3952163	Symbol	DebugFlags		3951960						
ANR	3952164	Symbol	usage . user_cpu_time		3951960						
ANR	3952165	Symbol	usage . total_image_size		3951960						
ANR	3952166	Symbol	m_vm_alive_pinfo . rssize		3951960						
ANR	3952167	Symbol	m_vm_alive_pinfo		3951960						
ANR	3952168	Symbol	m_vm_exited_pinfo . sys_time		3951960						
ANR	3952169	Symbol	m_vm_alive_pinfo . imgsize		3951960						
ANR	3952170	Symbol	updateUsageOfVM		3951960						
ANR	3952171	Symbol	m_vm_alive_pinfo . user_time		3951960						
ANR	3952172	Symbol	m_vm_alive_pinfo . pssize_available		3951960						
ANR	3952173	Symbol	updated		3951960						
ANR	3952174	Function	VMStarterInfo :: addProcessForVM	131:0:3594:4491							
ANR	3952175	FunctionDef	VMStarterInfo :: addProcessForVM (pid_t vm_pid)		3952174	0					
ANR	3952176	CompoundStatement		133:0:3644:4491	3952174	0					
ANR	3952177	IfStatement	if ( vm_pid < 0 )		3952174	0					
ANR	3952178	Condition	vm_pid < 0	134:5:3651:3660	3952174	0	True				
ANR	3952179	RelationalExpression	vm_pid < 0		3952174	0		<			
ANR	3952180	Identifier	vm_pid		3952174	0					
ANR	3952181	PrimaryExpression	0		3952174	1					
ANR	3952182	CompoundStatement		2:18:19:19	3952174	1					
ANR	3952183	ReturnStatement	return ;	135:2:3668:3674	3952174	0	True				
ANR	3952184	IfStatement	if ( vm_pid == m_vm_pid )		3952174	1					
ANR	3952185	Condition	vm_pid == m_vm_pid	138:5:3685:3702	3952174	0	True				
ANR	3952186	EqualityExpression	vm_pid == m_vm_pid		3952174	0		==			
ANR	3952187	Identifier	vm_pid		3952174	0					
ANR	3952188	Identifier	m_vm_pid		3952174	1					
ANR	3952189	CompoundStatement		6:26:61:61	3952174	1					
ANR	3952190	ReturnStatement	return ;	140:2:3737:3743	3952174	0	True				
ANR	3952191	ExpressionStatement	m_vm_exited_pinfo . sys_time += m_vm_alive_pinfo . sys_time	144:1:3793:3848	3952174	2	True				
ANR	3952192	AssignmentExpression	m_vm_exited_pinfo . sys_time += m_vm_alive_pinfo . sys_time		3952174	0		+=			
ANR	3952193	MemberAccess	m_vm_exited_pinfo . sys_time		3952174	0					
ANR	3952194	Identifier	m_vm_exited_pinfo		3952174	0					
ANR	3952195	Identifier	sys_time		3952174	1					
ANR	3952196	MemberAccess	m_vm_alive_pinfo . sys_time		3952174	1					
ANR	3952197	Identifier	m_vm_alive_pinfo		3952174	0					
ANR	3952198	Identifier	sys_time		3952174	1					
ANR	3952199	ExpressionStatement	m_vm_exited_pinfo . user_time += m_vm_alive_pinfo . user_time	145:1:3851:3908	3952174	3	True				
ANR	3952200	AssignmentExpression	m_vm_exited_pinfo . user_time += m_vm_alive_pinfo . user_time		3952174	0		+=			
ANR	3952201	MemberAccess	m_vm_exited_pinfo . user_time		3952174	0					
ANR	3952202	Identifier	m_vm_exited_pinfo		3952174	0					
ANR	3952203	Identifier	user_time		3952174	1					
ANR	3952204	MemberAccess	m_vm_alive_pinfo . user_time		3952174	1					
ANR	3952205	Identifier	m_vm_alive_pinfo		3952174	0					
ANR	3952206	Identifier	user_time		3952174	1					
ANR	3952207	IfStatement	if ( m_vm_alive_pinfo . rssize > m_vm_exited_pinfo . rssize )		3952174	4					
ANR	3952208	Condition	m_vm_alive_pinfo . rssize > m_vm_exited_pinfo . rssize	146:5:3915:3964	3952174	0	True				
ANR	3952209	RelationalExpression	m_vm_alive_pinfo . rssize > m_vm_exited_pinfo . rssize		3952174	0		>			
ANR	3952210	MemberAccess	m_vm_alive_pinfo . rssize		3952174	0					
ANR	3952211	Identifier	m_vm_alive_pinfo		3952174	0					
ANR	3952212	Identifier	rssize		3952174	1					
ANR	3952213	MemberAccess	m_vm_exited_pinfo . rssize		3952174	1					
ANR	3952214	Identifier	m_vm_exited_pinfo		3952174	0					
ANR	3952215	Identifier	rssize		3952174	1					
ANR	3952216	CompoundStatement		14:58:323:323	3952174	1					
ANR	3952217	ExpressionStatement	m_vm_exited_pinfo . rssize = m_vm_alive_pinfo . rssize	147:2:3972:4022	3952174	0	True				
ANR	3952218	AssignmentExpression	m_vm_exited_pinfo . rssize = m_vm_alive_pinfo . rssize		3952174	0		=			
ANR	3952219	MemberAccess	m_vm_exited_pinfo . rssize		3952174	0					
ANR	3952220	Identifier	m_vm_exited_pinfo		3952174	0					
ANR	3952221	Identifier	rssize		3952174	1					
ANR	3952222	MemberAccess	m_vm_alive_pinfo . rssize		3952174	1					
ANR	3952223	Identifier	m_vm_alive_pinfo		3952174	0					
ANR	3952224	Identifier	rssize		3952174	1					
ANR	3952225	IfStatement	if ( m_vm_alive_pinfo . imgsize > m_vm_exited_pinfo . imgsize )		3952174	5					
ANR	3952226	Condition	m_vm_alive_pinfo . imgsize > m_vm_exited_pinfo . imgsize	149:5:4032:4083	3952174	0	True				
ANR	3952227	RelationalExpression	m_vm_alive_pinfo . imgsize > m_vm_exited_pinfo . imgsize		3952174	0		>			
ANR	3952228	MemberAccess	m_vm_alive_pinfo . imgsize		3952174	0					
ANR	3952229	Identifier	m_vm_alive_pinfo		3952174	0					
ANR	3952230	Identifier	imgsize		3952174	1					
ANR	3952231	MemberAccess	m_vm_exited_pinfo . imgsize		3952174	1					
ANR	3952232	Identifier	m_vm_exited_pinfo		3952174	0					
ANR	3952233	Identifier	imgsize		3952174	1					
ANR	3952234	CompoundStatement		17:60:442:442	3952174	1					
ANR	3952235	ExpressionStatement	m_vm_exited_pinfo . imgsize = m_vm_alive_pinfo . imgsize	150:2:4091:4143	3952174	0	True				
ANR	3952236	AssignmentExpression	m_vm_exited_pinfo . imgsize = m_vm_alive_pinfo . imgsize		3952174	0		=			
ANR	3952237	MemberAccess	m_vm_exited_pinfo . imgsize		3952174	0					
ANR	3952238	Identifier	m_vm_exited_pinfo		3952174	0					
ANR	3952239	Identifier	imgsize		3952174	1					
ANR	3952240	MemberAccess	m_vm_alive_pinfo . imgsize		3952174	1					
ANR	3952241	Identifier	m_vm_alive_pinfo		3952174	0					
ANR	3952242	Identifier	imgsize		3952174	1					
ANR	3952243	IfStatement	if ( m_vm_alive_pinfo . pssize_available && m_vm_alive_pinfo . pssize > m_vm_exited_pinfo . pssize )		3952174	6					
ANR	3952244	Condition	m_vm_alive_pinfo . pssize_available && m_vm_alive_pinfo . pssize > m_vm_exited_pinfo . pssize	153:5:4166:4252	3952174	0	True				
ANR	3952245	AndExpression	m_vm_alive_pinfo . pssize_available && m_vm_alive_pinfo . pssize > m_vm_exited_pinfo . pssize		3952174	0		&&			
ANR	3952246	MemberAccess	m_vm_alive_pinfo . pssize_available		3952174	0					
ANR	3952247	Identifier	m_vm_alive_pinfo		3952174	0					
ANR	3952248	Identifier	pssize_available		3952174	1					
ANR	3952249	RelationalExpression	m_vm_alive_pinfo . pssize > m_vm_exited_pinfo . pssize		3952174	1		>			
ANR	3952250	MemberAccess	m_vm_alive_pinfo . pssize		3952174	0					
ANR	3952251	Identifier	m_vm_alive_pinfo		3952174	0					
ANR	3952252	Identifier	pssize		3952174	1					
ANR	3952253	MemberAccess	m_vm_exited_pinfo . pssize		3952174	1					
ANR	3952254	Identifier	m_vm_exited_pinfo		3952174	0					
ANR	3952255	Identifier	pssize		3952174	1					
ANR	3952256	CompoundStatement		21:95:611:611	3952174	1					
ANR	3952257	ExpressionStatement	m_vm_exited_pinfo . pssize_available = true	154:2:4260:4301	3952174	0	True				
ANR	3952258	AssignmentExpression	m_vm_exited_pinfo . pssize_available = true		3952174	0		=			
ANR	3952259	MemberAccess	m_vm_exited_pinfo . pssize_available		3952174	0					
ANR	3952260	Identifier	m_vm_exited_pinfo		3952174	0					
ANR	3952261	Identifier	pssize_available		3952174	1					
ANR	3952262	Identifier	true		3952174	1					
ANR	3952263	ExpressionStatement	m_vm_exited_pinfo . pssize = m_vm_alive_pinfo . pssize	155:2:4305:4355	3952174	1	True				
ANR	3952264	AssignmentExpression	m_vm_exited_pinfo . pssize = m_vm_alive_pinfo . pssize		3952174	0		=			
ANR	3952265	MemberAccess	m_vm_exited_pinfo . pssize		3952174	0					
ANR	3952266	Identifier	m_vm_exited_pinfo		3952174	0					
ANR	3952267	Identifier	pssize		3952174	1					
ANR	3952268	MemberAccess	m_vm_alive_pinfo . pssize		3952174	1					
ANR	3952269	Identifier	m_vm_alive_pinfo		3952174	0					
ANR	3952270	Identifier	pssize		3952174	1					
ANR	3952271	ExpressionStatement	"memset ( & m_vm_alive_pinfo , 0 , sizeof ( m_vm_alive_pinfo ) )"	160:1:4415:4469	3952174	7	True				
ANR	3952272	CallExpression	"memset ( & m_vm_alive_pinfo , 0 , sizeof ( m_vm_alive_pinfo ) )"		3952174	0					
ANR	3952273	Callee	memset		3952174	0					
ANR	3952274	Identifier	memset		3952174	0					
ANR	3952275	ArgumentList	& m_vm_alive_pinfo		3952174	1					
ANR	3952276	Argument	& m_vm_alive_pinfo		3952174	0					
ANR	3952277	UnaryOperationExpression	& m_vm_alive_pinfo		3952174	0					
ANR	3952278	UnaryOperator	&		3952174	0					
ANR	3952279	Identifier	m_vm_alive_pinfo		3952174	1					
ANR	3952280	Argument	0		3952174	1					
ANR	3952281	PrimaryExpression	0		3952174	0					
ANR	3952282	Argument	sizeof ( m_vm_alive_pinfo )		3952174	2					
ANR	3952283	SizeofExpression	sizeof ( m_vm_alive_pinfo )		3952174	0					
ANR	3952284	Sizeof	sizeof		3952174	0					
ANR	3952285	SizeofOperand	m_vm_alive_pinfo		3952174	1					
ANR	3952286	ExpressionStatement	m_vm_pid = vm_pid	161:1:4472:4489	3952174	8	True				
ANR	3952287	AssignmentExpression	m_vm_pid = vm_pid		3952174	0		=			
ANR	3952288	Identifier	m_vm_pid		3952174	0					
ANR	3952289	Identifier	vm_pid		3952174	1					
ANR	3952290	ReturnType	void		3952174	1					
ANR	3952291	Identifier	VMStarterInfo :: addProcessForVM		3952174	2					
ANR	3952292	ParameterList	pid_t vm_pid		3952174	3					
ANR	3952293	Parameter	pid_t vm_pid	132:31:3630:3641	3952174	0	True				
ANR	3952294	ParameterType	pid_t		3952174	0					
ANR	3952295	Identifier	vm_pid		3952174	1					
ANR	3952296	CFGEntryNode	ENTRY		3952174		True				
ANR	3952297	CFGExitNode	EXIT		3952174		True				
ANR	3952298	Symbol	m_vm_alive_pinfo . pssize		3952174						
ANR	3952299	Symbol	vm_pid		3952174						
ANR	3952300	Symbol	m_vm_exited_pinfo . pssize		3952174						
ANR	3952301	Symbol	m_vm_pid		3952174						
ANR	3952302	Symbol	m_vm_exited_pinfo . user_time		3952174						
ANR	3952303	Symbol	m_vm_alive_pinfo . rssize		3952174						
ANR	3952304	Symbol	m_vm_alive_pinfo		3952174						
ANR	3952305	Symbol	m_vm_exited_pinfo . sys_time		3952174						
ANR	3952306	Symbol	m_vm_alive_pinfo . sys_time		3952174						
ANR	3952307	Symbol	m_vm_alive_pinfo . imgsize		3952174						
ANR	3952308	Symbol	true		3952174						
ANR	3952309	Symbol	& m_vm_alive_pinfo		3952174						
ANR	3952310	Symbol	m_vm_alive_pinfo . user_time		3952174						
ANR	3952311	Symbol	m_vm_exited_pinfo . rssize		3952174						
ANR	3952312	Symbol	m_vm_exited_pinfo . imgsize		3952174						
ANR	3952313	Symbol	m_vm_alive_pinfo . pssize_available		3952174						
ANR	3952314	Symbol	m_vm_exited_pinfo		3952174						
ANR	3952315	Symbol	m_vm_exited_pinfo . pssize_available		3952174						
ANR	3952316	Function	VMStarterInfo :: getProcessForVM	164:0:4494:4557							
ANR	3952317	FunctionDef	VMStarterInfo :: getProcessForVM ()		3952316	0					
ANR	3952318	CompoundStatement		166:0:4537:4557	3952316	0					
ANR	3952319	ReturnStatement	return m_vm_pid ;	167:1:4540:4555	3952316	0	True				
ANR	3952320	Identifier	m_vm_pid		3952316	0					
ANR	3952321	ReturnType	pid_t		3952316	1					
ANR	3952322	Identifier	VMStarterInfo :: getProcessForVM		3952316	2					
ANR	3952323	ParameterList			3952316	3					
ANR	3952324	CFGEntryNode	ENTRY		3952316		True				
ANR	3952325	CFGExitNode	EXIT		3952316		True				
ANR	3952326	Symbol	m_vm_pid		3952316						
ANR	3952327	Function	VMStarterInfo :: addMACForVM	170:0:4560:4628							
ANR	3952328	FunctionDef	VMStarterInfo :: addMACForVM (const char * mac)		3952327	0					
ANR	3952329	CompoundStatement		172:0:4609:4628	3952327	0					
ANR	3952330	ExpressionStatement	m_vm_mac = mac	173:1:4612:4626	3952327	0	True				
ANR	3952331	AssignmentExpression	m_vm_mac = mac		3952327	0		=			
ANR	3952332	Identifier	m_vm_mac		3952327	0					
ANR	3952333	Identifier	mac		3952327	1					
ANR	3952334	ReturnType	void		3952327	1					
ANR	3952335	Identifier	VMStarterInfo :: addMACForVM		3952327	2					
ANR	3952336	ParameterList	const char * mac		3952327	3					
ANR	3952337	Parameter	const char * mac	171:27:4592:4606	3952327	0	True				
ANR	3952338	ParameterType	const char *		3952327	0					
ANR	3952339	Identifier	mac		3952327	1					
ANR	3952340	CFGEntryNode	ENTRY		3952327		True				
ANR	3952341	CFGExitNode	EXIT		3952327		True				
ANR	3952342	Symbol	m_vm_mac		3952327						
ANR	3952343	Symbol	mac		3952327						
ANR	3952344	Function	VMStarterInfo :: getMACForVM	176:0:4631:4705							
ANR	3952345	FunctionDef	VMStarterInfo :: getMACForVM ()		3952344	0					
ANR	3952346	CompoundStatement		178:0:4677:4705	3952344	0					
ANR	3952347	ReturnStatement	return m_vm_mac . Value ( ) ;	179:1:4680:4703	3952344	0	True				
ANR	3952348	CallExpression	m_vm_mac . Value ( )		3952344	0					
ANR	3952349	Callee	m_vm_mac . Value		3952344	0					
ANR	3952350	MemberAccess	m_vm_mac . Value		3952344	0					
ANR	3952351	Identifier	m_vm_mac		3952344	0					
ANR	3952352	Identifier	Value		3952344	1					
ANR	3952353	ArgumentList			3952344	1					
ANR	3952354	ReturnType	const char *		3952344	1					
ANR	3952355	Identifier	VMStarterInfo :: getMACForVM		3952344	2					
ANR	3952356	ParameterList			3952344	3					
ANR	3952357	CFGEntryNode	ENTRY		3952344		True				
ANR	3952358	CFGExitNode	EXIT		3952344		True				
ANR	3952359	Symbol	m_vm_mac		3952344						
ANR	3952360	Symbol	m_vm_mac . Value		3952344						
ANR	3952361	Function	VMStarterInfo :: addIPForVM	182:0:4708:4772							
ANR	3952362	FunctionDef	VMStarterInfo :: addIPForVM (const char * ip)		3952361	0					
ANR	3952363	CompoundStatement		184:0:4755:4772	3952361	0					
ANR	3952364	ExpressionStatement	m_vm_ip = ip	185:1:4758:4770	3952361	0	True				
ANR	3952365	AssignmentExpression	m_vm_ip = ip		3952361	0		=			
ANR	3952366	Identifier	m_vm_ip		3952361	0					
ANR	3952367	Identifier	ip		3952361	1					
ANR	3952368	ReturnType	void		3952361	1					
ANR	3952369	Identifier	VMStarterInfo :: addIPForVM		3952361	2					
ANR	3952370	ParameterList	const char * ip		3952361	3					
ANR	3952371	Parameter	const char * ip	183:26:4739:4752	3952361	0	True				
ANR	3952372	ParameterType	const char *		3952361	0					
ANR	3952373	Identifier	ip		3952361	1					
ANR	3952374	CFGEntryNode	ENTRY		3952361		True				
ANR	3952375	CFGExitNode	EXIT		3952361		True				
ANR	3952376	Symbol	ip		3952361						
ANR	3952377	Symbol	m_vm_ip		3952361						
ANR	3952378	Function	VMStarterInfo :: getIPForVM	188:0:4775:4847							
ANR	3952379	FunctionDef	VMStarterInfo :: getIPForVM ()		3952378	0					
ANR	3952380	CompoundStatement		190:0:4820:4847	3952378	0					
ANR	3952381	ReturnStatement	return m_vm_ip . Value ( ) ;	191:1:4823:4845	3952378	0	True				
ANR	3952382	CallExpression	m_vm_ip . Value ( )		3952378	0					
ANR	3952383	Callee	m_vm_ip . Value		3952378	0					
ANR	3952384	MemberAccess	m_vm_ip . Value		3952378	0					
ANR	3952385	Identifier	m_vm_ip		3952378	0					
ANR	3952386	Identifier	Value		3952378	1					
ANR	3952387	ArgumentList			3952378	1					
ANR	3952388	ReturnType	const char *		3952378	1					
ANR	3952389	Identifier	VMStarterInfo :: getIPForVM		3952378	2					
ANR	3952390	ParameterList			3952378	3					
ANR	3952391	CFGEntryNode	ENTRY		3952378		True				
ANR	3952392	CFGExitNode	EXIT		3952378		True				
ANR	3952393	Symbol	m_vm_ip . Value		3952378						
ANR	3952394	Symbol	m_vm_ip		3952378						
ANR	3952395	Function	VMUniverseMgr :: VMUniverseMgr	212:0:5222:5452							
ANR	3952396	FunctionDef	VMUniverseMgr :: VMUniverseMgr ()		3952395	0					
ANR	3952397	CompoundStatement		213:0:5253:5452	3952395	0					
ANR	3952398	ExpressionStatement	m_needCheck = false	214:1:5256:5275	3952395	0	True				
ANR	3952399	AssignmentExpression	m_needCheck = false		3952395	0		=			
ANR	3952400	Identifier	m_needCheck		3952395	0					
ANR	3952401	Identifier	false		3952395	1					
ANR	3952402	ExpressionStatement	m_starter_has_vmcode = false	215:1:5278:5306	3952395	1	True				
ANR	3952403	AssignmentExpression	m_starter_has_vmcode = false		3952395	0		=			
ANR	3952404	Identifier	m_starter_has_vmcode		3952395	0					
ANR	3952405	Identifier	false		3952395	1					
ANR	3952406	ExpressionStatement	m_vm_max_memory = 0	216:1:5309:5328	3952395	2	True				
ANR	3952407	AssignmentExpression	m_vm_max_memory = 0		3952395	0		=			
ANR	3952408	Identifier	m_vm_max_memory		3952395	0					
ANR	3952409	PrimaryExpression	0		3952395	1					
ANR	3952410	ExpressionStatement	m_vm_used_memory = 0	217:1:5331:5351	3952395	3	True				
ANR	3952411	AssignmentExpression	m_vm_used_memory = 0		3952395	0		=			
ANR	3952412	Identifier	m_vm_used_memory		3952395	0					
ANR	3952413	PrimaryExpression	0		3952395	1					
ANR	3952414	ExpressionStatement	m_vm_max_num = 0	218:1:5354:5370	3952395	4	True				
ANR	3952415	AssignmentExpression	m_vm_max_num = 0		3952395	0		=			
ANR	3952416	Identifier	m_vm_max_num		3952395	0					
ANR	3952417	PrimaryExpression	0		3952395	1					
ANR	3952418	ExpressionStatement	m_vm_networking = false	219:1:5385:5408	3952395	5	True				
ANR	3952419	AssignmentExpression	m_vm_networking = false		3952395	0		=			
ANR	3952420	Identifier	m_vm_networking		3952395	0					
ANR	3952421	Identifier	false		3952395	1					
ANR	3952422	ExpressionStatement	m_check_tid = - 1	220:1:5411:5427	3952395	6	True				
ANR	3952423	AssignmentExpression	m_check_tid = - 1		3952395	0		=			
ANR	3952424	Identifier	m_check_tid		3952395	0					
ANR	3952425	UnaryOperationExpression	- 1		3952395	1					
ANR	3952426	UnaryOperator	-		3952395	0					
ANR	3952427	PrimaryExpression	1		3952395	1					
ANR	3952428	ExpressionStatement	m_check_interval = 0	221:1:5430:5450	3952395	7	True				
ANR	3952429	AssignmentExpression	m_check_interval = 0		3952395	0		=			
ANR	3952430	Identifier	m_check_interval		3952395	0					
ANR	3952431	PrimaryExpression	0		3952395	1					
ANR	3952432	Identifier	VMUniverseMgr :: VMUniverseMgr		3952395	1					
ANR	3952433	ParameterList			3952395	2					
ANR	3952434	CFGEntryNode	ENTRY		3952395		True				
ANR	3952435	CFGExitNode	EXIT		3952395		True				
ANR	3952436	Symbol	m_vm_max_memory		3952395						
ANR	3952437	Symbol	m_starter_has_vmcode		3952395						
ANR	3952438	Symbol	m_vm_networking		3952395						
ANR	3952439	Symbol	m_vm_max_num		3952395						
ANR	3952440	Symbol	false		3952395						
ANR	3952441	Symbol	m_check_interval		3952395						
ANR	3952442	Symbol	m_vm_used_memory		3952395						
ANR	3952443	Symbol	m_needCheck		3952395						
ANR	3952444	Symbol	m_check_tid		3952395						
ANR	3952445	Function	VMUniverseMgr :: ~VMUniverseMgr	224:0:5455:5580							
ANR	3952446	FunctionDef	VMUniverseMgr :: ~VMUniverseMgr ()		3952445	0					
ANR	3952447	CompoundStatement		225:0:5487:5580	3952445	0					
ANR	3952448	IfStatement	if ( m_check_tid != - 1 )		3952445	0					
ANR	3952449	Condition	m_check_tid != - 1	226:5:5494:5510	3952445	0	True				
ANR	3952450	EqualityExpression	m_check_tid != - 1		3952445	0		!=			
ANR	3952451	Identifier	m_check_tid		3952445	0					
ANR	3952452	UnaryOperationExpression	- 1		3952445	1					
ANR	3952453	UnaryOperator	-		3952445	0					
ANR	3952454	PrimaryExpression	1		3952445	1					
ANR	3952455	CompoundStatement		2:25:26:26	3952445	1					
ANR	3952456	ExpressionStatement	daemonCore -> Cancel_Timer ( m_check_tid )	227:2:5518:5555	3952445	0	True				
ANR	3952457	CallExpression	daemonCore -> Cancel_Timer ( m_check_tid )		3952445	0					
ANR	3952458	Callee	daemonCore -> Cancel_Timer		3952445	0					
ANR	3952459	PtrMemberAccess	daemonCore -> Cancel_Timer		3952445	0					
ANR	3952460	Identifier	daemonCore		3952445	0					
ANR	3952461	Identifier	Cancel_Timer		3952445	1					
ANR	3952462	ArgumentList	m_check_tid		3952445	1					
ANR	3952463	Argument	m_check_tid		3952445	0					
ANR	3952464	Identifier	m_check_tid		3952445	0					
ANR	3952465	ExpressionStatement	m_check_tid = - 1	228:2:5559:5575	3952445	1	True				
ANR	3952466	AssignmentExpression	m_check_tid = - 1		3952445	0		=			
ANR	3952467	Identifier	m_check_tid		3952445	0					
ANR	3952468	UnaryOperationExpression	- 1		3952445	1					
ANR	3952469	UnaryOperator	-		3952445	0					
ANR	3952470	PrimaryExpression	1		3952445	1					
ANR	3952471	Identifier	VMUniverseMgr :: ~VMUniverseMgr		3952445	1					
ANR	3952472	ParameterList			3952445	2					
ANR	3952473	CFGEntryNode	ENTRY		3952445		True				
ANR	3952474	CFGExitNode	EXIT		3952445		True				
ANR	3952475	Symbol	daemonCore		3952445						
ANR	3952476	Symbol	m_check_tid		3952445						
ANR	3952477	Function	VMUniverseMgr :: init	232:0:5583:6919							
ANR	3952478	FunctionDef	VMUniverseMgr :: init ()		3952477	0					
ANR	3952479	CompoundStatement		234:0:5616:6919	3952477	0					
ANR	3952480	IdentifierDeclStatement	MyString vmtype ;	235:1:5619:5634	3952477	0	True				
ANR	3952481	IdentifierDecl	vmtype		3952477	0					
ANR	3952482	IdentifierDeclType	MyString		3952477	0					
ANR	3952483	Identifier	vmtype		3952477	1					
ANR	3952484	IdentifierDeclStatement	MyString vmgahppath ;	236:1:5637:5656	3952477	1	True				
ANR	3952485	IdentifierDecl	vmgahppath		3952477	0					
ANR	3952486	IdentifierDeclType	MyString		3952477	0					
ANR	3952487	Identifier	vmgahppath		3952477	1					
ANR	3952488	ExpressionStatement	"m_vm_type = """""	238:1:5660:5674	3952477	2	True				
ANR	3952489	AssignmentExpression	"m_vm_type = """""		3952477	0		=			
ANR	3952490	Identifier	m_vm_type		3952477	0					
ANR	3952491	PrimaryExpression	""""""		3952477	1					
ANR	3952492	IfStatement	if ( ! m_starter_has_vmcode )		3952477	3					
ANR	3952493	Condition	! m_starter_has_vmcode	240:5:5682:5702	3952477	0	True				
ANR	3952494	UnaryOperationExpression	! m_starter_has_vmcode		3952477	0					
ANR	3952495	UnaryOperator	!		3952477	0					
ANR	3952496	Identifier	m_starter_has_vmcode		3952477	1					
ANR	3952497	CompoundStatement		7:29:89:89	3952477	1					
ANR	3952498	Statement	dprintf	241:2:5710:5716	3952477	0	True				
ANR	3952499	Statement	(	241:9:5717:5717	3952477	1	True				
ANR	3952500	Statement	D_ALWAYS	241:11:5719:5726	3952477	2	True				
ANR	3952501	Statement	","	241:19:5727:5727	3952477	3	True				
ANR	3952502	Statement	"""VM universe will be disabled, """	241:21:5729:5760	3952477	4	True				
ANR	3952503	Statement	"""because Starter doesn't support vm universe\\n"""	242:4:5766:5812	3952477	5	True				
ANR	3952504	Statement	)	242:51:5813:5813	3952477	6	True				
ANR	3952505	ExpressionStatement		242:52:5814:5814	3952477	7	True				
ANR	3952506	ReturnStatement	return false ;	243:2:5818:5830	3952477	8	True				
ANR	3952507	Identifier	false		3952477	0					
ANR	3952508	IdentifierDeclStatement	char * tmp = NULL ;	246:1:5837:5853	3952477	4	True				
ANR	3952509	IdentifierDecl	* tmp = NULL		3952477	0					
ANR	3952510	IdentifierDeclType	char *		3952477	0					
ANR	3952511	Identifier	tmp		3952477	1					
ANR	3952512	AssignmentExpression	* tmp = NULL		3952477	2		=			
ANR	3952513	Identifier	NULL		3952477	0					
ANR	3952514	Identifier	NULL		3952477	1					
ANR	3952515	ExpressionStatement	"tmp = param ( ""VM_TYPE"" )"	247:1:5856:5880	3952477	5	True				
ANR	3952516	AssignmentExpression	"tmp = param ( ""VM_TYPE"" )"		3952477	0		=			
ANR	3952517	Identifier	tmp		3952477	0					
ANR	3952518	CallExpression	"param ( ""VM_TYPE"" )"		3952477	1					
ANR	3952519	Callee	param		3952477	0					
ANR	3952520	Identifier	param		3952477	0					
ANR	3952521	ArgumentList	"""VM_TYPE"""		3952477	1					
ANR	3952522	Argument	"""VM_TYPE"""		3952477	0					
ANR	3952523	PrimaryExpression	"""VM_TYPE"""		3952477	0					
ANR	3952524	IfStatement	if ( ! tmp )		3952477	6					
ANR	3952525	Condition	! tmp	248:5:5887:5890	3952477	0	True				
ANR	3952526	UnaryOperationExpression	! tmp		3952477	0					
ANR	3952527	UnaryOperator	!		3952477	0					
ANR	3952528	Identifier	tmp		3952477	1					
ANR	3952529	CompoundStatement		15:12:277:277	3952477	1					
ANR	3952530	ReturnStatement	return false ;	249:2:5898:5910	3952477	0	True				
ANR	3952531	Identifier	false		3952477	0					
ANR	3952532	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""VM_TYPE(%s) is defined in condor config file\\n"" , tmp )"	252:1:5917:5993	3952477	7	True				
ANR	3952533	CallExpression	"dprintf ( D_FULLDEBUG , ""VM_TYPE(%s) is defined in condor config file\\n"" , tmp )"		3952477	0					
ANR	3952534	Callee	dprintf		3952477	0					
ANR	3952535	Identifier	dprintf		3952477	0					
ANR	3952536	ArgumentList	D_FULLDEBUG		3952477	1					
ANR	3952537	Argument	D_FULLDEBUG		3952477	0					
ANR	3952538	Identifier	D_FULLDEBUG		3952477	0					
ANR	3952539	Argument	"""VM_TYPE(%s) is defined in condor config file\\n"""		3952477	1					
ANR	3952540	PrimaryExpression	"""VM_TYPE(%s) is defined in condor config file\\n"""		3952477	0					
ANR	3952541	Argument	tmp		3952477	2					
ANR	3952542	Identifier	tmp		3952477	0					
ANR	3952543	ExpressionStatement	vmtype = tmp	253:1:5996:6008	3952477	8	True				
ANR	3952544	AssignmentExpression	vmtype = tmp		3952477	0		=			
ANR	3952545	Identifier	vmtype		3952477	0					
ANR	3952546	Identifier	tmp		3952477	1					
ANR	3952547	ExpressionStatement	free ( tmp )	254:1:6011:6020	3952477	9	True				
ANR	3952548	CallExpression	free ( tmp )		3952477	0					
ANR	3952549	Callee	free		3952477	0					
ANR	3952550	Identifier	free		3952477	0					
ANR	3952551	ArgumentList	tmp		3952477	1					
ANR	3952552	Argument	tmp		3952477	0					
ANR	3952553	Identifier	tmp		3952477	0					
ANR	3952554	ExpressionStatement	"tmp = param ( ""VM_GAHP_SERVER"" )"	256:1:6024:6055	3952477	10	True				
ANR	3952555	AssignmentExpression	"tmp = param ( ""VM_GAHP_SERVER"" )"		3952477	0		=			
ANR	3952556	Identifier	tmp		3952477	0					
ANR	3952557	CallExpression	"param ( ""VM_GAHP_SERVER"" )"		3952477	1					
ANR	3952558	Callee	param		3952477	0					
ANR	3952559	Identifier	param		3952477	0					
ANR	3952560	ArgumentList	"""VM_GAHP_SERVER"""		3952477	1					
ANR	3952561	Argument	"""VM_GAHP_SERVER"""		3952477	0					
ANR	3952562	PrimaryExpression	"""VM_GAHP_SERVER"""		3952477	0					
ANR	3952563	IfStatement	if ( ! tmp )		3952477	11					
ANR	3952564	Condition	! tmp	257:5:6062:6065	3952477	0	True				
ANR	3952565	UnaryOperationExpression	! tmp		3952477	0					
ANR	3952566	UnaryOperator	!		3952477	0					
ANR	3952567	Identifier	tmp		3952477	1					
ANR	3952568	CompoundStatement		24:12:452:452	3952477	1					
ANR	3952569	Statement	dprintf	258:2:6073:6079	3952477	0	True				
ANR	3952570	Statement	(	258:9:6080:6080	3952477	1	True				
ANR	3952571	Statement	D_ALWAYS	258:11:6082:6089	3952477	2	True				
ANR	3952572	Statement	","	258:19:6090:6090	3952477	3	True				
ANR	3952573	Statement	"""To support vm universe, '%s' must be defined """	258:21:6092:6138	3952477	4	True				
ANR	3952574	Statement	"""in condor config file\\n"""	259:4:6144:6168	3952477	5	True				
ANR	3952575	Statement	","	259:29:6169:6169	3952477	6	True				
ANR	3952576	Statement	"""VM_GAHP_SERVER"""	259:31:6171:6186	3952477	7	True				
ANR	3952577	Statement	)	259:47:6187:6187	3952477	8	True				
ANR	3952578	ExpressionStatement		259:48:6188:6188	3952477	9	True				
ANR	3952579	ReturnStatement	return false ;	260:2:6193:6205	3952477	10	True				
ANR	3952580	Identifier	false		3952477	0					
ANR	3952581	IfStatement	"if ( access ( tmp , X_OK ) < 0 )"		3952477	12					
ANR	3952582	Condition	"access ( tmp , X_OK ) < 0"	263:5:6216:6235	3952477	0	True				
ANR	3952583	RelationalExpression	"access ( tmp , X_OK ) < 0"		3952477	0		<			
ANR	3952584	CallExpression	"access ( tmp , X_OK )"		3952477	0					
ANR	3952585	Callee	access		3952477	0					
ANR	3952586	Identifier	access		3952477	0					
ANR	3952587	ArgumentList	tmp		3952477	1					
ANR	3952588	Argument	tmp		3952477	0					
ANR	3952589	Identifier	tmp		3952477	0					
ANR	3952590	Argument	X_OK		3952477	1					
ANR	3952591	Identifier	X_OK		3952477	0					
ANR	3952592	PrimaryExpression	0		3952477	1					
ANR	3952593	CompoundStatement		30:27:621:621	3952477	1					
ANR	3952594	ExpressionStatement	"dprintf ( D_ALWAYS , ""To support vm universe, '%s' must be executable\\n"" , tmp )"	265:2:6283:6359	3952477	0	True				
ANR	3952595	CallExpression	"dprintf ( D_ALWAYS , ""To support vm universe, '%s' must be executable\\n"" , tmp )"		3952477	0					
ANR	3952596	Callee	dprintf		3952477	0					
ANR	3952597	Identifier	dprintf		3952477	0					
ANR	3952598	ArgumentList	D_ALWAYS		3952477	1					
ANR	3952599	Argument	D_ALWAYS		3952477	0					
ANR	3952600	Identifier	D_ALWAYS		3952477	0					
ANR	3952601	Argument	"""To support vm universe, '%s' must be executable\\n"""		3952477	1					
ANR	3952602	PrimaryExpression	"""To support vm universe, '%s' must be executable\\n"""		3952477	0					
ANR	3952603	Argument	tmp		3952477	2					
ANR	3952604	Identifier	tmp		3952477	0					
ANR	3952605	ExpressionStatement	free ( tmp )	266:2:6364:6373	3952477	1	True				
ANR	3952606	CallExpression	free ( tmp )		3952477	0					
ANR	3952607	Callee	free		3952477	0					
ANR	3952608	Identifier	free		3952477	0					
ANR	3952609	ArgumentList	tmp		3952477	1					
ANR	3952610	Argument	tmp		3952477	0					
ANR	3952611	Identifier	tmp		3952477	0					
ANR	3952612	ReturnStatement	return false ;	267:2:6377:6389	3952477	2	True				
ANR	3952613	Identifier	false		3952477	0					
ANR	3952614	ExpressionStatement	vmgahppath = tmp	269:1:6395:6411	3952477	13	True				
ANR	3952615	AssignmentExpression	vmgahppath = tmp		3952477	0		=			
ANR	3952616	Identifier	vmgahppath		3952477	0					
ANR	3952617	Identifier	tmp		3952477	1					
ANR	3952618	ExpressionStatement	free ( tmp )	270:1:6414:6423	3952477	14	True				
ANR	3952619	CallExpression	free ( tmp )		3952477	0					
ANR	3952620	Callee	free		3952477	0					
ANR	3952621	Identifier	free		3952477	0					
ANR	3952622	ArgumentList	tmp		3952477	1					
ANR	3952623	Argument	tmp		3952477	0					
ANR	3952624	Identifier	tmp		3952477	0					
ANR	3952625	ExpressionStatement	"m_vm_max_num = param_integer ( ""VM_MAX_NUMBER"" , 0 , 0 )"	272:1:6427:6478	3952477	15	True				
ANR	3952626	AssignmentExpression	"m_vm_max_num = param_integer ( ""VM_MAX_NUMBER"" , 0 , 0 )"		3952477	0		=			
ANR	3952627	Identifier	m_vm_max_num		3952477	0					
ANR	3952628	CallExpression	"param_integer ( ""VM_MAX_NUMBER"" , 0 , 0 )"		3952477	1					
ANR	3952629	Callee	param_integer		3952477	0					
ANR	3952630	Identifier	param_integer		3952477	0					
ANR	3952631	ArgumentList	"""VM_MAX_NUMBER"""		3952477	1					
ANR	3952632	Argument	"""VM_MAX_NUMBER"""		3952477	0					
ANR	3952633	PrimaryExpression	"""VM_MAX_NUMBER"""		3952477	0					
ANR	3952634	Argument	0		3952477	1					
ANR	3952635	PrimaryExpression	0		3952477	0					
ANR	3952636	Argument	0		3952477	2					
ANR	3952637	PrimaryExpression	0		3952477	0					
ANR	3952638	IfStatement	"if ( testVMGahp ( vmgahppath . Value ( ) , vmtype . Value ( ) ) == false )"		3952477	16					
ANR	3952639	Condition	"testVMGahp ( vmgahppath . Value ( ) , vmtype . Value ( ) ) == false"	278:5:6689:6743	3952477	0	True				
ANR	3952640	EqualityExpression	"testVMGahp ( vmgahppath . Value ( ) , vmtype . Value ( ) ) == false"		3952477	0		==			
ANR	3952641	CallExpression	"testVMGahp ( vmgahppath . Value ( ) , vmtype . Value ( ) )"		3952477	0					
ANR	3952642	Callee	testVMGahp		3952477	0					
ANR	3952643	Identifier	testVMGahp		3952477	0					
ANR	3952644	ArgumentList	vmgahppath . Value ( )		3952477	1					
ANR	3952645	Argument	vmgahppath . Value ( )		3952477	0					
ANR	3952646	CallExpression	vmgahppath . Value ( )		3952477	0					
ANR	3952647	Callee	vmgahppath . Value		3952477	0					
ANR	3952648	MemberAccess	vmgahppath . Value		3952477	0					
ANR	3952649	Identifier	vmgahppath		3952477	0					
ANR	3952650	Identifier	Value		3952477	1					
ANR	3952651	ArgumentList			3952477	1					
ANR	3952652	Argument	vmtype . Value ( )		3952477	1					
ANR	3952653	CallExpression	vmtype . Value ( )		3952477	0					
ANR	3952654	Callee	vmtype . Value		3952477	0					
ANR	3952655	MemberAccess	vmtype . Value		3952477	0					
ANR	3952656	Identifier	vmtype		3952477	0					
ANR	3952657	Identifier	Value		3952477	1					
ANR	3952658	ArgumentList			3952477	1					
ANR	3952659	Identifier	false		3952477	1					
ANR	3952660	CompoundStatement		45:63:1130:1130	3952477	1					
ANR	3952661	Statement	dprintf	279:2:6751:6757	3952477	0	True				
ANR	3952662	Statement	(	279:9:6758:6758	3952477	1	True				
ANR	3952663	Statement	D_ALWAYS	279:11:6760:6767	3952477	2	True				
ANR	3952664	Statement	","	279:19:6768:6768	3952477	3	True				
ANR	3952665	Statement	"""Test of vmgahp for VM_TYPE('%s') failed. """	279:21:6770:6812	3952477	4	True				
ANR	3952666	Statement	"""So we disabled VM Universe\\n"""	280:4:6818:6847	3952477	5	True				
ANR	3952667	Statement	","	280:34:6848:6848	3952477	6	True				
ANR	3952668	Statement	vmtype	280:36:6850:6855	3952477	7	True				
ANR	3952669	Statement	.	280:42:6856:6856	3952477	8	True				
ANR	3952670	Statement	Value	280:43:6857:6861	3952477	9	True				
ANR	3952671	Statement	(	280:48:6862:6862	3952477	10	True				
ANR	3952672	Statement	)	280:49:6863:6863	3952477	11	True				
ANR	3952673	Statement	)	280:50:6864:6864	3952477	12	True				
ANR	3952674	ExpressionStatement		280:51:6865:6865	3952477	13	True				
ANR	3952675	ExpressionStatement	"m_vm_type = """""	281:2:6869:6883	3952477	14	True				
ANR	3952676	AssignmentExpression	"m_vm_type = """""		3952477	0		=			
ANR	3952677	Identifier	m_vm_type		3952477	0					
ANR	3952678	PrimaryExpression	""""""		3952477	1					
ANR	3952679	ReturnStatement	return false ;	282:2:6887:6899	3952477	15	True				
ANR	3952680	Identifier	false		3952477	0					
ANR	3952681	ReturnStatement	return true ;	285:1:6906:6917	3952477	17	True				
ANR	3952682	Identifier	true		3952477	0					
ANR	3952683	ReturnType	bool		3952477	1					
ANR	3952684	Identifier	VMUniverseMgr :: init		3952477	2					
ANR	3952685	ParameterList			3952477	3					
ANR	3952686	CFGEntryNode	ENTRY		3952477		True				
ANR	3952687	CFGExitNode	EXIT		3952477		True				
ANR	3952688	Symbol	vmtype		3952477						
ANR	3952689	Symbol	NULL		3952477						
ANR	3952690	Symbol	access		3952477						
ANR	3952691	Symbol	m_starter_has_vmcode		3952477						
ANR	3952692	Symbol	false		3952477						
ANR	3952693	Symbol	D_ALWAYS		3952477						
ANR	3952694	Symbol	D_FULLDEBUG		3952477						
ANR	3952695	Symbol	X_OK		3952477						
ANR	3952696	Symbol	testVMGahp		3952477						
ANR	3952697	Symbol	vmgahppath . Value		3952477						
ANR	3952698	Symbol	m_vm_type		3952477						
ANR	3952699	Symbol	param		3952477						
ANR	3952700	Symbol	tmp		3952477						
ANR	3952701	Symbol	m_vm_max_num		3952477						
ANR	3952702	Symbol	vmtype . Value		3952477						
ANR	3952703	Symbol	vmgahppath		3952477						
ANR	3952704	Symbol	true		3952477						
ANR	3952705	Symbol	param_integer		3952477						
ANR	3952706	Function	VMUniverseMgr :: printVMGahpInfo	288:0:6922:7112							
ANR	3952707	FunctionDef	VMUniverseMgr :: printVMGahpInfo (int debug_level)		3952706	0					
ANR	3952708	CompoundStatement		290:0:6977:7112	3952706	0					
ANR	3952709	ExpressionStatement	"dprintf ( debug_level , ""........VMGAHP info........\\n"" )"	291:1:6980:7034	3952706	0	True				
ANR	3952710	CallExpression	"dprintf ( debug_level , ""........VMGAHP info........\\n"" )"		3952706	0					
ANR	3952711	Callee	dprintf		3952706	0					
ANR	3952712	Identifier	dprintf		3952706	0					
ANR	3952713	ArgumentList	debug_level		3952706	1					
ANR	3952714	Argument	debug_level		3952706	0					
ANR	3952715	Identifier	debug_level		3952706	0					
ANR	3952716	Argument	"""........VMGAHP info........\\n"""		3952706	1					
ANR	3952717	PrimaryExpression	"""........VMGAHP info........\\n"""		3952706	0					
ANR	3952718	ExpressionStatement	m_vmgahp_info . AttrList :: dPrint ( debug_level )	292:1:7037:7080	3952706	1	True				
ANR	3952719	CallExpression	m_vmgahp_info . AttrList :: dPrint ( debug_level )		3952706	0					
ANR	3952720	Callee	m_vmgahp_info . AttrList :: dPrint		3952706	0					
ANR	3952721	MemberAccess	m_vmgahp_info . AttrList :: dPrint		3952706	0					
ANR	3952722	Identifier	m_vmgahp_info		3952706	0					
ANR	3952723	Identifier	AttrList :: dPrint		3952706	1					
ANR	3952724	ArgumentList	debug_level		3952706	1					
ANR	3952725	Argument	debug_level		3952706	0					
ANR	3952726	Identifier	debug_level		3952706	0					
ANR	3952727	ExpressionStatement	"dprintf ( debug_level , ""\\n"" )"	293:1:7083:7110	3952706	2	True				
ANR	3952728	CallExpression	"dprintf ( debug_level , ""\\n"" )"		3952706	0					
ANR	3952729	Callee	dprintf		3952706	0					
ANR	3952730	Identifier	dprintf		3952706	0					
ANR	3952731	ArgumentList	debug_level		3952706	1					
ANR	3952732	Argument	debug_level		3952706	0					
ANR	3952733	Identifier	debug_level		3952706	0					
ANR	3952734	Argument	"""\\n"""		3952706	1					
ANR	3952735	PrimaryExpression	"""\\n"""		3952706	0					
ANR	3952736	ReturnType	void		3952706	1					
ANR	3952737	Identifier	VMUniverseMgr :: printVMGahpInfo		3952706	2					
ANR	3952738	ParameterList	int debug_level		3952706	3					
ANR	3952739	Parameter	int debug_level	289:32:6959:6973	3952706	0	True				
ANR	3952740	ParameterType	int		3952706	0					
ANR	3952741	Identifier	debug_level		3952706	1					
ANR	3952742	CFGEntryNode	ENTRY		3952706		True				
ANR	3952743	CFGExitNode	EXIT		3952706		True				
ANR	3952744	Symbol	m_vmgahp_info		3952706						
ANR	3952745	Symbol	debug_level		3952706						
ANR	3952746	DeclStmt									
ANR	3952747	Decl							int	int	avail_vm_num
ANR	3952748	DeclStmt									
ANR	3952749	Decl							ExprTree	ExprTree *	expr
ANR	3952750	DeclStmt									
ANR	3952751	Decl							const char	const char *	attr_name
ANR	3952752	DeclStmt									
ANR	3952753	Decl							int	int	freemem
ANR	3952754	DeclStmt									
ANR	3952755	Decl							MyString	MyString	all_macs
ANR	3952756	DeclStmt									
ANR	3952757	Decl							MyString	MyString	all_ips
ANR	3952758	DeclStmt									
ANR	3952759	Decl							VMStarterInfo	VMStarterInfo *	info
ANR	3952760	DeclStmt									
ANR	3952761	Decl							const char	const char *	guest_ip
ANR	3952762	DeclStmt									
ANR	3952763	Decl							const char	const char *	guest_mac
ANR	3952764	Function	VMUniverseMgr :: testVMGahp	368:0:8937:15426							
ANR	3952765	FunctionDef	"VMUniverseMgr :: testVMGahp (const char * gahppath , const char * vmtype)"		3952764	0					
ANR	3952766	CompoundStatement		370:0:9010:15426	3952764	0					
ANR	3952767	ExpressionStatement	m_needCheck = false	371:1:9013:9032	3952764	0	True				
ANR	3952768	AssignmentExpression	m_needCheck = false		3952764	0		=			
ANR	3952769	Identifier	m_needCheck		3952764	0					
ANR	3952770	Identifier	false		3952764	1					
ANR	3952771	IfStatement	if ( ! m_starter_has_vmcode )		3952764	1					
ANR	3952772	Condition	! m_starter_has_vmcode	373:5:9040:9060	3952764	0	True				
ANR	3952773	UnaryOperationExpression	! m_starter_has_vmcode		3952764	0					
ANR	3952774	UnaryOperator	!		3952764	0					
ANR	3952775	Identifier	m_starter_has_vmcode		3952764	1					
ANR	3952776	CompoundStatement		4:29:53:53	3952764	1					
ANR	3952777	ReturnStatement	return false ;	374:2:9068:9080	3952764	0	True				
ANR	3952778	Identifier	false		3952764	0					
ANR	3952779	IfStatement	if ( ! gahppath || ! vmtype )		3952764	2					
ANR	3952780	Condition	! gahppath || ! vmtype	377:5:9091:9110	3952764	0	True				
ANR	3952781	OrExpression	! gahppath || ! vmtype		3952764	0		||			
ANR	3952782	UnaryOperationExpression	! gahppath		3952764	0					
ANR	3952783	UnaryOperator	!		3952764	0					
ANR	3952784	Identifier	gahppath		3952764	1					
ANR	3952785	UnaryOperationExpression	! vmtype		3952764	1					
ANR	3952786	UnaryOperator	!		3952764	0					
ANR	3952787	Identifier	vmtype		3952764	1					
ANR	3952788	CompoundStatement		8:28:103:103	3952764	1					
ANR	3952789	ReturnStatement	return false ;	378:2:9118:9130	3952764	0	True				
ANR	3952790	Identifier	false		3952764	0					
ANR	3952791	IdentifierDeclStatement	"char * need_log_file = param ( ""VM_GAHP_LOG"" ) ;"	388:1:9483:9525	3952764	3	True				
ANR	3952792	IdentifierDecl	"* need_log_file = param ( ""VM_GAHP_LOG"" )"		3952764	0					
ANR	3952793	IdentifierDeclType	char *		3952764	0					
ANR	3952794	Identifier	need_log_file		3952764	1					
ANR	3952795	AssignmentExpression	"* need_log_file = param ( ""VM_GAHP_LOG"" )"		3952764	2		=			
ANR	3952796	Identifier	need_log_file		3952764	0					
ANR	3952797	CallExpression	"param ( ""VM_GAHP_LOG"" )"		3952764	1					
ANR	3952798	Callee	param		3952764	0					
ANR	3952799	Identifier	param		3952764	0					
ANR	3952800	ArgumentList	"""VM_GAHP_LOG"""		3952764	1					
ANR	3952801	Argument	"""VM_GAHP_LOG"""		3952764	0					
ANR	3952802	PrimaryExpression	"""VM_GAHP_LOG"""		3952764	0					
ANR	3952803	IfStatement	if ( need_log_file )		3952764	4					
ANR	3952804	Condition	need_log_file	389:5:9532:9544	3952764	0	True				
ANR	3952805	Identifier	need_log_file		3952764	0					
ANR	3952806	CompoundStatement		20:21:537:537	3952764	1					
ANR	3952807	ExpressionStatement	free ( need_log_file )	390:2:9552:9571	3952764	0	True				
ANR	3952808	CallExpression	free ( need_log_file )		3952764	0					
ANR	3952809	Callee	free		3952764	0					
ANR	3952810	Identifier	free		3952764	0					
ANR	3952811	ArgumentList	need_log_file		3952764	1					
ANR	3952812	Argument	need_log_file		3952764	0					
ANR	3952813	Identifier	need_log_file		3952764	0					
ANR	3952814	ElseStatement	else		3952764	0					
ANR	3952815	CompoundStatement		22:7:569:569	3952764	0					
ANR	3952816	Statement	dprintf	392:2:9584:9590	3952764	0	True				
ANR	3952817	Statement	(	392:9:9591:9591	3952764	1	True				
ANR	3952818	Statement	D_ALWAYS	392:11:9593:9600	3952764	2	True				
ANR	3952819	Statement	","	392:19:9601:9601	3952764	3	True				
ANR	3952820	Statement	"""To support vm universe, '%s' must be defined """	392:21:9603:9649	3952764	4	True				
ANR	3952821	Statement	"""in condor config file, which is a log file for vmgahp.\\n"""	393:4:9655:9712	3952764	5	True				
ANR	3952822	Statement	","	393:62:9713:9713	3952764	6	True				
ANR	3952823	Statement	"""VM_GAHP_LOG"""	394:4:9720:9732	3952764	7	True				
ANR	3952824	Statement	)	394:17:9733:9733	3952764	8	True				
ANR	3952825	ExpressionStatement		394:18:9734:9734	3952764	9	True				
ANR	3952826	ReturnStatement	return false ;	395:2:9739:9751	3952764	10	True				
ANR	3952827	Identifier	false		3952764	0					
ANR	3952828	IdentifierDeclStatement	ArgList systemcmd ;	403:1:9934:9951	3952764	5	True				
ANR	3952829	IdentifierDecl	systemcmd		3952764	0					
ANR	3952830	IdentifierDeclType	ArgList		3952764	0					
ANR	3952831	Identifier	systemcmd		3952764	1					
ANR	3952832	ExpressionStatement	systemcmd . AppendArg ( gahppath )	404:1:9954:9983	3952764	6	True				
ANR	3952833	CallExpression	systemcmd . AppendArg ( gahppath )		3952764	0					
ANR	3952834	Callee	systemcmd . AppendArg		3952764	0					
ANR	3952835	MemberAccess	systemcmd . AppendArg		3952764	0					
ANR	3952836	Identifier	systemcmd		3952764	0					
ANR	3952837	Identifier	AppendArg		3952764	1					
ANR	3952838	ArgumentList	gahppath		3952764	1					
ANR	3952839	Argument	gahppath		3952764	0					
ANR	3952840	Identifier	gahppath		3952764	0					
ANR	3952841	ExpressionStatement	"systemcmd . AppendArg ( ""-f"" )"	405:1:9986:10011	3952764	7	True				
ANR	3952842	CallExpression	"systemcmd . AppendArg ( ""-f"" )"		3952764	0					
ANR	3952843	Callee	systemcmd . AppendArg		3952764	0					
ANR	3952844	MemberAccess	systemcmd . AppendArg		3952764	0					
ANR	3952845	Identifier	systemcmd		3952764	0					
ANR	3952846	Identifier	AppendArg		3952764	1					
ANR	3952847	ArgumentList	"""-f"""		3952764	1					
ANR	3952848	Argument	"""-f"""		3952764	0					
ANR	3952849	PrimaryExpression	"""-f"""		3952764	0					
ANR	3952850	IdentifierDeclStatement	"char * gahp_log_file = param ( ""VM_GAHP_LOG"" ) ;"	406:1:10014:10056	3952764	8	True				
ANR	3952851	IdentifierDecl	"* gahp_log_file = param ( ""VM_GAHP_LOG"" )"		3952764	0					
ANR	3952852	IdentifierDeclType	char *		3952764	0					
ANR	3952853	Identifier	gahp_log_file		3952764	1					
ANR	3952854	AssignmentExpression	"* gahp_log_file = param ( ""VM_GAHP_LOG"" )"		3952764	2		=			
ANR	3952855	Identifier	gahp_log_file		3952764	0					
ANR	3952856	CallExpression	"param ( ""VM_GAHP_LOG"" )"		3952764	1					
ANR	3952857	Callee	param		3952764	0					
ANR	3952858	Identifier	param		3952764	0					
ANR	3952859	ArgumentList	"""VM_GAHP_LOG"""		3952764	1					
ANR	3952860	Argument	"""VM_GAHP_LOG"""		3952764	0					
ANR	3952861	PrimaryExpression	"""VM_GAHP_LOG"""		3952764	0					
ANR	3952862	IfStatement	if ( gahp_log_file )		3952764	9					
ANR	3952863	Condition	gahp_log_file	407:5:10063:10075	3952764	0	True				
ANR	3952864	Identifier	gahp_log_file		3952764	0					
ANR	3952865	CompoundStatement		38:21:1068:1068	3952764	1					
ANR	3952866	ExpressionStatement	free ( gahp_log_file )	408:2:10083:10102	3952764	0	True				
ANR	3952867	CallExpression	free ( gahp_log_file )		3952764	0					
ANR	3952868	Callee	free		3952764	0					
ANR	3952869	Identifier	free		3952764	0					
ANR	3952870	ArgumentList	gahp_log_file		3952764	1					
ANR	3952871	Argument	gahp_log_file		3952764	0					
ANR	3952872	Identifier	gahp_log_file		3952764	0					
ANR	3952873	ElseStatement	else		3952764	0					
ANR	3952874	CompoundStatement		40:7:1100:1100	3952764	0					
ANR	3952875	ExpressionStatement	"systemcmd . AppendArg ( ""-t"" )"	410:2:10115:10140	3952764	0	True				
ANR	3952876	CallExpression	"systemcmd . AppendArg ( ""-t"" )"		3952764	0					
ANR	3952877	Callee	systemcmd . AppendArg		3952764	0					
ANR	3952878	MemberAccess	systemcmd . AppendArg		3952764	0					
ANR	3952879	Identifier	systemcmd		3952764	0					
ANR	3952880	Identifier	AppendArg		3952764	1					
ANR	3952881	ArgumentList	"""-t"""		3952764	1					
ANR	3952882	Argument	"""-t"""		3952764	0					
ANR	3952883	PrimaryExpression	"""-t"""		3952764	0					
ANR	3952884	ExpressionStatement	"systemcmd . AppendArg ( ""-M"" )"	412:1:10146:10171	3952764	10	True				
ANR	3952885	CallExpression	"systemcmd . AppendArg ( ""-M"" )"		3952764	0					
ANR	3952886	Callee	systemcmd . AppendArg		3952764	0					
ANR	3952887	MemberAccess	systemcmd . AppendArg		3952764	0					
ANR	3952888	Identifier	systemcmd		3952764	0					
ANR	3952889	Identifier	AppendArg		3952764	1					
ANR	3952890	ArgumentList	"""-M"""		3952764	1					
ANR	3952891	Argument	"""-M"""		3952764	0					
ANR	3952892	PrimaryExpression	"""-M"""		3952764	0					
ANR	3952893	ExpressionStatement	systemcmd . AppendArg ( VMGAHP_TEST_MODE )	413:1:10174:10211	3952764	11	True				
ANR	3952894	CallExpression	systemcmd . AppendArg ( VMGAHP_TEST_MODE )		3952764	0					
ANR	3952895	Callee	systemcmd . AppendArg		3952764	0					
ANR	3952896	MemberAccess	systemcmd . AppendArg		3952764	0					
ANR	3952897	Identifier	systemcmd		3952764	0					
ANR	3952898	Identifier	AppendArg		3952764	1					
ANR	3952899	ArgumentList	VMGAHP_TEST_MODE		3952764	1					
ANR	3952900	Argument	VMGAHP_TEST_MODE		3952764	0					
ANR	3952901	Identifier	VMGAHP_TEST_MODE		3952764	0					
ANR	3952902	ExpressionStatement	"systemcmd . AppendArg ( ""vmtype"" )"	414:1:10214:10243	3952764	12	True				
ANR	3952903	CallExpression	"systemcmd . AppendArg ( ""vmtype"" )"		3952764	0					
ANR	3952904	Callee	systemcmd . AppendArg		3952764	0					
ANR	3952905	MemberAccess	systemcmd . AppendArg		3952764	0					
ANR	3952906	Identifier	systemcmd		3952764	0					
ANR	3952907	Identifier	AppendArg		3952764	1					
ANR	3952908	ArgumentList	"""vmtype"""		3952764	1					
ANR	3952909	Argument	"""vmtype"""		3952764	0					
ANR	3952910	PrimaryExpression	"""vmtype"""		3952764	0					
ANR	3952911	ExpressionStatement	systemcmd . AppendArg ( vmtype )	415:1:10246:10273	3952764	13	True				
ANR	3952912	CallExpression	systemcmd . AppendArg ( vmtype )		3952764	0					
ANR	3952913	Callee	systemcmd . AppendArg		3952764	0					
ANR	3952914	MemberAccess	systemcmd . AppendArg		3952764	0					
ANR	3952915	Identifier	systemcmd		3952764	0					
ANR	3952916	Identifier	AppendArg		3952764	1					
ANR	3952917	ArgumentList	vmtype		3952764	1					
ANR	3952918	Argument	vmtype		3952764	0					
ANR	3952919	Identifier	vmtype		3952764	0					
ANR	3952920	IfStatement	if ( can_switch_ids ( ) )		3952764	14					
ANR	3952921	Condition	can_switch_ids ( )	418:5:10301:10316	3952764	0	True				
ANR	3952922	CallExpression	can_switch_ids ( )		3952764	0					
ANR	3952923	Callee	can_switch_ids		3952764	0					
ANR	3952924	Identifier	can_switch_ids		3952764	0					
ANR	3952925	ArgumentList			3952764	1					
ANR	3952926	CompoundStatement		50:2:1313:1329	3952764	1					
ANR	3952927	IdentifierDeclStatement	MyString tmp_str ;	419:2:10324:10340	3952764	0	True				
ANR	3952928	IdentifierDecl	tmp_str		3952764	0					
ANR	3952929	IdentifierDeclType	MyString		3952764	0					
ANR	3952930	Identifier	tmp_str		3952764	1					
ANR	3952931	ExpressionStatement	"tmp_str . sprintf ( ""%d"" , ( int ) get_condor_uid ( ) )"	420:2:10344:10388	3952764	1	True				
ANR	3952932	CallExpression	"tmp_str . sprintf ( ""%d"" , ( int ) get_condor_uid ( ) )"		3952764	0					
ANR	3952933	Callee	tmp_str . sprintf		3952764	0					
ANR	3952934	MemberAccess	tmp_str . sprintf		3952764	0					
ANR	3952935	Identifier	tmp_str		3952764	0					
ANR	3952936	Identifier	sprintf		3952764	1					
ANR	3952937	ArgumentList	"""%d"""		3952764	1					
ANR	3952938	Argument	"""%d"""		3952764	0					
ANR	3952939	PrimaryExpression	"""%d"""		3952764	0					
ANR	3952940	Argument	( int ) get_condor_uid ( )		3952764	1					
ANR	3952941	CastExpression	( int ) get_condor_uid ( )		3952764	0					
ANR	3952942	CastTarget	int		3952764	0					
ANR	3952943	CallExpression	get_condor_uid ( )		3952764	1					
ANR	3952944	Callee	get_condor_uid		3952764	0					
ANR	3952945	Identifier	get_condor_uid		3952764	0					
ANR	3952946	ArgumentList			3952764	1					
ANR	3952947	ExpressionStatement	"SetEnv ( ""VMGAHP_USER_UID"" , tmp_str . Value ( ) )"	421:2:10392:10434	3952764	2	True				
ANR	3952948	CallExpression	"SetEnv ( ""VMGAHP_USER_UID"" , tmp_str . Value ( ) )"		3952764	0					
ANR	3952949	Callee	SetEnv		3952764	0					
ANR	3952950	Identifier	SetEnv		3952764	0					
ANR	3952951	ArgumentList	"""VMGAHP_USER_UID"""		3952764	1					
ANR	3952952	Argument	"""VMGAHP_USER_UID"""		3952764	0					
ANR	3952953	PrimaryExpression	"""VMGAHP_USER_UID"""		3952764	0					
ANR	3952954	Argument	tmp_str . Value ( )		3952764	1					
ANR	3952955	CallExpression	tmp_str . Value ( )		3952764	0					
ANR	3952956	Callee	tmp_str . Value		3952764	0					
ANR	3952957	MemberAccess	tmp_str . Value		3952764	0					
ANR	3952958	Identifier	tmp_str		3952764	0					
ANR	3952959	Identifier	Value		3952764	1					
ANR	3952960	ArgumentList			3952764	1					
ANR	3952961	IdentifierDeclStatement	priv_state prev_priv ;	425:1:10448:10468	3952764	15	True				
ANR	3952962	IdentifierDecl	prev_priv		3952764	0					
ANR	3952963	IdentifierDeclType	priv_state		3952764	0					
ANR	3952964	Identifier	prev_priv		3952764	1					
ANR	3952965	IfStatement	"if ( ( strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_XEN ) == MATCH ) || ( strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_KVM ) == MATCH ) )"		3952764	16					
ANR	3952966	Condition	"( strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_XEN ) == MATCH ) || ( strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_KVM ) == MATCH )"	426:5:10475:10584	3952764	0	True				
ANR	3952967	OrExpression	"( strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_XEN ) == MATCH ) || ( strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_KVM ) == MATCH )"		3952764	0		||			
ANR	3952968	EqualityExpression	"strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_XEN ) == MATCH"		3952764	0		==			
ANR	3952969	CallExpression	"strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_XEN )"		3952764	0					
ANR	3952970	Callee	strcasecmp		3952764	0					
ANR	3952971	Identifier	strcasecmp		3952764	0					
ANR	3952972	ArgumentList	vmtype		3952764	1					
ANR	3952973	Argument	vmtype		3952764	0					
ANR	3952974	Identifier	vmtype		3952764	0					
ANR	3952975	Argument	CONDOR_VM_UNIVERSE_XEN		3952764	1					
ANR	3952976	Identifier	CONDOR_VM_UNIVERSE_XEN		3952764	0					
ANR	3952977	Identifier	MATCH		3952764	1					
ANR	3952978	EqualityExpression	"strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_KVM ) == MATCH"		3952764	1		==			
ANR	3952979	CallExpression	"strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_KVM )"		3952764	0					
ANR	3952980	Callee	strcasecmp		3952764	0					
ANR	3952981	Identifier	strcasecmp		3952764	0					
ANR	3952982	ArgumentList	vmtype		3952764	1					
ANR	3952983	Argument	vmtype		3952764	0					
ANR	3952984	Identifier	vmtype		3952764	0					
ANR	3952985	Argument	CONDOR_VM_UNIVERSE_KVM		3952764	1					
ANR	3952986	Identifier	CONDOR_VM_UNIVERSE_KVM		3952764	0					
ANR	3952987	Identifier	MATCH		3952764	1					
ANR	3952988	CompoundStatement		57:118:1577:1577	3952764	1					
ANR	3952989	ExpressionStatement	prev_priv = set_root_priv ( )	428:2:10625:10652	3952764	0	True				
ANR	3952990	AssignmentExpression	prev_priv = set_root_priv ( )		3952764	0		=			
ANR	3952991	Identifier	prev_priv		3952764	0					
ANR	3952992	CallExpression	set_root_priv ( )		3952764	1					
ANR	3952993	Callee	set_root_priv		3952764	0					
ANR	3952994	Identifier	set_root_priv		3952764	0					
ANR	3952995	ArgumentList			3952764	1					
ANR	3952996	ElseStatement	else		3952764	0					
ANR	3952997	CompoundStatement		60:7:1650:1650	3952764	0					
ANR	3952998	ExpressionStatement	prev_priv = set_condor_priv ( )	430:2:10665:10694	3952764	0	True				
ANR	3952999	AssignmentExpression	prev_priv = set_condor_priv ( )		3952764	0		=			
ANR	3953000	Identifier	prev_priv		3952764	0					
ANR	3953001	CallExpression	set_condor_priv ( )		3952764	1					
ANR	3953002	Callee	set_condor_priv		3952764	0					
ANR	3953003	Identifier	set_condor_priv		3952764	0					
ANR	3953004	ArgumentList			3952764	1					
ANR	3953005	IdentifierDeclStatement	FILE * fp = NULL ;	433:1:10701:10716	3952764	17	True				
ANR	3953006	IdentifierDecl	* fp = NULL		3952764	0					
ANR	3953007	IdentifierDeclType	FILE *		3952764	0					
ANR	3953008	Identifier	fp		3952764	1					
ANR	3953009	AssignmentExpression	* fp = NULL		3952764	2		=			
ANR	3953010	Identifier	NULL		3952764	0					
ANR	3953011	Identifier	NULL		3952764	1					
ANR	3953012	ExpressionStatement	"fp = my_popen ( systemcmd , ""r"" , FALSE )"	434:1:10719:10756	3952764	18	True				
ANR	3953013	AssignmentExpression	"fp = my_popen ( systemcmd , ""r"" , FALSE )"		3952764	0		=			
ANR	3953014	Identifier	fp		3952764	0					
ANR	3953015	CallExpression	"my_popen ( systemcmd , ""r"" , FALSE )"		3952764	1					
ANR	3953016	Callee	my_popen		3952764	0					
ANR	3953017	Identifier	my_popen		3952764	0					
ANR	3953018	ArgumentList	systemcmd		3952764	1					
ANR	3953019	Argument	systemcmd		3952764	0					
ANR	3953020	Identifier	systemcmd		3952764	0					
ANR	3953021	Argument	"""r"""		3952764	1					
ANR	3953022	PrimaryExpression	"""r"""		3952764	0					
ANR	3953023	Argument	FALSE		3952764	2					
ANR	3953024	Identifier	FALSE		3952764	0					
ANR	3953025	ExpressionStatement	set_priv ( prev_priv )	435:1:10759:10778	3952764	19	True				
ANR	3953026	CallExpression	set_priv ( prev_priv )		3952764	0					
ANR	3953027	Callee	set_priv		3952764	0					
ANR	3953028	Identifier	set_priv		3952764	0					
ANR	3953029	ArgumentList	prev_priv		3952764	1					
ANR	3953030	Argument	prev_priv		3952764	0					
ANR	3953031	Identifier	prev_priv		3952764	0					
ANR	3953032	IfStatement	if ( ! fp )		3952764	20					
ANR	3953033	Condition	! fp	437:5:10786:10788	3952764	0	True				
ANR	3953034	UnaryOperationExpression	! fp		3952764	0					
ANR	3953035	UnaryOperator	!		3952764	0					
ANR	3953036	Identifier	fp		3952764	1					
ANR	3953037	CompoundStatement		68:11:1781:1781	3952764	1					
ANR	3953038	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to execute %s, ignoring\\n"" , gahppath )"	438:2:10796:10861	3952764	0	True				
ANR	3953039	CallExpression	"dprintf ( D_ALWAYS , ""Failed to execute %s, ignoring\\n"" , gahppath )"		3952764	0					
ANR	3953040	Callee	dprintf		3952764	0					
ANR	3953041	Identifier	dprintf		3952764	0					
ANR	3953042	ArgumentList	D_ALWAYS		3952764	1					
ANR	3953043	Argument	D_ALWAYS		3952764	0					
ANR	3953044	Identifier	D_ALWAYS		3952764	0					
ANR	3953045	Argument	"""Failed to execute %s, ignoring\\n"""		3952764	1					
ANR	3953046	PrimaryExpression	"""Failed to execute %s, ignoring\\n"""		3952764	0					
ANR	3953047	Argument	gahppath		3952764	2					
ANR	3953048	Identifier	gahppath		3952764	0					
ANR	3953049	ReturnStatement	return false ;	439:2:10865:10877	3952764	1	True				
ANR	3953050	Identifier	false		3952764	0					
ANR	3953051	IdentifierDeclStatement	bool read_something = false ;	442:1:10884:10911	3952764	21	True				
ANR	3953052	IdentifierDecl	read_something = false		3952764	0					
ANR	3953053	IdentifierDeclType	bool		3952764	0					
ANR	3953054	Identifier	read_something		3952764	1					
ANR	3953055	AssignmentExpression	read_something = false		3952764	2		=			
ANR	3953056	Identifier	false		3952764	0					
ANR	3953057	Identifier	false		3952764	1					
ANR	3953058	IdentifierDeclStatement	char buf [ 2048 ] ;	443:1:10914:10928	3952764	22	True				
ANR	3953059	IdentifierDecl	buf [ 2048 ]		3952764	0					
ANR	3953060	IdentifierDeclType	char [ 2048 ]		3952764	0					
ANR	3953061	Identifier	buf		3952764	1					
ANR	3953062	PrimaryExpression	2048		3952764	2					
ANR	3953063	ExpressionStatement	m_vmgahp_info . Clear ( )	445:1:10932:10953	3952764	23	True				
ANR	3953064	CallExpression	m_vmgahp_info . Clear ( )		3952764	0					
ANR	3953065	Callee	m_vmgahp_info . Clear		3952764	0					
ANR	3953066	MemberAccess	m_vmgahp_info . Clear		3952764	0					
ANR	3953067	Identifier	m_vmgahp_info		3952764	0					
ANR	3953068	Identifier	Clear		3952764	1					
ANR	3953069	ArgumentList			3952764	1					
ANR	3953070	WhileStatement	"while ( fgets ( buf , 2048 , fp ) )"		3952764	24					
ANR	3953071	Condition	"fgets ( buf , 2048 , fp )"	446:8:10963:10982	3952764	0	True				
ANR	3953072	CallExpression	"fgets ( buf , 2048 , fp )"		3952764	0					
ANR	3953073	Callee	fgets		3952764	0					
ANR	3953074	Identifier	fgets		3952764	0					
ANR	3953075	ArgumentList	buf		3952764	1					
ANR	3953076	Argument	buf		3952764	0					
ANR	3953077	Identifier	buf		3952764	0					
ANR	3953078	Argument	2048		3952764	1					
ANR	3953079	PrimaryExpression	2048		3952764	0					
ANR	3953080	Argument	fp		3952764	2					
ANR	3953081	Identifier	fp		3952764	0					
ANR	3953082	CompoundStatement		77:31:1975:1975	3952764	1					
ANR	3953083	IfStatement	if ( ! m_vmgahp_info . Insert ( buf ) )		3952764	0					
ANR	3953084	Condition	! m_vmgahp_info . Insert ( buf )	447:6:10994:11019	3952764	0	True				
ANR	3953085	UnaryOperationExpression	! m_vmgahp_info . Insert ( buf )		3952764	0					
ANR	3953086	UnaryOperator	!		3952764	0					
ANR	3953087	CallExpression	m_vmgahp_info . Insert ( buf )		3952764	1					
ANR	3953088	Callee	m_vmgahp_info . Insert		3952764	0					
ANR	3953089	MemberAccess	m_vmgahp_info . Insert		3952764	0					
ANR	3953090	Identifier	m_vmgahp_info		3952764	0					
ANR	3953091	Identifier	Insert		3952764	1					
ANR	3953092	ArgumentList	buf		3952764	1					
ANR	3953093	Argument	buf		3952764	0					
ANR	3953094	Identifier	buf		3952764	0					
ANR	3953095	CompoundStatement		78:35:2012:2012	3952764	1					
ANR	3953096	Statement	dprintf	448:3:11028:11034	3952764	0	True				
ANR	3953097	Statement	(	448:10:11035:11035	3952764	1	True				
ANR	3953098	Statement	D_ALWAYS	448:12:11037:11044	3952764	2	True				
ANR	3953099	Statement	","	448:20:11045:11045	3952764	3	True				
ANR	3953100	Statement	"""Failed to insert \\""%s\\"" into VMInfo, """	448:22:11047:11085	3952764	4	True				
ANR	3953101	Statement	"""ignoring invalid parameter\\n"""	449:6:11093:11122	3952764	5	True				
ANR	3953102	Statement	","	449:36:11123:11123	3952764	6	True				
ANR	3953103	Statement	buf	449:38:11125:11127	3952764	7	True				
ANR	3953104	Statement	)	449:42:11129:11129	3952764	8	True				
ANR	3953105	ExpressionStatement		449:43:11130:11130	3952764	9	True				
ANR	3953106	ContinueStatement	continue ;	450:3:11135:11143	3952764	10	True				
ANR	3953107	ExpressionStatement	read_something = true	452:2:11151:11172	3952764	1	True				
ANR	3953108	AssignmentExpression	read_something = true		3952764	0		=			
ANR	3953109	Identifier	read_something		3952764	0					
ANR	3953110	Identifier	true		3952764	1					
ANR	3953111	ExpressionStatement	my_pclose ( fp )	454:1:11178:11193	3952764	25	True				
ANR	3953112	CallExpression	my_pclose ( fp )		3952764	0					
ANR	3953113	Callee	my_pclose		3952764	0					
ANR	3953114	Identifier	my_pclose		3952764	0					
ANR	3953115	ArgumentList	fp		3952764	1					
ANR	3953116	Argument	fp		3952764	0					
ANR	3953117	Identifier	fp		3952764	0					
ANR	3953118	IfStatement	if ( ! read_something )		3952764	26					
ANR	3953119	Condition	! read_something	455:5:11200:11214	3952764	0	True				
ANR	3953120	UnaryOperationExpression	! read_something		3952764	0					
ANR	3953121	UnaryOperator	!		3952764	0					
ANR	3953122	Identifier	read_something		3952764	1					
ANR	3953123	CompoundStatement		87:2:2211:2231	3952764	1					
ANR	3953124	IdentifierDeclStatement	MyString args_string ;	456:2:11222:11242	3952764	0	True				
ANR	3953125	IdentifierDecl	args_string		3952764	0					
ANR	3953126	IdentifierDeclType	MyString		3952764	0					
ANR	3953127	Identifier	args_string		3952764	1					
ANR	3953128	ExpressionStatement	"systemcmd . GetArgsStringForDisplay ( & args_string , 0 )"	457:2:11246:11295	3952764	1	True				
ANR	3953129	CallExpression	"systemcmd . GetArgsStringForDisplay ( & args_string , 0 )"		3952764	0					
ANR	3953130	Callee	systemcmd . GetArgsStringForDisplay		3952764	0					
ANR	3953131	MemberAccess	systemcmd . GetArgsStringForDisplay		3952764	0					
ANR	3953132	Identifier	systemcmd		3952764	0					
ANR	3953133	Identifier	GetArgsStringForDisplay		3952764	1					
ANR	3953134	ArgumentList	& args_string		3952764	1					
ANR	3953135	Argument	& args_string		3952764	0					
ANR	3953136	UnaryOperationExpression	& args_string		3952764	0					
ANR	3953137	UnaryOperator	&		3952764	0					
ANR	3953138	Identifier	args_string		3952764	1					
ANR	3953139	Argument	0		3952764	1					
ANR	3953140	PrimaryExpression	0		3952764	0					
ANR	3953141	ExpressionStatement	"dprintf ( D_ALWAYS , ""Warning: '%s' did not produce any valid output.\\n"" , args_string . Value ( ) )"	458:2:11299:11403	3952764	2	True				
ANR	3953142	CallExpression	"dprintf ( D_ALWAYS , ""Warning: '%s' did not produce any valid output.\\n"" , args_string . Value ( ) )"		3952764	0					
ANR	3953143	Callee	dprintf		3952764	0					
ANR	3953144	Identifier	dprintf		3952764	0					
ANR	3953145	ArgumentList	D_ALWAYS		3952764	1					
ANR	3953146	Argument	D_ALWAYS		3952764	0					
ANR	3953147	Identifier	D_ALWAYS		3952764	0					
ANR	3953148	Argument	"""Warning: '%s' did not produce any valid output.\\n"""		3952764	1					
ANR	3953149	PrimaryExpression	"""Warning: '%s' did not produce any valid output.\\n"""		3952764	0					
ANR	3953150	Argument	args_string . Value ( )		3952764	2					
ANR	3953151	CallExpression	args_string . Value ( )		3952764	0					
ANR	3953152	Callee	args_string . Value		3952764	0					
ANR	3953153	MemberAccess	args_string . Value		3952764	0					
ANR	3953154	Identifier	args_string		3952764	0					
ANR	3953155	Identifier	Value		3952764	1					
ANR	3953156	ArgumentList			3952764	1					
ANR	3953157	IfStatement	"if ( ( strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_XEN ) == 0 ) )"		3952764	3					
ANR	3953158	Condition	"strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_XEN ) == 0"	461:6:11411:11459	3952764	0	True				
ANR	3953159	EqualityExpression	"strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_XEN ) == 0"		3952764	0		==			
ANR	3953160	CallExpression	"strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_XEN )"		3952764	0					
ANR	3953161	Callee	strcasecmp		3952764	0					
ANR	3953162	Identifier	strcasecmp		3952764	0					
ANR	3953163	ArgumentList	vmtype		3952764	1					
ANR	3953164	Argument	vmtype		3952764	0					
ANR	3953165	Identifier	vmtype		3952764	0					
ANR	3953166	Argument	CONDOR_VM_UNIVERSE_XEN		3952764	1					
ANR	3953167	Identifier	CONDOR_VM_UNIVERSE_XEN		3952764	0					
ANR	3953168	PrimaryExpression	0		3952764	1					
ANR	3953169	CompoundStatement		93:3:2457:2473	3952764	1					
ANR	3953170	IdentifierDeclStatement	MyString err_msg ;	462:3:11468:11484	3952764	0	True				
ANR	3953171	IdentifierDecl	err_msg		3952764	0					
ANR	3953172	IdentifierDeclType	MyString		3952764	0					
ANR	3953173	Identifier	err_msg		3952764	1					
ANR	3953174	ExpressionStatement	"err_msg += ""\\n#######################################################\\n"""	463:3:11489:11561	3952764	1	True				
ANR	3953175	AssignmentExpression	"err_msg += ""\\n#######################################################\\n"""		3952764	0		+=			
ANR	3953176	Identifier	err_msg		3952764	0					
ANR	3953177	PrimaryExpression	"""\\n#######################################################\\n"""		3952764	1					
ANR	3953178	ExpressionStatement	"err_msg += ""##### Make sure the followings """	464:3:11566:11610	3952764	2	True				
ANR	3953179	AssignmentExpression	"err_msg += ""##### Make sure the followings """		3952764	0		+=			
ANR	3953180	Identifier	err_msg		3952764	0					
ANR	3953181	PrimaryExpression	"""##### Make sure the followings """		3952764	1					
ANR	3953182	ExpressionStatement	"err_msg += ""to use VM universe for Xen\\n"""	465:3:11615:11656	3952764	3	True				
ANR	3953183	AssignmentExpression	"err_msg += ""to use VM universe for Xen\\n"""		3952764	0		+=			
ANR	3953184	Identifier	err_msg		3952764	0					
ANR	3953185	PrimaryExpression	"""to use VM universe for Xen\\n"""		3952764	1					
ANR	3953186	ExpressionStatement	"err_msg += ""### - The owner of script progrm like """	466:3:11661:11712	3952764	4	True				
ANR	3953187	AssignmentExpression	"err_msg += ""### - The owner of script progrm like """		3952764	0		+=			
ANR	3953188	Identifier	err_msg		3952764	0					
ANR	3953189	PrimaryExpression	"""### - The owner of script progrm like """		3952764	1					
ANR	3953190	ExpressionStatement	"err_msg += ""'condor_vm_xen.sh' must be root\\n"""	467:3:11717:11763	3952764	5	True				
ANR	3953191	AssignmentExpression	"err_msg += ""'condor_vm_xen.sh' must be root\\n"""		3952764	0		+=			
ANR	3953192	Identifier	err_msg		3952764	0					
ANR	3953193	PrimaryExpression	"""'condor_vm_xen.sh' must be root\\n"""		3952764	1					
ANR	3953194	ExpressionStatement	"err_msg += ""### - The script program must be executable\\n"""	468:3:11768:11826	3952764	6	True				
ANR	3953195	AssignmentExpression	"err_msg += ""### - The script program must be executable\\n"""		3952764	0		+=			
ANR	3953196	Identifier	err_msg		3952764	0					
ANR	3953197	PrimaryExpression	"""### - The script program must be executable\\n"""		3952764	1					
ANR	3953198	ExpressionStatement	"err_msg += ""### - Other writable bit for the above files is """	469:3:11831:11892	3952764	7	True				
ANR	3953199	AssignmentExpression	"err_msg += ""### - Other writable bit for the above files is """		3952764	0		+=			
ANR	3953200	Identifier	err_msg		3952764	0					
ANR	3953201	PrimaryExpression	"""### - Other writable bit for the above files is """		3952764	1					
ANR	3953202	ExpressionStatement	"err_msg += ""not allowed.\\n"""	470:3:11897:11924	3952764	8	True				
ANR	3953203	AssignmentExpression	"err_msg += ""not allowed.\\n"""		3952764	0		+=			
ANR	3953204	Identifier	err_msg		3952764	0					
ANR	3953205	PrimaryExpression	"""not allowed.\\n"""		3952764	1					
ANR	3953206	ExpressionStatement	"err_msg += ""#########################################################\\n"""	471:3:11929:12001	3952764	9	True				
ANR	3953207	AssignmentExpression	"err_msg += ""#########################################################\\n"""		3952764	0		+=			
ANR	3953208	Identifier	err_msg		3952764	0					
ANR	3953209	PrimaryExpression	"""#########################################################\\n"""		3952764	1					
ANR	3953210	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s"" , err_msg . Value ( ) )"	472:3:12006:12047	3952764	10	True				
ANR	3953211	CallExpression	"dprintf ( D_ALWAYS , ""%s"" , err_msg . Value ( ) )"		3952764	0					
ANR	3953212	Callee	dprintf		3952764	0					
ANR	3953213	Identifier	dprintf		3952764	0					
ANR	3953214	ArgumentList	D_ALWAYS		3952764	1					
ANR	3953215	Argument	D_ALWAYS		3952764	0					
ANR	3953216	Identifier	D_ALWAYS		3952764	0					
ANR	3953217	Argument	"""%s"""		3952764	1					
ANR	3953218	PrimaryExpression	"""%s"""		3952764	0					
ANR	3953219	Argument	err_msg . Value ( )		3952764	2					
ANR	3953220	CallExpression	err_msg . Value ( )		3952764	0					
ANR	3953221	Callee	err_msg . Value		3952764	0					
ANR	3953222	MemberAccess	err_msg . Value		3952764	0					
ANR	3953223	Identifier	err_msg		3952764	0					
ANR	3953224	Identifier	Value		3952764	1					
ANR	3953225	ArgumentList			3952764	1					
ANR	3953226	ElseStatement	else		3952764	0					
ANR	3953227	IfStatement	"if ( ( strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_KVM ) == 0 ) )"		3952764	0					
ANR	3953228	Condition	"strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_KVM ) == 0"	473:13:12062:12110	3952764	0	True				
ANR	3953229	EqualityExpression	"strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_KVM ) == 0"		3952764	0		==			
ANR	3953230	CallExpression	"strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_KVM )"		3952764	0					
ANR	3953231	Callee	strcasecmp		3952764	0					
ANR	3953232	Identifier	strcasecmp		3952764	0					
ANR	3953233	ArgumentList	vmtype		3952764	1					
ANR	3953234	Argument	vmtype		3952764	0					
ANR	3953235	Identifier	vmtype		3952764	0					
ANR	3953236	Argument	CONDOR_VM_UNIVERSE_KVM		3952764	1					
ANR	3953237	Identifier	CONDOR_VM_UNIVERSE_KVM		3952764	0					
ANR	3953238	PrimaryExpression	0		3952764	1					
ANR	3953239	CompoundStatement		105:10:3114:3130	3952764	1					
ANR	3953240	IdentifierDeclStatement	MyString err_msg ;	474:10:12125:12141	3952764	0	True				
ANR	3953241	IdentifierDecl	err_msg		3952764	0					
ANR	3953242	IdentifierDeclType	MyString		3952764	0					
ANR	3953243	Identifier	err_msg		3952764	1					
ANR	3953244	ExpressionStatement	"err_msg += ""\\n#######################################################\\n"""	475:3:12146:12218	3952764	1	True				
ANR	3953245	AssignmentExpression	"err_msg += ""\\n#######################################################\\n"""		3952764	0		+=			
ANR	3953246	Identifier	err_msg		3952764	0					
ANR	3953247	PrimaryExpression	"""\\n#######################################################\\n"""		3952764	1					
ANR	3953248	ExpressionStatement	"err_msg += ""##### Make sure the followings """	476:3:12223:12267	3952764	2	True				
ANR	3953249	AssignmentExpression	"err_msg += ""##### Make sure the followings """		3952764	0		+=			
ANR	3953250	Identifier	err_msg		3952764	0					
ANR	3953251	PrimaryExpression	"""##### Make sure the followings """		3952764	1					
ANR	3953252	ExpressionStatement	"err_msg += ""to use VM universe for KVM\\n"""	477:3:12272:12313	3952764	3	True				
ANR	3953253	AssignmentExpression	"err_msg += ""to use VM universe for KVM\\n"""		3952764	0		+=			
ANR	3953254	Identifier	err_msg		3952764	0					
ANR	3953255	PrimaryExpression	"""to use VM universe for KVM\\n"""		3952764	1					
ANR	3953256	ExpressionStatement	"err_msg += ""### - The owner of script progrm like """	478:3:12318:12369	3952764	4	True				
ANR	3953257	AssignmentExpression	"err_msg += ""### - The owner of script progrm like """		3952764	0		+=			
ANR	3953258	Identifier	err_msg		3952764	0					
ANR	3953259	PrimaryExpression	"""### - The owner of script progrm like """		3952764	1					
ANR	3953260	ExpressionStatement	"err_msg += ""'condor_vm_xen.sh' must be root\\n"""	479:3:12374:12420	3952764	5	True				
ANR	3953261	AssignmentExpression	"err_msg += ""'condor_vm_xen.sh' must be root\\n"""		3952764	0		+=			
ANR	3953262	Identifier	err_msg		3952764	0					
ANR	3953263	PrimaryExpression	"""'condor_vm_xen.sh' must be root\\n"""		3952764	1					
ANR	3953264	ExpressionStatement	"err_msg += ""### - The script program must be executable\\n"""	480:3:12425:12483	3952764	6	True				
ANR	3953265	AssignmentExpression	"err_msg += ""### - The script program must be executable\\n"""		3952764	0		+=			
ANR	3953266	Identifier	err_msg		3952764	0					
ANR	3953267	PrimaryExpression	"""### - The script program must be executable\\n"""		3952764	1					
ANR	3953268	ExpressionStatement	"err_msg += ""### - Other writable bit for the above files is """	481:3:12488:12549	3952764	7	True				
ANR	3953269	AssignmentExpression	"err_msg += ""### - Other writable bit for the above files is """		3952764	0		+=			
ANR	3953270	Identifier	err_msg		3952764	0					
ANR	3953271	PrimaryExpression	"""### - Other writable bit for the above files is """		3952764	1					
ANR	3953272	ExpressionStatement	"err_msg += ""not allowed.\\n"""	482:3:12554:12581	3952764	8	True				
ANR	3953273	AssignmentExpression	"err_msg += ""not allowed.\\n"""		3952764	0		+=			
ANR	3953274	Identifier	err_msg		3952764	0					
ANR	3953275	PrimaryExpression	"""not allowed.\\n"""		3952764	1					
ANR	3953276	ExpressionStatement	"err_msg += ""#########################################################\\n"""	483:3:12586:12658	3952764	9	True				
ANR	3953277	AssignmentExpression	"err_msg += ""#########################################################\\n"""		3952764	0		+=			
ANR	3953278	Identifier	err_msg		3952764	0					
ANR	3953279	PrimaryExpression	"""#########################################################\\n"""		3952764	1					
ANR	3953280	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s"" , err_msg . Value ( ) )"	484:3:12663:12704	3952764	10	True				
ANR	3953281	CallExpression	"dprintf ( D_ALWAYS , ""%s"" , err_msg . Value ( ) )"		3952764	0					
ANR	3953282	Callee	dprintf		3952764	0					
ANR	3953283	Identifier	dprintf		3952764	0					
ANR	3953284	ArgumentList	D_ALWAYS		3952764	1					
ANR	3953285	Argument	D_ALWAYS		3952764	0					
ANR	3953286	Identifier	D_ALWAYS		3952764	0					
ANR	3953287	Argument	"""%s"""		3952764	1					
ANR	3953288	PrimaryExpression	"""%s"""		3952764	0					
ANR	3953289	Argument	err_msg . Value ( )		3952764	2					
ANR	3953290	CallExpression	err_msg . Value ( )		3952764	0					
ANR	3953291	Callee	err_msg . Value		3952764	0					
ANR	3953292	MemberAccess	err_msg . Value		3952764	0					
ANR	3953293	Identifier	err_msg		3952764	0					
ANR	3953294	Identifier	Value		3952764	1					
ANR	3953295	ArgumentList			3952764	1					
ANR	3953296	ElseStatement	else		3952764	0					
ANR	3953297	IfStatement	"if ( strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_VMWARE ) == 0 )"		3952764	0					
ANR	3953298	Condition	"strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_VMWARE ) == 0"	485:12:12718:12768	3952764	0	True				
ANR	3953299	EqualityExpression	"strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_VMWARE ) == 0"		3952764	0		==			
ANR	3953300	CallExpression	"strcasecmp ( vmtype , CONDOR_VM_UNIVERSE_VMWARE )"		3952764	0					
ANR	3953301	Callee	strcasecmp		3952764	0					
ANR	3953302	Identifier	strcasecmp		3952764	0					
ANR	3953303	ArgumentList	vmtype		3952764	1					
ANR	3953304	Argument	vmtype		3952764	0					
ANR	3953305	Identifier	vmtype		3952764	0					
ANR	3953306	Argument	CONDOR_VM_UNIVERSE_VMWARE		3952764	1					
ANR	3953307	Identifier	CONDOR_VM_UNIVERSE_VMWARE		3952764	0					
ANR	3953308	PrimaryExpression	0		3952764	1					
ANR	3953309	CompoundStatement		118:3:3787:3804	3952764	1					
ANR	3953310	IdentifierDeclStatement	MyString err_msg ;	486:3:12777:12793	3952764	0	True				
ANR	3953311	IdentifierDecl	err_msg		3952764	0					
ANR	3953312	IdentifierDeclType	MyString		3952764	0					
ANR	3953313	Identifier	err_msg		3952764	1					
ANR	3953314	IdentifierDeclStatement	MyString err_msg2 ;	487:3:12798:12815	3952764	1	True				
ANR	3953315	IdentifierDecl	err_msg2		3952764	0					
ANR	3953316	IdentifierDeclType	MyString		3952764	0					
ANR	3953317	Identifier	err_msg2		3952764	1					
ANR	3953318	ExpressionStatement	"err_msg += ""\\n#######################################################\\n"""	488:3:12820:12892	3952764	2	True				
ANR	3953319	AssignmentExpression	"err_msg += ""\\n#######################################################\\n"""		3952764	0		+=			
ANR	3953320	Identifier	err_msg		3952764	0					
ANR	3953321	PrimaryExpression	"""\\n#######################################################\\n"""		3952764	1					
ANR	3953322	ExpressionStatement	"err_msg += ""##### Make sure the followings """	489:3:12897:12941	3952764	3	True				
ANR	3953323	AssignmentExpression	"err_msg += ""##### Make sure the followings """		3952764	0		+=			
ANR	3953324	Identifier	err_msg		3952764	0					
ANR	3953325	PrimaryExpression	"""##### Make sure the followings """		3952764	1					
ANR	3953326	ExpressionStatement	"err_msg += ""to use VM universe for VMware\\n"""	490:3:12946:12990	3952764	4	True				
ANR	3953327	AssignmentExpression	"err_msg += ""to use VM universe for VMware\\n"""		3952764	0		+=			
ANR	3953328	Identifier	err_msg		3952764	0					
ANR	3953329	PrimaryExpression	"""to use VM universe for VMware\\n"""		3952764	1					
ANR	3953330	IfStatement	if ( can_switch_ids ( ) )		3952764	5					
ANR	3953331	Condition	can_switch_ids ( )	492:7:13000:13015	3952764	0	True				
ANR	3953332	CallExpression	can_switch_ids ( )		3952764	0					
ANR	3953333	Callee	can_switch_ids		3952764	0					
ANR	3953334	Identifier	can_switch_ids		3952764	0					
ANR	3953335	ArgumentList			3952764	1					
ANR	3953336	CompoundStatement		123:26:4008:4008	3952764	1					
ANR	3953337	ExpressionStatement	"err_msg += ""### - The script program like 'condor_vm_vmware.pl'"""	494:4:13052:13116	3952764	0	True				
ANR	3953338	AssignmentExpression	"err_msg += ""### - The script program like 'condor_vm_vmware.pl'"""		3952764	0		+=			
ANR	3953339	Identifier	err_msg		3952764	0					
ANR	3953340	PrimaryExpression	"""### - The script program like 'condor_vm_vmware.pl'"""		3952764	1					
ANR	3953341	ExpressionStatement	"err_msg += "" must be readable for anybody.\\n"""	495:4:13122:13167	3952764	1	True				
ANR	3953342	AssignmentExpression	"err_msg += "" must be readable for anybody.\\n"""		3952764	0		+=			
ANR	3953343	Identifier	err_msg		3952764	0					
ANR	3953344	PrimaryExpression	""" must be readable for anybody.\\n"""		3952764	1					
ANR	3953345	ExpressionStatement	"err_msg += ""### - Check the path of vmware-cmd, vmrun, and mkisofs """	498:3:13178:13246	3952764	6	True				
ANR	3953346	AssignmentExpression	"err_msg += ""### - Check the path of vmware-cmd, vmrun, and mkisofs """		3952764	0		+=			
ANR	3953347	Identifier	err_msg		3952764	0					
ANR	3953348	PrimaryExpression	"""### - Check the path of vmware-cmd, vmrun, and mkisofs """		3952764	1					
ANR	3953349	ExpressionStatement	"err_msg += ""in 'condor_vm_vmware.pl\\n'"""	499:3:13251:13290	3952764	7	True				
ANR	3953350	AssignmentExpression	"err_msg += ""in 'condor_vm_vmware.pl\\n'"""		3952764	0		+=			
ANR	3953351	Identifier	err_msg		3952764	0					
ANR	3953352	PrimaryExpression	"""in 'condor_vm_vmware.pl\\n'"""		3952764	1					
ANR	3953353	ExpressionStatement	"err_msg += ""#########################################################\\n"""	500:3:13295:13367	3952764	8	True				
ANR	3953354	AssignmentExpression	"err_msg += ""#########################################################\\n"""		3952764	0		+=			
ANR	3953355	Identifier	err_msg		3952764	0					
ANR	3953356	PrimaryExpression	"""#########################################################\\n"""		3952764	1					
ANR	3953357	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s"" , err_msg . Value ( ) )"	501:3:13372:13413	3952764	9	True				
ANR	3953358	CallExpression	"dprintf ( D_ALWAYS , ""%s"" , err_msg . Value ( ) )"		3952764	0					
ANR	3953359	Callee	dprintf		3952764	0					
ANR	3953360	Identifier	dprintf		3952764	0					
ANR	3953361	ArgumentList	D_ALWAYS		3952764	1					
ANR	3953362	Argument	D_ALWAYS		3952764	0					
ANR	3953363	Identifier	D_ALWAYS		3952764	0					
ANR	3953364	Argument	"""%s"""		3952764	1					
ANR	3953365	PrimaryExpression	"""%s"""		3952764	0					
ANR	3953366	Argument	err_msg . Value ( )		3952764	2					
ANR	3953367	CallExpression	err_msg . Value ( )		3952764	0					
ANR	3953368	Callee	err_msg . Value		3952764	0					
ANR	3953369	MemberAccess	err_msg . Value		3952764	0					
ANR	3953370	Identifier	err_msg		3952764	0					
ANR	3953371	Identifier	Value		3952764	1					
ANR	3953372	ArgumentList			3952764	1					
ANR	3953373	ReturnStatement	return false ;	503:2:13421:13433	3952764	4	True				
ANR	3953374	Identifier	false		3952764	0					
ANR	3953375	ExpressionStatement	printVMGahpInfo ( D_ALWAYS )	507:1:13454:13479	3952764	27	True				
ANR	3953376	CallExpression	printVMGahpInfo ( D_ALWAYS )		3952764	0					
ANR	3953377	Callee	printVMGahpInfo		3952764	0					
ANR	3953378	Identifier	printVMGahpInfo		3952764	0					
ANR	3953379	ArgumentList	D_ALWAYS		3952764	1					
ANR	3953380	Argument	D_ALWAYS		3952764	0					
ANR	3953381	Identifier	D_ALWAYS		3952764	0					
ANR	3953382	IdentifierDeclStatement	MyString tmp_vmtype ;	510:1:13500:13519	3952764	28	True				
ANR	3953383	IdentifierDecl	tmp_vmtype		3952764	0					
ANR	3953384	IdentifierDeclType	MyString		3952764	0					
ANR	3953385	Identifier	tmp_vmtype		3952764	1					
ANR	3953386	IfStatement	"if ( m_vmgahp_info . LookupString ( ATTR_VM_TYPE , tmp_vmtype ) != 1 )"		3952764	29					
ANR	3953387	Condition	"m_vmgahp_info . LookupString ( ATTR_VM_TYPE , tmp_vmtype ) != 1"	511:5:13526:13583	3952764	0	True				
ANR	3953388	EqualityExpression	"m_vmgahp_info . LookupString ( ATTR_VM_TYPE , tmp_vmtype ) != 1"		3952764	0		!=			
ANR	3953389	CallExpression	"m_vmgahp_info . LookupString ( ATTR_VM_TYPE , tmp_vmtype )"		3952764	0					
ANR	3953390	Callee	m_vmgahp_info . LookupString		3952764	0					
ANR	3953391	MemberAccess	m_vmgahp_info . LookupString		3952764	0					
ANR	3953392	Identifier	m_vmgahp_info		3952764	0					
ANR	3953393	Identifier	LookupString		3952764	1					
ANR	3953394	ArgumentList	ATTR_VM_TYPE		3952764	1					
ANR	3953395	Argument	ATTR_VM_TYPE		3952764	0					
ANR	3953396	Identifier	ATTR_VM_TYPE		3952764	0					
ANR	3953397	Argument	tmp_vmtype		3952764	1					
ANR	3953398	Identifier	tmp_vmtype		3952764	0					
ANR	3953399	PrimaryExpression	1		3952764	1					
ANR	3953400	CompoundStatement		142:66:4576:4576	3952764	1					
ANR	3953401	Statement	dprintf	512:2:13591:13597	3952764	0	True				
ANR	3953402	Statement	(	512:9:13598:13598	3952764	1	True				
ANR	3953403	Statement	D_ALWAYS	512:11:13600:13607	3952764	2	True				
ANR	3953404	Statement	","	512:19:13608:13608	3952764	3	True				
ANR	3953405	Statement	"""There is no %s in the output of vmgahp. """	512:21:13610:13651	3952764	4	True				
ANR	3953406	Statement	"""So VM Universe will be disabled\\n"""	513:4:13657:13691	3952764	5	True				
ANR	3953407	Statement	","	513:39:13692:13692	3952764	6	True				
ANR	3953408	Statement	ATTR_VM_TYPE	513:41:13694:13705	3952764	7	True				
ANR	3953409	Statement	)	513:53:13706:13706	3952764	8	True				
ANR	3953410	ExpressionStatement		513:54:13707:13707	3952764	9	True				
ANR	3953411	ReturnStatement	return false ;	514:2:13711:13723	3952764	10	True				
ANR	3953412	Identifier	false		3952764	0					
ANR	3953413	IfStatement	"if ( strcasecmp ( tmp_vmtype . Value ( ) , vmtype ) != 0 )"		3952764	30					
ANR	3953414	Condition	"strcasecmp ( tmp_vmtype . Value ( ) , vmtype ) != 0"	516:5:13733:13775	3952764	0	True				
ANR	3953415	EqualityExpression	"strcasecmp ( tmp_vmtype . Value ( ) , vmtype ) != 0"		3952764	0		!=			
ANR	3953416	CallExpression	"strcasecmp ( tmp_vmtype . Value ( ) , vmtype )"		3952764	0					
ANR	3953417	Callee	strcasecmp		3952764	0					
ANR	3953418	Identifier	strcasecmp		3952764	0					
ANR	3953419	ArgumentList	tmp_vmtype . Value ( )		3952764	1					
ANR	3953420	Argument	tmp_vmtype . Value ( )		3952764	0					
ANR	3953421	CallExpression	tmp_vmtype . Value ( )		3952764	0					
ANR	3953422	Callee	tmp_vmtype . Value		3952764	0					
ANR	3953423	MemberAccess	tmp_vmtype . Value		3952764	0					
ANR	3953424	Identifier	tmp_vmtype		3952764	0					
ANR	3953425	Identifier	Value		3952764	1					
ANR	3953426	ArgumentList			3952764	1					
ANR	3953427	Argument	vmtype		3952764	1					
ANR	3953428	Identifier	vmtype		3952764	0					
ANR	3953429	PrimaryExpression	0		3952764	1					
ANR	3953430	CompoundStatement		147:51:4768:4768	3952764	1					
ANR	3953431	ExpressionStatement	"dprintf ( D_ALWAYS , ""The vmgahp(%s) doesn't support this vmtype(%s)\\n"" , gahppath , vmtype )"	517:2:13783:13875	3952764	0	True				
ANR	3953432	CallExpression	"dprintf ( D_ALWAYS , ""The vmgahp(%s) doesn't support this vmtype(%s)\\n"" , gahppath , vmtype )"		3952764	0					
ANR	3953433	Callee	dprintf		3952764	0					
ANR	3953434	Identifier	dprintf		3952764	0					
ANR	3953435	ArgumentList	D_ALWAYS		3952764	1					
ANR	3953436	Argument	D_ALWAYS		3952764	0					
ANR	3953437	Identifier	D_ALWAYS		3952764	0					
ANR	3953438	Argument	"""The vmgahp(%s) doesn't support this vmtype(%s)\\n"""		3952764	1					
ANR	3953439	PrimaryExpression	"""The vmgahp(%s) doesn't support this vmtype(%s)\\n"""		3952764	0					
ANR	3953440	Argument	gahppath		3952764	2					
ANR	3953441	Identifier	gahppath		3952764	0					
ANR	3953442	Argument	vmtype		3952764	3					
ANR	3953443	Identifier	vmtype		3952764	0					
ANR	3953444	ReturnStatement	return false ;	519:2:13879:13891	3952764	1	True				
ANR	3953445	Identifier	false		3952764	0					
ANR	3953446	ExpressionStatement	"dprintf ( D_ALWAYS , ""VMType('%s') is supported\\n"" , vmtype )"	521:1:13897:13954	3952764	31	True				
ANR	3953447	CallExpression	"dprintf ( D_ALWAYS , ""VMType('%s') is supported\\n"" , vmtype )"		3952764	0					
ANR	3953448	Callee	dprintf		3952764	0					
ANR	3953449	Identifier	dprintf		3952764	0					
ANR	3953450	ArgumentList	D_ALWAYS		3952764	1					
ANR	3953451	Argument	D_ALWAYS		3952764	0					
ANR	3953452	Identifier	D_ALWAYS		3952764	0					
ANR	3953453	Argument	"""VMType('%s') is supported\\n"""		3952764	1					
ANR	3953454	PrimaryExpression	"""VMType('%s') is supported\\n"""		3952764	0					
ANR	3953455	Argument	vmtype		3952764	2					
ANR	3953456	Identifier	vmtype		3952764	0					
ANR	3953457	IfStatement	"if ( m_vmgahp_info . LookupInteger ( ATTR_VM_MEMORY , m_vm_max_memory ) != 1 )"		3952764	32					
ANR	3953458	Condition	"m_vmgahp_info . LookupInteger ( ATTR_VM_MEMORY , m_vm_max_memory ) != 1"	524:5:13981:14045	3952764	0	True				
ANR	3953459	EqualityExpression	"m_vmgahp_info . LookupInteger ( ATTR_VM_MEMORY , m_vm_max_memory ) != 1"		3952764	0		!=			
ANR	3953460	CallExpression	"m_vmgahp_info . LookupInteger ( ATTR_VM_MEMORY , m_vm_max_memory )"		3952764	0					
ANR	3953461	Callee	m_vmgahp_info . LookupInteger		3952764	0					
ANR	3953462	MemberAccess	m_vmgahp_info . LookupInteger		3952764	0					
ANR	3953463	Identifier	m_vmgahp_info		3952764	0					
ANR	3953464	Identifier	LookupInteger		3952764	1					
ANR	3953465	ArgumentList	ATTR_VM_MEMORY		3952764	1					
ANR	3953466	Argument	ATTR_VM_MEMORY		3952764	0					
ANR	3953467	Identifier	ATTR_VM_MEMORY		3952764	0					
ANR	3953468	Argument	m_vm_max_memory		3952764	1					
ANR	3953469	Identifier	m_vm_max_memory		3952764	0					
ANR	3953470	PrimaryExpression	1		3952764	1					
ANR	3953471	CompoundStatement		155:73:5038:5038	3952764	1					
ANR	3953472	ExpressionStatement	"dprintf ( D_ALWAYS , ""There is no %s in the output of vmgahp\\n"" , ATTR_VM_MEMORY )"	525:2:14053:14130	3952764	0	True				
ANR	3953473	CallExpression	"dprintf ( D_ALWAYS , ""There is no %s in the output of vmgahp\\n"" , ATTR_VM_MEMORY )"		3952764	0					
ANR	3953474	Callee	dprintf		3952764	0					
ANR	3953475	Identifier	dprintf		3952764	0					
ANR	3953476	ArgumentList	D_ALWAYS		3952764	1					
ANR	3953477	Argument	D_ALWAYS		3952764	0					
ANR	3953478	Identifier	D_ALWAYS		3952764	0					
ANR	3953479	Argument	"""There is no %s in the output of vmgahp\\n"""		3952764	1					
ANR	3953480	PrimaryExpression	"""There is no %s in the output of vmgahp\\n"""		3952764	0					
ANR	3953481	Argument	ATTR_VM_MEMORY		3952764	2					
ANR	3953482	Identifier	ATTR_VM_MEMORY		3952764	0					
ANR	3953483	ReturnStatement	return false ;	526:2:14134:14146	3952764	1	True				
ANR	3953484	Identifier	false		3952764	0					
ANR	3953485	IfStatement	if ( m_vm_max_memory == 0 )		3952764	33					
ANR	3953486	Condition	m_vm_max_memory == 0	528:5:14156:14175	3952764	0	True				
ANR	3953487	EqualityExpression	m_vm_max_memory == 0		3952764	0		==			
ANR	3953488	Identifier	m_vm_max_memory		3952764	0					
ANR	3953489	PrimaryExpression	0		3952764	1					
ANR	3953490	CompoundStatement		159:28:5168:5168	3952764	1					
ANR	3953491	ExpressionStatement	"dprintf ( D_ALWAYS , ""There is no sufficient memory for virtual machines\\n"" )"	529:2:14183:14257	3952764	0	True				
ANR	3953492	CallExpression	"dprintf ( D_ALWAYS , ""There is no sufficient memory for virtual machines\\n"" )"		3952764	0					
ANR	3953493	Callee	dprintf		3952764	0					
ANR	3953494	Identifier	dprintf		3952764	0					
ANR	3953495	ArgumentList	D_ALWAYS		3952764	1					
ANR	3953496	Argument	D_ALWAYS		3952764	0					
ANR	3953497	Identifier	D_ALWAYS		3952764	0					
ANR	3953498	Argument	"""There is no sufficient memory for virtual machines\\n"""		3952764	1					
ANR	3953499	PrimaryExpression	"""There is no sufficient memory for virtual machines\\n"""		3952764	0					
ANR	3953500	ReturnStatement	return false ;	530:2:14261:14273	3952764	1	True				
ANR	3953501	Identifier	false		3952764	0					
ANR	3953502	Statement	dprintf	533:1:14280:14286	3952764	34	True				
ANR	3953503	Statement	(	533:8:14287:14287	3952764	35	True				
ANR	3953504	Statement	D_ALWAYS	533:10:14289:14296	3952764	36	True				
ANR	3953505	Statement	","	533:18:14297:14297	3952764	37	True				
ANR	3953506	Statement	"""The maximum available memory for vm universe is """	533:20:14299:14348	3952764	38	True				
ANR	3953507	Statement	"""set to %d MB\\n"""	534:3:14353:14368	3952764	39	True				
ANR	3953508	Statement	","	534:19:14369:14369	3952764	40	True				
ANR	3953509	Statement	m_vm_max_memory	534:21:14371:14385	3952764	41	True				
ANR	3953510	Statement	)	534:36:14386:14386	3952764	42	True				
ANR	3953511	ExpressionStatement		534:37:14387:14387	3952764	43	True				
ANR	3953512	IdentifierDeclStatement	bool tmp_networking = false ;	537:1:14414:14441	3952764	44	True				
ANR	3953513	IdentifierDecl	tmp_networking = false		3952764	0					
ANR	3953514	IdentifierDeclType	bool		3952764	0					
ANR	3953515	Identifier	tmp_networking		3952764	1					
ANR	3953516	AssignmentExpression	tmp_networking = false		3952764	2		=			
ANR	3953517	Identifier	false		3952764	0					
ANR	3953518	Identifier	false		3952764	1					
ANR	3953519	IdentifierDeclStatement	MyString tmp_networking_types ;	538:1:14444:14473	3952764	45	True				
ANR	3953520	IdentifierDecl	tmp_networking_types		3952764	0					
ANR	3953521	IdentifierDeclType	MyString		3952764	0					
ANR	3953522	Identifier	tmp_networking_types		3952764	1					
ANR	3953523	ExpressionStatement	"m_vmgahp_info . LookupBool ( ATTR_VM_NETWORKING , tmp_networking )"	540:1:14477:14537	3952764	46	True				
ANR	3953524	CallExpression	"m_vmgahp_info . LookupBool ( ATTR_VM_NETWORKING , tmp_networking )"		3952764	0					
ANR	3953525	Callee	m_vmgahp_info . LookupBool		3952764	0					
ANR	3953526	MemberAccess	m_vmgahp_info . LookupBool		3952764	0					
ANR	3953527	Identifier	m_vmgahp_info		3952764	0					
ANR	3953528	Identifier	LookupBool		3952764	1					
ANR	3953529	ArgumentList	ATTR_VM_NETWORKING		3952764	1					
ANR	3953530	Argument	ATTR_VM_NETWORKING		3952764	0					
ANR	3953531	Identifier	ATTR_VM_NETWORKING		3952764	0					
ANR	3953532	Argument	tmp_networking		3952764	1					
ANR	3953533	Identifier	tmp_networking		3952764	0					
ANR	3953534	IfStatement	if ( tmp_networking )		3952764	47					
ANR	3953535	Condition	tmp_networking	541:5:14544:14557	3952764	0	True				
ANR	3953536	Identifier	tmp_networking		3952764	0					
ANR	3953537	CompoundStatement		172:22:5550:5550	3952764	1					
ANR	3953538	IfStatement	"if ( m_vmgahp_info . LookupString ( ATTR_VM_NETWORKING_TYPES , tmp_networking_types ) != 1 )"		3952764	0					
ANR	3953539	Condition	"m_vmgahp_info . LookupString ( ATTR_VM_NETWORKING_TYPES , tmp_networking_types ) != 1"	542:6:14569:14654	3952764	0	True				
ANR	3953540	EqualityExpression	"m_vmgahp_info . LookupString ( ATTR_VM_NETWORKING_TYPES , tmp_networking_types ) != 1"		3952764	0		!=			
ANR	3953541	CallExpression	"m_vmgahp_info . LookupString ( ATTR_VM_NETWORKING_TYPES , tmp_networking_types )"		3952764	0					
ANR	3953542	Callee	m_vmgahp_info . LookupString		3952764	0					
ANR	3953543	MemberAccess	m_vmgahp_info . LookupString		3952764	0					
ANR	3953544	Identifier	m_vmgahp_info		3952764	0					
ANR	3953545	Identifier	LookupString		3952764	1					
ANR	3953546	ArgumentList	ATTR_VM_NETWORKING_TYPES		3952764	1					
ANR	3953547	Argument	ATTR_VM_NETWORKING_TYPES		3952764	0					
ANR	3953548	Identifier	ATTR_VM_NETWORKING_TYPES		3952764	0					
ANR	3953549	Argument	tmp_networking_types		3952764	1					
ANR	3953550	Identifier	tmp_networking_types		3952764	0					
ANR	3953551	PrimaryExpression	1		3952764	1					
ANR	3953552	CompoundStatement		174:34:5647:5647	3952764	1					
ANR	3953553	ExpressionStatement	tmp_networking = false	544:3:14663:14685	3952764	0	True				
ANR	3953554	AssignmentExpression	tmp_networking = false		3952764	0		=			
ANR	3953555	Identifier	tmp_networking		3952764	0					
ANR	3953556	Identifier	false		3952764	1					
ANR	3953557	ExpressionStatement	"m_vmgahp_info . Assign ( ATTR_VM_NETWORKING , false )"	545:3:14690:14737	3952764	1	True				
ANR	3953558	CallExpression	"m_vmgahp_info . Assign ( ATTR_VM_NETWORKING , false )"		3952764	0					
ANR	3953559	Callee	m_vmgahp_info . Assign		3952764	0					
ANR	3953560	MemberAccess	m_vmgahp_info . Assign		3952764	0					
ANR	3953561	Identifier	m_vmgahp_info		3952764	0					
ANR	3953562	Identifier	Assign		3952764	1					
ANR	3953563	ArgumentList	ATTR_VM_NETWORKING		3952764	1					
ANR	3953564	Argument	ATTR_VM_NETWORKING		3952764	0					
ANR	3953565	Identifier	ATTR_VM_NETWORKING		3952764	0					
ANR	3953566	Argument	false		3952764	1					
ANR	3953567	Identifier	false		3952764	0					
ANR	3953568	ExpressionStatement	"m_vm_networking = param_boolean ( ""VM_NETWORKING"" , false )"	549:1:14748:14802	3952764	48	True				
ANR	3953569	AssignmentExpression	"m_vm_networking = param_boolean ( ""VM_NETWORKING"" , false )"		3952764	0		=			
ANR	3953570	Identifier	m_vm_networking		3952764	0					
ANR	3953571	CallExpression	"param_boolean ( ""VM_NETWORKING"" , false )"		3952764	1					
ANR	3953572	Callee	param_boolean		3952764	0					
ANR	3953573	Identifier	param_boolean		3952764	0					
ANR	3953574	ArgumentList	"""VM_NETWORKING"""		3952764	1					
ANR	3953575	Argument	"""VM_NETWORKING"""		3952764	0					
ANR	3953576	PrimaryExpression	"""VM_NETWORKING"""		3952764	0					
ANR	3953577	Argument	false		3952764	1					
ANR	3953578	Identifier	false		3952764	0					
ANR	3953579	IfStatement	if ( m_vm_networking )		3952764	49					
ANR	3953580	Condition	m_vm_networking	550:5:14809:14823	3952764	0	True				
ANR	3953581	Identifier	m_vm_networking		3952764	0					
ANR	3953582	CompoundStatement		181:23:5816:5816	3952764	1					
ANR	3953583	IfStatement	if ( ! tmp_networking )		3952764	0					
ANR	3953584	Condition	! tmp_networking	551:6:14835:14849	3952764	0	True				
ANR	3953585	UnaryOperationExpression	! tmp_networking		3952764	0					
ANR	3953586	UnaryOperator	!		3952764	0					
ANR	3953587	Identifier	tmp_networking		3952764	1					
ANR	3953588	CompoundStatement		182:24:5842:5842	3952764	1					
ANR	3953589	Statement	dprintf	552:3:14858:14864	3952764	0	True				
ANR	3953590	Statement	(	552:10:14865:14865	3952764	1	True				
ANR	3953591	Statement	D_ALWAYS	552:12:14867:14874	3952764	2	True				
ANR	3953592	Statement	","	552:20:14875:14875	3952764	3	True				
ANR	3953593	Statement	"""Even if VM_NETWORKING is TRUE in condor config,"""	552:22:14877:14925	3952764	4	True				
ANR	3953594	Statement	""" VM_NETWORKING is disabled because vmgahp doesn't """	553:5:14932:14983	3952764	5	True				
ANR	3953595	Statement	"""support VM_NETWORKING\\n"""	554:5:14990:15014	3952764	6	True				
ANR	3953596	Statement	)	554:30:15015:15015	3952764	7	True				
ANR	3953597	ExpressionStatement		554:31:15016:15016	3952764	8	True				
ANR	3953598	ExpressionStatement	m_vm_networking = false	555:3:15021:15044	3952764	9	True				
ANR	3953599	AssignmentExpression	m_vm_networking = false		3952764	0		=			
ANR	3953600	Identifier	m_vm_networking		3952764	0					
ANR	3953601	Identifier	false		3952764	1					
ANR	3953602	IfStatement	if ( m_vm_networking == false )		3952764	50					
ANR	3953603	Condition	m_vm_networking == false	558:5:15058:15081	3952764	0	True				
ANR	3953604	EqualityExpression	m_vm_networking == false		3952764	0		==			
ANR	3953605	Identifier	m_vm_networking		3952764	0					
ANR	3953606	Identifier	false		3952764	1					
ANR	3953607	CompoundStatement		189:32:6074:6074	3952764	1					
ANR	3953608	ExpressionStatement	"dprintf ( D_ALWAYS , ""VM networking is disabled\\n"" )"	559:2:15089:15138	3952764	0	True				
ANR	3953609	CallExpression	"dprintf ( D_ALWAYS , ""VM networking is disabled\\n"" )"		3952764	0					
ANR	3953610	Callee	dprintf		3952764	0					
ANR	3953611	Identifier	dprintf		3952764	0					
ANR	3953612	ArgumentList	D_ALWAYS		3952764	1					
ANR	3953613	Argument	D_ALWAYS		3952764	0					
ANR	3953614	Identifier	D_ALWAYS		3952764	0					
ANR	3953615	Argument	"""VM networking is disabled\\n"""		3952764	1					
ANR	3953616	PrimaryExpression	"""VM networking is disabled\\n"""		3952764	0					
ANR	3953617	ElseStatement	else		3952764	0					
ANR	3953618	CompoundStatement		191:7:6136:6136	3952764	0					
ANR	3953619	ExpressionStatement	"dprintf ( D_ALWAYS , ""VM networking is enabled\\n"" )"	561:2:15151:15199	3952764	0	True				
ANR	3953620	CallExpression	"dprintf ( D_ALWAYS , ""VM networking is enabled\\n"" )"		3952764	0					
ANR	3953621	Callee	dprintf		3952764	0					
ANR	3953622	Identifier	dprintf		3952764	0					
ANR	3953623	ArgumentList	D_ALWAYS		3952764	1					
ANR	3953624	Argument	D_ALWAYS		3952764	0					
ANR	3953625	Identifier	D_ALWAYS		3952764	0					
ANR	3953626	Argument	"""VM networking is enabled\\n"""		3952764	1					
ANR	3953627	PrimaryExpression	"""VM networking is enabled\\n"""		3952764	0					
ANR	3953628	ExpressionStatement	"dprintf ( D_ALWAYS , ""Supported networking types are %s\\n"" , tmp_networking_types . Value ( ) )"	562:2:15203:15295	3952764	1	True				
ANR	3953629	CallExpression	"dprintf ( D_ALWAYS , ""Supported networking types are %s\\n"" , tmp_networking_types . Value ( ) )"		3952764	0					
ANR	3953630	Callee	dprintf		3952764	0					
ANR	3953631	Identifier	dprintf		3952764	0					
ANR	3953632	ArgumentList	D_ALWAYS		3952764	1					
ANR	3953633	Argument	D_ALWAYS		3952764	0					
ANR	3953634	Identifier	D_ALWAYS		3952764	0					
ANR	3953635	Argument	"""Supported networking types are %s\\n"""		3952764	1					
ANR	3953636	PrimaryExpression	"""Supported networking types are %s\\n"""		3952764	0					
ANR	3953637	Argument	tmp_networking_types . Value ( )		3952764	2					
ANR	3953638	CallExpression	tmp_networking_types . Value ( )		3952764	0					
ANR	3953639	Callee	tmp_networking_types . Value		3952764	0					
ANR	3953640	MemberAccess	tmp_networking_types . Value		3952764	0					
ANR	3953641	Identifier	tmp_networking_types		3952764	0					
ANR	3953642	Identifier	Value		3952764	1					
ANR	3953643	ArgumentList			3952764	1					
ANR	3953644	ExpressionStatement	m_vm_type = tmp_vmtype	567:1:15358:15380	3952764	51	True				
ANR	3953645	AssignmentExpression	m_vm_type = tmp_vmtype		3952764	0		=			
ANR	3953646	Identifier	m_vm_type		3952764	0					
ANR	3953647	Identifier	tmp_vmtype		3952764	1					
ANR	3953648	ExpressionStatement	m_vmgahp_server = gahppath	568:1:15383:15409	3952764	52	True				
ANR	3953649	AssignmentExpression	m_vmgahp_server = gahppath		3952764	0		=			
ANR	3953650	Identifier	m_vmgahp_server		3952764	0					
ANR	3953651	Identifier	gahppath		3952764	1					
ANR	3953652	ReturnStatement	return true ;	570:1:15413:15424	3952764	53	True				
ANR	3953653	Identifier	true		3952764	0					
ANR	3953654	ReturnType	bool		3952764	1					
ANR	3953655	Identifier	VMUniverseMgr :: testVMGahp		3952764	2					
ANR	3953656	ParameterList	"const char * gahppath , const char * vmtype"		3952764	3					
ANR	3953657	Parameter	const char * gahppath	369:26:8968:8987	3952764	0	True				
ANR	3953658	ParameterType	const char *		3952764	0					
ANR	3953659	Identifier	gahppath		3952764	1					
ANR	3953660	Parameter	const char * vmtype	369:48:8990:9007	3952764	1	True				
ANR	3953661	ParameterType	const char *		3952764	0					
ANR	3953662	Identifier	vmtype		3952764	1					
ANR	3953663	CFGEntryNode	ENTRY		3952764		True				
ANR	3953664	CFGExitNode	EXIT		3952764		True				
ANR	3953665	Symbol	set_condor_priv		3952764						
ANR	3953666	Symbol	m_starter_has_vmcode		3952764						
ANR	3953667	Symbol	m_vmgahp_info . Insert		3952764						
ANR	3953668	Symbol	tmp_networking_types		3952764						
ANR	3953669	Symbol	m_vmgahp_server		3952764						
ANR	3953670	Symbol	fgets		3952764						
ANR	3953671	Symbol	m_vmgahp_info		3952764						
ANR	3953672	Symbol	tmp_networking_types . Value		3952764						
ANR	3953673	Symbol	ATTR_VM_NETWORKING_TYPES		3952764						
ANR	3953674	Symbol	need_log_file		3952764						
ANR	3953675	Symbol	can_switch_ids		3952764						
ANR	3953676	Symbol	CONDOR_VM_UNIVERSE_KVM		3952764						
ANR	3953677	Symbol	strcasecmp		3952764						
ANR	3953678	Symbol	read_something		3952764						
ANR	3953679	Symbol	gahp_log_file		3952764						
ANR	3953680	Symbol	tmp_str		3952764						
ANR	3953681	Symbol	NULL		3952764						
ANR	3953682	Symbol	ATTR_VM_MEMORY		3952764						
ANR	3953683	Symbol	args_string . Value		3952764						
ANR	3953684	Symbol	tmp_vmtype . Value		3952764						
ANR	3953685	Symbol	param_boolean		3952764						
ANR	3953686	Symbol	gahppath		3952764						
ANR	3953687	Symbol	ATTR_VM_TYPE		3952764						
ANR	3953688	Symbol	m_vm_type		3952764						
ANR	3953689	Symbol	m_vm_networking		3952764						
ANR	3953690	Symbol	true		3952764						
ANR	3953691	Symbol	err_msg2		3952764						
ANR	3953692	Symbol	CONDOR_VM_UNIVERSE_VMWARE		3952764						
ANR	3953693	Symbol	& args_string		3952764						
ANR	3953694	Symbol	tmp_networking		3952764						
ANR	3953695	Symbol	fp		3952764						
ANR	3953696	Symbol	my_popen		3952764						
ANR	3953697	Symbol	param		3952764						
ANR	3953698	Symbol	CONDOR_VM_UNIVERSE_XEN		3952764						
ANR	3953699	Symbol	m_vmgahp_info . LookupInteger		3952764						
ANR	3953700	Symbol	ATTR_VM_NETWORKING		3952764						
ANR	3953701	Symbol	m_vm_max_memory		3952764						
ANR	3953702	Symbol	args_string		3952764						
ANR	3953703	Symbol	vmtype		3952764						
ANR	3953704	Symbol	systemcmd		3952764						
ANR	3953705	Symbol	false		3952764						
ANR	3953706	Symbol	tmp_str . Value		3952764						
ANR	3953707	Symbol	D_ALWAYS		3952764						
ANR	3953708	Symbol	tmp_vmtype		3952764						
ANR	3953709	Symbol	set_root_priv		3952764						
ANR	3953710	Symbol	prev_priv		3952764						
ANR	3953711	Symbol	err_msg . Value		3952764						
ANR	3953712	Symbol	buf		3952764						
ANR	3953713	Symbol	m_vmgahp_info . LookupString		3952764						
ANR	3953714	Symbol	get_condor_uid		3952764						
ANR	3953715	Symbol	err_msg		3952764						
ANR	3953716	Symbol	m_needCheck		3952764						
ANR	3953717	Symbol	FALSE		3952764						
ANR	3953718	Symbol	VMGAHP_TEST_MODE		3952764						
ANR	3953719	Symbol	MATCH		3952764						
ANR	3953720	Function	VMUniverseMgr :: getFreeVMMemSize	573:0:15429:15515							
ANR	3953721	FunctionDef	VMUniverseMgr :: getFreeVMMemSize ()		3953720	0					
ANR	3953722	CompoundStatement		575:0:15467:15515	3953720	0					
ANR	3953723	ReturnStatement	return ( m_vm_max_memory - m_vm_used_memory ) ;	576:1:15470:15513	3953720	0	True				
ANR	3953724	AdditiveExpression	m_vm_max_memory - m_vm_used_memory		3953720	0		-			
ANR	3953725	Identifier	m_vm_max_memory		3953720	0					
ANR	3953726	Identifier	m_vm_used_memory		3953720	1					
ANR	3953727	ReturnType	int		3953720	1					
ANR	3953728	Identifier	VMUniverseMgr :: getFreeVMMemSize		3953720	2					
ANR	3953729	ParameterList			3953720	3					
ANR	3953730	CFGEntryNode	ENTRY		3953720		True				
ANR	3953731	CFGExitNode	EXIT		3953720		True				
ANR	3953732	Symbol	m_vm_max_memory		3953720						
ANR	3953733	Symbol	m_vm_used_memory		3953720						
ANR	3953734	Function	VMUniverseMgr :: canCreateVM	579:0:15518:16690							
ANR	3953735	FunctionDef	VMUniverseMgr :: canCreateVM (ClassAd * jobAd)		3953734	0					
ANR	3953736	CompoundStatement		581:0:15566:16690	3953734	0					
ANR	3953737	IfStatement	if ( ! m_starter_has_vmcode || ( m_vm_type . Length ( ) == 0 ) )		3953734	0					
ANR	3953738	Condition	! m_starter_has_vmcode || ( m_vm_type . Length ( ) == 0 )	582:5:15573:15624	3953734	0	True				
ANR	3953739	OrExpression	! m_starter_has_vmcode || ( m_vm_type . Length ( ) == 0 )		3953734	0		||			
ANR	3953740	UnaryOperationExpression	! m_starter_has_vmcode		3953734	0					
ANR	3953741	UnaryOperator	!		3953734	0					
ANR	3953742	Identifier	m_starter_has_vmcode		3953734	1					
ANR	3953743	EqualityExpression	m_vm_type . Length ( ) == 0		3953734	1		==			
ANR	3953744	CallExpression	m_vm_type . Length ( )		3953734	0					
ANR	3953745	Callee	m_vm_type . Length		3953734	0					
ANR	3953746	MemberAccess	m_vm_type . Length		3953734	0					
ANR	3953747	Identifier	m_vm_type		3953734	0					
ANR	3953748	Identifier	Length		3953734	1					
ANR	3953749	ArgumentList			3953734	1					
ANR	3953750	PrimaryExpression	0		3953734	1					
ANR	3953751	CompoundStatement		2:59:60:60	3953734	1					
ANR	3953752	ReturnStatement	return false ;	583:2:15631:15643	3953734	0	True				
ANR	3953753	Identifier	false		3953734	0					
ANR	3953754	IfStatement	if ( ( m_vm_max_num > 0 ) && ( numOfRunningVM ( ) >= m_vm_max_num ) )		3953734	1					
ANR	3953755	Condition	( m_vm_max_num > 0 ) && ( numOfRunningVM ( ) >= m_vm_max_num )	586:5:15654:15715	3953734	0	True				
ANR	3953756	AndExpression	( m_vm_max_num > 0 ) && ( numOfRunningVM ( ) >= m_vm_max_num )		3953734	0		&&			
ANR	3953757	RelationalExpression	m_vm_max_num > 0		3953734	0		>			
ANR	3953758	Identifier	m_vm_max_num		3953734	0					
ANR	3953759	PrimaryExpression	0		3953734	1					
ANR	3953760	RelationalExpression	numOfRunningVM ( ) >= m_vm_max_num		3953734	1		>=			
ANR	3953761	CallExpression	numOfRunningVM ( )		3953734	0					
ANR	3953762	Callee	numOfRunningVM		3953734	0					
ANR	3953763	Identifier	numOfRunningVM		3953734	0					
ANR	3953764	ArgumentList			3953734	1					
ANR	3953765	Identifier	m_vm_max_num		3953734	1					
ANR	3953766	CompoundStatement		7:40:152:152	3953734	1					
ANR	3953767	Statement	dprintf	588:2:15723:15729	3953734	0	True				
ANR	3953768	Statement	(	588:9:15730:15730	3953734	1	True				
ANR	3953769	Statement	D_ALWAYS	588:10:15731:15738	3953734	2	True				
ANR	3953770	Statement	","	588:18:15739:15739	3953734	3	True				
ANR	3953771	Statement	"""Current number(%d) of running VM reaches to """	588:20:15741:15786	3953734	4	True				
ANR	3953772	Statement	"""maximum number(%d)\\n"""	589:4:15792:15813	3953734	5	True				
ANR	3953773	Statement	","	589:26:15814:15814	3953734	6	True				
ANR	3953774	Statement	numOfRunningVM	589:28:15816:15829	3953734	7	True				
ANR	3953775	Statement	(	589:42:15830:15830	3953734	8	True				
ANR	3953776	Statement	)	589:43:15831:15831	3953734	9	True				
ANR	3953777	Statement	","	589:44:15832:15832	3953734	10	True				
ANR	3953778	Statement	m_vm_max_num	589:46:15834:15845	3953734	11	True				
ANR	3953779	Statement	)	589:58:15846:15846	3953734	12	True				
ANR	3953780	ExpressionStatement		589:59:15847:15847	3953734	13	True				
ANR	3953781	ReturnStatement	return false ;	590:2:15851:15863	3953734	14	True				
ANR	3953782	Identifier	false		3953734	0					
ANR	3953783	IfStatement	if ( ! jobAd )		3953734	2					
ANR	3953784	Condition	! jobAd	593:5:15874:15879	3953734	0	True				
ANR	3953785	UnaryOperationExpression	! jobAd		3953734	0					
ANR	3953786	UnaryOperator	!		3953734	0					
ANR	3953787	Identifier	jobAd		3953734	1					
ANR	3953788	CompoundStatement		13:14:316:316	3953734	1					
ANR	3953789	ReturnStatement	return true ;	594:2:15887:15898	3953734	0	True				
ANR	3953790	Identifier	true		3953734	0					
ANR	3953791	IdentifierDeclStatement	int int_value = 0 ;	598:1:15934:15951	3953734	3	True				
ANR	3953792	IdentifierDecl	int_value = 0		3953734	0					
ANR	3953793	IdentifierDeclType	int		3953734	0					
ANR	3953794	Identifier	int_value		3953734	1					
ANR	3953795	AssignmentExpression	int_value = 0		3953734	2		=			
ANR	3953796	Identifier	int_value		3953734	0					
ANR	3953797	PrimaryExpression	0		3953734	1					
ANR	3953798	IfStatement	"if ( jobAd -> LookupInteger ( ATTR_JOB_VM_MEMORY , int_value ) != 1 )"		3953734	4					
ANR	3953799	Condition	"jobAd -> LookupInteger ( ATTR_JOB_VM_MEMORY , int_value ) != 1"	599:5:15958:16013	3953734	0	True				
ANR	3953800	EqualityExpression	"jobAd -> LookupInteger ( ATTR_JOB_VM_MEMORY , int_value ) != 1"		3953734	0		!=			
ANR	3953801	CallExpression	"jobAd -> LookupInteger ( ATTR_JOB_VM_MEMORY , int_value )"		3953734	0					
ANR	3953802	Callee	jobAd -> LookupInteger		3953734	0					
ANR	3953803	PtrMemberAccess	jobAd -> LookupInteger		3953734	0					
ANR	3953804	Identifier	jobAd		3953734	0					
ANR	3953805	Identifier	LookupInteger		3953734	1					
ANR	3953806	ArgumentList	ATTR_JOB_VM_MEMORY		3953734	1					
ANR	3953807	Argument	ATTR_JOB_VM_MEMORY		3953734	0					
ANR	3953808	Identifier	ATTR_JOB_VM_MEMORY		3953734	0					
ANR	3953809	Argument	int_value		3953734	1					
ANR	3953810	Identifier	int_value		3953734	0					
ANR	3953811	PrimaryExpression	1		3953734	1					
ANR	3953812	CompoundStatement		19:64:450:450	3953734	1					
ANR	3953813	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't find VM memory in Job ClassAd\\n"" )"	600:2:16021:16079	3953734	0	True				
ANR	3953814	CallExpression	"dprintf ( D_ALWAYS , ""Can't find VM memory in Job ClassAd\\n"" )"		3953734	0					
ANR	3953815	Callee	dprintf		3953734	0					
ANR	3953816	Identifier	dprintf		3953734	0					
ANR	3953817	ArgumentList	D_ALWAYS		3953734	1					
ANR	3953818	Argument	D_ALWAYS		3953734	0					
ANR	3953819	Identifier	D_ALWAYS		3953734	0					
ANR	3953820	Argument	"""Can't find VM memory in Job ClassAd\\n"""		3953734	1					
ANR	3953821	PrimaryExpression	"""Can't find VM memory in Job ClassAd\\n"""		3953734	0					
ANR	3953822	ReturnStatement	return false ;	601:2:16083:16095	3953734	1	True				
ANR	3953823	Identifier	false		3953734	0					
ANR	3953824	IfStatement	if ( ! int_value || ( int_value > getFreeVMMemSize ( ) ) )		3953734	5					
ANR	3953825	Condition	! int_value || ( int_value > getFreeVMMemSize ( ) )	603:5:16105:16152	3953734	0	True				
ANR	3953826	OrExpression	! int_value || ( int_value > getFreeVMMemSize ( ) )		3953734	0		||			
ANR	3953827	UnaryOperationExpression	! int_value		3953734	0					
ANR	3953828	UnaryOperator	!		3953734	0					
ANR	3953829	Identifier	int_value		3953734	1					
ANR	3953830	RelationalExpression	int_value > getFreeVMMemSize ( )		3953734	1		>			
ANR	3953831	Identifier	int_value		3953734	0					
ANR	3953832	CallExpression	getFreeVMMemSize ( )		3953734	1					
ANR	3953833	Callee	getFreeVMMemSize		3953734	0					
ANR	3953834	Identifier	getFreeVMMemSize		3953734	0					
ANR	3953835	ArgumentList			3953734	1					
ANR	3953836	CompoundStatement		23:55:588:588	3953734	1					
ANR	3953837	Statement	dprintf	604:2:16159:16165	3953734	0	True				
ANR	3953838	Statement	(	604:9:16166:16166	3953734	1	True				
ANR	3953839	Statement	D_ALWAYS	604:10:16167:16174	3953734	2	True				
ANR	3953840	Statement	","	604:18:16175:16175	3953734	3	True				
ANR	3953841	Statement	"""Not enough memory for VM: Requested mem=%d(MB),"""	604:20:16177:16225	3953734	4	True				
ANR	3953842	Statement	""" Freemem=%d(MB)\\n"""	605:6:16233:16251	3953734	5	True				
ANR	3953843	Statement	","	605:25:16252:16252	3953734	6	True				
ANR	3953844	Statement	int_value	605:27:16254:16262	3953734	7	True				
ANR	3953845	Statement	","	605:36:16263:16263	3953734	8	True				
ANR	3953846	Statement	getFreeVMMemSize	605:38:16265:16280	3953734	9	True				
ANR	3953847	Statement	(	605:54:16281:16281	3953734	10	True				
ANR	3953848	Statement	)	605:55:16282:16282	3953734	11	True				
ANR	3953849	Statement	)	605:56:16283:16283	3953734	12	True				
ANR	3953850	ExpressionStatement		605:57:16284:16284	3953734	13	True				
ANR	3953851	ReturnStatement	return false ;	606:2:16289:16301	3953734	14	True				
ANR	3953852	Identifier	false		3953734	0					
ANR	3953853	IdentifierDeclStatement	MyString string_value ;	611:1:16391:16412	3953734	6	True				
ANR	3953854	IdentifierDecl	string_value		3953734	0					
ANR	3953855	IdentifierDeclType	MyString		3953734	0					
ANR	3953856	Identifier	string_value		3953734	1					
ANR	3953857	IfStatement	"if ( jobAd -> LookupString ( ATTR_VM_CKPT_MAC , string_value ) == 1 )"		3953734	7					
ANR	3953858	Condition	"jobAd -> LookupString ( ATTR_VM_CKPT_MAC , string_value ) == 1"	612:5:16419:16474	3953734	0	True				
ANR	3953859	EqualityExpression	"jobAd -> LookupString ( ATTR_VM_CKPT_MAC , string_value ) == 1"		3953734	0		==			
ANR	3953860	CallExpression	"jobAd -> LookupString ( ATTR_VM_CKPT_MAC , string_value )"		3953734	0					
ANR	3953861	Callee	jobAd -> LookupString		3953734	0					
ANR	3953862	PtrMemberAccess	jobAd -> LookupString		3953734	0					
ANR	3953863	Identifier	jobAd		3953734	0					
ANR	3953864	Identifier	LookupString		3953734	1					
ANR	3953865	ArgumentList	ATTR_VM_CKPT_MAC		3953734	1					
ANR	3953866	Argument	ATTR_VM_CKPT_MAC		3953734	0					
ANR	3953867	Identifier	ATTR_VM_CKPT_MAC		3953734	0					
ANR	3953868	Argument	string_value		3953734	1					
ANR	3953869	Identifier	string_value		3953734	0					
ANR	3953870	PrimaryExpression	1		3953734	1					
ANR	3953871	CompoundStatement		32:64:911:911	3953734	1					
ANR	3953872	IfStatement	if ( findVMStarterInfoWithMac ( string_value . Value ( ) ) )		3953734	0					
ANR	3953873	Condition	findVMStarterInfoWithMac ( string_value . Value ( ) )	613:6:16486:16531	3953734	0	True				
ANR	3953874	CallExpression	findVMStarterInfoWithMac ( string_value . Value ( ) )		3953734	0					
ANR	3953875	Callee	findVMStarterInfoWithMac		3953734	0					
ANR	3953876	Identifier	findVMStarterInfoWithMac		3953734	0					
ANR	3953877	ArgumentList	string_value . Value ( )		3953734	1					
ANR	3953878	Argument	string_value . Value ( )		3953734	0					
ANR	3953879	CallExpression	string_value . Value ( )		3953734	0					
ANR	3953880	Callee	string_value . Value		3953734	0					
ANR	3953881	MemberAccess	string_value . Value		3953734	0					
ANR	3953882	Identifier	string_value		3953734	0					
ANR	3953883	Identifier	Value		3953734	1					
ANR	3953884	ArgumentList			3953734	1					
ANR	3953885	CompoundStatement		33:55:968:968	3953734	1					
ANR	3953886	Statement	dprintf	614:3:16540:16546	3953734	0	True				
ANR	3953887	Statement	(	614:10:16547:16547	3953734	1	True				
ANR	3953888	Statement	D_ALWAYS	614:11:16548:16555	3953734	2	True				
ANR	3953889	Statement	","	614:19:16556:16556	3953734	3	True				
ANR	3953890	Statement	"""MAC address[%s] for VM is already being used """	614:21:16558:16604	3953734	4	True				
ANR	3953891	Statement	"""by other VM\\n"""	615:5:16611:16625	3953734	5	True				
ANR	3953892	Statement	","	615:20:16626:16626	3953734	6	True				
ANR	3953893	Statement	string_value	615:22:16628:16639	3953734	7	True				
ANR	3953894	Statement	.	615:34:16640:16640	3953734	8	True				
ANR	3953895	Statement	Value	615:35:16641:16645	3953734	9	True				
ANR	3953896	Statement	(	615:40:16646:16646	3953734	10	True				
ANR	3953897	Statement	)	615:41:16647:16647	3953734	11	True				
ANR	3953898	Statement	)	615:42:16648:16648	3953734	12	True				
ANR	3953899	ExpressionStatement		615:43:16649:16649	3953734	13	True				
ANR	3953900	ReturnStatement	return false ;	616:3:16654:16666	3953734	14	True				
ANR	3953901	Identifier	false		3953734	0					
ANR	3953902	ReturnStatement	return true ;	620:1:16677:16688	3953734	8	True				
ANR	3953903	Identifier	true		3953734	0					
ANR	3953904	ReturnType	bool		3953734	1					
ANR	3953905	Identifier	VMUniverseMgr :: canCreateVM		3953734	2					
ANR	3953906	ParameterList	ClassAd * jobAd		3953734	3					
ANR	3953907	Parameter	ClassAd * jobAd	580:27:15550:15563	3953734	0	True				
ANR	3953908	ParameterType	ClassAd *		3953734	0					
ANR	3953909	Identifier	jobAd		3953734	1					
ANR	3953910	CFGEntryNode	ENTRY		3953734		True				
ANR	3953911	CFGExitNode	EXIT		3953734		True				
ANR	3953912	Symbol	* jobAd		3953734						
ANR	3953913	Symbol	getFreeVMMemSize		3953734						
ANR	3953914	Symbol	jobAd -> LookupString		3953734						
ANR	3953915	Symbol	numOfRunningVM		3953734						
ANR	3953916	Symbol	ATTR_VM_CKPT_MAC		3953734						
ANR	3953917	Symbol	string_value		3953734						
ANR	3953918	Symbol	m_starter_has_vmcode		3953734						
ANR	3953919	Symbol	false		3953734						
ANR	3953920	Symbol	D_ALWAYS		3953734						
ANR	3953921	Symbol	jobAd		3953734						
ANR	3953922	Symbol	int_value		3953734						
ANR	3953923	Symbol	m_vm_type . Length		3953734						
ANR	3953924	Symbol	m_vm_type		3953734						
ANR	3953925	Symbol	string_value . Value		3953734						
ANR	3953926	Symbol	m_vm_max_num		3953734						
ANR	3953927	Symbol	jobAd -> LookupInteger		3953734						
ANR	3953928	Symbol	true		3953734						
ANR	3953929	Symbol	ATTR_JOB_VM_MEMORY		3953734						
ANR	3953930	Symbol	findVMStarterInfoWithMac		3953734						
ANR	3953931	Function	VMUniverseMgr :: allocVM	623:0:16693:17988							
ANR	3953932	FunctionDef	"VMUniverseMgr :: allocVM (pid_t s_pid , ClassAd & ad , char const * execute_dir)"		3953931	0					
ANR	3953933	CompoundStatement		625:0:16772:17988	3953931	0					
ANR	3953934	IfStatement	if ( canCreateVM ( & ad ) == false )		3953931	0					
ANR	3953935	Condition	canCreateVM ( & ad ) == false	626:5:16779:16803	3953931	0	True				
ANR	3953936	EqualityExpression	canCreateVM ( & ad ) == false		3953931	0		==			
ANR	3953937	CallExpression	canCreateVM ( & ad )		3953931	0					
ANR	3953938	Callee	canCreateVM		3953931	0					
ANR	3953939	Identifier	canCreateVM		3953931	0					
ANR	3953940	ArgumentList	& ad		3953931	1					
ANR	3953941	Argument	& ad		3953931	0					
ANR	3953942	UnaryOperationExpression	& ad		3953931	0					
ANR	3953943	UnaryOperator	&		3953931	0					
ANR	3953944	Identifier	ad		3953931	1					
ANR	3953945	Identifier	false		3953931	1					
ANR	3953946	CompoundStatement		2:33:34:34	3953931	1					
ANR	3953947	ReturnStatement	return false ;	627:2:16811:16823	3953931	0	True				
ANR	3953948	Identifier	false		3953931	0					
ANR	3953949	IdentifierDeclStatement	int vm_mem = 0 ;	631:1:16853:16867	3953931	1	True				
ANR	3953950	IdentifierDecl	vm_mem = 0		3953931	0					
ANR	3953951	IdentifierDeclType	int		3953931	0					
ANR	3953952	Identifier	vm_mem		3953931	1					
ANR	3953953	AssignmentExpression	vm_mem = 0		3953931	2		=			
ANR	3953954	Identifier	vm_mem		3953931	0					
ANR	3953955	PrimaryExpression	0		3953931	1					
ANR	3953956	IfStatement	"if ( ad . LookupInteger ( ATTR_JOB_VM_MEMORY , vm_mem ) != 1 )"		3953931	2					
ANR	3953957	Condition	"ad . LookupInteger ( ATTR_JOB_VM_MEMORY , vm_mem ) != 1"	632:5:16874:16922	3953931	0	True				
ANR	3953958	EqualityExpression	"ad . LookupInteger ( ATTR_JOB_VM_MEMORY , vm_mem ) != 1"		3953931	0		!=			
ANR	3953959	CallExpression	"ad . LookupInteger ( ATTR_JOB_VM_MEMORY , vm_mem )"		3953931	0					
ANR	3953960	Callee	ad . LookupInteger		3953931	0					
ANR	3953961	MemberAccess	ad . LookupInteger		3953931	0					
ANR	3953962	Identifier	ad		3953931	0					
ANR	3953963	Identifier	LookupInteger		3953931	1					
ANR	3953964	ArgumentList	ATTR_JOB_VM_MEMORY		3953931	1					
ANR	3953965	Argument	ATTR_JOB_VM_MEMORY		3953931	0					
ANR	3953966	Identifier	ATTR_JOB_VM_MEMORY		3953931	0					
ANR	3953967	Argument	vm_mem		3953931	1					
ANR	3953968	Identifier	vm_mem		3953931	0					
ANR	3953969	PrimaryExpression	1		3953931	1					
ANR	3953970	CompoundStatement		8:57:153:153	3953931	1					
ANR	3953971	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't find VM memory in Job ClassAd\\n"" )"	633:2:16930:16988	3953931	0	True				
ANR	3953972	CallExpression	"dprintf ( D_ALWAYS , ""Can't find VM memory in Job ClassAd\\n"" )"		3953931	0					
ANR	3953973	Callee	dprintf		3953931	0					
ANR	3953974	Identifier	dprintf		3953931	0					
ANR	3953975	ArgumentList	D_ALWAYS		3953931	1					
ANR	3953976	Argument	D_ALWAYS		3953931	0					
ANR	3953977	Identifier	D_ALWAYS		3953931	0					
ANR	3953978	Argument	"""Can't find VM memory in Job ClassAd\\n"""		3953931	1					
ANR	3953979	PrimaryExpression	"""Can't find VM memory in Job ClassAd\\n"""		3953931	0					
ANR	3953980	ReturnStatement	return false ;	634:2:16992:17004	3953931	1	True				
ANR	3953981	Identifier	false		3953931	0					
ANR	3953982	IdentifierDeclStatement	int vcpus = 0 ;	637:1:17011:17024	3953931	3	True				
ANR	3953983	IdentifierDecl	vcpus = 0		3953931	0					
ANR	3953984	IdentifierDeclType	int		3953931	0					
ANR	3953985	Identifier	vcpus		3953931	1					
ANR	3953986	AssignmentExpression	vcpus = 0		3953931	2		=			
ANR	3953987	Identifier	vcpus		3953931	0					
ANR	3953988	PrimaryExpression	0		3953931	1					
ANR	3953989	IfStatement	"if ( ad . LookupInteger ( ATTR_JOB_VM_VCPUS , vcpus ) != 1 )"		3953931	4					
ANR	3953990	Condition	"ad . LookupInteger ( ATTR_JOB_VM_VCPUS , vcpus ) != 1"	638:4:17030:17076	3953931	0	True				
ANR	3953991	EqualityExpression	"ad . LookupInteger ( ATTR_JOB_VM_VCPUS , vcpus ) != 1"		3953931	0		!=			
ANR	3953992	CallExpression	"ad . LookupInteger ( ATTR_JOB_VM_VCPUS , vcpus )"		3953931	0					
ANR	3953993	Callee	ad . LookupInteger		3953931	0					
ANR	3953994	MemberAccess	ad . LookupInteger		3953931	0					
ANR	3953995	Identifier	ad		3953931	0					
ANR	3953996	Identifier	LookupInteger		3953931	1					
ANR	3953997	ArgumentList	ATTR_JOB_VM_VCPUS		3953931	1					
ANR	3953998	Argument	ATTR_JOB_VM_VCPUS		3953931	0					
ANR	3953999	Identifier	ATTR_JOB_VM_VCPUS		3953931	0					
ANR	3954000	Argument	vcpus		3953931	1					
ANR	3954001	Identifier	vcpus		3953931	0					
ANR	3954002	PrimaryExpression	1		3953931	1					
ANR	3954003	CompoundStatement		15:3:309:309	3953931	1					
ANR	3954004	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Defaulting to one CPU\\n"" )"	640:5:17089:17136	3953931	0	True				
ANR	3954005	CallExpression	"dprintf ( D_FULLDEBUG , ""Defaulting to one CPU\\n"" )"		3953931	0					
ANR	3954006	Callee	dprintf		3953931	0					
ANR	3954007	Identifier	dprintf		3953931	0					
ANR	3954008	ArgumentList	D_FULLDEBUG		3953931	1					
ANR	3954009	Argument	D_FULLDEBUG		3953931	0					
ANR	3954010	Identifier	D_FULLDEBUG		3953931	0					
ANR	3954011	Argument	"""Defaulting to one CPU\\n"""		3953931	1					
ANR	3954012	PrimaryExpression	"""Defaulting to one CPU\\n"""		3953931	0					
ANR	3954013	ExpressionStatement	vcpus = 1	641:5:17143:17152	3953931	1	True				
ANR	3954014	AssignmentExpression	vcpus = 1		3953931	0		=			
ANR	3954015	Identifier	vcpus		3953931	0					
ANR	3954016	PrimaryExpression	1		3953931	1					
ANR	3954017	IdentifierDeclStatement	VMStarterInfo * oldinfo = findVMStarterInfoWithStarterPid ( s_pid ) ;	645:1:17203:17266	3953931	5	True				
ANR	3954018	IdentifierDecl	* oldinfo = findVMStarterInfoWithStarterPid ( s_pid )		3953931	0					
ANR	3954019	IdentifierDeclType	VMStarterInfo *		3953931	0					
ANR	3954020	Identifier	oldinfo		3953931	1					
ANR	3954021	AssignmentExpression	* oldinfo = findVMStarterInfoWithStarterPid ( s_pid )		3953931	2		=			
ANR	3954022	Identifier	oldinfo		3953931	0					
ANR	3954023	CallExpression	findVMStarterInfoWithStarterPid ( s_pid )		3953931	1					
ANR	3954024	Callee	findVMStarterInfoWithStarterPid		3953931	0					
ANR	3954025	Identifier	findVMStarterInfoWithStarterPid		3953931	0					
ANR	3954026	ArgumentList	s_pid		3953931	1					
ANR	3954027	Argument	s_pid		3953931	0					
ANR	3954028	Identifier	s_pid		3953931	0					
ANR	3954029	IfStatement	if ( oldinfo )		3953931	6					
ANR	3954030	Condition	oldinfo	646:5:17273:17279	3953931	0	True				
ANR	3954031	Identifier	oldinfo		3953931	0					
ANR	3954032	CompoundStatement		22:15:510:510	3953931	1					
ANR	3954033	ExpressionStatement	freeVM ( s_pid )	647:2:17287:17300	3953931	0	True				
ANR	3954034	CallExpression	freeVM ( s_pid )		3953931	0					
ANR	3954035	Callee	freeVM		3953931	0					
ANR	3954036	Identifier	freeVM		3953931	0					
ANR	3954037	ArgumentList	s_pid		3953931	1					
ANR	3954038	Argument	s_pid		3953931	0					
ANR	3954039	Identifier	s_pid		3953931	0					
ANR	3954040	ExpressionStatement	oldinfo = NULL	649:2:17327:17341	3953931	1	True				
ANR	3954041	AssignmentExpression	oldinfo = NULL		3953931	0		=			
ANR	3954042	Identifier	oldinfo		3953931	0					
ANR	3954043	Identifier	NULL		3953931	1					
ANR	3954044	Statement	VMStarterInfo	652:1:17349:17361	3953931	7	True				
ANR	3954045	Statement	*	652:15:17363:17363	3953931	8	True				
ANR	3954046	Statement	newinfo	652:16:17364:17370	3953931	9	True				
ANR	3954047	Statement	=	652:24:17372:17372	3953931	10	True				
ANR	3954048	Statement	new	652:26:17374:17376	3953931	11	True				
ANR	3954049	ExpressionStatement	VMStarterInfo	652:30:17378:17391	3953931	12	True				
ANR	3954050	Identifier	VMStarterInfo		3953931	0					
ANR	3954051	ExpressionStatement	ASSERT ( newinfo )	653:1:17394:17409	3953931	13	True				
ANR	3954052	CallExpression	ASSERT ( newinfo )		3953931	0					
ANR	3954053	Callee	ASSERT		3953931	0					
ANR	3954054	Identifier	ASSERT		3953931	0					
ANR	3954055	ArgumentList	newinfo		3953931	1					
ANR	3954056	Argument	newinfo		3953931	0					
ANR	3954057	Identifier	newinfo		3953931	0					
ANR	3954058	ExpressionStatement	m_vm_used_memory += vm_mem	655:1:17413:17439	3953931	14	True				
ANR	3954059	AssignmentExpression	m_vm_used_memory += vm_mem		3953931	0		+=			
ANR	3954060	Identifier	m_vm_used_memory		3953931	0					
ANR	3954061	Identifier	vm_mem		3953931	1					
ANR	3954062	ExpressionStatement	newinfo -> m_pid = s_pid	657:1:17443:17465	3953931	15	True				
ANR	3954063	AssignmentExpression	newinfo -> m_pid = s_pid		3953931	0		=			
ANR	3954064	PtrMemberAccess	newinfo -> m_pid		3953931	0					
ANR	3954065	Identifier	newinfo		3953931	0					
ANR	3954066	Identifier	m_pid		3953931	1					
ANR	3954067	Identifier	s_pid		3953931	1					
ANR	3954068	ExpressionStatement	newinfo -> m_memory = vm_mem	658:1:17468:17494	3953931	16	True				
ANR	3954069	AssignmentExpression	newinfo -> m_memory = vm_mem		3953931	0		=			
ANR	3954070	PtrMemberAccess	newinfo -> m_memory		3953931	0					
ANR	3954071	Identifier	newinfo		3953931	0					
ANR	3954072	Identifier	m_memory		3953931	1					
ANR	3954073	Identifier	vm_mem		3953931	1					
ANR	3954074	ExpressionStatement	newinfo -> m_job_ad = ad	659:1:17497:17519	3953931	17	True				
ANR	3954075	AssignmentExpression	newinfo -> m_job_ad = ad		3953931	0		=			
ANR	3954076	PtrMemberAccess	newinfo -> m_job_ad		3953931	0					
ANR	3954077	Identifier	newinfo		3953931	0					
ANR	3954078	Identifier	m_job_ad		3953931	1					
ANR	3954079	Identifier	ad		3953931	1					
ANR	3954080	ExpressionStatement	newinfo -> m_execute_dir = execute_dir	660:1:17523:17559	3953931	18	True				
ANR	3954081	AssignmentExpression	newinfo -> m_execute_dir = execute_dir		3953931	0		=			
ANR	3954082	PtrMemberAccess	newinfo -> m_execute_dir		3953931	0					
ANR	3954083	Identifier	newinfo		3953931	0					
ANR	3954084	Identifier	m_execute_dir		3953931	1					
ANR	3954085	Identifier	execute_dir		3953931	1					
ANR	3954086	ExpressionStatement	newinfo -> m_vcpus = vcpus	661:1:17562:17586	3953931	19	True				
ANR	3954087	AssignmentExpression	newinfo -> m_vcpus = vcpus		3953931	0		=			
ANR	3954088	PtrMemberAccess	newinfo -> m_vcpus		3953931	0					
ANR	3954089	Identifier	newinfo		3953931	0					
ANR	3954090	Identifier	m_vcpus		3953931	1					
ANR	3954091	Identifier	vcpus		3953931	1					
ANR	3954092	IdentifierDeclStatement	MyString string_value ;	665:1:17686:17707	3953931	20	True				
ANR	3954093	IdentifierDecl	string_value		3953931	0					
ANR	3954094	IdentifierDeclType	MyString		3953931	0					
ANR	3954095	Identifier	string_value		3953931	1					
ANR	3954096	IfStatement	"if ( ad . LookupString ( ATTR_VM_CKPT_MAC , string_value ) == 1 )"		3953931	21					
ANR	3954097	Condition	"ad . LookupString ( ATTR_VM_CKPT_MAC , string_value ) == 1"	666:5:17714:17765	3953931	0	True				
ANR	3954098	EqualityExpression	"ad . LookupString ( ATTR_VM_CKPT_MAC , string_value ) == 1"		3953931	0		==			
ANR	3954099	CallExpression	"ad . LookupString ( ATTR_VM_CKPT_MAC , string_value )"		3953931	0					
ANR	3954100	Callee	ad . LookupString		3953931	0					
ANR	3954101	MemberAccess	ad . LookupString		3953931	0					
ANR	3954102	Identifier	ad		3953931	0					
ANR	3954103	Identifier	LookupString		3953931	1					
ANR	3954104	ArgumentList	ATTR_VM_CKPT_MAC		3953931	1					
ANR	3954105	Argument	ATTR_VM_CKPT_MAC		3953931	0					
ANR	3954106	Identifier	ATTR_VM_CKPT_MAC		3953931	0					
ANR	3954107	Argument	string_value		3953931	1					
ANR	3954108	Identifier	string_value		3953931	0					
ANR	3954109	PrimaryExpression	1		3953931	1					
ANR	3954110	CompoundStatement		42:60:996:996	3953931	1					
ANR	3954111	ExpressionStatement	newinfo -> m_vm_mac = string_value	667:2:17773:17805	3953931	0	True				
ANR	3954112	AssignmentExpression	newinfo -> m_vm_mac = string_value		3953931	0		=			
ANR	3954113	PtrMemberAccess	newinfo -> m_vm_mac		3953931	0					
ANR	3954114	Identifier	newinfo		3953931	0					
ANR	3954115	Identifier	m_vm_mac		3953931	1					
ANR	3954116	Identifier	string_value		3953931	1					
ANR	3954117	ExpressionStatement	m_vm_starter_list . Append ( newinfo )	676:1:17939:17972	3953931	22	True				
ANR	3954118	CallExpression	m_vm_starter_list . Append ( newinfo )		3953931	0					
ANR	3954119	Callee	m_vm_starter_list . Append		3953931	0					
ANR	3954120	MemberAccess	m_vm_starter_list . Append		3953931	0					
ANR	3954121	Identifier	m_vm_starter_list		3953931	0					
ANR	3954122	Identifier	Append		3953931	1					
ANR	3954123	ArgumentList	newinfo		3953931	1					
ANR	3954124	Argument	newinfo		3953931	0					
ANR	3954125	Identifier	newinfo		3953931	0					
ANR	3954126	ReturnStatement	return true ;	677:1:17975:17986	3953931	23	True				
ANR	3954127	Identifier	true		3953931	0					
ANR	3954128	ReturnType	bool		3953931	1					
ANR	3954129	Identifier	VMUniverseMgr :: allocVM		3953931	2					
ANR	3954130	ParameterList	"pid_t s_pid , ClassAd & ad , char const * execute_dir"		3953931	3					
ANR	3954131	Parameter	pid_t s_pid	624:23:16721:16731	3953931	0	True				
ANR	3954132	ParameterType	pid_t		3953931	0					
ANR	3954133	Identifier	s_pid		3953931	1					
ANR	3954134	Parameter	ClassAd & ad	624:36:16734:16744	3953931	1	True				
ANR	3954135	ParameterType	ClassAd &		3953931	0					
ANR	3954136	Identifier	ad		3953931	1					
ANR	3954137	Parameter	char const * execute_dir	624:49:16747:16769	3953931	2	True				
ANR	3954138	ParameterType	char const *		3953931	0					
ANR	3954139	Identifier	execute_dir		3953931	1					
ANR	3954140	CFGEntryNode	ENTRY		3953931		True				
ANR	3954141	CFGExitNode	EXIT		3953931		True				
ANR	3954142	Symbol	newinfo -> m_vcpus		3953931						
ANR	3954143	Symbol	oldinfo		3953931						
ANR	3954144	Symbol	vm_mem		3953931						
ANR	3954145	Symbol	newinfo -> m_memory		3953931						
ANR	3954146	Symbol	newinfo -> m_vm_mac		3953931						
ANR	3954147	Symbol	newinfo		3953931						
ANR	3954148	Symbol	newinfo -> m_job_ad		3953931						
ANR	3954149	Symbol	& ad		3953931						
ANR	3954150	Symbol	ATTR_JOB_VM_VCPUS		3953931						
ANR	3954151	Symbol	ad . LookupInteger		3953931						
ANR	3954152	Symbol	newinfo -> m_pid		3953931						
ANR	3954153	Symbol	execute_dir		3953931						
ANR	3954154	Symbol	ATTR_VM_CKPT_MAC		3953931						
ANR	3954155	Symbol	ad		3953931						
ANR	3954156	Symbol	NULL		3953931						
ANR	3954157	Symbol	string_value		3953931						
ANR	3954158	Symbol	false		3953931						
ANR	3954159	Symbol	D_ALWAYS		3953931						
ANR	3954160	Symbol	m_vm_used_memory		3953931						
ANR	3954161	Symbol	D_FULLDEBUG		3953931						
ANR	3954162	Symbol	canCreateVM		3953931						
ANR	3954163	Symbol	vcpus		3953931						
ANR	3954164	Symbol	findVMStarterInfoWithStarterPid		3953931						
ANR	3954165	Symbol	ad . LookupString		3953931						
ANR	3954166	Symbol	m_vm_starter_list		3953931						
ANR	3954167	Symbol	newinfo -> m_execute_dir		3953931						
ANR	3954168	Symbol	true		3953931						
ANR	3954169	Symbol	ATTR_JOB_VM_MEMORY		3953931						
ANR	3954170	Symbol	* newinfo		3953931						
ANR	3954171	Symbol	s_pid		3953931						
ANR	3954172	Function	VMUniverseMgr :: freeVM	680:0:17991:18730							
ANR	3954173	FunctionDef	VMUniverseMgr :: freeVM (pid_t s_pid)		3954172	0					
ANR	3954174	CompoundStatement		682:0:18031:18730	3954172	0					
ANR	3954175	IdentifierDeclStatement	VMStarterInfo * info = findVMStarterInfoWithStarterPid ( s_pid ) ;	683:1:18034:18094	3954172	0	True				
ANR	3954176	IdentifierDecl	* info = findVMStarterInfoWithStarterPid ( s_pid )		3954172	0					
ANR	3954177	IdentifierDeclType	VMStarterInfo *		3954172	0					
ANR	3954178	Identifier	info		3954172	1					
ANR	3954179	AssignmentExpression	* info = findVMStarterInfoWithStarterPid ( s_pid )		3954172	2		=			
ANR	3954180	Identifier	info		3954172	0					
ANR	3954181	CallExpression	findVMStarterInfoWithStarterPid ( s_pid )		3954172	1					
ANR	3954182	Callee	findVMStarterInfoWithStarterPid		3954172	0					
ANR	3954183	Identifier	findVMStarterInfoWithStarterPid		3954172	0					
ANR	3954184	ArgumentList	s_pid		3954172	1					
ANR	3954185	Argument	s_pid		3954172	0					
ANR	3954186	Identifier	s_pid		3954172	0					
ANR	3954187	IfStatement	if ( ! info )		3954172	1					
ANR	3954188	Condition	! info	684:5:18101:18105	3954172	0	True				
ANR	3954189	UnaryOperationExpression	! info		3954172	0					
ANR	3954190	UnaryOperator	!		3954172	0					
ANR	3954191	Identifier	info		3954172	1					
ANR	3954192	CompoundStatement		3:13:77:77	3954172	1					
ANR	3954193	ReturnStatement	return ;	685:2:18113:18119	3954172	0	True				
ANR	3954194	IdentifierDeclStatement	MyString pid_dir ;	688:1:18126:18142	3954172	2	True				
ANR	3954195	IdentifierDecl	pid_dir		3954172	0					
ANR	3954196	IdentifierDeclType	MyString		3954172	0					
ANR	3954197	Identifier	pid_dir		3954172	1					
ANR	3954198	IdentifierDeclStatement	"Directory execute_dir ( info -> m_execute_dir . Value ( ) , PRIV_ROOT ) ;"	689:1:18145:18206	3954172	3	True				
ANR	3954199	IdentifierDecl	"execute_dir ( info -> m_execute_dir . Value ( ) , PRIV_ROOT )"		3954172	0					
ANR	3954200	IdentifierDeclType	Directory		3954172	0					
ANR	3954201	Identifier	execute_dir		3954172	1					
ANR	3954202	Expression	"info -> m_execute_dir . Value ( ) , PRIV_ROOT"		3954172	2					
ANR	3954203	CallExpression	info -> m_execute_dir . Value ( )		3954172	0					
ANR	3954204	Callee	info -> m_execute_dir . Value		3954172	0					
ANR	3954205	MemberAccess	info -> m_execute_dir . Value		3954172	0					
ANR	3954206	PtrMemberAccess	info -> m_execute_dir		3954172	0					
ANR	3954207	Identifier	info		3954172	0					
ANR	3954208	Identifier	m_execute_dir		3954172	1					
ANR	3954209	Identifier	Value		3954172	1					
ANR	3954210	ArgumentList			3954172	1					
ANR	3954211	Identifier	PRIV_ROOT		3954172	1					
ANR	3954212	ExpressionStatement	"pid_dir . sprintf ( ""dir_%ld"" , ( long ) s_pid )"	690:1:18209:18248	3954172	4	True				
ANR	3954213	CallExpression	"pid_dir . sprintf ( ""dir_%ld"" , ( long ) s_pid )"		3954172	0					
ANR	3954214	Callee	pid_dir . sprintf		3954172	0					
ANR	3954215	MemberAccess	pid_dir . sprintf		3954172	0					
ANR	3954216	Identifier	pid_dir		3954172	0					
ANR	3954217	Identifier	sprintf		3954172	1					
ANR	3954218	ArgumentList	"""dir_%ld"""		3954172	1					
ANR	3954219	Argument	"""dir_%ld"""		3954172	0					
ANR	3954220	PrimaryExpression	"""dir_%ld"""		3954172	0					
ANR	3954221	Argument	( long ) s_pid		3954172	1					
ANR	3954222	CastExpression	( long ) s_pid		3954172	0					
ANR	3954223	CastTarget	long		3954172	0					
ANR	3954224	Identifier	s_pid		3954172	1					
ANR	3954225	IfStatement	if ( execute_dir . Find_Named_Entry ( pid_dir . Value ( ) ) )		3954172	5					
ANR	3954226	Condition	execute_dir . Find_Named_Entry ( pid_dir . Value ( ) )	692:5:18256:18302	3954172	0	True				
ANR	3954227	CallExpression	execute_dir . Find_Named_Entry ( pid_dir . Value ( ) )		3954172	0					
ANR	3954228	Callee	execute_dir . Find_Named_Entry		3954172	0					
ANR	3954229	MemberAccess	execute_dir . Find_Named_Entry		3954172	0					
ANR	3954230	Identifier	execute_dir		3954172	0					
ANR	3954231	Identifier	Find_Named_Entry		3954172	1					
ANR	3954232	ArgumentList	pid_dir . Value ( )		3954172	1					
ANR	3954233	Argument	pid_dir . Value ( )		3954172	0					
ANR	3954234	CallExpression	pid_dir . Value ( )		3954172	0					
ANR	3954235	Callee	pid_dir . Value		3954172	0					
ANR	3954236	MemberAccess	pid_dir . Value		3954172	0					
ANR	3954237	Identifier	pid_dir		3954172	0					
ANR	3954238	Identifier	Value		3954172	1					
ANR	3954239	ArgumentList			3954172	1					
ANR	3954240	CompoundStatement		11:55:274:274	3954172	1					
ANR	3954241	ExpressionStatement	killVM ( info )	696:2:18447:18459	3954172	0	True				
ANR	3954242	CallExpression	killVM ( info )		3954172	0					
ANR	3954243	Callee	killVM		3954172	0					
ANR	3954244	Identifier	killVM		3954172	0					
ANR	3954245	ArgumentList	info		3954172	1					
ANR	3954246	Argument	info		3954172	0					
ANR	3954247	Identifier	info		3954172	0					
ANR	3954248	ExpressionStatement	m_vm_used_memory -= info -> m_memory	699:1:18466:18500	3954172	6	True				
ANR	3954249	AssignmentExpression	m_vm_used_memory -= info -> m_memory		3954172	0		-=			
ANR	3954250	Identifier	m_vm_used_memory		3954172	0					
ANR	3954251	PtrMemberAccess	info -> m_memory		3954172	1					
ANR	3954252	Identifier	info		3954172	0					
ANR	3954253	Identifier	m_memory		3954172	1					
ANR	3954254	ExpressionStatement	m_vm_starter_list . Delete ( info )	700:1:18503:18533	3954172	7	True				
ANR	3954255	CallExpression	m_vm_starter_list . Delete ( info )		3954172	0					
ANR	3954256	Callee	m_vm_starter_list . Delete		3954172	0					
ANR	3954257	MemberAccess	m_vm_starter_list . Delete		3954172	0					
ANR	3954258	Identifier	m_vm_starter_list		3954172	0					
ANR	3954259	Identifier	Delete		3954172	1					
ANR	3954260	ArgumentList	info		3954172	1					
ANR	3954261	Argument	info		3954172	0					
ANR	3954262	Identifier	info		3954172	0					
ANR	3954263	Statement	delete	701:1:18536:18541	3954172	8	True				
ANR	3954264	ExpressionStatement	info	701:8:18543:18547	3954172	9	True				
ANR	3954265	Identifier	info		3954172	0					
ANR	3954266	IfStatement	if ( ! m_vm_starter_list . Number ( ) && m_needCheck )		3954172	10					
ANR	3954267	Condition	! m_vm_starter_list . Number ( ) && m_needCheck	703:5:18555:18596	3954172	0	True				
ANR	3954268	AndExpression	! m_vm_starter_list . Number ( ) && m_needCheck		3954172	0		&&			
ANR	3954269	UnaryOperationExpression	! m_vm_starter_list . Number ( )		3954172	0					
ANR	3954270	UnaryOperator	!		3954172	0					
ANR	3954271	CallExpression	m_vm_starter_list . Number ( )		3954172	1					
ANR	3954272	Callee	m_vm_starter_list . Number		3954172	0					
ANR	3954273	MemberAccess	m_vm_starter_list . Number		3954172	0					
ANR	3954274	Identifier	m_vm_starter_list		3954172	0					
ANR	3954275	Identifier	Number		3954172	1					
ANR	3954276	ArgumentList			3954172	1					
ANR	3954277	Identifier	m_needCheck		3954172	1					
ANR	3954278	CompoundStatement		22:50:568:568	3954172	1					
ANR	3954279	ExpressionStatement	docheckVMUniverse ( )	706:2:18706:18725	3954172	0	True				
ANR	3954280	CallExpression	docheckVMUniverse ( )		3954172	0					
ANR	3954281	Callee	docheckVMUniverse		3954172	0					
ANR	3954282	Identifier	docheckVMUniverse		3954172	0					
ANR	3954283	ArgumentList			3954172	1					
ANR	3954284	ReturnType	void		3954172	1					
ANR	3954285	Identifier	VMUniverseMgr :: freeVM		3954172	2					
ANR	3954286	ParameterList	pid_t s_pid		3954172	3					
ANR	3954287	Parameter	pid_t s_pid	681:22:18018:18028	3954172	0	True				
ANR	3954288	ParameterType	pid_t		3954172	0					
ANR	3954289	Identifier	s_pid		3954172	1					
ANR	3954290	CFGEntryNode	ENTRY		3954172		True				
ANR	3954291	CFGExitNode	EXIT		3954172		True				
ANR	3954292	Symbol	execute_dir		3954172						
ANR	3954293	Symbol	m_vm_starter_list . Number		3954172						
ANR	3954294	Symbol	m_vm_used_memory		3954172						
ANR	3954295	Symbol	findVMStarterInfoWithStarterPid		3954172						
ANR	3954296	Symbol	execute_dir . Find_Named_Entry		3954172						
ANR	3954297	Symbol	info -> m_memory		3954172						
ANR	3954298	Symbol	pid_dir		3954172						
ANR	3954299	Symbol	pid_dir . Value		3954172						
ANR	3954300	Symbol	m_vm_starter_list		3954172						
ANR	3954301	Symbol	info -> m_execute_dir		3954172						
ANR	3954302	Symbol	m_needCheck		3954172						
ANR	3954303	Symbol	* info		3954172						
ANR	3954304	Symbol	s_pid		3954172						
ANR	3954305	Symbol	info		3954172						
ANR	3954306	Function	VMUniverseMgr :: findVMStarterInfoWithStarterPid	710:0:18733:19018							
ANR	3954307	FunctionDef	VMUniverseMgr :: findVMStarterInfoWithStarterPid (pid_t s_pid)		3954306	0					
ANR	3954308	CompoundStatement		712:0:18809:19018	3954306	0					
ANR	3954309	IfStatement	if ( s_pid <= 0 )		3954306	0					
ANR	3954310	Condition	s_pid <= 0	713:5:18816:18825	3954306	0	True				
ANR	3954311	RelationalExpression	s_pid <= 0		3954306	0		<=			
ANR	3954312	Identifier	s_pid		3954306	0					
ANR	3954313	PrimaryExpression	0		3954306	1					
ANR	3954314	CompoundStatement		2:18:19:19	3954306	1					
ANR	3954315	ReturnStatement	return NULL ;	714:2:18833:18844	3954306	0	True				
ANR	3954316	Identifier	NULL		3954306	0					
ANR	3954317	IdentifierDeclStatement	VMStarterInfo * info = NULL ;	717:1:18851:18877	3954306	1	True				
ANR	3954318	IdentifierDecl	* info = NULL		3954306	0					
ANR	3954319	IdentifierDeclType	VMStarterInfo *		3954306	0					
ANR	3954320	Identifier	info		3954306	1					
ANR	3954321	AssignmentExpression	* info = NULL		3954306	2		=			
ANR	3954322	Identifier	NULL		3954306	0					
ANR	3954323	Identifier	NULL		3954306	1					
ANR	3954324	ExpressionStatement	m_vm_starter_list . Rewind ( )	719:1:18881:18907	3954306	2	True				
ANR	3954325	CallExpression	m_vm_starter_list . Rewind ( )		3954306	0					
ANR	3954326	Callee	m_vm_starter_list . Rewind		3954306	0					
ANR	3954327	MemberAccess	m_vm_starter_list . Rewind		3954306	0					
ANR	3954328	Identifier	m_vm_starter_list		3954306	0					
ANR	3954329	Identifier	Rewind		3954306	1					
ANR	3954330	ArgumentList			3954306	1					
ANR	3954331	WhileStatement	while ( m_vm_starter_list . Next ( info ) )		3954306	3					
ANR	3954332	Condition	m_vm_starter_list . Next ( info )	720:8:18917:18944	3954306	0	True				
ANR	3954333	CallExpression	m_vm_starter_list . Next ( info )		3954306	0					
ANR	3954334	Callee	m_vm_starter_list . Next		3954306	0					
ANR	3954335	MemberAccess	m_vm_starter_list . Next		3954306	0					
ANR	3954336	Identifier	m_vm_starter_list		3954306	0					
ANR	3954337	Identifier	Next		3954306	1					
ANR	3954338	ArgumentList	info		3954306	1					
ANR	3954339	Argument	info		3954306	0					
ANR	3954340	Identifier	info		3954306	0					
ANR	3954341	CompoundStatement		9:39:138:138	3954306	1					
ANR	3954342	IfStatement	if ( info -> m_pid == s_pid )		3954306	0					
ANR	3954343	Condition	info -> m_pid == s_pid	721:6:18956:18975	3954306	0	True				
ANR	3954344	EqualityExpression	info -> m_pid == s_pid		3954306	0		==			
ANR	3954345	PtrMemberAccess	info -> m_pid		3954306	0					
ANR	3954346	Identifier	info		3954306	0					
ANR	3954347	Identifier	m_pid		3954306	1					
ANR	3954348	Identifier	s_pid		3954306	1					
ANR	3954349	CompoundStatement		10:29:169:169	3954306	1					
ANR	3954350	ReturnStatement	return info ;	722:3:18984:18995	3954306	0	True				
ANR	3954351	Identifier	info		3954306	0					
ANR	3954352	ReturnStatement	return NULL ;	725:1:19005:19016	3954306	4	True				
ANR	3954353	Identifier	NULL		3954306	0					
ANR	3954354	ReturnType	VMStarterInfo *		3954306	1					
ANR	3954355	Identifier	VMUniverseMgr :: findVMStarterInfoWithStarterPid		3954306	2					
ANR	3954356	ParameterList	pid_t s_pid		3954306	3					
ANR	3954357	Parameter	pid_t s_pid	711:47:18796:18806	3954306	0	True				
ANR	3954358	ParameterType	pid_t		3954306	0					
ANR	3954359	Identifier	s_pid		3954306	1					
ANR	3954360	CFGEntryNode	ENTRY		3954306		True				
ANR	3954361	CFGExitNode	EXIT		3954306		True				
ANR	3954362	Symbol	m_vm_starter_list		3954306						
ANR	3954363	Symbol	NULL		3954306						
ANR	3954364	Symbol	info -> m_pid		3954306						
ANR	3954365	Symbol	* info		3954306						
ANR	3954366	Symbol	m_vm_starter_list . Next		3954306						
ANR	3954367	Symbol	s_pid		3954306						
ANR	3954368	Symbol	info		3954306						
ANR	3954369	Function	VMUniverseMgr :: findVMStarterInfoWithVMPid	728:0:19021:19307							
ANR	3954370	FunctionDef	VMUniverseMgr :: findVMStarterInfoWithVMPid (pid_t vm_pid)		3954369	0					
ANR	3954371	CompoundStatement		730:0:19093:19307	3954369	0					
ANR	3954372	IfStatement	if ( vm_pid <= 0 )		3954369	0					
ANR	3954373	Condition	vm_pid <= 0	731:5:19100:19110	3954369	0	True				
ANR	3954374	RelationalExpression	vm_pid <= 0		3954369	0		<=			
ANR	3954375	Identifier	vm_pid		3954369	0					
ANR	3954376	PrimaryExpression	0		3954369	1					
ANR	3954377	CompoundStatement		2:19:20:20	3954369	1					
ANR	3954378	ReturnStatement	return NULL ;	732:2:19118:19129	3954369	0	True				
ANR	3954379	Identifier	NULL		3954369	0					
ANR	3954380	IdentifierDeclStatement	VMStarterInfo * info = NULL ;	735:1:19136:19162	3954369	1	True				
ANR	3954381	IdentifierDecl	* info = NULL		3954369	0					
ANR	3954382	IdentifierDeclType	VMStarterInfo *		3954369	0					
ANR	3954383	Identifier	info		3954369	1					
ANR	3954384	AssignmentExpression	* info = NULL		3954369	2		=			
ANR	3954385	Identifier	NULL		3954369	0					
ANR	3954386	Identifier	NULL		3954369	1					
ANR	3954387	ExpressionStatement	m_vm_starter_list . Rewind ( )	737:1:19166:19192	3954369	2	True				
ANR	3954388	CallExpression	m_vm_starter_list . Rewind ( )		3954369	0					
ANR	3954389	Callee	m_vm_starter_list . Rewind		3954369	0					
ANR	3954390	MemberAccess	m_vm_starter_list . Rewind		3954369	0					
ANR	3954391	Identifier	m_vm_starter_list		3954369	0					
ANR	3954392	Identifier	Rewind		3954369	1					
ANR	3954393	ArgumentList			3954369	1					
ANR	3954394	WhileStatement	while ( m_vm_starter_list . Next ( info ) )		3954369	3					
ANR	3954395	Condition	m_vm_starter_list . Next ( info )	738:8:19202:19229	3954369	0	True				
ANR	3954396	CallExpression	m_vm_starter_list . Next ( info )		3954369	0					
ANR	3954397	Callee	m_vm_starter_list . Next		3954369	0					
ANR	3954398	MemberAccess	m_vm_starter_list . Next		3954369	0					
ANR	3954399	Identifier	m_vm_starter_list		3954369	0					
ANR	3954400	Identifier	Next		3954369	1					
ANR	3954401	ArgumentList	info		3954369	1					
ANR	3954402	Argument	info		3954369	0					
ANR	3954403	Identifier	info		3954369	0					
ANR	3954404	CompoundStatement		9:39:139:139	3954369	1					
ANR	3954405	IfStatement	if ( info -> m_vm_pid == vm_pid )		3954369	0					
ANR	3954406	Condition	info -> m_vm_pid == vm_pid	739:6:19241:19264	3954369	0	True				
ANR	3954407	EqualityExpression	info -> m_vm_pid == vm_pid		3954369	0		==			
ANR	3954408	PtrMemberAccess	info -> m_vm_pid		3954369	0					
ANR	3954409	Identifier	info		3954369	0					
ANR	3954410	Identifier	m_vm_pid		3954369	1					
ANR	3954411	Identifier	vm_pid		3954369	1					
ANR	3954412	CompoundStatement		10:33:174:174	3954369	1					
ANR	3954413	ReturnStatement	return info ;	740:3:19273:19284	3954369	0	True				
ANR	3954414	Identifier	info		3954369	0					
ANR	3954415	ReturnStatement	return NULL ;	743:1:19294:19305	3954369	4	True				
ANR	3954416	Identifier	NULL		3954369	0					
ANR	3954417	ReturnType	VMStarterInfo *		3954369	1					
ANR	3954418	Identifier	VMUniverseMgr :: findVMStarterInfoWithVMPid		3954369	2					
ANR	3954419	ParameterList	pid_t vm_pid		3954369	3					
ANR	3954420	Parameter	pid_t vm_pid	729:42:19079:19090	3954369	0	True				
ANR	3954421	ParameterType	pid_t		3954369	0					
ANR	3954422	Identifier	vm_pid		3954369	1					
ANR	3954423	CFGEntryNode	ENTRY		3954369		True				
ANR	3954424	CFGExitNode	EXIT		3954369		True				
ANR	3954425	Symbol	info -> m_vm_pid		3954369						
ANR	3954426	Symbol	m_vm_starter_list		3954369						
ANR	3954427	Symbol	NULL		3954369						
ANR	3954428	Symbol	vm_pid		3954369						
ANR	3954429	Symbol	* info		3954369						
ANR	3954430	Symbol	m_vm_starter_list . Next		3954369						
ANR	3954431	Symbol	info		3954369						
ANR	3954432	Function	VMUniverseMgr :: findVMStarterInfoWithMac	746:0:19310:19606							
ANR	3954433	FunctionDef	VMUniverseMgr :: findVMStarterInfoWithMac (const char * mac)		3954432	0					
ANR	3954434	CompoundStatement		748:0:19383:19606	3954432	0					
ANR	3954435	IfStatement	if ( ! mac )		3954432	0					
ANR	3954436	Condition	! mac	749:5:19390:19393	3954432	0	True				
ANR	3954437	UnaryOperationExpression	! mac		3954432	0					
ANR	3954438	UnaryOperator	!		3954432	0					
ANR	3954439	Identifier	mac		3954432	1					
ANR	3954440	CompoundStatement		2:12:13:13	3954432	1					
ANR	3954441	ReturnStatement	return NULL ;	750:2:19401:19412	3954432	0	True				
ANR	3954442	Identifier	NULL		3954432	0					
ANR	3954443	IdentifierDeclStatement	VMStarterInfo * info = NULL ;	753:1:19419:19445	3954432	1	True				
ANR	3954444	IdentifierDecl	* info = NULL		3954432	0					
ANR	3954445	IdentifierDeclType	VMStarterInfo *		3954432	0					
ANR	3954446	Identifier	info		3954432	1					
ANR	3954447	AssignmentExpression	* info = NULL		3954432	2		=			
ANR	3954448	Identifier	NULL		3954432	0					
ANR	3954449	Identifier	NULL		3954432	1					
ANR	3954450	ExpressionStatement	m_vm_starter_list . Rewind ( )	755:1:19449:19475	3954432	2	True				
ANR	3954451	CallExpression	m_vm_starter_list . Rewind ( )		3954432	0					
ANR	3954452	Callee	m_vm_starter_list . Rewind		3954432	0					
ANR	3954453	MemberAccess	m_vm_starter_list . Rewind		3954432	0					
ANR	3954454	Identifier	m_vm_starter_list		3954432	0					
ANR	3954455	Identifier	Rewind		3954432	1					
ANR	3954456	ArgumentList			3954432	1					
ANR	3954457	WhileStatement	while ( m_vm_starter_list . Next ( info ) )		3954432	3					
ANR	3954458	Condition	m_vm_starter_list . Next ( info )	756:8:19485:19512	3954432	0	True				
ANR	3954459	CallExpression	m_vm_starter_list . Next ( info )		3954432	0					
ANR	3954460	Callee	m_vm_starter_list . Next		3954432	0					
ANR	3954461	MemberAccess	m_vm_starter_list . Next		3954432	0					
ANR	3954462	Identifier	m_vm_starter_list		3954432	0					
ANR	3954463	Identifier	Next		3954432	1					
ANR	3954464	ArgumentList	info		3954432	1					
ANR	3954465	Argument	info		3954432	0					
ANR	3954466	Identifier	info		3954432	0					
ANR	3954467	CompoundStatement		9:39:132:132	3954432	1					
ANR	3954468	IfStatement	"if ( ! strcasecmp ( info -> m_vm_mac . Value ( ) , mac ) )"		3954432	0					
ANR	3954469	Condition	"! strcasecmp ( info -> m_vm_mac . Value ( ) , mac )"	757:6:19524:19563	3954432	0	True				
ANR	3954470	UnaryOperationExpression	"! strcasecmp ( info -> m_vm_mac . Value ( ) , mac )"		3954432	0					
ANR	3954471	UnaryOperator	!		3954432	0					
ANR	3954472	CallExpression	"strcasecmp ( info -> m_vm_mac . Value ( ) , mac )"		3954432	1					
ANR	3954473	Callee	strcasecmp		3954432	0					
ANR	3954474	Identifier	strcasecmp		3954432	0					
ANR	3954475	ArgumentList	info -> m_vm_mac . Value ( )		3954432	1					
ANR	3954476	Argument	info -> m_vm_mac . Value ( )		3954432	0					
ANR	3954477	CallExpression	info -> m_vm_mac . Value ( )		3954432	0					
ANR	3954478	Callee	info -> m_vm_mac . Value		3954432	0					
ANR	3954479	MemberAccess	info -> m_vm_mac . Value		3954432	0					
ANR	3954480	PtrMemberAccess	info -> m_vm_mac		3954432	0					
ANR	3954481	Identifier	info		3954432	0					
ANR	3954482	Identifier	m_vm_mac		3954432	1					
ANR	3954483	Identifier	Value		3954432	1					
ANR	3954484	ArgumentList			3954432	1					
ANR	3954485	Argument	mac		3954432	1					
ANR	3954486	Identifier	mac		3954432	0					
ANR	3954487	CompoundStatement		10:49:183:183	3954432	1					
ANR	3954488	ReturnStatement	return info ;	758:3:19572:19583	3954432	0	True				
ANR	3954489	Identifier	info		3954432	0					
ANR	3954490	ReturnStatement	return NULL ;	761:1:19593:19604	3954432	4	True				
ANR	3954491	Identifier	NULL		3954432	0					
ANR	3954492	ReturnType	VMStarterInfo *		3954432	1					
ANR	3954493	Identifier	VMUniverseMgr :: findVMStarterInfoWithMac		3954432	2					
ANR	3954494	ParameterList	const char * mac		3954432	3					
ANR	3954495	Parameter	const char * mac	747:40:19366:19380	3954432	0	True				
ANR	3954496	ParameterType	const char *		3954432	0					
ANR	3954497	Identifier	mac		3954432	1					
ANR	3954498	CFGEntryNode	ENTRY		3954432		True				
ANR	3954499	CFGExitNode	EXIT		3954432		True				
ANR	3954500	Symbol	m_vm_starter_list		3954432						
ANR	3954501	Symbol	NULL		3954432						
ANR	3954502	Symbol	info -> m_vm_mac		3954432						
ANR	3954503	Symbol	* info		3954432						
ANR	3954504	Symbol	strcasecmp		3954432						
ANR	3954505	Symbol	info -> m_vm_mac . Value		3954432						
ANR	3954506	Symbol	m_vm_starter_list . Next		3954432						
ANR	3954507	Symbol	mac		3954432						
ANR	3954508	Symbol	info		3954432						
ANR	3954509	Function	VMUniverseMgr :: findVMStarterInfoWithIP	764:0:19609:19900							
ANR	3954510	FunctionDef	VMUniverseMgr :: findVMStarterInfoWithIP (const char * ip)		3954509	0					
ANR	3954511	CompoundStatement		766:0:19680:19900	3954509	0					
ANR	3954512	IfStatement	if ( ! ip )		3954509	0					
ANR	3954513	Condition	! ip	767:5:19687:19689	3954509	0	True				
ANR	3954514	UnaryOperationExpression	! ip		3954509	0					
ANR	3954515	UnaryOperator	!		3954509	0					
ANR	3954516	Identifier	ip		3954509	1					
ANR	3954517	CompoundStatement		2:11:12:12	3954509	1					
ANR	3954518	ReturnStatement	return NULL ;	768:2:19697:19708	3954509	0	True				
ANR	3954519	Identifier	NULL		3954509	0					
ANR	3954520	IdentifierDeclStatement	VMStarterInfo * info = NULL ;	771:1:19715:19741	3954509	1	True				
ANR	3954521	IdentifierDecl	* info = NULL		3954509	0					
ANR	3954522	IdentifierDeclType	VMStarterInfo *		3954509	0					
ANR	3954523	Identifier	info		3954509	1					
ANR	3954524	AssignmentExpression	* info = NULL		3954509	2		=			
ANR	3954525	Identifier	NULL		3954509	0					
ANR	3954526	Identifier	NULL		3954509	1					
ANR	3954527	ExpressionStatement	m_vm_starter_list . Rewind ( )	773:1:19745:19771	3954509	2	True				
ANR	3954528	CallExpression	m_vm_starter_list . Rewind ( )		3954509	0					
ANR	3954529	Callee	m_vm_starter_list . Rewind		3954509	0					
ANR	3954530	MemberAccess	m_vm_starter_list . Rewind		3954509	0					
ANR	3954531	Identifier	m_vm_starter_list		3954509	0					
ANR	3954532	Identifier	Rewind		3954509	1					
ANR	3954533	ArgumentList			3954509	1					
ANR	3954534	WhileStatement	while ( m_vm_starter_list . Next ( info ) )		3954509	3					
ANR	3954535	Condition	m_vm_starter_list . Next ( info )	774:8:19781:19808	3954509	0	True				
ANR	3954536	CallExpression	m_vm_starter_list . Next ( info )		3954509	0					
ANR	3954537	Callee	m_vm_starter_list . Next		3954509	0					
ANR	3954538	MemberAccess	m_vm_starter_list . Next		3954509	0					
ANR	3954539	Identifier	m_vm_starter_list		3954509	0					
ANR	3954540	Identifier	Next		3954509	1					
ANR	3954541	ArgumentList	info		3954509	1					
ANR	3954542	Argument	info		3954509	0					
ANR	3954543	Identifier	info		3954509	0					
ANR	3954544	CompoundStatement		9:39:131:131	3954509	1					
ANR	3954545	IfStatement	"if ( ! strcasecmp ( info -> m_vm_ip . Value ( ) , ip ) )"		3954509	0					
ANR	3954546	Condition	"! strcasecmp ( info -> m_vm_ip . Value ( ) , ip )"	775:6:19820:19857	3954509	0	True				
ANR	3954547	UnaryOperationExpression	"! strcasecmp ( info -> m_vm_ip . Value ( ) , ip )"		3954509	0					
ANR	3954548	UnaryOperator	!		3954509	0					
ANR	3954549	CallExpression	"strcasecmp ( info -> m_vm_ip . Value ( ) , ip )"		3954509	1					
ANR	3954550	Callee	strcasecmp		3954509	0					
ANR	3954551	Identifier	strcasecmp		3954509	0					
ANR	3954552	ArgumentList	info -> m_vm_ip . Value ( )		3954509	1					
ANR	3954553	Argument	info -> m_vm_ip . Value ( )		3954509	0					
ANR	3954554	CallExpression	info -> m_vm_ip . Value ( )		3954509	0					
ANR	3954555	Callee	info -> m_vm_ip . Value		3954509	0					
ANR	3954556	MemberAccess	info -> m_vm_ip . Value		3954509	0					
ANR	3954557	PtrMemberAccess	info -> m_vm_ip		3954509	0					
ANR	3954558	Identifier	info		3954509	0					
ANR	3954559	Identifier	m_vm_ip		3954509	1					
ANR	3954560	Identifier	Value		3954509	1					
ANR	3954561	ArgumentList			3954509	1					
ANR	3954562	Argument	ip		3954509	1					
ANR	3954563	Identifier	ip		3954509	0					
ANR	3954564	CompoundStatement		10:47:180:180	3954509	1					
ANR	3954565	ReturnStatement	return info ;	776:3:19866:19877	3954509	0	True				
ANR	3954566	Identifier	info		3954509	0					
ANR	3954567	ReturnStatement	return NULL ;	779:1:19887:19898	3954509	4	True				
ANR	3954568	Identifier	NULL		3954509	0					
ANR	3954569	ReturnType	VMStarterInfo *		3954509	1					
ANR	3954570	Identifier	VMUniverseMgr :: findVMStarterInfoWithIP		3954509	2					
ANR	3954571	ParameterList	const char * ip		3954509	3					
ANR	3954572	Parameter	const char * ip	765:39:19664:19677	3954509	0	True				
ANR	3954573	ParameterType	const char *		3954509	0					
ANR	3954574	Identifier	ip		3954509	1					
ANR	3954575	CFGEntryNode	ENTRY		3954509		True				
ANR	3954576	CFGExitNode	EXIT		3954509		True				
ANR	3954577	Symbol	m_vm_starter_list		3954509						
ANR	3954578	Symbol	NULL		3954509						
ANR	3954579	Symbol	info -> m_vm_ip		3954509						
ANR	3954580	Symbol	ip		3954509						
ANR	3954581	Symbol	info -> m_vm_ip . Value		3954509						
ANR	3954582	Symbol	* info		3954509						
ANR	3954583	Symbol	strcasecmp		3954509						
ANR	3954584	Symbol	m_vm_starter_list . Next		3954509						
ANR	3954585	Symbol	info		3954509						
ANR	3954586	Function	VMUniverseMgr :: checkVMUniverse	782:0:19903:20327							
ANR	3954587	FunctionDef	VMUniverseMgr :: checkVMUniverse ()		3954586	0					
ANR	3954588	CompoundStatement		784:0:19946:20327	3954586	0					
ANR	3954589	ExpressionStatement	"dprintf ( D_ALWAYS , ""VM-gahp server reported an internal error\\n"" )"	785:1:19949:20014	3954586	0	True				
ANR	3954590	CallExpression	"dprintf ( D_ALWAYS , ""VM-gahp server reported an internal error\\n"" )"		3954586	0					
ANR	3954591	Callee	dprintf		3954586	0					
ANR	3954592	Identifier	dprintf		3954586	0					
ANR	3954593	ArgumentList	D_ALWAYS		3954586	1					
ANR	3954594	Argument	D_ALWAYS		3954586	0					
ANR	3954595	Identifier	D_ALWAYS		3954586	0					
ANR	3954596	Argument	"""VM-gahp server reported an internal error\\n"""		3954586	1					
ANR	3954597	PrimaryExpression	"""VM-gahp server reported an internal error\\n"""		3954586	0					
ANR	3954598	IfStatement	if ( numOfRunningVM ( ) == 0 )		3954586	1					
ANR	3954599	Condition	numOfRunningVM ( ) == 0	787:5:20022:20042	3954586	0	True				
ANR	3954600	EqualityExpression	numOfRunningVM ( ) == 0		3954586	0		==			
ANR	3954601	CallExpression	numOfRunningVM ( )		3954586	0					
ANR	3954602	Callee	numOfRunningVM		3954586	0					
ANR	3954603	Identifier	numOfRunningVM		3954586	0					
ANR	3954604	ArgumentList			3954586	1					
ANR	3954605	PrimaryExpression	0		3954586	1					
ANR	3954606	CompoundStatement		4:29:99:99	3954586	1					
ANR	3954607	ExpressionStatement	docheckVMUniverse ( )	790:2:20119:20138	3954586	0	True				
ANR	3954608	CallExpression	docheckVMUniverse ( )		3954586	0					
ANR	3954609	Callee	docheckVMUniverse		3954586	0					
ANR	3954610	Identifier	docheckVMUniverse		3954586	0					
ANR	3954611	ArgumentList			3954586	1					
ANR	3954612	ReturnStatement	return ;	791:2:20142:20148	3954586	1	True				
ANR	3954613	ExpressionStatement	m_needCheck = true	797:1:20307:20325	3954586	2	True				
ANR	3954614	AssignmentExpression	m_needCheck = true		3954586	0		=			
ANR	3954615	Identifier	m_needCheck		3954586	0					
ANR	3954616	Identifier	true		3954586	1					
ANR	3954617	ReturnType	void		3954586	1					
ANR	3954618	Identifier	VMUniverseMgr :: checkVMUniverse		3954586	2					
ANR	3954619	ParameterList			3954586	3					
ANR	3954620	CFGEntryNode	ENTRY		3954586		True				
ANR	3954621	CFGExitNode	EXIT		3954586		True				
ANR	3954622	Symbol	numOfRunningVM		3954586						
ANR	3954623	Symbol	D_ALWAYS		3954586						
ANR	3954624	Symbol	true		3954586						
ANR	3954625	Symbol	m_needCheck		3954586						
ANR	3954626	Function	VMUniverseMgr :: docheckVMUniverse	800:0:20330:21615							
ANR	3954627	FunctionDef	VMUniverseMgr :: docheckVMUniverse ()		3954626	0					
ANR	3954628	CompoundStatement		802:0:20375:21615	3954626	0					
ANR	3954629	IdentifierDeclStatement	"char * vm_type = param ( ""VM_TYPE"" ) ;"	803:1:20378:20412	3954626	0	True				
ANR	3954630	IdentifierDecl	"* vm_type = param ( ""VM_TYPE"" )"		3954626	0					
ANR	3954631	IdentifierDeclType	char *		3954626	0					
ANR	3954632	Identifier	vm_type		3954626	1					
ANR	3954633	AssignmentExpression	"* vm_type = param ( ""VM_TYPE"" )"		3954626	2		=			
ANR	3954634	Identifier	vm_type		3954626	0					
ANR	3954635	CallExpression	"param ( ""VM_TYPE"" )"		3954626	1					
ANR	3954636	Callee	param		3954626	0					
ANR	3954637	Identifier	param		3954626	0					
ANR	3954638	ArgumentList	"""VM_TYPE"""		3954626	1					
ANR	3954639	Argument	"""VM_TYPE"""		3954626	0					
ANR	3954640	PrimaryExpression	"""VM_TYPE"""		3954626	0					
ANR	3954641	Statement	dprintf	804:1:20415:20421	3954626	1	True				
ANR	3954642	Statement	(	804:8:20422:20422	3954626	2	True				
ANR	3954643	Statement	D_ALWAYS	804:10:20424:20431	3954626	3	True				
ANR	3954644	Statement	","	804:18:20432:20432	3954626	4	True				
ANR	3954645	Statement	"""VM universe will be tested """	804:20:20434:20462	3954626	5	True				
ANR	3954646	Statement	"""to check if it is available\\n"""	805:3:20467:20497	3954626	6	True				
ANR	3954647	Statement	)	805:34:20498:20498	3954626	7	True				
ANR	3954648	ExpressionStatement		805:35:20499:20499	3954626	8	True				
ANR	3954649	IfStatement	if ( init ( ) == false && vm_type )		3954626	9					
ANR	3954650	Condition	init ( ) == false && vm_type	806:5:20506:20531	3954626	0	True				
ANR	3954651	AndExpression	init ( ) == false && vm_type		3954626	0		&&			
ANR	3954652	EqualityExpression	init ( ) == false		3954626	0		==			
ANR	3954653	CallExpression	init ( )		3954626	0					
ANR	3954654	Callee	init		3954626	0					
ANR	3954655	Identifier	init		3954626	0					
ANR	3954656	ArgumentList			3954626	1					
ANR	3954657	Identifier	false		3954626	1					
ANR	3954658	Identifier	vm_type		3954626	1					
ANR	3954659	CompoundStatement		5:34:159:159	3954626	1					
ANR	3954660	ExpressionStatement	"m_check_interval = param_integer ( ""VM_RECHECK_INTERVAL"" , 600 )"	815:2:20894:20954	3954626	0	True				
ANR	3954661	AssignmentExpression	"m_check_interval = param_integer ( ""VM_RECHECK_INTERVAL"" , 600 )"		3954626	0		=			
ANR	3954662	Identifier	m_check_interval		3954626	0					
ANR	3954663	CallExpression	"param_integer ( ""VM_RECHECK_INTERVAL"" , 600 )"		3954626	1					
ANR	3954664	Callee	param_integer		3954626	0					
ANR	3954665	Identifier	param_integer		3954626	0					
ANR	3954666	ArgumentList	"""VM_RECHECK_INTERVAL"""		3954626	1					
ANR	3954667	Argument	"""VM_RECHECK_INTERVAL"""		3954626	0					
ANR	3954668	PrimaryExpression	"""VM_RECHECK_INTERVAL"""		3954626	0					
ANR	3954669	Argument	600		3954626	1					
ANR	3954670	PrimaryExpression	600		3954626	0					
ANR	3954671	IfStatement	if ( m_check_tid >= 0 )		3954626	1					
ANR	3954672	Condition	m_check_tid >= 0	816:7:20963:20978	3954626	0	True				
ANR	3954673	RelationalExpression	m_check_tid >= 0		3954626	0		>=			
ANR	3954674	Identifier	m_check_tid		3954626	0					
ANR	3954675	PrimaryExpression	0		3954626	1					
ANR	3954676	CompoundStatement		15:26:606:606	3954626	1					
ANR	3954677	ExpressionStatement	"daemonCore -> Reset_Timer ( m_check_tid , m_check_interval )"	817:3:20987:21043	3954626	0	True				
ANR	3954678	CallExpression	"daemonCore -> Reset_Timer ( m_check_tid , m_check_interval )"		3954626	0					
ANR	3954679	Callee	daemonCore -> Reset_Timer		3954626	0					
ANR	3954680	PtrMemberAccess	daemonCore -> Reset_Timer		3954626	0					
ANR	3954681	Identifier	daemonCore		3954626	0					
ANR	3954682	Identifier	Reset_Timer		3954626	1					
ANR	3954683	ArgumentList	m_check_tid		3954626	1					
ANR	3954684	Argument	m_check_tid		3954626	0					
ANR	3954685	Identifier	m_check_tid		3954626	0					
ANR	3954686	Argument	m_check_interval		3954626	1					
ANR	3954687	Identifier	m_check_interval		3954626	0					
ANR	3954688	ElseStatement	else		3954626	0					
ANR	3954689	CompoundStatement		17:9:678:678	3954626	0					
ANR	3954690	ExpressionStatement	"m_check_tid = daemonCore -> Register_Timer ( m_check_interval , ( TimerHandlercpp ) & VMUniverseMgr :: docheckVMUniverse , ""VMUniverseMgr::docheckVMUniverse"" , this )"	819:3:21059:21219	3954626	0	True				
ANR	3954691	AssignmentExpression	"m_check_tid = daemonCore -> Register_Timer ( m_check_interval , ( TimerHandlercpp ) & VMUniverseMgr :: docheckVMUniverse , ""VMUniverseMgr::docheckVMUniverse"" , this )"		3954626	0		=			
ANR	3954692	Identifier	m_check_tid		3954626	0					
ANR	3954693	CallExpression	"daemonCore -> Register_Timer ( m_check_interval , ( TimerHandlercpp ) & VMUniverseMgr :: docheckVMUniverse , ""VMUniverseMgr::docheckVMUniverse"" , this )"		3954626	1					
ANR	3954694	Callee	daemonCore -> Register_Timer		3954626	0					
ANR	3954695	PtrMemberAccess	daemonCore -> Register_Timer		3954626	0					
ANR	3954696	Identifier	daemonCore		3954626	0					
ANR	3954697	Identifier	Register_Timer		3954626	1					
ANR	3954698	ArgumentList	m_check_interval		3954626	1					
ANR	3954699	Argument	m_check_interval		3954626	0					
ANR	3954700	Identifier	m_check_interval		3954626	0					
ANR	3954701	Argument	( TimerHandlercpp ) & VMUniverseMgr :: docheckVMUniverse		3954626	1					
ANR	3954702	CastExpression	( TimerHandlercpp ) & VMUniverseMgr :: docheckVMUniverse		3954626	0					
ANR	3954703	CastTarget	TimerHandlercpp		3954626	0					
ANR	3954704	UnaryOperationExpression	& VMUniverseMgr :: docheckVMUniverse		3954626	1					
ANR	3954705	UnaryOperator	&		3954626	0					
ANR	3954706	Identifier	VMUniverseMgr :: docheckVMUniverse		3954626	1					
ANR	3954707	Argument	"""VMUniverseMgr::docheckVMUniverse"""		3954626	2					
ANR	3954708	PrimaryExpression	"""VMUniverseMgr::docheckVMUniverse"""		3954626	0					
ANR	3954709	Argument	this		3954626	3					
ANR	3954710	Identifier	this		3954626	0					
ANR	3954711	Statement	dprintf	823:2:21227:21233	3954626	2	True				
ANR	3954712	Statement	(	823:9:21234:21234	3954626	3	True				
ANR	3954713	Statement	D_ALWAYS	823:11:21236:21243	3954626	4	True				
ANR	3954714	Statement	","	823:19:21244:21244	3954626	5	True				
ANR	3954715	Statement	"""Started a timer to test VM universe after """	823:21:21246:21289	3954626	6	True				
ANR	3954716	Statement	"""%d(seconds)\\n"""	824:6:21297:21311	3954626	7	True				
ANR	3954717	Statement	","	824:21:21312:21312	3954626	8	True				
ANR	3954718	Statement	m_check_interval	824:23:21314:21329	3954626	9	True				
ANR	3954719	Statement	)	824:39:21330:21330	3954626	10	True				
ANR	3954720	ExpressionStatement		824:40:21331:21331	3954626	11	True				
ANR	3954721	ElseStatement	else		3954626	0					
ANR	3954722	CompoundStatement		24:8:965:965	3954626	0					
ANR	3954723	IfStatement	if ( m_check_tid >= 0 )		3954626	0					
ANR	3954724	Condition	m_check_tid >= 0	826:7:21350:21365	3954626	0	True				
ANR	3954725	RelationalExpression	m_check_tid >= 0		3954626	0		>=			
ANR	3954726	Identifier	m_check_tid		3954626	0					
ANR	3954727	PrimaryExpression	0		3954626	1					
ANR	3954728	CompoundStatement		25:26:993:993	3954626	1					
ANR	3954729	ExpressionStatement	daemonCore -> Cancel_Timer ( m_check_tid )	827:3:21374:21413	3954626	0	True				
ANR	3954730	CallExpression	daemonCore -> Cancel_Timer ( m_check_tid )		3954626	0					
ANR	3954731	Callee	daemonCore -> Cancel_Timer		3954626	0					
ANR	3954732	PtrMemberAccess	daemonCore -> Cancel_Timer		3954626	0					
ANR	3954733	Identifier	daemonCore		3954626	0					
ANR	3954734	Identifier	Cancel_Timer		3954626	1					
ANR	3954735	ArgumentList	m_check_tid		3954626	1					
ANR	3954736	Argument	m_check_tid		3954626	0					
ANR	3954737	Identifier	m_check_tid		3954626	0					
ANR	3954738	ExpressionStatement	m_check_tid = - 1	828:3:21418:21434	3954626	1	True				
ANR	3954739	AssignmentExpression	m_check_tid = - 1		3954626	0		=			
ANR	3954740	Identifier	m_check_tid		3954626	0					
ANR	3954741	UnaryOperationExpression	- 1		3954626	1					
ANR	3954742	UnaryOperator	-		3954626	0					
ANR	3954743	PrimaryExpression	1		3954626	1					
ANR	3954744	IfStatement	if ( resmgr )		3954626	2					
ANR	3954745	Condition	resmgr	832:7:21538:21543	3954626	0	True				
ANR	3954746	Identifier	resmgr		3954626	0					
ANR	3954747	CompoundStatement		31:16:1171:1171	3954626	1					
ANR	3954748	ExpressionStatement	resmgr -> eval_and_update_all ( )	833:4:21553:21582	3954626	0	True				
ANR	3954749	CallExpression	resmgr -> eval_and_update_all ( )		3954626	0					
ANR	3954750	Callee	resmgr -> eval_and_update_all		3954626	0					
ANR	3954751	PtrMemberAccess	resmgr -> eval_and_update_all		3954626	0					
ANR	3954752	Identifier	resmgr		3954626	0					
ANR	3954753	Identifier	eval_and_update_all		3954626	1					
ANR	3954754	ArgumentList			3954626	1					
ANR	3954755	ExpressionStatement	free ( vm_type )	837:1:21598:21613	3954626	10	True				
ANR	3954756	CallExpression	free ( vm_type )		3954626	0					
ANR	3954757	Callee	free		3954626	0					
ANR	3954758	Identifier	free		3954626	0					
ANR	3954759	ArgumentList	vm_type		3954626	1					
ANR	3954760	Argument	vm_type		3954626	0					
ANR	3954761	Identifier	vm_type		3954626	0					
ANR	3954762	ReturnType	void		3954626	1					
ANR	3954763	Identifier	VMUniverseMgr :: docheckVMUniverse		3954626	2					
ANR	3954764	ParameterList			3954626	3					
ANR	3954765	CFGEntryNode	ENTRY		3954626		True				
ANR	3954766	CFGExitNode	EXIT		3954626		True				
ANR	3954767	Symbol	init		3954626						
ANR	3954768	Symbol	false		3954626						
ANR	3954769	Symbol	m_check_interval		3954626						
ANR	3954770	Symbol	this		3954626						
ANR	3954771	Symbol	m_check_tid		3954626						
ANR	3954772	Symbol	vm_type		3954626						
ANR	3954773	Symbol	param		3954626						
ANR	3954774	Symbol	resmgr		3954626						
ANR	3954775	Symbol	* daemonCore		3954626						
ANR	3954776	Symbol	daemonCore		3954626						
ANR	3954777	Symbol	daemonCore -> Register_Timer		3954626						
ANR	3954778	Symbol	param_integer		3954626						
ANR	3954779	Symbol	& VMUniverseMgr :: docheckVMUniverse		3954626						
ANR	3954780	Function	VMUniverseMgr :: setStarterAbility	840:0:21618:21712							
ANR	3954781	FunctionDef	VMUniverseMgr :: setStarterAbility (bool has_vmcode)		3954780	0					
ANR	3954782	CompoundStatement		842:0:21674:21712	3954780	0					
ANR	3954783	ExpressionStatement	m_starter_has_vmcode = has_vmcode	843:1:21677:21710	3954780	0	True				
ANR	3954784	AssignmentExpression	m_starter_has_vmcode = has_vmcode		3954780	0		=			
ANR	3954785	Identifier	m_starter_has_vmcode		3954780	0					
ANR	3954786	Identifier	has_vmcode		3954780	1					
ANR	3954787	ReturnType	void		3954780	1					
ANR	3954788	Identifier	VMUniverseMgr :: setStarterAbility		3954780	2					
ANR	3954789	ParameterList	bool has_vmcode		3954780	3					
ANR	3954790	Parameter	bool has_vmcode	841:33:21657:21671	3954780	0	True				
ANR	3954791	ParameterType	bool		3954780	0					
ANR	3954792	Identifier	has_vmcode		3954780	1					
ANR	3954793	CFGEntryNode	ENTRY		3954780		True				
ANR	3954794	CFGExitNode	EXIT		3954780		True				
ANR	3954795	Symbol	m_starter_has_vmcode		3954780						
ANR	3954796	Symbol	has_vmcode		3954780						
ANR	3954797	Function	VMUniverseMgr :: numOfRunningVM	846:0:21715:21793							
ANR	3954798	FunctionDef	VMUniverseMgr :: numOfRunningVM ()		3954797	0					
ANR	3954799	CompoundStatement		848:0:21755:21793	3954797	0					
ANR	3954800	ReturnStatement	return m_vm_starter_list . Number ( ) ;	849:1:21758:21791	3954797	0	True				
ANR	3954801	CallExpression	m_vm_starter_list . Number ( )		3954797	0					
ANR	3954802	Callee	m_vm_starter_list . Number		3954797	0					
ANR	3954803	MemberAccess	m_vm_starter_list . Number		3954797	0					
ANR	3954804	Identifier	m_vm_starter_list		3954797	0					
ANR	3954805	Identifier	Number		3954797	1					
ANR	3954806	ArgumentList			3954797	1					
ANR	3954807	ReturnType	int		3954797	1					
ANR	3954808	Identifier	VMUniverseMgr :: numOfRunningVM		3954797	2					
ANR	3954809	ParameterList			3954797	3					
ANR	3954810	CFGEntryNode	ENTRY		3954797		True				
ANR	3954811	CFGExitNode	EXIT		3954797		True				
ANR	3954812	Symbol	m_vm_starter_list		3954797						
ANR	3954813	Symbol	m_vm_starter_list . Number		3954797						
ANR	3954814	Function	VMUniverseMgr :: killVM	852:0:21796:23036							
ANR	3954815	FunctionDef	VMUniverseMgr :: killVM (const char * matchstring)		3954814	0					
ANR	3954816	CompoundStatement		854:0:21848:23036	3954814	0					
ANR	3954817	IfStatement	if ( ! matchstring )		3954814	0					
ANR	3954818	Condition	! matchstring	855:6:21856:21867	3954814	0	True				
ANR	3954819	UnaryOperationExpression	! matchstring		3954814	0					
ANR	3954820	UnaryOperator	!		3954814	0					
ANR	3954821	Identifier	matchstring		3954814	1					
ANR	3954822	CompoundStatement		2:21:22:22	3954814	1					
ANR	3954823	ReturnStatement	return ;	856:2:21875:21881	3954814	0	True				
ANR	3954824	IfStatement	if ( ! m_vm_type . Length ( ) || ! m_vmgahp_server . Length ( ) )		3954814	1					
ANR	3954825	Condition	! m_vm_type . Length ( ) || ! m_vmgahp_server . Length ( )	858:5:21891:21938	3954814	0	True				
ANR	3954826	OrExpression	! m_vm_type . Length ( ) || ! m_vmgahp_server . Length ( )		3954814	0		||			
ANR	3954827	UnaryOperationExpression	! m_vm_type . Length ( )		3954814	0					
ANR	3954828	UnaryOperator	!		3954814	0					
ANR	3954829	CallExpression	m_vm_type . Length ( )		3954814	1					
ANR	3954830	Callee	m_vm_type . Length		3954814	0					
ANR	3954831	MemberAccess	m_vm_type . Length		3954814	0					
ANR	3954832	Identifier	m_vm_type		3954814	0					
ANR	3954833	Identifier	Length		3954814	1					
ANR	3954834	ArgumentList			3954814	1					
ANR	3954835	UnaryOperationExpression	! m_vmgahp_server . Length ( )		3954814	1					
ANR	3954836	UnaryOperator	!		3954814	0					
ANR	3954837	CallExpression	m_vmgahp_server . Length ( )		3954814	1					
ANR	3954838	Callee	m_vmgahp_server . Length		3954814	0					
ANR	3954839	MemberAccess	m_vmgahp_server . Length		3954814	0					
ANR	3954840	Identifier	m_vmgahp_server		3954814	0					
ANR	3954841	Identifier	Length		3954814	1					
ANR	3954842	ArgumentList			3954814	1					
ANR	3954843	CompoundStatement		5:56:93:93	3954814	1					
ANR	3954844	ReturnStatement	return ;	859:2:21946:21952	3954814	0	True				
ANR	3954845	IdentifierDeclStatement	ArgList systemcmd ;	865:1:22106:22123	3954814	2	True				
ANR	3954846	IdentifierDecl	systemcmd		3954814	0					
ANR	3954847	IdentifierDeclType	ArgList		3954814	0					
ANR	3954848	Identifier	systemcmd		3954814	1					
ANR	3954849	ExpressionStatement	systemcmd . AppendArg ( m_vmgahp_server )	866:1:22126:22162	3954814	3	True				
ANR	3954850	CallExpression	systemcmd . AppendArg ( m_vmgahp_server )		3954814	0					
ANR	3954851	Callee	systemcmd . AppendArg		3954814	0					
ANR	3954852	MemberAccess	systemcmd . AppendArg		3954814	0					
ANR	3954853	Identifier	systemcmd		3954814	0					
ANR	3954854	Identifier	AppendArg		3954814	1					
ANR	3954855	ArgumentList	m_vmgahp_server		3954814	1					
ANR	3954856	Argument	m_vmgahp_server		3954814	0					
ANR	3954857	Identifier	m_vmgahp_server		3954814	0					
ANR	3954858	ExpressionStatement	"systemcmd . AppendArg ( ""-f"" )"	867:1:22165:22190	3954814	4	True				
ANR	3954859	CallExpression	"systemcmd . AppendArg ( ""-f"" )"		3954814	0					
ANR	3954860	Callee	systemcmd . AppendArg		3954814	0					
ANR	3954861	MemberAccess	systemcmd . AppendArg		3954814	0					
ANR	3954862	Identifier	systemcmd		3954814	0					
ANR	3954863	Identifier	AppendArg		3954814	1					
ANR	3954864	ArgumentList	"""-f"""		3954814	1					
ANR	3954865	Argument	"""-f"""		3954814	0					
ANR	3954866	PrimaryExpression	"""-f"""		3954814	0					
ANR	3954867	IdentifierDeclStatement	"char * gahp_log_file = param ( ""VM_GAHP_LOG"" ) ;"	868:1:22193:22235	3954814	5	True				
ANR	3954868	IdentifierDecl	"* gahp_log_file = param ( ""VM_GAHP_LOG"" )"		3954814	0					
ANR	3954869	IdentifierDeclType	char *		3954814	0					
ANR	3954870	Identifier	gahp_log_file		3954814	1					
ANR	3954871	AssignmentExpression	"* gahp_log_file = param ( ""VM_GAHP_LOG"" )"		3954814	2		=			
ANR	3954872	Identifier	gahp_log_file		3954814	0					
ANR	3954873	CallExpression	"param ( ""VM_GAHP_LOG"" )"		3954814	1					
ANR	3954874	Callee	param		3954814	0					
ANR	3954875	Identifier	param		3954814	0					
ANR	3954876	ArgumentList	"""VM_GAHP_LOG"""		3954814	1					
ANR	3954877	Argument	"""VM_GAHP_LOG"""		3954814	0					
ANR	3954878	PrimaryExpression	"""VM_GAHP_LOG"""		3954814	0					
ANR	3954879	IfStatement	if ( gahp_log_file )		3954814	6					
ANR	3954880	Condition	gahp_log_file	869:5:22242:22254	3954814	0	True				
ANR	3954881	Identifier	gahp_log_file		3954814	0					
ANR	3954882	CompoundStatement		16:21:409:409	3954814	1					
ANR	3954883	ExpressionStatement	free ( gahp_log_file )	870:2:22262:22281	3954814	0	True				
ANR	3954884	CallExpression	free ( gahp_log_file )		3954814	0					
ANR	3954885	Callee	free		3954814	0					
ANR	3954886	Identifier	free		3954814	0					
ANR	3954887	ArgumentList	gahp_log_file		3954814	1					
ANR	3954888	Argument	gahp_log_file		3954814	0					
ANR	3954889	Identifier	gahp_log_file		3954814	0					
ANR	3954890	ElseStatement	else		3954814	0					
ANR	3954891	CompoundStatement		18:7:441:441	3954814	0					
ANR	3954892	ExpressionStatement	"systemcmd . AppendArg ( ""-t"" )"	872:2:22294:22319	3954814	0	True				
ANR	3954893	CallExpression	"systemcmd . AppendArg ( ""-t"" )"		3954814	0					
ANR	3954894	Callee	systemcmd . AppendArg		3954814	0					
ANR	3954895	MemberAccess	systemcmd . AppendArg		3954814	0					
ANR	3954896	Identifier	systemcmd		3954814	0					
ANR	3954897	Identifier	AppendArg		3954814	1					
ANR	3954898	ArgumentList	"""-t"""		3954814	1					
ANR	3954899	Argument	"""-t"""		3954814	0					
ANR	3954900	PrimaryExpression	"""-t"""		3954814	0					
ANR	3954901	ExpressionStatement	"systemcmd . AppendArg ( ""-M"" )"	874:1:22325:22350	3954814	7	True				
ANR	3954902	CallExpression	"systemcmd . AppendArg ( ""-M"" )"		3954814	0					
ANR	3954903	Callee	systemcmd . AppendArg		3954814	0					
ANR	3954904	MemberAccess	systemcmd . AppendArg		3954814	0					
ANR	3954905	Identifier	systemcmd		3954814	0					
ANR	3954906	Identifier	AppendArg		3954814	1					
ANR	3954907	ArgumentList	"""-M"""		3954814	1					
ANR	3954908	Argument	"""-M"""		3954814	0					
ANR	3954909	PrimaryExpression	"""-M"""		3954814	0					
ANR	3954910	ExpressionStatement	systemcmd . AppendArg ( VMGAHP_KILL_MODE )	875:1:22353:22390	3954814	8	True				
ANR	3954911	CallExpression	systemcmd . AppendArg ( VMGAHP_KILL_MODE )		3954814	0					
ANR	3954912	Callee	systemcmd . AppendArg		3954814	0					
ANR	3954913	MemberAccess	systemcmd . AppendArg		3954814	0					
ANR	3954914	Identifier	systemcmd		3954814	0					
ANR	3954915	Identifier	AppendArg		3954814	1					
ANR	3954916	ArgumentList	VMGAHP_KILL_MODE		3954814	1					
ANR	3954917	Argument	VMGAHP_KILL_MODE		3954814	0					
ANR	3954918	Identifier	VMGAHP_KILL_MODE		3954814	0					
ANR	3954919	ExpressionStatement	"systemcmd . AppendArg ( ""vmtype"" )"	876:1:22393:22422	3954814	9	True				
ANR	3954920	CallExpression	"systemcmd . AppendArg ( ""vmtype"" )"		3954814	0					
ANR	3954921	Callee	systemcmd . AppendArg		3954814	0					
ANR	3954922	MemberAccess	systemcmd . AppendArg		3954814	0					
ANR	3954923	Identifier	systemcmd		3954814	0					
ANR	3954924	Identifier	AppendArg		3954814	1					
ANR	3954925	ArgumentList	"""vmtype"""		3954814	1					
ANR	3954926	Argument	"""vmtype"""		3954814	0					
ANR	3954927	PrimaryExpression	"""vmtype"""		3954814	0					
ANR	3954928	ExpressionStatement	systemcmd . AppendArg ( m_vm_type )	877:1:22425:22455	3954814	10	True				
ANR	3954929	CallExpression	systemcmd . AppendArg ( m_vm_type )		3954814	0					
ANR	3954930	Callee	systemcmd . AppendArg		3954814	0					
ANR	3954931	MemberAccess	systemcmd . AppendArg		3954814	0					
ANR	3954932	Identifier	systemcmd		3954814	0					
ANR	3954933	Identifier	AppendArg		3954814	1					
ANR	3954934	ArgumentList	m_vm_type		3954814	1					
ANR	3954935	Argument	m_vm_type		3954814	0					
ANR	3954936	Identifier	m_vm_type		3954814	0					
ANR	3954937	ExpressionStatement	"systemcmd . AppendArg ( ""match"" )"	878:1:22458:22486	3954814	11	True				
ANR	3954938	CallExpression	"systemcmd . AppendArg ( ""match"" )"		3954814	0					
ANR	3954939	Callee	systemcmd . AppendArg		3954814	0					
ANR	3954940	MemberAccess	systemcmd . AppendArg		3954814	0					
ANR	3954941	Identifier	systemcmd		3954814	0					
ANR	3954942	Identifier	AppendArg		3954814	1					
ANR	3954943	ArgumentList	"""match"""		3954814	1					
ANR	3954944	Argument	"""match"""		3954814	0					
ANR	3954945	PrimaryExpression	"""match"""		3954814	0					
ANR	3954946	ExpressionStatement	systemcmd . AppendArg ( matchstring )	879:1:22489:22521	3954814	12	True				
ANR	3954947	CallExpression	systemcmd . AppendArg ( matchstring )		3954814	0					
ANR	3954948	Callee	systemcmd . AppendArg		3954814	0					
ANR	3954949	MemberAccess	systemcmd . AppendArg		3954814	0					
ANR	3954950	Identifier	systemcmd		3954814	0					
ANR	3954951	Identifier	AppendArg		3954814	1					
ANR	3954952	ArgumentList	matchstring		3954814	1					
ANR	3954953	Argument	matchstring		3954814	0					
ANR	3954954	Identifier	matchstring		3954814	0					
ANR	3954955	IfStatement	if ( can_switch_ids ( ) )		3954814	13					
ANR	3954956	Condition	can_switch_ids ( )	882:5:22549:22564	3954814	0	True				
ANR	3954957	CallExpression	can_switch_ids ( )		3954814	0					
ANR	3954958	Callee	can_switch_ids		3954814	0					
ANR	3954959	Identifier	can_switch_ids		3954814	0					
ANR	3954960	ArgumentList			3954814	1					
ANR	3954961	CompoundStatement		30:2:723:739	3954814	1					
ANR	3954962	IdentifierDeclStatement	MyString tmp_str ;	883:2:22572:22588	3954814	0	True				
ANR	3954963	IdentifierDecl	tmp_str		3954814	0					
ANR	3954964	IdentifierDeclType	MyString		3954814	0					
ANR	3954965	Identifier	tmp_str		3954814	1					
ANR	3954966	ExpressionStatement	"tmp_str . sprintf ( ""%d"" , ( int ) get_condor_uid ( ) )"	884:2:22592:22636	3954814	1	True				
ANR	3954967	CallExpression	"tmp_str . sprintf ( ""%d"" , ( int ) get_condor_uid ( ) )"		3954814	0					
ANR	3954968	Callee	tmp_str . sprintf		3954814	0					
ANR	3954969	MemberAccess	tmp_str . sprintf		3954814	0					
ANR	3954970	Identifier	tmp_str		3954814	0					
ANR	3954971	Identifier	sprintf		3954814	1					
ANR	3954972	ArgumentList	"""%d"""		3954814	1					
ANR	3954973	Argument	"""%d"""		3954814	0					
ANR	3954974	PrimaryExpression	"""%d"""		3954814	0					
ANR	3954975	Argument	( int ) get_condor_uid ( )		3954814	1					
ANR	3954976	CastExpression	( int ) get_condor_uid ( )		3954814	0					
ANR	3954977	CastTarget	int		3954814	0					
ANR	3954978	CallExpression	get_condor_uid ( )		3954814	1					
ANR	3954979	Callee	get_condor_uid		3954814	0					
ANR	3954980	Identifier	get_condor_uid		3954814	0					
ANR	3954981	ArgumentList			3954814	1					
ANR	3954982	ExpressionStatement	"SetEnv ( ""VMGAHP_USER_UID"" , tmp_str . Value ( ) )"	885:2:22640:22682	3954814	2	True				
ANR	3954983	CallExpression	"SetEnv ( ""VMGAHP_USER_UID"" , tmp_str . Value ( ) )"		3954814	0					
ANR	3954984	Callee	SetEnv		3954814	0					
ANR	3954985	Identifier	SetEnv		3954814	0					
ANR	3954986	ArgumentList	"""VMGAHP_USER_UID"""		3954814	1					
ANR	3954987	Argument	"""VMGAHP_USER_UID"""		3954814	0					
ANR	3954988	PrimaryExpression	"""VMGAHP_USER_UID"""		3954814	0					
ANR	3954989	Argument	tmp_str . Value ( )		3954814	1					
ANR	3954990	CallExpression	tmp_str . Value ( )		3954814	0					
ANR	3954991	Callee	tmp_str . Value		3954814	0					
ANR	3954992	MemberAccess	tmp_str . Value		3954814	0					
ANR	3954993	Identifier	tmp_str		3954814	0					
ANR	3954994	Identifier	Value		3954814	1					
ANR	3954995	ArgumentList			3954814	1					
ANR	3954996	IdentifierDeclStatement	priv_state priv = set_root_priv ( ) ;	890:1:22735:22768	3954814	14	True				
ANR	3954997	IdentifierDecl	priv = set_root_priv ( )		3954814	0					
ANR	3954998	IdentifierDeclType	priv_state		3954814	0					
ANR	3954999	Identifier	priv		3954814	1					
ANR	3955000	AssignmentExpression	priv = set_root_priv ( )		3954814	2		=			
ANR	3955001	Identifier	priv		3954814	0					
ANR	3955002	CallExpression	set_root_priv ( )		3954814	1					
ANR	3955003	Callee	set_root_priv		3954814	0					
ANR	3955004	Identifier	set_root_priv		3954814	0					
ANR	3955005	ArgumentList			3954814	1					
ANR	3955006	IdentifierDeclStatement	int ret = my_system ( systemcmd ) ;	891:1:22771:22801	3954814	15	True				
ANR	3955007	IdentifierDecl	ret = my_system ( systemcmd )		3954814	0					
ANR	3955008	IdentifierDeclType	int		3954814	0					
ANR	3955009	Identifier	ret		3954814	1					
ANR	3955010	AssignmentExpression	ret = my_system ( systemcmd )		3954814	2		=			
ANR	3955011	Identifier	ret		3954814	0					
ANR	3955012	CallExpression	my_system ( systemcmd )		3954814	1					
ANR	3955013	Callee	my_system		3954814	0					
ANR	3955014	Identifier	my_system		3954814	0					
ANR	3955015	ArgumentList	systemcmd		3954814	1					
ANR	3955016	Argument	systemcmd		3954814	0					
ANR	3955017	Identifier	systemcmd		3954814	0					
ANR	3955018	ExpressionStatement	set_priv ( priv )	893:1:22826:22840	3954814	16	True				
ANR	3955019	CallExpression	set_priv ( priv )		3954814	0					
ANR	3955020	Callee	set_priv		3954814	0					
ANR	3955021	Identifier	set_priv		3954814	0					
ANR	3955022	ArgumentList	priv		3954814	1					
ANR	3955023	Argument	priv		3954814	0					
ANR	3955024	Identifier	priv		3954814	0					
ANR	3955025	IfStatement	if ( ret == 0 )		3954814	17					
ANR	3955026	Condition	ret == 0	895:5:22848:22855	3954814	0	True				
ANR	3955027	EqualityExpression	ret == 0		3954814	0		==			
ANR	3955028	Identifier	ret		3954814	0					
ANR	3955029	PrimaryExpression	0		3954814	1					
ANR	3955030	CompoundStatement		42:16:1010:1010	3954814	1					
ANR	3955031	Statement	dprintf	896:2:22863:22869	3954814	0	True				
ANR	3955032	Statement	(	896:9:22870:22870	3954814	1	True				
ANR	3955033	Statement	D_ALWAYS	896:11:22872:22879	3954814	2	True				
ANR	3955034	Statement	","	896:19:22880:22880	3954814	3	True				
ANR	3955035	Statement	"""VMUniverseMgr::killVM() is called with """	896:21:22882:22922	3954814	4	True				
ANR	3955036	Statement	"""'%s'\\n"""	897:6:22930:22937	3954814	5	True				
ANR	3955037	Statement	","	897:14:22938:22938	3954814	6	True				
ANR	3955038	Statement	matchstring	897:16:22940:22950	3954814	7	True				
ANR	3955039	Statement	)	897:28:22952:22952	3954814	8	True				
ANR	3955040	ExpressionStatement		897:29:22953:22953	3954814	9	True				
ANR	3955041	ElseStatement	else		3954814	0					
ANR	3955042	CompoundStatement		45:7:1113:1113	3954814	0					
ANR	3955043	ExpressionStatement	"dprintf ( D_ALWAYS , ""VMUniverseMgr::killVM() failed!\\n"" )"	899:2:22966:23021	3954814	0	True				
ANR	3955044	CallExpression	"dprintf ( D_ALWAYS , ""VMUniverseMgr::killVM() failed!\\n"" )"		3954814	0					
ANR	3955045	Callee	dprintf		3954814	0					
ANR	3955046	Identifier	dprintf		3954814	0					
ANR	3955047	ArgumentList	D_ALWAYS		3954814	1					
ANR	3955048	Argument	D_ALWAYS		3954814	0					
ANR	3955049	Identifier	D_ALWAYS		3954814	0					
ANR	3955050	Argument	"""VMUniverseMgr::killVM() failed!\\n"""		3954814	1					
ANR	3955051	PrimaryExpression	"""VMUniverseMgr::killVM() failed!\\n"""		3954814	0					
ANR	3955052	ReturnStatement	return ;	902:1:23028:23034	3954814	18	True				
ANR	3955053	ReturnType	void		3954814	1					
ANR	3955054	Identifier	VMUniverseMgr :: killVM		3954814	2					
ANR	3955055	ParameterList	const char * matchstring		3954814	3					
ANR	3955056	Parameter	const char * matchstring	853:22:21823:21845	3954814	0	True				
ANR	3955057	ParameterType	const char *		3954814	0					
ANR	3955058	Identifier	matchstring		3954814	1					
ANR	3955059	CFGEntryNode	ENTRY		3954814		True				
ANR	3955060	CFGExitNode	EXIT		3954814		True				
ANR	3955061	Symbol	ret		3954814						
ANR	3955062	Symbol	gahp_log_file		3954814						
ANR	3955063	Symbol	tmp_str		3954814						
ANR	3955064	Symbol	systemcmd		3954814						
ANR	3955065	Symbol	tmp_str . Value		3954814						
ANR	3955066	Symbol	D_ALWAYS		3954814						
ANR	3955067	Symbol	m_vmgahp_server		3954814						
ANR	3955068	Symbol	set_root_priv		3954814						
ANR	3955069	Symbol	m_vm_type . Length		3954814						
ANR	3955070	Symbol	m_vm_type		3954814						
ANR	3955071	Symbol	m_vmgahp_server . Length		3954814						
ANR	3955072	Symbol	can_switch_ids		3954814						
ANR	3955073	Symbol	get_condor_uid		3954814						
ANR	3955074	Symbol	param		3954814						
ANR	3955075	Symbol	priv		3954814						
ANR	3955076	Symbol	matchstring		3954814						
ANR	3955077	Symbol	VMGAHP_KILL_MODE		3954814						
ANR	3955078	Symbol	my_system		3954814						
ANR	3955079	Function	VMUniverseMgr :: killVM	905:0:23039:24031							
ANR	3955080	FunctionDef	VMUniverseMgr :: killVM (VMStarterInfo * info)		3955079	0					
ANR	3955081	CompoundStatement		907:0:23087:24031	3955079	0					
ANR	3955082	IfStatement	if ( ! info )		3955079	0					
ANR	3955083	Condition	! info	908:5:23094:23098	3955079	0	True				
ANR	3955084	UnaryOperationExpression	! info		3955079	0					
ANR	3955085	UnaryOperator	!		3955079	0					
ANR	3955086	Identifier	info		3955079	1					
ANR	3955087	CompoundStatement		2:13:14:14	3955079	1					
ANR	3955088	ReturnStatement	return ;	909:2:23106:23112	3955079	0	True				
ANR	3955089	IfStatement	if ( ! m_vm_type . Length ( ) || ! m_vmgahp_server . Length ( ) )		3955079	1					
ANR	3955090	Condition	! m_vm_type . Length ( ) || ! m_vmgahp_server . Length ( )	911:5:23122:23169	3955079	0	True				
ANR	3955091	OrExpression	! m_vm_type . Length ( ) || ! m_vmgahp_server . Length ( )		3955079	0		||			
ANR	3955092	UnaryOperationExpression	! m_vm_type . Length ( )		3955079	0					
ANR	3955093	UnaryOperator	!		3955079	0					
ANR	3955094	CallExpression	m_vm_type . Length ( )		3955079	1					
ANR	3955095	Callee	m_vm_type . Length		3955079	0					
ANR	3955096	MemberAccess	m_vm_type . Length		3955079	0					
ANR	3955097	Identifier	m_vm_type		3955079	0					
ANR	3955098	Identifier	Length		3955079	1					
ANR	3955099	ArgumentList			3955079	1					
ANR	3955100	UnaryOperationExpression	! m_vmgahp_server . Length ( )		3955079	1					
ANR	3955101	UnaryOperator	!		3955079	0					
ANR	3955102	CallExpression	m_vmgahp_server . Length ( )		3955079	1					
ANR	3955103	Callee	m_vmgahp_server . Length		3955079	0					
ANR	3955104	MemberAccess	m_vmgahp_server . Length		3955079	0					
ANR	3955105	Identifier	m_vmgahp_server		3955079	0					
ANR	3955106	Identifier	Length		3955079	1					
ANR	3955107	ArgumentList			3955079	1					
ANR	3955108	CompoundStatement		5:56:85:85	3955079	1					
ANR	3955109	ReturnStatement	return ;	912:2:23177:23183	3955079	0	True				
ANR	3955110	IfStatement	if ( info -> m_vm_pid > 0 )		3955079	2					
ANR	3955111	Condition	info -> m_vm_pid > 0	915:5:23194:23211	3955079	0	True				
ANR	3955112	RelationalExpression	info -> m_vm_pid > 0		3955079	0		>			
ANR	3955113	PtrMemberAccess	info -> m_vm_pid		3955079	0					
ANR	3955114	Identifier	info		3955079	0					
ANR	3955115	Identifier	m_vm_pid		3955079	1					
ANR	3955116	PrimaryExpression	0		3955079	1					
ANR	3955117	CompoundStatement		9:26:127:127	3955079	1					
ANR	3955118	Statement	dprintf	916:2:23219:23225	3955079	0	True				
ANR	3955119	Statement	(	916:9:23226:23226	3955079	1	True				
ANR	3955120	Statement	D_ALWAYS	916:11:23228:23235	3955079	2	True				
ANR	3955121	Statement	","	916:19:23236:23236	3955079	3	True				
ANR	3955122	Statement	"""In VMUniverseMgr::killVM(), """	916:21:23238:23267	3955079	4	True				
ANR	3955123	Statement	"""Sending SIGKILL to Process[%d]\\n"""	917:4:23273:23306	3955079	5	True				
ANR	3955124	Statement	","	917:38:23307:23307	3955079	6	True				
ANR	3955125	Statement	(	917:40:23309:23309	3955079	7	True				
ANR	3955126	Statement	int	917:41:23310:23312	3955079	8	True				
ANR	3955127	Statement	)	917:44:23313:23313	3955079	9	True				
ANR	3955128	Statement	info	917:45:23314:23317	3955079	10	True				
ANR	3955129	Statement	->	917:49:23318:23319	3955079	11	True				
ANR	3955130	Statement	m_vm_pid	917:51:23320:23327	3955079	12	True				
ANR	3955131	Statement	)	917:59:23328:23328	3955079	13	True				
ANR	3955132	ExpressionStatement		917:60:23329:23329	3955079	14	True				
ANR	3955133	ExpressionStatement	"daemonCore -> Send_Signal ( info -> m_vm_pid , SIGKILL )"	918:2:23333:23381	3955079	15	True				
ANR	3955134	CallExpression	"daemonCore -> Send_Signal ( info -> m_vm_pid , SIGKILL )"		3955079	0					
ANR	3955135	Callee	daemonCore -> Send_Signal		3955079	0					
ANR	3955136	PtrMemberAccess	daemonCore -> Send_Signal		3955079	0					
ANR	3955137	Identifier	daemonCore		3955079	0					
ANR	3955138	Identifier	Send_Signal		3955079	1					
ANR	3955139	ArgumentList	info -> m_vm_pid		3955079	1					
ANR	3955140	Argument	info -> m_vm_pid		3955079	0					
ANR	3955141	PtrMemberAccess	info -> m_vm_pid		3955079	0					
ANR	3955142	Identifier	info		3955079	0					
ANR	3955143	Identifier	m_vm_pid		3955079	1					
ANR	3955144	Argument	SIGKILL		3955079	1					
ANR	3955145	Identifier	SIGKILL		3955079	0					
ANR	3955146	IdentifierDeclStatement	MyString matchstring ;	921:1:23388:23408	3955079	3	True				
ANR	3955147	IdentifierDecl	matchstring		3955079	0					
ANR	3955148	IdentifierDeclType	MyString		3955079	0					
ANR	3955149	Identifier	matchstring		3955079	1					
ANR	3955150	IdentifierDeclStatement	MyString workingdir ;	922:1:23411:23430	3955079	4	True				
ANR	3955151	IdentifierDecl	workingdir		3955079	0					
ANR	3955152	IdentifierDeclType	MyString		3955079	0					
ANR	3955153	Identifier	workingdir		3955079	1					
ANR	3955154	ExpressionStatement	"workingdir . sprintf ( ""%s%cdir_%ld"" , info -> m_execute_dir . Value ( ) , DIR_DELIM_CHAR , ( long ) info -> m_pid )"	924:1:23434:23551	3955079	5	True				
ANR	3955155	CallExpression	"workingdir . sprintf ( ""%s%cdir_%ld"" , info -> m_execute_dir . Value ( ) , DIR_DELIM_CHAR , ( long ) info -> m_pid )"		3955079	0					
ANR	3955156	Callee	workingdir . sprintf		3955079	0					
ANR	3955157	MemberAccess	workingdir . sprintf		3955079	0					
ANR	3955158	Identifier	workingdir		3955079	0					
ANR	3955159	Identifier	sprintf		3955079	1					
ANR	3955160	ArgumentList	"""%s%cdir_%ld"""		3955079	1					
ANR	3955161	Argument	"""%s%cdir_%ld"""		3955079	0					
ANR	3955162	PrimaryExpression	"""%s%cdir_%ld"""		3955079	0					
ANR	3955163	Argument	info -> m_execute_dir . Value ( )		3955079	1					
ANR	3955164	CallExpression	info -> m_execute_dir . Value ( )		3955079	0					
ANR	3955165	Callee	info -> m_execute_dir . Value		3955079	0					
ANR	3955166	MemberAccess	info -> m_execute_dir . Value		3955079	0					
ANR	3955167	PtrMemberAccess	info -> m_execute_dir		3955079	0					
ANR	3955168	Identifier	info		3955079	0					
ANR	3955169	Identifier	m_execute_dir		3955079	1					
ANR	3955170	Identifier	Value		3955079	1					
ANR	3955171	ArgumentList			3955079	1					
ANR	3955172	Argument	DIR_DELIM_CHAR		3955079	2					
ANR	3955173	Identifier	DIR_DELIM_CHAR		3955079	0					
ANR	3955174	Argument	( long ) info -> m_pid		3955079	3					
ANR	3955175	CastExpression	( long ) info -> m_pid		3955079	0					
ANR	3955176	CastTarget	long		3955079	0					
ANR	3955177	PtrMemberAccess	info -> m_pid		3955079	1					
ANR	3955178	Identifier	info		3955079	0					
ANR	3955179	Identifier	m_pid		3955079	1					
ANR	3955180	IfStatement	"if ( ( strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == MATCH ) || ( strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == 0 ) )"		3955079	6					
ANR	3955181	Condition	"( strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == MATCH ) || ( strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == 0 )"	927:5:23559:23687	3955079	0	True				
ANR	3955182	OrExpression	"( strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == MATCH ) || ( strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == 0 )"		3955079	0		||			
ANR	3955183	EqualityExpression	"strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_XEN ) == MATCH"		3955079	0		==			
ANR	3955184	CallExpression	"strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_XEN )"		3955079	0					
ANR	3955185	Callee	strcasecmp		3955079	0					
ANR	3955186	Identifier	strcasecmp		3955079	0					
ANR	3955187	ArgumentList	m_vm_type . Value ( )		3955079	1					
ANR	3955188	Argument	m_vm_type . Value ( )		3955079	0					
ANR	3955189	CallExpression	m_vm_type . Value ( )		3955079	0					
ANR	3955190	Callee	m_vm_type . Value		3955079	0					
ANR	3955191	MemberAccess	m_vm_type . Value		3955079	0					
ANR	3955192	Identifier	m_vm_type		3955079	0					
ANR	3955193	Identifier	Value		3955079	1					
ANR	3955194	ArgumentList			3955079	1					
ANR	3955195	Argument	CONDOR_VM_UNIVERSE_XEN		3955079	1					
ANR	3955196	Identifier	CONDOR_VM_UNIVERSE_XEN		3955079	0					
ANR	3955197	Identifier	MATCH		3955079	1					
ANR	3955198	EqualityExpression	"strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_KVM ) == 0"		3955079	1		==			
ANR	3955199	CallExpression	"strcasecmp ( m_vm_type . Value ( ) , CONDOR_VM_UNIVERSE_KVM )"		3955079	0					
ANR	3955200	Callee	strcasecmp		3955079	0					
ANR	3955201	Identifier	strcasecmp		3955079	0					
ANR	3955202	ArgumentList	m_vm_type . Value ( )		3955079	1					
ANR	3955203	Argument	m_vm_type . Value ( )		3955079	0					
ANR	3955204	CallExpression	m_vm_type . Value ( )		3955079	0					
ANR	3955205	Callee	m_vm_type . Value		3955079	0					
ANR	3955206	MemberAccess	m_vm_type . Value		3955079	0					
ANR	3955207	Identifier	m_vm_type		3955079	0					
ANR	3955208	Identifier	Value		3955079	1					
ANR	3955209	ArgumentList			3955079	1					
ANR	3955210	Argument	CONDOR_VM_UNIVERSE_KVM		3955079	1					
ANR	3955211	Identifier	CONDOR_VM_UNIVERSE_KVM		3955079	0					
ANR	3955212	PrimaryExpression	0		3955079	1					
ANR	3955213	CompoundStatement		21:136:602:602	3955079	1					
ANR	3955214	IfStatement	"if ( create_name_for_VM ( & info -> m_job_ad , matchstring ) == false )"		3955079	0					
ANR	3955215	Condition	"create_name_for_VM ( & info -> m_job_ad , matchstring ) == false"	928:6:23698:23754	3955079	0	True				
ANR	3955216	EqualityExpression	"create_name_for_VM ( & info -> m_job_ad , matchstring ) == false"		3955079	0		==			
ANR	3955217	CallExpression	"create_name_for_VM ( & info -> m_job_ad , matchstring )"		3955079	0					
ANR	3955218	Callee	create_name_for_VM		3955079	0					
ANR	3955219	Identifier	create_name_for_VM		3955079	0					
ANR	3955220	ArgumentList	& info -> m_job_ad		3955079	1					
ANR	3955221	Argument	& info -> m_job_ad		3955079	0					
ANR	3955222	UnaryOperationExpression	& info -> m_job_ad		3955079	0					
ANR	3955223	UnaryOperator	&		3955079	0					
ANR	3955224	PtrMemberAccess	info -> m_job_ad		3955079	1					
ANR	3955225	Identifier	info		3955079	0					
ANR	3955226	Identifier	m_job_ad		3955079	1					
ANR	3955227	Argument	matchstring		3955079	1					
ANR	3955228	Identifier	matchstring		3955079	0					
ANR	3955229	Identifier	false		3955079	1					
ANR	3955230	CompoundStatement		22:66:670:670	3955079	1					
ANR	3955231	Statement	dprintf	929:3:23763:23769	3955079	0	True				
ANR	3955232	Statement	(	929:10:23770:23770	3955079	1	True				
ANR	3955233	Statement	D_ALWAYS	929:11:23771:23778	3955079	2	True				
ANR	3955234	Statement	","	929:19:23779:23779	3955079	3	True				
ANR	3955235	Statement	"""VMUniverseMgr::killVM() : """	929:21:23781:23808	3955079	4	True				
ANR	3955236	Statement	"""cannot make the name of VM\\n"""	930:5:23815:23844	3955079	5	True				
ANR	3955237	Statement	)	930:35:23845:23845	3955079	6	True				
ANR	3955238	ExpressionStatement		930:36:23846:23846	3955079	7	True				
ANR	3955239	ReturnStatement	return ;	931:3:23851:23857	3955079	8	True				
ANR	3955240	ElseStatement	else		3955079	0					
ANR	3955241	CompoundStatement		27:7:782:782	3955079	0					
ANR	3955242	ExpressionStatement	matchstring = workingdir	936:2:23969:23993	3955079	0	True				
ANR	3955243	AssignmentExpression	matchstring = workingdir		3955079	0		=			
ANR	3955244	Identifier	matchstring		3955079	0					
ANR	3955245	Identifier	workingdir		3955079	1					
ANR	3955246	ExpressionStatement	killVM ( matchstring . Value ( ) )	939:1:24000:24029	3955079	7	True				
ANR	3955247	CallExpression	killVM ( matchstring . Value ( ) )		3955079	0					
ANR	3955248	Callee	killVM		3955079	0					
ANR	3955249	Identifier	killVM		3955079	0					
ANR	3955250	ArgumentList	matchstring . Value ( )		3955079	1					
ANR	3955251	Argument	matchstring . Value ( )		3955079	0					
ANR	3955252	CallExpression	matchstring . Value ( )		3955079	0					
ANR	3955253	Callee	matchstring . Value		3955079	0					
ANR	3955254	MemberAccess	matchstring . Value		3955079	0					
ANR	3955255	Identifier	matchstring		3955079	0					
ANR	3955256	Identifier	Value		3955079	1					
ANR	3955257	ArgumentList			3955079	1					
ANR	3955258	ReturnType	void		3955079	1					
ANR	3955259	Identifier	VMUniverseMgr :: killVM		3955079	2					
ANR	3955260	ParameterList	VMStarterInfo * info		3955079	3					
ANR	3955261	Parameter	VMStarterInfo * info	906:22:23066:23084	3955079	0	True				
ANR	3955262	ParameterType	VMStarterInfo *		3955079	0					
ANR	3955263	Identifier	info		3955079	1					
ANR	3955264	CFGEntryNode	ENTRY		3955079		True				
ANR	3955265	CFGExitNode	EXIT		3955079		True				
ANR	3955266	Symbol	create_name_for_VM		3955079						
ANR	3955267	Symbol	& info -> m_job_ad		3955079						
ANR	3955268	Symbol	workingdir		3955079						
ANR	3955269	Symbol	DIR_DELIM_CHAR		3955079						
ANR	3955270	Symbol	info -> m_execute_dir . Value		3955079						
ANR	3955271	Symbol	m_vm_type . Value		3955079						
ANR	3955272	Symbol	false		3955079						
ANR	3955273	Symbol	m_vmgahp_server		3955079						
ANR	3955274	Symbol	info -> m_pid		3955079						
ANR	3955275	Symbol	SIGKILL		3955079						
ANR	3955276	Symbol	info -> m_vm_pid		3955079						
ANR	3955277	Symbol	m_vm_type . Length		3955079						
ANR	3955278	Symbol	m_vmgahp_server . Length		3955079						
ANR	3955279	Symbol	m_vm_type		3955079						
ANR	3955280	Symbol	info -> m_execute_dir		3955079						
ANR	3955281	Symbol	CONDOR_VM_UNIVERSE_KVM		3955079						
ANR	3955282	Symbol	matchstring . Value		3955079						
ANR	3955283	Symbol	daemonCore		3955079						
ANR	3955284	Symbol	CONDOR_VM_UNIVERSE_XEN		3955079						
ANR	3955285	Symbol	* info		3955079						
ANR	3955286	Symbol	strcasecmp		3955079						
ANR	3955287	Symbol	matchstring		3955079						
ANR	3955288	Symbol	MATCH		3955079						
ANR	3955289	Symbol	info		3955079						
ANR	3955290	Function	VMUniverseMgr :: isStarterForVM	942:0:24034:24204							
ANR	3955291	FunctionDef	VMUniverseMgr :: isStarterForVM (pid_t s_pid)		3955290	0					
ANR	3955292	CompoundStatement		944:0:24083:24204	3955290	0					
ANR	3955293	IdentifierDeclStatement	VMStarterInfo * info = findVMStarterInfoWithStarterPid ( s_pid ) ;	945:1:24086:24146	3955290	0	True				
ANR	3955294	IdentifierDecl	* info = findVMStarterInfoWithStarterPid ( s_pid )		3955290	0					
ANR	3955295	IdentifierDeclType	VMStarterInfo *		3955290	0					
ANR	3955296	Identifier	info		3955290	1					
ANR	3955297	AssignmentExpression	* info = findVMStarterInfoWithStarterPid ( s_pid )		3955290	2		=			
ANR	3955298	Identifier	info		3955290	0					
ANR	3955299	CallExpression	findVMStarterInfoWithStarterPid ( s_pid )		3955290	1					
ANR	3955300	Callee	findVMStarterInfoWithStarterPid		3955290	0					
ANR	3955301	Identifier	findVMStarterInfoWithStarterPid		3955290	0					
ANR	3955302	ArgumentList	s_pid		3955290	1					
ANR	3955303	Argument	s_pid		3955290	0					
ANR	3955304	Identifier	s_pid		3955290	0					
ANR	3955305	IfStatement	if ( info )		3955290	1					
ANR	3955306	Condition	info	947:4:24153:24156	3955290	0	True				
ANR	3955307	Identifier	info		3955290	0					
ANR	3955308	CompoundStatement		4:10:75:75	3955290	1					
ANR	3955309	ReturnStatement	return true ;	948:2:24163:24174	3955290	0	True				
ANR	3955310	Identifier	true		3955290	0					
ANR	3955311	ElseStatement	else		3955290	0					
ANR	3955312	CompoundStatement		6:7:99:99	3955290	0					
ANR	3955313	ReturnStatement	return false ;	950:2:24187:24199	3955290	0	True				
ANR	3955314	Identifier	false		3955290	0					
ANR	3955315	ReturnType	bool		3955290	1					
ANR	3955316	Identifier	VMUniverseMgr :: isStarterForVM		3955290	2					
ANR	3955317	ParameterList	pid_t s_pid		3955290	3					
ANR	3955318	Parameter	pid_t s_pid	943:30:24070:24080	3955290	0	True				
ANR	3955319	ParameterType	pid_t		3955290	0					
ANR	3955320	Identifier	s_pid		3955290	1					
ANR	3955321	CFGEntryNode	ENTRY		3955290		True				
ANR	3955322	CFGExitNode	EXIT		3955290		True				
ANR	3955323	Symbol	true		3955290						
ANR	3955324	Symbol	false		3955290						
ANR	3955325	Symbol	findVMStarterInfoWithStarterPid		3955290						
ANR	3955326	Symbol	s_pid		3955290						
ANR	3955327	Symbol	info		3955290						
ANR	3955328	Function	VMUniverseMgr :: getUsageForVM	954:0:24207:25030							
ANR	3955329	FunctionDef	"VMUniverseMgr :: getUsageForVM (pid_t s_pid , ProcFamilyUsage & usage)"		3955328	0					
ANR	3955330	CompoundStatement		956:0:24278:25030	3955328	0					
ANR	3955331	IdentifierDeclStatement	VMStarterInfo * info = findVMStarterInfoWithStarterPid ( s_pid ) ;	957:1:24281:24341	3955328	0	True				
ANR	3955332	IdentifierDecl	* info = findVMStarterInfoWithStarterPid ( s_pid )		3955328	0					
ANR	3955333	IdentifierDeclType	VMStarterInfo *		3955328	0					
ANR	3955334	Identifier	info		3955328	1					
ANR	3955335	AssignmentExpression	* info = findVMStarterInfoWithStarterPid ( s_pid )		3955328	2		=			
ANR	3955336	Identifier	info		3955328	0					
ANR	3955337	CallExpression	findVMStarterInfoWithStarterPid ( s_pid )		3955328	1					
ANR	3955338	Callee	findVMStarterInfoWithStarterPid		3955328	0					
ANR	3955339	Identifier	findVMStarterInfoWithStarterPid		3955328	0					
ANR	3955340	ArgumentList	s_pid		3955328	1					
ANR	3955341	Argument	s_pid		3955328	0					
ANR	3955342	Identifier	s_pid		3955328	0					
ANR	3955343	IfStatement	if ( ! info )		3955328	1					
ANR	3955344	Condition	! info	958:5:24348:24352	3955328	0	True				
ANR	3955345	UnaryOperationExpression	! info		3955328	0					
ANR	3955346	UnaryOperator	!		3955328	0					
ANR	3955347	Identifier	info		3955328	1					
ANR	3955348	CompoundStatement		3:13:77:77	3955328	1					
ANR	3955349	ReturnStatement	return false ;	959:2:24360:24372	3955328	0	True				
ANR	3955350	Identifier	false		3955328	0					
ANR	3955351	IdentifierDeclStatement	ProcFamilyUsage vm_usage ;	962:1:24379:24403	3955328	2	True				
ANR	3955352	IdentifierDecl	vm_usage		3955328	0					
ANR	3955353	IdentifierDeclType	ProcFamilyUsage		3955328	0					
ANR	3955354	Identifier	vm_usage		3955328	1					
ANR	3955355	ExpressionStatement	info -> getUsageOfVM ( vm_usage )	963:1:24406:24434	3955328	3	True				
ANR	3955356	CallExpression	info -> getUsageOfVM ( vm_usage )		3955328	0					
ANR	3955357	Callee	info -> getUsageOfVM		3955328	0					
ANR	3955358	PtrMemberAccess	info -> getUsageOfVM		3955328	0					
ANR	3955359	Identifier	info		3955328	0					
ANR	3955360	Identifier	getUsageOfVM		3955328	1					
ANR	3955361	ArgumentList	vm_usage		3955328	1					
ANR	3955362	Argument	vm_usage		3955328	0					
ANR	3955363	Identifier	vm_usage		3955328	0					
ANR	3955364	ExpressionStatement	usage . user_cpu_time += vm_usage . user_cpu_time	965:1:24438:24483	3955328	4	True				
ANR	3955365	AssignmentExpression	usage . user_cpu_time += vm_usage . user_cpu_time		3955328	0		+=			
ANR	3955366	MemberAccess	usage . user_cpu_time		3955328	0					
ANR	3955367	Identifier	usage		3955328	0					
ANR	3955368	Identifier	user_cpu_time		3955328	1					
ANR	3955369	MemberAccess	vm_usage . user_cpu_time		3955328	1					
ANR	3955370	Identifier	vm_usage		3955328	0					
ANR	3955371	Identifier	user_cpu_time		3955328	1					
ANR	3955372	ExpressionStatement	usage . sys_cpu_time += vm_usage . sys_cpu_time	966:1:24486:24529	3955328	5	True				
ANR	3955373	AssignmentExpression	usage . sys_cpu_time += vm_usage . sys_cpu_time		3955328	0		+=			
ANR	3955374	MemberAccess	usage . sys_cpu_time		3955328	0					
ANR	3955375	Identifier	usage		3955328	0					
ANR	3955376	Identifier	sys_cpu_time		3955328	1					
ANR	3955377	MemberAccess	vm_usage . sys_cpu_time		3955328	1					
ANR	3955378	Identifier	vm_usage		3955328	0					
ANR	3955379	Identifier	sys_cpu_time		3955328	1					
ANR	3955380	ExpressionStatement	usage . percent_cpu += vm_usage . percent_cpu	967:1:24532:24573	3955328	6	True				
ANR	3955381	AssignmentExpression	usage . percent_cpu += vm_usage . percent_cpu		3955328	0		+=			
ANR	3955382	MemberAccess	usage . percent_cpu		3955328	0					
ANR	3955383	Identifier	usage		3955328	0					
ANR	3955384	Identifier	percent_cpu		3955328	1					
ANR	3955385	MemberAccess	vm_usage . percent_cpu		3955328	1					
ANR	3955386	Identifier	vm_usage		3955328	0					
ANR	3955387	Identifier	percent_cpu		3955328	1					
ANR	3955388	IfStatement	if ( usage . max_image_size < vm_usage . max_image_size )		3955328	7					
ANR	3955389	Condition	usage . max_image_size < vm_usage . max_image_size	968:5:24580:24625	3955328	0	True				
ANR	3955390	RelationalExpression	usage . max_image_size < vm_usage . max_image_size		3955328	0		<			
ANR	3955391	MemberAccess	usage . max_image_size		3955328	0					
ANR	3955392	Identifier	usage		3955328	0					
ANR	3955393	Identifier	max_image_size		3955328	1					
ANR	3955394	MemberAccess	vm_usage . max_image_size		3955328	1					
ANR	3955395	Identifier	vm_usage		3955328	0					
ANR	3955396	Identifier	max_image_size		3955328	1					
ANR	3955397	CompoundStatement		13:54:350:350	3955328	1					
ANR	3955398	ExpressionStatement	usage . max_image_size = vm_usage . max_image_size	969:2:24633:24679	3955328	0	True				
ANR	3955399	AssignmentExpression	usage . max_image_size = vm_usage . max_image_size		3955328	0		=			
ANR	3955400	MemberAccess	usage . max_image_size		3955328	0					
ANR	3955401	Identifier	usage		3955328	0					
ANR	3955402	Identifier	max_image_size		3955328	1					
ANR	3955403	MemberAccess	vm_usage . max_image_size		3955328	1					
ANR	3955404	Identifier	vm_usage		3955328	0					
ANR	3955405	Identifier	max_image_size		3955328	1					
ANR	3955406	ExpressionStatement	usage . total_image_size += vm_usage . total_image_size	971:1:24685:24736	3955328	8	True				
ANR	3955407	AssignmentExpression	usage . total_image_size += vm_usage . total_image_size		3955328	0		+=			
ANR	3955408	MemberAccess	usage . total_image_size		3955328	0					
ANR	3955409	Identifier	usage		3955328	0					
ANR	3955410	Identifier	total_image_size		3955328	1					
ANR	3955411	MemberAccess	vm_usage . total_image_size		3955328	1					
ANR	3955412	Identifier	vm_usage		3955328	0					
ANR	3955413	Identifier	total_image_size		3955328	1					
ANR	3955414	ExpressionStatement	usage . total_resident_set_size += vm_usage . total_resident_set_size	972:1:24739:24804	3955328	9	True				
ANR	3955415	AssignmentExpression	usage . total_resident_set_size += vm_usage . total_resident_set_size		3955328	0		+=			
ANR	3955416	MemberAccess	usage . total_resident_set_size		3955328	0					
ANR	3955417	Identifier	usage		3955328	0					
ANR	3955418	Identifier	total_resident_set_size		3955328	1					
ANR	3955419	MemberAccess	vm_usage . total_resident_set_size		3955328	1					
ANR	3955420	Identifier	vm_usage		3955328	0					
ANR	3955421	Identifier	total_resident_set_size		3955328	1					
ANR	3955422	IfStatement	if ( vm_usage . total_proportional_set_size_available )		3955328	10					
ANR	3955423	Condition	vm_usage . total_proportional_set_size_available	974:5:24824:24869	3955328	0	True				
ANR	3955424	MemberAccess	vm_usage . total_proportional_set_size_available		3955328	0					
ANR	3955425	Identifier	vm_usage		3955328	0					
ANR	3955426	Identifier	total_proportional_set_size_available		3955328	1					
ANR	3955427	CompoundStatement		19:54:594:594	3955328	1					
ANR	3955428	ExpressionStatement	usage . total_proportional_set_size_available = true	975:2:24877:24927	3955328	0	True				
ANR	3955429	AssignmentExpression	usage . total_proportional_set_size_available = true		3955328	0		=			
ANR	3955430	MemberAccess	usage . total_proportional_set_size_available		3955328	0					
ANR	3955431	Identifier	usage		3955328	0					
ANR	3955432	Identifier	total_proportional_set_size_available		3955328	1					
ANR	3955433	Identifier	true		3955328	1					
ANR	3955434	ExpressionStatement	usage . total_proportional_set_size += vm_usage . total_proportional_set_size	976:2:24931:25004	3955328	1	True				
ANR	3955435	AssignmentExpression	usage . total_proportional_set_size += vm_usage . total_proportional_set_size		3955328	0		+=			
ANR	3955436	MemberAccess	usage . total_proportional_set_size		3955328	0					
ANR	3955437	Identifier	usage		3955328	0					
ANR	3955438	Identifier	total_proportional_set_size		3955328	1					
ANR	3955439	MemberAccess	vm_usage . total_proportional_set_size		3955328	1					
ANR	3955440	Identifier	vm_usage		3955328	0					
ANR	3955441	Identifier	total_proportional_set_size		3955328	1					
ANR	3955442	ReturnStatement	return true ;	979:1:25017:25028	3955328	11	True				
ANR	3955443	Identifier	true		3955328	0					
ANR	3955444	ReturnType	bool		3955328	1					
ANR	3955445	Identifier	VMUniverseMgr :: getUsageForVM		3955328	2					
ANR	3955446	ParameterList	"pid_t s_pid , ProcFamilyUsage & usage"		3955328	3					
ANR	3955447	Parameter	pid_t s_pid	955:29:24241:24251	3955328	0	True				
ANR	3955448	ParameterType	pid_t		3955328	0					
ANR	3955449	Identifier	s_pid		3955328	1					
ANR	3955450	Parameter	ProcFamilyUsage & usage	955:42:24254:24275	3955328	1	True				
ANR	3955451	ParameterType	ProcFamilyUsage &		3955328	0					
ANR	3955452	Identifier	usage		3955328	1					
ANR	3955453	CFGEntryNode	ENTRY		3955328		True				
ANR	3955454	CFGExitNode	EXIT		3955328		True				
ANR	3955455	Symbol	usage . total_resident_set_size		3955328						
ANR	3955456	Symbol	usage . sys_cpu_time		3955328						
ANR	3955457	Symbol	usage		3955328						
ANR	3955458	Symbol	false		3955328						
ANR	3955459	Symbol	usage . max_image_size		3955328						
ANR	3955460	Symbol	vm_usage . total_image_size		3955328						
ANR	3955461	Symbol	usage . user_cpu_time		3955328						
ANR	3955462	Symbol	findVMStarterInfoWithStarterPid		3955328						
ANR	3955463	Symbol	usage . total_image_size		3955328						
ANR	3955464	Symbol	vm_usage		3955328						
ANR	3955465	Symbol	vm_usage . total_resident_set_size		3955328						
ANR	3955466	Symbol	usage . percent_cpu		3955328						
ANR	3955467	Symbol	usage . total_proportional_set_size		3955328						
ANR	3955468	Symbol	vm_usage . percent_cpu		3955328						
ANR	3955469	Symbol	vm_usage . max_image_size		3955328						
ANR	3955470	Symbol	true		3955328						
ANR	3955471	Symbol	vm_usage . total_proportional_set_size		3955328						
ANR	3955472	Symbol	vm_usage . sys_cpu_time		3955328						
ANR	3955473	Symbol	vm_usage . user_cpu_time		3955328						
ANR	3955474	Symbol	usage . total_proportional_set_size_available		3955328						
ANR	3955475	Symbol	s_pid		3955328						
ANR	3955476	Symbol	info		3955328						
ANR	3955477	Symbol	vm_usage . total_proportional_set_size_available		3955328						
ANR	3955478	Function	VMUniverseMgr :: addProcessForVM	982:0:25033:25369							
ANR	3955479	FunctionDef	"VMUniverseMgr :: addProcessForVM (pid_t s_pid , pid_t vm_pid)"		3955478	0					
ANR	3955480	CompoundStatement		984:0:25096:25369	3955478	0					
ANR	3955481	IdentifierDeclStatement	VMStarterInfo * info = findVMStarterInfoWithStarterPid ( s_pid ) ;	985:1:25099:25159	3955478	0	True				
ANR	3955482	IdentifierDecl	* info = findVMStarterInfoWithStarterPid ( s_pid )		3955478	0					
ANR	3955483	IdentifierDeclType	VMStarterInfo *		3955478	0					
ANR	3955484	Identifier	info		3955478	1					
ANR	3955485	AssignmentExpression	* info = findVMStarterInfoWithStarterPid ( s_pid )		3955478	2		=			
ANR	3955486	Identifier	info		3955478	0					
ANR	3955487	CallExpression	findVMStarterInfoWithStarterPid ( s_pid )		3955478	1					
ANR	3955488	Callee	findVMStarterInfoWithStarterPid		3955478	0					
ANR	3955489	Identifier	findVMStarterInfoWithStarterPid		3955478	0					
ANR	3955490	ArgumentList	s_pid		3955478	1					
ANR	3955491	Argument	s_pid		3955478	0					
ANR	3955492	Identifier	s_pid		3955478	0					
ANR	3955493	IfStatement	if ( ! info )		3955478	1					
ANR	3955494	Condition	! info	986:5:25166:25170	3955478	0	True				
ANR	3955495	UnaryOperationExpression	! info		3955478	0					
ANR	3955496	UnaryOperator	!		3955478	0					
ANR	3955497	Identifier	info		3955478	1					
ANR	3955498	CompoundStatement		3:13:77:77	3955478	1					
ANR	3955499	ReturnStatement	return false ;	987:2:25178:25190	3955478	0	True				
ANR	3955500	Identifier	false		3955478	0					
ANR	3955501	ExpressionStatement	info -> addProcessForVM ( vm_pid )	990:1:25197:25226	3955478	2	True				
ANR	3955502	CallExpression	info -> addProcessForVM ( vm_pid )		3955478	0					
ANR	3955503	Callee	info -> addProcessForVM		3955478	0					
ANR	3955504	PtrMemberAccess	info -> addProcessForVM		3955478	0					
ANR	3955505	Identifier	info		3955478	0					
ANR	3955506	Identifier	addProcessForVM		3955478	1					
ANR	3955507	ArgumentList	vm_pid		3955478	1					
ANR	3955508	Argument	vm_pid		3955478	0					
ANR	3955509	Identifier	vm_pid		3955478	0					
ANR	3955510	Statement	dprintf	991:1:25229:25235	3955478	3	True				
ANR	3955511	Statement	(	991:8:25236:25236	3955478	4	True				
ANR	3955512	Statement	D_ALWAYS	991:9:25237:25244	3955478	5	True				
ANR	3955513	Statement	","	991:17:25245:25245	3955478	6	True				
ANR	3955514	Statement	"""In VMUniverseMgr::addProcessForVM, process[%d] is """	991:19:25247:25298	3955478	7	True				
ANR	3955515	Statement	"""added to Starter[%d]\\n"""	992:3:25303:25326	3955478	8	True				
ANR	3955516	Statement	","	992:27:25327:25327	3955478	9	True				
ANR	3955517	Statement	(	992:29:25329:25329	3955478	10	True				
ANR	3955518	Statement	int	992:30:25330:25332	3955478	11	True				
ANR	3955519	Statement	)	992:33:25333:25333	3955478	12	True				
ANR	3955520	Statement	vm_pid	992:34:25334:25339	3955478	13	True				
ANR	3955521	Statement	","	992:40:25340:25340	3955478	14	True				
ANR	3955522	Statement	(	992:42:25342:25342	3955478	15	True				
ANR	3955523	Statement	int	992:43:25343:25345	3955478	16	True				
ANR	3955524	Statement	)	992:46:25346:25346	3955478	17	True				
ANR	3955525	Statement	s_pid	992:47:25347:25351	3955478	18	True				
ANR	3955526	Statement	)	992:52:25352:25352	3955478	19	True				
ANR	3955527	ExpressionStatement		992:53:25353:25353	3955478	20	True				
ANR	3955528	ReturnStatement	return true ;	993:1:25356:25367	3955478	21	True				
ANR	3955529	Identifier	true		3955478	0					
ANR	3955530	ReturnType	bool		3955478	1					
ANR	3955531	Identifier	VMUniverseMgr :: addProcessForVM		3955478	2					
ANR	3955532	ParameterList	"pid_t s_pid , pid_t vm_pid"		3955478	3					
ANR	3955533	Parameter	pid_t s_pid	983:31:25069:25079	3955478	0	True				
ANR	3955534	ParameterType	pid_t		3955478	0					
ANR	3955535	Identifier	s_pid		3955478	1					
ANR	3955536	Parameter	pid_t vm_pid	983:44:25082:25093	3955478	1	True				
ANR	3955537	ParameterType	pid_t		3955478	0					
ANR	3955538	Identifier	vm_pid		3955478	1					
ANR	3955539	CFGEntryNode	ENTRY		3955478		True				
ANR	3955540	CFGExitNode	EXIT		3955478		True				
ANR	3955541	Symbol	false		3955478						
ANR	3955542	Symbol	true		3955478						
ANR	3955543	Symbol	vm_pid		3955478						
ANR	3955544	Symbol	findVMStarterInfoWithStarterPid		3955478						
ANR	3955545	Symbol	s_pid		3955478						
ANR	3955546	Symbol	info		3955478						
ANR	3955547	Function	VMUniverseMgr :: getProcessForVM	996:0:25372:25551							
ANR	3955548	FunctionDef	VMUniverseMgr :: getProcessForVM (pid_t s_pid)		3955547	0					
ANR	3955549	CompoundStatement		998:0:25422:25551	3955547	0					
ANR	3955550	IdentifierDeclStatement	VMStarterInfo * info = findVMStarterInfoWithStarterPid ( s_pid ) ;	999:1:25425:25485	3955547	0	True				
ANR	3955551	IdentifierDecl	* info = findVMStarterInfoWithStarterPid ( s_pid )		3955547	0					
ANR	3955552	IdentifierDeclType	VMStarterInfo *		3955547	0					
ANR	3955553	Identifier	info		3955547	1					
ANR	3955554	AssignmentExpression	* info = findVMStarterInfoWithStarterPid ( s_pid )		3955547	2		=			
ANR	3955555	Identifier	info		3955547	0					
ANR	3955556	CallExpression	findVMStarterInfoWithStarterPid ( s_pid )		3955547	1					
ANR	3955557	Callee	findVMStarterInfoWithStarterPid		3955547	0					
ANR	3955558	Identifier	findVMStarterInfoWithStarterPid		3955547	0					
ANR	3955559	ArgumentList	s_pid		3955547	1					
ANR	3955560	Argument	s_pid		3955547	0					
ANR	3955561	Identifier	s_pid		3955547	0					
ANR	3955562	IfStatement	if ( ! info )		3955547	1					
ANR	3955563	Condition	! info	1000:5:25492:25496	3955547	0	True				
ANR	3955564	UnaryOperationExpression	! info		3955547	0					
ANR	3955565	UnaryOperator	!		3955547	0					
ANR	3955566	Identifier	info		3955547	1					
ANR	3955567	CompoundStatement		3:13:77:77	3955547	1					
ANR	3955568	ReturnStatement	return 0 ;	1001:2:25504:25512	3955547	0	True				
ANR	3955569	PrimaryExpression	0		3955547	0					
ANR	3955570	ReturnStatement	return info -> getProcessForVM ( ) ;	1004:1:25519:25549	3955547	2	True				
ANR	3955571	CallExpression	info -> getProcessForVM ( )		3955547	0					
ANR	3955572	Callee	info -> getProcessForVM		3955547	0					
ANR	3955573	PtrMemberAccess	info -> getProcessForVM		3955547	0					
ANR	3955574	Identifier	info		3955547	0					
ANR	3955575	Identifier	getProcessForVM		3955547	1					
ANR	3955576	ArgumentList			3955547	1					
ANR	3955577	ReturnType	pid_t		3955547	1					
ANR	3955578	Identifier	VMUniverseMgr :: getProcessForVM		3955547	2					
ANR	3955579	ParameterList	pid_t s_pid		3955547	3					
ANR	3955580	Parameter	pid_t s_pid	997:31:25409:25419	3955547	0	True				
ANR	3955581	ParameterType	pid_t		3955547	0					
ANR	3955582	Identifier	s_pid		3955547	1					
ANR	3955583	CFGEntryNode	ENTRY		3955547		True				
ANR	3955584	CFGExitNode	EXIT		3955547		True				
ANR	3955585	Symbol	info -> getProcessForVM		3955547						
ANR	3955586	Symbol	* info		3955547						
ANR	3955587	Symbol	findVMStarterInfoWithStarterPid		3955547						
ANR	3955588	Symbol	s_pid		3955547						
ANR	3955589	Symbol	info		3955547						
ANR	3955590	Function	VMUniverseMgr :: addMACForVM	1007:0:25554:25849							
ANR	3955591	FunctionDef	"VMUniverseMgr :: addMACForVM (pid_t s_pid , const char * mac)"		3955590	0					
ANR	3955592	CompoundStatement		1009:0:25616:25849	3955590	0					
ANR	3955593	IdentifierDeclStatement	VMStarterInfo * info = findVMStarterInfoWithStarterPid ( s_pid ) ;	1010:1:25619:25679	3955590	0	True				
ANR	3955594	IdentifierDecl	* info = findVMStarterInfoWithStarterPid ( s_pid )		3955590	0					
ANR	3955595	IdentifierDeclType	VMStarterInfo *		3955590	0					
ANR	3955596	Identifier	info		3955590	1					
ANR	3955597	AssignmentExpression	* info = findVMStarterInfoWithStarterPid ( s_pid )		3955590	2		=			
ANR	3955598	Identifier	info		3955590	0					
ANR	3955599	CallExpression	findVMStarterInfoWithStarterPid ( s_pid )		3955590	1					
ANR	3955600	Callee	findVMStarterInfoWithStarterPid		3955590	0					
ANR	3955601	Identifier	findVMStarterInfoWithStarterPid		3955590	0					
ANR	3955602	ArgumentList	s_pid		3955590	1					
ANR	3955603	Argument	s_pid		3955590	0					
ANR	3955604	Identifier	s_pid		3955590	0					
ANR	3955605	IfStatement	if ( ! info )		3955590	1					
ANR	3955606	Condition	! info	1011:5:25686:25690	3955590	0	True				
ANR	3955607	UnaryOperationExpression	! info		3955590	0					
ANR	3955608	UnaryOperator	!		3955590	0					
ANR	3955609	Identifier	info		3955590	1					
ANR	3955610	CompoundStatement		3:13:77:77	3955590	1					
ANR	3955611	ReturnStatement	return ;	1012:2:25698:25704	3955590	0	True				
ANR	3955612	ExpressionStatement	info -> addMACForVM ( mac )	1015:1:25711:25733	3955590	2	True				
ANR	3955613	CallExpression	info -> addMACForVM ( mac )		3955590	0					
ANR	3955614	Callee	info -> addMACForVM		3955590	0					
ANR	3955615	PtrMemberAccess	info -> addMACForVM		3955590	0					
ANR	3955616	Identifier	info		3955590	0					
ANR	3955617	Identifier	addMACForVM		3955590	1					
ANR	3955618	ArgumentList	mac		3955590	1					
ANR	3955619	Argument	mac		3955590	0					
ANR	3955620	Identifier	mac		3955590	0					
ANR	3955621	Statement	dprintf	1016:1:25736:25742	3955590	3	True				
ANR	3955622	Statement	(	1016:8:25743:25743	3955590	4	True				
ANR	3955623	Statement	D_FULLDEBUG	1016:9:25744:25754	3955590	5	True				
ANR	3955624	Statement	","	1016:20:25755:25755	3955590	6	True				
ANR	3955625	Statement	"""In VMUniverseMgr::addMACForVM, mac[%s] is """	1016:22:25757:25800	3955590	7	True				
ANR	3955626	Statement	"""added to Starter[%d]\\n"""	1017:3:25805:25828	3955590	8	True				
ANR	3955627	Statement	","	1017:27:25829:25829	3955590	9	True				
ANR	3955628	Statement	mac	1017:29:25831:25833	3955590	10	True				
ANR	3955629	Statement	","	1017:32:25834:25834	3955590	11	True				
ANR	3955630	Statement	(	1017:34:25836:25836	3955590	12	True				
ANR	3955631	Statement	int	1017:35:25837:25839	3955590	13	True				
ANR	3955632	Statement	)	1017:38:25840:25840	3955590	14	True				
ANR	3955633	Statement	s_pid	1017:39:25841:25845	3955590	15	True				
ANR	3955634	Statement	)	1017:44:25846:25846	3955590	16	True				
ANR	3955635	ExpressionStatement		1017:45:25847:25847	3955590	17	True				
ANR	3955636	ReturnType	void		3955590	1					
ANR	3955637	Identifier	VMUniverseMgr :: addMACForVM		3955590	2					
ANR	3955638	ParameterList	"pid_t s_pid , const char * mac"		3955590	3					
ANR	3955639	Parameter	pid_t s_pid	1008:27:25586:25596	3955590	0	True				
ANR	3955640	ParameterType	pid_t		3955590	0					
ANR	3955641	Identifier	s_pid		3955590	1					
ANR	3955642	Parameter	const char * mac	1008:40:25599:25613	3955590	1	True				
ANR	3955643	ParameterType	const char *		3955590	0					
ANR	3955644	Identifier	mac		3955590	1					
ANR	3955645	CFGEntryNode	ENTRY		3955590		True				
ANR	3955646	CFGExitNode	EXIT		3955590		True				
ANR	3955647	Symbol	findVMStarterInfoWithStarterPid		3955590						
ANR	3955648	Symbol	s_pid		3955590						
ANR	3955649	Symbol	mac		3955590						
ANR	3955650	Symbol	info		3955590						
ANR	3955651	Function	VMUniverseMgr :: getMACForVM	1020:0:25852:26032							
ANR	3955652	FunctionDef	VMUniverseMgr :: getMACForVM (pid_t s_pid)		3955651	0					
ANR	3955653	CompoundStatement		1022:0:25904:26032	3955651	0					
ANR	3955654	IdentifierDeclStatement	VMStarterInfo * info = findVMStarterInfoWithStarterPid ( s_pid ) ;	1023:1:25907:25967	3955651	0	True				
ANR	3955655	IdentifierDecl	* info = findVMStarterInfoWithStarterPid ( s_pid )		3955651	0					
ANR	3955656	IdentifierDeclType	VMStarterInfo *		3955651	0					
ANR	3955657	Identifier	info		3955651	1					
ANR	3955658	AssignmentExpression	* info = findVMStarterInfoWithStarterPid ( s_pid )		3955651	2		=			
ANR	3955659	Identifier	info		3955651	0					
ANR	3955660	CallExpression	findVMStarterInfoWithStarterPid ( s_pid )		3955651	1					
ANR	3955661	Callee	findVMStarterInfoWithStarterPid		3955651	0					
ANR	3955662	Identifier	findVMStarterInfoWithStarterPid		3955651	0					
ANR	3955663	ArgumentList	s_pid		3955651	1					
ANR	3955664	Argument	s_pid		3955651	0					
ANR	3955665	Identifier	s_pid		3955651	0					
ANR	3955666	IfStatement	if ( ! info )		3955651	1					
ANR	3955667	Condition	! info	1024:5:25974:25978	3955651	0	True				
ANR	3955668	UnaryOperationExpression	! info		3955651	0					
ANR	3955669	UnaryOperator	!		3955651	0					
ANR	3955670	Identifier	info		3955651	1					
ANR	3955671	CompoundStatement		3:13:77:77	3955651	1					
ANR	3955672	ReturnStatement	return NULL ;	1025:2:25986:25997	3955651	0	True				
ANR	3955673	Identifier	NULL		3955651	0					
ANR	3955674	ReturnStatement	return info -> getMACForVM ( ) ;	1028:1:26004:26030	3955651	2	True				
ANR	3955675	CallExpression	info -> getMACForVM ( )		3955651	0					
ANR	3955676	Callee	info -> getMACForVM		3955651	0					
ANR	3955677	PtrMemberAccess	info -> getMACForVM		3955651	0					
ANR	3955678	Identifier	info		3955651	0					
ANR	3955679	Identifier	getMACForVM		3955651	1					
ANR	3955680	ArgumentList			3955651	1					
ANR	3955681	ReturnType	const char *		3955651	1					
ANR	3955682	Identifier	VMUniverseMgr :: getMACForVM		3955651	2					
ANR	3955683	ParameterList	pid_t s_pid		3955651	3					
ANR	3955684	Parameter	pid_t s_pid	1021:27:25891:25901	3955651	0	True				
ANR	3955685	ParameterType	pid_t		3955651	0					
ANR	3955686	Identifier	s_pid		3955651	1					
ANR	3955687	CFGEntryNode	ENTRY		3955651		True				
ANR	3955688	CFGExitNode	EXIT		3955651		True				
ANR	3955689	Symbol	info -> getMACForVM		3955651						
ANR	3955690	Symbol	NULL		3955651						
ANR	3955691	Symbol	* info		3955651						
ANR	3955692	Symbol	findVMStarterInfoWithStarterPid		3955651						
ANR	3955693	Symbol	s_pid		3955651						
ANR	3955694	Symbol	info		3955651						
ANR	3955695	Function	VMUniverseMgr :: addIPForVM	1031:0:26035:26323							
ANR	3955696	FunctionDef	"VMUniverseMgr :: addIPForVM (pid_t s_pid , const char * ip)"		3955695	0					
ANR	3955697	CompoundStatement		1033:0:26095:26323	3955695	0					
ANR	3955698	IdentifierDeclStatement	VMStarterInfo * info = findVMStarterInfoWithStarterPid ( s_pid ) ;	1034:1:26098:26158	3955695	0	True				
ANR	3955699	IdentifierDecl	* info = findVMStarterInfoWithStarterPid ( s_pid )		3955695	0					
ANR	3955700	IdentifierDeclType	VMStarterInfo *		3955695	0					
ANR	3955701	Identifier	info		3955695	1					
ANR	3955702	AssignmentExpression	* info = findVMStarterInfoWithStarterPid ( s_pid )		3955695	2		=			
ANR	3955703	Identifier	info		3955695	0					
ANR	3955704	CallExpression	findVMStarterInfoWithStarterPid ( s_pid )		3955695	1					
ANR	3955705	Callee	findVMStarterInfoWithStarterPid		3955695	0					
ANR	3955706	Identifier	findVMStarterInfoWithStarterPid		3955695	0					
ANR	3955707	ArgumentList	s_pid		3955695	1					
ANR	3955708	Argument	s_pid		3955695	0					
ANR	3955709	Identifier	s_pid		3955695	0					
ANR	3955710	IfStatement	if ( ! info )		3955695	1					
ANR	3955711	Condition	! info	1035:5:26165:26169	3955695	0	True				
ANR	3955712	UnaryOperationExpression	! info		3955695	0					
ANR	3955713	UnaryOperator	!		3955695	0					
ANR	3955714	Identifier	info		3955695	1					
ANR	3955715	CompoundStatement		3:13:77:77	3955695	1					
ANR	3955716	ReturnStatement	return ;	1036:2:26177:26183	3955695	0	True				
ANR	3955717	ExpressionStatement	info -> addIPForVM ( ip )	1039:1:26190:26210	3955695	2	True				
ANR	3955718	CallExpression	info -> addIPForVM ( ip )		3955695	0					
ANR	3955719	Callee	info -> addIPForVM		3955695	0					
ANR	3955720	PtrMemberAccess	info -> addIPForVM		3955695	0					
ANR	3955721	Identifier	info		3955695	0					
ANR	3955722	Identifier	addIPForVM		3955695	1					
ANR	3955723	ArgumentList	ip		3955695	1					
ANR	3955724	Argument	ip		3955695	0					
ANR	3955725	Identifier	ip		3955695	0					
ANR	3955726	Statement	dprintf	1040:1:26213:26219	3955695	3	True				
ANR	3955727	Statement	(	1040:8:26220:26220	3955695	4	True				
ANR	3955728	Statement	D_FULLDEBUG	1040:9:26221:26231	3955695	5	True				
ANR	3955729	Statement	","	1040:20:26232:26232	3955695	6	True				
ANR	3955730	Statement	"""In VMUniverseMgr::addIPForVM, ip[%s] is """	1040:22:26234:26275	3955695	7	True				
ANR	3955731	Statement	"""added to Starter[%d]\\n"""	1041:3:26280:26303	3955695	8	True				
ANR	3955732	Statement	","	1041:27:26304:26304	3955695	9	True				
ANR	3955733	Statement	ip	1041:29:26306:26307	3955695	10	True				
ANR	3955734	Statement	","	1041:31:26308:26308	3955695	11	True				
ANR	3955735	Statement	(	1041:33:26310:26310	3955695	12	True				
ANR	3955736	Statement	int	1041:34:26311:26313	3955695	13	True				
ANR	3955737	Statement	)	1041:37:26314:26314	3955695	14	True				
ANR	3955738	Statement	s_pid	1041:38:26315:26319	3955695	15	True				
ANR	3955739	Statement	)	1041:43:26320:26320	3955695	16	True				
ANR	3955740	ExpressionStatement		1041:44:26321:26321	3955695	17	True				
ANR	3955741	ReturnType	void		3955695	1					
ANR	3955742	Identifier	VMUniverseMgr :: addIPForVM		3955695	2					
ANR	3955743	ParameterList	"pid_t s_pid , const char * ip"		3955695	3					
ANR	3955744	Parameter	pid_t s_pid	1032:26:26066:26076	3955695	0	True				
ANR	3955745	ParameterType	pid_t		3955695	0					
ANR	3955746	Identifier	s_pid		3955695	1					
ANR	3955747	Parameter	const char * ip	1032:39:26079:26092	3955695	1	True				
ANR	3955748	ParameterType	const char *		3955695	0					
ANR	3955749	Identifier	ip		3955695	1					
ANR	3955750	CFGEntryNode	ENTRY		3955695		True				
ANR	3955751	CFGExitNode	EXIT		3955695		True				
ANR	3955752	Symbol	ip		3955695						
ANR	3955753	Symbol	findVMStarterInfoWithStarterPid		3955695						
ANR	3955754	Symbol	s_pid		3955695						
ANR	3955755	Symbol	info		3955695						
ANR	3955756	Function	VMUniverseMgr :: getIPForVM	1044:0:26326:26504							
ANR	3955757	FunctionDef	VMUniverseMgr :: getIPForVM (pid_t s_pid)		3955756	0					
ANR	3955758	CompoundStatement		1046:0:26377:26504	3955756	0					
ANR	3955759	IdentifierDeclStatement	VMStarterInfo * info = findVMStarterInfoWithStarterPid ( s_pid ) ;	1047:1:26380:26440	3955756	0	True				
ANR	3955760	IdentifierDecl	* info = findVMStarterInfoWithStarterPid ( s_pid )		3955756	0					
ANR	3955761	IdentifierDeclType	VMStarterInfo *		3955756	0					
ANR	3955762	Identifier	info		3955756	1					
ANR	3955763	AssignmentExpression	* info = findVMStarterInfoWithStarterPid ( s_pid )		3955756	2		=			
ANR	3955764	Identifier	info		3955756	0					
ANR	3955765	CallExpression	findVMStarterInfoWithStarterPid ( s_pid )		3955756	1					
ANR	3955766	Callee	findVMStarterInfoWithStarterPid		3955756	0					
ANR	3955767	Identifier	findVMStarterInfoWithStarterPid		3955756	0					
ANR	3955768	ArgumentList	s_pid		3955756	1					
ANR	3955769	Argument	s_pid		3955756	0					
ANR	3955770	Identifier	s_pid		3955756	0					
ANR	3955771	IfStatement	if ( ! info )		3955756	1					
ANR	3955772	Condition	! info	1048:5:26447:26451	3955756	0	True				
ANR	3955773	UnaryOperationExpression	! info		3955756	0					
ANR	3955774	UnaryOperator	!		3955756	0					
ANR	3955775	Identifier	info		3955756	1					
ANR	3955776	CompoundStatement		3:13:77:77	3955756	1					
ANR	3955777	ReturnStatement	return NULL ;	1049:2:26459:26470	3955756	0	True				
ANR	3955778	Identifier	NULL		3955756	0					
ANR	3955779	ReturnStatement	return info -> getIPForVM ( ) ;	1052:1:26477:26502	3955756	2	True				
ANR	3955780	CallExpression	info -> getIPForVM ( )		3955756	0					
ANR	3955781	Callee	info -> getIPForVM		3955756	0					
ANR	3955782	PtrMemberAccess	info -> getIPForVM		3955756	0					
ANR	3955783	Identifier	info		3955756	0					
ANR	3955784	Identifier	getIPForVM		3955756	1					
ANR	3955785	ArgumentList			3955756	1					
ANR	3955786	ReturnType	const char *		3955756	1					
ANR	3955787	Identifier	VMUniverseMgr :: getIPForVM		3955756	2					
ANR	3955788	ParameterList	pid_t s_pid		3955756	3					
ANR	3955789	Parameter	pid_t s_pid	1045:26:26364:26374	3955756	0	True				
ANR	3955790	ParameterType	pid_t		3955756	0					
ANR	3955791	Identifier	s_pid		3955756	1					
ANR	3955792	CFGEntryNode	ENTRY		3955756		True				
ANR	3955793	CFGExitNode	EXIT		3955756		True				
ANR	3955794	Symbol	info -> getIPForVM		3955756						
ANR	3955795	Symbol	NULL		3955756						
ANR	3955796	Symbol	* info		3955756						
ANR	3955797	Symbol	findVMStarterInfoWithStarterPid		3955756						
ANR	3955798	Symbol	s_pid		3955756						
ANR	3955799	Symbol	info		3955756						
ANR	3955800	Function	VMUniverseMgr :: publishVMInfo	1055:0:26507:26744							
ANR	3955801	FunctionDef	"VMUniverseMgr :: publishVMInfo (pid_t s_pid , ClassAd * ad , amask_t mask)"		3955800	0					
ANR	3955802	CompoundStatement		1057:0:26582:26744	3955800	0					
ANR	3955803	IfStatement	if ( ! ad )		3955800	0					
ANR	3955804	Condition	! ad	1058:5:26589:26591	3955800	0	True				
ANR	3955805	UnaryOperationExpression	! ad		3955800	0					
ANR	3955806	UnaryOperator	!		3955800	0					
ANR	3955807	Identifier	ad		3955800	1					
ANR	3955808	CompoundStatement		2:11:12:12	3955800	1					
ANR	3955809	ReturnStatement	return ;	1059:2:26599:26605	3955800	0	True				
ANR	3955810	IdentifierDeclStatement	VMStarterInfo * info = findVMStarterInfoWithStarterPid ( s_pid ) ;	1062:1:26612:26672	3955800	1	True				
ANR	3955811	IdentifierDecl	* info = findVMStarterInfoWithStarterPid ( s_pid )		3955800	0					
ANR	3955812	IdentifierDeclType	VMStarterInfo *		3955800	0					
ANR	3955813	Identifier	info		3955800	1					
ANR	3955814	AssignmentExpression	* info = findVMStarterInfoWithStarterPid ( s_pid )		3955800	2		=			
ANR	3955815	Identifier	info		3955800	0					
ANR	3955816	CallExpression	findVMStarterInfoWithStarterPid ( s_pid )		3955800	1					
ANR	3955817	Callee	findVMStarterInfoWithStarterPid		3955800	0					
ANR	3955818	Identifier	findVMStarterInfoWithStarterPid		3955800	0					
ANR	3955819	ArgumentList	s_pid		3955800	1					
ANR	3955820	Argument	s_pid		3955800	0					
ANR	3955821	Identifier	s_pid		3955800	0					
ANR	3955822	IfStatement	if ( ! info )		3955800	2					
ANR	3955823	Condition	! info	1063:5:26679:26683	3955800	0	True				
ANR	3955824	UnaryOperationExpression	! info		3955800	0					
ANR	3955825	UnaryOperator	!		3955800	0					
ANR	3955826	Identifier	info		3955800	1					
ANR	3955827	CompoundStatement		7:13:104:104	3955800	1					
ANR	3955828	ReturnStatement	return ;	1064:2:26691:26697	3955800	0	True				
ANR	3955829	ExpressionStatement	"info -> publishVMInfo ( ad , mask )"	1067:1:26704:26733	3955800	3	True				
ANR	3955830	CallExpression	"info -> publishVMInfo ( ad , mask )"		3955800	0					
ANR	3955831	Callee	info -> publishVMInfo		3955800	0					
ANR	3955832	PtrMemberAccess	info -> publishVMInfo		3955800	0					
ANR	3955833	Identifier	info		3955800	0					
ANR	3955834	Identifier	publishVMInfo		3955800	1					
ANR	3955835	ArgumentList	ad		3955800	1					
ANR	3955836	Argument	ad		3955800	0					
ANR	3955837	Identifier	ad		3955800	0					
ANR	3955838	Argument	mask		3955800	1					
ANR	3955839	Identifier	mask		3955800	0					
ANR	3955840	ReturnStatement	return ;	1068:1:26736:26742	3955800	4	True				
ANR	3955841	ReturnType	void		3955800	1					
ANR	3955842	Identifier	VMUniverseMgr :: publishVMInfo		3955800	2					
ANR	3955843	ParameterList	"pid_t s_pid , ClassAd * ad , amask_t mask"		3955800	3					
ANR	3955844	Parameter	pid_t s_pid	1056:29:26541:26551	3955800	0	True				
ANR	3955845	ParameterType	pid_t		3955800	0					
ANR	3955846	Identifier	s_pid		3955800	1					
ANR	3955847	Parameter	ClassAd * ad	1056:42:26554:26564	3955800	1	True				
ANR	3955848	ParameterType	ClassAd *		3955800	0					
ANR	3955849	Identifier	ad		3955800	1					
ANR	3955850	Parameter	amask_t mask	1056:55:26567:26578	3955800	2	True				
ANR	3955851	ParameterType	amask_t		3955800	0					
ANR	3955852	Identifier	mask		3955800	1					
ANR	3955853	CFGEntryNode	ENTRY		3955800		True				
ANR	3955854	CFGExitNode	EXIT		3955800		True				
ANR	3955855	Symbol	ad		3955800						
ANR	3955856	Symbol	findVMStarterInfoWithStarterPid		3955800						
ANR	3955857	Symbol	s_pid		3955800						
ANR	3955858	Symbol	mask		3955800						
ANR	3955859	Symbol	info		3955800						
