command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	727149	File	data/converged/CVE-2011-4930_htcondor/classad.cpp								
ANR	727150	DeclStmt									
ANR	727151	Decl							void	void ( char * )	to_lower
ANR	727152	DeclStmt									
ANR	727153	Decl							bool	bool	_useOldClassAdSemantics
ANR	727154	DeclStmt									
ANR	727155	Decl							string	string	CondorErrMsg
ANR	727156	DeclStmt									
ANR	727157	Decl							int	int	CondorErrno
ANR	727158	Function	ClassAdLibraryVersion	43:0:1503:1685							
ANR	727159	FunctionDef	"ClassAdLibraryVersion (int & major , int & minor , int & patch)"		727158	0					
ANR	727160	CompoundStatement		44:0:1566:1685	727158	0					
ANR	727161	ExpressionStatement	major = CLASSAD_VERSION_MAJOR	45:4:1572:1601	727158	0	True				
ANR	727162	AssignmentExpression	major = CLASSAD_VERSION_MAJOR		727158	0		=			
ANR	727163	Identifier	major		727158	0					
ANR	727164	Identifier	CLASSAD_VERSION_MAJOR		727158	1					
ANR	727165	ExpressionStatement	minor = CLASSAD_VERSION_MINOR	46:4:1607:1636	727158	1	True				
ANR	727166	AssignmentExpression	minor = CLASSAD_VERSION_MINOR		727158	0		=			
ANR	727167	Identifier	minor		727158	0					
ANR	727168	Identifier	CLASSAD_VERSION_MINOR		727158	1					
ANR	727169	ExpressionStatement	patch = CLASSAD_VERSION_PATCH	47:4:1642:1671	727158	2	True				
ANR	727170	AssignmentExpression	patch = CLASSAD_VERSION_PATCH		727158	0		=			
ANR	727171	Identifier	patch		727158	0					
ANR	727172	Identifier	CLASSAD_VERSION_PATCH		727158	1					
ANR	727173	ReturnStatement	return ;	48:4:1677:1683	727158	3	True				
ANR	727174	ReturnType	void		727158	1					
ANR	727175	Identifier	ClassAdLibraryVersion		727158	2					
ANR	727176	ParameterList	"int & major , int & minor , int & patch"		727158	3					
ANR	727177	Parameter	int & major	43:27:1530:1539	727158	0	True				
ANR	727178	ParameterType	int &		727158	0					
ANR	727179	Identifier	major		727158	1					
ANR	727180	Parameter	int & minor	43:39:1542:1551	727158	1	True				
ANR	727181	ParameterType	int &		727158	0					
ANR	727182	Identifier	minor		727158	1					
ANR	727183	Parameter	int & patch	43:51:1554:1563	727158	2	True				
ANR	727184	ParameterType	int &		727158	0					
ANR	727185	Identifier	patch		727158	1					
ANR	727186	CFGEntryNode	ENTRY		727158		True				
ANR	727187	CFGExitNode	EXIT		727158		True				
ANR	727188	Symbol	patch		727158						
ANR	727189	Symbol	major		727158						
ANR	727190	Symbol	minor		727158						
ANR	727191	Symbol	CLASSAD_VERSION_MAJOR		727158						
ANR	727192	Symbol	CLASSAD_VERSION_MINOR		727158						
ANR	727193	Symbol	CLASSAD_VERSION_PATCH		727158						
ANR	727194	Function	ClassAdLibraryVersion	51:0:1688:1791							
ANR	727195	FunctionDef	ClassAdLibraryVersion (string & version_string)		727194	0					
ANR	727196	CompoundStatement		52:0:1739:1791	727194	0					
ANR	727197	ExpressionStatement	version_string = CLASSAD_VERSION	53:4:1745:1777	727194	0	True				
ANR	727198	AssignmentExpression	version_string = CLASSAD_VERSION		727194	0		=			
ANR	727199	Identifier	version_string		727194	0					
ANR	727200	Identifier	CLASSAD_VERSION		727194	1					
ANR	727201	ReturnStatement	return ;	54:4:1783:1789	727194	1	True				
ANR	727202	ReturnType	void		727194	1					
ANR	727203	Identifier	ClassAdLibraryVersion		727194	2					
ANR	727204	ParameterList	string & version_string		727194	3					
ANR	727205	Parameter	string & version_string	51:27:1715:1736	727194	0	True				
ANR	727206	ParameterType	string &		727194	0					
ANR	727207	Identifier	version_string		727194	1					
ANR	727208	CFGEntryNode	ENTRY		727194		True				
ANR	727209	CFGExitNode	EXIT		727194		True				
ANR	727210	Symbol	version_string		727194						
ANR	727211	Symbol	CLASSAD_VERSION		727194						
ANR	727212	Function	ClassAd :: ClassAd	57:0:1794:1918							
ANR	727213	FunctionDef	ClassAd :: ClassAd ()		727212	0					
ANR	727214	CompoundStatement		59:0:1815:1918	727212	0					
ANR	727215	ExpressionStatement	nodeKind = CLASSAD_NODE	60:1:1818:1841	727212	0	True				
ANR	727216	AssignmentExpression	nodeKind = CLASSAD_NODE		727212	0		=			
ANR	727217	Identifier	nodeKind		727212	0					
ANR	727218	Identifier	CLASSAD_NODE		727212	1					
ANR	727219	ExpressionStatement	EnableDirtyTracking ( )	61:1:1844:1865	727212	1	True				
ANR	727220	CallExpression	EnableDirtyTracking ( )		727212	0					
ANR	727221	Callee	EnableDirtyTracking		727212	0					
ANR	727222	Identifier	EnableDirtyTracking		727212	0					
ANR	727223	ArgumentList			727212	1					
ANR	727224	ExpressionStatement	chained_parent_ad = NULL	62:1:1868:1892	727212	2	True				
ANR	727225	AssignmentExpression	chained_parent_ad = NULL		727212	0		=			
ANR	727226	Identifier	chained_parent_ad		727212	0					
ANR	727227	Identifier	NULL		727212	1					
ANR	727228	ExpressionStatement	alternateScope = NULL	63:1:1895:1916	727212	3	True				
ANR	727229	AssignmentExpression	alternateScope = NULL		727212	0		=			
ANR	727230	Identifier	alternateScope		727212	0					
ANR	727231	Identifier	NULL		727212	1					
ANR	727232	Identifier	ClassAd :: ClassAd		727212	1					
ANR	727233	ParameterList			727212	2					
ANR	727234	CFGEntryNode	ENTRY		727212		True				
ANR	727235	CFGExitNode	EXIT		727212		True				
ANR	727236	Symbol	NULL		727212						
ANR	727237	Symbol	chained_parent_ad		727212						
ANR	727238	Symbol	nodeKind		727212						
ANR	727239	Symbol	CLASSAD_NODE		727212						
ANR	727240	Symbol	alternateScope		727212						
ANR	727241	Function	ClassAd :: ClassAd	67:0:1922:1989							
ANR	727242	FunctionDef	ClassAd :: ClassAd (const ClassAd & ad)		727241	0					
ANR	727243	CompoundStatement		69:0:1960:1989	727241	0					
ANR	727244	ExpressionStatement	CopyFrom ( ad )	70:4:1966:1978	727241	0	True				
ANR	727245	CallExpression	CopyFrom ( ad )		727241	0					
ANR	727246	Callee	CopyFrom		727241	0					
ANR	727247	Identifier	CopyFrom		727241	0					
ANR	727248	ArgumentList	ad		727241	1					
ANR	727249	Argument	ad		727241	0					
ANR	727250	Identifier	ad		727241	0					
ANR	727251	ReturnStatement	return ;	71:1:1981:1987	727241	1	True				
ANR	727252	Identifier	ClassAd :: ClassAd		727241	1					
ANR	727253	ParameterList	const ClassAd & ad		727241	2					
ANR	727254	Parameter	const ClassAd & ad	68:9:1941:1957	727241	0	True				
ANR	727255	ParameterType	const ClassAd &		727241	0					
ANR	727256	Identifier	ad		727241	1					
ANR	727257	CFGEntryNode	ENTRY		727241		True				
ANR	727258	CFGExitNode	EXIT		727241		True				
ANR	727259	Symbol	ad		727241						
ANR	727260	Function	operator =	76:0:2013:2101							
ANR	727261	FunctionDef	operator = (const ClassAd & rhs)		727260	0					
ANR	727262	CompoundStatement		77:0:2043:2101	727260	0					
ANR	727263	IfStatement	if ( this != & rhs )		727260	0					
ANR	727264	Condition	this != & rhs	78:5:2050:2061	727260	0	True				
ANR	727265	EqualityExpression	this != & rhs		727260	0		!=			
ANR	727266	Identifier	this		727260	0					
ANR	727267	UnaryOperationExpression	& rhs		727260	1					
ANR	727268	UnaryOperator	&		727260	0					
ANR	727269	Identifier	rhs		727260	1					
ANR	727270	CompoundStatement		2:19:20:20	727260	1					
ANR	727271	ExpressionStatement	CopyFrom ( rhs )	79:2:2068:2081	727260	0	True				
ANR	727272	CallExpression	CopyFrom ( rhs )		727260	0					
ANR	727273	Callee	CopyFrom		727260	0					
ANR	727274	Identifier	CopyFrom		727260	0					
ANR	727275	ArgumentList	rhs		727260	1					
ANR	727276	Argument	rhs		727260	0					
ANR	727277	Identifier	rhs		727260	0					
ANR	727278	ReturnStatement	return * this ;	81:1:2087:2099	727260	1	True				
ANR	727279	UnaryOperationExpression	* this		727260	0					
ANR	727280	UnaryOperator	*		727260	0					
ANR	727281	Identifier	this		727260	1					
ANR	727282	Identifier	operator =		727260	1					
ANR	727283	ParameterList	const ClassAd & rhs		727260	2					
ANR	727284	Parameter	const ClassAd & rhs	76:10:2023:2040	727260	0	True				
ANR	727285	ParameterType	const ClassAd &		727260	0					
ANR	727286	Identifier	rhs		727260	1					
ANR	727287	CFGEntryNode	ENTRY		727260		True				
ANR	727288	CFGExitNode	EXIT		727260		True				
ANR	727289	Symbol	* this		727260						
ANR	727290	Symbol	& rhs		727260						
ANR	727291	Symbol	this		727260						
ANR	727292	Symbol	rhs		727260						
ANR	727293	Function	ClassAd :: CopyFrom	84:0:2104:2850							
ANR	727294	FunctionDef	ClassAd :: CopyFrom (const ClassAd & ad)		727293	0					
ANR	727295	CompoundStatement		86:0:2149:2850	727293	0					
ANR	727296	IdentifierDeclStatement	AttrList :: const_iterator itr ;	87:1:2152:2180	727293	0	True				
ANR	727297	IdentifierDecl	itr		727293	0					
ANR	727298	IdentifierDeclType	AttrList :: const_iterator		727293	0					
ANR	727299	Identifier	itr		727293	1					
ANR	727300	IdentifierDeclStatement	ExprTree * tree ;	88:1:2183:2202	727293	1	True				
ANR	727301	IdentifierDecl	* tree		727293	0					
ANR	727302	IdentifierDeclType	ExprTree *		727293	0					
ANR	727303	Identifier	tree		727293	1					
ANR	727304	IdentifierDeclStatement	bool succeeded ;	89:1:2205:2242	727293	2	True				
ANR	727305	IdentifierDecl	succeeded		727293	0					
ANR	727306	IdentifierDeclType	bool		727293	0					
ANR	727307	Identifier	succeeded		727293	1					
ANR	727308	ExpressionStatement	succeeded = true	91:4:2249:2265	727293	3	True				
ANR	727309	AssignmentExpression	succeeded = true		727293	0		=			
ANR	727310	Identifier	succeeded		727293	0					
ANR	727311	Identifier	true		727293	1					
ANR	727312	IfStatement	if ( this == & ad )		727293	4					
ANR	727313	Condition	this == & ad	92:5:2272:2282	727293	0	True				
ANR	727314	EqualityExpression	this == & ad		727293	0		==			
ANR	727315	Identifier	this		727293	0					
ANR	727316	UnaryOperationExpression	& ad		727293	1					
ANR	727317	UnaryOperator	&		727293	0					
ANR	727318	Identifier	ad		727293	1					
ANR	727319	CompoundStatement		7:18:135:135	727293	1					
ANR	727320	ExpressionStatement	succeeded = false	93:2:2289:2306	727293	0	True				
ANR	727321	AssignmentExpression	succeeded = false		727293	0		=			
ANR	727322	Identifier	succeeded		727293	0					
ANR	727323	Identifier	false		727293	1					
ANR	727324	ElseStatement	else		727293	0					
ANR	727325	CompoundStatement		9:8:166:166	727293	0					
ANR	727326	ExpressionStatement	Clear ( )	95:2:2320:2328	727293	0	True				
ANR	727327	CallExpression	Clear ( )		727293	0					
ANR	727328	Callee	Clear		727293	0					
ANR	727329	Identifier	Clear		727293	0					
ANR	727330	ArgumentList			727293	1					
ANR	727331	ExpressionStatement	ExprTree :: CopyFrom ( ad )	96:8:2338:2360	727293	1	True				
ANR	727332	CallExpression	ExprTree :: CopyFrom ( ad )		727293	0					
ANR	727333	Callee	ExprTree :: CopyFrom		727293	0					
ANR	727334	Identifier	ExprTree :: CopyFrom		727293	0					
ANR	727335	ArgumentList	ad		727293	1					
ANR	727336	Argument	ad		727293	0					
ANR	727337	Identifier	ad		727293	0					
ANR	727338	ExpressionStatement	chained_parent_ad = ad . chained_parent_ad	97:2:2364:2404	727293	2	True				
ANR	727339	AssignmentExpression	chained_parent_ad = ad . chained_parent_ad		727293	0		=			
ANR	727340	Identifier	chained_parent_ad		727293	0					
ANR	727341	MemberAccess	ad . chained_parent_ad		727293	1					
ANR	727342	Identifier	ad		727293	0					
ANR	727343	Identifier	chained_parent_ad		727293	1					
ANR	727344	ExpressionStatement	alternateScope = ad . alternateScope	98:2:2408:2442	727293	3	True				
ANR	727345	AssignmentExpression	alternateScope = ad . alternateScope		727293	0		=			
ANR	727346	Identifier	alternateScope		727293	0					
ANR	727347	MemberAccess	ad . alternateScope		727293	1					
ANR	727348	Identifier	ad		727293	0					
ANR	727349	Identifier	alternateScope		727293	1					
ANR	727350	ExpressionStatement	DisableDirtyTracking ( )	100:2:2449:2471	727293	4	True				
ANR	727351	CallExpression	DisableDirtyTracking ( )		727293	0					
ANR	727352	Callee	DisableDirtyTracking		727293	0					
ANR	727353	Identifier	DisableDirtyTracking		727293	0					
ANR	727354	ArgumentList			727293	1					
ANR	727355	ForStatement	for ( itr = ad . attrList . begin ( ) ; itr != ad . attrList . end ( ) ; itr ++ )		727293	5					
ANR	727356	ForInit	itr = ad . attrList . begin ( ) ;	101:7:2480:2506	727293	0	True				
ANR	727357	AssignmentExpression	itr = ad . attrList . begin ( )		727293	0		=			
ANR	727358	Identifier	itr		727293	0					
ANR	727359	CallExpression	ad . attrList . begin ( )		727293	1					
ANR	727360	Callee	ad . attrList . begin		727293	0					
ANR	727361	MemberAccess	ad . attrList . begin		727293	0					
ANR	727362	MemberAccess	ad . attrList		727293	0					
ANR	727363	Identifier	ad		727293	0					
ANR	727364	Identifier	attrList		727293	1					
ANR	727365	Identifier	begin		727293	1					
ANR	727366	ArgumentList			727293	1					
ANR	727367	Condition	itr != ad . attrList . end ( )	101:35:2508:2532	727293	1	True				
ANR	727368	EqualityExpression	itr != ad . attrList . end ( )		727293	0		!=			
ANR	727369	Identifier	itr		727293	0					
ANR	727370	CallExpression	ad . attrList . end ( )		727293	1					
ANR	727371	Callee	ad . attrList . end		727293	0					
ANR	727372	MemberAccess	ad . attrList . end		727293	0					
ANR	727373	MemberAccess	ad . attrList		727293	0					
ANR	727374	Identifier	ad		727293	0					
ANR	727375	Identifier	attrList		727293	1					
ANR	727376	Identifier	end		727293	1					
ANR	727377	ArgumentList			727293	1					
ANR	727378	PostIncDecOperationExpression	itr ++	101:62:2535:2539	727293	2	True				
ANR	727379	Identifier	itr		727293	0					
ANR	727380	IncDec	++		727293	1					
ANR	727381	CompoundStatement		16:70:393:393	727293	3					
ANR	727382	IfStatement	if ( ! ( tree = itr -> second -> Copy ( ) ) )		727293	0					
ANR	727383	Condition	! ( tree = itr -> second -> Copy ( ) )	102:7:2552:2583	727293	0	True				
ANR	727384	UnaryOperationExpression	! ( tree = itr -> second -> Copy ( ) )		727293	0					
ANR	727385	UnaryOperator	!		727293	0					
ANR	727386	AssignmentExpression	tree = itr -> second -> Copy ( )		727293	1		=			
ANR	727387	Identifier	tree		727293	0					
ANR	727388	CallExpression	itr -> second -> Copy ( )		727293	1					
ANR	727389	Callee	itr -> second -> Copy		727293	0					
ANR	727390	PtrMemberAccess	itr -> second -> Copy		727293	0					
ANR	727391	PtrMemberAccess	itr -> second		727293	0					
ANR	727392	Identifier	itr		727293	0					
ANR	727393	Identifier	second		727293	1					
ANR	727394	Identifier	Copy		727293	1					
ANR	727395	ArgumentList			727293	1					
ANR	727396	CompoundStatement		17:42:437:437	727293	1					
ANR	727397	ExpressionStatement	Clear ( )	103:4:2593:2601	727293	0	True				
ANR	727398	CallExpression	Clear ( )		727293	0					
ANR	727399	Callee	Clear		727293	0					
ANR	727400	Identifier	Clear		727293	0					
ANR	727401	ArgumentList			727293	1					
ANR	727402	ExpressionStatement	CondorErrno = ERR_MEM_ALLOC_FAILED	104:4:2607:2641	727293	1	True				
ANR	727403	AssignmentExpression	CondorErrno = ERR_MEM_ALLOC_FAILED		727293	0		=			
ANR	727404	Identifier	CondorErrno		727293	0					
ANR	727405	Identifier	ERR_MEM_ALLOC_FAILED		727293	1					
ANR	727406	ExpressionStatement	"CondorErrMsg = """""	105:4:2647:2664	727293	2	True				
ANR	727407	AssignmentExpression	"CondorErrMsg = """""		727293	0		=			
ANR	727408	Identifier	CondorErrMsg		727293	0					
ANR	727409	PrimaryExpression	""""""		727293	1					
ANR	727410	ExpressionStatement	succeeded = false	106:16:2682:2699	727293	3	True				
ANR	727411	AssignmentExpression	succeeded = false		727293	0		=			
ANR	727412	Identifier	succeeded		727293	0					
ANR	727413	Identifier	false		727293	1					
ANR	727414	BreakStatement	break ;	107:16:2717:2722	727293	4	True				
ANR	727415	ExpressionStatement	tree -> SetParentScope ( this )	109:3:2732:2758	727293	1	True				
ANR	727416	CallExpression	tree -> SetParentScope ( this )		727293	0					
ANR	727417	Callee	tree -> SetParentScope		727293	0					
ANR	727418	PtrMemberAccess	tree -> SetParentScope		727293	0					
ANR	727419	Identifier	tree		727293	0					
ANR	727420	Identifier	SetParentScope		727293	1					
ANR	727421	ArgumentList	this		727293	1					
ANR	727422	Argument	this		727293	0					
ANR	727423	Identifier	this		727293	0					
ANR	727424	ExpressionStatement	attrList [ itr -> first ] = tree	110:3:2770:2797	727293	2	True				
ANR	727425	AssignmentExpression	attrList [ itr -> first ] = tree		727293	0		=			
ANR	727426	ArrayIndexing	attrList [ itr -> first ]		727293	0					
ANR	727427	Identifier	attrList		727293	0					
ANR	727428	PtrMemberAccess	itr -> first		727293	1					
ANR	727429	Identifier	itr		727293	0					
ANR	727430	Identifier	first		727293	1					
ANR	727431	Identifier	tree		727293	1					
ANR	727432	ExpressionStatement	EnableDirtyTracking ( )	112:2:2805:2826	727293	6	True				
ANR	727433	CallExpression	EnableDirtyTracking ( )		727293	0					
ANR	727434	Callee	EnableDirtyTracking		727293	0					
ANR	727435	Identifier	EnableDirtyTracking		727293	0					
ANR	727436	ArgumentList			727293	1					
ANR	727437	ReturnStatement	return succeeded ;	114:1:2832:2848	727293	5	True				
ANR	727438	Identifier	succeeded		727293	0					
ANR	727439	ReturnType	bool		727293	1					
ANR	727440	Identifier	ClassAd :: CopyFrom		727293	2					
ANR	727441	ParameterList	const ClassAd & ad		727293	3					
ANR	727442	Parameter	const ClassAd & ad	85:10:2129:2145	727293	0	True				
ANR	727443	ParameterType	const ClassAd &		727293	0					
ANR	727444	Identifier	ad		727293	1					
ANR	727445	CFGEntryNode	ENTRY		727293		True				
ANR	727446	CFGExitNode	EXIT		727293		True				
ANR	727447	Symbol	ad . alternateScope		727293						
ANR	727448	Symbol	& ad		727293						
ANR	727449	Symbol	* itr -> first		727293						
ANR	727450	Symbol	chained_parent_ad		727293						
ANR	727451	Symbol	* itr -> second		727293						
ANR	727452	Symbol	itr -> first		727293						
ANR	727453	Symbol	ad . attrList		727293						
ANR	727454	Symbol	alternateScope		727293						
ANR	727455	Symbol	itr -> second		727293						
ANR	727456	Symbol	itr -> second -> Copy		727293						
ANR	727457	Symbol	ad		727293						
ANR	727458	Symbol	ad . chained_parent_ad		727293						
ANR	727459	Symbol	itr		727293						
ANR	727460	Symbol	ad . attrList . begin		727293						
ANR	727461	Symbol	tree		727293						
ANR	727462	Symbol	this		727293						
ANR	727463	Symbol	false		727293						
ANR	727464	Symbol	ERR_MEM_ALLOC_FAILED		727293						
ANR	727465	Symbol	* itr		727293						
ANR	727466	Symbol	attrList		727293						
ANR	727467	Symbol	CondorErrno		727293						
ANR	727468	Symbol	ad . attrList . end		727293						
ANR	727469	Symbol	CondorErrMsg		727293						
ANR	727470	Symbol	true		727293						
ANR	727471	Symbol	* attrList		727293						
ANR	727472	Symbol	* * itr		727293						
ANR	727473	Symbol	succeeded		727293						
ANR	727474	Function	ClassAd :: UpdateFromChain	117:0:2853:3040							
ANR	727475	FunctionDef	ClassAd :: UpdateFromChain (const ClassAd & ad)		727474	0					
ANR	727476	CompoundStatement		119:0:2905:3040	727474	0					
ANR	727477	IdentifierDeclStatement	ClassAd * parent = ad . chained_parent_ad ;	120:1:2908:2946	727474	0	True				
ANR	727478	IdentifierDecl	* parent = ad . chained_parent_ad		727474	0					
ANR	727479	IdentifierDeclType	ClassAd *		727474	0					
ANR	727480	Identifier	parent		727474	1					
ANR	727481	AssignmentExpression	* parent = ad . chained_parent_ad		727474	2		=			
ANR	727482	Identifier	parent		727474	0					
ANR	727483	MemberAccess	ad . chained_parent_ad		727474	1					
ANR	727484	Identifier	ad		727474	0					
ANR	727485	Identifier	chained_parent_ad		727474	1					
ANR	727486	IfStatement	if ( parent )		727474	1					
ANR	727487	Condition	parent	121:4:2952:2957	727474	0	True				
ANR	727488	Identifier	parent		727474	0					
ANR	727489	CompoundStatement		3:12:54:54	727474	1					
ANR	727490	IfStatement	if ( ! UpdateFromChain ( * parent ) )		727474	0					
ANR	727491	Condition	! UpdateFromChain ( * parent )	122:5:2967:2991	727474	0	True				
ANR	727492	UnaryOperationExpression	! UpdateFromChain ( * parent )		727474	0					
ANR	727493	UnaryOperator	!		727474	0					
ANR	727494	CallExpression	UpdateFromChain ( * parent )		727474	1					
ANR	727495	Callee	UpdateFromChain		727474	0					
ANR	727496	Identifier	UpdateFromChain		727474	0					
ANR	727497	ArgumentList	* parent		727474	1					
ANR	727498	Argument	* parent		727474	0					
ANR	727499	UnaryOperationExpression	* parent		727474	0					
ANR	727500	UnaryOperator	*		727474	0					
ANR	727501	Identifier	parent		727474	1					
ANR	727502	CompoundStatement		4:32:88:88	727474	1					
ANR	727503	ReturnStatement	return false ;	123:3:2999:3011	727474	0	True				
ANR	727504	Identifier	false		727474	0					
ANR	727505	ReturnStatement	return Update ( ad ) ;	126:1:3021:3038	727474	2	True				
ANR	727506	CallExpression	Update ( ad )		727474	0					
ANR	727507	Callee	Update		727474	0					
ANR	727508	Identifier	Update		727474	0					
ANR	727509	ArgumentList	ad		727474	1					
ANR	727510	Argument	ad		727474	0					
ANR	727511	Identifier	ad		727474	0					
ANR	727512	ReturnType	bool		727474	1					
ANR	727513	Identifier	ClassAd :: UpdateFromChain		727474	2					
ANR	727514	ParameterList	const ClassAd & ad		727474	3					
ANR	727515	Parameter	const ClassAd & ad	118:17:2885:2901	727474	0	True				
ANR	727516	ParameterType	const ClassAd &		727474	0					
ANR	727517	Identifier	ad		727474	1					
ANR	727518	CFGEntryNode	ENTRY		727474		True				
ANR	727519	CFGExitNode	EXIT		727474		True				
ANR	727520	Symbol	parent		727474						
ANR	727521	Symbol	UpdateFromChain		727474						
ANR	727522	Symbol	ad		727474						
ANR	727523	Symbol	* parent		727474						
ANR	727524	Symbol	ad . chained_parent_ad		727474						
ANR	727525	Symbol	false		727474						
ANR	727526	Symbol	Update		727474						
ANR	727527	Function	ClassAd :: CopyFromChain	129:0:3043:3193							
ANR	727528	FunctionDef	ClassAd :: CopyFromChain (const ClassAd & ad)		727527	0					
ANR	727529	CompoundStatement		131:0:3093:3193	727527	0					
ANR	727530	IfStatement	if ( this == & ad )		727527	0					
ANR	727531	Condition	this == & ad	132:5:3100:3110	727527	0	True				
ANR	727532	EqualityExpression	this == & ad		727527	0		==			
ANR	727533	Identifier	this		727527	0					
ANR	727534	UnaryOperationExpression	& ad		727527	1					
ANR	727535	UnaryOperator	&		727527	0					
ANR	727536	Identifier	ad		727527	1					
ANR	727537	ReturnStatement	return false ;	132:18:3113:3125	727527	1	True				
ANR	727538	Identifier	false		727527	0					
ANR	727539	ExpressionStatement	Clear ( )	134:1:3129:3137	727527	1	True				
ANR	727540	CallExpression	Clear ( )		727527	0					
ANR	727541	Callee	Clear		727527	0					
ANR	727542	Identifier	Clear		727527	0					
ANR	727543	ArgumentList			727527	1					
ANR	727544	ExpressionStatement	ExprTree :: CopyFrom ( ad )	135:1:3140:3162	727527	2	True				
ANR	727545	CallExpression	ExprTree :: CopyFrom ( ad )		727527	0					
ANR	727546	Callee	ExprTree :: CopyFrom		727527	0					
ANR	727547	Identifier	ExprTree :: CopyFrom		727527	0					
ANR	727548	ArgumentList	ad		727527	1					
ANR	727549	Argument	ad		727527	0					
ANR	727550	Identifier	ad		727527	0					
ANR	727551	ReturnStatement	return UpdateFromChain ( ad ) ;	136:1:3165:3191	727527	3	True				
ANR	727552	CallExpression	UpdateFromChain ( ad )		727527	0					
ANR	727553	Callee	UpdateFromChain		727527	0					
ANR	727554	Identifier	UpdateFromChain		727527	0					
ANR	727555	ArgumentList	ad		727527	1					
ANR	727556	Argument	ad		727527	0					
ANR	727557	Identifier	ad		727527	0					
ANR	727558	ReturnType	bool		727527	1					
ANR	727559	Identifier	ClassAd :: CopyFromChain		727527	2					
ANR	727560	ParameterList	const ClassAd & ad		727527	3					
ANR	727561	Parameter	const ClassAd & ad	130:15:3073:3089	727527	0	True				
ANR	727562	ParameterType	const ClassAd &		727527	0					
ANR	727563	Identifier	ad		727527	1					
ANR	727564	CFGEntryNode	ENTRY		727527		True				
ANR	727565	CFGExitNode	EXIT		727527		True				
ANR	727566	Symbol	UpdateFromChain		727527						
ANR	727567	Symbol	ad		727527						
ANR	727568	Symbol	this		727527						
ANR	727569	Symbol	false		727527						
ANR	727570	Symbol	& ad		727527						
ANR	727571	Function	ClassAd :: SameAs	139:0:3196:4215							
ANR	727572	FunctionDef	ClassAd :: SameAs (const ExprTree * tree)		727571	0					
ANR	727573	CompoundStatement		141:0:3246:4215	727571	0					
ANR	727574	IdentifierDeclStatement	bool is_same ;	142:4:3252:3264	727571	0	True				
ANR	727575	IdentifierDecl	is_same		727571	0					
ANR	727576	IdentifierDeclType	bool		727571	0					
ANR	727577	Identifier	is_same		727571	1					
ANR	727578	IfStatement	if ( this == tree )		727571	1					
ANR	727579	Condition	this == tree	144:8:3275:3286	727571	0	True				
ANR	727580	EqualityExpression	this == tree		727571	0		==			
ANR	727581	Identifier	this		727571	0					
ANR	727582	Identifier	tree		727571	1					
ANR	727583	CompoundStatement		4:22:42:42	727571	1					
ANR	727584	ExpressionStatement	is_same = true	145:8:3299:3313	727571	0	True				
ANR	727585	AssignmentExpression	is_same = true		727571	0		=			
ANR	727586	Identifier	is_same		727571	0					
ANR	727587	Identifier	true		727571	1					
ANR	727588	ElseStatement	else		727571	0					
ANR	727589	IfStatement	if ( tree -> GetKind ( ) != CLASSAD_NODE )		727571	0					
ANR	727590	Condition	tree -> GetKind ( ) != CLASSAD_NODE	146:14:3329:3359	727571	0	True				
ANR	727591	EqualityExpression	tree -> GetKind ( ) != CLASSAD_NODE		727571	0		!=			
ANR	727592	CallExpression	tree -> GetKind ( )		727571	0					
ANR	727593	Callee	tree -> GetKind		727571	0					
ANR	727594	PtrMemberAccess	tree -> GetKind		727571	0					
ANR	727595	Identifier	tree		727571	0					
ANR	727596	Identifier	GetKind		727571	1					
ANR	727597	ArgumentList			727571	1					
ANR	727598	Identifier	CLASSAD_NODE		727571	1					
ANR	727599	CompoundStatement		6:47:115:115	727571	1					
ANR	727600	ExpressionStatement	is_same = false	147:8:3372:3387	727571	0	True				
ANR	727601	AssignmentExpression	is_same = false		727571	0		=			
ANR	727602	Identifier	is_same		727571	0					
ANR	727603	Identifier	false		727571	1					
ANR	727604	ElseStatement	else		727571	0					
ANR	727605	CompoundStatement		9:7:161:189	727571	0					
ANR	727606	IdentifierDeclStatement	const ClassAd * other_classad ;	149:7:3408:3436	727571	0	True				
ANR	727607	IdentifierDecl	* other_classad		727571	0					
ANR	727608	IdentifierDeclType	const ClassAd *		727571	0					
ANR	727609	Identifier	other_classad		727571	1					
ANR	727610	ExpressionStatement	other_classad = ( const ClassAd * ) tree	151:7:3446:3484	727571	1	True				
ANR	727611	AssignmentExpression	other_classad = ( const ClassAd * ) tree		727571	0		=			
ANR	727612	Identifier	other_classad		727571	0					
ANR	727613	CastExpression	( const ClassAd * ) tree		727571	1					
ANR	727614	CastTarget	const ClassAd *		727571	0					
ANR	727615	Identifier	tree		727571	1					
ANR	727616	IfStatement	if ( attrList . size ( ) != other_classad -> attrList . size ( ) )		727571	2					
ANR	727617	Condition	attrList . size ( ) != other_classad -> attrList . size ( )	153:11:3498:3546	727571	0	True				
ANR	727618	EqualityExpression	attrList . size ( ) != other_classad -> attrList . size ( )		727571	0		!=			
ANR	727619	CallExpression	attrList . size ( )		727571	0					
ANR	727620	Callee	attrList . size		727571	0					
ANR	727621	MemberAccess	attrList . size		727571	0					
ANR	727622	Identifier	attrList		727571	0					
ANR	727623	Identifier	size		727571	1					
ANR	727624	ArgumentList			727571	1					
ANR	727625	CallExpression	other_classad -> attrList . size ( )		727571	1					
ANR	727626	Callee	other_classad -> attrList . size		727571	0					
ANR	727627	MemberAccess	other_classad -> attrList . size		727571	0					
ANR	727628	PtrMemberAccess	other_classad -> attrList		727571	0					
ANR	727629	Identifier	other_classad		727571	0					
ANR	727630	Identifier	attrList		727571	1					
ANR	727631	Identifier	size		727571	1					
ANR	727632	ArgumentList			727571	1					
ANR	727633	CompoundStatement		13:62:302:302	727571	1					
ANR	727634	ExpressionStatement	is_same = false	154:11:3562:3577	727571	0	True				
ANR	727635	AssignmentExpression	is_same = false		727571	0		=			
ANR	727636	Identifier	is_same		727571	0					
ANR	727637	Identifier	false		727571	1					
ANR	727638	ElseStatement	else		727571	0					
ANR	727639	CompoundStatement		18:11:398:426	727571	0					
ANR	727640	ExpressionStatement	is_same = true	156:11:3606:3620	727571	0	True				
ANR	727641	AssignmentExpression	is_same = true		727571	0		=			
ANR	727642	Identifier	is_same		727571	0					
ANR	727643	Identifier	true		727571	1					
ANR	727644	IdentifierDeclStatement	AttrList :: const_iterator itr ;	158:11:3645:3673	727571	1	True				
ANR	727645	IdentifierDecl	itr		727571	0					
ANR	727646	IdentifierDeclType	AttrList :: const_iterator		727571	0					
ANR	727647	Identifier	itr		727571	1					
ANR	727648	ForStatement	for ( itr = attrList . begin ( ) ; itr != attrList . end ( ) ; itr ++ )		727571	2					
ANR	727649	ForInit	itr = attrList . begin ( ) ;	159:16:3691:3713	727571	0	True				
ANR	727650	AssignmentExpression	itr = attrList . begin ( )		727571	0		=			
ANR	727651	Identifier	itr		727571	0					
ANR	727652	CallExpression	attrList . begin ( )		727571	1					
ANR	727653	Callee	attrList . begin		727571	0					
ANR	727654	MemberAccess	attrList . begin		727571	0					
ANR	727655	Identifier	attrList		727571	0					
ANR	727656	Identifier	begin		727571	1					
ANR	727657	ArgumentList			727571	1					
ANR	727658	Condition	itr != attrList . end ( )	159:40:3715:3735	727571	1	True				
ANR	727659	EqualityExpression	itr != attrList . end ( )		727571	0		!=			
ANR	727660	Identifier	itr		727571	0					
ANR	727661	CallExpression	attrList . end ( )		727571	1					
ANR	727662	Callee	attrList . end		727571	0					
ANR	727663	MemberAccess	attrList . end		727571	0					
ANR	727664	Identifier	attrList		727571	0					
ANR	727665	Identifier	end		727571	1					
ANR	727666	ArgumentList			727571	1					
ANR	727667	PostIncDecOperationExpression	itr ++	159:63:3738:3742	727571	2	True				
ANR	727668	Identifier	itr		727571	0					
ANR	727669	IncDec	++		727571	1					
ANR	727670	CompoundStatement		21:15:551:571	727571	3					
ANR	727671	IdentifierDeclStatement	ExprTree * this_tree ;	160:15:3762:3781	727571	0	True				
ANR	727672	IdentifierDecl	* this_tree		727571	0					
ANR	727673	IdentifierDeclType	ExprTree *		727571	0					
ANR	727674	Identifier	this_tree		727571	1					
ANR	727675	IdentifierDeclStatement	ExprTree * other_tree ;	161:15:3798:3818	727571	1	True				
ANR	727676	IdentifierDecl	* other_tree		727571	0					
ANR	727677	IdentifierDeclType	ExprTree *		727571	0					
ANR	727678	Identifier	other_tree		727571	1					
ANR	727679	ExpressionStatement	this_tree = itr -> second	163:15:3836:3859	727571	2	True				
ANR	727680	AssignmentExpression	this_tree = itr -> second		727571	0		=			
ANR	727681	Identifier	this_tree		727571	0					
ANR	727682	PtrMemberAccess	itr -> second		727571	1					
ANR	727683	Identifier	itr		727571	0					
ANR	727684	Identifier	second		727571	1					
ANR	727685	ExpressionStatement	other_tree = other_classad -> Lookup ( itr -> first )	164:15:3876:3922	727571	3	True				
ANR	727686	AssignmentExpression	other_tree = other_classad -> Lookup ( itr -> first )		727571	0		=			
ANR	727687	Identifier	other_tree		727571	0					
ANR	727688	CallExpression	other_classad -> Lookup ( itr -> first )		727571	1					
ANR	727689	Callee	other_classad -> Lookup		727571	0					
ANR	727690	PtrMemberAccess	other_classad -> Lookup		727571	0					
ANR	727691	Identifier	other_classad		727571	0					
ANR	727692	Identifier	Lookup		727571	1					
ANR	727693	ArgumentList	itr -> first		727571	1					
ANR	727694	Argument	itr -> first		727571	0					
ANR	727695	PtrMemberAccess	itr -> first		727571	0					
ANR	727696	Identifier	itr		727571	0					
ANR	727697	Identifier	first		727571	1					
ANR	727698	IfStatement	if ( other_tree == NULL )		727571	4					
ANR	727699	Condition	other_tree == NULL	165:19:3943:3960	727571	0	True				
ANR	727700	EqualityExpression	other_tree == NULL		727571	0		==			
ANR	727701	Identifier	other_tree		727571	0					
ANR	727702	Identifier	NULL		727571	1					
ANR	727703	CompoundStatement		25:39:716:716	727571	1					
ANR	727704	ExpressionStatement	is_same = false	166:19:3984:3999	727571	0	True				
ANR	727705	AssignmentExpression	is_same = false		727571	0		=			
ANR	727706	Identifier	is_same		727571	0					
ANR	727707	Identifier	false		727571	1					
ANR	727708	BreakStatement	break ;	167:19:4020:4025	727571	1	True				
ANR	727709	ElseStatement	else		727571	0					
ANR	727710	IfStatement	if ( ! this_tree -> SameAs ( other_tree ) )		727571	0					
ANR	727711	Condition	! this_tree -> SameAs ( other_tree )	168:26:4053:4082	727571	0	True				
ANR	727712	UnaryOperationExpression	! this_tree -> SameAs ( other_tree )		727571	0					
ANR	727713	UnaryOperator	!		727571	0					
ANR	727714	CallExpression	this_tree -> SameAs ( other_tree )		727571	1					
ANR	727715	Callee	this_tree -> SameAs		727571	0					
ANR	727716	PtrMemberAccess	this_tree -> SameAs		727571	0					
ANR	727717	Identifier	this_tree		727571	0					
ANR	727718	Identifier	SameAs		727571	1					
ANR	727719	ArgumentList	other_tree		727571	1					
ANR	727720	Argument	other_tree		727571	0					
ANR	727721	Identifier	other_tree		727571	0					
ANR	727722	CompoundStatement		28:58:838:838	727571	1					
ANR	727723	ExpressionStatement	is_same = false	169:19:4106:4121	727571	0	True				
ANR	727724	AssignmentExpression	is_same = false		727571	0		=			
ANR	727725	Identifier	is_same		727571	0					
ANR	727726	Identifier	false		727571	1					
ANR	727727	BreakStatement	break ;	170:19:4142:4147	727571	1	True				
ANR	727728	ReturnStatement	return is_same ;	176:4:4199:4213	727571	2	True				
ANR	727729	Identifier	is_same		727571	0					
ANR	727730	ReturnType	bool		727571	1					
ANR	727731	Identifier	ClassAd :: SameAs		727571	2					
ANR	727732	ParameterList	const ExprTree * tree		727571	3					
ANR	727733	Parameter	const ExprTree * tree	140:7:3218:3237	727571	0	True				
ANR	727734	ParameterType	const ExprTree *		727571	0					
ANR	727735	Identifier	tree		727571	1					
ANR	727736	CFGEntryNode	ENTRY		727571		True				
ANR	727737	CFGExitNode	EXIT		727571		True				
ANR	727738	Symbol	attrList . begin		727571						
ANR	727739	Symbol	this_tree		727571						
ANR	727740	Symbol	is_same		727571						
ANR	727741	Symbol	other_tree		727571						
ANR	727742	Symbol	tree -> GetKind		727571						
ANR	727743	Symbol	this_tree -> SameAs		727571						
ANR	727744	Symbol	other_classad -> Lookup		727571						
ANR	727745	Symbol	itr -> first		727571						
ANR	727746	Symbol	other_classad -> attrList		727571						
ANR	727747	Symbol	CLASSAD_NODE		727571						
ANR	727748	Symbol	itr -> second		727571						
ANR	727749	Symbol	attrList . size		727571						
ANR	727750	Symbol	NULL		727571						
ANR	727751	Symbol	* other_classad		727571						
ANR	727752	Symbol	* this_tree		727571						
ANR	727753	Symbol	itr		727571						
ANR	727754	Symbol	tree		727571						
ANR	727755	Symbol	this		727571						
ANR	727756	Symbol	false		727571						
ANR	727757	Symbol	attrList		727571						
ANR	727758	Symbol	* itr		727571						
ANR	727759	Symbol	* tree		727571						
ANR	727760	Symbol	attrList . end		727571						
ANR	727761	Symbol	other_classad -> attrList . size		727571						
ANR	727762	Symbol	other_classad		727571						
ANR	727763	Symbol	true		727571						
ANR	727764	Function	operator ==	179:0:4218:4301							
ANR	727765	FunctionDef	"operator == (ClassAd & list1 , ClassAd & list2)"		727764	0					
ANR	727766	CompoundStatement		180:0:4266:4301	727764	0					
ANR	727767	ReturnStatement	return list1 . SameAs ( & list2 ) ;	181:4:4272:4299	727764	0	True				
ANR	727768	CallExpression	list1 . SameAs ( & list2 )		727764	0					
ANR	727769	Callee	list1 . SameAs		727764	0					
ANR	727770	MemberAccess	list1 . SameAs		727764	0					
ANR	727771	Identifier	list1		727764	0					
ANR	727772	Identifier	SameAs		727764	1					
ANR	727773	ArgumentList	& list2		727764	1					
ANR	727774	Argument	& list2		727764	0					
ANR	727775	UnaryOperationExpression	& list2		727764	0					
ANR	727776	UnaryOperator	&		727764	0					
ANR	727777	Identifier	list2		727764	1					
ANR	727778	ReturnType	bool		727764	1					
ANR	727779	Identifier	operator ==		727764	2					
ANR	727780	ParameterList	"ClassAd & list1 , ClassAd & list2"		727764	3					
ANR	727781	Parameter	ClassAd & list1	179:16:4234:4247	727764	0	True				
ANR	727782	ParameterType	ClassAd &		727764	0					
ANR	727783	Identifier	list1		727764	1					
ANR	727784	Parameter	ClassAd & list2	179:32:4250:4263	727764	1	True				
ANR	727785	ParameterType	ClassAd &		727764	0					
ANR	727786	Identifier	list2		727764	1					
ANR	727787	CFGEntryNode	ENTRY		727764		True				
ANR	727788	CFGExitNode	EXIT		727764		True				
ANR	727789	Symbol	list1		727764						
ANR	727790	Symbol	& list2		727764						
ANR	727791	Symbol	list1 . SameAs		727764						
ANR	727792	Symbol	list2		727764						
ANR	727793	Function	ClassAd :: ~ClassAd	184:0:4304:4339							
ANR	727794	FunctionDef	ClassAd :: ~ClassAd ()		727793	0					
ANR	727795	CompoundStatement		186:0:4326:4339	727793	0					
ANR	727796	ExpressionStatement	Clear ( )	187:1:4329:4337	727793	0	True				
ANR	727797	CallExpression	Clear ( )		727793	0					
ANR	727798	Callee	Clear		727793	0					
ANR	727799	Identifier	Clear		727793	0					
ANR	727800	ArgumentList			727793	1					
ANR	727801	Identifier	ClassAd :: ~ClassAd		727793	1					
ANR	727802	ParameterList			727793	2					
ANR	727803	CFGEntryNode	ENTRY		727793		True				
ANR	727804	CFGExitNode	EXIT		727793		True				
ANR	727805	Function	ClassAd :: Clear	191:0:4343:4534							
ANR	727806	FunctionDef	ClassAd :: Clear ()		727805	0					
ANR	727807	CompoundStatement		193:0:4367:4534	727805	0					
ANR	727808	ExpressionStatement	Unchain ( )	194:1:4370:4379	727805	0	True				
ANR	727809	CallExpression	Unchain ( )		727805	0					
ANR	727810	Callee	Unchain		727805	0					
ANR	727811	Identifier	Unchain		727805	0					
ANR	727812	ArgumentList			727805	1					
ANR	727813	IdentifierDeclStatement	AttrList :: iterator itr ;	195:1:4382:4404	727805	1	True				
ANR	727814	IdentifierDecl	itr		727805	0					
ANR	727815	IdentifierDeclType	AttrList :: iterator		727805	0					
ANR	727816	Identifier	itr		727805	1					
ANR	727817	ForStatement	for ( itr = attrList . begin ( ) ; itr != attrList . end ( ) ; itr ++ )		727805	2					
ANR	727818	ForInit	itr = attrList . begin ( ) ;	196:6:4412:4435	727805	0	True				
ANR	727819	AssignmentExpression	itr = attrList . begin ( )		727805	0		=			
ANR	727820	Identifier	itr		727805	0					
ANR	727821	CallExpression	attrList . begin ( )		727805	1					
ANR	727822	Callee	attrList . begin		727805	0					
ANR	727823	MemberAccess	attrList . begin		727805	0					
ANR	727824	Identifier	attrList		727805	0					
ANR	727825	Identifier	begin		727805	1					
ANR	727826	ArgumentList			727805	1					
ANR	727827	Condition	itr != attrList . end ( )	196:31:4437:4458	727805	1	True				
ANR	727828	EqualityExpression	itr != attrList . end ( )		727805	0		!=			
ANR	727829	Identifier	itr		727805	0					
ANR	727830	CallExpression	attrList . end ( )		727805	1					
ANR	727831	Callee	attrList . end		727805	0					
ANR	727832	MemberAccess	attrList . end		727805	0					
ANR	727833	Identifier	attrList		727805	0					
ANR	727834	Identifier	end		727805	1					
ANR	727835	ArgumentList			727805	1					
ANR	727836	PostIncDecOperationExpression	itr ++	196:55:4461:4465	727805	2	True				
ANR	727837	Identifier	itr		727805	0					
ANR	727838	IncDec	++		727805	1					
ANR	727839	CompoundStatement		4:63:101:101	727805	3					
ANR	727840	IfStatement	if ( itr -> second )		727805	0					
ANR	727841	Condition	itr -> second	197:6:4477:4487	727805	0	True				
ANR	727842	PtrMemberAccess	itr -> second		727805	0					
ANR	727843	Identifier	itr		727805	0					
ANR	727844	Identifier	second		727805	1					
ANR	727845	Statement	delete	197:20:4491:4496	727805	1	True				
ANR	727846	ExpressionStatement	itr -> second	197:27:4498:4509	727805	1	True				
ANR	727847	PtrMemberAccess	itr -> second		727805	0					
ANR	727848	Identifier	itr		727805	0					
ANR	727849	Identifier	second		727805	1					
ANR	727850	ExpressionStatement	attrList . clear ( )	199:1:4515:4532	727805	3	True				
ANR	727851	CallExpression	attrList . clear ( )		727805	0					
ANR	727852	Callee	attrList . clear		727805	0					
ANR	727853	MemberAccess	attrList . clear		727805	0					
ANR	727854	Identifier	attrList		727805	0					
ANR	727855	Identifier	clear		727805	1					
ANR	727856	ArgumentList			727805	1					
ANR	727857	ReturnType	void		727805	1					
ANR	727858	Identifier	ClassAd :: Clear		727805	2					
ANR	727859	ParameterList			727805	3					
ANR	727860	CFGEntryNode	ENTRY		727805		True				
ANR	727861	CFGExitNode	EXIT		727805		True				
ANR	727862	Symbol	attrList . begin		727805						
ANR	727863	Symbol	attrList . end		727805						
ANR	727864	Symbol	itr		727805						
ANR	727865	Symbol	attrList		727805						
ANR	727866	Symbol	* itr		727805						
ANR	727867	Symbol	itr -> second		727805						
ANR	727868	Function	ClassAd :: MakeClassAd	203:0:4538:5013							
ANR	727869	FunctionDef	"ClassAd :: MakeClassAd (vector < pair < string , ExprTree * > > & attrs)"		727868	0					
ANR	727870	CompoundStatement		205:0:4615:5013	727868	0					
ANR	727871	IdentifierDeclStatement	"vector < pair < string , ExprTree * > > :: iterator itr ;"	206:1:4618:4665	727868	0	True				
ANR	727872	IdentifierDecl	itr		727868	0					
ANR	727873	IdentifierDeclType	"vector < pair < string , ExprTree * > > :: iterator"		727868	0					
ANR	727874	Identifier	itr		727868	1					
ANR	727875	IdentifierDeclStatement	ClassAd * newAd = new ClassAd ( ) ;	207:1:4668:4699	727868	1	True				
ANR	727876	IdentifierDecl	* newAd = new ClassAd ( )		727868	0					
ANR	727877	IdentifierDeclType	ClassAd *		727868	0					
ANR	727878	Identifier	newAd		727868	1					
ANR	727879	AssignmentExpression	* newAd = new ClassAd ( )		727868	2		=			
ANR	727880	Identifier	newAd		727868	0					
ANR	727881	UnaryExpression	new ClassAd ( )		727868	1					
ANR	727882	IfStatement	if ( ! newAd )		727868	2					
ANR	727883	Condition	! newAd	209:5:4707:4712	727868	0	True				
ANR	727884	UnaryOperationExpression	! newAd		727868	0					
ANR	727885	UnaryOperator	!		727868	0					
ANR	727886	Identifier	newAd		727868	1					
ANR	727887	CompoundStatement		5:14:100:100	727868	1					
ANR	727888	ExpressionStatement	CondorErrno = ERR_MEM_ALLOC_FAILED	210:2:4720:4754	727868	0	True				
ANR	727889	AssignmentExpression	CondorErrno = ERR_MEM_ALLOC_FAILED		727868	0		=			
ANR	727890	Identifier	CondorErrno		727868	0					
ANR	727891	Identifier	ERR_MEM_ALLOC_FAILED		727868	1					
ANR	727892	ExpressionStatement	"CondorErrMsg = """""	211:2:4758:4775	727868	1	True				
ANR	727893	AssignmentExpression	"CondorErrMsg = """""		727868	0		=			
ANR	727894	Identifier	CondorErrMsg		727868	0					
ANR	727895	PrimaryExpression	""""""		727868	1					
ANR	727896	ReturnStatement	return ( NULL ) ;	212:2:4779:4793	727868	2	True				
ANR	727897	Identifier	NULL		727868	0					
ANR	727898	ExpressionStatement		213:2:4797:4797	727868	3	True				
ANR	727899	ForStatement	for ( itr = attrs . begin ( ) ; itr != attrs . end ( ) ; itr ++ )		727868	4					
ANR	727900	ForInit	itr = attrs . begin ( ) ;	215:6:4806:4826	727868	0	True				
ANR	727901	AssignmentExpression	itr = attrs . begin ( )		727868	0		=			
ANR	727902	Identifier	itr		727868	0					
ANR	727903	CallExpression	attrs . begin ( )		727868	1					
ANR	727904	Callee	attrs . begin		727868	0					
ANR	727905	MemberAccess	attrs . begin		727868	0					
ANR	727906	Identifier	attrs		727868	0					
ANR	727907	Identifier	begin		727868	1					
ANR	727908	ArgumentList			727868	1					
ANR	727909	Condition	itr != attrs . end ( )	215:28:4828:4846	727868	1	True				
ANR	727910	EqualityExpression	itr != attrs . end ( )		727868	0		!=			
ANR	727911	Identifier	itr		727868	0					
ANR	727912	CallExpression	attrs . end ( )		727868	1					
ANR	727913	Callee	attrs . end		727868	0					
ANR	727914	MemberAccess	attrs . end		727868	0					
ANR	727915	Identifier	attrs		727868	0					
ANR	727916	Identifier	end		727868	1					
ANR	727917	ArgumentList			727868	1					
ANR	727918	PostIncDecOperationExpression	itr ++	215:49:4849:4853	727868	2	True				
ANR	727919	Identifier	itr		727868	0					
ANR	727920	IncDec	++		727868	1					
ANR	727921	CompoundStatement		11:57:241:241	727868	3					
ANR	727922	IfStatement	"if ( ! newAd -> Insert ( itr -> first , itr -> second ) )"		727868	0					
ANR	727923	Condition	"! newAd -> Insert ( itr -> first , itr -> second )"	216:6:4865:4905	727868	0	True				
ANR	727924	UnaryOperationExpression	"! newAd -> Insert ( itr -> first , itr -> second )"		727868	0					
ANR	727925	UnaryOperator	!		727868	0					
ANR	727926	CallExpression	"newAd -> Insert ( itr -> first , itr -> second )"		727868	1					
ANR	727927	Callee	newAd -> Insert		727868	0					
ANR	727928	PtrMemberAccess	newAd -> Insert		727868	0					
ANR	727929	Identifier	newAd		727868	0					
ANR	727930	Identifier	Insert		727868	1					
ANR	727931	ArgumentList	itr -> first		727868	1					
ANR	727932	Argument	itr -> first		727868	0					
ANR	727933	PtrMemberAccess	itr -> first		727868	0					
ANR	727934	Identifier	itr		727868	0					
ANR	727935	Identifier	first		727868	1					
ANR	727936	Argument	itr -> second		727868	1					
ANR	727937	PtrMemberAccess	itr -> second		727868	0					
ANR	727938	Identifier	itr		727868	0					
ANR	727939	Identifier	second		727868	1					
ANR	727940	CompoundStatement		12:50:293:293	727868	1					
ANR	727941	Statement	delete	217:3:4914:4919	727868	0	True				
ANR	727942	ExpressionStatement	newAd	217:10:4921:4926	727868	1	True				
ANR	727943	Identifier	newAd		727868	0					
ANR	727944	ReturnStatement	return ( NULL ) ;	218:3:4931:4945	727868	2	True				
ANR	727945	Identifier	NULL		727868	0					
ANR	727946	ExpressionStatement	"itr -> first = """""	220:2:4953:4968	727868	1	True				
ANR	727947	AssignmentExpression	"itr -> first = """""		727868	0		=			
ANR	727948	PtrMemberAccess	itr -> first		727868	0					
ANR	727949	Identifier	itr		727868	0					
ANR	727950	Identifier	first		727868	1					
ANR	727951	PrimaryExpression	""""""		727868	1					
ANR	727952	ExpressionStatement	itr -> second = NULL	221:2:4972:4990	727868	2	True				
ANR	727953	AssignmentExpression	itr -> second = NULL		727868	0		=			
ANR	727954	PtrMemberAccess	itr -> second		727868	0					
ANR	727955	Identifier	itr		727868	0					
ANR	727956	Identifier	second		727868	1					
ANR	727957	Identifier	NULL		727868	1					
ANR	727958	ReturnStatement	return ( newAd ) ;	223:1:4996:5011	727868	5	True				
ANR	727959	Identifier	newAd		727868	0					
ANR	727960	ReturnType	ClassAd *		727868	1					
ANR	727961	Identifier	ClassAd :: MakeClassAd		727868	2					
ANR	727962	ParameterList	"vector < pair < string , ExprTree * > > & attrs"		727868	3					
ANR	727963	Parameter	"vector < pair < string , ExprTree * > > & attrs"	204:13:4570:4611	727868	0	True				
ANR	727964	ParameterType	"vector < pair < string , ExprTree * > > &"		727868	0					
ANR	727965	Identifier	attrs		727868	1					
ANR	727966	CFGEntryNode	ENTRY		727868		True				
ANR	727967	CFGExitNode	EXIT		727868		True				
ANR	727968	Symbol	NULL		727868						
ANR	727969	Symbol	itr		727868						
ANR	727970	Symbol	ERR_MEM_ALLOC_FAILED		727868						
ANR	727971	Symbol	* itr		727868						
ANR	727972	Symbol	attrs		727868						
ANR	727973	Symbol	CondorErrno		727868						
ANR	727974	Symbol	attrs . begin		727868						
ANR	727975	Symbol	* newAd		727868						
ANR	727976	Symbol	CondorErrMsg		727868						
ANR	727977	Symbol	newAd -> Insert		727868						
ANR	727978	Symbol	itr -> first		727868						
ANR	727979	Symbol	attrs . end		727868						
ANR	727980	Symbol	newAd		727868						
ANR	727981	Symbol	itr -> second		727868						
ANR	727982	Function	ClassAd :: GetComponents	227:0:5017:5300							
ANR	727983	FunctionDef	"ClassAd :: GetComponents (vector < pair < string , ExprTree * > > & attrs)"		727982	0					
ANR	727984	CompoundStatement		229:0:5098:5300	727982	0					
ANR	727985	ExpressionStatement	attrs . clear ( )	230:1:5101:5115	727982	0	True				
ANR	727986	CallExpression	attrs . clear ( )		727982	0					
ANR	727987	Callee	attrs . clear		727982	0					
ANR	727988	MemberAccess	attrs . clear		727982	0					
ANR	727989	Identifier	attrs		727982	0					
ANR	727990	Identifier	clear		727982	1					
ANR	727991	ArgumentList			727982	1					
ANR	727992	ForStatement	for ( AttrList :: const_iterator itr = attrList . begin ( ) ; itr != attrList . end ( ) ; itr ++ )		727982	1					
ANR	727993	ForInit	AttrList :: const_iterator itr = attrList . begin ( ) ;	231:6:5123:5168	727982	0	True				
ANR	727994	IdentifierDeclStatement	AttrList :: const_iterator itr = attrList . begin ( ) ;		727982	0					
ANR	727995	IdentifierDecl	itr = attrList . begin ( )		727982	0					
ANR	727996	IdentifierDeclType	AttrList :: const_iterator		727982	0					
ANR	727997	Identifier	itr		727982	1					
ANR	727998	AssignmentExpression	itr = attrList . begin ( )		727982	2		=			
ANR	727999	Identifier	itr		727982	0					
ANR	728000	CallExpression	attrList . begin ( )		727982	1					
ANR	728001	Callee	attrList . begin		727982	0					
ANR	728002	MemberAccess	attrList . begin		727982	0					
ANR	728003	Identifier	attrList		727982	0					
ANR	728004	Identifier	begin		727982	1					
ANR	728005	ArgumentList			727982	1					
ANR	728006	Condition	itr != attrList . end ( )	231:53:5170:5188	727982	1	True				
ANR	728007	EqualityExpression	itr != attrList . end ( )		727982	0		!=			
ANR	728008	Identifier	itr		727982	0					
ANR	728009	CallExpression	attrList . end ( )		727982	1					
ANR	728010	Callee	attrList . end		727982	0					
ANR	728011	MemberAccess	attrList . end		727982	0					
ANR	728012	Identifier	attrList		727982	0					
ANR	728013	Identifier	end		727982	1					
ANR	728014	ArgumentList			727982	1					
ANR	728015	PostIncDecOperationExpression	itr ++	232:2:5194:5198	727982	2	True				
ANR	728016	Identifier	itr		727982	0					
ANR	728017	IncDec	++		727982	1					
ANR	728018	CompoundStatement		4:10:103:103	727982	3					
ANR	728019	ExpressionStatement	"attrs . push_back ( make_pair ( itr -> first , itr -> second ) )"	234:2:5240:5295	727982	0	True				
ANR	728020	CallExpression	"attrs . push_back ( make_pair ( itr -> first , itr -> second ) )"		727982	0					
ANR	728021	Callee	attrs . push_back		727982	0					
ANR	728022	MemberAccess	attrs . push_back		727982	0					
ANR	728023	Identifier	attrs		727982	0					
ANR	728024	Identifier	push_back		727982	1					
ANR	728025	ArgumentList	"make_pair ( itr -> first , itr -> second )"		727982	1					
ANR	728026	Argument	"make_pair ( itr -> first , itr -> second )"		727982	0					
ANR	728027	CallExpression	"make_pair ( itr -> first , itr -> second )"		727982	0					
ANR	728028	Callee	make_pair		727982	0					
ANR	728029	Identifier	make_pair		727982	0					
ANR	728030	ArgumentList	itr -> first		727982	1					
ANR	728031	Argument	itr -> first		727982	0					
ANR	728032	PtrMemberAccess	itr -> first		727982	0					
ANR	728033	Identifier	itr		727982	0					
ANR	728034	Identifier	first		727982	1					
ANR	728035	Argument	itr -> second		727982	1					
ANR	728036	PtrMemberAccess	itr -> second		727982	0					
ANR	728037	Identifier	itr		727982	0					
ANR	728038	Identifier	second		727982	1					
ANR	728039	ReturnType	void		727982	1					
ANR	728040	Identifier	ClassAd :: GetComponents		727982	2					
ANR	728041	ParameterList	"vector < pair < string , ExprTree * > > & attrs"		727982	3					
ANR	728042	Parameter	"vector < pair < string , ExprTree * > > & attrs"	228:15:5047:5088	727982	0	True				
ANR	728043	ParameterType	"vector < pair < string , ExprTree * > > &"		727982	0					
ANR	728044	Identifier	attrs		727982	1					
ANR	728045	CFGEntryNode	ENTRY		727982		True				
ANR	728046	CFGExitNode	EXIT		727982		True				
ANR	728047	Symbol	attrList . begin		727982						
ANR	728048	Symbol	attrList . end		727982						
ANR	728049	Symbol	make_pair		727982						
ANR	728050	Symbol	itr		727982						
ANR	728051	Symbol	itr -> first		727982						
ANR	728052	Symbol	attrList		727982						
ANR	728053	Symbol	* itr		727982						
ANR	728054	Symbol	attrs		727982						
ANR	728055	Symbol	itr -> second		727982						
ANR	728056	Function	ClassAd :: InsertAttr	240:0:5350:5536							
ANR	728057	FunctionDef	"ClassAd :: InsertAttr (const string & name , int value , Value :: NumberFactor f)"		728056	0					
ANR	728058	CompoundStatement		242:0:5432:5536	728056	0					
ANR	728059	IdentifierDeclStatement	Value val ;	243:1:5435:5444	728056	0	True				
ANR	728060	IdentifierDecl	val		728056	0					
ANR	728061	IdentifierDeclType	Value		728056	0					
ANR	728062	Identifier	val		728056	1					
ANR	728063	ExpressionStatement	val . SetIntegerValue ( value )	244:1:5447:5475	728056	1	True				
ANR	728064	CallExpression	val . SetIntegerValue ( value )		728056	0					
ANR	728065	Callee	val . SetIntegerValue		728056	0					
ANR	728066	MemberAccess	val . SetIntegerValue		728056	0					
ANR	728067	Identifier	val		728056	0					
ANR	728068	Identifier	SetIntegerValue		728056	1					
ANR	728069	ArgumentList	value		728056	1					
ANR	728070	Argument	value		728056	0					
ANR	728071	Identifier	value		728056	0					
ANR	728072	ReturnStatement	"return ( Insert ( name , Literal :: MakeLiteral ( val , f ) ) ) ;"	245:1:5478:5534	728056	2	True				
ANR	728073	CallExpression	"Insert ( name , Literal :: MakeLiteral ( val , f ) )"		728056	0					
ANR	728074	Callee	Insert		728056	0					
ANR	728075	Identifier	Insert		728056	0					
ANR	728076	ArgumentList	name		728056	1					
ANR	728077	Argument	name		728056	0					
ANR	728078	Identifier	name		728056	0					
ANR	728079	Argument	"Literal :: MakeLiteral ( val , f )"		728056	1					
ANR	728080	CallExpression	"Literal :: MakeLiteral ( val , f )"		728056	0					
ANR	728081	Callee	Literal :: MakeLiteral		728056	0					
ANR	728082	Identifier	Literal :: MakeLiteral		728056	0					
ANR	728083	ArgumentList	val		728056	1					
ANR	728084	Argument	val		728056	0					
ANR	728085	Identifier	val		728056	0					
ANR	728086	Argument	f		728056	1					
ANR	728087	Identifier	f		728056	0					
ANR	728088	ReturnType	bool		728056	1					
ANR	728089	Identifier	ClassAd :: InsertAttr		728056	2					
ANR	728090	ParameterList	"const string & name , int value , Value :: NumberFactor f"		728056	3					
ANR	728091	Parameter	const string & name	241:12:5377:5394	728056	0	True				
ANR	728092	ParameterType	const string &		728056	0					
ANR	728093	Identifier	name		728056	1					
ANR	728094	Parameter	int value	241:32:5397:5405	728056	1	True				
ANR	728095	ParameterType	int		728056	0					
ANR	728096	Identifier	value		728056	1					
ANR	728097	Parameter	Value :: NumberFactor f	241:43:5408:5428	728056	2	True				
ANR	728098	ParameterType	Value :: NumberFactor		728056	0					
ANR	728099	Identifier	f		728056	1					
ANR	728100	CFGEntryNode	ENTRY		728056		True				
ANR	728101	CFGExitNode	EXIT		728056		True				
ANR	728102	Symbol	val		728056						
ANR	728103	Symbol	Literal :: MakeLiteral		728056						
ANR	728104	Symbol	f		728056						
ANR	728105	Symbol	name		728056						
ANR	728106	Symbol	Insert		728056						
ANR	728107	Symbol	value		728056						
ANR	728108	Function	ClassAd :: DeepInsertAttr	249:0:5540:5767							
ANR	728109	FunctionDef	"ClassAd :: DeepInsertAttr (ExprTree * scopeExpr , const string & name , int value , Value :: NumberFactor f)"		728108	0					
ANR	728110	CompoundStatement		252:0:5649:5767	728108	0					
ANR	728111	IdentifierDeclStatement	ClassAd * ad = _GetDeepScope ( scopeExpr ) ;	253:1:5652:5692	728108	0	True				
ANR	728112	IdentifierDecl	* ad = _GetDeepScope ( scopeExpr )		728108	0					
ANR	728113	IdentifierDeclType	ClassAd *		728108	0					
ANR	728114	Identifier	ad		728108	1					
ANR	728115	AssignmentExpression	* ad = _GetDeepScope ( scopeExpr )		728108	2		=			
ANR	728116	Identifier	ad		728108	0					
ANR	728117	CallExpression	_GetDeepScope ( scopeExpr )		728108	1					
ANR	728118	Callee	_GetDeepScope		728108	0					
ANR	728119	Identifier	_GetDeepScope		728108	0					
ANR	728120	ArgumentList	scopeExpr		728108	1					
ANR	728121	Argument	scopeExpr		728108	0					
ANR	728122	Identifier	scopeExpr		728108	0					
ANR	728123	IfStatement	if ( ! ad )		728108	1					
ANR	728124	Condition	! ad	254:5:5699:5701	728108	0	True				
ANR	728125	UnaryOperationExpression	! ad		728108	0					
ANR	728126	UnaryOperator	!		728108	0					
ANR	728127	Identifier	ad		728108	1					
ANR	728128	ReturnStatement	return ( false ) ;	254:11:5705:5720	728108	1	True				
ANR	728129	Identifier	false		728108	0					
ANR	728130	ReturnStatement	"return ( ad -> InsertAttr ( name , value , f ) ) ;"	255:1:5723:5765	728108	2	True				
ANR	728131	CallExpression	"ad -> InsertAttr ( name , value , f )"		728108	0					
ANR	728132	Callee	ad -> InsertAttr		728108	0					
ANR	728133	PtrMemberAccess	ad -> InsertAttr		728108	0					
ANR	728134	Identifier	ad		728108	0					
ANR	728135	Identifier	InsertAttr		728108	1					
ANR	728136	ArgumentList	name		728108	1					
ANR	728137	Argument	name		728108	0					
ANR	728138	Identifier	name		728108	0					
ANR	728139	Argument	value		728108	1					
ANR	728140	Identifier	value		728108	0					
ANR	728141	Argument	f		728108	2					
ANR	728142	Identifier	f		728108	0					
ANR	728143	ReturnType	bool		728108	1					
ANR	728144	Identifier	ClassAd :: DeepInsertAttr		728108	2					
ANR	728145	ParameterList	"ExprTree * scopeExpr , const string & name , int value , Value :: NumberFactor f"		728108	3					
ANR	728146	Parameter	ExprTree * scopeExpr	250:16:5571:5589	728108	0	True				
ANR	728147	ParameterType	ExprTree *		728108	0					
ANR	728148	Identifier	scopeExpr		728108	1					
ANR	728149	Parameter	const string & name	250:37:5592:5609	728108	1	True				
ANR	728150	ParameterType	const string &		728108	0					
ANR	728151	Identifier	name		728108	1					
ANR	728152	Parameter	int value	250:57:5612:5620	728108	2	True				
ANR	728153	ParameterType	int		728108	0					
ANR	728154	Identifier	value		728108	1					
ANR	728155	Parameter	Value :: NumberFactor f	251:1:5625:5645	728108	3	True				
ANR	728156	ParameterType	Value :: NumberFactor		728108	0					
ANR	728157	Identifier	f		728108	1					
ANR	728158	CFGEntryNode	ENTRY		728108		True				
ANR	728159	CFGExitNode	EXIT		728108		True				
ANR	728160	Symbol	ad		728108						
ANR	728161	Symbol	ad -> InsertAttr		728108						
ANR	728162	Symbol	f		728108						
ANR	728163	Symbol	name		728108						
ANR	728164	Symbol	false		728108						
ANR	728165	Symbol	* ad		728108						
ANR	728166	Symbol	scopeExpr		728108						
ANR	728167	Symbol	value		728108						
ANR	728168	Symbol	_GetDeepScope		728108						
ANR	728169	Function	ClassAd :: InsertAttr	262:0:5857:6043							
ANR	728170	FunctionDef	"ClassAd :: InsertAttr (const string & name , double value , Value :: NumberFactor f)"		728169	0					
ANR	728171	CompoundStatement		264:0:5942:6043	728169	0					
ANR	728172	IdentifierDeclStatement	Value val ;	265:1:5945:5954	728169	0	True				
ANR	728173	IdentifierDecl	val		728169	0					
ANR	728174	IdentifierDeclType	Value		728169	0					
ANR	728175	Identifier	val		728169	1					
ANR	728176	ExpressionStatement	val . SetRealValue ( value )	266:1:5957:5982	728169	1	True				
ANR	728177	CallExpression	val . SetRealValue ( value )		728169	0					
ANR	728178	Callee	val . SetRealValue		728169	0					
ANR	728179	MemberAccess	val . SetRealValue		728169	0					
ANR	728180	Identifier	val		728169	0					
ANR	728181	Identifier	SetRealValue		728169	1					
ANR	728182	ArgumentList	value		728169	1					
ANR	728183	Argument	value		728169	0					
ANR	728184	Identifier	value		728169	0					
ANR	728185	ReturnStatement	"return ( Insert ( name , Literal :: MakeLiteral ( val , f ) ) ) ;"	267:1:5985:6041	728169	2	True				
ANR	728186	CallExpression	"Insert ( name , Literal :: MakeLiteral ( val , f ) )"		728169	0					
ANR	728187	Callee	Insert		728169	0					
ANR	728188	Identifier	Insert		728169	0					
ANR	728189	ArgumentList	name		728169	1					
ANR	728190	Argument	name		728169	0					
ANR	728191	Identifier	name		728169	0					
ANR	728192	Argument	"Literal :: MakeLiteral ( val , f )"		728169	1					
ANR	728193	CallExpression	"Literal :: MakeLiteral ( val , f )"		728169	0					
ANR	728194	Callee	Literal :: MakeLiteral		728169	0					
ANR	728195	Identifier	Literal :: MakeLiteral		728169	0					
ANR	728196	ArgumentList	val		728169	1					
ANR	728197	Argument	val		728169	0					
ANR	728198	Identifier	val		728169	0					
ANR	728199	Argument	f		728169	1					
ANR	728200	Identifier	f		728169	0					
ANR	728201	ReturnType	bool		728169	1					
ANR	728202	Identifier	ClassAd :: InsertAttr		728169	2					
ANR	728203	ParameterList	"const string & name , double value , Value :: NumberFactor f"		728169	3					
ANR	728204	Parameter	const string & name	263:12:5884:5901	728169	0	True				
ANR	728205	ParameterType	const string &		728169	0					
ANR	728206	Identifier	name		728169	1					
ANR	728207	Parameter	double value	263:32:5904:5915	728169	1	True				
ANR	728208	ParameterType	double		728169	0					
ANR	728209	Identifier	value		728169	1					
ANR	728210	Parameter	Value :: NumberFactor f	263:46:5918:5938	728169	2	True				
ANR	728211	ParameterType	Value :: NumberFactor		728169	0					
ANR	728212	Identifier	f		728169	1					
ANR	728213	CFGEntryNode	ENTRY		728169		True				
ANR	728214	CFGExitNode	EXIT		728169		True				
ANR	728215	Symbol	val		728169						
ANR	728216	Symbol	Literal :: MakeLiteral		728169						
ANR	728217	Symbol	f		728169						
ANR	728218	Symbol	name		728169						
ANR	728219	Symbol	Insert		728169						
ANR	728220	Symbol	value		728169						
ANR	728221	Function	ClassAd :: DeepInsertAttr	271:0:6048:6278							
ANR	728222	FunctionDef	"ClassAd :: DeepInsertAttr (ExprTree * scopeExpr , const string & name , double value , Value :: NumberFactor f)"		728221	0					
ANR	728223	CompoundStatement		274:0:6160:6278	728221	0					
ANR	728224	IdentifierDeclStatement	ClassAd * ad = _GetDeepScope ( scopeExpr ) ;	275:1:6163:6203	728221	0	True				
ANR	728225	IdentifierDecl	* ad = _GetDeepScope ( scopeExpr )		728221	0					
ANR	728226	IdentifierDeclType	ClassAd *		728221	0					
ANR	728227	Identifier	ad		728221	1					
ANR	728228	AssignmentExpression	* ad = _GetDeepScope ( scopeExpr )		728221	2		=			
ANR	728229	Identifier	ad		728221	0					
ANR	728230	CallExpression	_GetDeepScope ( scopeExpr )		728221	1					
ANR	728231	Callee	_GetDeepScope		728221	0					
ANR	728232	Identifier	_GetDeepScope		728221	0					
ANR	728233	ArgumentList	scopeExpr		728221	1					
ANR	728234	Argument	scopeExpr		728221	0					
ANR	728235	Identifier	scopeExpr		728221	0					
ANR	728236	IfStatement	if ( ! ad )		728221	1					
ANR	728237	Condition	! ad	276:5:6210:6212	728221	0	True				
ANR	728238	UnaryOperationExpression	! ad		728221	0					
ANR	728239	UnaryOperator	!		728221	0					
ANR	728240	Identifier	ad		728221	1					
ANR	728241	ReturnStatement	return ( false ) ;	276:11:6216:6231	728221	1	True				
ANR	728242	Identifier	false		728221	0					
ANR	728243	ReturnStatement	"return ( ad -> InsertAttr ( name , value , f ) ) ;"	277:1:6234:6276	728221	2	True				
ANR	728244	CallExpression	"ad -> InsertAttr ( name , value , f )"		728221	0					
ANR	728245	Callee	ad -> InsertAttr		728221	0					
ANR	728246	PtrMemberAccess	ad -> InsertAttr		728221	0					
ANR	728247	Identifier	ad		728221	0					
ANR	728248	Identifier	InsertAttr		728221	1					
ANR	728249	ArgumentList	name		728221	1					
ANR	728250	Argument	name		728221	0					
ANR	728251	Identifier	name		728221	0					
ANR	728252	Argument	value		728221	1					
ANR	728253	Identifier	value		728221	0					
ANR	728254	Argument	f		728221	2					
ANR	728255	Identifier	f		728221	0					
ANR	728256	ReturnType	bool		728221	1					
ANR	728257	Identifier	ClassAd :: DeepInsertAttr		728221	2					
ANR	728258	ParameterList	"ExprTree * scopeExpr , const string & name , double value , Value :: NumberFactor f"		728221	3					
ANR	728259	Parameter	ExprTree * scopeExpr	272:16:6079:6097	728221	0	True				
ANR	728260	ParameterType	ExprTree *		728221	0					
ANR	728261	Identifier	scopeExpr		728221	1					
ANR	728262	Parameter	const string & name	272:37:6100:6117	728221	1	True				
ANR	728263	ParameterType	const string &		728221	0					
ANR	728264	Identifier	name		728221	1					
ANR	728265	Parameter	double value	272:57:6120:6131	728221	2	True				
ANR	728266	ParameterType	double		728221	0					
ANR	728267	Identifier	value		728221	1					
ANR	728268	Parameter	Value :: NumberFactor f	273:1:6136:6156	728221	3	True				
ANR	728269	ParameterType	Value :: NumberFactor		728221	0					
ANR	728270	Identifier	f		728221	1					
ANR	728271	CFGEntryNode	ENTRY		728221		True				
ANR	728272	CFGExitNode	EXIT		728221		True				
ANR	728273	Symbol	ad		728221						
ANR	728274	Symbol	ad -> InsertAttr		728221						
ANR	728275	Symbol	f		728221						
ANR	728276	Symbol	name		728221						
ANR	728277	Symbol	false		728221						
ANR	728278	Symbol	* ad		728221						
ANR	728279	Symbol	scopeExpr		728221						
ANR	728280	Symbol	value		728221						
ANR	728281	Symbol	_GetDeepScope		728221						
ANR	728282	Function	ClassAd :: InsertAttr	284:0:6360:6521							
ANR	728283	FunctionDef	"ClassAd :: InsertAttr (const string & name , bool value)"		728282	0					
ANR	728284	CompoundStatement		286:0:6420:6521	728282	0					
ANR	728285	IdentifierDeclStatement	Value val ;	287:1:6423:6432	728282	0	True				
ANR	728286	IdentifierDecl	val		728282	0					
ANR	728287	IdentifierDeclType	Value		728282	0					
ANR	728288	Identifier	val		728282	1					
ANR	728289	ExpressionStatement	val . SetBooleanValue ( value )	288:1:6435:6463	728282	1	True				
ANR	728290	CallExpression	val . SetBooleanValue ( value )		728282	0					
ANR	728291	Callee	val . SetBooleanValue		728282	0					
ANR	728292	MemberAccess	val . SetBooleanValue		728282	0					
ANR	728293	Identifier	val		728282	0					
ANR	728294	Identifier	SetBooleanValue		728282	1					
ANR	728295	ArgumentList	value		728282	1					
ANR	728296	Argument	value		728282	0					
ANR	728297	Identifier	value		728282	0					
ANR	728298	ReturnStatement	"return ( Insert ( name , Literal :: MakeLiteral ( val ) ) ) ;"	289:1:6466:6519	728282	2	True				
ANR	728299	CallExpression	"Insert ( name , Literal :: MakeLiteral ( val ) )"		728282	0					
ANR	728300	Callee	Insert		728282	0					
ANR	728301	Identifier	Insert		728282	0					
ANR	728302	ArgumentList	name		728282	1					
ANR	728303	Argument	name		728282	0					
ANR	728304	Identifier	name		728282	0					
ANR	728305	Argument	Literal :: MakeLiteral ( val )		728282	1					
ANR	728306	CallExpression	Literal :: MakeLiteral ( val )		728282	0					
ANR	728307	Callee	Literal :: MakeLiteral		728282	0					
ANR	728308	Identifier	Literal :: MakeLiteral		728282	0					
ANR	728309	ArgumentList	val		728282	1					
ANR	728310	Argument	val		728282	0					
ANR	728311	Identifier	val		728282	0					
ANR	728312	ReturnType	bool		728282	1					
ANR	728313	Identifier	ClassAd :: InsertAttr		728282	2					
ANR	728314	ParameterList	"const string & name , bool value"		728282	3					
ANR	728315	Parameter	const string & name	285:12:6387:6404	728282	0	True				
ANR	728316	ParameterType	const string &		728282	0					
ANR	728317	Identifier	name		728282	1					
ANR	728318	Parameter	bool value	285:32:6407:6416	728282	1	True				
ANR	728319	ParameterType	bool		728282	0					
ANR	728320	Identifier	value		728282	1					
ANR	728321	CFGEntryNode	ENTRY		728282		True				
ANR	728322	CFGExitNode	EXIT		728282		True				
ANR	728323	Symbol	val		728282						
ANR	728324	Symbol	Literal :: MakeLiteral		728282						
ANR	728325	Symbol	name		728282						
ANR	728326	Symbol	Insert		728282						
ANR	728327	Symbol	value		728282						
ANR	728328	Function	ClassAd :: DeepInsertAttr	293:0:6525:6725							
ANR	728329	FunctionDef	"ClassAd :: DeepInsertAttr (ExprTree * scopeExpr , const string & name , bool value)"		728328	0					
ANR	728330	CompoundStatement		295:0:6610:6725	728328	0					
ANR	728331	IdentifierDeclStatement	ClassAd * ad = _GetDeepScope ( scopeExpr ) ;	296:1:6613:6653	728328	0	True				
ANR	728332	IdentifierDecl	* ad = _GetDeepScope ( scopeExpr )		728328	0					
ANR	728333	IdentifierDeclType	ClassAd *		728328	0					
ANR	728334	Identifier	ad		728328	1					
ANR	728335	AssignmentExpression	* ad = _GetDeepScope ( scopeExpr )		728328	2		=			
ANR	728336	Identifier	ad		728328	0					
ANR	728337	CallExpression	_GetDeepScope ( scopeExpr )		728328	1					
ANR	728338	Callee	_GetDeepScope		728328	0					
ANR	728339	Identifier	_GetDeepScope		728328	0					
ANR	728340	ArgumentList	scopeExpr		728328	1					
ANR	728341	Argument	scopeExpr		728328	0					
ANR	728342	Identifier	scopeExpr		728328	0					
ANR	728343	IfStatement	if ( ! ad )		728328	1					
ANR	728344	Condition	! ad	297:5:6660:6662	728328	0	True				
ANR	728345	UnaryOperationExpression	! ad		728328	0					
ANR	728346	UnaryOperator	!		728328	0					
ANR	728347	Identifier	ad		728328	1					
ANR	728348	ReturnStatement	return ( false ) ;	297:11:6666:6681	728328	1	True				
ANR	728349	Identifier	false		728328	0					
ANR	728350	ReturnStatement	"return ( ad -> InsertAttr ( name , value ) ) ;"	298:1:6684:6723	728328	2	True				
ANR	728351	CallExpression	"ad -> InsertAttr ( name , value )"		728328	0					
ANR	728352	Callee	ad -> InsertAttr		728328	0					
ANR	728353	PtrMemberAccess	ad -> InsertAttr		728328	0					
ANR	728354	Identifier	ad		728328	0					
ANR	728355	Identifier	InsertAttr		728328	1					
ANR	728356	ArgumentList	name		728328	1					
ANR	728357	Argument	name		728328	0					
ANR	728358	Identifier	name		728328	0					
ANR	728359	Argument	value		728328	1					
ANR	728360	Identifier	value		728328	0					
ANR	728361	ReturnType	bool		728328	1					
ANR	728362	Identifier	ClassAd :: DeepInsertAttr		728328	2					
ANR	728363	ParameterList	"ExprTree * scopeExpr , const string & name , bool value"		728328	3					
ANR	728364	Parameter	ExprTree * scopeExpr	294:16:6556:6574	728328	0	True				
ANR	728365	ParameterType	ExprTree *		728328	0					
ANR	728366	Identifier	scopeExpr		728328	1					
ANR	728367	Parameter	const string & name	294:37:6577:6594	728328	1	True				
ANR	728368	ParameterType	const string &		728328	0					
ANR	728369	Identifier	name		728328	1					
ANR	728370	Parameter	bool value	294:57:6597:6606	728328	2	True				
ANR	728371	ParameterType	bool		728328	0					
ANR	728372	Identifier	value		728328	1					
ANR	728373	CFGEntryNode	ENTRY		728328		True				
ANR	728374	CFGExitNode	EXIT		728328		True				
ANR	728375	Symbol	ad		728328						
ANR	728376	Symbol	ad -> InsertAttr		728328						
ANR	728377	Symbol	name		728328						
ANR	728378	Symbol	false		728328						
ANR	728379	Symbol	* ad		728328						
ANR	728380	Symbol	scopeExpr		728328						
ANR	728381	Symbol	value		728328						
ANR	728382	Symbol	_GetDeepScope		728328						
ANR	728383	Function	ClassAd :: InsertAttr	305:0:6809:7074							
ANR	728384	FunctionDef	"ClassAd :: InsertAttr (const string & name , const char * value)"		728383	0					
ANR	728385	CompoundStatement		307:0:6876:7074	728383	0					
ANR	728386	IdentifierDeclStatement	Value val ;	310:1:6977:6986	728383	0	True				
ANR	728387	IdentifierDecl	val		728383	0					
ANR	728388	IdentifierDeclType	Value		728383	0					
ANR	728389	Identifier	val		728383	1					
ANR	728390	ExpressionStatement	val . SetStringValue ( value )	311:1:6989:7016	728383	1	True				
ANR	728391	CallExpression	val . SetStringValue ( value )		728383	0					
ANR	728392	Callee	val . SetStringValue		728383	0					
ANR	728393	MemberAccess	val . SetStringValue		728383	0					
ANR	728394	Identifier	val		728383	0					
ANR	728395	Identifier	SetStringValue		728383	1					
ANR	728396	ArgumentList	value		728383	1					
ANR	728397	Argument	value		728383	0					
ANR	728398	Identifier	value		728383	0					
ANR	728399	ReturnStatement	"return ( Insert ( name , Literal :: MakeLiteral ( val ) ) ) ;"	312:1:7019:7072	728383	2	True				
ANR	728400	CallExpression	"Insert ( name , Literal :: MakeLiteral ( val ) )"		728383	0					
ANR	728401	Callee	Insert		728383	0					
ANR	728402	Identifier	Insert		728383	0					
ANR	728403	ArgumentList	name		728383	1					
ANR	728404	Argument	name		728383	0					
ANR	728405	Identifier	name		728383	0					
ANR	728406	Argument	Literal :: MakeLiteral ( val )		728383	1					
ANR	728407	CallExpression	Literal :: MakeLiteral ( val )		728383	0					
ANR	728408	Callee	Literal :: MakeLiteral		728383	0					
ANR	728409	Identifier	Literal :: MakeLiteral		728383	0					
ANR	728410	ArgumentList	val		728383	1					
ANR	728411	Argument	val		728383	0					
ANR	728412	Identifier	val		728383	0					
ANR	728413	ReturnType	bool		728383	1					
ANR	728414	Identifier	ClassAd :: InsertAttr		728383	2					
ANR	728415	ParameterList	"const string & name , const char * value"		728383	3					
ANR	728416	Parameter	const string & name	306:12:6836:6853	728383	0	True				
ANR	728417	ParameterType	const string &		728383	0					
ANR	728418	Identifier	name		728383	1					
ANR	728419	Parameter	const char * value	306:32:6856:6872	728383	1	True				
ANR	728420	ParameterType	const char *		728383	0					
ANR	728421	Identifier	value		728383	1					
ANR	728422	CFGEntryNode	ENTRY		728383		True				
ANR	728423	CFGExitNode	EXIT		728383		True				
ANR	728424	Symbol	val		728383						
ANR	728425	Symbol	Literal :: MakeLiteral		728383						
ANR	728426	Symbol	name		728383						
ANR	728427	Symbol	Insert		728383						
ANR	728428	Symbol	value		728383						
ANR	728429	Function	ClassAd :: DeepInsertAttr	315:0:7077:7284							
ANR	728430	FunctionDef	"ClassAd :: DeepInsertAttr (ExprTree * scopeExpr , const string & name , const char * value)"		728429	0					
ANR	728431	CompoundStatement		317:0:7169:7284	728429	0					
ANR	728432	IdentifierDeclStatement	ClassAd * ad = _GetDeepScope ( scopeExpr ) ;	318:1:7172:7212	728429	0	True				
ANR	728433	IdentifierDecl	* ad = _GetDeepScope ( scopeExpr )		728429	0					
ANR	728434	IdentifierDeclType	ClassAd *		728429	0					
ANR	728435	Identifier	ad		728429	1					
ANR	728436	AssignmentExpression	* ad = _GetDeepScope ( scopeExpr )		728429	2		=			
ANR	728437	Identifier	ad		728429	0					
ANR	728438	CallExpression	_GetDeepScope ( scopeExpr )		728429	1					
ANR	728439	Callee	_GetDeepScope		728429	0					
ANR	728440	Identifier	_GetDeepScope		728429	0					
ANR	728441	ArgumentList	scopeExpr		728429	1					
ANR	728442	Argument	scopeExpr		728429	0					
ANR	728443	Identifier	scopeExpr		728429	0					
ANR	728444	IfStatement	if ( ! ad )		728429	1					
ANR	728445	Condition	! ad	319:5:7219:7221	728429	0	True				
ANR	728446	UnaryOperationExpression	! ad		728429	0					
ANR	728447	UnaryOperator	!		728429	0					
ANR	728448	Identifier	ad		728429	1					
ANR	728449	ReturnStatement	return ( false ) ;	319:11:7225:7240	728429	1	True				
ANR	728450	Identifier	false		728429	0					
ANR	728451	ReturnStatement	"return ( ad -> InsertAttr ( name , value ) ) ;"	320:1:7243:7282	728429	2	True				
ANR	728452	CallExpression	"ad -> InsertAttr ( name , value )"		728429	0					
ANR	728453	Callee	ad -> InsertAttr		728429	0					
ANR	728454	PtrMemberAccess	ad -> InsertAttr		728429	0					
ANR	728455	Identifier	ad		728429	0					
ANR	728456	Identifier	InsertAttr		728429	1					
ANR	728457	ArgumentList	name		728429	1					
ANR	728458	Argument	name		728429	0					
ANR	728459	Identifier	name		728429	0					
ANR	728460	Argument	value		728429	1					
ANR	728461	Identifier	value		728429	0					
ANR	728462	ReturnType	bool		728429	1					
ANR	728463	Identifier	ClassAd :: DeepInsertAttr		728429	2					
ANR	728464	ParameterList	"ExprTree * scopeExpr , const string & name , const char * value"		728429	3					
ANR	728465	Parameter	ExprTree * scopeExpr	316:16:7108:7126	728429	0	True				
ANR	728466	ParameterType	ExprTree *		728429	0					
ANR	728467	Identifier	scopeExpr		728429	1					
ANR	728468	Parameter	const string & name	316:37:7129:7146	728429	1	True				
ANR	728469	ParameterType	const string &		728429	0					
ANR	728470	Identifier	name		728429	1					
ANR	728471	Parameter	const char * value	316:57:7149:7165	728429	2	True				
ANR	728472	ParameterType	const char *		728429	0					
ANR	728473	Identifier	value		728429	1					
ANR	728474	CFGEntryNode	ENTRY		728429		True				
ANR	728475	CFGExitNode	EXIT		728429		True				
ANR	728476	Symbol	ad		728429						
ANR	728477	Symbol	ad -> InsertAttr		728429						
ANR	728478	Symbol	name		728429						
ANR	728479	Symbol	false		728429						
ANR	728480	Symbol	* ad		728429						
ANR	728481	Symbol	scopeExpr		728429						
ANR	728482	Symbol	value		728429						
ANR	728483	Symbol	_GetDeepScope		728429						
ANR	728484	Function	ClassAd :: InsertAttr	323:0:7287:7456							
ANR	728485	FunctionDef	"ClassAd :: InsertAttr (const string & name , const string & value)"		728484	0					
ANR	728486	CompoundStatement		325:0:7356:7456	728484	0					
ANR	728487	IdentifierDeclStatement	Value val ;	326:1:7359:7368	728484	0	True				
ANR	728488	IdentifierDecl	val		728484	0					
ANR	728489	IdentifierDeclType	Value		728484	0					
ANR	728490	Identifier	val		728484	1					
ANR	728491	ExpressionStatement	val . SetStringValue ( value )	327:1:7371:7398	728484	1	True				
ANR	728492	CallExpression	val . SetStringValue ( value )		728484	0					
ANR	728493	Callee	val . SetStringValue		728484	0					
ANR	728494	MemberAccess	val . SetStringValue		728484	0					
ANR	728495	Identifier	val		728484	0					
ANR	728496	Identifier	SetStringValue		728484	1					
ANR	728497	ArgumentList	value		728484	1					
ANR	728498	Argument	value		728484	0					
ANR	728499	Identifier	value		728484	0					
ANR	728500	ReturnStatement	"return ( Insert ( name , Literal :: MakeLiteral ( val ) ) ) ;"	328:1:7401:7454	728484	2	True				
ANR	728501	CallExpression	"Insert ( name , Literal :: MakeLiteral ( val ) )"		728484	0					
ANR	728502	Callee	Insert		728484	0					
ANR	728503	Identifier	Insert		728484	0					
ANR	728504	ArgumentList	name		728484	1					
ANR	728505	Argument	name		728484	0					
ANR	728506	Identifier	name		728484	0					
ANR	728507	Argument	Literal :: MakeLiteral ( val )		728484	1					
ANR	728508	CallExpression	Literal :: MakeLiteral ( val )		728484	0					
ANR	728509	Callee	Literal :: MakeLiteral		728484	0					
ANR	728510	Identifier	Literal :: MakeLiteral		728484	0					
ANR	728511	ArgumentList	val		728484	1					
ANR	728512	Argument	val		728484	0					
ANR	728513	Identifier	val		728484	0					
ANR	728514	ReturnType	bool		728484	1					
ANR	728515	Identifier	ClassAd :: InsertAttr		728484	2					
ANR	728516	ParameterList	"const string & name , const string & value"		728484	3					
ANR	728517	Parameter	const string & name	324:12:7314:7331	728484	0	True				
ANR	728518	ParameterType	const string &		728484	0					
ANR	728519	Identifier	name		728484	1					
ANR	728520	Parameter	const string & value	324:32:7334:7352	728484	1	True				
ANR	728521	ParameterType	const string &		728484	0					
ANR	728522	Identifier	value		728484	1					
ANR	728523	CFGEntryNode	ENTRY		728484		True				
ANR	728524	CFGExitNode	EXIT		728484		True				
ANR	728525	Symbol	val		728484						
ANR	728526	Symbol	Literal :: MakeLiteral		728484						
ANR	728527	Symbol	name		728484						
ANR	728528	Symbol	Insert		728484						
ANR	728529	Symbol	value		728484						
ANR	728530	Function	ClassAd :: DeepInsertAttr	332:0:7460:7669							
ANR	728531	FunctionDef	"ClassAd :: DeepInsertAttr (ExprTree * scopeExpr , const string & name , const string & value)"		728530	0					
ANR	728532	CompoundStatement		334:0:7554:7669	728530	0					
ANR	728533	IdentifierDeclStatement	ClassAd * ad = _GetDeepScope ( scopeExpr ) ;	335:1:7557:7597	728530	0	True				
ANR	728534	IdentifierDecl	* ad = _GetDeepScope ( scopeExpr )		728530	0					
ANR	728535	IdentifierDeclType	ClassAd *		728530	0					
ANR	728536	Identifier	ad		728530	1					
ANR	728537	AssignmentExpression	* ad = _GetDeepScope ( scopeExpr )		728530	2		=			
ANR	728538	Identifier	ad		728530	0					
ANR	728539	CallExpression	_GetDeepScope ( scopeExpr )		728530	1					
ANR	728540	Callee	_GetDeepScope		728530	0					
ANR	728541	Identifier	_GetDeepScope		728530	0					
ANR	728542	ArgumentList	scopeExpr		728530	1					
ANR	728543	Argument	scopeExpr		728530	0					
ANR	728544	Identifier	scopeExpr		728530	0					
ANR	728545	IfStatement	if ( ! ad )		728530	1					
ANR	728546	Condition	! ad	336:5:7604:7606	728530	0	True				
ANR	728547	UnaryOperationExpression	! ad		728530	0					
ANR	728548	UnaryOperator	!		728530	0					
ANR	728549	Identifier	ad		728530	1					
ANR	728550	ReturnStatement	return ( false ) ;	336:11:7610:7625	728530	1	True				
ANR	728551	Identifier	false		728530	0					
ANR	728552	ReturnStatement	"return ( ad -> InsertAttr ( name , value ) ) ;"	337:1:7628:7667	728530	2	True				
ANR	728553	CallExpression	"ad -> InsertAttr ( name , value )"		728530	0					
ANR	728554	Callee	ad -> InsertAttr		728530	0					
ANR	728555	PtrMemberAccess	ad -> InsertAttr		728530	0					
ANR	728556	Identifier	ad		728530	0					
ANR	728557	Identifier	InsertAttr		728530	1					
ANR	728558	ArgumentList	name		728530	1					
ANR	728559	Argument	name		728530	0					
ANR	728560	Identifier	name		728530	0					
ANR	728561	Argument	value		728530	1					
ANR	728562	Identifier	value		728530	0					
ANR	728563	ReturnType	bool		728530	1					
ANR	728564	Identifier	ClassAd :: DeepInsertAttr		728530	2					
ANR	728565	ParameterList	"ExprTree * scopeExpr , const string & name , const string & value"		728530	3					
ANR	728566	Parameter	ExprTree * scopeExpr	333:16:7491:7509	728530	0	True				
ANR	728567	ParameterType	ExprTree *		728530	0					
ANR	728568	Identifier	scopeExpr		728530	1					
ANR	728569	Parameter	const string & name	333:37:7512:7529	728530	1	True				
ANR	728570	ParameterType	const string &		728530	0					
ANR	728571	Identifier	name		728530	1					
ANR	728572	Parameter	const string & value	333:57:7532:7550	728530	2	True				
ANR	728573	ParameterType	const string &		728530	0					
ANR	728574	Identifier	value		728530	1					
ANR	728575	CFGEntryNode	ENTRY		728530		True				
ANR	728576	CFGExitNode	EXIT		728530		True				
ANR	728577	Symbol	ad		728530						
ANR	728578	Symbol	ad -> InsertAttr		728530						
ANR	728579	Symbol	name		728530						
ANR	728580	Symbol	false		728530						
ANR	728581	Symbol	* ad		728530						
ANR	728582	Symbol	scopeExpr		728530						
ANR	728583	Symbol	value		728530						
ANR	728584	Symbol	_GetDeepScope		728530						
ANR	728585	Function	ClassAd :: Insert	344:0:7747:8515							
ANR	728586	FunctionDef	"ClassAd :: Insert (const string & name , ExprTree * tree)"		728585	0					
ANR	728587	CompoundStatement		346:0:7807:8515	728585	0					
ANR	728588	IfStatement	"if ( name == """" )"		728585	0					
ANR	728589	Condition	"name == """""	348:5:7833:7842	728585	0	True				
ANR	728590	EqualityExpression	"name == """""		728585	0		==			
ANR	728591	Identifier	name		728585	0					
ANR	728592	PrimaryExpression	""""""		728585	1					
ANR	728593	CompoundStatement		3:18:38:38	728585	1					
ANR	728594	ExpressionStatement	CondorErrno = ERR_MISSING_ATTRNAME	349:2:7850:7884	728585	0	True				
ANR	728595	AssignmentExpression	CondorErrno = ERR_MISSING_ATTRNAME		728585	0		=			
ANR	728596	Identifier	CondorErrno		728585	0					
ANR	728597	Identifier	ERR_MISSING_ATTRNAME		728585	1					
ANR	728598	ExpressionStatement	"CondorErrMsg = ""no attribute name when inserting expression in classad"""	350:2:7888:7958	728585	1	True				
ANR	728599	AssignmentExpression	"CondorErrMsg = ""no attribute name when inserting expression in classad"""		728585	0		=			
ANR	728600	Identifier	CondorErrMsg		728585	0					
ANR	728601	PrimaryExpression	"""no attribute name when inserting expression in classad"""		728585	1					
ANR	728602	ReturnStatement	return ( false ) ;	351:2:7962:7977	728585	2	True				
ANR	728603	Identifier	false		728585	0					
ANR	728604	IfStatement	if ( ! tree )		728585	1					
ANR	728605	Condition	! tree	353:5:7987:7991	728585	0	True				
ANR	728606	UnaryOperationExpression	! tree		728585	0					
ANR	728607	UnaryOperator	!		728585	0					
ANR	728608	Identifier	tree		728585	1					
ANR	728609	CompoundStatement		8:13:187:187	728585	1					
ANR	728610	ExpressionStatement	CondorErrno = ERR_BAD_EXPRESSION	354:2:7999:8031	728585	0	True				
ANR	728611	AssignmentExpression	CondorErrno = ERR_BAD_EXPRESSION		728585	0		=			
ANR	728612	Identifier	CondorErrno		728585	0					
ANR	728613	Identifier	ERR_BAD_EXPRESSION		728585	1					
ANR	728614	ExpressionStatement	"CondorErrMsg = ""no expression when inserting attribute "" + name + "" in classad"""	355:2:8035:8118	728585	1	True				
ANR	728615	AssignmentExpression	"CondorErrMsg = ""no expression when inserting attribute "" + name + "" in classad"""		728585	0		=			
ANR	728616	Identifier	CondorErrMsg		728585	0					
ANR	728617	AdditiveExpression	"""no expression when inserting attribute "" + name + "" in classad"""		728585	1		+			
ANR	728618	PrimaryExpression	"""no expression when inserting attribute """		728585	0					
ANR	728619	AdditiveExpression	"name + "" in classad"""		728585	1		+			
ANR	728620	Identifier	name		728585	0					
ANR	728621	PrimaryExpression	""" in classad"""		728585	1					
ANR	728622	ReturnStatement	return ( false ) ;	357:2:8122:8137	728585	2	True				
ANR	728623	Identifier	false		728585	0					
ANR	728624	ExpressionStatement	tree -> SetParentScope ( this )	361:1:8189:8217	728585	2	True				
ANR	728625	CallExpression	tree -> SetParentScope ( this )		728585	0					
ANR	728626	Callee	tree -> SetParentScope		728585	0					
ANR	728627	PtrMemberAccess	tree -> SetParentScope		728585	0					
ANR	728628	Identifier	tree		728585	0					
ANR	728629	Identifier	SetParentScope		728585	1					
ANR	728630	ArgumentList	this		728585	1					
ANR	728631	Argument	this		728585	0					
ANR	728632	Identifier	this		728585	0					
ANR	728633	IdentifierDeclStatement	"pair < AttrList :: iterator , bool > insert_result = attrList . insert ( AttrList :: value_type ( name , tree ) ) ;"	363:1:8221:8319	728585	3	True				
ANR	728634	IdentifierDecl	"insert_result = attrList . insert ( AttrList :: value_type ( name , tree ) )"		728585	0					
ANR	728635	IdentifierDeclType	"pair < AttrList :: iterator , bool >"		728585	0					
ANR	728636	Identifier	insert_result		728585	1					
ANR	728637	AssignmentExpression	"insert_result = attrList . insert ( AttrList :: value_type ( name , tree ) )"		728585	2		=			
ANR	728638	Identifier	insert_result		728585	0					
ANR	728639	CallExpression	"attrList . insert ( AttrList :: value_type ( name , tree ) )"		728585	1					
ANR	728640	Callee	attrList . insert		728585	0					
ANR	728641	MemberAccess	attrList . insert		728585	0					
ANR	728642	Identifier	attrList		728585	0					
ANR	728643	Identifier	insert		728585	1					
ANR	728644	ArgumentList	"AttrList :: value_type ( name , tree )"		728585	1					
ANR	728645	Argument	"AttrList :: value_type ( name , tree )"		728585	0					
ANR	728646	CallExpression	"AttrList :: value_type ( name , tree )"		728585	0					
ANR	728647	Callee	AttrList :: value_type		728585	0					
ANR	728648	Identifier	AttrList :: value_type		728585	0					
ANR	728649	ArgumentList	name		728585	1					
ANR	728650	Argument	name		728585	0					
ANR	728651	Identifier	name		728585	0					
ANR	728652	Argument	tree		728585	1					
ANR	728653	Identifier	tree		728585	0					
ANR	728654	IfStatement	if ( ! insert_result . second )		728585	4					
ANR	728655	Condition	! insert_result . second	366:5:8327:8347	728585	0	True				
ANR	728656	UnaryOperationExpression	! insert_result . second		728585	0					
ANR	728657	UnaryOperator	!		728585	0					
ANR	728658	MemberAccess	insert_result . second		728585	1					
ANR	728659	Identifier	insert_result		728585	0					
ANR	728660	Identifier	second		728585	1					
ANR	728661	CompoundStatement		21:29:543:543	728585	1					
ANR	728662	Statement	delete	368:2:8384:8389	728585	0	True				
ANR	728663	ExpressionStatement	insert_result . first -> second	368:9:8391:8418	728585	1	True				
ANR	728664	PtrMemberAccess	insert_result . first -> second		728585	0					
ANR	728665	MemberAccess	insert_result . first		728585	0					
ANR	728666	Identifier	insert_result		728585	0					
ANR	728667	Identifier	first		728585	1					
ANR	728668	Identifier	second		728585	1					
ANR	728669	ExpressionStatement	insert_result . first -> second = tree	369:2:8422:8456	728585	2	True				
ANR	728670	AssignmentExpression	insert_result . first -> second = tree		728585	0		=			
ANR	728671	PtrMemberAccess	insert_result . first -> second		728585	0					
ANR	728672	MemberAccess	insert_result . first		728585	0					
ANR	728673	Identifier	insert_result		728585	0					
ANR	728674	Identifier	first		728585	1					
ANR	728675	Identifier	second		728585	1					
ANR	728676	Identifier	tree		728585	1					
ANR	728677	ExpressionStatement	MarkAttributeDirty ( name )	372:1:8463:8487	728585	5	True				
ANR	728678	CallExpression	MarkAttributeDirty ( name )		728585	0					
ANR	728679	Callee	MarkAttributeDirty		728585	0					
ANR	728680	Identifier	MarkAttributeDirty		728585	0					
ANR	728681	ArgumentList	name		728585	1					
ANR	728682	Argument	name		728585	0					
ANR	728683	Identifier	name		728585	0					
ANR	728684	ReturnStatement	return ( true ) ;	374:1:8499:8513	728585	6	True				
ANR	728685	Identifier	true		728585	0					
ANR	728686	ReturnType	bool		728585	1					
ANR	728687	Identifier	ClassAd :: Insert		728585	2					
ANR	728688	ParameterList	"const string & name , ExprTree * tree"		728585	3					
ANR	728689	Parameter	const string & name	345:8:7770:7787	728585	0	True				
ANR	728690	ParameterType	const string &		728585	0					
ANR	728691	Identifier	name		728585	1					
ANR	728692	Parameter	ExprTree * tree	345:28:7790:7803	728585	1	True				
ANR	728693	ParameterType	ExprTree *		728585	0					
ANR	728694	Identifier	tree		728585	1					
ANR	728695	CFGEntryNode	ENTRY		728585		True				
ANR	728696	CFGExitNode	EXIT		728585		True				
ANR	728697	Symbol	tree		728585						
ANR	728698	Symbol	false		728585						
ANR	728699	Symbol	this		728585						
ANR	728700	Symbol	ERR_BAD_EXPRESSION		728585						
ANR	728701	Symbol	insert_result		728585						
ANR	728702	Symbol	* insert_result		728585						
ANR	728703	Symbol	attrList		728585						
ANR	728704	Symbol	insert_result . first -> second		728585						
ANR	728705	Symbol	CondorErrno		728585						
ANR	728706	Symbol	ERR_MISSING_ATTRNAME		728585						
ANR	728707	Symbol	attrList . insert		728585						
ANR	728708	Symbol	CondorErrMsg		728585						
ANR	728709	Symbol	name		728585						
ANR	728710	Symbol	AttrList :: value_type		728585						
ANR	728711	Symbol	insert_result . second		728585						
ANR	728712	Symbol	true		728585						
ANR	728713	Symbol	insert_result . first		728585						
ANR	728714	Symbol	* insert_result . first		728585						
ANR	728715	Function	ClassAd :: DeepInsert	378:0:8519:8714							
ANR	728716	FunctionDef	"ClassAd :: DeepInsert (ExprTree * scopeExpr , const string & name , ExprTree * tree)"		728715	0					
ANR	728717	CompoundStatement		380:0:8604:8714	728715	0					
ANR	728718	IdentifierDeclStatement	ClassAd * ad = _GetDeepScope ( scopeExpr ) ;	381:1:8607:8647	728715	0	True				
ANR	728719	IdentifierDecl	* ad = _GetDeepScope ( scopeExpr )		728715	0					
ANR	728720	IdentifierDeclType	ClassAd *		728715	0					
ANR	728721	Identifier	ad		728715	1					
ANR	728722	AssignmentExpression	* ad = _GetDeepScope ( scopeExpr )		728715	2		=			
ANR	728723	Identifier	ad		728715	0					
ANR	728724	CallExpression	_GetDeepScope ( scopeExpr )		728715	1					
ANR	728725	Callee	_GetDeepScope		728715	0					
ANR	728726	Identifier	_GetDeepScope		728715	0					
ANR	728727	ArgumentList	scopeExpr		728715	1					
ANR	728728	Argument	scopeExpr		728715	0					
ANR	728729	Identifier	scopeExpr		728715	0					
ANR	728730	IfStatement	if ( ! ad )		728715	1					
ANR	728731	Condition	! ad	382:5:8654:8656	728715	0	True				
ANR	728732	UnaryOperationExpression	! ad		728715	0					
ANR	728733	UnaryOperator	!		728715	0					
ANR	728734	Identifier	ad		728715	1					
ANR	728735	ReturnStatement	return ( false ) ;	382:11:8660:8675	728715	1	True				
ANR	728736	Identifier	false		728715	0					
ANR	728737	ReturnStatement	"return ( ad -> Insert ( name , tree ) ) ;"	383:1:8678:8712	728715	2	True				
ANR	728738	CallExpression	"ad -> Insert ( name , tree )"		728715	0					
ANR	728739	Callee	ad -> Insert		728715	0					
ANR	728740	PtrMemberAccess	ad -> Insert		728715	0					
ANR	728741	Identifier	ad		728715	0					
ANR	728742	Identifier	Insert		728715	1					
ANR	728743	ArgumentList	name		728715	1					
ANR	728744	Argument	name		728715	0					
ANR	728745	Identifier	name		728715	0					
ANR	728746	Argument	tree		728715	1					
ANR	728747	Identifier	tree		728715	0					
ANR	728748	ReturnType	bool		728715	1					
ANR	728749	Identifier	ClassAd :: DeepInsert		728715	2					
ANR	728750	ParameterList	"ExprTree * scopeExpr , const string & name , ExprTree * tree"		728715	3					
ANR	728751	Parameter	ExprTree * scopeExpr	379:12:8546:8564	728715	0	True				
ANR	728752	ParameterType	ExprTree *		728715	0					
ANR	728753	Identifier	scopeExpr		728715	1					
ANR	728754	Parameter	const string & name	379:33:8567:8584	728715	1	True				
ANR	728755	ParameterType	const string &		728715	0					
ANR	728756	Identifier	name		728715	1					
ANR	728757	Parameter	ExprTree * tree	379:53:8587:8600	728715	2	True				
ANR	728758	ParameterType	ExprTree *		728715	0					
ANR	728759	Identifier	tree		728715	1					
ANR	728760	CFGEntryNode	ENTRY		728715		True				
ANR	728761	CFGExitNode	EXIT		728715		True				
ANR	728762	Symbol	ad		728715						
ANR	728763	Symbol	name		728715						
ANR	728764	Symbol	tree		728715						
ANR	728765	Symbol	false		728715						
ANR	728766	Symbol	ad -> Insert		728715						
ANR	728767	Symbol	* ad		728715						
ANR	728768	Symbol	scopeExpr		728715						
ANR	728769	Symbol	_GetDeepScope		728715						
ANR	728770	Function	ClassAd :: find	388:0:8781:8876							
ANR	728771	FunctionDef	ClassAd :: find (string const & attrName)		728770	0					
ANR	728772	CompoundStatement		390:0:8838:8876	728770	0					
ANR	728773	ReturnStatement	return attrList . find ( attrName ) ;	391:4:8844:8874	728770	0	True				
ANR	728774	CallExpression	attrList . find ( attrName )		728770	0					
ANR	728775	Callee	attrList . find		728770	0					
ANR	728776	MemberAccess	attrList . find		728770	0					
ANR	728777	Identifier	attrList		728770	0					
ANR	728778	Identifier	find		728770	1					
ANR	728779	ArgumentList	attrName		728770	1					
ANR	728780	Argument	attrName		728770	0					
ANR	728781	Identifier	attrName		728770	0					
ANR	728782	ReturnType	ClassAd :: iterator		728770	1					
ANR	728783	Identifier	ClassAd :: find		728770	2					
ANR	728784	ParameterList	string const & attrName		728770	3					
ANR	728785	Parameter	string const & attrName	389:5:8814:8835	728770	0	True				
ANR	728786	ParameterType	string const &		728770	0					
ANR	728787	Identifier	attrName		728770	1					
ANR	728788	CFGEntryNode	ENTRY		728770		True				
ANR	728789	CFGExitNode	EXIT		728770		True				
ANR	728790	Symbol	attrList . find		728770						
ANR	728791	Symbol	attrName		728770						
ANR	728792	Symbol	attrList		728770						
ANR	728793	Function	ClassAd :: find	394:0:8880:8987							
ANR	728794	FunctionDef	ClassAd :: find (string const & attrName)		728793	0					
ANR	728795	CompoundStatement		396:0:8949:8987	728793	0					
ANR	728796	ReturnStatement	return attrList . find ( attrName ) ;	397:4:8955:8985	728793	0	True				
ANR	728797	CallExpression	attrList . find ( attrName )		728793	0					
ANR	728798	Callee	attrList . find		728793	0					
ANR	728799	MemberAccess	attrList . find		728793	0					
ANR	728800	Identifier	attrList		728793	0					
ANR	728801	Identifier	find		728793	1					
ANR	728802	ArgumentList	attrName		728793	1					
ANR	728803	Argument	attrName		728793	0					
ANR	728804	Identifier	attrName		728793	0					
ANR	728805	ReturnType	ClassAd :: const_iterator		728793	1					
ANR	728806	Identifier	ClassAd :: find		728793	2					
ANR	728807	ParameterList	string const & attrName		728793	3					
ANR	728808	Parameter	string const & attrName	395:5:8919:8940	728793	0	True				
ANR	728809	ParameterType	string const &		728793	0					
ANR	728810	Identifier	attrName		728793	1					
ANR	728811	CFGEntryNode	ENTRY		728793		True				
ANR	728812	CFGExitNode	EXIT		728793		True				
ANR	728813	Symbol	attrList . find		728793						
ANR	728814	Symbol	attrName		728793						
ANR	728815	Symbol	attrList		728793						
ANR	728816	Function	ClassAd :: Lookup	402:0:9048:9361							
ANR	728817	FunctionDef	ClassAd :: Lookup (const string & name)		728816	0					
ANR	728818	CompoundStatement		404:0:9103:9361	728816	0					
ANR	728819	IdentifierDeclStatement	ExprTree * tree ;	405:1:9106:9120	728816	0	True				
ANR	728820	IdentifierDecl	* tree		728816	0					
ANR	728821	IdentifierDeclType	ExprTree *		728816	0					
ANR	728822	Identifier	tree		728816	1					
ANR	728823	IdentifierDeclStatement	AttrList :: const_iterator itr ;	406:1:9123:9151	728816	1	True				
ANR	728824	IdentifierDecl	itr		728816	0					
ANR	728825	IdentifierDeclType	AttrList :: const_iterator		728816	0					
ANR	728826	Identifier	itr		728816	1					
ANR	728827	ExpressionStatement	itr = attrList . find ( name )	408:1:9155:9182	728816	2	True				
ANR	728828	AssignmentExpression	itr = attrList . find ( name )		728816	0		=			
ANR	728829	Identifier	itr		728816	0					
ANR	728830	CallExpression	attrList . find ( name )		728816	1					
ANR	728831	Callee	attrList . find		728816	0					
ANR	728832	MemberAccess	attrList . find		728816	0					
ANR	728833	Identifier	attrList		728816	0					
ANR	728834	Identifier	find		728816	1					
ANR	728835	ArgumentList	name		728816	1					
ANR	728836	Argument	name		728816	0					
ANR	728837	Identifier	name		728816	0					
ANR	728838	IfStatement	if ( itr != attrList . end ( ) )		728816	3					
ANR	728839	Condition	itr != attrList . end ( )	409:5:9189:9209	728816	0	True				
ANR	728840	EqualityExpression	itr != attrList . end ( )		728816	0		!=			
ANR	728841	Identifier	itr		728816	0					
ANR	728842	CallExpression	attrList . end ( )		728816	1					
ANR	728843	Callee	attrList . end		728816	0					
ANR	728844	MemberAccess	attrList . end		728816	0					
ANR	728845	Identifier	attrList		728816	0					
ANR	728846	Identifier	end		728816	1					
ANR	728847	ArgumentList			728816	1					
ANR	728848	CompoundStatement		6:28:108:108	728816	1					
ANR	728849	ExpressionStatement	tree = itr -> second	410:2:9216:9234	728816	0	True				
ANR	728850	AssignmentExpression	tree = itr -> second		728816	0		=			
ANR	728851	Identifier	tree		728816	0					
ANR	728852	PtrMemberAccess	itr -> second		728816	1					
ANR	728853	Identifier	itr		728816	0					
ANR	728854	Identifier	second		728816	1					
ANR	728855	ElseStatement	else		728816	0					
ANR	728856	IfStatement	if ( chained_parent_ad != NULL )		728816	0					
ANR	728857	Condition	chained_parent_ad != NULL	411:12:9248:9272	728816	0	True				
ANR	728858	EqualityExpression	chained_parent_ad != NULL		728816	0		!=			
ANR	728859	Identifier	chained_parent_ad		728816	0					
ANR	728860	Identifier	NULL		728816	1					
ANR	728861	CompoundStatement		8:39:171:171	728816	1					
ANR	728862	ExpressionStatement	tree = chained_parent_ad -> Lookup ( name )	412:2:9279:9317	728816	0	True				
ANR	728863	AssignmentExpression	tree = chained_parent_ad -> Lookup ( name )		728816	0		=			
ANR	728864	Identifier	tree		728816	0					
ANR	728865	CallExpression	chained_parent_ad -> Lookup ( name )		728816	1					
ANR	728866	Callee	chained_parent_ad -> Lookup		728816	0					
ANR	728867	PtrMemberAccess	chained_parent_ad -> Lookup		728816	0					
ANR	728868	Identifier	chained_parent_ad		728816	0					
ANR	728869	Identifier	Lookup		728816	1					
ANR	728870	ArgumentList	name		728816	1					
ANR	728871	Argument	name		728816	0					
ANR	728872	Identifier	name		728816	0					
ANR	728873	ElseStatement	else		728816	0					
ANR	728874	CompoundStatement		10:8:223:223	728816	0					
ANR	728875	ExpressionStatement	tree = NULL	414:2:9331:9342	728816	0	True				
ANR	728876	AssignmentExpression	tree = NULL		728816	0		=			
ANR	728877	Identifier	tree		728816	0					
ANR	728878	Identifier	NULL		728816	1					
ANR	728879	ReturnStatement	return tree ;	416:1:9348:9359	728816	4	True				
ANR	728880	Identifier	tree		728816	0					
ANR	728881	ReturnType	ExprTree *		728816	1					
ANR	728882	Identifier	ClassAd :: Lookup		728816	2					
ANR	728883	ParameterList	const string & name		728816	3					
ANR	728884	Parameter	const string & name	403:8:9076:9093	728816	0	True				
ANR	728885	ParameterType	const string &		728816	0					
ANR	728886	Identifier	name		728816	1					
ANR	728887	CFGEntryNode	ENTRY		728816		True				
ANR	728888	CFGExitNode	EXIT		728816		True				
ANR	728889	Symbol	attrList . end		728816						
ANR	728890	Symbol	NULL		728816						
ANR	728891	Symbol	itr		728816						
ANR	728892	Symbol	chained_parent_ad		728816						
ANR	728893	Symbol	name		728816						
ANR	728894	Symbol	tree		728816						
ANR	728895	Symbol	chained_parent_ad -> Lookup		728816						
ANR	728896	Symbol	attrList . find		728816						
ANR	728897	Symbol	* chained_parent_ad		728816						
ANR	728898	Symbol	attrList		728816						
ANR	728899	Symbol	* itr		728816						
ANR	728900	Symbol	itr -> second		728816						
ANR	728901	Function	ClassAd :: LookupInScope	420:0:9365:9688							
ANR	728902	FunctionDef	"ClassAd :: LookupInScope (const string & name , const ClassAd * & finalScope)"		728901	0					
ANR	728903	CompoundStatement		422:0:9455:9688	728901	0					
ANR	728904	IdentifierDeclStatement	EvalState state ;	423:1:9458:9473	728901	0	True				
ANR	728905	IdentifierDecl	state		728901	0					
ANR	728906	IdentifierDeclType	EvalState		728901	0					
ANR	728907	Identifier	state		728901	1					
ANR	728908	IdentifierDeclStatement	ExprTree * tree ;	424:1:9476:9490	728901	1	True				
ANR	728909	IdentifierDecl	* tree		728901	0					
ANR	728910	IdentifierDeclType	ExprTree *		728901	0					
ANR	728911	Identifier	tree		728901	1					
ANR	728912	IdentifierDeclStatement	int rval ;	425:1:9493:9503	728901	2	True				
ANR	728913	IdentifierDecl	rval		728901	0					
ANR	728914	IdentifierDeclType	int		728901	0					
ANR	728915	Identifier	rval		728901	1					
ANR	728916	ExpressionStatement	state . SetScopes ( this )	427:1:9507:9530	728901	3	True				
ANR	728917	CallExpression	state . SetScopes ( this )		728901	0					
ANR	728918	Callee	state . SetScopes		728901	0					
ANR	728919	MemberAccess	state . SetScopes		728901	0					
ANR	728920	Identifier	state		728901	0					
ANR	728921	Identifier	SetScopes		728901	1					
ANR	728922	ArgumentList	this		728901	1					
ANR	728923	Argument	this		728901	0					
ANR	728924	Identifier	this		728901	0					
ANR	728925	ExpressionStatement	"rval = LookupInScope ( name , tree , state )"	428:1:9533:9574	728901	4	True				
ANR	728926	AssignmentExpression	"rval = LookupInScope ( name , tree , state )"		728901	0		=			
ANR	728927	Identifier	rval		728901	0					
ANR	728928	CallExpression	"LookupInScope ( name , tree , state )"		728901	1					
ANR	728929	Callee	LookupInScope		728901	0					
ANR	728930	Identifier	LookupInScope		728901	0					
ANR	728931	ArgumentList	name		728901	1					
ANR	728932	Argument	name		728901	0					
ANR	728933	Identifier	name		728901	0					
ANR	728934	Argument	tree		728901	1					
ANR	728935	Identifier	tree		728901	0					
ANR	728936	Argument	state		728901	2					
ANR	728937	Identifier	state		728901	0					
ANR	728938	IfStatement	if ( rval == EVAL_OK )		728901	5					
ANR	728939	Condition	rval == EVAL_OK	429:5:9581:9595	728901	0	True				
ANR	728940	EqualityExpression	rval == EVAL_OK		728901	0		==			
ANR	728941	Identifier	rval		728901	0					
ANR	728942	Identifier	EVAL_OK		728901	1					
ANR	728943	CompoundStatement		8:23:143:143	728901	1					
ANR	728944	ExpressionStatement	finalScope = state . curAd	430:2:9603:9627	728901	0	True				
ANR	728945	AssignmentExpression	finalScope = state . curAd		728901	0		=			
ANR	728946	Identifier	finalScope		728901	0					
ANR	728947	MemberAccess	state . curAd		728901	1					
ANR	728948	Identifier	state		728901	0					
ANR	728949	Identifier	curAd		728901	1					
ANR	728950	ReturnStatement	return ( tree ) ;	431:2:9631:9645	728901	1	True				
ANR	728951	Identifier	tree		728901	0					
ANR	728952	ExpressionStatement	finalScope = NULL	434:1:9652:9669	728901	6	True				
ANR	728953	AssignmentExpression	finalScope = NULL		728901	0		=			
ANR	728954	Identifier	finalScope		728901	0					
ANR	728955	Identifier	NULL		728901	1					
ANR	728956	ReturnStatement	return ( NULL ) ;	435:1:9672:9686	728901	7	True				
ANR	728957	Identifier	NULL		728901	0					
ANR	728958	ReturnType	ExprTree *		728901	1					
ANR	728959	Identifier	ClassAd :: LookupInScope		728901	2					
ANR	728960	ParameterList	"const string & name , const ClassAd * & finalScope"		728901	3					
ANR	728961	Parameter	const string & name	421:15:9400:9417	728901	0	True				
ANR	728962	ParameterType	const string &		728901	0					
ANR	728963	Identifier	name		728901	1					
ANR	728964	Parameter	const ClassAd * & finalScope	421:35:9420:9445	728901	1	True				
ANR	728965	ParameterType	const ClassAd * &		728901	0					
ANR	728966	Identifier	finalScope		728901	1					
ANR	728967	CFGEntryNode	ENTRY		728901		True				
ANR	728968	CFGExitNode	EXIT		728901		True				
ANR	728969	Symbol	finalScope		728901						
ANR	728970	Symbol	state . curAd		728901						
ANR	728971	Symbol	NULL		728901						
ANR	728972	Symbol	name		728901						
ANR	728973	Symbol	tree		728901						
ANR	728974	Symbol	this		728901						
ANR	728975	Symbol	EVAL_OK		728901						
ANR	728976	Symbol	rval		728901						
ANR	728977	Symbol	LookupInScope		728901						
ANR	728978	Symbol	state		728901						
ANR	728979	Function	ClassAd :: LookupInScope	439:0:9692:11027							
ANR	728980	FunctionDef	"ClassAd :: LookupInScope (const string & name , ExprTree * & expr , EvalState & state)"		728979	0					
ANR	728981	CompoundStatement		441:0:9781:11027	728979	0					
ANR	728982	Statement	extern	442:1:9784:9789	728979	0	True				
ANR	728983	Statement	int	442:8:9791:9793	728979	1	True				
ANR	728984	Statement	exprHash	442:12:9795:9802	728979	2	True				
ANR	728985	Statement	(	442:20:9803:9803	728979	3	True				
ANR	728986	Statement	const	442:22:9805:9809	728979	4	True				
ANR	728987	Statement	ExprTree	442:28:9811:9818	728979	5	True				
ANR	728988	Statement	*	442:36:9819:9819	728979	6	True				
ANR	728989	Statement	const	442:38:9821:9825	728979	7	True				
ANR	728990	Statement	&	442:43:9826:9826	728979	8	True				
ANR	728991	Statement	","	442:44:9827:9827	728979	9	True				
ANR	728992	Statement	int	442:46:9829:9831	728979	10	True				
ANR	728993	Statement	)	442:50:9833:9833	728979	11	True				
ANR	728994	ExpressionStatement		442:51:9834:9834	728979	12	True				
ANR	728995	IdentifierDeclStatement	"const ClassAd * current = this , * superScope ;"	443:1:9837:9879	728979	13	True				
ANR	728996	IdentifierDecl	* current = this		728979	0					
ANR	728997	IdentifierDeclType	const ClassAd *		728979	0					
ANR	728998	Identifier	current		728979	1					
ANR	728999	AssignmentExpression	* current = this		728979	2		=			
ANR	729000	Identifier	this		728979	0					
ANR	729001	Identifier	this		728979	1					
ANR	729002	IdentifierDecl	* superScope		728979	1					
ANR	729003	IdentifierDeclType	const ClassAd *		728979	0					
ANR	729004	Identifier	superScope		728979	1					
ANR	729005	IdentifierDeclStatement	Value val ;	444:1:9882:9893	728979	14	True				
ANR	729006	IdentifierDecl	val		728979	0					
ANR	729007	IdentifierDeclType	Value		728979	0					
ANR	729008	Identifier	val		728979	1					
ANR	729009	ExpressionStatement	expr = NULL	446:1:9897:9908	728979	15	True				
ANR	729010	AssignmentExpression	expr = NULL		728979	0		=			
ANR	729011	Identifier	expr		728979	0					
ANR	729012	Identifier	NULL		728979	1					
ANR	729013	WhileStatement	while ( ! expr && current )		728979	16					
ANR	729014	Condition	! expr && current	448:8:9919:9934	728979	0	True				
ANR	729015	AndExpression	! expr && current		728979	0		&&			
ANR	729016	UnaryOperationExpression	! expr		728979	0					
ANR	729017	UnaryOperator	!		728979	0					
ANR	729018	Identifier	expr		728979	1					
ANR	729019	Identifier	current		728979	1					
ANR	729020	CompoundStatement		8:27:156:156	728979	1					
ANR	729021	ExpressionStatement	state . curAd = current	451:2:9994:10015	728979	0	True				
ANR	729022	AssignmentExpression	state . curAd = current		728979	0		=			
ANR	729023	MemberAccess	state . curAd		728979	0					
ANR	729024	Identifier	state		728979	0					
ANR	729025	Identifier	curAd		728979	1					
ANR	729026	Identifier	current		728979	1					
ANR	729027	IfStatement	if ( ( expr = current -> Lookup ( name ) ) )		728979	1					
ANR	729028	Condition	expr = current -> Lookup ( name )	454:6:10053:10086	728979	0	True				
ANR	729029	AssignmentExpression	expr = current -> Lookup ( name )		728979	0		=			
ANR	729030	Identifier	expr		728979	0					
ANR	729031	CallExpression	current -> Lookup ( name )		728979	1					
ANR	729032	Callee	current -> Lookup		728979	0					
ANR	729033	PtrMemberAccess	current -> Lookup		728979	0					
ANR	729034	Identifier	current		728979	0					
ANR	729035	Identifier	Lookup		728979	1					
ANR	729036	ArgumentList	name		728979	1					
ANR	729037	Argument	name		728979	0					
ANR	729038	Identifier	name		728979	0					
ANR	729039	CompoundStatement		14:43:308:308	728979	1					
ANR	729040	ReturnStatement	return ( EVAL_OK ) ;	455:3:10095:10112	728979	0	True				
ANR	729041	Identifier	EVAL_OK		728979	0					
ANR	729042	ExpressionStatement	superScope = current -> parentScope	458:2:10121:10154	728979	2	True				
ANR	729043	AssignmentExpression	superScope = current -> parentScope		728979	0		=			
ANR	729044	Identifier	superScope		728979	0					
ANR	729045	PtrMemberAccess	current -> parentScope		728979	1					
ANR	729046	Identifier	current		728979	0					
ANR	729047	Identifier	parentScope		728979	1					
ANR	729048	IfStatement	"if ( strcasecmp ( name . c_str ( ) , ""toplevel"" ) == 0 || strcasecmp ( name . c_str ( ) , ""root"" ) == 0 )"		728979	3					
ANR	729049	Condition	"strcasecmp ( name . c_str ( ) , ""toplevel"" ) == 0 || strcasecmp ( name . c_str ( ) , ""root"" ) == 0"	459:5:10161:10243	728979	0	True				
ANR	729050	OrExpression	"strcasecmp ( name . c_str ( ) , ""toplevel"" ) == 0 || strcasecmp ( name . c_str ( ) , ""root"" ) == 0"		728979	0		||			
ANR	729051	EqualityExpression	"strcasecmp ( name . c_str ( ) , ""toplevel"" ) == 0"		728979	0		==			
ANR	729052	CallExpression	"strcasecmp ( name . c_str ( ) , ""toplevel"" )"		728979	0					
ANR	729053	Callee	strcasecmp		728979	0					
ANR	729054	Identifier	strcasecmp		728979	0					
ANR	729055	ArgumentList	name . c_str ( )		728979	1					
ANR	729056	Argument	name . c_str ( )		728979	0					
ANR	729057	CallExpression	name . c_str ( )		728979	0					
ANR	729058	Callee	name . c_str		728979	0					
ANR	729059	MemberAccess	name . c_str		728979	0					
ANR	729060	Identifier	name		728979	0					
ANR	729061	Identifier	c_str		728979	1					
ANR	729062	ArgumentList			728979	1					
ANR	729063	Argument	"""toplevel"""		728979	1					
ANR	729064	PrimaryExpression	"""toplevel"""		728979	0					
ANR	729065	PrimaryExpression	0		728979	1					
ANR	729066	EqualityExpression	"strcasecmp ( name . c_str ( ) , ""root"" ) == 0"		728979	1		==			
ANR	729067	CallExpression	"strcasecmp ( name . c_str ( ) , ""root"" )"		728979	0					
ANR	729068	Callee	strcasecmp		728979	0					
ANR	729069	Identifier	strcasecmp		728979	0					
ANR	729070	ArgumentList	name . c_str ( )		728979	1					
ANR	729071	Argument	name . c_str ( )		728979	0					
ANR	729072	CallExpression	name . c_str ( )		728979	0					
ANR	729073	Callee	name . c_str		728979	0					
ANR	729074	MemberAccess	name . c_str		728979	0					
ANR	729075	Identifier	name		728979	0					
ANR	729076	Identifier	c_str		728979	1					
ANR	729077	ArgumentList			728979	1					
ANR	729078	Argument	"""root"""		728979	1					
ANR	729079	PrimaryExpression	"""root"""		728979	0					
ANR	729080	PrimaryExpression	0		728979	1					
ANR	729081	CompoundStatement		20:40:463:463	728979	1					
ANR	729082	ExpressionStatement	expr = ( ClassAd * ) state . rootAd	462:3:10302:10331	728979	0	True				
ANR	729083	AssignmentExpression	expr = ( ClassAd * ) state . rootAd		728979	0		=			
ANR	729084	Identifier	expr		728979	0					
ANR	729085	CastExpression	( ClassAd * ) state . rootAd		728979	1					
ANR	729086	CastTarget	ClassAd *		728979	0					
ANR	729087	MemberAccess	state . rootAd		728979	1					
ANR	729088	Identifier	state		728979	0					
ANR	729089	Identifier	rootAd		728979	1					
ANR	729090	IfStatement	if ( expr == NULL )		728979	1					
ANR	729091	Condition	expr == NULL	463:7:10340:10351	728979	0	True				
ANR	729092	EqualityExpression	expr == NULL		728979	0		==			
ANR	729093	Identifier	expr		728979	0					
ANR	729094	Identifier	NULL		728979	1					
ANR	729095	CompoundStatement		23:22:573:573	728979	1					
ANR	729096	ReturnStatement	return EVAL_FAIL ;	464:4:10393:10409	728979	0	True				
ANR	729097	Identifier	EVAL_FAIL		728979	0					
ANR	729098	ReturnStatement	return ( expr ? EVAL_OK : EVAL_UNDEF ) ;	466:3:10440:10477	728979	2	True				
ANR	729099	ConditionalExpression	expr ? EVAL_OK : EVAL_UNDEF		728979	0					
ANR	729100	Condition	expr		728979	0					
ANR	729101	Identifier	expr		728979	0					
ANR	729102	Identifier	EVAL_OK		728979	1					
ANR	729103	Identifier	EVAL_UNDEF		728979	2					
ANR	729104	ElseStatement	else		728979	0					
ANR	729105	IfStatement	"if ( strcasecmp ( name . c_str ( ) , ""self"" ) == 0 )"		728979	0					
ANR	729106	Condition	"strcasecmp ( name . c_str ( ) , ""self"" ) == 0"	467:13:10492:10531	728979	0	True				
ANR	729107	EqualityExpression	"strcasecmp ( name . c_str ( ) , ""self"" ) == 0"		728979	0		==			
ANR	729108	CallExpression	"strcasecmp ( name . c_str ( ) , ""self"" )"		728979	0					
ANR	729109	Callee	strcasecmp		728979	0					
ANR	729110	Identifier	strcasecmp		728979	0					
ANR	729111	ArgumentList	name . c_str ( )		728979	1					
ANR	729112	Argument	name . c_str ( )		728979	0					
ANR	729113	CallExpression	name . c_str ( )		728979	0					
ANR	729114	Callee	name . c_str		728979	0					
ANR	729115	MemberAccess	name . c_str		728979	0					
ANR	729116	Identifier	name		728979	0					
ANR	729117	Identifier	c_str		728979	1					
ANR	729118	ArgumentList			728979	1					
ANR	729119	Argument	"""self"""		728979	1					
ANR	729120	PrimaryExpression	"""self"""		728979	0					
ANR	729121	PrimaryExpression	0		728979	1					
ANR	729122	CompoundStatement		27:56:753:753	728979	1					
ANR	729123	ExpressionStatement	expr = ( ClassAd * ) state . curAd	469:3:10577:10605	728979	0	True				
ANR	729124	AssignmentExpression	expr = ( ClassAd * ) state . curAd		728979	0		=			
ANR	729125	Identifier	expr		728979	0					
ANR	729126	CastExpression	( ClassAd * ) state . curAd		728979	1					
ANR	729127	CastTarget	ClassAd *		728979	0					
ANR	729128	MemberAccess	state . curAd		728979	1					
ANR	729129	Identifier	state		728979	0					
ANR	729130	Identifier	curAd		728979	1					
ANR	729131	ReturnStatement	return ( expr ? EVAL_OK : EVAL_UNDEF ) ;	470:3:10610:10647	728979	1	True				
ANR	729132	ConditionalExpression	expr ? EVAL_OK : EVAL_UNDEF		728979	0					
ANR	729133	Condition	expr		728979	0					
ANR	729134	Identifier	expr		728979	0					
ANR	729135	Identifier	EVAL_OK		728979	1					
ANR	729136	Identifier	EVAL_UNDEF		728979	2					
ANR	729137	ElseStatement	else		728979	0					
ANR	729138	IfStatement	"if ( strcasecmp ( name . c_str ( ) , ""parent"" ) == 0 )"		728979	0					
ANR	729139	Condition	"strcasecmp ( name . c_str ( ) , ""parent"" ) == 0"	471:13:10662:10703	728979	0	True				
ANR	729140	EqualityExpression	"strcasecmp ( name . c_str ( ) , ""parent"" ) == 0"		728979	0		==			
ANR	729141	CallExpression	"strcasecmp ( name . c_str ( ) , ""parent"" )"		728979	0					
ANR	729142	Callee	strcasecmp		728979	0					
ANR	729143	Identifier	strcasecmp		728979	0					
ANR	729144	ArgumentList	name . c_str ( )		728979	1					
ANR	729145	Argument	name . c_str ( )		728979	0					
ANR	729146	CallExpression	name . c_str ( )		728979	0					
ANR	729147	Callee	name . c_str		728979	0					
ANR	729148	MemberAccess	name . c_str		728979	0					
ANR	729149	Identifier	name		728979	0					
ANR	729150	Identifier	c_str		728979	1					
ANR	729151	ArgumentList			728979	1					
ANR	729152	Argument	"""parent"""		728979	1					
ANR	729153	PrimaryExpression	"""parent"""		728979	0					
ANR	729154	PrimaryExpression	0		728979	1					
ANR	729155	CompoundStatement		31:58:925:925	728979	1					
ANR	729156	ExpressionStatement	expr = ( ClassAd * ) state . curAd -> parentScope	473:3:10737:10778	728979	0	True				
ANR	729157	AssignmentExpression	expr = ( ClassAd * ) state . curAd -> parentScope		728979	0		=			
ANR	729158	Identifier	expr		728979	0					
ANR	729159	CastExpression	( ClassAd * ) state . curAd -> parentScope		728979	1					
ANR	729160	CastTarget	ClassAd *		728979	0					
ANR	729161	PtrMemberAccess	state . curAd -> parentScope		728979	1					
ANR	729162	MemberAccess	state . curAd		728979	0					
ANR	729163	Identifier	state		728979	0					
ANR	729164	Identifier	curAd		728979	1					
ANR	729165	Identifier	parentScope		728979	1					
ANR	729166	ReturnStatement	return ( expr ? EVAL_OK : EVAL_UNDEF ) ;	474:3:10783:10820	728979	1	True				
ANR	729167	ConditionalExpression	expr ? EVAL_OK : EVAL_UNDEF		728979	0					
ANR	729168	Condition	expr		728979	0					
ANR	729169	Identifier	expr		728979	0					
ANR	729170	Identifier	EVAL_OK		728979	1					
ANR	729171	Identifier	EVAL_UNDEF		728979	2					
ANR	729172	ElseStatement	else		728979	0					
ANR	729173	CompoundStatement		35:9:1049:1049	728979	0					
ANR	729174	ExpressionStatement	current = superScope	477:3:10885:10905	728979	0	True				
ANR	729175	AssignmentExpression	current = superScope		728979	0		=			
ANR	729176	Identifier	current		728979	0					
ANR	729177	Identifier	superScope		728979	1					
ANR	729178	IfStatement	if ( current == this )		728979	1					
ANR	729179	Condition	current == this	478:7:10914:10928	728979	0	True				
ANR	729180	EqualityExpression	current == this		728979	0		==			
ANR	729181	Identifier	current		728979	0					
ANR	729182	Identifier	this		728979	1					
ANR	729183	CompoundStatement		38:25:1150:1150	728979	1					
ANR	729184	ReturnStatement	return ( EVAL_UNDEF ) ;	479:4:10968:10988	728979	0	True				
ANR	729185	Identifier	EVAL_UNDEF		728979	0					
ANR	729186	ReturnStatement	return ( EVAL_UNDEF ) ;	484:1:11005:11025	728979	17	True				
ANR	729187	Identifier	EVAL_UNDEF		728979	0					
ANR	729188	ReturnType	int		728979	1					
ANR	729189	Identifier	ClassAd :: LookupInScope		728979	2					
ANR	729190	ParameterList	"const string & name , ExprTree * & expr , EvalState & state"		728979	3					
ANR	729191	Parameter	const string & name	440:14:9720:9737	728979	0	True				
ANR	729192	ParameterType	const string &		728979	0					
ANR	729193	Identifier	name		728979	1					
ANR	729194	Parameter	ExprTree * & expr	440:34:9740:9754	728979	1	True				
ANR	729195	ParameterType	ExprTree * &		728979	0					
ANR	729196	Identifier	expr		728979	1					
ANR	729197	Parameter	EvalState & state	440:51:9757:9772	728979	2	True				
ANR	729198	ParameterType	EvalState &		728979	0					
ANR	729199	Identifier	state		728979	1					
ANR	729200	CFGEntryNode	ENTRY		728979		True				
ANR	729201	CFGExitNode	EXIT		728979		True				
ANR	729202	Symbol	val		728979						
ANR	729203	Symbol	current -> Lookup		728979						
ANR	729204	Symbol	current -> parentScope		728979						
ANR	729205	Symbol	NULL		728979						
ANR	729206	Symbol	* state . curAd		728979						
ANR	729207	Symbol	this		728979						
ANR	729208	Symbol	* current		728979						
ANR	729209	Symbol	state . rootAd		728979						
ANR	729210	Symbol	name . c_str		728979						
ANR	729211	Symbol	state . curAd		728979						
ANR	729212	Symbol	* state		728979						
ANR	729213	Symbol	current		728979						
ANR	729214	Symbol	EVAL_UNDEF		728979						
ANR	729215	Symbol	EVAL_FAIL		728979						
ANR	729216	Symbol	name		728979						
ANR	729217	Symbol	EVAL_OK		728979						
ANR	729218	Symbol	expr		728979						
ANR	729219	Symbol	state		728979						
ANR	729220	Symbol	strcasecmp		728979						
ANR	729221	Symbol	state . curAd -> parentScope		728979						
ANR	729222	Symbol	superScope		728979						
ANR	729223	Function	ClassAd :: Delete	491:0:11089:12006							
ANR	729224	FunctionDef	ClassAd :: Delete (const string & name)		729223	0					
ANR	729225	CompoundStatement		493:0:11133:12006	729223	0					
ANR	729226	IdentifierDeclStatement	bool deleted_attribute ;	494:1:11136:11158	729223	0	True				
ANR	729227	IdentifierDecl	deleted_attribute		729223	0					
ANR	729228	IdentifierDeclType	bool		729223	0					
ANR	729229	Identifier	deleted_attribute		729223	1					
ANR	729230	ExpressionStatement	deleted_attribute = false	496:4:11165:11190	729223	1	True				
ANR	729231	AssignmentExpression	deleted_attribute = false		729223	0		=			
ANR	729232	Identifier	deleted_attribute		729223	0					
ANR	729233	Identifier	false		729223	1					
ANR	729234	IdentifierDeclStatement	AttrList :: iterator itr = attrList . find ( name ) ;	497:1:11193:11239	729223	2	True				
ANR	729235	IdentifierDecl	itr = attrList . find ( name )		729223	0					
ANR	729236	IdentifierDeclType	AttrList :: iterator		729223	0					
ANR	729237	Identifier	itr		729223	1					
ANR	729238	AssignmentExpression	itr = attrList . find ( name )		729223	2		=			
ANR	729239	Identifier	itr		729223	0					
ANR	729240	CallExpression	attrList . find ( name )		729223	1					
ANR	729241	Callee	attrList . find		729223	0					
ANR	729242	MemberAccess	attrList . find		729223	0					
ANR	729243	Identifier	attrList		729223	0					
ANR	729244	Identifier	find		729223	1					
ANR	729245	ArgumentList	name		729223	1					
ANR	729246	Argument	name		729223	0					
ANR	729247	Identifier	name		729223	0					
ANR	729248	IfStatement	if ( itr != attrList . end ( ) )		729223	3					
ANR	729249	Condition	itr != attrList . end ( )	498:5:11246:11267	729223	0	True				
ANR	729250	EqualityExpression	itr != attrList . end ( )		729223	0		!=			
ANR	729251	Identifier	itr		729223	0					
ANR	729252	CallExpression	attrList . end ( )		729223	1					
ANR	729253	Callee	attrList . end		729223	0					
ANR	729254	MemberAccess	attrList . end		729223	0					
ANR	729255	Identifier	attrList		729223	0					
ANR	729256	Identifier	end		729223	1					
ANR	729257	ArgumentList			729223	1					
ANR	729258	CompoundStatement		6:30:137:137	729223	1					
ANR	729259	Statement	delete	499:2:11275:11280	729223	0	True				
ANR	729260	ExpressionStatement	itr -> second	499:9:11282:11293	729223	1	True				
ANR	729261	PtrMemberAccess	itr -> second		729223	0					
ANR	729262	Identifier	itr		729223	0					
ANR	729263	Identifier	second		729223	1					
ANR	729264	ExpressionStatement	attrList . erase ( itr )	500:2:11297:11318	729223	2	True				
ANR	729265	CallExpression	attrList . erase ( itr )		729223	0					
ANR	729266	Callee	attrList . erase		729223	0					
ANR	729267	MemberAccess	attrList . erase		729223	0					
ANR	729268	Identifier	attrList		729223	0					
ANR	729269	Identifier	erase		729223	1					
ANR	729270	ArgumentList	itr		729223	1					
ANR	729271	Argument	itr		729223	0					
ANR	729272	Identifier	itr		729223	0					
ANR	729273	ExpressionStatement	deleted_attribute = true	501:2:11322:11346	729223	3	True				
ANR	729274	AssignmentExpression	deleted_attribute = true		729223	0		=			
ANR	729275	Identifier	deleted_attribute		729223	0					
ANR	729276	Identifier	true		729223	1					
ANR	729277	IfStatement	if ( chained_parent_ad != NULL && chained_parent_ad -> Lookup ( name ) != NULL )		729223	4					
ANR	729278	Condition	chained_parent_ad != NULL && chained_parent_ad -> Lookup ( name ) != NULL	507:5:11614:11683	729223	0	True				
ANR	729279	AndExpression	chained_parent_ad != NULL && chained_parent_ad -> Lookup ( name ) != NULL		729223	0		&&			
ANR	729280	EqualityExpression	chained_parent_ad != NULL		729223	0		!=			
ANR	729281	Identifier	chained_parent_ad		729223	0					
ANR	729282	Identifier	NULL		729223	1					
ANR	729283	EqualityExpression	chained_parent_ad -> Lookup ( name ) != NULL		729223	1		!=			
ANR	729284	CallExpression	chained_parent_ad -> Lookup ( name )		729223	0					
ANR	729285	Callee	chained_parent_ad -> Lookup		729223	0					
ANR	729286	PtrMemberAccess	chained_parent_ad -> Lookup		729223	0					
ANR	729287	Identifier	chained_parent_ad		729223	0					
ANR	729288	Identifier	Lookup		729223	1					
ANR	729289	ArgumentList	name		729223	1					
ANR	729290	Argument	name		729223	0					
ANR	729291	Identifier	name		729223	0					
ANR	729292	Identifier	NULL		729223	1					
ANR	729293	CompoundStatement		17:2:556:577	729223	1					
ANR	729294	IdentifierDeclStatement	Value undefined_value ;	509:2:11690:11711	729223	0	True				
ANR	729295	IdentifierDecl	undefined_value		729223	0					
ANR	729296	IdentifierDeclType	Value		729223	0					
ANR	729297	Identifier	undefined_value		729223	1					
ANR	729298	ExpressionStatement	undefined_value . SetUndefinedValue ( )	511:2:11718:11753	729223	1	True				
ANR	729299	CallExpression	undefined_value . SetUndefinedValue ( )		729223	0					
ANR	729300	Callee	undefined_value . SetUndefinedValue		729223	0					
ANR	729301	MemberAccess	undefined_value . SetUndefinedValue		729223	0					
ANR	729302	Identifier	undefined_value		729223	0					
ANR	729303	Identifier	SetUndefinedValue		729223	1					
ANR	729304	ArgumentList			729223	1					
ANR	729305	ExpressionStatement	deleted_attribute = true	512:2:11757:11781	729223	2	True				
ANR	729306	AssignmentExpression	deleted_attribute = true		729223	0		=			
ANR	729307	Identifier	deleted_attribute		729223	0					
ANR	729308	Identifier	true		729223	1					
ANR	729309	ExpressionStatement	"Insert ( name , Literal :: MakeLiteral ( undefined_value ) )"	513:2:11785:11836	729223	3	True				
ANR	729310	CallExpression	"Insert ( name , Literal :: MakeLiteral ( undefined_value ) )"		729223	0					
ANR	729311	Callee	Insert		729223	0					
ANR	729312	Identifier	Insert		729223	0					
ANR	729313	ArgumentList	name		729223	1					
ANR	729314	Argument	name		729223	0					
ANR	729315	Identifier	name		729223	0					
ANR	729316	Argument	Literal :: MakeLiteral ( undefined_value )		729223	1					
ANR	729317	CallExpression	Literal :: MakeLiteral ( undefined_value )		729223	0					
ANR	729318	Callee	Literal :: MakeLiteral		729223	0					
ANR	729319	Identifier	Literal :: MakeLiteral		729223	0					
ANR	729320	ArgumentList	undefined_value		729223	1					
ANR	729321	Argument	undefined_value		729223	0					
ANR	729322	Identifier	undefined_value		729223	0					
ANR	729323	IfStatement	if ( ! deleted_attribute )		729223	5					
ANR	729324	Condition	! deleted_attribute	516:5:11847:11864	729223	0	True				
ANR	729325	UnaryOperationExpression	! deleted_attribute		729223	0					
ANR	729326	UnaryOperator	!		729223	0					
ANR	729327	Identifier	deleted_attribute		729223	1					
ANR	729328	CompoundStatement		24:25:733:733	729223	1					
ANR	729329	ExpressionStatement	CondorErrno = ERR_MISSING_ATTRIBUTE	517:2:11871:11906	729223	0	True				
ANR	729330	AssignmentExpression	CondorErrno = ERR_MISSING_ATTRIBUTE		729223	0		=			
ANR	729331	Identifier	CondorErrno		729223	0					
ANR	729332	Identifier	ERR_MISSING_ATTRIBUTE		729223	1					
ANR	729333	ExpressionStatement	"CondorErrMsg = ""attribute "" + name + "" not found to be deleted"""	518:2:11910:11973	729223	1	True				
ANR	729334	AssignmentExpression	"CondorErrMsg = ""attribute "" + name + "" not found to be deleted"""		729223	0		=			
ANR	729335	Identifier	CondorErrMsg		729223	0					
ANR	729336	AdditiveExpression	"""attribute "" + name + "" not found to be deleted"""		729223	1		+			
ANR	729337	PrimaryExpression	"""attribute """		729223	0					
ANR	729338	AdditiveExpression	"name + "" not found to be deleted"""		729223	1		+			
ANR	729339	Identifier	name		729223	0					
ANR	729340	PrimaryExpression	""" not found to be deleted"""		729223	1					
ANR	729341	ReturnStatement	return deleted_attribute ;	521:1:11980:12004	729223	6	True				
ANR	729342	Identifier	deleted_attribute		729223	0					
ANR	729343	ReturnType	bool		729223	1					
ANR	729344	Identifier	ClassAd :: Delete		729223	2					
ANR	729345	ParameterList	const string & name		729223	3					
ANR	729346	Parameter	const string & name	492:8:11112:11129	729223	0	True				
ANR	729347	ParameterType	const string &		729223	0					
ANR	729348	Identifier	name		729223	1					
ANR	729349	CFGEntryNode	ENTRY		729223		True				
ANR	729350	CFGExitNode	EXIT		729223		True				
ANR	729351	Symbol	Literal :: MakeLiteral		729223						
ANR	729352	Symbol	NULL		729223						
ANR	729353	Symbol	itr		729223						
ANR	729354	Symbol	ERR_MISSING_ATTRIBUTE		729223						
ANR	729355	Symbol	false		729223						
ANR	729356	Symbol	chained_parent_ad -> Lookup		729223						
ANR	729357	Symbol	undefined_value		729223						
ANR	729358	Symbol	attrList		729223						
ANR	729359	Symbol	CondorErrno		729223						
ANR	729360	Symbol	attrList . end		729223						
ANR	729361	Symbol	CondorErrMsg		729223						
ANR	729362	Symbol	chained_parent_ad		729223						
ANR	729363	Symbol	name		729223						
ANR	729364	Symbol	true		729223						
ANR	729365	Symbol	deleted_attribute		729223						
ANR	729366	Symbol	attrList . find		729223						
ANR	729367	Symbol	* chained_parent_ad		729223						
ANR	729368	Function	ClassAd :: DeepDelete	524:0:12009:12182							
ANR	729369	FunctionDef	"ClassAd :: DeepDelete (ExprTree * scopeExpr , const string & name)"		729368	0					
ANR	729370	CompoundStatement		526:0:12078:12182	729368	0					
ANR	729371	IdentifierDeclStatement	ClassAd * ad = _GetDeepScope ( scopeExpr ) ;	527:1:12081:12121	729368	0	True				
ANR	729372	IdentifierDecl	* ad = _GetDeepScope ( scopeExpr )		729368	0					
ANR	729373	IdentifierDeclType	ClassAd *		729368	0					
ANR	729374	Identifier	ad		729368	1					
ANR	729375	AssignmentExpression	* ad = _GetDeepScope ( scopeExpr )		729368	2		=			
ANR	729376	Identifier	ad		729368	0					
ANR	729377	CallExpression	_GetDeepScope ( scopeExpr )		729368	1					
ANR	729378	Callee	_GetDeepScope		729368	0					
ANR	729379	Identifier	_GetDeepScope		729368	0					
ANR	729380	ArgumentList	scopeExpr		729368	1					
ANR	729381	Argument	scopeExpr		729368	0					
ANR	729382	Identifier	scopeExpr		729368	0					
ANR	729383	IfStatement	if ( ! ad )		729368	1					
ANR	729384	Condition	! ad	528:5:12128:12130	729368	0	True				
ANR	729385	UnaryOperationExpression	! ad		729368	0					
ANR	729386	UnaryOperator	!		729368	0					
ANR	729387	Identifier	ad		729368	1					
ANR	729388	ReturnStatement	return ( false ) ;	528:11:12134:12149	729368	1	True				
ANR	729389	Identifier	false		729368	0					
ANR	729390	ReturnStatement	return ( ad -> Delete ( name ) ) ;	529:1:12152:12180	729368	2	True				
ANR	729391	CallExpression	ad -> Delete ( name )		729368	0					
ANR	729392	Callee	ad -> Delete		729368	0					
ANR	729393	PtrMemberAccess	ad -> Delete		729368	0					
ANR	729394	Identifier	ad		729368	0					
ANR	729395	Identifier	Delete		729368	1					
ANR	729396	ArgumentList	name		729368	1					
ANR	729397	Argument	name		729368	0					
ANR	729398	Identifier	name		729368	0					
ANR	729399	ReturnType	bool		729368	1					
ANR	729400	Identifier	ClassAd :: DeepDelete		729368	2					
ANR	729401	ParameterList	"ExprTree * scopeExpr , const string & name"		729368	3					
ANR	729402	Parameter	ExprTree * scopeExpr	525:12:12036:12054	729368	0	True				
ANR	729403	ParameterType	ExprTree *		729368	0					
ANR	729404	Identifier	scopeExpr		729368	1					
ANR	729405	Parameter	const string & name	525:33:12057:12074	729368	1	True				
ANR	729406	ParameterType	const string &		729368	0					
ANR	729407	Identifier	name		729368	1					
ANR	729408	CFGEntryNode	ENTRY		729368		True				
ANR	729409	CFGExitNode	EXIT		729368		True				
ANR	729410	Symbol	ad		729368						
ANR	729411	Symbol	name		729368						
ANR	729412	Symbol	false		729368						
ANR	729413	Symbol	* ad		729368						
ANR	729414	Symbol	ad -> Delete		729368						
ANR	729415	Symbol	scopeExpr		729368						
ANR	729416	Symbol	_GetDeepScope		729368						
ANR	729417	Function	ClassAd :: Remove	536:0:12244:13037							
ANR	729418	FunctionDef	ClassAd :: Remove (const string & name)		729417	0					
ANR	729419	CompoundStatement		538:0:12293:13037	729417	0					
ANR	729420	IdentifierDeclStatement	ExprTree * tree ;	539:1:12296:12310	729417	0	True				
ANR	729421	IdentifierDecl	* tree		729417	0					
ANR	729422	IdentifierDeclType	ExprTree *		729417	0					
ANR	729423	Identifier	tree		729417	1					
ANR	729424	ExpressionStatement	tree = NULL	541:1:12314:12325	729417	1	True				
ANR	729425	AssignmentExpression	tree = NULL		729417	0		=			
ANR	729426	Identifier	tree		729417	0					
ANR	729427	Identifier	NULL		729417	1					
ANR	729428	IdentifierDeclStatement	AttrList :: iterator itr = attrList . find ( name ) ;	542:1:12328:12374	729417	2	True				
ANR	729429	IdentifierDecl	itr = attrList . find ( name )		729417	0					
ANR	729430	IdentifierDeclType	AttrList :: iterator		729417	0					
ANR	729431	Identifier	itr		729417	1					
ANR	729432	AssignmentExpression	itr = attrList . find ( name )		729417	2		=			
ANR	729433	Identifier	itr		729417	0					
ANR	729434	CallExpression	attrList . find ( name )		729417	1					
ANR	729435	Callee	attrList . find		729417	0					
ANR	729436	MemberAccess	attrList . find		729417	0					
ANR	729437	Identifier	attrList		729417	0					
ANR	729438	Identifier	find		729417	1					
ANR	729439	ArgumentList	name		729417	1					
ANR	729440	Argument	name		729417	0					
ANR	729441	Identifier	name		729417	0					
ANR	729442	IfStatement	if ( itr != attrList . end ( ) )		729417	3					
ANR	729443	Condition	itr != attrList . end ( )	543:5:12381:12402	729417	0	True				
ANR	729444	EqualityExpression	itr != attrList . end ( )		729417	0		!=			
ANR	729445	Identifier	itr		729417	0					
ANR	729446	CallExpression	attrList . end ( )		729417	1					
ANR	729447	Callee	attrList . end		729417	0					
ANR	729448	MemberAccess	attrList . end		729417	0					
ANR	729449	Identifier	attrList		729417	0					
ANR	729450	Identifier	end		729417	1					
ANR	729451	ArgumentList			729417	1					
ANR	729452	CompoundStatement		6:30:112:112	729417	1					
ANR	729453	ExpressionStatement	tree = itr -> second	544:2:12410:12428	729417	0	True				
ANR	729454	AssignmentExpression	tree = itr -> second		729417	0		=			
ANR	729455	Identifier	tree		729417	0					
ANR	729456	PtrMemberAccess	itr -> second		729417	1					
ANR	729457	Identifier	itr		729417	0					
ANR	729458	Identifier	second		729417	1					
ANR	729459	ExpressionStatement	attrList . erase ( itr )	545:2:12432:12453	729417	1	True				
ANR	729460	CallExpression	attrList . erase ( itr )		729417	0					
ANR	729461	Callee	attrList . erase		729417	0					
ANR	729462	MemberAccess	attrList . erase		729417	0					
ANR	729463	Identifier	attrList		729417	0					
ANR	729464	Identifier	erase		729417	1					
ANR	729465	ArgumentList	itr		729417	1					
ANR	729466	Argument	itr		729417	0					
ANR	729467	Identifier	itr		729417	0					
ANR	729468	ExpressionStatement	tree -> SetParentScope ( NULL )	546:2:12457:12485	729417	2	True				
ANR	729469	CallExpression	tree -> SetParentScope ( NULL )		729417	0					
ANR	729470	Callee	tree -> SetParentScope		729417	0					
ANR	729471	PtrMemberAccess	tree -> SetParentScope		729417	0					
ANR	729472	Identifier	tree		729417	0					
ANR	729473	Identifier	SetParentScope		729417	1					
ANR	729474	ArgumentList	NULL		729417	1					
ANR	729475	Argument	NULL		729417	0					
ANR	729476	Identifier	NULL		729417	0					
ANR	729477	IfStatement	if ( chained_parent_ad != NULL && chained_parent_ad -> Lookup ( name ) != NULL )		729417	4					
ANR	729478	Condition	chained_parent_ad != NULL && chained_parent_ad -> Lookup ( name ) != NULL	553:5:12754:12823	729417	0	True				
ANR	729479	AndExpression	chained_parent_ad != NULL && chained_parent_ad -> Lookup ( name ) != NULL		729417	0		&&			
ANR	729480	EqualityExpression	chained_parent_ad != NULL		729417	0		!=			
ANR	729481	Identifier	chained_parent_ad		729417	0					
ANR	729482	Identifier	NULL		729417	1					
ANR	729483	EqualityExpression	chained_parent_ad -> Lookup ( name ) != NULL		729417	1		!=			
ANR	729484	CallExpression	chained_parent_ad -> Lookup ( name )		729417	0					
ANR	729485	Callee	chained_parent_ad -> Lookup		729417	0					
ANR	729486	PtrMemberAccess	chained_parent_ad -> Lookup		729417	0					
ANR	729487	Identifier	chained_parent_ad		729417	0					
ANR	729488	Identifier	Lookup		729417	1					
ANR	729489	ArgumentList	name		729417	1					
ANR	729490	Argument	name		729417	0					
ANR	729491	Identifier	name		729417	0					
ANR	729492	Identifier	NULL		729417	1					
ANR	729493	CompoundStatement		23:2:609:630	729417	1					
ANR	729494	IfStatement	if ( tree == NULL )		729417	0					
ANR	729495	Condition	tree == NULL	556:6:12835:12846	729417	0	True				
ANR	729496	EqualityExpression	tree == NULL		729417	0		==			
ANR	729497	Identifier	tree		729417	0					
ANR	729498	Identifier	NULL		729417	1					
ANR	729499	CompoundStatement		19:20:555:555	729417	1					
ANR	729500	ExpressionStatement	tree = chained_parent_ad -> Lookup ( name )	557:3:12854:12892	729417	0	True				
ANR	729501	AssignmentExpression	tree = chained_parent_ad -> Lookup ( name )		729417	0		=			
ANR	729502	Identifier	tree		729417	0					
ANR	729503	CallExpression	chained_parent_ad -> Lookup ( name )		729417	1					
ANR	729504	Callee	chained_parent_ad -> Lookup		729417	0					
ANR	729505	PtrMemberAccess	chained_parent_ad -> Lookup		729417	0					
ANR	729506	Identifier	chained_parent_ad		729417	0					
ANR	729507	Identifier	Lookup		729417	1					
ANR	729508	ArgumentList	name		729417	1					
ANR	729509	Argument	name		729417	0					
ANR	729510	Identifier	name		729417	0					
ANR	729511	IdentifierDeclStatement	Value undefined_value ;	560:2:12903:12924	729417	1	True				
ANR	729512	IdentifierDecl	undefined_value		729417	0					
ANR	729513	IdentifierDeclType	Value		729417	0					
ANR	729514	Identifier	undefined_value		729417	1					
ANR	729515	ExpressionStatement	undefined_value . SetUndefinedValue ( )	561:2:12928:12963	729417	2	True				
ANR	729516	CallExpression	undefined_value . SetUndefinedValue ( )		729417	0					
ANR	729517	Callee	undefined_value . SetUndefinedValue		729417	0					
ANR	729518	MemberAccess	undefined_value . SetUndefinedValue		729417	0					
ANR	729519	Identifier	undefined_value		729417	0					
ANR	729520	Identifier	SetUndefinedValue		729417	1					
ANR	729521	ArgumentList			729417	1					
ANR	729522	ExpressionStatement	"Insert ( name , Literal :: MakeLiteral ( undefined_value ) )"	562:2:12967:13018	729417	3	True				
ANR	729523	CallExpression	"Insert ( name , Literal :: MakeLiteral ( undefined_value ) )"		729417	0					
ANR	729524	Callee	Insert		729417	0					
ANR	729525	Identifier	Insert		729417	0					
ANR	729526	ArgumentList	name		729417	1					
ANR	729527	Argument	name		729417	0					
ANR	729528	Identifier	name		729417	0					
ANR	729529	Argument	Literal :: MakeLiteral ( undefined_value )		729417	1					
ANR	729530	CallExpression	Literal :: MakeLiteral ( undefined_value )		729417	0					
ANR	729531	Callee	Literal :: MakeLiteral		729417	0					
ANR	729532	Identifier	Literal :: MakeLiteral		729417	0					
ANR	729533	ArgumentList	undefined_value		729417	1					
ANR	729534	Argument	undefined_value		729417	0					
ANR	729535	Identifier	undefined_value		729417	0					
ANR	729536	ReturnStatement	return tree ;	564:1:13024:13035	729417	5	True				
ANR	729537	Identifier	tree		729417	0					
ANR	729538	ReturnType	ExprTree *		729417	1					
ANR	729539	Identifier	ClassAd :: Remove		729417	2					
ANR	729540	ParameterList	const string & name		729417	3					
ANR	729541	Parameter	const string & name	537:8:12272:12289	729417	0	True				
ANR	729542	ParameterType	const string &		729417	0					
ANR	729543	Identifier	name		729417	1					
ANR	729544	CFGEntryNode	ENTRY		729417		True				
ANR	729545	CFGExitNode	EXIT		729417		True				
ANR	729546	Symbol	Literal :: MakeLiteral		729417						
ANR	729547	Symbol	NULL		729417						
ANR	729548	Symbol	itr		729417						
ANR	729549	Symbol	tree		729417						
ANR	729550	Symbol	chained_parent_ad -> Lookup		729417						
ANR	729551	Symbol	undefined_value		729417						
ANR	729552	Symbol	attrList		729417						
ANR	729553	Symbol	* itr		729417						
ANR	729554	Symbol	attrList . end		729417						
ANR	729555	Symbol	chained_parent_ad		729417						
ANR	729556	Symbol	name		729417						
ANR	729557	Symbol	attrList . find		729417						
ANR	729558	Symbol	* chained_parent_ad		729417						
ANR	729559	Symbol	itr -> second		729417						
ANR	729560	Function	ClassAd :: DeepRemove	567:0:13040:13228							
ANR	729561	FunctionDef	"ClassAd :: DeepRemove (ExprTree * scopeExpr , const string & name)"		729560	0					
ANR	729562	CompoundStatement		569:0:13114:13228	729560	0					
ANR	729563	IdentifierDeclStatement	ClassAd * ad = _GetDeepScope ( scopeExpr ) ;	570:1:13117:13157	729560	0	True				
ANR	729564	IdentifierDecl	* ad = _GetDeepScope ( scopeExpr )		729560	0					
ANR	729565	IdentifierDeclType	ClassAd *		729560	0					
ANR	729566	Identifier	ad		729560	1					
ANR	729567	AssignmentExpression	* ad = _GetDeepScope ( scopeExpr )		729560	2		=			
ANR	729568	Identifier	ad		729560	0					
ANR	729569	CallExpression	_GetDeepScope ( scopeExpr )		729560	1					
ANR	729570	Callee	_GetDeepScope		729560	0					
ANR	729571	Identifier	_GetDeepScope		729560	0					
ANR	729572	ArgumentList	scopeExpr		729560	1					
ANR	729573	Argument	scopeExpr		729560	0					
ANR	729574	Identifier	scopeExpr		729560	0					
ANR	729575	IfStatement	if ( ! ad )		729560	1					
ANR	729576	Condition	! ad	571:5:13164:13166	729560	0	True				
ANR	729577	UnaryOperationExpression	! ad		729560	0					
ANR	729578	UnaryOperator	!		729560	0					
ANR	729579	Identifier	ad		729560	1					
ANR	729580	ReturnStatement	return ( ( ExprTree * ) NULL ) ;	571:11:13170:13195	729560	1	True				
ANR	729581	CastExpression	( ExprTree * ) NULL		729560	0					
ANR	729582	CastTarget	ExprTree *		729560	0					
ANR	729583	Identifier	NULL		729560	1					
ANR	729584	ReturnStatement	return ( ad -> Remove ( name ) ) ;	572:1:13198:13226	729560	2	True				
ANR	729585	CallExpression	ad -> Remove ( name )		729560	0					
ANR	729586	Callee	ad -> Remove		729560	0					
ANR	729587	PtrMemberAccess	ad -> Remove		729560	0					
ANR	729588	Identifier	ad		729560	0					
ANR	729589	Identifier	Remove		729560	1					
ANR	729590	ArgumentList	name		729560	1					
ANR	729591	Argument	name		729560	0					
ANR	729592	Identifier	name		729560	0					
ANR	729593	ReturnType	ExprTree *		729560	1					
ANR	729594	Identifier	ClassAd :: DeepRemove		729560	2					
ANR	729595	ParameterList	"ExprTree * scopeExpr , const string & name"		729560	3					
ANR	729596	Parameter	ExprTree * scopeExpr	568:12:13072:13090	729560	0	True				
ANR	729597	ParameterType	ExprTree *		729560	0					
ANR	729598	Identifier	scopeExpr		729560	1					
ANR	729599	Parameter	const string & name	568:33:13093:13110	729560	1	True				
ANR	729600	ParameterType	const string &		729560	0					
ANR	729601	Identifier	name		729560	1					
ANR	729602	CFGEntryNode	ENTRY		729560		True				
ANR	729603	CFGExitNode	EXIT		729560		True				
ANR	729604	Symbol	ad		729560						
ANR	729605	Symbol	NULL		729560						
ANR	729606	Symbol	name		729560						
ANR	729607	Symbol	* ad		729560						
ANR	729608	Symbol	scopeExpr		729560						
ANR	729609	Symbol	ad -> Remove		729560						
ANR	729610	Symbol	_GetDeepScope		729560						
ANR	729611	Function	ClassAd :: Update	585:0:13443:13676							
ANR	729612	FunctionDef	ClassAd :: Update (const ClassAd & ad)		729611	0					
ANR	729613	CompoundStatement		587:0:13486:13676	729611	0					
ANR	729614	IdentifierDeclStatement	AttrList :: const_iterator itr ;	588:1:13489:13517	729611	0	True				
ANR	729615	IdentifierDecl	itr		729611	0					
ANR	729616	IdentifierDeclType	AttrList :: const_iterator		729611	0					
ANR	729617	Identifier	itr		729611	1					
ANR	729618	ForStatement	for ( itr = ad . attrList . begin ( ) ; itr != ad . attrList . end ( ) ; itr ++ )		729611	1					
ANR	729619	ForInit	itr = ad . attrList . begin ( ) ;	589:6:13525:13549	729611	0	True				
ANR	729620	AssignmentExpression	itr = ad . attrList . begin ( )		729611	0		=			
ANR	729621	Identifier	itr		729611	0					
ANR	729622	CallExpression	ad . attrList . begin ( )		729611	1					
ANR	729623	Callee	ad . attrList . begin		729611	0					
ANR	729624	MemberAccess	ad . attrList . begin		729611	0					
ANR	729625	MemberAccess	ad . attrList		729611	0					
ANR	729626	Identifier	ad		729611	0					
ANR	729627	Identifier	attrList		729611	1					
ANR	729628	Identifier	begin		729611	1					
ANR	729629	ArgumentList			729611	1					
ANR	729630	Condition	itr != ad . attrList . end ( )	589:32:13551:13573	729611	1	True				
ANR	729631	EqualityExpression	itr != ad . attrList . end ( )		729611	0		!=			
ANR	729632	Identifier	itr		729611	0					
ANR	729633	CallExpression	ad . attrList . end ( )		729611	1					
ANR	729634	Callee	ad . attrList . end		729611	0					
ANR	729635	MemberAccess	ad . attrList . end		729611	0					
ANR	729636	MemberAccess	ad . attrList		729611	0					
ANR	729637	Identifier	ad		729611	0					
ANR	729638	Identifier	attrList		729611	1					
ANR	729639	Identifier	end		729611	1					
ANR	729640	ArgumentList			729611	1					
ANR	729641	PostIncDecOperationExpression	itr ++	589:57:13576:13580	729611	2	True				
ANR	729642	Identifier	itr		729611	0					
ANR	729643	IncDec	++		729611	1					
ANR	729644	CompoundStatement		3:65:97:97	729611	3					
ANR	729645	IfStatement	"if ( ! Insert ( itr -> first , itr -> second -> Copy ( ) ) )"		729611	0					
ANR	729646	Condition	"! Insert ( itr -> first , itr -> second -> Copy ( ) )"	590:5:13591:13633	729611	0	True				
ANR	729647	UnaryOperationExpression	"! Insert ( itr -> first , itr -> second -> Copy ( ) )"		729611	0					
ANR	729648	UnaryOperator	!		729611	0					
ANR	729649	CallExpression	"Insert ( itr -> first , itr -> second -> Copy ( ) )"		729611	1					
ANR	729650	Callee	Insert		729611	0					
ANR	729651	Identifier	Insert		729611	0					
ANR	729652	ArgumentList	itr -> first		729611	1					
ANR	729653	Argument	itr -> first		729611	0					
ANR	729654	PtrMemberAccess	itr -> first		729611	0					
ANR	729655	Identifier	itr		729611	0					
ANR	729656	Identifier	first		729611	1					
ANR	729657	Argument	itr -> second -> Copy ( )		729611	1					
ANR	729658	CallExpression	itr -> second -> Copy ( )		729611	0					
ANR	729659	Callee	itr -> second -> Copy		729611	0					
ANR	729660	PtrMemberAccess	itr -> second -> Copy		729611	0					
ANR	729661	PtrMemberAccess	itr -> second		729611	0					
ANR	729662	Identifier	itr		729611	0					
ANR	729663	Identifier	second		729611	1					
ANR	729664	Identifier	Copy		729611	1					
ANR	729665	ArgumentList			729611	1					
ANR	729666	CompoundStatement		4:50:149:149	729611	1					
ANR	729667	ReturnStatement	return false ;	591:3:13641:13653	729611	0	True				
ANR	729668	Identifier	false		729611	0					
ANR	729669	ReturnStatement	return true ;	594:1:13663:13674	729611	2	True				
ANR	729670	Identifier	true		729611	0					
ANR	729671	ReturnType	bool		729611	1					
ANR	729672	Identifier	ClassAd :: Update		729611	2					
ANR	729673	ParameterList	const ClassAd & ad		729611	3					
ANR	729674	Parameter	const ClassAd & ad	586:8:13466:13482	729611	0	True				
ANR	729675	ParameterType	const ClassAd &		729611	0					
ANR	729676	Identifier	ad		729611	1					
ANR	729677	CFGEntryNode	ENTRY		729611		True				
ANR	729678	CFGExitNode	EXIT		729611		True				
ANR	729679	Symbol	ad		729611						
ANR	729680	Symbol	itr		729611						
ANR	729681	Symbol	ad . attrList . begin		729611						
ANR	729682	Symbol	false		729611						
ANR	729683	Symbol	Insert		729611						
ANR	729684	Symbol	* itr		729611						
ANR	729685	Symbol	ad . attrList . end		729611						
ANR	729686	Symbol	true		729611						
ANR	729687	Symbol	* itr -> second		729611						
ANR	729688	Symbol	* * itr		729611						
ANR	729689	Symbol	itr -> first		729611						
ANR	729690	Symbol	ad . attrList		729611						
ANR	729691	Symbol	itr -> second -> Copy		729611						
ANR	729692	Symbol	itr -> second		729611						
ANR	729693	Function	ClassAd :: Modify	597:0:13679:15604							
ANR	729694	FunctionDef	ClassAd :: Modify (ClassAd & mod)		729693	0					
ANR	729695	CompoundStatement		599:0:13717:15604	729693	0					
ANR	729696	IdentifierDeclStatement	ClassAd * ctx ;	600:1:13720:13734	729693	0	True				
ANR	729697	IdentifierDecl	* ctx		729693	0					
ANR	729698	IdentifierDeclType	ClassAd *		729693	0					
ANR	729699	Identifier	ctx		729693	1					
ANR	729700	IdentifierDeclStatement	const ExprTree * expr ;	601:1:13737:13757	729693	1	True				
ANR	729701	IdentifierDecl	* expr		729693	0					
ANR	729702	IdentifierDeclType	const ExprTree *		729693	0					
ANR	729703	Identifier	expr		729693	1					
ANR	729704	IdentifierDeclStatement	Value val ;	602:1:13760:13771	729693	2	True				
ANR	729705	IdentifierDecl	val		729693	0					
ANR	729706	IdentifierDeclType	Value		729693	0					
ANR	729707	Identifier	val		729693	1					
ANR	729708	IfStatement	if ( ( expr = mod . Lookup ( ATTR_CONTEXT ) ) != NULL )		729693	3					
ANR	729709	Condition	( expr = mod . Lookup ( ATTR_CONTEXT ) ) != NULL	605:5:13811:13855	729693	0	True				
ANR	729710	EqualityExpression	( expr = mod . Lookup ( ATTR_CONTEXT ) ) != NULL		729693	0		!=			
ANR	729711	AssignmentExpression	expr = mod . Lookup ( ATTR_CONTEXT )		729693	0		=			
ANR	729712	Identifier	expr		729693	0					
ANR	729713	CallExpression	mod . Lookup ( ATTR_CONTEXT )		729693	1					
ANR	729714	Callee	mod . Lookup		729693	0					
ANR	729715	MemberAccess	mod . Lookup		729693	0					
ANR	729716	Identifier	mod		729693	0					
ANR	729717	Identifier	Lookup		729693	1					
ANR	729718	ArgumentList	ATTR_CONTEXT		729693	1					
ANR	729719	Argument	ATTR_CONTEXT		729693	0					
ANR	729720	Identifier	ATTR_CONTEXT		729693	0					
ANR	729721	Identifier	NULL		729693	1					
ANR	729722	CompoundStatement		7:53:141:141	729693	1					
ANR	729723	IfStatement	if ( ( ctx = _GetDeepScope ( ( ExprTree * ) expr ) ) == NULL )		729693	0					
ANR	729724	Condition	( ctx = _GetDeepScope ( ( ExprTree * ) expr ) ) == NULL	606:6:13867:13917	729693	0	True				
ANR	729725	EqualityExpression	( ctx = _GetDeepScope ( ( ExprTree * ) expr ) ) == NULL		729693	0		==			
ANR	729726	AssignmentExpression	ctx = _GetDeepScope ( ( ExprTree * ) expr )		729693	0		=			
ANR	729727	Identifier	ctx		729693	0					
ANR	729728	CallExpression	_GetDeepScope ( ( ExprTree * ) expr )		729693	1					
ANR	729729	Callee	_GetDeepScope		729693	0					
ANR	729730	Identifier	_GetDeepScope		729693	0					
ANR	729731	ArgumentList	( ExprTree * ) expr		729693	1					
ANR	729732	Argument	( ExprTree * ) expr		729693	0					
ANR	729733	CastExpression	( ExprTree * ) expr		729693	0					
ANR	729734	CastTarget	ExprTree *		729693	0					
ANR	729735	Identifier	expr		729693	1					
ANR	729736	Identifier	NULL		729693	1					
ANR	729737	CompoundStatement		8:60:203:203	729693	1					
ANR	729738	ReturnStatement	return ;	607:3:13926:13932	729693	0	True				
ANR	729739	ElseStatement	else		729693	0					
ANR	729740	CompoundStatement		11:8:228:228	729693	0					
ANR	729741	ExpressionStatement	ctx = this	610:2:13950:13960	729693	0	True				
ANR	729742	AssignmentExpression	ctx = this		729693	0		=			
ANR	729743	Identifier	ctx		729693	0					
ANR	729744	Identifier	this		729693	1					
ANR	729745	IfStatement	if ( ( expr = mod . Lookup ( ATTR_REPLACE ) ) != NULL )		729693	4					
ANR	729746	Condition	( expr = mod . Lookup ( ATTR_REPLACE ) ) != NULL	614:5:14011:14055	729693	0	True				
ANR	729747	EqualityExpression	( expr = mod . Lookup ( ATTR_REPLACE ) ) != NULL		729693	0		!=			
ANR	729748	AssignmentExpression	expr = mod . Lookup ( ATTR_REPLACE )		729693	0		=			
ANR	729749	Identifier	expr		729693	0					
ANR	729750	CallExpression	mod . Lookup ( ATTR_REPLACE )		729693	1					
ANR	729751	Callee	mod . Lookup		729693	0					
ANR	729752	MemberAccess	mod . Lookup		729693	0					
ANR	729753	Identifier	mod		729693	0					
ANR	729754	Identifier	Lookup		729693	1					
ANR	729755	ArgumentList	ATTR_REPLACE		729693	1					
ANR	729756	Argument	ATTR_REPLACE		729693	0					
ANR	729757	Identifier	ATTR_REPLACE		729693	0					
ANR	729758	Identifier	NULL		729693	1					
ANR	729759	CompoundStatement		17:2:345:356	729693	1					
ANR	729760	IdentifierDeclStatement	ClassAd * ad ;	615:2:14063:14074	729693	0	True				
ANR	729761	IdentifierDecl	* ad		729693	0					
ANR	729762	IdentifierDeclType	ClassAd *		729693	0					
ANR	729763	Identifier	ad		729693	1					
ANR	729764	IfStatement	if ( expr -> Evaluate ( val ) && val . IsClassAdValue ( ad ) )		729693	1					
ANR	729765	Condition	expr -> Evaluate ( val ) && val . IsClassAdValue ( ad )	616:6:14082:14130	729693	0	True				
ANR	729766	AndExpression	expr -> Evaluate ( val ) && val . IsClassAdValue ( ad )		729693	0		&&			
ANR	729767	CallExpression	expr -> Evaluate ( val )		729693	0					
ANR	729768	Callee	expr -> Evaluate		729693	0					
ANR	729769	PtrMemberAccess	expr -> Evaluate		729693	0					
ANR	729770	Identifier	expr		729693	0					
ANR	729771	Identifier	Evaluate		729693	1					
ANR	729772	ArgumentList	val		729693	1					
ANR	729773	Argument	val		729693	0					
ANR	729774	Identifier	val		729693	0					
ANR	729775	CallExpression	val . IsClassAdValue ( ad )		729693	1					
ANR	729776	Callee	val . IsClassAdValue		729693	0					
ANR	729777	MemberAccess	val . IsClassAdValue		729693	0					
ANR	729778	Identifier	val		729693	0					
ANR	729779	Identifier	IsClassAdValue		729693	1					
ANR	729780	ArgumentList	ad		729693	1					
ANR	729781	Argument	ad		729693	0					
ANR	729782	Identifier	ad		729693	0					
ANR	729783	CompoundStatement		18:58:416:416	729693	1					
ANR	729784	ExpressionStatement	ctx -> Clear ( )	617:3:14139:14152	729693	0	True				
ANR	729785	CallExpression	ctx -> Clear ( )		729693	0					
ANR	729786	Callee	ctx -> Clear		729693	0					
ANR	729787	PtrMemberAccess	ctx -> Clear		729693	0					
ANR	729788	Identifier	ctx		729693	0					
ANR	729789	Identifier	Clear		729693	1					
ANR	729790	ArgumentList			729693	1					
ANR	729791	ExpressionStatement	ctx -> Update ( * ad )	618:3:14157:14175	729693	1	True				
ANR	729792	CallExpression	ctx -> Update ( * ad )		729693	0					
ANR	729793	Callee	ctx -> Update		729693	0					
ANR	729794	PtrMemberAccess	ctx -> Update		729693	0					
ANR	729795	Identifier	ctx		729693	0					
ANR	729796	Identifier	Update		729693	1					
ANR	729797	ArgumentList	* ad		729693	1					
ANR	729798	Argument	* ad		729693	0					
ANR	729799	UnaryOperationExpression	* ad		729693	0					
ANR	729800	UnaryOperator	*		729693	0					
ANR	729801	Identifier	ad		729693	1					
ANR	729802	IfStatement	if ( ( expr = mod . Lookup ( ATTR_UPDATES ) ) != NULL )		729693	5					
ANR	729803	Condition	( expr = mod . Lookup ( ATTR_UPDATES ) ) != NULL	623:5:14230:14274	729693	0	True				
ANR	729804	EqualityExpression	( expr = mod . Lookup ( ATTR_UPDATES ) ) != NULL		729693	0		!=			
ANR	729805	AssignmentExpression	expr = mod . Lookup ( ATTR_UPDATES )		729693	0		=			
ANR	729806	Identifier	expr		729693	0					
ANR	729807	CallExpression	mod . Lookup ( ATTR_UPDATES )		729693	1					
ANR	729808	Callee	mod . Lookup		729693	0					
ANR	729809	MemberAccess	mod . Lookup		729693	0					
ANR	729810	Identifier	mod		729693	0					
ANR	729811	Identifier	Lookup		729693	1					
ANR	729812	ArgumentList	ATTR_UPDATES		729693	1					
ANR	729813	Argument	ATTR_UPDATES		729693	0					
ANR	729814	Identifier	ATTR_UPDATES		729693	0					
ANR	729815	Identifier	NULL		729693	1					
ANR	729816	CompoundStatement		26:2:564:575	729693	1					
ANR	729817	IdentifierDeclStatement	ClassAd * ad ;	624:2:14282:14293	729693	0	True				
ANR	729818	IdentifierDecl	* ad		729693	0					
ANR	729819	IdentifierDeclType	ClassAd *		729693	0					
ANR	729820	Identifier	ad		729693	1					
ANR	729821	IfStatement	if ( expr -> Evaluate ( val ) && val . IsClassAdValue ( ad ) )		729693	1					
ANR	729822	Condition	expr -> Evaluate ( val ) && val . IsClassAdValue ( ad )	625:6:14301:14349	729693	0	True				
ANR	729823	AndExpression	expr -> Evaluate ( val ) && val . IsClassAdValue ( ad )		729693	0		&&			
ANR	729824	CallExpression	expr -> Evaluate ( val )		729693	0					
ANR	729825	Callee	expr -> Evaluate		729693	0					
ANR	729826	PtrMemberAccess	expr -> Evaluate		729693	0					
ANR	729827	Identifier	expr		729693	0					
ANR	729828	Identifier	Evaluate		729693	1					
ANR	729829	ArgumentList	val		729693	1					
ANR	729830	Argument	val		729693	0					
ANR	729831	Identifier	val		729693	0					
ANR	729832	CallExpression	val . IsClassAdValue ( ad )		729693	1					
ANR	729833	Callee	val . IsClassAdValue		729693	0					
ANR	729834	MemberAccess	val . IsClassAdValue		729693	0					
ANR	729835	Identifier	val		729693	0					
ANR	729836	Identifier	IsClassAdValue		729693	1					
ANR	729837	ArgumentList	ad		729693	1					
ANR	729838	Argument	ad		729693	0					
ANR	729839	Identifier	ad		729693	0					
ANR	729840	CompoundStatement		27:58:635:635	729693	1					
ANR	729841	ExpressionStatement	ctx -> Update ( * ad )	626:3:14358:14376	729693	0	True				
ANR	729842	CallExpression	ctx -> Update ( * ad )		729693	0					
ANR	729843	Callee	ctx -> Update		729693	0					
ANR	729844	PtrMemberAccess	ctx -> Update		729693	0					
ANR	729845	Identifier	ctx		729693	0					
ANR	729846	Identifier	Update		729693	1					
ANR	729847	ArgumentList	* ad		729693	1					
ANR	729848	Argument	* ad		729693	0					
ANR	729849	UnaryOperationExpression	* ad		729693	0					
ANR	729850	UnaryOperator	*		729693	0					
ANR	729851	Identifier	ad		729693	1					
ANR	729852	IfStatement	if ( ( expr = mod . Lookup ( ATTR_DELETES ) ) != NULL )		729693	6					
ANR	729853	Condition	( expr = mod . Lookup ( ATTR_DELETES ) ) != NULL	631:5:14431:14475	729693	0	True				
ANR	729854	EqualityExpression	( expr = mod . Lookup ( ATTR_DELETES ) ) != NULL		729693	0		!=			
ANR	729855	AssignmentExpression	expr = mod . Lookup ( ATTR_DELETES )		729693	0		=			
ANR	729856	Identifier	expr		729693	0					
ANR	729857	CallExpression	mod . Lookup ( ATTR_DELETES )		729693	1					
ANR	729858	Callee	mod . Lookup		729693	0					
ANR	729859	MemberAccess	mod . Lookup		729693	0					
ANR	729860	Identifier	mod		729693	0					
ANR	729861	Identifier	Lookup		729693	1					
ANR	729862	ArgumentList	ATTR_DELETES		729693	1					
ANR	729863	Argument	ATTR_DELETES		729693	0					
ANR	729864	Identifier	ATTR_DELETES		729693	0					
ANR	729865	Identifier	NULL		729693	1					
ANR	729866	CompoundStatement		36:2:816:838	729693	1					
ANR	729867	IdentifierDeclStatement	const ExprList * list ;	632:2:14483:14505	729693	0	True				
ANR	729868	IdentifierDecl	* list		729693	0					
ANR	729869	IdentifierDeclType	const ExprList *		729693	0					
ANR	729870	Identifier	list		729693	1					
ANR	729871	IdentifierDeclStatement	ExprListIterator itor ;	633:2:14509:14530	729693	1	True				
ANR	729872	IdentifierDecl	itor		729693	0					
ANR	729873	IdentifierDeclType	ExprListIterator		729693	0					
ANR	729874	Identifier	itor		729693	1					
ANR	729875	IdentifierDeclStatement	const char * attrName ;	634:2:14534:14556	729693	2	True				
ANR	729876	IdentifierDecl	* attrName		729693	0					
ANR	729877	IdentifierDeclType	const char *		729693	0					
ANR	729878	Identifier	attrName		729693	1					
ANR	729879	IfStatement	if ( ! expr -> Evaluate ( val ) || ! val . IsListValue ( list ) )		729693	3					
ANR	729880	Condition	! expr -> Evaluate ( val ) || ! val . IsListValue ( list )	637:6:14631:14680	729693	0	True				
ANR	729881	OrExpression	! expr -> Evaluate ( val ) || ! val . IsListValue ( list )		729693	0		||			
ANR	729882	UnaryOperationExpression	! expr -> Evaluate ( val )		729693	0					
ANR	729883	UnaryOperator	!		729693	0					
ANR	729884	CallExpression	expr -> Evaluate ( val )		729693	1					
ANR	729885	Callee	expr -> Evaluate		729693	0					
ANR	729886	PtrMemberAccess	expr -> Evaluate		729693	0					
ANR	729887	Identifier	expr		729693	0					
ANR	729888	Identifier	Evaluate		729693	1					
ANR	729889	ArgumentList	val		729693	1					
ANR	729890	Argument	val		729693	0					
ANR	729891	Identifier	val		729693	0					
ANR	729892	UnaryOperationExpression	! val . IsListValue ( list )		729693	1					
ANR	729893	UnaryOperator	!		729693	0					
ANR	729894	CallExpression	val . IsListValue ( list )		729693	1					
ANR	729895	Callee	val . IsListValue		729693	0					
ANR	729896	MemberAccess	val . IsListValue		729693	0					
ANR	729897	Identifier	val		729693	0					
ANR	729898	Identifier	IsListValue		729693	1					
ANR	729899	ArgumentList	list		729693	1					
ANR	729900	Argument	list		729693	0					
ANR	729901	Identifier	list		729693	0					
ANR	729902	CompoundStatement		39:59:966:966	729693	1					
ANR	729903	ReturnStatement	return ;	638:3:14689:14695	729693	0	True				
ANR	729904	ExpressionStatement	itor . Initialize ( list )	640:2:14703:14726	729693	4	True				
ANR	729905	CallExpression	itor . Initialize ( list )		729693	0					
ANR	729906	Callee	itor . Initialize		729693	0					
ANR	729907	MemberAccess	itor . Initialize		729693	0					
ANR	729908	Identifier	itor		729693	0					
ANR	729909	Identifier	Initialize		729693	1					
ANR	729910	ArgumentList	list		729693	1					
ANR	729911	Argument	list		729693	0					
ANR	729912	Identifier	list		729693	0					
ANR	729913	WhileStatement	while ( ( expr = itor . CurrentExpr ( ) ) )		729693	5					
ANR	729914	Condition	expr = itor . CurrentExpr ( )	641:9:14737:14766	729693	0	True				
ANR	729915	AssignmentExpression	expr = itor . CurrentExpr ( )		729693	0		=			
ANR	729916	Identifier	expr		729693	0					
ANR	729917	CallExpression	itor . CurrentExpr ( )		729693	1					
ANR	729918	Callee	itor . CurrentExpr		729693	0					
ANR	729919	MemberAccess	itor . CurrentExpr		729693	0					
ANR	729920	Identifier	itor		729693	0					
ANR	729921	Identifier	CurrentExpr		729693	1					
ANR	729922	ArgumentList			729693	1					
ANR	729923	CompoundStatement		43:42:1052:1052	729693	1					
ANR	729924	IfStatement	if ( ! expr -> Evaluate ( val ) || ! val . IsStringValue ( attrName ) )		729693	0					
ANR	729925	Condition	! expr -> Evaluate ( val ) || ! val . IsStringValue ( attrName )	642:7:14779:14834	729693	0	True				
ANR	729926	OrExpression	! expr -> Evaluate ( val ) || ! val . IsStringValue ( attrName )		729693	0		||			
ANR	729927	UnaryOperationExpression	! expr -> Evaluate ( val )		729693	0					
ANR	729928	UnaryOperator	!		729693	0					
ANR	729929	CallExpression	expr -> Evaluate ( val )		729693	1					
ANR	729930	Callee	expr -> Evaluate		729693	0					
ANR	729931	PtrMemberAccess	expr -> Evaluate		729693	0					
ANR	729932	Identifier	expr		729693	0					
ANR	729933	Identifier	Evaluate		729693	1					
ANR	729934	ArgumentList	val		729693	1					
ANR	729935	Argument	val		729693	0					
ANR	729936	Identifier	val		729693	0					
ANR	729937	UnaryOperationExpression	! val . IsStringValue ( attrName )		729693	1					
ANR	729938	UnaryOperator	!		729693	0					
ANR	729939	CallExpression	val . IsStringValue ( attrName )		729693	1					
ANR	729940	Callee	val . IsStringValue		729693	0					
ANR	729941	MemberAccess	val . IsStringValue		729693	0					
ANR	729942	Identifier	val		729693	0					
ANR	729943	Identifier	IsStringValue		729693	1					
ANR	729944	ArgumentList	attrName		729693	1					
ANR	729945	Argument	attrName		729693	0					
ANR	729946	Identifier	attrName		729693	0					
ANR	729947	CompoundStatement		44:66:1120:1120	729693	1					
ANR	729948	ReturnStatement	return ;	643:4:14844:14850	729693	0	True				
ANR	729949	ExpressionStatement	itor . NextExpr ( )	645:3:14860:14876	729693	1	True				
ANR	729950	CallExpression	itor . NextExpr ( )		729693	0					
ANR	729951	Callee	itor . NextExpr		729693	0					
ANR	729952	MemberAccess	itor . NextExpr		729693	0					
ANR	729953	Identifier	itor		729693	0					
ANR	729954	Identifier	NextExpr		729693	1					
ANR	729955	ArgumentList			729693	1					
ANR	729956	ExpressionStatement	itor . Initialize ( list )	649:2:14946:14969	729693	6	True				
ANR	729957	CallExpression	itor . Initialize ( list )		729693	0					
ANR	729958	Callee	itor . Initialize		729693	0					
ANR	729959	MemberAccess	itor . Initialize		729693	0					
ANR	729960	Identifier	itor		729693	0					
ANR	729961	Identifier	Initialize		729693	1					
ANR	729962	ArgumentList	list		729693	1					
ANR	729963	Argument	list		729693	0					
ANR	729964	Identifier	list		729693	0					
ANR	729965	WhileStatement	while ( ( expr = itor . CurrentExpr ( ) ) )		729693	7					
ANR	729966	Condition	expr = itor . CurrentExpr ( )	650:9:14980:15009	729693	0	True				
ANR	729967	AssignmentExpression	expr = itor . CurrentExpr ( )		729693	0		=			
ANR	729968	Identifier	expr		729693	0					
ANR	729969	CallExpression	itor . CurrentExpr ( )		729693	1					
ANR	729970	Callee	itor . CurrentExpr		729693	0					
ANR	729971	MemberAccess	itor . CurrentExpr		729693	0					
ANR	729972	Identifier	itor		729693	0					
ANR	729973	Identifier	CurrentExpr		729693	1					
ANR	729974	ArgumentList			729693	1					
ANR	729975	CompoundStatement		52:42:1295:1295	729693	1					
ANR	729976	IfStatement	if ( expr -> Evaluate ( val ) && val . IsStringValue ( attrName ) )		729693	0					
ANR	729977	Condition	expr -> Evaluate ( val ) && val . IsStringValue ( attrName )	651:7:15022:15075	729693	0	True				
ANR	729978	AndExpression	expr -> Evaluate ( val ) && val . IsStringValue ( attrName )		729693	0		&&			
ANR	729979	CallExpression	expr -> Evaluate ( val )		729693	0					
ANR	729980	Callee	expr -> Evaluate		729693	0					
ANR	729981	PtrMemberAccess	expr -> Evaluate		729693	0					
ANR	729982	Identifier	expr		729693	0					
ANR	729983	Identifier	Evaluate		729693	1					
ANR	729984	ArgumentList	val		729693	1					
ANR	729985	Argument	val		729693	0					
ANR	729986	Identifier	val		729693	0					
ANR	729987	CallExpression	val . IsStringValue ( attrName )		729693	1					
ANR	729988	Callee	val . IsStringValue		729693	0					
ANR	729989	MemberAccess	val . IsStringValue		729693	0					
ANR	729990	Identifier	val		729693	0					
ANR	729991	Identifier	IsStringValue		729693	1					
ANR	729992	ArgumentList	attrName		729693	1					
ANR	729993	Argument	attrName		729693	0					
ANR	729994	Identifier	attrName		729693	0					
ANR	729995	CompoundStatement		53:64:1361:1361	729693	1					
ANR	729996	ExpressionStatement	ctx -> Delete ( attrName )	652:4:15085:15108	729693	0	True				
ANR	729997	CallExpression	ctx -> Delete ( attrName )		729693	0					
ANR	729998	Callee	ctx -> Delete		729693	0					
ANR	729999	PtrMemberAccess	ctx -> Delete		729693	0					
ANR	730000	Identifier	ctx		729693	0					
ANR	730001	Identifier	Delete		729693	1					
ANR	730002	ArgumentList	attrName		729693	1					
ANR	730003	Argument	attrName		729693	0					
ANR	730004	Identifier	attrName		729693	0					
ANR	730005	ExpressionStatement	itor . NextExpr ( )	654:3:15118:15134	729693	1	True				
ANR	730006	CallExpression	itor . NextExpr ( )		729693	0					
ANR	730007	Callee	itor . NextExpr		729693	0					
ANR	730008	MemberAccess	itor . NextExpr		729693	0					
ANR	730009	Identifier	itor		729693	0					
ANR	730010	Identifier	NextExpr		729693	1					
ANR	730011	ArgumentList			729693	1					
ANR	730012	ReturnType	void		729693	1					
ANR	730013	Identifier	ClassAd :: Modify		729693	2					
ANR	730014	ParameterList	ClassAd & mod		729693	3					
ANR	730015	Parameter	ClassAd & mod	598:8:13702:13713	729693	0	True				
ANR	730016	ParameterType	ClassAd &		729693	0					
ANR	730017	Identifier	mod		729693	1					
ANR	730018	CFGEntryNode	ENTRY		729693		True				
ANR	730019	CFGExitNode	EXIT		729693		True				
ANR	730020	Symbol	val		729693						
ANR	730021	Symbol	mod		729693						
ANR	730022	Symbol	mod . Lookup		729693						
ANR	730023	Symbol	NULL		729693						
ANR	730024	Symbol	ad		729693						
ANR	730025	Symbol	ATTR_REPLACE		729693						
ANR	730026	Symbol	val . IsStringValue		729693						
ANR	730027	Symbol	ctx		729693						
ANR	730028	Symbol	this		729693						
ANR	730029	Symbol	* ad		729693						
ANR	730030	Symbol	list		729693						
ANR	730031	Symbol	_GetDeepScope		729693						
ANR	730032	Symbol	ATTR_UPDATES		729693						
ANR	730033	Symbol	val . IsClassAdValue		729693						
ANR	730034	Symbol	* expr		729693						
ANR	730035	Symbol	ATTR_DELETES		729693						
ANR	730036	Symbol	expr -> Evaluate		729693						
ANR	730037	Symbol	expr		729693						
ANR	730038	Symbol	val . IsListValue		729693						
ANR	730039	Symbol	ATTR_CONTEXT		729693						
ANR	730040	Symbol	attrName		729693						
ANR	730041	Symbol	itor		729693						
ANR	730042	Symbol	itor . CurrentExpr		729693						
ANR	730043	Function	ClassAd :: Copy	682:0:15608:16234							
ANR	730044	FunctionDef	ClassAd :: Copy ()		730043	0					
ANR	730045	CompoundStatement		684:0:15642:16234	730043	0					
ANR	730046	IdentifierDeclStatement	ExprTree * tree ;	685:1:15645:15659	730043	0	True				
ANR	730047	IdentifierDecl	* tree		730043	0					
ANR	730048	IdentifierDeclType	ExprTree *		730043	0					
ANR	730049	Identifier	tree		730043	1					
ANR	730050	IdentifierDeclStatement	ClassAd * newAd = new ClassAd ( ) ;	686:1:15662:15692	730043	1	True				
ANR	730051	IdentifierDecl	* newAd = new ClassAd ( )		730043	0					
ANR	730052	IdentifierDeclType	ClassAd *		730043	0					
ANR	730053	Identifier	newAd		730043	1					
ANR	730054	AssignmentExpression	* newAd = new ClassAd ( )		730043	2		=			
ANR	730055	Identifier	newAd		730043	0					
ANR	730056	UnaryExpression	new ClassAd ( )		730043	1					
ANR	730057	IfStatement	if ( ! newAd )		730043	2					
ANR	730058	Condition	! newAd	688:5:15700:15705	730043	0	True				
ANR	730059	UnaryOperationExpression	! newAd		730043	0					
ANR	730060	UnaryOperator	!		730043	0					
ANR	730061	Identifier	newAd		730043	1					
ANR	730062	ReturnStatement	return NULL ;	688:14:15709:15720	730043	1	True				
ANR	730063	Identifier	NULL		730043	0					
ANR	730064	ExpressionStatement	newAd -> nodeKind = CLASSAD_NODE	689:1:15723:15753	730043	3	True				
ANR	730065	AssignmentExpression	newAd -> nodeKind = CLASSAD_NODE		730043	0		=			
ANR	730066	PtrMemberAccess	newAd -> nodeKind		730043	0					
ANR	730067	Identifier	newAd		730043	0					
ANR	730068	Identifier	nodeKind		730043	1					
ANR	730069	Identifier	CLASSAD_NODE		730043	1					
ANR	730070	ExpressionStatement	newAd -> parentScope = parentScope	690:1:15756:15788	730043	4	True				
ANR	730071	AssignmentExpression	newAd -> parentScope = parentScope		730043	0		=			
ANR	730072	PtrMemberAccess	newAd -> parentScope		730043	0					
ANR	730073	Identifier	newAd		730043	0					
ANR	730074	Identifier	parentScope		730043	1					
ANR	730075	Identifier	parentScope		730043	1					
ANR	730076	ExpressionStatement	newAd -> chained_parent_ad = chained_parent_ad	691:1:15791:15835	730043	5	True				
ANR	730077	AssignmentExpression	newAd -> chained_parent_ad = chained_parent_ad		730043	0		=			
ANR	730078	PtrMemberAccess	newAd -> chained_parent_ad		730043	0					
ANR	730079	Identifier	newAd		730043	0					
ANR	730080	Identifier	chained_parent_ad		730043	1					
ANR	730081	Identifier	chained_parent_ad		730043	1					
ANR	730082	ExpressionStatement	newAd -> DisableDirtyTracking ( )	693:1:15839:15868	730043	6	True				
ANR	730083	CallExpression	newAd -> DisableDirtyTracking ( )		730043	0					
ANR	730084	Callee	newAd -> DisableDirtyTracking		730043	0					
ANR	730085	PtrMemberAccess	newAd -> DisableDirtyTracking		730043	0					
ANR	730086	Identifier	newAd		730043	0					
ANR	730087	Identifier	DisableDirtyTracking		730043	1					
ANR	730088	ArgumentList			730043	1					
ANR	730089	IdentifierDeclStatement	AttrList :: const_iterator itr ;	695:1:15872:15900	730043	7	True				
ANR	730090	IdentifierDecl	itr		730043	0					
ANR	730091	IdentifierDeclType	AttrList :: const_iterator		730043	0					
ANR	730092	Identifier	itr		730043	1					
ANR	730093	ForStatement	for ( itr = attrList . begin ( ) ; itr != attrList . end ( ) ; itr ++ )		730043	8					
ANR	730094	ForInit	itr = attrList . begin ( ) ;	696:6:15908:15929	730043	0	True				
ANR	730095	AssignmentExpression	itr = attrList . begin ( )		730043	0		=			
ANR	730096	Identifier	itr		730043	0					
ANR	730097	CallExpression	attrList . begin ( )		730043	1					
ANR	730098	Callee	attrList . begin		730043	0					
ANR	730099	MemberAccess	attrList . begin		730043	0					
ANR	730100	Identifier	attrList		730043	0					
ANR	730101	Identifier	begin		730043	1					
ANR	730102	ArgumentList			730043	1					
ANR	730103	Condition	itr != attrList . end ( )	696:29:15931:15952	730043	1	True				
ANR	730104	EqualityExpression	itr != attrList . end ( )		730043	0		!=			
ANR	730105	Identifier	itr		730043	0					
ANR	730106	CallExpression	attrList . end ( )		730043	1					
ANR	730107	Callee	attrList . end		730043	0					
ANR	730108	MemberAccess	attrList . end		730043	0					
ANR	730109	Identifier	attrList		730043	0					
ANR	730110	Identifier	end		730043	1					
ANR	730111	ArgumentList			730043	1					
ANR	730112	PostIncDecOperationExpression	itr ++	696:53:15955:15959	730043	2	True				
ANR	730113	Identifier	itr		730043	0					
ANR	730114	IncDec	++		730043	1					
ANR	730115	CompoundStatement		13:61:320:320	730043	3					
ANR	730116	IfStatement	if ( ! ( tree = itr -> second -> Copy ( ) ) )		730043	0					
ANR	730117	Condition	! ( tree = itr -> second -> Copy ( ) )	697:6:15971:16002	730043	0	True				
ANR	730118	UnaryOperationExpression	! ( tree = itr -> second -> Copy ( ) )		730043	0					
ANR	730119	UnaryOperator	!		730043	0					
ANR	730120	AssignmentExpression	tree = itr -> second -> Copy ( )		730043	1		=			
ANR	730121	Identifier	tree		730043	0					
ANR	730122	CallExpression	itr -> second -> Copy ( )		730043	1					
ANR	730123	Callee	itr -> second -> Copy		730043	0					
ANR	730124	PtrMemberAccess	itr -> second -> Copy		730043	0					
ANR	730125	PtrMemberAccess	itr -> second		730043	0					
ANR	730126	Identifier	itr		730043	0					
ANR	730127	Identifier	second		730043	1					
ANR	730128	Identifier	Copy		730043	1					
ANR	730129	ArgumentList			730043	1					
ANR	730130	CompoundStatement		14:41:363:363	730043	1					
ANR	730131	Statement	delete	698:3:16011:16016	730043	0	True				
ANR	730132	ExpressionStatement	newAd	698:10:16018:16023	730043	1	True				
ANR	730133	Identifier	newAd		730043	0					
ANR	730134	ExpressionStatement	CondorErrno = ERR_MEM_ALLOC_FAILED	699:3:16028:16062	730043	2	True				
ANR	730135	AssignmentExpression	CondorErrno = ERR_MEM_ALLOC_FAILED		730043	0		=			
ANR	730136	Identifier	CondorErrno		730043	0					
ANR	730137	Identifier	ERR_MEM_ALLOC_FAILED		730043	1					
ANR	730138	ExpressionStatement	"CondorErrMsg = """""	700:3:16067:16084	730043	3	True				
ANR	730139	AssignmentExpression	"CondorErrMsg = """""		730043	0		=			
ANR	730140	Identifier	CondorErrMsg		730043	0					
ANR	730141	PrimaryExpression	""""""		730043	1					
ANR	730142	ReturnStatement	return ( NULL ) ;	701:3:16089:16103	730043	4	True				
ANR	730143	Identifier	NULL		730043	0					
ANR	730144	ExpressionStatement	tree -> SetParentScope ( newAd )	703:2:16111:16138	730043	1	True				
ANR	730145	CallExpression	tree -> SetParentScope ( newAd )		730043	0					
ANR	730146	Callee	tree -> SetParentScope		730043	0					
ANR	730147	PtrMemberAccess	tree -> SetParentScope		730043	0					
ANR	730148	Identifier	tree		730043	0					
ANR	730149	Identifier	SetParentScope		730043	1					
ANR	730150	ArgumentList	newAd		730043	1					
ANR	730151	Argument	newAd		730043	0					
ANR	730152	Identifier	newAd		730043	0					
ANR	730153	ExpressionStatement	newAd -> attrList [ itr -> first ] = tree	704:2:16149:16183	730043	2	True				
ANR	730154	AssignmentExpression	newAd -> attrList [ itr -> first ] = tree		730043	0		=			
ANR	730155	ArrayIndexing	newAd -> attrList [ itr -> first ]		730043	0					
ANR	730156	PtrMemberAccess	newAd -> attrList		730043	0					
ANR	730157	Identifier	newAd		730043	0					
ANR	730158	Identifier	attrList		730043	1					
ANR	730159	PtrMemberAccess	itr -> first		730043	1					
ANR	730160	Identifier	itr		730043	0					
ANR	730161	Identifier	first		730043	1					
ANR	730162	Identifier	tree		730043	1					
ANR	730163	ExpressionStatement	newAd -> EnableDirtyTracking ( )	706:1:16189:16217	730043	9	True				
ANR	730164	CallExpression	newAd -> EnableDirtyTracking ( )		730043	0					
ANR	730165	Callee	newAd -> EnableDirtyTracking		730043	0					
ANR	730166	PtrMemberAccess	newAd -> EnableDirtyTracking		730043	0					
ANR	730167	Identifier	newAd		730043	0					
ANR	730168	Identifier	EnableDirtyTracking		730043	1					
ANR	730169	ArgumentList			730043	1					
ANR	730170	ReturnStatement	return newAd ;	707:1:16220:16232	730043	10	True				
ANR	730171	Identifier	newAd		730043	0					
ANR	730172	ReturnType	ExprTree *		730043	1					
ANR	730173	Identifier	ClassAd :: Copy		730043	2					
ANR	730174	ParameterList			730043	3					
ANR	730175	CFGEntryNode	ENTRY		730043		True				
ANR	730176	CFGExitNode	EXIT		730043		True				
ANR	730177	Symbol	attrList . begin		730043						
ANR	730178	Symbol	newAd -> attrList		730043						
ANR	730179	Symbol	* * newAd		730043						
ANR	730180	Symbol	* itr -> first		730043						
ANR	730181	Symbol	chained_parent_ad		730043						
ANR	730182	Symbol	parentScope		730043						
ANR	730183	Symbol	newAd -> chained_parent_ad		730043						
ANR	730184	Symbol	* itr -> second		730043						
ANR	730185	Symbol	itr -> first		730043						
ANR	730186	Symbol	newAd		730043						
ANR	730187	Symbol	CLASSAD_NODE		730043						
ANR	730188	Symbol	itr -> second -> Copy		730043						
ANR	730189	Symbol	itr -> second		730043						
ANR	730190	Symbol	newAd -> parentScope		730043						
ANR	730191	Symbol	NULL		730043						
ANR	730192	Symbol	itr		730043						
ANR	730193	Symbol	tree		730043						
ANR	730194	Symbol	ERR_MEM_ALLOC_FAILED		730043						
ANR	730195	Symbol	attrList		730043						
ANR	730196	Symbol	* itr		730043						
ANR	730197	Symbol	CondorErrno		730043						
ANR	730198	Symbol	* newAd		730043						
ANR	730199	Symbol	attrList . end		730043						
ANR	730200	Symbol	* newAd -> attrList		730043						
ANR	730201	Symbol	CondorErrMsg		730043						
ANR	730202	Symbol	newAd -> nodeKind		730043						
ANR	730203	Symbol	* * itr		730043						
ANR	730204	DeclStmt									
ANR	730205	Decl							ClassAd	ClassAd *	newAd
ANR	730206	DeclStmt									
ANR	730207	Decl							Value	Value	eval
ANR	730208	DeclStmt									
ANR	730209	Decl							ExprTree	ExprTree *	etree
ANR	730210	DeclStmt									
ANR	730211	Decl							const ClassAd	const ClassAd *	oldAd
ANR	730212	DeclStmt									
ANR	730213	Decl							AttrList :: const_iterator	AttrList :: const_iterator	itr
ANR	730214	Function	ClassAd :: _GetDeepScope	772:0:17403:17665							
ANR	730215	FunctionDef	ClassAd :: _GetDeepScope (ExprTree * tree)		730214	0					
ANR	730216	CompoundStatement		774:0:17460:17665	730214	0					
ANR	730217	IdentifierDeclStatement	ClassAd * scope ;	775:1:17463:17477	730214	0	True				
ANR	730218	IdentifierDecl	* scope		730214	0					
ANR	730219	IdentifierDeclType	ClassAd *		730214	0					
ANR	730220	Identifier	scope		730214	1					
ANR	730221	IdentifierDeclStatement	Value val ;	776:1:17480:17489	730214	1	True				
ANR	730222	IdentifierDecl	val		730214	0					
ANR	730223	IdentifierDeclType	Value		730214	0					
ANR	730224	Identifier	val		730214	1					
ANR	730225	IfStatement	if ( ! tree )		730214	2					
ANR	730226	Condition	! tree	778:5:17497:17501	730214	0	True				
ANR	730227	UnaryOperationExpression	! tree		730214	0					
ANR	730228	UnaryOperator	!		730214	0					
ANR	730229	Identifier	tree		730214	1					
ANR	730230	ReturnStatement	return ( NULL ) ;	778:13:17505:17519	730214	1	True				
ANR	730231	Identifier	NULL		730214	0					
ANR	730232	ExpressionStatement	tree -> SetParentScope ( this )	779:1:17522:17550	730214	3	True				
ANR	730233	CallExpression	tree -> SetParentScope ( this )		730214	0					
ANR	730234	Callee	tree -> SetParentScope		730214	0					
ANR	730235	PtrMemberAccess	tree -> SetParentScope		730214	0					
ANR	730236	Identifier	tree		730214	0					
ANR	730237	Identifier	SetParentScope		730214	1					
ANR	730238	ArgumentList	this		730214	1					
ANR	730239	Argument	this		730214	0					
ANR	730240	Identifier	this		730214	0					
ANR	730241	IfStatement	if ( ! tree -> Evaluate ( val ) || ! val . IsClassAdValue ( scope ) )		730214	4					
ANR	730242	Condition	! tree -> Evaluate ( val ) || ! val . IsClassAdValue ( scope )	780:5:17557:17610	730214	0	True				
ANR	730243	OrExpression	! tree -> Evaluate ( val ) || ! val . IsClassAdValue ( scope )		730214	0		||			
ANR	730244	UnaryOperationExpression	! tree -> Evaluate ( val )		730214	0					
ANR	730245	UnaryOperator	!		730214	0					
ANR	730246	CallExpression	tree -> Evaluate ( val )		730214	1					
ANR	730247	Callee	tree -> Evaluate		730214	0					
ANR	730248	PtrMemberAccess	tree -> Evaluate		730214	0					
ANR	730249	Identifier	tree		730214	0					
ANR	730250	Identifier	Evaluate		730214	1					
ANR	730251	ArgumentList	val		730214	1					
ANR	730252	Argument	val		730214	0					
ANR	730253	Identifier	val		730214	0					
ANR	730254	UnaryOperationExpression	! val . IsClassAdValue ( scope )		730214	1					
ANR	730255	UnaryOperator	!		730214	0					
ANR	730256	CallExpression	val . IsClassAdValue ( scope )		730214	1					
ANR	730257	Callee	val . IsClassAdValue		730214	0					
ANR	730258	MemberAccess	val . IsClassAdValue		730214	0					
ANR	730259	Identifier	val		730214	0					
ANR	730260	Identifier	IsClassAdValue		730214	1					
ANR	730261	ArgumentList	scope		730214	1					
ANR	730262	Argument	scope		730214	0					
ANR	730263	Identifier	scope		730214	0					
ANR	730264	CompoundStatement		7:62:153:153	730214	1					
ANR	730265	ReturnStatement	return ( NULL ) ;	781:2:17618:17632	730214	0	True				
ANR	730266	Identifier	NULL		730214	0					
ANR	730267	ReturnStatement	return ( ( ClassAd * ) scope ) ;	783:1:17638:17663	730214	5	True				
ANR	730268	CastExpression	( ClassAd * ) scope		730214	0					
ANR	730269	CastTarget	ClassAd *		730214	0					
ANR	730270	Identifier	scope		730214	1					
ANR	730271	ReturnType	ClassAd *		730214	1					
ANR	730272	Identifier	ClassAd :: _GetDeepScope		730214	2					
ANR	730273	ParameterList	ExprTree * tree		730214	3					
ANR	730274	Parameter	ExprTree * tree	773:15:17437:17450	730214	0	True				
ANR	730275	ParameterType	ExprTree *		730214	0					
ANR	730276	Identifier	tree		730214	1					
ANR	730277	CFGEntryNode	ENTRY		730214		True				
ANR	730278	CFGExitNode	EXIT		730214		True				
ANR	730279	Symbol	val		730214						
ANR	730280	Symbol	* tree		730214						
ANR	730281	Symbol	NULL		730214						
ANR	730282	Symbol	val . IsClassAdValue		730214						
ANR	730283	Symbol	scope		730214						
ANR	730284	Symbol	tree		730214						
ANR	730285	Symbol	this		730214						
ANR	730286	Symbol	tree -> Evaluate		730214						
ANR	730287	Function	ClassAd :: EvaluateAttr	787:0:17669:18110							
ANR	730288	FunctionDef	"ClassAd :: EvaluateAttr (const string & attr , Value & val)"		730287	0					
ANR	730289	CompoundStatement		789:0:17738:18110	730287	0					
ANR	730290	IdentifierDeclStatement	EvalState state ;	790:1:17741:17756	730287	0	True				
ANR	730291	IdentifierDecl	state		730287	0					
ANR	730292	IdentifierDeclType	EvalState		730287	0					
ANR	730293	Identifier	state		730287	1					
ANR	730294	IdentifierDeclStatement	ExprTree * tree ;	791:1:17759:17773	730287	1	True				
ANR	730295	IdentifierDecl	* tree		730287	0					
ANR	730296	IdentifierDeclType	ExprTree *		730287	0					
ANR	730297	Identifier	tree		730287	1					
ANR	730298	ExpressionStatement	state . SetScopes ( this )	793:1:17777:17800	730287	2	True				
ANR	730299	CallExpression	state . SetScopes ( this )		730287	0					
ANR	730300	Callee	state . SetScopes		730287	0					
ANR	730301	MemberAccess	state . SetScopes		730287	0					
ANR	730302	Identifier	state		730287	0					
ANR	730303	Identifier	SetScopes		730287	1					
ANR	730304	ArgumentList	this		730287	1					
ANR	730305	Argument	this		730287	0					
ANR	730306	Identifier	this		730287	0					
ANR	730307	SwitchStatement	"switch ( LookupInScope ( attr , tree , state ) )"		730287	3					
ANR	730308	Condition	"LookupInScope ( attr , tree , state )"	794:9:17811:17844	730287	0	True				
ANR	730309	CallExpression	"LookupInScope ( attr , tree , state )"		730287	0					
ANR	730310	Callee	LookupInScope		730287	0					
ANR	730311	Identifier	LookupInScope		730287	0					
ANR	730312	ArgumentList	attr		730287	1					
ANR	730313	Argument	attr		730287	0					
ANR	730314	Identifier	attr		730287	0					
ANR	730315	Argument	tree		730287	1					
ANR	730316	Identifier	tree		730287	0					
ANR	730317	Argument	state		730287	2					
ANR	730318	Identifier	state		730287	0					
ANR	730319	CompoundStatement		6:46:109:109	730287	1					
ANR	730320	Label	case EVAL_FAIL :	795:2:17853:17867	730287	0	True				
ANR	730321	Identifier	EVAL_FAIL		730287	0					
ANR	730322	ReturnStatement	return false ;	796:3:17872:17884	730287	1	True				
ANR	730323	Identifier	false		730287	0					
ANR	730324	Label	case EVAL_OK :	798:2:17889:17901	730287	2	True				
ANR	730325	Identifier	EVAL_OK		730287	0					
ANR	730326	ReturnStatement	"return ( tree -> Evaluate ( state , val ) ) ;"	799:3:17906:17944	730287	3	True				
ANR	730327	CallExpression	"tree -> Evaluate ( state , val )"		730287	0					
ANR	730328	Callee	tree -> Evaluate		730287	0					
ANR	730329	PtrMemberAccess	tree -> Evaluate		730287	0					
ANR	730330	Identifier	tree		730287	0					
ANR	730331	Identifier	Evaluate		730287	1					
ANR	730332	ArgumentList	state		730287	1					
ANR	730333	Argument	state		730287	0					
ANR	730334	Identifier	state		730287	0					
ANR	730335	Argument	val		730287	1					
ANR	730336	Identifier	val		730287	0					
ANR	730337	Label	case EVAL_UNDEF :	801:2:17949:17964	730287	4	True				
ANR	730338	Identifier	EVAL_UNDEF		730287	0					
ANR	730339	ExpressionStatement	val . SetUndefinedValue ( )	802:3:17969:17993	730287	5	True				
ANR	730340	CallExpression	val . SetUndefinedValue ( )		730287	0					
ANR	730341	Callee	val . SetUndefinedValue		730287	0					
ANR	730342	MemberAccess	val . SetUndefinedValue		730287	0					
ANR	730343	Identifier	val		730287	0					
ANR	730344	Identifier	SetUndefinedValue		730287	1					
ANR	730345	ArgumentList			730287	1					
ANR	730346	ReturnStatement	return ( true ) ;	803:3:17998:18012	730287	6	True				
ANR	730347	Identifier	true		730287	0					
ANR	730348	Label	case EVAL_ERROR :	805:2:18017:18032	730287	7	True				
ANR	730349	Identifier	EVAL_ERROR		730287	0					
ANR	730350	ExpressionStatement	val . SetErrorValue ( )	806:3:18037:18057	730287	8	True				
ANR	730351	CallExpression	val . SetErrorValue ( )		730287	0					
ANR	730352	Callee	val . SetErrorValue		730287	0					
ANR	730353	MemberAccess	val . SetErrorValue		730287	0					
ANR	730354	Identifier	val		730287	0					
ANR	730355	Identifier	SetErrorValue		730287	1					
ANR	730356	ArgumentList			730287	1					
ANR	730357	ReturnStatement	return ( true ) ;	807:3:18062:18076	730287	9	True				
ANR	730358	Identifier	true		730287	0					
ANR	730359	Label	default :	809:2:18081:18088	730287	10	True				
ANR	730360	Identifier	default		730287	0					
ANR	730361	ReturnStatement	return false ;	810:3:18093:18105	730287	11	True				
ANR	730362	Identifier	false		730287	0					
ANR	730363	ReturnType	bool		730287	1					
ANR	730364	Identifier	ClassAd :: EvaluateAttr		730287	2					
ANR	730365	ParameterList	"const string & attr , Value & val"		730287	3					
ANR	730366	Parameter	const string & attr	788:14:17698:17715	730287	0	True				
ANR	730367	ParameterType	const string &		730287	0					
ANR	730368	Identifier	attr		730287	1					
ANR	730369	Parameter	Value & val	788:35:17719:17728	730287	1	True				
ANR	730370	ParameterType	Value &		730287	0					
ANR	730371	Identifier	val		730287	1					
ANR	730372	CFGEntryNode	ENTRY		730287		True				
ANR	730373	CFGExitNode	EXIT		730287		True				
ANR	730374	Symbol	val		730287						
ANR	730375	Symbol	* tree		730287						
ANR	730376	Symbol	tree		730287						
ANR	730377	Symbol	this		730287						
ANR	730378	Symbol	false		730287						
ANR	730379	Symbol	tree -> Evaluate		730287						
ANR	730380	Symbol	true		730287						
ANR	730381	Symbol	LookupInScope		730287						
ANR	730382	Symbol	state		730287						
ANR	730383	Symbol	attr		730287						
ANR	730384	Function	ClassAd :: EvaluateExpr	814:0:18113:18504							
ANR	730385	FunctionDef	"ClassAd :: EvaluateExpr (const string & buf , Value & result)"		730384	0					
ANR	730386	CompoundStatement		816:0:18183:18504	730384	0					
ANR	730387	IdentifierDeclStatement	bool successfully_evaluated ;	817:1:18186:18223	730384	0	True				
ANR	730388	IdentifierDecl	successfully_evaluated		730384	0					
ANR	730389	IdentifierDeclType	bool		730384	0					
ANR	730390	Identifier	successfully_evaluated		730384	1					
ANR	730391	IdentifierDeclStatement	ExprTree * tree ;	818:1:18226:18246	730384	1	True				
ANR	730392	IdentifierDecl	* tree		730384	0					
ANR	730393	IdentifierDeclType	ExprTree *		730384	0					
ANR	730394	Identifier	tree		730384	1					
ANR	730395	IdentifierDeclStatement	ClassAdParser parser ;	819:1:18249:18270	730384	2	True				
ANR	730396	IdentifierDecl	parser		730384	0					
ANR	730397	IdentifierDeclType	ClassAdParser		730384	0					
ANR	730398	Identifier	parser		730384	1					
ANR	730399	ExpressionStatement	tree = NULL	821:1:18274:18285	730384	3	True				
ANR	730400	AssignmentExpression	tree = NULL		730384	0		=			
ANR	730401	Identifier	tree		730384	0					
ANR	730402	Identifier	NULL		730384	1					
ANR	730403	IfStatement	"if ( parser . ParseExpression ( buf , tree ) )"		730384	4					
ANR	730404	Condition	"parser . ParseExpression ( buf , tree )"	822:5:18292:18324	730384	0	True				
ANR	730405	CallExpression	"parser . ParseExpression ( buf , tree )"		730384	0					
ANR	730406	Callee	parser . ParseExpression		730384	0					
ANR	730407	MemberAccess	parser . ParseExpression		730384	0					
ANR	730408	Identifier	parser		730384	0					
ANR	730409	Identifier	ParseExpression		730384	1					
ANR	730410	ArgumentList	buf		730384	1					
ANR	730411	Argument	buf		730384	0					
ANR	730412	Identifier	buf		730384	0					
ANR	730413	Argument	tree		730384	1					
ANR	730414	Identifier	tree		730384	0					
ANR	730415	CompoundStatement		7:40:143:143	730384	1					
ANR	730416	ExpressionStatement	"successfully_evaluated = EvaluateExpr ( tree , result )"	823:2:18331:18382	730384	0	True				
ANR	730417	AssignmentExpression	"successfully_evaluated = EvaluateExpr ( tree , result )"		730384	0		=			
ANR	730418	Identifier	successfully_evaluated		730384	0					
ANR	730419	CallExpression	"EvaluateExpr ( tree , result )"		730384	1					
ANR	730420	Callee	EvaluateExpr		730384	0					
ANR	730421	Identifier	EvaluateExpr		730384	0					
ANR	730422	ArgumentList	tree		730384	1					
ANR	730423	Argument	tree		730384	0					
ANR	730424	Identifier	tree		730384	0					
ANR	730425	Argument	result		730384	1					
ANR	730426	Identifier	result		730384	0					
ANR	730427	ElseStatement	else		730384	0					
ANR	730428	CompoundStatement		9:8:208:208	730384	0					
ANR	730429	ExpressionStatement	successfully_evaluated = false	825:2:18396:18426	730384	0	True				
ANR	730430	AssignmentExpression	successfully_evaluated = false		730384	0		=			
ANR	730431	Identifier	successfully_evaluated		730384	0					
ANR	730432	Identifier	false		730384	1					
ANR	730433	IfStatement	if ( NULL != tree )		730384	5					
ANR	730434	Condition	NULL != tree	828:5:18437:18448	730384	0	True				
ANR	730435	EqualityExpression	NULL != tree		730384	0		!=			
ANR	730436	Identifier	NULL		730384	0					
ANR	730437	Identifier	tree		730384	1					
ANR	730438	CompoundStatement		13:19:267:267	730384	1					
ANR	730439	Statement	delete	829:2:18455:18460	730384	0	True				
ANR	730440	ExpressionStatement	tree	829:9:18462:18466	730384	1	True				
ANR	730441	Identifier	tree		730384	0					
ANR	730442	ReturnStatement	return successfully_evaluated ;	832:1:18473:18502	730384	6	True				
ANR	730443	Identifier	successfully_evaluated		730384	0					
ANR	730444	ReturnType	bool		730384	1					
ANR	730445	Identifier	ClassAd :: EvaluateExpr		730384	2					
ANR	730446	ParameterList	"const string & buf , Value & result"		730384	3					
ANR	730447	Parameter	const string & buf	815:14:18142:18158	730384	0	True				
ANR	730448	ParameterType	const string &		730384	0					
ANR	730449	Identifier	buf		730384	1					
ANR	730450	Parameter	Value & result	815:33:18161:18173	730384	1	True				
ANR	730451	ParameterType	Value &		730384	0					
ANR	730452	Identifier	result		730384	1					
ANR	730453	CFGEntryNode	ENTRY		730384		True				
ANR	730454	CFGExitNode	EXIT		730384		True				
ANR	730455	Symbol	result		730384						
ANR	730456	Symbol	buf		730384						
ANR	730457	Symbol	NULL		730384						
ANR	730458	Symbol	parser		730384						
ANR	730459	Symbol	parser . ParseExpression		730384						
ANR	730460	Symbol	successfully_evaluated		730384						
ANR	730461	Symbol	tree		730384						
ANR	730462	Symbol	false		730384						
ANR	730463	Symbol	EvaluateExpr		730384						
ANR	730464	Function	ClassAd :: EvaluateExpr	836:0:18508:18668							
ANR	730465	FunctionDef	"ClassAd :: EvaluateExpr (const ExprTree * tree , Value & val)"		730464	0					
ANR	730466	CompoundStatement		838:0:18579:18668	730464	0					
ANR	730467	IdentifierDeclStatement	EvalState state ;	839:1:18582:18597	730464	0	True				
ANR	730468	IdentifierDecl	state		730464	0					
ANR	730469	IdentifierDeclType	EvalState		730464	0					
ANR	730470	Identifier	state		730464	1					
ANR	730471	ExpressionStatement	state . SetScopes ( this )	841:1:18601:18624	730464	1	True				
ANR	730472	CallExpression	state . SetScopes ( this )		730464	0					
ANR	730473	Callee	state . SetScopes		730464	0					
ANR	730474	MemberAccess	state . SetScopes		730464	0					
ANR	730475	Identifier	state		730464	0					
ANR	730476	Identifier	SetScopes		730464	1					
ANR	730477	ArgumentList	this		730464	1					
ANR	730478	Argument	this		730464	0					
ANR	730479	Identifier	this		730464	0					
ANR	730480	ReturnStatement	"return ( tree -> Evaluate ( state , val ) ) ;"	842:1:18627:18666	730464	2	True				
ANR	730481	CallExpression	"tree -> Evaluate ( state , val )"		730464	0					
ANR	730482	Callee	tree -> Evaluate		730464	0					
ANR	730483	PtrMemberAccess	tree -> Evaluate		730464	0					
ANR	730484	Identifier	tree		730464	0					
ANR	730485	Identifier	Evaluate		730464	1					
ANR	730486	ArgumentList	state		730464	1					
ANR	730487	Argument	state		730464	0					
ANR	730488	Identifier	state		730464	0					
ANR	730489	Argument	val		730464	1					
ANR	730490	Identifier	val		730464	0					
ANR	730491	ReturnType	bool		730464	1					
ANR	730492	Identifier	ClassAd :: EvaluateExpr		730464	2					
ANR	730493	ParameterList	"const ExprTree * tree , Value & val"		730464	3					
ANR	730494	Parameter	const ExprTree * tree	837:14:18537:18556	730464	0	True				
ANR	730495	ParameterType	const ExprTree *		730464	0					
ANR	730496	Identifier	tree		730464	1					
ANR	730497	Parameter	Value & val	837:37:18560:18569	730464	1	True				
ANR	730498	ParameterType	Value &		730464	0					
ANR	730499	Identifier	val		730464	1					
ANR	730500	CFGEntryNode	ENTRY		730464		True				
ANR	730501	CFGExitNode	EXIT		730464		True				
ANR	730502	Symbol	val		730464						
ANR	730503	Symbol	* tree		730464						
ANR	730504	Symbol	tree		730464						
ANR	730505	Symbol	this		730464						
ANR	730506	Symbol	tree -> Evaluate		730464						
ANR	730507	Symbol	state		730464						
ANR	730508	Function	ClassAd :: EvaluateExpr	845:0:18671:18854							
ANR	730509	FunctionDef	"ClassAd :: EvaluateExpr (const ExprTree * tree , Value & val , ExprTree * & sig)"		730508	0					
ANR	730510	CompoundStatement		847:0:18759:18854	730508	0					
ANR	730511	IdentifierDeclStatement	EvalState state ;	848:1:18762:18777	730508	0	True				
ANR	730512	IdentifierDecl	state		730508	0					
ANR	730513	IdentifierDeclType	EvalState		730508	0					
ANR	730514	Identifier	state		730508	1					
ANR	730515	ExpressionStatement	state . SetScopes ( this )	850:1:18781:18804	730508	1	True				
ANR	730516	CallExpression	state . SetScopes ( this )		730508	0					
ANR	730517	Callee	state . SetScopes		730508	0					
ANR	730518	MemberAccess	state . SetScopes		730508	0					
ANR	730519	Identifier	state		730508	0					
ANR	730520	Identifier	SetScopes		730508	1					
ANR	730521	ArgumentList	this		730508	1					
ANR	730522	Argument	this		730508	0					
ANR	730523	Identifier	this		730508	0					
ANR	730524	ReturnStatement	"return ( tree -> Evaluate ( state , val , sig ) ) ;"	851:1:18807:18852	730508	2	True				
ANR	730525	CallExpression	"tree -> Evaluate ( state , val , sig )"		730508	0					
ANR	730526	Callee	tree -> Evaluate		730508	0					
ANR	730527	PtrMemberAccess	tree -> Evaluate		730508	0					
ANR	730528	Identifier	tree		730508	0					
ANR	730529	Identifier	Evaluate		730508	1					
ANR	730530	ArgumentList	state		730508	1					
ANR	730531	Argument	state		730508	0					
ANR	730532	Identifier	state		730508	0					
ANR	730533	Argument	val		730508	1					
ANR	730534	Identifier	val		730508	0					
ANR	730535	Argument	sig		730508	2					
ANR	730536	Identifier	sig		730508	0					
ANR	730537	ReturnType	bool		730508	1					
ANR	730538	Identifier	ClassAd :: EvaluateExpr		730508	2					
ANR	730539	ParameterList	"const ExprTree * tree , Value & val , ExprTree * & sig"		730508	3					
ANR	730540	Parameter	const ExprTree * tree	846:14:18700:18719	730508	0	True				
ANR	730541	ParameterType	const ExprTree *		730508	0					
ANR	730542	Identifier	tree		730508	1					
ANR	730543	Parameter	Value & val	846:37:18723:18732	730508	1	True				
ANR	730544	ParameterType	Value &		730508	0					
ANR	730545	Identifier	val		730508	1					
ANR	730546	Parameter	ExprTree * & sig	846:50:18736:18749	730508	2	True				
ANR	730547	ParameterType	ExprTree * &		730508	0					
ANR	730548	Identifier	sig		730508	1					
ANR	730549	CFGEntryNode	ENTRY		730508		True				
ANR	730550	CFGExitNode	EXIT		730508		True				
ANR	730551	Symbol	val		730508						
ANR	730552	Symbol	sig		730508						
ANR	730553	Symbol	* tree		730508						
ANR	730554	Symbol	tree		730508						
ANR	730555	Symbol	this		730508						
ANR	730556	Symbol	tree -> Evaluate		730508						
ANR	730557	Symbol	state		730508						
ANR	730558	Function	ClassAd :: EvaluateAttrInt	854:0:18857:19004							
ANR	730559	FunctionDef	"ClassAd :: EvaluateAttrInt (const string & attr , int & i)"		730558	0					
ANR	730560	CompoundStatement		856:0:18925:19004	730558	0					
ANR	730561	IdentifierDeclStatement	Value val ;	857:1:18928:18937	730558	0	True				
ANR	730562	IdentifierDecl	val		730558	0					
ANR	730563	IdentifierDeclType	Value		730558	0					
ANR	730564	Identifier	val		730558	1					
ANR	730565	ReturnStatement	"return ( EvaluateAttr ( attr , val ) && val . IsIntegerValue ( i ) ) ;"	858:1:18940:19002	730558	1	True				
ANR	730566	AndExpression	"EvaluateAttr ( attr , val ) && val . IsIntegerValue ( i )"		730558	0		&&			
ANR	730567	CallExpression	"EvaluateAttr ( attr , val )"		730558	0					
ANR	730568	Callee	EvaluateAttr		730558	0					
ANR	730569	Identifier	EvaluateAttr		730558	0					
ANR	730570	ArgumentList	attr		730558	1					
ANR	730571	Argument	attr		730558	0					
ANR	730572	Identifier	attr		730558	0					
ANR	730573	Argument	val		730558	1					
ANR	730574	Identifier	val		730558	0					
ANR	730575	CallExpression	val . IsIntegerValue ( i )		730558	1					
ANR	730576	Callee	val . IsIntegerValue		730558	0					
ANR	730577	MemberAccess	val . IsIntegerValue		730558	0					
ANR	730578	Identifier	val		730558	0					
ANR	730579	Identifier	IsIntegerValue		730558	1					
ANR	730580	ArgumentList	i		730558	1					
ANR	730581	Argument	i		730558	0					
ANR	730582	Identifier	i		730558	0					
ANR	730583	ReturnType	bool		730558	1					
ANR	730584	Identifier	ClassAd :: EvaluateAttrInt		730558	2					
ANR	730585	ParameterList	"const string & attr , int & i"		730558	3					
ANR	730586	Parameter	const string & attr	855:17:18889:18906	730558	0	True				
ANR	730587	ParameterType	const string &		730558	0					
ANR	730588	Identifier	attr		730558	1					
ANR	730589	Parameter	int & i	855:37:18909:18914	730558	1	True				
ANR	730590	ParameterType	int &		730558	0					
ANR	730591	Identifier	i		730558	1					
ANR	730592	CFGEntryNode	ENTRY		730558		True				
ANR	730593	CFGExitNode	EXIT		730558		True				
ANR	730594	Symbol	val		730558						
ANR	730595	Symbol	i		730558						
ANR	730596	Symbol	attr		730558						
ANR	730597	Symbol	EvaluateAttr		730558						
ANR	730598	Symbol	val . IsIntegerValue		730558						
ANR	730599	Function	ClassAd :: EvaluateAttrReal	861:0:19007:19155							
ANR	730600	FunctionDef	"ClassAd :: EvaluateAttrReal (const string & attr , double & r)"		730599	0					
ANR	730601	CompoundStatement		863:0:19079:19155	730599	0					
ANR	730602	IdentifierDeclStatement	Value val ;	864:1:19082:19091	730599	0	True				
ANR	730603	IdentifierDecl	val		730599	0					
ANR	730604	IdentifierDeclType	Value		730599	0					
ANR	730605	Identifier	val		730599	1					
ANR	730606	ReturnStatement	"return ( EvaluateAttr ( attr , val ) && val . IsRealValue ( r ) ) ;"	865:1:19094:19153	730599	1	True				
ANR	730607	AndExpression	"EvaluateAttr ( attr , val ) && val . IsRealValue ( r )"		730599	0		&&			
ANR	730608	CallExpression	"EvaluateAttr ( attr , val )"		730599	0					
ANR	730609	Callee	EvaluateAttr		730599	0					
ANR	730610	Identifier	EvaluateAttr		730599	0					
ANR	730611	ArgumentList	attr		730599	1					
ANR	730612	Argument	attr		730599	0					
ANR	730613	Identifier	attr		730599	0					
ANR	730614	Argument	val		730599	1					
ANR	730615	Identifier	val		730599	0					
ANR	730616	CallExpression	val . IsRealValue ( r )		730599	1					
ANR	730617	Callee	val . IsRealValue		730599	0					
ANR	730618	MemberAccess	val . IsRealValue		730599	0					
ANR	730619	Identifier	val		730599	0					
ANR	730620	Identifier	IsRealValue		730599	1					
ANR	730621	ArgumentList	r		730599	1					
ANR	730622	Argument	r		730599	0					
ANR	730623	Identifier	r		730599	0					
ANR	730624	ReturnType	bool		730599	1					
ANR	730625	Identifier	ClassAd :: EvaluateAttrReal		730599	2					
ANR	730626	ParameterList	"const string & attr , double & r"		730599	3					
ANR	730627	Parameter	const string & attr	862:18:19040:19057	730599	0	True				
ANR	730628	ParameterType	const string &		730599	0					
ANR	730629	Identifier	attr		730599	1					
ANR	730630	Parameter	double & r	862:38:19060:19068	730599	1	True				
ANR	730631	ParameterType	double &		730599	0					
ANR	730632	Identifier	r		730599	1					
ANR	730633	CFGEntryNode	ENTRY		730599		True				
ANR	730634	CFGExitNode	EXIT		730599		True				
ANR	730635	Symbol	val		730599						
ANR	730636	Symbol	r		730599						
ANR	730637	Symbol	val . IsRealValue		730599						
ANR	730638	Symbol	attr		730599						
ANR	730639	Symbol	EvaluateAttr		730599						
ANR	730640	Function	ClassAd :: EvaluateAttrNumber	868:0:19158:19302							
ANR	730641	FunctionDef	"ClassAd :: EvaluateAttrNumber (const string & attr , int & i)"		730640	0					
ANR	730642	CompoundStatement		870:0:19229:19302	730640	0					
ANR	730643	IdentifierDeclStatement	Value val ;	871:1:19232:19241	730640	0	True				
ANR	730644	IdentifierDecl	val		730640	0					
ANR	730645	IdentifierDeclType	Value		730640	0					
ANR	730646	Identifier	val		730640	1					
ANR	730647	ReturnStatement	"return ( EvaluateAttr ( attr , val ) && val . IsNumber ( i ) ) ;"	872:1:19244:19300	730640	1	True				
ANR	730648	AndExpression	"EvaluateAttr ( attr , val ) && val . IsNumber ( i )"		730640	0		&&			
ANR	730649	CallExpression	"EvaluateAttr ( attr , val )"		730640	0					
ANR	730650	Callee	EvaluateAttr		730640	0					
ANR	730651	Identifier	EvaluateAttr		730640	0					
ANR	730652	ArgumentList	attr		730640	1					
ANR	730653	Argument	attr		730640	0					
ANR	730654	Identifier	attr		730640	0					
ANR	730655	Argument	val		730640	1					
ANR	730656	Identifier	val		730640	0					
ANR	730657	CallExpression	val . IsNumber ( i )		730640	1					
ANR	730658	Callee	val . IsNumber		730640	0					
ANR	730659	MemberAccess	val . IsNumber		730640	0					
ANR	730660	Identifier	val		730640	0					
ANR	730661	Identifier	IsNumber		730640	1					
ANR	730662	ArgumentList	i		730640	1					
ANR	730663	Argument	i		730640	0					
ANR	730664	Identifier	i		730640	0					
ANR	730665	ReturnType	bool		730640	1					
ANR	730666	Identifier	ClassAd :: EvaluateAttrNumber		730640	2					
ANR	730667	ParameterList	"const string & attr , int & i"		730640	3					
ANR	730668	Parameter	const string & attr	869:20:19193:19210	730640	0	True				
ANR	730669	ParameterType	const string &		730640	0					
ANR	730670	Identifier	attr		730640	1					
ANR	730671	Parameter	int & i	869:40:19213:19218	730640	1	True				
ANR	730672	ParameterType	int &		730640	0					
ANR	730673	Identifier	i		730640	1					
ANR	730674	CFGEntryNode	ENTRY		730640		True				
ANR	730675	CFGExitNode	EXIT		730640		True				
ANR	730676	Symbol	val		730640						
ANR	730677	Symbol	i		730640						
ANR	730678	Symbol	attr		730640						
ANR	730679	Symbol	val . IsNumber		730640						
ANR	730680	Symbol	EvaluateAttr		730640						
ANR	730681	Function	ClassAd :: EvaluateAttrNumber	875:0:19305:19452							
ANR	730682	FunctionDef	"ClassAd :: EvaluateAttrNumber (const string & attr , double & r)"		730681	0					
ANR	730683	CompoundStatement		877:0:19379:19452	730681	0					
ANR	730684	IdentifierDeclStatement	Value val ;	878:1:19382:19391	730681	0	True				
ANR	730685	IdentifierDecl	val		730681	0					
ANR	730686	IdentifierDeclType	Value		730681	0					
ANR	730687	Identifier	val		730681	1					
ANR	730688	ReturnStatement	"return ( EvaluateAttr ( attr , val ) && val . IsNumber ( r ) ) ;"	879:1:19394:19450	730681	1	True				
ANR	730689	AndExpression	"EvaluateAttr ( attr , val ) && val . IsNumber ( r )"		730681	0		&&			
ANR	730690	CallExpression	"EvaluateAttr ( attr , val )"		730681	0					
ANR	730691	Callee	EvaluateAttr		730681	0					
ANR	730692	Identifier	EvaluateAttr		730681	0					
ANR	730693	ArgumentList	attr		730681	1					
ANR	730694	Argument	attr		730681	0					
ANR	730695	Identifier	attr		730681	0					
ANR	730696	Argument	val		730681	1					
ANR	730697	Identifier	val		730681	0					
ANR	730698	CallExpression	val . IsNumber ( r )		730681	1					
ANR	730699	Callee	val . IsNumber		730681	0					
ANR	730700	MemberAccess	val . IsNumber		730681	0					
ANR	730701	Identifier	val		730681	0					
ANR	730702	Identifier	IsNumber		730681	1					
ANR	730703	ArgumentList	r		730681	1					
ANR	730704	Argument	r		730681	0					
ANR	730705	Identifier	r		730681	0					
ANR	730706	ReturnType	bool		730681	1					
ANR	730707	Identifier	ClassAd :: EvaluateAttrNumber		730681	2					
ANR	730708	ParameterList	"const string & attr , double & r"		730681	3					
ANR	730709	Parameter	const string & attr	876:20:19340:19357	730681	0	True				
ANR	730710	ParameterType	const string &		730681	0					
ANR	730711	Identifier	attr		730681	1					
ANR	730712	Parameter	double & r	876:40:19360:19368	730681	1	True				
ANR	730713	ParameterType	double &		730681	0					
ANR	730714	Identifier	r		730681	1					
ANR	730715	CFGEntryNode	ENTRY		730681		True				
ANR	730716	CFGExitNode	EXIT		730681		True				
ANR	730717	Symbol	val		730681						
ANR	730718	Symbol	r		730681						
ANR	730719	Symbol	attr		730681						
ANR	730720	Symbol	val . IsNumber		730681						
ANR	730721	Symbol	EvaluateAttr		730681						
ANR	730722	Function	ClassAd :: EvaluateAttrString	882:0:19455:19622							
ANR	730723	FunctionDef	"ClassAd :: EvaluateAttrString (const string & attr , char * buf , int len)"		730722	0					
ANR	730724	CompoundStatement		884:0:19537:19622	730722	0					
ANR	730725	IdentifierDeclStatement	Value val ;	885:1:19540:19549	730722	0	True				
ANR	730726	IdentifierDecl	val		730722	0					
ANR	730727	IdentifierDeclType	Value		730722	0					
ANR	730728	Identifier	val		730722	1					
ANR	730729	ReturnStatement	"return ( EvaluateAttr ( attr , val ) && val . IsStringValue ( buf , len ) ) ;"	886:1:19552:19620	730722	1	True				
ANR	730730	AndExpression	"EvaluateAttr ( attr , val ) && val . IsStringValue ( buf , len )"		730722	0		&&			
ANR	730731	CallExpression	"EvaluateAttr ( attr , val )"		730722	0					
ANR	730732	Callee	EvaluateAttr		730722	0					
ANR	730733	Identifier	EvaluateAttr		730722	0					
ANR	730734	ArgumentList	attr		730722	1					
ANR	730735	Argument	attr		730722	0					
ANR	730736	Identifier	attr		730722	0					
ANR	730737	Argument	val		730722	1					
ANR	730738	Identifier	val		730722	0					
ANR	730739	CallExpression	"val . IsStringValue ( buf , len )"		730722	1					
ANR	730740	Callee	val . IsStringValue		730722	0					
ANR	730741	MemberAccess	val . IsStringValue		730722	0					
ANR	730742	Identifier	val		730722	0					
ANR	730743	Identifier	IsStringValue		730722	1					
ANR	730744	ArgumentList	buf		730722	1					
ANR	730745	Argument	buf		730722	0					
ANR	730746	Identifier	buf		730722	0					
ANR	730747	Argument	len		730722	1					
ANR	730748	Identifier	len		730722	0					
ANR	730749	ReturnType	bool		730722	1					
ANR	730750	Identifier	ClassAd :: EvaluateAttrString		730722	2					
ANR	730751	ParameterList	"const string & attr , char * buf , int len"		730722	3					
ANR	730752	Parameter	const string & attr	883:20:19490:19507	730722	0	True				
ANR	730753	ParameterType	const string &		730722	0					
ANR	730754	Identifier	attr		730722	1					
ANR	730755	Parameter	char * buf	883:40:19510:19518	730722	1	True				
ANR	730756	ParameterType	char *		730722	0					
ANR	730757	Identifier	buf		730722	1					
ANR	730758	Parameter	int len	883:51:19521:19527	730722	2	True				
ANR	730759	ParameterType	int		730722	0					
ANR	730760	Identifier	len		730722	1					
ANR	730761	CFGEntryNode	ENTRY		730722		True				
ANR	730762	CFGExitNode	EXIT		730722		True				
ANR	730763	Symbol	val		730722						
ANR	730764	Symbol	buf		730722						
ANR	730765	Symbol	len		730722						
ANR	730766	Symbol	val . IsStringValue		730722						
ANR	730767	Symbol	attr		730722						
ANR	730768	Symbol	EvaluateAttr		730722						
ANR	730769	Function	ClassAd :: EvaluateAttrString	889:0:19625:19780							
ANR	730770	FunctionDef	"ClassAd :: EvaluateAttrString (const string & attr , string & buf)"		730769	0					
ANR	730771	CompoundStatement		891:0:19700:19780	730769	0					
ANR	730772	IdentifierDeclStatement	Value val ;	892:1:19703:19712	730769	0	True				
ANR	730773	IdentifierDecl	val		730769	0					
ANR	730774	IdentifierDeclType	Value		730769	0					
ANR	730775	Identifier	val		730769	1					
ANR	730776	ReturnStatement	"return ( EvaluateAttr ( attr , val ) && val . IsStringValue ( buf ) ) ;"	893:1:19715:19778	730769	1	True				
ANR	730777	AndExpression	"EvaluateAttr ( attr , val ) && val . IsStringValue ( buf )"		730769	0		&&			
ANR	730778	CallExpression	"EvaluateAttr ( attr , val )"		730769	0					
ANR	730779	Callee	EvaluateAttr		730769	0					
ANR	730780	Identifier	EvaluateAttr		730769	0					
ANR	730781	ArgumentList	attr		730769	1					
ANR	730782	Argument	attr		730769	0					
ANR	730783	Identifier	attr		730769	0					
ANR	730784	Argument	val		730769	1					
ANR	730785	Identifier	val		730769	0					
ANR	730786	CallExpression	val . IsStringValue ( buf )		730769	1					
ANR	730787	Callee	val . IsStringValue		730769	0					
ANR	730788	MemberAccess	val . IsStringValue		730769	0					
ANR	730789	Identifier	val		730769	0					
ANR	730790	Identifier	IsStringValue		730769	1					
ANR	730791	ArgumentList	buf		730769	1					
ANR	730792	Argument	buf		730769	0					
ANR	730793	Identifier	buf		730769	0					
ANR	730794	ReturnType	bool		730769	1					
ANR	730795	Identifier	ClassAd :: EvaluateAttrString		730769	2					
ANR	730796	ParameterList	"const string & attr , string & buf"		730769	3					
ANR	730797	Parameter	const string & attr	890:20:19660:19677	730769	0	True				
ANR	730798	ParameterType	const string &		730769	0					
ANR	730799	Identifier	attr		730769	1					
ANR	730800	Parameter	string & buf	890:40:19680:19690	730769	1	True				
ANR	730801	ParameterType	string &		730769	0					
ANR	730802	Identifier	buf		730769	1					
ANR	730803	CFGEntryNode	ENTRY		730769		True				
ANR	730804	CFGExitNode	EXIT		730769		True				
ANR	730805	Symbol	val		730769						
ANR	730806	Symbol	buf		730769						
ANR	730807	Symbol	val . IsStringValue		730769						
ANR	730808	Symbol	attr		730769						
ANR	730809	Symbol	EvaluateAttr		730769						
ANR	730810	Function	ClassAd :: EvaluateAttrBool	896:0:19783:19931							
ANR	730811	FunctionDef	"ClassAd :: EvaluateAttrBool (const string & attr , bool & b)"		730810	0					
ANR	730812	CompoundStatement		898:0:19852:19931	730810	0					
ANR	730813	IdentifierDeclStatement	Value val ;	899:1:19855:19864	730810	0	True				
ANR	730814	IdentifierDecl	val		730810	0					
ANR	730815	IdentifierDeclType	Value		730810	0					
ANR	730816	Identifier	val		730810	1					
ANR	730817	ReturnStatement	"return ( EvaluateAttr ( attr , val ) && val . IsBooleanValue ( b ) ) ;"	900:1:19867:19929	730810	1	True				
ANR	730818	AndExpression	"EvaluateAttr ( attr , val ) && val . IsBooleanValue ( b )"		730810	0		&&			
ANR	730819	CallExpression	"EvaluateAttr ( attr , val )"		730810	0					
ANR	730820	Callee	EvaluateAttr		730810	0					
ANR	730821	Identifier	EvaluateAttr		730810	0					
ANR	730822	ArgumentList	attr		730810	1					
ANR	730823	Argument	attr		730810	0					
ANR	730824	Identifier	attr		730810	0					
ANR	730825	Argument	val		730810	1					
ANR	730826	Identifier	val		730810	0					
ANR	730827	CallExpression	val . IsBooleanValue ( b )		730810	1					
ANR	730828	Callee	val . IsBooleanValue		730810	0					
ANR	730829	MemberAccess	val . IsBooleanValue		730810	0					
ANR	730830	Identifier	val		730810	0					
ANR	730831	Identifier	IsBooleanValue		730810	1					
ANR	730832	ArgumentList	b		730810	1					
ANR	730833	Argument	b		730810	0					
ANR	730834	Identifier	b		730810	0					
ANR	730835	ReturnType	bool		730810	1					
ANR	730836	Identifier	ClassAd :: EvaluateAttrBool		730810	2					
ANR	730837	ParameterList	"const string & attr , bool & b"		730810	3					
ANR	730838	Parameter	const string & attr	897:18:19816:19833	730810	0	True				
ANR	730839	ParameterType	const string &		730810	0					
ANR	730840	Identifier	attr		730810	1					
ANR	730841	Parameter	bool & b	897:38:19836:19842	730810	1	True				
ANR	730842	ParameterType	bool &		730810	0					
ANR	730843	Identifier	b		730810	1					
ANR	730844	CFGEntryNode	ENTRY		730810		True				
ANR	730845	CFGExitNode	EXIT		730810		True				
ANR	730846	Symbol	val		730810						
ANR	730847	Symbol	b		730810						
ANR	730848	Symbol	attr		730810						
ANR	730849	Symbol	val . IsBooleanValue		730810						
ANR	730850	Symbol	EvaluateAttr		730810						
ANR	730851	Function	ClassAd :: EvaluateAttrClassAd	903:0:19934:20101							
ANR	730852	FunctionDef	"ClassAd :: EvaluateAttrClassAd (const string & attr , ClassAd * & classad)"		730851	0					
ANR	730853	CompoundStatement		905:0:20016:20101	730851	0					
ANR	730854	IdentifierDeclStatement	Value val ;	906:1:20019:20028	730851	0	True				
ANR	730855	IdentifierDecl	val		730851	0					
ANR	730856	IdentifierDeclType	Value		730851	0					
ANR	730857	Identifier	val		730851	1					
ANR	730858	ReturnStatement	"return ( EvaluateAttr ( attr , val ) && val . IsClassAdValue ( classad ) ) ;"	907:1:20031:20099	730851	1	True				
ANR	730859	AndExpression	"EvaluateAttr ( attr , val ) && val . IsClassAdValue ( classad )"		730851	0		&&			
ANR	730860	CallExpression	"EvaluateAttr ( attr , val )"		730851	0					
ANR	730861	Callee	EvaluateAttr		730851	0					
ANR	730862	Identifier	EvaluateAttr		730851	0					
ANR	730863	ArgumentList	attr		730851	1					
ANR	730864	Argument	attr		730851	0					
ANR	730865	Identifier	attr		730851	0					
ANR	730866	Argument	val		730851	1					
ANR	730867	Identifier	val		730851	0					
ANR	730868	CallExpression	val . IsClassAdValue ( classad )		730851	1					
ANR	730869	Callee	val . IsClassAdValue		730851	0					
ANR	730870	MemberAccess	val . IsClassAdValue		730851	0					
ANR	730871	Identifier	val		730851	0					
ANR	730872	Identifier	IsClassAdValue		730851	1					
ANR	730873	ArgumentList	classad		730851	1					
ANR	730874	Argument	classad		730851	0					
ANR	730875	Identifier	classad		730851	0					
ANR	730876	ReturnType	bool		730851	1					
ANR	730877	Identifier	ClassAd :: EvaluateAttrClassAd		730851	2					
ANR	730878	ParameterList	"const string & attr , ClassAd * & classad"		730851	3					
ANR	730879	Parameter	const string & attr	904:21:19970:19987	730851	0	True				
ANR	730880	ParameterType	const string &		730851	0					
ANR	730881	Identifier	attr		730851	1					
ANR	730882	Parameter	ClassAd * & classad	904:41:19990:20006	730851	1	True				
ANR	730883	ParameterType	ClassAd * &		730851	0					
ANR	730884	Identifier	classad		730851	1					
ANR	730885	CFGEntryNode	ENTRY		730851		True				
ANR	730886	CFGExitNode	EXIT		730851		True				
ANR	730887	Symbol	val		730851						
ANR	730888	Symbol	val . IsClassAdValue		730851						
ANR	730889	Symbol	classad		730851						
ANR	730890	Symbol	attr		730851						
ANR	730891	Symbol	EvaluateAttr		730851						
ANR	730892	Function	ClassAd :: EvaluateAttrList	910:0:20104:20257							
ANR	730893	FunctionDef	"ClassAd :: EvaluateAttrList (const string & attr , ExprList * & l)"		730892	0					
ANR	730894	CompoundStatement		912:0:20178:20257	730892	0					
ANR	730895	IdentifierDeclStatement	Value val ;	913:4:20184:20193	730892	0	True				
ANR	730896	IdentifierDecl	val		730892	0					
ANR	730897	IdentifierDeclType	Value		730892	0					
ANR	730898	Identifier	val		730892	1					
ANR	730899	ReturnStatement	"return ( EvaluateAttr ( attr , val ) && val . IsListValue ( l ) ) ;"	914:1:20196:20255	730892	1	True				
ANR	730900	AndExpression	"EvaluateAttr ( attr , val ) && val . IsListValue ( l )"		730892	0		&&			
ANR	730901	CallExpression	"EvaluateAttr ( attr , val )"		730892	0					
ANR	730902	Callee	EvaluateAttr		730892	0					
ANR	730903	Identifier	EvaluateAttr		730892	0					
ANR	730904	ArgumentList	attr		730892	1					
ANR	730905	Argument	attr		730892	0					
ANR	730906	Identifier	attr		730892	0					
ANR	730907	Argument	val		730892	1					
ANR	730908	Identifier	val		730892	0					
ANR	730909	CallExpression	val . IsListValue ( l )		730892	1					
ANR	730910	Callee	val . IsListValue		730892	0					
ANR	730911	MemberAccess	val . IsListValue		730892	0					
ANR	730912	Identifier	val		730892	0					
ANR	730913	Identifier	IsListValue		730892	1					
ANR	730914	ArgumentList	l		730892	1					
ANR	730915	Argument	l		730892	0					
ANR	730916	Identifier	l		730892	0					
ANR	730917	ReturnType	bool		730892	1					
ANR	730918	Identifier	ClassAd :: EvaluateAttrList		730892	2					
ANR	730919	ParameterList	"const string & attr , ExprList * & l"		730892	3					
ANR	730920	Parameter	const string & attr	911:18:20137:20154	730892	0	True				
ANR	730921	ParameterType	const string &		730892	0					
ANR	730922	Identifier	attr		730892	1					
ANR	730923	Parameter	ExprList * & l	911:38:20157:20168	730892	1	True				
ANR	730924	ParameterType	ExprList * &		730892	0					
ANR	730925	Identifier	l		730892	1					
ANR	730926	CFGEntryNode	ENTRY		730892		True				
ANR	730927	CFGExitNode	EXIT		730892		True				
ANR	730928	Symbol	val		730892						
ANR	730929	Symbol	attr		730892						
ANR	730930	Symbol	l		730892						
ANR	730931	Symbol	val . IsListValue		730892						
ANR	730932	Symbol	EvaluateAttr		730892						
ANR	730933	Function	ClassAd :: GetExternalReferences	917:0:20260:20509							
ANR	730934	FunctionDef	"ClassAd :: GetExternalReferences (const ExprTree * tree , References & refs , bool fullNames)"		730933	0					
ANR	730935	CompoundStatement		919:0:20355:20509	730933	0					
ANR	730936	IdentifierDeclStatement	EvalState state ;	920:4:20361:20382	730933	0	True				
ANR	730937	IdentifierDecl	state		730933	0					
ANR	730938	IdentifierDeclType	EvalState		730933	0					
ANR	730939	Identifier	state		730933	1					
ANR	730940	ExpressionStatement	state . rootAd = this	922:4:20389:20408	730933	1	True				
ANR	730941	AssignmentExpression	state . rootAd = this		730933	0		=			
ANR	730942	MemberAccess	state . rootAd		730933	0					
ANR	730943	Identifier	state		730933	0					
ANR	730944	Identifier	rootAd		730933	1					
ANR	730945	Identifier	this		730933	1					
ANR	730946	ExpressionStatement	state . curAd = this	923:1:20412:20430	730933	2	True				
ANR	730947	AssignmentExpression	state . curAd = this		730933	0		=			
ANR	730948	MemberAccess	state . curAd		730933	0					
ANR	730949	Identifier	state		730933	0					
ANR	730950	Identifier	curAd		730933	1					
ANR	730951	Identifier	this		730933	1					
ANR	730952	ReturnStatement	"return ( _GetExternalReferences ( tree , this , state , refs , fullNames ) ) ;"	925:4:20437:20507	730933	3	True				
ANR	730953	CallExpression	"_GetExternalReferences ( tree , this , state , refs , fullNames )"		730933	0					
ANR	730954	Callee	_GetExternalReferences		730933	0					
ANR	730955	Identifier	_GetExternalReferences		730933	0					
ANR	730956	ArgumentList	tree		730933	1					
ANR	730957	Argument	tree		730933	0					
ANR	730958	Identifier	tree		730933	0					
ANR	730959	Argument	this		730933	1					
ANR	730960	Identifier	this		730933	0					
ANR	730961	Argument	state		730933	2					
ANR	730962	Identifier	state		730933	0					
ANR	730963	Argument	refs		730933	3					
ANR	730964	Identifier	refs		730933	0					
ANR	730965	Argument	fullNames		730933	4					
ANR	730966	Identifier	fullNames		730933	0					
ANR	730967	ReturnType	bool		730933	1					
ANR	730968	Identifier	ClassAd :: GetExternalReferences		730933	2					
ANR	730969	ParameterList	"const ExprTree * tree , References & refs , bool fullNames"		730933	3					
ANR	730970	Parameter	const ExprTree * tree	918:23:20298:20317	730933	0	True				
ANR	730971	ParameterType	const ExprTree *		730933	0					
ANR	730972	Identifier	tree		730933	1					
ANR	730973	Parameter	References & refs	918:45:20320:20335	730933	1	True				
ANR	730974	ParameterType	References &		730933	0					
ANR	730975	Identifier	refs		730933	1					
ANR	730976	Parameter	bool fullNames	918:63:20338:20351	730933	2	True				
ANR	730977	ParameterType	bool		730933	0					
ANR	730978	Identifier	fullNames		730933	1					
ANR	730979	CFGEntryNode	ENTRY		730933		True				
ANR	730980	CFGExitNode	EXIT		730933		True				
ANR	730981	Symbol	state . curAd		730933						
ANR	730982	Symbol	refs		730933						
ANR	730983	Symbol	_GetExternalReferences		730933						
ANR	730984	Symbol	tree		730933						
ANR	730985	Symbol	state . rootAd		730933						
ANR	730986	Symbol	this		730933						
ANR	730987	Symbol	fullNames		730933						
ANR	730988	Symbol	state		730933						
ANR	730989	Function	ClassAd :: _GetExternalReferences	929:0:20513:26417							
ANR	730990	FunctionDef	"ClassAd :: _GetExternalReferences (const ExprTree * expr , ClassAd * ad , EvalState & state , References & refs , bool fullNames)"		730989	0					
ANR	730991	CompoundStatement		932:0:20642:26417	730989	0					
ANR	730992	SwitchStatement	switch ( expr -> GetKind ( ) )		730989	0					
ANR	730993	Condition	expr -> GetKind ( )	933:12:20656:20671	730989	0	True				
ANR	730994	CallExpression	expr -> GetKind ( )		730989	0					
ANR	730995	Callee	expr -> GetKind		730989	0					
ANR	730996	PtrMemberAccess	expr -> GetKind		730989	0					
ANR	730997	Identifier	expr		730989	0					
ANR	730998	Identifier	GetKind		730989	1					
ANR	730999	ArgumentList			730989	1					
ANR	731000	CompoundStatement		2:31:32:32	730989	1					
ANR	731001	Label	case LITERAL_NODE :	934:8:20685:20702	730989	0	True				
ANR	731002	Identifier	LITERAL_NODE		730989	0					
ANR	731003	ReturnStatement	return ( true ) ;	936:12:20763:20777	730989	1	True				
ANR	731004	Identifier	true		730989	0					
ANR	731005	Label	case ATTRREF_NODE :	938:8:20788:20805	730989	2	True				
ANR	731006	Identifier	ATTRREF_NODE		730989	0					
ANR	731007	CompoundStatement		58:3:2148:2182	730989	3					
ANR	731008	IdentifierDeclStatement	const ClassAd * start ;	939:12:20821:20843	730989	0	True				
ANR	731009	IdentifierDecl	* start		730989	0					
ANR	731010	IdentifierDeclType	const ClassAd *		730989	0					
ANR	731011	Identifier	start		730989	1					
ANR	731012	IdentifierDeclStatement	"ExprTree * tree , * result ;"	940:12:20857:20887	730989	1	True				
ANR	731013	IdentifierDecl	* tree		730989	0					
ANR	731014	IdentifierDeclType	ExprTree *		730989	0					
ANR	731015	Identifier	tree		730989	1					
ANR	731016	IdentifierDecl	* result		730989	1					
ANR	731017	IdentifierDeclType	ExprTree *		730989	0					
ANR	731018	Identifier	result		730989	1					
ANR	731019	IdentifierDeclStatement	string attr ;	941:12:20901:20921	730989	2	True				
ANR	731020	IdentifierDecl	attr		730989	0					
ANR	731021	IdentifierDeclType	string		730989	0					
ANR	731022	Identifier	attr		730989	1					
ANR	731023	IdentifierDeclStatement	Value val ;	942:12:20935:20954	730989	3	True				
ANR	731024	IdentifierDecl	val		730989	0					
ANR	731025	IdentifierDeclType	Value		730989	0					
ANR	731026	Identifier	val		730989	1					
ANR	731027	IdentifierDeclStatement	bool abs ;	943:12:20968:20987	730989	4	True				
ANR	731028	IdentifierDecl	abs		730989	0					
ANR	731029	IdentifierDeclType	bool		730989	0					
ANR	731030	Identifier	abs		730989	1					
ANR	731031	ExpressionStatement	"( ( const AttributeReference * ) expr ) -> GetComponents ( tree , attr , abs )"	945:12:21002:21069	730989	5	True				
ANR	731032	CallExpression	"( ( const AttributeReference * ) expr ) -> GetComponents ( tree , attr , abs )"		730989	0					
ANR	731033	Callee	( ( const AttributeReference * ) expr ) -> GetComponents		730989	0					
ANR	731034	PtrMemberAccess	( ( const AttributeReference * ) expr ) -> GetComponents		730989	0					
ANR	731035	CastExpression	( const AttributeReference * ) expr		730989	0					
ANR	731036	CastTarget	const AttributeReference *		730989	0					
ANR	731037	Identifier	expr		730989	1					
ANR	731038	Identifier	GetComponents		730989	1					
ANR	731039	ArgumentList	tree		730989	1					
ANR	731040	Argument	tree		730989	0					
ANR	731041	Identifier	tree		730989	0					
ANR	731042	Argument	attr		730989	1					
ANR	731043	Identifier	attr		730989	0					
ANR	731044	Argument	abs		730989	2					
ANR	731045	Identifier	abs		730989	0					
ANR	731046	IfStatement	if ( tree == NULL )		730989	6					
ANR	731047	Condition	tree == NULL	947:16:21152:21161	730989	0	True				
ANR	731048	EqualityExpression	tree == NULL		730989	0		==			
ANR	731049	Identifier	tree		730989	0					
ANR	731050	Identifier	NULL		730989	1					
ANR	731051	CompoundStatement		16:29:522:522	730989	1					
ANR	731052	ExpressionStatement	start = abs ? state . rootAd : state . curAd	948:16:21183:21223	730989	0	True				
ANR	731053	AssignmentExpression	start = abs ? state . rootAd : state . curAd		730989	0		=			
ANR	731054	Identifier	start		730989	0					
ANR	731055	ConditionalExpression	abs ? state . rootAd : state . curAd		730989	1					
ANR	731056	Condition	abs		730989	0					
ANR	731057	Identifier	abs		730989	0					
ANR	731058	MemberAccess	state . rootAd		730989	1					
ANR	731059	Identifier	state		730989	0					
ANR	731060	Identifier	rootAd		730989	1					
ANR	731061	MemberAccess	state . curAd		730989	2					
ANR	731062	Identifier	state		730989	0					
ANR	731063	Identifier	curAd		730989	1					
ANR	731064	IfStatement	if ( abs && ( start == NULL ) )		730989	1					
ANR	731065	Condition	abs && ( start == NULL )	949:8:21233:21256	730989	0	True				
ANR	731066	AndExpression	abs && ( start == NULL )		730989	0		&&			
ANR	731067	Identifier	abs		730989	0					
ANR	731068	EqualityExpression	start == NULL		730989	1		==			
ANR	731069	Identifier	start		730989	0					
ANR	731070	Identifier	NULL		730989	1					
ANR	731071	CompoundStatement		18:35:617:617	730989	1					
ANR	731072	ReturnStatement	return false ;	950:5:21298:21310	730989	0	True				
ANR	731073	Identifier	false		730989	0					
ANR	731074	ElseStatement	else		730989	0					
ANR	731075	CompoundStatement		21:19:718:718	730989	0					
ANR	731076	IfStatement	"if ( ! tree -> Evaluate ( state , val ) )"		730989	0					
ANR	731077	Condition	"! tree -> Evaluate ( state , val )"	953:20:21383:21411	730989	0	True				
ANR	731078	UnaryOperationExpression	"! tree -> Evaluate ( state , val )"		730989	0					
ANR	731079	UnaryOperator	!		730989	0					
ANR	731080	CallExpression	"tree -> Evaluate ( state , val )"		730989	1					
ANR	731081	Callee	tree -> Evaluate		730989	0					
ANR	731082	PtrMemberAccess	tree -> Evaluate		730989	0					
ANR	731083	Identifier	tree		730989	0					
ANR	731084	Identifier	Evaluate		730989	1					
ANR	731085	ArgumentList	state		730989	1					
ANR	731086	Argument	state		730989	0					
ANR	731087	Identifier	state		730989	0					
ANR	731088	Argument	val		730989	1					
ANR	731089	Identifier	val		730989	0					
ANR	731090	CompoundStatement		22:52:772:772	730989	1					
ANR	731091	ReturnStatement	return ( false ) ;	954:20:21437:21452	730989	0	True				
ANR	731092	Identifier	false		730989	0					
ANR	731093	IfStatement	if ( val . IsUndefinedValue ( ) )		730989	1					
ANR	731094	Condition	val . IsUndefinedValue ( )	959:20:21616:21638	730989	0	True				
ANR	731095	CallExpression	val . IsUndefinedValue ( )		730989	0					
ANR	731096	Callee	val . IsUndefinedValue		730989	0					
ANR	731097	MemberAccess	val . IsUndefinedValue		730989	0					
ANR	731098	Identifier	val		730989	0					
ANR	731099	Identifier	IsUndefinedValue		730989	1					
ANR	731100	ArgumentList			730989	1					
ANR	731101	CompoundStatement		28:46:999:999	730989	1					
ANR	731102	IfStatement	if ( fullNames )		730989	0					
ANR	731103	Condition	fullNames	960:24:21668:21676	730989	0	True				
ANR	731104	Identifier	fullNames		730989	0					
ANR	731105	CompoundStatement		30:24:1062:1077	730989	1					
ANR	731106	IdentifierDeclStatement	string fullName ;	961:24:21705:21720	730989	0	True				
ANR	731107	IdentifierDecl	fullName		730989	0					
ANR	731108	IdentifierDeclType	string		730989	0					
ANR	731109	Identifier	fullName		730989	1					
ANR	731110	IfStatement	if ( tree != NULL )		730989	1					
ANR	731111	Condition	tree != NULL	962:28:21750:21761	730989	0	True				
ANR	731112	EqualityExpression	tree != NULL		730989	0		!=			
ANR	731113	Identifier	tree		730989	0					
ANR	731114	Identifier	NULL		730989	1					
ANR	731115	CompoundStatement		32:28:1151:1175	730989	1					
ANR	731116	IdentifierDeclStatement	ClassAdUnParser unparser ;	963:28:21794:21818	730989	0	True				
ANR	731117	IdentifierDecl	unparser		730989	0					
ANR	731118	IdentifierDeclType	ClassAdUnParser		730989	0					
ANR	731119	Identifier	unparser		730989	1					
ANR	731120	ExpressionStatement	"unparser . Unparse ( fullName , tree )"	964:28:21848:21880	730989	1	True				
ANR	731121	CallExpression	"unparser . Unparse ( fullName , tree )"		730989	0					
ANR	731122	Callee	unparser . Unparse		730989	0					
ANR	731123	MemberAccess	unparser . Unparse		730989	0					
ANR	731124	Identifier	unparser		730989	0					
ANR	731125	Identifier	Unparse		730989	1					
ANR	731126	ArgumentList	fullName		730989	1					
ANR	731127	Argument	fullName		730989	0					
ANR	731128	Identifier	fullName		730989	0					
ANR	731129	Argument	tree		730989	1					
ANR	731130	Identifier	tree		730989	0					
ANR	731131	ExpressionStatement	"fullName += ""."""	965:28:21910:21925	730989	2	True				
ANR	731132	AssignmentExpression	"fullName += ""."""		730989	0		+=			
ANR	731133	Identifier	fullName		730989	0					
ANR	731134	PrimaryExpression	"""."""		730989	1					
ANR	731135	ExpressionStatement	fullName += attr	967:24:21977:21993	730989	2	True				
ANR	731136	AssignmentExpression	fullName += attr		730989	0		+=			
ANR	731137	Identifier	fullName		730989	0					
ANR	731138	Identifier	attr		730989	1					
ANR	731139	ExpressionStatement	refs . insert ( fullName )	968:24:22019:22042	730989	3	True				
ANR	731140	CallExpression	refs . insert ( fullName )		730989	0					
ANR	731141	Callee	refs . insert		730989	0					
ANR	731142	MemberAccess	refs . insert		730989	0					
ANR	731143	Identifier	refs		730989	0					
ANR	731144	Identifier	insert		730989	1					
ANR	731145	ArgumentList	fullName		730989	1					
ANR	731146	Argument	fullName		730989	0					
ANR	731147	Identifier	fullName		730989	0					
ANR	731148	ReturnStatement	return true ;	969:24:22068:22079	730989	4	True				
ANR	731149	Identifier	true		730989	0					
ANR	731150	ElseStatement	else		730989	0					
ANR	731151	CompoundStatement		45:24:1668:1737	730989	0					
ANR	731152	IfStatement	if ( state . depth_remaining <= 0 )		730989	0					
ANR	731153	Condition	state . depth_remaining <= 0	971:28:22138:22163	730989	0	True				
ANR	731154	RelationalExpression	state . depth_remaining <= 0		730989	0		<=			
ANR	731155	MemberAccess	state . depth_remaining		730989	0					
ANR	731156	Identifier	state		730989	0					
ANR	731157	Identifier	depth_remaining		730989	1					
ANR	731158	PrimaryExpression	0		730989	1					
ANR	731159	CompoundStatement		40:57:1524:1524	730989	1					
ANR	731160	ReturnStatement	return false ;	972:28:22197:22209	730989	0	True				
ANR	731161	Identifier	false		730989	0					
ANR	731162	ExpressionStatement	state . depth_remaining --	974:24:22261:22284	730989	1	True				
ANR	731163	PostIncDecOperationExpression	state . depth_remaining --		730989	0					
ANR	731164	MemberAccess	state . depth_remaining		730989	0					
ANR	731165	Identifier	state		730989	0					
ANR	731166	Identifier	depth_remaining		730989	1					
ANR	731167	IncDec	--		730989	1					
ANR	731168	IdentifierDeclStatement	"bool ret = _GetExternalReferences ( tree , ad , state , refs , fullNames ) ;"	976:24:22311:22380	730989	2	True				
ANR	731169	IdentifierDecl	"ret = _GetExternalReferences ( tree , ad , state , refs , fullNames )"		730989	0					
ANR	731170	IdentifierDeclType	bool		730989	0					
ANR	731171	Identifier	ret		730989	1					
ANR	731172	AssignmentExpression	"ret = _GetExternalReferences ( tree , ad , state , refs , fullNames )"		730989	2		=			
ANR	731173	Identifier	ret		730989	0					
ANR	731174	CallExpression	"_GetExternalReferences ( tree , ad , state , refs , fullNames )"		730989	1					
ANR	731175	Callee	_GetExternalReferences		730989	0					
ANR	731176	Identifier	_GetExternalReferences		730989	0					
ANR	731177	ArgumentList	tree		730989	1					
ANR	731178	Argument	tree		730989	0					
ANR	731179	Identifier	tree		730989	0					
ANR	731180	Argument	ad		730989	1					
ANR	731181	Identifier	ad		730989	0					
ANR	731182	Argument	state		730989	2					
ANR	731183	Identifier	state		730989	0					
ANR	731184	Argument	refs		730989	3					
ANR	731185	Identifier	refs		730989	0					
ANR	731186	Argument	fullNames		730989	4					
ANR	731187	Identifier	fullNames		730989	0					
ANR	731188	ExpressionStatement	state . depth_remaining ++	978:24:22407:22430	730989	3	True				
ANR	731189	PostIncDecOperationExpression	state . depth_remaining ++		730989	0					
ANR	731190	MemberAccess	state . depth_remaining		730989	0					
ANR	731191	Identifier	state		730989	0					
ANR	731192	Identifier	depth_remaining		730989	1					
ANR	731193	IncDec	++		730989	1					
ANR	731194	ReturnStatement	return ret ;	979:24:22456:22466	730989	4	True				
ANR	731195	Identifier	ret		730989	0					
ANR	731196	IfStatement	if ( ! val . IsClassAdValue ( start ) )		730989	2					
ANR	731197	Condition	! val . IsClassAdValue ( start )	984:20:22645:22672	730989	0	True				
ANR	731198	UnaryOperationExpression	! val . IsClassAdValue ( start )		730989	0					
ANR	731199	UnaryOperator	!		730989	0					
ANR	731200	CallExpression	val . IsClassAdValue ( start )		730989	1					
ANR	731201	Callee	val . IsClassAdValue		730989	0					
ANR	731202	MemberAccess	val . IsClassAdValue		730989	0					
ANR	731203	Identifier	val		730989	0					
ANR	731204	Identifier	IsClassAdValue		730989	1					
ANR	731205	ArgumentList	start		730989	1					
ANR	731206	Argument	start		730989	0					
ANR	731207	Identifier	start		730989	0					
ANR	731208	CompoundStatement		53:52:2034:2034	730989	1					
ANR	731209	ReturnStatement	return ( false ) ;	985:20:22699:22714	730989	0	True				
ANR	731210	Identifier	false		730989	0					
ANR	731211	IdentifierDeclStatement	const ClassAd * curAd = state . curAd ;	989:3:22791:22825	730989	7	True				
ANR	731212	IdentifierDecl	* curAd = state . curAd		730989	0					
ANR	731213	IdentifierDeclType	const ClassAd *		730989	0					
ANR	731214	Identifier	curAd		730989	1					
ANR	731215	AssignmentExpression	* curAd = state . curAd		730989	2		=			
ANR	731216	Identifier	curAd		730989	0					
ANR	731217	MemberAccess	state . curAd		730989	1					
ANR	731218	Identifier	state		730989	0					
ANR	731219	Identifier	curAd		730989	1					
ANR	731220	SwitchStatement	"switch ( start -> LookupInScope ( attr , result , state ) )"		730989	8					
ANR	731221	Condition	"start -> LookupInScope ( attr , result , state )"	990:20:22847:22889	730989	0	True				
ANR	731222	CallExpression	"start -> LookupInScope ( attr , result , state )"		730989	0					
ANR	731223	Callee	start -> LookupInScope		730989	0					
ANR	731224	PtrMemberAccess	start -> LookupInScope		730989	0					
ANR	731225	Identifier	start		730989	0					
ANR	731226	Identifier	LookupInScope		730989	1					
ANR	731227	ArgumentList	attr		730989	1					
ANR	731228	Argument	attr		730989	0					
ANR	731229	Identifier	attr		730989	0					
ANR	731230	Argument	result		730989	1					
ANR	731231	Identifier	result		730989	0					
ANR	731232	Argument	state		730989	2					
ANR	731233	Identifier	state		730989	0					
ANR	731234	CompoundStatement		59:66:2250:2250	730989	1					
ANR	731235	Label	case EVAL_ERROR :	991:16:22911:22926	730989	0	True				
ANR	731236	Identifier	EVAL_ERROR		730989	0					
ANR	731237	ReturnStatement	return ( false ) ;	993:20:22986:23001	730989	1	True				
ANR	731238	Identifier	false		730989	0					
ANR	731239	Label	case EVAL_UNDEF :	995:16:23020:23035	730989	2	True				
ANR	731240	Identifier	EVAL_UNDEF		730989	0					
ANR	731241	ExpressionStatement	refs . insert ( attr )	997:20:23101:23120	730989	3	True				
ANR	731242	CallExpression	refs . insert ( attr )		730989	0					
ANR	731243	Callee	refs . insert		730989	0					
ANR	731244	MemberAccess	refs . insert		730989	0					
ANR	731245	Identifier	refs		730989	0					
ANR	731246	Identifier	insert		730989	1					
ANR	731247	ArgumentList	attr		730989	1					
ANR	731248	Argument	attr		730989	0					
ANR	731249	Identifier	attr		730989	0					
ANR	731250	ExpressionStatement	state . curAd = curAd	998:5:23127:23146	730989	4	True				
ANR	731251	AssignmentExpression	state . curAd = curAd		730989	0		=			
ANR	731252	MemberAccess	state . curAd		730989	0					
ANR	731253	Identifier	state		730989	0					
ANR	731254	Identifier	curAd		730989	1					
ANR	731255	Identifier	curAd		730989	1					
ANR	731256	ReturnStatement	return ( true ) ;	999:20:23168:23182	730989	5	True				
ANR	731257	Identifier	true		730989	0					
ANR	731258	Label	case EVAL_OK :	1001:16:23201:23213	730989	6	True				
ANR	731259	Identifier	EVAL_OK		730989	0					
ANR	731260	CompoundStatement		78:20:2874:2938	730989	7					
ANR	731261	IfStatement	if ( state . depth_remaining <= 0 )		730989	0					
ANR	731262	Condition	state . depth_remaining <= 0	1003:24:23315:23340	730989	0	True				
ANR	731263	RelationalExpression	state . depth_remaining <= 0		730989	0		<=			
ANR	731264	MemberAccess	state . depth_remaining		730989	0					
ANR	731265	Identifier	state		730989	0					
ANR	731266	Identifier	depth_remaining		730989	1					
ANR	731267	PrimaryExpression	0		730989	1					
ANR	731268	CompoundStatement		72:53:2701:2701	730989	1					
ANR	731269	ExpressionStatement	state . curAd = curAd	1004:24:23370:23389	730989	0	True				
ANR	731270	AssignmentExpression	state . curAd = curAd		730989	0		=			
ANR	731271	MemberAccess	state . curAd		730989	0					
ANR	731272	Identifier	state		730989	0					
ANR	731273	Identifier	curAd		730989	1					
ANR	731274	Identifier	curAd		730989	1					
ANR	731275	ReturnStatement	return false ;	1005:24:23415:23427	730989	1	True				
ANR	731276	Identifier	false		730989	0					
ANR	731277	ExpressionStatement	state . depth_remaining --	1007:20:23471:23494	730989	1	True				
ANR	731278	PostIncDecOperationExpression	state . depth_remaining --		730989	0					
ANR	731279	MemberAccess	state . depth_remaining		730989	0					
ANR	731280	Identifier	state		730989	0					
ANR	731281	Identifier	depth_remaining		730989	1					
ANR	731282	IncDec	--		730989	1					
ANR	731283	IdentifierDeclStatement	"bool rval = _GetExternalReferences ( result , ad , state , refs , fullNames ) ;"	1009:20:23517:23581	730989	2	True				
ANR	731284	IdentifierDecl	"rval = _GetExternalReferences ( result , ad , state , refs , fullNames )"		730989	0					
ANR	731285	IdentifierDeclType	bool		730989	0					
ANR	731286	Identifier	rval		730989	1					
ANR	731287	AssignmentExpression	"rval = _GetExternalReferences ( result , ad , state , refs , fullNames )"		730989	2		=			
ANR	731288	Identifier	rval		730989	0					
ANR	731289	CallExpression	"_GetExternalReferences ( result , ad , state , refs , fullNames )"		730989	1					
ANR	731290	Callee	_GetExternalReferences		730989	0					
ANR	731291	Identifier	_GetExternalReferences		730989	0					
ANR	731292	ArgumentList	result		730989	1					
ANR	731293	Argument	result		730989	0					
ANR	731294	Identifier	result		730989	0					
ANR	731295	Argument	ad		730989	1					
ANR	731296	Identifier	ad		730989	0					
ANR	731297	Argument	state		730989	2					
ANR	731298	Identifier	state		730989	0					
ANR	731299	Argument	refs		730989	3					
ANR	731300	Identifier	refs		730989	0					
ANR	731301	Argument	fullNames		730989	4					
ANR	731302	Identifier	fullNames		730989	0					
ANR	731303	ExpressionStatement	state . depth_remaining ++	1011:20:23604:23627	730989	3	True				
ANR	731304	PostIncDecOperationExpression	state . depth_remaining ++		730989	0					
ANR	731305	MemberAccess	state . depth_remaining		730989	0					
ANR	731306	Identifier	state		730989	0					
ANR	731307	Identifier	depth_remaining		730989	1					
ANR	731308	IncDec	++		730989	1					
ANR	731309	ExpressionStatement	state . curAd = curAd	1012:5:23634:23653	730989	4	True				
ANR	731310	AssignmentExpression	state . curAd = curAd		730989	0		=			
ANR	731311	MemberAccess	state . curAd		730989	0					
ANR	731312	Identifier	state		730989	0					
ANR	731313	Identifier	curAd		730989	1					
ANR	731314	Identifier	curAd		730989	1					
ANR	731315	ReturnStatement	return ( rval ) ;	1013:5:23660:23674	730989	5	True				
ANR	731316	Identifier	rval		730989	0					
ANR	731317	Label	default :	1016:16:23699:23706	730989	8	True				
ANR	731318	Identifier	default		730989	0					
ANR	731319	ReturnStatement	return ( false ) ;	1018:20:23765:23780	730989	9	True				
ANR	731320	Identifier	false		730989	0					
ANR	731321	Label	case OP_NODE :	1022:8:23827:23839	730989	4	True				
ANR	731322	Identifier	OP_NODE		730989	0					
ANR	731323	CompoundStatement		94:12:3285:3312	730989	5					
ANR	731324	IdentifierDeclStatement	Operation :: OpKind op ;	1024:12:23894:23914	730989	0	True				
ANR	731325	IdentifierDecl	op		730989	0					
ANR	731326	IdentifierDeclType	Operation :: OpKind		730989	0					
ANR	731327	Identifier	op		730989	1					
ANR	731328	IdentifierDeclStatement	"ExprTree * t1 , * t2 , * t3 ;"	1025:12:23928:23955	730989	1	True				
ANR	731329	IdentifierDecl	* t1		730989	0					
ANR	731330	IdentifierDeclType	ExprTree *		730989	0					
ANR	731331	Identifier	t1		730989	1					
ANR	731332	IdentifierDecl	* t2		730989	1					
ANR	731333	IdentifierDeclType	ExprTree *		730989	0					
ANR	731334	Identifier	t2		730989	1					
ANR	731335	IdentifierDecl	* t3		730989	2					
ANR	731336	IdentifierDeclType	ExprTree *		730989	0					
ANR	731337	Identifier	t3		730989	1					
ANR	731338	ExpressionStatement	"( ( const Operation * ) expr ) -> GetComponents ( op , t1 , t2 , t3 )"	1026:12:23969:24026	730989	2	True				
ANR	731339	CallExpression	"( ( const Operation * ) expr ) -> GetComponents ( op , t1 , t2 , t3 )"		730989	0					
ANR	731340	Callee	( ( const Operation * ) expr ) -> GetComponents		730989	0					
ANR	731341	PtrMemberAccess	( ( const Operation * ) expr ) -> GetComponents		730989	0					
ANR	731342	CastExpression	( const Operation * ) expr		730989	0					
ANR	731343	CastTarget	const Operation *		730989	0					
ANR	731344	Identifier	expr		730989	1					
ANR	731345	Identifier	GetComponents		730989	1					
ANR	731346	ArgumentList	op		730989	1					
ANR	731347	Argument	op		730989	0					
ANR	731348	Identifier	op		730989	0					
ANR	731349	Argument	t1		730989	1					
ANR	731350	Identifier	t1		730989	0					
ANR	731351	Argument	t2		730989	2					
ANR	731352	Identifier	t2		730989	0					
ANR	731353	Argument	t3		730989	3					
ANR	731354	Identifier	t3		730989	0					
ANR	731355	IfStatement	"if ( t1 && ! _GetExternalReferences ( t1 , ad , state , refs , fullNames ) )"		730989	3					
ANR	731356	Condition	"t1 && ! _GetExternalReferences ( t1 , ad , state , refs , fullNames )"	1027:16:24044:24106	730989	0	True				
ANR	731357	AndExpression	"t1 && ! _GetExternalReferences ( t1 , ad , state , refs , fullNames )"		730989	0		&&			
ANR	731358	Identifier	t1		730989	0					
ANR	731359	UnaryOperationExpression	"! _GetExternalReferences ( t1 , ad , state , refs , fullNames )"		730989	1					
ANR	731360	UnaryOperator	!		730989	0					
ANR	731361	CallExpression	"_GetExternalReferences ( t1 , ad , state , refs , fullNames )"		730989	1					
ANR	731362	Callee	_GetExternalReferences		730989	0					
ANR	731363	Identifier	_GetExternalReferences		730989	0					
ANR	731364	ArgumentList	t1		730989	1					
ANR	731365	Argument	t1		730989	0					
ANR	731366	Identifier	t1		730989	0					
ANR	731367	Argument	ad		730989	1					
ANR	731368	Identifier	ad		730989	0					
ANR	731369	Argument	state		730989	2					
ANR	731370	Identifier	state		730989	0					
ANR	731371	Argument	refs		730989	3					
ANR	731372	Identifier	refs		730989	0					
ANR	731373	Argument	fullNames		730989	4					
ANR	731374	Identifier	fullNames		730989	0					
ANR	731375	CompoundStatement		96:82:3467:3467	730989	1					
ANR	731376	ReturnStatement	return ( false ) ;	1028:16:24128:24143	730989	0	True				
ANR	731377	Identifier	false		730989	0					
ANR	731378	IfStatement	"if ( t2 && ! _GetExternalReferences ( t2 , ad , state , refs , fullNames ) )"		730989	4					
ANR	731379	Condition	"t2 && ! _GetExternalReferences ( t2 , ad , state , refs , fullNames )"	1030:16:24175:24237	730989	0	True				
ANR	731380	AndExpression	"t2 && ! _GetExternalReferences ( t2 , ad , state , refs , fullNames )"		730989	0		&&			
ANR	731381	Identifier	t2		730989	0					
ANR	731382	UnaryOperationExpression	"! _GetExternalReferences ( t2 , ad , state , refs , fullNames )"		730989	1					
ANR	731383	UnaryOperator	!		730989	0					
ANR	731384	CallExpression	"_GetExternalReferences ( t2 , ad , state , refs , fullNames )"		730989	1					
ANR	731385	Callee	_GetExternalReferences		730989	0					
ANR	731386	Identifier	_GetExternalReferences		730989	0					
ANR	731387	ArgumentList	t2		730989	1					
ANR	731388	Argument	t2		730989	0					
ANR	731389	Identifier	t2		730989	0					
ANR	731390	Argument	ad		730989	1					
ANR	731391	Identifier	ad		730989	0					
ANR	731392	Argument	state		730989	2					
ANR	731393	Identifier	state		730989	0					
ANR	731394	Argument	refs		730989	3					
ANR	731395	Identifier	refs		730989	0					
ANR	731396	Argument	fullNames		730989	4					
ANR	731397	Identifier	fullNames		730989	0					
ANR	731398	CompoundStatement		99:82:3598:3598	730989	1					
ANR	731399	ReturnStatement	return ( false ) ;	1031:16:24259:24274	730989	0	True				
ANR	731400	Identifier	false		730989	0					
ANR	731401	IfStatement	"if ( t3 && ! _GetExternalReferences ( t3 , ad , state , refs , fullNames ) )"		730989	5					
ANR	731402	Condition	"t3 && ! _GetExternalReferences ( t3 , ad , state , refs , fullNames )"	1033:16:24306:24368	730989	0	True				
ANR	731403	AndExpression	"t3 && ! _GetExternalReferences ( t3 , ad , state , refs , fullNames )"		730989	0		&&			
ANR	731404	Identifier	t3		730989	0					
ANR	731405	UnaryOperationExpression	"! _GetExternalReferences ( t3 , ad , state , refs , fullNames )"		730989	1					
ANR	731406	UnaryOperator	!		730989	0					
ANR	731407	CallExpression	"_GetExternalReferences ( t3 , ad , state , refs , fullNames )"		730989	1					
ANR	731408	Callee	_GetExternalReferences		730989	0					
ANR	731409	Identifier	_GetExternalReferences		730989	0					
ANR	731410	ArgumentList	t3		730989	1					
ANR	731411	Argument	t3		730989	0					
ANR	731412	Identifier	t3		730989	0					
ANR	731413	Argument	ad		730989	1					
ANR	731414	Identifier	ad		730989	0					
ANR	731415	Argument	state		730989	2					
ANR	731416	Identifier	state		730989	0					
ANR	731417	Argument	refs		730989	3					
ANR	731418	Identifier	refs		730989	0					
ANR	731419	Argument	fullNames		730989	4					
ANR	731420	Identifier	fullNames		730989	0					
ANR	731421	CompoundStatement		102:82:3729:3729	730989	1					
ANR	731422	ReturnStatement	return ( false ) ;	1034:16:24390:24405	730989	0	True				
ANR	731423	Identifier	false		730989	0					
ANR	731424	ReturnStatement	return ( true ) ;	1036:12:24433:24447	730989	6	True				
ANR	731425	Identifier	true		730989	0					
ANR	731426	Label	case FN_CALL_NODE :	1039:8:24468:24485	730989	6	True				
ANR	731427	Identifier	FN_CALL_NODE		730989	0					
ANR	731428	CompoundStatement		112:12:3991:4022	730989	7					
ANR	731429	IdentifierDeclStatement	string fnName ;	1041:12:24540:24574	730989	0	True				
ANR	731430	IdentifierDecl	fnName		730989	0					
ANR	731431	IdentifierDeclType	string		730989	0					
ANR	731432	Identifier	fnName		730989	1					
ANR	731433	IdentifierDeclStatement	vector < ExprTree * > args ;	1042:12:24588:24620	730989	1	True				
ANR	731434	IdentifierDecl	args		730989	0					
ANR	731435	IdentifierDeclType	vector < ExprTree * >		730989	0					
ANR	731436	Identifier	args		730989	1					
ANR	731437	IdentifierDeclStatement	vector < ExprTree * > :: iterator itr ;	1043:12:24634:24665	730989	2	True				
ANR	731438	IdentifierDecl	itr		730989	0					
ANR	731439	IdentifierDeclType	vector < ExprTree * > :: iterator		730989	0					
ANR	731440	Identifier	itr		730989	1					
ANR	731441	ExpressionStatement	"( ( const FunctionCall * ) expr ) -> GetComponents ( fnName , args )"	1045:12:24680:24738	730989	3	True				
ANR	731442	CallExpression	"( ( const FunctionCall * ) expr ) -> GetComponents ( fnName , args )"		730989	0					
ANR	731443	Callee	( ( const FunctionCall * ) expr ) -> GetComponents		730989	0					
ANR	731444	PtrMemberAccess	( ( const FunctionCall * ) expr ) -> GetComponents		730989	0					
ANR	731445	CastExpression	( const FunctionCall * ) expr		730989	0					
ANR	731446	CastTarget	const FunctionCall *		730989	0					
ANR	731447	Identifier	expr		730989	1					
ANR	731448	Identifier	GetComponents		730989	1					
ANR	731449	ArgumentList	fnName		730989	1					
ANR	731450	Argument	fnName		730989	0					
ANR	731451	Identifier	fnName		730989	0					
ANR	731452	Argument	args		730989	1					
ANR	731453	Identifier	args		730989	0					
ANR	731454	ForStatement	for ( itr = args . begin ( ) ; itr != args . end ( ) ; itr ++ )		730989	4					
ANR	731455	ForInit	itr = args . begin ( ) ;	1046:17:24757:24776	730989	0	True				
ANR	731456	AssignmentExpression	itr = args . begin ( )		730989	0		=			
ANR	731457	Identifier	itr		730989	0					
ANR	731458	CallExpression	args . begin ( )		730989	1					
ANR	731459	Callee	args . begin		730989	0					
ANR	731460	MemberAccess	args . begin		730989	0					
ANR	731461	Identifier	args		730989	0					
ANR	731462	Identifier	begin		730989	1					
ANR	731463	ArgumentList			730989	1					
ANR	731464	Condition	itr != args . end ( )	1046:38:24778:24795	730989	1	True				
ANR	731465	EqualityExpression	itr != args . end ( )		730989	0		!=			
ANR	731466	Identifier	itr		730989	0					
ANR	731467	CallExpression	args . end ( )		730989	1					
ANR	731468	Callee	args . end		730989	0					
ANR	731469	MemberAccess	args . end		730989	0					
ANR	731470	Identifier	args		730989	0					
ANR	731471	Identifier	end		730989	1					
ANR	731472	ArgumentList			730989	1					
ANR	731473	PostIncDecOperationExpression	itr ++	1046:58:24798:24802	730989	2	True				
ANR	731474	Identifier	itr		730989	0					
ANR	731475	IncDec	++		730989	1					
ANR	731476	CompoundStatement		115:66:4163:4163	730989	3					
ANR	731477	IfStatement	"if ( ! _GetExternalReferences ( * itr , ad , state , refs , fullNames ) )"		730989	0					
ANR	731478	Condition	"! _GetExternalReferences ( * itr , ad , state , refs , fullNames )"	1047:20:24828:24886	730989	0	True				
ANR	731479	UnaryOperationExpression	"! _GetExternalReferences ( * itr , ad , state , refs , fullNames )"		730989	0					
ANR	731480	UnaryOperator	!		730989	0					
ANR	731481	CallExpression	"_GetExternalReferences ( * itr , ad , state , refs , fullNames )"		730989	1					
ANR	731482	Callee	_GetExternalReferences		730989	0					
ANR	731483	Identifier	_GetExternalReferences		730989	0					
ANR	731484	ArgumentList	* itr		730989	1					
ANR	731485	Argument	* itr		730989	0					
ANR	731486	UnaryOperationExpression	* itr		730989	0					
ANR	731487	UnaryOperator	*		730989	0					
ANR	731488	Identifier	itr		730989	1					
ANR	731489	Argument	ad		730989	1					
ANR	731490	Identifier	ad		730989	0					
ANR	731491	Argument	state		730989	2					
ANR	731492	Identifier	state		730989	0					
ANR	731493	Argument	refs		730989	3					
ANR	731494	Identifier	refs		730989	0					
ANR	731495	Argument	fullNames		730989	4					
ANR	731496	Identifier	fullNames		730989	0					
ANR	731497	CompoundStatement		116:82:4247:4247	730989	1					
ANR	731498	ReturnStatement	return ( false ) ;	1048:5:24897:24912	730989	0	True				
ANR	731499	Identifier	false		730989	0					
ANR	731500	ReturnStatement	return ( true ) ;	1051:12:24946:24960	730989	5	True				
ANR	731501	Identifier	true		730989	0					
ANR	731502	Label	case CLASSAD_NODE :	1055:8:24982:24999	730989	8	True				
ANR	731503	Identifier	CLASSAD_NODE		730989	0					
ANR	731504	CompoundStatement		127:12:4474:4521	730989	9					
ANR	731505	IdentifierDeclStatement	"vector < pair < string , ExprTree * > > attrs ;"	1057:12:25054:25103	730989	0	True				
ANR	731506	IdentifierDecl	attrs		730989	0					
ANR	731507	IdentifierDeclType	"vector < pair < string , ExprTree * > >"		730989	0					
ANR	731508	Identifier	attrs		730989	1					
ANR	731509	IdentifierDeclStatement	"vector < pair < string , ExprTree * > > :: iterator itr ;"	1058:12:25117:25164	730989	1	True				
ANR	731510	IdentifierDecl	itr		730989	0					
ANR	731511	IdentifierDeclType	"vector < pair < string , ExprTree * > > :: iterator"		730989	0					
ANR	731512	Identifier	itr		730989	1					
ANR	731513	ExpressionStatement	( ( const ClassAd * ) expr ) -> GetComponents ( attrs )	1060:12:25179:25225	730989	2	True				
ANR	731514	CallExpression	( ( const ClassAd * ) expr ) -> GetComponents ( attrs )		730989	0					
ANR	731515	Callee	( ( const ClassAd * ) expr ) -> GetComponents		730989	0					
ANR	731516	PtrMemberAccess	( ( const ClassAd * ) expr ) -> GetComponents		730989	0					
ANR	731517	CastExpression	( const ClassAd * ) expr		730989	0					
ANR	731518	CastTarget	const ClassAd *		730989	0					
ANR	731519	Identifier	expr		730989	1					
ANR	731520	Identifier	GetComponents		730989	1					
ANR	731521	ArgumentList	attrs		730989	1					
ANR	731522	Argument	attrs		730989	0					
ANR	731523	Identifier	attrs		730989	0					
ANR	731524	ForStatement	for ( itr = attrs . begin ( ) ; itr != attrs . end ( ) ; itr ++ )		730989	3					
ANR	731525	ForInit	itr = attrs . begin ( ) ;	1061:17:25244:25264	730989	0	True				
ANR	731526	AssignmentExpression	itr = attrs . begin ( )		730989	0		=			
ANR	731527	Identifier	itr		730989	0					
ANR	731528	CallExpression	attrs . begin ( )		730989	1					
ANR	731529	Callee	attrs . begin		730989	0					
ANR	731530	MemberAccess	attrs . begin		730989	0					
ANR	731531	Identifier	attrs		730989	0					
ANR	731532	Identifier	begin		730989	1					
ANR	731533	ArgumentList			730989	1					
ANR	731534	Condition	itr != attrs . end ( )	1061:39:25266:25284	730989	1	True				
ANR	731535	EqualityExpression	itr != attrs . end ( )		730989	0		!=			
ANR	731536	Identifier	itr		730989	0					
ANR	731537	CallExpression	attrs . end ( )		730989	1					
ANR	731538	Callee	attrs . end		730989	0					
ANR	731539	MemberAccess	attrs . end		730989	0					
ANR	731540	Identifier	attrs		730989	0					
ANR	731541	Identifier	end		730989	1					
ANR	731542	ArgumentList			730989	1					
ANR	731543	PostIncDecOperationExpression	itr ++	1061:60:25287:25291	730989	2	True				
ANR	731544	Identifier	itr		730989	0					
ANR	731545	IncDec	++		730989	1					
ANR	731546	CompoundStatement		136:16:4815:4891	730989	3					
ANR	731547	IfStatement	if ( state . depth_remaining <= 0 )		730989	0					
ANR	731548	Condition	state . depth_remaining <= 0	1062:20:25317:25342	730989	0	True				
ANR	731549	RelationalExpression	state . depth_remaining <= 0		730989	0		<=			
ANR	731550	MemberAccess	state . depth_remaining		730989	0					
ANR	731551	Identifier	state		730989	0					
ANR	731552	Identifier	depth_remaining		730989	1					
ANR	731553	PrimaryExpression	0		730989	1					
ANR	731554	CompoundStatement		131:49:4703:4703	730989	1					
ANR	731555	ReturnStatement	return false ;	1063:20:25368:25380	730989	0	True				
ANR	731556	Identifier	false		730989	0					
ANR	731557	ExpressionStatement	state . depth_remaining --	1065:16:25416:25439	730989	1	True				
ANR	731558	PostIncDecOperationExpression	state . depth_remaining --		730989	0					
ANR	731559	MemberAccess	state . depth_remaining		730989	0					
ANR	731560	Identifier	state		730989	0					
ANR	731561	Identifier	depth_remaining		730989	1					
ANR	731562	IncDec	--		730989	1					
ANR	731563	IdentifierDeclStatement	"bool ret = _GetExternalReferences ( itr -> second , ad , state , refs , fullNames ) ;"	1067:16:25458:25534	730989	2	True				
ANR	731564	IdentifierDecl	"ret = _GetExternalReferences ( itr -> second , ad , state , refs , fullNames )"		730989	0					
ANR	731565	IdentifierDeclType	bool		730989	0					
ANR	731566	Identifier	ret		730989	1					
ANR	731567	AssignmentExpression	"ret = _GetExternalReferences ( itr -> second , ad , state , refs , fullNames )"		730989	2		=			
ANR	731568	Identifier	ret		730989	0					
ANR	731569	CallExpression	"_GetExternalReferences ( itr -> second , ad , state , refs , fullNames )"		730989	1					
ANR	731570	Callee	_GetExternalReferences		730989	0					
ANR	731571	Identifier	_GetExternalReferences		730989	0					
ANR	731572	ArgumentList	itr -> second		730989	1					
ANR	731573	Argument	itr -> second		730989	0					
ANR	731574	PtrMemberAccess	itr -> second		730989	0					
ANR	731575	Identifier	itr		730989	0					
ANR	731576	Identifier	second		730989	1					
ANR	731577	Argument	ad		730989	1					
ANR	731578	Identifier	ad		730989	0					
ANR	731579	Argument	state		730989	2					
ANR	731580	Identifier	state		730989	0					
ANR	731581	Argument	refs		730989	3					
ANR	731582	Identifier	refs		730989	0					
ANR	731583	Argument	fullNames		730989	4					
ANR	731584	Identifier	fullNames		730989	0					
ANR	731585	ExpressionStatement	state . depth_remaining ++	1069:16:25553:25576	730989	3	True				
ANR	731586	PostIncDecOperationExpression	state . depth_remaining ++		730989	0					
ANR	731587	MemberAccess	state . depth_remaining		730989	0					
ANR	731588	Identifier	state		730989	0					
ANR	731589	Identifier	depth_remaining		730989	1					
ANR	731590	IncDec	++		730989	1					
ANR	731591	IfStatement	if ( ! ret )		730989	4					
ANR	731592	Condition	! ret	1070:20:25598:25601	730989	0	True				
ANR	731593	UnaryOperationExpression	! ret		730989	0					
ANR	731594	UnaryOperator	!		730989	0					
ANR	731595	Identifier	ret		730989	1					
ANR	731596	CompoundStatement		139:27:4962:4962	730989	1					
ANR	731597	ReturnStatement	return ( false ) ;	1071:5:25612:25627	730989	0	True				
ANR	731598	Identifier	false		730989	0					
ANR	731599	ReturnStatement	return ( true ) ;	1074:12:25661:25675	730989	4	True				
ANR	731600	Identifier	true		730989	0					
ANR	731601	Label	case EXPR_LIST_NODE :	1078:8:25697:25716	730989	10	True				
ANR	731602	Identifier	EXPR_LIST_NODE		730989	0					
ANR	731603	CompoundStatement		150:12:5175:5206	730989	11					
ANR	731604	IdentifierDeclStatement	vector < ExprTree * > exprs ;	1080:12:25771:25804	730989	0	True				
ANR	731605	IdentifierDecl	exprs		730989	0					
ANR	731606	IdentifierDeclType	vector < ExprTree * >		730989	0					
ANR	731607	Identifier	exprs		730989	1					
ANR	731608	IdentifierDeclStatement	vector < ExprTree * > :: iterator itr ;	1081:12:25818:25849	730989	1	True				
ANR	731609	IdentifierDecl	itr		730989	0					
ANR	731610	IdentifierDeclType	vector < ExprTree * > :: iterator		730989	0					
ANR	731611	Identifier	itr		730989	1					
ANR	731612	ExpressionStatement	( ( const ExprList * ) expr ) -> GetComponents ( exprs )	1083:12:25864:25911	730989	2	True				
ANR	731613	CallExpression	( ( const ExprList * ) expr ) -> GetComponents ( exprs )		730989	0					
ANR	731614	Callee	( ( const ExprList * ) expr ) -> GetComponents		730989	0					
ANR	731615	PtrMemberAccess	( ( const ExprList * ) expr ) -> GetComponents		730989	0					
ANR	731616	CastExpression	( const ExprList * ) expr		730989	0					
ANR	731617	CastTarget	const ExprList *		730989	0					
ANR	731618	Identifier	expr		730989	1					
ANR	731619	Identifier	GetComponents		730989	1					
ANR	731620	ArgumentList	exprs		730989	1					
ANR	731621	Argument	exprs		730989	0					
ANR	731622	Identifier	exprs		730989	0					
ANR	731623	ForStatement	for ( itr = exprs . begin ( ) ; itr != exprs . end ( ) ; itr ++ )		730989	3					
ANR	731624	ForInit	itr = exprs . begin ( ) ;	1084:17:25930:25950	730989	0	True				
ANR	731625	AssignmentExpression	itr = exprs . begin ( )		730989	0		=			
ANR	731626	Identifier	itr		730989	0					
ANR	731627	CallExpression	exprs . begin ( )		730989	1					
ANR	731628	Callee	exprs . begin		730989	0					
ANR	731629	MemberAccess	exprs . begin		730989	0					
ANR	731630	Identifier	exprs		730989	0					
ANR	731631	Identifier	begin		730989	1					
ANR	731632	ArgumentList			730989	1					
ANR	731633	Condition	itr != exprs . end ( )	1084:39:25952:25970	730989	1	True				
ANR	731634	EqualityExpression	itr != exprs . end ( )		730989	0		!=			
ANR	731635	Identifier	itr		730989	0					
ANR	731636	CallExpression	exprs . end ( )		730989	1					
ANR	731637	Callee	exprs . end		730989	0					
ANR	731638	MemberAccess	exprs . end		730989	0					
ANR	731639	Identifier	exprs		730989	0					
ANR	731640	Identifier	end		730989	1					
ANR	731641	ArgumentList			730989	1					
ANR	731642	PostIncDecOperationExpression	itr ++	1084:60:25973:25977	730989	2	True				
ANR	731643	Identifier	itr		730989	0					
ANR	731644	IncDec	++		730989	1					
ANR	731645	CompoundStatement		159:16:5501:5570	730989	3					
ANR	731646	IfStatement	if ( state . depth_remaining <= 0 )		730989	0					
ANR	731647	Condition	state . depth_remaining <= 0	1085:20:26003:26028	730989	0	True				
ANR	731648	RelationalExpression	state . depth_remaining <= 0		730989	0		<=			
ANR	731649	MemberAccess	state . depth_remaining		730989	0					
ANR	731650	Identifier	state		730989	0					
ANR	731651	Identifier	depth_remaining		730989	1					
ANR	731652	PrimaryExpression	0		730989	1					
ANR	731653	CompoundStatement		154:49:5389:5389	730989	1					
ANR	731654	ReturnStatement	return false ;	1086:20:26054:26066	730989	0	True				
ANR	731655	Identifier	false		730989	0					
ANR	731656	ExpressionStatement	state . depth_remaining --	1088:16:26102:26125	730989	1	True				
ANR	731657	PostIncDecOperationExpression	state . depth_remaining --		730989	0					
ANR	731658	MemberAccess	state . depth_remaining		730989	0					
ANR	731659	Identifier	state		730989	0					
ANR	731660	Identifier	depth_remaining		730989	1					
ANR	731661	IncDec	--		730989	1					
ANR	731662	IdentifierDeclStatement	"bool ret = _GetExternalReferences ( * itr , ad , state , refs , fullNames ) ;"	1090:16:26144:26213	730989	2	True				
ANR	731663	IdentifierDecl	"ret = _GetExternalReferences ( * itr , ad , state , refs , fullNames )"		730989	0					
ANR	731664	IdentifierDeclType	bool		730989	0					
ANR	731665	Identifier	ret		730989	1					
ANR	731666	AssignmentExpression	"ret = _GetExternalReferences ( * itr , ad , state , refs , fullNames )"		730989	2		=			
ANR	731667	Identifier	ret		730989	0					
ANR	731668	CallExpression	"_GetExternalReferences ( * itr , ad , state , refs , fullNames )"		730989	1					
ANR	731669	Callee	_GetExternalReferences		730989	0					
ANR	731670	Identifier	_GetExternalReferences		730989	0					
ANR	731671	ArgumentList	* itr		730989	1					
ANR	731672	Argument	* itr		730989	0					
ANR	731673	UnaryOperationExpression	* itr		730989	0					
ANR	731674	UnaryOperator	*		730989	0					
ANR	731675	Identifier	itr		730989	1					
ANR	731676	Argument	ad		730989	1					
ANR	731677	Identifier	ad		730989	0					
ANR	731678	Argument	state		730989	2					
ANR	731679	Identifier	state		730989	0					
ANR	731680	Argument	refs		730989	3					
ANR	731681	Identifier	refs		730989	0					
ANR	731682	Argument	fullNames		730989	4					
ANR	731683	Identifier	fullNames		730989	0					
ANR	731684	ExpressionStatement	state . depth_remaining ++	1092:16:26232:26255	730989	3	True				
ANR	731685	PostIncDecOperationExpression	state . depth_remaining ++		730989	0					
ANR	731686	MemberAccess	state . depth_remaining		730989	0					
ANR	731687	Identifier	state		730989	0					
ANR	731688	Identifier	depth_remaining		730989	1					
ANR	731689	IncDec	++		730989	1					
ANR	731690	IfStatement	if ( ! ret )		730989	4					
ANR	731691	Condition	! ret	1093:20:26277:26280	730989	0	True				
ANR	731692	UnaryOperationExpression	! ret		730989	0					
ANR	731693	UnaryOperator	!		730989	0					
ANR	731694	Identifier	ret		730989	1					
ANR	731695	CompoundStatement		162:27:5641:5641	730989	1					
ANR	731696	ReturnStatement	return ( false ) ;	1094:5:26291:26306	730989	0	True				
ANR	731697	Identifier	false		730989	0					
ANR	731698	ReturnStatement	return ( true ) ;	1097:12:26340:26354	730989	4	True				
ANR	731699	Identifier	true		730989	0					
ANR	731700	Label	default :	1101:8:26376:26383	730989	12	True				
ANR	731701	Identifier	default		730989	0					
ANR	731702	ReturnStatement	return false ;	1102:12:26397:26409	730989	13	True				
ANR	731703	Identifier	false		730989	0					
ANR	731704	ReturnType	bool		730989	1					
ANR	731705	Identifier	ClassAd :: _GetExternalReferences		730989	2					
ANR	731706	ParameterList	"const ExprTree * expr , ClassAd * ad , EvalState & state , References & refs , bool fullNames"		730989	3					
ANR	731707	Parameter	const ExprTree * expr	930:24:20552:20571	730989	0	True				
ANR	731708	ParameterType	const ExprTree *		730989	0					
ANR	731709	Identifier	expr		730989	1					
ANR	731710	Parameter	ClassAd * ad	930:46:20574:20584	730989	1	True				
ANR	731711	ParameterType	ClassAd *		730989	0					
ANR	731712	Identifier	ad		730989	1					
ANR	731713	Parameter	EvalState & state	931:1:20589:20604	730989	2	True				
ANR	731714	ParameterType	EvalState &		730989	0					
ANR	731715	Identifier	state		730989	1					
ANR	731716	Parameter	References & refs	931:19:20607:20622	730989	3	True				
ANR	731717	ParameterType	References &		730989	0					
ANR	731718	Identifier	refs		730989	1					
ANR	731719	Parameter	bool fullNames	931:37:20625:20638	730989	4	True				
ANR	731720	ParameterType	bool		730989	0					
ANR	731721	Identifier	fullNames		730989	1					
ANR	731722	CFGEntryNode	ENTRY		730989		True				
ANR	731723	CFGExitNode	EXIT		730989		True				
ANR	731724	Symbol	* start		730989						
ANR	731725	Symbol	state . rootAd		730989						
ANR	731726	Symbol	result		730989						
ANR	731727	Symbol	state . curAd		730989						
ANR	731728	Symbol	args . begin		730989						
ANR	731729	Symbol	state . depth_remaining		730989						
ANR	731730	Symbol	attrs . begin		730989						
ANR	731731	Symbol	val . IsClassAdValue		730989						
ANR	731732	Symbol	exprs		730989						
ANR	731733	Symbol	exprs . end		730989						
ANR	731734	Symbol	expr		730989						
ANR	731735	Symbol	rval		730989						
ANR	731736	Symbol	state		730989						
ANR	731737	Symbol	attr		730989						
ANR	731738	Symbol	start -> LookupInScope		730989						
ANR	731739	Symbol	exprs . begin		730989						
ANR	731740	Symbol	itr -> second		730989						
ANR	731741	Symbol	val		730989						
ANR	731742	Symbol	ret		730989						
ANR	731743	Symbol	args . end		730989						
ANR	731744	Symbol	expr -> GetKind		730989						
ANR	731745	Symbol	op		730989						
ANR	731746	Symbol	ad		730989						
ANR	731747	Symbol	NULL		730989						
ANR	731748	Symbol	_GetExternalReferences		730989						
ANR	731749	Symbol	itr		730989						
ANR	731750	Symbol	start		730989						
ANR	731751	Symbol	tree		730989						
ANR	731752	Symbol	false		730989						
ANR	731753	Symbol	fullName		730989						
ANR	731754	Symbol	fullNames		730989						
ANR	731755	Symbol	curAd		730989						
ANR	731756	Symbol	val . IsUndefinedValue		730989						
ANR	731757	Symbol	* itr		730989						
ANR	731758	Symbol	attrs		730989						
ANR	731759	Symbol	* tree		730989						
ANR	731760	Symbol	args		730989						
ANR	731761	Symbol	fnName		730989						
ANR	731762	Symbol	abs		730989						
ANR	731763	Symbol	refs		730989						
ANR	731764	Symbol	* expr		730989						
ANR	731765	Symbol	true		730989						
ANR	731766	Symbol	tree -> Evaluate		730989						
ANR	731767	Symbol	unparser		730989						
ANR	731768	Symbol	attrs . end		730989						
ANR	731769	Symbol	t1		730989						
ANR	731770	Symbol	t2		730989						
ANR	731771	Symbol	t3		730989						
ANR	731772	Function	ClassAd :: GetExternalReferences	1106:0:26420:26709							
ANR	731773	FunctionDef	"ClassAd :: GetExternalReferences (const ExprTree * tree , PortReferences & refs)"		731772	0					
ANR	731774	CompoundStatement		1108:0:26503:26709	731772	0					
ANR	731775	IdentifierDeclStatement	EvalState state ;	1109:4:26509:26530	731772	0	True				
ANR	731776	IdentifierDecl	state		731772	0					
ANR	731777	IdentifierDeclType	EvalState		731772	0					
ANR	731778	Identifier	state		731772	1					
ANR	731779	ExpressionStatement	state . rootAd = this	1111:4:26537:26556	731772	1	True				
ANR	731780	AssignmentExpression	state . rootAd = this		731772	0		=			
ANR	731781	MemberAccess	state . rootAd		731772	0					
ANR	731782	Identifier	state		731772	0					
ANR	731783	Identifier	rootAd		731772	1					
ANR	731784	Identifier	this		731772	1					
ANR	731785	ExpressionStatement	state . curAd = tree -> GetParentScope ( )	1112:4:26563:26600	731772	2	True				
ANR	731786	AssignmentExpression	state . curAd = tree -> GetParentScope ( )		731772	0		=			
ANR	731787	MemberAccess	state . curAd		731772	0					
ANR	731788	Identifier	state		731772	0					
ANR	731789	Identifier	curAd		731772	1					
ANR	731790	CallExpression	tree -> GetParentScope ( )		731772	1					
ANR	731791	Callee	tree -> GetParentScope		731772	0					
ANR	731792	PtrMemberAccess	tree -> GetParentScope		731772	0					
ANR	731793	Identifier	tree		731772	0					
ANR	731794	Identifier	GetParentScope		731772	1					
ANR	731795	ArgumentList			731772	1					
ANR	731796	IfStatement	if ( ! state . curAd )		731772	3					
ANR	731797	Condition	! state . curAd	1113:5:26607:26618	731772	0	True				
ANR	731798	UnaryOperationExpression	! state . curAd		731772	0					
ANR	731799	UnaryOperator	!		731772	0					
ANR	731800	MemberAccess	state . curAd		731772	1					
ANR	731801	Identifier	state		731772	0					
ANR	731802	Identifier	curAd		731772	1					
ANR	731803	ExpressionStatement	state . curAd = this	1113:20:26622:26640	731772	1	True				
ANR	731804	AssignmentExpression	state . curAd = this		731772	0		=			
ANR	731805	MemberAccess	state . curAd		731772	0					
ANR	731806	Identifier	state		731772	0					
ANR	731807	Identifier	curAd		731772	1					
ANR	731808	Identifier	this		731772	1					
ANR	731809	ReturnStatement	"return ( _GetExternalReferences ( tree , this , state , refs ) ) ;"	1115:4:26648:26707	731772	4	True				
ANR	731810	CallExpression	"_GetExternalReferences ( tree , this , state , refs )"		731772	0					
ANR	731811	Callee	_GetExternalReferences		731772	0					
ANR	731812	Identifier	_GetExternalReferences		731772	0					
ANR	731813	ArgumentList	tree		731772	1					
ANR	731814	Argument	tree		731772	0					
ANR	731815	Identifier	tree		731772	0					
ANR	731816	Argument	this		731772	1					
ANR	731817	Identifier	this		731772	0					
ANR	731818	Argument	state		731772	2					
ANR	731819	Identifier	state		731772	0					
ANR	731820	Argument	refs		731772	3					
ANR	731821	Identifier	refs		731772	0					
ANR	731822	ReturnType	bool		731772	1					
ANR	731823	Identifier	ClassAd :: GetExternalReferences		731772	2					
ANR	731824	ParameterList	"const ExprTree * tree , PortReferences & refs"		731772	3					
ANR	731825	Parameter	const ExprTree * tree	1107:23:26458:26477	731772	0	True				
ANR	731826	ParameterType	const ExprTree *		731772	0					
ANR	731827	Identifier	tree		731772	1					
ANR	731828	Parameter	PortReferences & refs	1107:45:26480:26499	731772	1	True				
ANR	731829	ParameterType	PortReferences &		731772	0					
ANR	731830	Identifier	refs		731772	1					
ANR	731831	CFGEntryNode	ENTRY		731772		True				
ANR	731832	CFGExitNode	EXIT		731772		True				
ANR	731833	Symbol	state . curAd		731772						
ANR	731834	Symbol	* tree		731772						
ANR	731835	Symbol	tree -> GetParentScope		731772						
ANR	731836	Symbol	refs		731772						
ANR	731837	Symbol	_GetExternalReferences		731772						
ANR	731838	Symbol	tree		731772						
ANR	731839	Symbol	state . rootAd		731772						
ANR	731840	Symbol	this		731772						
ANR	731841	Symbol	state		731772						
ANR	731842	Function	ClassAd :: _GetExternalReferences	1118:0:26712:31187							
ANR	731843	FunctionDef	"ClassAd :: _GetExternalReferences (const ExprTree * expr , ClassAd * ad , EvalState & state , PortReferences & refs)"		731842	0					
ANR	731844	CompoundStatement		1121:0:26829:31187	731842	0					
ANR	731845	SwitchStatement	switch ( expr -> GetKind ( ) )		731842	0					
ANR	731846	Condition	expr -> GetKind ( )	1122:12:26843:26858	731842	0	True				
ANR	731847	CallExpression	expr -> GetKind ( )		731842	0					
ANR	731848	Callee	expr -> GetKind		731842	0					
ANR	731849	PtrMemberAccess	expr -> GetKind		731842	0					
ANR	731850	Identifier	expr		731842	0					
ANR	731851	Identifier	GetKind		731842	1					
ANR	731852	ArgumentList			731842	1					
ANR	731853	CompoundStatement		2:31:32:32	731842	1					
ANR	731854	Label	case LITERAL_NODE :	1123:8:26872:26889	731842	0	True				
ANR	731855	Identifier	LITERAL_NODE		731842	0					
ANR	731856	ReturnStatement	return ( true ) ;	1125:12:26950:26964	731842	1	True				
ANR	731857	Identifier	true		731842	0					
ANR	731858	Label	case ATTRREF_NODE :	1127:8:26975:26992	731842	2	True				
ANR	731859	Identifier	ATTRREF_NODE		731842	0					
ANR	731860	CompoundStatement		41:3:1503:1537	731842	3					
ANR	731861	IdentifierDeclStatement	const ClassAd * start ;	1128:12:27008:27030	731842	0	True				
ANR	731862	IdentifierDecl	* start		731842	0					
ANR	731863	IdentifierDeclType	const ClassAd *		731842	0					
ANR	731864	Identifier	start		731842	1					
ANR	731865	IdentifierDeclStatement	"ExprTree * tree , * result ;"	1129:12:27044:27074	731842	1	True				
ANR	731866	IdentifierDecl	* tree		731842	0					
ANR	731867	IdentifierDeclType	ExprTree *		731842	0					
ANR	731868	Identifier	tree		731842	1					
ANR	731869	IdentifierDecl	* result		731842	1					
ANR	731870	IdentifierDeclType	ExprTree *		731842	0					
ANR	731871	Identifier	result		731842	1					
ANR	731872	IdentifierDeclStatement	string attr ;	1130:12:27088:27108	731842	2	True				
ANR	731873	IdentifierDecl	attr		731842	0					
ANR	731874	IdentifierDeclType	string		731842	0					
ANR	731875	Identifier	attr		731842	1					
ANR	731876	IdentifierDeclStatement	Value val ;	1131:12:27122:27141	731842	3	True				
ANR	731877	IdentifierDecl	val		731842	0					
ANR	731878	IdentifierDeclType	Value		731842	0					
ANR	731879	Identifier	val		731842	1					
ANR	731880	IdentifierDeclStatement	bool abs ;	1132:12:27155:27174	731842	4	True				
ANR	731881	IdentifierDecl	abs		731842	0					
ANR	731882	IdentifierDeclType	bool		731842	0					
ANR	731883	Identifier	abs		731842	1					
ANR	731884	IdentifierDeclStatement	PortReferences :: iterator pitr ;	1133:3:27179:27208	731842	5	True				
ANR	731885	IdentifierDecl	pitr		731842	0					
ANR	731886	IdentifierDeclType	PortReferences :: iterator		731842	0					
ANR	731887	Identifier	pitr		731842	1					
ANR	731888	ExpressionStatement	"( ( const AttributeReference * ) expr ) -> GetComponents ( tree , attr , abs )"	1135:12:27223:27290	731842	6	True				
ANR	731889	CallExpression	"( ( const AttributeReference * ) expr ) -> GetComponents ( tree , attr , abs )"		731842	0					
ANR	731890	Callee	( ( const AttributeReference * ) expr ) -> GetComponents		731842	0					
ANR	731891	PtrMemberAccess	( ( const AttributeReference * ) expr ) -> GetComponents		731842	0					
ANR	731892	CastExpression	( const AttributeReference * ) expr		731842	0					
ANR	731893	CastTarget	const AttributeReference *		731842	0					
ANR	731894	Identifier	expr		731842	1					
ANR	731895	Identifier	GetComponents		731842	1					
ANR	731896	ArgumentList	tree		731842	1					
ANR	731897	Argument	tree		731842	0					
ANR	731898	Identifier	tree		731842	0					
ANR	731899	Argument	attr		731842	1					
ANR	731900	Identifier	attr		731842	0					
ANR	731901	Argument	abs		731842	2					
ANR	731902	Identifier	abs		731842	0					
ANR	731903	IfStatement	if ( tree == NULL )		731842	7					
ANR	731904	Condition	tree == NULL	1137:16:27373:27382	731842	0	True				
ANR	731905	EqualityExpression	tree == NULL		731842	0		==			
ANR	731906	Identifier	tree		731842	0					
ANR	731907	Identifier	NULL		731842	1					
ANR	731908	CompoundStatement		17:29:556:556	731842	1					
ANR	731909	ExpressionStatement	start = abs ? state . rootAd : state . curAd	1138:16:27404:27444	731842	0	True				
ANR	731910	AssignmentExpression	start = abs ? state . rootAd : state . curAd		731842	0		=			
ANR	731911	Identifier	start		731842	0					
ANR	731912	ConditionalExpression	abs ? state . rootAd : state . curAd		731842	1					
ANR	731913	Condition	abs		731842	0					
ANR	731914	Identifier	abs		731842	0					
ANR	731915	MemberAccess	state . rootAd		731842	1					
ANR	731916	Identifier	state		731842	0					
ANR	731917	Identifier	rootAd		731842	1					
ANR	731918	MemberAccess	state . curAd		731842	2					
ANR	731919	Identifier	state		731842	0					
ANR	731920	Identifier	curAd		731842	1					
ANR	731921	IfStatement	if ( abs && ( start == NULL ) )		731842	1					
ANR	731922	Condition	abs && ( start == NULL )	1139:8:27454:27477	731842	0	True				
ANR	731923	AndExpression	abs && ( start == NULL )		731842	0		&&			
ANR	731924	Identifier	abs		731842	0					
ANR	731925	EqualityExpression	start == NULL		731842	1		==			
ANR	731926	Identifier	start		731842	0					
ANR	731927	Identifier	NULL		731842	1					
ANR	731928	CompoundStatement		19:35:651:651	731842	1					
ANR	731929	ReturnStatement	return false ;	1140:5:27519:27531	731842	0	True				
ANR	731930	Identifier	false		731842	0					
ANR	731931	ElseStatement	else		731842	0					
ANR	731932	CompoundStatement		22:19:752:752	731842	0					
ANR	731933	IfStatement	"if ( ! tree -> Evaluate ( state , val ) )"		731842	0					
ANR	731934	Condition	"! tree -> Evaluate ( state , val )"	1143:20:27604:27632	731842	0	True				
ANR	731935	UnaryOperationExpression	"! tree -> Evaluate ( state , val )"		731842	0					
ANR	731936	UnaryOperator	!		731842	0					
ANR	731937	CallExpression	"tree -> Evaluate ( state , val )"		731842	1					
ANR	731938	Callee	tree -> Evaluate		731842	0					
ANR	731939	PtrMemberAccess	tree -> Evaluate		731842	0					
ANR	731940	Identifier	tree		731842	0					
ANR	731941	Identifier	Evaluate		731842	1					
ANR	731942	ArgumentList	state		731842	1					
ANR	731943	Argument	state		731842	0					
ANR	731944	Identifier	state		731842	0					
ANR	731945	Argument	val		731842	1					
ANR	731946	Identifier	val		731842	0					
ANR	731947	ReturnStatement	return ( false ) ;	1143:52:27636:27651	731842	1	True				
ANR	731948	Identifier	false		731842	0					
ANR	731949	IfStatement	if ( val . IsUndefinedValue ( ) )		731842	1					
ANR	731950	Condition	val . IsUndefinedValue ( )	1147:20:27797:27819	731842	0	True				
ANR	731951	CallExpression	val . IsUndefinedValue ( )		731842	0					
ANR	731952	Callee	val . IsUndefinedValue		731842	0					
ANR	731953	MemberAccess	val . IsUndefinedValue		731842	0					
ANR	731954	Identifier	val		731842	0					
ANR	731955	Identifier	IsUndefinedValue		731842	1					
ANR	731956	ArgumentList			731842	1					
ANR	731957	CompoundStatement		27:46:993:993	731842	1					
ANR	731958	ReturnStatement	"return ( _GetExternalReferences ( tree , ad , state , refs ) ) ;"	1148:20:27845:27901	731842	0	True				
ANR	731959	CallExpression	"_GetExternalReferences ( tree , ad , state , refs )"		731842	0					
ANR	731960	Callee	_GetExternalReferences		731842	0					
ANR	731961	Identifier	_GetExternalReferences		731842	0					
ANR	731962	ArgumentList	tree		731842	1					
ANR	731963	Argument	tree		731842	0					
ANR	731964	Identifier	tree		731842	0					
ANR	731965	Argument	ad		731842	1					
ANR	731966	Identifier	ad		731842	0					
ANR	731967	Argument	state		731842	2					
ANR	731968	Identifier	state		731842	0					
ANR	731969	Argument	refs		731842	3					
ANR	731970	Identifier	refs		731842	0					
ANR	731971	IfStatement	if ( ! val . IsClassAdValue ( start ) )		731842	2					
ANR	731972	Condition	! val . IsClassAdValue ( start )	1152:20:28058:28085	731842	0	True				
ANR	731973	UnaryOperationExpression	! val . IsClassAdValue ( start )		731842	0					
ANR	731974	UnaryOperator	!		731842	0					
ANR	731975	CallExpression	val . IsClassAdValue ( start )		731842	1					
ANR	731976	Callee	val . IsClassAdValue		731842	0					
ANR	731977	MemberAccess	val . IsClassAdValue		731842	0					
ANR	731978	Identifier	val		731842	0					
ANR	731979	Identifier	IsClassAdValue		731842	1					
ANR	731980	ArgumentList	start		731842	1					
ANR	731981	Argument	start		731842	0					
ANR	731982	Identifier	start		731842	0					
ANR	731983	ReturnStatement	return ( false ) ;	1152:51:28089:28104	731842	1	True				
ANR	731984	Identifier	false		731842	0					
ANR	731985	IfStatement	if ( ( pitr = refs . find ( start ) ) == refs . end ( ) && start != this )		731842	3					
ANR	731986	Condition	( pitr = refs . find ( start ) ) == refs . end ( ) && start != this	1155:8:28175:28242	731842	0	True				
ANR	731987	AndExpression	( pitr = refs . find ( start ) ) == refs . end ( ) && start != this		731842	0		&&			
ANR	731988	EqualityExpression	( pitr = refs . find ( start ) ) == refs . end ( )		731842	0		==			
ANR	731989	AssignmentExpression	pitr = refs . find ( start )		731842	0		=			
ANR	731990	Identifier	pitr		731842	0					
ANR	731991	CallExpression	refs . find ( start )		731842	1					
ANR	731992	Callee	refs . find		731842	0					
ANR	731993	MemberAccess	refs . find		731842	0					
ANR	731994	Identifier	refs		731842	0					
ANR	731995	Identifier	find		731842	1					
ANR	731996	ArgumentList	start		731842	1					
ANR	731997	Argument	start		731842	0					
ANR	731998	Identifier	start		731842	0					
ANR	731999	CallExpression	refs . end ( )		731842	1					
ANR	732000	Callee	refs . end		731842	0					
ANR	732001	MemberAccess	refs . end		731842	0					
ANR	732002	Identifier	refs		731842	0					
ANR	732003	Identifier	end		731842	1					
ANR	732004	ArgumentList			731842	1					
ANR	732005	EqualityExpression	start != this		731842	1		!=			
ANR	732006	Identifier	start		731842	0					
ANR	732007	Identifier	this		731842	1					
ANR	732008	CompoundStatement		36:22:1416:1416	731842	1					
ANR	732009	ReturnStatement	return ( false ) ;	1157:5:28253:28268	731842	0	True				
ANR	732010	Identifier	false		731842	0					
ANR	732011	IdentifierDeclStatement	const ClassAd * curAd = state . curAd ;	1161:3:28333:28367	731842	8	True				
ANR	732012	IdentifierDecl	* curAd = state . curAd		731842	0					
ANR	732013	IdentifierDeclType	const ClassAd *		731842	0					
ANR	732014	Identifier	curAd		731842	1					
ANR	732015	AssignmentExpression	* curAd = state . curAd		731842	2		=			
ANR	732016	Identifier	curAd		731842	0					
ANR	732017	MemberAccess	state . curAd		731842	1					
ANR	732018	Identifier	state		731842	0					
ANR	732019	Identifier	curAd		731842	1					
ANR	732020	SwitchStatement	"switch ( start -> LookupInScope ( attr , result , state ) )"		731842	9					
ANR	732021	Condition	"start -> LookupInScope ( attr , result , state )"	1162:20:28389:28431	731842	0	True				
ANR	732022	CallExpression	"start -> LookupInScope ( attr , result , state )"		731842	0					
ANR	732023	Callee	start -> LookupInScope		731842	0					
ANR	732024	PtrMemberAccess	start -> LookupInScope		731842	0					
ANR	732025	Identifier	start		731842	0					
ANR	732026	Identifier	LookupInScope		731842	1					
ANR	732027	ArgumentList	attr		731842	1					
ANR	732028	Argument	attr		731842	0					
ANR	732029	Identifier	attr		731842	0					
ANR	732030	Argument	result		731842	1					
ANR	732031	Identifier	result		731842	0					
ANR	732032	Argument	state		731842	2					
ANR	732033	Identifier	state		731842	0					
ANR	732034	CompoundStatement		42:66:1605:1605	731842	1					
ANR	732035	Label	case EVAL_ERROR :	1163:16:28453:28468	731842	0	True				
ANR	732036	Identifier	EVAL_ERROR		731842	0					
ANR	732037	ReturnStatement	return ( false ) ;	1165:20:28528:28543	731842	1	True				
ANR	732038	Identifier	false		731842	0					
ANR	732039	Label	case EVAL_UNDEF :	1167:16:28562:28577	731842	2	True				
ANR	732040	Identifier	EVAL_UNDEF		731842	0					
ANR	732041	ExpressionStatement	pitr -> second . insert ( attr )	1169:20:28643:28670	731842	3	True				
ANR	732042	CallExpression	pitr -> second . insert ( attr )		731842	0					
ANR	732043	Callee	pitr -> second . insert		731842	0					
ANR	732044	MemberAccess	pitr -> second . insert		731842	0					
ANR	732045	PtrMemberAccess	pitr -> second		731842	0					
ANR	732046	Identifier	pitr		731842	0					
ANR	732047	Identifier	second		731842	1					
ANR	732048	Identifier	insert		731842	1					
ANR	732049	ArgumentList	attr		731842	1					
ANR	732050	Argument	attr		731842	0					
ANR	732051	Identifier	attr		731842	0					
ANR	732052	ExpressionStatement	state . curAd = curAd	1170:5:28677:28696	731842	4	True				
ANR	732053	AssignmentExpression	state . curAd = curAd		731842	0		=			
ANR	732054	MemberAccess	state . curAd		731842	0					
ANR	732055	Identifier	state		731842	0					
ANR	732056	Identifier	curAd		731842	1					
ANR	732057	Identifier	curAd		731842	1					
ANR	732058	ReturnStatement	return ( true ) ;	1171:20:28718:28732	731842	5	True				
ANR	732059	Identifier	true		731842	0					
ANR	732060	Label	case EVAL_OK :	1173:16:28751:28763	731842	6	True				
ANR	732061	Identifier	EVAL_OK		731842	0					
ANR	732062	CompoundStatement		55:5:2016:2070	731842	7					
ANR	732063	IdentifierDeclStatement	"bool rval = _GetExternalReferences ( result , ad , state , refs ) ;"	1175:5:28846:28900	731842	0	True				
ANR	732064	IdentifierDecl	"rval = _GetExternalReferences ( result , ad , state , refs )"		731842	0					
ANR	732065	IdentifierDeclType	bool		731842	0					
ANR	732066	Identifier	rval		731842	1					
ANR	732067	AssignmentExpression	"rval = _GetExternalReferences ( result , ad , state , refs )"		731842	2		=			
ANR	732068	Identifier	rval		731842	0					
ANR	732069	CallExpression	"_GetExternalReferences ( result , ad , state , refs )"		731842	1					
ANR	732070	Callee	_GetExternalReferences		731842	0					
ANR	732071	Identifier	_GetExternalReferences		731842	0					
ANR	732072	ArgumentList	result		731842	1					
ANR	732073	Argument	result		731842	0					
ANR	732074	Identifier	result		731842	0					
ANR	732075	Argument	ad		731842	1					
ANR	732076	Identifier	ad		731842	0					
ANR	732077	Argument	state		731842	2					
ANR	732078	Identifier	state		731842	0					
ANR	732079	Argument	refs		731842	3					
ANR	732080	Identifier	refs		731842	0					
ANR	732081	ExpressionStatement	state . curAd = curAd	1176:5:28907:28926	731842	1	True				
ANR	732082	AssignmentExpression	state . curAd = curAd		731842	0		=			
ANR	732083	MemberAccess	state . curAd		731842	0					
ANR	732084	Identifier	state		731842	0					
ANR	732085	Identifier	curAd		731842	1					
ANR	732086	Identifier	curAd		731842	1					
ANR	732087	ReturnStatement	return ( rval ) ;	1177:5:28933:28947	731842	2	True				
ANR	732088	Identifier	rval		731842	0					
ANR	732089	Label	default :	1180:16:28972:28979	731842	8	True				
ANR	732090	Identifier	default		731842	0					
ANR	732091	ReturnStatement	return ( false ) ;	1182:20:29038:29053	731842	9	True				
ANR	732092	Identifier	false		731842	0					
ANR	732093	Label	case OP_NODE :	1186:8:29100:29112	731842	4	True				
ANR	732094	Identifier	OP_NODE		731842	0					
ANR	732095	CompoundStatement		69:12:2373:2400	731842	5					
ANR	732096	IdentifierDeclStatement	Operation :: OpKind op ;	1188:12:29167:29189	731842	0	True				
ANR	732097	IdentifierDecl	op		731842	0					
ANR	732098	IdentifierDeclType	Operation :: OpKind		731842	0					
ANR	732099	Identifier	op		731842	1					
ANR	732100	IdentifierDeclStatement	"ExprTree * t1 , * t2 , * t3 ;"	1189:12:29203:29230	731842	1	True				
ANR	732101	IdentifierDecl	* t1		731842	0					
ANR	732102	IdentifierDeclType	ExprTree *		731842	0					
ANR	732103	Identifier	t1		731842	1					
ANR	732104	IdentifierDecl	* t2		731842	1					
ANR	732105	IdentifierDeclType	ExprTree *		731842	0					
ANR	732106	Identifier	t2		731842	1					
ANR	732107	IdentifierDecl	* t3		731842	2					
ANR	732108	IdentifierDeclType	ExprTree *		731842	0					
ANR	732109	Identifier	t3		731842	1					
ANR	732110	ExpressionStatement	"( ( const Operation * ) expr ) -> GetComponents ( op , t1 , t2 , t3 )"	1190:12:29244:29301	731842	2	True				
ANR	732111	CallExpression	"( ( const Operation * ) expr ) -> GetComponents ( op , t1 , t2 , t3 )"		731842	0					
ANR	732112	Callee	( ( const Operation * ) expr ) -> GetComponents		731842	0					
ANR	732113	PtrMemberAccess	( ( const Operation * ) expr ) -> GetComponents		731842	0					
ANR	732114	CastExpression	( const Operation * ) expr		731842	0					
ANR	732115	CastTarget	const Operation *		731842	0					
ANR	732116	Identifier	expr		731842	1					
ANR	732117	Identifier	GetComponents		731842	1					
ANR	732118	ArgumentList	op		731842	1					
ANR	732119	Argument	op		731842	0					
ANR	732120	Identifier	op		731842	0					
ANR	732121	Argument	t1		731842	1					
ANR	732122	Identifier	t1		731842	0					
ANR	732123	Argument	t2		731842	2					
ANR	732124	Identifier	t2		731842	0					
ANR	732125	Argument	t3		731842	3					
ANR	732126	Identifier	t3		731842	0					
ANR	732127	IfStatement	"if ( t1 && ! _GetExternalReferences ( t1 , ad , state , refs ) )"		731842	3					
ANR	732128	Condition	"t1 && ! _GetExternalReferences ( t1 , ad , state , refs )"	1191:16:29319:29370	731842	0	True				
ANR	732129	AndExpression	"t1 && ! _GetExternalReferences ( t1 , ad , state , refs )"		731842	0		&&			
ANR	732130	Identifier	t1		731842	0					
ANR	732131	UnaryOperationExpression	"! _GetExternalReferences ( t1 , ad , state , refs )"		731842	1					
ANR	732132	UnaryOperator	!		731842	0					
ANR	732133	CallExpression	"_GetExternalReferences ( t1 , ad , state , refs )"		731842	1					
ANR	732134	Callee	_GetExternalReferences		731842	0					
ANR	732135	Identifier	_GetExternalReferences		731842	0					
ANR	732136	ArgumentList	t1		731842	1					
ANR	732137	Argument	t1		731842	0					
ANR	732138	Identifier	t1		731842	0					
ANR	732139	Argument	ad		731842	1					
ANR	732140	Identifier	ad		731842	0					
ANR	732141	Argument	state		731842	2					
ANR	732142	Identifier	state		731842	0					
ANR	732143	Argument	refs		731842	3					
ANR	732144	Identifier	refs		731842	0					
ANR	732145	CompoundStatement		71:71:2544:2544	731842	1					
ANR	732146	ReturnStatement	return ( false ) ;	1192:16:29392:29407	731842	0	True				
ANR	732147	Identifier	false		731842	0					
ANR	732148	IfStatement	"if ( t2 && ! _GetExternalReferences ( t2 , ad , state , refs ) )"		731842	4					
ANR	732149	Condition	"t2 && ! _GetExternalReferences ( t2 , ad , state , refs )"	1194:16:29439:29490	731842	0	True				
ANR	732150	AndExpression	"t2 && ! _GetExternalReferences ( t2 , ad , state , refs )"		731842	0		&&			
ANR	732151	Identifier	t2		731842	0					
ANR	732152	UnaryOperationExpression	"! _GetExternalReferences ( t2 , ad , state , refs )"		731842	1					
ANR	732153	UnaryOperator	!		731842	0					
ANR	732154	CallExpression	"_GetExternalReferences ( t2 , ad , state , refs )"		731842	1					
ANR	732155	Callee	_GetExternalReferences		731842	0					
ANR	732156	Identifier	_GetExternalReferences		731842	0					
ANR	732157	ArgumentList	t2		731842	1					
ANR	732158	Argument	t2		731842	0					
ANR	732159	Identifier	t2		731842	0					
ANR	732160	Argument	ad		731842	1					
ANR	732161	Identifier	ad		731842	0					
ANR	732162	Argument	state		731842	2					
ANR	732163	Identifier	state		731842	0					
ANR	732164	Argument	refs		731842	3					
ANR	732165	Identifier	refs		731842	0					
ANR	732166	CompoundStatement		74:71:2664:2664	731842	1					
ANR	732167	ReturnStatement	return ( false ) ;	1195:16:29512:29527	731842	0	True				
ANR	732168	Identifier	false		731842	0					
ANR	732169	IfStatement	"if ( t3 && ! _GetExternalReferences ( t3 , ad , state , refs ) )"		731842	5					
ANR	732170	Condition	"t3 && ! _GetExternalReferences ( t3 , ad , state , refs )"	1197:16:29559:29610	731842	0	True				
ANR	732171	AndExpression	"t3 && ! _GetExternalReferences ( t3 , ad , state , refs )"		731842	0		&&			
ANR	732172	Identifier	t3		731842	0					
ANR	732173	UnaryOperationExpression	"! _GetExternalReferences ( t3 , ad , state , refs )"		731842	1					
ANR	732174	UnaryOperator	!		731842	0					
ANR	732175	CallExpression	"_GetExternalReferences ( t3 , ad , state , refs )"		731842	1					
ANR	732176	Callee	_GetExternalReferences		731842	0					
ANR	732177	Identifier	_GetExternalReferences		731842	0					
ANR	732178	ArgumentList	t3		731842	1					
ANR	732179	Argument	t3		731842	0					
ANR	732180	Identifier	t3		731842	0					
ANR	732181	Argument	ad		731842	1					
ANR	732182	Identifier	ad		731842	0					
ANR	732183	Argument	state		731842	2					
ANR	732184	Identifier	state		731842	0					
ANR	732185	Argument	refs		731842	3					
ANR	732186	Identifier	refs		731842	0					
ANR	732187	CompoundStatement		77:71:2784:2784	731842	1					
ANR	732188	ReturnStatement	return ( false ) ;	1198:16:29632:29647	731842	0	True				
ANR	732189	Identifier	false		731842	0					
ANR	732190	ReturnStatement	return ( true ) ;	1200:12:29675:29689	731842	6	True				
ANR	732191	Identifier	true		731842	0					
ANR	732192	Label	case FN_CALL_NODE :	1203:8:29710:29727	731842	6	True				
ANR	732193	Identifier	FN_CALL_NODE		731842	0					
ANR	732194	CompoundStatement		87:12:3046:3077	731842	7					
ANR	732195	IdentifierDeclStatement	string fnName ;	1205:12:29782:29816	731842	0	True				
ANR	732196	IdentifierDecl	fnName		731842	0					
ANR	732197	IdentifierDeclType	string		731842	0					
ANR	732198	Identifier	fnName		731842	1					
ANR	732199	IdentifierDeclStatement	vector < ExprTree * > args ;	1206:12:29830:29862	731842	1	True				
ANR	732200	IdentifierDecl	args		731842	0					
ANR	732201	IdentifierDeclType	vector < ExprTree * >		731842	0					
ANR	732202	Identifier	args		731842	1					
ANR	732203	IdentifierDeclStatement	vector < ExprTree * > :: iterator itr ;	1207:12:29876:29907	731842	2	True				
ANR	732204	IdentifierDecl	itr		731842	0					
ANR	732205	IdentifierDeclType	vector < ExprTree * > :: iterator		731842	0					
ANR	732206	Identifier	itr		731842	1					
ANR	732207	ExpressionStatement	"( ( const FunctionCall * ) expr ) -> GetComponents ( fnName , args )"	1209:12:29922:29980	731842	3	True				
ANR	732208	CallExpression	"( ( const FunctionCall * ) expr ) -> GetComponents ( fnName , args )"		731842	0					
ANR	732209	Callee	( ( const FunctionCall * ) expr ) -> GetComponents		731842	0					
ANR	732210	PtrMemberAccess	( ( const FunctionCall * ) expr ) -> GetComponents		731842	0					
ANR	732211	CastExpression	( const FunctionCall * ) expr		731842	0					
ANR	732212	CastTarget	const FunctionCall *		731842	0					
ANR	732213	Identifier	expr		731842	1					
ANR	732214	Identifier	GetComponents		731842	1					
ANR	732215	ArgumentList	fnName		731842	1					
ANR	732216	Argument	fnName		731842	0					
ANR	732217	Identifier	fnName		731842	0					
ANR	732218	Argument	args		731842	1					
ANR	732219	Identifier	args		731842	0					
ANR	732220	ForStatement	for ( itr = args . begin ( ) ; itr != args . end ( ) ; itr ++ )		731842	4					
ANR	732221	ForInit	itr = args . begin ( ) ;	1210:17:29999:30018	731842	0	True				
ANR	732222	AssignmentExpression	itr = args . begin ( )		731842	0		=			
ANR	732223	Identifier	itr		731842	0					
ANR	732224	CallExpression	args . begin ( )		731842	1					
ANR	732225	Callee	args . begin		731842	0					
ANR	732226	MemberAccess	args . begin		731842	0					
ANR	732227	Identifier	args		731842	0					
ANR	732228	Identifier	begin		731842	1					
ANR	732229	ArgumentList			731842	1					
ANR	732230	Condition	itr != args . end ( )	1210:38:30020:30037	731842	1	True				
ANR	732231	EqualityExpression	itr != args . end ( )		731842	0		!=			
ANR	732232	Identifier	itr		731842	0					
ANR	732233	CallExpression	args . end ( )		731842	1					
ANR	732234	Callee	args . end		731842	0					
ANR	732235	MemberAccess	args . end		731842	0					
ANR	732236	Identifier	args		731842	0					
ANR	732237	Identifier	end		731842	1					
ANR	732238	ArgumentList			731842	1					
ANR	732239	PostIncDecOperationExpression	itr ++	1210:58:30040:30044	731842	2	True				
ANR	732240	Identifier	itr		731842	0					
ANR	732241	IncDec	++		731842	1					
ANR	732242	CompoundStatement		90:66:3218:3218	731842	3					
ANR	732243	IfStatement	"if ( ! _GetExternalReferences ( * itr , ad , state , refs ) )"		731842	0					
ANR	732244	Condition	"! _GetExternalReferences ( * itr , ad , state , refs )"	1211:20:30070:30117	731842	0	True				
ANR	732245	UnaryOperationExpression	"! _GetExternalReferences ( * itr , ad , state , refs )"		731842	0					
ANR	732246	UnaryOperator	!		731842	0					
ANR	732247	CallExpression	"_GetExternalReferences ( * itr , ad , state , refs )"		731842	1					
ANR	732248	Callee	_GetExternalReferences		731842	0					
ANR	732249	Identifier	_GetExternalReferences		731842	0					
ANR	732250	ArgumentList	* itr		731842	1					
ANR	732251	Argument	* itr		731842	0					
ANR	732252	UnaryOperationExpression	* itr		731842	0					
ANR	732253	UnaryOperator	*		731842	0					
ANR	732254	Identifier	itr		731842	1					
ANR	732255	Argument	ad		731842	1					
ANR	732256	Identifier	ad		731842	0					
ANR	732257	Argument	state		731842	2					
ANR	732258	Identifier	state		731842	0					
ANR	732259	Argument	refs		731842	3					
ANR	732260	Identifier	refs		731842	0					
ANR	732261	CompoundStatement		91:71:3291:3291	731842	1					
ANR	732262	ReturnStatement	return ( false ) ;	1212:5:30128:30143	731842	0	True				
ANR	732263	Identifier	false		731842	0					
ANR	732264	ReturnStatement	return ( true ) ;	1215:12:30177:30191	731842	5	True				
ANR	732265	Identifier	true		731842	0					
ANR	732266	Label	case CLASSAD_NODE :	1219:8:30213:30230	731842	8	True				
ANR	732267	Identifier	CLASSAD_NODE		731842	0					
ANR	732268	CompoundStatement		102:12:3518:3565	731842	9					
ANR	732269	IdentifierDeclStatement	"vector < pair < string , ExprTree * > > attrs ;"	1221:12:30285:30334	731842	0	True				
ANR	732270	IdentifierDecl	attrs		731842	0					
ANR	732271	IdentifierDeclType	"vector < pair < string , ExprTree * > >"		731842	0					
ANR	732272	Identifier	attrs		731842	1					
ANR	732273	IdentifierDeclStatement	"vector < pair < string , ExprTree * > > :: iterator itr ;"	1222:12:30348:30395	731842	1	True				
ANR	732274	IdentifierDecl	itr		731842	0					
ANR	732275	IdentifierDeclType	"vector < pair < string , ExprTree * > > :: iterator"		731842	0					
ANR	732276	Identifier	itr		731842	1					
ANR	732277	ExpressionStatement	( ( const ClassAd * ) expr ) -> GetComponents ( attrs )	1224:12:30410:30456	731842	2	True				
ANR	732278	CallExpression	( ( const ClassAd * ) expr ) -> GetComponents ( attrs )		731842	0					
ANR	732279	Callee	( ( const ClassAd * ) expr ) -> GetComponents		731842	0					
ANR	732280	PtrMemberAccess	( ( const ClassAd * ) expr ) -> GetComponents		731842	0					
ANR	732281	CastExpression	( const ClassAd * ) expr		731842	0					
ANR	732282	CastTarget	const ClassAd *		731842	0					
ANR	732283	Identifier	expr		731842	1					
ANR	732284	Identifier	GetComponents		731842	1					
ANR	732285	ArgumentList	attrs		731842	1					
ANR	732286	Argument	attrs		731842	0					
ANR	732287	Identifier	attrs		731842	0					
ANR	732288	ForStatement	for ( itr = attrs . begin ( ) ; itr != attrs . end ( ) ; itr ++ )		731842	3					
ANR	732289	ForInit	itr = attrs . begin ( ) ;	1225:17:30475:30495	731842	0	True				
ANR	732290	AssignmentExpression	itr = attrs . begin ( )		731842	0		=			
ANR	732291	Identifier	itr		731842	0					
ANR	732292	CallExpression	attrs . begin ( )		731842	1					
ANR	732293	Callee	attrs . begin		731842	0					
ANR	732294	MemberAccess	attrs . begin		731842	0					
ANR	732295	Identifier	attrs		731842	0					
ANR	732296	Identifier	begin		731842	1					
ANR	732297	ArgumentList			731842	1					
ANR	732298	Condition	itr != attrs . end ( )	1225:39:30497:30515	731842	1	True				
ANR	732299	EqualityExpression	itr != attrs . end ( )		731842	0		!=			
ANR	732300	Identifier	itr		731842	0					
ANR	732301	CallExpression	attrs . end ( )		731842	1					
ANR	732302	Callee	attrs . end		731842	0					
ANR	732303	MemberAccess	attrs . end		731842	0					
ANR	732304	Identifier	attrs		731842	0					
ANR	732305	Identifier	end		731842	1					
ANR	732306	ArgumentList			731842	1					
ANR	732307	PostIncDecOperationExpression	itr ++	1225:60:30518:30522	731842	2	True				
ANR	732308	Identifier	itr		731842	0					
ANR	732309	IncDec	++		731842	1					
ANR	732310	CompoundStatement		105:68:3696:3696	731842	3					
ANR	732311	IfStatement	"if ( ! _GetExternalReferences ( itr -> second , ad , state , refs ) )"		731842	0					
ANR	732312	Condition	"! _GetExternalReferences ( itr -> second , ad , state , refs )"	1226:20:30548:30602	731842	0	True				
ANR	732313	UnaryOperationExpression	"! _GetExternalReferences ( itr -> second , ad , state , refs )"		731842	0					
ANR	732314	UnaryOperator	!		731842	0					
ANR	732315	CallExpression	"_GetExternalReferences ( itr -> second , ad , state , refs )"		731842	1					
ANR	732316	Callee	_GetExternalReferences		731842	0					
ANR	732317	Identifier	_GetExternalReferences		731842	0					
ANR	732318	ArgumentList	itr -> second		731842	1					
ANR	732319	Argument	itr -> second		731842	0					
ANR	732320	PtrMemberAccess	itr -> second		731842	0					
ANR	732321	Identifier	itr		731842	0					
ANR	732322	Identifier	second		731842	1					
ANR	732323	Argument	ad		731842	1					
ANR	732324	Identifier	ad		731842	0					
ANR	732325	Argument	state		731842	2					
ANR	732326	Identifier	state		731842	0					
ANR	732327	Argument	refs		731842	3					
ANR	732328	Identifier	refs		731842	0					
ANR	732329	CompoundStatement		106:77:3775:3775	731842	1					
ANR	732330	ReturnStatement	return ( false ) ;	1227:5:30612:30627	731842	0	True				
ANR	732331	Identifier	false		731842	0					
ANR	732332	ReturnStatement	return ( true ) ;	1230:12:30661:30675	731842	4	True				
ANR	732333	Identifier	true		731842	0					
ANR	732334	Label	case EXPR_LIST_NODE :	1234:8:30697:30716	731842	10	True				
ANR	732335	Identifier	EXPR_LIST_NODE		731842	0					
ANR	732336	CompoundStatement		117:12:3988:4019	731842	11					
ANR	732337	IdentifierDeclStatement	vector < ExprTree * > exprs ;	1236:12:30771:30804	731842	0	True				
ANR	732338	IdentifierDecl	exprs		731842	0					
ANR	732339	IdentifierDeclType	vector < ExprTree * >		731842	0					
ANR	732340	Identifier	exprs		731842	1					
ANR	732341	IdentifierDeclStatement	vector < ExprTree * > :: iterator itr ;	1237:12:30818:30849	731842	1	True				
ANR	732342	IdentifierDecl	itr		731842	0					
ANR	732343	IdentifierDeclType	vector < ExprTree * > :: iterator		731842	0					
ANR	732344	Identifier	itr		731842	1					
ANR	732345	ExpressionStatement	( ( const ExprList * ) expr ) -> GetComponents ( exprs )	1239:12:30864:30911	731842	2	True				
ANR	732346	CallExpression	( ( const ExprList * ) expr ) -> GetComponents ( exprs )		731842	0					
ANR	732347	Callee	( ( const ExprList * ) expr ) -> GetComponents		731842	0					
ANR	732348	PtrMemberAccess	( ( const ExprList * ) expr ) -> GetComponents		731842	0					
ANR	732349	CastExpression	( const ExprList * ) expr		731842	0					
ANR	732350	CastTarget	const ExprList *		731842	0					
ANR	732351	Identifier	expr		731842	1					
ANR	732352	Identifier	GetComponents		731842	1					
ANR	732353	ArgumentList	exprs		731842	1					
ANR	732354	Argument	exprs		731842	0					
ANR	732355	Identifier	exprs		731842	0					
ANR	732356	ForStatement	for ( itr = exprs . begin ( ) ; itr != exprs . end ( ) ; itr ++ )		731842	3					
ANR	732357	ForInit	itr = exprs . begin ( ) ;	1240:17:30930:30950	731842	0	True				
ANR	732358	AssignmentExpression	itr = exprs . begin ( )		731842	0		=			
ANR	732359	Identifier	itr		731842	0					
ANR	732360	CallExpression	exprs . begin ( )		731842	1					
ANR	732361	Callee	exprs . begin		731842	0					
ANR	732362	MemberAccess	exprs . begin		731842	0					
ANR	732363	Identifier	exprs		731842	0					
ANR	732364	Identifier	begin		731842	1					
ANR	732365	ArgumentList			731842	1					
ANR	732366	Condition	itr != exprs . end ( )	1240:39:30952:30970	731842	1	True				
ANR	732367	EqualityExpression	itr != exprs . end ( )		731842	0		!=			
ANR	732368	Identifier	itr		731842	0					
ANR	732369	CallExpression	exprs . end ( )		731842	1					
ANR	732370	Callee	exprs . end		731842	0					
ANR	732371	MemberAccess	exprs . end		731842	0					
ANR	732372	Identifier	exprs		731842	0					
ANR	732373	Identifier	end		731842	1					
ANR	732374	ArgumentList			731842	1					
ANR	732375	PostIncDecOperationExpression	itr ++	1240:60:30973:30977	731842	2	True				
ANR	732376	Identifier	itr		731842	0					
ANR	732377	IncDec	++		731842	1					
ANR	732378	CompoundStatement		120:68:4151:4151	731842	3					
ANR	732379	IfStatement	"if ( ! _GetExternalReferences ( * itr , ad , state , refs ) )"		731842	0					
ANR	732380	Condition	"! _GetExternalReferences ( * itr , ad , state , refs )"	1241:20:31003:31050	731842	0	True				
ANR	732381	UnaryOperationExpression	"! _GetExternalReferences ( * itr , ad , state , refs )"		731842	0					
ANR	732382	UnaryOperator	!		731842	0					
ANR	732383	CallExpression	"_GetExternalReferences ( * itr , ad , state , refs )"		731842	1					
ANR	732384	Callee	_GetExternalReferences		731842	0					
ANR	732385	Identifier	_GetExternalReferences		731842	0					
ANR	732386	ArgumentList	* itr		731842	1					
ANR	732387	Argument	* itr		731842	0					
ANR	732388	UnaryOperationExpression	* itr		731842	0					
ANR	732389	UnaryOperator	*		731842	0					
ANR	732390	Identifier	itr		731842	1					
ANR	732391	Argument	ad		731842	1					
ANR	732392	Identifier	ad		731842	0					
ANR	732393	Argument	state		731842	2					
ANR	732394	Identifier	state		731842	0					
ANR	732395	Argument	refs		731842	3					
ANR	732396	Identifier	refs		731842	0					
ANR	732397	CompoundStatement		121:71:4224:4224	731842	1					
ANR	732398	ReturnStatement	return ( false ) ;	1242:5:31061:31076	731842	0	True				
ANR	732399	Identifier	false		731842	0					
ANR	732400	ReturnStatement	return ( true ) ;	1245:12:31110:31124	731842	4	True				
ANR	732401	Identifier	true		731842	0					
ANR	732402	Label	default :	1249:8:31146:31153	731842	12	True				
ANR	732403	Identifier	default		731842	0					
ANR	732404	ReturnStatement	return false ;	1250:12:31167:31179	731842	13	True				
ANR	732405	Identifier	false		731842	0					
ANR	732406	ReturnType	bool		731842	1					
ANR	732407	Identifier	ClassAd :: _GetExternalReferences		731842	2					
ANR	732408	ParameterList	"const ExprTree * expr , ClassAd * ad , EvalState & state , PortReferences & refs"		731842	3					
ANR	732409	Parameter	const ExprTree * expr	1119:24:26751:26770	731842	0	True				
ANR	732410	ParameterType	const ExprTree *		731842	0					
ANR	732411	Identifier	expr		731842	1					
ANR	732412	Parameter	ClassAd * ad	1119:46:26773:26783	731842	1	True				
ANR	732413	ParameterType	ClassAd *		731842	0					
ANR	732414	Identifier	ad		731842	1					
ANR	732415	Parameter	EvalState & state	1120:1:26788:26803	731842	2	True				
ANR	732416	ParameterType	EvalState &		731842	0					
ANR	732417	Identifier	state		731842	1					
ANR	732418	Parameter	PortReferences & refs	1120:19:26806:26825	731842	3	True				
ANR	732419	ParameterType	PortReferences &		731842	0					
ANR	732420	Identifier	refs		731842	1					
ANR	732421	CFGEntryNode	ENTRY		731842		True				
ANR	732422	CFGExitNode	EXIT		731842		True				
ANR	732423	Symbol	pitr		731842						
ANR	732424	Symbol	refs . end		731842						
ANR	732425	Symbol	* start		731842						
ANR	732426	Symbol	pitr -> second		731842						
ANR	732427	Symbol	state . rootAd		731842						
ANR	732428	Symbol	state . curAd		731842						
ANR	732429	Symbol	exprs . end		731842						
ANR	732430	Symbol	state		731842						
ANR	732431	Symbol	start -> LookupInScope		731842						
ANR	732432	Symbol	exprs . begin		731842						
ANR	732433	Symbol	itr -> second		731842						
ANR	732434	Symbol	val		731842						
ANR	732435	Symbol	ad		731842						
ANR	732436	Symbol	NULL		731842						
ANR	732437	Symbol	itr		731842						
ANR	732438	Symbol	tree		731842						
ANR	732439	Symbol	this		731842						
ANR	732440	Symbol	curAd		731842						
ANR	732441	Symbol	val . IsUndefinedValue		731842						
ANR	732442	Symbol	attrs		731842						
ANR	732443	Symbol	fnName		731842						
ANR	732444	Symbol	* expr		731842						
ANR	732445	Symbol	true		731842						
ANR	732446	Symbol	attrs . end		731842						
ANR	732447	Symbol	t1		731842						
ANR	732448	Symbol	refs . find		731842						
ANR	732449	Symbol	t2		731842						
ANR	732450	Symbol	t3		731842						
ANR	732451	Symbol	* pitr		731842						
ANR	732452	Symbol	result		731842						
ANR	732453	Symbol	args . begin		731842						
ANR	732454	Symbol	attrs . begin		731842						
ANR	732455	Symbol	val . IsClassAdValue		731842						
ANR	732456	Symbol	exprs		731842						
ANR	732457	Symbol	expr		731842						
ANR	732458	Symbol	rval		731842						
ANR	732459	Symbol	attr		731842						
ANR	732460	Symbol	args . end		731842						
ANR	732461	Symbol	expr -> GetKind		731842						
ANR	732462	Symbol	op		731842						
ANR	732463	Symbol	_GetExternalReferences		731842						
ANR	732464	Symbol	start		731842						
ANR	732465	Symbol	false		731842						
ANR	732466	Symbol	* itr		731842						
ANR	732467	Symbol	* tree		731842						
ANR	732468	Symbol	args		731842						
ANR	732469	Symbol	abs		731842						
ANR	732470	Symbol	refs		731842						
ANR	732471	Symbol	tree -> Evaluate		731842						
ANR	732472	Function	ClassAd :: GetInternalReferences	1255:0:31191:31433							
ANR	732473	FunctionDef	"ClassAd :: GetInternalReferences (const ExprTree * tree , References & refs , bool fullNames)"		732472	0					
ANR	732474	CompoundStatement		1257:0:31285:31433	732472	0					
ANR	732475	IdentifierDeclStatement	EvalState state ;	1258:4:31291:31306	732472	0	True				
ANR	732476	IdentifierDecl	state		732472	0					
ANR	732477	IdentifierDeclType	EvalState		732472	0					
ANR	732478	Identifier	state		732472	1					
ANR	732479	ExpressionStatement	state . rootAd = this	1259:4:31312:31331	732472	1	True				
ANR	732480	AssignmentExpression	state . rootAd = this		732472	0		=			
ANR	732481	MemberAccess	state . rootAd		732472	0					
ANR	732482	Identifier	state		732472	0					
ANR	732483	Identifier	rootAd		732472	1					
ANR	732484	Identifier	this		732472	1					
ANR	732485	ExpressionStatement	state . curAd = this	1260:4:31337:31355	732472	2	True				
ANR	732486	AssignmentExpression	state . curAd = this		732472	0		=			
ANR	732487	MemberAccess	state . curAd		732472	0					
ANR	732488	Identifier	state		732472	0					
ANR	732489	Identifier	curAd		732472	1					
ANR	732490	Identifier	this		732472	1					
ANR	732491	ReturnStatement	"return ( _GetInternalReferences ( tree , this , state , refs , fullNames ) ) ;"	1262:4:31362:31431	732472	3	True				
ANR	732492	CallExpression	"_GetInternalReferences ( tree , this , state , refs , fullNames )"		732472	0					
ANR	732493	Callee	_GetInternalReferences		732472	0					
ANR	732494	Identifier	_GetInternalReferences		732472	0					
ANR	732495	ArgumentList	tree		732472	1					
ANR	732496	Argument	tree		732472	0					
ANR	732497	Identifier	tree		732472	0					
ANR	732498	Argument	this		732472	1					
ANR	732499	Identifier	this		732472	0					
ANR	732500	Argument	state		732472	2					
ANR	732501	Identifier	state		732472	0					
ANR	732502	Argument	refs		732472	3					
ANR	732503	Identifier	refs		732472	0					
ANR	732504	Argument	fullNames		732472	4					
ANR	732505	Identifier	fullNames		732472	0					
ANR	732506	ReturnType	bool		732472	1					
ANR	732507	Identifier	ClassAd :: GetInternalReferences		732472	2					
ANR	732508	ParameterList	"const ExprTree * tree , References & refs , bool fullNames"		732472	3					
ANR	732509	Parameter	const ExprTree * tree	1256:23:31229:31248	732472	0	True				
ANR	732510	ParameterType	const ExprTree *		732472	0					
ANR	732511	Identifier	tree		732472	1					
ANR	732512	Parameter	References & refs	1256:45:31251:31266	732472	1	True				
ANR	732513	ParameterType	References &		732472	0					
ANR	732514	Identifier	refs		732472	1					
ANR	732515	Parameter	bool fullNames	1256:63:31269:31282	732472	2	True				
ANR	732516	ParameterType	bool		732472	0					
ANR	732517	Identifier	fullNames		732472	1					
ANR	732518	CFGEntryNode	ENTRY		732472		True				
ANR	732519	CFGExitNode	EXIT		732472		True				
ANR	732520	Symbol	state . curAd		732472						
ANR	732521	Symbol	refs		732472						
ANR	732522	Symbol	tree		732472						
ANR	732523	Symbol	state . rootAd		732472						
ANR	732524	Symbol	this		732472						
ANR	732525	Symbol	_GetInternalReferences		732472						
ANR	732526	Symbol	fullNames		732472						
ANR	732527	Symbol	state		732472						
ANR	732528	Function	ClassAd :: _GetInternalReferences	1266:0:31514:38599							
ANR	732529	FunctionDef	"ClassAd :: _GetInternalReferences (const ExprTree * expr , ClassAd * ad , EvalState & state , References & refs , bool fullNames)"		732528	0					
ANR	732530	CompoundStatement		1269:0:31648:38599	732528	0					
ANR	732531	SwitchStatement	switch ( expr -> GetKind ( ) )		732528	0					
ANR	732532	Condition	expr -> GetKind ( )	1271:12:31663:31677	732528	0	True				
ANR	732533	CallExpression	expr -> GetKind ( )		732528	0					
ANR	732534	Callee	expr -> GetKind		732528	0					
ANR	732535	PtrMemberAccess	expr -> GetKind		732528	0					
ANR	732536	Identifier	expr		732528	0					
ANR	732537	Identifier	GetKind		732528	1					
ANR	732538	ArgumentList			732528	1					
ANR	732539	CompoundStatement		3:29:31:31	732528	1					
ANR	732540	Label	case LITERAL_NODE :	1273:8:31726:31743	732528	0	True				
ANR	732541	Identifier	LITERAL_NODE		732528	0					
ANR	732542	CompoundStatement		5:26:95:95	732528	1					
ANR	732543	ReturnStatement	return true ;	1274:12:31758:31769	732528	0	True				
ANR	732544	Identifier	true		732528	0					
ANR	732545	BreakStatement	break ;	1275:8:31779:31784	732528	1	True				
ANR	732546	Label	case ATTRREF_NODE :	1278:8:31823:31840	732528	2	True				
ANR	732547	Identifier	ATTRREF_NODE		732528	0					
ANR	732548	CompoundStatement		89:12:2802:2836	732528	3					
ANR	732549	IdentifierDeclStatement	const ClassAd * start ;	1279:12:31855:31877	732528	0	True				
ANR	732550	IdentifierDecl	* start		732528	0					
ANR	732551	IdentifierDeclType	const ClassAd *		732528	0					
ANR	732552	Identifier	start		732528	1					
ANR	732553	IdentifierDeclStatement	"ExprTree * tree , * result ;"	1280:12:31891:31921	732528	1	True				
ANR	732554	IdentifierDecl	* tree		732528	0					
ANR	732555	IdentifierDeclType	ExprTree *		732528	0					
ANR	732556	Identifier	tree		732528	1					
ANR	732557	IdentifierDecl	* result		732528	1					
ANR	732558	IdentifierDeclType	ExprTree *		732528	0					
ANR	732559	Identifier	result		732528	1					
ANR	732560	IdentifierDeclStatement	string attr ;	1281:12:31935:31955	732528	2	True				
ANR	732561	IdentifierDecl	attr		732528	0					
ANR	732562	IdentifierDeclType	string		732528	0					
ANR	732563	Identifier	attr		732528	1					
ANR	732564	IdentifierDeclStatement	Value val ;	1282:12:31969:31988	732528	3	True				
ANR	732565	IdentifierDecl	val		732528	0					
ANR	732566	IdentifierDeclType	Value		732528	0					
ANR	732567	Identifier	val		732528	1					
ANR	732568	IdentifierDeclStatement	bool abs ;	1283:12:32002:32021	732528	4	True				
ANR	732569	IdentifierDecl	abs		732528	0					
ANR	732570	IdentifierDeclType	bool		732528	0					
ANR	732571	Identifier	abs		732528	1					
ANR	732572	ExpressionStatement	"( ( const AttributeReference * ) expr ) -> GetComponents ( tree , attr , abs )"	1285:12:32036:32099	732528	5	True				
ANR	732573	CallExpression	"( ( const AttributeReference * ) expr ) -> GetComponents ( tree , attr , abs )"		732528	0					
ANR	732574	Callee	( ( const AttributeReference * ) expr ) -> GetComponents		732528	0					
ANR	732575	PtrMemberAccess	( ( const AttributeReference * ) expr ) -> GetComponents		732528	0					
ANR	732576	CastExpression	( const AttributeReference * ) expr		732528	0					
ANR	732577	CastTarget	const AttributeReference *		732528	0					
ANR	732578	Identifier	expr		732528	1					
ANR	732579	Identifier	GetComponents		732528	1					
ANR	732580	ArgumentList	tree		732528	1					
ANR	732581	Argument	tree		732528	0					
ANR	732582	Identifier	tree		732528	0					
ANR	732583	Argument	attr		732528	1					
ANR	732584	Identifier	attr		732528	0					
ANR	732585	Argument	abs		732528	2					
ANR	732586	Identifier	abs		732528	0					
ANR	732587	IfStatement	if ( tree == NULL )		732528	6					
ANR	732588	Condition	tree == NULL	1288:16:32177:32188	732528	0	True				
ANR	732589	EqualityExpression	tree == NULL		732528	0		==			
ANR	732590	Identifier	tree		732528	0					
ANR	732591	Identifier	NULL		732528	1					
ANR	732592	CompoundStatement		20:30:542:542	732528	1					
ANR	732593	ExpressionStatement	start = abs ? state . rootAd : state . curAd	1289:16:32209:32249	732528	0	True				
ANR	732594	AssignmentExpression	start = abs ? state . rootAd : state . curAd		732528	0		=			
ANR	732595	Identifier	start		732528	0					
ANR	732596	ConditionalExpression	abs ? state . rootAd : state . curAd		732528	1					
ANR	732597	Condition	abs		732528	0					
ANR	732598	Identifier	abs		732528	0					
ANR	732599	MemberAccess	state . rootAd		732528	1					
ANR	732600	Identifier	state		732528	0					
ANR	732601	Identifier	rootAd		732528	1					
ANR	732602	MemberAccess	state . curAd		732528	2					
ANR	732603	Identifier	state		732528	0					
ANR	732604	Identifier	curAd		732528	1					
ANR	732605	IfStatement	if ( abs && ( start == NULL ) )		732528	1					
ANR	732606	Condition	abs && ( start == NULL )	1291:20:32308:32329	732528	0	True				
ANR	732607	AndExpression	abs && ( start == NULL )		732528	0		&&			
ANR	732608	Identifier	abs		732528	0					
ANR	732609	EqualityExpression	start == NULL		732528	1		==			
ANR	732610	Identifier	start		732528	0					
ANR	732611	Identifier	NULL		732528	1					
ANR	732612	CompoundStatement		23:45:684:684	732528	1					
ANR	732613	ReturnStatement	return false ;	1292:20:32355:32367	732528	0	True				
ANR	732614	Identifier	false		732528	0					
ANR	732615	ElseStatement	else		732528	0					
ANR	732616	CompoundStatement		68:16:1944:1963	732528	0					
ANR	732617	IfStatement	"if ( ! tree -> Evaluate ( state , val ) )"		732528	0					
ANR	732618	Condition	"! tree -> Evaluate ( state , val )"	1295:20:32428:32454	732528	0	True				
ANR	732619	UnaryOperationExpression	"! tree -> Evaluate ( state , val )"		732528	0					
ANR	732620	UnaryOperator	!		732528	0					
ANR	732621	CallExpression	"tree -> Evaluate ( state , val )"		732528	1					
ANR	732622	Callee	tree -> Evaluate		732528	0					
ANR	732623	PtrMemberAccess	tree -> Evaluate		732528	0					
ANR	732624	Identifier	tree		732528	0					
ANR	732625	Identifier	Evaluate		732528	1					
ANR	732626	ArgumentList	state		732528	1					
ANR	732627	Argument	state		732528	0					
ANR	732628	Identifier	state		732528	0					
ANR	732629	Argument	val		732528	1					
ANR	732630	Identifier	val		732528	0					
ANR	732631	CompoundStatement		27:50:809:809	732528	1					
ANR	732632	ReturnStatement	return false ;	1296:20:32480:32492	732528	0	True				
ANR	732633	Identifier	false		732528	0					
ANR	732634	IfStatement	if ( val . IsUndefinedValue ( ) )		732528	1					
ANR	732635	Condition	val . IsUndefinedValue ( )	1310:20:32796:32817	732528	0	True				
ANR	732636	CallExpression	val . IsUndefinedValue ( )		732528	0					
ANR	732637	Callee	val . IsUndefinedValue		732528	0					
ANR	732638	MemberAccess	val . IsUndefinedValue		732528	0					
ANR	732639	Identifier	val		732528	0					
ANR	732640	Identifier	IsUndefinedValue		732528	1					
ANR	732641	ArgumentList			732528	1					
ANR	732642	CompoundStatement		42:45:1172:1172	732528	1					
ANR	732643	ReturnStatement	return true ;	1311:20:32843:32854	732528	0	True				
ANR	732644	Identifier	true		732528	0					
ANR	732645	IdentifierDeclStatement	"string nameToAddToRefs = """" ;"	1314:16:32891:32918	732528	2	True				
ANR	732646	IdentifierDecl	"nameToAddToRefs = """""		732528	0					
ANR	732647	IdentifierDeclType	string		732528	0					
ANR	732648	Identifier	nameToAddToRefs		732528	1					
ANR	732649	AssignmentExpression	"nameToAddToRefs = """""		732528	2		=			
ANR	732650	Identifier	nameToAddToRefs		732528	0					
ANR	732651	PrimaryExpression	""""""		732528	1					
ANR	732652	IdentifierDeclStatement	string prefixStr ;	1316:16:32937:32953	732528	3	True				
ANR	732653	IdentifierDecl	prefixStr		732528	0					
ANR	732654	IdentifierDeclType	string		732528	0					
ANR	732655	Identifier	prefixStr		732528	1					
ANR	732656	IfStatement	if ( tree != NULL )		732528	4					
ANR	732657	Condition	tree != NULL	1318:19:32975:32986	732528	0	True				
ANR	732658	EqualityExpression	tree != NULL		732528	0		!=			
ANR	732659	Identifier	tree		732528	0					
ANR	732660	Identifier	NULL		732528	1					
ANR	732661	CompoundStatement		52:20:1378:1402	732528	1					
ANR	732662	IdentifierDeclStatement	ClassAdUnParser unparser ;	1320:20:33027:33051	732528	0	True				
ANR	732663	IdentifierDecl	unparser		732528	0					
ANR	732664	IdentifierDeclType	ClassAdUnParser		732528	0					
ANR	732665	Identifier	unparser		732528	1					
ANR	732666	ExpressionStatement	"unparser . Unparse ( prefixStr , tree )"	1322:20:33142:33175	732528	1	True				
ANR	732667	CallExpression	"unparser . Unparse ( prefixStr , tree )"		732528	0					
ANR	732668	Callee	unparser . Unparse		732528	0					
ANR	732669	MemberAccess	unparser . Unparse		732528	0					
ANR	732670	Identifier	unparser		732528	0					
ANR	732671	Identifier	Unparse		732528	1					
ANR	732672	ArgumentList	prefixStr		732528	1					
ANR	732673	Argument	prefixStr		732528	0					
ANR	732674	Identifier	prefixStr		732528	0					
ANR	732675	Argument	tree		732528	1					
ANR	732676	Identifier	tree		732528	0					
ANR	732677	ExpressionStatement	nameToAddToRefs = prefixStr	1324:20:33244:33271	732528	2	True				
ANR	732678	AssignmentExpression	nameToAddToRefs = prefixStr		732528	0		=			
ANR	732679	Identifier	nameToAddToRefs		732528	0					
ANR	732680	Identifier	prefixStr		732528	1					
ANR	732681	IfStatement	if ( fullNames )		732528	3					
ANR	732682	Condition	fullNames	1326:23:33297:33305	732528	0	True				
ANR	732683	Identifier	fullNames		732528	0					
ANR	732684	CompoundStatement		59:20:1679:1679	732528	1					
ANR	732685	ExpressionStatement	"nameToAddToRefs += ""."""	1328:24:33354:33376	732528	0	True				
ANR	732686	AssignmentExpression	"nameToAddToRefs += ""."""		732528	0		+=			
ANR	732687	Identifier	nameToAddToRefs		732528	0					
ANR	732688	PrimaryExpression	"""."""		732528	1					
ANR	732689	ExpressionStatement	nameToAddToRefs += attr	1329:24:33402:33425	732528	1	True				
ANR	732690	AssignmentExpression	nameToAddToRefs += attr		732528	0		+=			
ANR	732691	Identifier	nameToAddToRefs		732528	0					
ANR	732692	Identifier	attr		732528	1					
ANR	732693	ExpressionStatement	refs . insert ( nameToAddToRefs )	1334:16:33546:33574	732528	5	True				
ANR	732694	CallExpression	refs . insert ( nameToAddToRefs )		732528	0					
ANR	732695	Callee	refs . insert		732528	0					
ANR	732696	MemberAccess	refs . insert		732528	0					
ANR	732697	Identifier	refs		732528	0					
ANR	732698	Identifier	insert		732528	1					
ANR	732699	ArgumentList	nameToAddToRefs		732528	1					
ANR	732700	Argument	nameToAddToRefs		732528	0					
ANR	732701	Identifier	nameToAddToRefs		732528	0					
ANR	732702	IdentifierDeclStatement	ExprTree * followRef ;	1336:16:33593:33612	732528	6	True				
ANR	732703	IdentifierDecl	* followRef		732528	0					
ANR	732704	IdentifierDeclType	ExprTree *		732528	0					
ANR	732705	Identifier	followRef		732528	1					
ANR	732706	ExpressionStatement	followRef = ad -> Lookup ( prefixStr )	1339:16:33767:33800	732528	7	True				
ANR	732707	AssignmentExpression	followRef = ad -> Lookup ( prefixStr )		732528	0		=			
ANR	732708	Identifier	followRef		732528	0					
ANR	732709	CallExpression	ad -> Lookup ( prefixStr )		732528	1					
ANR	732710	Callee	ad -> Lookup		732528	0					
ANR	732711	PtrMemberAccess	ad -> Lookup		732528	0					
ANR	732712	Identifier	ad		732528	0					
ANR	732713	Identifier	Lookup		732528	1					
ANR	732714	ArgumentList	prefixStr		732528	1					
ANR	732715	Argument	prefixStr		732528	0					
ANR	732716	Identifier	prefixStr		732528	0					
ANR	732717	IfStatement	if ( followRef != NULL )		732528	8					
ANR	732718	Condition	followRef != NULL	1343:19:33986:34002	732528	0	True				
ANR	732719	EqualityExpression	followRef != NULL		732528	0		!=			
ANR	732720	Identifier	followRef		732528	0					
ANR	732721	Identifier	NULL		732528	1					
ANR	732722	CompoundStatement		76:16:2372:2372	732528	1					
ANR	732723	ReturnStatement	"return _GetInternalReferences ( followRef , ad , state , refs , fullNames ) ;"	1345:20:34043:34151	732528	0	True				
ANR	732724	CallExpression	"_GetInternalReferences ( followRef , ad , state , refs , fullNames )"		732528	0					
ANR	732725	Callee	_GetInternalReferences		732528	0					
ANR	732726	Identifier	_GetInternalReferences		732528	0					
ANR	732727	ArgumentList	followRef		732528	1					
ANR	732728	Argument	followRef		732528	0					
ANR	732729	Identifier	followRef		732528	0					
ANR	732730	Argument	ad		732528	1					
ANR	732731	Identifier	ad		732528	0					
ANR	732732	Argument	state		732528	2					
ANR	732733	Identifier	state		732528	0					
ANR	732734	Argument	refs		732528	3					
ANR	732735	Identifier	refs		732528	0					
ANR	732736	Argument	fullNames		732528	4					
ANR	732737	Identifier	fullNames		732528	0					
ANR	732738	IfStatement	if ( ! val . IsClassAdValue ( start ) )		732528	9					
ANR	732739	Condition	! val . IsClassAdValue ( start )	1352:20:34339:34366	732528	0	True				
ANR	732740	UnaryOperationExpression	! val . IsClassAdValue ( start )		732528	0					
ANR	732741	UnaryOperator	!		732528	0					
ANR	732742	CallExpression	val . IsClassAdValue ( start )		732528	1					
ANR	732743	Callee	val . IsClassAdValue		732528	0					
ANR	732744	MemberAccess	val . IsClassAdValue		732528	0					
ANR	732745	Identifier	val		732528	0					
ANR	732746	Identifier	IsClassAdValue		732528	1					
ANR	732747	ArgumentList	start		732528	1					
ANR	732748	Argument	start		732528	0					
ANR	732749	Identifier	start		732528	0					
ANR	732750	CompoundStatement		84:51:2721:2721	732528	1					
ANR	732751	ReturnStatement	return false ;	1353:20:34392:34404	732528	0	True				
ANR	732752	Identifier	false		732528	0					
ANR	732753	IdentifierDeclStatement	const ClassAd * curAd = state . curAd ;	1357:12:34451:34485	732528	7	True				
ANR	732754	IdentifierDecl	* curAd = state . curAd		732528	0					
ANR	732755	IdentifierDeclType	const ClassAd *		732528	0					
ANR	732756	Identifier	curAd		732528	1					
ANR	732757	AssignmentExpression	* curAd = state . curAd		732528	2		=			
ANR	732758	Identifier	curAd		732528	0					
ANR	732759	MemberAccess	state . curAd		732528	1					
ANR	732760	Identifier	state		732528	0					
ANR	732761	Identifier	curAd		732528	1					
ANR	732762	SwitchStatement	"switch ( start -> LookupInScope ( attr , result , state ) )"		732528	8					
ANR	732763	Condition	"start -> LookupInScope ( attr , result , state )"	1358:20:34507:34548	732528	0	True				
ANR	732764	CallExpression	"start -> LookupInScope ( attr , result , state )"		732528	0					
ANR	732765	Callee	start -> LookupInScope		732528	0					
ANR	732766	PtrMemberAccess	start -> LookupInScope		732528	0					
ANR	732767	Identifier	start		732528	0					
ANR	732768	Identifier	LookupInScope		732528	1					
ANR	732769	ArgumentList	attr		732528	1					
ANR	732770	Argument	attr		732528	0					
ANR	732771	Identifier	attr		732528	0					
ANR	732772	Argument	result		732528	1					
ANR	732773	Identifier	result		732528	0					
ANR	732774	Argument	state		732528	2					
ANR	732775	Identifier	state		732528	0					
ANR	732776	CompoundStatement		90:65:2903:2903	732528	1					
ANR	732777	Label	case EVAL_ERROR :	1359:16:34570:34585	732528	0	True				
ANR	732778	Identifier	EVAL_ERROR		732528	0					
ANR	732779	ReturnStatement	return false ;	1360:20:34607:34619	732528	1	True				
ANR	732780	Identifier	false		732528	0					
ANR	732781	BreakStatement	break ;	1361:16:34637:34642	732528	2	True				
ANR	732782	Label	case EVAL_UNDEF :	1366:16:34789:34804	732528	3	True				
ANR	732783	Identifier	EVAL_UNDEF		732528	0					
ANR	732784	CompoundStatement		98:32:3156:3156	732528	4					
ANR	732785	ReturnStatement	return true ;	1370:20:34985:34996	732528	0	True				
ANR	732786	Identifier	true		732528	0					
ANR	732787	BreakStatement	break ;	1371:16:35014:35019	732528	1	True				
ANR	732788	Label	case EVAL_OK :	1374:16:35072:35084	732528	5	True				
ANR	732789	Identifier	EVAL_OK		732528	0					
ANR	732790	CompoundStatement		115:20:3749:3818	732528	6					
ANR	732791	ExpressionStatement	refs . insert ( attr )	1376:20:35153:35170	732528	0	True				
ANR	732792	CallExpression	refs . insert ( attr )		732528	0					
ANR	732793	Callee	refs . insert		732528	0					
ANR	732794	MemberAccess	refs . insert		732528	0					
ANR	732795	Identifier	refs		732528	0					
ANR	732796	Identifier	insert		732528	1					
ANR	732797	ArgumentList	attr		732528	1					
ANR	732798	Argument	attr		732528	0					
ANR	732799	Identifier	attr		732528	0					
ANR	732800	IfStatement	if ( state . depth_remaining <= 0 )		732528	1					
ANR	732801	Condition	state . depth_remaining <= 0	1377:24:35196:35221	732528	0	True				
ANR	732802	RelationalExpression	state . depth_remaining <= 0		732528	0		<=			
ANR	732803	MemberAccess	state . depth_remaining		732528	0					
ANR	732804	Identifier	state		732528	0					
ANR	732805	Identifier	depth_remaining		732528	1					
ANR	732806	PrimaryExpression	0		732528	1					
ANR	732807	CompoundStatement		109:53:3576:3576	732528	1					
ANR	732808	ExpressionStatement	state . curAd = curAd	1378:24:35251:35270	732528	0	True				
ANR	732809	AssignmentExpression	state . curAd = curAd		732528	0		=			
ANR	732810	MemberAccess	state . curAd		732528	0					
ANR	732811	Identifier	state		732528	0					
ANR	732812	Identifier	curAd		732528	1					
ANR	732813	Identifier	curAd		732528	1					
ANR	732814	ReturnStatement	return false ;	1379:24:35296:35308	732528	1	True				
ANR	732815	Identifier	false		732528	0					
ANR	732816	ExpressionStatement	state . depth_remaining --	1381:20:35352:35375	732528	2	True				
ANR	732817	PostIncDecOperationExpression	state . depth_remaining --		732528	0					
ANR	732818	MemberAccess	state . depth_remaining		732528	0					
ANR	732819	Identifier	state		732528	0					
ANR	732820	Identifier	depth_remaining		732528	1					
ANR	732821	IncDec	--		732528	1					
ANR	732822	IdentifierDeclStatement	"bool rval = _GetInternalReferences ( result , ad , state , refs , fullNames ) ;"	1383:20:35398:35467	732528	3	True				
ANR	732823	IdentifierDecl	"rval = _GetInternalReferences ( result , ad , state , refs , fullNames )"		732528	0					
ANR	732824	IdentifierDeclType	bool		732528	0					
ANR	732825	Identifier	rval		732528	1					
ANR	732826	AssignmentExpression	"rval = _GetInternalReferences ( result , ad , state , refs , fullNames )"		732528	2		=			
ANR	732827	Identifier	rval		732528	0					
ANR	732828	CallExpression	"_GetInternalReferences ( result , ad , state , refs , fullNames )"		732528	1					
ANR	732829	Callee	_GetInternalReferences		732528	0					
ANR	732830	Identifier	_GetInternalReferences		732528	0					
ANR	732831	ArgumentList	result		732528	1					
ANR	732832	Argument	result		732528	0					
ANR	732833	Identifier	result		732528	0					
ANR	732834	Argument	ad		732528	1					
ANR	732835	Identifier	ad		732528	0					
ANR	732836	Argument	state		732528	2					
ANR	732837	Identifier	state		732528	0					
ANR	732838	Argument	refs		732528	3					
ANR	732839	Identifier	refs		732528	0					
ANR	732840	Argument	fullNames		732528	4					
ANR	732841	Identifier	fullNames		732528	0					
ANR	732842	ExpressionStatement	state . depth_remaining ++	1385:20:35490:35513	732528	4	True				
ANR	732843	PostIncDecOperationExpression	state . depth_remaining ++		732528	0					
ANR	732844	MemberAccess	state . depth_remaining		732528	0					
ANR	732845	Identifier	state		732528	0					
ANR	732846	Identifier	depth_remaining		732528	1					
ANR	732847	IncDec	++		732528	1					
ANR	732848	ExpressionStatement	state . curAd = curAd	1387:20:35590:35609	732528	5	True				
ANR	732849	AssignmentExpression	state . curAd = curAd		732528	0		=			
ANR	732850	MemberAccess	state . curAd		732528	0					
ANR	732851	Identifier	state		732528	0					
ANR	732852	Identifier	curAd		732528	1					
ANR	732853	Identifier	curAd		732528	1					
ANR	732854	ReturnStatement	return rval ;	1388:20:35631:35642	732528	6	True				
ANR	732855	Identifier	rval		732528	0					
ANR	732856	BreakStatement	break ;	1389:16:35660:35665	732528	7	True				
ANR	732857	Label	default :	1392:16:35718:35725	732528	7	True				
ANR	732858	Identifier	default		732528	0					
ANR	732859	ReturnStatement	return false ;	1394:20:35778:35790	732528	8	True				
ANR	732860	Identifier	false		732528	0					
ANR	732861	BreakStatement	break ;	1395:16:35808:35813	732528	9	True				
ANR	732862	BreakStatement	break ;	1398:8:35838:35843	732528	9	True				
ANR	732863	Label	case OP_NODE :	1402:8:35887:35899	732528	4	True				
ANR	732864	Identifier	OP_NODE		732528	0					
ANR	732865	CompoundStatement		138:12:4340:4377	732528	5					
ANR	732866	IdentifierDeclStatement	Operation :: OpKind op ;	1405:12:35949:35975	732528	0	True				
ANR	732867	IdentifierDecl	op		732528	0					
ANR	732868	IdentifierDeclType	Operation :: OpKind		732528	0					
ANR	732869	Identifier	op		732528	1					
ANR	732870	IdentifierDeclStatement	"ExprTree * t1 , * t2 , * t3 ;"	1406:12:35989:36026	732528	1	True				
ANR	732871	IdentifierDecl	* t1		732528	0					
ANR	732872	IdentifierDeclType	ExprTree *		732528	0					
ANR	732873	Identifier	t1		732528	1					
ANR	732874	IdentifierDecl	* t2		732528	1					
ANR	732875	IdentifierDeclType	ExprTree *		732528	0					
ANR	732876	Identifier	t2		732528	1					
ANR	732877	IdentifierDecl	* t3		732528	2					
ANR	732878	IdentifierDeclType	ExprTree *		732528	0					
ANR	732879	Identifier	t3		732528	1					
ANR	732880	ExpressionStatement	"( ( const Operation * ) expr ) -> GetComponents ( op , t1 , t2 , t3 )"	1407:12:36040:36095	732528	2	True				
ANR	732881	CallExpression	"( ( const Operation * ) expr ) -> GetComponents ( op , t1 , t2 , t3 )"		732528	0					
ANR	732882	Callee	( ( const Operation * ) expr ) -> GetComponents		732528	0					
ANR	732883	PtrMemberAccess	( ( const Operation * ) expr ) -> GetComponents		732528	0					
ANR	732884	CastExpression	( const Operation * ) expr		732528	0					
ANR	732885	CastTarget	const Operation *		732528	0					
ANR	732886	Identifier	expr		732528	1					
ANR	732887	Identifier	GetComponents		732528	1					
ANR	732888	ArgumentList	op		732528	1					
ANR	732889	Argument	op		732528	0					
ANR	732890	Identifier	op		732528	0					
ANR	732891	Argument	t1		732528	1					
ANR	732892	Identifier	t1		732528	0					
ANR	732893	Argument	t2		732528	2					
ANR	732894	Identifier	t2		732528	0					
ANR	732895	Argument	t3		732528	3					
ANR	732896	Identifier	t3		732528	0					
ANR	732897	IfStatement	"if ( t1 && ! _GetInternalReferences ( t1 , ad , state , refs , fullNames ) )"		732528	3					
ANR	732898	Condition	"t1 && ! _GetInternalReferences ( t1 , ad , state , refs , fullNames )"	1408:16:36113:36173	732528	0	True				
ANR	732899	AndExpression	"t1 && ! _GetInternalReferences ( t1 , ad , state , refs , fullNames )"		732528	0		&&			
ANR	732900	Identifier	t1		732528	0					
ANR	732901	UnaryOperationExpression	"! _GetInternalReferences ( t1 , ad , state , refs , fullNames )"		732528	1					
ANR	732902	UnaryOperator	!		732528	0					
ANR	732903	CallExpression	"_GetInternalReferences ( t1 , ad , state , refs , fullNames )"		732528	1					
ANR	732904	Callee	_GetInternalReferences		732528	0					
ANR	732905	Identifier	_GetInternalReferences		732528	0					
ANR	732906	ArgumentList	t1		732528	1					
ANR	732907	Argument	t1		732528	0					
ANR	732908	Identifier	t1		732528	0					
ANR	732909	Argument	ad		732528	1					
ANR	732910	Identifier	ad		732528	0					
ANR	732911	Argument	state		732528	2					
ANR	732912	Identifier	state		732528	0					
ANR	732913	Argument	refs		732528	3					
ANR	732914	Identifier	refs		732528	0					
ANR	732915	Argument	fullNames		732528	4					
ANR	732916	Identifier	fullNames		732528	0					
ANR	732917	CompoundStatement		140:79:4527:4527	732528	1					
ANR	732918	ReturnStatement	return false ;	1409:16:36194:36206	732528	0	True				
ANR	732919	Identifier	false		732528	0					
ANR	732920	IfStatement	"if ( t2 && ! _GetInternalReferences ( t2 , ad , state , refs , fullNames ) )"		732528	4					
ANR	732921	Condition	"t2 && ! _GetInternalReferences ( t2 , ad , state , refs , fullNames )"	1412:16:36239:36299	732528	0	True				
ANR	732922	AndExpression	"t2 && ! _GetInternalReferences ( t2 , ad , state , refs , fullNames )"		732528	0		&&			
ANR	732923	Identifier	t2		732528	0					
ANR	732924	UnaryOperationExpression	"! _GetInternalReferences ( t2 , ad , state , refs , fullNames )"		732528	1					
ANR	732925	UnaryOperator	!		732528	0					
ANR	732926	CallExpression	"_GetInternalReferences ( t2 , ad , state , refs , fullNames )"		732528	1					
ANR	732927	Callee	_GetInternalReferences		732528	0					
ANR	732928	Identifier	_GetInternalReferences		732528	0					
ANR	732929	ArgumentList	t2		732528	1					
ANR	732930	Argument	t2		732528	0					
ANR	732931	Identifier	t2		732528	0					
ANR	732932	Argument	ad		732528	1					
ANR	732933	Identifier	ad		732528	0					
ANR	732934	Argument	state		732528	2					
ANR	732935	Identifier	state		732528	0					
ANR	732936	Argument	refs		732528	3					
ANR	732937	Identifier	refs		732528	0					
ANR	732938	Argument	fullNames		732528	4					
ANR	732939	Identifier	fullNames		732528	0					
ANR	732940	CompoundStatement		144:79:4653:4653	732528	1					
ANR	732941	ReturnStatement	return false ;	1413:16:36320:36332	732528	0	True				
ANR	732942	Identifier	false		732528	0					
ANR	732943	IfStatement	"if ( t3 && ! _GetInternalReferences ( t3 , ad , state , refs , fullNames ) )"		732528	5					
ANR	732944	Condition	"t3 && ! _GetInternalReferences ( t3 , ad , state , refs , fullNames )"	1416:16:36365:36425	732528	0	True				
ANR	732945	AndExpression	"t3 && ! _GetInternalReferences ( t3 , ad , state , refs , fullNames )"		732528	0		&&			
ANR	732946	Identifier	t3		732528	0					
ANR	732947	UnaryOperationExpression	"! _GetInternalReferences ( t3 , ad , state , refs , fullNames )"		732528	1					
ANR	732948	UnaryOperator	!		732528	0					
ANR	732949	CallExpression	"_GetInternalReferences ( t3 , ad , state , refs , fullNames )"		732528	1					
ANR	732950	Callee	_GetInternalReferences		732528	0					
ANR	732951	Identifier	_GetInternalReferences		732528	0					
ANR	732952	ArgumentList	t3		732528	1					
ANR	732953	Argument	t3		732528	0					
ANR	732954	Identifier	t3		732528	0					
ANR	732955	Argument	ad		732528	1					
ANR	732956	Identifier	ad		732528	0					
ANR	732957	Argument	state		732528	2					
ANR	732958	Identifier	state		732528	0					
ANR	732959	Argument	refs		732528	3					
ANR	732960	Identifier	refs		732528	0					
ANR	732961	Argument	fullNames		732528	4					
ANR	732962	Identifier	fullNames		732528	0					
ANR	732963	CompoundStatement		148:79:4779:4779	732528	1					
ANR	732964	ReturnStatement	return false ;	1417:16:36446:36458	732528	0	True				
ANR	732965	Identifier	false		732528	0					
ANR	732966	ReturnStatement	return true ;	1420:12:36487:36498	732528	6	True				
ANR	732967	Identifier	true		732528	0					
ANR	732968	BreakStatement	break ;	1421:8:36508:36513	732528	7	True				
ANR	732969	Label	case FN_CALL_NODE :	1424:8:36534:36551	732528	6	True				
ANR	732970	Identifier	FN_CALL_NODE		732528	0					
ANR	732971	CompoundStatement		160:12:5058:5093	732528	7					
ANR	732972	IdentifierDeclStatement	string fnName ;	1426:12:36605:36643	732528	0	True				
ANR	732973	IdentifierDecl	fnName		732528	0					
ANR	732974	IdentifierDeclType	string		732528	0					
ANR	732975	Identifier	fnName		732528	1					
ANR	732976	IdentifierDeclStatement	vector < ExprTree * > args ;	1427:12:36657:36693	732528	1	True				
ANR	732977	IdentifierDecl	args		732528	0					
ANR	732978	IdentifierDeclType	vector < ExprTree * >		732528	0					
ANR	732979	Identifier	args		732528	1					
ANR	732980	IdentifierDeclStatement	vector < ExprTree * > :: iterator itr ;	1428:12:36707:36742	732528	2	True				
ANR	732981	IdentifierDecl	itr		732528	0					
ANR	732982	IdentifierDeclType	vector < ExprTree * > :: iterator		732528	0					
ANR	732983	Identifier	itr		732528	1					
ANR	732984	ExpressionStatement	"( ( const FunctionCall * ) expr ) -> GetComponents ( fnName , args )"	1430:12:36757:36813	732528	3	True				
ANR	732985	CallExpression	"( ( const FunctionCall * ) expr ) -> GetComponents ( fnName , args )"		732528	0					
ANR	732986	Callee	( ( const FunctionCall * ) expr ) -> GetComponents		732528	0					
ANR	732987	PtrMemberAccess	( ( const FunctionCall * ) expr ) -> GetComponents		732528	0					
ANR	732988	CastExpression	( const FunctionCall * ) expr		732528	0					
ANR	732989	CastTarget	const FunctionCall *		732528	0					
ANR	732990	Identifier	expr		732528	1					
ANR	732991	Identifier	GetComponents		732528	1					
ANR	732992	ArgumentList	fnName		732528	1					
ANR	732993	Argument	fnName		732528	0					
ANR	732994	Identifier	fnName		732528	0					
ANR	732995	Argument	args		732528	1					
ANR	732996	Identifier	args		732528	0					
ANR	732997	ForStatement	for ( itr = args . begin ( ) ; itr != args . end ( ) ; itr ++ )		732528	4					
ANR	732998	ForInit	itr = args . begin ( ) ;	1431:17:36832:36850	732528	0	True				
ANR	732999	AssignmentExpression	itr = args . begin ( )		732528	0		=			
ANR	733000	Identifier	itr		732528	0					
ANR	733001	CallExpression	args . begin ( )		732528	1					
ANR	733002	Callee	args . begin		732528	0					
ANR	733003	MemberAccess	args . begin		732528	0					
ANR	733004	Identifier	args		732528	0					
ANR	733005	Identifier	begin		732528	1					
ANR	733006	ArgumentList			732528	1					
ANR	733007	Condition	itr != args . end ( )	1431:37:36852:36868	732528	1	True				
ANR	733008	EqualityExpression	itr != args . end ( )		732528	0		!=			
ANR	733009	Identifier	itr		732528	0					
ANR	733010	CallExpression	args . end ( )		732528	1					
ANR	733011	Callee	args . end		732528	0					
ANR	733012	MemberAccess	args . end		732528	0					
ANR	733013	Identifier	args		732528	0					
ANR	733014	Identifier	end		732528	1					
ANR	733015	ArgumentList			732528	1					
ANR	733016	PostIncDecOperationExpression	itr ++	1431:56:36871:36875	732528	2	True				
ANR	733017	Identifier	itr		732528	0					
ANR	733018	IncDec	++		732528	1					
ANR	733019	CompoundStatement		163:62:5228:5228	732528	3					
ANR	733020	IfStatement	"if ( ! _GetInternalReferences ( * itr , ad , state , refs , fullNames ) )"		732528	0					
ANR	733021	Condition	"! _GetInternalReferences ( * itr , ad , state , refs , fullNames )"	1432:20:36899:36956	732528	0	True				
ANR	733022	UnaryOperationExpression	"! _GetInternalReferences ( * itr , ad , state , refs , fullNames )"		732528	0					
ANR	733023	UnaryOperator	!		732528	0					
ANR	733024	CallExpression	"_GetInternalReferences ( * itr , ad , state , refs , fullNames )"		732528	1					
ANR	733025	Callee	_GetInternalReferences		732528	0					
ANR	733026	Identifier	_GetInternalReferences		732528	0					
ANR	733027	ArgumentList	* itr		732528	1					
ANR	733028	Argument	* itr		732528	0					
ANR	733029	UnaryOperationExpression	* itr		732528	0					
ANR	733030	UnaryOperator	*		732528	0					
ANR	733031	Identifier	itr		732528	1					
ANR	733032	Argument	ad		732528	1					
ANR	733033	Identifier	ad		732528	0					
ANR	733034	Argument	state		732528	2					
ANR	733035	Identifier	state		732528	0					
ANR	733036	Argument	refs		732528	3					
ANR	733037	Identifier	refs		732528	0					
ANR	733038	Argument	fullNames		732528	4					
ANR	733039	Identifier	fullNames		732528	0					
ANR	733040	CompoundStatement		164:81:5311:5311	732528	1					
ANR	733041	ReturnStatement	return false ;	1433:20:36982:36994	732528	0	True				
ANR	733042	Identifier	false		732528	0					
ANR	733043	ReturnStatement	return true ;	1437:12:37041:37052	732528	5	True				
ANR	733044	Identifier	true		732528	0					
ANR	733045	BreakStatement	break ;	1438:8:37062:37067	732528	6	True				
ANR	733046	Label	case CLASSAD_NODE :	1441:8:37106:37123	732528	8	True				
ANR	733047	Identifier	CLASSAD_NODE		732528	0					
ANR	733048	CompoundStatement		176:12:5598:5649	732528	9					
ANR	733049	IdentifierDeclStatement	"vector < pair < string , ExprTree * > > attrs ;"	1443:12:37180:37233	732528	0	True				
ANR	733050	IdentifierDecl	attrs		732528	0					
ANR	733051	IdentifierDeclType	"vector < pair < string , ExprTree * > >"		732528	0					
ANR	733052	Identifier	attrs		732528	1					
ANR	733053	IdentifierDeclStatement	"vector < pair < string , ExprTree * > > :: iterator itr ;"	1444:12:37247:37298	732528	1	True				
ANR	733054	IdentifierDecl	itr		732528	0					
ANR	733055	IdentifierDeclType	"vector < pair < string , ExprTree * > > :: iterator"		732528	0					
ANR	733056	Identifier	itr		732528	1					
ANR	733057	ExpressionStatement	( ( const ClassAd * ) expr ) -> GetComponents ( attrs )	1446:12:37313:37357	732528	2	True				
ANR	733058	CallExpression	( ( const ClassAd * ) expr ) -> GetComponents ( attrs )		732528	0					
ANR	733059	Callee	( ( const ClassAd * ) expr ) -> GetComponents		732528	0					
ANR	733060	PtrMemberAccess	( ( const ClassAd * ) expr ) -> GetComponents		732528	0					
ANR	733061	CastExpression	( const ClassAd * ) expr		732528	0					
ANR	733062	CastTarget	const ClassAd *		732528	0					
ANR	733063	Identifier	expr		732528	1					
ANR	733064	Identifier	GetComponents		732528	1					
ANR	733065	ArgumentList	attrs		732528	1					
ANR	733066	Argument	attrs		732528	0					
ANR	733067	Identifier	attrs		732528	0					
ANR	733068	ForStatement	for ( itr = attrs . begin ( ) ; itr != attrs . end ( ) ; itr ++ )		732528	3					
ANR	733069	ForInit	itr = attrs . begin ( ) ;	1447:16:37375:37394	732528	0	True				
ANR	733070	AssignmentExpression	itr = attrs . begin ( )		732528	0		=			
ANR	733071	Identifier	itr		732528	0					
ANR	733072	CallExpression	attrs . begin ( )		732528	1					
ANR	733073	Callee	attrs . begin		732528	0					
ANR	733074	MemberAccess	attrs . begin		732528	0					
ANR	733075	Identifier	attrs		732528	0					
ANR	733076	Identifier	begin		732528	1					
ANR	733077	ArgumentList			732528	1					
ANR	733078	Condition	itr != attrs . end ( )	1447:37:37396:37413	732528	1	True				
ANR	733079	EqualityExpression	itr != attrs . end ( )		732528	0		!=			
ANR	733080	Identifier	itr		732528	0					
ANR	733081	CallExpression	attrs . end ( )		732528	1					
ANR	733082	Callee	attrs . end		732528	0					
ANR	733083	MemberAccess	attrs . end		732528	0					
ANR	733084	Identifier	attrs		732528	0					
ANR	733085	Identifier	end		732528	1					
ANR	733086	ArgumentList			732528	1					
ANR	733087	PostIncDecOperationExpression	itr ++	1447:57:37416:37420	732528	2	True				
ANR	733088	Identifier	itr		732528	0					
ANR	733089	IncDec	++		732528	1					
ANR	733090	CompoundStatement		185:16:5936:6010	732528	3					
ANR	733091	IfStatement	if ( state . depth_remaining <= 0 )		732528	0					
ANR	733092	Condition	state . depth_remaining <= 0	1448:20:37444:37469	732528	0	True				
ANR	733093	RelationalExpression	state . depth_remaining <= 0		732528	0		<=			
ANR	733094	MemberAccess	state . depth_remaining		732528	0					
ANR	733095	Identifier	state		732528	0					
ANR	733096	Identifier	depth_remaining		732528	1					
ANR	733097	PrimaryExpression	0		732528	1					
ANR	733098	CompoundStatement		180:49:5824:5824	732528	1					
ANR	733099	ReturnStatement	return false ;	1449:20:37495:37507	732528	0	True				
ANR	733100	Identifier	false		732528	0					
ANR	733101	ExpressionStatement	state . depth_remaining --	1451:16:37543:37566	732528	1	True				
ANR	733102	PostIncDecOperationExpression	state . depth_remaining --		732528	0					
ANR	733103	MemberAccess	state . depth_remaining		732528	0					
ANR	733104	Identifier	state		732528	0					
ANR	733105	Identifier	depth_remaining		732528	1					
ANR	733106	IncDec	--		732528	1					
ANR	733107	IdentifierDeclStatement	"bool ret = _GetInternalReferences ( itr -> second , ad , state , refs , fullNames ) ;"	1453:16:37585:37659	732528	2	True				
ANR	733108	IdentifierDecl	"ret = _GetInternalReferences ( itr -> second , ad , state , refs , fullNames )"		732528	0					
ANR	733109	IdentifierDeclType	bool		732528	0					
ANR	733110	Identifier	ret		732528	1					
ANR	733111	AssignmentExpression	"ret = _GetInternalReferences ( itr -> second , ad , state , refs , fullNames )"		732528	2		=			
ANR	733112	Identifier	ret		732528	0					
ANR	733113	CallExpression	"_GetInternalReferences ( itr -> second , ad , state , refs , fullNames )"		732528	1					
ANR	733114	Callee	_GetInternalReferences		732528	0					
ANR	733115	Identifier	_GetInternalReferences		732528	0					
ANR	733116	ArgumentList	itr -> second		732528	1					
ANR	733117	Argument	itr -> second		732528	0					
ANR	733118	PtrMemberAccess	itr -> second		732528	0					
ANR	733119	Identifier	itr		732528	0					
ANR	733120	Identifier	second		732528	1					
ANR	733121	Argument	ad		732528	1					
ANR	733122	Identifier	ad		732528	0					
ANR	733123	Argument	state		732528	2					
ANR	733124	Identifier	state		732528	0					
ANR	733125	Argument	refs		732528	3					
ANR	733126	Identifier	refs		732528	0					
ANR	733127	Argument	fullNames		732528	4					
ANR	733128	Identifier	fullNames		732528	0					
ANR	733129	ExpressionStatement	state . depth_remaining ++	1455:16:37678:37701	732528	3	True				
ANR	733130	PostIncDecOperationExpression	state . depth_remaining ++		732528	0					
ANR	733131	MemberAccess	state . depth_remaining		732528	0					
ANR	733132	Identifier	state		732528	0					
ANR	733133	Identifier	depth_remaining		732528	1					
ANR	733134	IncDec	++		732528	1					
ANR	733135	IfStatement	if ( ! ret )		732528	4					
ANR	733136	Condition	! ret	1456:20:37723:37726	732528	0	True				
ANR	733137	UnaryOperationExpression	! ret		732528	0					
ANR	733138	UnaryOperator	!		732528	0					
ANR	733139	Identifier	ret		732528	1					
ANR	733140	CompoundStatement		188:27:6081:6081	732528	1					
ANR	733141	ReturnStatement	return false ;	1457:20:37752:37764	732528	0	True				
ANR	733142	Identifier	false		732528	0					
ANR	733143	ReturnStatement	return true ;	1461:12:37811:37822	732528	4	True				
ANR	733144	Identifier	true		732528	0					
ANR	733145	BreakStatement	break ;	1462:8:37832:37837	732528	5	True				
ANR	733146	Label	case EXPR_LIST_NODE :	1465:8:37862:37881	732528	10	True				
ANR	733147	Identifier	EXPR_LIST_NODE		732528	0					
ANR	733148	CompoundStatement		199:12:6298:6333	732528	11					
ANR	733149	IdentifierDeclStatement	vector < ExprTree * > exprs ;	1466:12:37896:37933	732528	0	True				
ANR	733150	IdentifierDecl	exprs		732528	0					
ANR	733151	IdentifierDeclType	vector < ExprTree * >		732528	0					
ANR	733152	Identifier	exprs		732528	1					
ANR	733153	IdentifierDeclStatement	vector < ExprTree * > :: iterator itr ;	1467:12:37947:37982	732528	1	True				
ANR	733154	IdentifierDecl	itr		732528	0					
ANR	733155	IdentifierDeclType	vector < ExprTree * > :: iterator		732528	0					
ANR	733156	Identifier	itr		732528	1					
ANR	733157	ExpressionStatement	( ( const ExprList * ) expr ) -> GetComponents ( exprs )	1469:12:37997:38042	732528	2	True				
ANR	733158	CallExpression	( ( const ExprList * ) expr ) -> GetComponents ( exprs )		732528	0					
ANR	733159	Callee	( ( const ExprList * ) expr ) -> GetComponents		732528	0					
ANR	733160	PtrMemberAccess	( ( const ExprList * ) expr ) -> GetComponents		732528	0					
ANR	733161	CastExpression	( const ExprList * ) expr		732528	0					
ANR	733162	CastTarget	const ExprList *		732528	0					
ANR	733163	Identifier	expr		732528	1					
ANR	733164	Identifier	GetComponents		732528	1					
ANR	733165	ArgumentList	exprs		732528	1					
ANR	733166	Argument	exprs		732528	0					
ANR	733167	Identifier	exprs		732528	0					
ANR	733168	ForStatement	for ( itr = exprs . begin ( ) ; itr != exprs . end ( ) ; itr ++ )		732528	3					
ANR	733169	ForInit	itr = exprs . begin ( ) ;	1470:16:38060:38079	732528	0	True				
ANR	733170	AssignmentExpression	itr = exprs . begin ( )		732528	0		=			
ANR	733171	Identifier	itr		732528	0					
ANR	733172	CallExpression	exprs . begin ( )		732528	1					
ANR	733173	Callee	exprs . begin		732528	0					
ANR	733174	MemberAccess	exprs . begin		732528	0					
ANR	733175	Identifier	exprs		732528	0					
ANR	733176	Identifier	begin		732528	1					
ANR	733177	ArgumentList			732528	1					
ANR	733178	Condition	itr != exprs . end ( )	1470:37:38081:38098	732528	1	True				
ANR	733179	EqualityExpression	itr != exprs . end ( )		732528	0		!=			
ANR	733180	Identifier	itr		732528	0					
ANR	733181	CallExpression	exprs . end ( )		732528	1					
ANR	733182	Callee	exprs . end		732528	0					
ANR	733183	MemberAccess	exprs . end		732528	0					
ANR	733184	Identifier	exprs		732528	0					
ANR	733185	Identifier	end		732528	1					
ANR	733186	ArgumentList			732528	1					
ANR	733187	PostIncDecOperationExpression	itr ++	1470:57:38101:38105	732528	2	True				
ANR	733188	Identifier	itr		732528	0					
ANR	733189	IncDec	++		732528	1					
ANR	733190	CompoundStatement		208:16:6621:6688	732528	3					
ANR	733191	IfStatement	if ( state . depth_remaining <= 0 )		732528	0					
ANR	733192	Condition	state . depth_remaining <= 0	1471:20:38129:38154	732528	0	True				
ANR	733193	RelationalExpression	state . depth_remaining <= 0		732528	0		<=			
ANR	733194	MemberAccess	state . depth_remaining		732528	0					
ANR	733195	Identifier	state		732528	0					
ANR	733196	Identifier	depth_remaining		732528	1					
ANR	733197	PrimaryExpression	0		732528	1					
ANR	733198	CompoundStatement		203:49:6509:6509	732528	1					
ANR	733199	ReturnStatement	return false ;	1472:20:38180:38192	732528	0	True				
ANR	733200	Identifier	false		732528	0					
ANR	733201	ExpressionStatement	state . depth_remaining --	1474:16:38228:38251	732528	1	True				
ANR	733202	PostIncDecOperationExpression	state . depth_remaining --		732528	0					
ANR	733203	MemberAccess	state . depth_remaining		732528	0					
ANR	733204	Identifier	state		732528	0					
ANR	733205	Identifier	depth_remaining		732528	1					
ANR	733206	IncDec	--		732528	1					
ANR	733207	IdentifierDeclStatement	"bool ret = _GetInternalReferences ( * itr , ad , state , refs , fullNames ) ;"	1476:16:38270:38337	732528	2	True				
ANR	733208	IdentifierDecl	"ret = _GetInternalReferences ( * itr , ad , state , refs , fullNames )"		732528	0					
ANR	733209	IdentifierDeclType	bool		732528	0					
ANR	733210	Identifier	ret		732528	1					
ANR	733211	AssignmentExpression	"ret = _GetInternalReferences ( * itr , ad , state , refs , fullNames )"		732528	2		=			
ANR	733212	Identifier	ret		732528	0					
ANR	733213	CallExpression	"_GetInternalReferences ( * itr , ad , state , refs , fullNames )"		732528	1					
ANR	733214	Callee	_GetInternalReferences		732528	0					
ANR	733215	Identifier	_GetInternalReferences		732528	0					
ANR	733216	ArgumentList	* itr		732528	1					
ANR	733217	Argument	* itr		732528	0					
ANR	733218	UnaryOperationExpression	* itr		732528	0					
ANR	733219	UnaryOperator	*		732528	0					
ANR	733220	Identifier	itr		732528	1					
ANR	733221	Argument	ad		732528	1					
ANR	733222	Identifier	ad		732528	0					
ANR	733223	Argument	state		732528	2					
ANR	733224	Identifier	state		732528	0					
ANR	733225	Argument	refs		732528	3					
ANR	733226	Identifier	refs		732528	0					
ANR	733227	Argument	fullNames		732528	4					
ANR	733228	Identifier	fullNames		732528	0					
ANR	733229	ExpressionStatement	state . depth_remaining ++	1478:16:38356:38379	732528	3	True				
ANR	733230	PostIncDecOperationExpression	state . depth_remaining ++		732528	0					
ANR	733231	MemberAccess	state . depth_remaining		732528	0					
ANR	733232	Identifier	state		732528	0					
ANR	733233	Identifier	depth_remaining		732528	1					
ANR	733234	IncDec	++		732528	1					
ANR	733235	IfStatement	if ( ! ret )		732528	4					
ANR	733236	Condition	! ret	1479:20:38401:38404	732528	0	True				
ANR	733237	UnaryOperationExpression	! ret		732528	0					
ANR	733238	UnaryOperator	!		732528	0					
ANR	733239	Identifier	ret		732528	1					
ANR	733240	CompoundStatement		211:27:6759:6759	732528	1					
ANR	733241	ReturnStatement	return false ;	1480:20:38430:38442	732528	0	True				
ANR	733242	Identifier	false		732528	0					
ANR	733243	ReturnStatement	return true ;	1484:12:38489:38500	732528	4	True				
ANR	733244	Identifier	true		732528	0					
ANR	733245	BreakStatement	break ;	1485:8:38510:38515	732528	5	True				
ANR	733246	Label	default :	1488:8:38556:38563	732528	12	True				
ANR	733247	Identifier	default		732528	0					
ANR	733248	ReturnStatement	return false ;	1489:12:38577:38589	732528	13	True				
ANR	733249	Identifier	false		732528	0					
ANR	733250	ReturnType	bool		732528	1					
ANR	733251	Identifier	ClassAd :: _GetInternalReferences		732528	2					
ANR	733252	ParameterList	"const ExprTree * expr , ClassAd * ad , EvalState & state , References & refs , bool fullNames"		732528	3					
ANR	733253	Parameter	const ExprTree * expr	1267:24:31553:31572	732528	0	True				
ANR	733254	ParameterType	const ExprTree *		732528	0					
ANR	733255	Identifier	expr		732528	1					
ANR	733256	Parameter	ClassAd * ad	1267:46:31575:31585	732528	1	True				
ANR	733257	ParameterType	ClassAd *		732528	0					
ANR	733258	Identifier	ad		732528	1					
ANR	733259	Parameter	EvalState & state	1268:8:31596:31611	732528	2	True				
ANR	733260	ParameterType	EvalState &		732528	0					
ANR	733261	Identifier	state		732528	1					
ANR	733262	Parameter	References & refs	1268:26:31614:31629	732528	3	True				
ANR	733263	ParameterType	References &		732528	0					
ANR	733264	Identifier	refs		732528	1					
ANR	733265	Parameter	bool fullNames	1268:44:31632:31645	732528	4	True				
ANR	733266	ParameterType	bool		732528	0					
ANR	733267	Identifier	fullNames		732528	1					
ANR	733268	CFGEntryNode	ENTRY		732528		True				
ANR	733269	CFGExitNode	EXIT		732528		True				
ANR	733270	Symbol	followRef		732528						
ANR	733271	Symbol	ad -> Lookup		732528						
ANR	733272	Symbol	* start		732528						
ANR	733273	Symbol	state . rootAd		732528						
ANR	733274	Symbol	state . curAd		732528						
ANR	733275	Symbol	exprs . end		732528						
ANR	733276	Symbol	state		732528						
ANR	733277	Symbol	start -> LookupInScope		732528						
ANR	733278	Symbol	exprs . begin		732528						
ANR	733279	Symbol	itr -> second		732528						
ANR	733280	Symbol	val		732528						
ANR	733281	Symbol	ret		732528						
ANR	733282	Symbol	ad		732528						
ANR	733283	Symbol	NULL		732528						
ANR	733284	Symbol	prefixStr		732528						
ANR	733285	Symbol	itr		732528						
ANR	733286	Symbol	tree		732528						
ANR	733287	Symbol	curAd		732528						
ANR	733288	Symbol	val . IsUndefinedValue		732528						
ANR	733289	Symbol	attrs		732528						
ANR	733290	Symbol	fnName		732528						
ANR	733291	Symbol	* expr		732528						
ANR	733292	Symbol	true		732528						
ANR	733293	Symbol	attrs . end		732528						
ANR	733294	Symbol	t1		732528						
ANR	733295	Symbol	t2		732528						
ANR	733296	Symbol	t3		732528						
ANR	733297	Symbol	* ad		732528						
ANR	733298	Symbol	result		732528						
ANR	733299	Symbol	args . begin		732528						
ANR	733300	Symbol	state . depth_remaining		732528						
ANR	733301	Symbol	attrs . begin		732528						
ANR	733302	Symbol	val . IsClassAdValue		732528						
ANR	733303	Symbol	exprs		732528						
ANR	733304	Symbol	expr		732528						
ANR	733305	Symbol	rval		732528						
ANR	733306	Symbol	attr		732528						
ANR	733307	Symbol	args . end		732528						
ANR	733308	Symbol	expr -> GetKind		732528						
ANR	733309	Symbol	op		732528						
ANR	733310	Symbol	nameToAddToRefs		732528						
ANR	733311	Symbol	start		732528						
ANR	733312	Symbol	false		732528						
ANR	733313	Symbol	_GetInternalReferences		732528						
ANR	733314	Symbol	fullNames		732528						
ANR	733315	Symbol	* itr		732528						
ANR	733316	Symbol	* tree		732528						
ANR	733317	Symbol	args		732528						
ANR	733318	Symbol	abs		732528						
ANR	733319	Symbol	refs		732528						
ANR	733320	Symbol	tree -> Evaluate		732528						
ANR	733321	Symbol	unparser		732528						
ANR	733322	Function	ClassAd :: AddRectangle	1497:0:38631:40364							
ANR	733323	FunctionDef	"ClassAd :: AddRectangle (const ExprTree * tree , Rectangles & r , const string & allowed , const References & irefs)"		733322	0					
ANR	733324	CompoundStatement		1500:0:38746:40364	733322	0					
ANR	733325	IdentifierDeclStatement	ExprTree * ftree ;	1501:1:38749:38765	733322	0	True				
ANR	733326	IdentifierDecl	* ftree		733322	0					
ANR	733327	IdentifierDeclType	ExprTree *		733322	0					
ANR	733328	Identifier	ftree		733322	1					
ANR	733329	IdentifierDeclStatement	bool rval ;	1502:1:38768:38779	733322	1	True				
ANR	733330	IdentifierDecl	rval		733322	0					
ANR	733331	IdentifierDeclType	bool		733322	0					
ANR	733332	Identifier	rval		733322	1					
ANR	733333	IdentifierDeclStatement	Value val ;	1503:1:38782:38793	733322	2	True				
ANR	733334	IdentifierDecl	val		733322	0					
ANR	733335	IdentifierDeclType	Value		733322	0					
ANR	733336	Identifier	val		733322	1					
ANR	733337	IdentifierDeclStatement	int oldRid = r . rId ;	1504:1:38796:38817	733322	3	True				
ANR	733338	IdentifierDecl	oldRid = r . rId		733322	0					
ANR	733339	IdentifierDeclType	int		733322	0					
ANR	733340	Identifier	oldRid		733322	1					
ANR	733341	AssignmentExpression	oldRid = r . rId		733322	2		=			
ANR	733342	Identifier	oldRid		733322	0					
ANR	733343	MemberAccess	r . rId		733322	1					
ANR	733344	Identifier	r		733322	0					
ANR	733345	Identifier	rId		733322	1					
ANR	733346	IdentifierDeclStatement	const ClassAd * ad ;	1505:1:38820:38837	733322	4	True				
ANR	733347	IdentifierDecl	* ad		733322	0					
ANR	733348	IdentifierDeclType	const ClassAd *		733322	0					
ANR	733349	Identifier	ad		733322	1					
ANR	733350	ExpressionStatement	ftree = NULL	1508:1:38877:38889	733322	5	True				
ANR	733351	AssignmentExpression	ftree = NULL		733322	0		=			
ANR	733352	Identifier	ftree		733322	0					
ANR	733353	Identifier	NULL		733322	1					
ANR	733354	IfStatement	"if ( ! Flatten ( tree , val , ftree ) )"		733322	6					
ANR	733355	Condition	"! Flatten ( tree , val , ftree )"	1509:5:38896:38923	733322	0	True				
ANR	733356	UnaryOperationExpression	"! Flatten ( tree , val , ftree )"		733322	0					
ANR	733357	UnaryOperator	!		733322	0					
ANR	733358	CallExpression	"Flatten ( tree , val , ftree )"		733322	1					
ANR	733359	Callee	Flatten		733322	0					
ANR	733360	Identifier	Flatten		733322	0					
ANR	733361	ArgumentList	tree		733322	1					
ANR	733362	Argument	tree		733322	0					
ANR	733363	Identifier	tree		733322	0					
ANR	733364	Argument	val		733322	1					
ANR	733365	Identifier	val		733322	0					
ANR	733366	Argument	ftree		733322	2					
ANR	733367	Identifier	ftree		733322	0					
ANR	733368	CompoundStatement		10:36:180:180	733322	1					
ANR	733369	ReturnStatement	return ( false ) ;	1510:2:38931:38946	733322	0	True				
ANR	733370	Identifier	false		733322	0					
ANR	733371	IfStatement	if ( ! ftree )		733322	7					
ANR	733372	Condition	! ftree	1512:5:38956:38961	733322	0	True				
ANR	733373	UnaryOperationExpression	! ftree		733322	0					
ANR	733374	UnaryOperator	!		733322	0					
ANR	733375	Identifier	ftree		733322	1					
ANR	733376	CompoundStatement		15:2:281:287	733322	1					
ANR	733377	IdentifierDeclStatement	bool b ;	1514:2:39028:39034	733322	0	True				
ANR	733378	IdentifierDecl	b		733322	0					
ANR	733379	IdentifierDeclType	bool		733322	0					
ANR	733380	Identifier	b		733322	1					
ANR	733381	IfStatement	if ( ! val . IsBooleanValue ( b ) || ! b )		733322	1					
ANR	733382	Condition	! val . IsBooleanValue ( b ) || ! b	1515:6:39042:39071	733322	0	True				
ANR	733383	OrExpression	! val . IsBooleanValue ( b ) || ! b		733322	0		||			
ANR	733384	UnaryOperationExpression	! val . IsBooleanValue ( b )		733322	0					
ANR	733385	UnaryOperator	!		733322	0					
ANR	733386	CallExpression	val . IsBooleanValue ( b )		733322	1					
ANR	733387	Callee	val . IsBooleanValue		733322	0					
ANR	733388	MemberAccess	val . IsBooleanValue		733322	0					
ANR	733389	Identifier	val		733322	0					
ANR	733390	Identifier	IsBooleanValue		733322	1					
ANR	733391	ArgumentList	b		733322	1					
ANR	733392	Argument	b		733322	0					
ANR	733393	Identifier	b		733322	0					
ANR	733394	UnaryOperationExpression	! b		733322	1					
ANR	733395	UnaryOperator	!		733322	0					
ANR	733396	Identifier	b		733322	1					
ANR	733397	ReturnStatement	return ( false ) ;	1515:39:39075:39090	733322	1	True				
ANR	733398	Identifier	false		733322	0					
ANR	733399	ExpressionStatement	r . NewRectangle ( )	1520:2:39267:39284	733322	2	True				
ANR	733400	CallExpression	r . NewRectangle ( )		733322	0					
ANR	733401	Callee	r . NewRectangle		733322	0					
ANR	733402	MemberAccess	r . NewRectangle		733322	0					
ANR	733403	Identifier	r		733322	0					
ANR	733404	Identifier	NewRectangle		733322	1					
ANR	733405	ArgumentList			733322	1					
ANR	733406	ElseStatement	else		733322	0					
ANR	733407	CompoundStatement		22:8:547:547	733322	0					
ANR	733408	ExpressionStatement	"rval = _MakeRectangles ( ftree , allowed , r , true )"	1522:2:39298:39347	733322	0	True				
ANR	733409	AssignmentExpression	"rval = _MakeRectangles ( ftree , allowed , r , true )"		733322	0		=			
ANR	733410	Identifier	rval		733322	0					
ANR	733411	CallExpression	"_MakeRectangles ( ftree , allowed , r , true )"		733322	1					
ANR	733412	Callee	_MakeRectangles		733322	0					
ANR	733413	Identifier	_MakeRectangles		733322	0					
ANR	733414	ArgumentList	ftree		733322	1					
ANR	733415	Argument	ftree		733322	0					
ANR	733416	Identifier	ftree		733322	0					
ANR	733417	Argument	allowed		733322	1					
ANR	733418	Identifier	allowed		733322	0					
ANR	733419	Argument	r		733322	2					
ANR	733420	Identifier	r		733322	0					
ANR	733421	Argument	true		733322	3					
ANR	733422	Identifier	true		733322	0					
ANR	733423	Statement	delete	1523:2:39351:39356	733322	1	True				
ANR	733424	ExpressionStatement	ftree	1523:9:39358:39363	733322	2	True				
ANR	733425	Identifier	ftree		733322	0					
ANR	733426	IfStatement	if ( ! rval )		733322	3					
ANR	733427	Condition	! rval	1524:6:39371:39375	733322	0	True				
ANR	733428	UnaryOperationExpression	! rval		733322	0					
ANR	733429	UnaryOperator	!		733322	0					
ANR	733430	Identifier	rval		733322	1					
ANR	733431	CompoundStatement		25:14:632:632	733322	1					
ANR	733432	ReturnStatement	return ( false ) ;	1525:3:39384:39399	733322	0	True				
ANR	733433	Identifier	false		733322	0					
ANR	733434	ExpressionStatement	ftree = NULL	1527:2:39407:39419	733322	4	True				
ANR	733435	AssignmentExpression	ftree = NULL		733322	0		=			
ANR	733436	Identifier	ftree		733322	0					
ANR	733437	Identifier	NULL		733322	1					
ANR	733438	ForStatement	for ( References :: iterator itr = irefs . begin ( ) ; itr != irefs . end ( ) ; itr ++ )		733322	8					
ANR	733439	ForInit	References :: iterator itr = irefs . begin ( ) ;	1531:6:39490:39529	733322	0	True				
ANR	733440	IdentifierDeclStatement	References :: iterator itr = irefs . begin ( ) ;		733322	0					
ANR	733441	IdentifierDecl	itr = irefs . begin ( )		733322	0					
ANR	733442	IdentifierDeclType	References :: iterator		733322	0					
ANR	733443	Identifier	itr		733322	1					
ANR	733444	AssignmentExpression	itr = irefs . begin ( )		733322	2		=			
ANR	733445	Identifier	itr		733322	0					
ANR	733446	CallExpression	irefs . begin ( )		733322	1					
ANR	733447	Callee	irefs . begin		733322	0					
ANR	733448	MemberAccess	irefs . begin		733322	0					
ANR	733449	Identifier	irefs		733322	0					
ANR	733450	Identifier	begin		733322	1					
ANR	733451	ArgumentList			733322	1					
ANR	733452	Condition	itr != irefs . end ( )	1531:46:39530:39546	733322	1	True				
ANR	733453	EqualityExpression	itr != irefs . end ( )		733322	0		!=			
ANR	733454	Identifier	itr		733322	0					
ANR	733455	CallExpression	irefs . end ( )		733322	1					
ANR	733456	Callee	irefs . end		733322	0					
ANR	733457	MemberAccess	irefs . end		733322	0					
ANR	733458	Identifier	irefs		733322	0					
ANR	733459	Identifier	end		733322	1					
ANR	733460	ArgumentList			733322	1					
ANR	733461	PostIncDecOperationExpression	itr ++	1531:65:39549:39553	733322	2	True				
ANR	733462	Identifier	itr		733322	0					
ANR	733463	IncDec	++		733322	1					
ANR	733464	CompoundStatement		32:73:810:810	733322	3					
ANR	733465	IfStatement	"if ( ! LookupInScope ( * itr , ad ) )"		733322	0					
ANR	733466	Condition	"! LookupInScope ( * itr , ad )"	1532:6:39565:39590	733322	0	True				
ANR	733467	UnaryOperationExpression	"! LookupInScope ( * itr , ad )"		733322	0					
ANR	733468	UnaryOperator	!		733322	0					
ANR	733469	CallExpression	"LookupInScope ( * itr , ad )"		733322	1					
ANR	733470	Callee	LookupInScope		733322	0					
ANR	733471	Identifier	LookupInScope		733322	0					
ANR	733472	ArgumentList	* itr		733322	1					
ANR	733473	Argument	* itr		733322	0					
ANR	733474	UnaryOperationExpression	* itr		733322	0					
ANR	733475	UnaryOperator	*		733322	0					
ANR	733476	Identifier	itr		733322	1					
ANR	733477	Argument	ad		733322	1					
ANR	733478	Identifier	ad		733322	0					
ANR	733479	CompoundStatement		33:35:847:847	733322	1					
ANR	733480	ForStatement	for ( int i = oldRid + 1 ; i <= r . rId ; i ++ )		733322	0					
ANR	733481	ForInit	int i = oldRid + 1 ;	1534:8:39656:39673	733322	0	True				
ANR	733482	IdentifierDeclStatement	int i = oldRid + 1 ;		733322	0					
ANR	733483	IdentifierDecl	i = oldRid + 1		733322	0					
ANR	733484	IdentifierDeclType	int		733322	0					
ANR	733485	Identifier	i		733322	1					
ANR	733486	AssignmentExpression	i = oldRid + 1		733322	2		=			
ANR	733487	Identifier	i		733322	0					
ANR	733488	AdditiveExpression	oldRid + 1		733322	1		+			
ANR	733489	Identifier	oldRid		733322	0					
ANR	733490	PrimaryExpression	1		733322	1					
ANR	733491	Condition	i <= r . rId	1534:27:39675:39684	733322	1	True				
ANR	733492	RelationalExpression	i <= r . rId		733322	0		<=			
ANR	733493	Identifier	i		733322	0					
ANR	733494	MemberAccess	r . rId		733322	1					
ANR	733495	Identifier	r		733322	0					
ANR	733496	Identifier	rId		733322	1					
ANR	733497	PostIncDecOperationExpression	i ++	1534:40:39688:39690	733322	2	True				
ANR	733498	Identifier	i		733322	0					
ANR	733499	IncDec	++		733322	1					
ANR	733500	CompoundStatement		35:46:947:947	733322	3					
ANR	733501	ExpressionStatement	r . unimported [ * itr ] . Insert ( i )	1535:4:39700:39730	733322	0	True				
ANR	733502	CallExpression	r . unimported [ * itr ] . Insert ( i )		733322	0					
ANR	733503	Callee	r . unimported [ * itr ] . Insert		733322	0					
ANR	733504	MemberAccess	r . unimported [ * itr ] . Insert		733322	0					
ANR	733505	ArrayIndexing	r . unimported [ * itr ]		733322	0					
ANR	733506	MemberAccess	r . unimported		733322	0					
ANR	733507	Identifier	r		733322	0					
ANR	733508	Identifier	unimported		733322	1					
ANR	733509	UnaryOperationExpression	* itr		733322	1					
ANR	733510	UnaryOperator	*		733322	0					
ANR	733511	Identifier	itr		733322	1					
ANR	733512	Identifier	Insert		733322	1					
ANR	733513	ArgumentList	i		733322	1					
ANR	733514	Argument	i		733322	0					
ANR	733515	Identifier	i		733322	0					
ANR	733516	ElseStatement	else		733322	0					
ANR	733517	IfStatement	"if ( ! EvaluateAttr ( * itr , val ) || val . IsExceptional ( ) || val . IsClassAdValue ( ) || val . IsListValue ( ) )"		733322	0					
ANR	733518	Condition	"! EvaluateAttr ( * itr , val ) || val . IsExceptional ( ) || val . IsClassAdValue ( ) || val . IsListValue ( )"	1537:13:39750:39850	733322	0	True				
ANR	733519	OrExpression	"! EvaluateAttr ( * itr , val ) || val . IsExceptional ( ) || val . IsClassAdValue ( ) || val . IsListValue ( )"		733322	0		||			
ANR	733520	UnaryOperationExpression	"! EvaluateAttr ( * itr , val )"		733322	0					
ANR	733521	UnaryOperator	!		733322	0					
ANR	733522	CallExpression	"EvaluateAttr ( * itr , val )"		733322	1					
ANR	733523	Callee	EvaluateAttr		733322	0					
ANR	733524	Identifier	EvaluateAttr		733322	0					
ANR	733525	ArgumentList	* itr		733322	1					
ANR	733526	Argument	* itr		733322	0					
ANR	733527	UnaryOperationExpression	* itr		733322	0					
ANR	733528	UnaryOperator	*		733322	0					
ANR	733529	Identifier	itr		733322	1					
ANR	733530	Argument	val		733322	1					
ANR	733531	Identifier	val		733322	0					
ANR	733532	OrExpression	val . IsExceptional ( ) || val . IsClassAdValue ( ) || val . IsListValue ( )		733322	1		||			
ANR	733533	CallExpression	val . IsExceptional ( )		733322	0					
ANR	733534	Callee	val . IsExceptional		733322	0					
ANR	733535	MemberAccess	val . IsExceptional		733322	0					
ANR	733536	Identifier	val		733322	0					
ANR	733537	Identifier	IsExceptional		733322	1					
ANR	733538	ArgumentList			733322	1					
ANR	733539	OrExpression	val . IsClassAdValue ( ) || val . IsListValue ( )		733322	1		||			
ANR	733540	CallExpression	val . IsClassAdValue ( )		733322	0					
ANR	733541	Callee	val . IsClassAdValue		733322	0					
ANR	733542	MemberAccess	val . IsClassAdValue		733322	0					
ANR	733543	Identifier	val		733322	0					
ANR	733544	Identifier	IsClassAdValue		733322	1					
ANR	733545	ArgumentList			733322	1					
ANR	733546	CallExpression	val . IsListValue ( )		733322	1					
ANR	733547	Callee	val . IsListValue		733322	0					
ANR	733548	MemberAccess	val . IsListValue		733322	0					
ANR	733549	Identifier	val		733322	0					
ANR	733550	Identifier	IsListValue		733322	1					
ANR	733551	ArgumentList			733322	1					
ANR	733552	CompoundStatement		39:51:1107:1107	733322	1					
ANR	733553	ForStatement	for ( int i = oldRid + 1 ; i <= r . rId ; i ++ )		733322	0					
ANR	733554	ForInit	int i = oldRid + 1 ;	1540:8:39926:39943	733322	0	True				
ANR	733555	IdentifierDeclStatement	int i = oldRid + 1 ;		733322	0					
ANR	733556	IdentifierDecl	i = oldRid + 1		733322	0					
ANR	733557	IdentifierDeclType	int		733322	0					
ANR	733558	Identifier	i		733322	1					
ANR	733559	AssignmentExpression	i = oldRid + 1		733322	2		=			
ANR	733560	Identifier	i		733322	0					
ANR	733561	AdditiveExpression	oldRid + 1		733322	1		+			
ANR	733562	Identifier	oldRid		733322	0					
ANR	733563	PrimaryExpression	1		733322	1					
ANR	733564	Condition	i <= r . rId	1540:27:39945:39954	733322	1	True				
ANR	733565	RelationalExpression	i <= r . rId		733322	0		<=			
ANR	733566	Identifier	i		733322	0					
ANR	733567	MemberAccess	r . rId		733322	1					
ANR	733568	Identifier	r		733322	0					
ANR	733569	Identifier	rId		733322	1					
ANR	733570	PostIncDecOperationExpression	i ++	1540:40:39958:39960	733322	2	True				
ANR	733571	Identifier	i		733322	0					
ANR	733572	IncDec	++		733322	1					
ANR	733573	CompoundStatement		41:46:1217:1217	733322	3					
ANR	733574	ExpressionStatement	"r . AddDeviantImported ( * itr , i )"	1541:4:39970:40001	733322	0	True				
ANR	733575	CallExpression	"r . AddDeviantImported ( * itr , i )"		733322	0					
ANR	733576	Callee	r . AddDeviantImported		733322	0					
ANR	733577	MemberAccess	r . AddDeviantImported		733322	0					
ANR	733578	Identifier	r		733322	0					
ANR	733579	Identifier	AddDeviantImported		733322	1					
ANR	733580	ArgumentList	* itr		733322	1					
ANR	733581	Argument	* itr		733322	0					
ANR	733582	UnaryOperationExpression	* itr		733322	0					
ANR	733583	UnaryOperator	*		733322	0					
ANR	733584	Identifier	itr		733322	1					
ANR	733585	Argument	i		733322	1					
ANR	733586	Identifier	i		733322	0					
ANR	733587	ElseStatement	else		733322	0					
ANR	733588	CompoundStatement		44:9:1270:1270	733322	0					
ANR	733589	ForStatement	for ( int i = oldRid + 1 ; i <= r . rId ; i ++ )		733322	0					
ANR	733590	ForInit	int i = oldRid + 1 ;	1544:8:40027:40044	733322	0	True				
ANR	733591	IdentifierDeclStatement	int i = oldRid + 1 ;		733322	0					
ANR	733592	IdentifierDecl	i = oldRid + 1		733322	0					
ANR	733593	IdentifierDeclType	int		733322	0					
ANR	733594	Identifier	i		733322	1					
ANR	733595	AssignmentExpression	i = oldRid + 1		733322	2		=			
ANR	733596	Identifier	i		733322	0					
ANR	733597	AdditiveExpression	oldRid + 1		733322	1		+			
ANR	733598	Identifier	oldRid		733322	0					
ANR	733599	PrimaryExpression	1		733322	1					
ANR	733600	Condition	i <= r . rId	1544:27:40046:40055	733322	1	True				
ANR	733601	RelationalExpression	i <= r . rId		733322	0		<=			
ANR	733602	Identifier	i		733322	0					
ANR	733603	MemberAccess	r . rId		733322	1					
ANR	733604	Identifier	r		733322	0					
ANR	733605	Identifier	rId		733322	1					
ANR	733606	PostIncDecOperationExpression	i ++	1544:40:40059:40061	733322	2	True				
ANR	733607	Identifier	i		733322	0					
ANR	733608	IncDec	++		733322	1					
ANR	733609	CompoundStatement		45:46:1318:1318	733322	3					
ANR	733610	IfStatement	"if ( r . AddUpperBound ( * itr , val , false , false , i ) != Rectangles :: RECT_NO_ERROR || r . AddLowerBound ( * itr , val , false , false , i ) != Rectangles :: RECT_NO_ERROR )"		733322	0					
ANR	733611	Condition	"r . AddUpperBound ( * itr , val , false , false , i ) != Rectangles :: RECT_NO_ERROR || r . AddLowerBound ( * itr , val , false , false , i ) != Rectangles :: RECT_NO_ERROR"	1546:8:40133:40300	733322	0	True				
ANR	733612	OrExpression	"r . AddUpperBound ( * itr , val , false , false , i ) != Rectangles :: RECT_NO_ERROR || r . AddLowerBound ( * itr , val , false , false , i ) != Rectangles :: RECT_NO_ERROR"		733322	0		||			
ANR	733613	EqualityExpression	"r . AddUpperBound ( * itr , val , false , false , i ) != Rectangles :: RECT_NO_ERROR"		733322	0		!=			
ANR	733614	CallExpression	"r . AddUpperBound ( * itr , val , false , false , i )"		733322	0					
ANR	733615	Callee	r . AddUpperBound		733322	0					
ANR	733616	MemberAccess	r . AddUpperBound		733322	0					
ANR	733617	Identifier	r		733322	0					
ANR	733618	Identifier	AddUpperBound		733322	1					
ANR	733619	ArgumentList	* itr		733322	1					
ANR	733620	Argument	* itr		733322	0					
ANR	733621	UnaryOperationExpression	* itr		733322	0					
ANR	733622	UnaryOperator	*		733322	0					
ANR	733623	Identifier	itr		733322	1					
ANR	733624	Argument	val		733322	1					
ANR	733625	Identifier	val		733322	0					
ANR	733626	Argument	false		733322	2					
ANR	733627	Identifier	false		733322	0					
ANR	733628	Argument	false		733322	3					
ANR	733629	Identifier	false		733322	0					
ANR	733630	Argument	i		733322	4					
ANR	733631	Identifier	i		733322	0					
ANR	733632	Identifier	Rectangles :: RECT_NO_ERROR		733322	1					
ANR	733633	EqualityExpression	"r . AddLowerBound ( * itr , val , false , false , i ) != Rectangles :: RECT_NO_ERROR"		733322	1		!=			
ANR	733634	CallExpression	"r . AddLowerBound ( * itr , val , false , false , i )"		733322	0					
ANR	733635	Callee	r . AddLowerBound		733322	0					
ANR	733636	MemberAccess	r . AddLowerBound		733322	0					
ANR	733637	Identifier	r		733322	0					
ANR	733638	Identifier	AddLowerBound		733322	1					
ANR	733639	ArgumentList	* itr		733322	1					
ANR	733640	Argument	* itr		733322	0					
ANR	733641	UnaryOperationExpression	* itr		733322	0					
ANR	733642	UnaryOperator	*		733322	0					
ANR	733643	Identifier	itr		733322	1					
ANR	733644	Argument	val		733322	1					
ANR	733645	Identifier	val		733322	0					
ANR	733646	Argument	false		733322	2					
ANR	733647	Identifier	false		733322	0					
ANR	733648	Argument	false		733322	3					
ANR	733649	Identifier	false		733322	0					
ANR	733650	Argument	i		733322	4					
ANR	733651	Identifier	i		733322	0					
ANR	733652	Identifier	Rectangles :: RECT_NO_ERROR		733322	1					
ANR	733653	CompoundStatement		50:33:1557:1557	733322	1					
ANR	733654	ReturnStatement	return ( false ) ;	1550:5:40311:40326	733322	0	True				
ANR	733655	Identifier	false		733322	0					
ANR	733656	ReturnStatement	return ( true ) ;	1556:1:40348:40362	733322	9	True				
ANR	733657	Identifier	true		733322	0					
ANR	733658	ReturnType	bool		733322	1					
ANR	733659	Identifier	ClassAd :: AddRectangle		733322	2					
ANR	733660	ParameterList	"const ExprTree * tree , Rectangles & r , const string & allowed , const References & irefs"		733322	3					
ANR	733661	Parameter	const ExprTree * tree	1498:14:38660:38679	733322	0	True				
ANR	733662	ParameterType	const ExprTree *		733322	0					
ANR	733663	Identifier	tree		733322	1					
ANR	733664	Parameter	Rectangles & r	1498:36:38682:38694	733322	1	True				
ANR	733665	ParameterType	Rectangles &		733322	0					
ANR	733666	Identifier	r		733322	1					
ANR	733667	Parameter	const string & allowed	1498:51:38697:38717	733322	2	True				
ANR	733668	ParameterType	const string &		733322	0					
ANR	733669	Identifier	allowed		733322	1					
ANR	733670	Parameter	const References & irefs	1499:1:38721:38742	733322	3	True				
ANR	733671	ParameterType	const References &		733322	0					
ANR	733672	Identifier	irefs		733322	1					
ANR	733673	CFGEntryNode	ENTRY		733322		True				
ANR	733674	CFGExitNode	EXIT		733322		True				
ANR	733675	Symbol	_MakeRectangles		733322						
ANR	733676	Symbol	allowed		733322						
ANR	733677	Symbol	irefs . begin		733322						
ANR	733678	Symbol	r . unimported		733322						
ANR	733679	Symbol	EvaluateAttr		733322						
ANR	733680	Symbol	val . IsClassAdValue		733322						
ANR	733681	Symbol	val . IsExceptional		733322						
ANR	733682	Symbol	irefs		733322						
ANR	733683	Symbol	ftree		733322						
ANR	733684	Symbol	rval		733322						
ANR	733685	Symbol	LookupInScope		733322						
ANR	733686	Symbol	val . IsListValue		733322						
ANR	733687	Symbol	val		733322						
ANR	733688	Symbol	r . AddLowerBound		733322						
ANR	733689	Symbol	b		733322						
ANR	733690	Symbol	ad		733322						
ANR	733691	Symbol	NULL		733322						
ANR	733692	Symbol	itr		733322						
ANR	733693	Symbol	tree		733322						
ANR	733694	Symbol	Flatten		733322						
ANR	733695	Symbol	false		733322						
ANR	733696	Symbol	i		733322						
ANR	733697	Symbol	irefs . end		733322						
ANR	733698	Symbol	oldRid		733322						
ANR	733699	Symbol	r . AddUpperBound		733322						
ANR	733700	Symbol	Rectangles :: RECT_NO_ERROR		733322						
ANR	733701	Symbol	* itr		733322						
ANR	733702	Symbol	val . IsBooleanValue		733322						
ANR	733703	Symbol	r		733322						
ANR	733704	Symbol	r . rId		733322						
ANR	733705	Symbol	true		733322						
ANR	733706	Symbol	* * itr		733322						
ANR	733707	Symbol	* r		733322						
ANR	733708	Symbol	* r . unimported		733322						
ANR	733709	Function	ClassAd :: _MakeRectangles	1560:0:40368:44089							
ANR	733710	FunctionDef	"ClassAd :: _MakeRectangles (const ExprTree * tree , const string & allowed , Rectangles & r , bool ORmode)"		733709	0					
ANR	733711	CompoundStatement		1563:0:40476:44089	733709	0					
ANR	733712	IfStatement	if ( tree -> GetKind ( ) != OP_NODE )		733709	0					
ANR	733713	Condition	tree -> GetKind ( ) != OP_NODE	1564:8:40486:40512	733709	0	True				
ANR	733714	EqualityExpression	tree -> GetKind ( ) != OP_NODE		733709	0		!=			
ANR	733715	CallExpression	tree -> GetKind ( )		733709	0					
ANR	733716	Callee	tree -> GetKind		733709	0					
ANR	733717	PtrMemberAccess	tree -> GetKind		733709	0					
ANR	733718	Identifier	tree		733709	0					
ANR	733719	Identifier	GetKind		733709	1					
ANR	733720	ArgumentList			733709	1					
ANR	733721	Identifier	OP_NODE		733709	1					
ANR	733722	ReturnStatement	return ( false ) ;	1564:38:40516:40531	733709	1	True				
ANR	733723	Identifier	false		733709	0					
ANR	733724	IdentifierDeclStatement	Operation :: OpKind op ;	1566:4:40538:40558	733709	1	True				
ANR	733725	IdentifierDecl	op		733709	0					
ANR	733726	IdentifierDeclType	Operation :: OpKind		733709	0					
ANR	733727	Identifier	op		733709	1					
ANR	733728	IdentifierDeclStatement	"ExprTree * t1 , * t2 , * lit , * attr ;"	1567:4:40564:40597	733709	2	True				
ANR	733729	IdentifierDecl	* t1		733709	0					
ANR	733730	IdentifierDeclType	ExprTree *		733709	0					
ANR	733731	Identifier	t1		733709	1					
ANR	733732	IdentifierDecl	* t2		733709	1					
ANR	733733	IdentifierDeclType	ExprTree *		733709	0					
ANR	733734	Identifier	t2		733709	1					
ANR	733735	IdentifierDecl	* lit		733709	2					
ANR	733736	IdentifierDeclType	ExprTree *		733709	0					
ANR	733737	Identifier	lit		733709	1					
ANR	733738	IdentifierDecl	* attr		733709	3					
ANR	733739	IdentifierDeclType	ExprTree *		733709	0					
ANR	733740	Identifier	attr		733709	1					
ANR	733741	IdentifierDeclStatement	string attrName ;	1568:1:40600:40618	733709	3	True				
ANR	733742	IdentifierDecl	attrName		733709	0					
ANR	733743	IdentifierDeclType	string		733709	0					
ANR	733744	Identifier	attrName		733709	1					
ANR	733745	IdentifierDeclStatement	ExprTree * expr ;	1569:1:40621:40637	733709	4	True				
ANR	733746	IdentifierDecl	* expr		733709	0					
ANR	733747	IdentifierDeclType	ExprTree *		733709	0					
ANR	733748	Identifier	expr		733709	1					
ANR	733749	IdentifierDeclStatement	bool absolute ;	1570:1:40640:40656	733709	5	True				
ANR	733750	IdentifierDecl	absolute		733709	0					
ANR	733751	IdentifierDeclType	bool		733709	0					
ANR	733752	Identifier	absolute		733709	1					
ANR	733753	ExpressionStatement	"( ( Operation * ) tree ) -> GetComponents ( op , t1 , t2 , lit )"	1572:4:40663:40715	733709	6	True				
ANR	733754	CallExpression	"( ( Operation * ) tree ) -> GetComponents ( op , t1 , t2 , lit )"		733709	0					
ANR	733755	Callee	( ( Operation * ) tree ) -> GetComponents		733709	0					
ANR	733756	PtrMemberAccess	( ( Operation * ) tree ) -> GetComponents		733709	0					
ANR	733757	CastExpression	( Operation * ) tree		733709	0					
ANR	733758	CastTarget	Operation *		733709	0					
ANR	733759	Identifier	tree		733709	1					
ANR	733760	Identifier	GetComponents		733709	1					
ANR	733761	ArgumentList	op		733709	1					
ANR	733762	Argument	op		733709	0					
ANR	733763	Identifier	op		733709	0					
ANR	733764	Argument	t1		733709	1					
ANR	733765	Identifier	t1		733709	0					
ANR	733766	Argument	t2		733709	2					
ANR	733767	Identifier	t2		733709	0					
ANR	733768	Argument	lit		733709	3					
ANR	733769	Identifier	lit		733709	0					
ANR	733770	ExpressionStatement	lit = NULL	1573:1:40718:40728	733709	7	True				
ANR	733771	AssignmentExpression	lit = NULL		733709	0		=			
ANR	733772	Identifier	lit		733709	0					
ANR	733773	Identifier	NULL		733709	1					
ANR	733774	IfStatement	if ( op == Operation :: PARENTHESES_OP )		733709	8					
ANR	733775	Condition	op == Operation :: PARENTHESES_OP	1575:5:40736:40766	733709	0	True				
ANR	733776	EqualityExpression	op == Operation :: PARENTHESES_OP		733709	0		==			
ANR	733777	Identifier	op		733709	0					
ANR	733778	Identifier	Operation :: PARENTHESES_OP		733709	1					
ANR	733779	CompoundStatement		13:39:293:293	733709	1					
ANR	733780	ReturnStatement	"return ( _MakeRectangles ( t1 , allowed , r , ORmode ) ) ;"	1576:2:40774:40825	733709	0	True				
ANR	733781	CallExpression	"_MakeRectangles ( t1 , allowed , r , ORmode )"		733709	0					
ANR	733782	Callee	_MakeRectangles		733709	0					
ANR	733783	Identifier	_MakeRectangles		733709	0					
ANR	733784	ArgumentList	t1		733709	1					
ANR	733785	Argument	t1		733709	0					
ANR	733786	Identifier	t1		733709	0					
ANR	733787	Argument	allowed		733709	1					
ANR	733788	Identifier	allowed		733709	0					
ANR	733789	Argument	r		733709	2					
ANR	733790	Identifier	r		733709	0					
ANR	733791	Argument	ORmode		733709	3					
ANR	733792	Identifier	ORmode		733709	0					
ANR	733793	IfStatement	if ( ( op != Operation :: LOGICAL_AND_OP && op != Operation :: LOGICAL_OR_OP ) && ( op < Operation :: __COMPARISON_START__ || op > Operation :: __COMPARISON_END__ || op == Operation :: NOT_EQUAL_OP || op == Operation :: ISNT_OP ) )		733709	9					
ANR	733794	Condition	( op != Operation :: LOGICAL_AND_OP && op != Operation :: LOGICAL_OR_OP ) && ( op < Operation :: __COMPARISON_START__ || op > Operation :: __COMPARISON_END__ || op == Operation :: NOT_EQUAL_OP || op == Operation :: ISNT_OP )	1580:5:40887:41093	733709	0	True				
ANR	733795	AndExpression	( op != Operation :: LOGICAL_AND_OP && op != Operation :: LOGICAL_OR_OP ) && ( op < Operation :: __COMPARISON_START__ || op > Operation :: __COMPARISON_END__ || op == Operation :: NOT_EQUAL_OP || op == Operation :: ISNT_OP )		733709	0		&&			
ANR	733796	AndExpression	op != Operation :: LOGICAL_AND_OP && op != Operation :: LOGICAL_OR_OP		733709	0		&&			
ANR	733797	EqualityExpression	op != Operation :: LOGICAL_AND_OP		733709	0		!=			
ANR	733798	Identifier	op		733709	0					
ANR	733799	Identifier	Operation :: LOGICAL_AND_OP		733709	1					
ANR	733800	EqualityExpression	op != Operation :: LOGICAL_OR_OP		733709	1		!=			
ANR	733801	Identifier	op		733709	0					
ANR	733802	Identifier	Operation :: LOGICAL_OR_OP		733709	1					
ANR	733803	OrExpression	op < Operation :: __COMPARISON_START__ || op > Operation :: __COMPARISON_END__ || op == Operation :: NOT_EQUAL_OP || op == Operation :: ISNT_OP		733709	1		||			
ANR	733804	RelationalExpression	op < Operation :: __COMPARISON_START__		733709	0		<			
ANR	733805	Identifier	op		733709	0					
ANR	733806	Identifier	Operation :: __COMPARISON_START__		733709	1					
ANR	733807	OrExpression	op > Operation :: __COMPARISON_END__ || op == Operation :: NOT_EQUAL_OP || op == Operation :: ISNT_OP		733709	1		||			
ANR	733808	RelationalExpression	op > Operation :: __COMPARISON_END__		733709	0		>			
ANR	733809	Identifier	op		733709	0					
ANR	733810	Identifier	Operation :: __COMPARISON_END__		733709	1					
ANR	733811	OrExpression	op == Operation :: NOT_EQUAL_OP || op == Operation :: ISNT_OP		733709	1		||			
ANR	733812	EqualityExpression	op == Operation :: NOT_EQUAL_OP		733709	0		==			
ANR	733813	Identifier	op		733709	0					
ANR	733814	Identifier	Operation :: NOT_EQUAL_OP		733709	1					
ANR	733815	EqualityExpression	op == Operation :: ISNT_OP		733709	1		==			
ANR	733816	Identifier	op		733709	0					
ANR	733817	Identifier	Operation :: ISNT_OP		733709	1					
ANR	733818	CompoundStatement		20:65:620:620	733709	1					
ANR	733819	ReturnStatement	return ( false ) ;	1583:2:41101:41116	733709	0	True				
ANR	733820	Identifier	false		733709	0					
ANR	733821	IfStatement	if ( ORmode )		733709	10					
ANR	733822	Condition	ORmode	1586:5:41127:41132	733709	0	True				
ANR	733823	Identifier	ORmode		733709	0					
ANR	733824	CompoundStatement		24:14:659:659	733709	1					
ANR	733825	IfStatement	if ( op == Operation :: LOGICAL_OR_OP )		733709	0					
ANR	733826	Condition	op == Operation :: LOGICAL_OR_OP	1587:6:41144:41173	733709	0	True				
ANR	733827	EqualityExpression	op == Operation :: LOGICAL_OR_OP		733709	0		==			
ANR	733828	Identifier	op		733709	0					
ANR	733829	Identifier	Operation :: LOGICAL_OR_OP		733709	1					
ANR	733830	CompoundStatement		25:39:700:700	733709	1					
ANR	733831	ReturnStatement	"return ( _MakeRectangles ( t1 , allowed , r , ORmode ) && _MakeRectangles ( t2 , allowed , r , ORmode ) ) ;"	1589:3:41221:41322	733709	0	True				
ANR	733832	AndExpression	"_MakeRectangles ( t1 , allowed , r , ORmode ) && _MakeRectangles ( t2 , allowed , r , ORmode )"		733709	0		&&			
ANR	733833	CallExpression	"_MakeRectangles ( t1 , allowed , r , ORmode )"		733709	0					
ANR	733834	Callee	_MakeRectangles		733709	0					
ANR	733835	Identifier	_MakeRectangles		733709	0					
ANR	733836	ArgumentList	t1		733709	1					
ANR	733837	Argument	t1		733709	0					
ANR	733838	Identifier	t1		733709	0					
ANR	733839	Argument	allowed		733709	1					
ANR	733840	Identifier	allowed		733709	0					
ANR	733841	Argument	r		733709	2					
ANR	733842	Identifier	r		733709	0					
ANR	733843	Argument	ORmode		733709	3					
ANR	733844	Identifier	ORmode		733709	0					
ANR	733845	CallExpression	"_MakeRectangles ( t2 , allowed , r , ORmode )"		733709	1					
ANR	733846	Callee	_MakeRectangles		733709	0					
ANR	733847	Identifier	_MakeRectangles		733709	0					
ANR	733848	ArgumentList	t2		733709	1					
ANR	733849	Argument	t2		733709	0					
ANR	733850	Identifier	t2		733709	0					
ANR	733851	Argument	allowed		733709	1					
ANR	733852	Identifier	allowed		733709	0					
ANR	733853	Argument	r		733709	2					
ANR	733854	Identifier	r		733709	0					
ANR	733855	Argument	ORmode		733709	3					
ANR	733856	Identifier	ORmode		733709	0					
ANR	733857	ElseStatement	else		733709	0					
ANR	733858	CompoundStatement		29:9:856:856	733709	0					
ANR	733859	ExpressionStatement	ORmode = false	1593:3:41389:41403	733709	0	True				
ANR	733860	AssignmentExpression	ORmode = false		733709	0		=			
ANR	733861	Identifier	ORmode		733709	0					
ANR	733862	Identifier	false		733709	1					
ANR	733863	ExpressionStatement	r . NewRectangle ( )	1594:3:41408:41425	733709	1	True				
ANR	733864	CallExpression	r . NewRectangle ( )		733709	0					
ANR	733865	Callee	r . NewRectangle		733709	0					
ANR	733866	MemberAccess	r . NewRectangle		733709	0					
ANR	733867	Identifier	r		733709	0					
ANR	733868	Identifier	NewRectangle		733709	1					
ANR	733869	ArgumentList			733709	1					
ANR	733870	IfStatement	if ( op == Operation :: LOGICAL_AND_OP )		733709	11					
ANR	733871	Condition	op == Operation :: LOGICAL_AND_OP	1599:5:41494:41524	733709	0	True				
ANR	733872	EqualityExpression	op == Operation :: LOGICAL_AND_OP		733709	0		==			
ANR	733873	Identifier	op		733709	0					
ANR	733874	Identifier	Operation :: LOGICAL_AND_OP		733709	1					
ANR	733875	CompoundStatement		37:39:1051:1051	733709	1					
ANR	733876	ReturnStatement	"return ( _MakeRectangles ( t1 , allowed , r , ORmode ) && _MakeRectangles ( t2 , allowed , r , ORmode ) ) ;"	1600:2:41532:41632	733709	0	True				
ANR	733877	AndExpression	"_MakeRectangles ( t1 , allowed , r , ORmode ) && _MakeRectangles ( t2 , allowed , r , ORmode )"		733709	0		&&			
ANR	733878	CallExpression	"_MakeRectangles ( t1 , allowed , r , ORmode )"		733709	0					
ANR	733879	Callee	_MakeRectangles		733709	0					
ANR	733880	Identifier	_MakeRectangles		733709	0					
ANR	733881	ArgumentList	t1		733709	1					
ANR	733882	Argument	t1		733709	0					
ANR	733883	Identifier	t1		733709	0					
ANR	733884	Argument	allowed		733709	1					
ANR	733885	Identifier	allowed		733709	0					
ANR	733886	Argument	r		733709	2					
ANR	733887	Identifier	r		733709	0					
ANR	733888	Argument	ORmode		733709	3					
ANR	733889	Identifier	ORmode		733709	0					
ANR	733890	CallExpression	"_MakeRectangles ( t2 , allowed , r , ORmode )"		733709	1					
ANR	733891	Callee	_MakeRectangles		733709	0					
ANR	733892	Identifier	_MakeRectangles		733709	0					
ANR	733893	ArgumentList	t2		733709	1					
ANR	733894	Argument	t2		733709	0					
ANR	733895	Identifier	t2		733709	0					
ANR	733896	Argument	allowed		733709	1					
ANR	733897	Identifier	allowed		733709	0					
ANR	733898	Argument	r		733709	2					
ANR	733899	Identifier	r		733709	0					
ANR	733900	Argument	ORmode		733709	3					
ANR	733901	Identifier	ORmode		733709	0					
ANR	733902	ElseStatement	else		733709	0					
ANR	733903	IfStatement	if ( op == Operation :: LOGICAL_OR_OP )		733709	0					
ANR	733904	Condition	op == Operation :: LOGICAL_OR_OP	1602:12:41646:41675	733709	0	True				
ANR	733905	EqualityExpression	op == Operation :: LOGICAL_OR_OP		733709	0		==			
ANR	733906	Identifier	op		733709	0					
ANR	733907	Identifier	Operation :: LOGICAL_OR_OP		733709	1					
ANR	733908	CompoundStatement		40:45:1202:1202	733709	1					
ANR	733909	ExpressionStatement	"printf ( ""Error:  Found || when making rectangles in AND mode\\n"" )"	1604:2:41705:41770	733709	0	True				
ANR	733910	CallExpression	"printf ( ""Error:  Found || when making rectangles in AND mode\\n"" )"		733709	0					
ANR	733911	Callee	printf		733709	0					
ANR	733912	Identifier	printf		733709	0					
ANR	733913	ArgumentList	"""Error:  Found || when making rectangles in AND mode\\n"""		733709	1					
ANR	733914	Argument	"""Error:  Found || when making rectangles in AND mode\\n"""		733709	0					
ANR	733915	PrimaryExpression	"""Error:  Found || when making rectangles in AND mode\\n"""		733709	0					
ANR	733916	ReturnStatement	return ( false ) ;	1605:2:41774:41789	733709	1	True				
ANR	733917	Identifier	false		733709	0					
ANR	733918	IfStatement	if ( t1 -> GetKind ( ) == ExprTree :: ATTRREF_NODE && t2 -> GetKind ( ) == ExprTree :: LITERAL_NODE )		733709	12					
ANR	733919	Condition	t1 -> GetKind ( ) == ExprTree :: ATTRREF_NODE && t2 -> GetKind ( ) == ExprTree :: LITERAL_NODE	1608:5:41800:41883	733709	0	True				
ANR	733920	AndExpression	t1 -> GetKind ( ) == ExprTree :: ATTRREF_NODE && t2 -> GetKind ( ) == ExprTree :: LITERAL_NODE		733709	0		&&			
ANR	733921	EqualityExpression	t1 -> GetKind ( ) == ExprTree :: ATTRREF_NODE		733709	0		==			
ANR	733922	CallExpression	t1 -> GetKind ( )		733709	0					
ANR	733923	Callee	t1 -> GetKind		733709	0					
ANR	733924	PtrMemberAccess	t1 -> GetKind		733709	0					
ANR	733925	Identifier	t1		733709	0					
ANR	733926	Identifier	GetKind		733709	1					
ANR	733927	ArgumentList			733709	1					
ANR	733928	Identifier	ExprTree :: ATTRREF_NODE		733709	1					
ANR	733929	EqualityExpression	t2 -> GetKind ( ) == ExprTree :: LITERAL_NODE		733709	1		==			
ANR	733930	CallExpression	t2 -> GetKind ( )		733709	0					
ANR	733931	Callee	t2 -> GetKind		733709	0					
ANR	733932	PtrMemberAccess	t2 -> GetKind		733709	0					
ANR	733933	Identifier	t2		733709	0					
ANR	733934	Identifier	GetKind		733709	1					
ANR	733935	ArgumentList			733709	1					
ANR	733936	Identifier	ExprTree :: LITERAL_NODE		733709	1					
ANR	733937	CompoundStatement		47:44:1410:1410	733709	1					
ANR	733938	ExpressionStatement	attr = t1	1611:2:41910:41919	733709	0	True				
ANR	733939	AssignmentExpression	attr = t1		733709	0		=			
ANR	733940	Identifier	attr		733709	0					
ANR	733941	Identifier	t1		733709	1					
ANR	733942	ExpressionStatement	lit = t2	1612:2:41923:41932	733709	1	True				
ANR	733943	AssignmentExpression	lit = t2		733709	0		=			
ANR	733944	Identifier	lit		733709	0					
ANR	733945	Identifier	t2		733709	1					
ANR	733946	IfStatement	"if ( ! _CheckRef ( attr , allowed ) )"		733709	2					
ANR	733947	Condition	"! _CheckRef ( attr , allowed )"	1614:6:41995:42021	733709	0	True				
ANR	733948	UnaryOperationExpression	"! _CheckRef ( attr , allowed )"		733709	0					
ANR	733949	UnaryOperator	!		733709	0					
ANR	733950	CallExpression	"_CheckRef ( attr , allowed )"		733709	1					
ANR	733951	Callee	_CheckRef		733709	0					
ANR	733952	Identifier	_CheckRef		733709	0					
ANR	733953	ArgumentList	attr		733709	1					
ANR	733954	Argument	attr		733709	0					
ANR	733955	Identifier	attr		733709	0					
ANR	733956	Argument	allowed		733709	1					
ANR	733957	Identifier	allowed		733709	0					
ANR	733958	ReturnStatement	return ( true ) ;	1614:36:42025:42039	733709	1	True				
ANR	733959	Identifier	true		733709	0					
ANR	733960	ElseStatement	else		733709	0					
ANR	733961	IfStatement	if ( t2 -> GetKind ( ) == ExprTree :: ATTRREF_NODE && t1 -> GetKind ( ) == ExprTree :: LITERAL_NODE )		733709	0					
ANR	733962	Condition	t2 -> GetKind ( ) == ExprTree :: ATTRREF_NODE && t1 -> GetKind ( ) == ExprTree :: LITERAL_NODE	1615:11:42052:42133	733709	0	True				
ANR	733963	AndExpression	t2 -> GetKind ( ) == ExprTree :: ATTRREF_NODE && t1 -> GetKind ( ) == ExprTree :: LITERAL_NODE		733709	0		&&			
ANR	733964	EqualityExpression	t2 -> GetKind ( ) == ExprTree :: ATTRREF_NODE		733709	0		==			
ANR	733965	CallExpression	t2 -> GetKind ( )		733709	0					
ANR	733966	Callee	t2 -> GetKind		733709	0					
ANR	733967	PtrMemberAccess	t2 -> GetKind		733709	0					
ANR	733968	Identifier	t2		733709	0					
ANR	733969	Identifier	GetKind		733709	1					
ANR	733970	ArgumentList			733709	1					
ANR	733971	Identifier	ExprTree :: ATTRREF_NODE		733709	1					
ANR	733972	EqualityExpression	t1 -> GetKind ( ) == ExprTree :: LITERAL_NODE		733709	1		==			
ANR	733973	CallExpression	t1 -> GetKind ( )		733709	0					
ANR	733974	Callee	t1 -> GetKind		733709	0					
ANR	733975	PtrMemberAccess	t1 -> GetKind		733709	0					
ANR	733976	Identifier	t1		733709	0					
ANR	733977	Identifier	GetKind		733709	1					
ANR	733978	ArgumentList			733709	1					
ANR	733979	Identifier	ExprTree :: LITERAL_NODE		733709	1					
ANR	733980	CompoundStatement		54:41:1658:1658	733709	1					
ANR	733981	ExpressionStatement	attr = t2	1618:2:42158:42167	733709	0	True				
ANR	733982	AssignmentExpression	attr = t2		733709	0		=			
ANR	733983	Identifier	attr		733709	0					
ANR	733984	Identifier	t2		733709	1					
ANR	733985	ExpressionStatement	lit = t1	1619:2:42171:42180	733709	1	True				
ANR	733986	AssignmentExpression	lit = t1		733709	0		=			
ANR	733987	Identifier	lit		733709	0					
ANR	733988	Identifier	t1		733709	1					
ANR	733989	IfStatement	"if ( ! _CheckRef ( attr , allowed ) )"		733709	2					
ANR	733990	Condition	"! _CheckRef ( attr , allowed )"	1621:6:42243:42269	733709	0	True				
ANR	733991	UnaryOperationExpression	"! _CheckRef ( attr , allowed )"		733709	0					
ANR	733992	UnaryOperator	!		733709	0					
ANR	733993	CallExpression	"_CheckRef ( attr , allowed )"		733709	1					
ANR	733994	Callee	_CheckRef		733709	0					
ANR	733995	Identifier	_CheckRef		733709	0					
ANR	733996	ArgumentList	attr		733709	1					
ANR	733997	Argument	attr		733709	0					
ANR	733998	Identifier	attr		733709	0					
ANR	733999	Argument	allowed		733709	1					
ANR	734000	Identifier	allowed		733709	0					
ANR	734001	ReturnStatement	return ( true ) ;	1621:36:42273:42287	733709	1	True				
ANR	734002	Identifier	true		733709	0					
ANR	734003	SwitchStatement	switch ( op )		733709	3					
ANR	734004	Condition	op	1622:10:42299:42300	733709	0	True				
ANR	734005	Identifier	op		733709	0					
ANR	734006	CompoundStatement		60:15:1827:1827	733709	1					
ANR	734007	Label	case Operation :: LESS_THAN_OP :	1623:3:42309:42337	733709	0	True				
ANR	734008	Identifier	Operation :: LESS_THAN_OP		733709	0					
ANR	734009	ExpressionStatement	op = Operation :: GREATER_THAN_OP	1624:4:42344:42375	733709	1	True				
ANR	734010	AssignmentExpression	op = Operation :: GREATER_THAN_OP		733709	0		=			
ANR	734011	Identifier	op		733709	0					
ANR	734012	Identifier	Operation :: GREATER_THAN_OP		733709	1					
ANR	734013	BreakStatement	break ;	1625:4:42382:42387	733709	2	True				
ANR	734014	Label	case Operation :: GREATER_THAN_OP :	1626:3:42392:42423	733709	3	True				
ANR	734015	Identifier	Operation :: GREATER_THAN_OP		733709	0					
ANR	734016	ExpressionStatement	op = Operation :: LESS_THAN_OP	1627:4:42430:42458	733709	4	True				
ANR	734017	AssignmentExpression	op = Operation :: LESS_THAN_OP		733709	0		=			
ANR	734018	Identifier	op		733709	0					
ANR	734019	Identifier	Operation :: LESS_THAN_OP		733709	1					
ANR	734020	BreakStatement	break ;	1628:4:42465:42470	733709	5	True				
ANR	734021	Label	case Operation :: LESS_OR_EQUAL_OP :	1629:3:42475:42507	733709	6	True				
ANR	734022	Identifier	Operation :: LESS_OR_EQUAL_OP		733709	0					
ANR	734023	ExpressionStatement	op = Operation :: GREATER_OR_EQUAL_OP	1630:4:42514:42549	733709	7	True				
ANR	734024	AssignmentExpression	op = Operation :: GREATER_OR_EQUAL_OP		733709	0		=			
ANR	734025	Identifier	op		733709	0					
ANR	734026	Identifier	Operation :: GREATER_OR_EQUAL_OP		733709	1					
ANR	734027	BreakStatement	break ;	1631:4:42556:42561	733709	8	True				
ANR	734028	Label	case Operation :: GREATER_OR_EQUAL_OP :	1632:3:42566:42601	733709	9	True				
ANR	734029	Identifier	Operation :: GREATER_OR_EQUAL_OP		733709	0					
ANR	734030	ExpressionStatement	op = Operation :: LESS_OR_EQUAL_OP	1633:4:42608:42640	733709	10	True				
ANR	734031	AssignmentExpression	op = Operation :: LESS_OR_EQUAL_OP		733709	0		=			
ANR	734032	Identifier	op		733709	0					
ANR	734033	Identifier	Operation :: LESS_OR_EQUAL_OP		733709	1					
ANR	734034	BreakStatement	break ;	1634:4:42647:42652	733709	11	True				
ANR	734035	Label	default :	1635:3:42657:42664	733709	12	True				
ANR	734036	Identifier	default		733709	0					
ANR	734037	BreakStatement	break ;	1636:4:42670:42675	733709	13	True				
ANR	734038	ElseStatement	else		733709	0					
ANR	734039	CompoundStatement		76:8:2212:2212	733709	0					
ANR	734040	ExpressionStatement	r . AddDeviantExported ( )	1640:2:42732:42755	733709	0	True				
ANR	734041	CallExpression	r . AddDeviantExported ( )		733709	0					
ANR	734042	Callee	r . AddDeviantExported		733709	0					
ANR	734043	MemberAccess	r . AddDeviantExported		733709	0					
ANR	734044	Identifier	r		733709	0					
ANR	734045	Identifier	AddDeviantExported		733709	1					
ANR	734046	ArgumentList			733709	1					
ANR	734047	ReturnStatement	return ( true ) ;	1641:2:42759:42773	733709	1	True				
ANR	734048	Identifier	true		733709	0					
ANR	734049	IdentifierDeclStatement	Value val ;	1645:1:42821:42830	733709	13	True				
ANR	734050	IdentifierDecl	val		733709	0					
ANR	734051	IdentifierDeclType	Value		733709	0					
ANR	734052	Identifier	val		733709	1					
ANR	734053	ExpressionStatement	( ( Literal * ) lit ) -> GetValue ( val )	1646:1:42833:42865	733709	14	True				
ANR	734054	CallExpression	( ( Literal * ) lit ) -> GetValue ( val )		733709	0					
ANR	734055	Callee	( ( Literal * ) lit ) -> GetValue		733709	0					
ANR	734056	PtrMemberAccess	( ( Literal * ) lit ) -> GetValue		733709	0					
ANR	734057	CastExpression	( Literal * ) lit		733709	0					
ANR	734058	CastTarget	Literal *		733709	0					
ANR	734059	Identifier	lit		733709	1					
ANR	734060	Identifier	GetValue		733709	1					
ANR	734061	ArgumentList	val		733709	1					
ANR	734062	Argument	val		733709	0					
ANR	734063	Identifier	val		733709	0					
ANR	734064	IfStatement	if ( val . IsExceptional ( ) || val . IsClassAdValue ( ) || val . IsListValue ( ) )		733709	15					
ANR	734065	Condition	val . IsExceptional ( ) || val . IsClassAdValue ( ) || val . IsListValue ( )	1647:5:42872:42938	733709	0	True				
ANR	734066	OrExpression	val . IsExceptional ( ) || val . IsClassAdValue ( ) || val . IsListValue ( )		733709	0		||			
ANR	734067	CallExpression	val . IsExceptional ( )		733709	0					
ANR	734068	Callee	val . IsExceptional		733709	0					
ANR	734069	MemberAccess	val . IsExceptional		733709	0					
ANR	734070	Identifier	val		733709	0					
ANR	734071	Identifier	IsExceptional		733709	1					
ANR	734072	ArgumentList			733709	1					
ANR	734073	OrExpression	val . IsClassAdValue ( ) || val . IsListValue ( )		733709	1		||			
ANR	734074	CallExpression	val . IsClassAdValue ( )		733709	0					
ANR	734075	Callee	val . IsClassAdValue		733709	0					
ANR	734076	MemberAccess	val . IsClassAdValue		733709	0					
ANR	734077	Identifier	val		733709	0					
ANR	734078	Identifier	IsClassAdValue		733709	1					
ANR	734079	ArgumentList			733709	1					
ANR	734080	CallExpression	val . IsListValue ( )		733709	1					
ANR	734081	Callee	val . IsListValue		733709	0					
ANR	734082	MemberAccess	val . IsListValue		733709	0					
ANR	734083	Identifier	val		733709	0					
ANR	734084	Identifier	IsListValue		733709	1					
ANR	734085	ArgumentList			733709	1					
ANR	734086	CompoundStatement		85:75:2465:2465	733709	1					
ANR	734087	ReturnStatement	return ( false ) ;	1648:2:42946:42961	733709	0	True				
ANR	734088	Identifier	false		733709	0					
ANR	734089	ExpressionStatement	"( ( AttributeReference * ) attr ) -> GetComponents ( expr , attrName , absolute )"	1652:1:43022:43092	733709	16	True				
ANR	734090	CallExpression	"( ( AttributeReference * ) attr ) -> GetComponents ( expr , attrName , absolute )"		733709	0					
ANR	734091	Callee	( ( AttributeReference * ) attr ) -> GetComponents		733709	0					
ANR	734092	PtrMemberAccess	( ( AttributeReference * ) attr ) -> GetComponents		733709	0					
ANR	734093	CastExpression	( AttributeReference * ) attr		733709	0					
ANR	734094	CastTarget	AttributeReference *		733709	0					
ANR	734095	Identifier	attr		733709	1					
ANR	734096	Identifier	GetComponents		733709	1					
ANR	734097	ArgumentList	expr		733709	1					
ANR	734098	Argument	expr		733709	0					
ANR	734099	Identifier	expr		733709	0					
ANR	734100	Argument	attrName		733709	1					
ANR	734101	Identifier	attrName		733709	0					
ANR	734102	Argument	absolute		733709	2					
ANR	734103	Identifier	absolute		733709	0					
ANR	734104	SwitchStatement	switch ( op )		733709	17					
ANR	734105	Condition	op	1655:12:43177:43178	733709	0	True				
ANR	734106	Identifier	op		733709	0					
ANR	734107	CompoundStatement		93:17:2705:2705	733709	1					
ANR	734108	Label	case Operation :: LESS_THAN_OP :	1656:8:43192:43220	733709	0	True				
ANR	734109	Identifier	Operation :: LESS_THAN_OP		733709	0					
ANR	734110	ReturnStatement	"return ( r . AddUpperBound ( attrName , val , true , true ) == Rectangles :: RECT_NO_ERROR ) ;"	1657:3:43225:43312	733709	1	True				
ANR	734111	EqualityExpression	"r . AddUpperBound ( attrName , val , true , true ) == Rectangles :: RECT_NO_ERROR"		733709	0		==			
ANR	734112	CallExpression	"r . AddUpperBound ( attrName , val , true , true )"		733709	0					
ANR	734113	Callee	r . AddUpperBound		733709	0					
ANR	734114	MemberAccess	r . AddUpperBound		733709	0					
ANR	734115	Identifier	r		733709	0					
ANR	734116	Identifier	AddUpperBound		733709	1					
ANR	734117	ArgumentList	attrName		733709	1					
ANR	734118	Argument	attrName		733709	0					
ANR	734119	Identifier	attrName		733709	0					
ANR	734120	Argument	val		733709	1					
ANR	734121	Identifier	val		733709	0					
ANR	734122	Argument	true		733709	2					
ANR	734123	Identifier	true		733709	0					
ANR	734124	Argument	true		733709	3					
ANR	734125	Identifier	true		733709	0					
ANR	734126	Identifier	Rectangles :: RECT_NO_ERROR		733709	1					
ANR	734127	Label	case Operation :: LESS_OR_EQUAL_OP :	1660:8:43331:43363	733709	2	True				
ANR	734128	Identifier	Operation :: LESS_OR_EQUAL_OP		733709	0					
ANR	734129	ReturnStatement	"return ( r . AddUpperBound ( attrName , val , false , true ) == Rectangles :: RECT_NO_ERROR ) ;"	1661:3:43368:43456	733709	3	True				
ANR	734130	EqualityExpression	"r . AddUpperBound ( attrName , val , false , true ) == Rectangles :: RECT_NO_ERROR"		733709	0		==			
ANR	734131	CallExpression	"r . AddUpperBound ( attrName , val , false , true )"		733709	0					
ANR	734132	Callee	r . AddUpperBound		733709	0					
ANR	734133	MemberAccess	r . AddUpperBound		733709	0					
ANR	734134	Identifier	r		733709	0					
ANR	734135	Identifier	AddUpperBound		733709	1					
ANR	734136	ArgumentList	attrName		733709	1					
ANR	734137	Argument	attrName		733709	0					
ANR	734138	Identifier	attrName		733709	0					
ANR	734139	Argument	val		733709	1					
ANR	734140	Identifier	val		733709	0					
ANR	734141	Argument	false		733709	2					
ANR	734142	Identifier	false		733709	0					
ANR	734143	Argument	true		733709	3					
ANR	734144	Identifier	true		733709	0					
ANR	734145	Identifier	Rectangles :: RECT_NO_ERROR		733709	1					
ANR	734146	Label	case Operation :: EQUAL_OP :	1664:8:43475:43499	733709	4	True				
ANR	734147	Identifier	Operation :: EQUAL_OP		733709	0					
ANR	734148	Label	case Operation :: IS_OP :	1665:8:43509:43530	733709	5	True				
ANR	734149	Identifier	Operation :: IS_OP		733709	0					
ANR	734150	ReturnStatement	"return ( r . AddUpperBound ( attrName , val , false , true ) == Rectangles :: RECT_NO_ERROR && r . AddLowerBound ( attrName , val , false , true ) == Rectangles :: RECT_NO_ERROR ) ;"	1666:3:43535:43721	733709	6	True				
ANR	734151	AndExpression	"r . AddUpperBound ( attrName , val , false , true ) == Rectangles :: RECT_NO_ERROR && r . AddLowerBound ( attrName , val , false , true ) == Rectangles :: RECT_NO_ERROR"		733709	0		&&			
ANR	734152	EqualityExpression	"r . AddUpperBound ( attrName , val , false , true ) == Rectangles :: RECT_NO_ERROR"		733709	0		==			
ANR	734153	CallExpression	"r . AddUpperBound ( attrName , val , false , true )"		733709	0					
ANR	734154	Callee	r . AddUpperBound		733709	0					
ANR	734155	MemberAccess	r . AddUpperBound		733709	0					
ANR	734156	Identifier	r		733709	0					
ANR	734157	Identifier	AddUpperBound		733709	1					
ANR	734158	ArgumentList	attrName		733709	1					
ANR	734159	Argument	attrName		733709	0					
ANR	734160	Identifier	attrName		733709	0					
ANR	734161	Argument	val		733709	1					
ANR	734162	Identifier	val		733709	0					
ANR	734163	Argument	false		733709	2					
ANR	734164	Identifier	false		733709	0					
ANR	734165	Argument	true		733709	3					
ANR	734166	Identifier	true		733709	0					
ANR	734167	Identifier	Rectangles :: RECT_NO_ERROR		733709	1					
ANR	734168	EqualityExpression	"r . AddLowerBound ( attrName , val , false , true ) == Rectangles :: RECT_NO_ERROR"		733709	1		==			
ANR	734169	CallExpression	"r . AddLowerBound ( attrName , val , false , true )"		733709	0					
ANR	734170	Callee	r . AddLowerBound		733709	0					
ANR	734171	MemberAccess	r . AddLowerBound		733709	0					
ANR	734172	Identifier	r		733709	0					
ANR	734173	Identifier	AddLowerBound		733709	1					
ANR	734174	ArgumentList	attrName		733709	1					
ANR	734175	Argument	attrName		733709	0					
ANR	734176	Identifier	attrName		733709	0					
ANR	734177	Argument	val		733709	1					
ANR	734178	Identifier	val		733709	0					
ANR	734179	Argument	false		733709	2					
ANR	734180	Identifier	false		733709	0					
ANR	734181	Argument	true		733709	3					
ANR	734182	Identifier	true		733709	0					
ANR	734183	Identifier	Rectangles :: RECT_NO_ERROR		733709	1					
ANR	734184	Label	case Operation :: GREATER_THAN_OP :	1671:2:43734:43765	733709	7	True				
ANR	734185	Identifier	Operation :: GREATER_THAN_OP		733709	0					
ANR	734186	ReturnStatement	"return ( r . AddLowerBound ( attrName , val , true , true ) == Rectangles :: RECT_NO_ERROR ) ;"	1672:3:43770:43857	733709	8	True				
ANR	734187	EqualityExpression	"r . AddLowerBound ( attrName , val , true , true ) == Rectangles :: RECT_NO_ERROR"		733709	0		==			
ANR	734188	CallExpression	"r . AddLowerBound ( attrName , val , true , true )"		733709	0					
ANR	734189	Callee	r . AddLowerBound		733709	0					
ANR	734190	MemberAccess	r . AddLowerBound		733709	0					
ANR	734191	Identifier	r		733709	0					
ANR	734192	Identifier	AddLowerBound		733709	1					
ANR	734193	ArgumentList	attrName		733709	1					
ANR	734194	Argument	attrName		733709	0					
ANR	734195	Identifier	attrName		733709	0					
ANR	734196	Argument	val		733709	1					
ANR	734197	Identifier	val		733709	0					
ANR	734198	Argument	true		733709	2					
ANR	734199	Identifier	true		733709	0					
ANR	734200	Argument	true		733709	3					
ANR	734201	Identifier	true		733709	0					
ANR	734202	Identifier	Rectangles :: RECT_NO_ERROR		733709	1					
ANR	734203	Label	case Operation :: GREATER_OR_EQUAL_OP :	1675:8:43876:43911	733709	9	True				
ANR	734204	Identifier	Operation :: GREATER_OR_EQUAL_OP		733709	0					
ANR	734205	ReturnStatement	"return ( r . AddLowerBound ( attrName , val , false , true ) == Rectangles :: RECT_NO_ERROR ) ;"	1676:3:43916:44004	733709	10	True				
ANR	734206	EqualityExpression	"r . AddLowerBound ( attrName , val , false , true ) == Rectangles :: RECT_NO_ERROR"		733709	0		==			
ANR	734207	CallExpression	"r . AddLowerBound ( attrName , val , false , true )"		733709	0					
ANR	734208	Callee	r . AddLowerBound		733709	0					
ANR	734209	MemberAccess	r . AddLowerBound		733709	0					
ANR	734210	Identifier	r		733709	0					
ANR	734211	Identifier	AddLowerBound		733709	1					
ANR	734212	ArgumentList	attrName		733709	1					
ANR	734213	Argument	attrName		733709	0					
ANR	734214	Identifier	attrName		733709	0					
ANR	734215	Argument	val		733709	1					
ANR	734216	Identifier	val		733709	0					
ANR	734217	Argument	false		733709	2					
ANR	734218	Identifier	false		733709	0					
ANR	734219	Argument	true		733709	3					
ANR	734220	Identifier	true		733709	0					
ANR	734221	Identifier	Rectangles :: RECT_NO_ERROR		733709	1					
ANR	734222	Label	default :	1679:8:44023:44030	733709	11	True				
ANR	734223	Identifier	default		733709	0					
ANR	734224	ReturnStatement	return ( false ) ;	1680:12:44044:44059	733709	12	True				
ANR	734225	Identifier	false		733709	0					
ANR	734226	ReturnStatement	return ( false ) ;	1683:4:44072:44087	733709	18	True				
ANR	734227	Identifier	false		733709	0					
ANR	734228	ReturnType	bool		733709	1					
ANR	734229	Identifier	ClassAd :: _MakeRectangles		733709	2					
ANR	734230	ParameterList	"const ExprTree * tree , const string & allowed , Rectangles & r , bool ORmode"		733709	3					
ANR	734231	Parameter	const ExprTree * tree	1561:17:40400:40419	733709	0	True				
ANR	734232	ParameterType	const ExprTree *		733709	0					
ANR	734233	Identifier	tree		733709	1					
ANR	734234	Parameter	const string & allowed	1561:39:40422:40442	733709	1	True				
ANR	734235	ParameterType	const string &		733709	0					
ANR	734236	Identifier	allowed		733709	1					
ANR	734237	Parameter	Rectangles & r	1561:62:40445:40457	733709	2	True				
ANR	734238	ParameterType	Rectangles &		733709	0					
ANR	734239	Identifier	r		733709	1					
ANR	734240	Parameter	bool ORmode	1562:1:40462:40472	733709	3	True				
ANR	734241	ParameterType	bool		733709	0					
ANR	734242	Identifier	ORmode		733709	1					
ANR	734243	CFGEntryNode	ENTRY		733709		True				
ANR	734244	CFGExitNode	EXIT		733709		True				
ANR	734245	Symbol	ORmode		733709						
ANR	734246	Symbol	_MakeRectangles		733709						
ANR	734247	Symbol	allowed		733709						
ANR	734248	Symbol	ExprTree :: ATTRREF_NODE		733709						
ANR	734249	Symbol	ExprTree :: LITERAL_NODE		733709						
ANR	734250	Symbol	Operation :: LOGICAL_AND_OP		733709						
ANR	734251	Symbol	Operation :: NOT_EQUAL_OP		733709						
ANR	734252	Symbol	OP_NODE		733709						
ANR	734253	Symbol	val . IsClassAdValue		733709						
ANR	734254	Symbol	val . IsExceptional		733709						
ANR	734255	Symbol	tree -> GetKind		733709						
ANR	734256	Symbol	lit		733709						
ANR	734257	Symbol	expr		733709						
ANR	734258	Symbol	attr		733709						
ANR	734259	Symbol	val . IsListValue		733709						
ANR	734260	Symbol	attrName		733709						
ANR	734261	Symbol	t2 -> GetKind		733709						
ANR	734262	Symbol	* t1		733709						
ANR	734263	Symbol	val		733709						
ANR	734264	Symbol	op		733709						
ANR	734265	Symbol	r . AddLowerBound		733709						
ANR	734266	Symbol	NULL		733709						
ANR	734267	Symbol	Operation :: __COMPARISON_START__		733709						
ANR	734268	Symbol	Operation :: LESS_THAN_OP		733709						
ANR	734269	Symbol	* t2		733709						
ANR	734270	Symbol	Operation :: GREATER_THAN_OP		733709						
ANR	734271	Symbol	tree		733709						
ANR	734272	Symbol	false		733709						
ANR	734273	Symbol	Operation :: LOGICAL_OR_OP		733709						
ANR	734274	Symbol	r . AddUpperBound		733709						
ANR	734275	Symbol	Rectangles :: RECT_NO_ERROR		733709						
ANR	734276	Symbol	t1 -> GetKind		733709						
ANR	734277	Symbol	* tree		733709						
ANR	734278	Symbol	Operation :: ISNT_OP		733709						
ANR	734279	Symbol	_CheckRef		733709						
ANR	734280	Symbol	Operation :: LESS_OR_EQUAL_OP		733709						
ANR	734281	Symbol	r		733709						
ANR	734282	Symbol	Operation :: PARENTHESES_OP		733709						
ANR	734283	Symbol	absolute		733709						
ANR	734284	Symbol	true		733709						
ANR	734285	Symbol	Operation :: GREATER_OR_EQUAL_OP		733709						
ANR	734286	Symbol	t1		733709						
ANR	734287	Symbol	t2		733709						
ANR	734288	Symbol	Operation :: __COMPARISON_END__		733709						
ANR	734289	Function	ClassAd :: _CheckRef	1686:0:44092:44662							
ANR	734290	FunctionDef	"ClassAd :: _CheckRef (ExprTree * tree , const string & allowed)"		734289	0					
ANR	734291	CompoundStatement		1688:0:44158:44662	734289	0					
ANR	734292	IdentifierDeclStatement	"ExprTree * expr , * exprSub ;"	1689:1:44161:44186	734289	0	True				
ANR	734293	IdentifierDecl	* expr		734289	0					
ANR	734294	IdentifierDeclType	ExprTree *		734289	0					
ANR	734295	Identifier	expr		734289	1					
ANR	734296	IdentifierDecl	* exprSub		734289	1					
ANR	734297	IdentifierDeclType	ExprTree *		734289	0					
ANR	734298	Identifier	exprSub		734289	1					
ANR	734299	IdentifierDeclStatement	"string attrName , attrNameSub ;"	1690:1:44189:44218	734289	1	True				
ANR	734300	IdentifierDecl	attrName		734289	0					
ANR	734301	IdentifierDeclType	string		734289	0					
ANR	734302	Identifier	attrName		734289	1					
ANR	734303	IdentifierDecl	attrNameSub		734289	1					
ANR	734304	IdentifierDeclType	string		734289	0					
ANR	734305	Identifier	attrNameSub		734289	1					
ANR	734306	IdentifierDeclStatement	bool absolute ;	1691:1:44221:44235	734289	2	True				
ANR	734307	IdentifierDecl	absolute		734289	0					
ANR	734308	IdentifierDeclType	bool		734289	0					
ANR	734309	Identifier	absolute		734289	1					
ANR	734310	IfStatement	if ( ! tree -> GetKind ( ) == ATTRREF_NODE )		734289	3					
ANR	734311	Condition	! tree -> GetKind ( ) == ATTRREF_NODE	1693:5:44243:44274	734289	0	True				
ANR	734312	EqualityExpression	! tree -> GetKind ( ) == ATTRREF_NODE		734289	0		==			
ANR	734313	UnaryOperationExpression	! tree -> GetKind ( )		734289	0					
ANR	734314	UnaryOperator	!		734289	0					
ANR	734315	CallExpression	tree -> GetKind ( )		734289	1					
ANR	734316	Callee	tree -> GetKind		734289	0					
ANR	734317	PtrMemberAccess	tree -> GetKind		734289	0					
ANR	734318	Identifier	tree		734289	0					
ANR	734319	Identifier	GetKind		734289	1					
ANR	734320	ArgumentList			734289	1					
ANR	734321	Identifier	ATTRREF_NODE		734289	1					
ANR	734322	ReturnStatement	return ( false ) ;	1693:40:44278:44293	734289	1	True				
ANR	734323	Identifier	false		734289	0					
ANR	734324	ExpressionStatement	"( ( AttributeReference * ) tree ) -> GetComponents ( expr , attrName , absolute )"	1694:1:44296:44366	734289	4	True				
ANR	734325	CallExpression	"( ( AttributeReference * ) tree ) -> GetComponents ( expr , attrName , absolute )"		734289	0					
ANR	734326	Callee	( ( AttributeReference * ) tree ) -> GetComponents		734289	0					
ANR	734327	PtrMemberAccess	( ( AttributeReference * ) tree ) -> GetComponents		734289	0					
ANR	734328	CastExpression	( AttributeReference * ) tree		734289	0					
ANR	734329	CastTarget	AttributeReference *		734289	0					
ANR	734330	Identifier	tree		734289	1					
ANR	734331	Identifier	GetComponents		734289	1					
ANR	734332	ArgumentList	expr		734289	1					
ANR	734333	Argument	expr		734289	0					
ANR	734334	Identifier	expr		734289	0					
ANR	734335	Argument	attrName		734289	1					
ANR	734336	Identifier	attrName		734289	0					
ANR	734337	Argument	absolute		734289	2					
ANR	734338	Identifier	absolute		734289	0					
ANR	734339	IfStatement	if ( absolute || ! expr || expr -> GetKind ( ) != ATTRREF_NODE )		734289	5					
ANR	734340	Condition	absolute || ! expr || expr -> GetKind ( ) != ATTRREF_NODE	1695:5:44373:44424	734289	0	True				
ANR	734341	OrExpression	absolute || ! expr || expr -> GetKind ( ) != ATTRREF_NODE		734289	0		||			
ANR	734342	Identifier	absolute		734289	0					
ANR	734343	OrExpression	! expr || expr -> GetKind ( ) != ATTRREF_NODE		734289	1		||			
ANR	734344	UnaryOperationExpression	! expr		734289	0					
ANR	734345	UnaryOperator	!		734289	0					
ANR	734346	Identifier	expr		734289	1					
ANR	734347	EqualityExpression	expr -> GetKind ( ) != ATTRREF_NODE		734289	1		!=			
ANR	734348	CallExpression	expr -> GetKind ( )		734289	0					
ANR	734349	Callee	expr -> GetKind		734289	0					
ANR	734350	PtrMemberAccess	expr -> GetKind		734289	0					
ANR	734351	Identifier	expr		734289	0					
ANR	734352	Identifier	GetKind		734289	1					
ANR	734353	ArgumentList			734289	1					
ANR	734354	Identifier	ATTRREF_NODE		734289	1					
ANR	734355	ReturnStatement	return ( false ) ;	1695:60:44428:44443	734289	1	True				
ANR	734356	Identifier	false		734289	0					
ANR	734357	ExpressionStatement	"( ( AttributeReference * ) expr ) -> GetComponents ( exprSub , attrNameSub , absolute )"	1696:1:44446:44520	734289	6	True				
ANR	734358	CallExpression	"( ( AttributeReference * ) expr ) -> GetComponents ( exprSub , attrNameSub , absolute )"		734289	0					
ANR	734359	Callee	( ( AttributeReference * ) expr ) -> GetComponents		734289	0					
ANR	734360	PtrMemberAccess	( ( AttributeReference * ) expr ) -> GetComponents		734289	0					
ANR	734361	CastExpression	( AttributeReference * ) expr		734289	0					
ANR	734362	CastTarget	AttributeReference *		734289	0					
ANR	734363	Identifier	expr		734289	1					
ANR	734364	Identifier	GetComponents		734289	1					
ANR	734365	ArgumentList	exprSub		734289	1					
ANR	734366	Argument	exprSub		734289	0					
ANR	734367	Identifier	exprSub		734289	0					
ANR	734368	Argument	attrNameSub		734289	1					
ANR	734369	Identifier	attrNameSub		734289	0					
ANR	734370	Argument	absolute		734289	2					
ANR	734371	Identifier	absolute		734289	0					
ANR	734372	IfStatement	if ( exprSub || absolute )		734289	7					
ANR	734373	Condition	exprSub || absolute	1697:5:44527:44545	734289	0	True				
ANR	734374	OrExpression	exprSub || absolute		734289	0		||			
ANR	734375	Identifier	exprSub		734289	0					
ANR	734376	Identifier	absolute		734289	1					
ANR	734377	ReturnStatement	return ( false ) ;	1697:27:44549:44564	734289	1	True				
ANR	734378	Identifier	false		734289	0					
ANR	734379	IfStatement	"if ( strcasecmp ( attrNameSub . c_str ( ) , allowed . c_str ( ) ) != 0 )"		734289	8					
ANR	734380	Condition	"strcasecmp ( attrNameSub . c_str ( ) , allowed . c_str ( ) ) != 0"	1698:5:44571:44623	734289	0	True				
ANR	734381	EqualityExpression	"strcasecmp ( attrNameSub . c_str ( ) , allowed . c_str ( ) ) != 0"		734289	0		!=			
ANR	734382	CallExpression	"strcasecmp ( attrNameSub . c_str ( ) , allowed . c_str ( ) )"		734289	0					
ANR	734383	Callee	strcasecmp		734289	0					
ANR	734384	Identifier	strcasecmp		734289	0					
ANR	734385	ArgumentList	attrNameSub . c_str ( )		734289	1					
ANR	734386	Argument	attrNameSub . c_str ( )		734289	0					
ANR	734387	CallExpression	attrNameSub . c_str ( )		734289	0					
ANR	734388	Callee	attrNameSub . c_str		734289	0					
ANR	734389	MemberAccess	attrNameSub . c_str		734289	0					
ANR	734390	Identifier	attrNameSub		734289	0					
ANR	734391	Identifier	c_str		734289	1					
ANR	734392	ArgumentList			734289	1					
ANR	734393	Argument	allowed . c_str ( )		734289	1					
ANR	734394	CallExpression	allowed . c_str ( )		734289	0					
ANR	734395	Callee	allowed . c_str		734289	0					
ANR	734396	MemberAccess	allowed . c_str		734289	0					
ANR	734397	Identifier	allowed		734289	0					
ANR	734398	Identifier	c_str		734289	1					
ANR	734399	ArgumentList			734289	1					
ANR	734400	PrimaryExpression	0		734289	1					
ANR	734401	ReturnStatement	return ( false ) ;	1698:61:44627:44642	734289	1	True				
ANR	734402	Identifier	false		734289	0					
ANR	734403	ReturnStatement	return ( true ) ;	1700:1:44646:44660	734289	9	True				
ANR	734404	Identifier	true		734289	0					
ANR	734405	ReturnType	bool		734289	1					
ANR	734406	Identifier	ClassAd :: _CheckRef		734289	2					
ANR	734407	ParameterList	"ExprTree * tree , const string & allowed"		734289	3					
ANR	734408	Parameter	ExprTree * tree	1687:11:44118:44131	734289	0	True				
ANR	734409	ParameterType	ExprTree *		734289	0					
ANR	734410	Identifier	tree		734289	1					
ANR	734411	Parameter	const string & allowed	1687:27:44134:44154	734289	1	True				
ANR	734412	ParameterType	const string &		734289	0					
ANR	734413	Identifier	allowed		734289	1					
ANR	734414	CFGEntryNode	ENTRY		734289		True				
ANR	734415	CFGExitNode	EXIT		734289		True				
ANR	734416	Symbol	expr -> GetKind		734289						
ANR	734417	Symbol	attrNameSub . c_str		734289						
ANR	734418	Symbol	allowed		734289						
ANR	734419	Symbol	tree		734289						
ANR	734420	Symbol	false		734289						
ANR	734421	Symbol	allowed . c_str		734289						
ANR	734422	Symbol	* tree		734289						
ANR	734423	Symbol	exprSub		734289						
ANR	734424	Symbol	tree -> GetKind		734289						
ANR	734425	Symbol	ATTRREF_NODE		734289						
ANR	734426	Symbol	* expr		734289						
ANR	734427	Symbol	attrNameSub		734289						
ANR	734428	Symbol	absolute		734289						
ANR	734429	Symbol	true		734289						
ANR	734430	Symbol	expr		734289						
ANR	734431	Symbol	strcasecmp		734289						
ANR	734432	Symbol	attrName		734289						
ANR	734433	Function	ClassAd :: Flatten	1707:0:44692:44873							
ANR	734434	FunctionDef	"ClassAd :: Flatten (const ExprTree * tree , Value & val , ExprTree * & fexpr)"		734433	0					
ANR	734435	CompoundStatement		1709:0:44777:44873	734433	0					
ANR	734436	IdentifierDeclStatement	EvalState state ;	1710:1:44780:44795	734433	0	True				
ANR	734437	IdentifierDecl	state		734433	0					
ANR	734438	IdentifierDeclType	EvalState		734433	0					
ANR	734439	Identifier	state		734433	1					
ANR	734440	ExpressionStatement	state . SetScopes ( this )	1712:1:44799:44822	734433	1	True				
ANR	734441	CallExpression	state . SetScopes ( this )		734433	0					
ANR	734442	Callee	state . SetScopes		734433	0					
ANR	734443	MemberAccess	state . SetScopes		734433	0					
ANR	734444	Identifier	state		734433	0					
ANR	734445	Identifier	SetScopes		734433	1					
ANR	734446	ArgumentList	this		734433	1					
ANR	734447	Argument	this		734433	0					
ANR	734448	Identifier	this		734433	0					
ANR	734449	ReturnStatement	"return ( tree -> Flatten ( state , val , fexpr ) ) ;"	1713:1:44825:44871	734433	2	True				
ANR	734450	CallExpression	"tree -> Flatten ( state , val , fexpr )"		734433	0					
ANR	734451	Callee	tree -> Flatten		734433	0					
ANR	734452	PtrMemberAccess	tree -> Flatten		734433	0					
ANR	734453	Identifier	tree		734433	0					
ANR	734454	Identifier	Flatten		734433	1					
ANR	734455	ArgumentList	state		734433	1					
ANR	734456	Argument	state		734433	0					
ANR	734457	Identifier	state		734433	0					
ANR	734458	Argument	val		734433	1					
ANR	734459	Identifier	val		734433	0					
ANR	734460	Argument	fexpr		734433	2					
ANR	734461	Identifier	fexpr		734433	0					
ANR	734462	ReturnType	bool		734433	1					
ANR	734463	Identifier	ClassAd :: Flatten		734433	2					
ANR	734464	ParameterList	"const ExprTree * tree , Value & val , ExprTree * & fexpr"		734433	3					
ANR	734465	Parameter	const ExprTree * tree	1708:9:44716:44735	734433	0	True				
ANR	734466	ParameterType	const ExprTree *		734433	0					
ANR	734467	Identifier	tree		734433	1					
ANR	734468	Parameter	Value & val	1708:32:44739:44748	734433	1	True				
ANR	734469	ParameterType	Value &		734433	0					
ANR	734470	Identifier	val		734433	1					
ANR	734471	Parameter	ExprTree * & fexpr	1708:45:44752:44767	734433	2	True				
ANR	734472	ParameterType	ExprTree * &		734433	0					
ANR	734473	Identifier	fexpr		734433	1					
ANR	734474	CFGEntryNode	ENTRY		734433		True				
ANR	734475	CFGExitNode	EXIT		734433		True				
ANR	734476	Symbol	val		734433						
ANR	734477	Symbol	* tree		734433						
ANR	734478	Symbol	fexpr		734433						
ANR	734479	Symbol	tree		734433						
ANR	734480	Symbol	this		734433						
ANR	734481	Symbol	state		734433						
ANR	734482	Symbol	tree -> Flatten		734433						
ANR	734483	Function	ClassAd :: FlattenAndInline	1716:0:44876:45105							
ANR	734484	FunctionDef	"ClassAd :: FlattenAndInline (const ExprTree * tree , Value & val , ExprTree * & fexpr)"		734483	0					
ANR	734485	CompoundStatement		1718:0:44977:45105	734483	0					
ANR	734486	IdentifierDeclStatement	EvalState state ;	1719:1:44980:44995	734483	0	True				
ANR	734487	IdentifierDecl	state		734483	0					
ANR	734488	IdentifierDeclType	EvalState		734483	0					
ANR	734489	Identifier	state		734483	1					
ANR	734490	ExpressionStatement	state . SetScopes ( this )	1721:1:44999:45022	734483	1	True				
ANR	734491	CallExpression	state . SetScopes ( this )		734483	0					
ANR	734492	Callee	state . SetScopes		734483	0					
ANR	734493	MemberAccess	state . SetScopes		734483	0					
ANR	734494	Identifier	state		734483	0					
ANR	734495	Identifier	SetScopes		734483	1					
ANR	734496	ArgumentList	this		734483	1					
ANR	734497	Argument	this		734483	0					
ANR	734498	Identifier	this		734483	0					
ANR	734499	ExpressionStatement	state . flattenAndInline = true	1722:1:45025:45054	734483	2	True				
ANR	734500	AssignmentExpression	state . flattenAndInline = true		734483	0		=			
ANR	734501	MemberAccess	state . flattenAndInline		734483	0					
ANR	734502	Identifier	state		734483	0					
ANR	734503	Identifier	flattenAndInline		734483	1					
ANR	734504	Identifier	true		734483	1					
ANR	734505	ReturnStatement	"return ( tree -> Flatten ( state , val , fexpr ) ) ;"	1723:1:45057:45103	734483	3	True				
ANR	734506	CallExpression	"tree -> Flatten ( state , val , fexpr )"		734483	0					
ANR	734507	Callee	tree -> Flatten		734483	0					
ANR	734508	PtrMemberAccess	tree -> Flatten		734483	0					
ANR	734509	Identifier	tree		734483	0					
ANR	734510	Identifier	Flatten		734483	1					
ANR	734511	ArgumentList	state		734483	1					
ANR	734512	Argument	state		734483	0					
ANR	734513	Identifier	state		734483	0					
ANR	734514	Argument	val		734483	1					
ANR	734515	Identifier	val		734483	0					
ANR	734516	Argument	fexpr		734483	2					
ANR	734517	Identifier	fexpr		734483	0					
ANR	734518	ReturnType	bool		734483	1					
ANR	734519	Identifier	ClassAd :: FlattenAndInline		734483	2					
ANR	734520	ParameterList	"const ExprTree * tree , Value & val , ExprTree * & fexpr"		734483	3					
ANR	734521	Parameter	const ExprTree * tree	1717:18:44916:44935	734483	0	True				
ANR	734522	ParameterType	const ExprTree *		734483	0					
ANR	734523	Identifier	tree		734483	1					
ANR	734524	Parameter	Value & val	1717:41:44939:44948	734483	1	True				
ANR	734525	ParameterType	Value &		734483	0					
ANR	734526	Identifier	val		734483	1					
ANR	734527	Parameter	ExprTree * & fexpr	1717:54:44952:44967	734483	2	True				
ANR	734528	ParameterType	ExprTree * &		734483	0					
ANR	734529	Identifier	fexpr		734483	1					
ANR	734530	CFGEntryNode	ENTRY		734483		True				
ANR	734531	CFGExitNode	EXIT		734483		True				
ANR	734532	Symbol	val		734483						
ANR	734533	Symbol	* tree		734483						
ANR	734534	Symbol	fexpr		734483						
ANR	734535	Symbol	tree		734483						
ANR	734536	Symbol	this		734483						
ANR	734537	Symbol	true		734483						
ANR	734538	Symbol	state		734483						
ANR	734539	Symbol	tree -> Flatten		734483						
ANR	734540	Symbol	state . flattenAndInline		734483						
ANR	734541	Function	ClassAdIterator :: NextAttribute	1726:0:45108:45401							
ANR	734542	FunctionDef	"ClassAdIterator :: NextAttribute (string & attr , const ExprTree * & expr)"		734541	0					
ANR	734543	CompoundStatement		1728:0:45184:45401	734541	0					
ANR	734544	IfStatement	if ( ! ad )		734541	0					
ANR	734545	Condition	! ad	1729:5:45191:45193	734541	0	True				
ANR	734546	UnaryOperationExpression	! ad		734541	0					
ANR	734547	UnaryOperator	!		734541	0					
ANR	734548	Identifier	ad		734541	1					
ANR	734549	ReturnStatement	return false ;	1729:10:45196:45208	734541	1	True				
ANR	734550	Identifier	false		734541	0					
ANR	734551	ExpressionStatement	"attr = """""	1731:1:45212:45221	734541	1	True				
ANR	734552	AssignmentExpression	"attr = """""		734541	0		=			
ANR	734553	Identifier	attr		734541	0					
ANR	734554	PrimaryExpression	""""""		734541	1					
ANR	734555	ExpressionStatement	expr = NULL	1732:1:45224:45235	734541	2	True				
ANR	734556	AssignmentExpression	expr = NULL		734541	0		=			
ANR	734557	Identifier	expr		734541	0					
ANR	734558	Identifier	NULL		734541	1					
ANR	734559	IfStatement	if ( itr == ad -> attrList . end ( ) )		734541	3					
ANR	734560	Condition	itr == ad -> attrList . end ( )	1733:5:45242:45265	734541	0	True				
ANR	734561	EqualityExpression	itr == ad -> attrList . end ( )		734541	0		==			
ANR	734562	Identifier	itr		734541	0					
ANR	734563	CallExpression	ad -> attrList . end ( )		734541	1					
ANR	734564	Callee	ad -> attrList . end		734541	0					
ANR	734565	MemberAccess	ad -> attrList . end		734541	0					
ANR	734566	PtrMemberAccess	ad -> attrList		734541	0					
ANR	734567	Identifier	ad		734541	0					
ANR	734568	Identifier	attrList		734541	1					
ANR	734569	Identifier	end		734541	1					
ANR	734570	ArgumentList			734541	1					
ANR	734571	ReturnStatement	return ( false ) ;	1733:32:45269:45284	734541	1	True				
ANR	734572	Identifier	false		734541	0					
ANR	734573	ExpressionStatement	itr ++	1734:1:45287:45292	734541	4	True				
ANR	734574	PostIncDecOperationExpression	itr ++		734541	0					
ANR	734575	Identifier	itr		734541	0					
ANR	734576	IncDec	++		734541	1					
ANR	734577	IfStatement	if ( itr == ad -> attrList . end ( ) )		734541	5					
ANR	734578	Condition	itr == ad -> attrList . end ( )	1735:5:45299:45322	734541	0	True				
ANR	734579	EqualityExpression	itr == ad -> attrList . end ( )		734541	0		==			
ANR	734580	Identifier	itr		734541	0					
ANR	734581	CallExpression	ad -> attrList . end ( )		734541	1					
ANR	734582	Callee	ad -> attrList . end		734541	0					
ANR	734583	MemberAccess	ad -> attrList . end		734541	0					
ANR	734584	PtrMemberAccess	ad -> attrList		734541	0					
ANR	734585	Identifier	ad		734541	0					
ANR	734586	Identifier	attrList		734541	1					
ANR	734587	Identifier	end		734541	1					
ANR	734588	ArgumentList			734541	1					
ANR	734589	ReturnStatement	return ( false ) ;	1735:32:45326:45341	734541	1	True				
ANR	734590	Identifier	false		734541	0					
ANR	734591	ExpressionStatement	attr = itr -> first	1736:1:45344:45361	734541	6	True				
ANR	734592	AssignmentExpression	attr = itr -> first		734541	0		=			
ANR	734593	Identifier	attr		734541	0					
ANR	734594	PtrMemberAccess	itr -> first		734541	1					
ANR	734595	Identifier	itr		734541	0					
ANR	734596	Identifier	first		734541	1					
ANR	734597	ExpressionStatement	expr = itr -> second	1737:1:45364:45382	734541	7	True				
ANR	734598	AssignmentExpression	expr = itr -> second		734541	0		=			
ANR	734599	Identifier	expr		734541	0					
ANR	734600	PtrMemberAccess	itr -> second		734541	1					
ANR	734601	Identifier	itr		734541	0					
ANR	734602	Identifier	second		734541	1					
ANR	734603	ReturnStatement	return ( true ) ;	1738:1:45385:45399	734541	8	True				
ANR	734604	Identifier	true		734541	0					
ANR	734605	ReturnType	bool		734541	1					
ANR	734606	Identifier	ClassAdIterator :: NextAttribute		734541	2					
ANR	734607	ParameterList	"string & attr , const ExprTree * & expr"		734541	3					
ANR	734608	Parameter	string & attr	1727:15:45146:45157	734541	0	True				
ANR	734609	ParameterType	string &		734541	0					
ANR	734610	Identifier	attr		734541	1					
ANR	734611	Parameter	const ExprTree * & expr	1727:29:45160:45180	734541	1	True				
ANR	734612	ParameterType	const ExprTree * &		734541	0					
ANR	734613	Identifier	expr		734541	1					
ANR	734614	CFGEntryNode	ENTRY		734541		True				
ANR	734615	CFGExitNode	EXIT		734541		True				
ANR	734616	Symbol	ad		734541						
ANR	734617	Symbol	NULL		734541						
ANR	734618	Symbol	itr		734541						
ANR	734619	Symbol	false		734541						
ANR	734620	Symbol	* ad		734541						
ANR	734621	Symbol	* itr		734541						
ANR	734622	Symbol	ad -> attrList . end		734541						
ANR	734623	Symbol	true		734541						
ANR	734624	Symbol	ad -> attrList		734541						
ANR	734625	Symbol	expr		734541						
ANR	734626	Symbol	itr -> first		734541						
ANR	734627	Symbol	attr		734541						
ANR	734628	Symbol	itr -> second		734541						
ANR	734629	Function	ClassAdIterator :: CurrentAttribute	1742:0:45405:45624							
ANR	734630	FunctionDef	"ClassAdIterator :: CurrentAttribute (string & attr , const ExprTree * & expr)"		734629	0					
ANR	734631	CompoundStatement		1744:0:45489:45624	734629	0					
ANR	734632	IfStatement	if ( ! ad )		734629	0					
ANR	734633	Condition	! ad	1745:5:45496:45498	734629	0	True				
ANR	734634	UnaryOperationExpression	! ad		734629	0					
ANR	734635	UnaryOperator	!		734629	0					
ANR	734636	Identifier	ad		734629	1					
ANR	734637	ReturnStatement	return ( false ) ;	1745:11:45502:45517	734629	1	True				
ANR	734638	Identifier	false		734629	0					
ANR	734639	IfStatement	if ( itr == ad -> attrList . end ( ) )		734629	1					
ANR	734640	Condition	itr == ad -> attrList . end ( )	1746:5:45524:45547	734629	0	True				
ANR	734641	EqualityExpression	itr == ad -> attrList . end ( )		734629	0		==			
ANR	734642	Identifier	itr		734629	0					
ANR	734643	CallExpression	ad -> attrList . end ( )		734629	1					
ANR	734644	Callee	ad -> attrList . end		734629	0					
ANR	734645	MemberAccess	ad -> attrList . end		734629	0					
ANR	734646	PtrMemberAccess	ad -> attrList		734629	0					
ANR	734647	Identifier	ad		734629	0					
ANR	734648	Identifier	attrList		734629	1					
ANR	734649	Identifier	end		734629	1					
ANR	734650	ArgumentList			734629	1					
ANR	734651	ReturnStatement	return ( false ) ;	1746:32:45551:45566	734629	1	True				
ANR	734652	Identifier	false		734629	0					
ANR	734653	ExpressionStatement	attr = itr -> first	1747:1:45569:45586	734629	2	True				
ANR	734654	AssignmentExpression	attr = itr -> first		734629	0		=			
ANR	734655	Identifier	attr		734629	0					
ANR	734656	PtrMemberAccess	itr -> first		734629	1					
ANR	734657	Identifier	itr		734629	0					
ANR	734658	Identifier	first		734629	1					
ANR	734659	ExpressionStatement	expr = itr -> second	1748:1:45589:45607	734629	3	True				
ANR	734660	AssignmentExpression	expr = itr -> second		734629	0		=			
ANR	734661	Identifier	expr		734629	0					
ANR	734662	PtrMemberAccess	itr -> second		734629	1					
ANR	734663	Identifier	itr		734629	0					
ANR	734664	Identifier	second		734629	1					
ANR	734665	ReturnStatement	return true ;	1749:1:45610:45621	734629	4	True				
ANR	734666	Identifier	true		734629	0					
ANR	734667	ReturnType	bool		734629	1					
ANR	734668	Identifier	ClassAdIterator :: CurrentAttribute		734629	2					
ANR	734669	ParameterList	"string & attr , const ExprTree * & expr"		734629	3					
ANR	734670	Parameter	string & attr	1743:18:45446:45457	734629	0	True				
ANR	734671	ParameterType	string &		734629	0					
ANR	734672	Identifier	attr		734629	1					
ANR	734673	Parameter	const ExprTree * & expr	1743:32:45460:45480	734629	1	True				
ANR	734674	ParameterType	const ExprTree * &		734629	0					
ANR	734675	Identifier	expr		734629	1					
ANR	734676	CFGEntryNode	ENTRY		734629		True				
ANR	734677	CFGExitNode	EXIT		734629		True				
ANR	734678	Symbol	ad		734629						
ANR	734679	Symbol	itr		734629						
ANR	734680	Symbol	false		734629						
ANR	734681	Symbol	true		734629						
ANR	734682	Symbol	ad -> attrList		734629						
ANR	734683	Symbol	expr		734629						
ANR	734684	Symbol	* ad		734629						
ANR	734685	Symbol	itr -> first		734629						
ANR	734686	Symbol	attr		734629						
ANR	734687	Symbol	* itr		734629						
ANR	734688	Symbol	ad -> attrList . end		734629						
ANR	734689	Symbol	itr -> second		734629						
ANR	734690	Function	ClassAd :: ChainToAd	1754:0:45629:45776							
ANR	734691	FunctionDef	ClassAd :: ChainToAd (ClassAd * new_chain_parent_ad)		734690	0					
ANR	734692	CompoundStatement		1755:0:45683:45776	734690	0					
ANR	734693	IfStatement	if ( new_chain_parent_ad != NULL )		734690	0					
ANR	734694	Condition	new_chain_parent_ad != NULL	1756:5:45690:45716	734690	0	True				
ANR	734695	EqualityExpression	new_chain_parent_ad != NULL		734690	0		!=			
ANR	734696	Identifier	new_chain_parent_ad		734690	0					
ANR	734697	Identifier	NULL		734690	1					
ANR	734698	CompoundStatement		2:34:35:35	734690	1					
ANR	734699	ExpressionStatement	chained_parent_ad = new_chain_parent_ad	1757:2:45723:45762	734690	0	True				
ANR	734700	AssignmentExpression	chained_parent_ad = new_chain_parent_ad		734690	0		=			
ANR	734701	Identifier	chained_parent_ad		734690	0					
ANR	734702	Identifier	new_chain_parent_ad		734690	1					
ANR	734703	ReturnStatement	return ;	1759:1:45768:45774	734690	1	True				
ANR	734704	ReturnType	void		734690	1					
ANR	734705	Identifier	ClassAd :: ChainToAd		734690	2					
ANR	734706	ParameterList	ClassAd * new_chain_parent_ad		734690	3					
ANR	734707	Parameter	ClassAd * new_chain_parent_ad	1754:24:45653:45680	734690	0	True				
ANR	734708	ParameterType	ClassAd *		734690	0					
ANR	734709	Identifier	new_chain_parent_ad		734690	1					
ANR	734710	CFGEntryNode	ENTRY		734690		True				
ANR	734711	CFGExitNode	EXIT		734690		True				
ANR	734712	Symbol	NULL		734690						
ANR	734713	Symbol	new_chain_parent_ad		734690						
ANR	734714	Symbol	chained_parent_ad		734690						
ANR	734715	Function	ClassAd :: Unchain	1762:0:45779:45845							
ANR	734716	FunctionDef	ClassAd :: Unchain ()		734715	0					
ANR	734717	CompoundStatement		1763:0:45807:45845	734715	0					
ANR	734718	ExpressionStatement	chained_parent_ad = NULL	1764:1:45810:45834	734715	0	True				
ANR	734719	AssignmentExpression	chained_parent_ad = NULL		734715	0		=			
ANR	734720	Identifier	chained_parent_ad		734715	0					
ANR	734721	Identifier	NULL		734715	1					
ANR	734722	ReturnStatement	return ;	1765:1:45837:45843	734715	1	True				
ANR	734723	ReturnType	void		734715	1					
ANR	734724	Identifier	ClassAd :: Unchain		734715	2					
ANR	734725	ParameterList			734715	3					
ANR	734726	CFGEntryNode	ENTRY		734715		True				
ANR	734727	CFGExitNode	EXIT		734715		True				
ANR	734728	Symbol	NULL		734715						
ANR	734729	Symbol	chained_parent_ad		734715						
ANR	734730	Function	ClassAd :: GetChainedParentAd	1768:0:45848:45920							
ANR	734731	FunctionDef	ClassAd :: GetChainedParentAd ()		734730	0					
ANR	734732	CompoundStatement		1769:0:45891:45920	734730	0					
ANR	734733	ReturnStatement	return chained_parent_ad ;	1770:1:45894:45918	734730	0	True				
ANR	734734	Identifier	chained_parent_ad		734730	0					
ANR	734735	ReturnType	ClassAd *		734730	1					
ANR	734736	Identifier	ClassAd :: GetChainedParentAd		734730	2					
ANR	734737	ParameterList			734730	3					
ANR	734738	CFGEntryNode	ENTRY		734730		True				
ANR	734739	CFGExitNode	EXIT		734730		True				
ANR	734740	Symbol	chained_parent_ad		734730						
ANR	734741	Function	ClassAd :: ClearAllDirtyFlags	1773:0:45923:45998							
ANR	734742	FunctionDef	ClassAd :: ClearAllDirtyFlags ()		734741	0					
ANR	734743	CompoundStatement		1774:0:45962:45998	734741	0					
ANR	734744	ExpressionStatement	dirtyAttrList . clear ( )	1775:1:45966:45987	734741	0	True				
ANR	734745	CallExpression	dirtyAttrList . clear ( )		734741	0					
ANR	734746	Callee	dirtyAttrList . clear		734741	0					
ANR	734747	MemberAccess	dirtyAttrList . clear		734741	0					
ANR	734748	Identifier	dirtyAttrList		734741	0					
ANR	734749	Identifier	clear		734741	1					
ANR	734750	ArgumentList			734741	1					
ANR	734751	ReturnStatement	return ;	1776:1:45990:45996	734741	1	True				
ANR	734752	ReturnType	void		734741	1					
ANR	734753	Identifier	ClassAd :: ClearAllDirtyFlags		734741	2					
ANR	734754	ParameterList			734741	3					
ANR	734755	CFGEntryNode	ENTRY		734741		True				
ANR	734756	CFGExitNode	EXIT		734741		True				
ANR	734757	Symbol	dirtyAttrList		734741						
ANR	734758	Function	ClassAd :: MarkAttributeDirty	1779:0:46001:46124							
ANR	734759	FunctionDef	ClassAd :: MarkAttributeDirty (const string & name)		734758	0					
ANR	734760	CompoundStatement		1780:0:46054:46124	734758	0					
ANR	734761	IfStatement	if ( do_dirty_tracking )		734758	0					
ANR	734762	Condition	do_dirty_tracking	1781:5:46061:46077	734758	0	True				
ANR	734763	Identifier	do_dirty_tracking		734758	0					
ANR	734764	CompoundStatement		2:24:25:25	734758	1					
ANR	734765	ExpressionStatement	dirtyAttrList . insert ( name )	1782:2:46084:46110	734758	0	True				
ANR	734766	CallExpression	dirtyAttrList . insert ( name )		734758	0					
ANR	734767	Callee	dirtyAttrList . insert		734758	0					
ANR	734768	MemberAccess	dirtyAttrList . insert		734758	0					
ANR	734769	Identifier	dirtyAttrList		734758	0					
ANR	734770	Identifier	insert		734758	1					
ANR	734771	ArgumentList	name		734758	1					
ANR	734772	Argument	name		734758	0					
ANR	734773	Identifier	name		734758	0					
ANR	734774	ReturnStatement	return ;	1784:1:46116:46122	734758	1	True				
ANR	734775	ReturnType	void		734758	1					
ANR	734776	Identifier	ClassAd :: MarkAttributeDirty		734758	2					
ANR	734777	ParameterList	const string & name		734758	3					
ANR	734778	Parameter	const string & name	1779:33:46034:46051	734758	0	True				
ANR	734779	ParameterType	const string &		734758	0					
ANR	734780	Identifier	name		734758	1					
ANR	734781	CFGEntryNode	ENTRY		734758		True				
ANR	734782	CFGExitNode	EXIT		734758		True				
ANR	734783	Symbol	do_dirty_tracking		734758						
ANR	734784	Symbol	name		734758						
ANR	734785	Symbol	dirtyAttrList		734758						
ANR	734786	Function	ClassAd :: MarkAttributeClean	1787:0:46127:46249							
ANR	734787	FunctionDef	ClassAd :: MarkAttributeClean (const string & name)		734786	0					
ANR	734788	CompoundStatement		1788:0:46180:46249	734786	0					
ANR	734789	IfStatement	if ( do_dirty_tracking )		734786	0					
ANR	734790	Condition	do_dirty_tracking	1789:5:46187:46203	734786	0	True				
ANR	734791	Identifier	do_dirty_tracking		734786	0					
ANR	734792	CompoundStatement		2:24:25:25	734786	1					
ANR	734793	ExpressionStatement	dirtyAttrList . erase ( name )	1790:2:46210:46235	734786	0	True				
ANR	734794	CallExpression	dirtyAttrList . erase ( name )		734786	0					
ANR	734795	Callee	dirtyAttrList . erase		734786	0					
ANR	734796	MemberAccess	dirtyAttrList . erase		734786	0					
ANR	734797	Identifier	dirtyAttrList		734786	0					
ANR	734798	Identifier	erase		734786	1					
ANR	734799	ArgumentList	name		734786	1					
ANR	734800	Argument	name		734786	0					
ANR	734801	Identifier	name		734786	0					
ANR	734802	ReturnStatement	return ;	1792:1:46241:46247	734786	1	True				
ANR	734803	ReturnType	void		734786	1					
ANR	734804	Identifier	ClassAd :: MarkAttributeClean		734786	2					
ANR	734805	ParameterList	const string & name		734786	3					
ANR	734806	Parameter	const string & name	1787:33:46160:46177	734786	0	True				
ANR	734807	ParameterType	const string &		734786	0					
ANR	734808	Identifier	name		734786	1					
ANR	734809	CFGEntryNode	ENTRY		734786		True				
ANR	734810	CFGExitNode	EXIT		734786		True				
ANR	734811	Symbol	do_dirty_tracking		734786						
ANR	734812	Symbol	name		734786						
ANR	734813	Symbol	dirtyAttrList		734786						
ANR	734814	Function	ClassAd :: IsAttributeDirty	1795:0:46252:46448							
ANR	734815	FunctionDef	ClassAd :: IsAttributeDirty (const string & name)		734814	0					
ANR	734816	CompoundStatement		1796:0:46303:46448	734814	0					
ANR	734817	IdentifierDeclStatement	bool is_dirty ;	1797:1:46306:46319	734814	0	True				
ANR	734818	IdentifierDecl	is_dirty		734814	0					
ANR	734819	IdentifierDeclType	bool		734814	0					
ANR	734820	Identifier	is_dirty		734814	1					
ANR	734821	IfStatement	if ( dirtyAttrList . find ( name ) != dirtyAttrList . end ( ) )		734814	1					
ANR	734822	Condition	dirtyAttrList . find ( name ) != dirtyAttrList . end ( )	1799:5:46327:46373	734814	0	True				
ANR	734823	EqualityExpression	dirtyAttrList . find ( name ) != dirtyAttrList . end ( )		734814	0		!=			
ANR	734824	CallExpression	dirtyAttrList . find ( name )		734814	0					
ANR	734825	Callee	dirtyAttrList . find		734814	0					
ANR	734826	MemberAccess	dirtyAttrList . find		734814	0					
ANR	734827	Identifier	dirtyAttrList		734814	0					
ANR	734828	Identifier	find		734814	1					
ANR	734829	ArgumentList	name		734814	1					
ANR	734830	Argument	name		734814	0					
ANR	734831	Identifier	name		734814	0					
ANR	734832	CallExpression	dirtyAttrList . end ( )		734814	1					
ANR	734833	Callee	dirtyAttrList . end		734814	0					
ANR	734834	MemberAccess	dirtyAttrList . end		734814	0					
ANR	734835	Identifier	dirtyAttrList		734814	0					
ANR	734836	Identifier	end		734814	1					
ANR	734837	ArgumentList			734814	1					
ANR	734838	CompoundStatement		4:54:72:72	734814	1					
ANR	734839	ExpressionStatement	is_dirty = true	1800:2:46380:46395	734814	0	True				
ANR	734840	AssignmentExpression	is_dirty = true		734814	0		=			
ANR	734841	Identifier	is_dirty		734814	0					
ANR	734842	Identifier	true		734814	1					
ANR	734843	ElseStatement	else		734814	0					
ANR	734844	CompoundStatement		6:8:101:101	734814	0					
ANR	734845	ExpressionStatement	is_dirty = false	1802:2:46409:46425	734814	0	True				
ANR	734846	AssignmentExpression	is_dirty = false		734814	0		=			
ANR	734847	Identifier	is_dirty		734814	0					
ANR	734848	Identifier	false		734814	1					
ANR	734849	ReturnStatement	return is_dirty ;	1804:1:46431:46446	734814	2	True				
ANR	734850	Identifier	is_dirty		734814	0					
ANR	734851	ReturnType	bool		734814	1					
ANR	734852	Identifier	ClassAd :: IsAttributeDirty		734814	2					
ANR	734853	ParameterList	const string & name		734814	3					
ANR	734854	Parameter	const string & name	1795:31:46283:46300	734814	0	True				
ANR	734855	ParameterType	const string &		734814	0					
ANR	734856	Identifier	name		734814	1					
ANR	734857	CFGEntryNode	ENTRY		734814		True				
ANR	734858	CFGExitNode	EXIT		734814		True				
ANR	734859	Symbol	dirtyAttrList . end		734814						
ANR	734860	Symbol	dirtyAttrList . find		734814						
ANR	734861	Symbol	name		734814						
ANR	734862	Symbol	true		734814						
ANR	734863	Symbol	false		734814						
ANR	734864	Symbol	is_dirty		734814						
ANR	734865	Symbol	dirtyAttrList		734814						
