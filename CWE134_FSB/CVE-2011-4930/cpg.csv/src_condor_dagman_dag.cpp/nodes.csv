command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3103654	File	data/converged/CVE-2011-4930_htcondor/src_condor_dagman_dag.cpp								
ANR	3103655	DeclStmt									
ANR	3103656	Decl							const CondorID	const CondorID	Dag :: _defaultCondorId
ANR	3103657	DeclStmt									
ANR	3103658	Decl							const int	const int	Dag :: DAG_ERROR_CONDOR_SUBMIT_FAILED
ANR	3103659	DeclStmt									
ANR	3103660	Decl							const int	const int	Dag :: DAG_ERROR_CONDOR_JOB_ABORTED
ANR	3103661	DeclStmt									
ANR	3103662	Decl							const int	const int	Dag :: DAG_ERROR_LOG_MONITOR_ERROR
ANR	3103663	DeclStmt									
ANR	3103664	Decl							const int	const int	Dag :: DAG_ERROR_JOB_SKIPPED
ANR	3103665	Function	touch	63:0:2015:2242							
ANR	3103666	FunctionDef	touch (const char * filename)		3103665	0					
ANR	3103667	CompoundStatement		63:35:2050:2242	3103665	0					
ANR	3103668	IdentifierDeclStatement	"int fd = safe_open_wrapper_follow ( filename , O_RDWR | O_CREAT , 0600 ) ;"	64:4:2056:2123	3103665	0	True				
ANR	3103669	IdentifierDecl	"fd = safe_open_wrapper_follow ( filename , O_RDWR | O_CREAT , 0600 )"		3103665	0					
ANR	3103670	IdentifierDeclType	int		3103665	0					
ANR	3103671	Identifier	fd		3103665	1					
ANR	3103672	AssignmentExpression	"fd = safe_open_wrapper_follow ( filename , O_RDWR | O_CREAT , 0600 )"		3103665	2		=			
ANR	3103673	Identifier	fd		3103665	0					
ANR	3103674	CallExpression	"safe_open_wrapper_follow ( filename , O_RDWR | O_CREAT , 0600 )"		3103665	1					
ANR	3103675	Callee	safe_open_wrapper_follow		3103665	0					
ANR	3103676	Identifier	safe_open_wrapper_follow		3103665	0					
ANR	3103677	ArgumentList	filename		3103665	1					
ANR	3103678	Argument	filename		3103665	0					
ANR	3103679	Identifier	filename		3103665	0					
ANR	3103680	Argument	O_RDWR | O_CREAT		3103665	1					
ANR	3103681	InclusiveOrExpression	O_RDWR | O_CREAT		3103665	0		|			
ANR	3103682	Identifier	O_RDWR		3103665	0					
ANR	3103683	Identifier	O_CREAT		3103665	1					
ANR	3103684	Argument	0600		3103665	2					
ANR	3103685	PrimaryExpression	0600		3103665	0					
ANR	3103686	IfStatement	if ( fd == - 1 )		3103665	1					
ANR	3103687	Condition	fd == - 1	65:8:2133:2140	3103665	0	True				
ANR	3103688	EqualityExpression	fd == - 1		3103665	0		==			
ANR	3103689	Identifier	fd		3103665	0					
ANR	3103690	UnaryOperationExpression	- 1		3103665	1					
ANR	3103691	UnaryOperator	-		3103665	0					
ANR	3103692	PrimaryExpression	1		3103665	1					
ANR	3103693	CompoundStatement		3:18:92:92	3103665	1					
ANR	3103694	ExpressionStatement	"debug_error ( 1 , DEBUG_QUIET , ""Error: can't open %s\\n"" , filename )"	66:8:2153:2218	3103665	0	True				
ANR	3103695	CallExpression	"debug_error ( 1 , DEBUG_QUIET , ""Error: can't open %s\\n"" , filename )"		3103665	0					
ANR	3103696	Callee	debug_error		3103665	0					
ANR	3103697	Identifier	debug_error		3103665	0					
ANR	3103698	ArgumentList	1		3103665	1					
ANR	3103699	Argument	1		3103665	0					
ANR	3103700	PrimaryExpression	1		3103665	0					
ANR	3103701	Argument	DEBUG_QUIET		3103665	1					
ANR	3103702	Identifier	DEBUG_QUIET		3103665	0					
ANR	3103703	Argument	"""Error: can't open %s\\n"""		3103665	2					
ANR	3103704	PrimaryExpression	"""Error: can't open %s\\n"""		3103665	0					
ANR	3103705	Argument	filename		3103665	3					
ANR	3103706	Identifier	filename		3103665	0					
ANR	3103707	ExpressionStatement	close ( fd )	68:4:2230:2240	3103665	2	True				
ANR	3103708	CallExpression	close ( fd )		3103665	0					
ANR	3103709	Callee	close		3103665	0					
ANR	3103710	Identifier	close		3103665	0					
ANR	3103711	ArgumentList	fd		3103665	1					
ANR	3103712	Argument	fd		3103665	0					
ANR	3103713	Identifier	fd		3103665	0					
ANR	3103714	ReturnType	void		3103665	1					
ANR	3103715	Identifier	touch		3103665	2					
ANR	3103716	ParameterList	const char * filename		3103665	3					
ANR	3103717	Parameter	const char * filename	63:12:2027:2047	3103665	0	True				
ANR	3103718	ParameterType	const char *		3103665	0					
ANR	3103719	Identifier	filename		3103665	1					
ANR	3103720	CFGEntryNode	ENTRY		3103665		True				
ANR	3103721	CFGExitNode	EXIT		3103665		True				
ANR	3103722	Symbol	O_RDWR		3103665						
ANR	3103723	Symbol	filename		3103665						
ANR	3103724	Symbol	safe_open_wrapper_follow		3103665						
ANR	3103725	Symbol	O_CREAT		3103665						
ANR	3103726	Symbol	fd		3103665						
ANR	3103727	Symbol	DEBUG_QUIET		3103665						
ANR	3103728	DeclStmt									
ANR	3103729	Decl							const int	const int	NODE_HASH_SIZE
ANR	3103730	Function	Dag :: Dag	74:0:2396:6746							
ANR	3103731	FunctionDef	"Dag :: Dag (StringList & dagFiles , const int maxJobsSubmitted , const int maxPreScripts , const int maxPostScripts , bool allowLogError , bool useDagDir , int maxIdleJobProcs , bool retrySubmitFirst , bool retryNodeFirst , const char * condorRmExe , const char * storkRmExe , const CondorID * DAGManJobID , bool prohibitMultiJobs , bool submitDepthFirst , const char * defaultNodeLog , bool generateSubdagSubmits , SubmitDagDeepOptions * submitDagDeepOpts , bool isSplice , const MyString & spliceScope)"		3103730	0					
ANR	3103732	CompoundStatement		128:0:4555:6746	3103730	0					
ANR	3103733	ExpressionStatement	"m_directory = ""."""	136:1:4962:4979	3103730	0	True				
ANR	3103734	AssignmentExpression	"m_directory = ""."""		3103730	0		=			
ANR	3103735	Identifier	m_directory		3103730	0					
ANR	3103736	PrimaryExpression	"""."""		3103730	1					
ANR	3103737	IfStatement	if ( _isSplice == false )		3103730	1					
ANR	3103738	Condition	_isSplice == false	139:5:5051:5068	3103730	0	True				
ANR	3103739	EqualityExpression	_isSplice == false		3103730	0		==			
ANR	3103740	Identifier	_isSplice		3103730	0					
ANR	3103741	Identifier	false		3103730	1					
ANR	3103742	CompoundStatement		12:25:515:515	3103730	1					
ANR	3103743	ExpressionStatement	ASSERT ( dagFiles . number ( ) >= 1 )	140:2:5075:5107	3103730	0	True				
ANR	3103744	CallExpression	ASSERT ( dagFiles . number ( ) >= 1 )		3103730	0					
ANR	3103745	Callee	ASSERT		3103730	0					
ANR	3103746	Identifier	ASSERT		3103730	0					
ANR	3103747	ArgumentList	dagFiles . number ( ) >= 1		3103730	1					
ANR	3103748	Argument	dagFiles . number ( ) >= 1		3103730	0					
ANR	3103749	RelationalExpression	dagFiles . number ( ) >= 1		3103730	0		>=			
ANR	3103750	CallExpression	dagFiles . number ( )		3103730	0					
ANR	3103751	Callee	dagFiles . number		3103730	0					
ANR	3103752	MemberAccess	dagFiles . number		3103730	0					
ANR	3103753	Identifier	dagFiles		3103730	0					
ANR	3103754	Identifier	number		3103730	1					
ANR	3103755	ArgumentList			3103730	1					
ANR	3103756	PrimaryExpression	1		3103730	1					
ANR	3103757	ExpressionStatement	PrintDagFiles ( dagFiles )	141:2:5111:5136	3103730	1	True				
ANR	3103758	CallExpression	PrintDagFiles ( dagFiles )		3103730	0					
ANR	3103759	Callee	PrintDagFiles		3103730	0					
ANR	3103760	Identifier	PrintDagFiles		3103730	0					
ANR	3103761	ArgumentList	dagFiles		3103730	1					
ANR	3103762	Argument	dagFiles		3103730	0					
ANR	3103763	Identifier	dagFiles		3103730	0					
ANR	3103764	Statement	_readyQ	144:2:5144:5150	3103730	2	True				
ANR	3103765	Statement	=	144:10:5152:5152	3103730	3	True				
ANR	3103766	Statement	new	144:12:5154:5156	3103730	4	True				
ANR	3103767	Statement	PrioritySimpleList	144:16:5158:5175	3103730	5	True				
ANR	3103768	Statement	<	144:34:5176:5176	3103730	6	True				
ANR	3103769	Statement	Job	144:35:5177:5179	3103730	7	True				
ANR	3103770	Statement	*	144:38:5180:5180	3103730	8	True				
ANR	3103771	Statement	>	144:39:5181:5181	3103730	9	True				
ANR	3103772	ExpressionStatement		144:40:5182:5182	3103730	10	True				
ANR	3103773	Statement	_submitQ	145:1:5185:5192	3103730	11	True				
ANR	3103774	Statement	=	145:10:5194:5194	3103730	12	True				
ANR	3103775	Statement	new	145:12:5196:5198	3103730	13	True				
ANR	3103776	Statement	Queue	145:16:5200:5204	3103730	14	True				
ANR	3103777	Statement	<	145:21:5205:5205	3103730	15	True				
ANR	3103778	Statement	Job	145:22:5206:5208	3103730	16	True				
ANR	3103779	Statement	*	145:25:5209:5209	3103730	17	True				
ANR	3103780	Statement	>	145:26:5210:5210	3103730	18	True				
ANR	3103781	ExpressionStatement		145:27:5211:5211	3103730	19	True				
ANR	3103782	IfStatement	if ( ! _readyQ || ! _submitQ )		3103730	20					
ANR	3103783	Condition	! _readyQ || ! _submitQ	146:5:5218:5238	3103730	0	True				
ANR	3103784	OrExpression	! _readyQ || ! _submitQ		3103730	0		||			
ANR	3103785	UnaryOperationExpression	! _readyQ		3103730	0					
ANR	3103786	UnaryOperator	!		3103730	0					
ANR	3103787	Identifier	_readyQ		3103730	1					
ANR	3103788	UnaryOperationExpression	! _submitQ		3103730	1					
ANR	3103789	UnaryOperator	!		3103730	0					
ANR	3103790	Identifier	_submitQ		3103730	1					
ANR	3103791	CompoundStatement		19:29:686:686	3103730	1					
ANR	3103792	ExpressionStatement	"EXCEPT ( ""ERROR: out of memory (%s:%d)!\\n"" , __FILE__ , __LINE__ )"	147:2:5246:5309	3103730	0	True				
ANR	3103793	CallExpression	"EXCEPT ( ""ERROR: out of memory (%s:%d)!\\n"" , __FILE__ , __LINE__ )"		3103730	0					
ANR	3103794	Callee	EXCEPT		3103730	0					
ANR	3103795	Identifier	EXCEPT		3103730	0					
ANR	3103796	ArgumentList	"""ERROR: out of memory (%s:%d)!\\n"""		3103730	1					
ANR	3103797	Argument	"""ERROR: out of memory (%s:%d)!\\n"""		3103730	0					
ANR	3103798	PrimaryExpression	"""ERROR: out of memory (%s:%d)!\\n"""		3103730	0					
ANR	3103799	Argument	__FILE__		3103730	1					
ANR	3103800	Identifier	__FILE__		3103730	0					
ANR	3103801	Argument	__LINE__		3103730	2					
ANR	3103802	Identifier	__LINE__		3103730	0					
ANR	3103803	IfStatement	if ( _isSplice == false )		3103730	21					
ANR	3103804	Condition	_isSplice == false	155:5:5650:5667	3103730	0	True				
ANR	3103805	EqualityExpression	_isSplice == false		3103730	0		==			
ANR	3103806	Identifier	_isSplice		3103730	0					
ANR	3103807	Identifier	false		3103730	1					
ANR	3103808	CompoundStatement		28:25:1114:1114	3103730	1					
ANR	3103809	ExpressionStatement	_preScriptQ = new ScriptQ ( this )	156:2:5674:5707	3103730	0	True				
ANR	3103810	AssignmentExpression	_preScriptQ = new ScriptQ ( this )		3103730	0		=			
ANR	3103811	Identifier	_preScriptQ		3103730	0					
ANR	3103812	Identifier	this		3103730	1					
ANR	3103813	ExpressionStatement	_postScriptQ = new ScriptQ ( this )	157:2:5711:5745	3103730	1	True				
ANR	3103814	AssignmentExpression	_postScriptQ = new ScriptQ ( this )		3103730	0		=			
ANR	3103815	Identifier	_postScriptQ		3103730	0					
ANR	3103816	Identifier	this		3103730	1					
ANR	3103817	IfStatement	if ( ! _preScriptQ || ! _postScriptQ )		3103730	2					
ANR	3103818	Condition	! _preScriptQ || ! _postScriptQ	158:6:5753:5781	3103730	0	True				
ANR	3103819	OrExpression	! _preScriptQ || ! _postScriptQ		3103730	0		||			
ANR	3103820	UnaryOperationExpression	! _preScriptQ		3103730	0					
ANR	3103821	UnaryOperator	!		3103730	0					
ANR	3103822	Identifier	_preScriptQ		3103730	1					
ANR	3103823	UnaryOperationExpression	! _postScriptQ		3103730	1					
ANR	3103824	UnaryOperator	!		3103730	0					
ANR	3103825	Identifier	_postScriptQ		3103730	1					
ANR	3103826	CompoundStatement		31:38:1229:1229	3103730	1					
ANR	3103827	ExpressionStatement	"EXCEPT ( ""ERROR: out of memory (%s:%d)!\\n"" , __FILE__ , __LINE__ )"	159:3:5790:5853	3103730	0	True				
ANR	3103828	CallExpression	"EXCEPT ( ""ERROR: out of memory (%s:%d)!\\n"" , __FILE__ , __LINE__ )"		3103730	0					
ANR	3103829	Callee	EXCEPT		3103730	0					
ANR	3103830	Identifier	EXCEPT		3103730	0					
ANR	3103831	ArgumentList	"""ERROR: out of memory (%s:%d)!\\n"""		3103730	1					
ANR	3103832	Argument	"""ERROR: out of memory (%s:%d)!\\n"""		3103730	0					
ANR	3103833	PrimaryExpression	"""ERROR: out of memory (%s:%d)!\\n"""		3103730	0					
ANR	3103834	Argument	__FILE__		3103730	1					
ANR	3103835	Identifier	__FILE__		3103730	0					
ANR	3103836	Argument	__LINE__		3103730	2					
ANR	3103837	Identifier	__LINE__		3103730	0					
ANR	3103838	ElseStatement	else		3103730	0					
ANR	3103839	CompoundStatement		34:8:1311:1311	3103730	0					
ANR	3103840	ExpressionStatement	_preScriptQ = NULL	162:2:5871:5889	3103730	0	True				
ANR	3103841	AssignmentExpression	_preScriptQ = NULL		3103730	0		=			
ANR	3103842	Identifier	_preScriptQ		3103730	0					
ANR	3103843	Identifier	NULL		3103730	1					
ANR	3103844	ExpressionStatement	_postScriptQ = NULL	163:2:5893:5912	3103730	1	True				
ANR	3103845	AssignmentExpression	_postScriptQ = NULL		3103730	0		=			
ANR	3103846	Identifier	_postScriptQ		3103730	0					
ANR	3103847	Identifier	NULL		3103730	1					
ANR	3103848	Statement	debug_printf	166:1:5919:5930	3103730	22	True				
ANR	3103849	Statement	(	166:13:5931:5931	3103730	23	True				
ANR	3103850	Statement	DEBUG_DEBUG_4	166:15:5933:5945	3103730	24	True				
ANR	3103851	Statement	","	166:28:5946:5946	3103730	25	True				
ANR	3103852	Statement	"""_maxJobsSubmitted = %d, """	166:30:5948:5973	3103730	26	True				
ANR	3103853	Statement	"""_maxPreScripts = %d, _maxPostScripts = %d\\n"""	167:6:5981:6025	3103730	27	True				
ANR	3103854	Statement	","	167:51:6026:6026	3103730	28	True				
ANR	3103855	Statement	_maxJobsSubmitted	168:6:6034:6050	3103730	29	True				
ANR	3103856	Statement	","	168:23:6051:6051	3103730	30	True				
ANR	3103857	Statement	_maxPreScripts	168:25:6053:6066	3103730	31	True				
ANR	3103858	Statement	","	168:39:6067:6067	3103730	32	True				
ANR	3103859	Statement	_maxPostScripts	168:41:6069:6083	3103730	33	True				
ANR	3103860	Statement	)	168:57:6085:6085	3103730	34	True				
ANR	3103861	ExpressionStatement		168:58:6086:6086	3103730	35	True				
ANR	3103862	ExpressionStatement	DFS_ORDER = 0	169:1:6089:6102	3103730	36	True				
ANR	3103863	AssignmentExpression	DFS_ORDER = 0		3103730	0		=			
ANR	3103864	Identifier	DFS_ORDER		3103730	0					
ANR	3103865	PrimaryExpression	0		3103730	1					
ANR	3103866	ExpressionStatement	_dot_file_name = NULL	171:1:6106:6135	3103730	37	True				
ANR	3103867	AssignmentExpression	_dot_file_name = NULL		3103730	0		=			
ANR	3103868	Identifier	_dot_file_name		3103730	0					
ANR	3103869	Identifier	NULL		3103730	1					
ANR	3103870	ExpressionStatement	_dot_include_file_name = NULL	172:1:6138:6167	3103730	38	True				
ANR	3103871	AssignmentExpression	_dot_include_file_name = NULL		3103730	0		=			
ANR	3103872	Identifier	_dot_include_file_name		3103730	0					
ANR	3103873	Identifier	NULL		3103730	1					
ANR	3103874	ExpressionStatement	_update_dot_file = false	173:1:6170:6200	3103730	39	True				
ANR	3103875	AssignmentExpression	_update_dot_file = false		3103730	0		=			
ANR	3103876	Identifier	_update_dot_file		3103730	0					
ANR	3103877	Identifier	false		3103730	1					
ANR	3103878	ExpressionStatement	_overwrite_dot_file = true	174:1:6203:6232	3103730	40	True				
ANR	3103879	AssignmentExpression	_overwrite_dot_file = true		3103730	0		=			
ANR	3103880	Identifier	_overwrite_dot_file		3103730	0					
ANR	3103881	Identifier	true		3103730	1					
ANR	3103882	ExpressionStatement	_dot_file_name_suffix = 0	175:1:6235:6261	3103730	41	True				
ANR	3103883	AssignmentExpression	_dot_file_name_suffix = 0		3103730	0		=			
ANR	3103884	Identifier	_dot_file_name_suffix		3103730	0					
ANR	3103885	PrimaryExpression	0		3103730	1					
ANR	3103886	ExpressionStatement	_statusFileName = NULL	177:1:6265:6287	3103730	42	True				
ANR	3103887	AssignmentExpression	_statusFileName = NULL		3103730	0		=			
ANR	3103888	Identifier	_statusFileName		3103730	0					
ANR	3103889	Identifier	NULL		3103730	1					
ANR	3103890	ExpressionStatement	_statusFileOutdated = true	178:1:6290:6316	3103730	43	True				
ANR	3103891	AssignmentExpression	_statusFileOutdated = true		3103730	0		=			
ANR	3103892	Identifier	_statusFileOutdated		3103730	0					
ANR	3103893	Identifier	true		3103730	1					
ANR	3103894	ExpressionStatement	_minStatusUpdateTime = 0	179:1:6319:6343	3103730	44	True				
ANR	3103895	AssignmentExpression	_minStatusUpdateTime = 0		3103730	0		=			
ANR	3103896	Identifier	_minStatusUpdateTime		3103730	0					
ANR	3103897	PrimaryExpression	0		3103730	1					
ANR	3103898	ExpressionStatement	_lastStatusUpdateTimestamp = 0	180:1:6346:6376	3103730	45	True				
ANR	3103899	AssignmentExpression	_lastStatusUpdateTimestamp = 0		3103730	0		=			
ANR	3103900	Identifier	_lastStatusUpdateTimestamp		3103730	0					
ANR	3103901	PrimaryExpression	0		3103730	1					
ANR	3103902	ExpressionStatement	_nextSubmitTime = 0	182:1:6380:6399	3103730	46	True				
ANR	3103903	AssignmentExpression	_nextSubmitTime = 0		3103730	0		=			
ANR	3103904	Identifier	_nextSubmitTime		3103730	0					
ANR	3103905	PrimaryExpression	0		3103730	1					
ANR	3103906	ExpressionStatement	_nextSubmitDelay = 1	183:1:6402:6422	3103730	47	True				
ANR	3103907	AssignmentExpression	_nextSubmitDelay = 1		3103730	0		=			
ANR	3103908	Identifier	_nextSubmitDelay		3103730	0					
ANR	3103909	PrimaryExpression	1		3103730	1					
ANR	3103910	ExpressionStatement	_recovery = false	184:1:6425:6442	3103730	48	True				
ANR	3103911	AssignmentExpression	_recovery = false		3103730	0		=			
ANR	3103912	Identifier	_recovery		3103730	0					
ANR	3103913	Identifier	false		3103730	1					
ANR	3103914	ExpressionStatement	_abortOnScarySubmit = true	185:1:6445:6471	3103730	49	True				
ANR	3103915	AssignmentExpression	_abortOnScarySubmit = true		3103730	0		=			
ANR	3103916	Identifier	_abortOnScarySubmit		3103730	0					
ANR	3103917	Identifier	true		3103730	1					
ANR	3103918	ExpressionStatement	_configFile = NULL	186:1:6474:6492	3103730	50	True				
ANR	3103919	AssignmentExpression	_configFile = NULL		3103730	0		=			
ANR	3103920	Identifier	_configFile		3103730	0					
ANR	3103921	Identifier	NULL		3103730	1					
ANR	3103922	ExpressionStatement	_pendingReportInterval = - 1	190:1:6582:6609	3103730	51	True				
ANR	3103923	AssignmentExpression	_pendingReportInterval = - 1		3103730	0		=			
ANR	3103924	Identifier	_pendingReportInterval		3103730	0					
ANR	3103925	UnaryOperationExpression	- 1		3103730	1					
ANR	3103926	UnaryOperator	-		3103730	0					
ANR	3103927	PrimaryExpression	1		3103730	1					
ANR	3103928	ExpressionStatement	_lastPendingNodePrintTime = 0	191:1:6612:6641	3103730	52	True				
ANR	3103929	AssignmentExpression	_lastPendingNodePrintTime = 0		3103730	0		=			
ANR	3103930	Identifier	_lastPendingNodePrintTime		3103730	0					
ANR	3103931	PrimaryExpression	0		3103730	1					
ANR	3103932	ExpressionStatement	_lastEventTime = 0	192:1:6644:6662	3103730	53	True				
ANR	3103933	AssignmentExpression	_lastEventTime = 0		3103730	0		=			
ANR	3103934	Identifier	_lastEventTime		3103730	0					
ANR	3103935	PrimaryExpression	0		3103730	1					
ANR	3103936	ExpressionStatement	"_nfsLogIsError = param_boolean ( ""DAGMAN_LOG_ON_NFS_IS_ERROR"" , true )"	194:1:6666:6734	3103730	54	True				
ANR	3103937	AssignmentExpression	"_nfsLogIsError = param_boolean ( ""DAGMAN_LOG_ON_NFS_IS_ERROR"" , true )"		3103730	0		=			
ANR	3103938	Identifier	_nfsLogIsError		3103730	0					
ANR	3103939	CallExpression	"param_boolean ( ""DAGMAN_LOG_ON_NFS_IS_ERROR"" , true )"		3103730	1					
ANR	3103940	Callee	param_boolean		3103730	0					
ANR	3103941	Identifier	param_boolean		3103730	0					
ANR	3103942	ArgumentList	"""DAGMAN_LOG_ON_NFS_IS_ERROR"""		3103730	1					
ANR	3103943	Argument	"""DAGMAN_LOG_ON_NFS_IS_ERROR"""		3103730	0					
ANR	3103944	PrimaryExpression	"""DAGMAN_LOG_ON_NFS_IS_ERROR"""		3103730	0					
ANR	3103945	Argument	true		3103730	1					
ANR	3103946	Identifier	true		3103730	0					
ANR	3103947	ReturnStatement	return ;	196:1:6738:6744	3103730	55	True				
ANR	3103948	Identifier	Dag :: Dag		3103730	1					
ANR	3103949	ParameterList	"StringList & dagFiles , const int maxJobsSubmitted , const int maxPreScripts , const int maxPostScripts , bool allowLogError , bool useDagDir , int maxIdleJobProcs , bool retrySubmitFirst , bool retryNodeFirst , const char * condorRmExe , const char * storkRmExe , const CondorID * DAGManJobID , bool prohibitMultiJobs , bool submitDepthFirst , const char * defaultNodeLog , bool generateSubdagSubmits , SubmitDagDeepOptions * submitDagDeepOpts , bool isSplice , const MyString & spliceScope"		3103730	2					
ANR	3103950	Parameter	StringList & dagFiles	74:22:2418:2437	3103730	0	True				
ANR	3103951	ParameterType	StringList &		3103730	0					
ANR	3103952	Identifier	dagFiles		3103730	1					
ANR	3103953	Parameter	const int maxJobsSubmitted	75:4:2444:2469	3103730	1	True				
ANR	3103954	ParameterType	const int		3103730	0					
ANR	3103955	Identifier	maxJobsSubmitted		3103730	1					
ANR	3103956	Parameter	const int maxPreScripts	76:4:2476:2498	3103730	2	True				
ANR	3103957	ParameterType	const int		3103730	0					
ANR	3103958	Identifier	maxPreScripts		3103730	1					
ANR	3103959	Parameter	const int maxPostScripts	76:29:2501:2524	3103730	3	True				
ANR	3103960	ParameterType	const int		3103730	0					
ANR	3103961	Identifier	maxPostScripts		3103730	1					
ANR	3103962	Parameter	bool allowLogError	77:4:2531:2548	3103730	4	True				
ANR	3103963	ParameterType	bool		3103730	0					
ANR	3103964	Identifier	allowLogError		3103730	1					
ANR	3103965	Parameter	bool useDagDir	78:4:2555:2568	3103730	5	True				
ANR	3103966	ParameterType	bool		3103730	0					
ANR	3103967	Identifier	useDagDir		3103730	1					
ANR	3103968	Parameter	int maxIdleJobProcs	78:20:2571:2589	3103730	6	True				
ANR	3103969	ParameterType	int		3103730	0					
ANR	3103970	Identifier	maxIdleJobProcs		3103730	1					
ANR	3103971	Parameter	bool retrySubmitFirst	78:41:2592:2612	3103730	7	True				
ANR	3103972	ParameterType	bool		3103730	0					
ANR	3103973	Identifier	retrySubmitFirst		3103730	1					
ANR	3103974	Parameter	bool retryNodeFirst	79:4:2619:2637	3103730	8	True				
ANR	3103975	ParameterType	bool		3103730	0					
ANR	3103976	Identifier	retryNodeFirst		3103730	1					
ANR	3103977	Parameter	const char * condorRmExe	79:25:2640:2662	3103730	9	True				
ANR	3103978	ParameterType	const char *		3103730	0					
ANR	3103979	Identifier	condorRmExe		3103730	1					
ANR	3103980	Parameter	const char * storkRmExe	80:4:2669:2690	3103730	10	True				
ANR	3103981	ParameterType	const char *		3103730	0					
ANR	3103982	Identifier	storkRmExe		3103730	1					
ANR	3103983	Parameter	const CondorID * DAGManJobID	80:28:2693:2719	3103730	11	True				
ANR	3103984	ParameterType	const CondorID *		3103730	0					
ANR	3103985	Identifier	DAGManJobID		3103730	1					
ANR	3103986	Parameter	bool prohibitMultiJobs	81:4:2726:2747	3103730	12	True				
ANR	3103987	ParameterType	bool		3103730	0					
ANR	3103988	Identifier	prohibitMultiJobs		3103730	1					
ANR	3103989	Parameter	bool submitDepthFirst	81:28:2750:2770	3103730	13	True				
ANR	3103990	ParameterType	bool		3103730	0					
ANR	3103991	Identifier	submitDepthFirst		3103730	1					
ANR	3103992	Parameter	const char * defaultNodeLog	82:4:2777:2802	3103730	14	True				
ANR	3103993	ParameterType	const char *		3103730	0					
ANR	3103994	Identifier	defaultNodeLog		3103730	1					
ANR	3103995	Parameter	bool generateSubdagSubmits	82:32:2805:2830	3103730	15	True				
ANR	3103996	ParameterType	bool		3103730	0					
ANR	3103997	Identifier	generateSubdagSubmits		3103730	1					
ANR	3103998	Parameter	SubmitDagDeepOptions * submitDagDeepOpts	83:4:2837:2875	3103730	16	True				
ANR	3103999	ParameterType	SubmitDagDeepOptions *		3103730	0					
ANR	3104000	Identifier	submitDagDeepOpts		3103730	1					
ANR	3104001	Parameter	bool isSplice	83:45:2878:2890	3103730	17	True				
ANR	3104002	ParameterType	bool		3103730	0					
ANR	3104003	Identifier	isSplice		3103730	1					
ANR	3104004	Parameter	const MyString & spliceScope	84:4:2897:2923	3103730	18	True				
ANR	3104005	ParameterType	const MyString &		3103730	0					
ANR	3104006	Identifier	spliceScope		3103730	1					
ANR	3104007	CFGEntryNode	ENTRY		3103730		True				
ANR	3104008	CFGExitNode	EXIT		3103730		True				
ANR	3104009	Symbol	DFS_ORDER		3103730						
ANR	3104010	Symbol	isSplice		3103730						
ANR	3104011	Symbol	spliceScope		3103730						
ANR	3104012	Symbol	maxIdleJobProcs		3103730						
ANR	3104013	Symbol	_isSplice		3103730						
ANR	3104014	Symbol	dagFiles		3103730						
ANR	3104015	Symbol	submitDagDeepOpts		3103730						
ANR	3104016	Symbol	_dot_file_name		3103730						
ANR	3104017	Symbol	_readyQ		3103730						
ANR	3104018	Symbol	_configFile		3103730						
ANR	3104019	Symbol	defaultNodeLog		3103730						
ANR	3104020	Symbol	maxJobsSubmitted		3103730						
ANR	3104021	Symbol	allowLogError		3103730						
ANR	3104022	Symbol	_nfsLogIsError		3103730						
ANR	3104023	Symbol	NULL		3103730						
ANR	3104024	Symbol	__FILE__		3103730						
ANR	3104025	Symbol	this		3103730						
ANR	3104026	Symbol	param_boolean		3103730						
ANR	3104027	Symbol	_lastEventTime		3103730						
ANR	3104028	Symbol	_nextSubmitTime		3103730						
ANR	3104029	Symbol	dagFiles . number		3103730						
ANR	3104030	Symbol	_recovery		3103730						
ANR	3104031	Symbol	maxPostScripts		3103730						
ANR	3104032	Symbol	true		3103730						
ANR	3104033	Symbol	retrySubmitFirst		3103730						
ANR	3104034	Symbol	DAGManJobID		3103730						
ANR	3104035	Symbol	submitDepthFirst		3103730						
ANR	3104036	Symbol	_update_dot_file		3103730						
ANR	3104037	Symbol	_preScriptQ		3103730						
ANR	3104038	Symbol	_submitQ		3103730						
ANR	3104039	Symbol	_postScriptQ		3103730						
ANR	3104040	Symbol	prohibitMultiJobs		3103730						
ANR	3104041	Symbol	storkRmExe		3103730						
ANR	3104042	Symbol	_dot_include_file_name		3103730						
ANR	3104043	Symbol	_abortOnScarySubmit		3103730						
ANR	3104044	Symbol	retryNodeFirst		3103730						
ANR	3104045	Symbol	useDagDir		3103730						
ANR	3104046	Symbol	m_directory		3103730						
ANR	3104047	Symbol	_minStatusUpdateTime		3103730						
ANR	3104048	Symbol	false		3103730						
ANR	3104049	Symbol	condorRmExe		3103730						
ANR	3104050	Symbol	__LINE__		3103730						
ANR	3104051	Symbol	_statusFileOutdated		3103730						
ANR	3104052	Symbol	generateSubdagSubmits		3103730						
ANR	3104053	Symbol	_lastPendingNodePrintTime		3103730						
ANR	3104054	Symbol	_nextSubmitDelay		3103730						
ANR	3104055	Symbol	maxPreScripts		3103730						
ANR	3104056	Symbol	_statusFileName		3103730						
ANR	3104057	Symbol	_lastStatusUpdateTimestamp		3103730						
ANR	3104058	Symbol	_pendingReportInterval		3103730						
ANR	3104059	Symbol	_overwrite_dot_file		3103730						
ANR	3104060	Symbol	_dot_file_name_suffix		3103730						
ANR	3104061	Function	Dag :: ~Dag	200:0:6825:7284							
ANR	3104062	FunctionDef	Dag :: ~Dag ()		3104061	0					
ANR	3104063	CompoundStatement		200:12:6837:7284	3104061	0					
ANR	3104064	IdentifierDeclStatement	Job * job = NULL ;	204:4:6936:6951	3104061	0	True				
ANR	3104065	IdentifierDecl	* job = NULL		3104061	0					
ANR	3104066	IdentifierDeclType	Job *		3104061	0					
ANR	3104067	Identifier	job		3104061	1					
ANR	3104068	AssignmentExpression	* job = NULL		3104061	2		=			
ANR	3104069	Identifier	NULL		3104061	0					
ANR	3104070	Identifier	NULL		3104061	1					
ANR	3104071	ExpressionStatement	_jobs . Rewind ( )	205:4:6957:6971	3104061	1	True				
ANR	3104072	CallExpression	_jobs . Rewind ( )		3104061	0					
ANR	3104073	Callee	_jobs . Rewind		3104061	0					
ANR	3104074	MemberAccess	_jobs . Rewind		3104061	0					
ANR	3104075	Identifier	_jobs		3104061	0					
ANR	3104076	Identifier	Rewind		3104061	1					
ANR	3104077	ArgumentList			3104061	1					
ANR	3104078	WhileStatement	while ( ( job = _jobs . Next ( ) ) )		3104061	2					
ANR	3104079	Condition	job = _jobs . Next ( )	206:11:6984:7003	3104061	0	True				
ANR	3104080	AssignmentExpression	job = _jobs . Next ( )		3104061	0		=			
ANR	3104081	Identifier	job		3104061	0					
ANR	3104082	CallExpression	_jobs . Next ( )		3104061	1					
ANR	3104083	Callee	_jobs . Next		3104061	0					
ANR	3104084	MemberAccess	_jobs . Next		3104061	0					
ANR	3104085	Identifier	_jobs		3104061	0					
ANR	3104086	Identifier	Next		3104061	1					
ANR	3104087	ArgumentList			3104061	1					
ANR	3104088	CompoundStatement		7:34:169:169	3104061	1					
ANR	3104089	ExpressionStatement	ASSERT ( job != NULL )	207:6:7015:7036	3104061	0	True				
ANR	3104090	CallExpression	ASSERT ( job != NULL )		3104061	0					
ANR	3104091	Callee	ASSERT		3104061	0					
ANR	3104092	Identifier	ASSERT		3104061	0					
ANR	3104093	ArgumentList	job != NULL		3104061	1					
ANR	3104094	Argument	job != NULL		3104061	0					
ANR	3104095	EqualityExpression	job != NULL		3104061	0		!=			
ANR	3104096	Identifier	job		3104061	0					
ANR	3104097	Identifier	NULL		3104061	1					
ANR	3104098	Statement	delete	208:6:7044:7049	3104061	1	True				
ANR	3104099	ExpressionStatement	job	208:13:7051:7054	3104061	2	True				
ANR	3104100	Identifier	job		3104061	0					
ANR	3104101	ExpressionStatement	_jobs . DeleteCurrent ( )	209:6:7062:7083	3104061	3	True				
ANR	3104102	CallExpression	_jobs . DeleteCurrent ( )		3104061	0					
ANR	3104103	Callee	_jobs . DeleteCurrent		3104061	0					
ANR	3104104	MemberAccess	_jobs . DeleteCurrent		3104061	0					
ANR	3104105	Identifier	_jobs		3104061	0					
ANR	3104106	Identifier	DeleteCurrent		3104061	1					
ANR	3104107	ArgumentList			3104061	1					
ANR	3104108	Statement	delete	212:4:7096:7101	3104061	3	True				
ANR	3104109	ExpressionStatement	_preScriptQ	212:11:7103:7114	3104061	4	True				
ANR	3104110	Identifier	_preScriptQ		3104061	0					
ANR	3104111	Statement	delete	213:4:7120:7125	3104061	5	True				
ANR	3104112	ExpressionStatement	_postScriptQ	213:11:7127:7139	3104061	6	True				
ANR	3104113	Identifier	_postScriptQ		3104061	0					
ANR	3104114	Statement	delete	214:4:7145:7150	3104061	7	True				
ANR	3104115	ExpressionStatement	_submitQ	214:11:7152:7160	3104061	8	True				
ANR	3104116	Identifier	_submitQ		3104061	0					
ANR	3104117	Statement	delete	215:4:7166:7171	3104061	9	True				
ANR	3104118	ExpressionStatement	_readyQ	215:11:7173:7180	3104061	10	True				
ANR	3104119	Identifier	_readyQ		3104061	0					
ANR	3104120	Statement	delete	217:1:7184:7189	3104061	11	True				
ANR	3104121	Statement	[	217:7:7190:7190	3104061	12	True				
ANR	3104122	Statement	]	217:8:7191:7191	3104061	13	True				
ANR	3104123	ExpressionStatement	_dot_file_name	217:10:7193:7207	3104061	14	True				
ANR	3104124	Identifier	_dot_file_name		3104061	0					
ANR	3104125	Statement	delete	218:1:7210:7215	3104061	15	True				
ANR	3104126	Statement	[	218:7:7216:7216	3104061	16	True				
ANR	3104127	Statement	]	218:8:7217:7217	3104061	17	True				
ANR	3104128	ExpressionStatement	_dot_include_file_name	218:10:7219:7241	3104061	18	True				
ANR	3104129	Identifier	_dot_include_file_name		3104061	0					
ANR	3104130	Statement	delete	220:1:7245:7250	3104061	19	True				
ANR	3104131	Statement	[	220:7:7251:7251	3104061	20	True				
ANR	3104132	Statement	]	220:8:7252:7252	3104061	21	True				
ANR	3104133	ExpressionStatement	_statusFileName	220:10:7254:7269	3104061	22	True				
ANR	3104134	Identifier	_statusFileName		3104061	0					
ANR	3104135	ReturnStatement	return ;	222:4:7276:7282	3104061	23	True				
ANR	3104136	Identifier	Dag :: ~Dag		3104061	1					
ANR	3104137	ParameterList			3104061	2					
ANR	3104138	CFGEntryNode	ENTRY		3104061		True				
ANR	3104139	CFGExitNode	EXIT		3104061		True				
ANR	3104140	Symbol	NULL		3104061						
ANR	3104141	Symbol	_jobs		3104061						
ANR	3104142	Symbol	job		3104061						
ANR	3104143	Symbol	_jobs . Next		3104061						
ANR	3104144	Function	Dag :: Bootstrap	226:0:7363:10570							
ANR	3104145	FunctionDef	Dag :: Bootstrap (bool recovery)		3104144	0					
ANR	3104146	CompoundStatement		227:0:7399:10570	3104144	0					
ANR	3104147	IdentifierDeclStatement	Job * job ;	228:4:7405:7413	3104144	0	True				
ANR	3104148	IdentifierDecl	* job		3104144	0					
ANR	3104149	IdentifierDeclType	Job *		3104144	0					
ANR	3104150	Identifier	job		3104144	1					
ANR	3104151	IdentifierDeclStatement	ListIterator < Job > jobs ( _jobs ) ;	229:4:7419:7449	3104144	1	True				
ANR	3104152	IdentifierDecl	jobs ( _jobs )		3104144	0					
ANR	3104153	IdentifierDeclType	ListIterator < Job >		3104144	0					
ANR	3104154	Identifier	jobs		3104144	1					
ANR	3104155	Identifier	_jobs		3104144	2					
ANR	3104156	ExpressionStatement	ASSERT ( _isSplice == false )	233:1:7545:7573	3104144	2	True				
ANR	3104157	CallExpression	ASSERT ( _isSplice == false )		3104144	0					
ANR	3104158	Callee	ASSERT		3104144	0					
ANR	3104159	Identifier	ASSERT		3104144	0					
ANR	3104160	ArgumentList	_isSplice == false		3104144	1					
ANR	3104161	Argument	_isSplice == false		3104144	0					
ANR	3104162	EqualityExpression	_isSplice == false		3104144	0		==			
ANR	3104163	Identifier	_isSplice		3104144	0					
ANR	3104164	Identifier	false		3104144	1					
ANR	3104165	ExpressionStatement	jobs . ToBeforeFirst ( )	237:4:7678:7698	3104144	3	True				
ANR	3104166	CallExpression	jobs . ToBeforeFirst ( )		3104144	0					
ANR	3104167	Callee	jobs . ToBeforeFirst		3104144	0					
ANR	3104168	MemberAccess	jobs . ToBeforeFirst		3104144	0					
ANR	3104169	Identifier	jobs		3104144	0					
ANR	3104170	Identifier	ToBeforeFirst		3104144	1					
ANR	3104171	ArgumentList			3104144	1					
ANR	3104172	WhileStatement	while ( jobs . Next ( job ) )		3104144	4					
ANR	3104173	Condition	jobs . Next ( job )	238:11:7711:7726	3104144	0	True				
ANR	3104174	CallExpression	jobs . Next ( job )		3104144	0					
ANR	3104175	Callee	jobs . Next		3104144	0					
ANR	3104176	MemberAccess	jobs . Next		3104144	0					
ANR	3104177	Identifier	jobs		3104144	0					
ANR	3104178	Identifier	Next		3104144	1					
ANR	3104179	ArgumentList	job		3104144	1					
ANR	3104180	Argument	job		3104144	0					
ANR	3104181	Identifier	job		3104144	0					
ANR	3104182	CompoundStatement		12:30:330:330	3104144	1					
ANR	3104183	IfStatement	if ( job -> GetStatus ( ) == Job :: STATUS_DONE )		3104144	0					
ANR	3104184	Condition	job -> GetStatus ( ) == Job :: STATUS_DONE	239:6:7738:7773	3104144	0	True				
ANR	3104185	EqualityExpression	job -> GetStatus ( ) == Job :: STATUS_DONE		3104144	0		==			
ANR	3104186	CallExpression	job -> GetStatus ( )		3104144	0					
ANR	3104187	Callee	job -> GetStatus		3104144	0					
ANR	3104188	PtrMemberAccess	job -> GetStatus		3104144	0					
ANR	3104189	Identifier	job		3104144	0					
ANR	3104190	Identifier	GetStatus		3104144	1					
ANR	3104191	ArgumentList			3104144	1					
ANR	3104192	Identifier	Job :: STATUS_DONE		3104144	1					
ANR	3104193	CompoundStatement		13:45:377:377	3104144	1					
ANR	3104194	ExpressionStatement	"TerminateJob ( job , false , true )"	240:3:7782:7814	3104144	0	True				
ANR	3104195	CallExpression	"TerminateJob ( job , false , true )"		3104144	0					
ANR	3104196	Callee	TerminateJob		3104144	0					
ANR	3104197	Identifier	TerminateJob		3104144	0					
ANR	3104198	ArgumentList	job		3104144	1					
ANR	3104199	Argument	job		3104144	0					
ANR	3104200	Identifier	job		3104144	0					
ANR	3104201	Argument	false		3104144	1					
ANR	3104202	Identifier	false		3104144	0					
ANR	3104203	Argument	true		3104144	2					
ANR	3104204	Identifier	true		3104144	0					
ANR	3104205	ExpressionStatement	"debug_printf ( DEBUG_VERBOSE , ""Number of pre-completed nodes: %d\\n"" , NumNodesDone ( ) )"	243:4:7830:7920	3104144	5	True				
ANR	3104206	CallExpression	"debug_printf ( DEBUG_VERBOSE , ""Number of pre-completed nodes: %d\\n"" , NumNodesDone ( ) )"		3104144	0					
ANR	3104207	Callee	debug_printf		3104144	0					
ANR	3104208	Identifier	debug_printf		3104144	0					
ANR	3104209	ArgumentList	DEBUG_VERBOSE		3104144	1					
ANR	3104210	Argument	DEBUG_VERBOSE		3104144	0					
ANR	3104211	Identifier	DEBUG_VERBOSE		3104144	0					
ANR	3104212	Argument	"""Number of pre-completed nodes: %d\\n"""		3104144	1					
ANR	3104213	PrimaryExpression	"""Number of pre-completed nodes: %d\\n"""		3104144	0					
ANR	3104214	Argument	NumNodesDone ( )		3104144	2					
ANR	3104215	CallExpression	NumNodesDone ( )		3104144	0					
ANR	3104216	Callee	NumNodesDone		3104144	0					
ANR	3104217	Identifier	NumNodesDone		3104144	0					
ANR	3104218	ArgumentList			3104144	1					
ANR	3104219	IfStatement	if ( recovery )		3104144	6					
ANR	3104220	Condition	recovery	246:8:7935:7942	3104144	0	True				
ANR	3104221	Identifier	recovery		3104144	0					
ANR	3104222	CompoundStatement		20:18:545:545	3104144	1					
ANR	3104223	ExpressionStatement	_recovery = true	247:2:7949:7965	3104144	0	True				
ANR	3104224	AssignmentExpression	_recovery = true		3104144	0		=			
ANR	3104225	Identifier	_recovery		3104144	0					
ANR	3104226	Identifier	true		3104144	1					
ANR	3104227	Statement	debug_printf	249:8:7976:7987	3104144	1	True				
ANR	3104228	Statement	(	249:20:7988:7988	3104144	2	True				
ANR	3104229	Statement	DEBUG_NORMAL	249:22:7990:8001	3104144	3	True				
ANR	3104230	Statement	","	249:34:8002:8002	3104144	4	True				
ANR	3104231	Statement	"""Running in RECOVERY mode... """	249:36:8004:8033	3104144	5	True				
ANR	3104232	Statement	""">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>\\n"""	250:5:8040:8073	3104144	6	True				
ANR	3104233	Statement	)	250:40:8075:8075	3104144	7	True				
ANR	3104234	ExpressionStatement		250:41:8076:8076	3104144	8	True				
ANR	3104235	ExpressionStatement	_jobstateLog . WriteRecoveryStarted ( )	251:2:8080:8115	3104144	9	True				
ANR	3104236	CallExpression	_jobstateLog . WriteRecoveryStarted ( )		3104144	0					
ANR	3104237	Callee	_jobstateLog . WriteRecoveryStarted		3104144	0					
ANR	3104238	MemberAccess	_jobstateLog . WriteRecoveryStarted		3104144	0					
ANR	3104239	Identifier	_jobstateLog		3104144	0					
ANR	3104240	Identifier	WriteRecoveryStarted		3104144	1					
ANR	3104241	ArgumentList			3104144	1					
ANR	3104242	ExpressionStatement	_jobstateLog . InitializeRecovery ( )	252:2:8119:8152	3104144	10	True				
ANR	3104243	CallExpression	_jobstateLog . InitializeRecovery ( )		3104144	0					
ANR	3104244	Callee	_jobstateLog . InitializeRecovery		3104144	0					
ANR	3104245	MemberAccess	_jobstateLog . InitializeRecovery		3104144	0					
ANR	3104246	Identifier	_jobstateLog		3104144	0					
ANR	3104247	Identifier	InitializeRecovery		3104144	1					
ANR	3104248	ArgumentList			3104144	1					
ANR	3104249	ExpressionStatement	debug_cache_start_caching ( )	262:2:8588:8615	3104144	11	True				
ANR	3104250	CallExpression	debug_cache_start_caching ( )		3104144	0					
ANR	3104251	Callee	debug_cache_start_caching		3104144	0					
ANR	3104252	Identifier	debug_cache_start_caching		3104144	0					
ANR	3104253	ArgumentList			3104144	1					
ANR	3104254	ExpressionStatement	jobs . ToBeforeFirst ( )	265:5:8685:8705	3104144	12	True				
ANR	3104255	CallExpression	jobs . ToBeforeFirst ( )		3104144	0					
ANR	3104256	Callee	jobs . ToBeforeFirst		3104144	0					
ANR	3104257	MemberAccess	jobs . ToBeforeFirst		3104144	0					
ANR	3104258	Identifier	jobs		3104144	0					
ANR	3104259	Identifier	ToBeforeFirst		3104144	1					
ANR	3104260	ArgumentList			3104144	1					
ANR	3104261	WhileStatement	while ( jobs . Next ( job ) )		3104144	13					
ANR	3104262	Condition	jobs . Next ( job )	266:12:8719:8734	3104144	0	True				
ANR	3104263	CallExpression	jobs . Next ( job )		3104144	0					
ANR	3104264	Callee	jobs . Next		3104144	0					
ANR	3104265	MemberAccess	jobs . Next		3104144	0					
ANR	3104266	Identifier	jobs		3104144	0					
ANR	3104267	Identifier	Next		3104144	1					
ANR	3104268	ArgumentList	job		3104144	1					
ANR	3104269	Argument	job		3104144	0					
ANR	3104270	Identifier	job		3104144	0					
ANR	3104271	CompoundStatement		40:31:1338:1338	3104144	1					
ANR	3104272	IfStatement	if ( job -> CanSubmit ( ) )		3104144	0					
ANR	3104273	Condition	job -> CanSubmit ( )	267:8:8748:8763	3104144	0	True				
ANR	3104274	CallExpression	job -> CanSubmit ( )		3104144	0					
ANR	3104275	Callee	job -> CanSubmit		3104144	0					
ANR	3104276	PtrMemberAccess	job -> CanSubmit		3104144	0					
ANR	3104277	Identifier	job		3104144	0					
ANR	3104278	Identifier	CanSubmit		3104144	1					
ANR	3104279	ArgumentList			3104144	1					
ANR	3104280	CompoundStatement		41:27:1367:1367	3104144	1					
ANR	3104281	IfStatement	"if ( ! job -> MonitorLogFile ( _condorLogRdr , _storkLogRdr , _nfsLogIsError , recovery , _defaultNodeLog ) )"		3104144	0					
ANR	3104282	Condition	"! job -> MonitorLogFile ( _condorLogRdr , _storkLogRdr , _nfsLogIsError , recovery , _defaultNodeLog )"	268:9:8778:8878	3104144	0	True				
ANR	3104283	UnaryOperationExpression	"! job -> MonitorLogFile ( _condorLogRdr , _storkLogRdr , _nfsLogIsError , recovery , _defaultNodeLog )"		3104144	0					
ANR	3104284	UnaryOperator	!		3104144	0					
ANR	3104285	CallExpression	"job -> MonitorLogFile ( _condorLogRdr , _storkLogRdr , _nfsLogIsError , recovery , _defaultNodeLog )"		3104144	1					
ANR	3104286	Callee	job -> MonitorLogFile		3104144	0					
ANR	3104287	PtrMemberAccess	job -> MonitorLogFile		3104144	0					
ANR	3104288	Identifier	job		3104144	0					
ANR	3104289	Identifier	MonitorLogFile		3104144	1					
ANR	3104290	ArgumentList	_condorLogRdr		3104144	1					
ANR	3104291	Argument	_condorLogRdr		3104144	0					
ANR	3104292	Identifier	_condorLogRdr		3104144	0					
ANR	3104293	Argument	_storkLogRdr		3104144	1					
ANR	3104294	Identifier	_storkLogRdr		3104144	0					
ANR	3104295	Argument	_nfsLogIsError		3104144	2					
ANR	3104296	Identifier	_nfsLogIsError		3104144	0					
ANR	3104297	Argument	recovery		3104144	3					
ANR	3104298	Identifier	recovery		3104144	0					
ANR	3104299	Argument	_defaultNodeLog		3104144	4					
ANR	3104300	Identifier	_defaultNodeLog		3104144	0					
ANR	3104301	CompoundStatement		43:53:1482:1482	3104144	1					
ANR	3104302	ExpressionStatement	debug_cache_stop_caching ( )	270:5:8889:8915	3104144	0	True				
ANR	3104303	CallExpression	debug_cache_stop_caching ( )		3104144	0					
ANR	3104304	Callee	debug_cache_stop_caching		3104144	0					
ANR	3104305	Identifier	debug_cache_stop_caching		3104144	0					
ANR	3104306	ArgumentList			3104144	1					
ANR	3104307	ExpressionStatement	_jobstateLog . WriteRecoveryFailure ( )	271:5:8922:8957	3104144	1	True				
ANR	3104308	CallExpression	_jobstateLog . WriteRecoveryFailure ( )		3104144	0					
ANR	3104309	Callee	_jobstateLog . WriteRecoveryFailure		3104144	0					
ANR	3104310	MemberAccess	_jobstateLog . WriteRecoveryFailure		3104144	0					
ANR	3104311	Identifier	_jobstateLog		3104144	0					
ANR	3104312	Identifier	WriteRecoveryFailure		3104144	1					
ANR	3104313	ArgumentList			3104144	1					
ANR	3104314	ReturnStatement	return false ;	272:5:8964:8976	3104144	2	True				
ANR	3104315	Identifier	false		3104144	0					
ANR	3104316	IfStatement	if ( CondorLogFileCount ( ) > 0 )		3104144	14					
ANR	3104317	Condition	CondorLogFileCount ( ) > 0	280:6:9197:9220	3104144	0	True				
ANR	3104318	RelationalExpression	CondorLogFileCount ( ) > 0		3104144	0		>			
ANR	3104319	CallExpression	CondorLogFileCount ( )		3104144	0					
ANR	3104320	Callee	CondorLogFileCount		3104144	0					
ANR	3104321	Identifier	CondorLogFileCount		3104144	0					
ANR	3104322	ArgumentList			3104144	1					
ANR	3104323	PrimaryExpression	0		3104144	1					
ANR	3104324	CompoundStatement		54:33:1824:1824	3104144	1					
ANR	3104325	IfStatement	"if ( ! ProcessLogEvents ( CONDORLOG , recovery ) )"		3104144	0					
ANR	3104326	Condition	"! ProcessLogEvents ( CONDORLOG , recovery )"	281:7:9233:9272	3104144	0	True				
ANR	3104327	UnaryOperationExpression	"! ProcessLogEvents ( CONDORLOG , recovery )"		3104144	0					
ANR	3104328	UnaryOperator	!		3104144	0					
ANR	3104329	CallExpression	"ProcessLogEvents ( CONDORLOG , recovery )"		3104144	1					
ANR	3104330	Callee	ProcessLogEvents		3104144	0					
ANR	3104331	Identifier	ProcessLogEvents		3104144	0					
ANR	3104332	ArgumentList	CONDORLOG		3104144	1					
ANR	3104333	Argument	CONDORLOG		3104144	0					
ANR	3104334	Identifier	CONDORLOG		3104144	0					
ANR	3104335	Argument	recovery		3104144	1					
ANR	3104336	Identifier	recovery		3104144	0					
ANR	3104337	CompoundStatement		55:50:1876:1876	3104144	1					
ANR	3104338	ExpressionStatement	_recovery = false	282:4:9282:9299	3104144	0	True				
ANR	3104339	AssignmentExpression	_recovery = false		3104144	0		=			
ANR	3104340	Identifier	_recovery		3104144	0					
ANR	3104341	Identifier	false		3104144	1					
ANR	3104342	ExpressionStatement	debug_cache_stop_caching ( )	283:4:9305:9331	3104144	1	True				
ANR	3104343	CallExpression	debug_cache_stop_caching ( )		3104144	0					
ANR	3104344	Callee	debug_cache_stop_caching		3104144	0					
ANR	3104345	Identifier	debug_cache_stop_caching		3104144	0					
ANR	3104346	ArgumentList			3104144	1					
ANR	3104347	ExpressionStatement	_jobstateLog . WriteRecoveryFailure ( )	284:4:9337:9372	3104144	2	True				
ANR	3104348	CallExpression	_jobstateLog . WriteRecoveryFailure ( )		3104144	0					
ANR	3104349	Callee	_jobstateLog . WriteRecoveryFailure		3104144	0					
ANR	3104350	MemberAccess	_jobstateLog . WriteRecoveryFailure		3104144	0					
ANR	3104351	Identifier	_jobstateLog		3104144	0					
ANR	3104352	Identifier	WriteRecoveryFailure		3104144	1					
ANR	3104353	ArgumentList			3104144	1					
ANR	3104354	ReturnStatement	return false ;	285:4:9378:9390	3104144	3	True				
ANR	3104355	Identifier	false		3104144	0					
ANR	3104356	IfStatement	if ( StorkLogFileCount ( ) > 0 )		3104144	15					
ANR	3104357	Condition	StorkLogFileCount ( ) > 0	288:6:9407:9429	3104144	0	True				
ANR	3104358	RelationalExpression	StorkLogFileCount ( ) > 0		3104144	0		>			
ANR	3104359	CallExpression	StorkLogFileCount ( )		3104144	0					
ANR	3104360	Callee	StorkLogFileCount		3104144	0					
ANR	3104361	Identifier	StorkLogFileCount		3104144	0					
ANR	3104362	ArgumentList			3104144	1					
ANR	3104363	PrimaryExpression	0		3104144	1					
ANR	3104364	CompoundStatement		62:32:2033:2033	3104144	1					
ANR	3104365	IfStatement	"if ( ! ProcessLogEvents ( DAPLOG , recovery ) )"		3104144	0					
ANR	3104366	Condition	"! ProcessLogEvents ( DAPLOG , recovery )"	289:7:9442:9478	3104144	0	True				
ANR	3104367	UnaryOperationExpression	"! ProcessLogEvents ( DAPLOG , recovery )"		3104144	0					
ANR	3104368	UnaryOperator	!		3104144	0					
ANR	3104369	CallExpression	"ProcessLogEvents ( DAPLOG , recovery )"		3104144	1					
ANR	3104370	Callee	ProcessLogEvents		3104144	0					
ANR	3104371	Identifier	ProcessLogEvents		3104144	0					
ANR	3104372	ArgumentList	DAPLOG		3104144	1					
ANR	3104373	Argument	DAPLOG		3104144	0					
ANR	3104374	Identifier	DAPLOG		3104144	0					
ANR	3104375	Argument	recovery		3104144	1					
ANR	3104376	Identifier	recovery		3104144	0					
ANR	3104377	CompoundStatement		63:47:2082:2082	3104144	1					
ANR	3104378	ExpressionStatement	_recovery = false	290:4:9488:9505	3104144	0	True				
ANR	3104379	AssignmentExpression	_recovery = false		3104144	0		=			
ANR	3104380	Identifier	_recovery		3104144	0					
ANR	3104381	Identifier	false		3104144	1					
ANR	3104382	ExpressionStatement	debug_cache_stop_caching ( )	291:4:9511:9537	3104144	1	True				
ANR	3104383	CallExpression	debug_cache_stop_caching ( )		3104144	0					
ANR	3104384	Callee	debug_cache_stop_caching		3104144	0					
ANR	3104385	Identifier	debug_cache_stop_caching		3104144	0					
ANR	3104386	ArgumentList			3104144	1					
ANR	3104387	ExpressionStatement	_jobstateLog . WriteRecoveryFailure ( )	292:4:9543:9578	3104144	2	True				
ANR	3104388	CallExpression	_jobstateLog . WriteRecoveryFailure ( )		3104144	0					
ANR	3104389	Callee	_jobstateLog . WriteRecoveryFailure		3104144	0					
ANR	3104390	MemberAccess	_jobstateLog . WriteRecoveryFailure		3104144	0					
ANR	3104391	Identifier	_jobstateLog		3104144	0					
ANR	3104392	Identifier	WriteRecoveryFailure		3104144	1					
ANR	3104393	ArgumentList			3104144	1					
ANR	3104394	ReturnStatement	return false ;	293:4:9584:9596	3104144	3	True				
ANR	3104395	Identifier	false		3104144	0					
ANR	3104396	ExpressionStatement	jobs . ToBeforeFirst ( )	298:2:9671:9691	3104144	16	True				
ANR	3104397	CallExpression	jobs . ToBeforeFirst ( )		3104144	0					
ANR	3104398	Callee	jobs . ToBeforeFirst		3104144	0					
ANR	3104399	MemberAccess	jobs . ToBeforeFirst		3104144	0					
ANR	3104400	Identifier	jobs		3104144	0					
ANR	3104401	Identifier	ToBeforeFirst		3104144	1					
ANR	3104402	ArgumentList			3104144	1					
ANR	3104403	WhileStatement	while ( jobs . Next ( job ) )		3104144	17					
ANR	3104404	Condition	jobs . Next ( job )	299:9:9702:9717	3104144	0	True				
ANR	3104405	CallExpression	jobs . Next ( job )		3104144	0					
ANR	3104406	Callee	jobs . Next		3104144	0					
ANR	3104407	MemberAccess	jobs . Next		3104144	0					
ANR	3104408	Identifier	jobs		3104144	0					
ANR	3104409	Identifier	Next		3104144	1					
ANR	3104410	ArgumentList	job		3104144	1					
ANR	3104411	Argument	job		3104144	0					
ANR	3104412	Identifier	job		3104144	0					
ANR	3104413	CompoundStatement		73:28:2321:2321	3104144	1					
ANR	3104414	IfStatement	if ( job -> GetStatus ( ) == Job :: STATUS_POSTRUN )		3104144	0					
ANR	3104415	Condition	job -> GetStatus ( ) == Job :: STATUS_POSTRUN	300:7:9730:9768	3104144	0	True				
ANR	3104416	EqualityExpression	job -> GetStatus ( ) == Job :: STATUS_POSTRUN		3104144	0		==			
ANR	3104417	CallExpression	job -> GetStatus ( )		3104144	0					
ANR	3104418	Callee	job -> GetStatus		3104144	0					
ANR	3104419	PtrMemberAccess	job -> GetStatus		3104144	0					
ANR	3104420	Identifier	job		3104144	0					
ANR	3104421	Identifier	GetStatus		3104144	1					
ANR	3104422	ArgumentList			3104144	1					
ANR	3104423	Identifier	Job :: STATUS_POSTRUN		3104144	1					
ANR	3104424	CompoundStatement		74:49:2372:2372	3104144	1					
ANR	3104425	IfStatement	"if ( ! RunPostScript ( job , _alwaysRunPost , 0 , false ) )"		3104144	0					
ANR	3104426	Condition	"! RunPostScript ( job , _alwaysRunPost , 0 , false )"	301:9:9783:9829	3104144	0	True				
ANR	3104427	UnaryOperationExpression	"! RunPostScript ( job , _alwaysRunPost , 0 , false )"		3104144	0					
ANR	3104428	UnaryOperator	!		3104144	0					
ANR	3104429	CallExpression	"RunPostScript ( job , _alwaysRunPost , 0 , false )"		3104144	1					
ANR	3104430	Callee	RunPostScript		3104144	0					
ANR	3104431	Identifier	RunPostScript		3104144	0					
ANR	3104432	ArgumentList	job		3104144	1					
ANR	3104433	Argument	job		3104144	0					
ANR	3104434	Identifier	job		3104144	0					
ANR	3104435	Argument	_alwaysRunPost		3104144	1					
ANR	3104436	Identifier	_alwaysRunPost		3104144	0					
ANR	3104437	Argument	0		3104144	2					
ANR	3104438	PrimaryExpression	0		3104144	0					
ANR	3104439	Argument	false		3104144	3					
ANR	3104440	Identifier	false		3104144	0					
ANR	3104441	CompoundStatement		75:59:2433:2433	3104144	1					
ANR	3104442	ExpressionStatement	debug_cache_stop_caching ( )	302:5:9840:9866	3104144	0	True				
ANR	3104443	CallExpression	debug_cache_stop_caching ( )		3104144	0					
ANR	3104444	Callee	debug_cache_stop_caching		3104144	0					
ANR	3104445	Identifier	debug_cache_stop_caching		3104144	0					
ANR	3104446	ArgumentList			3104144	1					
ANR	3104447	ExpressionStatement	_jobstateLog . WriteRecoveryFailure ( )	303:5:9873:9908	3104144	1	True				
ANR	3104448	CallExpression	_jobstateLog . WriteRecoveryFailure ( )		3104144	0					
ANR	3104449	Callee	_jobstateLog . WriteRecoveryFailure		3104144	0					
ANR	3104450	MemberAccess	_jobstateLog . WriteRecoveryFailure		3104144	0					
ANR	3104451	Identifier	_jobstateLog		3104144	0					
ANR	3104452	Identifier	WriteRecoveryFailure		3104144	1					
ANR	3104453	ArgumentList			3104144	1					
ANR	3104454	ReturnStatement	return false ;	304:5:9915:9927	3104144	2	True				
ANR	3104455	Identifier	false		3104144	0					
ANR	3104456	ExpressionStatement	set_fake_condorID ( _recoveryMaxfakeID )	309:2:9947:9986	3104144	18	True				
ANR	3104457	CallExpression	set_fake_condorID ( _recoveryMaxfakeID )		3104144	0					
ANR	3104458	Callee	set_fake_condorID		3104144	0					
ANR	3104459	Identifier	set_fake_condorID		3104144	0					
ANR	3104460	ArgumentList	_recoveryMaxfakeID		3104144	1					
ANR	3104461	Argument	_recoveryMaxfakeID		3104144	0					
ANR	3104462	Identifier	_recoveryMaxfakeID		3104144	0					
ANR	3104463	ExpressionStatement	debug_cache_stop_caching ( )	311:2:9991:10017	3104144	19	True				
ANR	3104464	CallExpression	debug_cache_stop_caching ( )		3104144	0					
ANR	3104465	Callee	debug_cache_stop_caching		3104144	0					
ANR	3104466	Identifier	debug_cache_stop_caching		3104144	0					
ANR	3104467	ArgumentList			3104144	1					
ANR	3104468	ExpressionStatement	_jobstateLog . WriteRecoveryFinished ( )	313:2:10022:10058	3104144	20	True				
ANR	3104469	CallExpression	_jobstateLog . WriteRecoveryFinished ( )		3104144	0					
ANR	3104470	Callee	_jobstateLog . WriteRecoveryFinished		3104144	0					
ANR	3104471	MemberAccess	_jobstateLog . WriteRecoveryFinished		3104144	0					
ANR	3104472	Identifier	_jobstateLog		3104144	0					
ANR	3104473	Identifier	WriteRecoveryFinished		3104144	1					
ANR	3104474	ArgumentList			3104144	1					
ANR	3104475	Statement	debug_printf	314:8:10068:10079	3104144	21	True				
ANR	3104476	Statement	(	314:20:10080:10080	3104144	22	True				
ANR	3104477	Statement	DEBUG_NORMAL	314:22:10082:10093	3104144	23	True				
ANR	3104478	Statement	","	314:34:10094:10094	3104144	24	True				
ANR	3104479	Statement	"""...done with RECOVERY mode """	314:36:10096:10124	3104144	25	True				
ANR	3104480	Statement	"""<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<\\n"""	315:5:10131:10164	3104144	26	True				
ANR	3104481	Statement	)	315:40:10166:10166	3104144	27	True				
ANR	3104482	ExpressionStatement		315:41:10167:10167	3104144	28	True				
ANR	3104483	ExpressionStatement	print_status ( )	316:2:10171:10185	3104144	29	True				
ANR	3104484	CallExpression	print_status ( )		3104144	0					
ANR	3104485	Callee	print_status		3104144	0					
ANR	3104486	Identifier	print_status		3104144	0					
ANR	3104487	ArgumentList			3104144	1					
ANR	3104488	ExpressionStatement	_recovery = false	318:2:10190:10207	3104144	30	True				
ANR	3104489	AssignmentExpression	_recovery = false		3104144	0		=			
ANR	3104490	Identifier	_recovery		3104144	0					
ANR	3104491	Identifier	false		3104144	1					
ANR	3104492	IfStatement	if ( DEBUG_LEVEL ( DEBUG_DEBUG_2 ) )		3104144	7					
ANR	3104493	Condition	DEBUG_LEVEL ( DEBUG_DEBUG_2 )	321:8:10225:10252	3104144	0	True				
ANR	3104494	CallExpression	DEBUG_LEVEL ( DEBUG_DEBUG_2 )		3104144	0					
ANR	3104495	Callee	DEBUG_LEVEL		3104144	0					
ANR	3104496	Identifier	DEBUG_LEVEL		3104144	0					
ANR	3104497	ArgumentList	DEBUG_DEBUG_2		3104144	1					
ANR	3104498	Argument	DEBUG_DEBUG_2		3104144	0					
ANR	3104499	Identifier	DEBUG_DEBUG_2		3104144	0					
ANR	3104500	CompoundStatement		95:39:2856:2856	3104144	1					
ANR	3104501	ExpressionStatement	PrintJobList ( )	322:2:10260:10274	3104144	0	True				
ANR	3104502	CallExpression	PrintJobList ( )		3104144	0					
ANR	3104503	Callee	PrintJobList		3104144	0					
ANR	3104504	Identifier	PrintJobList		3104144	0					
ANR	3104505	ArgumentList			3104144	1					
ANR	3104506	ExpressionStatement	PrintReadyQ ( DEBUG_DEBUG_2 )	323:2:10278:10306	3104144	1	True				
ANR	3104507	CallExpression	PrintReadyQ ( DEBUG_DEBUG_2 )		3104144	0					
ANR	3104508	Callee	PrintReadyQ		3104144	0					
ANR	3104509	Identifier	PrintReadyQ		3104144	0					
ANR	3104510	ArgumentList	DEBUG_DEBUG_2		3104144	1					
ANR	3104511	Argument	DEBUG_DEBUG_2		3104144	0					
ANR	3104512	Identifier	DEBUG_DEBUG_2		3104144	0					
ANR	3104513	ExpressionStatement	jobs . ToBeforeFirst ( )	327:4:10375:10395	3104144	8	True				
ANR	3104514	CallExpression	jobs . ToBeforeFirst ( )		3104144	0					
ANR	3104515	Callee	jobs . ToBeforeFirst		3104144	0					
ANR	3104516	MemberAccess	jobs . ToBeforeFirst		3104144	0					
ANR	3104517	Identifier	jobs		3104144	0					
ANR	3104518	Identifier	ToBeforeFirst		3104144	1					
ANR	3104519	ArgumentList			3104144	1					
ANR	3104520	WhileStatement	while ( jobs . Next ( job ) )		3104144	9					
ANR	3104521	Condition	jobs . Next ( job )	328:11:10408:10423	3104144	0	True				
ANR	3104522	CallExpression	jobs . Next ( job )		3104144	0					
ANR	3104523	Callee	jobs . Next		3104144	0					
ANR	3104524	MemberAccess	jobs . Next		3104144	0					
ANR	3104525	Identifier	jobs		3104144	0					
ANR	3104526	Identifier	Next		3104144	1					
ANR	3104527	ArgumentList	job		3104144	1					
ANR	3104528	Argument	job		3104144	0					
ANR	3104529	Identifier	job		3104144	0					
ANR	3104530	CompoundStatement		102:30:3027:3027	3104144	1					
ANR	3104531	IfStatement	if ( job -> GetStatus ( ) == Job :: STATUS_READY && job -> IsEmpty ( Job :: Q_WAITING ) )		3104144	0					
ANR	3104532	Condition	job -> GetStatus ( ) == Job :: STATUS_READY && job -> IsEmpty ( Job :: Q_WAITING )	329:6:10435:10508	3104144	0	True				
ANR	3104533	AndExpression	job -> GetStatus ( ) == Job :: STATUS_READY && job -> IsEmpty ( Job :: Q_WAITING )		3104144	0		&&			
ANR	3104534	EqualityExpression	job -> GetStatus ( ) == Job :: STATUS_READY		3104144	0		==			
ANR	3104535	CallExpression	job -> GetStatus ( )		3104144	0					
ANR	3104536	Callee	job -> GetStatus		3104144	0					
ANR	3104537	PtrMemberAccess	job -> GetStatus		3104144	0					
ANR	3104538	Identifier	job		3104144	0					
ANR	3104539	Identifier	GetStatus		3104144	1					
ANR	3104540	ArgumentList			3104144	1					
ANR	3104541	Identifier	Job :: STATUS_READY		3104144	1					
ANR	3104542	CallExpression	job -> IsEmpty ( Job :: Q_WAITING )		3104144	1					
ANR	3104543	Callee	job -> IsEmpty		3104144	0					
ANR	3104544	PtrMemberAccess	job -> IsEmpty		3104144	0					
ANR	3104545	Identifier	job		3104144	0					
ANR	3104546	Identifier	IsEmpty		3104144	1					
ANR	3104547	ArgumentList	Job :: Q_WAITING		3104144	1					
ANR	3104548	Argument	Job :: Q_WAITING		3104144	0					
ANR	3104549	Identifier	Job :: Q_WAITING		3104144	0					
ANR	3104550	CompoundStatement		104:36:3112:3112	3104144	1					
ANR	3104551	ExpressionStatement	"StartNode ( job , false )"	331:3:10517:10540	3104144	0	True				
ANR	3104552	CallExpression	"StartNode ( job , false )"		3104144	0					
ANR	3104553	Callee	StartNode		3104144	0					
ANR	3104554	Identifier	StartNode		3104144	0					
ANR	3104555	ArgumentList	job		3104144	1					
ANR	3104556	Argument	job		3104144	0					
ANR	3104557	Identifier	job		3104144	0					
ANR	3104558	Argument	false		3104144	1					
ANR	3104559	Identifier	false		3104144	0					
ANR	3104560	ReturnStatement	return true ;	335:4:10557:10568	3104144	10	True				
ANR	3104561	Identifier	true		3104144	0					
ANR	3104562	ReturnType	bool		3104144	1					
ANR	3104563	Identifier	Dag :: Bootstrap		3104144	2					
ANR	3104564	ParameterList	bool recovery		3104144	3					
ANR	3104565	Parameter	bool recovery	226:21:7384:7396	3104144	0	True				
ANR	3104566	ParameterType	bool		3104144	0					
ANR	3104567	Identifier	recovery		3104144	1					
ANR	3104568	CFGEntryNode	ENTRY		3104144		True				
ANR	3104569	CFGExitNode	EXIT		3104144		True				
ANR	3104570	Symbol	RunPostScript		3104144						
ANR	3104571	Symbol	_isSplice		3104144						
ANR	3104572	Symbol	recovery		3104144						
ANR	3104573	Symbol	_jobstateLog		3104144						
ANR	3104574	Symbol	_condorLogRdr		3104144						
ANR	3104575	Symbol	CondorLogFileCount		3104144						
ANR	3104576	Symbol	_recoveryMaxfakeID		3104144						
ANR	3104577	Symbol	StorkLogFileCount		3104144						
ANR	3104578	Symbol	DAPLOG		3104144						
ANR	3104579	Symbol	Job :: STATUS_READY		3104144						
ANR	3104580	Symbol	DEBUG_DEBUG_2		3104144						
ANR	3104581	Symbol	Job :: STATUS_DONE		3104144						
ANR	3104582	Symbol	ProcessLogEvents		3104144						
ANR	3104583	Symbol	_alwaysRunPost		3104144						
ANR	3104584	Symbol	DEBUG_VERBOSE		3104144						
ANR	3104585	Symbol	Job :: Q_WAITING		3104144						
ANR	3104586	Symbol	jobs . Next		3104144						
ANR	3104587	Symbol	_nfsLogIsError		3104144						
ANR	3104588	Symbol	DEBUG_LEVEL		3104144						
ANR	3104589	Symbol	jobs		3104144						
ANR	3104590	Symbol	* job		3104144						
ANR	3104591	Symbol	false		3104144						
ANR	3104592	Symbol	NumNodesDone		3104144						
ANR	3104593	Symbol	_defaultNodeLog		3104144						
ANR	3104594	Symbol	CONDORLOG		3104144						
ANR	3104595	Symbol	Job :: STATUS_POSTRUN		3104144						
ANR	3104596	Symbol	job -> GetStatus		3104144						
ANR	3104597	Symbol	job -> IsEmpty		3104144						
ANR	3104598	Symbol	_recovery		3104144						
ANR	3104599	Symbol	job -> MonitorLogFile		3104144						
ANR	3104600	Symbol	true		3104144						
ANR	3104601	Symbol	job -> CanSubmit		3104144						
ANR	3104602	Symbol	job		3104144						
ANR	3104603	Symbol	_storkLogRdr		3104144						
ANR	3104604	Function	Dag :: AddDependency	339:0:10649:11329							
ANR	3104605	FunctionDef	"Dag :: AddDependency (Job * parent , Job * child)"		3104604	0					
ANR	3104606	CompoundStatement		341:0:10700:11329	3104604	0					
ANR	3104607	IfStatement	if ( ! parent || ! child )		3104604	0					
ANR	3104608	Condition	! parent || ! child	342:5:10707:10723	3104604	0	True				
ANR	3104609	OrExpression	! parent || ! child		3104604	0		||			
ANR	3104610	UnaryOperationExpression	! parent		3104604	0					
ANR	3104611	UnaryOperator	!		3104604	0					
ANR	3104612	Identifier	parent		3104604	1					
ANR	3104613	UnaryOperationExpression	! child		3104604	1					
ANR	3104614	UnaryOperator	!		3104604	0					
ANR	3104615	Identifier	child		3104604	1					
ANR	3104616	CompoundStatement		2:25:26:26	3104604	1					
ANR	3104617	ReturnStatement	return false ;	343:2:10731:10743	3104604	0	True				
ANR	3104618	Identifier	false		3104604	0					
ANR	3104619	ExpressionStatement	"debug_printf ( DEBUG_DEBUG_2 , ""Dag::AddDependency(%s, %s)\\n"" , parent -> GetJobName ( ) , child -> GetJobName ( ) )"	345:1:10749:10856	3104604	1	True				
ANR	3104620	CallExpression	"debug_printf ( DEBUG_DEBUG_2 , ""Dag::AddDependency(%s, %s)\\n"" , parent -> GetJobName ( ) , child -> GetJobName ( ) )"		3104604	0					
ANR	3104621	Callee	debug_printf		3104604	0					
ANR	3104622	Identifier	debug_printf		3104604	0					
ANR	3104623	ArgumentList	DEBUG_DEBUG_2		3104604	1					
ANR	3104624	Argument	DEBUG_DEBUG_2		3104604	0					
ANR	3104625	Identifier	DEBUG_DEBUG_2		3104604	0					
ANR	3104626	Argument	"""Dag::AddDependency(%s, %s)\\n"""		3104604	1					
ANR	3104627	PrimaryExpression	"""Dag::AddDependency(%s, %s)\\n"""		3104604	0					
ANR	3104628	Argument	parent -> GetJobName ( )		3104604	2					
ANR	3104629	CallExpression	parent -> GetJobName ( )		3104604	0					
ANR	3104630	Callee	parent -> GetJobName		3104604	0					
ANR	3104631	PtrMemberAccess	parent -> GetJobName		3104604	0					
ANR	3104632	Identifier	parent		3104604	0					
ANR	3104633	Identifier	GetJobName		3104604	1					
ANR	3104634	ArgumentList			3104604	1					
ANR	3104635	Argument	child -> GetJobName ( )		3104604	3					
ANR	3104636	CallExpression	child -> GetJobName ( )		3104604	0					
ANR	3104637	Callee	child -> GetJobName		3104604	0					
ANR	3104638	PtrMemberAccess	child -> GetJobName		3104604	0					
ANR	3104639	Identifier	child		3104604	0					
ANR	3104640	Identifier	GetJobName		3104604	1					
ANR	3104641	ArgumentList			3104604	1					
ANR	3104642	IfStatement	if ( ! parent -> AddChild ( child ) )		3104604	2					
ANR	3104643	Condition	! parent -> AddChild ( child )	347:5:10863:10888	3104604	0	True				
ANR	3104644	UnaryOperationExpression	! parent -> AddChild ( child )		3104604	0					
ANR	3104645	UnaryOperator	!		3104604	0					
ANR	3104646	CallExpression	parent -> AddChild ( child )		3104604	1					
ANR	3104647	Callee	parent -> AddChild		3104604	0					
ANR	3104648	PtrMemberAccess	parent -> AddChild		3104604	0					
ANR	3104649	Identifier	parent		3104604	0					
ANR	3104650	Identifier	AddChild		3104604	1					
ANR	3104651	ArgumentList	child		3104604	1					
ANR	3104652	Argument	child		3104604	0					
ANR	3104653	Identifier	child		3104604	0					
ANR	3104654	CompoundStatement		7:34:191:191	3104604	1					
ANR	3104655	ReturnStatement	return false ;	348:2:10896:10908	3104604	0	True				
ANR	3104656	Identifier	false		3104604	0					
ANR	3104657	IfStatement	if ( ! child -> AddParent ( parent ) )		3104604	3					
ANR	3104658	Condition	! child -> AddParent ( parent )	350:5:10918:10944	3104604	0	True				
ANR	3104659	UnaryOperationExpression	! child -> AddParent ( parent )		3104604	0					
ANR	3104660	UnaryOperator	!		3104604	0					
ANR	3104661	CallExpression	child -> AddParent ( parent )		3104604	1					
ANR	3104662	Callee	child -> AddParent		3104604	0					
ANR	3104663	PtrMemberAccess	child -> AddParent		3104604	0					
ANR	3104664	Identifier	child		3104604	0					
ANR	3104665	Identifier	AddParent		3104604	1					
ANR	3104666	ArgumentList	parent		3104604	1					
ANR	3104667	Argument	parent		3104604	0					
ANR	3104668	Identifier	parent		3104604	0					
ANR	3104669	CompoundStatement		10:35:247:247	3104604	1					
ANR	3104670	IfStatement	if ( ! parent -> RemoveChild ( child ) )		3104604	0					
ANR	3104671	Condition	! parent -> RemoveChild ( child )	353:6:11053:11081	3104604	0	True				
ANR	3104672	UnaryOperationExpression	! parent -> RemoveChild ( child )		3104604	0					
ANR	3104673	UnaryOperator	!		3104604	0					
ANR	3104674	CallExpression	parent -> RemoveChild ( child )		3104604	1					
ANR	3104675	Callee	parent -> RemoveChild		3104604	0					
ANR	3104676	PtrMemberAccess	parent -> RemoveChild		3104604	0					
ANR	3104677	Identifier	parent		3104604	0					
ANR	3104678	Identifier	RemoveChild		3104604	1					
ANR	3104679	ArgumentList	child		3104604	1					
ANR	3104680	Argument	child		3104604	0					
ANR	3104681	Identifier	child		3104604	0					
ANR	3104682	CompoundStatement		13:38:384:384	3104604	1					
ANR	3104683	Statement	EXCEPT	355:3:11142:11147	3104604	0	True				
ANR	3104684	Statement	(	355:9:11148:11148	3104604	1	True				
ANR	3104685	Statement	"""Fatal error attempting to add dependency between """	355:11:11150:11200	3104604	2	True				
ANR	3104686	Statement	"""%s (parent) and %s (child)"""	356:6:11208:11235	3104604	3	True				
ANR	3104687	Statement	","	356:34:11236:11236	3104604	4	True				
ANR	3104688	Statement	parent	357:6:11244:11249	3104604	5	True				
ANR	3104689	Statement	->	357:12:11250:11251	3104604	6	True				
ANR	3104690	Statement	GetJobName	357:14:11252:11261	3104604	7	True				
ANR	3104691	Statement	(	357:24:11262:11262	3104604	8	True				
ANR	3104692	Statement	)	357:25:11263:11263	3104604	9	True				
ANR	3104693	Statement	","	357:26:11264:11264	3104604	10	True				
ANR	3104694	Statement	child	357:28:11266:11270	3104604	11	True				
ANR	3104695	Statement	->	357:33:11271:11272	3104604	12	True				
ANR	3104696	Statement	GetJobName	357:35:11273:11282	3104604	13	True				
ANR	3104697	Statement	(	357:45:11283:11283	3104604	14	True				
ANR	3104698	Statement	)	357:46:11284:11284	3104604	15	True				
ANR	3104699	Statement	)	357:48:11286:11286	3104604	16	True				
ANR	3104700	ExpressionStatement		357:49:11287:11287	3104604	17	True				
ANR	3104701	ReturnStatement	return false ;	359:2:11295:11307	3104604	1	True				
ANR	3104702	Identifier	false		3104604	0					
ANR	3104703	ReturnStatement	return true ;	361:4:11316:11327	3104604	4	True				
ANR	3104704	Identifier	true		3104604	0					
ANR	3104705	ReturnType	bool		3104604	1					
ANR	3104706	Identifier	Dag :: AddDependency		3104604	2					
ANR	3104707	ParameterList	"Job * parent , Job * child"		3104604	3					
ANR	3104708	Parameter	Job * parent	340:20:10674:10684	3104604	0	True				
ANR	3104709	ParameterType	Job *		3104604	0					
ANR	3104710	Identifier	parent		3104604	1					
ANR	3104711	Parameter	Job * child	340:33:10687:10696	3104604	1	True				
ANR	3104712	ParameterType	Job *		3104604	0					
ANR	3104713	Identifier	child		3104604	1					
ANR	3104714	CFGEntryNode	ENTRY		3104604		True				
ANR	3104715	CFGExitNode	EXIT		3104604		True				
ANR	3104716	Symbol	parent		3104604						
ANR	3104717	Symbol	* child		3104604						
ANR	3104718	Symbol	* parent		3104604						
ANR	3104719	Symbol	child -> GetJobName		3104604						
ANR	3104720	Symbol	parent -> AddChild		3104604						
ANR	3104721	Symbol	child -> AddParent		3104604						
ANR	3104722	Symbol	false		3104604						
ANR	3104723	Symbol	DEBUG_DEBUG_2		3104604						
ANR	3104724	Symbol	true		3104604						
ANR	3104725	Symbol	parent -> RemoveChild		3104604						
ANR	3104726	Symbol	parent -> GetJobName		3104604						
ANR	3104727	Symbol	child		3104604						
ANR	3104728	Function	Dag :: FindNodeByNodeID	365:0:11408:11771							
ANR	3104729	FunctionDef	Dag :: FindNodeByNodeID (const JobID_t jobID)		3104728	0					
ANR	3104730	CompoundStatement		365:56:11464:11771	3104728	0					
ANR	3104731	IdentifierDeclStatement	Job * job = NULL ;	366:1:11467:11483	3104728	0	True				
ANR	3104732	IdentifierDecl	* job = NULL		3104728	0					
ANR	3104733	IdentifierDeclType	Job *		3104728	0					
ANR	3104734	Identifier	job		3104728	1					
ANR	3104735	AssignmentExpression	* job = NULL		3104728	2		=			
ANR	3104736	Identifier	NULL		3104728	0					
ANR	3104737	Identifier	NULL		3104728	1					
ANR	3104738	IfStatement	"if ( _nodeIDHash . lookup ( jobID , job ) != 0 )"		3104728	1					
ANR	3104739	Condition	"_nodeIDHash . lookup ( jobID , job ) != 0"	367:6:11491:11525	3104728	0	True				
ANR	3104740	EqualityExpression	"_nodeIDHash . lookup ( jobID , job ) != 0"		3104728	0		!=			
ANR	3104741	CallExpression	"_nodeIDHash . lookup ( jobID , job )"		3104728	0					
ANR	3104742	Callee	_nodeIDHash . lookup		3104728	0					
ANR	3104743	MemberAccess	_nodeIDHash . lookup		3104728	0					
ANR	3104744	Identifier	_nodeIDHash		3104728	0					
ANR	3104745	Identifier	lookup		3104728	1					
ANR	3104746	ArgumentList	jobID		3104728	1					
ANR	3104747	Argument	jobID		3104728	0					
ANR	3104748	Identifier	jobID		3104728	0					
ANR	3104749	Argument	job		3104728	1					
ANR	3104750	Identifier	job		3104728	0					
ANR	3104751	PrimaryExpression	0		3104728	1					
ANR	3104752	CompoundStatement		3:44:64:64	3104728	1					
ANR	3104753	ExpressionStatement	"debug_printf ( DEBUG_NORMAL , ""ERROR: job %d not found!\\n"" , jobID )"	368:5:11536:11600	3104728	0	True				
ANR	3104754	CallExpression	"debug_printf ( DEBUG_NORMAL , ""ERROR: job %d not found!\\n"" , jobID )"		3104728	0					
ANR	3104755	Callee	debug_printf		3104728	0					
ANR	3104756	Identifier	debug_printf		3104728	0					
ANR	3104757	ArgumentList	DEBUG_NORMAL		3104728	1					
ANR	3104758	Argument	DEBUG_NORMAL		3104728	0					
ANR	3104759	Identifier	DEBUG_NORMAL		3104728	0					
ANR	3104760	Argument	"""ERROR: job %d not found!\\n"""		3104728	1					
ANR	3104761	PrimaryExpression	"""ERROR: job %d not found!\\n"""		3104728	0					
ANR	3104762	Argument	jobID		3104728	2					
ANR	3104763	Identifier	jobID		3104728	0					
ANR	3104764	ExpressionStatement	job = NULL	369:2:11604:11614	3104728	1	True				
ANR	3104765	AssignmentExpression	job = NULL		3104728	0		=			
ANR	3104766	Identifier	job		3104728	0					
ANR	3104767	Identifier	NULL		3104728	1					
ANR	3104768	IfStatement	if ( job )		3104728	2					
ANR	3104769	Condition	job	372:6:11626:11628	3104728	0	True				
ANR	3104770	Identifier	job		3104728	0					
ANR	3104771	CompoundStatement		8:12:167:167	3104728	1					
ANR	3104772	IfStatement	if ( jobID != job -> GetJobID ( ) )		3104728	0					
ANR	3104773	Condition	jobID != job -> GetJobID ( )	373:7:11641:11664	3104728	0	True				
ANR	3104774	EqualityExpression	jobID != job -> GetJobID ( )		3104728	0		!=			
ANR	3104775	Identifier	jobID		3104728	0					
ANR	3104776	CallExpression	job -> GetJobID ( )		3104728	1					
ANR	3104777	Callee	job -> GetJobID		3104728	0					
ANR	3104778	PtrMemberAccess	job -> GetJobID		3104728	0					
ANR	3104779	Identifier	job		3104728	0					
ANR	3104780	Identifier	GetJobID		3104728	1					
ANR	3104781	ArgumentList			3104728	1					
ANR	3104782	CompoundStatement		9:34:203:203	3104728	1					
ANR	3104783	ExpressionStatement	"EXCEPT ( ""Searched for node ID %d; got %d!!"" , jobID , job -> GetJobID ( ) )"	374:3:11673:11748	3104728	0	True				
ANR	3104784	CallExpression	"EXCEPT ( ""Searched for node ID %d; got %d!!"" , jobID , job -> GetJobID ( ) )"		3104728	0					
ANR	3104785	Callee	EXCEPT		3104728	0					
ANR	3104786	Identifier	EXCEPT		3104728	0					
ANR	3104787	ArgumentList	"""Searched for node ID %d; got %d!!"""		3104728	1					
ANR	3104788	Argument	"""Searched for node ID %d; got %d!!"""		3104728	0					
ANR	3104789	PrimaryExpression	"""Searched for node ID %d; got %d!!"""		3104728	0					
ANR	3104790	Argument	jobID		3104728	1					
ANR	3104791	Identifier	jobID		3104728	0					
ANR	3104792	Argument	job -> GetJobID ( )		3104728	2					
ANR	3104793	CallExpression	job -> GetJobID ( )		3104728	0					
ANR	3104794	Callee	job -> GetJobID		3104728	0					
ANR	3104795	PtrMemberAccess	job -> GetJobID		3104728	0					
ANR	3104796	Identifier	job		3104728	0					
ANR	3104797	Identifier	GetJobID		3104728	1					
ANR	3104798	ArgumentList			3104728	1					
ANR	3104799	ReturnStatement	return job ;	379:1:11759:11769	3104728	3	True				
ANR	3104800	Identifier	job		3104728	0					
ANR	3104801	ReturnType	Job *		3104728	1					
ANR	3104802	Identifier	Dag :: FindNodeByNodeID		3104728	2					
ANR	3104803	ParameterList	const JobID_t jobID		3104728	3					
ANR	3104804	Parameter	const JobID_t jobID	365:29:11437:11455	3104728	0	True				
ANR	3104805	ParameterType	const JobID_t		3104728	0					
ANR	3104806	Identifier	jobID		3104728	1					
ANR	3104807	CFGEntryNode	ENTRY		3104728		True				
ANR	3104808	CFGExitNode	EXIT		3104728		True				
ANR	3104809	Symbol	jobID		3104728						
ANR	3104810	Symbol	NULL		3104728						
ANR	3104811	Symbol	job -> GetJobID		3104728						
ANR	3104812	Symbol	* job		3104728						
ANR	3104813	Symbol	_nodeIDHash . lookup		3104728						
ANR	3104814	Symbol	DEBUG_NORMAL		3104728						
ANR	3104815	Symbol	job		3104728						
ANR	3104816	Symbol	_nodeIDHash		3104728						
ANR	3104817	Function	Dag :: DetectCondorLogGrowth	383:0:11850:12775							
ANR	3104818	FunctionDef	Dag :: DetectCondorLogGrowth ()		3104817	0					
ANR	3104819	CompoundStatement		384:30:11885:12775	3104817	0					
ANR	3104820	IfStatement	if ( CondorLogFileCount ( ) <= 0 )		3104817	0					
ANR	3104821	Condition	CondorLogFileCount ( ) <= 0	386:5:11893:11917	3104817	0	True				
ANR	3104822	RelationalExpression	CondorLogFileCount ( ) <= 0		3104817	0		<=			
ANR	3104823	CallExpression	CondorLogFileCount ( )		3104817	0					
ANR	3104824	Callee	CondorLogFileCount		3104817	0					
ANR	3104825	Identifier	CondorLogFileCount		3104817	0					
ANR	3104826	ArgumentList			3104817	1					
ANR	3104827	PrimaryExpression	0		3104817	1					
ANR	3104828	CompoundStatement		3:33:35:35	3104817	1					
ANR	3104829	ReturnStatement	return false ;	387:2:11925:11937	3104817	0	True				
ANR	3104830	Identifier	false		3104817	0					
ANR	3104831	IdentifierDeclStatement	bool growth = _condorLogRdr . detectLogGrowth ( ) ;	390:1:11944:11989	3104817	1	True				
ANR	3104832	IdentifierDecl	growth = _condorLogRdr . detectLogGrowth ( )		3104817	0					
ANR	3104833	IdentifierDeclType	bool		3104817	0					
ANR	3104834	Identifier	growth		3104817	1					
ANR	3104835	AssignmentExpression	growth = _condorLogRdr . detectLogGrowth ( )		3104817	2		=			
ANR	3104836	Identifier	growth		3104817	0					
ANR	3104837	CallExpression	_condorLogRdr . detectLogGrowth ( )		3104817	1					
ANR	3104838	Callee	_condorLogRdr . detectLogGrowth		3104817	0					
ANR	3104839	MemberAccess	_condorLogRdr . detectLogGrowth		3104817	0					
ANR	3104840	Identifier	_condorLogRdr		3104817	0					
ANR	3104841	Identifier	detectLogGrowth		3104817	1					
ANR	3104842	ArgumentList			3104817	1					
ANR	3104843	ExpressionStatement	"debug_printf ( DEBUG_DEBUG_4 , ""%s\\n"" , growth ? ""Log GREW!"" : ""No log growth..."" )"	391:4:11995:12081	3104817	2	True				
ANR	3104844	CallExpression	"debug_printf ( DEBUG_DEBUG_4 , ""%s\\n"" , growth ? ""Log GREW!"" : ""No log growth..."" )"		3104817	0					
ANR	3104845	Callee	debug_printf		3104817	0					
ANR	3104846	Identifier	debug_printf		3104817	0					
ANR	3104847	ArgumentList	DEBUG_DEBUG_4		3104817	1					
ANR	3104848	Argument	DEBUG_DEBUG_4		3104817	0					
ANR	3104849	Identifier	DEBUG_DEBUG_4		3104817	0					
ANR	3104850	Argument	"""%s\\n"""		3104817	1					
ANR	3104851	PrimaryExpression	"""%s\\n"""		3104817	0					
ANR	3104852	Argument	"growth ? ""Log GREW!"" : ""No log growth..."""		3104817	2					
ANR	3104853	ConditionalExpression	"growth ? ""Log GREW!"" : ""No log growth..."""		3104817	0					
ANR	3104854	Condition	growth		3104817	0					
ANR	3104855	Identifier	growth		3104817	0					
ANR	3104856	PrimaryExpression	"""Log GREW!"""		3104817	1					
ANR	3104857	PrimaryExpression	"""No log growth..."""		3104817	2					
ANR	3104858	IdentifierDeclStatement	time_t currentTime ;	399:1:12257:12276	3104817	3	True				
ANR	3104859	IdentifierDecl	currentTime		3104817	0					
ANR	3104860	IdentifierDeclType	time_t		3104817	0					
ANR	3104861	Identifier	currentTime		3104817	1					
ANR	3104862	ExpressionStatement	time ( & currentTime )	400:1:12279:12299	3104817	4	True				
ANR	3104863	CallExpression	time ( & currentTime )		3104817	0					
ANR	3104864	Callee	time		3104817	0					
ANR	3104865	Identifier	time		3104817	0					
ANR	3104866	ArgumentList	& currentTime		3104817	1					
ANR	3104867	Argument	& currentTime		3104817	0					
ANR	3104868	UnaryOperationExpression	& currentTime		3104817	0					
ANR	3104869	UnaryOperator	&		3104817	0					
ANR	3104870	Identifier	currentTime		3104817	1					
ANR	3104871	IfStatement	if ( growth )		3104817	5					
ANR	3104872	Condition	growth	402:6:12308:12313	3104817	0	True				
ANR	3104873	Identifier	growth		3104817	0					
ANR	3104874	ExpressionStatement	_lastEventTime = currentTime	402:15:12317:12345	3104817	1	True				
ANR	3104875	AssignmentExpression	_lastEventTime = currentTime		3104817	0		=			
ANR	3104876	Identifier	_lastEventTime		3104817	0					
ANR	3104877	Identifier	currentTime		3104817	1					
ANR	3104878	IdentifierDeclStatement	time_t elapsedEventTime = currentTime - _lastEventTime ;	403:1:12348:12403	3104817	6	True				
ANR	3104879	IdentifierDecl	elapsedEventTime = currentTime - _lastEventTime		3104817	0					
ANR	3104880	IdentifierDeclType	time_t		3104817	0					
ANR	3104881	Identifier	elapsedEventTime		3104817	1					
ANR	3104882	AssignmentExpression	elapsedEventTime = currentTime - _lastEventTime		3104817	2		=			
ANR	3104883	Identifier	elapsedEventTime		3104817	0					
ANR	3104884	AdditiveExpression	currentTime - _lastEventTime		3104817	1		-			
ANR	3104885	Identifier	currentTime		3104817	0					
ANR	3104886	Identifier	_lastEventTime		3104817	1					
ANR	3104887	IdentifierDeclStatement	time_t elapsedPrintTime = currentTime - _lastPendingNodePrintTime ;	404:1:12406:12472	3104817	7	True				
ANR	3104888	IdentifierDecl	elapsedPrintTime = currentTime - _lastPendingNodePrintTime		3104817	0					
ANR	3104889	IdentifierDeclType	time_t		3104817	0					
ANR	3104890	Identifier	elapsedPrintTime		3104817	1					
ANR	3104891	AssignmentExpression	elapsedPrintTime = currentTime - _lastPendingNodePrintTime		3104817	2		=			
ANR	3104892	Identifier	elapsedPrintTime		3104817	0					
ANR	3104893	AdditiveExpression	currentTime - _lastPendingNodePrintTime		3104817	1		-			
ANR	3104894	Identifier	currentTime		3104817	0					
ANR	3104895	Identifier	_lastPendingNodePrintTime		3104817	1					
ANR	3104896	IfStatement	if ( ( int ) elapsedEventTime >= _pendingReportInterval && ( int ) elapsedPrintTime >= _pendingReportInterval )		3104817	8					
ANR	3104897	Condition	( int ) elapsedEventTime >= _pendingReportInterval && ( int ) elapsedPrintTime >= _pendingReportInterval	406:6:12481:12582	3104817	0	True				
ANR	3104898	AndExpression	( int ) elapsedEventTime >= _pendingReportInterval && ( int ) elapsedPrintTime >= _pendingReportInterval		3104817	0		&&			
ANR	3104899	RelationalExpression	( int ) elapsedEventTime >= _pendingReportInterval		3104817	0		>=			
ANR	3104900	CastExpression	( int ) elapsedEventTime		3104817	0					
ANR	3104901	CastTarget	int		3104817	0					
ANR	3104902	Identifier	elapsedEventTime		3104817	1					
ANR	3104903	Identifier	_pendingReportInterval		3104817	1					
ANR	3104904	RelationalExpression	( int ) elapsedPrintTime >= _pendingReportInterval		3104817	1		>=			
ANR	3104905	CastExpression	( int ) elapsedPrintTime		3104817	0					
ANR	3104906	CastTarget	int		3104817	0					
ANR	3104907	Identifier	elapsedPrintTime		3104817	1					
ANR	3104908	Identifier	_pendingReportInterval		3104817	1					
ANR	3104909	CompoundStatement		24:54:700:700	3104817	1					
ANR	3104910	ExpressionStatement	"debug_printf ( DEBUG_NORMAL , ""%d seconds since last log event\\n"" , ( int ) elapsedEventTime )"	408:2:12590:12683	3104817	0	True				
ANR	3104911	CallExpression	"debug_printf ( DEBUG_NORMAL , ""%d seconds since last log event\\n"" , ( int ) elapsedEventTime )"		3104817	0					
ANR	3104912	Callee	debug_printf		3104817	0					
ANR	3104913	Identifier	debug_printf		3104817	0					
ANR	3104914	ArgumentList	DEBUG_NORMAL		3104817	1					
ANR	3104915	Argument	DEBUG_NORMAL		3104817	0					
ANR	3104916	Identifier	DEBUG_NORMAL		3104817	0					
ANR	3104917	Argument	"""%d seconds since last log event\\n"""		3104817	1					
ANR	3104918	PrimaryExpression	"""%d seconds since last log event\\n"""		3104817	0					
ANR	3104919	Argument	( int ) elapsedEventTime		3104817	2					
ANR	3104920	CastExpression	( int ) elapsedEventTime		3104817	0					
ANR	3104921	CastTarget	int		3104817	0					
ANR	3104922	Identifier	elapsedEventTime		3104817	1					
ANR	3104923	ExpressionStatement	PrintPendingNodes ( )	410:2:12687:12706	3104817	1	True				
ANR	3104924	CallExpression	PrintPendingNodes ( )		3104817	0					
ANR	3104925	Callee	PrintPendingNodes		3104817	0					
ANR	3104926	Identifier	PrintPendingNodes		3104817	0					
ANR	3104927	ArgumentList			3104817	1					
ANR	3104928	ExpressionStatement	_lastPendingNodePrintTime = currentTime	412:2:12711:12750	3104817	2	True				
ANR	3104929	AssignmentExpression	_lastPendingNodePrintTime = currentTime		3104817	0		=			
ANR	3104930	Identifier	_lastPendingNodePrintTime		3104817	0					
ANR	3104931	Identifier	currentTime		3104817	1					
ANR	3104932	ReturnStatement	return growth ;	415:4:12760:12773	3104817	9	True				
ANR	3104933	Identifier	growth		3104817	0					
ANR	3104934	ReturnType	bool		3104817	1					
ANR	3104935	Identifier	Dag :: DetectCondorLogGrowth		3104817	2					
ANR	3104936	ParameterList			3104817	3					
ANR	3104937	CFGEntryNode	ENTRY		3104817		True				
ANR	3104938	CFGExitNode	EXIT		3104817		True				
ANR	3104939	Symbol	false		3104817						
ANR	3104940	Symbol	elapsedEventTime		3104817						
ANR	3104941	Symbol	DEBUG_NORMAL		3104817						
ANR	3104942	Symbol	CondorLogFileCount		3104817						
ANR	3104943	Symbol	_condorLogRdr		3104817						
ANR	3104944	Symbol	_lastEventTime		3104817						
ANR	3104945	Symbol	_condorLogRdr . detectLogGrowth		3104817						
ANR	3104946	Symbol	currentTime		3104817						
ANR	3104947	Symbol	& currentTime		3104817						
ANR	3104948	Symbol	_lastPendingNodePrintTime		3104817						
ANR	3104949	Symbol	elapsedPrintTime		3104817						
ANR	3104950	Symbol	_pendingReportInterval		3104817						
ANR	3104951	Symbol	growth		3104817						
ANR	3104952	Symbol	DEBUG_DEBUG_4		3104817						
ANR	3104953	Function	Dag :: DetectDaPLogGrowth	419:0:12854:13101							
ANR	3104954	FunctionDef	Dag :: DetectDaPLogGrowth ()		3104953	0					
ANR	3104955	CompoundStatement		419:32:12886:13101	3104953	0					
ANR	3104956	IfStatement	if ( StorkLogFileCount ( ) <= 0 )		3104953	0					
ANR	3104957	Condition	StorkLogFileCount ( ) <= 0	421:5:12894:12917	3104953	0	True				
ANR	3104958	RelationalExpression	StorkLogFileCount ( ) <= 0		3104953	0		<=			
ANR	3104959	CallExpression	StorkLogFileCount ( )		3104953	0					
ANR	3104960	Callee	StorkLogFileCount		3104953	0					
ANR	3104961	Identifier	StorkLogFileCount		3104953	0					
ANR	3104962	ArgumentList			3104953	1					
ANR	3104963	PrimaryExpression	0		3104953	1					
ANR	3104964	CompoundStatement		3:32:34:34	3104953	1					
ANR	3104965	ReturnStatement	return false ;	422:2:12925:12937	3104953	0	True				
ANR	3104966	Identifier	false		3104953	0					
ANR	3104967	IdentifierDeclStatement	bool growth = _storkLogRdr . detectLogGrowth ( ) ;	425:1:12944:12988	3104953	1	True				
ANR	3104968	IdentifierDecl	growth = _storkLogRdr . detectLogGrowth ( )		3104953	0					
ANR	3104969	IdentifierDeclType	bool		3104953	0					
ANR	3104970	Identifier	growth		3104953	1					
ANR	3104971	AssignmentExpression	growth = _storkLogRdr . detectLogGrowth ( )		3104953	2		=			
ANR	3104972	Identifier	growth		3104953	0					
ANR	3104973	CallExpression	_storkLogRdr . detectLogGrowth ( )		3104953	1					
ANR	3104974	Callee	_storkLogRdr . detectLogGrowth		3104953	0					
ANR	3104975	MemberAccess	_storkLogRdr . detectLogGrowth		3104953	0					
ANR	3104976	Identifier	_storkLogRdr		3104953	0					
ANR	3104977	Identifier	detectLogGrowth		3104953	1					
ANR	3104978	ArgumentList			3104953	1					
ANR	3104979	ExpressionStatement	"debug_printf ( DEBUG_DEBUG_4 , ""%s\\n"" , growth ? ""Log GREW!"" : ""No log growth..."" )"	426:4:12994:13080	3104953	2	True				
ANR	3104980	CallExpression	"debug_printf ( DEBUG_DEBUG_4 , ""%s\\n"" , growth ? ""Log GREW!"" : ""No log growth..."" )"		3104953	0					
ANR	3104981	Callee	debug_printf		3104953	0					
ANR	3104982	Identifier	debug_printf		3104953	0					
ANR	3104983	ArgumentList	DEBUG_DEBUG_4		3104953	1					
ANR	3104984	Argument	DEBUG_DEBUG_4		3104953	0					
ANR	3104985	Identifier	DEBUG_DEBUG_4		3104953	0					
ANR	3104986	Argument	"""%s\\n"""		3104953	1					
ANR	3104987	PrimaryExpression	"""%s\\n"""		3104953	0					
ANR	3104988	Argument	"growth ? ""Log GREW!"" : ""No log growth..."""		3104953	2					
ANR	3104989	ConditionalExpression	"growth ? ""Log GREW!"" : ""No log growth..."""		3104953	0					
ANR	3104990	Condition	growth		3104953	0					
ANR	3104991	Identifier	growth		3104953	0					
ANR	3104992	PrimaryExpression	"""Log GREW!"""		3104953	1					
ANR	3104993	PrimaryExpression	"""No log growth..."""		3104953	2					
ANR	3104994	ReturnStatement	return growth ;	428:4:13086:13099	3104953	3	True				
ANR	3104995	Identifier	growth		3104953	0					
ANR	3104996	ReturnType	bool		3104953	1					
ANR	3104997	Identifier	Dag :: DetectDaPLogGrowth		3104953	2					
ANR	3104998	ParameterList			3104953	3					
ANR	3104999	CFGEntryNode	ENTRY		3104953		True				
ANR	3105000	CFGExitNode	EXIT		3104953		True				
ANR	3105001	Symbol	false		3104953						
ANR	3105002	Symbol	growth		3104953						
ANR	3105003	Symbol	_storkLogRdr . detectLogGrowth		3104953						
ANR	3105004	Symbol	_storkLogRdr		3104953						
ANR	3105005	Symbol	DEBUG_DEBUG_4		3104953						
ANR	3105006	Symbol	StorkLogFileCount		3104953						
ANR	3105007	Function	Dag :: ProcessLogEvents	433:0:13251:14882							
ANR	3105008	FunctionDef	"Dag :: ProcessLogEvents (int logsource , bool recovery)"		3105007	0					
ANR	3105009	CompoundStatement		433:58:13309:14882	3105007	0					
ANR	3105010	IfStatement	if ( logsource == CONDORLOG )		3105007	0					
ANR	3105011	Condition	logsource == CONDORLOG	435:6:13318:13339	3105007	0	True				
ANR	3105012	EqualityExpression	logsource == CONDORLOG		3105007	0		==			
ANR	3105013	Identifier	logsource		3105007	0					
ANR	3105014	Identifier	CONDORLOG		3105007	1					
ANR	3105015	CompoundStatement		3:31:33:33	3105007	1					
ANR	3105016	Statement	debug_printf	436:2:13347:13358	3105007	0	True				
ANR	3105017	Statement	(	436:14:13359:13359	3105007	1	True				
ANR	3105018	Statement	DEBUG_VERBOSE	436:16:13361:13373	3105007	2	True				
ANR	3105019	Statement	","	436:29:13374:13374	3105007	3	True				
ANR	3105020	Statement	"""Currently monitoring %d Condor """	436:31:13376:13408	3105007	4	True				
ANR	3105021	Statement	"""log file(s)\\n"""	437:5:13415:13429	3105007	5	True				
ANR	3105022	Statement	","	437:20:13430:13430	3105007	6	True				
ANR	3105023	Statement	_condorLogRdr	437:22:13432:13444	3105007	7	True				
ANR	3105024	Statement	.	437:35:13445:13445	3105007	8	True				
ANR	3105025	Statement	activeLogFileCount	437:36:13446:13463	3105007	9	True				
ANR	3105026	Statement	(	437:54:13464:13464	3105007	10	True				
ANR	3105027	Statement	)	437:55:13465:13465	3105007	11	True				
ANR	3105028	Statement	)	437:57:13467:13467	3105007	12	True				
ANR	3105029	ExpressionStatement		437:58:13468:13468	3105007	13	True				
ANR	3105030	ElseStatement	else		3105007	0					
ANR	3105031	IfStatement	if ( logsource == DAPLOG )		3105007	0					
ANR	3105032	Condition	logsource == DAPLOG	438:13:13483:13501	3105007	0	True				
ANR	3105033	EqualityExpression	logsource == DAPLOG		3105007	0		==			
ANR	3105034	Identifier	logsource		3105007	0					
ANR	3105035	Identifier	DAPLOG		3105007	1					
ANR	3105036	CompoundStatement		6:35:195:195	3105007	1					
ANR	3105037	Statement	debug_printf	439:2:13509:13520	3105007	0	True				
ANR	3105038	Statement	(	439:14:13521:13521	3105007	1	True				
ANR	3105039	Statement	DEBUG_VERBOSE	439:16:13523:13535	3105007	2	True				
ANR	3105040	Statement	","	439:29:13536:13536	3105007	3	True				
ANR	3105041	Statement	"""Currently monitoring %d Stork """	439:31:13538:13569	3105007	4	True				
ANR	3105042	Statement	"""log file(s)\\n"""	440:5:13576:13590	3105007	5	True				
ANR	3105043	Statement	","	440:20:13591:13591	3105007	6	True				
ANR	3105044	Statement	_storkLogRdr	440:22:13593:13604	3105007	7	True				
ANR	3105045	Statement	.	440:34:13605:13605	3105007	8	True				
ANR	3105046	Statement	activeLogFileCount	440:35:13606:13623	3105007	9	True				
ANR	3105047	Statement	(	440:53:13624:13624	3105007	10	True				
ANR	3105048	Statement	)	440:54:13625:13625	3105007	11	True				
ANR	3105049	Statement	)	440:56:13627:13627	3105007	12	True				
ANR	3105050	ExpressionStatement		440:57:13628:13628	3105007	13	True				
ANR	3105051	IdentifierDeclStatement	bool done = false ;	443:1:13635:13652	3105007	1	True				
ANR	3105052	IdentifierDecl	done = false		3105007	0					
ANR	3105053	IdentifierDeclType	bool		3105007	0					
ANR	3105054	Identifier	done		3105007	1					
ANR	3105055	AssignmentExpression	done = false		3105007	2		=			
ANR	3105056	Identifier	false		3105007	0					
ANR	3105057	Identifier	false		3105007	1					
ANR	3105058	IdentifierDeclStatement	bool result = true ;	444:1:13693:13711	3105007	2	True				
ANR	3105059	IdentifierDecl	result = true		3105007	0					
ANR	3105060	IdentifierDeclType	bool		3105007	0					
ANR	3105061	Identifier	result		3105007	1					
ANR	3105062	AssignmentExpression	result = true		3105007	2		=			
ANR	3105063	Identifier	true		3105007	0					
ANR	3105064	Identifier	true		3105007	1					
ANR	3105065	WhileStatement	while ( ! done )		3105007	3					
ANR	3105066	Condition	! done	446:8:13722:13726	3105007	0	True				
ANR	3105067	UnaryOperationExpression	! done		3105007	0					
ANR	3105068	UnaryOperator	!		3105007	0					
ANR	3105069	Identifier	done		3105007	1					
ANR	3105070	CompoundStatement		24:2:648:726	3105007	1					
ANR	3105071	IdentifierDeclStatement	ULogEvent * e = NULL ;	447:2:13733:13752	3105007	0	True				
ANR	3105072	IdentifierDecl	* e = NULL		3105007	0					
ANR	3105073	IdentifierDeclType	ULogEvent *		3105007	0					
ANR	3105074	Identifier	e		3105007	1					
ANR	3105075	AssignmentExpression	* e = NULL		3105007	2		=			
ANR	3105076	Identifier	NULL		3105007	0					
ANR	3105077	Identifier	NULL		3105007	1					
ANR	3105078	IdentifierDeclStatement	ULogEventOutcome outcome = ULOG_NO_EVENT ;	448:2:13756:13796	3105007	1	True				
ANR	3105079	IdentifierDecl	outcome = ULOG_NO_EVENT		3105007	0					
ANR	3105080	IdentifierDeclType	ULogEventOutcome		3105007	0					
ANR	3105081	Identifier	outcome		3105007	1					
ANR	3105082	AssignmentExpression	outcome = ULOG_NO_EVENT		3105007	2		=			
ANR	3105083	Identifier	ULOG_NO_EVENT		3105007	0					
ANR	3105084	Identifier	ULOG_NO_EVENT		3105007	1					
ANR	3105085	IfStatement	if ( logsource == CONDORLOG )		3105007	2					
ANR	3105086	Condition	logsource == CONDORLOG	450:7:13806:13827	3105007	0	True				
ANR	3105087	EqualityExpression	logsource == CONDORLOG		3105007	0		==			
ANR	3105088	Identifier	logsource		3105007	0					
ANR	3105089	Identifier	CONDORLOG		3105007	1					
ANR	3105090	CompoundStatement		18:32:521:521	3105007	1					
ANR	3105091	ExpressionStatement	outcome = _condorLogRdr . readEvent ( e )	451:3:13836:13872	3105007	0	True				
ANR	3105092	AssignmentExpression	outcome = _condorLogRdr . readEvent ( e )		3105007	0		=			
ANR	3105093	Identifier	outcome		3105007	0					
ANR	3105094	CallExpression	_condorLogRdr . readEvent ( e )		3105007	1					
ANR	3105095	Callee	_condorLogRdr . readEvent		3105007	0					
ANR	3105096	MemberAccess	_condorLogRdr . readEvent		3105007	0					
ANR	3105097	Identifier	_condorLogRdr		3105007	0					
ANR	3105098	Identifier	readEvent		3105007	1					
ANR	3105099	ArgumentList	e		3105007	1					
ANR	3105100	Argument	e		3105007	0					
ANR	3105101	Identifier	e		3105007	0					
ANR	3105102	ElseStatement	else		3105007	0					
ANR	3105103	IfStatement	if ( logsource == DAPLOG )		3105007	0					
ANR	3105104	Condition	logsource == DAPLOG	452:14:13888:13906	3105007	0	True				
ANR	3105105	EqualityExpression	logsource == DAPLOG		3105007	0		==			
ANR	3105106	Identifier	logsource		3105007	0					
ANR	3105107	Identifier	DAPLOG		3105007	1					
ANR	3105108	CompoundStatement		20:35:599:599	3105007	1					
ANR	3105109	ExpressionStatement	outcome = _storkLogRdr . readEvent ( e )	453:3:13914:13949	3105007	0	True				
ANR	3105110	AssignmentExpression	outcome = _storkLogRdr . readEvent ( e )		3105007	0		=			
ANR	3105111	Identifier	outcome		3105007	0					
ANR	3105112	CallExpression	_storkLogRdr . readEvent ( e )		3105007	1					
ANR	3105113	Callee	_storkLogRdr . readEvent		3105007	0					
ANR	3105114	MemberAccess	_storkLogRdr . readEvent		3105007	0					
ANR	3105115	Identifier	_storkLogRdr		3105007	0					
ANR	3105116	Identifier	readEvent		3105007	1					
ANR	3105117	ArgumentList	e		3105007	1					
ANR	3105118	Argument	e		3105007	0					
ANR	3105119	Identifier	e		3105007	0					
ANR	3105120	IdentifierDeclStatement	"bool tmpResult = ProcessOneEvent ( logsource , outcome , e , recovery , done ) ;"	456:2:13958:14036	3105007	3	True				
ANR	3105121	IdentifierDecl	"tmpResult = ProcessOneEvent ( logsource , outcome , e , recovery , done )"		3105007	0					
ANR	3105122	IdentifierDeclType	bool		3105007	0					
ANR	3105123	Identifier	tmpResult		3105007	1					
ANR	3105124	AssignmentExpression	"tmpResult = ProcessOneEvent ( logsource , outcome , e , recovery , done )"		3105007	2		=			
ANR	3105125	Identifier	tmpResult		3105007	0					
ANR	3105126	CallExpression	"ProcessOneEvent ( logsource , outcome , e , recovery , done )"		3105007	1					
ANR	3105127	Callee	ProcessOneEvent		3105007	0					
ANR	3105128	Identifier	ProcessOneEvent		3105007	0					
ANR	3105129	ArgumentList	logsource		3105007	1					
ANR	3105130	Argument	logsource		3105007	0					
ANR	3105131	Identifier	logsource		3105007	0					
ANR	3105132	Argument	outcome		3105007	1					
ANR	3105133	Identifier	outcome		3105007	0					
ANR	3105134	Argument	e		3105007	2					
ANR	3105135	Identifier	e		3105007	0					
ANR	3105136	Argument	recovery		3105007	3					
ANR	3105137	Identifier	recovery		3105007	0					
ANR	3105138	Argument	done		3105007	4					
ANR	3105139	Identifier	done		3105007	0					
ANR	3105140	ExpressionStatement	result = result && tmpResult	460:2:14117:14145	3105007	4	True				
ANR	3105141	AssignmentExpression	result = result && tmpResult		3105007	0		=			
ANR	3105142	Identifier	result		3105007	0					
ANR	3105143	AndExpression	result && tmpResult		3105007	1		&&			
ANR	3105144	Identifier	result		3105007	0					
ANR	3105145	Identifier	tmpResult		3105007	1					
ANR	3105146	IfStatement	if ( e != NULL )		3105007	5					
ANR	3105147	Condition	e != NULL	462:6:14154:14162	3105007	0	True				
ANR	3105148	EqualityExpression	e != NULL		3105007	0		!=			
ANR	3105149	Identifier	e		3105007	0					
ANR	3105150	Identifier	NULL		3105007	1					
ANR	3105151	CompoundStatement		30:18:856:856	3105007	1					
ANR	3105152	Statement	delete	464:3:14230:14235	3105007	0	True				
ANR	3105153	ExpressionStatement	e	464:10:14237:14238	3105007	1	True				
ANR	3105154	Identifier	e		3105007	0					
ANR	3105155	IfStatement	if ( DEBUG_LEVEL ( DEBUG_VERBOSE ) && recovery )		3105007	4					
ANR	3105156	Condition	DEBUG_LEVEL ( DEBUG_VERBOSE ) && recovery	468:5:14253:14290	3105007	0	True				
ANR	3105157	AndExpression	DEBUG_LEVEL ( DEBUG_VERBOSE ) && recovery		3105007	0		&&			
ANR	3105158	CallExpression	DEBUG_LEVEL ( DEBUG_VERBOSE )		3105007	0					
ANR	3105159	Callee	DEBUG_LEVEL		3105007	0					
ANR	3105160	Identifier	DEBUG_LEVEL		3105007	0					
ANR	3105161	ArgumentList	DEBUG_VERBOSE		3105007	1					
ANR	3105162	Argument	DEBUG_VERBOSE		3105007	0					
ANR	3105163	Identifier	DEBUG_VERBOSE		3105007	0					
ANR	3105164	Identifier	recovery		3105007	1					
ANR	3105165	CompoundStatement		37:2:987:1051	3105007	1					
ANR	3105166	IdentifierDeclStatement	"const char * name = ( logsource == CONDORLOG ) ? ""Condor"" : ""Stork"" ;"	469:2:14297:14361	3105007	0	True				
ANR	3105167	IdentifierDecl	"* name = ( logsource == CONDORLOG ) ? ""Condor"" : ""Stork"""		3105007	0					
ANR	3105168	IdentifierDeclType	const char *		3105007	0					
ANR	3105169	Identifier	name		3105007	1					
ANR	3105170	AssignmentExpression	"* name = ( logsource == CONDORLOG ) ? ""Condor"" : ""Stork"""		3105007	2		=			
ANR	3105171	Identifier	name		3105007	0					
ANR	3105172	ConditionalExpression	"( logsource == CONDORLOG ) ? ""Condor"" : ""Stork"""		3105007	1					
ANR	3105173	Condition	logsource == CONDORLOG		3105007	0					
ANR	3105174	EqualityExpression	logsource == CONDORLOG		3105007	0		==			
ANR	3105175	Identifier	logsource		3105007	0					
ANR	3105176	Identifier	CONDORLOG		3105007	1					
ANR	3105177	PrimaryExpression	"""Condor"""		3105007	1					
ANR	3105178	PrimaryExpression	"""Stork"""		3105007	2					
ANR	3105179	ExpressionStatement	"debug_printf ( DEBUG_NORMAL , ""    ------------------------------\\n"" )"	470:2:14365:14432	3105007	1	True				
ANR	3105180	CallExpression	"debug_printf ( DEBUG_NORMAL , ""    ------------------------------\\n"" )"		3105007	0					
ANR	3105181	Callee	debug_printf		3105007	0					
ANR	3105182	Identifier	debug_printf		3105007	0					
ANR	3105183	ArgumentList	DEBUG_NORMAL		3105007	1					
ANR	3105184	Argument	DEBUG_NORMAL		3105007	0					
ANR	3105185	Identifier	DEBUG_NORMAL		3105007	0					
ANR	3105186	Argument	"""    ------------------------------\\n"""		3105007	1					
ANR	3105187	PrimaryExpression	"""    ------------------------------\\n"""		3105007	0					
ANR	3105188	ExpressionStatement	"debug_printf ( DEBUG_NORMAL , ""       %s Recovery Complete\\n"" , name )"	471:2:14436:14502	3105007	2	True				
ANR	3105189	CallExpression	"debug_printf ( DEBUG_NORMAL , ""       %s Recovery Complete\\n"" , name )"		3105007	0					
ANR	3105190	Callee	debug_printf		3105007	0					
ANR	3105191	Identifier	debug_printf		3105007	0					
ANR	3105192	ArgumentList	DEBUG_NORMAL		3105007	1					
ANR	3105193	Argument	DEBUG_NORMAL		3105007	0					
ANR	3105194	Identifier	DEBUG_NORMAL		3105007	0					
ANR	3105195	Argument	"""       %s Recovery Complete\\n"""		3105007	1					
ANR	3105196	PrimaryExpression	"""       %s Recovery Complete\\n"""		3105007	0					
ANR	3105197	Argument	name		3105007	2					
ANR	3105198	Identifier	name		3105007	0					
ANR	3105199	ExpressionStatement	"debug_printf ( DEBUG_NORMAL , ""    ------------------------------\\n"" )"	472:2:14506:14573	3105007	3	True				
ANR	3105200	CallExpression	"debug_printf ( DEBUG_NORMAL , ""    ------------------------------\\n"" )"		3105007	0					
ANR	3105201	Callee	debug_printf		3105007	0					
ANR	3105202	Identifier	debug_printf		3105007	0					
ANR	3105203	ArgumentList	DEBUG_NORMAL		3105007	1					
ANR	3105204	Argument	DEBUG_NORMAL		3105007	0					
ANR	3105205	Identifier	DEBUG_NORMAL		3105007	0					
ANR	3105206	Argument	"""    ------------------------------\\n"""		3105007	1					
ANR	3105207	PrimaryExpression	"""    ------------------------------\\n"""		3105007	0					
ANR	3105208	IfStatement	if ( ! _recovery )		3105007	5					
ANR	3105209	Condition	! _recovery	479:6:14823:14832	3105007	0	True				
ANR	3105210	UnaryOperationExpression	! _recovery		3105007	0					
ANR	3105211	UnaryOperator	!		3105007	0					
ANR	3105212	Identifier	_recovery		3105007	1					
ANR	3105213	CompoundStatement		47:19:1526:1526	3105007	1					
ANR	3105214	ExpressionStatement	_jobstateLog . Flush ( )	480:2:14840:14860	3105007	0	True				
ANR	3105215	CallExpression	_jobstateLog . Flush ( )		3105007	0					
ANR	3105216	Callee	_jobstateLog . Flush		3105007	0					
ANR	3105217	MemberAccess	_jobstateLog . Flush		3105007	0					
ANR	3105218	Identifier	_jobstateLog		3105007	0					
ANR	3105219	Identifier	Flush		3105007	1					
ANR	3105220	ArgumentList			3105007	1					
ANR	3105221	ReturnStatement	return result ;	483:1:14867:14880	3105007	6	True				
ANR	3105222	Identifier	result		3105007	0					
ANR	3105223	ReturnType	bool		3105007	1					
ANR	3105224	Identifier	Dag :: ProcessLogEvents		3105007	2					
ANR	3105225	ParameterList	"int logsource , bool recovery"		3105007	3					
ANR	3105226	Parameter	int logsource	433:28:13279:13291	3105007	0	True				
ANR	3105227	ParameterType	int		3105007	0					
ANR	3105228	Identifier	logsource		3105007	1					
ANR	3105229	Parameter	bool recovery	433:43:13294:13306	3105007	1	True				
ANR	3105230	ParameterType	bool		3105007	0					
ANR	3105231	Identifier	recovery		3105007	1					
ANR	3105232	CFGEntryNode	ENTRY		3105007		True				
ANR	3105233	CFGExitNode	EXIT		3105007		True				
ANR	3105234	Symbol	ULOG_NO_EVENT		3105007						
ANR	3105235	Symbol	DEBUG_LEVEL		3105007						
ANR	3105236	Symbol	NULL		3105007						
ANR	3105237	Symbol	e		3105007						
ANR	3105238	Symbol	false		3105007						
ANR	3105239	Symbol	CONDORLOG		3105007						
ANR	3105240	Symbol	DEBUG_NORMAL		3105007						
ANR	3105241	Symbol	recovery		3105007						
ANR	3105242	Symbol	_condorLogRdr		3105007						
ANR	3105243	Symbol	_jobstateLog		3105007						
ANR	3105244	Symbol	logsource		3105007						
ANR	3105245	Symbol	done		3105007						
ANR	3105246	Symbol	result		3105007						
ANR	3105247	Symbol	_condorLogRdr . readEvent		3105007						
ANR	3105248	Symbol	DAPLOG		3105007						
ANR	3105249	Symbol	ProcessOneEvent		3105007						
ANR	3105250	Symbol	_recovery		3105007						
ANR	3105251	Symbol	true		3105007						
ANR	3105252	Symbol	name		3105007						
ANR	3105253	Symbol	tmpResult		3105007						
ANR	3105254	Symbol	_storkLogRdr		3105007						
ANR	3105255	Symbol	DEBUG_VERBOSE		3105007						
ANR	3105256	Symbol	outcome		3105007						
ANR	3105257	Symbol	_storkLogRdr . readEvent		3105007						
ANR	3105258	Function	Dag :: ProcessOneEvent	488:0:15034:19165							
ANR	3105259	FunctionDef	"Dag :: ProcessOneEvent (int logsource , ULogEventOutcome outcome , const ULogEvent * event , bool recovery , bool & done)"		3105258	0					
ANR	3105260	CompoundStatement		489:53:15155:19165	3105258	0					
ANR	3105261	IdentifierDeclStatement	bool result = true ;	491:1:15159:15177	3105258	0	True				
ANR	3105262	IdentifierDecl	result = true		3105258	0					
ANR	3105263	IdentifierDeclType	bool		3105258	0					
ANR	3105264	Identifier	result		3105258	1					
ANR	3105265	AssignmentExpression	result = true		3105258	2		=			
ANR	3105266	Identifier	true		3105258	0					
ANR	3105267	Identifier	true		3105258	1					
ANR	3105268	Statement	static	493:1:15181:15186	3105258	1	True				
ANR	3105269	IdentifierDeclStatement	int log_unk_count = 0 ;	493:8:15188:15209	3105258	2	True				
ANR	3105270	IdentifierDecl	log_unk_count = 0		3105258	0					
ANR	3105271	IdentifierDeclType	int		3105258	0					
ANR	3105272	Identifier	log_unk_count		3105258	1					
ANR	3105273	AssignmentExpression	log_unk_count = 0		3105258	2		=			
ANR	3105274	Identifier	log_unk_count		3105258	0					
ANR	3105275	PrimaryExpression	0		3105258	1					
ANR	3105276	Statement	static	494:1:15212:15217	3105258	3	True				
ANR	3105277	IdentifierDeclStatement	int ulog_rd_error_count = 0 ;	494:8:15219:15246	3105258	4	True				
ANR	3105278	IdentifierDecl	ulog_rd_error_count = 0		3105258	0					
ANR	3105279	IdentifierDeclType	int		3105258	0					
ANR	3105280	Identifier	ulog_rd_error_count		3105258	1					
ANR	3105281	AssignmentExpression	ulog_rd_error_count = 0		3105258	2		=			
ANR	3105282	Identifier	ulog_rd_error_count		3105258	0					
ANR	3105283	PrimaryExpression	0		3105258	1					
ANR	3105284	ExpressionStatement	"debug_printf ( DEBUG_DEBUG_4 , ""Log outcome: %s\\n"" , ULogEventOutcomeNames [ outcome ] )"	496:1:15251:15337	3105258	5	True				
ANR	3105285	CallExpression	"debug_printf ( DEBUG_DEBUG_4 , ""Log outcome: %s\\n"" , ULogEventOutcomeNames [ outcome ] )"		3105258	0					
ANR	3105286	Callee	debug_printf		3105258	0					
ANR	3105287	Identifier	debug_printf		3105258	0					
ANR	3105288	ArgumentList	DEBUG_DEBUG_4		3105258	1					
ANR	3105289	Argument	DEBUG_DEBUG_4		3105258	0					
ANR	3105290	Identifier	DEBUG_DEBUG_4		3105258	0					
ANR	3105291	Argument	"""Log outcome: %s\\n"""		3105258	1					
ANR	3105292	PrimaryExpression	"""Log outcome: %s\\n"""		3105258	0					
ANR	3105293	Argument	ULogEventOutcomeNames [ outcome ]		3105258	2					
ANR	3105294	ArrayIndexing	ULogEventOutcomeNames [ outcome ]		3105258	0					
ANR	3105295	Identifier	ULogEventOutcomeNames		3105258	0					
ANR	3105296	Identifier	outcome		3105258	1					
ANR	3105297	IfStatement	if ( outcome != ULOG_UNK_ERROR )		3105258	6					
ANR	3105298	Condition	outcome != ULOG_UNK_ERROR	499:5:15353:15377	3105258	0	True				
ANR	3105299	EqualityExpression	outcome != ULOG_UNK_ERROR		3105258	0		!=			
ANR	3105300	Identifier	outcome		3105258	0					
ANR	3105301	Identifier	ULOG_UNK_ERROR		3105258	1					
ANR	3105302	ExpressionStatement	log_unk_count = 0	499:32:15380:15397	3105258	1	True				
ANR	3105303	AssignmentExpression	log_unk_count = 0		3105258	0		=			
ANR	3105304	Identifier	log_unk_count		3105258	0					
ANR	3105305	PrimaryExpression	0		3105258	1					
ANR	3105306	SwitchStatement	switch ( outcome )		3105258	7					
ANR	3105307	Condition	outcome	501:9:15409:15415	3105258	0	True				
ANR	3105308	Identifier	outcome		3105258	0					
ANR	3105309	CompoundStatement		13:18:262:262	3105258	1					
ANR	3105310	Label	case ULOG_NO_EVENT :	504:1:15503:15521	3105258	0	True				
ANR	3105311	Identifier	ULOG_NO_EVENT		3105258	0					
ANR	3105312	ExpressionStatement	done = true	505:2:15530:15541	3105258	1	True				
ANR	3105313	AssignmentExpression	done = true		3105258	0		=			
ANR	3105314	Identifier	done		3105258	0					
ANR	3105315	Identifier	true		3105258	1					
ANR	3105316	BreakStatement	break ;	506:2:15545:15550	3105258	2	True				
ANR	3105317	Label	case ULOG_RD_ERROR :	509:1:15623:15641	3105258	3	True				
ANR	3105318	Identifier	ULOG_RD_ERROR		3105258	0					
ANR	3105319	IfStatement	if ( ++ ulog_rd_error_count >= 10 )		3105258	4					
ANR	3105320	Condition	++ ulog_rd_error_count >= 10	510:7:15650:15676	3105258	0	True				
ANR	3105321	RelationalExpression	++ ulog_rd_error_count >= 10		3105258	0		>=			
ANR	3105322	UnaryExpression	++ ulog_rd_error_count		3105258	0					
ANR	3105323	IncDec	++		3105258	0					
ANR	3105324	Identifier	ulog_rd_error_count		3105258	1					
ANR	3105325	PrimaryExpression	10		3105258	1					
ANR	3105326	CompoundStatement		22:37:524:524	3105258	1					
ANR	3105327	Statement	debug_printf	511:3:15685:15696	3105258	0	True				
ANR	3105328	Statement	(	511:15:15697:15697	3105258	1	True				
ANR	3105329	Statement	DEBUG_QUIET	511:17:15699:15709	3105258	2	True				
ANR	3105330	Statement	","	511:28:15710:15710	3105258	3	True				
ANR	3105331	Statement	"""ERROR: repeated (%d) failures to """	511:30:15712:15746	3105258	4	True				
ANR	3105332	Statement	"""read job log; quitting...\\n"""	512:6:15754:15782	3105258	5	True				
ANR	3105333	Statement	","	512:35:15783:15783	3105258	6	True				
ANR	3105334	Statement	ulog_rd_error_count	513:6:15791:15809	3105258	7	True				
ANR	3105335	Statement	)	513:26:15811:15811	3105258	8	True				
ANR	3105336	ExpressionStatement		513:27:15812:15812	3105258	9	True				
ANR	3105337	ExpressionStatement	result = false	514:3:15817:15831	3105258	10	True				
ANR	3105338	AssignmentExpression	result = false		3105258	0		=			
ANR	3105339	Identifier	result		3105258	0					
ANR	3105340	Identifier	false		3105258	1					
ANR	3105341	ElseStatement	else		3105258	0					
ANR	3105342	CompoundStatement		27:9:686:686	3105258	0					
ANR	3105343	Statement	debug_printf	516:3:15847:15858	3105258	0	True				
ANR	3105344	Statement	(	516:15:15859:15859	3105258	1	True				
ANR	3105345	Statement	DEBUG_NORMAL	516:17:15861:15872	3105258	2	True				
ANR	3105346	Statement	","	516:29:15873:15873	3105258	3	True				
ANR	3105347	Statement	"""ERROR: failure to read job log\\n"""	516:31:15875:15908	3105258	4	True				
ANR	3105348	Statement	"""\\tA log event may be corrupt.  DAGMan will """	517:6:15916:15960	3105258	5	True				
ANR	3105349	Statement	"""skip the event and try to\\n\\tcontinue, but """	518:6:15968:16012	3105258	6	True				
ANR	3105350	Statement	"""information may have been lost.  If DAGMan """	519:6:16020:16064	3105258	7	True				
ANR	3105351	Statement	"""exits\\n\\tunfinished, but reports no failed """	520:6:16072:16116	3105258	8	True				
ANR	3105352	Statement	"""jobs, re-submit the rescue file\\n\\tto complete """	521:6:16124:16172	3105258	9	True				
ANR	3105353	Statement	"""the DAG.\\n"""	522:6:16180:16191	3105258	10	True				
ANR	3105354	Statement	)	522:19:16193:16193	3105258	11	True				
ANR	3105355	ExpressionStatement		522:20:16194:16194	3105258	12	True				
ANR	3105356	ExpressionStatement	done = true	524:2:16202:16213	3105258	5	True				
ANR	3105357	AssignmentExpression	done = true		3105258	0		=			
ANR	3105358	Identifier	done		3105258	0					
ANR	3105359	Identifier	true		3105258	1					
ANR	3105360	BreakStatement	break ;	525:2:16217:16222	3105258	6	True				
ANR	3105361	Label	case ULOG_UNK_ERROR :	528:1:16295:16314	3105258	7	True				
ANR	3105362	Identifier	ULOG_UNK_ERROR		3105258	0					
ANR	3105363	ExpressionStatement	log_unk_count ++	529:2:16318:16333	3105258	8	True				
ANR	3105364	PostIncDecOperationExpression	log_unk_count ++		3105258	0					
ANR	3105365	Identifier	log_unk_count		3105258	0					
ANR	3105366	IncDec	++		3105258	1					
ANR	3105367	IfStatement	if ( recovery || log_unk_count >= 5 )		3105258	9					
ANR	3105368	Condition	recovery || log_unk_count >= 5	530:6:16341:16370	3105258	0	True				
ANR	3105369	OrExpression	recovery || log_unk_count >= 5		3105258	0		||			
ANR	3105370	Identifier	recovery		3105258	0					
ANR	3105371	RelationalExpression	log_unk_count >= 5		3105258	1		>=			
ANR	3105372	Identifier	log_unk_count		3105258	0					
ANR	3105373	PrimaryExpression	5		3105258	1					
ANR	3105374	CompoundStatement		42:38:1217:1217	3105258	1					
ANR	3105375	Statement	debug_printf	531:3:16378:16389	3105258	0	True				
ANR	3105376	Statement	(	531:15:16390:16390	3105258	1	True				
ANR	3105377	Statement	DEBUG_QUIET	531:17:16392:16402	3105258	2	True				
ANR	3105378	Statement	","	531:28:16403:16403	3105258	3	True				
ANR	3105379	Statement	"""ERROR: repeated (%d) unknown log """	531:30:16405:16439	3105258	4	True				
ANR	3105380	Statement	"""errors; quitting...\\n"""	532:8:16449:16471	3105258	5	True				
ANR	3105381	Statement	","	532:31:16472:16472	3105258	6	True				
ANR	3105382	Statement	log_unk_count	532:33:16474:16486	3105258	7	True				
ANR	3105383	Statement	)	532:47:16488:16488	3105258	8	True				
ANR	3105384	ExpressionStatement		532:48:16489:16489	3105258	9	True				
ANR	3105385	ExpressionStatement	result = false	533:3:16494:16508	3105258	10	True				
ANR	3105386	AssignmentExpression	result = false		3105258	0		=			
ANR	3105387	Identifier	result		3105258	0					
ANR	3105388	Identifier	false		3105258	1					
ANR	3105389	ExpressionStatement	"debug_printf ( DEBUG_NORMAL , ""ERROR: unknown log error\\n"" )"	535:2:16516:16574	3105258	10	True				
ANR	3105390	CallExpression	"debug_printf ( DEBUG_NORMAL , ""ERROR: unknown log error\\n"" )"		3105258	0					
ANR	3105391	Callee	debug_printf		3105258	0					
ANR	3105392	Identifier	debug_printf		3105258	0					
ANR	3105393	ArgumentList	DEBUG_NORMAL		3105258	1					
ANR	3105394	Argument	DEBUG_NORMAL		3105258	0					
ANR	3105395	Identifier	DEBUG_NORMAL		3105258	0					
ANR	3105396	Argument	"""ERROR: unknown log error\\n"""		3105258	1					
ANR	3105397	PrimaryExpression	"""ERROR: unknown log error\\n"""		3105258	0					
ANR	3105398	ExpressionStatement	done = true	536:2:16578:16591	3105258	11	True				
ANR	3105399	AssignmentExpression	done = true		3105258	0		=			
ANR	3105400	Identifier	done		3105258	0					
ANR	3105401	Identifier	true		3105258	1					
ANR	3105402	BreakStatement	break ;	537:2:16595:16600	3105258	12	True				
ANR	3105403	Label	case ULOG_OK :	540:1:16673:16685	3105258	13	True				
ANR	3105404	Identifier	ULOG_OK		3105258	0					
ANR	3105405	CompoundStatement		56:3:1593:1667	3105258	14					
ANR	3105406	ExpressionStatement	ASSERT ( event != NULL )	542:3:16694:16717	3105258	0	True				
ANR	3105407	CallExpression	ASSERT ( event != NULL )		3105258	0					
ANR	3105408	Callee	ASSERT		3105258	0					
ANR	3105409	Identifier	ASSERT		3105258	0					
ANR	3105410	ArgumentList	event != NULL		3105258	1					
ANR	3105411	Argument	event != NULL		3105258	0					
ANR	3105412	EqualityExpression	event != NULL		3105258	0		!=			
ANR	3105413	Identifier	event		3105258	0					
ANR	3105414	Identifier	NULL		3105258	1					
ANR	3105415	IdentifierDeclStatement	bool submitEventIsSane ;	543:3:16722:16744	3105258	1	True				
ANR	3105416	IdentifierDecl	submitEventIsSane		3105258	0					
ANR	3105417	IdentifierDeclType	bool		3105258	0					
ANR	3105418	Identifier	submitEventIsSane		3105258	1					
ANR	3105419	IdentifierDeclStatement	"Job * job = LogEventNodeLookup ( logsource , event , submitEventIsSane ) ;"	544:3:16749:16823	3105258	2	True				
ANR	3105420	IdentifierDecl	"* job = LogEventNodeLookup ( logsource , event , submitEventIsSane )"		3105258	0					
ANR	3105421	IdentifierDeclType	Job *		3105258	0					
ANR	3105422	Identifier	job		3105258	1					
ANR	3105423	AssignmentExpression	"* job = LogEventNodeLookup ( logsource , event , submitEventIsSane )"		3105258	2		=			
ANR	3105424	Identifier	job		3105258	0					
ANR	3105425	CallExpression	"LogEventNodeLookup ( logsource , event , submitEventIsSane )"		3105258	1					
ANR	3105426	Callee	LogEventNodeLookup		3105258	0					
ANR	3105427	Identifier	LogEventNodeLookup		3105258	0					
ANR	3105428	ArgumentList	logsource		3105258	1					
ANR	3105429	Argument	logsource		3105258	0					
ANR	3105430	Identifier	logsource		3105258	0					
ANR	3105431	Argument	event		3105258	1					
ANR	3105432	Identifier	event		3105258	0					
ANR	3105433	Argument	submitEventIsSane		3105258	2					
ANR	3105434	Identifier	submitEventIsSane		3105258	0					
ANR	3105435	ExpressionStatement	"PrintEvent ( DEBUG_VERBOSE , event , job , recovery )"	546:3:16828:16877	3105258	3	True				
ANR	3105436	CallExpression	"PrintEvent ( DEBUG_VERBOSE , event , job , recovery )"		3105258	0					
ANR	3105437	Callee	PrintEvent		3105258	0					
ANR	3105438	Identifier	PrintEvent		3105258	0					
ANR	3105439	ArgumentList	DEBUG_VERBOSE		3105258	1					
ANR	3105440	Argument	DEBUG_VERBOSE		3105258	0					
ANR	3105441	Identifier	DEBUG_VERBOSE		3105258	0					
ANR	3105442	Argument	event		3105258	1					
ANR	3105443	Identifier	event		3105258	0					
ANR	3105444	Argument	job		3105258	2					
ANR	3105445	Identifier	job		3105258	0					
ANR	3105446	Argument	recovery		3105258	3					
ANR	3105447	Identifier	recovery		3105258	0					
ANR	3105448	IfStatement	if ( ! job )		3105258	4					
ANR	3105449	Condition	! job	547:7:16886:16889	3105258	0	True				
ANR	3105450	UnaryOperationExpression	! job		3105258	0					
ANR	3105451	UnaryOperator	!		3105258	0					
ANR	3105452	Identifier	job		3105258	1					
ANR	3105453	CompoundStatement		59:14:1737:1737	3105258	1					
ANR	3105454	BreakStatement	break ;	549:4:16954:16959	3105258	0	True				
ANR	3105455	IfStatement	"if ( ! EventSanityCheck ( logsource , event , job , & result ) )"		3105258	5					
ANR	3105456	Condition	"! EventSanityCheck ( logsource , event , job , & result )"	551:7:16973:17023	3105258	0	True				
ANR	3105457	UnaryOperationExpression	"! EventSanityCheck ( logsource , event , job , & result )"		3105258	0					
ANR	3105458	UnaryOperator	!		3105258	0					
ANR	3105459	CallExpression	"EventSanityCheck ( logsource , event , job , & result )"		3105258	1					
ANR	3105460	Callee	EventSanityCheck		3105258	0					
ANR	3105461	Identifier	EventSanityCheck		3105258	0					
ANR	3105462	ArgumentList	logsource		3105258	1					
ANR	3105463	Argument	logsource		3105258	0					
ANR	3105464	Identifier	logsource		3105258	0					
ANR	3105465	Argument	event		3105258	1					
ANR	3105466	Identifier	event		3105258	0					
ANR	3105467	Argument	job		3105258	2					
ANR	3105468	Identifier	job		3105258	0					
ANR	3105469	Argument	& result		3105258	3					
ANR	3105470	UnaryOperationExpression	& result		3105258	0					
ANR	3105471	UnaryOperator	&		3105258	0					
ANR	3105472	Identifier	result		3105258	1					
ANR	3105473	CompoundStatement		63:61:1871:1871	3105258	1					
ANR	3105474	BreakStatement	break ;	555:4:17181:17186	3105258	0	True				
ANR	3105475	IfStatement	if ( job )		3105258	6					
ANR	3105476	Condition	job	559:8:17239:17241	3105258	0	True				
ANR	3105477	Identifier	job		3105258	0					
ANR	3105478	CompoundStatement		71:14:2089:2089	3105258	1					
ANR	3105479	ExpressionStatement	"_jobstateLog . WriteEvent ( event , job )"	560:4:17251:17288	3105258	0	True				
ANR	3105480	CallExpression	"_jobstateLog . WriteEvent ( event , job )"		3105258	0					
ANR	3105481	Callee	_jobstateLog . WriteEvent		3105258	0					
ANR	3105482	MemberAccess	_jobstateLog . WriteEvent		3105258	0					
ANR	3105483	Identifier	_jobstateLog		3105258	0					
ANR	3105484	Identifier	WriteEvent		3105258	1					
ANR	3105485	ArgumentList	event		3105258	1					
ANR	3105486	Argument	event		3105258	0					
ANR	3105487	Identifier	event		3105258	0					
ANR	3105488	Argument	job		3105258	1					
ANR	3105489	Identifier	job		3105258	0					
ANR	3105490	ExpressionStatement	job -> SetLastEventTime ( event )	563:3:17299:17329	3105258	7	True				
ANR	3105491	CallExpression	job -> SetLastEventTime ( event )		3105258	0					
ANR	3105492	Callee	job -> SetLastEventTime		3105258	0					
ANR	3105493	PtrMemberAccess	job -> SetLastEventTime		3105258	0					
ANR	3105494	Identifier	job		3105258	0					
ANR	3105495	Identifier	SetLastEventTime		3105258	1					
ANR	3105496	ArgumentList	event		3105258	1					
ANR	3105497	Argument	event		3105258	0					
ANR	3105498	Identifier	event		3105258	0					
ANR	3105499	ExpressionStatement	_statusFileOutdated = true	569:3:17558:17584	3105258	8	True				
ANR	3105500	AssignmentExpression	_statusFileOutdated = true		3105258	0		=			
ANR	3105501	Identifier	_statusFileOutdated		3105258	0					
ANR	3105502	Identifier	true		3105258	1					
ANR	3105503	SwitchStatement	switch ( event -> eventNumber )		3105258	9					
ANR	3105504	Condition	event -> eventNumber	571:10:17597:17614	3105258	0	True				
ANR	3105505	PtrMemberAccess	event -> eventNumber		3105258	0					
ANR	3105506	Identifier	event		3105258	0					
ANR	3105507	Identifier	eventNumber		3105258	1					
ANR	3105508	CompoundStatement		83:30:2461:2461	3105258	1					
ANR	3105509	Label	case ULOG_EXECUTABLE_ERROR :	573:3:17623:17649	3105258	0	True				
ANR	3105510	Identifier	ULOG_EXECUTABLE_ERROR		3105258	0					
ANR	3105511	BreakStatement	break ;	578:4:17849:17854	3105258	1	True				
ANR	3105512	Label	case ULOG_JOB_ABORTED :	580:3:17860:17881	3105258	2	True				
ANR	3105513	Identifier	ULOG_JOB_ABORTED		3105258	0					
ANR	3105514	ExpressionStatement	"ProcessAbortEvent ( event , job , recovery )"	581:4:17887:17926	3105258	3	True				
ANR	3105515	CallExpression	"ProcessAbortEvent ( event , job , recovery )"		3105258	0					
ANR	3105516	Callee	ProcessAbortEvent		3105258	0					
ANR	3105517	Identifier	ProcessAbortEvent		3105258	0					
ANR	3105518	ArgumentList	event		3105258	1					
ANR	3105519	Argument	event		3105258	0					
ANR	3105520	Identifier	event		3105258	0					
ANR	3105521	Argument	job		3105258	1					
ANR	3105522	Identifier	job		3105258	0					
ANR	3105523	Argument	recovery		3105258	2					
ANR	3105524	Identifier	recovery		3105258	0					
ANR	3105525	ExpressionStatement	ProcessNotIdleEvent ( job )	583:4:17988:18012	3105258	4	True				
ANR	3105526	CallExpression	ProcessNotIdleEvent ( job )		3105258	0					
ANR	3105527	Callee	ProcessNotIdleEvent		3105258	0					
ANR	3105528	Identifier	ProcessNotIdleEvent		3105258	0					
ANR	3105529	ArgumentList	job		3105258	1					
ANR	3105530	Argument	job		3105258	0					
ANR	3105531	Identifier	job		3105258	0					
ANR	3105532	BreakStatement	break ;	584:4:18018:18023	3105258	5	True				
ANR	3105533	Label	case ULOG_JOB_TERMINATED :	586:3:18043:18067	3105258	6	True				
ANR	3105534	Identifier	ULOG_JOB_TERMINATED		3105258	0					
ANR	3105535	ExpressionStatement	"ProcessTerminatedEvent ( event , job , recovery )"	587:4:18073:18117	3105258	7	True				
ANR	3105536	CallExpression	"ProcessTerminatedEvent ( event , job , recovery )"		3105258	0					
ANR	3105537	Callee	ProcessTerminatedEvent		3105258	0					
ANR	3105538	Identifier	ProcessTerminatedEvent		3105258	0					
ANR	3105539	ArgumentList	event		3105258	1					
ANR	3105540	Argument	event		3105258	0					
ANR	3105541	Identifier	event		3105258	0					
ANR	3105542	Argument	job		3105258	1					
ANR	3105543	Identifier	job		3105258	0					
ANR	3105544	Argument	recovery		3105258	2					
ANR	3105545	Identifier	recovery		3105258	0					
ANR	3105546	ExpressionStatement	ProcessNotIdleEvent ( job )	589:4:18179:18203	3105258	8	True				
ANR	3105547	CallExpression	ProcessNotIdleEvent ( job )		3105258	0					
ANR	3105548	Callee	ProcessNotIdleEvent		3105258	0					
ANR	3105549	Identifier	ProcessNotIdleEvent		3105258	0					
ANR	3105550	ArgumentList	job		3105258	1					
ANR	3105551	Argument	job		3105258	0					
ANR	3105552	Identifier	job		3105258	0					
ANR	3105553	BreakStatement	break ;	590:4:18209:18214	3105258	9	True				
ANR	3105554	Label	case ULOG_POST_SCRIPT_TERMINATED :	592:3:18220:18252	3105258	10	True				
ANR	3105555	Identifier	ULOG_POST_SCRIPT_TERMINATED		3105258	0					
ANR	3105556	ExpressionStatement	"ProcessPostTermEvent ( event , job , recovery )"	593:4:18258:18300	3105258	11	True				
ANR	3105557	CallExpression	"ProcessPostTermEvent ( event , job , recovery )"		3105258	0					
ANR	3105558	Callee	ProcessPostTermEvent		3105258	0					
ANR	3105559	Identifier	ProcessPostTermEvent		3105258	0					
ANR	3105560	ArgumentList	event		3105258	1					
ANR	3105561	Argument	event		3105258	0					
ANR	3105562	Identifier	event		3105258	0					
ANR	3105563	Argument	job		3105258	1					
ANR	3105564	Identifier	job		3105258	0					
ANR	3105565	Argument	recovery		3105258	2					
ANR	3105566	Identifier	recovery		3105258	0					
ANR	3105567	BreakStatement	break ;	594:4:18306:18311	3105258	12	True				
ANR	3105568	Label	case ULOG_SUBMIT :	596:3:18317:18333	3105258	13	True				
ANR	3105569	Identifier	ULOG_SUBMIT		3105258	0					
ANR	3105570	ExpressionStatement	"ProcessSubmitEvent ( job , recovery , submitEventIsSane )"	597:4:18339:18391	3105258	14	True				
ANR	3105571	CallExpression	"ProcessSubmitEvent ( job , recovery , submitEventIsSane )"		3105258	0					
ANR	3105572	Callee	ProcessSubmitEvent		3105258	0					
ANR	3105573	Identifier	ProcessSubmitEvent		3105258	0					
ANR	3105574	ArgumentList	job		3105258	1					
ANR	3105575	Argument	job		3105258	0					
ANR	3105576	Identifier	job		3105258	0					
ANR	3105577	Argument	recovery		3105258	1					
ANR	3105578	Identifier	recovery		3105258	0					
ANR	3105579	Argument	submitEventIsSane		3105258	2					
ANR	3105580	Identifier	submitEventIsSane		3105258	0					
ANR	3105581	ExpressionStatement	ProcessIsIdleEvent ( job )	598:4:18397:18420	3105258	15	True				
ANR	3105582	CallExpression	ProcessIsIdleEvent ( job )		3105258	0					
ANR	3105583	Callee	ProcessIsIdleEvent		3105258	0					
ANR	3105584	Identifier	ProcessIsIdleEvent		3105258	0					
ANR	3105585	ArgumentList	job		3105258	1					
ANR	3105586	Argument	job		3105258	0					
ANR	3105587	Identifier	job		3105258	0					
ANR	3105588	BreakStatement	break ;	599:4:18426:18431	3105258	16	True				
ANR	3105589	Label	case ULOG_JOB_EVICTED :	601:3:18437:18458	3105258	17	True				
ANR	3105590	Identifier	ULOG_JOB_EVICTED		3105258	0					
ANR	3105591	Label	case ULOG_JOB_SUSPENDED :	602:3:18463:18486	3105258	18	True				
ANR	3105592	Identifier	ULOG_JOB_SUSPENDED		3105258	0					
ANR	3105593	Label	case ULOG_SHADOW_EXCEPTION :	603:3:18491:18517	3105258	19	True				
ANR	3105594	Identifier	ULOG_SHADOW_EXCEPTION		3105258	0					
ANR	3105595	ExpressionStatement	ProcessIsIdleEvent ( job )	604:4:18523:18546	3105258	20	True				
ANR	3105596	CallExpression	ProcessIsIdleEvent ( job )		3105258	0					
ANR	3105597	Callee	ProcessIsIdleEvent		3105258	0					
ANR	3105598	Identifier	ProcessIsIdleEvent		3105258	0					
ANR	3105599	ArgumentList	job		3105258	1					
ANR	3105600	Argument	job		3105258	0					
ANR	3105601	Identifier	job		3105258	0					
ANR	3105602	BreakStatement	break ;	605:4:18552:18557	3105258	21	True				
ANR	3105603	Label	case ULOG_JOB_HELD :	607:3:18563:18581	3105258	22	True				
ANR	3105604	Identifier	ULOG_JOB_HELD		3105258	0					
ANR	3105605	ExpressionStatement	"ProcessHeldEvent ( job , event )"	608:4:18587:18615	3105258	23	True				
ANR	3105606	CallExpression	"ProcessHeldEvent ( job , event )"		3105258	0					
ANR	3105607	Callee	ProcessHeldEvent		3105258	0					
ANR	3105608	Identifier	ProcessHeldEvent		3105258	0					
ANR	3105609	ArgumentList	job		3105258	1					
ANR	3105610	Argument	job		3105258	0					
ANR	3105611	Identifier	job		3105258	0					
ANR	3105612	Argument	event		3105258	1					
ANR	3105613	Identifier	event		3105258	0					
ANR	3105614	ExpressionStatement	ProcessIsIdleEvent ( job )	609:4:18621:18644	3105258	24	True				
ANR	3105615	CallExpression	ProcessIsIdleEvent ( job )		3105258	0					
ANR	3105616	Callee	ProcessIsIdleEvent		3105258	0					
ANR	3105617	Identifier	ProcessIsIdleEvent		3105258	0					
ANR	3105618	ArgumentList	job		3105258	1					
ANR	3105619	Argument	job		3105258	0					
ANR	3105620	Identifier	job		3105258	0					
ANR	3105621	BreakStatement	break ;	610:4:18650:18655	3105258	25	True				
ANR	3105622	Label	case ULOG_EXECUTE :	612:3:18661:18678	3105258	26	True				
ANR	3105623	Identifier	ULOG_EXECUTE		3105258	0					
ANR	3105624	ExpressionStatement	ProcessNotIdleEvent ( job )	613:4:18684:18708	3105258	27	True				
ANR	3105625	CallExpression	ProcessNotIdleEvent ( job )		3105258	0					
ANR	3105626	Callee	ProcessNotIdleEvent		3105258	0					
ANR	3105627	Identifier	ProcessNotIdleEvent		3105258	0					
ANR	3105628	ArgumentList	job		3105258	1					
ANR	3105629	Argument	job		3105258	0					
ANR	3105630	Identifier	job		3105258	0					
ANR	3105631	BreakStatement	break ;	614:4:18714:18719	3105258	28	True				
ANR	3105632	Label	case ULOG_JOB_RELEASED :	616:3:18725:18747	3105258	29	True				
ANR	3105633	Identifier	ULOG_JOB_RELEASED		3105258	0					
ANR	3105634	ExpressionStatement	ProcessReleasedEvent ( job )	617:4:18753:18778	3105258	30	True				
ANR	3105635	CallExpression	ProcessReleasedEvent ( job )		3105258	0					
ANR	3105636	Callee	ProcessReleasedEvent		3105258	0					
ANR	3105637	Identifier	ProcessReleasedEvent		3105258	0					
ANR	3105638	ArgumentList	job		3105258	1					
ANR	3105639	Argument	job		3105258	0					
ANR	3105640	Identifier	job		3105258	0					
ANR	3105641	BreakStatement	break ;	618:4:18784:18789	3105258	31	True				
ANR	3105642	Label	case ULOG_JOB_UNSUSPENDED :	620:3:18795:18820	3105258	32	True				
ANR	3105643	Identifier	ULOG_JOB_UNSUSPENDED		3105258	0					
ANR	3105644	Label	case ULOG_CHECKPOINTED :	621:3:18825:18847	3105258	33	True				
ANR	3105645	Identifier	ULOG_CHECKPOINTED		3105258	0					
ANR	3105646	Label	case ULOG_IMAGE_SIZE :	622:3:18852:18872	3105258	34	True				
ANR	3105647	Identifier	ULOG_IMAGE_SIZE		3105258	0					
ANR	3105648	Label	case ULOG_NODE_EXECUTE :	623:3:18877:18899	3105258	35	True				
ANR	3105649	Identifier	ULOG_NODE_EXECUTE		3105258	0					
ANR	3105650	Label	case ULOG_NODE_TERMINATED :	624:3:18904:18929	3105258	36	True				
ANR	3105651	Identifier	ULOG_NODE_TERMINATED		3105258	0					
ANR	3105652	Label	case ULOG_GENERIC :	625:3:18934:18951	3105258	37	True				
ANR	3105653	Identifier	ULOG_GENERIC		3105258	0					
ANR	3105654	Label	case ULOG_JOB_AD_INFORMATION :	626:3:18956:18984	3105258	38	True				
ANR	3105655	Identifier	ULOG_JOB_AD_INFORMATION		3105258	0					
ANR	3105656	Label	default :	627:3:18989:18996	3105258	39	True				
ANR	3105657	Identifier	default		3105258	0					
ANR	3105658	BreakStatement	break ;	628:4:19002:19007	3105258	40	True				
ANR	3105659	BreakStatement	break ;	631:2:19020:19025	3105258	15	True				
ANR	3105660	Label	default :	633:1:19029:19036	3105258	16	True				
ANR	3105661	Identifier	default		3105258	0					
ANR	3105662	Statement	debug_printf	634:2:19040:19051	3105258	17	True				
ANR	3105663	Statement	(	634:14:19052:19052	3105258	18	True				
ANR	3105664	Statement	DEBUG_QUIET	634:16:19054:19064	3105258	19	True				
ANR	3105665	Statement	","	634:27:19065:19065	3105258	20	True				
ANR	3105666	Statement	"""ERROR: illegal ULogEventOutcome """	634:29:19067:19100	3105258	21	True				
ANR	3105667	Statement	"""value (%d)!!!\\n"""	635:5:19107:19123	3105258	22	True				
ANR	3105668	Statement	","	635:22:19124:19124	3105258	23	True				
ANR	3105669	Statement	outcome	635:24:19126:19132	3105258	24	True				
ANR	3105670	Statement	)	635:31:19133:19133	3105258	25	True				
ANR	3105671	ExpressionStatement		635:32:19134:19134	3105258	26	True				
ANR	3105672	BreakStatement	break ;	636:2:19138:19143	3105258	27	True				
ANR	3105673	ReturnStatement	return result ;	639:1:19150:19163	3105258	8	True				
ANR	3105674	Identifier	result		3105258	0					
ANR	3105675	ReturnType	bool		3105258	1					
ANR	3105676	Identifier	Dag :: ProcessOneEvent		3105258	2					
ANR	3105677	ParameterList	"int logsource , ULogEventOutcome outcome , const ULogEvent * event , bool recovery , bool & done"		3105258	3					
ANR	3105678	Parameter	int logsource	488:27:15061:15073	3105258	0	True				
ANR	3105679	ParameterType	int		3105258	0					
ANR	3105680	Identifier	logsource		3105258	1					
ANR	3105681	Parameter	ULogEventOutcome outcome	488:42:15076:15099	3105258	1	True				
ANR	3105682	ParameterType	ULogEventOutcome		3105258	0					
ANR	3105683	Identifier	outcome		3105258	1					
ANR	3105684	Parameter	const ULogEvent * event	489:2:15104:15125	3105258	2	True				
ANR	3105685	ParameterType	const ULogEvent *		3105258	0					
ANR	3105686	Identifier	event		3105258	1					
ANR	3105687	Parameter	bool recovery	489:26:15128:15140	3105258	3	True				
ANR	3105688	ParameterType	bool		3105258	0					
ANR	3105689	Identifier	recovery		3105258	1					
ANR	3105690	Parameter	bool & done	489:41:15143:15152	3105258	4	True				
ANR	3105691	ParameterType	bool &		3105258	0					
ANR	3105692	Identifier	done		3105258	1					
ANR	3105693	CFGEntryNode	ENTRY		3105258		True				
ANR	3105694	CFGExitNode	EXIT		3105258		True				
ANR	3105695	Symbol	* event		3105258						
ANR	3105696	Symbol	ULOG_UNK_ERROR		3105258						
ANR	3105697	Symbol	DEBUG_NORMAL		3105258						
ANR	3105698	Symbol	recovery		3105258						
ANR	3105699	Symbol	_jobstateLog		3105258						
ANR	3105700	Symbol	result		3105258						
ANR	3105701	Symbol	submitEventIsSane		3105258						
ANR	3105702	Symbol	LogEventNodeLookup		3105258						
ANR	3105703	Symbol	& result		3105258						
ANR	3105704	Symbol	ULogEventOutcomeNames		3105258						
ANR	3105705	Symbol	event		3105258						
ANR	3105706	Symbol	DEBUG_VERBOSE		3105258						
ANR	3105707	Symbol	event -> eventNumber		3105258						
ANR	3105708	Symbol	outcome		3105258						
ANR	3105709	Symbol	DEBUG_DEBUG_4		3105258						
ANR	3105710	Symbol	log_unk_count		3105258						
ANR	3105711	Symbol	NULL		3105258						
ANR	3105712	Symbol	false		3105258						
ANR	3105713	Symbol	EventSanityCheck		3105258						
ANR	3105714	Symbol	logsource		3105258						
ANR	3105715	Symbol	done		3105258						
ANR	3105716	Symbol	_statusFileOutdated		3105258						
ANR	3105717	Symbol	* outcome		3105258						
ANR	3105718	Symbol	true		3105258						
ANR	3105719	Symbol	ulog_rd_error_count		3105258						
ANR	3105720	Symbol	job		3105258						
ANR	3105721	Symbol	* ULogEventOutcomeNames		3105258						
ANR	3105722	Function	Dag :: ProcessAbortEvent	644:0:19247:20950							
ANR	3105723	FunctionDef	"Dag :: ProcessAbortEvent (const ULogEvent * event , Job * job , bool recovery)"		3105722	0					
ANR	3105724	CompoundStatement		646:17:19326:20950	3105722	0					
ANR	3105725	IfStatement	if ( job )		3105722	0					
ANR	3105726	Condition	job	656:6:19787:19789	3105722	0	True				
ANR	3105727	Identifier	job		3105722	0					
ANR	3105728	CompoundStatement		11:12:466:466	3105722	1					
ANR	3105729	ExpressionStatement	DecrementJobCounts ( job )	657:2:19797:19822	3105722	0	True				
ANR	3105730	CallExpression	DecrementJobCounts ( job )		3105722	0					
ANR	3105731	Callee	DecrementJobCounts		3105722	0					
ANR	3105732	Identifier	DecrementJobCounts		3105722	0					
ANR	3105733	ArgumentList	job		3105722	1					
ANR	3105734	Argument	job		3105722	0					
ANR	3105735	Identifier	job		3105722	0					
ANR	3105736	IfStatement	if ( job -> _jobProcsOnHold > 0 )		3105722	1					
ANR	3105737	Condition	job -> _jobProcsOnHold > 0	663:7:20058:20081	3105722	0	True				
ANR	3105738	RelationalExpression	job -> _jobProcsOnHold > 0		3105722	0		>			
ANR	3105739	PtrMemberAccess	job -> _jobProcsOnHold		3105722	0					
ANR	3105740	Identifier	job		3105722	0					
ANR	3105741	Identifier	_jobProcsOnHold		3105722	1					
ANR	3105742	PrimaryExpression	0		3105722	1					
ANR	3105743	CompoundStatement		18:34:758:758	3105722	1					
ANR	3105744	ExpressionStatement	_numHeldJobProcs --	664:3:20090:20108	3105722	0	True				
ANR	3105745	PostIncDecOperationExpression	_numHeldJobProcs --		3105722	0					
ANR	3105746	Identifier	_numHeldJobProcs		3105722	0					
ANR	3105747	IncDec	--		3105722	1					
ANR	3105748	ExpressionStatement	job -> _jobProcsOnHold --	665:3:20113:20135	3105722	1	True				
ANR	3105749	PostIncDecOperationExpression	job -> _jobProcsOnHold --		3105722	0					
ANR	3105750	PtrMemberAccess	job -> _jobProcsOnHold		3105722	0					
ANR	3105751	Identifier	job		3105722	0					
ANR	3105752	Identifier	_jobProcsOnHold		3105722	1					
ANR	3105753	IncDec	--		3105722	1					
ANR	3105754	IfStatement	if ( job -> _Status != Job :: STATUS_ERROR )		3105722	2					
ANR	3105755	Condition	job -> _Status != Job :: STATUS_ERROR	671:7:20294:20326	3105722	0	True				
ANR	3105756	EqualityExpression	job -> _Status != Job :: STATUS_ERROR		3105722	0		!=			
ANR	3105757	PtrMemberAccess	job -> _Status		3105722	0					
ANR	3105758	Identifier	job		3105722	0					
ANR	3105759	Identifier	_Status		3105722	1					
ANR	3105760	Identifier	Job :: STATUS_ERROR		3105722	1					
ANR	3105761	CompoundStatement		26:43:1003:1003	3105722	1					
ANR	3105762	ExpressionStatement	job -> _Status = Job :: STATUS_ERROR	672:3:20335:20367	3105722	0	True				
ANR	3105763	AssignmentExpression	job -> _Status = Job :: STATUS_ERROR		3105722	0		=			
ANR	3105764	PtrMemberAccess	job -> _Status		3105722	0					
ANR	3105765	Identifier	job		3105722	0					
ANR	3105766	Identifier	_Status		3105722	1					
ANR	3105767	Identifier	Job :: STATUS_ERROR		3105722	1					
ANR	3105768	ExpressionStatement	"snprintf ( job -> error_text , JOB_ERROR_TEXT_MAXLEN , ""Condor reported %s event for job proc (%d.%d.%d)"" , ULogEventNumberNames [ event -> eventNumber ] , event -> cluster , event -> proc , event -> subproc )"	673:3:20372:20579	3105722	1	True				
ANR	3105769	CallExpression	"snprintf ( job -> error_text , JOB_ERROR_TEXT_MAXLEN , ""Condor reported %s event for job proc (%d.%d.%d)"" , ULogEventNumberNames [ event -> eventNumber ] , event -> cluster , event -> proc , event -> subproc )"		3105722	0					
ANR	3105770	Callee	snprintf		3105722	0					
ANR	3105771	Identifier	snprintf		3105722	0					
ANR	3105772	ArgumentList	job -> error_text		3105722	1					
ANR	3105773	Argument	job -> error_text		3105722	0					
ANR	3105774	PtrMemberAccess	job -> error_text		3105722	0					
ANR	3105775	Identifier	job		3105722	0					
ANR	3105776	Identifier	error_text		3105722	1					
ANR	3105777	Argument	JOB_ERROR_TEXT_MAXLEN		3105722	1					
ANR	3105778	Identifier	JOB_ERROR_TEXT_MAXLEN		3105722	0					
ANR	3105779	Argument	"""Condor reported %s event for job proc (%d.%d.%d)"""		3105722	2					
ANR	3105780	PrimaryExpression	"""Condor reported %s event for job proc (%d.%d.%d)"""		3105722	0					
ANR	3105781	Argument	ULogEventNumberNames [ event -> eventNumber ]		3105722	3					
ANR	3105782	ArrayIndexing	ULogEventNumberNames [ event -> eventNumber ]		3105722	0					
ANR	3105783	Identifier	ULogEventNumberNames		3105722	0					
ANR	3105784	PtrMemberAccess	event -> eventNumber		3105722	1					
ANR	3105785	Identifier	event		3105722	0					
ANR	3105786	Identifier	eventNumber		3105722	1					
ANR	3105787	Argument	event -> cluster		3105722	4					
ANR	3105788	PtrMemberAccess	event -> cluster		3105722	0					
ANR	3105789	Identifier	event		3105722	0					
ANR	3105790	Identifier	cluster		3105722	1					
ANR	3105791	Argument	event -> proc		3105722	5					
ANR	3105792	PtrMemberAccess	event -> proc		3105722	0					
ANR	3105793	Identifier	event		3105722	0					
ANR	3105794	Identifier	proc		3105722	1					
ANR	3105795	Argument	event -> subproc		3105722	6					
ANR	3105796	PtrMemberAccess	event -> subproc		3105722	0					
ANR	3105797	Identifier	event		3105722	0					
ANR	3105798	Identifier	subproc		3105722	1					
ANR	3105799	ExpressionStatement	job -> retval = DAG_ERROR_CONDOR_JOB_ABORTED	677:3:20584:20626	3105722	2	True				
ANR	3105800	AssignmentExpression	job -> retval = DAG_ERROR_CONDOR_JOB_ABORTED		3105722	0		=			
ANR	3105801	PtrMemberAccess	job -> retval		3105722	0					
ANR	3105802	Identifier	job		3105722	0					
ANR	3105803	Identifier	retval		3105722	1					
ANR	3105804	Identifier	DAG_ERROR_CONDOR_JOB_ABORTED		3105722	1					
ANR	3105805	IfStatement	if ( job -> _queuedNodeJobProcs > 0 )		3105722	3					
ANR	3105806	Condition	job -> _queuedNodeJobProcs > 0	678:8:20636:20663	3105722	0	True				
ANR	3105807	RelationalExpression	job -> _queuedNodeJobProcs > 0		3105722	0		>			
ANR	3105808	PtrMemberAccess	job -> _queuedNodeJobProcs		3105722	0					
ANR	3105809	Identifier	job		3105722	0					
ANR	3105810	Identifier	_queuedNodeJobProcs		3105722	1					
ANR	3105811	PrimaryExpression	0		3105722	1					
ANR	3105812	CompoundStatement		33:39:1340:1340	3105722	1					
ANR	3105813	ExpressionStatement	RemoveBatchJob ( job )	680:4:20731:20752	3105722	0	True				
ANR	3105814	CallExpression	RemoveBatchJob ( job )		3105722	0					
ANR	3105815	Callee	RemoveBatchJob		3105722	0					
ANR	3105816	Identifier	RemoveBatchJob		3105722	0					
ANR	3105817	ArgumentList	job		3105722	1					
ANR	3105818	Argument	job		3105722	0					
ANR	3105819	Identifier	job		3105722	0					
ANR	3105820	IfStatement	if ( job -> _scriptPost != NULL )		3105722	4					
ANR	3105821	Condition	job -> _scriptPost != NULL	682:8:20767:20790	3105722	0	True				
ANR	3105822	EqualityExpression	job -> _scriptPost != NULL		3105722	0		!=			
ANR	3105823	PtrMemberAccess	job -> _scriptPost		3105722	0					
ANR	3105824	Identifier	job		3105722	0					
ANR	3105825	Identifier	_scriptPost		3105722	1					
ANR	3105826	Identifier	NULL		3105722	1					
ANR	3105827	CompoundStatement		37:34:1466:1466	3105722	1					
ANR	3105828	ExpressionStatement	job -> _scriptPost -> _retValJob = job -> retval	684:4:20849:20891	3105722	0	True				
ANR	3105829	AssignmentExpression	job -> _scriptPost -> _retValJob = job -> retval		3105722	0		=			
ANR	3105830	PtrMemberAccess	job -> _scriptPost -> _retValJob		3105722	0					
ANR	3105831	PtrMemberAccess	job -> _scriptPost		3105722	0					
ANR	3105832	Identifier	job		3105722	0					
ANR	3105833	Identifier	_scriptPost		3105722	1					
ANR	3105834	Identifier	_retValJob		3105722	1					
ANR	3105835	PtrMemberAccess	job -> retval		3105722	1					
ANR	3105836	Identifier	job		3105722	0					
ANR	3105837	Identifier	retval		3105722	1					
ANR	3105838	ExpressionStatement	"ProcessJobProcEnd ( job , recovery , true )"	688:2:20905:20945	3105722	3	True				
ANR	3105839	CallExpression	"ProcessJobProcEnd ( job , recovery , true )"		3105722	0					
ANR	3105840	Callee	ProcessJobProcEnd		3105722	0					
ANR	3105841	Identifier	ProcessJobProcEnd		3105722	0					
ANR	3105842	ArgumentList	job		3105722	1					
ANR	3105843	Argument	job		3105722	0					
ANR	3105844	Identifier	job		3105722	0					
ANR	3105845	Argument	recovery		3105722	1					
ANR	3105846	Identifier	recovery		3105722	0					
ANR	3105847	Argument	true		3105722	2					
ANR	3105848	Identifier	true		3105722	0					
ANR	3105849	ReturnType	void		3105722	1					
ANR	3105850	Identifier	Dag :: ProcessAbortEvent		3105722	2					
ANR	3105851	ParameterList	"const ULogEvent * event , Job * job , bool recovery"		3105722	3					
ANR	3105852	Parameter	const ULogEvent * event	645:23:19275:19296	3105722	0	True				
ANR	3105853	ParameterType	const ULogEvent *		3105722	0					
ANR	3105854	Identifier	event		3105722	1					
ANR	3105855	Parameter	Job * job	645:47:19299:19306	3105722	1	True				
ANR	3105856	ParameterType	Job *		3105722	0					
ANR	3105857	Identifier	job		3105722	1					
ANR	3105858	Parameter	bool recovery	646:2:19311:19323	3105722	2	True				
ANR	3105859	ParameterType	bool		3105722	0					
ANR	3105860	Identifier	recovery		3105722	1					
ANR	3105861	CFGEntryNode	ENTRY		3105722		True				
ANR	3105862	CFGExitNode	EXIT		3105722		True				
ANR	3105863	Symbol	ULogEventNumberNames		3105722						
ANR	3105864	Symbol	* event		3105722						
ANR	3105865	Symbol	job -> _Status		3105722						
ANR	3105866	Symbol	* event -> eventNumber		3105722						
ANR	3105867	Symbol	job -> error_text		3105722						
ANR	3105868	Symbol	job -> _queuedNodeJobProcs		3105722						
ANR	3105869	Symbol	recovery		3105722						
ANR	3105870	Symbol	event -> subproc		3105722						
ANR	3105871	Symbol	job -> _jobProcsOnHold		3105722						
ANR	3105872	Symbol	job -> _scriptPost		3105722						
ANR	3105873	Symbol	DAG_ERROR_CONDOR_JOB_ABORTED		3105722						
ANR	3105874	Symbol	* * job		3105722						
ANR	3105875	Symbol	event		3105722						
ANR	3105876	Symbol	event -> eventNumber		3105722						
ANR	3105877	Symbol	event -> proc		3105722						
ANR	3105878	Symbol	JOB_ERROR_TEXT_MAXLEN		3105722						
ANR	3105879	Symbol	NULL		3105722						
ANR	3105880	Symbol	_numHeldJobProcs		3105722						
ANR	3105881	Symbol	* job		3105722						
ANR	3105882	Symbol	Job :: STATUS_ERROR		3105722						
ANR	3105883	Symbol	* * event		3105722						
ANR	3105884	Symbol	job -> retval		3105722						
ANR	3105885	Symbol	job -> _scriptPost -> _retValJob		3105722						
ANR	3105886	Symbol	* ULogEventNumberNames		3105722						
ANR	3105887	Symbol	true		3105722						
ANR	3105888	Symbol	job		3105722						
ANR	3105889	Symbol	* job -> _scriptPost		3105722						
ANR	3105890	Symbol	event -> cluster		3105722						
ANR	3105891	Function	Dag :: ProcessTerminatedEvent	693:0:21031:23860							
ANR	3105892	FunctionDef	"Dag :: ProcessTerminatedEvent (const ULogEvent * event , Job * job , bool recovery)"		3105891	0					
ANR	3105893	CompoundStatement		695:17:21115:23860	3105891	0					
ANR	3105894	IfStatement	if ( job )		3105891	0					
ANR	3105895	Condition	job	696:5:21122:21124	3105891	0	True				
ANR	3105896	Identifier	job		3105891	0					
ANR	3105897	CompoundStatement		8:2:128:193	3105891	1					
ANR	3105898	ExpressionStatement	DecrementJobCounts ( job )	697:2:21132:21157	3105891	0	True				
ANR	3105899	CallExpression	DecrementJobCounts ( job )		3105891	0					
ANR	3105900	Callee	DecrementJobCounts		3105891	0					
ANR	3105901	Identifier	DecrementJobCounts		3105891	0					
ANR	3105902	ArgumentList	job		3105891	1					
ANR	3105903	Argument	job		3105891	0					
ANR	3105904	Identifier	job		3105891	0					
ANR	3105905	IdentifierDeclStatement	const JobTerminatedEvent * termEvent = ( const JobTerminatedEvent * ) event ;	699:2:21162:21239	3105891	1	True				
ANR	3105906	IdentifierDecl	* termEvent = ( const JobTerminatedEvent * ) event		3105891	0					
ANR	3105907	IdentifierDeclType	const JobTerminatedEvent *		3105891	0					
ANR	3105908	Identifier	termEvent		3105891	1					
ANR	3105909	AssignmentExpression	* termEvent = ( const JobTerminatedEvent * ) event		3105891	2		=			
ANR	3105910	Identifier	termEvent		3105891	0					
ANR	3105911	CastExpression	( const JobTerminatedEvent * ) event		3105891	1					
ANR	3105912	CastTarget	const JobTerminatedEvent *		3105891	0					
ANR	3105913	Identifier	event		3105891	1					
ANR	3105914	IdentifierDeclStatement	bool failed = ! ( termEvent -> normal && termEvent -> returnValue == 0 ) ;	702:2:21244:21309	3105891	2	True				
ANR	3105915	IdentifierDecl	failed = ! ( termEvent -> normal && termEvent -> returnValue == 0 )		3105891	0					
ANR	3105916	IdentifierDeclType	bool		3105891	0					
ANR	3105917	Identifier	failed		3105891	1					
ANR	3105918	AssignmentExpression	failed = ! ( termEvent -> normal && termEvent -> returnValue == 0 )		3105891	2		=			
ANR	3105919	Identifier	failed		3105891	0					
ANR	3105920	UnaryOperationExpression	! ( termEvent -> normal && termEvent -> returnValue == 0 )		3105891	1					
ANR	3105921	UnaryOperator	!		3105891	0					
ANR	3105922	AndExpression	termEvent -> normal && termEvent -> returnValue == 0		3105891	1		&&			
ANR	3105923	PtrMemberAccess	termEvent -> normal		3105891	0					
ANR	3105924	Identifier	termEvent		3105891	0					
ANR	3105925	Identifier	normal		3105891	1					
ANR	3105926	EqualityExpression	termEvent -> returnValue == 0		3105891	1		==			
ANR	3105927	PtrMemberAccess	termEvent -> returnValue		3105891	0					
ANR	3105928	Identifier	termEvent		3105891	0					
ANR	3105929	Identifier	returnValue		3105891	1					
ANR	3105930	PrimaryExpression	0		3105891	1					
ANR	3105931	IfStatement	if ( failed )		3105891	3					
ANR	3105932	Condition	failed	704:6:21318:21323	3105891	0	True				
ANR	3105933	Identifier	failed		3105891	0					
ANR	3105934	CompoundStatement		10:15:211:211	3105891	1					
ANR	3105935	IfStatement	if ( termEvent -> normal )		3105891	0					
ANR	3105936	Condition	termEvent -> normal	707:7:21381:21397	3105891	0	True				
ANR	3105937	PtrMemberAccess	termEvent -> normal		3105891	0					
ANR	3105938	Identifier	termEvent		3105891	0					
ANR	3105939	Identifier	normal		3105891	1					
ANR	3105940	CompoundStatement		13:27:285:285	3105891	1					
ANR	3105941	Statement	debug_printf	708:4:21407:21418	3105891	0	True				
ANR	3105942	Statement	(	708:16:21419:21419	3105891	1	True				
ANR	3105943	Statement	DEBUG_QUIET	708:18:21421:21431	3105891	2	True				
ANR	3105944	Statement	","	708:29:21432:21432	3105891	3	True				
ANR	3105945	Statement	"""Node %s job proc (%d.%d.%d) """	708:31:21434:21463	3105891	4	True				
ANR	3105946	Statement	"""failed with status %d.\\n"""	709:6:21471:21496	3105891	5	True				
ANR	3105947	Statement	","	709:32:21497:21497	3105891	6	True				
ANR	3105948	Statement	job	709:34:21499:21501	3105891	7	True				
ANR	3105949	Statement	->	709:37:21502:21503	3105891	8	True				
ANR	3105950	Statement	GetJobName	709:39:21504:21513	3105891	9	True				
ANR	3105951	Statement	(	709:49:21514:21514	3105891	10	True				
ANR	3105952	Statement	)	709:50:21515:21515	3105891	11	True				
ANR	3105953	Statement	","	709:51:21516:21516	3105891	12	True				
ANR	3105954	Statement	event	710:6:21524:21528	3105891	13	True				
ANR	3105955	Statement	->	710:11:21529:21530	3105891	14	True				
ANR	3105956	Statement	cluster	710:13:21531:21537	3105891	15	True				
ANR	3105957	Statement	","	710:20:21538:21538	3105891	16	True				
ANR	3105958	Statement	event	710:22:21540:21544	3105891	17	True				
ANR	3105959	Statement	->	710:27:21545:21546	3105891	18	True				
ANR	3105960	Statement	proc	710:29:21547:21550	3105891	19	True				
ANR	3105961	Statement	","	710:33:21551:21551	3105891	20	True				
ANR	3105962	Statement	event	710:35:21553:21557	3105891	21	True				
ANR	3105963	Statement	->	710:40:21558:21559	3105891	22	True				
ANR	3105964	Statement	subproc	710:42:21560:21566	3105891	23	True				
ANR	3105965	Statement	","	710:49:21567:21567	3105891	24	True				
ANR	3105966	Statement	termEvent	711:6:21575:21583	3105891	25	True				
ANR	3105967	Statement	->	711:15:21584:21585	3105891	26	True				
ANR	3105968	Statement	returnValue	711:17:21586:21596	3105891	27	True				
ANR	3105969	Statement	)	711:29:21598:21598	3105891	28	True				
ANR	3105970	ExpressionStatement		711:30:21599:21599	3105891	29	True				
ANR	3105971	ElseStatement	else		3105891	0					
ANR	3105972	CompoundStatement		18:10:495:495	3105891	0					
ANR	3105973	Statement	debug_printf	713:4:21617:21628	3105891	0	True				
ANR	3105974	Statement	(	713:16:21629:21629	3105891	1	True				
ANR	3105975	Statement	DEBUG_QUIET	713:18:21631:21641	3105891	2	True				
ANR	3105976	Statement	","	713:29:21642:21642	3105891	3	True				
ANR	3105977	Statement	"""Node %s job proc (%d.%d.%d) """	713:31:21644:21673	3105891	4	True				
ANR	3105978	Statement	"""failed with signal %d.\\n"""	714:6:21681:21706	3105891	5	True				
ANR	3105979	Statement	","	714:32:21707:21707	3105891	6	True				
ANR	3105980	Statement	job	714:34:21709:21711	3105891	7	True				
ANR	3105981	Statement	->	714:37:21712:21713	3105891	8	True				
ANR	3105982	Statement	GetJobName	714:39:21714:21723	3105891	9	True				
ANR	3105983	Statement	(	714:49:21724:21724	3105891	10	True				
ANR	3105984	Statement	)	714:50:21725:21725	3105891	11	True				
ANR	3105985	Statement	","	714:51:21726:21726	3105891	12	True				
ANR	3105986	Statement	event	715:6:21734:21738	3105891	13	True				
ANR	3105987	Statement	->	715:11:21739:21740	3105891	14	True				
ANR	3105988	Statement	cluster	715:13:21741:21747	3105891	15	True				
ANR	3105989	Statement	","	715:20:21748:21748	3105891	16	True				
ANR	3105990	Statement	event	715:22:21750:21754	3105891	17	True				
ANR	3105991	Statement	->	715:27:21755:21756	3105891	18	True				
ANR	3105992	Statement	proc	715:29:21757:21760	3105891	19	True				
ANR	3105993	Statement	","	715:33:21761:21761	3105891	20	True				
ANR	3105994	Statement	event	715:35:21763:21767	3105891	21	True				
ANR	3105995	Statement	->	715:40:21768:21769	3105891	22	True				
ANR	3105996	Statement	subproc	715:42:21770:21776	3105891	23	True				
ANR	3105997	Statement	","	715:49:21777:21777	3105891	24	True				
ANR	3105998	Statement	termEvent	716:6:21785:21793	3105891	25	True				
ANR	3105999	Statement	->	716:15:21794:21795	3105891	26	True				
ANR	3106000	Statement	signalNumber	716:17:21796:21807	3105891	27	True				
ANR	3106001	Statement	)	716:30:21809:21809	3105891	28	True				
ANR	3106002	ExpressionStatement		716:31:21810:21810	3105891	29	True				
ANR	3106003	IfStatement	if ( job -> _Status != Job :: STATUS_ERROR )		3105891	1					
ANR	3106004	Condition	job -> _Status != Job :: STATUS_ERROR	721:8:21939:21971	3105891	0	True				
ANR	3106005	EqualityExpression	job -> _Status != Job :: STATUS_ERROR		3105891	0		!=			
ANR	3106006	PtrMemberAccess	job -> _Status		3105891	0					
ANR	3106007	Identifier	job		3105891	0					
ANR	3106008	Identifier	_Status		3105891	1					
ANR	3106009	Identifier	Job :: STATUS_ERROR		3105891	1					
ANR	3106010	CompoundStatement		27:44:859:859	3105891	1					
ANR	3106011	IfStatement	if ( termEvent -> normal )		3105891	0					
ANR	3106012	Condition	termEvent -> normal	722:8:21985:22001	3105891	0	True				
ANR	3106013	PtrMemberAccess	termEvent -> normal		3105891	0					
ANR	3106014	Identifier	termEvent		3105891	0					
ANR	3106015	Identifier	normal		3105891	1					
ANR	3106016	CompoundStatement		28:28:889:889	3105891	1					
ANR	3106017	ExpressionStatement	"snprintf ( job -> error_text , JOB_ERROR_TEXT_MAXLEN , ""Job proc (%d.%d.%d) failed with status %d"" , termEvent -> cluster , termEvent -> proc , termEvent -> subproc , termEvent -> returnValue )"	723:5:22012:22209	3105891	0	True				
ANR	3106018	CallExpression	"snprintf ( job -> error_text , JOB_ERROR_TEXT_MAXLEN , ""Job proc (%d.%d.%d) failed with status %d"" , termEvent -> cluster , termEvent -> proc , termEvent -> subproc , termEvent -> returnValue )"		3105891	0					
ANR	3106019	Callee	snprintf		3105891	0					
ANR	3106020	Identifier	snprintf		3105891	0					
ANR	3106021	ArgumentList	job -> error_text		3105891	1					
ANR	3106022	Argument	job -> error_text		3105891	0					
ANR	3106023	PtrMemberAccess	job -> error_text		3105891	0					
ANR	3106024	Identifier	job		3105891	0					
ANR	3106025	Identifier	error_text		3105891	1					
ANR	3106026	Argument	JOB_ERROR_TEXT_MAXLEN		3105891	1					
ANR	3106027	Identifier	JOB_ERROR_TEXT_MAXLEN		3105891	0					
ANR	3106028	Argument	"""Job proc (%d.%d.%d) failed with status %d"""		3105891	2					
ANR	3106029	PrimaryExpression	"""Job proc (%d.%d.%d) failed with status %d"""		3105891	0					
ANR	3106030	Argument	termEvent -> cluster		3105891	3					
ANR	3106031	PtrMemberAccess	termEvent -> cluster		3105891	0					
ANR	3106032	Identifier	termEvent		3105891	0					
ANR	3106033	Identifier	cluster		3105891	1					
ANR	3106034	Argument	termEvent -> proc		3105891	4					
ANR	3106035	PtrMemberAccess	termEvent -> proc		3105891	0					
ANR	3106036	Identifier	termEvent		3105891	0					
ANR	3106037	Identifier	proc		3105891	1					
ANR	3106038	Argument	termEvent -> subproc		3105891	5					
ANR	3106039	PtrMemberAccess	termEvent -> subproc		3105891	0					
ANR	3106040	Identifier	termEvent		3105891	0					
ANR	3106041	Identifier	subproc		3105891	1					
ANR	3106042	Argument	termEvent -> returnValue		3105891	6					
ANR	3106043	PtrMemberAccess	termEvent -> returnValue		3105891	0					
ANR	3106044	Identifier	termEvent		3105891	0					
ANR	3106045	Identifier	returnValue		3105891	1					
ANR	3106046	ExpressionStatement	job -> retval = termEvent -> returnValue	727:5:22216:22252	3105891	1	True				
ANR	3106047	AssignmentExpression	job -> retval = termEvent -> returnValue		3105891	0		=			
ANR	3106048	PtrMemberAccess	job -> retval		3105891	0					
ANR	3106049	Identifier	job		3105891	0					
ANR	3106050	Identifier	retval		3105891	1					
ANR	3106051	PtrMemberAccess	termEvent -> returnValue		3105891	1					
ANR	3106052	Identifier	termEvent		3105891	0					
ANR	3106053	Identifier	returnValue		3105891	1					
ANR	3106054	IfStatement	if ( job -> _scriptPost != NULL )		3105891	2					
ANR	3106055	Condition	job -> _scriptPost != NULL	728:10:22264:22287	3105891	0	True				
ANR	3106056	EqualityExpression	job -> _scriptPost != NULL		3105891	0		!=			
ANR	3106057	PtrMemberAccess	job -> _scriptPost		3105891	0					
ANR	3106058	Identifier	job		3105891	0					
ANR	3106059	Identifier	_scriptPost		3105891	1					
ANR	3106060	Identifier	NULL		3105891	1					
ANR	3106061	CompoundStatement		34:36:1174:1174	3105891	1					
ANR	3106062	ExpressionStatement	job -> _scriptPost -> _retValJob = job -> retval	730:6:22350:22392	3105891	0	True				
ANR	3106063	AssignmentExpression	job -> _scriptPost -> _retValJob = job -> retval		3105891	0		=			
ANR	3106064	PtrMemberAccess	job -> _scriptPost -> _retValJob		3105891	0					
ANR	3106065	PtrMemberAccess	job -> _scriptPost		3105891	0					
ANR	3106066	Identifier	job		3105891	0					
ANR	3106067	Identifier	_scriptPost		3105891	1					
ANR	3106068	Identifier	_retValJob		3105891	1					
ANR	3106069	PtrMemberAccess	job -> retval		3105891	1					
ANR	3106070	Identifier	job		3105891	0					
ANR	3106071	Identifier	retval		3105891	1					
ANR	3106072	ElseStatement	else		3105891	0					
ANR	3106073	CompoundStatement		38:11:1296:1296	3105891	0					
ANR	3106074	ExpressionStatement	"snprintf ( job -> error_text , JOB_ERROR_TEXT_MAXLEN , ""Job proc (%d.%d.%d) failed with signal %d"" , termEvent -> cluster , termEvent -> proc , termEvent -> subproc , termEvent -> signalNumber )"	733:5:22419:22617	3105891	0	True				
ANR	3106075	CallExpression	"snprintf ( job -> error_text , JOB_ERROR_TEXT_MAXLEN , ""Job proc (%d.%d.%d) failed with signal %d"" , termEvent -> cluster , termEvent -> proc , termEvent -> subproc , termEvent -> signalNumber )"		3105891	0					
ANR	3106076	Callee	snprintf		3105891	0					
ANR	3106077	Identifier	snprintf		3105891	0					
ANR	3106078	ArgumentList	job -> error_text		3105891	1					
ANR	3106079	Argument	job -> error_text		3105891	0					
ANR	3106080	PtrMemberAccess	job -> error_text		3105891	0					
ANR	3106081	Identifier	job		3105891	0					
ANR	3106082	Identifier	error_text		3105891	1					
ANR	3106083	Argument	JOB_ERROR_TEXT_MAXLEN		3105891	1					
ANR	3106084	Identifier	JOB_ERROR_TEXT_MAXLEN		3105891	0					
ANR	3106085	Argument	"""Job proc (%d.%d.%d) failed with signal %d"""		3105891	2					
ANR	3106086	PrimaryExpression	"""Job proc (%d.%d.%d) failed with signal %d"""		3105891	0					
ANR	3106087	Argument	termEvent -> cluster		3105891	3					
ANR	3106088	PtrMemberAccess	termEvent -> cluster		3105891	0					
ANR	3106089	Identifier	termEvent		3105891	0					
ANR	3106090	Identifier	cluster		3105891	1					
ANR	3106091	Argument	termEvent -> proc		3105891	4					
ANR	3106092	PtrMemberAccess	termEvent -> proc		3105891	0					
ANR	3106093	Identifier	termEvent		3105891	0					
ANR	3106094	Identifier	proc		3105891	1					
ANR	3106095	Argument	termEvent -> subproc		3105891	5					
ANR	3106096	PtrMemberAccess	termEvent -> subproc		3105891	0					
ANR	3106097	Identifier	termEvent		3105891	0					
ANR	3106098	Identifier	subproc		3105891	1					
ANR	3106099	Argument	termEvent -> signalNumber		3105891	6					
ANR	3106100	PtrMemberAccess	termEvent -> signalNumber		3105891	0					
ANR	3106101	Identifier	termEvent		3105891	0					
ANR	3106102	Identifier	signalNumber		3105891	1					
ANR	3106103	ExpressionStatement	job -> retval = ( 0 - termEvent -> signalNumber )	737:5:22624:22667	3105891	1	True				
ANR	3106104	AssignmentExpression	job -> retval = ( 0 - termEvent -> signalNumber )		3105891	0		=			
ANR	3106105	PtrMemberAccess	job -> retval		3105891	0					
ANR	3106106	Identifier	job		3105891	0					
ANR	3106107	Identifier	retval		3105891	1					
ANR	3106108	AdditiveExpression	0 - termEvent -> signalNumber		3105891	1		-			
ANR	3106109	PrimaryExpression	0		3105891	0					
ANR	3106110	PtrMemberAccess	termEvent -> signalNumber		3105891	1					
ANR	3106111	Identifier	termEvent		3105891	0					
ANR	3106112	Identifier	signalNumber		3105891	1					
ANR	3106113	IfStatement	if ( job -> _scriptPost != NULL )		3105891	2					
ANR	3106114	Condition	job -> _scriptPost != NULL	738:10:22679:22702	3105891	0	True				
ANR	3106115	EqualityExpression	job -> _scriptPost != NULL		3105891	0		!=			
ANR	3106116	PtrMemberAccess	job -> _scriptPost		3105891	0					
ANR	3106117	Identifier	job		3105891	0					
ANR	3106118	Identifier	_scriptPost		3105891	1					
ANR	3106119	Identifier	NULL		3105891	1					
ANR	3106120	CompoundStatement		44:36:1589:1589	3105891	1					
ANR	3106121	ExpressionStatement	job -> _scriptPost -> _retValJob = job -> retval	740:6:22765:22807	3105891	0	True				
ANR	3106122	AssignmentExpression	job -> _scriptPost -> _retValJob = job -> retval		3105891	0		=			
ANR	3106123	PtrMemberAccess	job -> _scriptPost -> _retValJob		3105891	0					
ANR	3106124	PtrMemberAccess	job -> _scriptPost		3105891	0					
ANR	3106125	Identifier	job		3105891	0					
ANR	3106126	Identifier	_scriptPost		3105891	1					
ANR	3106127	Identifier	_retValJob		3105891	1					
ANR	3106128	PtrMemberAccess	job -> retval		3105891	1					
ANR	3106129	Identifier	job		3105891	0					
ANR	3106130	Identifier	retval		3105891	1					
ANR	3106131	ExpressionStatement	job -> _Status = Job :: STATUS_ERROR	744:4:22827:22859	3105891	1	True				
ANR	3106132	AssignmentExpression	job -> _Status = Job :: STATUS_ERROR		3105891	0		=			
ANR	3106133	PtrMemberAccess	job -> _Status		3105891	0					
ANR	3106134	Identifier	job		3105891	0					
ANR	3106135	Identifier	_Status		3105891	1					
ANR	3106136	Identifier	Job :: STATUS_ERROR		3105891	1					
ANR	3106137	IfStatement	if ( job -> _queuedNodeJobProcs > 0 )		3105891	2					
ANR	3106138	Condition	job -> _queuedNodeJobProcs > 0	745:9:22870:22897	3105891	0	True				
ANR	3106139	RelationalExpression	job -> _queuedNodeJobProcs > 0		3105891	0		>			
ANR	3106140	PtrMemberAccess	job -> _queuedNodeJobProcs		3105891	0					
ANR	3106141	Identifier	job		3105891	0					
ANR	3106142	Identifier	_queuedNodeJobProcs		3105891	1					
ANR	3106143	PrimaryExpression	0		3105891	1					
ANR	3106144	CompoundStatement		51:40:1785:1785	3105891	1					
ANR	3106145	ExpressionStatement	RemoveBatchJob ( job )	748:5:22976:22997	3105891	0	True				
ANR	3106146	CallExpression	RemoveBatchJob ( job )		3105891	0					
ANR	3106147	Callee	RemoveBatchJob		3105891	0					
ANR	3106148	Identifier	RemoveBatchJob		3105891	0					
ANR	3106149	ArgumentList	job		3105891	1					
ANR	3106150	Argument	job		3105891	0					
ANR	3106151	Identifier	job		3105891	0					
ANR	3106152	ElseStatement	else		3105891	0					
ANR	3106153	CompoundStatement		58:9:1904:1904	3105891	0					
ANR	3106154	ExpressionStatement	ASSERT ( termEvent -> returnValue == 0 )	754:3:23045:23082	3105891	0	True				
ANR	3106155	CallExpression	ASSERT ( termEvent -> returnValue == 0 )		3105891	0					
ANR	3106156	Callee	ASSERT		3105891	0					
ANR	3106157	Identifier	ASSERT		3105891	0					
ANR	3106158	ArgumentList	termEvent -> returnValue == 0		3105891	1					
ANR	3106159	Argument	termEvent -> returnValue == 0		3105891	0					
ANR	3106160	EqualityExpression	termEvent -> returnValue == 0		3105891	0		==			
ANR	3106161	PtrMemberAccess	termEvent -> returnValue		3105891	0					
ANR	3106162	Identifier	termEvent		3105891	0					
ANR	3106163	Identifier	returnValue		3105891	1					
ANR	3106164	PrimaryExpression	0		3105891	1					
ANR	3106165	IfStatement	if ( job -> _Status != Job :: STATUS_ERROR )		3105891	1					
ANR	3106166	Condition	job -> _Status != Job :: STATUS_ERROR	758:8:23187:23219	3105891	0	True				
ANR	3106167	EqualityExpression	job -> _Status != Job :: STATUS_ERROR		3105891	0		!=			
ANR	3106168	PtrMemberAccess	job -> _Status		3105891	0					
ANR	3106169	Identifier	job		3105891	0					
ANR	3106170	Identifier	_Status		3105891	1					
ANR	3106171	Identifier	Job :: STATUS_ERROR		3105891	1					
ANR	3106172	CompoundStatement		64:44:2107:2107	3105891	1					
ANR	3106173	ExpressionStatement	job -> retval = 0	759:4:23229:23244	3105891	0	True				
ANR	3106174	AssignmentExpression	job -> retval = 0		3105891	0		=			
ANR	3106175	PtrMemberAccess	job -> retval		3105891	0					
ANR	3106176	Identifier	job		3105891	0					
ANR	3106177	Identifier	retval		3105891	1					
ANR	3106178	PrimaryExpression	0		3105891	1					
ANR	3106179	IfStatement	if ( job -> _scriptPost != NULL )		3105891	1					
ANR	3106180	Condition	job -> _scriptPost != NULL	760:9:23255:23278	3105891	0	True				
ANR	3106181	EqualityExpression	job -> _scriptPost != NULL		3105891	0		!=			
ANR	3106182	PtrMemberAccess	job -> _scriptPost		3105891	0					
ANR	3106183	Identifier	job		3105891	0					
ANR	3106184	Identifier	_scriptPost		3105891	1					
ANR	3106185	Identifier	NULL		3105891	1					
ANR	3106186	CompoundStatement		66:35:2165:2165	3105891	1					
ANR	3106187	ExpressionStatement	job -> _scriptPost -> _retValJob = job -> retval	762:5:23339:23381	3105891	0	True				
ANR	3106188	AssignmentExpression	job -> _scriptPost -> _retValJob = job -> retval		3105891	0		=			
ANR	3106189	PtrMemberAccess	job -> _scriptPost -> _retValJob		3105891	0					
ANR	3106190	PtrMemberAccess	job -> _scriptPost		3105891	0					
ANR	3106191	Identifier	job		3105891	0					
ANR	3106192	Identifier	_scriptPost		3105891	1					
ANR	3106193	Identifier	_retValJob		3105891	1					
ANR	3106194	PtrMemberAccess	job -> retval		3105891	1					
ANR	3106195	Identifier	job		3105891	0					
ANR	3106196	Identifier	retval		3105891	1					
ANR	3106197	Statement	debug_printf	765:3:23397:23408	3105891	2	True				
ANR	3106198	Statement	(	765:15:23409:23409	3105891	3	True				
ANR	3106199	Statement	DEBUG_NORMAL	765:17:23411:23422	3105891	4	True				
ANR	3106200	Statement	","	765:29:23423:23423	3105891	5	True				
ANR	3106201	Statement	"""Node %s job proc (%d.%d.%d) completed """	766:7:23432:23471	3105891	6	True				
ANR	3106202	Statement	"""successfully.\\n"""	767:7:23480:23496	3105891	7	True				
ANR	3106203	Statement	","	767:24:23497:23497	3105891	8	True				
ANR	3106204	Statement	job	767:26:23499:23501	3105891	9	True				
ANR	3106205	Statement	->	767:29:23502:23503	3105891	10	True				
ANR	3106206	Statement	GetJobName	767:31:23504:23513	3105891	11	True				
ANR	3106207	Statement	(	767:41:23514:23514	3105891	12	True				
ANR	3106208	Statement	)	767:42:23515:23515	3105891	13	True				
ANR	3106209	Statement	","	767:43:23516:23516	3105891	14	True				
ANR	3106210	Statement	termEvent	768:7:23525:23533	3105891	15	True				
ANR	3106211	Statement	->	768:16:23534:23535	3105891	16	True				
ANR	3106212	Statement	cluster	768:18:23536:23542	3105891	17	True				
ANR	3106213	Statement	","	768:25:23543:23543	3105891	18	True				
ANR	3106214	Statement	termEvent	768:27:23545:23553	3105891	19	True				
ANR	3106215	Statement	->	768:36:23554:23555	3105891	20	True				
ANR	3106216	Statement	proc	768:38:23556:23559	3105891	21	True				
ANR	3106217	Statement	","	768:42:23560:23560	3105891	22	True				
ANR	3106218	Statement	termEvent	769:7:23569:23577	3105891	23	True				
ANR	3106219	Statement	->	769:16:23578:23579	3105891	24	True				
ANR	3106220	Statement	subproc	769:18:23580:23586	3105891	25	True				
ANR	3106221	Statement	)	769:26:23588:23588	3105891	26	True				
ANR	3106222	ExpressionStatement		769:27:23589:23589	3105891	27	True				
ANR	3106223	IfStatement	if ( job -> _scriptPost == NULL )		3105891	4					
ANR	3106224	Condition	job -> _scriptPost == NULL	772:6:23602:23625	3105891	0	True				
ANR	3106225	EqualityExpression	job -> _scriptPost == NULL		3105891	0		==			
ANR	3106226	PtrMemberAccess	job -> _scriptPost		3105891	0					
ANR	3106227	Identifier	job		3105891	0					
ANR	3106228	Identifier	_scriptPost		3105891	1					
ANR	3106229	Identifier	NULL		3105891	1					
ANR	3106230	CompoundStatement		79:3:2518:2559	3105891	1					
ANR	3106231	IdentifierDeclStatement	"bool abort = CheckForDagAbort ( job , ""job"" ) ;"	773:3:23634:23675	3105891	0	True				
ANR	3106232	IdentifierDecl	"abort = CheckForDagAbort ( job , ""job"" )"		3105891	0					
ANR	3106233	IdentifierDeclType	bool		3105891	0					
ANR	3106234	Identifier	abort		3105891	1					
ANR	3106235	AssignmentExpression	"abort = CheckForDagAbort ( job , ""job"" )"		3105891	2		=			
ANR	3106236	Identifier	abort		3105891	0					
ANR	3106237	CallExpression	"CheckForDagAbort ( job , ""job"" )"		3105891	1					
ANR	3106238	Callee	CheckForDagAbort		3105891	0					
ANR	3106239	Identifier	CheckForDagAbort		3105891	0					
ANR	3106240	ArgumentList	job		3105891	1					
ANR	3106241	Argument	job		3105891	0					
ANR	3106242	Identifier	job		3105891	0					
ANR	3106243	Argument	"""job"""		3105891	1					
ANR	3106244	PrimaryExpression	"""job"""		3105891	0					
ANR	3106245	IfStatement	if ( abort )		3105891	1					
ANR	3106246	Condition	abort	775:7:23735:23739	3105891	0	True				
ANR	3106247	Identifier	abort		3105891	0					
ANR	3106248	CompoundStatement		81:15:2627:2627	3105891	1					
ANR	3106249	ReturnStatement	return ;	776:4:23749:23755	3105891	0	True				
ANR	3106250	ExpressionStatement	"ProcessJobProcEnd ( job , recovery , failed )"	780:2:23769:23811	3105891	5	True				
ANR	3106251	CallExpression	"ProcessJobProcEnd ( job , recovery , failed )"		3105891	0					
ANR	3106252	Callee	ProcessJobProcEnd		3105891	0					
ANR	3106253	Identifier	ProcessJobProcEnd		3105891	0					
ANR	3106254	ArgumentList	job		3105891	1					
ANR	3106255	Argument	job		3105891	0					
ANR	3106256	Identifier	job		3105891	0					
ANR	3106257	Argument	recovery		3105891	1					
ANR	3106258	Identifier	recovery		3105891	0					
ANR	3106259	Argument	failed		3105891	2					
ANR	3106260	Identifier	failed		3105891	0					
ANR	3106261	ExpressionStatement	PrintReadyQ ( DEBUG_DEBUG_2 )	782:2:23816:23844	3105891	6	True				
ANR	3106262	CallExpression	PrintReadyQ ( DEBUG_DEBUG_2 )		3105891	0					
ANR	3106263	Callee	PrintReadyQ		3105891	0					
ANR	3106264	Identifier	PrintReadyQ		3105891	0					
ANR	3106265	ArgumentList	DEBUG_DEBUG_2		3105891	1					
ANR	3106266	Argument	DEBUG_DEBUG_2		3105891	0					
ANR	3106267	Identifier	DEBUG_DEBUG_2		3105891	0					
ANR	3106268	ReturnStatement	return ;	784:2:23849:23855	3105891	7	True				
ANR	3106269	ReturnType	void		3105891	1					
ANR	3106270	Identifier	Dag :: ProcessTerminatedEvent		3105891	2					
ANR	3106271	ParameterList	"const ULogEvent * event , Job * job , bool recovery"		3105891	3					
ANR	3106272	Parameter	const ULogEvent * event	694:28:21064:21085	3105891	0	True				
ANR	3106273	ParameterType	const ULogEvent *		3105891	0					
ANR	3106274	Identifier	event		3105891	1					
ANR	3106275	Parameter	Job * job	694:52:21088:21095	3105891	1	True				
ANR	3106276	ParameterType	Job *		3105891	0					
ANR	3106277	Identifier	job		3105891	1					
ANR	3106278	Parameter	bool recovery	695:2:21100:21112	3105891	2	True				
ANR	3106279	ParameterType	bool		3105891	0					
ANR	3106280	Identifier	recovery		3105891	1					
ANR	3106281	CFGEntryNode	ENTRY		3105891		True				
ANR	3106282	CFGExitNode	EXIT		3105891		True				
ANR	3106283	Symbol	job -> _Status		3105891						
ANR	3106284	Symbol	termEvent -> subproc		3105891						
ANR	3106285	Symbol	job -> error_text		3105891						
ANR	3106286	Symbol	job -> _queuedNodeJobProcs		3105891						
ANR	3106287	Symbol	recovery		3105891						
ANR	3106288	Symbol	* termEvent		3105891						
ANR	3106289	Symbol	CheckForDagAbort		3105891						
ANR	3106290	Symbol	job -> _scriptPost		3105891						
ANR	3106291	Symbol	termEvent -> signalNumber		3105891						
ANR	3106292	Symbol	* * job		3105891						
ANR	3106293	Symbol	termEvent -> cluster		3105891						
ANR	3106294	Symbol	DEBUG_DEBUG_2		3105891						
ANR	3106295	Symbol	termEvent -> proc		3105891						
ANR	3106296	Symbol	event		3105891						
ANR	3106297	Symbol	JOB_ERROR_TEXT_MAXLEN		3105891						
ANR	3106298	Symbol	NULL		3105891						
ANR	3106299	Symbol	* job		3105891						
ANR	3106300	Symbol	Job :: STATUS_ERROR		3105891						
ANR	3106301	Symbol	failed		3105891						
ANR	3106302	Symbol	job -> retval		3105891						
ANR	3106303	Symbol	job -> _scriptPost -> _retValJob		3105891						
ANR	3106304	Symbol	termEvent		3105891						
ANR	3106305	Symbol	termEvent -> normal		3105891						
ANR	3106306	Symbol	abort		3105891						
ANR	3106307	Symbol	job		3105891						
ANR	3106308	Symbol	* job -> _scriptPost		3105891						
ANR	3106309	Symbol	termEvent -> returnValue		3105891						
ANR	3106310	Function	Dag :: RemoveBatchJob	789:0:23941:25082							
ANR	3106311	FunctionDef	Dag :: RemoveBatchJob (Job * node)		3106310	0					
ANR	3106312	CompoundStatement		790:31:23977:25082	3106310	0					
ANR	3106313	IdentifierDeclStatement	ArgList args ;	792:1:23981:23993	3106310	0	True				
ANR	3106314	IdentifierDecl	args		3106310	0					
ANR	3106315	IdentifierDeclType	ArgList		3106310	0					
ANR	3106316	Identifier	args		3106310	1					
ANR	3106317	IdentifierDeclStatement	MyString constraint ;	793:1:23996:24015	3106310	1	True				
ANR	3106318	IdentifierDecl	constraint		3106310	0					
ANR	3106319	IdentifierDeclType	MyString		3106310	0					
ANR	3106320	Identifier	constraint		3106310	1					
ANR	3106321	SwitchStatement	switch ( node -> JobType ( ) )		3106310	2					
ANR	3106322	Condition	node -> JobType ( )	795:10:24028:24042	3106310	0	True				
ANR	3106323	CallExpression	node -> JobType ( )		3106310	0					
ANR	3106324	Callee	node -> JobType		3106310	0					
ANR	3106325	PtrMemberAccess	node -> JobType		3106310	0					
ANR	3106326	Identifier	node		3106310	0					
ANR	3106327	Identifier	JobType		3106310	1					
ANR	3106328	ArgumentList			3106310	1					
ANR	3106329	CompoundStatement		6:28:68:68	3106310	1					
ANR	3106330	Label	case Job :: TYPE_CONDOR :	796:1:24049:24070	3106310	0	True				
ANR	3106331	Identifier	Job :: TYPE_CONDOR		3106310	0					
ANR	3106332	ExpressionStatement	args . AppendArg ( _condorRmExe )	797:2:24074:24104	3106310	1	True				
ANR	3106333	CallExpression	args . AppendArg ( _condorRmExe )		3106310	0					
ANR	3106334	Callee	args . AppendArg		3106310	0					
ANR	3106335	MemberAccess	args . AppendArg		3106310	0					
ANR	3106336	Identifier	args		3106310	0					
ANR	3106337	Identifier	AppendArg		3106310	1					
ANR	3106338	ArgumentList	_condorRmExe		3106310	1					
ANR	3106339	Argument	_condorRmExe		3106310	0					
ANR	3106340	Identifier	_condorRmExe		3106310	0					
ANR	3106341	ExpressionStatement	"args . AppendArg ( ""-const"" )"	798:2:24108:24134	3106310	2	True				
ANR	3106342	CallExpression	"args . AppendArg ( ""-const"" )"		3106310	0					
ANR	3106343	Callee	args . AppendArg		3106310	0					
ANR	3106344	MemberAccess	args . AppendArg		3106310	0					
ANR	3106345	Identifier	args		3106310	0					
ANR	3106346	Identifier	AppendArg		3106310	1					
ANR	3106347	ArgumentList	"""-const"""		3106310	1					
ANR	3106348	Argument	"""-const"""		3106310	0					
ANR	3106349	PrimaryExpression	"""-const"""		3106310	0					
ANR	3106350	ExpressionStatement	"constraint . sprintf ( ""%s == %d && %s == %d"" , ATTR_DAGMAN_JOB_ID , _DAGManJobId -> _cluster , ATTR_CLUSTER_ID , node -> _CondorID . _cluster )"	803:2:24263:24403	3106310	3	True				
ANR	3106351	CallExpression	"constraint . sprintf ( ""%s == %d && %s == %d"" , ATTR_DAGMAN_JOB_ID , _DAGManJobId -> _cluster , ATTR_CLUSTER_ID , node -> _CondorID . _cluster )"		3106310	0					
ANR	3106352	Callee	constraint . sprintf		3106310	0					
ANR	3106353	MemberAccess	constraint . sprintf		3106310	0					
ANR	3106354	Identifier	constraint		3106310	0					
ANR	3106355	Identifier	sprintf		3106310	1					
ANR	3106356	ArgumentList	"""%s == %d && %s == %d"""		3106310	1					
ANR	3106357	Argument	"""%s == %d && %s == %d"""		3106310	0					
ANR	3106358	PrimaryExpression	"""%s == %d && %s == %d"""		3106310	0					
ANR	3106359	Argument	ATTR_DAGMAN_JOB_ID		3106310	1					
ANR	3106360	Identifier	ATTR_DAGMAN_JOB_ID		3106310	0					
ANR	3106361	Argument	_DAGManJobId -> _cluster		3106310	2					
ANR	3106362	PtrMemberAccess	_DAGManJobId -> _cluster		3106310	0					
ANR	3106363	Identifier	_DAGManJobId		3106310	0					
ANR	3106364	Identifier	_cluster		3106310	1					
ANR	3106365	Argument	ATTR_CLUSTER_ID		3106310	3					
ANR	3106366	Identifier	ATTR_CLUSTER_ID		3106310	0					
ANR	3106367	Argument	node -> _CondorID . _cluster		3106310	4					
ANR	3106368	MemberAccess	node -> _CondorID . _cluster		3106310	0					
ANR	3106369	PtrMemberAccess	node -> _CondorID		3106310	0					
ANR	3106370	Identifier	node		3106310	0					
ANR	3106371	Identifier	_CondorID		3106310	1					
ANR	3106372	Identifier	_cluster		3106310	1					
ANR	3106373	ExpressionStatement	args . AppendArg ( constraint . Value ( ) )	806:2:24407:24443	3106310	4	True				
ANR	3106374	CallExpression	args . AppendArg ( constraint . Value ( ) )		3106310	0					
ANR	3106375	Callee	args . AppendArg		3106310	0					
ANR	3106376	MemberAccess	args . AppendArg		3106310	0					
ANR	3106377	Identifier	args		3106310	0					
ANR	3106378	Identifier	AppendArg		3106310	1					
ANR	3106379	ArgumentList	constraint . Value ( )		3106310	1					
ANR	3106380	Argument	constraint . Value ( )		3106310	0					
ANR	3106381	CallExpression	constraint . Value ( )		3106310	0					
ANR	3106382	Callee	constraint . Value		3106310	0					
ANR	3106383	MemberAccess	constraint . Value		3106310	0					
ANR	3106384	Identifier	constraint		3106310	0					
ANR	3106385	Identifier	Value		3106310	1					
ANR	3106386	ArgumentList			3106310	1					
ANR	3106387	BreakStatement	break ;	807:2:24447:24452	3106310	5	True				
ANR	3106388	Label	case Job :: TYPE_STORK :	809:1:24456:24476	3106310	6	True				
ANR	3106389	Identifier	Job :: TYPE_STORK		3106310	0					
ANR	3106390	ExpressionStatement	args . AppendArg ( _storkRmExe )	810:2:24480:24509	3106310	7	True				
ANR	3106391	CallExpression	args . AppendArg ( _storkRmExe )		3106310	0					
ANR	3106392	Callee	args . AppendArg		3106310	0					
ANR	3106393	MemberAccess	args . AppendArg		3106310	0					
ANR	3106394	Identifier	args		3106310	0					
ANR	3106395	Identifier	AppendArg		3106310	1					
ANR	3106396	ArgumentList	_storkRmExe		3106310	1					
ANR	3106397	Argument	_storkRmExe		3106310	0					
ANR	3106398	Identifier	_storkRmExe		3106310	0					
ANR	3106399	ExpressionStatement	args . AppendArg ( node -> _CondorID . _cluster )	811:2:24513:24555	3106310	8	True				
ANR	3106400	CallExpression	args . AppendArg ( node -> _CondorID . _cluster )		3106310	0					
ANR	3106401	Callee	args . AppendArg		3106310	0					
ANR	3106402	MemberAccess	args . AppendArg		3106310	0					
ANR	3106403	Identifier	args		3106310	0					
ANR	3106404	Identifier	AppendArg		3106310	1					
ANR	3106405	ArgumentList	node -> _CondorID . _cluster		3106310	1					
ANR	3106406	Argument	node -> _CondorID . _cluster		3106310	0					
ANR	3106407	MemberAccess	node -> _CondorID . _cluster		3106310	0					
ANR	3106408	PtrMemberAccess	node -> _CondorID		3106310	0					
ANR	3106409	Identifier	node		3106310	0					
ANR	3106410	Identifier	_CondorID		3106310	1					
ANR	3106411	Identifier	_cluster		3106310	1					
ANR	3106412	BreakStatement	break ;	812:2:24559:24564	3106310	9	True				
ANR	3106413	Label	default :	814:1:24568:24575	3106310	10	True				
ANR	3106414	Identifier	default		3106310	0					
ANR	3106415	ExpressionStatement	"EXCEPT ( ""Illegal job (%d) type for node %s"" , node -> JobType ( ) , node -> GetJobName ( ) )"	815:2:24579:24666	3106310	11	True				
ANR	3106416	CallExpression	"EXCEPT ( ""Illegal job (%d) type for node %s"" , node -> JobType ( ) , node -> GetJobName ( ) )"		3106310	0					
ANR	3106417	Callee	EXCEPT		3106310	0					
ANR	3106418	Identifier	EXCEPT		3106310	0					
ANR	3106419	ArgumentList	"""Illegal job (%d) type for node %s"""		3106310	1					
ANR	3106420	Argument	"""Illegal job (%d) type for node %s"""		3106310	0					
ANR	3106421	PrimaryExpression	"""Illegal job (%d) type for node %s"""		3106310	0					
ANR	3106422	Argument	node -> JobType ( )		3106310	1					
ANR	3106423	CallExpression	node -> JobType ( )		3106310	0					
ANR	3106424	Callee	node -> JobType		3106310	0					
ANR	3106425	PtrMemberAccess	node -> JobType		3106310	0					
ANR	3106426	Identifier	node		3106310	0					
ANR	3106427	Identifier	JobType		3106310	1					
ANR	3106428	ArgumentList			3106310	1					
ANR	3106429	Argument	node -> GetJobName ( )		3106310	2					
ANR	3106430	CallExpression	node -> GetJobName ( )		3106310	0					
ANR	3106431	Callee	node -> GetJobName		3106310	0					
ANR	3106432	PtrMemberAccess	node -> GetJobName		3106310	0					
ANR	3106433	Identifier	node		3106310	0					
ANR	3106434	Identifier	GetJobName		3106310	1					
ANR	3106435	ArgumentList			3106310	1					
ANR	3106436	BreakStatement	break ;	817:2:24670:24675	3106310	12	True				
ANR	3106437	IdentifierDeclStatement	MyString display ;	820:1:24683:24699	3106310	3	True				
ANR	3106438	IdentifierDecl	display		3106310	0					
ANR	3106439	IdentifierDeclType	MyString		3106310	0					
ANR	3106440	Identifier	display		3106310	1					
ANR	3106441	ExpressionStatement	args . GetArgsStringForDisplay ( & display )	821:1:24702:24742	3106310	4	True				
ANR	3106442	CallExpression	args . GetArgsStringForDisplay ( & display )		3106310	0					
ANR	3106443	Callee	args . GetArgsStringForDisplay		3106310	0					
ANR	3106444	MemberAccess	args . GetArgsStringForDisplay		3106310	0					
ANR	3106445	Identifier	args		3106310	0					
ANR	3106446	Identifier	GetArgsStringForDisplay		3106310	1					
ANR	3106447	ArgumentList	& display		3106310	1					
ANR	3106448	Argument	& display		3106310	0					
ANR	3106449	UnaryOperationExpression	& display		3106310	0					
ANR	3106450	UnaryOperator	&		3106310	0					
ANR	3106451	Identifier	display		3106310	1					
ANR	3106452	ExpressionStatement	"debug_printf ( DEBUG_VERBOSE , ""Executing: %s\\n"" , display . Value ( ) )"	822:1:24745:24810	3106310	5	True				
ANR	3106453	CallExpression	"debug_printf ( DEBUG_VERBOSE , ""Executing: %s\\n"" , display . Value ( ) )"		3106310	0					
ANR	3106454	Callee	debug_printf		3106310	0					
ANR	3106455	Identifier	debug_printf		3106310	0					
ANR	3106456	ArgumentList	DEBUG_VERBOSE		3106310	1					
ANR	3106457	Argument	DEBUG_VERBOSE		3106310	0					
ANR	3106458	Identifier	DEBUG_VERBOSE		3106310	0					
ANR	3106459	Argument	"""Executing: %s\\n"""		3106310	1					
ANR	3106460	PrimaryExpression	"""Executing: %s\\n"""		3106310	0					
ANR	3106461	Argument	display . Value ( )		3106310	2					
ANR	3106462	CallExpression	display . Value ( )		3106310	0					
ANR	3106463	Callee	display . Value		3106310	0					
ANR	3106464	MemberAccess	display . Value		3106310	0					
ANR	3106465	Identifier	display		3106310	0					
ANR	3106466	Identifier	Value		3106310	1					
ANR	3106467	ArgumentList			3106310	1					
ANR	3106468	IfStatement	if ( util_popen ( args ) != 0 )		3106310	6					
ANR	3106469	Condition	util_popen ( args ) != 0	823:6:24818:24840	3106310	0	True				
ANR	3106470	EqualityExpression	util_popen ( args ) != 0		3106310	0		!=			
ANR	3106471	CallExpression	util_popen ( args )		3106310	0					
ANR	3106472	Callee	util_popen		3106310	0					
ANR	3106473	Identifier	util_popen		3106310	0					
ANR	3106474	ArgumentList	args		3106310	1					
ANR	3106475	Argument	args		3106310	0					
ANR	3106476	Identifier	args		3106310	0					
ANR	3106477	PrimaryExpression	0		3106310	1					
ANR	3106478	CompoundStatement		34:32:866:866	3106310	1					
ANR	3106479	ExpressionStatement	"debug_printf ( DEBUG_NORMAL , ""Error removing DAG node jobs\\n"" )"	827:2:25016:25077	3106310	0	True				
ANR	3106480	CallExpression	"debug_printf ( DEBUG_NORMAL , ""Error removing DAG node jobs\\n"" )"		3106310	0					
ANR	3106481	Callee	debug_printf		3106310	0					
ANR	3106482	Identifier	debug_printf		3106310	0					
ANR	3106483	ArgumentList	DEBUG_NORMAL		3106310	1					
ANR	3106484	Argument	DEBUG_NORMAL		3106310	0					
ANR	3106485	Identifier	DEBUG_NORMAL		3106310	0					
ANR	3106486	Argument	"""Error removing DAG node jobs\\n"""		3106310	1					
ANR	3106487	PrimaryExpression	"""Error removing DAG node jobs\\n"""		3106310	0					
ANR	3106488	ReturnType	void		3106310	1					
ANR	3106489	Identifier	Dag :: RemoveBatchJob		3106310	2					
ANR	3106490	ParameterList	Job * node		3106310	3					
ANR	3106491	Parameter	Job * node	790:20:23966:23974	3106310	0	True				
ANR	3106492	ParameterType	Job *		3106310	0					
ANR	3106493	Identifier	node		3106310	1					
ANR	3106494	CFGEntryNode	ENTRY		3106310		True				
ANR	3106495	CFGExitNode	EXIT		3106310		True				
ANR	3106496	Symbol	constraint . Value		3106310						
ANR	3106497	Symbol	node -> GetJobName		3106310						
ANR	3106498	Symbol	display		3106310						
ANR	3106499	Symbol	DEBUG_NORMAL		3106310						
ANR	3106500	Symbol	ATTR_DAGMAN_JOB_ID		3106310						
ANR	3106501	Symbol	_DAGManJobId -> _cluster		3106310						
ANR	3106502	Symbol	args		3106310						
ANR	3106503	Symbol	node		3106310						
ANR	3106504	Symbol	ATTR_CLUSTER_ID		3106310						
ANR	3106505	Symbol	display . Value		3106310						
ANR	3106506	Symbol	node -> JobType		3106310						
ANR	3106507	Symbol	node -> _CondorID . _cluster		3106310						
ANR	3106508	Symbol	_condorRmExe		3106310						
ANR	3106509	Symbol	_DAGManJobId		3106310						
ANR	3106510	Symbol	util_popen		3106310						
ANR	3106511	Symbol	constraint		3106310						
ANR	3106512	Symbol	* node		3106310						
ANR	3106513	Symbol	& display		3106310						
ANR	3106514	Symbol	* _DAGManJobId		3106310						
ANR	3106515	Symbol	_storkRmExe		3106310						
ANR	3106516	Symbol	DEBUG_VERBOSE		3106310						
ANR	3106517	Symbol	node -> _CondorID		3106310						
ANR	3106518	Function	Dag :: ProcessJobProcEnd	832:0:25163:26989							
ANR	3106519	FunctionDef	"Dag :: ProcessJobProcEnd (Job * job , bool recovery , bool failed)"		3106518	0					
ANR	3106520	CompoundStatement		833:61:25229:26989	3106518	0					
ANR	3106521	ExpressionStatement	ASSERT ( _isSplice == false )	837:1:25331:25360	3106518	0	True				
ANR	3106522	CallExpression	ASSERT ( _isSplice == false )		3106518	0					
ANR	3106523	Callee	ASSERT		3106518	0					
ANR	3106524	Identifier	ASSERT		3106518	0					
ANR	3106525	ArgumentList	_isSplice == false		3106518	1					
ANR	3106526	Argument	_isSplice == false		3106518	0					
ANR	3106527	EqualityExpression	_isSplice == false		3106518	0		==			
ANR	3106528	Identifier	_isSplice		3106518	0					
ANR	3106529	Identifier	false		3106518	1					
ANR	3106530	IfStatement	if ( job -> _queuedNodeJobProcs == 0 )		3106518	1					
ANR	3106531	Condition	job -> _queuedNodeJobProcs == 0	839:6:25369:25397	3106518	0	True				
ANR	3106532	EqualityExpression	job -> _queuedNodeJobProcs == 0		3106518	0		==			
ANR	3106533	PtrMemberAccess	job -> _queuedNodeJobProcs		3106518	0					
ANR	3106534	Identifier	job		3106518	0					
ANR	3106535	Identifier	_queuedNodeJobProcs		3106518	1					
ANR	3106536	PrimaryExpression	0		3106518	1					
ANR	3106537	CompoundStatement		7:38:171:171	3106518	1					
ANR	3106538	ExpressionStatement	"( void ) job -> UnmonitorLogFile ( _condorLogRdr , _storkLogRdr )"	840:2:25405:25463	3106518	0	True				
ANR	3106539	CastExpression	"( void ) job -> UnmonitorLogFile ( _condorLogRdr , _storkLogRdr )"		3106518	0					
ANR	3106540	CastTarget	void		3106518	0					
ANR	3106541	CallExpression	"job -> UnmonitorLogFile ( _condorLogRdr , _storkLogRdr )"		3106518	1					
ANR	3106542	Callee	job -> UnmonitorLogFile		3106518	0					
ANR	3106543	PtrMemberAccess	job -> UnmonitorLogFile		3106518	0					
ANR	3106544	Identifier	job		3106518	0					
ANR	3106545	Identifier	UnmonitorLogFile		3106518	1					
ANR	3106546	ArgumentList	_condorLogRdr		3106518	1					
ANR	3106547	Argument	_condorLogRdr		3106518	0					
ANR	3106548	Identifier	_condorLogRdr		3106518	0					
ANR	3106549	Argument	_storkLogRdr		3106518	1					
ANR	3106550	Identifier	_storkLogRdr		3106518	0					
ANR	3106551	ExpressionStatement	_jobstateLog . WriteJobSuccessOrFailure ( job )	843:2:25515:25559	3106518	1	True				
ANR	3106552	CallExpression	_jobstateLog . WriteJobSuccessOrFailure ( job )		3106518	0					
ANR	3106553	Callee	_jobstateLog . WriteJobSuccessOrFailure		3106518	0					
ANR	3106554	MemberAccess	_jobstateLog . WriteJobSuccessOrFailure		3106518	0					
ANR	3106555	Identifier	_jobstateLog		3106518	0					
ANR	3106556	Identifier	WriteJobSuccessOrFailure		3106518	1					
ANR	3106557	ArgumentList	job		3106518	1					
ANR	3106558	Argument	job		3106518	0					
ANR	3106559	Identifier	job		3106518	0					
ANR	3106560	IfStatement	if ( failed && job -> _scriptPost == NULL )		3106518	2					
ANR	3106561	Condition	failed && job -> _scriptPost == NULL	852:6:25744:25777	3106518	0	True				
ANR	3106562	AndExpression	failed && job -> _scriptPost == NULL		3106518	0		&&			
ANR	3106563	Identifier	failed		3106518	0					
ANR	3106564	EqualityExpression	job -> _scriptPost == NULL		3106518	1		==			
ANR	3106565	PtrMemberAccess	job -> _scriptPost		3106518	0					
ANR	3106566	Identifier	job		3106518	0					
ANR	3106567	Identifier	_scriptPost		3106518	1					
ANR	3106568	Identifier	NULL		3106518	1					
ANR	3106569	CompoundStatement		20:43:551:551	3106518	1					
ANR	3106570	IfStatement	if ( job -> GetRetries ( ) < job -> GetRetryMax ( ) )		3106518	0					
ANR	3106571	Condition	job -> GetRetries ( ) < job -> GetRetryMax ( )	853:6:25789:25826	3106518	0	True				
ANR	3106572	RelationalExpression	job -> GetRetries ( ) < job -> GetRetryMax ( )		3106518	0		<			
ANR	3106573	CallExpression	job -> GetRetries ( )		3106518	0					
ANR	3106574	Callee	job -> GetRetries		3106518	0					
ANR	3106575	PtrMemberAccess	job -> GetRetries		3106518	0					
ANR	3106576	Identifier	job		3106518	0					
ANR	3106577	Identifier	GetRetries		3106518	1					
ANR	3106578	ArgumentList			3106518	1					
ANR	3106579	CallExpression	job -> GetRetryMax ( )		3106518	1					
ANR	3106580	Callee	job -> GetRetryMax		3106518	0					
ANR	3106581	PtrMemberAccess	job -> GetRetryMax		3106518	0					
ANR	3106582	Identifier	job		3106518	0					
ANR	3106583	Identifier	GetRetryMax		3106518	1					
ANR	3106584	ArgumentList			3106518	1					
ANR	3106585	CompoundStatement		21:47:600:600	3106518	1					
ANR	3106586	ExpressionStatement	"RestartNode ( job , recovery )"	854:3:25835:25863	3106518	0	True				
ANR	3106587	CallExpression	"RestartNode ( job , recovery )"		3106518	0					
ANR	3106588	Callee	RestartNode		3106518	0					
ANR	3106589	Identifier	RestartNode		3106518	0					
ANR	3106590	ArgumentList	job		3106518	1					
ANR	3106591	Argument	job		3106518	0					
ANR	3106592	Identifier	job		3106518	0					
ANR	3106593	Argument	recovery		3106518	1					
ANR	3106594	Identifier	recovery		3106518	0					
ANR	3106595	ElseStatement	else		3106518	0					
ANR	3106596	CompoundStatement		23:9:644:644	3106518	0					
ANR	3106597	IfStatement	if ( job -> GetRetryMax ( ) > 0 )		3106518	0					
ANR	3106598	Condition	job -> GetRetryMax ( ) > 0	857:7:25920:25941	3106518	0	True				
ANR	3106599	RelationalExpression	job -> GetRetryMax ( ) > 0		3106518	0		>			
ANR	3106600	CallExpression	job -> GetRetryMax ( )		3106518	0					
ANR	3106601	Callee	job -> GetRetryMax		3106518	0					
ANR	3106602	PtrMemberAccess	job -> GetRetryMax		3106518	0					
ANR	3106603	Identifier	job		3106518	0					
ANR	3106604	Identifier	GetRetryMax		3106518	1					
ANR	3106605	ArgumentList			3106518	1					
ANR	3106606	PrimaryExpression	0		3106518	1					
ANR	3106607	CompoundStatement		27:4:760:798	3106518	1					
ANR	3106608	IdentifierDeclStatement	char * tmp = strnewp ( job -> error_text ) ;	859:4:25990:26028	3106518	0	True				
ANR	3106609	IdentifierDecl	* tmp = strnewp ( job -> error_text )		3106518	0					
ANR	3106610	IdentifierDeclType	char *		3106518	0					
ANR	3106611	Identifier	tmp		3106518	1					
ANR	3106612	AssignmentExpression	* tmp = strnewp ( job -> error_text )		3106518	2		=			
ANR	3106613	Identifier	tmp		3106518	0					
ANR	3106614	CallExpression	strnewp ( job -> error_text )		3106518	1					
ANR	3106615	Callee	strnewp		3106518	0					
ANR	3106616	Identifier	strnewp		3106518	0					
ANR	3106617	ArgumentList	job -> error_text		3106518	1					
ANR	3106618	Argument	job -> error_text		3106518	0					
ANR	3106619	PtrMemberAccess	job -> error_text		3106518	0					
ANR	3106620	Identifier	job		3106518	0					
ANR	3106621	Identifier	error_text		3106518	1					
ANR	3106622	ExpressionStatement	"snprintf ( job -> error_text , JOB_ERROR_TEXT_MAXLEN , ""%s (after %d node retries)"" , tmp , job -> GetRetries ( ) )"	860:4:26034:26150	3106518	1	True				
ANR	3106623	CallExpression	"snprintf ( job -> error_text , JOB_ERROR_TEXT_MAXLEN , ""%s (after %d node retries)"" , tmp , job -> GetRetries ( ) )"		3106518	0					
ANR	3106624	Callee	snprintf		3106518	0					
ANR	3106625	Identifier	snprintf		3106518	0					
ANR	3106626	ArgumentList	job -> error_text		3106518	1					
ANR	3106627	Argument	job -> error_text		3106518	0					
ANR	3106628	PtrMemberAccess	job -> error_text		3106518	0					
ANR	3106629	Identifier	job		3106518	0					
ANR	3106630	Identifier	error_text		3106518	1					
ANR	3106631	Argument	JOB_ERROR_TEXT_MAXLEN		3106518	1					
ANR	3106632	Identifier	JOB_ERROR_TEXT_MAXLEN		3106518	0					
ANR	3106633	Argument	"""%s (after %d node retries)"""		3106518	2					
ANR	3106634	PrimaryExpression	"""%s (after %d node retries)"""		3106518	0					
ANR	3106635	Argument	tmp		3106518	3					
ANR	3106636	Identifier	tmp		3106518	0					
ANR	3106637	Argument	job -> GetRetries ( )		3106518	4					
ANR	3106638	CallExpression	job -> GetRetries ( )		3106518	0					
ANR	3106639	Callee	job -> GetRetries		3106518	0					
ANR	3106640	PtrMemberAccess	job -> GetRetries		3106518	0					
ANR	3106641	Identifier	job		3106518	0					
ANR	3106642	Identifier	GetRetries		3106518	1					
ANR	3106643	ArgumentList			3106518	1					
ANR	3106644	Statement	delete	863:4:26156:26161	3106518	2	True				
ANR	3106645	Statement	[	863:11:26163:26163	3106518	3	True				
ANR	3106646	Statement	]	863:12:26164:26164	3106518	4	True				
ANR	3106647	ExpressionStatement	tmp	863:14:26166:26169	3106518	5	True				
ANR	3106648	Identifier	tmp		3106518	0					
ANR	3106649	IfStatement	if ( job -> _queuedNodeJobProcs == 0 )		3106518	1					
ANR	3106650	Condition	job -> _queuedNodeJobProcs == 0	865:8:26187:26215	3106518	0	True				
ANR	3106651	EqualityExpression	job -> _queuedNodeJobProcs == 0		3106518	0		==			
ANR	3106652	PtrMemberAccess	job -> _queuedNodeJobProcs		3106518	0					
ANR	3106653	Identifier	job		3106518	0					
ANR	3106654	Identifier	_queuedNodeJobProcs		3106518	1					
ANR	3106655	PrimaryExpression	0		3106518	1					
ANR	3106656	CompoundStatement		33:40:989:989	3106518	1					
ANR	3106657	ExpressionStatement	_numNodesFailed ++	866:4:26225:26242	3106518	0	True				
ANR	3106658	PostIncDecOperationExpression	_numNodesFailed ++		3106518	0					
ANR	3106659	Identifier	_numNodesFailed		3106518	0					
ANR	3106660	IncDec	++		3106518	1					
ANR	3106661	ReturnStatement	return ;	869:2:26255:26261	3106518	1	True				
ANR	3106662	IfStatement	if ( job -> _queuedNodeJobProcs == 0 )		3106518	3					
ANR	3106663	Condition	job -> _queuedNodeJobProcs == 0	872:6:26273:26301	3106518	0	True				
ANR	3106664	EqualityExpression	job -> _queuedNodeJobProcs == 0		3106518	0		==			
ANR	3106665	PtrMemberAccess	job -> _queuedNodeJobProcs		3106518	0					
ANR	3106666	Identifier	job		3106518	0					
ANR	3106667	Identifier	_queuedNodeJobProcs		3106518	1					
ANR	3106668	PrimaryExpression	0		3106518	1					
ANR	3106669	CompoundStatement		40:38:1075:1075	3106518	1					
ANR	3106670	ExpressionStatement	"debug_printf ( DEBUG_NORMAL , ""Node %s job completed\\n"" , job -> GetJobName ( ) )"	874:2:26348:26426	3106518	0	True				
ANR	3106671	CallExpression	"debug_printf ( DEBUG_NORMAL , ""Node %s job completed\\n"" , job -> GetJobName ( ) )"		3106518	0					
ANR	3106672	Callee	debug_printf		3106518	0					
ANR	3106673	Identifier	debug_printf		3106518	0					
ANR	3106674	ArgumentList	DEBUG_NORMAL		3106518	1					
ANR	3106675	Argument	DEBUG_NORMAL		3106518	0					
ANR	3106676	Identifier	DEBUG_NORMAL		3106518	0					
ANR	3106677	Argument	"""Node %s job completed\\n"""		3106518	1					
ANR	3106678	PrimaryExpression	"""Node %s job completed\\n"""		3106518	0					
ANR	3106679	Argument	job -> GetJobName ( )		3106518	2					
ANR	3106680	CallExpression	job -> GetJobName ( )		3106518	0					
ANR	3106681	Callee	job -> GetJobName		3106518	0					
ANR	3106682	PtrMemberAccess	job -> GetJobName		3106518	0					
ANR	3106683	Identifier	job		3106518	0					
ANR	3106684	Identifier	GetJobName		3106518	1					
ANR	3106685	ArgumentList			3106518	1					
ANR	3106686	IfStatement	if ( job -> _scriptPost != NULL )		3106518	1					
ANR	3106687	Condition	job -> _scriptPost != NULL	878:5:26490:26513	3106518	0	True				
ANR	3106688	EqualityExpression	job -> _scriptPost != NULL		3106518	0		!=			
ANR	3106689	PtrMemberAccess	job -> _scriptPost		3106518	0					
ANR	3106690	Identifier	job		3106518	0					
ANR	3106691	Identifier	_scriptPost		3106518	1					
ANR	3106692	Identifier	NULL		3106518	1					
ANR	3106693	CompoundStatement		46:31:1286:1286	3106518	1					
ANR	3106694	IfStatement	if ( recovery )		3106518	0					
ANR	3106695	Condition	recovery	879:8:26526:26533	3106518	0	True				
ANR	3106696	Identifier	recovery		3106518	0					
ANR	3106697	CompoundStatement		47:19:1307:1307	3106518	1					
ANR	3106698	ExpressionStatement	job -> _Status = Job :: STATUS_POSTRUN	880:4:26543:26577	3106518	0	True				
ANR	3106699	AssignmentExpression	job -> _Status = Job :: STATUS_POSTRUN		3106518	0		=			
ANR	3106700	PtrMemberAccess	job -> _Status		3106518	0					
ANR	3106701	Identifier	job		3106518	0					
ANR	3106702	Identifier	_Status		3106518	1					
ANR	3106703	Identifier	Job :: STATUS_POSTRUN		3106518	1					
ANR	3106704	ExpressionStatement	_postRunNodeCount ++	881:4:26583:26602	3106518	1	True				
ANR	3106705	PostIncDecOperationExpression	_postRunNodeCount ++		3106518	0					
ANR	3106706	Identifier	_postRunNodeCount		3106518	0					
ANR	3106707	IncDec	++		3106518	1					
ANR	3106708	ExpressionStatement	"( void ) job -> MonitorLogFile ( _condorLogRdr , _storkLogRdr , _nfsLogIsError , _recovery , _defaultNodeLog )"	882:4:26608:26714	3106518	2	True				
ANR	3106709	CastExpression	"( void ) job -> MonitorLogFile ( _condorLogRdr , _storkLogRdr , _nfsLogIsError , _recovery , _defaultNodeLog )"		3106518	0					
ANR	3106710	CastTarget	void		3106518	0					
ANR	3106711	CallExpression	"job -> MonitorLogFile ( _condorLogRdr , _storkLogRdr , _nfsLogIsError , _recovery , _defaultNodeLog )"		3106518	1					
ANR	3106712	Callee	job -> MonitorLogFile		3106518	0					
ANR	3106713	PtrMemberAccess	job -> MonitorLogFile		3106518	0					
ANR	3106714	Identifier	job		3106518	0					
ANR	3106715	Identifier	MonitorLogFile		3106518	1					
ANR	3106716	ArgumentList	_condorLogRdr		3106518	1					
ANR	3106717	Argument	_condorLogRdr		3106518	0					
ANR	3106718	Identifier	_condorLogRdr		3106518	0					
ANR	3106719	Argument	_storkLogRdr		3106518	1					
ANR	3106720	Identifier	_storkLogRdr		3106518	0					
ANR	3106721	Argument	_nfsLogIsError		3106518	2					
ANR	3106722	Identifier	_nfsLogIsError		3106518	0					
ANR	3106723	Argument	_recovery		3106518	3					
ANR	3106724	Identifier	_recovery		3106518	0					
ANR	3106725	Argument	_defaultNodeLog		3106518	4					
ANR	3106726	Identifier	_defaultNodeLog		3106518	0					
ANR	3106727	ElseStatement	else		3106518	0					
ANR	3106728	CompoundStatement		52:10:1496:1496	3106518	0					
ANR	3106729	ExpressionStatement	"( void ) RunPostScript ( job , _alwaysRunPost , 0 )"	885:4:26732:26777	3106518	0	True				
ANR	3106730	CastExpression	"( void ) RunPostScript ( job , _alwaysRunPost , 0 )"		3106518	0					
ANR	3106731	CastTarget	void		3106518	0					
ANR	3106732	CallExpression	"RunPostScript ( job , _alwaysRunPost , 0 )"		3106518	1					
ANR	3106733	Callee	RunPostScript		3106518	0					
ANR	3106734	Identifier	RunPostScript		3106518	0					
ANR	3106735	ArgumentList	job		3106518	1					
ANR	3106736	Argument	job		3106518	0					
ANR	3106737	Identifier	job		3106518	0					
ANR	3106738	Argument	_alwaysRunPost		3106518	1					
ANR	3106739	Identifier	_alwaysRunPost		3106518	0					
ANR	3106740	Argument	0		3106518	2					
ANR	3106741	PrimaryExpression	0		3106518	0					
ANR	3106742	ElseStatement	else		3106518	0					
ANR	3106743	IfStatement	if ( job -> _Status != Job :: STATUS_ERROR )		3106518	0					
ANR	3106744	Condition	job -> _Status != Job :: STATUS_ERROR	887:13:26797:26829	3106518	0	True				
ANR	3106745	EqualityExpression	job -> _Status != Job :: STATUS_ERROR		3106518	0		!=			
ANR	3106746	PtrMemberAccess	job -> _Status		3106518	0					
ANR	3106747	Identifier	job		3106518	0					
ANR	3106748	Identifier	_Status		3106518	1					
ANR	3106749	Identifier	Job :: STATUS_ERROR		3106518	1					
ANR	3106750	CompoundStatement		55:49:1603:1603	3106518	1					
ANR	3106751	ExpressionStatement	"TerminateJob ( job , recovery )"	890:3:26951:26980	3106518	0	True				
ANR	3106752	CallExpression	"TerminateJob ( job , recovery )"		3106518	0					
ANR	3106753	Callee	TerminateJob		3106518	0					
ANR	3106754	Identifier	TerminateJob		3106518	0					
ANR	3106755	ArgumentList	job		3106518	1					
ANR	3106756	Argument	job		3106518	0					
ANR	3106757	Identifier	job		3106518	0					
ANR	3106758	Argument	recovery		3106518	1					
ANR	3106759	Identifier	recovery		3106518	0					
ANR	3106760	ReturnType	void		3106518	1					
ANR	3106761	Identifier	Dag :: ProcessJobProcEnd		3106518	2					
ANR	3106762	ParameterList	"Job * job , bool recovery , bool failed"		3106518	3					
ANR	3106763	Parameter	Job * job	833:23:25191:25198	3106518	0	True				
ANR	3106764	ParameterType	Job *		3106518	0					
ANR	3106765	Identifier	job		3106518	1					
ANR	3106766	Parameter	bool recovery	833:33:25201:25213	3106518	1	True				
ANR	3106767	ParameterType	bool		3106518	0					
ANR	3106768	Identifier	recovery		3106518	1					
ANR	3106769	Parameter	bool failed	833:48:25216:25226	3106518	2	True				
ANR	3106770	ParameterType	bool		3106518	0					
ANR	3106771	Identifier	failed		3106518	1					
ANR	3106772	CFGEntryNode	ENTRY		3106518		True				
ANR	3106773	CFGExitNode	EXIT		3106518		True				
ANR	3106774	Symbol	job -> _Status		3106518						
ANR	3106775	Symbol	job -> error_text		3106518						
ANR	3106776	Symbol	_isSplice		3106518						
ANR	3106777	Symbol	job -> GetRetryMax		3106518						
ANR	3106778	Symbol	job -> _queuedNodeJobProcs		3106518						
ANR	3106779	Symbol	DEBUG_NORMAL		3106518						
ANR	3106780	Symbol	recovery		3106518						
ANR	3106781	Symbol	_condorLogRdr		3106518						
ANR	3106782	Symbol	_jobstateLog		3106518						
ANR	3106783	Symbol	job -> _scriptPost		3106518						
ANR	3106784	Symbol	job -> GetRetries		3106518						
ANR	3106785	Symbol	tmp		3106518						
ANR	3106786	Symbol	strnewp		3106518						
ANR	3106787	Symbol	_alwaysRunPost		3106518						
ANR	3106788	Symbol	_nfsLogIsError		3106518						
ANR	3106789	Symbol	NULL		3106518						
ANR	3106790	Symbol	JOB_ERROR_TEXT_MAXLEN		3106518						
ANR	3106791	Symbol	_postRunNodeCount		3106518						
ANR	3106792	Symbol	* job		3106518						
ANR	3106793	Symbol	job -> GetJobName		3106518						
ANR	3106794	Symbol	false		3106518						
ANR	3106795	Symbol	_defaultNodeLog		3106518						
ANR	3106796	Symbol	Job :: STATUS_ERROR		3106518						
ANR	3106797	Symbol	failed		3106518						
ANR	3106798	Symbol	Job :: STATUS_POSTRUN		3106518						
ANR	3106799	Symbol	_recovery		3106518						
ANR	3106800	Symbol	_numNodesFailed		3106518						
ANR	3106801	Symbol	job		3106518						
ANR	3106802	Symbol	_storkLogRdr		3106518						
ANR	3106803	Function	Dag :: ProcessPostTermEvent	896:0:27070:31146							
ANR	3106804	FunctionDef	"Dag :: ProcessPostTermEvent (const ULogEvent * event , Job * job , bool recovery)"		3106803	0					
ANR	3106805	CompoundStatement		898:17:27152:31146	3106803	0					
ANR	3106806	IfStatement	if ( job )		3106803	0					
ANR	3106807	Condition	job	900:5:27160:27162	3106803	0	True				
ANR	3106808	Identifier	job		3106803	0					
ANR	3106809	CompoundStatement		122:2:3825:3874	3106803	1					
ANR	3106810	ExpressionStatement	"( void ) job -> UnmonitorLogFile ( _condorLogRdr , _storkLogRdr )"	901:2:27170:27228	3106803	0	True				
ANR	3106811	CastExpression	"( void ) job -> UnmonitorLogFile ( _condorLogRdr , _storkLogRdr )"		3106803	0					
ANR	3106812	CastTarget	void		3106803	0					
ANR	3106813	CallExpression	"job -> UnmonitorLogFile ( _condorLogRdr , _storkLogRdr )"		3106803	1					
ANR	3106814	Callee	job -> UnmonitorLogFile		3106803	0					
ANR	3106815	PtrMemberAccess	job -> UnmonitorLogFile		3106803	0					
ANR	3106816	Identifier	job		3106803	0					
ANR	3106817	Identifier	UnmonitorLogFile		3106803	1					
ANR	3106818	ArgumentList	_condorLogRdr		3106803	1					
ANR	3106819	Argument	_condorLogRdr		3106803	0					
ANR	3106820	Identifier	_condorLogRdr		3106803	0					
ANR	3106821	Argument	_storkLogRdr		3106803	1					
ANR	3106822	Identifier	_storkLogRdr		3106803	0					
ANR	3106823	IfStatement	if ( job -> GetStatus ( ) == Job :: STATUS_POSTRUN )		3106803	1					
ANR	3106824	Condition	job -> GetStatus ( ) == Job :: STATUS_POSTRUN	910:7:27669:27707	3106803	0	True				
ANR	3106825	EqualityExpression	job -> GetStatus ( ) == Job :: STATUS_POSTRUN		3106803	0		==			
ANR	3106826	CallExpression	job -> GetStatus ( )		3106803	0					
ANR	3106827	Callee	job -> GetStatus		3106803	0					
ANR	3106828	PtrMemberAccess	job -> GetStatus		3106803	0					
ANR	3106829	Identifier	job		3106803	0					
ANR	3106830	Identifier	GetStatus		3106803	1					
ANR	3106831	ArgumentList			3106803	1					
ANR	3106832	Identifier	Job :: STATUS_POSTRUN		3106803	1					
ANR	3106833	CompoundStatement		13:49:558:558	3106803	1					
ANR	3106834	ExpressionStatement	_postRunNodeCount --	911:3:27716:27735	3106803	0	True				
ANR	3106835	PostIncDecOperationExpression	_postRunNodeCount --		3106803	0					
ANR	3106836	Identifier	_postRunNodeCount		3106803	0					
ANR	3106837	IncDec	--		3106803	1					
ANR	3106838	ElseStatement	else		3106803	0					
ANR	3106839	CompoundStatement		15:9:593:593	3106803	0					
ANR	3106840	ExpressionStatement	ASSERT ( recovery )	913:3:27751:27769	3106803	0	True				
ANR	3106841	CallExpression	ASSERT ( recovery )		3106803	0					
ANR	3106842	Callee	ASSERT		3106803	0					
ANR	3106843	Identifier	ASSERT		3106803	0					
ANR	3106844	ArgumentList	recovery		3106803	1					
ANR	3106845	Argument	recovery		3106803	0					
ANR	3106846	Identifier	recovery		3106803	0					
ANR	3106847	IdentifierDeclStatement	const PostScriptTerminatedEvent * termEvent = ( const PostScriptTerminatedEvent * ) event ;	920:2:28040:28128	3106803	2	True				
ANR	3106848	IdentifierDecl	* termEvent = ( const PostScriptTerminatedEvent * ) event		3106803	0					
ANR	3106849	IdentifierDeclType	const PostScriptTerminatedEvent *		3106803	0					
ANR	3106850	Identifier	termEvent		3106803	1					
ANR	3106851	AssignmentExpression	* termEvent = ( const PostScriptTerminatedEvent * ) event		3106803	2		=			
ANR	3106852	Identifier	termEvent		3106803	0					
ANR	3106853	CastExpression	( const PostScriptTerminatedEvent * ) event		3106803	1					
ANR	3106854	CastTarget	const PostScriptTerminatedEvent *		3106803	0					
ANR	3106855	Identifier	event		3106803	1					
ANR	3106856	ExpressionStatement	"debug_printf ( DEBUG_NORMAL , ""POST Script of Node %s "" , job -> GetJobName ( ) )"	923:2:28133:28211	3106803	3	True				
ANR	3106857	CallExpression	"debug_printf ( DEBUG_NORMAL , ""POST Script of Node %s "" , job -> GetJobName ( ) )"		3106803	0					
ANR	3106858	Callee	debug_printf		3106803	0					
ANR	3106859	Identifier	debug_printf		3106803	0					
ANR	3106860	ArgumentList	DEBUG_NORMAL		3106803	1					
ANR	3106861	Argument	DEBUG_NORMAL		3106803	0					
ANR	3106862	Identifier	DEBUG_NORMAL		3106803	0					
ANR	3106863	Argument	"""POST Script of Node %s """		3106803	1					
ANR	3106864	PrimaryExpression	"""POST Script of Node %s """		3106803	0					
ANR	3106865	Argument	job -> GetJobName ( )		3106803	2					
ANR	3106866	CallExpression	job -> GetJobName ( )		3106803	0					
ANR	3106867	Callee	job -> GetJobName		3106803	0					
ANR	3106868	PtrMemberAccess	job -> GetJobName		3106803	0					
ANR	3106869	Identifier	job		3106803	0					
ANR	3106870	Identifier	GetJobName		3106803	1					
ANR	3106871	ArgumentList			3106803	1					
ANR	3106872	IfStatement	if ( ! ( termEvent -> normal && termEvent -> returnValue == 0 ) )		3106803	4					
ANR	3106873	Condition	! ( termEvent -> normal && termEvent -> returnValue == 0 )	925:6:28219:28269	3106803	0	True				
ANR	3106874	UnaryOperationExpression	! ( termEvent -> normal && termEvent -> returnValue == 0 )		3106803	0					
ANR	3106875	UnaryOperator	!		3106803	0					
ANR	3106876	AndExpression	termEvent -> normal && termEvent -> returnValue == 0		3106803	1		&&			
ANR	3106877	PtrMemberAccess	termEvent -> normal		3106803	0					
ANR	3106878	Identifier	termEvent		3106803	0					
ANR	3106879	Identifier	normal		3106803	1					
ANR	3106880	EqualityExpression	termEvent -> returnValue == 0		3106803	1		==			
ANR	3106881	PtrMemberAccess	termEvent -> returnValue		3106803	0					
ANR	3106882	Identifier	termEvent		3106803	0					
ANR	3106883	Identifier	returnValue		3106803	1					
ANR	3106884	PrimaryExpression	0		3106803	1					
ANR	3106885	CompoundStatement		35:3:1284:1308	3106803	1					
ANR	3106886	ExpressionStatement	job -> _Status = Job :: STATUS_ERROR	927:3:28330:28362	3106803	0	True				
ANR	3106887	AssignmentExpression	job -> _Status = Job :: STATUS_ERROR		3106803	0		=			
ANR	3106888	PtrMemberAccess	job -> _Status		3106803	0					
ANR	3106889	Identifier	job		3106803	0					
ANR	3106890	Identifier	_Status		3106803	1					
ANR	3106891	Identifier	Job :: STATUS_ERROR		3106803	1					
ANR	3106892	IdentifierDeclStatement	int mainJobRetval = job -> retval ;	929:3:28368:28399	3106803	1	True				
ANR	3106893	IdentifierDecl	mainJobRetval = job -> retval		3106803	0					
ANR	3106894	IdentifierDeclType	int		3106803	0					
ANR	3106895	Identifier	mainJobRetval		3106803	1					
ANR	3106896	AssignmentExpression	mainJobRetval = job -> retval		3106803	2		=			
ANR	3106897	Identifier	mainJobRetval		3106803	0					
ANR	3106898	PtrMemberAccess	job -> retval		3106803	1					
ANR	3106899	Identifier	job		3106803	0					
ANR	3106900	Identifier	retval		3106803	1					
ANR	3106901	IdentifierDeclStatement	const int ERR_BUF_LEN = 128 ;	931:3:28405:28432	3106803	2	True				
ANR	3106902	IdentifierDecl	ERR_BUF_LEN = 128		3106803	0					
ANR	3106903	IdentifierDeclType	const int		3106803	0					
ANR	3106904	Identifier	ERR_BUF_LEN		3106803	1					
ANR	3106905	AssignmentExpression	ERR_BUF_LEN = 128		3106803	2		=			
ANR	3106906	Identifier	ERR_BUF_LEN		3106803	0					
ANR	3106907	PrimaryExpression	128		3106803	1					
ANR	3106908	IdentifierDeclStatement	char errBuf [ ERR_BUF_LEN ] ;	932:3:28437:28461	3106803	3	True				
ANR	3106909	IdentifierDecl	errBuf [ ERR_BUF_LEN ]		3106803	0					
ANR	3106910	IdentifierDeclType	char [ ERR_BUF_LEN ]		3106803	0					
ANR	3106911	Identifier	errBuf		3106803	1					
ANR	3106912	Identifier	ERR_BUF_LEN		3106803	2					
ANR	3106913	IfStatement	if ( termEvent -> normal )		3106803	4					
ANR	3106914	Condition	termEvent -> normal	934:7:28471:28487	3106803	0	True				
ANR	3106915	PtrMemberAccess	termEvent -> normal		3106803	0					
ANR	3106916	Identifier	termEvent		3106803	0					
ANR	3106917	Identifier	normal		3106803	1					
ANR	3106918	CompoundStatement		37:27:1338:1338	3106803	1					
ANR	3106919	ExpressionStatement	"snprintf ( errBuf , ERR_BUF_LEN , ""failed with status %d"" , termEvent -> returnValue )"	936:4:28546:28641	3106803	0	True				
ANR	3106920	CallExpression	"snprintf ( errBuf , ERR_BUF_LEN , ""failed with status %d"" , termEvent -> returnValue )"		3106803	0					
ANR	3106921	Callee	snprintf		3106803	0					
ANR	3106922	Identifier	snprintf		3106803	0					
ANR	3106923	ArgumentList	errBuf		3106803	1					
ANR	3106924	Argument	errBuf		3106803	0					
ANR	3106925	Identifier	errBuf		3106803	0					
ANR	3106926	Argument	ERR_BUF_LEN		3106803	1					
ANR	3106927	Identifier	ERR_BUF_LEN		3106803	0					
ANR	3106928	Argument	"""failed with status %d"""		3106803	2					
ANR	3106929	PrimaryExpression	"""failed with status %d"""		3106803	0					
ANR	3106930	Argument	termEvent -> returnValue		3106803	3					
ANR	3106931	PtrMemberAccess	termEvent -> returnValue		3106803	0					
ANR	3106932	Identifier	termEvent		3106803	0					
ANR	3106933	Identifier	returnValue		3106803	1					
ANR	3106934	ExpressionStatement	"debug_dprintf ( D_ALWAYS | D_NOHEADER , DEBUG_NORMAL , ""%s\\n"" , errBuf )"	939:4:28647:28722	3106803	1	True				
ANR	3106935	CallExpression	"debug_dprintf ( D_ALWAYS | D_NOHEADER , DEBUG_NORMAL , ""%s\\n"" , errBuf )"		3106803	0					
ANR	3106936	Callee	debug_dprintf		3106803	0					
ANR	3106937	Identifier	debug_dprintf		3106803	0					
ANR	3106938	ArgumentList	D_ALWAYS | D_NOHEADER		3106803	1					
ANR	3106939	Argument	D_ALWAYS | D_NOHEADER		3106803	0					
ANR	3106940	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		3106803	0		|			
ANR	3106941	Identifier	D_ALWAYS		3106803	0					
ANR	3106942	Identifier	D_NOHEADER		3106803	1					
ANR	3106943	Argument	DEBUG_NORMAL		3106803	1					
ANR	3106944	Identifier	DEBUG_NORMAL		3106803	0					
ANR	3106945	Argument	"""%s\\n"""		3106803	2					
ANR	3106946	PrimaryExpression	"""%s\\n"""		3106803	0					
ANR	3106947	Argument	errBuf		3106803	3					
ANR	3106948	Identifier	errBuf		3106803	0					
ANR	3106949	ExpressionStatement	"snprintf ( job -> error_text , JOB_ERROR_TEXT_MAXLEN , ""POST script %s"" , errBuf )"	941:4:28728:28811	3106803	2	True				
ANR	3106950	CallExpression	"snprintf ( job -> error_text , JOB_ERROR_TEXT_MAXLEN , ""POST script %s"" , errBuf )"		3106803	0					
ANR	3106951	Callee	snprintf		3106803	0					
ANR	3106952	Identifier	snprintf		3106803	0					
ANR	3106953	ArgumentList	job -> error_text		3106803	1					
ANR	3106954	Argument	job -> error_text		3106803	0					
ANR	3106955	PtrMemberAccess	job -> error_text		3106803	0					
ANR	3106956	Identifier	job		3106803	0					
ANR	3106957	Identifier	error_text		3106803	1					
ANR	3106958	Argument	JOB_ERROR_TEXT_MAXLEN		3106803	1					
ANR	3106959	Identifier	JOB_ERROR_TEXT_MAXLEN		3106803	0					
ANR	3106960	Argument	"""POST script %s"""		3106803	2					
ANR	3106961	PrimaryExpression	"""POST script %s"""		3106803	0					
ANR	3106962	Argument	errBuf		3106803	3					
ANR	3106963	Identifier	errBuf		3106803	0					
ANR	3106964	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""POST for Node %s returned %d\\n"" , job -> GetJobName ( ) , termEvent -> returnValue )"	944:4:28818:28930	3106803	3	True				
ANR	3106965	CallExpression	"debug_printf ( DEBUG_QUIET , ""POST for Node %s returned %d\\n"" , job -> GetJobName ( ) , termEvent -> returnValue )"		3106803	0					
ANR	3106966	Callee	debug_printf		3106803	0					
ANR	3106967	Identifier	debug_printf		3106803	0					
ANR	3106968	ArgumentList	DEBUG_QUIET		3106803	1					
ANR	3106969	Argument	DEBUG_QUIET		3106803	0					
ANR	3106970	Identifier	DEBUG_QUIET		3106803	0					
ANR	3106971	Argument	"""POST for Node %s returned %d\\n"""		3106803	1					
ANR	3106972	PrimaryExpression	"""POST for Node %s returned %d\\n"""		3106803	0					
ANR	3106973	Argument	job -> GetJobName ( )		3106803	2					
ANR	3106974	CallExpression	job -> GetJobName ( )		3106803	0					
ANR	3106975	Callee	job -> GetJobName		3106803	0					
ANR	3106976	PtrMemberAccess	job -> GetJobName		3106803	0					
ANR	3106977	Identifier	job		3106803	0					
ANR	3106978	Identifier	GetJobName		3106803	1					
ANR	3106979	ArgumentList			3106803	1					
ANR	3106980	Argument	termEvent -> returnValue		3106803	3					
ANR	3106981	PtrMemberAccess	termEvent -> returnValue		3106803	0					
ANR	3106982	Identifier	termEvent		3106803	0					
ANR	3106983	Identifier	returnValue		3106803	1					
ANR	3106984	ExpressionStatement	job -> retval = termEvent -> returnValue	947:4:28936:28972	3106803	4	True				
ANR	3106985	AssignmentExpression	job -> retval = termEvent -> returnValue		3106803	0		=			
ANR	3106986	PtrMemberAccess	job -> retval		3106803	0					
ANR	3106987	Identifier	job		3106803	0					
ANR	3106988	Identifier	retval		3106803	1					
ANR	3106989	PtrMemberAccess	termEvent -> returnValue		3106803	1					
ANR	3106990	Identifier	termEvent		3106803	0					
ANR	3106991	Identifier	returnValue		3106803	1					
ANR	3106992	ElseStatement	else		3106803	0					
ANR	3106993	CompoundStatement		51:10:1831:1831	3106803	0					
ANR	3106994	ExpressionStatement	"snprintf ( errBuf , ERR_BUF_LEN , ""died on signal %d"" , termEvent -> signalNumber )"	950:4:29051:29142	3106803	0	True				
ANR	3106995	CallExpression	"snprintf ( errBuf , ERR_BUF_LEN , ""died on signal %d"" , termEvent -> signalNumber )"		3106803	0					
ANR	3106996	Callee	snprintf		3106803	0					
ANR	3106997	Identifier	snprintf		3106803	0					
ANR	3106998	ArgumentList	errBuf		3106803	1					
ANR	3106999	Argument	errBuf		3106803	0					
ANR	3107000	Identifier	errBuf		3106803	0					
ANR	3107001	Argument	ERR_BUF_LEN		3106803	1					
ANR	3107002	Identifier	ERR_BUF_LEN		3106803	0					
ANR	3107003	Argument	"""died on signal %d"""		3106803	2					
ANR	3107004	PrimaryExpression	"""died on signal %d"""		3106803	0					
ANR	3107005	Argument	termEvent -> signalNumber		3106803	3					
ANR	3107006	PtrMemberAccess	termEvent -> signalNumber		3106803	0					
ANR	3107007	Identifier	termEvent		3106803	0					
ANR	3107008	Identifier	signalNumber		3106803	1					
ANR	3107009	ExpressionStatement	"debug_dprintf ( D_ALWAYS | D_NOHEADER , DEBUG_NORMAL , ""%s\\n"" , errBuf )"	953:4:29148:29223	3106803	1	True				
ANR	3107010	CallExpression	"debug_dprintf ( D_ALWAYS | D_NOHEADER , DEBUG_NORMAL , ""%s\\n"" , errBuf )"		3106803	0					
ANR	3107011	Callee	debug_dprintf		3106803	0					
ANR	3107012	Identifier	debug_dprintf		3106803	0					
ANR	3107013	ArgumentList	D_ALWAYS | D_NOHEADER		3106803	1					
ANR	3107014	Argument	D_ALWAYS | D_NOHEADER		3106803	0					
ANR	3107015	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		3106803	0		|			
ANR	3107016	Identifier	D_ALWAYS		3106803	0					
ANR	3107017	Identifier	D_NOHEADER		3106803	1					
ANR	3107018	Argument	DEBUG_NORMAL		3106803	1					
ANR	3107019	Identifier	DEBUG_NORMAL		3106803	0					
ANR	3107020	Argument	"""%s\\n"""		3106803	2					
ANR	3107021	PrimaryExpression	"""%s\\n"""		3106803	0					
ANR	3107022	Argument	errBuf		3106803	3					
ANR	3107023	Identifier	errBuf		3106803	0					
ANR	3107024	ExpressionStatement	"snprintf ( job -> error_text , JOB_ERROR_TEXT_MAXLEN , ""POST Script %s"" , errBuf )"	955:4:29229:29312	3106803	2	True				
ANR	3107025	CallExpression	"snprintf ( job -> error_text , JOB_ERROR_TEXT_MAXLEN , ""POST Script %s"" , errBuf )"		3106803	0					
ANR	3107026	Callee	snprintf		3106803	0					
ANR	3107027	Identifier	snprintf		3106803	0					
ANR	3107028	ArgumentList	job -> error_text		3106803	1					
ANR	3107029	Argument	job -> error_text		3106803	0					
ANR	3107030	PtrMemberAccess	job -> error_text		3106803	0					
ANR	3107031	Identifier	job		3106803	0					
ANR	3107032	Identifier	error_text		3106803	1					
ANR	3107033	Argument	JOB_ERROR_TEXT_MAXLEN		3106803	1					
ANR	3107034	Identifier	JOB_ERROR_TEXT_MAXLEN		3106803	0					
ANR	3107035	Argument	"""POST Script %s"""		3106803	2					
ANR	3107036	PrimaryExpression	"""POST Script %s"""		3106803	0					
ANR	3107037	Argument	errBuf		3106803	3					
ANR	3107038	Identifier	errBuf		3106803	0					
ANR	3107039	ExpressionStatement	job -> retval = ( 0 - termEvent -> signalNumber )	958:4:29319:29362	3106803	3	True				
ANR	3107040	AssignmentExpression	job -> retval = ( 0 - termEvent -> signalNumber )		3106803	0		=			
ANR	3107041	PtrMemberAccess	job -> retval		3106803	0					
ANR	3107042	Identifier	job		3106803	0					
ANR	3107043	Identifier	retval		3106803	1					
ANR	3107044	AdditiveExpression	0 - termEvent -> signalNumber		3106803	1		-			
ANR	3107045	PrimaryExpression	0		3106803	0					
ANR	3107046	PtrMemberAccess	termEvent -> signalNumber		3106803	1					
ANR	3107047	Identifier	termEvent		3106803	0					
ANR	3107048	Identifier	signalNumber		3106803	1					
ANR	3107049	ExpressionStatement	"_jobstateLog . WriteScriptSuccessOrFailure ( job , true )"	962:3:29429:29482	3106803	5	True				
ANR	3107050	CallExpression	"_jobstateLog . WriteScriptSuccessOrFailure ( job , true )"		3106803	0					
ANR	3107051	Callee	_jobstateLog . WriteScriptSuccessOrFailure		3106803	0					
ANR	3107052	MemberAccess	_jobstateLog . WriteScriptSuccessOrFailure		3106803	0					
ANR	3107053	Identifier	_jobstateLog		3106803	0					
ANR	3107054	Identifier	WriteScriptSuccessOrFailure		3106803	1					
ANR	3107055	ArgumentList	job		3106803	1					
ANR	3107056	Argument	job		3106803	0					
ANR	3107057	Identifier	job		3106803	0					
ANR	3107058	Argument	true		3106803	1					
ANR	3107059	Identifier	true		3106803	0					
ANR	3107060	IfStatement	if ( job -> GetRetries ( ) < job -> GetRetryMax ( ) )		3106803	6					
ANR	3107061	Condition	job -> GetRetries ( ) < job -> GetRetryMax ( )	967:7:29532:29569	3106803	0	True				
ANR	3107062	RelationalExpression	job -> GetRetries ( ) < job -> GetRetryMax ( )		3106803	0		<			
ANR	3107063	CallExpression	job -> GetRetries ( )		3106803	0					
ANR	3107064	Callee	job -> GetRetries		3106803	0					
ANR	3107065	PtrMemberAccess	job -> GetRetries		3106803	0					
ANR	3107066	Identifier	job		3106803	0					
ANR	3107067	Identifier	GetRetries		3106803	1					
ANR	3107068	ArgumentList			3106803	1					
ANR	3107069	CallExpression	job -> GetRetryMax ( )		3106803	1					
ANR	3107070	Callee	job -> GetRetryMax		3106803	0					
ANR	3107071	PtrMemberAccess	job -> GetRetryMax		3106803	0					
ANR	3107072	Identifier	job		3106803	0					
ANR	3107073	Identifier	GetRetryMax		3106803	1					
ANR	3107074	ArgumentList			3106803	1					
ANR	3107075	CompoundStatement		70:48:2420:2420	3106803	1					
ANR	3107076	ExpressionStatement	"RestartNode ( job , recovery )"	968:4:29579:29607	3106803	0	True				
ANR	3107077	CallExpression	"RestartNode ( job , recovery )"		3106803	0					
ANR	3107078	Callee	RestartNode		3106803	0					
ANR	3107079	Identifier	RestartNode		3106803	0					
ANR	3107080	ArgumentList	job		3106803	1					
ANR	3107081	Argument	job		3106803	0					
ANR	3107082	Identifier	job		3106803	0					
ANR	3107083	Argument	recovery		3106803	1					
ANR	3107084	Identifier	recovery		3106803	0					
ANR	3107085	ElseStatement	else		3106803	0					
ANR	3107086	CompoundStatement		76:4:2535:2550	3106803	0					
ANR	3107087	ExpressionStatement	_numNodesFailed ++	971:4:29664:29681	3106803	0	True				
ANR	3107088	PostIncDecOperationExpression	_numNodesFailed ++		3106803	0					
ANR	3107089	Identifier	_numNodesFailed		3106803	0					
ANR	3107090	IncDec	++		3106803	1					
ANR	3107091	IdentifierDeclStatement	MyString errMsg ;	973:4:29688:29703	3106803	1	True				
ANR	3107092	IdentifierDecl	errMsg		3106803	0					
ANR	3107093	IdentifierDeclType	MyString		3106803	0					
ANR	3107094	Identifier	errMsg		3106803	1					
ANR	3107095	IfStatement	if ( mainJobRetval > 0 )		3106803	2					
ANR	3107096	Condition	mainJobRetval > 0	975:8:29714:29730	3106803	0	True				
ANR	3107097	RelationalExpression	mainJobRetval > 0		3106803	0		>			
ANR	3107098	Identifier	mainJobRetval		3106803	0					
ANR	3107099	PrimaryExpression	0		3106803	1					
ANR	3107100	CompoundStatement		78:28:2581:2581	3106803	1					
ANR	3107101	ExpressionStatement	"errMsg . sprintf ( ""Job exited with status %d and "" , mainJobRetval )"	976:5:29741:29813	3106803	0	True				
ANR	3107102	CallExpression	"errMsg . sprintf ( ""Job exited with status %d and "" , mainJobRetval )"		3106803	0					
ANR	3107103	Callee	errMsg . sprintf		3106803	0					
ANR	3107104	MemberAccess	errMsg . sprintf		3106803	0					
ANR	3107105	Identifier	errMsg		3106803	0					
ANR	3107106	Identifier	sprintf		3106803	1					
ANR	3107107	ArgumentList	"""Job exited with status %d and """		3106803	1					
ANR	3107108	Argument	"""Job exited with status %d and """		3106803	0					
ANR	3107109	PrimaryExpression	"""Job exited with status %d and """		3106803	0					
ANR	3107110	Argument	mainJobRetval		3106803	1					
ANR	3107111	Identifier	mainJobRetval		3106803	0					
ANR	3107112	ElseStatement	else		3106803	0					
ANR	3107113	IfStatement	if ( mainJobRetval < 0 && mainJobRetval >= - MAX_SIGNAL )		3106803	0					
ANR	3107114	Condition	mainJobRetval < 0 && mainJobRetval >= - MAX_SIGNAL	979:13:29834:29890	3106803	0	True				
ANR	3107115	AndExpression	mainJobRetval < 0 && mainJobRetval >= - MAX_SIGNAL		3106803	0		&&			
ANR	3107116	RelationalExpression	mainJobRetval < 0		3106803	0		<			
ANR	3107117	Identifier	mainJobRetval		3106803	0					
ANR	3107118	PrimaryExpression	0		3106803	1					
ANR	3107119	RelationalExpression	mainJobRetval >= - MAX_SIGNAL		3106803	1		>=			
ANR	3107120	Identifier	mainJobRetval		3106803	0					
ANR	3107121	UnaryOperationExpression	- MAX_SIGNAL		3106803	1					
ANR	3107122	UnaryOperator	-		3106803	0					
ANR	3107123	Identifier	MAX_SIGNAL		3106803	1					
ANR	3107124	CompoundStatement		83:38:2741:2741	3106803	1					
ANR	3107125	ExpressionStatement	"errMsg . sprintf ( ""Job died on signal %d and "" , 0 - mainJobRetval )"	981:5:29901:29973	3106803	0	True				
ANR	3107126	CallExpression	"errMsg . sprintf ( ""Job died on signal %d and "" , 0 - mainJobRetval )"		3106803	0					
ANR	3107127	Callee	errMsg . sprintf		3106803	0					
ANR	3107128	MemberAccess	errMsg . sprintf		3106803	0					
ANR	3107129	Identifier	errMsg		3106803	0					
ANR	3107130	Identifier	sprintf		3106803	1					
ANR	3107131	ArgumentList	"""Job died on signal %d and """		3106803	1					
ANR	3107132	Argument	"""Job died on signal %d and """		3106803	0					
ANR	3107133	PrimaryExpression	"""Job died on signal %d and """		3106803	0					
ANR	3107134	Argument	0 - mainJobRetval		3106803	1					
ANR	3107135	AdditiveExpression	0 - mainJobRetval		3106803	0		-			
ANR	3107136	PrimaryExpression	0		3106803	0					
ANR	3107137	Identifier	mainJobRetval		3106803	1					
ANR	3107138	ElseStatement	else		3106803	0					
ANR	3107139	CompoundStatement		87:9:2837:2837	3106803	0					
ANR	3107140	ExpressionStatement	"errMsg . sprintf ( ""Job failed due to DAGMAN error %d and "" , mainJobRetval )"	985:5:29997:30077	3106803	0	True				
ANR	3107141	CallExpression	"errMsg . sprintf ( ""Job failed due to DAGMAN error %d and "" , mainJobRetval )"		3106803	0					
ANR	3107142	Callee	errMsg . sprintf		3106803	0					
ANR	3107143	MemberAccess	errMsg . sprintf		3106803	0					
ANR	3107144	Identifier	errMsg		3106803	0					
ANR	3107145	Identifier	sprintf		3106803	1					
ANR	3107146	ArgumentList	"""Job failed due to DAGMAN error %d and """		3106803	1					
ANR	3107147	Argument	"""Job failed due to DAGMAN error %d and """		3106803	0					
ANR	3107148	PrimaryExpression	"""Job failed due to DAGMAN error %d and """		3106803	0					
ANR	3107149	Argument	mainJobRetval		3106803	1					
ANR	3107150	Identifier	mainJobRetval		3106803	0					
ANR	3107151	IfStatement	if ( termEvent -> normal )		3106803	3					
ANR	3107152	Condition	termEvent -> normal	989:9:30095:30111	3106803	0	True				
ANR	3107153	PtrMemberAccess	termEvent -> normal		3106803	0					
ANR	3107154	Identifier	termEvent		3106803	0					
ANR	3107155	Identifier	normal		3106803	1					
ANR	3107156	CompoundStatement		92:29:2962:2962	3106803	1					
ANR	3107157	ExpressionStatement	"errMsg . sprintf_cat ( ""POST Script failed with status %d"" , termEvent -> returnValue )"	990:5:30122:30211	3106803	0	True				
ANR	3107158	CallExpression	"errMsg . sprintf_cat ( ""POST Script failed with status %d"" , termEvent -> returnValue )"		3106803	0					
ANR	3107159	Callee	errMsg . sprintf_cat		3106803	0					
ANR	3107160	MemberAccess	errMsg . sprintf_cat		3106803	0					
ANR	3107161	Identifier	errMsg		3106803	0					
ANR	3107162	Identifier	sprintf_cat		3106803	1					
ANR	3107163	ArgumentList	"""POST Script failed with status %d"""		3106803	1					
ANR	3107164	Argument	"""POST Script failed with status %d"""		3106803	0					
ANR	3107165	PrimaryExpression	"""POST Script failed with status %d"""		3106803	0					
ANR	3107166	Argument	termEvent -> returnValue		3106803	1					
ANR	3107167	PtrMemberAccess	termEvent -> returnValue		3106803	0					
ANR	3107168	Identifier	termEvent		3106803	0					
ANR	3107169	Identifier	returnValue		3106803	1					
ANR	3107170	ElseStatement	else		3106803	0					
ANR	3107171	CompoundStatement		95:11:3071:3071	3106803	0					
ANR	3107172	ExpressionStatement	"errMsg . sprintf_cat ( ""POST Script died on signal %d"" , termEvent -> signalNumber )"	993:5:30231:30317	3106803	0	True				
ANR	3107173	CallExpression	"errMsg . sprintf_cat ( ""POST Script died on signal %d"" , termEvent -> signalNumber )"		3106803	0					
ANR	3107174	Callee	errMsg . sprintf_cat		3106803	0					
ANR	3107175	MemberAccess	errMsg . sprintf_cat		3106803	0					
ANR	3107176	Identifier	errMsg		3106803	0					
ANR	3107177	Identifier	sprintf_cat		3106803	1					
ANR	3107178	ArgumentList	"""POST Script died on signal %d"""		3106803	1					
ANR	3107179	Argument	"""POST Script died on signal %d"""		3106803	0					
ANR	3107180	PrimaryExpression	"""POST Script died on signal %d"""		3106803	0					
ANR	3107181	Argument	termEvent -> signalNumber		3106803	1					
ANR	3107182	PtrMemberAccess	termEvent -> signalNumber		3106803	0					
ANR	3107183	Identifier	termEvent		3106803	0					
ANR	3107184	Identifier	signalNumber		3106803	1					
ANR	3107185	IfStatement	if ( job -> GetRetryMax ( ) > 0 )		3106803	4					
ANR	3107186	Condition	job -> GetRetryMax ( ) > 0	997:8:30334:30355	3106803	0	True				
ANR	3107187	RelationalExpression	job -> GetRetryMax ( ) > 0		3106803	0		>			
ANR	3107188	CallExpression	job -> GetRetryMax ( )		3106803	0					
ANR	3107189	Callee	job -> GetRetryMax		3106803	0					
ANR	3107190	PtrMemberAccess	job -> GetRetryMax		3106803	0					
ANR	3107191	Identifier	job		3106803	0					
ANR	3107192	Identifier	GetRetryMax		3106803	1					
ANR	3107193	ArgumentList			3106803	1					
ANR	3107194	PrimaryExpression	0		3106803	1					
ANR	3107195	CompoundStatement		100:33:3206:3206	3106803	1					
ANR	3107196	ExpressionStatement	"errMsg . sprintf_cat ( "" (after %d node retries)"" , job -> GetRetries ( ) )"	999:5:30406:30480	3106803	0	True				
ANR	3107197	CallExpression	"errMsg . sprintf_cat ( "" (after %d node retries)"" , job -> GetRetries ( ) )"		3106803	0					
ANR	3107198	Callee	errMsg . sprintf_cat		3106803	0					
ANR	3107199	MemberAccess	errMsg . sprintf_cat		3106803	0					
ANR	3107200	Identifier	errMsg		3106803	0					
ANR	3107201	Identifier	sprintf_cat		3106803	1					
ANR	3107202	ArgumentList	""" (after %d node retries)"""		3106803	1					
ANR	3107203	Argument	""" (after %d node retries)"""		3106803	0					
ANR	3107204	PrimaryExpression	""" (after %d node retries)"""		3106803	0					
ANR	3107205	Argument	job -> GetRetries ( )		3106803	1					
ANR	3107206	CallExpression	job -> GetRetries ( )		3106803	0					
ANR	3107207	Callee	job -> GetRetries		3106803	0					
ANR	3107208	PtrMemberAccess	job -> GetRetries		3106803	0					
ANR	3107209	Identifier	job		3106803	0					
ANR	3107210	Identifier	GetRetries		3106803	1					
ANR	3107211	ArgumentList			3106803	1					
ANR	3107212	ExpressionStatement	"strncpy ( job -> error_text , errMsg . Value ( ) , JOB_ERROR_TEXT_MAXLEN )"	1003:4:30493:30565	3106803	5	True				
ANR	3107213	CallExpression	"strncpy ( job -> error_text , errMsg . Value ( ) , JOB_ERROR_TEXT_MAXLEN )"		3106803	0					
ANR	3107214	Callee	strncpy		3106803	0					
ANR	3107215	Identifier	strncpy		3106803	0					
ANR	3107216	ArgumentList	job -> error_text		3106803	1					
ANR	3107217	Argument	job -> error_text		3106803	0					
ANR	3107218	PtrMemberAccess	job -> error_text		3106803	0					
ANR	3107219	Identifier	job		3106803	0					
ANR	3107220	Identifier	error_text		3106803	1					
ANR	3107221	Argument	errMsg . Value ( )		3106803	1					
ANR	3107222	CallExpression	errMsg . Value ( )		3106803	0					
ANR	3107223	Callee	errMsg . Value		3106803	0					
ANR	3107224	MemberAccess	errMsg . Value		3106803	0					
ANR	3107225	Identifier	errMsg		3106803	0					
ANR	3107226	Identifier	Value		3106803	1					
ANR	3107227	ArgumentList			3106803	1					
ANR	3107228	Argument	JOB_ERROR_TEXT_MAXLEN		3106803	2					
ANR	3107229	Identifier	JOB_ERROR_TEXT_MAXLEN		3106803	0					
ANR	3107230	ExpressionStatement	job -> error_text [ JOB_ERROR_TEXT_MAXLEN - 1 ] = '\\0'	1005:4:30571:30620	3106803	6	True				
ANR	3107231	AssignmentExpression	job -> error_text [ JOB_ERROR_TEXT_MAXLEN - 1 ] = '\\0'		3106803	0		=			
ANR	3107232	ArrayIndexing	job -> error_text [ JOB_ERROR_TEXT_MAXLEN - 1 ]		3106803	0					
ANR	3107233	PtrMemberAccess	job -> error_text		3106803	0					
ANR	3107234	Identifier	job		3106803	0					
ANR	3107235	Identifier	error_text		3106803	1					
ANR	3107236	AdditiveExpression	JOB_ERROR_TEXT_MAXLEN - 1		3106803	1		-			
ANR	3107237	Identifier	JOB_ERROR_TEXT_MAXLEN		3106803	0					
ANR	3107238	PrimaryExpression	1		3106803	1					
ANR	3107239	PrimaryExpression	'\\0'		3106803	1					
ANR	3107240	ElseStatement	else		3106803	0					
ANR	3107241	CompoundStatement		111:9:3484:3484	3106803	0					
ANR	3107242	ExpressionStatement	ASSERT ( termEvent -> returnValue == 0 )	1010:3:30672:30709	3106803	0	True				
ANR	3107243	CallExpression	ASSERT ( termEvent -> returnValue == 0 )		3106803	0					
ANR	3107244	Callee	ASSERT		3106803	0					
ANR	3107245	Identifier	ASSERT		3106803	0					
ANR	3107246	ArgumentList	termEvent -> returnValue == 0		3106803	1					
ANR	3107247	Argument	termEvent -> returnValue == 0		3106803	0					
ANR	3107248	EqualityExpression	termEvent -> returnValue == 0		3106803	0		==			
ANR	3107249	PtrMemberAccess	termEvent -> returnValue		3106803	0					
ANR	3107250	Identifier	termEvent		3106803	0					
ANR	3107251	Identifier	returnValue		3106803	1					
ANR	3107252	PrimaryExpression	0		3106803	1					
ANR	3107253	ExpressionStatement	"debug_dprintf ( D_ALWAYS | D_NOHEADER , DEBUG_NORMAL , ""completed successfully.\\n"" )"	1011:3:30714:30801	3106803	1	True				
ANR	3107254	CallExpression	"debug_dprintf ( D_ALWAYS | D_NOHEADER , DEBUG_NORMAL , ""completed successfully.\\n"" )"		3106803	0					
ANR	3107255	Callee	debug_dprintf		3106803	0					
ANR	3107256	Identifier	debug_dprintf		3106803	0					
ANR	3107257	ArgumentList	D_ALWAYS | D_NOHEADER		3106803	1					
ANR	3107258	Argument	D_ALWAYS | D_NOHEADER		3106803	0					
ANR	3107259	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		3106803	0		|			
ANR	3107260	Identifier	D_ALWAYS		3106803	0					
ANR	3107261	Identifier	D_NOHEADER		3106803	1					
ANR	3107262	Argument	DEBUG_NORMAL		3106803	1					
ANR	3107263	Identifier	DEBUG_NORMAL		3106803	0					
ANR	3107264	Argument	"""completed successfully.\\n"""		3106803	2					
ANR	3107265	PrimaryExpression	"""completed successfully.\\n"""		3106803	0					
ANR	3107266	ExpressionStatement	job -> retval = 0	1013:3:30806:30821	3106803	2	True				
ANR	3107267	AssignmentExpression	job -> retval = 0		3106803	0		=			
ANR	3107268	PtrMemberAccess	job -> retval		3106803	0					
ANR	3107269	Identifier	job		3106803	0					
ANR	3107270	Identifier	retval		3106803	1					
ANR	3107271	PrimaryExpression	0		3106803	1					
ANR	3107272	ExpressionStatement	"_jobstateLog . WriteScriptSuccessOrFailure ( job , true )"	1015:3:30882:30935	3106803	3	True				
ANR	3107273	CallExpression	"_jobstateLog . WriteScriptSuccessOrFailure ( job , true )"		3106803	0					
ANR	3107274	Callee	_jobstateLog . WriteScriptSuccessOrFailure		3106803	0					
ANR	3107275	MemberAccess	_jobstateLog . WriteScriptSuccessOrFailure		3106803	0					
ANR	3107276	Identifier	_jobstateLog		3106803	0					
ANR	3107277	Identifier	WriteScriptSuccessOrFailure		3106803	1					
ANR	3107278	ArgumentList	job		3106803	1					
ANR	3107279	Argument	job		3106803	0					
ANR	3107280	Identifier	job		3106803	0					
ANR	3107281	Argument	true		3106803	1					
ANR	3107282	Identifier	true		3106803	0					
ANR	3107283	ExpressionStatement	"TerminateJob ( job , recovery )"	1016:3:30940:30969	3106803	4	True				
ANR	3107284	CallExpression	"TerminateJob ( job , recovery )"		3106803	0					
ANR	3107285	Callee	TerminateJob		3106803	0					
ANR	3107286	Identifier	TerminateJob		3106803	0					
ANR	3107287	ArgumentList	job		3106803	1					
ANR	3107288	Argument	job		3106803	0					
ANR	3107289	Identifier	job		3106803	0					
ANR	3107290	Argument	recovery		3106803	1					
ANR	3107291	Identifier	recovery		3106803	0					
ANR	3107292	IdentifierDeclStatement	"bool abort = CheckForDagAbort ( job , ""POST script"" ) ;"	1019:2:30978:31027	3106803	5	True				
ANR	3107293	IdentifierDecl	"abort = CheckForDagAbort ( job , ""POST script"" )"		3106803	0					
ANR	3107294	IdentifierDeclType	bool		3106803	0					
ANR	3107295	Identifier	abort		3106803	1					
ANR	3107296	AssignmentExpression	"abort = CheckForDagAbort ( job , ""POST script"" )"		3106803	2		=			
ANR	3107297	Identifier	abort		3106803	0					
ANR	3107298	CallExpression	"CheckForDagAbort ( job , ""POST script"" )"		3106803	1					
ANR	3107299	Callee	CheckForDagAbort		3106803	0					
ANR	3107300	Identifier	CheckForDagAbort		3106803	0					
ANR	3107301	ArgumentList	job		3106803	1					
ANR	3107302	Argument	job		3106803	0					
ANR	3107303	Identifier	job		3106803	0					
ANR	3107304	Argument	"""POST script"""		3106803	1					
ANR	3107305	PrimaryExpression	"""POST script"""		3106803	0					
ANR	3107306	IfStatement	if ( abort )		3106803	6					
ANR	3107307	Condition	abort	1021:6:31085:31089	3106803	0	True				
ANR	3107308	Identifier	abort		3106803	0					
ANR	3107309	CompoundStatement		124:14:3940:3940	3106803	1					
ANR	3107310	ReturnStatement	return ;	1022:3:31098:31104	3106803	0	True				
ANR	3107311	ExpressionStatement	PrintReadyQ ( DEBUG_DEBUG_4 )	1025:2:31113:31141	3106803	7	True				
ANR	3107312	CallExpression	PrintReadyQ ( DEBUG_DEBUG_4 )		3106803	0					
ANR	3107313	Callee	PrintReadyQ		3106803	0					
ANR	3107314	Identifier	PrintReadyQ		3106803	0					
ANR	3107315	ArgumentList	DEBUG_DEBUG_4		3106803	1					
ANR	3107316	Argument	DEBUG_DEBUG_4		3106803	0					
ANR	3107317	Identifier	DEBUG_DEBUG_4		3106803	0					
ANR	3107318	ReturnType	void		3106803	1					
ANR	3107319	Identifier	Dag :: ProcessPostTermEvent		3106803	2					
ANR	3107320	ParameterList	"const ULogEvent * event , Job * job , bool recovery"		3106803	3					
ANR	3107321	Parameter	const ULogEvent * event	897:26:27101:27122	3106803	0	True				
ANR	3107322	ParameterType	const ULogEvent *		3106803	0					
ANR	3107323	Identifier	event		3106803	1					
ANR	3107324	Parameter	Job * job	897:50:27125:27132	3106803	1	True				
ANR	3107325	ParameterType	Job *		3106803	0					
ANR	3107326	Identifier	job		3106803	1					
ANR	3107327	Parameter	bool recovery	898:2:27137:27149	3106803	2	True				
ANR	3107328	ParameterType	bool		3106803	0					
ANR	3107329	Identifier	recovery		3106803	1					
ANR	3107330	CFGEntryNode	ENTRY		3106803		True				
ANR	3107331	CFGExitNode	EXIT		3106803		True				
ANR	3107332	Symbol	job -> _Status		3106803						
ANR	3107333	Symbol	job -> error_text		3106803						
ANR	3107334	Symbol	errMsg		3106803						
ANR	3107335	Symbol	job -> GetRetryMax		3106803						
ANR	3107336	Symbol	DEBUG_NORMAL		3106803						
ANR	3107337	Symbol	recovery		3106803						
ANR	3107338	Symbol	_condorLogRdr		3106803						
ANR	3107339	Symbol	_jobstateLog		3106803						
ANR	3107340	Symbol	* termEvent		3106803						
ANR	3107341	Symbol	DEBUG_QUIET		3106803						
ANR	3107342	Symbol	CheckForDagAbort		3106803						
ANR	3107343	Symbol	termEvent -> signalNumber		3106803						
ANR	3107344	Symbol	* * job		3106803						
ANR	3107345	Symbol	* job -> error_text		3106803						
ANR	3107346	Symbol	job -> GetRetries		3106803						
ANR	3107347	Symbol	MAX_SIGNAL		3106803						
ANR	3107348	Symbol	errMsg . Value		3106803						
ANR	3107349	Symbol	* JOB_ERROR_TEXT_MAXLEN		3106803						
ANR	3107350	Symbol	errBuf		3106803						
ANR	3107351	Symbol	event		3106803						
ANR	3107352	Symbol	ERR_BUF_LEN		3106803						
ANR	3107353	Symbol	DEBUG_DEBUG_4		3106803						
ANR	3107354	Symbol	_postRunNodeCount		3106803						
ANR	3107355	Symbol	JOB_ERROR_TEXT_MAXLEN		3106803						
ANR	3107356	Symbol	* job		3106803						
ANR	3107357	Symbol	job -> GetJobName		3106803						
ANR	3107358	Symbol	Job :: STATUS_ERROR		3106803						
ANR	3107359	Symbol	D_ALWAYS		3106803						
ANR	3107360	Symbol	job -> retval		3106803						
ANR	3107361	Symbol	Job :: STATUS_POSTRUN		3106803						
ANR	3107362	Symbol	termEvent		3106803						
ANR	3107363	Symbol	job -> GetStatus		3106803						
ANR	3107364	Symbol	termEvent -> normal		3106803						
ANR	3107365	Symbol	mainJobRetval		3106803						
ANR	3107366	Symbol	abort		3106803						
ANR	3107367	Symbol	true		3106803						
ANR	3107368	Symbol	_numNodesFailed		3106803						
ANR	3107369	Symbol	job		3106803						
ANR	3107370	Symbol	_storkLogRdr		3106803						
ANR	3107371	Symbol	D_NOHEADER		3106803						
ANR	3107372	Symbol	termEvent -> returnValue		3106803						
ANR	3107373	Function	Dag :: ProcessSubmitEvent	1030:0:31227:34201							
ANR	3107374	FunctionDef	"Dag :: ProcessSubmitEvent (Job * job , bool recovery , bool & submitEventIsSane)"		3107373	0					
ANR	3107375	CompoundStatement		1031:74:31306:34201	3107373	0					
ANR	3107376	IfStatement	if ( ! job )		3107373	0					
ANR	3107377	Condition	! job	1033:6:31315:31318	3107373	0	True				
ANR	3107378	UnaryOperationExpression	! job		3107373	0					
ANR	3107379	UnaryOperator	!		3107373	0					
ANR	3107380	Identifier	job		3107373	1					
ANR	3107381	CompoundStatement		3:13:15:15	3107373	1					
ANR	3107382	ReturnStatement	return ;	1034:2:31326:31332	3107373	0	True				
ANR	3107383	IfStatement	if ( recovery )		3107373	1					
ANR	3107384	Condition	recovery	1040:6:31503:31510	3107373	0	True				
ANR	3107385	Identifier	recovery		3107373	0					
ANR	3107386	CompoundStatement		10:17:207:207	3107373	1					
ANR	3107387	IfStatement	if ( JobIsNoop ( job -> _CondorID ) )		3107373	0					
ANR	3107388	Condition	JobIsNoop ( job -> _CondorID )	1041:7:31523:31549	3107373	0	True				
ANR	3107389	CallExpression	JobIsNoop ( job -> _CondorID )		3107373	0					
ANR	3107390	Callee	JobIsNoop		3107373	0					
ANR	3107391	Identifier	JobIsNoop		3107373	0					
ANR	3107392	ArgumentList	job -> _CondorID		3107373	1					
ANR	3107393	Argument	job -> _CondorID		3107373	0					
ANR	3107394	PtrMemberAccess	job -> _CondorID		3107373	0					
ANR	3107395	Identifier	job		3107373	0					
ANR	3107396	Identifier	_CondorID		3107373	1					
ANR	3107397	CompoundStatement		11:37:246:246	3107373	1					
ANR	3107398	ExpressionStatement	"_recoveryMaxfakeID = MAX ( _recoveryMaxfakeID , GetIndexID ( job -> _CondorID ) )"	1042:3:31558:31640	3107373	0	True				
ANR	3107399	AssignmentExpression	"_recoveryMaxfakeID = MAX ( _recoveryMaxfakeID , GetIndexID ( job -> _CondorID ) )"		3107373	0		=			
ANR	3107400	Identifier	_recoveryMaxfakeID		3107373	0					
ANR	3107401	CallExpression	"MAX ( _recoveryMaxfakeID , GetIndexID ( job -> _CondorID ) )"		3107373	1					
ANR	3107402	Callee	MAX		3107373	0					
ANR	3107403	Identifier	MAX		3107373	0					
ANR	3107404	ArgumentList	_recoveryMaxfakeID		3107373	1					
ANR	3107405	Argument	_recoveryMaxfakeID		3107373	0					
ANR	3107406	Identifier	_recoveryMaxfakeID		3107373	0					
ANR	3107407	Argument	GetIndexID ( job -> _CondorID )		3107373	1					
ANR	3107408	CallExpression	GetIndexID ( job -> _CondorID )		3107373	0					
ANR	3107409	Callee	GetIndexID		3107373	0					
ANR	3107410	Identifier	GetIndexID		3107373	0					
ANR	3107411	ArgumentList	job -> _CondorID		3107373	1					
ANR	3107412	Argument	job -> _CondorID		3107373	0					
ANR	3107413	PtrMemberAccess	job -> _CondorID		3107373	0					
ANR	3107414	Identifier	job		3107373	0					
ANR	3107415	Identifier	_CondorID		3107373	1					
ANR	3107416	IfStatement	if ( ! job -> IsEmpty ( Job :: Q_WAITING ) )		3107373	2					
ANR	3107417	Condition	! job -> IsEmpty ( Job :: Q_WAITING )	1047:6:31656:31686	3107373	0	True				
ANR	3107418	UnaryOperationExpression	! job -> IsEmpty ( Job :: Q_WAITING )		3107373	0					
ANR	3107419	UnaryOperator	!		3107373	0					
ANR	3107420	CallExpression	job -> IsEmpty ( Job :: Q_WAITING )		3107373	1					
ANR	3107421	Callee	job -> IsEmpty		3107373	0					
ANR	3107422	PtrMemberAccess	job -> IsEmpty		3107373	0					
ANR	3107423	Identifier	job		3107373	0					
ANR	3107424	Identifier	IsEmpty		3107373	1					
ANR	3107425	ArgumentList	Job :: Q_WAITING		3107373	1					
ANR	3107426	Argument	Job :: Q_WAITING		3107373	0					
ANR	3107427	Identifier	Job :: Q_WAITING		3107373	0					
ANR	3107428	CompoundStatement		22:2:559:591	3107373	1					
ANR	3107429	Statement	debug_printf	1048:2:31694:31705	3107373	0	True				
ANR	3107430	Statement	(	1048:14:31706:31706	3107373	1	True				
ANR	3107431	Statement	DEBUG_QUIET	1048:16:31708:31718	3107373	2	True				
ANR	3107432	Statement	","	1048:27:31719:31719	3107373	3	True				
ANR	3107433	Statement	"""Error: DAG semantics violated!  """	1048:29:31721:31754	3107373	4	True				
ANR	3107434	Statement	"""Node %s was submitted but has unfinished parents!\\n"""	1049:5:31761:31813	3107373	5	True				
ANR	3107435	Statement	","	1049:58:31814:31814	3107373	6	True				
ANR	3107436	Statement	job	1050:5:31821:31823	3107373	7	True				
ANR	3107437	Statement	->	1050:8:31824:31825	3107373	8	True				
ANR	3107438	Statement	GetJobName	1050:10:31826:31835	3107373	9	True				
ANR	3107439	Statement	(	1050:20:31836:31836	3107373	10	True				
ANR	3107440	Statement	)	1050:21:31837:31837	3107373	11	True				
ANR	3107441	Statement	)	1050:23:31839:31839	3107373	12	True				
ANR	3107442	ExpressionStatement		1050:24:31840:31840	3107373	13	True				
ANR	3107443	ExpressionStatement	_dagFiles . rewind ( )	1051:2:31844:31862	3107373	14	True				
ANR	3107444	CallExpression	_dagFiles . rewind ( )		3107373	0					
ANR	3107445	Callee	_dagFiles . rewind		3107373	0					
ANR	3107446	MemberAccess	_dagFiles . rewind		3107373	0					
ANR	3107447	Identifier	_dagFiles		3107373	0					
ANR	3107448	Identifier	rewind		3107373	1					
ANR	3107449	ArgumentList			3107373	1					
ANR	3107450	IdentifierDeclStatement	char * dagFile = _dagFiles . next ( ) ;	1052:2:31866:31898	3107373	15	True				
ANR	3107451	IdentifierDecl	* dagFile = _dagFiles . next ( )		3107373	0					
ANR	3107452	IdentifierDeclType	char *		3107373	0					
ANR	3107453	Identifier	dagFile		3107373	1					
ANR	3107454	AssignmentExpression	* dagFile = _dagFiles . next ( )		3107373	2		=			
ANR	3107455	Identifier	dagFile		3107373	0					
ANR	3107456	CallExpression	_dagFiles . next ( )		3107373	1					
ANR	3107457	Callee	_dagFiles . next		3107373	0					
ANR	3107458	MemberAccess	_dagFiles . next		3107373	0					
ANR	3107459	Identifier	_dagFiles		3107373	0					
ANR	3107460	Identifier	next		3107373	1					
ANR	3107461	ArgumentList			3107373	1					
ANR	3107462	Statement	debug_printf	1053:2:31902:31913	3107373	16	True				
ANR	3107463	Statement	(	1053:14:31914:31914	3107373	17	True				
ANR	3107464	Statement	DEBUG_QUIET	1053:16:31916:31926	3107373	18	True				
ANR	3107465	Statement	","	1053:27:31927:31927	3107373	19	True				
ANR	3107466	Statement	"""This may indicate log file corruption; """	1053:29:31929:31969	3107373	20	True				
ANR	3107467	Statement	"""you may want to check the log files and re-run the """	1054:5:31976:32028	3107373	21	True				
ANR	3107468	Statement	"""DAG in recovery mode by giving the command """	1055:5:32035:32079	3107373	22	True				
ANR	3107469	Statement	"""'condor_submit %s.condor.sub'\\n"""	1056:5:32086:32118	3107373	23	True				
ANR	3107470	Statement	","	1056:38:32119:32119	3107373	24	True				
ANR	3107471	Statement	dagFile	1056:40:32121:32127	3107373	25	True				
ANR	3107472	Statement	)	1056:48:32129:32129	3107373	26	True				
ANR	3107473	ExpressionStatement		1056:49:32130:32130	3107373	27	True				
ANR	3107474	ExpressionStatement	job -> Dump ( this )	1057:2:32134:32151	3107373	28	True				
ANR	3107475	CallExpression	job -> Dump ( this )		3107373	0					
ANR	3107476	Callee	job -> Dump		3107373	0					
ANR	3107477	PtrMemberAccess	job -> Dump		3107373	0					
ANR	3107478	Identifier	job		3107373	0					
ANR	3107479	Identifier	Dump		3107373	1					
ANR	3107480	ArgumentList	this		3107373	1					
ANR	3107481	Argument	this		3107373	0					
ANR	3107482	Identifier	this		3107373	0					
ANR	3107483	ExpressionStatement	DC_Exit ( EXIT_ERROR )	1060:2:32249:32270	3107373	29	True				
ANR	3107484	CallExpression	DC_Exit ( EXIT_ERROR )		3107373	0					
ANR	3107485	Callee	DC_Exit		3107373	0					
ANR	3107486	Identifier	DC_Exit		3107373	0					
ANR	3107487	ArgumentList	EXIT_ERROR		3107373	1					
ANR	3107488	Argument	EXIT_ERROR		3107373	0					
ANR	3107489	Identifier	EXIT_ERROR		3107373	0					
ANR	3107490	IfStatement	if ( submitEventIsSane || job -> GetStatus ( ) != Job :: STATUS_SUBMITTED )		3107373	3					
ANR	3107491	Condition	submitEventIsSane || job -> GetStatus ( ) != Job :: STATUS_SUBMITTED	1070:6:32604:32665	3107373	0	True				
ANR	3107492	OrExpression	submitEventIsSane || job -> GetStatus ( ) != Job :: STATUS_SUBMITTED		3107373	0		||			
ANR	3107493	Identifier	submitEventIsSane		3107373	0					
ANR	3107494	EqualityExpression	job -> GetStatus ( ) != Job :: STATUS_SUBMITTED		3107373	1		!=			
ANR	3107495	CallExpression	job -> GetStatus ( )		3107373	0					
ANR	3107496	Callee	job -> GetStatus		3107373	0					
ANR	3107497	PtrMemberAccess	job -> GetStatus		3107373	0					
ANR	3107498	Identifier	job		3107373	0					
ANR	3107499	Identifier	GetStatus		3107373	1					
ANR	3107500	ArgumentList			3107373	1					
ANR	3107501	Identifier	Job :: STATUS_SUBMITTED		3107373	1					
ANR	3107502	CompoundStatement		40:71:1362:1362	3107373	1					
ANR	3107503	ExpressionStatement	job -> _queuedNodeJobProcs ++	1071:2:32673:32699	3107373	0	True				
ANR	3107504	PostIncDecOperationExpression	job -> _queuedNodeJobProcs ++		3107373	0					
ANR	3107505	PtrMemberAccess	job -> _queuedNodeJobProcs		3107373	0					
ANR	3107506	Identifier	job		3107373	0					
ANR	3107507	Identifier	_queuedNodeJobProcs		3107373	1					
ANR	3107508	IncDec	++		3107373	1					
ANR	3107509	IfStatement	if ( recovery )		3107373	4					
ANR	3107510	Condition	recovery	1076:6:32811:32818	3107373	0	True				
ANR	3107511	Identifier	recovery		3107373	0					
ANR	3107512	CompoundStatement		46:17:1515:1515	3107373	1					
ANR	3107513	IfStatement	if ( submitEventIsSane || job -> GetStatus ( ) != Job :: STATUS_SUBMITTED )		3107373	0					
ANR	3107514	Condition	submitEventIsSane || job -> GetStatus ( ) != Job :: STATUS_SUBMITTED	1077:7:32831:32892	3107373	0	True				
ANR	3107515	OrExpression	submitEventIsSane || job -> GetStatus ( ) != Job :: STATUS_SUBMITTED		3107373	0		||			
ANR	3107516	Identifier	submitEventIsSane		3107373	0					
ANR	3107517	EqualityExpression	job -> GetStatus ( ) != Job :: STATUS_SUBMITTED		3107373	1		!=			
ANR	3107518	CallExpression	job -> GetStatus ( )		3107373	0					
ANR	3107519	Callee	job -> GetStatus		3107373	0					
ANR	3107520	PtrMemberAccess	job -> GetStatus		3107373	0					
ANR	3107521	Identifier	job		3107373	0					
ANR	3107522	Identifier	GetStatus		3107373	1					
ANR	3107523	ArgumentList			3107373	1					
ANR	3107524	Identifier	Job :: STATUS_SUBMITTED		3107373	1					
ANR	3107525	CompoundStatement		47:72:1589:1589	3107373	1					
ANR	3107526	IfStatement	if ( job -> _queuedNodeJobProcs == 1 )		3107373	0					
ANR	3107527	Condition	job -> _queuedNodeJobProcs == 1	1080:7:32988:33016	3107373	0	True				
ANR	3107528	EqualityExpression	job -> _queuedNodeJobProcs == 1		3107373	0		==			
ANR	3107529	PtrMemberAccess	job -> _queuedNodeJobProcs		3107373	0					
ANR	3107530	Identifier	job		3107373	0					
ANR	3107531	Identifier	_queuedNodeJobProcs		3107373	1					
ANR	3107532	PrimaryExpression	1		3107373	1					
ANR	3107533	CompoundStatement		50:39:1713:1713	3107373	1					
ANR	3107534	ExpressionStatement	"UpdateJobCounts ( job , 1 )"	1081:4:33026:33051	3107373	0	True				
ANR	3107535	CallExpression	"UpdateJobCounts ( job , 1 )"		3107373	0					
ANR	3107536	Callee	UpdateJobCounts		3107373	0					
ANR	3107537	Identifier	UpdateJobCounts		3107373	0					
ANR	3107538	ArgumentList	job		3107373	1					
ANR	3107539	Argument	job		3107373	0					
ANR	3107540	Identifier	job		3107373	0					
ANR	3107541	Argument	1		3107373	1					
ANR	3107542	PrimaryExpression	1		3107373	0					
ANR	3107543	ExpressionStatement	job -> _Status = Job :: STATUS_SUBMITTED	1085:2:33065:33101	3107373	1	True				
ANR	3107544	AssignmentExpression	job -> _Status = Job :: STATUS_SUBMITTED		3107373	0		=			
ANR	3107545	PtrMemberAccess	job -> _Status		3107373	0					
ANR	3107546	Identifier	job		3107373	0					
ANR	3107547	Identifier	_Status		3107373	1					
ANR	3107548	Identifier	Job :: STATUS_SUBMITTED		3107373	1					
ANR	3107549	ReturnStatement	return ;	1086:2:33105:33111	3107373	2	True				
ANR	3107550	IfStatement	if ( TotalLogFileCount ( ) == 1 && job -> _queuedNodeJobProcs == 1 )		3107373	5					
ANR	3107551	Condition	TotalLogFileCount ( ) == 1 && job -> _queuedNodeJobProcs == 1	1097:6:33369:33425	3107373	0	True				
ANR	3107552	AndExpression	TotalLogFileCount ( ) == 1 && job -> _queuedNodeJobProcs == 1		3107373	0		&&			
ANR	3107553	EqualityExpression	TotalLogFileCount ( ) == 1		3107373	0		==			
ANR	3107554	CallExpression	TotalLogFileCount ( )		3107373	0					
ANR	3107555	Callee	TotalLogFileCount		3107373	0					
ANR	3107556	Identifier	TotalLogFileCount		3107373	0					
ANR	3107557	ArgumentList			3107373	1					
ANR	3107558	PrimaryExpression	1		3107373	1					
ANR	3107559	EqualityExpression	job -> _queuedNodeJobProcs == 1		3107373	1		==			
ANR	3107560	PtrMemberAccess	job -> _queuedNodeJobProcs		3107373	0					
ANR	3107561	Identifier	job		3107373	0					
ANR	3107562	Identifier	_queuedNodeJobProcs		3107373	1					
ANR	3107563	PrimaryExpression	1		3107373	1					
ANR	3107564	CompoundStatement		72:3:2255:2278	3107373	1					
ANR	3107565	IdentifierDeclStatement	Job * expectedJob = NULL ;	1102:3:33562:33585	3107373	0	True				
ANR	3107566	IdentifierDecl	* expectedJob = NULL		3107373	0					
ANR	3107567	IdentifierDeclType	Job *		3107373	0					
ANR	3107568	Identifier	expectedJob		3107373	1					
ANR	3107569	AssignmentExpression	* expectedJob = NULL		3107373	2		=			
ANR	3107570	Identifier	NULL		3107373	0					
ANR	3107571	Identifier	NULL		3107373	1					
ANR	3107572	IfStatement	if ( _submitQ -> dequeue ( expectedJob ) == - 1 )		3107373	1					
ANR	3107573	Condition	_submitQ -> dequeue ( expectedJob ) == - 1	1103:7:33594:33631	3107373	0	True				
ANR	3107574	EqualityExpression	_submitQ -> dequeue ( expectedJob ) == - 1		3107373	0		==			
ANR	3107575	CallExpression	_submitQ -> dequeue ( expectedJob )		3107373	0					
ANR	3107576	Callee	_submitQ -> dequeue		3107373	0					
ANR	3107577	PtrMemberAccess	_submitQ -> dequeue		3107373	0					
ANR	3107578	Identifier	_submitQ		3107373	0					
ANR	3107579	Identifier	dequeue		3107373	1					
ANR	3107580	ArgumentList	expectedJob		3107373	1					
ANR	3107581	Argument	expectedJob		3107373	0					
ANR	3107582	Identifier	expectedJob		3107373	0					
ANR	3107583	UnaryOperationExpression	- 1		3107373	1					
ANR	3107584	UnaryOperator	-		3107373	0					
ANR	3107585	PrimaryExpression	1		3107373	1					
ANR	3107586	CompoundStatement		73:48:2328:2328	3107373	1					
ANR	3107587	Statement	debug_printf	1104:3:33640:33651	3107373	0	True				
ANR	3107588	Statement	(	1104:15:33652:33652	3107373	1	True				
ANR	3107589	Statement	DEBUG_QUIET	1104:17:33654:33664	3107373	2	True				
ANR	3107590	Statement	","	1104:28:33665:33665	3107373	3	True				
ANR	3107591	Statement	"""Unrecognized submit event (for job """	1105:6:33673:33709	3107373	4	True				
ANR	3107592	Statement	"""\\""%s\\"") found in log (none expected)\\n"""	1106:6:33717:33756	3107373	5	True				
ANR	3107593	Statement	","	1106:46:33757:33757	3107373	6	True				
ANR	3107594	Statement	job	1107:6:33765:33767	3107373	7	True				
ANR	3107595	Statement	->	1107:9:33768:33769	3107373	8	True				
ANR	3107596	Statement	GetJobName	1107:11:33770:33779	3107373	9	True				
ANR	3107597	Statement	(	1107:21:33780:33780	3107373	10	True				
ANR	3107598	Statement	)	1107:22:33781:33781	3107373	11	True				
ANR	3107599	Statement	)	1107:24:33783:33783	3107373	12	True				
ANR	3107600	ExpressionStatement		1107:25:33784:33784	3107373	13	True				
ANR	3107601	ReturnStatement	return ;	1108:3:33789:33795	3107373	14	True				
ANR	3107602	ElseStatement	else		3107373	0					
ANR	3107603	IfStatement	if ( job != expectedJob )		3107373	0					
ANR	3107604	Condition	job != expectedJob	1109:14:33811:33828	3107373	0	True				
ANR	3107605	EqualityExpression	job != expectedJob		3107373	0		!=			
ANR	3107606	Identifier	job		3107373	0					
ANR	3107607	Identifier	expectedJob		3107373	1					
ANR	3107608	CompoundStatement		79:35:2525:2525	3107373	1					
ANR	3107609	ExpressionStatement	ASSERT ( expectedJob != NULL )	1110:3:33837:33866	3107373	0	True				
ANR	3107610	CallExpression	ASSERT ( expectedJob != NULL )		3107373	0					
ANR	3107611	Callee	ASSERT		3107373	0					
ANR	3107612	Identifier	ASSERT		3107373	0					
ANR	3107613	ArgumentList	expectedJob != NULL		3107373	1					
ANR	3107614	Argument	expectedJob != NULL		3107373	0					
ANR	3107615	EqualityExpression	expectedJob != NULL		3107373	0		!=			
ANR	3107616	Identifier	expectedJob		3107373	0					
ANR	3107617	Identifier	NULL		3107373	1					
ANR	3107618	Statement	debug_printf	1111:3:33871:33882	3107373	1	True				
ANR	3107619	Statement	(	1111:15:33883:33883	3107373	2	True				
ANR	3107620	Statement	DEBUG_QUIET	1111:17:33885:33895	3107373	3	True				
ANR	3107621	Statement	","	1111:28:33896:33896	3107373	4	True				
ANR	3107622	Statement	"""Unexpected submit event (for job """	1112:6:33904:33938	3107373	5	True				
ANR	3107623	Statement	"""\\""%s\\"") found in log; job \\""%s\\"" """	1113:6:33946:33980	3107373	6	True				
ANR	3107624	Statement	"""was expected.\\n"""	1114:6:33988:34004	3107373	7	True				
ANR	3107625	Statement	","	1114:23:34005:34005	3107373	8	True				
ANR	3107626	Statement	job	1115:6:34013:34015	3107373	9	True				
ANR	3107627	Statement	->	1115:9:34016:34017	3107373	10	True				
ANR	3107628	Statement	GetJobName	1115:11:34018:34027	3107373	11	True				
ANR	3107629	Statement	(	1115:21:34028:34028	3107373	12	True				
ANR	3107630	Statement	)	1115:22:34029:34029	3107373	13	True				
ANR	3107631	Statement	","	1115:23:34030:34030	3107373	14	True				
ANR	3107632	Statement	expectedJob	1116:6:34038:34048	3107373	15	True				
ANR	3107633	Statement	->	1116:17:34049:34050	3107373	16	True				
ANR	3107634	Statement	GetJobName	1116:19:34051:34060	3107373	17	True				
ANR	3107635	Statement	(	1116:29:34061:34061	3107373	18	True				
ANR	3107636	Statement	)	1116:30:34062:34062	3107373	19	True				
ANR	3107637	Statement	)	1116:32:34064:34064	3107373	20	True				
ANR	3107638	ExpressionStatement		1116:33:34065:34065	3107373	21	True				
ANR	3107639	ExpressionStatement	_submitQ -> enqueue ( expectedJob )	1118:3:34116:34148	3107373	22	True				
ANR	3107640	CallExpression	_submitQ -> enqueue ( expectedJob )		3107373	0					
ANR	3107641	Callee	_submitQ -> enqueue		3107373	0					
ANR	3107642	PtrMemberAccess	_submitQ -> enqueue		3107373	0					
ANR	3107643	Identifier	_submitQ		3107373	0					
ANR	3107644	Identifier	enqueue		3107373	1					
ANR	3107645	ArgumentList	expectedJob		3107373	1					
ANR	3107646	Argument	expectedJob		3107373	0					
ANR	3107647	Identifier	expectedJob		3107373	0					
ANR	3107648	ReturnStatement	return ;	1120:3:34154:34160	3107373	23	True				
ANR	3107649	ExpressionStatement	PrintReadyQ ( DEBUG_DEBUG_2 )	1124:1:34171:34199	3107373	6	True				
ANR	3107650	CallExpression	PrintReadyQ ( DEBUG_DEBUG_2 )		3107373	0					
ANR	3107651	Callee	PrintReadyQ		3107373	0					
ANR	3107652	Identifier	PrintReadyQ		3107373	0					
ANR	3107653	ArgumentList	DEBUG_DEBUG_2		3107373	1					
ANR	3107654	Argument	DEBUG_DEBUG_2		3107373	0					
ANR	3107655	Identifier	DEBUG_DEBUG_2		3107373	0					
ANR	3107656	ReturnType	void		3107373	1					
ANR	3107657	Identifier	Dag :: ProcessSubmitEvent		3107373	2					
ANR	3107658	ParameterList	"Job * job , bool recovery , bool & submitEventIsSane"		3107373	3					
ANR	3107659	Parameter	Job * job	1031:24:31256:31263	3107373	0	True				
ANR	3107660	ParameterType	Job *		3107373	0					
ANR	3107661	Identifier	job		3107373	1					
ANR	3107662	Parameter	bool recovery	1031:34:31266:31278	3107373	1	True				
ANR	3107663	ParameterType	bool		3107373	0					
ANR	3107664	Identifier	recovery		3107373	1					
ANR	3107665	Parameter	bool & submitEventIsSane	1031:49:31281:31303	3107373	2	True				
ANR	3107666	ParameterType	bool &		3107373	0					
ANR	3107667	Identifier	submitEventIsSane		3107373	1					
ANR	3107668	CFGEntryNode	ENTRY		3107373		True				
ANR	3107669	CFGExitNode	EXIT		3107373		True				
ANR	3107670	Symbol	_submitQ		3107373						
ANR	3107671	Symbol	expectedJob		3107373						
ANR	3107672	Symbol	job -> _Status		3107373						
ANR	3107673	Symbol	_submitQ -> dequeue		3107373						
ANR	3107674	Symbol	MAX		3107373						
ANR	3107675	Symbol	_dagFiles		3107373						
ANR	3107676	Symbol	job -> _queuedNodeJobProcs		3107373						
ANR	3107677	Symbol	recovery		3107373						
ANR	3107678	Symbol	_recoveryMaxfakeID		3107373						
ANR	3107679	Symbol	_dagFiles . next		3107373						
ANR	3107680	Symbol	TotalLogFileCount		3107373						
ANR	3107681	Symbol	submitEventIsSane		3107373						
ANR	3107682	Symbol	DEBUG_DEBUG_2		3107373						
ANR	3107683	Symbol	job -> _CondorID		3107373						
ANR	3107684	Symbol	Job :: Q_WAITING		3107373						
ANR	3107685	Symbol	NULL		3107373						
ANR	3107686	Symbol	GetIndexID		3107373						
ANR	3107687	Symbol	dagFile		3107373						
ANR	3107688	Symbol	EXIT_ERROR		3107373						
ANR	3107689	Symbol	* _submitQ		3107373						
ANR	3107690	Symbol	* job		3107373						
ANR	3107691	Symbol	this		3107373						
ANR	3107692	Symbol	job -> GetStatus		3107373						
ANR	3107693	Symbol	JobIsNoop		3107373						
ANR	3107694	Symbol	Job :: STATUS_SUBMITTED		3107373						
ANR	3107695	Symbol	job -> IsEmpty		3107373						
ANR	3107696	Symbol	job		3107373						
ANR	3107697	Function	Dag :: ProcessIsIdleEvent	1128:0:34282:34556							
ANR	3107698	FunctionDef	Dag :: ProcessIsIdleEvent (Job * job)		3107697	0					
ANR	3107699	CompoundStatement		1129:34:34321:34556	3107697	0					
ANR	3107700	IfStatement	if ( ! job )		3107697	0					
ANR	3107701	Condition	! job	1131:6:34330:34333	3107697	0	True				
ANR	3107702	UnaryOperationExpression	! job		3107697	0					
ANR	3107703	UnaryOperator	!		3107697	0					
ANR	3107704	Identifier	job		3107697	1					
ANR	3107705	CompoundStatement		3:13:15:15	3107697	1					
ANR	3107706	ReturnStatement	return ;	1132:2:34341:34347	3107697	0	True				
ANR	3107707	IfStatement	if ( ! job -> GetIsIdle ( ) )		3107697	1					
ANR	3107708	Condition	! job -> GetIsIdle ( )	1135:6:34359:34375	3107697	0	True				
ANR	3107709	UnaryOperationExpression	! job -> GetIsIdle ( )		3107697	0					
ANR	3107710	UnaryOperator	!		3107697	0					
ANR	3107711	CallExpression	job -> GetIsIdle ( )		3107697	1					
ANR	3107712	Callee	job -> GetIsIdle		3107697	0					
ANR	3107713	PtrMemberAccess	job -> GetIsIdle		3107697	0					
ANR	3107714	Identifier	job		3107697	0					
ANR	3107715	Identifier	GetIsIdle		3107697	1					
ANR	3107716	ArgumentList			3107697	1					
ANR	3107717	CompoundStatement		7:26:57:57	3107697	1					
ANR	3107718	ExpressionStatement	job -> SetIsIdle ( true )	1136:2:34383:34403	3107697	0	True				
ANR	3107719	CallExpression	job -> SetIsIdle ( true )		3107697	0					
ANR	3107720	Callee	job -> SetIsIdle		3107697	0					
ANR	3107721	PtrMemberAccess	job -> SetIsIdle		3107697	0					
ANR	3107722	Identifier	job		3107697	0					
ANR	3107723	Identifier	SetIsIdle		3107697	1					
ANR	3107724	ArgumentList	true		3107697	1					
ANR	3107725	Argument	true		3107697	0					
ANR	3107726	Identifier	true		3107697	0					
ANR	3107727	ExpressionStatement	_numIdleJobProcs ++	1137:2:34407:34425	3107697	1	True				
ANR	3107728	PostIncDecOperationExpression	_numIdleJobProcs ++		3107697	0					
ANR	3107729	Identifier	_numIdleJobProcs		3107697	0					
ANR	3107730	IncDec	++		3107697	1					
ANR	3107731	ExpressionStatement	"debug_printf ( DEBUG_VERBOSE , ""Number of idle job procs: %d\\n"" , _numIdleJobProcs )"	1142:1:34470:34554	3107697	2	True				
ANR	3107732	CallExpression	"debug_printf ( DEBUG_VERBOSE , ""Number of idle job procs: %d\\n"" , _numIdleJobProcs )"		3107697	0					
ANR	3107733	Callee	debug_printf		3107697	0					
ANR	3107734	Identifier	debug_printf		3107697	0					
ANR	3107735	ArgumentList	DEBUG_VERBOSE		3107697	1					
ANR	3107736	Argument	DEBUG_VERBOSE		3107697	0					
ANR	3107737	Identifier	DEBUG_VERBOSE		3107697	0					
ANR	3107738	Argument	"""Number of idle job procs: %d\\n"""		3107697	1					
ANR	3107739	PrimaryExpression	"""Number of idle job procs: %d\\n"""		3107697	0					
ANR	3107740	Argument	_numIdleJobProcs		3107697	2					
ANR	3107741	Identifier	_numIdleJobProcs		3107697	0					
ANR	3107742	ReturnType	void		3107697	1					
ANR	3107743	Identifier	Dag :: ProcessIsIdleEvent		3107697	2					
ANR	3107744	ParameterList	Job * job		3107697	3					
ANR	3107745	Parameter	Job * job	1129:24:34311:34318	3107697	0	True				
ANR	3107746	ParameterType	Job *		3107697	0					
ANR	3107747	Identifier	job		3107697	1					
ANR	3107748	CFGEntryNode	ENTRY		3107697		True				
ANR	3107749	CFGExitNode	EXIT		3107697		True				
ANR	3107750	Symbol	_numIdleJobProcs		3107697						
ANR	3107751	Symbol	job -> GetIsIdle		3107697						
ANR	3107752	Symbol	* job		3107697						
ANR	3107753	Symbol	true		3107697						
ANR	3107754	Symbol	job		3107697						
ANR	3107755	Symbol	DEBUG_VERBOSE		3107697						
ANR	3107756	Function	Dag :: ProcessNotIdleEvent	1147:0:34637:35070							
ANR	3107757	FunctionDef	Dag :: ProcessNotIdleEvent (Job * job)		3107756	0					
ANR	3107758	CompoundStatement		1148:35:34677:35070	3107756	0					
ANR	3107759	IfStatement	if ( ! job )		3107756	0					
ANR	3107760	Condition	! job	1150:6:34686:34689	3107756	0	True				
ANR	3107761	UnaryOperationExpression	! job		3107756	0					
ANR	3107762	UnaryOperator	!		3107756	0					
ANR	3107763	Identifier	job		3107756	1					
ANR	3107764	CompoundStatement		3:13:15:15	3107756	1					
ANR	3107765	ReturnStatement	return ;	1151:2:34697:34703	3107756	0	True				
ANR	3107766	IfStatement	if ( job -> GetIsIdle ( ) )		3107756	1					
ANR	3107767	Condition	job -> GetIsIdle ( )	1154:6:34715:34730	3107756	0	True				
ANR	3107768	CallExpression	job -> GetIsIdle ( )		3107756	0					
ANR	3107769	Callee	job -> GetIsIdle		3107756	0					
ANR	3107770	PtrMemberAccess	job -> GetIsIdle		3107756	0					
ANR	3107771	Identifier	job		3107756	0					
ANR	3107772	Identifier	GetIsIdle		3107756	1					
ANR	3107773	ArgumentList			3107756	1					
ANR	3107774	CompoundStatement		7:25:56:56	3107756	1					
ANR	3107775	ExpressionStatement	job -> SetIsIdle ( false )	1155:2:34738:34759	3107756	0	True				
ANR	3107776	CallExpression	job -> SetIsIdle ( false )		3107756	0					
ANR	3107777	Callee	job -> SetIsIdle		3107756	0					
ANR	3107778	PtrMemberAccess	job -> SetIsIdle		3107756	0					
ANR	3107779	Identifier	job		3107756	0					
ANR	3107780	Identifier	SetIsIdle		3107756	1					
ANR	3107781	ArgumentList	false		3107756	1					
ANR	3107782	Argument	false		3107756	0					
ANR	3107783	Identifier	false		3107756	0					
ANR	3107784	ExpressionStatement	_numIdleJobProcs --	1156:2:34763:34781	3107756	1	True				
ANR	3107785	PostIncDecOperationExpression	_numIdleJobProcs --		3107756	0					
ANR	3107786	Identifier	_numIdleJobProcs		3107756	0					
ANR	3107787	IncDec	--		3107756	1					
ANR	3107788	IfStatement	if ( _numIdleJobProcs < 0 )		3107756	2					
ANR	3107789	Condition	_numIdleJobProcs < 0	1160:6:34831:34850	3107756	0	True				
ANR	3107790	RelationalExpression	_numIdleJobProcs < 0		3107756	0		<			
ANR	3107791	Identifier	_numIdleJobProcs		3107756	0					
ANR	3107792	PrimaryExpression	0		3107756	1					
ANR	3107793	CompoundStatement		13:29:176:176	3107756	1					
ANR	3107794	ExpressionStatement	"debug_printf ( DEBUG_NORMAL , ""WARNING: DAGMan thinks there are %d idle job procs!\\n"" , _numIdleJobProcs )"	1161:8:34864:34977	3107756	0	True				
ANR	3107795	CallExpression	"debug_printf ( DEBUG_NORMAL , ""WARNING: DAGMan thinks there are %d idle job procs!\\n"" , _numIdleJobProcs )"		3107756	0					
ANR	3107796	Callee	debug_printf		3107756	0					
ANR	3107797	Identifier	debug_printf		3107756	0					
ANR	3107798	ArgumentList	DEBUG_NORMAL		3107756	1					
ANR	3107799	Argument	DEBUG_NORMAL		3107756	0					
ANR	3107800	Identifier	DEBUG_NORMAL		3107756	0					
ANR	3107801	Argument	"""WARNING: DAGMan thinks there are %d idle job procs!\\n"""		3107756	1					
ANR	3107802	PrimaryExpression	"""WARNING: DAGMan thinks there are %d idle job procs!\\n"""		3107756	0					
ANR	3107803	Argument	_numIdleJobProcs		3107756	2					
ANR	3107804	Identifier	_numIdleJobProcs		3107756	0					
ANR	3107805	ExpressionStatement	"debug_printf ( DEBUG_VERBOSE , ""Number of idle job procs: %d\\n"" , _numIdleJobProcs )"	1166:1:34984:35068	3107756	3	True				
ANR	3107806	CallExpression	"debug_printf ( DEBUG_VERBOSE , ""Number of idle job procs: %d\\n"" , _numIdleJobProcs )"		3107756	0					
ANR	3107807	Callee	debug_printf		3107756	0					
ANR	3107808	Identifier	debug_printf		3107756	0					
ANR	3107809	ArgumentList	DEBUG_VERBOSE		3107756	1					
ANR	3107810	Argument	DEBUG_VERBOSE		3107756	0					
ANR	3107811	Identifier	DEBUG_VERBOSE		3107756	0					
ANR	3107812	Argument	"""Number of idle job procs: %d\\n"""		3107756	1					
ANR	3107813	PrimaryExpression	"""Number of idle job procs: %d\\n"""		3107756	0					
ANR	3107814	Argument	_numIdleJobProcs		3107756	2					
ANR	3107815	Identifier	_numIdleJobProcs		3107756	0					
ANR	3107816	ReturnType	void		3107756	1					
ANR	3107817	Identifier	Dag :: ProcessNotIdleEvent		3107756	2					
ANR	3107818	ParameterList	Job * job		3107756	3					
ANR	3107819	Parameter	Job * job	1148:25:34667:34674	3107756	0	True				
ANR	3107820	ParameterType	Job *		3107756	0					
ANR	3107821	Identifier	job		3107756	1					
ANR	3107822	CFGEntryNode	ENTRY		3107756		True				
ANR	3107823	CFGExitNode	EXIT		3107756		True				
ANR	3107824	Symbol	_numIdleJobProcs		3107756						
ANR	3107825	Symbol	job -> GetIsIdle		3107756						
ANR	3107826	Symbol	* job		3107756						
ANR	3107827	Symbol	false		3107756						
ANR	3107828	Symbol	DEBUG_NORMAL		3107756						
ANR	3107829	Symbol	job		3107756						
ANR	3107830	Symbol	DEBUG_VERBOSE		3107756						
ANR	3107831	Function	Dag :: ProcessHeldEvent	1173:0:35247:35732							
ANR	3107832	FunctionDef	"Dag :: ProcessHeldEvent (Job * job , const ULogEvent * event)"		3107831	0					
ANR	3107833	CompoundStatement		1174:56:35308:35732	3107831	0					
ANR	3107834	IfStatement	if ( ! job )		3107831	0					
ANR	3107835	Condition	! job	1176:6:35317:35320	3107831	0	True				
ANR	3107836	UnaryOperationExpression	! job		3107831	0					
ANR	3107837	UnaryOperator	!		3107831	0					
ANR	3107838	Identifier	job		3107831	1					
ANR	3107839	CompoundStatement		3:13:15:15	3107831	1					
ANR	3107840	ReturnStatement	return ;	1177:2:35328:35334	3107831	0	True				
ANR	3107841	ExpressionStatement	_numHeldJobProcs ++	1180:1:35341:35359	3107831	1	True				
ANR	3107842	PostIncDecOperationExpression	_numHeldJobProcs ++		3107831	0					
ANR	3107843	Identifier	_numHeldJobProcs		3107831	0					
ANR	3107844	IncDec	++		3107831	1					
ANR	3107845	ExpressionStatement	job -> _timesHeld ++	1182:1:35363:35380	3107831	2	True				
ANR	3107846	PostIncDecOperationExpression	job -> _timesHeld ++		3107831	0					
ANR	3107847	PtrMemberAccess	job -> _timesHeld		3107831	0					
ANR	3107848	Identifier	job		3107831	0					
ANR	3107849	Identifier	_timesHeld		3107831	1					
ANR	3107850	IncDec	++		3107831	1					
ANR	3107851	ExpressionStatement	job -> _jobProcsOnHold ++	1183:1:35383:35405	3107831	3	True				
ANR	3107852	PostIncDecOperationExpression	job -> _jobProcsOnHold ++		3107831	0					
ANR	3107853	PtrMemberAccess	job -> _jobProcsOnHold		3107831	0					
ANR	3107854	Identifier	job		3107831	0					
ANR	3107855	Identifier	_jobProcsOnHold		3107831	1					
ANR	3107856	IncDec	++		3107831	1					
ANR	3107857	IfStatement	if ( _maxJobHolds > 0 && job -> _timesHeld >= _maxJobHolds )		3107831	4					
ANR	3107858	Condition	_maxJobHolds > 0 && job -> _timesHeld >= _maxJobHolds	1184:6:35413:35463	3107831	0	True				
ANR	3107859	AndExpression	_maxJobHolds > 0 && job -> _timesHeld >= _maxJobHolds		3107831	0		&&			
ANR	3107860	RelationalExpression	_maxJobHolds > 0		3107831	0		>			
ANR	3107861	Identifier	_maxJobHolds		3107831	0					
ANR	3107862	PrimaryExpression	0		3107831	1					
ANR	3107863	RelationalExpression	job -> _timesHeld >= _maxJobHolds		3107831	1		>=			
ANR	3107864	PtrMemberAccess	job -> _timesHeld		3107831	0					
ANR	3107865	Identifier	job		3107831	0					
ANR	3107866	Identifier	_timesHeld		3107831	1					
ANR	3107867	Identifier	_maxJobHolds		3107831	1					
ANR	3107868	CompoundStatement		11:60:158:158	3107831	1					
ANR	3107869	Statement	debug_printf	1185:2:35471:35482	3107831	0	True				
ANR	3107870	Statement	(	1185:14:35483:35483	3107831	1	True				
ANR	3107871	Statement	DEBUG_VERBOSE	1185:16:35485:35497	3107831	2	True				
ANR	3107872	Statement	","	1185:29:35498:35498	3107831	3	True				
ANR	3107873	Statement	"""Total hold count for job %d (node %s) """	1185:31:35500:35539	3107831	4	True				
ANR	3107874	Statement	"""has reached DAGMAN_MAX_JOB_HOLDS (%d); all job """	1186:5:35546:35594	3107831	5	True				
ANR	3107875	Statement	"""proc(s) for this node will now be removed\\n"""	1187:5:35601:35645	3107831	6	True				
ANR	3107876	Statement	","	1187:50:35646:35646	3107831	7	True				
ANR	3107877	Statement	event	1188:5:35653:35657	3107831	8	True				
ANR	3107878	Statement	->	1188:10:35658:35659	3107831	9	True				
ANR	3107879	Statement	cluster	1188:12:35660:35666	3107831	10	True				
ANR	3107880	Statement	","	1188:19:35667:35667	3107831	11	True				
ANR	3107881	Statement	job	1188:21:35669:35671	3107831	12	True				
ANR	3107882	Statement	->	1188:24:35672:35673	3107831	13	True				
ANR	3107883	Statement	GetJobName	1188:26:35674:35683	3107831	14	True				
ANR	3107884	Statement	(	1188:36:35684:35684	3107831	15	True				
ANR	3107885	Statement	)	1188:37:35685:35685	3107831	16	True				
ANR	3107886	Statement	","	1188:38:35686:35686	3107831	17	True				
ANR	3107887	Statement	_maxJobHolds	1188:40:35688:35699	3107831	18	True				
ANR	3107888	Statement	)	1188:53:35701:35701	3107831	19	True				
ANR	3107889	ExpressionStatement		1188:54:35702:35702	3107831	20	True				
ANR	3107890	ExpressionStatement	RemoveBatchJob ( job )	1189:2:35706:35727	3107831	21	True				
ANR	3107891	CallExpression	RemoveBatchJob ( job )		3107831	0					
ANR	3107892	Callee	RemoveBatchJob		3107831	0					
ANR	3107893	Identifier	RemoveBatchJob		3107831	0					
ANR	3107894	ArgumentList	job		3107831	1					
ANR	3107895	Argument	job		3107831	0					
ANR	3107896	Identifier	job		3107831	0					
ANR	3107897	ReturnType	void		3107831	1					
ANR	3107898	Identifier	Dag :: ProcessHeldEvent		3107831	2					
ANR	3107899	ParameterList	"Job * job , const ULogEvent * event"		3107831	3					
ANR	3107900	Parameter	Job * job	1174:22:35274:35281	3107831	0	True				
ANR	3107901	ParameterType	Job *		3107831	0					
ANR	3107902	Identifier	job		3107831	1					
ANR	3107903	Parameter	const ULogEvent * event	1174:32:35284:35305	3107831	1	True				
ANR	3107904	ParameterType	const ULogEvent *		3107831	0					
ANR	3107905	Identifier	event		3107831	1					
ANR	3107906	CFGEntryNode	ENTRY		3107831		True				
ANR	3107907	CFGExitNode	EXIT		3107831		True				
ANR	3107908	Symbol	job -> _jobProcsOnHold		3107831						
ANR	3107909	Symbol	_numHeldJobProcs		3107831						
ANR	3107910	Symbol	* job		3107831						
ANR	3107911	Symbol	_maxJobHolds		3107831						
ANR	3107912	Symbol	job		3107831						
ANR	3107913	Symbol	event		3107831						
ANR	3107914	Symbol	job -> _timesHeld		3107831						
ANR	3107915	Function	Dag :: ProcessReleasedEvent	1194:0:35813:35933							
ANR	3107916	FunctionDef	Dag :: ProcessReleasedEvent (Job * job)		3107915	0					
ANR	3107917	CompoundStatement		1195:36:35854:35933	3107915	0					
ANR	3107918	IfStatement	if ( ! job )		3107915	0					
ANR	3107919	Condition	! job	1197:6:35863:35866	3107915	0	True				
ANR	3107920	UnaryOperationExpression	! job		3107915	0					
ANR	3107921	UnaryOperator	!		3107915	0					
ANR	3107922	Identifier	job		3107915	1					
ANR	3107923	CompoundStatement		3:13:15:15	3107915	1					
ANR	3107924	ReturnStatement	return ;	1198:2:35874:35880	3107915	0	True				
ANR	3107925	ExpressionStatement	_numHeldJobProcs --	1201:1:35887:35905	3107915	1	True				
ANR	3107926	PostIncDecOperationExpression	_numHeldJobProcs --		3107915	0					
ANR	3107927	Identifier	_numHeldJobProcs		3107915	0					
ANR	3107928	IncDec	--		3107915	1					
ANR	3107929	ExpressionStatement	job -> _jobProcsOnHold --	1203:1:35909:35931	3107915	2	True				
ANR	3107930	PostIncDecOperationExpression	job -> _jobProcsOnHold --		3107915	0					
ANR	3107931	PtrMemberAccess	job -> _jobProcsOnHold		3107915	0					
ANR	3107932	Identifier	job		3107915	0					
ANR	3107933	Identifier	_jobProcsOnHold		3107915	1					
ANR	3107934	IncDec	--		3107915	1					
ANR	3107935	ReturnType	void		3107915	1					
ANR	3107936	Identifier	Dag :: ProcessReleasedEvent		3107915	2					
ANR	3107937	ParameterList	Job * job		3107915	3					
ANR	3107938	Parameter	Job * job	1195:26:35844:35851	3107915	0	True				
ANR	3107939	ParameterType	Job *		3107915	0					
ANR	3107940	Identifier	job		3107915	1					
ANR	3107941	CFGEntryNode	ENTRY		3107915		True				
ANR	3107942	CFGExitNode	EXIT		3107915		True				
ANR	3107943	Symbol	job -> _jobProcsOnHold		3107915						
ANR	3107944	Symbol	_numHeldJobProcs		3107915						
ANR	3107945	Symbol	* job		3107915						
ANR	3107946	Symbol	job		3107915						
ANR	3107947	Function	Dag :: FindNodeByName	1207:0:36014:36438							
ANR	3107948	FunctionDef	Dag :: FindNodeByName (const char * jobName)		3107947	0					
ANR	3107949	CompoundStatement		1207:55:36069:36438	3107947	0					
ANR	3107950	IfStatement	if ( ! jobName )		3107947	0					
ANR	3107951	Condition	! jobName	1208:5:36076:36083	3107947	0	True				
ANR	3107952	UnaryOperationExpression	! jobName		3107947	0					
ANR	3107953	UnaryOperator	!		3107947	0					
ANR	3107954	Identifier	jobName		3107947	1					
ANR	3107955	CompoundStatement		2:16:17:17	3107947	1					
ANR	3107956	ReturnStatement	return NULL ;	1209:2:36091:36102	3107947	0	True				
ANR	3107957	Identifier	NULL		3107947	0					
ANR	3107958	IdentifierDeclStatement	Job * job = NULL ;	1212:1:36109:36125	3107947	1	True				
ANR	3107959	IdentifierDecl	* job = NULL		3107947	0					
ANR	3107960	IdentifierDeclType	Job *		3107947	0					
ANR	3107961	Identifier	job		3107947	1					
ANR	3107962	AssignmentExpression	* job = NULL		3107947	2		=			
ANR	3107963	Identifier	NULL		3107947	0					
ANR	3107964	Identifier	NULL		3107947	1					
ANR	3107965	IfStatement	"if ( _nodeNameHash . lookup ( jobName , job ) != 0 )"		3107947	2					
ANR	3107966	Condition	"_nodeNameHash . lookup ( jobName , job ) != 0"	1213:6:36133:36171	3107947	0	True				
ANR	3107967	EqualityExpression	"_nodeNameHash . lookup ( jobName , job ) != 0"		3107947	0		!=			
ANR	3107968	CallExpression	"_nodeNameHash . lookup ( jobName , job )"		3107947	0					
ANR	3107969	Callee	_nodeNameHash . lookup		3107947	0					
ANR	3107970	MemberAccess	_nodeNameHash . lookup		3107947	0					
ANR	3107971	Identifier	_nodeNameHash		3107947	0					
ANR	3107972	Identifier	lookup		3107947	1					
ANR	3107973	ArgumentList	jobName		3107947	1					
ANR	3107974	Argument	jobName		3107947	0					
ANR	3107975	Identifier	jobName		3107947	0					
ANR	3107976	Argument	job		3107947	1					
ANR	3107977	Identifier	job		3107947	0					
ANR	3107978	PrimaryExpression	0		3107947	1					
ANR	3107979	CompoundStatement		7:48:105:105	3107947	1					
ANR	3107980	ExpressionStatement	"debug_printf ( DEBUG_VERBOSE , ""ERROR: job %s not found!\\n"" , jobName )"	1214:5:36182:36249	3107947	0	True				
ANR	3107981	CallExpression	"debug_printf ( DEBUG_VERBOSE , ""ERROR: job %s not found!\\n"" , jobName )"		3107947	0					
ANR	3107982	Callee	debug_printf		3107947	0					
ANR	3107983	Identifier	debug_printf		3107947	0					
ANR	3107984	ArgumentList	DEBUG_VERBOSE		3107947	1					
ANR	3107985	Argument	DEBUG_VERBOSE		3107947	0					
ANR	3107986	Identifier	DEBUG_VERBOSE		3107947	0					
ANR	3107987	Argument	"""ERROR: job %s not found!\\n"""		3107947	1					
ANR	3107988	PrimaryExpression	"""ERROR: job %s not found!\\n"""		3107947	0					
ANR	3107989	Argument	jobName		3107947	2					
ANR	3107990	Identifier	jobName		3107947	0					
ANR	3107991	ExpressionStatement	job = NULL	1215:2:36253:36263	3107947	1	True				
ANR	3107992	AssignmentExpression	job = NULL		3107947	0		=			
ANR	3107993	Identifier	job		3107947	0					
ANR	3107994	Identifier	NULL		3107947	1					
ANR	3107995	IfStatement	if ( job )		3107947	3					
ANR	3107996	Condition	job	1218:6:36275:36277	3107947	0	True				
ANR	3107997	Identifier	job		3107947	0					
ANR	3107998	CompoundStatement		12:12:211:211	3107947	1					
ANR	3107999	IfStatement	"if ( strcmp ( jobName , job -> GetJobName ( ) ) != 0 )"		3107947	0					
ANR	3108000	Condition	"strcmp ( jobName , job -> GetJobName ( ) ) != 0"	1219:7:36290:36330	3107947	0	True				
ANR	3108001	EqualityExpression	"strcmp ( jobName , job -> GetJobName ( ) ) != 0"		3107947	0		!=			
ANR	3108002	CallExpression	"strcmp ( jobName , job -> GetJobName ( ) )"		3107947	0					
ANR	3108003	Callee	strcmp		3107947	0					
ANR	3108004	Identifier	strcmp		3107947	0					
ANR	3108005	ArgumentList	jobName		3107947	1					
ANR	3108006	Argument	jobName		3107947	0					
ANR	3108007	Identifier	jobName		3107947	0					
ANR	3108008	Argument	job -> GetJobName ( )		3107947	1					
ANR	3108009	CallExpression	job -> GetJobName ( )		3107947	0					
ANR	3108010	Callee	job -> GetJobName		3107947	0					
ANR	3108011	PtrMemberAccess	job -> GetJobName		3107947	0					
ANR	3108012	Identifier	job		3107947	0					
ANR	3108013	Identifier	GetJobName		3107947	1					
ANR	3108014	ArgumentList			3107947	1					
ANR	3108015	PrimaryExpression	0		3107947	1					
ANR	3108016	CompoundStatement		13:51:264:264	3107947	1					
ANR	3108017	ExpressionStatement	"EXCEPT ( ""Searched for node %s; got %s!!"" , jobName , job -> GetJobName ( ) )"	1220:3:36339:36415	3107947	0	True				
ANR	3108018	CallExpression	"EXCEPT ( ""Searched for node %s; got %s!!"" , jobName , job -> GetJobName ( ) )"		3107947	0					
ANR	3108019	Callee	EXCEPT		3107947	0					
ANR	3108020	Identifier	EXCEPT		3107947	0					
ANR	3108021	ArgumentList	"""Searched for node %s; got %s!!"""		3107947	1					
ANR	3108022	Argument	"""Searched for node %s; got %s!!"""		3107947	0					
ANR	3108023	PrimaryExpression	"""Searched for node %s; got %s!!"""		3107947	0					
ANR	3108024	Argument	jobName		3107947	1					
ANR	3108025	Identifier	jobName		3107947	0					
ANR	3108026	Argument	job -> GetJobName ( )		3107947	2					
ANR	3108027	CallExpression	job -> GetJobName ( )		3107947	0					
ANR	3108028	Callee	job -> GetJobName		3107947	0					
ANR	3108029	PtrMemberAccess	job -> GetJobName		3107947	0					
ANR	3108030	Identifier	job		3107947	0					
ANR	3108031	Identifier	GetJobName		3107947	1					
ANR	3108032	ArgumentList			3107947	1					
ANR	3108033	ReturnStatement	return job ;	1225:1:36426:36436	3107947	4	True				
ANR	3108034	Identifier	job		3107947	0					
ANR	3108035	ReturnType	Job *		3107947	1					
ANR	3108036	Identifier	Dag :: FindNodeByName		3107947	2					
ANR	3108037	ParameterList	const char * jobName		3107947	3					
ANR	3108038	Parameter	const char * jobName	1207:27:36041:36060	3107947	0	True				
ANR	3108039	ParameterType	const char *		3107947	0					
ANR	3108040	Identifier	jobName		3107947	1					
ANR	3108041	CFGEntryNode	ENTRY		3107947		True				
ANR	3108042	CFGExitNode	EXIT		3107947		True				
ANR	3108043	Symbol	jobName		3107947						
ANR	3108044	Symbol	strcmp		3107947						
ANR	3108045	Symbol	NULL		3107947						
ANR	3108046	Symbol	* job		3107947						
ANR	3108047	Symbol	job -> GetJobName		3107947						
ANR	3108048	Symbol	_nodeNameHash . lookup		3107947						
ANR	3108049	Symbol	job		3107947						
ANR	3108050	Symbol	_nodeNameHash		3107947						
ANR	3108051	Symbol	DEBUG_VERBOSE		3107947						
ANR	3108052	Function	Dag :: NodeExists	1229:0:36519:37015							
ANR	3108053	FunctionDef	Dag :: NodeExists (const char * nodeName)		3108052	0					
ANR	3108054	CompoundStatement		1231:0:36570:37015	3108052	0					
ANR	3108055	IfStatement	if ( ! nodeName )		3108052	0					
ANR	3108056	Condition	! nodeName	1232:6:36578:36586	3108052	0	True				
ANR	3108057	UnaryOperationExpression	! nodeName		3108052	0					
ANR	3108058	UnaryOperator	!		3108052	0					
ANR	3108059	Identifier	nodeName		3108052	1					
ANR	3108060	CompoundStatement		2:18:19:19	3108052	1					
ANR	3108061	ReturnStatement	return false ;	1233:4:36596:36608	3108052	0	True				
ANR	3108062	Identifier	false		3108052	0					
ANR	3108063	IdentifierDeclStatement	Job * job = NULL ;	1238:2:36742:36758	3108052	1	True				
ANR	3108064	IdentifierDecl	* job = NULL		3108052	0					
ANR	3108065	IdentifierDeclType	Job *		3108052	0					
ANR	3108066	Identifier	job		3108052	1					
ANR	3108067	AssignmentExpression	* job = NULL		3108052	2		=			
ANR	3108068	Identifier	NULL		3108052	0					
ANR	3108069	Identifier	NULL		3108052	1					
ANR	3108070	IfStatement	"if ( _nodeNameHash . lookup ( nodeName , job ) != 0 )"		3108052	2					
ANR	3108071	Condition	"_nodeNameHash . lookup ( nodeName , job ) != 0"	1239:7:36767:36806	3108052	0	True				
ANR	3108072	EqualityExpression	"_nodeNameHash . lookup ( nodeName , job ) != 0"		3108052	0		!=			
ANR	3108073	CallExpression	"_nodeNameHash . lookup ( nodeName , job )"		3108052	0					
ANR	3108074	Callee	_nodeNameHash . lookup		3108052	0					
ANR	3108075	MemberAccess	_nodeNameHash . lookup		3108052	0					
ANR	3108076	Identifier	_nodeNameHash		3108052	0					
ANR	3108077	Identifier	lookup		3108052	1					
ANR	3108078	ArgumentList	nodeName		3108052	1					
ANR	3108079	Argument	nodeName		3108052	0					
ANR	3108080	Identifier	nodeName		3108052	0					
ANR	3108081	Argument	job		3108052	1					
ANR	3108082	Identifier	job		3108052	0					
ANR	3108083	PrimaryExpression	0		3108052	1					
ANR	3108084	CompoundStatement		9:50:239:239	3108052	1					
ANR	3108085	ReturnStatement	return false ;	1240:4:36816:36828	3108052	0	True				
ANR	3108086	Identifier	false		3108052	0					
ANR	3108087	IfStatement	if ( job )		3108052	3					
ANR	3108088	Condition	job	1243:6:36841:36843	3108052	0	True				
ANR	3108089	Identifier	job		3108052	0					
ANR	3108090	CompoundStatement		13:12:276:276	3108052	1					
ANR	3108091	IfStatement	"if ( strcmp ( nodeName , job -> GetJobName ( ) ) != 0 )"		3108052	0					
ANR	3108092	Condition	"strcmp ( nodeName , job -> GetJobName ( ) ) != 0"	1244:7:36856:36897	3108052	0	True				
ANR	3108093	EqualityExpression	"strcmp ( nodeName , job -> GetJobName ( ) ) != 0"		3108052	0		!=			
ANR	3108094	CallExpression	"strcmp ( nodeName , job -> GetJobName ( ) )"		3108052	0					
ANR	3108095	Callee	strcmp		3108052	0					
ANR	3108096	Identifier	strcmp		3108052	0					
ANR	3108097	ArgumentList	nodeName		3108052	1					
ANR	3108098	Argument	nodeName		3108052	0					
ANR	3108099	Identifier	nodeName		3108052	0					
ANR	3108100	Argument	job -> GetJobName ( )		3108052	1					
ANR	3108101	CallExpression	job -> GetJobName ( )		3108052	0					
ANR	3108102	Callee	job -> GetJobName		3108052	0					
ANR	3108103	PtrMemberAccess	job -> GetJobName		3108052	0					
ANR	3108104	Identifier	job		3108052	0					
ANR	3108105	Identifier	GetJobName		3108052	1					
ANR	3108106	ArgumentList			3108052	1					
ANR	3108107	PrimaryExpression	0		3108052	1					
ANR	3108108	CompoundStatement		14:52:330:330	3108052	1					
ANR	3108109	ExpressionStatement	"EXCEPT ( ""Searched for node %s; got %s!!"" , nodeName , job -> GetJobName ( ) )"	1245:3:36906:36983	3108052	0	True				
ANR	3108110	CallExpression	"EXCEPT ( ""Searched for node %s; got %s!!"" , nodeName , job -> GetJobName ( ) )"		3108052	0					
ANR	3108111	Callee	EXCEPT		3108052	0					
ANR	3108112	Identifier	EXCEPT		3108052	0					
ANR	3108113	ArgumentList	"""Searched for node %s; got %s!!"""		3108052	1					
ANR	3108114	Argument	"""Searched for node %s; got %s!!"""		3108052	0					
ANR	3108115	PrimaryExpression	"""Searched for node %s; got %s!!"""		3108052	0					
ANR	3108116	Argument	nodeName		3108052	1					
ANR	3108117	Identifier	nodeName		3108052	0					
ANR	3108118	Argument	job -> GetJobName ( )		3108052	2					
ANR	3108119	CallExpression	job -> GetJobName ( )		3108052	0					
ANR	3108120	Callee	job -> GetJobName		3108052	0					
ANR	3108121	PtrMemberAccess	job -> GetJobName		3108052	0					
ANR	3108122	Identifier	job		3108052	0					
ANR	3108123	Identifier	GetJobName		3108052	1					
ANR	3108124	ArgumentList			3108052	1					
ANR	3108125	ReturnStatement	return job != NULL ;	1250:2:36995:37013	3108052	4	True				
ANR	3108126	EqualityExpression	job != NULL		3108052	0		!=			
ANR	3108127	Identifier	job		3108052	0					
ANR	3108128	Identifier	NULL		3108052	1					
ANR	3108129	ReturnType	bool		3108052	1					
ANR	3108130	Identifier	Dag :: NodeExists		3108052	2					
ANR	3108131	ParameterList	const char * nodeName		3108052	3					
ANR	3108132	Parameter	const char * nodeName	1230:17:36541:36560	3108052	0	True				
ANR	3108133	ParameterType	const char *		3108052	0					
ANR	3108134	Identifier	nodeName		3108052	1					
ANR	3108135	CFGEntryNode	ENTRY		3108052		True				
ANR	3108136	CFGExitNode	EXIT		3108052		True				
ANR	3108137	Symbol	nodeName		3108052						
ANR	3108138	Symbol	strcmp		3108052						
ANR	3108139	Symbol	NULL		3108052						
ANR	3108140	Symbol	job -> GetJobName		3108052						
ANR	3108141	Symbol	* job		3108052						
ANR	3108142	Symbol	false		3108052						
ANR	3108143	Symbol	_nodeNameHash . lookup		3108052						
ANR	3108144	Symbol	job		3108052						
ANR	3108145	Symbol	_nodeNameHash		3108052						
ANR	3108146	Function	Dag :: FindNodeByEventID	1254:0:37096:38566							
ANR	3108147	FunctionDef	"Dag :: FindNodeByEventID (int logsource , const CondorID condorID)"		3108146	0					
ANR	3108148	CompoundStatement		1254:76:37172:38566	3108146	0					
ANR	3108149	IfStatement	if ( condorID . _cluster == - 1 )		3108146	0					
ANR	3108150	Condition	condorID . _cluster == - 1	1255:6:37180:37202	3108146	0	True				
ANR	3108151	EqualityExpression	condorID . _cluster == - 1		3108146	0		==			
ANR	3108152	MemberAccess	condorID . _cluster		3108146	0					
ANR	3108153	Identifier	condorID		3108146	0					
ANR	3108154	Identifier	_cluster		3108146	1					
ANR	3108155	UnaryOperationExpression	- 1		3108146	1					
ANR	3108156	UnaryOperator	-		3108146	0					
ANR	3108157	PrimaryExpression	1		3108146	1					
ANR	3108158	CompoundStatement		2:32:33:33	3108146	1					
ANR	3108159	ReturnStatement	return NULL ;	1256:2:37210:37221	3108146	0	True				
ANR	3108160	Identifier	NULL		3108146	0					
ANR	3108161	IdentifierDeclStatement	Job * node = NULL ;	1259:1:37228:37245	3108146	1	True				
ANR	3108162	IdentifierDecl	* node = NULL		3108146	0					
ANR	3108163	IdentifierDeclType	Job *		3108146	0					
ANR	3108164	Identifier	node		3108146	1					
ANR	3108165	AssignmentExpression	* node = NULL		3108146	2		=			
ANR	3108166	Identifier	NULL		3108146	0					
ANR	3108167	Identifier	NULL		3108146	1					
ANR	3108168	IdentifierDeclStatement	bool isNoop = JobIsNoop ( condorID ) ;	1260:1:37248:37283	3108146	2	True				
ANR	3108169	IdentifierDecl	isNoop = JobIsNoop ( condorID )		3108146	0					
ANR	3108170	IdentifierDeclType	bool		3108146	0					
ANR	3108171	Identifier	isNoop		3108146	1					
ANR	3108172	AssignmentExpression	isNoop = JobIsNoop ( condorID )		3108146	2		=			
ANR	3108173	Identifier	isNoop		3108146	0					
ANR	3108174	CallExpression	JobIsNoop ( condorID )		3108146	1					
ANR	3108175	Callee	JobIsNoop		3108146	0					
ANR	3108176	Identifier	JobIsNoop		3108146	0					
ANR	3108177	ArgumentList	condorID		3108146	1					
ANR	3108178	Argument	condorID		3108146	0					
ANR	3108179	Identifier	condorID		3108146	0					
ANR	3108180	IdentifierDeclStatement	int id = GetIndexID ( condorID ) ;	1261:1:37286:37317	3108146	3	True				
ANR	3108181	IdentifierDecl	id = GetIndexID ( condorID )		3108146	0					
ANR	3108182	IdentifierDeclType	int		3108146	0					
ANR	3108183	Identifier	id		3108146	1					
ANR	3108184	AssignmentExpression	id = GetIndexID ( condorID )		3108146	2		=			
ANR	3108185	Identifier	id		3108146	0					
ANR	3108186	CallExpression	GetIndexID ( condorID )		3108146	1					
ANR	3108187	Callee	GetIndexID		3108146	0					
ANR	3108188	Identifier	GetIndexID		3108146	0					
ANR	3108189	ArgumentList	condorID		3108146	1					
ANR	3108190	Argument	condorID		3108146	0					
ANR	3108191	Identifier	condorID		3108146	0					
ANR	3108192	IfStatement	"if ( GetEventIDHash ( isNoop , logsource ) -> lookup ( id , node ) != 0 )"		3108146	4					
ANR	3108193	Condition	"GetEventIDHash ( isNoop , logsource ) -> lookup ( id , node ) != 0"	1262:6:37325:37382	3108146	0	True				
ANR	3108194	EqualityExpression	"GetEventIDHash ( isNoop , logsource ) -> lookup ( id , node ) != 0"		3108146	0		!=			
ANR	3108195	CallExpression	"GetEventIDHash ( isNoop , logsource ) -> lookup ( id , node )"		3108146	0					
ANR	3108196	Callee	"GetEventIDHash ( isNoop , logsource ) -> lookup"		3108146	0					
ANR	3108197	PtrMemberAccess	"GetEventIDHash ( isNoop , logsource ) -> lookup"		3108146	0					
ANR	3108198	CallExpression	"GetEventIDHash ( isNoop , logsource )"		3108146	0					
ANR	3108199	Callee	GetEventIDHash		3108146	0					
ANR	3108200	Identifier	GetEventIDHash		3108146	0					
ANR	3108201	ArgumentList	isNoop		3108146	1					
ANR	3108202	Argument	isNoop		3108146	0					
ANR	3108203	Identifier	isNoop		3108146	0					
ANR	3108204	Argument	logsource		3108146	1					
ANR	3108205	Identifier	logsource		3108146	0					
ANR	3108206	Identifier	lookup		3108146	1					
ANR	3108207	ArgumentList	id		3108146	1					
ANR	3108208	Argument	id		3108146	0					
ANR	3108209	Identifier	id		3108146	0					
ANR	3108210	Argument	node		3108146	1					
ANR	3108211	Identifier	node		3108146	0					
ANR	3108212	PrimaryExpression	0		3108146	1					
ANR	3108213	CompoundStatement		9:67:213:213	3108146	1					
ANR	3108214	Statement	debug_printf	1267:5:37625:37636	3108146	0	True				
ANR	3108215	Statement	(	1267:17:37637:37637	3108146	1	True				
ANR	3108216	Statement	DEBUG_VERBOSE	1267:19:37639:37651	3108146	2	True				
ANR	3108217	Statement	","	1267:32:37652:37652	3108146	3	True				
ANR	3108218	Statement	"""ERROR: node for condor ID %d.%d.%d not found! """	1268:5:37659:37706	3108146	4	True				
ANR	3108219	Statement	"""(might be because of node retries)\\n"""	1269:5:37713:37750	3108146	5	True				
ANR	3108220	Statement	","	1269:43:37751:37751	3108146	6	True				
ANR	3108221	Statement	condorID	1270:5:37758:37765	3108146	7	True				
ANR	3108222	Statement	.	1270:13:37766:37766	3108146	8	True				
ANR	3108223	Statement	_cluster	1270:14:37767:37774	3108146	9	True				
ANR	3108224	Statement	","	1270:22:37775:37775	3108146	10	True				
ANR	3108225	Statement	condorID	1270:24:37777:37784	3108146	11	True				
ANR	3108226	Statement	.	1270:32:37785:37785	3108146	12	True				
ANR	3108227	Statement	_proc	1270:33:37786:37790	3108146	13	True				
ANR	3108228	Statement	","	1270:38:37791:37791	3108146	14	True				
ANR	3108229	Statement	condorID	1270:40:37793:37800	3108146	15	True				
ANR	3108230	Statement	.	1270:48:37801:37801	3108146	16	True				
ANR	3108231	Statement	_subproc	1270:49:37802:37809	3108146	17	True				
ANR	3108232	Statement	)	1270:57:37810:37810	3108146	18	True				
ANR	3108233	ExpressionStatement		1270:58:37811:37811	3108146	19	True				
ANR	3108234	ExpressionStatement	node = NULL	1271:2:37815:37826	3108146	20	True				
ANR	3108235	AssignmentExpression	node = NULL		3108146	0		=			
ANR	3108236	Identifier	node		3108146	0					
ANR	3108237	Identifier	NULL		3108146	1					
ANR	3108238	IfStatement	if ( node )		3108146	5					
ANR	3108239	Condition	node	1274:6:37838:37841	3108146	0	True				
ANR	3108240	Identifier	node		3108146	0					
ANR	3108241	CompoundStatement		21:13:672:672	3108146	1					
ANR	3108242	IfStatement	if ( condorID . _cluster != node -> _CondorID . _cluster )		3108146	0					
ANR	3108243	Condition	condorID . _cluster != node -> _CondorID . _cluster	1275:7:37854:37898	3108146	0	True				
ANR	3108244	EqualityExpression	condorID . _cluster != node -> _CondorID . _cluster		3108146	0		!=			
ANR	3108245	MemberAccess	condorID . _cluster		3108146	0					
ANR	3108246	Identifier	condorID		3108146	0					
ANR	3108247	Identifier	_cluster		3108146	1					
ANR	3108248	MemberAccess	node -> _CondorID . _cluster		3108146	1					
ANR	3108249	PtrMemberAccess	node -> _CondorID		3108146	0					
ANR	3108250	Identifier	node		3108146	0					
ANR	3108251	Identifier	_CondorID		3108146	1					
ANR	3108252	Identifier	_cluster		3108146	1					
ANR	3108253	CompoundStatement		22:55:729:729	3108146	1					
ANR	3108254	IfStatement	if ( node -> _CondorID . _cluster != _defaultCondorId . _cluster )		3108146	0					
ANR	3108255	Condition	node -> _CondorID . _cluster != _defaultCondorId . _cluster	1276:8:37912:37964	3108146	0	True				
ANR	3108256	EqualityExpression	node -> _CondorID . _cluster != _defaultCondorId . _cluster		3108146	0		!=			
ANR	3108257	MemberAccess	node -> _CondorID . _cluster		3108146	0					
ANR	3108258	PtrMemberAccess	node -> _CondorID		3108146	0					
ANR	3108259	Identifier	node		3108146	0					
ANR	3108260	Identifier	_CondorID		3108146	1					
ANR	3108261	Identifier	_cluster		3108146	1					
ANR	3108262	MemberAccess	_defaultCondorId . _cluster		3108146	1					
ANR	3108263	Identifier	_defaultCondorId		3108146	0					
ANR	3108264	Identifier	_cluster		3108146	1					
ANR	3108265	CompoundStatement		23:64:795:795	3108146	1					
ANR	3108266	ExpressionStatement	"EXCEPT ( ""Searched for node for cluster %d; got %d!!"" , condorID . _cluster , node -> _CondorID . _cluster )"	1277:5:37975:38090	3108146	0	True				
ANR	3108267	CallExpression	"EXCEPT ( ""Searched for node for cluster %d; got %d!!"" , condorID . _cluster , node -> _CondorID . _cluster )"		3108146	0					
ANR	3108268	Callee	EXCEPT		3108146	0					
ANR	3108269	Identifier	EXCEPT		3108146	0					
ANR	3108270	ArgumentList	"""Searched for node for cluster %d; got %d!!"""		3108146	1					
ANR	3108271	Argument	"""Searched for node for cluster %d; got %d!!"""		3108146	0					
ANR	3108272	PrimaryExpression	"""Searched for node for cluster %d; got %d!!"""		3108146	0					
ANR	3108273	Argument	condorID . _cluster		3108146	1					
ANR	3108274	MemberAccess	condorID . _cluster		3108146	0					
ANR	3108275	Identifier	condorID		3108146	0					
ANR	3108276	Identifier	_cluster		3108146	1					
ANR	3108277	Argument	node -> _CondorID . _cluster		3108146	2					
ANR	3108278	MemberAccess	node -> _CondorID . _cluster		3108146	0					
ANR	3108279	PtrMemberAccess	node -> _CondorID		3108146	0					
ANR	3108280	Identifier	node		3108146	0					
ANR	3108281	Identifier	_CondorID		3108146	1					
ANR	3108282	Identifier	_cluster		3108146	1					
ANR	3108283	ElseStatement	else		3108146	0					
ANR	3108284	CompoundStatement		27:10:929:929	3108146	0					
ANR	3108285	Statement	debug_printf	1285:4:38306:38317	3108146	0	True				
ANR	3108286	Statement	(	1285:16:38318:38318	3108146	1	True				
ANR	3108287	Statement	DEBUG_QUIET	1285:18:38320:38330	3108146	2	True				
ANR	3108288	Statement	","	1285:29:38331:38331	3108146	3	True				
ANR	3108289	Statement	"""Warning: searched for node for """	1285:31:38333:38365	3108146	4	True				
ANR	3108290	Statement	"""cluster %d; got %d!!\\n"""	1286:7:38374:38397	3108146	5	True				
ANR	3108291	Statement	","	1286:31:38398:38398	3108146	6	True				
ANR	3108292	Statement	condorID	1286:33:38400:38407	3108146	7	True				
ANR	3108293	Statement	.	1286:41:38408:38408	3108146	8	True				
ANR	3108294	Statement	_cluster	1286:42:38409:38416	3108146	9	True				
ANR	3108295	Statement	","	1286:50:38417:38417	3108146	10	True				
ANR	3108296	Statement	node	1287:7:38426:38429	3108146	11	True				
ANR	3108297	Statement	->	1287:11:38430:38431	3108146	12	True				
ANR	3108298	Statement	_CondorID	1287:13:38432:38440	3108146	13	True				
ANR	3108299	Statement	.	1287:22:38441:38441	3108146	14	True				
ANR	3108300	Statement	_cluster	1287:23:38442:38449	3108146	15	True				
ANR	3108301	Statement	)	1287:32:38451:38451	3108146	16	True				
ANR	3108302	ExpressionStatement		1287:33:38452:38452	3108146	17	True				
ANR	3108303	ExpressionStatement	check_warning_strictness ( DAG_STRICT_3 )	1288:4:38458:38498	3108146	18	True				
ANR	3108304	CallExpression	check_warning_strictness ( DAG_STRICT_3 )		3108146	0					
ANR	3108305	Callee	check_warning_strictness		3108146	0					
ANR	3108306	Identifier	check_warning_strictness		3108146	0					
ANR	3108307	ArgumentList	DAG_STRICT_3		3108146	1					
ANR	3108308	Argument	DAG_STRICT_3		3108146	0					
ANR	3108309	Identifier	DAG_STRICT_3		3108146	0					
ANR	3108310	ExpressionStatement	ASSERT ( isNoop == node -> GetNoop ( ) )	1291:2:38511:38546	3108146	1	True				
ANR	3108311	CallExpression	ASSERT ( isNoop == node -> GetNoop ( ) )		3108146	0					
ANR	3108312	Callee	ASSERT		3108146	0					
ANR	3108313	Identifier	ASSERT		3108146	0					
ANR	3108314	ArgumentList	isNoop == node -> GetNoop ( )		3108146	1					
ANR	3108315	Argument	isNoop == node -> GetNoop ( )		3108146	0					
ANR	3108316	EqualityExpression	isNoop == node -> GetNoop ( )		3108146	0		==			
ANR	3108317	Identifier	isNoop		3108146	0					
ANR	3108318	CallExpression	node -> GetNoop ( )		3108146	1					
ANR	3108319	Callee	node -> GetNoop		3108146	0					
ANR	3108320	PtrMemberAccess	node -> GetNoop		3108146	0					
ANR	3108321	Identifier	node		3108146	0					
ANR	3108322	Identifier	GetNoop		3108146	1					
ANR	3108323	ArgumentList			3108146	1					
ANR	3108324	ReturnStatement	return node ;	1294:1:38553:38564	3108146	6	True				
ANR	3108325	Identifier	node		3108146	0					
ANR	3108326	ReturnType	Job *		3108146	1					
ANR	3108327	Identifier	Dag :: FindNodeByEventID		3108146	2					
ANR	3108328	ParameterList	"int logsource , const CondorID condorID"		3108146	3					
ANR	3108329	Parameter	int logsource	1254:30:37126:37138	3108146	0	True				
ANR	3108330	ParameterType	int		3108146	0					
ANR	3108331	Identifier	logsource		3108146	1					
ANR	3108332	Parameter	const CondorID condorID	1254:45:37141:37163	3108146	1	True				
ANR	3108333	ParameterType	const CondorID		3108146	0					
ANR	3108334	Identifier	condorID		3108146	1					
ANR	3108335	CFGEntryNode	ENTRY		3108146		True				
ANR	3108336	CFGExitNode	EXIT		3108146		True				
ANR	3108337	Symbol	NULL		3108146						
ANR	3108338	Symbol	GetIndexID		3108146						
ANR	3108339	Symbol	isNoop		3108146						
ANR	3108340	Symbol	logsource		3108146						
ANR	3108341	Symbol	_defaultCondorId . _cluster		3108146						
ANR	3108342	Symbol	node -> GetNoop		3108146						
ANR	3108343	Symbol	_defaultCondorId		3108146						
ANR	3108344	Symbol	* GetEventIDHash		3108146						
ANR	3108345	Symbol	node		3108146						
ANR	3108346	Symbol	JobIsNoop		3108146						
ANR	3108347	Symbol	DAG_STRICT_3		3108146						
ANR	3108348	Symbol	condorID		3108146						
ANR	3108349	Symbol	node -> _CondorID . _cluster		3108146						
ANR	3108350	Symbol	"GetEventIDHash ( isNoop , logsource ) -> lookup"		3108146						
ANR	3108351	Symbol	GetEventIDHash		3108146						
ANR	3108352	Symbol	* node		3108146						
ANR	3108353	Symbol	id		3108146						
ANR	3108354	Symbol	condorID . _cluster		3108146						
ANR	3108355	Symbol	node -> _CondorID		3108146						
ANR	3108356	Function	Dag :: SetAllowEvents	1298:0:38645:38791							
ANR	3108357	FunctionDef	Dag :: SetAllowEvents (int allowEvents)		3108356	0					
ANR	3108358	CompoundStatement		1300:0:38688:38791	3108356	0					
ANR	3108359	ExpressionStatement	_checkCondorEvents . SetAllowEvents ( allowEvents )	1301:1:38691:38739	3108356	0	True				
ANR	3108360	CallExpression	_checkCondorEvents . SetAllowEvents ( allowEvents )		3108356	0					
ANR	3108361	Callee	_checkCondorEvents . SetAllowEvents		3108356	0					
ANR	3108362	MemberAccess	_checkCondorEvents . SetAllowEvents		3108356	0					
ANR	3108363	Identifier	_checkCondorEvents		3108356	0					
ANR	3108364	Identifier	SetAllowEvents		3108356	1					
ANR	3108365	ArgumentList	allowEvents		3108356	1					
ANR	3108366	Argument	allowEvents		3108356	0					
ANR	3108367	Identifier	allowEvents		3108356	0					
ANR	3108368	ExpressionStatement	_checkStorkEvents . SetAllowEvents ( allowEvents )	1302:1:38742:38789	3108356	1	True				
ANR	3108369	CallExpression	_checkStorkEvents . SetAllowEvents ( allowEvents )		3108356	0					
ANR	3108370	Callee	_checkStorkEvents . SetAllowEvents		3108356	0					
ANR	3108371	MemberAccess	_checkStorkEvents . SetAllowEvents		3108356	0					
ANR	3108372	Identifier	_checkStorkEvents		3108356	0					
ANR	3108373	Identifier	SetAllowEvents		3108356	1					
ANR	3108374	ArgumentList	allowEvents		3108356	1					
ANR	3108375	Argument	allowEvents		3108356	0					
ANR	3108376	Identifier	allowEvents		3108356	0					
ANR	3108377	ReturnType	void		3108356	1					
ANR	3108378	Identifier	Dag :: SetAllowEvents		3108356	2					
ANR	3108379	ParameterList	int allowEvents		3108356	3					
ANR	3108380	Parameter	int allowEvents	1299:21:38671:38685	3108356	0	True				
ANR	3108381	ParameterType	int		3108356	0					
ANR	3108382	Identifier	allowEvents		3108356	1					
ANR	3108383	CFGEntryNode	ENTRY		3108356		True				
ANR	3108384	CFGExitNode	EXIT		3108356		True				
ANR	3108385	Symbol	_checkCondorEvents		3108356						
ANR	3108386	Symbol	allowEvents		3108356						
ANR	3108387	Symbol	_checkStorkEvents		3108356						
ANR	3108388	Function	Dag :: PrintDagFiles	1306:0:38870:39215							
ANR	3108389	FunctionDef	Dag :: PrintDagFiles (StringList & dagFiles)		3108388	0					
ANR	3108390	CompoundStatement		1308:0:38930:39215	3108388	0					
ANR	3108391	IfStatement	if ( dagFiles . number ( ) > 1 )		3108388	0					
ANR	3108392	Condition	dagFiles . number ( ) > 1	1309:6:38938:38958	3108388	0	True				
ANR	3108393	RelationalExpression	dagFiles . number ( ) > 1		3108388	0		>			
ANR	3108394	CallExpression	dagFiles . number ( )		3108388	0					
ANR	3108395	Callee	dagFiles . number		3108388	0					
ANR	3108396	MemberAccess	dagFiles . number		3108388	0					
ANR	3108397	Identifier	dagFiles		3108388	0					
ANR	3108398	Identifier	number		3108388	1					
ANR	3108399	ArgumentList			3108388	1					
ANR	3108400	PrimaryExpression	1		3108388	1					
ANR	3108401	CompoundStatement		6:2:125:143	3108388	1					
ANR	3108402	ExpressionStatement	"debug_printf ( DEBUG_VERBOSE , ""All DAG files:\\n"" )"	1310:2:38966:39014	3108388	0	True				
ANR	3108403	CallExpression	"debug_printf ( DEBUG_VERBOSE , ""All DAG files:\\n"" )"		3108388	0					
ANR	3108404	Callee	debug_printf		3108388	0					
ANR	3108405	Identifier	debug_printf		3108388	0					
ANR	3108406	ArgumentList	DEBUG_VERBOSE		3108388	1					
ANR	3108407	Argument	DEBUG_VERBOSE		3108388	0					
ANR	3108408	Identifier	DEBUG_VERBOSE		3108388	0					
ANR	3108409	Argument	"""All DAG files:\\n"""		3108388	1					
ANR	3108410	PrimaryExpression	"""All DAG files:\\n"""		3108388	0					
ANR	3108411	ExpressionStatement	dagFiles . rewind ( )	1311:2:39018:39035	3108388	1	True				
ANR	3108412	CallExpression	dagFiles . rewind ( )		3108388	0					
ANR	3108413	Callee	dagFiles . rewind		3108388	0					
ANR	3108414	MemberAccess	dagFiles . rewind		3108388	0					
ANR	3108415	Identifier	dagFiles		3108388	0					
ANR	3108416	Identifier	rewind		3108388	1					
ANR	3108417	ArgumentList			3108388	1					
ANR	3108418	IdentifierDeclStatement	char * dagFile ;	1312:2:39039:39052	3108388	2	True				
ANR	3108419	IdentifierDecl	* dagFile		3108388	0					
ANR	3108420	IdentifierDeclType	char *		3108388	0					
ANR	3108421	Identifier	dagFile		3108388	1					
ANR	3108422	IdentifierDeclStatement	int thisDagNum = 0 ;	1313:2:39056:39074	3108388	3	True				
ANR	3108423	IdentifierDecl	thisDagNum = 0		3108388	0					
ANR	3108424	IdentifierDeclType	int		3108388	0					
ANR	3108425	Identifier	thisDagNum		3108388	1					
ANR	3108426	AssignmentExpression	thisDagNum = 0		3108388	2		=			
ANR	3108427	Identifier	thisDagNum		3108388	0					
ANR	3108428	PrimaryExpression	0		3108388	1					
ANR	3108429	WhileStatement	while ( ( dagFile = dagFiles . next ( ) ) != NULL )		3108388	4					
ANR	3108430	Condition	( dagFile = dagFiles . next ( ) ) != NULL	1314:10:39086:39120	3108388	0	True				
ANR	3108431	EqualityExpression	( dagFile = dagFiles . next ( ) ) != NULL		3108388	0		!=			
ANR	3108432	AssignmentExpression	dagFile = dagFiles . next ( )		3108388	0		=			
ANR	3108433	Identifier	dagFile		3108388	0					
ANR	3108434	CallExpression	dagFiles . next ( )		3108388	1					
ANR	3108435	Callee	dagFiles . next		3108388	0					
ANR	3108436	MemberAccess	dagFiles . next		3108388	0					
ANR	3108437	Identifier	dagFiles		3108388	0					
ANR	3108438	Identifier	next		3108388	1					
ANR	3108439	ArgumentList			3108388	1					
ANR	3108440	Identifier	NULL		3108388	1					
ANR	3108441	CompoundStatement		7:48:193:193	3108388	1					
ANR	3108442	ExpressionStatement	"debug_printf ( DEBUG_VERBOSE , ""  %s (DAG #%d)\\n"" , dagFile , thisDagNum ++ )"	1315:3:39129:39206	3108388	0	True				
ANR	3108443	CallExpression	"debug_printf ( DEBUG_VERBOSE , ""  %s (DAG #%d)\\n"" , dagFile , thisDagNum ++ )"		3108388	0					
ANR	3108444	Callee	debug_printf		3108388	0					
ANR	3108445	Identifier	debug_printf		3108388	0					
ANR	3108446	ArgumentList	DEBUG_VERBOSE		3108388	1					
ANR	3108447	Argument	DEBUG_VERBOSE		3108388	0					
ANR	3108448	Identifier	DEBUG_VERBOSE		3108388	0					
ANR	3108449	Argument	"""  %s (DAG #%d)\\n"""		3108388	1					
ANR	3108450	PrimaryExpression	"""  %s (DAG #%d)\\n"""		3108388	0					
ANR	3108451	Argument	dagFile		3108388	2					
ANR	3108452	Identifier	dagFile		3108388	0					
ANR	3108453	Argument	thisDagNum ++		3108388	3					
ANR	3108454	PostIncDecOperationExpression	thisDagNum ++		3108388	0					
ANR	3108455	Identifier	thisDagNum		3108388	0					
ANR	3108456	IncDec	++		3108388	1					
ANR	3108457	ReturnType	void		3108388	1					
ANR	3108458	Identifier	Dag :: PrintDagFiles		3108388	2					
ANR	3108459	ParameterList	StringList & dagFiles		3108388	3					
ANR	3108460	Parameter	StringList & dagFiles	1307:32:38907:38926	3108388	0	True				
ANR	3108461	ParameterType	StringList &		3108388	0					
ANR	3108462	Identifier	dagFiles		3108388	1					
ANR	3108463	CFGEntryNode	ENTRY		3108388		True				
ANR	3108464	CFGExitNode	EXIT		3108388		True				
ANR	3108465	Symbol	NULL		3108388						
ANR	3108466	Symbol	dagFile		3108388						
ANR	3108467	Symbol	dagFiles . number		3108388						
ANR	3108468	Symbol	thisDagNum		3108388						
ANR	3108469	Symbol	dagFiles		3108388						
ANR	3108470	Symbol	DEBUG_VERBOSE		3108388						
ANR	3108471	Symbol	dagFiles . next		3108388						
ANR	3108472	Function	Dag :: StartNode	1322:0:39294:40496							
ANR	3108473	FunctionDef	"Dag :: StartNode (Job * node , bool isRetry)"		3108472	0					
ANR	3108474	CompoundStatement		1324:0:39341:40496	3108472	0					
ANR	3108475	ExpressionStatement	ASSERT ( node != NULL )	1325:4:39347:39369	3108472	0	True				
ANR	3108476	CallExpression	ASSERT ( node != NULL )		3108472	0					
ANR	3108477	Callee	ASSERT		3108472	0					
ANR	3108478	Identifier	ASSERT		3108472	0					
ANR	3108479	ArgumentList	node != NULL		3108472	1					
ANR	3108480	Argument	node != NULL		3108472	0					
ANR	3108481	EqualityExpression	node != NULL		3108472	0		!=			
ANR	3108482	Identifier	node		3108472	0					
ANR	3108483	Identifier	NULL		3108472	1					
ANR	3108484	IfStatement	if ( ! node -> CanSubmit ( ) )		3108472	1					
ANR	3108485	Condition	! node -> CanSubmit ( )	1326:6:39377:39394	3108472	0	True				
ANR	3108486	UnaryOperationExpression	! node -> CanSubmit ( )		3108472	0					
ANR	3108487	UnaryOperator	!		3108472	0					
ANR	3108488	CallExpression	node -> CanSubmit ( )		3108472	1					
ANR	3108489	Callee	node -> CanSubmit		3108472	0					
ANR	3108490	PtrMemberAccess	node -> CanSubmit		3108472	0					
ANR	3108491	Identifier	node		3108472	0					
ANR	3108492	Identifier	CanSubmit		3108472	1					
ANR	3108493	ArgumentList			3108472	1					
ANR	3108494	CompoundStatement		3:27:56:56	3108472	1					
ANR	3108495	ExpressionStatement	"EXCEPT ( ""Node %s not ready to submit!"" , node -> GetJobName ( ) )"	1327:2:39402:39462	3108472	0	True				
ANR	3108496	CallExpression	"EXCEPT ( ""Node %s not ready to submit!"" , node -> GetJobName ( ) )"		3108472	0					
ANR	3108497	Callee	EXCEPT		3108472	0					
ANR	3108498	Identifier	EXCEPT		3108472	0					
ANR	3108499	ArgumentList	"""Node %s not ready to submit!"""		3108472	1					
ANR	3108500	Argument	"""Node %s not ready to submit!"""		3108472	0					
ANR	3108501	PrimaryExpression	"""Node %s not ready to submit!"""		3108472	0					
ANR	3108502	Argument	node -> GetJobName ( )		3108472	1					
ANR	3108503	CallExpression	node -> GetJobName ( )		3108472	0					
ANR	3108504	Callee	node -> GetJobName		3108472	0					
ANR	3108505	PtrMemberAccess	node -> GetJobName		3108472	0					
ANR	3108506	Identifier	node		3108472	0					
ANR	3108507	Identifier	GetJobName		3108472	1					
ANR	3108508	ArgumentList			3108472	1					
ANR	3108509	ExpressionStatement	ASSERT ( _isSplice == false )	1332:1:39564:39592	3108472	2	True				
ANR	3108510	CallExpression	ASSERT ( _isSplice == false )		3108472	0					
ANR	3108511	Callee	ASSERT		3108472	0					
ANR	3108512	Identifier	ASSERT		3108472	0					
ANR	3108513	ArgumentList	_isSplice == false		3108472	1					
ANR	3108514	Argument	_isSplice == false		3108472	0					
ANR	3108515	EqualityExpression	_isSplice == false		3108472	0		==			
ANR	3108516	Identifier	_isSplice		3108472	0					
ANR	3108517	Identifier	false		3108472	1					
ANR	3108518	IfStatement	if ( node -> _scriptPre && node -> _scriptPre -> _done == FALSE )		3108472	3					
ANR	3108519	Condition	node -> _scriptPre && node -> _scriptPre -> _done == FALSE	1338:8:39794:39845	3108472	0	True				
ANR	3108520	AndExpression	node -> _scriptPre && node -> _scriptPre -> _done == FALSE		3108472	0		&&			
ANR	3108521	PtrMemberAccess	node -> _scriptPre		3108472	0					
ANR	3108522	Identifier	node		3108472	0					
ANR	3108523	Identifier	_scriptPre		3108472	1					
ANR	3108524	EqualityExpression	node -> _scriptPre -> _done == FALSE		3108472	1		==			
ANR	3108525	PtrMemberAccess	node -> _scriptPre -> _done		3108472	0					
ANR	3108526	PtrMemberAccess	node -> _scriptPre		3108472	0					
ANR	3108527	Identifier	node		3108472	0					
ANR	3108528	Identifier	_scriptPre		3108472	1					
ANR	3108529	Identifier	_done		3108472	1					
ANR	3108530	Identifier	FALSE		3108472	1					
ANR	3108531	CompoundStatement		15:63:507:507	3108472	1					
ANR	3108532	ExpressionStatement	node -> _Status = Job :: STATUS_PRERUN	1339:2:39853:39887	3108472	0	True				
ANR	3108533	AssignmentExpression	node -> _Status = Job :: STATUS_PRERUN		3108472	0		=			
ANR	3108534	PtrMemberAccess	node -> _Status		3108472	0					
ANR	3108535	Identifier	node		3108472	0					
ANR	3108536	Identifier	_Status		3108472	1					
ANR	3108537	Identifier	Job :: STATUS_PRERUN		3108472	1					
ANR	3108538	ExpressionStatement	_preRunNodeCount ++	1340:2:39891:39909	3108472	1	True				
ANR	3108539	PostIncDecOperationExpression	_preRunNodeCount ++		3108472	0					
ANR	3108540	Identifier	_preRunNodeCount		3108472	0					
ANR	3108541	IncDec	++		3108472	1					
ANR	3108542	ExpressionStatement	_preScriptQ -> Run ( node -> _scriptPre )	1341:2:39913:39949	3108472	2	True				
ANR	3108543	CallExpression	_preScriptQ -> Run ( node -> _scriptPre )		3108472	0					
ANR	3108544	Callee	_preScriptQ -> Run		3108472	0					
ANR	3108545	PtrMemberAccess	_preScriptQ -> Run		3108472	0					
ANR	3108546	Identifier	_preScriptQ		3108472	0					
ANR	3108547	Identifier	Run		3108472	1					
ANR	3108548	ArgumentList	node -> _scriptPre		3108472	1					
ANR	3108549	Argument	node -> _scriptPre		3108472	0					
ANR	3108550	PtrMemberAccess	node -> _scriptPre		3108472	0					
ANR	3108551	Identifier	node		3108472	0					
ANR	3108552	Identifier	_scriptPre		3108472	1					
ANR	3108553	ReturnStatement	return true ;	1342:2:39953:39964	3108472	3	True				
ANR	3108554	Identifier	true		3108472	0					
ANR	3108555	ExpressionStatement	node -> FixPriority ( * this )	1345:1:40048:40072	3108472	4	True				
ANR	3108556	CallExpression	node -> FixPriority ( * this )		3108472	0					
ANR	3108557	Callee	node -> FixPriority		3108472	0					
ANR	3108558	PtrMemberAccess	node -> FixPriority		3108472	0					
ANR	3108559	Identifier	node		3108472	0					
ANR	3108560	Identifier	FixPriority		3108472	1					
ANR	3108561	ArgumentList	* this		3108472	1					
ANR	3108562	Argument	* this		3108472	0					
ANR	3108563	UnaryOperationExpression	* this		3108472	0					
ANR	3108564	UnaryOperator	*		3108472	0					
ANR	3108565	Identifier	this		3108472	1					
ANR	3108566	IfStatement	if ( isRetry && m_retryNodeFirst )		3108472	5					
ANR	3108567	Condition	isRetry && m_retryNodeFirst	1346:6:40080:40106	3108472	0	True				
ANR	3108568	AndExpression	isRetry && m_retryNodeFirst		3108472	0		&&			
ANR	3108569	Identifier	isRetry		3108472	0					
ANR	3108570	Identifier	m_retryNodeFirst		3108472	1					
ANR	3108571	CompoundStatement		23:36:768:768	3108472	1					
ANR	3108572	ExpressionStatement	"_readyQ -> Prepend ( node , - node -> _nodePriority )"	1347:2:40114:40160	3108472	0	True				
ANR	3108573	CallExpression	"_readyQ -> Prepend ( node , - node -> _nodePriority )"		3108472	0					
ANR	3108574	Callee	_readyQ -> Prepend		3108472	0					
ANR	3108575	PtrMemberAccess	_readyQ -> Prepend		3108472	0					
ANR	3108576	Identifier	_readyQ		3108472	0					
ANR	3108577	Identifier	Prepend		3108472	1					
ANR	3108578	ArgumentList	node		3108472	1					
ANR	3108579	Argument	node		3108472	0					
ANR	3108580	Identifier	node		3108472	0					
ANR	3108581	Argument	- node -> _nodePriority		3108472	1					
ANR	3108582	UnaryOperationExpression	- node -> _nodePriority		3108472	0					
ANR	3108583	UnaryOperator	-		3108472	0					
ANR	3108584	PtrMemberAccess	node -> _nodePriority		3108472	1					
ANR	3108585	Identifier	node		3108472	0					
ANR	3108586	Identifier	_nodePriority		3108472	1					
ANR	3108587	ElseStatement	else		3108472	0					
ANR	3108588	CompoundStatement		25:8:828:828	3108472	0					
ANR	3108589	IfStatement	if ( node -> _hasNodePriority )		3108472	0					
ANR	3108590	Condition	node -> _hasNodePriority	1349:5:40177:40198	3108472	0	True				
ANR	3108591	PtrMemberAccess	node -> _hasNodePriority		3108472	0					
ANR	3108592	Identifier	node		3108472	0					
ANR	3108593	Identifier	_hasNodePriority		3108472	1					
ANR	3108594	CompoundStatement		26:28:858:858	3108472	1					
ANR	3108595	ExpressionStatement	"node -> varNamesFromDag -> Append ( new MyString ( ""priority"" ) )"	1350:3:40205:40260	3108472	0	True				
ANR	3108596	CallExpression	"node -> varNamesFromDag -> Append ( new MyString ( ""priority"" ) )"		3108472	0					
ANR	3108597	Callee	node -> varNamesFromDag -> Append		3108472	0					
ANR	3108598	PtrMemberAccess	node -> varNamesFromDag -> Append		3108472	0					
ANR	3108599	PtrMemberAccess	node -> varNamesFromDag		3108472	0					
ANR	3108600	Identifier	node		3108472	0					
ANR	3108601	Identifier	varNamesFromDag		3108472	1					
ANR	3108602	Identifier	Append		3108472	1					
ANR	3108603	ArgumentList	"""priority"""		3108472	1					
ANR	3108604	Argument	"""priority"""		3108472	0					
ANR	3108605	PrimaryExpression	"""priority"""		3108472	0					
ANR	3108606	ExpressionStatement	node -> varValsFromDag -> Append ( new MyString ( node -> _nodePriority ) )	1351:3:40265:40328	3108472	1	True				
ANR	3108607	CallExpression	node -> varValsFromDag -> Append ( new MyString ( node -> _nodePriority ) )		3108472	0					
ANR	3108608	Callee	node -> varValsFromDag -> Append		3108472	0					
ANR	3108609	PtrMemberAccess	node -> varValsFromDag -> Append		3108472	0					
ANR	3108610	PtrMemberAccess	node -> varValsFromDag		3108472	0					
ANR	3108611	Identifier	node		3108472	0					
ANR	3108612	Identifier	varValsFromDag		3108472	1					
ANR	3108613	Identifier	Append		3108472	1					
ANR	3108614	ArgumentList	node -> _nodePriority		3108472	1					
ANR	3108615	Argument	node -> _nodePriority		3108472	0					
ANR	3108616	PtrMemberAccess	node -> _nodePriority		3108472	0					
ANR	3108617	Identifier	node		3108472	0					
ANR	3108618	Identifier	_nodePriority		3108472	1					
ANR	3108619	IfStatement	if ( _submitDepthFirst )		3108472	1					
ANR	3108620	Condition	_submitDepthFirst	1353:7:40341:40357	3108472	0	True				
ANR	3108621	Identifier	_submitDepthFirst		3108472	0					
ANR	3108622	CompoundStatement		30:27:1019:1019	3108472	1					
ANR	3108623	ExpressionStatement	"_readyQ -> Prepend ( node , - node -> _nodePriority )"	1354:3:40366:40412	3108472	0	True				
ANR	3108624	CallExpression	"_readyQ -> Prepend ( node , - node -> _nodePriority )"		3108472	0					
ANR	3108625	Callee	_readyQ -> Prepend		3108472	0					
ANR	3108626	PtrMemberAccess	_readyQ -> Prepend		3108472	0					
ANR	3108627	Identifier	_readyQ		3108472	0					
ANR	3108628	Identifier	Prepend		3108472	1					
ANR	3108629	ArgumentList	node		3108472	1					
ANR	3108630	Argument	node		3108472	0					
ANR	3108631	Identifier	node		3108472	0					
ANR	3108632	Argument	- node -> _nodePriority		3108472	1					
ANR	3108633	UnaryOperationExpression	- node -> _nodePriority		3108472	0					
ANR	3108634	UnaryOperator	-		3108472	0					
ANR	3108635	PtrMemberAccess	node -> _nodePriority		3108472	1					
ANR	3108636	Identifier	node		3108472	0					
ANR	3108637	Identifier	_nodePriority		3108472	1					
ANR	3108638	ElseStatement	else		3108472	0					
ANR	3108639	CompoundStatement		32:9:1081:1081	3108472	0					
ANR	3108640	ExpressionStatement	"_readyQ -> Append ( node , - node -> _nodePriority )"	1356:3:40428:40473	3108472	0	True				
ANR	3108641	CallExpression	"_readyQ -> Append ( node , - node -> _nodePriority )"		3108472	0					
ANR	3108642	Callee	_readyQ -> Append		3108472	0					
ANR	3108643	PtrMemberAccess	_readyQ -> Append		3108472	0					
ANR	3108644	Identifier	_readyQ		3108472	0					
ANR	3108645	Identifier	Append		3108472	1					
ANR	3108646	ArgumentList	node		3108472	1					
ANR	3108647	Argument	node		3108472	0					
ANR	3108648	Identifier	node		3108472	0					
ANR	3108649	Argument	- node -> _nodePriority		3108472	1					
ANR	3108650	UnaryOperationExpression	- node -> _nodePriority		3108472	0					
ANR	3108651	UnaryOperator	-		3108472	0					
ANR	3108652	PtrMemberAccess	node -> _nodePriority		3108472	1					
ANR	3108653	Identifier	node		3108472	0					
ANR	3108654	Identifier	_nodePriority		3108472	1					
ANR	3108655	ReturnStatement	return TRUE ;	1359:1:40483:40494	3108472	6	True				
ANR	3108656	Identifier	TRUE		3108472	0					
ANR	3108657	ReturnType	bool		3108472	1					
ANR	3108658	Identifier	Dag :: StartNode		3108472	2					
ANR	3108659	ParameterList	"Job * node , bool isRetry"		3108472	3					
ANR	3108660	Parameter	Job * node	1323:16:39315:39323	3108472	0	True				
ANR	3108661	ParameterType	Job *		3108472	0					
ANR	3108662	Identifier	node		3108472	1					
ANR	3108663	Parameter	bool isRetry	1323:27:39326:39337	3108472	1	True				
ANR	3108664	ParameterType	bool		3108472	0					
ANR	3108665	Identifier	isRetry		3108472	1					
ANR	3108666	CFGEntryNode	ENTRY		3108472		True				
ANR	3108667	CFGExitNode	EXIT		3108472		True				
ANR	3108668	Symbol	isRetry		3108472						
ANR	3108669	Symbol	Job :: STATUS_PRERUN		3108472						
ANR	3108670	Symbol	m_retryNodeFirst		3108472						
ANR	3108671	Symbol	_isSplice		3108472						
ANR	3108672	Symbol	_readyQ		3108472						
ANR	3108673	Symbol	* node		3108472						
ANR	3108674	Symbol	node -> _scriptPre -> _done		3108472						
ANR	3108675	Symbol	node -> CanSubmit		3108472						
ANR	3108676	Symbol	_preRunNodeCount		3108472						
ANR	3108677	Symbol	NULL		3108472						
ANR	3108678	Symbol	node -> GetJobName		3108472						
ANR	3108679	Symbol	_submitDepthFirst		3108472						
ANR	3108680	Symbol	false		3108472						
ANR	3108681	Symbol	this		3108472						
ANR	3108682	Symbol	TRUE		3108472						
ANR	3108683	Symbol	node -> _scriptPre		3108472						
ANR	3108684	Symbol	* this		3108472						
ANR	3108685	Symbol	node		3108472						
ANR	3108686	Symbol	node -> _Status		3108472						
ANR	3108687	Symbol	* * node		3108472						
ANR	3108688	Symbol	node -> varNamesFromDag		3108472						
ANR	3108689	Symbol	node -> _hasNodePriority		3108472						
ANR	3108690	Symbol	true		3108472						
ANR	3108691	Symbol	FALSE		3108472						
ANR	3108692	Symbol	node -> _nodePriority		3108472						
ANR	3108693	Symbol	_preScriptQ		3108472						
ANR	3108694	Symbol	* node -> _scriptPre		3108472						
ANR	3108695	Symbol	node -> varValsFromDag		3108472						
ANR	3108696	Function	Dag :: SubmitReadyJobs	1364:0:40611:45180							
ANR	3108697	FunctionDef	Dag :: SubmitReadyJobs (const Dagman & dm)		3108696	0					
ANR	3108698	CompoundStatement		1366:0:40654:45180	3108696	0					
ANR	3108699	ExpressionStatement	"debug_printf ( DEBUG_DEBUG_1 , ""Dag::SubmitReadyJobs()\\n"" )"	1367:1:40657:40714	3108696	0	True				
ANR	3108700	CallExpression	"debug_printf ( DEBUG_DEBUG_1 , ""Dag::SubmitReadyJobs()\\n"" )"		3108696	0					
ANR	3108701	Callee	debug_printf		3108696	0					
ANR	3108702	Identifier	debug_printf		3108696	0					
ANR	3108703	ArgumentList	DEBUG_DEBUG_1		3108696	1					
ANR	3108704	Argument	DEBUG_DEBUG_1		3108696	0					
ANR	3108705	Identifier	DEBUG_DEBUG_1		3108696	0					
ANR	3108706	Argument	"""Dag::SubmitReadyJobs()\\n"""		3108696	1					
ANR	3108707	PrimaryExpression	"""Dag::SubmitReadyJobs()\\n"""		3108696	0					
ANR	3108708	IdentifierDeclStatement	PrioritySimpleList < Job * > deferredJobs ;	1370:1:40760:40797	3108696	1	True				
ANR	3108709	IdentifierDecl	deferredJobs		3108696	0					
ANR	3108710	IdentifierDeclType	PrioritySimpleList < Job * >		3108696	0					
ANR	3108711	Identifier	deferredJobs		3108696	1					
ANR	3108712	IdentifierDeclStatement	int numSubmitsThisCycle = 0 ;	1372:1:40801:40828	3108696	2	True				
ANR	3108713	IdentifierDecl	numSubmitsThisCycle = 0		3108696	0					
ANR	3108714	IdentifierDeclType	int		3108696	0					
ANR	3108715	Identifier	numSubmitsThisCycle		3108696	1					
ANR	3108716	AssignmentExpression	numSubmitsThisCycle = 0		3108696	2		=			
ANR	3108717	Identifier	numSubmitsThisCycle		3108696	0					
ANR	3108718	PrimaryExpression	0		3108696	1					
ANR	3108719	IfStatement	if ( _nextSubmitTime && time ( NULL ) < _nextSubmitTime )		3108696	3					
ANR	3108720	Condition	_nextSubmitTime && time ( NULL ) < _nextSubmitTime	1376:6:40947:40993	3108696	0	True				
ANR	3108721	AndExpression	_nextSubmitTime && time ( NULL ) < _nextSubmitTime		3108696	0		&&			
ANR	3108722	Identifier	_nextSubmitTime		3108696	0					
ANR	3108723	RelationalExpression	time ( NULL ) < _nextSubmitTime		3108696	1		<			
ANR	3108724	CallExpression	time ( NULL )		3108696	0					
ANR	3108725	Callee	time		3108696	0					
ANR	3108726	Identifier	time		3108696	0					
ANR	3108727	ArgumentList	NULL		3108696	1					
ANR	3108728	Argument	NULL		3108696	0					
ANR	3108729	Identifier	NULL		3108696	0					
ANR	3108730	Identifier	_nextSubmitTime		3108696	1					
ANR	3108731	CompoundStatement		11:55:341:341	3108696	1					
ANR	3108732	ExpressionStatement	sleep ( 1 )	1377:2:41000:41008	3108696	0	True				
ANR	3108733	CallExpression	sleep ( 1 )		3108696	0					
ANR	3108734	Callee	sleep		3108696	0					
ANR	3108735	Identifier	sleep		3108696	0					
ANR	3108736	ArgumentList	1		3108696	1					
ANR	3108737	Argument	1		3108696	0					
ANR	3108738	PrimaryExpression	1		3108696	0					
ANR	3108739	ReturnStatement	return numSubmitsThisCycle ;	1378:8:41018:41044	3108696	1	True				
ANR	3108740	Identifier	numSubmitsThisCycle		3108696	0					
ANR	3108741	IdentifierDeclStatement	bool didLogSleep = false ;	1382:1:41052:41076	3108696	4	True				
ANR	3108742	IdentifierDecl	didLogSleep = false		3108696	0					
ANR	3108743	IdentifierDeclType	bool		3108696	0					
ANR	3108744	Identifier	didLogSleep		3108696	1					
ANR	3108745	AssignmentExpression	didLogSleep = false		3108696	2		=			
ANR	3108746	Identifier	false		3108696	0					
ANR	3108747	Identifier	false		3108696	1					
ANR	3108748	WhileStatement	while ( numSubmitsThisCycle < dm . max_submits_per_interval )		3108696	5					
ANR	3108749	Condition	numSubmitsThisCycle < dm . max_submits_per_interval	1383:8:41086:41134	3108696	0	True				
ANR	3108750	RelationalExpression	numSubmitsThisCycle < dm . max_submits_per_interval		3108696	0		<			
ANR	3108751	Identifier	numSubmitsThisCycle		3108696	0					
ANR	3108752	MemberAccess	dm . max_submits_per_interval		3108696	1					
ANR	3108753	Identifier	dm		3108696	0					
ANR	3108754	Identifier	max_submits_per_interval		3108696	1					
ANR	3108755	CompoundStatement		63:2:1934:2004	3108696	1					
ANR	3108756	IfStatement	if ( _readyQ -> IsEmpty ( ) )		3108696	0					
ANR	3108757	Condition	_readyQ -> IsEmpty ( )	1388:9:41215:41232	3108696	0	True				
ANR	3108758	CallExpression	_readyQ -> IsEmpty ( )		3108696	0					
ANR	3108759	Callee	_readyQ -> IsEmpty		3108696	0					
ANR	3108760	PtrMemberAccess	_readyQ -> IsEmpty		3108696	0					
ANR	3108761	Identifier	_readyQ		3108696	0					
ANR	3108762	Identifier	IsEmpty		3108696	1					
ANR	3108763	ArgumentList			3108696	1					
ANR	3108764	CompoundStatement		23:30:581:581	3108696	1					
ANR	3108765	BreakStatement	break ;	1389:3:41241:41246	3108696	0	True				
ANR	3108766	IfStatement	if ( _maxJobsSubmitted && ( _numJobsSubmitted >= _maxJobsSubmitted ) )		3108696	1					
ANR	3108767	Condition	_maxJobsSubmitted && ( _numJobsSubmitted >= _maxJobsSubmitted )	1393:9:41328:41388	3108696	0	True				
ANR	3108768	AndExpression	_maxJobsSubmitted && ( _numJobsSubmitted >= _maxJobsSubmitted )		3108696	0		&&			
ANR	3108769	Identifier	_maxJobsSubmitted		3108696	0					
ANR	3108770	RelationalExpression	_numJobsSubmitted >= _maxJobsSubmitted		3108696	1		>=			
ANR	3108771	Identifier	_numJobsSubmitted		3108696	0					
ANR	3108772	Identifier	_maxJobsSubmitted		3108696	1					
ANR	3108773	CompoundStatement		28:73:737:737	3108696	1					
ANR	3108774	Statement	debug_printf	1394:9:41403:41414	3108696	0	True				
ANR	3108775	Statement	(	1394:21:41415:41415	3108696	1	True				
ANR	3108776	Statement	DEBUG_DEBUG_1	1394:23:41417:41429	3108696	2	True				
ANR	3108777	Statement	","	1394:36:41430:41430	3108696	3	True				
ANR	3108778	Statement	"""Max jobs (%d) already running; """	1395:23:41455:41487	3108696	4	True				
ANR	3108779	Statement	"""deferring submission of %d ready job%s.\\n"""	1396:8:41497:41539	3108696	5	True				
ANR	3108780	Statement	","	1396:51:41540:41540	3108696	6	True				
ANR	3108781	Statement	_maxJobsSubmitted	1397:23:41565:41581	3108696	7	True				
ANR	3108782	Statement	","	1397:40:41582:41582	3108696	8	True				
ANR	3108783	Statement	_readyQ	1397:42:41584:41590	3108696	9	True				
ANR	3108784	Statement	->	1397:49:41591:41592	3108696	10	True				
ANR	3108785	Statement	Number	1397:51:41593:41598	3108696	11	True				
ANR	3108786	Statement	(	1397:57:41599:41599	3108696	12	True				
ANR	3108787	Statement	)	1397:58:41600:41600	3108696	13	True				
ANR	3108788	Statement	","	1397:59:41601:41601	3108696	14	True				
ANR	3108789	Statement	_readyQ	1398:8:41611:41617	3108696	15	True				
ANR	3108790	Statement	->	1398:15:41618:41619	3108696	16	True				
ANR	3108791	Statement	Number	1398:17:41620:41625	3108696	17	True				
ANR	3108792	Statement	(	1398:23:41626:41626	3108696	18	True				
ANR	3108793	Statement	)	1398:24:41627:41627	3108696	19	True				
ANR	3108794	Statement	==	1398:26:41629:41630	3108696	20	True				
ANR	3108795	Statement	1	1398:29:41632:41632	3108696	21	True				
ANR	3108796	Statement	?	1398:31:41634:41634	3108696	22	True				
ANR	3108797	Statement	""""""	1398:33:41636:41637	3108696	23	True				
ANR	3108798	Statement	:	1398:36:41639:41639	3108696	24	True				
ANR	3108799	Statement	"""s"""	1398:38:41641:41643	3108696	25	True				
ANR	3108800	Statement	)	1398:42:41645:41645	3108696	26	True				
ANR	3108801	ExpressionStatement		1398:43:41646:41646	3108696	27	True				
ANR	3108802	ExpressionStatement	_maxJobsDeferredCount += _readyQ -> Number ( )	1399:3:41651:41693	3108696	28	True				
ANR	3108803	AssignmentExpression	_maxJobsDeferredCount += _readyQ -> Number ( )		3108696	0		+=			
ANR	3108804	Identifier	_maxJobsDeferredCount		3108696	0					
ANR	3108805	CallExpression	_readyQ -> Number ( )		3108696	1					
ANR	3108806	Callee	_readyQ -> Number		3108696	0					
ANR	3108807	PtrMemberAccess	_readyQ -> Number		3108696	0					
ANR	3108808	Identifier	_readyQ		3108696	0					
ANR	3108809	Identifier	Number		3108696	1					
ANR	3108810	ArgumentList			3108696	1					
ANR	3108811	BreakStatement	break ;	1400:3:41698:41703	3108696	29	True				
ANR	3108812	IfStatement	if ( _maxIdleJobProcs && ( _numIdleJobProcs >= _maxIdleJobProcs ) )		3108696	2					
ANR	3108813	Condition	_maxIdleJobProcs && ( _numIdleJobProcs >= _maxIdleJobProcs )	1402:7:41746:41803	3108696	0	True				
ANR	3108814	AndExpression	_maxIdleJobProcs && ( _numIdleJobProcs >= _maxIdleJobProcs )		3108696	0		&&			
ANR	3108815	Identifier	_maxIdleJobProcs		3108696	0					
ANR	3108816	RelationalExpression	_numIdleJobProcs >= _maxIdleJobProcs		3108696	1		>=			
ANR	3108817	Identifier	_numIdleJobProcs		3108696	0					
ANR	3108818	Identifier	_maxIdleJobProcs		3108696	1					
ANR	3108819	CompoundStatement		37:68:1152:1152	3108696	1					
ANR	3108820	Statement	debug_printf	1403:9:41818:41829	3108696	0	True				
ANR	3108821	Statement	(	1403:21:41830:41830	3108696	1	True				
ANR	3108822	Statement	DEBUG_DEBUG_1	1403:23:41832:41844	3108696	2	True				
ANR	3108823	Statement	","	1403:36:41845:41845	3108696	3	True				
ANR	3108824	Statement	"""Hit max number of idle DAG nodes (%d); """	1404:8:41855:41895	3108696	4	True				
ANR	3108825	Statement	"""deferring submission of %d ready job%s.\\n"""	1405:8:41905:41947	3108696	5	True				
ANR	3108826	Statement	","	1405:51:41948:41948	3108696	6	True				
ANR	3108827	Statement	_maxIdleJobProcs	1406:8:41958:41973	3108696	7	True				
ANR	3108828	Statement	","	1406:24:41974:41974	3108696	8	True				
ANR	3108829	Statement	_readyQ	1406:26:41976:41982	3108696	9	True				
ANR	3108830	Statement	->	1406:33:41983:41984	3108696	10	True				
ANR	3108831	Statement	Number	1406:35:41985:41990	3108696	11	True				
ANR	3108832	Statement	(	1406:41:41991:41991	3108696	12	True				
ANR	3108833	Statement	)	1406:42:41992:41992	3108696	13	True				
ANR	3108834	Statement	","	1406:43:41993:41993	3108696	14	True				
ANR	3108835	Statement	_readyQ	1407:8:42003:42009	3108696	15	True				
ANR	3108836	Statement	->	1407:15:42010:42011	3108696	16	True				
ANR	3108837	Statement	Number	1407:17:42012:42017	3108696	17	True				
ANR	3108838	Statement	(	1407:23:42018:42018	3108696	18	True				
ANR	3108839	Statement	)	1407:24:42019:42019	3108696	19	True				
ANR	3108840	Statement	==	1407:26:42021:42022	3108696	20	True				
ANR	3108841	Statement	1	1407:29:42024:42024	3108696	21	True				
ANR	3108842	Statement	?	1407:31:42026:42026	3108696	22	True				
ANR	3108843	Statement	""""""	1407:33:42028:42029	3108696	23	True				
ANR	3108844	Statement	:	1407:36:42031:42031	3108696	24	True				
ANR	3108845	Statement	"""s"""	1407:38:42033:42035	3108696	25	True				
ANR	3108846	Statement	)	1407:42:42037:42037	3108696	26	True				
ANR	3108847	ExpressionStatement		1407:43:42038:42038	3108696	27	True				
ANR	3108848	ExpressionStatement	_maxIdleDeferredCount += _readyQ -> Number ( )	1408:3:42043:42085	3108696	28	True				
ANR	3108849	AssignmentExpression	_maxIdleDeferredCount += _readyQ -> Number ( )		3108696	0		+=			
ANR	3108850	Identifier	_maxIdleDeferredCount		3108696	0					
ANR	3108851	CallExpression	_readyQ -> Number ( )		3108696	1					
ANR	3108852	Callee	_readyQ -> Number		3108696	0					
ANR	3108853	PtrMemberAccess	_readyQ -> Number		3108696	0					
ANR	3108854	Identifier	_readyQ		3108696	0					
ANR	3108855	Identifier	Number		3108696	1					
ANR	3108856	ArgumentList			3108696	1					
ANR	3108857	BreakStatement	break ;	1409:3:42090:42095	3108696	29	True				
ANR	3108858	IdentifierDeclStatement	Job * job ;	1413:2:42180:42188	3108696	3	True				
ANR	3108859	IdentifierDecl	* job		3108696	0					
ANR	3108860	IdentifierDeclType	Job *		3108696	0					
ANR	3108861	Identifier	job		3108696	1					
ANR	3108862	ExpressionStatement	_readyQ -> Rewind ( )	1414:2:42192:42209	3108696	4	True				
ANR	3108863	CallExpression	_readyQ -> Rewind ( )		3108696	0					
ANR	3108864	Callee	_readyQ -> Rewind		3108696	0					
ANR	3108865	PtrMemberAccess	_readyQ -> Rewind		3108696	0					
ANR	3108866	Identifier	_readyQ		3108696	0					
ANR	3108867	Identifier	Rewind		3108696	1					
ANR	3108868	ArgumentList			3108696	1					
ANR	3108869	ExpressionStatement	_readyQ -> Next ( job )	1415:2:42213:42233	3108696	5	True				
ANR	3108870	CallExpression	_readyQ -> Next ( job )		3108696	0					
ANR	3108871	Callee	_readyQ -> Next		3108696	0					
ANR	3108872	PtrMemberAccess	_readyQ -> Next		3108696	0					
ANR	3108873	Identifier	_readyQ		3108696	0					
ANR	3108874	Identifier	Next		3108696	1					
ANR	3108875	ArgumentList	job		3108696	1					
ANR	3108876	Argument	job		3108696	0					
ANR	3108877	Identifier	job		3108696	0					
ANR	3108878	ExpressionStatement	_readyQ -> DeleteCurrent ( )	1416:2:42237:42261	3108696	6	True				
ANR	3108879	CallExpression	_readyQ -> DeleteCurrent ( )		3108696	0					
ANR	3108880	Callee	_readyQ -> DeleteCurrent		3108696	0					
ANR	3108881	PtrMemberAccess	_readyQ -> DeleteCurrent		3108696	0					
ANR	3108882	Identifier	_readyQ		3108696	0					
ANR	3108883	Identifier	DeleteCurrent		3108696	1					
ANR	3108884	ArgumentList			3108696	1					
ANR	3108885	ExpressionStatement	ASSERT ( job != NULL )	1417:2:42265:42286	3108696	7	True				
ANR	3108886	CallExpression	ASSERT ( job != NULL )		3108696	0					
ANR	3108887	Callee	ASSERT		3108696	0					
ANR	3108888	Identifier	ASSERT		3108696	0					
ANR	3108889	ArgumentList	job != NULL		3108696	1					
ANR	3108890	Argument	job != NULL		3108696	0					
ANR	3108891	EqualityExpression	job != NULL		3108696	0		!=			
ANR	3108892	Identifier	job		3108696	0					
ANR	3108893	Identifier	NULL		3108696	1					
ANR	3108894	ExpressionStatement	"debug_printf ( DEBUG_DEBUG_1 , ""Got node %s from the ready queue\\n"" , job -> GetJobName ( ) )"	1419:2:42291:42384	3108696	8	True				
ANR	3108895	CallExpression	"debug_printf ( DEBUG_DEBUG_1 , ""Got node %s from the ready queue\\n"" , job -> GetJobName ( ) )"		3108696	0					
ANR	3108896	Callee	debug_printf		3108696	0					
ANR	3108897	Identifier	debug_printf		3108696	0					
ANR	3108898	ArgumentList	DEBUG_DEBUG_1		3108696	1					
ANR	3108899	Argument	DEBUG_DEBUG_1		3108696	0					
ANR	3108900	Identifier	DEBUG_DEBUG_1		3108696	0					
ANR	3108901	Argument	"""Got node %s from the ready queue\\n"""		3108696	1					
ANR	3108902	PrimaryExpression	"""Got node %s from the ready queue\\n"""		3108696	0					
ANR	3108903	Argument	job -> GetJobName ( )		3108696	2					
ANR	3108904	CallExpression	job -> GetJobName ( )		3108696	0					
ANR	3108905	Callee	job -> GetJobName		3108696	0					
ANR	3108906	PtrMemberAccess	job -> GetJobName		3108696	0					
ANR	3108907	Identifier	job		3108696	0					
ANR	3108908	Identifier	GetJobName		3108696	1					
ANR	3108909	ArgumentList			3108696	1					
ANR	3108910	IfStatement	if ( job -> GetStatus ( ) != Job :: STATUS_READY )		3108696	9					
ANR	3108911	Condition	job -> GetStatus ( ) != Job :: STATUS_READY	1422:7:42394:42430	3108696	0	True				
ANR	3108912	EqualityExpression	job -> GetStatus ( ) != Job :: STATUS_READY		3108696	0		!=			
ANR	3108913	CallExpression	job -> GetStatus ( )		3108696	0					
ANR	3108914	Callee	job -> GetStatus		3108696	0					
ANR	3108915	PtrMemberAccess	job -> GetStatus		3108696	0					
ANR	3108916	Identifier	job		3108696	0					
ANR	3108917	Identifier	GetStatus		3108696	1					
ANR	3108918	ArgumentList			3108696	1					
ANR	3108919	Identifier	Job :: STATUS_READY		3108696	1					
ANR	3108920	CompoundStatement		57:47:1779:1779	3108696	1					
ANR	3108921	ExpressionStatement	"EXCEPT ( ""Job %s status is %s, not STATUS_READY"" , job -> GetJobName ( ) , job -> GetStatusName ( ) )"	1423:3:42439:42535	3108696	0	True				
ANR	3108922	CallExpression	"EXCEPT ( ""Job %s status is %s, not STATUS_READY"" , job -> GetJobName ( ) , job -> GetStatusName ( ) )"		3108696	0					
ANR	3108923	Callee	EXCEPT		3108696	0					
ANR	3108924	Identifier	EXCEPT		3108696	0					
ANR	3108925	ArgumentList	"""Job %s status is %s, not STATUS_READY"""		3108696	1					
ANR	3108926	Argument	"""Job %s status is %s, not STATUS_READY"""		3108696	0					
ANR	3108927	PrimaryExpression	"""Job %s status is %s, not STATUS_READY"""		3108696	0					
ANR	3108928	Argument	job -> GetJobName ( )		3108696	1					
ANR	3108929	CallExpression	job -> GetJobName ( )		3108696	0					
ANR	3108930	Callee	job -> GetJobName		3108696	0					
ANR	3108931	PtrMemberAccess	job -> GetJobName		3108696	0					
ANR	3108932	Identifier	job		3108696	0					
ANR	3108933	Identifier	GetJobName		3108696	1					
ANR	3108934	ArgumentList			3108696	1					
ANR	3108935	Argument	job -> GetStatusName ( )		3108696	2					
ANR	3108936	CallExpression	job -> GetStatusName ( )		3108696	0					
ANR	3108937	Callee	job -> GetStatusName		3108696	0					
ANR	3108938	PtrMemberAccess	job -> GetStatusName		3108696	0					
ANR	3108939	Identifier	job		3108696	0					
ANR	3108940	Identifier	GetStatusName		3108696	1					
ANR	3108941	ArgumentList			3108696	1					
ANR	3108942	IdentifierDeclStatement	ThrottleByCategory :: ThrottleInfo * catThrottle = job -> GetThrottleInfo ( ) ;	1428:2:42589:42659	3108696	10	True				
ANR	3108943	IdentifierDecl	* catThrottle = job -> GetThrottleInfo ( )		3108696	0					
ANR	3108944	IdentifierDeclType	ThrottleByCategory :: ThrottleInfo *		3108696	0					
ANR	3108945	Identifier	catThrottle		3108696	1					
ANR	3108946	AssignmentExpression	* catThrottle = job -> GetThrottleInfo ( )		3108696	2		=			
ANR	3108947	Identifier	catThrottle		3108696	0					
ANR	3108948	CallExpression	job -> GetThrottleInfo ( )		3108696	1					
ANR	3108949	Callee	job -> GetThrottleInfo		3108696	0					
ANR	3108950	PtrMemberAccess	job -> GetThrottleInfo		3108696	0					
ANR	3108951	Identifier	job		3108696	0					
ANR	3108952	Identifier	GetThrottleInfo		3108696	1					
ANR	3108953	ArgumentList			3108696	1					
ANR	3108954	IfStatement	if ( catThrottle && catThrottle -> isSet ( ) && catThrottle -> _currentJobs >= catThrottle -> _maxJobs )		3108696	11					
ANR	3108955	Condition	catThrottle && catThrottle -> isSet ( ) && catThrottle -> _currentJobs >= catThrottle -> _maxJobs	1429:7:42668:42766	3108696	0	True				
ANR	3108956	AndExpression	catThrottle && catThrottle -> isSet ( ) && catThrottle -> _currentJobs >= catThrottle -> _maxJobs		3108696	0		&&			
ANR	3108957	Identifier	catThrottle		3108696	0					
ANR	3108958	AndExpression	catThrottle -> isSet ( ) && catThrottle -> _currentJobs >= catThrottle -> _maxJobs		3108696	1		&&			
ANR	3108959	CallExpression	catThrottle -> isSet ( )		3108696	0					
ANR	3108960	Callee	catThrottle -> isSet		3108696	0					
ANR	3108961	PtrMemberAccess	catThrottle -> isSet		3108696	0					
ANR	3108962	Identifier	catThrottle		3108696	0					
ANR	3108963	Identifier	isSet		3108696	1					
ANR	3108964	ArgumentList			3108696	1					
ANR	3108965	RelationalExpression	catThrottle -> _currentJobs >= catThrottle -> _maxJobs		3108696	1		>=			
ANR	3108966	PtrMemberAccess	catThrottle -> _currentJobs		3108696	0					
ANR	3108967	Identifier	catThrottle		3108696	0					
ANR	3108968	Identifier	_currentJobs		3108696	1					
ANR	3108969	PtrMemberAccess	catThrottle -> _maxJobs		3108696	1					
ANR	3108970	Identifier	catThrottle		3108696	0					
ANR	3108971	Identifier	_maxJobs		3108696	1					
ANR	3108972	CompoundStatement		66:58:2115:2115	3108696	1					
ANR	3108973	ExpressionStatement	"debug_printf ( DEBUG_DEBUG_1 , ""Node %s deferred by category throttle (%s, %d)\\n"" , job -> GetJobName ( ) , catThrottle -> _category -> Value ( ) , catThrottle -> _maxJobs )"	1432:3:42775:42949	3108696	0	True				
ANR	3108974	CallExpression	"debug_printf ( DEBUG_DEBUG_1 , ""Node %s deferred by category throttle (%s, %d)\\n"" , job -> GetJobName ( ) , catThrottle -> _category -> Value ( ) , catThrottle -> _maxJobs )"		3108696	0					
ANR	3108975	Callee	debug_printf		3108696	0					
ANR	3108976	Identifier	debug_printf		3108696	0					
ANR	3108977	ArgumentList	DEBUG_DEBUG_1		3108696	1					
ANR	3108978	Argument	DEBUG_DEBUG_1		3108696	0					
ANR	3108979	Identifier	DEBUG_DEBUG_1		3108696	0					
ANR	3108980	Argument	"""Node %s deferred by category throttle (%s, %d)\\n"""		3108696	1					
ANR	3108981	PrimaryExpression	"""Node %s deferred by category throttle (%s, %d)\\n"""		3108696	0					
ANR	3108982	Argument	job -> GetJobName ( )		3108696	2					
ANR	3108983	CallExpression	job -> GetJobName ( )		3108696	0					
ANR	3108984	Callee	job -> GetJobName		3108696	0					
ANR	3108985	PtrMemberAccess	job -> GetJobName		3108696	0					
ANR	3108986	Identifier	job		3108696	0					
ANR	3108987	Identifier	GetJobName		3108696	1					
ANR	3108988	ArgumentList			3108696	1					
ANR	3108989	Argument	catThrottle -> _category -> Value ( )		3108696	3					
ANR	3108990	CallExpression	catThrottle -> _category -> Value ( )		3108696	0					
ANR	3108991	Callee	catThrottle -> _category -> Value		3108696	0					
ANR	3108992	PtrMemberAccess	catThrottle -> _category -> Value		3108696	0					
ANR	3108993	PtrMemberAccess	catThrottle -> _category		3108696	0					
ANR	3108994	Identifier	catThrottle		3108696	0					
ANR	3108995	Identifier	_category		3108696	1					
ANR	3108996	Identifier	Value		3108696	1					
ANR	3108997	ArgumentList			3108696	1					
ANR	3108998	Argument	catThrottle -> _maxJobs		3108696	4					
ANR	3108999	PtrMemberAccess	catThrottle -> _maxJobs		3108696	0					
ANR	3109000	Identifier	catThrottle		3108696	0					
ANR	3109001	Identifier	_maxJobs		3108696	1					
ANR	3109002	ExpressionStatement	"deferredJobs . Prepend ( job , - job -> _nodePriority )"	1436:3:42954:43002	3108696	1	True				
ANR	3109003	CallExpression	"deferredJobs . Prepend ( job , - job -> _nodePriority )"		3108696	0					
ANR	3109004	Callee	deferredJobs . Prepend		3108696	0					
ANR	3109005	MemberAccess	deferredJobs . Prepend		3108696	0					
ANR	3109006	Identifier	deferredJobs		3108696	0					
ANR	3109007	Identifier	Prepend		3108696	1					
ANR	3109008	ArgumentList	job		3108696	1					
ANR	3109009	Argument	job		3108696	0					
ANR	3109010	Identifier	job		3108696	0					
ANR	3109011	Argument	- job -> _nodePriority		3108696	1					
ANR	3109012	UnaryOperationExpression	- job -> _nodePriority		3108696	0					
ANR	3109013	UnaryOperator	-		3108696	0					
ANR	3109014	PtrMemberAccess	job -> _nodePriority		3108696	1					
ANR	3109015	Identifier	job		3108696	0					
ANR	3109016	Identifier	_nodePriority		3108696	1					
ANR	3109017	ExpressionStatement	_catThrottleDeferredCount ++	1437:3:43007:43034	3108696	2	True				
ANR	3109018	PostIncDecOperationExpression	_catThrottleDeferredCount ++		3108696	0					
ANR	3109019	Identifier	_catThrottleDeferredCount		3108696	0					
ANR	3109020	IncDec	++		3108696	1					
ANR	3109021	ElseStatement	else		3108696	0					
ANR	3109022	CompoundStatement		101:3:3583:3649	3108696	0					
ANR	3109023	IfStatement	if ( dm . submit_delay == 0 && ! didLogSleep )		3108696	0					
ANR	3109024	Condition	dm . submit_delay == 0 && ! didLogSleep	1445:7:43378:43413	3108696	0	True				
ANR	3109025	AndExpression	dm . submit_delay == 0 && ! didLogSleep		3108696	0		&&			
ANR	3109026	EqualityExpression	dm . submit_delay == 0		3108696	0		==			
ANR	3109027	MemberAccess	dm . submit_delay		3108696	0					
ANR	3109028	Identifier	dm		3108696	0					
ANR	3109029	Identifier	submit_delay		3108696	1					
ANR	3109030	PrimaryExpression	0		3108696	1					
ANR	3109031	UnaryOperationExpression	! didLogSleep		3108696	1					
ANR	3109032	UnaryOperator	!		3108696	0					
ANR	3109033	Identifier	didLogSleep		3108696	1					
ANR	3109034	CompoundStatement		80:46:2762:2762	3108696	1					
ANR	3109035	Statement	debug_printf	1458:4:44055:44066	3108696	0	True				
ANR	3109036	Statement	(	1458:16:44067:44067	3108696	1	True				
ANR	3109037	Statement	DEBUG_VERBOSE	1458:18:44069:44081	3108696	2	True				
ANR	3109038	Statement	","	1458:31:44082:44082	3108696	3	True				
ANR	3109039	Statement	"""Sleeping for one second for log """	1459:7:44091:44124	3108696	4	True				
ANR	3109040	Statement	"""file consistency\\n"""	1460:7:44133:44152	3108696	5	True				
ANR	3109041	Statement	)	1460:28:44154:44154	3108696	6	True				
ANR	3109042	ExpressionStatement		1460:29:44155:44155	3108696	7	True				
ANR	3109043	ExpressionStatement	sleep ( 1 )	1461:4:44161:44171	3108696	8	True				
ANR	3109044	CallExpression	sleep ( 1 )		3108696	0					
ANR	3109045	Callee	sleep		3108696	0					
ANR	3109046	Identifier	sleep		3108696	0					
ANR	3109047	ArgumentList	1		3108696	1					
ANR	3109048	Argument	1		3108696	0					
ANR	3109049	PrimaryExpression	1		3108696	0					
ANR	3109050	ExpressionStatement	didLogSleep = true	1462:4:44177:44195	3108696	9	True				
ANR	3109051	AssignmentExpression	didLogSleep = true		3108696	0		=			
ANR	3109052	Identifier	didLogSleep		3108696	0					
ANR	3109053	Identifier	true		3108696	1					
ANR	3109054	IdentifierDeclStatement	"CondorID condorID ( 0 , 0 , 0 ) ;"	1465:6:44209:44233	3108696	1	True				
ANR	3109055	IdentifierDecl	"condorID ( 0 , 0 , 0 )"		3108696	0					
ANR	3109056	IdentifierDeclType	CondorID		3108696	0					
ANR	3109057	Identifier	condorID		3108696	1					
ANR	3109058	Expression	"0 , 0 , 0"		3108696	2					
ANR	3109059	PrimaryExpression	0		3108696	0					
ANR	3109060	Expression	"0 , 0"		3108696	1					
ANR	3109061	PrimaryExpression	0		3108696	0					
ANR	3109062	PrimaryExpression	0		3108696	1					
ANR	3109063	IdentifierDeclStatement	"submit_result_t submit_result = SubmitNodeJob ( dm , job , condorID ) ;"	1466:3:44238:44304	3108696	2	True				
ANR	3109064	IdentifierDecl	"submit_result = SubmitNodeJob ( dm , job , condorID )"		3108696	0					
ANR	3109065	IdentifierDeclType	submit_result_t		3108696	0					
ANR	3109066	Identifier	submit_result		3108696	1					
ANR	3109067	AssignmentExpression	"submit_result = SubmitNodeJob ( dm , job , condorID )"		3108696	2		=			
ANR	3109068	Identifier	submit_result		3108696	0					
ANR	3109069	CallExpression	"SubmitNodeJob ( dm , job , condorID )"		3108696	1					
ANR	3109070	Callee	SubmitNodeJob		3108696	0					
ANR	3109071	Identifier	SubmitNodeJob		3108696	0					
ANR	3109072	ArgumentList	dm		3108696	1					
ANR	3109073	Argument	dm		3108696	0					
ANR	3109074	Identifier	dm		3108696	0					
ANR	3109075	Argument	job		3108696	1					
ANR	3109076	Identifier	job		3108696	0					
ANR	3109077	Argument	condorID		3108696	2					
ANR	3109078	Identifier	condorID		3108696	0					
ANR	3109079	IfStatement	if ( submit_result == SUBMIT_RESULT_OK )		3108696	3					
ANR	3109080	Condition	submit_result == SUBMIT_RESULT_OK	1470:8:44410:44442	3108696	0	True				
ANR	3109081	EqualityExpression	submit_result == SUBMIT_RESULT_OK		3108696	0		==			
ANR	3109082	Identifier	submit_result		3108696	0					
ANR	3109083	Identifier	SUBMIT_RESULT_OK		3108696	1					
ANR	3109084	CompoundStatement		105:44:3791:3791	3108696	1					
ANR	3109085	ExpressionStatement	"ProcessSuccessfulSubmit ( job , condorID )"	1471:4:44452:44492	3108696	0	True				
ANR	3109086	CallExpression	"ProcessSuccessfulSubmit ( job , condorID )"		3108696	0					
ANR	3109087	Callee	ProcessSuccessfulSubmit		3108696	0					
ANR	3109088	Identifier	ProcessSuccessfulSubmit		3108696	0					
ANR	3109089	ArgumentList	job		3108696	1					
ANR	3109090	Argument	job		3108696	0					
ANR	3109091	Identifier	job		3108696	0					
ANR	3109092	Argument	condorID		3108696	1					
ANR	3109093	Identifier	condorID		3108696	0					
ANR	3109094	ExpressionStatement	numSubmitsThisCycle ++	1472:7:44501:44522	3108696	1	True				
ANR	3109095	PostIncDecOperationExpression	numSubmitsThisCycle ++		3108696	0					
ANR	3109096	Identifier	numSubmitsThisCycle		3108696	0					
ANR	3109097	IncDec	++		3108696	1					
ANR	3109098	ElseStatement	else		3108696	0					
ANR	3109099	IfStatement	if ( submit_result == SUBMIT_RESULT_FAILED )		3108696	0					
ANR	3109100	Condition	submit_result == SUBMIT_RESULT_FAILED	1474:15:44540:44576	3108696	0	True				
ANR	3109101	EqualityExpression	submit_result == SUBMIT_RESULT_FAILED		3108696	0		==			
ANR	3109102	Identifier	submit_result		3108696	0					
ANR	3109103	Identifier	SUBMIT_RESULT_FAILED		3108696	1					
ANR	3109104	CompoundStatement		109:55:3925:3925	3108696	1					
ANR	3109105	ExpressionStatement	"ProcessFailedSubmit ( job , dm . max_submit_attempts )"	1475:4:44586:44636	3108696	0	True				
ANR	3109106	CallExpression	"ProcessFailedSubmit ( job , dm . max_submit_attempts )"		3108696	0					
ANR	3109107	Callee	ProcessFailedSubmit		3108696	0					
ANR	3109108	Identifier	ProcessFailedSubmit		3108696	0					
ANR	3109109	ArgumentList	job		3108696	1					
ANR	3109110	Argument	job		3108696	0					
ANR	3109111	Identifier	job		3108696	0					
ANR	3109112	Argument	dm . max_submit_attempts		3108696	1					
ANR	3109113	MemberAccess	dm . max_submit_attempts		3108696	0					
ANR	3109114	Identifier	dm		3108696	0					
ANR	3109115	Identifier	max_submit_attempts		3108696	1					
ANR	3109116	BreakStatement	break ;	1476:4:44642:44647	3108696	1	True				
ANR	3109117	ElseStatement	else		3108696	0					
ANR	3109118	IfStatement	if ( submit_result == SUBMIT_RESULT_NO_SUBMIT )		3108696	0					
ANR	3109119	Condition	submit_result == SUBMIT_RESULT_NO_SUBMIT	1478:15:44692:44731	3108696	0	True				
ANR	3109120	EqualityExpression	submit_result == SUBMIT_RESULT_NO_SUBMIT		3108696	0		==			
ANR	3109121	Identifier	submit_result		3108696	0					
ANR	3109122	Identifier	SUBMIT_RESULT_NO_SUBMIT		3108696	1					
ANR	3109123	CompoundStatement		113:58:4080:4080	3108696	1					
ANR	3109124	ElseStatement	else		3108696	0					
ANR	3109125	CompoundStatement		116:10:4107:4107	3108696	0					
ANR	3109126	ExpressionStatement	"EXCEPT ( ""Illegal submit_result_t value: %d\\n"" , submit_result )"	1482:4:44768:44830	3108696	0	True				
ANR	3109127	CallExpression	"EXCEPT ( ""Illegal submit_result_t value: %d\\n"" , submit_result )"		3108696	0					
ANR	3109128	Callee	EXCEPT		3108696	0					
ANR	3109129	Identifier	EXCEPT		3108696	0					
ANR	3109130	ArgumentList	"""Illegal submit_result_t value: %d\\n"""		3108696	1					
ANR	3109131	Argument	"""Illegal submit_result_t value: %d\\n"""		3108696	0					
ANR	3109132	PrimaryExpression	"""Illegal submit_result_t value: %d\\n"""		3108696	0					
ANR	3109133	Argument	submit_result		3108696	1					
ANR	3109134	Identifier	submit_result		3108696	0					
ANR	3109135	ExpressionStatement	deferredJobs . Rewind ( )	1488:1:44914:44935	3108696	6	True				
ANR	3109136	CallExpression	deferredJobs . Rewind ( )		3108696	0					
ANR	3109137	Callee	deferredJobs . Rewind		3108696	0					
ANR	3109138	MemberAccess	deferredJobs . Rewind		3108696	0					
ANR	3109139	Identifier	deferredJobs		3108696	0					
ANR	3109140	Identifier	Rewind		3108696	1					
ANR	3109141	ArgumentList			3108696	1					
ANR	3109142	IdentifierDeclStatement	Job * job ;	1489:1:44938:44946	3108696	7	True				
ANR	3109143	IdentifierDecl	* job		3108696	0					
ANR	3109144	IdentifierDeclType	Job *		3108696	0					
ANR	3109145	Identifier	job		3108696	1					
ANR	3109146	WhileStatement	while ( deferredJobs . Next ( job ) )		3108696	8					
ANR	3109147	Condition	deferredJobs . Next ( job )	1490:9:44957:44980	3108696	0	True				
ANR	3109148	CallExpression	deferredJobs . Next ( job )		3108696	0					
ANR	3109149	Callee	deferredJobs . Next		3108696	0					
ANR	3109150	MemberAccess	deferredJobs . Next		3108696	0					
ANR	3109151	Identifier	deferredJobs		3108696	0					
ANR	3109152	Identifier	Next		3108696	1					
ANR	3109153	ArgumentList	job		3108696	1					
ANR	3109154	Argument	job		3108696	0					
ANR	3109155	Identifier	job		3108696	0					
ANR	3109156	CompoundStatement		125:36:4329:4329	3108696	1					
ANR	3109157	ExpressionStatement	"debug_printf ( DEBUG_DEBUG_1 , ""Returning deferred node %s to the ready queue\\n"" , job -> GetJobName ( ) )"	1491:2:44988:45097	3108696	0	True				
ANR	3109158	CallExpression	"debug_printf ( DEBUG_DEBUG_1 , ""Returning deferred node %s to the ready queue\\n"" , job -> GetJobName ( ) )"		3108696	0					
ANR	3109159	Callee	debug_printf		3108696	0					
ANR	3109160	Identifier	debug_printf		3108696	0					
ANR	3109161	ArgumentList	DEBUG_DEBUG_1		3108696	1					
ANR	3109162	Argument	DEBUG_DEBUG_1		3108696	0					
ANR	3109163	Identifier	DEBUG_DEBUG_1		3108696	0					
ANR	3109164	Argument	"""Returning deferred node %s to the ready queue\\n"""		3108696	1					
ANR	3109165	PrimaryExpression	"""Returning deferred node %s to the ready queue\\n"""		3108696	0					
ANR	3109166	Argument	job -> GetJobName ( )		3108696	2					
ANR	3109167	CallExpression	job -> GetJobName ( )		3108696	0					
ANR	3109168	Callee	job -> GetJobName		3108696	0					
ANR	3109169	PtrMemberAccess	job -> GetJobName		3108696	0					
ANR	3109170	Identifier	job		3108696	0					
ANR	3109171	Identifier	GetJobName		3108696	1					
ANR	3109172	ArgumentList			3108696	1					
ANR	3109173	ExpressionStatement	"_readyQ -> Prepend ( job , - job -> _nodePriority )"	1494:2:45101:45145	3108696	1	True				
ANR	3109174	CallExpression	"_readyQ -> Prepend ( job , - job -> _nodePriority )"		3108696	0					
ANR	3109175	Callee	_readyQ -> Prepend		3108696	0					
ANR	3109176	PtrMemberAccess	_readyQ -> Prepend		3108696	0					
ANR	3109177	Identifier	_readyQ		3108696	0					
ANR	3109178	Identifier	Prepend		3108696	1					
ANR	3109179	ArgumentList	job		3108696	1					
ANR	3109180	Argument	job		3108696	0					
ANR	3109181	Identifier	job		3108696	0					
ANR	3109182	Argument	- job -> _nodePriority		3108696	1					
ANR	3109183	UnaryOperationExpression	- job -> _nodePriority		3108696	0					
ANR	3109184	UnaryOperator	-		3108696	0					
ANR	3109185	PtrMemberAccess	job -> _nodePriority		3108696	1					
ANR	3109186	Identifier	job		3108696	0					
ANR	3109187	Identifier	_nodePriority		3108696	1					
ANR	3109188	ReturnStatement	return numSubmitsThisCycle ;	1497:1:45152:45178	3108696	9	True				
ANR	3109189	Identifier	numSubmitsThisCycle		3108696	0					
ANR	3109190	ReturnType	int		3108696	1					
ANR	3109191	Identifier	Dag :: SubmitReadyJobs		3108696	2					
ANR	3109192	ParameterList	const Dagman & dm		3108696	3					
ANR	3109193	Parameter	const Dagman & dm	1365:21:40636:40651	3108696	0	True				
ANR	3109194	ParameterType	const Dagman &		3108696	0					
ANR	3109195	Identifier	dm		3108696	1					
ANR	3109196	CFGEntryNode	ENTRY		3108696		True				
ANR	3109197	CFGExitNode	EXIT		3108696		True				
ANR	3109198	Symbol	SUBMIT_RESULT_OK		3108696						
ANR	3109199	Symbol	numSubmitsThisCycle		3108696						
ANR	3109200	Symbol	catThrottle -> isSet		3108696						
ANR	3109201	Symbol	dm		3108696						
ANR	3109202	Symbol	_maxJobsSubmitted		3108696						
ANR	3109203	Symbol	* * catThrottle		3108696						
ANR	3109204	Symbol	dm . max_submits_per_interval		3108696						
ANR	3109205	Symbol	job -> _nodePriority		3108696						
ANR	3109206	Symbol	catThrottle -> _maxJobs		3108696						
ANR	3109207	Symbol	submit_result		3108696						
ANR	3109208	Symbol	Job :: STATUS_READY		3108696						
ANR	3109209	Symbol	* catThrottle -> _category		3108696						
ANR	3109210	Symbol	deferredJobs . Next		3108696						
ANR	3109211	Symbol	SubmitNodeJob		3108696						
ANR	3109212	Symbol	_readyQ		3108696						
ANR	3109213	Symbol	job -> GetStatusName		3108696						
ANR	3109214	Symbol	DEBUG_DEBUG_1		3108696						
ANR	3109215	Symbol	_readyQ -> Number		3108696						
ANR	3109216	Symbol	_readyQ -> IsEmpty		3108696						
ANR	3109217	Symbol	dm . max_submit_attempts		3108696						
ANR	3109218	Symbol	SUBMIT_RESULT_NO_SUBMIT		3108696						
ANR	3109219	Symbol	* _readyQ		3108696						
ANR	3109220	Symbol	NULL		3108696						
ANR	3109221	Symbol	_maxIdleJobProcs		3108696						
ANR	3109222	Symbol	_maxIdleDeferredCount		3108696						
ANR	3109223	Symbol	_maxJobsDeferredCount		3108696						
ANR	3109224	Symbol	catThrottle -> _currentJobs		3108696						
ANR	3109225	Symbol	_numJobsSubmitted		3108696						
ANR	3109226	Symbol	job -> GetJobName		3108696						
ANR	3109227	Symbol	* job		3108696						
ANR	3109228	Symbol	catThrottle -> _category -> Value		3108696						
ANR	3109229	Symbol	false		3108696						
ANR	3109230	Symbol	dm . submit_delay		3108696						
ANR	3109231	Symbol	* catThrottle		3108696						
ANR	3109232	Symbol	catThrottle -> _category		3108696						
ANR	3109233	Symbol	SUBMIT_RESULT_FAILED		3108696						
ANR	3109234	Symbol	catThrottle		3108696						
ANR	3109235	Symbol	_nextSubmitTime		3108696						
ANR	3109236	Symbol	job -> GetStatus		3108696						
ANR	3109237	Symbol	_numIdleJobProcs		3108696						
ANR	3109238	Symbol	condorID		3108696						
ANR	3109239	Symbol	didLogSleep		3108696						
ANR	3109240	Symbol	_catThrottleDeferredCount		3108696						
ANR	3109241	Symbol	true		3108696						
ANR	3109242	Symbol	deferredJobs		3108696						
ANR	3109243	Symbol	time		3108696						
ANR	3109244	Symbol	job		3108696						
ANR	3109245	Symbol	job -> GetThrottleInfo		3108696						
ANR	3109246	Function	Dag :: PreScriptReaper	1501:0:45261:48679							
ANR	3109247	FunctionDef	"Dag :: PreScriptReaper (const char * nodeName , int status)"		3109246	0					
ANR	3109248	CompoundStatement		1503:0:45322:48679	3109246	0					
ANR	3109249	ExpressionStatement	ASSERT ( nodeName != NULL )	1504:1:45325:45351	3109246	0	True				
ANR	3109250	CallExpression	ASSERT ( nodeName != NULL )		3109246	0					
ANR	3109251	Callee	ASSERT		3109246	0					
ANR	3109252	Identifier	ASSERT		3109246	0					
ANR	3109253	ArgumentList	nodeName != NULL		3109246	1					
ANR	3109254	Argument	nodeName != NULL		3109246	0					
ANR	3109255	EqualityExpression	nodeName != NULL		3109246	0		!=			
ANR	3109256	Identifier	nodeName		3109246	0					
ANR	3109257	Identifier	NULL		3109246	1					
ANR	3109258	IdentifierDeclStatement	Job * job = FindNodeByName ( nodeName ) ;	1505:1:45354:45391	3109246	1	True				
ANR	3109259	IdentifierDecl	* job = FindNodeByName ( nodeName )		3109246	0					
ANR	3109260	IdentifierDeclType	Job *		3109246	0					
ANR	3109261	Identifier	job		3109246	1					
ANR	3109262	AssignmentExpression	* job = FindNodeByName ( nodeName )		3109246	2		=			
ANR	3109263	Identifier	job		3109246	0					
ANR	3109264	CallExpression	FindNodeByName ( nodeName )		3109246	1					
ANR	3109265	Callee	FindNodeByName		3109246	0					
ANR	3109266	Identifier	FindNodeByName		3109246	0					
ANR	3109267	ArgumentList	nodeName		3109246	1					
ANR	3109268	Argument	nodeName		3109246	0					
ANR	3109269	Identifier	nodeName		3109246	0					
ANR	3109270	ExpressionStatement	ASSERT ( job != NULL )	1506:1:45394:45415	3109246	2	True				
ANR	3109271	CallExpression	ASSERT ( job != NULL )		3109246	0					
ANR	3109272	Callee	ASSERT		3109246	0					
ANR	3109273	Identifier	ASSERT		3109246	0					
ANR	3109274	ArgumentList	job != NULL		3109246	1					
ANR	3109275	Argument	job != NULL		3109246	0					
ANR	3109276	EqualityExpression	job != NULL		3109246	0		!=			
ANR	3109277	Identifier	job		3109246	0					
ANR	3109278	Identifier	NULL		3109246	1					
ANR	3109279	IfStatement	if ( job -> GetStatus ( ) != Job :: STATUS_PRERUN )		3109246	3					
ANR	3109280	Condition	job -> GetStatus ( ) != Job :: STATUS_PRERUN	1507:6:45423:45460	3109246	0	True				
ANR	3109281	EqualityExpression	job -> GetStatus ( ) != Job :: STATUS_PRERUN		3109246	0		!=			
ANR	3109282	CallExpression	job -> GetStatus ( )		3109246	0					
ANR	3109283	Callee	job -> GetStatus		3109246	0					
ANR	3109284	PtrMemberAccess	job -> GetStatus		3109246	0					
ANR	3109285	Identifier	job		3109246	0					
ANR	3109286	Identifier	GetStatus		3109246	1					
ANR	3109287	ArgumentList			3109246	1					
ANR	3109288	Identifier	Job :: STATUS_PRERUN		3109246	1					
ANR	3109289	CompoundStatement		5:47:141:141	3109246	1					
ANR	3109290	ExpressionStatement	"EXCEPT ( ""Error: node %s is not in PRERUN state"" , job -> GetJobName ( ) )"	1508:2:45468:45536	3109246	0	True				
ANR	3109291	CallExpression	"EXCEPT ( ""Error: node %s is not in PRERUN state"" , job -> GetJobName ( ) )"		3109246	0					
ANR	3109292	Callee	EXCEPT		3109246	0					
ANR	3109293	Identifier	EXCEPT		3109246	0					
ANR	3109294	ArgumentList	"""Error: node %s is not in PRERUN state"""		3109246	1					
ANR	3109295	Argument	"""Error: node %s is not in PRERUN state"""		3109246	0					
ANR	3109296	PrimaryExpression	"""Error: node %s is not in PRERUN state"""		3109246	0					
ANR	3109297	Argument	job -> GetJobName ( )		3109246	1					
ANR	3109298	CallExpression	job -> GetJobName ( )		3109246	0					
ANR	3109299	Callee	job -> GetJobName		3109246	0					
ANR	3109300	PtrMemberAccess	job -> GetJobName		3109246	0					
ANR	3109301	Identifier	job		3109246	0					
ANR	3109302	Identifier	GetJobName		3109246	1					
ANR	3109303	ArgumentList			3109246	1					
ANR	3109304	ExpressionStatement	_preRunNodeCount --	1511:1:45543:45561	3109246	4	True				
ANR	3109305	PostIncDecOperationExpression	_preRunNodeCount --		3109246	0					
ANR	3109306	Identifier	_preRunNodeCount		3109246	0					
ANR	3109307	IncDec	--		3109246	1					
ANR	3109308	IdentifierDeclStatement	bool preScriptFailed = false ;	1513:1:45565:45593	3109246	5	True				
ANR	3109309	IdentifierDecl	preScriptFailed = false		3109246	0					
ANR	3109310	IdentifierDeclType	bool		3109246	0					
ANR	3109311	Identifier	preScriptFailed		3109246	1					
ANR	3109312	AssignmentExpression	preScriptFailed = false		3109246	2		=			
ANR	3109313	Identifier	false		3109246	0					
ANR	3109314	Identifier	false		3109246	1					
ANR	3109315	IfStatement	if ( WIFSIGNALED ( status ) )		3109246	6					
ANR	3109316	Condition	WIFSIGNALED ( status )	1514:6:45601:45621	3109246	0	True				
ANR	3109317	CallExpression	WIFSIGNALED ( status )		3109246	0					
ANR	3109318	Callee	WIFSIGNALED		3109246	0					
ANR	3109319	Identifier	WIFSIGNALED		3109246	0					
ANR	3109320	ArgumentList	status		3109246	1					
ANR	3109321	Argument	status		3109246	0					
ANR	3109322	Identifier	status		3109246	0					
ANR	3109323	CompoundStatement		12:30:302:302	3109246	1					
ANR	3109324	ExpressionStatement	preScriptFailed = true	1516:2:45668:45690	3109246	0	True				
ANR	3109325	AssignmentExpression	preScriptFailed = true		3109246	0		=			
ANR	3109326	Identifier	preScriptFailed		3109246	0					
ANR	3109327	Identifier	true		3109246	1					
ANR	3109328	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""PRE Script of Job %s died on %s\\n"" , job -> GetJobName ( ) , daemonCore -> GetExceptionString ( status ) )"	1517:2:45694:45831	3109246	1	True				
ANR	3109329	CallExpression	"debug_printf ( DEBUG_QUIET , ""PRE Script of Job %s died on %s\\n"" , job -> GetJobName ( ) , daemonCore -> GetExceptionString ( status ) )"		3109246	0					
ANR	3109330	Callee	debug_printf		3109246	0					
ANR	3109331	Identifier	debug_printf		3109246	0					
ANR	3109332	ArgumentList	DEBUG_QUIET		3109246	1					
ANR	3109333	Argument	DEBUG_QUIET		3109246	0					
ANR	3109334	Identifier	DEBUG_QUIET		3109246	0					
ANR	3109335	Argument	"""PRE Script of Job %s died on %s\\n"""		3109246	1					
ANR	3109336	PrimaryExpression	"""PRE Script of Job %s died on %s\\n"""		3109246	0					
ANR	3109337	Argument	job -> GetJobName ( )		3109246	2					
ANR	3109338	CallExpression	job -> GetJobName ( )		3109246	0					
ANR	3109339	Callee	job -> GetJobName		3109246	0					
ANR	3109340	PtrMemberAccess	job -> GetJobName		3109246	0					
ANR	3109341	Identifier	job		3109246	0					
ANR	3109342	Identifier	GetJobName		3109246	1					
ANR	3109343	ArgumentList			3109246	1					
ANR	3109344	Argument	daemonCore -> GetExceptionString ( status )		3109246	3					
ANR	3109345	CallExpression	daemonCore -> GetExceptionString ( status )		3109246	0					
ANR	3109346	Callee	daemonCore -> GetExceptionString		3109246	0					
ANR	3109347	PtrMemberAccess	daemonCore -> GetExceptionString		3109246	0					
ANR	3109348	Identifier	daemonCore		3109246	0					
ANR	3109349	Identifier	GetExceptionString		3109246	1					
ANR	3109350	ArgumentList	status		3109246	1					
ANR	3109351	Argument	status		3109246	0					
ANR	3109352	Identifier	status		3109246	0					
ANR	3109353	ExpressionStatement	"snprintf ( job -> error_text , JOB_ERROR_TEXT_MAXLEN , ""PRE Script died on %s"" , daemonCore -> GetExceptionString ( status ) )"	1520:2:45835:45958	3109246	2	True				
ANR	3109354	CallExpression	"snprintf ( job -> error_text , JOB_ERROR_TEXT_MAXLEN , ""PRE Script died on %s"" , daemonCore -> GetExceptionString ( status ) )"		3109246	0					
ANR	3109355	Callee	snprintf		3109246	0					
ANR	3109356	Identifier	snprintf		3109246	0					
ANR	3109357	ArgumentList	job -> error_text		3109246	1					
ANR	3109358	Argument	job -> error_text		3109246	0					
ANR	3109359	PtrMemberAccess	job -> error_text		3109246	0					
ANR	3109360	Identifier	job		3109246	0					
ANR	3109361	Identifier	error_text		3109246	1					
ANR	3109362	Argument	JOB_ERROR_TEXT_MAXLEN		3109246	1					
ANR	3109363	Identifier	JOB_ERROR_TEXT_MAXLEN		3109246	0					
ANR	3109364	Argument	"""PRE Script died on %s"""		3109246	2					
ANR	3109365	PrimaryExpression	"""PRE Script died on %s"""		3109246	0					
ANR	3109366	Argument	daemonCore -> GetExceptionString ( status )		3109246	3					
ANR	3109367	CallExpression	daemonCore -> GetExceptionString ( status )		3109246	0					
ANR	3109368	Callee	daemonCore -> GetExceptionString		3109246	0					
ANR	3109369	PtrMemberAccess	daemonCore -> GetExceptionString		3109246	0					
ANR	3109370	Identifier	daemonCore		3109246	0					
ANR	3109371	Identifier	GetExceptionString		3109246	1					
ANR	3109372	ArgumentList	status		3109246	1					
ANR	3109373	Argument	status		3109246	0					
ANR	3109374	Identifier	status		3109246	0					
ANR	3109375	ExpressionStatement	job -> retval = ( 0 - WTERMSIG ( status ) )	1523:2:45962:46001	3109246	3	True				
ANR	3109376	AssignmentExpression	job -> retval = ( 0 - WTERMSIG ( status ) )		3109246	0		=			
ANR	3109377	PtrMemberAccess	job -> retval		3109246	0					
ANR	3109378	Identifier	job		3109246	0					
ANR	3109379	Identifier	retval		3109246	1					
ANR	3109380	AdditiveExpression	0 - WTERMSIG ( status )		3109246	1		-			
ANR	3109381	PrimaryExpression	0		3109246	0					
ANR	3109382	CallExpression	WTERMSIG ( status )		3109246	1					
ANR	3109383	Callee	WTERMSIG		3109246	0					
ANR	3109384	Identifier	WTERMSIG		3109246	0					
ANR	3109385	ArgumentList	status		3109246	1					
ANR	3109386	Argument	status		3109246	0					
ANR	3109387	Identifier	status		3109246	0					
ANR	3109388	ElseStatement	else		3109246	0					
ANR	3109389	IfStatement	if ( WEXITSTATUS ( status ) != 0 )		3109246	0					
ANR	3109390	Condition	WEXITSTATUS ( status ) != 0	1524:13:46016:46041	3109246	0	True				
ANR	3109391	EqualityExpression	WEXITSTATUS ( status ) != 0		3109246	0		!=			
ANR	3109392	CallExpression	WEXITSTATUS ( status )		3109246	0					
ANR	3109393	Callee	WEXITSTATUS		3109246	0					
ANR	3109394	Identifier	WEXITSTATUS		3109246	0					
ANR	3109395	ArgumentList	status		3109246	1					
ANR	3109396	Argument	status		3109246	0					
ANR	3109397	Identifier	status		3109246	0					
ANR	3109398	PrimaryExpression	0		3109246	1					
ANR	3109399	CompoundStatement		22:42:722:722	3109246	1					
ANR	3109400	ExpressionStatement	preScriptFailed = true	1526:2:46082:46104	3109246	0	True				
ANR	3109401	AssignmentExpression	preScriptFailed = true		3109246	0		=			
ANR	3109402	Identifier	preScriptFailed		3109246	0					
ANR	3109403	Identifier	true		3109246	1					
ANR	3109404	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""PRE Script of Job %s failed with status %d\\n"" , job -> GetJobName ( ) , WEXITSTATUS ( status ) )"	1527:2:46108:46237	3109246	1	True				
ANR	3109405	CallExpression	"debug_printf ( DEBUG_QUIET , ""PRE Script of Job %s failed with status %d\\n"" , job -> GetJobName ( ) , WEXITSTATUS ( status ) )"		3109246	0					
ANR	3109406	Callee	debug_printf		3109246	0					
ANR	3109407	Identifier	debug_printf		3109246	0					
ANR	3109408	ArgumentList	DEBUG_QUIET		3109246	1					
ANR	3109409	Argument	DEBUG_QUIET		3109246	0					
ANR	3109410	Identifier	DEBUG_QUIET		3109246	0					
ANR	3109411	Argument	"""PRE Script of Job %s failed with status %d\\n"""		3109246	1					
ANR	3109412	PrimaryExpression	"""PRE Script of Job %s failed with status %d\\n"""		3109246	0					
ANR	3109413	Argument	job -> GetJobName ( )		3109246	2					
ANR	3109414	CallExpression	job -> GetJobName ( )		3109246	0					
ANR	3109415	Callee	job -> GetJobName		3109246	0					
ANR	3109416	PtrMemberAccess	job -> GetJobName		3109246	0					
ANR	3109417	Identifier	job		3109246	0					
ANR	3109418	Identifier	GetJobName		3109246	1					
ANR	3109419	ArgumentList			3109246	1					
ANR	3109420	Argument	WEXITSTATUS ( status )		3109246	3					
ANR	3109421	CallExpression	WEXITSTATUS ( status )		3109246	0					
ANR	3109422	Callee	WEXITSTATUS		3109246	0					
ANR	3109423	Identifier	WEXITSTATUS		3109246	0					
ANR	3109424	ArgumentList	status		3109246	1					
ANR	3109425	Argument	status		3109246	0					
ANR	3109426	Identifier	status		3109246	0					
ANR	3109427	ExpressionStatement	"snprintf ( job -> error_text , JOB_ERROR_TEXT_MAXLEN , ""PRE Script failed with status %d"" , WEXITSTATUS ( status ) )"	1530:2:46241:46356	3109246	2	True				
ANR	3109428	CallExpression	"snprintf ( job -> error_text , JOB_ERROR_TEXT_MAXLEN , ""PRE Script failed with status %d"" , WEXITSTATUS ( status ) )"		3109246	0					
ANR	3109429	Callee	snprintf		3109246	0					
ANR	3109430	Identifier	snprintf		3109246	0					
ANR	3109431	ArgumentList	job -> error_text		3109246	1					
ANR	3109432	Argument	job -> error_text		3109246	0					
ANR	3109433	PtrMemberAccess	job -> error_text		3109246	0					
ANR	3109434	Identifier	job		3109246	0					
ANR	3109435	Identifier	error_text		3109246	1					
ANR	3109436	Argument	JOB_ERROR_TEXT_MAXLEN		3109246	1					
ANR	3109437	Identifier	JOB_ERROR_TEXT_MAXLEN		3109246	0					
ANR	3109438	Argument	"""PRE Script failed with status %d"""		3109246	2					
ANR	3109439	PrimaryExpression	"""PRE Script failed with status %d"""		3109246	0					
ANR	3109440	Argument	WEXITSTATUS ( status )		3109246	3					
ANR	3109441	CallExpression	WEXITSTATUS ( status )		3109246	0					
ANR	3109442	Callee	WEXITSTATUS		3109246	0					
ANR	3109443	Identifier	WEXITSTATUS		3109246	0					
ANR	3109444	ArgumentList	status		3109246	1					
ANR	3109445	Argument	status		3109246	0					
ANR	3109446	Identifier	status		3109246	0					
ANR	3109447	ExpressionStatement	job -> retval = WEXITSTATUS ( status )	1533:2:46360:46395	3109246	3	True				
ANR	3109448	AssignmentExpression	job -> retval = WEXITSTATUS ( status )		3109246	0		=			
ANR	3109449	PtrMemberAccess	job -> retval		3109246	0					
ANR	3109450	Identifier	job		3109246	0					
ANR	3109451	Identifier	retval		3109246	1					
ANR	3109452	CallExpression	WEXITSTATUS ( status )		3109246	1					
ANR	3109453	Callee	WEXITSTATUS		3109246	0					
ANR	3109454	Identifier	WEXITSTATUS		3109246	0					
ANR	3109455	ArgumentList	status		3109246	1					
ANR	3109456	Argument	status		3109246	0					
ANR	3109457	Identifier	status		3109246	0					
ANR	3109458	ElseStatement	else		3109246	0					
ANR	3109459	CompoundStatement		32:8:1082:1082	3109246	0					
ANR	3109460	IfStatement	if ( job -> _scriptPost != NULL )		3109246	0					
ANR	3109461	Condition	job -> _scriptPost != NULL	1536:6:46439:46462	3109246	0	True				
ANR	3109462	EqualityExpression	job -> _scriptPost != NULL		3109246	0		!=			
ANR	3109463	PtrMemberAccess	job -> _scriptPost		3109246	0					
ANR	3109464	Identifier	job		3109246	0					
ANR	3109465	Identifier	_scriptPost		3109246	1					
ANR	3109466	Identifier	NULL		3109246	1					
ANR	3109467	CompoundStatement		34:33:1143:1143	3109246	1					
ANR	3109468	ExpressionStatement	job -> _scriptPost -> _retValScript = 0	1537:3:46471:46506	3109246	0	True				
ANR	3109469	AssignmentExpression	job -> _scriptPost -> _retValScript = 0		3109246	0		=			
ANR	3109470	PtrMemberAccess	job -> _scriptPost -> _retValScript		3109246	0					
ANR	3109471	PtrMemberAccess	job -> _scriptPost		3109246	0					
ANR	3109472	Identifier	job		3109246	0					
ANR	3109473	Identifier	_scriptPost		3109246	1					
ANR	3109474	Identifier	_retValScript		3109246	1					
ANR	3109475	PrimaryExpression	0		3109246	1					
ANR	3109476	ExpressionStatement	job -> retval = 0	1539:2:46514:46529	3109246	1	True				
ANR	3109477	AssignmentExpression	job -> retval = 0		3109246	0		=			
ANR	3109478	PtrMemberAccess	job -> retval		3109246	0					
ANR	3109479	Identifier	job		3109246	0					
ANR	3109480	Identifier	retval		3109246	1					
ANR	3109481	PrimaryExpression	0		3109246	1					
ANR	3109482	ExpressionStatement	"_jobstateLog . WriteScriptSuccessOrFailure ( job , false )"	1542:1:46536:46590	3109246	7	True				
ANR	3109483	CallExpression	"_jobstateLog . WriteScriptSuccessOrFailure ( job , false )"		3109246	0					
ANR	3109484	Callee	_jobstateLog . WriteScriptSuccessOrFailure		3109246	0					
ANR	3109485	MemberAccess	_jobstateLog . WriteScriptSuccessOrFailure		3109246	0					
ANR	3109486	Identifier	_jobstateLog		3109246	0					
ANR	3109487	Identifier	WriteScriptSuccessOrFailure		3109246	1					
ANR	3109488	ArgumentList	job		3109246	1					
ANR	3109489	Argument	job		3109246	0					
ANR	3109490	Identifier	job		3109246	0					
ANR	3109491	Argument	false		3109246	1					
ANR	3109492	Identifier	false		3109246	0					
ANR	3109493	IfStatement	if ( preScriptFailed )		3109246	8					
ANR	3109494	Condition	preScriptFailed	1544:6:46599:46613	3109246	0	True				
ANR	3109495	Identifier	preScriptFailed		3109246	0					
ANR	3109496	CompoundStatement		42:24:1294:1294	3109246	1					
ANR	3109497	ExpressionStatement	job -> _Status = Job :: STATUS_ERROR	1545:2:46621:46653	3109246	0	True				
ANR	3109498	AssignmentExpression	job -> _Status = Job :: STATUS_ERROR		3109246	0		=			
ANR	3109499	PtrMemberAccess	job -> _Status		3109246	0					
ANR	3109500	Identifier	job		3109246	0					
ANR	3109501	Identifier	_Status		3109246	1					
ANR	3109502	Identifier	Job :: STATUS_ERROR		3109246	1					
ANR	3109503	IfStatement	if ( job -> HasPreSkip ( ) && job -> GetPreSkip ( ) == job -> retval )		3109246	1					
ANR	3109504	Condition	job -> HasPreSkip ( ) && job -> GetPreSkip ( ) == job -> retval	1548:7:46689:46741	3109246	0	True				
ANR	3109505	AndExpression	job -> HasPreSkip ( ) && job -> GetPreSkip ( ) == job -> retval		3109246	0		&&			
ANR	3109506	CallExpression	job -> HasPreSkip ( )		3109246	0					
ANR	3109507	Callee	job -> HasPreSkip		3109246	0					
ANR	3109508	PtrMemberAccess	job -> HasPreSkip		3109246	0					
ANR	3109509	Identifier	job		3109246	0					
ANR	3109510	Identifier	HasPreSkip		3109246	1					
ANR	3109511	ArgumentList			3109246	1					
ANR	3109512	EqualityExpression	job -> GetPreSkip ( ) == job -> retval		3109246	1		==			
ANR	3109513	CallExpression	job -> GetPreSkip ( )		3109246	0					
ANR	3109514	Callee	job -> GetPreSkip		3109246	0					
ANR	3109515	PtrMemberAccess	job -> GetPreSkip		3109246	0					
ANR	3109516	Identifier	job		3109246	0					
ANR	3109517	Identifier	GetPreSkip		3109246	1					
ANR	3109518	ArgumentList			3109246	1					
ANR	3109519	PtrMemberAccess	job -> retval		3109246	1					
ANR	3109520	Identifier	job		3109246	0					
ANR	3109521	Identifier	retval		3109246	1					
ANR	3109522	CompoundStatement		46:63:1422:1422	3109246	1					
ANR	3109523	Statement	debug_printf	1553:3:46961:46972	3109246	0	True				
ANR	3109524	Statement	(	1553:15:46973:46973	3109246	1	True				
ANR	3109525	Statement	DEBUG_NORMAL	1553:17:46975:46986	3109246	2	True				
ANR	3109526	Statement	","	1553:29:46987:46987	3109246	3	True				
ANR	3109527	Statement	"""PRE_SKIP return """	1553:31:46989:47006	3109246	4	True				
ANR	3109528	Statement	"""value %d indicates we are done (successfully) with node %s\\n"""	1554:5:47013:47074	3109246	5	True				
ANR	3109529	Statement	","	1554:67:47075:47075	3109246	6	True				
ANR	3109530	Statement	job	1555:5:47082:47084	3109246	7	True				
ANR	3109531	Statement	->	1555:8:47085:47086	3109246	8	True				
ANR	3109532	Statement	retval	1555:10:47087:47092	3109246	9	True				
ANR	3109533	Statement	","	1555:16:47093:47093	3109246	10	True				
ANR	3109534	Statement	job	1555:18:47095:47097	3109246	11	True				
ANR	3109535	Statement	->	1555:21:47098:47099	3109246	12	True				
ANR	3109536	Statement	GetJobName	1555:23:47100:47109	3109246	13	True				
ANR	3109537	Statement	(	1555:33:47110:47110	3109246	14	True				
ANR	3109538	Statement	)	1555:34:47111:47111	3109246	15	True				
ANR	3109539	Statement	)	1555:36:47113:47113	3109246	16	True				
ANR	3109540	ExpressionStatement		1555:37:47114:47114	3109246	17	True				
ANR	3109541	ExpressionStatement	job -> retval = 0	1556:3:47119:47134	3109246	18	True				
ANR	3109542	AssignmentExpression	job -> retval = 0		3109246	0		=			
ANR	3109543	PtrMemberAccess	job -> retval		3109246	0					
ANR	3109544	Identifier	job		3109246	0					
ANR	3109545	Identifier	retval		3109246	1					
ANR	3109546	PrimaryExpression	0		3109246	1					
ANR	3109547	ExpressionStatement	"TerminateJob ( job , false , false )"	1561:3:47370:47403	3109246	19	True				
ANR	3109548	CallExpression	"TerminateJob ( job , false , false )"		3109246	0					
ANR	3109549	Callee	TerminateJob		3109246	0					
ANR	3109550	Identifier	TerminateJob		3109246	0					
ANR	3109551	ArgumentList	job		3109246	1					
ANR	3109552	Argument	job		3109246	0					
ANR	3109553	Identifier	job		3109246	0					
ANR	3109554	Argument	false		3109246	1					
ANR	3109555	Identifier	false		3109246	0					
ANR	3109556	Argument	false		3109246	2					
ANR	3109557	Identifier	false		3109246	0					
ANR	3109558	ElseStatement	else		3109246	0					
ANR	3109559	IfStatement	if ( _alwaysRunPost && job -> _scriptPost != NULL )		3109246	0					
ANR	3109560	Condition	_alwaysRunPost && job -> _scriptPost != NULL	1565:12:47451:47492	3109246	0	True				
ANR	3109561	AndExpression	_alwaysRunPost && job -> _scriptPost != NULL		3109246	0		&&			
ANR	3109562	Identifier	_alwaysRunPost		3109246	0					
ANR	3109563	EqualityExpression	job -> _scriptPost != NULL		3109246	1		!=			
ANR	3109564	PtrMemberAccess	job -> _scriptPost		3109246	0					
ANR	3109565	Identifier	job		3109246	0					
ANR	3109566	Identifier	_scriptPost		3109246	1					
ANR	3109567	Identifier	NULL		3109246	1					
ANR	3109568	CompoundStatement		63:57:2173:2173	3109246	1					
ANR	3109569	ExpressionStatement	job -> _scriptPost -> _retValScript = job -> retval	1567:3:47565:47610	3109246	0	True				
ANR	3109570	AssignmentExpression	job -> _scriptPost -> _retValScript = job -> retval		3109246	0		=			
ANR	3109571	PtrMemberAccess	job -> _scriptPost -> _retValScript		3109246	0					
ANR	3109572	PtrMemberAccess	job -> _scriptPost		3109246	0					
ANR	3109573	Identifier	job		3109246	0					
ANR	3109574	Identifier	_scriptPost		3109246	1					
ANR	3109575	Identifier	_retValScript		3109246	1					
ANR	3109576	PtrMemberAccess	job -> retval		3109246	1					
ANR	3109577	Identifier	job		3109246	0					
ANR	3109578	Identifier	retval		3109246	1					
ANR	3109579	ExpressionStatement	job -> _scriptPost -> _retValJob = DAG_ERROR_JOB_SKIPPED	1568:3:47615:47667	3109246	1	True				
ANR	3109580	AssignmentExpression	job -> _scriptPost -> _retValJob = DAG_ERROR_JOB_SKIPPED		3109246	0		=			
ANR	3109581	PtrMemberAccess	job -> _scriptPost -> _retValJob		3109246	0					
ANR	3109582	PtrMemberAccess	job -> _scriptPost		3109246	0					
ANR	3109583	Identifier	job		3109246	0					
ANR	3109584	Identifier	_scriptPost		3109246	1					
ANR	3109585	Identifier	_retValJob		3109246	1					
ANR	3109586	Identifier	DAG_ERROR_JOB_SKIPPED		3109246	1					
ANR	3109587	ExpressionStatement	"RunPostScript ( job , _alwaysRunPost , job -> retval )"	1569:3:47672:47721	3109246	2	True				
ANR	3109588	CallExpression	"RunPostScript ( job , _alwaysRunPost , job -> retval )"		3109246	0					
ANR	3109589	Callee	RunPostScript		3109246	0					
ANR	3109590	Identifier	RunPostScript		3109246	0					
ANR	3109591	ArgumentList	job		3109246	1					
ANR	3109592	Argument	job		3109246	0					
ANR	3109593	Identifier	job		3109246	0					
ANR	3109594	Argument	_alwaysRunPost		3109246	1					
ANR	3109595	Identifier	_alwaysRunPost		3109246	0					
ANR	3109596	Argument	job -> retval		3109246	2					
ANR	3109597	PtrMemberAccess	job -> retval		3109246	0					
ANR	3109598	Identifier	job		3109246	0					
ANR	3109599	Identifier	retval		3109246	1					
ANR	3109600	ElseStatement	else		3109246	0					
ANR	3109601	IfStatement	if ( job -> GetRetries ( ) < job -> GetRetryMax ( ) )		3109246	0					
ANR	3109602	Condition	job -> GetRetries ( ) < job -> GetRetryMax ( )	1573:11:47764:47801	3109246	0	True				
ANR	3109603	RelationalExpression	job -> GetRetries ( ) < job -> GetRetryMax ( )		3109246	0		<			
ANR	3109604	CallExpression	job -> GetRetries ( )		3109246	0					
ANR	3109605	Callee	job -> GetRetries		3109246	0					
ANR	3109606	PtrMemberAccess	job -> GetRetries		3109246	0					
ANR	3109607	Identifier	job		3109246	0					
ANR	3109608	Identifier	GetRetries		3109246	1					
ANR	3109609	ArgumentList			3109246	1					
ANR	3109610	CallExpression	job -> GetRetryMax ( )		3109246	1					
ANR	3109611	Callee	job -> GetRetryMax		3109246	0					
ANR	3109612	PtrMemberAccess	job -> GetRetryMax		3109246	0					
ANR	3109613	Identifier	job		3109246	0					
ANR	3109614	Identifier	GetRetryMax		3109246	1					
ANR	3109615	ArgumentList			3109246	1					
ANR	3109616	CompoundStatement		71:52:2482:2482	3109246	1					
ANR	3109617	ExpressionStatement	job -> _Status = Job :: STATUS_ERROR	1574:3:47810:47842	3109246	0	True				
ANR	3109618	AssignmentExpression	job -> _Status = Job :: STATUS_ERROR		3109246	0		=			
ANR	3109619	PtrMemberAccess	job -> _Status		3109246	0					
ANR	3109620	Identifier	job		3109246	0					
ANR	3109621	Identifier	_Status		3109246	1					
ANR	3109622	Identifier	Job :: STATUS_ERROR		3109246	1					
ANR	3109623	ExpressionStatement	"RestartNode ( job , false )"	1575:3:47847:47872	3109246	1	True				
ANR	3109624	CallExpression	"RestartNode ( job , false )"		3109246	0					
ANR	3109625	Callee	RestartNode		3109246	0					
ANR	3109626	Identifier	RestartNode		3109246	0					
ANR	3109627	ArgumentList	job		3109246	1					
ANR	3109628	Argument	job		3109246	0					
ANR	3109629	Identifier	job		3109246	0					
ANR	3109630	Argument	false		3109246	1					
ANR	3109631	Identifier	false		3109246	0					
ANR	3109632	ElseStatement	else		3109246	0					
ANR	3109633	CompoundStatement		77:7:2617:2617	3109246	0					
ANR	3109634	ExpressionStatement	_numNodesFailed ++	1580:3:47945:47962	3109246	0	True				
ANR	3109635	PostIncDecOperationExpression	_numNodesFailed ++		3109246	0					
ANR	3109636	Identifier	_numNodesFailed		3109246	0					
ANR	3109637	IncDec	++		3109246	1					
ANR	3109638	IfStatement	if ( job -> GetRetryMax ( ) > 0 )		3109246	1					
ANR	3109639	Condition	job -> GetRetryMax ( ) > 0	1581:7:47971:47992	3109246	0	True				
ANR	3109640	RelationalExpression	job -> GetRetryMax ( ) > 0		3109246	0		>			
ANR	3109641	CallExpression	job -> GetRetryMax ( )		3109246	0					
ANR	3109642	Callee	job -> GetRetryMax		3109246	0					
ANR	3109643	PtrMemberAccess	job -> GetRetryMax		3109246	0					
ANR	3109644	Identifier	job		3109246	0					
ANR	3109645	Identifier	GetRetryMax		3109246	1					
ANR	3109646	ArgumentList			3109246	1					
ANR	3109647	PrimaryExpression	0		3109246	1					
ANR	3109648	CompoundStatement		81:4:2717:2755	3109246	1					
ANR	3109649	IdentifierDeclStatement	char * tmp = strnewp ( job -> error_text ) ;	1583:4:48040:48078	3109246	0	True				
ANR	3109650	IdentifierDecl	* tmp = strnewp ( job -> error_text )		3109246	0					
ANR	3109651	IdentifierDeclType	char *		3109246	0					
ANR	3109652	Identifier	tmp		3109246	1					
ANR	3109653	AssignmentExpression	* tmp = strnewp ( job -> error_text )		3109246	2		=			
ANR	3109654	Identifier	tmp		3109246	0					
ANR	3109655	CallExpression	strnewp ( job -> error_text )		3109246	1					
ANR	3109656	Callee	strnewp		3109246	0					
ANR	3109657	Identifier	strnewp		3109246	0					
ANR	3109658	ArgumentList	job -> error_text		3109246	1					
ANR	3109659	Argument	job -> error_text		3109246	0					
ANR	3109660	PtrMemberAccess	job -> error_text		3109246	0					
ANR	3109661	Identifier	job		3109246	0					
ANR	3109662	Identifier	error_text		3109246	1					
ANR	3109663	ExpressionStatement	"snprintf ( job -> error_text , JOB_ERROR_TEXT_MAXLEN , ""%s (after %d node retries)"" , tmp , job -> GetRetries ( ) )"	1584:4:48084:48200	3109246	1	True				
ANR	3109664	CallExpression	"snprintf ( job -> error_text , JOB_ERROR_TEXT_MAXLEN , ""%s (after %d node retries)"" , tmp , job -> GetRetries ( ) )"		3109246	0					
ANR	3109665	Callee	snprintf		3109246	0					
ANR	3109666	Identifier	snprintf		3109246	0					
ANR	3109667	ArgumentList	job -> error_text		3109246	1					
ANR	3109668	Argument	job -> error_text		3109246	0					
ANR	3109669	PtrMemberAccess	job -> error_text		3109246	0					
ANR	3109670	Identifier	job		3109246	0					
ANR	3109671	Identifier	error_text		3109246	1					
ANR	3109672	Argument	JOB_ERROR_TEXT_MAXLEN		3109246	1					
ANR	3109673	Identifier	JOB_ERROR_TEXT_MAXLEN		3109246	0					
ANR	3109674	Argument	"""%s (after %d node retries)"""		3109246	2					
ANR	3109675	PrimaryExpression	"""%s (after %d node retries)"""		3109246	0					
ANR	3109676	Argument	tmp		3109246	3					
ANR	3109677	Identifier	tmp		3109246	0					
ANR	3109678	Argument	job -> GetRetries ( )		3109246	4					
ANR	3109679	CallExpression	job -> GetRetries ( )		3109246	0					
ANR	3109680	Callee	job -> GetRetries		3109246	0					
ANR	3109681	PtrMemberAccess	job -> GetRetries		3109246	0					
ANR	3109682	Identifier	job		3109246	0					
ANR	3109683	Identifier	GetRetries		3109246	1					
ANR	3109684	ArgumentList			3109246	1					
ANR	3109685	Statement	delete	1587:4:48206:48211	3109246	2	True				
ANR	3109686	Statement	[	1587:11:48213:48213	3109246	3	True				
ANR	3109687	Statement	]	1587:12:48214:48214	3109246	4	True				
ANR	3109688	ExpressionStatement	tmp	1587:14:48216:48219	3109246	5	True				
ANR	3109689	Identifier	tmp		3109246	0					
ANR	3109690	ElseStatement	else		3109246	0					
ANR	3109691	CompoundStatement		89:8:2919:2919	3109246	0					
ANR	3109692	Statement	debug_printf	1592:2:48246:48257	3109246	0	True				
ANR	3109693	Statement	(	1592:14:48258:48258	3109246	1	True				
ANR	3109694	Statement	DEBUG_NORMAL	1592:16:48260:48271	3109246	2	True				
ANR	3109695	Statement	","	1592:28:48272:48272	3109246	3	True				
ANR	3109696	Statement	"""PRE Script of Node %s completed """	1592:30:48274:48307	3109246	4	True				
ANR	3109697	Statement	"""successfully.\\n"""	1593:4:48313:48329	3109246	5	True				
ANR	3109698	Statement	","	1593:21:48330:48330	3109246	6	True				
ANR	3109699	Statement	job	1593:23:48332:48334	3109246	7	True				
ANR	3109700	Statement	->	1593:26:48335:48336	3109246	8	True				
ANR	3109701	Statement	GetJobName	1593:28:48337:48346	3109246	9	True				
ANR	3109702	Statement	(	1593:38:48347:48347	3109246	10	True				
ANR	3109703	Statement	)	1593:39:48348:48348	3109246	11	True				
ANR	3109704	Statement	)	1593:41:48350:48350	3109246	12	True				
ANR	3109705	ExpressionStatement		1593:42:48351:48351	3109246	13	True				
ANR	3109706	ExpressionStatement	job -> retval = 0	1594:2:48355:48370	3109246	14	True				
ANR	3109707	AssignmentExpression	job -> retval = 0		3109246	0		=			
ANR	3109708	PtrMemberAccess	job -> retval		3109246	0					
ANR	3109709	Identifier	job		3109246	0					
ANR	3109710	Identifier	retval		3109246	1					
ANR	3109711	PrimaryExpression	0		3109246	1					
ANR	3109712	ExpressionStatement	job -> _Status = Job :: STATUS_READY	1595:2:48399:48431	3109246	15	True				
ANR	3109713	AssignmentExpression	job -> _Status = Job :: STATUS_READY		3109246	0		=			
ANR	3109714	PtrMemberAccess	job -> _Status		3109246	0					
ANR	3109715	Identifier	job		3109246	0					
ANR	3109716	Identifier	_Status		3109246	1					
ANR	3109717	Identifier	Job :: STATUS_READY		3109246	1					
ANR	3109718	IfStatement	if ( _submitDepthFirst )		3109246	16					
ANR	3109719	Condition	_submitDepthFirst	1596:7:48440:48456	3109246	0	True				
ANR	3109720	Identifier	_submitDepthFirst		3109246	0					
ANR	3109721	CompoundStatement		94:27:3137:3137	3109246	1					
ANR	3109722	ExpressionStatement	"_readyQ -> Prepend ( job , - job -> _nodePriority )"	1597:3:48465:48509	3109246	0	True				
ANR	3109723	CallExpression	"_readyQ -> Prepend ( job , - job -> _nodePriority )"		3109246	0					
ANR	3109724	Callee	_readyQ -> Prepend		3109246	0					
ANR	3109725	PtrMemberAccess	_readyQ -> Prepend		3109246	0					
ANR	3109726	Identifier	_readyQ		3109246	0					
ANR	3109727	Identifier	Prepend		3109246	1					
ANR	3109728	ArgumentList	job		3109246	1					
ANR	3109729	Argument	job		3109246	0					
ANR	3109730	Identifier	job		3109246	0					
ANR	3109731	Argument	- job -> _nodePriority		3109246	1					
ANR	3109732	UnaryOperationExpression	- job -> _nodePriority		3109246	0					
ANR	3109733	UnaryOperator	-		3109246	0					
ANR	3109734	PtrMemberAccess	job -> _nodePriority		3109246	1					
ANR	3109735	Identifier	job		3109246	0					
ANR	3109736	Identifier	_nodePriority		3109246	1					
ANR	3109737	ElseStatement	else		3109246	0					
ANR	3109738	CompoundStatement		96:9:3197:3197	3109246	0					
ANR	3109739	ExpressionStatement	"_readyQ -> Append ( job , - job -> _nodePriority )"	1599:3:48525:48568	3109246	0	True				
ANR	3109740	CallExpression	"_readyQ -> Append ( job , - job -> _nodePriority )"		3109246	0					
ANR	3109741	Callee	_readyQ -> Append		3109246	0					
ANR	3109742	PtrMemberAccess	_readyQ -> Append		3109246	0					
ANR	3109743	Identifier	_readyQ		3109246	0					
ANR	3109744	Identifier	Append		3109246	1					
ANR	3109745	ArgumentList	job		3109246	1					
ANR	3109746	Argument	job		3109246	0					
ANR	3109747	Identifier	job		3109246	0					
ANR	3109748	Argument	- job -> _nodePriority		3109246	1					
ANR	3109749	UnaryOperationExpression	- job -> _nodePriority		3109246	0					
ANR	3109750	UnaryOperator	-		3109246	0					
ANR	3109751	PtrMemberAccess	job -> _nodePriority		3109246	1					
ANR	3109752	Identifier	job		3109246	0					
ANR	3109753	Identifier	_nodePriority		3109246	1					
ANR	3109754	ExpressionStatement	"CheckForDagAbort ( job , ""PRE script"" )"	1603:1:48579:48614	3109246	9	True				
ANR	3109755	CallExpression	"CheckForDagAbort ( job , ""PRE script"" )"		3109246	0					
ANR	3109756	Callee	CheckForDagAbort		3109246	0					
ANR	3109757	Identifier	CheckForDagAbort		3109246	0					
ANR	3109758	ArgumentList	job		3109246	1					
ANR	3109759	Argument	job		3109246	0					
ANR	3109760	Identifier	job		3109246	0					
ANR	3109761	Argument	"""PRE script"""		3109246	1					
ANR	3109762	PrimaryExpression	"""PRE script"""		3109246	0					
ANR	3109763	ReturnStatement	return true ;	1605:1:48666:48677	3109246	10	True				
ANR	3109764	Identifier	true		3109246	0					
ANR	3109765	ReturnType	int		3109246	1					
ANR	3109766	Identifier	Dag :: PreScriptReaper		3109246	2					
ANR	3109767	ParameterList	"const char * nodeName , int status"		3109246	3					
ANR	3109768	Parameter	const char * nodeName	1502:22:45287:45306	3109246	0	True				
ANR	3109769	ParameterType	const char *		3109246	0					
ANR	3109770	Identifier	nodeName		3109246	1					
ANR	3109771	Parameter	int status	1502:44:45309:45318	3109246	1	True				
ANR	3109772	ParameterType	int		3109246	0					
ANR	3109773	Identifier	status		3109246	1					
ANR	3109774	CFGEntryNode	ENTRY		3109246		True				
ANR	3109775	CFGExitNode	EXIT		3109246		True				
ANR	3109776	Symbol	nodeName		3109246						
ANR	3109777	Symbol	Job :: STATUS_PRERUN		3109246						
ANR	3109778	Symbol	DAG_ERROR_JOB_SKIPPED		3109246						
ANR	3109779	Symbol	job -> _Status		3109246						
ANR	3109780	Symbol	job -> error_text		3109246						
ANR	3109781	Symbol	job -> GetRetryMax		3109246						
ANR	3109782	Symbol	WEXITSTATUS		3109246						
ANR	3109783	Symbol	_jobstateLog		3109246						
ANR	3109784	Symbol	FindNodeByName		3109246						
ANR	3109785	Symbol	DEBUG_QUIET		3109246						
ANR	3109786	Symbol	job -> _scriptPost		3109246						
ANR	3109787	Symbol	job -> _nodePriority		3109246						
ANR	3109788	Symbol	* * job		3109246						
ANR	3109789	Symbol	job -> GetPreSkip		3109246						
ANR	3109790	Symbol	Job :: STATUS_READY		3109246						
ANR	3109791	Symbol	job -> GetRetries		3109246						
ANR	3109792	Symbol	tmp		3109246						
ANR	3109793	Symbol	daemonCore		3109246						
ANR	3109794	Symbol	_readyQ		3109246						
ANR	3109795	Symbol	strnewp		3109246						
ANR	3109796	Symbol	job -> _scriptPost -> _retValScript		3109246						
ANR	3109797	Symbol	_alwaysRunPost		3109246						
ANR	3109798	Symbol	_preRunNodeCount		3109246						
ANR	3109799	Symbol	WIFSIGNALED		3109246						
ANR	3109800	Symbol	NULL		3109246						
ANR	3109801	Symbol	JOB_ERROR_TEXT_MAXLEN		3109246						
ANR	3109802	Symbol	_submitDepthFirst		3109246						
ANR	3109803	Symbol	* job		3109246						
ANR	3109804	Symbol	job -> GetJobName		3109246						
ANR	3109805	Symbol	false		3109246						
ANR	3109806	Symbol	Job :: STATUS_ERROR		3109246						
ANR	3109807	Symbol	daemonCore -> GetExceptionString		3109246						
ANR	3109808	Symbol	job -> retval		3109246						
ANR	3109809	Symbol	job -> _scriptPost -> _retValJob		3109246						
ANR	3109810	Symbol	job -> GetStatus		3109246						
ANR	3109811	Symbol	job -> HasPreSkip		3109246						
ANR	3109812	Symbol	* daemonCore		3109246						
ANR	3109813	Symbol	true		3109246						
ANR	3109814	Symbol	_numNodesFailed		3109246						
ANR	3109815	Symbol	WTERMSIG		3109246						
ANR	3109816	Symbol	job		3109246						
ANR	3109817	Symbol	* job -> _scriptPost		3109246						
ANR	3109818	Symbol	preScriptFailed		3109246						
ANR	3109819	Symbol	status		3109246						
ANR	3109820	Function	Dag :: RunPostScript	1611:0:48805:49676							
ANR	3109821	FunctionDef	"Dag :: RunPostScript (Job * job , bool ignore_status , int status , bool incrementRunCount)"		3109820	0					
ANR	3109822	CompoundStatement		1613:0:48900:49676	3109820	0					
ANR	3109823	IfStatement	if ( ( ! ignore_status && status != 0 ) || ! job -> _scriptPost )		3109820	0					
ANR	3109824	Condition	( ! ignore_status && status != 0 ) || ! job -> _scriptPost	1617:5:49052:49105	3109820	0	True				
ANR	3109825	OrExpression	( ! ignore_status && status != 0 ) || ! job -> _scriptPost		3109820	0		||			
ANR	3109826	AndExpression	! ignore_status && status != 0		3109820	0		&&			
ANR	3109827	UnaryOperationExpression	! ignore_status		3109820	0					
ANR	3109828	UnaryOperator	!		3109820	0					
ANR	3109829	Identifier	ignore_status		3109820	1					
ANR	3109830	EqualityExpression	status != 0		3109820	1		!=			
ANR	3109831	Identifier	status		3109820	0					
ANR	3109832	PrimaryExpression	0		3109820	1					
ANR	3109833	UnaryOperationExpression	! job -> _scriptPost		3109820	1					
ANR	3109834	UnaryOperator	!		3109820	0					
ANR	3109835	PtrMemberAccess	job -> _scriptPost		3109820	1					
ANR	3109836	Identifier	job		3109820	0					
ANR	3109837	Identifier	_scriptPost		3109820	1					
ANR	3109838	CompoundStatement		5:62:208:208	3109820	1					
ANR	3109839	ReturnStatement	return false ;	1618:2:49113:49125	3109820	0	True				
ANR	3109840	Identifier	false		3109820	0					
ANR	3109841	ExpressionStatement	job -> _Status = Job :: STATUS_POSTRUN	1622:1:49240:49274	3109820	1	True				
ANR	3109842	AssignmentExpression	job -> _Status = Job :: STATUS_POSTRUN		3109820	0		=			
ANR	3109843	PtrMemberAccess	job -> _Status		3109820	0					
ANR	3109844	Identifier	job		3109820	0					
ANR	3109845	Identifier	_Status		3109820	1					
ANR	3109846	Identifier	Job :: STATUS_POSTRUN		3109820	1					
ANR	3109847	IfStatement	"if ( ! job -> MonitorLogFile ( _condorLogRdr , _storkLogRdr , _nfsLogIsError , _recovery , _defaultNodeLog ) )"		3109820	2					
ANR	3109848	Condition	"! job -> MonitorLogFile ( _condorLogRdr , _storkLogRdr , _nfsLogIsError , _recovery , _defaultNodeLog )"	1623:6:49282:49379	3109820	0	True				
ANR	3109849	UnaryOperationExpression	"! job -> MonitorLogFile ( _condorLogRdr , _storkLogRdr , _nfsLogIsError , _recovery , _defaultNodeLog )"		3109820	0					
ANR	3109850	UnaryOperator	!		3109820	0					
ANR	3109851	CallExpression	"job -> MonitorLogFile ( _condorLogRdr , _storkLogRdr , _nfsLogIsError , _recovery , _defaultNodeLog )"		3109820	1					
ANR	3109852	Callee	job -> MonitorLogFile		3109820	0					
ANR	3109853	PtrMemberAccess	job -> MonitorLogFile		3109820	0					
ANR	3109854	Identifier	job		3109820	0					
ANR	3109855	Identifier	MonitorLogFile		3109820	1					
ANR	3109856	ArgumentList	_condorLogRdr		3109820	1					
ANR	3109857	Argument	_condorLogRdr		3109820	0					
ANR	3109858	Identifier	_condorLogRdr		3109820	0					
ANR	3109859	Argument	_storkLogRdr		3109820	1					
ANR	3109860	Identifier	_storkLogRdr		3109820	0					
ANR	3109861	Argument	_nfsLogIsError		3109820	2					
ANR	3109862	Identifier	_nfsLogIsError		3109820	0					
ANR	3109863	Argument	_recovery		3109820	3					
ANR	3109864	Identifier	_recovery		3109820	0					
ANR	3109865	Argument	_defaultNodeLog		3109820	4					
ANR	3109866	Identifier	_defaultNodeLog		3109820	0					
ANR	3109867	CompoundStatement		12:50:482:482	3109820	1					
ANR	3109868	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""Unable to monitor user logfile for node %s\\n"" , job -> GetJobName ( ) )"	1625:2:49387:49483	3109820	0	True				
ANR	3109869	CallExpression	"debug_printf ( DEBUG_QUIET , ""Unable to monitor user logfile for node %s\\n"" , job -> GetJobName ( ) )"		3109820	0					
ANR	3109870	Callee	debug_printf		3109820	0					
ANR	3109871	Identifier	debug_printf		3109820	0					
ANR	3109872	ArgumentList	DEBUG_QUIET		3109820	1					
ANR	3109873	Argument	DEBUG_QUIET		3109820	0					
ANR	3109874	Identifier	DEBUG_QUIET		3109820	0					
ANR	3109875	Argument	"""Unable to monitor user logfile for node %s\\n"""		3109820	1					
ANR	3109876	PrimaryExpression	"""Unable to monitor user logfile for node %s\\n"""		3109820	0					
ANR	3109877	Argument	job -> GetJobName ( )		3109820	2					
ANR	3109878	CallExpression	job -> GetJobName ( )		3109820	0					
ANR	3109879	Callee	job -> GetJobName		3109820	0					
ANR	3109880	PtrMemberAccess	job -> GetJobName		3109820	0					
ANR	3109881	Identifier	job		3109820	0					
ANR	3109882	Identifier	GetJobName		3109820	1					
ANR	3109883	ArgumentList			3109820	1					
ANR	3109884	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""Not running the POST script\\n"" )"	1627:2:49487:49546	3109820	1	True				
ANR	3109885	CallExpression	"debug_printf ( DEBUG_QUIET , ""Not running the POST script\\n"" )"		3109820	0					
ANR	3109886	Callee	debug_printf		3109820	0					
ANR	3109887	Identifier	debug_printf		3109820	0					
ANR	3109888	ArgumentList	DEBUG_QUIET		3109820	1					
ANR	3109889	Argument	DEBUG_QUIET		3109820	0					
ANR	3109890	Identifier	DEBUG_QUIET		3109820	0					
ANR	3109891	Argument	"""Not running the POST script\\n"""		3109820	1					
ANR	3109892	PrimaryExpression	"""Not running the POST script\\n"""		3109820	0					
ANR	3109893	ReturnStatement	return false ;	1628:2:49550:49562	3109820	2	True				
ANR	3109894	Identifier	false		3109820	0					
ANR	3109895	IfStatement	if ( incrementRunCount )		3109820	3					
ANR	3109896	Condition	incrementRunCount	1630:6:49573:49589	3109820	0	True				
ANR	3109897	Identifier	incrementRunCount		3109820	0					
ANR	3109898	CompoundStatement		18:26:692:692	3109820	1					
ANR	3109899	ExpressionStatement	_postRunNodeCount ++	1631:2:49597:49616	3109820	0	True				
ANR	3109900	PostIncDecOperationExpression	_postRunNodeCount ++		3109820	0					
ANR	3109901	Identifier	_postRunNodeCount		3109820	0					
ANR	3109902	IncDec	++		3109820	1					
ANR	3109903	ExpressionStatement	_postScriptQ -> Run ( job -> _scriptPost )	1633:1:49622:49659	3109820	4	True				
ANR	3109904	CallExpression	_postScriptQ -> Run ( job -> _scriptPost )		3109820	0					
ANR	3109905	Callee	_postScriptQ -> Run		3109820	0					
ANR	3109906	PtrMemberAccess	_postScriptQ -> Run		3109820	0					
ANR	3109907	Identifier	_postScriptQ		3109820	0					
ANR	3109908	Identifier	Run		3109820	1					
ANR	3109909	ArgumentList	job -> _scriptPost		3109820	1					
ANR	3109910	Argument	job -> _scriptPost		3109820	0					
ANR	3109911	PtrMemberAccess	job -> _scriptPost		3109820	0					
ANR	3109912	Identifier	job		3109820	0					
ANR	3109913	Identifier	_scriptPost		3109820	1					
ANR	3109914	ReturnStatement	return true ;	1635:1:49663:49674	3109820	5	True				
ANR	3109915	Identifier	true		3109820	0					
ANR	3109916	ReturnType	bool		3109820	1					
ANR	3109917	Identifier	Dag :: RunPostScript		3109820	2					
ANR	3109918	ParameterList	"Job * job , bool ignore_status , int status , bool incrementRunCount"		3109820	3					
ANR	3109919	Parameter	Job * job	1611:25:48830:48837	3109820	0	True				
ANR	3109920	ParameterType	Job *		3109820	0					
ANR	3109921	Identifier	job		3109820	1					
ANR	3109922	Parameter	bool ignore_status	1611:35:48840:48857	3109820	1	True				
ANR	3109923	ParameterType	bool		3109820	0					
ANR	3109924	Identifier	ignore_status		3109820	1					
ANR	3109925	Parameter	int status	1611:55:48860:48869	3109820	2	True				
ANR	3109926	ParameterType	int		3109820	0					
ANR	3109927	Identifier	status		3109820	1					
ANR	3109928	Parameter	bool incrementRunCount	1612:3:48875:48896	3109820	3	True				
ANR	3109929	ParameterType	bool		3109820	0					
ANR	3109930	Identifier	incrementRunCount		3109820	1					
ANR	3109931	CFGEntryNode	ENTRY		3109820		True				
ANR	3109932	CFGExitNode	EXIT		3109820		True				
ANR	3109933	Symbol	_nfsLogIsError		3109820						
ANR	3109934	Symbol	_postScriptQ		3109820						
ANR	3109935	Symbol	_postRunNodeCount		3109820						
ANR	3109936	Symbol	job -> _Status		3109820						
ANR	3109937	Symbol	* job		3109820						
ANR	3109938	Symbol	job -> GetJobName		3109820						
ANR	3109939	Symbol	false		3109820						
ANR	3109940	Symbol	_defaultNodeLog		3109820						
ANR	3109941	Symbol	_condorLogRdr		3109820						
ANR	3109942	Symbol	Job :: STATUS_POSTRUN		3109820						
ANR	3109943	Symbol	DEBUG_QUIET		3109820						
ANR	3109944	Symbol	job -> _scriptPost		3109820						
ANR	3109945	Symbol	job -> MonitorLogFile		3109820						
ANR	3109946	Symbol	_recovery		3109820						
ANR	3109947	Symbol	true		3109820						
ANR	3109948	Symbol	incrementRunCount		3109820						
ANR	3109949	Symbol	job		3109820						
ANR	3109950	Symbol	_storkLogRdr		3109820						
ANR	3109951	Symbol	ignore_status		3109820						
ANR	3109952	Symbol	status		3109820						
ANR	3109953	Function	Dag :: PostScriptReaper	1641:0:49945:52597							
ANR	3109954	FunctionDef	"Dag :: PostScriptReaper (const char * nodeName , int status)"		3109953	0					
ANR	3109955	CompoundStatement		1643:0:50007:52597	3109953	0					
ANR	3109956	ExpressionStatement	ASSERT ( nodeName != NULL )	1644:1:50010:50036	3109953	0	True				
ANR	3109957	CallExpression	ASSERT ( nodeName != NULL )		3109953	0					
ANR	3109958	Callee	ASSERT		3109953	0					
ANR	3109959	Identifier	ASSERT		3109953	0					
ANR	3109960	ArgumentList	nodeName != NULL		3109953	1					
ANR	3109961	Argument	nodeName != NULL		3109953	0					
ANR	3109962	EqualityExpression	nodeName != NULL		3109953	0		!=			
ANR	3109963	Identifier	nodeName		3109953	0					
ANR	3109964	Identifier	NULL		3109953	1					
ANR	3109965	IdentifierDeclStatement	Job * job = FindNodeByName ( nodeName ) ;	1645:1:50039:50076	3109953	1	True				
ANR	3109966	IdentifierDecl	* job = FindNodeByName ( nodeName )		3109953	0					
ANR	3109967	IdentifierDeclType	Job *		3109953	0					
ANR	3109968	Identifier	job		3109953	1					
ANR	3109969	AssignmentExpression	* job = FindNodeByName ( nodeName )		3109953	2		=			
ANR	3109970	Identifier	job		3109953	0					
ANR	3109971	CallExpression	FindNodeByName ( nodeName )		3109953	1					
ANR	3109972	Callee	FindNodeByName		3109953	0					
ANR	3109973	Identifier	FindNodeByName		3109953	0					
ANR	3109974	ArgumentList	nodeName		3109953	1					
ANR	3109975	Argument	nodeName		3109953	0					
ANR	3109976	Identifier	nodeName		3109953	0					
ANR	3109977	ExpressionStatement	ASSERT ( job != NULL )	1646:1:50079:50100	3109953	2	True				
ANR	3109978	CallExpression	ASSERT ( job != NULL )		3109953	0					
ANR	3109979	Callee	ASSERT		3109953	0					
ANR	3109980	Identifier	ASSERT		3109953	0					
ANR	3109981	ArgumentList	job != NULL		3109953	1					
ANR	3109982	Argument	job != NULL		3109953	0					
ANR	3109983	EqualityExpression	job != NULL		3109953	0		!=			
ANR	3109984	Identifier	job		3109953	0					
ANR	3109985	Identifier	NULL		3109953	1					
ANR	3109986	IfStatement	if ( job -> GetStatus ( ) != Job :: STATUS_POSTRUN )		3109953	3					
ANR	3109987	Condition	job -> GetStatus ( ) != Job :: STATUS_POSTRUN	1647:6:50108:50146	3109953	0	True				
ANR	3109988	EqualityExpression	job -> GetStatus ( ) != Job :: STATUS_POSTRUN		3109953	0		!=			
ANR	3109989	CallExpression	job -> GetStatus ( )		3109953	0					
ANR	3109990	Callee	job -> GetStatus		3109953	0					
ANR	3109991	PtrMemberAccess	job -> GetStatus		3109953	0					
ANR	3109992	Identifier	job		3109953	0					
ANR	3109993	Identifier	GetStatus		3109953	1					
ANR	3109994	ArgumentList			3109953	1					
ANR	3109995	Identifier	Job :: STATUS_POSTRUN		3109953	1					
ANR	3109996	CompoundStatement		5:48:142:142	3109953	1					
ANR	3109997	ExpressionStatement	"EXCEPT ( ""Node %s is not in POSTRUN state"" , job -> GetJobName ( ) )"	1648:2:50154:50216	3109953	0	True				
ANR	3109998	CallExpression	"EXCEPT ( ""Node %s is not in POSTRUN state"" , job -> GetJobName ( ) )"		3109953	0					
ANR	3109999	Callee	EXCEPT		3109953	0					
ANR	3110000	Identifier	EXCEPT		3109953	0					
ANR	3110001	ArgumentList	"""Node %s is not in POSTRUN state"""		3109953	1					
ANR	3110002	Argument	"""Node %s is not in POSTRUN state"""		3109953	0					
ANR	3110003	PrimaryExpression	"""Node %s is not in POSTRUN state"""		3109953	0					
ANR	3110004	Argument	job -> GetJobName ( )		3109953	1					
ANR	3110005	CallExpression	job -> GetJobName ( )		3109953	0					
ANR	3110006	Callee	job -> GetJobName		3109953	0					
ANR	3110007	PtrMemberAccess	job -> GetJobName		3109953	0					
ANR	3110008	Identifier	job		3109953	0					
ANR	3110009	Identifier	GetJobName		3109953	1					
ANR	3110010	ArgumentList			3109953	1					
ANR	3110011	IdentifierDeclStatement	PostScriptTerminatedEvent e ;	1651:1:50223:50250	3109953	4	True				
ANR	3110012	IdentifierDecl	e		3109953	0					
ANR	3110013	IdentifierDeclType	PostScriptTerminatedEvent		3109953	0					
ANR	3110014	Identifier	e		3109953	1					
ANR	3110015	ExpressionStatement	e . dagNodeName = strnewp ( nodeName )	1653:1:50255:50290	3109953	5	True				
ANR	3110016	AssignmentExpression	e . dagNodeName = strnewp ( nodeName )		3109953	0		=			
ANR	3110017	MemberAccess	e . dagNodeName		3109953	0					
ANR	3110018	Identifier	e		3109953	0					
ANR	3110019	Identifier	dagNodeName		3109953	1					
ANR	3110020	CallExpression	strnewp ( nodeName )		3109953	1					
ANR	3110021	Callee	strnewp		3109953	0					
ANR	3110022	Identifier	strnewp		3109953	0					
ANR	3110023	ArgumentList	nodeName		3109953	1					
ANR	3110024	Argument	nodeName		3109953	0					
ANR	3110025	Identifier	nodeName		3109953	0					
ANR	3110026	IfStatement	if ( WIFSIGNALED ( status ) )		3109953	6					
ANR	3110027	Condition	WIFSIGNALED ( status )	1655:5:50298:50318	3109953	0	True				
ANR	3110028	CallExpression	WIFSIGNALED ( status )		3109953	0					
ANR	3110029	Callee	WIFSIGNALED		3109953	0					
ANR	3110030	Identifier	WIFSIGNALED		3109953	0					
ANR	3110031	ArgumentList	status		3109953	1					
ANR	3110032	Argument	status		3109953	0					
ANR	3110033	Identifier	status		3109953	0					
ANR	3110034	CompoundStatement		13:29:314:314	3109953	1					
ANR	3110035	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""POST script died on signal %d\\n"" , status )"	1656:2:50326:50396	3109953	0	True				
ANR	3110036	CallExpression	"debug_printf ( DEBUG_QUIET , ""POST script died on signal %d\\n"" , status )"		3109953	0					
ANR	3110037	Callee	debug_printf		3109953	0					
ANR	3110038	Identifier	debug_printf		3109953	0					
ANR	3110039	ArgumentList	DEBUG_QUIET		3109953	1					
ANR	3110040	Argument	DEBUG_QUIET		3109953	0					
ANR	3110041	Identifier	DEBUG_QUIET		3109953	0					
ANR	3110042	Argument	"""POST script died on signal %d\\n"""		3109953	1					
ANR	3110043	PrimaryExpression	"""POST script died on signal %d\\n"""		3109953	0					
ANR	3110044	Argument	status		3109953	2					
ANR	3110045	Identifier	status		3109953	0					
ANR	3110046	ExpressionStatement	e . normal = false	1657:2:50400:50416	3109953	1	True				
ANR	3110047	AssignmentExpression	e . normal = false		3109953	0		=			
ANR	3110048	MemberAccess	e . normal		3109953	0					
ANR	3110049	Identifier	e		3109953	0					
ANR	3110050	Identifier	normal		3109953	1					
ANR	3110051	Identifier	false		3109953	1					
ANR	3110052	ExpressionStatement	e . signalNumber = status	1658:2:50420:50443	3109953	2	True				
ANR	3110053	AssignmentExpression	e . signalNumber = status		3109953	0		=			
ANR	3110054	MemberAccess	e . signalNumber		3109953	0					
ANR	3110055	Identifier	e		3109953	0					
ANR	3110056	Identifier	signalNumber		3109953	1					
ANR	3110057	Identifier	status		3109953	1					
ANR	3110058	ElseStatement	else		3109953	0					
ANR	3110059	CompoundStatement		17:8:445:445	3109953	0					
ANR	3110060	ExpressionStatement	e . normal = true	1660:2:50457:50472	3109953	0	True				
ANR	3110061	AssignmentExpression	e . normal = true		3109953	0		=			
ANR	3110062	MemberAccess	e . normal		3109953	0					
ANR	3110063	Identifier	e		3109953	0					
ANR	3110064	Identifier	normal		3109953	1					
ANR	3110065	Identifier	true		3109953	1					
ANR	3110066	ExpressionStatement	e . returnValue = WEXITSTATUS ( status )	1661:2:50476:50513	3109953	1	True				
ANR	3110067	AssignmentExpression	e . returnValue = WEXITSTATUS ( status )		3109953	0		=			
ANR	3110068	MemberAccess	e . returnValue		3109953	0					
ANR	3110069	Identifier	e		3109953	0					
ANR	3110070	Identifier	returnValue		3109953	1					
ANR	3110071	CallExpression	WEXITSTATUS ( status )		3109953	1					
ANR	3110072	Callee	WEXITSTATUS		3109953	0					
ANR	3110073	Identifier	WEXITSTATUS		3109953	0					
ANR	3110074	ArgumentList	status		3109953	1					
ANR	3110075	Argument	status		3109953	0					
ANR	3110076	Identifier	status		3109953	0					
ANR	3110077	IfStatement	if ( job -> JobType ( ) == Job :: TYPE_STORK )		3109953	7					
ANR	3110078	Condition	job -> JobType ( ) == Job :: TYPE_STORK	1669:6:50809:50841	3109953	0	True				
ANR	3110079	EqualityExpression	job -> JobType ( ) == Job :: TYPE_STORK		3109953	0		==			
ANR	3110080	CallExpression	job -> JobType ( )		3109953	0					
ANR	3110081	Callee	job -> JobType		3109953	0					
ANR	3110082	PtrMemberAccess	job -> JobType		3109953	0					
ANR	3110083	Identifier	job		3109953	0					
ANR	3110084	Identifier	JobType		3109953	1					
ANR	3110085	ArgumentList			3109953	1					
ANR	3110086	Identifier	Job :: TYPE_STORK		3109953	1					
ANR	3110087	CompoundStatement		27:42:837:837	3109953	1					
ANR	3110088	ExpressionStatement	e . cluster = job -> _CondorID . _cluster	1677:2:51259:51294	3109953	0	True				
ANR	3110089	AssignmentExpression	e . cluster = job -> _CondorID . _cluster		3109953	0		=			
ANR	3110090	MemberAccess	e . cluster		3109953	0					
ANR	3110091	Identifier	e		3109953	0					
ANR	3110092	Identifier	cluster		3109953	1					
ANR	3110093	MemberAccess	job -> _CondorID . _cluster		3109953	1					
ANR	3110094	PtrMemberAccess	job -> _CondorID		3109953	0					
ANR	3110095	Identifier	job		3109953	0					
ANR	3110096	Identifier	_CondorID		3109953	1					
ANR	3110097	Identifier	_cluster		3109953	1					
ANR	3110098	ExpressionStatement	e . proc = job -> _CondorID . _proc	1678:2:51298:51327	3109953	1	True				
ANR	3110099	AssignmentExpression	e . proc = job -> _CondorID . _proc		3109953	0		=			
ANR	3110100	MemberAccess	e . proc		3109953	0					
ANR	3110101	Identifier	e		3109953	0					
ANR	3110102	Identifier	proc		3109953	1					
ANR	3110103	MemberAccess	job -> _CondorID . _proc		3109953	1					
ANR	3110104	PtrMemberAccess	job -> _CondorID		3109953	0					
ANR	3110105	Identifier	job		3109953	0					
ANR	3110106	Identifier	_CondorID		3109953	1					
ANR	3110107	Identifier	_proc		3109953	1					
ANR	3110108	ExpressionStatement	e . subproc = job -> _CondorID . _subproc	1679:2:51331:51366	3109953	2	True				
ANR	3110109	AssignmentExpression	e . subproc = job -> _CondorID . _subproc		3109953	0		=			
ANR	3110110	MemberAccess	e . subproc		3109953	0					
ANR	3110111	Identifier	e		3109953	0					
ANR	3110112	Identifier	subproc		3109953	1					
ANR	3110113	MemberAccess	job -> _CondorID . _subproc		3109953	1					
ANR	3110114	PtrMemberAccess	job -> _CondorID		3109953	0					
ANR	3110115	Identifier	job		3109953	0					
ANR	3110116	Identifier	_CondorID		3109953	1					
ANR	3110117	Identifier	_subproc		3109953	1					
ANR	3110118	ExpressionStatement	"ProcessPostTermEvent ( & e , job , _recovery )"	1680:2:51370:51410	3109953	3	True				
ANR	3110119	CallExpression	"ProcessPostTermEvent ( & e , job , _recovery )"		3109953	0					
ANR	3110120	Callee	ProcessPostTermEvent		3109953	0					
ANR	3110121	Identifier	ProcessPostTermEvent		3109953	0					
ANR	3110122	ArgumentList	& e		3109953	1					
ANR	3110123	Argument	& e		3109953	0					
ANR	3110124	UnaryOperationExpression	& e		3109953	0					
ANR	3110125	UnaryOperator	&		3109953	0					
ANR	3110126	Identifier	e		3109953	1					
ANR	3110127	Argument	job		3109953	1					
ANR	3110128	Identifier	job		3109953	0					
ANR	3110129	Argument	_recovery		3109953	2					
ANR	3110130	Identifier	_recovery		3109953	0					
ANR	3110131	ElseStatement	else		3109953	0					
ANR	3110132	CompoundStatement		52:2:1983:2016	3109953	0					
ANR	3110133	IdentifierDeclStatement	WriteUserLog ulog ;	1683:2:51425:51442	3109953	0	True				
ANR	3110134	IdentifierDecl	ulog		3109953	0					
ANR	3110135	IdentifierDeclType	WriteUserLog		3109953	0					
ANR	3110136	Identifier	ulog		3109953	1					
ANR	3110137	ExpressionStatement	ulog . setEnableGlobalLog ( false )	1688:2:51682:51714	3109953	1	True				
ANR	3110138	CallExpression	ulog . setEnableGlobalLog ( false )		3109953	0					
ANR	3110139	Callee	ulog . setEnableGlobalLog		3109953	0					
ANR	3110140	MemberAccess	ulog . setEnableGlobalLog		3109953	0					
ANR	3110141	Identifier	ulog		3109953	0					
ANR	3110142	Identifier	setEnableGlobalLog		3109953	1					
ANR	3110143	ArgumentList	false		3109953	1					
ANR	3110144	Argument	false		3109953	0					
ANR	3110145	Identifier	false		3109953	0					
ANR	3110146	ExpressionStatement	ulog . setUseXML ( job -> GetLogFileIsXml ( ) )	1689:2:51718:51758	3109953	2	True				
ANR	3110147	CallExpression	ulog . setUseXML ( job -> GetLogFileIsXml ( ) )		3109953	0					
ANR	3110148	Callee	ulog . setUseXML		3109953	0					
ANR	3110149	MemberAccess	ulog . setUseXML		3109953	0					
ANR	3110150	Identifier	ulog		3109953	0					
ANR	3110151	Identifier	setUseXML		3109953	1					
ANR	3110152	ArgumentList	job -> GetLogFileIsXml ( )		3109953	1					
ANR	3110153	Argument	job -> GetLogFileIsXml ( )		3109953	0					
ANR	3110154	CallExpression	job -> GetLogFileIsXml ( )		3109953	0					
ANR	3110155	Callee	job -> GetLogFileIsXml		3109953	0					
ANR	3110156	PtrMemberAccess	job -> GetLogFileIsXml		3109953	0					
ANR	3110157	Identifier	job		3109953	0					
ANR	3110158	Identifier	GetLogFileIsXml		3109953	1					
ANR	3110159	ArgumentList			3109953	1					
ANR	3110160	IdentifierDeclStatement	int procID = job -> GetNoop ( ) ? job -> _CondorID . _proc : 0 ;	1692:2:51869:51923	3109953	3	True				
ANR	3110161	IdentifierDecl	procID = job -> GetNoop ( ) ? job -> _CondorID . _proc : 0		3109953	0					
ANR	3110162	IdentifierDeclType	int		3109953	0					
ANR	3110163	Identifier	procID		3109953	1					
ANR	3110164	AssignmentExpression	procID = job -> GetNoop ( ) ? job -> _CondorID . _proc : 0		3109953	2		=			
ANR	3110165	Identifier	procID		3109953	0					
ANR	3110166	ConditionalExpression	job -> GetNoop ( ) ? job -> _CondorID . _proc : 0		3109953	1					
ANR	3110167	Condition	job -> GetNoop ( )		3109953	0					
ANR	3110168	CallExpression	job -> GetNoop ( )		3109953	0					
ANR	3110169	Callee	job -> GetNoop		3109953	0					
ANR	3110170	PtrMemberAccess	job -> GetNoop		3109953	0					
ANR	3110171	Identifier	job		3109953	0					
ANR	3110172	Identifier	GetNoop		3109953	1					
ANR	3110173	ArgumentList			3109953	1					
ANR	3110174	MemberAccess	job -> _CondorID . _proc		3109953	1					
ANR	3110175	PtrMemberAccess	job -> _CondorID		3109953	0					
ANR	3110176	Identifier	job		3109953	0					
ANR	3110177	Identifier	_CondorID		3109953	1					
ANR	3110178	Identifier	_proc		3109953	1					
ANR	3110179	PrimaryExpression	0		3109953	2					
ANR	3110180	IdentifierDeclStatement	int subprocID = job -> GetNoop ( ) ? job -> _CondorID . _subproc : 0 ;	1693:2:51927:51987	3109953	4	True				
ANR	3110181	IdentifierDecl	subprocID = job -> GetNoop ( ) ? job -> _CondorID . _subproc : 0		3109953	0					
ANR	3110182	IdentifierDeclType	int		3109953	0					
ANR	3110183	Identifier	subprocID		3109953	1					
ANR	3110184	AssignmentExpression	subprocID = job -> GetNoop ( ) ? job -> _CondorID . _subproc : 0		3109953	2		=			
ANR	3110185	Identifier	subprocID		3109953	0					
ANR	3110186	ConditionalExpression	job -> GetNoop ( ) ? job -> _CondorID . _subproc : 0		3109953	1					
ANR	3110187	Condition	job -> GetNoop ( )		3109953	0					
ANR	3110188	CallExpression	job -> GetNoop ( )		3109953	0					
ANR	3110189	Callee	job -> GetNoop		3109953	0					
ANR	3110190	PtrMemberAccess	job -> GetNoop		3109953	0					
ANR	3110191	Identifier	job		3109953	0					
ANR	3110192	Identifier	GetNoop		3109953	1					
ANR	3110193	ArgumentList			3109953	1					
ANR	3110194	MemberAccess	job -> _CondorID . _subproc		3109953	1					
ANR	3110195	PtrMemberAccess	job -> _CondorID		3109953	0					
ANR	3110196	Identifier	job		3109953	0					
ANR	3110197	Identifier	_CondorID		3109953	1					
ANR	3110198	Identifier	_subproc		3109953	1					
ANR	3110199	PrimaryExpression	0		3109953	2					
ANR	3110200	IdentifierDeclStatement	const char * s = job -> GetLogFile ( ) ;	1694:2:51991:52024	3109953	5	True				
ANR	3110201	IdentifierDecl	* s = job -> GetLogFile ( )		3109953	0					
ANR	3110202	IdentifierDeclType	const char *		3109953	0					
ANR	3110203	Identifier	s		3109953	1					
ANR	3110204	AssignmentExpression	* s = job -> GetLogFile ( )		3109953	2		=			
ANR	3110205	Identifier	s		3109953	0					
ANR	3110206	CallExpression	job -> GetLogFile ( )		3109953	1					
ANR	3110207	Callee	job -> GetLogFile		3109953	0					
ANR	3110208	PtrMemberAccess	job -> GetLogFile		3109953	0					
ANR	3110209	Identifier	job		3109953	0					
ANR	3110210	Identifier	GetLogFile		3109953	1					
ANR	3110211	ArgumentList			3109953	1					
ANR	3110212	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""Initializing logfile %s, %d, %d, %d\\n"" , s ? s : ""(unknown)"" , job -> _CondorID . _cluster , procID , subprocID )"	1695:2:52028:52154	3109953	6	True				
ANR	3110213	CallExpression	"debug_printf ( DEBUG_QUIET , ""Initializing logfile %s, %d, %d, %d\\n"" , s ? s : ""(unknown)"" , job -> _CondorID . _cluster , procID , subprocID )"		3109953	0					
ANR	3110214	Callee	debug_printf		3109953	0					
ANR	3110215	Identifier	debug_printf		3109953	0					
ANR	3110216	ArgumentList	DEBUG_QUIET		3109953	1					
ANR	3110217	Argument	DEBUG_QUIET		3109953	0					
ANR	3110218	Identifier	DEBUG_QUIET		3109953	0					
ANR	3110219	Argument	"""Initializing logfile %s, %d, %d, %d\\n"""		3109953	1					
ANR	3110220	PrimaryExpression	"""Initializing logfile %s, %d, %d, %d\\n"""		3109953	0					
ANR	3110221	Argument	"s ? s : ""(unknown)"""		3109953	2					
ANR	3110222	ConditionalExpression	"s ? s : ""(unknown)"""		3109953	0					
ANR	3110223	Condition	s		3109953	0					
ANR	3110224	Identifier	s		3109953	0					
ANR	3110225	Identifier	s		3109953	1					
ANR	3110226	PrimaryExpression	"""(unknown)"""		3109953	2					
ANR	3110227	Argument	job -> _CondorID . _cluster		3109953	3					
ANR	3110228	MemberAccess	job -> _CondorID . _cluster		3109953	0					
ANR	3110229	PtrMemberAccess	job -> _CondorID		3109953	0					
ANR	3110230	Identifier	job		3109953	0					
ANR	3110231	Identifier	_CondorID		3109953	1					
ANR	3110232	Identifier	_cluster		3109953	1					
ANR	3110233	Argument	procID		3109953	4					
ANR	3110234	Identifier	procID		3109953	0					
ANR	3110235	Argument	subprocID		3109953	5					
ANR	3110236	Identifier	subprocID		3109953	0					
ANR	3110237	ExpressionStatement	"ulog . initialize ( job -> GetLogFile ( ) , job -> _CondorID . _cluster , procID , subprocID , NULL )"	1697:2:52158:52251	3109953	7	True				
ANR	3110238	CallExpression	"ulog . initialize ( job -> GetLogFile ( ) , job -> _CondorID . _cluster , procID , subprocID , NULL )"		3109953	0					
ANR	3110239	Callee	ulog . initialize		3109953	0					
ANR	3110240	MemberAccess	ulog . initialize		3109953	0					
ANR	3110241	Identifier	ulog		3109953	0					
ANR	3110242	Identifier	initialize		3109953	1					
ANR	3110243	ArgumentList	job -> GetLogFile ( )		3109953	1					
ANR	3110244	Argument	job -> GetLogFile ( )		3109953	0					
ANR	3110245	CallExpression	job -> GetLogFile ( )		3109953	0					
ANR	3110246	Callee	job -> GetLogFile		3109953	0					
ANR	3110247	PtrMemberAccess	job -> GetLogFile		3109953	0					
ANR	3110248	Identifier	job		3109953	0					
ANR	3110249	Identifier	GetLogFile		3109953	1					
ANR	3110250	ArgumentList			3109953	1					
ANR	3110251	Argument	job -> _CondorID . _cluster		3109953	1					
ANR	3110252	MemberAccess	job -> _CondorID . _cluster		3109953	0					
ANR	3110253	PtrMemberAccess	job -> _CondorID		3109953	0					
ANR	3110254	Identifier	job		3109953	0					
ANR	3110255	Identifier	_CondorID		3109953	1					
ANR	3110256	Identifier	_cluster		3109953	1					
ANR	3110257	Argument	procID		3109953	2					
ANR	3110258	Identifier	procID		3109953	0					
ANR	3110259	Argument	subprocID		3109953	3					
ANR	3110260	Identifier	subprocID		3109953	0					
ANR	3110261	Argument	NULL		3109953	4					
ANR	3110262	Identifier	NULL		3109953	0					
ANR	3110263	IfStatement	if ( ! ulog . writeEvent ( & e ) )		3109953	8					
ANR	3110264	Condition	! ulog . writeEvent ( & e )	1700:6:52260:52281	3109953	0	True				
ANR	3110265	UnaryOperationExpression	! ulog . writeEvent ( & e )		3109953	0					
ANR	3110266	UnaryOperator	!		3109953	0					
ANR	3110267	CallExpression	ulog . writeEvent ( & e )		3109953	1					
ANR	3110268	Callee	ulog . writeEvent		3109953	0					
ANR	3110269	MemberAccess	ulog . writeEvent		3109953	0					
ANR	3110270	Identifier	ulog		3109953	0					
ANR	3110271	Identifier	writeEvent		3109953	1					
ANR	3110272	ArgumentList	& e		3109953	1					
ANR	3110273	Argument	& e		3109953	0					
ANR	3110274	UnaryOperationExpression	& e		3109953	0					
ANR	3110275	UnaryOperator	&		3109953	0					
ANR	3110276	Identifier	e		3109953	1					
ANR	3110277	CompoundStatement		58:31:2277:2277	3109953	1					
ANR	3110278	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""Unable to log ULOG_POST_SCRIPT_TERMINATED event\\n"" )"	1701:3:52290:52378	3109953	0	True				
ANR	3110279	CallExpression	"debug_printf ( DEBUG_QUIET , ""Unable to log ULOG_POST_SCRIPT_TERMINATED event\\n"" )"		3109953	0					
ANR	3110280	Callee	debug_printf		3109953	0					
ANR	3110281	Identifier	debug_printf		3109953	0					
ANR	3110282	ArgumentList	DEBUG_QUIET		3109953	1					
ANR	3110283	Argument	DEBUG_QUIET		3109953	0					
ANR	3110284	Identifier	DEBUG_QUIET		3109953	0					
ANR	3110285	Argument	"""Unable to log ULOG_POST_SCRIPT_TERMINATED event\\n"""		3109953	1					
ANR	3110286	PrimaryExpression	"""Unable to log ULOG_POST_SCRIPT_TERMINATED event\\n"""		3109953	0					
ANR	3110287	ExpressionStatement	main_shutdown_rescue ( EXIT_ERROR )	1706:3:52540:52574	3109953	1	True				
ANR	3110288	CallExpression	main_shutdown_rescue ( EXIT_ERROR )		3109953	0					
ANR	3110289	Callee	main_shutdown_rescue		3109953	0					
ANR	3110290	Identifier	main_shutdown_rescue		3109953	0					
ANR	3110291	ArgumentList	EXIT_ERROR		3109953	1					
ANR	3110292	Argument	EXIT_ERROR		3109953	0					
ANR	3110293	Identifier	EXIT_ERROR		3109953	0					
ANR	3110294	ReturnStatement	return true ;	1709:1:52584:52595	3109953	8	True				
ANR	3110295	Identifier	true		3109953	0					
ANR	3110296	ReturnType	int		3109953	1					
ANR	3110297	Identifier	Dag :: PostScriptReaper		3109953	2					
ANR	3110298	ParameterList	"const char * nodeName , int status"		3109953	3					
ANR	3110299	Parameter	const char * nodeName	1642:23:49972:49991	3109953	0	True				
ANR	3110300	ParameterType	const char *		3109953	0					
ANR	3110301	Identifier	nodeName		3109953	1					
ANR	3110302	Parameter	int status	1642:45:49994:50003	3109953	1	True				
ANR	3110303	ParameterType	int		3109953	0					
ANR	3110304	Identifier	status		3109953	1					
ANR	3110305	CFGEntryNode	ENTRY		3109953		True				
ANR	3110306	CFGExitNode	EXIT		3109953		True				
ANR	3110307	Symbol	nodeName		3109953						
ANR	3110308	Symbol	WEXITSTATUS		3109953						
ANR	3110309	Symbol	job -> _CondorID . _subproc		3109953						
ANR	3110310	Symbol	FindNodeByName		3109953						
ANR	3110311	Symbol	DEBUG_QUIET		3109953						
ANR	3110312	Symbol	subprocID		3109953						
ANR	3110313	Symbol	job -> _CondorID . _cluster		3109953						
ANR	3110314	Symbol	job -> GetNoop		3109953						
ANR	3110315	Symbol	e . returnValue		3109953						
ANR	3110316	Symbol	e . cluster		3109953						
ANR	3110317	Symbol	strnewp		3109953						
ANR	3110318	Symbol	ulog		3109953						
ANR	3110319	Symbol	job -> _CondorID		3109953						
ANR	3110320	Symbol	job -> GetLogFileIsXml		3109953						
ANR	3110321	Symbol	job -> GetLogFile		3109953						
ANR	3110322	Symbol	job -> _CondorID . _proc		3109953						
ANR	3110323	Symbol	WIFSIGNALED		3109953						
ANR	3110324	Symbol	NULL		3109953						
ANR	3110325	Symbol	Job :: TYPE_STORK		3109953						
ANR	3110326	Symbol	e		3109953						
ANR	3110327	Symbol	EXIT_ERROR		3109953						
ANR	3110328	Symbol	* job		3109953						
ANR	3110329	Symbol	job -> GetJobName		3109953						
ANR	3110330	Symbol	false		3109953						
ANR	3110331	Symbol	procID		3109953						
ANR	3110332	Symbol	ulog . writeEvent		3109953						
ANR	3110333	Symbol	job -> JobType		3109953						
ANR	3110334	Symbol	e . signalNumber		3109953						
ANR	3110335	Symbol	& e		3109953						
ANR	3110336	Symbol	Job :: STATUS_POSTRUN		3109953						
ANR	3110337	Symbol	e . dagNodeName		3109953						
ANR	3110338	Symbol	e . subproc		3109953						
ANR	3110339	Symbol	job -> GetStatus		3109953						
ANR	3110340	Symbol	s		3109953						
ANR	3110341	Symbol	e . proc		3109953						
ANR	3110342	Symbol	_recovery		3109953						
ANR	3110343	Symbol	true		3109953						
ANR	3110344	Symbol	job		3109953						
ANR	3110345	Symbol	status		3109953						
ANR	3110346	Symbol	e . normal		3109953						
ANR	3110347	Function	Dag :: PrintJobList	1713:0:52678:52916							
ANR	3110348	FunctionDef	Dag :: PrintJobList ()		3110347	0					
ANR	3110349	CompoundStatement		1713:31:52709:52916	3110347	0					
ANR	3110350	IdentifierDeclStatement	Job * job ;	1714:4:52715:52724	3110347	0	True				
ANR	3110351	IdentifierDecl	* job		3110347	0					
ANR	3110352	IdentifierDeclType	Job *		3110347	0					
ANR	3110353	Identifier	job		3110347	1					
ANR	3110354	IdentifierDeclStatement	ListIterator < Job > iList ( _jobs ) ;	1715:4:52730:52761	3110347	1	True				
ANR	3110355	IdentifierDecl	iList ( _jobs )		3110347	0					
ANR	3110356	IdentifierDeclType	ListIterator < Job >		3110347	0					
ANR	3110357	Identifier	iList		3110347	1					
ANR	3110358	Identifier	_jobs		3110347	2					
ANR	3110359	WhileStatement	while ( ( job = iList . Next ( ) ) != NULL )		3110347	2					
ANR	3110360	Condition	( job = iList . Next ( ) ) != NULL	1716:11:52774:52801	3110347	0	True				
ANR	3110361	EqualityExpression	( job = iList . Next ( ) ) != NULL		3110347	0		!=			
ANR	3110362	AssignmentExpression	job = iList . Next ( )		3110347	0		=			
ANR	3110363	Identifier	job		3110347	0					
ANR	3110364	CallExpression	iList . Next ( )		3110347	1					
ANR	3110365	Callee	iList . Next		3110347	0					
ANR	3110366	MemberAccess	iList . Next		3110347	0					
ANR	3110367	Identifier	iList		3110347	0					
ANR	3110368	Identifier	Next		3110347	1					
ANR	3110369	ArgumentList			3110347	1					
ANR	3110370	Identifier	NULL		3110347	1					
ANR	3110371	CompoundStatement		4:41:94:94	3110347	1					
ANR	3110372	ExpressionStatement	job -> Dump ( this )	1717:8:52814:52831	3110347	0	True				
ANR	3110373	CallExpression	job -> Dump ( this )		3110347	0					
ANR	3110374	Callee	job -> Dump		3110347	0					
ANR	3110375	PtrMemberAccess	job -> Dump		3110347	0					
ANR	3110376	Identifier	job		3110347	0					
ANR	3110377	Identifier	Dump		3110347	1					
ANR	3110378	ArgumentList	this		3110347	1					
ANR	3110379	Argument	this		3110347	0					
ANR	3110380	Identifier	this		3110347	0					
ANR	3110381	ExpressionStatement	"dprintf ( D_ALWAYS , ""---------------------------------------\\t<END>\\n"" )"	1719:4:52843:52914	3110347	3	True				
ANR	3110382	CallExpression	"dprintf ( D_ALWAYS , ""---------------------------------------\\t<END>\\n"" )"		3110347	0					
ANR	3110383	Callee	dprintf		3110347	0					
ANR	3110384	Identifier	dprintf		3110347	0					
ANR	3110385	ArgumentList	D_ALWAYS		3110347	1					
ANR	3110386	Argument	D_ALWAYS		3110347	0					
ANR	3110387	Identifier	D_ALWAYS		3110347	0					
ANR	3110388	Argument	"""---------------------------------------\\t<END>\\n"""		3110347	1					
ANR	3110389	PrimaryExpression	"""---------------------------------------\\t<END>\\n"""		3110347	0					
ANR	3110390	ReturnType	void		3110347	1					
ANR	3110391	Identifier	Dag :: PrintJobList		3110347	2					
ANR	3110392	ParameterList			3110347	3					
ANR	3110393	CFGEntryNode	ENTRY		3110347		True				
ANR	3110394	CFGExitNode	EXIT		3110347		True				
ANR	3110395	Symbol	NULL		3110347						
ANR	3110396	Symbol	this		3110347						
ANR	3110397	Symbol	D_ALWAYS		3110347						
ANR	3110398	Symbol	iList . Next		3110347						
ANR	3110399	Symbol	job		3110347						
ANR	3110400	Symbol	iList		3110347						
ANR	3110401	Function	Dag :: PrintJobList	1723:0:52997:53296							
ANR	3110402	FunctionDef	Dag :: PrintJobList (Job :: status_t status)		3110401	0					
ANR	3110403	CompoundStatement		1725:0:53050:53296	3110401	0					
ANR	3110404	IdentifierDeclStatement	Job * job ;	1726:4:53056:53064	3110401	0	True				
ANR	3110405	IdentifierDecl	* job		3110401	0					
ANR	3110406	IdentifierDeclType	Job *		3110401	0					
ANR	3110407	Identifier	job		3110401	1					
ANR	3110408	IdentifierDeclStatement	ListIterator < Job > iList ( _jobs ) ;	1727:4:53070:53102	3110401	1	True				
ANR	3110409	IdentifierDecl	iList ( _jobs )		3110401	0					
ANR	3110410	IdentifierDeclType	ListIterator < Job >		3110401	0					
ANR	3110411	Identifier	iList		3110401	1					
ANR	3110412	Identifier	_jobs		3110401	2					
ANR	3110413	WhileStatement	while ( ( job = iList . Next ( ) ) != NULL )		3110401	2					
ANR	3110414	Condition	( job = iList . Next ( ) ) != NULL	1728:11:53115:53144	3110401	0	True				
ANR	3110415	EqualityExpression	( job = iList . Next ( ) ) != NULL		3110401	0		!=			
ANR	3110416	AssignmentExpression	job = iList . Next ( )		3110401	0		=			
ANR	3110417	Identifier	job		3110401	0					
ANR	3110418	CallExpression	iList . Next ( )		3110401	1					
ANR	3110419	Callee	iList . Next		3110401	0					
ANR	3110420	MemberAccess	iList . Next		3110401	0					
ANR	3110421	Identifier	iList		3110401	0					
ANR	3110422	Identifier	Next		3110401	1					
ANR	3110423	ArgumentList			3110401	1					
ANR	3110424	Identifier	NULL		3110401	1					
ANR	3110425	CompoundStatement		4:44:97:97	3110401	1					
ANR	3110426	IfStatement	if ( job -> GetStatus ( ) == status )		3110401	0					
ANR	3110427	Condition	job -> GetStatus ( ) == status	1729:6:53156:53181	3110401	0	True				
ANR	3110428	EqualityExpression	job -> GetStatus ( ) == status		3110401	0		==			
ANR	3110429	CallExpression	job -> GetStatus ( )		3110401	0					
ANR	3110430	Callee	job -> GetStatus		3110401	0					
ANR	3110431	PtrMemberAccess	job -> GetStatus		3110401	0					
ANR	3110432	Identifier	job		3110401	0					
ANR	3110433	Identifier	GetStatus		3110401	1					
ANR	3110434	ArgumentList			3110401	1					
ANR	3110435	Identifier	status		3110401	1					
ANR	3110436	CompoundStatement		5:35:134:134	3110401	1					
ANR	3110437	ExpressionStatement	job -> Dump ( this )	1730:3:53190:53207	3110401	0	True				
ANR	3110438	CallExpression	job -> Dump ( this )		3110401	0					
ANR	3110439	Callee	job -> Dump		3110401	0					
ANR	3110440	PtrMemberAccess	job -> Dump		3110401	0					
ANR	3110441	Identifier	job		3110401	0					
ANR	3110442	Identifier	Dump		3110401	1					
ANR	3110443	ArgumentList	this		3110401	1					
ANR	3110444	Argument	this		3110401	0					
ANR	3110445	Identifier	this		3110401	0					
ANR	3110446	ExpressionStatement	"dprintf ( D_ALWAYS , ""---------------------------------------\\t<END>\\n"" )"	1733:4:53223:53294	3110401	3	True				
ANR	3110447	CallExpression	"dprintf ( D_ALWAYS , ""---------------------------------------\\t<END>\\n"" )"		3110401	0					
ANR	3110448	Callee	dprintf		3110401	0					
ANR	3110449	Identifier	dprintf		3110401	0					
ANR	3110450	ArgumentList	D_ALWAYS		3110401	1					
ANR	3110451	Argument	D_ALWAYS		3110401	0					
ANR	3110452	Identifier	D_ALWAYS		3110401	0					
ANR	3110453	Argument	"""---------------------------------------\\t<END>\\n"""		3110401	1					
ANR	3110454	PrimaryExpression	"""---------------------------------------\\t<END>\\n"""		3110401	0					
ANR	3110455	ReturnType	void		3110401	1					
ANR	3110456	Identifier	Dag :: PrintJobList		3110401	2					
ANR	3110457	ParameterList	Job :: status_t status		3110401	3					
ANR	3110458	Parameter	Job :: status_t status	1724:19:53021:53040	3110401	0	True				
ANR	3110459	ParameterType	Job :: status_t		3110401	0					
ANR	3110460	Identifier	status		3110401	1					
ANR	3110461	CFGEntryNode	ENTRY		3110401		True				
ANR	3110462	CFGExitNode	EXIT		3110401		True				
ANR	3110463	Symbol	NULL		3110401						
ANR	3110464	Symbol	* job		3110401						
ANR	3110465	Symbol	this		3110401						
ANR	3110466	Symbol	D_ALWAYS		3110401						
ANR	3110467	Symbol	iList . Next		3110401						
ANR	3110468	Symbol	job		3110401						
ANR	3110469	Symbol	iList		3110401						
ANR	3110470	Symbol	status		3110401						
ANR	3110471	Symbol	job -> GetStatus		3110401						
ANR	3110472	Function	Dag :: PrintReadyQ	1737:0:53377:53882							
ANR	3110473	FunctionDef	Dag :: PrintReadyQ (debug_level_t level)		3110472	0					
ANR	3110474	CompoundStatement		1738:46:53428:53882	3110472	0					
ANR	3110475	IfStatement	if ( DEBUG_LEVEL ( level ) )		3110472	0					
ANR	3110476	Condition	DEBUG_LEVEL ( level )	1739:5:53435:53454	3110472	0	True				
ANR	3110477	CallExpression	DEBUG_LEVEL ( level )		3110472	0					
ANR	3110478	Callee	DEBUG_LEVEL		3110472	0					
ANR	3110479	Identifier	DEBUG_LEVEL		3110472	0					
ANR	3110480	ArgumentList	level		3110472	1					
ANR	3110481	Argument	level		3110472	0					
ANR	3110482	Identifier	level		3110472	0					
ANR	3110483	CompoundStatement		9:2:188:200	3110472	1					
ANR	3110484	ExpressionStatement	"dprintf ( D_ALWAYS , ""Ready Queue: "" )"	1740:2:53462:53498	3110472	0	True				
ANR	3110485	CallExpression	"dprintf ( D_ALWAYS , ""Ready Queue: "" )"		3110472	0					
ANR	3110486	Callee	dprintf		3110472	0					
ANR	3110487	Identifier	dprintf		3110472	0					
ANR	3110488	ArgumentList	D_ALWAYS		3110472	1					
ANR	3110489	Argument	D_ALWAYS		3110472	0					
ANR	3110490	Identifier	D_ALWAYS		3110472	0					
ANR	3110491	Argument	"""Ready Queue: """		3110472	1					
ANR	3110492	PrimaryExpression	"""Ready Queue: """		3110472	0					
ANR	3110493	IfStatement	if ( _readyQ -> IsEmpty ( ) )		3110472	1					
ANR	3110494	Condition	_readyQ -> IsEmpty ( )	1741:6:53506:53523	3110472	0	True				
ANR	3110495	CallExpression	_readyQ -> IsEmpty ( )		3110472	0					
ANR	3110496	Callee	_readyQ -> IsEmpty		3110472	0					
ANR	3110497	PtrMemberAccess	_readyQ -> IsEmpty		3110472	0					
ANR	3110498	Identifier	_readyQ		3110472	0					
ANR	3110499	Identifier	IsEmpty		3110472	1					
ANR	3110500	ArgumentList			3110472	1					
ANR	3110501	CompoundStatement		4:27:98:98	3110472	1					
ANR	3110502	ExpressionStatement	"dprintf ( D_ALWAYS | D_NOHEADER , ""<empty>\\n"" )"	1742:3:53532:53577	3110472	0	True				
ANR	3110503	CallExpression	"dprintf ( D_ALWAYS | D_NOHEADER , ""<empty>\\n"" )"		3110472	0					
ANR	3110504	Callee	dprintf		3110472	0					
ANR	3110505	Identifier	dprintf		3110472	0					
ANR	3110506	ArgumentList	D_ALWAYS | D_NOHEADER		3110472	1					
ANR	3110507	Argument	D_ALWAYS | D_NOHEADER		3110472	0					
ANR	3110508	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		3110472	0		|			
ANR	3110509	Identifier	D_ALWAYS		3110472	0					
ANR	3110510	Identifier	D_NOHEADER		3110472	1					
ANR	3110511	Argument	"""<empty>\\n"""		3110472	1					
ANR	3110512	PrimaryExpression	"""<empty>\\n"""		3110472	0					
ANR	3110513	ReturnStatement	return ;	1743:3:53582:53588	3110472	1	True				
ANR	3110514	ExpressionStatement	_readyQ -> Rewind ( )	1745:2:53596:53613	3110472	2	True				
ANR	3110515	CallExpression	_readyQ -> Rewind ( )		3110472	0					
ANR	3110516	Callee	_readyQ -> Rewind		3110472	0					
ANR	3110517	PtrMemberAccess	_readyQ -> Rewind		3110472	0					
ANR	3110518	Identifier	_readyQ		3110472	0					
ANR	3110519	Identifier	Rewind		3110472	1					
ANR	3110520	ArgumentList			3110472	1					
ANR	3110521	IdentifierDeclStatement	Job * job = 0 ;	1746:2:53617:53629	3110472	3	True				
ANR	3110522	IdentifierDecl	* job = 0		3110472	0					
ANR	3110523	IdentifierDeclType	Job *		3110472	0					
ANR	3110524	Identifier	job		3110472	1					
ANR	3110525	AssignmentExpression	* job = 0		3110472	2		=			
ANR	3110526	Identifier	job		3110472	0					
ANR	3110527	PrimaryExpression	0		3110472	1					
ANR	3110528	ExpressionStatement	_readyQ -> Next ( job )	1747:2:53633:53653	3110472	4	True				
ANR	3110529	CallExpression	_readyQ -> Next ( job )		3110472	0					
ANR	3110530	Callee	_readyQ -> Next		3110472	0					
ANR	3110531	PtrMemberAccess	_readyQ -> Next		3110472	0					
ANR	3110532	Identifier	_readyQ		3110472	0					
ANR	3110533	Identifier	Next		3110472	1					
ANR	3110534	ArgumentList	job		3110472	1					
ANR	3110535	Argument	job		3110472	0					
ANR	3110536	Identifier	job		3110472	0					
ANR	3110537	IfStatement	if ( job )		3110472	5					
ANR	3110538	Condition	job	1748:6:53661:53663	3110472	0	True				
ANR	3110539	Identifier	job		3110472	0					
ANR	3110540	CompoundStatement		11:12:238:238	3110472	1					
ANR	3110541	ExpressionStatement	"dprintf ( D_ALWAYS | D_NOHEADER , ""%s"" , job -> GetJobName ( ) )"	1749:3:53672:53729	3110472	0	True				
ANR	3110542	CallExpression	"dprintf ( D_ALWAYS | D_NOHEADER , ""%s"" , job -> GetJobName ( ) )"		3110472	0					
ANR	3110543	Callee	dprintf		3110472	0					
ANR	3110544	Identifier	dprintf		3110472	0					
ANR	3110545	ArgumentList	D_ALWAYS | D_NOHEADER		3110472	1					
ANR	3110546	Argument	D_ALWAYS | D_NOHEADER		3110472	0					
ANR	3110547	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		3110472	0		|			
ANR	3110548	Identifier	D_ALWAYS		3110472	0					
ANR	3110549	Identifier	D_NOHEADER		3110472	1					
ANR	3110550	Argument	"""%s"""		3110472	1					
ANR	3110551	PrimaryExpression	"""%s"""		3110472	0					
ANR	3110552	Argument	job -> GetJobName ( )		3110472	2					
ANR	3110553	CallExpression	job -> GetJobName ( )		3110472	0					
ANR	3110554	Callee	job -> GetJobName		3110472	0					
ANR	3110555	PtrMemberAccess	job -> GetJobName		3110472	0					
ANR	3110556	Identifier	job		3110472	0					
ANR	3110557	Identifier	GetJobName		3110472	1					
ANR	3110558	ArgumentList			3110472	1					
ANR	3110559	WhileStatement	while ( _readyQ -> Next ( job ) )		3110472	6					
ANR	3110560	Condition	_readyQ -> Next ( job )	1751:9:53744:53763	3110472	0	True				
ANR	3110561	CallExpression	_readyQ -> Next ( job )		3110472	0					
ANR	3110562	Callee	_readyQ -> Next		3110472	0					
ANR	3110563	PtrMemberAccess	_readyQ -> Next		3110472	0					
ANR	3110564	Identifier	_readyQ		3110472	0					
ANR	3110565	Identifier	Next		3110472	1					
ANR	3110566	ArgumentList	job		3110472	1					
ANR	3110567	Argument	job		3110472	0					
ANR	3110568	Identifier	job		3110472	0					
ANR	3110569	CompoundStatement		14:32:338:338	3110472	1					
ANR	3110570	ExpressionStatement	"dprintf ( D_ALWAYS | D_NOHEADER , "", %s"" , job -> GetJobName ( ) )"	1752:3:53772:53831	3110472	0	True				
ANR	3110571	CallExpression	"dprintf ( D_ALWAYS | D_NOHEADER , "", %s"" , job -> GetJobName ( ) )"		3110472	0					
ANR	3110572	Callee	dprintf		3110472	0					
ANR	3110573	Identifier	dprintf		3110472	0					
ANR	3110574	ArgumentList	D_ALWAYS | D_NOHEADER		3110472	1					
ANR	3110575	Argument	D_ALWAYS | D_NOHEADER		3110472	0					
ANR	3110576	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		3110472	0		|			
ANR	3110577	Identifier	D_ALWAYS		3110472	0					
ANR	3110578	Identifier	D_NOHEADER		3110472	1					
ANR	3110579	Argument	""", %s"""		3110472	1					
ANR	3110580	PrimaryExpression	""", %s"""		3110472	0					
ANR	3110581	Argument	job -> GetJobName ( )		3110472	2					
ANR	3110582	CallExpression	job -> GetJobName ( )		3110472	0					
ANR	3110583	Callee	job -> GetJobName		3110472	0					
ANR	3110584	PtrMemberAccess	job -> GetJobName		3110472	0					
ANR	3110585	Identifier	job		3110472	0					
ANR	3110586	Identifier	GetJobName		3110472	1					
ANR	3110587	ArgumentList			3110472	1					
ANR	3110588	ExpressionStatement	"dprintf ( D_ALWAYS | D_NOHEADER , ""\\n"" )"	1754:2:53839:53877	3110472	7	True				
ANR	3110589	CallExpression	"dprintf ( D_ALWAYS | D_NOHEADER , ""\\n"" )"		3110472	0					
ANR	3110590	Callee	dprintf		3110472	0					
ANR	3110591	Identifier	dprintf		3110472	0					
ANR	3110592	ArgumentList	D_ALWAYS | D_NOHEADER		3110472	1					
ANR	3110593	Argument	D_ALWAYS | D_NOHEADER		3110472	0					
ANR	3110594	InclusiveOrExpression	D_ALWAYS | D_NOHEADER		3110472	0		|			
ANR	3110595	Identifier	D_ALWAYS		3110472	0					
ANR	3110596	Identifier	D_NOHEADER		3110472	1					
ANR	3110597	Argument	"""\\n"""		3110472	1					
ANR	3110598	PrimaryExpression	"""\\n"""		3110472	0					
ANR	3110599	ReturnType	void		3110472	1					
ANR	3110600	Identifier	Dag :: PrintReadyQ		3110472	2					
ANR	3110601	ParameterList	debug_level_t level		3110472	3					
ANR	3110602	Parameter	debug_level_t level	1738:18:53400:53418	3110472	0	True				
ANR	3110603	ParameterType	debug_level_t		3110472	0					
ANR	3110604	Identifier	level		3110472	1					
ANR	3110605	CFGEntryNode	ENTRY		3110472		True				
ANR	3110606	CFGExitNode	EXIT		3110472		True				
ANR	3110607	Symbol	DEBUG_LEVEL		3110472						
ANR	3110608	Symbol	* _readyQ		3110472						
ANR	3110609	Symbol	level		3110472						
ANR	3110610	Symbol	* job		3110472						
ANR	3110611	Symbol	job -> GetJobName		3110472						
ANR	3110612	Symbol	D_ALWAYS		3110472						
ANR	3110613	Symbol	_readyQ		3110472						
ANR	3110614	Symbol	_readyQ -> Next		3110472						
ANR	3110615	Symbol	job		3110472						
ANR	3110616	Symbol	_readyQ -> IsEmpty		3110472						
ANR	3110617	Symbol	D_NOHEADER		3110472						
ANR	3110618	Function	Dag :: RemoveRunningJobs	1763:0:54194:55855							
ANR	3110619	FunctionDef	"Dag :: RemoveRunningJobs (const Dagman & dm , bool bForce)"		3110618	0					
ANR	3110620	CompoundStatement		1763:67:54261:55855	3110618	0					
ANR	3110621	Statement	debug_printf	1765:1:54265:54276	3110618	0	True				
ANR	3110622	Statement	(	1765:13:54277:54277	3110618	1	True				
ANR	3110623	Statement	DEBUG_NORMAL	1765:15:54279:54290	3110618	2	True				
ANR	3110624	Statement	","	1765:27:54291:54291	3110618	3	True				
ANR	3110625	Statement	"""Removing any/all submitted Condor/"""	1765:29:54293:54328	3110618	4	True				
ANR	3110626	Statement	"""Stork jobs...\\n"""	1766:4:54334:54350	3110618	5	True				
ANR	3110627	Statement	)	1766:21:54351:54351	3110618	6	True				
ANR	3110628	ExpressionStatement		1766:22:54352:54352	3110618	7	True				
ANR	3110629	IdentifierDeclStatement	ArgList args ;	1768:1:54356:54368	3110618	8	True				
ANR	3110630	IdentifierDecl	args		3110618	0					
ANR	3110631	IdentifierDeclType	ArgList		3110618	0					
ANR	3110632	Identifier	args		3110618	1					
ANR	3110633	IdentifierDeclStatement	bool haveCondorJob = bForce ;	1773:1:54524:54551	3110618	9	True				
ANR	3110634	IdentifierDecl	haveCondorJob = bForce		3110618	0					
ANR	3110635	IdentifierDeclType	bool		3110618	0					
ANR	3110636	Identifier	haveCondorJob		3110618	1					
ANR	3110637	AssignmentExpression	haveCondorJob = bForce		3110618	2		=			
ANR	3110638	Identifier	bForce		3110618	0					
ANR	3110639	Identifier	bForce		3110618	1					
ANR	3110640	IdentifierDeclStatement	ListIterator < Job > jobList ( _jobs ) ;	1774:4:54557:54589	3110618	10	True				
ANR	3110641	IdentifierDecl	jobList ( _jobs )		3110618	0					
ANR	3110642	IdentifierDeclType	ListIterator < Job >		3110618	0					
ANR	3110643	Identifier	jobList		3110618	1					
ANR	3110644	Identifier	_jobs		3110618	2					
ANR	3110645	IdentifierDeclStatement	Job * job ;	1775:4:54595:54604	3110618	11	True				
ANR	3110646	IdentifierDecl	* job		3110618	0					
ANR	3110647	IdentifierDeclType	Job *		3110618	0					
ANR	3110648	Identifier	job		3110618	1					
ANR	3110649	WhileStatement	while ( jobList . Next ( job ) )		3110618	12					
ANR	3110650	Condition	jobList . Next ( job )	1776:11:54617:54633	3110618	0	True				
ANR	3110651	CallExpression	jobList . Next ( job )		3110618	0					
ANR	3110652	Callee	jobList . Next		3110618	0					
ANR	3110653	MemberAccess	jobList . Next		3110618	0					
ANR	3110654	Identifier	jobList		3110618	0					
ANR	3110655	Identifier	Next		3110618	1					
ANR	3110656	ArgumentList	job		3110618	1					
ANR	3110657	Argument	job		3110618	0					
ANR	3110658	Identifier	job		3110618	0					
ANR	3110659	CompoundStatement		14:30:374:374	3110618	1					
ANR	3110660	ExpressionStatement	ASSERT ( job != NULL )	1777:2:54640:54661	3110618	0	True				
ANR	3110661	CallExpression	ASSERT ( job != NULL )		3110618	0					
ANR	3110662	Callee	ASSERT		3110618	0					
ANR	3110663	Identifier	ASSERT		3110618	0					
ANR	3110664	ArgumentList	job != NULL		3110618	1					
ANR	3110665	Argument	job != NULL		3110618	0					
ANR	3110666	EqualityExpression	job != NULL		3110618	0		!=			
ANR	3110667	Identifier	job		3110618	0					
ANR	3110668	Identifier	NULL		3110618	1					
ANR	3110669	IfStatement	if ( job -> JobType ( ) == Job :: TYPE_CONDOR )		3110618	1					
ANR	3110670	Condition	job -> JobType ( ) == Job :: TYPE_CONDOR	1778:7:54670:54703	3110618	0	True				
ANR	3110671	EqualityExpression	job -> JobType ( ) == Job :: TYPE_CONDOR		3110618	0		==			
ANR	3110672	CallExpression	job -> JobType ( )		3110618	0					
ANR	3110673	Callee	job -> JobType		3110618	0					
ANR	3110674	PtrMemberAccess	job -> JobType		3110618	0					
ANR	3110675	Identifier	job		3110618	0					
ANR	3110676	Identifier	JobType		3110618	1					
ANR	3110677	ArgumentList			3110618	1					
ANR	3110678	Identifier	Job :: TYPE_CONDOR		3110618	1					
ANR	3110679	CompoundStatement		16:44:445:445	3110618	1					
ANR	3110680	ExpressionStatement	haveCondorJob = true	1779:3:54712:54732	3110618	0	True				
ANR	3110681	AssignmentExpression	haveCondorJob = true		3110618	0		=			
ANR	3110682	Identifier	haveCondorJob		3110618	0					
ANR	3110683	Identifier	true		3110618	1					
ANR	3110684	BreakStatement	break ;	1780:3:54737:54742	3110618	1	True				
ANR	3110685	IfStatement	if ( haveCondorJob )		3110618	13					
ANR	3110686	Condition	haveCondorJob	1784:6:54758:54770	3110618	0	True				
ANR	3110687	Identifier	haveCondorJob		3110618	0					
ANR	3110688	CompoundStatement		23:2:516:535	3110618	1					
ANR	3110689	IdentifierDeclStatement	MyString constraint ;	1785:2:54778:54797	3110618	0	True				
ANR	3110690	IdentifierDecl	constraint		3110618	0					
ANR	3110691	IdentifierDeclType	MyString		3110618	0					
ANR	3110692	Identifier	constraint		3110618	1					
ANR	3110693	ExpressionStatement	args . Clear ( )	1787:2:54802:54814	3110618	1	True				
ANR	3110694	CallExpression	args . Clear ( )		3110618	0					
ANR	3110695	Callee	args . Clear		3110618	0					
ANR	3110696	MemberAccess	args . Clear		3110618	0					
ANR	3110697	Identifier	args		3110618	0					
ANR	3110698	Identifier	Clear		3110618	1					
ANR	3110699	ArgumentList			3110618	1					
ANR	3110700	ExpressionStatement	args . AppendArg ( _condorRmExe )	1788:2:54818:54848	3110618	2	True				
ANR	3110701	CallExpression	args . AppendArg ( _condorRmExe )		3110618	0					
ANR	3110702	Callee	args . AppendArg		3110618	0					
ANR	3110703	MemberAccess	args . AppendArg		3110618	0					
ANR	3110704	Identifier	args		3110618	0					
ANR	3110705	Identifier	AppendArg		3110618	1					
ANR	3110706	ArgumentList	_condorRmExe		3110618	1					
ANR	3110707	Argument	_condorRmExe		3110618	0					
ANR	3110708	Identifier	_condorRmExe		3110618	0					
ANR	3110709	ExpressionStatement	"args . AppendArg ( ""-const"" )"	1789:2:54852:54878	3110618	3	True				
ANR	3110710	CallExpression	"args . AppendArg ( ""-const"" )"		3110618	0					
ANR	3110711	Callee	args . AppendArg		3110618	0					
ANR	3110712	MemberAccess	args . AppendArg		3110618	0					
ANR	3110713	Identifier	args		3110618	0					
ANR	3110714	Identifier	AppendArg		3110618	1					
ANR	3110715	ArgumentList	"""-const"""		3110618	1					
ANR	3110716	Argument	"""-const"""		3110618	0					
ANR	3110717	PrimaryExpression	"""-const"""		3110618	0					
ANR	3110718	ExpressionStatement	"constraint . sprintf ( ""%s == %d"" , ATTR_DAGMAN_JOB_ID , dm . DAGManJobId . _cluster )"	1791:2:54883:54965	3110618	4	True				
ANR	3110719	CallExpression	"constraint . sprintf ( ""%s == %d"" , ATTR_DAGMAN_JOB_ID , dm . DAGManJobId . _cluster )"		3110618	0					
ANR	3110720	Callee	constraint . sprintf		3110618	0					
ANR	3110721	MemberAccess	constraint . sprintf		3110618	0					
ANR	3110722	Identifier	constraint		3110618	0					
ANR	3110723	Identifier	sprintf		3110618	1					
ANR	3110724	ArgumentList	"""%s == %d"""		3110618	1					
ANR	3110725	Argument	"""%s == %d"""		3110618	0					
ANR	3110726	PrimaryExpression	"""%s == %d"""		3110618	0					
ANR	3110727	Argument	ATTR_DAGMAN_JOB_ID		3110618	1					
ANR	3110728	Identifier	ATTR_DAGMAN_JOB_ID		3110618	0					
ANR	3110729	Argument	dm . DAGManJobId . _cluster		3110618	2					
ANR	3110730	MemberAccess	dm . DAGManJobId . _cluster		3110618	0					
ANR	3110731	MemberAccess	dm . DAGManJobId		3110618	0					
ANR	3110732	Identifier	dm		3110618	0					
ANR	3110733	Identifier	DAGManJobId		3110618	1					
ANR	3110734	Identifier	_cluster		3110618	1					
ANR	3110735	ExpressionStatement	args . AppendArg ( constraint . Value ( ) )	1793:2:54969:55005	3110618	5	True				
ANR	3110736	CallExpression	args . AppendArg ( constraint . Value ( ) )		3110618	0					
ANR	3110737	Callee	args . AppendArg		3110618	0					
ANR	3110738	MemberAccess	args . AppendArg		3110618	0					
ANR	3110739	Identifier	args		3110618	0					
ANR	3110740	Identifier	AppendArg		3110618	1					
ANR	3110741	ArgumentList	constraint . Value ( )		3110618	1					
ANR	3110742	Argument	constraint . Value ( )		3110618	0					
ANR	3110743	CallExpression	constraint . Value ( )		3110618	0					
ANR	3110744	Callee	constraint . Value		3110618	0					
ANR	3110745	MemberAccess	constraint . Value		3110618	0					
ANR	3110746	Identifier	constraint		3110618	0					
ANR	3110747	Identifier	Value		3110618	1					
ANR	3110748	ArgumentList			3110618	1					
ANR	3110749	IfStatement	if ( util_popen ( args ) != 0 )		3110618	6					
ANR	3110750	Condition	util_popen ( args ) != 0	1794:7:55014:55036	3110618	0	True				
ANR	3110751	EqualityExpression	util_popen ( args ) != 0		3110618	0		!=			
ANR	3110752	CallExpression	util_popen ( args )		3110618	0					
ANR	3110753	Callee	util_popen		3110618	0					
ANR	3110754	Identifier	util_popen		3110618	0					
ANR	3110755	ArgumentList	args		3110618	1					
ANR	3110756	Argument	args		3110618	0					
ANR	3110757	Identifier	args		3110618	0					
ANR	3110758	PrimaryExpression	0		3110618	1					
ANR	3110759	CompoundStatement		32:33:778:778	3110618	1					
ANR	3110760	ExpressionStatement	"debug_printf ( DEBUG_NORMAL , ""Error removing DAGMan jobs\\n"" )"	1795:3:55045:55104	3110618	0	True				
ANR	3110761	CallExpression	"debug_printf ( DEBUG_NORMAL , ""Error removing DAGMan jobs\\n"" )"		3110618	0					
ANR	3110762	Callee	debug_printf		3110618	0					
ANR	3110763	Identifier	debug_printf		3110618	0					
ANR	3110764	ArgumentList	DEBUG_NORMAL		3110618	1					
ANR	3110765	Argument	DEBUG_NORMAL		3110618	0					
ANR	3110766	Identifier	DEBUG_NORMAL		3110618	0					
ANR	3110767	Argument	"""Error removing DAGMan jobs\\n"""		3110618	1					
ANR	3110768	PrimaryExpression	"""Error removing DAGMan jobs\\n"""		3110618	0					
ANR	3110769	IdentifierDeclStatement	ListIterator < Job > iList ( _jobs ) ;	1801:4:55159:55189	3110618	14	True				
ANR	3110770	IdentifierDecl	iList ( _jobs )		3110618	0					
ANR	3110771	IdentifierDeclType	ListIterator < Job >		3110618	0					
ANR	3110772	Identifier	iList		3110618	1					
ANR	3110773	Identifier	_jobs		3110618	2					
ANR	3110774	WhileStatement	while ( iList . Next ( job ) )		3110618	15					
ANR	3110775	Condition	iList . Next ( job )	1802:11:55202:55216	3110618	0	True				
ANR	3110776	CallExpression	iList . Next ( job )		3110618	0					
ANR	3110777	Callee	iList . Next		3110618	0					
ANR	3110778	MemberAccess	iList . Next		3110618	0					
ANR	3110779	Identifier	iList		3110618	0					
ANR	3110780	Identifier	Next		3110618	1					
ANR	3110781	ArgumentList	job		3110618	1					
ANR	3110782	Argument	job		3110618	0					
ANR	3110783	Identifier	job		3110618	0					
ANR	3110784	CompoundStatement		40:28:957:957	3110618	1					
ANR	3110785	ExpressionStatement	ASSERT ( job != NULL )	1803:2:55223:55244	3110618	0	True				
ANR	3110786	CallExpression	ASSERT ( job != NULL )		3110618	0					
ANR	3110787	Callee	ASSERT		3110618	0					
ANR	3110788	Identifier	ASSERT		3110618	0					
ANR	3110789	ArgumentList	job != NULL		3110618	1					
ANR	3110790	Argument	job != NULL		3110618	0					
ANR	3110791	EqualityExpression	job != NULL		3110618	0		!=			
ANR	3110792	Identifier	job		3110618	0					
ANR	3110793	Identifier	NULL		3110618	1					
ANR	3110794	IfStatement	if ( job -> JobType ( ) == Job :: TYPE_STORK && job -> GetStatus ( ) == Job :: STATUS_SUBMITTED )		3110618	1					
ANR	3110795	Condition	job -> JobType ( ) == Job :: TYPE_STORK && job -> GetStatus ( ) == Job :: STATUS_SUBMITTED	1809:6:55543:55623	3110618	0	True				
ANR	3110796	AndExpression	job -> JobType ( ) == Job :: TYPE_STORK && job -> GetStatus ( ) == Job :: STATUS_SUBMITTED		3110618	0		&&			
ANR	3110797	EqualityExpression	job -> JobType ( ) == Job :: TYPE_STORK		3110618	0		==			
ANR	3110798	CallExpression	job -> JobType ( )		3110618	0					
ANR	3110799	Callee	job -> JobType		3110618	0					
ANR	3110800	PtrMemberAccess	job -> JobType		3110618	0					
ANR	3110801	Identifier	job		3110618	0					
ANR	3110802	Identifier	JobType		3110618	1					
ANR	3110803	ArgumentList			3110618	1					
ANR	3110804	Identifier	Job :: TYPE_STORK		3110618	1					
ANR	3110805	EqualityExpression	job -> GetStatus ( ) == Job :: STATUS_SUBMITTED		3110618	1		==			
ANR	3110806	CallExpression	job -> GetStatus ( )		3110618	0					
ANR	3110807	Callee	job -> GetStatus		3110618	0					
ANR	3110808	PtrMemberAccess	job -> GetStatus		3110618	0					
ANR	3110809	Identifier	job		3110618	0					
ANR	3110810	Identifier	GetStatus		3110618	1					
ANR	3110811	ArgumentList			3110618	1					
ANR	3110812	Identifier	Job :: STATUS_SUBMITTED		3110618	1					
ANR	3110813	CompoundStatement		48:47:1365:1365	3110618	1					
ANR	3110814	ExpressionStatement	args . Clear ( )	1811:3:55632:55644	3110618	0	True				
ANR	3110815	CallExpression	args . Clear ( )		3110618	0					
ANR	3110816	Callee	args . Clear		3110618	0					
ANR	3110817	MemberAccess	args . Clear		3110618	0					
ANR	3110818	Identifier	args		3110618	0					
ANR	3110819	Identifier	Clear		3110618	1					
ANR	3110820	ArgumentList			3110618	1					
ANR	3110821	ExpressionStatement	args . AppendArg ( dm . storkRmExe )	1812:3:55649:55680	3110618	1	True				
ANR	3110822	CallExpression	args . AppendArg ( dm . storkRmExe )		3110618	0					
ANR	3110823	Callee	args . AppendArg		3110618	0					
ANR	3110824	MemberAccess	args . AppendArg		3110618	0					
ANR	3110825	Identifier	args		3110618	0					
ANR	3110826	Identifier	AppendArg		3110618	1					
ANR	3110827	ArgumentList	dm . storkRmExe		3110618	1					
ANR	3110828	Argument	dm . storkRmExe		3110618	0					
ANR	3110829	MemberAccess	dm . storkRmExe		3110618	0					
ANR	3110830	Identifier	dm		3110618	0					
ANR	3110831	Identifier	storkRmExe		3110618	1					
ANR	3110832	ExpressionStatement	args . AppendArg ( job -> _CondorID . _cluster )	1813:3:55685:55726	3110618	2	True				
ANR	3110833	CallExpression	args . AppendArg ( job -> _CondorID . _cluster )		3110618	0					
ANR	3110834	Callee	args . AppendArg		3110618	0					
ANR	3110835	MemberAccess	args . AppendArg		3110618	0					
ANR	3110836	Identifier	args		3110618	0					
ANR	3110837	Identifier	AppendArg		3110618	1					
ANR	3110838	ArgumentList	job -> _CondorID . _cluster		3110618	1					
ANR	3110839	Argument	job -> _CondorID . _cluster		3110618	0					
ANR	3110840	MemberAccess	job -> _CondorID . _cluster		3110618	0					
ANR	3110841	PtrMemberAccess	job -> _CondorID		3110618	0					
ANR	3110842	Identifier	job		3110618	0					
ANR	3110843	Identifier	_CondorID		3110618	1					
ANR	3110844	Identifier	_cluster		3110618	1					
ANR	3110845	IfStatement	if ( util_popen ( args ) != 0 )		3110618	3					
ANR	3110846	Condition	util_popen ( args ) != 0	1814:8:55736:55758	3110618	0	True				
ANR	3110847	EqualityExpression	util_popen ( args ) != 0		3110618	0		!=			
ANR	3110848	CallExpression	util_popen ( args )		3110618	0					
ANR	3110849	Callee	util_popen		3110618	0					
ANR	3110850	Identifier	util_popen		3110618	0					
ANR	3110851	ArgumentList	args		3110618	1					
ANR	3110852	Argument	args		3110618	0					
ANR	3110853	Identifier	args		3110618	0					
ANR	3110854	PrimaryExpression	0		3110618	1					
ANR	3110855	CompoundStatement		52:34:1500:1500	3110618	1					
ANR	3110856	ExpressionStatement	"debug_printf ( DEBUG_NORMAL , ""Error removing Stork job\\n"" )"	1815:4:55768:55825	3110618	0	True				
ANR	3110857	CallExpression	"debug_printf ( DEBUG_NORMAL , ""Error removing Stork job\\n"" )"		3110618	0					
ANR	3110858	Callee	debug_printf		3110618	0					
ANR	3110859	Identifier	debug_printf		3110618	0					
ANR	3110860	ArgumentList	DEBUG_NORMAL		3110618	1					
ANR	3110861	Argument	DEBUG_NORMAL		3110618	0					
ANR	3110862	Identifier	DEBUG_NORMAL		3110618	0					
ANR	3110863	Argument	"""Error removing Stork job\\n"""		3110618	1					
ANR	3110864	PrimaryExpression	"""Error removing Stork job\\n"""		3110618	0					
ANR	3110865	ReturnStatement	return ;	1820:1:55847:55853	3110618	16	True				
ANR	3110866	ReturnType	void		3110618	1					
ANR	3110867	Identifier	Dag :: RemoveRunningJobs		3110618	2					
ANR	3110868	ParameterList	"const Dagman & dm , bool bForce"		3110618	3					
ANR	3110869	Parameter	const Dagman & dm	1763:30:54224:54239	3110618	0	True				
ANR	3110870	ParameterType	const Dagman &		3110618	0					
ANR	3110871	Identifier	dm		3110618	1					
ANR	3110872	Parameter	bool bForce	1763:48:54242:54252	3110618	1	True				
ANR	3110873	ParameterType	bool		3110618	0					
ANR	3110874	Identifier	bForce		3110618	1					
ANR	3110875	CFGEntryNode	ENTRY		3110618		True				
ANR	3110876	CFGExitNode	EXIT		3110618		True				
ANR	3110877	Symbol	constraint . Value		3110618						
ANR	3110878	Symbol	dm		3110618						
ANR	3110879	Symbol	DEBUG_NORMAL		3110618						
ANR	3110880	Symbol	iList . Next		3110618						
ANR	3110881	Symbol	iList		3110618						
ANR	3110882	Symbol	dm . DAGManJobId		3110618						
ANR	3110883	Symbol	Job :: TYPE_CONDOR		3110618						
ANR	3110884	Symbol	job -> _CondorID . _cluster		3110618						
ANR	3110885	Symbol	jobList . Next		3110618						
ANR	3110886	Symbol	job -> _CondorID		3110618						
ANR	3110887	Symbol	bForce		3110618						
ANR	3110888	Symbol	NULL		3110618						
ANR	3110889	Symbol	Job :: TYPE_STORK		3110618						
ANR	3110890	Symbol	dm . storkRmExe		3110618						
ANR	3110891	Symbol	* job		3110618						
ANR	3110892	Symbol	job -> JobType		3110618						
ANR	3110893	Symbol	ATTR_DAGMAN_JOB_ID		3110618						
ANR	3110894	Symbol	haveCondorJob		3110618						
ANR	3110895	Symbol	job -> GetStatus		3110618						
ANR	3110896	Symbol	args		3110618						
ANR	3110897	Symbol	Job :: STATUS_SUBMITTED		3110618						
ANR	3110898	Symbol	_condorRmExe		3110618						
ANR	3110899	Symbol	util_popen		3110618						
ANR	3110900	Symbol	true		3110618						
ANR	3110901	Symbol	constraint		3110618						
ANR	3110902	Symbol	jobList		3110618						
ANR	3110903	Symbol	job		3110618						
ANR	3110904	Symbol	dm . DAGManJobId . _cluster		3110618						
ANR	3110905	Function	Dag :: RemoveRunningScripts	1824:0:55936:57279							
ANR	3110906	FunctionDef	Dag :: RemoveRunningScripts ()		3110905	0					
ANR	3110907	CompoundStatement		1824:41:55977:57279	3110905	0					
ANR	3110908	IdentifierDeclStatement	ListIterator < Job > iList ( _jobs ) ;	1825:4:55983:56013	3110905	0	True				
ANR	3110909	IdentifierDecl	iList ( _jobs )		3110905	0					
ANR	3110910	IdentifierDeclType	ListIterator < Job >		3110905	0					
ANR	3110911	Identifier	iList		3110905	1					
ANR	3110912	Identifier	_jobs		3110905	2					
ANR	3110913	IdentifierDeclStatement	Job * job ;	1826:4:56019:56028	3110905	1	True				
ANR	3110914	IdentifierDecl	* job		3110905	0					
ANR	3110915	IdentifierDeclType	Job *		3110905	0					
ANR	3110916	Identifier	job		3110905	1					
ANR	3110917	WhileStatement	while ( iList . Next ( job ) )		3110905	2					
ANR	3110918	Condition	iList . Next ( job )	1827:11:56041:56055	3110905	0	True				
ANR	3110919	CallExpression	iList . Next ( job )		3110905	0					
ANR	3110920	Callee	iList . Next		3110905	0					
ANR	3110921	MemberAccess	iList . Next		3110905	0					
ANR	3110922	Identifier	iList		3110905	0					
ANR	3110923	Identifier	Next		3110905	1					
ANR	3110924	ArgumentList	job		3110905	1					
ANR	3110925	Argument	job		3110905	0					
ANR	3110926	Identifier	job		3110905	0					
ANR	3110927	CompoundStatement		4:28:80:80	3110905	1					
ANR	3110928	ExpressionStatement	ASSERT ( job != NULL )	1828:2:56062:56083	3110905	0	True				
ANR	3110929	CallExpression	ASSERT ( job != NULL )		3110905	0					
ANR	3110930	Callee	ASSERT		3110905	0					
ANR	3110931	Identifier	ASSERT		3110905	0					
ANR	3110932	ArgumentList	job != NULL		3110905	1					
ANR	3110933	Argument	job != NULL		3110905	0					
ANR	3110934	EqualityExpression	job != NULL		3110905	0		!=			
ANR	3110935	Identifier	job		3110905	0					
ANR	3110936	Identifier	NULL		3110905	1					
ANR	3110937	IfStatement	if ( job -> GetStatus ( ) == Job :: STATUS_PRERUN )		3110905	1					
ANR	3110938	Condition	job -> GetStatus ( ) == Job :: STATUS_PRERUN	1831:12:56149:56186	3110905	0	True				
ANR	3110939	EqualityExpression	job -> GetStatus ( ) == Job :: STATUS_PRERUN		3110905	0		==			
ANR	3110940	CallExpression	job -> GetStatus ( )		3110905	0					
ANR	3110941	Callee	job -> GetStatus		3110905	0					
ANR	3110942	PtrMemberAccess	job -> GetStatus		3110905	0					
ANR	3110943	Identifier	job		3110905	0					
ANR	3110944	Identifier	GetStatus		3110905	1					
ANR	3110945	ArgumentList			3110905	1					
ANR	3110946	Identifier	Job :: STATUS_PRERUN		3110905	1					
ANR	3110947	CompoundStatement		8:53:212:212	3110905	1					
ANR	3110948	IfStatement	if ( ! job -> _scriptPre )		3110905	0					
ANR	3110949	Condition	! job -> _scriptPre	1832:8:56200:56215	3110905	0	True				
ANR	3110950	UnaryOperationExpression	! job -> _scriptPre		3110905	0					
ANR	3110951	UnaryOperator	!		3110905	0					
ANR	3110952	PtrMemberAccess	job -> _scriptPre		3110905	1					
ANR	3110953	Identifier	job		3110905	0					
ANR	3110954	Identifier	_scriptPre		3110905	1					
ANR	3110955	CompoundStatement		9:27:241:241	3110905	1					
ANR	3110956	ExpressionStatement	"EXCEPT ( ""Node %s has no PRE script!"" , job -> GetJobName ( ) )"	1833:4:56225:56282	3110905	0	True				
ANR	3110957	CallExpression	"EXCEPT ( ""Node %s has no PRE script!"" , job -> GetJobName ( ) )"		3110905	0					
ANR	3110958	Callee	EXCEPT		3110905	0					
ANR	3110959	Identifier	EXCEPT		3110905	0					
ANR	3110960	ArgumentList	"""Node %s has no PRE script!"""		3110905	1					
ANR	3110961	Argument	"""Node %s has no PRE script!"""		3110905	0					
ANR	3110962	PrimaryExpression	"""Node %s has no PRE script!"""		3110905	0					
ANR	3110963	Argument	job -> GetJobName ( )		3110905	1					
ANR	3110964	CallExpression	job -> GetJobName ( )		3110905	0					
ANR	3110965	Callee	job -> GetJobName		3110905	0					
ANR	3110966	PtrMemberAccess	job -> GetJobName		3110905	0					
ANR	3110967	Identifier	job		3110905	0					
ANR	3110968	Identifier	GetJobName		3110905	1					
ANR	3110969	ArgumentList			3110905	1					
ANR	3110970	IfStatement	if ( job -> _scriptPre -> _pid != 0 )		3110905	1					
ANR	3110971	Condition	job -> _scriptPre -> _pid != 0	1835:8:56297:56322	3110905	0	True				
ANR	3110972	EqualityExpression	job -> _scriptPre -> _pid != 0		3110905	0		!=			
ANR	3110973	PtrMemberAccess	job -> _scriptPre -> _pid		3110905	0					
ANR	3110974	PtrMemberAccess	job -> _scriptPre		3110905	0					
ANR	3110975	Identifier	job		3110905	0					
ANR	3110976	Identifier	_scriptPre		3110905	1					
ANR	3110977	Identifier	_pid		3110905	1					
ANR	3110978	PrimaryExpression	0		3110905	1					
ANR	3110979	CompoundStatement		12:37:348:348	3110905	1					
ANR	3110980	ExpressionStatement	"debug_printf ( DEBUG_DEBUG_1 , ""Killing PRE script %d\\n"" , job -> _scriptPre -> _pid )"	1836:4:56332:56418	3110905	0	True				
ANR	3110981	CallExpression	"debug_printf ( DEBUG_DEBUG_1 , ""Killing PRE script %d\\n"" , job -> _scriptPre -> _pid )"		3110905	0					
ANR	3110982	Callee	debug_printf		3110905	0					
ANR	3110983	Identifier	debug_printf		3110905	0					
ANR	3110984	ArgumentList	DEBUG_DEBUG_1		3110905	1					
ANR	3110985	Argument	DEBUG_DEBUG_1		3110905	0					
ANR	3110986	Identifier	DEBUG_DEBUG_1		3110905	0					
ANR	3110987	Argument	"""Killing PRE script %d\\n"""		3110905	1					
ANR	3110988	PrimaryExpression	"""Killing PRE script %d\\n"""		3110905	0					
ANR	3110989	Argument	job -> _scriptPre -> _pid		3110905	2					
ANR	3110990	PtrMemberAccess	job -> _scriptPre -> _pid		3110905	0					
ANR	3110991	PtrMemberAccess	job -> _scriptPre		3110905	0					
ANR	3110992	Identifier	job		3110905	0					
ANR	3110993	Identifier	_scriptPre		3110905	1					
ANR	3110994	Identifier	_pid		3110905	1					
ANR	3110995	IfStatement	if ( daemonCore -> Shutdown_Fast ( job -> _scriptPre -> _pid ) == FALSE )		3110905	1					
ANR	3110996	Condition	daemonCore -> Shutdown_Fast ( job -> _scriptPre -> _pid ) == FALSE	1838:8:56428:56484	3110905	0	True				
ANR	3110997	EqualityExpression	daemonCore -> Shutdown_Fast ( job -> _scriptPre -> _pid ) == FALSE		3110905	0		==			
ANR	3110998	CallExpression	daemonCore -> Shutdown_Fast ( job -> _scriptPre -> _pid )		3110905	0					
ANR	3110999	Callee	daemonCore -> Shutdown_Fast		3110905	0					
ANR	3111000	PtrMemberAccess	daemonCore -> Shutdown_Fast		3110905	0					
ANR	3111001	Identifier	daemonCore		3110905	0					
ANR	3111002	Identifier	Shutdown_Fast		3110905	1					
ANR	3111003	ArgumentList	job -> _scriptPre -> _pid		3110905	1					
ANR	3111004	Argument	job -> _scriptPre -> _pid		3110905	0					
ANR	3111005	PtrMemberAccess	job -> _scriptPre -> _pid		3110905	0					
ANR	3111006	PtrMemberAccess	job -> _scriptPre		3110905	0					
ANR	3111007	Identifier	job		3110905	0					
ANR	3111008	Identifier	_scriptPre		3110905	1					
ANR	3111009	Identifier	_pid		3110905	1					
ANR	3111010	Identifier	FALSE		3110905	1					
ANR	3111011	CompoundStatement		15:67:509:509	3110905	1					
ANR	3111012	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""WARNING: shutdown_fast() failed on pid %d: %s\\n"" , job -> _scriptPre -> _pid , strerror ( errno ) )"	1839:5:56494:56646	3110905	0	True				
ANR	3111013	CallExpression	"debug_printf ( DEBUG_QUIET , ""WARNING: shutdown_fast() failed on pid %d: %s\\n"" , job -> _scriptPre -> _pid , strerror ( errno ) )"		3110905	0					
ANR	3111014	Callee	debug_printf		3110905	0					
ANR	3111015	Identifier	debug_printf		3110905	0					
ANR	3111016	ArgumentList	DEBUG_QUIET		3110905	1					
ANR	3111017	Argument	DEBUG_QUIET		3110905	0					
ANR	3111018	Identifier	DEBUG_QUIET		3110905	0					
ANR	3111019	Argument	"""WARNING: shutdown_fast() failed on pid %d: %s\\n"""		3110905	1					
ANR	3111020	PrimaryExpression	"""WARNING: shutdown_fast() failed on pid %d: %s\\n"""		3110905	0					
ANR	3111021	Argument	job -> _scriptPre -> _pid		3110905	2					
ANR	3111022	PtrMemberAccess	job -> _scriptPre -> _pid		3110905	0					
ANR	3111023	PtrMemberAccess	job -> _scriptPre		3110905	0					
ANR	3111024	Identifier	job		3110905	0					
ANR	3111025	Identifier	_scriptPre		3110905	1					
ANR	3111026	Identifier	_pid		3110905	1					
ANR	3111027	Argument	strerror ( errno )		3110905	3					
ANR	3111028	CallExpression	strerror ( errno )		3110905	0					
ANR	3111029	Callee	strerror		3110905	0					
ANR	3111030	Identifier	strerror		3110905	0					
ANR	3111031	ArgumentList	errno		3110905	1					
ANR	3111032	Argument	errno		3110905	0					
ANR	3111033	Identifier	errno		3110905	0					
ANR	3111034	ElseStatement	else		3110905	0					
ANR	3111035	IfStatement	if ( job -> GetStatus ( ) == Job :: STATUS_POSTRUN )		3110905	0					
ANR	3111036	Condition	job -> GetStatus ( ) == Job :: STATUS_POSTRUN	1846:17:56738:56776	3110905	0	True				
ANR	3111037	EqualityExpression	job -> GetStatus ( ) == Job :: STATUS_POSTRUN		3110905	0		==			
ANR	3111038	CallExpression	job -> GetStatus ( )		3110905	0					
ANR	3111039	Callee	job -> GetStatus		3110905	0					
ANR	3111040	PtrMemberAccess	job -> GetStatus		3110905	0					
ANR	3111041	Identifier	job		3110905	0					
ANR	3111042	Identifier	GetStatus		3110905	1					
ANR	3111043	ArgumentList			3110905	1					
ANR	3111044	Identifier	Job :: STATUS_POSTRUN		3110905	1					
ANR	3111045	CompoundStatement		23:59:802:802	3110905	1					
ANR	3111046	IfStatement	if ( ! job -> _scriptPost )		3110905	0					
ANR	3111047	Condition	! job -> _scriptPost	1847:8:56790:56806	3110905	0	True				
ANR	3111048	UnaryOperationExpression	! job -> _scriptPost		3110905	0					
ANR	3111049	UnaryOperator	!		3110905	0					
ANR	3111050	PtrMemberAccess	job -> _scriptPost		3110905	1					
ANR	3111051	Identifier	job		3110905	0					
ANR	3111052	Identifier	_scriptPost		3110905	1					
ANR	3111053	CompoundStatement		24:28:832:832	3110905	1					
ANR	3111054	ExpressionStatement	"EXCEPT ( ""Node %s has no POST script!"" , job -> GetJobName ( ) )"	1848:4:56816:56874	3110905	0	True				
ANR	3111055	CallExpression	"EXCEPT ( ""Node %s has no POST script!"" , job -> GetJobName ( ) )"		3110905	0					
ANR	3111056	Callee	EXCEPT		3110905	0					
ANR	3111057	Identifier	EXCEPT		3110905	0					
ANR	3111058	ArgumentList	"""Node %s has no POST script!"""		3110905	1					
ANR	3111059	Argument	"""Node %s has no POST script!"""		3110905	0					
ANR	3111060	PrimaryExpression	"""Node %s has no POST script!"""		3110905	0					
ANR	3111061	Argument	job -> GetJobName ( )		3110905	1					
ANR	3111062	CallExpression	job -> GetJobName ( )		3110905	0					
ANR	3111063	Callee	job -> GetJobName		3110905	0					
ANR	3111064	PtrMemberAccess	job -> GetJobName		3110905	0					
ANR	3111065	Identifier	job		3110905	0					
ANR	3111066	Identifier	GetJobName		3110905	1					
ANR	3111067	ArgumentList			3110905	1					
ANR	3111068	IfStatement	if ( job -> _scriptPost -> _pid != 0 )		3110905	1					
ANR	3111069	Condition	job -> _scriptPost -> _pid != 0	1850:8:56889:56915	3110905	0	True				
ANR	3111070	EqualityExpression	job -> _scriptPost -> _pid != 0		3110905	0		!=			
ANR	3111071	PtrMemberAccess	job -> _scriptPost -> _pid		3110905	0					
ANR	3111072	PtrMemberAccess	job -> _scriptPost		3110905	0					
ANR	3111073	Identifier	job		3110905	0					
ANR	3111074	Identifier	_scriptPost		3110905	1					
ANR	3111075	Identifier	_pid		3110905	1					
ANR	3111076	PrimaryExpression	0		3110905	1					
ANR	3111077	CompoundStatement		27:38:941:941	3110905	1					
ANR	3111078	ExpressionStatement	"debug_printf ( DEBUG_DEBUG_1 , ""Killing POST script %d\\n"" , job -> _scriptPost -> _pid )"	1851:4:56925:57013	3110905	0	True				
ANR	3111079	CallExpression	"debug_printf ( DEBUG_DEBUG_1 , ""Killing POST script %d\\n"" , job -> _scriptPost -> _pid )"		3110905	0					
ANR	3111080	Callee	debug_printf		3110905	0					
ANR	3111081	Identifier	debug_printf		3110905	0					
ANR	3111082	ArgumentList	DEBUG_DEBUG_1		3110905	1					
ANR	3111083	Argument	DEBUG_DEBUG_1		3110905	0					
ANR	3111084	Identifier	DEBUG_DEBUG_1		3110905	0					
ANR	3111085	Argument	"""Killing POST script %d\\n"""		3110905	1					
ANR	3111086	PrimaryExpression	"""Killing POST script %d\\n"""		3110905	0					
ANR	3111087	Argument	job -> _scriptPost -> _pid		3110905	2					
ANR	3111088	PtrMemberAccess	job -> _scriptPost -> _pid		3110905	0					
ANR	3111089	PtrMemberAccess	job -> _scriptPost		3110905	0					
ANR	3111090	Identifier	job		3110905	0					
ANR	3111091	Identifier	_scriptPost		3110905	1					
ANR	3111092	Identifier	_pid		3110905	1					
ANR	3111093	IfStatement	if ( daemonCore -> Shutdown_Fast ( job -> _scriptPost -> _pid ) == FALSE )		3110905	1					
ANR	3111094	Condition	daemonCore -> Shutdown_Fast ( job -> _scriptPost -> _pid ) == FALSE	1853:7:57022:57079	3110905	0	True				
ANR	3111095	EqualityExpression	daemonCore -> Shutdown_Fast ( job -> _scriptPost -> _pid ) == FALSE		3110905	0		==			
ANR	3111096	CallExpression	daemonCore -> Shutdown_Fast ( job -> _scriptPost -> _pid )		3110905	0					
ANR	3111097	Callee	daemonCore -> Shutdown_Fast		3110905	0					
ANR	3111098	PtrMemberAccess	daemonCore -> Shutdown_Fast		3110905	0					
ANR	3111099	Identifier	daemonCore		3110905	0					
ANR	3111100	Identifier	Shutdown_Fast		3110905	1					
ANR	3111101	ArgumentList	job -> _scriptPost -> _pid		3110905	1					
ANR	3111102	Argument	job -> _scriptPost -> _pid		3110905	0					
ANR	3111103	PtrMemberAccess	job -> _scriptPost -> _pid		3110905	0					
ANR	3111104	PtrMemberAccess	job -> _scriptPost		3110905	0					
ANR	3111105	Identifier	job		3110905	0					
ANR	3111106	Identifier	_scriptPost		3110905	1					
ANR	3111107	Identifier	_pid		3110905	1					
ANR	3111108	Identifier	FALSE		3110905	1					
ANR	3111109	CompoundStatement		30:67:1104:1104	3110905	1					
ANR	3111110	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""WARNING: shutdown_fast() failed on pid %d: %s\\n"" , job -> _scriptPost -> _pid , strerror ( errno ) )"	1854:5:57089:57244	3110905	0	True				
ANR	3111111	CallExpression	"debug_printf ( DEBUG_QUIET , ""WARNING: shutdown_fast() failed on pid %d: %s\\n"" , job -> _scriptPost -> _pid , strerror ( errno ) )"		3110905	0					
ANR	3111112	Callee	debug_printf		3110905	0					
ANR	3111113	Identifier	debug_printf		3110905	0					
ANR	3111114	ArgumentList	DEBUG_QUIET		3110905	1					
ANR	3111115	Argument	DEBUG_QUIET		3110905	0					
ANR	3111116	Identifier	DEBUG_QUIET		3110905	0					
ANR	3111117	Argument	"""WARNING: shutdown_fast() failed on pid %d: %s\\n"""		3110905	1					
ANR	3111118	PrimaryExpression	"""WARNING: shutdown_fast() failed on pid %d: %s\\n"""		3110905	0					
ANR	3111119	Argument	job -> _scriptPost -> _pid		3110905	2					
ANR	3111120	PtrMemberAccess	job -> _scriptPost -> _pid		3110905	0					
ANR	3111121	PtrMemberAccess	job -> _scriptPost		3110905	0					
ANR	3111122	Identifier	job		3110905	0					
ANR	3111123	Identifier	_scriptPost		3110905	1					
ANR	3111124	Identifier	_pid		3110905	1					
ANR	3111125	Argument	strerror ( errno )		3110905	3					
ANR	3111126	CallExpression	strerror ( errno )		3110905	0					
ANR	3111127	Callee	strerror		3110905	0					
ANR	3111128	Identifier	strerror		3110905	0					
ANR	3111129	ArgumentList	errno		3110905	1					
ANR	3111130	Argument	errno		3110905	0					
ANR	3111131	Identifier	errno		3110905	0					
ANR	3111132	ReturnStatement	return ;	1861:1:57271:57277	3110905	3	True				
ANR	3111133	ReturnType	void		3110905	1					
ANR	3111134	Identifier	Dag :: RemoveRunningScripts		3110905	2					
ANR	3111135	ParameterList			3110905	3					
ANR	3111136	CFGEntryNode	ENTRY		3110905		True				
ANR	3111137	CFGExitNode	EXIT		3110905		True				
ANR	3111138	Symbol	job -> _scriptPre -> _pid		3110905						
ANR	3111139	Symbol	Job :: STATUS_PRERUN		3110905						
ANR	3111140	Symbol	errno		3110905						
ANR	3111141	Symbol	NULL		3110905						
ANR	3111142	Symbol	* job		3110905						
ANR	3111143	Symbol	job -> GetJobName		3110905						
ANR	3111144	Symbol	* job -> _scriptPre		3110905						
ANR	3111145	Symbol	daemonCore -> Shutdown_Fast		3110905						
ANR	3111146	Symbol	iList . Next		3110905						
ANR	3111147	Symbol	iList		3110905						
ANR	3111148	Symbol	Job :: STATUS_POSTRUN		3110905						
ANR	3111149	Symbol	job -> _scriptPost -> _pid		3110905						
ANR	3111150	Symbol	job -> GetStatus		3110905						
ANR	3111151	Symbol	DEBUG_QUIET		3110905						
ANR	3111152	Symbol	strerror		3110905						
ANR	3111153	Symbol	job -> _scriptPost		3110905						
ANR	3111154	Symbol	* * job		3110905						
ANR	3111155	Symbol	* daemonCore		3110905						
ANR	3111156	Symbol	daemonCore		3110905						
ANR	3111157	Symbol	FALSE		3110905						
ANR	3111158	Symbol	DEBUG_DEBUG_1		3110905						
ANR	3111159	Symbol	job		3110905						
ANR	3111160	Symbol	* job -> _scriptPost		3110905						
ANR	3111161	Symbol	job -> _scriptPre		3110905						
ANR	3111162	Function	Dag :: Rescue	1865:0:57362:58161							
ANR	3111163	FunctionDef	"Dag :: Rescue (const char * dagFile , bool multiDags , int maxRescueDagNum , bool parseFailed , bool isPartial)"		3111162	0					
ANR	3111164	CompoundStatement		1867:0:57490:58161	3111162	0					
ANR	3111165	IdentifierDeclStatement	MyString rescueDagFile ;	1868:1:57493:57515	3111162	0	True				
ANR	3111166	IdentifierDecl	rescueDagFile		3111162	0					
ANR	3111167	IdentifierDeclType	MyString		3111162	0					
ANR	3111168	Identifier	rescueDagFile		3111162	1					
ANR	3111169	IfStatement	if ( parseFailed )		3111162	1					
ANR	3111170	Condition	parseFailed	1869:6:57523:57533	3111162	0	True				
ANR	3111171	Identifier	parseFailed		3111162	0					
ANR	3111172	CompoundStatement		3:20:46:46	3111162	1					
ANR	3111173	ExpressionStatement	rescueDagFile = dagFile	1870:2:57541:57564	3111162	0	True				
ANR	3111174	AssignmentExpression	rescueDagFile = dagFile		3111162	0		=			
ANR	3111175	Identifier	rescueDagFile		3111162	0					
ANR	3111176	Identifier	dagFile		3111162	1					
ANR	3111177	ExpressionStatement	"rescueDagFile += "".parse_failed"""	1871:2:57568:57600	3111162	1	True				
ANR	3111178	AssignmentExpression	"rescueDagFile += "".parse_failed"""		3111162	0		+=			
ANR	3111179	Identifier	rescueDagFile		3111162	0					
ANR	3111180	PrimaryExpression	""".parse_failed"""		3111162	1					
ANR	3111181	ElseStatement	else		3111162	0					
ANR	3111182	CompoundStatement		7:2:123:208	3111162	0					
ANR	3111183	IdentifierDeclStatement	"int nextRescue = FindLastRescueDagNum ( dagFile , multiDags , maxRescueDagNum ) + 1 ;"	1873:2:57614:57699	3111162	0	True				
ANR	3111184	IdentifierDecl	"nextRescue = FindLastRescueDagNum ( dagFile , multiDags , maxRescueDagNum ) + 1"		3111162	0					
ANR	3111185	IdentifierDeclType	int		3111162	0					
ANR	3111186	Identifier	nextRescue		3111162	1					
ANR	3111187	AssignmentExpression	"nextRescue = FindLastRescueDagNum ( dagFile , multiDags , maxRescueDagNum ) + 1"		3111162	2		=			
ANR	3111188	Identifier	nextRescue		3111162	0					
ANR	3111189	AdditiveExpression	"FindLastRescueDagNum ( dagFile , multiDags , maxRescueDagNum ) + 1"		3111162	1		+			
ANR	3111190	CallExpression	"FindLastRescueDagNum ( dagFile , multiDags , maxRescueDagNum )"		3111162	0					
ANR	3111191	Callee	FindLastRescueDagNum		3111162	0					
ANR	3111192	Identifier	FindLastRescueDagNum		3111162	0					
ANR	3111193	ArgumentList	dagFile		3111162	1					
ANR	3111194	Argument	dagFile		3111162	0					
ANR	3111195	Identifier	dagFile		3111162	0					
ANR	3111196	Argument	multiDags		3111162	1					
ANR	3111197	Identifier	multiDags		3111162	0					
ANR	3111198	Argument	maxRescueDagNum		3111162	2					
ANR	3111199	Identifier	maxRescueDagNum		3111162	0					
ANR	3111200	PrimaryExpression	1		3111162	1					
ANR	3111201	IfStatement	if ( nextRescue > maxRescueDagNum )		3111162	1					
ANR	3111202	Condition	nextRescue > maxRescueDagNum	1875:7:57708:57735	3111162	0	True				
ANR	3111203	RelationalExpression	nextRescue > maxRescueDagNum		3111162	0		>			
ANR	3111204	Identifier	nextRescue		3111162	0					
ANR	3111205	Identifier	maxRescueDagNum		3111162	1					
ANR	3111206	ExpressionStatement	nextRescue = maxRescueDagNum	1875:38:57739:57767	3111162	1	True				
ANR	3111207	AssignmentExpression	nextRescue = maxRescueDagNum		3111162	0		=			
ANR	3111208	Identifier	nextRescue		3111162	0					
ANR	3111209	Identifier	maxRescueDagNum		3111162	1					
ANR	3111210	ExpressionStatement	"rescueDagFile = RescueDagName ( dagFile , multiDags , nextRescue )"	1876:2:57771:57834	3111162	2	True				
ANR	3111211	AssignmentExpression	"rescueDagFile = RescueDagName ( dagFile , multiDags , nextRescue )"		3111162	0		=			
ANR	3111212	Identifier	rescueDagFile		3111162	0					
ANR	3111213	CallExpression	"RescueDagName ( dagFile , multiDags , nextRescue )"		3111162	1					
ANR	3111214	Callee	RescueDagName		3111162	0					
ANR	3111215	Identifier	RescueDagName		3111162	0					
ANR	3111216	ArgumentList	dagFile		3111162	1					
ANR	3111217	Argument	dagFile		3111162	0					
ANR	3111218	Identifier	dagFile		3111162	0					
ANR	3111219	Argument	multiDags		3111162	1					
ANR	3111220	Identifier	multiDags		3111162	0					
ANR	3111221	Argument	nextRescue		3111162	2					
ANR	3111222	Identifier	nextRescue		3111162	0					
ANR	3111223	ExpressionStatement	"WriteRescue ( rescueDagFile . Value ( ) , dagFile , parseFailed , isPartial )"	1884:1:58090:58159	3111162	2	True				
ANR	3111224	CallExpression	"WriteRescue ( rescueDagFile . Value ( ) , dagFile , parseFailed , isPartial )"		3111162	0					
ANR	3111225	Callee	WriteRescue		3111162	0					
ANR	3111226	Identifier	WriteRescue		3111162	0					
ANR	3111227	ArgumentList	rescueDagFile . Value ( )		3111162	1					
ANR	3111228	Argument	rescueDagFile . Value ( )		3111162	0					
ANR	3111229	CallExpression	rescueDagFile . Value ( )		3111162	0					
ANR	3111230	Callee	rescueDagFile . Value		3111162	0					
ANR	3111231	MemberAccess	rescueDagFile . Value		3111162	0					
ANR	3111232	Identifier	rescueDagFile		3111162	0					
ANR	3111233	Identifier	Value		3111162	1					
ANR	3111234	ArgumentList			3111162	1					
ANR	3111235	Argument	dagFile		3111162	1					
ANR	3111236	Identifier	dagFile		3111162	0					
ANR	3111237	Argument	parseFailed		3111162	2					
ANR	3111238	Identifier	parseFailed		3111162	0					
ANR	3111239	Argument	isPartial		3111162	3					
ANR	3111240	Identifier	isPartial		3111162	0					
ANR	3111241	ReturnType	void		3111162	1					
ANR	3111242	Identifier	Dag :: Rescue		3111162	2					
ANR	3111243	ParameterList	"const char * dagFile , bool multiDags , int maxRescueDagNum , bool parseFailed , bool isPartial"		3111162	3					
ANR	3111244	Parameter	const char * dagFile	1865:19:57381:57400	3111162	0	True				
ANR	3111245	ParameterType	const char *		3111162	0					
ANR	3111246	Identifier	dagFile		3111162	1					
ANR	3111247	Parameter	bool multiDags	1865:41:57403:57416	3111162	1	True				
ANR	3111248	ParameterType	bool		3111162	0					
ANR	3111249	Identifier	multiDags		3111162	1					
ANR	3111250	Parameter	int maxRescueDagNum	1866:3:57422:57440	3111162	2	True				
ANR	3111251	ParameterType	int		3111162	0					
ANR	3111252	Identifier	maxRescueDagNum		3111162	1					
ANR	3111253	Parameter	bool parseFailed	1866:24:57443:57458	3111162	3	True				
ANR	3111254	ParameterType	bool		3111162	0					
ANR	3111255	Identifier	parseFailed		3111162	1					
ANR	3111256	Parameter	bool isPartial	1866:42:57461:57474	3111162	4	True				
ANR	3111257	ParameterType	bool		3111162	0					
ANR	3111258	Identifier	isPartial		3111162	1					
ANR	3111259	CFGEntryNode	ENTRY		3111162		True				
ANR	3111260	CFGExitNode	EXIT		3111162		True				
ANR	3111261	Symbol	parseFailed		3111162						
ANR	3111262	Symbol	dagFile		3111162						
ANR	3111263	Symbol	multiDags		3111162						
ANR	3111264	Symbol	maxRescueDagNum		3111162						
ANR	3111265	Symbol	nextRescue		3111162						
ANR	3111266	Symbol	isPartial		3111162						
ANR	3111267	Symbol	rescueDagFile		3111162						
ANR	3111268	Symbol	rescueDagFile . Value		3111162						
ANR	3111269	Symbol	FindLastRescueDagNum		3111162						
ANR	3111270	Symbol	RescueDagName		3111162						
ANR	3111271	DeclStmt									
ANR	3111272	Decl							const char	const char *	RESCUE_DAG_VERSION
ANR	3111273	Function	Dag :: WriteRescue	1890:0:58294:61510							
ANR	3111274	FunctionDef	"Dag :: WriteRescue (const char * rescue_file , const char * dagFile , bool parseFailed , bool isPartial)"		3111273	0					
ANR	3111275	CompoundStatement		1892:0:58414:61510	3111273	0					
ANR	3111276	ExpressionStatement	"debug_printf ( DEBUG_NORMAL , ""Writing Rescue DAG to %s...\\n"" , rescue_file )"	1893:1:58417:58495	3111273	0	True				
ANR	3111277	CallExpression	"debug_printf ( DEBUG_NORMAL , ""Writing Rescue DAG to %s...\\n"" , rescue_file )"		3111273	0					
ANR	3111278	Callee	debug_printf		3111273	0					
ANR	3111279	Identifier	debug_printf		3111273	0					
ANR	3111280	ArgumentList	DEBUG_NORMAL		3111273	1					
ANR	3111281	Argument	DEBUG_NORMAL		3111273	0					
ANR	3111282	Identifier	DEBUG_NORMAL		3111273	0					
ANR	3111283	Argument	"""Writing Rescue DAG to %s...\\n"""		3111273	1					
ANR	3111284	PrimaryExpression	"""Writing Rescue DAG to %s...\\n"""		3111273	0					
ANR	3111285	Argument	rescue_file		3111273	2					
ANR	3111286	Identifier	rescue_file		3111273	0					
ANR	3111287	IdentifierDeclStatement	"FILE * fp = safe_fopen_wrapper_follow ( rescue_file , ""w"" ) ;"	1896:4:58502:58556	3111273	1	True				
ANR	3111288	IdentifierDecl	"* fp = safe_fopen_wrapper_follow ( rescue_file , ""w"" )"		3111273	0					
ANR	3111289	IdentifierDeclType	FILE *		3111273	0					
ANR	3111290	Identifier	fp		3111273	1					
ANR	3111291	AssignmentExpression	"* fp = safe_fopen_wrapper_follow ( rescue_file , ""w"" )"		3111273	2		=			
ANR	3111292	Identifier	fp		3111273	0					
ANR	3111293	CallExpression	"safe_fopen_wrapper_follow ( rescue_file , ""w"" )"		3111273	1					
ANR	3111294	Callee	safe_fopen_wrapper_follow		3111273	0					
ANR	3111295	Identifier	safe_fopen_wrapper_follow		3111273	0					
ANR	3111296	ArgumentList	rescue_file		3111273	1					
ANR	3111297	Argument	rescue_file		3111273	0					
ANR	3111298	Identifier	rescue_file		3111273	0					
ANR	3111299	Argument	"""w"""		3111273	1					
ANR	3111300	PrimaryExpression	"""w"""		3111273	0					
ANR	3111301	IfStatement	if ( fp == NULL )		3111273	2					
ANR	3111302	Condition	fp == NULL	1897:8:58566:58575	3111273	0	True				
ANR	3111303	EqualityExpression	fp == NULL		3111273	0		==			
ANR	3111304	Identifier	fp		3111273	0					
ANR	3111305	Identifier	NULL		3111273	1					
ANR	3111306	CompoundStatement		6:20:163:163	3111273	1					
ANR	3111307	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""Could not open %s for writing.\\n"" , rescue_file )"	1898:8:58588:58670	3111273	0	True				
ANR	3111308	CallExpression	"debug_printf ( DEBUG_QUIET , ""Could not open %s for writing.\\n"" , rescue_file )"		3111273	0					
ANR	3111309	Callee	debug_printf		3111273	0					
ANR	3111310	Identifier	debug_printf		3111273	0					
ANR	3111311	ArgumentList	DEBUG_QUIET		3111273	1					
ANR	3111312	Argument	DEBUG_QUIET		3111273	0					
ANR	3111313	Identifier	DEBUG_QUIET		3111273	0					
ANR	3111314	Argument	"""Could not open %s for writing.\\n"""		3111273	1					
ANR	3111315	PrimaryExpression	"""Could not open %s for writing.\\n"""		3111273	0					
ANR	3111316	Argument	rescue_file		3111273	2					
ANR	3111317	Identifier	rescue_file		3111273	0					
ANR	3111318	ReturnStatement	return ;	1900:8:58680:58686	3111273	1	True				
ANR	3111319	IdentifierDeclStatement	"bool reset_retries_upon_rescue = param_boolean ( ""DAGMAN_RESET_RETRIES_UPON_RESCUE"" , true ) ;"	1903:1:58696:58788	3111273	3	True				
ANR	3111320	IdentifierDecl	"reset_retries_upon_rescue = param_boolean ( ""DAGMAN_RESET_RETRIES_UPON_RESCUE"" , true )"		3111273	0					
ANR	3111321	IdentifierDeclType	bool		3111273	0					
ANR	3111322	Identifier	reset_retries_upon_rescue		3111273	1					
ANR	3111323	AssignmentExpression	"reset_retries_upon_rescue = param_boolean ( ""DAGMAN_RESET_RETRIES_UPON_RESCUE"" , true )"		3111273	2		=			
ANR	3111324	Identifier	reset_retries_upon_rescue		3111273	0					
ANR	3111325	CallExpression	"param_boolean ( ""DAGMAN_RESET_RETRIES_UPON_RESCUE"" , true )"		3111273	1					
ANR	3111326	Callee	param_boolean		3111273	0					
ANR	3111327	Identifier	param_boolean		3111273	0					
ANR	3111328	ArgumentList	"""DAGMAN_RESET_RETRIES_UPON_RESCUE"""		3111273	1					
ANR	3111329	Argument	"""DAGMAN_RESET_RETRIES_UPON_RESCUE"""		3111273	0					
ANR	3111330	PrimaryExpression	"""DAGMAN_RESET_RETRIES_UPON_RESCUE"""		3111273	0					
ANR	3111331	Argument	true		3111273	1					
ANR	3111332	Identifier	true		3111273	0					
ANR	3111333	IfStatement	if ( parseFailed )		3111273	4					
ANR	3111334	Condition	parseFailed	1907:6:58798:58808	3111273	0	True				
ANR	3111335	Identifier	parseFailed		3111273	0					
ANR	3111336	CompoundStatement		16:20:397:397	3111273	1					
ANR	3111337	ExpressionStatement	"fprintf ( fp , ""# \\""Rescue\\"" DAG file, created after failure parsing\\n"" )"	1908:5:58819:58888	3111273	0	True				
ANR	3111338	CallExpression	"fprintf ( fp , ""# \\""Rescue\\"" DAG file, created after failure parsing\\n"" )"		3111273	0					
ANR	3111339	Callee	fprintf		3111273	0					
ANR	3111340	Identifier	fprintf		3111273	0					
ANR	3111341	ArgumentList	fp		3111273	1					
ANR	3111342	Argument	fp		3111273	0					
ANR	3111343	Identifier	fp		3111273	0					
ANR	3111344	Argument	"""# \\""Rescue\\"" DAG file, created after failure parsing\\n"""		3111273	1					
ANR	3111345	PrimaryExpression	"""# \\""Rescue\\"" DAG file, created after failure parsing\\n"""		3111273	0					
ANR	3111346	ExpressionStatement	"fprintf ( fp , ""#   the %s DAG file\\n"" , dagFile )"	1909:5:58895:58940	3111273	1	True				
ANR	3111347	CallExpression	"fprintf ( fp , ""#   the %s DAG file\\n"" , dagFile )"		3111273	0					
ANR	3111348	Callee	fprintf		3111273	0					
ANR	3111349	Identifier	fprintf		3111273	0					
ANR	3111350	ArgumentList	fp		3111273	1					
ANR	3111351	Argument	fp		3111273	0					
ANR	3111352	Identifier	fp		3111273	0					
ANR	3111353	Argument	"""#   the %s DAG file\\n"""		3111273	1					
ANR	3111354	PrimaryExpression	"""#   the %s DAG file\\n"""		3111273	0					
ANR	3111355	Argument	dagFile		3111273	2					
ANR	3111356	Identifier	dagFile		3111273	0					
ANR	3111357	ElseStatement	else		3111273	0					
ANR	3111358	CompoundStatement		19:8:535:535	3111273	0					
ANR	3111359	ExpressionStatement	"fprintf ( fp , ""# Rescue DAG file, created after running\\n"" )"	1911:5:58957:59014	3111273	0	True				
ANR	3111360	CallExpression	"fprintf ( fp , ""# Rescue DAG file, created after running\\n"" )"		3111273	0					
ANR	3111361	Callee	fprintf		3111273	0					
ANR	3111362	Identifier	fprintf		3111273	0					
ANR	3111363	ArgumentList	fp		3111273	1					
ANR	3111364	Argument	fp		3111273	0					
ANR	3111365	Identifier	fp		3111273	0					
ANR	3111366	Argument	"""# Rescue DAG file, created after running\\n"""		3111273	1					
ANR	3111367	PrimaryExpression	"""# Rescue DAG file, created after running\\n"""		3111273	0					
ANR	3111368	ExpressionStatement	"fprintf ( fp , ""#   the %s DAG file\\n"" , dagFile )"	1912:5:59021:59066	3111273	1	True				
ANR	3111369	CallExpression	"fprintf ( fp , ""#   the %s DAG file\\n"" , dagFile )"		3111273	0					
ANR	3111370	Callee	fprintf		3111273	0					
ANR	3111371	Identifier	fprintf		3111273	0					
ANR	3111372	ArgumentList	fp		3111273	1					
ANR	3111373	Argument	fp		3111273	0					
ANR	3111374	Identifier	fp		3111273	0					
ANR	3111375	Argument	"""#   the %s DAG file\\n"""		3111273	1					
ANR	3111376	PrimaryExpression	"""#   the %s DAG file\\n"""		3111273	0					
ANR	3111377	Argument	dagFile		3111273	2					
ANR	3111378	Identifier	dagFile		3111273	0					
ANR	3111379	IdentifierDeclStatement	time_t timestamp ;	1915:1:59073:59089	3111273	5	True				
ANR	3111380	IdentifierDecl	timestamp		3111273	0					
ANR	3111381	IdentifierDeclType	time_t		3111273	0					
ANR	3111382	Identifier	timestamp		3111273	1					
ANR	3111383	ExpressionStatement	( void ) time ( & timestamp )	1916:1:59092:59116	3111273	6	True				
ANR	3111384	CastExpression	( void ) time ( & timestamp )		3111273	0					
ANR	3111385	CastTarget	void		3111273	0					
ANR	3111386	CallExpression	time ( & timestamp )		3111273	1					
ANR	3111387	Callee	time		3111273	0					
ANR	3111388	Identifier	time		3111273	0					
ANR	3111389	ArgumentList	& timestamp		3111273	1					
ANR	3111390	Argument	& timestamp		3111273	0					
ANR	3111391	UnaryOperationExpression	& timestamp		3111273	0					
ANR	3111392	UnaryOperator	&		3111273	0					
ANR	3111393	Identifier	timestamp		3111273	1					
ANR	3111394	IdentifierDeclStatement	const struct tm * tm ;	1917:1:59119:59138	3111273	7	True				
ANR	3111395	IdentifierDecl	* tm		3111273	0					
ANR	3111396	IdentifierDeclType	const struct tm *		3111273	0					
ANR	3111397	Identifier	tm		3111273	1					
ANR	3111398	ExpressionStatement	tm = gmtime ( & timestamp )	1918:1:59141:59166	3111273	8	True				
ANR	3111399	AssignmentExpression	tm = gmtime ( & timestamp )		3111273	0		=			
ANR	3111400	Identifier	tm		3111273	0					
ANR	3111401	CallExpression	gmtime ( & timestamp )		3111273	1					
ANR	3111402	Callee	gmtime		3111273	0					
ANR	3111403	Identifier	gmtime		3111273	0					
ANR	3111404	ArgumentList	& timestamp		3111273	1					
ANR	3111405	Argument	& timestamp		3111273	0					
ANR	3111406	UnaryOperationExpression	& timestamp		3111273	0					
ANR	3111407	UnaryOperator	&		3111273	0					
ANR	3111408	Identifier	timestamp		3111273	1					
ANR	3111409	ExpressionStatement	"fprintf ( fp , ""# Created %d/%d/%d %02d:%02d:%02d UTC\\n"" , tm -> tm_mon + 1 , tm -> tm_mday , tm -> tm_year + 1900 , tm -> tm_hour , tm -> tm_min , tm -> tm_sec )"	1919:1:59169:59319	3111273	9	True				
ANR	3111410	CallExpression	"fprintf ( fp , ""# Created %d/%d/%d %02d:%02d:%02d UTC\\n"" , tm -> tm_mon + 1 , tm -> tm_mday , tm -> tm_year + 1900 , tm -> tm_hour , tm -> tm_min , tm -> tm_sec )"		3111273	0					
ANR	3111411	Callee	fprintf		3111273	0					
ANR	3111412	Identifier	fprintf		3111273	0					
ANR	3111413	ArgumentList	fp		3111273	1					
ANR	3111414	Argument	fp		3111273	0					
ANR	3111415	Identifier	fp		3111273	0					
ANR	3111416	Argument	"""# Created %d/%d/%d %02d:%02d:%02d UTC\\n"""		3111273	1					
ANR	3111417	PrimaryExpression	"""# Created %d/%d/%d %02d:%02d:%02d UTC\\n"""		3111273	0					
ANR	3111418	Argument	tm -> tm_mon + 1		3111273	2					
ANR	3111419	AdditiveExpression	tm -> tm_mon + 1		3111273	0		+			
ANR	3111420	PtrMemberAccess	tm -> tm_mon		3111273	0					
ANR	3111421	Identifier	tm		3111273	0					
ANR	3111422	Identifier	tm_mon		3111273	1					
ANR	3111423	PrimaryExpression	1		3111273	1					
ANR	3111424	Argument	tm -> tm_mday		3111273	3					
ANR	3111425	PtrMemberAccess	tm -> tm_mday		3111273	0					
ANR	3111426	Identifier	tm		3111273	0					
ANR	3111427	Identifier	tm_mday		3111273	1					
ANR	3111428	Argument	tm -> tm_year + 1900		3111273	4					
ANR	3111429	AdditiveExpression	tm -> tm_year + 1900		3111273	0		+			
ANR	3111430	PtrMemberAccess	tm -> tm_year		3111273	0					
ANR	3111431	Identifier	tm		3111273	0					
ANR	3111432	Identifier	tm_year		3111273	1					
ANR	3111433	PrimaryExpression	1900		3111273	1					
ANR	3111434	Argument	tm -> tm_hour		3111273	5					
ANR	3111435	PtrMemberAccess	tm -> tm_hour		3111273	0					
ANR	3111436	Identifier	tm		3111273	0					
ANR	3111437	Identifier	tm_hour		3111273	1					
ANR	3111438	Argument	tm -> tm_min		3111273	6					
ANR	3111439	PtrMemberAccess	tm -> tm_min		3111273	0					
ANR	3111440	Identifier	tm		3111273	0					
ANR	3111441	Identifier	tm_min		3111273	1					
ANR	3111442	Argument	tm -> tm_sec		3111273	7					
ANR	3111443	PtrMemberAccess	tm -> tm_sec		3111273	0					
ANR	3111444	Identifier	tm		3111273	0					
ANR	3111445	Identifier	tm_sec		3111273	1					
ANR	3111446	ExpressionStatement	"fprintf ( fp , ""# Rescue DAG version: %s (%s)\\n"" , RESCUE_DAG_VERSION , isPartial ? ""partial"" : ""full"" )"	1922:1:59322:59426	3111273	10	True				
ANR	3111447	CallExpression	"fprintf ( fp , ""# Rescue DAG version: %s (%s)\\n"" , RESCUE_DAG_VERSION , isPartial ? ""partial"" : ""full"" )"		3111273	0					
ANR	3111448	Callee	fprintf		3111273	0					
ANR	3111449	Identifier	fprintf		3111273	0					
ANR	3111450	ArgumentList	fp		3111273	1					
ANR	3111451	Argument	fp		3111273	0					
ANR	3111452	Identifier	fp		3111273	0					
ANR	3111453	Argument	"""# Rescue DAG version: %s (%s)\\n"""		3111273	1					
ANR	3111454	PrimaryExpression	"""# Rescue DAG version: %s (%s)\\n"""		3111273	0					
ANR	3111455	Argument	RESCUE_DAG_VERSION		3111273	2					
ANR	3111456	Identifier	RESCUE_DAG_VERSION		3111273	0					
ANR	3111457	Argument	"isPartial ? ""partial"" : ""full"""		3111273	3					
ANR	3111458	ConditionalExpression	"isPartial ? ""partial"" : ""full"""		3111273	0					
ANR	3111459	Condition	isPartial		3111273	0					
ANR	3111460	Identifier	isPartial		3111273	0					
ANR	3111461	PrimaryExpression	"""partial"""		3111273	1					
ANR	3111462	PrimaryExpression	"""full"""		3111273	2					
ANR	3111463	ExpressionStatement	"fprintf ( fp , ""#\\n"" )"	1925:4:59433:59451	3111273	11	True				
ANR	3111464	CallExpression	"fprintf ( fp , ""#\\n"" )"		3111273	0					
ANR	3111465	Callee	fprintf		3111273	0					
ANR	3111466	Identifier	fprintf		3111273	0					
ANR	3111467	ArgumentList	fp		3111273	1					
ANR	3111468	Argument	fp		3111273	0					
ANR	3111469	Identifier	fp		3111273	0					
ANR	3111470	Argument	"""#\\n"""		3111273	1					
ANR	3111471	PrimaryExpression	"""#\\n"""		3111273	0					
ANR	3111472	ExpressionStatement	"fprintf ( fp , ""# Total number of Nodes: %d\\n"" , NumNodes ( ) )"	1926:4:59457:59513	3111273	12	True				
ANR	3111473	CallExpression	"fprintf ( fp , ""# Total number of Nodes: %d\\n"" , NumNodes ( ) )"		3111273	0					
ANR	3111474	Callee	fprintf		3111273	0					
ANR	3111475	Identifier	fprintf		3111273	0					
ANR	3111476	ArgumentList	fp		3111273	1					
ANR	3111477	Argument	fp		3111273	0					
ANR	3111478	Identifier	fp		3111273	0					
ANR	3111479	Argument	"""# Total number of Nodes: %d\\n"""		3111273	1					
ANR	3111480	PrimaryExpression	"""# Total number of Nodes: %d\\n"""		3111273	0					
ANR	3111481	Argument	NumNodes ( )		3111273	2					
ANR	3111482	CallExpression	NumNodes ( )		3111273	0					
ANR	3111483	Callee	NumNodes		3111273	0					
ANR	3111484	Identifier	NumNodes		3111273	0					
ANR	3111485	ArgumentList			3111273	1					
ANR	3111486	ExpressionStatement	"fprintf ( fp , ""# Nodes premarked DONE: %d\\n"" , _numNodesDone )"	1927:4:59519:59577	3111273	13	True				
ANR	3111487	CallExpression	"fprintf ( fp , ""# Nodes premarked DONE: %d\\n"" , _numNodesDone )"		3111273	0					
ANR	3111488	Callee	fprintf		3111273	0					
ANR	3111489	Identifier	fprintf		3111273	0					
ANR	3111490	ArgumentList	fp		3111273	1					
ANR	3111491	Argument	fp		3111273	0					
ANR	3111492	Identifier	fp		3111273	0					
ANR	3111493	Argument	"""# Nodes premarked DONE: %d\\n"""		3111273	1					
ANR	3111494	PrimaryExpression	"""# Nodes premarked DONE: %d\\n"""		3111273	0					
ANR	3111495	Argument	_numNodesDone		3111273	2					
ANR	3111496	Identifier	_numNodesDone		3111273	0					
ANR	3111497	ExpressionStatement	"fprintf ( fp , ""# Nodes that failed: %d\\n"" , _numNodesFailed )"	1928:4:59583:59640	3111273	14	True				
ANR	3111498	CallExpression	"fprintf ( fp , ""# Nodes that failed: %d\\n"" , _numNodesFailed )"		3111273	0					
ANR	3111499	Callee	fprintf		3111273	0					
ANR	3111500	Identifier	fprintf		3111273	0					
ANR	3111501	ArgumentList	fp		3111273	1					
ANR	3111502	Argument	fp		3111273	0					
ANR	3111503	Identifier	fp		3111273	0					
ANR	3111504	Argument	"""# Nodes that failed: %d\\n"""		3111273	1					
ANR	3111505	PrimaryExpression	"""# Nodes that failed: %d\\n"""		3111273	0					
ANR	3111506	Argument	_numNodesFailed		3111273	2					
ANR	3111507	Identifier	_numNodesFailed		3111273	0					
ANR	3111508	ExpressionStatement	"fprintf ( fp , ""#   "" )"	1933:4:59699:59718	3111273	15	True				
ANR	3111509	CallExpression	"fprintf ( fp , ""#   "" )"		3111273	0					
ANR	3111510	Callee	fprintf		3111273	0					
ANR	3111511	Identifier	fprintf		3111273	0					
ANR	3111512	ArgumentList	fp		3111273	1					
ANR	3111513	Argument	fp		3111273	0					
ANR	3111514	Identifier	fp		3111273	0					
ANR	3111515	Argument	"""#   """		3111273	1					
ANR	3111516	PrimaryExpression	"""#   """		3111273	0					
ANR	3111517	IdentifierDeclStatement	ListIterator < Job > it ( _jobs ) ;	1934:4:59724:59752	3111273	16	True				
ANR	3111518	IdentifierDecl	it ( _jobs )		3111273	0					
ANR	3111519	IdentifierDeclType	ListIterator < Job >		3111273	0					
ANR	3111520	Identifier	it		3111273	1					
ANR	3111521	Identifier	_jobs		3111273	2					
ANR	3111522	IdentifierDeclStatement	Job * job ;	1935:4:59758:59767	3111273	17	True				
ANR	3111523	IdentifierDecl	* job		3111273	0					
ANR	3111524	IdentifierDeclType	Job *		3111273	0					
ANR	3111525	Identifier	job		3111273	1					
ANR	3111526	WhileStatement	while ( it . Next ( job ) )		3111273	18					
ANR	3111527	Condition	it . Next ( job )	1936:11:59780:59791	3111273	0	True				
ANR	3111528	CallExpression	it . Next ( job )		3111273	0					
ANR	3111529	Callee	it . Next		3111273	0					
ANR	3111530	MemberAccess	it . Next		3111273	0					
ANR	3111531	Identifier	it		3111273	0					
ANR	3111532	Identifier	Next		3111273	1					
ANR	3111533	ArgumentList	job		3111273	1					
ANR	3111534	Argument	job		3111273	0					
ANR	3111535	Identifier	job		3111273	0					
ANR	3111536	CompoundStatement		45:25:1379:1379	3111273	1					
ANR	3111537	IfStatement	if ( job -> GetStatus ( ) == Job :: STATUS_ERROR )		3111273	0					
ANR	3111538	Condition	job -> GetStatus ( ) == Job :: STATUS_ERROR	1937:12:59808:59844	3111273	0	True				
ANR	3111539	EqualityExpression	job -> GetStatus ( ) == Job :: STATUS_ERROR		3111273	0		==			
ANR	3111540	CallExpression	job -> GetStatus ( )		3111273	0					
ANR	3111541	Callee	job -> GetStatus		3111273	0					
ANR	3111542	PtrMemberAccess	job -> GetStatus		3111273	0					
ANR	3111543	Identifier	job		3111273	0					
ANR	3111544	Identifier	GetStatus		3111273	1					
ANR	3111545	ArgumentList			3111273	1					
ANR	3111546	Identifier	Job :: STATUS_ERROR		3111273	1					
ANR	3111547	CompoundStatement		46:51:1432:1432	3111273	1					
ANR	3111548	ExpressionStatement	"fprintf ( fp , ""%s,"" , job -> GetJobName ( ) )"	1938:12:59861:59898	3111273	0	True				
ANR	3111549	CallExpression	"fprintf ( fp , ""%s,"" , job -> GetJobName ( ) )"		3111273	0					
ANR	3111550	Callee	fprintf		3111273	0					
ANR	3111551	Identifier	fprintf		3111273	0					
ANR	3111552	ArgumentList	fp		3111273	1					
ANR	3111553	Argument	fp		3111273	0					
ANR	3111554	Identifier	fp		3111273	0					
ANR	3111555	Argument	"""%s,"""		3111273	1					
ANR	3111556	PrimaryExpression	"""%s,"""		3111273	0					
ANR	3111557	Argument	job -> GetJobName ( )		3111273	2					
ANR	3111558	CallExpression	job -> GetJobName ( )		3111273	0					
ANR	3111559	Callee	job -> GetJobName		3111273	0					
ANR	3111560	PtrMemberAccess	job -> GetJobName		3111273	0					
ANR	3111561	Identifier	job		3111273	0					
ANR	3111562	Identifier	GetJobName		3111273	1					
ANR	3111563	ArgumentList			3111273	1					
ANR	3111564	ExpressionStatement	"fprintf ( fp , ""<ENDLIST>\\n\\n"" )"	1941:4:59920:59948	3111273	19	True				
ANR	3111565	CallExpression	"fprintf ( fp , ""<ENDLIST>\\n\\n"" )"		3111273	0					
ANR	3111566	Callee	fprintf		3111273	0					
ANR	3111567	Identifier	fprintf		3111273	0					
ANR	3111568	ArgumentList	fp		3111273	1					
ANR	3111569	Argument	fp		3111273	0					
ANR	3111570	Identifier	fp		3111273	0					
ANR	3111571	Argument	"""<ENDLIST>\\n\\n"""		3111273	1					
ANR	3111572	PrimaryExpression	"""<ENDLIST>\\n\\n"""		3111273	0					
ANR	3111573	IfStatement	if ( parseFailed && ! isPartial )		3111273	20					
ANR	3111574	Condition	parseFailed && ! isPartial	1947:6:60054:60078	3111273	0	True				
ANR	3111575	AndExpression	parseFailed && ! isPartial		3111273	0		&&			
ANR	3111576	Identifier	parseFailed		3111273	0					
ANR	3111577	UnaryOperationExpression	! isPartial		3111273	1					
ANR	3111578	UnaryOperator	!		3111273	0					
ANR	3111579	Identifier	isPartial		3111273	1					
ANR	3111580	CompoundStatement		56:34:1667:1667	3111273	1					
ANR	3111581	ExpressionStatement	"fprintf ( fp , ""REJECT\\n\\n"" )"	1948:2:60086:60111	3111273	0	True				
ANR	3111582	CallExpression	"fprintf ( fp , ""REJECT\\n\\n"" )"		3111273	0					
ANR	3111583	Callee	fprintf		3111273	0					
ANR	3111584	Identifier	fprintf		3111273	0					
ANR	3111585	ArgumentList	fp		3111273	1					
ANR	3111586	Argument	fp		3111273	0					
ANR	3111587	Identifier	fp		3111273	0					
ANR	3111588	Argument	"""REJECT\\n\\n"""		3111273	1					
ANR	3111589	PrimaryExpression	"""REJECT\\n\\n"""		3111273	0					
ANR	3111590	IfStatement	if ( _configFile && ! isPartial )		3111273	21					
ANR	3111591	Condition	_configFile && ! isPartial	1954:6:60166:60190	3111273	0	True				
ANR	3111592	AndExpression	_configFile && ! isPartial		3111273	0		&&			
ANR	3111593	Identifier	_configFile		3111273	0					
ANR	3111594	UnaryOperationExpression	! isPartial		3111273	1					
ANR	3111595	UnaryOperator	!		3111273	0					
ANR	3111596	Identifier	isPartial		3111273	1					
ANR	3111597	CompoundStatement		63:34:1779:1779	3111273	1					
ANR	3111598	ExpressionStatement	"fprintf ( fp , ""CONFIG %s\\n\\n"" , _configFile )"	1955:5:60201:60244	3111273	0	True				
ANR	3111599	CallExpression	"fprintf ( fp , ""CONFIG %s\\n\\n"" , _configFile )"		3111273	0					
ANR	3111600	Callee	fprintf		3111273	0					
ANR	3111601	Identifier	fprintf		3111273	0					
ANR	3111602	ArgumentList	fp		3111273	1					
ANR	3111603	Argument	fp		3111273	0					
ANR	3111604	Identifier	fp		3111273	0					
ANR	3111605	Argument	"""CONFIG %s\\n\\n"""		3111273	1					
ANR	3111606	PrimaryExpression	"""CONFIG %s\\n\\n"""		3111273	0					
ANR	3111607	Argument	_configFile		3111273	2					
ANR	3111608	Identifier	_configFile		3111273	0					
ANR	3111609	IfStatement	if ( _statusFileName && ! isPartial )		3111273	22					
ANR	3111610	Condition	_statusFileName && ! isPartial	1962:6:60307:60335	3111273	0	True				
ANR	3111611	AndExpression	_statusFileName && ! isPartial		3111273	0		&&			
ANR	3111612	Identifier	_statusFileName		3111273	0					
ANR	3111613	UnaryOperationExpression	! isPartial		3111273	1					
ANR	3111614	UnaryOperator	!		3111273	0					
ANR	3111615	Identifier	isPartial		3111273	1					
ANR	3111616	CompoundStatement		71:38:1924:1924	3111273	1					
ANR	3111617	ExpressionStatement	"fprintf ( fp , ""NODE_STATUS_FILE %s\\n\\n"" , _statusFileName )"	1963:2:60343:60400	3111273	0	True				
ANR	3111618	CallExpression	"fprintf ( fp , ""NODE_STATUS_FILE %s\\n\\n"" , _statusFileName )"		3111273	0					
ANR	3111619	Callee	fprintf		3111273	0					
ANR	3111620	Identifier	fprintf		3111273	0					
ANR	3111621	ArgumentList	fp		3111273	1					
ANR	3111622	Argument	fp		3111273	0					
ANR	3111623	Identifier	fp		3111273	0					
ANR	3111624	Argument	"""NODE_STATUS_FILE %s\\n\\n"""		3111273	1					
ANR	3111625	PrimaryExpression	"""NODE_STATUS_FILE %s\\n\\n"""		3111273	0					
ANR	3111626	Argument	_statusFileName		3111273	2					
ANR	3111627	Identifier	_statusFileName		3111273	0					
ANR	3111628	IfStatement	if ( _jobstateLog . LogFile ( ) && ! isPartial )		3111273	23					
ANR	3111629	Condition	_jobstateLog . LogFile ( ) && ! isPartial	1969:6:60461:60496	3111273	0	True				
ANR	3111630	AndExpression	_jobstateLog . LogFile ( ) && ! isPartial		3111273	0		&&			
ANR	3111631	CallExpression	_jobstateLog . LogFile ( )		3111273	0					
ANR	3111632	Callee	_jobstateLog . LogFile		3111273	0					
ANR	3111633	MemberAccess	_jobstateLog . LogFile		3111273	0					
ANR	3111634	Identifier	_jobstateLog		3111273	0					
ANR	3111635	Identifier	LogFile		3111273	1					
ANR	3111636	ArgumentList			3111273	1					
ANR	3111637	UnaryOperationExpression	! isPartial		3111273	1					
ANR	3111638	UnaryOperator	!		3111273	0					
ANR	3111639	Identifier	isPartial		3111273	1					
ANR	3111640	CompoundStatement		78:45:2085:2085	3111273	1					
ANR	3111641	ExpressionStatement	"fprintf ( fp , ""JOBSTATE_LOG %s\\n\\n"" , _jobstateLog . LogFile ( ) )"	1970:2:60504:60564	3111273	0	True				
ANR	3111642	CallExpression	"fprintf ( fp , ""JOBSTATE_LOG %s\\n\\n"" , _jobstateLog . LogFile ( ) )"		3111273	0					
ANR	3111643	Callee	fprintf		3111273	0					
ANR	3111644	Identifier	fprintf		3111273	0					
ANR	3111645	ArgumentList	fp		3111273	1					
ANR	3111646	Argument	fp		3111273	0					
ANR	3111647	Identifier	fp		3111273	0					
ANR	3111648	Argument	"""JOBSTATE_LOG %s\\n\\n"""		3111273	1					
ANR	3111649	PrimaryExpression	"""JOBSTATE_LOG %s\\n\\n"""		3111273	0					
ANR	3111650	Argument	_jobstateLog . LogFile ( )		3111273	2					
ANR	3111651	CallExpression	_jobstateLog . LogFile ( )		3111273	0					
ANR	3111652	Callee	_jobstateLog . LogFile		3111273	0					
ANR	3111653	MemberAccess	_jobstateLog . LogFile		3111273	0					
ANR	3111654	Identifier	_jobstateLog		3111273	0					
ANR	3111655	Identifier	LogFile		3111273	1					
ANR	3111656	ArgumentList			3111273	1					
ANR	3111657	ExpressionStatement	it . ToBeforeFirst ( )	1976:4:60623:60641	3111273	24	True				
ANR	3111658	CallExpression	it . ToBeforeFirst ( )		3111273	0					
ANR	3111659	Callee	it . ToBeforeFirst		3111273	0					
ANR	3111660	MemberAccess	it . ToBeforeFirst		3111273	0					
ANR	3111661	Identifier	it		3111273	0					
ANR	3111662	Identifier	ToBeforeFirst		3111273	1					
ANR	3111663	ArgumentList			3111273	1					
ANR	3111664	WhileStatement	while ( it . Next ( job ) )		3111273	25					
ANR	3111665	Condition	it . Next ( job )	1977:11:60654:60665	3111273	0	True				
ANR	3111666	CallExpression	it . Next ( job )		3111273	0					
ANR	3111667	Callee	it . Next		3111273	0					
ANR	3111668	MemberAccess	it . Next		3111273	0					
ANR	3111669	Identifier	it		3111273	0					
ANR	3111670	Identifier	Next		3111273	1					
ANR	3111671	ArgumentList	job		3111273	1					
ANR	3111672	Argument	job		3111273	0					
ANR	3111673	Identifier	job		3111273	0					
ANR	3111674	CompoundStatement		86:25:2253:2253	3111273	1					
ANR	3111675	ExpressionStatement	"WriteNodeToRescue ( fp , job , reset_retries_upon_rescue , isPartial )"	1978:2:60672:60738	3111273	0	True				
ANR	3111676	CallExpression	"WriteNodeToRescue ( fp , job , reset_retries_upon_rescue , isPartial )"		3111273	0					
ANR	3111677	Callee	WriteNodeToRescue		3111273	0					
ANR	3111678	Identifier	WriteNodeToRescue		3111273	0					
ANR	3111679	ArgumentList	fp		3111273	1					
ANR	3111680	Argument	fp		3111273	0					
ANR	3111681	Identifier	fp		3111273	0					
ANR	3111682	Argument	job		3111273	1					
ANR	3111683	Identifier	job		3111273	0					
ANR	3111684	Argument	reset_retries_upon_rescue		3111273	2					
ANR	3111685	Identifier	reset_retries_upon_rescue		3111273	0					
ANR	3111686	Argument	isPartial		3111273	3					
ANR	3111687	Identifier	isPartial		3111273	0					
ANR	3111688	IfStatement	if ( ! isPartial )		3111273	26					
ANR	3111689	Condition	! isPartial	1984:6:60799:60808	3111273	0	True				
ANR	3111690	UnaryOperationExpression	! isPartial		3111273	0					
ANR	3111691	UnaryOperator	!		3111273	0					
ANR	3111692	Identifier	isPartial		3111273	1					
ANR	3111693	CompoundStatement		93:19:2397:2397	3111273	1					
ANR	3111694	ExpressionStatement	"fprintf ( fp , ""\\n"" )"	1985:5:60819:60836	3111273	0	True				
ANR	3111695	CallExpression	"fprintf ( fp , ""\\n"" )"		3111273	0					
ANR	3111696	Callee	fprintf		3111273	0					
ANR	3111697	Identifier	fprintf		3111273	0					
ANR	3111698	ArgumentList	fp		3111273	1					
ANR	3111699	Argument	fp		3111273	0					
ANR	3111700	Identifier	fp		3111273	0					
ANR	3111701	Argument	"""\\n"""		3111273	1					
ANR	3111702	PrimaryExpression	"""\\n"""		3111273	0					
ANR	3111703	ExpressionStatement	it . ToBeforeFirst ( )	1986:5:60843:60861	3111273	1	True				
ANR	3111704	CallExpression	it . ToBeforeFirst ( )		3111273	0					
ANR	3111705	Callee	it . ToBeforeFirst		3111273	0					
ANR	3111706	MemberAccess	it . ToBeforeFirst		3111273	0					
ANR	3111707	Identifier	it		3111273	0					
ANR	3111708	Identifier	ToBeforeFirst		3111273	1					
ANR	3111709	ArgumentList			3111273	1					
ANR	3111710	WhileStatement	while ( it . Next ( job ) )		3111273	2					
ANR	3111711	Condition	it . Next ( job )	1987:12:60875:60886	3111273	0	True				
ANR	3111712	CallExpression	it . Next ( job )		3111273	0					
ANR	3111713	Callee	it . Next		3111273	0					
ANR	3111714	MemberAccess	it . Next		3111273	0					
ANR	3111715	Identifier	it		3111273	0					
ANR	3111716	Identifier	Next		3111273	1					
ANR	3111717	ArgumentList	job		3111273	1					
ANR	3111718	Argument	job		3111273	0					
ANR	3111719	Identifier	job		3111273	0					
ANR	3111720	CompoundStatement		98:9:2486:2543	3111273	1					
ANR	3111721	IdentifierDeclStatement	set < JobID_t > & _queue = job -> GetQueueRef ( Job :: Q_CHILDREN ) ;	1989:9:60901:60958	3111273	0	True				
ANR	3111722	IdentifierDecl	& _queue = job -> GetQueueRef ( Job :: Q_CHILDREN )		3111273	0					
ANR	3111723	IdentifierDeclType	set < JobID_t > &		3111273	0					
ANR	3111724	Identifier	_queue		3111273	1					
ANR	3111725	AssignmentExpression	& _queue = job -> GetQueueRef ( Job :: Q_CHILDREN )		3111273	2		=			
ANR	3111726	Identifier	_queue		3111273	0					
ANR	3111727	CallExpression	job -> GetQueueRef ( Job :: Q_CHILDREN )		3111273	1					
ANR	3111728	Callee	job -> GetQueueRef		3111273	0					
ANR	3111729	PtrMemberAccess	job -> GetQueueRef		3111273	0					
ANR	3111730	Identifier	job		3111273	0					
ANR	3111731	Identifier	GetQueueRef		3111273	1					
ANR	3111732	ArgumentList	Job :: Q_CHILDREN		3111273	1					
ANR	3111733	Argument	Job :: Q_CHILDREN		3111273	0					
ANR	3111734	Identifier	Job :: Q_CHILDREN		3111273	0					
ANR	3111735	IfStatement	if ( ! _queue . empty ( ) )		3111273	1					
ANR	3111736	Condition	! _queue . empty ( )	1990:13:60973:60987	3111273	0	True				
ANR	3111737	UnaryOperationExpression	! _queue . empty ( )		3111273	0					
ANR	3111738	UnaryOperator	!		3111273	0					
ANR	3111739	CallExpression	_queue . empty ( )		3111273	1					
ANR	3111740	Callee	_queue . empty		3111273	0					
ANR	3111741	MemberAccess	_queue . empty		3111273	0					
ANR	3111742	Identifier	_queue		3111273	0					
ANR	3111743	Identifier	empty		3111273	1					
ANR	3111744	ArgumentList			3111273	1					
ANR	3111745	CompoundStatement		102:4:2646:2678	3111273	1					
ANR	3111746	ExpressionStatement	"fprintf ( fp , ""PARENT %s CHILD"" , job -> GetJobName ( ) )"	1991:13:61005:61054	3111273	0	True				
ANR	3111747	CallExpression	"fprintf ( fp , ""PARENT %s CHILD"" , job -> GetJobName ( ) )"		3111273	0					
ANR	3111748	Callee	fprintf		3111273	0					
ANR	3111749	Identifier	fprintf		3111273	0					
ANR	3111750	ArgumentList	fp		3111273	1					
ANR	3111751	Argument	fp		3111273	0					
ANR	3111752	Identifier	fp		3111273	0					
ANR	3111753	Argument	"""PARENT %s CHILD"""		3111273	1					
ANR	3111754	PrimaryExpression	"""PARENT %s CHILD"""		3111273	0					
ANR	3111755	Argument	job -> GetJobName ( )		3111273	2					
ANR	3111756	CallExpression	job -> GetJobName ( )		3111273	0					
ANR	3111757	Callee	job -> GetJobName		3111273	0					
ANR	3111758	PtrMemberAccess	job -> GetJobName		3111273	0					
ANR	3111759	Identifier	job		3111273	0					
ANR	3111760	Identifier	GetJobName		3111273	1					
ANR	3111761	ArgumentList			3111273	1					
ANR	3111762	IdentifierDeclStatement	set < JobID_t > :: const_iterator qit ;	1993:4:61061:61093	3111273	1	True				
ANR	3111763	IdentifierDecl	qit		3111273	0					
ANR	3111764	IdentifierDeclType	set < JobID_t > :: const_iterator		3111273	0					
ANR	3111765	Identifier	qit		3111273	1					
ANR	3111766	ForStatement	for ( qit = _queue . begin ( ) ; qit != _queue . end ( ) ; qit ++ )		3111273	2					
ANR	3111767	ForInit	qit = _queue . begin ( ) ;	1994:9:61104:61124	3111273	0	True				
ANR	3111768	AssignmentExpression	qit = _queue . begin ( )		3111273	0		=			
ANR	3111769	Identifier	qit		3111273	0					
ANR	3111770	CallExpression	_queue . begin ( )		3111273	1					
ANR	3111771	Callee	_queue . begin		3111273	0					
ANR	3111772	MemberAccess	_queue . begin		3111273	0					
ANR	3111773	Identifier	_queue		3111273	0					
ANR	3111774	Identifier	begin		3111273	1					
ANR	3111775	ArgumentList			3111273	1					
ANR	3111776	Condition	qit != _queue . end ( )	1994:31:61126:61144	3111273	1	True				
ANR	3111777	EqualityExpression	qit != _queue . end ( )		3111273	0		!=			
ANR	3111778	Identifier	qit		3111273	0					
ANR	3111779	CallExpression	_queue . end ( )		3111273	1					
ANR	3111780	Callee	_queue . end		3111273	0					
ANR	3111781	MemberAccess	_queue . end		3111273	0					
ANR	3111782	Identifier	_queue		3111273	0					
ANR	3111783	Identifier	end		3111273	1					
ANR	3111784	ArgumentList			3111273	1					
ANR	3111785	PostIncDecOperationExpression	qit ++	1994:52:61147:61151	3111273	2	True				
ANR	3111786	Identifier	qit		3111273	0					
ANR	3111787	IncDec	++		3111273	1					
ANR	3111788	CompoundStatement		104:17:2758:2796	3111273	3					
ANR	3111789	IdentifierDeclStatement	Job * child = FindNodeByNodeID ( * qit ) ;	1995:17:61173:61211	3111273	0	True				
ANR	3111790	IdentifierDecl	* child = FindNodeByNodeID ( * qit )		3111273	0					
ANR	3111791	IdentifierDeclType	Job *		3111273	0					
ANR	3111792	Identifier	child		3111273	1					
ANR	3111793	AssignmentExpression	* child = FindNodeByNodeID ( * qit )		3111273	2		=			
ANR	3111794	Identifier	child		3111273	0					
ANR	3111795	CallExpression	FindNodeByNodeID ( * qit )		3111273	1					
ANR	3111796	Callee	FindNodeByNodeID		3111273	0					
ANR	3111797	Identifier	FindNodeByNodeID		3111273	0					
ANR	3111798	ArgumentList	* qit		3111273	1					
ANR	3111799	Argument	* qit		3111273	0					
ANR	3111800	UnaryOperationExpression	* qit		3111273	0					
ANR	3111801	UnaryOperator	*		3111273	0					
ANR	3111802	Identifier	qit		3111273	1					
ANR	3111803	ExpressionStatement	ASSERT ( child != NULL )	1996:17:61230:61253	3111273	1	True				
ANR	3111804	CallExpression	ASSERT ( child != NULL )		3111273	0					
ANR	3111805	Callee	ASSERT		3111273	0					
ANR	3111806	Identifier	ASSERT		3111273	0					
ANR	3111807	ArgumentList	child != NULL		3111273	1					
ANR	3111808	Argument	child != NULL		3111273	0					
ANR	3111809	EqualityExpression	child != NULL		3111273	0		!=			
ANR	3111810	Identifier	child		3111273	0					
ANR	3111811	Identifier	NULL		3111273	1					
ANR	3111812	ExpressionStatement	"fprintf ( fp , "" %s"" , child -> GetJobName ( ) )"	1997:17:61272:61311	3111273	2	True				
ANR	3111813	CallExpression	"fprintf ( fp , "" %s"" , child -> GetJobName ( ) )"		3111273	0					
ANR	3111814	Callee	fprintf		3111273	0					
ANR	3111815	Identifier	fprintf		3111273	0					
ANR	3111816	ArgumentList	fp		3111273	1					
ANR	3111817	Argument	fp		3111273	0					
ANR	3111818	Identifier	fp		3111273	0					
ANR	3111819	Argument	""" %s"""		3111273	1					
ANR	3111820	PrimaryExpression	""" %s"""		3111273	0					
ANR	3111821	Argument	child -> GetJobName ( )		3111273	2					
ANR	3111822	CallExpression	child -> GetJobName ( )		3111273	0					
ANR	3111823	Callee	child -> GetJobName		3111273	0					
ANR	3111824	PtrMemberAccess	child -> GetJobName		3111273	0					
ANR	3111825	Identifier	child		3111273	0					
ANR	3111826	Identifier	GetJobName		3111273	1					
ANR	3111827	ArgumentList			3111273	1					
ANR	3111828	ExpressionStatement	"fprintf ( fp , ""\\n"" )"	1999:13:61332:61349	3111273	3	True				
ANR	3111829	CallExpression	"fprintf ( fp , ""\\n"" )"		3111273	0					
ANR	3111830	Callee	fprintf		3111273	0					
ANR	3111831	Identifier	fprintf		3111273	0					
ANR	3111832	ArgumentList	fp		3111273	1					
ANR	3111833	Argument	fp		3111273	0					
ANR	3111834	Identifier	fp		3111273	0					
ANR	3111835	Argument	"""\\n"""		3111273	1					
ANR	3111836	PrimaryExpression	"""\\n"""		3111273	0					
ANR	3111837	IfStatement	if ( ! isPartial )		3111273	27					
ANR	3111838	Condition	! isPartial	2007:6:61435:61444	3111273	0	True				
ANR	3111839	UnaryOperationExpression	! isPartial		3111273	0					
ANR	3111840	UnaryOperator	!		3111273	0					
ANR	3111841	Identifier	isPartial		3111273	1					
ANR	3111842	CompoundStatement		116:19:3033:3033	3111273	1					
ANR	3111843	ExpressionStatement	_catThrottles . PrintThrottles ( fp )	2008:2:61452:61486	3111273	0	True				
ANR	3111844	CallExpression	_catThrottles . PrintThrottles ( fp )		3111273	0					
ANR	3111845	Callee	_catThrottles . PrintThrottles		3111273	0					
ANR	3111846	MemberAccess	_catThrottles . PrintThrottles		3111273	0					
ANR	3111847	Identifier	_catThrottles		3111273	0					
ANR	3111848	Identifier	PrintThrottles		3111273	1					
ANR	3111849	ArgumentList	fp		3111273	1					
ANR	3111850	Argument	fp		3111273	0					
ANR	3111851	Identifier	fp		3111273	0					
ANR	3111852	ExpressionStatement	fclose ( fp )	2011:4:61496:61508	3111273	28	True				
ANR	3111853	CallExpression	fclose ( fp )		3111273	0					
ANR	3111854	Callee	fclose		3111273	0					
ANR	3111855	Identifier	fclose		3111273	0					
ANR	3111856	ArgumentList	fp		3111273	1					
ANR	3111857	Argument	fp		3111273	0					
ANR	3111858	Identifier	fp		3111273	0					
ANR	3111859	ReturnType	void		3111273	1					
ANR	3111860	Identifier	Dag :: WriteRescue		3111273	2					
ANR	3111861	ParameterList	"const char * rescue_file , const char * dagFile , bool parseFailed , bool isPartial"		3111273	3					
ANR	3111862	Parameter	const char * rescue_file	1890:23:58317:58340	3111273	0	True				
ANR	3111863	ParameterType	const char *		3111273	0					
ANR	3111864	Identifier	rescue_file		3111273	1					
ANR	3111865	Parameter	const char * dagFile	1890:49:58343:58362	3111273	1	True				
ANR	3111866	ParameterType	const char *		3111273	0					
ANR	3111867	Identifier	dagFile		3111273	1					
ANR	3111868	Parameter	bool parseFailed	1891:3:58368:58383	3111273	2	True				
ANR	3111869	ParameterType	bool		3111273	0					
ANR	3111870	Identifier	parseFailed		3111273	1					
ANR	3111871	Parameter	bool isPartial	1891:21:58386:58399	3111273	3	True				
ANR	3111872	ParameterType	bool		3111273	0					
ANR	3111873	Identifier	isPartial		3111273	1					
ANR	3111874	CFGEntryNode	ENTRY		3111273		True				
ANR	3111875	CFGExitNode	EXIT		3111273		True				
ANR	3111876	Symbol	Job :: Q_CHILDREN		3111273						
ANR	3111877	Symbol	parseFailed		3111273						
ANR	3111878	Symbol	* qit		3111273						
ANR	3111879	Symbol	rescue_file		3111273						
ANR	3111880	Symbol	DEBUG_NORMAL		3111273						
ANR	3111881	Symbol	_catThrottles		3111273						
ANR	3111882	Symbol	DEBUG_QUIET		3111273						
ANR	3111883	Symbol	it . Next		3111273						
ANR	3111884	Symbol	_queue		3111273						
ANR	3111885	Symbol	_configFile		3111273						
ANR	3111886	Symbol	* child		3111273						
ANR	3111887	Symbol	NULL		3111273						
ANR	3111888	Symbol	* job		3111273						
ANR	3111889	Symbol	job -> GetJobName		3111273						
ANR	3111890	Symbol	param_boolean		3111273						
ANR	3111891	Symbol	it		3111273						
ANR	3111892	Symbol	tm -> tm_mon		3111273						
ANR	3111893	Symbol	reset_retries_upon_rescue		3111273						
ANR	3111894	Symbol	_numNodesDone		3111273						
ANR	3111895	Symbol	true		3111273						
ANR	3111896	Symbol	_numNodesFailed		3111273						
ANR	3111897	Symbol	_queue . end		3111273						
ANR	3111898	Symbol	* tm		3111273						
ANR	3111899	Symbol	job		3111273						
ANR	3111900	Symbol	NumNodes		3111273						
ANR	3111901	Symbol	child		3111273						
ANR	3111902	Symbol	child -> GetJobName		3111273						
ANR	3111903	Symbol	fp		3111273						
ANR	3111904	Symbol	gmtime		3111273						
ANR	3111905	Symbol	_jobstateLog		3111273						
ANR	3111906	Symbol	_queue . empty		3111273						
ANR	3111907	Symbol	tm -> tm_mday		3111273						
ANR	3111908	Symbol	isPartial		3111273						
ANR	3111909	Symbol	tm -> tm_year		3111273						
ANR	3111910	Symbol	safe_fopen_wrapper_follow		3111273						
ANR	3111911	Symbol	qit		3111273						
ANR	3111912	Symbol	timestamp		3111273						
ANR	3111913	Symbol	dagFile		3111273						
ANR	3111914	Symbol	Job :: STATUS_ERROR		3111273						
ANR	3111915	Symbol	job -> GetStatus		3111273						
ANR	3111916	Symbol	_jobstateLog . LogFile		3111273						
ANR	3111917	Symbol	_statusFileName		3111273						
ANR	3111918	Symbol	FindNodeByNodeID		3111273						
ANR	3111919	Symbol	& timestamp		3111273						
ANR	3111920	Symbol	job -> GetQueueRef		3111273						
ANR	3111921	Symbol	tm -> tm_min		3111273						
ANR	3111922	Symbol	tm -> tm_sec		3111273						
ANR	3111923	Symbol	tm		3111273						
ANR	3111924	Symbol	tm -> tm_hour		3111273						
ANR	3111925	Symbol	_queue . begin		3111273						
ANR	3111926	Symbol	RESCUE_DAG_VERSION		3111273						
ANR	3111927	Function	Dag :: WriteNodeToRescue	2015:0:61593:65585							
ANR	3111928	FunctionDef	"Dag :: WriteNodeToRescue (FILE * fp , Job * node , bool reset_retries_upon_rescue , bool isPartial)"		3111927	0					
ANR	3111929	CompoundStatement		2018:0:61695:65585	3111927	0					
ANR	3111930	IdentifierDeclStatement	"const char * keyword = """" ;"	2020:1:61728:61752	3111927	0	True				
ANR	3111931	IdentifierDecl	"* keyword = """""		3111927	0					
ANR	3111932	IdentifierDeclType	const char *		3111927	0					
ANR	3111933	Identifier	keyword		3111927	1					
ANR	3111934	AssignmentExpression	"* keyword = """""		3111927	2		=			
ANR	3111935	Identifier	keyword		3111927	0					
ANR	3111936	PrimaryExpression	""""""		3111927	1					
ANR	3111937	IfStatement	if ( node -> JobType ( ) == Job :: TYPE_CONDOR )		3111927	1					
ANR	3111938	Condition	node -> JobType ( ) == Job :: TYPE_CONDOR	2021:6:61760:61794	3111927	0	True				
ANR	3111939	EqualityExpression	node -> JobType ( ) == Job :: TYPE_CONDOR		3111927	0		==			
ANR	3111940	CallExpression	node -> JobType ( )		3111927	0					
ANR	3111941	Callee	node -> JobType		3111927	0					
ANR	3111942	PtrMemberAccess	node -> JobType		3111927	0					
ANR	3111943	Identifier	node		3111927	0					
ANR	3111944	Identifier	JobType		3111927	1					
ANR	3111945	ArgumentList			3111927	1					
ANR	3111946	Identifier	Job :: TYPE_CONDOR		3111927	1					
ANR	3111947	CompoundStatement		4:44:102:102	3111927	1					
ANR	3111948	ExpressionStatement	"keyword = node -> GetDagFile ( ) ? ""SUBDAG EXTERNAL"" : ""JOB"""	2022:2:61802:61858	3111927	0	True				
ANR	3111949	AssignmentExpression	"keyword = node -> GetDagFile ( ) ? ""SUBDAG EXTERNAL"" : ""JOB"""		3111927	0		=			
ANR	3111950	Identifier	keyword		3111927	0					
ANR	3111951	ConditionalExpression	"node -> GetDagFile ( ) ? ""SUBDAG EXTERNAL"" : ""JOB"""		3111927	1					
ANR	3111952	Condition	node -> GetDagFile ( )		3111927	0					
ANR	3111953	CallExpression	node -> GetDagFile ( )		3111927	0					
ANR	3111954	Callee	node -> GetDagFile		3111927	0					
ANR	3111955	PtrMemberAccess	node -> GetDagFile		3111927	0					
ANR	3111956	Identifier	node		3111927	0					
ANR	3111957	Identifier	GetDagFile		3111927	1					
ANR	3111958	ArgumentList			3111927	1					
ANR	3111959	PrimaryExpression	"""SUBDAG EXTERNAL"""		3111927	1					
ANR	3111960	PrimaryExpression	"""JOB"""		3111927	2					
ANR	3111961	ElseStatement	else		3111927	0					
ANR	3111962	IfStatement	if ( node -> JobType ( ) == Job :: TYPE_STORK )		3111927	0					
ANR	3111963	Condition	node -> JobType ( ) == Job :: TYPE_STORK	2023:12:61872:61905	3111927	0	True				
ANR	3111964	EqualityExpression	node -> JobType ( ) == Job :: TYPE_STORK		3111927	0		==			
ANR	3111965	CallExpression	node -> JobType ( )		3111927	0					
ANR	3111966	Callee	node -> JobType		3111927	0					
ANR	3111967	PtrMemberAccess	node -> JobType		3111927	0					
ANR	3111968	Identifier	node		3111927	0					
ANR	3111969	Identifier	JobType		3111927	1					
ANR	3111970	ArgumentList			3111927	1					
ANR	3111971	Identifier	Job :: TYPE_STORK		3111927	1					
ANR	3111972	CompoundStatement		6:49:213:213	3111927	1					
ANR	3111973	ExpressionStatement	"keyword = ""DATA"""	2024:2:61913:61929	3111927	0	True				
ANR	3111974	AssignmentExpression	"keyword = ""DATA"""		3111927	0		=			
ANR	3111975	Identifier	keyword		3111927	0					
ANR	3111976	PrimaryExpression	"""DATA"""		3111927	1					
ANR	3111977	ElseStatement	else		3111927	0					
ANR	3111978	CompoundStatement		8:8:243:243	3111927	0					
ANR	3111979	ExpressionStatement	"EXCEPT ( ""Illegal node type (%d)\\n"" , node -> JobType ( ) )"	2026:2:61943:61996	3111927	0	True				
ANR	3111980	CallExpression	"EXCEPT ( ""Illegal node type (%d)\\n"" , node -> JobType ( ) )"		3111927	0					
ANR	3111981	Callee	EXCEPT		3111927	0					
ANR	3111982	Identifier	EXCEPT		3111927	0					
ANR	3111983	ArgumentList	"""Illegal node type (%d)\\n"""		3111927	1					
ANR	3111984	Argument	"""Illegal node type (%d)\\n"""		3111927	0					
ANR	3111985	PrimaryExpression	"""Illegal node type (%d)\\n"""		3111927	0					
ANR	3111986	Argument	node -> JobType ( )		3111927	1					
ANR	3111987	CallExpression	node -> JobType ( )		3111927	0					
ANR	3111988	Callee	node -> JobType		3111927	0					
ANR	3111989	PtrMemberAccess	node -> JobType		3111927	0					
ANR	3111990	Identifier	node		3111927	0					
ANR	3111991	Identifier	JobType		3111927	1					
ANR	3111992	ArgumentList			3111927	1					
ANR	3111993	IfStatement	if ( ! isPartial )		3111927	2					
ANR	3111994	Condition	! isPartial	2029:6:62008:62017	3111927	0	True				
ANR	3111995	UnaryOperationExpression	! isPartial		3111927	0					
ANR	3111996	UnaryOperator	!		3111927	0					
ANR	3111997	Identifier	isPartial		3111927	1					
ANR	3111998	CompoundStatement		12:19:325:325	3111927	1					
ANR	3111999	ExpressionStatement	"fprintf ( fp , ""\\n%s %s %s "" , keyword , node -> GetJobName ( ) , node -> GetDagFile ( ) ? node -> GetDagFile ( ) : node -> GetCmdFile ( ) )"	2030:2:62025:62154	3111927	0	True				
ANR	3112000	CallExpression	"fprintf ( fp , ""\\n%s %s %s "" , keyword , node -> GetJobName ( ) , node -> GetDagFile ( ) ? node -> GetDagFile ( ) : node -> GetCmdFile ( ) )"		3111927	0					
ANR	3112001	Callee	fprintf		3111927	0					
ANR	3112002	Identifier	fprintf		3111927	0					
ANR	3112003	ArgumentList	fp		3111927	1					
ANR	3112004	Argument	fp		3111927	0					
ANR	3112005	Identifier	fp		3111927	0					
ANR	3112006	Argument	"""\\n%s %s %s """		3111927	1					
ANR	3112007	PrimaryExpression	"""\\n%s %s %s """		3111927	0					
ANR	3112008	Argument	keyword		3111927	2					
ANR	3112009	Identifier	keyword		3111927	0					
ANR	3112010	Argument	node -> GetJobName ( )		3111927	3					
ANR	3112011	CallExpression	node -> GetJobName ( )		3111927	0					
ANR	3112012	Callee	node -> GetJobName		3111927	0					
ANR	3112013	PtrMemberAccess	node -> GetJobName		3111927	0					
ANR	3112014	Identifier	node		3111927	0					
ANR	3112015	Identifier	GetJobName		3111927	1					
ANR	3112016	ArgumentList			3111927	1					
ANR	3112017	Argument	node -> GetDagFile ( ) ? node -> GetDagFile ( ) : node -> GetCmdFile ( )		3111927	4					
ANR	3112018	ConditionalExpression	node -> GetDagFile ( ) ? node -> GetDagFile ( ) : node -> GetCmdFile ( )		3111927	0					
ANR	3112019	Condition	node -> GetDagFile ( )		3111927	0					
ANR	3112020	CallExpression	node -> GetDagFile ( )		3111927	0					
ANR	3112021	Callee	node -> GetDagFile		3111927	0					
ANR	3112022	PtrMemberAccess	node -> GetDagFile		3111927	0					
ANR	3112023	Identifier	node		3111927	0					
ANR	3112024	Identifier	GetDagFile		3111927	1					
ANR	3112025	ArgumentList			3111927	1					
ANR	3112026	CallExpression	node -> GetDagFile ( )		3111927	1					
ANR	3112027	Callee	node -> GetDagFile		3111927	0					
ANR	3112028	PtrMemberAccess	node -> GetDagFile		3111927	0					
ANR	3112029	Identifier	node		3111927	0					
ANR	3112030	Identifier	GetDagFile		3111927	1					
ANR	3112031	ArgumentList			3111927	1					
ANR	3112032	CallExpression	node -> GetCmdFile ( )		3111927	2					
ANR	3112033	Callee	node -> GetCmdFile		3111927	0					
ANR	3112034	PtrMemberAccess	node -> GetCmdFile		3111927	0					
ANR	3112035	Identifier	node		3111927	0					
ANR	3112036	Identifier	GetCmdFile		3111927	1					
ANR	3112037	ArgumentList			3111927	1					
ANR	3112038	IfStatement	"if ( strcmp ( node -> GetDirectory ( ) , """" ) )"		3111927	1					
ANR	3112039	Condition	"strcmp ( node -> GetDirectory ( ) , """" )"	2033:7:62163:62196	3111927	0	True				
ANR	3112040	CallExpression	"strcmp ( node -> GetDirectory ( ) , """" )"		3111927	0					
ANR	3112041	Callee	strcmp		3111927	0					
ANR	3112042	Identifier	strcmp		3111927	0					
ANR	3112043	ArgumentList	node -> GetDirectory ( )		3111927	1					
ANR	3112044	Argument	node -> GetDirectory ( )		3111927	0					
ANR	3112045	CallExpression	node -> GetDirectory ( )		3111927	0					
ANR	3112046	Callee	node -> GetDirectory		3111927	0					
ANR	3112047	PtrMemberAccess	node -> GetDirectory		3111927	0					
ANR	3112048	Identifier	node		3111927	0					
ANR	3112049	Identifier	GetDirectory		3111927	1					
ANR	3112050	ArgumentList			3111927	1					
ANR	3112051	Argument	""""""		3111927	1					
ANR	3112052	PrimaryExpression	""""""		3111927	0					
ANR	3112053	CompoundStatement		16:44:504:504	3111927	1					
ANR	3112054	ExpressionStatement	"fprintf ( fp , ""DIR %s "" , node -> GetDirectory ( ) )"	2034:3:62205:62251	3111927	0	True				
ANR	3112055	CallExpression	"fprintf ( fp , ""DIR %s "" , node -> GetDirectory ( ) )"		3111927	0					
ANR	3112056	Callee	fprintf		3111927	0					
ANR	3112057	Identifier	fprintf		3111927	0					
ANR	3112058	ArgumentList	fp		3111927	1					
ANR	3112059	Argument	fp		3111927	0					
ANR	3112060	Identifier	fp		3111927	0					
ANR	3112061	Argument	"""DIR %s """		3111927	1					
ANR	3112062	PrimaryExpression	"""DIR %s """		3111927	0					
ANR	3112063	Argument	node -> GetDirectory ( )		3111927	2					
ANR	3112064	CallExpression	node -> GetDirectory ( )		3111927	0					
ANR	3112065	Callee	node -> GetDirectory		3111927	0					
ANR	3112066	PtrMemberAccess	node -> GetDirectory		3111927	0					
ANR	3112067	Identifier	node		3111927	0					
ANR	3112068	Identifier	GetDirectory		3111927	1					
ANR	3112069	ArgumentList			3111927	1					
ANR	3112070	IfStatement	if ( node -> GetNoop ( ) )		3111927	2					
ANR	3112071	Condition	node -> GetNoop ( )	2036:7:62264:62278	3111927	0	True				
ANR	3112072	CallExpression	node -> GetNoop ( )		3111927	0					
ANR	3112073	Callee	node -> GetNoop		3111927	0					
ANR	3112074	PtrMemberAccess	node -> GetNoop		3111927	0					
ANR	3112075	Identifier	node		3111927	0					
ANR	3112076	Identifier	GetNoop		3111927	1					
ANR	3112077	ArgumentList			3111927	1					
ANR	3112078	CompoundStatement		19:25:586:586	3111927	1					
ANR	3112079	ExpressionStatement	"fprintf ( fp , ""NOOP "" )"	2037:3:62287:62309	3111927	0	True				
ANR	3112080	CallExpression	"fprintf ( fp , ""NOOP "" )"		3111927	0					
ANR	3112081	Callee	fprintf		3111927	0					
ANR	3112082	Identifier	fprintf		3111927	0					
ANR	3112083	ArgumentList	fp		3111927	1					
ANR	3112084	Argument	fp		3111927	0					
ANR	3112085	Identifier	fp		3111927	0					
ANR	3112086	Argument	"""NOOP """		3111927	1					
ANR	3112087	PrimaryExpression	"""NOOP """		3111927	0					
ANR	3112088	ExpressionStatement	"fprintf ( fp , ""\\n"" )"	2039:2:62317:62336	3111927	3	True				
ANR	3112089	CallExpression	"fprintf ( fp , ""\\n"" )"		3111927	0					
ANR	3112090	Callee	fprintf		3111927	0					
ANR	3112091	Identifier	fprintf		3111927	0					
ANR	3112092	ArgumentList	fp		3111927	1					
ANR	3112093	Argument	fp		3111927	0					
ANR	3112094	Identifier	fp		3111927	0					
ANR	3112095	Argument	"""\\n"""		3111927	1					
ANR	3112096	PrimaryExpression	"""\\n"""		3111927	0					
ANR	3112097	IfStatement	if ( node -> _scriptPre != NULL )		3111927	4					
ANR	3112098	Condition	node -> _scriptPre != NULL	2042:7:62387:62410	3111927	0	True				
ANR	3112099	EqualityExpression	node -> _scriptPre != NULL		3111927	0		!=			
ANR	3112100	PtrMemberAccess	node -> _scriptPre		3111927	0					
ANR	3112101	Identifier	node		3111927	0					
ANR	3112102	Identifier	_scriptPre		3111927	1					
ANR	3112103	Identifier	NULL		3111927	1					
ANR	3112104	CompoundStatement		25:34:718:718	3111927	1					
ANR	3112105	ExpressionStatement	"fprintf ( fp , ""SCRIPT PRE  %s %s\\n"" , node -> GetJobName ( ) , node -> _scriptPre -> GetCmd ( ) )"	2043:3:62419:62507	3111927	0	True				
ANR	3112106	CallExpression	"fprintf ( fp , ""SCRIPT PRE  %s %s\\n"" , node -> GetJobName ( ) , node -> _scriptPre -> GetCmd ( ) )"		3111927	0					
ANR	3112107	Callee	fprintf		3111927	0					
ANR	3112108	Identifier	fprintf		3111927	0					
ANR	3112109	ArgumentList	fp		3111927	1					
ANR	3112110	Argument	fp		3111927	0					
ANR	3112111	Identifier	fp		3111927	0					
ANR	3112112	Argument	"""SCRIPT PRE  %s %s\\n"""		3111927	1					
ANR	3112113	PrimaryExpression	"""SCRIPT PRE  %s %s\\n"""		3111927	0					
ANR	3112114	Argument	node -> GetJobName ( )		3111927	2					
ANR	3112115	CallExpression	node -> GetJobName ( )		3111927	0					
ANR	3112116	Callee	node -> GetJobName		3111927	0					
ANR	3112117	PtrMemberAccess	node -> GetJobName		3111927	0					
ANR	3112118	Identifier	node		3111927	0					
ANR	3112119	Identifier	GetJobName		3111927	1					
ANR	3112120	ArgumentList			3111927	1					
ANR	3112121	Argument	node -> _scriptPre -> GetCmd ( )		3111927	3					
ANR	3112122	CallExpression	node -> _scriptPre -> GetCmd ( )		3111927	0					
ANR	3112123	Callee	node -> _scriptPre -> GetCmd		3111927	0					
ANR	3112124	PtrMemberAccess	node -> _scriptPre -> GetCmd		3111927	0					
ANR	3112125	PtrMemberAccess	node -> _scriptPre		3111927	0					
ANR	3112126	Identifier	node		3111927	0					
ANR	3112127	Identifier	_scriptPre		3111927	1					
ANR	3112128	Identifier	GetCmd		3111927	1					
ANR	3112129	ArgumentList			3111927	1					
ANR	3112130	IfStatement	if ( node -> HasPreSkip ( ) != 0 )		3111927	5					
ANR	3112131	Condition	node -> HasPreSkip ( ) != 0	2048:7:62560:62582	3111927	0	True				
ANR	3112132	EqualityExpression	node -> HasPreSkip ( ) != 0		3111927	0		!=			
ANR	3112133	CallExpression	node -> HasPreSkip ( )		3111927	0					
ANR	3112134	Callee	node -> HasPreSkip		3111927	0					
ANR	3112135	PtrMemberAccess	node -> HasPreSkip		3111927	0					
ANR	3112136	Identifier	node		3111927	0					
ANR	3112137	Identifier	HasPreSkip		3111927	1					
ANR	3112138	ArgumentList			3111927	1					
ANR	3112139	PrimaryExpression	0		3111927	1					
ANR	3112140	CompoundStatement		31:33:890:890	3111927	1					
ANR	3112141	ExpressionStatement	"fprintf ( fp , ""PRE_SKIP %s %d\\n"" , node -> GetJobName ( ) , node -> GetPreSkip ( ) )"	2049:3:62591:62664	3111927	0	True				
ANR	3112142	CallExpression	"fprintf ( fp , ""PRE_SKIP %s %d\\n"" , node -> GetJobName ( ) , node -> GetPreSkip ( ) )"		3111927	0					
ANR	3112143	Callee	fprintf		3111927	0					
ANR	3112144	Identifier	fprintf		3111927	0					
ANR	3112145	ArgumentList	fp		3111927	1					
ANR	3112146	Argument	fp		3111927	0					
ANR	3112147	Identifier	fp		3111927	0					
ANR	3112148	Argument	"""PRE_SKIP %s %d\\n"""		3111927	1					
ANR	3112149	PrimaryExpression	"""PRE_SKIP %s %d\\n"""		3111927	0					
ANR	3112150	Argument	node -> GetJobName ( )		3111927	2					
ANR	3112151	CallExpression	node -> GetJobName ( )		3111927	0					
ANR	3112152	Callee	node -> GetJobName		3111927	0					
ANR	3112153	PtrMemberAccess	node -> GetJobName		3111927	0					
ANR	3112154	Identifier	node		3111927	0					
ANR	3112155	Identifier	GetJobName		3111927	1					
ANR	3112156	ArgumentList			3111927	1					
ANR	3112157	Argument	node -> GetPreSkip ( )		3111927	3					
ANR	3112158	CallExpression	node -> GetPreSkip ( )		3111927	0					
ANR	3112159	Callee	node -> GetPreSkip		3111927	0					
ANR	3112160	PtrMemberAccess	node -> GetPreSkip		3111927	0					
ANR	3112161	Identifier	node		3111927	0					
ANR	3112162	Identifier	GetPreSkip		3111927	1					
ANR	3112163	ArgumentList			3111927	1					
ANR	3112164	IfStatement	if ( node -> _scriptPost != NULL )		3111927	6					
ANR	3112165	Condition	node -> _scriptPost != NULL	2053:7:62720:62744	3111927	0	True				
ANR	3112166	EqualityExpression	node -> _scriptPost != NULL		3111927	0		!=			
ANR	3112167	PtrMemberAccess	node -> _scriptPost		3111927	0					
ANR	3112168	Identifier	node		3111927	0					
ANR	3112169	Identifier	_scriptPost		3111927	1					
ANR	3112170	Identifier	NULL		3111927	1					
ANR	3112171	CompoundStatement		36:35:1052:1052	3111927	1					
ANR	3112172	ExpressionStatement	"fprintf ( fp , ""SCRIPT POST %s %s\\n"" , node -> GetJobName ( ) , node -> _scriptPost -> GetCmd ( ) )"	2054:3:62753:62845	3111927	0	True				
ANR	3112173	CallExpression	"fprintf ( fp , ""SCRIPT POST %s %s\\n"" , node -> GetJobName ( ) , node -> _scriptPost -> GetCmd ( ) )"		3111927	0					
ANR	3112174	Callee	fprintf		3111927	0					
ANR	3112175	Identifier	fprintf		3111927	0					
ANR	3112176	ArgumentList	fp		3111927	1					
ANR	3112177	Argument	fp		3111927	0					
ANR	3112178	Identifier	fp		3111927	0					
ANR	3112179	Argument	"""SCRIPT POST %s %s\\n"""		3111927	1					
ANR	3112180	PrimaryExpression	"""SCRIPT POST %s %s\\n"""		3111927	0					
ANR	3112181	Argument	node -> GetJobName ( )		3111927	2					
ANR	3112182	CallExpression	node -> GetJobName ( )		3111927	0					
ANR	3112183	Callee	node -> GetJobName		3111927	0					
ANR	3112184	PtrMemberAccess	node -> GetJobName		3111927	0					
ANR	3112185	Identifier	node		3111927	0					
ANR	3112186	Identifier	GetJobName		3111927	1					
ANR	3112187	ArgumentList			3111927	1					
ANR	3112188	Argument	node -> _scriptPost -> GetCmd ( )		3111927	3					
ANR	3112189	CallExpression	node -> _scriptPost -> GetCmd ( )		3111927	0					
ANR	3112190	Callee	node -> _scriptPost -> GetCmd		3111927	0					
ANR	3112191	PtrMemberAccess	node -> _scriptPost -> GetCmd		3111927	0					
ANR	3112192	PtrMemberAccess	node -> _scriptPost		3111927	0					
ANR	3112193	Identifier	node		3111927	0					
ANR	3112194	Identifier	_scriptPost		3111927	1					
ANR	3112195	Identifier	GetCmd		3111927	1					
ANR	3112196	ArgumentList			3111927	1					
ANR	3112197	IfStatement	if ( ! node -> varNamesFromDag -> IsEmpty ( ) )		3111927	7					
ANR	3112198	Condition	! node -> varNamesFromDag -> IsEmpty ( )	2059:7:62894:62926	3111927	0	True				
ANR	3112199	UnaryOperationExpression	! node -> varNamesFromDag -> IsEmpty ( )		3111927	0					
ANR	3112200	UnaryOperator	!		3111927	0					
ANR	3112201	CallExpression	node -> varNamesFromDag -> IsEmpty ( )		3111927	1					
ANR	3112202	Callee	node -> varNamesFromDag -> IsEmpty		3111927	0					
ANR	3112203	PtrMemberAccess	node -> varNamesFromDag -> IsEmpty		3111927	0					
ANR	3112204	PtrMemberAccess	node -> varNamesFromDag		3111927	0					
ANR	3112205	Identifier	node		3111927	0					
ANR	3112206	Identifier	varNamesFromDag		3111927	1					
ANR	3112207	Identifier	IsEmpty		3111927	1					
ANR	3112208	ArgumentList			3111927	1					
ANR	3112209	CompoundStatement		49:3:1457:1483	3111927	1					
ANR	3112210	ExpressionStatement	"fprintf ( fp , ""VARS %s"" , node -> GetJobName ( ) )"	2060:3:62935:62979	3111927	0	True				
ANR	3112211	CallExpression	"fprintf ( fp , ""VARS %s"" , node -> GetJobName ( ) )"		3111927	0					
ANR	3112212	Callee	fprintf		3111927	0					
ANR	3112213	Identifier	fprintf		3111927	0					
ANR	3112214	ArgumentList	fp		3111927	1					
ANR	3112215	Argument	fp		3111927	0					
ANR	3112216	Identifier	fp		3111927	0					
ANR	3112217	Argument	"""VARS %s"""		3111927	1					
ANR	3112218	PrimaryExpression	"""VARS %s"""		3111927	0					
ANR	3112219	Argument	node -> GetJobName ( )		3111927	2					
ANR	3112220	CallExpression	node -> GetJobName ( )		3111927	0					
ANR	3112221	Callee	node -> GetJobName		3111927	0					
ANR	3112222	PtrMemberAccess	node -> GetJobName		3111927	0					
ANR	3112223	Identifier	node		3111927	0					
ANR	3112224	Identifier	GetJobName		3111927	1					
ANR	3112225	ArgumentList			3111927	1					
ANR	3112226	IdentifierDeclStatement	ListIterator < MyString > names ( * node -> varNamesFromDag ) ;	2062:3:62986:63040	3111927	1	True				
ANR	3112227	IdentifierDecl	names ( * node -> varNamesFromDag )		3111927	0					
ANR	3112228	IdentifierDeclType	ListIterator < MyString >		3111927	0					
ANR	3112229	Identifier	names		3111927	1					
ANR	3112230	UnaryOperationExpression	* node -> varNamesFromDag		3111927	2					
ANR	3112231	UnaryOperator	*		3111927	0					
ANR	3112232	PtrMemberAccess	node -> varNamesFromDag		3111927	1					
ANR	3112233	Identifier	node		3111927	0					
ANR	3112234	Identifier	varNamesFromDag		3111927	1					
ANR	3112235	IdentifierDeclStatement	ListIterator < MyString > vals ( * node -> varValsFromDag ) ;	2063:3:63045:63097	3111927	2	True				
ANR	3112236	IdentifierDecl	vals ( * node -> varValsFromDag )		3111927	0					
ANR	3112237	IdentifierDeclType	ListIterator < MyString >		3111927	0					
ANR	3112238	Identifier	vals		3111927	1					
ANR	3112239	UnaryOperationExpression	* node -> varValsFromDag		3111927	2					
ANR	3112240	UnaryOperator	*		3111927	0					
ANR	3112241	PtrMemberAccess	node -> varValsFromDag		3111927	1					
ANR	3112242	Identifier	node		3111927	0					
ANR	3112243	Identifier	varValsFromDag		3111927	1					
ANR	3112244	ExpressionStatement	names . ToBeforeFirst ( )	2064:3:63102:63123	3111927	3	True				
ANR	3112245	CallExpression	names . ToBeforeFirst ( )		3111927	0					
ANR	3112246	Callee	names . ToBeforeFirst		3111927	0					
ANR	3112247	MemberAccess	names . ToBeforeFirst		3111927	0					
ANR	3112248	Identifier	names		3111927	0					
ANR	3112249	Identifier	ToBeforeFirst		3111927	1					
ANR	3112250	ArgumentList			3111927	1					
ANR	3112251	ExpressionStatement	vals . ToBeforeFirst ( )	2065:3:63128:63148	3111927	4	True				
ANR	3112252	CallExpression	vals . ToBeforeFirst ( )		3111927	0					
ANR	3112253	Callee	vals . ToBeforeFirst		3111927	0					
ANR	3112254	MemberAccess	vals . ToBeforeFirst		3111927	0					
ANR	3112255	Identifier	vals		3111927	0					
ANR	3112256	Identifier	ToBeforeFirst		3111927	1					
ANR	3112257	ArgumentList			3111927	1					
ANR	3112258	IdentifierDeclStatement	"MyString * strName , * strVal ;"	2066:3:63153:63179	3111927	5	True				
ANR	3112259	IdentifierDecl	* strName		3111927	0					
ANR	3112260	IdentifierDeclType	MyString *		3111927	0					
ANR	3112261	Identifier	strName		3111927	1					
ANR	3112262	IdentifierDecl	* strVal		3111927	1					
ANR	3112263	IdentifierDeclType	MyString *		3111927	0					
ANR	3112264	Identifier	strVal		3111927	1					
ANR	3112265	WhileStatement	while ( ( strName = names . Next ( ) ) && ( strVal = vals . Next ( ) ) )		3111927	6					
ANR	3112266	Condition	( strName = names . Next ( ) ) && ( strVal = vals . Next ( ) )	2067:11:63192:63242	3111927	0	True				
ANR	3112267	AndExpression	( strName = names . Next ( ) ) && ( strVal = vals . Next ( ) )		3111927	0		&&			
ANR	3112268	AssignmentExpression	strName = names . Next ( )		3111927	0		=			
ANR	3112269	Identifier	strName		3111927	0					
ANR	3112270	CallExpression	names . Next ( )		3111927	1					
ANR	3112271	Callee	names . Next		3111927	0					
ANR	3112272	MemberAccess	names . Next		3111927	0					
ANR	3112273	Identifier	names		3111927	0					
ANR	3112274	Identifier	Next		3111927	1					
ANR	3112275	ArgumentList			3111927	1					
ANR	3112276	AssignmentExpression	strVal = vals . Next ( )		3111927	1		=			
ANR	3112277	Identifier	strVal		3111927	0					
ANR	3112278	CallExpression	vals . Next ( )		3111927	1					
ANR	3112279	Callee	vals . Next		3111927	0					
ANR	3112280	MemberAccess	vals . Next		3111927	0					
ANR	3112281	Identifier	vals		3111927	0					
ANR	3112282	Identifier	Next		3111927	1					
ANR	3112283	ArgumentList			3111927	1					
ANR	3112284	CompoundStatement		50:65:1550:1550	3111927	1					
ANR	3112285	ExpressionStatement	"fprintf ( fp , "" %s=\\"""" , strName -> Value ( ) )"	2068:4:63252:63291	3111927	0	True				
ANR	3112286	CallExpression	"fprintf ( fp , "" %s=\\"""" , strName -> Value ( ) )"		3111927	0					
ANR	3112287	Callee	fprintf		3111927	0					
ANR	3112288	Identifier	fprintf		3111927	0					
ANR	3112289	ArgumentList	fp		3111927	1					
ANR	3112290	Argument	fp		3111927	0					
ANR	3112291	Identifier	fp		3111927	0					
ANR	3112292	Argument	""" %s=\\"""""		3111927	1					
ANR	3112293	PrimaryExpression	""" %s=\\"""""		3111927	0					
ANR	3112294	Argument	strName -> Value ( )		3111927	2					
ANR	3112295	CallExpression	strName -> Value ( )		3111927	0					
ANR	3112296	Callee	strName -> Value		3111927	0					
ANR	3112297	PtrMemberAccess	strName -> Value		3111927	0					
ANR	3112298	Identifier	strName		3111927	0					
ANR	3112299	Identifier	Value		3111927	1					
ANR	3112300	ArgumentList			3111927	1					
ANR	3112301	ForStatement	for ( int i = 0 ; i < strVal -> Length ( ) ; i ++ )		3111927	1					
ANR	3112302	ForInit	int i = 0 ;	2070:9:63378:63387	3111927	0	True				
ANR	3112303	IdentifierDeclStatement	int i = 0 ;		3111927	0					
ANR	3112304	IdentifierDecl	i = 0		3111927	0					
ANR	3112305	IdentifierDeclType	int		3111927	0					
ANR	3112306	Identifier	i		3111927	1					
ANR	3112307	AssignmentExpression	i = 0		3111927	2		=			
ANR	3112308	Identifier	i		3111927	0					
ANR	3112309	PrimaryExpression	0		3111927	1					
ANR	3112310	Condition	i < strVal -> Length ( )	2070:20:63389:63408	3111927	1	True				
ANR	3112311	RelationalExpression	i < strVal -> Length ( )		3111927	0		<			
ANR	3112312	Identifier	i		3111927	0					
ANR	3112313	CallExpression	strVal -> Length ( )		3111927	1					
ANR	3112314	Callee	strVal -> Length		3111927	0					
ANR	3112315	PtrMemberAccess	strVal -> Length		3111927	0					
ANR	3112316	Identifier	strVal		3111927	0					
ANR	3112317	Identifier	Length		3111927	1					
ANR	3112318	ArgumentList			3111927	1					
ANR	3112319	PostIncDecOperationExpression	i ++	2070:42:63411:63413	3111927	2	True				
ANR	3112320	Identifier	i		3111927	0					
ANR	3112321	IncDec	++		3111927	1					
ANR	3112322	CompoundStatement		54:5:1728:1749	3111927	3					
ANR	3112323	IdentifierDeclStatement	char c = ( * strVal ) [ i ] ;	2071:5:63424:63445	3111927	0	True				
ANR	3112324	IdentifierDecl	c = ( * strVal ) [ i ]		3111927	0					
ANR	3112325	IdentifierDeclType	char		3111927	0					
ANR	3112326	Identifier	c		3111927	1					
ANR	3112327	AssignmentExpression	c = ( * strVal ) [ i ]		3111927	2		=			
ANR	3112328	Identifier	c		3111927	0					
ANR	3112329	ArrayIndexing	( * strVal ) [ i ]		3111927	1					
ANR	3112330	UnaryOperationExpression	* strVal		3111927	0					
ANR	3112331	UnaryOperator	*		3111927	0					
ANR	3112332	Identifier	strVal		3111927	1					
ANR	3112333	Identifier	i		3111927	1					
ANR	3112334	IfStatement	"if ( c == '\\""' )"		3111927	1					
ANR	3112335	Condition	"c == '\\""'"	2072:10:63457:63465	3111927	0	True				
ANR	3112336	EqualityExpression	"c == '\\""'"		3111927	0		==			
ANR	3112337	Identifier	c		3111927	0					
ANR	3112338	PrimaryExpression	"'\\""'"		3111927	1					
ANR	3112339	CompoundStatement		55:22:1773:1773	3111927	1					
ANR	3112340	ExpressionStatement	"fprintf ( fp , ""\\\\\\"""" )"	2073:6:63477:63498	3111927	0	True				
ANR	3112341	CallExpression	"fprintf ( fp , ""\\\\\\"""" )"		3111927	0					
ANR	3112342	Callee	fprintf		3111927	0					
ANR	3112343	Identifier	fprintf		3111927	0					
ANR	3112344	ArgumentList	fp		3111927	1					
ANR	3112345	Argument	fp		3111927	0					
ANR	3112346	Identifier	fp		3111927	0					
ANR	3112347	Argument	"""\\\\\\"""""		3111927	1					
ANR	3112348	PrimaryExpression	"""\\\\\\"""""		3111927	0					
ANR	3112349	ElseStatement	else		3111927	0					
ANR	3112350	IfStatement	if ( c == '\\\\' )		3111927	0					
ANR	3112351	Condition	c == '\\\\'	2074:16:63516:63524	3111927	0	True				
ANR	3112352	EqualityExpression	c == '\\\\'		3111927	0		==			
ANR	3112353	Identifier	c		3111927	0					
ANR	3112354	PrimaryExpression	'\\\\'		3111927	1					
ANR	3112355	CompoundStatement		57:27:1831:1831	3111927	1					
ANR	3112356	ExpressionStatement	"fprintf ( fp , ""\\\\\\\\"" )"	2075:6:63535:63556	3111927	0	True				
ANR	3112357	CallExpression	"fprintf ( fp , ""\\\\\\\\"" )"		3111927	0					
ANR	3112358	Callee	fprintf		3111927	0					
ANR	3112359	Identifier	fprintf		3111927	0					
ANR	3112360	ArgumentList	fp		3111927	1					
ANR	3112361	Argument	fp		3111927	0					
ANR	3112362	Identifier	fp		3111927	0					
ANR	3112363	Argument	"""\\\\\\\\"""		3111927	1					
ANR	3112364	PrimaryExpression	"""\\\\\\\\"""		3111927	0					
ANR	3112365	ElseStatement	else		3111927	0					
ANR	3112366	CompoundStatement		59:12:1874:1874	3111927	0					
ANR	3112367	ExpressionStatement	"fprintf ( fp , ""%c"" , c )"	2077:6:63578:63600	3111927	0	True				
ANR	3112368	CallExpression	"fprintf ( fp , ""%c"" , c )"		3111927	0					
ANR	3112369	Callee	fprintf		3111927	0					
ANR	3112370	Identifier	fprintf		3111927	0					
ANR	3112371	ArgumentList	fp		3111927	1					
ANR	3112372	Argument	fp		3111927	0					
ANR	3112373	Identifier	fp		3111927	0					
ANR	3112374	Argument	"""%c"""		3111927	1					
ANR	3112375	PrimaryExpression	"""%c"""		3111927	0					
ANR	3112376	Argument	c		3111927	2					
ANR	3112377	Identifier	c		3111927	0					
ANR	3112378	ExpressionStatement	"fprintf ( fp , ""\\"""" )"	2080:4:63619:63638	3111927	2	True				
ANR	3112379	CallExpression	"fprintf ( fp , ""\\"""" )"		3111927	0					
ANR	3112380	Callee	fprintf		3111927	0					
ANR	3112381	Identifier	fprintf		3111927	0					
ANR	3112382	ArgumentList	fp		3111927	1					
ANR	3112383	Argument	fp		3111927	0					
ANR	3112384	Identifier	fp		3111927	0					
ANR	3112385	Argument	"""\\"""""		3111927	1					
ANR	3112386	PrimaryExpression	"""\\"""""		3111927	0					
ANR	3112387	ExpressionStatement	"fprintf ( fp , ""\\n"" )"	2082:3:63648:63667	3111927	7	True				
ANR	3112388	CallExpression	"fprintf ( fp , ""\\n"" )"		3111927	0					
ANR	3112389	Callee	fprintf		3111927	0					
ANR	3112390	Identifier	fprintf		3111927	0					
ANR	3112391	ArgumentList	fp		3111927	1					
ANR	3112392	Argument	fp		3111927	0					
ANR	3112393	Identifier	fp		3111927	0					
ANR	3112394	Argument	"""\\n"""		3111927	1					
ANR	3112395	PrimaryExpression	"""\\n"""		3111927	0					
ANR	3112396	IfStatement	if ( node -> have_abort_dag_val )		3111927	8					
ANR	3112397	Condition	node -> have_abort_dag_val	2086:7:63724:63747	3111927	0	True				
ANR	3112398	PtrMemberAccess	node -> have_abort_dag_val		3111927	0					
ANR	3112399	Identifier	node		3111927	0					
ANR	3112400	Identifier	have_abort_dag_val		3111927	1					
ANR	3112401	CompoundStatement		69:34:2055:2055	3111927	1					
ANR	3112402	ExpressionStatement	"fprintf ( fp , ""ABORT-DAG-ON %s %d"" , node -> GetJobName ( ) , node -> abort_dag_val )"	2087:3:63756:63838	3111927	0	True				
ANR	3112403	CallExpression	"fprintf ( fp , ""ABORT-DAG-ON %s %d"" , node -> GetJobName ( ) , node -> abort_dag_val )"		3111927	0					
ANR	3112404	Callee	fprintf		3111927	0					
ANR	3112405	Identifier	fprintf		3111927	0					
ANR	3112406	ArgumentList	fp		3111927	1					
ANR	3112407	Argument	fp		3111927	0					
ANR	3112408	Identifier	fp		3111927	0					
ANR	3112409	Argument	"""ABORT-DAG-ON %s %d"""		3111927	1					
ANR	3112410	PrimaryExpression	"""ABORT-DAG-ON %s %d"""		3111927	0					
ANR	3112411	Argument	node -> GetJobName ( )		3111927	2					
ANR	3112412	CallExpression	node -> GetJobName ( )		3111927	0					
ANR	3112413	Callee	node -> GetJobName		3111927	0					
ANR	3112414	PtrMemberAccess	node -> GetJobName		3111927	0					
ANR	3112415	Identifier	node		3111927	0					
ANR	3112416	Identifier	GetJobName		3111927	1					
ANR	3112417	ArgumentList			3111927	1					
ANR	3112418	Argument	node -> abort_dag_val		3111927	3					
ANR	3112419	PtrMemberAccess	node -> abort_dag_val		3111927	0					
ANR	3112420	Identifier	node		3111927	0					
ANR	3112421	Identifier	abort_dag_val		3111927	1					
ANR	3112422	IfStatement	if ( node -> have_abort_dag_return_val )		3111927	1					
ANR	3112423	Condition	node -> have_abort_dag_return_val	2089:8:63848:63878	3111927	0	True				
ANR	3112424	PtrMemberAccess	node -> have_abort_dag_return_val		3111927	0					
ANR	3112425	Identifier	node		3111927	0					
ANR	3112426	Identifier	have_abort_dag_return_val		3111927	1					
ANR	3112427	CompoundStatement		72:42:2186:2186	3111927	1					
ANR	3112428	ExpressionStatement	"fprintf ( fp , "" RETURN %d"" , node -> abort_dag_return_val )"	2090:4:63888:63943	3111927	0	True				
ANR	3112429	CallExpression	"fprintf ( fp , "" RETURN %d"" , node -> abort_dag_return_val )"		3111927	0					
ANR	3112430	Callee	fprintf		3111927	0					
ANR	3112431	Identifier	fprintf		3111927	0					
ANR	3112432	ArgumentList	fp		3111927	1					
ANR	3112433	Argument	fp		3111927	0					
ANR	3112434	Identifier	fp		3111927	0					
ANR	3112435	Argument	""" RETURN %d"""		3111927	1					
ANR	3112436	PrimaryExpression	""" RETURN %d"""		3111927	0					
ANR	3112437	Argument	node -> abort_dag_return_val		3111927	2					
ANR	3112438	PtrMemberAccess	node -> abort_dag_return_val		3111927	0					
ANR	3112439	Identifier	node		3111927	0					
ANR	3112440	Identifier	abort_dag_return_val		3111927	1					
ANR	3112441	ExpressionStatement	"fprintf ( fp , ""\\n"" )"	2092:3:63953:63972	3111927	2	True				
ANR	3112442	CallExpression	"fprintf ( fp , ""\\n"" )"		3111927	0					
ANR	3112443	Callee	fprintf		3111927	0					
ANR	3112444	Identifier	fprintf		3111927	0					
ANR	3112445	ArgumentList	fp		3111927	1					
ANR	3112446	Argument	fp		3111927	0					
ANR	3112447	Identifier	fp		3111927	0					
ANR	3112448	Argument	"""\\n"""		3111927	1					
ANR	3112449	PrimaryExpression	"""\\n"""		3111927	0					
ANR	3112450	IfStatement	if ( node -> _hasNodePriority )		3111927	9					
ANR	3112451	Condition	node -> _hasNodePriority	2099:7:64170:64191	3111927	0	True				
ANR	3112452	PtrMemberAccess	node -> _hasNodePriority		3111927	0					
ANR	3112453	Identifier	node		3111927	0					
ANR	3112454	Identifier	_hasNodePriority		3111927	1					
ANR	3112455	CompoundStatement		82:32:2499:2499	3111927	1					
ANR	3112456	ExpressionStatement	"fprintf ( fp , ""PRIORITY %s %d\\n"" , node -> GetJobName ( ) , node -> _nodePriority )"	2100:3:64200:64280	3111927	0	True				
ANR	3112457	CallExpression	"fprintf ( fp , ""PRIORITY %s %d\\n"" , node -> GetJobName ( ) , node -> _nodePriority )"		3111927	0					
ANR	3112458	Callee	fprintf		3111927	0					
ANR	3112459	Identifier	fprintf		3111927	0					
ANR	3112460	ArgumentList	fp		3111927	1					
ANR	3112461	Argument	fp		3111927	0					
ANR	3112462	Identifier	fp		3111927	0					
ANR	3112463	Argument	"""PRIORITY %s %d\\n"""		3111927	1					
ANR	3112464	PrimaryExpression	"""PRIORITY %s %d\\n"""		3111927	0					
ANR	3112465	Argument	node -> GetJobName ( )		3111927	2					
ANR	3112466	CallExpression	node -> GetJobName ( )		3111927	0					
ANR	3112467	Callee	node -> GetJobName		3111927	0					
ANR	3112468	PtrMemberAccess	node -> GetJobName		3111927	0					
ANR	3112469	Identifier	node		3111927	0					
ANR	3112470	Identifier	GetJobName		3111927	1					
ANR	3112471	ArgumentList			3111927	1					
ANR	3112472	Argument	node -> _nodePriority		3111927	3					
ANR	3112473	PtrMemberAccess	node -> _nodePriority		3111927	0					
ANR	3112474	Identifier	node		3111927	0					
ANR	3112475	Identifier	_nodePriority		3111927	1					
ANR	3112476	IfStatement	if ( node -> GetThrottleInfo ( ) )		3111927	10					
ANR	3112477	Condition	node -> GetThrottleInfo ( )	2105:7:64333:64355	3111927	0	True				
ANR	3112478	CallExpression	node -> GetThrottleInfo ( )		3111927	0					
ANR	3112479	Callee	node -> GetThrottleInfo		3111927	0					
ANR	3112480	PtrMemberAccess	node -> GetThrottleInfo		3111927	0					
ANR	3112481	Identifier	node		3111927	0					
ANR	3112482	Identifier	GetThrottleInfo		3111927	1					
ANR	3112483	ArgumentList			3111927	1					
ANR	3112484	CompoundStatement		88:33:2663:2663	3111927	1					
ANR	3112485	ExpressionStatement	"fprintf ( fp , ""CATEGORY %s %s\\n"" , node -> GetJobName ( ) , node -> GetThrottleInfo ( ) -> _category -> Value ( ) )"	2106:3:64364:64468	3111927	0	True				
ANR	3112486	CallExpression	"fprintf ( fp , ""CATEGORY %s %s\\n"" , node -> GetJobName ( ) , node -> GetThrottleInfo ( ) -> _category -> Value ( ) )"		3111927	0					
ANR	3112487	Callee	fprintf		3111927	0					
ANR	3112488	Identifier	fprintf		3111927	0					
ANR	3112489	ArgumentList	fp		3111927	1					
ANR	3112490	Argument	fp		3111927	0					
ANR	3112491	Identifier	fp		3111927	0					
ANR	3112492	Argument	"""CATEGORY %s %s\\n"""		3111927	1					
ANR	3112493	PrimaryExpression	"""CATEGORY %s %s\\n"""		3111927	0					
ANR	3112494	Argument	node -> GetJobName ( )		3111927	2					
ANR	3112495	CallExpression	node -> GetJobName ( )		3111927	0					
ANR	3112496	Callee	node -> GetJobName		3111927	0					
ANR	3112497	PtrMemberAccess	node -> GetJobName		3111927	0					
ANR	3112498	Identifier	node		3111927	0					
ANR	3112499	Identifier	GetJobName		3111927	1					
ANR	3112500	ArgumentList			3111927	1					
ANR	3112501	Argument	node -> GetThrottleInfo ( ) -> _category -> Value ( )		3111927	3					
ANR	3112502	CallExpression	node -> GetThrottleInfo ( ) -> _category -> Value ( )		3111927	0					
ANR	3112503	Callee	node -> GetThrottleInfo ( ) -> _category -> Value		3111927	0					
ANR	3112504	PtrMemberAccess	node -> GetThrottleInfo ( ) -> _category -> Value		3111927	0					
ANR	3112505	PtrMemberAccess	node -> GetThrottleInfo ( ) -> _category		3111927	0					
ANR	3112506	CallExpression	node -> GetThrottleInfo ( )		3111927	0					
ANR	3112507	Callee	node -> GetThrottleInfo		3111927	0					
ANR	3112508	PtrMemberAccess	node -> GetThrottleInfo		3111927	0					
ANR	3112509	Identifier	node		3111927	0					
ANR	3112510	Identifier	GetThrottleInfo		3111927	1					
ANR	3112511	ArgumentList			3111927	1					
ANR	3112512	Identifier	_category		3111927	1					
ANR	3112513	Identifier	Value		3111927	1					
ANR	3112514	ArgumentList			3111927	1					
ANR	3112515	IfStatement	if ( node -> _Status == Job :: STATUS_DONE )		3111927	3					
ANR	3112516	Condition	node -> _Status == Job :: STATUS_DONE	2111:6:64484:64516	3111927	0	True				
ANR	3112517	EqualityExpression	node -> _Status == Job :: STATUS_DONE		3111927	0		==			
ANR	3112518	PtrMemberAccess	node -> _Status		3111927	0					
ANR	3112519	Identifier	node		3111927	0					
ANR	3112520	Identifier	_Status		3111927	1					
ANR	3112521	Identifier	Job :: STATUS_DONE		3111927	1					
ANR	3112522	CompoundStatement		94:42:2824:2824	3111927	1					
ANR	3112523	ExpressionStatement	"fprintf ( fp , ""DONE %s\\n"" , node -> GetJobName ( ) )"	2112:2:64524:64569	3111927	0	True				
ANR	3112524	CallExpression	"fprintf ( fp , ""DONE %s\\n"" , node -> GetJobName ( ) )"		3111927	0					
ANR	3112525	Callee	fprintf		3111927	0					
ANR	3112526	Identifier	fprintf		3111927	0					
ANR	3112527	ArgumentList	fp		3111927	1					
ANR	3112528	Argument	fp		3111927	0					
ANR	3112529	Identifier	fp		3111927	0					
ANR	3112530	Argument	"""DONE %s\\n"""		3111927	1					
ANR	3112531	PrimaryExpression	"""DONE %s\\n"""		3111927	0					
ANR	3112532	Argument	node -> GetJobName ( )		3111927	2					
ANR	3112533	CallExpression	node -> GetJobName ( )		3111927	0					
ANR	3112534	Callee	node -> GetJobName		3111927	0					
ANR	3112535	PtrMemberAccess	node -> GetJobName		3111927	0					
ANR	3112536	Identifier	node		3111927	0					
ANR	3112537	Identifier	GetJobName		3111927	1					
ANR	3112538	ArgumentList			3111927	1					
ANR	3112539	IfStatement	if ( node -> retry_max > 0 )		3111927	4					
ANR	3112540	Condition	node -> retry_max > 0	2116:5:64615:64633	3111927	0	True				
ANR	3112541	RelationalExpression	node -> retry_max > 0		3111927	0		>			
ANR	3112542	PtrMemberAccess	node -> retry_max		3111927	0					
ANR	3112543	Identifier	node		3111927	0					
ANR	3112544	Identifier	retry_max		3111927	1					
ANR	3112545	PrimaryExpression	0		3111927	1					
ANR	3112546	CompoundStatement		100:2:2945:2996	3111927	1					
ANR	3112547	IdentifierDeclStatement	int retriesLeft = ( node -> retry_max - node -> retries ) ;	2117:2:64641:64692	3111927	0	True				
ANR	3112548	IdentifierDecl	retriesLeft = ( node -> retry_max - node -> retries )		3111927	0					
ANR	3112549	IdentifierDeclType	int		3111927	0					
ANR	3112550	Identifier	retriesLeft		3111927	1					
ANR	3112551	AssignmentExpression	retriesLeft = ( node -> retry_max - node -> retries )		3111927	2		=			
ANR	3112552	Identifier	retriesLeft		3111927	0					
ANR	3112553	AdditiveExpression	node -> retry_max - node -> retries		3111927	1		-			
ANR	3112554	PtrMemberAccess	node -> retry_max		3111927	0					
ANR	3112555	Identifier	node		3111927	0					
ANR	3112556	Identifier	retry_max		3111927	1					
ANR	3112557	PtrMemberAccess	node -> retries		3111927	1					
ANR	3112558	Identifier	node		3111927	0					
ANR	3112559	Identifier	retries		3111927	1					
ANR	3112560	IfStatement	if ( node -> _Status == Job :: STATUS_ERROR && node -> retries < node -> retry_max && node -> have_retry_abort_val && node -> retval == node -> retry_abort_val )		3111927	1					
ANR	3112561	Condition	node -> _Status == Job :: STATUS_ERROR && node -> retries < node -> retry_max && node -> have_retry_abort_val && node -> retval == node -> retry_abort_val	2119:7:64702:64857	3111927	0	True				
ANR	3112562	AndExpression	node -> _Status == Job :: STATUS_ERROR && node -> retries < node -> retry_max && node -> have_retry_abort_val && node -> retval == node -> retry_abort_val		3111927	0		&&			
ANR	3112563	EqualityExpression	node -> _Status == Job :: STATUS_ERROR		3111927	0		==			
ANR	3112564	PtrMemberAccess	node -> _Status		3111927	0					
ANR	3112565	Identifier	node		3111927	0					
ANR	3112566	Identifier	_Status		3111927	1					
ANR	3112567	Identifier	Job :: STATUS_ERROR		3111927	1					
ANR	3112568	AndExpression	node -> retries < node -> retry_max && node -> have_retry_abort_val && node -> retval == node -> retry_abort_val		3111927	1		&&			
ANR	3112569	RelationalExpression	node -> retries < node -> retry_max		3111927	0		<			
ANR	3112570	PtrMemberAccess	node -> retries		3111927	0					
ANR	3112571	Identifier	node		3111927	0					
ANR	3112572	Identifier	retries		3111927	1					
ANR	3112573	PtrMemberAccess	node -> retry_max		3111927	1					
ANR	3112574	Identifier	node		3111927	0					
ANR	3112575	Identifier	retry_max		3111927	1					
ANR	3112576	AndExpression	node -> have_retry_abort_val && node -> retval == node -> retry_abort_val		3111927	1		&&			
ANR	3112577	PtrMemberAccess	node -> have_retry_abort_val		3111927	0					
ANR	3112578	Identifier	node		3111927	0					
ANR	3112579	Identifier	have_retry_abort_val		3111927	1					
ANR	3112580	EqualityExpression	node -> retval == node -> retry_abort_val		3111927	1		==			
ANR	3112581	PtrMemberAccess	node -> retval		3111927	0					
ANR	3112582	Identifier	node		3111927	0					
ANR	3112583	Identifier	retval		3111927	1					
ANR	3112584	PtrMemberAccess	node -> retry_abort_val		3111927	1					
ANR	3112585	Identifier	node		3111927	0					
ANR	3112586	Identifier	retry_abort_val		3111927	1					
ANR	3112587	CompoundStatement		105:48:3165:3165	3111927	1					
ANR	3112588	Statement	fprintf	2123:3:64866:64872	3111927	0	True				
ANR	3112589	Statement	(	2123:10:64873:64873	3111927	1	True				
ANR	3112590	Statement	fp	2123:12:64875:64876	3111927	2	True				
ANR	3112591	Statement	","	2123:14:64877:64877	3111927	3	True				
ANR	3112592	Statement	"""# %d of %d retries performed; remaining attempts """	2123:16:64879:64929	3111927	4	True				
ANR	3112593	Statement	"""aborted after node returned %d\\n"""	2124:6:64937:64970	3111927	5	True				
ANR	3112594	Statement	","	2124:40:64971:64971	3111927	6	True				
ANR	3112595	Statement	node	2125:6:64980:64983	3111927	7	True				
ANR	3112596	Statement	->	2125:10:64984:64985	3111927	8	True				
ANR	3112597	Statement	retries	2125:12:64986:64992	3111927	9	True				
ANR	3112598	Statement	","	2125:19:64993:64993	3111927	10	True				
ANR	3112599	Statement	node	2125:21:64995:64998	3111927	11	True				
ANR	3112600	Statement	->	2125:25:64999:65000	3111927	12	True				
ANR	3112601	Statement	retry_max	2125:27:65001:65009	3111927	13	True				
ANR	3112602	Statement	","	2125:36:65010:65010	3111927	14	True				
ANR	3112603	Statement	node	2125:38:65012:65015	3111927	15	True				
ANR	3112604	Statement	->	2125:42:65016:65017	3111927	16	True				
ANR	3112605	Statement	retval	2125:44:65018:65023	3111927	17	True				
ANR	3112606	Statement	)	2125:51:65025:65025	3111927	18	True				
ANR	3112607	ExpressionStatement		2125:52:65026:65026	3111927	19	True				
ANR	3112608	ElseStatement	else		3111927	0					
ANR	3112609	CompoundStatement		109:9:3341:3341	3111927	0					
ANR	3112610	IfStatement	if ( ! reset_retries_upon_rescue )		3111927	0					
ANR	3112611	Condition	! reset_retries_upon_rescue	2127:8:65047:65072	3111927	0	True				
ANR	3112612	UnaryOperationExpression	! reset_retries_upon_rescue		3111927	0					
ANR	3112613	UnaryOperator	!		3111927	0					
ANR	3112614	Identifier	reset_retries_upon_rescue		3111927	1					
ANR	3112615	CompoundStatement		110:37:3380:3380	3111927	1					
ANR	3112616	ExpressionStatement	"fprintf ( fp , ""# %d of %d retries already performed; %d remaining\\n"" , node -> retries , node -> retry_max , retriesLeft )"	2128:4:65082:65210	3111927	0	True				
ANR	3112617	CallExpression	"fprintf ( fp , ""# %d of %d retries already performed; %d remaining\\n"" , node -> retries , node -> retry_max , retriesLeft )"		3111927	0					
ANR	3112618	Callee	fprintf		3111927	0					
ANR	3112619	Identifier	fprintf		3111927	0					
ANR	3112620	ArgumentList	fp		3111927	1					
ANR	3112621	Argument	fp		3111927	0					
ANR	3112622	Identifier	fp		3111927	0					
ANR	3112623	Argument	"""# %d of %d retries already performed; %d remaining\\n"""		3111927	1					
ANR	3112624	PrimaryExpression	"""# %d of %d retries already performed; %d remaining\\n"""		3111927	0					
ANR	3112625	Argument	node -> retries		3111927	2					
ANR	3112626	PtrMemberAccess	node -> retries		3111927	0					
ANR	3112627	Identifier	node		3111927	0					
ANR	3112628	Identifier	retries		3111927	1					
ANR	3112629	Argument	node -> retry_max		3111927	3					
ANR	3112630	PtrMemberAccess	node -> retry_max		3111927	0					
ANR	3112631	Identifier	node		3111927	0					
ANR	3112632	Identifier	retry_max		3111927	1					
ANR	3112633	Argument	retriesLeft		3111927	4					
ANR	3112634	Identifier	retriesLeft		3111927	0					
ANR	3112635	ExpressionStatement	ASSERT ( node -> retries <= node -> retry_max )	2134:2:65224:65266	3111927	2	True				
ANR	3112636	CallExpression	ASSERT ( node -> retries <= node -> retry_max )		3111927	0					
ANR	3112637	Callee	ASSERT		3111927	0					
ANR	3112638	Identifier	ASSERT		3111927	0					
ANR	3112639	ArgumentList	node -> retries <= node -> retry_max		3111927	1					
ANR	3112640	Argument	node -> retries <= node -> retry_max		3111927	0					
ANR	3112641	RelationalExpression	node -> retries <= node -> retry_max		3111927	0		<=			
ANR	3112642	PtrMemberAccess	node -> retries		3111927	0					
ANR	3112643	Identifier	node		3111927	0					
ANR	3112644	Identifier	retries		3111927	1					
ANR	3112645	PtrMemberAccess	node -> retry_max		3111927	1					
ANR	3112646	Identifier	node		3111927	0					
ANR	3112647	Identifier	retry_max		3111927	1					
ANR	3112648	IfStatement	if ( ! reset_retries_upon_rescue )		3111927	3					
ANR	3112649	Condition	! reset_retries_upon_rescue	2135:7:65275:65300	3111927	0	True				
ANR	3112650	UnaryOperationExpression	! reset_retries_upon_rescue		3111927	0					
ANR	3112651	UnaryOperator	!		3111927	0					
ANR	3112652	Identifier	reset_retries_upon_rescue		3111927	1					
ANR	3112653	CompoundStatement		118:36:3608:3608	3111927	1					
ANR	3112654	ExpressionStatement	"fprintf ( fp , ""RETRY %s %d"" , node -> GetJobName ( ) , retriesLeft )"	2136:3:65309:65370	3111927	0	True				
ANR	3112655	CallExpression	"fprintf ( fp , ""RETRY %s %d"" , node -> GetJobName ( ) , retriesLeft )"		3111927	0					
ANR	3112656	Callee	fprintf		3111927	0					
ANR	3112657	Identifier	fprintf		3111927	0					
ANR	3112658	ArgumentList	fp		3111927	1					
ANR	3112659	Argument	fp		3111927	0					
ANR	3112660	Identifier	fp		3111927	0					
ANR	3112661	Argument	"""RETRY %s %d"""		3111927	1					
ANR	3112662	PrimaryExpression	"""RETRY %s %d"""		3111927	0					
ANR	3112663	Argument	node -> GetJobName ( )		3111927	2					
ANR	3112664	CallExpression	node -> GetJobName ( )		3111927	0					
ANR	3112665	Callee	node -> GetJobName		3111927	0					
ANR	3112666	PtrMemberAccess	node -> GetJobName		3111927	0					
ANR	3112667	Identifier	node		3111927	0					
ANR	3112668	Identifier	GetJobName		3111927	1					
ANR	3112669	ArgumentList			3111927	1					
ANR	3112670	Argument	retriesLeft		3111927	3					
ANR	3112671	Identifier	retriesLeft		3111927	0					
ANR	3112672	ElseStatement	else		3111927	0					
ANR	3112673	CompoundStatement		120:9:3685:3685	3111927	0					
ANR	3112674	ExpressionStatement	"fprintf ( fp , ""RETRY %s %d"" , node -> GetJobName ( ) , node -> retry_max )"	2138:3:65386:65451	3111927	0	True				
ANR	3112675	CallExpression	"fprintf ( fp , ""RETRY %s %d"" , node -> GetJobName ( ) , node -> retry_max )"		3111927	0					
ANR	3112676	Callee	fprintf		3111927	0					
ANR	3112677	Identifier	fprintf		3111927	0					
ANR	3112678	ArgumentList	fp		3111927	1					
ANR	3112679	Argument	fp		3111927	0					
ANR	3112680	Identifier	fp		3111927	0					
ANR	3112681	Argument	"""RETRY %s %d"""		3111927	1					
ANR	3112682	PrimaryExpression	"""RETRY %s %d"""		3111927	0					
ANR	3112683	Argument	node -> GetJobName ( )		3111927	2					
ANR	3112684	CallExpression	node -> GetJobName ( )		3111927	0					
ANR	3112685	Callee	node -> GetJobName		3111927	0					
ANR	3112686	PtrMemberAccess	node -> GetJobName		3111927	0					
ANR	3112687	Identifier	node		3111927	0					
ANR	3112688	Identifier	GetJobName		3111927	1					
ANR	3112689	ArgumentList			3111927	1					
ANR	3112690	Argument	node -> retry_max		3111927	3					
ANR	3112691	PtrMemberAccess	node -> retry_max		3111927	0					
ANR	3112692	Identifier	node		3111927	0					
ANR	3112693	Identifier	retry_max		3111927	1					
ANR	3112694	IfStatement	if ( node -> have_retry_abort_val )		3111927	4					
ANR	3112695	Condition	node -> have_retry_abort_val	2140:7:65464:65489	3111927	0	True				
ANR	3112696	PtrMemberAccess	node -> have_retry_abort_val		3111927	0					
ANR	3112697	Identifier	node		3111927	0					
ANR	3112698	Identifier	have_retry_abort_val		3111927	1					
ANR	3112699	CompoundStatement		123:36:3797:3797	3111927	1					
ANR	3112700	ExpressionStatement	"fprintf ( fp , "" UNLESS-EXIT %d"" , node -> retry_abort_val )"	2141:3:65498:65553	3111927	0	True				
ANR	3112701	CallExpression	"fprintf ( fp , "" UNLESS-EXIT %d"" , node -> retry_abort_val )"		3111927	0					
ANR	3112702	Callee	fprintf		3111927	0					
ANR	3112703	Identifier	fprintf		3111927	0					
ANR	3112704	ArgumentList	fp		3111927	1					
ANR	3112705	Argument	fp		3111927	0					
ANR	3112706	Identifier	fp		3111927	0					
ANR	3112707	Argument	""" UNLESS-EXIT %d"""		3111927	1					
ANR	3112708	PrimaryExpression	""" UNLESS-EXIT %d"""		3111927	0					
ANR	3112709	Argument	node -> retry_abort_val		3111927	2					
ANR	3112710	PtrMemberAccess	node -> retry_abort_val		3111927	0					
ANR	3112711	Identifier	node		3111927	0					
ANR	3112712	Identifier	retry_abort_val		3111927	1					
ANR	3112713	ExpressionStatement	"fprintf ( fp , ""\\n"" )"	2143:2:65561:65580	3111927	5	True				
ANR	3112714	CallExpression	"fprintf ( fp , ""\\n"" )"		3111927	0					
ANR	3112715	Callee	fprintf		3111927	0					
ANR	3112716	Identifier	fprintf		3111927	0					
ANR	3112717	ArgumentList	fp		3111927	1					
ANR	3112718	Argument	fp		3111927	0					
ANR	3112719	Identifier	fp		3111927	0					
ANR	3112720	Argument	"""\\n"""		3111927	1					
ANR	3112721	PrimaryExpression	"""\\n"""		3111927	0					
ANR	3112722	ReturnType	void		3111927	1					
ANR	3112723	Identifier	Dag :: WriteNodeToRescue		3111927	2					
ANR	3112724	ParameterList	"FILE * fp , Job * node , bool reset_retries_upon_rescue , bool isPartial"		3111927	3					
ANR	3112725	Parameter	FILE * fp	2016:24:61622:61629	3111927	0	True				
ANR	3112726	ParameterType	FILE *		3111927	0					
ANR	3112727	Identifier	fp		3111927	1					
ANR	3112728	Parameter	Job * node	2016:34:61632:61640	3111927	1	True				
ANR	3112729	ParameterType	Job *		3111927	0					
ANR	3112730	Identifier	node		3111927	1					
ANR	3112731	Parameter	bool reset_retries_upon_rescue	2016:45:61643:61672	3111927	2	True				
ANR	3112732	ParameterType	bool		3111927	0					
ANR	3112733	Identifier	reset_retries_upon_rescue		3111927	1					
ANR	3112734	Parameter	bool isPartial	2017:3:61678:61691	3111927	3	True				
ANR	3112735	ParameterType	bool		3111927	0					
ANR	3112736	Identifier	isPartial		3111927	1					
ANR	3112737	CFGEntryNode	ENTRY		3111927		True				
ANR	3112738	CFGExitNode	EXIT		3111927		True				
ANR	3112739	Symbol	* node -> varNamesFromDag		3111927						
ANR	3112740	Symbol	node -> GetPreSkip		3111927						
ANR	3112741	Symbol	names . Next		3111927						
ANR	3112742	Symbol	node -> GetNoop		3111927						
ANR	3112743	Symbol	Job :: TYPE_CONDOR		3111927						
ANR	3112744	Symbol	node -> _scriptPost -> GetCmd		3111927						
ANR	3112745	Symbol	node -> JobType		3111927						
ANR	3112746	Symbol	strName		3111927						
ANR	3112747	Symbol	* node -> _scriptPost		3111927						
ANR	3112748	Symbol	Job :: STATUS_DONE		3111927						
ANR	3112749	Symbol	* node		3111927						
ANR	3112750	Symbol	strVal -> Length		3111927						
ANR	3112751	Symbol	keyword		3111927						
ANR	3112752	Symbol	node -> retval		3111927						
ANR	3112753	Symbol	strcmp		3111927						
ANR	3112754	Symbol	* * node -> GetThrottleInfo		3111927						
ANR	3112755	Symbol	node -> GetThrottleInfo ( ) -> _category -> Value		3111927						
ANR	3112756	Symbol	NULL		3111927						
ANR	3112757	Symbol	Job :: TYPE_STORK		3111927						
ANR	3112758	Symbol	node -> GetJobName		3111927						
ANR	3112759	Symbol	node -> abort_dag_val		3111927						
ANR	3112760	Symbol	node		3111927						
ANR	3112761	Symbol	node -> _Status		3111927						
ANR	3112762	Symbol	reset_retries_upon_rescue		3111927						
ANR	3112763	Symbol	* * node		3111927						
ANR	3112764	Symbol	* * strVal		3111927						
ANR	3112765	Symbol	retriesLeft		3111927						
ANR	3112766	Symbol	node -> _hasNodePriority		3111927						
ANR	3112767	Symbol	node -> HasPreSkip		3111927						
ANR	3112768	Symbol	node -> _nodePriority		3111927						
ANR	3112769	Symbol	node -> GetThrottleInfo ( ) -> _category		3111927						
ANR	3112770	Symbol	* node -> GetThrottleInfo		3111927						
ANR	3112771	Symbol	node -> varValsFromDag		3111927						
ANR	3112772	Symbol	vals . Next		3111927						
ANR	3112773	Symbol	vals		3111927						
ANR	3112774	Symbol	fp		3111927						
ANR	3112775	Symbol	node -> have_retry_abort_val		3111927						
ANR	3112776	Symbol	node -> have_abort_dag_val		3111927						
ANR	3112777	Symbol	* strName		3111927						
ANR	3112778	Symbol	* * * node		3111927						
ANR	3112779	Symbol	strName -> Value		3111927						
ANR	3112780	Symbol	node -> retries		3111927						
ANR	3112781	Symbol	node -> varNamesFromDag -> IsEmpty		3111927						
ANR	3112782	Symbol	node -> _scriptPre -> GetCmd		3111927						
ANR	3112783	Symbol	isPartial		3111927						
ANR	3112784	Symbol	node -> retry_max		3111927						
ANR	3112785	Symbol	node -> have_abort_dag_return_val		3111927						
ANR	3112786	Symbol	node -> GetDagFile		3111927						
ANR	3112787	Symbol	node -> GetDirectory		3111927						
ANR	3112788	Symbol	node -> abort_dag_return_val		3111927						
ANR	3112789	Symbol	c		3111927						
ANR	3112790	Symbol	strVal		3111927						
ANR	3112791	Symbol	node -> GetThrottleInfo		3111927						
ANR	3112792	Symbol	node -> retry_abort_val		3111927						
ANR	3112793	Symbol	Job :: STATUS_ERROR		3111927						
ANR	3112794	Symbol	i		3111927						
ANR	3112795	Symbol	* strVal		3111927						
ANR	3112796	Symbol	node -> _scriptPre		3111927						
ANR	3112797	Symbol	* node -> GetThrottleInfo ( ) -> _category		3111927						
ANR	3112798	Symbol	names		3111927						
ANR	3112799	Symbol	* i		3111927						
ANR	3112800	Symbol	node -> varNamesFromDag		3111927						
ANR	3112801	Symbol	node -> GetCmdFile		3111927						
ANR	3112802	Symbol	node -> _scriptPost		3111927						
ANR	3112803	Symbol	* node -> _scriptPre		3111927						
ANR	3112804	Function	Dag :: TerminateJob	2152:0:65840:67384							
ANR	3112805	FunctionDef	"Dag :: TerminateJob (Job * job , bool recovery , bool bootstrap)"		3112804	0					
ANR	3112806	CompoundStatement		2154:0:65906:67384	3112804	0					
ANR	3112807	ExpressionStatement	ASSERT ( ! ( recovery && bootstrap ) )	2155:1:65909:65943	3112804	0	True				
ANR	3112808	CallExpression	ASSERT ( ! ( recovery && bootstrap ) )		3112804	0					
ANR	3112809	Callee	ASSERT		3112804	0					
ANR	3112810	Identifier	ASSERT		3112804	0					
ANR	3112811	ArgumentList	! ( recovery && bootstrap )		3112804	1					
ANR	3112812	Argument	! ( recovery && bootstrap )		3112804	0					
ANR	3112813	UnaryOperationExpression	! ( recovery && bootstrap )		3112804	0					
ANR	3112814	UnaryOperator	!		3112804	0					
ANR	3112815	AndExpression	recovery && bootstrap		3112804	1		&&			
ANR	3112816	Identifier	recovery		3112804	0					
ANR	3112817	Identifier	bootstrap		3112804	1					
ANR	3112818	ExpressionStatement	ASSERT ( job != NULL )	2156:4:65949:65970	3112804	1	True				
ANR	3112819	CallExpression	ASSERT ( job != NULL )		3112804	0					
ANR	3112820	Callee	ASSERT		3112804	0					
ANR	3112821	Identifier	ASSERT		3112804	0					
ANR	3112822	ArgumentList	job != NULL		3112804	1					
ANR	3112823	Argument	job != NULL		3112804	0					
ANR	3112824	EqualityExpression	job != NULL		3112804	0		!=			
ANR	3112825	Identifier	job		3112804	0					
ANR	3112826	Identifier	NULL		3112804	1					
ANR	3112827	ExpressionStatement	job -> TerminateSuccess ( )	2158:1:65974:65997	3112804	2	True				
ANR	3112828	CallExpression	job -> TerminateSuccess ( )		3112804	0					
ANR	3112829	Callee	job -> TerminateSuccess		3112804	0					
ANR	3112830	PtrMemberAccess	job -> TerminateSuccess		3112804	0					
ANR	3112831	Identifier	job		3112804	0					
ANR	3112832	Identifier	TerminateSuccess		3112804	1					
ANR	3112833	ArgumentList			3112804	1					
ANR	3112834	IfStatement	if ( job -> GetStatus ( ) != Job :: STATUS_DONE )		3112804	3					
ANR	3112835	Condition	job -> GetStatus ( ) != Job :: STATUS_DONE	2159:6:66033:66068	3112804	0	True				
ANR	3112836	EqualityExpression	job -> GetStatus ( ) != Job :: STATUS_DONE		3112804	0		!=			
ANR	3112837	CallExpression	job -> GetStatus ( )		3112804	0					
ANR	3112838	Callee	job -> GetStatus		3112804	0					
ANR	3112839	PtrMemberAccess	job -> GetStatus		3112804	0					
ANR	3112840	Identifier	job		3112804	0					
ANR	3112841	Identifier	GetStatus		3112804	1					
ANR	3112842	ArgumentList			3112804	1					
ANR	3112843	Identifier	Job :: STATUS_DONE		3112804	1					
ANR	3112844	CompoundStatement		6:45:165:165	3112804	1					
ANR	3112845	ExpressionStatement	"EXCEPT ( ""Node %s is not in DONE state"" , job -> GetJobName ( ) )"	2160:2:66076:66135	3112804	0	True				
ANR	3112846	CallExpression	"EXCEPT ( ""Node %s is not in DONE state"" , job -> GetJobName ( ) )"		3112804	0					
ANR	3112847	Callee	EXCEPT		3112804	0					
ANR	3112848	Identifier	EXCEPT		3112804	0					
ANR	3112849	ArgumentList	"""Node %s is not in DONE state"""		3112804	1					
ANR	3112850	Argument	"""Node %s is not in DONE state"""		3112804	0					
ANR	3112851	PrimaryExpression	"""Node %s is not in DONE state"""		3112804	0					
ANR	3112852	Argument	job -> GetJobName ( )		3112804	1					
ANR	3112853	CallExpression	job -> GetJobName ( )		3112804	0					
ANR	3112854	Callee	job -> GetJobName		3112804	0					
ANR	3112855	PtrMemberAccess	job -> GetJobName		3112804	0					
ANR	3112856	Identifier	job		3112804	0					
ANR	3112857	Identifier	GetJobName		3112804	1					
ANR	3112858	ArgumentList			3112804	1					
ANR	3112859	IfStatement	if ( job -> countedAsDone == false )		3112804	4					
ANR	3112860	Condition	job -> countedAsDone == false	2166:5:66300:66326	3112804	0	True				
ANR	3112861	EqualityExpression	job -> countedAsDone == false		3112804	0		==			
ANR	3112862	PtrMemberAccess	job -> countedAsDone		3112804	0					
ANR	3112863	Identifier	job		3112804	0					
ANR	3112864	Identifier	countedAsDone		3112804	1					
ANR	3112865	Identifier	false		3112804	1					
ANR	3112866	CompoundStatement		13:35:423:423	3112804	1					
ANR	3112867	ExpressionStatement	_numNodesDone ++	2167:2:66334:66349	3112804	0	True				
ANR	3112868	PostIncDecOperationExpression	_numNodesDone ++		3112804	0					
ANR	3112869	Identifier	_numNodesDone		3112804	0					
ANR	3112870	IncDec	++		3112804	1					
ANR	3112871	ExpressionStatement	job -> countedAsDone = true	2168:2:66353:66378	3112804	1	True				
ANR	3112872	AssignmentExpression	job -> countedAsDone = true		3112804	0		=			
ANR	3112873	PtrMemberAccess	job -> countedAsDone		3112804	0					
ANR	3112874	Identifier	job		3112804	0					
ANR	3112875	Identifier	countedAsDone		3112804	1					
ANR	3112876	Identifier	true		3112804	1					
ANR	3112877	ExpressionStatement	ASSERT ( _numNodesDone <= _jobs . Number ( ) )	2169:2:66382:66423	3112804	2	True				
ANR	3112878	CallExpression	ASSERT ( _numNodesDone <= _jobs . Number ( ) )		3112804	0					
ANR	3112879	Callee	ASSERT		3112804	0					
ANR	3112880	Identifier	ASSERT		3112804	0					
ANR	3112881	ArgumentList	_numNodesDone <= _jobs . Number ( )		3112804	1					
ANR	3112882	Argument	_numNodesDone <= _jobs . Number ( )		3112804	0					
ANR	3112883	RelationalExpression	_numNodesDone <= _jobs . Number ( )		3112804	0		<=			
ANR	3112884	Identifier	_numNodesDone		3112804	0					
ANR	3112885	CallExpression	_jobs . Number ( )		3112804	1					
ANR	3112886	Callee	_jobs . Number		3112804	0					
ANR	3112887	MemberAccess	_jobs . Number		3112804	0					
ANR	3112888	Identifier	_jobs		3112804	0					
ANR	3112889	Identifier	Number		3112804	1					
ANR	3112890	ArgumentList			3112804	1					
ANR	3112891	IdentifierDeclStatement	set < JobID_t > & qp = job -> GetQueueRef ( Job :: Q_CHILDREN ) ;	2176:4:66555:66608	3112804	5	True				
ANR	3112892	IdentifierDecl	& qp = job -> GetQueueRef ( Job :: Q_CHILDREN )		3112804	0					
ANR	3112893	IdentifierDeclType	set < JobID_t > &		3112804	0					
ANR	3112894	Identifier	qp		3112804	1					
ANR	3112895	AssignmentExpression	& qp = job -> GetQueueRef ( Job :: Q_CHILDREN )		3112804	2		=			
ANR	3112896	Identifier	qp		3112804	0					
ANR	3112897	CallExpression	job -> GetQueueRef ( Job :: Q_CHILDREN )		3112804	1					
ANR	3112898	Callee	job -> GetQueueRef		3112804	0					
ANR	3112899	PtrMemberAccess	job -> GetQueueRef		3112804	0					
ANR	3112900	Identifier	job		3112804	0					
ANR	3112901	Identifier	GetQueueRef		3112804	1					
ANR	3112902	ArgumentList	Job :: Q_CHILDREN		3112804	1					
ANR	3112903	Argument	Job :: Q_CHILDREN		3112804	0					
ANR	3112904	Identifier	Job :: Q_CHILDREN		3112804	0					
ANR	3112905	IdentifierDeclStatement	set < JobID_t > :: const_iterator qit ;	2178:1:66612:66644	3112804	6	True				
ANR	3112906	IdentifierDecl	qit		3112804	0					
ANR	3112907	IdentifierDeclType	set < JobID_t > :: const_iterator		3112804	0					
ANR	3112908	Identifier	qit		3112804	1					
ANR	3112909	ForStatement	for ( qit = qp . begin ( ) ; qit != qp . end ( ) ; qit ++ )		3112804	7					
ANR	3112910	ForInit	qit = qp . begin ( ) ;	2179:6:66652:66668	3112804	0	True				
ANR	3112911	AssignmentExpression	qit = qp . begin ( )		3112804	0		=			
ANR	3112912	Identifier	qit		3112804	0					
ANR	3112913	CallExpression	qp . begin ( )		3112804	1					
ANR	3112914	Callee	qp . begin		3112804	0					
ANR	3112915	MemberAccess	qp . begin		3112804	0					
ANR	3112916	Identifier	qp		3112804	0					
ANR	3112917	Identifier	begin		3112804	1					
ANR	3112918	ArgumentList			3112804	1					
ANR	3112919	Condition	qit != qp . end ( )	2179:24:66670:66684	3112804	1	True				
ANR	3112920	EqualityExpression	qit != qp . end ( )		3112804	0		!=			
ANR	3112921	Identifier	qit		3112804	0					
ANR	3112922	CallExpression	qp . end ( )		3112804	1					
ANR	3112923	Callee	qp . end		3112804	0					
ANR	3112924	MemberAccess	qp . end		3112804	0					
ANR	3112925	Identifier	qp		3112804	0					
ANR	3112926	Identifier	end		3112804	1					
ANR	3112927	ArgumentList			3112804	1					
ANR	3112928	PostIncDecOperationExpression	qit ++	2179:41:66687:66691	3112804	2	True				
ANR	3112929	Identifier	qit		3112804	0					
ANR	3112930	IncDec	++		3112804	1					
ANR	3112931	CompoundStatement		27:8:797:835	3112804	3					
ANR	3112932	IdentifierDeclStatement	Job * child = FindNodeByNodeID ( * qit ) ;	2180:8:66704:66742	3112804	0	True				
ANR	3112933	IdentifierDecl	* child = FindNodeByNodeID ( * qit )		3112804	0					
ANR	3112934	IdentifierDeclType	Job *		3112804	0					
ANR	3112935	Identifier	child		3112804	1					
ANR	3112936	AssignmentExpression	* child = FindNodeByNodeID ( * qit )		3112804	2		=			
ANR	3112937	Identifier	child		3112804	0					
ANR	3112938	CallExpression	FindNodeByNodeID ( * qit )		3112804	1					
ANR	3112939	Callee	FindNodeByNodeID		3112804	0					
ANR	3112940	Identifier	FindNodeByNodeID		3112804	0					
ANR	3112941	ArgumentList	* qit		3112804	1					
ANR	3112942	Argument	* qit		3112804	0					
ANR	3112943	UnaryOperationExpression	* qit		3112804	0					
ANR	3112944	UnaryOperator	*		3112804	0					
ANR	3112945	Identifier	qit		3112804	1					
ANR	3112946	ExpressionStatement	ASSERT ( child != NULL )	2181:8:66752:66775	3112804	1	True				
ANR	3112947	CallExpression	ASSERT ( child != NULL )		3112804	0					
ANR	3112948	Callee	ASSERT		3112804	0					
ANR	3112949	Identifier	ASSERT		3112804	0					
ANR	3112950	ArgumentList	child != NULL		3112804	1					
ANR	3112951	Argument	child != NULL		3112804	0					
ANR	3112952	EqualityExpression	child != NULL		3112804	0		!=			
ANR	3112953	Identifier	child		3112804	0					
ANR	3112954	Identifier	NULL		3112804	1					
ANR	3112955	ExpressionStatement	"child -> Remove ( Job :: Q_WAITING , job -> GetJobID ( ) )"	2182:8:66785:66831	3112804	2	True				
ANR	3112956	CallExpression	"child -> Remove ( Job :: Q_WAITING , job -> GetJobID ( ) )"		3112804	0					
ANR	3112957	Callee	child -> Remove		3112804	0					
ANR	3112958	PtrMemberAccess	child -> Remove		3112804	0					
ANR	3112959	Identifier	child		3112804	0					
ANR	3112960	Identifier	Remove		3112804	1					
ANR	3112961	ArgumentList	Job :: Q_WAITING		3112804	1					
ANR	3112962	Argument	Job :: Q_WAITING		3112804	0					
ANR	3112963	Identifier	Job :: Q_WAITING		3112804	0					
ANR	3112964	Argument	job -> GetJobID ( )		3112804	1					
ANR	3112965	CallExpression	job -> GetJobID ( )		3112804	0					
ANR	3112966	Callee	job -> GetJobID		3112804	0					
ANR	3112967	PtrMemberAccess	job -> GetJobID		3112804	0					
ANR	3112968	Identifier	job		3112804	0					
ANR	3112969	Identifier	GetJobID		3112804	1					
ANR	3112970	ArgumentList			3112804	1					
ANR	3112971	IfStatement	if ( child -> GetStatus ( ) == Job :: STATUS_READY && child -> IsEmpty ( Job :: Q_WAITING ) )		3112804	3					
ANR	3112972	Condition	child -> GetStatus ( ) == Job :: STATUS_READY && child -> IsEmpty ( Job :: Q_WAITING )	2183:7:66840:66917	3112804	0	True				
ANR	3112973	AndExpression	child -> GetStatus ( ) == Job :: STATUS_READY && child -> IsEmpty ( Job :: Q_WAITING )		3112804	0		&&			
ANR	3112974	EqualityExpression	child -> GetStatus ( ) == Job :: STATUS_READY		3112804	0		==			
ANR	3112975	CallExpression	child -> GetStatus ( )		3112804	0					
ANR	3112976	Callee	child -> GetStatus		3112804	0					
ANR	3112977	PtrMemberAccess	child -> GetStatus		3112804	0					
ANR	3112978	Identifier	child		3112804	0					
ANR	3112979	Identifier	GetStatus		3112804	1					
ANR	3112980	ArgumentList			3112804	1					
ANR	3112981	Identifier	Job :: STATUS_READY		3112804	1					
ANR	3112982	CallExpression	child -> IsEmpty ( Job :: Q_WAITING )		3112804	1					
ANR	3112983	Callee	child -> IsEmpty		3112804	0					
ANR	3112984	PtrMemberAccess	child -> IsEmpty		3112804	0					
ANR	3112985	Identifier	child		3112804	0					
ANR	3112986	Identifier	IsEmpty		3112804	1					
ANR	3112987	ArgumentList	Job :: Q_WAITING		3112804	1					
ANR	3112988	Argument	Job :: Q_WAITING		3112804	0					
ANR	3112989	Identifier	Job :: Q_WAITING		3112804	0					
ANR	3112990	CompoundStatement		31:38:1014:1014	3112804	1					
ANR	3112991	IfStatement	if ( ! bootstrap )		3112804	0					
ANR	3112992	Condition	! bootstrap	2188:8:67005:67014	3112804	0	True				
ANR	3112993	UnaryOperationExpression	! bootstrap		3112804	0					
ANR	3112994	UnaryOperator	!		3112804	0					
ANR	3112995	Identifier	bootstrap		3112804	1					
ANR	3112996	CompoundStatement		35:21:1111:1111	3112804	1					
ANR	3112997	IfStatement	if ( recovery )		3112804	0					
ANR	3112998	Condition	recovery	2189:9:67029:67036	3112804	0	True				
ANR	3112999	Identifier	recovery		3112804	0					
ANR	3113000	CompoundStatement		36:20:1133:1133	3112804	1					
ANR	3113001	ExpressionStatement	"( void ) child -> MonitorLogFile ( _condorLogRdr , _storkLogRdr , _nfsLogIsError , recovery , _defaultNodeLog )"	2192:5:67130:67239	3112804	0	True				
ANR	3113002	CastExpression	"( void ) child -> MonitorLogFile ( _condorLogRdr , _storkLogRdr , _nfsLogIsError , recovery , _defaultNodeLog )"		3112804	0					
ANR	3113003	CastTarget	void		3112804	0					
ANR	3113004	CallExpression	"child -> MonitorLogFile ( _condorLogRdr , _storkLogRdr , _nfsLogIsError , recovery , _defaultNodeLog )"		3112804	1					
ANR	3113005	Callee	child -> MonitorLogFile		3112804	0					
ANR	3113006	PtrMemberAccess	child -> MonitorLogFile		3112804	0					
ANR	3113007	Identifier	child		3112804	0					
ANR	3113008	Identifier	MonitorLogFile		3112804	1					
ANR	3113009	ArgumentList	_condorLogRdr		3112804	1					
ANR	3113010	Argument	_condorLogRdr		3112804	0					
ANR	3113011	Identifier	_condorLogRdr		3112804	0					
ANR	3113012	Argument	_storkLogRdr		3112804	1					
ANR	3113013	Identifier	_storkLogRdr		3112804	0					
ANR	3113014	Argument	_nfsLogIsError		3112804	2					
ANR	3113015	Identifier	_nfsLogIsError		3112804	0					
ANR	3113016	Argument	recovery		3112804	3					
ANR	3113017	Identifier	recovery		3112804	0					
ANR	3113018	Argument	_defaultNodeLog		3112804	4					
ANR	3113019	Identifier	_defaultNodeLog		3112804	0					
ANR	3113020	ElseStatement	else		3112804	0					
ANR	3113021	CompoundStatement		41:11:1345:1345	3112804	0					
ANR	3113022	ExpressionStatement	"StartNode ( child , false )"	2197:5:67339:67364	3112804	0	True				
ANR	3113023	CallExpression	"StartNode ( child , false )"		3112804	0					
ANR	3113024	Callee	StartNode		3112804	0					
ANR	3113025	Identifier	StartNode		3112804	0					
ANR	3113026	ArgumentList	child		3112804	1					
ANR	3113027	Argument	child		3112804	0					
ANR	3113028	Identifier	child		3112804	0					
ANR	3113029	Argument	false		3112804	1					
ANR	3113030	Identifier	false		3112804	0					
ANR	3113031	ReturnType	void		3112804	1					
ANR	3113032	Identifier	Dag :: TerminateJob		3112804	2					
ANR	3113033	ParameterList	"Job * job , bool recovery , bool bootstrap"		3112804	3					
ANR	3113034	Parameter	Job * job	2153:19:65864:65871	3112804	0	True				
ANR	3113035	ParameterType	Job *		3112804	0					
ANR	3113036	Identifier	job		3112804	1					
ANR	3113037	Parameter	bool recovery	2153:29:65874:65886	3112804	1	True				
ANR	3113038	ParameterType	bool		3112804	0					
ANR	3113039	Identifier	recovery		3112804	1					
ANR	3113040	Parameter	bool bootstrap	2153:44:65889:65902	3112804	2	True				
ANR	3113041	ParameterType	bool		3112804	0					
ANR	3113042	Identifier	bootstrap		3112804	1					
ANR	3113043	CFGEntryNode	ENTRY		3112804		True				
ANR	3113044	CFGExitNode	EXIT		3112804		True				
ANR	3113045	Symbol	Job :: Q_CHILDREN		3112804						
ANR	3113046	Symbol	job -> GetJobID		3112804						
ANR	3113047	Symbol	* qit		3112804						
ANR	3113048	Symbol	recovery		3112804						
ANR	3113049	Symbol	bootstrap		3112804						
ANR	3113050	Symbol	_condorLogRdr		3112804						
ANR	3113051	Symbol	_jobs . Number		3112804						
ANR	3113052	Symbol	job -> countedAsDone		3112804						
ANR	3113053	Symbol	Job :: STATUS_READY		3112804						
ANR	3113054	Symbol	Job :: STATUS_DONE		3112804						
ANR	3113055	Symbol	_jobs		3112804						
ANR	3113056	Symbol	qit		3112804						
ANR	3113057	Symbol	Job :: Q_WAITING		3112804						
ANR	3113058	Symbol	qp		3112804						
ANR	3113059	Symbol	_nfsLogIsError		3112804						
ANR	3113060	Symbol	* child		3112804						
ANR	3113061	Symbol	NULL		3112804						
ANR	3113062	Symbol	* job		3112804						
ANR	3113063	Symbol	job -> GetJobName		3112804						
ANR	3113064	Symbol	false		3112804						
ANR	3113065	Symbol	_defaultNodeLog		3112804						
ANR	3113066	Symbol	child -> GetStatus		3112804						
ANR	3113067	Symbol	job -> GetStatus		3112804						
ANR	3113068	Symbol	child -> IsEmpty		3112804						
ANR	3113069	Symbol	FindNodeByNodeID		3112804						
ANR	3113070	Symbol	_numNodesDone		3112804						
ANR	3113071	Symbol	job -> GetQueueRef		3112804						
ANR	3113072	Symbol	true		3112804						
ANR	3113073	Symbol	qp . begin		3112804						
ANR	3113074	Symbol	qp . end		3112804						
ANR	3113075	Symbol	job		3112804						
ANR	3113076	Symbol	_storkLogRdr		3112804						
ANR	3113077	Symbol	child		3112804						
ANR	3113078	Function	Dag :: PrintEvent	2205:0:67463:68068							
ANR	3113079	FunctionDef	"Dag :: PrintEvent (debug_level_t level , const ULogEvent * event , Job * node , bool recovery)"		3113078	0					
ANR	3113080	CompoundStatement		2208:0:67561:68068	3113078	0					
ANR	3113081	ExpressionStatement	ASSERT ( event )	2209:1:67564:67579	3113078	0	True				
ANR	3113082	CallExpression	ASSERT ( event )		3113078	0					
ANR	3113083	Callee	ASSERT		3113078	0					
ANR	3113084	Identifier	ASSERT		3113078	0					
ANR	3113085	ArgumentList	event		3113078	1					
ANR	3113086	Argument	event		3113078	0					
ANR	3113087	Identifier	event		3113078	0					
ANR	3113088	IdentifierDeclStatement	"const char * recovStr = recovery ? "" [recovery mode]"" : """" ;"	2211:1:67583:67640	3113078	1	True				
ANR	3113089	IdentifierDecl	"* recovStr = recovery ? "" [recovery mode]"" : """""		3113078	0					
ANR	3113090	IdentifierDeclType	const char *		3113078	0					
ANR	3113091	Identifier	recovStr		3113078	1					
ANR	3113092	AssignmentExpression	"* recovStr = recovery ? "" [recovery mode]"" : """""		3113078	2		=			
ANR	3113093	Identifier	recovStr		3113078	0					
ANR	3113094	ConditionalExpression	"recovery ? "" [recovery mode]"" : """""		3113078	1					
ANR	3113095	Condition	recovery		3113078	0					
ANR	3113096	Identifier	recovery		3113078	0					
ANR	3113097	PrimaryExpression	""" [recovery mode]"""		3113078	1					
ANR	3113098	PrimaryExpression	""""""		3113078	2					
ANR	3113099	IfStatement	if ( node )		3113078	2					
ANR	3113100	Condition	node	2213:5:67648:67651	3113078	0	True				
ANR	3113101	Identifier	node		3113078	0					
ANR	3113102	CompoundStatement		6:12:93:93	3113078	1					
ANR	3113103	ExpressionStatement	"debug_printf ( level , ""Event: %s for %s Node %s (%d.%d.%d)%s\\n"" , event -> eventName ( ) , node -> JobTypeString ( ) , node -> GetJobName ( ) , event -> cluster , event -> proc , event -> subproc , recovStr )"	2214:5:67662:67865	3113078	0	True				
ANR	3113104	CallExpression	"debug_printf ( level , ""Event: %s for %s Node %s (%d.%d.%d)%s\\n"" , event -> eventName ( ) , node -> JobTypeString ( ) , node -> GetJobName ( ) , event -> cluster , event -> proc , event -> subproc , recovStr )"		3113078	0					
ANR	3113105	Callee	debug_printf		3113078	0					
ANR	3113106	Identifier	debug_printf		3113078	0					
ANR	3113107	ArgumentList	level		3113078	1					
ANR	3113108	Argument	level		3113078	0					
ANR	3113109	Identifier	level		3113078	0					
ANR	3113110	Argument	"""Event: %s for %s Node %s (%d.%d.%d)%s\\n"""		3113078	1					
ANR	3113111	PrimaryExpression	"""Event: %s for %s Node %s (%d.%d.%d)%s\\n"""		3113078	0					
ANR	3113112	Argument	event -> eventName ( )		3113078	2					
ANR	3113113	CallExpression	event -> eventName ( )		3113078	0					
ANR	3113114	Callee	event -> eventName		3113078	0					
ANR	3113115	PtrMemberAccess	event -> eventName		3113078	0					
ANR	3113116	Identifier	event		3113078	0					
ANR	3113117	Identifier	eventName		3113078	1					
ANR	3113118	ArgumentList			3113078	1					
ANR	3113119	Argument	node -> JobTypeString ( )		3113078	3					
ANR	3113120	CallExpression	node -> JobTypeString ( )		3113078	0					
ANR	3113121	Callee	node -> JobTypeString		3113078	0					
ANR	3113122	PtrMemberAccess	node -> JobTypeString		3113078	0					
ANR	3113123	Identifier	node		3113078	0					
ANR	3113124	Identifier	JobTypeString		3113078	1					
ANR	3113125	ArgumentList			3113078	1					
ANR	3113126	Argument	node -> GetJobName ( )		3113078	4					
ANR	3113127	CallExpression	node -> GetJobName ( )		3113078	0					
ANR	3113128	Callee	node -> GetJobName		3113078	0					
ANR	3113129	PtrMemberAccess	node -> GetJobName		3113078	0					
ANR	3113130	Identifier	node		3113078	0					
ANR	3113131	Identifier	GetJobName		3113078	1					
ANR	3113132	ArgumentList			3113078	1					
ANR	3113133	Argument	event -> cluster		3113078	5					
ANR	3113134	PtrMemberAccess	event -> cluster		3113078	0					
ANR	3113135	Identifier	event		3113078	0					
ANR	3113136	Identifier	cluster		3113078	1					
ANR	3113137	Argument	event -> proc		3113078	6					
ANR	3113138	PtrMemberAccess	event -> proc		3113078	0					
ANR	3113139	Identifier	event		3113078	0					
ANR	3113140	Identifier	proc		3113078	1					
ANR	3113141	Argument	event -> subproc		3113078	7					
ANR	3113142	PtrMemberAccess	event -> subproc		3113078	0					
ANR	3113143	Identifier	event		3113078	0					
ANR	3113144	Identifier	subproc		3113078	1					
ANR	3113145	Argument	recovStr		3113078	8					
ANR	3113146	Identifier	recovStr		3113078	0					
ANR	3113147	ElseStatement	else		3113078	0					
ANR	3113148	CompoundStatement		11:8:313:313	3113078	0					
ANR	3113149	Statement	debug_printf	2219:8:67885:67896	3113078	0	True				
ANR	3113150	Statement	(	2219:20:67897:67897	3113078	1	True				
ANR	3113151	Statement	level	2219:22:67899:67903	3113078	2	True				
ANR	3113152	Statement	","	2219:27:67904:67904	3113078	3	True				
ANR	3113153	Statement	"""Event: %s for unknown Node (%d.%d.%d): """	2219:29:67906:67946	3113078	4	True				
ANR	3113154	Statement	"""ignoring...%s\\n"""	2220:7:67955:67971	3113078	5	True				
ANR	3113155	Statement	","	2220:24:67972:67972	3113078	6	True				
ANR	3113156	Statement	event	2220:26:67974:67978	3113078	7	True				
ANR	3113157	Statement	->	2220:31:67979:67980	3113078	8	True				
ANR	3113158	Statement	eventName	2220:33:67981:67989	3113078	9	True				
ANR	3113159	Statement	(	2220:42:67990:67990	3113078	10	True				
ANR	3113160	Statement	)	2220:43:67991:67991	3113078	11	True				
ANR	3113161	Statement	","	2220:44:67992:67992	3113078	12	True				
ANR	3113162	Statement	event	2221:7:68001:68005	3113078	13	True				
ANR	3113163	Statement	->	2221:12:68006:68007	3113078	14	True				
ANR	3113164	Statement	cluster	2221:14:68008:68014	3113078	15	True				
ANR	3113165	Statement	","	2221:21:68015:68015	3113078	16	True				
ANR	3113166	Statement	event	2221:23:68017:68021	3113078	17	True				
ANR	3113167	Statement	->	2221:28:68022:68023	3113078	18	True				
ANR	3113168	Statement	proc	2221:30:68024:68027	3113078	19	True				
ANR	3113169	Statement	","	2221:34:68028:68028	3113078	20	True				
ANR	3113170	Statement	event	2222:7:68037:68041	3113078	21	True				
ANR	3113171	Statement	->	2222:12:68042:68043	3113078	22	True				
ANR	3113172	Statement	subproc	2222:14:68044:68050	3113078	23	True				
ANR	3113173	Statement	","	2222:21:68051:68051	3113078	24	True				
ANR	3113174	Statement	recovStr	2222:23:68053:68060	3113078	25	True				
ANR	3113175	Statement	)	2222:32:68062:68062	3113078	26	True				
ANR	3113176	ExpressionStatement		2222:33:68063:68063	3113078	27	True				
ANR	3113177	ReturnType	void		3113078	1					
ANR	3113178	Identifier	Dag :: PrintEvent		3113078	2					
ANR	3113179	ParameterList	"debug_level_t level , const ULogEvent * event , Job * node , bool recovery"		3113078	3					
ANR	3113180	Parameter	debug_level_t level	2206:12:67486:67504	3113078	0	True				
ANR	3113181	ParameterType	debug_level_t		3113078	0					
ANR	3113182	Identifier	level		3113078	1					
ANR	3113183	Parameter	const ULogEvent * event	2206:33:67507:67528	3113078	1	True				
ANR	3113184	ParameterType	const ULogEvent *		3113078	0					
ANR	3113185	Identifier	event		3113078	1					
ANR	3113186	Parameter	Job * node	2206:57:67531:67539	3113078	2	True				
ANR	3113187	ParameterType	Job *		3113078	0					
ANR	3113188	Identifier	node		3113078	1					
ANR	3113189	Parameter	bool recovery	2207:3:67545:67557	3113078	3	True				
ANR	3113190	ParameterType	bool		3113078	0					
ANR	3113191	Identifier	recovery		3113078	1					
ANR	3113192	CFGEntryNode	ENTRY		3113078		True				
ANR	3113193	CFGExitNode	EXIT		3113078		True				
ANR	3113194	Symbol	node -> JobTypeString		3113078						
ANR	3113195	Symbol	* event		3113078						
ANR	3113196	Symbol	recovStr		3113078						
ANR	3113197	Symbol	node -> GetJobName		3113078						
ANR	3113198	Symbol	level		3113078						
ANR	3113199	Symbol	event -> eventName		3113078						
ANR	3113200	Symbol	recovery		3113078						
ANR	3113201	Symbol	event -> subproc		3113078						
ANR	3113202	Symbol	node		3113078						
ANR	3113203	Symbol	* node		3113078						
ANR	3113204	Symbol	event		3113078						
ANR	3113205	Symbol	event -> proc		3113078						
ANR	3113206	Symbol	event -> cluster		3113078						
ANR	3113207	Function	Dag :: RestartNode	2227:0:68147:70143							
ANR	3113208	FunctionDef	"Dag :: RestartNode (Job * node , bool recovery)"		3113207	0					
ANR	3113209	CompoundStatement		2229:0:68197:70143	3113207	0					
ANR	3113210	ExpressionStatement	ASSERT ( node != NULL )	2230:4:68203:68225	3113207	0	True				
ANR	3113211	CallExpression	ASSERT ( node != NULL )		3113207	0					
ANR	3113212	Callee	ASSERT		3113207	0					
ANR	3113213	Identifier	ASSERT		3113207	0					
ANR	3113214	ArgumentList	node != NULL		3113207	1					
ANR	3113215	Argument	node != NULL		3113207	0					
ANR	3113216	EqualityExpression	node != NULL		3113207	0		!=			
ANR	3113217	Identifier	node		3113207	0					
ANR	3113218	Identifier	NULL		3113207	1					
ANR	3113219	IfStatement	if ( node -> _Status != Job :: STATUS_ERROR )		3113207	1					
ANR	3113220	Condition	node -> _Status != Job :: STATUS_ERROR	2231:6:68233:68266	3113207	0	True				
ANR	3113221	EqualityExpression	node -> _Status != Job :: STATUS_ERROR		3113207	0		!=			
ANR	3113222	PtrMemberAccess	node -> _Status		3113207	0					
ANR	3113223	Identifier	node		3113207	0					
ANR	3113224	Identifier	_Status		3113207	1					
ANR	3113225	Identifier	Job :: STATUS_ERROR		3113207	1					
ANR	3113226	CompoundStatement		3:43:72:72	3113207	1					
ANR	3113227	ExpressionStatement	"EXCEPT ( ""Node %s is not in ERROR state"" , node -> GetJobName ( ) )"	2232:2:68274:68335	3113207	0	True				
ANR	3113228	CallExpression	"EXCEPT ( ""Node %s is not in ERROR state"" , node -> GetJobName ( ) )"		3113207	0					
ANR	3113229	Callee	EXCEPT		3113207	0					
ANR	3113230	Identifier	EXCEPT		3113207	0					
ANR	3113231	ArgumentList	"""Node %s is not in ERROR state"""		3113207	1					
ANR	3113232	Argument	"""Node %s is not in ERROR state"""		3113207	0					
ANR	3113233	PrimaryExpression	"""Node %s is not in ERROR state"""		3113207	0					
ANR	3113234	Argument	node -> GetJobName ( )		3113207	1					
ANR	3113235	CallExpression	node -> GetJobName ( )		3113207	0					
ANR	3113236	Callee	node -> GetJobName		3113207	0					
ANR	3113237	PtrMemberAccess	node -> GetJobName		3113207	0					
ANR	3113238	Identifier	node		3113207	0					
ANR	3113239	Identifier	GetJobName		3113207	1					
ANR	3113240	ArgumentList			3113207	1					
ANR	3113241	IfStatement	if ( node -> have_retry_abort_val && node -> retval == node -> retry_abort_val )		3113207	2					
ANR	3113242	Condition	node -> have_retry_abort_val && node -> retval == node -> retry_abort_val	2234:8:68348:68414	3113207	0	True				
ANR	3113243	AndExpression	node -> have_retry_abort_val && node -> retval == node -> retry_abort_val		3113207	0		&&			
ANR	3113244	PtrMemberAccess	node -> have_retry_abort_val		3113207	0					
ANR	3113245	Identifier	node		3113207	0					
ANR	3113246	Identifier	have_retry_abort_val		3113207	1					
ANR	3113247	EqualityExpression	node -> retval == node -> retry_abort_val		3113207	1		==			
ANR	3113248	PtrMemberAccess	node -> retval		3113207	0					
ANR	3113249	Identifier	node		3113207	0					
ANR	3113250	Identifier	retval		3113207	1					
ANR	3113251	PtrMemberAccess	node -> retry_abort_val		3113207	1					
ANR	3113252	Identifier	node		3113207	0					
ANR	3113253	Identifier	retry_abort_val		3113207	1					
ANR	3113254	CompoundStatement		6:78:220:220	3113207	1					
ANR	3113255	Statement	debug_printf	2235:8:68428:68439	3113207	0	True				
ANR	3113256	Statement	(	2235:20:68440:68440	3113207	1	True				
ANR	3113257	Statement	DEBUG_NORMAL	2235:22:68442:68453	3113207	2	True				
ANR	3113258	Statement	","	2235:34:68454:68454	3113207	3	True				
ANR	3113259	Statement	"""Aborting further retries of node %s """	2235:36:68456:68493	3113207	4	True				
ANR	3113260	Statement	"""(last attempt returned %d)\\n"""	2236:22:68517:68546	3113207	5	True				
ANR	3113261	Statement	","	2236:52:68547:68547	3113207	6	True				
ANR	3113262	Statement	node	2237:22:68571:68574	3113207	7	True				
ANR	3113263	Statement	->	2237:26:68575:68576	3113207	8	True				
ANR	3113264	Statement	GetJobName	2237:28:68577:68586	3113207	9	True				
ANR	3113265	Statement	(	2237:38:68587:68587	3113207	10	True				
ANR	3113266	Statement	)	2237:39:68588:68588	3113207	11	True				
ANR	3113267	Statement	","	2237:40:68589:68589	3113207	12	True				
ANR	3113268	Statement	node	2237:42:68591:68594	3113207	13	True				
ANR	3113269	Statement	->	2237:46:68595:68596	3113207	14	True				
ANR	3113270	Statement	retval	2237:48:68597:68602	3113207	15	True				
ANR	3113271	Statement	)	2237:54:68603:68603	3113207	16	True				
ANR	3113272	ExpressionStatement		2237:55:68604:68604	3113207	17	True				
ANR	3113273	ExpressionStatement	_numNodesFailed ++	2238:8:68614:68631	3113207	18	True				
ANR	3113274	PostIncDecOperationExpression	_numNodesFailed ++		3113207	0					
ANR	3113275	Identifier	_numNodesFailed		3113207	0					
ANR	3113276	IncDec	++		3113207	1					
ANR	3113277	ReturnStatement	return ;	2239:8:68641:68647	3113207	19	True				
ANR	3113278	ExpressionStatement	node -> _Status = Job :: STATUS_READY	2241:1:68656:68689	3113207	3	True				
ANR	3113279	AssignmentExpression	node -> _Status = Job :: STATUS_READY		3113207	0		=			
ANR	3113280	PtrMemberAccess	node -> _Status		3113207	0					
ANR	3113281	Identifier	node		3113207	0					
ANR	3113282	Identifier	_Status		3113207	1					
ANR	3113283	Identifier	Job :: STATUS_READY		3113207	1					
ANR	3113284	ExpressionStatement	node -> retries ++	2242:1:68692:68707	3113207	4	True				
ANR	3113285	PostIncDecOperationExpression	node -> retries ++		3113207	0					
ANR	3113286	PtrMemberAccess	node -> retries		3113207	0					
ANR	3113287	Identifier	node		3113207	0					
ANR	3113288	Identifier	retries		3113207	1					
ANR	3113289	IncDec	++		3113207	1					
ANR	3113290	ExpressionStatement	ASSERT ( node -> GetRetries ( ) <= node -> GetRetryMax ( ) )	2243:1:68710:68761	3113207	5	True				
ANR	3113291	CallExpression	ASSERT ( node -> GetRetries ( ) <= node -> GetRetryMax ( ) )		3113207	0					
ANR	3113292	Callee	ASSERT		3113207	0					
ANR	3113293	Identifier	ASSERT		3113207	0					
ANR	3113294	ArgumentList	node -> GetRetries ( ) <= node -> GetRetryMax ( )		3113207	1					
ANR	3113295	Argument	node -> GetRetries ( ) <= node -> GetRetryMax ( )		3113207	0					
ANR	3113296	RelationalExpression	node -> GetRetries ( ) <= node -> GetRetryMax ( )		3113207	0		<=			
ANR	3113297	CallExpression	node -> GetRetries ( )		3113207	0					
ANR	3113298	Callee	node -> GetRetries		3113207	0					
ANR	3113299	PtrMemberAccess	node -> GetRetries		3113207	0					
ANR	3113300	Identifier	node		3113207	0					
ANR	3113301	Identifier	GetRetries		3113207	1					
ANR	3113302	ArgumentList			3113207	1					
ANR	3113303	CallExpression	node -> GetRetryMax ( )		3113207	1					
ANR	3113304	Callee	node -> GetRetryMax		3113207	0					
ANR	3113305	PtrMemberAccess	node -> GetRetryMax		3113207	0					
ANR	3113306	Identifier	node		3113207	0					
ANR	3113307	Identifier	GetRetryMax		3113207	1					
ANR	3113308	ArgumentList			3113207	1					
ANR	3113309	IfStatement	if ( node -> _scriptPre )		3113207	6					
ANR	3113310	Condition	node -> _scriptPre	2244:5:68768:68783	3113207	0	True				
ANR	3113311	PtrMemberAccess	node -> _scriptPre		3113207	0					
ANR	3113312	Identifier	node		3113207	0					
ANR	3113313	Identifier	_scriptPre		3113207	1					
ANR	3113314	CompoundStatement		16:24:589:589	3113207	1					
ANR	3113315	ExpressionStatement	node -> _scriptPre -> _done = false	2246:2:68823:68854	3113207	0	True				
ANR	3113316	AssignmentExpression	node -> _scriptPre -> _done = false		3113207	0		=			
ANR	3113317	PtrMemberAccess	node -> _scriptPre -> _done		3113207	0					
ANR	3113318	PtrMemberAccess	node -> _scriptPre		3113207	0					
ANR	3113319	Identifier	node		3113207	0					
ANR	3113320	Identifier	_scriptPre		3113207	1					
ANR	3113321	Identifier	_done		3113207	1					
ANR	3113322	Identifier	false		3113207	1					
ANR	3113323	ExpressionStatement	"strcpy ( node -> error_text , """" )"	2248:1:68860:68890	3113207	7	True				
ANR	3113324	CallExpression	"strcpy ( node -> error_text , """" )"		3113207	0					
ANR	3113325	Callee	strcpy		3113207	0					
ANR	3113326	Identifier	strcpy		3113207	0					
ANR	3113327	ArgumentList	node -> error_text		3113207	1					
ANR	3113328	Argument	node -> error_text		3113207	0					
ANR	3113329	PtrMemberAccess	node -> error_text		3113207	0					
ANR	3113330	Identifier	node		3113207	0					
ANR	3113331	Identifier	error_text		3113207	1					
ANR	3113332	Argument	""""""		3113207	1					
ANR	3113333	PrimaryExpression	""""""		3113207	0					
ANR	3113334	ExpressionStatement	node -> ResetJobstateSequenceNum ( )	2249:1:68893:68925	3113207	8	True				
ANR	3113335	CallExpression	node -> ResetJobstateSequenceNum ( )		3113207	0					
ANR	3113336	Callee	node -> ResetJobstateSequenceNum		3113207	0					
ANR	3113337	PtrMemberAccess	node -> ResetJobstateSequenceNum		3113207	0					
ANR	3113338	Identifier	node		3113207	0					
ANR	3113339	Identifier	ResetJobstateSequenceNum		3113207	1					
ANR	3113340	ArgumentList			3113207	1					
ANR	3113341	IfStatement	if ( ! recovery )		3113207	9					
ANR	3113342	Condition	! recovery	2251:5:68933:68941	3113207	0	True				
ANR	3113343	UnaryOperationExpression	! recovery		3113207	0					
ANR	3113344	UnaryOperator	!		3113207	0					
ANR	3113345	Identifier	recovery		3113207	1					
ANR	3113346	CompoundStatement		23:17:747:747	3113207	1					
ANR	3113347	ExpressionStatement	"debug_printf ( DEBUG_VERBOSE , ""Retrying node %s (retry #%d of %d)...\\n"" , node -> GetJobName ( ) , node -> GetRetries ( ) , node -> GetRetryMax ( ) )"	2252:2:68949:69092	3113207	0	True				
ANR	3113348	CallExpression	"debug_printf ( DEBUG_VERBOSE , ""Retrying node %s (retry #%d of %d)...\\n"" , node -> GetJobName ( ) , node -> GetRetries ( ) , node -> GetRetryMax ( ) )"		3113207	0					
ANR	3113349	Callee	debug_printf		3113207	0					
ANR	3113350	Identifier	debug_printf		3113207	0					
ANR	3113351	ArgumentList	DEBUG_VERBOSE		3113207	1					
ANR	3113352	Argument	DEBUG_VERBOSE		3113207	0					
ANR	3113353	Identifier	DEBUG_VERBOSE		3113207	0					
ANR	3113354	Argument	"""Retrying node %s (retry #%d of %d)...\\n"""		3113207	1					
ANR	3113355	PrimaryExpression	"""Retrying node %s (retry #%d of %d)...\\n"""		3113207	0					
ANR	3113356	Argument	node -> GetJobName ( )		3113207	2					
ANR	3113357	CallExpression	node -> GetJobName ( )		3113207	0					
ANR	3113358	Callee	node -> GetJobName		3113207	0					
ANR	3113359	PtrMemberAccess	node -> GetJobName		3113207	0					
ANR	3113360	Identifier	node		3113207	0					
ANR	3113361	Identifier	GetJobName		3113207	1					
ANR	3113362	ArgumentList			3113207	1					
ANR	3113363	Argument	node -> GetRetries ( )		3113207	3					
ANR	3113364	CallExpression	node -> GetRetries ( )		3113207	0					
ANR	3113365	Callee	node -> GetRetries		3113207	0					
ANR	3113366	PtrMemberAccess	node -> GetRetries		3113207	0					
ANR	3113367	Identifier	node		3113207	0					
ANR	3113368	Identifier	GetRetries		3113207	1					
ANR	3113369	ArgumentList			3113207	1					
ANR	3113370	Argument	node -> GetRetryMax ( )		3113207	4					
ANR	3113371	CallExpression	node -> GetRetryMax ( )		3113207	0					
ANR	3113372	Callee	node -> GetRetryMax		3113207	0					
ANR	3113373	PtrMemberAccess	node -> GetRetryMax		3113207	0					
ANR	3113374	Identifier	node		3113207	0					
ANR	3113375	Identifier	GetRetryMax		3113207	1					
ANR	3113376	ArgumentList			3113207	1					
ANR	3113377	ExpressionStatement	"StartNode ( node , true )"	2255:2:69096:69119	3113207	1	True				
ANR	3113378	CallExpression	"StartNode ( node , true )"		3113207	0					
ANR	3113379	Callee	StartNode		3113207	0					
ANR	3113380	Identifier	StartNode		3113207	0					
ANR	3113381	ArgumentList	node		3113207	1					
ANR	3113382	Argument	node		3113207	0					
ANR	3113383	Identifier	node		3113207	0					
ANR	3113384	Argument	true		3113207	1					
ANR	3113385	Identifier	true		3113207	0					
ANR	3113386	ElseStatement	else		3113207	0					
ANR	3113387	CompoundStatement		28:8:931:931	3113207	0					
ANR	3113388	Statement	debug_printf	2257:2:69133:69144	3113207	0	True				
ANR	3113389	Statement	(	2257:14:69145:69145	3113207	1	True				
ANR	3113390	Statement	DEBUG_VERBOSE	2257:16:69147:69159	3113207	2	True				
ANR	3113391	Statement	","	2257:29:69160:69160	3113207	3	True				
ANR	3113392	Statement	"""Looking for retry of node %s (retry """	2257:31:69162:69199	3113207	4	True				
ANR	3113393	Statement	"""#%d of %d)...\\n"""	2258:5:69206:69222	3113207	5	True				
ANR	3113394	Statement	","	2258:22:69223:69223	3113207	6	True				
ANR	3113395	Statement	node	2258:24:69225:69228	3113207	7	True				
ANR	3113396	Statement	->	2258:28:69229:69230	3113207	8	True				
ANR	3113397	Statement	GetJobName	2258:30:69231:69240	3113207	9	True				
ANR	3113398	Statement	(	2258:40:69241:69241	3113207	10	True				
ANR	3113399	Statement	)	2258:41:69242:69242	3113207	11	True				
ANR	3113400	Statement	","	2258:42:69243:69243	3113207	12	True				
ANR	3113401	Statement	node	2258:44:69245:69248	3113207	13	True				
ANR	3113402	Statement	->	2258:48:69249:69250	3113207	14	True				
ANR	3113403	Statement	GetRetries	2258:50:69251:69260	3113207	15	True				
ANR	3113404	Statement	(	2258:60:69261:69261	3113207	16	True				
ANR	3113405	Statement	)	2258:61:69262:69262	3113207	17	True				
ANR	3113406	Statement	","	2258:62:69263:69263	3113207	18	True				
ANR	3113407	Statement	node	2259:5:69270:69273	3113207	19	True				
ANR	3113408	Statement	->	2259:9:69274:69275	3113207	20	True				
ANR	3113409	Statement	GetRetryMax	2259:11:69276:69286	3113207	21	True				
ANR	3113410	Statement	(	2259:22:69287:69287	3113207	22	True				
ANR	3113411	Statement	)	2259:23:69288:69288	3113207	23	True				
ANR	3113412	Statement	)	2259:25:69290:69290	3113207	24	True				
ANR	3113413	ExpressionStatement		2259:26:69291:69291	3113207	25	True				
ANR	3113414	IfStatement	if ( ! ( node -> _CondorID == _defaultCondorId ) )		3113207	26					
ANR	3113415	Condition	! ( node -> _CondorID == _defaultCondorId )	2265:7:69520:69557	3113207	0	True				
ANR	3113416	UnaryOperationExpression	! ( node -> _CondorID == _defaultCondorId )		3113207	0					
ANR	3113417	UnaryOperator	!		3113207	0					
ANR	3113418	EqualityExpression	node -> _CondorID == _defaultCondorId		3113207	1		==			
ANR	3113419	PtrMemberAccess	node -> _CondorID		3113207	0					
ANR	3113420	Identifier	node		3113207	0					
ANR	3113421	Identifier	_CondorID		3113207	1					
ANR	3113422	Identifier	_defaultCondorId		3113207	1					
ANR	3113423	CompoundStatement		40:3:1451:1489	3113207	1					
ANR	3113424	IdentifierDeclStatement	int logsource = node -> JobType ( ) == Job :: TYPE_CONDOR ? CONDORLOG : DAPLOG ;	2266:3:69566:69644	3113207	0	True				
ANR	3113425	IdentifierDecl	logsource = node -> JobType ( ) == Job :: TYPE_CONDOR ? CONDORLOG : DAPLOG		3113207	0					
ANR	3113426	IdentifierDeclType	int		3113207	0					
ANR	3113427	Identifier	logsource		3113207	1					
ANR	3113428	AssignmentExpression	logsource = node -> JobType ( ) == Job :: TYPE_CONDOR ? CONDORLOG : DAPLOG		3113207	2		=			
ANR	3113429	Identifier	logsource		3113207	0					
ANR	3113430	ConditionalExpression	node -> JobType ( ) == Job :: TYPE_CONDOR ? CONDORLOG : DAPLOG		3113207	1					
ANR	3113431	Condition	node -> JobType ( ) == Job :: TYPE_CONDOR		3113207	0					
ANR	3113432	EqualityExpression	node -> JobType ( ) == Job :: TYPE_CONDOR		3113207	0		==			
ANR	3113433	CallExpression	node -> JobType ( )		3113207	0					
ANR	3113434	Callee	node -> JobType		3113207	0					
ANR	3113435	PtrMemberAccess	node -> JobType		3113207	0					
ANR	3113436	Identifier	node		3113207	0					
ANR	3113437	Identifier	JobType		3113207	1					
ANR	3113438	ArgumentList			3113207	1					
ANR	3113439	Identifier	Job :: TYPE_CONDOR		3113207	1					
ANR	3113440	Identifier	CONDORLOG		3113207	1					
ANR	3113441	Identifier	DAPLOG		3113207	2					
ANR	3113442	IdentifierDeclStatement	int id = GetIndexID ( node -> _CondorID ) ;	2268:3:69649:69687	3113207	1	True				
ANR	3113443	IdentifierDecl	id = GetIndexID ( node -> _CondorID )		3113207	0					
ANR	3113444	IdentifierDeclType	int		3113207	0					
ANR	3113445	Identifier	id		3113207	1					
ANR	3113446	AssignmentExpression	id = GetIndexID ( node -> _CondorID )		3113207	2		=			
ANR	3113447	Identifier	id		3113207	0					
ANR	3113448	CallExpression	GetIndexID ( node -> _CondorID )		3113207	1					
ANR	3113449	Callee	GetIndexID		3113207	0					
ANR	3113450	Identifier	GetIndexID		3113207	0					
ANR	3113451	ArgumentList	node -> _CondorID		3113207	1					
ANR	3113452	Argument	node -> _CondorID		3113207	0					
ANR	3113453	PtrMemberAccess	node -> _CondorID		3113207	0					
ANR	3113454	Identifier	node		3113207	0					
ANR	3113455	Identifier	_CondorID		3113207	1					
ANR	3113456	IfStatement	"if ( GetEventIDHash ( node -> GetNoop ( ) , logsource ) -> remove ( id ) != 0 )"		3113207	2					
ANR	3113457	Condition	"GetEventIDHash ( node -> GetNoop ( ) , logsource ) -> remove ( id ) != 0"	2269:8:69697:69765	3113207	0	True				
ANR	3113458	EqualityExpression	"GetEventIDHash ( node -> GetNoop ( ) , logsource ) -> remove ( id ) != 0"		3113207	0		!=			
ANR	3113459	CallExpression	"GetEventIDHash ( node -> GetNoop ( ) , logsource ) -> remove ( id )"		3113207	0					
ANR	3113460	Callee	"GetEventIDHash ( node -> GetNoop ( ) , logsource ) -> remove"		3113207	0					
ANR	3113461	PtrMemberAccess	"GetEventIDHash ( node -> GetNoop ( ) , logsource ) -> remove"		3113207	0					
ANR	3113462	CallExpression	"GetEventIDHash ( node -> GetNoop ( ) , logsource )"		3113207	0					
ANR	3113463	Callee	GetEventIDHash		3113207	0					
ANR	3113464	Identifier	GetEventIDHash		3113207	0					
ANR	3113465	ArgumentList	node -> GetNoop ( )		3113207	1					
ANR	3113466	Argument	node -> GetNoop ( )		3113207	0					
ANR	3113467	CallExpression	node -> GetNoop ( )		3113207	0					
ANR	3113468	Callee	node -> GetNoop		3113207	0					
ANR	3113469	PtrMemberAccess	node -> GetNoop		3113207	0					
ANR	3113470	Identifier	node		3113207	0					
ANR	3113471	Identifier	GetNoop		3113207	1					
ANR	3113472	ArgumentList			3113207	1					
ANR	3113473	Argument	logsource		3113207	1					
ANR	3113474	Identifier	logsource		3113207	0					
ANR	3113475	Identifier	remove		3113207	1					
ANR	3113476	ArgumentList	id		3113207	1					
ANR	3113477	Argument	id		3113207	0					
ANR	3113478	Identifier	id		3113207	0					
ANR	3113479	PrimaryExpression	0		3113207	1					
ANR	3113480	CompoundStatement		42:13:1571:1571	3113207	1					
ANR	3113481	ExpressionStatement	"EXCEPT ( ""Event ID hash table error!"" )"	2271:4:69775:69813	3113207	0	True				
ANR	3113482	CallExpression	"EXCEPT ( ""Event ID hash table error!"" )"		3113207	0					
ANR	3113483	Callee	EXCEPT		3113207	0					
ANR	3113484	Identifier	EXCEPT		3113207	0					
ANR	3113485	ArgumentList	"""Event ID hash table error!"""		3113207	1					
ANR	3113486	Argument	"""Event ID hash table error!"""		3113207	0					
ANR	3113487	PrimaryExpression	"""Event ID hash table error!"""		3113207	0					
ANR	3113488	ExpressionStatement	node -> _CondorID = _defaultCondorId	2278:2:69995:70029	3113207	27	True				
ANR	3113489	AssignmentExpression	node -> _CondorID = _defaultCondorId		3113207	0		=			
ANR	3113490	PtrMemberAccess	node -> _CondorID		3113207	0					
ANR	3113491	Identifier	node		3113207	0					
ANR	3113492	Identifier	_CondorID		3113207	1					
ANR	3113493	Identifier	_defaultCondorId		3113207	1					
ANR	3113494	ExpressionStatement	"( void ) node -> MonitorLogFile ( _condorLogRdr , _storkLogRdr , _nfsLogIsError , recovery , _defaultNodeLog )"	2279:2:70033:70138	3113207	28	True				
ANR	3113495	CastExpression	"( void ) node -> MonitorLogFile ( _condorLogRdr , _storkLogRdr , _nfsLogIsError , recovery , _defaultNodeLog )"		3113207	0					
ANR	3113496	CastTarget	void		3113207	0					
ANR	3113497	CallExpression	"node -> MonitorLogFile ( _condorLogRdr , _storkLogRdr , _nfsLogIsError , recovery , _defaultNodeLog )"		3113207	1					
ANR	3113498	Callee	node -> MonitorLogFile		3113207	0					
ANR	3113499	PtrMemberAccess	node -> MonitorLogFile		3113207	0					
ANR	3113500	Identifier	node		3113207	0					
ANR	3113501	Identifier	MonitorLogFile		3113207	1					
ANR	3113502	ArgumentList	_condorLogRdr		3113207	1					
ANR	3113503	Argument	_condorLogRdr		3113207	0					
ANR	3113504	Identifier	_condorLogRdr		3113207	0					
ANR	3113505	Argument	_storkLogRdr		3113207	1					
ANR	3113506	Identifier	_storkLogRdr		3113207	0					
ANR	3113507	Argument	_nfsLogIsError		3113207	2					
ANR	3113508	Identifier	_nfsLogIsError		3113207	0					
ANR	3113509	Argument	recovery		3113207	3					
ANR	3113510	Identifier	recovery		3113207	0					
ANR	3113511	Argument	_defaultNodeLog		3113207	4					
ANR	3113512	Identifier	_defaultNodeLog		3113207	0					
ANR	3113513	ReturnType	void		3113207	1					
ANR	3113514	Identifier	Dag :: RestartNode		3113207	2					
ANR	3113515	ParameterList	"Job * node , bool recovery"		3113207	3					
ANR	3113516	Parameter	Job * node	2228:18:68170:68178	3113207	0	True				
ANR	3113517	ParameterType	Job *		3113207	0					
ANR	3113518	Identifier	node		3113207	1					
ANR	3113519	Parameter	bool recovery	2228:29:68181:68193	3113207	1	True				
ANR	3113520	ParameterType	bool		3113207	0					
ANR	3113521	Identifier	recovery		3113207	1					
ANR	3113522	CFGEntryNode	ENTRY		3113207		True				
ANR	3113523	CFGExitNode	EXIT		3113207		True				
ANR	3113524	Symbol	node -> have_retry_abort_val		3113207						
ANR	3113525	Symbol	recovery		3113207						
ANR	3113526	Symbol	_condorLogRdr		3113207						
ANR	3113527	Symbol	node -> GetNoop		3113207						
ANR	3113528	Symbol	Job :: TYPE_CONDOR		3113207						
ANR	3113529	Symbol	* GetEventIDHash		3113207						
ANR	3113530	Symbol	"GetEventIDHash ( node -> GetNoop ( ) , logsource ) -> remove"		3113207						
ANR	3113531	Symbol	Job :: STATUS_READY		3113207						
ANR	3113532	Symbol	DAPLOG		3113207						
ANR	3113533	Symbol	node -> retries		3113207						
ANR	3113534	Symbol	node -> JobType		3113207						
ANR	3113535	Symbol	* node		3113207						
ANR	3113536	Symbol	id		3113207						
ANR	3113537	Symbol	node -> _scriptPre -> _done		3113207						
ANR	3113538	Symbol	DEBUG_VERBOSE		3113207						
ANR	3113539	Symbol	node -> retval		3113207						
ANR	3113540	Symbol	_nfsLogIsError		3113207						
ANR	3113541	Symbol	NULL		3113207						
ANR	3113542	Symbol	node -> GetJobName		3113207						
ANR	3113543	Symbol	GetIndexID		3113207						
ANR	3113544	Symbol	node -> retry_abort_val		3113207						
ANR	3113545	Symbol	Job :: STATUS_ERROR		3113207						
ANR	3113546	Symbol	false		3113207						
ANR	3113547	Symbol	_defaultNodeLog		3113207						
ANR	3113548	Symbol	node -> GetRetryMax		3113207						
ANR	3113549	Symbol	CONDORLOG		3113207						
ANR	3113550	Symbol	node -> _scriptPre		3113207						
ANR	3113551	Symbol	logsource		3113207						
ANR	3113552	Symbol	_defaultCondorId		3113207						
ANR	3113553	Symbol	node -> error_text		3113207						
ANR	3113554	Symbol	node		3113207						
ANR	3113555	Symbol	node -> _Status		3113207						
ANR	3113556	Symbol	* * node		3113207						
ANR	3113557	Symbol	node -> GetRetries		3113207						
ANR	3113558	Symbol	_numNodesFailed		3113207						
ANR	3113559	Symbol	true		3113207						
ANR	3113560	Symbol	GetEventIDHash		3113207						
ANR	3113561	Symbol	_storkLogRdr		3113207						
ANR	3113562	Symbol	* node -> _scriptPre		3113207						
ANR	3113563	Symbol	node -> _CondorID		3113207						
ANR	3113564	Function	Dag :: DFSVisit	2286:0:70266:70799							
ANR	3113565	FunctionDef	Dag :: DFSVisit (Job * job)		3113564	0					
ANR	3113566	CompoundStatement		2288:0:70298:70799	3113564	0					
ANR	3113567	IfStatement	if ( job == NULL || job -> _visited )		3113564	0					
ANR	3113568	Condition	job == NULL || job -> _visited	2290:5:70352:70377	3113564	0	True				
ANR	3113569	OrExpression	job == NULL || job -> _visited		3113564	0		||			
ANR	3113570	EqualityExpression	job == NULL		3113564	0		==			
ANR	3113571	Identifier	job		3113564	0					
ANR	3113572	Identifier	NULL		3113564	1					
ANR	3113573	PtrMemberAccess	job -> _visited		3113564	1					
ANR	3113574	Identifier	job		3113564	0					
ANR	3113575	Identifier	_visited		3113564	1					
ANR	3113576	ReturnStatement	return ;	2291:2:70382:70388	3113564	1	True				
ANR	3113577	ExpressionStatement	job -> _visited = true	2294:1:70437:70457	3113564	1	True				
ANR	3113578	AssignmentExpression	job -> _visited = true		3113564	0		=			
ANR	3113579	PtrMemberAccess	job -> _visited		3113564	0					
ANR	3113580	Identifier	job		3113564	0					
ANR	3113581	Identifier	_visited		3113564	1					
ANR	3113582	Identifier	true		3113564	1					
ANR	3113583	IdentifierDeclStatement	set < JobID_t > & children = job -> GetQueueRef ( Job :: Q_CHILDREN ) ;	2297:1:70499:70558	3113564	2	True				
ANR	3113584	IdentifierDecl	& children = job -> GetQueueRef ( Job :: Q_CHILDREN )		3113564	0					
ANR	3113585	IdentifierDeclType	set < JobID_t > &		3113564	0					
ANR	3113586	Identifier	children		3113564	1					
ANR	3113587	AssignmentExpression	& children = job -> GetQueueRef ( Job :: Q_CHILDREN )		3113564	2		=			
ANR	3113588	Identifier	children		3113564	0					
ANR	3113589	CallExpression	job -> GetQueueRef ( Job :: Q_CHILDREN )		3113564	1					
ANR	3113590	Callee	job -> GetQueueRef		3113564	0					
ANR	3113591	PtrMemberAccess	job -> GetQueueRef		3113564	0					
ANR	3113592	Identifier	job		3113564	0					
ANR	3113593	Identifier	GetQueueRef		3113564	1					
ANR	3113594	ArgumentList	Job :: Q_CHILDREN		3113564	1					
ANR	3113595	Argument	Job :: Q_CHILDREN		3113564	0					
ANR	3113596	Identifier	Job :: Q_CHILDREN		3113564	0					
ANR	3113597	IdentifierDeclStatement	set < JobID_t > :: const_iterator child_itr ;	2298:1:70561:70599	3113564	3	True				
ANR	3113598	IdentifierDecl	child_itr		3113564	0					
ANR	3113599	IdentifierDeclType	set < JobID_t > :: const_iterator		3113564	0					
ANR	3113600	Identifier	child_itr		3113564	1					
ANR	3113601	ForStatement	for ( child_itr = children . begin ( ) ; child_itr != children . end ( ) ; child_itr ++ )		3113564	4					
ANR	3113602	ForInit	child_itr = children . begin ( ) ;	2300:6:70608:70636	3113564	0	True				
ANR	3113603	AssignmentExpression	child_itr = children . begin ( )		3113564	0		=			
ANR	3113604	Identifier	child_itr		3113564	0					
ANR	3113605	CallExpression	children . begin ( )		3113564	1					
ANR	3113606	Callee	children . begin		3113564	0					
ANR	3113607	MemberAccess	children . begin		3113564	0					
ANR	3113608	Identifier	children		3113564	0					
ANR	3113609	Identifier	begin		3113564	1					
ANR	3113610	ArgumentList			3113564	1					
ANR	3113611	Condition	child_itr != children . end ( )	2300:36:70638:70664	3113564	1	True				
ANR	3113612	EqualityExpression	child_itr != children . end ( )		3113564	0		!=			
ANR	3113613	Identifier	child_itr		3113564	0					
ANR	3113614	CallExpression	children . end ( )		3113564	1					
ANR	3113615	Callee	children . end		3113564	0					
ANR	3113616	MemberAccess	children . end		3113564	0					
ANR	3113617	Identifier	children		3113564	0					
ANR	3113618	Identifier	end		3113564	1					
ANR	3113619	ArgumentList			3113564	1					
ANR	3113620	PostIncDecOperationExpression	child_itr ++	2300:65:70667:70677	3113564	2	True				
ANR	3113621	Identifier	child_itr		3113564	0					
ANR	3113622	IncDec	++		3113564	1					
ANR	3113623	CompoundStatement		15:2:386:430	3113564	3					
ANR	3113624	IdentifierDeclStatement	Job * child = FindNodeByNodeID ( * child_itr ) ;	2302:2:70685:70729	3113564	0	True				
ANR	3113625	IdentifierDecl	* child = FindNodeByNodeID ( * child_itr )		3113564	0					
ANR	3113626	IdentifierDeclType	Job *		3113564	0					
ANR	3113627	Identifier	child		3113564	1					
ANR	3113628	AssignmentExpression	* child = FindNodeByNodeID ( * child_itr )		3113564	2		=			
ANR	3113629	Identifier	child		3113564	0					
ANR	3113630	CallExpression	FindNodeByNodeID ( * child_itr )		3113564	1					
ANR	3113631	Callee	FindNodeByNodeID		3113564	0					
ANR	3113632	Identifier	FindNodeByNodeID		3113564	0					
ANR	3113633	ArgumentList	* child_itr		3113564	1					
ANR	3113634	Argument	* child_itr		3113564	0					
ANR	3113635	UnaryOperationExpression	* child_itr		3113564	0					
ANR	3113636	UnaryOperator	*		3113564	0					
ANR	3113637	Identifier	child_itr		3113564	1					
ANR	3113638	ExpressionStatement	DFSVisit ( child )	2303:2:70733:70749	3113564	1	True				
ANR	3113639	CallExpression	DFSVisit ( child )		3113564	0					
ANR	3113640	Callee	DFSVisit		3113564	0					
ANR	3113641	Identifier	DFSVisit		3113564	0					
ANR	3113642	ArgumentList	child		3113564	1					
ANR	3113643	Argument	child		3113564	0					
ANR	3113644	Identifier	child		3113564	0					
ANR	3113645	ExpressionStatement	DFS_ORDER ++	2306:1:70757:70768	3113564	5	True				
ANR	3113646	PostIncDecOperationExpression	DFS_ORDER ++		3113564	0					
ANR	3113647	Identifier	DFS_ORDER		3113564	0					
ANR	3113648	IncDec	++		3113564	1					
ANR	3113649	ExpressionStatement	job -> _dfsOrder = DFS_ORDER	2307:1:70771:70797	3113564	6	True				
ANR	3113650	AssignmentExpression	job -> _dfsOrder = DFS_ORDER		3113564	0		=			
ANR	3113651	PtrMemberAccess	job -> _dfsOrder		3113564	0					
ANR	3113652	Identifier	job		3113564	0					
ANR	3113653	Identifier	_dfsOrder		3113564	1					
ANR	3113654	Identifier	DFS_ORDER		3113564	1					
ANR	3113655	ReturnType	void		3113564	1					
ANR	3113656	Identifier	Dag :: DFSVisit		3113564	2					
ANR	3113657	ParameterList	Job * job		3113564	3					
ANR	3113658	Parameter	Job * job	2287:15:70287:70295	3113564	0	True				
ANR	3113659	ParameterType	Job *		3113564	0					
ANR	3113660	Identifier	job		3113564	1					
ANR	3113661	CFGEntryNode	ENTRY		3113564		True				
ANR	3113662	CFGExitNode	EXIT		3113564		True				
ANR	3113663	Symbol	DFS_ORDER		3113564						
ANR	3113664	Symbol	Job :: Q_CHILDREN		3113564						
ANR	3113665	Symbol	* child_itr		3113564						
ANR	3113666	Symbol	NULL		3113564						
ANR	3113667	Symbol	* job		3113564						
ANR	3113668	Symbol	children . begin		3113564						
ANR	3113669	Symbol	job -> _dfsOrder		3113564						
ANR	3113670	Symbol	children . end		3113564						
ANR	3113671	Symbol	FindNodeByNodeID		3113564						
ANR	3113672	Symbol	children		3113564						
ANR	3113673	Symbol	job -> GetQueueRef		3113564						
ANR	3113674	Symbol	true		3113564						
ANR	3113675	Symbol	job -> _visited		3113564						
ANR	3113676	Symbol	job		3113564						
ANR	3113677	Symbol	child_itr		3113564						
ANR	3113678	Symbol	child		3113564						
ANR	3113679	Function	Dag :: isCycle	2312:0:70921:71928							
ANR	3113680	FunctionDef	Dag :: isCycle ()		3113679	0					
ANR	3113681	CompoundStatement		2314:0:70943:71928	3113679	0					
ANR	3113682	IdentifierDeclStatement	bool cycle = false ;	2315:1:70946:70964	3113679	0	True				
ANR	3113683	IdentifierDecl	cycle = false		3113679	0					
ANR	3113684	IdentifierDeclType	bool		3113679	0					
ANR	3113685	Identifier	cycle		3113679	1					
ANR	3113686	AssignmentExpression	cycle = false		3113679	2		=			
ANR	3113687	Identifier	false		3113679	0					
ANR	3113688	Identifier	false		3113679	1					
ANR	3113689	IdentifierDeclStatement	Job * job ;	2316:1:70968:70977	3113679	1	True				
ANR	3113690	IdentifierDecl	* job		3113679	0					
ANR	3113691	IdentifierDeclType	Job *		3113679	0					
ANR	3113692	Identifier	job		3113679	1					
ANR	3113693	IdentifierDeclStatement	ListIterator < Job > joblist ( _jobs ) ;	2317:1:70980:71014	3113679	2	True				
ANR	3113694	IdentifierDecl	joblist ( _jobs )		3113679	0					
ANR	3113695	IdentifierDeclType	ListIterator < Job >		3113679	0					
ANR	3113696	Identifier	joblist		3113679	1					
ANR	3113697	Identifier	_jobs		3113679	2					
ANR	3113698	IdentifierDeclStatement	SimpleListIterator < JobID_t > child_list ;	2318:1:71017:71056	3113679	3	True				
ANR	3113699	IdentifierDecl	child_list		3113679	0					
ANR	3113700	IdentifierDeclType	SimpleListIterator < JobID_t >		3113679	0					
ANR	3113701	Identifier	child_list		3113679	1					
ANR	3113702	ExpressionStatement	DFS_ORDER = 0	2321:1:71117:71130	3113679	4	True				
ANR	3113703	AssignmentExpression	DFS_ORDER = 0		3113679	0		=			
ANR	3113704	Identifier	DFS_ORDER		3113679	0					
ANR	3113705	PrimaryExpression	0		3113679	1					
ANR	3113706	ExpressionStatement	joblist . ToBeforeFirst ( )	2324:1:71178:71201	3113679	5	True				
ANR	3113707	CallExpression	joblist . ToBeforeFirst ( )		3113679	0					
ANR	3113708	Callee	joblist . ToBeforeFirst		3113679	0					
ANR	3113709	MemberAccess	joblist . ToBeforeFirst		3113679	0					
ANR	3113710	Identifier	joblist		3113679	0					
ANR	3113711	Identifier	ToBeforeFirst		3113679	1					
ANR	3113712	ArgumentList			3113679	1					
ANR	3113713	WhileStatement	while ( joblist . Next ( job ) )		3113679	6					
ANR	3113714	Condition	joblist . Next ( job )	2325:8:71212:71228	3113679	0	True				
ANR	3113715	CallExpression	joblist . Next ( job )		3113679	0					
ANR	3113716	Callee	joblist . Next		3113679	0					
ANR	3113717	MemberAccess	joblist . Next		3113679	0					
ANR	3113718	Identifier	joblist		3113679	0					
ANR	3113719	Identifier	Next		3113679	1					
ANR	3113720	ArgumentList	job		3113679	1					
ANR	3113721	Argument	job		3113679	0					
ANR	3113722	Identifier	job		3113679	0					
ANR	3113723	CompoundStatement		13:1:288:288	3113679	1					
ANR	3113724	IfStatement	if ( ! job -> _visited && job -> GetQueueRef ( Job :: Q_PARENTS ) . size ( ) == 0 )		3113679	0					
ANR	3113725	Condition	! job -> _visited && job -> GetQueueRef ( Job :: Q_PARENTS ) . size ( ) == 0	2327:8:71242:71304	3113679	0	True				
ANR	3113726	AndExpression	! job -> _visited && job -> GetQueueRef ( Job :: Q_PARENTS ) . size ( ) == 0		3113679	0		&&			
ANR	3113727	UnaryOperationExpression	! job -> _visited		3113679	0					
ANR	3113728	UnaryOperator	!		3113679	0					
ANR	3113729	PtrMemberAccess	job -> _visited		3113679	1					
ANR	3113730	Identifier	job		3113679	0					
ANR	3113731	Identifier	_visited		3113679	1					
ANR	3113732	EqualityExpression	job -> GetQueueRef ( Job :: Q_PARENTS ) . size ( ) == 0		3113679	1		==			
ANR	3113733	CallExpression	job -> GetQueueRef ( Job :: Q_PARENTS ) . size ( )		3113679	0					
ANR	3113734	Callee	job -> GetQueueRef ( Job :: Q_PARENTS ) . size		3113679	0					
ANR	3113735	MemberAccess	job -> GetQueueRef ( Job :: Q_PARENTS ) . size		3113679	0					
ANR	3113736	CallExpression	job -> GetQueueRef ( Job :: Q_PARENTS )		3113679	0					
ANR	3113737	Callee	job -> GetQueueRef		3113679	0					
ANR	3113738	PtrMemberAccess	job -> GetQueueRef		3113679	0					
ANR	3113739	Identifier	job		3113679	0					
ANR	3113740	Identifier	GetQueueRef		3113679	1					
ANR	3113741	ArgumentList	Job :: Q_PARENTS		3113679	1					
ANR	3113742	Argument	Job :: Q_PARENTS		3113679	0					
ANR	3113743	Identifier	Job :: Q_PARENTS		3113679	0					
ANR	3113744	Identifier	size		3113679	1					
ANR	3113745	ArgumentList			3113679	1					
ANR	3113746	PrimaryExpression	0		3113679	1					
ANR	3113747	ExpressionStatement	DFSVisit ( job )	2329:3:71310:71324	3113679	1	True				
ANR	3113748	CallExpression	DFSVisit ( job )		3113679	0					
ANR	3113749	Callee	DFSVisit		3113679	0					
ANR	3113750	Identifier	DFSVisit		3113679	0					
ANR	3113751	ArgumentList	job		3113679	1					
ANR	3113752	Argument	job		3113679	0					
ANR	3113753	Identifier	job		3113679	0					
ANR	3113754	ExpressionStatement	joblist . ToBeforeFirst ( )	2333:1:71349:71372	3113679	7	True				
ANR	3113755	CallExpression	joblist . ToBeforeFirst ( )		3113679	0					
ANR	3113756	Callee	joblist . ToBeforeFirst		3113679	0					
ANR	3113757	MemberAccess	joblist . ToBeforeFirst		3113679	0					
ANR	3113758	Identifier	joblist		3113679	0					
ANR	3113759	Identifier	ToBeforeFirst		3113679	1					
ANR	3113760	ArgumentList			3113679	1					
ANR	3113761	WhileStatement	while ( joblist . Next ( job ) )		3113679	8					
ANR	3113762	Condition	joblist . Next ( job )	2334:8:71383:71399	3113679	0	True				
ANR	3113763	CallExpression	joblist . Next ( job )		3113679	0					
ANR	3113764	Callee	joblist . Next		3113679	0					
ANR	3113765	MemberAccess	joblist . Next		3113679	0					
ANR	3113766	Identifier	joblist		3113679	0					
ANR	3113767	Identifier	Next		3113679	1					
ANR	3113768	ArgumentList	job		3113679	1					
ANR	3113769	Argument	job		3113679	0					
ANR	3113770	Identifier	job		3113679	0					
ANR	3113771	CompoundStatement		25:2:522:554	3113679	1					
ANR	3113772	IdentifierDeclStatement	set < JobID_t > & cset = job -> GetQueueRef ( Job :: Q_CHILDREN ) ;	2337:2:71408:71462	3113679	0	True				
ANR	3113773	IdentifierDecl	& cset = job -> GetQueueRef ( Job :: Q_CHILDREN )		3113679	0					
ANR	3113774	IdentifierDeclType	set < JobID_t > &		3113679	0					
ANR	3113775	Identifier	cset		3113679	1					
ANR	3113776	AssignmentExpression	& cset = job -> GetQueueRef ( Job :: Q_CHILDREN )		3113679	2		=			
ANR	3113777	Identifier	cset		3113679	0					
ANR	3113778	CallExpression	job -> GetQueueRef ( Job :: Q_CHILDREN )		3113679	1					
ANR	3113779	Callee	job -> GetQueueRef		3113679	0					
ANR	3113780	PtrMemberAccess	job -> GetQueueRef		3113679	0					
ANR	3113781	Identifier	job		3113679	0					
ANR	3113782	Identifier	GetQueueRef		3113679	1					
ANR	3113783	ArgumentList	Job :: Q_CHILDREN		3113679	1					
ANR	3113784	Argument	Job :: Q_CHILDREN		3113679	0					
ANR	3113785	Identifier	Job :: Q_CHILDREN		3113679	0					
ANR	3113786	IdentifierDeclStatement	set < JobID_t > :: const_iterator cit ;	2338:2:71466:71498	3113679	1	True				
ANR	3113787	IdentifierDecl	cit		3113679	0					
ANR	3113788	IdentifierDeclType	set < JobID_t > :: const_iterator		3113679	0					
ANR	3113789	Identifier	cit		3113679	1					
ANR	3113790	ForStatement	for ( cit = cset . begin ( ) ; cit != cset . end ( ) ; cit ++ )		3113679	2					
ANR	3113791	ForInit	cit = cset . begin ( ) ;	2340:6:71507:71525	3113679	0	True				
ANR	3113792	AssignmentExpression	cit = cset . begin ( )		3113679	0		=			
ANR	3113793	Identifier	cit		3113679	0					
ANR	3113794	CallExpression	cset . begin ( )		3113679	1					
ANR	3113795	Callee	cset . begin		3113679	0					
ANR	3113796	MemberAccess	cset . begin		3113679	0					
ANR	3113797	Identifier	cset		3113679	0					
ANR	3113798	Identifier	begin		3113679	1					
ANR	3113799	ArgumentList			3113679	1					
ANR	3113800	Condition	cit != cset . end ( )	2340:26:71527:71543	3113679	1	True				
ANR	3113801	EqualityExpression	cit != cset . end ( )		3113679	0		!=			
ANR	3113802	Identifier	cit		3113679	0					
ANR	3113803	CallExpression	cset . end ( )		3113679	1					
ANR	3113804	Callee	cset . end		3113679	0					
ANR	3113805	MemberAccess	cset . end		3113679	0					
ANR	3113806	Identifier	cset		3113679	0					
ANR	3113807	Identifier	end		3113679	1					
ANR	3113808	ArgumentList			3113679	1					
ANR	3113809	PostIncDecOperationExpression	cit ++	2340:45:71546:71550	3113679	2	True				
ANR	3113810	Identifier	cit		3113679	0					
ANR	3113811	IncDec	++		3113679	1					
ANR	3113812	CompoundStatement		28:3:614:652	3113679	3					
ANR	3113813	IdentifierDeclStatement	Job * child = FindNodeByNodeID ( * cit ) ;	2341:3:71558:71596	3113679	0	True				
ANR	3113814	IdentifierDecl	* child = FindNodeByNodeID ( * cit )		3113679	0					
ANR	3113815	IdentifierDeclType	Job *		3113679	0					
ANR	3113816	Identifier	child		3113679	1					
ANR	3113817	AssignmentExpression	* child = FindNodeByNodeID ( * cit )		3113679	2		=			
ANR	3113818	Identifier	child		3113679	0					
ANR	3113819	CallExpression	FindNodeByNodeID ( * cit )		3113679	1					
ANR	3113820	Callee	FindNodeByNodeID		3113679	0					
ANR	3113821	Identifier	FindNodeByNodeID		3113679	0					
ANR	3113822	ArgumentList	* cit		3113679	1					
ANR	3113823	Argument	* cit		3113679	0					
ANR	3113824	UnaryOperationExpression	* cit		3113679	0					
ANR	3113825	UnaryOperator	*		3113679	0					
ANR	3113826	Identifier	cit		3113679	1					
ANR	3113827	IfStatement	if ( child -> _dfsOrder >= job -> _dfsOrder )		3113679	1					
ANR	3113828	Condition	child -> _dfsOrder >= job -> _dfsOrder	2344:7:71664:71697	3113679	0	True				
ANR	3113829	RelationalExpression	child -> _dfsOrder >= job -> _dfsOrder		3113679	0		>=			
ANR	3113830	PtrMemberAccess	child -> _dfsOrder		3113679	0					
ANR	3113831	Identifier	child		3113679	0					
ANR	3113832	Identifier	_dfsOrder		3113679	1					
ANR	3113833	PtrMemberAccess	job -> _dfsOrder		3113679	1					
ANR	3113834	Identifier	job		3113679	0					
ANR	3113835	Identifier	_dfsOrder		3113679	1					
ANR	3113836	CompoundStatement		31:43:756:756	3113679	1					
ANR	3113837	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""Cycle in the graph possibly involving jobs %s and %s\\n"" , job -> GetJobName ( ) , child -> GetJobName ( ) )"	2346:4:71727:71870	3113679	0	True				
ANR	3113838	CallExpression	"debug_printf ( DEBUG_QUIET , ""Cycle in the graph possibly involving jobs %s and %s\\n"" , job -> GetJobName ( ) , child -> GetJobName ( ) )"		3113679	0					
ANR	3113839	Callee	debug_printf		3113679	0					
ANR	3113840	Identifier	debug_printf		3113679	0					
ANR	3113841	ArgumentList	DEBUG_QUIET		3113679	1					
ANR	3113842	Argument	DEBUG_QUIET		3113679	0					
ANR	3113843	Identifier	DEBUG_QUIET		3113679	0					
ANR	3113844	Argument	"""Cycle in the graph possibly involving jobs %s and %s\\n"""		3113679	1					
ANR	3113845	PrimaryExpression	"""Cycle in the graph possibly involving jobs %s and %s\\n"""		3113679	0					
ANR	3113846	Argument	job -> GetJobName ( )		3113679	2					
ANR	3113847	CallExpression	job -> GetJobName ( )		3113679	0					
ANR	3113848	Callee	job -> GetJobName		3113679	0					
ANR	3113849	PtrMemberAccess	job -> GetJobName		3113679	0					
ANR	3113850	Identifier	job		3113679	0					
ANR	3113851	Identifier	GetJobName		3113679	1					
ANR	3113852	ArgumentList			3113679	1					
ANR	3113853	Argument	child -> GetJobName ( )		3113679	3					
ANR	3113854	CallExpression	child -> GetJobName ( )		3113679	0					
ANR	3113855	Callee	child -> GetJobName		3113679	0					
ANR	3113856	PtrMemberAccess	child -> GetJobName		3113679	0					
ANR	3113857	Identifier	child		3113679	0					
ANR	3113858	Identifier	GetJobName		3113679	1					
ANR	3113859	ArgumentList			3113679	1					
ANR	3113860	ExpressionStatement	cycle = true	2350:4:71887:71899	3113679	1	True				
ANR	3113861	AssignmentExpression	cycle = true		3113679	0		=			
ANR	3113862	Identifier	cycle		3113679	0					
ANR	3113863	Identifier	true		3113679	1					
ANR	3113864	ReturnStatement	return cycle ;	2354:1:71914:71926	3113679	9	True				
ANR	3113865	Identifier	cycle		3113679	0					
ANR	3113866	ReturnType	bool		3113679	1					
ANR	3113867	Identifier	Dag :: isCycle		3113679	2					
ANR	3113868	ParameterList			3113679	3					
ANR	3113869	CFGEntryNode	ENTRY		3113679		True				
ANR	3113870	CFGExitNode	EXIT		3113679		True				
ANR	3113871	Symbol	DFS_ORDER		3113679						
ANR	3113872	Symbol	Job :: Q_CHILDREN		3113679						
ANR	3113873	Symbol	child -> GetJobName		3113679						
ANR	3113874	Symbol	* cit		3113679						
ANR	3113875	Symbol	cycle		3113679						
ANR	3113876	Symbol	joblist		3113679						
ANR	3113877	Symbol	cit		3113679						
ANR	3113878	Symbol	DEBUG_QUIET		3113679						
ANR	3113879	Symbol	child -> _dfsOrder		3113679						
ANR	3113880	Symbol	job -> _visited		3113679						
ANR	3113881	Symbol	joblist . Next		3113679						
ANR	3113882	Symbol	* child		3113679						
ANR	3113883	Symbol	child_list		3113679						
ANR	3113884	Symbol	* job		3113679						
ANR	3113885	Symbol	job -> GetJobName		3113679						
ANR	3113886	Symbol	false		3113679						
ANR	3113887	Symbol	cset . begin		3113679						
ANR	3113888	Symbol	cset . end		3113679						
ANR	3113889	Symbol	job -> _dfsOrder		3113679						
ANR	3113890	Symbol	cset		3113679						
ANR	3113891	Symbol	FindNodeByNodeID		3113679						
ANR	3113892	Symbol	Job :: Q_PARENTS		3113679						
ANR	3113893	Symbol	job -> GetQueueRef		3113679						
ANR	3113894	Symbol	true		3113679						
ANR	3113895	Symbol	job -> GetQueueRef ( Job :: Q_PARENTS ) . size		3113679						
ANR	3113896	Symbol	job		3113679						
ANR	3113897	Symbol	child		3113679						
ANR	3113898	Function	Dag :: CheckForDagAbort	2358:0:72007:72431							
ANR	3113899	FunctionDef	"Dag :: CheckForDagAbort (Job * job , const char * type)"		3113898	0					
ANR	3113900	CompoundStatement		2360:0:72062:72431	3113898	0					
ANR	3113901	IfStatement	if ( job -> have_abort_dag_val && job -> retval == job -> abort_dag_val )		3113898	0					
ANR	3113902	Condition	job -> have_abort_dag_val && job -> retval == job -> abort_dag_val	2361:6:72070:72133	3113898	0	True				
ANR	3113903	AndExpression	job -> have_abort_dag_val && job -> retval == job -> abort_dag_val		3113898	0		&&			
ANR	3113904	PtrMemberAccess	job -> have_abort_dag_val		3113898	0					
ANR	3113905	Identifier	job		3113898	0					
ANR	3113906	Identifier	have_abort_dag_val		3113898	1					
ANR	3113907	EqualityExpression	job -> retval == job -> abort_dag_val		3113898	1		==			
ANR	3113908	PtrMemberAccess	job -> retval		3113898	0					
ANR	3113909	Identifier	job		3113898	0					
ANR	3113910	Identifier	retval		3113898	1					
ANR	3113911	PtrMemberAccess	job -> abort_dag_val		3113898	1					
ANR	3113912	Identifier	job		3113898	0					
ANR	3113913	Identifier	abort_dag_val		3113898	1					
ANR	3113914	CompoundStatement		3:40:74:74	3113898	1					
ANR	3113915	Statement	debug_printf	2363:2:72141:72152	3113898	0	True				
ANR	3113916	Statement	(	2363:14:72153:72153	3113898	1	True				
ANR	3113917	Statement	DEBUG_QUIET	2363:16:72155:72165	3113898	2	True				
ANR	3113918	Statement	","	2363:27:72166:72166	3113898	3	True				
ANR	3113919	Statement	"""Aborting DAG because we got """	2363:29:72168:72197	3113898	4	True				
ANR	3113920	Statement	"""the ABORT exit value from a %s\\n"""	2364:4:72203:72236	3113898	5	True				
ANR	3113921	Statement	","	2364:38:72237:72237	3113898	6	True				
ANR	3113922	Statement	type	2364:40:72239:72242	3113898	7	True				
ANR	3113923	Statement	)	2364:44:72243:72243	3113898	8	True				
ANR	3113924	ExpressionStatement		2364:45:72244:72244	3113898	9	True				
ANR	3113925	IfStatement	if ( job -> have_abort_dag_return_val )		3113898	10					
ANR	3113926	Condition	job -> have_abort_dag_return_val	2365:7:72253:72282	3113898	0	True				
ANR	3113927	PtrMemberAccess	job -> have_abort_dag_return_val		3113898	0					
ANR	3113928	Identifier	job		3113898	0					
ANR	3113929	Identifier	have_abort_dag_return_val		3113898	1					
ANR	3113930	CompoundStatement		6:40:223:223	3113898	1					
ANR	3113931	ExpressionStatement	main_shutdown_rescue ( job -> abort_dag_return_val )	2366:3:72291:72340	3113898	0	True				
ANR	3113932	CallExpression	main_shutdown_rescue ( job -> abort_dag_return_val )		3113898	0					
ANR	3113933	Callee	main_shutdown_rescue		3113898	0					
ANR	3113934	Identifier	main_shutdown_rescue		3113898	0					
ANR	3113935	ArgumentList	job -> abort_dag_return_val		3113898	1					
ANR	3113936	Argument	job -> abort_dag_return_val		3113898	0					
ANR	3113937	PtrMemberAccess	job -> abort_dag_return_val		3113898	0					
ANR	3113938	Identifier	job		3113898	0					
ANR	3113939	Identifier	abort_dag_return_val		3113898	1					
ANR	3113940	ElseStatement	else		3113898	0					
ANR	3113941	CompoundStatement		8:9:288:288	3113898	0					
ANR	3113942	ExpressionStatement	main_shutdown_rescue ( job -> retval )	2368:3:72356:72391	3113898	0	True				
ANR	3113943	CallExpression	main_shutdown_rescue ( job -> retval )		3113898	0					
ANR	3113944	Callee	main_shutdown_rescue		3113898	0					
ANR	3113945	Identifier	main_shutdown_rescue		3113898	0					
ANR	3113946	ArgumentList	job -> retval		3113898	1					
ANR	3113947	Argument	job -> retval		3113898	0					
ANR	3113948	PtrMemberAccess	job -> retval		3113898	0					
ANR	3113949	Identifier	job		3113898	0					
ANR	3113950	Identifier	retval		3113898	1					
ANR	3113951	ReturnStatement	return true ;	2370:2:72399:72410	3113898	11	True				
ANR	3113952	Identifier	true		3113898	0					
ANR	3113953	ReturnStatement	return false ;	2373:1:72417:72429	3113898	1	True				
ANR	3113954	Identifier	false		3113898	0					
ANR	3113955	ReturnType	bool		3113898	1					
ANR	3113956	Identifier	Dag :: CheckForDagAbort		3113898	2					
ANR	3113957	ParameterList	"Job * job , const char * type"		3113898	3					
ANR	3113958	Parameter	Job * job	2359:22:72034:72041	3113898	0	True				
ANR	3113959	ParameterType	Job *		3113898	0					
ANR	3113960	Identifier	job		3113898	1					
ANR	3113961	Parameter	const char * type	2359:32:72044:72059	3113898	1	True				
ANR	3113962	ParameterType	const char *		3113898	0					
ANR	3113963	Identifier	type		3113898	1					
ANR	3113964	CFGEntryNode	ENTRY		3113898		True				
ANR	3113965	CFGExitNode	EXIT		3113898		True				
ANR	3113966	Symbol	job -> have_abort_dag_val		3113898						
ANR	3113967	Symbol	job -> have_abort_dag_return_val		3113898						
ANR	3113968	Symbol	job -> abort_dag_return_val		3113898						
ANR	3113969	Symbol	* job		3113898						
ANR	3113970	Symbol	true		3113898						
ANR	3113971	Symbol	false		3113898						
ANR	3113972	Symbol	job -> retval		3113898						
ANR	3113973	Symbol	job		3113898						
ANR	3113974	Symbol	type		3113898						
ANR	3113975	Symbol	job -> abort_dag_val		3113898						
ANR	3113976	Function	Dag :: ParentListString	2378:0:72511:73045							
ANR	3113977	FunctionDef	"Dag :: ParentListString (Job * node , const char delim)"		3113976	0					
ANR	3113978	CompoundStatement		2380:0:72585:73045	3113976	0					
ANR	3113979	IdentifierDeclStatement	Job * parent ;	2381:1:72588:72599	3113976	0	True				
ANR	3113980	IdentifierDecl	* parent		3113976	0					
ANR	3113981	IdentifierDeclType	Job *		3113976	0					
ANR	3113982	Identifier	parent		3113976	1					
ANR	3113983	IdentifierDeclStatement	const char * parent_name = NULL ;	2382:1:72602:72632	3113976	1	True				
ANR	3113984	IdentifierDecl	* parent_name = NULL		3113976	0					
ANR	3113985	IdentifierDeclType	const char *		3113976	0					
ANR	3113986	Identifier	parent_name		3113976	1					
ANR	3113987	AssignmentExpression	* parent_name = NULL		3113976	2		=			
ANR	3113988	Identifier	NULL		3113976	0					
ANR	3113989	Identifier	NULL		3113976	1					
ANR	3113990	IdentifierDeclStatement	MyString parents_str ;	2383:1:72635:72655	3113976	2	True				
ANR	3113991	IdentifierDecl	parents_str		3113976	0					
ANR	3113992	IdentifierDeclType	MyString		3113976	0					
ANR	3113993	Identifier	parents_str		3113976	1					
ANR	3113994	IdentifierDeclStatement	set < JobID_t > & parent_list = node -> GetQueueRef ( Job :: Q_PARENTS ) ;	2385:1:72659:72722	3113976	3	True				
ANR	3113995	IdentifierDecl	& parent_list = node -> GetQueueRef ( Job :: Q_PARENTS )		3113976	0					
ANR	3113996	IdentifierDeclType	set < JobID_t > &		3113976	0					
ANR	3113997	Identifier	parent_list		3113976	1					
ANR	3113998	AssignmentExpression	& parent_list = node -> GetQueueRef ( Job :: Q_PARENTS )		3113976	2		=			
ANR	3113999	Identifier	parent_list		3113976	0					
ANR	3114000	CallExpression	node -> GetQueueRef ( Job :: Q_PARENTS )		3113976	1					
ANR	3114001	Callee	node -> GetQueueRef		3113976	0					
ANR	3114002	PtrMemberAccess	node -> GetQueueRef		3113976	0					
ANR	3114003	Identifier	node		3113976	0					
ANR	3114004	Identifier	GetQueueRef		3113976	1					
ANR	3114005	ArgumentList	Job :: Q_PARENTS		3113976	1					
ANR	3114006	Argument	Job :: Q_PARENTS		3113976	0					
ANR	3114007	Identifier	Job :: Q_PARENTS		3113976	0					
ANR	3114008	IdentifierDeclStatement	set < JobID_t > :: const_iterator pit ;	2386:1:72725:72757	3113976	4	True				
ANR	3114009	IdentifierDecl	pit		3113976	0					
ANR	3114010	IdentifierDeclType	set < JobID_t > :: const_iterator		3113976	0					
ANR	3114011	Identifier	pit		3113976	1					
ANR	3114012	ForStatement	for ( pit = parent_list . begin ( ) ; pit != parent_list . end ( ) ; pit ++ )		3113976	5					
ANR	3114013	ForInit	pit = parent_list . begin ( ) ;	2388:6:72766:72791	3113976	0	True				
ANR	3114014	AssignmentExpression	pit = parent_list . begin ( )		3113976	0		=			
ANR	3114015	Identifier	pit		3113976	0					
ANR	3114016	CallExpression	parent_list . begin ( )		3113976	1					
ANR	3114017	Callee	parent_list . begin		3113976	0					
ANR	3114018	MemberAccess	parent_list . begin		3113976	0					
ANR	3114019	Identifier	parent_list		3113976	0					
ANR	3114020	Identifier	begin		3113976	1					
ANR	3114021	ArgumentList			3113976	1					
ANR	3114022	Condition	pit != parent_list . end ( )	2388:33:72793:72816	3113976	1	True				
ANR	3114023	EqualityExpression	pit != parent_list . end ( )		3113976	0		!=			
ANR	3114024	Identifier	pit		3113976	0					
ANR	3114025	CallExpression	parent_list . end ( )		3113976	1					
ANR	3114026	Callee	parent_list . end		3113976	0					
ANR	3114027	MemberAccess	parent_list . end		3113976	0					
ANR	3114028	Identifier	parent_list		3113976	0					
ANR	3114029	Identifier	end		3113976	1					
ANR	3114030	ArgumentList			3113976	1					
ANR	3114031	PostIncDecOperationExpression	pit ++	2388:59:72819:72823	3113976	2	True				
ANR	3114032	Identifier	pit		3113976	0					
ANR	3114033	IncDec	++		3113976	1					
ANR	3114034	CompoundStatement		9:66:240:240	3113976	3					
ANR	3114035	ExpressionStatement	parent = FindNodeByNodeID ( * pit )	2389:2:72830:72863	3113976	0	True				
ANR	3114036	AssignmentExpression	parent = FindNodeByNodeID ( * pit )		3113976	0		=			
ANR	3114037	Identifier	parent		3113976	0					
ANR	3114038	CallExpression	FindNodeByNodeID ( * pit )		3113976	1					
ANR	3114039	Callee	FindNodeByNodeID		3113976	0					
ANR	3114040	Identifier	FindNodeByNodeID		3113976	0					
ANR	3114041	ArgumentList	* pit		3113976	1					
ANR	3114042	Argument	* pit		3113976	0					
ANR	3114043	UnaryOperationExpression	* pit		3113976	0					
ANR	3114044	UnaryOperator	*		3113976	0					
ANR	3114045	Identifier	pit		3113976	1					
ANR	3114046	ExpressionStatement	parent_name = parent -> GetJobName ( )	2390:2:72867:72901	3113976	1	True				
ANR	3114047	AssignmentExpression	parent_name = parent -> GetJobName ( )		3113976	0		=			
ANR	3114048	Identifier	parent_name		3113976	0					
ANR	3114049	CallExpression	parent -> GetJobName ( )		3113976	1					
ANR	3114050	Callee	parent -> GetJobName		3113976	0					
ANR	3114051	PtrMemberAccess	parent -> GetJobName		3113976	0					
ANR	3114052	Identifier	parent		3113976	0					
ANR	3114053	Identifier	GetJobName		3113976	1					
ANR	3114054	ArgumentList			3113976	1					
ANR	3114055	ExpressionStatement	ASSERT ( parent_name )	2391:2:72905:72926	3113976	2	True				
ANR	3114056	CallExpression	ASSERT ( parent_name )		3113976	0					
ANR	3114057	Callee	ASSERT		3113976	0					
ANR	3114058	Identifier	ASSERT		3113976	0					
ANR	3114059	ArgumentList	parent_name		3113976	1					
ANR	3114060	Argument	parent_name		3113976	0					
ANR	3114061	Identifier	parent_name		3113976	0					
ANR	3114062	IfStatement	if ( ! parents_str . IsEmpty ( ) )		3113976	3					
ANR	3114063	Condition	! parents_str . IsEmpty ( )	2392:6:72934:72956	3113976	0	True				
ANR	3114064	UnaryOperationExpression	! parents_str . IsEmpty ( )		3113976	0					
ANR	3114065	UnaryOperator	!		3113976	0					
ANR	3114066	CallExpression	parents_str . IsEmpty ( )		3113976	1					
ANR	3114067	Callee	parents_str . IsEmpty		3113976	0					
ANR	3114068	MemberAccess	parents_str . IsEmpty		3113976	0					
ANR	3114069	Identifier	parents_str		3113976	0					
ANR	3114070	Identifier	IsEmpty		3113976	1					
ANR	3114071	ArgumentList			3113976	1					
ANR	3114072	CompoundStatement		13:32:374:374	3113976	1					
ANR	3114073	ExpressionStatement	parents_str += delim	2393:3:72965:72985	3113976	0	True				
ANR	3114074	AssignmentExpression	parents_str += delim		3113976	0		+=			
ANR	3114075	Identifier	parents_str		3113976	0					
ANR	3114076	Identifier	delim		3113976	1					
ANR	3114077	ExpressionStatement	parents_str += parent_name	2395:2:72993:73019	3113976	4	True				
ANR	3114078	AssignmentExpression	parents_str += parent_name		3113976	0		+=			
ANR	3114079	Identifier	parents_str		3113976	0					
ANR	3114080	Identifier	parent_name		3113976	1					
ANR	3114081	ReturnStatement	return parents_str ;	2397:1:73025:73043	3113976	6	True				
ANR	3114082	Identifier	parents_str		3113976	0					
ANR	3114083	ReturnType	const MyString		3113976	1					
ANR	3114084	Identifier	Dag :: ParentListString		3113976	2					
ANR	3114085	ParameterList	"Job * node , const char delim"		3113976	3					
ANR	3114086	Parameter	Job * node	2379:23:72549:72557	3113976	0	True				
ANR	3114087	ParameterType	Job *		3113976	0					
ANR	3114088	Identifier	node		3113976	1					
ANR	3114089	Parameter	const char delim	2379:34:72560:72575	3113976	1	True				
ANR	3114090	ParameterType	const char		3113976	0					
ANR	3114091	Identifier	delim		3113976	1					
ANR	3114092	CFGEntryNode	ENTRY		3113976		True				
ANR	3114093	CFGExitNode	EXIT		3113976		True				
ANR	3114094	Symbol	parent_name		3113976						
ANR	3114095	Symbol	parent		3113976						
ANR	3114096	Symbol	NULL		3113976						
ANR	3114097	Symbol	* parent		3113976						
ANR	3114098	Symbol	* pit		3113976						
ANR	3114099	Symbol	parents_str		3113976						
ANR	3114100	Symbol	parent_list		3113976						
ANR	3114101	Symbol	parent_list . end		3113976						
ANR	3114102	Symbol	node		3113976						
ANR	3114103	Symbol	node -> GetQueueRef		3113976						
ANR	3114104	Symbol	FindNodeByNodeID		3113976						
ANR	3114105	Symbol	Job :: Q_PARENTS		3113976						
ANR	3114106	Symbol	parent_list . begin		3113976						
ANR	3114107	Symbol	parents_str . IsEmpty		3113976						
ANR	3114108	Symbol	* node		3113976						
ANR	3114109	Symbol	pit		3113976						
ANR	3114110	Symbol	parent -> GetJobName		3113976						
ANR	3114111	Symbol	delim		3113976						
ANR	3114112	Function	Dag :: SetDotFileName	2414:0:73605:73737							
ANR	3114113	FunctionDef	Dag :: SetDotFileName (const char * dot_file_name)		3114112	0					
ANR	3114114	CompoundStatement		2416:0:73658:73737	3114112	0					
ANR	3114115	Statement	delete	2417:1:73661:73666	3114112	0	True				
ANR	3114116	Statement	[	2417:7:73667:73667	3114112	1	True				
ANR	3114117	Statement	]	2417:8:73668:73668	3114112	2	True				
ANR	3114118	ExpressionStatement	_dot_file_name	2417:10:73670:73684	3114112	3	True				
ANR	3114119	Identifier	_dot_file_name		3114112	0					
ANR	3114120	ExpressionStatement	_dot_file_name = strnewp ( dot_file_name )	2418:1:73687:73726	3114112	4	True				
ANR	3114121	AssignmentExpression	_dot_file_name = strnewp ( dot_file_name )		3114112	0		=			
ANR	3114122	Identifier	_dot_file_name		3114112	0					
ANR	3114123	CallExpression	strnewp ( dot_file_name )		3114112	1					
ANR	3114124	Callee	strnewp		3114112	0					
ANR	3114125	Identifier	strnewp		3114112	0					
ANR	3114126	ArgumentList	dot_file_name		3114112	1					
ANR	3114127	Argument	dot_file_name		3114112	0					
ANR	3114128	Identifier	dot_file_name		3114112	0					
ANR	3114129	ReturnStatement	return ;	2419:1:73729:73735	3114112	5	True				
ANR	3114130	ReturnType	void		3114112	1					
ANR	3114131	Identifier	Dag :: SetDotFileName		3114112	2					
ANR	3114132	ParameterList	const char * dot_file_name		3114112	3					
ANR	3114133	Parameter	const char * dot_file_name	2415:20:73631:73655	3114112	0	True				
ANR	3114134	ParameterType	const char *		3114112	0					
ANR	3114135	Identifier	dot_file_name		3114112	1					
ANR	3114136	CFGEntryNode	ENTRY		3114112		True				
ANR	3114137	CFGExitNode	EXIT		3114112		True				
ANR	3114138	Symbol	_dot_file_name		3114112						
ANR	3114139	Symbol	dot_file_name		3114112						
ANR	3114140	Symbol	strnewp		3114112						
ANR	3114141	Function	Dag :: SetDotIncludeFileName	2433:0:74325:74487							
ANR	3114142	FunctionDef	Dag :: SetDotIncludeFileName (const char * include_file_name)		3114141	0					
ANR	3114143	CompoundStatement		2435:0:74388:74487	3114141	0					
ANR	3114144	Statement	delete	2436:1:74391:74396	3114141	0	True				
ANR	3114145	Statement	[	2436:7:74397:74397	3114141	1	True				
ANR	3114146	Statement	]	2436:8:74398:74398	3114141	2	True				
ANR	3114147	ExpressionStatement	_dot_include_file_name	2436:10:74400:74422	3114141	3	True				
ANR	3114148	Identifier	_dot_include_file_name		3114141	0					
ANR	3114149	ExpressionStatement	_dot_include_file_name = strnewp ( include_file_name )	2437:1:74425:74476	3114141	4	True				
ANR	3114150	AssignmentExpression	_dot_include_file_name = strnewp ( include_file_name )		3114141	0		=			
ANR	3114151	Identifier	_dot_include_file_name		3114141	0					
ANR	3114152	CallExpression	strnewp ( include_file_name )		3114141	1					
ANR	3114153	Callee	strnewp		3114141	0					
ANR	3114154	Identifier	strnewp		3114141	0					
ANR	3114155	ArgumentList	include_file_name		3114141	1					
ANR	3114156	Argument	include_file_name		3114141	0					
ANR	3114157	Identifier	include_file_name		3114141	0					
ANR	3114158	ReturnStatement	return ;	2438:1:74479:74485	3114141	5	True				
ANR	3114159	ReturnType	void		3114141	1					
ANR	3114160	Identifier	Dag :: SetDotIncludeFileName		3114141	2					
ANR	3114161	ParameterList	const char * include_file_name		3114141	3					
ANR	3114162	Parameter	const char * include_file_name	2434:27:74357:74385	3114141	0	True				
ANR	3114163	ParameterType	const char *		3114141	0					
ANR	3114164	Identifier	include_file_name		3114141	1					
ANR	3114165	CFGEntryNode	ENTRY		3114141		True				
ANR	3114166	CFGExitNode	EXIT		3114141		True				
ANR	3114167	Symbol	_dot_include_file_name		3114141						
ANR	3114168	Symbol	include_file_name		3114141						
ANR	3114169	Symbol	strnewp		3114141						
ANR	3114170	Function	Dag :: DumpDotFile	2450:0:74894:76293							
ANR	3114171	FunctionDef	Dag :: DumpDotFile ()		3114170	0					
ANR	3114172	CompoundStatement		2452:0:74923:76293	3114170	0					
ANR	3114173	IfStatement	if ( _dot_file_name != NULL )		3114170	0					
ANR	3114174	Condition	_dot_file_name != NULL	2453:5:74930:74951	3114170	0	True				
ANR	3114175	EqualityExpression	_dot_file_name != NULL		3114170	0		!=			
ANR	3114176	Identifier	_dot_file_name		3114170	0					
ANR	3114177	Identifier	NULL		3114170	1					
ANR	3114178	CompoundStatement		5:2:101:125	3114170	1					
ANR	3114179	IdentifierDeclStatement	MyString current_dot_file_name ;	2454:2:74958:74989	3114170	0	True				
ANR	3114180	IdentifierDecl	current_dot_file_name		3114170	0					
ANR	3114181	IdentifierDeclType	MyString		3114170	0					
ANR	3114182	Identifier	current_dot_file_name		3114170	1					
ANR	3114183	IdentifierDeclStatement	MyString temp_dot_file_name ;	2455:2:74993:75021	3114170	1	True				
ANR	3114184	IdentifierDecl	temp_dot_file_name		3114170	0					
ANR	3114185	IdentifierDeclType	MyString		3114170	0					
ANR	3114186	Identifier	temp_dot_file_name		3114170	1					
ANR	3114187	IdentifierDeclStatement	FILE * temp_dot_file ;	2456:2:75025:75049	3114170	2	True				
ANR	3114188	IdentifierDecl	* temp_dot_file		3114170	0					
ANR	3114189	IdentifierDeclType	FILE *		3114170	0					
ANR	3114190	Identifier	temp_dot_file		3114170	1					
ANR	3114191	ExpressionStatement	ChooseDotFileName ( current_dot_file_name )	2458:2:75054:75094	3114170	3	True				
ANR	3114192	CallExpression	ChooseDotFileName ( current_dot_file_name )		3114170	0					
ANR	3114193	Callee	ChooseDotFileName		3114170	0					
ANR	3114194	Identifier	ChooseDotFileName		3114170	0					
ANR	3114195	ArgumentList	current_dot_file_name		3114170	1					
ANR	3114196	Argument	current_dot_file_name		3114170	0					
ANR	3114197	Identifier	current_dot_file_name		3114170	0					
ANR	3114198	ExpressionStatement	"temp_dot_file_name = current_dot_file_name + "".temp"""	2460:2:75099:75151	3114170	4	True				
ANR	3114199	AssignmentExpression	"temp_dot_file_name = current_dot_file_name + "".temp"""		3114170	0		=			
ANR	3114200	Identifier	temp_dot_file_name		3114170	0					
ANR	3114201	AdditiveExpression	"current_dot_file_name + "".temp"""		3114170	1		+			
ANR	3114202	Identifier	current_dot_file_name		3114170	0					
ANR	3114203	PrimaryExpression	""".temp"""		3114170	1					
ANR	3114204	ExpressionStatement	unlink ( temp_dot_file_name . Value ( ) )	2462:2:75156:75190	3114170	5	True				
ANR	3114205	CallExpression	unlink ( temp_dot_file_name . Value ( ) )		3114170	0					
ANR	3114206	Callee	unlink		3114170	0					
ANR	3114207	Identifier	unlink		3114170	0					
ANR	3114208	ArgumentList	temp_dot_file_name . Value ( )		3114170	1					
ANR	3114209	Argument	temp_dot_file_name . Value ( )		3114170	0					
ANR	3114210	CallExpression	temp_dot_file_name . Value ( )		3114170	0					
ANR	3114211	Callee	temp_dot_file_name . Value		3114170	0					
ANR	3114212	MemberAccess	temp_dot_file_name . Value		3114170	0					
ANR	3114213	Identifier	temp_dot_file_name		3114170	0					
ANR	3114214	Identifier	Value		3114170	1					
ANR	3114215	ArgumentList			3114170	1					
ANR	3114216	ExpressionStatement	"temp_dot_file = safe_fopen_wrapper_follow ( temp_dot_file_name . Value ( ) , ""w"" )"	2463:2:75194:75268	3114170	6	True				
ANR	3114217	AssignmentExpression	"temp_dot_file = safe_fopen_wrapper_follow ( temp_dot_file_name . Value ( ) , ""w"" )"		3114170	0		=			
ANR	3114218	Identifier	temp_dot_file		3114170	0					
ANR	3114219	CallExpression	"safe_fopen_wrapper_follow ( temp_dot_file_name . Value ( ) , ""w"" )"		3114170	1					
ANR	3114220	Callee	safe_fopen_wrapper_follow		3114170	0					
ANR	3114221	Identifier	safe_fopen_wrapper_follow		3114170	0					
ANR	3114222	ArgumentList	temp_dot_file_name . Value ( )		3114170	1					
ANR	3114223	Argument	temp_dot_file_name . Value ( )		3114170	0					
ANR	3114224	CallExpression	temp_dot_file_name . Value ( )		3114170	0					
ANR	3114225	Callee	temp_dot_file_name . Value		3114170	0					
ANR	3114226	MemberAccess	temp_dot_file_name . Value		3114170	0					
ANR	3114227	Identifier	temp_dot_file_name		3114170	0					
ANR	3114228	Identifier	Value		3114170	1					
ANR	3114229	ArgumentList			3114170	1					
ANR	3114230	Argument	"""w"""		3114170	1					
ANR	3114231	PrimaryExpression	"""w"""		3114170	0					
ANR	3114232	IfStatement	if ( temp_dot_file == NULL )		3114170	7					
ANR	3114233	Condition	temp_dot_file == NULL	2464:6:75276:75296	3114170	0	True				
ANR	3114234	EqualityExpression	temp_dot_file == NULL		3114170	0		==			
ANR	3114235	Identifier	temp_dot_file		3114170	0					
ANR	3114236	Identifier	NULL		3114170	1					
ANR	3114237	CompoundStatement		13:29:375:375	3114170	1					
ANR	3114238	ExpressionStatement	"debug_dprintf ( D_ALWAYS , DEBUG_NORMAL , ""Can't create dot file '%s'\\n"" , temp_dot_file_name . Value ( ) )"	2465:3:75304:75418	3114170	0	True				
ANR	3114239	CallExpression	"debug_dprintf ( D_ALWAYS , DEBUG_NORMAL , ""Can't create dot file '%s'\\n"" , temp_dot_file_name . Value ( ) )"		3114170	0					
ANR	3114240	Callee	debug_dprintf		3114170	0					
ANR	3114241	Identifier	debug_dprintf		3114170	0					
ANR	3114242	ArgumentList	D_ALWAYS		3114170	1					
ANR	3114243	Argument	D_ALWAYS		3114170	0					
ANR	3114244	Identifier	D_ALWAYS		3114170	0					
ANR	3114245	Argument	DEBUG_NORMAL		3114170	1					
ANR	3114246	Identifier	DEBUG_NORMAL		3114170	0					
ANR	3114247	Argument	"""Can't create dot file '%s'\\n"""		3114170	2					
ANR	3114248	PrimaryExpression	"""Can't create dot file '%s'\\n"""		3114170	0					
ANR	3114249	Argument	temp_dot_file_name . Value ( )		3114170	3					
ANR	3114250	CallExpression	temp_dot_file_name . Value ( )		3114170	0					
ANR	3114251	Callee	temp_dot_file_name . Value		3114170	0					
ANR	3114252	MemberAccess	temp_dot_file_name . Value		3114170	0					
ANR	3114253	Identifier	temp_dot_file_name		3114170	0					
ANR	3114254	Identifier	Value		3114170	1					
ANR	3114255	ArgumentList			3114170	1					
ANR	3114256	ElseStatement	else		3114170	0					
ANR	3114257	CompoundStatement		20:3:558:573	3114170	0					
ANR	3114258	IdentifierDeclStatement	time_t current_time ;	2469:3:75434:75453	3114170	0	True				
ANR	3114259	IdentifierDecl	current_time		3114170	0					
ANR	3114260	IdentifierDeclType	time_t		3114170	0					
ANR	3114261	Identifier	current_time		3114170	1					
ANR	3114262	IdentifierDeclStatement	char * time_string ;	2470:3:75458:75477	3114170	1	True				
ANR	3114263	IdentifierDecl	* time_string		3114170	0					
ANR	3114264	IdentifierDeclType	char *		3114170	0					
ANR	3114265	Identifier	time_string		3114170	1					
ANR	3114266	IdentifierDeclStatement	char * newline ;	2471:3:75482:75497	3114170	2	True				
ANR	3114267	IdentifierDecl	* newline		3114170	0					
ANR	3114268	IdentifierDeclType	char *		3114170	0					
ANR	3114269	Identifier	newline		3114170	1					
ANR	3114270	ExpressionStatement	time ( & current_time )	2473:3:75503:75522	3114170	3	True				
ANR	3114271	CallExpression	time ( & current_time )		3114170	0					
ANR	3114272	Callee	time		3114170	0					
ANR	3114273	Identifier	time		3114170	0					
ANR	3114274	ArgumentList	& current_time		3114170	1					
ANR	3114275	Argument	& current_time		3114170	0					
ANR	3114276	UnaryOperationExpression	& current_time		3114170	0					
ANR	3114277	UnaryOperator	&		3114170	0					
ANR	3114278	Identifier	current_time		3114170	1					
ANR	3114279	ExpressionStatement	time_string = ctime ( & current_time )	2474:3:75527:75561	3114170	4	True				
ANR	3114280	AssignmentExpression	time_string = ctime ( & current_time )		3114170	0		=			
ANR	3114281	Identifier	time_string		3114170	0					
ANR	3114282	CallExpression	ctime ( & current_time )		3114170	1					
ANR	3114283	Callee	ctime		3114170	0					
ANR	3114284	Identifier	ctime		3114170	0					
ANR	3114285	ArgumentList	& current_time		3114170	1					
ANR	3114286	Argument	& current_time		3114170	0					
ANR	3114287	UnaryOperationExpression	& current_time		3114170	0					
ANR	3114288	UnaryOperator	&		3114170	0					
ANR	3114289	Identifier	current_time		3114170	1					
ANR	3114290	ExpressionStatement	"newline = strchr ( time_string , '\\n' )"	2475:3:75566:75601	3114170	5	True				
ANR	3114291	AssignmentExpression	"newline = strchr ( time_string , '\\n' )"		3114170	0		=			
ANR	3114292	Identifier	newline		3114170	0					
ANR	3114293	CallExpression	"strchr ( time_string , '\\n' )"		3114170	1					
ANR	3114294	Callee	strchr		3114170	0					
ANR	3114295	Identifier	strchr		3114170	0					
ANR	3114296	ArgumentList	time_string		3114170	1					
ANR	3114297	Argument	time_string		3114170	0					
ANR	3114298	Identifier	time_string		3114170	0					
ANR	3114299	Argument	'\\n'		3114170	1					
ANR	3114300	PrimaryExpression	'\\n'		3114170	0					
ANR	3114301	IfStatement	if ( newline != NULL )		3114170	6					
ANR	3114302	Condition	newline != NULL	2476:7:75610:75624	3114170	0	True				
ANR	3114303	EqualityExpression	newline != NULL		3114170	0		!=			
ANR	3114304	Identifier	newline		3114170	0					
ANR	3114305	Identifier	NULL		3114170	1					
ANR	3114306	CompoundStatement		25:24:703:703	3114170	1					
ANR	3114307	ExpressionStatement	* newline = 0	2477:4:75633:75645	3114170	0	True				
ANR	3114308	AssignmentExpression	* newline = 0		3114170	0		=			
ANR	3114309	UnaryOperationExpression	* newline		3114170	0					
ANR	3114310	UnaryOperator	*		3114170	0					
ANR	3114311	Identifier	newline		3114170	1					
ANR	3114312	PrimaryExpression	0		3114170	1					
ANR	3114313	ExpressionStatement	"fprintf ( temp_dot_file , ""digraph DAG {\\n"" )"	2480:3:75659:75700	3114170	7	True				
ANR	3114314	CallExpression	"fprintf ( temp_dot_file , ""digraph DAG {\\n"" )"		3114170	0					
ANR	3114315	Callee	fprintf		3114170	0					
ANR	3114316	Identifier	fprintf		3114170	0					
ANR	3114317	ArgumentList	temp_dot_file		3114170	1					
ANR	3114318	Argument	temp_dot_file		3114170	0					
ANR	3114319	Identifier	temp_dot_file		3114170	0					
ANR	3114320	Argument	"""digraph DAG {\\n"""		3114170	1					
ANR	3114321	PrimaryExpression	"""digraph DAG {\\n"""		3114170	0					
ANR	3114322	ExpressionStatement	"fprintf ( temp_dot_file , ""    label=\\""DAGMan Job status at %s\\"";\\n\\n"" , time_string )"	2481:3:75705:75799	3114170	8	True				
ANR	3114323	CallExpression	"fprintf ( temp_dot_file , ""    label=\\""DAGMan Job status at %s\\"";\\n\\n"" , time_string )"		3114170	0					
ANR	3114324	Callee	fprintf		3114170	0					
ANR	3114325	Identifier	fprintf		3114170	0					
ANR	3114326	ArgumentList	temp_dot_file		3114170	1					
ANR	3114327	Argument	temp_dot_file		3114170	0					
ANR	3114328	Identifier	temp_dot_file		3114170	0					
ANR	3114329	Argument	"""    label=\\""DAGMan Job status at %s\\"";\\n\\n"""		3114170	1					
ANR	3114330	PrimaryExpression	"""    label=\\""DAGMan Job status at %s\\"";\\n\\n"""		3114170	0					
ANR	3114331	Argument	time_string		3114170	2					
ANR	3114332	Identifier	time_string		3114170	0					
ANR	3114333	ExpressionStatement	IncludeExtraDotCommands ( temp_dot_file )	2485:3:75805:75843	3114170	9	True				
ANR	3114334	CallExpression	IncludeExtraDotCommands ( temp_dot_file )		3114170	0					
ANR	3114335	Callee	IncludeExtraDotCommands		3114170	0					
ANR	3114336	Identifier	IncludeExtraDotCommands		3114170	0					
ANR	3114337	ArgumentList	temp_dot_file		3114170	1					
ANR	3114338	Argument	temp_dot_file		3114170	0					
ANR	3114339	Identifier	temp_dot_file		3114170	0					
ANR	3114340	ExpressionStatement	DumpDotFileNodes ( temp_dot_file )	2492:3:76036:76067	3114170	10	True				
ANR	3114341	CallExpression	DumpDotFileNodes ( temp_dot_file )		3114170	0					
ANR	3114342	Callee	DumpDotFileNodes		3114170	0					
ANR	3114343	Identifier	DumpDotFileNodes		3114170	0					
ANR	3114344	ArgumentList	temp_dot_file		3114170	1					
ANR	3114345	Argument	temp_dot_file		3114170	0					
ANR	3114346	Identifier	temp_dot_file		3114170	0					
ANR	3114347	ExpressionStatement	DumpDotFileArcs ( temp_dot_file )	2493:3:76072:76102	3114170	11	True				
ANR	3114348	CallExpression	DumpDotFileArcs ( temp_dot_file )		3114170	0					
ANR	3114349	Callee	DumpDotFileArcs		3114170	0					
ANR	3114350	Identifier	DumpDotFileArcs		3114170	0					
ANR	3114351	ArgumentList	temp_dot_file		3114170	1					
ANR	3114352	Argument	temp_dot_file		3114170	0					
ANR	3114353	Identifier	temp_dot_file		3114170	0					
ANR	3114354	ExpressionStatement	"fprintf ( temp_dot_file , ""}\\n"" )"	2495:3:76108:76137	3114170	12	True				
ANR	3114355	CallExpression	"fprintf ( temp_dot_file , ""}\\n"" )"		3114170	0					
ANR	3114356	Callee	fprintf		3114170	0					
ANR	3114357	Identifier	fprintf		3114170	0					
ANR	3114358	ArgumentList	temp_dot_file		3114170	1					
ANR	3114359	Argument	temp_dot_file		3114170	0					
ANR	3114360	Identifier	temp_dot_file		3114170	0					
ANR	3114361	Argument	"""}\\n"""		3114170	1					
ANR	3114362	PrimaryExpression	"""}\\n"""		3114170	0					
ANR	3114363	ExpressionStatement	fclose ( temp_dot_file )	2496:3:76142:76163	3114170	13	True				
ANR	3114364	CallExpression	fclose ( temp_dot_file )		3114170	0					
ANR	3114365	Callee	fclose		3114170	0					
ANR	3114366	Identifier	fclose		3114170	0					
ANR	3114367	ArgumentList	temp_dot_file		3114170	1					
ANR	3114368	Argument	temp_dot_file		3114170	0					
ANR	3114369	Identifier	temp_dot_file		3114170	0					
ANR	3114370	ExpressionStatement	unlink ( current_dot_file_name . Value ( ) )	2497:3:76168:76205	3114170	14	True				
ANR	3114371	CallExpression	unlink ( current_dot_file_name . Value ( ) )		3114170	0					
ANR	3114372	Callee	unlink		3114170	0					
ANR	3114373	Identifier	unlink		3114170	0					
ANR	3114374	ArgumentList	current_dot_file_name . Value ( )		3114170	1					
ANR	3114375	Argument	current_dot_file_name . Value ( )		3114170	0					
ANR	3114376	CallExpression	current_dot_file_name . Value ( )		3114170	0					
ANR	3114377	Callee	current_dot_file_name . Value		3114170	0					
ANR	3114378	MemberAccess	current_dot_file_name . Value		3114170	0					
ANR	3114379	Identifier	current_dot_file_name		3114170	0					
ANR	3114380	Identifier	Value		3114170	1					
ANR	3114381	ArgumentList			3114170	1					
ANR	3114382	ExpressionStatement	"rename ( temp_dot_file_name . Value ( ) , current_dot_file_name . Value ( ) )"	2498:3:76210:76275	3114170	15	True				
ANR	3114383	CallExpression	"rename ( temp_dot_file_name . Value ( ) , current_dot_file_name . Value ( ) )"		3114170	0					
ANR	3114384	Callee	rename		3114170	0					
ANR	3114385	Identifier	rename		3114170	0					
ANR	3114386	ArgumentList	temp_dot_file_name . Value ( )		3114170	1					
ANR	3114387	Argument	temp_dot_file_name . Value ( )		3114170	0					
ANR	3114388	CallExpression	temp_dot_file_name . Value ( )		3114170	0					
ANR	3114389	Callee	temp_dot_file_name . Value		3114170	0					
ANR	3114390	MemberAccess	temp_dot_file_name . Value		3114170	0					
ANR	3114391	Identifier	temp_dot_file_name		3114170	0					
ANR	3114392	Identifier	Value		3114170	1					
ANR	3114393	ArgumentList			3114170	1					
ANR	3114394	Argument	current_dot_file_name . Value ( )		3114170	1					
ANR	3114395	CallExpression	current_dot_file_name . Value ( )		3114170	0					
ANR	3114396	Callee	current_dot_file_name . Value		3114170	0					
ANR	3114397	MemberAccess	current_dot_file_name . Value		3114170	0					
ANR	3114398	Identifier	current_dot_file_name		3114170	0					
ANR	3114399	Identifier	Value		3114170	1					
ANR	3114400	ArgumentList			3114170	1					
ANR	3114401	ReturnStatement	return ;	2501:1:76285:76291	3114170	1	True				
ANR	3114402	ReturnType	void		3114170	1					
ANR	3114403	Identifier	Dag :: DumpDotFile		3114170	2					
ANR	3114404	ParameterList			3114170	3					
ANR	3114405	CFGEntryNode	ENTRY		3114170		True				
ANR	3114406	CFGExitNode	EXIT		3114170		True				
ANR	3114407	Symbol	NULL		3114170						
ANR	3114408	Symbol	D_ALWAYS		3114170						
ANR	3114409	Symbol	strchr		3114170						
ANR	3114410	Symbol	temp_dot_file_name . Value		3114170						
ANR	3114411	Symbol	DEBUG_NORMAL		3114170						
ANR	3114412	Symbol	temp_dot_file_name		3114170						
ANR	3114413	Symbol	current_dot_file_name		3114170						
ANR	3114414	Symbol	newline		3114170						
ANR	3114415	Symbol	current_dot_file_name . Value		3114170						
ANR	3114416	Symbol	_dot_file_name		3114170						
ANR	3114417	Symbol	& current_time		3114170						
ANR	3114418	Symbol	* newline		3114170						
ANR	3114419	Symbol	ctime		3114170						
ANR	3114420	Symbol	time_string		3114170						
ANR	3114421	Symbol	safe_fopen_wrapper_follow		3114170						
ANR	3114422	Symbol	current_time		3114170						
ANR	3114423	Symbol	temp_dot_file		3114170						
ANR	3114424	Function	Dag :: SetNodeStatusFileName	2513:0:76696:77075							
ANR	3114425	FunctionDef	"Dag :: SetNodeStatusFileName (const char * statusFileName , int minUpdateTime)"		3114424	0					
ANR	3114426	CompoundStatement		2516:0:76781:77075	3114424	0					
ANR	3114427	IfStatement	if ( _statusFileName != NULL )		3114424	0					
ANR	3114428	Condition	_statusFileName != NULL	2517:6:76789:76811	3114424	0	True				
ANR	3114429	EqualityExpression	_statusFileName != NULL		3114424	0		!=			
ANR	3114430	Identifier	_statusFileName		3114424	0					
ANR	3114431	Identifier	NULL		3114424	1					
ANR	3114432	CompoundStatement		2:32:33:33	3114424	1					
ANR	3114433	Statement	debug_printf	2518:2:76819:76830	3114424	0	True				
ANR	3114434	Statement	(	2518:14:76831:76831	3114424	1	True				
ANR	3114435	Statement	DEBUG_NORMAL	2518:16:76833:76844	3114424	2	True				
ANR	3114436	Statement	","	2518:28:76845:76845	3114424	3	True				
ANR	3114437	Statement	"""Attempt to set NODE_STATUS_FILE """	2518:30:76847:76880	3114424	4	True				
ANR	3114438	Statement	"""to %s does not override existing value of %s\\n"""	2519:5:76887:76934	3114424	5	True				
ANR	3114439	Statement	","	2519:53:76935:76935	3114424	6	True				
ANR	3114440	Statement	statusFileName	2520:5:76942:76955	3114424	7	True				
ANR	3114441	Statement	","	2520:19:76956:76956	3114424	8	True				
ANR	3114442	Statement	_statusFileName	2520:21:76958:76972	3114424	9	True				
ANR	3114443	Statement	)	2520:37:76974:76974	3114424	10	True				
ANR	3114444	ExpressionStatement		2520:38:76975:76975	3114424	11	True				
ANR	3114445	ReturnStatement	return ;	2521:2:76979:76985	3114424	12	True				
ANR	3114446	ExpressionStatement	_statusFileName = strnewp ( statusFileName )	2523:1:76991:77034	3114424	1	True				
ANR	3114447	AssignmentExpression	_statusFileName = strnewp ( statusFileName )		3114424	0		=			
ANR	3114448	Identifier	_statusFileName		3114424	0					
ANR	3114449	CallExpression	strnewp ( statusFileName )		3114424	1					
ANR	3114450	Callee	strnewp		3114424	0					
ANR	3114451	Identifier	strnewp		3114424	0					
ANR	3114452	ArgumentList	statusFileName		3114424	1					
ANR	3114453	Argument	statusFileName		3114424	0					
ANR	3114454	Identifier	statusFileName		3114424	0					
ANR	3114455	ExpressionStatement	_minStatusUpdateTime = minUpdateTime	2524:1:77037:77073	3114424	2	True				
ANR	3114456	AssignmentExpression	_minStatusUpdateTime = minUpdateTime		3114424	0		=			
ANR	3114457	Identifier	_minStatusUpdateTime		3114424	0					
ANR	3114458	Identifier	minUpdateTime		3114424	1					
ANR	3114459	ReturnType	void		3114424	1					
ANR	3114460	Identifier	Dag :: SetNodeStatusFileName		3114424	2					
ANR	3114461	ParameterList	"const char * statusFileName , int minUpdateTime"		3114424	3					
ANR	3114462	Parameter	const char * statusFileName	2514:28:76730:76755	3114424	0	True				
ANR	3114463	ParameterType	const char *		3114424	0					
ANR	3114464	Identifier	statusFileName		3114424	1					
ANR	3114465	Parameter	int minUpdateTime	2515:3:76761:76777	3114424	1	True				
ANR	3114466	ParameterType	int		3114424	0					
ANR	3114467	Identifier	minUpdateTime		3114424	1					
ANR	3114468	CFGEntryNode	ENTRY		3114424		True				
ANR	3114469	CFGExitNode	EXIT		3114424		True				
ANR	3114470	Symbol	minUpdateTime		3114424						
ANR	3114471	Symbol	NULL		3114424						
ANR	3114472	Symbol	_statusFileName		3114424						
ANR	3114473	Symbol	statusFileName		3114424						
ANR	3114474	Symbol	strnewp		3114424						
ANR	3114475	Symbol	_minStatusUpdateTime		3114424						
ANR	3114476	Function	Dag :: DumpNodeStatus	2531:0:77196:81568							
ANR	3114477	FunctionDef	"Dag :: DumpNodeStatus (bool held , bool removed)"		3114476	0					
ANR	3114478	CompoundStatement		2533:0:77248:81568	3114476	0					
ANR	3114479	IfStatement	if ( _statusFileName == NULL )		3114476	0					
ANR	3114480	Condition	_statusFileName == NULL	2537:6:77306:77328	3114476	0	True				
ANR	3114481	EqualityExpression	_statusFileName == NULL		3114476	0		==			
ANR	3114482	Identifier	_statusFileName		3114476	0					
ANR	3114483	Identifier	NULL		3114476	1					
ANR	3114484	CompoundStatement		5:32:83:83	3114476	1					
ANR	3114485	ReturnStatement	return ;	2538:2:77336:77342	3114476	0	True				
ANR	3114486	IfStatement	if ( ! _statusFileOutdated && ! held && ! removed )		3114476	1					
ANR	3114487	Condition	! _statusFileOutdated && ! held && ! removed	2541:6:77355:77395	3114476	0	True				
ANR	3114488	AndExpression	! _statusFileOutdated && ! held && ! removed		3114476	0		&&			
ANR	3114489	UnaryOperationExpression	! _statusFileOutdated		3114476	0					
ANR	3114490	UnaryOperator	!		3114476	0					
ANR	3114491	Identifier	_statusFileOutdated		3114476	1					
ANR	3114492	AndExpression	! held && ! removed		3114476	1		&&			
ANR	3114493	UnaryOperationExpression	! held		3114476	0					
ANR	3114494	UnaryOperator	!		3114476	0					
ANR	3114495	Identifier	held		3114476	1					
ANR	3114496	UnaryOperationExpression	! removed		3114476	1					
ANR	3114497	UnaryOperator	!		3114476	0					
ANR	3114498	Identifier	removed		3114476	1					
ANR	3114499	CompoundStatement		9:50:150:150	3114476	1					
ANR	3114500	Statement	debug_printf	2542:2:77403:77414	3114476	0	True				
ANR	3114501	Statement	(	2542:14:77415:77415	3114476	1	True				
ANR	3114502	Statement	DEBUG_DEBUG_1	2542:16:77417:77429	3114476	2	True				
ANR	3114503	Statement	","	2542:29:77430:77430	3114476	3	True				
ANR	3114504	Statement	"""Node status file not updated """	2542:31:77432:77462	3114476	4	True				
ANR	3114505	Statement	"""because it is not yet outdated\\n"""	2543:5:77469:77502	3114476	5	True				
ANR	3114506	Statement	)	2543:40:77504:77504	3114476	6	True				
ANR	3114507	ExpressionStatement		2543:41:77505:77505	3114476	7	True				
ANR	3114508	ReturnStatement	return ;	2544:2:77509:77515	3114476	8	True				
ANR	3114509	IdentifierDeclStatement	time_t startTime = time ( NULL ) ;	2547:1:77523:77554	3114476	2	True				
ANR	3114510	IdentifierDecl	startTime = time ( NULL )		3114476	0					
ANR	3114511	IdentifierDeclType	time_t		3114476	0					
ANR	3114512	Identifier	startTime		3114476	1					
ANR	3114513	AssignmentExpression	startTime = time ( NULL )		3114476	2		=			
ANR	3114514	Identifier	startTime		3114476	0					
ANR	3114515	CallExpression	time ( NULL )		3114476	1					
ANR	3114516	Callee	time		3114476	0					
ANR	3114517	Identifier	time		3114476	0					
ANR	3114518	ArgumentList	NULL		3114476	1					
ANR	3114519	Argument	NULL		3114476	0					
ANR	3114520	Identifier	NULL		3114476	0					
ANR	3114521	IdentifierDeclStatement	bool tooSoon = ( _minStatusUpdateTime > 0 ) && ( ( startTime - _lastStatusUpdateTimestamp ) < _minStatusUpdateTime ) ;	2548:1:77557:77675	3114476	3	True				
ANR	3114522	IdentifierDecl	tooSoon = ( _minStatusUpdateTime > 0 ) && ( ( startTime - _lastStatusUpdateTimestamp ) < _minStatusUpdateTime )		3114476	0					
ANR	3114523	IdentifierDeclType	bool		3114476	0					
ANR	3114524	Identifier	tooSoon		3114476	1					
ANR	3114525	AssignmentExpression	tooSoon = ( _minStatusUpdateTime > 0 ) && ( ( startTime - _lastStatusUpdateTimestamp ) < _minStatusUpdateTime )		3114476	2		=			
ANR	3114526	Identifier	tooSoon		3114476	0					
ANR	3114527	AndExpression	( _minStatusUpdateTime > 0 ) && ( ( startTime - _lastStatusUpdateTimestamp ) < _minStatusUpdateTime )		3114476	1		&&			
ANR	3114528	RelationalExpression	_minStatusUpdateTime > 0		3114476	0		>			
ANR	3114529	Identifier	_minStatusUpdateTime		3114476	0					
ANR	3114530	PrimaryExpression	0		3114476	1					
ANR	3114531	RelationalExpression	( startTime - _lastStatusUpdateTimestamp ) < _minStatusUpdateTime		3114476	1		<			
ANR	3114532	AdditiveExpression	startTime - _lastStatusUpdateTimestamp		3114476	0		-			
ANR	3114533	Identifier	startTime		3114476	0					
ANR	3114534	Identifier	_lastStatusUpdateTimestamp		3114476	1					
ANR	3114535	Identifier	_minStatusUpdateTime		3114476	1					
ANR	3114536	IfStatement	if ( tooSoon && ! held && ! removed && ! FinishedRunning ( ) )		3114476	4					
ANR	3114537	Condition	tooSoon && ! held && ! removed && ! FinishedRunning ( )	2551:6:77683:77732	3114476	0	True				
ANR	3114538	AndExpression	tooSoon && ! held && ! removed && ! FinishedRunning ( )		3114476	0		&&			
ANR	3114539	Identifier	tooSoon		3114476	0					
ANR	3114540	AndExpression	! held && ! removed && ! FinishedRunning ( )		3114476	1		&&			
ANR	3114541	UnaryOperationExpression	! held		3114476	0					
ANR	3114542	UnaryOperator	!		3114476	0					
ANR	3114543	Identifier	held		3114476	1					
ANR	3114544	AndExpression	! removed && ! FinishedRunning ( )		3114476	1		&&			
ANR	3114545	UnaryOperationExpression	! removed		3114476	0					
ANR	3114546	UnaryOperator	!		3114476	0					
ANR	3114547	Identifier	removed		3114476	1					
ANR	3114548	UnaryOperationExpression	! FinishedRunning ( )		3114476	1					
ANR	3114549	UnaryOperator	!		3114476	0					
ANR	3114550	CallExpression	FinishedRunning ( )		3114476	1					
ANR	3114551	Callee	FinishedRunning		3114476	0					
ANR	3114552	Identifier	FinishedRunning		3114476	0					
ANR	3114553	ArgumentList			3114476	1					
ANR	3114554	CompoundStatement		19:59:487:487	3114476	1					
ANR	3114555	Statement	debug_printf	2552:2:77740:77751	3114476	0	True				
ANR	3114556	Statement	(	2552:14:77752:77752	3114476	1	True				
ANR	3114557	Statement	DEBUG_DEBUG_1	2552:16:77754:77766	3114476	2	True				
ANR	3114558	Statement	","	2552:29:77767:77767	3114476	3	True				
ANR	3114559	Statement	"""Node status file not updated """	2552:31:77769:77799	3114476	4	True				
ANR	3114560	Statement	"""because min. status update time has not yet passed\\n"""	2553:5:77806:77859	3114476	5	True				
ANR	3114561	Statement	)	2553:60:77861:77861	3114476	6	True				
ANR	3114562	ExpressionStatement		2553:61:77862:77862	3114476	7	True				
ANR	3114563	ReturnStatement	return ;	2554:2:77866:77872	3114476	8	True				
ANR	3114564	ExpressionStatement	"debug_printf ( DEBUG_DEBUG_1 , ""Updating node status file\\n"" )"	2563:1:78109:78169	3114476	5	True				
ANR	3114565	CallExpression	"debug_printf ( DEBUG_DEBUG_1 , ""Updating node status file\\n"" )"		3114476	0					
ANR	3114566	Callee	debug_printf		3114476	0					
ANR	3114567	Identifier	debug_printf		3114476	0					
ANR	3114568	ArgumentList	DEBUG_DEBUG_1		3114476	1					
ANR	3114569	Argument	DEBUG_DEBUG_1		3114476	0					
ANR	3114570	Identifier	DEBUG_DEBUG_1		3114476	0					
ANR	3114571	Argument	"""Updating node status file\\n"""		3114476	1					
ANR	3114572	PrimaryExpression	"""Updating node status file\\n"""		3114476	0					
ANR	3114573	IdentifierDeclStatement	MyString tmpStatusFile ( _statusFileName ) ;	2565:1:78173:78214	3114476	6	True				
ANR	3114574	IdentifierDecl	tmpStatusFile ( _statusFileName )		3114476	0					
ANR	3114575	IdentifierDeclType	MyString		3114476	0					
ANR	3114576	Identifier	tmpStatusFile		3114476	1					
ANR	3114577	Identifier	_statusFileName		3114476	2					
ANR	3114578	ExpressionStatement	"tmpStatusFile += "".tmp"""	2566:1:78217:78240	3114476	7	True				
ANR	3114579	AssignmentExpression	"tmpStatusFile += "".tmp"""		3114476	0		+=			
ANR	3114580	Identifier	tmpStatusFile		3114476	0					
ANR	3114581	PrimaryExpression	""".tmp"""		3114476	1					
ANR	3114582	ExpressionStatement	unlink ( tmpStatusFile . Value ( ) )	2569:1:78313:78344	3114476	8	True				
ANR	3114583	CallExpression	unlink ( tmpStatusFile . Value ( ) )		3114476	0					
ANR	3114584	Callee	unlink		3114476	0					
ANR	3114585	Identifier	unlink		3114476	0					
ANR	3114586	ArgumentList	tmpStatusFile . Value ( )		3114476	1					
ANR	3114587	Argument	tmpStatusFile . Value ( )		3114476	0					
ANR	3114588	CallExpression	tmpStatusFile . Value ( )		3114476	0					
ANR	3114589	Callee	tmpStatusFile . Value		3114476	0					
ANR	3114590	MemberAccess	tmpStatusFile . Value		3114476	0					
ANR	3114591	Identifier	tmpStatusFile		3114476	0					
ANR	3114592	Identifier	Value		3114476	1					
ANR	3114593	ArgumentList			3114476	1					
ANR	3114594	IdentifierDeclStatement	"FILE * outfile = safe_fopen_wrapper_follow ( tmpStatusFile . Value ( ) , ""w"" ) ;"	2571:1:78348:78419	3114476	9	True				
ANR	3114595	IdentifierDecl	"* outfile = safe_fopen_wrapper_follow ( tmpStatusFile . Value ( ) , ""w"" )"		3114476	0					
ANR	3114596	IdentifierDeclType	FILE *		3114476	0					
ANR	3114597	Identifier	outfile		3114476	1					
ANR	3114598	AssignmentExpression	"* outfile = safe_fopen_wrapper_follow ( tmpStatusFile . Value ( ) , ""w"" )"		3114476	2		=			
ANR	3114599	Identifier	outfile		3114476	0					
ANR	3114600	CallExpression	"safe_fopen_wrapper_follow ( tmpStatusFile . Value ( ) , ""w"" )"		3114476	1					
ANR	3114601	Callee	safe_fopen_wrapper_follow		3114476	0					
ANR	3114602	Identifier	safe_fopen_wrapper_follow		3114476	0					
ANR	3114603	ArgumentList	tmpStatusFile . Value ( )		3114476	1					
ANR	3114604	Argument	tmpStatusFile . Value ( )		3114476	0					
ANR	3114605	CallExpression	tmpStatusFile . Value ( )		3114476	0					
ANR	3114606	Callee	tmpStatusFile . Value		3114476	0					
ANR	3114607	MemberAccess	tmpStatusFile . Value		3114476	0					
ANR	3114608	Identifier	tmpStatusFile		3114476	0					
ANR	3114609	Identifier	Value		3114476	1					
ANR	3114610	ArgumentList			3114476	1					
ANR	3114611	Argument	"""w"""		3114476	1					
ANR	3114612	PrimaryExpression	"""w"""		3114476	0					
ANR	3114613	IfStatement	if ( outfile == NULL )		3114476	10					
ANR	3114614	Condition	outfile == NULL	2572:6:78427:78441	3114476	0	True				
ANR	3114615	EqualityExpression	outfile == NULL		3114476	0		==			
ANR	3114616	Identifier	outfile		3114476	0					
ANR	3114617	Identifier	NULL		3114476	1					
ANR	3114618	CompoundStatement		40:24:1196:1196	3114476	1					
ANR	3114619	ExpressionStatement	"debug_printf ( DEBUG_NORMAL , ""Warning: can't create node status file '%s': %s\\n"" , tmpStatusFile . Value ( ) , strerror ( errno ) )"	2573:2:78449:78587	3114476	0	True				
ANR	3114620	CallExpression	"debug_printf ( DEBUG_NORMAL , ""Warning: can't create node status file '%s': %s\\n"" , tmpStatusFile . Value ( ) , strerror ( errno ) )"		3114476	0					
ANR	3114621	Callee	debug_printf		3114476	0					
ANR	3114622	Identifier	debug_printf		3114476	0					
ANR	3114623	ArgumentList	DEBUG_NORMAL		3114476	1					
ANR	3114624	Argument	DEBUG_NORMAL		3114476	0					
ANR	3114625	Identifier	DEBUG_NORMAL		3114476	0					
ANR	3114626	Argument	"""Warning: can't create node status file '%s': %s\\n"""		3114476	1					
ANR	3114627	PrimaryExpression	"""Warning: can't create node status file '%s': %s\\n"""		3114476	0					
ANR	3114628	Argument	tmpStatusFile . Value ( )		3114476	2					
ANR	3114629	CallExpression	tmpStatusFile . Value ( )		3114476	0					
ANR	3114630	Callee	tmpStatusFile . Value		3114476	0					
ANR	3114631	MemberAccess	tmpStatusFile . Value		3114476	0					
ANR	3114632	Identifier	tmpStatusFile		3114476	0					
ANR	3114633	Identifier	Value		3114476	1					
ANR	3114634	ArgumentList			3114476	1					
ANR	3114635	Argument	strerror ( errno )		3114476	3					
ANR	3114636	CallExpression	strerror ( errno )		3114476	0					
ANR	3114637	Callee	strerror		3114476	0					
ANR	3114638	Identifier	strerror		3114476	0					
ANR	3114639	ArgumentList	errno		3114476	1					
ANR	3114640	Argument	errno		3114476	0					
ANR	3114641	Identifier	errno		3114476	0					
ANR	3114642	ExpressionStatement	check_warning_strictness ( DAG_STRICT_1 )	2576:2:78591:78631	3114476	1	True				
ANR	3114643	CallExpression	check_warning_strictness ( DAG_STRICT_1 )		3114476	0					
ANR	3114644	Callee	check_warning_strictness		3114476	0					
ANR	3114645	Identifier	check_warning_strictness		3114476	0					
ANR	3114646	ArgumentList	DAG_STRICT_1		3114476	1					
ANR	3114647	Argument	DAG_STRICT_1		3114476	0					
ANR	3114648	Identifier	DAG_STRICT_1		3114476	0					
ANR	3114649	ReturnStatement	return ;	2577:2:78635:78641	3114476	2	True				
ANR	3114650	IdentifierDeclStatement	char * timeStr = ctime ( & startTime ) ;	2583:1:78677:78712	3114476	11	True				
ANR	3114651	IdentifierDecl	* timeStr = ctime ( & startTime )		3114476	0					
ANR	3114652	IdentifierDeclType	char *		3114476	0					
ANR	3114653	Identifier	timeStr		3114476	1					
ANR	3114654	AssignmentExpression	* timeStr = ctime ( & startTime )		3114476	2		=			
ANR	3114655	Identifier	timeStr		3114476	0					
ANR	3114656	CallExpression	ctime ( & startTime )		3114476	1					
ANR	3114657	Callee	ctime		3114476	0					
ANR	3114658	Identifier	ctime		3114476	0					
ANR	3114659	ArgumentList	& startTime		3114476	1					
ANR	3114660	Argument	& startTime		3114476	0					
ANR	3114661	UnaryOperationExpression	& startTime		3114476	0					
ANR	3114662	UnaryOperator	&		3114476	0					
ANR	3114663	Identifier	startTime		3114476	1					
ANR	3114664	IdentifierDeclStatement	"char * newline = strchr ( timeStr , '\\n' ) ;"	2584:1:78715:78752	3114476	12	True				
ANR	3114665	IdentifierDecl	"* newline = strchr ( timeStr , '\\n' )"		3114476	0					
ANR	3114666	IdentifierDeclType	char *		3114476	0					
ANR	3114667	Identifier	newline		3114476	1					
ANR	3114668	AssignmentExpression	"* newline = strchr ( timeStr , '\\n' )"		3114476	2		=			
ANR	3114669	Identifier	newline		3114476	0					
ANR	3114670	CallExpression	"strchr ( timeStr , '\\n' )"		3114476	1					
ANR	3114671	Callee	strchr		3114476	0					
ANR	3114672	Identifier	strchr		3114476	0					
ANR	3114673	ArgumentList	timeStr		3114476	1					
ANR	3114674	Argument	timeStr		3114476	0					
ANR	3114675	Identifier	timeStr		3114476	0					
ANR	3114676	Argument	'\\n'		3114476	1					
ANR	3114677	PrimaryExpression	'\\n'		3114476	0					
ANR	3114678	IfStatement	if ( newline != NULL )		3114476	13					
ANR	3114679	Condition	newline != NULL	2585:5:78759:78773	3114476	0	True				
ANR	3114680	EqualityExpression	newline != NULL		3114476	0		!=			
ANR	3114681	Identifier	newline		3114476	0					
ANR	3114682	Identifier	NULL		3114476	1					
ANR	3114683	CompoundStatement		53:22:1527:1527	3114476	1					
ANR	3114684	ExpressionStatement	* newline = 0	2586:2:78780:78792	3114476	0	True				
ANR	3114685	AssignmentExpression	* newline = 0		3114476	0		=			
ANR	3114686	UnaryOperationExpression	* newline		3114476	0					
ANR	3114687	UnaryOperator	*		3114476	0					
ANR	3114688	Identifier	newline		3114476	1					
ANR	3114689	PrimaryExpression	0		3114476	1					
ANR	3114690	ExpressionStatement	"fprintf ( outfile , ""BEGIN %lu (%s)\\n"" , ( unsigned long ) startTime , timeStr )"	2588:1:78798:78875	3114476	14	True				
ANR	3114691	CallExpression	"fprintf ( outfile , ""BEGIN %lu (%s)\\n"" , ( unsigned long ) startTime , timeStr )"		3114476	0					
ANR	3114692	Callee	fprintf		3114476	0					
ANR	3114693	Identifier	fprintf		3114476	0					
ANR	3114694	ArgumentList	outfile		3114476	1					
ANR	3114695	Argument	outfile		3114476	0					
ANR	3114696	Identifier	outfile		3114476	0					
ANR	3114697	Argument	"""BEGIN %lu (%s)\\n"""		3114476	1					
ANR	3114698	PrimaryExpression	"""BEGIN %lu (%s)\\n"""		3114476	0					
ANR	3114699	Argument	( unsigned long ) startTime		3114476	2					
ANR	3114700	CastExpression	( unsigned long ) startTime		3114476	0					
ANR	3114701	CastTarget	unsigned long		3114476	0					
ANR	3114702	Identifier	startTime		3114476	1					
ANR	3114703	Argument	timeStr		3114476	3					
ANR	3114704	Identifier	timeStr		3114476	0					
ANR	3114705	ExpressionStatement	"fprintf ( outfile , ""Status of nodes of DAG(s): "" )"	2590:1:78878:78927	3114476	15	True				
ANR	3114706	CallExpression	"fprintf ( outfile , ""Status of nodes of DAG(s): "" )"		3114476	0					
ANR	3114707	Callee	fprintf		3114476	0					
ANR	3114708	Identifier	fprintf		3114476	0					
ANR	3114709	ArgumentList	outfile		3114476	1					
ANR	3114710	Argument	outfile		3114476	0					
ANR	3114711	Identifier	outfile		3114476	0					
ANR	3114712	Argument	"""Status of nodes of DAG(s): """		3114476	1					
ANR	3114713	PrimaryExpression	"""Status of nodes of DAG(s): """		3114476	0					
ANR	3114714	IdentifierDeclStatement	char * dagFile ;	2591:1:78930:78943	3114476	16	True				
ANR	3114715	IdentifierDecl	* dagFile		3114476	0					
ANR	3114716	IdentifierDeclType	char *		3114476	0					
ANR	3114717	Identifier	dagFile		3114476	1					
ANR	3114718	ExpressionStatement	_dagFiles . rewind ( )	2592:1:78946:78964	3114476	17	True				
ANR	3114719	CallExpression	_dagFiles . rewind ( )		3114476	0					
ANR	3114720	Callee	_dagFiles . rewind		3114476	0					
ANR	3114721	MemberAccess	_dagFiles . rewind		3114476	0					
ANR	3114722	Identifier	_dagFiles		3114476	0					
ANR	3114723	Identifier	rewind		3114476	1					
ANR	3114724	ArgumentList			3114476	1					
ANR	3114725	WhileStatement	while ( ( dagFile = _dagFiles . next ( ) ) )		3114476	18					
ANR	3114726	Condition	dagFile = _dagFiles . next ( )	2593:9:78975:79002	3114476	0	True				
ANR	3114727	AssignmentExpression	dagFile = _dagFiles . next ( )		3114476	0		=			
ANR	3114728	Identifier	dagFile		3114476	0					
ANR	3114729	CallExpression	_dagFiles . next ( )		3114476	1					
ANR	3114730	Callee	_dagFiles . next		3114476	0					
ANR	3114731	MemberAccess	_dagFiles . next		3114476	0					
ANR	3114732	Identifier	_dagFiles		3114476	0					
ANR	3114733	Identifier	next		3114476	1					
ANR	3114734	ArgumentList			3114476	1					
ANR	3114735	CompoundStatement		61:40:1757:1757	3114476	1					
ANR	3114736	ExpressionStatement	"fprintf ( outfile , ""%s "" , dagFile )"	2594:2:79010:79044	3114476	0	True				
ANR	3114737	CallExpression	"fprintf ( outfile , ""%s "" , dagFile )"		3114476	0					
ANR	3114738	Callee	fprintf		3114476	0					
ANR	3114739	Identifier	fprintf		3114476	0					
ANR	3114740	ArgumentList	outfile		3114476	1					
ANR	3114741	Argument	outfile		3114476	0					
ANR	3114742	Identifier	outfile		3114476	0					
ANR	3114743	Argument	"""%s """		3114476	1					
ANR	3114744	PrimaryExpression	"""%s """		3114476	0					
ANR	3114745	Argument	dagFile		3114476	2					
ANR	3114746	Identifier	dagFile		3114476	0					
ANR	3114747	ExpressionStatement	"fprintf ( outfile , ""\\n\\n"" )"	2596:1:79050:79076	3114476	19	True				
ANR	3114748	CallExpression	"fprintf ( outfile , ""\\n\\n"" )"		3114476	0					
ANR	3114749	Callee	fprintf		3114476	0					
ANR	3114750	Identifier	fprintf		3114476	0					
ANR	3114751	ArgumentList	outfile		3114476	1					
ANR	3114752	Argument	outfile		3114476	0					
ANR	3114753	Identifier	outfile		3114476	0					
ANR	3114754	Argument	"""\\n\\n"""		3114476	1					
ANR	3114755	PrimaryExpression	"""\\n\\n"""		3114476	0					
ANR	3114756	IdentifierDeclStatement	ListIterator < Job > it ( _jobs ) ;	2601:1:79122:79152	3114476	20	True				
ANR	3114757	IdentifierDecl	it ( _jobs )		3114476	0					
ANR	3114758	IdentifierDeclType	ListIterator < Job >		3114476	0					
ANR	3114759	Identifier	it		3114476	1					
ANR	3114760	Identifier	_jobs		3114476	2					
ANR	3114761	IdentifierDeclStatement	Job * node ;	2602:1:79155:79164	3114476	21	True				
ANR	3114762	IdentifierDecl	* node		3114476	0					
ANR	3114763	IdentifierDeclType	Job *		3114476	0					
ANR	3114764	Identifier	node		3114476	1					
ANR	3114765	WhileStatement	while ( it . Next ( node ) )		3114476	22					
ANR	3114766	Condition	it . Next ( node )	2603:9:79175:79189	3114476	0	True				
ANR	3114767	CallExpression	it . Next ( node )		3114476	0					
ANR	3114768	Callee	it . Next		3114476	0					
ANR	3114769	MemberAccess	it . Next		3114476	0					
ANR	3114770	Identifier	it		3114476	0					
ANR	3114771	Identifier	Next		3114476	1					
ANR	3114772	ArgumentList	node		3114476	1					
ANR	3114773	Argument	node		3114476	0					
ANR	3114774	Identifier	node		3114476	0					
ANR	3114775	CompoundStatement		73:2:2014:2039	3114476	1					
ANR	3114776	IdentifierDeclStatement	const char * statusStr = Job :: status_t_names [ node -> GetStatus ( ) ] ;	2604:2:79197:79259	3114476	0	True				
ANR	3114777	IdentifierDecl	* statusStr = Job :: status_t_names [ node -> GetStatus ( ) ]		3114476	0					
ANR	3114778	IdentifierDeclType	const char *		3114476	0					
ANR	3114779	Identifier	statusStr		3114476	1					
ANR	3114780	AssignmentExpression	* statusStr = Job :: status_t_names [ node -> GetStatus ( ) ]		3114476	2		=			
ANR	3114781	Identifier	statusStr		3114476	0					
ANR	3114782	ArrayIndexing	Job :: status_t_names [ node -> GetStatus ( ) ]		3114476	1					
ANR	3114783	Identifier	Job :: status_t_names		3114476	0					
ANR	3114784	CallExpression	node -> GetStatus ( )		3114476	1					
ANR	3114785	Callee	node -> GetStatus		3114476	0					
ANR	3114786	PtrMemberAccess	node -> GetStatus		3114476	0					
ANR	3114787	Identifier	node		3114476	0					
ANR	3114788	Identifier	GetStatus		3114476	1					
ANR	3114789	ArgumentList			3114476	1					
ANR	3114790	IdentifierDeclStatement	"const char * nodeNote = """" ;"	2605:2:79263:79288	3114476	1	True				
ANR	3114791	IdentifierDecl	"* nodeNote = """""		3114476	0					
ANR	3114792	IdentifierDeclType	const char *		3114476	0					
ANR	3114793	Identifier	nodeNote		3114476	1					
ANR	3114794	AssignmentExpression	"* nodeNote = """""		3114476	2		=			
ANR	3114795	Identifier	nodeNote		3114476	0					
ANR	3114796	PrimaryExpression	""""""		3114476	1					
ANR	3114797	IfStatement	if ( node -> GetStatus ( ) == Job :: STATUS_READY )		3114476	2					
ANR	3114798	Condition	node -> GetStatus ( ) == Job :: STATUS_READY	2606:7:79297:79334	3114476	0	True				
ANR	3114799	EqualityExpression	node -> GetStatus ( ) == Job :: STATUS_READY		3114476	0		==			
ANR	3114800	CallExpression	node -> GetStatus ( )		3114476	0					
ANR	3114801	Callee	node -> GetStatus		3114476	0					
ANR	3114802	PtrMemberAccess	node -> GetStatus		3114476	0					
ANR	3114803	Identifier	node		3114476	0					
ANR	3114804	Identifier	GetStatus		3114476	1					
ANR	3114805	ArgumentList			3114476	1					
ANR	3114806	Identifier	Job :: STATUS_READY		3114476	1					
ANR	3114807	CompoundStatement		74:48:2089:2089	3114476	1					
ANR	3114808	IfStatement	if ( ! node -> CanSubmit ( ) )		3114476	0					
ANR	3114809	Condition	! node -> CanSubmit ( )	2607:8:79348:79365	3114476	0	True				
ANR	3114810	UnaryOperationExpression	! node -> CanSubmit ( )		3114476	0					
ANR	3114811	UnaryOperator	!		3114476	0					
ANR	3114812	CallExpression	node -> CanSubmit ( )		3114476	1					
ANR	3114813	Callee	node -> CanSubmit		3114476	0					
ANR	3114814	PtrMemberAccess	node -> CanSubmit		3114476	0					
ANR	3114815	Identifier	node		3114476	0					
ANR	3114816	Identifier	CanSubmit		3114476	1					
ANR	3114817	ArgumentList			3114476	1					
ANR	3114818	CompoundStatement		75:29:2120:2120	3114476	1					
ANR	3114819	ExpressionStatement	"statusStr = ""STATUS_UNREADY  """	2609:4:79426:79456	3114476	0	True				
ANR	3114820	AssignmentExpression	"statusStr = ""STATUS_UNREADY  """		3114476	0		=			
ANR	3114821	Identifier	statusStr		3114476	0					
ANR	3114822	PrimaryExpression	"""STATUS_UNREADY  """		3114476	1					
ANR	3114823	ElseStatement	else		3114476	0					
ANR	3114824	IfStatement	if ( node -> GetStatus ( ) == Job :: STATUS_SUBMITTED )		3114476	0					
ANR	3114825	Condition	node -> GetStatus ( ) == Job :: STATUS_SUBMITTED	2611:14:79477:79518	3114476	0	True				
ANR	3114826	EqualityExpression	node -> GetStatus ( ) == Job :: STATUS_SUBMITTED		3114476	0		==			
ANR	3114827	CallExpression	node -> GetStatus ( )		3114476	0					
ANR	3114828	Callee	node -> GetStatus		3114476	0					
ANR	3114829	PtrMemberAccess	node -> GetStatus		3114476	0					
ANR	3114830	Identifier	node		3114476	0					
ANR	3114831	Identifier	GetStatus		3114476	1					
ANR	3114832	ArgumentList			3114476	1					
ANR	3114833	Identifier	Job :: STATUS_SUBMITTED		3114476	1					
ANR	3114834	CompoundStatement		79:59:2273:2273	3114476	1					
ANR	3114835	ExpressionStatement	"nodeNote = node -> GetIsIdle ( ) ? ""idle"" : ""not_idle"""	2612:3:79527:79577	3114476	0	True				
ANR	3114836	AssignmentExpression	"nodeNote = node -> GetIsIdle ( ) ? ""idle"" : ""not_idle"""		3114476	0		=			
ANR	3114837	Identifier	nodeNote		3114476	0					
ANR	3114838	ConditionalExpression	"node -> GetIsIdle ( ) ? ""idle"" : ""not_idle"""		3114476	1					
ANR	3114839	Condition	node -> GetIsIdle ( )		3114476	0					
ANR	3114840	CallExpression	node -> GetIsIdle ( )		3114476	0					
ANR	3114841	Callee	node -> GetIsIdle		3114476	0					
ANR	3114842	PtrMemberAccess	node -> GetIsIdle		3114476	0					
ANR	3114843	Identifier	node		3114476	0					
ANR	3114844	Identifier	GetIsIdle		3114476	1					
ANR	3114845	ArgumentList			3114476	1					
ANR	3114846	PrimaryExpression	"""idle"""		3114476	1					
ANR	3114847	PrimaryExpression	"""not_idle"""		3114476	2					
ANR	3114848	ElseStatement	else		3114476	0					
ANR	3114849	IfStatement	if ( node -> GetStatus ( ) == Job :: STATUS_ERROR )		3114476	0					
ANR	3114850	Condition	node -> GetStatus ( ) == Job :: STATUS_ERROR	2615:14:79690:79727	3114476	0	True				
ANR	3114851	EqualityExpression	node -> GetStatus ( ) == Job :: STATUS_ERROR		3114476	0		==			
ANR	3114852	CallExpression	node -> GetStatus ( )		3114476	0					
ANR	3114853	Callee	node -> GetStatus		3114476	0					
ANR	3114854	PtrMemberAccess	node -> GetStatus		3114476	0					
ANR	3114855	Identifier	node		3114476	0					
ANR	3114856	Identifier	GetStatus		3114476	1					
ANR	3114857	ArgumentList			3114476	1					
ANR	3114858	Identifier	Job :: STATUS_ERROR		3114476	1					
ANR	3114859	CompoundStatement		83:55:2482:2482	3114476	1					
ANR	3114860	ExpressionStatement	nodeNote = node -> error_text	2616:3:79736:79763	3114476	0	True				
ANR	3114861	AssignmentExpression	nodeNote = node -> error_text		3114476	0		=			
ANR	3114862	Identifier	nodeNote		3114476	0					
ANR	3114863	PtrMemberAccess	node -> error_text		3114476	1					
ANR	3114864	Identifier	node		3114476	0					
ANR	3114865	Identifier	error_text		3114476	1					
ANR	3114866	ExpressionStatement	"fprintf ( outfile , ""JOB %s %s (%s)\\n"" , node -> GetJobName ( ) , statusStr , nodeNote )"	2618:2:79771:79855	3114476	3	True				
ANR	3114867	CallExpression	"fprintf ( outfile , ""JOB %s %s (%s)\\n"" , node -> GetJobName ( ) , statusStr , nodeNote )"		3114476	0					
ANR	3114868	Callee	fprintf		3114476	0					
ANR	3114869	Identifier	fprintf		3114476	0					
ANR	3114870	ArgumentList	outfile		3114476	1					
ANR	3114871	Argument	outfile		3114476	0					
ANR	3114872	Identifier	outfile		3114476	0					
ANR	3114873	Argument	"""JOB %s %s (%s)\\n"""		3114476	1					
ANR	3114874	PrimaryExpression	"""JOB %s %s (%s)\\n"""		3114476	0					
ANR	3114875	Argument	node -> GetJobName ( )		3114476	2					
ANR	3114876	CallExpression	node -> GetJobName ( )		3114476	0					
ANR	3114877	Callee	node -> GetJobName		3114476	0					
ANR	3114878	PtrMemberAccess	node -> GetJobName		3114476	0					
ANR	3114879	Identifier	node		3114476	0					
ANR	3114880	Identifier	GetJobName		3114476	1					
ANR	3114881	ArgumentList			3114476	1					
ANR	3114882	Argument	statusStr		3114476	3					
ANR	3114883	Identifier	statusStr		3114476	0					
ANR	3114884	Argument	nodeNote		3114476	4					
ANR	3114885	Identifier	nodeNote		3114476	0					
ANR	3114886	IdentifierDeclStatement	Job :: status_t dagStatus = Job :: STATUS_SUBMITTED ;	2625:1:79903:79950	3114476	23	True				
ANR	3114887	IdentifierDecl	dagStatus = Job :: STATUS_SUBMITTED		3114476	0					
ANR	3114888	IdentifierDeclType	Job :: status_t		3114476	0					
ANR	3114889	Identifier	dagStatus		3114476	1					
ANR	3114890	AssignmentExpression	dagStatus = Job :: STATUS_SUBMITTED		3114476	2		=			
ANR	3114891	Identifier	Job :: STATUS_SUBMITTED		3114476	0					
ANR	3114892	Identifier	Job :: STATUS_SUBMITTED		3114476	1					
ANR	3114893	IdentifierDeclStatement	"const char * statusNote = """" ;"	2626:1:79953:79980	3114476	24	True				
ANR	3114894	IdentifierDecl	"* statusNote = """""		3114476	0					
ANR	3114895	IdentifierDeclType	const char *		3114476	0					
ANR	3114896	Identifier	statusNote		3114476	1					
ANR	3114897	AssignmentExpression	"* statusNote = """""		3114476	2		=			
ANR	3114898	Identifier	statusNote		3114476	0					
ANR	3114899	PrimaryExpression	""""""		3114476	1					
ANR	3114900	IfStatement	if ( DoneSuccess ( ) )		3114476	25					
ANR	3114901	Condition	DoneSuccess ( )	2627:6:79988:80000	3114476	0	True				
ANR	3114902	CallExpression	DoneSuccess ( )		3114476	0					
ANR	3114903	Callee	DoneSuccess		3114476	0					
ANR	3114904	Identifier	DoneSuccess		3114476	0					
ANR	3114905	ArgumentList			3114476	1					
ANR	3114906	CompoundStatement		95:22:2755:2755	3114476	1					
ANR	3114907	ExpressionStatement	dagStatus = Job :: STATUS_DONE	2628:2:80008:80036	3114476	0	True				
ANR	3114908	AssignmentExpression	dagStatus = Job :: STATUS_DONE		3114476	0		=			
ANR	3114909	Identifier	dagStatus		3114476	0					
ANR	3114910	Identifier	Job :: STATUS_DONE		3114476	1					
ANR	3114911	ExpressionStatement	"statusNote = ""success"""	2629:2:80040:80062	3114476	1	True				
ANR	3114912	AssignmentExpression	"statusNote = ""success"""		3114476	0		=			
ANR	3114913	Identifier	statusNote		3114476	0					
ANR	3114914	PrimaryExpression	"""success"""		3114476	1					
ANR	3114915	ElseStatement	else		3114476	0					
ANR	3114916	IfStatement	if ( DoneFailed ( ) )		3114476	0					
ANR	3114917	Condition	DoneFailed ( )	2630:13:80077:80088	3114476	0	True				
ANR	3114918	CallExpression	DoneFailed ( )		3114476	0					
ANR	3114919	Callee	DoneFailed		3114476	0					
ANR	3114920	Identifier	DoneFailed		3114476	0					
ANR	3114921	ArgumentList			3114476	1					
ANR	3114922	CompoundStatement		98:28:2843:2843	3114476	1					
ANR	3114923	ExpressionStatement	dagStatus = Job :: STATUS_ERROR	2631:2:80096:80125	3114476	0	True				
ANR	3114924	AssignmentExpression	dagStatus = Job :: STATUS_ERROR		3114476	0		=			
ANR	3114925	Identifier	dagStatus		3114476	0					
ANR	3114926	Identifier	Job :: STATUS_ERROR		3114476	1					
ANR	3114927	ExpressionStatement	"statusNote = ""failed"""	2632:2:80129:80150	3114476	1	True				
ANR	3114928	AssignmentExpression	"statusNote = ""failed"""		3114476	0		=			
ANR	3114929	Identifier	statusNote		3114476	0					
ANR	3114930	PrimaryExpression	"""failed"""		3114476	1					
ANR	3114931	ElseStatement	else		3114476	0					
ANR	3114932	IfStatement	if ( DoneCycle ( ) )		3114476	0					
ANR	3114933	Condition	DoneCycle ( )	2633:13:80165:80175	3114476	0	True				
ANR	3114934	CallExpression	DoneCycle ( )		3114476	0					
ANR	3114935	Callee	DoneCycle		3114476	0					
ANR	3114936	Identifier	DoneCycle		3114476	0					
ANR	3114937	ArgumentList			3114476	1					
ANR	3114938	CompoundStatement		101:27:2930:2930	3114476	1					
ANR	3114939	ExpressionStatement	dagStatus = Job :: STATUS_ERROR	2634:2:80183:80212	3114476	0	True				
ANR	3114940	AssignmentExpression	dagStatus = Job :: STATUS_ERROR		3114476	0		=			
ANR	3114941	Identifier	dagStatus		3114476	0					
ANR	3114942	Identifier	Job :: STATUS_ERROR		3114476	1					
ANR	3114943	ExpressionStatement	"statusNote = ""cycle"""	2635:2:80216:80236	3114476	1	True				
ANR	3114944	AssignmentExpression	"statusNote = ""cycle"""		3114476	0		=			
ANR	3114945	Identifier	statusNote		3114476	0					
ANR	3114946	PrimaryExpression	"""cycle"""		3114476	1					
ANR	3114947	ElseStatement	else		3114476	0					
ANR	3114948	IfStatement	if ( held )		3114476	0					
ANR	3114949	Condition	held	2636:13:80251:80254	3114476	0	True				
ANR	3114950	Identifier	held		3114476	0					
ANR	3114951	CompoundStatement		104:20:3009:3009	3114476	1					
ANR	3114952	ExpressionStatement	"statusNote = ""held"""	2637:2:80262:80281	3114476	0	True				
ANR	3114953	AssignmentExpression	"statusNote = ""held"""		3114476	0		=			
ANR	3114954	Identifier	statusNote		3114476	0					
ANR	3114955	PrimaryExpression	"""held"""		3114476	1					
ANR	3114956	ElseStatement	else		3114476	0					
ANR	3114957	IfStatement	if ( removed )		3114476	0					
ANR	3114958	Condition	removed	2638:13:80296:80302	3114476	0	True				
ANR	3114959	Identifier	removed		3114476	0					
ANR	3114960	CompoundStatement		106:23:3057:3057	3114476	1					
ANR	3114961	ExpressionStatement	dagStatus = Job :: STATUS_ERROR	2639:2:80310:80339	3114476	0	True				
ANR	3114962	AssignmentExpression	dagStatus = Job :: STATUS_ERROR		3114476	0		=			
ANR	3114963	Identifier	dagStatus		3114476	0					
ANR	3114964	Identifier	Job :: STATUS_ERROR		3114476	1					
ANR	3114965	ExpressionStatement	"statusNote = ""removed"""	2640:2:80343:80365	3114476	1	True				
ANR	3114966	AssignmentExpression	"statusNote = ""removed"""		3114476	0		=			
ANR	3114967	Identifier	statusNote		3114476	0					
ANR	3114968	PrimaryExpression	"""removed"""		3114476	1					
ANR	3114969	ExpressionStatement	"fprintf ( outfile , ""\\nDAG status: %s (%s)\\n"" , Job :: status_t_names [ dagStatus ] , statusNote )"	2642:1:80371:80464	3114476	26	True				
ANR	3114970	CallExpression	"fprintf ( outfile , ""\\nDAG status: %s (%s)\\n"" , Job :: status_t_names [ dagStatus ] , statusNote )"		3114476	0					
ANR	3114971	Callee	fprintf		3114476	0					
ANR	3114972	Identifier	fprintf		3114476	0					
ANR	3114973	ArgumentList	outfile		3114476	1					
ANR	3114974	Argument	outfile		3114476	0					
ANR	3114975	Identifier	outfile		3114476	0					
ANR	3114976	Argument	"""\\nDAG status: %s (%s)\\n"""		3114476	1					
ANR	3114977	PrimaryExpression	"""\\nDAG status: %s (%s)\\n"""		3114476	0					
ANR	3114978	Argument	Job :: status_t_names [ dagStatus ]		3114476	2					
ANR	3114979	ArrayIndexing	Job :: status_t_names [ dagStatus ]		3114476	0					
ANR	3114980	Identifier	Job :: status_t_names		3114476	0					
ANR	3114981	Identifier	dagStatus		3114476	1					
ANR	3114982	Argument	statusNote		3114476	3					
ANR	3114983	Identifier	statusNote		3114476	0					
ANR	3114984	IdentifierDeclStatement	time_t endTime = time ( NULL ) ;	2648:1:80497:80526	3114476	27	True				
ANR	3114985	IdentifierDecl	endTime = time ( NULL )		3114476	0					
ANR	3114986	IdentifierDeclType	time_t		3114476	0					
ANR	3114987	Identifier	endTime		3114476	1					
ANR	3114988	AssignmentExpression	endTime = time ( NULL )		3114476	2		=			
ANR	3114989	Identifier	endTime		3114476	0					
ANR	3114990	CallExpression	time ( NULL )		3114476	1					
ANR	3114991	Callee	time		3114476	0					
ANR	3114992	Identifier	time		3114476	0					
ANR	3114993	ArgumentList	NULL		3114476	1					
ANR	3114994	Argument	NULL		3114476	0					
ANR	3114995	Identifier	NULL		3114476	0					
ANR	3114996	ExpressionStatement	"fprintf ( outfile , ""Next scheduled update: "" )"	2650:1:80530:80575	3114476	28	True				
ANR	3114997	CallExpression	"fprintf ( outfile , ""Next scheduled update: "" )"		3114476	0					
ANR	3114998	Callee	fprintf		3114476	0					
ANR	3114999	Identifier	fprintf		3114476	0					
ANR	3115000	ArgumentList	outfile		3114476	1					
ANR	3115001	Argument	outfile		3114476	0					
ANR	3115002	Identifier	outfile		3114476	0					
ANR	3115003	Argument	"""Next scheduled update: """		3114476	1					
ANR	3115004	PrimaryExpression	"""Next scheduled update: """		3114476	0					
ANR	3115005	IfStatement	if ( FinishedRunning ( ) || removed )		3114476	29					
ANR	3115006	Condition	FinishedRunning ( ) || removed	2651:6:80583:80610	3114476	0	True				
ANR	3115007	OrExpression	FinishedRunning ( ) || removed		3114476	0		||			
ANR	3115008	CallExpression	FinishedRunning ( )		3114476	0					
ANR	3115009	Callee	FinishedRunning		3114476	0					
ANR	3115010	Identifier	FinishedRunning		3114476	0					
ANR	3115011	ArgumentList			3114476	1					
ANR	3115012	Identifier	removed		3114476	1					
ANR	3115013	CompoundStatement		119:37:3365:3365	3114476	1					
ANR	3115014	ExpressionStatement	"fprintf ( outfile , ""none\\n"" )"	2652:2:80618:80646	3114476	0	True				
ANR	3115015	CallExpression	"fprintf ( outfile , ""none\\n"" )"		3114476	0					
ANR	3115016	Callee	fprintf		3114476	0					
ANR	3115017	Identifier	fprintf		3114476	0					
ANR	3115018	ArgumentList	outfile		3114476	1					
ANR	3115019	Argument	outfile		3114476	0					
ANR	3115020	Identifier	outfile		3114476	0					
ANR	3115021	Argument	"""none\\n"""		3114476	1					
ANR	3115022	PrimaryExpression	"""none\\n"""		3114476	0					
ANR	3115023	ElseStatement	else		3114476	0					
ANR	3115024	CompoundStatement		122:2:3411:3459	3114476	0					
ANR	3115025	IdentifierDeclStatement	time_t nextTime = endTime + _minStatusUpdateTime ;	2654:2:80660:80708	3114476	0	True				
ANR	3115026	IdentifierDecl	nextTime = endTime + _minStatusUpdateTime		3114476	0					
ANR	3115027	IdentifierDeclType	time_t		3114476	0					
ANR	3115028	Identifier	nextTime		3114476	1					
ANR	3115029	AssignmentExpression	nextTime = endTime + _minStatusUpdateTime		3114476	2		=			
ANR	3115030	Identifier	nextTime		3114476	0					
ANR	3115031	AdditiveExpression	endTime + _minStatusUpdateTime		3114476	1		+			
ANR	3115032	Identifier	endTime		3114476	0					
ANR	3115033	Identifier	_minStatusUpdateTime		3114476	1					
ANR	3115034	ExpressionStatement	timeStr = ctime ( & nextTime )	2655:2:80712:80740	3114476	1	True				
ANR	3115035	AssignmentExpression	timeStr = ctime ( & nextTime )		3114476	0		=			
ANR	3115036	Identifier	timeStr		3114476	0					
ANR	3115037	CallExpression	ctime ( & nextTime )		3114476	1					
ANR	3115038	Callee	ctime		3114476	0					
ANR	3115039	Identifier	ctime		3114476	0					
ANR	3115040	ArgumentList	& nextTime		3114476	1					
ANR	3115041	Argument	& nextTime		3114476	0					
ANR	3115042	UnaryOperationExpression	& nextTime		3114476	0					
ANR	3115043	UnaryOperator	&		3114476	0					
ANR	3115044	Identifier	nextTime		3114476	1					
ANR	3115045	ExpressionStatement	"newline = strchr ( timeStr , '\\n' )"	2656:2:80744:80775	3114476	2	True				
ANR	3115046	AssignmentExpression	"newline = strchr ( timeStr , '\\n' )"		3114476	0		=			
ANR	3115047	Identifier	newline		3114476	0					
ANR	3115048	CallExpression	"strchr ( timeStr , '\\n' )"		3114476	1					
ANR	3115049	Callee	strchr		3114476	0					
ANR	3115050	Identifier	strchr		3114476	0					
ANR	3115051	ArgumentList	timeStr		3114476	1					
ANR	3115052	Argument	timeStr		3114476	0					
ANR	3115053	Identifier	timeStr		3114476	0					
ANR	3115054	Argument	'\\n'		3114476	1					
ANR	3115055	PrimaryExpression	'\\n'		3114476	0					
ANR	3115056	IfStatement	if ( newline != NULL )		3114476	3					
ANR	3115057	Condition	newline != NULL	2657:6:80783:80797	3114476	0	True				
ANR	3115058	EqualityExpression	newline != NULL		3114476	0		!=			
ANR	3115059	Identifier	newline		3114476	0					
ANR	3115060	Identifier	NULL		3114476	1					
ANR	3115061	CompoundStatement		125:23:3551:3551	3114476	1					
ANR	3115062	ExpressionStatement	* newline = 0	2658:3:80805:80817	3114476	0	True				
ANR	3115063	AssignmentExpression	* newline = 0		3114476	0		=			
ANR	3115064	UnaryOperationExpression	* newline		3114476	0					
ANR	3115065	UnaryOperator	*		3114476	0					
ANR	3115066	Identifier	newline		3114476	1					
ANR	3115067	PrimaryExpression	0		3114476	1					
ANR	3115068	ExpressionStatement	"fprintf ( outfile , ""%lu (%s)\\n"" , ( unsigned long ) nextTime , timeStr )"	2660:2:80825:80891	3114476	4	True				
ANR	3115069	CallExpression	"fprintf ( outfile , ""%lu (%s)\\n"" , ( unsigned long ) nextTime , timeStr )"		3114476	0					
ANR	3115070	Callee	fprintf		3114476	0					
ANR	3115071	Identifier	fprintf		3114476	0					
ANR	3115072	ArgumentList	outfile		3114476	1					
ANR	3115073	Argument	outfile		3114476	0					
ANR	3115074	Identifier	outfile		3114476	0					
ANR	3115075	Argument	"""%lu (%s)\\n"""		3114476	1					
ANR	3115076	PrimaryExpression	"""%lu (%s)\\n"""		3114476	0					
ANR	3115077	Argument	( unsigned long ) nextTime		3114476	2					
ANR	3115078	CastExpression	( unsigned long ) nextTime		3114476	0					
ANR	3115079	CastTarget	unsigned long		3114476	0					
ANR	3115080	Identifier	nextTime		3114476	1					
ANR	3115081	Argument	timeStr		3114476	3					
ANR	3115082	Identifier	timeStr		3114476	0					
ANR	3115083	ExpressionStatement	timeStr = ctime ( & endTime )	2663:1:80898:80925	3114476	30	True				
ANR	3115084	AssignmentExpression	timeStr = ctime ( & endTime )		3114476	0		=			
ANR	3115085	Identifier	timeStr		3114476	0					
ANR	3115086	CallExpression	ctime ( & endTime )		3114476	1					
ANR	3115087	Callee	ctime		3114476	0					
ANR	3115088	Identifier	ctime		3114476	0					
ANR	3115089	ArgumentList	& endTime		3114476	1					
ANR	3115090	Argument	& endTime		3114476	0					
ANR	3115091	UnaryOperationExpression	& endTime		3114476	0					
ANR	3115092	UnaryOperator	&		3114476	0					
ANR	3115093	Identifier	endTime		3114476	1					
ANR	3115094	ExpressionStatement	"newline = strchr ( timeStr , '\\n' )"	2664:1:80928:80959	3114476	31	True				
ANR	3115095	AssignmentExpression	"newline = strchr ( timeStr , '\\n' )"		3114476	0		=			
ANR	3115096	Identifier	newline		3114476	0					
ANR	3115097	CallExpression	"strchr ( timeStr , '\\n' )"		3114476	1					
ANR	3115098	Callee	strchr		3114476	0					
ANR	3115099	Identifier	strchr		3114476	0					
ANR	3115100	ArgumentList	timeStr		3114476	1					
ANR	3115101	Argument	timeStr		3114476	0					
ANR	3115102	Identifier	timeStr		3114476	0					
ANR	3115103	Argument	'\\n'		3114476	1					
ANR	3115104	PrimaryExpression	'\\n'		3114476	0					
ANR	3115105	IfStatement	if ( newline != NULL )		3114476	32					
ANR	3115106	Condition	newline != NULL	2665:5:80966:80980	3114476	0	True				
ANR	3115107	EqualityExpression	newline != NULL		3114476	0		!=			
ANR	3115108	Identifier	newline		3114476	0					
ANR	3115109	Identifier	NULL		3114476	1					
ANR	3115110	CompoundStatement		133:22:3734:3734	3114476	1					
ANR	3115111	ExpressionStatement	* newline = 0	2666:2:80987:80999	3114476	0	True				
ANR	3115112	AssignmentExpression	* newline = 0		3114476	0		=			
ANR	3115113	UnaryOperationExpression	* newline		3114476	0					
ANR	3115114	UnaryOperator	*		3114476	0					
ANR	3115115	Identifier	newline		3114476	1					
ANR	3115116	PrimaryExpression	0		3114476	1					
ANR	3115117	ExpressionStatement	"fprintf ( outfile , ""END %lu (%s)\\n"" , ( unsigned long ) endTime , timeStr )"	2668:1:81005:81078	3114476	33	True				
ANR	3115118	CallExpression	"fprintf ( outfile , ""END %lu (%s)\\n"" , ( unsigned long ) endTime , timeStr )"		3114476	0					
ANR	3115119	Callee	fprintf		3114476	0					
ANR	3115120	Identifier	fprintf		3114476	0					
ANR	3115121	ArgumentList	outfile		3114476	1					
ANR	3115122	Argument	outfile		3114476	0					
ANR	3115123	Identifier	outfile		3114476	0					
ANR	3115124	Argument	"""END %lu (%s)\\n"""		3114476	1					
ANR	3115125	PrimaryExpression	"""END %lu (%s)\\n"""		3114476	0					
ANR	3115126	Argument	( unsigned long ) endTime		3114476	2					
ANR	3115127	CastExpression	( unsigned long ) endTime		3114476	0					
ANR	3115128	CastTarget	unsigned long		3114476	0					
ANR	3115129	Identifier	endTime		3114476	1					
ANR	3115130	Argument	timeStr		3114476	3					
ANR	3115131	Identifier	timeStr		3114476	0					
ANR	3115132	ExpressionStatement	fclose ( outfile )	2671:1:81082:81099	3114476	34	True				
ANR	3115133	CallExpression	fclose ( outfile )		3114476	0					
ANR	3115134	Callee	fclose		3114476	0					
ANR	3115135	Identifier	fclose		3114476	0					
ANR	3115136	ArgumentList	outfile		3114476	1					
ANR	3115137	Argument	outfile		3114476	0					
ANR	3115138	Identifier	outfile		3114476	0					
ANR	3115139	IfStatement	"if ( rename ( tmpStatusFile . Value ( ) , _statusFileName ) != 0 )"		3114476	35					
ANR	3115140	Condition	"rename ( tmpStatusFile . Value ( ) , _statusFileName ) != 0"	2676:6:81173:81225	3114476	0	True				
ANR	3115141	EqualityExpression	"rename ( tmpStatusFile . Value ( ) , _statusFileName ) != 0"		3114476	0		!=			
ANR	3115142	CallExpression	"rename ( tmpStatusFile . Value ( ) , _statusFileName )"		3114476	0					
ANR	3115143	Callee	rename		3114476	0					
ANR	3115144	Identifier	rename		3114476	0					
ANR	3115145	ArgumentList	tmpStatusFile . Value ( )		3114476	1					
ANR	3115146	Argument	tmpStatusFile . Value ( )		3114476	0					
ANR	3115147	CallExpression	tmpStatusFile . Value ( )		3114476	0					
ANR	3115148	Callee	tmpStatusFile . Value		3114476	0					
ANR	3115149	MemberAccess	tmpStatusFile . Value		3114476	0					
ANR	3115150	Identifier	tmpStatusFile		3114476	0					
ANR	3115151	Identifier	Value		3114476	1					
ANR	3115152	ArgumentList			3114476	1					
ANR	3115153	Argument	_statusFileName		3114476	1					
ANR	3115154	Identifier	_statusFileName		3114476	0					
ANR	3115155	PrimaryExpression	0		3114476	1					
ANR	3115156	CompoundStatement		144:62:3980:3980	3114476	1					
ANR	3115157	Statement	debug_printf	2677:2:81233:81244	3114476	0	True				
ANR	3115158	Statement	(	2677:14:81245:81245	3114476	1	True				
ANR	3115159	Statement	DEBUG_NORMAL	2677:16:81247:81258	3114476	2	True				
ANR	3115160	Statement	","	2677:28:81259:81259	3114476	3	True				
ANR	3115161	Statement	"""Warning: can't rename temporary node status """	2678:7:81268:81313	3114476	4	True				
ANR	3115162	Statement	"""file (%s) to permanent file (%s): %s\\n"""	2679:7:81322:81361	3114476	5	True				
ANR	3115163	Statement	","	2679:47:81362:81362	3114476	6	True				
ANR	3115164	Statement	tmpStatusFile	2680:7:81371:81383	3114476	7	True				
ANR	3115165	Statement	.	2680:20:81384:81384	3114476	8	True				
ANR	3115166	Statement	Value	2680:21:81385:81389	3114476	9	True				
ANR	3115167	Statement	(	2680:26:81390:81390	3114476	10	True				
ANR	3115168	Statement	)	2680:27:81391:81391	3114476	11	True				
ANR	3115169	Statement	","	2680:28:81392:81392	3114476	12	True				
ANR	3115170	Statement	_statusFileName	2680:30:81394:81408	3114476	13	True				
ANR	3115171	Statement	","	2680:45:81409:81409	3114476	14	True				
ANR	3115172	Statement	strerror	2681:7:81418:81425	3114476	15	True				
ANR	3115173	Statement	(	2681:15:81426:81426	3114476	16	True				
ANR	3115174	Statement	errno	2681:17:81428:81432	3114476	17	True				
ANR	3115175	Statement	)	2681:23:81434:81434	3114476	18	True				
ANR	3115176	Statement	)	2681:25:81436:81436	3114476	19	True				
ANR	3115177	ExpressionStatement		2681:26:81437:81437	3114476	20	True				
ANR	3115178	ExpressionStatement	check_warning_strictness ( DAG_STRICT_1 )	2682:2:81441:81481	3114476	21	True				
ANR	3115179	CallExpression	check_warning_strictness ( DAG_STRICT_1 )		3114476	0					
ANR	3115180	Callee	check_warning_strictness		3114476	0					
ANR	3115181	Identifier	check_warning_strictness		3114476	0					
ANR	3115182	ArgumentList	DAG_STRICT_1		3114476	1					
ANR	3115183	Argument	DAG_STRICT_1		3114476	0					
ANR	3115184	Identifier	DAG_STRICT_1		3114476	0					
ANR	3115185	ReturnStatement	return ;	2683:2:81485:81491	3114476	22	True				
ANR	3115186	ExpressionStatement	_statusFileOutdated = false	2686:1:81498:81525	3114476	36	True				
ANR	3115187	AssignmentExpression	_statusFileOutdated = false		3114476	0		=			
ANR	3115188	Identifier	_statusFileOutdated		3114476	0					
ANR	3115189	Identifier	false		3114476	1					
ANR	3115190	ExpressionStatement	_lastStatusUpdateTimestamp = startTime	2687:1:81528:81566	3114476	37	True				
ANR	3115191	AssignmentExpression	_lastStatusUpdateTimestamp = startTime		3114476	0		=			
ANR	3115192	Identifier	_lastStatusUpdateTimestamp		3114476	0					
ANR	3115193	Identifier	startTime		3114476	1					
ANR	3115194	ReturnType	void		3114476	1					
ANR	3115195	Identifier	Dag :: DumpNodeStatus		3114476	2					
ANR	3115196	ParameterList	"bool held , bool removed"		3114476	3					
ANR	3115197	Parameter	bool held	2532:21:77222:77230	3114476	0	True				
ANR	3115198	ParameterType	bool		3114476	0					
ANR	3115199	Identifier	held		3114476	1					
ANR	3115200	Parameter	bool removed	2532:32:77233:77244	3114476	1	True				
ANR	3115201	ParameterType	bool		3114476	0					
ANR	3115202	Identifier	removed		3114476	1					
ANR	3115203	CFGEntryNode	ENTRY		3114476		True				
ANR	3115204	CFGExitNode	EXIT		3114476		True				
ANR	3115205	Symbol	node -> GetStatus		3114476						
ANR	3115206	Symbol	FinishedRunning		3114476						
ANR	3115207	Symbol	held		3114476						
ANR	3115208	Symbol	nextTime		3114476						
ANR	3115209	Symbol	strchr		3114476						
ANR	3115210	Symbol	DEBUG_NORMAL		3114476						
ANR	3115211	Symbol	timeStr		3114476						
ANR	3115212	Symbol	_dagFiles		3114476						
ANR	3115213	Symbol	_dagFiles . next		3114476						
ANR	3115214	Symbol	tmpStatusFile . Value		3114476						
ANR	3115215	Symbol	newline		3114476						
ANR	3115216	Symbol	it . Next		3114476						
ANR	3115217	Symbol	ctime		3114476						
ANR	3115218	Symbol	Job :: STATUS_DONE		3114476						
ANR	3115219	Symbol	* node		3114476						
ANR	3115220	Symbol	DoneCycle		3114476						
ANR	3115221	Symbol	node -> CanSubmit		3114476						
ANR	3115222	Symbol	tmpStatusFile		3114476						
ANR	3115223	Symbol	errno		3114476						
ANR	3115224	Symbol	NULL		3114476						
ANR	3115225	Symbol	node -> GetJobName		3114476						
ANR	3115226	Symbol	* node -> GetStatus		3114476						
ANR	3115227	Symbol	it		3114476						
ANR	3115228	Symbol	tooSoon		3114476						
ANR	3115229	Symbol	strerror		3114476						
ANR	3115230	Symbol	node		3114476						
ANR	3115231	Symbol	* dagStatus		3114476						
ANR	3115232	Symbol	* Job :: status_t_names		3114476						
ANR	3115233	Symbol	* * node		3114476						
ANR	3115234	Symbol	DoneFailed		3114476						
ANR	3115235	Symbol	statusNote		3114476						
ANR	3115236	Symbol	& nextTime		3114476						
ANR	3115237	Symbol	DoneSuccess		3114476						
ANR	3115238	Symbol	statusStr		3114476						
ANR	3115239	Symbol	Job :: status_t_names		3114476						
ANR	3115240	Symbol	outfile		3114476						
ANR	3115241	Symbol	& endTime		3114476						
ANR	3115242	Symbol	Job :: STATUS_READY		3114476						
ANR	3115243	Symbol	DAG_STRICT_1		3114476						
ANR	3115244	Symbol	startTime		3114476						
ANR	3115245	Symbol	DEBUG_DEBUG_1		3114476						
ANR	3115246	Symbol	_minStatusUpdateTime		3114476						
ANR	3115247	Symbol	safe_fopen_wrapper_follow		3114476						
ANR	3115248	Symbol	& startTime		3114476						
ANR	3115249	Symbol	dagFile		3114476						
ANR	3115250	Symbol	Job :: STATUS_ERROR		3114476						
ANR	3115251	Symbol	false		3114476						
ANR	3115252	Symbol	_statusFileOutdated		3114476						
ANR	3115253	Symbol	node -> GetIsIdle		3114476						
ANR	3115254	Symbol	node -> error_text		3114476						
ANR	3115255	Symbol	Job :: STATUS_SUBMITTED		3114476						
ANR	3115256	Symbol	removed		3114476						
ANR	3115257	Symbol	_statusFileName		3114476						
ANR	3115258	Symbol	_lastStatusUpdateTimestamp		3114476						
ANR	3115259	Symbol	rename		3114476						
ANR	3115260	Symbol	* newline		3114476						
ANR	3115261	Symbol	nodeNote		3114476						
ANR	3115262	Symbol	time		3114476						
ANR	3115263	Symbol	endTime		3114476						
ANR	3115264	Symbol	dagStatus		3114476						
ANR	3115265	Function	Dag :: SetReject	2691:0:81647:81779							
ANR	3115266	FunctionDef	Dag :: SetReject (const MyString & location)		3115265	0					
ANR	3115267	CompoundStatement		2693:0:81695:81779	3115265	0					
ANR	3115268	IfStatement	"if ( _firstRejectLoc == """" )"		3115265	0					
ANR	3115269	Condition	"_firstRejectLoc == """""	2694:6:81703:81723	3115265	0	True				
ANR	3115270	EqualityExpression	"_firstRejectLoc == """""		3115265	0		==			
ANR	3115271	Identifier	_firstRejectLoc		3115265	0					
ANR	3115272	PrimaryExpression	""""""		3115265	1					
ANR	3115273	CompoundStatement		2:30:31:31	3115265	1					
ANR	3115274	ExpressionStatement	_firstRejectLoc = location	2695:2:81731:81757	3115265	0	True				
ANR	3115275	AssignmentExpression	_firstRejectLoc = location		3115265	0		=			
ANR	3115276	Identifier	_firstRejectLoc		3115265	0					
ANR	3115277	Identifier	location		3115265	1					
ANR	3115278	ExpressionStatement	_reject = true	2697:1:81763:81777	3115265	1	True				
ANR	3115279	AssignmentExpression	_reject = true		3115265	0		=			
ANR	3115280	Identifier	_reject		3115265	0					
ANR	3115281	Identifier	true		3115265	1					
ANR	3115282	ReturnType	void		3115265	1					
ANR	3115283	Identifier	Dag :: SetReject		3115265	2					
ANR	3115284	ParameterList	const MyString & location		3115265	3					
ANR	3115285	Parameter	const MyString & location	2692:16:81668:81691	3115265	0	True				
ANR	3115286	ParameterType	const MyString &		3115265	0					
ANR	3115287	Identifier	location		3115265	1					
ANR	3115288	CFGEntryNode	ENTRY		3115265		True				
ANR	3115289	CFGExitNode	EXIT		3115265		True				
ANR	3115290	Symbol	_firstRejectLoc		3115265						
ANR	3115291	Symbol	_reject		3115265						
ANR	3115292	Symbol	true		3115265						
ANR	3115293	Symbol	location		3115265						
ANR	3115294	Function	Dag :: GetReject	2701:0:81858:81958							
ANR	3115295	FunctionDef	Dag :: GetReject (MyString & firstLocation)		3115294	0					
ANR	3115296	CompoundStatement		2703:0:81905:81958	3115294	0					
ANR	3115297	ExpressionStatement	firstLocation = _firstRejectLoc	2704:1:81908:81939	3115294	0	True				
ANR	3115298	AssignmentExpression	firstLocation = _firstRejectLoc		3115294	0		=			
ANR	3115299	Identifier	firstLocation		3115294	0					
ANR	3115300	Identifier	_firstRejectLoc		3115294	1					
ANR	3115301	ReturnStatement	return _reject ;	2705:1:81942:81956	3115294	1	True				
ANR	3115302	Identifier	_reject		3115294	0					
ANR	3115303	ReturnType	bool		3115294	1					
ANR	3115304	Identifier	Dag :: GetReject		3115294	2					
ANR	3115305	ParameterList	MyString & firstLocation		3115294	3					
ANR	3115306	Parameter	MyString & firstLocation	2702:16:81879:81901	3115294	0	True				
ANR	3115307	ParameterType	MyString &		3115294	0					
ANR	3115308	Identifier	firstLocation		3115294	1					
ANR	3115309	CFGEntryNode	ENTRY		3115294		True				
ANR	3115310	CFGExitNode	EXIT		3115294		True				
ANR	3115311	Symbol	_firstRejectLoc		3115294						
ANR	3115312	Symbol	firstLocation		3115294						
ANR	3115313	Symbol	_reject		3115294						
ANR	3115314	Function	Dag :: SetJobstateLogFileName	2713:0:82146:82464							
ANR	3115315	FunctionDef	Dag :: SetJobstateLogFileName (const char * logFileName)		3115314	0					
ANR	3115316	CompoundStatement		2715:0:82207:82464	3115314	0					
ANR	3115317	IfStatement	if ( _jobstateLog . LogFile ( ) != NULL )		3115314	0					
ANR	3115318	Condition	_jobstateLog . LogFile ( ) != NULL	2716:6:82215:82244	3115314	0	True				
ANR	3115319	EqualityExpression	_jobstateLog . LogFile ( ) != NULL		3115314	0		!=			
ANR	3115320	CallExpression	_jobstateLog . LogFile ( )		3115314	0					
ANR	3115321	Callee	_jobstateLog . LogFile		3115314	0					
ANR	3115322	MemberAccess	_jobstateLog . LogFile		3115314	0					
ANR	3115323	Identifier	_jobstateLog		3115314	0					
ANR	3115324	Identifier	LogFile		3115314	1					
ANR	3115325	ArgumentList			3115314	1					
ANR	3115326	Identifier	NULL		3115314	1					
ANR	3115327	CompoundStatement		2:39:40:40	3115314	1					
ANR	3115328	Statement	debug_printf	2717:2:82252:82263	3115314	0	True				
ANR	3115329	Statement	(	2717:14:82264:82264	3115314	1	True				
ANR	3115330	Statement	DEBUG_NORMAL	2717:16:82266:82277	3115314	2	True				
ANR	3115331	Statement	","	2717:28:82278:82278	3115314	3	True				
ANR	3115332	Statement	"""Attempt to set JOBSTATE_LOG """	2717:30:82280:82309	3115314	4	True				
ANR	3115333	Statement	"""to %s does not override existing value of %s\\n"""	2718:5:82316:82363	3115314	5	True				
ANR	3115334	Statement	","	2718:53:82364:82364	3115314	6	True				
ANR	3115335	Statement	logFileName	2719:5:82371:82381	3115314	7	True				
ANR	3115336	Statement	","	2719:16:82382:82382	3115314	8	True				
ANR	3115337	Statement	_jobstateLog	2719:18:82384:82395	3115314	9	True				
ANR	3115338	Statement	.	2719:30:82396:82396	3115314	10	True				
ANR	3115339	Statement	LogFile	2719:31:82397:82403	3115314	11	True				
ANR	3115340	Statement	(	2719:38:82404:82404	3115314	12	True				
ANR	3115341	Statement	)	2719:39:82405:82405	3115314	13	True				
ANR	3115342	Statement	)	2719:41:82407:82407	3115314	14	True				
ANR	3115343	ExpressionStatement		2719:42:82408:82408	3115314	15	True				
ANR	3115344	ReturnStatement	return ;	2720:2:82412:82418	3115314	16	True				
ANR	3115345	ExpressionStatement	_jobstateLog . SetLogFile ( logFileName )	2722:1:82424:82462	3115314	1	True				
ANR	3115346	CallExpression	_jobstateLog . SetLogFile ( logFileName )		3115314	0					
ANR	3115347	Callee	_jobstateLog . SetLogFile		3115314	0					
ANR	3115348	MemberAccess	_jobstateLog . SetLogFile		3115314	0					
ANR	3115349	Identifier	_jobstateLog		3115314	0					
ANR	3115350	Identifier	SetLogFile		3115314	1					
ANR	3115351	ArgumentList	logFileName		3115314	1					
ANR	3115352	Argument	logFileName		3115314	0					
ANR	3115353	Identifier	logFileName		3115314	0					
ANR	3115354	ReturnType	void		3115314	1					
ANR	3115355	Identifier	Dag :: SetJobstateLogFileName		3115314	2					
ANR	3115356	ParameterList	const char * logFileName		3115314	3					
ANR	3115357	Parameter	const char * logFileName	2714:29:82181:82203	3115314	0	True				
ANR	3115358	ParameterType	const char *		3115314	0					
ANR	3115359	Identifier	logFileName		3115314	1					
ANR	3115360	CFGEntryNode	ENTRY		3115314		True				
ANR	3115361	CFGExitNode	EXIT		3115314		True				
ANR	3115362	Symbol	_jobstateLog . LogFile		3115314						
ANR	3115363	Symbol	NULL		3115314						
ANR	3115364	Symbol	logFileName		3115314						
ANR	3115365	Symbol	_jobstateLog		3115314						
ANR	3115366	Function	Dag :: CheckAllJobs	2733:0:82795:83945							
ANR	3115367	FunctionDef	Dag :: CheckAllJobs ()		3115366	0					
ANR	3115368	CompoundStatement		2735:0:82820:83945	3115366	0					
ANR	3115369	IdentifierDeclStatement	CheckEvents :: check_event_result_t result ;	2736:1:82823:82863	3115366	0	True				
ANR	3115370	IdentifierDecl	result		3115366	0					
ANR	3115371	IdentifierDeclType	CheckEvents :: check_event_result_t		3115366	0					
ANR	3115372	Identifier	result		3115366	1					
ANR	3115373	IdentifierDeclStatement	MyString jobError ;	2737:1:82866:82883	3115366	1	True				
ANR	3115374	IdentifierDecl	jobError		3115366	0					
ANR	3115375	IdentifierDeclType	MyString		3115366	0					
ANR	3115376	Identifier	jobError		3115366	1					
ANR	3115377	ExpressionStatement	result = _checkCondorEvents . CheckAllJobs ( jobError )	2739:1:82887:82937	3115366	2	True				
ANR	3115378	AssignmentExpression	result = _checkCondorEvents . CheckAllJobs ( jobError )		3115366	0		=			
ANR	3115379	Identifier	result		3115366	0					
ANR	3115380	CallExpression	_checkCondorEvents . CheckAllJobs ( jobError )		3115366	1					
ANR	3115381	Callee	_checkCondorEvents . CheckAllJobs		3115366	0					
ANR	3115382	MemberAccess	_checkCondorEvents . CheckAllJobs		3115366	0					
ANR	3115383	Identifier	_checkCondorEvents		3115366	0					
ANR	3115384	Identifier	CheckAllJobs		3115366	1					
ANR	3115385	ArgumentList	jobError		3115366	1					
ANR	3115386	Argument	jobError		3115366	0					
ANR	3115387	Identifier	jobError		3115366	0					
ANR	3115388	IfStatement	if ( result == CheckEvents :: EVENT_ERROR )		3115366	3					
ANR	3115389	Condition	result == CheckEvents :: EVENT_ERROR	2740:6:82945:82978	3115366	0	True				
ANR	3115390	EqualityExpression	result == CheckEvents :: EVENT_ERROR		3115366	0		==			
ANR	3115391	Identifier	result		3115366	0					
ANR	3115392	Identifier	CheckEvents :: EVENT_ERROR		3115366	1					
ANR	3115393	CompoundStatement		6:43:161:161	3115366	1					
ANR	3115394	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""Error checking Condor job events: %s\\n"" , jobError . Value ( ) )"	2741:2:82986:83077	3115366	0	True				
ANR	3115395	CallExpression	"debug_printf ( DEBUG_QUIET , ""Error checking Condor job events: %s\\n"" , jobError . Value ( ) )"		3115366	0					
ANR	3115396	Callee	debug_printf		3115366	0					
ANR	3115397	Identifier	debug_printf		3115366	0					
ANR	3115398	ArgumentList	DEBUG_QUIET		3115366	1					
ANR	3115399	Argument	DEBUG_QUIET		3115366	0					
ANR	3115400	Identifier	DEBUG_QUIET		3115366	0					
ANR	3115401	Argument	"""Error checking Condor job events: %s\\n"""		3115366	1					
ANR	3115402	PrimaryExpression	"""Error checking Condor job events: %s\\n"""		3115366	0					
ANR	3115403	Argument	jobError . Value ( )		3115366	2					
ANR	3115404	CallExpression	jobError . Value ( )		3115366	0					
ANR	3115405	Callee	jobError . Value		3115366	0					
ANR	3115406	MemberAccess	jobError . Value		3115366	0					
ANR	3115407	Identifier	jobError		3115366	0					
ANR	3115408	Identifier	Value		3115366	1					
ANR	3115409	ArgumentList			3115366	1					
ANR	3115410	ExpressionStatement	ASSERT ( false )	2743:2:83081:83096	3115366	1	True				
ANR	3115411	CallExpression	ASSERT ( false )		3115366	0					
ANR	3115412	Callee	ASSERT		3115366	0					
ANR	3115413	Identifier	ASSERT		3115366	0					
ANR	3115414	ArgumentList	false		3115366	1					
ANR	3115415	Argument	false		3115366	0					
ANR	3115416	Identifier	false		3115366	0					
ANR	3115417	ElseStatement	else		3115366	0					
ANR	3115418	IfStatement	if ( result == CheckEvents :: EVENT_BAD_EVENT || result == CheckEvents :: EVENT_WARNING )		3115366	0					
ANR	3115419	Condition	result == CheckEvents :: EVENT_BAD_EVENT || result == CheckEvents :: EVENT_WARNING	2744:13:83111:83192	3115366	0	True				
ANR	3115420	OrExpression	result == CheckEvents :: EVENT_BAD_EVENT || result == CheckEvents :: EVENT_WARNING		3115366	0		||			
ANR	3115421	EqualityExpression	result == CheckEvents :: EVENT_BAD_EVENT		3115366	0		==			
ANR	3115422	Identifier	result		3115366	0					
ANR	3115423	Identifier	CheckEvents :: EVENT_BAD_EVENT		3115366	1					
ANR	3115424	EqualityExpression	result == CheckEvents :: EVENT_WARNING		3115366	1		==			
ANR	3115425	Identifier	result		3115366	0					
ANR	3115426	Identifier	CheckEvents :: EVENT_WARNING		3115366	1					
ANR	3115427	CompoundStatement		11:43:375:375	3115366	1					
ANR	3115428	ExpressionStatement	"debug_printf ( DEBUG_NORMAL , ""Warning checking Condor job events: %s\\n"" , jobError . Value ( ) )"	2746:2:83200:83294	3115366	0	True				
ANR	3115429	CallExpression	"debug_printf ( DEBUG_NORMAL , ""Warning checking Condor job events: %s\\n"" , jobError . Value ( ) )"		3115366	0					
ANR	3115430	Callee	debug_printf		3115366	0					
ANR	3115431	Identifier	debug_printf		3115366	0					
ANR	3115432	ArgumentList	DEBUG_NORMAL		3115366	1					
ANR	3115433	Argument	DEBUG_NORMAL		3115366	0					
ANR	3115434	Identifier	DEBUG_NORMAL		3115366	0					
ANR	3115435	Argument	"""Warning checking Condor job events: %s\\n"""		3115366	1					
ANR	3115436	PrimaryExpression	"""Warning checking Condor job events: %s\\n"""		3115366	0					
ANR	3115437	Argument	jobError . Value ( )		3115366	2					
ANR	3115438	CallExpression	jobError . Value ( )		3115366	0					
ANR	3115439	Callee	jobError . Value		3115366	0					
ANR	3115440	MemberAccess	jobError . Value		3115366	0					
ANR	3115441	Identifier	jobError		3115366	0					
ANR	3115442	Identifier	Value		3115366	1					
ANR	3115443	ArgumentList			3115366	1					
ANR	3115444	ExpressionStatement	check_warning_strictness ( DAG_STRICT_3 )	2748:2:83298:83338	3115366	1	True				
ANR	3115445	CallExpression	check_warning_strictness ( DAG_STRICT_3 )		3115366	0					
ANR	3115446	Callee	check_warning_strictness		3115366	0					
ANR	3115447	Identifier	check_warning_strictness		3115366	0					
ANR	3115448	ArgumentList	DAG_STRICT_3		3115366	1					
ANR	3115449	Argument	DAG_STRICT_3		3115366	0					
ANR	3115450	Identifier	DAG_STRICT_3		3115366	0					
ANR	3115451	ElseStatement	else		3115366	0					
ANR	3115452	CompoundStatement		15:8:527:527	3115366	0					
ANR	3115453	ExpressionStatement	"debug_printf ( DEBUG_DEBUG_1 , ""All Condor job events okay\\n"" )"	2750:2:83352:83412	3115366	0	True				
ANR	3115454	CallExpression	"debug_printf ( DEBUG_DEBUG_1 , ""All Condor job events okay\\n"" )"		3115366	0					
ANR	3115455	Callee	debug_printf		3115366	0					
ANR	3115456	Identifier	debug_printf		3115366	0					
ANR	3115457	ArgumentList	DEBUG_DEBUG_1		3115366	1					
ANR	3115458	Argument	DEBUG_DEBUG_1		3115366	0					
ANR	3115459	Identifier	DEBUG_DEBUG_1		3115366	0					
ANR	3115460	Argument	"""All Condor job events okay\\n"""		3115366	1					
ANR	3115461	PrimaryExpression	"""All Condor job events okay\\n"""		3115366	0					
ANR	3115462	ExpressionStatement	result = _checkStorkEvents . CheckAllJobs ( jobError )	2753:1:83419:83468	3115366	4	True				
ANR	3115463	AssignmentExpression	result = _checkStorkEvents . CheckAllJobs ( jobError )		3115366	0		=			
ANR	3115464	Identifier	result		3115366	0					
ANR	3115465	CallExpression	_checkStorkEvents . CheckAllJobs ( jobError )		3115366	1					
ANR	3115466	Callee	_checkStorkEvents . CheckAllJobs		3115366	0					
ANR	3115467	MemberAccess	_checkStorkEvents . CheckAllJobs		3115366	0					
ANR	3115468	Identifier	_checkStorkEvents		3115366	0					
ANR	3115469	Identifier	CheckAllJobs		3115366	1					
ANR	3115470	ArgumentList	jobError		3115366	1					
ANR	3115471	Argument	jobError		3115366	0					
ANR	3115472	Identifier	jobError		3115366	0					
ANR	3115473	IfStatement	if ( result == CheckEvents :: EVENT_ERROR )		3115366	5					
ANR	3115474	Condition	result == CheckEvents :: EVENT_ERROR	2754:6:83476:83509	3115366	0	True				
ANR	3115475	EqualityExpression	result == CheckEvents :: EVENT_ERROR		3115366	0		==			
ANR	3115476	Identifier	result		3115366	0					
ANR	3115477	Identifier	CheckEvents :: EVENT_ERROR		3115366	1					
ANR	3115478	CompoundStatement		20:43:692:692	3115366	1					
ANR	3115479	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""Error checking Stork job events: %s\\n"" , jobError . Value ( ) )"	2755:2:83517:83607	3115366	0	True				
ANR	3115480	CallExpression	"debug_printf ( DEBUG_QUIET , ""Error checking Stork job events: %s\\n"" , jobError . Value ( ) )"		3115366	0					
ANR	3115481	Callee	debug_printf		3115366	0					
ANR	3115482	Identifier	debug_printf		3115366	0					
ANR	3115483	ArgumentList	DEBUG_QUIET		3115366	1					
ANR	3115484	Argument	DEBUG_QUIET		3115366	0					
ANR	3115485	Identifier	DEBUG_QUIET		3115366	0					
ANR	3115486	Argument	"""Error checking Stork job events: %s\\n"""		3115366	1					
ANR	3115487	PrimaryExpression	"""Error checking Stork job events: %s\\n"""		3115366	0					
ANR	3115488	Argument	jobError . Value ( )		3115366	2					
ANR	3115489	CallExpression	jobError . Value ( )		3115366	0					
ANR	3115490	Callee	jobError . Value		3115366	0					
ANR	3115491	MemberAccess	jobError . Value		3115366	0					
ANR	3115492	Identifier	jobError		3115366	0					
ANR	3115493	Identifier	Value		3115366	1					
ANR	3115494	ArgumentList			3115366	1					
ANR	3115495	ExpressionStatement	ASSERT ( false )	2757:2:83611:83626	3115366	1	True				
ANR	3115496	CallExpression	ASSERT ( false )		3115366	0					
ANR	3115497	Callee	ASSERT		3115366	0					
ANR	3115498	Identifier	ASSERT		3115366	0					
ANR	3115499	ArgumentList	false		3115366	1					
ANR	3115500	Argument	false		3115366	0					
ANR	3115501	Identifier	false		3115366	0					
ANR	3115502	ElseStatement	else		3115366	0					
ANR	3115503	IfStatement	if ( result == CheckEvents :: EVENT_BAD_EVENT || result == CheckEvents :: EVENT_WARNING )		3115366	0					
ANR	3115504	Condition	result == CheckEvents :: EVENT_BAD_EVENT || result == CheckEvents :: EVENT_WARNING	2758:13:83641:83722	3115366	0	True				
ANR	3115505	OrExpression	result == CheckEvents :: EVENT_BAD_EVENT || result == CheckEvents :: EVENT_WARNING		3115366	0		||			
ANR	3115506	EqualityExpression	result == CheckEvents :: EVENT_BAD_EVENT		3115366	0		==			
ANR	3115507	Identifier	result		3115366	0					
ANR	3115508	Identifier	CheckEvents :: EVENT_BAD_EVENT		3115366	1					
ANR	3115509	EqualityExpression	result == CheckEvents :: EVENT_WARNING		3115366	1		==			
ANR	3115510	Identifier	result		3115366	0					
ANR	3115511	Identifier	CheckEvents :: EVENT_WARNING		3115366	1					
ANR	3115512	CompoundStatement		25:43:905:905	3115366	1					
ANR	3115513	ExpressionStatement	"debug_printf ( DEBUG_NORMAL , ""Warning checking Stork job events: %s\\n"" , jobError . Value ( ) )"	2760:2:83730:83823	3115366	0	True				
ANR	3115514	CallExpression	"debug_printf ( DEBUG_NORMAL , ""Warning checking Stork job events: %s\\n"" , jobError . Value ( ) )"		3115366	0					
ANR	3115515	Callee	debug_printf		3115366	0					
ANR	3115516	Identifier	debug_printf		3115366	0					
ANR	3115517	ArgumentList	DEBUG_NORMAL		3115366	1					
ANR	3115518	Argument	DEBUG_NORMAL		3115366	0					
ANR	3115519	Identifier	DEBUG_NORMAL		3115366	0					
ANR	3115520	Argument	"""Warning checking Stork job events: %s\\n"""		3115366	1					
ANR	3115521	PrimaryExpression	"""Warning checking Stork job events: %s\\n"""		3115366	0					
ANR	3115522	Argument	jobError . Value ( )		3115366	2					
ANR	3115523	CallExpression	jobError . Value ( )		3115366	0					
ANR	3115524	Callee	jobError . Value		3115366	0					
ANR	3115525	MemberAccess	jobError . Value		3115366	0					
ANR	3115526	Identifier	jobError		3115366	0					
ANR	3115527	Identifier	Value		3115366	1					
ANR	3115528	ArgumentList			3115366	1					
ANR	3115529	ExpressionStatement	check_warning_strictness ( DAG_STRICT_3 )	2762:2:83827:83867	3115366	1	True				
ANR	3115530	CallExpression	check_warning_strictness ( DAG_STRICT_3 )		3115366	0					
ANR	3115531	Callee	check_warning_strictness		3115366	0					
ANR	3115532	Identifier	check_warning_strictness		3115366	0					
ANR	3115533	ArgumentList	DAG_STRICT_3		3115366	1					
ANR	3115534	Argument	DAG_STRICT_3		3115366	0					
ANR	3115535	Identifier	DAG_STRICT_3		3115366	0					
ANR	3115536	ElseStatement	else		3115366	0					
ANR	3115537	CompoundStatement		29:8:1056:1056	3115366	0					
ANR	3115538	ExpressionStatement	"debug_printf ( DEBUG_DEBUG_1 , ""All Stork job events okay\\n"" )"	2764:2:83881:83940	3115366	0	True				
ANR	3115539	CallExpression	"debug_printf ( DEBUG_DEBUG_1 , ""All Stork job events okay\\n"" )"		3115366	0					
ANR	3115540	Callee	debug_printf		3115366	0					
ANR	3115541	Identifier	debug_printf		3115366	0					
ANR	3115542	ArgumentList	DEBUG_DEBUG_1		3115366	1					
ANR	3115543	Argument	DEBUG_DEBUG_1		3115366	0					
ANR	3115544	Identifier	DEBUG_DEBUG_1		3115366	0					
ANR	3115545	Argument	"""All Stork job events okay\\n"""		3115366	1					
ANR	3115546	PrimaryExpression	"""All Stork job events okay\\n"""		3115366	0					
ANR	3115547	ReturnType	void		3115366	1					
ANR	3115548	Identifier	Dag :: CheckAllJobs		3115366	2					
ANR	3115549	ParameterList			3115366	3					
ANR	3115550	CFGEntryNode	ENTRY		3115366		True				
ANR	3115551	CFGExitNode	EXIT		3115366		True				
ANR	3115552	Symbol	jobError . Value		3115366						
ANR	3115553	Symbol	jobError		3115366						
ANR	3115554	Symbol	false		3115366						
ANR	3115555	Symbol	CheckEvents :: EVENT_BAD_EVENT		3115366						
ANR	3115556	Symbol	DEBUG_NORMAL		3115366						
ANR	3115557	Symbol	_checkCondorEvents . CheckAllJobs		3115366						
ANR	3115558	Symbol	DEBUG_QUIET		3115366						
ANR	3115559	Symbol	result		3115366						
ANR	3115560	Symbol	_checkCondorEvents		3115366						
ANR	3115561	Symbol	CheckEvents :: EVENT_WARNING		3115366						
ANR	3115562	Symbol	DAG_STRICT_3		3115366						
ANR	3115563	Symbol	_checkStorkEvents . CheckAllJobs		3115366						
ANR	3115564	Symbol	CheckEvents :: EVENT_ERROR		3115366						
ANR	3115565	Symbol	DEBUG_DEBUG_1		3115366						
ANR	3115566	Symbol	_checkStorkEvents		3115366						
ANR	3115567	Function	Dag :: PrintDeferrals	2769:0:84024:85251							
ANR	3115568	FunctionDef	"Dag :: PrintDeferrals (debug_level_t level , bool force)"		3115567	0					
ANR	3115569	CompoundStatement		2771:0:84090:85251	3115567	0					
ANR	3115570	ExpressionStatement	ASSERT ( _isSplice == false )	2774:1:84185:84212	3115567	0	True				
ANR	3115571	CallExpression	ASSERT ( _isSplice == false )		3115567	0					
ANR	3115572	Callee	ASSERT		3115567	0					
ANR	3115573	Identifier	ASSERT		3115567	0					
ANR	3115574	ArgumentList	_isSplice == false		3115567	1					
ANR	3115575	Argument	_isSplice == false		3115567	0					
ANR	3115576	EqualityExpression	_isSplice == false		3115567	0		==			
ANR	3115577	Identifier	_isSplice		3115567	0					
ANR	3115578	Identifier	false		3115567	1					
ANR	3115579	IfStatement	if ( _maxJobsDeferredCount > 0 || force )		3115567	1					
ANR	3115580	Condition	_maxJobsDeferredCount > 0 || force	2776:5:84220:84253	3115567	0	True				
ANR	3115581	OrExpression	_maxJobsDeferredCount > 0 || force		3115567	0		||			
ANR	3115582	RelationalExpression	_maxJobsDeferredCount > 0		3115567	0		>			
ANR	3115583	Identifier	_maxJobsDeferredCount		3115567	0					
ANR	3115584	PrimaryExpression	0		3115567	1					
ANR	3115585	Identifier	force		3115567	1					
ANR	3115586	CompoundStatement		6:42:166:166	3115567	1					
ANR	3115587	Statement	debug_printf	2777:2:84261:84272	3115567	0	True				
ANR	3115588	Statement	(	2777:14:84273:84273	3115567	1	True				
ANR	3115589	Statement	level	2777:16:84275:84279	3115567	2	True				
ANR	3115590	Statement	","	2777:21:84280:84280	3115567	3	True				
ANR	3115591	Statement	"""Note: %d total job deferrals because """	2777:23:84282:84320	3115567	4	True				
ANR	3115592	Statement	"""of -MaxJobs limit (%d)\\n"""	2778:5:84327:84352	3115567	5	True				
ANR	3115593	Statement	","	2778:31:84353:84353	3115567	6	True				
ANR	3115594	Statement	_maxJobsDeferredCount	2778:33:84355:84375	3115567	7	True				
ANR	3115595	Statement	","	2778:54:84376:84376	3115567	8	True				
ANR	3115596	Statement	_maxJobsSubmitted	2779:5:84383:84399	3115567	9	True				
ANR	3115597	Statement	)	2779:23:84401:84401	3115567	10	True				
ANR	3115598	ExpressionStatement		2779:24:84402:84402	3115567	11	True				
ANR	3115599	IfStatement	if ( _maxIdleDeferredCount > 0 || force )		3115567	2					
ANR	3115600	Condition	_maxIdleDeferredCount > 0 || force	2782:5:84413:84446	3115567	0	True				
ANR	3115601	OrExpression	_maxIdleDeferredCount > 0 || force		3115567	0		||			
ANR	3115602	RelationalExpression	_maxIdleDeferredCount > 0		3115567	0		>			
ANR	3115603	Identifier	_maxIdleDeferredCount		3115567	0					
ANR	3115604	PrimaryExpression	0		3115567	1					
ANR	3115605	Identifier	force		3115567	1					
ANR	3115606	CompoundStatement		12:42:359:359	3115567	1					
ANR	3115607	Statement	debug_printf	2783:2:84454:84465	3115567	0	True				
ANR	3115608	Statement	(	2783:14:84466:84466	3115567	1	True				
ANR	3115609	Statement	level	2783:16:84468:84472	3115567	2	True				
ANR	3115610	Statement	","	2783:21:84473:84473	3115567	3	True				
ANR	3115611	Statement	"""Note: %d total job deferrals because """	2783:23:84475:84513	3115567	4	True				
ANR	3115612	Statement	"""of -MaxIdle limit (%d)\\n"""	2784:5:84520:84545	3115567	5	True				
ANR	3115613	Statement	","	2784:31:84546:84546	3115567	6	True				
ANR	3115614	Statement	_maxIdleDeferredCount	2784:33:84548:84568	3115567	7	True				
ANR	3115615	Statement	","	2784:54:84569:84569	3115567	8	True				
ANR	3115616	Statement	_maxIdleJobProcs	2785:5:84576:84591	3115567	9	True				
ANR	3115617	Statement	)	2785:22:84593:84593	3115567	10	True				
ANR	3115618	ExpressionStatement		2785:23:84594:84594	3115567	11	True				
ANR	3115619	IfStatement	if ( _catThrottleDeferredCount > 0 || force )		3115567	3					
ANR	3115620	Condition	_catThrottleDeferredCount > 0 || force	2788:5:84605:84642	3115567	0	True				
ANR	3115621	OrExpression	_catThrottleDeferredCount > 0 || force		3115567	0		||			
ANR	3115622	RelationalExpression	_catThrottleDeferredCount > 0		3115567	0		>			
ANR	3115623	Identifier	_catThrottleDeferredCount		3115567	0					
ANR	3115624	PrimaryExpression	0		3115567	1					
ANR	3115625	Identifier	force		3115567	1					
ANR	3115626	CompoundStatement		18:46:555:555	3115567	1					
ANR	3115627	Statement	debug_printf	2789:2:84650:84661	3115567	0	True				
ANR	3115628	Statement	(	2789:14:84662:84662	3115567	1	True				
ANR	3115629	Statement	level	2789:16:84664:84668	3115567	2	True				
ANR	3115630	Statement	","	2789:21:84669:84669	3115567	3	True				
ANR	3115631	Statement	"""Note: %d total job deferrals because """	2789:23:84671:84709	3115567	4	True				
ANR	3115632	Statement	"""of node category throttles\\n"""	2790:5:84716:84745	3115567	5	True				
ANR	3115633	Statement	","	2790:35:84746:84746	3115567	6	True				
ANR	3115634	Statement	_catThrottleDeferredCount	2790:37:84748:84772	3115567	7	True				
ANR	3115635	Statement	)	2790:63:84774:84774	3115567	8	True				
ANR	3115636	ExpressionStatement		2790:64:84775:84775	3115567	9	True				
ANR	3115637	IfStatement	if ( _preScriptQ -> GetScriptDeferredCount ( ) > 0 || force )		3115567	4					
ANR	3115638	Condition	_preScriptQ -> GetScriptDeferredCount ( ) > 0 || force	2793:5:84786:84835	3115567	0	True				
ANR	3115639	OrExpression	_preScriptQ -> GetScriptDeferredCount ( ) > 0 || force		3115567	0		||			
ANR	3115640	RelationalExpression	_preScriptQ -> GetScriptDeferredCount ( ) > 0		3115567	0		>			
ANR	3115641	CallExpression	_preScriptQ -> GetScriptDeferredCount ( )		3115567	0					
ANR	3115642	Callee	_preScriptQ -> GetScriptDeferredCount		3115567	0					
ANR	3115643	PtrMemberAccess	_preScriptQ -> GetScriptDeferredCount		3115567	0					
ANR	3115644	Identifier	_preScriptQ		3115567	0					
ANR	3115645	Identifier	GetScriptDeferredCount		3115567	1					
ANR	3115646	ArgumentList			3115567	1					
ANR	3115647	PrimaryExpression	0		3115567	1					
ANR	3115648	Identifier	force		3115567	1					
ANR	3115649	CompoundStatement		23:58:748:748	3115567	1					
ANR	3115650	Statement	debug_printf	2794:2:84843:84854	3115567	0	True				
ANR	3115651	Statement	(	2794:14:84855:84855	3115567	1	True				
ANR	3115652	Statement	level	2794:16:84857:84861	3115567	2	True				
ANR	3115653	Statement	","	2794:21:84862:84862	3115567	3	True				
ANR	3115654	Statement	"""Note: %d total PRE script deferrals because """	2794:23:84864:84909	3115567	4	True				
ANR	3115655	Statement	"""of -MaxPre limit (%d)\\n"""	2795:5:84916:84940	3115567	5	True				
ANR	3115656	Statement	","	2795:30:84941:84941	3115567	6	True				
ANR	3115657	Statement	_preScriptQ	2796:5:84948:84958	3115567	7	True				
ANR	3115658	Statement	->	2796:16:84959:84960	3115567	8	True				
ANR	3115659	Statement	GetScriptDeferredCount	2796:18:84961:84982	3115567	9	True				
ANR	3115660	Statement	(	2796:40:84983:84983	3115567	10	True				
ANR	3115661	Statement	)	2796:41:84984:84984	3115567	11	True				
ANR	3115662	Statement	","	2796:42:84985:84985	3115567	12	True				
ANR	3115663	Statement	_maxPreScripts	2797:5:84992:85005	3115567	13	True				
ANR	3115664	Statement	)	2797:20:85007:85007	3115567	14	True				
ANR	3115665	ExpressionStatement		2797:21:85008:85008	3115567	15	True				
ANR	3115666	IfStatement	if ( _postScriptQ -> GetScriptDeferredCount ( ) > 0 || force )		3115567	5					
ANR	3115667	Condition	_postScriptQ -> GetScriptDeferredCount ( ) > 0 || force	2800:5:85019:85069	3115567	0	True				
ANR	3115668	OrExpression	_postScriptQ -> GetScriptDeferredCount ( ) > 0 || force		3115567	0		||			
ANR	3115669	RelationalExpression	_postScriptQ -> GetScriptDeferredCount ( ) > 0		3115567	0		>			
ANR	3115670	CallExpression	_postScriptQ -> GetScriptDeferredCount ( )		3115567	0					
ANR	3115671	Callee	_postScriptQ -> GetScriptDeferredCount		3115567	0					
ANR	3115672	PtrMemberAccess	_postScriptQ -> GetScriptDeferredCount		3115567	0					
ANR	3115673	Identifier	_postScriptQ		3115567	0					
ANR	3115674	Identifier	GetScriptDeferredCount		3115567	1					
ANR	3115675	ArgumentList			3115567	1					
ANR	3115676	PrimaryExpression	0		3115567	1					
ANR	3115677	Identifier	force		3115567	1					
ANR	3115678	CompoundStatement		30:59:982:982	3115567	1					
ANR	3115679	Statement	debug_printf	2801:2:85077:85088	3115567	0	True				
ANR	3115680	Statement	(	2801:14:85089:85089	3115567	1	True				
ANR	3115681	Statement	level	2801:16:85091:85095	3115567	2	True				
ANR	3115682	Statement	","	2801:21:85096:85096	3115567	3	True				
ANR	3115683	Statement	"""Note: %d total POST script deferrals because """	2801:23:85098:85144	3115567	4	True				
ANR	3115684	Statement	"""of -MaxPost limit (%d)\\n"""	2802:5:85151:85176	3115567	5	True				
ANR	3115685	Statement	","	2802:31:85177:85177	3115567	6	True				
ANR	3115686	Statement	_postScriptQ	2803:5:85184:85195	3115567	7	True				
ANR	3115687	Statement	->	2803:17:85196:85197	3115567	8	True				
ANR	3115688	Statement	GetScriptDeferredCount	2803:19:85198:85219	3115567	9	True				
ANR	3115689	Statement	(	2803:41:85220:85220	3115567	10	True				
ANR	3115690	Statement	)	2803:42:85221:85221	3115567	11	True				
ANR	3115691	Statement	","	2803:43:85222:85222	3115567	12	True				
ANR	3115692	Statement	_maxPostScripts	2804:5:85229:85243	3115567	13	True				
ANR	3115693	Statement	)	2804:21:85245:85245	3115567	14	True				
ANR	3115694	ExpressionStatement		2804:22:85246:85246	3115567	15	True				
ANR	3115695	ReturnType	void		3115567	1					
ANR	3115696	Identifier	Dag :: PrintDeferrals		3115567	2					
ANR	3115697	ParameterList	"debug_level_t level , bool force"		3115567	3					
ANR	3115698	Parameter	debug_level_t level	2770:21:84050:84068	3115567	0	True				
ANR	3115699	ParameterType	debug_level_t		3115567	0					
ANR	3115700	Identifier	level		3115567	1					
ANR	3115701	Parameter	bool force	2770:42:84071:84080	3115567	1	True				
ANR	3115702	ParameterType	bool		3115567	0					
ANR	3115703	Identifier	force		3115567	1					
ANR	3115704	CFGEntryNode	ENTRY		3115567		True				
ANR	3115705	CFGExitNode	EXIT		3115567		True				
ANR	3115706	Symbol	_postScriptQ		3115567						
ANR	3115707	Symbol	_maxIdleDeferredCount		3115567						
ANR	3115708	Symbol	level		3115567						
ANR	3115709	Symbol	_maxJobsDeferredCount		3115567						
ANR	3115710	Symbol	_postScriptQ -> GetScriptDeferredCount		3115567						
ANR	3115711	Symbol	false		3115567						
ANR	3115712	Symbol	_isSplice		3115567						
ANR	3115713	Symbol	* _postScriptQ		3115567						
ANR	3115714	Symbol	_catThrottleDeferredCount		3115567						
ANR	3115715	Symbol	force		3115567						
ANR	3115716	Symbol	* _preScriptQ		3115567						
ANR	3115717	Symbol	_preScriptQ		3115567						
ANR	3115718	Symbol	_preScriptQ -> GetScriptDeferredCount		3115567						
ANR	3115719	Function	Dag :: PrintPendingNodes	2809:0:85332:85835							
ANR	3115720	FunctionDef	Dag :: PrintPendingNodes ()		3115719	0					
ANR	3115721	CompoundStatement		2811:0:85368:85835	3115719	0					
ANR	3115722	ExpressionStatement	"dprintf ( D_ALWAYS , ""Pending DAG nodes:\\n"" )"	2812:1:85371:85414	3115719	0	True				
ANR	3115723	CallExpression	"dprintf ( D_ALWAYS , ""Pending DAG nodes:\\n"" )"		3115719	0					
ANR	3115724	Callee	dprintf		3115719	0					
ANR	3115725	Identifier	dprintf		3115719	0					
ANR	3115726	ArgumentList	D_ALWAYS		3115719	1					
ANR	3115727	Argument	D_ALWAYS		3115719	0					
ANR	3115728	Identifier	D_ALWAYS		3115719	0					
ANR	3115729	Argument	"""Pending DAG nodes:\\n"""		3115719	1					
ANR	3115730	PrimaryExpression	"""Pending DAG nodes:\\n"""		3115719	0					
ANR	3115731	IdentifierDeclStatement	Job * node ;	2814:4:85421:85430	3115719	1	True				
ANR	3115732	IdentifierDecl	* node		3115719	0					
ANR	3115733	IdentifierDeclType	Job *		3115719	0					
ANR	3115734	Identifier	node		3115719	1					
ANR	3115735	IdentifierDeclStatement	ListIterator < Job > iList ( _jobs ) ;	2815:4:85436:85468	3115719	2	True				
ANR	3115736	IdentifierDecl	iList ( _jobs )		3115719	0					
ANR	3115737	IdentifierDeclType	ListIterator < Job >		3115719	0					
ANR	3115738	Identifier	iList		3115719	1					
ANR	3115739	Identifier	_jobs		3115719	2					
ANR	3115740	WhileStatement	while ( ( node = iList . Next ( ) ) != NULL )		3115719	3					
ANR	3115741	Condition	( node = iList . Next ( ) ) != NULL	2816:11:85481:85511	3115719	0	True				
ANR	3115742	EqualityExpression	( node = iList . Next ( ) ) != NULL		3115719	0		!=			
ANR	3115743	AssignmentExpression	node = iList . Next ( )		3115719	0		=			
ANR	3115744	Identifier	node		3115719	0					
ANR	3115745	CallExpression	iList . Next ( )		3115719	1					
ANR	3115746	Callee	iList . Next		3115719	0					
ANR	3115747	MemberAccess	iList . Next		3115719	0					
ANR	3115748	Identifier	iList		3115719	0					
ANR	3115749	Identifier	Next		3115719	1					
ANR	3115750	ArgumentList			3115719	1					
ANR	3115751	Identifier	NULL		3115719	1					
ANR	3115752	CompoundStatement		6:45:146:146	3115719	1					
ANR	3115753	SwitchStatement	switch ( node -> GetStatus ( ) )		3115719	0					
ANR	3115754	Condition	node -> GetStatus ( )	2817:11:85528:85544	3115719	0	True				
ANR	3115755	CallExpression	node -> GetStatus ( )		3115719	0					
ANR	3115756	Callee	node -> GetStatus		3115719	0					
ANR	3115757	PtrMemberAccess	node -> GetStatus		3115719	0					
ANR	3115758	Identifier	node		3115719	0					
ANR	3115759	Identifier	GetStatus		3115719	1					
ANR	3115760	ArgumentList			3115719	1					
ANR	3115761	CompoundStatement		7:31:179:179	3115719	1					
ANR	3115762	Label	case Job :: STATUS_PRERUN :	2818:2:85552:85575	3115719	0	True				
ANR	3115763	Identifier	Job :: STATUS_PRERUN		3115719	0					
ANR	3115764	Label	case Job :: STATUS_SUBMITTED :	2819:2:85579:85605	3115719	1	True				
ANR	3115765	Identifier	Job :: STATUS_SUBMITTED		3115719	0					
ANR	3115766	Label	case Job :: STATUS_POSTRUN :	2820:2:85609:85633	3115719	2	True				
ANR	3115767	Identifier	Job :: STATUS_POSTRUN		3115719	0					
ANR	3115768	ExpressionStatement	"dprintf ( D_ALWAYS , ""  Node %s, Condor ID %d, status %s\\n"" , node -> GetJobName ( ) , node -> _CondorID . _cluster , node -> GetStatusName ( ) )"	2821:3:85638:85778	3115719	3	True				
ANR	3115769	CallExpression	"dprintf ( D_ALWAYS , ""  Node %s, Condor ID %d, status %s\\n"" , node -> GetJobName ( ) , node -> _CondorID . _cluster , node -> GetStatusName ( ) )"		3115719	0					
ANR	3115770	Callee	dprintf		3115719	0					
ANR	3115771	Identifier	dprintf		3115719	0					
ANR	3115772	ArgumentList	D_ALWAYS		3115719	1					
ANR	3115773	Argument	D_ALWAYS		3115719	0					
ANR	3115774	Identifier	D_ALWAYS		3115719	0					
ANR	3115775	Argument	"""  Node %s, Condor ID %d, status %s\\n"""		3115719	1					
ANR	3115776	PrimaryExpression	"""  Node %s, Condor ID %d, status %s\\n"""		3115719	0					
ANR	3115777	Argument	node -> GetJobName ( )		3115719	2					
ANR	3115778	CallExpression	node -> GetJobName ( )		3115719	0					
ANR	3115779	Callee	node -> GetJobName		3115719	0					
ANR	3115780	PtrMemberAccess	node -> GetJobName		3115719	0					
ANR	3115781	Identifier	node		3115719	0					
ANR	3115782	Identifier	GetJobName		3115719	1					
ANR	3115783	ArgumentList			3115719	1					
ANR	3115784	Argument	node -> _CondorID . _cluster		3115719	3					
ANR	3115785	MemberAccess	node -> _CondorID . _cluster		3115719	0					
ANR	3115786	PtrMemberAccess	node -> _CondorID		3115719	0					
ANR	3115787	Identifier	node		3115719	0					
ANR	3115788	Identifier	_CondorID		3115719	1					
ANR	3115789	Identifier	_cluster		3115719	1					
ANR	3115790	Argument	node -> GetStatusName ( )		3115719	4					
ANR	3115791	CallExpression	node -> GetStatusName ( )		3115719	0					
ANR	3115792	Callee	node -> GetStatusName		3115719	0					
ANR	3115793	PtrMemberAccess	node -> GetStatusName		3115719	0					
ANR	3115794	Identifier	node		3115719	0					
ANR	3115795	Identifier	GetStatusName		3115719	1					
ANR	3115796	ArgumentList			3115719	1					
ANR	3115797	BreakStatement	break ;	2824:3:85783:85788	3115719	4	True				
ANR	3115798	Label	default :	2826:2:85793:85800	3115719	5	True				
ANR	3115799	Identifier	default		3115719	0					
ANR	3115800	BreakStatement	break ;	2828:3:85818:85823	3115719	6	True				
ANR	3115801	ReturnType	void		3115719	1					
ANR	3115802	Identifier	Dag :: PrintPendingNodes		3115719	2					
ANR	3115803	ParameterList			3115719	3					
ANR	3115804	CFGEntryNode	ENTRY		3115719		True				
ANR	3115805	CFGExitNode	EXIT		3115719		True				
ANR	3115806	Symbol	node		3115719						
ANR	3115807	Symbol	node -> GetStatus		3115719						
ANR	3115808	Symbol	node -> GetStatusName		3115719						
ANR	3115809	Symbol	NULL		3115719						
ANR	3115810	Symbol	node -> GetJobName		3115719						
ANR	3115811	Symbol	node -> _CondorID . _cluster		3115719						
ANR	3115812	Symbol	D_ALWAYS		3115719						
ANR	3115813	Symbol	* node		3115719						
ANR	3115814	Symbol	iList . Next		3115719						
ANR	3115815	Symbol	iList		3115719						
ANR	3115816	Symbol	node -> _CondorID		3115719						
ANR	3115817	Function	Dag :: SetPendingNodeReportInterval	2834:0:85916:86072							
ANR	3115818	FunctionDef	Dag :: SetPendingNodeReportInterval (int interval)		3115817	0					
ANR	3115819	CompoundStatement		2836:0:85971:86072	3115817	0					
ANR	3115820	ExpressionStatement	_pendingReportInterval = interval	2837:1:85974:86007	3115817	0	True				
ANR	3115821	AssignmentExpression	_pendingReportInterval = interval		3115817	0		=			
ANR	3115822	Identifier	_pendingReportInterval		3115817	0					
ANR	3115823	Identifier	interval		3115817	1					
ANR	3115824	ExpressionStatement	time ( & _lastEventTime )	2838:1:86010:86033	3115817	1	True				
ANR	3115825	CallExpression	time ( & _lastEventTime )		3115817	0					
ANR	3115826	Callee	time		3115817	0					
ANR	3115827	Identifier	time		3115817	0					
ANR	3115828	ArgumentList	& _lastEventTime		3115817	1					
ANR	3115829	Argument	& _lastEventTime		3115817	0					
ANR	3115830	UnaryOperationExpression	& _lastEventTime		3115817	0					
ANR	3115831	UnaryOperator	&		3115817	0					
ANR	3115832	Identifier	_lastEventTime		3115817	1					
ANR	3115833	ExpressionStatement	time ( & _lastPendingNodePrintTime )	2839:1:86036:86070	3115817	2	True				
ANR	3115834	CallExpression	time ( & _lastPendingNodePrintTime )		3115817	0					
ANR	3115835	Callee	time		3115817	0					
ANR	3115836	Identifier	time		3115817	0					
ANR	3115837	ArgumentList	& _lastPendingNodePrintTime		3115817	1					
ANR	3115838	Argument	& _lastPendingNodePrintTime		3115817	0					
ANR	3115839	UnaryOperationExpression	& _lastPendingNodePrintTime		3115817	0					
ANR	3115840	UnaryOperator	&		3115817	0					
ANR	3115841	Identifier	_lastPendingNodePrintTime		3115817	1					
ANR	3115842	ReturnType	void		3115817	1					
ANR	3115843	Identifier	Dag :: SetPendingNodeReportInterval		3115817	2					
ANR	3115844	ParameterList	int interval		3115817	3					
ANR	3115845	Parameter	int interval	2835:35:85956:85967	3115817	0	True				
ANR	3115846	ParameterType	int		3115817	0					
ANR	3115847	Identifier	interval		3115817	1					
ANR	3115848	CFGEntryNode	ENTRY		3115817		True				
ANR	3115849	CFGExitNode	EXIT		3115817		True				
ANR	3115850	Symbol	& _lastEventTime		3115817						
ANR	3115851	Symbol	_pendingReportInterval		3115817						
ANR	3115852	Symbol	& _lastPendingNodePrintTime		3115817						
ANR	3115853	Symbol	interval		3115817						
ANR	3115854	Function	Dag :: CheckThrottleCats	2843:0:86151:86972							
ANR	3115855	FunctionDef	Dag :: CheckThrottleCats ()		3115854	0					
ANR	3115856	CompoundStatement		2845:0:86181:86972	3115854	0					
ANR	3115857	IdentifierDeclStatement	ThrottleByCategory :: ThrottleInfo * info ;	2846:1:86184:86222	3115854	0	True				
ANR	3115858	IdentifierDecl	* info		3115854	0					
ANR	3115859	IdentifierDeclType	ThrottleByCategory :: ThrottleInfo *		3115854	0					
ANR	3115860	Identifier	info		3115854	1					
ANR	3115861	ExpressionStatement	_catThrottles . StartIterations ( )	2847:1:86225:86256	3115854	1	True				
ANR	3115862	CallExpression	_catThrottles . StartIterations ( )		3115854	0					
ANR	3115863	Callee	_catThrottles . StartIterations		3115854	0					
ANR	3115864	MemberAccess	_catThrottles . StartIterations		3115854	0					
ANR	3115865	Identifier	_catThrottles		3115854	0					
ANR	3115866	Identifier	StartIterations		3115854	1					
ANR	3115867	ArgumentList			3115854	1					
ANR	3115868	WhileStatement	while ( _catThrottles . Iterate ( info ) )		3115854	2					
ANR	3115869	Condition	_catThrottles . Iterate ( info )	2848:9:86267:86295	3115854	0	True				
ANR	3115870	CallExpression	_catThrottles . Iterate ( info )		3115854	0					
ANR	3115871	Callee	_catThrottles . Iterate		3115854	0					
ANR	3115872	MemberAccess	_catThrottles . Iterate		3115854	0					
ANR	3115873	Identifier	_catThrottles		3115854	0					
ANR	3115874	Identifier	Iterate		3115854	1					
ANR	3115875	ArgumentList	info		3115854	1					
ANR	3115876	Argument	info		3115854	0					
ANR	3115877	Identifier	info		3115854	0					
ANR	3115878	CompoundStatement		4:41:117:117	3115854	1					
ANR	3115879	Statement	debug_printf	2849:2:86303:86314	3115854	0	True				
ANR	3115880	Statement	(	2849:14:86315:86315	3115854	1	True				
ANR	3115881	Statement	DEBUG_DEBUG_1	2849:16:86317:86329	3115854	2	True				
ANR	3115882	Statement	","	2849:29:86330:86330	3115854	3	True				
ANR	3115883	Statement	"""Category %s has %d jobs, """	2849:31:86332:86358	3115854	4	True				
ANR	3115884	Statement	"""throttle setting of %d\\n"""	2850:5:86365:86390	3115854	5	True				
ANR	3115885	Statement	","	2850:31:86391:86391	3115854	6	True				
ANR	3115886	Statement	info	2850:33:86393:86396	3115854	7	True				
ANR	3115887	Statement	->	2850:37:86397:86398	3115854	8	True				
ANR	3115888	Statement	_category	2850:39:86399:86407	3115854	9	True				
ANR	3115889	Statement	->	2850:48:86408:86409	3115854	10	True				
ANR	3115890	Statement	Value	2850:50:86410:86414	3115854	11	True				
ANR	3115891	Statement	(	2850:55:86415:86415	3115854	12	True				
ANR	3115892	Statement	)	2850:56:86416:86416	3115854	13	True				
ANR	3115893	Statement	","	2850:57:86417:86417	3115854	14	True				
ANR	3115894	Statement	info	2851:5:86424:86427	3115854	15	True				
ANR	3115895	Statement	->	2851:9:86428:86429	3115854	16	True				
ANR	3115896	Statement	_totalJobs	2851:11:86430:86439	3115854	17	True				
ANR	3115897	Statement	","	2851:21:86440:86440	3115854	18	True				
ANR	3115898	Statement	info	2851:23:86442:86445	3115854	19	True				
ANR	3115899	Statement	->	2851:27:86446:86447	3115854	20	True				
ANR	3115900	Statement	_maxJobs	2851:29:86448:86455	3115854	21	True				
ANR	3115901	Statement	)	2851:38:86457:86457	3115854	22	True				
ANR	3115902	ExpressionStatement		2851:39:86458:86458	3115854	23	True				
ANR	3115903	ExpressionStatement	ASSERT ( info -> _totalJobs >= 0 )	2852:2:86462:86493	3115854	24	True				
ANR	3115904	CallExpression	ASSERT ( info -> _totalJobs >= 0 )		3115854	0					
ANR	3115905	Callee	ASSERT		3115854	0					
ANR	3115906	Identifier	ASSERT		3115854	0					
ANR	3115907	ArgumentList	info -> _totalJobs >= 0		3115854	1					
ANR	3115908	Argument	info -> _totalJobs >= 0		3115854	0					
ANR	3115909	RelationalExpression	info -> _totalJobs >= 0		3115854	0		>=			
ANR	3115910	PtrMemberAccess	info -> _totalJobs		3115854	0					
ANR	3115911	Identifier	info		3115854	0					
ANR	3115912	Identifier	_totalJobs		3115854	1					
ANR	3115913	PrimaryExpression	0		3115854	1					
ANR	3115914	IfStatement	if ( info -> _totalJobs < 1 )		3115854	25					
ANR	3115915	Condition	info -> _totalJobs < 1	2853:7:86502:86521	3115854	0	True				
ANR	3115916	RelationalExpression	info -> _totalJobs < 1		3115854	0		<			
ANR	3115917	PtrMemberAccess	info -> _totalJobs		3115854	0					
ANR	3115918	Identifier	info		3115854	0					
ANR	3115919	Identifier	_totalJobs		3115854	1					
ANR	3115920	PrimaryExpression	1		3115854	1					
ANR	3115921	CompoundStatement		9:30:343:343	3115854	1					
ANR	3115922	Statement	debug_printf	2854:3:86530:86541	3115854	0	True				
ANR	3115923	Statement	(	2854:15:86542:86542	3115854	1	True				
ANR	3115924	Statement	DEBUG_NORMAL	2854:17:86544:86555	3115854	2	True				
ANR	3115925	Statement	","	2854:29:86556:86556	3115854	3	True				
ANR	3115926	Statement	"""Warning: category %s has no """	2854:31:86558:86587	3115854	4	True				
ANR	3115927	Statement	"""assigned nodes, so the throttle setting (%d) """	2855:6:86595:86641	3115854	5	True				
ANR	3115928	Statement	"""will have no effect\\n"""	2856:6:86649:86671	3115854	6	True				
ANR	3115929	Statement	","	2856:29:86672:86672	3115854	7	True				
ANR	3115930	Statement	info	2856:31:86674:86677	3115854	8	True				
ANR	3115931	Statement	->	2856:35:86678:86679	3115854	9	True				
ANR	3115932	Statement	_category	2856:37:86680:86688	3115854	10	True				
ANR	3115933	Statement	->	2856:46:86689:86690	3115854	11	True				
ANR	3115934	Statement	Value	2856:48:86691:86695	3115854	12	True				
ANR	3115935	Statement	(	2856:53:86696:86696	3115854	13	True				
ANR	3115936	Statement	)	2856:54:86697:86697	3115854	14	True				
ANR	3115937	Statement	","	2856:55:86698:86698	3115854	15	True				
ANR	3115938	Statement	info	2857:6:86706:86709	3115854	16	True				
ANR	3115939	Statement	->	2857:10:86710:86711	3115854	17	True				
ANR	3115940	Statement	_maxJobs	2857:12:86712:86719	3115854	18	True				
ANR	3115941	Statement	)	2857:21:86721:86721	3115854	19	True				
ANR	3115942	ExpressionStatement		2857:22:86722:86722	3115854	20	True				
ANR	3115943	ExpressionStatement	check_warning_strictness ( DAG_STRICT_2 )	2858:3:86727:86767	3115854	21	True				
ANR	3115944	CallExpression	check_warning_strictness ( DAG_STRICT_2 )		3115854	0					
ANR	3115945	Callee	check_warning_strictness		3115854	0					
ANR	3115946	Identifier	check_warning_strictness		3115854	0					
ANR	3115947	ArgumentList	DAG_STRICT_2		3115854	1					
ANR	3115948	Argument	DAG_STRICT_2		3115854	0					
ANR	3115949	Identifier	DAG_STRICT_2		3115854	0					
ANR	3115950	IfStatement	if ( ! info -> isSet ( ) )		3115854	26					
ANR	3115951	Condition	! info -> isSet ( )	2861:7:86781:86794	3115854	0	True				
ANR	3115952	UnaryOperationExpression	! info -> isSet ( )		3115854	0					
ANR	3115953	UnaryOperator	!		3115854	0					
ANR	3115954	CallExpression	info -> isSet ( )		3115854	1					
ANR	3115955	Callee	info -> isSet		3115854	0					
ANR	3115956	PtrMemberAccess	info -> isSet		3115854	0					
ANR	3115957	Identifier	info		3115854	0					
ANR	3115958	Identifier	isSet		3115854	1					
ANR	3115959	ArgumentList			3115854	1					
ANR	3115960	CompoundStatement		17:24:616:616	3115854	1					
ANR	3115961	Statement	debug_printf	2862:3:86803:86814	3115854	0	True				
ANR	3115962	Statement	(	2862:15:86815:86815	3115854	1	True				
ANR	3115963	Statement	DEBUG_NORMAL	2862:17:86817:86828	3115854	2	True				
ANR	3115964	Statement	","	2862:29:86829:86829	3115854	3	True				
ANR	3115965	Statement	"""Warning: category %s has no """	2862:31:86831:86860	3115854	4	True				
ANR	3115966	Statement	"""throttle value set\\n"""	2863:6:86868:86889	3115854	5	True				
ANR	3115967	Statement	","	2863:28:86890:86890	3115854	6	True				
ANR	3115968	Statement	info	2863:30:86892:86895	3115854	7	True				
ANR	3115969	Statement	->	2863:34:86896:86897	3115854	8	True				
ANR	3115970	Statement	_category	2863:36:86898:86906	3115854	9	True				
ANR	3115971	Statement	->	2863:45:86907:86908	3115854	10	True				
ANR	3115972	Statement	Value	2863:47:86909:86913	3115854	11	True				
ANR	3115973	Statement	(	2863:52:86914:86914	3115854	12	True				
ANR	3115974	Statement	)	2863:53:86915:86915	3115854	13	True				
ANR	3115975	Statement	)	2863:55:86917:86917	3115854	14	True				
ANR	3115976	ExpressionStatement		2863:56:86918:86918	3115854	15	True				
ANR	3115977	ExpressionStatement	check_warning_strictness ( DAG_STRICT_2 )	2864:3:86923:86963	3115854	16	True				
ANR	3115978	CallExpression	check_warning_strictness ( DAG_STRICT_2 )		3115854	0					
ANR	3115979	Callee	check_warning_strictness		3115854	0					
ANR	3115980	Identifier	check_warning_strictness		3115854	0					
ANR	3115981	ArgumentList	DAG_STRICT_2		3115854	1					
ANR	3115982	Argument	DAG_STRICT_2		3115854	0					
ANR	3115983	Identifier	DAG_STRICT_2		3115854	0					
ANR	3115984	ReturnType	void		3115854	1					
ANR	3115985	Identifier	Dag :: CheckThrottleCats		3115854	2					
ANR	3115986	ParameterList			3115854	3					
ANR	3115987	CFGEntryNode	ENTRY		3115854		True				
ANR	3115988	CFGExitNode	EXIT		3115854		True				
ANR	3115989	Symbol	_catThrottles . Iterate		3115854						
ANR	3115990	Symbol	DAG_STRICT_2		3115854						
ANR	3115991	Symbol	_catThrottles		3115854						
ANR	3115992	Symbol	* info		3115854						
ANR	3115993	Symbol	info -> isSet		3115854						
ANR	3115994	Symbol	info -> _totalJobs		3115854						
ANR	3115995	Symbol	info		3115854						
ANR	3115996	Function	Dag :: IncludeExtraDotCommands	2878:0:87374:88034							
ANR	3115997	FunctionDef	Dag :: IncludeExtraDotCommands (FILE * dot_file)		3115996	0					
ANR	3115998	CompoundStatement		2881:0:87426:88034	3115996	0					
ANR	3115999	IdentifierDeclStatement	FILE * include_file ;	2882:1:87429:87447	3115996	0	True				
ANR	3116000	IdentifierDecl	* include_file		3115996	0					
ANR	3116001	IdentifierDeclType	FILE *		3115996	0					
ANR	3116002	Identifier	include_file		3115996	1					
ANR	3116003	ExpressionStatement	"include_file = safe_fopen_wrapper_follow ( _dot_include_file_name , ""r"" )"	2884:1:87451:87520	3115996	1	True				
ANR	3116004	AssignmentExpression	"include_file = safe_fopen_wrapper_follow ( _dot_include_file_name , ""r"" )"		3115996	0		=			
ANR	3116005	Identifier	include_file		3115996	0					
ANR	3116006	CallExpression	"safe_fopen_wrapper_follow ( _dot_include_file_name , ""r"" )"		3115996	1					
ANR	3116007	Callee	safe_fopen_wrapper_follow		3115996	0					
ANR	3116008	Identifier	safe_fopen_wrapper_follow		3115996	0					
ANR	3116009	ArgumentList	_dot_include_file_name		3115996	1					
ANR	3116010	Argument	_dot_include_file_name		3115996	0					
ANR	3116011	Identifier	_dot_include_file_name		3115996	0					
ANR	3116012	Argument	"""r"""		3115996	1					
ANR	3116013	PrimaryExpression	"""r"""		3115996	0					
ANR	3116014	IfStatement	if ( include_file == NULL )		3115996	2					
ANR	3116015	Condition	include_file == NULL	2885:5:87527:87546	3115996	0	True				
ANR	3116016	EqualityExpression	include_file == NULL		3115996	0		==			
ANR	3116017	Identifier	include_file		3115996	0					
ANR	3116018	Identifier	NULL		3115996	1					
ANR	3116019	CompoundStatement		5:27:122:122	3115996	1					
ANR	3116020	IfStatement	if ( _dot_include_file_name != NULL )		3115996	0					
ANR	3116021	Condition	_dot_include_file_name != NULL	2886:6:87557:87586	3115996	0	True				
ANR	3116022	EqualityExpression	_dot_include_file_name != NULL		3115996	0		!=			
ANR	3116023	Identifier	_dot_include_file_name		3115996	0					
ANR	3116024	Identifier	NULL		3115996	1					
ANR	3116025	CompoundStatement		6:38:162:162	3115996	1					
ANR	3116026	ExpressionStatement	"debug_printf ( DEBUG_NORMAL , ""Can't open dot include file %s\\n"" , _dot_include_file_name )"	2887:9:87600:87691	3115996	0	True				
ANR	3116027	CallExpression	"debug_printf ( DEBUG_NORMAL , ""Can't open dot include file %s\\n"" , _dot_include_file_name )"		3115996	0					
ANR	3116028	Callee	debug_printf		3115996	0					
ANR	3116029	Identifier	debug_printf		3115996	0					
ANR	3116030	ArgumentList	DEBUG_NORMAL		3115996	1					
ANR	3116031	Argument	DEBUG_NORMAL		3115996	0					
ANR	3116032	Identifier	DEBUG_NORMAL		3115996	0					
ANR	3116033	Argument	"""Can't open dot include file %s\\n"""		3115996	1					
ANR	3116034	PrimaryExpression	"""Can't open dot include file %s\\n"""		3115996	0					
ANR	3116035	Argument	_dot_include_file_name		3115996	2					
ANR	3116036	Identifier	_dot_include_file_name		3115996	0					
ANR	3116037	ElseStatement	else		3115996	0					
ANR	3116038	CompoundStatement		11:2:282:296	3115996	0					
ANR	3116039	IdentifierDeclStatement	char line [ 100 ] ;	2891:2:87709:87723	3115996	0	True				
ANR	3116040	IdentifierDecl	line [ 100 ]		3115996	0					
ANR	3116041	IdentifierDeclType	char [ 100 ]		3115996	0					
ANR	3116042	Identifier	line		3115996	1					
ANR	3116043	PrimaryExpression	100		3115996	2					
ANR	3116044	ExpressionStatement	"fprintf ( dot_file , ""// Beginning of commands included from %s.\\n"" , _dot_include_file_name )"	2892:2:87727:87821	3115996	1	True				
ANR	3116045	CallExpression	"fprintf ( dot_file , ""// Beginning of commands included from %s.\\n"" , _dot_include_file_name )"		3115996	0					
ANR	3116046	Callee	fprintf		3115996	0					
ANR	3116047	Identifier	fprintf		3115996	0					
ANR	3116048	ArgumentList	dot_file		3115996	1					
ANR	3116049	Argument	dot_file		3115996	0					
ANR	3116050	Identifier	dot_file		3115996	0					
ANR	3116051	Argument	"""// Beginning of commands included from %s.\\n"""		3115996	1					
ANR	3116052	PrimaryExpression	"""// Beginning of commands included from %s.\\n"""		3115996	0					
ANR	3116053	Argument	_dot_include_file_name		3115996	2					
ANR	3116054	Identifier	_dot_include_file_name		3115996	0					
ANR	3116055	WhileStatement	"while ( fgets ( line , 100 , include_file ) != NULL )"		3115996	2					
ANR	3116056	Condition	"fgets ( line , 100 , include_file ) != NULL"	2894:9:87832:87869	3115996	0	True				
ANR	3116057	EqualityExpression	"fgets ( line , 100 , include_file ) != NULL"		3115996	0		!=			
ANR	3116058	CallExpression	"fgets ( line , 100 , include_file )"		3115996	0					
ANR	3116059	Callee	fgets		3115996	0					
ANR	3116060	Identifier	fgets		3115996	0					
ANR	3116061	ArgumentList	line		3115996	1					
ANR	3116062	Argument	line		3115996	0					
ANR	3116063	Identifier	line		3115996	0					
ANR	3116064	Argument	100		3115996	1					
ANR	3116065	PrimaryExpression	100		3115996	0					
ANR	3116066	Argument	include_file		3115996	2					
ANR	3116067	Identifier	include_file		3115996	0					
ANR	3116068	Identifier	NULL		3115996	1					
ANR	3116069	CompoundStatement		14:49:445:445	3115996	1					
ANR	3116070	ExpressionStatement	"fputs ( line , dot_file )"	2895:3:87877:87898	3115996	0	True				
ANR	3116071	CallExpression	"fputs ( line , dot_file )"		3115996	0					
ANR	3116072	Callee	fputs		3115996	0					
ANR	3116073	Identifier	fputs		3115996	0					
ANR	3116074	ArgumentList	line		3115996	1					
ANR	3116075	Argument	line		3115996	0					
ANR	3116076	Identifier	line		3115996	0					
ANR	3116077	Argument	dot_file		3115996	1					
ANR	3116078	Identifier	dot_file		3115996	0					
ANR	3116079	ExpressionStatement	"fprintf ( dot_file , ""// End of commands included from %s.\\n\\n"" , _dot_include_file_name )"	2897:2:87906:87996	3115996	3	True				
ANR	3116080	CallExpression	"fprintf ( dot_file , ""// End of commands included from %s.\\n\\n"" , _dot_include_file_name )"		3115996	0					
ANR	3116081	Callee	fprintf		3115996	0					
ANR	3116082	Identifier	fprintf		3115996	0					
ANR	3116083	ArgumentList	dot_file		3115996	1					
ANR	3116084	Argument	dot_file		3115996	0					
ANR	3116085	Identifier	dot_file		3115996	0					
ANR	3116086	Argument	"""// End of commands included from %s.\\n\\n"""		3115996	1					
ANR	3116087	PrimaryExpression	"""// End of commands included from %s.\\n\\n"""		3115996	0					
ANR	3116088	Argument	_dot_include_file_name		3115996	2					
ANR	3116089	Identifier	_dot_include_file_name		3115996	0					
ANR	3116090	ExpressionStatement	fclose ( include_file )	2899:2:88000:88020	3115996	4	True				
ANR	3116091	CallExpression	fclose ( include_file )		3115996	0					
ANR	3116092	Callee	fclose		3115996	0					
ANR	3116093	Identifier	fclose		3115996	0					
ANR	3116094	ArgumentList	include_file		3115996	1					
ANR	3116095	Argument	include_file		3115996	0					
ANR	3116096	Identifier	include_file		3115996	0					
ANR	3116097	ReturnStatement	return ;	2901:1:88026:88032	3115996	3	True				
ANR	3116098	ReturnType	void		3115996	1					
ANR	3116099	Identifier	Dag :: IncludeExtraDotCommands		3115996	2					
ANR	3116100	ParameterList	FILE * dot_file		3115996	3					
ANR	3116101	Parameter	FILE * dot_file	2880:1:87410:87423	3115996	0	True				
ANR	3116102	ParameterType	FILE *		3115996	0					
ANR	3116103	Identifier	dot_file		3115996	1					
ANR	3116104	CFGEntryNode	ENTRY		3115996		True				
ANR	3116105	CFGExitNode	EXIT		3115996		True				
ANR	3116106	Symbol	_dot_include_file_name		3115996						
ANR	3116107	Symbol	NULL		3115996						
ANR	3116108	Symbol	dot_file		3115996						
ANR	3116109	Symbol	line		3115996						
ANR	3116110	Symbol	include_file		3115996						
ANR	3116111	Symbol	DEBUG_NORMAL		3115996						
ANR	3116112	Symbol	safe_fopen_wrapper_follow		3115996						
ANR	3116113	Symbol	fgets		3115996						
ANR	3116114	Function	Dag :: DumpDotFileNodes	2916:0:88681:90053							
ANR	3116115	FunctionDef	Dag :: DumpDotFileNodes (FILE * temp_dot_file)		3116114	0					
ANR	3116116	CompoundStatement		2918:0:88730:90053	3116114	0					
ANR	3116117	IdentifierDeclStatement	Job * node ;	2919:1:88733:88758	3116114	0	True				
ANR	3116118	IdentifierDecl	* node		3116114	0					
ANR	3116119	IdentifierDeclType	Job *		3116114	0					
ANR	3116120	Identifier	node		3116114	1					
ANR	3116121	IdentifierDeclStatement	ListIterator < Job > joblist ( _jobs ) ;	2920:1:88761:88796	3116114	1	True				
ANR	3116122	IdentifierDecl	joblist ( _jobs )		3116114	0					
ANR	3116123	IdentifierDeclType	ListIterator < Job >		3116114	0					
ANR	3116124	Identifier	joblist		3116114	1					
ANR	3116125	Identifier	_jobs		3116114	2					
ANR	3116126	ExpressionStatement	joblist . ToBeforeFirst ( )	2922:1:88801:88824	3116114	2	True				
ANR	3116127	CallExpression	joblist . ToBeforeFirst ( )		3116114	0					
ANR	3116128	Callee	joblist . ToBeforeFirst		3116114	0					
ANR	3116129	MemberAccess	joblist . ToBeforeFirst		3116114	0					
ANR	3116130	Identifier	joblist		3116114	0					
ANR	3116131	Identifier	ToBeforeFirst		3116114	1					
ANR	3116132	ArgumentList			3116114	1					
ANR	3116133	WhileStatement	while ( joblist . Next ( node ) )		3116114	3					
ANR	3116134	Condition	joblist . Next ( node )	2923:8:88835:88852	3116114	0	True				
ANR	3116135	CallExpression	joblist . Next ( node )		3116114	0					
ANR	3116136	Callee	joblist . Next		3116114	0					
ANR	3116137	MemberAccess	joblist . Next		3116114	0					
ANR	3116138	Identifier	joblist		3116114	0					
ANR	3116139	Identifier	Next		3116114	1					
ANR	3116140	ArgumentList	node		3116114	1					
ANR	3116141	Argument	node		3116114	0					
ANR	3116142	Identifier	node		3116114	0					
ANR	3116143	CompoundStatement		7:2:128:149	3116114	1					
ANR	3116144	IdentifierDeclStatement	const char * node_name ;	2924:2:88859:88880	3116114	0	True				
ANR	3116145	IdentifierDecl	* node_name		3116114	0					
ANR	3116146	IdentifierDeclType	const char *		3116114	0					
ANR	3116147	Identifier	node_name		3116114	1					
ANR	3116148	ExpressionStatement	node_name = node -> GetJobName ( )	2926:2:88887:88917	3116114	1	True				
ANR	3116149	AssignmentExpression	node_name = node -> GetJobName ( )		3116114	0		=			
ANR	3116150	Identifier	node_name		3116114	0					
ANR	3116151	CallExpression	node -> GetJobName ( )		3116114	1					
ANR	3116152	Callee	node -> GetJobName		3116114	0					
ANR	3116153	PtrMemberAccess	node -> GetJobName		3116114	0					
ANR	3116154	Identifier	node		3116114	0					
ANR	3116155	Identifier	GetJobName		3116114	1					
ANR	3116156	ArgumentList			3116114	1					
ANR	3116157	SwitchStatement	switch ( node -> GetStatus ( ) )		3116114	2					
ANR	3116158	Condition	node -> GetStatus ( )	2927:10:88929:88945	3116114	0	True				
ANR	3116159	CallExpression	node -> GetStatus ( )		3116114	0					
ANR	3116160	Callee	node -> GetStatus		3116114	0					
ANR	3116161	PtrMemberAccess	node -> GetStatus		3116114	0					
ANR	3116162	Identifier	node		3116114	0					
ANR	3116163	Identifier	GetStatus		3116114	1					
ANR	3116164	ArgumentList			3116114	1					
ANR	3116165	CompoundStatement		10:29:217:217	3116114	1					
ANR	3116166	Label	case Job :: STATUS_READY :	2928:2:88952:88974	3116114	0	True				
ANR	3116167	Identifier	Job :: STATUS_READY		3116114	0					
ANR	3116168	ExpressionStatement	"fprintf ( temp_dot_file , ""    \\""%s\\"" [shape=ellipse label=\\""%s (I)\\""];\\n"" , node_name , node_name )"	2929:3:88979:89082	3116114	1	True				
ANR	3116169	CallExpression	"fprintf ( temp_dot_file , ""    \\""%s\\"" [shape=ellipse label=\\""%s (I)\\""];\\n"" , node_name , node_name )"		3116114	0					
ANR	3116170	Callee	fprintf		3116114	0					
ANR	3116171	Identifier	fprintf		3116114	0					
ANR	3116172	ArgumentList	temp_dot_file		3116114	1					
ANR	3116173	Argument	temp_dot_file		3116114	0					
ANR	3116174	Identifier	temp_dot_file		3116114	0					
ANR	3116175	Argument	"""    \\""%s\\"" [shape=ellipse label=\\""%s (I)\\""];\\n"""		3116114	1					
ANR	3116176	PrimaryExpression	"""    \\""%s\\"" [shape=ellipse label=\\""%s (I)\\""];\\n"""		3116114	0					
ANR	3116177	Argument	node_name		3116114	2					
ANR	3116178	Identifier	node_name		3116114	0					
ANR	3116179	Argument	node_name		3116114	3					
ANR	3116180	Identifier	node_name		3116114	0					
ANR	3116181	BreakStatement	break ;	2932:3:89087:89092	3116114	2	True				
ANR	3116182	Label	case Job :: STATUS_PRERUN :	2933:2:89096:89119	3116114	3	True				
ANR	3116183	Identifier	Job :: STATUS_PRERUN		3116114	0					
ANR	3116184	ExpressionStatement	"fprintf ( temp_dot_file , ""    \\""%s\\"" [shape=ellipse label=\\""%s (Pre)\\"" style=dotted];\\n"" , node_name , node_name )"	2934:3:89124:89242	3116114	4	True				
ANR	3116185	CallExpression	"fprintf ( temp_dot_file , ""    \\""%s\\"" [shape=ellipse label=\\""%s (Pre)\\"" style=dotted];\\n"" , node_name , node_name )"		3116114	0					
ANR	3116186	Callee	fprintf		3116114	0					
ANR	3116187	Identifier	fprintf		3116114	0					
ANR	3116188	ArgumentList	temp_dot_file		3116114	1					
ANR	3116189	Argument	temp_dot_file		3116114	0					
ANR	3116190	Identifier	temp_dot_file		3116114	0					
ANR	3116191	Argument	"""    \\""%s\\"" [shape=ellipse label=\\""%s (Pre)\\"" style=dotted];\\n"""		3116114	1					
ANR	3116192	PrimaryExpression	"""    \\""%s\\"" [shape=ellipse label=\\""%s (Pre)\\"" style=dotted];\\n"""		3116114	0					
ANR	3116193	Argument	node_name		3116114	2					
ANR	3116194	Identifier	node_name		3116114	0					
ANR	3116195	Argument	node_name		3116114	3					
ANR	3116196	Identifier	node_name		3116114	0					
ANR	3116197	BreakStatement	break ;	2937:3:89247:89252	3116114	5	True				
ANR	3116198	Label	case Job :: STATUS_SUBMITTED :	2938:2:89256:89282	3116114	6	True				
ANR	3116199	Identifier	Job :: STATUS_SUBMITTED		3116114	0					
ANR	3116200	ExpressionStatement	"fprintf ( temp_dot_file , ""    \\""%s\\"" [shape=ellipse label=\\""%s (R)\\"" peripheries=2];\\n"" , node_name , node_name )"	2939:3:89287:89404	3116114	7	True				
ANR	3116201	CallExpression	"fprintf ( temp_dot_file , ""    \\""%s\\"" [shape=ellipse label=\\""%s (R)\\"" peripheries=2];\\n"" , node_name , node_name )"		3116114	0					
ANR	3116202	Callee	fprintf		3116114	0					
ANR	3116203	Identifier	fprintf		3116114	0					
ANR	3116204	ArgumentList	temp_dot_file		3116114	1					
ANR	3116205	Argument	temp_dot_file		3116114	0					
ANR	3116206	Identifier	temp_dot_file		3116114	0					
ANR	3116207	Argument	"""    \\""%s\\"" [shape=ellipse label=\\""%s (R)\\"" peripheries=2];\\n"""		3116114	1					
ANR	3116208	PrimaryExpression	"""    \\""%s\\"" [shape=ellipse label=\\""%s (R)\\"" peripheries=2];\\n"""		3116114	0					
ANR	3116209	Argument	node_name		3116114	2					
ANR	3116210	Identifier	node_name		3116114	0					
ANR	3116211	Argument	node_name		3116114	3					
ANR	3116212	Identifier	node_name		3116114	0					
ANR	3116213	BreakStatement	break ;	2942:3:89409:89414	3116114	8	True				
ANR	3116214	Label	case Job :: STATUS_POSTRUN :	2943:2:89418:89442	3116114	9	True				
ANR	3116215	Identifier	Job :: STATUS_POSTRUN		3116114	0					
ANR	3116216	ExpressionStatement	"fprintf ( temp_dot_file , ""    \\""%s\\"" [shape=ellipse label=\\""%s (Post)\\"" style=dotted];\\n"" , node_name , node_name )"	2944:3:89447:89566	3116114	10	True				
ANR	3116217	CallExpression	"fprintf ( temp_dot_file , ""    \\""%s\\"" [shape=ellipse label=\\""%s (Post)\\"" style=dotted];\\n"" , node_name , node_name )"		3116114	0					
ANR	3116218	Callee	fprintf		3116114	0					
ANR	3116219	Identifier	fprintf		3116114	0					
ANR	3116220	ArgumentList	temp_dot_file		3116114	1					
ANR	3116221	Argument	temp_dot_file		3116114	0					
ANR	3116222	Identifier	temp_dot_file		3116114	0					
ANR	3116223	Argument	"""    \\""%s\\"" [shape=ellipse label=\\""%s (Post)\\"" style=dotted];\\n"""		3116114	1					
ANR	3116224	PrimaryExpression	"""    \\""%s\\"" [shape=ellipse label=\\""%s (Post)\\"" style=dotted];\\n"""		3116114	0					
ANR	3116225	Argument	node_name		3116114	2					
ANR	3116226	Identifier	node_name		3116114	0					
ANR	3116227	Argument	node_name		3116114	3					
ANR	3116228	Identifier	node_name		3116114	0					
ANR	3116229	BreakStatement	break ;	2947:3:89571:89576	3116114	11	True				
ANR	3116230	Label	case Job :: STATUS_DONE :	2948:2:89580:89601	3116114	12	True				
ANR	3116231	Identifier	Job :: STATUS_DONE		3116114	0					
ANR	3116232	ExpressionStatement	"fprintf ( temp_dot_file , ""    \\""%s\\"" [shape=ellipse label=\\""%s (Done)\\"" style=bold];\\n"" , node_name , node_name )"	2949:3:89606:89723	3116114	13	True				
ANR	3116233	CallExpression	"fprintf ( temp_dot_file , ""    \\""%s\\"" [shape=ellipse label=\\""%s (Done)\\"" style=bold];\\n"" , node_name , node_name )"		3116114	0					
ANR	3116234	Callee	fprintf		3116114	0					
ANR	3116235	Identifier	fprintf		3116114	0					
ANR	3116236	ArgumentList	temp_dot_file		3116114	1					
ANR	3116237	Argument	temp_dot_file		3116114	0					
ANR	3116238	Identifier	temp_dot_file		3116114	0					
ANR	3116239	Argument	"""    \\""%s\\"" [shape=ellipse label=\\""%s (Done)\\"" style=bold];\\n"""		3116114	1					
ANR	3116240	PrimaryExpression	"""    \\""%s\\"" [shape=ellipse label=\\""%s (Done)\\"" style=bold];\\n"""		3116114	0					
ANR	3116241	Argument	node_name		3116114	2					
ANR	3116242	Identifier	node_name		3116114	0					
ANR	3116243	Argument	node_name		3116114	3					
ANR	3116244	Identifier	node_name		3116114	0					
ANR	3116245	BreakStatement	break ;	2952:3:89728:89733	3116114	14	True				
ANR	3116246	Label	case Job :: STATUS_ERROR :	2953:2:89737:89759	3116114	15	True				
ANR	3116247	Identifier	Job :: STATUS_ERROR		3116114	0					
ANR	3116248	ExpressionStatement	"fprintf ( temp_dot_file , ""    \\""%s\\"" [shape=box label=\\""%s (E)\\""];\\n"" , node_name , node_name )"	2954:3:89764:89863	3116114	16	True				
ANR	3116249	CallExpression	"fprintf ( temp_dot_file , ""    \\""%s\\"" [shape=box label=\\""%s (E)\\""];\\n"" , node_name , node_name )"		3116114	0					
ANR	3116250	Callee	fprintf		3116114	0					
ANR	3116251	Identifier	fprintf		3116114	0					
ANR	3116252	ArgumentList	temp_dot_file		3116114	1					
ANR	3116253	Argument	temp_dot_file		3116114	0					
ANR	3116254	Identifier	temp_dot_file		3116114	0					
ANR	3116255	Argument	"""    \\""%s\\"" [shape=box label=\\""%s (E)\\""];\\n"""		3116114	1					
ANR	3116256	PrimaryExpression	"""    \\""%s\\"" [shape=box label=\\""%s (E)\\""];\\n"""		3116114	0					
ANR	3116257	Argument	node_name		3116114	2					
ANR	3116258	Identifier	node_name		3116114	0					
ANR	3116259	Argument	node_name		3116114	3					
ANR	3116260	Identifier	node_name		3116114	0					
ANR	3116261	BreakStatement	break ;	2957:3:89868:89873	3116114	17	True				
ANR	3116262	Label	default :	2958:2:89877:89884	3116114	18	True				
ANR	3116263	Identifier	default		3116114	0					
ANR	3116264	ExpressionStatement	"fprintf ( temp_dot_file , ""    \\""%s\\"" [shape=ellipse label=\\""%s (I)\\""];\\n"" , node_name , node_name )"	2959:3:89889:89992	3116114	19	True				
ANR	3116265	CallExpression	"fprintf ( temp_dot_file , ""    \\""%s\\"" [shape=ellipse label=\\""%s (I)\\""];\\n"" , node_name , node_name )"		3116114	0					
ANR	3116266	Callee	fprintf		3116114	0					
ANR	3116267	Identifier	fprintf		3116114	0					
ANR	3116268	ArgumentList	temp_dot_file		3116114	1					
ANR	3116269	Argument	temp_dot_file		3116114	0					
ANR	3116270	Identifier	temp_dot_file		3116114	0					
ANR	3116271	Argument	"""    \\""%s\\"" [shape=ellipse label=\\""%s (I)\\""];\\n"""		3116114	1					
ANR	3116272	PrimaryExpression	"""    \\""%s\\"" [shape=ellipse label=\\""%s (I)\\""];\\n"""		3116114	0					
ANR	3116273	Argument	node_name		3116114	2					
ANR	3116274	Identifier	node_name		3116114	0					
ANR	3116275	Argument	node_name		3116114	3					
ANR	3116276	Identifier	node_name		3116114	0					
ANR	3116277	BreakStatement	break ;	2962:3:89997:90002	3116114	20	True				
ANR	3116278	ExpressionStatement	"fprintf ( temp_dot_file , ""\\n"" )"	2966:1:90013:90041	3116114	4	True				
ANR	3116279	CallExpression	"fprintf ( temp_dot_file , ""\\n"" )"		3116114	0					
ANR	3116280	Callee	fprintf		3116114	0					
ANR	3116281	Identifier	fprintf		3116114	0					
ANR	3116282	ArgumentList	temp_dot_file		3116114	1					
ANR	3116283	Argument	temp_dot_file		3116114	0					
ANR	3116284	Identifier	temp_dot_file		3116114	0					
ANR	3116285	Argument	"""\\n"""		3116114	1					
ANR	3116286	PrimaryExpression	"""\\n"""		3116114	0					
ANR	3116287	ReturnStatement	return ;	2968:1:90045:90051	3116114	5	True				
ANR	3116288	ReturnType	void		3116114	1					
ANR	3116289	Identifier	Dag :: DumpDotFileNodes		3116114	2					
ANR	3116290	ParameterList	FILE * temp_dot_file		3116114	3					
ANR	3116291	Parameter	FILE * temp_dot_file	2917:22:88709:88727	3116114	0	True				
ANR	3116292	ParameterType	FILE *		3116114	0					
ANR	3116293	Identifier	temp_dot_file		3116114	1					
ANR	3116294	CFGEntryNode	ENTRY		3116114		True				
ANR	3116295	CFGExitNode	EXIT		3116114		True				
ANR	3116296	Symbol	node		3116114						
ANR	3116297	Symbol	node -> GetStatus		3116114						
ANR	3116298	Symbol	node -> GetJobName		3116114						
ANR	3116299	Symbol	node_name		3116114						
ANR	3116300	Symbol	* node		3116114						
ANR	3116301	Symbol	joblist		3116114						
ANR	3116302	Symbol	temp_dot_file		3116114						
ANR	3116303	Symbol	joblist . Next		3116114						
ANR	3116304	Function	Dag :: DumpDotFileArcs	2979:0:90378:91162							
ANR	3116305	FunctionDef	Dag :: DumpDotFileArcs (FILE * temp_dot_file)		3116304	0					
ANR	3116306	CompoundStatement		2981:0:90426:91162	3116304	0					
ANR	3116307	IdentifierDeclStatement	Job * parent ;	2982:1:90429:90465	3116304	0	True				
ANR	3116308	IdentifierDecl	* parent		3116304	0					
ANR	3116309	IdentifierDeclType	Job *		3116304	0					
ANR	3116310	Identifier	parent		3116304	1					
ANR	3116311	IdentifierDeclStatement	ListIterator < Job > joblist ( _jobs ) ;	2983:1:90468:90512	3116304	1	True				
ANR	3116312	IdentifierDecl	joblist ( _jobs )		3116304	0					
ANR	3116313	IdentifierDeclType	ListIterator < Job >		3116304	0					
ANR	3116314	Identifier	joblist		3116304	1					
ANR	3116315	Identifier	_jobs		3116304	2					
ANR	3116316	ExpressionStatement	joblist . ToBeforeFirst ( )	2985:1:90516:90539	3116304	2	True				
ANR	3116317	CallExpression	joblist . ToBeforeFirst ( )		3116304	0					
ANR	3116318	Callee	joblist . ToBeforeFirst		3116304	0					
ANR	3116319	MemberAccess	joblist . ToBeforeFirst		3116304	0					
ANR	3116320	Identifier	joblist		3116304	0					
ANR	3116321	Identifier	ToBeforeFirst		3116304	1					
ANR	3116322	ArgumentList			3116304	1					
ANR	3116323	WhileStatement	while ( joblist . Next ( parent ) )		3116304	3					
ANR	3116324	Condition	joblist . Next ( parent )	2986:8:90550:90569	3116304	0	True				
ANR	3116325	CallExpression	joblist . Next ( parent )		3116304	0					
ANR	3116326	Callee	joblist . Next		3116304	0					
ANR	3116327	MemberAccess	joblist . Next		3116304	0					
ANR	3116328	Identifier	joblist		3116304	0					
ANR	3116329	Identifier	Next		3116304	1					
ANR	3116330	ArgumentList	parent		3116304	1					
ANR	3116331	Argument	parent		3116304	0					
ANR	3116332	Identifier	parent		3116304	0					
ANR	3116333	CompoundStatement		15:2:405:437	3116304	1					
ANR	3116334	IdentifierDeclStatement	Job * child ;	2987:2:90576:90593	3116304	0	True				
ANR	3116335	IdentifierDecl	* child		3116304	0					
ANR	3116336	IdentifierDeclType	Job *		3116304	0					
ANR	3116337	Identifier	child		3116304	1					
ANR	3116338	IdentifierDeclStatement	SimpleListIterator < JobID_t > child_list ;	2988:2:90597:90636	3116304	1	True				
ANR	3116339	IdentifierDecl	child_list		3116304	0					
ANR	3116340	IdentifierDeclType	SimpleListIterator < JobID_t >		3116304	0					
ANR	3116341	Identifier	child_list		3116304	1					
ANR	3116342	IdentifierDeclStatement	const char * parent_name ;	2989:2:90640:90681	3116304	2	True				
ANR	3116343	IdentifierDecl	* parent_name		3116304	0					
ANR	3116344	IdentifierDeclType	const char *		3116304	0					
ANR	3116345	Identifier	parent_name		3116304	1					
ANR	3116346	IdentifierDeclStatement	const char * child_name ;	2990:2:90685:90725	3116304	3	True				
ANR	3116347	IdentifierDecl	* child_name		3116304	0					
ANR	3116348	IdentifierDeclType	const char *		3116304	0					
ANR	3116349	Identifier	child_name		3116304	1					
ANR	3116350	ExpressionStatement	parent_name = parent -> GetJobName ( )	2992:2:90732:90766	3116304	4	True				
ANR	3116351	AssignmentExpression	parent_name = parent -> GetJobName ( )		3116304	0		=			
ANR	3116352	Identifier	parent_name		3116304	0					
ANR	3116353	CallExpression	parent -> GetJobName ( )		3116304	1					
ANR	3116354	Callee	parent -> GetJobName		3116304	0					
ANR	3116355	PtrMemberAccess	parent -> GetJobName		3116304	0					
ANR	3116356	Identifier	parent		3116304	0					
ANR	3116357	Identifier	GetJobName		3116304	1					
ANR	3116358	ArgumentList			3116304	1					
ANR	3116359	IdentifierDeclStatement	set < JobID_t > & cset = parent -> GetQueueRef ( Job :: Q_CHILDREN ) ;	2994:2:90771:90828	3116304	5	True				
ANR	3116360	IdentifierDecl	& cset = parent -> GetQueueRef ( Job :: Q_CHILDREN )		3116304	0					
ANR	3116361	IdentifierDeclType	set < JobID_t > &		3116304	0					
ANR	3116362	Identifier	cset		3116304	1					
ANR	3116363	AssignmentExpression	& cset = parent -> GetQueueRef ( Job :: Q_CHILDREN )		3116304	2		=			
ANR	3116364	Identifier	cset		3116304	0					
ANR	3116365	CallExpression	parent -> GetQueueRef ( Job :: Q_CHILDREN )		3116304	1					
ANR	3116366	Callee	parent -> GetQueueRef		3116304	0					
ANR	3116367	PtrMemberAccess	parent -> GetQueueRef		3116304	0					
ANR	3116368	Identifier	parent		3116304	0					
ANR	3116369	Identifier	GetQueueRef		3116304	1					
ANR	3116370	ArgumentList	Job :: Q_CHILDREN		3116304	1					
ANR	3116371	Argument	Job :: Q_CHILDREN		3116304	0					
ANR	3116372	Identifier	Job :: Q_CHILDREN		3116304	0					
ANR	3116373	IdentifierDeclStatement	set < JobID_t > :: const_iterator cit ;	2995:2:90832:90864	3116304	6	True				
ANR	3116374	IdentifierDecl	cit		3116304	0					
ANR	3116375	IdentifierDeclType	set < JobID_t > :: const_iterator		3116304	0					
ANR	3116376	Identifier	cit		3116304	1					
ANR	3116377	ForStatement	for ( cit = cset . begin ( ) ; cit != cset . end ( ) ; cit ++ )		3116304	7					
ANR	3116378	ForInit	cit = cset . begin ( ) ;	2997:7:90874:90892	3116304	0	True				
ANR	3116379	AssignmentExpression	cit = cset . begin ( )		3116304	0		=			
ANR	3116380	Identifier	cit		3116304	0					
ANR	3116381	CallExpression	cset . begin ( )		3116304	1					
ANR	3116382	Callee	cset . begin		3116304	0					
ANR	3116383	MemberAccess	cset . begin		3116304	0					
ANR	3116384	Identifier	cset		3116304	0					
ANR	3116385	Identifier	begin		3116304	1					
ANR	3116386	ArgumentList			3116304	1					
ANR	3116387	Condition	cit != cset . end ( )	2997:27:90894:90910	3116304	1	True				
ANR	3116388	EqualityExpression	cit != cset . end ( )		3116304	0		!=			
ANR	3116389	Identifier	cit		3116304	0					
ANR	3116390	CallExpression	cset . end ( )		3116304	1					
ANR	3116391	Callee	cset . end		3116304	0					
ANR	3116392	MemberAccess	cset . end		3116304	0					
ANR	3116393	Identifier	cset		3116304	0					
ANR	3116394	Identifier	end		3116304	1					
ANR	3116395	ArgumentList			3116304	1					
ANR	3116396	PostIncDecOperationExpression	cit ++	2997:46:90913:90917	3116304	2	True				
ANR	3116397	Identifier	cit		3116304	0					
ANR	3116398	IncDec	++		3116304	1					
ANR	3116399	CompoundStatement		17:53:493:493	3116304	3					
ANR	3116400	ExpressionStatement	child = FindNodeByNodeID ( * cit )	2998:3:90925:90957	3116304	0	True				
ANR	3116401	AssignmentExpression	child = FindNodeByNodeID ( * cit )		3116304	0		=			
ANR	3116402	Identifier	child		3116304	0					
ANR	3116403	CallExpression	FindNodeByNodeID ( * cit )		3116304	1					
ANR	3116404	Callee	FindNodeByNodeID		3116304	0					
ANR	3116405	Identifier	FindNodeByNodeID		3116304	0					
ANR	3116406	ArgumentList	* cit		3116304	1					
ANR	3116407	Argument	* cit		3116304	0					
ANR	3116408	UnaryOperationExpression	* cit		3116304	0					
ANR	3116409	UnaryOperator	*		3116304	0					
ANR	3116410	Identifier	cit		3116304	1					
ANR	3116411	ExpressionStatement	child_name = child -> GetJobName ( )	3000:3:90966:90999	3116304	1	True				
ANR	3116412	AssignmentExpression	child_name = child -> GetJobName ( )		3116304	0		=			
ANR	3116413	Identifier	child_name		3116304	0					
ANR	3116414	CallExpression	child -> GetJobName ( )		3116304	1					
ANR	3116415	Callee	child -> GetJobName		3116304	0					
ANR	3116416	PtrMemberAccess	child -> GetJobName		3116304	0					
ANR	3116417	Identifier	child		3116304	0					
ANR	3116418	Identifier	GetJobName		3116304	1					
ANR	3116419	ArgumentList			3116304	1					
ANR	3116420	IfStatement	if ( parent_name != NULL && child_name != NULL )		3116304	2					
ANR	3116421	Condition	parent_name != NULL && child_name != NULL	3001:7:91008:91048	3116304	0	True				
ANR	3116422	AndExpression	parent_name != NULL && child_name != NULL		3116304	0		&&			
ANR	3116423	EqualityExpression	parent_name != NULL		3116304	0		!=			
ANR	3116424	Identifier	parent_name		3116304	0					
ANR	3116425	Identifier	NULL		3116304	1					
ANR	3116426	EqualityExpression	child_name != NULL		3116304	1		!=			
ANR	3116427	Identifier	child_name		3116304	0					
ANR	3116428	Identifier	NULL		3116304	1					
ANR	3116429	CompoundStatement		21:50:624:624	3116304	1					
ANR	3116430	ExpressionStatement	"fprintf ( temp_dot_file , ""    \\""%s\\"" -> \\""%s\\"";\\n"" , parent_name , child_name )"	3002:4:91057:91137	3116304	0	True				
ANR	3116431	CallExpression	"fprintf ( temp_dot_file , ""    \\""%s\\"" -> \\""%s\\"";\\n"" , parent_name , child_name )"		3116304	0					
ANR	3116432	Callee	fprintf		3116304	0					
ANR	3116433	Identifier	fprintf		3116304	0					
ANR	3116434	ArgumentList	temp_dot_file		3116304	1					
ANR	3116435	Argument	temp_dot_file		3116304	0					
ANR	3116436	Identifier	temp_dot_file		3116304	0					
ANR	3116437	Argument	"""    \\""%s\\"" -> \\""%s\\"";\\n"""		3116304	1					
ANR	3116438	PrimaryExpression	"""    \\""%s\\"" -> \\""%s\\"";\\n"""		3116304	0					
ANR	3116439	Argument	parent_name		3116304	2					
ANR	3116440	Identifier	parent_name		3116304	0					
ANR	3116441	Argument	child_name		3116304	3					
ANR	3116442	Identifier	child_name		3116304	0					
ANR	3116443	ReturnStatement	return ;	3008:1:91154:91160	3116304	4	True				
ANR	3116444	ReturnType	void		3116304	1					
ANR	3116445	Identifier	Dag :: DumpDotFileArcs		3116304	2					
ANR	3116446	ParameterList	FILE * temp_dot_file		3116304	3					
ANR	3116447	Parameter	FILE * temp_dot_file	2980:21:90405:90423	3116304	0	True				
ANR	3116448	ParameterType	FILE *		3116304	0					
ANR	3116449	Identifier	temp_dot_file		3116304	1					
ANR	3116450	CFGEntryNode	ENTRY		3116304		True				
ANR	3116451	CFGExitNode	EXIT		3116304		True				
ANR	3116452	Symbol	parent_name		3116304						
ANR	3116453	Symbol	parent		3116304						
ANR	3116454	Symbol	Job :: Q_CHILDREN		3116304						
ANR	3116455	Symbol	* child		3116304						
ANR	3116456	Symbol	child_list		3116304						
ANR	3116457	Symbol	* parent		3116304						
ANR	3116458	Symbol	NULL		3116304						
ANR	3116459	Symbol	child -> GetJobName		3116304						
ANR	3116460	Symbol	* cit		3116304						
ANR	3116461	Symbol	cset . begin		3116304						
ANR	3116462	Symbol	parent -> GetQueueRef		3116304						
ANR	3116463	Symbol	cset . end		3116304						
ANR	3116464	Symbol	joblist		3116304						
ANR	3116465	Symbol	child_name		3116304						
ANR	3116466	Symbol	cit		3116304						
ANR	3116467	Symbol	cset		3116304						
ANR	3116468	Symbol	FindNodeByNodeID		3116304						
ANR	3116469	Symbol	parent -> GetJobName		3116304						
ANR	3116470	Symbol	temp_dot_file		3116304						
ANR	3116471	Symbol	joblist . Next		3116304						
ANR	3116472	Symbol	child		3116304						
ANR	3116473	Function	Dag :: ChooseDotFileName	3024:0:91892:92393							
ANR	3116474	FunctionDef	Dag :: ChooseDotFileName (MyString & dot_file_name)		3116473	0					
ANR	3116475	CompoundStatement		3026:0:91946:92393	3116473	0					
ANR	3116476	IfStatement	if ( _overwrite_dot_file )		3116473	0					
ANR	3116477	Condition	_overwrite_dot_file	3027:5:91953:91971	3116473	0	True				
ANR	3116478	Identifier	_overwrite_dot_file		3116473	0					
ANR	3116479	CompoundStatement		2:26:27:27	3116473	1					
ANR	3116480	ExpressionStatement	dot_file_name = _dot_file_name	3028:2:91978:92008	3116473	0	True				
ANR	3116481	AssignmentExpression	dot_file_name = _dot_file_name		3116473	0		=			
ANR	3116482	Identifier	dot_file_name		3116473	0					
ANR	3116483	Identifier	_dot_file_name		3116473	1					
ANR	3116484	ElseStatement	else		3116473	0					
ANR	3116485	CompoundStatement		5:2:75:105	3116473	0					
ANR	3116486	IdentifierDeclStatement	bool found_unused_file = false ;	3030:2:92022:92052	3116473	0	True				
ANR	3116487	IdentifierDecl	found_unused_file = false		3116473	0					
ANR	3116488	IdentifierDeclType	bool		3116473	0					
ANR	3116489	Identifier	found_unused_file		3116473	1					
ANR	3116490	AssignmentExpression	found_unused_file = false		3116473	2		=			
ANR	3116491	Identifier	false		3116473	0					
ANR	3116492	Identifier	false		3116473	1					
ANR	3116493	WhileStatement	while ( ! found_unused_file )		3116473	1					
ANR	3116494	Condition	! found_unused_file	3032:9:92064:92081	3116473	0	True				
ANR	3116495	UnaryOperationExpression	! found_unused_file		3116473	0					
ANR	3116496	UnaryOperator	!		3116473	0					
ANR	3116497	Identifier	found_unused_file		3116473	1					
ANR	3116498	CompoundStatement		8:3:142:150	3116473	1					
ANR	3116499	IdentifierDeclStatement	FILE * fp ;	3033:3:92089:92097	3116473	0	True				
ANR	3116500	IdentifierDecl	* fp		3116473	0					
ANR	3116501	IdentifierDeclType	FILE *		3116473	0					
ANR	3116502	Identifier	fp		3116473	1					
ANR	3116503	ExpressionStatement	"dot_file_name . sprintf ( ""%s.%d"" , _dot_file_name , _dot_file_name_suffix )"	3035:3:92103:92172	3116473	1	True				
ANR	3116504	CallExpression	"dot_file_name . sprintf ( ""%s.%d"" , _dot_file_name , _dot_file_name_suffix )"		3116473	0					
ANR	3116505	Callee	dot_file_name . sprintf		3116473	0					
ANR	3116506	MemberAccess	dot_file_name . sprintf		3116473	0					
ANR	3116507	Identifier	dot_file_name		3116473	0					
ANR	3116508	Identifier	sprintf		3116473	1					
ANR	3116509	ArgumentList	"""%s.%d"""		3116473	1					
ANR	3116510	Argument	"""%s.%d"""		3116473	0					
ANR	3116511	PrimaryExpression	"""%s.%d"""		3116473	0					
ANR	3116512	Argument	_dot_file_name		3116473	1					
ANR	3116513	Identifier	_dot_file_name		3116473	0					
ANR	3116514	Argument	_dot_file_name_suffix		3116473	2					
ANR	3116515	Identifier	_dot_file_name_suffix		3116473	0					
ANR	3116516	ExpressionStatement	"fp = safe_fopen_wrapper_follow ( dot_file_name . Value ( ) , ""r"" )"	3036:3:92177:92235	3116473	2	True				
ANR	3116517	AssignmentExpression	"fp = safe_fopen_wrapper_follow ( dot_file_name . Value ( ) , ""r"" )"		3116473	0		=			
ANR	3116518	Identifier	fp		3116473	0					
ANR	3116519	CallExpression	"safe_fopen_wrapper_follow ( dot_file_name . Value ( ) , ""r"" )"		3116473	1					
ANR	3116520	Callee	safe_fopen_wrapper_follow		3116473	0					
ANR	3116521	Identifier	safe_fopen_wrapper_follow		3116473	0					
ANR	3116522	ArgumentList	dot_file_name . Value ( )		3116473	1					
ANR	3116523	Argument	dot_file_name . Value ( )		3116473	0					
ANR	3116524	CallExpression	dot_file_name . Value ( )		3116473	0					
ANR	3116525	Callee	dot_file_name . Value		3116473	0					
ANR	3116526	MemberAccess	dot_file_name . Value		3116473	0					
ANR	3116527	Identifier	dot_file_name		3116473	0					
ANR	3116528	Identifier	Value		3116473	1					
ANR	3116529	ArgumentList			3116473	1					
ANR	3116530	Argument	"""r"""		3116473	1					
ANR	3116531	PrimaryExpression	"""r"""		3116473	0					
ANR	3116532	IfStatement	if ( fp != NULL )		3116473	3					
ANR	3116533	Condition	fp != NULL	3037:7:92244:92253	3116473	0	True				
ANR	3116534	EqualityExpression	fp != NULL		3116473	0		!=			
ANR	3116535	Identifier	fp		3116473	0					
ANR	3116536	Identifier	NULL		3116473	1					
ANR	3116537	CompoundStatement		12:19:309:309	3116473	1					
ANR	3116538	ExpressionStatement	fclose ( fp )	3038:4:92262:92272	3116473	0	True				
ANR	3116539	CallExpression	fclose ( fp )		3116473	0					
ANR	3116540	Callee	fclose		3116473	0					
ANR	3116541	Identifier	fclose		3116473	0					
ANR	3116542	ArgumentList	fp		3116473	1					
ANR	3116543	Argument	fp		3116473	0					
ANR	3116544	Identifier	fp		3116473	0					
ANR	3116545	ExpressionStatement	_dot_file_name_suffix ++	3039:4:92278:92301	3116473	1	True				
ANR	3116546	PostIncDecOperationExpression	_dot_file_name_suffix ++		3116473	0					
ANR	3116547	Identifier	_dot_file_name_suffix		3116473	0					
ANR	3116548	IncDec	++		3116473	1					
ANR	3116549	ElseStatement	else		3116473	0					
ANR	3116550	CompoundStatement		15:10:366:366	3116473	0					
ANR	3116551	ExpressionStatement	found_unused_file = true	3041:4:92319:92343	3116473	0	True				
ANR	3116552	AssignmentExpression	found_unused_file = true		3116473	0		=			
ANR	3116553	Identifier	found_unused_file		3116473	0					
ANR	3116554	Identifier	true		3116473	1					
ANR	3116555	ExpressionStatement	_dot_file_name_suffix ++	3044:2:92356:92379	3116473	2	True				
ANR	3116556	PostIncDecOperationExpression	_dot_file_name_suffix ++		3116473	0					
ANR	3116557	Identifier	_dot_file_name_suffix		3116473	0					
ANR	3116558	IncDec	++		3116473	1					
ANR	3116559	ReturnStatement	return ;	3046:1:92385:92391	3116473	1	True				
ANR	3116560	ReturnType	void		3116473	1					
ANR	3116561	Identifier	Dag :: ChooseDotFileName		3116473	2					
ANR	3116562	ParameterList	MyString & dot_file_name		3116473	3					
ANR	3116563	Parameter	MyString & dot_file_name	3025:23:91921:91943	3116473	0	True				
ANR	3116564	ParameterType	MyString &		3116473	0					
ANR	3116565	Identifier	dot_file_name		3116473	1					
ANR	3116566	CFGEntryNode	ENTRY		3116473		True				
ANR	3116567	CFGExitNode	EXIT		3116473		True				
ANR	3116568	Symbol	NULL		3116473						
ANR	3116569	Symbol	_dot_file_name		3116473						
ANR	3116570	Symbol	dot_file_name . Value		3116473						
ANR	3116571	Symbol	dot_file_name		3116473						
ANR	3116572	Symbol	_overwrite_dot_file		3116473						
ANR	3116573	Symbol	false		3116473						
ANR	3116574	Symbol	true		3116473						
ANR	3116575	Symbol	fp		3116473						
ANR	3116576	Symbol	found_unused_file		3116473						
ANR	3116577	Symbol	_dot_file_name_suffix		3116473						
ANR	3116578	Symbol	safe_fopen_wrapper_follow		3116473						
ANR	3116579	Function	Dag :: Add	3050:0:92474:92720							
ANR	3116580	FunctionDef	Dag :: Add (Job & job)		3116579	0					
ANR	3116581	CompoundStatement		3051:0:92500:92720	3116579	0					
ANR	3116582	IdentifierDeclStatement	"int insertResult = _nodeNameHash . insert ( job . GetJobName ( ) , & job ) ;"	3052:1:92503:92568	3116579	0	True				
ANR	3116583	IdentifierDecl	"insertResult = _nodeNameHash . insert ( job . GetJobName ( ) , & job )"		3116579	0					
ANR	3116584	IdentifierDeclType	int		3116579	0					
ANR	3116585	Identifier	insertResult		3116579	1					
ANR	3116586	AssignmentExpression	"insertResult = _nodeNameHash . insert ( job . GetJobName ( ) , & job )"		3116579	2		=			
ANR	3116587	Identifier	insertResult		3116579	0					
ANR	3116588	CallExpression	"_nodeNameHash . insert ( job . GetJobName ( ) , & job )"		3116579	1					
ANR	3116589	Callee	_nodeNameHash . insert		3116579	0					
ANR	3116590	MemberAccess	_nodeNameHash . insert		3116579	0					
ANR	3116591	Identifier	_nodeNameHash		3116579	0					
ANR	3116592	Identifier	insert		3116579	1					
ANR	3116593	ArgumentList	job . GetJobName ( )		3116579	1					
ANR	3116594	Argument	job . GetJobName ( )		3116579	0					
ANR	3116595	CallExpression	job . GetJobName ( )		3116579	0					
ANR	3116596	Callee	job . GetJobName		3116579	0					
ANR	3116597	MemberAccess	job . GetJobName		3116579	0					
ANR	3116598	Identifier	job		3116579	0					
ANR	3116599	Identifier	GetJobName		3116579	1					
ANR	3116600	ArgumentList			3116579	1					
ANR	3116601	Argument	& job		3116579	1					
ANR	3116602	UnaryOperationExpression	& job		3116579	0					
ANR	3116603	UnaryOperator	&		3116579	0					
ANR	3116604	Identifier	job		3116579	1					
ANR	3116605	ExpressionStatement	ASSERT ( insertResult == 0 )	3053:1:92571:92598	3116579	1	True				
ANR	3116606	CallExpression	ASSERT ( insertResult == 0 )		3116579	0					
ANR	3116607	Callee	ASSERT		3116579	0					
ANR	3116608	Identifier	ASSERT		3116579	0					
ANR	3116609	ArgumentList	insertResult == 0		3116579	1					
ANR	3116610	Argument	insertResult == 0		3116579	0					
ANR	3116611	EqualityExpression	insertResult == 0		3116579	0		==			
ANR	3116612	Identifier	insertResult		3116579	0					
ANR	3116613	PrimaryExpression	0		3116579	1					
ANR	3116614	ExpressionStatement	"insertResult = _nodeIDHash . insert ( job . GetJobID ( ) , & job )"	3055:1:92602:92659	3116579	2	True				
ANR	3116615	AssignmentExpression	"insertResult = _nodeIDHash . insert ( job . GetJobID ( ) , & job )"		3116579	0		=			
ANR	3116616	Identifier	insertResult		3116579	0					
ANR	3116617	CallExpression	"_nodeIDHash . insert ( job . GetJobID ( ) , & job )"		3116579	1					
ANR	3116618	Callee	_nodeIDHash . insert		3116579	0					
ANR	3116619	MemberAccess	_nodeIDHash . insert		3116579	0					
ANR	3116620	Identifier	_nodeIDHash		3116579	0					
ANR	3116621	Identifier	insert		3116579	1					
ANR	3116622	ArgumentList	job . GetJobID ( )		3116579	1					
ANR	3116623	Argument	job . GetJobID ( )		3116579	0					
ANR	3116624	CallExpression	job . GetJobID ( )		3116579	0					
ANR	3116625	Callee	job . GetJobID		3116579	0					
ANR	3116626	MemberAccess	job . GetJobID		3116579	0					
ANR	3116627	Identifier	job		3116579	0					
ANR	3116628	Identifier	GetJobID		3116579	1					
ANR	3116629	ArgumentList			3116579	1					
ANR	3116630	Argument	& job		3116579	1					
ANR	3116631	UnaryOperationExpression	& job		3116579	0					
ANR	3116632	UnaryOperator	&		3116579	0					
ANR	3116633	Identifier	job		3116579	1					
ANR	3116634	ExpressionStatement	ASSERT ( insertResult == 0 )	3056:1:92662:92689	3116579	3	True				
ANR	3116635	CallExpression	ASSERT ( insertResult == 0 )		3116579	0					
ANR	3116636	Callee	ASSERT		3116579	0					
ANR	3116637	Identifier	ASSERT		3116579	0					
ANR	3116638	ArgumentList	insertResult == 0		3116579	1					
ANR	3116639	Argument	insertResult == 0		3116579	0					
ANR	3116640	EqualityExpression	insertResult == 0		3116579	0		==			
ANR	3116641	Identifier	insertResult		3116579	0					
ANR	3116642	PrimaryExpression	0		3116579	1					
ANR	3116643	ReturnStatement	return _jobs . Append ( & job ) ;	3058:1:92693:92718	3116579	4	True				
ANR	3116644	CallExpression	_jobs . Append ( & job )		3116579	0					
ANR	3116645	Callee	_jobs . Append		3116579	0					
ANR	3116646	MemberAccess	_jobs . Append		3116579	0					
ANR	3116647	Identifier	_jobs		3116579	0					
ANR	3116648	Identifier	Append		3116579	1					
ANR	3116649	ArgumentList	& job		3116579	1					
ANR	3116650	Argument	& job		3116579	0					
ANR	3116651	UnaryOperationExpression	& job		3116579	0					
ANR	3116652	UnaryOperator	&		3116579	0					
ANR	3116653	Identifier	job		3116579	1					
ANR	3116654	ReturnType	bool		3116579	1					
ANR	3116655	Identifier	Dag :: Add		3116579	2					
ANR	3116656	ParameterList	Job & job		3116579	3					
ANR	3116657	Parameter	Job & job	3050:15:92489:92496	3116579	0	True				
ANR	3116658	ParameterType	Job &		3116579	0					
ANR	3116659	Identifier	job		3116579	1					
ANR	3116660	CFGEntryNode	ENTRY		3116579		True				
ANR	3116661	CFGExitNode	EXIT		3116579		True				
ANR	3116662	Symbol	_jobs . Append		3116579						
ANR	3116663	Symbol	& job		3116579						
ANR	3116664	Symbol	job . GetJobID		3116579						
ANR	3116665	Symbol	_jobs		3116579						
ANR	3116666	Symbol	job		3116579						
ANR	3116667	Symbol	insertResult		3116579						
ANR	3116668	Symbol	_nodeNameHash . insert		3116579						
ANR	3116669	Symbol	_nodeIDHash		3116579						
ANR	3116670	Symbol	_nodeNameHash		3116579						
ANR	3116671	Symbol	job . GetJobName		3116579						
ANR	3116672	Symbol	_nodeIDHash . insert		3116579						
ANR	3116673	Function	Dag :: RemoveNode	3063:0:92802:95258							
ANR	3116674	FunctionDef	"Dag :: RemoveNode (const char * name , MyString & whynot)"		3116673	0					
ANR	3116675	CompoundStatement		3065:0:92861:95258	3116673	0					
ANR	3116676	IfStatement	if ( ! name )		3116673	0					
ANR	3116677	Condition	! name	3066:5:92868:92872	3116673	0	True				
ANR	3116678	UnaryOperationExpression	! name		3116673	0					
ANR	3116679	UnaryOperator	!		3116673	0					
ANR	3116680	Identifier	name		3116673	1					
ANR	3116681	CompoundStatement		2:13:14:14	3116673	1					
ANR	3116682	ExpressionStatement	"whynot = ""name == NULL"""	3067:2:92880:92903	3116673	0	True				
ANR	3116683	AssignmentExpression	"whynot = ""name == NULL"""		3116673	0		=			
ANR	3116684	Identifier	whynot		3116673	0					
ANR	3116685	PrimaryExpression	"""name == NULL"""		3116673	1					
ANR	3116686	ReturnStatement	return false ;	3068:2:92907:92919	3116673	1	True				
ANR	3116687	Identifier	false		3116673	0					
ANR	3116688	IdentifierDeclStatement	Job * node = FindNodeByName ( name ) ;	3070:1:92925:92959	3116673	1	True				
ANR	3116689	IdentifierDecl	* node = FindNodeByName ( name )		3116673	0					
ANR	3116690	IdentifierDeclType	Job *		3116673	0					
ANR	3116691	Identifier	node		3116673	1					
ANR	3116692	AssignmentExpression	* node = FindNodeByName ( name )		3116673	2		=			
ANR	3116693	Identifier	node		3116673	0					
ANR	3116694	CallExpression	FindNodeByName ( name )		3116673	1					
ANR	3116695	Callee	FindNodeByName		3116673	0					
ANR	3116696	Identifier	FindNodeByName		3116673	0					
ANR	3116697	ArgumentList	name		3116673	1					
ANR	3116698	Argument	name		3116673	0					
ANR	3116699	Identifier	name		3116673	0					
ANR	3116700	IfStatement	if ( ! node )		3116673	2					
ANR	3116701	Condition	! node	3071:5:92966:92970	3116673	0	True				
ANR	3116702	UnaryOperationExpression	! node		3116673	0					
ANR	3116703	UnaryOperator	!		3116673	0					
ANR	3116704	Identifier	node		3116673	1					
ANR	3116705	CompoundStatement		7:13:112:112	3116673	1					
ANR	3116706	ExpressionStatement	"whynot = ""does not exist in DAG"""	3072:2:92978:93010	3116673	0	True				
ANR	3116707	AssignmentExpression	"whynot = ""does not exist in DAG"""		3116673	0		=			
ANR	3116708	Identifier	whynot		3116673	0					
ANR	3116709	PrimaryExpression	"""does not exist in DAG"""		3116673	1					
ANR	3116710	ReturnStatement	return false ;	3073:2:93014:93026	3116673	1	True				
ANR	3116711	Identifier	false		3116673	0					
ANR	3116712	IfStatement	if ( node -> IsActive ( ) )		3116673	3					
ANR	3116713	Condition	node -> IsActive ( )	3075:5:93036:93051	3116673	0	True				
ANR	3116714	CallExpression	node -> IsActive ( )		3116673	0					
ANR	3116715	Callee	node -> IsActive		3116673	0					
ANR	3116716	PtrMemberAccess	node -> IsActive		3116673	0					
ANR	3116717	Identifier	node		3116673	0					
ANR	3116718	Identifier	IsActive		3116673	1					
ANR	3116719	ArgumentList			3116673	1					
ANR	3116720	CompoundStatement		11:24:193:193	3116673	1					
ANR	3116721	ExpressionStatement	"whynot . sprintf ( ""is active (%s)"" , node -> GetStatusName ( ) )"	3076:2:93059:93116	3116673	0	True				
ANR	3116722	CallExpression	"whynot . sprintf ( ""is active (%s)"" , node -> GetStatusName ( ) )"		3116673	0					
ANR	3116723	Callee	whynot . sprintf		3116673	0					
ANR	3116724	MemberAccess	whynot . sprintf		3116673	0					
ANR	3116725	Identifier	whynot		3116673	0					
ANR	3116726	Identifier	sprintf		3116673	1					
ANR	3116727	ArgumentList	"""is active (%s)"""		3116673	1					
ANR	3116728	Argument	"""is active (%s)"""		3116673	0					
ANR	3116729	PrimaryExpression	"""is active (%s)"""		3116673	0					
ANR	3116730	Argument	node -> GetStatusName ( )		3116673	1					
ANR	3116731	CallExpression	node -> GetStatusName ( )		3116673	0					
ANR	3116732	Callee	node -> GetStatusName		3116673	0					
ANR	3116733	PtrMemberAccess	node -> GetStatusName		3116673	0					
ANR	3116734	Identifier	node		3116673	0					
ANR	3116735	Identifier	GetStatusName		3116673	1					
ANR	3116736	ArgumentList			3116673	1					
ANR	3116737	ReturnStatement	return false ;	3077:2:93120:93132	3116673	1	True				
ANR	3116738	Identifier	false		3116673	0					
ANR	3116739	IfStatement	if ( ! node -> IsEmpty ( Job :: Q_CHILDREN ) || ! node -> IsEmpty ( Job :: Q_PARENTS ) )		3116673	4					
ANR	3116740	Condition	! node -> IsEmpty ( Job :: Q_CHILDREN ) || ! node -> IsEmpty ( Job :: Q_PARENTS )	3079:5:93142:93212	3116673	0	True				
ANR	3116741	OrExpression	! node -> IsEmpty ( Job :: Q_CHILDREN ) || ! node -> IsEmpty ( Job :: Q_PARENTS )		3116673	0		||			
ANR	3116742	UnaryOperationExpression	! node -> IsEmpty ( Job :: Q_CHILDREN )		3116673	0					
ANR	3116743	UnaryOperator	!		3116673	0					
ANR	3116744	CallExpression	node -> IsEmpty ( Job :: Q_CHILDREN )		3116673	1					
ANR	3116745	Callee	node -> IsEmpty		3116673	0					
ANR	3116746	PtrMemberAccess	node -> IsEmpty		3116673	0					
ANR	3116747	Identifier	node		3116673	0					
ANR	3116748	Identifier	IsEmpty		3116673	1					
ANR	3116749	ArgumentList	Job :: Q_CHILDREN		3116673	1					
ANR	3116750	Argument	Job :: Q_CHILDREN		3116673	0					
ANR	3116751	Identifier	Job :: Q_CHILDREN		3116673	0					
ANR	3116752	UnaryOperationExpression	! node -> IsEmpty ( Job :: Q_PARENTS )		3116673	1					
ANR	3116753	UnaryOperator	!		3116673	0					
ANR	3116754	CallExpression	node -> IsEmpty ( Job :: Q_PARENTS )		3116673	1					
ANR	3116755	Callee	node -> IsEmpty		3116673	0					
ANR	3116756	PtrMemberAccess	node -> IsEmpty		3116673	0					
ANR	3116757	Identifier	node		3116673	0					
ANR	3116758	Identifier	IsEmpty		3116673	1					
ANR	3116759	ArgumentList	Job :: Q_PARENTS		3116673	1					
ANR	3116760	Argument	Job :: Q_PARENTS		3116673	0					
ANR	3116761	Identifier	Job :: Q_PARENTS		3116673	0					
ANR	3116762	CompoundStatement		16:37:354:354	3116673	1					
ANR	3116763	ExpressionStatement	"whynot . sprintf ( ""dependencies exist"" )"	3081:2:93220:93258	3116673	0	True				
ANR	3116764	CallExpression	"whynot . sprintf ( ""dependencies exist"" )"		3116673	0					
ANR	3116765	Callee	whynot . sprintf		3116673	0					
ANR	3116766	MemberAccess	whynot . sprintf		3116673	0					
ANR	3116767	Identifier	whynot		3116673	0					
ANR	3116768	Identifier	sprintf		3116673	1					
ANR	3116769	ArgumentList	"""dependencies exist"""		3116673	1					
ANR	3116770	Argument	"""dependencies exist"""		3116673	0					
ANR	3116771	PrimaryExpression	"""dependencies exist"""		3116673	0					
ANR	3116772	ReturnStatement	return false ;	3082:2:93262:93274	3116673	1	True				
ANR	3116773	Identifier	false		3116673	0					
ANR	3116774	IdentifierDeclStatement	Job * candidate = NULL ;	3087:1:93343:93364	3116673	5	True				
ANR	3116775	IdentifierDecl	* candidate = NULL		3116673	0					
ANR	3116776	IdentifierDeclType	Job *		3116673	0					
ANR	3116777	Identifier	candidate		3116673	1					
ANR	3116778	AssignmentExpression	* candidate = NULL		3116673	2		=			
ANR	3116779	Identifier	NULL		3116673	0					
ANR	3116780	Identifier	NULL		3116673	1					
ANR	3116781	IdentifierDeclStatement	bool removed = false ;	3088:1:93367:93387	3116673	6	True				
ANR	3116782	IdentifierDecl	removed = false		3116673	0					
ANR	3116783	IdentifierDeclType	bool		3116673	0					
ANR	3116784	Identifier	removed		3116673	1					
ANR	3116785	AssignmentExpression	removed = false		3116673	2		=			
ANR	3116786	Identifier	false		3116673	0					
ANR	3116787	Identifier	false		3116673	1					
ANR	3116788	IfStatement	if ( node -> GetStatus ( ) == Job :: STATUS_DONE )		3116673	7					
ANR	3116789	Condition	node -> GetStatus ( ) == Job :: STATUS_DONE	3090:5:93395:93431	3116673	0	True				
ANR	3116790	EqualityExpression	node -> GetStatus ( ) == Job :: STATUS_DONE		3116673	0		==			
ANR	3116791	CallExpression	node -> GetStatus ( )		3116673	0					
ANR	3116792	Callee	node -> GetStatus		3116673	0					
ANR	3116793	PtrMemberAccess	node -> GetStatus		3116673	0					
ANR	3116794	Identifier	node		3116673	0					
ANR	3116795	Identifier	GetStatus		3116673	1					
ANR	3116796	ArgumentList			3116673	1					
ANR	3116797	Identifier	Job :: STATUS_DONE		3116673	1					
ANR	3116798	CompoundStatement		26:45:573:573	3116673	1					
ANR	3116799	ExpressionStatement	_numNodesDone --	3091:2:93439:93454	3116673	0	True				
ANR	3116800	PostIncDecOperationExpression	_numNodesDone --		3116673	0					
ANR	3116801	Identifier	_numNodesDone		3116673	0					
ANR	3116802	IncDec	--		3116673	1					
ANR	3116803	ExpressionStatement	ASSERT ( _numNodesDone >= 0 )	3092:2:93458:93486	3116673	1	True				
ANR	3116804	CallExpression	ASSERT ( _numNodesDone >= 0 )		3116673	0					
ANR	3116805	Callee	ASSERT		3116673	0					
ANR	3116806	Identifier	ASSERT		3116673	0					
ANR	3116807	ArgumentList	_numNodesDone >= 0		3116673	1					
ANR	3116808	Argument	_numNodesDone >= 0		3116673	0					
ANR	3116809	RelationalExpression	_numNodesDone >= 0		3116673	0		>=			
ANR	3116810	Identifier	_numNodesDone		3116673	0					
ANR	3116811	PrimaryExpression	0		3116673	1					
ANR	3116812	ElseStatement	else		3116673	0					
ANR	3116813	IfStatement	if ( node -> GetStatus ( ) == Job :: STATUS_ERROR )		3116673	0					
ANR	3116814	Condition	node -> GetStatus ( ) == Job :: STATUS_ERROR	3094:10:93501:93538	3116673	0	True				
ANR	3116815	EqualityExpression	node -> GetStatus ( ) == Job :: STATUS_ERROR		3116673	0		==			
ANR	3116816	CallExpression	node -> GetStatus ( )		3116673	0					
ANR	3116817	Callee	node -> GetStatus		3116673	0					
ANR	3116818	PtrMemberAccess	node -> GetStatus		3116673	0					
ANR	3116819	Identifier	node		3116673	0					
ANR	3116820	Identifier	GetStatus		3116673	1					
ANR	3116821	ArgumentList			3116673	1					
ANR	3116822	Identifier	Job :: STATUS_ERROR		3116673	1					
ANR	3116823	CompoundStatement		30:51:680:680	3116673	1					
ANR	3116824	ExpressionStatement	_numNodesFailed --	3095:2:93546:93563	3116673	0	True				
ANR	3116825	PostIncDecOperationExpression	_numNodesFailed --		3116673	0					
ANR	3116826	Identifier	_numNodesFailed		3116673	0					
ANR	3116827	IncDec	--		3116673	1					
ANR	3116828	ExpressionStatement	ASSERT ( _numNodesFailed >= 0 )	3096:2:93567:93597	3116673	1	True				
ANR	3116829	CallExpression	ASSERT ( _numNodesFailed >= 0 )		3116673	0					
ANR	3116830	Callee	ASSERT		3116673	0					
ANR	3116831	Identifier	ASSERT		3116673	0					
ANR	3116832	ArgumentList	_numNodesFailed >= 0		3116673	1					
ANR	3116833	Argument	_numNodesFailed >= 0		3116673	0					
ANR	3116834	RelationalExpression	_numNodesFailed >= 0		3116673	0		>=			
ANR	3116835	Identifier	_numNodesFailed		3116673	0					
ANR	3116836	PrimaryExpression	0		3116673	1					
ANR	3116837	ElseStatement	else		3116673	0					
ANR	3116838	IfStatement	if ( node -> GetStatus ( ) == Job :: STATUS_READY )		3116673	0					
ANR	3116839	Condition	node -> GetStatus ( ) == Job :: STATUS_READY	3098:10:93612:93649	3116673	0	True				
ANR	3116840	EqualityExpression	node -> GetStatus ( ) == Job :: STATUS_READY		3116673	0		==			
ANR	3116841	CallExpression	node -> GetStatus ( )		3116673	0					
ANR	3116842	Callee	node -> GetStatus		3116673	0					
ANR	3116843	PtrMemberAccess	node -> GetStatus		3116673	0					
ANR	3116844	Identifier	node		3116673	0					
ANR	3116845	Identifier	GetStatus		3116673	1					
ANR	3116846	ArgumentList			3116673	1					
ANR	3116847	Identifier	Job :: STATUS_READY		3116673	1					
ANR	3116848	CompoundStatement		34:51:791:791	3116673	1					
ANR	3116849	ExpressionStatement	ASSERT ( _readyQ )	3099:2:93657:93674	3116673	0	True				
ANR	3116850	CallExpression	ASSERT ( _readyQ )		3116673	0					
ANR	3116851	Callee	ASSERT		3116673	0					
ANR	3116852	Identifier	ASSERT		3116673	0					
ANR	3116853	ArgumentList	_readyQ		3116673	1					
ANR	3116854	Argument	_readyQ		3116673	0					
ANR	3116855	Identifier	_readyQ		3116673	0					
ANR	3116856	IfStatement	if ( _readyQ -> IsMember ( node ) )		3116673	1					
ANR	3116857	Condition	_readyQ -> IsMember ( node )	3101:6:93683:93707	3116673	0	True				
ANR	3116858	CallExpression	_readyQ -> IsMember ( node )		3116673	0					
ANR	3116859	Callee	_readyQ -> IsMember		3116673	0					
ANR	3116860	PtrMemberAccess	_readyQ -> IsMember		3116673	0					
ANR	3116861	Identifier	_readyQ		3116673	0					
ANR	3116862	Identifier	IsMember		3116673	1					
ANR	3116863	ArgumentList	node		3116673	1					
ANR	3116864	Argument	node		3116673	0					
ANR	3116865	Identifier	node		3116673	0					
ANR	3116866	CompoundStatement		37:34:849:849	3116673	1					
ANR	3116867	ExpressionStatement	"debug_printf ( DEBUG_VERBOSE , ""=== Ready Queue (Before) ==="" )"	3105:3:93754:93815	3116673	0	True				
ANR	3116868	CallExpression	"debug_printf ( DEBUG_VERBOSE , ""=== Ready Queue (Before) ==="" )"		3116673	0					
ANR	3116869	Callee	debug_printf		3116673	0					
ANR	3116870	Identifier	debug_printf		3116673	0					
ANR	3116871	ArgumentList	DEBUG_VERBOSE		3116673	1					
ANR	3116872	Argument	DEBUG_VERBOSE		3116673	0					
ANR	3116873	Identifier	DEBUG_VERBOSE		3116673	0					
ANR	3116874	Argument	"""=== Ready Queue (Before) ==="""		3116673	1					
ANR	3116875	PrimaryExpression	"""=== Ready Queue (Before) ==="""		3116673	0					
ANR	3116876	ExpressionStatement	PrintReadyQ ( DEBUG_VERBOSE )	3106:3:93820:93848	3116673	1	True				
ANR	3116877	CallExpression	PrintReadyQ ( DEBUG_VERBOSE )		3116673	0					
ANR	3116878	Callee	PrintReadyQ		3116673	0					
ANR	3116879	Identifier	PrintReadyQ		3116673	0					
ANR	3116880	ArgumentList	DEBUG_VERBOSE		3116673	1					
ANR	3116881	Argument	DEBUG_VERBOSE		3116673	0					
ANR	3116882	Identifier	DEBUG_VERBOSE		3116673	0					
ANR	3116883	ExpressionStatement	removed = false	3108:3:93854:93869	3116673	2	True				
ANR	3116884	AssignmentExpression	removed = false		3116673	0		=			
ANR	3116885	Identifier	removed		3116673	0					
ANR	3116886	Identifier	false		3116673	1					
ANR	3116887	ExpressionStatement	_readyQ -> Rewind ( )	3109:3:93874:93891	3116673	3	True				
ANR	3116888	CallExpression	_readyQ -> Rewind ( )		3116673	0					
ANR	3116889	Callee	_readyQ -> Rewind		3116673	0					
ANR	3116890	PtrMemberAccess	_readyQ -> Rewind		3116673	0					
ANR	3116891	Identifier	_readyQ		3116673	0					
ANR	3116892	Identifier	Rewind		3116673	1					
ANR	3116893	ArgumentList			3116673	1					
ANR	3116894	WhileStatement	while ( _readyQ -> Next ( candidate ) )		3116673	4					
ANR	3116895	Condition	_readyQ -> Next ( candidate )	3110:10:93903:93928	3116673	0	True				
ANR	3116896	CallExpression	_readyQ -> Next ( candidate )		3116673	0					
ANR	3116897	Callee	_readyQ -> Next		3116673	0					
ANR	3116898	PtrMemberAccess	_readyQ -> Next		3116673	0					
ANR	3116899	Identifier	_readyQ		3116673	0					
ANR	3116900	Identifier	Next		3116673	1					
ANR	3116901	ArgumentList	candidate		3116673	1					
ANR	3116902	Argument	candidate		3116673	0					
ANR	3116903	Identifier	candidate		3116673	0					
ANR	3116904	CompoundStatement		46:39:1070:1070	3116673	1					
ANR	3116905	ExpressionStatement	ASSERT ( candidate )	3111:4:93938:93957	3116673	0	True				
ANR	3116906	CallExpression	ASSERT ( candidate )		3116673	0					
ANR	3116907	Callee	ASSERT		3116673	0					
ANR	3116908	Identifier	ASSERT		3116673	0					
ANR	3116909	ArgumentList	candidate		3116673	1					
ANR	3116910	Argument	candidate		3116673	0					
ANR	3116911	Identifier	candidate		3116673	0					
ANR	3116912	IfStatement	if ( candidate == node )		3116673	1					
ANR	3116913	Condition	candidate == node	3112:8:93967:93983	3116673	0	True				
ANR	3116914	EqualityExpression	candidate == node		3116673	0		==			
ANR	3116915	Identifier	candidate		3116673	0					
ANR	3116916	Identifier	node		3116673	1					
ANR	3116917	CompoundStatement		48:28:1125:1125	3116673	1					
ANR	3116918	ExpressionStatement	_readyQ -> DeleteCurrent ( )	3113:5:93994:94018	3116673	0	True				
ANR	3116919	CallExpression	_readyQ -> DeleteCurrent ( )		3116673	0					
ANR	3116920	Callee	_readyQ -> DeleteCurrent		3116673	0					
ANR	3116921	PtrMemberAccess	_readyQ -> DeleteCurrent		3116673	0					
ANR	3116922	Identifier	_readyQ		3116673	0					
ANR	3116923	Identifier	DeleteCurrent		3116673	1					
ANR	3116924	ArgumentList			3116673	1					
ANR	3116925	ExpressionStatement	removed = true	3114:5:94025:94039	3116673	1	True				
ANR	3116926	AssignmentExpression	removed = true		3116673	0		=			
ANR	3116927	Identifier	removed		3116673	0					
ANR	3116928	Identifier	true		3116673	1					
ANR	3116929	ContinueStatement	continue ;	3115:5:94046:94054	3116673	2	True				
ANR	3116930	ExpressionStatement	ASSERT ( removed )	3118:3:94070:94087	3116673	5	True				
ANR	3116931	CallExpression	ASSERT ( removed )		3116673	0					
ANR	3116932	Callee	ASSERT		3116673	0					
ANR	3116933	Identifier	ASSERT		3116673	0					
ANR	3116934	ArgumentList	removed		3116673	1					
ANR	3116935	Argument	removed		3116673	0					
ANR	3116936	Identifier	removed		3116673	0					
ANR	3116937	ExpressionStatement	ASSERT ( ! _readyQ -> IsMember ( node ) )	3119:3:94092:94128	3116673	6	True				
ANR	3116938	CallExpression	ASSERT ( ! _readyQ -> IsMember ( node ) )		3116673	0					
ANR	3116939	Callee	ASSERT		3116673	0					
ANR	3116940	Identifier	ASSERT		3116673	0					
ANR	3116941	ArgumentList	! _readyQ -> IsMember ( node )		3116673	1					
ANR	3116942	Argument	! _readyQ -> IsMember ( node )		3116673	0					
ANR	3116943	UnaryOperationExpression	! _readyQ -> IsMember ( node )		3116673	0					
ANR	3116944	UnaryOperator	!		3116673	0					
ANR	3116945	CallExpression	_readyQ -> IsMember ( node )		3116673	1					
ANR	3116946	Callee	_readyQ -> IsMember		3116673	0					
ANR	3116947	PtrMemberAccess	_readyQ -> IsMember		3116673	0					
ANR	3116948	Identifier	_readyQ		3116673	0					
ANR	3116949	Identifier	IsMember		3116673	1					
ANR	3116950	ArgumentList	node		3116673	1					
ANR	3116951	Argument	node		3116673	0					
ANR	3116952	Identifier	node		3116673	0					
ANR	3116953	ExpressionStatement	"debug_printf ( DEBUG_VERBOSE , ""=== Ready Queue (After) ==="" )"	3120:3:94133:94193	3116673	7	True				
ANR	3116954	CallExpression	"debug_printf ( DEBUG_VERBOSE , ""=== Ready Queue (After) ==="" )"		3116673	0					
ANR	3116955	Callee	debug_printf		3116673	0					
ANR	3116956	Identifier	debug_printf		3116673	0					
ANR	3116957	ArgumentList	DEBUG_VERBOSE		3116673	1					
ANR	3116958	Argument	DEBUG_VERBOSE		3116673	0					
ANR	3116959	Identifier	DEBUG_VERBOSE		3116673	0					
ANR	3116960	Argument	"""=== Ready Queue (After) ==="""		3116673	1					
ANR	3116961	PrimaryExpression	"""=== Ready Queue (After) ==="""		3116673	0					
ANR	3116962	ExpressionStatement	PrintReadyQ ( DEBUG_VERBOSE )	3121:3:94198:94226	3116673	8	True				
ANR	3116963	CallExpression	PrintReadyQ ( DEBUG_VERBOSE )		3116673	0					
ANR	3116964	Callee	PrintReadyQ		3116673	0					
ANR	3116965	Identifier	PrintReadyQ		3116673	0					
ANR	3116966	ArgumentList	DEBUG_VERBOSE		3116673	1					
ANR	3116967	Argument	DEBUG_VERBOSE		3116673	0					
ANR	3116968	Identifier	DEBUG_VERBOSE		3116673	0					
ANR	3116969	ElseStatement	else		3116673	0					
ANR	3116970	CompoundStatement		60:6:1379:1379	3116673	0					
ANR	3116971	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""ERROR: node %s in unexpected state (%s)\\n"" , node -> GetJobName ( ) , node -> GetStatusName ( ) )"	3127:2:94340:94462	3116673	0	True				
ANR	3116972	CallExpression	"debug_printf ( DEBUG_QUIET , ""ERROR: node %s in unexpected state (%s)\\n"" , node -> GetJobName ( ) , node -> GetStatusName ( ) )"		3116673	0					
ANR	3116973	Callee	debug_printf		3116673	0					
ANR	3116974	Identifier	debug_printf		3116673	0					
ANR	3116975	ArgumentList	DEBUG_QUIET		3116673	1					
ANR	3116976	Argument	DEBUG_QUIET		3116673	0					
ANR	3116977	Identifier	DEBUG_QUIET		3116673	0					
ANR	3116978	Argument	"""ERROR: node %s in unexpected state (%s)\\n"""		3116673	1					
ANR	3116979	PrimaryExpression	"""ERROR: node %s in unexpected state (%s)\\n"""		3116673	0					
ANR	3116980	Argument	node -> GetJobName ( )		3116673	2					
ANR	3116981	CallExpression	node -> GetJobName ( )		3116673	0					
ANR	3116982	Callee	node -> GetJobName		3116673	0					
ANR	3116983	PtrMemberAccess	node -> GetJobName		3116673	0					
ANR	3116984	Identifier	node		3116673	0					
ANR	3116985	Identifier	GetJobName		3116673	1					
ANR	3116986	ArgumentList			3116673	1					
ANR	3116987	Argument	node -> GetStatusName ( )		3116673	3					
ANR	3116988	CallExpression	node -> GetStatusName ( )		3116673	0					
ANR	3116989	Callee	node -> GetStatusName		3116673	0					
ANR	3116990	PtrMemberAccess	node -> GetStatusName		3116673	0					
ANR	3116991	Identifier	node		3116673	0					
ANR	3116992	Identifier	GetStatusName		3116673	1					
ANR	3116993	ArgumentList			3116673	1					
ANR	3116994	ExpressionStatement	"whynot . sprintf ( ""node in unexpected state (%s)"" , node -> GetStatusName ( ) )"	3129:2:94466:94544	3116673	1	True				
ANR	3116995	CallExpression	"whynot . sprintf ( ""node in unexpected state (%s)"" , node -> GetStatusName ( ) )"		3116673	0					
ANR	3116996	Callee	whynot . sprintf		3116673	0					
ANR	3116997	MemberAccess	whynot . sprintf		3116673	0					
ANR	3116998	Identifier	whynot		3116673	0					
ANR	3116999	Identifier	sprintf		3116673	1					
ANR	3117000	ArgumentList	"""node in unexpected state (%s)"""		3116673	1					
ANR	3117001	Argument	"""node in unexpected state (%s)"""		3116673	0					
ANR	3117002	PrimaryExpression	"""node in unexpected state (%s)"""		3116673	0					
ANR	3117003	Argument	node -> GetStatusName ( )		3116673	1					
ANR	3117004	CallExpression	node -> GetStatusName ( )		3116673	0					
ANR	3117005	Callee	node -> GetStatusName		3116673	0					
ANR	3117006	PtrMemberAccess	node -> GetStatusName		3116673	0					
ANR	3117007	Identifier	node		3116673	0					
ANR	3117008	Identifier	GetStatusName		3116673	1					
ANR	3117009	ArgumentList			3116673	1					
ANR	3117010	ReturnStatement	return false ;	3131:2:94548:94560	3116673	2	True				
ANR	3117011	Identifier	false		3116673	0					
ANR	3117012	ExpressionStatement	removed = false	3135:1:94597:94612	3116673	8	True				
ANR	3117013	AssignmentExpression	removed = false		3116673	0		=			
ANR	3117014	Identifier	removed		3116673	0					
ANR	3117015	Identifier	false		3116673	1					
ANR	3117016	ExpressionStatement	_jobs . Rewind ( )	3136:1:94615:94629	3116673	9	True				
ANR	3117017	CallExpression	_jobs . Rewind ( )		3116673	0					
ANR	3117018	Callee	_jobs . Rewind		3116673	0					
ANR	3117019	MemberAccess	_jobs . Rewind		3116673	0					
ANR	3117020	Identifier	_jobs		3116673	0					
ANR	3117021	Identifier	Rewind		3116673	1					
ANR	3117022	ArgumentList			3116673	1					
ANR	3117023	WhileStatement	while ( _jobs . Next ( candidate ) )		3116673	10					
ANR	3117024	Condition	_jobs . Next ( candidate )	3137:8:94639:94661	3116673	0	True				
ANR	3117025	CallExpression	_jobs . Next ( candidate )		3116673	0					
ANR	3117026	Callee	_jobs . Next		3116673	0					
ANR	3117027	MemberAccess	_jobs . Next		3116673	0					
ANR	3117028	Identifier	_jobs		3116673	0					
ANR	3117029	Identifier	Next		3116673	1					
ANR	3117030	ArgumentList	candidate		3116673	1					
ANR	3117031	Argument	candidate		3116673	0					
ANR	3117032	Identifier	candidate		3116673	0					
ANR	3117033	CompoundStatement		73:34:1803:1803	3116673	1					
ANR	3117034	ExpressionStatement	ASSERT ( candidate )	3138:2:94669:94688	3116673	0	True				
ANR	3117035	CallExpression	ASSERT ( candidate )		3116673	0					
ANR	3117036	Callee	ASSERT		3116673	0					
ANR	3117037	Identifier	ASSERT		3116673	0					
ANR	3117038	ArgumentList	candidate		3116673	1					
ANR	3117039	Argument	candidate		3116673	0					
ANR	3117040	Identifier	candidate		3116673	0					
ANR	3117041	IfStatement	if ( candidate == node )		3116673	1					
ANR	3117042	Condition	candidate == node	3139:12:94702:94718	3116673	0	True				
ANR	3117043	EqualityExpression	candidate == node		3116673	0		==			
ANR	3117044	Identifier	candidate		3116673	0					
ANR	3117045	Identifier	node		3116673	1					
ANR	3117046	CompoundStatement		75:32:1860:1860	3116673	1					
ANR	3117047	ExpressionStatement	_jobs . DeleteCurrent ( )	3140:3:94727:94748	3116673	0	True				
ANR	3117048	CallExpression	_jobs . DeleteCurrent ( )		3116673	0					
ANR	3117049	Callee	_jobs . DeleteCurrent		3116673	0					
ANR	3117050	MemberAccess	_jobs . DeleteCurrent		3116673	0					
ANR	3117051	Identifier	_jobs		3116673	0					
ANR	3117052	Identifier	DeleteCurrent		3116673	1					
ANR	3117053	ArgumentList			3116673	1					
ANR	3117054	ExpressionStatement	removed = true	3141:3:94753:94767	3116673	1	True				
ANR	3117055	AssignmentExpression	removed = true		3116673	0		=			
ANR	3117056	Identifier	removed		3116673	0					
ANR	3117057	Identifier	true		3116673	1					
ANR	3117058	ContinueStatement	continue ;	3142:3:94772:94780	3116673	2	True				
ANR	3117059	ExpressionStatement	ASSERT ( removed == true )	3152:1:95199:95224	3116673	11	True				
ANR	3117060	CallExpression	ASSERT ( removed == true )		3116673	0					
ANR	3117061	Callee	ASSERT		3116673	0					
ANR	3117062	Identifier	ASSERT		3116673	0					
ANR	3117063	ArgumentList	removed == true		3116673	1					
ANR	3117064	Argument	removed == true		3116673	0					
ANR	3117065	EqualityExpression	removed == true		3116673	0		==			
ANR	3117066	Identifier	removed		3116673	0					
ANR	3117067	Identifier	true		3116673	1					
ANR	3117068	ExpressionStatement	"whynot = ""n/a"""	3154:1:95228:95242	3116673	12	True				
ANR	3117069	AssignmentExpression	"whynot = ""n/a"""		3116673	0		=			
ANR	3117070	Identifier	whynot		3116673	0					
ANR	3117071	PrimaryExpression	"""n/a"""		3116673	1					
ANR	3117072	ReturnStatement	return true ;	3155:1:95245:95256	3116673	13	True				
ANR	3117073	Identifier	true		3116673	0					
ANR	3117074	ReturnType	bool		3116673	1					
ANR	3117075	Identifier	Dag :: RemoveNode		3116673	2					
ANR	3117076	ParameterList	"const char * name , MyString & whynot"		3116673	3					
ANR	3117077	Parameter	const char * name	3064:17:92824:92839	3116673	0	True				
ANR	3117078	ParameterType	const char *		3116673	0					
ANR	3117079	Identifier	name		3116673	1					
ANR	3117080	Parameter	MyString & whynot	3064:35:92842:92857	3116673	1	True				
ANR	3117081	ParameterType	MyString &		3116673	0					
ANR	3117082	Identifier	whynot		3116673	1					
ANR	3117083	CFGEntryNode	ENTRY		3116673		True				
ANR	3117084	CFGExitNode	EXIT		3116673		True				
ANR	3117085	Symbol	node -> IsEmpty		3116673						
ANR	3117086	Symbol	node -> GetStatusName		3116673						
ANR	3117087	Symbol	node -> GetStatus		3116673						
ANR	3117088	Symbol	Job :: Q_CHILDREN		3116673						
ANR	3117089	Symbol	whynot		3116673						
ANR	3117090	Symbol	FindNodeByName		3116673						
ANR	3117091	Symbol	DEBUG_QUIET		3116673						
ANR	3117092	Symbol	candidate		3116673						
ANR	3117093	Symbol	Job :: STATUS_READY		3116673						
ANR	3117094	Symbol	_readyQ		3116673						
ANR	3117095	Symbol	_readyQ -> Next		3116673						
ANR	3117096	Symbol	Job :: STATUS_DONE		3116673						
ANR	3117097	Symbol	_jobs		3116673						
ANR	3117098	Symbol	* node		3116673						
ANR	3117099	Symbol	DEBUG_VERBOSE		3116673						
ANR	3117100	Symbol	_readyQ -> IsMember		3116673						
ANR	3117101	Symbol	* _readyQ		3116673						
ANR	3117102	Symbol	NULL		3116673						
ANR	3117103	Symbol	node -> GetJobName		3116673						
ANR	3117104	Symbol	false		3116673						
ANR	3117105	Symbol	Job :: STATUS_ERROR		3116673						
ANR	3117106	Symbol	_jobs . Next		3116673						
ANR	3117107	Symbol	node		3116673						
ANR	3117108	Symbol	removed		3116673						
ANR	3117109	Symbol	Job :: Q_PARENTS		3116673						
ANR	3117110	Symbol	_numNodesDone		3116673						
ANR	3117111	Symbol	name		3116673						
ANR	3117112	Symbol	_numNodesFailed		3116673						
ANR	3117113	Symbol	true		3116673						
ANR	3117114	Symbol	node -> IsActive		3116673						
ANR	3117115	Function	Dag :: RemoveDependency	3160:0:95340:95465							
ANR	3117116	FunctionDef	"Dag :: RemoveDependency (Job * parent , Job * child)"		3117115	0					
ANR	3117117	CompoundStatement		3162:0:95394:95465	3117115	0					
ANR	3117118	IdentifierDeclStatement	MyString whynot ;	3163:1:95397:95412	3117115	0	True				
ANR	3117119	IdentifierDecl	whynot		3117115	0					
ANR	3117120	IdentifierDeclType	MyString		3117115	0					
ANR	3117121	Identifier	whynot		3117115	1					
ANR	3117122	ReturnStatement	"return RemoveDependency ( parent , child , whynot ) ;"	3164:1:95415:95463	3117115	1	True				
ANR	3117123	CallExpression	"RemoveDependency ( parent , child , whynot )"		3117115	0					
ANR	3117124	Callee	RemoveDependency		3117115	0					
ANR	3117125	Identifier	RemoveDependency		3117115	0					
ANR	3117126	ArgumentList	parent		3117115	1					
ANR	3117127	Argument	parent		3117115	0					
ANR	3117128	Identifier	parent		3117115	0					
ANR	3117129	Argument	child		3117115	1					
ANR	3117130	Identifier	child		3117115	0					
ANR	3117131	Argument	whynot		3117115	2					
ANR	3117132	Identifier	whynot		3117115	0					
ANR	3117133	ReturnType	bool		3117115	1					
ANR	3117134	Identifier	Dag :: RemoveDependency		3117115	2					
ANR	3117135	ParameterList	"Job * parent , Job * child"		3117115	3					
ANR	3117136	Parameter	Job * parent	3161:23:95368:95378	3117115	0	True				
ANR	3117137	ParameterType	Job *		3117115	0					
ANR	3117138	Identifier	parent		3117115	1					
ANR	3117139	Parameter	Job * child	3161:36:95381:95390	3117115	1	True				
ANR	3117140	ParameterType	Job *		3117115	0					
ANR	3117141	Identifier	child		3117115	1					
ANR	3117142	CFGEntryNode	ENTRY		3117115		True				
ANR	3117143	CFGExitNode	EXIT		3117115		True				
ANR	3117144	Symbol	parent		3117115						
ANR	3117145	Symbol	whynot		3117115						
ANR	3117146	Symbol	RemoveDependency		3117115						
ANR	3117147	Symbol	child		3117115						
ANR	3117148	Function	Dag :: RemoveDependency	3168:0:95546:96363							
ANR	3117149	FunctionDef	"Dag :: RemoveDependency (Job * parent , Job * child , MyString & whynot)"		3117148	0					
ANR	3117150	CompoundStatement		3170:0:95618:96363	3117148	0					
ANR	3117151	IfStatement	if ( ! parent )		3117148	0					
ANR	3117152	Condition	! parent	3171:5:95625:95631	3117148	0	True				
ANR	3117153	UnaryOperationExpression	! parent		3117148	0					
ANR	3117154	UnaryOperator	!		3117148	0					
ANR	3117155	Identifier	parent		3117148	1					
ANR	3117156	CompoundStatement		2:15:16:16	3117148	1					
ANR	3117157	ExpressionStatement	"whynot = ""parent == NULL"""	3172:2:95639:95664	3117148	0	True				
ANR	3117158	AssignmentExpression	"whynot = ""parent == NULL"""		3117148	0		=			
ANR	3117159	Identifier	whynot		3117148	0					
ANR	3117160	PrimaryExpression	"""parent == NULL"""		3117148	1					
ANR	3117161	ReturnStatement	return false ;	3173:2:95668:95680	3117148	1	True				
ANR	3117162	Identifier	false		3117148	0					
ANR	3117163	IfStatement	if ( ! child )		3117148	1					
ANR	3117164	Condition	! child	3175:5:95690:95695	3117148	0	True				
ANR	3117165	UnaryOperationExpression	! child		3117148	0					
ANR	3117166	UnaryOperator	!		3117148	0					
ANR	3117167	Identifier	child		3117148	1					
ANR	3117168	CompoundStatement		6:14:80:80	3117148	1					
ANR	3117169	ExpressionStatement	"whynot = ""child == NULL"""	3176:2:95703:95727	3117148	0	True				
ANR	3117170	AssignmentExpression	"whynot = ""child == NULL"""		3117148	0		=			
ANR	3117171	Identifier	whynot		3117148	0					
ANR	3117172	PrimaryExpression	"""child == NULL"""		3117148	1					
ANR	3117173	ReturnStatement	return false ;	3177:2:95731:95743	3117148	1	True				
ANR	3117174	Identifier	false		3117148	0					
ANR	3117175	IfStatement	if ( ! parent -> HasChild ( child ) )		3117148	2					
ANR	3117176	Condition	! parent -> HasChild ( child )	3180:5:95754:95779	3117148	0	True				
ANR	3117177	UnaryOperationExpression	! parent -> HasChild ( child )		3117148	0					
ANR	3117178	UnaryOperator	!		3117148	0					
ANR	3117179	CallExpression	parent -> HasChild ( child )		3117148	1					
ANR	3117180	Callee	parent -> HasChild		3117148	0					
ANR	3117181	PtrMemberAccess	parent -> HasChild		3117148	0					
ANR	3117182	Identifier	parent		3117148	0					
ANR	3117183	Identifier	HasChild		3117148	1					
ANR	3117184	ArgumentList	child		3117148	1					
ANR	3117185	Argument	child		3117148	0					
ANR	3117186	Identifier	child		3117148	0					
ANR	3117187	CompoundStatement		11:34:164:164	3117148	1					
ANR	3117188	ExpressionStatement	"whynot = ""no such dependency"""	3181:2:95787:95816	3117148	0	True				
ANR	3117189	AssignmentExpression	"whynot = ""no such dependency"""		3117148	0		=			
ANR	3117190	Identifier	whynot		3117148	0					
ANR	3117191	PrimaryExpression	"""no such dependency"""		3117148	1					
ANR	3117192	ReturnStatement	return false ;	3182:2:95820:95832	3117148	1	True				
ANR	3117193	Identifier	false		3117148	0					
ANR	3117194	ExpressionStatement	ASSERT ( child -> HasParent ( parent ) )	3184:1:95838:95874	3117148	3	True				
ANR	3117195	CallExpression	ASSERT ( child -> HasParent ( parent ) )		3117148	0					
ANR	3117196	Callee	ASSERT		3117148	0					
ANR	3117197	Identifier	ASSERT		3117148	0					
ANR	3117198	ArgumentList	child -> HasParent ( parent )		3117148	1					
ANR	3117199	Argument	child -> HasParent ( parent )		3117148	0					
ANR	3117200	CallExpression	child -> HasParent ( parent )		3117148	0					
ANR	3117201	Callee	child -> HasParent		3117148	0					
ANR	3117202	PtrMemberAccess	child -> HasParent		3117148	0					
ANR	3117203	Identifier	child		3117148	0					
ANR	3117204	Identifier	HasParent		3117148	1					
ANR	3117205	ArgumentList	parent		3117148	1					
ANR	3117206	Argument	parent		3117148	0					
ANR	3117207	Identifier	parent		3117148	0					
ANR	3117208	IfStatement	"if ( ! parent -> RemoveChild ( child , whynot ) )"		3117148	4					
ANR	3117209	Condition	"! parent -> RemoveChild ( child , whynot )"	3187:5:95934:95970	3117148	0	True				
ANR	3117210	UnaryOperationExpression	"! parent -> RemoveChild ( child , whynot )"		3117148	0					
ANR	3117211	UnaryOperator	!		3117148	0					
ANR	3117212	CallExpression	"parent -> RemoveChild ( child , whynot )"		3117148	1					
ANR	3117213	Callee	parent -> RemoveChild		3117148	0					
ANR	3117214	PtrMemberAccess	parent -> RemoveChild		3117148	0					
ANR	3117215	Identifier	parent		3117148	0					
ANR	3117216	Identifier	RemoveChild		3117148	1					
ANR	3117217	ArgumentList	child		3117148	1					
ANR	3117218	Argument	child		3117148	0					
ANR	3117219	Identifier	child		3117148	0					
ANR	3117220	Argument	whynot		3117148	1					
ANR	3117221	Identifier	whynot		3117148	0					
ANR	3117222	CompoundStatement		18:45:355:355	3117148	1					
ANR	3117223	ReturnStatement	return false ;	3188:1:95977:95989	3117148	0	True				
ANR	3117224	Identifier	false		3117148	0					
ANR	3117225	ExpressionStatement	ASSERT ( parent -> HasChild ( child ) == false )	3190:1:95995:96039	3117148	5	True				
ANR	3117226	CallExpression	ASSERT ( parent -> HasChild ( child ) == false )		3117148	0					
ANR	3117227	Callee	ASSERT		3117148	0					
ANR	3117228	Identifier	ASSERT		3117148	0					
ANR	3117229	ArgumentList	parent -> HasChild ( child ) == false		3117148	1					
ANR	3117230	Argument	parent -> HasChild ( child ) == false		3117148	0					
ANR	3117231	EqualityExpression	parent -> HasChild ( child ) == false		3117148	0		==			
ANR	3117232	CallExpression	parent -> HasChild ( child )		3117148	0					
ANR	3117233	Callee	parent -> HasChild		3117148	0					
ANR	3117234	PtrMemberAccess	parent -> HasChild		3117148	0					
ANR	3117235	Identifier	parent		3117148	0					
ANR	3117236	Identifier	HasChild		3117148	1					
ANR	3117237	ArgumentList	child		3117148	1					
ANR	3117238	Argument	child		3117148	0					
ANR	3117239	Identifier	child		3117148	0					
ANR	3117240	Identifier	false		3117148	1					
ANR	3117241	IfStatement	"if ( ! child -> RemoveParent ( parent , whynot ) )"		3117148	6					
ANR	3117242	Condition	"! child -> RemoveParent ( parent , whynot )"	3193:5:96098:96135	3117148	0	True				
ANR	3117243	UnaryOperationExpression	"! child -> RemoveParent ( parent , whynot )"		3117148	0					
ANR	3117244	UnaryOperator	!		3117148	0					
ANR	3117245	CallExpression	"child -> RemoveParent ( parent , whynot )"		3117148	1					
ANR	3117246	Callee	child -> RemoveParent		3117148	0					
ANR	3117247	PtrMemberAccess	child -> RemoveParent		3117148	0					
ANR	3117248	Identifier	child		3117148	0					
ANR	3117249	Identifier	RemoveParent		3117148	1					
ANR	3117250	ArgumentList	parent		3117148	1					
ANR	3117251	Argument	parent		3117148	0					
ANR	3117252	Identifier	parent		3117148	0					
ANR	3117253	Argument	whynot		3117148	1					
ANR	3117254	Identifier	whynot		3117148	0					
ANR	3117255	CompoundStatement		24:46:520:520	3117148	1					
ANR	3117256	ExpressionStatement	ASSERT ( false )	3196:2:96244:96259	3117148	0	True				
ANR	3117257	CallExpression	ASSERT ( false )		3117148	0					
ANR	3117258	Callee	ASSERT		3117148	0					
ANR	3117259	Identifier	ASSERT		3117148	0					
ANR	3117260	ArgumentList	false		3117148	1					
ANR	3117261	Argument	false		3117148	0					
ANR	3117262	Identifier	false		3117148	0					
ANR	3117263	ReturnStatement	return false ;	3197:2:96263:96275	3117148	1	True				
ANR	3117264	Identifier	false		3117148	0					
ANR	3117265	ExpressionStatement	ASSERT ( child -> HasParent ( parent ) == false )	3199:1:96281:96326	3117148	7	True				
ANR	3117266	CallExpression	ASSERT ( child -> HasParent ( parent ) == false )		3117148	0					
ANR	3117267	Callee	ASSERT		3117148	0					
ANR	3117268	Identifier	ASSERT		3117148	0					
ANR	3117269	ArgumentList	child -> HasParent ( parent ) == false		3117148	1					
ANR	3117270	Argument	child -> HasParent ( parent ) == false		3117148	0					
ANR	3117271	EqualityExpression	child -> HasParent ( parent ) == false		3117148	0		==			
ANR	3117272	CallExpression	child -> HasParent ( parent )		3117148	0					
ANR	3117273	Callee	child -> HasParent		3117148	0					
ANR	3117274	PtrMemberAccess	child -> HasParent		3117148	0					
ANR	3117275	Identifier	child		3117148	0					
ANR	3117276	Identifier	HasParent		3117148	1					
ANR	3117277	ArgumentList	parent		3117148	1					
ANR	3117278	Argument	parent		3117148	0					
ANR	3117279	Identifier	parent		3117148	0					
ANR	3117280	Identifier	false		3117148	1					
ANR	3117281	ExpressionStatement	"whynot = ""n/a"""	3201:1:96330:96344	3117148	8	True				
ANR	3117282	AssignmentExpression	"whynot = ""n/a"""		3117148	0		=			
ANR	3117283	Identifier	whynot		3117148	0					
ANR	3117284	PrimaryExpression	"""n/a"""		3117148	1					
ANR	3117285	ReturnStatement	return true ;	3202:4:96350:96361	3117148	9	True				
ANR	3117286	Identifier	true		3117148	0					
ANR	3117287	ReturnType	bool		3117148	1					
ANR	3117288	Identifier	Dag :: RemoveDependency		3117148	2					
ANR	3117289	ParameterList	"Job * parent , Job * child , MyString & whynot"		3117148	3					
ANR	3117290	Parameter	Job * parent	3169:23:95574:95584	3117148	0	True				
ANR	3117291	ParameterType	Job *		3117148	0					
ANR	3117292	Identifier	parent		3117148	1					
ANR	3117293	Parameter	Job * child	3169:36:95587:95596	3117148	1	True				
ANR	3117294	ParameterType	Job *		3117148	0					
ANR	3117295	Identifier	child		3117148	1					
ANR	3117296	Parameter	MyString & whynot	3169:48:95599:95614	3117148	2	True				
ANR	3117297	ParameterType	MyString &		3117148	0					
ANR	3117298	Identifier	whynot		3117148	1					
ANR	3117299	CFGEntryNode	ENTRY		3117148		True				
ANR	3117300	CFGExitNode	EXIT		3117148		True				
ANR	3117301	Symbol	parent		3117148						
ANR	3117302	Symbol	* child		3117148						
ANR	3117303	Symbol	* parent		3117148						
ANR	3117304	Symbol	child -> HasParent		3117148						
ANR	3117305	Symbol	false		3117148						
ANR	3117306	Symbol	true		3117148						
ANR	3117307	Symbol	whynot		3117148						
ANR	3117308	Symbol	parent -> RemoveChild		3117148						
ANR	3117309	Symbol	parent -> HasChild		3117148						
ANR	3117310	Symbol	child		3117148						
ANR	3117311	Symbol	child -> RemoveParent		3117148						
ANR	3117312	Function	Dag :: LogEventNodeLookup	3207:0:96445:99167							
ANR	3117313	FunctionDef	"Dag :: LogEventNodeLookup (int logsource , const ULogEvent * event , bool & submitEventIsSane)"		3117312	0					
ANR	3117314	CompoundStatement		3210:0:96543:99167	3117312	0					
ANR	3117315	ExpressionStatement	ASSERT ( event )	3211:1:96546:96561	3117312	0	True				
ANR	3117316	CallExpression	ASSERT ( event )		3117312	0					
ANR	3117317	Callee	ASSERT		3117312	0					
ANR	3117318	Identifier	ASSERT		3117312	0					
ANR	3117319	ArgumentList	event		3117312	1					
ANR	3117320	Argument	event		3117312	0					
ANR	3117321	Identifier	event		3117312	0					
ANR	3117322	ExpressionStatement	submitEventIsSane = false	3212:1:96564:96589	3117312	1	True				
ANR	3117323	AssignmentExpression	submitEventIsSane = false		3117312	0		=			
ANR	3117324	Identifier	submitEventIsSane		3117312	0					
ANR	3117325	Identifier	false		3117312	1					
ANR	3117326	IdentifierDeclStatement	Job * node = NULL ;	3214:1:96593:96609	3117312	2	True				
ANR	3117327	IdentifierDecl	* node = NULL		3117312	0					
ANR	3117328	IdentifierDeclType	Job *		3117312	0					
ANR	3117329	Identifier	node		3117312	1					
ANR	3117330	AssignmentExpression	* node = NULL		3117312	2		=			
ANR	3117331	Identifier	NULL		3117312	0					
ANR	3117332	Identifier	NULL		3117312	1					
ANR	3117333	IdentifierDeclStatement	"CondorID condorID ( event -> cluster , event -> proc , event -> subproc ) ;"	3215:1:96612:96676	3117312	3	True				
ANR	3117334	IdentifierDecl	"condorID ( event -> cluster , event -> proc , event -> subproc )"		3117312	0					
ANR	3117335	IdentifierDeclType	CondorID		3117312	0					
ANR	3117336	Identifier	condorID		3117312	1					
ANR	3117337	Expression	"event -> cluster , event -> proc , event -> subproc"		3117312	2					
ANR	3117338	PtrMemberAccess	event -> cluster		3117312	0					
ANR	3117339	Identifier	event		3117312	0					
ANR	3117340	Identifier	cluster		3117312	1					
ANR	3117341	Expression	"event -> proc , event -> subproc"		3117312	1					
ANR	3117342	PtrMemberAccess	event -> proc		3117312	0					
ANR	3117343	Identifier	event		3117312	0					
ANR	3117344	Identifier	proc		3117312	1					
ANR	3117345	PtrMemberAccess	event -> subproc		3117312	1					
ANR	3117346	Identifier	event		3117312	0					
ANR	3117347	Identifier	subproc		3117312	1					
ANR	3117348	IfStatement	if ( event -> eventNumber != ULOG_SUBMIT )		3117312	4					
ANR	3117349	Condition	event -> eventNumber != ULOG_SUBMIT	3221:5:96842:96874	3117312	0	True				
ANR	3117350	EqualityExpression	event -> eventNumber != ULOG_SUBMIT		3117312	0		!=			
ANR	3117351	PtrMemberAccess	event -> eventNumber		3117312	0					
ANR	3117352	Identifier	event		3117312	0					
ANR	3117353	Identifier	eventNumber		3117312	1					
ANR	3117354	Identifier	ULOG_SUBMIT		3117312	1					
ANR	3117355	CompoundStatement		12:41:334:334	3117312	1					
ANR	3117356	ExpressionStatement	"node = FindNodeByEventID ( logsource , condorID )"	3222:3:96883:96930	3117312	0	True				
ANR	3117357	AssignmentExpression	"node = FindNodeByEventID ( logsource , condorID )"		3117312	0		=			
ANR	3117358	Identifier	node		3117312	0					
ANR	3117359	CallExpression	"FindNodeByEventID ( logsource , condorID )"		3117312	1					
ANR	3117360	Callee	FindNodeByEventID		3117312	0					
ANR	3117361	Identifier	FindNodeByEventID		3117312	0					
ANR	3117362	ArgumentList	logsource		3117312	1					
ANR	3117363	Argument	logsource		3117312	0					
ANR	3117364	Identifier	logsource		3117312	0					
ANR	3117365	Argument	condorID		3117312	1					
ANR	3117366	Identifier	condorID		3117312	0					
ANR	3117367	IfStatement	if ( node )		3117312	1					
ANR	3117368	Condition	node	3223:7:96939:96942	3117312	0	True				
ANR	3117369	Identifier	node		3117312	0					
ANR	3117370	CompoundStatement		14:14:402:402	3117312	1					
ANR	3117371	ReturnStatement	return node ;	3224:5:96953:96964	3117312	0	True				
ANR	3117372	Identifier	node		3117312	0					
ANR	3117373	IfStatement	if ( event -> eventNumber == ULOG_SUBMIT )		3117312	5					
ANR	3117374	Condition	event -> eventNumber == ULOG_SUBMIT	3243:5:97592:97624	3117312	0	True				
ANR	3117375	EqualityExpression	event -> eventNumber == ULOG_SUBMIT		3117312	0		==			
ANR	3117376	PtrMemberAccess	event -> eventNumber		3117312	0					
ANR	3117377	Identifier	event		3117312	0					
ANR	3117378	Identifier	eventNumber		3117312	1					
ANR	3117379	Identifier	ULOG_SUBMIT		3117312	1					
ANR	3117380	CompoundStatement		35:2:1088:1147	3117312	1					
ANR	3117381	IdentifierDeclStatement	const SubmitEvent * submit_event = ( const SubmitEvent * ) event ;	3244:2:97632:97691	3117312	0	True				
ANR	3117382	IdentifierDecl	* submit_event = ( const SubmitEvent * ) event		3117312	0					
ANR	3117383	IdentifierDeclType	const SubmitEvent *		3117312	0					
ANR	3117384	Identifier	submit_event		3117312	1					
ANR	3117385	AssignmentExpression	* submit_event = ( const SubmitEvent * ) event		3117312	2		=			
ANR	3117386	Identifier	submit_event		3117312	0					
ANR	3117387	CastExpression	( const SubmitEvent * ) event		3117312	1					
ANR	3117388	CastTarget	const SubmitEvent *		3117312	0					
ANR	3117389	Identifier	event		3117312	1					
ANR	3117390	IfStatement	if ( submit_event -> submitEventLogNotes )		3117312	1					
ANR	3117391	Condition	submit_event -> submitEventLogNotes	3245:7:97700:97732	3117312	0	True				
ANR	3117392	PtrMemberAccess	submit_event -> submitEventLogNotes		3117312	0					
ANR	3117393	Identifier	submit_event		3117312	0					
ANR	3117394	Identifier	submitEventLogNotes		3117312	1					
ANR	3117395	CompoundStatement		37:3:1197:1221	3117312	1					
ANR	3117396	IdentifierDeclStatement	"char nodeName [ 1024 ] = """" ;"	3246:3:97741:97765	3117312	0	True				
ANR	3117397	IdentifierDecl	"nodeName [ 1024 ] = """""		3117312	0					
ANR	3117398	IdentifierDeclType	char [ 1024 ]		3117312	0					
ANR	3117399	Identifier	nodeName		3117312	1					
ANR	3117400	PrimaryExpression	1024		3117312	2					
ANR	3117401	AssignmentExpression	"nodeName [ 1024 ] = """""		3117312	3		=			
ANR	3117402	Identifier	nodeName		3117312	0					
ANR	3117403	PrimaryExpression	""""""		3117312	1					
ANR	3117404	IfStatement	"if ( sscanf ( submit_event -> submitEventLogNotes , ""DAG Node: %1023s"" , nodeName ) == 1 )"		3117312	1					
ANR	3117405	Condition	"sscanf ( submit_event -> submitEventLogNotes , ""DAG Node: %1023s"" , nodeName ) == 1"	3247:8:97775:97859	3117312	0	True				
ANR	3117406	EqualityExpression	"sscanf ( submit_event -> submitEventLogNotes , ""DAG Node: %1023s"" , nodeName ) == 1"		3117312	0		==			
ANR	3117407	CallExpression	"sscanf ( submit_event -> submitEventLogNotes , ""DAG Node: %1023s"" , nodeName )"		3117312	0					
ANR	3117408	Callee	sscanf		3117312	0					
ANR	3117409	Identifier	sscanf		3117312	0					
ANR	3117410	ArgumentList	submit_event -> submitEventLogNotes		3117312	1					
ANR	3117411	Argument	submit_event -> submitEventLogNotes		3117312	0					
ANR	3117412	PtrMemberAccess	submit_event -> submitEventLogNotes		3117312	0					
ANR	3117413	Identifier	submit_event		3117312	0					
ANR	3117414	Identifier	submitEventLogNotes		3117312	1					
ANR	3117415	Argument	"""DAG Node: %1023s"""		3117312	1					
ANR	3117416	PrimaryExpression	"""DAG Node: %1023s"""		3117312	0					
ANR	3117417	Argument	nodeName		3117312	2					
ANR	3117418	Identifier	nodeName		3117312	0					
ANR	3117419	PrimaryExpression	1		3117312	1					
ANR	3117420	CompoundStatement		39:45:1319:1319	3117312	1					
ANR	3117421	ExpressionStatement	node = FindNodeByName ( nodeName )	3249:4:97869:97902	3117312	0	True				
ANR	3117422	AssignmentExpression	node = FindNodeByName ( nodeName )		3117312	0		=			
ANR	3117423	Identifier	node		3117312	0					
ANR	3117424	CallExpression	FindNodeByName ( nodeName )		3117312	1					
ANR	3117425	Callee	FindNodeByName		3117312	0					
ANR	3117426	Identifier	FindNodeByName		3117312	0					
ANR	3117427	ArgumentList	nodeName		3117312	1					
ANR	3117428	Argument	nodeName		3117312	0					
ANR	3117429	Identifier	nodeName		3117312	0					
ANR	3117430	IfStatement	if ( node )		3117312	1					
ANR	3117431	Condition	node	3250:8:97912:97915	3117312	0	True				
ANR	3117432	Identifier	node		3117312	0					
ANR	3117433	CompoundStatement		54:5:1864:1935	3117312	1					
ANR	3117434	ExpressionStatement	"submitEventIsSane = SanityCheckSubmitEvent ( condorID , node )"	3251:5:97926:97994	3117312	0	True				
ANR	3117435	AssignmentExpression	"submitEventIsSane = SanityCheckSubmitEvent ( condorID , node )"		3117312	0		=			
ANR	3117436	Identifier	submitEventIsSane		3117312	0					
ANR	3117437	CallExpression	"SanityCheckSubmitEvent ( condorID , node )"		3117312	1					
ANR	3117438	Callee	SanityCheckSubmitEvent		3117312	0					
ANR	3117439	Identifier	SanityCheckSubmitEvent		3117312	0					
ANR	3117440	ArgumentList	condorID		3117312	1					
ANR	3117441	Argument	condorID		3117312	0					
ANR	3117442	Identifier	condorID		3117312	0					
ANR	3117443	Argument	node		3117312	1					
ANR	3117444	Identifier	node		3117312	0					
ANR	3117445	ExpressionStatement	node -> _CondorID = condorID	3253:5:98001:98027	3117312	1	True				
ANR	3117446	AssignmentExpression	node -> _CondorID = condorID		3117312	0		=			
ANR	3117447	PtrMemberAccess	node -> _CondorID		3117312	0					
ANR	3117448	Identifier	node		3117312	0					
ANR	3117449	Identifier	_CondorID		3117312	1					
ANR	3117450	Identifier	condorID		3117312	1					
ANR	3117451	IdentifierDeclStatement	Job * tmpNode = NULL ;	3259:5:98260:98279	3117312	2	True				
ANR	3117452	IdentifierDecl	* tmpNode = NULL		3117312	0					
ANR	3117453	IdentifierDeclType	Job *		3117312	0					
ANR	3117454	Identifier	tmpNode		3117312	1					
ANR	3117455	AssignmentExpression	* tmpNode = NULL		3117312	2		=			
ANR	3117456	Identifier	NULL		3117312	0					
ANR	3117457	Identifier	NULL		3117312	1					
ANR	3117458	IdentifierDeclStatement	bool isNoop = JobIsNoop ( condorID ) ;	3260:5:98286:98321	3117312	3	True				
ANR	3117459	IdentifierDecl	isNoop = JobIsNoop ( condorID )		3117312	0					
ANR	3117460	IdentifierDeclType	bool		3117312	0					
ANR	3117461	Identifier	isNoop		3117312	1					
ANR	3117462	AssignmentExpression	isNoop = JobIsNoop ( condorID )		3117312	2		=			
ANR	3117463	Identifier	isNoop		3117312	0					
ANR	3117464	CallExpression	JobIsNoop ( condorID )		3117312	1					
ANR	3117465	Callee	JobIsNoop		3117312	0					
ANR	3117466	Identifier	JobIsNoop		3117312	0					
ANR	3117467	ArgumentList	condorID		3117312	1					
ANR	3117468	Argument	condorID		3117312	0					
ANR	3117469	Identifier	condorID		3117312	0					
ANR	3117470	ExpressionStatement	ASSERT ( isNoop == node -> GetNoop ( ) )	3261:5:98328:98363	3117312	4	True				
ANR	3117471	CallExpression	ASSERT ( isNoop == node -> GetNoop ( ) )		3117312	0					
ANR	3117472	Callee	ASSERT		3117312	0					
ANR	3117473	Identifier	ASSERT		3117312	0					
ANR	3117474	ArgumentList	isNoop == node -> GetNoop ( )		3117312	1					
ANR	3117475	Argument	isNoop == node -> GetNoop ( )		3117312	0					
ANR	3117476	EqualityExpression	isNoop == node -> GetNoop ( )		3117312	0		==			
ANR	3117477	Identifier	isNoop		3117312	0					
ANR	3117478	CallExpression	node -> GetNoop ( )		3117312	1					
ANR	3117479	Callee	node -> GetNoop		3117312	0					
ANR	3117480	PtrMemberAccess	node -> GetNoop		3117312	0					
ANR	3117481	Identifier	node		3117312	0					
ANR	3117482	Identifier	GetNoop		3117312	1					
ANR	3117483	ArgumentList			3117312	1					
ANR	3117484	IdentifierDeclStatement	int id = GetIndexID ( condorID ) ;	3262:5:98370:98401	3117312	5	True				
ANR	3117485	IdentifierDecl	id = GetIndexID ( condorID )		3117312	0					
ANR	3117486	IdentifierDeclType	int		3117312	0					
ANR	3117487	Identifier	id		3117312	1					
ANR	3117488	AssignmentExpression	id = GetIndexID ( condorID )		3117312	2		=			
ANR	3117489	Identifier	id		3117312	0					
ANR	3117490	CallExpression	GetIndexID ( condorID )		3117312	1					
ANR	3117491	Callee	GetIndexID		3117312	0					
ANR	3117492	Identifier	GetIndexID		3117312	0					
ANR	3117493	ArgumentList	condorID		3117312	1					
ANR	3117494	Argument	condorID		3117312	0					
ANR	3117495	Identifier	condorID		3117312	0					
ANR	3117496	IdentifierDeclStatement	"HashTable < int , Job * > * ht = GetEventIDHash ( isNoop , logsource ) ;"	3263:5:98408:98479	3117312	6	True				
ANR	3117497	IdentifierDecl	"* ht = GetEventIDHash ( isNoop , logsource )"		3117312	0					
ANR	3117498	IdentifierDeclType	"HashTable < int , Job * > *"		3117312	0					
ANR	3117499	Identifier	ht		3117312	1					
ANR	3117500	AssignmentExpression	"* ht = GetEventIDHash ( isNoop , logsource )"		3117312	2		=			
ANR	3117501	Identifier	ht		3117312	0					
ANR	3117502	CallExpression	"GetEventIDHash ( isNoop , logsource )"		3117312	1					
ANR	3117503	Callee	GetEventIDHash		3117312	0					
ANR	3117504	Identifier	GetEventIDHash		3117312	0					
ANR	3117505	ArgumentList	isNoop		3117312	1					
ANR	3117506	Argument	isNoop		3117312	0					
ANR	3117507	Identifier	isNoop		3117312	0					
ANR	3117508	Argument	logsource		3117312	1					
ANR	3117509	Identifier	logsource		3117312	0					
ANR	3117510	IfStatement	"if ( ht -> lookup ( id , tmpNode ) != 0 )"		3117312	7					
ANR	3117511	Condition	"ht -> lookup ( id , tmpNode ) != 0"	3265:10:98491:98518	3117312	0	True				
ANR	3117512	EqualityExpression	"ht -> lookup ( id , tmpNode ) != 0"		3117312	0		!=			
ANR	3117513	CallExpression	"ht -> lookup ( id , tmpNode )"		3117312	0					
ANR	3117514	Callee	ht -> lookup		3117312	0					
ANR	3117515	PtrMemberAccess	ht -> lookup		3117312	0					
ANR	3117516	Identifier	ht		3117312	0					
ANR	3117517	Identifier	lookup		3117312	1					
ANR	3117518	ArgumentList	id		3117312	1					
ANR	3117519	Argument	id		3117312	0					
ANR	3117520	Identifier	id		3117312	0					
ANR	3117521	Argument	tmpNode		3117312	1					
ANR	3117522	Identifier	tmpNode		3117312	0					
ANR	3117523	PrimaryExpression	0		3117312	1					
ANR	3117524	CompoundStatement		58:6:2012:2053	3117312	1					
ANR	3117525	IdentifierDeclStatement	"int insertResult = ht -> insert ( id , node ) ;"	3267:6:98556:98597	3117312	0	True				
ANR	3117526	IdentifierDecl	"insertResult = ht -> insert ( id , node )"		3117312	0					
ANR	3117527	IdentifierDeclType	int		3117312	0					
ANR	3117528	Identifier	insertResult		3117312	1					
ANR	3117529	AssignmentExpression	"insertResult = ht -> insert ( id , node )"		3117312	2		=			
ANR	3117530	Identifier	insertResult		3117312	0					
ANR	3117531	CallExpression	"ht -> insert ( id , node )"		3117312	1					
ANR	3117532	Callee	ht -> insert		3117312	0					
ANR	3117533	PtrMemberAccess	ht -> insert		3117312	0					
ANR	3117534	Identifier	ht		3117312	0					
ANR	3117535	Identifier	insert		3117312	1					
ANR	3117536	ArgumentList	id		3117312	1					
ANR	3117537	Argument	id		3117312	0					
ANR	3117538	Identifier	id		3117312	0					
ANR	3117539	Argument	node		3117312	1					
ANR	3117540	Identifier	node		3117312	0					
ANR	3117541	ExpressionStatement	ASSERT ( insertResult == 0 )	3268:6:98605:98632	3117312	1	True				
ANR	3117542	CallExpression	ASSERT ( insertResult == 0 )		3117312	0					
ANR	3117543	Callee	ASSERT		3117312	0					
ANR	3117544	Identifier	ASSERT		3117312	0					
ANR	3117545	ArgumentList	insertResult == 0		3117312	1					
ANR	3117546	Argument	insertResult == 0		3117312	0					
ANR	3117547	EqualityExpression	insertResult == 0		3117312	0		==			
ANR	3117548	Identifier	insertResult		3117312	0					
ANR	3117549	PrimaryExpression	0		3117312	1					
ANR	3117550	ElseStatement	else		3117312	0					
ANR	3117551	CompoundStatement		60:12:2102:2102	3117312	0					
ANR	3117552	ExpressionStatement	ASSERT ( tmpNode == node )	3271:6:98680:98705	3117312	0	True				
ANR	3117553	CallExpression	ASSERT ( tmpNode == node )		3117312	0					
ANR	3117554	Callee	ASSERT		3117312	0					
ANR	3117555	Identifier	ASSERT		3117312	0					
ANR	3117556	ArgumentList	tmpNode == node		3117312	1					
ANR	3117557	Argument	tmpNode == node		3117312	0					
ANR	3117558	EqualityExpression	tmpNode == node		3117312	0		==			
ANR	3117559	Identifier	tmpNode		3117312	0					
ANR	3117560	Identifier	node		3117312	1					
ANR	3117561	ElseStatement	else		3117312	0					
ANR	3117562	CompoundStatement		65:10:2186:2186	3117312	0					
ANR	3117563	Statement	debug_printf	3275:4:98736:98747	3117312	0	True				
ANR	3117564	Statement	(	3275:16:98748:98748	3117312	1	True				
ANR	3117565	Statement	DEBUG_QUIET	3275:18:98750:98760	3117312	2	True				
ANR	3117566	Statement	","	3275:29:98761:98761	3117312	3	True				
ANR	3117567	Statement	"""ERROR: 'DAG Node:' not found """	3275:31:98763:98793	3117312	4	True				
ANR	3117568	Statement	"""in submit event notes: <%s>\\n"""	3276:7:98802:98832	3117312	5	True				
ANR	3117569	Statement	","	3276:38:98833:98833	3117312	6	True				
ANR	3117570	Statement	submit_event	3277:7:98842:98853	3117312	7	True				
ANR	3117571	Statement	->	3277:19:98854:98855	3117312	8	True				
ANR	3117572	Statement	submitEventLogNotes	3277:21:98856:98874	3117312	9	True				
ANR	3117573	Statement	)	3277:41:98876:98876	3117312	10	True				
ANR	3117574	ExpressionStatement		3277:42:98877:98877	3117312	11	True				
ANR	3117575	ReturnStatement	return node ;	3280:2:98890:98901	3117312	2	True				
ANR	3117576	Identifier	node		3117312	0					
ANR	3117577	IfStatement	if ( event -> eventNumber == ULOG_POST_SCRIPT_TERMINATED && event -> cluster == - 1 )		3117312	6					
ANR	3117578	Condition	event -> eventNumber == ULOG_POST_SCRIPT_TERMINATED && event -> cluster == - 1	3283:5:98912:98986	3117312	0	True				
ANR	3117579	AndExpression	event -> eventNumber == ULOG_POST_SCRIPT_TERMINATED && event -> cluster == - 1		3117312	0		&&			
ANR	3117580	EqualityExpression	event -> eventNumber == ULOG_POST_SCRIPT_TERMINATED		3117312	0		==			
ANR	3117581	PtrMemberAccess	event -> eventNumber		3117312	0					
ANR	3117582	Identifier	event		3117312	0					
ANR	3117583	Identifier	eventNumber		3117312	1					
ANR	3117584	Identifier	ULOG_POST_SCRIPT_TERMINATED		3117312	1					
ANR	3117585	EqualityExpression	event -> cluster == - 1		3117312	1		==			
ANR	3117586	PtrMemberAccess	event -> cluster		3117312	0					
ANR	3117587	Identifier	event		3117312	0					
ANR	3117588	Identifier	cluster		3117312	1					
ANR	3117589	UnaryOperationExpression	- 1		3117312	1					
ANR	3117590	UnaryOperator	-		3117312	0					
ANR	3117591	PrimaryExpression	1		3117312	1					
ANR	3117592	CompoundStatement		76:2:2450:2537	3117312	1					
ANR	3117593	IdentifierDeclStatement	const PostScriptTerminatedEvent * pst_event = ( const PostScriptTerminatedEvent * ) event ;	3285:2:98994:99081	3117312	0	True				
ANR	3117594	IdentifierDecl	* pst_event = ( const PostScriptTerminatedEvent * ) event		3117312	0					
ANR	3117595	IdentifierDeclType	const PostScriptTerminatedEvent *		3117312	0					
ANR	3117596	Identifier	pst_event		3117312	1					
ANR	3117597	AssignmentExpression	* pst_event = ( const PostScriptTerminatedEvent * ) event		3117312	2		=			
ANR	3117598	Identifier	pst_event		3117312	0					
ANR	3117599	CastExpression	( const PostScriptTerminatedEvent * ) event		3117312	1					
ANR	3117600	CastTarget	const PostScriptTerminatedEvent *		3117312	0					
ANR	3117601	Identifier	event		3117312	1					
ANR	3117602	ExpressionStatement	node = FindNodeByName ( pst_event -> dagNodeName )	3287:2:99085:99132	3117312	1	True				
ANR	3117603	AssignmentExpression	node = FindNodeByName ( pst_event -> dagNodeName )		3117312	0		=			
ANR	3117604	Identifier	node		3117312	0					
ANR	3117605	CallExpression	FindNodeByName ( pst_event -> dagNodeName )		3117312	1					
ANR	3117606	Callee	FindNodeByName		3117312	0					
ANR	3117607	Identifier	FindNodeByName		3117312	0					
ANR	3117608	ArgumentList	pst_event -> dagNodeName		3117312	1					
ANR	3117609	Argument	pst_event -> dagNodeName		3117312	0					
ANR	3117610	PtrMemberAccess	pst_event -> dagNodeName		3117312	0					
ANR	3117611	Identifier	pst_event		3117312	0					
ANR	3117612	Identifier	dagNodeName		3117312	1					
ANR	3117613	ReturnStatement	return node ;	3288:2:99136:99147	3117312	2	True				
ANR	3117614	Identifier	node		3117312	0					
ANR	3117615	ReturnStatement	return node ;	3291:1:99154:99165	3117312	7	True				
ANR	3117616	Identifier	node		3117312	0					
ANR	3117617	ReturnType	Job *		3117312	1					
ANR	3117618	Identifier	Dag :: LogEventNodeLookup		3117312	2					
ANR	3117619	ParameterList	"int logsource , const ULogEvent * event , bool & submitEventIsSane"		3117312	3					
ANR	3117620	Parameter	int logsource	3208:25:96475:96487	3117312	0	True				
ANR	3117621	ParameterType	int		3117312	0					
ANR	3117622	Identifier	logsource		3117312	1					
ANR	3117623	Parameter	const ULogEvent * event	3208:40:96490:96511	3117312	1	True				
ANR	3117624	ParameterType	const ULogEvent *		3117312	0					
ANR	3117625	Identifier	event		3117312	1					
ANR	3117626	Parameter	bool & submitEventIsSane	3209:3:96517:96539	3117312	2	True				
ANR	3117627	ParameterType	bool &		3117312	0					
ANR	3117628	Identifier	submitEventIsSane		3117312	1					
ANR	3117629	CFGEntryNode	ENTRY		3117312		True				
ANR	3117630	CFGExitNode	EXIT		3117312		True				
ANR	3117631	Symbol	nodeName		3117312						
ANR	3117632	Symbol	* submit_event		3117312						
ANR	3117633	Symbol	SanityCheckSubmitEvent		3117312						
ANR	3117634	Symbol	* event		3117312						
ANR	3117635	Symbol	ULOG_SUBMIT		3117312						
ANR	3117636	Symbol	isNoop		3117312						
ANR	3117637	Symbol	ht		3117312						
ANR	3117638	Symbol	node -> GetNoop		3117312						
ANR	3117639	Symbol	FindNodeByName		3117312						
ANR	3117640	Symbol	FindNodeByEventID		3117312						
ANR	3117641	Symbol	* ht		3117312						
ANR	3117642	Symbol	submitEventIsSane		3117312						
ANR	3117643	Symbol	submit_event		3117312						
ANR	3117644	Symbol	submit_event -> submitEventLogNotes		3117312						
ANR	3117645	Symbol	ht -> lookup		3117312						
ANR	3117646	Symbol	* node		3117312						
ANR	3117647	Symbol	tmpNode		3117312						
ANR	3117648	Symbol	id		3117312						
ANR	3117649	Symbol	event		3117312						
ANR	3117650	Symbol	insertResult		3117312						
ANR	3117651	Symbol	event -> eventNumber		3117312						
ANR	3117652	Symbol	pst_event		3117312						
ANR	3117653	Symbol	NULL		3117312						
ANR	3117654	Symbol	GetIndexID		3117312						
ANR	3117655	Symbol	false		3117312						
ANR	3117656	Symbol	logsource		3117312						
ANR	3117657	Symbol	node		3117312						
ANR	3117658	Symbol	JobIsNoop		3117312						
ANR	3117659	Symbol	pst_event -> dagNodeName		3117312						
ANR	3117660	Symbol	condorID		3117312						
ANR	3117661	Symbol	sscanf		3117312						
ANR	3117662	Symbol	ht -> insert		3117312						
ANR	3117663	Symbol	* pst_event		3117312						
ANR	3117664	Symbol	GetEventIDHash		3117312						
ANR	3117665	Symbol	node -> _CondorID		3117312						
ANR	3117666	Symbol	event -> cluster		3117312						
ANR	3117667	Symbol	ULOG_POST_SCRIPT_TERMINATED		3117312						
ANR	3117668	Function	Dag :: EventSanityCheck	3315:0:100143:101781							
ANR	3117669	FunctionDef	"Dag :: EventSanityCheck (int logsource , const ULogEvent * event , const Job * node , bool * result)"		3117668	0					
ANR	3117670	CompoundStatement		3318:0:100245:101781	3117668	0					
ANR	3117671	ExpressionStatement	ASSERT ( event )	3319:1:100248:100263	3117668	0	True				
ANR	3117672	CallExpression	ASSERT ( event )		3117668	0					
ANR	3117673	Callee	ASSERT		3117668	0					
ANR	3117674	Identifier	ASSERT		3117668	0					
ANR	3117675	ArgumentList	event		3117668	1					
ANR	3117676	Argument	event		3117668	0					
ANR	3117677	Identifier	event		3117668	0					
ANR	3117678	ExpressionStatement	ASSERT ( node )	3320:1:100266:100280	3117668	1	True				
ANR	3117679	CallExpression	ASSERT ( node )		3117668	0					
ANR	3117680	Callee	ASSERT		3117668	0					
ANR	3117681	Identifier	ASSERT		3117668	0					
ANR	3117682	ArgumentList	node		3117668	1					
ANR	3117683	Argument	node		3117668	0					
ANR	3117684	Identifier	node		3117668	0					
ANR	3117685	IdentifierDeclStatement	MyString eventError ;	3322:1:100284:100303	3117668	2	True				
ANR	3117686	IdentifierDecl	eventError		3117668	0					
ANR	3117687	IdentifierDeclType	MyString		3117668	0					
ANR	3117688	Identifier	eventError		3117668	1					
ANR	3117689	IdentifierDeclStatement	CheckEvents :: check_event_result_t checkResult = CheckEvents :: EVENT_OKAY ;	3323:1:100306:100377	3117668	3	True				
ANR	3117690	IdentifierDecl	checkResult = CheckEvents :: EVENT_OKAY		3117668	0					
ANR	3117691	IdentifierDeclType	CheckEvents :: check_event_result_t		3117668	0					
ANR	3117692	Identifier	checkResult		3117668	1					
ANR	3117693	AssignmentExpression	checkResult = CheckEvents :: EVENT_OKAY		3117668	2		=			
ANR	3117694	Identifier	CheckEvents :: EVENT_OKAY		3117668	0					
ANR	3117695	Identifier	CheckEvents :: EVENT_OKAY		3117668	1					
ANR	3117696	IfStatement	if ( logsource == CONDORLOG )		3117668	4					
ANR	3117697	Condition	logsource == CONDORLOG	3325:6:100386:100407	3117668	0	True				
ANR	3117698	EqualityExpression	logsource == CONDORLOG		3117668	0		==			
ANR	3117699	Identifier	logsource		3117668	0					
ANR	3117700	Identifier	CONDORLOG		3117668	1					
ANR	3117701	CompoundStatement		8:31:165:165	3117668	1					
ANR	3117702	ExpressionStatement	"checkResult = _checkCondorEvents . CheckAnEvent ( event , eventError )"	3326:2:100415:100481	3117668	0	True				
ANR	3117703	AssignmentExpression	"checkResult = _checkCondorEvents . CheckAnEvent ( event , eventError )"		3117668	0		=			
ANR	3117704	Identifier	checkResult		3117668	0					
ANR	3117705	CallExpression	"_checkCondorEvents . CheckAnEvent ( event , eventError )"		3117668	1					
ANR	3117706	Callee	_checkCondorEvents . CheckAnEvent		3117668	0					
ANR	3117707	MemberAccess	_checkCondorEvents . CheckAnEvent		3117668	0					
ANR	3117708	Identifier	_checkCondorEvents		3117668	0					
ANR	3117709	Identifier	CheckAnEvent		3117668	1					
ANR	3117710	ArgumentList	event		3117668	1					
ANR	3117711	Argument	event		3117668	0					
ANR	3117712	Identifier	event		3117668	0					
ANR	3117713	Argument	eventError		3117668	1					
ANR	3117714	Identifier	eventError		3117668	0					
ANR	3117715	ElseStatement	else		3117668	0					
ANR	3117716	IfStatement	if ( logsource == DAPLOG )		3117668	0					
ANR	3117717	Condition	logsource == DAPLOG	3327:13:100496:100514	3117668	0	True				
ANR	3117718	EqualityExpression	logsource == DAPLOG		3117668	0		==			
ANR	3117719	Identifier	logsource		3117668	0					
ANR	3117720	Identifier	DAPLOG		3117668	1					
ANR	3117721	CompoundStatement		10:35:272:272	3117668	1					
ANR	3117722	ExpressionStatement	"checkResult = _checkStorkEvents . CheckAnEvent ( event , eventError )"	3328:2:100522:100587	3117668	0	True				
ANR	3117723	AssignmentExpression	"checkResult = _checkStorkEvents . CheckAnEvent ( event , eventError )"		3117668	0		=			
ANR	3117724	Identifier	checkResult		3117668	0					
ANR	3117725	CallExpression	"_checkStorkEvents . CheckAnEvent ( event , eventError )"		3117668	1					
ANR	3117726	Callee	_checkStorkEvents . CheckAnEvent		3117668	0					
ANR	3117727	MemberAccess	_checkStorkEvents . CheckAnEvent		3117668	0					
ANR	3117728	Identifier	_checkStorkEvents		3117668	0					
ANR	3117729	Identifier	CheckAnEvent		3117668	1					
ANR	3117730	ArgumentList	event		3117668	1					
ANR	3117731	Argument	event		3117668	0					
ANR	3117732	Identifier	event		3117668	0					
ANR	3117733	Argument	eventError		3117668	1					
ANR	3117734	Identifier	eventError		3117668	0					
ANR	3117735	IfStatement	if ( checkResult == CheckEvents :: EVENT_OKAY )		3117668	5					
ANR	3117736	Condition	checkResult == CheckEvents :: EVENT_OKAY	3331:5:100598:100635	3117668	0	True				
ANR	3117737	EqualityExpression	checkResult == CheckEvents :: EVENT_OKAY		3117668	0		==			
ANR	3117738	Identifier	checkResult		3117668	0					
ANR	3117739	Identifier	CheckEvents :: EVENT_OKAY		3117668	1					
ANR	3117740	CompoundStatement		14:46:393:393	3117668	1					
ANR	3117741	ExpressionStatement	"debug_printf ( DEBUG_DEBUG_1 , ""Event is okay\\n"" )"	3332:2:100643:100691	3117668	0	True				
ANR	3117742	CallExpression	"debug_printf ( DEBUG_DEBUG_1 , ""Event is okay\\n"" )"		3117668	0					
ANR	3117743	Callee	debug_printf		3117668	0					
ANR	3117744	Identifier	debug_printf		3117668	0					
ANR	3117745	ArgumentList	DEBUG_DEBUG_1		3117668	1					
ANR	3117746	Argument	DEBUG_DEBUG_1		3117668	0					
ANR	3117747	Identifier	DEBUG_DEBUG_1		3117668	0					
ANR	3117748	Argument	"""Event is okay\\n"""		3117668	1					
ANR	3117749	PrimaryExpression	"""Event is okay\\n"""		3117668	0					
ANR	3117750	ReturnStatement	return true ;	3333:2:100695:100706	3117668	1	True				
ANR	3117751	Identifier	true		3117668	0					
ANR	3117752	ExpressionStatement	"debug_printf ( DEBUG_NORMAL , ""%s\\n"" , eventError . Value ( ) )"	3336:1:100713:100769	3117668	6	True				
ANR	3117753	CallExpression	"debug_printf ( DEBUG_NORMAL , ""%s\\n"" , eventError . Value ( ) )"		3117668	0					
ANR	3117754	Callee	debug_printf		3117668	0					
ANR	3117755	Identifier	debug_printf		3117668	0					
ANR	3117756	ArgumentList	DEBUG_NORMAL		3117668	1					
ANR	3117757	Argument	DEBUG_NORMAL		3117668	0					
ANR	3117758	Identifier	DEBUG_NORMAL		3117668	0					
ANR	3117759	Argument	"""%s\\n"""		3117668	1					
ANR	3117760	PrimaryExpression	"""%s\\n"""		3117668	0					
ANR	3117761	Argument	eventError . Value ( )		3117668	2					
ANR	3117762	CallExpression	eventError . Value ( )		3117668	0					
ANR	3117763	Callee	eventError . Value		3117668	0					
ANR	3117764	MemberAccess	eventError . Value		3117668	0					
ANR	3117765	Identifier	eventError		3117668	0					
ANR	3117766	Identifier	Value		3117668	1					
ANR	3117767	ArgumentList			3117668	1					
ANR	3117768	IfStatement	if ( checkResult == CheckEvents :: EVENT_WARNING )		3117668	7					
ANR	3117769	Condition	checkResult == CheckEvents :: EVENT_WARNING	3340:5:100898:100938	3117668	0	True				
ANR	3117770	EqualityExpression	checkResult == CheckEvents :: EVENT_WARNING		3117668	0		==			
ANR	3117771	Identifier	checkResult		3117668	0					
ANR	3117772	Identifier	CheckEvents :: EVENT_WARNING		3117668	1					
ANR	3117773	CompoundStatement		23:49:696:696	3117668	1					
ANR	3117774	ExpressionStatement	"debug_printf ( DEBUG_NORMAL , ""BAD EVENT is warning only\\n"" )"	3341:2:100946:101004	3117668	0	True				
ANR	3117775	CallExpression	"debug_printf ( DEBUG_NORMAL , ""BAD EVENT is warning only\\n"" )"		3117668	0					
ANR	3117776	Callee	debug_printf		3117668	0					
ANR	3117777	Identifier	debug_printf		3117668	0					
ANR	3117778	ArgumentList	DEBUG_NORMAL		3117668	1					
ANR	3117779	Argument	DEBUG_NORMAL		3117668	0					
ANR	3117780	Identifier	DEBUG_NORMAL		3117668	0					
ANR	3117781	Argument	"""BAD EVENT is warning only\\n"""		3117668	1					
ANR	3117782	PrimaryExpression	"""BAD EVENT is warning only\\n"""		3117668	0					
ANR	3117783	ReturnStatement	return true ;	3342:2:101008:101019	3117668	1	True				
ANR	3117784	Identifier	true		3117668	0					
ANR	3117785	IfStatement	if ( checkResult == CheckEvents :: EVENT_BAD_EVENT )		3117668	8					
ANR	3117786	Condition	checkResult == CheckEvents :: EVENT_BAD_EVENT	3345:5:101030:101072	3117668	0	True				
ANR	3117787	EqualityExpression	checkResult == CheckEvents :: EVENT_BAD_EVENT		3117668	0		==			
ANR	3117788	Identifier	checkResult		3117668	0					
ANR	3117789	Identifier	CheckEvents :: EVENT_BAD_EVENT		3117668	1					
ANR	3117790	CompoundStatement		28:51:830:830	3117668	1					
ANR	3117791	Statement	debug_printf	3346:2:101080:101091	3117668	0	True				
ANR	3117792	Statement	(	3346:14:101092:101092	3117668	1	True				
ANR	3117793	Statement	DEBUG_NORMAL	3346:16:101094:101105	3117668	2	True				
ANR	3117794	Statement	","	3346:28:101106:101106	3117668	3	True				
ANR	3117795	Statement	"""Continuing with DAG in spite of bad """	3346:30:101108:101145	3117668	4	True				
ANR	3117796	Statement	"""event (%s) because of allow_events setting\\n"""	3347:7:101154:101199	3117668	5	True				
ANR	3117797	Statement	","	3347:53:101200:101200	3117668	6	True				
ANR	3117798	Statement	eventError	3348:7:101209:101218	3117668	7	True				
ANR	3117799	Statement	.	3348:17:101219:101219	3117668	8	True				
ANR	3117800	Statement	Value	3348:18:101220:101224	3117668	9	True				
ANR	3117801	Statement	(	3348:23:101225:101225	3117668	10	True				
ANR	3117802	Statement	)	3348:24:101226:101226	3117668	11	True				
ANR	3117803	Statement	)	3348:26:101228:101228	3117668	12	True				
ANR	3117804	ExpressionStatement		3348:27:101229:101229	3117668	13	True				
ANR	3117805	ReturnStatement	return false ;	3354:2:101386:101398	3117668	14	True				
ANR	3117806	Identifier	false		3117668	0					
ANR	3117807	IfStatement	if ( checkResult == CheckEvents :: EVENT_ERROR )		3117668	9					
ANR	3117808	Condition	checkResult == CheckEvents :: EVENT_ERROR	3357:5:101409:101447	3117668	0	True				
ANR	3117809	EqualityExpression	checkResult == CheckEvents :: EVENT_ERROR		3117668	0		==			
ANR	3117810	Identifier	checkResult		3117668	0					
ANR	3117811	Identifier	CheckEvents :: EVENT_ERROR		3117668	1					
ANR	3117812	CompoundStatement		40:47:1205:1205	3117668	1					
ANR	3117813	Statement	debug_printf	3358:2:101455:101466	3117668	0	True				
ANR	3117814	Statement	(	3358:14:101467:101467	3117668	1	True				
ANR	3117815	Statement	DEBUG_QUIET	3358:16:101469:101479	3117668	2	True				
ANR	3117816	Statement	","	3358:27:101480:101480	3117668	3	True				
ANR	3117817	Statement	"""ERROR: aborting DAG because of bad event """	3358:29:101482:101524	3117668	4	True				
ANR	3117818	Statement	"""(%s)\\n"""	3359:7:101533:101540	3117668	5	True				
ANR	3117819	Statement	","	3359:15:101541:101541	3117668	6	True				
ANR	3117820	Statement	eventError	3359:17:101543:101552	3117668	7	True				
ANR	3117821	Statement	.	3359:27:101553:101553	3117668	8	True				
ANR	3117822	Statement	Value	3359:28:101554:101558	3117668	9	True				
ANR	3117823	Statement	(	3359:33:101559:101559	3117668	10	True				
ANR	3117824	Statement	)	3359:34:101560:101560	3117668	11	True				
ANR	3117825	Statement	)	3359:36:101562:101562	3117668	12	True				
ANR	3117826	ExpressionStatement		3359:37:101563:101563	3117668	13	True				
ANR	3117827	ExpressionStatement	* result = false	3361:2:101621:101636	3117668	14	True				
ANR	3117828	AssignmentExpression	* result = false		3117668	0		=			
ANR	3117829	UnaryOperationExpression	* result		3117668	0					
ANR	3117830	UnaryOperator	*		3117668	0					
ANR	3117831	Identifier	result		3117668	1					
ANR	3117832	Identifier	false		3117668	1					
ANR	3117833	ReturnStatement	return false ;	3362:2:101640:101652	3117668	15	True				
ANR	3117834	Identifier	false		3117668	0					
ANR	3117835	Statement	debug_printf	3365:1:101659:101670	3117668	10	True				
ANR	3117836	Statement	(	3365:13:101671:101671	3117668	11	True				
ANR	3117837	Statement	DEBUG_QUIET	3365:15:101673:101683	3117668	12	True				
ANR	3117838	Statement	","	3365:26:101684:101684	3117668	13	True				
ANR	3117839	Statement	"""Illegal CheckEvents::check_event_allow_t """	3365:28:101686:101728	3117668	14	True				
ANR	3117840	Statement	"""value: %d\\n"""	3366:6:101736:101748	3117668	15	True				
ANR	3117841	Statement	","	3366:19:101749:101749	3117668	16	True				
ANR	3117842	Statement	checkResult	3366:21:101751:101761	3117668	17	True				
ANR	3117843	Statement	)	3366:33:101763:101763	3117668	18	True				
ANR	3117844	ExpressionStatement		3366:34:101764:101764	3117668	19	True				
ANR	3117845	ReturnStatement	return false ;	3367:1:101767:101779	3117668	20	True				
ANR	3117846	Identifier	false		3117668	0					
ANR	3117847	ReturnType	bool		3117668	1					
ANR	3117848	Identifier	Dag :: EventSanityCheck		3117668	2					
ANR	3117849	ParameterList	"int logsource , const ULogEvent * event , const Job * node , bool * result"		3117668	3					
ANR	3117850	Parameter	int logsource	3316:23:100171:100183	3117668	0	True				
ANR	3117851	ParameterType	int		3117668	0					
ANR	3117852	Identifier	logsource		3117668	1					
ANR	3117853	Parameter	const ULogEvent * event	3316:38:100186:100207	3117668	1	True				
ANR	3117854	ParameterType	const ULogEvent *		3117668	0					
ANR	3117855	Identifier	event		3117668	1					
ANR	3117856	Parameter	const Job * node	3317:3:100213:100227	3117668	2	True				
ANR	3117857	ParameterType	const Job *		3117668	0					
ANR	3117858	Identifier	node		3117668	1					
ANR	3117859	Parameter	bool * result	3317:20:100230:100241	3117668	3	True				
ANR	3117860	ParameterType	bool *		3117668	0					
ANR	3117861	Identifier	result		3117668	1					
ANR	3117862	CFGEntryNode	ENTRY		3117668		True				
ANR	3117863	CFGExitNode	EXIT		3117668		True				
ANR	3117864	Symbol	eventError . Value		3117668						
ANR	3117865	Symbol	false		3117668						
ANR	3117866	Symbol	CONDORLOG		3117668						
ANR	3117867	Symbol	DEBUG_NORMAL		3117668						
ANR	3117868	Symbol	CheckEvents :: EVENT_BAD_EVENT		3117668						
ANR	3117869	Symbol	logsource		3117668						
ANR	3117870	Symbol	checkResult		3117668						
ANR	3117871	Symbol	result		3117668						
ANR	3117872	Symbol	node		3117668						
ANR	3117873	Symbol	_checkCondorEvents		3117668						
ANR	3117874	Symbol	CheckEvents :: EVENT_WARNING		3117668						
ANR	3117875	Symbol	eventError		3117668						
ANR	3117876	Symbol	DAPLOG		3117668						
ANR	3117877	Symbol	CheckEvents :: EVENT_OKAY		3117668						
ANR	3117878	Symbol	* result		3117668						
ANR	3117879	Symbol	_checkStorkEvents . CheckAnEvent		3117668						
ANR	3117880	Symbol	CheckEvents :: EVENT_ERROR		3117668						
ANR	3117881	Symbol	true		3117668						
ANR	3117882	Symbol	DEBUG_DEBUG_1		3117668						
ANR	3117883	Symbol	event		3117668						
ANR	3117884	Symbol	_checkCondorEvents . CheckAnEvent		3117668						
ANR	3117885	Symbol	_checkStorkEvents		3117668						
ANR	3117886	Function	Dag :: SanityCheckSubmitEvent	3375:0:102006:103323							
ANR	3117887	FunctionDef	"Dag :: SanityCheckSubmitEvent (const CondorID condorID , const Job * node)"		3117886	0					
ANR	3117888	CompoundStatement		3377:0:102083:103323	3117886	0					
ANR	3117889	IfStatement	if ( node -> _CondorID == _defaultCondorId )		3117886	0					
ANR	3117890	Condition	node -> _CondorID == _defaultCondorId	3382:5:102307:102341	3117886	0	True				
ANR	3117891	EqualityExpression	node -> _CondorID == _defaultCondorId		3117886	0		==			
ANR	3117892	PtrMemberAccess	node -> _CondorID		3117886	0					
ANR	3117893	Identifier	node		3117886	0					
ANR	3117894	Identifier	_CondorID		3117886	1					
ANR	3117895	Identifier	_defaultCondorId		3117886	1					
ANR	3117896	CompoundStatement		6:43:261:261	3117886	1					
ANR	3117897	ReturnStatement	return true ;	3384:2:102416:102427	3117886	0	True				
ANR	3117898	Identifier	true		3117886	0					
ANR	3117899	IfStatement	if ( condorID . _cluster == node -> _CondorID . _cluster )		3117886	1					
ANR	3117900	Condition	condorID . _cluster == node -> _CondorID . _cluster	3387:5:102438:102482	3117886	0	True				
ANR	3117901	EqualityExpression	condorID . _cluster == node -> _CondorID . _cluster		3117886	0		==			
ANR	3117902	MemberAccess	condorID . _cluster		3117886	0					
ANR	3117903	Identifier	condorID		3117886	0					
ANR	3117904	Identifier	_cluster		3117886	1					
ANR	3117905	MemberAccess	node -> _CondorID . _cluster		3117886	1					
ANR	3117906	PtrMemberAccess	node -> _CondorID		3117886	0					
ANR	3117907	Identifier	node		3117886	0					
ANR	3117908	Identifier	_CondorID		3117886	1					
ANR	3117909	Identifier	_cluster		3117886	1					
ANR	3117910	CompoundStatement		11:53:402:402	3117886	1					
ANR	3117911	ReturnStatement	return true ;	3388:2:102490:102501	3117886	0	True				
ANR	3117912	Identifier	true		3117886	0					
ANR	3117913	IdentifierDeclStatement	MyString message ;	3391:1:102508:102524	3117886	2	True				
ANR	3117914	IdentifierDecl	message		3117886	0					
ANR	3117915	IdentifierDeclType	MyString		3117886	0					
ANR	3117916	Identifier	message		3117886	1					
ANR	3117917	Statement	message	3392:1:102527:102533	3117886	3	True				
ANR	3117918	Statement	.	3392:8:102534:102534	3117886	4	True				
ANR	3117919	Statement	sprintf	3392:9:102535:102541	3117886	5	True				
ANR	3117920	Statement	(	3392:16:102542:102542	3117886	6	True				
ANR	3117921	Statement	"""ERROR: node %s: job ID in userlog submit event (%d.%d.%d) """	3392:18:102544:102603	3117886	7	True				
ANR	3117922	Statement	"""doesn't match ID reported earlier by submit command """	3393:4:102609:102662	3117886	8	True				
ANR	3117923	Statement	"""(%d.%d.%d)!"""	3394:4:102668:102680	3117886	9	True				
ANR	3117924	Statement	","	3394:17:102681:102681	3117886	10	True				
ANR	3117925	Statement	node	3395:4:102688:102691	3117886	11	True				
ANR	3117926	Statement	->	3395:8:102692:102693	3117886	12	True				
ANR	3117927	Statement	GetJobName	3395:10:102694:102703	3117886	13	True				
ANR	3117928	Statement	(	3395:20:102704:102704	3117886	14	True				
ANR	3117929	Statement	)	3395:21:102705:102705	3117886	15	True				
ANR	3117930	Statement	","	3395:22:102706:102706	3117886	16	True				
ANR	3117931	Statement	condorID	3395:24:102708:102715	3117886	17	True				
ANR	3117932	Statement	.	3395:32:102716:102716	3117886	18	True				
ANR	3117933	Statement	_cluster	3395:33:102717:102724	3117886	19	True				
ANR	3117934	Statement	","	3395:41:102725:102725	3117886	20	True				
ANR	3117935	Statement	condorID	3395:43:102727:102734	3117886	21	True				
ANR	3117936	Statement	.	3395:51:102735:102735	3117886	22	True				
ANR	3117937	Statement	_proc	3395:52:102736:102740	3117886	23	True				
ANR	3117938	Statement	","	3395:57:102741:102741	3117886	24	True				
ANR	3117939	Statement	condorID	3396:4:102747:102754	3117886	25	True				
ANR	3117940	Statement	.	3396:12:102755:102755	3117886	26	True				
ANR	3117941	Statement	_subproc	3396:13:102756:102763	3117886	27	True				
ANR	3117942	Statement	","	3396:21:102764:102764	3117886	28	True				
ANR	3117943	Statement	node	3397:4:102770:102773	3117886	29	True				
ANR	3117944	Statement	->	3397:8:102774:102775	3117886	30	True				
ANR	3117945	Statement	_CondorID	3397:10:102776:102784	3117886	31	True				
ANR	3117946	Statement	.	3397:19:102785:102785	3117886	32	True				
ANR	3117947	Statement	_cluster	3397:20:102786:102793	3117886	33	True				
ANR	3117948	Statement	","	3397:28:102794:102794	3117886	34	True				
ANR	3117949	Statement	node	3397:30:102796:102799	3117886	35	True				
ANR	3117950	Statement	->	3397:34:102800:102801	3117886	36	True				
ANR	3117951	Statement	_CondorID	3397:36:102802:102810	3117886	37	True				
ANR	3117952	Statement	.	3397:45:102811:102811	3117886	38	True				
ANR	3117953	Statement	_proc	3397:46:102812:102816	3117886	39	True				
ANR	3117954	Statement	","	3397:51:102817:102817	3117886	40	True				
ANR	3117955	Statement	node	3398:4:102823:102826	3117886	41	True				
ANR	3117956	Statement	->	3398:8:102827:102828	3117886	42	True				
ANR	3117957	Statement	_CondorID	3398:10:102829:102837	3117886	43	True				
ANR	3117958	Statement	.	3398:19:102838:102838	3117886	44	True				
ANR	3117959	Statement	_subproc	3398:20:102839:102846	3117886	45	True				
ANR	3117960	Statement	)	3398:29:102848:102848	3117886	46	True				
ANR	3117961	ExpressionStatement		3398:30:102849:102849	3117886	47	True				
ANR	3117962	IfStatement	if ( _abortOnScarySubmit )		3117886	48					
ANR	3117963	Condition	_abortOnScarySubmit	3400:6:102858:102876	3117886	0	True				
ANR	3117964	Identifier	_abortOnScarySubmit		3117886	0					
ANR	3117965	CompoundStatement		24:28:796:796	3117886	1					
ANR	3117966	Statement	debug_printf	3401:2:102884:102895	3117886	0	True				
ANR	3117967	Statement	(	3401:14:102896:102896	3117886	1	True				
ANR	3117968	Statement	DEBUG_QUIET	3401:16:102898:102908	3117886	2	True				
ANR	3117969	Statement	","	3401:27:102909:102909	3117886	3	True				
ANR	3117970	Statement	"""%s  Aborting DAG; set """	3401:29:102911:102934	3117886	4	True				
ANR	3117971	Statement	"""DAGMAN_ABORT_ON_SCARY_SUBMIT to false if you are """	3402:5:102941:102991	3117886	5	True				
ANR	3117972	Statement	"""*sure* this shouldn't cause an abort.\\n"""	3403:5:102998:103038	3117886	6	True				
ANR	3117973	Statement	","	3403:46:103039:103039	3117886	7	True				
ANR	3117974	Statement	message	3404:5:103046:103052	3117886	8	True				
ANR	3117975	Statement	.	3404:12:103053:103053	3117886	9	True				
ANR	3117976	Statement	Value	3404:13:103054:103058	3117886	10	True				
ANR	3117977	Statement	(	3404:18:103059:103059	3117886	11	True				
ANR	3117978	Statement	)	3404:19:103060:103060	3117886	12	True				
ANR	3117979	Statement	)	3404:21:103062:103062	3117886	13	True				
ANR	3117980	ExpressionStatement		3404:22:103063:103063	3117886	14	True				
ANR	3117981	ExpressionStatement	main_shutdown_rescue ( EXIT_ERROR )	3405:2:103067:103101	3117886	15	True				
ANR	3117982	CallExpression	main_shutdown_rescue ( EXIT_ERROR )		3117886	0					
ANR	3117983	Callee	main_shutdown_rescue		3117886	0					
ANR	3117984	Identifier	main_shutdown_rescue		3117886	0					
ANR	3117985	ArgumentList	EXIT_ERROR		3117886	1					
ANR	3117986	Argument	EXIT_ERROR		3117886	0					
ANR	3117987	Identifier	EXIT_ERROR		3117886	0					
ANR	3117988	ReturnStatement	return true ;	3406:2:103105:103116	3117886	16	True				
ANR	3117989	Identifier	true		3117886	0					
ANR	3117990	ElseStatement	else		3117886	0					
ANR	3117991	CompoundStatement		31:8:1042:1042	3117886	0					
ANR	3117992	Statement	debug_printf	3408:2:103130:103141	3117886	0	True				
ANR	3117993	Statement	(	3408:14:103142:103142	3117886	1	True				
ANR	3117994	Statement	DEBUG_QUIET	3408:16:103144:103154	3117886	2	True				
ANR	3117995	Statement	","	3408:27:103155:103155	3117886	3	True				
ANR	3117996	Statement	"""%s  Trusting the userlog for now (because of """	3409:5:103162:103208	3117886	4	True				
ANR	3117997	Statement	"""DAGMAN_ABORT_ON_SCARY_SUBMIT setting), but this is """	3410:5:103215:103267	3117886	5	True				
ANR	3117998	Statement	"""scary!\\n"""	3411:5:103274:103283	3117886	6	True				
ANR	3117999	Statement	","	3411:15:103284:103284	3117886	7	True				
ANR	3118000	Statement	message	3411:17:103286:103292	3117886	8	True				
ANR	3118001	Statement	.	3411:24:103293:103293	3117886	9	True				
ANR	3118002	Statement	Value	3411:25:103294:103298	3117886	10	True				
ANR	3118003	Statement	(	3411:30:103299:103299	3117886	11	True				
ANR	3118004	Statement	)	3411:31:103300:103300	3117886	12	True				
ANR	3118005	Statement	)	3411:33:103302:103302	3117886	13	True				
ANR	3118006	ExpressionStatement		3411:34:103303:103303	3117886	14	True				
ANR	3118007	ReturnStatement	return false ;	3413:1:103309:103321	3117886	49	True				
ANR	3118008	Identifier	false		3117886	0					
ANR	3118009	ReturnType	bool		3117886	1					
ANR	3118010	Identifier	Dag :: SanityCheckSubmitEvent		3117886	2					
ANR	3118011	ParameterList	"const CondorID condorID , const Job * node"		3117886	3					
ANR	3118012	Parameter	const CondorID condorID	3376:29:102040:102062	3117886	0	True				
ANR	3118013	ParameterType	const CondorID		3117886	0					
ANR	3118014	Identifier	condorID		3117886	1					
ANR	3118015	Parameter	const Job * node	3376:54:102065:102079	3117886	1	True				
ANR	3118016	ParameterType	const Job *		3117886	0					
ANR	3118017	Identifier	node		3117886	1					
ANR	3118018	CFGEntryNode	ENTRY		3117886		True				
ANR	3118019	CFGExitNode	EXIT		3117886		True				
ANR	3118020	Symbol	node		3117886						
ANR	3118021	Symbol	condorID		3117886						
ANR	3118022	Symbol	_abortOnScarySubmit		3117886						
ANR	3118023	Symbol	node -> _CondorID . _cluster		3117886						
ANR	3118024	Symbol	EXIT_ERROR		3117886						
ANR	3118025	Symbol	true		3117886						
ANR	3118026	Symbol	false		3117886						
ANR	3118027	Symbol	* node		3117886						
ANR	3118028	Symbol	condorID . _cluster		3117886						
ANR	3118029	Symbol	message		3117886						
ANR	3118030	Symbol	_defaultCondorId		3117886						
ANR	3118031	Symbol	node -> _CondorID		3117886						
ANR	3118032	Function	Dag :: GetEventIDHash	3417:0:103404:103741							
ANR	3118033	FunctionDef	"Dag :: GetEventIDHash (bool isNoop , int jobType)"		3118032	0					
ANR	3118034	CompoundStatement		3419:0:103474:103741	3118032	0					
ANR	3118035	IfStatement	if ( isNoop )		3118032	0					
ANR	3118036	Condition	isNoop	3420:6:103482:103487	3118032	0	True				
ANR	3118037	Identifier	isNoop		3118032	0					
ANR	3118038	CompoundStatement		2:15:16:16	3118032	1					
ANR	3118039	ReturnStatement	return & _noopIDHash ;	3421:2:103495:103514	3118032	0	True				
ANR	3118040	UnaryOperationExpression	& _noopIDHash		3118032	0					
ANR	3118041	UnaryOperator	&		3118032	0					
ANR	3118042	Identifier	_noopIDHash		3118032	1					
ANR	3118043	SwitchStatement	switch ( jobType )		3118032	1					
ANR	3118044	Condition	jobType	3424:9:103529:103535	3118032	0	True				
ANR	3118045	Identifier	jobType		3118032	0					
ANR	3118046	CompoundStatement		6:18:63:63	3118032	1					
ANR	3118047	Label	case Job :: TYPE_CONDOR :	3425:1:103541:103562	3118032	0	True				
ANR	3118048	Identifier	Job :: TYPE_CONDOR		3118032	0					
ANR	3118049	ReturnStatement	return & _condorIDHash ;	3426:2:103566:103587	3118032	1	True				
ANR	3118050	UnaryOperationExpression	& _condorIDHash		3118032	0					
ANR	3118051	UnaryOperator	&		3118032	0					
ANR	3118052	Identifier	_condorIDHash		3118032	1					
ANR	3118053	BreakStatement	break ;	3427:2:103591:103596	3118032	2	True				
ANR	3118054	Label	case Job :: TYPE_STORK :	3429:1:103600:103620	3118032	3	True				
ANR	3118055	Identifier	Job :: TYPE_STORK		3118032	0					
ANR	3118056	ReturnStatement	return & _storkIDHash ;	3430:2:103624:103644	3118032	4	True				
ANR	3118057	UnaryOperationExpression	& _storkIDHash		3118032	0					
ANR	3118058	UnaryOperator	&		3118032	0					
ANR	3118059	Identifier	_storkIDHash		3118032	1					
ANR	3118060	BreakStatement	break ;	3431:2:103648:103653	3118032	5	True				
ANR	3118061	Label	default :	3433:1:103657:103664	3118032	6	True				
ANR	3118062	Identifier	default		3118032	0					
ANR	3118063	ExpressionStatement	"EXCEPT ( ""Illegal job type (%d)\\n"" , jobType )"	3434:2:103668:103712	3118032	7	True				
ANR	3118064	CallExpression	"EXCEPT ( ""Illegal job type (%d)\\n"" , jobType )"		3118032	0					
ANR	3118065	Callee	EXCEPT		3118032	0					
ANR	3118066	Identifier	EXCEPT		3118032	0					
ANR	3118067	ArgumentList	"""Illegal job type (%d)\\n"""		3118032	1					
ANR	3118068	Argument	"""Illegal job type (%d)\\n"""		3118032	0					
ANR	3118069	PrimaryExpression	"""Illegal job type (%d)\\n"""		3118032	0					
ANR	3118070	Argument	jobType		3118032	1					
ANR	3118071	Identifier	jobType		3118032	0					
ANR	3118072	BreakStatement	break ;	3435:2:103716:103721	3118032	8	True				
ANR	3118073	ReturnStatement	return NULL ;	3438:1:103728:103739	3118032	2	True				
ANR	3118074	Identifier	NULL		3118032	0					
ANR	3118075	ReturnType	"HashTable < int , Job * > *"		3118032	1					
ANR	3118076	Identifier	Dag :: GetEventIDHash		3118032	2					
ANR	3118077	ParameterList	"bool isNoop , int jobType"		3118032	3					
ANR	3118078	Parameter	bool isNoop	3418:20:103448:103458	3118032	0	True				
ANR	3118079	ParameterType	bool		3118032	0					
ANR	3118080	Identifier	isNoop		3118032	1					
ANR	3118081	Parameter	int jobType	3418:33:103461:103471	3118032	1	True				
ANR	3118082	ParameterType	int		3118032	0					
ANR	3118083	Identifier	jobType		3118032	1					
ANR	3118084	CFGEntryNode	ENTRY		3118032		True				
ANR	3118085	CFGExitNode	EXIT		3118032		True				
ANR	3118086	Symbol	& _storkIDHash		3118032						
ANR	3118087	Symbol	NULL		3118032						
ANR	3118088	Symbol	& _condorIDHash		3118032						
ANR	3118089	Symbol	isNoop		3118032						
ANR	3118090	Symbol	jobType		3118032						
ANR	3118091	Symbol	& _noopIDHash		3118032						
ANR	3118092	Function	Dag :: GetEventIDHash	3442:0:103822:104171							
ANR	3118093	FunctionDef	"Dag :: GetEventIDHash (bool isNoop , int jobType)"		3118092	0					
ANR	3118094	CompoundStatement		3444:0:103904:104171	3118092	0					
ANR	3118095	IfStatement	if ( isNoop )		3118092	0					
ANR	3118096	Condition	isNoop	3445:6:103912:103917	3118092	0	True				
ANR	3118097	Identifier	isNoop		3118092	0					
ANR	3118098	CompoundStatement		2:15:16:16	3118092	1					
ANR	3118099	ReturnStatement	return & _noopIDHash ;	3446:2:103925:103944	3118092	0	True				
ANR	3118100	UnaryOperationExpression	& _noopIDHash		3118092	0					
ANR	3118101	UnaryOperator	&		3118092	0					
ANR	3118102	Identifier	_noopIDHash		3118092	1					
ANR	3118103	SwitchStatement	switch ( jobType )		3118092	1					
ANR	3118104	Condition	jobType	3449:9:103959:103965	3118092	0	True				
ANR	3118105	Identifier	jobType		3118092	0					
ANR	3118106	CompoundStatement		6:18:63:63	3118092	1					
ANR	3118107	Label	case Job :: TYPE_CONDOR :	3450:1:103971:103992	3118092	0	True				
ANR	3118108	Identifier	Job :: TYPE_CONDOR		3118092	0					
ANR	3118109	ReturnStatement	return & _condorIDHash ;	3451:2:103996:104017	3118092	1	True				
ANR	3118110	UnaryOperationExpression	& _condorIDHash		3118092	0					
ANR	3118111	UnaryOperator	&		3118092	0					
ANR	3118112	Identifier	_condorIDHash		3118092	1					
ANR	3118113	BreakStatement	break ;	3452:2:104021:104026	3118092	2	True				
ANR	3118114	Label	case Job :: TYPE_STORK :	3454:1:104030:104050	3118092	3	True				
ANR	3118115	Identifier	Job :: TYPE_STORK		3118092	0					
ANR	3118116	ReturnStatement	return & _storkIDHash ;	3455:2:104054:104074	3118092	4	True				
ANR	3118117	UnaryOperationExpression	& _storkIDHash		3118092	0					
ANR	3118118	UnaryOperator	&		3118092	0					
ANR	3118119	Identifier	_storkIDHash		3118092	1					
ANR	3118120	BreakStatement	break ;	3456:2:104078:104083	3118092	5	True				
ANR	3118121	Label	default :	3458:1:104087:104094	3118092	6	True				
ANR	3118122	Identifier	default		3118092	0					
ANR	3118123	ExpressionStatement	"EXCEPT ( ""Illegal job type (%d)\\n"" , jobType )"	3459:2:104098:104142	3118092	7	True				
ANR	3118124	CallExpression	"EXCEPT ( ""Illegal job type (%d)\\n"" , jobType )"		3118092	0					
ANR	3118125	Callee	EXCEPT		3118092	0					
ANR	3118126	Identifier	EXCEPT		3118092	0					
ANR	3118127	ArgumentList	"""Illegal job type (%d)\\n"""		3118092	1					
ANR	3118128	Argument	"""Illegal job type (%d)\\n"""		3118092	0					
ANR	3118129	PrimaryExpression	"""Illegal job type (%d)\\n"""		3118092	0					
ANR	3118130	Argument	jobType		3118092	1					
ANR	3118131	Identifier	jobType		3118092	0					
ANR	3118132	BreakStatement	break ;	3460:2:104146:104151	3118092	8	True				
ANR	3118133	ReturnStatement	return NULL ;	3463:1:104158:104169	3118092	2	True				
ANR	3118134	Identifier	NULL		3118092	0					
ANR	3118135	ReturnType	"const HashTable < int , Job * > *"		3118092	1					
ANR	3118136	Identifier	Dag :: GetEventIDHash		3118092	2					
ANR	3118137	ParameterList	"bool isNoop , int jobType"		3118092	3					
ANR	3118138	Parameter	bool isNoop	3443:20:103872:103882	3118092	0	True				
ANR	3118139	ParameterType	bool		3118092	0					
ANR	3118140	Identifier	isNoop		3118092	1					
ANR	3118141	Parameter	int jobType	3443:33:103885:103895	3118092	1	True				
ANR	3118142	ParameterType	int		3118092	0					
ANR	3118143	Identifier	jobType		3118092	1					
ANR	3118144	CFGEntryNode	ENTRY		3118092		True				
ANR	3118145	CFGExitNode	EXIT		3118092		True				
ANR	3118146	Symbol	& _storkIDHash		3118092						
ANR	3118147	Symbol	NULL		3118092						
ANR	3118148	Symbol	& _condorIDHash		3118092						
ANR	3118149	Symbol	isNoop		3118092						
ANR	3118150	Symbol	jobType		3118092						
ANR	3118151	Symbol	& _noopIDHash		3118092						
ANR	3118152	Function	swap_priorities	3472:0:104445:104605							
ANR	3118153	FunctionDef	"swap_priorities (Job * job , SubmitDagDeepOptions * sdo)"		3118152	0					
ANR	3118154	CompoundStatement		3473:0:104503:104605	3118152	0					
ANR	3118155	IdentifierDeclStatement	int priority = job -> _nodePriority ;	3474:1:104506:104539	3118152	0	True				
ANR	3118156	IdentifierDecl	priority = job -> _nodePriority		3118152	0					
ANR	3118157	IdentifierDeclType	int		3118152	0					
ANR	3118158	Identifier	priority		3118152	1					
ANR	3118159	AssignmentExpression	priority = job -> _nodePriority		3118152	2		=			
ANR	3118160	Identifier	priority		3118152	0					
ANR	3118161	PtrMemberAccess	job -> _nodePriority		3118152	1					
ANR	3118162	Identifier	job		3118152	0					
ANR	3118163	Identifier	_nodePriority		3118152	1					
ANR	3118164	ExpressionStatement	job -> _nodePriority = sdo -> priority	3475:1:104542:104576	3118152	1	True				
ANR	3118165	AssignmentExpression	job -> _nodePriority = sdo -> priority		3118152	0		=			
ANR	3118166	PtrMemberAccess	job -> _nodePriority		3118152	0					
ANR	3118167	Identifier	job		3118152	0					
ANR	3118168	Identifier	_nodePriority		3118152	1					
ANR	3118169	PtrMemberAccess	sdo -> priority		3118152	1					
ANR	3118170	Identifier	sdo		3118152	0					
ANR	3118171	Identifier	priority		3118152	1					
ANR	3118172	ExpressionStatement	sdo -> priority = priority	3476:1:104579:104603	3118152	2	True				
ANR	3118173	AssignmentExpression	sdo -> priority = priority		3118152	0		=			
ANR	3118174	PtrMemberAccess	sdo -> priority		3118152	0					
ANR	3118175	Identifier	sdo		3118152	0					
ANR	3118176	Identifier	priority		3118152	1					
ANR	3118177	Identifier	priority		3118152	1					
ANR	3118178	ReturnType	void		3118152	1					
ANR	3118179	Identifier	swap_priorities		3118152	2					
ANR	3118180	ParameterList	"Job * job , SubmitDagDeepOptions * sdo"		3118152	3					
ANR	3118181	Parameter	Job * job	3472:21:104466:104473	3118152	0	True				
ANR	3118182	ParameterType	Job *		3118152	0					
ANR	3118183	Identifier	job		3118152	1					
ANR	3118184	Parameter	SubmitDagDeepOptions * sdo	3472:31:104476:104500	3118152	1	True				
ANR	3118185	ParameterType	SubmitDagDeepOptions *		3118152	0					
ANR	3118186	Identifier	sdo		3118152	1					
ANR	3118187	CFGEntryNode	ENTRY		3118152		True				
ANR	3118188	CFGExitNode	EXIT		3118152		True				
ANR	3118189	Symbol	job -> _nodePriority		3118152						
ANR	3118190	Symbol	* job		3118152						
ANR	3118191	Symbol	* sdo		3118152						
ANR	3118192	Symbol	sdo -> priority		3118152						
ANR	3118193	Symbol	job		3118152						
ANR	3118194	Symbol	priority		3118152						
ANR	3118195	Symbol	sdo		3118152						
ANR	3118196	Function	Dag :: SubmitNodeJob	3480:0:104610:109274							
ANR	3118197	FunctionDef	"Dag :: SubmitNodeJob (const Dagman & dm , Job * node , CondorID & condorID)"		3118196	0					
ANR	3118198	CompoundStatement		3482:0:104701:109274	3118196	0					
ANR	3118199	IdentifierDeclStatement	submit_result_t result = SUBMIT_RESULT_NO_SUBMIT ;	3483:1:104704:104752	3118196	0	True				
ANR	3118200	IdentifierDecl	result = SUBMIT_RESULT_NO_SUBMIT		3118196	0					
ANR	3118201	IdentifierDeclType	submit_result_t		3118196	0					
ANR	3118202	Identifier	result		3118196	1					
ANR	3118203	AssignmentExpression	result = SUBMIT_RESULT_NO_SUBMIT		3118196	2		=			
ANR	3118204	Identifier	SUBMIT_RESULT_NO_SUBMIT		3118196	0					
ANR	3118205	Identifier	SUBMIT_RESULT_NO_SUBMIT		3118196	1					
ANR	3118206	IfStatement	if ( node -> _CondorID . _cluster != _defaultCondorId . _cluster )		3118196	1					
ANR	3118207	Condition	node -> _CondorID . _cluster != _defaultCondorId . _cluster	3486:6:104829:104881	3118196	0	True				
ANR	3118208	EqualityExpression	node -> _CondorID . _cluster != _defaultCondorId . _cluster		3118196	0		!=			
ANR	3118209	MemberAccess	node -> _CondorID . _cluster		3118196	0					
ANR	3118210	PtrMemberAccess	node -> _CondorID		3118196	0					
ANR	3118211	Identifier	node		3118196	0					
ANR	3118212	Identifier	_CondorID		3118196	1					
ANR	3118213	Identifier	_cluster		3118196	1					
ANR	3118214	MemberAccess	_defaultCondorId . _cluster		3118196	1					
ANR	3118215	Identifier	_defaultCondorId		3118196	0					
ANR	3118216	Identifier	_cluster		3118196	1					
ANR	3118217	CompoundStatement		8:2:283:371	3118196	1					
ANR	3118218	ExpressionStatement	ASSERT ( JobIsNoop ( condorID ) == node -> GetNoop ( ) )	3487:2:104889:104939	3118196	0	True				
ANR	3118219	CallExpression	ASSERT ( JobIsNoop ( condorID ) == node -> GetNoop ( ) )		3118196	0					
ANR	3118220	Callee	ASSERT		3118196	0					
ANR	3118221	Identifier	ASSERT		3118196	0					
ANR	3118222	ArgumentList	JobIsNoop ( condorID ) == node -> GetNoop ( )		3118196	1					
ANR	3118223	Argument	JobIsNoop ( condorID ) == node -> GetNoop ( )		3118196	0					
ANR	3118224	EqualityExpression	JobIsNoop ( condorID ) == node -> GetNoop ( )		3118196	0		==			
ANR	3118225	CallExpression	JobIsNoop ( condorID )		3118196	0					
ANR	3118226	Callee	JobIsNoop		3118196	0					
ANR	3118227	Identifier	JobIsNoop		3118196	0					
ANR	3118228	ArgumentList	condorID		3118196	1					
ANR	3118229	Argument	condorID		3118196	0					
ANR	3118230	Identifier	condorID		3118196	0					
ANR	3118231	CallExpression	node -> GetNoop ( )		3118196	1					
ANR	3118232	Callee	node -> GetNoop		3118196	0					
ANR	3118233	PtrMemberAccess	node -> GetNoop		3118196	0					
ANR	3118234	Identifier	node		3118196	0					
ANR	3118235	Identifier	GetNoop		3118196	1					
ANR	3118236	ArgumentList			3118196	1					
ANR	3118237	IdentifierDeclStatement	int id = GetIndexID ( node -> _CondorID ) ;	3488:2:104943:104981	3118196	1	True				
ANR	3118238	IdentifierDecl	id = GetIndexID ( node -> _CondorID )		3118196	0					
ANR	3118239	IdentifierDeclType	int		3118196	0					
ANR	3118240	Identifier	id		3118196	1					
ANR	3118241	AssignmentExpression	id = GetIndexID ( node -> _CondorID )		3118196	2		=			
ANR	3118242	Identifier	id		3118196	0					
ANR	3118243	CallExpression	GetIndexID ( node -> _CondorID )		3118196	1					
ANR	3118244	Callee	GetIndexID		3118196	0					
ANR	3118245	Identifier	GetIndexID		3118196	0					
ANR	3118246	ArgumentList	node -> _CondorID		3118196	1					
ANR	3118247	Argument	node -> _CondorID		3118196	0					
ANR	3118248	PtrMemberAccess	node -> _CondorID		3118196	0					
ANR	3118249	Identifier	node		3118196	0					
ANR	3118250	Identifier	_CondorID		3118196	1					
ANR	3118251	IdentifierDeclStatement	"int removeResult = GetEventIDHash ( node -> GetNoop ( ) , node -> JobType ( ) ) -> remove ( id ) ;"	3489:2:104985:105073	3118196	2	True				
ANR	3118252	IdentifierDecl	"removeResult = GetEventIDHash ( node -> GetNoop ( ) , node -> JobType ( ) ) -> remove ( id )"		3118196	0					
ANR	3118253	IdentifierDeclType	int		3118196	0					
ANR	3118254	Identifier	removeResult		3118196	1					
ANR	3118255	AssignmentExpression	"removeResult = GetEventIDHash ( node -> GetNoop ( ) , node -> JobType ( ) ) -> remove ( id )"		3118196	2		=			
ANR	3118256	Identifier	removeResult		3118196	0					
ANR	3118257	CallExpression	"GetEventIDHash ( node -> GetNoop ( ) , node -> JobType ( ) ) -> remove ( id )"		3118196	1					
ANR	3118258	Callee	"GetEventIDHash ( node -> GetNoop ( ) , node -> JobType ( ) ) -> remove"		3118196	0					
ANR	3118259	PtrMemberAccess	"GetEventIDHash ( node -> GetNoop ( ) , node -> JobType ( ) ) -> remove"		3118196	0					
ANR	3118260	CallExpression	"GetEventIDHash ( node -> GetNoop ( ) , node -> JobType ( ) )"		3118196	0					
ANR	3118261	Callee	GetEventIDHash		3118196	0					
ANR	3118262	Identifier	GetEventIDHash		3118196	0					
ANR	3118263	ArgumentList	node -> GetNoop ( )		3118196	1					
ANR	3118264	Argument	node -> GetNoop ( )		3118196	0					
ANR	3118265	CallExpression	node -> GetNoop ( )		3118196	0					
ANR	3118266	Callee	node -> GetNoop		3118196	0					
ANR	3118267	PtrMemberAccess	node -> GetNoop		3118196	0					
ANR	3118268	Identifier	node		3118196	0					
ANR	3118269	Identifier	GetNoop		3118196	1					
ANR	3118270	ArgumentList			3118196	1					
ANR	3118271	Argument	node -> JobType ( )		3118196	1					
ANR	3118272	CallExpression	node -> JobType ( )		3118196	0					
ANR	3118273	Callee	node -> JobType		3118196	0					
ANR	3118274	PtrMemberAccess	node -> JobType		3118196	0					
ANR	3118275	Identifier	node		3118196	0					
ANR	3118276	Identifier	JobType		3118196	1					
ANR	3118277	ArgumentList			3118196	1					
ANR	3118278	Identifier	remove		3118196	1					
ANR	3118279	ArgumentList	id		3118196	1					
ANR	3118280	Argument	id		3118196	0					
ANR	3118281	Identifier	id		3118196	0					
ANR	3118282	ExpressionStatement	ASSERT ( removeResult == 0 )	3491:2:105077:105104	3118196	3	True				
ANR	3118283	CallExpression	ASSERT ( removeResult == 0 )		3118196	0					
ANR	3118284	Callee	ASSERT		3118196	0					
ANR	3118285	Identifier	ASSERT		3118196	0					
ANR	3118286	ArgumentList	removeResult == 0		3118196	1					
ANR	3118287	Argument	removeResult == 0		3118196	0					
ANR	3118288	EqualityExpression	removeResult == 0		3118196	0		==			
ANR	3118289	Identifier	removeResult		3118196	0					
ANR	3118290	PrimaryExpression	0		3118196	1					
ANR	3118291	ExpressionStatement	node -> _CondorID = _defaultCondorId	3493:1:105110:105144	3118196	2	True				
ANR	3118292	AssignmentExpression	node -> _CondorID = _defaultCondorId		3118196	0		=			
ANR	3118293	PtrMemberAccess	node -> _CondorID		3118196	0					
ANR	3118294	Identifier	node		3118196	0					
ANR	3118295	Identifier	_CondorID		3118196	1					
ANR	3118296	Identifier	_defaultCondorId		3118196	1					
ANR	3118297	IfStatement	if ( dm . submit_delay != 0 )		3118196	3					
ANR	3118298	Condition	dm . submit_delay != 0	3496:5:105202:105221	3118196	0	True				
ANR	3118299	EqualityExpression	dm . submit_delay != 0		3118196	0		!=			
ANR	3118300	MemberAccess	dm . submit_delay		3118196	0					
ANR	3118301	Identifier	dm		3118196	0					
ANR	3118302	Identifier	submit_delay		3118196	1					
ANR	3118303	PrimaryExpression	0		3118196	1					
ANR	3118304	CompoundStatement		15:28:523:523	3118196	1					
ANR	3118305	Statement	debug_printf	3497:2:105229:105240	3118196	0	True				
ANR	3118306	Statement	(	3497:14:105241:105241	3118196	1	True				
ANR	3118307	Statement	DEBUG_VERBOSE	3497:16:105243:105255	3118196	2	True				
ANR	3118308	Statement	","	3497:29:105256:105256	3118196	3	True				
ANR	3118309	Statement	"""Sleeping for %d s """	3497:31:105258:105277	3118196	4	True				
ANR	3118310	Statement	"""(DAGMAN_SUBMIT_DELAY) to throttle submissions...\\n"""	3498:7:105286:105337	3118196	5	True				
ANR	3118311	Statement	","	3498:59:105338:105338	3118196	6	True				
ANR	3118312	Statement	dm	3499:7:105347:105348	3118196	7	True				
ANR	3118313	Statement	.	3499:9:105349:105349	3118196	8	True				
ANR	3118314	Statement	submit_delay	3499:10:105350:105361	3118196	9	True				
ANR	3118315	Statement	)	3499:23:105363:105363	3118196	10	True				
ANR	3118316	ExpressionStatement		3499:24:105364:105364	3118196	11	True				
ANR	3118317	ExpressionStatement	sleep ( dm . submit_delay )	3500:2:105368:105392	3118196	12	True				
ANR	3118318	CallExpression	sleep ( dm . submit_delay )		3118196	0					
ANR	3118319	Callee	sleep		3118196	0					
ANR	3118320	Identifier	sleep		3118196	0					
ANR	3118321	ArgumentList	dm . submit_delay		3118196	1					
ANR	3118322	Argument	dm . submit_delay		3118196	0					
ANR	3118323	MemberAccess	dm . submit_delay		3118196	0					
ANR	3118324	Identifier	dm		3118196	0					
ANR	3118325	Identifier	submit_delay		3118196	1					
ANR	3118326	IfStatement	if ( node -> JobType ( ) == Job :: TYPE_CONDOR && ! node -> GetNoop ( ) && node -> GetDagFile ( ) != NULL && _generateSubdagSubmits )		3118196	4					
ANR	3118327	Condition	node -> JobType ( ) == Job :: TYPE_CONDOR && ! node -> GetNoop ( ) && node -> GetDagFile ( ) != NULL && _generateSubdagSubmits	3506:9:105585:105699	3118196	0	True				
ANR	3118328	AndExpression	node -> JobType ( ) == Job :: TYPE_CONDOR && ! node -> GetNoop ( ) && node -> GetDagFile ( ) != NULL && _generateSubdagSubmits		3118196	0		&&			
ANR	3118329	EqualityExpression	node -> JobType ( ) == Job :: TYPE_CONDOR		3118196	0		==			
ANR	3118330	CallExpression	node -> JobType ( )		3118196	0					
ANR	3118331	Callee	node -> JobType		3118196	0					
ANR	3118332	PtrMemberAccess	node -> JobType		3118196	0					
ANR	3118333	Identifier	node		3118196	0					
ANR	3118334	Identifier	JobType		3118196	1					
ANR	3118335	ArgumentList			3118196	1					
ANR	3118336	Identifier	Job :: TYPE_CONDOR		3118196	1					
ANR	3118337	AndExpression	! node -> GetNoop ( ) && node -> GetDagFile ( ) != NULL && _generateSubdagSubmits		3118196	1		&&			
ANR	3118338	UnaryOperationExpression	! node -> GetNoop ( )		3118196	0					
ANR	3118339	UnaryOperator	!		3118196	0					
ANR	3118340	CallExpression	node -> GetNoop ( )		3118196	1					
ANR	3118341	Callee	node -> GetNoop		3118196	0					
ANR	3118342	PtrMemberAccess	node -> GetNoop		3118196	0					
ANR	3118343	Identifier	node		3118196	0					
ANR	3118344	Identifier	GetNoop		3118196	1					
ANR	3118345	ArgumentList			3118196	1					
ANR	3118346	AndExpression	node -> GetDagFile ( ) != NULL && _generateSubdagSubmits		3118196	1		&&			
ANR	3118347	EqualityExpression	node -> GetDagFile ( ) != NULL		3118196	0		!=			
ANR	3118348	CallExpression	node -> GetDagFile ( )		3118196	0					
ANR	3118349	Callee	node -> GetDagFile		3118196	0					
ANR	3118350	PtrMemberAccess	node -> GetDagFile		3118196	0					
ANR	3118351	Identifier	node		3118196	0					
ANR	3118352	Identifier	GetDagFile		3118196	1					
ANR	3118353	ArgumentList			3118196	1					
ANR	3118354	Identifier	NULL		3118196	1					
ANR	3118355	Identifier	_generateSubdagSubmits		3118196	1					
ANR	3118356	CompoundStatement		27:2:1005:1042	3118196	1					
ANR	3118357	IdentifierDeclStatement	bool isRetry = node -> GetRetries ( ) > 0 ;	3508:2:105707:105744	3118196	0	True				
ANR	3118358	IdentifierDecl	isRetry = node -> GetRetries ( ) > 0		3118196	0					
ANR	3118359	IdentifierDeclType	bool		3118196	0					
ANR	3118360	Identifier	isRetry		3118196	1					
ANR	3118361	AssignmentExpression	isRetry = node -> GetRetries ( ) > 0		3118196	2		=			
ANR	3118362	Identifier	isRetry		3118196	0					
ANR	3118363	RelationalExpression	node -> GetRetries ( ) > 0		3118196	1		>			
ANR	3118364	CallExpression	node -> GetRetries ( )		3118196	0					
ANR	3118365	Callee	node -> GetRetries		3118196	0					
ANR	3118366	PtrMemberAccess	node -> GetRetries		3118196	0					
ANR	3118367	Identifier	node		3118196	0					
ANR	3118368	Identifier	GetRetries		3118196	1					
ANR	3118369	ArgumentList			3118196	1					
ANR	3118370	PrimaryExpression	0		3118196	1					
ANR	3118371	IfStatement	if ( node -> _hasNodePriority && node -> _nodePriority > _submitDagDeepOpts -> priority )		3118196	1					
ANR	3118372	Condition	node -> _hasNodePriority && node -> _nodePriority > _submitDagDeepOpts -> priority	3509:6:105752:105827	3118196	0	True				
ANR	3118373	AndExpression	node -> _hasNodePriority && node -> _nodePriority > _submitDagDeepOpts -> priority		3118196	0		&&			
ANR	3118374	PtrMemberAccess	node -> _hasNodePriority		3118196	0					
ANR	3118375	Identifier	node		3118196	0					
ANR	3118376	Identifier	_hasNodePriority		3118196	1					
ANR	3118377	RelationalExpression	node -> _nodePriority > _submitDagDeepOpts -> priority		3118196	1		>			
ANR	3118378	PtrMemberAccess	node -> _nodePriority		3118196	0					
ANR	3118379	Identifier	node		3118196	0					
ANR	3118380	Identifier	_nodePriority		3118196	1					
ANR	3118381	PtrMemberAccess	_submitDagDeepOpts -> priority		3118196	1					
ANR	3118382	Identifier	_submitDagDeepOpts		3118196	0					
ANR	3118383	Identifier	priority		3118196	1					
ANR	3118384	CompoundStatement		28:84:1128:1128	3118196	1					
ANR	3118385	ExpressionStatement	"swap_priorities ( node , _submitDagDeepOpts )"	3510:3:105835:105875	3118196	0	True				
ANR	3118386	CallExpression	"swap_priorities ( node , _submitDagDeepOpts )"		3118196	0					
ANR	3118387	Callee	swap_priorities		3118196	0					
ANR	3118388	Identifier	swap_priorities		3118196	0					
ANR	3118389	ArgumentList	node		3118196	1					
ANR	3118390	Argument	node		3118196	0					
ANR	3118391	Identifier	node		3118196	0					
ANR	3118392	Argument	_submitDagDeepOpts		3118196	1					
ANR	3118393	Identifier	_submitDagDeepOpts		3118196	0					
ANR	3118394	IfStatement	"if ( runSubmitDag ( * _submitDagDeepOpts , node -> GetDagFile ( ) , node -> GetDirectory ( ) , isRetry ) != 0 )"		3118196	2					
ANR	3118395	Condition	"runSubmitDag ( * _submitDagDeepOpts , node -> GetDagFile ( ) , node -> GetDirectory ( ) , isRetry ) != 0"	3512:7:105888:105983	3118196	0	True				
ANR	3118396	EqualityExpression	"runSubmitDag ( * _submitDagDeepOpts , node -> GetDagFile ( ) , node -> GetDirectory ( ) , isRetry ) != 0"		3118196	0		!=			
ANR	3118397	CallExpression	"runSubmitDag ( * _submitDagDeepOpts , node -> GetDagFile ( ) , node -> GetDirectory ( ) , isRetry )"		3118196	0					
ANR	3118398	Callee	runSubmitDag		3118196	0					
ANR	3118399	Identifier	runSubmitDag		3118196	0					
ANR	3118400	ArgumentList	* _submitDagDeepOpts		3118196	1					
ANR	3118401	Argument	* _submitDagDeepOpts		3118196	0					
ANR	3118402	UnaryOperationExpression	* _submitDagDeepOpts		3118196	0					
ANR	3118403	UnaryOperator	*		3118196	0					
ANR	3118404	Identifier	_submitDagDeepOpts		3118196	1					
ANR	3118405	Argument	node -> GetDagFile ( )		3118196	1					
ANR	3118406	CallExpression	node -> GetDagFile ( )		3118196	0					
ANR	3118407	Callee	node -> GetDagFile		3118196	0					
ANR	3118408	PtrMemberAccess	node -> GetDagFile		3118196	0					
ANR	3118409	Identifier	node		3118196	0					
ANR	3118410	Identifier	GetDagFile		3118196	1					
ANR	3118411	ArgumentList			3118196	1					
ANR	3118412	Argument	node -> GetDirectory ( )		3118196	2					
ANR	3118413	CallExpression	node -> GetDirectory ( )		3118196	0					
ANR	3118414	Callee	node -> GetDirectory		3118196	0					
ANR	3118415	PtrMemberAccess	node -> GetDirectory		3118196	0					
ANR	3118416	Identifier	node		3118196	0					
ANR	3118417	Identifier	GetDirectory		3118196	1					
ANR	3118418	ArgumentList			3118196	1					
ANR	3118419	Argument	isRetry		3118196	3					
ANR	3118420	Identifier	isRetry		3118196	0					
ANR	3118421	PrimaryExpression	0		3118196	1					
ANR	3118422	CompoundStatement		32:44:1285:1285	3118196	1					
ANR	3118423	Statement	debug_printf	3514:3:105992:106003	3118196	0	True				
ANR	3118424	Statement	(	3514:15:106004:106004	3118196	1	True				
ANR	3118425	Statement	DEBUG_QUIET	3514:17:106006:106016	3118196	2	True				
ANR	3118426	Statement	","	3514:28:106017:106017	3118196	3	True				
ANR	3118427	Statement	"""ERROR: condor_submit_dag -no_submit failed """	3515:6:106025:106069	3118196	4	True				
ANR	3118428	Statement	"""for node %s.\\n"""	3516:6:106077:106092	3118196	5	True				
ANR	3118429	Statement	","	3516:22:106093:106093	3118196	6	True				
ANR	3118430	Statement	node	3516:24:106095:106098	3118196	7	True				
ANR	3118431	Statement	->	3516:28:106099:106100	3118196	8	True				
ANR	3118432	Statement	GetJobName	3516:30:106101:106110	3118196	9	True				
ANR	3118433	Statement	(	3516:40:106111:106111	3118196	10	True				
ANR	3118434	Statement	)	3516:41:106112:106112	3118196	11	True				
ANR	3118435	Statement	)	3516:43:106114:106114	3118196	12	True				
ANR	3118436	ExpressionStatement		3516:44:106115:106115	3118196	13	True				
ANR	3118437	IfStatement	if ( node -> _hasNodePriority && node -> _nodePriority < _submitDagDeepOpts -> priority )		3118196	14					
ANR	3118438	Condition	node -> _hasNodePriority && node -> _nodePriority < _submitDagDeepOpts -> priority	3519:7:106234:106309	3118196	0	True				
ANR	3118439	AndExpression	node -> _hasNodePriority && node -> _nodePriority < _submitDagDeepOpts -> priority		3118196	0		&&			
ANR	3118440	PtrMemberAccess	node -> _hasNodePriority		3118196	0					
ANR	3118441	Identifier	node		3118196	0					
ANR	3118442	Identifier	_hasNodePriority		3118196	1					
ANR	3118443	RelationalExpression	node -> _nodePriority < _submitDagDeepOpts -> priority		3118196	1		<			
ANR	3118444	PtrMemberAccess	node -> _nodePriority		3118196	0					
ANR	3118445	Identifier	node		3118196	0					
ANR	3118446	Identifier	_nodePriority		3118196	1					
ANR	3118447	PtrMemberAccess	_submitDagDeepOpts -> priority		3118196	1					
ANR	3118448	Identifier	_submitDagDeepOpts		3118196	0					
ANR	3118449	Identifier	priority		3118196	1					
ANR	3118450	CompoundStatement		38:85:1610:1610	3118196	1					
ANR	3118451	ExpressionStatement	"swap_priorities ( node , _submitDagDeepOpts )"	3520:4:106318:106358	3118196	0	True				
ANR	3118452	CallExpression	"swap_priorities ( node , _submitDagDeepOpts )"		3118196	0					
ANR	3118453	Callee	swap_priorities		3118196	0					
ANR	3118454	Identifier	swap_priorities		3118196	0					
ANR	3118455	ArgumentList	node		3118196	1					
ANR	3118456	Argument	node		3118196	0					
ANR	3118457	Identifier	node		3118196	0					
ANR	3118458	Argument	_submitDagDeepOpts		3118196	1					
ANR	3118459	Identifier	_submitDagDeepOpts		3118196	0					
ANR	3118460	ReturnStatement	return SUBMIT_RESULT_NO_SUBMIT ;	3522:3:106368:106398	3118196	15	True				
ANR	3118461	Identifier	SUBMIT_RESULT_NO_SUBMIT		3118196	0					
ANR	3118462	IfStatement	if ( node -> _hasNodePriority && node -> _nodePriority < _submitDagDeepOpts -> priority )		3118196	3					
ANR	3118463	Condition	node -> _hasNodePriority && node -> _nodePriority < _submitDagDeepOpts -> priority	3524:6:106410:106485	3118196	0	True				
ANR	3118464	AndExpression	node -> _hasNodePriority && node -> _nodePriority < _submitDagDeepOpts -> priority		3118196	0		&&			
ANR	3118465	PtrMemberAccess	node -> _hasNodePriority		3118196	0					
ANR	3118466	Identifier	node		3118196	0					
ANR	3118467	Identifier	_hasNodePriority		3118196	1					
ANR	3118468	RelationalExpression	node -> _nodePriority < _submitDagDeepOpts -> priority		3118196	1		<			
ANR	3118469	PtrMemberAccess	node -> _nodePriority		3118196	0					
ANR	3118470	Identifier	node		3118196	0					
ANR	3118471	Identifier	_nodePriority		3118196	1					
ANR	3118472	PtrMemberAccess	_submitDagDeepOpts -> priority		3118196	1					
ANR	3118473	Identifier	_submitDagDeepOpts		3118196	0					
ANR	3118474	Identifier	priority		3118196	1					
ANR	3118475	CompoundStatement		43:84:1786:1786	3118196	1					
ANR	3118476	ExpressionStatement	"swap_priorities ( node , _submitDagDeepOpts )"	3525:3:106493:106533	3118196	0	True				
ANR	3118477	CallExpression	"swap_priorities ( node , _submitDagDeepOpts )"		3118196	0					
ANR	3118478	Callee	swap_priorities		3118196	0					
ANR	3118479	Identifier	swap_priorities		3118196	0					
ANR	3118480	ArgumentList	node		3118196	1					
ANR	3118481	Argument	node		3118196	0					
ANR	3118482	Identifier	node		3118196	0					
ANR	3118483	Argument	_submitDagDeepOpts		3118196	1					
ANR	3118484	Identifier	_submitDagDeepOpts		3118196	0					
ANR	3118485	IfStatement	"if ( ! node -> MonitorLogFile ( _condorLogRdr , _storkLogRdr , _nfsLogIsError , _recovery , _defaultNodeLog ) )"		3118196	5					
ANR	3118486	Condition	"! node -> MonitorLogFile ( _condorLogRdr , _storkLogRdr , _nfsLogIsError , _recovery , _defaultNodeLog )"	3529:6:106549:106648	3118196	0	True				
ANR	3118487	UnaryOperationExpression	"! node -> MonitorLogFile ( _condorLogRdr , _storkLogRdr , _nfsLogIsError , _recovery , _defaultNodeLog )"		3118196	0					
ANR	3118488	UnaryOperator	!		3118196	0					
ANR	3118489	CallExpression	"node -> MonitorLogFile ( _condorLogRdr , _storkLogRdr , _nfsLogIsError , _recovery , _defaultNodeLog )"		3118196	1					
ANR	3118490	Callee	node -> MonitorLogFile		3118196	0					
ANR	3118491	PtrMemberAccess	node -> MonitorLogFile		3118196	0					
ANR	3118492	Identifier	node		3118196	0					
ANR	3118493	Identifier	MonitorLogFile		3118196	1					
ANR	3118494	ArgumentList	_condorLogRdr		3118196	1					
ANR	3118495	Argument	_condorLogRdr		3118196	0					
ANR	3118496	Identifier	_condorLogRdr		3118196	0					
ANR	3118497	Argument	_storkLogRdr		3118196	1					
ANR	3118498	Identifier	_storkLogRdr		3118196	0					
ANR	3118499	Argument	_nfsLogIsError		3118196	2					
ANR	3118500	Identifier	_nfsLogIsError		3118196	0					
ANR	3118501	Argument	_recovery		3118196	3					
ANR	3118502	Identifier	_recovery		3118196	0					
ANR	3118503	Argument	_defaultNodeLog		3118196	4					
ANR	3118504	Identifier	_defaultNodeLog		3118196	0					
ANR	3118505	CompoundStatement		49:35:1950:1950	3118196	1					
ANR	3118506	ReturnStatement	return SUBMIT_RESULT_NO_SUBMIT ;	3531:2:106656:106686	3118196	0	True				
ANR	3118507	Identifier	SUBMIT_RESULT_NO_SUBMIT		3118196	0					
ANR	3118508	IfStatement	if ( ! _allowLogError && node -> JobType ( ) == Job :: TYPE_STORK && ! node -> CheckForLogFile ( ) )		3118196	6					
ANR	3118509	Condition	! _allowLogError && node -> JobType ( ) == Job :: TYPE_STORK && ! node -> CheckForLogFile ( )	3542:6:107132:107216	3118196	0	True				
ANR	3118510	AndExpression	! _allowLogError && node -> JobType ( ) == Job :: TYPE_STORK && ! node -> CheckForLogFile ( )		3118196	0		&&			
ANR	3118511	UnaryOperationExpression	! _allowLogError		3118196	0					
ANR	3118512	UnaryOperator	!		3118196	0					
ANR	3118513	Identifier	_allowLogError		3118196	1					
ANR	3118514	AndExpression	node -> JobType ( ) == Job :: TYPE_STORK && ! node -> CheckForLogFile ( )		3118196	1		&&			
ANR	3118515	EqualityExpression	node -> JobType ( ) == Job :: TYPE_STORK		3118196	0		==			
ANR	3118516	CallExpression	node -> JobType ( )		3118196	0					
ANR	3118517	Callee	node -> JobType		3118196	0					
ANR	3118518	PtrMemberAccess	node -> JobType		3118196	0					
ANR	3118519	Identifier	node		3118196	0					
ANR	3118520	Identifier	JobType		3118196	1					
ANR	3118521	ArgumentList			3118196	1					
ANR	3118522	Identifier	Job :: TYPE_STORK		3118196	1					
ANR	3118523	UnaryOperationExpression	! node -> CheckForLogFile ( )		3118196	1					
ANR	3118524	UnaryOperator	!		3118196	0					
ANR	3118525	CallExpression	node -> CheckForLogFile ( )		3118196	1					
ANR	3118526	Callee	node -> CheckForLogFile		3118196	0					
ANR	3118527	PtrMemberAccess	node -> CheckForLogFile		3118196	0					
ANR	3118528	Identifier	node		3118196	0					
ANR	3118529	Identifier	CheckForLogFile		3118196	1					
ANR	3118530	ArgumentList			3118196	1					
ANR	3118531	CompoundStatement		62:31:2518:2518	3118196	1					
ANR	3118532	Statement	debug_printf	3544:2:107224:107235	3118196	0	True				
ANR	3118533	Statement	(	3544:14:107236:107236	3118196	1	True				
ANR	3118534	Statement	DEBUG_NORMAL	3544:16:107238:107249	3118196	2	True				
ANR	3118535	Statement	","	3544:28:107250:107250	3118196	3	True				
ANR	3118536	Statement	"""ERROR: No 'log =' value found in """	3544:30:107252:107286	3118196	4	True				
ANR	3118537	Statement	"""submit file %s for node %s\\n"""	3545:5:107293:107322	3118196	5	True				
ANR	3118538	Statement	","	3545:35:107323:107323	3118196	6	True				
ANR	3118539	Statement	node	3545:37:107325:107328	3118196	7	True				
ANR	3118540	Statement	->	3545:41:107329:107330	3118196	8	True				
ANR	3118541	Statement	GetCmdFile	3545:43:107331:107340	3118196	9	True				
ANR	3118542	Statement	(	3545:53:107341:107341	3118196	10	True				
ANR	3118543	Statement	)	3545:54:107342:107342	3118196	11	True				
ANR	3118544	Statement	","	3545:55:107343:107343	3118196	12	True				
ANR	3118545	Statement	node	3546:5:107350:107353	3118196	13	True				
ANR	3118546	Statement	->	3546:9:107354:107355	3118196	14	True				
ANR	3118547	Statement	GetJobName	3546:11:107356:107365	3118196	15	True				
ANR	3118548	Statement	(	3546:21:107366:107366	3118196	16	True				
ANR	3118549	Statement	)	3546:22:107367:107367	3118196	17	True				
ANR	3118550	Statement	)	3546:24:107369:107369	3118196	18	True				
ANR	3118551	ExpressionStatement		3546:25:107370:107370	3118196	19	True				
ANR	3118552	ExpressionStatement	node -> _Status = Job :: STATUS_ERROR	3547:2:107374:107407	3118196	20	True				
ANR	3118553	AssignmentExpression	node -> _Status = Job :: STATUS_ERROR		3118196	0		=			
ANR	3118554	PtrMemberAccess	node -> _Status		3118196	0					
ANR	3118555	Identifier	node		3118196	0					
ANR	3118556	Identifier	_Status		3118196	1					
ANR	3118557	Identifier	Job :: STATUS_ERROR		3118196	1					
ANR	3118558	ExpressionStatement	"snprintf ( node -> error_text , JOB_ERROR_TEXT_MAXLEN , ""No 'log =' value found in submit file %s"" , node -> GetCmdFile ( ) )"	3548:2:107411:107536	3118196	21	True				
ANR	3118559	CallExpression	"snprintf ( node -> error_text , JOB_ERROR_TEXT_MAXLEN , ""No 'log =' value found in submit file %s"" , node -> GetCmdFile ( ) )"		3118196	0					
ANR	3118560	Callee	snprintf		3118196	0					
ANR	3118561	Identifier	snprintf		3118196	0					
ANR	3118562	ArgumentList	node -> error_text		3118196	1					
ANR	3118563	Argument	node -> error_text		3118196	0					
ANR	3118564	PtrMemberAccess	node -> error_text		3118196	0					
ANR	3118565	Identifier	node		3118196	0					
ANR	3118566	Identifier	error_text		3118196	1					
ANR	3118567	Argument	JOB_ERROR_TEXT_MAXLEN		3118196	1					
ANR	3118568	Identifier	JOB_ERROR_TEXT_MAXLEN		3118196	0					
ANR	3118569	Argument	"""No 'log =' value found in submit file %s"""		3118196	2					
ANR	3118570	PrimaryExpression	"""No 'log =' value found in submit file %s"""		3118196	0					
ANR	3118571	Argument	node -> GetCmdFile ( )		3118196	3					
ANR	3118572	CallExpression	node -> GetCmdFile ( )		3118196	0					
ANR	3118573	Callee	node -> GetCmdFile		3118196	0					
ANR	3118574	PtrMemberAccess	node -> GetCmdFile		3118196	0					
ANR	3118575	Identifier	node		3118196	0					
ANR	3118576	Identifier	GetCmdFile		3118196	1					
ANR	3118577	ArgumentList			3118196	1					
ANR	3118578	ExpressionStatement	_numNodesFailed ++	3551:4:107542:107559	3118196	22	True				
ANR	3118579	PostIncDecOperationExpression	_numNodesFailed ++		3118196	0					
ANR	3118580	Identifier	_numNodesFailed		3118196	0					
ANR	3118581	IncDec	++		3118196	1					
ANR	3118582	ExpressionStatement	result = SUBMIT_RESULT_NO_SUBMIT	3552:2:107563:107595	3118196	23	True				
ANR	3118583	AssignmentExpression	result = SUBMIT_RESULT_NO_SUBMIT		3118196	0		=			
ANR	3118584	Identifier	result		3118196	0					
ANR	3118585	Identifier	SUBMIT_RESULT_NO_SUBMIT		3118196	1					
ANR	3118586	ElseStatement	else		3118196	0					
ANR	3118587	CompoundStatement		78:2:3073:3100	3118196	0					
ANR	3118588	ExpressionStatement	"debug_printf ( DEBUG_NORMAL , ""Submitting %s Node %s job(s)...\\n"" , node -> JobTypeString ( ) , node -> GetJobName ( ) )"	3555:2:107610:107725	3118196	0	True				
ANR	3118589	CallExpression	"debug_printf ( DEBUG_NORMAL , ""Submitting %s Node %s job(s)...\\n"" , node -> JobTypeString ( ) , node -> GetJobName ( ) )"		3118196	0					
ANR	3118590	Callee	debug_printf		3118196	0					
ANR	3118591	Identifier	debug_printf		3118196	0					
ANR	3118592	ArgumentList	DEBUG_NORMAL		3118196	1					
ANR	3118593	Argument	DEBUG_NORMAL		3118196	0					
ANR	3118594	Identifier	DEBUG_NORMAL		3118196	0					
ANR	3118595	Argument	"""Submitting %s Node %s job(s)...\\n"""		3118196	1					
ANR	3118596	PrimaryExpression	"""Submitting %s Node %s job(s)...\\n"""		3118196	0					
ANR	3118597	Argument	node -> JobTypeString ( )		3118196	2					
ANR	3118598	CallExpression	node -> JobTypeString ( )		3118196	0					
ANR	3118599	Callee	node -> JobTypeString		3118196	0					
ANR	3118600	PtrMemberAccess	node -> JobTypeString		3118196	0					
ANR	3118601	Identifier	node		3118196	0					
ANR	3118602	Identifier	JobTypeString		3118196	1					
ANR	3118603	ArgumentList			3118196	1					
ANR	3118604	Argument	node -> GetJobName ( )		3118196	3					
ANR	3118605	CallExpression	node -> GetJobName ( )		3118196	0					
ANR	3118606	Callee	node -> GetJobName		3118196	0					
ANR	3118607	PtrMemberAccess	node -> GetJobName		3118196	0					
ANR	3118608	Identifier	node		3118196	0					
ANR	3118609	Identifier	GetJobName		3118196	1					
ANR	3118610	ArgumentList			3118196	1					
ANR	3118611	IdentifierDeclStatement	MyString cmd_file = node -> GetCmdFile ( ) ;	3558:5:107733:107771	3118196	1	True				
ANR	3118612	IdentifierDecl	cmd_file = node -> GetCmdFile ( )		3118196	0					
ANR	3118613	IdentifierDeclType	MyString		3118196	0					
ANR	3118614	Identifier	cmd_file		3118196	1					
ANR	3118615	AssignmentExpression	cmd_file = node -> GetCmdFile ( )		3118196	2		=			
ANR	3118616	Identifier	cmd_file		3118196	0					
ANR	3118617	CallExpression	node -> GetCmdFile ( )		3118196	1					
ANR	3118618	Callee	node -> GetCmdFile		3118196	0					
ANR	3118619	PtrMemberAccess	node -> GetCmdFile		3118196	0					
ANR	3118620	Identifier	node		3118196	0					
ANR	3118621	Identifier	GetCmdFile		3118196	1					
ANR	3118622	ArgumentList			3118196	1					
ANR	3118623	IdentifierDeclStatement	bool submit_success = false ;	3559:2:107775:107802	3118196	2	True				
ANR	3118624	IdentifierDecl	submit_success = false		3118196	0					
ANR	3118625	IdentifierDeclType	bool		3118196	0					
ANR	3118626	Identifier	submit_success		3118196	1					
ANR	3118627	AssignmentExpression	submit_success = false		3118196	2		=			
ANR	3118628	Identifier	false		3118196	0					
ANR	3118629	Identifier	false		3118196	1					
ANR	3118630	IfStatement	if ( node -> JobType ( ) == Job :: TYPE_CONDOR )		3118196	3					
ANR	3118631	Condition	node -> JobType ( ) == Job :: TYPE_CONDOR	3561:9:107814:107848	3118196	0	True				
ANR	3118632	EqualityExpression	node -> JobType ( ) == Job :: TYPE_CONDOR		3118196	0		==			
ANR	3118633	CallExpression	node -> JobType ( )		3118196	0					
ANR	3118634	Callee	node -> JobType		3118196	0					
ANR	3118635	PtrMemberAccess	node -> JobType		3118196	0					
ANR	3118636	Identifier	node		3118196	0					
ANR	3118637	Identifier	JobType		3118196	1					
ANR	3118638	ArgumentList			3118196	1					
ANR	3118639	Identifier	Job :: TYPE_CONDOR		3118196	1					
ANR	3118640	CompoundStatement		80:47:3150:3150	3118196	1					
ANR	3118641	ExpressionStatement	node -> _submitTries ++	3562:5:107859:107879	3118196	0	True				
ANR	3118642	PostIncDecOperationExpression	node -> _submitTries ++		3118196	0					
ANR	3118643	PtrMemberAccess	node -> _submitTries		3118196	0					
ANR	3118644	Identifier	node		3118196	0					
ANR	3118645	Identifier	_submitTries		3118196	1					
ANR	3118646	IncDec	++		3118196	1					
ANR	3118647	IfStatement	if ( node -> GetNoop ( ) )		3118196	1					
ANR	3118648	Condition	node -> GetNoop ( )	3563:8:107889:107903	3118196	0	True				
ANR	3118649	CallExpression	node -> GetNoop ( )		3118196	0					
ANR	3118650	Callee	node -> GetNoop		3118196	0					
ANR	3118651	PtrMemberAccess	node -> GetNoop		3118196	0					
ANR	3118652	Identifier	node		3118196	0					
ANR	3118653	Identifier	GetNoop		3118196	1					
ANR	3118654	ArgumentList			3118196	1					
ANR	3118655	CompoundStatement		82:26:3205:3205	3118196	1					
ANR	3118656	ExpressionStatement	"submit_success = fake_condor_submit ( condorID , node -> GetJobName ( ) , node -> GetDirectory ( ) , node -> GetLogFile ( ) , node -> GetLogFileIsXml ( ) )"	3564:9:107918:108066	3118196	0	True				
ANR	3118657	AssignmentExpression	"submit_success = fake_condor_submit ( condorID , node -> GetJobName ( ) , node -> GetDirectory ( ) , node -> GetLogFile ( ) , node -> GetLogFileIsXml ( ) )"		3118196	0		=			
ANR	3118658	Identifier	submit_success		3118196	0					
ANR	3118659	CallExpression	"fake_condor_submit ( condorID , node -> GetJobName ( ) , node -> GetDirectory ( ) , node -> GetLogFile ( ) , node -> GetLogFileIsXml ( ) )"		3118196	1					
ANR	3118660	Callee	fake_condor_submit		3118196	0					
ANR	3118661	Identifier	fake_condor_submit		3118196	0					
ANR	3118662	ArgumentList	condorID		3118196	1					
ANR	3118663	Argument	condorID		3118196	0					
ANR	3118664	Identifier	condorID		3118196	0					
ANR	3118665	Argument	node -> GetJobName ( )		3118196	1					
ANR	3118666	CallExpression	node -> GetJobName ( )		3118196	0					
ANR	3118667	Callee	node -> GetJobName		3118196	0					
ANR	3118668	PtrMemberAccess	node -> GetJobName		3118196	0					
ANR	3118669	Identifier	node		3118196	0					
ANR	3118670	Identifier	GetJobName		3118196	1					
ANR	3118671	ArgumentList			3118196	1					
ANR	3118672	Argument	node -> GetDirectory ( )		3118196	2					
ANR	3118673	CallExpression	node -> GetDirectory ( )		3118196	0					
ANR	3118674	Callee	node -> GetDirectory		3118196	0					
ANR	3118675	PtrMemberAccess	node -> GetDirectory		3118196	0					
ANR	3118676	Identifier	node		3118196	0					
ANR	3118677	Identifier	GetDirectory		3118196	1					
ANR	3118678	ArgumentList			3118196	1					
ANR	3118679	Argument	node -> GetLogFile ( )		3118196	3					
ANR	3118680	CallExpression	node -> GetLogFile ( )		3118196	0					
ANR	3118681	Callee	node -> GetLogFile		3118196	0					
ANR	3118682	PtrMemberAccess	node -> GetLogFile		3118196	0					
ANR	3118683	Identifier	node		3118196	0					
ANR	3118684	Identifier	GetLogFile		3118196	1					
ANR	3118685	ArgumentList			3118196	1					
ANR	3118686	Argument	node -> GetLogFileIsXml ( )		3118196	4					
ANR	3118687	CallExpression	node -> GetLogFileIsXml ( )		3118196	0					
ANR	3118688	Callee	node -> GetLogFileIsXml		3118196	0					
ANR	3118689	PtrMemberAccess	node -> GetLogFileIsXml		3118196	0					
ANR	3118690	Identifier	node		3118196	0					
ANR	3118691	Identifier	GetLogFileIsXml		3118196	1					
ANR	3118692	ArgumentList			3118196	1					
ANR	3118693	ElseStatement	else		3118196	0					
ANR	3118694	CompoundStatement		94:4:3671:3714	3118196	0					
ANR	3118695	IdentifierDeclStatement	const char * logFile = node -> UsingDefaultLog ( ) ? node -> GetLogFile ( ) : NULL ;	3569:4:108085:108165	3118196	0	True				
ANR	3118696	IdentifierDecl	* logFile = node -> UsingDefaultLog ( ) ? node -> GetLogFile ( ) : NULL		3118196	0					
ANR	3118697	IdentifierDeclType	const char *		3118196	0					
ANR	3118698	Identifier	logFile		3118196	1					
ANR	3118699	AssignmentExpression	* logFile = node -> UsingDefaultLog ( ) ? node -> GetLogFile ( ) : NULL		3118196	2		=			
ANR	3118700	Identifier	logFile		3118196	0					
ANR	3118701	ConditionalExpression	node -> UsingDefaultLog ( ) ? node -> GetLogFile ( ) : NULL		3118196	1					
ANR	3118702	Condition	node -> UsingDefaultLog ( )		3118196	0					
ANR	3118703	CallExpression	node -> UsingDefaultLog ( )		3118196	0					
ANR	3118704	Callee	node -> UsingDefaultLog		3118196	0					
ANR	3118705	PtrMemberAccess	node -> UsingDefaultLog		3118196	0					
ANR	3118706	Identifier	node		3118196	0					
ANR	3118707	Identifier	UsingDefaultLog		3118196	1					
ANR	3118708	ArgumentList			3118196	1					
ANR	3118709	CallExpression	node -> GetLogFile ( )		3118196	1					
ANR	3118710	Callee	node -> GetLogFile		3118196	0					
ANR	3118711	PtrMemberAccess	node -> GetLogFile		3118196	0					
ANR	3118712	Identifier	node		3118196	0					
ANR	3118713	Identifier	GetLogFile		3118196	1					
ANR	3118714	ArgumentList			3118196	1					
ANR	3118715	Identifier	NULL		3118196	2					
ANR	3118716	IdentifierDeclStatement	MyString parents = ParentListString ( node ) ;	3575:4:108373:108416	3118196	1	True				
ANR	3118717	IdentifierDecl	parents = ParentListString ( node )		3118196	0					
ANR	3118718	IdentifierDeclType	MyString		3118196	0					
ANR	3118719	Identifier	parents		3118196	1					
ANR	3118720	AssignmentExpression	parents = ParentListString ( node )		3118196	2		=			
ANR	3118721	Identifier	parents		3118196	0					
ANR	3118722	CallExpression	ParentListString ( node )		3118196	1					
ANR	3118723	Callee	ParentListString		3118196	0					
ANR	3118724	Identifier	ParentListString		3118196	0					
ANR	3118725	ArgumentList	node		3118196	1					
ANR	3118726	Argument	node		3118196	0					
ANR	3118727	Identifier	node		3118196	0					
ANR	3118728	ExpressionStatement	"submit_success = condor_submit ( dm , cmd_file . Value ( ) , condorID , node -> GetJobName ( ) , parents , node -> varNamesFromDag , node -> varValsFromDag , node -> GetDirectory ( ) , logFile , ProhibitMultiJobs ( ) )"	3576:9:108427:108645	3118196	2	True				
ANR	3118729	AssignmentExpression	"submit_success = condor_submit ( dm , cmd_file . Value ( ) , condorID , node -> GetJobName ( ) , parents , node -> varNamesFromDag , node -> varValsFromDag , node -> GetDirectory ( ) , logFile , ProhibitMultiJobs ( ) )"		3118196	0		=			
ANR	3118730	Identifier	submit_success		3118196	0					
ANR	3118731	CallExpression	"condor_submit ( dm , cmd_file . Value ( ) , condorID , node -> GetJobName ( ) , parents , node -> varNamesFromDag , node -> varValsFromDag , node -> GetDirectory ( ) , logFile , ProhibitMultiJobs ( ) )"		3118196	1					
ANR	3118732	Callee	condor_submit		3118196	0					
ANR	3118733	Identifier	condor_submit		3118196	0					
ANR	3118734	ArgumentList	dm		3118196	1					
ANR	3118735	Argument	dm		3118196	0					
ANR	3118736	Identifier	dm		3118196	0					
ANR	3118737	Argument	cmd_file . Value ( )		3118196	1					
ANR	3118738	CallExpression	cmd_file . Value ( )		3118196	0					
ANR	3118739	Callee	cmd_file . Value		3118196	0					
ANR	3118740	MemberAccess	cmd_file . Value		3118196	0					
ANR	3118741	Identifier	cmd_file		3118196	0					
ANR	3118742	Identifier	Value		3118196	1					
ANR	3118743	ArgumentList			3118196	1					
ANR	3118744	Argument	condorID		3118196	2					
ANR	3118745	Identifier	condorID		3118196	0					
ANR	3118746	Argument	node -> GetJobName ( )		3118196	3					
ANR	3118747	CallExpression	node -> GetJobName ( )		3118196	0					
ANR	3118748	Callee	node -> GetJobName		3118196	0					
ANR	3118749	PtrMemberAccess	node -> GetJobName		3118196	0					
ANR	3118750	Identifier	node		3118196	0					
ANR	3118751	Identifier	GetJobName		3118196	1					
ANR	3118752	ArgumentList			3118196	1					
ANR	3118753	Argument	parents		3118196	4					
ANR	3118754	Identifier	parents		3118196	0					
ANR	3118755	Argument	node -> varNamesFromDag		3118196	5					
ANR	3118756	PtrMemberAccess	node -> varNamesFromDag		3118196	0					
ANR	3118757	Identifier	node		3118196	0					
ANR	3118758	Identifier	varNamesFromDag		3118196	1					
ANR	3118759	Argument	node -> varValsFromDag		3118196	6					
ANR	3118760	PtrMemberAccess	node -> varValsFromDag		3118196	0					
ANR	3118761	Identifier	node		3118196	0					
ANR	3118762	Identifier	varValsFromDag		3118196	1					
ANR	3118763	Argument	node -> GetDirectory ( )		3118196	7					
ANR	3118764	CallExpression	node -> GetDirectory ( )		3118196	0					
ANR	3118765	Callee	node -> GetDirectory		3118196	0					
ANR	3118766	PtrMemberAccess	node -> GetDirectory		3118196	0					
ANR	3118767	Identifier	node		3118196	0					
ANR	3118768	Identifier	GetDirectory		3118196	1					
ANR	3118769	ArgumentList			3118196	1					
ANR	3118770	Argument	logFile		3118196	8					
ANR	3118771	Identifier	logFile		3118196	0					
ANR	3118772	Argument	ProhibitMultiJobs ( )		3118196	9					
ANR	3118773	CallExpression	ProhibitMultiJobs ( )		3118196	0					
ANR	3118774	Callee	ProhibitMultiJobs		3118196	0					
ANR	3118775	Identifier	ProhibitMultiJobs		3118196	0					
ANR	3118776	ArgumentList			3118196	1					
ANR	3118777	ElseStatement	else		3118196	0					
ANR	3118778	IfStatement	if ( node -> JobType ( ) == Job :: TYPE_STORK )		3118196	0					
ANR	3118779	Condition	node -> JobType ( ) == Job :: TYPE_STORK	3582:16:108668:108701	3118196	0	True				
ANR	3118780	EqualityExpression	node -> JobType ( ) == Job :: TYPE_STORK		3118196	0		==			
ANR	3118781	CallExpression	node -> JobType ( )		3118196	0					
ANR	3118782	Callee	node -> JobType		3118196	0					
ANR	3118783	PtrMemberAccess	node -> JobType		3118196	0					
ANR	3118784	Identifier	node		3118196	0					
ANR	3118785	Identifier	JobType		3118196	1					
ANR	3118786	ArgumentList			3118196	1					
ANR	3118787	Identifier	Job :: TYPE_STORK		3118196	1					
ANR	3118788	CompoundStatement		101:53:4003:4003	3118196	1					
ANR	3118789	ExpressionStatement	node -> _submitTries ++	3583:5:108712:108732	3118196	0	True				
ANR	3118790	PostIncDecOperationExpression	node -> _submitTries ++		3118196	0					
ANR	3118791	PtrMemberAccess	node -> _submitTries		3118196	0					
ANR	3118792	Identifier	node		3118196	0					
ANR	3118793	Identifier	_submitTries		3118196	1					
ANR	3118794	IncDec	++		3118196	1					
ANR	3118795	IfStatement	if ( node -> GetNoop ( ) )		3118196	1					
ANR	3118796	Condition	node -> GetNoop ( )	3584:8:108742:108756	3118196	0	True				
ANR	3118797	CallExpression	node -> GetNoop ( )		3118196	0					
ANR	3118798	Callee	node -> GetNoop		3118196	0					
ANR	3118799	PtrMemberAccess	node -> GetNoop		3118196	0					
ANR	3118800	Identifier	node		3118196	0					
ANR	3118801	Identifier	GetNoop		3118196	1					
ANR	3118802	ArgumentList			3118196	1					
ANR	3118803	CompoundStatement		103:26:4058:4058	3118196	1					
ANR	3118804	ExpressionStatement	"submit_success = fake_condor_submit ( condorID , node -> GetJobName ( ) , node -> GetDirectory ( ) , node -> GetLogFile ( ) , node -> GetLogFileIsXml ( ) )"	3585:9:108771:108919	3118196	0	True				
ANR	3118805	AssignmentExpression	"submit_success = fake_condor_submit ( condorID , node -> GetJobName ( ) , node -> GetDirectory ( ) , node -> GetLogFile ( ) , node -> GetLogFileIsXml ( ) )"		3118196	0		=			
ANR	3118806	Identifier	submit_success		3118196	0					
ANR	3118807	CallExpression	"fake_condor_submit ( condorID , node -> GetJobName ( ) , node -> GetDirectory ( ) , node -> GetLogFile ( ) , node -> GetLogFileIsXml ( ) )"		3118196	1					
ANR	3118808	Callee	fake_condor_submit		3118196	0					
ANR	3118809	Identifier	fake_condor_submit		3118196	0					
ANR	3118810	ArgumentList	condorID		3118196	1					
ANR	3118811	Argument	condorID		3118196	0					
ANR	3118812	Identifier	condorID		3118196	0					
ANR	3118813	Argument	node -> GetJobName ( )		3118196	1					
ANR	3118814	CallExpression	node -> GetJobName ( )		3118196	0					
ANR	3118815	Callee	node -> GetJobName		3118196	0					
ANR	3118816	PtrMemberAccess	node -> GetJobName		3118196	0					
ANR	3118817	Identifier	node		3118196	0					
ANR	3118818	Identifier	GetJobName		3118196	1					
ANR	3118819	ArgumentList			3118196	1					
ANR	3118820	Argument	node -> GetDirectory ( )		3118196	2					
ANR	3118821	CallExpression	node -> GetDirectory ( )		3118196	0					
ANR	3118822	Callee	node -> GetDirectory		3118196	0					
ANR	3118823	PtrMemberAccess	node -> GetDirectory		3118196	0					
ANR	3118824	Identifier	node		3118196	0					
ANR	3118825	Identifier	GetDirectory		3118196	1					
ANR	3118826	ArgumentList			3118196	1					
ANR	3118827	Argument	node -> GetLogFile ( )		3118196	3					
ANR	3118828	CallExpression	node -> GetLogFile ( )		3118196	0					
ANR	3118829	Callee	node -> GetLogFile		3118196	0					
ANR	3118830	PtrMemberAccess	node -> GetLogFile		3118196	0					
ANR	3118831	Identifier	node		3118196	0					
ANR	3118832	Identifier	GetLogFile		3118196	1					
ANR	3118833	ArgumentList			3118196	1					
ANR	3118834	Argument	node -> GetLogFileIsXml ( )		3118196	4					
ANR	3118835	CallExpression	node -> GetLogFileIsXml ( )		3118196	0					
ANR	3118836	Callee	node -> GetLogFileIsXml		3118196	0					
ANR	3118837	PtrMemberAccess	node -> GetLogFileIsXml		3118196	0					
ANR	3118838	Identifier	node		3118196	0					
ANR	3118839	Identifier	GetLogFileIsXml		3118196	1					
ANR	3118840	ArgumentList			3118196	1					
ANR	3118841	ElseStatement	else		3118196	0					
ANR	3118842	CompoundStatement		108:10:4230:4230	3118196	0					
ANR	3118843	ExpressionStatement	"submit_success = stork_submit ( dm , cmd_file . Value ( ) , condorID , node -> GetJobName ( ) , node -> GetDirectory ( ) )"	3590:9:108943:109057	3118196	0	True				
ANR	3118844	AssignmentExpression	"submit_success = stork_submit ( dm , cmd_file . Value ( ) , condorID , node -> GetJobName ( ) , node -> GetDirectory ( ) )"		3118196	0		=			
ANR	3118845	Identifier	submit_success		3118196	0					
ANR	3118846	CallExpression	"stork_submit ( dm , cmd_file . Value ( ) , condorID , node -> GetJobName ( ) , node -> GetDirectory ( ) )"		3118196	1					
ANR	3118847	Callee	stork_submit		3118196	0					
ANR	3118848	Identifier	stork_submit		3118196	0					
ANR	3118849	ArgumentList	dm		3118196	1					
ANR	3118850	Argument	dm		3118196	0					
ANR	3118851	Identifier	dm		3118196	0					
ANR	3118852	Argument	cmd_file . Value ( )		3118196	1					
ANR	3118853	CallExpression	cmd_file . Value ( )		3118196	0					
ANR	3118854	Callee	cmd_file . Value		3118196	0					
ANR	3118855	MemberAccess	cmd_file . Value		3118196	0					
ANR	3118856	Identifier	cmd_file		3118196	0					
ANR	3118857	Identifier	Value		3118196	1					
ANR	3118858	ArgumentList			3118196	1					
ANR	3118859	Argument	condorID		3118196	2					
ANR	3118860	Identifier	condorID		3118196	0					
ANR	3118861	Argument	node -> GetJobName ( )		3118196	3					
ANR	3118862	CallExpression	node -> GetJobName ( )		3118196	0					
ANR	3118863	Callee	node -> GetJobName		3118196	0					
ANR	3118864	PtrMemberAccess	node -> GetJobName		3118196	0					
ANR	3118865	Identifier	node		3118196	0					
ANR	3118866	Identifier	GetJobName		3118196	1					
ANR	3118867	ArgumentList			3118196	1					
ANR	3118868	Argument	node -> GetDirectory ( )		3118196	4					
ANR	3118869	CallExpression	node -> GetDirectory ( )		3118196	0					
ANR	3118870	Callee	node -> GetDirectory		3118196	0					
ANR	3118871	PtrMemberAccess	node -> GetDirectory		3118196	0					
ANR	3118872	Identifier	node		3118196	0					
ANR	3118873	Identifier	GetDirectory		3118196	1					
ANR	3118874	ArgumentList			3118196	1					
ANR	3118875	ElseStatement	else		3118196	0					
ANR	3118876	CompoundStatement		112:12:4374:4374	3118196	0					
ANR	3118877	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""Illegal job type: %d\\n"" , node -> JobType ( ) )"	3594:6:109084:109160	3118196	0	True				
ANR	3118878	CallExpression	"debug_printf ( DEBUG_QUIET , ""Illegal job type: %d\\n"" , node -> JobType ( ) )"		3118196	0					
ANR	3118879	Callee	debug_printf		3118196	0					
ANR	3118880	Identifier	debug_printf		3118196	0					
ANR	3118881	ArgumentList	DEBUG_QUIET		3118196	1					
ANR	3118882	Argument	DEBUG_QUIET		3118196	0					
ANR	3118883	Identifier	DEBUG_QUIET		3118196	0					
ANR	3118884	Argument	"""Illegal job type: %d\\n"""		3118196	1					
ANR	3118885	PrimaryExpression	"""Illegal job type: %d\\n"""		3118196	0					
ANR	3118886	Argument	node -> JobType ( )		3118196	2					
ANR	3118887	CallExpression	node -> JobType ( )		3118196	0					
ANR	3118888	Callee	node -> JobType		3118196	0					
ANR	3118889	PtrMemberAccess	node -> JobType		3118196	0					
ANR	3118890	Identifier	node		3118196	0					
ANR	3118891	Identifier	JobType		3118196	1					
ANR	3118892	ArgumentList			3118196	1					
ANR	3118893	ExpressionStatement	ASSERT ( false )	3596:3:109165:109178	3118196	1	True				
ANR	3118894	CallExpression	ASSERT ( false )		3118196	0					
ANR	3118895	Callee	ASSERT		3118196	0					
ANR	3118896	Identifier	ASSERT		3118196	0					
ANR	3118897	ArgumentList	false		3118196	1					
ANR	3118898	Argument	false		3118196	0					
ANR	3118899	Identifier	false		3118196	0					
ANR	3118900	ExpressionStatement	result = submit_success ? SUBMIT_RESULT_OK : SUBMIT_RESULT_FAILED	3599:2:109187:109252	3118196	4	True				
ANR	3118901	AssignmentExpression	result = submit_success ? SUBMIT_RESULT_OK : SUBMIT_RESULT_FAILED		3118196	0		=			
ANR	3118902	Identifier	result		3118196	0					
ANR	3118903	ConditionalExpression	submit_success ? SUBMIT_RESULT_OK : SUBMIT_RESULT_FAILED		3118196	1					
ANR	3118904	Condition	submit_success		3118196	0					
ANR	3118905	Identifier	submit_success		3118196	0					
ANR	3118906	Identifier	SUBMIT_RESULT_OK		3118196	1					
ANR	3118907	Identifier	SUBMIT_RESULT_FAILED		3118196	2					
ANR	3118908	ReturnStatement	return result ;	3602:1:109259:109272	3118196	7	True				
ANR	3118909	Identifier	result		3118196	0					
ANR	3118910	ReturnType	Dag :: submit_result_t		3118196	1					
ANR	3118911	Identifier	Dag :: SubmitNodeJob		3118196	2					
ANR	3118912	ParameterList	"const Dagman & dm , Job * node , CondorID & condorID"		3118196	3					
ANR	3118913	Parameter	const Dagman & dm	3481:20:104651:104666	3118196	0	True				
ANR	3118914	ParameterType	const Dagman &		3118196	0					
ANR	3118915	Identifier	dm		3118196	1					
ANR	3118916	Parameter	Job * node	3481:38:104669:104677	3118196	1	True				
ANR	3118917	ParameterType	Job *		3118196	0					
ANR	3118918	Identifier	node		3118196	1					
ANR	3118919	Parameter	CondorID & condorID	3481:49:104680:104697	3118196	2	True				
ANR	3118920	ParameterType	CondorID &		3118196	0					
ANR	3118921	Identifier	condorID		3118196	1					
ANR	3118922	CFGEntryNode	ENTRY		3118196		True				
ANR	3118923	CFGExitNode	EXIT		3118196		True				
ANR	3118924	Symbol	node -> CheckForLogFile		3118196						
ANR	3118925	Symbol	_submitDagDeepOpts -> priority		3118196						
ANR	3118926	Symbol	SUBMIT_RESULT_OK		3118196						
ANR	3118927	Symbol	dm		3118196						
ANR	3118928	Symbol	DEBUG_NORMAL		3118196						
ANR	3118929	Symbol	_condorLogRdr		3118196						
ANR	3118930	Symbol	node -> GetNoop		3118196						
ANR	3118931	Symbol	Job :: TYPE_CONDOR		3118196						
ANR	3118932	Symbol	ParentListString		3118196						
ANR	3118933	Symbol	DEBUG_QUIET		3118196						
ANR	3118934	Symbol	* GetEventIDHash		3118196						
ANR	3118935	Symbol	cmd_file . Value		3118196						
ANR	3118936	Symbol	fake_condor_submit		3118196						
ANR	3118937	Symbol	node -> JobType		3118196						
ANR	3118938	Symbol	submit_success		3118196						
ANR	3118939	Symbol	"GetEventIDHash ( node -> GetNoop ( ) , node -> JobType ( ) ) -> remove"		3118196						
ANR	3118940	Symbol	* node		3118196						
ANR	3118941	Symbol	id		3118196						
ANR	3118942	Symbol	_nfsLogIsError		3118196						
ANR	3118943	Symbol	node -> JobTypeString		3118196						
ANR	3118944	Symbol	NULL		3118196						
ANR	3118945	Symbol	JOB_ERROR_TEXT_MAXLEN		3118196						
ANR	3118946	Symbol	GetIndexID		3118196						
ANR	3118947	Symbol	Job :: TYPE_STORK		3118196						
ANR	3118948	Symbol	node -> GetJobName		3118196						
ANR	3118949	Symbol	_defaultCondorId		3118196						
ANR	3118950	Symbol	_submitDagDeepOpts		3118196						
ANR	3118951	Symbol	node		3118196						
ANR	3118952	Symbol	JobIsNoop		3118196						
ANR	3118953	Symbol	node -> _Status		3118196						
ANR	3118954	Symbol	condorID		3118196						
ANR	3118955	Symbol	node -> _CondorID . _cluster		3118196						
ANR	3118956	Symbol	node -> _hasNodePriority		3118196						
ANR	3118957	Symbol	node -> GetRetries		3118196						
ANR	3118958	Symbol	_recovery		3118196						
ANR	3118959	Symbol	logFile		3118196						
ANR	3118960	Symbol	_numNodesFailed		3118196						
ANR	3118961	Symbol	node -> _nodePriority		3118196						
ANR	3118962	Symbol	node -> UsingDefaultLog		3118196						
ANR	3118963	Symbol	_storkLogRdr		3118196						
ANR	3118964	Symbol	node -> _CondorID		3118196						
ANR	3118965	Symbol	parents		3118196						
ANR	3118966	Symbol	node -> varValsFromDag		3118196						
ANR	3118967	Symbol	isRetry		3118196						
ANR	3118968	Symbol	node -> _submitTries		3118196						
ANR	3118969	Symbol	cmd_file		3118196						
ANR	3118970	Symbol	node -> GetLogFile		3118196						
ANR	3118971	Symbol	_generateSubdagSubmits		3118196						
ANR	3118972	Symbol	result		3118196						
ANR	3118973	Symbol	stork_submit		3118196						
ANR	3118974	Symbol	removeResult		3118196						
ANR	3118975	Symbol	* _submitDagDeepOpts		3118196						
ANR	3118976	Symbol	SUBMIT_RESULT_NO_SUBMIT		3118196						
ANR	3118977	Symbol	node -> GetDagFile		3118196						
ANR	3118978	Symbol	node -> GetDirectory		3118196						
ANR	3118979	Symbol	ProhibitMultiJobs		3118196						
ANR	3118980	Symbol	dm . submit_delay		3118196						
ANR	3118981	Symbol	_defaultNodeLog		3118196						
ANR	3118982	Symbol	Job :: STATUS_ERROR		3118196						
ANR	3118983	Symbol	false		3118196						
ANR	3118984	Symbol	SUBMIT_RESULT_FAILED		3118196						
ANR	3118985	Symbol	_defaultCondorId . _cluster		3118196						
ANR	3118986	Symbol	runSubmitDag		3118196						
ANR	3118987	Symbol	node -> error_text		3118196						
ANR	3118988	Symbol	node -> MonitorLogFile		3118196						
ANR	3118989	Symbol	_allowLogError		3118196						
ANR	3118990	Symbol	node -> varNamesFromDag		3118196						
ANR	3118991	Symbol	condor_submit		3118196						
ANR	3118992	Symbol	GetEventIDHash		3118196						
ANR	3118993	Symbol	node -> GetCmdFile		3118196						
ANR	3118994	Symbol	node -> GetLogFileIsXml		3118196						
ANR	3118995	Function	Dag :: ProcessSuccessfulSubmit	3606:0:109355:110837							
ANR	3118996	FunctionDef	"Dag :: ProcessSuccessfulSubmit (Job * node , const CondorID & condorID)"		3118995	0					
ANR	3118997	CompoundStatement		3608:0:109428:110837	3118995	0					
ANR	3118998	ExpressionStatement	_nextSubmitTime = 0	3611:1:109538:109557	3118995	0	True				
ANR	3118999	AssignmentExpression	_nextSubmitTime = 0		3118995	0		=			
ANR	3119000	Identifier	_nextSubmitTime		3118995	0					
ANR	3119001	PrimaryExpression	0		3118995	1					
ANR	3119002	ExpressionStatement	_nextSubmitDelay = 1	3612:1:109560:109580	3118995	1	True				
ANR	3119003	AssignmentExpression	_nextSubmitDelay = 1		3118995	0		=			
ANR	3119004	Identifier	_nextSubmitDelay		3118995	0					
ANR	3119005	PrimaryExpression	1		3118995	1					
ANR	3119006	IfStatement	if ( _submitQ -> enqueue ( node ) == - 1 )		3118995	2					
ANR	3119007	Condition	_submitQ -> enqueue ( node ) == - 1	3616:8:109724:109754	3118995	0	True				
ANR	3119008	EqualityExpression	_submitQ -> enqueue ( node ) == - 1		3118995	0		==			
ANR	3119009	CallExpression	_submitQ -> enqueue ( node )		3118995	0					
ANR	3119010	Callee	_submitQ -> enqueue		3118995	0					
ANR	3119011	PtrMemberAccess	_submitQ -> enqueue		3118995	0					
ANR	3119012	Identifier	_submitQ		3118995	0					
ANR	3119013	Identifier	enqueue		3118995	1					
ANR	3119014	ArgumentList	node		3118995	1					
ANR	3119015	Argument	node		3118995	0					
ANR	3119016	Identifier	node		3118995	0					
ANR	3119017	UnaryOperationExpression	- 1		3118995	1					
ANR	3119018	UnaryOperator	-		3118995	0					
ANR	3119019	PrimaryExpression	1		3118995	1					
ANR	3119020	CompoundStatement		9:42:329:329	3118995	1					
ANR	3119021	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""ERROR: _submitQ->enqueue() failed!\\n"" )"	3617:2:109762:109829	3118995	0	True				
ANR	3119022	CallExpression	"debug_printf ( DEBUG_QUIET , ""ERROR: _submitQ->enqueue() failed!\\n"" )"		3118995	0					
ANR	3119023	Callee	debug_printf		3118995	0					
ANR	3119024	Identifier	debug_printf		3118995	0					
ANR	3119025	ArgumentList	DEBUG_QUIET		3118995	1					
ANR	3119026	Argument	DEBUG_QUIET		3118995	0					
ANR	3119027	Identifier	DEBUG_QUIET		3118995	0					
ANR	3119028	Argument	"""ERROR: _submitQ->enqueue() failed!\\n"""		3118995	1					
ANR	3119029	PrimaryExpression	"""ERROR: _submitQ->enqueue() failed!\\n"""		3118995	0					
ANR	3119030	ExpressionStatement	node -> _Status = Job :: STATUS_SUBMITTED	3620:4:109839:109876	3118995	3	True				
ANR	3119031	AssignmentExpression	node -> _Status = Job :: STATUS_SUBMITTED		3118995	0		=			
ANR	3119032	PtrMemberAccess	node -> _Status		3118995	0					
ANR	3119033	Identifier	node		3118995	0					
ANR	3119034	Identifier	_Status		3118995	1					
ANR	3119035	Identifier	Job :: STATUS_SUBMITTED		3118995	1					
ANR	3119036	ExpressionStatement	"UpdateJobCounts ( node , 1 )"	3626:1:110118:110144	3118995	4	True				
ANR	3119037	CallExpression	"UpdateJobCounts ( node , 1 )"		3118995	0					
ANR	3119038	Callee	UpdateJobCounts		3118995	0					
ANR	3119039	Identifier	UpdateJobCounts		3118995	0					
ANR	3119040	ArgumentList	node		3118995	1					
ANR	3119041	Argument	node		3118995	0					
ANR	3119042	Identifier	node		3118995	0					
ANR	3119043	Argument	1		3118995	1					
ANR	3119044	PrimaryExpression	1		3118995	0					
ANR	3119045	ExpressionStatement	node -> _CondorID = condorID	3633:1:110426:110452	3118995	5	True				
ANR	3119046	AssignmentExpression	node -> _CondorID = condorID		3118995	0		=			
ANR	3119047	PtrMemberAccess	node -> _CondorID		3118995	0					
ANR	3119048	Identifier	node		3118995	0					
ANR	3119049	Identifier	_CondorID		3118995	1					
ANR	3119050	Identifier	condorID		3118995	1					
ANR	3119051	ExpressionStatement	ASSERT ( JobIsNoop ( node -> _CondorID ) == node -> GetNoop ( ) )	3634:1:110455:110512	3118995	6	True				
ANR	3119052	CallExpression	ASSERT ( JobIsNoop ( node -> _CondorID ) == node -> GetNoop ( ) )		3118995	0					
ANR	3119053	Callee	ASSERT		3118995	0					
ANR	3119054	Identifier	ASSERT		3118995	0					
ANR	3119055	ArgumentList	JobIsNoop ( node -> _CondorID ) == node -> GetNoop ( )		3118995	1					
ANR	3119056	Argument	JobIsNoop ( node -> _CondorID ) == node -> GetNoop ( )		3118995	0					
ANR	3119057	EqualityExpression	JobIsNoop ( node -> _CondorID ) == node -> GetNoop ( )		3118995	0		==			
ANR	3119058	CallExpression	JobIsNoop ( node -> _CondorID )		3118995	0					
ANR	3119059	Callee	JobIsNoop		3118995	0					
ANR	3119060	Identifier	JobIsNoop		3118995	0					
ANR	3119061	ArgumentList	node -> _CondorID		3118995	1					
ANR	3119062	Argument	node -> _CondorID		3118995	0					
ANR	3119063	PtrMemberAccess	node -> _CondorID		3118995	0					
ANR	3119064	Identifier	node		3118995	0					
ANR	3119065	Identifier	_CondorID		3118995	1					
ANR	3119066	CallExpression	node -> GetNoop ( )		3118995	1					
ANR	3119067	Callee	node -> GetNoop		3118995	0					
ANR	3119068	PtrMemberAccess	node -> GetNoop		3118995	0					
ANR	3119069	Identifier	node		3118995	0					
ANR	3119070	Identifier	GetNoop		3118995	1					
ANR	3119071	ArgumentList			3118995	1					
ANR	3119072	IdentifierDeclStatement	int id = GetIndexID ( node -> _CondorID ) ;	3635:1:110515:110553	3118995	7	True				
ANR	3119073	IdentifierDecl	id = GetIndexID ( node -> _CondorID )		3118995	0					
ANR	3119074	IdentifierDeclType	int		3118995	0					
ANR	3119075	Identifier	id		3118995	1					
ANR	3119076	AssignmentExpression	id = GetIndexID ( node -> _CondorID )		3118995	2		=			
ANR	3119077	Identifier	id		3118995	0					
ANR	3119078	CallExpression	GetIndexID ( node -> _CondorID )		3118995	1					
ANR	3119079	Callee	GetIndexID		3118995	0					
ANR	3119080	Identifier	GetIndexID		3118995	0					
ANR	3119081	ArgumentList	node -> _CondorID		3118995	1					
ANR	3119082	Argument	node -> _CondorID		3118995	0					
ANR	3119083	PtrMemberAccess	node -> _CondorID		3118995	0					
ANR	3119084	Identifier	node		3118995	0					
ANR	3119085	Identifier	_CondorID		3118995	1					
ANR	3119086	IdentifierDeclStatement	"int insertResult = GetEventIDHash ( node -> GetNoop ( ) , node -> JobType ( ) ) -> insert ( id , node ) ;"	3636:1:110556:110650	3118995	8	True				
ANR	3119087	IdentifierDecl	"insertResult = GetEventIDHash ( node -> GetNoop ( ) , node -> JobType ( ) ) -> insert ( id , node )"		3118995	0					
ANR	3119088	IdentifierDeclType	int		3118995	0					
ANR	3119089	Identifier	insertResult		3118995	1					
ANR	3119090	AssignmentExpression	"insertResult = GetEventIDHash ( node -> GetNoop ( ) , node -> JobType ( ) ) -> insert ( id , node )"		3118995	2		=			
ANR	3119091	Identifier	insertResult		3118995	0					
ANR	3119092	CallExpression	"GetEventIDHash ( node -> GetNoop ( ) , node -> JobType ( ) ) -> insert ( id , node )"		3118995	1					
ANR	3119093	Callee	"GetEventIDHash ( node -> GetNoop ( ) , node -> JobType ( ) ) -> insert"		3118995	0					
ANR	3119094	PtrMemberAccess	"GetEventIDHash ( node -> GetNoop ( ) , node -> JobType ( ) ) -> insert"		3118995	0					
ANR	3119095	CallExpression	"GetEventIDHash ( node -> GetNoop ( ) , node -> JobType ( ) )"		3118995	0					
ANR	3119096	Callee	GetEventIDHash		3118995	0					
ANR	3119097	Identifier	GetEventIDHash		3118995	0					
ANR	3119098	ArgumentList	node -> GetNoop ( )		3118995	1					
ANR	3119099	Argument	node -> GetNoop ( )		3118995	0					
ANR	3119100	CallExpression	node -> GetNoop ( )		3118995	0					
ANR	3119101	Callee	node -> GetNoop		3118995	0					
ANR	3119102	PtrMemberAccess	node -> GetNoop		3118995	0					
ANR	3119103	Identifier	node		3118995	0					
ANR	3119104	Identifier	GetNoop		3118995	1					
ANR	3119105	ArgumentList			3118995	1					
ANR	3119106	Argument	node -> JobType ( )		3118995	1					
ANR	3119107	CallExpression	node -> JobType ( )		3118995	0					
ANR	3119108	Callee	node -> JobType		3118995	0					
ANR	3119109	PtrMemberAccess	node -> JobType		3118995	0					
ANR	3119110	Identifier	node		3118995	0					
ANR	3119111	Identifier	JobType		3118995	1					
ANR	3119112	ArgumentList			3118995	1					
ANR	3119113	Identifier	insert		3118995	1					
ANR	3119114	ArgumentList	id		3118995	1					
ANR	3119115	Argument	id		3118995	0					
ANR	3119116	Identifier	id		3118995	0					
ANR	3119117	Argument	node		3118995	1					
ANR	3119118	Identifier	node		3118995	0					
ANR	3119119	ExpressionStatement	ASSERT ( insertResult == 0 )	3638:1:110653:110680	3118995	9	True				
ANR	3119120	CallExpression	ASSERT ( insertResult == 0 )		3118995	0					
ANR	3119121	Callee	ASSERT		3118995	0					
ANR	3119122	Identifier	ASSERT		3118995	0					
ANR	3119123	ArgumentList	insertResult == 0		3118995	1					
ANR	3119124	Argument	insertResult == 0		3118995	0					
ANR	3119125	EqualityExpression	insertResult == 0		3118995	0		==			
ANR	3119126	Identifier	insertResult		3118995	0					
ANR	3119127	PrimaryExpression	0		3118995	1					
ANR	3119128	ExpressionStatement	"debug_printf ( DEBUG_VERBOSE , ""\\tassigned %s ID (%d.%d.%d)\\n"" , node -> JobTypeString ( ) , condorID . _cluster , condorID . _proc , condorID . _subproc )"	3640:1:110684:110835	3118995	10	True				
ANR	3119129	CallExpression	"debug_printf ( DEBUG_VERBOSE , ""\\tassigned %s ID (%d.%d.%d)\\n"" , node -> JobTypeString ( ) , condorID . _cluster , condorID . _proc , condorID . _subproc )"		3118995	0					
ANR	3119130	Callee	debug_printf		3118995	0					
ANR	3119131	Identifier	debug_printf		3118995	0					
ANR	3119132	ArgumentList	DEBUG_VERBOSE		3118995	1					
ANR	3119133	Argument	DEBUG_VERBOSE		3118995	0					
ANR	3119134	Identifier	DEBUG_VERBOSE		3118995	0					
ANR	3119135	Argument	"""\\tassigned %s ID (%d.%d.%d)\\n"""		3118995	1					
ANR	3119136	PrimaryExpression	"""\\tassigned %s ID (%d.%d.%d)\\n"""		3118995	0					
ANR	3119137	Argument	node -> JobTypeString ( )		3118995	2					
ANR	3119138	CallExpression	node -> JobTypeString ( )		3118995	0					
ANR	3119139	Callee	node -> JobTypeString		3118995	0					
ANR	3119140	PtrMemberAccess	node -> JobTypeString		3118995	0					
ANR	3119141	Identifier	node		3118995	0					
ANR	3119142	Identifier	JobTypeString		3118995	1					
ANR	3119143	ArgumentList			3118995	1					
ANR	3119144	Argument	condorID . _cluster		3118995	3					
ANR	3119145	MemberAccess	condorID . _cluster		3118995	0					
ANR	3119146	Identifier	condorID		3118995	0					
ANR	3119147	Identifier	_cluster		3118995	1					
ANR	3119148	Argument	condorID . _proc		3118995	4					
ANR	3119149	MemberAccess	condorID . _proc		3118995	0					
ANR	3119150	Identifier	condorID		3118995	0					
ANR	3119151	Identifier	_proc		3118995	1					
ANR	3119152	Argument	condorID . _subproc		3118995	5					
ANR	3119153	MemberAccess	condorID . _subproc		3118995	0					
ANR	3119154	Identifier	condorID		3118995	0					
ANR	3119155	Identifier	_subproc		3118995	1					
ANR	3119156	ReturnType	void		3118995	1					
ANR	3119157	Identifier	Dag :: ProcessSuccessfulSubmit		3118995	2					
ANR	3119158	ParameterList	"Job * node , const CondorID & condorID"		3118995	3					
ANR	3119159	Parameter	Job * node	3607:30:109390:109398	3118995	0	True				
ANR	3119160	ParameterType	Job *		3118995	0					
ANR	3119161	Identifier	node		3118995	1					
ANR	3119162	Parameter	const CondorID & condorID	3607:41:109401:109424	3118995	1	True				
ANR	3119163	ParameterType	const CondorID &		3118995	0					
ANR	3119164	Identifier	condorID		3118995	1					
ANR	3119165	CFGEntryNode	ENTRY		3118995		True				
ANR	3119166	CFGExitNode	EXIT		3118995		True				
ANR	3119167	Symbol	_submitQ		3118995						
ANR	3119168	Symbol	node -> GetNoop		3118995						
ANR	3119169	Symbol	DEBUG_QUIET		3118995						
ANR	3119170	Symbol	* GetEventIDHash		3118995						
ANR	3119171	Symbol	condorID . _proc		3118995						
ANR	3119172	Symbol	node -> JobType		3118995						
ANR	3119173	Symbol	_submitQ -> enqueue		3118995						
ANR	3119174	Symbol	* node		3118995						
ANR	3119175	Symbol	id		3118995						
ANR	3119176	Symbol	insertResult		3118995						
ANR	3119177	Symbol	condorID . _cluster		3118995						
ANR	3119178	Symbol	DEBUG_VERBOSE		3118995						
ANR	3119179	Symbol	node -> JobTypeString		3118995						
ANR	3119180	Symbol	GetIndexID		3118995						
ANR	3119181	Symbol	* _submitQ		3118995						
ANR	3119182	Symbol	condorID . _subproc		3118995						
ANR	3119183	Symbol	_nextSubmitTime		3118995						
ANR	3119184	Symbol	node		3118995						
ANR	3119185	Symbol	node -> _Status		3118995						
ANR	3119186	Symbol	JobIsNoop		3118995						
ANR	3119187	Symbol	condorID		3118995						
ANR	3119188	Symbol	_nextSubmitDelay		3118995						
ANR	3119189	Symbol	Job :: STATUS_SUBMITTED		3118995						
ANR	3119190	Symbol	"GetEventIDHash ( node -> GetNoop ( ) , node -> JobType ( ) ) -> insert"		3118995						
ANR	3119191	Symbol	GetEventIDHash		3118995						
ANR	3119192	Symbol	node -> _CondorID		3118995						
ANR	3119193	Function	Dag :: ProcessFailedSubmit	3646:0:110918:112914							
ANR	3119194	FunctionDef	"Dag :: ProcessFailedSubmit (Job * node , int max_submit_attempts)"		3119193	0					
ANR	3119195	CompoundStatement		3648:0:110986:112914	3119193	0					
ANR	3119196	ExpressionStatement	ASSERT ( _isSplice == false )	3651:1:111087:111115	3119193	0	True				
ANR	3119197	CallExpression	ASSERT ( _isSplice == false )		3119193	0					
ANR	3119198	Callee	ASSERT		3119193	0					
ANR	3119199	Identifier	ASSERT		3119193	0					
ANR	3119200	ArgumentList	_isSplice == false		3119193	1					
ANR	3119201	Argument	_isSplice == false		3119193	0					
ANR	3119202	EqualityExpression	_isSplice == false		3119193	0		==			
ANR	3119203	Identifier	_isSplice		3119193	0					
ANR	3119204	Identifier	false		3119193	1					
ANR	3119205	ExpressionStatement	_jobstateLog . WriteSubmitFailure ( node )	3653:1:111119:111158	3119193	1	True				
ANR	3119206	CallExpression	_jobstateLog . WriteSubmitFailure ( node )		3119193	0					
ANR	3119207	Callee	_jobstateLog . WriteSubmitFailure		3119193	0					
ANR	3119208	MemberAccess	_jobstateLog . WriteSubmitFailure		3119193	0					
ANR	3119209	Identifier	_jobstateLog		3119193	0					
ANR	3119210	Identifier	WriteSubmitFailure		3119193	1					
ANR	3119211	ArgumentList	node		3119193	1					
ANR	3119212	Argument	node		3119193	0					
ANR	3119213	Identifier	node		3119193	0					
ANR	3119214	IdentifierDeclStatement	int thisSubmitDelay = _nextSubmitDelay ;	3656:1:111216:111254	3119193	2	True				
ANR	3119215	IdentifierDecl	thisSubmitDelay = _nextSubmitDelay		3119193	0					
ANR	3119216	IdentifierDeclType	int		3119193	0					
ANR	3119217	Identifier	thisSubmitDelay		3119193	1					
ANR	3119218	AssignmentExpression	thisSubmitDelay = _nextSubmitDelay		3119193	2		=			
ANR	3119219	Identifier	_nextSubmitDelay		3119193	0					
ANR	3119220	Identifier	_nextSubmitDelay		3119193	1					
ANR	3119221	ExpressionStatement	_nextSubmitTime = time ( NULL ) + thisSubmitDelay	3657:1:111257:111303	3119193	3	True				
ANR	3119222	AssignmentExpression	_nextSubmitTime = time ( NULL ) + thisSubmitDelay		3119193	0		=			
ANR	3119223	Identifier	_nextSubmitTime		3119193	0					
ANR	3119224	AdditiveExpression	time ( NULL ) + thisSubmitDelay		3119193	1		+			
ANR	3119225	CallExpression	time ( NULL )		3119193	0					
ANR	3119226	Callee	time		3119193	0					
ANR	3119227	Identifier	time		3119193	0					
ANR	3119228	ArgumentList	NULL		3119193	1					
ANR	3119229	Argument	NULL		3119193	0					
ANR	3119230	Identifier	NULL		3119193	0					
ANR	3119231	Identifier	thisSubmitDelay		3119193	1					
ANR	3119232	ExpressionStatement	_nextSubmitDelay *= 2	3658:1:111306:111327	3119193	4	True				
ANR	3119233	AssignmentExpression	_nextSubmitDelay *= 2		3119193	0		*=			
ANR	3119234	Identifier	_nextSubmitDelay		3119193	0					
ANR	3119235	PrimaryExpression	2		3119193	1					
ANR	3119236	ExpressionStatement	"( void ) node -> UnmonitorLogFile ( _condorLogRdr , _storkLogRdr )"	3660:1:111331:111390	3119193	5	True				
ANR	3119237	CastExpression	"( void ) node -> UnmonitorLogFile ( _condorLogRdr , _storkLogRdr )"		3119193	0					
ANR	3119238	CastTarget	void		3119193	0					
ANR	3119239	CallExpression	"node -> UnmonitorLogFile ( _condorLogRdr , _storkLogRdr )"		3119193	1					
ANR	3119240	Callee	node -> UnmonitorLogFile		3119193	0					
ANR	3119241	PtrMemberAccess	node -> UnmonitorLogFile		3119193	0					
ANR	3119242	Identifier	node		3119193	0					
ANR	3119243	Identifier	UnmonitorLogFile		3119193	1					
ANR	3119244	ArgumentList	_condorLogRdr		3119193	1					
ANR	3119245	Argument	_condorLogRdr		3119193	0					
ANR	3119246	Identifier	_condorLogRdr		3119193	0					
ANR	3119247	Argument	_storkLogRdr		3119193	1					
ANR	3119248	Identifier	_storkLogRdr		3119193	0					
ANR	3119249	IfStatement	if ( node -> _submitTries >= max_submit_attempts )		3119193	6					
ANR	3119250	Condition	node -> _submitTries >= max_submit_attempts	3662:6:111399:111439	3119193	0	True				
ANR	3119251	RelationalExpression	node -> _submitTries >= max_submit_attempts		3119193	0		>=			
ANR	3119252	PtrMemberAccess	node -> _submitTries		3119193	0					
ANR	3119253	Identifier	node		3119193	0					
ANR	3119254	Identifier	_submitTries		3119193	1					
ANR	3119255	Identifier	max_submit_attempts		3119193	1					
ANR	3119256	CompoundStatement		15:50:456:456	3119193	1					
ANR	3119257	ExpressionStatement	_nextSubmitTime = 0	3667:2:111592:111611	3119193	0	True				
ANR	3119258	AssignmentExpression	_nextSubmitTime = 0		3119193	0		=			
ANR	3119259	Identifier	_nextSubmitTime		3119193	0					
ANR	3119260	PrimaryExpression	0		3119193	1					
ANR	3119261	ExpressionStatement	_nextSubmitDelay = 1	3668:2:111615:111635	3119193	1	True				
ANR	3119262	AssignmentExpression	_nextSubmitDelay = 1		3119193	0		=			
ANR	3119263	Identifier	_nextSubmitDelay		3119193	0					
ANR	3119264	PrimaryExpression	1		3119193	1					
ANR	3119265	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""Job submit failed after %d tr%s.\\n"" , node -> _submitTries , node -> _submitTries == 1 ? ""y"" : ""ies"" )"	3670:2:111640:111768	3119193	2	True				
ANR	3119266	CallExpression	"debug_printf ( DEBUG_QUIET , ""Job submit failed after %d tr%s.\\n"" , node -> _submitTries , node -> _submitTries == 1 ? ""y"" : ""ies"" )"		3119193	0					
ANR	3119267	Callee	debug_printf		3119193	0					
ANR	3119268	Identifier	debug_printf		3119193	0					
ANR	3119269	ArgumentList	DEBUG_QUIET		3119193	1					
ANR	3119270	Argument	DEBUG_QUIET		3119193	0					
ANR	3119271	Identifier	DEBUG_QUIET		3119193	0					
ANR	3119272	Argument	"""Job submit failed after %d tr%s.\\n"""		3119193	1					
ANR	3119273	PrimaryExpression	"""Job submit failed after %d tr%s.\\n"""		3119193	0					
ANR	3119274	Argument	node -> _submitTries		3119193	2					
ANR	3119275	PtrMemberAccess	node -> _submitTries		3119193	0					
ANR	3119276	Identifier	node		3119193	0					
ANR	3119277	Identifier	_submitTries		3119193	1					
ANR	3119278	Argument	"node -> _submitTries == 1 ? ""y"" : ""ies"""		3119193	3					
ANR	3119279	ConditionalExpression	"node -> _submitTries == 1 ? ""y"" : ""ies"""		3119193	0					
ANR	3119280	Condition	node -> _submitTries == 1		3119193	0					
ANR	3119281	EqualityExpression	node -> _submitTries == 1		3119193	0		==			
ANR	3119282	PtrMemberAccess	node -> _submitTries		3119193	0					
ANR	3119283	Identifier	node		3119193	0					
ANR	3119284	Identifier	_submitTries		3119193	1					
ANR	3119285	PrimaryExpression	1		3119193	1					
ANR	3119286	PrimaryExpression	"""y"""		3119193	1					
ANR	3119287	PrimaryExpression	"""ies"""		3119193	2					
ANR	3119288	ExpressionStatement	"snprintf ( node -> error_text , JOB_ERROR_TEXT_MAXLEN , ""Job submit failed"" )"	3673:2:111773:111849	3119193	3	True				
ANR	3119289	CallExpression	"snprintf ( node -> error_text , JOB_ERROR_TEXT_MAXLEN , ""Job submit failed"" )"		3119193	0					
ANR	3119290	Callee	snprintf		3119193	0					
ANR	3119291	Identifier	snprintf		3119193	0					
ANR	3119292	ArgumentList	node -> error_text		3119193	1					
ANR	3119293	Argument	node -> error_text		3119193	0					
ANR	3119294	PtrMemberAccess	node -> error_text		3119193	0					
ANR	3119295	Identifier	node		3119193	0					
ANR	3119296	Identifier	error_text		3119193	1					
ANR	3119297	Argument	JOB_ERROR_TEXT_MAXLEN		3119193	1					
ANR	3119298	Identifier	JOB_ERROR_TEXT_MAXLEN		3119193	0					
ANR	3119299	Argument	"""Job submit failed"""		3119193	2					
ANR	3119300	PrimaryExpression	"""Job submit failed"""		3119193	0					
ANR	3119301	Statement	debug_printf	3680:2:112086:112097	3119193	4	True				
ANR	3119302	Statement	(	3680:14:112098:112098	3119193	5	True				
ANR	3119303	Statement	DEBUG_NORMAL	3680:16:112100:112111	3119193	6	True				
ANR	3119304	Statement	","	3680:28:112112:112112	3119193	7	True				
ANR	3119305	Statement	"""Shortcutting node %s retries because """	3680:30:112114:112152	3119193	8	True				
ANR	3119306	Statement	"""of submit failure(s)\\n"""	3681:4:112158:112181	3119193	9	True				
ANR	3119307	Statement	","	3681:28:112182:112182	3119193	10	True				
ANR	3119308	Statement	node	3681:30:112184:112187	3119193	11	True				
ANR	3119309	Statement	->	3681:34:112188:112189	3119193	12	True				
ANR	3119310	Statement	GetJobName	3681:36:112190:112199	3119193	13	True				
ANR	3119311	Statement	(	3681:46:112200:112200	3119193	14	True				
ANR	3119312	Statement	)	3681:47:112201:112201	3119193	15	True				
ANR	3119313	Statement	)	3681:49:112203:112203	3119193	16	True				
ANR	3119314	ExpressionStatement		3681:50:112204:112204	3119193	17	True				
ANR	3119315	ExpressionStatement	node -> retries = node -> GetRetryMax ( )	3682:2:112208:112243	3119193	18	True				
ANR	3119316	AssignmentExpression	node -> retries = node -> GetRetryMax ( )		3119193	0		=			
ANR	3119317	PtrMemberAccess	node -> retries		3119193	0					
ANR	3119318	Identifier	node		3119193	0					
ANR	3119319	Identifier	retries		3119193	1					
ANR	3119320	CallExpression	node -> GetRetryMax ( )		3119193	1					
ANR	3119321	Callee	node -> GetRetryMax		3119193	0					
ANR	3119322	PtrMemberAccess	node -> GetRetryMax		3119193	0					
ANR	3119323	Identifier	node		3119193	0					
ANR	3119324	Identifier	GetRetryMax		3119193	1					
ANR	3119325	ArgumentList			3119193	1					
ANR	3119326	IfStatement	if ( node -> _scriptPost )		3119193	19					
ANR	3119327	Condition	node -> _scriptPost	3683:6:112251:112267	3119193	0	True				
ANR	3119328	PtrMemberAccess	node -> _scriptPost		3119193	0					
ANR	3119329	Identifier	node		3119193	0					
ANR	3119330	Identifier	_scriptPost		3119193	1					
ANR	3119331	CompoundStatement		36:26:1284:1284	3119193	1					
ANR	3119332	ExpressionStatement	node -> _scriptPost -> _retValJob = DAG_ERROR_CONDOR_SUBMIT_FAILED	3684:3:112276:112338	3119193	0	True				
ANR	3119333	AssignmentExpression	node -> _scriptPost -> _retValJob = DAG_ERROR_CONDOR_SUBMIT_FAILED		3119193	0		=			
ANR	3119334	PtrMemberAccess	node -> _scriptPost -> _retValJob		3119193	0					
ANR	3119335	PtrMemberAccess	node -> _scriptPost		3119193	0					
ANR	3119336	Identifier	node		3119193	0					
ANR	3119337	Identifier	_scriptPost		3119193	1					
ANR	3119338	Identifier	_retValJob		3119193	1					
ANR	3119339	Identifier	DAG_ERROR_CONDOR_SUBMIT_FAILED		3119193	1					
ANR	3119340	ExpressionStatement	"( void ) RunPostScript ( node , _alwaysRunPost , 0 )"	3685:3:112343:112389	3119193	1	True				
ANR	3119341	CastExpression	"( void ) RunPostScript ( node , _alwaysRunPost , 0 )"		3119193	0					
ANR	3119342	CastTarget	void		3119193	0					
ANR	3119343	CallExpression	"RunPostScript ( node , _alwaysRunPost , 0 )"		3119193	1					
ANR	3119344	Callee	RunPostScript		3119193	0					
ANR	3119345	Identifier	RunPostScript		3119193	0					
ANR	3119346	ArgumentList	node		3119193	1					
ANR	3119347	Argument	node		3119193	0					
ANR	3119348	Identifier	node		3119193	0					
ANR	3119349	Argument	_alwaysRunPost		3119193	1					
ANR	3119350	Identifier	_alwaysRunPost		3119193	0					
ANR	3119351	Argument	0		3119193	2					
ANR	3119352	PrimaryExpression	0		3119193	0					
ANR	3119353	ElseStatement	else		3119193	0					
ANR	3119354	CompoundStatement		39:9:1413:1413	3119193	0					
ANR	3119355	ExpressionStatement	node -> _Status = Job :: STATUS_ERROR	3687:3:112405:112438	3119193	0	True				
ANR	3119356	AssignmentExpression	node -> _Status = Job :: STATUS_ERROR		3119193	0		=			
ANR	3119357	PtrMemberAccess	node -> _Status		3119193	0					
ANR	3119358	Identifier	node		3119193	0					
ANR	3119359	Identifier	_Status		3119193	1					
ANR	3119360	Identifier	Job :: STATUS_ERROR		3119193	1					
ANR	3119361	ExpressionStatement	_numNodesFailed ++	3688:3:112443:112460	3119193	1	True				
ANR	3119362	PostIncDecOperationExpression	_numNodesFailed ++		3119193	0					
ANR	3119363	Identifier	_numNodesFailed		3119193	0					
ANR	3119364	IncDec	++		3119193	1					
ANR	3119365	ElseStatement	else		3119193	0					
ANR	3119366	CompoundStatement		43:8:1487:1487	3119193	0					
ANR	3119367	Statement	debug_printf	3693:2:112564:112575	3119193	0	True				
ANR	3119368	Statement	(	3693:14:112576:112576	3119193	1	True				
ANR	3119369	Statement	DEBUG_NORMAL	3693:16:112578:112589	3119193	2	True				
ANR	3119370	Statement	","	3693:28:112590:112590	3119193	3	True				
ANR	3119371	Statement	"""Job submit try %d/%d failed, """	3693:30:112592:112622	3119193	4	True				
ANR	3119372	Statement	"""will try again in >= %d second%s.\\n"""	3694:4:112628:112664	3119193	5	True				
ANR	3119373	Statement	","	3694:41:112665:112665	3119193	6	True				
ANR	3119374	Statement	node	3694:43:112667:112670	3119193	7	True				
ANR	3119375	Statement	->	3694:47:112671:112672	3119193	8	True				
ANR	3119376	Statement	_submitTries	3694:49:112673:112684	3119193	9	True				
ANR	3119377	Statement	","	3694:61:112685:112685	3119193	10	True				
ANR	3119378	Statement	max_submit_attempts	3695:4:112691:112709	3119193	11	True				
ANR	3119379	Statement	","	3695:23:112710:112710	3119193	12	True				
ANR	3119380	Statement	thisSubmitDelay	3695:25:112712:112726	3119193	13	True				
ANR	3119381	Statement	","	3695:40:112727:112727	3119193	14	True				
ANR	3119382	Statement	thisSubmitDelay	3696:4:112733:112747	3119193	15	True				
ANR	3119383	Statement	==	3696:20:112749:112750	3119193	16	True				
ANR	3119384	Statement	1	3696:23:112752:112752	3119193	17	True				
ANR	3119385	Statement	?	3696:25:112754:112754	3119193	18	True				
ANR	3119386	Statement	""""""	3696:27:112756:112757	3119193	19	True				
ANR	3119387	Statement	:	3696:30:112759:112759	3119193	20	True				
ANR	3119388	Statement	"""s"""	3696:32:112761:112763	3119193	21	True				
ANR	3119389	Statement	)	3696:36:112765:112765	3119193	22	True				
ANR	3119390	ExpressionStatement		3696:37:112766:112766	3119193	23	True				
ANR	3119391	IfStatement	if ( m_retrySubmitFirst )		3119193	24					
ANR	3119392	Condition	m_retrySubmitFirst	3698:7:112776:112793	3119193	0	True				
ANR	3119393	Identifier	m_retrySubmitFirst		3119193	0					
ANR	3119394	CompoundStatement		51:28:1810:1810	3119193	1					
ANR	3119395	ExpressionStatement	"_readyQ -> Prepend ( node , - node -> _nodePriority )"	3699:3:112802:112846	3119193	0	True				
ANR	3119396	CallExpression	"_readyQ -> Prepend ( node , - node -> _nodePriority )"		3119193	0					
ANR	3119397	Callee	_readyQ -> Prepend		3119193	0					
ANR	3119398	PtrMemberAccess	_readyQ -> Prepend		3119193	0					
ANR	3119399	Identifier	_readyQ		3119193	0					
ANR	3119400	Identifier	Prepend		3119193	1					
ANR	3119401	ArgumentList	node		3119193	1					
ANR	3119402	Argument	node		3119193	0					
ANR	3119403	Identifier	node		3119193	0					
ANR	3119404	Argument	- node -> _nodePriority		3119193	1					
ANR	3119405	UnaryOperationExpression	- node -> _nodePriority		3119193	0					
ANR	3119406	UnaryOperator	-		3119193	0					
ANR	3119407	PtrMemberAccess	node -> _nodePriority		3119193	1					
ANR	3119408	Identifier	node		3119193	0					
ANR	3119409	Identifier	_nodePriority		3119193	1					
ANR	3119410	ElseStatement	else		3119193	0					
ANR	3119411	CompoundStatement		53:9:1870:1870	3119193	0					
ANR	3119412	ExpressionStatement	"_readyQ -> Append ( node , - node -> _nodePriority )"	3701:3:112862:112905	3119193	0	True				
ANR	3119413	CallExpression	"_readyQ -> Append ( node , - node -> _nodePriority )"		3119193	0					
ANR	3119414	Callee	_readyQ -> Append		3119193	0					
ANR	3119415	PtrMemberAccess	_readyQ -> Append		3119193	0					
ANR	3119416	Identifier	_readyQ		3119193	0					
ANR	3119417	Identifier	Append		3119193	1					
ANR	3119418	ArgumentList	node		3119193	1					
ANR	3119419	Argument	node		3119193	0					
ANR	3119420	Identifier	node		3119193	0					
ANR	3119421	Argument	- node -> _nodePriority		3119193	1					
ANR	3119422	UnaryOperationExpression	- node -> _nodePriority		3119193	0					
ANR	3119423	UnaryOperator	-		3119193	0					
ANR	3119424	PtrMemberAccess	node -> _nodePriority		3119193	1					
ANR	3119425	Identifier	node		3119193	0					
ANR	3119426	Identifier	_nodePriority		3119193	1					
ANR	3119427	ReturnType	void		3119193	1					
ANR	3119428	Identifier	Dag :: ProcessFailedSubmit		3119193	2					
ANR	3119429	ParameterList	"Job * node , int max_submit_attempts"		3119193	3					
ANR	3119430	Parameter	Job * node	3647:26:110949:110957	3119193	0	True				
ANR	3119431	ParameterType	Job *		3119193	0					
ANR	3119432	Identifier	node		3119193	1					
ANR	3119433	Parameter	int max_submit_attempts	3647:37:110960:110982	3119193	1	True				
ANR	3119434	ParameterType	int		3119193	0					
ANR	3119435	Identifier	max_submit_attempts		3119193	1					
ANR	3119436	CFGEntryNode	ENTRY		3119193		True				
ANR	3119437	CFGExitNode	EXIT		3119193		True				
ANR	3119438	Symbol	node -> _submitTries		3119193						
ANR	3119439	Symbol	_isSplice		3119193						
ANR	3119440	Symbol	_jobstateLog		3119193						
ANR	3119441	Symbol	_condorLogRdr		3119193						
ANR	3119442	Symbol	DEBUG_QUIET		3119193						
ANR	3119443	Symbol	max_submit_attempts		3119193						
ANR	3119444	Symbol	node -> retries		3119193						
ANR	3119445	Symbol	_readyQ		3119193						
ANR	3119446	Symbol	* node -> _scriptPost		3119193						
ANR	3119447	Symbol	* node		3119193						
ANR	3119448	Symbol	_alwaysRunPost		3119193						
ANR	3119449	Symbol	NULL		3119193						
ANR	3119450	Symbol	JOB_ERROR_TEXT_MAXLEN		3119193						
ANR	3119451	Symbol	thisSubmitDelay		3119193						
ANR	3119452	Symbol	false		3119193						
ANR	3119453	Symbol	Job :: STATUS_ERROR		3119193						
ANR	3119454	Symbol	node -> GetRetryMax		3119193						
ANR	3119455	Symbol	_nextSubmitTime		3119193						
ANR	3119456	Symbol	node -> _scriptPost -> _retValJob		3119193						
ANR	3119457	Symbol	node -> error_text		3119193						
ANR	3119458	Symbol	DAG_ERROR_CONDOR_SUBMIT_FAILED		3119193						
ANR	3119459	Symbol	node		3119193						
ANR	3119460	Symbol	node -> _Status		3119193						
ANR	3119461	Symbol	_nextSubmitDelay		3119193						
ANR	3119462	Symbol	m_retrySubmitFirst		3119193						
ANR	3119463	Symbol	* * node		3119193						
ANR	3119464	Symbol	_numNodesFailed		3119193						
ANR	3119465	Symbol	time		3119193						
ANR	3119466	Symbol	node -> _nodePriority		3119193						
ANR	3119467	Symbol	_storkLogRdr		3119193						
ANR	3119468	Symbol	node -> _scriptPost		3119193						
ANR	3119469	Function	Dag :: DecrementJobCounts	3707:0:112995:113187							
ANR	3119470	FunctionDef	Dag :: DecrementJobCounts (Job * node)		3119469	0					
ANR	3119471	CompoundStatement		3709:0:113037:113187	3119469	0					
ANR	3119472	ExpressionStatement	node -> _queuedNodeJobProcs --	3710:1:113040:113067	3119469	0	True				
ANR	3119473	PostIncDecOperationExpression	node -> _queuedNodeJobProcs --		3119469	0					
ANR	3119474	PtrMemberAccess	node -> _queuedNodeJobProcs		3119469	0					
ANR	3119475	Identifier	node		3119469	0					
ANR	3119476	Identifier	_queuedNodeJobProcs		3119469	1					
ANR	3119477	IncDec	--		3119469	1					
ANR	3119478	ExpressionStatement	ASSERT ( node -> _queuedNodeJobProcs >= 0 )	3711:1:113070:113110	3119469	1	True				
ANR	3119479	CallExpression	ASSERT ( node -> _queuedNodeJobProcs >= 0 )		3119469	0					
ANR	3119480	Callee	ASSERT		3119469	0					
ANR	3119481	Identifier	ASSERT		3119469	0					
ANR	3119482	ArgumentList	node -> _queuedNodeJobProcs >= 0		3119469	1					
ANR	3119483	Argument	node -> _queuedNodeJobProcs >= 0		3119469	0					
ANR	3119484	RelationalExpression	node -> _queuedNodeJobProcs >= 0		3119469	0		>=			
ANR	3119485	PtrMemberAccess	node -> _queuedNodeJobProcs		3119469	0					
ANR	3119486	Identifier	node		3119469	0					
ANR	3119487	Identifier	_queuedNodeJobProcs		3119469	1					
ANR	3119488	PrimaryExpression	0		3119469	1					
ANR	3119489	IfStatement	if ( node -> _queuedNodeJobProcs == 0 )		3119469	2					
ANR	3119490	Condition	node -> _queuedNodeJobProcs == 0	3713:5:113118:113147	3119469	0	True				
ANR	3119491	EqualityExpression	node -> _queuedNodeJobProcs == 0		3119469	0		==			
ANR	3119492	PtrMemberAccess	node -> _queuedNodeJobProcs		3119469	0					
ANR	3119493	Identifier	node		3119469	0					
ANR	3119494	Identifier	_queuedNodeJobProcs		3119469	1					
ANR	3119495	PrimaryExpression	0		3119469	1					
ANR	3119496	CompoundStatement		5:38:113:113	3119469	1					
ANR	3119497	ExpressionStatement	"UpdateJobCounts ( node , - 1 )"	3714:2:113155:113182	3119469	0	True				
ANR	3119498	CallExpression	"UpdateJobCounts ( node , - 1 )"		3119469	0					
ANR	3119499	Callee	UpdateJobCounts		3119469	0					
ANR	3119500	Identifier	UpdateJobCounts		3119469	0					
ANR	3119501	ArgumentList	node		3119469	1					
ANR	3119502	Argument	node		3119469	0					
ANR	3119503	Identifier	node		3119469	0					
ANR	3119504	Argument	- 1		3119469	1					
ANR	3119505	UnaryOperationExpression	- 1		3119469	0					
ANR	3119506	UnaryOperator	-		3119469	0					
ANR	3119507	PrimaryExpression	1		3119469	1					
ANR	3119508	ReturnType	void		3119469	1					
ANR	3119509	Identifier	Dag :: DecrementJobCounts		3119469	2					
ANR	3119510	ParameterList	Job * node		3119469	3					
ANR	3119511	Parameter	Job * node	3708:25:113025:113033	3119469	0	True				
ANR	3119512	ParameterType	Job *		3119469	0					
ANR	3119513	Identifier	node		3119469	1					
ANR	3119514	CFGEntryNode	ENTRY		3119469		True				
ANR	3119515	CFGExitNode	EXIT		3119469		True				
ANR	3119516	Symbol	node		3119469						
ANR	3119517	Symbol	node -> _queuedNodeJobProcs		3119469						
ANR	3119518	Symbol	* node		3119469						
ANR	3119519	Function	Dag :: UpdateJobCounts	3719:0:113268:113534							
ANR	3119520	FunctionDef	"Dag :: UpdateJobCounts (Job * node , int change)"		3119519	0					
ANR	3119521	CompoundStatement		3721:0:113319:113534	3119519	0					
ANR	3119522	ExpressionStatement	_numJobsSubmitted += change	3722:4:113325:113352	3119519	0	True				
ANR	3119523	AssignmentExpression	_numJobsSubmitted += change		3119519	0		+=			
ANR	3119524	Identifier	_numJobsSubmitted		3119519	0					
ANR	3119525	Identifier	change		3119519	1					
ANR	3119526	ExpressionStatement	ASSERT ( _numJobsSubmitted >= 0 )	3723:1:113355:113387	3119519	1	True				
ANR	3119527	CallExpression	ASSERT ( _numJobsSubmitted >= 0 )		3119519	0					
ANR	3119528	Callee	ASSERT		3119519	0					
ANR	3119529	Identifier	ASSERT		3119519	0					
ANR	3119530	ArgumentList	_numJobsSubmitted >= 0		3119519	1					
ANR	3119531	Argument	_numJobsSubmitted >= 0		3119519	0					
ANR	3119532	RelationalExpression	_numJobsSubmitted >= 0		3119519	0		>=			
ANR	3119533	Identifier	_numJobsSubmitted		3119519	0					
ANR	3119534	PrimaryExpression	0		3119519	1					
ANR	3119535	IfStatement	if ( node -> GetThrottleInfo ( ) )		3119519	2					
ANR	3119536	Condition	node -> GetThrottleInfo ( )	3725:6:113396:113418	3119519	0	True				
ANR	3119537	CallExpression	node -> GetThrottleInfo ( )		3119519	0					
ANR	3119538	Callee	node -> GetThrottleInfo		3119519	0					
ANR	3119539	PtrMemberAccess	node -> GetThrottleInfo		3119519	0					
ANR	3119540	Identifier	node		3119519	0					
ANR	3119541	Identifier	GetThrottleInfo		3119519	1					
ANR	3119542	ArgumentList			3119519	1					
ANR	3119543	CompoundStatement		5:32:102:102	3119519	1					
ANR	3119544	ExpressionStatement	node -> GetThrottleInfo ( ) -> _currentJobs += change	3726:2:113426:113473	3119519	0	True				
ANR	3119545	AssignmentExpression	node -> GetThrottleInfo ( ) -> _currentJobs += change		3119519	0		+=			
ANR	3119546	PtrMemberAccess	node -> GetThrottleInfo ( ) -> _currentJobs		3119519	0					
ANR	3119547	CallExpression	node -> GetThrottleInfo ( )		3119519	0					
ANR	3119548	Callee	node -> GetThrottleInfo		3119519	0					
ANR	3119549	PtrMemberAccess	node -> GetThrottleInfo		3119519	0					
ANR	3119550	Identifier	node		3119519	0					
ANR	3119551	Identifier	GetThrottleInfo		3119519	1					
ANR	3119552	ArgumentList			3119519	1					
ANR	3119553	Identifier	_currentJobs		3119519	1					
ANR	3119554	Identifier	change		3119519	1					
ANR	3119555	ExpressionStatement	ASSERT ( node -> GetThrottleInfo ( ) -> _currentJobs >= 0 )	3727:2:113477:113529	3119519	1	True				
ANR	3119556	CallExpression	ASSERT ( node -> GetThrottleInfo ( ) -> _currentJobs >= 0 )		3119519	0					
ANR	3119557	Callee	ASSERT		3119519	0					
ANR	3119558	Identifier	ASSERT		3119519	0					
ANR	3119559	ArgumentList	node -> GetThrottleInfo ( ) -> _currentJobs >= 0		3119519	1					
ANR	3119560	Argument	node -> GetThrottleInfo ( ) -> _currentJobs >= 0		3119519	0					
ANR	3119561	RelationalExpression	node -> GetThrottleInfo ( ) -> _currentJobs >= 0		3119519	0		>=			
ANR	3119562	PtrMemberAccess	node -> GetThrottleInfo ( ) -> _currentJobs		3119519	0					
ANR	3119563	CallExpression	node -> GetThrottleInfo ( )		3119519	0					
ANR	3119564	Callee	node -> GetThrottleInfo		3119519	0					
ANR	3119565	PtrMemberAccess	node -> GetThrottleInfo		3119519	0					
ANR	3119566	Identifier	node		3119519	0					
ANR	3119567	Identifier	GetThrottleInfo		3119519	1					
ANR	3119568	ArgumentList			3119519	1					
ANR	3119569	Identifier	_currentJobs		3119519	1					
ANR	3119570	PrimaryExpression	0		3119519	1					
ANR	3119571	ReturnType	void		3119519	1					
ANR	3119572	Identifier	Dag :: UpdateJobCounts		3119519	2					
ANR	3119573	ParameterList	"Job * node , int change"		3119519	3					
ANR	3119574	Parameter	Job * node	3720:22:113295:113303	3119519	0	True				
ANR	3119575	ParameterType	Job *		3119519	0					
ANR	3119576	Identifier	node		3119519	1					
ANR	3119577	Parameter	int change	3720:33:113306:113315	3119519	1	True				
ANR	3119578	ParameterType	int		3119519	0					
ANR	3119579	Identifier	change		3119519	1					
ANR	3119580	CFGEntryNode	ENTRY		3119519		True				
ANR	3119581	CFGExitNode	EXIT		3119519		True				
ANR	3119582	Symbol	node		3119519						
ANR	3119583	Symbol	* * node		3119519						
ANR	3119584	Symbol	_numJobsSubmitted		3119519						
ANR	3119585	Symbol	node -> GetThrottleInfo		3119519						
ANR	3119586	Symbol	change		3119519						
ANR	3119587	Symbol	* node		3119519						
ANR	3119588	Symbol	node -> GetThrottleInfo ( ) -> _currentJobs		3119519						
ANR	3119589	Symbol	* node -> GetThrottleInfo		3119519						
ANR	3119590	Function	Dag :: SetDirectory	3733:0:113616:113676							
ANR	3119591	FunctionDef	Dag :: SetDirectory (MyString & dir)		3119590	0					
ANR	3119592	CompoundStatement		3735:0:113654:113676	3119590	0					
ANR	3119593	ExpressionStatement	m_directory = dir	3736:1:113657:113674	3119590	0	True				
ANR	3119594	AssignmentExpression	m_directory = dir		3119590	0		=			
ANR	3119595	Identifier	m_directory		3119590	0					
ANR	3119596	Identifier	dir		3119590	1					
ANR	3119597	ReturnType	void		3119590	1					
ANR	3119598	Identifier	Dag :: SetDirectory		3119590	2					
ANR	3119599	ParameterList	MyString & dir		3119590	3					
ANR	3119600	Parameter	MyString & dir	3734:18:113639:113651	3119590	0	True				
ANR	3119601	ParameterType	MyString &		3119590	0					
ANR	3119602	Identifier	dir		3119590	1					
ANR	3119603	CFGEntryNode	ENTRY		3119590		True				
ANR	3119604	CFGExitNode	EXIT		3119590		True				
ANR	3119605	Symbol	m_directory		3119590						
ANR	3119606	Symbol	dir		3119590						
ANR	3119607	Function	Dag :: SetDirectory	3740:0:113757:113813							
ANR	3119608	FunctionDef	Dag :: SetDirectory (char * dir)		3119607	0					
ANR	3119609	CompoundStatement		3742:0:113791:113813	3119607	0					
ANR	3119610	ExpressionStatement	m_directory = dir	3743:1:113794:113811	3119607	0	True				
ANR	3119611	AssignmentExpression	m_directory = dir		3119607	0		=			
ANR	3119612	Identifier	m_directory		3119607	0					
ANR	3119613	Identifier	dir		3119607	1					
ANR	3119614	ReturnType	void		3119607	1					
ANR	3119615	Identifier	Dag :: SetDirectory		3119607	2					
ANR	3119616	ParameterList	char * dir		3119607	3					
ANR	3119617	Parameter	char * dir	3741:18:113780:113788	3119607	0	True				
ANR	3119618	ParameterType	char *		3119607	0					
ANR	3119619	Identifier	dir		3119607	1					
ANR	3119620	CFGEntryNode	ENTRY		3119607		True				
ANR	3119621	CFGExitNode	EXIT		3119607		True				
ANR	3119622	Symbol	m_directory		3119607						
ANR	3119623	Symbol	dir		3119607						
ANR	3119624	Function	Dag :: PropogateDirectoryToAllNodes	3747:0:113894:114373							
ANR	3119625	FunctionDef	Dag :: PropogateDirectoryToAllNodes ()		3119624	0					
ANR	3119626	CompoundStatement		3749:0:113939:114373	3119624	0					
ANR	3119627	IdentifierDeclStatement	Job * job = NULL ;	3750:4:113945:113960	3119624	0	True				
ANR	3119628	IdentifierDecl	* job = NULL		3119624	0					
ANR	3119629	IdentifierDeclType	Job *		3119624	0					
ANR	3119630	Identifier	job		3119624	1					
ANR	3119631	AssignmentExpression	* job = NULL		3119624	2		=			
ANR	3119632	Identifier	NULL		3119624	0					
ANR	3119633	Identifier	NULL		3119624	1					
ANR	3119634	IdentifierDeclStatement	MyString key ;	3751:1:113963:113975	3119624	1	True				
ANR	3119635	IdentifierDecl	key		3119624	0					
ANR	3119636	IdentifierDeclType	MyString		3119624	0					
ANR	3119637	Identifier	key		3119624	1					
ANR	3119638	IfStatement	"if ( m_directory == ""."" )"		3119624	2					
ANR	3119639	Condition	"m_directory == ""."""	3753:5:113983:114000	3119624	0	True				
ANR	3119640	EqualityExpression	"m_directory == ""."""		3119624	0		==			
ANR	3119641	Identifier	m_directory		3119624	0					
ANR	3119642	PrimaryExpression	"""."""		3119624	1					
ANR	3119643	CompoundStatement		5:25:63:63	3119624	1					
ANR	3119644	ReturnStatement	return ;	3754:2:114007:114013	3119624	0	True				
ANR	3119645	ExpressionStatement	_jobs . Rewind ( )	3758:1:114081:114095	3119624	3	True				
ANR	3119646	CallExpression	_jobs . Rewind ( )		3119624	0					
ANR	3119647	Callee	_jobs . Rewind		3119624	0					
ANR	3119648	MemberAccess	_jobs . Rewind		3119624	0					
ANR	3119649	Identifier	_jobs		3119624	0					
ANR	3119650	Identifier	Rewind		3119624	1					
ANR	3119651	ArgumentList			3119624	1					
ANR	3119652	WhileStatement	while ( ( job = _jobs . Next ( ) ) )		3119624	4					
ANR	3119653	Condition	job = _jobs . Next ( )	3759:8:114105:114124	3119624	0	True				
ANR	3119654	AssignmentExpression	job = _jobs . Next ( )		3119624	0		=			
ANR	3119655	Identifier	job		3119624	0					
ANR	3119656	CallExpression	_jobs . Next ( )		3119624	1					
ANR	3119657	Callee	_jobs . Next		3119624	0					
ANR	3119658	MemberAccess	_jobs . Next		3119624	0					
ANR	3119659	Identifier	_jobs		3119624	0					
ANR	3119660	Identifier	Next		3119624	1					
ANR	3119661	ArgumentList			3119624	1					
ANR	3119662	CompoundStatement		11:31:188:188	3119624	1					
ANR	3119663	ExpressionStatement	ASSERT ( job != NULL )	3760:2:114132:114153	3119624	0	True				
ANR	3119664	CallExpression	ASSERT ( job != NULL )		3119624	0					
ANR	3119665	Callee	ASSERT		3119624	0					
ANR	3119666	Identifier	ASSERT		3119624	0					
ANR	3119667	ArgumentList	job != NULL		3119624	1					
ANR	3119668	Argument	job != NULL		3119624	0					
ANR	3119669	EqualityExpression	job != NULL		3119624	0		!=			
ANR	3119670	Identifier	job		3119624	0					
ANR	3119671	Identifier	NULL		3119624	1					
ANR	3119672	ExpressionStatement	job -> PrefixDirectory ( m_directory )	3761:2:114157:114190	3119624	1	True				
ANR	3119673	CallExpression	job -> PrefixDirectory ( m_directory )		3119624	0					
ANR	3119674	Callee	job -> PrefixDirectory		3119624	0					
ANR	3119675	PtrMemberAccess	job -> PrefixDirectory		3119624	0					
ANR	3119676	Identifier	job		3119624	0					
ANR	3119677	Identifier	PrefixDirectory		3119624	1					
ANR	3119678	ArgumentList	m_directory		3119624	1					
ANR	3119679	Argument	m_directory		3119624	0					
ANR	3119680	Identifier	m_directory		3119624	0					
ANR	3119681	ExpressionStatement	"m_directory = ""."""	3768:1:114354:114371	3119624	5	True				
ANR	3119682	AssignmentExpression	"m_directory = ""."""		3119624	0		=			
ANR	3119683	Identifier	m_directory		3119624	0					
ANR	3119684	PrimaryExpression	"""."""		3119624	1					
ANR	3119685	ReturnType	void		3119624	1					
ANR	3119686	Identifier	Dag :: PropogateDirectoryToAllNodes		3119624	2					
ANR	3119687	ParameterList			3119624	3					
ANR	3119688	CFGEntryNode	ENTRY		3119624		True				
ANR	3119689	CFGExitNode	EXIT		3119624		True				
ANR	3119690	Symbol	NULL		3119624						
ANR	3119691	Symbol	_jobs		3119624						
ANR	3119692	Symbol	m_directory		3119624						
ANR	3119693	Symbol	job		3119624						
ANR	3119694	Symbol	key		3119624						
ANR	3119695	Symbol	_jobs . Next		3119624						
ANR	3119696	Function	Dag :: PrefixAllNodeNames	3772:0:114454:115604							
ANR	3119697	FunctionDef	Dag :: PrefixAllNodeNames (const MyString & prefix)		3119696	0					
ANR	3119698	CompoundStatement		3774:0:114507:115604	3119696	0					
ANR	3119699	IdentifierDeclStatement	Job * job = NULL ;	3775:4:114513:114528	3119696	0	True				
ANR	3119700	IdentifierDecl	* job = NULL		3119696	0					
ANR	3119701	IdentifierDeclType	Job *		3119696	0					
ANR	3119702	Identifier	job		3119696	1					
ANR	3119703	AssignmentExpression	* job = NULL		3119696	2		=			
ANR	3119704	Identifier	NULL		3119696	0					
ANR	3119705	Identifier	NULL		3119696	1					
ANR	3119706	IdentifierDeclStatement	MyString key ;	3776:1:114531:114543	3119696	1	True				
ANR	3119707	IdentifierDecl	key		3119696	0					
ANR	3119708	IdentifierDeclType	MyString		3119696	0					
ANR	3119709	Identifier	key		3119696	1					
ANR	3119710	ExpressionStatement	"debug_printf ( DEBUG_DEBUG_1 , ""Entering: Dag::PrefixAllNodeNames()\\n"" )"	3778:1:114547:114615	3119696	2	True				
ANR	3119711	CallExpression	"debug_printf ( DEBUG_DEBUG_1 , ""Entering: Dag::PrefixAllNodeNames()\\n"" )"		3119696	0					
ANR	3119712	Callee	debug_printf		3119696	0					
ANR	3119713	Identifier	debug_printf		3119696	0					
ANR	3119714	ArgumentList	DEBUG_DEBUG_1		3119696	1					
ANR	3119715	Argument	DEBUG_DEBUG_1		3119696	0					
ANR	3119716	Identifier	DEBUG_DEBUG_1		3119696	0					
ANR	3119717	Argument	"""Entering: Dag::PrefixAllNodeNames()\\n"""		3119696	1					
ANR	3119718	PrimaryExpression	"""Entering: Dag::PrefixAllNodeNames()\\n"""		3119696	0					
ANR	3119719	ExpressionStatement	_jobs . Rewind ( )	3780:4:114622:114636	3119696	3	True				
ANR	3119720	CallExpression	_jobs . Rewind ( )		3119696	0					
ANR	3119721	Callee	_jobs . Rewind		3119696	0					
ANR	3119722	MemberAccess	_jobs . Rewind		3119696	0					
ANR	3119723	Identifier	_jobs		3119696	0					
ANR	3119724	Identifier	Rewind		3119696	1					
ANR	3119725	ArgumentList			3119696	1					
ANR	3119726	WhileStatement	while ( ( job = _jobs . Next ( ) ) )		3119696	4					
ANR	3119727	Condition	job = _jobs . Next ( )	3781:11:114649:114668	3119696	0	True				
ANR	3119728	AssignmentExpression	job = _jobs . Next ( )		3119696	0		=			
ANR	3119729	Identifier	job		3119696	0					
ANR	3119730	CallExpression	_jobs . Next ( )		3119696	1					
ANR	3119731	Callee	_jobs . Next		3119696	0					
ANR	3119732	MemberAccess	_jobs . Next		3119696	0					
ANR	3119733	Identifier	_jobs		3119696	0					
ANR	3119734	Identifier	Next		3119696	1					
ANR	3119735	ArgumentList			3119696	1					
ANR	3119736	CompoundStatement		8:34:164:164	3119696	1					
ANR	3119737	ExpressionStatement	ASSERT ( job != NULL )	3782:6:114680:114701	3119696	0	True				
ANR	3119738	CallExpression	ASSERT ( job != NULL )		3119696	0					
ANR	3119739	Callee	ASSERT		3119696	0					
ANR	3119740	Identifier	ASSERT		3119696	0					
ANR	3119741	ArgumentList	job != NULL		3119696	1					
ANR	3119742	Argument	job != NULL		3119696	0					
ANR	3119743	EqualityExpression	job != NULL		3119696	0		!=			
ANR	3119744	Identifier	job		3119696	0					
ANR	3119745	Identifier	NULL		3119696	1					
ANR	3119746	ExpressionStatement	job -> PrefixName ( prefix )	3783:3:114706:114729	3119696	1	True				
ANR	3119747	CallExpression	job -> PrefixName ( prefix )		3119696	0					
ANR	3119748	Callee	job -> PrefixName		3119696	0					
ANR	3119749	PtrMemberAccess	job -> PrefixName		3119696	0					
ANR	3119750	Identifier	job		3119696	0					
ANR	3119751	Identifier	PrefixName		3119696	1					
ANR	3119752	ArgumentList	prefix		3119696	1					
ANR	3119753	Argument	prefix		3119696	0					
ANR	3119754	Identifier	prefix		3119696	0					
ANR	3119755	ExpressionStatement	_nodeNameHash . startIterations ( )	3790:1:114882:114913	3119696	5	True				
ANR	3119756	CallExpression	_nodeNameHash . startIterations ( )		3119696	0					
ANR	3119757	Callee	_nodeNameHash . startIterations		3119696	0					
ANR	3119758	MemberAccess	_nodeNameHash . startIterations		3119696	0					
ANR	3119759	Identifier	_nodeNameHash		3119696	0					
ANR	3119760	Identifier	startIterations		3119696	1					
ANR	3119761	ArgumentList			3119696	1					
ANR	3119762	WhileStatement	"while ( _nodeNameHash . iterate ( key , job ) )"		3119696	6					
ANR	3119763	Condition	"_nodeNameHash . iterate ( key , job )"	3791:7:114922:114951	3119696	0	True				
ANR	3119764	CallExpression	"_nodeNameHash . iterate ( key , job )"		3119696	0					
ANR	3119765	Callee	_nodeNameHash . iterate		3119696	0					
ANR	3119766	MemberAccess	_nodeNameHash . iterate		3119696	0					
ANR	3119767	Identifier	_nodeNameHash		3119696	0					
ANR	3119768	Identifier	iterate		3119696	1					
ANR	3119769	ArgumentList	key		3119696	1					
ANR	3119770	Argument	key		3119696	0					
ANR	3119771	Identifier	key		3119696	0					
ANR	3119772	Argument	job		3119696	1					
ANR	3119773	Identifier	job		3119696	0					
ANR	3119774	CompoundStatement		18:39:446:446	3119696	1					
ANR	3119775	ExpressionStatement	_nodeNameHash . remove ( key )	3792:2:114958:114983	3119696	0	True				
ANR	3119776	CallExpression	_nodeNameHash . remove ( key )		3119696	0					
ANR	3119777	Callee	_nodeNameHash . remove		3119696	0					
ANR	3119778	MemberAccess	_nodeNameHash . remove		3119696	0					
ANR	3119779	Identifier	_nodeNameHash		3119696	0					
ANR	3119780	Identifier	remove		3119696	1					
ANR	3119781	ArgumentList	key		3119696	1					
ANR	3119782	Argument	key		3119696	0					
ANR	3119783	Identifier	key		3119696	0					
ANR	3119784	ExpressionStatement	_jobs . Rewind ( )	3796:4:115048:115062	3119696	7	True				
ANR	3119785	CallExpression	_jobs . Rewind ( )		3119696	0					
ANR	3119786	Callee	_jobs . Rewind		3119696	0					
ANR	3119787	MemberAccess	_jobs . Rewind		3119696	0					
ANR	3119788	Identifier	_jobs		3119696	0					
ANR	3119789	Identifier	Rewind		3119696	1					
ANR	3119790	ArgumentList			3119696	1					
ANR	3119791	WhileStatement	while ( ( job = _jobs . Next ( ) ) )		3119696	8					
ANR	3119792	Condition	job = _jobs . Next ( )	3797:11:115075:115094	3119696	0	True				
ANR	3119793	AssignmentExpression	job = _jobs . Next ( )		3119696	0		=			
ANR	3119794	Identifier	job		3119696	0					
ANR	3119795	CallExpression	_jobs . Next ( )		3119696	1					
ANR	3119796	Callee	_jobs . Next		3119696	0					
ANR	3119797	MemberAccess	_jobs . Next		3119696	0					
ANR	3119798	Identifier	_jobs		3119696	0					
ANR	3119799	Identifier	Next		3119696	1					
ANR	3119800	ArgumentList			3119696	1					
ANR	3119801	CompoundStatement		24:34:590:590	3119696	1					
ANR	3119802	ExpressionStatement	ASSERT ( job != NULL )	3798:6:115106:115127	3119696	0	True				
ANR	3119803	CallExpression	ASSERT ( job != NULL )		3119696	0					
ANR	3119804	Callee	ASSERT		3119696	0					
ANR	3119805	Identifier	ASSERT		3119696	0					
ANR	3119806	ArgumentList	job != NULL		3119696	1					
ANR	3119807	Argument	job != NULL		3119696	0					
ANR	3119808	EqualityExpression	job != NULL		3119696	0		!=			
ANR	3119809	Identifier	job		3119696	0					
ANR	3119810	Identifier	NULL		3119696	1					
ANR	3119811	ExpressionStatement	key = job -> GetJobName ( )	3799:3:115132:115155	3119696	1	True				
ANR	3119812	AssignmentExpression	key = job -> GetJobName ( )		3119696	0		=			
ANR	3119813	Identifier	key		3119696	0					
ANR	3119814	CallExpression	job -> GetJobName ( )		3119696	1					
ANR	3119815	Callee	job -> GetJobName		3119696	0					
ANR	3119816	PtrMemberAccess	job -> GetJobName		3119696	0					
ANR	3119817	Identifier	job		3119696	0					
ANR	3119818	Identifier	GetJobName		3119696	1					
ANR	3119819	ArgumentList			3119696	1					
ANR	3119820	IfStatement	"if ( _nodeNameHash . insert ( key , job ) != 0 )"		3119696	2					
ANR	3119821	Condition	"_nodeNameHash . insert ( key , job ) != 0"	3800:6:115163:115197	3119696	0	True				
ANR	3119822	EqualityExpression	"_nodeNameHash . insert ( key , job ) != 0"		3119696	0		!=			
ANR	3119823	CallExpression	"_nodeNameHash . insert ( key , job )"		3119696	0					
ANR	3119824	Callee	_nodeNameHash . insert		3119696	0					
ANR	3119825	MemberAccess	_nodeNameHash . insert		3119696	0					
ANR	3119826	Identifier	_nodeNameHash		3119696	0					
ANR	3119827	Identifier	insert		3119696	1					
ANR	3119828	ArgumentList	key		3119696	1					
ANR	3119829	Argument	key		3119696	0					
ANR	3119830	Identifier	key		3119696	0					
ANR	3119831	Argument	job		3119696	1					
ANR	3119832	Identifier	job		3119696	0					
ANR	3119833	PrimaryExpression	0		3119696	1					
ANR	3119834	CompoundStatement		27:43:692:692	3119696	1					
ANR	3119835	ExpressionStatement	"debug_error ( 1 , DEBUG_QUIET , ""Dag::PrefixAllNodeNames(): This is an impossible error\\n"" )"	3805:3:115429:115521	3119696	0	True				
ANR	3119836	CallExpression	"debug_error ( 1 , DEBUG_QUIET , ""Dag::PrefixAllNodeNames(): This is an impossible error\\n"" )"		3119696	0					
ANR	3119837	Callee	debug_error		3119696	0					
ANR	3119838	Identifier	debug_error		3119696	0					
ANR	3119839	ArgumentList	1		3119696	1					
ANR	3119840	Argument	1		3119696	0					
ANR	3119841	PrimaryExpression	1		3119696	0					
ANR	3119842	Argument	DEBUG_QUIET		3119696	1					
ANR	3119843	Identifier	DEBUG_QUIET		3119696	0					
ANR	3119844	Argument	"""Dag::PrefixAllNodeNames(): This is an impossible error\\n"""		3119696	2					
ANR	3119845	PrimaryExpression	"""Dag::PrefixAllNodeNames(): This is an impossible error\\n"""		3119696	0					
ANR	3119846	ExpressionStatement	"debug_printf ( DEBUG_DEBUG_1 , ""Leaving: Dag::PrefixAllNodeNames()\\n"" )"	3810:1:115535:115602	3119696	9	True				
ANR	3119847	CallExpression	"debug_printf ( DEBUG_DEBUG_1 , ""Leaving: Dag::PrefixAllNodeNames()\\n"" )"		3119696	0					
ANR	3119848	Callee	debug_printf		3119696	0					
ANR	3119849	Identifier	debug_printf		3119696	0					
ANR	3119850	ArgumentList	DEBUG_DEBUG_1		3119696	1					
ANR	3119851	Argument	DEBUG_DEBUG_1		3119696	0					
ANR	3119852	Identifier	DEBUG_DEBUG_1		3119696	0					
ANR	3119853	Argument	"""Leaving: Dag::PrefixAllNodeNames()\\n"""		3119696	1					
ANR	3119854	PrimaryExpression	"""Leaving: Dag::PrefixAllNodeNames()\\n"""		3119696	0					
ANR	3119855	ReturnType	void		3119696	1					
ANR	3119856	Identifier	Dag :: PrefixAllNodeNames		3119696	2					
ANR	3119857	ParameterList	const MyString & prefix		3119696	3					
ANR	3119858	Parameter	const MyString & prefix	3773:24:114483:114504	3119696	0	True				
ANR	3119859	ParameterType	const MyString &		3119696	0					
ANR	3119860	Identifier	prefix		3119696	1					
ANR	3119861	CFGEntryNode	ENTRY		3119696		True				
ANR	3119862	CFGExitNode	EXIT		3119696		True				
ANR	3119863	Symbol	NULL		3119696						
ANR	3119864	Symbol	prefix		3119696						
ANR	3119865	Symbol	* job		3119696						
ANR	3119866	Symbol	job -> GetJobName		3119696						
ANR	3119867	Symbol	_nodeNameHash		3119696						
ANR	3119868	Symbol	_jobs . Next		3119696						
ANR	3119869	Symbol	DEBUG_QUIET		3119696						
ANR	3119870	Symbol	_jobs		3119696						
ANR	3119871	Symbol	DEBUG_DEBUG_1		3119696						
ANR	3119872	Symbol	job		3119696						
ANR	3119873	Symbol	_nodeNameHash . iterate		3119696						
ANR	3119874	Symbol	_nodeNameHash . insert		3119696						
ANR	3119875	Symbol	key		3119696						
ANR	3119876	Function	Dag :: InsertSplice	3814:0:115685:115797							
ANR	3119877	FunctionDef	"Dag :: InsertSplice (MyString spliceName , Dag * splice_dag)"		3119876	0					
ANR	3119878	CompoundStatement		3816:0:115746:115797	3119876	0					
ANR	3119879	ReturnStatement	"return _splices . insert ( spliceName , splice_dag ) ;"	3817:1:115749:115795	3119876	0	True				
ANR	3119880	CallExpression	"_splices . insert ( spliceName , splice_dag )"		3119876	0					
ANR	3119881	Callee	_splices . insert		3119876	0					
ANR	3119882	MemberAccess	_splices . insert		3119876	0					
ANR	3119883	Identifier	_splices		3119876	0					
ANR	3119884	Identifier	insert		3119876	1					
ANR	3119885	ArgumentList	spliceName		3119876	1					
ANR	3119886	Argument	spliceName		3119876	0					
ANR	3119887	Identifier	spliceName		3119876	0					
ANR	3119888	Argument	splice_dag		3119876	1					
ANR	3119889	Identifier	splice_dag		3119876	0					
ANR	3119890	ReturnType	int		3119876	1					
ANR	3119891	Identifier	Dag :: InsertSplice		3119876	2					
ANR	3119892	ParameterList	"MyString spliceName , Dag * splice_dag"		3119876	3					
ANR	3119893	Parameter	MyString spliceName	3815:18:115708:115726	3119876	0	True				
ANR	3119894	ParameterType	MyString		3119876	0					
ANR	3119895	Identifier	spliceName		3119876	1					
ANR	3119896	Parameter	Dag * splice_dag	3815:39:115729:115743	3119876	1	True				
ANR	3119897	ParameterType	Dag *		3119876	0					
ANR	3119898	Identifier	splice_dag		3119876	1					
ANR	3119899	CFGEntryNode	ENTRY		3119876		True				
ANR	3119900	CFGExitNode	EXIT		3119876		True				
ANR	3119901	Symbol	splice_dag		3119876						
ANR	3119902	Symbol	_splices		3119876						
ANR	3119903	Symbol	_splices . insert		3119876						
ANR	3119904	Symbol	spliceName		3119876						
ANR	3119905	Function	Dag :: LookupSplice	3821:0:115878:115978							
ANR	3119906	FunctionDef	"Dag :: LookupSplice (MyString name , Dag * & splice_dag)"		3119905	0					
ANR	3119907	CompoundStatement		3823:0:115933:115978	3119905	0					
ANR	3119908	ReturnStatement	"return _splices . lookup ( name , splice_dag ) ;"	3824:1:115936:115976	3119905	0	True				
ANR	3119909	CallExpression	"_splices . lookup ( name , splice_dag )"		3119905	0					
ANR	3119910	Callee	_splices . lookup		3119905	0					
ANR	3119911	MemberAccess	_splices . lookup		3119905	0					
ANR	3119912	Identifier	_splices		3119905	0					
ANR	3119913	Identifier	lookup		3119905	1					
ANR	3119914	ArgumentList	name		3119905	1					
ANR	3119915	Argument	name		3119905	0					
ANR	3119916	Identifier	name		3119905	0					
ANR	3119917	Argument	splice_dag		3119905	1					
ANR	3119918	Identifier	splice_dag		3119905	0					
ANR	3119919	ReturnType	int		3119905	1					
ANR	3119920	Identifier	Dag :: LookupSplice		3119905	2					
ANR	3119921	ParameterList	"MyString name , Dag * & splice_dag"		3119905	3					
ANR	3119922	Parameter	MyString name	3822:18:115900:115912	3119905	0	True				
ANR	3119923	ParameterType	MyString		3119905	0					
ANR	3119924	Identifier	name		3119905	1					
ANR	3119925	Parameter	Dag * & splice_dag	3822:33:115915:115930	3119905	1	True				
ANR	3119926	ParameterType	Dag * &		3119905	0					
ANR	3119927	Identifier	splice_dag		3119905	1					
ANR	3119928	CFGEntryNode	ENTRY		3119905		True				
ANR	3119929	CFGExitNode	EXIT		3119905		True				
ANR	3119930	Symbol	splice_dag		3119905						
ANR	3119931	Symbol	_splices		3119905						
ANR	3119932	Symbol	name		3119905						
ANR	3119933	Symbol	_splices . lookup		3119905						
ANR	3119934	Function	Dag :: InitialRecordedNodes	3831:0:116244:116326							
ANR	3119935	FunctionDef	Dag :: InitialRecordedNodes ()		3119934	0					
ANR	3119936	CompoundStatement		3833:0:116292:116326	3119934	0					
ANR	3119937	ReturnStatement	return & _splice_initial_nodes ;	3834:1:116295:116324	3119934	0	True				
ANR	3119938	UnaryOperationExpression	& _splice_initial_nodes		3119934	0					
ANR	3119939	UnaryOperator	&		3119934	0					
ANR	3119940	Identifier	_splice_initial_nodes		3119934	1					
ANR	3119941	ReturnType	ExtArray < Job * > *		3119934	1					
ANR	3119942	Identifier	Dag :: InitialRecordedNodes		3119934	2					
ANR	3119943	ParameterList			3119934	3					
ANR	3119944	CFGEntryNode	ENTRY		3119934		True				
ANR	3119945	CFGExitNode	EXIT		3119934		True				
ANR	3119946	Symbol	& _splice_initial_nodes		3119934						
ANR	3119947	Function	Dag :: FinalRecordedNodes	3841:0:116590:116668							
ANR	3119948	FunctionDef	Dag :: FinalRecordedNodes ()		3119947	0					
ANR	3119949	CompoundStatement		3843:0:116636:116668	3119947	0					
ANR	3119950	ReturnStatement	return & _splice_final_nodes ;	3844:1:116639:116666	3119947	0	True				
ANR	3119951	UnaryOperationExpression	& _splice_final_nodes		3119947	0					
ANR	3119952	UnaryOperator	&		3119947	0					
ANR	3119953	Identifier	_splice_final_nodes		3119947	1					
ANR	3119954	ReturnType	ExtArray < Job * > *		3119947	1					
ANR	3119955	Identifier	Dag :: FinalRecordedNodes		3119947	2					
ANR	3119956	ParameterList			3119947	3					
ANR	3119957	CFGEntryNode	ENTRY		3119947		True				
ANR	3119958	CFGExitNode	EXIT		3119947		True				
ANR	3119959	Symbol	& _splice_final_nodes		3119947						
ANR	3119960	Function	Dag :: RecordInitialAndFinalNodes	3851:0:116892:117210							
ANR	3119961	FunctionDef	Dag :: RecordInitialAndFinalNodes ()		3119960	0					
ANR	3119962	CompoundStatement		3853:0:116935:117210	3119960	0					
ANR	3119963	IdentifierDeclStatement	Job * job = NULL ;	3854:1:116938:116953	3119960	0	True				
ANR	3119964	IdentifierDecl	* job = NULL		3119960	0					
ANR	3119965	IdentifierDeclType	Job *		3119960	0					
ANR	3119966	Identifier	job		3119960	1					
ANR	3119967	AssignmentExpression	* job = NULL		3119960	2		=			
ANR	3119968	Identifier	NULL		3119960	0					
ANR	3119969	Identifier	NULL		3119960	1					
ANR	3119970	ExpressionStatement	_jobs . Rewind ( )	3856:1:116957:116971	3119960	1	True				
ANR	3119971	CallExpression	_jobs . Rewind ( )		3119960	0					
ANR	3119972	Callee	_jobs . Rewind		3119960	0					
ANR	3119973	MemberAccess	_jobs . Rewind		3119960	0					
ANR	3119974	Identifier	_jobs		3119960	0					
ANR	3119975	Identifier	Rewind		3119960	1					
ANR	3119976	ArgumentList			3119960	1					
ANR	3119977	WhileStatement	while ( ( job = _jobs . Next ( ) ) )		3119960	2					
ANR	3119978	Condition	job = _jobs . Next ( )	3857:8:116981:117000	3119960	0	True				
ANR	3119979	AssignmentExpression	job = _jobs . Next ( )		3119960	0		=			
ANR	3119980	Identifier	job		3119960	0					
ANR	3119981	CallExpression	_jobs . Next ( )		3119960	1					
ANR	3119982	Callee	_jobs . Next		3119960	0					
ANR	3119983	MemberAccess	_jobs . Next		3119960	0					
ANR	3119984	Identifier	_jobs		3119960	0					
ANR	3119985	Identifier	Next		3119960	1					
ANR	3119986	ArgumentList			3119960	1					
ANR	3119987	CompoundStatement		5:31:68:68	3119960	1					
ANR	3119988	IfStatement	if ( job -> NumParents ( ) == 0 )		3119960	0					
ANR	3119989	Condition	job -> NumParents ( ) == 0	3860:6:117043:117064	3119960	0	True				
ANR	3119990	EqualityExpression	job -> NumParents ( ) == 0		3119960	0		==			
ANR	3119991	CallExpression	job -> NumParents ( )		3119960	0					
ANR	3119992	Callee	job -> NumParents		3119960	0					
ANR	3119993	PtrMemberAccess	job -> NumParents		3119960	0					
ANR	3119994	Identifier	job		3119960	0					
ANR	3119995	Identifier	NumParents		3119960	1					
ANR	3119996	ArgumentList			3119960	1					
ANR	3119997	PrimaryExpression	0		3119960	1					
ANR	3119998	CompoundStatement		8:30:131:131	3119960	1					
ANR	3119999	ExpressionStatement	_splice_initial_nodes . add ( job )	3861:3:117072:117102	3119960	0	True				
ANR	3120000	CallExpression	_splice_initial_nodes . add ( job )		3119960	0					
ANR	3120001	Callee	_splice_initial_nodes . add		3119960	0					
ANR	3120002	MemberAccess	_splice_initial_nodes . add		3119960	0					
ANR	3120003	Identifier	_splice_initial_nodes		3119960	0					
ANR	3120004	Identifier	add		3119960	1					
ANR	3120005	ArgumentList	job		3119960	1					
ANR	3120006	Argument	job		3119960	0					
ANR	3120007	Identifier	job		3119960	0					
ANR	3120008	IfStatement	if ( job -> NumChildren ( ) == 0 )		3119960	1					
ANR	3120009	Condition	job -> NumChildren ( ) == 0	3865:6:117143:117165	3119960	0	True				
ANR	3120010	EqualityExpression	job -> NumChildren ( ) == 0		3119960	0		==			
ANR	3120011	CallExpression	job -> NumChildren ( )		3119960	0					
ANR	3120012	Callee	job -> NumChildren		3119960	0					
ANR	3120013	PtrMemberAccess	job -> NumChildren		3119960	0					
ANR	3120014	Identifier	job		3119960	0					
ANR	3120015	Identifier	NumChildren		3119960	1					
ANR	3120016	ArgumentList			3119960	1					
ANR	3120017	PrimaryExpression	0		3119960	1					
ANR	3120018	CompoundStatement		13:31:232:232	3119960	1					
ANR	3120019	ExpressionStatement	_splice_final_nodes . add ( job )	3866:3:117173:117201	3119960	0	True				
ANR	3120020	CallExpression	_splice_final_nodes . add ( job )		3119960	0					
ANR	3120021	Callee	_splice_final_nodes . add		3119960	0					
ANR	3120022	MemberAccess	_splice_final_nodes . add		3119960	0					
ANR	3120023	Identifier	_splice_final_nodes		3119960	0					
ANR	3120024	Identifier	add		3119960	1					
ANR	3120025	ArgumentList	job		3119960	1					
ANR	3120026	Argument	job		3119960	0					
ANR	3120027	Identifier	job		3119960	0					
ANR	3120028	ReturnType	void		3119960	1					
ANR	3120029	Identifier	Dag :: RecordInitialAndFinalNodes		3119960	2					
ANR	3120030	ParameterList			3119960	3					
ANR	3120031	CFGEntryNode	ENTRY		3119960		True				
ANR	3120032	CFGExitNode	EXIT		3119960		True				
ANR	3120033	Symbol	_splice_final_nodes		3119960						
ANR	3120034	Symbol	NULL		3119960						
ANR	3120035	Symbol	* job		3119960						
ANR	3120036	Symbol	job -> NumParents		3119960						
ANR	3120037	Symbol	_splice_initial_nodes		3119960						
ANR	3120038	Symbol	_jobs		3119960						
ANR	3120039	Symbol	job		3119960						
ANR	3120040	Symbol	_jobs . Next		3119960						
ANR	3120041	Symbol	job -> NumChildren		3119960						
ANR	3120042	Function	Dag :: RelinquishNodeOwnership	3874:0:117427:117806							
ANR	3120043	FunctionDef	Dag :: RelinquishNodeOwnership ()		3120042	0					
ANR	3120044	CompoundStatement		3876:0:117478:117806	3120042	0					
ANR	3120045	IdentifierDeclStatement	Job * job = NULL ;	3877:1:117481:117496	3120042	0	True				
ANR	3120046	IdentifierDecl	* job = NULL		3120042	0					
ANR	3120047	IdentifierDeclType	Job *		3120042	0					
ANR	3120048	Identifier	job		3120042	1					
ANR	3120049	AssignmentExpression	* job = NULL		3120042	2		=			
ANR	3120050	Identifier	NULL		3120042	0					
ANR	3120051	Identifier	NULL		3120042	1					
ANR	3120052	IdentifierDeclStatement	MyString key ;	3878:1:117499:117511	3120042	1	True				
ANR	3120053	IdentifierDecl	key		3120042	0					
ANR	3120054	IdentifierDeclType	MyString		3120042	0					
ANR	3120055	Identifier	key		3120042	1					
ANR	3120056	IdentifierDeclStatement	ExtArray < Job * > * nodes = new ExtArray < Job * > ( ) ;	3880:1:117515:117559	3120042	2	True				
ANR	3120057	IdentifierDecl	* nodes = new ExtArray < Job * > ( )		3120042	0					
ANR	3120058	IdentifierDeclType	ExtArray < Job * > *		3120042	0					
ANR	3120059	Identifier	nodes		3120042	1					
ANR	3120060	AssignmentExpression	* nodes = new ExtArray < Job * > ( )		3120042	2		=			
ANR	3120061	Identifier	nodes		3120042	0					
ANR	3120062	UnaryExpression	new ExtArray < Job * > ( )		3120042	1					
ANR	3120063	ExpressionStatement	_jobs . Rewind ( )	3883:1:117584:117598	3120042	3	True				
ANR	3120064	CallExpression	_jobs . Rewind ( )		3120042	0					
ANR	3120065	Callee	_jobs . Rewind		3120042	0					
ANR	3120066	MemberAccess	_jobs . Rewind		3120042	0					
ANR	3120067	Identifier	_jobs		3120042	0					
ANR	3120068	Identifier	Rewind		3120042	1					
ANR	3120069	ArgumentList			3120042	1					
ANR	3120070	WhileStatement	while ( ( job = _jobs . Next ( ) ) )		3120042	4					
ANR	3120071	Condition	job = _jobs . Next ( )	3884:8:117608:117627	3120042	0	True				
ANR	3120072	AssignmentExpression	job = _jobs . Next ( )		3120042	0		=			
ANR	3120073	Identifier	job		3120042	0					
ANR	3120074	CallExpression	_jobs . Next ( )		3120042	1					
ANR	3120075	Callee	_jobs . Next		3120042	0					
ANR	3120076	MemberAccess	_jobs . Next		3120042	0					
ANR	3120077	Identifier	_jobs		3120042	0					
ANR	3120078	Identifier	Next		3120042	1					
ANR	3120079	ArgumentList			3120042	1					
ANR	3120080	CompoundStatement		9:31:152:152	3120042	1					
ANR	3120081	ExpressionStatement	nodes -> add ( job )	3885:2:117635:117650	3120042	0	True				
ANR	3120082	CallExpression	nodes -> add ( job )		3120042	0					
ANR	3120083	Callee	nodes -> add		3120042	0					
ANR	3120084	PtrMemberAccess	nodes -> add		3120042	0					
ANR	3120085	Identifier	nodes		3120042	0					
ANR	3120086	Identifier	add		3120042	1					
ANR	3120087	ArgumentList	job		3120042	1					
ANR	3120088	Argument	job		3120042	0					
ANR	3120089	Identifier	job		3120042	0					
ANR	3120090	ExpressionStatement	_jobs . DeleteCurrent ( )	3886:2:117654:117675	3120042	1	True				
ANR	3120091	CallExpression	_jobs . DeleteCurrent ( )		3120042	0					
ANR	3120092	Callee	_jobs . DeleteCurrent		3120042	0					
ANR	3120093	MemberAccess	_jobs . DeleteCurrent		3120042	0					
ANR	3120094	Identifier	_jobs		3120042	0					
ANR	3120095	Identifier	DeleteCurrent		3120042	1					
ANR	3120096	ArgumentList			3120042	1					
ANR	3120097	ReturnStatement	"return new OwnedMaterials ( nodes , & _catThrottles , _reject , _firstRejectLoc ) ;"	3890:1:117726:117804	3120042	5	True				
ANR	3120098	Expression	"nodes , & _catThrottles , _reject , _firstRejectLoc"		3120042	0					
ANR	3120099	Identifier	nodes		3120042	0					
ANR	3120100	Expression	"& _catThrottles , _reject , _firstRejectLoc"		3120042	1					
ANR	3120101	UnaryOperationExpression	& _catThrottles		3120042	0					
ANR	3120102	UnaryOperator	&		3120042	0					
ANR	3120103	Identifier	_catThrottles		3120042	1					
ANR	3120104	Expression	"_reject , _firstRejectLoc"		3120042	1					
ANR	3120105	Identifier	_reject		3120042	0					
ANR	3120106	Identifier	_firstRejectLoc		3120042	1					
ANR	3120107	ReturnType	OwnedMaterials *		3120042	1					
ANR	3120108	Identifier	Dag :: RelinquishNodeOwnership		3120042	2					
ANR	3120109	ParameterList			3120042	3					
ANR	3120110	CFGEntryNode	ENTRY		3120042		True				
ANR	3120111	CFGExitNode	EXIT		3120042		True				
ANR	3120112	Symbol	_firstRejectLoc		3120042						
ANR	3120113	Symbol	NULL		3120042						
ANR	3120114	Symbol	nodes		3120042						
ANR	3120115	Symbol	_reject		3120042						
ANR	3120116	Symbol	_jobs		3120042						
ANR	3120117	Symbol	job		3120042						
ANR	3120118	Symbol	& _catThrottles		3120042						
ANR	3120119	Symbol	key		3120042						
ANR	3120120	Symbol	_jobs . Next		3120042						
ANR	3120121	Function	Dag :: LiftSplices	3896:0:117888:118817							
ANR	3120122	FunctionDef	Dag :: LiftSplices (SpliceLayer layer)		3120121	0					
ANR	3120123	CompoundStatement		3898:0:117940:118817	3120121	0					
ANR	3120124	IdentifierDeclStatement	Dag * splice = NULL ;	3899:1:117943:117961	3120121	0	True				
ANR	3120125	IdentifierDecl	* splice = NULL		3120121	0					
ANR	3120126	IdentifierDeclType	Dag *		3120121	0					
ANR	3120127	Identifier	splice		3120121	1					
ANR	3120128	AssignmentExpression	* splice = NULL		3120121	2		=			
ANR	3120129	Identifier	NULL		3120121	0					
ANR	3120130	Identifier	NULL		3120121	1					
ANR	3120131	IdentifierDeclStatement	MyString key ;	3900:1:117964:117976	3120121	1	True				
ANR	3120132	IdentifierDecl	key		3120121	0					
ANR	3120133	IdentifierDeclType	MyString		3120121	0					
ANR	3120134	Identifier	key		3120121	1					
ANR	3120135	IdentifierDeclStatement	OwnedMaterials * om = NULL ;	3901:1:117979:118004	3120121	2	True				
ANR	3120136	IdentifierDecl	* om = NULL		3120121	0					
ANR	3120137	IdentifierDeclType	OwnedMaterials *		3120121	0					
ANR	3120138	Identifier	om		3120121	1					
ANR	3120139	AssignmentExpression	* om = NULL		3120121	2		=			
ANR	3120140	Identifier	NULL		3120121	0					
ANR	3120141	Identifier	NULL		3120121	1					
ANR	3120142	IfStatement	if ( layer == DESCENDENTS && _splices . getNumElements ( ) == 0 )		3120121	3					
ANR	3120143	Condition	layer == DESCENDENTS && _splices . getNumElements ( ) == 0	3904:5:118090:118143	3120121	0	True				
ANR	3120144	AndExpression	layer == DESCENDENTS && _splices . getNumElements ( ) == 0		3120121	0		&&			
ANR	3120145	EqualityExpression	layer == DESCENDENTS		3120121	0		==			
ANR	3120146	Identifier	layer		3120121	0					
ANR	3120147	Identifier	DESCENDENTS		3120121	1					
ANR	3120148	EqualityExpression	_splices . getNumElements ( ) == 0		3120121	1		==			
ANR	3120149	CallExpression	_splices . getNumElements ( )		3120121	0					
ANR	3120150	Callee	_splices . getNumElements		3120121	0					
ANR	3120151	MemberAccess	_splices . getNumElements		3120121	0					
ANR	3120152	Identifier	_splices		3120121	0					
ANR	3120153	Identifier	getNumElements		3120121	1					
ANR	3120154	ArgumentList			3120121	1					
ANR	3120155	PrimaryExpression	0		3120121	1					
ANR	3120156	CompoundStatement		7:61:205:205	3120121	1					
ANR	3120157	ReturnStatement	return RelinquishNodeOwnership ( ) ;	3905:2:118150:118182	3120121	0	True				
ANR	3120158	CallExpression	RelinquishNodeOwnership ( )		3120121	0					
ANR	3120159	Callee	RelinquishNodeOwnership		3120121	0					
ANR	3120160	Identifier	RelinquishNodeOwnership		3120121	0					
ANR	3120161	ArgumentList			3120121	1					
ANR	3120162	ExpressionStatement	_splices . startIterations ( )	3909:1:118256:118282	3120121	4	True				
ANR	3120163	CallExpression	_splices . startIterations ( )		3120121	0					
ANR	3120164	Callee	_splices . startIterations		3120121	0					
ANR	3120165	MemberAccess	_splices . startIterations		3120121	0					
ANR	3120166	Identifier	_splices		3120121	0					
ANR	3120167	Identifier	startIterations		3120121	1					
ANR	3120168	ArgumentList			3120121	1					
ANR	3120169	WhileStatement	"while ( _splices . iterate ( key , splice ) )"		3120121	5					
ANR	3120170	Condition	"_splices . iterate ( key , splice )"	3910:7:118291:118319	3120121	0	True				
ANR	3120171	CallExpression	"_splices . iterate ( key , splice )"		3120121	0					
ANR	3120172	Callee	_splices . iterate		3120121	0					
ANR	3120173	MemberAccess	_splices . iterate		3120121	0					
ANR	3120174	Identifier	_splices		3120121	0					
ANR	3120175	Identifier	iterate		3120121	1					
ANR	3120176	ArgumentList	key		3120121	1					
ANR	3120177	Argument	key		3120121	0					
ANR	3120178	Identifier	key		3120121	0					
ANR	3120179	Argument	splice		3120121	1					
ANR	3120180	Identifier	splice		3120121	0					
ANR	3120181	CompoundStatement		13:38:381:381	3120121	1					
ANR	3120182	ExpressionStatement	"debug_printf ( DEBUG_DEBUG_1 , ""Lifting splice %s\\n"" , key . Value ( ) )"	3912:2:118327:118390	3120121	0	True				
ANR	3120183	CallExpression	"debug_printf ( DEBUG_DEBUG_1 , ""Lifting splice %s\\n"" , key . Value ( ) )"		3120121	0					
ANR	3120184	Callee	debug_printf		3120121	0					
ANR	3120185	Identifier	debug_printf		3120121	0					
ANR	3120186	ArgumentList	DEBUG_DEBUG_1		3120121	1					
ANR	3120187	Argument	DEBUG_DEBUG_1		3120121	0					
ANR	3120188	Identifier	DEBUG_DEBUG_1		3120121	0					
ANR	3120189	Argument	"""Lifting splice %s\\n"""		3120121	1					
ANR	3120190	PrimaryExpression	"""Lifting splice %s\\n"""		3120121	0					
ANR	3120191	Argument	key . Value ( )		3120121	2					
ANR	3120192	CallExpression	key . Value ( )		3120121	0					
ANR	3120193	Callee	key . Value		3120121	0					
ANR	3120194	MemberAccess	key . Value		3120121	0					
ANR	3120195	Identifier	key		3120121	0					
ANR	3120196	Identifier	Value		3120121	1					
ANR	3120197	ArgumentList			3120121	1					
ANR	3120198	ExpressionStatement	om = splice -> LiftSplices ( DESCENDENTS )	3913:2:118394:118431	3120121	1	True				
ANR	3120199	AssignmentExpression	om = splice -> LiftSplices ( DESCENDENTS )		3120121	0		=			
ANR	3120200	Identifier	om		3120121	0					
ANR	3120201	CallExpression	splice -> LiftSplices ( DESCENDENTS )		3120121	1					
ANR	3120202	Callee	splice -> LiftSplices		3120121	0					
ANR	3120203	PtrMemberAccess	splice -> LiftSplices		3120121	0					
ANR	3120204	Identifier	splice		3120121	0					
ANR	3120205	Identifier	LiftSplices		3120121	1					
ANR	3120206	ArgumentList	DESCENDENTS		3120121	1					
ANR	3120207	Argument	DESCENDENTS		3120121	0					
ANR	3120208	Identifier	DESCENDENTS		3120121	0					
ANR	3120209	ExpressionStatement	"AssumeOwnershipofNodes ( key , om )"	3915:2:118501:118532	3120121	2	True				
ANR	3120210	CallExpression	"AssumeOwnershipofNodes ( key , om )"		3120121	0					
ANR	3120211	Callee	AssumeOwnershipofNodes		3120121	0					
ANR	3120212	Identifier	AssumeOwnershipofNodes		3120121	0					
ANR	3120213	ArgumentList	key		3120121	1					
ANR	3120214	Argument	key		3120121	0					
ANR	3120215	Identifier	key		3120121	0					
ANR	3120216	Argument	om		3120121	1					
ANR	3120217	Identifier	om		3120121	0					
ANR	3120218	Statement	delete	3916:2:118536:118541	3120121	3	True				
ANR	3120219	ExpressionStatement	om	3916:9:118543:118545	3120121	4	True				
ANR	3120220	Identifier	om		3120121	0					
ANR	3120221	ExpressionStatement	_splices . startIterations ( )	3920:1:118580:118606	3120121	6	True				
ANR	3120222	CallExpression	_splices . startIterations ( )		3120121	0					
ANR	3120223	Callee	_splices . startIterations		3120121	0					
ANR	3120224	MemberAccess	_splices . startIterations		3120121	0					
ANR	3120225	Identifier	_splices		3120121	0					
ANR	3120226	Identifier	startIterations		3120121	1					
ANR	3120227	ArgumentList			3120121	1					
ANR	3120228	WhileStatement	"while ( _splices . iterate ( key , splice ) )"		3120121	7					
ANR	3120229	Condition	"_splices . iterate ( key , splice )"	3921:7:118615:118643	3120121	0	True				
ANR	3120230	CallExpression	"_splices . iterate ( key , splice )"		3120121	0					
ANR	3120231	Callee	_splices . iterate		3120121	0					
ANR	3120232	MemberAccess	_splices . iterate		3120121	0					
ANR	3120233	Identifier	_splices		3120121	0					
ANR	3120234	Identifier	iterate		3120121	1					
ANR	3120235	ArgumentList	key		3120121	1					
ANR	3120236	Argument	key		3120121	0					
ANR	3120237	Identifier	key		3120121	0					
ANR	3120238	Argument	splice		3120121	1					
ANR	3120239	Identifier	splice		3120121	0					
ANR	3120240	CompoundStatement		24:38:705:705	3120121	1					
ANR	3120241	ExpressionStatement	_splices . remove ( key )	3922:2:118650:118670	3120121	0	True				
ANR	3120242	CallExpression	_splices . remove ( key )		3120121	0					
ANR	3120243	Callee	_splices . remove		3120121	0					
ANR	3120244	MemberAccess	_splices . remove		3120121	0					
ANR	3120245	Identifier	_splices		3120121	0					
ANR	3120246	Identifier	remove		3120121	1					
ANR	3120247	ArgumentList	key		3120121	1					
ANR	3120248	Argument	key		3120121	0					
ANR	3120249	Identifier	key		3120121	0					
ANR	3120250	Statement	delete	3923:2:118674:118679	3120121	1	True				
ANR	3120251	ExpressionStatement	splice	3923:9:118681:118687	3120121	2	True				
ANR	3120252	Identifier	splice		3120121	0					
ANR	3120253	ExpressionStatement	PropogateDirectoryToAllNodes ( )	3927:1:118746:118776	3120121	8	True				
ANR	3120254	CallExpression	PropogateDirectoryToAllNodes ( )		3120121	0					
ANR	3120255	Callee	PropogateDirectoryToAllNodes		3120121	0					
ANR	3120256	Identifier	PropogateDirectoryToAllNodes		3120121	0					
ANR	3120257	ArgumentList			3120121	1					
ANR	3120258	ReturnStatement	return NULL ;	3930:1:118804:118815	3120121	9	True				
ANR	3120259	Identifier	NULL		3120121	0					
ANR	3120260	ReturnType	OwnedMaterials *		3120121	1					
ANR	3120261	Identifier	Dag :: LiftSplices		3120121	2					
ANR	3120262	ParameterList	SpliceLayer layer		3120121	3					
ANR	3120263	Parameter	SpliceLayer layer	3897:17:117921:117937	3120121	0	True				
ANR	3120264	ParameterType	SpliceLayer		3120121	0					
ANR	3120265	Identifier	layer		3120121	1					
ANR	3120266	CFGEntryNode	ENTRY		3120121		True				
ANR	3120267	CFGExitNode	EXIT		3120121		True				
ANR	3120268	Symbol	* splice		3120121						
ANR	3120269	Symbol	DESCENDENTS		3120121						
ANR	3120270	Symbol	NULL		3120121						
ANR	3120271	Symbol	splice		3120121						
ANR	3120272	Symbol	_splices		3120121						
ANR	3120273	Symbol	RelinquishNodeOwnership		3120121						
ANR	3120274	Symbol	splice -> LiftSplices		3120121						
ANR	3120275	Symbol	layer		3120121						
ANR	3120276	Symbol	_splices . iterate		3120121						
ANR	3120277	Symbol	key . Value		3120121						
ANR	3120278	Symbol	_splices . getNumElements		3120121						
ANR	3120279	Symbol	DEBUG_DEBUG_1		3120121						
ANR	3120280	Symbol	key		3120121						
ANR	3120281	Symbol	om		3120121						
ANR	3120282	Function	Dag :: LiftChildSplices	3934:0:118898:119334							
ANR	3120283	FunctionDef	Dag :: LiftChildSplices ()		3120282	0					
ANR	3120284	CompoundStatement		3936:0:118931:119334	3120282	0					
ANR	3120285	IdentifierDeclStatement	MyString key ;	3937:1:118934:118946	3120282	0	True				
ANR	3120286	IdentifierDecl	key		3120282	0					
ANR	3120287	IdentifierDeclType	MyString		3120282	0					
ANR	3120288	Identifier	key		3120282	1					
ANR	3120289	IdentifierDeclStatement	Dag * splice = NULL ;	3938:1:118949:118967	3120282	1	True				
ANR	3120290	IdentifierDecl	* splice = NULL		3120282	0					
ANR	3120291	IdentifierDeclType	Dag *		3120282	0					
ANR	3120292	Identifier	splice		3120282	1					
ANR	3120293	AssignmentExpression	* splice = NULL		3120282	2		=			
ANR	3120294	Identifier	NULL		3120282	0					
ANR	3120295	Identifier	NULL		3120282	1					
ANR	3120296	ExpressionStatement	"debug_printf ( DEBUG_DEBUG_1 , ""Lifting child splices of %s...\\n"" , _spliceScope . Value ( ) )"	3940:1:118971:119060	3120282	2	True				
ANR	3120297	CallExpression	"debug_printf ( DEBUG_DEBUG_1 , ""Lifting child splices of %s...\\n"" , _spliceScope . Value ( ) )"		3120282	0					
ANR	3120298	Callee	debug_printf		3120282	0					
ANR	3120299	Identifier	debug_printf		3120282	0					
ANR	3120300	ArgumentList	DEBUG_DEBUG_1		3120282	1					
ANR	3120301	Argument	DEBUG_DEBUG_1		3120282	0					
ANR	3120302	Identifier	DEBUG_DEBUG_1		3120282	0					
ANR	3120303	Argument	"""Lifting child splices of %s...\\n"""		3120282	1					
ANR	3120304	PrimaryExpression	"""Lifting child splices of %s...\\n"""		3120282	0					
ANR	3120305	Argument	_spliceScope . Value ( )		3120282	2					
ANR	3120306	CallExpression	_spliceScope . Value ( )		3120282	0					
ANR	3120307	Callee	_spliceScope . Value		3120282	0					
ANR	3120308	MemberAccess	_spliceScope . Value		3120282	0					
ANR	3120309	Identifier	_spliceScope		3120282	0					
ANR	3120310	Identifier	Value		3120282	1					
ANR	3120311	ArgumentList			3120282	1					
ANR	3120312	ExpressionStatement	_splices . startIterations ( )	3942:1:119063:119089	3120282	3	True				
ANR	3120313	CallExpression	_splices . startIterations ( )		3120282	0					
ANR	3120314	Callee	_splices . startIterations		3120282	0					
ANR	3120315	MemberAccess	_splices . startIterations		3120282	0					
ANR	3120316	Identifier	_splices		3120282	0					
ANR	3120317	Identifier	startIterations		3120282	1					
ANR	3120318	ArgumentList			3120282	1					
ANR	3120319	WhileStatement	"while ( _splices . iterate ( key , splice ) )"		3120282	4					
ANR	3120320	Condition	"_splices . iterate ( key , splice )"	3943:8:119099:119127	3120282	0	True				
ANR	3120321	CallExpression	"_splices . iterate ( key , splice )"		3120282	0					
ANR	3120322	Callee	_splices . iterate		3120282	0					
ANR	3120323	MemberAccess	_splices . iterate		3120282	0					
ANR	3120324	Identifier	_splices		3120282	0					
ANR	3120325	Identifier	iterate		3120282	1					
ANR	3120326	ArgumentList	key		3120282	1					
ANR	3120327	Argument	key		3120282	0					
ANR	3120328	Identifier	key		3120282	0					
ANR	3120329	Argument	splice		3120282	1					
ANR	3120330	Identifier	splice		3120282	0					
ANR	3120331	CompoundStatement		8:40:199:199	3120282	1					
ANR	3120332	ExpressionStatement	"debug_printf ( DEBUG_DEBUG_1 , ""Lifting child splice: %s\\n"" , key . Value ( ) )"	3944:2:119135:119205	3120282	0	True				
ANR	3120333	CallExpression	"debug_printf ( DEBUG_DEBUG_1 , ""Lifting child splice: %s\\n"" , key . Value ( ) )"		3120282	0					
ANR	3120334	Callee	debug_printf		3120282	0					
ANR	3120335	Identifier	debug_printf		3120282	0					
ANR	3120336	ArgumentList	DEBUG_DEBUG_1		3120282	1					
ANR	3120337	Argument	DEBUG_DEBUG_1		3120282	0					
ANR	3120338	Identifier	DEBUG_DEBUG_1		3120282	0					
ANR	3120339	Argument	"""Lifting child splice: %s\\n"""		3120282	1					
ANR	3120340	PrimaryExpression	"""Lifting child splice: %s\\n"""		3120282	0					
ANR	3120341	Argument	key . Value ( )		3120282	2					
ANR	3120342	CallExpression	key . Value ( )		3120282	0					
ANR	3120343	Callee	key . Value		3120282	0					
ANR	3120344	MemberAccess	key . Value		3120282	0					
ANR	3120345	Identifier	key		3120282	0					
ANR	3120346	Identifier	Value		3120282	1					
ANR	3120347	ArgumentList			3120282	1					
ANR	3120348	ExpressionStatement	splice -> LiftSplices ( SELF )	3945:2:119209:119234	3120282	1	True				
ANR	3120349	CallExpression	splice -> LiftSplices ( SELF )		3120282	0					
ANR	3120350	Callee	splice -> LiftSplices		3120282	0					
ANR	3120351	PtrMemberAccess	splice -> LiftSplices		3120282	0					
ANR	3120352	Identifier	splice		3120282	0					
ANR	3120353	Identifier	LiftSplices		3120282	1					
ANR	3120354	ArgumentList	SELF		3120282	1					
ANR	3120355	Argument	SELF		3120282	0					
ANR	3120356	Identifier	SELF		3120282	0					
ANR	3120357	ExpressionStatement	"debug_printf ( DEBUG_DEBUG_1 , ""Done lifting child splices of %s.\\n"" , _spliceScope . Value ( ) )"	3947:1:119240:119332	3120282	5	True				
ANR	3120358	CallExpression	"debug_printf ( DEBUG_DEBUG_1 , ""Done lifting child splices of %s.\\n"" , _spliceScope . Value ( ) )"		3120282	0					
ANR	3120359	Callee	debug_printf		3120282	0					
ANR	3120360	Identifier	debug_printf		3120282	0					
ANR	3120361	ArgumentList	DEBUG_DEBUG_1		3120282	1					
ANR	3120362	Argument	DEBUG_DEBUG_1		3120282	0					
ANR	3120363	Identifier	DEBUG_DEBUG_1		3120282	0					
ANR	3120364	Argument	"""Done lifting child splices of %s.\\n"""		3120282	1					
ANR	3120365	PrimaryExpression	"""Done lifting child splices of %s.\\n"""		3120282	0					
ANR	3120366	Argument	_spliceScope . Value ( )		3120282	2					
ANR	3120367	CallExpression	_spliceScope . Value ( )		3120282	0					
ANR	3120368	Callee	_spliceScope . Value		3120282	0					
ANR	3120369	MemberAccess	_spliceScope . Value		3120282	0					
ANR	3120370	Identifier	_spliceScope		3120282	0					
ANR	3120371	Identifier	Value		3120282	1					
ANR	3120372	ArgumentList			3120282	1					
ANR	3120373	ReturnType	void		3120282	1					
ANR	3120374	Identifier	Dag :: LiftChildSplices		3120282	2					
ANR	3120375	ParameterList			3120282	3					
ANR	3120376	CFGEntryNode	ENTRY		3120282		True				
ANR	3120377	CFGExitNode	EXIT		3120282		True				
ANR	3120378	Symbol	NULL		3120282						
ANR	3120379	Symbol	splice		3120282						
ANR	3120380	Symbol	_splices		3120282						
ANR	3120381	Symbol	SELF		3120282						
ANR	3120382	Symbol	DEBUG_DEBUG_1		3120282						
ANR	3120383	Symbol	_spliceScope . Value		3120282						
ANR	3120384	Symbol	key		3120282						
ANR	3120385	Symbol	_spliceScope		3120282						
ANR	3120386	Symbol	_splices . iterate		3120282						
ANR	3120387	Symbol	key . Value		3120282						
ANR	3120388	Function	Dag :: AssumeOwnershipofNodes	3957:0:119679:123316							
ANR	3120389	FunctionDef	"Dag :: AssumeOwnershipofNodes (const MyString & spliceName , OwnedMaterials * om)"		3120388	0					
ANR	3120390	CompoundStatement		3959:0:119760:123316	3120388	0					
ANR	3120391	IdentifierDeclStatement	Job * job = NULL ;	3960:1:119763:119778	3120388	0	True				
ANR	3120392	IdentifierDecl	* job = NULL		3120388	0					
ANR	3120393	IdentifierDeclType	Job *		3120388	0					
ANR	3120394	Identifier	job		3120388	1					
ANR	3120395	AssignmentExpression	* job = NULL		3120388	2		=			
ANR	3120396	Identifier	NULL		3120388	0					
ANR	3120397	Identifier	NULL		3120388	1					
ANR	3120398	IdentifierDeclStatement	int i ;	3961:1:119781:119786	3120388	1	True				
ANR	3120399	IdentifierDecl	i		3120388	0					
ANR	3120400	IdentifierDeclType	int		3120388	0					
ANR	3120401	Identifier	i		3120388	1					
ANR	3120402	IdentifierDeclStatement	MyString key ;	3962:1:119789:119801	3120388	2	True				
ANR	3120403	IdentifierDecl	key		3120388	0					
ANR	3120404	IdentifierDeclType	MyString		3120388	0					
ANR	3120405	Identifier	key		3120388	1					
ANR	3120406	IdentifierDeclStatement	JobID_t key_id ;	3963:1:119804:119818	3120388	3	True				
ANR	3120407	IdentifierDecl	key_id		3120388	0					
ANR	3120408	IdentifierDeclType	JobID_t		3120388	0					
ANR	3120409	Identifier	key_id		3120388	1					
ANR	3120410	IdentifierDeclStatement	ExtArray < Job * > * nodes = om -> nodes ;	3965:1:119822:119855	3120388	4	True				
ANR	3120411	IdentifierDecl	* nodes = om -> nodes		3120388	0					
ANR	3120412	IdentifierDeclType	ExtArray < Job * > *		3120388	0					
ANR	3120413	Identifier	nodes		3120388	1					
ANR	3120414	AssignmentExpression	* nodes = om -> nodes		3120388	2		=			
ANR	3120415	Identifier	nodes		3120388	0					
ANR	3120416	PtrMemberAccess	om -> nodes		3120388	1					
ANR	3120417	Identifier	om		3120388	0					
ANR	3120418	Identifier	nodes		3120388	1					
ANR	3120419	ExpressionStatement	om -> throttles -> StartIterations ( )	3975:1:120203:120235	3120388	5	True				
ANR	3120420	CallExpression	om -> throttles -> StartIterations ( )		3120388	0					
ANR	3120421	Callee	om -> throttles -> StartIterations		3120388	0					
ANR	3120422	PtrMemberAccess	om -> throttles -> StartIterations		3120388	0					
ANR	3120423	PtrMemberAccess	om -> throttles		3120388	0					
ANR	3120424	Identifier	om		3120388	0					
ANR	3120425	Identifier	throttles		3120388	1					
ANR	3120426	Identifier	StartIterations		3120388	1					
ANR	3120427	ArgumentList			3120388	1					
ANR	3120428	IdentifierDeclStatement	ThrottleByCategory :: ThrottleInfo * spliceThrottle ;	3976:1:120238:120286	3120388	6	True				
ANR	3120429	IdentifierDecl	* spliceThrottle		3120388	0					
ANR	3120430	IdentifierDeclType	ThrottleByCategory :: ThrottleInfo *		3120388	0					
ANR	3120431	Identifier	spliceThrottle		3120388	1					
ANR	3120432	WhileStatement	while ( om -> throttles -> Iterate ( spliceThrottle ) )		3120388	7					
ANR	3120433	Condition	om -> throttles -> Iterate ( spliceThrottle )	3977:9:120297:120336	3120388	0	True				
ANR	3120434	CallExpression	om -> throttles -> Iterate ( spliceThrottle )		3120388	0					
ANR	3120435	Callee	om -> throttles -> Iterate		3120388	0					
ANR	3120436	PtrMemberAccess	om -> throttles -> Iterate		3120388	0					
ANR	3120437	PtrMemberAccess	om -> throttles		3120388	0					
ANR	3120438	Identifier	om		3120388	0					
ANR	3120439	Identifier	throttles		3120388	1					
ANR	3120440	Identifier	Iterate		3120388	1					
ANR	3120441	ArgumentList	spliceThrottle		3120388	1					
ANR	3120442	Argument	spliceThrottle		3120388	0					
ANR	3120443	Identifier	spliceThrottle		3120388	0					
ANR	3120444	CompoundStatement		20:2:583:700	3120388	1					
ANR	3120445	IdentifierDeclStatement	ThrottleByCategory :: ThrottleInfo * mainThrottle = _catThrottles . GetThrottleInfo ( spliceThrottle -> _category ) ;	3978:2:120344:120461	3120388	0	True				
ANR	3120446	IdentifierDecl	* mainThrottle = _catThrottles . GetThrottleInfo ( spliceThrottle -> _category )		3120388	0					
ANR	3120447	IdentifierDeclType	ThrottleByCategory :: ThrottleInfo *		3120388	0					
ANR	3120448	Identifier	mainThrottle		3120388	1					
ANR	3120449	AssignmentExpression	* mainThrottle = _catThrottles . GetThrottleInfo ( spliceThrottle -> _category )		3120388	2		=			
ANR	3120450	Identifier	mainThrottle		3120388	0					
ANR	3120451	CallExpression	_catThrottles . GetThrottleInfo ( spliceThrottle -> _category )		3120388	1					
ANR	3120452	Callee	_catThrottles . GetThrottleInfo		3120388	0					
ANR	3120453	MemberAccess	_catThrottles . GetThrottleInfo		3120388	0					
ANR	3120454	Identifier	_catThrottles		3120388	0					
ANR	3120455	Identifier	GetThrottleInfo		3120388	1					
ANR	3120456	ArgumentList	spliceThrottle -> _category		3120388	1					
ANR	3120457	Argument	spliceThrottle -> _category		3120388	0					
ANR	3120458	PtrMemberAccess	spliceThrottle -> _category		3120388	0					
ANR	3120459	Identifier	spliceThrottle		3120388	0					
ANR	3120460	Identifier	_category		3120388	1					
ANR	3120461	IfStatement	if ( mainThrottle && mainThrottle -> isSet ( ) && mainThrottle -> _maxJobs != spliceThrottle -> _maxJobs )		3120388	1					
ANR	3120462	Condition	mainThrottle && mainThrottle -> isSet ( ) && mainThrottle -> _maxJobs != spliceThrottle -> _maxJobs	3981:7:120470:120565	3120388	0	True				
ANR	3120463	AndExpression	mainThrottle && mainThrottle -> isSet ( ) && mainThrottle -> _maxJobs != spliceThrottle -> _maxJobs		3120388	0		&&			
ANR	3120464	Identifier	mainThrottle		3120388	0					
ANR	3120465	AndExpression	mainThrottle -> isSet ( ) && mainThrottle -> _maxJobs != spliceThrottle -> _maxJobs		3120388	1		&&			
ANR	3120466	CallExpression	mainThrottle -> isSet ( )		3120388	0					
ANR	3120467	Callee	mainThrottle -> isSet		3120388	0					
ANR	3120468	PtrMemberAccess	mainThrottle -> isSet		3120388	0					
ANR	3120469	Identifier	mainThrottle		3120388	0					
ANR	3120470	Identifier	isSet		3120388	1					
ANR	3120471	ArgumentList			3120388	1					
ANR	3120472	EqualityExpression	mainThrottle -> _maxJobs != spliceThrottle -> _maxJobs		3120388	1		!=			
ANR	3120473	PtrMemberAccess	mainThrottle -> _maxJobs		3120388	0					
ANR	3120474	Identifier	mainThrottle		3120388	0					
ANR	3120475	Identifier	_maxJobs		3120388	1					
ANR	3120476	PtrMemberAccess	spliceThrottle -> _maxJobs		3120388	1					
ANR	3120477	Identifier	spliceThrottle		3120388	0					
ANR	3120478	Identifier	_maxJobs		3120388	1					
ANR	3120479	CompoundStatement		24:58:808:808	3120388	1					
ANR	3120480	Statement	debug_printf	3983:3:120574:120585	3120388	0	True				
ANR	3120481	Statement	(	3983:15:120586:120586	3120388	1	True				
ANR	3120482	Statement	DEBUG_NORMAL	3983:17:120588:120599	3120388	2	True				
ANR	3120483	Statement	","	3983:29:120600:120600	3120388	3	True				
ANR	3120484	Statement	"""Warning: higher-level (%s) """	3983:31:120602:120630	3120388	4	True				
ANR	3120485	Statement	"""maxjobs value of %d for category %s overrides """	3984:6:120638:120685	3120388	5	True				
ANR	3120486	Statement	"""splice %s value of %d\\n"""	3985:6:120693:120717	3120388	6	True				
ANR	3120487	Statement	","	3985:31:120718:120718	3120388	7	True				
ANR	3120488	Statement	_spliceScope	3985:33:120720:120731	3120388	8	True				
ANR	3120489	Statement	.	3985:45:120732:120732	3120388	9	True				
ANR	3120490	Statement	Value	3985:46:120733:120737	3120388	10	True				
ANR	3120491	Statement	(	3985:51:120738:120738	3120388	11	True				
ANR	3120492	Statement	)	3985:52:120739:120739	3120388	12	True				
ANR	3120493	Statement	","	3985:53:120740:120740	3120388	13	True				
ANR	3120494	Statement	mainThrottle	3986:6:120748:120759	3120388	14	True				
ANR	3120495	Statement	->	3986:18:120760:120761	3120388	15	True				
ANR	3120496	Statement	_maxJobs	3986:20:120762:120769	3120388	16	True				
ANR	3120497	Statement	","	3986:28:120770:120770	3120388	17	True				
ANR	3120498	Statement	mainThrottle	3987:6:120778:120789	3120388	18	True				
ANR	3120499	Statement	->	3987:18:120790:120791	3120388	19	True				
ANR	3120500	Statement	_category	3987:20:120792:120800	3120388	20	True				
ANR	3120501	Statement	->	3987:29:120801:120802	3120388	21	True				
ANR	3120502	Statement	Value	3987:31:120803:120807	3120388	22	True				
ANR	3120503	Statement	(	3987:36:120808:120808	3120388	23	True				
ANR	3120504	Statement	)	3987:37:120809:120809	3120388	24	True				
ANR	3120505	Statement	","	3987:38:120810:120810	3120388	25	True				
ANR	3120506	Statement	spliceName	3988:6:120818:120827	3120388	26	True				
ANR	3120507	Statement	.	3988:16:120828:120828	3120388	27	True				
ANR	3120508	Statement	Value	3988:17:120829:120833	3120388	28	True				
ANR	3120509	Statement	(	3988:22:120834:120834	3120388	29	True				
ANR	3120510	Statement	)	3988:23:120835:120835	3120388	30	True				
ANR	3120511	Statement	","	3988:24:120836:120836	3120388	31	True				
ANR	3120512	Statement	spliceThrottle	3988:26:120838:120851	3120388	32	True				
ANR	3120513	Statement	->	3988:40:120852:120853	3120388	33	True				
ANR	3120514	Statement	_maxJobs	3988:42:120854:120861	3120388	34	True				
ANR	3120515	Statement	)	3988:51:120863:120863	3120388	35	True				
ANR	3120516	ExpressionStatement		3988:52:120864:120864	3120388	36	True				
ANR	3120517	ExpressionStatement	check_warning_strictness ( DAG_STRICT_2 )	3989:3:120869:120909	3120388	37	True				
ANR	3120518	CallExpression	check_warning_strictness ( DAG_STRICT_2 )		3120388	0					
ANR	3120519	Callee	check_warning_strictness		3120388	0					
ANR	3120520	Identifier	check_warning_strictness		3120388	0					
ANR	3120521	ArgumentList	DAG_STRICT_2		3120388	1					
ANR	3120522	Argument	DAG_STRICT_2		3120388	0					
ANR	3120523	Identifier	DAG_STRICT_2		3120388	0					
ANR	3120524	ElseStatement	else		3120388	0					
ANR	3120525	CompoundStatement		32:9:1159:1159	3120388	0					
ANR	3120526	ExpressionStatement	"_catThrottles . SetThrottle ( spliceThrottle -> _category , spliceThrottle -> _maxJobs )"	3991:3:120925:121011	3120388	0	True				
ANR	3120527	CallExpression	"_catThrottles . SetThrottle ( spliceThrottle -> _category , spliceThrottle -> _maxJobs )"		3120388	0					
ANR	3120528	Callee	_catThrottles . SetThrottle		3120388	0					
ANR	3120529	MemberAccess	_catThrottles . SetThrottle		3120388	0					
ANR	3120530	Identifier	_catThrottles		3120388	0					
ANR	3120531	Identifier	SetThrottle		3120388	1					
ANR	3120532	ArgumentList	spliceThrottle -> _category		3120388	1					
ANR	3120533	Argument	spliceThrottle -> _category		3120388	0					
ANR	3120534	PtrMemberAccess	spliceThrottle -> _category		3120388	0					
ANR	3120535	Identifier	spliceThrottle		3120388	0					
ANR	3120536	Identifier	_category		3120388	1					
ANR	3120537	Argument	spliceThrottle -> _maxJobs		3120388	1					
ANR	3120538	PtrMemberAccess	spliceThrottle -> _maxJobs		3120388	0					
ANR	3120539	Identifier	spliceThrottle		3120388	0					
ANR	3120540	Identifier	_maxJobs		3120388	1					
ANR	3120541	ForStatement	for ( i = 0 ; i < nodes -> length ( ) ; i ++ )		3120388	8					
ANR	3120542	ForInit	i = 0 ;	4000:6:121202:121207	3120388	0	True				
ANR	3120543	AssignmentExpression	i = 0		3120388	0		=			
ANR	3120544	Identifier	i		3120388	0					
ANR	3120545	PrimaryExpression	0		3120388	1					
ANR	3120546	Condition	i < nodes -> length ( )	4000:13:121209:121227	3120388	1	True				
ANR	3120547	RelationalExpression	i < nodes -> length ( )		3120388	0		<			
ANR	3120548	Identifier	i		3120388	0					
ANR	3120549	CallExpression	nodes -> length ( )		3120388	1					
ANR	3120550	Callee	nodes -> length		3120388	0					
ANR	3120551	PtrMemberAccess	nodes -> length		3120388	0					
ANR	3120552	Identifier	nodes		3120388	0					
ANR	3120553	Identifier	length		3120388	1					
ANR	3120554	ArgumentList			3120388	1					
ANR	3120555	PostIncDecOperationExpression	i ++	4000:34:121230:121232	3120388	2	True				
ANR	3120556	Identifier	i		3120388	0					
ANR	3120557	IncDec	++		3120388	1					
ANR	3120558	CompoundStatement		42:39:1474:1474	3120388	3					
ANR	3120559	IfStatement	if ( ( * nodes ) [ i ] -> NumParents ( ) == 0 )		3120388	0					
ANR	3120560	Condition	( * nodes ) [ i ] -> NumParents ( ) == 0	4001:6:121243:121272	3120388	0	True				
ANR	3120561	EqualityExpression	( * nodes ) [ i ] -> NumParents ( ) == 0		3120388	0		==			
ANR	3120562	CallExpression	( * nodes ) [ i ] -> NumParents ( )		3120388	0					
ANR	3120563	Callee	( * nodes ) [ i ] -> NumParents		3120388	0					
ANR	3120564	PtrMemberAccess	( * nodes ) [ i ] -> NumParents		3120388	0					
ANR	3120565	ArrayIndexing	( * nodes ) [ i ]		3120388	0					
ANR	3120566	UnaryOperationExpression	* nodes		3120388	0					
ANR	3120567	UnaryOperator	*		3120388	0					
ANR	3120568	Identifier	nodes		3120388	1					
ANR	3120569	Identifier	i		3120388	1					
ANR	3120570	Identifier	NumParents		3120388	1					
ANR	3120571	ArgumentList			3120388	1					
ANR	3120572	PrimaryExpression	0		3120388	1					
ANR	3120573	CompoundStatement		43:38:1514:1514	3120388	1					
ANR	3120574	ExpressionStatement	_splice_initial_nodes . add ( ( * nodes ) [ i ] )	4002:3:121280:121318	3120388	0	True				
ANR	3120575	CallExpression	_splice_initial_nodes . add ( ( * nodes ) [ i ] )		3120388	0					
ANR	3120576	Callee	_splice_initial_nodes . add		3120388	0					
ANR	3120577	MemberAccess	_splice_initial_nodes . add		3120388	0					
ANR	3120578	Identifier	_splice_initial_nodes		3120388	0					
ANR	3120579	Identifier	add		3120388	1					
ANR	3120580	ArgumentList	( * nodes ) [ i ]		3120388	1					
ANR	3120581	Argument	( * nodes ) [ i ]		3120388	0					
ANR	3120582	ArrayIndexing	( * nodes ) [ i ]		3120388	0					
ANR	3120583	UnaryOperationExpression	* nodes		3120388	0					
ANR	3120584	UnaryOperator	*		3120388	0					
ANR	3120585	Identifier	nodes		3120388	1					
ANR	3120586	Identifier	i		3120388	1					
ANR	3120587	ContinueStatement	continue ;	4003:3:121323:121331	3120388	1	True				
ANR	3120588	IfStatement	if ( ( * nodes ) [ i ] -> NumChildren ( ) == 0 )		3120388	1					
ANR	3120589	Condition	( * nodes ) [ i ] -> NumChildren ( ) == 0	4005:6:121343:121373	3120388	0	True				
ANR	3120590	EqualityExpression	( * nodes ) [ i ] -> NumChildren ( ) == 0		3120388	0		==			
ANR	3120591	CallExpression	( * nodes ) [ i ] -> NumChildren ( )		3120388	0					
ANR	3120592	Callee	( * nodes ) [ i ] -> NumChildren		3120388	0					
ANR	3120593	PtrMemberAccess	( * nodes ) [ i ] -> NumChildren		3120388	0					
ANR	3120594	ArrayIndexing	( * nodes ) [ i ]		3120388	0					
ANR	3120595	UnaryOperationExpression	* nodes		3120388	0					
ANR	3120596	UnaryOperator	*		3120388	0					
ANR	3120597	Identifier	nodes		3120388	1					
ANR	3120598	Identifier	i		3120388	1					
ANR	3120599	Identifier	NumChildren		3120388	1					
ANR	3120600	ArgumentList			3120388	1					
ANR	3120601	PrimaryExpression	0		3120388	1					
ANR	3120602	CompoundStatement		47:39:1615:1615	3120388	1					
ANR	3120603	ExpressionStatement	_splice_final_nodes . add ( ( * nodes ) [ i ] )	4006:3:121381:121417	3120388	0	True				
ANR	3120604	CallExpression	_splice_final_nodes . add ( ( * nodes ) [ i ] )		3120388	0					
ANR	3120605	Callee	_splice_final_nodes . add		3120388	0					
ANR	3120606	MemberAccess	_splice_final_nodes . add		3120388	0					
ANR	3120607	Identifier	_splice_final_nodes		3120388	0					
ANR	3120608	Identifier	add		3120388	1					
ANR	3120609	ArgumentList	( * nodes ) [ i ]		3120388	1					
ANR	3120610	Argument	( * nodes ) [ i ]		3120388	0					
ANR	3120611	ArrayIndexing	( * nodes ) [ i ]		3120388	0					
ANR	3120612	UnaryOperationExpression	* nodes		3120388	0					
ANR	3120613	UnaryOperator	*		3120388	0					
ANR	3120614	Identifier	nodes		3120388	1					
ANR	3120615	Identifier	i		3120388	1					
ANR	3120616	ForStatement	for ( i = 0 ; i < nodes -> length ( ) ; i ++ )		3120388	9					
ANR	3120617	ForInit	i = 0 ;	4013:7:121604:121609	3120388	0	True				
ANR	3120618	AssignmentExpression	i = 0		3120388	0		=			
ANR	3120619	Identifier	i		3120388	0					
ANR	3120620	PrimaryExpression	0		3120388	1					
ANR	3120621	Condition	i < nodes -> length ( )	4013:14:121611:121629	3120388	1	True				
ANR	3120622	RelationalExpression	i < nodes -> length ( )		3120388	0		<			
ANR	3120623	Identifier	i		3120388	0					
ANR	3120624	CallExpression	nodes -> length ( )		3120388	1					
ANR	3120625	Callee	nodes -> length		3120388	0					
ANR	3120626	PtrMemberAccess	nodes -> length		3120388	0					
ANR	3120627	Identifier	nodes		3120388	0					
ANR	3120628	Identifier	length		3120388	1					
ANR	3120629	ArgumentList			3120388	1					
ANR	3120630	PostIncDecOperationExpression	i ++	4013:35:121632:121634	3120388	2	True				
ANR	3120631	Identifier	i		3120388	0					
ANR	3120632	IncDec	++		3120388	1					
ANR	3120633	CompoundStatement		56:2:1881:1907	3120388	3					
ANR	3120634	IdentifierDeclStatement	Job * tmpNode = ( * nodes ) [ i ] ;	4014:2:121642:121668	3120388	0	True				
ANR	3120635	IdentifierDecl	* tmpNode = ( * nodes ) [ i ]		3120388	0					
ANR	3120636	IdentifierDeclType	Job *		3120388	0					
ANR	3120637	Identifier	tmpNode		3120388	1					
ANR	3120638	AssignmentExpression	* tmpNode = ( * nodes ) [ i ]		3120388	2		=			
ANR	3120639	Identifier	tmpNode		3120388	0					
ANR	3120640	ArrayIndexing	( * nodes ) [ i ]		3120388	1					
ANR	3120641	UnaryOperationExpression	* nodes		3120388	0					
ANR	3120642	UnaryOperator	*		3120388	0					
ANR	3120643	Identifier	nodes		3120388	1					
ANR	3120644	Identifier	i		3120388	1					
ANR	3120645	ExpressionStatement	spliceThrottle = tmpNode -> GetThrottleInfo ( )	4015:2:121672:121715	3120388	1	True				
ANR	3120646	AssignmentExpression	spliceThrottle = tmpNode -> GetThrottleInfo ( )		3120388	0		=			
ANR	3120647	Identifier	spliceThrottle		3120388	0					
ANR	3120648	CallExpression	tmpNode -> GetThrottleInfo ( )		3120388	1					
ANR	3120649	Callee	tmpNode -> GetThrottleInfo		3120388	0					
ANR	3120650	PtrMemberAccess	tmpNode -> GetThrottleInfo		3120388	0					
ANR	3120651	Identifier	tmpNode		3120388	0					
ANR	3120652	Identifier	GetThrottleInfo		3120388	1					
ANR	3120653	ArgumentList			3120388	1					
ANR	3120654	IfStatement	if ( spliceThrottle != NULL )		3120388	2					
ANR	3120655	Condition	spliceThrottle != NULL	4016:7:121724:121745	3120388	0	True				
ANR	3120656	EqualityExpression	spliceThrottle != NULL		3120388	0		!=			
ANR	3120657	Identifier	spliceThrottle		3120388	0					
ANR	3120658	Identifier	NULL		3120388	1					
ANR	3120659	CompoundStatement		58:32:1988:1988	3120388	1					
ANR	3120660	ExpressionStatement	"tmpNode -> SetCategory ( spliceThrottle -> _category -> Value ( ) , _catThrottles )"	4020:3:121890:121969	3120388	0	True				
ANR	3120661	CallExpression	"tmpNode -> SetCategory ( spliceThrottle -> _category -> Value ( ) , _catThrottles )"		3120388	0					
ANR	3120662	Callee	tmpNode -> SetCategory		3120388	0					
ANR	3120663	PtrMemberAccess	tmpNode -> SetCategory		3120388	0					
ANR	3120664	Identifier	tmpNode		3120388	0					
ANR	3120665	Identifier	SetCategory		3120388	1					
ANR	3120666	ArgumentList	spliceThrottle -> _category -> Value ( )		3120388	1					
ANR	3120667	Argument	spliceThrottle -> _category -> Value ( )		3120388	0					
ANR	3120668	CallExpression	spliceThrottle -> _category -> Value ( )		3120388	0					
ANR	3120669	Callee	spliceThrottle -> _category -> Value		3120388	0					
ANR	3120670	PtrMemberAccess	spliceThrottle -> _category -> Value		3120388	0					
ANR	3120671	PtrMemberAccess	spliceThrottle -> _category		3120388	0					
ANR	3120672	Identifier	spliceThrottle		3120388	0					
ANR	3120673	Identifier	_category		3120388	1					
ANR	3120674	Identifier	Value		3120388	1					
ANR	3120675	ArgumentList			3120388	1					
ANR	3120676	Argument	_catThrottles		3120388	1					
ANR	3120677	Identifier	_catThrottles		3120388	0					
ANR	3120678	ForStatement	for ( i = 0 ; i < nodes -> length ( ) ; i ++ )		3120388	10					
ANR	3120679	ForInit	i = 0 ;	4026:6:122020:122025	3120388	0	True				
ANR	3120680	AssignmentExpression	i = 0		3120388	0		=			
ANR	3120681	Identifier	i		3120388	0					
ANR	3120682	PrimaryExpression	0		3120388	1					
ANR	3120683	Condition	i < nodes -> length ( )	4026:13:122027:122045	3120388	1	True				
ANR	3120684	RelationalExpression	i < nodes -> length ( )		3120388	0		<			
ANR	3120685	Identifier	i		3120388	0					
ANR	3120686	CallExpression	nodes -> length ( )		3120388	1					
ANR	3120687	Callee	nodes -> length		3120388	0					
ANR	3120688	PtrMemberAccess	nodes -> length		3120388	0					
ANR	3120689	Identifier	nodes		3120388	0					
ANR	3120690	Identifier	length		3120388	1					
ANR	3120691	ArgumentList			3120388	1					
ANR	3120692	PostIncDecOperationExpression	i ++	4026:34:122048:122050	3120388	2	True				
ANR	3120693	Identifier	i		3120388	0					
ANR	3120694	IncDec	++		3120388	1					
ANR	3120695	CompoundStatement		68:39:2292:2292	3120388	3					
ANR	3120696	ExpressionStatement	_jobs . Append ( ( * nodes ) [ i ] )	4027:2:122057:122082	3120388	0	True				
ANR	3120697	CallExpression	_jobs . Append ( ( * nodes ) [ i ] )		3120388	0					
ANR	3120698	Callee	_jobs . Append		3120388	0					
ANR	3120699	MemberAccess	_jobs . Append		3120388	0					
ANR	3120700	Identifier	_jobs		3120388	0					
ANR	3120701	Identifier	Append		3120388	1					
ANR	3120702	ArgumentList	( * nodes ) [ i ]		3120388	1					
ANR	3120703	Argument	( * nodes ) [ i ]		3120388	0					
ANR	3120704	ArrayIndexing	( * nodes ) [ i ]		3120388	0					
ANR	3120705	UnaryOperationExpression	* nodes		3120388	0					
ANR	3120706	UnaryOperator	*		3120388	0					
ANR	3120707	Identifier	nodes		3120388	1					
ANR	3120708	Identifier	i		3120388	1					
ANR	3120709	ForStatement	for ( i = 0 ; i < nodes -> length ( ) ; i ++ )		3120388	11					
ANR	3120710	ForInit	i = 0 ;	4031:6:122148:122153	3120388	0	True				
ANR	3120711	AssignmentExpression	i = 0		3120388	0		=			
ANR	3120712	Identifier	i		3120388	0					
ANR	3120713	PrimaryExpression	0		3120388	1					
ANR	3120714	Condition	i < nodes -> length ( )	4031:13:122155:122173	3120388	1	True				
ANR	3120715	RelationalExpression	i < nodes -> length ( )		3120388	0		<			
ANR	3120716	Identifier	i		3120388	0					
ANR	3120717	CallExpression	nodes -> length ( )		3120388	1					
ANR	3120718	Callee	nodes -> length		3120388	0					
ANR	3120719	PtrMemberAccess	nodes -> length		3120388	0					
ANR	3120720	Identifier	nodes		3120388	0					
ANR	3120721	Identifier	length		3120388	1					
ANR	3120722	ArgumentList			3120388	1					
ANR	3120723	PostIncDecOperationExpression	i ++	4031:34:122176:122178	3120388	2	True				
ANR	3120724	Identifier	i		3120388	0					
ANR	3120725	IncDec	++		3120388	1					
ANR	3120726	CompoundStatement		73:39:2420:2420	3120388	3					
ANR	3120727	ExpressionStatement	key = ( * nodes ) [ i ] -> GetJobName ( )	4032:2:122185:122216	3120388	0	True				
ANR	3120728	AssignmentExpression	key = ( * nodes ) [ i ] -> GetJobName ( )		3120388	0		=			
ANR	3120729	Identifier	key		3120388	0					
ANR	3120730	CallExpression	( * nodes ) [ i ] -> GetJobName ( )		3120388	1					
ANR	3120731	Callee	( * nodes ) [ i ] -> GetJobName		3120388	0					
ANR	3120732	PtrMemberAccess	( * nodes ) [ i ] -> GetJobName		3120388	0					
ANR	3120733	ArrayIndexing	( * nodes ) [ i ]		3120388	0					
ANR	3120734	UnaryOperationExpression	* nodes		3120388	0					
ANR	3120735	UnaryOperator	*		3120388	0					
ANR	3120736	Identifier	nodes		3120388	1					
ANR	3120737	Identifier	i		3120388	1					
ANR	3120738	Identifier	GetJobName		3120388	1					
ANR	3120739	ArgumentList			3120388	1					
ANR	3120740	ExpressionStatement	"debug_printf ( DEBUG_DEBUG_1 , ""Creating view hash fixup for: job %s\\n"" , key . Value ( ) )"	4034:2:122221:122307	3120388	1	True				
ANR	3120741	CallExpression	"debug_printf ( DEBUG_DEBUG_1 , ""Creating view hash fixup for: job %s\\n"" , key . Value ( ) )"		3120388	0					
ANR	3120742	Callee	debug_printf		3120388	0					
ANR	3120743	Identifier	debug_printf		3120388	0					
ANR	3120744	ArgumentList	DEBUG_DEBUG_1		3120388	1					
ANR	3120745	Argument	DEBUG_DEBUG_1		3120388	0					
ANR	3120746	Identifier	DEBUG_DEBUG_1		3120388	0					
ANR	3120747	Argument	"""Creating view hash fixup for: job %s\\n"""		3120388	1					
ANR	3120748	PrimaryExpression	"""Creating view hash fixup for: job %s\\n"""		3120388	0					
ANR	3120749	Argument	key . Value ( )		3120388	2					
ANR	3120750	CallExpression	key . Value ( )		3120388	0					
ANR	3120751	Callee	key . Value		3120388	0					
ANR	3120752	MemberAccess	key . Value		3120388	0					
ANR	3120753	Identifier	key		3120388	0					
ANR	3120754	Identifier	Value		3120388	1					
ANR	3120755	ArgumentList			3120388	1					
ANR	3120756	IfStatement	"if ( _nodeNameHash . insert ( key , ( * nodes ) [ i ] ) != 0 )"		3120388	2					
ANR	3120757	Condition	"_nodeNameHash . insert ( key , ( * nodes ) [ i ] ) != 0"	4037:6:122316:122358	3120388	0	True				
ANR	3120758	EqualityExpression	"_nodeNameHash . insert ( key , ( * nodes ) [ i ] ) != 0"		3120388	0		!=			
ANR	3120759	CallExpression	"_nodeNameHash . insert ( key , ( * nodes ) [ i ] )"		3120388	0					
ANR	3120760	Callee	_nodeNameHash . insert		3120388	0					
ANR	3120761	MemberAccess	_nodeNameHash . insert		3120388	0					
ANR	3120762	Identifier	_nodeNameHash		3120388	0					
ANR	3120763	Identifier	insert		3120388	1					
ANR	3120764	ArgumentList	key		3120388	1					
ANR	3120765	Argument	key		3120388	0					
ANR	3120766	Identifier	key		3120388	0					
ANR	3120767	Argument	( * nodes ) [ i ]		3120388	1					
ANR	3120768	ArrayIndexing	( * nodes ) [ i ]		3120388	0					
ANR	3120769	UnaryOperationExpression	* nodes		3120388	0					
ANR	3120770	UnaryOperator	*		3120388	0					
ANR	3120771	Identifier	nodes		3120388	1					
ANR	3120772	Identifier	i		3120388	1					
ANR	3120773	PrimaryExpression	0		3120388	1					
ANR	3120774	CompoundStatement		79:51:2600:2600	3120388	1					
ANR	3120775	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""Found name collision while taking ownership of node: %s\\n"" , key . Value ( ) )"	4038:3:122366:122474	3120388	0	True				
ANR	3120776	CallExpression	"debug_printf ( DEBUG_QUIET , ""Found name collision while taking ownership of node: %s\\n"" , key . Value ( ) )"		3120388	0					
ANR	3120777	Callee	debug_printf		3120388	0					
ANR	3120778	Identifier	debug_printf		3120388	0					
ANR	3120779	ArgumentList	DEBUG_QUIET		3120388	1					
ANR	3120780	Argument	DEBUG_QUIET		3120388	0					
ANR	3120781	Identifier	DEBUG_QUIET		3120388	0					
ANR	3120782	Argument	"""Found name collision while taking ownership of node: %s\\n"""		3120388	1					
ANR	3120783	PrimaryExpression	"""Found name collision while taking ownership of node: %s\\n"""		3120388	0					
ANR	3120784	Argument	key . Value ( )		3120388	2					
ANR	3120785	CallExpression	key . Value ( )		3120388	0					
ANR	3120786	Callee	key . Value		3120388	0					
ANR	3120787	MemberAccess	key . Value		3120388	0					
ANR	3120788	Identifier	key		3120388	0					
ANR	3120789	Identifier	Value		3120388	1					
ANR	3120790	ArgumentList			3120388	1					
ANR	3120791	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""Trying to insert key %s, node:\\n"" , key . Value ( ) )"	4041:3:122479:122557	3120388	1	True				
ANR	3120792	CallExpression	"debug_printf ( DEBUG_QUIET , ""Trying to insert key %s, node:\\n"" , key . Value ( ) )"		3120388	0					
ANR	3120793	Callee	debug_printf		3120388	0					
ANR	3120794	Identifier	debug_printf		3120388	0					
ANR	3120795	ArgumentList	DEBUG_QUIET		3120388	1					
ANR	3120796	Argument	DEBUG_QUIET		3120388	0					
ANR	3120797	Identifier	DEBUG_QUIET		3120388	0					
ANR	3120798	Argument	"""Trying to insert key %s, node:\\n"""		3120388	1					
ANR	3120799	PrimaryExpression	"""Trying to insert key %s, node:\\n"""		3120388	0					
ANR	3120800	Argument	key . Value ( )		3120388	2					
ANR	3120801	CallExpression	key . Value ( )		3120388	0					
ANR	3120802	Callee	key . Value		3120388	0					
ANR	3120803	MemberAccess	key . Value		3120388	0					
ANR	3120804	Identifier	key		3120388	0					
ANR	3120805	Identifier	Value		3120388	1					
ANR	3120806	ArgumentList			3120388	1					
ANR	3120807	ExpressionStatement	( * nodes ) [ i ] -> Dump ( this )	4043:3:122562:122587	3120388	2	True				
ANR	3120808	CallExpression	( * nodes ) [ i ] -> Dump ( this )		3120388	0					
ANR	3120809	Callee	( * nodes ) [ i ] -> Dump		3120388	0					
ANR	3120810	PtrMemberAccess	( * nodes ) [ i ] -> Dump		3120388	0					
ANR	3120811	ArrayIndexing	( * nodes ) [ i ]		3120388	0					
ANR	3120812	UnaryOperationExpression	* nodes		3120388	0					
ANR	3120813	UnaryOperator	*		3120388	0					
ANR	3120814	Identifier	nodes		3120388	1					
ANR	3120815	Identifier	i		3120388	1					
ANR	3120816	Identifier	Dump		3120388	1					
ANR	3120817	ArgumentList	this		3120388	1					
ANR	3120818	Argument	this		3120388	0					
ANR	3120819	Identifier	this		3120388	0					
ANR	3120820	ExpressionStatement	"debug_printf ( DEBUG_QUIET , ""but it collided with key %s, node:\\n"" , key . Value ( ) )"	4044:3:122592:122675	3120388	3	True				
ANR	3120821	CallExpression	"debug_printf ( DEBUG_QUIET , ""but it collided with key %s, node:\\n"" , key . Value ( ) )"		3120388	0					
ANR	3120822	Callee	debug_printf		3120388	0					
ANR	3120823	Identifier	debug_printf		3120388	0					
ANR	3120824	ArgumentList	DEBUG_QUIET		3120388	1					
ANR	3120825	Argument	DEBUG_QUIET		3120388	0					
ANR	3120826	Identifier	DEBUG_QUIET		3120388	0					
ANR	3120827	Argument	"""but it collided with key %s, node:\\n"""		3120388	1					
ANR	3120828	PrimaryExpression	"""but it collided with key %s, node:\\n"""		3120388	0					
ANR	3120829	Argument	key . Value ( )		3120388	2					
ANR	3120830	CallExpression	key . Value ( )		3120388	0					
ANR	3120831	Callee	key . Value		3120388	0					
ANR	3120832	MemberAccess	key . Value		3120388	0					
ANR	3120833	Identifier	key		3120388	0					
ANR	3120834	Identifier	Value		3120388	1					
ANR	3120835	ArgumentList			3120388	1					
ANR	3120836	IfStatement	"if ( _nodeNameHash . lookup ( key , job ) == 0 )"		3120388	4					
ANR	3120837	Condition	"_nodeNameHash . lookup ( key , job ) == 0"	4046:7:122684:122718	3120388	0	True				
ANR	3120838	EqualityExpression	"_nodeNameHash . lookup ( key , job ) == 0"		3120388	0		==			
ANR	3120839	CallExpression	"_nodeNameHash . lookup ( key , job )"		3120388	0					
ANR	3120840	Callee	_nodeNameHash . lookup		3120388	0					
ANR	3120841	MemberAccess	_nodeNameHash . lookup		3120388	0					
ANR	3120842	Identifier	_nodeNameHash		3120388	0					
ANR	3120843	Identifier	lookup		3120388	1					
ANR	3120844	ArgumentList	key		3120388	1					
ANR	3120845	Argument	key		3120388	0					
ANR	3120846	Identifier	key		3120388	0					
ANR	3120847	Argument	job		3120388	1					
ANR	3120848	Identifier	job		3120388	0					
ANR	3120849	PrimaryExpression	0		3120388	1					
ANR	3120850	CompoundStatement		88:44:2960:2960	3120388	1					
ANR	3120851	ExpressionStatement	job -> Dump ( this )	4047:4:122727:122744	3120388	0	True				
ANR	3120852	CallExpression	job -> Dump ( this )		3120388	0					
ANR	3120853	Callee	job -> Dump		3120388	0					
ANR	3120854	PtrMemberAccess	job -> Dump		3120388	0					
ANR	3120855	Identifier	job		3120388	0					
ANR	3120856	Identifier	Dump		3120388	1					
ANR	3120857	ArgumentList	this		3120388	1					
ANR	3120858	Argument	this		3120388	0					
ANR	3120859	Identifier	this		3120388	0					
ANR	3120860	ElseStatement	else		3120388	0					
ANR	3120861	CompoundStatement		90:10:2995:2995	3120388	0					
ANR	3120862	ExpressionStatement	"debug_error ( 1 , DEBUG_QUIET , ""What? This is impossible!\\n"" )"	4049:4:122762:122820	3120388	0	True				
ANR	3120863	CallExpression	"debug_error ( 1 , DEBUG_QUIET , ""What? This is impossible!\\n"" )"		3120388	0					
ANR	3120864	Callee	debug_error		3120388	0					
ANR	3120865	Identifier	debug_error		3120388	0					
ANR	3120866	ArgumentList	1		3120388	1					
ANR	3120867	Argument	1		3120388	0					
ANR	3120868	PrimaryExpression	1		3120388	0					
ANR	3120869	Argument	DEBUG_QUIET		3120388	1					
ANR	3120870	Identifier	DEBUG_QUIET		3120388	0					
ANR	3120871	Argument	"""What? This is impossible!\\n"""		3120388	2					
ANR	3120872	PrimaryExpression	"""What? This is impossible!\\n"""		3120388	0					
ANR	3120873	ExpressionStatement	"debug_error ( 1 , DEBUG_QUIET , ""Aborting.\\n"" )"	4052:3:122831:122873	3120388	5	True				
ANR	3120874	CallExpression	"debug_error ( 1 , DEBUG_QUIET , ""Aborting.\\n"" )"		3120388	0					
ANR	3120875	Callee	debug_error		3120388	0					
ANR	3120876	Identifier	debug_error		3120388	0					
ANR	3120877	ArgumentList	1		3120388	1					
ANR	3120878	Argument	1		3120388	0					
ANR	3120879	PrimaryExpression	1		3120388	0					
ANR	3120880	Argument	DEBUG_QUIET		3120388	1					
ANR	3120881	Identifier	DEBUG_QUIET		3120388	0					
ANR	3120882	Argument	"""Aborting.\\n"""		3120388	2					
ANR	3120883	PrimaryExpression	"""Aborting.\\n"""		3120388	0					
ANR	3120884	ForStatement	for ( i = 0 ; i < nodes -> length ( ) ; i ++ )		3120388	12					
ANR	3120885	ForInit	i = 0 ;	4057:6:122946:122951	3120388	0	True				
ANR	3120886	AssignmentExpression	i = 0		3120388	0		=			
ANR	3120887	Identifier	i		3120388	0					
ANR	3120888	PrimaryExpression	0		3120388	1					
ANR	3120889	Condition	i < nodes -> length ( )	4057:13:122953:122971	3120388	1	True				
ANR	3120890	RelationalExpression	i < nodes -> length ( )		3120388	0		<			
ANR	3120891	Identifier	i		3120388	0					
ANR	3120892	CallExpression	nodes -> length ( )		3120388	1					
ANR	3120893	Callee	nodes -> length		3120388	0					
ANR	3120894	PtrMemberAccess	nodes -> length		3120388	0					
ANR	3120895	Identifier	nodes		3120388	0					
ANR	3120896	Identifier	length		3120388	1					
ANR	3120897	ArgumentList			3120388	1					
ANR	3120898	PostIncDecOperationExpression	i ++	4057:34:122974:122976	3120388	2	True				
ANR	3120899	Identifier	i		3120388	0					
ANR	3120900	IncDec	++		3120388	1					
ANR	3120901	CompoundStatement		99:39:3218:3218	3120388	3					
ANR	3120902	ExpressionStatement	key_id = ( * nodes ) [ i ] -> GetJobID ( )	4058:2:122983:123015	3120388	0	True				
ANR	3120903	AssignmentExpression	key_id = ( * nodes ) [ i ] -> GetJobID ( )		3120388	0		=			
ANR	3120904	Identifier	key_id		3120388	0					
ANR	3120905	CallExpression	( * nodes ) [ i ] -> GetJobID ( )		3120388	1					
ANR	3120906	Callee	( * nodes ) [ i ] -> GetJobID		3120388	0					
ANR	3120907	PtrMemberAccess	( * nodes ) [ i ] -> GetJobID		3120388	0					
ANR	3120908	ArrayIndexing	( * nodes ) [ i ]		3120388	0					
ANR	3120909	UnaryOperationExpression	* nodes		3120388	0					
ANR	3120910	UnaryOperator	*		3120388	0					
ANR	3120911	Identifier	nodes		3120388	1					
ANR	3120912	Identifier	i		3120388	1					
ANR	3120913	Identifier	GetJobID		3120388	1					
ANR	3120914	ArgumentList			3120388	1					
ANR	3120915	IfStatement	"if ( _nodeIDHash . insert ( key_id , ( * nodes ) [ i ] ) != 0 )"		3120388	1					
ANR	3120916	Condition	"_nodeIDHash . insert ( key_id , ( * nodes ) [ i ] ) != 0"	4059:6:123023:123066	3120388	0	True				
ANR	3120917	EqualityExpression	"_nodeIDHash . insert ( key_id , ( * nodes ) [ i ] ) != 0"		3120388	0		!=			
ANR	3120918	CallExpression	"_nodeIDHash . insert ( key_id , ( * nodes ) [ i ] )"		3120388	0					
ANR	3120919	Callee	_nodeIDHash . insert		3120388	0					
ANR	3120920	MemberAccess	_nodeIDHash . insert		3120388	0					
ANR	3120921	Identifier	_nodeIDHash		3120388	0					
ANR	3120922	Identifier	insert		3120388	1					
ANR	3120923	ArgumentList	key_id		3120388	1					
ANR	3120924	Argument	key_id		3120388	0					
ANR	3120925	Identifier	key_id		3120388	0					
ANR	3120926	Argument	( * nodes ) [ i ]		3120388	1					
ANR	3120927	ArrayIndexing	( * nodes ) [ i ]		3120388	0					
ANR	3120928	UnaryOperationExpression	* nodes		3120388	0					
ANR	3120929	UnaryOperator	*		3120388	0					
ANR	3120930	Identifier	nodes		3120388	1					
ANR	3120931	Identifier	i		3120388	1					
ANR	3120932	PrimaryExpression	0		3120388	1					
ANR	3120933	CompoundStatement		101:52:3308:3308	3120388	1					
ANR	3120934	ExpressionStatement	"debug_error ( 1 , DEBUG_QUIET , ""Found job id collision while taking ownership of node: %s\\n"" , ( * nodes ) [ i ] -> GetJobName ( ) )"	4060:3:123074:123200	3120388	0	True				
ANR	3120935	CallExpression	"debug_error ( 1 , DEBUG_QUIET , ""Found job id collision while taking ownership of node: %s\\n"" , ( * nodes ) [ i ] -> GetJobName ( ) )"		3120388	0					
ANR	3120936	Callee	debug_error		3120388	0					
ANR	3120937	Identifier	debug_error		3120388	0					
ANR	3120938	ArgumentList	1		3120388	1					
ANR	3120939	Argument	1		3120388	0					
ANR	3120940	PrimaryExpression	1		3120388	0					
ANR	3120941	Argument	DEBUG_QUIET		3120388	1					
ANR	3120942	Identifier	DEBUG_QUIET		3120388	0					
ANR	3120943	Argument	"""Found job id collision while taking ownership of node: %s\\n"""		3120388	2					
ANR	3120944	PrimaryExpression	"""Found job id collision while taking ownership of node: %s\\n"""		3120388	0					
ANR	3120945	Argument	( * nodes ) [ i ] -> GetJobName ( )		3120388	3					
ANR	3120946	CallExpression	( * nodes ) [ i ] -> GetJobName ( )		3120388	0					
ANR	3120947	Callee	( * nodes ) [ i ] -> GetJobName		3120388	0					
ANR	3120948	PtrMemberAccess	( * nodes ) [ i ] -> GetJobName		3120388	0					
ANR	3120949	ArrayIndexing	( * nodes ) [ i ]		3120388	0					
ANR	3120950	UnaryOperationExpression	* nodes		3120388	0					
ANR	3120951	UnaryOperator	*		3120388	0					
ANR	3120952	Identifier	nodes		3120388	1					
ANR	3120953	Identifier	i		3120388	1					
ANR	3120954	Identifier	GetJobName		3120388	1					
ANR	3120955	ArgumentList			3120388	1					
ANR	3120956	IfStatement	if ( om -> _reject )		3120388	13					
ANR	3120957	Condition	om -> _reject	4067:6:123261:123271	3120388	0	True				
ANR	3120958	PtrMemberAccess	om -> _reject		3120388	0					
ANR	3120959	Identifier	om		3120388	0					
ANR	3120960	Identifier	_reject		3120388	1					
ANR	3120961	CompoundStatement		109:20:3514:3514	3120388	1					
ANR	3120962	ExpressionStatement	SetReject ( om -> _firstRejectLoc )	4068:2:123279:123311	3120388	0	True				
ANR	3120963	CallExpression	SetReject ( om -> _firstRejectLoc )		3120388	0					
ANR	3120964	Callee	SetReject		3120388	0					
ANR	3120965	Identifier	SetReject		3120388	0					
ANR	3120966	ArgumentList	om -> _firstRejectLoc		3120388	1					
ANR	3120967	Argument	om -> _firstRejectLoc		3120388	0					
ANR	3120968	PtrMemberAccess	om -> _firstRejectLoc		3120388	0					
ANR	3120969	Identifier	om		3120388	0					
ANR	3120970	Identifier	_firstRejectLoc		3120388	1					
ANR	3120971	ReturnType	void		3120388	1					
ANR	3120972	Identifier	Dag :: AssumeOwnershipofNodes		3120388	2					
ANR	3120973	ParameterList	"const MyString & spliceName , OwnedMaterials * om"		3120388	3					
ANR	3120974	Parameter	const MyString & spliceName	3958:28:119712:119737	3120388	0	True				
ANR	3120975	ParameterType	const MyString &		3120388	0					
ANR	3120976	Identifier	spliceName		3120388	1					
ANR	3120977	Parameter	OwnedMaterials * om	3958:56:119740:119757	3120388	1	True				
ANR	3120978	ParameterType	OwnedMaterials *		3120388	0					
ANR	3120979	Identifier	om		3120388	1					
ANR	3120980	CFGEntryNode	ENTRY		3120388		True				
ANR	3120981	CFGExitNode	EXIT		3120388		True				
ANR	3120982	Symbol	nodes -> length		3120388						
ANR	3120983	Symbol	* om		3120388						
ANR	3120984	Symbol	_catThrottles		3120388						
ANR	3120985	Symbol	( * nodes ) [ i ] -> NumParents		3120388						
ANR	3120986	Symbol	DEBUG_QUIET		3120388						
ANR	3120987	Symbol	mainThrottle -> isSet		3120388						
ANR	3120988	Symbol	om -> throttles		3120388						
ANR	3120989	Symbol	spliceThrottle		3120388						
ANR	3120990	Symbol	* nodes		3120388						
ANR	3120991	Symbol	spliceThrottle -> _category -> Value		3120388						
ANR	3120992	Symbol	mainThrottle		3120388						
ANR	3120993	Symbol	tmpNode		3120388						
ANR	3120994	Symbol	_nodeNameHash . insert		3120388						
ANR	3120995	Symbol	* * i		3120388						
ANR	3120996	Symbol	NULL		3120388						
ANR	3120997	Symbol	om -> throttles -> Iterate		3120388						
ANR	3120998	Symbol	key_id		3120388						
ANR	3120999	Symbol	* spliceThrottle -> _category		3120388						
ANR	3121000	Symbol	this		3120388						
ANR	3121001	Symbol	om -> nodes		3120388						
ANR	3121002	Symbol	( * nodes ) [ i ] -> GetJobID		3120388						
ANR	3121003	Symbol	om -> _reject		3120388						
ANR	3121004	Symbol	_catThrottles . GetThrottleInfo		3120388						
ANR	3121005	Symbol	* om -> throttles		3120388						
ANR	3121006	Symbol	( * nodes ) [ i ] -> NumChildren		3120388						
ANR	3121007	Symbol	job		3120388						
ANR	3121008	Symbol	_nodeIDHash		3120388						
ANR	3121009	Symbol	_nodeIDHash . insert		3120388						
ANR	3121010	Symbol	* tmpNode		3120388						
ANR	3121011	Symbol	* spliceThrottle		3120388						
ANR	3121012	Symbol	* * nodes		3120388						
ANR	3121013	Symbol	tmpNode -> GetThrottleInfo		3120388						
ANR	3121014	Symbol	* * om		3120388						
ANR	3121015	Symbol	om -> _firstRejectLoc		3120388						
ANR	3121016	Symbol	DAG_STRICT_2		3120388						
ANR	3121017	Symbol	mainThrottle -> _maxJobs		3120388						
ANR	3121018	Symbol	* * spliceThrottle		3120388						
ANR	3121019	Symbol	spliceName		3120388						
ANR	3121020	Symbol	_splice_initial_nodes		3120388						
ANR	3121021	Symbol	_jobs		3120388						
ANR	3121022	Symbol	DEBUG_DEBUG_1		3120388						
ANR	3121023	Symbol	om		3120388						
ANR	3121024	Symbol	key		3120388						
ANR	3121025	Symbol	* mainThrottle		3120388						
ANR	3121026	Symbol	i		3120388						
ANR	3121027	Symbol	_nodeNameHash . lookup		3120388						
ANR	3121028	Symbol	( * nodes ) [ i ] -> GetJobName		3120388						
ANR	3121029	Symbol	_nodeNameHash		3120388						
ANR	3121030	Symbol	key . Value		3120388						
ANR	3121031	Symbol	spliceThrottle -> _category		3120388						
ANR	3121032	Symbol	_splice_final_nodes		3120388						
ANR	3121033	Symbol	nodes		3120388						
ANR	3121034	Symbol	* i		3120388						
ANR	3121035	Symbol	spliceThrottle -> _maxJobs		3120388						
ANR	3121036	Symbol	* * * nodes		3120388						
ANR	3121037	Function	Dag :: ResolveVarsInterpolations	4076:0:123511:123661							
ANR	3121038	FunctionDef	Dag :: ResolveVarsInterpolations ()		3121037	0					
ANR	3121039	CompoundStatement		4078:0:123553:123661	3121037	0					
ANR	3121040	IdentifierDeclStatement	Job * job = NULL ;	4079:1:123556:123571	3121037	0	True				
ANR	3121041	IdentifierDecl	* job = NULL		3121037	0					
ANR	3121042	IdentifierDeclType	Job *		3121037	0					
ANR	3121043	Identifier	job		3121037	1					
ANR	3121044	AssignmentExpression	* job = NULL		3121037	2		=			
ANR	3121045	Identifier	NULL		3121037	0					
ANR	3121046	Identifier	NULL		3121037	1					
ANR	3121047	ExpressionStatement	_jobs . Rewind ( )	4081:1:123575:123589	3121037	1	True				
ANR	3121048	CallExpression	_jobs . Rewind ( )		3121037	0					
ANR	3121049	Callee	_jobs . Rewind		3121037	0					
ANR	3121050	MemberAccess	_jobs . Rewind		3121037	0					
ANR	3121051	Identifier	_jobs		3121037	0					
ANR	3121052	Identifier	Rewind		3121037	1					
ANR	3121053	ArgumentList			3121037	1					
ANR	3121054	WhileStatement	while ( ( job = _jobs . Next ( ) ) )		3121037	2					
ANR	3121055	Condition	job = _jobs . Next ( )	4082:7:123598:123617	3121037	0	True				
ANR	3121056	AssignmentExpression	job = _jobs . Next ( )		3121037	0		=			
ANR	3121057	Identifier	job		3121037	0					
ANR	3121058	CallExpression	_jobs . Next ( )		3121037	1					
ANR	3121059	Callee	_jobs . Next		3121037	0					
ANR	3121060	MemberAccess	_jobs . Next		3121037	0					
ANR	3121061	Identifier	_jobs		3121037	0					
ANR	3121062	Identifier	Next		3121037	1					
ANR	3121063	ArgumentList			3121037	1					
ANR	3121064	CompoundStatement		5:29:66:66	3121037	1					
ANR	3121065	ExpressionStatement	job -> ResolveVarsInterpolations ( )	4083:2:123624:123656	3121037	0	True				
ANR	3121066	CallExpression	job -> ResolveVarsInterpolations ( )		3121037	0					
ANR	3121067	Callee	job -> ResolveVarsInterpolations		3121037	0					
ANR	3121068	PtrMemberAccess	job -> ResolveVarsInterpolations		3121037	0					
ANR	3121069	Identifier	job		3121037	0					
ANR	3121070	Identifier	ResolveVarsInterpolations		3121037	1					
ANR	3121071	ArgumentList			3121037	1					
ANR	3121072	ReturnType	void		3121037	1					
ANR	3121073	Identifier	Dag :: ResolveVarsInterpolations		3121037	2					
ANR	3121074	ParameterList			3121037	3					
ANR	3121075	CFGEntryNode	ENTRY		3121037		True				
ANR	3121076	CFGExitNode	EXIT		3121037		True				
ANR	3121077	Symbol	NULL		3121037						
ANR	3121078	Symbol	_jobs		3121037						
ANR	3121079	Symbol	job		3121037						
ANR	3121080	Symbol	_jobs . Next		3121037						
ANR	3121081	Function	Dag :: SetDefaultPriorities	4089:0:123796:124259							
ANR	3121082	FunctionDef	Dag :: SetDefaultPriorities ()		3121081	0					
ANR	3121083	CompoundStatement		4090:0:123829:124259	3121081	0					
ANR	3121084	IfStatement	if ( GetDefaultPriority ( ) != 0 )		3121081	0					
ANR	3121085	Condition	GetDefaultPriority ( ) != 0	4091:4:123835:123859	3121081	0	True				
ANR	3121086	EqualityExpression	GetDefaultPriority ( ) != 0		3121081	0		!=			
ANR	3121087	CallExpression	GetDefaultPriority ( )		3121081	0					
ANR	3121088	Callee	GetDefaultPriority		3121081	0					
ANR	3121089	Identifier	GetDefaultPriority		3121081	0					
ANR	3121090	ArgumentList			3121081	1					
ANR	3121091	PrimaryExpression	0		3121081	1					
ANR	3121092	CompoundStatement		3:2:36:44	3121081	1					
ANR	3121093	IdentifierDeclStatement	Job * job ;	4092:2:123866:123874	3121081	0	True				
ANR	3121094	IdentifierDecl	* job		3121081	0					
ANR	3121095	IdentifierDeclType	Job *		3121081	0					
ANR	3121096	Identifier	job		3121081	1					
ANR	3121097	ExpressionStatement	_jobs . Rewind ( )	4093:2:123878:123892	3121081	1	True				
ANR	3121098	CallExpression	_jobs . Rewind ( )		3121081	0					
ANR	3121099	Callee	_jobs . Rewind		3121081	0					
ANR	3121100	MemberAccess	_jobs . Rewind		3121081	0					
ANR	3121101	Identifier	_jobs		3121081	0					
ANR	3121102	Identifier	Rewind		3121081	1					
ANR	3121103	ArgumentList			3121081	1					
ANR	3121104	WhileStatement	while ( ( job = _jobs . Next ( ) ) != NULL )		3121081	2					
ANR	3121105	Condition	( job = _jobs . Next ( ) ) != NULL	4094:9:123903:123930	3121081	0	True				
ANR	3121106	EqualityExpression	( job = _jobs . Next ( ) ) != NULL		3121081	0		!=			
ANR	3121107	AssignmentExpression	job = _jobs . Next ( )		3121081	0		=			
ANR	3121108	Identifier	job		3121081	0					
ANR	3121109	CallExpression	_jobs . Next ( )		3121081	1					
ANR	3121110	Callee	_jobs . Next		3121081	0					
ANR	3121111	MemberAccess	_jobs . Next		3121081	0					
ANR	3121112	Identifier	_jobs		3121081	0					
ANR	3121113	Identifier	Next		3121081	1					
ANR	3121114	ArgumentList			3121081	1					
ANR	3121115	Identifier	NULL		3121081	1					
ANR	3121116	CompoundStatement		5:40:104:104	3121081	1					
ANR	3121117	IfStatement	if ( ! job -> _hasNodePriority )		3121081	0					
ANR	3121118	Condition	! job -> _hasNodePriority	4097:7:124032:124053	3121081	0	True				
ANR	3121119	UnaryOperationExpression	! job -> _hasNodePriority		3121081	0					
ANR	3121120	UnaryOperator	!		3121081	0					
ANR	3121121	PtrMemberAccess	job -> _hasNodePriority		3121081	1					
ANR	3121122	Identifier	job		3121081	0					
ANR	3121123	Identifier	_hasNodePriority		3121081	1					
ANR	3121124	CompoundStatement		8:32:227:227	3121081	1					
ANR	3121125	ExpressionStatement	job -> _hasNodePriority = true	4098:4:124063:124091	3121081	0	True				
ANR	3121126	AssignmentExpression	job -> _hasNodePriority = true		3121081	0		=			
ANR	3121127	PtrMemberAccess	job -> _hasNodePriority		3121081	0					
ANR	3121128	Identifier	job		3121081	0					
ANR	3121129	Identifier	_hasNodePriority		3121081	1					
ANR	3121130	Identifier	true		3121081	1					
ANR	3121131	ExpressionStatement	job -> _nodePriority = GetDefaultPriority ( )	4099:4:124097:124138	3121081	1	True				
ANR	3121132	AssignmentExpression	job -> _nodePriority = GetDefaultPriority ( )		3121081	0		=			
ANR	3121133	PtrMemberAccess	job -> _nodePriority		3121081	0					
ANR	3121134	Identifier	job		3121081	0					
ANR	3121135	Identifier	_nodePriority		3121081	1					
ANR	3121136	CallExpression	GetDefaultPriority ( )		3121081	1					
ANR	3121137	Callee	GetDefaultPriority		3121081	0					
ANR	3121138	Identifier	GetDefaultPriority		3121081	0					
ANR	3121139	ArgumentList			3121081	1					
ANR	3121140	ElseStatement	else		3121081	0					
ANR	3121141	IfStatement	if ( GetDefaultPriority ( ) > job -> _nodePriority )		3121081	0					
ANR	3121142	Condition	GetDefaultPriority ( ) > job -> _nodePriority	4100:14:124154:124194	3121081	0	True				
ANR	3121143	RelationalExpression	GetDefaultPriority ( ) > job -> _nodePriority		3121081	0		>			
ANR	3121144	CallExpression	GetDefaultPriority ( )		3121081	0					
ANR	3121145	Callee	GetDefaultPriority		3121081	0					
ANR	3121146	Identifier	GetDefaultPriority		3121081	0					
ANR	3121147	ArgumentList			3121081	1					
ANR	3121148	PtrMemberAccess	job -> _nodePriority		3121081	1					
ANR	3121149	Identifier	job		3121081	0					
ANR	3121150	Identifier	_nodePriority		3121081	1					
ANR	3121151	CompoundStatement		11:58:368:368	3121081	1					
ANR	3121152	ExpressionStatement	job -> _nodePriority = GetDefaultPriority ( )	4101:4:124204:124245	3121081	0	True				
ANR	3121153	AssignmentExpression	job -> _nodePriority = GetDefaultPriority ( )		3121081	0		=			
ANR	3121154	PtrMemberAccess	job -> _nodePriority		3121081	0					
ANR	3121155	Identifier	job		3121081	0					
ANR	3121156	Identifier	_nodePriority		3121081	1					
ANR	3121157	CallExpression	GetDefaultPriority ( )		3121081	1					
ANR	3121158	Callee	GetDefaultPriority		3121081	0					
ANR	3121159	Identifier	GetDefaultPriority		3121081	0					
ANR	3121160	ArgumentList			3121081	1					
ANR	3121161	ReturnType	void		3121081	1					
ANR	3121162	Identifier	Dag :: SetDefaultPriorities		3121081	2					
ANR	3121163	ParameterList			3121081	3					
ANR	3121164	CFGEntryNode	ENTRY		3121081		True				
ANR	3121165	CFGExitNode	EXIT		3121081		True				
ANR	3121166	Symbol	job -> _nodePriority		3121081						
ANR	3121167	Symbol	NULL		3121081						
ANR	3121168	Symbol	job -> _hasNodePriority		3121081						
ANR	3121169	Symbol	* job		3121081						
ANR	3121170	Symbol	true		3121081						
ANR	3121171	Symbol	GetDefaultPriority		3121081						
ANR	3121172	Symbol	_jobs		3121081						
ANR	3121173	Symbol	job		3121081						
ANR	3121174	Symbol	_jobs . Next		3121081						
