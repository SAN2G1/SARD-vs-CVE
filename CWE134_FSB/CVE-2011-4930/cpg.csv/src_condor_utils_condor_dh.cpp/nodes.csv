command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4624534	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_condor_dh.cpp								
ANR	4624535	DeclStmt									
ANR	4624536	Decl							const char	const char [ ]	DH_CONFIG_FILE
ANR	4624537	Function	Condor_Diffie_Hellman :: Condor_Diffie_Hellman	33:0:1042:1167							
ANR	4624538	FunctionDef	Condor_Diffie_Hellman :: Condor_Diffie_Hellman ()		4624537	0					
ANR	4624539	CompoundStatement		37:0:1147:1167	4624537	0					
ANR	4624540	ExpressionStatement	initialize ( )	38:4:1153:1165	4624537	0	True				
ANR	4624541	CallExpression	initialize ( )		4624537	0					
ANR	4624542	Callee	initialize		4624537	0					
ANR	4624543	Identifier	initialize		4624537	0					
ANR	4624544	ArgumentList			4624537	1					
ANR	4624545	Identifier	Condor_Diffie_Hellman :: Condor_Diffie_Hellman		4624537	1					
ANR	4624546	ParameterList			4624537	2					
ANR	4624547	CFGEntryNode	ENTRY		4624537		True				
ANR	4624548	CFGExitNode	EXIT		4624537		True				
ANR	4624549	Function	Condor_Diffie_Hellman :: ~Condor_Diffie_Hellman	41:0:1170:1332							
ANR	4624550	FunctionDef	Condor_Diffie_Hellman :: ~Condor_Diffie_Hellman ()		4624549	0					
ANR	4624551	CompoundStatement		42:0:1220:1332	4624549	0					
ANR	4624552	IfStatement	if ( dh_ )		4624549	0					
ANR	4624553	Condition	dh_	43:8:1230:1232	4624549	0	True				
ANR	4624554	Identifier	dh_		4624549	0					
ANR	4624555	CompoundStatement		2:13:14:14	4624549	1					
ANR	4624556	ExpressionStatement	DH_free ( dh_ )	44:8:1245:1257	4624549	0	True				
ANR	4624557	CallExpression	DH_free ( dh_ )		4624549	0					
ANR	4624558	Callee	DH_free		4624549	0					
ANR	4624559	Identifier	DH_free		4624549	0					
ANR	4624560	ArgumentList	dh_		4624549	1					
ANR	4624561	Argument	dh_		4624549	0					
ANR	4624562	Identifier	dh_		4624549	0					
ANR	4624563	IfStatement	if ( secret_ )		4624549	1					
ANR	4624564	Condition	secret_	46:8:1273:1279	4624549	0	True				
ANR	4624565	Identifier	secret_		4624549	0					
ANR	4624566	CompoundStatement		5:17:61:61	4624549	1					
ANR	4624567	ExpressionStatement	free ( secret_ )	47:8:1292:1305	4624549	0	True				
ANR	4624568	CallExpression	free ( secret_ )		4624549	0					
ANR	4624569	Callee	free		4624549	0					
ANR	4624570	Identifier	free		4624549	0					
ANR	4624571	ArgumentList	secret_		4624549	1					
ANR	4624572	Argument	secret_		4624549	0					
ANR	4624573	Identifier	secret_		4624549	0					
ANR	4624574	ExpressionStatement	keySize_ = 0	49:4:1317:1329	4624549	2	True				
ANR	4624575	AssignmentExpression	keySize_ = 0		4624549	0		=			
ANR	4624576	Identifier	keySize_		4624549	0					
ANR	4624577	PrimaryExpression	0		4624549	1					
ANR	4624578	Identifier	Condor_Diffie_Hellman :: ~Condor_Diffie_Hellman		4624549	1					
ANR	4624579	ParameterList			4624549	2					
ANR	4624580	CFGEntryNode	ENTRY		4624549		True				
ANR	4624581	CFGExitNode	EXIT		4624549		True				
ANR	4624582	Symbol	secret_		4624549						
ANR	4624583	Symbol	dh_		4624549						
ANR	4624584	Symbol	keySize_		4624549						
ANR	4624585	Function	Condor_Diffie_Hellman :: compute_shared_secret	53:0:1335:2402							
ANR	4624586	FunctionDef	Condor_Diffie_Hellman :: compute_shared_secret (const char * pk)		4624585	0					
ANR	4624587	CompoundStatement		54:0:1403:2402	4624585	0					
ANR	4624588	IdentifierDeclStatement	BIGNUM * remote_pubKey = NULL ;	60:4:1636:1665	4624585	0	True				
ANR	4624589	IdentifierDecl	* remote_pubKey = NULL		4624585	0					
ANR	4624590	IdentifierDeclType	BIGNUM *		4624585	0					
ANR	4624591	Identifier	remote_pubKey		4624585	1					
ANR	4624592	AssignmentExpression	* remote_pubKey = NULL		4624585	2		=			
ANR	4624593	Identifier	NULL		4624585	0					
ANR	4624594	Identifier	NULL		4624585	1					
ANR	4624595	IfStatement	"if ( BN_hex2bn ( & remote_pubKey , pk ) == 0 )"		4624585	1					
ANR	4624596	Condition	"BN_hex2bn ( & remote_pubKey , pk ) == 0"	62:8:1676:1709	4624585	0	True				
ANR	4624597	EqualityExpression	"BN_hex2bn ( & remote_pubKey , pk ) == 0"		4624585	0		==			
ANR	4624598	CallExpression	"BN_hex2bn ( & remote_pubKey , pk )"		4624585	0					
ANR	4624599	Callee	BN_hex2bn		4624585	0					
ANR	4624600	Identifier	BN_hex2bn		4624585	0					
ANR	4624601	ArgumentList	& remote_pubKey		4624585	1					
ANR	4624602	Argument	& remote_pubKey		4624585	0					
ANR	4624603	UnaryOperationExpression	& remote_pubKey		4624585	0					
ANR	4624604	UnaryOperator	&		4624585	0					
ANR	4624605	Identifier	remote_pubKey		4624585	1					
ANR	4624606	Argument	pk		4624585	1					
ANR	4624607	Identifier	pk		4624585	0					
ANR	4624608	PrimaryExpression	0		4624585	1					
ANR	4624609	CompoundStatement		9:44:308:308	4624585	1					
ANR	4624610	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to obtain remote public key\\n"" )"	63:8:1722:1779	4624585	0	True				
ANR	4624611	CallExpression	"dprintf ( D_ALWAYS , ""Unable to obtain remote public key\\n"" )"		4624585	0					
ANR	4624612	Callee	dprintf		4624585	0					
ANR	4624613	Identifier	dprintf		4624585	0					
ANR	4624614	ArgumentList	D_ALWAYS		4624585	1					
ANR	4624615	Argument	D_ALWAYS		4624585	0					
ANR	4624616	Identifier	D_ALWAYS		4624585	0					
ANR	4624617	Argument	"""Unable to obtain remote public key\\n"""		4624585	1					
ANR	4624618	PrimaryExpression	"""Unable to obtain remote public key\\n"""		4624585	0					
ANR	4624619	GotoStatement	goto error ;	64:8:1789:1799	4624585	1	True				
ANR	4624620	Identifier	error		4624585	0					
ANR	4624621	IfStatement	if ( ( dh_ != NULL ) && ( remote_pubKey != NULL ) )		4624585	2					
ANR	4624622	Condition	( dh_ != NULL ) && ( remote_pubKey != NULL )	67:8:1816:1855	4624585	0	True				
ANR	4624623	AndExpression	( dh_ != NULL ) && ( remote_pubKey != NULL )		4624585	0		&&			
ANR	4624624	EqualityExpression	dh_ != NULL		4624585	0		!=			
ANR	4624625	Identifier	dh_		4624585	0					
ANR	4624626	Identifier	NULL		4624585	1					
ANR	4624627	EqualityExpression	remote_pubKey != NULL		4624585	1		!=			
ANR	4624628	Identifier	remote_pubKey		4624585	0					
ANR	4624629	Identifier	NULL		4624585	1					
ANR	4624630	CompoundStatement		14:50:454:454	4624585	1					
ANR	4624631	ExpressionStatement	secret_ = ( unsigned char * ) malloc ( DH_size ( dh_ ) )	69:8:1869:1917	4624585	0	True				
ANR	4624632	AssignmentExpression	secret_ = ( unsigned char * ) malloc ( DH_size ( dh_ ) )		4624585	0		=			
ANR	4624633	Identifier	secret_		4624585	0					
ANR	4624634	CastExpression	( unsigned char * ) malloc ( DH_size ( dh_ ) )		4624585	1					
ANR	4624635	CastTarget	unsigned char *		4624585	0					
ANR	4624636	CallExpression	malloc ( DH_size ( dh_ ) )		4624585	1					
ANR	4624637	Callee	malloc		4624585	0					
ANR	4624638	Identifier	malloc		4624585	0					
ANR	4624639	ArgumentList	DH_size ( dh_ )		4624585	1					
ANR	4624640	Argument	DH_size ( dh_ )		4624585	0					
ANR	4624641	CallExpression	DH_size ( dh_ )		4624585	0					
ANR	4624642	Callee	DH_size		4624585	0					
ANR	4624643	Identifier	DH_size		4624585	0					
ANR	4624644	ArgumentList	dh_		4624585	1					
ANR	4624645	Argument	dh_		4624585	0					
ANR	4624646	Identifier	dh_		4624585	0					
ANR	4624647	ExpressionStatement	"keySize_ = DH_compute_key ( secret_ , remote_pubKey , dh_ )"	72:8:1951:2005	4624585	1	True				
ANR	4624648	AssignmentExpression	"keySize_ = DH_compute_key ( secret_ , remote_pubKey , dh_ )"		4624585	0		=			
ANR	4624649	Identifier	keySize_		4624585	0					
ANR	4624650	CallExpression	"DH_compute_key ( secret_ , remote_pubKey , dh_ )"		4624585	1					
ANR	4624651	Callee	DH_compute_key		4624585	0					
ANR	4624652	Identifier	DH_compute_key		4624585	0					
ANR	4624653	ArgumentList	secret_		4624585	1					
ANR	4624654	Argument	secret_		4624585	0					
ANR	4624655	Identifier	secret_		4624585	0					
ANR	4624656	Argument	remote_pubKey		4624585	1					
ANR	4624657	Identifier	remote_pubKey		4624585	0					
ANR	4624658	Argument	dh_		4624585	2					
ANR	4624659	Identifier	dh_		4624585	0					
ANR	4624660	ExpressionStatement	BN_clear_free ( remote_pubKey )	73:8:2015:2043	4624585	2	True				
ANR	4624661	CallExpression	BN_clear_free ( remote_pubKey )		4624585	0					
ANR	4624662	Callee	BN_clear_free		4624585	0					
ANR	4624663	Identifier	BN_clear_free		4624585	0					
ANR	4624664	ArgumentList	remote_pubKey		4624585	1					
ANR	4624665	Argument	remote_pubKey		4624585	0					
ANR	4624666	Identifier	remote_pubKey		4624585	0					
ANR	4624667	IfStatement	if ( keySize_ == - 1 )		4624585	3					
ANR	4624668	Condition	keySize_ == - 1	75:12:2058:2071	4624585	0	True				
ANR	4624669	EqualityExpression	keySize_ == - 1		4624585	0		==			
ANR	4624670	Identifier	keySize_		4624585	0					
ANR	4624671	UnaryOperationExpression	- 1		4624585	1					
ANR	4624672	UnaryOperator	-		4624585	0					
ANR	4624673	PrimaryExpression	1		4624585	1					
ANR	4624674	CompoundStatement		22:28:670:670	4624585	1					
ANR	4624675	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to compute shared secret\\n"" )"	76:12:2088:2142	4624585	0	True				
ANR	4624676	CallExpression	"dprintf ( D_ALWAYS , ""Unable to compute shared secret\\n"" )"		4624585	0					
ANR	4624677	Callee	dprintf		4624585	0					
ANR	4624678	Identifier	dprintf		4624585	0					
ANR	4624679	ArgumentList	D_ALWAYS		4624585	1					
ANR	4624680	Argument	D_ALWAYS		4624585	0					
ANR	4624681	Identifier	D_ALWAYS		4624585	0					
ANR	4624682	Argument	"""Unable to compute shared secret\\n"""		4624585	1					
ANR	4624683	PrimaryExpression	"""Unable to compute shared secret\\n"""		4624585	0					
ANR	4624684	GotoStatement	goto error ;	77:12:2156:2166	4624585	1	True				
ANR	4624685	Identifier	error		4624585	0					
ANR	4624686	ElseStatement	else		4624585	0					
ANR	4624687	CompoundStatement		27:9:792:792	4624585	0					
ANR	4624688	GotoStatement	goto error ;	81:8:2206:2216	4624585	0	True				
ANR	4624689	Identifier	error		4624585	0					
ANR	4624690	ReturnStatement	return 1 ;	83:4:2228:2236	4624585	3	True				
ANR	4624691	PrimaryExpression	1		4624585	0					
ANR	4624692	Label	error :	85:1:2240:2245	4624585	4	True				
ANR	4624693	Identifier	error		4624585	0					
ANR	4624694	IfStatement	if ( remote_pubKey )		4624585	5					
ANR	4624695	Condition	remote_pubKey	86:8:2255:2267	4624585	0	True				
ANR	4624696	Identifier	remote_pubKey		4624585	0					
ANR	4624697	CompoundStatement		33:23:866:866	4624585	1					
ANR	4624698	ExpressionStatement	BN_clear_free ( remote_pubKey )	87:8:2280:2308	4624585	0	True				
ANR	4624699	CallExpression	BN_clear_free ( remote_pubKey )		4624585	0					
ANR	4624700	Callee	BN_clear_free		4624585	0					
ANR	4624701	Identifier	BN_clear_free		4624585	0					
ANR	4624702	ArgumentList	remote_pubKey		4624585	1					
ANR	4624703	Argument	remote_pubKey		4624585	0					
ANR	4624704	Identifier	remote_pubKey		4624585	0					
ANR	4624705	IfStatement	if ( secret_ )		4624585	6					
ANR	4624706	Condition	secret_	89:8:2324:2330	4624585	0	True				
ANR	4624707	Identifier	secret_		4624585	0					
ANR	4624708	CompoundStatement		36:17:929:929	4624585	1					
ANR	4624709	ExpressionStatement	free ( secret_ )	90:8:2343:2356	4624585	0	True				
ANR	4624710	CallExpression	free ( secret_ )		4624585	0					
ANR	4624711	Callee	free		4624585	0					
ANR	4624712	Identifier	free		4624585	0					
ANR	4624713	ArgumentList	secret_		4624585	1					
ANR	4624714	Argument	secret_		4624585	0					
ANR	4624715	Identifier	secret_		4624585	0					
ANR	4624716	ExpressionStatement	secret_ = NULL	91:8:2366:2380	4624585	1	True				
ANR	4624717	AssignmentExpression	secret_ = NULL		4624585	0		=			
ANR	4624718	Identifier	secret_		4624585	0					
ANR	4624719	Identifier	NULL		4624585	1					
ANR	4624720	ReturnStatement	return 0 ;	93:4:2392:2400	4624585	7	True				
ANR	4624721	PrimaryExpression	0		4624585	0					
ANR	4624722	ReturnType	int		4624585	1					
ANR	4624723	Identifier	Condor_Diffie_Hellman :: compute_shared_secret		4624585	2					
ANR	4624724	ParameterList	const char * pk		4624585	3					
ANR	4624725	Parameter	const char * pk	53:51:1386:1400	4624585	0	True				
ANR	4624726	ParameterType	const char *		4624585	0					
ANR	4624727	Identifier	pk		4624585	1					
ANR	4624728	CFGEntryNode	ENTRY		4624585		True				
ANR	4624729	CFGExitNode	EXIT		4624585		True				
ANR	4624730	Symbol	secret_		4624585						
ANR	4624731	Symbol	malloc		4624585						
ANR	4624732	Symbol	NULL		4624585						
ANR	4624733	Symbol	remote_pubKey		4624585						
ANR	4624734	Symbol	BN_hex2bn		4624585						
ANR	4624735	Symbol	D_ALWAYS		4624585						
ANR	4624736	Symbol	& remote_pubKey		4624585						
ANR	4624737	Symbol	DH_size		4624585						
ANR	4624738	Symbol	dh_		4624585						
ANR	4624739	Symbol	pk		4624585						
ANR	4624740	Symbol	DH_compute_key		4624585						
ANR	4624741	Symbol	keySize_		4624585						
ANR	4624742	Function	Condor_Diffie_Hellman :: getPublicKeyChar	96:0:2409:2645							
ANR	4624743	FunctionDef	Condor_Diffie_Hellman :: getPublicKeyChar ()		4624742	0					
ANR	4624744	CompoundStatement		97:0:2460:2645	4624742	0					
ANR	4624745	IfStatement	if ( dh_ && dh_ -> pub_key )		4624742	0					
ANR	4624746	Condition	dh_ && dh_ -> pub_key	99:8:2538:2556	4624742	0	True				
ANR	4624747	AndExpression	dh_ && dh_ -> pub_key		4624742	0		&&			
ANR	4624748	Identifier	dh_		4624742	0					
ANR	4624749	PtrMemberAccess	dh_ -> pub_key		4624742	1					
ANR	4624750	Identifier	dh_		4624742	0					
ANR	4624751	Identifier	pub_key		4624742	1					
ANR	4624752	CompoundStatement		3:29:98:98	4624742	1					
ANR	4624753	ReturnStatement	return BN_bn2hex ( dh_ -> pub_key ) ;	100:8:2569:2599	4624742	0	True				
ANR	4624754	CallExpression	BN_bn2hex ( dh_ -> pub_key )		4624742	0					
ANR	4624755	Callee	BN_bn2hex		4624742	0					
ANR	4624756	Identifier	BN_bn2hex		4624742	0					
ANR	4624757	ArgumentList	dh_ -> pub_key		4624742	1					
ANR	4624758	Argument	dh_ -> pub_key		4624742	0					
ANR	4624759	PtrMemberAccess	dh_ -> pub_key		4624742	0					
ANR	4624760	Identifier	dh_		4624742	0					
ANR	4624761	Identifier	pub_key		4624742	1					
ANR	4624762	ElseStatement	else		4624742	0					
ANR	4624763	CompoundStatement		6:9:155:155	4624742	0					
ANR	4624764	ReturnStatement	return NULL ;	103:8:2626:2637	4624742	0	True				
ANR	4624765	Identifier	NULL		4624742	0					
ANR	4624766	ReturnType	char *		4624742	1					
ANR	4624767	Identifier	Condor_Diffie_Hellman :: getPublicKeyChar		4624742	2					
ANR	4624768	ParameterList			4624742	3					
ANR	4624769	CFGEntryNode	ENTRY		4624742		True				
ANR	4624770	CFGExitNode	EXIT		4624742		True				
ANR	4624771	Symbol	NULL		4624742						
ANR	4624772	Symbol	dh_ -> pub_key		4624742						
ANR	4624773	Symbol	BN_bn2hex		4624742						
ANR	4624774	Symbol	dh_		4624742						
ANR	4624775	Symbol	* dh_		4624742						
ANR	4624776	Function	Condor_Diffie_Hellman :: getPrime	107:0:2648:2772							
ANR	4624777	FunctionDef	Condor_Diffie_Hellman :: getPrime ()		4624776	0					
ANR	4624778	CompoundStatement		108:0:2691:2772	4624776	0					
ANR	4624779	IfStatement	if ( dh_ )		4624776	0					
ANR	4624780	Condition	dh_	109:8:2701:2703	4624776	0	True				
ANR	4624781	Identifier	dh_		4624776	0					
ANR	4624782	CompoundStatement		2:13:14:14	4624776	1					
ANR	4624783	ReturnStatement	return dh_ -> p ;	110:8:2716:2729	4624776	0	True				
ANR	4624784	PtrMemberAccess	dh_ -> p		4624776	0					
ANR	4624785	Identifier	dh_		4624776	0					
ANR	4624786	Identifier	p		4624776	1					
ANR	4624787	ElseStatement	else		4624776	0					
ANR	4624788	CompoundStatement		5:9:54:54	4624776	0					
ANR	4624789	ReturnStatement	return 0 ;	113:8:2756:2764	4624776	0	True				
ANR	4624790	PrimaryExpression	0		4624776	0					
ANR	4624791	ReturnType	BIGNUM *		4624776	1					
ANR	4624792	Identifier	Condor_Diffie_Hellman :: getPrime		4624776	2					
ANR	4624793	ParameterList			4624776	3					
ANR	4624794	CFGEntryNode	ENTRY		4624776		True				
ANR	4624795	CFGExitNode	EXIT		4624776		True				
ANR	4624796	Symbol	dh_ -> p		4624776						
ANR	4624797	Symbol	dh_		4624776						
ANR	4624798	Symbol	* dh_		4624776						
ANR	4624799	Function	Condor_Diffie_Hellman :: getPrimeChar	117:0:2775:2927							
ANR	4624800	FunctionDef	Condor_Diffie_Hellman :: getPrimeChar ()		4624799	0					
ANR	4624801	CompoundStatement		118:0:2822:2927	4624799	0					
ANR	4624802	IfStatement	if ( dh_ && dh_ -> p )		4624799	0					
ANR	4624803	Condition	dh_ && dh_ -> p	119:8:2832:2844	4624799	0	True				
ANR	4624804	AndExpression	dh_ && dh_ -> p		4624799	0		&&			
ANR	4624805	Identifier	dh_		4624799	0					
ANR	4624806	PtrMemberAccess	dh_ -> p		4624799	1					
ANR	4624807	Identifier	dh_		4624799	0					
ANR	4624808	Identifier	p		4624799	1					
ANR	4624809	CompoundStatement		2:23:24:24	4624799	1					
ANR	4624810	ReturnStatement	return BN_bn2hex ( dh_ -> p ) ;	120:8:2857:2881	4624799	0	True				
ANR	4624811	CallExpression	BN_bn2hex ( dh_ -> p )		4624799	0					
ANR	4624812	Callee	BN_bn2hex		4624799	0					
ANR	4624813	Identifier	BN_bn2hex		4624799	0					
ANR	4624814	ArgumentList	dh_ -> p		4624799	1					
ANR	4624815	Argument	dh_ -> p		4624799	0					
ANR	4624816	PtrMemberAccess	dh_ -> p		4624799	0					
ANR	4624817	Identifier	dh_		4624799	0					
ANR	4624818	Identifier	p		4624799	1					
ANR	4624819	ElseStatement	else		4624799	0					
ANR	4624820	CompoundStatement		5:9:75:75	4624799	0					
ANR	4624821	ReturnStatement	return NULL ;	123:8:2908:2919	4624799	0	True				
ANR	4624822	Identifier	NULL		4624799	0					
ANR	4624823	ReturnType	char *		4624799	1					
ANR	4624824	Identifier	Condor_Diffie_Hellman :: getPrimeChar		4624799	2					
ANR	4624825	ParameterList			4624799	3					
ANR	4624826	CFGEntryNode	ENTRY		4624799		True				
ANR	4624827	CFGExitNode	EXIT		4624799		True				
ANR	4624828	Symbol	NULL		4624799						
ANR	4624829	Symbol	dh_ -> p		4624799						
ANR	4624830	Symbol	BN_bn2hex		4624799						
ANR	4624831	Symbol	dh_		4624799						
ANR	4624832	Symbol	* dh_		4624799						
ANR	4624833	Function	Condor_Diffie_Hellman :: getGenerator	127:0:2930:3060							
ANR	4624834	FunctionDef	Condor_Diffie_Hellman :: getGenerator ()		4624833	0					
ANR	4624835	CompoundStatement		128:0:2979:3060	4624833	0					
ANR	4624836	IfStatement	if ( dh_ )		4624833	0					
ANR	4624837	Condition	dh_	129:8:2989:2991	4624833	0	True				
ANR	4624838	Identifier	dh_		4624833	0					
ANR	4624839	CompoundStatement		2:13:14:14	4624833	1					
ANR	4624840	ReturnStatement	return dh_ -> g ;	130:8:3004:3017	4624833	0	True				
ANR	4624841	PtrMemberAccess	dh_ -> g		4624833	0					
ANR	4624842	Identifier	dh_		4624833	0					
ANR	4624843	Identifier	g		4624833	1					
ANR	4624844	ElseStatement	else		4624833	0					
ANR	4624845	CompoundStatement		5:9:54:54	4624833	0					
ANR	4624846	ReturnStatement	return 0 ;	133:8:3044:3052	4624833	0	True				
ANR	4624847	PrimaryExpression	0		4624833	0					
ANR	4624848	ReturnType	BIGNUM *		4624833	1					
ANR	4624849	Identifier	Condor_Diffie_Hellman :: getGenerator		4624833	2					
ANR	4624850	ParameterList			4624833	3					
ANR	4624851	CFGEntryNode	ENTRY		4624833		True				
ANR	4624852	CFGExitNode	EXIT		4624833		True				
ANR	4624853	Symbol	dh_		4624833						
ANR	4624854	Symbol	* dh_		4624833						
ANR	4624855	Symbol	dh_ -> g		4624833						
ANR	4624856	Function	Condor_Diffie_Hellman :: getGeneratorChar	137:0:3063:3219							
ANR	4624857	FunctionDef	Condor_Diffie_Hellman :: getGeneratorChar ()		4624856	0					
ANR	4624858	CompoundStatement		138:0:3114:3219	4624856	0					
ANR	4624859	IfStatement	if ( dh_ && dh_ -> g )		4624856	0					
ANR	4624860	Condition	dh_ && dh_ -> g	139:8:3124:3136	4624856	0	True				
ANR	4624861	AndExpression	dh_ && dh_ -> g		4624856	0		&&			
ANR	4624862	Identifier	dh_		4624856	0					
ANR	4624863	PtrMemberAccess	dh_ -> g		4624856	1					
ANR	4624864	Identifier	dh_		4624856	0					
ANR	4624865	Identifier	g		4624856	1					
ANR	4624866	CompoundStatement		2:23:24:24	4624856	1					
ANR	4624867	ReturnStatement	return BN_bn2hex ( dh_ -> g ) ;	140:8:3149:3173	4624856	0	True				
ANR	4624868	CallExpression	BN_bn2hex ( dh_ -> g )		4624856	0					
ANR	4624869	Callee	BN_bn2hex		4624856	0					
ANR	4624870	Identifier	BN_bn2hex		4624856	0					
ANR	4624871	ArgumentList	dh_ -> g		4624856	1					
ANR	4624872	Argument	dh_ -> g		4624856	0					
ANR	4624873	PtrMemberAccess	dh_ -> g		4624856	0					
ANR	4624874	Identifier	dh_		4624856	0					
ANR	4624875	Identifier	g		4624856	1					
ANR	4624876	ElseStatement	else		4624856	0					
ANR	4624877	CompoundStatement		5:9:75:75	4624856	0					
ANR	4624878	ReturnStatement	return NULL ;	143:8:3200:3211	4624856	0	True				
ANR	4624879	Identifier	NULL		4624856	0					
ANR	4624880	ReturnType	char *		4624856	1					
ANR	4624881	Identifier	Condor_Diffie_Hellman :: getGeneratorChar		4624856	2					
ANR	4624882	ParameterList			4624856	3					
ANR	4624883	CFGEntryNode	ENTRY		4624856		True				
ANR	4624884	CFGExitNode	EXIT		4624856		True				
ANR	4624885	Symbol	NULL		4624856						
ANR	4624886	Symbol	BN_bn2hex		4624856						
ANR	4624887	Symbol	dh_		4624856						
ANR	4624888	Symbol	* dh_		4624856						
ANR	4624889	Symbol	dh_ -> g		4624856						
ANR	4624890	Function	Condor_Diffie_Hellman :: getSecret	147:0:3222:3309							
ANR	4624891	FunctionDef	Condor_Diffie_Hellman :: getSecret ()		4624890	0					
ANR	4624892	CompoundStatement		148:0:3287:3309	4624890	0					
ANR	4624893	ReturnStatement	return secret_ ;	149:4:3293:3307	4624890	0	True				
ANR	4624894	Identifier	secret_		4624890	0					
ANR	4624895	ReturnType	const unsigned char *		4624890	1					
ANR	4624896	Identifier	Condor_Diffie_Hellman :: getSecret		4624890	2					
ANR	4624897	ParameterList			4624890	3					
ANR	4624898	CFGEntryNode	ENTRY		4624890		True				
ANR	4624899	CFGExitNode	EXIT		4624890		True				
ANR	4624900	Symbol	secret_		4624890						
ANR	4624901	Function	Condor_Diffie_Hellman :: getSecretSize	152:0:3312:3386							
ANR	4624902	FunctionDef	Condor_Diffie_Hellman :: getSecretSize ()		4624901	0					
ANR	4624903	CompoundStatement		153:0:3363:3386	4624901	0					
ANR	4624904	ReturnStatement	return keySize_ ;	154:4:3369:3384	4624901	0	True				
ANR	4624905	Identifier	keySize_		4624901	0					
ANR	4624906	ReturnType	int		4624901	1					
ANR	4624907	Identifier	Condor_Diffie_Hellman :: getSecretSize		4624901	2					
ANR	4624908	ParameterList			4624901	3					
ANR	4624909	CFGEntryNode	ENTRY		4624901		True				
ANR	4624910	CFGExitNode	EXIT		4624901		True				
ANR	4624911	Symbol	keySize_		4624901						
ANR	4624912	Function	Condor_Diffie_Hellman :: initialize	157:0:3389:4624							
ANR	4624913	FunctionDef	Condor_Diffie_Hellman :: initialize ()		4624912	0					
ANR	4624914	CompoundStatement		158:0:3431:4624	4624912	0					
ANR	4624915	ExpressionStatement	config ( )	161:4:3534:3542	4624912	0	True				
ANR	4624916	CallExpression	config ( )		4624912	0					
ANR	4624917	Callee	config		4624912	0					
ANR	4624918	Identifier	config		4624912	0					
ANR	4624919	ArgumentList			4624912	1					
ANR	4624920	IdentifierDeclStatement	char * dh_config = param ( DH_CONFIG_FILE ) ;	162:4:3548:3588	4624912	1	True				
ANR	4624921	IdentifierDecl	* dh_config = param ( DH_CONFIG_FILE )		4624912	0					
ANR	4624922	IdentifierDeclType	char *		4624912	0					
ANR	4624923	Identifier	dh_config		4624912	1					
ANR	4624924	AssignmentExpression	* dh_config = param ( DH_CONFIG_FILE )		4624912	2		=			
ANR	4624925	Identifier	dh_config		4624912	0					
ANR	4624926	CallExpression	param ( DH_CONFIG_FILE )		4624912	1					
ANR	4624927	Callee	param		4624912	0					
ANR	4624928	Identifier	param		4624912	0					
ANR	4624929	ArgumentList	DH_CONFIG_FILE		4624912	1					
ANR	4624930	Argument	DH_CONFIG_FILE		4624912	0					
ANR	4624931	Identifier	DH_CONFIG_FILE		4624912	0					
ANR	4624932	IdentifierDeclStatement	FILE * fp = 0 ;	164:4:3595:3608	4624912	2	True				
ANR	4624933	IdentifierDecl	* fp = 0		4624912	0					
ANR	4624934	IdentifierDeclType	FILE *		4624912	0					
ANR	4624935	Identifier	fp		4624912	1					
ANR	4624936	AssignmentExpression	* fp = 0		4624912	2		=			
ANR	4624937	Identifier	fp		4624912	0					
ANR	4624938	PrimaryExpression	0		4624912	1					
ANR	4624939	IfStatement	if ( dh_config )		4624912	3					
ANR	4624940	Condition	dh_config	165:9:3619:3627	4624912	0	True				
ANR	4624941	Identifier	dh_config		4624912	0					
ANR	4624942	CompoundStatement		8:21:199:199	4624912	1					
ANR	4624943	IfStatement	"if ( ( fp = safe_fopen_wrapper_follow ( dh_config , ""r"" ) ) == NULL )"		4624912	0					
ANR	4624944	Condition	"( fp = safe_fopen_wrapper_follow ( dh_config , ""r"" ) ) == NULL"	166:13:3646:3701	4624912	0	True				
ANR	4624945	EqualityExpression	"( fp = safe_fopen_wrapper_follow ( dh_config , ""r"" ) ) == NULL"		4624912	0		==			
ANR	4624946	AssignmentExpression	"fp = safe_fopen_wrapper_follow ( dh_config , ""r"" )"		4624912	0		=			
ANR	4624947	Identifier	fp		4624912	0					
ANR	4624948	CallExpression	"safe_fopen_wrapper_follow ( dh_config , ""r"" )"		4624912	1					
ANR	4624949	Callee	safe_fopen_wrapper_follow		4624912	0					
ANR	4624950	Identifier	safe_fopen_wrapper_follow		4624912	0					
ANR	4624951	ArgumentList	dh_config		4624912	1					
ANR	4624952	Argument	dh_config		4624912	0					
ANR	4624953	Identifier	dh_config		4624912	0					
ANR	4624954	Argument	"""r"""		4624912	1					
ANR	4624955	PrimaryExpression	"""r"""		4624912	0					
ANR	4624956	Identifier	NULL		4624912	1					
ANR	4624957	CompoundStatement		9:71:272:272	4624912	1					
ANR	4624958	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to open condor_dh_config file %s\\n"" , dh_config )"	167:12:3718:3791	4624912	0	True				
ANR	4624959	CallExpression	"dprintf ( D_ALWAYS , ""Unable to open condor_dh_config file %s\\n"" , dh_config )"		4624912	0					
ANR	4624960	Callee	dprintf		4624912	0					
ANR	4624961	Identifier	dprintf		4624912	0					
ANR	4624962	ArgumentList	D_ALWAYS		4624912	1					
ANR	4624963	Argument	D_ALWAYS		4624912	0					
ANR	4624964	Identifier	D_ALWAYS		4624912	0					
ANR	4624965	Argument	"""Unable to open condor_dh_config file %s\\n"""		4624912	1					
ANR	4624966	PrimaryExpression	"""Unable to open condor_dh_config file %s\\n"""		4624912	0					
ANR	4624967	Argument	dh_config		4624912	2					
ANR	4624968	Identifier	dh_config		4624912	0					
ANR	4624969	GotoStatement	goto error ;	168:12:3805:3815	4624912	1	True				
ANR	4624970	Identifier	error		4624912	0					
ANR	4624971	ExpressionStatement	"dh_ = PEM_read_DHparams ( fp , NULL , NULL , NULL )"	171:8:3836:3881	4624912	1	True				
ANR	4624972	AssignmentExpression	"dh_ = PEM_read_DHparams ( fp , NULL , NULL , NULL )"		4624912	0		=			
ANR	4624973	Identifier	dh_		4624912	0					
ANR	4624974	CallExpression	"PEM_read_DHparams ( fp , NULL , NULL , NULL )"		4624912	1					
ANR	4624975	Callee	PEM_read_DHparams		4624912	0					
ANR	4624976	Identifier	PEM_read_DHparams		4624912	0					
ANR	4624977	ArgumentList	fp		4624912	1					
ANR	4624978	Argument	fp		4624912	0					
ANR	4624979	Identifier	fp		4624912	0					
ANR	4624980	Argument	NULL		4624912	1					
ANR	4624981	Identifier	NULL		4624912	0					
ANR	4624982	Argument	NULL		4624912	2					
ANR	4624983	Identifier	NULL		4624912	0					
ANR	4624984	Argument	NULL		4624912	3					
ANR	4624985	Identifier	NULL		4624912	0					
ANR	4624986	IfStatement	if ( dh_ == NULL )		4624912	2					
ANR	4624987	Condition	dh_ == NULL	172:12:3895:3905	4624912	0	True				
ANR	4624988	EqualityExpression	dh_ == NULL		4624912	0		==			
ANR	4624989	Identifier	dh_		4624912	0					
ANR	4624990	Identifier	NULL		4624912	1					
ANR	4624991	CompoundStatement		15:25:476:476	4624912	1					
ANR	4624992	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to read DH structure from the configuration file.\\n"" )"	173:12:3922:4001	4624912	0	True				
ANR	4624993	CallExpression	"dprintf ( D_ALWAYS , ""Unable to read DH structure from the configuration file.\\n"" )"		4624912	0					
ANR	4624994	Callee	dprintf		4624912	0					
ANR	4624995	Identifier	dprintf		4624912	0					
ANR	4624996	ArgumentList	D_ALWAYS		4624912	1					
ANR	4624997	Argument	D_ALWAYS		4624912	0					
ANR	4624998	Identifier	D_ALWAYS		4624912	0					
ANR	4624999	Argument	"""Unable to read DH structure from the configuration file.\\n"""		4624912	1					
ANR	4625000	PrimaryExpression	"""Unable to read DH structure from the configuration file.\\n"""		4624912	0					
ANR	4625001	GotoStatement	goto error ;	174:12:4015:4025	4624912	1	True				
ANR	4625002	Identifier	error		4624912	0					
ANR	4625003	IfStatement	if ( DH_generate_key ( dh_ ) == 0 )		4624912	3					
ANR	4625004	Condition	DH_generate_key ( dh_ ) == 0	178:12:4086:4110	4624912	0	True				
ANR	4625005	EqualityExpression	DH_generate_key ( dh_ ) == 0		4624912	0		==			
ANR	4625006	CallExpression	DH_generate_key ( dh_ )		4624912	0					
ANR	4625007	Callee	DH_generate_key		4624912	0					
ANR	4625008	Identifier	DH_generate_key		4624912	0					
ANR	4625009	ArgumentList	dh_		4624912	1					
ANR	4625010	Argument	dh_		4624912	0					
ANR	4625011	Identifier	dh_		4624912	0					
ANR	4625012	PrimaryExpression	0		4624912	1					
ANR	4625013	CompoundStatement		21:39:681:681	4624912	1					
ANR	4625014	ExpressionStatement	"dprintf ( D_ALWAYS , ""Unable to generate a private key \\n"" )"	179:12:4127:4183	4624912	0	True				
ANR	4625015	CallExpression	"dprintf ( D_ALWAYS , ""Unable to generate a private key \\n"" )"		4624912	0					
ANR	4625016	Callee	dprintf		4624912	0					
ANR	4625017	Identifier	dprintf		4624912	0					
ANR	4625018	ArgumentList	D_ALWAYS		4624912	1					
ANR	4625019	Argument	D_ALWAYS		4624912	0					
ANR	4625020	Identifier	D_ALWAYS		4624912	0					
ANR	4625021	Argument	"""Unable to generate a private key \\n"""		4624912	1					
ANR	4625022	PrimaryExpression	"""Unable to generate a private key \\n"""		4624912	0					
ANR	4625023	GotoStatement	goto error ;	180:12:4197:4207	4624912	1	True				
ANR	4625024	Identifier	error		4624912	0					
ANR	4625025	ElseStatement	else		4624912	0					
ANR	4625026	CompoundStatement		26:9:802:802	4624912	0					
ANR	4625027	ExpressionStatement	"dprintf ( D_ALWAYS , ""The required configuration parameter CONDOR_DH_CONFIG is not specified in the condor configuration file!\\n"" )"	184:8:4244:4371	4624912	0	True				
ANR	4625028	CallExpression	"dprintf ( D_ALWAYS , ""The required configuration parameter CONDOR_DH_CONFIG is not specified in the condor configuration file!\\n"" )"		4624912	0					
ANR	4625029	Callee	dprintf		4624912	0					
ANR	4625030	Identifier	dprintf		4624912	0					
ANR	4625031	ArgumentList	D_ALWAYS		4624912	1					
ANR	4625032	Argument	D_ALWAYS		4624912	0					
ANR	4625033	Identifier	D_ALWAYS		4624912	0					
ANR	4625034	Argument	"""The required configuration parameter CONDOR_DH_CONFIG is not specified in the condor configuration file!\\n"""		4624912	1					
ANR	4625035	PrimaryExpression	"""The required configuration parameter CONDOR_DH_CONFIG is not specified in the condor configuration file!\\n"""		4624912	0					
ANR	4625036	GotoStatement	goto error ;	185:8:4381:4391	4624912	1	True				
ANR	4625037	Identifier	error		4624912	0					
ANR	4625038	ExpressionStatement	fclose ( fp )	187:4:4403:4413	4624912	4	True				
ANR	4625039	CallExpression	fclose ( fp )		4624912	0					
ANR	4625040	Callee	fclose		4624912	0					
ANR	4625041	Identifier	fclose		4624912	0					
ANR	4625042	ArgumentList	fp		4624912	1					
ANR	4625043	Argument	fp		4624912	0					
ANR	4625044	Identifier	fp		4624912	0					
ANR	4625045	ExpressionStatement	free ( dh_config )	188:4:4419:4434	4624912	5	True				
ANR	4625046	CallExpression	free ( dh_config )		4624912	0					
ANR	4625047	Callee	free		4624912	0					
ANR	4625048	Identifier	free		4624912	0					
ANR	4625049	ArgumentList	dh_config		4624912	1					
ANR	4625050	Argument	dh_config		4624912	0					
ANR	4625051	Identifier	dh_config		4624912	0					
ANR	4625052	ReturnStatement	return 1 ;	189:4:4440:4448	4624912	6	True				
ANR	4625053	PrimaryExpression	1		4624912	0					
ANR	4625054	Label	error :	190:1:4451:4456	4624912	7	True				
ANR	4625055	Identifier	error		4624912	0					
ANR	4625056	IfStatement	if ( dh_ )		4624912	8					
ANR	4625057	Condition	dh_	191:8:4466:4468	4624912	0	True				
ANR	4625058	Identifier	dh_		4624912	0					
ANR	4625059	CompoundStatement		34:13:1039:1039	4624912	1					
ANR	4625060	ExpressionStatement	DH_free ( dh_ )	192:8:4481:4493	4624912	0	True				
ANR	4625061	CallExpression	DH_free ( dh_ )		4624912	0					
ANR	4625062	Callee	DH_free		4624912	0					
ANR	4625063	Identifier	DH_free		4624912	0					
ANR	4625064	ArgumentList	dh_		4624912	1					
ANR	4625065	Argument	dh_		4624912	0					
ANR	4625066	Identifier	dh_		4624912	0					
ANR	4625067	ExpressionStatement	dh_ = 0	193:8:4503:4510	4624912	1	True				
ANR	4625068	AssignmentExpression	dh_ = 0		4624912	0		=			
ANR	4625069	Identifier	dh_		4624912	0					
ANR	4625070	PrimaryExpression	0		4624912	1					
ANR	4625071	IfStatement	if ( dh_config )		4624912	9					
ANR	4625072	Condition	dh_config	195:8:4526:4534	4624912	0	True				
ANR	4625073	Identifier	dh_config		4624912	0					
ANR	4625074	CompoundStatement		38:19:1105:1105	4624912	1					
ANR	4625075	ExpressionStatement	free ( dh_config )	196:8:4547:4562	4624912	0	True				
ANR	4625076	CallExpression	free ( dh_config )		4624912	0					
ANR	4625077	Callee	free		4624912	0					
ANR	4625078	Identifier	free		4624912	0					
ANR	4625079	ArgumentList	dh_config		4624912	1					
ANR	4625080	Argument	dh_config		4624912	0					
ANR	4625081	Identifier	dh_config		4624912	0					
ANR	4625082	IfStatement	if ( fp )		4624912	10					
ANR	4625083	Condition	fp	198:8:4578:4579	4624912	0	True				
ANR	4625084	Identifier	fp		4624912	0					
ANR	4625085	CompoundStatement		41:12:1150:1150	4624912	1					
ANR	4625086	ExpressionStatement	fclose ( fp )	199:8:4592:4602	4624912	0	True				
ANR	4625087	CallExpression	fclose ( fp )		4624912	0					
ANR	4625088	Callee	fclose		4624912	0					
ANR	4625089	Identifier	fclose		4624912	0					
ANR	4625090	ArgumentList	fp		4624912	1					
ANR	4625091	Argument	fp		4624912	0					
ANR	4625092	Identifier	fp		4624912	0					
ANR	4625093	ReturnStatement	return 0 ;	201:4:4614:4622	4624912	11	True				
ANR	4625094	PrimaryExpression	0		4624912	0					
ANR	4625095	ReturnType	int		4624912	1					
ANR	4625096	Identifier	Condor_Diffie_Hellman :: initialize		4624912	2					
ANR	4625097	ParameterList			4624912	3					
ANR	4625098	CFGEntryNode	ENTRY		4624912		True				
ANR	4625099	CFGExitNode	EXIT		4624912		True				
ANR	4625100	Symbol	NULL		4624912						
ANR	4625101	Symbol	param		4624912						
ANR	4625102	Symbol	DH_CONFIG_FILE		4624912						
ANR	4625103	Symbol	PEM_read_DHparams		4624912						
ANR	4625104	Symbol	dh_config		4624912						
ANR	4625105	Symbol	D_ALWAYS		4624912						
ANR	4625106	Symbol	fp		4624912						
ANR	4625107	Symbol	dh_		4624912						
ANR	4625108	Symbol	DH_generate_key		4624912						
ANR	4625109	Symbol	safe_fopen_wrapper_follow		4624912						
