command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3800033	File	data/converged/CVE-2011-4930_htcondor/src_condor_schedd.V6_shadow_mgr.cpp								
ANR	3800034	Function	Shadow :: Shadow	53:0:1705:2110							
ANR	3800035	FunctionDef	"Shadow :: Shadow (const char * path_arg , ClassAd * ad)"		3800034	0					
ANR	3800036	CompoundStatement		54:0:1757:2110	3800034	0					
ANR	3800037	ExpressionStatement	s_path = strnewp ( path_arg )	55:1:1760:1788	3800034	0	True				
ANR	3800038	AssignmentExpression	s_path = strnewp ( path_arg )		3800034	0		=			
ANR	3800039	Identifier	s_path		3800034	0					
ANR	3800040	CallExpression	strnewp ( path_arg )		3800034	1					
ANR	3800041	Callee	strnewp		3800034	0					
ANR	3800042	Identifier	strnewp		3800034	0					
ANR	3800043	ArgumentList	path_arg		3800034	1					
ANR	3800044	Argument	path_arg		3800034	0					
ANR	3800045	Identifier	path_arg		3800034	0					
ANR	3800046	ExpressionStatement	s_ad = ad	56:1:1791:1800	3800034	1	True				
ANR	3800047	AssignmentExpression	s_ad = ad		3800034	0		=			
ANR	3800048	Identifier	s_ad		3800034	0					
ANR	3800049	Identifier	ad		3800034	1					
ANR	3800050	ExpressionStatement	s_is_dc = false	57:1:1803:1818	3800034	2	True				
ANR	3800051	AssignmentExpression	s_is_dc = false		3800034	0		=			
ANR	3800052	Identifier	s_is_dc		3800034	0					
ANR	3800053	Identifier	false		3800034	1					
ANR	3800054	ExpressionStatement	m_version_info = NULL	58:1:1821:1842	3800034	3	True				
ANR	3800055	AssignmentExpression	m_version_info = NULL		3800034	0		=			
ANR	3800056	Identifier	m_version_info		3800034	0					
ANR	3800057	Identifier	NULL		3800034	1					
ANR	3800058	IfStatement	if ( s_ad )		3800034	4					
ANR	3800059	Condition	s_ad	60:6:1851:1854	3800034	0	True				
ANR	3800060	Identifier	s_ad		3800034	0					
ANR	3800061	CompoundStatement		10:2:157:184	3800034	1					
ANR	3800062	ExpressionStatement	"s_ad -> LookupBool ( ATTR_IS_DAEMON_CORE , s_is_dc )"	61:2:1862:1910	3800034	0	True				
ANR	3800063	CallExpression	"s_ad -> LookupBool ( ATTR_IS_DAEMON_CORE , s_is_dc )"		3800034	0					
ANR	3800064	Callee	s_ad -> LookupBool		3800034	0					
ANR	3800065	PtrMemberAccess	s_ad -> LookupBool		3800034	0					
ANR	3800066	Identifier	s_ad		3800034	0					
ANR	3800067	Identifier	LookupBool		3800034	1					
ANR	3800068	ArgumentList	ATTR_IS_DAEMON_CORE		3800034	1					
ANR	3800069	Argument	ATTR_IS_DAEMON_CORE		3800034	0					
ANR	3800070	Identifier	ATTR_IS_DAEMON_CORE		3800034	0					
ANR	3800071	Argument	s_is_dc		3800034	1					
ANR	3800072	Identifier	s_is_dc		3800034	0					
ANR	3800073	IdentifierDeclStatement	char * version_string = NULL ;	63:2:1915:1942	3800034	1	True				
ANR	3800074	IdentifierDecl	* version_string = NULL		3800034	0					
ANR	3800075	IdentifierDeclType	char *		3800034	0					
ANR	3800076	Identifier	version_string		3800034	1					
ANR	3800077	AssignmentExpression	* version_string = NULL		3800034	2		=			
ANR	3800078	Identifier	NULL		3800034	0					
ANR	3800079	Identifier	NULL		3800034	1					
ANR	3800080	IfStatement	"if ( s_ad -> LookupString ( ATTR_VERSION , & version_string ) )"		3800034	2					
ANR	3800081	Condition	"s_ad -> LookupString ( ATTR_VERSION , & version_string )"	64:6:1950:1998	3800034	0	True				
ANR	3800082	CallExpression	"s_ad -> LookupString ( ATTR_VERSION , & version_string )"		3800034	0					
ANR	3800083	Callee	s_ad -> LookupString		3800034	0					
ANR	3800084	PtrMemberAccess	s_ad -> LookupString		3800034	0					
ANR	3800085	Identifier	s_ad		3800034	0					
ANR	3800086	Identifier	LookupString		3800034	1					
ANR	3800087	ArgumentList	ATTR_VERSION		3800034	1					
ANR	3800088	Argument	ATTR_VERSION		3800034	0					
ANR	3800089	Identifier	ATTR_VERSION		3800034	0					
ANR	3800090	Argument	& version_string		3800034	1					
ANR	3800091	UnaryOperationExpression	& version_string		3800034	0					
ANR	3800092	UnaryOperator	&		3800034	0					
ANR	3800093	Identifier	version_string		3800034	1					
ANR	3800094	CompoundStatement		11:57:243:243	3800034	1					
ANR	3800095	ExpressionStatement	"m_version_info = new CondorVersionInfo ( version_string , ""SHADOW"" , NULL )"	65:3:2006:2076	3800034	0	True				
ANR	3800096	AssignmentExpression	"m_version_info = new CondorVersionInfo ( version_string , ""SHADOW"" , NULL )"		3800034	0		=			
ANR	3800097	Identifier	m_version_info		3800034	0					
ANR	3800098	Expression	"version_string , ""SHADOW"" , NULL"		3800034	1					
ANR	3800099	Identifier	version_string		3800034	0					
ANR	3800100	Expression	"""SHADOW"" , NULL"		3800034	1					
ANR	3800101	PrimaryExpression	"""SHADOW"""		3800034	0					
ANR	3800102	Identifier	NULL		3800034	1					
ANR	3800103	ExpressionStatement	free ( version_string )	66:3:2081:2101	3800034	1	True				
ANR	3800104	CallExpression	free ( version_string )		3800034	0					
ANR	3800105	Callee	free		3800034	0					
ANR	3800106	Identifier	free		3800034	0					
ANR	3800107	ArgumentList	version_string		3800034	1					
ANR	3800108	Argument	version_string		3800034	0					
ANR	3800109	Identifier	version_string		3800034	0					
ANR	3800110	Identifier	Shadow :: Shadow		3800034	1					
ANR	3800111	ParameterList	"const char * path_arg , ClassAd * ad"		3800034	2					
ANR	3800112	Parameter	const char * path_arg	53:16:1721:1740	3800034	0	True				
ANR	3800113	ParameterType	const char *		3800034	0					
ANR	3800114	Identifier	path_arg		3800034	1					
ANR	3800115	Parameter	ClassAd * ad	53:38:1743:1753	3800034	1	True				
ANR	3800116	ParameterType	ClassAd *		3800034	0					
ANR	3800117	Identifier	ad		3800034	1					
ANR	3800118	CFGEntryNode	ENTRY		3800034		True				
ANR	3800119	CFGExitNode	EXIT		3800034		True				
ANR	3800120	Symbol	* s_ad		3800034						
ANR	3800121	Symbol	ad		3800034						
ANR	3800122	Symbol	NULL		3800034						
ANR	3800123	Symbol	s_ad -> LookupString		3800034						
ANR	3800124	Symbol	path_arg		3800034						
ANR	3800125	Symbol	false		3800034						
ANR	3800126	Symbol	ATTR_IS_DAEMON_CORE		3800034						
ANR	3800127	Symbol	m_version_info		3800034						
ANR	3800128	Symbol	s_is_dc		3800034						
ANR	3800129	Symbol	version_string		3800034						
ANR	3800130	Symbol	ATTR_VERSION		3800034						
ANR	3800131	Symbol	& version_string		3800034						
ANR	3800132	Symbol	strnewp		3800034						
ANR	3800133	Symbol	s_ad		3800034						
ANR	3800134	Symbol	s_path		3800034						
ANR	3800135	Function	Shadow :: Shadow	72:0:2114:2566							
ANR	3800136	FunctionDef	Shadow :: Shadow (const Shadow & s)		3800135	0					
ANR	3800137	CompoundStatement		73:0:2148:2566	3800135	0					
ANR	3800138	IfStatement	if ( s . s_path )		3800135	0					
ANR	3800139	Condition	s . s_path	74:5:2155:2162	3800135	0	True				
ANR	3800140	MemberAccess	s . s_path		3800135	0					
ANR	3800141	Identifier	s		3800135	0					
ANR	3800142	Identifier	s_path		3800135	1					
ANR	3800143	CompoundStatement		2:16:17:17	3800135	1					
ANR	3800144	ExpressionStatement	s_path = strnewp ( s . s_path )	75:2:2170:2198	3800135	0	True				
ANR	3800145	AssignmentExpression	s_path = strnewp ( s . s_path )		3800135	0		=			
ANR	3800146	Identifier	s_path		3800135	0					
ANR	3800147	CallExpression	strnewp ( s . s_path )		3800135	1					
ANR	3800148	Callee	strnewp		3800135	0					
ANR	3800149	Identifier	strnewp		3800135	0					
ANR	3800150	ArgumentList	s . s_path		3800135	1					
ANR	3800151	Argument	s . s_path		3800135	0					
ANR	3800152	MemberAccess	s . s_path		3800135	0					
ANR	3800153	Identifier	s		3800135	0					
ANR	3800154	Identifier	s_path		3800135	1					
ANR	3800155	ElseStatement	else		3800135	0					
ANR	3800156	CompoundStatement		4:8:59:59	3800135	0					
ANR	3800157	ExpressionStatement	s_path = NULL	77:2:2212:2225	3800135	0	True				
ANR	3800158	AssignmentExpression	s_path = NULL		3800135	0		=			
ANR	3800159	Identifier	s_path		3800135	0					
ANR	3800160	Identifier	NULL		3800135	1					
ANR	3800161	IfStatement	if ( s . s_ad )		3800135	1					
ANR	3800162	Condition	s . s_ad	80:5:2236:2241	3800135	0	True				
ANR	3800163	MemberAccess	s . s_ad		3800135	0					
ANR	3800164	Identifier	s		3800135	0					
ANR	3800165	Identifier	s_ad		3800135	1					
ANR	3800166	CompoundStatement		8:14:96:96	3800135	1					
ANR	3800167	ExpressionStatement	s_ad = new ClassAd ( * ( s . s_ad ) )	81:2:2249:2280	3800135	0	True				
ANR	3800168	AssignmentExpression	s_ad = new ClassAd ( * ( s . s_ad ) )		3800135	0		=			
ANR	3800169	Identifier	s_ad		3800135	0					
ANR	3800170	UnaryOperationExpression	* ( s . s_ad )		3800135	1					
ANR	3800171	UnaryOperator	*		3800135	0					
ANR	3800172	MemberAccess	s . s_ad		3800135	1					
ANR	3800173	Identifier	s		3800135	0					
ANR	3800174	Identifier	s_ad		3800135	1					
ANR	3800175	ElseStatement	else		3800135	0					
ANR	3800176	CompoundStatement		10:8:141:141	3800135	0					
ANR	3800177	ExpressionStatement	s_ad = NULL	83:2:2294:2305	3800135	0	True				
ANR	3800178	AssignmentExpression	s_ad = NULL		3800135	0		=			
ANR	3800179	Identifier	s_ad		3800135	0					
ANR	3800180	Identifier	NULL		3800135	1					
ANR	3800181	ExpressionStatement	s_is_dc = s . s_is_dc	86:1:2312:2331	3800135	2	True				
ANR	3800182	AssignmentExpression	s_is_dc = s . s_is_dc		3800135	0		=			
ANR	3800183	Identifier	s_is_dc		3800135	0					
ANR	3800184	MemberAccess	s . s_is_dc		3800135	1					
ANR	3800185	Identifier	s		3800135	0					
ANR	3800186	Identifier	s_is_dc		3800135	1					
ANR	3800187	IdentifierDeclStatement	char * version_string = NULL ;	88:1:2335:2362	3800135	3	True				
ANR	3800188	IdentifierDecl	* version_string = NULL		3800135	0					
ANR	3800189	IdentifierDeclType	char *		3800135	0					
ANR	3800190	Identifier	version_string		3800135	1					
ANR	3800191	AssignmentExpression	* version_string = NULL		3800135	2		=			
ANR	3800192	Identifier	NULL		3800135	0					
ANR	3800193	Identifier	NULL		3800135	1					
ANR	3800194	IfStatement	"if ( s_ad && s_ad -> LookupString ( ATTR_VERSION , & version_string ) )"		3800135	4					
ANR	3800195	Condition	"s_ad && s_ad -> LookupString ( ATTR_VERSION , & version_string )"	89:5:2369:2425	3800135	0	True				
ANR	3800196	AndExpression	"s_ad && s_ad -> LookupString ( ATTR_VERSION , & version_string )"		3800135	0		&&			
ANR	3800197	Identifier	s_ad		3800135	0					
ANR	3800198	CallExpression	"s_ad -> LookupString ( ATTR_VERSION , & version_string )"		3800135	1					
ANR	3800199	Callee	s_ad -> LookupString		3800135	0					
ANR	3800200	PtrMemberAccess	s_ad -> LookupString		3800135	0					
ANR	3800201	Identifier	s_ad		3800135	0					
ANR	3800202	Identifier	LookupString		3800135	1					
ANR	3800203	ArgumentList	ATTR_VERSION		3800135	1					
ANR	3800204	Argument	ATTR_VERSION		3800135	0					
ANR	3800205	Identifier	ATTR_VERSION		3800135	0					
ANR	3800206	Argument	& version_string		3800135	1					
ANR	3800207	UnaryOperationExpression	& version_string		3800135	0					
ANR	3800208	UnaryOperator	&		3800135	0					
ANR	3800209	Identifier	version_string		3800135	1					
ANR	3800210	CompoundStatement		17:64:279:279	3800135	1					
ANR	3800211	ExpressionStatement	"m_version_info = new CondorVersionInfo ( version_string , ""SHADOW"" , NULL )"	90:2:2432:2502	3800135	0	True				
ANR	3800212	AssignmentExpression	"m_version_info = new CondorVersionInfo ( version_string , ""SHADOW"" , NULL )"		3800135	0		=			
ANR	3800213	Identifier	m_version_info		3800135	0					
ANR	3800214	Expression	"version_string , ""SHADOW"" , NULL"		3800135	1					
ANR	3800215	Identifier	version_string		3800135	0					
ANR	3800216	Expression	"""SHADOW"" , NULL"		3800135	1					
ANR	3800217	PrimaryExpression	"""SHADOW"""		3800135	0					
ANR	3800218	Identifier	NULL		3800135	1					
ANR	3800219	ExpressionStatement	free ( version_string )	91:2:2506:2526	3800135	1	True				
ANR	3800220	CallExpression	free ( version_string )		3800135	0					
ANR	3800221	Callee	free		3800135	0					
ANR	3800222	Identifier	free		3800135	0					
ANR	3800223	ArgumentList	version_string		3800135	1					
ANR	3800224	Argument	version_string		3800135	0					
ANR	3800225	Identifier	version_string		3800135	0					
ANR	3800226	ElseStatement	else		3800135	0					
ANR	3800227	CompoundStatement		20:8:387:387	3800135	0					
ANR	3800228	ExpressionStatement	m_version_info = NULL	93:2:2540:2561	3800135	0	True				
ANR	3800229	AssignmentExpression	m_version_info = NULL		3800135	0		=			
ANR	3800230	Identifier	m_version_info		3800135	0					
ANR	3800231	Identifier	NULL		3800135	1					
ANR	3800232	Identifier	Shadow :: Shadow		3800135	1					
ANR	3800233	ParameterList	const Shadow & s		3800135	2					
ANR	3800234	Parameter	const Shadow & s	72:16:2130:2144	3800135	0	True				
ANR	3800235	ParameterType	const Shadow &		3800135	0					
ANR	3800236	Identifier	s		3800135	1					
ANR	3800237	CFGEntryNode	ENTRY		3800135		True				
ANR	3800238	CFGExitNode	EXIT		3800135		True				
ANR	3800239	Symbol	* s_ad		3800135						
ANR	3800240	Symbol	NULL		3800135						
ANR	3800241	Symbol	s_ad -> LookupString		3800135						
ANR	3800242	Symbol	* s . s_ad		3800135						
ANR	3800243	Symbol	s . s_path		3800135						
ANR	3800244	Symbol	s . s_ad		3800135						
ANR	3800245	Symbol	m_version_info		3800135						
ANR	3800246	Symbol	s . s_is_dc		3800135						
ANR	3800247	Symbol	s_is_dc		3800135						
ANR	3800248	Symbol	version_string		3800135						
ANR	3800249	Symbol	* ( s . s_ad )		3800135						
ANR	3800250	Symbol	ATTR_VERSION		3800135						
ANR	3800251	Symbol	s		3800135						
ANR	3800252	Symbol	& version_string		3800135						
ANR	3800253	Symbol	strnewp		3800135						
ANR	3800254	Symbol	s_ad		3800135						
ANR	3800255	Symbol	s_path		3800135						
ANR	3800256	Symbol	* s		3800135						
ANR	3800257	Function	Shadow :: ~Shadow	98:0:2570:2716							
ANR	3800258	FunctionDef	Shadow :: ~Shadow ()		3800257	0					
ANR	3800259	CompoundStatement		99:0:2588:2716	3800257	0					
ANR	3800260	IfStatement	if ( s_path )		3800257	0					
ANR	3800261	Condition	s_path	100:5:2595:2600	3800257	0	True				
ANR	3800262	Identifier	s_path		3800257	0					
ANR	3800263	CompoundStatement		2:14:15:15	3800257	1					
ANR	3800264	Statement	delete	101:2:2608:2613	3800257	0	True				
ANR	3800265	Statement	[	101:9:2615:2615	3800257	1	True				
ANR	3800266	Statement	]	101:10:2616:2616	3800257	2	True				
ANR	3800267	ExpressionStatement	s_path	101:12:2618:2624	3800257	3	True				
ANR	3800268	Identifier	s_path		3800257	0					
ANR	3800269	IfStatement	if ( s_ad )		3800257	1					
ANR	3800270	Condition	s_ad	103:5:2634:2637	3800257	0	True				
ANR	3800271	Identifier	s_ad		3800257	0					
ANR	3800272	CompoundStatement		5:12:52:52	3800257	1					
ANR	3800273	Statement	delete	104:2:2645:2650	3800257	0	True				
ANR	3800274	ExpressionStatement	s_ad	104:8:2651:2659	3800257	1	True				
ANR	3800275	Identifier	s_ad		3800257	0					
ANR	3800276	IfStatement	if ( m_version_info )		3800257	2					
ANR	3800277	Condition	m_version_info	106:5:2669:2682	3800257	0	True				
ANR	3800278	Identifier	m_version_info		3800257	0					
ANR	3800279	CompoundStatement		8:21:96:96	3800257	1					
ANR	3800280	Statement	delete	107:2:2689:2694	3800257	0	True				
ANR	3800281	ExpressionStatement	m_version_info	107:8:2695:2711	3800257	1	True				
ANR	3800282	Identifier	m_version_info		3800257	0					
ANR	3800283	Identifier	Shadow :: ~Shadow		3800257	1					
ANR	3800284	ParameterList			3800257	2					
ANR	3800285	CFGEntryNode	ENTRY		3800257		True				
ANR	3800286	CFGExitNode	EXIT		3800257		True				
ANR	3800287	Symbol	s_ad		3800257						
ANR	3800288	Symbol	m_version_info		3800257						
ANR	3800289	Symbol	s_path		3800257						
ANR	3800290	Function	Shadow :: provides	112:0:2720:2908							
ANR	3800291	FunctionDef	Shadow :: provides (const char * ability)		3800290	0					
ANR	3800292	CompoundStatement		114:0:2765:2908	3800290	0					
ANR	3800293	IdentifierDeclStatement	int has_it = 0 ;	115:1:2768:2782	3800290	0	True				
ANR	3800294	IdentifierDecl	has_it = 0		3800290	0					
ANR	3800295	IdentifierDeclType	int		3800290	0					
ANR	3800296	Identifier	has_it		3800290	1					
ANR	3800297	AssignmentExpression	has_it = 0		3800290	2		=			
ANR	3800298	Identifier	has_it		3800290	0					
ANR	3800299	PrimaryExpression	0		3800290	1					
ANR	3800300	IfStatement	if ( ! s_ad )		3800290	1					
ANR	3800301	Condition	! s_ad	116:5:2789:2794	3800290	0	True				
ANR	3800302	UnaryOperationExpression	! s_ad		3800290	0					
ANR	3800303	UnaryOperator	!		3800290	0					
ANR	3800304	Identifier	s_ad		3800290	1					
ANR	3800305	CompoundStatement		3:14:32:32	3800290	1					
ANR	3800306	ReturnStatement	return false ;	117:2:2802:2814	3800290	0	True				
ANR	3800307	Identifier	false		3800290	0					
ANR	3800308	IfStatement	"if ( ! s_ad -> EvalBool ( ability , NULL , has_it ) )"		3800290	2					
ANR	3800309	Condition	"! s_ad -> EvalBool ( ability , NULL , has_it )"	119:5:2824:2862	3800290	0	True				
ANR	3800310	UnaryOperationExpression	"! s_ad -> EvalBool ( ability , NULL , has_it )"		3800290	0					
ANR	3800311	UnaryOperator	!		3800290	0					
ANR	3800312	CallExpression	"s_ad -> EvalBool ( ability , NULL , has_it )"		3800290	1					
ANR	3800313	Callee	s_ad -> EvalBool		3800290	0					
ANR	3800314	PtrMemberAccess	s_ad -> EvalBool		3800290	0					
ANR	3800315	Identifier	s_ad		3800290	0					
ANR	3800316	Identifier	EvalBool		3800290	1					
ANR	3800317	ArgumentList	ability		3800290	1					
ANR	3800318	Argument	ability		3800290	0					
ANR	3800319	Identifier	ability		3800290	0					
ANR	3800320	Argument	NULL		3800290	1					
ANR	3800321	Identifier	NULL		3800290	0					
ANR	3800322	Argument	has_it		3800290	2					
ANR	3800323	Identifier	has_it		3800290	0					
ANR	3800324	CompoundStatement		6:47:100:100	3800290	1					
ANR	3800325	ExpressionStatement	has_it = 0	120:2:2871:2881	3800290	0	True				
ANR	3800326	AssignmentExpression	has_it = 0		3800290	0		=			
ANR	3800327	Identifier	has_it		3800290	0					
ANR	3800328	PrimaryExpression	0		3800290	1					
ANR	3800329	ReturnStatement	return ( bool ) has_it ;	122:1:2887:2906	3800290	3	True				
ANR	3800330	CastExpression	( bool ) has_it		3800290	0					
ANR	3800331	CastTarget	bool		3800290	0					
ANR	3800332	Identifier	has_it		3800290	1					
ANR	3800333	ReturnType	bool		3800290	1					
ANR	3800334	Identifier	Shadow :: provides		3800290	2					
ANR	3800335	ParameterList	const char * ability		3800290	3					
ANR	3800336	Parameter	const char * ability	113:18:2743:2761	3800290	0	True				
ANR	3800337	ParameterType	const char *		3800290	0					
ANR	3800338	Identifier	ability		3800290	1					
ANR	3800339	CFGEntryNode	ENTRY		3800290		True				
ANR	3800340	CFGExitNode	EXIT		3800290		True				
ANR	3800341	Symbol	* s_ad		3800290						
ANR	3800342	Symbol	NULL		3800290						
ANR	3800343	Symbol	has_it		3800290						
ANR	3800344	Symbol	s_ad -> EvalBool		3800290						
ANR	3800345	Symbol	false		3800290						
ANR	3800346	Symbol	s_ad		3800290						
ANR	3800347	Symbol	ability		3800290						
ANR	3800348	Function	Shadow :: printInfo	126:0:2912:3308							
ANR	3800349	FunctionDef	Shadow :: printInfo (int debug_level)		3800348	0					
ANR	3800350	CompoundStatement		128:0:2954:3308	3800348	0					
ANR	3800351	ExpressionStatement	"dprintf ( debug_level , ""Info for \\""%s\\"":\\n"" , s_path )"	129:1:2957:3009	3800348	0	True				
ANR	3800352	CallExpression	"dprintf ( debug_level , ""Info for \\""%s\\"":\\n"" , s_path )"		3800348	0					
ANR	3800353	Callee	dprintf		3800348	0					
ANR	3800354	Identifier	dprintf		3800348	0					
ANR	3800355	ArgumentList	debug_level		3800348	1					
ANR	3800356	Argument	debug_level		3800348	0					
ANR	3800357	Identifier	debug_level		3800348	0					
ANR	3800358	Argument	"""Info for \\""%s\\"":\\n"""		3800348	1					
ANR	3800359	PrimaryExpression	"""Info for \\""%s\\"":\\n"""		3800348	0					
ANR	3800360	Argument	s_path		3800348	2					
ANR	3800361	Identifier	s_path		3800348	0					
ANR	3800362	ExpressionStatement	"dprintf ( debug_level | D_NOHEADER , ""IsDaemonCore: %s\\n"" , s_is_dc ? ""True"" : ""False"" )"	130:1:3012:3102	3800348	1	True				
ANR	3800363	CallExpression	"dprintf ( debug_level | D_NOHEADER , ""IsDaemonCore: %s\\n"" , s_is_dc ? ""True"" : ""False"" )"		3800348	0					
ANR	3800364	Callee	dprintf		3800348	0					
ANR	3800365	Identifier	dprintf		3800348	0					
ANR	3800366	ArgumentList	debug_level | D_NOHEADER		3800348	1					
ANR	3800367	Argument	debug_level | D_NOHEADER		3800348	0					
ANR	3800368	InclusiveOrExpression	debug_level | D_NOHEADER		3800348	0		|			
ANR	3800369	Identifier	debug_level		3800348	0					
ANR	3800370	Identifier	D_NOHEADER		3800348	1					
ANR	3800371	Argument	"""IsDaemonCore: %s\\n"""		3800348	1					
ANR	3800372	PrimaryExpression	"""IsDaemonCore: %s\\n"""		3800348	0					
ANR	3800373	Argument	"s_is_dc ? ""True"" : ""False"""		3800348	2					
ANR	3800374	ConditionalExpression	"s_is_dc ? ""True"" : ""False"""		3800348	0					
ANR	3800375	Condition	s_is_dc		3800348	0					
ANR	3800376	Identifier	s_is_dc		3800348	0					
ANR	3800377	PrimaryExpression	"""True"""		3800348	1					
ANR	3800378	PrimaryExpression	"""False"""		3800348	2					
ANR	3800379	IfStatement	if ( ! s_ad )		3800348	2					
ANR	3800380	Condition	! s_ad	132:5:3109:3114	3800348	0	True				
ANR	3800381	UnaryOperationExpression	! s_ad		3800348	0					
ANR	3800382	UnaryOperator	!		3800348	0					
ANR	3800383	Identifier	s_ad		3800348	1					
ANR	3800384	CompoundStatement		5:14:163:163	3800348	1					
ANR	3800385	ExpressionStatement	"dprintf ( debug_level | D_NOHEADER , ""No ClassAd available!\\n"" )"	133:2:3122:3190	3800348	0	True				
ANR	3800386	CallExpression	"dprintf ( debug_level | D_NOHEADER , ""No ClassAd available!\\n"" )"		3800348	0					
ANR	3800387	Callee	dprintf		3800348	0					
ANR	3800388	Identifier	dprintf		3800348	0					
ANR	3800389	ArgumentList	debug_level | D_NOHEADER		3800348	1					
ANR	3800390	Argument	debug_level | D_NOHEADER		3800348	0					
ANR	3800391	InclusiveOrExpression	debug_level | D_NOHEADER		3800348	0		|			
ANR	3800392	Identifier	debug_level		3800348	0					
ANR	3800393	Identifier	D_NOHEADER		3800348	1					
ANR	3800394	Argument	"""No ClassAd available!\\n"""		3800348	1					
ANR	3800395	PrimaryExpression	"""No ClassAd available!\\n"""		3800348	0					
ANR	3800396	ElseStatement	else		3800348	0					
ANR	3800397	CompoundStatement		8:8:246:246	3800348	0					
ANR	3800398	ExpressionStatement	s_ad -> dPrint ( debug_level )	136:2:3205:3232	3800348	0	True				
ANR	3800399	CallExpression	s_ad -> dPrint ( debug_level )		3800348	0					
ANR	3800400	Callee	s_ad -> dPrint		3800348	0					
ANR	3800401	PtrMemberAccess	s_ad -> dPrint		3800348	0					
ANR	3800402	Identifier	s_ad		3800348	0					
ANR	3800403	Identifier	dPrint		3800348	1					
ANR	3800404	ArgumentList	debug_level		3800348	1					
ANR	3800405	Argument	debug_level		3800348	0					
ANR	3800406	Identifier	debug_level		3800348	0					
ANR	3800407	ExpressionStatement	"dprintf ( debug_level | D_NOHEADER , ""*** End of shadow info ***\\n"" )"	138:1:3238:3305	3800348	3	True				
ANR	3800408	CallExpression	"dprintf ( debug_level | D_NOHEADER , ""*** End of shadow info ***\\n"" )"		3800348	0					
ANR	3800409	Callee	dprintf		3800348	0					
ANR	3800410	Identifier	dprintf		3800348	0					
ANR	3800411	ArgumentList	debug_level | D_NOHEADER		3800348	1					
ANR	3800412	Argument	debug_level | D_NOHEADER		3800348	0					
ANR	3800413	InclusiveOrExpression	debug_level | D_NOHEADER		3800348	0		|			
ANR	3800414	Identifier	debug_level		3800348	0					
ANR	3800415	Identifier	D_NOHEADER		3800348	1					
ANR	3800416	Argument	"""*** End of shadow info ***\\n"""		3800348	1					
ANR	3800417	PrimaryExpression	"""*** End of shadow info ***\\n"""		3800348	0					
ANR	3800418	ReturnType	void		3800348	1					
ANR	3800419	Identifier	Shadow :: printInfo		3800348	2					
ANR	3800420	ParameterList	int debug_level		3800348	3					
ANR	3800421	Parameter	int debug_level	127:19:2936:2950	3800348	0	True				
ANR	3800422	ParameterType	int		3800348	0					
ANR	3800423	Identifier	debug_level		3800348	1					
ANR	3800424	CFGEntryNode	ENTRY		3800348		True				
ANR	3800425	CFGExitNode	EXIT		3800348		True				
ANR	3800426	Symbol	debug_level		3800348						
ANR	3800427	Symbol	s_ad		3800348						
ANR	3800428	Symbol	s_path		3800348						
ANR	3800429	Symbol	s_is_dc		3800348						
ANR	3800430	Symbol	D_NOHEADER		3800348						
ANR	3800431	Function	Shadow :: builtSinceVersion	142:0:3312:3900							
ANR	3800432	FunctionDef	"Shadow :: builtSinceVersion (int major , int minor , int sub_minor)"		3800431	0					
ANR	3800433	CompoundStatement		143:63:3380:3900	3800431	0					
ANR	3800434	IfStatement	if ( m_version_info )		3800431	0					
ANR	3800435	Condition	m_version_info	144:5:3387:3400	3800431	0	True				
ANR	3800436	Identifier	m_version_info		3800431	0					
ANR	3800437	CompoundStatement		2:21:22:22	3800431	1					
ANR	3800438	ReturnStatement	"return m_version_info -> built_since_version ( major , minor , sub_minor ) ;"	145:2:3407:3474	3800431	0	True				
ANR	3800439	CallExpression	"m_version_info -> built_since_version ( major , minor , sub_minor )"		3800431	0					
ANR	3800440	Callee	m_version_info -> built_since_version		3800431	0					
ANR	3800441	PtrMemberAccess	m_version_info -> built_since_version		3800431	0					
ANR	3800442	Identifier	m_version_info		3800431	0					
ANR	3800443	Identifier	built_since_version		3800431	1					
ANR	3800444	ArgumentList	major		3800431	1					
ANR	3800445	Argument	major		3800431	0					
ANR	3800446	Identifier	major		3800431	0					
ANR	3800447	Argument	minor		3800431	1					
ANR	3800448	Identifier	minor		3800431	0					
ANR	3800449	Argument	sub_minor		3800431	2					
ANR	3800450	Identifier	sub_minor		3800431	0					
ANR	3800451	Statement	dprintf	153:1:3727:3733	3800431	1	True				
ANR	3800452	Statement	(	153:8:3734:3734	3800431	2	True				
ANR	3800453	Statement	D_ALWAYS	153:9:3735:3742	3800431	3	True				
ANR	3800454	Statement	","	153:17:3743:3743	3800431	4	True				
ANR	3800455	Statement	"""ERROR: shadow classad does not contain version """	153:19:3745:3793	3800431	5	True				
ANR	3800456	Statement	"""information, it must be REALLY OLD.  """	154:3:3798:3836	3800431	6	True				
ANR	3800457	Statement	"""Please upgrade your shadow immediately."""	155:3:3841:3881	3800431	7	True				
ANR	3800458	Statement	)	155:44:3882:3882	3800431	8	True				
ANR	3800459	ExpressionStatement		155:45:3883:3883	3800431	9	True				
ANR	3800460	ReturnStatement	return false ;	156:1:3886:3898	3800431	10	True				
ANR	3800461	Identifier	false		3800431	0					
ANR	3800462	ReturnType	bool		3800431	1					
ANR	3800463	Identifier	Shadow :: builtSinceVersion		3800431	2					
ANR	3800464	ParameterList	"int major , int minor , int sub_minor"		3800431	3					
ANR	3800465	Parameter	int major	143:26:3343:3351	3800431	0	True				
ANR	3800466	ParameterType	int		3800431	0					
ANR	3800467	Identifier	major		3800431	1					
ANR	3800468	Parameter	int minor	143:37:3354:3362	3800431	1	True				
ANR	3800469	ParameterType	int		3800431	0					
ANR	3800470	Identifier	minor		3800431	1					
ANR	3800471	Parameter	int sub_minor	143:48:3365:3377	3800431	2	True				
ANR	3800472	ParameterType	int		3800431	0					
ANR	3800473	Identifier	sub_minor		3800431	1					
ANR	3800474	CFGEntryNode	ENTRY		3800431		True				
ANR	3800475	CFGExitNode	EXIT		3800431		True				
ANR	3800476	Symbol	sub_minor		3800431						
ANR	3800477	Symbol	m_version_info -> built_since_version		3800431						
ANR	3800478	Symbol	major		3800431						
ANR	3800479	Symbol	minor		3800431						
ANR	3800480	Symbol	* m_version_info		3800431						
ANR	3800481	Symbol	false		3800431						
ANR	3800482	Symbol	m_version_info		3800431						
ANR	3800483	Function	Shadow :: builtSinceDate	160:0:3904:4472							
ANR	3800484	FunctionDef	"Shadow :: builtSinceDate (int month , int day , int year)"		3800483	0					
ANR	3800485	CompoundStatement		161:53:3962:4472	3800483	0					
ANR	3800486	IfStatement	if ( m_version_info )		3800483	0					
ANR	3800487	Condition	m_version_info	162:5:3969:3982	3800483	0	True				
ANR	3800488	Identifier	m_version_info		3800483	0					
ANR	3800489	CompoundStatement		2:21:22:22	3800483	1					
ANR	3800490	ReturnStatement	"return m_version_info -> built_since_date ( month , day , year ) ;"	163:2:3989:4046	3800483	0	True				
ANR	3800491	CallExpression	"m_version_info -> built_since_date ( month , day , year )"		3800483	0					
ANR	3800492	Callee	m_version_info -> built_since_date		3800483	0					
ANR	3800493	PtrMemberAccess	m_version_info -> built_since_date		3800483	0					
ANR	3800494	Identifier	m_version_info		3800483	0					
ANR	3800495	Identifier	built_since_date		3800483	1					
ANR	3800496	ArgumentList	month		3800483	1					
ANR	3800497	Argument	month		3800483	0					
ANR	3800498	Identifier	month		3800483	0					
ANR	3800499	Argument	day		3800483	1					
ANR	3800500	Identifier	day		3800483	0					
ANR	3800501	Argument	year		3800483	2					
ANR	3800502	Identifier	year		3800483	0					
ANR	3800503	Statement	dprintf	171:1:4299:4305	3800483	1	True				
ANR	3800504	Statement	(	171:8:4306:4306	3800483	2	True				
ANR	3800505	Statement	D_ALWAYS	171:9:4307:4314	3800483	3	True				
ANR	3800506	Statement	","	171:17:4315:4315	3800483	4	True				
ANR	3800507	Statement	"""ERROR: shadow classad does not contain version """	171:19:4317:4365	3800483	5	True				
ANR	3800508	Statement	"""information, it must be REALLY OLD.  """	172:3:4370:4408	3800483	6	True				
ANR	3800509	Statement	"""Please upgrade your shadow immediately."""	173:3:4413:4453	3800483	7	True				
ANR	3800510	Statement	)	173:44:4454:4454	3800483	8	True				
ANR	3800511	ExpressionStatement		173:45:4455:4455	3800483	9	True				
ANR	3800512	ReturnStatement	return false ;	174:1:4458:4470	3800483	10	True				
ANR	3800513	Identifier	false		3800483	0					
ANR	3800514	ReturnType	bool		3800483	1					
ANR	3800515	Identifier	Shadow :: builtSinceDate		3800483	2					
ANR	3800516	ParameterList	"int month , int day , int year"		3800483	3					
ANR	3800517	Parameter	int month	161:23:3932:3940	3800483	0	True				
ANR	3800518	ParameterType	int		3800483	0					
ANR	3800519	Identifier	month		3800483	1					
ANR	3800520	Parameter	int day	161:34:3943:3949	3800483	1	True				
ANR	3800521	ParameterType	int		3800483	0					
ANR	3800522	Identifier	day		3800483	1					
ANR	3800523	Parameter	int year	161:43:3952:3959	3800483	2	True				
ANR	3800524	ParameterType	int		3800483	0					
ANR	3800525	Identifier	year		3800483	1					
ANR	3800526	CFGEntryNode	ENTRY		3800483		True				
ANR	3800527	CFGExitNode	EXIT		3800483		True				
ANR	3800528	Symbol	month		3800483						
ANR	3800529	Symbol	* m_version_info		3800483						
ANR	3800530	Symbol	year		3800483						
ANR	3800531	Symbol	false		3800483						
ANR	3800532	Symbol	m_version_info		3800483						
ANR	3800533	Symbol	day		3800483						
ANR	3800534	Symbol	m_version_info -> built_since_date		3800483						
ANR	3800535	Function	ShadowMgr :: ShadowMgr	183:0:4606:4631							
ANR	3800536	FunctionDef	ShadowMgr :: ShadowMgr ()		3800535	0					
ANR	3800537	CompoundStatement		184:0:4629:4631	3800535	0					
ANR	3800538	Identifier	ShadowMgr :: ShadowMgr		3800535	1					
ANR	3800539	ParameterList			3800535	2					
ANR	3800540	CFGEntryNode	ENTRY		3800535		True				
ANR	3800541	CFGExitNode	EXIT		3800535		True				
ANR	3800542	Function	ShadowMgr :: ~ShadowMgr	188:0:4635:4793							
ANR	3800543	FunctionDef	ShadowMgr :: ~ShadowMgr ()		3800542	0					
ANR	3800544	CompoundStatement		189:0:4659:4793	3800542	0					
ANR	3800545	IdentifierDeclStatement	Shadow * tmp_shadow ;	190:1:4662:4680	3800542	0	True				
ANR	3800546	IdentifierDecl	* tmp_shadow		3800542	0					
ANR	3800547	IdentifierDeclType	Shadow *		3800542	0					
ANR	3800548	Identifier	tmp_shadow		3800542	1					
ANR	3800549	ExpressionStatement	shadows . Rewind ( )	191:1:4683:4699	3800542	1	True				
ANR	3800550	CallExpression	shadows . Rewind ( )		3800542	0					
ANR	3800551	Callee	shadows . Rewind		3800542	0					
ANR	3800552	MemberAccess	shadows . Rewind		3800542	0					
ANR	3800553	Identifier	shadows		3800542	0					
ANR	3800554	Identifier	Rewind		3800542	1					
ANR	3800555	ArgumentList			3800542	1					
ANR	3800556	WhileStatement	while ( shadows . Next ( tmp_shadow ) )		3800542	2					
ANR	3800557	Condition	shadows . Next ( tmp_shadow )	192:8:4709:4732	3800542	0	True				
ANR	3800558	CallExpression	shadows . Next ( tmp_shadow )		3800542	0					
ANR	3800559	Callee	shadows . Next		3800542	0					
ANR	3800560	MemberAccess	shadows . Next		3800542	0					
ANR	3800561	Identifier	shadows		3800542	0					
ANR	3800562	Identifier	Next		3800542	1					
ANR	3800563	ArgumentList	tmp_shadow		3800542	1					
ANR	3800564	Argument	tmp_shadow		3800542	0					
ANR	3800565	Identifier	tmp_shadow		3800542	0					
ANR	3800566	CompoundStatement		4:35:76:76	3800542	1					
ANR	3800567	Statement	delete	193:2:4740:4745	3800542	0	True				
ANR	3800568	ExpressionStatement	tmp_shadow	193:8:4746:4760	3800542	1	True				
ANR	3800569	Identifier	tmp_shadow		3800542	0					
ANR	3800570	ExpressionStatement	shadows . DeleteCurrent ( )	194:2:4764:4787	3800542	2	True				
ANR	3800571	CallExpression	shadows . DeleteCurrent ( )		3800542	0					
ANR	3800572	Callee	shadows . DeleteCurrent		3800542	0					
ANR	3800573	MemberAccess	shadows . DeleteCurrent		3800542	0					
ANR	3800574	Identifier	shadows		3800542	0					
ANR	3800575	Identifier	DeleteCurrent		3800542	1					
ANR	3800576	ArgumentList			3800542	1					
ANR	3800577	Identifier	ShadowMgr :: ~ShadowMgr		3800542	1					
ANR	3800578	ParameterList			3800542	2					
ANR	3800579	CFGEntryNode	ENTRY		3800542		True				
ANR	3800580	CFGExitNode	EXIT		3800542		True				
ANR	3800581	Symbol	shadows		3800542						
ANR	3800582	Symbol	tmp_shadow		3800542						
ANR	3800583	Symbol	shadows . Next		3800542						
ANR	3800584	Function	ShadowMgr :: init	200:0:4797:6345							
ANR	3800585	FunctionDef	ShadowMgr :: init ()		3800584	0					
ANR	3800586	CompoundStatement		202:0:4826:6345	3800584	0					
ANR	3800587	IdentifierDeclStatement	StringList shadow_list ;	203:1:4829:4851	3800584	0	True				
ANR	3800588	IdentifierDecl	shadow_list		3800584	0					
ANR	3800589	IdentifierDeclType	StringList		3800584	0					
ANR	3800590	Identifier	shadow_list		3800584	1					
ANR	3800591	IdentifierDeclStatement	StringList checked_shadow_list ;	204:1:4854:4884	3800584	1	True				
ANR	3800592	IdentifierDecl	checked_shadow_list		3800584	0					
ANR	3800593	IdentifierDeclType	StringList		3800584	0					
ANR	3800594	Identifier	checked_shadow_list		3800584	1					
ANR	3800595	IdentifierDeclStatement	Shadow * tmp_shadow ;	205:1:4887:4905	3800584	2	True				
ANR	3800596	IdentifierDecl	* tmp_shadow		3800584	0					
ANR	3800597	IdentifierDeclType	Shadow *		3800584	0					
ANR	3800598	Identifier	tmp_shadow		3800584	1					
ANR	3800599	ExpressionStatement	shadows . Rewind ( )	206:1:4908:4924	3800584	3	True				
ANR	3800600	CallExpression	shadows . Rewind ( )		3800584	0					
ANR	3800601	Callee	shadows . Rewind		3800584	0					
ANR	3800602	MemberAccess	shadows . Rewind		3800584	0					
ANR	3800603	Identifier	shadows		3800584	0					
ANR	3800604	Identifier	Rewind		3800584	1					
ANR	3800605	ArgumentList			3800584	1					
ANR	3800606	WhileStatement	while ( shadows . Next ( tmp_shadow ) )		3800584	4					
ANR	3800607	Condition	shadows . Next ( tmp_shadow )	207:8:4934:4957	3800584	0	True				
ANR	3800608	CallExpression	shadows . Next ( tmp_shadow )		3800584	0					
ANR	3800609	Callee	shadows . Next		3800584	0					
ANR	3800610	MemberAccess	shadows . Next		3800584	0					
ANR	3800611	Identifier	shadows		3800584	0					
ANR	3800612	Identifier	Next		3800584	1					
ANR	3800613	ArgumentList	tmp_shadow		3800584	1					
ANR	3800614	Argument	tmp_shadow		3800584	0					
ANR	3800615	Identifier	tmp_shadow		3800584	0					
ANR	3800616	CompoundStatement		6:35:134:134	3800584	1					
ANR	3800617	Statement	delete	208:2:4965:4970	3800584	0	True				
ANR	3800618	ExpressionStatement	tmp_shadow	208:8:4971:4985	3800584	1	True				
ANR	3800619	Identifier	tmp_shadow		3800584	0					
ANR	3800620	ExpressionStatement	shadows . DeleteCurrent ( )	209:2:4989:5012	3800584	2	True				
ANR	3800621	CallExpression	shadows . DeleteCurrent ( )		3800584	0					
ANR	3800622	Callee	shadows . DeleteCurrent		3800584	0					
ANR	3800623	MemberAccess	shadows . DeleteCurrent		3800584	0					
ANR	3800624	Identifier	shadows		3800584	0					
ANR	3800625	Identifier	DeleteCurrent		3800584	1					
ANR	3800626	ArgumentList			3800584	1					
ANR	3800627	IdentifierDeclStatement	"char * tmp , * shadow_path ;"	212:1:5019:5042	3800584	5	True				
ANR	3800628	IdentifierDecl	* tmp		3800584	0					
ANR	3800629	IdentifierDeclType	char *		3800584	0					
ANR	3800630	Identifier	tmp		3800584	1					
ANR	3800631	IdentifierDecl	* shadow_path		3800584	1					
ANR	3800632	IdentifierDeclType	char *		3800584	0					
ANR	3800633	Identifier	shadow_path		3800584	1					
ANR	3800634	ExpressionStatement	"tmp = param ( ""SHADOW_LIST"" )"	213:1:5045:5073	3800584	6	True				
ANR	3800635	AssignmentExpression	"tmp = param ( ""SHADOW_LIST"" )"		3800584	0		=			
ANR	3800636	Identifier	tmp		3800584	0					
ANR	3800637	CallExpression	"param ( ""SHADOW_LIST"" )"		3800584	1					
ANR	3800638	Callee	param		3800584	0					
ANR	3800639	Identifier	param		3800584	0					
ANR	3800640	ArgumentList	"""SHADOW_LIST"""		3800584	1					
ANR	3800641	Argument	"""SHADOW_LIST"""		3800584	0					
ANR	3800642	PrimaryExpression	"""SHADOW_LIST"""		3800584	0					
ANR	3800643	IfStatement	if ( ! tmp )		3800584	7					
ANR	3800644	Condition	! tmp	214:5:5080:5084	3800584	0	True				
ANR	3800645	UnaryOperationExpression	! tmp		3800584	0					
ANR	3800646	UnaryOperator	!		3800584	0					
ANR	3800647	Identifier	tmp		3800584	1					
ANR	3800648	CompoundStatement		13:13:261:261	3800584	1					
ANR	3800649	ExpressionStatement	"tmp = strdup ( ""SHADOW, SHADOW_STANDARD"" )"	216:2:5131:5172	3800584	0	True				
ANR	3800650	AssignmentExpression	"tmp = strdup ( ""SHADOW, SHADOW_STANDARD"" )"		3800584	0		=			
ANR	3800651	Identifier	tmp		3800584	0					
ANR	3800652	CallExpression	"strdup ( ""SHADOW, SHADOW_STANDARD"" )"		3800584	1					
ANR	3800653	Callee	strdup		3800584	0					
ANR	3800654	Identifier	strdup		3800584	0					
ANR	3800655	ArgumentList	"""SHADOW, SHADOW_STANDARD"""		3800584	1					
ANR	3800656	Argument	"""SHADOW, SHADOW_STANDARD"""		3800584	0					
ANR	3800657	PrimaryExpression	"""SHADOW, SHADOW_STANDARD"""		3800584	0					
ANR	3800658	Statement	dprintf	217:2:5176:5182	3800584	1	True				
ANR	3800659	Statement	(	217:9:5183:5183	3800584	2	True				
ANR	3800660	Statement	D_ALWAYS	217:10:5184:5191	3800584	3	True				
ANR	3800661	Statement	","	217:18:5192:5192	3800584	4	True				
ANR	3800662	Statement	"""WARNING: SHADOW_LIST not defined in config file, """	218:4:5198:5248	3800584	5	True				
ANR	3800663	Statement	"""using default: %s\\n"""	219:4:5254:5274	3800584	6	True				
ANR	3800664	Statement	","	219:25:5275:5275	3800584	7	True				
ANR	3800665	Statement	tmp	219:27:5277:5279	3800584	8	True				
ANR	3800666	Statement	)	219:30:5280:5280	3800584	9	True				
ANR	3800667	ExpressionStatement		219:31:5281:5281	3800584	10	True				
ANR	3800668	ExpressionStatement	shadow_list . initializeFromString ( tmp )	221:1:5287:5326	3800584	8	True				
ANR	3800669	CallExpression	shadow_list . initializeFromString ( tmp )		3800584	0					
ANR	3800670	Callee	shadow_list . initializeFromString		3800584	0					
ANR	3800671	MemberAccess	shadow_list . initializeFromString		3800584	0					
ANR	3800672	Identifier	shadow_list		3800584	0					
ANR	3800673	Identifier	initializeFromString		3800584	1					
ANR	3800674	ArgumentList	tmp		3800584	1					
ANR	3800675	Argument	tmp		3800584	0					
ANR	3800676	Identifier	tmp		3800584	0					
ANR	3800677	ExpressionStatement	free ( tmp )	222:1:5329:5340	3800584	9	True				
ANR	3800678	CallExpression	free ( tmp )		3800584	0					
ANR	3800679	Callee	free		3800584	0					
ANR	3800680	Identifier	free		3800584	0					
ANR	3800681	ArgumentList	tmp		3800584	1					
ANR	3800682	Argument	tmp		3800584	0					
ANR	3800683	Identifier	tmp		3800584	0					
ANR	3800684	ExpressionStatement	shadow_list . rewind ( )	224:1:5344:5364	3800584	10	True				
ANR	3800685	CallExpression	shadow_list . rewind ( )		3800584	0					
ANR	3800686	Callee	shadow_list . rewind		3800584	0					
ANR	3800687	MemberAccess	shadow_list . rewind		3800584	0					
ANR	3800688	Identifier	shadow_list		3800584	0					
ANR	3800689	Identifier	rewind		3800584	1					
ANR	3800690	ArgumentList			3800584	1					
ANR	3800691	WhileStatement	while ( ( tmp = shadow_list . next ( ) ) )		3800584	11					
ANR	3800692	Condition	tmp = shadow_list . next ( )	225:8:5374:5399	3800584	0	True				
ANR	3800693	AssignmentExpression	tmp = shadow_list . next ( )		3800584	0		=			
ANR	3800694	Identifier	tmp		3800584	0					
ANR	3800695	CallExpression	shadow_list . next ( )		3800584	1					
ANR	3800696	Callee	shadow_list . next		3800584	0					
ANR	3800697	MemberAccess	shadow_list . next		3800584	0					
ANR	3800698	Identifier	shadow_list		3800584	0					
ANR	3800699	Identifier	next		3800584	1					
ANR	3800700	ArgumentList			3800584	1					
ANR	3800701	CompoundStatement		24:37:576:576	3800584	1					
ANR	3800702	ExpressionStatement	shadow_path = param ( tmp )	226:2:5407:5433	3800584	0	True				
ANR	3800703	AssignmentExpression	shadow_path = param ( tmp )		3800584	0		=			
ANR	3800704	Identifier	shadow_path		3800584	0					
ANR	3800705	CallExpression	param ( tmp )		3800584	1					
ANR	3800706	Callee	param		3800584	0					
ANR	3800707	Identifier	param		3800584	0					
ANR	3800708	ArgumentList	tmp		3800584	1					
ANR	3800709	Argument	tmp		3800584	0					
ANR	3800710	Identifier	tmp		3800584	0					
ANR	3800711	IfStatement	if ( ! shadow_path )		3800584	1					
ANR	3800712	Condition	! shadow_path	227:6:5441:5453	3800584	0	True				
ANR	3800713	UnaryOperationExpression	! shadow_path		3800584	0					
ANR	3800714	UnaryOperator	!		3800584	0					
ANR	3800715	Identifier	shadow_path		3800584	1					
ANR	3800716	CompoundStatement		26:22:630:630	3800584	1					
ANR	3800717	Statement	dprintf	228:3:5462:5468	3800584	0	True				
ANR	3800718	Statement	(	228:10:5469:5469	3800584	1	True				
ANR	3800719	Statement	D_ALWAYS	228:12:5471:5478	3800584	2	True				
ANR	3800720	Statement	","	228:20:5479:5479	3800584	3	True				
ANR	3800721	Statement	"""Shadow specified in SHADOW_LIST """	228:22:5481:5514	3800584	4	True				
ANR	3800722	Statement	"""\\""%s\\"" not found in config file, ignoring.\\n"""	229:6:5522:5567	3800584	5	True				
ANR	3800723	Statement	","	229:52:5568:5568	3800584	6	True				
ANR	3800724	Statement	tmp	230:6:5576:5578	3800584	7	True				
ANR	3800725	Statement	)	230:10:5580:5580	3800584	8	True				
ANR	3800726	ExpressionStatement		230:11:5581:5581	3800584	9	True				
ANR	3800727	ContinueStatement	continue ;	231:3:5587:5595	3800584	10	True				
ANR	3800728	IfStatement	if ( checked_shadow_list . contains ( shadow_path ) )		3800584	2					
ANR	3800729	Condition	checked_shadow_list . contains ( shadow_path )	233:6:5607:5647	3800584	0	True				
ANR	3800730	CallExpression	checked_shadow_list . contains ( shadow_path )		3800584	0					
ANR	3800731	Callee	checked_shadow_list . contains		3800584	0					
ANR	3800732	MemberAccess	checked_shadow_list . contains		3800584	0					
ANR	3800733	Identifier	checked_shadow_list		3800584	0					
ANR	3800734	Identifier	contains		3800584	1					
ANR	3800735	ArgumentList	shadow_path		3800584	1					
ANR	3800736	Argument	shadow_path		3800584	0					
ANR	3800737	Identifier	shadow_path		3800584	0					
ANR	3800738	CompoundStatement		32:50:824:824	3800584	1					
ANR	3800739	Statement	dprintf	234:3:5656:5662	3800584	0	True				
ANR	3800740	Statement	(	234:10:5663:5663	3800584	1	True				
ANR	3800741	Statement	D_ALWAYS	234:12:5665:5672	3800584	2	True				
ANR	3800742	Statement	","	234:20:5673:5673	3800584	3	True				
ANR	3800743	Statement	"""Shadow pointed to by \\""%s\\"" (%s) is """	234:22:5675:5712	3800584	4	True				
ANR	3800744	Statement	"""in SHADOW_LIST more than once, ignoring.\\n"""	235:6:5720:5763	3800584	5	True				
ANR	3800745	Statement	","	235:50:5764:5764	3800584	6	True				
ANR	3800746	Statement	tmp	236:6:5773:5775	3800584	7	True				
ANR	3800747	Statement	","	236:9:5776:5776	3800584	8	True				
ANR	3800748	Statement	shadow_path	236:11:5778:5788	3800584	9	True				
ANR	3800749	Statement	)	236:23:5790:5790	3800584	10	True				
ANR	3800750	ExpressionStatement		236:24:5791:5791	3800584	11	True				
ANR	3800751	ExpressionStatement	free ( shadow_path )	237:3:5796:5815	3800584	12	True				
ANR	3800752	CallExpression	free ( shadow_path )		3800584	0					
ANR	3800753	Callee	free		3800584	0					
ANR	3800754	Identifier	free		3800584	0					
ANR	3800755	ArgumentList	shadow_path		3800584	1					
ANR	3800756	Argument	shadow_path		3800584	0					
ANR	3800757	Identifier	shadow_path		3800584	0					
ANR	3800758	ContinueStatement	continue ;	238:3:5820:5828	3800584	13	True				
ANR	3800759	ExpressionStatement	tmp_shadow = makeShadow ( shadow_path )	245:2:6064:6102	3800584	3	True				
ANR	3800760	AssignmentExpression	tmp_shadow = makeShadow ( shadow_path )		3800584	0		=			
ANR	3800761	Identifier	tmp_shadow		3800584	0					
ANR	3800762	CallExpression	makeShadow ( shadow_path )		3800584	1					
ANR	3800763	Callee	makeShadow		3800584	0					
ANR	3800764	Identifier	makeShadow		3800584	0					
ANR	3800765	ArgumentList	shadow_path		3800584	1					
ANR	3800766	Argument	shadow_path		3800584	0					
ANR	3800767	Identifier	shadow_path		3800584	0					
ANR	3800768	IfStatement	if ( tmp_shadow )		3800584	4					
ANR	3800769	Condition	tmp_shadow	246:6:6110:6119	3800584	0	True				
ANR	3800770	Identifier	tmp_shadow		3800584	0					
ANR	3800771	CompoundStatement		45:19:1296:1296	3800584	1					
ANR	3800772	ExpressionStatement	shadows . Append ( tmp_shadow )	247:3:6128:6156	3800584	0	True				
ANR	3800773	CallExpression	shadows . Append ( tmp_shadow )		3800584	0					
ANR	3800774	Callee	shadows . Append		3800584	0					
ANR	3800775	MemberAccess	shadows . Append		3800584	0					
ANR	3800776	Identifier	shadows		3800584	0					
ANR	3800777	Identifier	Append		3800584	1					
ANR	3800778	ArgumentList	tmp_shadow		3800584	1					
ANR	3800779	Argument	tmp_shadow		3800584	0					
ANR	3800780	Identifier	tmp_shadow		3800584	0					
ANR	3800781	ExpressionStatement	checked_shadow_list . append ( shadow_path )	251:2:6276:6317	3800584	5	True				
ANR	3800782	CallExpression	checked_shadow_list . append ( shadow_path )		3800584	0					
ANR	3800783	Callee	checked_shadow_list . append		3800584	0					
ANR	3800784	MemberAccess	checked_shadow_list . append		3800584	0					
ANR	3800785	Identifier	checked_shadow_list		3800584	0					
ANR	3800786	Identifier	append		3800584	1					
ANR	3800787	ArgumentList	shadow_path		3800584	1					
ANR	3800788	Argument	shadow_path		3800584	0					
ANR	3800789	Identifier	shadow_path		3800584	0					
ANR	3800790	ExpressionStatement	free ( shadow_path )	252:2:6321:6340	3800584	6	True				
ANR	3800791	CallExpression	free ( shadow_path )		3800584	0					
ANR	3800792	Callee	free		3800584	0					
ANR	3800793	Identifier	free		3800584	0					
ANR	3800794	ArgumentList	shadow_path		3800584	1					
ANR	3800795	Argument	shadow_path		3800584	0					
ANR	3800796	Identifier	shadow_path		3800584	0					
ANR	3800797	ReturnType	void		3800584	1					
ANR	3800798	Identifier	ShadowMgr :: init		3800584	2					
ANR	3800799	ParameterList			3800584	3					
ANR	3800800	CFGEntryNode	ENTRY		3800584		True				
ANR	3800801	CFGExitNode	EXIT		3800584		True				
ANR	3800802	Symbol	makeShadow		3800584						
ANR	3800803	Symbol	param		3800584						
ANR	3800804	Symbol	tmp		3800584						
ANR	3800805	Symbol	checked_shadow_list . contains		3800584						
ANR	3800806	Symbol	checked_shadow_list		3800584						
ANR	3800807	Symbol	shadows		3800584						
ANR	3800808	Symbol	shadow_list . next		3800584						
ANR	3800809	Symbol	shadow_list		3800584						
ANR	3800810	Symbol	tmp_shadow		3800584						
ANR	3800811	Symbol	strdup		3800584						
ANR	3800812	Symbol	shadows . Next		3800584						
ANR	3800813	Symbol	shadow_path		3800584						
ANR	3800814	Function	ShadowMgr :: findShadow	257:0:6349:6621							
ANR	3800815	FunctionDef	ShadowMgr :: findShadow (const char * ability)		3800814	0					
ANR	3800816	CompoundStatement		259:0:6402:6621	3800814	0					
ANR	3800817	IdentifierDeclStatement	"Shadow * new_shadow , * tmp_shadow ;"	260:1:6405:6436	3800814	0	True				
ANR	3800818	IdentifierDecl	* new_shadow		3800814	0					
ANR	3800819	IdentifierDeclType	Shadow *		3800814	0					
ANR	3800820	Identifier	new_shadow		3800814	1					
ANR	3800821	IdentifierDecl	* tmp_shadow		3800814	1					
ANR	3800822	IdentifierDeclType	Shadow *		3800814	0					
ANR	3800823	Identifier	tmp_shadow		3800814	1					
ANR	3800824	ExpressionStatement	shadows . Rewind ( )	262:1:6440:6456	3800814	1	True				
ANR	3800825	CallExpression	shadows . Rewind ( )		3800814	0					
ANR	3800826	Callee	shadows . Rewind		3800814	0					
ANR	3800827	MemberAccess	shadows . Rewind		3800814	0					
ANR	3800828	Identifier	shadows		3800814	0					
ANR	3800829	Identifier	Rewind		3800814	1					
ANR	3800830	ArgumentList			3800814	1					
ANR	3800831	WhileStatement	while ( shadows . Next ( tmp_shadow ) )		3800814	2					
ANR	3800832	Condition	shadows . Next ( tmp_shadow )	263:8:6466:6489	3800814	0	True				
ANR	3800833	CallExpression	shadows . Next ( tmp_shadow )		3800814	0					
ANR	3800834	Callee	shadows . Next		3800814	0					
ANR	3800835	MemberAccess	shadows . Next		3800814	0					
ANR	3800836	Identifier	shadows		3800814	0					
ANR	3800837	Identifier	Next		3800814	1					
ANR	3800838	ArgumentList	tmp_shadow		3800814	1					
ANR	3800839	Argument	tmp_shadow		3800814	0					
ANR	3800840	Identifier	tmp_shadow		3800814	0					
ANR	3800841	CompoundStatement		5:35:90:90	3800814	1					
ANR	3800842	IfStatement	if ( tmp_shadow -> provides ( ability ) )		3800814	0					
ANR	3800843	Condition	tmp_shadow -> provides ( ability )	264:6:6501:6529	3800814	0	True				
ANR	3800844	CallExpression	tmp_shadow -> provides ( ability )		3800814	0					
ANR	3800845	Callee	tmp_shadow -> provides		3800814	0					
ANR	3800846	PtrMemberAccess	tmp_shadow -> provides		3800814	0					
ANR	3800847	Identifier	tmp_shadow		3800814	0					
ANR	3800848	Identifier	provides		3800814	1					
ANR	3800849	ArgumentList	ability		3800814	1					
ANR	3800850	Argument	ability		3800814	0					
ANR	3800851	Identifier	ability		3800814	0					
ANR	3800852	CompoundStatement		6:38:130:130	3800814	1					
ANR	3800853	ExpressionStatement	new_shadow = new Shadow ( * tmp_shadow )	265:3:6538:6576	3800814	0	True				
ANR	3800854	AssignmentExpression	new_shadow = new Shadow ( * tmp_shadow )		3800814	0		=			
ANR	3800855	Identifier	new_shadow		3800814	0					
ANR	3800856	UnaryOperationExpression	* tmp_shadow		3800814	1					
ANR	3800857	UnaryOperator	*		3800814	0					
ANR	3800858	Identifier	tmp_shadow		3800814	1					
ANR	3800859	ReturnStatement	return new_shadow ;	266:3:6581:6598	3800814	1	True				
ANR	3800860	Identifier	new_shadow		3800814	0					
ANR	3800861	ReturnStatement	return NULL ;	269:1:6608:6619	3800814	3	True				
ANR	3800862	Identifier	NULL		3800814	0					
ANR	3800863	ReturnType	Shadow *		3800814	1					
ANR	3800864	Identifier	ShadowMgr :: findShadow		3800814	2					
ANR	3800865	ParameterList	const char * ability		3800814	3					
ANR	3800866	Parameter	const char * ability	258:23:6380:6398	3800814	0	True				
ANR	3800867	ParameterType	const char *		3800814	0					
ANR	3800868	Identifier	ability		3800814	1					
ANR	3800869	CFGEntryNode	ENTRY		3800814		True				
ANR	3800870	CFGExitNode	EXIT		3800814		True				
ANR	3800871	Symbol	* tmp_shadow		3800814						
ANR	3800872	Symbol	new_shadow		3800814						
ANR	3800873	Symbol	NULL		3800814						
ANR	3800874	Symbol	tmp_shadow -> provides		3800814						
ANR	3800875	Symbol	shadows		3800814						
ANR	3800876	Symbol	tmp_shadow		3800814						
ANR	3800877	Symbol	ability		3800814						
ANR	3800878	Symbol	shadows . Next		3800814						
ANR	3800879	Function	ShadowMgr :: printShadowInfo	273:0:6625:6798							
ANR	3800880	FunctionDef	ShadowMgr :: printShadowInfo (int debug_level)		3800879	0					
ANR	3800881	CompoundStatement		275:0:6676:6798	3800879	0					
ANR	3800882	IdentifierDeclStatement	Shadow * tmp_shadow ;	276:1:6679:6697	3800879	0	True				
ANR	3800883	IdentifierDecl	* tmp_shadow		3800879	0					
ANR	3800884	IdentifierDeclType	Shadow *		3800879	0					
ANR	3800885	Identifier	tmp_shadow		3800879	1					
ANR	3800886	ExpressionStatement	shadows . Rewind ( )	277:1:6700:6716	3800879	1	True				
ANR	3800887	CallExpression	shadows . Rewind ( )		3800879	0					
ANR	3800888	Callee	shadows . Rewind		3800879	0					
ANR	3800889	MemberAccess	shadows . Rewind		3800879	0					
ANR	3800890	Identifier	shadows		3800879	0					
ANR	3800891	Identifier	Rewind		3800879	1					
ANR	3800892	ArgumentList			3800879	1					
ANR	3800893	WhileStatement	while ( shadows . Next ( tmp_shadow ) )		3800879	2					
ANR	3800894	Condition	shadows . Next ( tmp_shadow )	278:8:6726:6749	3800879	0	True				
ANR	3800895	CallExpression	shadows . Next ( tmp_shadow )		3800879	0					
ANR	3800896	Callee	shadows . Next		3800879	0					
ANR	3800897	MemberAccess	shadows . Next		3800879	0					
ANR	3800898	Identifier	shadows		3800879	0					
ANR	3800899	Identifier	Next		3800879	1					
ANR	3800900	ArgumentList	tmp_shadow		3800879	1					
ANR	3800901	Argument	tmp_shadow		3800879	0					
ANR	3800902	Identifier	tmp_shadow		3800879	0					
ANR	3800903	CompoundStatement		4:35:76:76	3800879	1					
ANR	3800904	ExpressionStatement	tmp_shadow -> printInfo ( debug_level )	279:2:6757:6793	3800879	0	True				
ANR	3800905	CallExpression	tmp_shadow -> printInfo ( debug_level )		3800879	0					
ANR	3800906	Callee	tmp_shadow -> printInfo		3800879	0					
ANR	3800907	PtrMemberAccess	tmp_shadow -> printInfo		3800879	0					
ANR	3800908	Identifier	tmp_shadow		3800879	0					
ANR	3800909	Identifier	printInfo		3800879	1					
ANR	3800910	ArgumentList	debug_level		3800879	1					
ANR	3800911	Argument	debug_level		3800879	0					
ANR	3800912	Identifier	debug_level		3800879	0					
ANR	3800913	ReturnType	void		3800879	1					
ANR	3800914	Identifier	ShadowMgr :: printShadowInfo		3800879	2					
ANR	3800915	ParameterList	int debug_level		3800879	3					
ANR	3800916	Parameter	int debug_level	274:28:6658:6672	3800879	0	True				
ANR	3800917	ParameterType	int		3800879	0					
ANR	3800918	Identifier	debug_level		3800879	1					
ANR	3800919	CFGEntryNode	ENTRY		3800879		True				
ANR	3800920	CFGExitNode	EXIT		3800879		True				
ANR	3800921	Symbol	debug_level		3800879						
ANR	3800922	Symbol	shadows		3800879						
ANR	3800923	Symbol	tmp_shadow		3800879						
ANR	3800924	Symbol	shadows . Next		3800879						
ANR	3800925	Function	ShadowMgr :: makeShadow	284:0:6802:7754							
ANR	3800926	FunctionDef	ShadowMgr :: makeShadow (const char * path)		3800925	0					
ANR	3800927	CompoundStatement		286:0:6852:7754	3800925	0					
ANR	3800928	IdentifierDeclStatement	Shadow * new_shadow ;	287:1:6855:6873	3800925	0	True				
ANR	3800929	IdentifierDecl	* new_shadow		3800925	0					
ANR	3800930	IdentifierDeclType	Shadow *		3800925	0					
ANR	3800931	Identifier	new_shadow		3800925	1					
ANR	3800932	IdentifierDeclStatement	FILE * fp ;	288:1:6876:6884	3800925	1	True				
ANR	3800933	IdentifierDecl	* fp		3800925	0					
ANR	3800934	IdentifierDeclType	FILE *		3800925	0					
ANR	3800935	Identifier	fp		3800925	1					
ANR	3800936	Statement	const	289:1:6888:6892	3800925	2	True				
ANR	3800937	Statement	char	289:7:6894:6897	3800925	3	True				
ANR	3800938	Statement	*	289:12:6899:6899	3800925	4	True				
ANR	3800939	Statement	args	289:13:6900:6903	3800925	5	True				
ANR	3800940	Statement	[	289:17:6904:6904	3800925	6	True				
ANR	3800941	Statement	]	289:18:6905:6905	3800925	7	True				
ANR	3800942	Statement	=	289:20:6907:6907	3800925	8	True				
ANR	3800943	CompoundStatement		4:22:56:56	3800925	9					
ANR	3800944	Statement	const_cast	289:23:6910:6919	3800925	0	True				
ANR	3800945	Statement	<	289:33:6920:6920	3800925	1	True				
ANR	3800946	Statement	char	289:34:6921:6924	3800925	2	True				
ANR	3800947	Statement	*	289:38:6925:6925	3800925	3	True				
ANR	3800948	Statement	>	289:39:6926:6926	3800925	4	True				
ANR	3800949	Statement	(	289:40:6927:6927	3800925	5	True				
ANR	3800950	Statement	path	289:41:6928:6931	3800925	6	True				
ANR	3800951	Statement	)	289:45:6932:6932	3800925	7	True				
ANR	3800952	Statement	","	289:46:6933:6933	3800925	8	True				
ANR	3800953	Statement	"""-classad"""	289:48:6935:6944	3800925	9	True				
ANR	3800954	Statement	","	289:58:6945:6945	3800925	10	True				
ANR	3800955	Statement	NULL	289:60:6947:6950	3800925	11	True				
ANR	3800956	ExpressionStatement		289:65:6952:6952	3800925	10	True				
ANR	3800957	IdentifierDeclStatement	char buf [ 1024 ] ;	290:1:6955:6969	3800925	11	True				
ANR	3800958	IdentifierDecl	buf [ 1024 ]		3800925	0					
ANR	3800959	IdentifierDeclType	char [ 1024 ]		3800925	0					
ANR	3800960	Identifier	buf		3800925	1					
ANR	3800961	PrimaryExpression	1024		3800925	2					
ANR	3800962	ExpressionStatement	"fp = my_popenv ( args , ""r"" , FALSE )"	294:1:7079:7113	3800925	12	True				
ANR	3800963	AssignmentExpression	"fp = my_popenv ( args , ""r"" , FALSE )"		3800925	0		=			
ANR	3800964	Identifier	fp		3800925	0					
ANR	3800965	CallExpression	"my_popenv ( args , ""r"" , FALSE )"		3800925	1					
ANR	3800966	Callee	my_popenv		3800925	0					
ANR	3800967	Identifier	my_popenv		3800925	0					
ANR	3800968	ArgumentList	args		3800925	1					
ANR	3800969	Argument	args		3800925	0					
ANR	3800970	Identifier	args		3800925	0					
ANR	3800971	Argument	"""r"""		3800925	1					
ANR	3800972	PrimaryExpression	"""r"""		3800925	0					
ANR	3800973	Argument	FALSE		3800925	2					
ANR	3800974	Identifier	FALSE		3800925	0					
ANR	3800975	IfStatement	if ( ! fp )		3800925	13					
ANR	3800976	Condition	! fp	296:5:7121:7124	3800925	0	True				
ANR	3800977	UnaryOperationExpression	! fp		3800925	0					
ANR	3800978	UnaryOperator	!		3800925	0					
ANR	3800979	Identifier	fp		3800925	1					
ANR	3800980	CompoundStatement		11:12:275:275	3800925	1					
ANR	3800981	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to execute %s, ignoring\\n"" , path )"	297:2:7132:7193	3800925	0	True				
ANR	3800982	CallExpression	"dprintf ( D_ALWAYS , ""Failed to execute %s, ignoring\\n"" , path )"		3800925	0					
ANR	3800983	Callee	dprintf		3800925	0					
ANR	3800984	Identifier	dprintf		3800925	0					
ANR	3800985	ArgumentList	D_ALWAYS		3800925	1					
ANR	3800986	Argument	D_ALWAYS		3800925	0					
ANR	3800987	Identifier	D_ALWAYS		3800925	0					
ANR	3800988	Argument	"""Failed to execute %s, ignoring\\n"""		3800925	1					
ANR	3800989	PrimaryExpression	"""Failed to execute %s, ignoring\\n"""		3800925	0					
ANR	3800990	Argument	path		3800925	2					
ANR	3800991	Identifier	path		3800925	0					
ANR	3800992	ReturnStatement	return NULL ;	298:2:7197:7208	3800925	1	True				
ANR	3800993	Identifier	NULL		3800925	0					
ANR	3800994	Statement	ClassAd	300:1:7214:7220	3800925	14	True				
ANR	3800995	Statement	*	300:8:7221:7221	3800925	15	True				
ANR	3800996	Statement	ad	300:10:7223:7224	3800925	16	True				
ANR	3800997	Statement	=	300:13:7226:7226	3800925	17	True				
ANR	3800998	Statement	new	300:15:7228:7230	3800925	18	True				
ANR	3800999	ExpressionStatement	ClassAd	300:19:7232:7239	3800925	19	True				
ANR	3801000	Identifier	ClassAd		3800925	0					
ANR	3801001	IdentifierDeclStatement	bool read_something = false ;	301:1:7242:7269	3800925	20	True				
ANR	3801002	IdentifierDecl	read_something = false		3800925	0					
ANR	3801003	IdentifierDeclType	bool		3800925	0					
ANR	3801004	Identifier	read_something		3800925	1					
ANR	3801005	AssignmentExpression	read_something = false		3800925	2		=			
ANR	3801006	Identifier	false		3800925	0					
ANR	3801007	Identifier	false		3800925	1					
ANR	3801008	WhileStatement	"while ( fgets ( buf , 1024 , fp ) )"		3800925	21					
ANR	3801009	Condition	"fgets ( buf , 1024 , fp )"	302:8:7279:7298	3800925	0	True				
ANR	3801010	CallExpression	"fgets ( buf , 1024 , fp )"		3800925	0					
ANR	3801011	Callee	fgets		3800925	0					
ANR	3801012	Identifier	fgets		3800925	0					
ANR	3801013	ArgumentList	buf		3800925	1					
ANR	3801014	Argument	buf		3800925	0					
ANR	3801015	Identifier	buf		3800925	0					
ANR	3801016	Argument	1024		3800925	1					
ANR	3801017	PrimaryExpression	1024		3800925	0					
ANR	3801018	Argument	fp		3800925	2					
ANR	3801019	Identifier	fp		3800925	0					
ANR	3801020	CompoundStatement		17:31:449:449	3800925	1					
ANR	3801021	ExpressionStatement	read_something = true	303:2:7306:7327	3800925	0	True				
ANR	3801022	AssignmentExpression	read_something = true		3800925	0		=			
ANR	3801023	Identifier	read_something		3800925	0					
ANR	3801024	Identifier	true		3800925	1					
ANR	3801025	IfStatement	if ( ! ad -> Insert ( buf ) )		3800925	1					
ANR	3801026	Condition	! ad -> Insert ( buf )	304:6:7335:7351	3800925	0	True				
ANR	3801027	UnaryOperationExpression	! ad -> Insert ( buf )		3800925	0					
ANR	3801028	UnaryOperator	!		3800925	0					
ANR	3801029	CallExpression	ad -> Insert ( buf )		3800925	1					
ANR	3801030	Callee	ad -> Insert		3800925	0					
ANR	3801031	PtrMemberAccess	ad -> Insert		3800925	0					
ANR	3801032	Identifier	ad		3800925	0					
ANR	3801033	Identifier	Insert		3800925	1					
ANR	3801034	ArgumentList	buf		3800925	1					
ANR	3801035	Argument	buf		3800925	0					
ANR	3801036	Identifier	buf		3800925	0					
ANR	3801037	CompoundStatement		19:26:502:502	3800925	1					
ANR	3801038	Statement	dprintf	305:3:7360:7366	3800925	0	True				
ANR	3801039	Statement	(	305:10:7367:7367	3800925	1	True				
ANR	3801040	Statement	D_ALWAYS	305:12:7369:7376	3800925	2	True				
ANR	3801041	Statement	","	305:20:7377:7377	3800925	3	True				
ANR	3801042	Statement	"""Failed to insert \\""%s\\"" into ClassAd, """	305:22:7379:7418	3800925	4	True				
ANR	3801043	Statement	"""ignoring invalid shadow\\n"""	306:6:7426:7452	3800925	5	True				
ANR	3801044	Statement	","	306:33:7453:7453	3800925	6	True				
ANR	3801045	Statement	buf	306:35:7455:7457	3800925	7	True				
ANR	3801046	Statement	)	306:39:7459:7459	3800925	8	True				
ANR	3801047	ExpressionStatement		306:40:7460:7460	3800925	9	True				
ANR	3801048	Statement	delete	307:3:7465:7470	3800925	10	True				
ANR	3801049	ExpressionStatement	ad	307:9:7471:7477	3800925	11	True				
ANR	3801050	Identifier	ad		3800925	0					
ANR	3801051	ExpressionStatement	my_pclose ( fp )	308:3:7482:7497	3800925	12	True				
ANR	3801052	CallExpression	my_pclose ( fp )		3800925	0					
ANR	3801053	Callee	my_pclose		3800925	0					
ANR	3801054	Identifier	my_pclose		3800925	0					
ANR	3801055	ArgumentList	fp		3800925	1					
ANR	3801056	Argument	fp		3800925	0					
ANR	3801057	Identifier	fp		3800925	0					
ANR	3801058	ReturnStatement	return NULL ;	309:3:7502:7513	3800925	13	True				
ANR	3801059	Identifier	NULL		3800925	0					
ANR	3801060	ExpressionStatement	my_pclose ( fp )	312:1:7523:7538	3800925	22	True				
ANR	3801061	CallExpression	my_pclose ( fp )		3800925	0					
ANR	3801062	Callee	my_pclose		3800925	0					
ANR	3801063	Identifier	my_pclose		3800925	0					
ANR	3801064	ArgumentList	fp		3800925	1					
ANR	3801065	Argument	fp		3800925	0					
ANR	3801066	Identifier	fp		3800925	0					
ANR	3801067	IfStatement	if ( ! read_something )		3800925	23					
ANR	3801068	Condition	! read_something	313:5:7545:7560	3800925	0	True				
ANR	3801069	UnaryOperationExpression	! read_something		3800925	0					
ANR	3801070	UnaryOperator	!		3800925	0					
ANR	3801071	Identifier	read_something		3800925	1					
ANR	3801072	CompoundStatement		28:24:711:711	3800925	1					
ANR	3801073	Statement	dprintf	314:2:7568:7574	3800925	0	True				
ANR	3801074	Statement	(	314:9:7575:7575	3800925	1	True				
ANR	3801075	Statement	D_ALWAYS	314:11:7577:7584	3800925	2	True				
ANR	3801076	Statement	","	314:19:7585:7585	3800925	3	True				
ANR	3801077	Statement	"""\\""%s -classad\\"" did not produce any output, """	314:21:7587:7632	3800925	4	True				
ANR	3801078	Statement	"""ignoring\\n"""	315:5:7639:7650	3800925	5	True				
ANR	3801079	Statement	","	315:17:7651:7651	3800925	6	True				
ANR	3801080	Statement	path	315:19:7653:7656	3800925	7	True				
ANR	3801081	Statement	)	315:24:7658:7658	3800925	8	True				
ANR	3801082	ExpressionStatement		315:25:7659:7659	3800925	9	True				
ANR	3801083	Statement	delete	316:2:7664:7669	3800925	10	True				
ANR	3801084	ExpressionStatement	ad	316:8:7670:7676	3800925	11	True				
ANR	3801085	Identifier	ad		3800925	0					
ANR	3801086	ReturnStatement	return NULL ;	317:2:7680:7691	3800925	12	True				
ANR	3801087	Identifier	NULL		3800925	0					
ANR	3801088	ExpressionStatement	"new_shadow = new Shadow ( path , ad )"	319:1:7697:7732	3800925	24	True				
ANR	3801089	AssignmentExpression	"new_shadow = new Shadow ( path , ad )"		3800925	0		=			
ANR	3801090	Identifier	new_shadow		3800925	0					
ANR	3801091	Expression	"path , ad"		3800925	1					
ANR	3801092	Identifier	path		3800925	0					
ANR	3801093	Identifier	ad		3800925	1					
ANR	3801094	ReturnStatement	return new_shadow ;	320:1:7735:7752	3800925	25	True				
ANR	3801095	Identifier	new_shadow		3800925	0					
ANR	3801096	ReturnType	Shadow *		3800925	1					
ANR	3801097	Identifier	ShadowMgr :: makeShadow		3800925	2					
ANR	3801098	ParameterList	const char * path		3800925	3					
ANR	3801099	Parameter	const char * path	285:23:6833:6848	3800925	0	True				
ANR	3801100	ParameterType	const char *		3800925	0					
ANR	3801101	Identifier	path		3800925	1					
ANR	3801102	CFGEntryNode	ENTRY		3800925		True				
ANR	3801103	CFGExitNode	EXIT		3800925		True				
ANR	3801104	Symbol	read_something		3800925						
ANR	3801105	Symbol	NULL		3800925						
ANR	3801106	Symbol	ad		3800925						
ANR	3801107	Symbol	D_ALWAYS		3800925						
ANR	3801108	Symbol	false		3800925						
ANR	3801109	Symbol	fp		3800925						
ANR	3801110	Symbol	* ad		3800925						
ANR	3801111	Symbol	ad -> Insert		3800925						
ANR	3801112	Symbol	fgets		3800925						
ANR	3801113	Symbol	args		3800925						
ANR	3801114	Symbol	path		3800925						
ANR	3801115	Symbol	new_shadow		3800925						
ANR	3801116	Symbol	buf		3800925						
ANR	3801117	Symbol	true		3800925						
ANR	3801118	Symbol	FALSE		3800925						
ANR	3801119	Symbol	my_popenv		3800925						
