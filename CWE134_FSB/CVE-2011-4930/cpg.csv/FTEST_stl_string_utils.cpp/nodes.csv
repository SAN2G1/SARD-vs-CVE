command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	192822	File	data/converged/CVE-2011-4930_htcondor/FTEST_stl_string_utils.cpp								
ANR	192823	DeclStmt									
ANR	192824	Decl							bool	bool ( void )	test_sprintf_string
ANR	192825	DeclStmt									
ANR	192826	Decl							bool	bool ( void )	test_sprintf_MyString
ANR	192827	DeclStmt									
ANR	192828	Decl							bool	bool ( void )	test_sprintf_cat_string
ANR	192829	DeclStmt									
ANR	192830	Decl							bool	bool ( void )	test_sprintf_cat_MyString
ANR	192831	DeclStmt									
ANR	192832	Decl							bool	bool ( void )	test_comparison_ops_lhs_string
ANR	192833	DeclStmt									
ANR	192834	Decl							bool	bool ( void )	test_comparison_ops_lhs_MyString
ANR	192835	DeclStmt									
ANR	192836	Decl							bool	bool ( void )	test_lower_case_empty
ANR	192837	DeclStmt									
ANR	192838	Decl							bool	bool ( void )	test_lower_case_non_empty
ANR	192839	DeclStmt									
ANR	192840	Decl							bool	bool ( void )	test_upper_case_empty
ANR	192841	DeclStmt									
ANR	192842	Decl							bool	bool ( void )	test_upper_case_non_empty
ANR	192843	DeclStmt									
ANR	192844	Decl							bool	bool ( void )	test_chomp_new_line_end
ANR	192845	DeclStmt									
ANR	192846	Decl							bool	bool ( void )	test_chomp_crlf_end
ANR	192847	DeclStmt									
ANR	192848	Decl							bool	bool ( void )	test_chomp_new_line_beginning
ANR	192849	DeclStmt									
ANR	192850	Decl							bool	bool ( void )	test_chomp_return_false
ANR	192851	DeclStmt									
ANR	192852	Decl							bool	bool ( void )	test_chomp_return_true
ANR	192853	DeclStmt									
ANR	192854	Decl							bool	bool ( void )	test_trim_beginning_and_end
ANR	192855	DeclStmt									
ANR	192856	Decl							bool	bool ( void )	test_trim_end
ANR	192857	DeclStmt									
ANR	192858	Decl							bool	bool ( void )	test_trim_none
ANR	192859	DeclStmt									
ANR	192860	Decl							bool	bool ( void )	test_trim_beginning
ANR	192861	DeclStmt									
ANR	192862	Decl							bool	bool ( void )	test_trim_empty
ANR	192863	DeclStmt									
ANR	192864	Decl							bool	bool ( void )	tokenize_null
ANR	192865	DeclStmt									
ANR	192866	Decl							bool	bool ( void )	tokenize_skip
ANR	192867	DeclStmt									
ANR	192868	Decl							bool	bool ( void )	tokenize_multiple_calls
ANR	192869	DeclStmt									
ANR	192870	Decl							bool	bool ( void )	tokenize_end
ANR	192871	DeclStmt									
ANR	192872	Decl							bool	bool ( void )	tokenize_empty
ANR	192873	DeclStmt									
ANR	192874	Decl							bool	bool ( void )	tokenize_empty_delimiter
ANR	192875	Function	FTEST_stl_string_utils	61:0:2140:3777							
ANR	192876	FunctionDef	FTEST_stl_string_utils ()		192875	0					
ANR	192877	CompoundStatement		61:34:2174:3777	192875	0					
ANR	192878	ExpressionStatement	"emit_function ( ""STL string utils"" )"	63:1:2222:2255	192875	0	True				
ANR	192879	CallExpression	"emit_function ( ""STL string utils"" )"		192875	0					
ANR	192880	Callee	emit_function		192875	0					
ANR	192881	Identifier	emit_function		192875	0					
ANR	192882	ArgumentList	"""STL string utils"""		192875	1					
ANR	192883	Argument	"""STL string utils"""		192875	0					
ANR	192884	PrimaryExpression	"""STL string utils"""		192875	0					
ANR	192885	ExpressionStatement	"emit_comment ( ""Package of functions/operators to facilitate adoption of std::string"" )"	64:1:2258:2342	192875	1	True				
ANR	192886	CallExpression	"emit_comment ( ""Package of functions/operators to facilitate adoption of std::string"" )"		192875	0					
ANR	192887	Callee	emit_comment		192875	0					
ANR	192888	Identifier	emit_comment		192875	0					
ANR	192889	ArgumentList	"""Package of functions/operators to facilitate adoption of std::string"""		192875	1					
ANR	192890	Argument	"""Package of functions/operators to facilitate adoption of std::string"""		192875	0					
ANR	192891	PrimaryExpression	"""Package of functions/operators to facilitate adoption of std::string"""		192875	0					
ANR	192892	IdentifierDeclStatement	FunctionDriver driver ;	67:1:2399:2420	192875	2	True				
ANR	192893	IdentifierDecl	driver		192875	0					
ANR	192894	IdentifierDeclType	FunctionDriver		192875	0					
ANR	192895	Identifier	driver		192875	1					
ANR	192896	ExpressionStatement	driver . register_function ( test_comparison_ops_lhs_string )	68:1:2423:2479	192875	3	True				
ANR	192897	CallExpression	driver . register_function ( test_comparison_ops_lhs_string )		192875	0					
ANR	192898	Callee	driver . register_function		192875	0					
ANR	192899	MemberAccess	driver . register_function		192875	0					
ANR	192900	Identifier	driver		192875	0					
ANR	192901	Identifier	register_function		192875	1					
ANR	192902	ArgumentList	test_comparison_ops_lhs_string		192875	1					
ANR	192903	Argument	test_comparison_ops_lhs_string		192875	0					
ANR	192904	Identifier	test_comparison_ops_lhs_string		192875	0					
ANR	192905	ExpressionStatement	driver . register_function ( test_comparison_ops_lhs_MyString )	69:1:2482:2540	192875	4	True				
ANR	192906	CallExpression	driver . register_function ( test_comparison_ops_lhs_MyString )		192875	0					
ANR	192907	Callee	driver . register_function		192875	0					
ANR	192908	MemberAccess	driver . register_function		192875	0					
ANR	192909	Identifier	driver		192875	0					
ANR	192910	Identifier	register_function		192875	1					
ANR	192911	ArgumentList	test_comparison_ops_lhs_MyString		192875	1					
ANR	192912	Argument	test_comparison_ops_lhs_MyString		192875	0					
ANR	192913	Identifier	test_comparison_ops_lhs_MyString		192875	0					
ANR	192914	ExpressionStatement	driver . register_function ( test_sprintf_string )	70:1:2543:2588	192875	5	True				
ANR	192915	CallExpression	driver . register_function ( test_sprintf_string )		192875	0					
ANR	192916	Callee	driver . register_function		192875	0					
ANR	192917	MemberAccess	driver . register_function		192875	0					
ANR	192918	Identifier	driver		192875	0					
ANR	192919	Identifier	register_function		192875	1					
ANR	192920	ArgumentList	test_sprintf_string		192875	1					
ANR	192921	Argument	test_sprintf_string		192875	0					
ANR	192922	Identifier	test_sprintf_string		192875	0					
ANR	192923	ExpressionStatement	driver . register_function ( test_sprintf_MyString )	71:1:2591:2638	192875	6	True				
ANR	192924	CallExpression	driver . register_function ( test_sprintf_MyString )		192875	0					
ANR	192925	Callee	driver . register_function		192875	0					
ANR	192926	MemberAccess	driver . register_function		192875	0					
ANR	192927	Identifier	driver		192875	0					
ANR	192928	Identifier	register_function		192875	1					
ANR	192929	ArgumentList	test_sprintf_MyString		192875	1					
ANR	192930	Argument	test_sprintf_MyString		192875	0					
ANR	192931	Identifier	test_sprintf_MyString		192875	0					
ANR	192932	ExpressionStatement	driver . register_function ( test_sprintf_cat_string )	72:1:2641:2690	192875	7	True				
ANR	192933	CallExpression	driver . register_function ( test_sprintf_cat_string )		192875	0					
ANR	192934	Callee	driver . register_function		192875	0					
ANR	192935	MemberAccess	driver . register_function		192875	0					
ANR	192936	Identifier	driver		192875	0					
ANR	192937	Identifier	register_function		192875	1					
ANR	192938	ArgumentList	test_sprintf_cat_string		192875	1					
ANR	192939	Argument	test_sprintf_cat_string		192875	0					
ANR	192940	Identifier	test_sprintf_cat_string		192875	0					
ANR	192941	ExpressionStatement	driver . register_function ( test_sprintf_cat_MyString )	73:1:2693:2744	192875	8	True				
ANR	192942	CallExpression	driver . register_function ( test_sprintf_cat_MyString )		192875	0					
ANR	192943	Callee	driver . register_function		192875	0					
ANR	192944	MemberAccess	driver . register_function		192875	0					
ANR	192945	Identifier	driver		192875	0					
ANR	192946	Identifier	register_function		192875	1					
ANR	192947	ArgumentList	test_sprintf_cat_MyString		192875	1					
ANR	192948	Argument	test_sprintf_cat_MyString		192875	0					
ANR	192949	Identifier	test_sprintf_cat_MyString		192875	0					
ANR	192950	ExpressionStatement	driver . register_function ( test_lower_case_empty )	74:1:2747:2794	192875	9	True				
ANR	192951	CallExpression	driver . register_function ( test_lower_case_empty )		192875	0					
ANR	192952	Callee	driver . register_function		192875	0					
ANR	192953	MemberAccess	driver . register_function		192875	0					
ANR	192954	Identifier	driver		192875	0					
ANR	192955	Identifier	register_function		192875	1					
ANR	192956	ArgumentList	test_lower_case_empty		192875	1					
ANR	192957	Argument	test_lower_case_empty		192875	0					
ANR	192958	Identifier	test_lower_case_empty		192875	0					
ANR	192959	ExpressionStatement	driver . register_function ( test_lower_case_non_empty )	75:1:2797:2848	192875	10	True				
ANR	192960	CallExpression	driver . register_function ( test_lower_case_non_empty )		192875	0					
ANR	192961	Callee	driver . register_function		192875	0					
ANR	192962	MemberAccess	driver . register_function		192875	0					
ANR	192963	Identifier	driver		192875	0					
ANR	192964	Identifier	register_function		192875	1					
ANR	192965	ArgumentList	test_lower_case_non_empty		192875	1					
ANR	192966	Argument	test_lower_case_non_empty		192875	0					
ANR	192967	Identifier	test_lower_case_non_empty		192875	0					
ANR	192968	ExpressionStatement	driver . register_function ( test_upper_case_empty )	76:1:2851:2898	192875	11	True				
ANR	192969	CallExpression	driver . register_function ( test_upper_case_empty )		192875	0					
ANR	192970	Callee	driver . register_function		192875	0					
ANR	192971	MemberAccess	driver . register_function		192875	0					
ANR	192972	Identifier	driver		192875	0					
ANR	192973	Identifier	register_function		192875	1					
ANR	192974	ArgumentList	test_upper_case_empty		192875	1					
ANR	192975	Argument	test_upper_case_empty		192875	0					
ANR	192976	Identifier	test_upper_case_empty		192875	0					
ANR	192977	ExpressionStatement	driver . register_function ( test_upper_case_non_empty )	77:1:2901:2952	192875	12	True				
ANR	192978	CallExpression	driver . register_function ( test_upper_case_non_empty )		192875	0					
ANR	192979	Callee	driver . register_function		192875	0					
ANR	192980	MemberAccess	driver . register_function		192875	0					
ANR	192981	Identifier	driver		192875	0					
ANR	192982	Identifier	register_function		192875	1					
ANR	192983	ArgumentList	test_upper_case_non_empty		192875	1					
ANR	192984	Argument	test_upper_case_non_empty		192875	0					
ANR	192985	Identifier	test_upper_case_non_empty		192875	0					
ANR	192986	ExpressionStatement	driver . register_function ( test_chomp_new_line_end )	78:1:2955:3004	192875	13	True				
ANR	192987	CallExpression	driver . register_function ( test_chomp_new_line_end )		192875	0					
ANR	192988	Callee	driver . register_function		192875	0					
ANR	192989	MemberAccess	driver . register_function		192875	0					
ANR	192990	Identifier	driver		192875	0					
ANR	192991	Identifier	register_function		192875	1					
ANR	192992	ArgumentList	test_chomp_new_line_end		192875	1					
ANR	192993	Argument	test_chomp_new_line_end		192875	0					
ANR	192994	Identifier	test_chomp_new_line_end		192875	0					
ANR	192995	ExpressionStatement	driver . register_function ( test_chomp_crlf_end )	79:1:3007:3052	192875	14	True				
ANR	192996	CallExpression	driver . register_function ( test_chomp_crlf_end )		192875	0					
ANR	192997	Callee	driver . register_function		192875	0					
ANR	192998	MemberAccess	driver . register_function		192875	0					
ANR	192999	Identifier	driver		192875	0					
ANR	193000	Identifier	register_function		192875	1					
ANR	193001	ArgumentList	test_chomp_crlf_end		192875	1					
ANR	193002	Argument	test_chomp_crlf_end		192875	0					
ANR	193003	Identifier	test_chomp_crlf_end		192875	0					
ANR	193004	ExpressionStatement	driver . register_function ( test_chomp_new_line_beginning )	80:1:3055:3110	192875	15	True				
ANR	193005	CallExpression	driver . register_function ( test_chomp_new_line_beginning )		192875	0					
ANR	193006	Callee	driver . register_function		192875	0					
ANR	193007	MemberAccess	driver . register_function		192875	0					
ANR	193008	Identifier	driver		192875	0					
ANR	193009	Identifier	register_function		192875	1					
ANR	193010	ArgumentList	test_chomp_new_line_beginning		192875	1					
ANR	193011	Argument	test_chomp_new_line_beginning		192875	0					
ANR	193012	Identifier	test_chomp_new_line_beginning		192875	0					
ANR	193013	ExpressionStatement	driver . register_function ( test_chomp_return_false )	81:1:3113:3162	192875	16	True				
ANR	193014	CallExpression	driver . register_function ( test_chomp_return_false )		192875	0					
ANR	193015	Callee	driver . register_function		192875	0					
ANR	193016	MemberAccess	driver . register_function		192875	0					
ANR	193017	Identifier	driver		192875	0					
ANR	193018	Identifier	register_function		192875	1					
ANR	193019	ArgumentList	test_chomp_return_false		192875	1					
ANR	193020	Argument	test_chomp_return_false		192875	0					
ANR	193021	Identifier	test_chomp_return_false		192875	0					
ANR	193022	ExpressionStatement	driver . register_function ( test_chomp_return_true )	82:1:3165:3213	192875	17	True				
ANR	193023	CallExpression	driver . register_function ( test_chomp_return_true )		192875	0					
ANR	193024	Callee	driver . register_function		192875	0					
ANR	193025	MemberAccess	driver . register_function		192875	0					
ANR	193026	Identifier	driver		192875	0					
ANR	193027	Identifier	register_function		192875	1					
ANR	193028	ArgumentList	test_chomp_return_true		192875	1					
ANR	193029	Argument	test_chomp_return_true		192875	0					
ANR	193030	Identifier	test_chomp_return_true		192875	0					
ANR	193031	ExpressionStatement	driver . register_function ( test_trim_beginning_and_end )	83:1:3216:3269	192875	18	True				
ANR	193032	CallExpression	driver . register_function ( test_trim_beginning_and_end )		192875	0					
ANR	193033	Callee	driver . register_function		192875	0					
ANR	193034	MemberAccess	driver . register_function		192875	0					
ANR	193035	Identifier	driver		192875	0					
ANR	193036	Identifier	register_function		192875	1					
ANR	193037	ArgumentList	test_trim_beginning_and_end		192875	1					
ANR	193038	Argument	test_trim_beginning_and_end		192875	0					
ANR	193039	Identifier	test_trim_beginning_and_end		192875	0					
ANR	193040	ExpressionStatement	driver . register_function ( test_trim_end )	84:1:3272:3311	192875	19	True				
ANR	193041	CallExpression	driver . register_function ( test_trim_end )		192875	0					
ANR	193042	Callee	driver . register_function		192875	0					
ANR	193043	MemberAccess	driver . register_function		192875	0					
ANR	193044	Identifier	driver		192875	0					
ANR	193045	Identifier	register_function		192875	1					
ANR	193046	ArgumentList	test_trim_end		192875	1					
ANR	193047	Argument	test_trim_end		192875	0					
ANR	193048	Identifier	test_trim_end		192875	0					
ANR	193049	ExpressionStatement	driver . register_function ( test_trim_none )	85:1:3314:3354	192875	20	True				
ANR	193050	CallExpression	driver . register_function ( test_trim_none )		192875	0					
ANR	193051	Callee	driver . register_function		192875	0					
ANR	193052	MemberAccess	driver . register_function		192875	0					
ANR	193053	Identifier	driver		192875	0					
ANR	193054	Identifier	register_function		192875	1					
ANR	193055	ArgumentList	test_trim_none		192875	1					
ANR	193056	Argument	test_trim_none		192875	0					
ANR	193057	Identifier	test_trim_none		192875	0					
ANR	193058	ExpressionStatement	driver . register_function ( test_trim_beginning )	86:1:3357:3402	192875	21	True				
ANR	193059	CallExpression	driver . register_function ( test_trim_beginning )		192875	0					
ANR	193060	Callee	driver . register_function		192875	0					
ANR	193061	MemberAccess	driver . register_function		192875	0					
ANR	193062	Identifier	driver		192875	0					
ANR	193063	Identifier	register_function		192875	1					
ANR	193064	ArgumentList	test_trim_beginning		192875	1					
ANR	193065	Argument	test_trim_beginning		192875	0					
ANR	193066	Identifier	test_trim_beginning		192875	0					
ANR	193067	ExpressionStatement	driver . register_function ( test_trim_empty )	87:1:3405:3446	192875	22	True				
ANR	193068	CallExpression	driver . register_function ( test_trim_empty )		192875	0					
ANR	193069	Callee	driver . register_function		192875	0					
ANR	193070	MemberAccess	driver . register_function		192875	0					
ANR	193071	Identifier	driver		192875	0					
ANR	193072	Identifier	register_function		192875	1					
ANR	193073	ArgumentList	test_trim_empty		192875	1					
ANR	193074	Argument	test_trim_empty		192875	0					
ANR	193075	Identifier	test_trim_empty		192875	0					
ANR	193076	ExpressionStatement	driver . register_function ( tokenize_null )	88:1:3449:3488	192875	23	True				
ANR	193077	CallExpression	driver . register_function ( tokenize_null )		192875	0					
ANR	193078	Callee	driver . register_function		192875	0					
ANR	193079	MemberAccess	driver . register_function		192875	0					
ANR	193080	Identifier	driver		192875	0					
ANR	193081	Identifier	register_function		192875	1					
ANR	193082	ArgumentList	tokenize_null		192875	1					
ANR	193083	Argument	tokenize_null		192875	0					
ANR	193084	Identifier	tokenize_null		192875	0					
ANR	193085	ExpressionStatement	driver . register_function ( tokenize_skip )	89:1:3491:3530	192875	24	True				
ANR	193086	CallExpression	driver . register_function ( tokenize_skip )		192875	0					
ANR	193087	Callee	driver . register_function		192875	0					
ANR	193088	MemberAccess	driver . register_function		192875	0					
ANR	193089	Identifier	driver		192875	0					
ANR	193090	Identifier	register_function		192875	1					
ANR	193091	ArgumentList	tokenize_skip		192875	1					
ANR	193092	Argument	tokenize_skip		192875	0					
ANR	193093	Identifier	tokenize_skip		192875	0					
ANR	193094	ExpressionStatement	driver . register_function ( tokenize_multiple_calls )	90:1:3533:3582	192875	25	True				
ANR	193095	CallExpression	driver . register_function ( tokenize_multiple_calls )		192875	0					
ANR	193096	Callee	driver . register_function		192875	0					
ANR	193097	MemberAccess	driver . register_function		192875	0					
ANR	193098	Identifier	driver		192875	0					
ANR	193099	Identifier	register_function		192875	1					
ANR	193100	ArgumentList	tokenize_multiple_calls		192875	1					
ANR	193101	Argument	tokenize_multiple_calls		192875	0					
ANR	193102	Identifier	tokenize_multiple_calls		192875	0					
ANR	193103	ExpressionStatement	driver . register_function ( tokenize_end )	91:1:3585:3623	192875	26	True				
ANR	193104	CallExpression	driver . register_function ( tokenize_end )		192875	0					
ANR	193105	Callee	driver . register_function		192875	0					
ANR	193106	MemberAccess	driver . register_function		192875	0					
ANR	193107	Identifier	driver		192875	0					
ANR	193108	Identifier	register_function		192875	1					
ANR	193109	ArgumentList	tokenize_end		192875	1					
ANR	193110	Argument	tokenize_end		192875	0					
ANR	193111	Identifier	tokenize_end		192875	0					
ANR	193112	ExpressionStatement	driver . register_function ( tokenize_empty )	92:1:3626:3666	192875	27	True				
ANR	193113	CallExpression	driver . register_function ( tokenize_empty )		192875	0					
ANR	193114	Callee	driver . register_function		192875	0					
ANR	193115	MemberAccess	driver . register_function		192875	0					
ANR	193116	Identifier	driver		192875	0					
ANR	193117	Identifier	register_function		192875	1					
ANR	193118	ArgumentList	tokenize_empty		192875	1					
ANR	193119	Argument	tokenize_empty		192875	0					
ANR	193120	Identifier	tokenize_empty		192875	0					
ANR	193121	ExpressionStatement	driver . register_function ( tokenize_empty_delimiter )	93:1:3669:3719	192875	28	True				
ANR	193122	CallExpression	driver . register_function ( tokenize_empty_delimiter )		192875	0					
ANR	193123	Callee	driver . register_function		192875	0					
ANR	193124	MemberAccess	driver . register_function		192875	0					
ANR	193125	Identifier	driver		192875	0					
ANR	193126	Identifier	register_function		192875	1					
ANR	193127	ArgumentList	tokenize_empty_delimiter		192875	1					
ANR	193128	Argument	tokenize_empty_delimiter		192875	0					
ANR	193129	Identifier	tokenize_empty_delimiter		192875	0					
ANR	193130	ReturnStatement	return driver . do_all_functions ( ) ;	96:1:3743:3775	192875	29	True				
ANR	193131	CallExpression	driver . do_all_functions ( )		192875	0					
ANR	193132	Callee	driver . do_all_functions		192875	0					
ANR	193133	MemberAccess	driver . do_all_functions		192875	0					
ANR	193134	Identifier	driver		192875	0					
ANR	193135	Identifier	do_all_functions		192875	1					
ANR	193136	ArgumentList			192875	1					
ANR	193137	ReturnType	bool		192875	1					
ANR	193138	Identifier	FTEST_stl_string_utils		192875	2					
ANR	193139	ParameterList			192875	3					
ANR	193140	CFGEntryNode	ENTRY		192875		True				
ANR	193141	CFGExitNode	EXIT		192875		True				
ANR	193142	Symbol	test_trim_beginning		192875						
ANR	193143	Symbol	test_trim_end		192875						
ANR	193144	Symbol	test_trim_none		192875						
ANR	193145	Symbol	test_sprintf_cat_MyString		192875						
ANR	193146	Symbol	tokenize_multiple_calls		192875						
ANR	193147	Symbol	test_chomp_return_false		192875						
ANR	193148	Symbol	test_trim_empty		192875						
ANR	193149	Symbol	test_trim_beginning_and_end		192875						
ANR	193150	Symbol	test_chomp_new_line_beginning		192875						
ANR	193151	Symbol	tokenize_empty_delimiter		192875						
ANR	193152	Symbol	test_comparison_ops_lhs_string		192875						
ANR	193153	Symbol	test_lower_case_non_empty		192875						
ANR	193154	Symbol	test_sprintf_MyString		192875						
ANR	193155	Symbol	driver . do_all_functions		192875						
ANR	193156	Symbol	tokenize_end		192875						
ANR	193157	Symbol	tokenize_empty		192875						
ANR	193158	Symbol	test_upper_case_empty		192875						
ANR	193159	Symbol	test_sprintf_string		192875						
ANR	193160	Symbol	tokenize_null		192875						
ANR	193161	Symbol	driver		192875						
ANR	193162	Symbol	test_chomp_new_line_end		192875						
ANR	193163	Symbol	test_chomp_crlf_end		192875						
ANR	193164	Symbol	test_chomp_return_true		192875						
ANR	193165	Symbol	tokenize_skip		192875						
ANR	193166	Symbol	test_comparison_ops_lhs_MyString		192875						
ANR	193167	Symbol	test_sprintf_cat_string		192875						
ANR	193168	Symbol	test_lower_case_empty		192875						
ANR	193169	Symbol	test_upper_case_non_empty		192875						
ANR	193170	Function	test_sprintf_string	100:0:3781:5278							
ANR	193171	FunctionDef	test_sprintf_string ()		193170	0					
ANR	193172	CompoundStatement		100:34:3815:5278	193170	0					
ANR	193173	ExpressionStatement	"emit_test ( ""Test sprintf overloading for std::string"" )"	101:4:3821:3874	193170	0	True				
ANR	193174	CallExpression	"emit_test ( ""Test sprintf overloading for std::string"" )"		193170	0					
ANR	193175	Callee	emit_test		193170	0					
ANR	193176	Identifier	emit_test		193170	0					
ANR	193177	ArgumentList	"""Test sprintf overloading for std::string"""		193170	1					
ANR	193178	Argument	"""Test sprintf overloading for std::string"""		193170	0					
ANR	193179	PrimaryExpression	"""Test sprintf overloading for std::string"""		193170	0					
ANR	193180	IdentifierDeclStatement	int nchars = 0 ;	103:4:3881:3895	193170	1	True				
ANR	193181	IdentifierDecl	nchars = 0		193170	0					
ANR	193182	IdentifierDeclType	int		193170	0					
ANR	193183	Identifier	nchars		193170	1					
ANR	193184	AssignmentExpression	nchars = 0		193170	2		=			
ANR	193185	Identifier	nchars		193170	0					
ANR	193186	PrimaryExpression	0		193170	1					
ANR	193187	IdentifierDeclStatement	int rchars = 0 ;	104:4:3901:3915	193170	2	True				
ANR	193188	IdentifierDecl	rchars = 0		193170	0					
ANR	193189	IdentifierDeclType	int		193170	0					
ANR	193190	Identifier	rchars		193170	1					
ANR	193191	AssignmentExpression	rchars = 0		193170	2		=			
ANR	193192	Identifier	rchars		193170	0					
ANR	193193	PrimaryExpression	0		193170	1					
ANR	193194	IdentifierDeclStatement	std :: string dst ;	105:4:3921:3936	193170	3	True				
ANR	193195	IdentifierDecl	dst		193170	0					
ANR	193196	IdentifierDeclType	std :: string		193170	0					
ANR	193197	Identifier	dst		193170	1					
ANR	193198	IdentifierDeclStatement	std :: string src ;	106:4:3942:3957	193170	4	True				
ANR	193199	IdentifierDecl	src		193170	0					
ANR	193200	IdentifierDeclType	std :: string		193170	0					
ANR	193201	Identifier	src		193170	1					
ANR	193202	ExpressionStatement	nchars = STL_STRING_UTILS_FIXBUF / 2	108:4:3964:4000	193170	5	True				
ANR	193203	AssignmentExpression	nchars = STL_STRING_UTILS_FIXBUF / 2		193170	0		=			
ANR	193204	Identifier	nchars		193170	0					
ANR	193205	MultiplicativeExpression	STL_STRING_UTILS_FIXBUF / 2		193170	1		/			
ANR	193206	Identifier	STL_STRING_UTILS_FIXBUF		193170	0					
ANR	193207	PrimaryExpression	2		193170	1					
ANR	193208	ExpressionStatement	"src = """""	109:4:4006:4012	193170	6	True				
ANR	193209	AssignmentExpression	"src = """""		193170	0		=			
ANR	193210	Identifier	src		193170	0					
ANR	193211	PrimaryExpression	""""""		193170	1					
ANR	193212	ForStatement	for ( int j = 0 ; j < nchars ; ++ j )		193170	7					
ANR	193213	ForInit	int j = 0 ;	110:9:4023:4032	193170	0	True				
ANR	193214	IdentifierDeclStatement	int j = 0 ;		193170	0					
ANR	193215	IdentifierDecl	j = 0		193170	0					
ANR	193216	IdentifierDeclType	int		193170	0					
ANR	193217	Identifier	j		193170	1					
ANR	193218	AssignmentExpression	j = 0		193170	2		=			
ANR	193219	Identifier	j		193170	0					
ANR	193220	PrimaryExpression	0		193170	1					
ANR	193221	Condition	j < nchars	110:21:4035:4044	193170	1	True				
ANR	193222	RelationalExpression	j < nchars		193170	0		<			
ANR	193223	Identifier	j		193170	0					
ANR	193224	Identifier	nchars		193170	1					
ANR	193225	UnaryExpression	++ j	110:34:4048:4050	193170	2	True				
ANR	193226	IncDec	++		193170	0					
ANR	193227	Identifier	j		193170	1					
ANR	193228	ExpressionStatement	src += char ( '0' + ( j % 10 ) )	110:39:4053:4080	193170	3	True				
ANR	193229	AssignmentExpression	src += char ( '0' + ( j % 10 ) )		193170	0		+=			
ANR	193230	Identifier	src		193170	0					
ANR	193231	CallExpression	char ( '0' + ( j % 10 ) )		193170	1					
ANR	193232	Callee	char		193170	0					
ANR	193233	Identifier	char		193170	0					
ANR	193234	ArgumentList	'0' + ( j % 10 )		193170	1					
ANR	193235	Argument	'0' + ( j % 10 )		193170	0					
ANR	193236	AdditiveExpression	'0' + ( j % 10 )		193170	0		+			
ANR	193237	PrimaryExpression	'0'		193170	0					
ANR	193238	MultiplicativeExpression	j % 10		193170	1		%			
ANR	193239	Identifier	j		193170	0					
ANR	193240	PrimaryExpression	10		193170	1					
ANR	193241	ExpressionStatement	"rchars = sprintf ( dst , ""%s"" , src . c_str ( ) )"	111:4:4086:4126	193170	8	True				
ANR	193242	AssignmentExpression	"rchars = sprintf ( dst , ""%s"" , src . c_str ( ) )"		193170	0		=			
ANR	193243	Identifier	rchars		193170	0					
ANR	193244	CallExpression	"sprintf ( dst , ""%s"" , src . c_str ( ) )"		193170	1					
ANR	193245	Callee	sprintf		193170	0					
ANR	193246	Identifier	sprintf		193170	0					
ANR	193247	ArgumentList	dst		193170	1					
ANR	193248	Argument	dst		193170	0					
ANR	193249	Identifier	dst		193170	0					
ANR	193250	Argument	"""%s"""		193170	1					
ANR	193251	PrimaryExpression	"""%s"""		193170	0					
ANR	193252	Argument	src . c_str ( )		193170	2					
ANR	193253	CallExpression	src . c_str ( )		193170	0					
ANR	193254	Callee	src . c_str		193170	0					
ANR	193255	MemberAccess	src . c_str		193170	0					
ANR	193256	Identifier	src		193170	0					
ANR	193257	Identifier	c_str		193170	1					
ANR	193258	ArgumentList			193170	1					
ANR	193259	IfStatement	if ( dst != src )		193170	9					
ANR	193260	Condition	dst != src	112:8:4136:4145	193170	0	True				
ANR	193261	EqualityExpression	dst != src		193170	0		!=			
ANR	193262	Identifier	dst		193170	0					
ANR	193263	Identifier	src		193170	1					
ANR	193264	CompoundStatement		13:20:332:332	193170	1					
ANR	193265	ExpressionStatement	FAIL	113:2:4152:4156	193170	0	True				
ANR	193266	Identifier	FAIL		193170	0					
ANR	193267	IfStatement	if ( rchars != nchars )		193170	10					
ANR	193268	Condition	rchars != nchars	115:8:4180:4195	193170	0	True				
ANR	193269	EqualityExpression	rchars != nchars		193170	0		!=			
ANR	193270	Identifier	rchars		193170	0					
ANR	193271	Identifier	nchars		193170	1					
ANR	193272	CompoundStatement		16:26:382:382	193170	1					
ANR	193273	ExpressionStatement	FAIL	116:2:4202:4206	193170	0	True				
ANR	193274	Identifier	FAIL		193170	0					
ANR	193275	ExpressionStatement	nchars = STL_STRING_UTILS_FIXBUF - 1	119:4:4227:4263	193170	11	True				
ANR	193276	AssignmentExpression	nchars = STL_STRING_UTILS_FIXBUF - 1		193170	0		=			
ANR	193277	Identifier	nchars		193170	0					
ANR	193278	AdditiveExpression	STL_STRING_UTILS_FIXBUF - 1		193170	1		-			
ANR	193279	Identifier	STL_STRING_UTILS_FIXBUF		193170	0					
ANR	193280	PrimaryExpression	1		193170	1					
ANR	193281	ExpressionStatement	"src = """""	120:4:4269:4275	193170	12	True				
ANR	193282	AssignmentExpression	"src = """""		193170	0		=			
ANR	193283	Identifier	src		193170	0					
ANR	193284	PrimaryExpression	""""""		193170	1					
ANR	193285	ForStatement	for ( int j = 0 ; j < nchars ; ++ j )		193170	13					
ANR	193286	ForInit	int j = 0 ;	121:9:4286:4295	193170	0	True				
ANR	193287	IdentifierDeclStatement	int j = 0 ;		193170	0					
ANR	193288	IdentifierDecl	j = 0		193170	0					
ANR	193289	IdentifierDeclType	int		193170	0					
ANR	193290	Identifier	j		193170	1					
ANR	193291	AssignmentExpression	j = 0		193170	2		=			
ANR	193292	Identifier	j		193170	0					
ANR	193293	PrimaryExpression	0		193170	1					
ANR	193294	Condition	j < nchars	121:21:4298:4307	193170	1	True				
ANR	193295	RelationalExpression	j < nchars		193170	0		<			
ANR	193296	Identifier	j		193170	0					
ANR	193297	Identifier	nchars		193170	1					
ANR	193298	UnaryExpression	++ j	121:34:4311:4313	193170	2	True				
ANR	193299	IncDec	++		193170	0					
ANR	193300	Identifier	j		193170	1					
ANR	193301	ExpressionStatement	src += char ( '0' + ( j % 10 ) )	121:39:4316:4343	193170	3	True				
ANR	193302	AssignmentExpression	src += char ( '0' + ( j % 10 ) )		193170	0		+=			
ANR	193303	Identifier	src		193170	0					
ANR	193304	CallExpression	char ( '0' + ( j % 10 ) )		193170	1					
ANR	193305	Callee	char		193170	0					
ANR	193306	Identifier	char		193170	0					
ANR	193307	ArgumentList	'0' + ( j % 10 )		193170	1					
ANR	193308	Argument	'0' + ( j % 10 )		193170	0					
ANR	193309	AdditiveExpression	'0' + ( j % 10 )		193170	0		+			
ANR	193310	PrimaryExpression	'0'		193170	0					
ANR	193311	MultiplicativeExpression	j % 10		193170	1		%			
ANR	193312	Identifier	j		193170	0					
ANR	193313	PrimaryExpression	10		193170	1					
ANR	193314	ExpressionStatement	"rchars = sprintf ( dst , ""%s"" , src . c_str ( ) )"	122:4:4349:4389	193170	14	True				
ANR	193315	AssignmentExpression	"rchars = sprintf ( dst , ""%s"" , src . c_str ( ) )"		193170	0		=			
ANR	193316	Identifier	rchars		193170	0					
ANR	193317	CallExpression	"sprintf ( dst , ""%s"" , src . c_str ( ) )"		193170	1					
ANR	193318	Callee	sprintf		193170	0					
ANR	193319	Identifier	sprintf		193170	0					
ANR	193320	ArgumentList	dst		193170	1					
ANR	193321	Argument	dst		193170	0					
ANR	193322	Identifier	dst		193170	0					
ANR	193323	Argument	"""%s"""		193170	1					
ANR	193324	PrimaryExpression	"""%s"""		193170	0					
ANR	193325	Argument	src . c_str ( )		193170	2					
ANR	193326	CallExpression	src . c_str ( )		193170	0					
ANR	193327	Callee	src . c_str		193170	0					
ANR	193328	MemberAccess	src . c_str		193170	0					
ANR	193329	Identifier	src		193170	0					
ANR	193330	Identifier	c_str		193170	1					
ANR	193331	ArgumentList			193170	1					
ANR	193332	IfStatement	if ( dst != src )		193170	15					
ANR	193333	Condition	dst != src	123:8:4399:4408	193170	0	True				
ANR	193334	EqualityExpression	dst != src		193170	0		!=			
ANR	193335	Identifier	dst		193170	0					
ANR	193336	Identifier	src		193170	1					
ANR	193337	CompoundStatement		24:20:595:595	193170	1					
ANR	193338	ExpressionStatement	FAIL	124:2:4415:4419	193170	0	True				
ANR	193339	Identifier	FAIL		193170	0					
ANR	193340	IfStatement	if ( rchars != nchars )		193170	16					
ANR	193341	Condition	rchars != nchars	126:8:4443:4458	193170	0	True				
ANR	193342	EqualityExpression	rchars != nchars		193170	0		!=			
ANR	193343	Identifier	rchars		193170	0					
ANR	193344	Identifier	nchars		193170	1					
ANR	193345	CompoundStatement		27:26:645:645	193170	1					
ANR	193346	ExpressionStatement	FAIL	127:2:4465:4469	193170	0	True				
ANR	193347	Identifier	FAIL		193170	0					
ANR	193348	ExpressionStatement	nchars = STL_STRING_UTILS_FIXBUF	130:4:4490:4522	193170	17	True				
ANR	193349	AssignmentExpression	nchars = STL_STRING_UTILS_FIXBUF		193170	0		=			
ANR	193350	Identifier	nchars		193170	0					
ANR	193351	Identifier	STL_STRING_UTILS_FIXBUF		193170	1					
ANR	193352	ExpressionStatement	"src = """""	131:4:4528:4534	193170	18	True				
ANR	193353	AssignmentExpression	"src = """""		193170	0		=			
ANR	193354	Identifier	src		193170	0					
ANR	193355	PrimaryExpression	""""""		193170	1					
ANR	193356	ForStatement	for ( int j = 0 ; j < nchars ; ++ j )		193170	19					
ANR	193357	ForInit	int j = 0 ;	132:9:4545:4554	193170	0	True				
ANR	193358	IdentifierDeclStatement	int j = 0 ;		193170	0					
ANR	193359	IdentifierDecl	j = 0		193170	0					
ANR	193360	IdentifierDeclType	int		193170	0					
ANR	193361	Identifier	j		193170	1					
ANR	193362	AssignmentExpression	j = 0		193170	2		=			
ANR	193363	Identifier	j		193170	0					
ANR	193364	PrimaryExpression	0		193170	1					
ANR	193365	Condition	j < nchars	132:21:4557:4566	193170	1	True				
ANR	193366	RelationalExpression	j < nchars		193170	0		<			
ANR	193367	Identifier	j		193170	0					
ANR	193368	Identifier	nchars		193170	1					
ANR	193369	UnaryExpression	++ j	132:34:4570:4572	193170	2	True				
ANR	193370	IncDec	++		193170	0					
ANR	193371	Identifier	j		193170	1					
ANR	193372	ExpressionStatement	src += char ( '0' + ( j % 10 ) )	132:39:4575:4602	193170	3	True				
ANR	193373	AssignmentExpression	src += char ( '0' + ( j % 10 ) )		193170	0		+=			
ANR	193374	Identifier	src		193170	0					
ANR	193375	CallExpression	char ( '0' + ( j % 10 ) )		193170	1					
ANR	193376	Callee	char		193170	0					
ANR	193377	Identifier	char		193170	0					
ANR	193378	ArgumentList	'0' + ( j % 10 )		193170	1					
ANR	193379	Argument	'0' + ( j % 10 )		193170	0					
ANR	193380	AdditiveExpression	'0' + ( j % 10 )		193170	0		+			
ANR	193381	PrimaryExpression	'0'		193170	0					
ANR	193382	MultiplicativeExpression	j % 10		193170	1		%			
ANR	193383	Identifier	j		193170	0					
ANR	193384	PrimaryExpression	10		193170	1					
ANR	193385	ExpressionStatement	"rchars = sprintf ( dst , ""%s"" , src . c_str ( ) )"	133:4:4608:4648	193170	20	True				
ANR	193386	AssignmentExpression	"rchars = sprintf ( dst , ""%s"" , src . c_str ( ) )"		193170	0		=			
ANR	193387	Identifier	rchars		193170	0					
ANR	193388	CallExpression	"sprintf ( dst , ""%s"" , src . c_str ( ) )"		193170	1					
ANR	193389	Callee	sprintf		193170	0					
ANR	193390	Identifier	sprintf		193170	0					
ANR	193391	ArgumentList	dst		193170	1					
ANR	193392	Argument	dst		193170	0					
ANR	193393	Identifier	dst		193170	0					
ANR	193394	Argument	"""%s"""		193170	1					
ANR	193395	PrimaryExpression	"""%s"""		193170	0					
ANR	193396	Argument	src . c_str ( )		193170	2					
ANR	193397	CallExpression	src . c_str ( )		193170	0					
ANR	193398	Callee	src . c_str		193170	0					
ANR	193399	MemberAccess	src . c_str		193170	0					
ANR	193400	Identifier	src		193170	0					
ANR	193401	Identifier	c_str		193170	1					
ANR	193402	ArgumentList			193170	1					
ANR	193403	IfStatement	if ( dst != src )		193170	21					
ANR	193404	Condition	dst != src	134:8:4658:4667	193170	0	True				
ANR	193405	EqualityExpression	dst != src		193170	0		!=			
ANR	193406	Identifier	dst		193170	0					
ANR	193407	Identifier	src		193170	1					
ANR	193408	CompoundStatement		35:20:854:854	193170	1					
ANR	193409	ExpressionStatement	FAIL	135:2:4674:4678	193170	0	True				
ANR	193410	Identifier	FAIL		193170	0					
ANR	193411	IfStatement	if ( rchars != nchars )		193170	22					
ANR	193412	Condition	rchars != nchars	137:8:4702:4717	193170	0	True				
ANR	193413	EqualityExpression	rchars != nchars		193170	0		!=			
ANR	193414	Identifier	rchars		193170	0					
ANR	193415	Identifier	nchars		193170	1					
ANR	193416	CompoundStatement		38:26:904:904	193170	1					
ANR	193417	ExpressionStatement	FAIL	138:2:4724:4728	193170	0	True				
ANR	193418	Identifier	FAIL		193170	0					
ANR	193419	ExpressionStatement	nchars = STL_STRING_UTILS_FIXBUF + 1	141:4:4749:4785	193170	23	True				
ANR	193420	AssignmentExpression	nchars = STL_STRING_UTILS_FIXBUF + 1		193170	0		=			
ANR	193421	Identifier	nchars		193170	0					
ANR	193422	AdditiveExpression	STL_STRING_UTILS_FIXBUF + 1		193170	1		+			
ANR	193423	Identifier	STL_STRING_UTILS_FIXBUF		193170	0					
ANR	193424	PrimaryExpression	1		193170	1					
ANR	193425	ExpressionStatement	"src = """""	142:4:4791:4797	193170	24	True				
ANR	193426	AssignmentExpression	"src = """""		193170	0		=			
ANR	193427	Identifier	src		193170	0					
ANR	193428	PrimaryExpression	""""""		193170	1					
ANR	193429	ForStatement	for ( int j = 0 ; j < nchars ; ++ j )		193170	25					
ANR	193430	ForInit	int j = 0 ;	143:9:4808:4817	193170	0	True				
ANR	193431	IdentifierDeclStatement	int j = 0 ;		193170	0					
ANR	193432	IdentifierDecl	j = 0		193170	0					
ANR	193433	IdentifierDeclType	int		193170	0					
ANR	193434	Identifier	j		193170	1					
ANR	193435	AssignmentExpression	j = 0		193170	2		=			
ANR	193436	Identifier	j		193170	0					
ANR	193437	PrimaryExpression	0		193170	1					
ANR	193438	Condition	j < nchars	143:21:4820:4829	193170	1	True				
ANR	193439	RelationalExpression	j < nchars		193170	0		<			
ANR	193440	Identifier	j		193170	0					
ANR	193441	Identifier	nchars		193170	1					
ANR	193442	UnaryExpression	++ j	143:34:4833:4835	193170	2	True				
ANR	193443	IncDec	++		193170	0					
ANR	193444	Identifier	j		193170	1					
ANR	193445	ExpressionStatement	src += char ( '0' + ( j % 10 ) )	143:39:4838:4865	193170	3	True				
ANR	193446	AssignmentExpression	src += char ( '0' + ( j % 10 ) )		193170	0		+=			
ANR	193447	Identifier	src		193170	0					
ANR	193448	CallExpression	char ( '0' + ( j % 10 ) )		193170	1					
ANR	193449	Callee	char		193170	0					
ANR	193450	Identifier	char		193170	0					
ANR	193451	ArgumentList	'0' + ( j % 10 )		193170	1					
ANR	193452	Argument	'0' + ( j % 10 )		193170	0					
ANR	193453	AdditiveExpression	'0' + ( j % 10 )		193170	0		+			
ANR	193454	PrimaryExpression	'0'		193170	0					
ANR	193455	MultiplicativeExpression	j % 10		193170	1		%			
ANR	193456	Identifier	j		193170	0					
ANR	193457	PrimaryExpression	10		193170	1					
ANR	193458	ExpressionStatement	"rchars = sprintf ( dst , ""%s"" , src . c_str ( ) )"	144:4:4871:4911	193170	26	True				
ANR	193459	AssignmentExpression	"rchars = sprintf ( dst , ""%s"" , src . c_str ( ) )"		193170	0		=			
ANR	193460	Identifier	rchars		193170	0					
ANR	193461	CallExpression	"sprintf ( dst , ""%s"" , src . c_str ( ) )"		193170	1					
ANR	193462	Callee	sprintf		193170	0					
ANR	193463	Identifier	sprintf		193170	0					
ANR	193464	ArgumentList	dst		193170	1					
ANR	193465	Argument	dst		193170	0					
ANR	193466	Identifier	dst		193170	0					
ANR	193467	Argument	"""%s"""		193170	1					
ANR	193468	PrimaryExpression	"""%s"""		193170	0					
ANR	193469	Argument	src . c_str ( )		193170	2					
ANR	193470	CallExpression	src . c_str ( )		193170	0					
ANR	193471	Callee	src . c_str		193170	0					
ANR	193472	MemberAccess	src . c_str		193170	0					
ANR	193473	Identifier	src		193170	0					
ANR	193474	Identifier	c_str		193170	1					
ANR	193475	ArgumentList			193170	1					
ANR	193476	IfStatement	if ( dst != src )		193170	27					
ANR	193477	Condition	dst != src	145:8:4921:4930	193170	0	True				
ANR	193478	EqualityExpression	dst != src		193170	0		!=			
ANR	193479	Identifier	dst		193170	0					
ANR	193480	Identifier	src		193170	1					
ANR	193481	CompoundStatement		46:20:1117:1117	193170	1					
ANR	193482	ExpressionStatement	FAIL	146:2:4937:4941	193170	0	True				
ANR	193483	Identifier	FAIL		193170	0					
ANR	193484	IfStatement	if ( rchars != nchars )		193170	28					
ANR	193485	Condition	rchars != nchars	148:8:4965:4980	193170	0	True				
ANR	193486	EqualityExpression	rchars != nchars		193170	0		!=			
ANR	193487	Identifier	rchars		193170	0					
ANR	193488	Identifier	nchars		193170	1					
ANR	193489	CompoundStatement		49:26:1167:1167	193170	1					
ANR	193490	ExpressionStatement	FAIL	149:2:4987:4991	193170	0	True				
ANR	193491	Identifier	FAIL		193170	0					
ANR	193492	ExpressionStatement	nchars = STL_STRING_UTILS_FIXBUF * 2	152:4:5012:5048	193170	29	True				
ANR	193493	AssignmentExpression	nchars = STL_STRING_UTILS_FIXBUF * 2		193170	0		=			
ANR	193494	Identifier	nchars		193170	0					
ANR	193495	MultiplicativeExpression	STL_STRING_UTILS_FIXBUF * 2		193170	1		*			
ANR	193496	Identifier	STL_STRING_UTILS_FIXBUF		193170	0					
ANR	193497	PrimaryExpression	2		193170	1					
ANR	193498	ExpressionStatement	"src = """""	153:4:5054:5060	193170	30	True				
ANR	193499	AssignmentExpression	"src = """""		193170	0		=			
ANR	193500	Identifier	src		193170	0					
ANR	193501	PrimaryExpression	""""""		193170	1					
ANR	193502	ForStatement	for ( int j = 0 ; j < nchars ; ++ j )		193170	31					
ANR	193503	ForInit	int j = 0 ;	154:9:5071:5080	193170	0	True				
ANR	193504	IdentifierDeclStatement	int j = 0 ;		193170	0					
ANR	193505	IdentifierDecl	j = 0		193170	0					
ANR	193506	IdentifierDeclType	int		193170	0					
ANR	193507	Identifier	j		193170	1					
ANR	193508	AssignmentExpression	j = 0		193170	2		=			
ANR	193509	Identifier	j		193170	0					
ANR	193510	PrimaryExpression	0		193170	1					
ANR	193511	Condition	j < nchars	154:21:5083:5092	193170	1	True				
ANR	193512	RelationalExpression	j < nchars		193170	0		<			
ANR	193513	Identifier	j		193170	0					
ANR	193514	Identifier	nchars		193170	1					
ANR	193515	UnaryExpression	++ j	154:34:5096:5098	193170	2	True				
ANR	193516	IncDec	++		193170	0					
ANR	193517	Identifier	j		193170	1					
ANR	193518	ExpressionStatement	src += char ( '0' + ( j % 10 ) )	154:39:5101:5128	193170	3	True				
ANR	193519	AssignmentExpression	src += char ( '0' + ( j % 10 ) )		193170	0		+=			
ANR	193520	Identifier	src		193170	0					
ANR	193521	CallExpression	char ( '0' + ( j % 10 ) )		193170	1					
ANR	193522	Callee	char		193170	0					
ANR	193523	Identifier	char		193170	0					
ANR	193524	ArgumentList	'0' + ( j % 10 )		193170	1					
ANR	193525	Argument	'0' + ( j % 10 )		193170	0					
ANR	193526	AdditiveExpression	'0' + ( j % 10 )		193170	0		+			
ANR	193527	PrimaryExpression	'0'		193170	0					
ANR	193528	MultiplicativeExpression	j % 10		193170	1		%			
ANR	193529	Identifier	j		193170	0					
ANR	193530	PrimaryExpression	10		193170	1					
ANR	193531	ExpressionStatement	"rchars = sprintf ( dst , ""%s"" , src . c_str ( ) )"	155:4:5134:5174	193170	32	True				
ANR	193532	AssignmentExpression	"rchars = sprintf ( dst , ""%s"" , src . c_str ( ) )"		193170	0		=			
ANR	193533	Identifier	rchars		193170	0					
ANR	193534	CallExpression	"sprintf ( dst , ""%s"" , src . c_str ( ) )"		193170	1					
ANR	193535	Callee	sprintf		193170	0					
ANR	193536	Identifier	sprintf		193170	0					
ANR	193537	ArgumentList	dst		193170	1					
ANR	193538	Argument	dst		193170	0					
ANR	193539	Identifier	dst		193170	0					
ANR	193540	Argument	"""%s"""		193170	1					
ANR	193541	PrimaryExpression	"""%s"""		193170	0					
ANR	193542	Argument	src . c_str ( )		193170	2					
ANR	193543	CallExpression	src . c_str ( )		193170	0					
ANR	193544	Callee	src . c_str		193170	0					
ANR	193545	MemberAccess	src . c_str		193170	0					
ANR	193546	Identifier	src		193170	0					
ANR	193547	Identifier	c_str		193170	1					
ANR	193548	ArgumentList			193170	1					
ANR	193549	IfStatement	if ( dst != src )		193170	33					
ANR	193550	Condition	dst != src	156:8:5184:5193	193170	0	True				
ANR	193551	EqualityExpression	dst != src		193170	0		!=			
ANR	193552	Identifier	dst		193170	0					
ANR	193553	Identifier	src		193170	1					
ANR	193554	CompoundStatement		57:20:1380:1380	193170	1					
ANR	193555	ExpressionStatement	FAIL	157:2:5200:5204	193170	0	True				
ANR	193556	Identifier	FAIL		193170	0					
ANR	193557	IfStatement	if ( rchars != nchars )		193170	34					
ANR	193558	Condition	rchars != nchars	159:8:5228:5243	193170	0	True				
ANR	193559	EqualityExpression	rchars != nchars		193170	0		!=			
ANR	193560	Identifier	rchars		193170	0					
ANR	193561	Identifier	nchars		193170	1					
ANR	193562	CompoundStatement		60:26:1430:1430	193170	1					
ANR	193563	ExpressionStatement	FAIL	160:2:5250:5254	193170	0	True				
ANR	193564	Identifier	FAIL		193170	0					
ANR	193565	ExpressionStatement	PASS	163:1:5272:5276	193170	35	True				
ANR	193566	Identifier	PASS		193170	0					
ANR	193567	ReturnType	static bool		193170	1					
ANR	193568	Identifier	test_sprintf_string		193170	2					
ANR	193569	ParameterList			193170	3					
ANR	193570	CFGEntryNode	ENTRY		193170		True				
ANR	193571	CFGExitNode	EXIT		193170		True				
ANR	193572	Symbol	src . c_str		193170						
ANR	193573	Symbol	dst		193170						
ANR	193574	Symbol	STL_STRING_UTILS_FIXBUF		193170						
ANR	193575	Symbol	src		193170						
ANR	193576	Symbol	nchars		193170						
ANR	193577	Symbol	rchars		193170						
ANR	193578	Symbol	char		193170						
ANR	193579	Symbol	j		193170						
ANR	193580	Symbol	sprintf		193170						
ANR	193581	Function	test_sprintf_MyString	166:0:5281:6771							
ANR	193582	FunctionDef	test_sprintf_MyString ()		193581	0					
ANR	193583	CompoundStatement		166:36:5317:6771	193581	0					
ANR	193584	ExpressionStatement	"emit_test ( ""Test sprintf overloading for MyString"" )"	167:4:5323:5373	193581	0	True				
ANR	193585	CallExpression	"emit_test ( ""Test sprintf overloading for MyString"" )"		193581	0					
ANR	193586	Callee	emit_test		193581	0					
ANR	193587	Identifier	emit_test		193581	0					
ANR	193588	ArgumentList	"""Test sprintf overloading for MyString"""		193581	1					
ANR	193589	Argument	"""Test sprintf overloading for MyString"""		193581	0					
ANR	193590	PrimaryExpression	"""Test sprintf overloading for MyString"""		193581	0					
ANR	193591	IdentifierDeclStatement	int nchars = 0 ;	169:4:5380:5394	193581	1	True				
ANR	193592	IdentifierDecl	nchars = 0		193581	0					
ANR	193593	IdentifierDeclType	int		193581	0					
ANR	193594	Identifier	nchars		193581	1					
ANR	193595	AssignmentExpression	nchars = 0		193581	2		=			
ANR	193596	Identifier	nchars		193581	0					
ANR	193597	PrimaryExpression	0		193581	1					
ANR	193598	IdentifierDeclStatement	int rchars = 0 ;	170:4:5400:5414	193581	2	True				
ANR	193599	IdentifierDecl	rchars = 0		193581	0					
ANR	193600	IdentifierDeclType	int		193581	0					
ANR	193601	Identifier	rchars		193581	1					
ANR	193602	AssignmentExpression	rchars = 0		193581	2		=			
ANR	193603	Identifier	rchars		193581	0					
ANR	193604	PrimaryExpression	0		193581	1					
ANR	193605	IdentifierDeclStatement	MyString dst ;	171:4:5420:5432	193581	3	True				
ANR	193606	IdentifierDecl	dst		193581	0					
ANR	193607	IdentifierDeclType	MyString		193581	0					
ANR	193608	Identifier	dst		193581	1					
ANR	193609	IdentifierDeclStatement	MyString src ;	172:4:5438:5450	193581	4	True				
ANR	193610	IdentifierDecl	src		193581	0					
ANR	193611	IdentifierDeclType	MyString		193581	0					
ANR	193612	Identifier	src		193581	1					
ANR	193613	ExpressionStatement	nchars = STL_STRING_UTILS_FIXBUF / 2	174:4:5457:5493	193581	5	True				
ANR	193614	AssignmentExpression	nchars = STL_STRING_UTILS_FIXBUF / 2		193581	0		=			
ANR	193615	Identifier	nchars		193581	0					
ANR	193616	MultiplicativeExpression	STL_STRING_UTILS_FIXBUF / 2		193581	1		/			
ANR	193617	Identifier	STL_STRING_UTILS_FIXBUF		193581	0					
ANR	193618	PrimaryExpression	2		193581	1					
ANR	193619	ExpressionStatement	"src = """""	175:4:5499:5505	193581	6	True				
ANR	193620	AssignmentExpression	"src = """""		193581	0		=			
ANR	193621	Identifier	src		193581	0					
ANR	193622	PrimaryExpression	""""""		193581	1					
ANR	193623	ForStatement	for ( int j = 0 ; j < nchars ; ++ j )		193581	7					
ANR	193624	ForInit	int j = 0 ;	176:9:5516:5525	193581	0	True				
ANR	193625	IdentifierDeclStatement	int j = 0 ;		193581	0					
ANR	193626	IdentifierDecl	j = 0		193581	0					
ANR	193627	IdentifierDeclType	int		193581	0					
ANR	193628	Identifier	j		193581	1					
ANR	193629	AssignmentExpression	j = 0		193581	2		=			
ANR	193630	Identifier	j		193581	0					
ANR	193631	PrimaryExpression	0		193581	1					
ANR	193632	Condition	j < nchars	176:21:5528:5537	193581	1	True				
ANR	193633	RelationalExpression	j < nchars		193581	0		<			
ANR	193634	Identifier	j		193581	0					
ANR	193635	Identifier	nchars		193581	1					
ANR	193636	UnaryExpression	++ j	176:34:5541:5543	193581	2	True				
ANR	193637	IncDec	++		193581	0					
ANR	193638	Identifier	j		193581	1					
ANR	193639	ExpressionStatement	src += char ( '0' + ( j % 10 ) )	176:39:5546:5573	193581	3	True				
ANR	193640	AssignmentExpression	src += char ( '0' + ( j % 10 ) )		193581	0		+=			
ANR	193641	Identifier	src		193581	0					
ANR	193642	CallExpression	char ( '0' + ( j % 10 ) )		193581	1					
ANR	193643	Callee	char		193581	0					
ANR	193644	Identifier	char		193581	0					
ANR	193645	ArgumentList	'0' + ( j % 10 )		193581	1					
ANR	193646	Argument	'0' + ( j % 10 )		193581	0					
ANR	193647	AdditiveExpression	'0' + ( j % 10 )		193581	0		+			
ANR	193648	PrimaryExpression	'0'		193581	0					
ANR	193649	MultiplicativeExpression	j % 10		193581	1		%			
ANR	193650	Identifier	j		193581	0					
ANR	193651	PrimaryExpression	10		193581	1					
ANR	193652	ExpressionStatement	"rchars = sprintf ( dst , ""%s"" , src . Value ( ) )"	177:4:5579:5619	193581	8	True				
ANR	193653	AssignmentExpression	"rchars = sprintf ( dst , ""%s"" , src . Value ( ) )"		193581	0		=			
ANR	193654	Identifier	rchars		193581	0					
ANR	193655	CallExpression	"sprintf ( dst , ""%s"" , src . Value ( ) )"		193581	1					
ANR	193656	Callee	sprintf		193581	0					
ANR	193657	Identifier	sprintf		193581	0					
ANR	193658	ArgumentList	dst		193581	1					
ANR	193659	Argument	dst		193581	0					
ANR	193660	Identifier	dst		193581	0					
ANR	193661	Argument	"""%s"""		193581	1					
ANR	193662	PrimaryExpression	"""%s"""		193581	0					
ANR	193663	Argument	src . Value ( )		193581	2					
ANR	193664	CallExpression	src . Value ( )		193581	0					
ANR	193665	Callee	src . Value		193581	0					
ANR	193666	MemberAccess	src . Value		193581	0					
ANR	193667	Identifier	src		193581	0					
ANR	193668	Identifier	Value		193581	1					
ANR	193669	ArgumentList			193581	1					
ANR	193670	IfStatement	if ( dst != src )		193581	9					
ANR	193671	Condition	dst != src	178:8:5629:5638	193581	0	True				
ANR	193672	EqualityExpression	dst != src		193581	0		!=			
ANR	193673	Identifier	dst		193581	0					
ANR	193674	Identifier	src		193581	1					
ANR	193675	CompoundStatement		13:20:323:323	193581	1					
ANR	193676	ExpressionStatement	FAIL	179:2:5645:5649	193581	0	True				
ANR	193677	Identifier	FAIL		193581	0					
ANR	193678	IfStatement	if ( rchars != nchars )		193581	10					
ANR	193679	Condition	rchars != nchars	181:8:5673:5688	193581	0	True				
ANR	193680	EqualityExpression	rchars != nchars		193581	0		!=			
ANR	193681	Identifier	rchars		193581	0					
ANR	193682	Identifier	nchars		193581	1					
ANR	193683	CompoundStatement		16:26:373:373	193581	1					
ANR	193684	ExpressionStatement	FAIL	182:2:5695:5699	193581	0	True				
ANR	193685	Identifier	FAIL		193581	0					
ANR	193686	ExpressionStatement	nchars = STL_STRING_UTILS_FIXBUF - 1	185:4:5720:5756	193581	11	True				
ANR	193687	AssignmentExpression	nchars = STL_STRING_UTILS_FIXBUF - 1		193581	0		=			
ANR	193688	Identifier	nchars		193581	0					
ANR	193689	AdditiveExpression	STL_STRING_UTILS_FIXBUF - 1		193581	1		-			
ANR	193690	Identifier	STL_STRING_UTILS_FIXBUF		193581	0					
ANR	193691	PrimaryExpression	1		193581	1					
ANR	193692	ExpressionStatement	"src = """""	186:4:5762:5768	193581	12	True				
ANR	193693	AssignmentExpression	"src = """""		193581	0		=			
ANR	193694	Identifier	src		193581	0					
ANR	193695	PrimaryExpression	""""""		193581	1					
ANR	193696	ForStatement	for ( int j = 0 ; j < nchars ; ++ j )		193581	13					
ANR	193697	ForInit	int j = 0 ;	187:9:5779:5788	193581	0	True				
ANR	193698	IdentifierDeclStatement	int j = 0 ;		193581	0					
ANR	193699	IdentifierDecl	j = 0		193581	0					
ANR	193700	IdentifierDeclType	int		193581	0					
ANR	193701	Identifier	j		193581	1					
ANR	193702	AssignmentExpression	j = 0		193581	2		=			
ANR	193703	Identifier	j		193581	0					
ANR	193704	PrimaryExpression	0		193581	1					
ANR	193705	Condition	j < nchars	187:21:5791:5800	193581	1	True				
ANR	193706	RelationalExpression	j < nchars		193581	0		<			
ANR	193707	Identifier	j		193581	0					
ANR	193708	Identifier	nchars		193581	1					
ANR	193709	UnaryExpression	++ j	187:34:5804:5806	193581	2	True				
ANR	193710	IncDec	++		193581	0					
ANR	193711	Identifier	j		193581	1					
ANR	193712	ExpressionStatement	src += char ( '0' + ( j % 10 ) )	187:39:5809:5836	193581	3	True				
ANR	193713	AssignmentExpression	src += char ( '0' + ( j % 10 ) )		193581	0		+=			
ANR	193714	Identifier	src		193581	0					
ANR	193715	CallExpression	char ( '0' + ( j % 10 ) )		193581	1					
ANR	193716	Callee	char		193581	0					
ANR	193717	Identifier	char		193581	0					
ANR	193718	ArgumentList	'0' + ( j % 10 )		193581	1					
ANR	193719	Argument	'0' + ( j % 10 )		193581	0					
ANR	193720	AdditiveExpression	'0' + ( j % 10 )		193581	0		+			
ANR	193721	PrimaryExpression	'0'		193581	0					
ANR	193722	MultiplicativeExpression	j % 10		193581	1		%			
ANR	193723	Identifier	j		193581	0					
ANR	193724	PrimaryExpression	10		193581	1					
ANR	193725	ExpressionStatement	"rchars = sprintf ( dst , ""%s"" , src . Value ( ) )"	188:4:5842:5882	193581	14	True				
ANR	193726	AssignmentExpression	"rchars = sprintf ( dst , ""%s"" , src . Value ( ) )"		193581	0		=			
ANR	193727	Identifier	rchars		193581	0					
ANR	193728	CallExpression	"sprintf ( dst , ""%s"" , src . Value ( ) )"		193581	1					
ANR	193729	Callee	sprintf		193581	0					
ANR	193730	Identifier	sprintf		193581	0					
ANR	193731	ArgumentList	dst		193581	1					
ANR	193732	Argument	dst		193581	0					
ANR	193733	Identifier	dst		193581	0					
ANR	193734	Argument	"""%s"""		193581	1					
ANR	193735	PrimaryExpression	"""%s"""		193581	0					
ANR	193736	Argument	src . Value ( )		193581	2					
ANR	193737	CallExpression	src . Value ( )		193581	0					
ANR	193738	Callee	src . Value		193581	0					
ANR	193739	MemberAccess	src . Value		193581	0					
ANR	193740	Identifier	src		193581	0					
ANR	193741	Identifier	Value		193581	1					
ANR	193742	ArgumentList			193581	1					
ANR	193743	IfStatement	if ( dst != src )		193581	15					
ANR	193744	Condition	dst != src	189:8:5892:5901	193581	0	True				
ANR	193745	EqualityExpression	dst != src		193581	0		!=			
ANR	193746	Identifier	dst		193581	0					
ANR	193747	Identifier	src		193581	1					
ANR	193748	CompoundStatement		24:20:586:586	193581	1					
ANR	193749	ExpressionStatement	FAIL	190:2:5908:5912	193581	0	True				
ANR	193750	Identifier	FAIL		193581	0					
ANR	193751	IfStatement	if ( rchars != nchars )		193581	16					
ANR	193752	Condition	rchars != nchars	192:8:5936:5951	193581	0	True				
ANR	193753	EqualityExpression	rchars != nchars		193581	0		!=			
ANR	193754	Identifier	rchars		193581	0					
ANR	193755	Identifier	nchars		193581	1					
ANR	193756	CompoundStatement		27:26:636:636	193581	1					
ANR	193757	ExpressionStatement	FAIL	193:2:5958:5962	193581	0	True				
ANR	193758	Identifier	FAIL		193581	0					
ANR	193759	ExpressionStatement	nchars = STL_STRING_UTILS_FIXBUF	196:4:5983:6015	193581	17	True				
ANR	193760	AssignmentExpression	nchars = STL_STRING_UTILS_FIXBUF		193581	0		=			
ANR	193761	Identifier	nchars		193581	0					
ANR	193762	Identifier	STL_STRING_UTILS_FIXBUF		193581	1					
ANR	193763	ExpressionStatement	"src = """""	197:4:6021:6027	193581	18	True				
ANR	193764	AssignmentExpression	"src = """""		193581	0		=			
ANR	193765	Identifier	src		193581	0					
ANR	193766	PrimaryExpression	""""""		193581	1					
ANR	193767	ForStatement	for ( int j = 0 ; j < nchars ; ++ j )		193581	19					
ANR	193768	ForInit	int j = 0 ;	198:9:6038:6047	193581	0	True				
ANR	193769	IdentifierDeclStatement	int j = 0 ;		193581	0					
ANR	193770	IdentifierDecl	j = 0		193581	0					
ANR	193771	IdentifierDeclType	int		193581	0					
ANR	193772	Identifier	j		193581	1					
ANR	193773	AssignmentExpression	j = 0		193581	2		=			
ANR	193774	Identifier	j		193581	0					
ANR	193775	PrimaryExpression	0		193581	1					
ANR	193776	Condition	j < nchars	198:21:6050:6059	193581	1	True				
ANR	193777	RelationalExpression	j < nchars		193581	0		<			
ANR	193778	Identifier	j		193581	0					
ANR	193779	Identifier	nchars		193581	1					
ANR	193780	UnaryExpression	++ j	198:34:6063:6065	193581	2	True				
ANR	193781	IncDec	++		193581	0					
ANR	193782	Identifier	j		193581	1					
ANR	193783	ExpressionStatement	src += char ( '0' + ( j % 10 ) )	198:39:6068:6095	193581	3	True				
ANR	193784	AssignmentExpression	src += char ( '0' + ( j % 10 ) )		193581	0		+=			
ANR	193785	Identifier	src		193581	0					
ANR	193786	CallExpression	char ( '0' + ( j % 10 ) )		193581	1					
ANR	193787	Callee	char		193581	0					
ANR	193788	Identifier	char		193581	0					
ANR	193789	ArgumentList	'0' + ( j % 10 )		193581	1					
ANR	193790	Argument	'0' + ( j % 10 )		193581	0					
ANR	193791	AdditiveExpression	'0' + ( j % 10 )		193581	0		+			
ANR	193792	PrimaryExpression	'0'		193581	0					
ANR	193793	MultiplicativeExpression	j % 10		193581	1		%			
ANR	193794	Identifier	j		193581	0					
ANR	193795	PrimaryExpression	10		193581	1					
ANR	193796	ExpressionStatement	"rchars = sprintf ( dst , ""%s"" , src . Value ( ) )"	199:4:6101:6141	193581	20	True				
ANR	193797	AssignmentExpression	"rchars = sprintf ( dst , ""%s"" , src . Value ( ) )"		193581	0		=			
ANR	193798	Identifier	rchars		193581	0					
ANR	193799	CallExpression	"sprintf ( dst , ""%s"" , src . Value ( ) )"		193581	1					
ANR	193800	Callee	sprintf		193581	0					
ANR	193801	Identifier	sprintf		193581	0					
ANR	193802	ArgumentList	dst		193581	1					
ANR	193803	Argument	dst		193581	0					
ANR	193804	Identifier	dst		193581	0					
ANR	193805	Argument	"""%s"""		193581	1					
ANR	193806	PrimaryExpression	"""%s"""		193581	0					
ANR	193807	Argument	src . Value ( )		193581	2					
ANR	193808	CallExpression	src . Value ( )		193581	0					
ANR	193809	Callee	src . Value		193581	0					
ANR	193810	MemberAccess	src . Value		193581	0					
ANR	193811	Identifier	src		193581	0					
ANR	193812	Identifier	Value		193581	1					
ANR	193813	ArgumentList			193581	1					
ANR	193814	IfStatement	if ( dst != src )		193581	21					
ANR	193815	Condition	dst != src	200:8:6151:6160	193581	0	True				
ANR	193816	EqualityExpression	dst != src		193581	0		!=			
ANR	193817	Identifier	dst		193581	0					
ANR	193818	Identifier	src		193581	1					
ANR	193819	CompoundStatement		35:20:845:845	193581	1					
ANR	193820	ExpressionStatement	FAIL	201:2:6167:6171	193581	0	True				
ANR	193821	Identifier	FAIL		193581	0					
ANR	193822	IfStatement	if ( rchars != nchars )		193581	22					
ANR	193823	Condition	rchars != nchars	203:8:6195:6210	193581	0	True				
ANR	193824	EqualityExpression	rchars != nchars		193581	0		!=			
ANR	193825	Identifier	rchars		193581	0					
ANR	193826	Identifier	nchars		193581	1					
ANR	193827	CompoundStatement		38:26:895:895	193581	1					
ANR	193828	ExpressionStatement	FAIL	204:2:6217:6221	193581	0	True				
ANR	193829	Identifier	FAIL		193581	0					
ANR	193830	ExpressionStatement	nchars = STL_STRING_UTILS_FIXBUF + 1	207:4:6242:6278	193581	23	True				
ANR	193831	AssignmentExpression	nchars = STL_STRING_UTILS_FIXBUF + 1		193581	0		=			
ANR	193832	Identifier	nchars		193581	0					
ANR	193833	AdditiveExpression	STL_STRING_UTILS_FIXBUF + 1		193581	1		+			
ANR	193834	Identifier	STL_STRING_UTILS_FIXBUF		193581	0					
ANR	193835	PrimaryExpression	1		193581	1					
ANR	193836	ExpressionStatement	"src = """""	208:4:6284:6290	193581	24	True				
ANR	193837	AssignmentExpression	"src = """""		193581	0		=			
ANR	193838	Identifier	src		193581	0					
ANR	193839	PrimaryExpression	""""""		193581	1					
ANR	193840	ForStatement	for ( int j = 0 ; j < nchars ; ++ j )		193581	25					
ANR	193841	ForInit	int j = 0 ;	209:9:6301:6310	193581	0	True				
ANR	193842	IdentifierDeclStatement	int j = 0 ;		193581	0					
ANR	193843	IdentifierDecl	j = 0		193581	0					
ANR	193844	IdentifierDeclType	int		193581	0					
ANR	193845	Identifier	j		193581	1					
ANR	193846	AssignmentExpression	j = 0		193581	2		=			
ANR	193847	Identifier	j		193581	0					
ANR	193848	PrimaryExpression	0		193581	1					
ANR	193849	Condition	j < nchars	209:21:6313:6322	193581	1	True				
ANR	193850	RelationalExpression	j < nchars		193581	0		<			
ANR	193851	Identifier	j		193581	0					
ANR	193852	Identifier	nchars		193581	1					
ANR	193853	UnaryExpression	++ j	209:34:6326:6328	193581	2	True				
ANR	193854	IncDec	++		193581	0					
ANR	193855	Identifier	j		193581	1					
ANR	193856	ExpressionStatement	src += char ( '0' + ( j % 10 ) )	209:39:6331:6358	193581	3	True				
ANR	193857	AssignmentExpression	src += char ( '0' + ( j % 10 ) )		193581	0		+=			
ANR	193858	Identifier	src		193581	0					
ANR	193859	CallExpression	char ( '0' + ( j % 10 ) )		193581	1					
ANR	193860	Callee	char		193581	0					
ANR	193861	Identifier	char		193581	0					
ANR	193862	ArgumentList	'0' + ( j % 10 )		193581	1					
ANR	193863	Argument	'0' + ( j % 10 )		193581	0					
ANR	193864	AdditiveExpression	'0' + ( j % 10 )		193581	0		+			
ANR	193865	PrimaryExpression	'0'		193581	0					
ANR	193866	MultiplicativeExpression	j % 10		193581	1		%			
ANR	193867	Identifier	j		193581	0					
ANR	193868	PrimaryExpression	10		193581	1					
ANR	193869	ExpressionStatement	"rchars = sprintf ( dst , ""%s"" , src . Value ( ) )"	210:4:6364:6404	193581	26	True				
ANR	193870	AssignmentExpression	"rchars = sprintf ( dst , ""%s"" , src . Value ( ) )"		193581	0		=			
ANR	193871	Identifier	rchars		193581	0					
ANR	193872	CallExpression	"sprintf ( dst , ""%s"" , src . Value ( ) )"		193581	1					
ANR	193873	Callee	sprintf		193581	0					
ANR	193874	Identifier	sprintf		193581	0					
ANR	193875	ArgumentList	dst		193581	1					
ANR	193876	Argument	dst		193581	0					
ANR	193877	Identifier	dst		193581	0					
ANR	193878	Argument	"""%s"""		193581	1					
ANR	193879	PrimaryExpression	"""%s"""		193581	0					
ANR	193880	Argument	src . Value ( )		193581	2					
ANR	193881	CallExpression	src . Value ( )		193581	0					
ANR	193882	Callee	src . Value		193581	0					
ANR	193883	MemberAccess	src . Value		193581	0					
ANR	193884	Identifier	src		193581	0					
ANR	193885	Identifier	Value		193581	1					
ANR	193886	ArgumentList			193581	1					
ANR	193887	IfStatement	if ( dst != src )		193581	27					
ANR	193888	Condition	dst != src	211:8:6414:6423	193581	0	True				
ANR	193889	EqualityExpression	dst != src		193581	0		!=			
ANR	193890	Identifier	dst		193581	0					
ANR	193891	Identifier	src		193581	1					
ANR	193892	CompoundStatement		46:20:1108:1108	193581	1					
ANR	193893	ExpressionStatement	FAIL	212:2:6430:6434	193581	0	True				
ANR	193894	Identifier	FAIL		193581	0					
ANR	193895	IfStatement	if ( rchars != nchars )		193581	28					
ANR	193896	Condition	rchars != nchars	214:8:6458:6473	193581	0	True				
ANR	193897	EqualityExpression	rchars != nchars		193581	0		!=			
ANR	193898	Identifier	rchars		193581	0					
ANR	193899	Identifier	nchars		193581	1					
ANR	193900	CompoundStatement		49:26:1158:1158	193581	1					
ANR	193901	ExpressionStatement	FAIL	215:2:6480:6484	193581	0	True				
ANR	193902	Identifier	FAIL		193581	0					
ANR	193903	ExpressionStatement	nchars = STL_STRING_UTILS_FIXBUF * 2	218:4:6505:6541	193581	29	True				
ANR	193904	AssignmentExpression	nchars = STL_STRING_UTILS_FIXBUF * 2		193581	0		=			
ANR	193905	Identifier	nchars		193581	0					
ANR	193906	MultiplicativeExpression	STL_STRING_UTILS_FIXBUF * 2		193581	1		*			
ANR	193907	Identifier	STL_STRING_UTILS_FIXBUF		193581	0					
ANR	193908	PrimaryExpression	2		193581	1					
ANR	193909	ExpressionStatement	"src = """""	219:4:6547:6553	193581	30	True				
ANR	193910	AssignmentExpression	"src = """""		193581	0		=			
ANR	193911	Identifier	src		193581	0					
ANR	193912	PrimaryExpression	""""""		193581	1					
ANR	193913	ForStatement	for ( int j = 0 ; j < nchars ; ++ j )		193581	31					
ANR	193914	ForInit	int j = 0 ;	220:9:6564:6573	193581	0	True				
ANR	193915	IdentifierDeclStatement	int j = 0 ;		193581	0					
ANR	193916	IdentifierDecl	j = 0		193581	0					
ANR	193917	IdentifierDeclType	int		193581	0					
ANR	193918	Identifier	j		193581	1					
ANR	193919	AssignmentExpression	j = 0		193581	2		=			
ANR	193920	Identifier	j		193581	0					
ANR	193921	PrimaryExpression	0		193581	1					
ANR	193922	Condition	j < nchars	220:21:6576:6585	193581	1	True				
ANR	193923	RelationalExpression	j < nchars		193581	0		<			
ANR	193924	Identifier	j		193581	0					
ANR	193925	Identifier	nchars		193581	1					
ANR	193926	UnaryExpression	++ j	220:34:6589:6591	193581	2	True				
ANR	193927	IncDec	++		193581	0					
ANR	193928	Identifier	j		193581	1					
ANR	193929	ExpressionStatement	src += char ( '0' + ( j % 10 ) )	220:39:6594:6621	193581	3	True				
ANR	193930	AssignmentExpression	src += char ( '0' + ( j % 10 ) )		193581	0		+=			
ANR	193931	Identifier	src		193581	0					
ANR	193932	CallExpression	char ( '0' + ( j % 10 ) )		193581	1					
ANR	193933	Callee	char		193581	0					
ANR	193934	Identifier	char		193581	0					
ANR	193935	ArgumentList	'0' + ( j % 10 )		193581	1					
ANR	193936	Argument	'0' + ( j % 10 )		193581	0					
ANR	193937	AdditiveExpression	'0' + ( j % 10 )		193581	0		+			
ANR	193938	PrimaryExpression	'0'		193581	0					
ANR	193939	MultiplicativeExpression	j % 10		193581	1		%			
ANR	193940	Identifier	j		193581	0					
ANR	193941	PrimaryExpression	10		193581	1					
ANR	193942	ExpressionStatement	"rchars = sprintf ( dst , ""%s"" , src . Value ( ) )"	221:4:6627:6667	193581	32	True				
ANR	193943	AssignmentExpression	"rchars = sprintf ( dst , ""%s"" , src . Value ( ) )"		193581	0		=			
ANR	193944	Identifier	rchars		193581	0					
ANR	193945	CallExpression	"sprintf ( dst , ""%s"" , src . Value ( ) )"		193581	1					
ANR	193946	Callee	sprintf		193581	0					
ANR	193947	Identifier	sprintf		193581	0					
ANR	193948	ArgumentList	dst		193581	1					
ANR	193949	Argument	dst		193581	0					
ANR	193950	Identifier	dst		193581	0					
ANR	193951	Argument	"""%s"""		193581	1					
ANR	193952	PrimaryExpression	"""%s"""		193581	0					
ANR	193953	Argument	src . Value ( )		193581	2					
ANR	193954	CallExpression	src . Value ( )		193581	0					
ANR	193955	Callee	src . Value		193581	0					
ANR	193956	MemberAccess	src . Value		193581	0					
ANR	193957	Identifier	src		193581	0					
ANR	193958	Identifier	Value		193581	1					
ANR	193959	ArgumentList			193581	1					
ANR	193960	IfStatement	if ( dst != src )		193581	33					
ANR	193961	Condition	dst != src	222:8:6677:6686	193581	0	True				
ANR	193962	EqualityExpression	dst != src		193581	0		!=			
ANR	193963	Identifier	dst		193581	0					
ANR	193964	Identifier	src		193581	1					
ANR	193965	CompoundStatement		57:20:1371:1371	193581	1					
ANR	193966	ExpressionStatement	FAIL	223:2:6693:6697	193581	0	True				
ANR	193967	Identifier	FAIL		193581	0					
ANR	193968	IfStatement	if ( rchars != nchars )		193581	34					
ANR	193969	Condition	rchars != nchars	225:8:6721:6736	193581	0	True				
ANR	193970	EqualityExpression	rchars != nchars		193581	0		!=			
ANR	193971	Identifier	rchars		193581	0					
ANR	193972	Identifier	nchars		193581	1					
ANR	193973	CompoundStatement		60:26:1421:1421	193581	1					
ANR	193974	ExpressionStatement	FAIL	226:2:6743:6747	193581	0	True				
ANR	193975	Identifier	FAIL		193581	0					
ANR	193976	ExpressionStatement	PASS	229:1:6765:6769	193581	35	True				
ANR	193977	Identifier	PASS		193581	0					
ANR	193978	ReturnType	static bool		193581	1					
ANR	193979	Identifier	test_sprintf_MyString		193581	2					
ANR	193980	ParameterList			193581	3					
ANR	193981	CFGEntryNode	ENTRY		193581		True				
ANR	193982	CFGExitNode	EXIT		193581		True				
ANR	193983	Symbol	src . Value		193581						
ANR	193984	Symbol	dst		193581						
ANR	193985	Symbol	STL_STRING_UTILS_FIXBUF		193581						
ANR	193986	Symbol	src		193581						
ANR	193987	Symbol	nchars		193581						
ANR	193988	Symbol	rchars		193581						
ANR	193989	Symbol	char		193581						
ANR	193990	Symbol	j		193581						
ANR	193991	Symbol	sprintf		193581						
ANR	193992	Function	test_sprintf_cat_string	232:0:6774:7041							
ANR	193993	FunctionDef	test_sprintf_cat_string ()		193992	0					
ANR	193994	CompoundStatement		232:38:6812:7041	193992	0					
ANR	193995	ExpressionStatement	"emit_test ( ""Test sprintf_cat overloading for std::string"" )"	233:4:6818:6875	193992	0	True				
ANR	193996	CallExpression	"emit_test ( ""Test sprintf_cat overloading for std::string"" )"		193992	0					
ANR	193997	Callee	emit_test		193992	0					
ANR	193998	Identifier	emit_test		193992	0					
ANR	193999	ArgumentList	"""Test sprintf_cat overloading for std::string"""		193992	1					
ANR	194000	Argument	"""Test sprintf_cat overloading for std::string"""		193992	0					
ANR	194001	PrimaryExpression	"""Test sprintf_cat overloading for std::string"""		193992	0					
ANR	194002	IdentifierDeclStatement	"std :: string s = ""foo"" ;"	235:4:6882:6903	193992	1	True				
ANR	194003	IdentifierDecl	"s = ""foo"""		193992	0					
ANR	194004	IdentifierDeclType	std :: string		193992	0					
ANR	194005	Identifier	s		193992	1					
ANR	194006	AssignmentExpression	"s = ""foo"""		193992	2		=			
ANR	194007	Identifier	s		193992	0					
ANR	194008	PrimaryExpression	"""foo"""		193992	1					
ANR	194009	IdentifierDeclStatement	"int r = sprintf_cat ( s , ""%s"" , ""bar"" ) ;"	236:4:6909:6944	193992	2	True				
ANR	194010	IdentifierDecl	"r = sprintf_cat ( s , ""%s"" , ""bar"" )"		193992	0					
ANR	194011	IdentifierDeclType	int		193992	0					
ANR	194012	Identifier	r		193992	1					
ANR	194013	AssignmentExpression	"r = sprintf_cat ( s , ""%s"" , ""bar"" )"		193992	2		=			
ANR	194014	Identifier	r		193992	0					
ANR	194015	CallExpression	"sprintf_cat ( s , ""%s"" , ""bar"" )"		193992	1					
ANR	194016	Callee	sprintf_cat		193992	0					
ANR	194017	Identifier	sprintf_cat		193992	0					
ANR	194018	ArgumentList	s		193992	1					
ANR	194019	Argument	s		193992	0					
ANR	194020	Identifier	s		193992	0					
ANR	194021	Argument	"""%s"""		193992	1					
ANR	194022	PrimaryExpression	"""%s"""		193992	0					
ANR	194023	Argument	"""bar"""		193992	2					
ANR	194024	PrimaryExpression	"""bar"""		193992	0					
ANR	194025	IfStatement	"if ( s != ""foobar"" )"		193992	3					
ANR	194026	Condition	"s != ""foobar"""	237:8:6954:6966	193992	0	True				
ANR	194027	EqualityExpression	"s != ""foobar"""		193992	0		!=			
ANR	194028	Identifier	s		193992	0					
ANR	194029	PrimaryExpression	"""foobar"""		193992	1					
ANR	194030	CompoundStatement		6:23:156:156	193992	1					
ANR	194031	ExpressionStatement	FAIL	238:2:6973:6977	193992	0	True				
ANR	194032	Identifier	FAIL		193992	0					
ANR	194033	IfStatement	if ( r != 3 )		193992	4					
ANR	194034	Condition	r != 3	240:8:7001:7006	193992	0	True				
ANR	194035	EqualityExpression	r != 3		193992	0		!=			
ANR	194036	Identifier	r		193992	0					
ANR	194037	PrimaryExpression	3		193992	1					
ANR	194038	CompoundStatement		9:16:196:196	193992	1					
ANR	194039	ExpressionStatement	FAIL	241:2:7013:7017	193992	0	True				
ANR	194040	Identifier	FAIL		193992	0					
ANR	194041	ExpressionStatement	PASS	244:1:7035:7039	193992	5	True				
ANR	194042	Identifier	PASS		193992	0					
ANR	194043	ReturnType	static bool		193992	1					
ANR	194044	Identifier	test_sprintf_cat_string		193992	2					
ANR	194045	ParameterList			193992	3					
ANR	194046	CFGEntryNode	ENTRY		193992		True				
ANR	194047	CFGExitNode	EXIT		193992		True				
ANR	194048	Symbol	r		193992						
ANR	194049	Symbol	s		193992						
ANR	194050	Symbol	sprintf_cat		193992						
ANR	194051	Function	test_sprintf_cat_MyString	247:0:7044:7311							
ANR	194052	FunctionDef	test_sprintf_cat_MyString ()		194051	0					
ANR	194053	CompoundStatement		247:40:7084:7311	194051	0					
ANR	194054	ExpressionStatement	"emit_test ( ""Test sprintf_cat overloading for MyString"" )"	248:4:7090:7144	194051	0	True				
ANR	194055	CallExpression	"emit_test ( ""Test sprintf_cat overloading for MyString"" )"		194051	0					
ANR	194056	Callee	emit_test		194051	0					
ANR	194057	Identifier	emit_test		194051	0					
ANR	194058	ArgumentList	"""Test sprintf_cat overloading for MyString"""		194051	1					
ANR	194059	Argument	"""Test sprintf_cat overloading for MyString"""		194051	0					
ANR	194060	PrimaryExpression	"""Test sprintf_cat overloading for MyString"""		194051	0					
ANR	194061	IdentifierDeclStatement	"MyString s = ""foo"" ;"	250:4:7151:7169	194051	1	True				
ANR	194062	IdentifierDecl	"s = ""foo"""		194051	0					
ANR	194063	IdentifierDeclType	MyString		194051	0					
ANR	194064	Identifier	s		194051	1					
ANR	194065	AssignmentExpression	"s = ""foo"""		194051	2		=			
ANR	194066	Identifier	s		194051	0					
ANR	194067	PrimaryExpression	"""foo"""		194051	1					
ANR	194068	IdentifierDeclStatement	"int r = sprintf_cat ( s , ""%s"" , ""bar"" ) ;"	251:4:7175:7210	194051	2	True				
ANR	194069	IdentifierDecl	"r = sprintf_cat ( s , ""%s"" , ""bar"" )"		194051	0					
ANR	194070	IdentifierDeclType	int		194051	0					
ANR	194071	Identifier	r		194051	1					
ANR	194072	AssignmentExpression	"r = sprintf_cat ( s , ""%s"" , ""bar"" )"		194051	2		=			
ANR	194073	Identifier	r		194051	0					
ANR	194074	CallExpression	"sprintf_cat ( s , ""%s"" , ""bar"" )"		194051	1					
ANR	194075	Callee	sprintf_cat		194051	0					
ANR	194076	Identifier	sprintf_cat		194051	0					
ANR	194077	ArgumentList	s		194051	1					
ANR	194078	Argument	s		194051	0					
ANR	194079	Identifier	s		194051	0					
ANR	194080	Argument	"""%s"""		194051	1					
ANR	194081	PrimaryExpression	"""%s"""		194051	0					
ANR	194082	Argument	"""bar"""		194051	2					
ANR	194083	PrimaryExpression	"""bar"""		194051	0					
ANR	194084	IfStatement	"if ( s != ""foobar"" )"		194051	3					
ANR	194085	Condition	"s != ""foobar"""	252:8:7220:7232	194051	0	True				
ANR	194086	EqualityExpression	"s != ""foobar"""		194051	0		!=			
ANR	194087	Identifier	s		194051	0					
ANR	194088	PrimaryExpression	"""foobar"""		194051	1					
ANR	194089	CompoundStatement		6:23:150:150	194051	1					
ANR	194090	ExpressionStatement	FAIL	253:2:7239:7243	194051	0	True				
ANR	194091	Identifier	FAIL		194051	0					
ANR	194092	IfStatement	if ( r != 3 )		194051	4					
ANR	194093	Condition	r != 3	255:8:7267:7272	194051	0	True				
ANR	194094	EqualityExpression	r != 3		194051	0		!=			
ANR	194095	Identifier	r		194051	0					
ANR	194096	PrimaryExpression	3		194051	1					
ANR	194097	CompoundStatement		9:16:190:190	194051	1					
ANR	194098	ExpressionStatement	FAIL	256:2:7279:7283	194051	0	True				
ANR	194099	Identifier	FAIL		194051	0					
ANR	194100	ExpressionStatement	PASS	259:1:7305:7309	194051	5	True				
ANR	194101	Identifier	PASS		194051	0					
ANR	194102	ReturnType	static bool		194051	1					
ANR	194103	Identifier	test_sprintf_cat_MyString		194051	2					
ANR	194104	ParameterList			194051	3					
ANR	194105	CFGEntryNode	ENTRY		194051		True				
ANR	194106	CFGExitNode	EXIT		194051		True				
ANR	194107	Symbol	r		194051						
ANR	194108	Symbol	s		194051						
ANR	194109	Symbol	sprintf_cat		194051						
ANR	194110	Function	test_comparison_ops_lhs_string	262:0:7314:8685							
ANR	194111	FunctionDef	test_comparison_ops_lhs_string ()		194110	0					
ANR	194112	CompoundStatement		262:45:7359:8685	194110	0					
ANR	194113	ExpressionStatement	"emit_test ( ""Test comparison operators: LHS is std::string and RHS is MyString"" )"	263:4:7365:7443	194110	0	True				
ANR	194114	CallExpression	"emit_test ( ""Test comparison operators: LHS is std::string and RHS is MyString"" )"		194110	0					
ANR	194115	Callee	emit_test		194110	0					
ANR	194116	Identifier	emit_test		194110	0					
ANR	194117	ArgumentList	"""Test comparison operators: LHS is std::string and RHS is MyString"""		194110	1					
ANR	194118	Argument	"""Test comparison operators: LHS is std::string and RHS is MyString"""		194110	0					
ANR	194119	PrimaryExpression	"""Test comparison operators: LHS is std::string and RHS is MyString"""		194110	0					
ANR	194120	IdentifierDeclStatement	std :: string lhs ;	265:4:7450:7465	194110	1	True				
ANR	194121	IdentifierDecl	lhs		194110	0					
ANR	194122	IdentifierDeclType	std :: string		194110	0					
ANR	194123	Identifier	lhs		194110	1					
ANR	194124	IdentifierDeclStatement	MyString rhs ;	266:4:7471:7483	194110	2	True				
ANR	194125	IdentifierDecl	rhs		194110	0					
ANR	194126	IdentifierDeclType	MyString		194110	0					
ANR	194127	Identifier	rhs		194110	1					
ANR	194128	ExpressionStatement	"lhs = ""a"""	269:4:7532:7541	194110	3	True				
ANR	194129	AssignmentExpression	"lhs = ""a"""		194110	0		=			
ANR	194130	Identifier	lhs		194110	0					
ANR	194131	PrimaryExpression	"""a"""		194110	1					
ANR	194132	ExpressionStatement	"rhs = ""a"""	270:4:7547:7556	194110	4	True				
ANR	194133	AssignmentExpression	"rhs = ""a"""		194110	0		=			
ANR	194134	Identifier	rhs		194110	0					
ANR	194135	PrimaryExpression	"""a"""		194110	1					
ANR	194136	IfStatement	if ( ( lhs == rhs ) != true )		194110	5					
ANR	194137	Condition	( lhs == rhs ) != true	271:8:7566:7585	194110	0	True				
ANR	194138	EqualityExpression	( lhs == rhs ) != true		194110	0		!=			
ANR	194139	EqualityExpression	lhs == rhs		194110	0		==			
ANR	194140	Identifier	lhs		194110	0					
ANR	194141	Identifier	rhs		194110	1					
ANR	194142	Identifier	true		194110	1					
ANR	194143	CompoundStatement		10:30:228:228	194110	1					
ANR	194144	ExpressionStatement	FAIL	272:2:7592:7596	194110	0	True				
ANR	194145	Identifier	FAIL		194110	0					
ANR	194146	IfStatement	if ( ( lhs != rhs ) != false )		194110	6					
ANR	194147	Condition	( lhs != rhs ) != false	274:8:7620:7640	194110	0	True				
ANR	194148	EqualityExpression	( lhs != rhs ) != false		194110	0		!=			
ANR	194149	EqualityExpression	lhs != rhs		194110	0		!=			
ANR	194150	Identifier	lhs		194110	0					
ANR	194151	Identifier	rhs		194110	1					
ANR	194152	Identifier	false		194110	1					
ANR	194153	CompoundStatement		13:31:283:283	194110	1					
ANR	194154	ExpressionStatement	FAIL	275:2:7647:7651	194110	0	True				
ANR	194155	Identifier	FAIL		194110	0					
ANR	194156	IfStatement	if ( ( lhs < rhs ) != false )		194110	7					
ANR	194157	Condition	( lhs < rhs ) != false	277:8:7675:7694	194110	0	True				
ANR	194158	EqualityExpression	( lhs < rhs ) != false		194110	0		!=			
ANR	194159	RelationalExpression	lhs < rhs		194110	0		<			
ANR	194160	Identifier	lhs		194110	0					
ANR	194161	Identifier	rhs		194110	1					
ANR	194162	Identifier	false		194110	1					
ANR	194163	CompoundStatement		16:30:337:337	194110	1					
ANR	194164	ExpressionStatement	FAIL	278:2:7701:7705	194110	0	True				
ANR	194165	Identifier	FAIL		194110	0					
ANR	194166	IfStatement	if ( ( lhs > rhs ) != false )		194110	8					
ANR	194167	Condition	( lhs > rhs ) != false	280:8:7729:7748	194110	0	True				
ANR	194168	EqualityExpression	( lhs > rhs ) != false		194110	0		!=			
ANR	194169	RelationalExpression	lhs > rhs		194110	0		>			
ANR	194170	Identifier	lhs		194110	0					
ANR	194171	Identifier	rhs		194110	1					
ANR	194172	Identifier	false		194110	1					
ANR	194173	CompoundStatement		19:30:391:391	194110	1					
ANR	194174	ExpressionStatement	FAIL	281:2:7755:7759	194110	0	True				
ANR	194175	Identifier	FAIL		194110	0					
ANR	194176	IfStatement	if ( ( lhs <= rhs ) != true )		194110	9					
ANR	194177	Condition	( lhs <= rhs ) != true	283:8:7783:7802	194110	0	True				
ANR	194178	EqualityExpression	( lhs <= rhs ) != true		194110	0		!=			
ANR	194179	RelationalExpression	lhs <= rhs		194110	0		<=			
ANR	194180	Identifier	lhs		194110	0					
ANR	194181	Identifier	rhs		194110	1					
ANR	194182	Identifier	true		194110	1					
ANR	194183	CompoundStatement		22:30:445:445	194110	1					
ANR	194184	ExpressionStatement	FAIL	284:2:7809:7813	194110	0	True				
ANR	194185	Identifier	FAIL		194110	0					
ANR	194186	IfStatement	if ( ( lhs >= rhs ) != true )		194110	10					
ANR	194187	Condition	( lhs >= rhs ) != true	286:8:7837:7856	194110	0	True				
ANR	194188	EqualityExpression	( lhs >= rhs ) != true		194110	0		!=			
ANR	194189	RelationalExpression	lhs >= rhs		194110	0		>=			
ANR	194190	Identifier	lhs		194110	0					
ANR	194191	Identifier	rhs		194110	1					
ANR	194192	Identifier	true		194110	1					
ANR	194193	CompoundStatement		25:30:499:499	194110	1					
ANR	194194	ExpressionStatement	FAIL	287:2:7863:7867	194110	0	True				
ANR	194195	Identifier	FAIL		194110	0					
ANR	194196	ExpressionStatement	"lhs = ""a"""	291:4:7929:7938	194110	11	True				
ANR	194197	AssignmentExpression	"lhs = ""a"""		194110	0		=			
ANR	194198	Identifier	lhs		194110	0					
ANR	194199	PrimaryExpression	"""a"""		194110	1					
ANR	194200	ExpressionStatement	"rhs = ""b"""	292:4:7944:7953	194110	12	True				
ANR	194201	AssignmentExpression	"rhs = ""b"""		194110	0		=			
ANR	194202	Identifier	rhs		194110	0					
ANR	194203	PrimaryExpression	"""b"""		194110	1					
ANR	194204	IfStatement	if ( ( lhs == rhs ) != false )		194110	13					
ANR	194205	Condition	( lhs == rhs ) != false	293:8:7963:7983	194110	0	True				
ANR	194206	EqualityExpression	( lhs == rhs ) != false		194110	0		!=			
ANR	194207	EqualityExpression	lhs == rhs		194110	0		==			
ANR	194208	Identifier	lhs		194110	0					
ANR	194209	Identifier	rhs		194110	1					
ANR	194210	Identifier	false		194110	1					
ANR	194211	CompoundStatement		32:31:626:626	194110	1					
ANR	194212	ExpressionStatement	FAIL	294:2:7990:7994	194110	0	True				
ANR	194213	Identifier	FAIL		194110	0					
ANR	194214	IfStatement	if ( ( lhs != rhs ) != true )		194110	14					
ANR	194215	Condition	( lhs != rhs ) != true	296:8:8018:8037	194110	0	True				
ANR	194216	EqualityExpression	( lhs != rhs ) != true		194110	0		!=			
ANR	194217	EqualityExpression	lhs != rhs		194110	0		!=			
ANR	194218	Identifier	lhs		194110	0					
ANR	194219	Identifier	rhs		194110	1					
ANR	194220	Identifier	true		194110	1					
ANR	194221	CompoundStatement		35:30:680:680	194110	1					
ANR	194222	ExpressionStatement	FAIL	297:2:8044:8048	194110	0	True				
ANR	194223	Identifier	FAIL		194110	0					
ANR	194224	IfStatement	if ( ( lhs < rhs ) != true )		194110	15					
ANR	194225	Condition	( lhs < rhs ) != true	299:8:8072:8090	194110	0	True				
ANR	194226	EqualityExpression	( lhs < rhs ) != true		194110	0		!=			
ANR	194227	RelationalExpression	lhs < rhs		194110	0		<			
ANR	194228	Identifier	lhs		194110	0					
ANR	194229	Identifier	rhs		194110	1					
ANR	194230	Identifier	true		194110	1					
ANR	194231	CompoundStatement		38:29:733:733	194110	1					
ANR	194232	ExpressionStatement	FAIL	300:2:8097:8101	194110	0	True				
ANR	194233	Identifier	FAIL		194110	0					
ANR	194234	IfStatement	if ( ( lhs > rhs ) != false )		194110	16					
ANR	194235	Condition	( lhs > rhs ) != false	302:8:8125:8144	194110	0	True				
ANR	194236	EqualityExpression	( lhs > rhs ) != false		194110	0		!=			
ANR	194237	RelationalExpression	lhs > rhs		194110	0		>			
ANR	194238	Identifier	lhs		194110	0					
ANR	194239	Identifier	rhs		194110	1					
ANR	194240	Identifier	false		194110	1					
ANR	194241	CompoundStatement		41:30:787:787	194110	1					
ANR	194242	ExpressionStatement	FAIL	303:2:8151:8155	194110	0	True				
ANR	194243	Identifier	FAIL		194110	0					
ANR	194244	IfStatement	if ( ( lhs <= rhs ) != true )		194110	17					
ANR	194245	Condition	( lhs <= rhs ) != true	305:8:8179:8198	194110	0	True				
ANR	194246	EqualityExpression	( lhs <= rhs ) != true		194110	0		!=			
ANR	194247	RelationalExpression	lhs <= rhs		194110	0		<=			
ANR	194248	Identifier	lhs		194110	0					
ANR	194249	Identifier	rhs		194110	1					
ANR	194250	Identifier	true		194110	1					
ANR	194251	CompoundStatement		44:30:841:841	194110	1					
ANR	194252	ExpressionStatement	FAIL	306:2:8205:8209	194110	0	True				
ANR	194253	Identifier	FAIL		194110	0					
ANR	194254	IfStatement	if ( ( lhs >= rhs ) != false )		194110	18					
ANR	194255	Condition	( lhs >= rhs ) != false	308:8:8233:8253	194110	0	True				
ANR	194256	EqualityExpression	( lhs >= rhs ) != false		194110	0		!=			
ANR	194257	RelationalExpression	lhs >= rhs		194110	0		>=			
ANR	194258	Identifier	lhs		194110	0					
ANR	194259	Identifier	rhs		194110	1					
ANR	194260	Identifier	false		194110	1					
ANR	194261	CompoundStatement		47:31:896:896	194110	1					
ANR	194262	ExpressionStatement	FAIL	309:2:8260:8264	194110	0	True				
ANR	194263	Identifier	FAIL		194110	0					
ANR	194264	ExpressionStatement	"lhs = ""b"""	313:4:8326:8335	194110	19	True				
ANR	194265	AssignmentExpression	"lhs = ""b"""		194110	0		=			
ANR	194266	Identifier	lhs		194110	0					
ANR	194267	PrimaryExpression	"""b"""		194110	1					
ANR	194268	ExpressionStatement	"rhs = ""a"""	314:4:8341:8350	194110	20	True				
ANR	194269	AssignmentExpression	"rhs = ""a"""		194110	0		=			
ANR	194270	Identifier	rhs		194110	0					
ANR	194271	PrimaryExpression	"""a"""		194110	1					
ANR	194272	IfStatement	if ( ( lhs == rhs ) != false )		194110	21					
ANR	194273	Condition	( lhs == rhs ) != false	315:8:8360:8380	194110	0	True				
ANR	194274	EqualityExpression	( lhs == rhs ) != false		194110	0		!=			
ANR	194275	EqualityExpression	lhs == rhs		194110	0		==			
ANR	194276	Identifier	lhs		194110	0					
ANR	194277	Identifier	rhs		194110	1					
ANR	194278	Identifier	false		194110	1					
ANR	194279	CompoundStatement		54:31:1023:1023	194110	1					
ANR	194280	ExpressionStatement	FAIL	316:2:8387:8391	194110	0	True				
ANR	194281	Identifier	FAIL		194110	0					
ANR	194282	IfStatement	if ( ( lhs != rhs ) != true )		194110	22					
ANR	194283	Condition	( lhs != rhs ) != true	318:8:8415:8434	194110	0	True				
ANR	194284	EqualityExpression	( lhs != rhs ) != true		194110	0		!=			
ANR	194285	EqualityExpression	lhs != rhs		194110	0		!=			
ANR	194286	Identifier	lhs		194110	0					
ANR	194287	Identifier	rhs		194110	1					
ANR	194288	Identifier	true		194110	1					
ANR	194289	CompoundStatement		57:30:1077:1077	194110	1					
ANR	194290	ExpressionStatement	FAIL	319:2:8441:8445	194110	0	True				
ANR	194291	Identifier	FAIL		194110	0					
ANR	194292	IfStatement	if ( ( lhs < rhs ) != false )		194110	23					
ANR	194293	Condition	( lhs < rhs ) != false	321:8:8469:8488	194110	0	True				
ANR	194294	EqualityExpression	( lhs < rhs ) != false		194110	0		!=			
ANR	194295	RelationalExpression	lhs < rhs		194110	0		<			
ANR	194296	Identifier	lhs		194110	0					
ANR	194297	Identifier	rhs		194110	1					
ANR	194298	Identifier	false		194110	1					
ANR	194299	CompoundStatement		60:30:1131:1131	194110	1					
ANR	194300	ExpressionStatement	FAIL	322:2:8495:8499	194110	0	True				
ANR	194301	Identifier	FAIL		194110	0					
ANR	194302	IfStatement	if ( ( lhs > rhs ) != true )		194110	24					
ANR	194303	Condition	( lhs > rhs ) != true	324:8:8523:8541	194110	0	True				
ANR	194304	EqualityExpression	( lhs > rhs ) != true		194110	0		!=			
ANR	194305	RelationalExpression	lhs > rhs		194110	0		>			
ANR	194306	Identifier	lhs		194110	0					
ANR	194307	Identifier	rhs		194110	1					
ANR	194308	Identifier	true		194110	1					
ANR	194309	CompoundStatement		63:29:1184:1184	194110	1					
ANR	194310	ExpressionStatement	FAIL	325:2:8548:8552	194110	0	True				
ANR	194311	Identifier	FAIL		194110	0					
ANR	194312	IfStatement	if ( ( lhs <= rhs ) != false )		194110	25					
ANR	194313	Condition	( lhs <= rhs ) != false	327:8:8576:8596	194110	0	True				
ANR	194314	EqualityExpression	( lhs <= rhs ) != false		194110	0		!=			
ANR	194315	RelationalExpression	lhs <= rhs		194110	0		<=			
ANR	194316	Identifier	lhs		194110	0					
ANR	194317	Identifier	rhs		194110	1					
ANR	194318	Identifier	false		194110	1					
ANR	194319	CompoundStatement		66:31:1239:1239	194110	1					
ANR	194320	ExpressionStatement	FAIL	328:2:8603:8607	194110	0	True				
ANR	194321	Identifier	FAIL		194110	0					
ANR	194322	IfStatement	if ( ( lhs >= rhs ) != true )		194110	26					
ANR	194323	Condition	( lhs >= rhs ) != true	330:8:8631:8650	194110	0	True				
ANR	194324	EqualityExpression	( lhs >= rhs ) != true		194110	0		!=			
ANR	194325	RelationalExpression	lhs >= rhs		194110	0		>=			
ANR	194326	Identifier	lhs		194110	0					
ANR	194327	Identifier	rhs		194110	1					
ANR	194328	Identifier	true		194110	1					
ANR	194329	CompoundStatement		69:30:1293:1293	194110	1					
ANR	194330	ExpressionStatement	FAIL	331:2:8657:8661	194110	0	True				
ANR	194331	Identifier	FAIL		194110	0					
ANR	194332	ExpressionStatement	PASS	334:1:8679:8683	194110	27	True				
ANR	194333	Identifier	PASS		194110	0					
ANR	194334	ReturnType	static bool		194110	1					
ANR	194335	Identifier	test_comparison_ops_lhs_string		194110	2					
ANR	194336	ParameterList			194110	3					
ANR	194337	CFGEntryNode	ENTRY		194110		True				
ANR	194338	CFGExitNode	EXIT		194110		True				
ANR	194339	Symbol	lhs		194110						
ANR	194340	Symbol	true		194110						
ANR	194341	Symbol	false		194110						
ANR	194342	Symbol	rhs		194110						
ANR	194343	Function	test_comparison_ops_lhs_MyString	337:0:8688:10061							
ANR	194344	FunctionDef	test_comparison_ops_lhs_MyString ()		194343	0					
ANR	194345	CompoundStatement		337:47:8735:10061	194343	0					
ANR	194346	ExpressionStatement	"emit_test ( ""Test comparison operators: LHS is MyString and LHS is std::string"" )"	338:4:8741:8819	194343	0	True				
ANR	194347	CallExpression	"emit_test ( ""Test comparison operators: LHS is MyString and LHS is std::string"" )"		194343	0					
ANR	194348	Callee	emit_test		194343	0					
ANR	194349	Identifier	emit_test		194343	0					
ANR	194350	ArgumentList	"""Test comparison operators: LHS is MyString and LHS is std::string"""		194343	1					
ANR	194351	Argument	"""Test comparison operators: LHS is MyString and LHS is std::string"""		194343	0					
ANR	194352	PrimaryExpression	"""Test comparison operators: LHS is MyString and LHS is std::string"""		194343	0					
ANR	194353	IdentifierDeclStatement	MyString lhs ;	340:4:8826:8838	194343	1	True				
ANR	194354	IdentifierDecl	lhs		194343	0					
ANR	194355	IdentifierDeclType	MyString		194343	0					
ANR	194356	Identifier	lhs		194343	1					
ANR	194357	IdentifierDeclStatement	std :: string rhs ;	341:4:8844:8859	194343	2	True				
ANR	194358	IdentifierDecl	rhs		194343	0					
ANR	194359	IdentifierDeclType	std :: string		194343	0					
ANR	194360	Identifier	rhs		194343	1					
ANR	194361	ExpressionStatement	"lhs = ""a"""	344:4:8908:8917	194343	3	True				
ANR	194362	AssignmentExpression	"lhs = ""a"""		194343	0		=			
ANR	194363	Identifier	lhs		194343	0					
ANR	194364	PrimaryExpression	"""a"""		194343	1					
ANR	194365	ExpressionStatement	"rhs = ""a"""	345:4:8923:8932	194343	4	True				
ANR	194366	AssignmentExpression	"rhs = ""a"""		194343	0		=			
ANR	194367	Identifier	rhs		194343	0					
ANR	194368	PrimaryExpression	"""a"""		194343	1					
ANR	194369	IfStatement	if ( ( lhs == rhs ) != true )		194343	5					
ANR	194370	Condition	( lhs == rhs ) != true	346:8:8942:8961	194343	0	True				
ANR	194371	EqualityExpression	( lhs == rhs ) != true		194343	0		!=			
ANR	194372	EqualityExpression	lhs == rhs		194343	0		==			
ANR	194373	Identifier	lhs		194343	0					
ANR	194374	Identifier	rhs		194343	1					
ANR	194375	Identifier	true		194343	1					
ANR	194376	CompoundStatement		10:30:228:228	194343	1					
ANR	194377	ExpressionStatement	FAIL	347:2:8968:8972	194343	0	True				
ANR	194378	Identifier	FAIL		194343	0					
ANR	194379	IfStatement	if ( ( lhs != rhs ) != false )		194343	6					
ANR	194380	Condition	( lhs != rhs ) != false	349:8:8996:9016	194343	0	True				
ANR	194381	EqualityExpression	( lhs != rhs ) != false		194343	0		!=			
ANR	194382	EqualityExpression	lhs != rhs		194343	0		!=			
ANR	194383	Identifier	lhs		194343	0					
ANR	194384	Identifier	rhs		194343	1					
ANR	194385	Identifier	false		194343	1					
ANR	194386	CompoundStatement		13:31:283:283	194343	1					
ANR	194387	ExpressionStatement	FAIL	350:2:9023:9027	194343	0	True				
ANR	194388	Identifier	FAIL		194343	0					
ANR	194389	IfStatement	if ( ( lhs < rhs ) != false )		194343	7					
ANR	194390	Condition	( lhs < rhs ) != false	352:8:9051:9070	194343	0	True				
ANR	194391	EqualityExpression	( lhs < rhs ) != false		194343	0		!=			
ANR	194392	RelationalExpression	lhs < rhs		194343	0		<			
ANR	194393	Identifier	lhs		194343	0					
ANR	194394	Identifier	rhs		194343	1					
ANR	194395	Identifier	false		194343	1					
ANR	194396	CompoundStatement		16:30:337:337	194343	1					
ANR	194397	ExpressionStatement	FAIL	353:2:9077:9081	194343	0	True				
ANR	194398	Identifier	FAIL		194343	0					
ANR	194399	IfStatement	if ( ( lhs > rhs ) != false )		194343	8					
ANR	194400	Condition	( lhs > rhs ) != false	355:8:9105:9124	194343	0	True				
ANR	194401	EqualityExpression	( lhs > rhs ) != false		194343	0		!=			
ANR	194402	RelationalExpression	lhs > rhs		194343	0		>			
ANR	194403	Identifier	lhs		194343	0					
ANR	194404	Identifier	rhs		194343	1					
ANR	194405	Identifier	false		194343	1					
ANR	194406	CompoundStatement		19:30:391:391	194343	1					
ANR	194407	ExpressionStatement	FAIL	356:2:9131:9135	194343	0	True				
ANR	194408	Identifier	FAIL		194343	0					
ANR	194409	IfStatement	if ( ( lhs <= rhs ) != true )		194343	9					
ANR	194410	Condition	( lhs <= rhs ) != true	358:8:9159:9178	194343	0	True				
ANR	194411	EqualityExpression	( lhs <= rhs ) != true		194343	0		!=			
ANR	194412	RelationalExpression	lhs <= rhs		194343	0		<=			
ANR	194413	Identifier	lhs		194343	0					
ANR	194414	Identifier	rhs		194343	1					
ANR	194415	Identifier	true		194343	1					
ANR	194416	CompoundStatement		22:30:445:445	194343	1					
ANR	194417	ExpressionStatement	FAIL	359:2:9185:9189	194343	0	True				
ANR	194418	Identifier	FAIL		194343	0					
ANR	194419	IfStatement	if ( ( lhs >= rhs ) != true )		194343	10					
ANR	194420	Condition	( lhs >= rhs ) != true	361:8:9213:9232	194343	0	True				
ANR	194421	EqualityExpression	( lhs >= rhs ) != true		194343	0		!=			
ANR	194422	RelationalExpression	lhs >= rhs		194343	0		>=			
ANR	194423	Identifier	lhs		194343	0					
ANR	194424	Identifier	rhs		194343	1					
ANR	194425	Identifier	true		194343	1					
ANR	194426	CompoundStatement		25:30:499:499	194343	1					
ANR	194427	ExpressionStatement	FAIL	362:2:9239:9243	194343	0	True				
ANR	194428	Identifier	FAIL		194343	0					
ANR	194429	ExpressionStatement	"lhs = ""a"""	366:4:9305:9314	194343	11	True				
ANR	194430	AssignmentExpression	"lhs = ""a"""		194343	0		=			
ANR	194431	Identifier	lhs		194343	0					
ANR	194432	PrimaryExpression	"""a"""		194343	1					
ANR	194433	ExpressionStatement	"rhs = ""b"""	367:4:9320:9329	194343	12	True				
ANR	194434	AssignmentExpression	"rhs = ""b"""		194343	0		=			
ANR	194435	Identifier	rhs		194343	0					
ANR	194436	PrimaryExpression	"""b"""		194343	1					
ANR	194437	IfStatement	if ( ( lhs == rhs ) != false )		194343	13					
ANR	194438	Condition	( lhs == rhs ) != false	368:8:9339:9359	194343	0	True				
ANR	194439	EqualityExpression	( lhs == rhs ) != false		194343	0		!=			
ANR	194440	EqualityExpression	lhs == rhs		194343	0		==			
ANR	194441	Identifier	lhs		194343	0					
ANR	194442	Identifier	rhs		194343	1					
ANR	194443	Identifier	false		194343	1					
ANR	194444	CompoundStatement		32:31:626:626	194343	1					
ANR	194445	ExpressionStatement	FAIL	369:2:9366:9370	194343	0	True				
ANR	194446	Identifier	FAIL		194343	0					
ANR	194447	IfStatement	if ( ( lhs != rhs ) != true )		194343	14					
ANR	194448	Condition	( lhs != rhs ) != true	371:8:9394:9413	194343	0	True				
ANR	194449	EqualityExpression	( lhs != rhs ) != true		194343	0		!=			
ANR	194450	EqualityExpression	lhs != rhs		194343	0		!=			
ANR	194451	Identifier	lhs		194343	0					
ANR	194452	Identifier	rhs		194343	1					
ANR	194453	Identifier	true		194343	1					
ANR	194454	CompoundStatement		35:30:680:680	194343	1					
ANR	194455	ExpressionStatement	FAIL	372:2:9420:9424	194343	0	True				
ANR	194456	Identifier	FAIL		194343	0					
ANR	194457	IfStatement	if ( ( lhs < rhs ) != true )		194343	15					
ANR	194458	Condition	( lhs < rhs ) != true	374:8:9448:9466	194343	0	True				
ANR	194459	EqualityExpression	( lhs < rhs ) != true		194343	0		!=			
ANR	194460	RelationalExpression	lhs < rhs		194343	0		<			
ANR	194461	Identifier	lhs		194343	0					
ANR	194462	Identifier	rhs		194343	1					
ANR	194463	Identifier	true		194343	1					
ANR	194464	CompoundStatement		38:29:733:733	194343	1					
ANR	194465	ExpressionStatement	FAIL	375:2:9473:9477	194343	0	True				
ANR	194466	Identifier	FAIL		194343	0					
ANR	194467	IfStatement	if ( ( lhs > rhs ) != false )		194343	16					
ANR	194468	Condition	( lhs > rhs ) != false	377:8:9501:9520	194343	0	True				
ANR	194469	EqualityExpression	( lhs > rhs ) != false		194343	0		!=			
ANR	194470	RelationalExpression	lhs > rhs		194343	0		>			
ANR	194471	Identifier	lhs		194343	0					
ANR	194472	Identifier	rhs		194343	1					
ANR	194473	Identifier	false		194343	1					
ANR	194474	CompoundStatement		41:30:787:787	194343	1					
ANR	194475	ExpressionStatement	FAIL	378:2:9527:9531	194343	0	True				
ANR	194476	Identifier	FAIL		194343	0					
ANR	194477	IfStatement	if ( ( lhs <= rhs ) != true )		194343	17					
ANR	194478	Condition	( lhs <= rhs ) != true	380:8:9555:9574	194343	0	True				
ANR	194479	EqualityExpression	( lhs <= rhs ) != true		194343	0		!=			
ANR	194480	RelationalExpression	lhs <= rhs		194343	0		<=			
ANR	194481	Identifier	lhs		194343	0					
ANR	194482	Identifier	rhs		194343	1					
ANR	194483	Identifier	true		194343	1					
ANR	194484	CompoundStatement		44:30:841:841	194343	1					
ANR	194485	ExpressionStatement	FAIL	381:2:9581:9585	194343	0	True				
ANR	194486	Identifier	FAIL		194343	0					
ANR	194487	IfStatement	if ( ( lhs >= rhs ) != false )		194343	18					
ANR	194488	Condition	( lhs >= rhs ) != false	383:8:9609:9629	194343	0	True				
ANR	194489	EqualityExpression	( lhs >= rhs ) != false		194343	0		!=			
ANR	194490	RelationalExpression	lhs >= rhs		194343	0		>=			
ANR	194491	Identifier	lhs		194343	0					
ANR	194492	Identifier	rhs		194343	1					
ANR	194493	Identifier	false		194343	1					
ANR	194494	CompoundStatement		47:31:896:896	194343	1					
ANR	194495	ExpressionStatement	FAIL	384:2:9636:9640	194343	0	True				
ANR	194496	Identifier	FAIL		194343	0					
ANR	194497	ExpressionStatement	"lhs = ""b"""	388:4:9702:9711	194343	19	True				
ANR	194498	AssignmentExpression	"lhs = ""b"""		194343	0		=			
ANR	194499	Identifier	lhs		194343	0					
ANR	194500	PrimaryExpression	"""b"""		194343	1					
ANR	194501	ExpressionStatement	"rhs = ""a"""	389:4:9717:9726	194343	20	True				
ANR	194502	AssignmentExpression	"rhs = ""a"""		194343	0		=			
ANR	194503	Identifier	rhs		194343	0					
ANR	194504	PrimaryExpression	"""a"""		194343	1					
ANR	194505	IfStatement	if ( ( lhs == rhs ) != false )		194343	21					
ANR	194506	Condition	( lhs == rhs ) != false	390:8:9736:9756	194343	0	True				
ANR	194507	EqualityExpression	( lhs == rhs ) != false		194343	0		!=			
ANR	194508	EqualityExpression	lhs == rhs		194343	0		==			
ANR	194509	Identifier	lhs		194343	0					
ANR	194510	Identifier	rhs		194343	1					
ANR	194511	Identifier	false		194343	1					
ANR	194512	CompoundStatement		54:31:1023:1023	194343	1					
ANR	194513	ExpressionStatement	FAIL	391:2:9763:9767	194343	0	True				
ANR	194514	Identifier	FAIL		194343	0					
ANR	194515	IfStatement	if ( ( lhs != rhs ) != true )		194343	22					
ANR	194516	Condition	( lhs != rhs ) != true	393:8:9791:9810	194343	0	True				
ANR	194517	EqualityExpression	( lhs != rhs ) != true		194343	0		!=			
ANR	194518	EqualityExpression	lhs != rhs		194343	0		!=			
ANR	194519	Identifier	lhs		194343	0					
ANR	194520	Identifier	rhs		194343	1					
ANR	194521	Identifier	true		194343	1					
ANR	194522	CompoundStatement		57:30:1077:1077	194343	1					
ANR	194523	ExpressionStatement	FAIL	394:2:9817:9821	194343	0	True				
ANR	194524	Identifier	FAIL		194343	0					
ANR	194525	IfStatement	if ( ( lhs < rhs ) != false )		194343	23					
ANR	194526	Condition	( lhs < rhs ) != false	396:8:9845:9864	194343	0	True				
ANR	194527	EqualityExpression	( lhs < rhs ) != false		194343	0		!=			
ANR	194528	RelationalExpression	lhs < rhs		194343	0		<			
ANR	194529	Identifier	lhs		194343	0					
ANR	194530	Identifier	rhs		194343	1					
ANR	194531	Identifier	false		194343	1					
ANR	194532	CompoundStatement		60:30:1131:1131	194343	1					
ANR	194533	ExpressionStatement	FAIL	397:2:9871:9875	194343	0	True				
ANR	194534	Identifier	FAIL		194343	0					
ANR	194535	IfStatement	if ( ( lhs > rhs ) != true )		194343	24					
ANR	194536	Condition	( lhs > rhs ) != true	399:8:9899:9917	194343	0	True				
ANR	194537	EqualityExpression	( lhs > rhs ) != true		194343	0		!=			
ANR	194538	RelationalExpression	lhs > rhs		194343	0		>			
ANR	194539	Identifier	lhs		194343	0					
ANR	194540	Identifier	rhs		194343	1					
ANR	194541	Identifier	true		194343	1					
ANR	194542	CompoundStatement		63:29:1184:1184	194343	1					
ANR	194543	ExpressionStatement	FAIL	400:2:9924:9928	194343	0	True				
ANR	194544	Identifier	FAIL		194343	0					
ANR	194545	IfStatement	if ( ( lhs <= rhs ) != false )		194343	25					
ANR	194546	Condition	( lhs <= rhs ) != false	402:8:9952:9972	194343	0	True				
ANR	194547	EqualityExpression	( lhs <= rhs ) != false		194343	0		!=			
ANR	194548	RelationalExpression	lhs <= rhs		194343	0		<=			
ANR	194549	Identifier	lhs		194343	0					
ANR	194550	Identifier	rhs		194343	1					
ANR	194551	Identifier	false		194343	1					
ANR	194552	CompoundStatement		66:31:1239:1239	194343	1					
ANR	194553	ExpressionStatement	FAIL	403:2:9979:9983	194343	0	True				
ANR	194554	Identifier	FAIL		194343	0					
ANR	194555	IfStatement	if ( ( lhs >= rhs ) != true )		194343	26					
ANR	194556	Condition	( lhs >= rhs ) != true	405:8:10007:10026	194343	0	True				
ANR	194557	EqualityExpression	( lhs >= rhs ) != true		194343	0		!=			
ANR	194558	RelationalExpression	lhs >= rhs		194343	0		>=			
ANR	194559	Identifier	lhs		194343	0					
ANR	194560	Identifier	rhs		194343	1					
ANR	194561	Identifier	true		194343	1					
ANR	194562	CompoundStatement		69:30:1293:1293	194343	1					
ANR	194563	ExpressionStatement	FAIL	406:2:10033:10037	194343	0	True				
ANR	194564	Identifier	FAIL		194343	0					
ANR	194565	ExpressionStatement	PASS	409:1:10055:10059	194343	27	True				
ANR	194566	Identifier	PASS		194343	0					
ANR	194567	ReturnType	static bool		194343	1					
ANR	194568	Identifier	test_comparison_ops_lhs_MyString		194343	2					
ANR	194569	ParameterList			194343	3					
ANR	194570	CFGEntryNode	ENTRY		194343		True				
ANR	194571	CFGExitNode	EXIT		194343		True				
ANR	194572	Symbol	lhs		194343						
ANR	194573	Symbol	true		194343						
ANR	194574	Symbol	false		194343						
ANR	194575	Symbol	rhs		194343						
ANR	194576	Function	test_lower_case_empty	412:0:10064:10365							
ANR	194577	FunctionDef	test_lower_case_empty ()		194576	0					
ANR	194578	CompoundStatement		412:36:10100:10365	194576	0					
ANR	194579	ExpressionStatement	"emit_test ( ""Test lower_case() on an empty std::string."" )"	413:1:10103:10158	194576	0	True				
ANR	194580	CallExpression	"emit_test ( ""Test lower_case() on an empty std::string."" )"		194576	0					
ANR	194581	Callee	emit_test		194576	0					
ANR	194582	Identifier	emit_test		194576	0					
ANR	194583	ArgumentList	"""Test lower_case() on an empty std::string."""		194576	1					
ANR	194584	Argument	"""Test lower_case() on an empty std::string."""		194576	0					
ANR	194585	PrimaryExpression	"""Test lower_case() on an empty std::string."""		194576	0					
ANR	194586	IdentifierDeclStatement	std :: string a ;	414:1:10161:10174	194576	1	True				
ANR	194587	IdentifierDecl	a		194576	0					
ANR	194588	IdentifierDeclType	std :: string		194576	0					
ANR	194589	Identifier	a		194576	1					
ANR	194590	ExpressionStatement	lower_case ( a )	415:1:10177:10190	194576	2	True				
ANR	194591	CallExpression	lower_case ( a )		194576	0					
ANR	194592	Callee	lower_case		194576	0					
ANR	194593	Identifier	lower_case		194576	0					
ANR	194594	ArgumentList	a		194576	1					
ANR	194595	Argument	a		194576	0					
ANR	194596	Identifier	a		194576	0					
ANR	194597	ExpressionStatement	emit_output_expected_header ( )	416:1:10193:10222	194576	3	True				
ANR	194598	CallExpression	emit_output_expected_header ( )		194576	0					
ANR	194599	Callee	emit_output_expected_header		194576	0					
ANR	194600	Identifier	emit_output_expected_header		194576	0					
ANR	194601	ArgumentList			194576	1					
ANR	194602	ExpressionStatement	"emit_retval ( ""%s"" , """" )"	417:1:10225:10246	194576	4	True				
ANR	194603	CallExpression	"emit_retval ( ""%s"" , """" )"		194576	0					
ANR	194604	Callee	emit_retval		194576	0					
ANR	194605	Identifier	emit_retval		194576	0					
ANR	194606	ArgumentList	"""%s"""		194576	1					
ANR	194607	Argument	"""%s"""		194576	0					
ANR	194608	PrimaryExpression	"""%s"""		194576	0					
ANR	194609	Argument	""""""		194576	1					
ANR	194610	PrimaryExpression	""""""		194576	0					
ANR	194611	ExpressionStatement	emit_output_actual_header ( )	418:1:10249:10276	194576	5	True				
ANR	194612	CallExpression	emit_output_actual_header ( )		194576	0					
ANR	194613	Callee	emit_output_actual_header		194576	0					
ANR	194614	Identifier	emit_output_actual_header		194576	0					
ANR	194615	ArgumentList			194576	1					
ANR	194616	ExpressionStatement	"emit_retval ( ""%s"" , a . c_str ( ) )"	419:1:10279:10307	194576	6	True				
ANR	194617	CallExpression	"emit_retval ( ""%s"" , a . c_str ( ) )"		194576	0					
ANR	194618	Callee	emit_retval		194576	0					
ANR	194619	Identifier	emit_retval		194576	0					
ANR	194620	ArgumentList	"""%s"""		194576	1					
ANR	194621	Argument	"""%s"""		194576	0					
ANR	194622	PrimaryExpression	"""%s"""		194576	0					
ANR	194623	Argument	a . c_str ( )		194576	1					
ANR	194624	CallExpression	a . c_str ( )		194576	0					
ANR	194625	Callee	a . c_str		194576	0					
ANR	194626	MemberAccess	a . c_str		194576	0					
ANR	194627	Identifier	a		194576	0					
ANR	194628	Identifier	c_str		194576	1					
ANR	194629	ArgumentList			194576	1					
ANR	194630	IfStatement	"if ( strcmp ( a . c_str ( ) , """" ) != MATCH )"		194576	7					
ANR	194631	Condition	"strcmp ( a . c_str ( ) , """" ) != MATCH"	420:4:10313:10342	194576	0	True				
ANR	194632	EqualityExpression	"strcmp ( a . c_str ( ) , """" ) != MATCH"		194576	0		!=			
ANR	194633	CallExpression	"strcmp ( a . c_str ( ) , """" )"		194576	0					
ANR	194634	Callee	strcmp		194576	0					
ANR	194635	Identifier	strcmp		194576	0					
ANR	194636	ArgumentList	a . c_str ( )		194576	1					
ANR	194637	Argument	a . c_str ( )		194576	0					
ANR	194638	CallExpression	a . c_str ( )		194576	0					
ANR	194639	Callee	a . c_str		194576	0					
ANR	194640	MemberAccess	a . c_str		194576	0					
ANR	194641	Identifier	a		194576	0					
ANR	194642	Identifier	c_str		194576	1					
ANR	194643	ArgumentList			194576	1					
ANR	194644	Argument	""""""		194576	1					
ANR	194645	PrimaryExpression	""""""		194576	0					
ANR	194646	Identifier	MATCH		194576	1					
ANR	194647	CompoundStatement		9:36:244:244	194576	1					
ANR	194648	ExpressionStatement	FAIL	421:2:10349:10353	194576	0	True				
ANR	194649	Identifier	FAIL		194576	0					
ANR	194650	ExpressionStatement	PASS	423:1:10359:10363	194576	8	True				
ANR	194651	Identifier	PASS		194576	0					
ANR	194652	ReturnType	static bool		194576	1					
ANR	194653	Identifier	test_lower_case_empty		194576	2					
ANR	194654	ParameterList			194576	3					
ANR	194655	CFGEntryNode	ENTRY		194576		True				
ANR	194656	CFGExitNode	EXIT		194576		True				
ANR	194657	Symbol	strcmp		194576						
ANR	194658	Symbol	a		194576						
ANR	194659	Symbol	a . c_str		194576						
ANR	194660	Symbol	MATCH		194576						
ANR	194661	Function	test_lower_case_non_empty	426:0:10368:10713							
ANR	194662	FunctionDef	test_lower_case_non_empty ()		194661	0					
ANR	194663	CompoundStatement		426:40:10408:10713	194661	0					
ANR	194664	ExpressionStatement	"emit_test ( ""Test lower_case() on a non-empty std::string."" )"	427:1:10411:10469	194661	0	True				
ANR	194665	CallExpression	"emit_test ( ""Test lower_case() on a non-empty std::string."" )"		194661	0					
ANR	194666	Callee	emit_test		194661	0					
ANR	194667	Identifier	emit_test		194661	0					
ANR	194668	ArgumentList	"""Test lower_case() on a non-empty std::string."""		194661	1					
ANR	194669	Argument	"""Test lower_case() on a non-empty std::string."""		194661	0					
ANR	194670	PrimaryExpression	"""Test lower_case() on a non-empty std::string."""		194661	0					
ANR	194671	IdentifierDeclStatement	"std :: string a ( ""lower UPPER"" ) ;"	428:1:10472:10500	194661	1	True				
ANR	194672	IdentifierDecl	"a ( ""lower UPPER"" )"		194661	0					
ANR	194673	IdentifierDeclType	std :: string		194661	0					
ANR	194674	Identifier	a		194661	1					
ANR	194675	PrimaryExpression	"""lower UPPER"""		194661	2					
ANR	194676	ExpressionStatement	lower_case ( a )	429:1:10503:10516	194661	2	True				
ANR	194677	CallExpression	lower_case ( a )		194661	0					
ANR	194678	Callee	lower_case		194661	0					
ANR	194679	Identifier	lower_case		194661	0					
ANR	194680	ArgumentList	a		194661	1					
ANR	194681	Argument	a		194661	0					
ANR	194682	Identifier	a		194661	0					
ANR	194683	ExpressionStatement	emit_output_expected_header ( )	430:1:10519:10548	194661	3	True				
ANR	194684	CallExpression	emit_output_expected_header ( )		194661	0					
ANR	194685	Callee	emit_output_expected_header		194661	0					
ANR	194686	Identifier	emit_output_expected_header		194661	0					
ANR	194687	ArgumentList			194661	1					
ANR	194688	ExpressionStatement	"emit_retval ( ""%s"" , ""lower upper"" )"	431:1:10551:10583	194661	4	True				
ANR	194689	CallExpression	"emit_retval ( ""%s"" , ""lower upper"" )"		194661	0					
ANR	194690	Callee	emit_retval		194661	0					
ANR	194691	Identifier	emit_retval		194661	0					
ANR	194692	ArgumentList	"""%s"""		194661	1					
ANR	194693	Argument	"""%s"""		194661	0					
ANR	194694	PrimaryExpression	"""%s"""		194661	0					
ANR	194695	Argument	"""lower upper"""		194661	1					
ANR	194696	PrimaryExpression	"""lower upper"""		194661	0					
ANR	194697	ExpressionStatement	emit_output_actual_header ( )	432:1:10586:10613	194661	5	True				
ANR	194698	CallExpression	emit_output_actual_header ( )		194661	0					
ANR	194699	Callee	emit_output_actual_header		194661	0					
ANR	194700	Identifier	emit_output_actual_header		194661	0					
ANR	194701	ArgumentList			194661	1					
ANR	194702	ExpressionStatement	"emit_retval ( ""%s"" , a . c_str ( ) )"	433:1:10616:10644	194661	6	True				
ANR	194703	CallExpression	"emit_retval ( ""%s"" , a . c_str ( ) )"		194661	0					
ANR	194704	Callee	emit_retval		194661	0					
ANR	194705	Identifier	emit_retval		194661	0					
ANR	194706	ArgumentList	"""%s"""		194661	1					
ANR	194707	Argument	"""%s"""		194661	0					
ANR	194708	PrimaryExpression	"""%s"""		194661	0					
ANR	194709	Argument	a . c_str ( )		194661	1					
ANR	194710	CallExpression	a . c_str ( )		194661	0					
ANR	194711	Callee	a . c_str		194661	0					
ANR	194712	MemberAccess	a . c_str		194661	0					
ANR	194713	Identifier	a		194661	0					
ANR	194714	Identifier	c_str		194661	1					
ANR	194715	ArgumentList			194661	1					
ANR	194716	IfStatement	"if ( strcmp ( a . c_str ( ) , ""lower upper"" ) != MATCH )"		194661	7					
ANR	194717	Condition	"strcmp ( a . c_str ( ) , ""lower upper"" ) != MATCH"	434:4:10650:10690	194661	0	True				
ANR	194718	EqualityExpression	"strcmp ( a . c_str ( ) , ""lower upper"" ) != MATCH"		194661	0		!=			
ANR	194719	CallExpression	"strcmp ( a . c_str ( ) , ""lower upper"" )"		194661	0					
ANR	194720	Callee	strcmp		194661	0					
ANR	194721	Identifier	strcmp		194661	0					
ANR	194722	ArgumentList	a . c_str ( )		194661	1					
ANR	194723	Argument	a . c_str ( )		194661	0					
ANR	194724	CallExpression	a . c_str ( )		194661	0					
ANR	194725	Callee	a . c_str		194661	0					
ANR	194726	MemberAccess	a . c_str		194661	0					
ANR	194727	Identifier	a		194661	0					
ANR	194728	Identifier	c_str		194661	1					
ANR	194729	ArgumentList			194661	1					
ANR	194730	Argument	"""lower upper"""		194661	1					
ANR	194731	PrimaryExpression	"""lower upper"""		194661	0					
ANR	194732	Identifier	MATCH		194661	1					
ANR	194733	CompoundStatement		9:47:284:284	194661	1					
ANR	194734	ExpressionStatement	FAIL	435:2:10697:10701	194661	0	True				
ANR	194735	Identifier	FAIL		194661	0					
ANR	194736	ExpressionStatement	PASS	437:1:10707:10711	194661	8	True				
ANR	194737	Identifier	PASS		194661	0					
ANR	194738	ReturnType	static bool		194661	1					
ANR	194739	Identifier	test_lower_case_non_empty		194661	2					
ANR	194740	ParameterList			194661	3					
ANR	194741	CFGEntryNode	ENTRY		194661		True				
ANR	194742	CFGExitNode	EXIT		194661		True				
ANR	194743	Symbol	strcmp		194661						
ANR	194744	Symbol	a		194661						
ANR	194745	Symbol	a . c_str		194661						
ANR	194746	Symbol	MATCH		194661						
ANR	194747	Function	test_upper_case_empty	440:0:10716:11017							
ANR	194748	FunctionDef	test_upper_case_empty ()		194747	0					
ANR	194749	CompoundStatement		440:36:10752:11017	194747	0					
ANR	194750	ExpressionStatement	"emit_test ( ""Test upper_case() on an empty std::string."" )"	441:1:10755:10810	194747	0	True				
ANR	194751	CallExpression	"emit_test ( ""Test upper_case() on an empty std::string."" )"		194747	0					
ANR	194752	Callee	emit_test		194747	0					
ANR	194753	Identifier	emit_test		194747	0					
ANR	194754	ArgumentList	"""Test upper_case() on an empty std::string."""		194747	1					
ANR	194755	Argument	"""Test upper_case() on an empty std::string."""		194747	0					
ANR	194756	PrimaryExpression	"""Test upper_case() on an empty std::string."""		194747	0					
ANR	194757	IdentifierDeclStatement	std :: string a ;	442:1:10813:10826	194747	1	True				
ANR	194758	IdentifierDecl	a		194747	0					
ANR	194759	IdentifierDeclType	std :: string		194747	0					
ANR	194760	Identifier	a		194747	1					
ANR	194761	ExpressionStatement	upper_case ( a )	443:1:10829:10842	194747	2	True				
ANR	194762	CallExpression	upper_case ( a )		194747	0					
ANR	194763	Callee	upper_case		194747	0					
ANR	194764	Identifier	upper_case		194747	0					
ANR	194765	ArgumentList	a		194747	1					
ANR	194766	Argument	a		194747	0					
ANR	194767	Identifier	a		194747	0					
ANR	194768	ExpressionStatement	emit_output_expected_header ( )	444:1:10845:10874	194747	3	True				
ANR	194769	CallExpression	emit_output_expected_header ( )		194747	0					
ANR	194770	Callee	emit_output_expected_header		194747	0					
ANR	194771	Identifier	emit_output_expected_header		194747	0					
ANR	194772	ArgumentList			194747	1					
ANR	194773	ExpressionStatement	"emit_retval ( ""%s"" , """" )"	445:1:10877:10898	194747	4	True				
ANR	194774	CallExpression	"emit_retval ( ""%s"" , """" )"		194747	0					
ANR	194775	Callee	emit_retval		194747	0					
ANR	194776	Identifier	emit_retval		194747	0					
ANR	194777	ArgumentList	"""%s"""		194747	1					
ANR	194778	Argument	"""%s"""		194747	0					
ANR	194779	PrimaryExpression	"""%s"""		194747	0					
ANR	194780	Argument	""""""		194747	1					
ANR	194781	PrimaryExpression	""""""		194747	0					
ANR	194782	ExpressionStatement	emit_output_actual_header ( )	446:1:10901:10928	194747	5	True				
ANR	194783	CallExpression	emit_output_actual_header ( )		194747	0					
ANR	194784	Callee	emit_output_actual_header		194747	0					
ANR	194785	Identifier	emit_output_actual_header		194747	0					
ANR	194786	ArgumentList			194747	1					
ANR	194787	ExpressionStatement	"emit_retval ( ""%s"" , a . c_str ( ) )"	447:1:10931:10959	194747	6	True				
ANR	194788	CallExpression	"emit_retval ( ""%s"" , a . c_str ( ) )"		194747	0					
ANR	194789	Callee	emit_retval		194747	0					
ANR	194790	Identifier	emit_retval		194747	0					
ANR	194791	ArgumentList	"""%s"""		194747	1					
ANR	194792	Argument	"""%s"""		194747	0					
ANR	194793	PrimaryExpression	"""%s"""		194747	0					
ANR	194794	Argument	a . c_str ( )		194747	1					
ANR	194795	CallExpression	a . c_str ( )		194747	0					
ANR	194796	Callee	a . c_str		194747	0					
ANR	194797	MemberAccess	a . c_str		194747	0					
ANR	194798	Identifier	a		194747	0					
ANR	194799	Identifier	c_str		194747	1					
ANR	194800	ArgumentList			194747	1					
ANR	194801	IfStatement	"if ( strcmp ( a . c_str ( ) , """" ) != MATCH )"		194747	7					
ANR	194802	Condition	"strcmp ( a . c_str ( ) , """" ) != MATCH"	448:4:10965:10994	194747	0	True				
ANR	194803	EqualityExpression	"strcmp ( a . c_str ( ) , """" ) != MATCH"		194747	0		!=			
ANR	194804	CallExpression	"strcmp ( a . c_str ( ) , """" )"		194747	0					
ANR	194805	Callee	strcmp		194747	0					
ANR	194806	Identifier	strcmp		194747	0					
ANR	194807	ArgumentList	a . c_str ( )		194747	1					
ANR	194808	Argument	a . c_str ( )		194747	0					
ANR	194809	CallExpression	a . c_str ( )		194747	0					
ANR	194810	Callee	a . c_str		194747	0					
ANR	194811	MemberAccess	a . c_str		194747	0					
ANR	194812	Identifier	a		194747	0					
ANR	194813	Identifier	c_str		194747	1					
ANR	194814	ArgumentList			194747	1					
ANR	194815	Argument	""""""		194747	1					
ANR	194816	PrimaryExpression	""""""		194747	0					
ANR	194817	Identifier	MATCH		194747	1					
ANR	194818	CompoundStatement		9:36:244:244	194747	1					
ANR	194819	ExpressionStatement	FAIL	449:2:11001:11005	194747	0	True				
ANR	194820	Identifier	FAIL		194747	0					
ANR	194821	ExpressionStatement	PASS	451:1:11011:11015	194747	8	True				
ANR	194822	Identifier	PASS		194747	0					
ANR	194823	ReturnType	static bool		194747	1					
ANR	194824	Identifier	test_upper_case_empty		194747	2					
ANR	194825	ParameterList			194747	3					
ANR	194826	CFGEntryNode	ENTRY		194747		True				
ANR	194827	CFGExitNode	EXIT		194747		True				
ANR	194828	Symbol	strcmp		194747						
ANR	194829	Symbol	a		194747						
ANR	194830	Symbol	a . c_str		194747						
ANR	194831	Symbol	MATCH		194747						
ANR	194832	Function	test_upper_case_non_empty	454:0:11020:11365							
ANR	194833	FunctionDef	test_upper_case_non_empty ()		194832	0					
ANR	194834	CompoundStatement		454:40:11060:11365	194832	0					
ANR	194835	ExpressionStatement	"emit_test ( ""Test upper_case() on a non-empty std::string."" )"	455:1:11063:11121	194832	0	True				
ANR	194836	CallExpression	"emit_test ( ""Test upper_case() on a non-empty std::string."" )"		194832	0					
ANR	194837	Callee	emit_test		194832	0					
ANR	194838	Identifier	emit_test		194832	0					
ANR	194839	ArgumentList	"""Test upper_case() on a non-empty std::string."""		194832	1					
ANR	194840	Argument	"""Test upper_case() on a non-empty std::string."""		194832	0					
ANR	194841	PrimaryExpression	"""Test upper_case() on a non-empty std::string."""		194832	0					
ANR	194842	IdentifierDeclStatement	"std :: string a ( ""lower UPPER"" ) ;"	456:1:11124:11152	194832	1	True				
ANR	194843	IdentifierDecl	"a ( ""lower UPPER"" )"		194832	0					
ANR	194844	IdentifierDeclType	std :: string		194832	0					
ANR	194845	Identifier	a		194832	1					
ANR	194846	PrimaryExpression	"""lower UPPER"""		194832	2					
ANR	194847	ExpressionStatement	upper_case ( a )	457:1:11155:11168	194832	2	True				
ANR	194848	CallExpression	upper_case ( a )		194832	0					
ANR	194849	Callee	upper_case		194832	0					
ANR	194850	Identifier	upper_case		194832	0					
ANR	194851	ArgumentList	a		194832	1					
ANR	194852	Argument	a		194832	0					
ANR	194853	Identifier	a		194832	0					
ANR	194854	ExpressionStatement	emit_output_expected_header ( )	458:1:11171:11200	194832	3	True				
ANR	194855	CallExpression	emit_output_expected_header ( )		194832	0					
ANR	194856	Callee	emit_output_expected_header		194832	0					
ANR	194857	Identifier	emit_output_expected_header		194832	0					
ANR	194858	ArgumentList			194832	1					
ANR	194859	ExpressionStatement	"emit_retval ( ""%s"" , ""LOWER UPPER"" )"	459:1:11203:11235	194832	4	True				
ANR	194860	CallExpression	"emit_retval ( ""%s"" , ""LOWER UPPER"" )"		194832	0					
ANR	194861	Callee	emit_retval		194832	0					
ANR	194862	Identifier	emit_retval		194832	0					
ANR	194863	ArgumentList	"""%s"""		194832	1					
ANR	194864	Argument	"""%s"""		194832	0					
ANR	194865	PrimaryExpression	"""%s"""		194832	0					
ANR	194866	Argument	"""LOWER UPPER"""		194832	1					
ANR	194867	PrimaryExpression	"""LOWER UPPER"""		194832	0					
ANR	194868	ExpressionStatement	emit_output_actual_header ( )	460:1:11238:11265	194832	5	True				
ANR	194869	CallExpression	emit_output_actual_header ( )		194832	0					
ANR	194870	Callee	emit_output_actual_header		194832	0					
ANR	194871	Identifier	emit_output_actual_header		194832	0					
ANR	194872	ArgumentList			194832	1					
ANR	194873	ExpressionStatement	"emit_retval ( ""%s"" , a . c_str ( ) )"	461:1:11268:11296	194832	6	True				
ANR	194874	CallExpression	"emit_retval ( ""%s"" , a . c_str ( ) )"		194832	0					
ANR	194875	Callee	emit_retval		194832	0					
ANR	194876	Identifier	emit_retval		194832	0					
ANR	194877	ArgumentList	"""%s"""		194832	1					
ANR	194878	Argument	"""%s"""		194832	0					
ANR	194879	PrimaryExpression	"""%s"""		194832	0					
ANR	194880	Argument	a . c_str ( )		194832	1					
ANR	194881	CallExpression	a . c_str ( )		194832	0					
ANR	194882	Callee	a . c_str		194832	0					
ANR	194883	MemberAccess	a . c_str		194832	0					
ANR	194884	Identifier	a		194832	0					
ANR	194885	Identifier	c_str		194832	1					
ANR	194886	ArgumentList			194832	1					
ANR	194887	IfStatement	"if ( strcmp ( a . c_str ( ) , ""LOWER UPPER"" ) != MATCH )"		194832	7					
ANR	194888	Condition	"strcmp ( a . c_str ( ) , ""LOWER UPPER"" ) != MATCH"	462:4:11302:11342	194832	0	True				
ANR	194889	EqualityExpression	"strcmp ( a . c_str ( ) , ""LOWER UPPER"" ) != MATCH"		194832	0		!=			
ANR	194890	CallExpression	"strcmp ( a . c_str ( ) , ""LOWER UPPER"" )"		194832	0					
ANR	194891	Callee	strcmp		194832	0					
ANR	194892	Identifier	strcmp		194832	0					
ANR	194893	ArgumentList	a . c_str ( )		194832	1					
ANR	194894	Argument	a . c_str ( )		194832	0					
ANR	194895	CallExpression	a . c_str ( )		194832	0					
ANR	194896	Callee	a . c_str		194832	0					
ANR	194897	MemberAccess	a . c_str		194832	0					
ANR	194898	Identifier	a		194832	0					
ANR	194899	Identifier	c_str		194832	1					
ANR	194900	ArgumentList			194832	1					
ANR	194901	Argument	"""LOWER UPPER"""		194832	1					
ANR	194902	PrimaryExpression	"""LOWER UPPER"""		194832	0					
ANR	194903	Identifier	MATCH		194832	1					
ANR	194904	CompoundStatement		9:47:284:284	194832	1					
ANR	194905	ExpressionStatement	FAIL	463:2:11349:11353	194832	0	True				
ANR	194906	Identifier	FAIL		194832	0					
ANR	194907	ExpressionStatement	PASS	465:1:11359:11363	194832	8	True				
ANR	194908	Identifier	PASS		194832	0					
ANR	194909	ReturnType	static bool		194832	1					
ANR	194910	Identifier	test_upper_case_non_empty		194832	2					
ANR	194911	ParameterList			194832	3					
ANR	194912	CFGEntryNode	ENTRY		194832		True				
ANR	194913	CFGExitNode	EXIT		194832		True				
ANR	194914	Symbol	strcmp		194832						
ANR	194915	Symbol	a		194832						
ANR	194916	Symbol	a . c_str		194832						
ANR	194917	Symbol	MATCH		194832						
ANR	194918	Function	test_chomp_new_line_end	468:0:11368:11727							
ANR	194919	FunctionDef	test_chomp_new_line_end ()		194918	0					
ANR	194920	CompoundStatement		468:38:11406:11727	194918	0					
ANR	194921	Statement	emit_test	469:1:11409:11417	194918	0	True				
ANR	194922	Statement	(	469:10:11418:11418	194918	1	True				
ANR	194923	Statement	"""Does chomp() remove the newLine if its the last character in """	469:11:11419:11481	194918	2	True				
ANR	194924	Statement	"""the std::string?"""	470:2:11485:11502	194918	3	True				
ANR	194925	Statement	)	470:20:11503:11503	194918	4	True				
ANR	194926	ExpressionStatement		470:21:11504:11504	194918	5	True				
ANR	194927	IdentifierDeclStatement	"std :: string a ( ""stuff\\n"" ) ;"	471:1:11507:11531	194918	6	True				
ANR	194928	IdentifierDecl	"a ( ""stuff\\n"" )"		194918	0					
ANR	194929	IdentifierDeclType	std :: string		194918	0					
ANR	194930	Identifier	a		194918	1					
ANR	194931	PrimaryExpression	"""stuff\\n"""		194918	2					
ANR	194932	ExpressionStatement	chomp ( a )	472:1:11534:11542	194918	7	True				
ANR	194933	CallExpression	chomp ( a )		194918	0					
ANR	194934	Callee	chomp		194918	0					
ANR	194935	Identifier	chomp		194918	0					
ANR	194936	ArgumentList	a		194918	1					
ANR	194937	Argument	a		194918	0					
ANR	194938	Identifier	a		194918	0					
ANR	194939	ExpressionStatement	emit_output_expected_header ( )	473:1:11545:11574	194918	8	True				
ANR	194940	CallExpression	emit_output_expected_header ( )		194918	0					
ANR	194941	Callee	emit_output_expected_header		194918	0					
ANR	194942	Identifier	emit_output_expected_header		194918	0					
ANR	194943	ArgumentList			194918	1					
ANR	194944	ExpressionStatement	"emit_retval ( ""%s"" , ""stuff"" )"	474:1:11577:11603	194918	9	True				
ANR	194945	CallExpression	"emit_retval ( ""%s"" , ""stuff"" )"		194918	0					
ANR	194946	Callee	emit_retval		194918	0					
ANR	194947	Identifier	emit_retval		194918	0					
ANR	194948	ArgumentList	"""%s"""		194918	1					
ANR	194949	Argument	"""%s"""		194918	0					
ANR	194950	PrimaryExpression	"""%s"""		194918	0					
ANR	194951	Argument	"""stuff"""		194918	1					
ANR	194952	PrimaryExpression	"""stuff"""		194918	0					
ANR	194953	ExpressionStatement	emit_output_actual_header ( )	475:1:11606:11633	194918	10	True				
ANR	194954	CallExpression	emit_output_actual_header ( )		194918	0					
ANR	194955	Callee	emit_output_actual_header		194918	0					
ANR	194956	Identifier	emit_output_actual_header		194918	0					
ANR	194957	ArgumentList			194918	1					
ANR	194958	ExpressionStatement	"emit_retval ( ""%s"" , a . c_str ( ) )"	476:1:11636:11664	194918	11	True				
ANR	194959	CallExpression	"emit_retval ( ""%s"" , a . c_str ( ) )"		194918	0					
ANR	194960	Callee	emit_retval		194918	0					
ANR	194961	Identifier	emit_retval		194918	0					
ANR	194962	ArgumentList	"""%s"""		194918	1					
ANR	194963	Argument	"""%s"""		194918	0					
ANR	194964	PrimaryExpression	"""%s"""		194918	0					
ANR	194965	Argument	a . c_str ( )		194918	1					
ANR	194966	CallExpression	a . c_str ( )		194918	0					
ANR	194967	Callee	a . c_str		194918	0					
ANR	194968	MemberAccess	a . c_str		194918	0					
ANR	194969	Identifier	a		194918	0					
ANR	194970	Identifier	c_str		194918	1					
ANR	194971	ArgumentList			194918	1					
ANR	194972	IfStatement	"if ( strcmp ( a . c_str ( ) , ""stuff"" ) != MATCH )"		194918	12					
ANR	194973	Condition	"strcmp ( a . c_str ( ) , ""stuff"" ) != MATCH"	477:4:11670:11704	194918	0	True				
ANR	194974	EqualityExpression	"strcmp ( a . c_str ( ) , ""stuff"" ) != MATCH"		194918	0		!=			
ANR	194975	CallExpression	"strcmp ( a . c_str ( ) , ""stuff"" )"		194918	0					
ANR	194976	Callee	strcmp		194918	0					
ANR	194977	Identifier	strcmp		194918	0					
ANR	194978	ArgumentList	a . c_str ( )		194918	1					
ANR	194979	Argument	a . c_str ( )		194918	0					
ANR	194980	CallExpression	a . c_str ( )		194918	0					
ANR	194981	Callee	a . c_str		194918	0					
ANR	194982	MemberAccess	a . c_str		194918	0					
ANR	194983	Identifier	a		194918	0					
ANR	194984	Identifier	c_str		194918	1					
ANR	194985	ArgumentList			194918	1					
ANR	194986	Argument	"""stuff"""		194918	1					
ANR	194987	PrimaryExpression	"""stuff"""		194918	0					
ANR	194988	Identifier	MATCH		194918	1					
ANR	194989	CompoundStatement		10:41:300:300	194918	1					
ANR	194990	ExpressionStatement	FAIL	478:2:11711:11715	194918	0	True				
ANR	194991	Identifier	FAIL		194918	0					
ANR	194992	ExpressionStatement	PASS	480:1:11721:11725	194918	13	True				
ANR	194993	Identifier	PASS		194918	0					
ANR	194994	ReturnType	static bool		194918	1					
ANR	194995	Identifier	test_chomp_new_line_end		194918	2					
ANR	194996	ParameterList			194918	3					
ANR	194997	CFGEntryNode	ENTRY		194918		True				
ANR	194998	CFGExitNode	EXIT		194918		True				
ANR	194999	Symbol	strcmp		194918						
ANR	195000	Symbol	a		194918						
ANR	195001	Symbol	a . c_str		194918						
ANR	195002	Symbol	MATCH		194918						
ANR	195003	Function	test_chomp_crlf_end	483:0:11730:12091							
ANR	195004	FunctionDef	test_chomp_crlf_end ()		195003	0					
ANR	195005	CompoundStatement		483:34:11764:12091	195003	0					
ANR	195006	Statement	emit_test	484:1:11767:11775	195003	0	True				
ANR	195007	Statement	(	484:10:11776:11776	195003	1	True				
ANR	195008	Statement	"""Does chomp() remove CR and LF if they are the last characters"""	484:11:11777:11839	195003	2	True				
ANR	195009	Statement	""" in the std::string?"""	485:2:11843:11864	195003	3	True				
ANR	195010	Statement	)	485:24:11865:11865	195003	4	True				
ANR	195011	ExpressionStatement		485:25:11866:11866	195003	5	True				
ANR	195012	IdentifierDeclStatement	"std :: string a ( ""stuff\\r\\n"" ) ;"	486:1:11869:11895	195003	6	True				
ANR	195013	IdentifierDecl	"a ( ""stuff\\r\\n"" )"		195003	0					
ANR	195014	IdentifierDeclType	std :: string		195003	0					
ANR	195015	Identifier	a		195003	1					
ANR	195016	PrimaryExpression	"""stuff\\r\\n"""		195003	2					
ANR	195017	ExpressionStatement	chomp ( a )	487:1:11898:11906	195003	7	True				
ANR	195018	CallExpression	chomp ( a )		195003	0					
ANR	195019	Callee	chomp		195003	0					
ANR	195020	Identifier	chomp		195003	0					
ANR	195021	ArgumentList	a		195003	1					
ANR	195022	Argument	a		195003	0					
ANR	195023	Identifier	a		195003	0					
ANR	195024	ExpressionStatement	emit_output_expected_header ( )	488:1:11909:11938	195003	8	True				
ANR	195025	CallExpression	emit_output_expected_header ( )		195003	0					
ANR	195026	Callee	emit_output_expected_header		195003	0					
ANR	195027	Identifier	emit_output_expected_header		195003	0					
ANR	195028	ArgumentList			195003	1					
ANR	195029	ExpressionStatement	"emit_retval ( ""%s"" , ""stuff"" )"	489:1:11941:11967	195003	9	True				
ANR	195030	CallExpression	"emit_retval ( ""%s"" , ""stuff"" )"		195003	0					
ANR	195031	Callee	emit_retval		195003	0					
ANR	195032	Identifier	emit_retval		195003	0					
ANR	195033	ArgumentList	"""%s"""		195003	1					
ANR	195034	Argument	"""%s"""		195003	0					
ANR	195035	PrimaryExpression	"""%s"""		195003	0					
ANR	195036	Argument	"""stuff"""		195003	1					
ANR	195037	PrimaryExpression	"""stuff"""		195003	0					
ANR	195038	ExpressionStatement	emit_output_actual_header ( )	490:1:11970:11997	195003	10	True				
ANR	195039	CallExpression	emit_output_actual_header ( )		195003	0					
ANR	195040	Callee	emit_output_actual_header		195003	0					
ANR	195041	Identifier	emit_output_actual_header		195003	0					
ANR	195042	ArgumentList			195003	1					
ANR	195043	ExpressionStatement	"emit_retval ( ""%s"" , a . c_str ( ) )"	491:1:12000:12028	195003	11	True				
ANR	195044	CallExpression	"emit_retval ( ""%s"" , a . c_str ( ) )"		195003	0					
ANR	195045	Callee	emit_retval		195003	0					
ANR	195046	Identifier	emit_retval		195003	0					
ANR	195047	ArgumentList	"""%s"""		195003	1					
ANR	195048	Argument	"""%s"""		195003	0					
ANR	195049	PrimaryExpression	"""%s"""		195003	0					
ANR	195050	Argument	a . c_str ( )		195003	1					
ANR	195051	CallExpression	a . c_str ( )		195003	0					
ANR	195052	Callee	a . c_str		195003	0					
ANR	195053	MemberAccess	a . c_str		195003	0					
ANR	195054	Identifier	a		195003	0					
ANR	195055	Identifier	c_str		195003	1					
ANR	195056	ArgumentList			195003	1					
ANR	195057	IfStatement	"if ( strcmp ( a . c_str ( ) , ""stuff"" ) != MATCH )"		195003	12					
ANR	195058	Condition	"strcmp ( a . c_str ( ) , ""stuff"" ) != MATCH"	492:4:12034:12068	195003	0	True				
ANR	195059	EqualityExpression	"strcmp ( a . c_str ( ) , ""stuff"" ) != MATCH"		195003	0		!=			
ANR	195060	CallExpression	"strcmp ( a . c_str ( ) , ""stuff"" )"		195003	0					
ANR	195061	Callee	strcmp		195003	0					
ANR	195062	Identifier	strcmp		195003	0					
ANR	195063	ArgumentList	a . c_str ( )		195003	1					
ANR	195064	Argument	a . c_str ( )		195003	0					
ANR	195065	CallExpression	a . c_str ( )		195003	0					
ANR	195066	Callee	a . c_str		195003	0					
ANR	195067	MemberAccess	a . c_str		195003	0					
ANR	195068	Identifier	a		195003	0					
ANR	195069	Identifier	c_str		195003	1					
ANR	195070	ArgumentList			195003	1					
ANR	195071	Argument	"""stuff"""		195003	1					
ANR	195072	PrimaryExpression	"""stuff"""		195003	0					
ANR	195073	Identifier	MATCH		195003	1					
ANR	195074	CompoundStatement		10:41:306:306	195003	1					
ANR	195075	ExpressionStatement	FAIL	493:2:12075:12079	195003	0	True				
ANR	195076	Identifier	FAIL		195003	0					
ANR	195077	ExpressionStatement	PASS	495:1:12085:12089	195003	13	True				
ANR	195078	Identifier	PASS		195003	0					
ANR	195079	ReturnType	static bool		195003	1					
ANR	195080	Identifier	test_chomp_crlf_end		195003	2					
ANR	195081	ParameterList			195003	3					
ANR	195082	CFGEntryNode	ENTRY		195003		True				
ANR	195083	CFGExitNode	EXIT		195003		True				
ANR	195084	Symbol	strcmp		195003						
ANR	195085	Symbol	a		195003						
ANR	195086	Symbol	a . c_str		195003						
ANR	195087	Symbol	MATCH		195003						
ANR	195088	Function	test_chomp_new_line_beginning	498:0:12094:12505							
ANR	195089	FunctionDef	test_chomp_new_line_beginning ()		195088	0					
ANR	195090	CompoundStatement		498:44:12138:12505	195088	0					
ANR	195091	Statement	emit_test	499:1:12141:12149	195088	0	True				
ANR	195092	Statement	(	499:10:12150:12150	195088	1	True				
ANR	195093	Statement	"""Does chomp() do nothing if the newLine if it's not the last """	499:11:12151:12212	195088	2	True				
ANR	195094	Statement	"""character in the std::string?"""	500:2:12216:12246	195088	3	True				
ANR	195095	Statement	)	500:33:12247:12247	195088	4	True				
ANR	195096	ExpressionStatement		500:34:12248:12248	195088	5	True				
ANR	195097	IdentifierDeclStatement	"std :: string a ( ""stuff\\nmore stuff"" ) ;"	501:1:12251:12285	195088	6	True				
ANR	195098	IdentifierDecl	"a ( ""stuff\\nmore stuff"" )"		195088	0					
ANR	195099	IdentifierDeclType	std :: string		195088	0					
ANR	195100	Identifier	a		195088	1					
ANR	195101	PrimaryExpression	"""stuff\\nmore stuff"""		195088	2					
ANR	195102	ExpressionStatement	chomp ( a )	502:1:12288:12296	195088	7	True				
ANR	195103	CallExpression	chomp ( a )		195088	0					
ANR	195104	Callee	chomp		195088	0					
ANR	195105	Identifier	chomp		195088	0					
ANR	195106	ArgumentList	a		195088	1					
ANR	195107	Argument	a		195088	0					
ANR	195108	Identifier	a		195088	0					
ANR	195109	ExpressionStatement	emit_output_expected_header ( )	503:1:12299:12328	195088	8	True				
ANR	195110	CallExpression	emit_output_expected_header ( )		195088	0					
ANR	195111	Callee	emit_output_expected_header		195088	0					
ANR	195112	Identifier	emit_output_expected_header		195088	0					
ANR	195113	ArgumentList			195088	1					
ANR	195114	ExpressionStatement	"emit_retval ( ""%s"" , ""stuff\\nmore stuff"" )"	504:1:12331:12369	195088	9	True				
ANR	195115	CallExpression	"emit_retval ( ""%s"" , ""stuff\\nmore stuff"" )"		195088	0					
ANR	195116	Callee	emit_retval		195088	0					
ANR	195117	Identifier	emit_retval		195088	0					
ANR	195118	ArgumentList	"""%s"""		195088	1					
ANR	195119	Argument	"""%s"""		195088	0					
ANR	195120	PrimaryExpression	"""%s"""		195088	0					
ANR	195121	Argument	"""stuff\\nmore stuff"""		195088	1					
ANR	195122	PrimaryExpression	"""stuff\\nmore stuff"""		195088	0					
ANR	195123	ExpressionStatement	emit_output_actual_header ( )	505:1:12372:12399	195088	10	True				
ANR	195124	CallExpression	emit_output_actual_header ( )		195088	0					
ANR	195125	Callee	emit_output_actual_header		195088	0					
ANR	195126	Identifier	emit_output_actual_header		195088	0					
ANR	195127	ArgumentList			195088	1					
ANR	195128	ExpressionStatement	"emit_retval ( ""%s"" , a . c_str ( ) )"	506:1:12402:12430	195088	11	True				
ANR	195129	CallExpression	"emit_retval ( ""%s"" , a . c_str ( ) )"		195088	0					
ANR	195130	Callee	emit_retval		195088	0					
ANR	195131	Identifier	emit_retval		195088	0					
ANR	195132	ArgumentList	"""%s"""		195088	1					
ANR	195133	Argument	"""%s"""		195088	0					
ANR	195134	PrimaryExpression	"""%s"""		195088	0					
ANR	195135	Argument	a . c_str ( )		195088	1					
ANR	195136	CallExpression	a . c_str ( )		195088	0					
ANR	195137	Callee	a . c_str		195088	0					
ANR	195138	MemberAccess	a . c_str		195088	0					
ANR	195139	Identifier	a		195088	0					
ANR	195140	Identifier	c_str		195088	1					
ANR	195141	ArgumentList			195088	1					
ANR	195142	IfStatement	"if ( strcmp ( a . c_str ( ) , ""stuff\\nmore stuff"" ) != MATCH )"		195088	12					
ANR	195143	Condition	"strcmp ( a . c_str ( ) , ""stuff\\nmore stuff"" ) != MATCH"	507:4:12436:12482	195088	0	True				
ANR	195144	EqualityExpression	"strcmp ( a . c_str ( ) , ""stuff\\nmore stuff"" ) != MATCH"		195088	0		!=			
ANR	195145	CallExpression	"strcmp ( a . c_str ( ) , ""stuff\\nmore stuff"" )"		195088	0					
ANR	195146	Callee	strcmp		195088	0					
ANR	195147	Identifier	strcmp		195088	0					
ANR	195148	ArgumentList	a . c_str ( )		195088	1					
ANR	195149	Argument	a . c_str ( )		195088	0					
ANR	195150	CallExpression	a . c_str ( )		195088	0					
ANR	195151	Callee	a . c_str		195088	0					
ANR	195152	MemberAccess	a . c_str		195088	0					
ANR	195153	Identifier	a		195088	0					
ANR	195154	Identifier	c_str		195088	1					
ANR	195155	ArgumentList			195088	1					
ANR	195156	Argument	"""stuff\\nmore stuff"""		195088	1					
ANR	195157	PrimaryExpression	"""stuff\\nmore stuff"""		195088	0					
ANR	195158	Identifier	MATCH		195088	1					
ANR	195159	CompoundStatement		10:53:346:346	195088	1					
ANR	195160	ExpressionStatement	FAIL	508:2:12489:12493	195088	0	True				
ANR	195161	Identifier	FAIL		195088	0					
ANR	195162	ExpressionStatement	PASS	510:1:12499:12503	195088	13	True				
ANR	195163	Identifier	PASS		195088	0					
ANR	195164	ReturnType	static bool		195088	1					
ANR	195165	Identifier	test_chomp_new_line_beginning		195088	2					
ANR	195166	ParameterList			195088	3					
ANR	195167	CFGEntryNode	ENTRY		195088		True				
ANR	195168	CFGExitNode	EXIT		195088		True				
ANR	195169	Symbol	strcmp		195088						
ANR	195170	Symbol	a		195088						
ANR	195171	Symbol	a . c_str		195088						
ANR	195172	Symbol	MATCH		195088						
ANR	195173	Function	test_chomp_return_false	513:0:12508:12832							
ANR	195174	FunctionDef	test_chomp_return_false ()		195173	0					
ANR	195175	CompoundStatement		513:38:12546:12832	195173	0					
ANR	195176	Statement	emit_test	514:1:12549:12557	195173	0	True				
ANR	195177	Statement	(	514:10:12558:12558	195173	1	True				
ANR	195178	Statement	"""Does chomp() return false if the std::string doesn't have a """	514:11:12559:12620	195173	2	True				
ANR	195179	Statement	"""newLine?"""	515:2:12624:12633	195173	3	True				
ANR	195180	Statement	)	515:12:12634:12634	195173	4	True				
ANR	195181	ExpressionStatement		515:13:12635:12635	195173	5	True				
ANR	195182	IdentifierDeclStatement	"std :: string a ( ""stuff"" ) ;"	516:1:12638:12660	195173	6	True				
ANR	195183	IdentifierDecl	"a ( ""stuff"" )"		195173	0					
ANR	195184	IdentifierDeclType	std :: string		195173	0					
ANR	195185	Identifier	a		195173	1					
ANR	195186	PrimaryExpression	"""stuff"""		195173	2					
ANR	195187	IdentifierDeclStatement	bool result = chomp ( a ) ;	517:1:12663:12685	195173	7	True				
ANR	195188	IdentifierDecl	result = chomp ( a )		195173	0					
ANR	195189	IdentifierDeclType	bool		195173	0					
ANR	195190	Identifier	result		195173	1					
ANR	195191	AssignmentExpression	result = chomp ( a )		195173	2		=			
ANR	195192	Identifier	result		195173	0					
ANR	195193	CallExpression	chomp ( a )		195173	1					
ANR	195194	Callee	chomp		195173	0					
ANR	195195	Identifier	chomp		195173	0					
ANR	195196	ArgumentList	a		195173	1					
ANR	195197	Argument	a		195173	0					
ANR	195198	Identifier	a		195173	0					
ANR	195199	ExpressionStatement	emit_output_expected_header ( )	518:1:12688:12717	195173	8	True				
ANR	195200	CallExpression	emit_output_expected_header ( )		195173	0					
ANR	195201	Callee	emit_output_expected_header		195173	0					
ANR	195202	Identifier	emit_output_expected_header		195173	0					
ANR	195203	ArgumentList			195173	1					
ANR	195204	ExpressionStatement	"emit_retval ( ""%d"" , 0 )"	519:1:12720:12740	195173	9	True				
ANR	195205	CallExpression	"emit_retval ( ""%d"" , 0 )"		195173	0					
ANR	195206	Callee	emit_retval		195173	0					
ANR	195207	Identifier	emit_retval		195173	0					
ANR	195208	ArgumentList	"""%d"""		195173	1					
ANR	195209	Argument	"""%d"""		195173	0					
ANR	195210	PrimaryExpression	"""%d"""		195173	0					
ANR	195211	Argument	0		195173	1					
ANR	195212	PrimaryExpression	0		195173	0					
ANR	195213	ExpressionStatement	emit_output_actual_header ( )	520:1:12743:12770	195173	10	True				
ANR	195214	CallExpression	emit_output_actual_header ( )		195173	0					
ANR	195215	Callee	emit_output_actual_header		195173	0					
ANR	195216	Identifier	emit_output_actual_header		195173	0					
ANR	195217	ArgumentList			195173	1					
ANR	195218	ExpressionStatement	"emit_retval ( ""%d"" , result )"	521:1:12773:12798	195173	11	True				
ANR	195219	CallExpression	"emit_retval ( ""%d"" , result )"		195173	0					
ANR	195220	Callee	emit_retval		195173	0					
ANR	195221	Identifier	emit_retval		195173	0					
ANR	195222	ArgumentList	"""%d"""		195173	1					
ANR	195223	Argument	"""%d"""		195173	0					
ANR	195224	PrimaryExpression	"""%d"""		195173	0					
ANR	195225	Argument	result		195173	1					
ANR	195226	Identifier	result		195173	0					
ANR	195227	IfStatement	if ( result )		195173	12					
ANR	195228	Condition	result	522:4:12804:12809	195173	0	True				
ANR	195229	Identifier	result		195173	0					
ANR	195230	CompoundStatement		10:12:265:265	195173	1					
ANR	195231	ExpressionStatement	FAIL	523:2:12816:12820	195173	0	True				
ANR	195232	Identifier	FAIL		195173	0					
ANR	195233	ExpressionStatement	PASS	525:1:12826:12830	195173	13	True				
ANR	195234	Identifier	PASS		195173	0					
ANR	195235	ReturnType	static bool		195173	1					
ANR	195236	Identifier	test_chomp_return_false		195173	2					
ANR	195237	ParameterList			195173	3					
ANR	195238	CFGEntryNode	ENTRY		195173		True				
ANR	195239	CFGExitNode	EXIT		195173		True				
ANR	195240	Symbol	result		195173						
ANR	195241	Symbol	a		195173						
ANR	195242	Symbol	chomp		195173						
ANR	195243	Function	test_chomp_return_true	528:0:12835:13162							
ANR	195244	FunctionDef	test_chomp_return_true ()		195243	0					
ANR	195245	CompoundStatement		528:37:12872:13162	195243	0					
ANR	195246	Statement	emit_test	529:1:12875:12883	195243	0	True				
ANR	195247	Statement	(	529:10:12884:12884	195243	1	True				
ANR	195248	Statement	"""Does chomp() return true if the std::string has a newLine at the """	529:11:12885:12951	195243	2	True				
ANR	195249	Statement	"""end?"""	530:2:12955:12960	195243	3	True				
ANR	195250	Statement	)	530:8:12961:12961	195243	4	True				
ANR	195251	ExpressionStatement		530:9:12962:12962	195243	5	True				
ANR	195252	IdentifierDeclStatement	"std :: string a ( ""stuff\\n"" ) ;"	531:1:12965:12989	195243	6	True				
ANR	195253	IdentifierDecl	"a ( ""stuff\\n"" )"		195243	0					
ANR	195254	IdentifierDeclType	std :: string		195243	0					
ANR	195255	Identifier	a		195243	1					
ANR	195256	PrimaryExpression	"""stuff\\n"""		195243	2					
ANR	195257	IdentifierDeclStatement	bool result = chomp ( a ) ;	532:1:12992:13014	195243	7	True				
ANR	195258	IdentifierDecl	result = chomp ( a )		195243	0					
ANR	195259	IdentifierDeclType	bool		195243	0					
ANR	195260	Identifier	result		195243	1					
ANR	195261	AssignmentExpression	result = chomp ( a )		195243	2		=			
ANR	195262	Identifier	result		195243	0					
ANR	195263	CallExpression	chomp ( a )		195243	1					
ANR	195264	Callee	chomp		195243	0					
ANR	195265	Identifier	chomp		195243	0					
ANR	195266	ArgumentList	a		195243	1					
ANR	195267	Argument	a		195243	0					
ANR	195268	Identifier	a		195243	0					
ANR	195269	ExpressionStatement	emit_output_expected_header ( )	533:1:13017:13046	195243	8	True				
ANR	195270	CallExpression	emit_output_expected_header ( )		195243	0					
ANR	195271	Callee	emit_output_expected_header		195243	0					
ANR	195272	Identifier	emit_output_expected_header		195243	0					
ANR	195273	ArgumentList			195243	1					
ANR	195274	ExpressionStatement	"emit_retval ( ""%d"" , 1 )"	534:1:13049:13069	195243	9	True				
ANR	195275	CallExpression	"emit_retval ( ""%d"" , 1 )"		195243	0					
ANR	195276	Callee	emit_retval		195243	0					
ANR	195277	Identifier	emit_retval		195243	0					
ANR	195278	ArgumentList	"""%d"""		195243	1					
ANR	195279	Argument	"""%d"""		195243	0					
ANR	195280	PrimaryExpression	"""%d"""		195243	0					
ANR	195281	Argument	1		195243	1					
ANR	195282	PrimaryExpression	1		195243	0					
ANR	195283	ExpressionStatement	emit_output_actual_header ( )	535:1:13072:13099	195243	10	True				
ANR	195284	CallExpression	emit_output_actual_header ( )		195243	0					
ANR	195285	Callee	emit_output_actual_header		195243	0					
ANR	195286	Identifier	emit_output_actual_header		195243	0					
ANR	195287	ArgumentList			195243	1					
ANR	195288	ExpressionStatement	"emit_retval ( ""%d"" , result )"	536:1:13102:13127	195243	11	True				
ANR	195289	CallExpression	"emit_retval ( ""%d"" , result )"		195243	0					
ANR	195290	Callee	emit_retval		195243	0					
ANR	195291	Identifier	emit_retval		195243	0					
ANR	195292	ArgumentList	"""%d"""		195243	1					
ANR	195293	Argument	"""%d"""		195243	0					
ANR	195294	PrimaryExpression	"""%d"""		195243	0					
ANR	195295	Argument	result		195243	1					
ANR	195296	Identifier	result		195243	0					
ANR	195297	IfStatement	if ( ! result )		195243	12					
ANR	195298	Condition	! result	537:4:13133:13139	195243	0	True				
ANR	195299	UnaryOperationExpression	! result		195243	0					
ANR	195300	UnaryOperator	!		195243	0					
ANR	195301	Identifier	result		195243	1					
ANR	195302	CompoundStatement		10:13:269:269	195243	1					
ANR	195303	ExpressionStatement	FAIL	538:2:13146:13150	195243	0	True				
ANR	195304	Identifier	FAIL		195243	0					
ANR	195305	ExpressionStatement	PASS	540:1:13156:13160	195243	13	True				
ANR	195306	Identifier	PASS		195243	0					
ANR	195307	ReturnType	static bool		195243	1					
ANR	195308	Identifier	test_chomp_return_true		195243	2					
ANR	195309	ParameterList			195243	3					
ANR	195310	CFGEntryNode	ENTRY		195243		True				
ANR	195311	CFGExitNode	EXIT		195243		True				
ANR	195312	Symbol	result		195243						
ANR	195313	Symbol	a		195243						
ANR	195314	Symbol	chomp		195243						
ANR	195315	Function	test_trim_beginning_and_end	543:0:13165:13525							
ANR	195316	FunctionDef	test_trim_beginning_and_end ()		195315	0					
ANR	195317	CompoundStatement		543:42:13207:13525	195315	0					
ANR	195318	Statement	emit_test	544:1:13210:13218	195315	0	True				
ANR	195319	Statement	(	544:10:13219:13219	195315	1	True				
ANR	195320	Statement	"""Test trim on a std::string with white space at the beginning and """	544:11:13220:13286	195315	2	True				
ANR	195321	Statement	"""end."""	545:2:13290:13295	195315	3	True				
ANR	195322	Statement	)	545:8:13296:13296	195315	4	True				
ANR	195323	ExpressionStatement		545:9:13297:13297	195315	5	True				
ANR	195324	IdentifierDeclStatement	"std :: string a ( ""  Miguel   "" ) ;"	546:1:13300:13328	195315	6	True				
ANR	195325	IdentifierDecl	"a ( ""  Miguel   "" )"		195315	0					
ANR	195326	IdentifierDeclType	std :: string		195315	0					
ANR	195327	Identifier	a		195315	1					
ANR	195328	PrimaryExpression	"""  Miguel   """		195315	2					
ANR	195329	ExpressionStatement	trim ( a )	547:1:13331:13338	195315	7	True				
ANR	195330	CallExpression	trim ( a )		195315	0					
ANR	195331	Callee	trim		195315	0					
ANR	195332	Identifier	trim		195315	0					
ANR	195333	ArgumentList	a		195315	1					
ANR	195334	Argument	a		195315	0					
ANR	195335	Identifier	a		195315	0					
ANR	195336	ExpressionStatement	emit_output_expected_header ( )	548:1:13341:13370	195315	8	True				
ANR	195337	CallExpression	emit_output_expected_header ( )		195315	0					
ANR	195338	Callee	emit_output_expected_header		195315	0					
ANR	195339	Identifier	emit_output_expected_header		195315	0					
ANR	195340	ArgumentList			195315	1					
ANR	195341	ExpressionStatement	"emit_retval ( ""%s"" , ""Miguel"" )"	549:1:13373:13400	195315	9	True				
ANR	195342	CallExpression	"emit_retval ( ""%s"" , ""Miguel"" )"		195315	0					
ANR	195343	Callee	emit_retval		195315	0					
ANR	195344	Identifier	emit_retval		195315	0					
ANR	195345	ArgumentList	"""%s"""		195315	1					
ANR	195346	Argument	"""%s"""		195315	0					
ANR	195347	PrimaryExpression	"""%s"""		195315	0					
ANR	195348	Argument	"""Miguel"""		195315	1					
ANR	195349	PrimaryExpression	"""Miguel"""		195315	0					
ANR	195350	ExpressionStatement	emit_output_actual_header ( )	550:1:13403:13430	195315	10	True				
ANR	195351	CallExpression	emit_output_actual_header ( )		195315	0					
ANR	195352	Callee	emit_output_actual_header		195315	0					
ANR	195353	Identifier	emit_output_actual_header		195315	0					
ANR	195354	ArgumentList			195315	1					
ANR	195355	ExpressionStatement	"emit_retval ( ""%s"" , a . c_str ( ) )"	551:1:13433:13461	195315	11	True				
ANR	195356	CallExpression	"emit_retval ( ""%s"" , a . c_str ( ) )"		195315	0					
ANR	195357	Callee	emit_retval		195315	0					
ANR	195358	Identifier	emit_retval		195315	0					
ANR	195359	ArgumentList	"""%s"""		195315	1					
ANR	195360	Argument	"""%s"""		195315	0					
ANR	195361	PrimaryExpression	"""%s"""		195315	0					
ANR	195362	Argument	a . c_str ( )		195315	1					
ANR	195363	CallExpression	a . c_str ( )		195315	0					
ANR	195364	Callee	a . c_str		195315	0					
ANR	195365	MemberAccess	a . c_str		195315	0					
ANR	195366	Identifier	a		195315	0					
ANR	195367	Identifier	c_str		195315	1					
ANR	195368	ArgumentList			195315	1					
ANR	195369	IfStatement	"if ( strcmp ( a . c_str ( ) , ""Miguel"" ) != MATCH )"		195315	12					
ANR	195370	Condition	"strcmp ( a . c_str ( ) , ""Miguel"" ) != MATCH"	552:4:13467:13502	195315	0	True				
ANR	195371	EqualityExpression	"strcmp ( a . c_str ( ) , ""Miguel"" ) != MATCH"		195315	0		!=			
ANR	195372	CallExpression	"strcmp ( a . c_str ( ) , ""Miguel"" )"		195315	0					
ANR	195373	Callee	strcmp		195315	0					
ANR	195374	Identifier	strcmp		195315	0					
ANR	195375	ArgumentList	a . c_str ( )		195315	1					
ANR	195376	Argument	a . c_str ( )		195315	0					
ANR	195377	CallExpression	a . c_str ( )		195315	0					
ANR	195378	Callee	a . c_str		195315	0					
ANR	195379	MemberAccess	a . c_str		195315	0					
ANR	195380	Identifier	a		195315	0					
ANR	195381	Identifier	c_str		195315	1					
ANR	195382	ArgumentList			195315	1					
ANR	195383	Argument	"""Miguel"""		195315	1					
ANR	195384	PrimaryExpression	"""Miguel"""		195315	0					
ANR	195385	Identifier	MATCH		195315	1					
ANR	195386	CompoundStatement		10:42:297:297	195315	1					
ANR	195387	ExpressionStatement	FAIL	553:2:13509:13513	195315	0	True				
ANR	195388	Identifier	FAIL		195315	0					
ANR	195389	ExpressionStatement	PASS	555:1:13519:13523	195315	13	True				
ANR	195390	Identifier	PASS		195315	0					
ANR	195391	ReturnType	static bool		195315	1					
ANR	195392	Identifier	test_trim_beginning_and_end		195315	2					
ANR	195393	ParameterList			195315	3					
ANR	195394	CFGEntryNode	ENTRY		195315		True				
ANR	195395	CFGExitNode	EXIT		195315		True				
ANR	195396	Symbol	strcmp		195315						
ANR	195397	Symbol	a		195315						
ANR	195398	Symbol	a . c_str		195315						
ANR	195399	Symbol	MATCH		195315						
ANR	195400	Function	test_trim_end	558:0:13528:13858							
ANR	195401	FunctionDef	test_trim_end ()		195400	0					
ANR	195402	CompoundStatement		558:28:13556:13858	195400	0					
ANR	195403	ExpressionStatement	"emit_test ( ""Test trim() on a std::string with white space at the end."" )"	559:1:13559:13629	195400	0	True				
ANR	195404	CallExpression	"emit_test ( ""Test trim() on a std::string with white space at the end."" )"		195400	0					
ANR	195405	Callee	emit_test		195400	0					
ANR	195406	Identifier	emit_test		195400	0					
ANR	195407	ArgumentList	"""Test trim() on a std::string with white space at the end."""		195400	1					
ANR	195408	Argument	"""Test trim() on a std::string with white space at the end."""		195400	0					
ANR	195409	PrimaryExpression	"""Test trim() on a std::string with white space at the end."""		195400	0					
ANR	195410	IdentifierDeclStatement	"std :: string a ( ""Hinault   "" ) ;"	560:1:13632:13659	195400	1	True				
ANR	195411	IdentifierDecl	"a ( ""Hinault   "" )"		195400	0					
ANR	195412	IdentifierDeclType	std :: string		195400	0					
ANR	195413	Identifier	a		195400	1					
ANR	195414	PrimaryExpression	"""Hinault   """		195400	2					
ANR	195415	ExpressionStatement	trim ( a )	561:1:13662:13669	195400	2	True				
ANR	195416	CallExpression	trim ( a )		195400	0					
ANR	195417	Callee	trim		195400	0					
ANR	195418	Identifier	trim		195400	0					
ANR	195419	ArgumentList	a		195400	1					
ANR	195420	Argument	a		195400	0					
ANR	195421	Identifier	a		195400	0					
ANR	195422	ExpressionStatement	emit_output_expected_header ( )	562:1:13672:13701	195400	3	True				
ANR	195423	CallExpression	emit_output_expected_header ( )		195400	0					
ANR	195424	Callee	emit_output_expected_header		195400	0					
ANR	195425	Identifier	emit_output_expected_header		195400	0					
ANR	195426	ArgumentList			195400	1					
ANR	195427	ExpressionStatement	"emit_retval ( ""%s"" , ""Hinault"" )"	563:1:13704:13732	195400	4	True				
ANR	195428	CallExpression	"emit_retval ( ""%s"" , ""Hinault"" )"		195400	0					
ANR	195429	Callee	emit_retval		195400	0					
ANR	195430	Identifier	emit_retval		195400	0					
ANR	195431	ArgumentList	"""%s"""		195400	1					
ANR	195432	Argument	"""%s"""		195400	0					
ANR	195433	PrimaryExpression	"""%s"""		195400	0					
ANR	195434	Argument	"""Hinault"""		195400	1					
ANR	195435	PrimaryExpression	"""Hinault"""		195400	0					
ANR	195436	ExpressionStatement	emit_output_actual_header ( )	564:1:13735:13762	195400	5	True				
ANR	195437	CallExpression	emit_output_actual_header ( )		195400	0					
ANR	195438	Callee	emit_output_actual_header		195400	0					
ANR	195439	Identifier	emit_output_actual_header		195400	0					
ANR	195440	ArgumentList			195400	1					
ANR	195441	ExpressionStatement	"emit_retval ( ""%s"" , a . c_str ( ) )"	565:1:13765:13793	195400	6	True				
ANR	195442	CallExpression	"emit_retval ( ""%s"" , a . c_str ( ) )"		195400	0					
ANR	195443	Callee	emit_retval		195400	0					
ANR	195444	Identifier	emit_retval		195400	0					
ANR	195445	ArgumentList	"""%s"""		195400	1					
ANR	195446	Argument	"""%s"""		195400	0					
ANR	195447	PrimaryExpression	"""%s"""		195400	0					
ANR	195448	Argument	a . c_str ( )		195400	1					
ANR	195449	CallExpression	a . c_str ( )		195400	0					
ANR	195450	Callee	a . c_str		195400	0					
ANR	195451	MemberAccess	a . c_str		195400	0					
ANR	195452	Identifier	a		195400	0					
ANR	195453	Identifier	c_str		195400	1					
ANR	195454	ArgumentList			195400	1					
ANR	195455	IfStatement	"if ( strcmp ( a . c_str ( ) , ""Hinault"" ) != MATCH )"		195400	7					
ANR	195456	Condition	"strcmp ( a . c_str ( ) , ""Hinault"" ) != MATCH"	566:4:13799:13835	195400	0	True				
ANR	195457	EqualityExpression	"strcmp ( a . c_str ( ) , ""Hinault"" ) != MATCH"		195400	0		!=			
ANR	195458	CallExpression	"strcmp ( a . c_str ( ) , ""Hinault"" )"		195400	0					
ANR	195459	Callee	strcmp		195400	0					
ANR	195460	Identifier	strcmp		195400	0					
ANR	195461	ArgumentList	a . c_str ( )		195400	1					
ANR	195462	Argument	a . c_str ( )		195400	0					
ANR	195463	CallExpression	a . c_str ( )		195400	0					
ANR	195464	Callee	a . c_str		195400	0					
ANR	195465	MemberAccess	a . c_str		195400	0					
ANR	195466	Identifier	a		195400	0					
ANR	195467	Identifier	c_str		195400	1					
ANR	195468	ArgumentList			195400	1					
ANR	195469	Argument	"""Hinault"""		195400	1					
ANR	195470	PrimaryExpression	"""Hinault"""		195400	0					
ANR	195471	Identifier	MATCH		195400	1					
ANR	195472	CompoundStatement		9:43:281:281	195400	1					
ANR	195473	ExpressionStatement	FAIL	567:2:13842:13846	195400	0	True				
ANR	195474	Identifier	FAIL		195400	0					
ANR	195475	ExpressionStatement	PASS	569:1:13852:13856	195400	8	True				
ANR	195476	Identifier	PASS		195400	0					
ANR	195477	ReturnType	static bool		195400	1					
ANR	195478	Identifier	test_trim_end		195400	2					
ANR	195479	ParameterList			195400	3					
ANR	195480	CFGEntryNode	ENTRY		195400		True				
ANR	195481	CFGExitNode	EXIT		195400		True				
ANR	195482	Symbol	strcmp		195400						
ANR	195483	Symbol	a		195400						
ANR	195484	Symbol	a . c_str		195400						
ANR	195485	Symbol	MATCH		195400						
ANR	195486	Function	test_trim_none	572:0:13861:14184							
ANR	195487	FunctionDef	test_trim_none ()		195486	0					
ANR	195488	CompoundStatement		572:29:13890:14184	195486	0					
ANR	195489	ExpressionStatement	"emit_test ( ""Test trim() on a std::string with no white space."" )"	573:1:13893:13955	195486	0	True				
ANR	195490	CallExpression	"emit_test ( ""Test trim() on a std::string with no white space."" )"		195486	0					
ANR	195491	Callee	emit_test		195486	0					
ANR	195492	Identifier	emit_test		195486	0					
ANR	195493	ArgumentList	"""Test trim() on a std::string with no white space."""		195486	1					
ANR	195494	Argument	"""Test trim() on a std::string with no white space."""		195486	0					
ANR	195495	PrimaryExpression	"""Test trim() on a std::string with no white space."""		195486	0					
ANR	195496	IdentifierDeclStatement	"std :: string a ( ""Indurain"" ) ;"	574:1:13958:13983	195486	1	True				
ANR	195497	IdentifierDecl	"a ( ""Indurain"" )"		195486	0					
ANR	195498	IdentifierDeclType	std :: string		195486	0					
ANR	195499	Identifier	a		195486	1					
ANR	195500	PrimaryExpression	"""Indurain"""		195486	2					
ANR	195501	ExpressionStatement	trim ( a )	575:1:13986:13993	195486	2	True				
ANR	195502	CallExpression	trim ( a )		195486	0					
ANR	195503	Callee	trim		195486	0					
ANR	195504	Identifier	trim		195486	0					
ANR	195505	ArgumentList	a		195486	1					
ANR	195506	Argument	a		195486	0					
ANR	195507	Identifier	a		195486	0					
ANR	195508	ExpressionStatement	emit_output_expected_header ( )	576:1:13996:14025	195486	3	True				
ANR	195509	CallExpression	emit_output_expected_header ( )		195486	0					
ANR	195510	Callee	emit_output_expected_header		195486	0					
ANR	195511	Identifier	emit_output_expected_header		195486	0					
ANR	195512	ArgumentList			195486	1					
ANR	195513	ExpressionStatement	"emit_retval ( ""%s"" , ""Indurain"" )"	577:1:14028:14057	195486	4	True				
ANR	195514	CallExpression	"emit_retval ( ""%s"" , ""Indurain"" )"		195486	0					
ANR	195515	Callee	emit_retval		195486	0					
ANR	195516	Identifier	emit_retval		195486	0					
ANR	195517	ArgumentList	"""%s"""		195486	1					
ANR	195518	Argument	"""%s"""		195486	0					
ANR	195519	PrimaryExpression	"""%s"""		195486	0					
ANR	195520	Argument	"""Indurain"""		195486	1					
ANR	195521	PrimaryExpression	"""Indurain"""		195486	0					
ANR	195522	ExpressionStatement	emit_output_actual_header ( )	578:1:14060:14087	195486	5	True				
ANR	195523	CallExpression	emit_output_actual_header ( )		195486	0					
ANR	195524	Callee	emit_output_actual_header		195486	0					
ANR	195525	Identifier	emit_output_actual_header		195486	0					
ANR	195526	ArgumentList			195486	1					
ANR	195527	ExpressionStatement	"emit_retval ( ""%s"" , a . c_str ( ) )"	579:1:14090:14118	195486	6	True				
ANR	195528	CallExpression	"emit_retval ( ""%s"" , a . c_str ( ) )"		195486	0					
ANR	195529	Callee	emit_retval		195486	0					
ANR	195530	Identifier	emit_retval		195486	0					
ANR	195531	ArgumentList	"""%s"""		195486	1					
ANR	195532	Argument	"""%s"""		195486	0					
ANR	195533	PrimaryExpression	"""%s"""		195486	0					
ANR	195534	Argument	a . c_str ( )		195486	1					
ANR	195535	CallExpression	a . c_str ( )		195486	0					
ANR	195536	Callee	a . c_str		195486	0					
ANR	195537	MemberAccess	a . c_str		195486	0					
ANR	195538	Identifier	a		195486	0					
ANR	195539	Identifier	c_str		195486	1					
ANR	195540	ArgumentList			195486	1					
ANR	195541	IfStatement	"if ( strcmp ( a . c_str ( ) , ""Indurain"" ) != MATCH )"		195486	7					
ANR	195542	Condition	"strcmp ( a . c_str ( ) , ""Indurain"" ) != MATCH"	580:4:14124:14161	195486	0	True				
ANR	195543	EqualityExpression	"strcmp ( a . c_str ( ) , ""Indurain"" ) != MATCH"		195486	0		!=			
ANR	195544	CallExpression	"strcmp ( a . c_str ( ) , ""Indurain"" )"		195486	0					
ANR	195545	Callee	strcmp		195486	0					
ANR	195546	Identifier	strcmp		195486	0					
ANR	195547	ArgumentList	a . c_str ( )		195486	1					
ANR	195548	Argument	a . c_str ( )		195486	0					
ANR	195549	CallExpression	a . c_str ( )		195486	0					
ANR	195550	Callee	a . c_str		195486	0					
ANR	195551	MemberAccess	a . c_str		195486	0					
ANR	195552	Identifier	a		195486	0					
ANR	195553	Identifier	c_str		195486	1					
ANR	195554	ArgumentList			195486	1					
ANR	195555	Argument	"""Indurain"""		195486	1					
ANR	195556	PrimaryExpression	"""Indurain"""		195486	0					
ANR	195557	Identifier	MATCH		195486	1					
ANR	195558	CompoundStatement		9:44:273:273	195486	1					
ANR	195559	ExpressionStatement	FAIL	581:2:14168:14172	195486	0	True				
ANR	195560	Identifier	FAIL		195486	0					
ANR	195561	ExpressionStatement	PASS	583:1:14178:14182	195486	8	True				
ANR	195562	Identifier	PASS		195486	0					
ANR	195563	ReturnType	static bool		195486	1					
ANR	195564	Identifier	test_trim_none		195486	2					
ANR	195565	ParameterList			195486	3					
ANR	195566	CFGEntryNode	ENTRY		195486		True				
ANR	195567	CFGExitNode	EXIT		195486		True				
ANR	195568	Symbol	strcmp		195486						
ANR	195569	Symbol	a		195486						
ANR	195570	Symbol	a . c_str		195486						
ANR	195571	Symbol	MATCH		195486						
ANR	195572	Function	test_trim_beginning	586:0:14187:14526							
ANR	195573	FunctionDef	test_trim_beginning ()		195572	0					
ANR	195574	CompoundStatement		586:34:14221:14526	195572	0					
ANR	195575	ExpressionStatement	"emit_test ( ""Test trim() on a std::string with white space at the beginning."" )"	587:1:14224:14300	195572	0	True				
ANR	195576	CallExpression	"emit_test ( ""Test trim() on a std::string with white space at the beginning."" )"		195572	0					
ANR	195577	Callee	emit_test		195572	0					
ANR	195578	Identifier	emit_test		195572	0					
ANR	195579	ArgumentList	"""Test trim() on a std::string with white space at the beginning."""		195572	1					
ANR	195580	Argument	"""Test trim() on a std::string with white space at the beginning."""		195572	0					
ANR	195581	PrimaryExpression	"""Test trim() on a std::string with white space at the beginning."""		195572	0					
ANR	195582	IdentifierDeclStatement	"std :: string a ( ""   Merckx"" ) ;"	588:1:14303:14329	195572	1	True				
ANR	195583	IdentifierDecl	"a ( ""   Merckx"" )"		195572	0					
ANR	195584	IdentifierDeclType	std :: string		195572	0					
ANR	195585	Identifier	a		195572	1					
ANR	195586	PrimaryExpression	"""   Merckx"""		195572	2					
ANR	195587	ExpressionStatement	trim ( a )	589:1:14332:14339	195572	2	True				
ANR	195588	CallExpression	trim ( a )		195572	0					
ANR	195589	Callee	trim		195572	0					
ANR	195590	Identifier	trim		195572	0					
ANR	195591	ArgumentList	a		195572	1					
ANR	195592	Argument	a		195572	0					
ANR	195593	Identifier	a		195572	0					
ANR	195594	ExpressionStatement	emit_output_expected_header ( )	590:1:14342:14371	195572	3	True				
ANR	195595	CallExpression	emit_output_expected_header ( )		195572	0					
ANR	195596	Callee	emit_output_expected_header		195572	0					
ANR	195597	Identifier	emit_output_expected_header		195572	0					
ANR	195598	ArgumentList			195572	1					
ANR	195599	ExpressionStatement	"emit_retval ( ""%s"" , ""Merckx"" )"	591:1:14374:14401	195572	4	True				
ANR	195600	CallExpression	"emit_retval ( ""%s"" , ""Merckx"" )"		195572	0					
ANR	195601	Callee	emit_retval		195572	0					
ANR	195602	Identifier	emit_retval		195572	0					
ANR	195603	ArgumentList	"""%s"""		195572	1					
ANR	195604	Argument	"""%s"""		195572	0					
ANR	195605	PrimaryExpression	"""%s"""		195572	0					
ANR	195606	Argument	"""Merckx"""		195572	1					
ANR	195607	PrimaryExpression	"""Merckx"""		195572	0					
ANR	195608	ExpressionStatement	emit_output_actual_header ( )	592:1:14404:14431	195572	5	True				
ANR	195609	CallExpression	emit_output_actual_header ( )		195572	0					
ANR	195610	Callee	emit_output_actual_header		195572	0					
ANR	195611	Identifier	emit_output_actual_header		195572	0					
ANR	195612	ArgumentList			195572	1					
ANR	195613	ExpressionStatement	"emit_retval ( ""%s"" , a . c_str ( ) )"	593:1:14434:14462	195572	6	True				
ANR	195614	CallExpression	"emit_retval ( ""%s"" , a . c_str ( ) )"		195572	0					
ANR	195615	Callee	emit_retval		195572	0					
ANR	195616	Identifier	emit_retval		195572	0					
ANR	195617	ArgumentList	"""%s"""		195572	1					
ANR	195618	Argument	"""%s"""		195572	0					
ANR	195619	PrimaryExpression	"""%s"""		195572	0					
ANR	195620	Argument	a . c_str ( )		195572	1					
ANR	195621	CallExpression	a . c_str ( )		195572	0					
ANR	195622	Callee	a . c_str		195572	0					
ANR	195623	MemberAccess	a . c_str		195572	0					
ANR	195624	Identifier	a		195572	0					
ANR	195625	Identifier	c_str		195572	1					
ANR	195626	ArgumentList			195572	1					
ANR	195627	IfStatement	"if ( strcmp ( a . c_str ( ) , ""Merckx"" ) != MATCH )"		195572	7					
ANR	195628	Condition	"strcmp ( a . c_str ( ) , ""Merckx"" ) != MATCH"	594:4:14468:14503	195572	0	True				
ANR	195629	EqualityExpression	"strcmp ( a . c_str ( ) , ""Merckx"" ) != MATCH"		195572	0		!=			
ANR	195630	CallExpression	"strcmp ( a . c_str ( ) , ""Merckx"" )"		195572	0					
ANR	195631	Callee	strcmp		195572	0					
ANR	195632	Identifier	strcmp		195572	0					
ANR	195633	ArgumentList	a . c_str ( )		195572	1					
ANR	195634	Argument	a . c_str ( )		195572	0					
ANR	195635	CallExpression	a . c_str ( )		195572	0					
ANR	195636	Callee	a . c_str		195572	0					
ANR	195637	MemberAccess	a . c_str		195572	0					
ANR	195638	Identifier	a		195572	0					
ANR	195639	Identifier	c_str		195572	1					
ANR	195640	ArgumentList			195572	1					
ANR	195641	Argument	"""Merckx"""		195572	1					
ANR	195642	PrimaryExpression	"""Merckx"""		195572	0					
ANR	195643	Identifier	MATCH		195572	1					
ANR	195644	CompoundStatement		9:42:284:284	195572	1					
ANR	195645	ExpressionStatement	FAIL	595:2:14510:14514	195572	0	True				
ANR	195646	Identifier	FAIL		195572	0					
ANR	195647	ExpressionStatement	PASS	597:1:14520:14524	195572	8	True				
ANR	195648	Identifier	PASS		195572	0					
ANR	195649	ReturnType	static bool		195572	1					
ANR	195650	Identifier	test_trim_beginning		195572	2					
ANR	195651	ParameterList			195572	3					
ANR	195652	CFGEntryNode	ENTRY		195572		True				
ANR	195653	CFGExitNode	EXIT		195572		True				
ANR	195654	Symbol	strcmp		195572						
ANR	195655	Symbol	a		195572						
ANR	195656	Symbol	a . c_str		195572						
ANR	195657	Symbol	MATCH		195572						
ANR	195658	Function	test_trim_empty	600:0:14529:14812							
ANR	195659	FunctionDef	test_trim_empty ()		195658	0					
ANR	195660	CompoundStatement		600:30:14559:14812	195658	0					
ANR	195661	ExpressionStatement	"emit_test ( ""Test trim() on an empty std::string."" )"	601:1:14562:14611	195658	0	True				
ANR	195662	CallExpression	"emit_test ( ""Test trim() on an empty std::string."" )"		195658	0					
ANR	195663	Callee	emit_test		195658	0					
ANR	195664	Identifier	emit_test		195658	0					
ANR	195665	ArgumentList	"""Test trim() on an empty std::string."""		195658	1					
ANR	195666	Argument	"""Test trim() on an empty std::string."""		195658	0					
ANR	195667	PrimaryExpression	"""Test trim() on an empty std::string."""		195658	0					
ANR	195668	IdentifierDeclStatement	std :: string a ;	602:1:14614:14627	195658	1	True				
ANR	195669	IdentifierDecl	a		195658	0					
ANR	195670	IdentifierDeclType	std :: string		195658	0					
ANR	195671	Identifier	a		195658	1					
ANR	195672	ExpressionStatement	trim ( a )	603:1:14630:14637	195658	2	True				
ANR	195673	CallExpression	trim ( a )		195658	0					
ANR	195674	Callee	trim		195658	0					
ANR	195675	Identifier	trim		195658	0					
ANR	195676	ArgumentList	a		195658	1					
ANR	195677	Argument	a		195658	0					
ANR	195678	Identifier	a		195658	0					
ANR	195679	ExpressionStatement	emit_output_expected_header ( )	604:1:14640:14669	195658	3	True				
ANR	195680	CallExpression	emit_output_expected_header ( )		195658	0					
ANR	195681	Callee	emit_output_expected_header		195658	0					
ANR	195682	Identifier	emit_output_expected_header		195658	0					
ANR	195683	ArgumentList			195658	1					
ANR	195684	ExpressionStatement	"emit_retval ( ""%s"" , """" )"	605:1:14672:14693	195658	4	True				
ANR	195685	CallExpression	"emit_retval ( ""%s"" , """" )"		195658	0					
ANR	195686	Callee	emit_retval		195658	0					
ANR	195687	Identifier	emit_retval		195658	0					
ANR	195688	ArgumentList	"""%s"""		195658	1					
ANR	195689	Argument	"""%s"""		195658	0					
ANR	195690	PrimaryExpression	"""%s"""		195658	0					
ANR	195691	Argument	""""""		195658	1					
ANR	195692	PrimaryExpression	""""""		195658	0					
ANR	195693	ExpressionStatement	emit_output_actual_header ( )	606:1:14696:14723	195658	5	True				
ANR	195694	CallExpression	emit_output_actual_header ( )		195658	0					
ANR	195695	Callee	emit_output_actual_header		195658	0					
ANR	195696	Identifier	emit_output_actual_header		195658	0					
ANR	195697	ArgumentList			195658	1					
ANR	195698	ExpressionStatement	"emit_retval ( ""%s"" , a . c_str ( ) )"	607:1:14726:14754	195658	6	True				
ANR	195699	CallExpression	"emit_retval ( ""%s"" , a . c_str ( ) )"		195658	0					
ANR	195700	Callee	emit_retval		195658	0					
ANR	195701	Identifier	emit_retval		195658	0					
ANR	195702	ArgumentList	"""%s"""		195658	1					
ANR	195703	Argument	"""%s"""		195658	0					
ANR	195704	PrimaryExpression	"""%s"""		195658	0					
ANR	195705	Argument	a . c_str ( )		195658	1					
ANR	195706	CallExpression	a . c_str ( )		195658	0					
ANR	195707	Callee	a . c_str		195658	0					
ANR	195708	MemberAccess	a . c_str		195658	0					
ANR	195709	Identifier	a		195658	0					
ANR	195710	Identifier	c_str		195658	1					
ANR	195711	ArgumentList			195658	1					
ANR	195712	IfStatement	"if ( strcmp ( a . c_str ( ) , """" ) != MATCH )"		195658	7					
ANR	195713	Condition	"strcmp ( a . c_str ( ) , """" ) != MATCH"	608:4:14760:14789	195658	0	True				
ANR	195714	EqualityExpression	"strcmp ( a . c_str ( ) , """" ) != MATCH"		195658	0		!=			
ANR	195715	CallExpression	"strcmp ( a . c_str ( ) , """" )"		195658	0					
ANR	195716	Callee	strcmp		195658	0					
ANR	195717	Identifier	strcmp		195658	0					
ANR	195718	ArgumentList	a . c_str ( )		195658	1					
ANR	195719	Argument	a . c_str ( )		195658	0					
ANR	195720	CallExpression	a . c_str ( )		195658	0					
ANR	195721	Callee	a . c_str		195658	0					
ANR	195722	MemberAccess	a . c_str		195658	0					
ANR	195723	Identifier	a		195658	0					
ANR	195724	Identifier	c_str		195658	1					
ANR	195725	ArgumentList			195658	1					
ANR	195726	Argument	""""""		195658	1					
ANR	195727	PrimaryExpression	""""""		195658	0					
ANR	195728	Identifier	MATCH		195658	1					
ANR	195729	CompoundStatement		9:36:232:232	195658	1					
ANR	195730	ExpressionStatement	FAIL	609:2:14796:14800	195658	0	True				
ANR	195731	Identifier	FAIL		195658	0					
ANR	195732	ExpressionStatement	PASS	611:1:14806:14810	195658	8	True				
ANR	195733	Identifier	PASS		195658	0					
ANR	195734	ReturnType	static bool		195658	1					
ANR	195735	Identifier	test_trim_empty		195658	2					
ANR	195736	ParameterList			195658	3					
ANR	195737	CFGEntryNode	ENTRY		195658		True				
ANR	195738	CFGExitNode	EXIT		195658		True				
ANR	195739	Symbol	strcmp		195658						
ANR	195740	Symbol	a		195658						
ANR	195741	Symbol	a . c_str		195658						
ANR	195742	Symbol	MATCH		195658						
ANR	195743	Function	tokenize_null	614:0:14815:15174							
ANR	195744	FunctionDef	tokenize_null ()		195743	0					
ANR	195745	CompoundStatement		614:28:14843:15174	195743	0					
ANR	195746	Statement	emit_test	615:1:14846:14854	195743	0	True				
ANR	195747	Statement	(	615:10:14855:14855	195743	1	True				
ANR	195748	Statement	"""Does calling GetNextToken() before calling Tokenize() return """	615:11:14856:14918	195743	2	True				
ANR	195749	Statement	"""NULL?"""	616:2:14922:14928	195743	3	True				
ANR	195750	Statement	)	616:9:14929:14929	195743	4	True				
ANR	195751	ExpressionStatement		616:10:14930:14930	195743	5	True				
ANR	195752	IdentifierDeclStatement	"const char * tok = GetNextToken ( "","" , false ) ;"	617:1:14933:14975	195743	6	True				
ANR	195753	IdentifierDecl	"* tok = GetNextToken ( "","" , false )"		195743	0					
ANR	195754	IdentifierDeclType	const char *		195743	0					
ANR	195755	Identifier	tok		195743	1					
ANR	195756	AssignmentExpression	"* tok = GetNextToken ( "","" , false )"		195743	2		=			
ANR	195757	Identifier	tok		195743	0					
ANR	195758	CallExpression	"GetNextToken ( "","" , false )"		195743	1					
ANR	195759	Callee	GetNextToken		195743	0					
ANR	195760	Identifier	GetNextToken		195743	0					
ANR	195761	ArgumentList	""","""		195743	1					
ANR	195762	Argument	""","""		195743	0					
ANR	195763	PrimaryExpression	""","""		195743	0					
ANR	195764	Argument	false		195743	1					
ANR	195765	Identifier	false		195743	0					
ANR	195766	ExpressionStatement	emit_input_header ( )	618:1:14978:14997	195743	7	True				
ANR	195767	CallExpression	emit_input_header ( )		195743	0					
ANR	195768	Callee	emit_input_header		195743	0					
ANR	195769	Identifier	emit_input_header		195743	0					
ANR	195770	ArgumentList			195743	1					
ANR	195771	ExpressionStatement	"emit_param ( ""delim"" , ""%s"" , "","" )"	619:1:15000:15030	195743	8	True				
ANR	195772	CallExpression	"emit_param ( ""delim"" , ""%s"" , "","" )"		195743	0					
ANR	195773	Callee	emit_param		195743	0					
ANR	195774	Identifier	emit_param		195743	0					
ANR	195775	ArgumentList	"""delim"""		195743	1					
ANR	195776	Argument	"""delim"""		195743	0					
ANR	195777	PrimaryExpression	"""delim"""		195743	0					
ANR	195778	Argument	"""%s"""		195743	1					
ANR	195779	PrimaryExpression	"""%s"""		195743	0					
ANR	195780	Argument	""","""		195743	2					
ANR	195781	PrimaryExpression	""","""		195743	0					
ANR	195782	ExpressionStatement	"emit_param ( ""skipBlankTokens"" , ""%d"" , false )"	620:1:15033:15075	195743	9	True				
ANR	195783	CallExpression	"emit_param ( ""skipBlankTokens"" , ""%d"" , false )"		195743	0					
ANR	195784	Callee	emit_param		195743	0					
ANR	195785	Identifier	emit_param		195743	0					
ANR	195786	ArgumentList	"""skipBlankTokens"""		195743	1					
ANR	195787	Argument	"""skipBlankTokens"""		195743	0					
ANR	195788	PrimaryExpression	"""skipBlankTokens"""		195743	0					
ANR	195789	Argument	"""%d"""		195743	1					
ANR	195790	PrimaryExpression	"""%d"""		195743	0					
ANR	195791	Argument	false		195743	2					
ANR	195792	Identifier	false		195743	0					
ANR	195793	ExpressionStatement	emit_output_expected_header ( )	621:1:15078:15107	195743	10	True				
ANR	195794	CallExpression	emit_output_expected_header ( )		195743	0					
ANR	195795	Callee	emit_output_expected_header		195743	0					
ANR	195796	Identifier	emit_output_expected_header		195743	0					
ANR	195797	ArgumentList			195743	1					
ANR	195798	ExpressionStatement	"emit_retval ( ""%s"" , ""NULL"" )"	622:1:15110:15135	195743	11	True				
ANR	195799	CallExpression	"emit_retval ( ""%s"" , ""NULL"" )"		195743	0					
ANR	195800	Callee	emit_retval		195743	0					
ANR	195801	Identifier	emit_retval		195743	0					
ANR	195802	ArgumentList	"""%s"""		195743	1					
ANR	195803	Argument	"""%s"""		195743	0					
ANR	195804	PrimaryExpression	"""%s"""		195743	0					
ANR	195805	Argument	"""NULL"""		195743	1					
ANR	195806	PrimaryExpression	"""NULL"""		195743	0					
ANR	195807	IfStatement	if ( tok != NULL )		195743	12					
ANR	195808	Condition	tok != NULL	623:4:15141:15151	195743	0	True				
ANR	195809	EqualityExpression	tok != NULL		195743	0		!=			
ANR	195810	Identifier	tok		195743	0					
ANR	195811	Identifier	NULL		195743	1					
ANR	195812	CompoundStatement		10:17:310:310	195743	1					
ANR	195813	ExpressionStatement	FAIL	624:2:15158:15162	195743	0	True				
ANR	195814	Identifier	FAIL		195743	0					
ANR	195815	ExpressionStatement	PASS	626:1:15168:15172	195743	13	True				
ANR	195816	Identifier	PASS		195743	0					
ANR	195817	ReturnType	static bool		195743	1					
ANR	195818	Identifier	tokenize_null		195743	2					
ANR	195819	ParameterList			195743	3					
ANR	195820	CFGEntryNode	ENTRY		195743		True				
ANR	195821	CFGExitNode	EXIT		195743		True				
ANR	195822	Symbol	tok		195743						
ANR	195823	Symbol	NULL		195743						
ANR	195824	Symbol	false		195743						
ANR	195825	Symbol	GetNextToken		195743						
ANR	195826	Function	tokenize_skip	629:0:15177:15646							
ANR	195827	FunctionDef	tokenize_skip ()		195826	0					
ANR	195828	CompoundStatement		629:28:15205:15646	195826	0					
ANR	195829	ExpressionStatement	"emit_test ( ""Test GetNextToken() when skipping blank tokens."" )"	630:1:15208:15268	195826	0	True				
ANR	195830	CallExpression	"emit_test ( ""Test GetNextToken() when skipping blank tokens."" )"		195826	0					
ANR	195831	Callee	emit_test		195826	0					
ANR	195832	Identifier	emit_test		195826	0					
ANR	195833	ArgumentList	"""Test GetNextToken() when skipping blank tokens."""		195826	1					
ANR	195834	Argument	"""Test GetNextToken() when skipping blank tokens."""		195826	0					
ANR	195835	PrimaryExpression	"""Test GetNextToken() when skipping blank tokens."""		195826	0					
ANR	195836	IdentifierDeclStatement	"const char * a = ""     Ottavio Bottechia_"" ;"	631:1:15271:15312	195826	1	True				
ANR	195837	IdentifierDecl	"* a = ""     Ottavio Bottechia_"""		195826	0					
ANR	195838	IdentifierDeclType	const char *		195826	0					
ANR	195839	Identifier	a		195826	1					
ANR	195840	AssignmentExpression	"* a = ""     Ottavio Bottechia_"""		195826	2		=			
ANR	195841	Identifier	a		195826	0					
ANR	195842	PrimaryExpression	"""     Ottavio Bottechia_"""		195826	1					
ANR	195843	ExpressionStatement	Tokenize ( a )	632:1:15315:15326	195826	2	True				
ANR	195844	CallExpression	Tokenize ( a )		195826	0					
ANR	195845	Callee	Tokenize		195826	0					
ANR	195846	Identifier	Tokenize		195826	0					
ANR	195847	ArgumentList	a		195826	1					
ANR	195848	Argument	a		195826	0					
ANR	195849	Identifier	a		195826	0					
ANR	195850	IdentifierDeclStatement	"const char * tok = GetNextToken ( "" "" , true ) ;"	633:1:15329:15370	195826	3	True				
ANR	195851	IdentifierDecl	"* tok = GetNextToken ( "" "" , true )"		195826	0					
ANR	195852	IdentifierDeclType	const char *		195826	0					
ANR	195853	Identifier	tok		195826	1					
ANR	195854	AssignmentExpression	"* tok = GetNextToken ( "" "" , true )"		195826	2		=			
ANR	195855	Identifier	tok		195826	0					
ANR	195856	CallExpression	"GetNextToken ( "" "" , true )"		195826	1					
ANR	195857	Callee	GetNextToken		195826	0					
ANR	195858	Identifier	GetNextToken		195826	0					
ANR	195859	ArgumentList	""" """		195826	1					
ANR	195860	Argument	""" """		195826	0					
ANR	195861	PrimaryExpression	""" """		195826	0					
ANR	195862	Argument	true		195826	1					
ANR	195863	Identifier	true		195826	0					
ANR	195864	ExpressionStatement	emit_input_header ( )	634:1:15373:15392	195826	4	True				
ANR	195865	CallExpression	emit_input_header ( )		195826	0					
ANR	195866	Callee	emit_input_header		195826	0					
ANR	195867	Identifier	emit_input_header		195826	0					
ANR	195868	ArgumentList			195826	1					
ANR	195869	ExpressionStatement	"emit_param ( ""delim"" , ""%s"" , "" "" )"	635:1:15395:15425	195826	5	True				
ANR	195870	CallExpression	"emit_param ( ""delim"" , ""%s"" , "" "" )"		195826	0					
ANR	195871	Callee	emit_param		195826	0					
ANR	195872	Identifier	emit_param		195826	0					
ANR	195873	ArgumentList	"""delim"""		195826	1					
ANR	195874	Argument	"""delim"""		195826	0					
ANR	195875	PrimaryExpression	"""delim"""		195826	0					
ANR	195876	Argument	"""%s"""		195826	1					
ANR	195877	PrimaryExpression	"""%s"""		195826	0					
ANR	195878	Argument	""" """		195826	2					
ANR	195879	PrimaryExpression	""" """		195826	0					
ANR	195880	ExpressionStatement	"emit_param ( ""skipBlankTokens"" , ""%d"" , true )"	636:1:15428:15469	195826	6	True				
ANR	195881	CallExpression	"emit_param ( ""skipBlankTokens"" , ""%d"" , true )"		195826	0					
ANR	195882	Callee	emit_param		195826	0					
ANR	195883	Identifier	emit_param		195826	0					
ANR	195884	ArgumentList	"""skipBlankTokens"""		195826	1					
ANR	195885	Argument	"""skipBlankTokens"""		195826	0					
ANR	195886	PrimaryExpression	"""skipBlankTokens"""		195826	0					
ANR	195887	Argument	"""%d"""		195826	1					
ANR	195888	PrimaryExpression	"""%d"""		195826	0					
ANR	195889	Argument	true		195826	2					
ANR	195890	Identifier	true		195826	0					
ANR	195891	ExpressionStatement	emit_output_expected_header ( )	637:1:15472:15501	195826	7	True				
ANR	195892	CallExpression	emit_output_expected_header ( )		195826	0					
ANR	195893	Callee	emit_output_expected_header		195826	0					
ANR	195894	Identifier	emit_output_expected_header		195826	0					
ANR	195895	ArgumentList			195826	1					
ANR	195896	ExpressionStatement	"emit_retval ( ""%s"" , ""Ottavio"" )"	638:1:15504:15532	195826	8	True				
ANR	195897	CallExpression	"emit_retval ( ""%s"" , ""Ottavio"" )"		195826	0					
ANR	195898	Callee	emit_retval		195826	0					
ANR	195899	Identifier	emit_retval		195826	0					
ANR	195900	ArgumentList	"""%s"""		195826	1					
ANR	195901	Argument	"""%s"""		195826	0					
ANR	195902	PrimaryExpression	"""%s"""		195826	0					
ANR	195903	Argument	"""Ottavio"""		195826	1					
ANR	195904	PrimaryExpression	"""Ottavio"""		195826	0					
ANR	195905	ExpressionStatement	emit_output_actual_header ( )	639:1:15535:15562	195826	9	True				
ANR	195906	CallExpression	emit_output_actual_header ( )		195826	0					
ANR	195907	Callee	emit_output_actual_header		195826	0					
ANR	195908	Identifier	emit_output_actual_header		195826	0					
ANR	195909	ArgumentList			195826	1					
ANR	195910	ExpressionStatement	"emit_retval ( ""%s"" , tok )"	640:1:15565:15587	195826	10	True				
ANR	195911	CallExpression	"emit_retval ( ""%s"" , tok )"		195826	0					
ANR	195912	Callee	emit_retval		195826	0					
ANR	195913	Identifier	emit_retval		195826	0					
ANR	195914	ArgumentList	"""%s"""		195826	1					
ANR	195915	Argument	"""%s"""		195826	0					
ANR	195916	PrimaryExpression	"""%s"""		195826	0					
ANR	195917	Argument	tok		195826	1					
ANR	195918	Identifier	tok		195826	0					
ANR	195919	IfStatement	"if ( strcmp ( tok , ""Ottavio"" ) != MATCH )"		195826	11					
ANR	195920	Condition	"strcmp ( tok , ""Ottavio"" ) != MATCH"	641:4:15593:15623	195826	0	True				
ANR	195921	EqualityExpression	"strcmp ( tok , ""Ottavio"" ) != MATCH"		195826	0		!=			
ANR	195922	CallExpression	"strcmp ( tok , ""Ottavio"" )"		195826	0					
ANR	195923	Callee	strcmp		195826	0					
ANR	195924	Identifier	strcmp		195826	0					
ANR	195925	ArgumentList	tok		195826	1					
ANR	195926	Argument	tok		195826	0					
ANR	195927	Identifier	tok		195826	0					
ANR	195928	Argument	"""Ottavio"""		195826	1					
ANR	195929	PrimaryExpression	"""Ottavio"""		195826	0					
ANR	195930	Identifier	MATCH		195826	1					
ANR	195931	CompoundStatement		13:37:420:420	195826	1					
ANR	195932	ExpressionStatement	FAIL	642:2:15630:15634	195826	0	True				
ANR	195933	Identifier	FAIL		195826	0					
ANR	195934	ExpressionStatement	PASS	644:1:15640:15644	195826	12	True				
ANR	195935	Identifier	PASS		195826	0					
ANR	195936	ReturnType	static bool		195826	1					
ANR	195937	Identifier	tokenize_skip		195826	2					
ANR	195938	ParameterList			195826	3					
ANR	195939	CFGEntryNode	ENTRY		195826		True				
ANR	195940	CFGExitNode	EXIT		195826		True				
ANR	195941	Symbol	strcmp		195826						
ANR	195942	Symbol	a		195826						
ANR	195943	Symbol	tok		195826						
ANR	195944	Symbol	true		195826						
ANR	195945	Symbol	GetNextToken		195826						
ANR	195946	Symbol	MATCH		195826						
ANR	195947	Function	tokenize_multiple_calls	647:0:15649:18569							
ANR	195948	FunctionDef	tokenize_multiple_calls ()		195947	0					
ANR	195949	CompoundStatement		647:38:15687:18569	195947	0					
ANR	195950	ExpressionStatement	"emit_test ( ""Test multiple calls to GetNextToken()."" )"	648:1:15690:15741	195947	0	True				
ANR	195951	CallExpression	"emit_test ( ""Test multiple calls to GetNextToken()."" )"		195947	0					
ANR	195952	Callee	emit_test		195947	0					
ANR	195953	Identifier	emit_test		195947	0					
ANR	195954	ArgumentList	"""Test multiple calls to GetNextToken()."""		195947	1					
ANR	195955	Argument	"""Test multiple calls to GetNextToken()."""		195947	0					
ANR	195956	PrimaryExpression	"""Test multiple calls to GetNextToken()."""		195947	0					
ANR	195957	IdentifierDeclStatement	"const char * a = ""To  be or not to be; that is the question"" ;"	649:1:15744:15803	195947	1	True				
ANR	195958	IdentifierDecl	"* a = ""To  be or not to be; that is the question"""		195947	0					
ANR	195959	IdentifierDeclType	const char *		195947	0					
ANR	195960	Identifier	a		195947	1					
ANR	195961	AssignmentExpression	"* a = ""To  be or not to be; that is the question"""		195947	2		=			
ANR	195962	Identifier	a		195947	0					
ANR	195963	PrimaryExpression	"""To  be or not to be; that is the question"""		195947	1					
ANR	195964	ExpressionStatement	Tokenize ( a )	650:1:15806:15817	195947	2	True				
ANR	195965	CallExpression	Tokenize ( a )		195947	0					
ANR	195966	Callee	Tokenize		195947	0					
ANR	195967	Identifier	Tokenize		195947	0					
ANR	195968	ArgumentList	a		195947	1					
ANR	195969	Argument	a		195947	0					
ANR	195970	Identifier	a		195947	0					
ANR	195971	IdentifierDeclStatement	"const char * expectedTokens [ ] = { ""To"" , """" , ""be"" , ""or"" , ""not"" , ""to"" , ""be"" , """" , ""that"" , ""is"" , ""the"" , ""question"" } ;"	651:1:15820:15932	195947	3	True				
ANR	195972	IdentifierDecl	"* expectedTokens [ ] = { ""To"" , """" , ""be"" , ""or"" , ""not"" , ""to"" , ""be"" , """" , ""that"" , ""is"" , ""the"" , ""question"" }"		195947	0					
ANR	195973	IdentifierDeclType	const char * [ ]		195947	0					
ANR	195974	Identifier	expectedTokens		195947	1					
ANR	195975	AssignmentExpression	"* expectedTokens [ ] = { ""To"" , """" , ""be"" , ""or"" , ""not"" , ""to"" , ""be"" , """" , ""that"" , ""is"" , ""the"" , ""question"" }"		195947	2		=			
ANR	195976	Identifier	expectedTokens		195947	0					
ANR	195977	InitializerList	"""To"""		195947	1					
ANR	195978	PrimaryExpression	"""To"""		195947	0					
ANR	195979	PrimaryExpression	""""""		195947	1					
ANR	195980	PrimaryExpression	"""be"""		195947	2					
ANR	195981	PrimaryExpression	"""or"""		195947	3					
ANR	195982	PrimaryExpression	"""not"""		195947	4					
ANR	195983	PrimaryExpression	"""to"""		195947	5					
ANR	195984	PrimaryExpression	"""be"""		195947	6					
ANR	195985	PrimaryExpression	""""""		195947	7					
ANR	195986	PrimaryExpression	"""that"""		195947	8					
ANR	195987	PrimaryExpression	"""is"""		195947	9					
ANR	195988	PrimaryExpression	"""the"""		195947	10					
ANR	195989	PrimaryExpression	"""question"""		195947	11					
ANR	195990	IdentifierDeclStatement	"const char * resultToken0 = GetNextToken ( "" ;"" , false ) ;"	653:1:15935:15987	195947	4	True				
ANR	195991	IdentifierDecl	"* resultToken0 = GetNextToken ( "" ;"" , false )"		195947	0					
ANR	195992	IdentifierDeclType	const char *		195947	0					
ANR	195993	Identifier	resultToken0		195947	1					
ANR	195994	AssignmentExpression	"* resultToken0 = GetNextToken ( "" ;"" , false )"		195947	2		=			
ANR	195995	Identifier	resultToken0		195947	0					
ANR	195996	CallExpression	"GetNextToken ( "" ;"" , false )"		195947	1					
ANR	195997	Callee	GetNextToken		195947	0					
ANR	195998	Identifier	GetNextToken		195947	0					
ANR	195999	ArgumentList	""" ;"""		195947	1					
ANR	196000	Argument	""" ;"""		195947	0					
ANR	196001	PrimaryExpression	""" ;"""		195947	0					
ANR	196002	Argument	false		195947	1					
ANR	196003	Identifier	false		195947	0					
ANR	196004	IdentifierDeclStatement	"const char * resultToken1 = GetNextToken ( "" ;"" , false ) ;"	654:1:15990:16042	195947	5	True				
ANR	196005	IdentifierDecl	"* resultToken1 = GetNextToken ( "" ;"" , false )"		195947	0					
ANR	196006	IdentifierDeclType	const char *		195947	0					
ANR	196007	Identifier	resultToken1		195947	1					
ANR	196008	AssignmentExpression	"* resultToken1 = GetNextToken ( "" ;"" , false )"		195947	2		=			
ANR	196009	Identifier	resultToken1		195947	0					
ANR	196010	CallExpression	"GetNextToken ( "" ;"" , false )"		195947	1					
ANR	196011	Callee	GetNextToken		195947	0					
ANR	196012	Identifier	GetNextToken		195947	0					
ANR	196013	ArgumentList	""" ;"""		195947	1					
ANR	196014	Argument	""" ;"""		195947	0					
ANR	196015	PrimaryExpression	""" ;"""		195947	0					
ANR	196016	Argument	false		195947	1					
ANR	196017	Identifier	false		195947	0					
ANR	196018	IdentifierDeclStatement	"const char * resultToken2 = GetNextToken ( "" ;"" , false ) ;"	655:1:16045:16097	195947	6	True				
ANR	196019	IdentifierDecl	"* resultToken2 = GetNextToken ( "" ;"" , false )"		195947	0					
ANR	196020	IdentifierDeclType	const char *		195947	0					
ANR	196021	Identifier	resultToken2		195947	1					
ANR	196022	AssignmentExpression	"* resultToken2 = GetNextToken ( "" ;"" , false )"		195947	2		=			
ANR	196023	Identifier	resultToken2		195947	0					
ANR	196024	CallExpression	"GetNextToken ( "" ;"" , false )"		195947	1					
ANR	196025	Callee	GetNextToken		195947	0					
ANR	196026	Identifier	GetNextToken		195947	0					
ANR	196027	ArgumentList	""" ;"""		195947	1					
ANR	196028	Argument	""" ;"""		195947	0					
ANR	196029	PrimaryExpression	""" ;"""		195947	0					
ANR	196030	Argument	false		195947	1					
ANR	196031	Identifier	false		195947	0					
ANR	196032	IdentifierDeclStatement	"const char * resultToken3 = GetNextToken ( "" ;"" , false ) ;"	656:1:16100:16152	195947	7	True				
ANR	196033	IdentifierDecl	"* resultToken3 = GetNextToken ( "" ;"" , false )"		195947	0					
ANR	196034	IdentifierDeclType	const char *		195947	0					
ANR	196035	Identifier	resultToken3		195947	1					
ANR	196036	AssignmentExpression	"* resultToken3 = GetNextToken ( "" ;"" , false )"		195947	2		=			
ANR	196037	Identifier	resultToken3		195947	0					
ANR	196038	CallExpression	"GetNextToken ( "" ;"" , false )"		195947	1					
ANR	196039	Callee	GetNextToken		195947	0					
ANR	196040	Identifier	GetNextToken		195947	0					
ANR	196041	ArgumentList	""" ;"""		195947	1					
ANR	196042	Argument	""" ;"""		195947	0					
ANR	196043	PrimaryExpression	""" ;"""		195947	0					
ANR	196044	Argument	false		195947	1					
ANR	196045	Identifier	false		195947	0					
ANR	196046	IdentifierDeclStatement	"const char * resultToken4 = GetNextToken ( "" ;"" , false ) ;"	657:1:16155:16207	195947	8	True				
ANR	196047	IdentifierDecl	"* resultToken4 = GetNextToken ( "" ;"" , false )"		195947	0					
ANR	196048	IdentifierDeclType	const char *		195947	0					
ANR	196049	Identifier	resultToken4		195947	1					
ANR	196050	AssignmentExpression	"* resultToken4 = GetNextToken ( "" ;"" , false )"		195947	2		=			
ANR	196051	Identifier	resultToken4		195947	0					
ANR	196052	CallExpression	"GetNextToken ( "" ;"" , false )"		195947	1					
ANR	196053	Callee	GetNextToken		195947	0					
ANR	196054	Identifier	GetNextToken		195947	0					
ANR	196055	ArgumentList	""" ;"""		195947	1					
ANR	196056	Argument	""" ;"""		195947	0					
ANR	196057	PrimaryExpression	""" ;"""		195947	0					
ANR	196058	Argument	false		195947	1					
ANR	196059	Identifier	false		195947	0					
ANR	196060	IdentifierDeclStatement	"const char * resultToken5 = GetNextToken ( "" ;"" , false ) ;"	658:1:16210:16262	195947	9	True				
ANR	196061	IdentifierDecl	"* resultToken5 = GetNextToken ( "" ;"" , false )"		195947	0					
ANR	196062	IdentifierDeclType	const char *		195947	0					
ANR	196063	Identifier	resultToken5		195947	1					
ANR	196064	AssignmentExpression	"* resultToken5 = GetNextToken ( "" ;"" , false )"		195947	2		=			
ANR	196065	Identifier	resultToken5		195947	0					
ANR	196066	CallExpression	"GetNextToken ( "" ;"" , false )"		195947	1					
ANR	196067	Callee	GetNextToken		195947	0					
ANR	196068	Identifier	GetNextToken		195947	0					
ANR	196069	ArgumentList	""" ;"""		195947	1					
ANR	196070	Argument	""" ;"""		195947	0					
ANR	196071	PrimaryExpression	""" ;"""		195947	0					
ANR	196072	Argument	false		195947	1					
ANR	196073	Identifier	false		195947	0					
ANR	196074	IdentifierDeclStatement	"const char * resultToken6 = GetNextToken ( "" ;"" , false ) ;"	659:1:16265:16317	195947	10	True				
ANR	196075	IdentifierDecl	"* resultToken6 = GetNextToken ( "" ;"" , false )"		195947	0					
ANR	196076	IdentifierDeclType	const char *		195947	0					
ANR	196077	Identifier	resultToken6		195947	1					
ANR	196078	AssignmentExpression	"* resultToken6 = GetNextToken ( "" ;"" , false )"		195947	2		=			
ANR	196079	Identifier	resultToken6		195947	0					
ANR	196080	CallExpression	"GetNextToken ( "" ;"" , false )"		195947	1					
ANR	196081	Callee	GetNextToken		195947	0					
ANR	196082	Identifier	GetNextToken		195947	0					
ANR	196083	ArgumentList	""" ;"""		195947	1					
ANR	196084	Argument	""" ;"""		195947	0					
ANR	196085	PrimaryExpression	""" ;"""		195947	0					
ANR	196086	Argument	false		195947	1					
ANR	196087	Identifier	false		195947	0					
ANR	196088	IdentifierDeclStatement	"const char * resultToken7 = GetNextToken ( "" ;"" , false ) ;"	660:1:16320:16372	195947	11	True				
ANR	196089	IdentifierDecl	"* resultToken7 = GetNextToken ( "" ;"" , false )"		195947	0					
ANR	196090	IdentifierDeclType	const char *		195947	0					
ANR	196091	Identifier	resultToken7		195947	1					
ANR	196092	AssignmentExpression	"* resultToken7 = GetNextToken ( "" ;"" , false )"		195947	2		=			
ANR	196093	Identifier	resultToken7		195947	0					
ANR	196094	CallExpression	"GetNextToken ( "" ;"" , false )"		195947	1					
ANR	196095	Callee	GetNextToken		195947	0					
ANR	196096	Identifier	GetNextToken		195947	0					
ANR	196097	ArgumentList	""" ;"""		195947	1					
ANR	196098	Argument	""" ;"""		195947	0					
ANR	196099	PrimaryExpression	""" ;"""		195947	0					
ANR	196100	Argument	false		195947	1					
ANR	196101	Identifier	false		195947	0					
ANR	196102	IdentifierDeclStatement	"const char * resultToken8 = GetNextToken ( "" ;"" , false ) ;"	661:1:16375:16427	195947	12	True				
ANR	196103	IdentifierDecl	"* resultToken8 = GetNextToken ( "" ;"" , false )"		195947	0					
ANR	196104	IdentifierDeclType	const char *		195947	0					
ANR	196105	Identifier	resultToken8		195947	1					
ANR	196106	AssignmentExpression	"* resultToken8 = GetNextToken ( "" ;"" , false )"		195947	2		=			
ANR	196107	Identifier	resultToken8		195947	0					
ANR	196108	CallExpression	"GetNextToken ( "" ;"" , false )"		195947	1					
ANR	196109	Callee	GetNextToken		195947	0					
ANR	196110	Identifier	GetNextToken		195947	0					
ANR	196111	ArgumentList	""" ;"""		195947	1					
ANR	196112	Argument	""" ;"""		195947	0					
ANR	196113	PrimaryExpression	""" ;"""		195947	0					
ANR	196114	Argument	false		195947	1					
ANR	196115	Identifier	false		195947	0					
ANR	196116	IdentifierDeclStatement	"const char * resultToken9 = GetNextToken ( "" ;"" , false ) ;"	662:1:16430:16482	195947	13	True				
ANR	196117	IdentifierDecl	"* resultToken9 = GetNextToken ( "" ;"" , false )"		195947	0					
ANR	196118	IdentifierDeclType	const char *		195947	0					
ANR	196119	Identifier	resultToken9		195947	1					
ANR	196120	AssignmentExpression	"* resultToken9 = GetNextToken ( "" ;"" , false )"		195947	2		=			
ANR	196121	Identifier	resultToken9		195947	0					
ANR	196122	CallExpression	"GetNextToken ( "" ;"" , false )"		195947	1					
ANR	196123	Callee	GetNextToken		195947	0					
ANR	196124	Identifier	GetNextToken		195947	0					
ANR	196125	ArgumentList	""" ;"""		195947	1					
ANR	196126	Argument	""" ;"""		195947	0					
ANR	196127	PrimaryExpression	""" ;"""		195947	0					
ANR	196128	Argument	false		195947	1					
ANR	196129	Identifier	false		195947	0					
ANR	196130	IdentifierDeclStatement	"const char * resultToken10 = GetNextToken ( "" ;"" , false ) ;"	663:1:16485:16538	195947	14	True				
ANR	196131	IdentifierDecl	"* resultToken10 = GetNextToken ( "" ;"" , false )"		195947	0					
ANR	196132	IdentifierDeclType	const char *		195947	0					
ANR	196133	Identifier	resultToken10		195947	1					
ANR	196134	AssignmentExpression	"* resultToken10 = GetNextToken ( "" ;"" , false )"		195947	2		=			
ANR	196135	Identifier	resultToken10		195947	0					
ANR	196136	CallExpression	"GetNextToken ( "" ;"" , false )"		195947	1					
ANR	196137	Callee	GetNextToken		195947	0					
ANR	196138	Identifier	GetNextToken		195947	0					
ANR	196139	ArgumentList	""" ;"""		195947	1					
ANR	196140	Argument	""" ;"""		195947	0					
ANR	196141	PrimaryExpression	""" ;"""		195947	0					
ANR	196142	Argument	false		195947	1					
ANR	196143	Identifier	false		195947	0					
ANR	196144	IdentifierDeclStatement	"const char * resultToken11 = GetNextToken ( "" ;"" , false ) ;"	664:1:16541:16594	195947	15	True				
ANR	196145	IdentifierDecl	"* resultToken11 = GetNextToken ( "" ;"" , false )"		195947	0					
ANR	196146	IdentifierDeclType	const char *		195947	0					
ANR	196147	Identifier	resultToken11		195947	1					
ANR	196148	AssignmentExpression	"* resultToken11 = GetNextToken ( "" ;"" , false )"		195947	2		=			
ANR	196149	Identifier	resultToken11		195947	0					
ANR	196150	CallExpression	"GetNextToken ( "" ;"" , false )"		195947	1					
ANR	196151	Callee	GetNextToken		195947	0					
ANR	196152	Identifier	GetNextToken		195947	0					
ANR	196153	ArgumentList	""" ;"""		195947	1					
ANR	196154	Argument	""" ;"""		195947	0					
ANR	196155	PrimaryExpression	""" ;"""		195947	0					
ANR	196156	Argument	false		195947	1					
ANR	196157	Identifier	false		195947	0					
ANR	196158	ExpressionStatement	emit_input_header ( )	665:1:16597:16616	195947	16	True				
ANR	196159	CallExpression	emit_input_header ( )		195947	0					
ANR	196160	Callee	emit_input_header		195947	0					
ANR	196161	Identifier	emit_input_header		195947	0					
ANR	196162	ArgumentList			195947	1					
ANR	196163	ExpressionStatement	"emit_param ( ""delim"" , ""%s"" , "" ;"" )"	666:1:16619:16650	195947	17	True				
ANR	196164	CallExpression	"emit_param ( ""delim"" , ""%s"" , "" ;"" )"		195947	0					
ANR	196165	Callee	emit_param		195947	0					
ANR	196166	Identifier	emit_param		195947	0					
ANR	196167	ArgumentList	"""delim"""		195947	1					
ANR	196168	Argument	"""delim"""		195947	0					
ANR	196169	PrimaryExpression	"""delim"""		195947	0					
ANR	196170	Argument	"""%s"""		195947	1					
ANR	196171	PrimaryExpression	"""%s"""		195947	0					
ANR	196172	Argument	""" ;"""		195947	2					
ANR	196173	PrimaryExpression	""" ;"""		195947	0					
ANR	196174	ExpressionStatement	"emit_param ( ""skipBlankTokens"" , ""%d"" , false )"	667:1:16653:16695	195947	18	True				
ANR	196175	CallExpression	"emit_param ( ""skipBlankTokens"" , ""%d"" , false )"		195947	0					
ANR	196176	Callee	emit_param		195947	0					
ANR	196177	Identifier	emit_param		195947	0					
ANR	196178	ArgumentList	"""skipBlankTokens"""		195947	1					
ANR	196179	Argument	"""skipBlankTokens"""		195947	0					
ANR	196180	PrimaryExpression	"""skipBlankTokens"""		195947	0					
ANR	196181	Argument	"""%d"""		195947	1					
ANR	196182	PrimaryExpression	"""%d"""		195947	0					
ANR	196183	Argument	false		195947	2					
ANR	196184	Identifier	false		195947	0					
ANR	196185	ExpressionStatement	emit_output_expected_header ( )	668:1:16698:16727	195947	19	True				
ANR	196186	CallExpression	emit_output_expected_header ( )		195947	0					
ANR	196187	Callee	emit_output_expected_header		195947	0					
ANR	196188	Identifier	emit_output_expected_header		195947	0					
ANR	196189	ArgumentList			195947	1					
ANR	196190	ExpressionStatement	"emit_param ( ""Token 1"" , ""%s"" , expectedTokens [ 0 ] )"	669:1:16730:16776	195947	20	True				
ANR	196191	CallExpression	"emit_param ( ""Token 1"" , ""%s"" , expectedTokens [ 0 ] )"		195947	0					
ANR	196192	Callee	emit_param		195947	0					
ANR	196193	Identifier	emit_param		195947	0					
ANR	196194	ArgumentList	"""Token 1"""		195947	1					
ANR	196195	Argument	"""Token 1"""		195947	0					
ANR	196196	PrimaryExpression	"""Token 1"""		195947	0					
ANR	196197	Argument	"""%s"""		195947	1					
ANR	196198	PrimaryExpression	"""%s"""		195947	0					
ANR	196199	Argument	expectedTokens [ 0 ]		195947	2					
ANR	196200	ArrayIndexing	expectedTokens [ 0 ]		195947	0					
ANR	196201	Identifier	expectedTokens		195947	0					
ANR	196202	PrimaryExpression	0		195947	1					
ANR	196203	ExpressionStatement	"emit_param ( ""Token 2"" , ""%s"" , expectedTokens [ 1 ] )"	670:1:16779:16825	195947	21	True				
ANR	196204	CallExpression	"emit_param ( ""Token 2"" , ""%s"" , expectedTokens [ 1 ] )"		195947	0					
ANR	196205	Callee	emit_param		195947	0					
ANR	196206	Identifier	emit_param		195947	0					
ANR	196207	ArgumentList	"""Token 2"""		195947	1					
ANR	196208	Argument	"""Token 2"""		195947	0					
ANR	196209	PrimaryExpression	"""Token 2"""		195947	0					
ANR	196210	Argument	"""%s"""		195947	1					
ANR	196211	PrimaryExpression	"""%s"""		195947	0					
ANR	196212	Argument	expectedTokens [ 1 ]		195947	2					
ANR	196213	ArrayIndexing	expectedTokens [ 1 ]		195947	0					
ANR	196214	Identifier	expectedTokens		195947	0					
ANR	196215	PrimaryExpression	1		195947	1					
ANR	196216	ExpressionStatement	"emit_param ( ""Token 3"" , ""%s"" , expectedTokens [ 2 ] )"	671:1:16828:16874	195947	22	True				
ANR	196217	CallExpression	"emit_param ( ""Token 3"" , ""%s"" , expectedTokens [ 2 ] )"		195947	0					
ANR	196218	Callee	emit_param		195947	0					
ANR	196219	Identifier	emit_param		195947	0					
ANR	196220	ArgumentList	"""Token 3"""		195947	1					
ANR	196221	Argument	"""Token 3"""		195947	0					
ANR	196222	PrimaryExpression	"""Token 3"""		195947	0					
ANR	196223	Argument	"""%s"""		195947	1					
ANR	196224	PrimaryExpression	"""%s"""		195947	0					
ANR	196225	Argument	expectedTokens [ 2 ]		195947	2					
ANR	196226	ArrayIndexing	expectedTokens [ 2 ]		195947	0					
ANR	196227	Identifier	expectedTokens		195947	0					
ANR	196228	PrimaryExpression	2		195947	1					
ANR	196229	ExpressionStatement	"emit_param ( ""Token 4"" , ""%s"" , expectedTokens [ 3 ] )"	672:1:16877:16923	195947	23	True				
ANR	196230	CallExpression	"emit_param ( ""Token 4"" , ""%s"" , expectedTokens [ 3 ] )"		195947	0					
ANR	196231	Callee	emit_param		195947	0					
ANR	196232	Identifier	emit_param		195947	0					
ANR	196233	ArgumentList	"""Token 4"""		195947	1					
ANR	196234	Argument	"""Token 4"""		195947	0					
ANR	196235	PrimaryExpression	"""Token 4"""		195947	0					
ANR	196236	Argument	"""%s"""		195947	1					
ANR	196237	PrimaryExpression	"""%s"""		195947	0					
ANR	196238	Argument	expectedTokens [ 3 ]		195947	2					
ANR	196239	ArrayIndexing	expectedTokens [ 3 ]		195947	0					
ANR	196240	Identifier	expectedTokens		195947	0					
ANR	196241	PrimaryExpression	3		195947	1					
ANR	196242	ExpressionStatement	"emit_param ( ""Token 5"" , ""%s"" , expectedTokens [ 4 ] )"	673:1:16926:16972	195947	24	True				
ANR	196243	CallExpression	"emit_param ( ""Token 5"" , ""%s"" , expectedTokens [ 4 ] )"		195947	0					
ANR	196244	Callee	emit_param		195947	0					
ANR	196245	Identifier	emit_param		195947	0					
ANR	196246	ArgumentList	"""Token 5"""		195947	1					
ANR	196247	Argument	"""Token 5"""		195947	0					
ANR	196248	PrimaryExpression	"""Token 5"""		195947	0					
ANR	196249	Argument	"""%s"""		195947	1					
ANR	196250	PrimaryExpression	"""%s"""		195947	0					
ANR	196251	Argument	expectedTokens [ 4 ]		195947	2					
ANR	196252	ArrayIndexing	expectedTokens [ 4 ]		195947	0					
ANR	196253	Identifier	expectedTokens		195947	0					
ANR	196254	PrimaryExpression	4		195947	1					
ANR	196255	ExpressionStatement	"emit_param ( ""Token 6"" , ""%s"" , expectedTokens [ 5 ] )"	674:1:16975:17021	195947	25	True				
ANR	196256	CallExpression	"emit_param ( ""Token 6"" , ""%s"" , expectedTokens [ 5 ] )"		195947	0					
ANR	196257	Callee	emit_param		195947	0					
ANR	196258	Identifier	emit_param		195947	0					
ANR	196259	ArgumentList	"""Token 6"""		195947	1					
ANR	196260	Argument	"""Token 6"""		195947	0					
ANR	196261	PrimaryExpression	"""Token 6"""		195947	0					
ANR	196262	Argument	"""%s"""		195947	1					
ANR	196263	PrimaryExpression	"""%s"""		195947	0					
ANR	196264	Argument	expectedTokens [ 5 ]		195947	2					
ANR	196265	ArrayIndexing	expectedTokens [ 5 ]		195947	0					
ANR	196266	Identifier	expectedTokens		195947	0					
ANR	196267	PrimaryExpression	5		195947	1					
ANR	196268	ExpressionStatement	"emit_param ( ""Token 7"" , ""%s"" , expectedTokens [ 6 ] )"	675:1:17024:17070	195947	26	True				
ANR	196269	CallExpression	"emit_param ( ""Token 7"" , ""%s"" , expectedTokens [ 6 ] )"		195947	0					
ANR	196270	Callee	emit_param		195947	0					
ANR	196271	Identifier	emit_param		195947	0					
ANR	196272	ArgumentList	"""Token 7"""		195947	1					
ANR	196273	Argument	"""Token 7"""		195947	0					
ANR	196274	PrimaryExpression	"""Token 7"""		195947	0					
ANR	196275	Argument	"""%s"""		195947	1					
ANR	196276	PrimaryExpression	"""%s"""		195947	0					
ANR	196277	Argument	expectedTokens [ 6 ]		195947	2					
ANR	196278	ArrayIndexing	expectedTokens [ 6 ]		195947	0					
ANR	196279	Identifier	expectedTokens		195947	0					
ANR	196280	PrimaryExpression	6		195947	1					
ANR	196281	ExpressionStatement	"emit_param ( ""Token 8"" , ""%s"" , expectedTokens [ 7 ] )"	676:1:17073:17119	195947	27	True				
ANR	196282	CallExpression	"emit_param ( ""Token 8"" , ""%s"" , expectedTokens [ 7 ] )"		195947	0					
ANR	196283	Callee	emit_param		195947	0					
ANR	196284	Identifier	emit_param		195947	0					
ANR	196285	ArgumentList	"""Token 8"""		195947	1					
ANR	196286	Argument	"""Token 8"""		195947	0					
ANR	196287	PrimaryExpression	"""Token 8"""		195947	0					
ANR	196288	Argument	"""%s"""		195947	1					
ANR	196289	PrimaryExpression	"""%s"""		195947	0					
ANR	196290	Argument	expectedTokens [ 7 ]		195947	2					
ANR	196291	ArrayIndexing	expectedTokens [ 7 ]		195947	0					
ANR	196292	Identifier	expectedTokens		195947	0					
ANR	196293	PrimaryExpression	7		195947	1					
ANR	196294	ExpressionStatement	"emit_param ( ""Token 9"" , ""%s"" , expectedTokens [ 8 ] )"	677:1:17122:17168	195947	28	True				
ANR	196295	CallExpression	"emit_param ( ""Token 9"" , ""%s"" , expectedTokens [ 8 ] )"		195947	0					
ANR	196296	Callee	emit_param		195947	0					
ANR	196297	Identifier	emit_param		195947	0					
ANR	196298	ArgumentList	"""Token 9"""		195947	1					
ANR	196299	Argument	"""Token 9"""		195947	0					
ANR	196300	PrimaryExpression	"""Token 9"""		195947	0					
ANR	196301	Argument	"""%s"""		195947	1					
ANR	196302	PrimaryExpression	"""%s"""		195947	0					
ANR	196303	Argument	expectedTokens [ 8 ]		195947	2					
ANR	196304	ArrayIndexing	expectedTokens [ 8 ]		195947	0					
ANR	196305	Identifier	expectedTokens		195947	0					
ANR	196306	PrimaryExpression	8		195947	1					
ANR	196307	ExpressionStatement	"emit_param ( ""Token 10"" , ""%s"" , expectedTokens [ 9 ] )"	678:1:17171:17218	195947	29	True				
ANR	196308	CallExpression	"emit_param ( ""Token 10"" , ""%s"" , expectedTokens [ 9 ] )"		195947	0					
ANR	196309	Callee	emit_param		195947	0					
ANR	196310	Identifier	emit_param		195947	0					
ANR	196311	ArgumentList	"""Token 10"""		195947	1					
ANR	196312	Argument	"""Token 10"""		195947	0					
ANR	196313	PrimaryExpression	"""Token 10"""		195947	0					
ANR	196314	Argument	"""%s"""		195947	1					
ANR	196315	PrimaryExpression	"""%s"""		195947	0					
ANR	196316	Argument	expectedTokens [ 9 ]		195947	2					
ANR	196317	ArrayIndexing	expectedTokens [ 9 ]		195947	0					
ANR	196318	Identifier	expectedTokens		195947	0					
ANR	196319	PrimaryExpression	9		195947	1					
ANR	196320	ExpressionStatement	"emit_param ( ""Token 11"" , ""%s"" , expectedTokens [ 10 ] )"	679:1:17221:17269	195947	30	True				
ANR	196321	CallExpression	"emit_param ( ""Token 11"" , ""%s"" , expectedTokens [ 10 ] )"		195947	0					
ANR	196322	Callee	emit_param		195947	0					
ANR	196323	Identifier	emit_param		195947	0					
ANR	196324	ArgumentList	"""Token 11"""		195947	1					
ANR	196325	Argument	"""Token 11"""		195947	0					
ANR	196326	PrimaryExpression	"""Token 11"""		195947	0					
ANR	196327	Argument	"""%s"""		195947	1					
ANR	196328	PrimaryExpression	"""%s"""		195947	0					
ANR	196329	Argument	expectedTokens [ 10 ]		195947	2					
ANR	196330	ArrayIndexing	expectedTokens [ 10 ]		195947	0					
ANR	196331	Identifier	expectedTokens		195947	0					
ANR	196332	PrimaryExpression	10		195947	1					
ANR	196333	ExpressionStatement	"emit_param ( ""Token 12"" , ""%s"" , expectedTokens [ 11 ] )"	680:1:17272:17320	195947	31	True				
ANR	196334	CallExpression	"emit_param ( ""Token 12"" , ""%s"" , expectedTokens [ 11 ] )"		195947	0					
ANR	196335	Callee	emit_param		195947	0					
ANR	196336	Identifier	emit_param		195947	0					
ANR	196337	ArgumentList	"""Token 12"""		195947	1					
ANR	196338	Argument	"""Token 12"""		195947	0					
ANR	196339	PrimaryExpression	"""Token 12"""		195947	0					
ANR	196340	Argument	"""%s"""		195947	1					
ANR	196341	PrimaryExpression	"""%s"""		195947	0					
ANR	196342	Argument	expectedTokens [ 11 ]		195947	2					
ANR	196343	ArrayIndexing	expectedTokens [ 11 ]		195947	0					
ANR	196344	Identifier	expectedTokens		195947	0					
ANR	196345	PrimaryExpression	11		195947	1					
ANR	196346	ExpressionStatement	emit_output_actual_header ( )	681:1:17323:17350	195947	32	True				
ANR	196347	CallExpression	emit_output_actual_header ( )		195947	0					
ANR	196348	Callee	emit_output_actual_header		195947	0					
ANR	196349	Identifier	emit_output_actual_header		195947	0					
ANR	196350	ArgumentList			195947	1					
ANR	196351	ExpressionStatement	"emit_param ( ""Token 1"" , ""%s"" , resultToken0 )"	682:1:17353:17394	195947	33	True				
ANR	196352	CallExpression	"emit_param ( ""Token 1"" , ""%s"" , resultToken0 )"		195947	0					
ANR	196353	Callee	emit_param		195947	0					
ANR	196354	Identifier	emit_param		195947	0					
ANR	196355	ArgumentList	"""Token 1"""		195947	1					
ANR	196356	Argument	"""Token 1"""		195947	0					
ANR	196357	PrimaryExpression	"""Token 1"""		195947	0					
ANR	196358	Argument	"""%s"""		195947	1					
ANR	196359	PrimaryExpression	"""%s"""		195947	0					
ANR	196360	Argument	resultToken0		195947	2					
ANR	196361	Identifier	resultToken0		195947	0					
ANR	196362	ExpressionStatement	"emit_param ( ""Token 2"" , ""%s"" , resultToken1 )"	683:1:17397:17438	195947	34	True				
ANR	196363	CallExpression	"emit_param ( ""Token 2"" , ""%s"" , resultToken1 )"		195947	0					
ANR	196364	Callee	emit_param		195947	0					
ANR	196365	Identifier	emit_param		195947	0					
ANR	196366	ArgumentList	"""Token 2"""		195947	1					
ANR	196367	Argument	"""Token 2"""		195947	0					
ANR	196368	PrimaryExpression	"""Token 2"""		195947	0					
ANR	196369	Argument	"""%s"""		195947	1					
ANR	196370	PrimaryExpression	"""%s"""		195947	0					
ANR	196371	Argument	resultToken1		195947	2					
ANR	196372	Identifier	resultToken1		195947	0					
ANR	196373	ExpressionStatement	"emit_param ( ""Token 3"" , ""%s"" , resultToken2 )"	684:1:17441:17482	195947	35	True				
ANR	196374	CallExpression	"emit_param ( ""Token 3"" , ""%s"" , resultToken2 )"		195947	0					
ANR	196375	Callee	emit_param		195947	0					
ANR	196376	Identifier	emit_param		195947	0					
ANR	196377	ArgumentList	"""Token 3"""		195947	1					
ANR	196378	Argument	"""Token 3"""		195947	0					
ANR	196379	PrimaryExpression	"""Token 3"""		195947	0					
ANR	196380	Argument	"""%s"""		195947	1					
ANR	196381	PrimaryExpression	"""%s"""		195947	0					
ANR	196382	Argument	resultToken2		195947	2					
ANR	196383	Identifier	resultToken2		195947	0					
ANR	196384	ExpressionStatement	"emit_param ( ""Token 4"" , ""%s"" , resultToken3 )"	685:1:17485:17526	195947	36	True				
ANR	196385	CallExpression	"emit_param ( ""Token 4"" , ""%s"" , resultToken3 )"		195947	0					
ANR	196386	Callee	emit_param		195947	0					
ANR	196387	Identifier	emit_param		195947	0					
ANR	196388	ArgumentList	"""Token 4"""		195947	1					
ANR	196389	Argument	"""Token 4"""		195947	0					
ANR	196390	PrimaryExpression	"""Token 4"""		195947	0					
ANR	196391	Argument	"""%s"""		195947	1					
ANR	196392	PrimaryExpression	"""%s"""		195947	0					
ANR	196393	Argument	resultToken3		195947	2					
ANR	196394	Identifier	resultToken3		195947	0					
ANR	196395	ExpressionStatement	"emit_param ( ""Token 5"" , ""%s"" , resultToken4 )"	686:1:17529:17570	195947	37	True				
ANR	196396	CallExpression	"emit_param ( ""Token 5"" , ""%s"" , resultToken4 )"		195947	0					
ANR	196397	Callee	emit_param		195947	0					
ANR	196398	Identifier	emit_param		195947	0					
ANR	196399	ArgumentList	"""Token 5"""		195947	1					
ANR	196400	Argument	"""Token 5"""		195947	0					
ANR	196401	PrimaryExpression	"""Token 5"""		195947	0					
ANR	196402	Argument	"""%s"""		195947	1					
ANR	196403	PrimaryExpression	"""%s"""		195947	0					
ANR	196404	Argument	resultToken4		195947	2					
ANR	196405	Identifier	resultToken4		195947	0					
ANR	196406	ExpressionStatement	"emit_param ( ""Token 6"" , ""%s"" , resultToken5 )"	687:1:17573:17614	195947	38	True				
ANR	196407	CallExpression	"emit_param ( ""Token 6"" , ""%s"" , resultToken5 )"		195947	0					
ANR	196408	Callee	emit_param		195947	0					
ANR	196409	Identifier	emit_param		195947	0					
ANR	196410	ArgumentList	"""Token 6"""		195947	1					
ANR	196411	Argument	"""Token 6"""		195947	0					
ANR	196412	PrimaryExpression	"""Token 6"""		195947	0					
ANR	196413	Argument	"""%s"""		195947	1					
ANR	196414	PrimaryExpression	"""%s"""		195947	0					
ANR	196415	Argument	resultToken5		195947	2					
ANR	196416	Identifier	resultToken5		195947	0					
ANR	196417	ExpressionStatement	"emit_param ( ""Token 7"" , ""%s"" , resultToken6 )"	688:1:17617:17658	195947	39	True				
ANR	196418	CallExpression	"emit_param ( ""Token 7"" , ""%s"" , resultToken6 )"		195947	0					
ANR	196419	Callee	emit_param		195947	0					
ANR	196420	Identifier	emit_param		195947	0					
ANR	196421	ArgumentList	"""Token 7"""		195947	1					
ANR	196422	Argument	"""Token 7"""		195947	0					
ANR	196423	PrimaryExpression	"""Token 7"""		195947	0					
ANR	196424	Argument	"""%s"""		195947	1					
ANR	196425	PrimaryExpression	"""%s"""		195947	0					
ANR	196426	Argument	resultToken6		195947	2					
ANR	196427	Identifier	resultToken6		195947	0					
ANR	196428	ExpressionStatement	"emit_param ( ""Token 8"" , ""%s"" , resultToken7 )"	689:1:17661:17702	195947	40	True				
ANR	196429	CallExpression	"emit_param ( ""Token 8"" , ""%s"" , resultToken7 )"		195947	0					
ANR	196430	Callee	emit_param		195947	0					
ANR	196431	Identifier	emit_param		195947	0					
ANR	196432	ArgumentList	"""Token 8"""		195947	1					
ANR	196433	Argument	"""Token 8"""		195947	0					
ANR	196434	PrimaryExpression	"""Token 8"""		195947	0					
ANR	196435	Argument	"""%s"""		195947	1					
ANR	196436	PrimaryExpression	"""%s"""		195947	0					
ANR	196437	Argument	resultToken7		195947	2					
ANR	196438	Identifier	resultToken7		195947	0					
ANR	196439	ExpressionStatement	"emit_param ( ""Token 9"" , ""%s"" , resultToken8 )"	690:1:17705:17746	195947	41	True				
ANR	196440	CallExpression	"emit_param ( ""Token 9"" , ""%s"" , resultToken8 )"		195947	0					
ANR	196441	Callee	emit_param		195947	0					
ANR	196442	Identifier	emit_param		195947	0					
ANR	196443	ArgumentList	"""Token 9"""		195947	1					
ANR	196444	Argument	"""Token 9"""		195947	0					
ANR	196445	PrimaryExpression	"""Token 9"""		195947	0					
ANR	196446	Argument	"""%s"""		195947	1					
ANR	196447	PrimaryExpression	"""%s"""		195947	0					
ANR	196448	Argument	resultToken8		195947	2					
ANR	196449	Identifier	resultToken8		195947	0					
ANR	196450	ExpressionStatement	"emit_param ( ""Token 10"" , ""%s"" , resultToken9 )"	691:1:17749:17791	195947	42	True				
ANR	196451	CallExpression	"emit_param ( ""Token 10"" , ""%s"" , resultToken9 )"		195947	0					
ANR	196452	Callee	emit_param		195947	0					
ANR	196453	Identifier	emit_param		195947	0					
ANR	196454	ArgumentList	"""Token 10"""		195947	1					
ANR	196455	Argument	"""Token 10"""		195947	0					
ANR	196456	PrimaryExpression	"""Token 10"""		195947	0					
ANR	196457	Argument	"""%s"""		195947	1					
ANR	196458	PrimaryExpression	"""%s"""		195947	0					
ANR	196459	Argument	resultToken9		195947	2					
ANR	196460	Identifier	resultToken9		195947	0					
ANR	196461	ExpressionStatement	"emit_param ( ""Token 11"" , ""%s"" , resultToken10 )"	692:1:17794:17837	195947	43	True				
ANR	196462	CallExpression	"emit_param ( ""Token 11"" , ""%s"" , resultToken10 )"		195947	0					
ANR	196463	Callee	emit_param		195947	0					
ANR	196464	Identifier	emit_param		195947	0					
ANR	196465	ArgumentList	"""Token 11"""		195947	1					
ANR	196466	Argument	"""Token 11"""		195947	0					
ANR	196467	PrimaryExpression	"""Token 11"""		195947	0					
ANR	196468	Argument	"""%s"""		195947	1					
ANR	196469	PrimaryExpression	"""%s"""		195947	0					
ANR	196470	Argument	resultToken10		195947	2					
ANR	196471	Identifier	resultToken10		195947	0					
ANR	196472	ExpressionStatement	"emit_param ( ""Token 12"" , ""%s"" , resultToken11 )"	693:1:17840:17883	195947	44	True				
ANR	196473	CallExpression	"emit_param ( ""Token 12"" , ""%s"" , resultToken11 )"		195947	0					
ANR	196474	Callee	emit_param		195947	0					
ANR	196475	Identifier	emit_param		195947	0					
ANR	196476	ArgumentList	"""Token 12"""		195947	1					
ANR	196477	Argument	"""Token 12"""		195947	0					
ANR	196478	PrimaryExpression	"""Token 12"""		195947	0					
ANR	196479	Argument	"""%s"""		195947	1					
ANR	196480	PrimaryExpression	"""%s"""		195947	0					
ANR	196481	Argument	resultToken11		195947	2					
ANR	196482	Identifier	resultToken11		195947	0					
ANR	196483	IfStatement	"if ( strcmp ( expectedTokens [ 0 ] , resultToken0 ) != MATCH || strcmp ( expectedTokens [ 1 ] , resultToken1 ) != MATCH || strcmp ( expectedTokens [ 2 ] , resultToken2 ) != MATCH || strcmp ( expectedTokens [ 3 ] , resultToken3 ) != MATCH || strcmp ( expectedTokens [ 4 ] , resultToken4 ) != MATCH || strcmp ( expectedTokens [ 5 ] , resultToken5 ) != MATCH || strcmp ( expectedTokens [ 6 ] , resultToken6 ) != MATCH || strcmp ( expectedTokens [ 7 ] , resultToken7 ) != MATCH || strcmp ( expectedTokens [ 8 ] , resultToken8 ) != MATCH || strcmp ( expectedTokens [ 9 ] , resultToken9 ) != MATCH || strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH || strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH )"		195947	45					
ANR	196484	Condition	"strcmp ( expectedTokens [ 0 ] , resultToken0 ) != MATCH || strcmp ( expectedTokens [ 1 ] , resultToken1 ) != MATCH || strcmp ( expectedTokens [ 2 ] , resultToken2 ) != MATCH || strcmp ( expectedTokens [ 3 ] , resultToken3 ) != MATCH || strcmp ( expectedTokens [ 4 ] , resultToken4 ) != MATCH || strcmp ( expectedTokens [ 5 ] , resultToken5 ) != MATCH || strcmp ( expectedTokens [ 6 ] , resultToken6 ) != MATCH || strcmp ( expectedTokens [ 7 ] , resultToken7 ) != MATCH || strcmp ( expectedTokens [ 8 ] , resultToken8 ) != MATCH || strcmp ( expectedTokens [ 9 ] , resultToken9 ) != MATCH || strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH || strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH"	694:4:17889:18546	195947	0	True				
ANR	196485	OrExpression	"strcmp ( expectedTokens [ 0 ] , resultToken0 ) != MATCH || strcmp ( expectedTokens [ 1 ] , resultToken1 ) != MATCH || strcmp ( expectedTokens [ 2 ] , resultToken2 ) != MATCH || strcmp ( expectedTokens [ 3 ] , resultToken3 ) != MATCH || strcmp ( expectedTokens [ 4 ] , resultToken4 ) != MATCH || strcmp ( expectedTokens [ 5 ] , resultToken5 ) != MATCH || strcmp ( expectedTokens [ 6 ] , resultToken6 ) != MATCH || strcmp ( expectedTokens [ 7 ] , resultToken7 ) != MATCH || strcmp ( expectedTokens [ 8 ] , resultToken8 ) != MATCH || strcmp ( expectedTokens [ 9 ] , resultToken9 ) != MATCH || strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH || strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH"		195947	0		||			
ANR	196486	EqualityExpression	"strcmp ( expectedTokens [ 0 ] , resultToken0 ) != MATCH"		195947	0		!=			
ANR	196487	CallExpression	"strcmp ( expectedTokens [ 0 ] , resultToken0 )"		195947	0					
ANR	196488	Callee	strcmp		195947	0					
ANR	196489	Identifier	strcmp		195947	0					
ANR	196490	ArgumentList	expectedTokens [ 0 ]		195947	1					
ANR	196491	Argument	expectedTokens [ 0 ]		195947	0					
ANR	196492	ArrayIndexing	expectedTokens [ 0 ]		195947	0					
ANR	196493	Identifier	expectedTokens		195947	0					
ANR	196494	PrimaryExpression	0		195947	1					
ANR	196495	Argument	resultToken0		195947	1					
ANR	196496	Identifier	resultToken0		195947	0					
ANR	196497	Identifier	MATCH		195947	1					
ANR	196498	OrExpression	"strcmp ( expectedTokens [ 1 ] , resultToken1 ) != MATCH || strcmp ( expectedTokens [ 2 ] , resultToken2 ) != MATCH || strcmp ( expectedTokens [ 3 ] , resultToken3 ) != MATCH || strcmp ( expectedTokens [ 4 ] , resultToken4 ) != MATCH || strcmp ( expectedTokens [ 5 ] , resultToken5 ) != MATCH || strcmp ( expectedTokens [ 6 ] , resultToken6 ) != MATCH || strcmp ( expectedTokens [ 7 ] , resultToken7 ) != MATCH || strcmp ( expectedTokens [ 8 ] , resultToken8 ) != MATCH || strcmp ( expectedTokens [ 9 ] , resultToken9 ) != MATCH || strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH || strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH"		195947	1		||			
ANR	196499	EqualityExpression	"strcmp ( expectedTokens [ 1 ] , resultToken1 ) != MATCH"		195947	0		!=			
ANR	196500	CallExpression	"strcmp ( expectedTokens [ 1 ] , resultToken1 )"		195947	0					
ANR	196501	Callee	strcmp		195947	0					
ANR	196502	Identifier	strcmp		195947	0					
ANR	196503	ArgumentList	expectedTokens [ 1 ]		195947	1					
ANR	196504	Argument	expectedTokens [ 1 ]		195947	0					
ANR	196505	ArrayIndexing	expectedTokens [ 1 ]		195947	0					
ANR	196506	Identifier	expectedTokens		195947	0					
ANR	196507	PrimaryExpression	1		195947	1					
ANR	196508	Argument	resultToken1		195947	1					
ANR	196509	Identifier	resultToken1		195947	0					
ANR	196510	Identifier	MATCH		195947	1					
ANR	196511	OrExpression	"strcmp ( expectedTokens [ 2 ] , resultToken2 ) != MATCH || strcmp ( expectedTokens [ 3 ] , resultToken3 ) != MATCH || strcmp ( expectedTokens [ 4 ] , resultToken4 ) != MATCH || strcmp ( expectedTokens [ 5 ] , resultToken5 ) != MATCH || strcmp ( expectedTokens [ 6 ] , resultToken6 ) != MATCH || strcmp ( expectedTokens [ 7 ] , resultToken7 ) != MATCH || strcmp ( expectedTokens [ 8 ] , resultToken8 ) != MATCH || strcmp ( expectedTokens [ 9 ] , resultToken9 ) != MATCH || strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH || strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH"		195947	1		||			
ANR	196512	EqualityExpression	"strcmp ( expectedTokens [ 2 ] , resultToken2 ) != MATCH"		195947	0		!=			
ANR	196513	CallExpression	"strcmp ( expectedTokens [ 2 ] , resultToken2 )"		195947	0					
ANR	196514	Callee	strcmp		195947	0					
ANR	196515	Identifier	strcmp		195947	0					
ANR	196516	ArgumentList	expectedTokens [ 2 ]		195947	1					
ANR	196517	Argument	expectedTokens [ 2 ]		195947	0					
ANR	196518	ArrayIndexing	expectedTokens [ 2 ]		195947	0					
ANR	196519	Identifier	expectedTokens		195947	0					
ANR	196520	PrimaryExpression	2		195947	1					
ANR	196521	Argument	resultToken2		195947	1					
ANR	196522	Identifier	resultToken2		195947	0					
ANR	196523	Identifier	MATCH		195947	1					
ANR	196524	OrExpression	"strcmp ( expectedTokens [ 3 ] , resultToken3 ) != MATCH || strcmp ( expectedTokens [ 4 ] , resultToken4 ) != MATCH || strcmp ( expectedTokens [ 5 ] , resultToken5 ) != MATCH || strcmp ( expectedTokens [ 6 ] , resultToken6 ) != MATCH || strcmp ( expectedTokens [ 7 ] , resultToken7 ) != MATCH || strcmp ( expectedTokens [ 8 ] , resultToken8 ) != MATCH || strcmp ( expectedTokens [ 9 ] , resultToken9 ) != MATCH || strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH || strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH"		195947	1		||			
ANR	196525	EqualityExpression	"strcmp ( expectedTokens [ 3 ] , resultToken3 ) != MATCH"		195947	0		!=			
ANR	196526	CallExpression	"strcmp ( expectedTokens [ 3 ] , resultToken3 )"		195947	0					
ANR	196527	Callee	strcmp		195947	0					
ANR	196528	Identifier	strcmp		195947	0					
ANR	196529	ArgumentList	expectedTokens [ 3 ]		195947	1					
ANR	196530	Argument	expectedTokens [ 3 ]		195947	0					
ANR	196531	ArrayIndexing	expectedTokens [ 3 ]		195947	0					
ANR	196532	Identifier	expectedTokens		195947	0					
ANR	196533	PrimaryExpression	3		195947	1					
ANR	196534	Argument	resultToken3		195947	1					
ANR	196535	Identifier	resultToken3		195947	0					
ANR	196536	Identifier	MATCH		195947	1					
ANR	196537	OrExpression	"strcmp ( expectedTokens [ 4 ] , resultToken4 ) != MATCH || strcmp ( expectedTokens [ 5 ] , resultToken5 ) != MATCH || strcmp ( expectedTokens [ 6 ] , resultToken6 ) != MATCH || strcmp ( expectedTokens [ 7 ] , resultToken7 ) != MATCH || strcmp ( expectedTokens [ 8 ] , resultToken8 ) != MATCH || strcmp ( expectedTokens [ 9 ] , resultToken9 ) != MATCH || strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH || strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH"		195947	1		||			
ANR	196538	EqualityExpression	"strcmp ( expectedTokens [ 4 ] , resultToken4 ) != MATCH"		195947	0		!=			
ANR	196539	CallExpression	"strcmp ( expectedTokens [ 4 ] , resultToken4 )"		195947	0					
ANR	196540	Callee	strcmp		195947	0					
ANR	196541	Identifier	strcmp		195947	0					
ANR	196542	ArgumentList	expectedTokens [ 4 ]		195947	1					
ANR	196543	Argument	expectedTokens [ 4 ]		195947	0					
ANR	196544	ArrayIndexing	expectedTokens [ 4 ]		195947	0					
ANR	196545	Identifier	expectedTokens		195947	0					
ANR	196546	PrimaryExpression	4		195947	1					
ANR	196547	Argument	resultToken4		195947	1					
ANR	196548	Identifier	resultToken4		195947	0					
ANR	196549	Identifier	MATCH		195947	1					
ANR	196550	OrExpression	"strcmp ( expectedTokens [ 5 ] , resultToken5 ) != MATCH || strcmp ( expectedTokens [ 6 ] , resultToken6 ) != MATCH || strcmp ( expectedTokens [ 7 ] , resultToken7 ) != MATCH || strcmp ( expectedTokens [ 8 ] , resultToken8 ) != MATCH || strcmp ( expectedTokens [ 9 ] , resultToken9 ) != MATCH || strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH || strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH"		195947	1		||			
ANR	196551	EqualityExpression	"strcmp ( expectedTokens [ 5 ] , resultToken5 ) != MATCH"		195947	0		!=			
ANR	196552	CallExpression	"strcmp ( expectedTokens [ 5 ] , resultToken5 )"		195947	0					
ANR	196553	Callee	strcmp		195947	0					
ANR	196554	Identifier	strcmp		195947	0					
ANR	196555	ArgumentList	expectedTokens [ 5 ]		195947	1					
ANR	196556	Argument	expectedTokens [ 5 ]		195947	0					
ANR	196557	ArrayIndexing	expectedTokens [ 5 ]		195947	0					
ANR	196558	Identifier	expectedTokens		195947	0					
ANR	196559	PrimaryExpression	5		195947	1					
ANR	196560	Argument	resultToken5		195947	1					
ANR	196561	Identifier	resultToken5		195947	0					
ANR	196562	Identifier	MATCH		195947	1					
ANR	196563	OrExpression	"strcmp ( expectedTokens [ 6 ] , resultToken6 ) != MATCH || strcmp ( expectedTokens [ 7 ] , resultToken7 ) != MATCH || strcmp ( expectedTokens [ 8 ] , resultToken8 ) != MATCH || strcmp ( expectedTokens [ 9 ] , resultToken9 ) != MATCH || strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH || strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH"		195947	1		||			
ANR	196564	EqualityExpression	"strcmp ( expectedTokens [ 6 ] , resultToken6 ) != MATCH"		195947	0		!=			
ANR	196565	CallExpression	"strcmp ( expectedTokens [ 6 ] , resultToken6 )"		195947	0					
ANR	196566	Callee	strcmp		195947	0					
ANR	196567	Identifier	strcmp		195947	0					
ANR	196568	ArgumentList	expectedTokens [ 6 ]		195947	1					
ANR	196569	Argument	expectedTokens [ 6 ]		195947	0					
ANR	196570	ArrayIndexing	expectedTokens [ 6 ]		195947	0					
ANR	196571	Identifier	expectedTokens		195947	0					
ANR	196572	PrimaryExpression	6		195947	1					
ANR	196573	Argument	resultToken6		195947	1					
ANR	196574	Identifier	resultToken6		195947	0					
ANR	196575	Identifier	MATCH		195947	1					
ANR	196576	OrExpression	"strcmp ( expectedTokens [ 7 ] , resultToken7 ) != MATCH || strcmp ( expectedTokens [ 8 ] , resultToken8 ) != MATCH || strcmp ( expectedTokens [ 9 ] , resultToken9 ) != MATCH || strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH || strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH"		195947	1		||			
ANR	196577	EqualityExpression	"strcmp ( expectedTokens [ 7 ] , resultToken7 ) != MATCH"		195947	0		!=			
ANR	196578	CallExpression	"strcmp ( expectedTokens [ 7 ] , resultToken7 )"		195947	0					
ANR	196579	Callee	strcmp		195947	0					
ANR	196580	Identifier	strcmp		195947	0					
ANR	196581	ArgumentList	expectedTokens [ 7 ]		195947	1					
ANR	196582	Argument	expectedTokens [ 7 ]		195947	0					
ANR	196583	ArrayIndexing	expectedTokens [ 7 ]		195947	0					
ANR	196584	Identifier	expectedTokens		195947	0					
ANR	196585	PrimaryExpression	7		195947	1					
ANR	196586	Argument	resultToken7		195947	1					
ANR	196587	Identifier	resultToken7		195947	0					
ANR	196588	Identifier	MATCH		195947	1					
ANR	196589	OrExpression	"strcmp ( expectedTokens [ 8 ] , resultToken8 ) != MATCH || strcmp ( expectedTokens [ 9 ] , resultToken9 ) != MATCH || strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH || strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH"		195947	1		||			
ANR	196590	EqualityExpression	"strcmp ( expectedTokens [ 8 ] , resultToken8 ) != MATCH"		195947	0		!=			
ANR	196591	CallExpression	"strcmp ( expectedTokens [ 8 ] , resultToken8 )"		195947	0					
ANR	196592	Callee	strcmp		195947	0					
ANR	196593	Identifier	strcmp		195947	0					
ANR	196594	ArgumentList	expectedTokens [ 8 ]		195947	1					
ANR	196595	Argument	expectedTokens [ 8 ]		195947	0					
ANR	196596	ArrayIndexing	expectedTokens [ 8 ]		195947	0					
ANR	196597	Identifier	expectedTokens		195947	0					
ANR	196598	PrimaryExpression	8		195947	1					
ANR	196599	Argument	resultToken8		195947	1					
ANR	196600	Identifier	resultToken8		195947	0					
ANR	196601	Identifier	MATCH		195947	1					
ANR	196602	OrExpression	"strcmp ( expectedTokens [ 9 ] , resultToken9 ) != MATCH || strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH || strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH"		195947	1		||			
ANR	196603	EqualityExpression	"strcmp ( expectedTokens [ 9 ] , resultToken9 ) != MATCH"		195947	0		!=			
ANR	196604	CallExpression	"strcmp ( expectedTokens [ 9 ] , resultToken9 )"		195947	0					
ANR	196605	Callee	strcmp		195947	0					
ANR	196606	Identifier	strcmp		195947	0					
ANR	196607	ArgumentList	expectedTokens [ 9 ]		195947	1					
ANR	196608	Argument	expectedTokens [ 9 ]		195947	0					
ANR	196609	ArrayIndexing	expectedTokens [ 9 ]		195947	0					
ANR	196610	Identifier	expectedTokens		195947	0					
ANR	196611	PrimaryExpression	9		195947	1					
ANR	196612	Argument	resultToken9		195947	1					
ANR	196613	Identifier	resultToken9		195947	0					
ANR	196614	Identifier	MATCH		195947	1					
ANR	196615	OrExpression	"strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH || strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH"		195947	1		||			
ANR	196616	EqualityExpression	"strcmp ( expectedTokens [ 10 ] , resultToken10 ) != MATCH"		195947	0		!=			
ANR	196617	CallExpression	"strcmp ( expectedTokens [ 10 ] , resultToken10 )"		195947	0					
ANR	196618	Callee	strcmp		195947	0					
ANR	196619	Identifier	strcmp		195947	0					
ANR	196620	ArgumentList	expectedTokens [ 10 ]		195947	1					
ANR	196621	Argument	expectedTokens [ 10 ]		195947	0					
ANR	196622	ArrayIndexing	expectedTokens [ 10 ]		195947	0					
ANR	196623	Identifier	expectedTokens		195947	0					
ANR	196624	PrimaryExpression	10		195947	1					
ANR	196625	Argument	resultToken10		195947	1					
ANR	196626	Identifier	resultToken10		195947	0					
ANR	196627	Identifier	MATCH		195947	1					
ANR	196628	EqualityExpression	"strcmp ( expectedTokens [ 11 ] , resultToken11 ) != MATCH"		195947	1		!=			
ANR	196629	CallExpression	"strcmp ( expectedTokens [ 11 ] , resultToken11 )"		195947	0					
ANR	196630	Callee	strcmp		195947	0					
ANR	196631	Identifier	strcmp		195947	0					
ANR	196632	ArgumentList	expectedTokens [ 11 ]		195947	1					
ANR	196633	Argument	expectedTokens [ 11 ]		195947	0					
ANR	196634	ArrayIndexing	expectedTokens [ 11 ]		195947	0					
ANR	196635	Identifier	expectedTokens		195947	0					
ANR	196636	PrimaryExpression	11		195947	1					
ANR	196637	Argument	resultToken11		195947	1					
ANR	196638	Identifier	resultToken11		195947	0					
ANR	196639	Identifier	MATCH		195947	1					
ANR	196640	CompoundStatement		59:55:2861:2861	195947	1					
ANR	196641	ExpressionStatement	FAIL	706:2:18553:18557	195947	0	True				
ANR	196642	Identifier	FAIL		195947	0					
ANR	196643	ExpressionStatement	PASS	708:1:18563:18567	195947	46	True				
ANR	196644	Identifier	PASS		195947	0					
ANR	196645	ReturnType	static bool		195947	1					
ANR	196646	Identifier	tokenize_multiple_calls		195947	2					
ANR	196647	ParameterList			195947	3					
ANR	196648	CFGEntryNode	ENTRY		195947		True				
ANR	196649	CFGExitNode	EXIT		195947		True				
ANR	196650	Symbol	expectedTokens		195947						
ANR	196651	Symbol	strcmp		195947						
ANR	196652	Symbol	a		195947						
ANR	196653	Symbol	resultToken1		195947						
ANR	196654	Symbol	resultToken0		195947						
ANR	196655	Symbol	resultToken3		195947						
ANR	196656	Symbol	* expectedTokens		195947						
ANR	196657	Symbol	resultToken2		195947						
ANR	196658	Symbol	false		195947						
ANR	196659	Symbol	resultToken5		195947						
ANR	196660	Symbol	resultToken4		195947						
ANR	196661	Symbol	resultToken7		195947						
ANR	196662	Symbol	resultToken6		195947						
ANR	196663	Symbol	resultToken9		195947						
ANR	196664	Symbol	resultToken8		195947						
ANR	196665	Symbol	resultToken11		195947						
ANR	196666	Symbol	resultToken10		195947						
ANR	196667	Symbol	GetNextToken		195947						
ANR	196668	Symbol	MATCH		195947						
ANR	196669	Function	tokenize_end	711:0:18572:19009							
ANR	196670	FunctionDef	tokenize_end ()		196669	0					
ANR	196671	CompoundStatement		711:27:18599:19009	196669	0					
ANR	196672	ExpressionStatement	"emit_test ( ""Test GetNextToken() after getting to the end."" )"	712:1:18602:18660	196669	0	True				
ANR	196673	CallExpression	"emit_test ( ""Test GetNextToken() after getting to the end."" )"		196669	0					
ANR	196674	Callee	emit_test		196669	0					
ANR	196675	Identifier	emit_test		196669	0					
ANR	196676	ArgumentList	"""Test GetNextToken() after getting to the end."""		196669	1					
ANR	196677	Argument	"""Test GetNextToken() after getting to the end."""		196669	0					
ANR	196678	PrimaryExpression	"""Test GetNextToken() after getting to the end."""		196669	0					
ANR	196679	IdentifierDeclStatement	"const char * a = ""foo;"" ;"	713:1:18663:18685	196669	1	True				
ANR	196680	IdentifierDecl	"* a = ""foo;"""		196669	0					
ANR	196681	IdentifierDeclType	const char *		196669	0					
ANR	196682	Identifier	a		196669	1					
ANR	196683	AssignmentExpression	"* a = ""foo;"""		196669	2		=			
ANR	196684	Identifier	a		196669	0					
ANR	196685	PrimaryExpression	"""foo;"""		196669	1					
ANR	196686	ExpressionStatement	Tokenize ( a )	714:1:18688:18699	196669	2	True				
ANR	196687	CallExpression	Tokenize ( a )		196669	0					
ANR	196688	Callee	Tokenize		196669	0					
ANR	196689	Identifier	Tokenize		196669	0					
ANR	196690	ArgumentList	a		196669	1					
ANR	196691	Argument	a		196669	0					
ANR	196692	Identifier	a		196669	0					
ANR	196693	IdentifierDeclStatement	"const char * tok = GetNextToken ( "";"" , false ) ;"	715:1:18702:18744	196669	3	True				
ANR	196694	IdentifierDecl	"* tok = GetNextToken ( "";"" , false )"		196669	0					
ANR	196695	IdentifierDeclType	const char *		196669	0					
ANR	196696	Identifier	tok		196669	1					
ANR	196697	AssignmentExpression	"* tok = GetNextToken ( "";"" , false )"		196669	2		=			
ANR	196698	Identifier	tok		196669	0					
ANR	196699	CallExpression	"GetNextToken ( "";"" , false )"		196669	1					
ANR	196700	Callee	GetNextToken		196669	0					
ANR	196701	Identifier	GetNextToken		196669	0					
ANR	196702	ArgumentList	""";"""		196669	1					
ANR	196703	Argument	""";"""		196669	0					
ANR	196704	PrimaryExpression	""";"""		196669	0					
ANR	196705	Argument	false		196669	1					
ANR	196706	Identifier	false		196669	0					
ANR	196707	ExpressionStatement	"tok = GetNextToken ( "";"" , false )"	716:1:18747:18777	196669	4	True				
ANR	196708	AssignmentExpression	"tok = GetNextToken ( "";"" , false )"		196669	0		=			
ANR	196709	Identifier	tok		196669	0					
ANR	196710	CallExpression	"GetNextToken ( "";"" , false )"		196669	1					
ANR	196711	Callee	GetNextToken		196669	0					
ANR	196712	Identifier	GetNextToken		196669	0					
ANR	196713	ArgumentList	""";"""		196669	1					
ANR	196714	Argument	""";"""		196669	0					
ANR	196715	PrimaryExpression	""";"""		196669	0					
ANR	196716	Argument	false		196669	1					
ANR	196717	Identifier	false		196669	0					
ANR	196718	ExpressionStatement	"tok = GetNextToken ( "";"" , false )"	717:1:18780:18810	196669	5	True				
ANR	196719	AssignmentExpression	"tok = GetNextToken ( "";"" , false )"		196669	0		=			
ANR	196720	Identifier	tok		196669	0					
ANR	196721	CallExpression	"GetNextToken ( "";"" , false )"		196669	1					
ANR	196722	Callee	GetNextToken		196669	0					
ANR	196723	Identifier	GetNextToken		196669	0					
ANR	196724	ArgumentList	""";"""		196669	1					
ANR	196725	Argument	""";"""		196669	0					
ANR	196726	PrimaryExpression	""";"""		196669	0					
ANR	196727	Argument	false		196669	1					
ANR	196728	Identifier	false		196669	0					
ANR	196729	ExpressionStatement	emit_input_header ( )	718:1:18813:18832	196669	6	True				
ANR	196730	CallExpression	emit_input_header ( )		196669	0					
ANR	196731	Callee	emit_input_header		196669	0					
ANR	196732	Identifier	emit_input_header		196669	0					
ANR	196733	ArgumentList			196669	1					
ANR	196734	ExpressionStatement	"emit_param ( ""delim"" , ""%s"" , "";"" )"	719:1:18835:18865	196669	7	True				
ANR	196735	CallExpression	"emit_param ( ""delim"" , ""%s"" , "";"" )"		196669	0					
ANR	196736	Callee	emit_param		196669	0					
ANR	196737	Identifier	emit_param		196669	0					
ANR	196738	ArgumentList	"""delim"""		196669	1					
ANR	196739	Argument	"""delim"""		196669	0					
ANR	196740	PrimaryExpression	"""delim"""		196669	0					
ANR	196741	Argument	"""%s"""		196669	1					
ANR	196742	PrimaryExpression	"""%s"""		196669	0					
ANR	196743	Argument	""";"""		196669	2					
ANR	196744	PrimaryExpression	""";"""		196669	0					
ANR	196745	ExpressionStatement	"emit_param ( ""skipBlankTokens"" , ""%d"" , false )"	720:1:18868:18910	196669	8	True				
ANR	196746	CallExpression	"emit_param ( ""skipBlankTokens"" , ""%d"" , false )"		196669	0					
ANR	196747	Callee	emit_param		196669	0					
ANR	196748	Identifier	emit_param		196669	0					
ANR	196749	ArgumentList	"""skipBlankTokens"""		196669	1					
ANR	196750	Argument	"""skipBlankTokens"""		196669	0					
ANR	196751	PrimaryExpression	"""skipBlankTokens"""		196669	0					
ANR	196752	Argument	"""%d"""		196669	1					
ANR	196753	PrimaryExpression	"""%d"""		196669	0					
ANR	196754	Argument	false		196669	2					
ANR	196755	Identifier	false		196669	0					
ANR	196756	ExpressionStatement	emit_output_expected_header ( )	721:1:18913:18942	196669	9	True				
ANR	196757	CallExpression	emit_output_expected_header ( )		196669	0					
ANR	196758	Callee	emit_output_expected_header		196669	0					
ANR	196759	Identifier	emit_output_expected_header		196669	0					
ANR	196760	ArgumentList			196669	1					
ANR	196761	ExpressionStatement	"emit_retval ( ""%s"" , ""NULL"" )"	722:1:18945:18970	196669	10	True				
ANR	196762	CallExpression	"emit_retval ( ""%s"" , ""NULL"" )"		196669	0					
ANR	196763	Callee	emit_retval		196669	0					
ANR	196764	Identifier	emit_retval		196669	0					
ANR	196765	ArgumentList	"""%s"""		196669	1					
ANR	196766	Argument	"""%s"""		196669	0					
ANR	196767	PrimaryExpression	"""%s"""		196669	0					
ANR	196768	Argument	"""NULL"""		196669	1					
ANR	196769	PrimaryExpression	"""NULL"""		196669	0					
ANR	196770	IfStatement	if ( tok != NULL )		196669	11					
ANR	196771	Condition	tok != NULL	723:4:18976:18986	196669	0	True				
ANR	196772	EqualityExpression	tok != NULL		196669	0		!=			
ANR	196773	Identifier	tok		196669	0					
ANR	196774	Identifier	NULL		196669	1					
ANR	196775	CompoundStatement		13:17:389:389	196669	1					
ANR	196776	ExpressionStatement	FAIL	724:2:18993:18997	196669	0	True				
ANR	196777	Identifier	FAIL		196669	0					
ANR	196778	ExpressionStatement	PASS	726:1:19003:19007	196669	12	True				
ANR	196779	Identifier	PASS		196669	0					
ANR	196780	ReturnType	static bool		196669	1					
ANR	196781	Identifier	tokenize_end		196669	2					
ANR	196782	ParameterList			196669	3					
ANR	196783	CFGEntryNode	ENTRY		196669		True				
ANR	196784	CFGExitNode	EXIT		196669		True				
ANR	196785	Symbol	a		196669						
ANR	196786	Symbol	tok		196669						
ANR	196787	Symbol	NULL		196669						
ANR	196788	Symbol	false		196669						
ANR	196789	Symbol	GetNextToken		196669						
ANR	196790	Function	tokenize_empty	729:0:19012:19357							
ANR	196791	FunctionDef	tokenize_empty ()		196790	0					
ANR	196792	CompoundStatement		729:29:19041:19357	196790	0					
ANR	196793	ExpressionStatement	"emit_test ( ""Test GetNextToken() on an empty MyString."" )"	730:1:19044:19098	196790	0	True				
ANR	196794	CallExpression	"emit_test ( ""Test GetNextToken() on an empty MyString."" )"		196790	0					
ANR	196795	Callee	emit_test		196790	0					
ANR	196796	Identifier	emit_test		196790	0					
ANR	196797	ArgumentList	"""Test GetNextToken() on an empty MyString."""		196790	1					
ANR	196798	Argument	"""Test GetNextToken() on an empty MyString."""		196790	0					
ANR	196799	PrimaryExpression	"""Test GetNextToken() on an empty MyString."""		196790	0					
ANR	196800	ExpressionStatement	"Tokenize ( """" )"	731:1:19101:19113	196790	1	True				
ANR	196801	CallExpression	"Tokenize ( """" )"		196790	0					
ANR	196802	Callee	Tokenize		196790	0					
ANR	196803	Identifier	Tokenize		196790	0					
ANR	196804	ArgumentList	""""""		196790	1					
ANR	196805	Argument	""""""		196790	0					
ANR	196806	PrimaryExpression	""""""		196790	0					
ANR	196807	IdentifierDeclStatement	"const char * tok = GetNextToken ( "" "" , false ) ;"	732:1:19116:19158	196790	2	True				
ANR	196808	IdentifierDecl	"* tok = GetNextToken ( "" "" , false )"		196790	0					
ANR	196809	IdentifierDeclType	const char *		196790	0					
ANR	196810	Identifier	tok		196790	1					
ANR	196811	AssignmentExpression	"* tok = GetNextToken ( "" "" , false )"		196790	2		=			
ANR	196812	Identifier	tok		196790	0					
ANR	196813	CallExpression	"GetNextToken ( "" "" , false )"		196790	1					
ANR	196814	Callee	GetNextToken		196790	0					
ANR	196815	Identifier	GetNextToken		196790	0					
ANR	196816	ArgumentList	""" """		196790	1					
ANR	196817	Argument	""" """		196790	0					
ANR	196818	PrimaryExpression	""" """		196790	0					
ANR	196819	Argument	false		196790	1					
ANR	196820	Identifier	false		196790	0					
ANR	196821	ExpressionStatement	emit_input_header ( )	733:1:19161:19180	196790	3	True				
ANR	196822	CallExpression	emit_input_header ( )		196790	0					
ANR	196823	Callee	emit_input_header		196790	0					
ANR	196824	Identifier	emit_input_header		196790	0					
ANR	196825	ArgumentList			196790	1					
ANR	196826	ExpressionStatement	"emit_param ( ""delim"" , ""%s"" , "" "" )"	734:1:19183:19213	196790	4	True				
ANR	196827	CallExpression	"emit_param ( ""delim"" , ""%s"" , "" "" )"		196790	0					
ANR	196828	Callee	emit_param		196790	0					
ANR	196829	Identifier	emit_param		196790	0					
ANR	196830	ArgumentList	"""delim"""		196790	1					
ANR	196831	Argument	"""delim"""		196790	0					
ANR	196832	PrimaryExpression	"""delim"""		196790	0					
ANR	196833	Argument	"""%s"""		196790	1					
ANR	196834	PrimaryExpression	"""%s"""		196790	0					
ANR	196835	Argument	""" """		196790	2					
ANR	196836	PrimaryExpression	""" """		196790	0					
ANR	196837	ExpressionStatement	"emit_param ( ""skipBlankTokens"" , ""%d"" , false )"	735:1:19216:19258	196790	5	True				
ANR	196838	CallExpression	"emit_param ( ""skipBlankTokens"" , ""%d"" , false )"		196790	0					
ANR	196839	Callee	emit_param		196790	0					
ANR	196840	Identifier	emit_param		196790	0					
ANR	196841	ArgumentList	"""skipBlankTokens"""		196790	1					
ANR	196842	Argument	"""skipBlankTokens"""		196790	0					
ANR	196843	PrimaryExpression	"""skipBlankTokens"""		196790	0					
ANR	196844	Argument	"""%d"""		196790	1					
ANR	196845	PrimaryExpression	"""%d"""		196790	0					
ANR	196846	Argument	false		196790	2					
ANR	196847	Identifier	false		196790	0					
ANR	196848	ExpressionStatement	emit_output_expected_header ( )	736:1:19261:19290	196790	6	True				
ANR	196849	CallExpression	emit_output_expected_header ( )		196790	0					
ANR	196850	Callee	emit_output_expected_header		196790	0					
ANR	196851	Identifier	emit_output_expected_header		196790	0					
ANR	196852	ArgumentList			196790	1					
ANR	196853	ExpressionStatement	"emit_retval ( ""%s"" , ""NULL"" )"	737:1:19293:19318	196790	7	True				
ANR	196854	CallExpression	"emit_retval ( ""%s"" , ""NULL"" )"		196790	0					
ANR	196855	Callee	emit_retval		196790	0					
ANR	196856	Identifier	emit_retval		196790	0					
ANR	196857	ArgumentList	"""%s"""		196790	1					
ANR	196858	Argument	"""%s"""		196790	0					
ANR	196859	PrimaryExpression	"""%s"""		196790	0					
ANR	196860	Argument	"""NULL"""		196790	1					
ANR	196861	PrimaryExpression	"""NULL"""		196790	0					
ANR	196862	IfStatement	if ( tok != NULL )		196790	8					
ANR	196863	Condition	tok != NULL	738:4:19324:19334	196790	0	True				
ANR	196864	EqualityExpression	tok != NULL		196790	0		!=			
ANR	196865	Identifier	tok		196790	0					
ANR	196866	Identifier	NULL		196790	1					
ANR	196867	CompoundStatement		10:17:295:295	196790	1					
ANR	196868	ExpressionStatement	FAIL	739:2:19341:19345	196790	0	True				
ANR	196869	Identifier	FAIL		196790	0					
ANR	196870	ExpressionStatement	PASS	741:1:19351:19355	196790	9	True				
ANR	196871	Identifier	PASS		196790	0					
ANR	196872	ReturnType	static bool		196790	1					
ANR	196873	Identifier	tokenize_empty		196790	2					
ANR	196874	ParameterList			196790	3					
ANR	196875	CFGEntryNode	ENTRY		196790		True				
ANR	196876	CFGExitNode	EXIT		196790		True				
ANR	196877	Symbol	tok		196790						
ANR	196878	Symbol	NULL		196790						
ANR	196879	Symbol	GetNextToken		196790						
ANR	196880	Symbol	false		196790						
ANR	196881	Function	tokenize_empty_delimiter	744:0:19360:19748							
ANR	196882	FunctionDef	tokenize_empty_delimiter ()		196881	0					
ANR	196883	CompoundStatement		744:39:19399:19748	196881	0					
ANR	196884	ExpressionStatement	"emit_test ( ""Test GetNextToken() on an empty delimiter string."" )"	745:1:19402:19464	196881	0	True				
ANR	196885	CallExpression	"emit_test ( ""Test GetNextToken() on an empty delimiter string."" )"		196881	0					
ANR	196886	Callee	emit_test		196881	0					
ANR	196887	Identifier	emit_test		196881	0					
ANR	196888	ArgumentList	"""Test GetNextToken() on an empty delimiter string."""		196881	1					
ANR	196889	Argument	"""Test GetNextToken() on an empty delimiter string."""		196881	0					
ANR	196890	PrimaryExpression	"""Test GetNextToken() on an empty delimiter string."""		196881	0					
ANR	196891	IdentifierDeclStatement	"const char * a = ""foobar"" ;"	746:1:19467:19491	196881	1	True				
ANR	196892	IdentifierDecl	"* a = ""foobar"""		196881	0					
ANR	196893	IdentifierDeclType	const char *		196881	0					
ANR	196894	Identifier	a		196881	1					
ANR	196895	AssignmentExpression	"* a = ""foobar"""		196881	2		=			
ANR	196896	Identifier	a		196881	0					
ANR	196897	PrimaryExpression	"""foobar"""		196881	1					
ANR	196898	ExpressionStatement	Tokenize ( a )	747:1:19494:19505	196881	2	True				
ANR	196899	CallExpression	Tokenize ( a )		196881	0					
ANR	196900	Callee	Tokenize		196881	0					
ANR	196901	Identifier	Tokenize		196881	0					
ANR	196902	ArgumentList	a		196881	1					
ANR	196903	Argument	a		196881	0					
ANR	196904	Identifier	a		196881	0					
ANR	196905	IdentifierDeclStatement	"const char * tok = GetNextToken ( """" , false ) ;"	748:1:19508:19549	196881	3	True				
ANR	196906	IdentifierDecl	"* tok = GetNextToken ( """" , false )"		196881	0					
ANR	196907	IdentifierDeclType	const char *		196881	0					
ANR	196908	Identifier	tok		196881	1					
ANR	196909	AssignmentExpression	"* tok = GetNextToken ( """" , false )"		196881	2		=			
ANR	196910	Identifier	tok		196881	0					
ANR	196911	CallExpression	"GetNextToken ( """" , false )"		196881	1					
ANR	196912	Callee	GetNextToken		196881	0					
ANR	196913	Identifier	GetNextToken		196881	0					
ANR	196914	ArgumentList	""""""		196881	1					
ANR	196915	Argument	""""""		196881	0					
ANR	196916	PrimaryExpression	""""""		196881	0					
ANR	196917	Argument	false		196881	1					
ANR	196918	Identifier	false		196881	0					
ANR	196919	ExpressionStatement	emit_input_header ( )	749:1:19552:19571	196881	4	True				
ANR	196920	CallExpression	emit_input_header ( )		196881	0					
ANR	196921	Callee	emit_input_header		196881	0					
ANR	196922	Identifier	emit_input_header		196881	0					
ANR	196923	ArgumentList			196881	1					
ANR	196924	ExpressionStatement	"emit_param ( ""delim"" , ""%s"" , "" "" )"	750:1:19574:19604	196881	5	True				
ANR	196925	CallExpression	"emit_param ( ""delim"" , ""%s"" , "" "" )"		196881	0					
ANR	196926	Callee	emit_param		196881	0					
ANR	196927	Identifier	emit_param		196881	0					
ANR	196928	ArgumentList	"""delim"""		196881	1					
ANR	196929	Argument	"""delim"""		196881	0					
ANR	196930	PrimaryExpression	"""delim"""		196881	0					
ANR	196931	Argument	"""%s"""		196881	1					
ANR	196932	PrimaryExpression	"""%s"""		196881	0					
ANR	196933	Argument	""" """		196881	2					
ANR	196934	PrimaryExpression	""" """		196881	0					
ANR	196935	ExpressionStatement	"emit_param ( ""skipBlankTokens"" , ""%d"" , false )"	751:1:19607:19649	196881	6	True				
ANR	196936	CallExpression	"emit_param ( ""skipBlankTokens"" , ""%d"" , false )"		196881	0					
ANR	196937	Callee	emit_param		196881	0					
ANR	196938	Identifier	emit_param		196881	0					
ANR	196939	ArgumentList	"""skipBlankTokens"""		196881	1					
ANR	196940	Argument	"""skipBlankTokens"""		196881	0					
ANR	196941	PrimaryExpression	"""skipBlankTokens"""		196881	0					
ANR	196942	Argument	"""%d"""		196881	1					
ANR	196943	PrimaryExpression	"""%d"""		196881	0					
ANR	196944	Argument	false		196881	2					
ANR	196945	Identifier	false		196881	0					
ANR	196946	ExpressionStatement	emit_output_expected_header ( )	752:1:19652:19681	196881	7	True				
ANR	196947	CallExpression	emit_output_expected_header ( )		196881	0					
ANR	196948	Callee	emit_output_expected_header		196881	0					
ANR	196949	Identifier	emit_output_expected_header		196881	0					
ANR	196950	ArgumentList			196881	1					
ANR	196951	ExpressionStatement	"emit_retval ( ""%s"" , ""NULL"" )"	753:1:19684:19709	196881	8	True				
ANR	196952	CallExpression	"emit_retval ( ""%s"" , ""NULL"" )"		196881	0					
ANR	196953	Callee	emit_retval		196881	0					
ANR	196954	Identifier	emit_retval		196881	0					
ANR	196955	ArgumentList	"""%s"""		196881	1					
ANR	196956	Argument	"""%s"""		196881	0					
ANR	196957	PrimaryExpression	"""%s"""		196881	0					
ANR	196958	Argument	"""NULL"""		196881	1					
ANR	196959	PrimaryExpression	"""NULL"""		196881	0					
ANR	196960	IfStatement	if ( tok != NULL )		196881	9					
ANR	196961	Condition	tok != NULL	754:4:19715:19725	196881	0	True				
ANR	196962	EqualityExpression	tok != NULL		196881	0		!=			
ANR	196963	Identifier	tok		196881	0					
ANR	196964	Identifier	NULL		196881	1					
ANR	196965	CompoundStatement		11:17:328:328	196881	1					
ANR	196966	ExpressionStatement	FAIL	755:2:19732:19736	196881	0	True				
ANR	196967	Identifier	FAIL		196881	0					
ANR	196968	ExpressionStatement	PASS	757:1:19742:19746	196881	10	True				
ANR	196969	Identifier	PASS		196881	0					
ANR	196970	ReturnType	static bool		196881	1					
ANR	196971	Identifier	tokenize_empty_delimiter		196881	2					
ANR	196972	ParameterList			196881	3					
ANR	196973	CFGEntryNode	ENTRY		196881		True				
ANR	196974	CFGExitNode	EXIT		196881		True				
ANR	196975	Symbol	a		196881						
ANR	196976	Symbol	tok		196881						
ANR	196977	Symbol	NULL		196881						
ANR	196978	Symbol	GetNextToken		196881						
ANR	196979	Symbol	false		196881						
