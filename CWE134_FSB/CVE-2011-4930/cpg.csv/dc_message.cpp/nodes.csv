command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1192771	File	data/converged/CVE-2011-4930_htcondor/dc_message.cpp								
ANR	1192772	Function	DCMsg :: DCMsg	28:0:979:1399							
ANR	1192773	FunctionDef	DCMsg :: DCMsg (int cmd)		1192772	0					
ANR	1192774	CompoundStatement		39:0:1336:1399	1192772	0					
ANR	1192775	ExpressionStatement	setDeadlineTime ( time ( NULL ) + DEFAULT_SHORT_COMMAND_DEADLINE )	40:1:1339:1397	1192772	0	True				
ANR	1192776	CallExpression	setDeadlineTime ( time ( NULL ) + DEFAULT_SHORT_COMMAND_DEADLINE )		1192772	0					
ANR	1192777	Callee	setDeadlineTime		1192772	0					
ANR	1192778	Identifier	setDeadlineTime		1192772	0					
ANR	1192779	ArgumentList	time ( NULL ) + DEFAULT_SHORT_COMMAND_DEADLINE		1192772	1					
ANR	1192780	Argument	time ( NULL ) + DEFAULT_SHORT_COMMAND_DEADLINE		1192772	0					
ANR	1192781	AdditiveExpression	time ( NULL ) + DEFAULT_SHORT_COMMAND_DEADLINE		1192772	0		+			
ANR	1192782	CallExpression	time ( NULL )		1192772	0					
ANR	1192783	Callee	time		1192772	0					
ANR	1192784	Identifier	time		1192772	0					
ANR	1192785	ArgumentList	NULL		1192772	1					
ANR	1192786	Argument	NULL		1192772	0					
ANR	1192787	Identifier	NULL		1192772	0					
ANR	1192788	Identifier	DEFAULT_SHORT_COMMAND_DEADLINE		1192772	1					
ANR	1192789	Identifier	DCMsg :: DCMsg		1192772	1					
ANR	1192790	ParameterList	int cmd		1192772	2					
ANR	1192791	Parameter	int cmd	28:13:992:998	1192772	0	True				
ANR	1192792	ParameterType	int		1192772	0					
ANR	1192793	Identifier	cmd		1192772	1					
ANR	1192794	CFGEntryNode	ENTRY		1192772		True				
ANR	1192795	CFGExitNode	EXIT		1192772		True				
ANR	1192796	Symbol	NULL		1192772						
ANR	1192797	Symbol	DEFAULT_SHORT_COMMAND_DEADLINE		1192772						
ANR	1192798	Symbol	cmd		1192772						
ANR	1192799	Symbol	time		1192772						
ANR	1192800	Function	DCMsg :: ~DCMsg	43:0:1402:1420							
ANR	1192801	FunctionDef	DCMsg :: ~DCMsg ()		1192800	0					
ANR	1192802	CompoundStatement		43:16:1418:1420	1192800	0					
ANR	1192803	Identifier	DCMsg :: ~DCMsg		1192800	1					
ANR	1192804	ParameterList			1192800	2					
ANR	1192805	CFGEntryNode	ENTRY		1192800		True				
ANR	1192806	CFGExitNode	EXIT		1192800		True				
ANR	1192807	Function	DCMsg :: setDeadlineTimeout	46:0:1423:1565							
ANR	1192808	FunctionDef	DCMsg :: setDeadlineTimeout (int timeout)		1192807	0					
ANR	1192809	CompoundStatement		48:0:1467:1565	1192807	0					
ANR	1192810	IfStatement	if ( timeout < 0 )		1192807	0					
ANR	1192811	Condition	timeout < 0	49:5:1474:1484	1192807	0	True				
ANR	1192812	RelationalExpression	timeout < 0		1192807	0		<			
ANR	1192813	Identifier	timeout		1192807	0					
ANR	1192814	PrimaryExpression	0		1192807	1					
ANR	1192815	CompoundStatement		2:19:20:20	1192807	1					
ANR	1192816	ExpressionStatement	setDeadlineTime ( 0 )	50:2:1492:1510	1192807	0	True				
ANR	1192817	CallExpression	setDeadlineTime ( 0 )		1192807	0					
ANR	1192818	Callee	setDeadlineTime		1192807	0					
ANR	1192819	Identifier	setDeadlineTime		1192807	0					
ANR	1192820	ArgumentList	0		1192807	1					
ANR	1192821	Argument	0		1192807	0					
ANR	1192822	PrimaryExpression	0		1192807	0					
ANR	1192823	ElseStatement	else		1192807	0					
ANR	1192824	CompoundStatement		5:6:53:53	1192807	0					
ANR	1192825	ExpressionStatement	setDeadlineTime ( time ( NULL ) + timeout )	53:2:1525:1560	1192807	0	True				
ANR	1192826	CallExpression	setDeadlineTime ( time ( NULL ) + timeout )		1192807	0					
ANR	1192827	Callee	setDeadlineTime		1192807	0					
ANR	1192828	Identifier	setDeadlineTime		1192807	0					
ANR	1192829	ArgumentList	time ( NULL ) + timeout		1192807	1					
ANR	1192830	Argument	time ( NULL ) + timeout		1192807	0					
ANR	1192831	AdditiveExpression	time ( NULL ) + timeout		1192807	0		+			
ANR	1192832	CallExpression	time ( NULL )		1192807	0					
ANR	1192833	Callee	time		1192807	0					
ANR	1192834	Identifier	time		1192807	0					
ANR	1192835	ArgumentList	NULL		1192807	1					
ANR	1192836	Argument	NULL		1192807	0					
ANR	1192837	Identifier	NULL		1192807	0					
ANR	1192838	Identifier	timeout		1192807	1					
ANR	1192839	ReturnType	void		1192807	1					
ANR	1192840	Identifier	DCMsg :: setDeadlineTimeout		1192807	2					
ANR	1192841	ParameterList	int timeout		1192807	3					
ANR	1192842	Parameter	int timeout	47:26:1454:1464	1192807	0	True				
ANR	1192843	ParameterType	int		1192807	0					
ANR	1192844	Identifier	timeout		1192807	1					
ANR	1192845	CFGEntryNode	ENTRY		1192807		True				
ANR	1192846	CFGExitNode	EXIT		1192807		True				
ANR	1192847	Symbol	NULL		1192807						
ANR	1192848	Symbol	time		1192807						
ANR	1192849	Symbol	timeout		1192807						
ANR	1192850	Function	DCMsg :: getDeadlineExpired	57:0:1568:1683							
ANR	1192851	FunctionDef	DCMsg :: getDeadlineExpired ()		1192850	0					
ANR	1192852	CompoundStatement		59:0:1601:1683	1192850	0					
ANR	1192853	IfStatement	if ( m_deadline && m_deadline < time ( NULL ) )		1192850	0					
ANR	1192854	Condition	m_deadline && m_deadline < time ( NULL )	60:5:1608:1644	1192850	0	True				
ANR	1192855	AndExpression	m_deadline && m_deadline < time ( NULL )		1192850	0		&&			
ANR	1192856	Identifier	m_deadline		1192850	0					
ANR	1192857	RelationalExpression	m_deadline < time ( NULL )		1192850	1		<			
ANR	1192858	Identifier	m_deadline		1192850	0					
ANR	1192859	CallExpression	time ( NULL )		1192850	1					
ANR	1192860	Callee	time		1192850	0					
ANR	1192861	Identifier	time		1192850	0					
ANR	1192862	ArgumentList	NULL		1192850	1					
ANR	1192863	Argument	NULL		1192850	0					
ANR	1192864	Identifier	NULL		1192850	0					
ANR	1192865	CompoundStatement		2:45:46:46	1192850	1					
ANR	1192866	ReturnStatement	return true ;	61:2:1652:1663	1192850	0	True				
ANR	1192867	Identifier	true		1192850	0					
ANR	1192868	ReturnStatement	return false ;	63:1:1669:1681	1192850	1	True				
ANR	1192869	Identifier	false		1192850	0					
ANR	1192870	ReturnType	bool		1192850	1					
ANR	1192871	Identifier	DCMsg :: getDeadlineExpired		1192850	2					
ANR	1192872	ParameterList			1192850	3					
ANR	1192873	CFGEntryNode	ENTRY		1192850		True				
ANR	1192874	CFGExitNode	EXIT		1192850		True				
ANR	1192875	Symbol	NULL		1192850						
ANR	1192876	Symbol	m_deadline		1192850						
ANR	1192877	Symbol	true		1192850						
ANR	1192878	Symbol	false		1192850						
ANR	1192879	Symbol	time		1192850						
ANR	1192880	Function	DCMsg :: setCallback	66:0:1686:1809							
ANR	1192881	FunctionDef	DCMsg :: setCallback (classy_counted_ptr < DCMsgCallback > cb)		1192880	0					
ANR	1192882	CompoundStatement		68:0:1748:1809	1192880	0					
ANR	1192883	IfStatement	if ( cb . get ( ) )		1192880	0					
ANR	1192884	Condition	cb . get ( )	69:5:1755:1762	1192880	0	True				
ANR	1192885	CallExpression	cb . get ( )		1192880	0					
ANR	1192886	Callee	cb . get		1192880	0					
ANR	1192887	MemberAccess	cb . get		1192880	0					
ANR	1192888	Identifier	cb		1192880	0					
ANR	1192889	Identifier	get		1192880	1					
ANR	1192890	ArgumentList			1192880	1					
ANR	1192891	CompoundStatement		2:16:17:17	1192880	1					
ANR	1192892	ExpressionStatement	cb -> setMessage ( this )	70:2:1770:1792	1192880	0	True				
ANR	1192893	CallExpression	cb -> setMessage ( this )		1192880	0					
ANR	1192894	Callee	cb -> setMessage		1192880	0					
ANR	1192895	PtrMemberAccess	cb -> setMessage		1192880	0					
ANR	1192896	Identifier	cb		1192880	0					
ANR	1192897	Identifier	setMessage		1192880	1					
ANR	1192898	ArgumentList	this		1192880	1					
ANR	1192899	Argument	this		1192880	0					
ANR	1192900	Identifier	this		1192880	0					
ANR	1192901	ExpressionStatement	m_cb = cb	72:1:1798:1807	1192880	1	True				
ANR	1192902	AssignmentExpression	m_cb = cb		1192880	0		=			
ANR	1192903	Identifier	m_cb		1192880	0					
ANR	1192904	Identifier	cb		1192880	1					
ANR	1192905	ReturnType	void		1192880	1					
ANR	1192906	Identifier	DCMsg :: setCallback		1192880	2					
ANR	1192907	ParameterList	classy_counted_ptr < DCMsgCallback > cb		1192880	3					
ANR	1192908	Parameter	classy_counted_ptr < DCMsgCallback > cb	67:19:1710:1745	1192880	0	True				
ANR	1192909	ParameterType	classy_counted_ptr < DCMsgCallback >		1192880	0					
ANR	1192910	Identifier	cb		1192880	1					
ANR	1192911	CFGEntryNode	ENTRY		1192880		True				
ANR	1192912	CFGExitNode	EXIT		1192880		True				
ANR	1192913	Symbol	m_cb		1192880						
ANR	1192914	Symbol	this		1192880						
ANR	1192915	Symbol	cb . get		1192880						
ANR	1192916	Symbol	cb		1192880						
ANR	1192917	Function	DCMsg :: doCallback	75:0:1812:2039							
ANR	1192918	FunctionDef	DCMsg :: doCallback ()		1192917	0					
ANR	1192919	CompoundStatement		77:0:1837:2039	1192917	0					
ANR	1192920	IfStatement	if ( m_cb . get ( ) )		1192917	0					
ANR	1192921	Condition	m_cb . get ( )	78:5:1844:1853	1192917	0	True				
ANR	1192922	CallExpression	m_cb . get ( )		1192917	0					
ANR	1192923	Callee	m_cb . get		1192917	0					
ANR	1192924	MemberAccess	m_cb . get		1192917	0					
ANR	1192925	Identifier	m_cb		1192917	0					
ANR	1192926	Identifier	get		1192917	1					
ANR	1192927	ArgumentList			1192917	1					
ANR	1192928	CompoundStatement		5:2:117:160	1192917	1					
ANR	1192929	IdentifierDeclStatement	classy_counted_ptr < DCMsgCallback > cb = m_cb ;	81:2:1955:1998	1192917	0	True				
ANR	1192930	IdentifierDecl	cb = m_cb		1192917	0					
ANR	1192931	IdentifierDeclType	classy_counted_ptr < DCMsgCallback >		1192917	0					
ANR	1192932	Identifier	cb		1192917	1					
ANR	1192933	AssignmentExpression	cb = m_cb		1192917	2		=			
ANR	1192934	Identifier	m_cb		1192917	0					
ANR	1192935	Identifier	m_cb		1192917	1					
ANR	1192936	ExpressionStatement	m_cb = NULL	82:2:2002:2013	1192917	1	True				
ANR	1192937	AssignmentExpression	m_cb = NULL		1192917	0		=			
ANR	1192938	Identifier	m_cb		1192917	0					
ANR	1192939	Identifier	NULL		1192917	1					
ANR	1192940	ExpressionStatement	cb -> doCallback ( )	84:2:2018:2034	1192917	2	True				
ANR	1192941	CallExpression	cb -> doCallback ( )		1192917	0					
ANR	1192942	Callee	cb -> doCallback		1192917	0					
ANR	1192943	PtrMemberAccess	cb -> doCallback		1192917	0					
ANR	1192944	Identifier	cb		1192917	0					
ANR	1192945	Identifier	doCallback		1192917	1					
ANR	1192946	ArgumentList			1192917	1					
ANR	1192947	ReturnType	void		1192917	1					
ANR	1192948	Identifier	DCMsg :: doCallback		1192917	2					
ANR	1192949	ParameterList			1192917	3					
ANR	1192950	CFGEntryNode	ENTRY		1192917		True				
ANR	1192951	CFGExitNode	EXIT		1192917		True				
ANR	1192952	Symbol	m_cb . get		1192917						
ANR	1192953	Symbol	m_cb		1192917						
ANR	1192954	Symbol	NULL		1192917						
ANR	1192955	Symbol	cb		1192917						
ANR	1192956	Function	DCMsg :: name	88:0:2042:2277							
ANR	1192957	FunctionDef	DCMsg :: name ()		1192956	0					
ANR	1192958	CompoundStatement		90:0:2069:2277	1192956	0					
ANR	1192959	IfStatement	if ( m_cmd_str )		1192956	0					
ANR	1192960	Condition	m_cmd_str	91:5:2076:2084	1192956	0	True				
ANR	1192961	Identifier	m_cmd_str		1192956	0					
ANR	1192962	CompoundStatement		2:17:18:18	1192956	1					
ANR	1192963	ReturnStatement	return m_cmd_str ;	92:2:2092:2108	1192956	0	True				
ANR	1192964	Identifier	m_cmd_str		1192956	0					
ANR	1192965	ExpressionStatement	m_cmd_str = getCommandString ( m_cmd )	94:1:2114:2151	1192956	1	True				
ANR	1192966	AssignmentExpression	m_cmd_str = getCommandString ( m_cmd )		1192956	0		=			
ANR	1192967	Identifier	m_cmd_str		1192956	0					
ANR	1192968	CallExpression	getCommandString ( m_cmd )		1192956	1					
ANR	1192969	Callee	getCommandString		1192956	0					
ANR	1192970	Identifier	getCommandString		1192956	0					
ANR	1192971	ArgumentList	m_cmd		1192956	1					
ANR	1192972	Argument	m_cmd		1192956	0					
ANR	1192973	Identifier	m_cmd		1192956	0					
ANR	1192974	IfStatement	if ( ! m_cmd_str )		1192956	2					
ANR	1192975	Condition	! m_cmd_str	95:5:2158:2167	1192956	0	True				
ANR	1192976	UnaryOperationExpression	! m_cmd_str		1192956	0					
ANR	1192977	UnaryOperator	!		1192956	0					
ANR	1192978	Identifier	m_cmd_str		1192956	1					
ANR	1192979	CompoundStatement		6:18:101:101	1192956	1					
ANR	1192980	ExpressionStatement	"m_cmd_str_buf . sprintf ( ""command %d"" , m_cmd )"	96:2:2175:2216	1192956	0	True				
ANR	1192981	CallExpression	"m_cmd_str_buf . sprintf ( ""command %d"" , m_cmd )"		1192956	0					
ANR	1192982	Callee	m_cmd_str_buf . sprintf		1192956	0					
ANR	1192983	MemberAccess	m_cmd_str_buf . sprintf		1192956	0					
ANR	1192984	Identifier	m_cmd_str_buf		1192956	0					
ANR	1192985	Identifier	sprintf		1192956	1					
ANR	1192986	ArgumentList	"""command %d"""		1192956	1					
ANR	1192987	Argument	"""command %d"""		1192956	0					
ANR	1192988	PrimaryExpression	"""command %d"""		1192956	0					
ANR	1192989	Argument	m_cmd		1192956	1					
ANR	1192990	Identifier	m_cmd		1192956	0					
ANR	1192991	ExpressionStatement	m_cmd_str = m_cmd_str_buf . Value ( )	97:2:2220:2253	1192956	1	True				
ANR	1192992	AssignmentExpression	m_cmd_str = m_cmd_str_buf . Value ( )		1192956	0		=			
ANR	1192993	Identifier	m_cmd_str		1192956	0					
ANR	1192994	CallExpression	m_cmd_str_buf . Value ( )		1192956	1					
ANR	1192995	Callee	m_cmd_str_buf . Value		1192956	0					
ANR	1192996	MemberAccess	m_cmd_str_buf . Value		1192956	0					
ANR	1192997	Identifier	m_cmd_str_buf		1192956	0					
ANR	1192998	Identifier	Value		1192956	1					
ANR	1192999	ArgumentList			1192956	1					
ANR	1193000	ReturnStatement	return m_cmd_str ;	99:1:2259:2275	1192956	3	True				
ANR	1193001	Identifier	m_cmd_str		1192956	0					
ANR	1193002	ReturnType	char const *		1192956	1					
ANR	1193003	Identifier	DCMsg :: name		1192956	2					
ANR	1193004	ParameterList			1192956	3					
ANR	1193005	CFGEntryNode	ENTRY		1192956		True				
ANR	1193006	CFGExitNode	EXIT		1192956		True				
ANR	1193007	Symbol	m_cmd_str		1192956						
ANR	1193008	Symbol	m_cmd		1192956						
ANR	1193009	Symbol	getCommandString		1192956						
ANR	1193010	Symbol	m_cmd_str_buf . Value		1192956						
ANR	1193011	Symbol	m_cmd_str_buf		1192956						
ANR	1193012	Function	DCMsg :: deliveryStatus	102:0:2280:2446							
ANR	1193013	FunctionDef	DCMsg :: deliveryStatus (DeliveryStatus s)		1193012	0					
ANR	1193014	CompoundStatement		104:0:2325:2446	1193012	0					
ANR	1193015	IfStatement	if ( m_delivery_status != DELIVERY_CANCELED )		1193012	0					
ANR	1193016	Condition	m_delivery_status != DELIVERY_CANCELED	106:5:2375:2412	1193012	0	True				
ANR	1193017	EqualityExpression	m_delivery_status != DELIVERY_CANCELED		1193012	0		!=			
ANR	1193018	Identifier	m_delivery_status		1193012	0					
ANR	1193019	Identifier	DELIVERY_CANCELED		1193012	1					
ANR	1193020	CompoundStatement		3:46:90:90	1193012	1					
ANR	1193021	ExpressionStatement	m_delivery_status = s	107:2:2420:2441	1193012	0	True				
ANR	1193022	AssignmentExpression	m_delivery_status = s		1193012	0		=			
ANR	1193023	Identifier	m_delivery_status		1193012	0					
ANR	1193024	Identifier	s		1193012	1					
ANR	1193025	ReturnType	void		1193012	1					
ANR	1193026	Identifier	DCMsg :: deliveryStatus		1193012	2					
ANR	1193027	ParameterList	DeliveryStatus s		1193012	3					
ANR	1193028	Parameter	DeliveryStatus s	103:22:2307:2322	1193012	0	True				
ANR	1193029	ParameterType	DeliveryStatus		1193012	0					
ANR	1193030	Identifier	s		1193012	1					
ANR	1193031	CFGEntryNode	ENTRY		1193012		True				
ANR	1193032	CFGExitNode	EXIT		1193012		True				
ANR	1193033	Symbol	DELIVERY_CANCELED		1193012						
ANR	1193034	Symbol	s		1193012						
ANR	1193035	Symbol	m_delivery_status		1193012						
ANR	1193036	Function	DCMsg :: setMessenger	111:0:2449:2526							
ANR	1193037	FunctionDef	DCMsg :: setMessenger (DCMessenger * messenger)		1193036	0					
ANR	1193038	CompoundStatement		113:0:2498:2526	1193036	0					
ANR	1193039	ExpressionStatement	m_messenger = messenger	114:1:2501:2524	1193036	0	True				
ANR	1193040	AssignmentExpression	m_messenger = messenger		1193036	0		=			
ANR	1193041	Identifier	m_messenger		1193036	0					
ANR	1193042	Identifier	messenger		1193036	1					
ANR	1193043	ReturnType	void		1193036	1					
ANR	1193044	Identifier	DCMsg :: setMessenger		1193036	2					
ANR	1193045	ParameterList	DCMessenger * messenger		1193036	3					
ANR	1193046	Parameter	DCMessenger * messenger	112:20:2474:2495	1193036	0	True				
ANR	1193047	ParameterType	DCMessenger *		1193036	0					
ANR	1193048	Identifier	messenger		1193036	1					
ANR	1193049	CFGEntryNode	ENTRY		1193036		True				
ANR	1193050	CFGExitNode	EXIT		1193036		True				
ANR	1193051	Symbol	messenger		1193036						
ANR	1193052	Symbol	m_messenger		1193036						
ANR	1193053	Function	DCMsg :: cancelMessage	117:0:2529:2915							
ANR	1193054	FunctionDef	DCMsg :: cancelMessage (char const * reason)		1193053	0					
ANR	1193055	CompoundStatement		119:0:2575:2915	1193053	0					
ANR	1193056	ExpressionStatement	deliveryStatus ( DELIVERY_CANCELED )	120:1:2578:2613	1193053	0	True				
ANR	1193057	CallExpression	deliveryStatus ( DELIVERY_CANCELED )		1193053	0					
ANR	1193058	Callee	deliveryStatus		1193053	0					
ANR	1193059	Identifier	deliveryStatus		1193053	0					
ANR	1193060	ArgumentList	DELIVERY_CANCELED		1193053	1					
ANR	1193061	Argument	DELIVERY_CANCELED		1193053	0					
ANR	1193062	Identifier	DELIVERY_CANCELED		1193053	0					
ANR	1193063	IfStatement	if ( ! reason )		1193053	1					
ANR	1193064	Condition	! reason	121:5:2620:2626	1193053	0	True				
ANR	1193065	UnaryOperationExpression	! reason		1193053	0					
ANR	1193066	UnaryOperator	!		1193053	0					
ANR	1193067	Identifier	reason		1193053	1					
ANR	1193068	CompoundStatement		3:15:54:54	1193053	1					
ANR	1193069	ExpressionStatement	"reason = ""operation was canceled"""	122:2:2634:2667	1193053	0	True				
ANR	1193070	AssignmentExpression	"reason = ""operation was canceled"""		1193053	0		=			
ANR	1193071	Identifier	reason		1193053	0					
ANR	1193072	PrimaryExpression	"""operation was canceled"""		1193053	1					
ANR	1193073	ExpressionStatement	"addError ( CEDAR_ERR_CANCELED , reason )"	124:1:2673:2711	1193053	2	True				
ANR	1193074	CallExpression	"addError ( CEDAR_ERR_CANCELED , reason )"		1193053	0					
ANR	1193075	Callee	addError		1193053	0					
ANR	1193076	Identifier	addError		1193053	0					
ANR	1193077	ArgumentList	CEDAR_ERR_CANCELED		1193053	1					
ANR	1193078	Argument	CEDAR_ERR_CANCELED		1193053	0					
ANR	1193079	Identifier	CEDAR_ERR_CANCELED		1193053	0					
ANR	1193080	Argument	reason		1193053	1					
ANR	1193081	Identifier	reason		1193053	0					
ANR	1193082	IfStatement	if ( m_messenger . get ( ) )		1193053	3					
ANR	1193083	Condition	m_messenger . get ( )	126:5:2719:2735	1193053	0	True				
ANR	1193084	CallExpression	m_messenger . get ( )		1193053	0					
ANR	1193085	Callee	m_messenger . get		1193053	0					
ANR	1193086	MemberAccess	m_messenger . get		1193053	0					
ANR	1193087	Identifier	m_messenger		1193053	0					
ANR	1193088	Identifier	get		1193053	1					
ANR	1193089	ArgumentList			1193053	1					
ANR	1193090	CompoundStatement		8:25:163:163	1193053	1					
ANR	1193091	ExpressionStatement	m_messenger -> cancelMessage ( this )	127:2:2743:2777	1193053	0	True				
ANR	1193092	CallExpression	m_messenger -> cancelMessage ( this )		1193053	0					
ANR	1193093	Callee	m_messenger -> cancelMessage		1193053	0					
ANR	1193094	PtrMemberAccess	m_messenger -> cancelMessage		1193053	0					
ANR	1193095	Identifier	m_messenger		1193053	0					
ANR	1193096	Identifier	cancelMessage		1193053	1					
ANR	1193097	ArgumentList	this		1193053	1					
ANR	1193098	Argument	this		1193053	0					
ANR	1193099	Identifier	this		1193053	0					
ANR	1193100	ReturnType	void		1193053	1					
ANR	1193101	Identifier	DCMsg :: cancelMessage		1193053	2					
ANR	1193102	ParameterList	char const * reason		1193053	3					
ANR	1193103	Parameter	char const * reason	118:21:2555:2572	1193053	0	True				
ANR	1193104	ParameterType	char const *		1193053	0					
ANR	1193105	Identifier	reason		1193053	1					
ANR	1193106	CFGEntryNode	ENTRY		1193053		True				
ANR	1193107	CFGExitNode	EXIT		1193053		True				
ANR	1193108	Symbol	DELIVERY_CANCELED		1193053						
ANR	1193109	Symbol	reason		1193053						
ANR	1193110	Symbol	m_messenger		1193053						
ANR	1193111	Symbol	m_messenger . get		1193053						
ANR	1193112	Symbol	this		1193053						
ANR	1193113	Symbol	CEDAR_ERR_CANCELED		1193053						
ANR	1193114	Function	DCMsg :: callMessageSendFailed	133:0:2918:3064							
ANR	1193115	FunctionDef	DCMsg :: callMessageSendFailed (DCMessenger * messenger)		1193114	0					
ANR	1193116	CompoundStatement		135:0:2978:3064	1193114	0					
ANR	1193117	ExpressionStatement	deliveryStatus ( DELIVERY_FAILED )	136:1:2981:3014	1193114	0	True				
ANR	1193118	CallExpression	deliveryStatus ( DELIVERY_FAILED )		1193114	0					
ANR	1193119	Callee	deliveryStatus		1193114	0					
ANR	1193120	Identifier	deliveryStatus		1193114	0					
ANR	1193121	ArgumentList	DELIVERY_FAILED		1193114	1					
ANR	1193122	Argument	DELIVERY_FAILED		1193114	0					
ANR	1193123	Identifier	DELIVERY_FAILED		1193114	0					
ANR	1193124	ExpressionStatement	messageSendFailed ( messenger )	137:1:3017:3047	1193114	1	True				
ANR	1193125	CallExpression	messageSendFailed ( messenger )		1193114	0					
ANR	1193126	Callee	messageSendFailed		1193114	0					
ANR	1193127	Identifier	messageSendFailed		1193114	0					
ANR	1193128	ArgumentList	messenger		1193114	1					
ANR	1193129	Argument	messenger		1193114	0					
ANR	1193130	Identifier	messenger		1193114	0					
ANR	1193131	ExpressionStatement	doCallback ( )	138:1:3050:3062	1193114	2	True				
ANR	1193132	CallExpression	doCallback ( )		1193114	0					
ANR	1193133	Callee	doCallback		1193114	0					
ANR	1193134	Identifier	doCallback		1193114	0					
ANR	1193135	ArgumentList			1193114	1					
ANR	1193136	ReturnType	void		1193114	1					
ANR	1193137	Identifier	DCMsg :: callMessageSendFailed		1193114	2					
ANR	1193138	ParameterList	DCMessenger * messenger		1193114	3					
ANR	1193139	Parameter	DCMessenger * messenger	134:30:2953:2974	1193114	0	True				
ANR	1193140	ParameterType	DCMessenger *		1193114	0					
ANR	1193141	Identifier	messenger		1193114	1					
ANR	1193142	CFGEntryNode	ENTRY		1193114		True				
ANR	1193143	CFGExitNode	EXIT		1193114		True				
ANR	1193144	Symbol	DELIVERY_FAILED		1193114						
ANR	1193145	Symbol	messenger		1193114						
ANR	1193146	Function	DCMsg :: callMessageReceiveFailed	141:0:3067:3219							
ANR	1193147	FunctionDef	DCMsg :: callMessageReceiveFailed (DCMessenger * messenger)		1193146	0					
ANR	1193148	CompoundStatement		143:0:3130:3219	1193146	0					
ANR	1193149	ExpressionStatement	deliveryStatus ( DELIVERY_FAILED )	144:1:3133:3166	1193146	0	True				
ANR	1193150	CallExpression	deliveryStatus ( DELIVERY_FAILED )		1193146	0					
ANR	1193151	Callee	deliveryStatus		1193146	0					
ANR	1193152	Identifier	deliveryStatus		1193146	0					
ANR	1193153	ArgumentList	DELIVERY_FAILED		1193146	1					
ANR	1193154	Argument	DELIVERY_FAILED		1193146	0					
ANR	1193155	Identifier	DELIVERY_FAILED		1193146	0					
ANR	1193156	ExpressionStatement	messageReceiveFailed ( messenger )	145:1:3169:3202	1193146	1	True				
ANR	1193157	CallExpression	messageReceiveFailed ( messenger )		1193146	0					
ANR	1193158	Callee	messageReceiveFailed		1193146	0					
ANR	1193159	Identifier	messageReceiveFailed		1193146	0					
ANR	1193160	ArgumentList	messenger		1193146	1					
ANR	1193161	Argument	messenger		1193146	0					
ANR	1193162	Identifier	messenger		1193146	0					
ANR	1193163	ExpressionStatement	doCallback ( )	146:1:3205:3217	1193146	2	True				
ANR	1193164	CallExpression	doCallback ( )		1193146	0					
ANR	1193165	Callee	doCallback		1193146	0					
ANR	1193166	Identifier	doCallback		1193146	0					
ANR	1193167	ArgumentList			1193146	1					
ANR	1193168	ReturnType	void		1193146	1					
ANR	1193169	Identifier	DCMsg :: callMessageReceiveFailed		1193146	2					
ANR	1193170	ParameterList	DCMessenger * messenger		1193146	3					
ANR	1193171	Parameter	DCMessenger * messenger	142:33:3105:3126	1193146	0	True				
ANR	1193172	ParameterType	DCMessenger *		1193146	0					
ANR	1193173	Identifier	messenger		1193146	1					
ANR	1193174	CFGEntryNode	ENTRY		1193146		True				
ANR	1193175	CFGExitNode	EXIT		1193146		True				
ANR	1193176	Symbol	DELIVERY_FAILED		1193146						
ANR	1193177	Symbol	messenger		1193146						
ANR	1193178	Function	DCMsg :: callMessageSent	149:0:3222:3489							
ANR	1193179	FunctionDef	"DCMsg :: callMessageSent (DCMessenger * messenger , Sock * sock)"		1193178	0					
ANR	1193180	CompoundStatement		152:0:3313:3489	1193178	0					
ANR	1193181	ExpressionStatement	deliveryStatus ( DELIVERY_SUCCEEDED )	153:1:3316:3352	1193178	0	True				
ANR	1193182	CallExpression	deliveryStatus ( DELIVERY_SUCCEEDED )		1193178	0					
ANR	1193183	Callee	deliveryStatus		1193178	0					
ANR	1193184	Identifier	deliveryStatus		1193178	0					
ANR	1193185	ArgumentList	DELIVERY_SUCCEEDED		1193178	1					
ANR	1193186	Argument	DELIVERY_SUCCEEDED		1193178	0					
ANR	1193187	Identifier	DELIVERY_SUCCEEDED		1193178	0					
ANR	1193188	IdentifierDeclStatement	"MessageClosureEnum closure = messageSent ( messenger , sock ) ;"	154:1:3355:3414	1193178	1	True				
ANR	1193189	IdentifierDecl	"closure = messageSent ( messenger , sock )"		1193178	0					
ANR	1193190	IdentifierDeclType	MessageClosureEnum		1193178	0					
ANR	1193191	Identifier	closure		1193178	1					
ANR	1193192	AssignmentExpression	"closure = messageSent ( messenger , sock )"		1193178	2		=			
ANR	1193193	Identifier	closure		1193178	0					
ANR	1193194	CallExpression	"messageSent ( messenger , sock )"		1193178	1					
ANR	1193195	Callee	messageSent		1193178	0					
ANR	1193196	Identifier	messageSent		1193178	0					
ANR	1193197	ArgumentList	messenger		1193178	1					
ANR	1193198	Argument	messenger		1193178	0					
ANR	1193199	Identifier	messenger		1193178	0					
ANR	1193200	Argument	sock		1193178	1					
ANR	1193201	Identifier	sock		1193178	0					
ANR	1193202	IfStatement	if ( closure == MESSAGE_FINISHED )		1193178	2					
ANR	1193203	Condition	closure == MESSAGE_FINISHED	155:5:3421:3447	1193178	0	True				
ANR	1193204	EqualityExpression	closure == MESSAGE_FINISHED		1193178	0		==			
ANR	1193205	Identifier	closure		1193178	0					
ANR	1193206	Identifier	MESSAGE_FINISHED		1193178	1					
ANR	1193207	CompoundStatement		4:35:137:137	1193178	1					
ANR	1193208	ExpressionStatement	doCallback ( )	156:2:3455:3467	1193178	0	True				
ANR	1193209	CallExpression	doCallback ( )		1193178	0					
ANR	1193210	Callee	doCallback		1193178	0					
ANR	1193211	Identifier	doCallback		1193178	0					
ANR	1193212	ArgumentList			1193178	1					
ANR	1193213	ReturnStatement	return closure ;	158:1:3473:3487	1193178	3	True				
ANR	1193214	Identifier	closure		1193178	0					
ANR	1193215	ReturnType	DCMsg :: MessageClosureEnum		1193178	1					
ANR	1193216	Identifier	DCMsg :: callMessageSent		1193178	2					
ANR	1193217	ParameterList	"DCMessenger * messenger , Sock * sock"		1193178	3					
ANR	1193218	Parameter	DCMessenger * messenger	151:4:3276:3297	1193178	0	True				
ANR	1193219	ParameterType	DCMessenger *		1193178	0					
ANR	1193220	Identifier	messenger		1193178	1					
ANR	1193221	Parameter	Sock * sock	151:28:3300:3309	1193178	1	True				
ANR	1193222	ParameterType	Sock *		1193178	0					
ANR	1193223	Identifier	sock		1193178	1					
ANR	1193224	CFGEntryNode	ENTRY		1193178		True				
ANR	1193225	CFGExitNode	EXIT		1193178		True				
ANR	1193226	Symbol	sock		1193178						
ANR	1193227	Symbol	MESSAGE_FINISHED		1193178						
ANR	1193228	Symbol	messenger		1193178						
ANR	1193229	Symbol	messageSent		1193178						
ANR	1193230	Symbol	DELIVERY_SUCCEEDED		1193178						
ANR	1193231	Symbol	closure		1193178						
ANR	1193232	Function	DCMsg :: callMessageReceived	161:0:3492:3767							
ANR	1193233	FunctionDef	"DCMsg :: callMessageReceived (DCMessenger * messenger , Sock * sock)"		1193232	0					
ANR	1193234	CompoundStatement		164:0:3587:3767	1193232	0					
ANR	1193235	ExpressionStatement	deliveryStatus ( DELIVERY_SUCCEEDED )	165:1:3590:3626	1193232	0	True				
ANR	1193236	CallExpression	deliveryStatus ( DELIVERY_SUCCEEDED )		1193232	0					
ANR	1193237	Callee	deliveryStatus		1193232	0					
ANR	1193238	Identifier	deliveryStatus		1193232	0					
ANR	1193239	ArgumentList	DELIVERY_SUCCEEDED		1193232	1					
ANR	1193240	Argument	DELIVERY_SUCCEEDED		1193232	0					
ANR	1193241	Identifier	DELIVERY_SUCCEEDED		1193232	0					
ANR	1193242	IdentifierDeclStatement	"MessageClosureEnum closure = messageReceived ( messenger , sock ) ;"	166:1:3629:3692	1193232	1	True				
ANR	1193243	IdentifierDecl	"closure = messageReceived ( messenger , sock )"		1193232	0					
ANR	1193244	IdentifierDeclType	MessageClosureEnum		1193232	0					
ANR	1193245	Identifier	closure		1193232	1					
ANR	1193246	AssignmentExpression	"closure = messageReceived ( messenger , sock )"		1193232	2		=			
ANR	1193247	Identifier	closure		1193232	0					
ANR	1193248	CallExpression	"messageReceived ( messenger , sock )"		1193232	1					
ANR	1193249	Callee	messageReceived		1193232	0					
ANR	1193250	Identifier	messageReceived		1193232	0					
ANR	1193251	ArgumentList	messenger		1193232	1					
ANR	1193252	Argument	messenger		1193232	0					
ANR	1193253	Identifier	messenger		1193232	0					
ANR	1193254	Argument	sock		1193232	1					
ANR	1193255	Identifier	sock		1193232	0					
ANR	1193256	IfStatement	if ( closure == MESSAGE_FINISHED )		1193232	2					
ANR	1193257	Condition	closure == MESSAGE_FINISHED	167:5:3699:3725	1193232	0	True				
ANR	1193258	EqualityExpression	closure == MESSAGE_FINISHED		1193232	0		==			
ANR	1193259	Identifier	closure		1193232	0					
ANR	1193260	Identifier	MESSAGE_FINISHED		1193232	1					
ANR	1193261	CompoundStatement		4:35:141:141	1193232	1					
ANR	1193262	ExpressionStatement	doCallback ( )	168:2:3733:3745	1193232	0	True				
ANR	1193263	CallExpression	doCallback ( )		1193232	0					
ANR	1193264	Callee	doCallback		1193232	0					
ANR	1193265	Identifier	doCallback		1193232	0					
ANR	1193266	ArgumentList			1193232	1					
ANR	1193267	ReturnStatement	return closure ;	170:1:3751:3765	1193232	3	True				
ANR	1193268	Identifier	closure		1193232	0					
ANR	1193269	ReturnType	DCMsg :: MessageClosureEnum		1193232	1					
ANR	1193270	Identifier	DCMsg :: callMessageReceived		1193232	2					
ANR	1193271	ParameterList	"DCMessenger * messenger , Sock * sock"		1193232	3					
ANR	1193272	Parameter	DCMessenger * messenger	163:4:3550:3571	1193232	0	True				
ANR	1193273	ParameterType	DCMessenger *		1193232	0					
ANR	1193274	Identifier	messenger		1193232	1					
ANR	1193275	Parameter	Sock * sock	163:28:3574:3583	1193232	1	True				
ANR	1193276	ParameterType	Sock *		1193232	0					
ANR	1193277	Identifier	sock		1193232	1					
ANR	1193278	CFGEntryNode	ENTRY		1193232		True				
ANR	1193279	CFGExitNode	EXIT		1193232		True				
ANR	1193280	Symbol	sock		1193232						
ANR	1193281	Symbol	MESSAGE_FINISHED		1193232						
ANR	1193282	Symbol	messenger		1193232						
ANR	1193283	Symbol	messageReceived		1193232						
ANR	1193284	Symbol	DELIVERY_SUCCEEDED		1193232						
ANR	1193285	Symbol	closure		1193232						
ANR	1193286	Function	DCMsg :: messageSendFailed	189:0:4052:4139							
ANR	1193287	FunctionDef	DCMsg :: messageSendFailed (DCMessenger * messenger)		1193286	0					
ANR	1193288	CompoundStatement		191:0:4108:4139	1193286	0					
ANR	1193289	ExpressionStatement	reportFailure ( messenger )	192:1:4111:4137	1193286	0	True				
ANR	1193290	CallExpression	reportFailure ( messenger )		1193286	0					
ANR	1193291	Callee	reportFailure		1193286	0					
ANR	1193292	Identifier	reportFailure		1193286	0					
ANR	1193293	ArgumentList	messenger		1193286	1					
ANR	1193294	Argument	messenger		1193286	0					
ANR	1193295	Identifier	messenger		1193286	0					
ANR	1193296	ReturnType	void		1193286	1					
ANR	1193297	Identifier	DCMsg :: messageSendFailed		1193286	2					
ANR	1193298	ParameterList	DCMessenger * messenger		1193286	3					
ANR	1193299	Parameter	DCMessenger * messenger	190:26:4083:4104	1193286	0	True				
ANR	1193300	ParameterType	DCMessenger *		1193286	0					
ANR	1193301	Identifier	messenger		1193286	1					
ANR	1193302	CFGEntryNode	ENTRY		1193286		True				
ANR	1193303	CFGExitNode	EXIT		1193286		True				
ANR	1193304	Symbol	messenger		1193286						
ANR	1193305	Function	DCMsg :: messageReceiveFailed	195:0:4142:4232							
ANR	1193306	FunctionDef	DCMsg :: messageReceiveFailed (DCMessenger * messenger)		1193305	0					
ANR	1193307	CompoundStatement		197:0:4201:4232	1193305	0					
ANR	1193308	ExpressionStatement	reportFailure ( messenger )	198:1:4204:4230	1193305	0	True				
ANR	1193309	CallExpression	reportFailure ( messenger )		1193305	0					
ANR	1193310	Callee	reportFailure		1193305	0					
ANR	1193311	Identifier	reportFailure		1193305	0					
ANR	1193312	ArgumentList	messenger		1193305	1					
ANR	1193313	Argument	messenger		1193305	0					
ANR	1193314	Identifier	messenger		1193305	0					
ANR	1193315	ReturnType	void		1193305	1					
ANR	1193316	Identifier	DCMsg :: messageReceiveFailed		1193305	2					
ANR	1193317	ParameterList	DCMessenger * messenger		1193305	3					
ANR	1193318	Parameter	DCMessenger * messenger	196:29:4176:4197	1193305	0	True				
ANR	1193319	ParameterType	DCMessenger *		1193305	0					
ANR	1193320	Identifier	messenger		1193305	1					
ANR	1193321	CFGEntryNode	ENTRY		1193305		True				
ANR	1193322	CFGExitNode	EXIT		1193305		True				
ANR	1193323	Symbol	messenger		1193305						
ANR	1193324	Function	DCMsg :: reportSuccess	201:0:4235:4398							
ANR	1193325	FunctionDef	DCMsg :: reportSuccess (DCMessenger * messenger)		1193324	0					
ANR	1193326	CompoundStatement		203:0:4287:4398	1193324	0					
ANR	1193327	ExpressionStatement	"dprintf ( m_msg_success_debug_level , ""Completed %s to %s\\n"" , name ( ) , messenger -> peerDescription ( ) )"	204:1:4290:4396	1193324	0	True				
ANR	1193328	CallExpression	"dprintf ( m_msg_success_debug_level , ""Completed %s to %s\\n"" , name ( ) , messenger -> peerDescription ( ) )"		1193324	0					
ANR	1193329	Callee	dprintf		1193324	0					
ANR	1193330	Identifier	dprintf		1193324	0					
ANR	1193331	ArgumentList	m_msg_success_debug_level		1193324	1					
ANR	1193332	Argument	m_msg_success_debug_level		1193324	0					
ANR	1193333	Identifier	m_msg_success_debug_level		1193324	0					
ANR	1193334	Argument	"""Completed %s to %s\\n"""		1193324	1					
ANR	1193335	PrimaryExpression	"""Completed %s to %s\\n"""		1193324	0					
ANR	1193336	Argument	name ( )		1193324	2					
ANR	1193337	CallExpression	name ( )		1193324	0					
ANR	1193338	Callee	name		1193324	0					
ANR	1193339	Identifier	name		1193324	0					
ANR	1193340	ArgumentList			1193324	1					
ANR	1193341	Argument	messenger -> peerDescription ( )		1193324	3					
ANR	1193342	CallExpression	messenger -> peerDescription ( )		1193324	0					
ANR	1193343	Callee	messenger -> peerDescription		1193324	0					
ANR	1193344	PtrMemberAccess	messenger -> peerDescription		1193324	0					
ANR	1193345	Identifier	messenger		1193324	0					
ANR	1193346	Identifier	peerDescription		1193324	1					
ANR	1193347	ArgumentList			1193324	1					
ANR	1193348	ReturnType	void		1193324	1					
ANR	1193349	Identifier	DCMsg :: reportSuccess		1193324	2					
ANR	1193350	ParameterList	DCMessenger * messenger		1193324	3					
ANR	1193351	Parameter	DCMessenger * messenger	202:22:4262:4283	1193324	0	True				
ANR	1193352	ParameterType	DCMessenger *		1193324	0					
ANR	1193353	Identifier	messenger		1193324	1					
ANR	1193354	CFGEntryNode	ENTRY		1193324		True				
ANR	1193355	CFGExitNode	EXIT		1193324		True				
ANR	1193356	Symbol	messenger		1193324						
ANR	1193357	Symbol	* messenger		1193324						
ANR	1193358	Symbol	name		1193324						
ANR	1193359	Symbol	messenger -> peerDescription		1193324						
ANR	1193360	Symbol	m_msg_success_debug_level		1193324						
ANR	1193361	Function	DCMsg :: reportFailure	209:0:4401:4728							
ANR	1193362	FunctionDef	DCMsg :: reportFailure (DCMessenger * messenger)		1193361	0					
ANR	1193363	CompoundStatement		211:0:4453:4728	1193361	0					
ANR	1193364	IdentifierDeclStatement	int debug_level = m_msg_failure_debug_level ;	212:1:4456:4499	1193361	0	True				
ANR	1193365	IdentifierDecl	debug_level = m_msg_failure_debug_level		1193361	0					
ANR	1193366	IdentifierDeclType	int		1193361	0					
ANR	1193367	Identifier	debug_level		1193361	1					
ANR	1193368	AssignmentExpression	debug_level = m_msg_failure_debug_level		1193361	2		=			
ANR	1193369	Identifier	m_msg_failure_debug_level		1193361	0					
ANR	1193370	Identifier	m_msg_failure_debug_level		1193361	1					
ANR	1193371	IfStatement	if ( m_delivery_status == DELIVERY_CANCELED )		1193361	1					
ANR	1193372	Condition	m_delivery_status == DELIVERY_CANCELED	213:5:4506:4543	1193361	0	True				
ANR	1193373	EqualityExpression	m_delivery_status == DELIVERY_CANCELED		1193361	0		==			
ANR	1193374	Identifier	m_delivery_status		1193361	0					
ANR	1193375	Identifier	DELIVERY_CANCELED		1193361	1					
ANR	1193376	CompoundStatement		3:46:93:93	1193361	1					
ANR	1193377	ExpressionStatement	debug_level = m_msg_cancel_debug_level	214:2:4551:4589	1193361	0	True				
ANR	1193378	AssignmentExpression	debug_level = m_msg_cancel_debug_level		1193361	0		=			
ANR	1193379	Identifier	debug_level		1193361	0					
ANR	1193380	Identifier	m_msg_cancel_debug_level		1193361	1					
ANR	1193381	ExpressionStatement	"dprintf ( debug_level , ""Failed to send %s to %s: %s\\n"" , name ( ) , messenger -> peerDescription ( ) , m_errstack . getFullText ( ) )"	216:1:4595:4726	1193361	2	True				
ANR	1193382	CallExpression	"dprintf ( debug_level , ""Failed to send %s to %s: %s\\n"" , name ( ) , messenger -> peerDescription ( ) , m_errstack . getFullText ( ) )"		1193361	0					
ANR	1193383	Callee	dprintf		1193361	0					
ANR	1193384	Identifier	dprintf		1193361	0					
ANR	1193385	ArgumentList	debug_level		1193361	1					
ANR	1193386	Argument	debug_level		1193361	0					
ANR	1193387	Identifier	debug_level		1193361	0					
ANR	1193388	Argument	"""Failed to send %s to %s: %s\\n"""		1193361	1					
ANR	1193389	PrimaryExpression	"""Failed to send %s to %s: %s\\n"""		1193361	0					
ANR	1193390	Argument	name ( )		1193361	2					
ANR	1193391	CallExpression	name ( )		1193361	0					
ANR	1193392	Callee	name		1193361	0					
ANR	1193393	Identifier	name		1193361	0					
ANR	1193394	ArgumentList			1193361	1					
ANR	1193395	Argument	messenger -> peerDescription ( )		1193361	3					
ANR	1193396	CallExpression	messenger -> peerDescription ( )		1193361	0					
ANR	1193397	Callee	messenger -> peerDescription		1193361	0					
ANR	1193398	PtrMemberAccess	messenger -> peerDescription		1193361	0					
ANR	1193399	Identifier	messenger		1193361	0					
ANR	1193400	Identifier	peerDescription		1193361	1					
ANR	1193401	ArgumentList			1193361	1					
ANR	1193402	Argument	m_errstack . getFullText ( )		1193361	4					
ANR	1193403	CallExpression	m_errstack . getFullText ( )		1193361	0					
ANR	1193404	Callee	m_errstack . getFullText		1193361	0					
ANR	1193405	MemberAccess	m_errstack . getFullText		1193361	0					
ANR	1193406	Identifier	m_errstack		1193361	0					
ANR	1193407	Identifier	getFullText		1193361	1					
ANR	1193408	ArgumentList			1193361	1					
ANR	1193409	ReturnType	void		1193361	1					
ANR	1193410	Identifier	DCMsg :: reportFailure		1193361	2					
ANR	1193411	ParameterList	DCMessenger * messenger		1193361	3					
ANR	1193412	Parameter	DCMessenger * messenger	210:22:4428:4449	1193361	0	True				
ANR	1193413	ParameterType	DCMessenger *		1193361	0					
ANR	1193414	Identifier	messenger		1193361	1					
ANR	1193415	CFGEntryNode	ENTRY		1193361		True				
ANR	1193416	CFGExitNode	EXIT		1193361		True				
ANR	1193417	Symbol	m_msg_failure_debug_level		1193361						
ANR	1193418	Symbol	DELIVERY_CANCELED		1193361						
ANR	1193419	Symbol	debug_level		1193361						
ANR	1193420	Symbol	messenger		1193361						
ANR	1193421	Symbol	* messenger		1193361						
ANR	1193422	Symbol	name		1193361						
ANR	1193423	Symbol	messenger -> peerDescription		1193361						
ANR	1193424	Symbol	m_errstack . getFullText		1193361						
ANR	1193425	Symbol	m_delivery_status		1193361						
ANR	1193426	Symbol	m_msg_cancel_debug_level		1193361						
ANR	1193427	Symbol	m_errstack		1193361						
ANR	1193428	Function	DCMsg :: addError	222:0:4731:4941							
ANR	1193429	FunctionDef	"DCMsg :: addError (int code , char const * format)"		1193428	0					
ANR	1193430	CompoundStatement		224:0:4789:4941	1193428	0					
ANR	1193431	IdentifierDeclStatement	va_list args ;	225:1:4792:4804	1193428	0	True				
ANR	1193432	IdentifierDecl	args		1193428	0					
ANR	1193433	IdentifierDeclType	va_list		1193428	0					
ANR	1193434	Identifier	args		1193428	1					
ANR	1193435	ExpressionStatement	"va_start ( args , format )"	226:1:4807:4829	1193428	1	True				
ANR	1193436	CallExpression	"va_start ( args , format )"		1193428	0					
ANR	1193437	Callee	va_start		1193428	0					
ANR	1193438	Identifier	va_start		1193428	0					
ANR	1193439	ArgumentList	args		1193428	1					
ANR	1193440	Argument	args		1193428	0					
ANR	1193441	Identifier	args		1193428	0					
ANR	1193442	Argument	format		1193428	1					
ANR	1193443	Identifier	format		1193428	0					
ANR	1193444	IdentifierDeclStatement	MyString msg ;	228:1:4833:4845	1193428	2	True				
ANR	1193445	IdentifierDecl	msg		1193428	0					
ANR	1193446	IdentifierDeclType	MyString		1193428	0					
ANR	1193447	Identifier	msg		1193428	1					
ANR	1193448	ExpressionStatement	"msg . vsprintf ( format , args )"	229:1:4848:4875	1193428	3	True				
ANR	1193449	CallExpression	"msg . vsprintf ( format , args )"		1193428	0					
ANR	1193450	Callee	msg . vsprintf		1193428	0					
ANR	1193451	MemberAccess	msg . vsprintf		1193428	0					
ANR	1193452	Identifier	msg		1193428	0					
ANR	1193453	Identifier	vsprintf		1193428	1					
ANR	1193454	ArgumentList	format		1193428	1					
ANR	1193455	Argument	format		1193428	0					
ANR	1193456	Identifier	format		1193428	0					
ANR	1193457	Argument	args		1193428	1					
ANR	1193458	Identifier	args		1193428	0					
ANR	1193459	ExpressionStatement	"m_errstack . push ( ""CEDAR"" , code , msg . Value ( ) )"	230:1:4878:4923	1193428	4	True				
ANR	1193460	CallExpression	"m_errstack . push ( ""CEDAR"" , code , msg . Value ( ) )"		1193428	0					
ANR	1193461	Callee	m_errstack . push		1193428	0					
ANR	1193462	MemberAccess	m_errstack . push		1193428	0					
ANR	1193463	Identifier	m_errstack		1193428	0					
ANR	1193464	Identifier	push		1193428	1					
ANR	1193465	ArgumentList	"""CEDAR"""		1193428	1					
ANR	1193466	Argument	"""CEDAR"""		1193428	0					
ANR	1193467	PrimaryExpression	"""CEDAR"""		1193428	0					
ANR	1193468	Argument	code		1193428	1					
ANR	1193469	Identifier	code		1193428	0					
ANR	1193470	Argument	msg . Value ( )		1193428	2					
ANR	1193471	CallExpression	msg . Value ( )		1193428	0					
ANR	1193472	Callee	msg . Value		1193428	0					
ANR	1193473	MemberAccess	msg . Value		1193428	0					
ANR	1193474	Identifier	msg		1193428	0					
ANR	1193475	Identifier	Value		1193428	1					
ANR	1193476	ArgumentList			1193428	1					
ANR	1193477	ExpressionStatement	va_end ( args )	232:1:4927:4939	1193428	5	True				
ANR	1193478	CallExpression	va_end ( args )		1193428	0					
ANR	1193479	Callee	va_end		1193428	0					
ANR	1193480	Identifier	va_end		1193428	0					
ANR	1193481	ArgumentList	args		1193428	1					
ANR	1193482	Argument	args		1193428	0					
ANR	1193483	Identifier	args		1193428	0					
ANR	1193484	ReturnType	void		1193428	1					
ANR	1193485	Identifier	DCMsg :: addError		1193428	2					
ANR	1193486	ParameterList	"int code , char const * format"		1193428	3					
ANR	1193487	Parameter	int code	223:17:4753:4760	1193428	0	True				
ANR	1193488	ParameterType	int		1193428	0					
ANR	1193489	Identifier	code		1193428	1					
ANR	1193490	Parameter	char const * format	223:27:4763:4780	1193428	1	True				
ANR	1193491	ParameterType	char const *		1193428	0					
ANR	1193492	Identifier	format		1193428	1					
ANR	1193493	CFGEntryNode	ENTRY		1193428		True				
ANR	1193494	CFGExitNode	EXIT		1193428		True				
ANR	1193495	Symbol	args		1193428						
ANR	1193496	Symbol	msg		1193428						
ANR	1193497	Symbol	code		1193428						
ANR	1193498	Symbol	format		1193428						
ANR	1193499	Symbol	m_errstack		1193428						
ANR	1193500	Symbol	msg . Value		1193428						
ANR	1193501	Function	DCMsg :: getErrorStackText	235:0:4944:5020							
ANR	1193502	FunctionDef	DCMsg :: getErrorStackText ()		1193501	0					
ANR	1193503	CompoundStatement		237:0:4984:5020	1193501	0					
ANR	1193504	ReturnStatement	return m_errstack . getFullText ( ) ;	238:1:4987:5018	1193501	0	True				
ANR	1193505	CallExpression	m_errstack . getFullText ( )		1193501	0					
ANR	1193506	Callee	m_errstack . getFullText		1193501	0					
ANR	1193507	MemberAccess	m_errstack . getFullText		1193501	0					
ANR	1193508	Identifier	m_errstack		1193501	0					
ANR	1193509	Identifier	getFullText		1193501	1					
ANR	1193510	ArgumentList			1193501	1					
ANR	1193511	ReturnType	char const *		1193501	1					
ANR	1193512	Identifier	DCMsg :: getErrorStackText		1193501	2					
ANR	1193513	ParameterList			1193501	3					
ANR	1193514	CFGEntryNode	ENTRY		1193501		True				
ANR	1193515	CFGExitNode	EXIT		1193501		True				
ANR	1193516	Symbol	m_errstack . getFullText		1193501						
ANR	1193517	Symbol	m_errstack		1193501						
ANR	1193518	Function	DCMsg :: sockFailed	241:0:5023:5294							
ANR	1193519	FunctionDef	DCMsg :: sockFailed (Sock * sock)		1193518	0					
ANR	1193520	CompoundStatement		243:0:5060:5294	1193518	0					
ANR	1193521	IfStatement	if ( sock -> is_encode ( ) )		1193518	0					
ANR	1193522	Condition	sock -> is_encode ( )	245:5:5128:5144	1193518	0	True				
ANR	1193523	CallExpression	sock -> is_encode ( )		1193518	0					
ANR	1193524	Callee	sock -> is_encode		1193518	0					
ANR	1193525	PtrMemberAccess	sock -> is_encode		1193518	0					
ANR	1193526	Identifier	sock		1193518	0					
ANR	1193527	Identifier	is_encode		1193518	1					
ANR	1193528	ArgumentList			1193518	1					
ANR	1193529	CompoundStatement		3:25:87:87	1193518	1					
ANR	1193530	ExpressionStatement	"addError ( CEDAR_ERR_PUT_FAILED , ""failed writing to socket"" )"	246:2:5152:5212	1193518	0	True				
ANR	1193531	CallExpression	"addError ( CEDAR_ERR_PUT_FAILED , ""failed writing to socket"" )"		1193518	0					
ANR	1193532	Callee	addError		1193518	0					
ANR	1193533	Identifier	addError		1193518	0					
ANR	1193534	ArgumentList	CEDAR_ERR_PUT_FAILED		1193518	1					
ANR	1193535	Argument	CEDAR_ERR_PUT_FAILED		1193518	0					
ANR	1193536	Identifier	CEDAR_ERR_PUT_FAILED		1193518	0					
ANR	1193537	Argument	"""failed writing to socket"""		1193518	1					
ANR	1193538	PrimaryExpression	"""failed writing to socket"""		1193518	0					
ANR	1193539	ElseStatement	else		1193518	0					
ANR	1193540	CompoundStatement		6:6:162:162	1193518	0					
ANR	1193541	ExpressionStatement	"addError ( CEDAR_ERR_GET_FAILED , ""failed reading from socket"" )"	249:2:5227:5289	1193518	0	True				
ANR	1193542	CallExpression	"addError ( CEDAR_ERR_GET_FAILED , ""failed reading from socket"" )"		1193518	0					
ANR	1193543	Callee	addError		1193518	0					
ANR	1193544	Identifier	addError		1193518	0					
ANR	1193545	ArgumentList	CEDAR_ERR_GET_FAILED		1193518	1					
ANR	1193546	Argument	CEDAR_ERR_GET_FAILED		1193518	0					
ANR	1193547	Identifier	CEDAR_ERR_GET_FAILED		1193518	0					
ANR	1193548	Argument	"""failed reading from socket"""		1193518	1					
ANR	1193549	PrimaryExpression	"""failed reading from socket"""		1193518	0					
ANR	1193550	ReturnType	void		1193518	1					
ANR	1193551	Identifier	DCMsg :: sockFailed		1193518	2					
ANR	1193552	ParameterList	Sock * sock		1193518	3					
ANR	1193553	Parameter	Sock * sock	242:19:5047:5056	1193518	0	True				
ANR	1193554	ParameterType	Sock *		1193518	0					
ANR	1193555	Identifier	sock		1193518	1					
ANR	1193556	CFGEntryNode	ENTRY		1193518		True				
ANR	1193557	CFGExitNode	EXIT		1193518		True				
ANR	1193558	Symbol	sock		1193518						
ANR	1193559	Symbol	CEDAR_ERR_GET_FAILED		1193518						
ANR	1193560	Symbol	CEDAR_ERR_PUT_FAILED		1193518						
ANR	1193561	Symbol	sock -> is_encode		1193518						
ANR	1193562	Symbol	* sock		1193518						
ANR	1193563	Function	DCMessenger :: DCMessenger	254:0:5298:5487							
ANR	1193564	FunctionDef	DCMessenger :: DCMessenger (classy_counted_ptr < Daemon > daemon)		1193563	0					
ANR	1193565	CompoundStatement		255:0:5360:5487	1193563	0					
ANR	1193566	ExpressionStatement	m_daemon = daemon	256:1:5363:5380	1193563	0	True				
ANR	1193567	AssignmentExpression	m_daemon = daemon		1193563	0		=			
ANR	1193568	Identifier	m_daemon		1193563	0					
ANR	1193569	Identifier	daemon		1193563	1					
ANR	1193570	ExpressionStatement	m_sock = NULL	257:1:5383:5396	1193563	1	True				
ANR	1193571	AssignmentExpression	m_sock = NULL		1193563	0		=			
ANR	1193572	Identifier	m_sock		1193563	0					
ANR	1193573	Identifier	NULL		1193563	1					
ANR	1193574	ExpressionStatement	m_callback_msg = NULL	258:1:5399:5420	1193563	2	True				
ANR	1193575	AssignmentExpression	m_callback_msg = NULL		1193563	0		=			
ANR	1193576	Identifier	m_callback_msg		1193563	0					
ANR	1193577	Identifier	NULL		1193563	1					
ANR	1193578	ExpressionStatement	m_callback_sock = NULL	259:1:5423:5445	1193563	3	True				
ANR	1193579	AssignmentExpression	m_callback_sock = NULL		1193563	0		=			
ANR	1193580	Identifier	m_callback_sock		1193563	0					
ANR	1193581	Identifier	NULL		1193563	1					
ANR	1193582	ExpressionStatement	m_pending_operation = NOTHING_PENDING	260:1:5448:5485	1193563	4	True				
ANR	1193583	AssignmentExpression	m_pending_operation = NOTHING_PENDING		1193563	0		=			
ANR	1193584	Identifier	m_pending_operation		1193563	0					
ANR	1193585	Identifier	NOTHING_PENDING		1193563	1					
ANR	1193586	Identifier	DCMessenger :: DCMessenger		1193563	1					
ANR	1193587	ParameterList	classy_counted_ptr < Daemon > daemon		1193563	2					
ANR	1193588	Parameter	classy_counted_ptr < Daemon > daemon	254:26:5324:5356	1193563	0	True				
ANR	1193589	ParameterType	classy_counted_ptr < Daemon >		1193563	0					
ANR	1193590	Identifier	daemon		1193563	1					
ANR	1193591	CFGEntryNode	ENTRY		1193563		True				
ANR	1193592	CFGExitNode	EXIT		1193563		True				
ANR	1193593	Symbol	NULL		1193563						
ANR	1193594	Symbol	m_pending_operation		1193563						
ANR	1193595	Symbol	m_sock		1193563						
ANR	1193596	Symbol	m_callback_msg		1193563						
ANR	1193597	Symbol	NOTHING_PENDING		1193563						
ANR	1193598	Symbol	m_callback_sock		1193563						
ANR	1193599	Symbol	m_daemon		1193563						
ANR	1193600	Symbol	daemon		1193563						
ANR	1193601	Function	DCMessenger :: DCMessenger	263:0:5490:5654							
ANR	1193602	FunctionDef	DCMessenger :: DCMessenger (classy_counted_ptr < Sock > sock)		1193601	0					
ANR	1193603	CompoundStatement		265:0:5563:5654	1193601	0					
ANR	1193604	ExpressionStatement	m_callback_msg = NULL	266:1:5566:5587	1193601	0	True				
ANR	1193605	AssignmentExpression	m_callback_msg = NULL		1193601	0		=			
ANR	1193606	Identifier	m_callback_msg		1193601	0					
ANR	1193607	Identifier	NULL		1193601	1					
ANR	1193608	ExpressionStatement	m_callback_sock = NULL	267:1:5590:5612	1193601	1	True				
ANR	1193609	AssignmentExpression	m_callback_sock = NULL		1193601	0		=			
ANR	1193610	Identifier	m_callback_sock		1193601	0					
ANR	1193611	Identifier	NULL		1193601	1					
ANR	1193612	ExpressionStatement	m_pending_operation = NOTHING_PENDING	268:1:5615:5652	1193601	2	True				
ANR	1193613	AssignmentExpression	m_pending_operation = NOTHING_PENDING		1193601	0		=			
ANR	1193614	Identifier	m_pending_operation		1193601	0					
ANR	1193615	Identifier	NOTHING_PENDING		1193601	1					
ANR	1193616	Identifier	DCMessenger :: DCMessenger		1193601	1					
ANR	1193617	ParameterList	classy_counted_ptr < Sock > sock		1193601	2					
ANR	1193618	Parameter	classy_counted_ptr < Sock > sock	263:26:5516:5544	1193601	0	True				
ANR	1193619	ParameterType	classy_counted_ptr < Sock >		1193601	0					
ANR	1193620	Identifier	sock		1193601	1					
ANR	1193621	CFGEntryNode	ENTRY		1193601		True				
ANR	1193622	CFGExitNode	EXIT		1193601		True				
ANR	1193623	Symbol	sock		1193601						
ANR	1193624	Symbol	NULL		1193601						
ANR	1193625	Symbol	m_pending_operation		1193601						
ANR	1193626	Symbol	m_callback_msg		1193601						
ANR	1193627	Symbol	NOTHING_PENDING		1193601						
ANR	1193628	Symbol	m_callback_sock		1193601						
ANR	1193629	Function	DCMessenger :: ~DCMessenger	271:0:5657:5862							
ANR	1193630	FunctionDef	DCMessenger :: ~DCMessenger ()		1193629	0					
ANR	1193631	CompoundStatement		272:0:5685:5862	1193629	0					
ANR	1193632	ExpressionStatement	ASSERT ( ! m_callback_msg . get ( ) )	274:1:5755:5784	1193629	0	True				
ANR	1193633	CallExpression	ASSERT ( ! m_callback_msg . get ( ) )		1193629	0					
ANR	1193634	Callee	ASSERT		1193629	0					
ANR	1193635	Identifier	ASSERT		1193629	0					
ANR	1193636	ArgumentList	! m_callback_msg . get ( )		1193629	1					
ANR	1193637	Argument	! m_callback_msg . get ( )		1193629	0					
ANR	1193638	UnaryOperationExpression	! m_callback_msg . get ( )		1193629	0					
ANR	1193639	UnaryOperator	!		1193629	0					
ANR	1193640	CallExpression	m_callback_msg . get ( )		1193629	1					
ANR	1193641	Callee	m_callback_msg . get		1193629	0					
ANR	1193642	MemberAccess	m_callback_msg . get		1193629	0					
ANR	1193643	Identifier	m_callback_msg		1193629	0					
ANR	1193644	Identifier	get		1193629	1					
ANR	1193645	ArgumentList			1193629	1					
ANR	1193646	ExpressionStatement	ASSERT ( ! m_callback_sock )	275:1:5787:5811	1193629	1	True				
ANR	1193647	CallExpression	ASSERT ( ! m_callback_sock )		1193629	0					
ANR	1193648	Callee	ASSERT		1193629	0					
ANR	1193649	Identifier	ASSERT		1193629	0					
ANR	1193650	ArgumentList	! m_callback_sock		1193629	1					
ANR	1193651	Argument	! m_callback_sock		1193629	0					
ANR	1193652	UnaryOperationExpression	! m_callback_sock		1193629	0					
ANR	1193653	UnaryOperator	!		1193629	0					
ANR	1193654	Identifier	m_callback_sock		1193629	1					
ANR	1193655	ExpressionStatement	ASSERT ( m_pending_operation == NOTHING_PENDING )	276:1:5814:5860	1193629	2	True				
ANR	1193656	CallExpression	ASSERT ( m_pending_operation == NOTHING_PENDING )		1193629	0					
ANR	1193657	Callee	ASSERT		1193629	0					
ANR	1193658	Identifier	ASSERT		1193629	0					
ANR	1193659	ArgumentList	m_pending_operation == NOTHING_PENDING		1193629	1					
ANR	1193660	Argument	m_pending_operation == NOTHING_PENDING		1193629	0					
ANR	1193661	EqualityExpression	m_pending_operation == NOTHING_PENDING		1193629	0		==			
ANR	1193662	Identifier	m_pending_operation		1193629	0					
ANR	1193663	Identifier	NOTHING_PENDING		1193629	1					
ANR	1193664	Identifier	DCMessenger :: ~DCMessenger		1193629	1					
ANR	1193665	ParameterList			1193629	2					
ANR	1193666	CFGEntryNode	ENTRY		1193629		True				
ANR	1193667	CFGExitNode	EXIT		1193629		True				
ANR	1193668	Symbol	m_pending_operation		1193629						
ANR	1193669	Symbol	m_callback_msg . get		1193629						
ANR	1193670	Symbol	m_callback_msg		1193629						
ANR	1193671	Symbol	NOTHING_PENDING		1193629						
ANR	1193672	Symbol	m_callback_sock		1193629						
ANR	1193673	Function	DCMessenger :: peerDescription	279:0:5865:6112							
ANR	1193674	FunctionDef	DCMessenger :: peerDescription ()		1193673	0					
ANR	1193675	CompoundStatement		280:0:5908:6112	1193673	0					
ANR	1193676	IfStatement	if ( m_daemon . get ( ) )		1193673	0					
ANR	1193677	Condition	m_daemon . get ( )	281:5:5915:5928	1193673	0	True				
ANR	1193678	CallExpression	m_daemon . get ( )		1193673	0					
ANR	1193679	Callee	m_daemon . get		1193673	0					
ANR	1193680	MemberAccess	m_daemon . get		1193673	0					
ANR	1193681	Identifier	m_daemon		1193673	0					
ANR	1193682	Identifier	get		1193673	1					
ANR	1193683	ArgumentList			1193673	1					
ANR	1193684	CompoundStatement		2:22:23:23	1193673	1					
ANR	1193685	ReturnStatement	return m_daemon -> idStr ( ) ;	282:2:5936:5960	1193673	0	True				
ANR	1193686	CallExpression	m_daemon -> idStr ( )		1193673	0					
ANR	1193687	Callee	m_daemon -> idStr		1193673	0					
ANR	1193688	PtrMemberAccess	m_daemon -> idStr		1193673	0					
ANR	1193689	Identifier	m_daemon		1193673	0					
ANR	1193690	Identifier	idStr		1193673	1					
ANR	1193691	ArgumentList			1193673	1					
ANR	1193692	IfStatement	if ( m_sock . get ( ) )		1193673	1					
ANR	1193693	Condition	m_sock . get ( )	284:5:5970:5981	1193673	0	True				
ANR	1193694	CallExpression	m_sock . get ( )		1193673	0					
ANR	1193695	Callee	m_sock . get		1193673	0					
ANR	1193696	MemberAccess	m_sock . get		1193673	0					
ANR	1193697	Identifier	m_sock		1193673	0					
ANR	1193698	Identifier	get		1193673	1					
ANR	1193699	ArgumentList			1193673	1					
ANR	1193700	CompoundStatement		5:20:76:76	1193673	1					
ANR	1193701	ReturnStatement	return m_sock -> peer_description ( ) ;	285:2:5989:6022	1193673	0	True				
ANR	1193702	CallExpression	m_sock -> peer_description ( )		1193673	0					
ANR	1193703	Callee	m_sock -> peer_description		1193673	0					
ANR	1193704	PtrMemberAccess	m_sock -> peer_description		1193673	0					
ANR	1193705	Identifier	m_sock		1193673	0					
ANR	1193706	Identifier	peer_description		1193673	1					
ANR	1193707	ArgumentList			1193673	1					
ANR	1193708	ExpressionStatement	"EXCEPT ( ""No daemon or sock object in DCMessenger::peerDescription()"" )"	287:1:6028:6096	1193673	2	True				
ANR	1193709	CallExpression	"EXCEPT ( ""No daemon or sock object in DCMessenger::peerDescription()"" )"		1193673	0					
ANR	1193710	Callee	EXCEPT		1193673	0					
ANR	1193711	Identifier	EXCEPT		1193673	0					
ANR	1193712	ArgumentList	"""No daemon or sock object in DCMessenger::peerDescription()"""		1193673	1					
ANR	1193713	Argument	"""No daemon or sock object in DCMessenger::peerDescription()"""		1193673	0					
ANR	1193714	PrimaryExpression	"""No daemon or sock object in DCMessenger::peerDescription()"""		1193673	0					
ANR	1193715	ReturnStatement	return NULL ;	288:1:6099:6110	1193673	3	True				
ANR	1193716	Identifier	NULL		1193673	0					
ANR	1193717	ReturnType	char const *		1193673	1					
ANR	1193718	Identifier	DCMessenger :: peerDescription		1193673	2					
ANR	1193719	ParameterList			1193673	3					
ANR	1193720	CFGEntryNode	ENTRY		1193673		True				
ANR	1193721	CFGExitNode	EXIT		1193673		True				
ANR	1193722	Symbol	m_daemon . get		1193673						
ANR	1193723	Symbol	NULL		1193673						
ANR	1193724	Symbol	m_sock . get		1193673						
ANR	1193725	Symbol	* m_sock		1193673						
ANR	1193726	Symbol	m_daemon -> idStr		1193673						
ANR	1193727	Symbol	m_sock		1193673						
ANR	1193728	Symbol	* m_daemon		1193673						
ANR	1193729	Symbol	m_daemon		1193673						
ANR	1193730	Symbol	m_sock -> peer_description		1193673						
ANR	1193731	Function	DCMessenger :: startCommand	291:0:6115:8075							
ANR	1193732	FunctionDef	DCMessenger :: startCommand (classy_counted_ptr < DCMsg > msg)		1193731	0					
ANR	1193733	CompoundStatement		292:0:6179:8075	1193731	0					
ANR	1193734	IdentifierDeclStatement	MyString error ;	293:1:6182:6196	1193731	0	True				
ANR	1193735	IdentifierDecl	error		1193731	0					
ANR	1193736	IdentifierDeclType	MyString		1193731	0					
ANR	1193737	Identifier	error		1193731	1					
ANR	1193738	ExpressionStatement	msg -> setMessenger ( this )	294:1:6199:6224	1193731	1	True				
ANR	1193739	CallExpression	msg -> setMessenger ( this )		1193731	0					
ANR	1193740	Callee	msg -> setMessenger		1193731	0					
ANR	1193741	PtrMemberAccess	msg -> setMessenger		1193731	0					
ANR	1193742	Identifier	msg		1193731	0					
ANR	1193743	Identifier	setMessenger		1193731	1					
ANR	1193744	ArgumentList	this		1193731	1					
ANR	1193745	Argument	this		1193731	0					
ANR	1193746	Identifier	this		1193731	0					
ANR	1193747	IfStatement	if ( msg -> deliveryStatus ( ) == DCMsg :: DELIVERY_CANCELED )		1193731	2					
ANR	1193748	Condition	msg -> deliveryStatus ( ) == DCMsg :: DELIVERY_CANCELED	296:5:6232:6280	1193731	0	True				
ANR	1193749	EqualityExpression	msg -> deliveryStatus ( ) == DCMsg :: DELIVERY_CANCELED		1193731	0		==			
ANR	1193750	CallExpression	msg -> deliveryStatus ( )		1193731	0					
ANR	1193751	Callee	msg -> deliveryStatus		1193731	0					
ANR	1193752	PtrMemberAccess	msg -> deliveryStatus		1193731	0					
ANR	1193753	Identifier	msg		1193731	0					
ANR	1193754	Identifier	deliveryStatus		1193731	1					
ANR	1193755	ArgumentList			1193731	1					
ANR	1193756	Identifier	DCMsg :: DELIVERY_CANCELED		1193731	1					
ANR	1193757	CompoundStatement		5:57:104:104	1193731	1					
ANR	1193758	ExpressionStatement	msg -> callMessageSendFailed ( this )	297:2:6288:6322	1193731	0	True				
ANR	1193759	CallExpression	msg -> callMessageSendFailed ( this )		1193731	0					
ANR	1193760	Callee	msg -> callMessageSendFailed		1193731	0					
ANR	1193761	PtrMemberAccess	msg -> callMessageSendFailed		1193731	0					
ANR	1193762	Identifier	msg		1193731	0					
ANR	1193763	Identifier	callMessageSendFailed		1193731	1					
ANR	1193764	ArgumentList	this		1193731	1					
ANR	1193765	Argument	this		1193731	0					
ANR	1193766	Identifier	this		1193731	0					
ANR	1193767	ReturnStatement	return ;	298:2:6326:6332	1193731	1	True				
ANR	1193768	IdentifierDeclStatement	time_t deadline = msg -> getDeadline ( ) ;	301:1:6339:6375	1193731	3	True				
ANR	1193769	IdentifierDecl	deadline = msg -> getDeadline ( )		1193731	0					
ANR	1193770	IdentifierDeclType	time_t		1193731	0					
ANR	1193771	Identifier	deadline		1193731	1					
ANR	1193772	AssignmentExpression	deadline = msg -> getDeadline ( )		1193731	2		=			
ANR	1193773	Identifier	deadline		1193731	0					
ANR	1193774	CallExpression	msg -> getDeadline ( )		1193731	1					
ANR	1193775	Callee	msg -> getDeadline		1193731	0					
ANR	1193776	PtrMemberAccess	msg -> getDeadline		1193731	0					
ANR	1193777	Identifier	msg		1193731	0					
ANR	1193778	Identifier	getDeadline		1193731	1					
ANR	1193779	ArgumentList			1193731	1					
ANR	1193780	IfStatement	if ( deadline && deadline < time ( NULL ) )		1193731	4					
ANR	1193781	Condition	deadline && deadline < time ( NULL )	302:5:6382:6414	1193731	0	True				
ANR	1193782	AndExpression	deadline && deadline < time ( NULL )		1193731	0		&&			
ANR	1193783	Identifier	deadline		1193731	0					
ANR	1193784	RelationalExpression	deadline < time ( NULL )		1193731	1		<			
ANR	1193785	Identifier	deadline		1193731	0					
ANR	1193786	CallExpression	time ( NULL )		1193731	1					
ANR	1193787	Callee	time		1193731	0					
ANR	1193788	Identifier	time		1193731	0					
ANR	1193789	ArgumentList	NULL		1193731	1					
ANR	1193790	Argument	NULL		1193731	0					
ANR	1193791	Identifier	NULL		1193731	0					
ANR	1193792	CompoundStatement		11:41:238:238	1193731	1					
ANR	1193793	ExpressionStatement	"msg -> addError ( CEDAR_ERR_DEADLINE_EXPIRED , ""deadline for delivery of this message expired"" )"	303:2:6422:6519	1193731	0	True				
ANR	1193794	CallExpression	"msg -> addError ( CEDAR_ERR_DEADLINE_EXPIRED , ""deadline for delivery of this message expired"" )"		1193731	0					
ANR	1193795	Callee	msg -> addError		1193731	0					
ANR	1193796	PtrMemberAccess	msg -> addError		1193731	0					
ANR	1193797	Identifier	msg		1193731	0					
ANR	1193798	Identifier	addError		1193731	1					
ANR	1193799	ArgumentList	CEDAR_ERR_DEADLINE_EXPIRED		1193731	1					
ANR	1193800	Argument	CEDAR_ERR_DEADLINE_EXPIRED		1193731	0					
ANR	1193801	Identifier	CEDAR_ERR_DEADLINE_EXPIRED		1193731	0					
ANR	1193802	Argument	"""deadline for delivery of this message expired"""		1193731	1					
ANR	1193803	PrimaryExpression	"""deadline for delivery of this message expired"""		1193731	0					
ANR	1193804	ExpressionStatement	msg -> callMessageSendFailed ( this )	305:2:6523:6557	1193731	1	True				
ANR	1193805	CallExpression	msg -> callMessageSendFailed ( this )		1193731	0					
ANR	1193806	Callee	msg -> callMessageSendFailed		1193731	0					
ANR	1193807	PtrMemberAccess	msg -> callMessageSendFailed		1193731	0					
ANR	1193808	Identifier	msg		1193731	0					
ANR	1193809	Identifier	callMessageSendFailed		1193731	1					
ANR	1193810	ArgumentList	this		1193731	1					
ANR	1193811	Argument	this		1193731	0					
ANR	1193812	Identifier	this		1193731	0					
ANR	1193813	ReturnStatement	return ;	306:2:6561:6567	1193731	2	True				
ANR	1193814	IdentifierDeclStatement	Stream :: stream_type st = msg -> getStreamType ( ) ;	312:1:6728:6773	1193731	5	True				
ANR	1193815	IdentifierDecl	st = msg -> getStreamType ( )		1193731	0					
ANR	1193816	IdentifierDeclType	Stream :: stream_type		1193731	0					
ANR	1193817	Identifier	st		1193731	1					
ANR	1193818	AssignmentExpression	st = msg -> getStreamType ( )		1193731	2		=			
ANR	1193819	Identifier	st		1193731	0					
ANR	1193820	CallExpression	msg -> getStreamType ( )		1193731	1					
ANR	1193821	Callee	msg -> getStreamType		1193731	0					
ANR	1193822	PtrMemberAccess	msg -> getStreamType		1193731	0					
ANR	1193823	Identifier	msg		1193731	0					
ANR	1193824	Identifier	getStreamType		1193731	1					
ANR	1193825	ArgumentList			1193731	1					
ANR	1193826	IfStatement	"if ( daemonCoreSockAdapter . TooManyRegisteredSockets ( - 1 , & error , st == Stream :: safe_sock ? 2 : 1 ) )"		1193731	6					
ANR	1193827	Condition	"daemonCoreSockAdapter . TooManyRegisteredSockets ( - 1 , & error , st == Stream :: safe_sock ? 2 : 1 )"	313:5:6780:6862	1193731	0	True				
ANR	1193828	CallExpression	"daemonCoreSockAdapter . TooManyRegisteredSockets ( - 1 , & error , st == Stream :: safe_sock ? 2 : 1 )"		1193731	0					
ANR	1193829	Callee	daemonCoreSockAdapter . TooManyRegisteredSockets		1193731	0					
ANR	1193830	MemberAccess	daemonCoreSockAdapter . TooManyRegisteredSockets		1193731	0					
ANR	1193831	Identifier	daemonCoreSockAdapter		1193731	0					
ANR	1193832	Identifier	TooManyRegisteredSockets		1193731	1					
ANR	1193833	ArgumentList	- 1		1193731	1					
ANR	1193834	Argument	- 1		1193731	0					
ANR	1193835	UnaryOperationExpression	- 1		1193731	0					
ANR	1193836	UnaryOperator	-		1193731	0					
ANR	1193837	PrimaryExpression	1		1193731	1					
ANR	1193838	Argument	& error		1193731	1					
ANR	1193839	UnaryOperationExpression	& error		1193731	0					
ANR	1193840	UnaryOperator	&		1193731	0					
ANR	1193841	Identifier	error		1193731	1					
ANR	1193842	Argument	st == Stream :: safe_sock ? 2 : 1		1193731	2					
ANR	1193843	ConditionalExpression	st == Stream :: safe_sock ? 2 : 1		1193731	0					
ANR	1193844	Condition	st == Stream :: safe_sock		1193731	0					
ANR	1193845	EqualityExpression	st == Stream :: safe_sock		1193731	0		==			
ANR	1193846	Identifier	st		1193731	0					
ANR	1193847	Identifier	Stream :: safe_sock		1193731	1					
ANR	1193848	PrimaryExpression	2		1193731	1					
ANR	1193849	PrimaryExpression	1		1193731	2					
ANR	1193850	CompoundStatement		22:91:686:686	1193731	1					
ANR	1193851	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Delaying delivery of %s to %s, because %s\\n"" , msg -> name ( ) , peerDescription ( ) , error . Value ( ) )"	319:2:7124:7240	1193731	0	True				
ANR	1193852	CallExpression	"dprintf ( D_FULLDEBUG , ""Delaying delivery of %s to %s, because %s\\n"" , msg -> name ( ) , peerDescription ( ) , error . Value ( ) )"		1193731	0					
ANR	1193853	Callee	dprintf		1193731	0					
ANR	1193854	Identifier	dprintf		1193731	0					
ANR	1193855	ArgumentList	D_FULLDEBUG		1193731	1					
ANR	1193856	Argument	D_FULLDEBUG		1193731	0					
ANR	1193857	Identifier	D_FULLDEBUG		1193731	0					
ANR	1193858	Argument	"""Delaying delivery of %s to %s, because %s\\n"""		1193731	1					
ANR	1193859	PrimaryExpression	"""Delaying delivery of %s to %s, because %s\\n"""		1193731	0					
ANR	1193860	Argument	msg -> name ( )		1193731	2					
ANR	1193861	CallExpression	msg -> name ( )		1193731	0					
ANR	1193862	Callee	msg -> name		1193731	0					
ANR	1193863	PtrMemberAccess	msg -> name		1193731	0					
ANR	1193864	Identifier	msg		1193731	0					
ANR	1193865	Identifier	name		1193731	1					
ANR	1193866	ArgumentList			1193731	1					
ANR	1193867	Argument	peerDescription ( )		1193731	3					
ANR	1193868	CallExpression	peerDescription ( )		1193731	0					
ANR	1193869	Callee	peerDescription		1193731	0					
ANR	1193870	Identifier	peerDescription		1193731	0					
ANR	1193871	ArgumentList			1193731	1					
ANR	1193872	Argument	error . Value ( )		1193731	4					
ANR	1193873	CallExpression	error . Value ( )		1193731	0					
ANR	1193874	Callee	error . Value		1193731	0					
ANR	1193875	MemberAccess	error . Value		1193731	0					
ANR	1193876	Identifier	error		1193731	0					
ANR	1193877	Identifier	Value		1193731	1					
ANR	1193878	ArgumentList			1193731	1					
ANR	1193879	ExpressionStatement	"startCommandAfterDelay ( 1 , msg )"	321:2:7244:7276	1193731	1	True				
ANR	1193880	CallExpression	"startCommandAfterDelay ( 1 , msg )"		1193731	0					
ANR	1193881	Callee	startCommandAfterDelay		1193731	0					
ANR	1193882	Identifier	startCommandAfterDelay		1193731	0					
ANR	1193883	ArgumentList	1		1193731	1					
ANR	1193884	Argument	1		1193731	0					
ANR	1193885	PrimaryExpression	1		1193731	0					
ANR	1193886	Argument	msg		1193731	1					
ANR	1193887	Identifier	msg		1193731	0					
ANR	1193888	ReturnStatement	return ;	322:2:7280:7286	1193731	2	True				
ANR	1193889	ExpressionStatement	ASSERT ( ! m_callback_msg . get ( ) )	326:1:7364:7393	1193731	7	True				
ANR	1193890	CallExpression	ASSERT ( ! m_callback_msg . get ( ) )		1193731	0					
ANR	1193891	Callee	ASSERT		1193731	0					
ANR	1193892	Identifier	ASSERT		1193731	0					
ANR	1193893	ArgumentList	! m_callback_msg . get ( )		1193731	1					
ANR	1193894	Argument	! m_callback_msg . get ( )		1193731	0					
ANR	1193895	UnaryOperationExpression	! m_callback_msg . get ( )		1193731	0					
ANR	1193896	UnaryOperator	!		1193731	0					
ANR	1193897	CallExpression	m_callback_msg . get ( )		1193731	1					
ANR	1193898	Callee	m_callback_msg . get		1193731	0					
ANR	1193899	MemberAccess	m_callback_msg . get		1193731	0					
ANR	1193900	Identifier	m_callback_msg		1193731	0					
ANR	1193901	Identifier	get		1193731	1					
ANR	1193902	ArgumentList			1193731	1					
ANR	1193903	ExpressionStatement	ASSERT ( ! m_callback_sock )	327:1:7396:7420	1193731	8	True				
ANR	1193904	CallExpression	ASSERT ( ! m_callback_sock )		1193731	0					
ANR	1193905	Callee	ASSERT		1193731	0					
ANR	1193906	Identifier	ASSERT		1193731	0					
ANR	1193907	ArgumentList	! m_callback_sock		1193731	1					
ANR	1193908	Argument	! m_callback_sock		1193731	0					
ANR	1193909	UnaryOperationExpression	! m_callback_sock		1193731	0					
ANR	1193910	UnaryOperator	!		1193731	0					
ANR	1193911	Identifier	m_callback_sock		1193731	1					
ANR	1193912	ExpressionStatement	ASSERT ( m_pending_operation == NOTHING_PENDING )	328:1:7423:7469	1193731	9	True				
ANR	1193913	CallExpression	ASSERT ( m_pending_operation == NOTHING_PENDING )		1193731	0					
ANR	1193914	Callee	ASSERT		1193731	0					
ANR	1193915	Identifier	ASSERT		1193731	0					
ANR	1193916	ArgumentList	m_pending_operation == NOTHING_PENDING		1193731	1					
ANR	1193917	Argument	m_pending_operation == NOTHING_PENDING		1193731	0					
ANR	1193918	EqualityExpression	m_pending_operation == NOTHING_PENDING		1193731	0		==			
ANR	1193919	Identifier	m_pending_operation		1193731	0					
ANR	1193920	Identifier	NOTHING_PENDING		1193731	1					
ANR	1193921	ExpressionStatement	m_pending_operation = START_COMMAND_PENDING	330:1:7473:7516	1193731	10	True				
ANR	1193922	AssignmentExpression	m_pending_operation = START_COMMAND_PENDING		1193731	0		=			
ANR	1193923	Identifier	m_pending_operation		1193731	0					
ANR	1193924	Identifier	START_COMMAND_PENDING		1193731	1					
ANR	1193925	ExpressionStatement	m_callback_msg = msg	331:1:7519:7539	1193731	11	True				
ANR	1193926	AssignmentExpression	m_callback_msg = msg		1193731	0		=			
ANR	1193927	Identifier	m_callback_msg		1193731	0					
ANR	1193928	Identifier	msg		1193731	1					
ANR	1193929	ExpressionStatement	m_callback_sock = m_sock . get ( )	332:1:7542:7572	1193731	12	True				
ANR	1193930	AssignmentExpression	m_callback_sock = m_sock . get ( )		1193731	0		=			
ANR	1193931	Identifier	m_callback_sock		1193731	0					
ANR	1193932	CallExpression	m_sock . get ( )		1193731	1					
ANR	1193933	Callee	m_sock . get		1193731	0					
ANR	1193934	MemberAccess	m_sock . get		1193731	0					
ANR	1193935	Identifier	m_sock		1193731	0					
ANR	1193936	Identifier	get		1193731	1					
ANR	1193937	ArgumentList			1193731	1					
ANR	1193938	IfStatement	if ( ! m_callback_sock )		1193731	13					
ANR	1193939	Condition	! m_callback_sock	333:5:7579:7594	1193731	0	True				
ANR	1193940	UnaryOperationExpression	! m_callback_sock		1193731	0					
ANR	1193941	UnaryOperator	!		1193731	0					
ANR	1193942	Identifier	m_callback_sock		1193731	1					
ANR	1193943	CompoundStatement		43:2:1422:1451	1193731	1					
ANR	1193944	IdentifierDeclStatement	const bool nonblocking = true ;	334:2:7602:7631	1193731	0	True				
ANR	1193945	IdentifierDecl	nonblocking = true		1193731	0					
ANR	1193946	IdentifierDeclType	const bool		1193731	0					
ANR	1193947	Identifier	nonblocking		1193731	1					
ANR	1193948	AssignmentExpression	nonblocking = true		1193731	2		=			
ANR	1193949	Identifier	true		1193731	0					
ANR	1193950	Identifier	true		1193731	1					
ANR	1193951	ExpressionStatement	"m_callback_sock = m_daemon -> makeConnectedSocket ( st , msg -> getTimeout ( ) , msg -> getDeadline ( ) , & msg -> m_errstack , nonblocking )"	335:2:7635:7752	1193731	1	True				
ANR	1193952	AssignmentExpression	"m_callback_sock = m_daemon -> makeConnectedSocket ( st , msg -> getTimeout ( ) , msg -> getDeadline ( ) , & msg -> m_errstack , nonblocking )"		1193731	0		=			
ANR	1193953	Identifier	m_callback_sock		1193731	0					
ANR	1193954	CallExpression	"m_daemon -> makeConnectedSocket ( st , msg -> getTimeout ( ) , msg -> getDeadline ( ) , & msg -> m_errstack , nonblocking )"		1193731	1					
ANR	1193955	Callee	m_daemon -> makeConnectedSocket		1193731	0					
ANR	1193956	PtrMemberAccess	m_daemon -> makeConnectedSocket		1193731	0					
ANR	1193957	Identifier	m_daemon		1193731	0					
ANR	1193958	Identifier	makeConnectedSocket		1193731	1					
ANR	1193959	ArgumentList	st		1193731	1					
ANR	1193960	Argument	st		1193731	0					
ANR	1193961	Identifier	st		1193731	0					
ANR	1193962	Argument	msg -> getTimeout ( )		1193731	1					
ANR	1193963	CallExpression	msg -> getTimeout ( )		1193731	0					
ANR	1193964	Callee	msg -> getTimeout		1193731	0					
ANR	1193965	PtrMemberAccess	msg -> getTimeout		1193731	0					
ANR	1193966	Identifier	msg		1193731	0					
ANR	1193967	Identifier	getTimeout		1193731	1					
ANR	1193968	ArgumentList			1193731	1					
ANR	1193969	Argument	msg -> getDeadline ( )		1193731	2					
ANR	1193970	CallExpression	msg -> getDeadline ( )		1193731	0					
ANR	1193971	Callee	msg -> getDeadline		1193731	0					
ANR	1193972	PtrMemberAccess	msg -> getDeadline		1193731	0					
ANR	1193973	Identifier	msg		1193731	0					
ANR	1193974	Identifier	getDeadline		1193731	1					
ANR	1193975	ArgumentList			1193731	1					
ANR	1193976	Argument	& msg -> m_errstack		1193731	3					
ANR	1193977	UnaryOperationExpression	& msg -> m_errstack		1193731	0					
ANR	1193978	UnaryOperator	&		1193731	0					
ANR	1193979	PtrMemberAccess	msg -> m_errstack		1193731	1					
ANR	1193980	Identifier	msg		1193731	0					
ANR	1193981	Identifier	m_errstack		1193731	1					
ANR	1193982	Argument	nonblocking		1193731	4					
ANR	1193983	Identifier	nonblocking		1193731	0					
ANR	1193984	IfStatement	if ( ! m_callback_sock )		1193731	2					
ANR	1193985	Condition	! m_callback_sock	336:6:7760:7775	1193731	0	True				
ANR	1193986	UnaryOperationExpression	! m_callback_sock		1193731	0					
ANR	1193987	UnaryOperator	!		1193731	0					
ANR	1193988	Identifier	m_callback_sock		1193731	1					
ANR	1193989	CompoundStatement		45:25:1599:1599	1193731	1					
ANR	1193990	ExpressionStatement	msg -> callMessageSendFailed ( this )	337:3:7784:7818	1193731	0	True				
ANR	1193991	CallExpression	msg -> callMessageSendFailed ( this )		1193731	0					
ANR	1193992	Callee	msg -> callMessageSendFailed		1193731	0					
ANR	1193993	PtrMemberAccess	msg -> callMessageSendFailed		1193731	0					
ANR	1193994	Identifier	msg		1193731	0					
ANR	1193995	Identifier	callMessageSendFailed		1193731	1					
ANR	1193996	ArgumentList	this		1193731	1					
ANR	1193997	Argument	this		1193731	0					
ANR	1193998	Identifier	this		1193731	0					
ANR	1193999	ReturnStatement	return ;	338:3:7823:7829	1193731	1	True				
ANR	1194000	ExpressionStatement	incRefCount ( )	342:1:7840:7853	1193731	14	True				
ANR	1194001	CallExpression	incRefCount ( )		1193731	0					
ANR	1194002	Callee	incRefCount		1193731	0					
ANR	1194003	Identifier	incRefCount		1193731	0					
ANR	1194004	ArgumentList			1193731	1					
ANR	1194005	ExpressionStatement	"m_daemon -> startCommand_nonblocking ( msg -> m_cmd , m_callback_sock , msg -> getTimeout ( ) , & msg -> m_errstack , & DCMessenger :: connectCallback , this , msg -> name ( ) , msg -> getRawProtocol ( ) , msg -> getSecSessionId ( ) )"	343:1:7856:8073	1193731	15	True				
ANR	1194006	CallExpression	"m_daemon -> startCommand_nonblocking ( msg -> m_cmd , m_callback_sock , msg -> getTimeout ( ) , & msg -> m_errstack , & DCMessenger :: connectCallback , this , msg -> name ( ) , msg -> getRawProtocol ( ) , msg -> getSecSessionId ( ) )"		1193731	0					
ANR	1194007	Callee	m_daemon -> startCommand_nonblocking		1193731	0					
ANR	1194008	PtrMemberAccess	m_daemon -> startCommand_nonblocking		1193731	0					
ANR	1194009	Identifier	m_daemon		1193731	0					
ANR	1194010	Identifier	startCommand_nonblocking		1193731	1					
ANR	1194011	ArgumentList	msg -> m_cmd		1193731	1					
ANR	1194012	Argument	msg -> m_cmd		1193731	0					
ANR	1194013	PtrMemberAccess	msg -> m_cmd		1193731	0					
ANR	1194014	Identifier	msg		1193731	0					
ANR	1194015	Identifier	m_cmd		1193731	1					
ANR	1194016	Argument	m_callback_sock		1193731	1					
ANR	1194017	Identifier	m_callback_sock		1193731	0					
ANR	1194018	Argument	msg -> getTimeout ( )		1193731	2					
ANR	1194019	CallExpression	msg -> getTimeout ( )		1193731	0					
ANR	1194020	Callee	msg -> getTimeout		1193731	0					
ANR	1194021	PtrMemberAccess	msg -> getTimeout		1193731	0					
ANR	1194022	Identifier	msg		1193731	0					
ANR	1194023	Identifier	getTimeout		1193731	1					
ANR	1194024	ArgumentList			1193731	1					
ANR	1194025	Argument	& msg -> m_errstack		1193731	3					
ANR	1194026	UnaryOperationExpression	& msg -> m_errstack		1193731	0					
ANR	1194027	UnaryOperator	&		1193731	0					
ANR	1194028	PtrMemberAccess	msg -> m_errstack		1193731	1					
ANR	1194029	Identifier	msg		1193731	0					
ANR	1194030	Identifier	m_errstack		1193731	1					
ANR	1194031	Argument	& DCMessenger :: connectCallback		1193731	4					
ANR	1194032	UnaryOperationExpression	& DCMessenger :: connectCallback		1193731	0					
ANR	1194033	UnaryOperator	&		1193731	0					
ANR	1194034	Identifier	DCMessenger :: connectCallback		1193731	1					
ANR	1194035	Argument	this		1193731	5					
ANR	1194036	Identifier	this		1193731	0					
ANR	1194037	Argument	msg -> name ( )		1193731	6					
ANR	1194038	CallExpression	msg -> name ( )		1193731	0					
ANR	1194039	Callee	msg -> name		1193731	0					
ANR	1194040	PtrMemberAccess	msg -> name		1193731	0					
ANR	1194041	Identifier	msg		1193731	0					
ANR	1194042	Identifier	name		1193731	1					
ANR	1194043	ArgumentList			1193731	1					
ANR	1194044	Argument	msg -> getRawProtocol ( )		1193731	7					
ANR	1194045	CallExpression	msg -> getRawProtocol ( )		1193731	0					
ANR	1194046	Callee	msg -> getRawProtocol		1193731	0					
ANR	1194047	PtrMemberAccess	msg -> getRawProtocol		1193731	0					
ANR	1194048	Identifier	msg		1193731	0					
ANR	1194049	Identifier	getRawProtocol		1193731	1					
ANR	1194050	ArgumentList			1193731	1					
ANR	1194051	Argument	msg -> getSecSessionId ( )		1193731	8					
ANR	1194052	CallExpression	msg -> getSecSessionId ( )		1193731	0					
ANR	1194053	Callee	msg -> getSecSessionId		1193731	0					
ANR	1194054	PtrMemberAccess	msg -> getSecSessionId		1193731	0					
ANR	1194055	Identifier	msg		1193731	0					
ANR	1194056	Identifier	getSecSessionId		1193731	1					
ANR	1194057	ArgumentList			1193731	1					
ANR	1194058	ReturnType	void		1193731	1					
ANR	1194059	Identifier	DCMessenger :: startCommand		1193731	2					
ANR	1194060	ParameterList	classy_counted_ptr < DCMsg > msg		1193731	3					
ANR	1194061	Parameter	classy_counted_ptr < DCMsg > msg	291:32:6147:6175	1193731	0	True				
ANR	1194062	ParameterType	classy_counted_ptr < DCMsg >		1193731	0					
ANR	1194063	Identifier	msg		1193731	1					
ANR	1194064	CFGEntryNode	ENTRY		1193731		True				
ANR	1194065	CFGExitNode	EXIT		1193731		True				
ANR	1194066	Symbol	msg		1193731						
ANR	1194067	Symbol	DCMsg :: DELIVERY_CANCELED		1193731						
ANR	1194068	Symbol	& error		1193731						
ANR	1194069	Symbol	msg -> deliveryStatus		1193731						
ANR	1194070	Symbol	m_pending_operation		1193731						
ANR	1194071	Symbol	Stream :: safe_sock		1193731						
ANR	1194072	Symbol	CEDAR_ERR_DEADLINE_EXPIRED		1193731						
ANR	1194073	Symbol	msg -> getDeadline		1193731						
ANR	1194074	Symbol	msg -> getStreamType		1193731						
ANR	1194075	Symbol	error		1193731						
ANR	1194076	Symbol	m_daemon -> makeConnectedSocket		1193731						
ANR	1194077	Symbol	peerDescription		1193731						
ANR	1194078	Symbol	daemonCoreSockAdapter		1193731						
ANR	1194079	Symbol	* m_daemon		1193731						
ANR	1194080	Symbol	NOTHING_PENDING		1193731						
ANR	1194081	Symbol	deadline		1193731						
ANR	1194082	Symbol	st		1193731						
ANR	1194083	Symbol	msg -> m_cmd		1193731						
ANR	1194084	Symbol	NULL		1193731						
ANR	1194085	Symbol	nonblocking		1193731						
ANR	1194086	Symbol	m_callback_msg . get		1193731						
ANR	1194087	Symbol	m_sock		1193731						
ANR	1194088	Symbol	msg -> getTimeout		1193731						
ANR	1194089	Symbol	msg -> getSecSessionId		1193731						
ANR	1194090	Symbol	this		1193731						
ANR	1194091	Symbol	START_COMMAND_PENDING		1193731						
ANR	1194092	Symbol	D_FULLDEBUG		1193731						
ANR	1194093	Symbol	m_callback_msg		1193731						
ANR	1194094	Symbol	& msg -> m_errstack		1193731						
ANR	1194095	Symbol	msg -> getRawProtocol		1193731						
ANR	1194096	Symbol	* msg		1193731						
ANR	1194097	Symbol	daemonCoreSockAdapter . TooManyRegisteredSockets		1193731						
ANR	1194098	Symbol	m_callback_sock		1193731						
ANR	1194099	Symbol	m_daemon		1193731						
ANR	1194100	Symbol	m_sock . get		1193731						
ANR	1194101	Symbol	error . Value		1193731						
ANR	1194102	Symbol	true		1193731						
ANR	1194103	Symbol	time		1193731						
ANR	1194104	Symbol	& DCMessenger :: connectCallback		1193731						
ANR	1194105	Symbol	msg -> name		1193731						
ANR	1194106	Function	DCMessenger :: sendBlockingMsg	355:0:8078:8452							
ANR	1194107	FunctionDef	DCMessenger :: sendBlockingMsg (classy_counted_ptr < DCMsg > msg)		1194106	0					
ANR	1194108	CompoundStatement		357:0:8145:8452	1194106	0					
ANR	1194109	ExpressionStatement	msg -> setMessenger ( this )	358:1:8148:8173	1194106	0	True				
ANR	1194110	CallExpression	msg -> setMessenger ( this )		1194106	0					
ANR	1194111	Callee	msg -> setMessenger		1194106	0					
ANR	1194112	PtrMemberAccess	msg -> setMessenger		1194106	0					
ANR	1194113	Identifier	msg		1194106	0					
ANR	1194114	Identifier	setMessenger		1194106	1					
ANR	1194115	ArgumentList	this		1194106	1					
ANR	1194116	Argument	this		1194106	0					
ANR	1194117	Identifier	this		1194106	0					
ANR	1194118	IdentifierDeclStatement	"Sock * sock = m_daemon -> startCommand ( msg -> m_cmd , msg -> getStreamType ( ) , msg -> getTimeout ( ) , & msg -> m_errstack , msg -> name ( ) , msg -> getRawProtocol ( ) , msg -> getSecSessionId ( ) ) ;"	359:1:8176:8358	1194106	1	True				
ANR	1194119	IdentifierDecl	"* sock = m_daemon -> startCommand ( msg -> m_cmd , msg -> getStreamType ( ) , msg -> getTimeout ( ) , & msg -> m_errstack , msg -> name ( ) , msg -> getRawProtocol ( ) , msg -> getSecSessionId ( ) )"		1194106	0					
ANR	1194120	IdentifierDeclType	Sock *		1194106	0					
ANR	1194121	Identifier	sock		1194106	1					
ANR	1194122	AssignmentExpression	"* sock = m_daemon -> startCommand ( msg -> m_cmd , msg -> getStreamType ( ) , msg -> getTimeout ( ) , & msg -> m_errstack , msg -> name ( ) , msg -> getRawProtocol ( ) , msg -> getSecSessionId ( ) )"		1194106	2		=			
ANR	1194123	Identifier	sock		1194106	0					
ANR	1194124	CallExpression	"m_daemon -> startCommand ( msg -> m_cmd , msg -> getStreamType ( ) , msg -> getTimeout ( ) , & msg -> m_errstack , msg -> name ( ) , msg -> getRawProtocol ( ) , msg -> getSecSessionId ( ) )"		1194106	1					
ANR	1194125	Callee	m_daemon -> startCommand		1194106	0					
ANR	1194126	PtrMemberAccess	m_daemon -> startCommand		1194106	0					
ANR	1194127	Identifier	m_daemon		1194106	0					
ANR	1194128	Identifier	startCommand		1194106	1					
ANR	1194129	ArgumentList	msg -> m_cmd		1194106	1					
ANR	1194130	Argument	msg -> m_cmd		1194106	0					
ANR	1194131	PtrMemberAccess	msg -> m_cmd		1194106	0					
ANR	1194132	Identifier	msg		1194106	0					
ANR	1194133	Identifier	m_cmd		1194106	1					
ANR	1194134	Argument	msg -> getStreamType ( )		1194106	1					
ANR	1194135	CallExpression	msg -> getStreamType ( )		1194106	0					
ANR	1194136	Callee	msg -> getStreamType		1194106	0					
ANR	1194137	PtrMemberAccess	msg -> getStreamType		1194106	0					
ANR	1194138	Identifier	msg		1194106	0					
ANR	1194139	Identifier	getStreamType		1194106	1					
ANR	1194140	ArgumentList			1194106	1					
ANR	1194141	Argument	msg -> getTimeout ( )		1194106	2					
ANR	1194142	CallExpression	msg -> getTimeout ( )		1194106	0					
ANR	1194143	Callee	msg -> getTimeout		1194106	0					
ANR	1194144	PtrMemberAccess	msg -> getTimeout		1194106	0					
ANR	1194145	Identifier	msg		1194106	0					
ANR	1194146	Identifier	getTimeout		1194106	1					
ANR	1194147	ArgumentList			1194106	1					
ANR	1194148	Argument	& msg -> m_errstack		1194106	3					
ANR	1194149	UnaryOperationExpression	& msg -> m_errstack		1194106	0					
ANR	1194150	UnaryOperator	&		1194106	0					
ANR	1194151	PtrMemberAccess	msg -> m_errstack		1194106	1					
ANR	1194152	Identifier	msg		1194106	0					
ANR	1194153	Identifier	m_errstack		1194106	1					
ANR	1194154	Argument	msg -> name ( )		1194106	4					
ANR	1194155	CallExpression	msg -> name ( )		1194106	0					
ANR	1194156	Callee	msg -> name		1194106	0					
ANR	1194157	PtrMemberAccess	msg -> name		1194106	0					
ANR	1194158	Identifier	msg		1194106	0					
ANR	1194159	Identifier	name		1194106	1					
ANR	1194160	ArgumentList			1194106	1					
ANR	1194161	Argument	msg -> getRawProtocol ( )		1194106	5					
ANR	1194162	CallExpression	msg -> getRawProtocol ( )		1194106	0					
ANR	1194163	Callee	msg -> getRawProtocol		1194106	0					
ANR	1194164	PtrMemberAccess	msg -> getRawProtocol		1194106	0					
ANR	1194165	Identifier	msg		1194106	0					
ANR	1194166	Identifier	getRawProtocol		1194106	1					
ANR	1194167	ArgumentList			1194106	1					
ANR	1194168	Argument	msg -> getSecSessionId ( )		1194106	6					
ANR	1194169	CallExpression	msg -> getSecSessionId ( )		1194106	0					
ANR	1194170	Callee	msg -> getSecSessionId		1194106	0					
ANR	1194171	PtrMemberAccess	msg -> getSecSessionId		1194106	0					
ANR	1194172	Identifier	msg		1194106	0					
ANR	1194173	Identifier	getSecSessionId		1194106	1					
ANR	1194174	ArgumentList			1194106	1					
ANR	1194175	IfStatement	if ( ! sock )		1194106	2					
ANR	1194176	Condition	! sock	368:5:8366:8370	1194106	0	True				
ANR	1194177	UnaryOperationExpression	! sock		1194106	0					
ANR	1194178	UnaryOperator	!		1194106	0					
ANR	1194179	Identifier	sock		1194106	1					
ANR	1194180	CompoundStatement		12:13:228:228	1194106	1					
ANR	1194181	ExpressionStatement	msg -> callMessageSendFailed ( this )	369:2:8378:8412	1194106	0	True				
ANR	1194182	CallExpression	msg -> callMessageSendFailed ( this )		1194106	0					
ANR	1194183	Callee	msg -> callMessageSendFailed		1194106	0					
ANR	1194184	PtrMemberAccess	msg -> callMessageSendFailed		1194106	0					
ANR	1194185	Identifier	msg		1194106	0					
ANR	1194186	Identifier	callMessageSendFailed		1194106	1					
ANR	1194187	ArgumentList	this		1194106	1					
ANR	1194188	Argument	this		1194106	0					
ANR	1194189	Identifier	this		1194106	0					
ANR	1194190	ReturnStatement	return ;	370:2:8416:8422	1194106	1	True				
ANR	1194191	ExpressionStatement	"writeMsg ( msg , sock )"	373:1:8429:8450	1194106	3	True				
ANR	1194192	CallExpression	"writeMsg ( msg , sock )"		1194106	0					
ANR	1194193	Callee	writeMsg		1194106	0					
ANR	1194194	Identifier	writeMsg		1194106	0					
ANR	1194195	ArgumentList	msg		1194106	1					
ANR	1194196	Argument	msg		1194106	0					
ANR	1194197	Identifier	msg		1194106	0					
ANR	1194198	Argument	sock		1194106	1					
ANR	1194199	Identifier	sock		1194106	0					
ANR	1194200	ReturnType	void		1194106	1					
ANR	1194201	Identifier	DCMessenger :: sendBlockingMsg		1194106	2					
ANR	1194202	ParameterList	classy_counted_ptr < DCMsg > msg		1194106	3					
ANR	1194203	Parameter	classy_counted_ptr < DCMsg > msg	356:30:8113:8141	1194106	0	True				
ANR	1194204	ParameterType	classy_counted_ptr < DCMsg >		1194106	0					
ANR	1194205	Identifier	msg		1194106	1					
ANR	1194206	CFGEntryNode	ENTRY		1194106		True				
ANR	1194207	CFGExitNode	EXIT		1194106		True				
ANR	1194208	Symbol	msg		1194106						
ANR	1194209	Symbol	m_daemon -> startCommand		1194106						
ANR	1194210	Symbol	msg -> m_cmd		1194106						
ANR	1194211	Symbol	msg -> getSecSessionId		1194106						
ANR	1194212	Symbol	msg -> getTimeout		1194106						
ANR	1194213	Symbol	this		1194106						
ANR	1194214	Symbol	msg -> getRawProtocol		1194106						
ANR	1194215	Symbol	& msg -> m_errstack		1194106						
ANR	1194216	Symbol	* msg		1194106						
ANR	1194217	Symbol	msg -> getStreamType		1194106						
ANR	1194218	Symbol	m_daemon		1194106						
ANR	1194219	Symbol	sock		1194106						
ANR	1194220	Symbol	* m_daemon		1194106						
ANR	1194221	Symbol	msg -> name		1194106						
ANR	1194222	Function	DCMessenger :: doneWithSock	376:0:8455:8675							
ANR	1194223	FunctionDef	DCMessenger :: doneWithSock (Stream * sock)		1194222	0					
ANR	1194224	CompoundStatement		378:0:8500:8675	1194222	0					
ANR	1194225	IfStatement	if ( sock != m_sock . get ( ) )		1194222	0					
ANR	1194226	Condition	sock != m_sock . get ( )	381:5:8612:8631	1194222	0	True				
ANR	1194227	EqualityExpression	sock != m_sock . get ( )		1194222	0		!=			
ANR	1194228	Identifier	sock		1194222	0					
ANR	1194229	CallExpression	m_sock . get ( )		1194222	1					
ANR	1194230	Callee	m_sock . get		1194222	0					
ANR	1194231	MemberAccess	m_sock . get		1194222	0					
ANR	1194232	Identifier	m_sock		1194222	0					
ANR	1194233	Identifier	get		1194222	1					
ANR	1194234	ArgumentList			1194222	1					
ANR	1194235	CompoundStatement		4:28:134:134	1194222	1					
ANR	1194236	IfStatement	if ( sock )		1194222	0					
ANR	1194237	Condition	sock	382:6:8643:8646	1194222	0	True				
ANR	1194238	Identifier	sock		1194222	0					
ANR	1194239	CompoundStatement		5:13:149:149	1194222	1					
ANR	1194240	Statement	delete	383:3:8655:8660	1194222	0	True				
ANR	1194241	ExpressionStatement	sock	383:10:8662:8666	1194222	1	True				
ANR	1194242	Identifier	sock		1194222	0					
ANR	1194243	ReturnType	void		1194222	1					
ANR	1194244	Identifier	DCMessenger :: doneWithSock		1194222	2					
ANR	1194245	ParameterList	Stream * sock		1194222	3					
ANR	1194246	Parameter	Stream * sock	377:26:8486:8497	1194222	0	True				
ANR	1194247	ParameterType	Stream *		1194222	0					
ANR	1194248	Identifier	sock		1194222	1					
ANR	1194249	CFGEntryNode	ENTRY		1194222		True				
ANR	1194250	CFGExitNode	EXIT		1194222		True				
ANR	1194251	Symbol	sock		1194222						
ANR	1194252	Symbol	m_sock . get		1194222						
ANR	1194253	Symbol	m_sock		1194222						
ANR	1194254	DeclStmt									
ANR	1194255	Decl							DCMessenger	DCMessenger *	self
ANR	1194256	DeclStmt									
ANR	1194257	Decl							classy_counted_ptr < DCMsg >	classy_counted_ptr < DCMsg >	msg
ANR	1194258	Function	DCMessenger :: writeMsg	415:0:9280:10265							
ANR	1194259	FunctionDef	"DCMessenger :: writeMsg (classy_counted_ptr < DCMsg > msg , Sock * sock)"		1194258	0					
ANR	1194260	CompoundStatement		416:0:9352:10265	1194258	0					
ANR	1194261	ExpressionStatement	ASSERT ( msg . get ( ) )	417:1:9355:9374	1194258	0	True				
ANR	1194262	CallExpression	ASSERT ( msg . get ( ) )		1194258	0					
ANR	1194263	Callee	ASSERT		1194258	0					
ANR	1194264	Identifier	ASSERT		1194258	0					
ANR	1194265	ArgumentList	msg . get ( )		1194258	1					
ANR	1194266	Argument	msg . get ( )		1194258	0					
ANR	1194267	CallExpression	msg . get ( )		1194258	0					
ANR	1194268	Callee	msg . get		1194258	0					
ANR	1194269	MemberAccess	msg . get		1194258	0					
ANR	1194270	Identifier	msg		1194258	0					
ANR	1194271	Identifier	get		1194258	1					
ANR	1194272	ArgumentList			1194258	1					
ANR	1194273	ExpressionStatement	ASSERT ( sock )	418:1:9377:9391	1194258	1	True				
ANR	1194274	CallExpression	ASSERT ( sock )		1194258	0					
ANR	1194275	Callee	ASSERT		1194258	0					
ANR	1194276	Identifier	ASSERT		1194258	0					
ANR	1194277	ArgumentList	sock		1194258	1					
ANR	1194278	Argument	sock		1194258	0					
ANR	1194279	Identifier	sock		1194258	0					
ANR	1194280	ExpressionStatement	msg -> setMessenger ( this )	420:1:9395:9420	1194258	2	True				
ANR	1194281	CallExpression	msg -> setMessenger ( this )		1194258	0					
ANR	1194282	Callee	msg -> setMessenger		1194258	0					
ANR	1194283	PtrMemberAccess	msg -> setMessenger		1194258	0					
ANR	1194284	Identifier	msg		1194258	0					
ANR	1194285	Identifier	setMessenger		1194258	1					
ANR	1194286	ArgumentList	this		1194258	1					
ANR	1194287	Argument	this		1194258	0					
ANR	1194288	Identifier	this		1194258	0					
ANR	1194289	ExpressionStatement	incRefCount ( )	421:1:9423:9436	1194258	3	True				
ANR	1194290	CallExpression	incRefCount ( )		1194258	0					
ANR	1194291	Callee	incRefCount		1194258	0					
ANR	1194292	Identifier	incRefCount		1194258	0					
ANR	1194293	ArgumentList			1194258	1					
ANR	1194294	ExpressionStatement	sock -> encode ( )	427:1:9604:9618	1194258	4	True				
ANR	1194295	CallExpression	sock -> encode ( )		1194258	0					
ANR	1194296	Callee	sock -> encode		1194258	0					
ANR	1194297	PtrMemberAccess	sock -> encode		1194258	0					
ANR	1194298	Identifier	sock		1194258	0					
ANR	1194299	Identifier	encode		1194258	1					
ANR	1194300	ArgumentList			1194258	1					
ANR	1194301	IfStatement	if ( msg -> deliveryStatus ( ) == DCMsg :: DELIVERY_CANCELED )		1194258	5					
ANR	1194302	Condition	msg -> deliveryStatus ( ) == DCMsg :: DELIVERY_CANCELED	429:5:9626:9674	1194258	0	True				
ANR	1194303	EqualityExpression	msg -> deliveryStatus ( ) == DCMsg :: DELIVERY_CANCELED		1194258	0		==			
ANR	1194304	CallExpression	msg -> deliveryStatus ( )		1194258	0					
ANR	1194305	Callee	msg -> deliveryStatus		1194258	0					
ANR	1194306	PtrMemberAccess	msg -> deliveryStatus		1194258	0					
ANR	1194307	Identifier	msg		1194258	0					
ANR	1194308	Identifier	deliveryStatus		1194258	1					
ANR	1194309	ArgumentList			1194258	1					
ANR	1194310	Identifier	DCMsg :: DELIVERY_CANCELED		1194258	1					
ANR	1194311	CompoundStatement		14:57:325:325	1194258	1					
ANR	1194312	ExpressionStatement	msg -> callMessageSendFailed ( this )	430:2:9682:9716	1194258	0	True				
ANR	1194313	CallExpression	msg -> callMessageSendFailed ( this )		1194258	0					
ANR	1194314	Callee	msg -> callMessageSendFailed		1194258	0					
ANR	1194315	PtrMemberAccess	msg -> callMessageSendFailed		1194258	0					
ANR	1194316	Identifier	msg		1194258	0					
ANR	1194317	Identifier	callMessageSendFailed		1194258	1					
ANR	1194318	ArgumentList	this		1194258	1					
ANR	1194319	Argument	this		1194258	0					
ANR	1194320	Identifier	this		1194258	0					
ANR	1194321	ExpressionStatement	doneWithSock ( sock )	431:2:9720:9738	1194258	1	True				
ANR	1194322	CallExpression	doneWithSock ( sock )		1194258	0					
ANR	1194323	Callee	doneWithSock		1194258	0					
ANR	1194324	Identifier	doneWithSock		1194258	0					
ANR	1194325	ArgumentList	sock		1194258	1					
ANR	1194326	Argument	sock		1194258	0					
ANR	1194327	Identifier	sock		1194258	0					
ANR	1194328	ElseStatement	else		1194258	0					
ANR	1194329	IfStatement	"if ( ! msg -> writeMsg ( this , sock ) )"		1194258	0					
ANR	1194330	Condition	"! msg -> writeMsg ( this , sock )"	433:10:9753:9780	1194258	0	True				
ANR	1194331	UnaryOperationExpression	"! msg -> writeMsg ( this , sock )"		1194258	0					
ANR	1194332	UnaryOperator	!		1194258	0					
ANR	1194333	CallExpression	"msg -> writeMsg ( this , sock )"		1194258	1					
ANR	1194334	Callee	msg -> writeMsg		1194258	0					
ANR	1194335	PtrMemberAccess	msg -> writeMsg		1194258	0					
ANR	1194336	Identifier	msg		1194258	0					
ANR	1194337	Identifier	writeMsg		1194258	1					
ANR	1194338	ArgumentList	this		1194258	1					
ANR	1194339	Argument	this		1194258	0					
ANR	1194340	Identifier	this		1194258	0					
ANR	1194341	Argument	sock		1194258	1					
ANR	1194342	Identifier	sock		1194258	0					
ANR	1194343	CompoundStatement		18:41:431:431	1194258	1					
ANR	1194344	ExpressionStatement	msg -> callMessageSendFailed ( this )	434:2:9788:9822	1194258	0	True				
ANR	1194345	CallExpression	msg -> callMessageSendFailed ( this )		1194258	0					
ANR	1194346	Callee	msg -> callMessageSendFailed		1194258	0					
ANR	1194347	PtrMemberAccess	msg -> callMessageSendFailed		1194258	0					
ANR	1194348	Identifier	msg		1194258	0					
ANR	1194349	Identifier	callMessageSendFailed		1194258	1					
ANR	1194350	ArgumentList	this		1194258	1					
ANR	1194351	Argument	this		1194258	0					
ANR	1194352	Identifier	this		1194258	0					
ANR	1194353	ExpressionStatement	doneWithSock ( sock )	435:2:9826:9844	1194258	1	True				
ANR	1194354	CallExpression	doneWithSock ( sock )		1194258	0					
ANR	1194355	Callee	doneWithSock		1194258	0					
ANR	1194356	Identifier	doneWithSock		1194258	0					
ANR	1194357	ArgumentList	sock		1194258	1					
ANR	1194358	Argument	sock		1194258	0					
ANR	1194359	Identifier	sock		1194258	0					
ANR	1194360	ElseStatement	else		1194258	0					
ANR	1194361	IfStatement	if ( ! sock -> end_of_message ( ) )		1194258	0					
ANR	1194362	Condition	! sock -> end_of_message ( )	437:10:9859:9881	1194258	0	True				
ANR	1194363	UnaryOperationExpression	! sock -> end_of_message ( )		1194258	0					
ANR	1194364	UnaryOperator	!		1194258	0					
ANR	1194365	CallExpression	sock -> end_of_message ( )		1194258	1					
ANR	1194366	Callee	sock -> end_of_message		1194258	0					
ANR	1194367	PtrMemberAccess	sock -> end_of_message		1194258	0					
ANR	1194368	Identifier	sock		1194258	0					
ANR	1194369	Identifier	end_of_message		1194258	1					
ANR	1194370	ArgumentList			1194258	1					
ANR	1194371	CompoundStatement		22:36:532:532	1194258	1					
ANR	1194372	ExpressionStatement	"msg -> addError ( CEDAR_ERR_EOM_FAILED , ""failed to send EOM"" )"	438:2:9889:9948	1194258	0	True				
ANR	1194373	CallExpression	"msg -> addError ( CEDAR_ERR_EOM_FAILED , ""failed to send EOM"" )"		1194258	0					
ANR	1194374	Callee	msg -> addError		1194258	0					
ANR	1194375	PtrMemberAccess	msg -> addError		1194258	0					
ANR	1194376	Identifier	msg		1194258	0					
ANR	1194377	Identifier	addError		1194258	1					
ANR	1194378	ArgumentList	CEDAR_ERR_EOM_FAILED		1194258	1					
ANR	1194379	Argument	CEDAR_ERR_EOM_FAILED		1194258	0					
ANR	1194380	Identifier	CEDAR_ERR_EOM_FAILED		1194258	0					
ANR	1194381	Argument	"""failed to send EOM"""		1194258	1					
ANR	1194382	PrimaryExpression	"""failed to send EOM"""		1194258	0					
ANR	1194383	ExpressionStatement	msg -> callMessageSendFailed ( this )	439:2:9952:9986	1194258	1	True				
ANR	1194384	CallExpression	msg -> callMessageSendFailed ( this )		1194258	0					
ANR	1194385	Callee	msg -> callMessageSendFailed		1194258	0					
ANR	1194386	PtrMemberAccess	msg -> callMessageSendFailed		1194258	0					
ANR	1194387	Identifier	msg		1194258	0					
ANR	1194388	Identifier	callMessageSendFailed		1194258	1					
ANR	1194389	ArgumentList	this		1194258	1					
ANR	1194390	Argument	this		1194258	0					
ANR	1194391	Identifier	this		1194258	0					
ANR	1194392	ExpressionStatement	doneWithSock ( sock )	440:2:9990:10008	1194258	2	True				
ANR	1194393	CallExpression	doneWithSock ( sock )		1194258	0					
ANR	1194394	Callee	doneWithSock		1194258	0					
ANR	1194395	Identifier	doneWithSock		1194258	0					
ANR	1194396	ArgumentList	sock		1194258	1					
ANR	1194397	Argument	sock		1194258	0					
ANR	1194398	Identifier	sock		1194258	0					
ANR	1194399	ElseStatement	else		1194258	0					
ANR	1194400	CompoundStatement		29:2:684:754	1194258	0					
ANR	1194401	IdentifierDeclStatement	"DCMsg :: MessageClosureEnum closure = msg -> callMessageSent ( this , sock ) ;"	444:2:10037:10107	1194258	0	True				
ANR	1194402	IdentifierDecl	"closure = msg -> callMessageSent ( this , sock )"		1194258	0					
ANR	1194403	IdentifierDeclType	DCMsg :: MessageClosureEnum		1194258	0					
ANR	1194404	Identifier	closure		1194258	1					
ANR	1194405	AssignmentExpression	"closure = msg -> callMessageSent ( this , sock )"		1194258	2		=			
ANR	1194406	Identifier	closure		1194258	0					
ANR	1194407	CallExpression	"msg -> callMessageSent ( this , sock )"		1194258	1					
ANR	1194408	Callee	msg -> callMessageSent		1194258	0					
ANR	1194409	PtrMemberAccess	msg -> callMessageSent		1194258	0					
ANR	1194410	Identifier	msg		1194258	0					
ANR	1194411	Identifier	callMessageSent		1194258	1					
ANR	1194412	ArgumentList	this		1194258	1					
ANR	1194413	Argument	this		1194258	0					
ANR	1194414	Identifier	this		1194258	0					
ANR	1194415	Argument	sock		1194258	1					
ANR	1194416	Identifier	sock		1194258	0					
ANR	1194417	SwitchStatement	switch ( closure )		1194258	1					
ANR	1194418	Condition	closure	446:10:10120:10126	1194258	0	True				
ANR	1194419	Identifier	closure		1194258	0					
ANR	1194420	CompoundStatement		31:20:777:777	1194258	1					
ANR	1194421	Label	case DCMsg :: MESSAGE_FINISHED :	447:2:10134:10162	1194258	0	True				
ANR	1194422	Identifier	DCMsg :: MESSAGE_FINISHED		1194258	0					
ANR	1194423	ExpressionStatement	doneWithSock ( sock )	448:3:10167:10185	1194258	1	True				
ANR	1194424	CallExpression	doneWithSock ( sock )		1194258	0					
ANR	1194425	Callee	doneWithSock		1194258	0					
ANR	1194426	Identifier	doneWithSock		1194258	0					
ANR	1194427	ArgumentList	sock		1194258	1					
ANR	1194428	Argument	sock		1194258	0					
ANR	1194429	Identifier	sock		1194258	0					
ANR	1194430	BreakStatement	break ;	449:3:10190:10195	1194258	2	True				
ANR	1194431	Label	case DCMsg :: MESSAGE_CONTINUING :	450:2:10199:10229	1194258	3	True				
ANR	1194432	Identifier	DCMsg :: MESSAGE_CONTINUING		1194258	0					
ANR	1194433	BreakStatement	break ;	451:3:10234:10239	1194258	4	True				
ANR	1194434	ExpressionStatement	decRefCount ( )	455:1:10250:10263	1194258	6	True				
ANR	1194435	CallExpression	decRefCount ( )		1194258	0					
ANR	1194436	Callee	decRefCount		1194258	0					
ANR	1194437	Identifier	decRefCount		1194258	0					
ANR	1194438	ArgumentList			1194258	1					
ANR	1194439	ReturnType	void		1194258	1					
ANR	1194440	Identifier	DCMessenger :: writeMsg		1194258	2					
ANR	1194441	ParameterList	"classy_counted_ptr < DCMsg > msg , Sock * sock"		1194258	3					
ANR	1194442	Parameter	classy_counted_ptr < DCMsg > msg	415:28:9308:9336	1194258	0	True				
ANR	1194443	ParameterType	classy_counted_ptr < DCMsg >		1194258	0					
ANR	1194444	Identifier	msg		1194258	1					
ANR	1194445	Parameter	Sock * sock	415:59:9339:9348	1194258	1	True				
ANR	1194446	ParameterType	Sock *		1194258	0					
ANR	1194447	Identifier	sock		1194258	1					
ANR	1194448	CFGEntryNode	ENTRY		1194258		True				
ANR	1194449	CFGExitNode	EXIT		1194258		True				
ANR	1194450	Symbol	msg		1194258						
ANR	1194451	Symbol	DCMsg :: DELIVERY_CANCELED		1194258						
ANR	1194452	Symbol	msg -> deliveryStatus		1194258						
ANR	1194453	Symbol	sock -> end_of_message		1194258						
ANR	1194454	Symbol	msg -> writeMsg		1194258						
ANR	1194455	Symbol	this		1194258						
ANR	1194456	Symbol	* msg		1194258						
ANR	1194457	Symbol	CEDAR_ERR_EOM_FAILED		1194258						
ANR	1194458	Symbol	sock		1194258						
ANR	1194459	Symbol	msg . get		1194258						
ANR	1194460	Symbol	closure		1194258						
ANR	1194461	Symbol	* sock		1194258						
ANR	1194462	Symbol	msg -> callMessageSent		1194258						
ANR	1194463	Function	DCMessenger :: startReceiveMsg	458:0:10268:11199							
ANR	1194464	FunctionDef	"DCMessenger :: startReceiveMsg (classy_counted_ptr < DCMsg > msg , Sock * sock)"		1194463	0					
ANR	1194465	CompoundStatement		459:0:10347:11199	1194463	0					
ANR	1194466	ExpressionStatement	ASSERT ( ! m_callback_msg . get ( ) )	461:1:10406:10437	1194463	0	True				
ANR	1194467	CallExpression	ASSERT ( ! m_callback_msg . get ( ) )		1194463	0					
ANR	1194468	Callee	ASSERT		1194463	0					
ANR	1194469	Identifier	ASSERT		1194463	0					
ANR	1194470	ArgumentList	! m_callback_msg . get ( )		1194463	1					
ANR	1194471	Argument	! m_callback_msg . get ( )		1194463	0					
ANR	1194472	UnaryOperationExpression	! m_callback_msg . get ( )		1194463	0					
ANR	1194473	UnaryOperator	!		1194463	0					
ANR	1194474	CallExpression	m_callback_msg . get ( )		1194463	1					
ANR	1194475	Callee	m_callback_msg . get		1194463	0					
ANR	1194476	MemberAccess	m_callback_msg . get		1194463	0					
ANR	1194477	Identifier	m_callback_msg		1194463	0					
ANR	1194478	Identifier	get		1194463	1					
ANR	1194479	ArgumentList			1194463	1					
ANR	1194480	ExpressionStatement	ASSERT ( ! m_callback_sock )	462:1:10440:10466	1194463	1	True				
ANR	1194481	CallExpression	ASSERT ( ! m_callback_sock )		1194463	0					
ANR	1194482	Callee	ASSERT		1194463	0					
ANR	1194483	Identifier	ASSERT		1194463	0					
ANR	1194484	ArgumentList	! m_callback_sock		1194463	1					
ANR	1194485	Argument	! m_callback_sock		1194463	0					
ANR	1194486	UnaryOperationExpression	! m_callback_sock		1194463	0					
ANR	1194487	UnaryOperator	!		1194463	0					
ANR	1194488	Identifier	m_callback_sock		1194463	1					
ANR	1194489	ExpressionStatement	ASSERT ( m_pending_operation == NOTHING_PENDING )	463:1:10469:10517	1194463	2	True				
ANR	1194490	CallExpression	ASSERT ( m_pending_operation == NOTHING_PENDING )		1194463	0					
ANR	1194491	Callee	ASSERT		1194463	0					
ANR	1194492	Identifier	ASSERT		1194463	0					
ANR	1194493	ArgumentList	m_pending_operation == NOTHING_PENDING		1194463	1					
ANR	1194494	Argument	m_pending_operation == NOTHING_PENDING		1194463	0					
ANR	1194495	EqualityExpression	m_pending_operation == NOTHING_PENDING		1194463	0		==			
ANR	1194496	Identifier	m_pending_operation		1194463	0					
ANR	1194497	Identifier	NOTHING_PENDING		1194463	1					
ANR	1194498	ExpressionStatement	msg -> setMessenger ( this )	465:1:10521:10546	1194463	3	True				
ANR	1194499	CallExpression	msg -> setMessenger ( this )		1194463	0					
ANR	1194500	Callee	msg -> setMessenger		1194463	0					
ANR	1194501	PtrMemberAccess	msg -> setMessenger		1194463	0					
ANR	1194502	Identifier	msg		1194463	0					
ANR	1194503	Identifier	setMessenger		1194463	1					
ANR	1194504	ArgumentList	this		1194463	1					
ANR	1194505	Argument	this		1194463	0					
ANR	1194506	Identifier	this		1194463	0					
ANR	1194507	IdentifierDeclStatement	MyString name ;	467:1:10550:10563	1194463	4	True				
ANR	1194508	IdentifierDecl	name		1194463	0					
ANR	1194509	IdentifierDeclType	MyString		1194463	0					
ANR	1194510	Identifier	name		1194463	1					
ANR	1194511	ExpressionStatement	"name . sprintf ( ""DCMessenger::receiveMsgCallback %s"" , msg -> name ( ) )"	468:1:10566:10629	1194463	5	True				
ANR	1194512	CallExpression	"name . sprintf ( ""DCMessenger::receiveMsgCallback %s"" , msg -> name ( ) )"		1194463	0					
ANR	1194513	Callee	name . sprintf		1194463	0					
ANR	1194514	MemberAccess	name . sprintf		1194463	0					
ANR	1194515	Identifier	name		1194463	0					
ANR	1194516	Identifier	sprintf		1194463	1					
ANR	1194517	ArgumentList	"""DCMessenger::receiveMsgCallback %s"""		1194463	1					
ANR	1194518	Argument	"""DCMessenger::receiveMsgCallback %s"""		1194463	0					
ANR	1194519	PrimaryExpression	"""DCMessenger::receiveMsgCallback %s"""		1194463	0					
ANR	1194520	Argument	msg -> name ( )		1194463	1					
ANR	1194521	CallExpression	msg -> name ( )		1194463	0					
ANR	1194522	Callee	msg -> name		1194463	0					
ANR	1194523	PtrMemberAccess	msg -> name		1194463	0					
ANR	1194524	Identifier	msg		1194463	0					
ANR	1194525	Identifier	name		1194463	1					
ANR	1194526	ArgumentList			1194463	1					
ANR	1194527	ExpressionStatement	incRefCount ( )	470:1:10633:10646	1194463	6	True				
ANR	1194528	CallExpression	incRefCount ( )		1194463	0					
ANR	1194529	Callee	incRefCount		1194463	0					
ANR	1194530	Identifier	incRefCount		1194463	0					
ANR	1194531	ArgumentList			1194463	1					
ANR	1194532	IdentifierDeclStatement	"int reg_rc = daemonCoreSockAdapter . Register_Socket ( sock , peerDescription ( ) , ( SocketHandlercpp ) & DCMessenger :: receiveMsgCallback , name . Value ( ) , this , ALLOW ) ;"	472:1:10650:10823	1194463	7	True				
ANR	1194533	IdentifierDecl	"reg_rc = daemonCoreSockAdapter . Register_Socket ( sock , peerDescription ( ) , ( SocketHandlercpp ) & DCMessenger :: receiveMsgCallback , name . Value ( ) , this , ALLOW )"		1194463	0					
ANR	1194534	IdentifierDeclType	int		1194463	0					
ANR	1194535	Identifier	reg_rc		1194463	1					
ANR	1194536	AssignmentExpression	"reg_rc = daemonCoreSockAdapter . Register_Socket ( sock , peerDescription ( ) , ( SocketHandlercpp ) & DCMessenger :: receiveMsgCallback , name . Value ( ) , this , ALLOW )"		1194463	2		=			
ANR	1194537	Identifier	reg_rc		1194463	0					
ANR	1194538	CallExpression	"daemonCoreSockAdapter . Register_Socket ( sock , peerDescription ( ) , ( SocketHandlercpp ) & DCMessenger :: receiveMsgCallback , name . Value ( ) , this , ALLOW )"		1194463	1					
ANR	1194539	Callee	daemonCoreSockAdapter . Register_Socket		1194463	0					
ANR	1194540	MemberAccess	daemonCoreSockAdapter . Register_Socket		1194463	0					
ANR	1194541	Identifier	daemonCoreSockAdapter		1194463	0					
ANR	1194542	Identifier	Register_Socket		1194463	1					
ANR	1194543	ArgumentList	sock		1194463	1					
ANR	1194544	Argument	sock		1194463	0					
ANR	1194545	Identifier	sock		1194463	0					
ANR	1194546	Argument	peerDescription ( )		1194463	1					
ANR	1194547	CallExpression	peerDescription ( )		1194463	0					
ANR	1194548	Callee	peerDescription		1194463	0					
ANR	1194549	Identifier	peerDescription		1194463	0					
ANR	1194550	ArgumentList			1194463	1					
ANR	1194551	Argument	( SocketHandlercpp ) & DCMessenger :: receiveMsgCallback		1194463	2					
ANR	1194552	CastExpression	( SocketHandlercpp ) & DCMessenger :: receiveMsgCallback		1194463	0					
ANR	1194553	CastTarget	SocketHandlercpp		1194463	0					
ANR	1194554	UnaryOperationExpression	& DCMessenger :: receiveMsgCallback		1194463	1					
ANR	1194555	UnaryOperator	&		1194463	0					
ANR	1194556	Identifier	DCMessenger :: receiveMsgCallback		1194463	1					
ANR	1194557	Argument	name . Value ( )		1194463	3					
ANR	1194558	CallExpression	name . Value ( )		1194463	0					
ANR	1194559	Callee	name . Value		1194463	0					
ANR	1194560	MemberAccess	name . Value		1194463	0					
ANR	1194561	Identifier	name		1194463	0					
ANR	1194562	Identifier	Value		1194463	1					
ANR	1194563	ArgumentList			1194463	1					
ANR	1194564	Argument	this		1194463	4					
ANR	1194565	Identifier	this		1194463	0					
ANR	1194566	Argument	ALLOW		1194463	5					
ANR	1194567	Identifier	ALLOW		1194463	0					
ANR	1194568	IfStatement	if ( reg_rc < 0 )		1194463	8					
ANR	1194569	Condition	reg_rc < 0	476:4:10829:10838	1194463	0	True				
ANR	1194570	RelationalExpression	reg_rc < 0		1194463	0		<			
ANR	1194571	Identifier	reg_rc		1194463	0					
ANR	1194572	PrimaryExpression	0		1194463	1					
ANR	1194573	CompoundStatement		18:16:493:493	1194463	1					
ANR	1194574	ExpressionStatement	"msg -> addError ( CEDAR_ERR_REGISTER_SOCK_FAILED , ""failed to register socket (Register_Socket returned %d)"" , reg_rc )"	477:2:10845:10968	1194463	0	True				
ANR	1194575	CallExpression	"msg -> addError ( CEDAR_ERR_REGISTER_SOCK_FAILED , ""failed to register socket (Register_Socket returned %d)"" , reg_rc )"		1194463	0					
ANR	1194576	Callee	msg -> addError		1194463	0					
ANR	1194577	PtrMemberAccess	msg -> addError		1194463	0					
ANR	1194578	Identifier	msg		1194463	0					
ANR	1194579	Identifier	addError		1194463	1					
ANR	1194580	ArgumentList	CEDAR_ERR_REGISTER_SOCK_FAILED		1194463	1					
ANR	1194581	Argument	CEDAR_ERR_REGISTER_SOCK_FAILED		1194463	0					
ANR	1194582	Identifier	CEDAR_ERR_REGISTER_SOCK_FAILED		1194463	0					
ANR	1194583	Argument	"""failed to register socket (Register_Socket returned %d)"""		1194463	1					
ANR	1194584	PrimaryExpression	"""failed to register socket (Register_Socket returned %d)"""		1194463	0					
ANR	1194585	Argument	reg_rc		1194463	2					
ANR	1194586	Identifier	reg_rc		1194463	0					
ANR	1194587	ExpressionStatement	msg -> callMessageReceiveFailed ( this )	481:2:10972:11009	1194463	1	True				
ANR	1194588	CallExpression	msg -> callMessageReceiveFailed ( this )		1194463	0					
ANR	1194589	Callee	msg -> callMessageReceiveFailed		1194463	0					
ANR	1194590	PtrMemberAccess	msg -> callMessageReceiveFailed		1194463	0					
ANR	1194591	Identifier	msg		1194463	0					
ANR	1194592	Identifier	callMessageReceiveFailed		1194463	1					
ANR	1194593	ArgumentList	this		1194463	1					
ANR	1194594	Argument	this		1194463	0					
ANR	1194595	Identifier	this		1194463	0					
ANR	1194596	ExpressionStatement	doneWithSock ( sock )	482:2:11013:11031	1194463	2	True				
ANR	1194597	CallExpression	doneWithSock ( sock )		1194463	0					
ANR	1194598	Callee	doneWithSock		1194463	0					
ANR	1194599	Identifier	doneWithSock		1194463	0					
ANR	1194600	ArgumentList	sock		1194463	1					
ANR	1194601	Argument	sock		1194463	0					
ANR	1194602	Identifier	sock		1194463	0					
ANR	1194603	ExpressionStatement	decRefCount ( )	483:2:11035:11048	1194463	3	True				
ANR	1194604	CallExpression	decRefCount ( )		1194463	0					
ANR	1194605	Callee	decRefCount		1194463	0					
ANR	1194606	Identifier	decRefCount		1194463	0					
ANR	1194607	ArgumentList			1194463	1					
ANR	1194608	ReturnStatement	return ;	484:2:11052:11058	1194463	4	True				
ANR	1194609	ExpressionStatement	m_callback_msg = msg	487:1:11065:11085	1194463	9	True				
ANR	1194610	AssignmentExpression	m_callback_msg = msg		1194463	0		=			
ANR	1194611	Identifier	m_callback_msg		1194463	0					
ANR	1194612	Identifier	msg		1194463	1					
ANR	1194613	ExpressionStatement	m_callback_sock = sock	488:1:11131:11153	1194463	10	True				
ANR	1194614	AssignmentExpression	m_callback_sock = sock		1194463	0		=			
ANR	1194615	Identifier	m_callback_sock		1194463	0					
ANR	1194616	Identifier	sock		1194463	1					
ANR	1194617	ExpressionStatement	m_pending_operation = RECEIVE_MSG_PENDING	489:1:11156:11197	1194463	11	True				
ANR	1194618	AssignmentExpression	m_pending_operation = RECEIVE_MSG_PENDING		1194463	0		=			
ANR	1194619	Identifier	m_pending_operation		1194463	0					
ANR	1194620	Identifier	RECEIVE_MSG_PENDING		1194463	1					
ANR	1194621	ReturnType	void		1194463	1					
ANR	1194622	Identifier	DCMessenger :: startReceiveMsg		1194463	2					
ANR	1194623	ParameterList	"classy_counted_ptr < DCMsg > msg , Sock * sock"		1194463	3					
ANR	1194624	Parameter	classy_counted_ptr < DCMsg > msg	458:35:10303:10331	1194463	0	True				
ANR	1194625	ParameterType	classy_counted_ptr < DCMsg >		1194463	0					
ANR	1194626	Identifier	msg		1194463	1					
ANR	1194627	Parameter	Sock * sock	458:66:10334:10343	1194463	1	True				
ANR	1194628	ParameterType	Sock *		1194463	0					
ANR	1194629	Identifier	sock		1194463	1					
ANR	1194630	CFGEntryNode	ENTRY		1194463		True				
ANR	1194631	CFGExitNode	EXIT		1194463		True				
ANR	1194632	Symbol	msg		1194463						
ANR	1194633	Symbol	name . Value		1194463						
ANR	1194634	Symbol	m_pending_operation		1194463						
ANR	1194635	Symbol	m_callback_msg . get		1194463						
ANR	1194636	Symbol	RECEIVE_MSG_PENDING		1194463						
ANR	1194637	Symbol	this		1194463						
ANR	1194638	Symbol	m_callback_msg		1194463						
ANR	1194639	Symbol	* msg		1194463						
ANR	1194640	Symbol	m_callback_sock		1194463						
ANR	1194641	Symbol	daemonCoreSockAdapter . Register_Socket		1194463						
ANR	1194642	Symbol	CEDAR_ERR_REGISTER_SOCK_FAILED		1194463						
ANR	1194643	Symbol	sock		1194463						
ANR	1194644	Symbol	peerDescription		1194463						
ANR	1194645	Symbol	daemonCoreSockAdapter		1194463						
ANR	1194646	Symbol	reg_rc		1194463						
ANR	1194647	Symbol	name		1194463						
ANR	1194648	Symbol	& DCMessenger :: receiveMsgCallback		1194463						
ANR	1194649	Symbol	NOTHING_PENDING		1194463						
ANR	1194650	Symbol	msg -> name		1194463						
ANR	1194651	Symbol	ALLOW		1194463						
ANR	1194652	Function	DCMessenger :: receiveMsgCallback	492:0:11202:11547							
ANR	1194653	FunctionDef	DCMessenger :: receiveMsgCallback (Stream * sock)		1194652	0					
ANR	1194654	CompoundStatement		494:0:11252:11547	1194652	0					
ANR	1194655	IdentifierDeclStatement	classy_counted_ptr < DCMsg > msg = m_callback_msg ;	495:1:11255:11301	1194652	0	True				
ANR	1194656	IdentifierDecl	msg = m_callback_msg		1194652	0					
ANR	1194657	IdentifierDeclType	classy_counted_ptr < DCMsg >		1194652	0					
ANR	1194658	Identifier	msg		1194652	1					
ANR	1194659	AssignmentExpression	msg = m_callback_msg		1194652	2		=			
ANR	1194660	Identifier	m_callback_msg		1194652	0					
ANR	1194661	Identifier	m_callback_msg		1194652	1					
ANR	1194662	ExpressionStatement	ASSERT ( msg . get ( ) )	496:1:11304:11321	1194652	1	True				
ANR	1194663	CallExpression	ASSERT ( msg . get ( ) )		1194652	0					
ANR	1194664	Callee	ASSERT		1194652	0					
ANR	1194665	Identifier	ASSERT		1194652	0					
ANR	1194666	ArgumentList	msg . get ( )		1194652	1					
ANR	1194667	Argument	msg . get ( )		1194652	0					
ANR	1194668	CallExpression	msg . get ( )		1194652	0					
ANR	1194669	Callee	msg . get		1194652	0					
ANR	1194670	MemberAccess	msg . get		1194652	0					
ANR	1194671	Identifier	msg		1194652	0					
ANR	1194672	Identifier	get		1194652	1					
ANR	1194673	ArgumentList			1194652	1					
ANR	1194674	ExpressionStatement	m_callback_msg = NULL	498:1:11325:11346	1194652	2	True				
ANR	1194675	AssignmentExpression	m_callback_msg = NULL		1194652	0		=			
ANR	1194676	Identifier	m_callback_msg		1194652	0					
ANR	1194677	Identifier	NULL		1194652	1					
ANR	1194678	ExpressionStatement	m_callback_sock = NULL	499:1:11349:11371	1194652	3	True				
ANR	1194679	AssignmentExpression	m_callback_sock = NULL		1194652	0		=			
ANR	1194680	Identifier	m_callback_sock		1194652	0					
ANR	1194681	Identifier	NULL		1194652	1					
ANR	1194682	ExpressionStatement	m_pending_operation = NOTHING_PENDING	500:1:11374:11411	1194652	4	True				
ANR	1194683	AssignmentExpression	m_pending_operation = NOTHING_PENDING		1194652	0		=			
ANR	1194684	Identifier	m_pending_operation		1194652	0					
ANR	1194685	Identifier	NOTHING_PENDING		1194652	1					
ANR	1194686	ExpressionStatement	daemonCoreSockAdapter . Cancel_Socket ( sock )	502:1:11415:11458	1194652	5	True				
ANR	1194687	CallExpression	daemonCoreSockAdapter . Cancel_Socket ( sock )		1194652	0					
ANR	1194688	Callee	daemonCoreSockAdapter . Cancel_Socket		1194652	0					
ANR	1194689	MemberAccess	daemonCoreSockAdapter . Cancel_Socket		1194652	0					
ANR	1194690	Identifier	daemonCoreSockAdapter		1194652	0					
ANR	1194691	Identifier	Cancel_Socket		1194652	1					
ANR	1194692	ArgumentList	sock		1194652	1					
ANR	1194693	Argument	sock		1194652	0					
ANR	1194694	Identifier	sock		1194652	0					
ANR	1194695	ExpressionStatement	ASSERT ( sock )	504:1:11462:11476	1194652	6	True				
ANR	1194696	CallExpression	ASSERT ( sock )		1194652	0					
ANR	1194697	Callee	ASSERT		1194652	0					
ANR	1194698	Identifier	ASSERT		1194652	0					
ANR	1194699	ArgumentList	sock		1194652	1					
ANR	1194700	Argument	sock		1194652	0					
ANR	1194701	Identifier	sock		1194652	0					
ANR	1194702	ExpressionStatement	"readMsg ( msg , ( Sock * ) sock )"	505:1:11479:11507	1194652	7	True				
ANR	1194703	CallExpression	"readMsg ( msg , ( Sock * ) sock )"		1194652	0					
ANR	1194704	Callee	readMsg		1194652	0					
ANR	1194705	Identifier	readMsg		1194652	0					
ANR	1194706	ArgumentList	msg		1194652	1					
ANR	1194707	Argument	msg		1194652	0					
ANR	1194708	Identifier	msg		1194652	0					
ANR	1194709	Argument	( Sock * ) sock		1194652	1					
ANR	1194710	CastExpression	( Sock * ) sock		1194652	0					
ANR	1194711	CastTarget	Sock *		1194652	0					
ANR	1194712	Identifier	sock		1194652	1					
ANR	1194713	ExpressionStatement	decRefCount ( )	507:1:11511:11524	1194652	8	True				
ANR	1194714	CallExpression	decRefCount ( )		1194652	0					
ANR	1194715	Callee	decRefCount		1194652	0					
ANR	1194716	Identifier	decRefCount		1194652	0					
ANR	1194717	ArgumentList			1194652	1					
ANR	1194718	ReturnStatement	return KEEP_STREAM ;	508:1:11527:11545	1194652	9	True				
ANR	1194719	Identifier	KEEP_STREAM		1194652	0					
ANR	1194720	ReturnType	int		1194652	1					
ANR	1194721	Identifier	DCMessenger :: receiveMsgCallback		1194652	2					
ANR	1194722	ParameterList	Stream * sock		1194652	3					
ANR	1194723	Parameter	Stream * sock	493:32:11238:11249	1194652	0	True				
ANR	1194724	ParameterType	Stream *		1194652	0					
ANR	1194725	Identifier	sock		1194652	1					
ANR	1194726	CFGEntryNode	ENTRY		1194652		True				
ANR	1194727	CFGExitNode	EXIT		1194652		True				
ANR	1194728	Symbol	msg		1194652						
ANR	1194729	Symbol	sock		1194652						
ANR	1194730	Symbol	daemonCoreSockAdapter		1194652						
ANR	1194731	Symbol	NULL		1194652						
ANR	1194732	Symbol	m_pending_operation		1194652						
ANR	1194733	Symbol	m_callback_msg		1194652						
ANR	1194734	Symbol	msg . get		1194652						
ANR	1194735	Symbol	NOTHING_PENDING		1194652						
ANR	1194736	Symbol	m_callback_sock		1194652						
ANR	1194737	Symbol	KEEP_STREAM		1194652						
ANR	1194738	Function	DCMessenger :: readMsg	511:0:11550:12422							
ANR	1194739	FunctionDef	"DCMessenger :: readMsg (classy_counted_ptr < DCMsg > msg , Sock * sock)"		1194738	0					
ANR	1194740	CompoundStatement		513:0:11621:12422	1194738	0					
ANR	1194741	ExpressionStatement	ASSERT ( msg . get ( ) )	514:1:11624:11643	1194738	0	True				
ANR	1194742	CallExpression	ASSERT ( msg . get ( ) )		1194738	0					
ANR	1194743	Callee	ASSERT		1194738	0					
ANR	1194744	Identifier	ASSERT		1194738	0					
ANR	1194745	ArgumentList	msg . get ( )		1194738	1					
ANR	1194746	Argument	msg . get ( )		1194738	0					
ANR	1194747	CallExpression	msg . get ( )		1194738	0					
ANR	1194748	Callee	msg . get		1194738	0					
ANR	1194749	MemberAccess	msg . get		1194738	0					
ANR	1194750	Identifier	msg		1194738	0					
ANR	1194751	Identifier	get		1194738	1					
ANR	1194752	ArgumentList			1194738	1					
ANR	1194753	ExpressionStatement	ASSERT ( sock )	515:1:11646:11660	1194738	1	True				
ANR	1194754	CallExpression	ASSERT ( sock )		1194738	0					
ANR	1194755	Callee	ASSERT		1194738	0					
ANR	1194756	Identifier	ASSERT		1194738	0					
ANR	1194757	ArgumentList	sock		1194738	1					
ANR	1194758	Argument	sock		1194738	0					
ANR	1194759	Identifier	sock		1194738	0					
ANR	1194760	ExpressionStatement	msg -> setMessenger ( this )	517:1:11664:11689	1194738	2	True				
ANR	1194761	CallExpression	msg -> setMessenger ( this )		1194738	0					
ANR	1194762	Callee	msg -> setMessenger		1194738	0					
ANR	1194763	PtrMemberAccess	msg -> setMessenger		1194738	0					
ANR	1194764	Identifier	msg		1194738	0					
ANR	1194765	Identifier	setMessenger		1194738	1					
ANR	1194766	ArgumentList	this		1194738	1					
ANR	1194767	Argument	this		1194738	0					
ANR	1194768	Identifier	this		1194738	0					
ANR	1194769	ExpressionStatement	incRefCount ( )	519:1:11693:11706	1194738	3	True				
ANR	1194770	CallExpression	incRefCount ( )		1194738	0					
ANR	1194771	Callee	incRefCount		1194738	0					
ANR	1194772	Identifier	incRefCount		1194738	0					
ANR	1194773	ArgumentList			1194738	1					
ANR	1194774	ExpressionStatement	sock -> decode ( )	521:1:11710:11724	1194738	4	True				
ANR	1194775	CallExpression	sock -> decode ( )		1194738	0					
ANR	1194776	Callee	sock -> decode		1194738	0					
ANR	1194777	PtrMemberAccess	sock -> decode		1194738	0					
ANR	1194778	Identifier	sock		1194738	0					
ANR	1194779	Identifier	decode		1194738	1					
ANR	1194780	ArgumentList			1194738	1					
ANR	1194781	IdentifierDeclStatement	bool done_with_sock = true ;	523:1:11728:11754	1194738	5	True				
ANR	1194782	IdentifierDecl	done_with_sock = true		1194738	0					
ANR	1194783	IdentifierDeclType	bool		1194738	0					
ANR	1194784	Identifier	done_with_sock		1194738	1					
ANR	1194785	AssignmentExpression	done_with_sock = true		1194738	2		=			
ANR	1194786	Identifier	true		1194738	0					
ANR	1194787	Identifier	true		1194738	1					
ANR	1194788	IfStatement	if ( sock -> deadline_expired ( ) )		1194738	6					
ANR	1194789	Condition	sock -> deadline_expired ( )	525:5:11762:11785	1194738	0	True				
ANR	1194790	CallExpression	sock -> deadline_expired ( )		1194738	0					
ANR	1194791	Callee	sock -> deadline_expired		1194738	0					
ANR	1194792	PtrMemberAccess	sock -> deadline_expired		1194738	0					
ANR	1194793	Identifier	sock		1194738	0					
ANR	1194794	Identifier	deadline_expired		1194738	1					
ANR	1194795	ArgumentList			1194738	1					
ANR	1194796	CompoundStatement		13:32:167:167	1194738	1					
ANR	1194797	ExpressionStatement	"msg -> cancelMessage ( ""deadline expired"" )"	526:2:11793:11831	1194738	0	True				
ANR	1194798	CallExpression	"msg -> cancelMessage ( ""deadline expired"" )"		1194738	0					
ANR	1194799	Callee	msg -> cancelMessage		1194738	0					
ANR	1194800	PtrMemberAccess	msg -> cancelMessage		1194738	0					
ANR	1194801	Identifier	msg		1194738	0					
ANR	1194802	Identifier	cancelMessage		1194738	1					
ANR	1194803	ArgumentList	"""deadline expired"""		1194738	1					
ANR	1194804	Argument	"""deadline expired"""		1194738	0					
ANR	1194805	PrimaryExpression	"""deadline expired"""		1194738	0					
ANR	1194806	IfStatement	if ( msg -> deliveryStatus ( ) == DCMsg :: DELIVERY_CANCELED )		1194738	7					
ANR	1194807	Condition	msg -> deliveryStatus ( ) == DCMsg :: DELIVERY_CANCELED	529:5:11842:11890	1194738	0	True				
ANR	1194808	EqualityExpression	msg -> deliveryStatus ( ) == DCMsg :: DELIVERY_CANCELED		1194738	0		==			
ANR	1194809	CallExpression	msg -> deliveryStatus ( )		1194738	0					
ANR	1194810	Callee	msg -> deliveryStatus		1194738	0					
ANR	1194811	PtrMemberAccess	msg -> deliveryStatus		1194738	0					
ANR	1194812	Identifier	msg		1194738	0					
ANR	1194813	Identifier	deliveryStatus		1194738	1					
ANR	1194814	ArgumentList			1194738	1					
ANR	1194815	Identifier	DCMsg :: DELIVERY_CANCELED		1194738	1					
ANR	1194816	CompoundStatement		17:57:272:272	1194738	1					
ANR	1194817	ExpressionStatement	msg -> callMessageReceiveFailed ( this )	530:2:11898:11935	1194738	0	True				
ANR	1194818	CallExpression	msg -> callMessageReceiveFailed ( this )		1194738	0					
ANR	1194819	Callee	msg -> callMessageReceiveFailed		1194738	0					
ANR	1194820	PtrMemberAccess	msg -> callMessageReceiveFailed		1194738	0					
ANR	1194821	Identifier	msg		1194738	0					
ANR	1194822	Identifier	callMessageReceiveFailed		1194738	1					
ANR	1194823	ArgumentList	this		1194738	1					
ANR	1194824	Argument	this		1194738	0					
ANR	1194825	Identifier	this		1194738	0					
ANR	1194826	ElseStatement	else		1194738	0					
ANR	1194827	IfStatement	"if ( ! msg -> readMsg ( this , sock ) )"		1194738	0					
ANR	1194828	Condition	"! msg -> readMsg ( this , sock )"	532:10:11950:11976	1194738	0	True				
ANR	1194829	UnaryOperationExpression	"! msg -> readMsg ( this , sock )"		1194738	0					
ANR	1194830	UnaryOperator	!		1194738	0					
ANR	1194831	CallExpression	"msg -> readMsg ( this , sock )"		1194738	1					
ANR	1194832	Callee	msg -> readMsg		1194738	0					
ANR	1194833	PtrMemberAccess	msg -> readMsg		1194738	0					
ANR	1194834	Identifier	msg		1194738	0					
ANR	1194835	Identifier	readMsg		1194738	1					
ANR	1194836	ArgumentList	this		1194738	1					
ANR	1194837	Argument	this		1194738	0					
ANR	1194838	Identifier	this		1194738	0					
ANR	1194839	Argument	sock		1194738	1					
ANR	1194840	Identifier	sock		1194738	0					
ANR	1194841	CompoundStatement		20:40:358:358	1194738	1					
ANR	1194842	ExpressionStatement	msg -> callMessageReceiveFailed ( this )	533:2:11984:12021	1194738	0	True				
ANR	1194843	CallExpression	msg -> callMessageReceiveFailed ( this )		1194738	0					
ANR	1194844	Callee	msg -> callMessageReceiveFailed		1194738	0					
ANR	1194845	PtrMemberAccess	msg -> callMessageReceiveFailed		1194738	0					
ANR	1194846	Identifier	msg		1194738	0					
ANR	1194847	Identifier	callMessageReceiveFailed		1194738	1					
ANR	1194848	ArgumentList	this		1194738	1					
ANR	1194849	Argument	this		1194738	0					
ANR	1194850	Identifier	this		1194738	0					
ANR	1194851	ElseStatement	else		1194738	0					
ANR	1194852	IfStatement	if ( ! sock -> end_of_message ( ) )		1194738	0					
ANR	1194853	Condition	! sock -> end_of_message ( )	535:10:12036:12058	1194738	0	True				
ANR	1194854	UnaryOperationExpression	! sock -> end_of_message ( )		1194738	0					
ANR	1194855	UnaryOperator	!		1194738	0					
ANR	1194856	CallExpression	sock -> end_of_message ( )		1194738	1					
ANR	1194857	Callee	sock -> end_of_message		1194738	0					
ANR	1194858	PtrMemberAccess	sock -> end_of_message		1194738	0					
ANR	1194859	Identifier	sock		1194738	0					
ANR	1194860	Identifier	end_of_message		1194738	1					
ANR	1194861	ArgumentList			1194738	1					
ANR	1194862	CompoundStatement		23:36:440:440	1194738	1					
ANR	1194863	ExpressionStatement	"msg -> addError ( CEDAR_ERR_EOM_FAILED , ""failed to read EOM"" )"	536:2:12066:12125	1194738	0	True				
ANR	1194864	CallExpression	"msg -> addError ( CEDAR_ERR_EOM_FAILED , ""failed to read EOM"" )"		1194738	0					
ANR	1194865	Callee	msg -> addError		1194738	0					
ANR	1194866	PtrMemberAccess	msg -> addError		1194738	0					
ANR	1194867	Identifier	msg		1194738	0					
ANR	1194868	Identifier	addError		1194738	1					
ANR	1194869	ArgumentList	CEDAR_ERR_EOM_FAILED		1194738	1					
ANR	1194870	Argument	CEDAR_ERR_EOM_FAILED		1194738	0					
ANR	1194871	Identifier	CEDAR_ERR_EOM_FAILED		1194738	0					
ANR	1194872	Argument	"""failed to read EOM"""		1194738	1					
ANR	1194873	PrimaryExpression	"""failed to read EOM"""		1194738	0					
ANR	1194874	ExpressionStatement	msg -> callMessageReceiveFailed ( this )	537:2:12129:12166	1194738	1	True				
ANR	1194875	CallExpression	msg -> callMessageReceiveFailed ( this )		1194738	0					
ANR	1194876	Callee	msg -> callMessageReceiveFailed		1194738	0					
ANR	1194877	PtrMemberAccess	msg -> callMessageReceiveFailed		1194738	0					
ANR	1194878	Identifier	msg		1194738	0					
ANR	1194879	Identifier	callMessageReceiveFailed		1194738	1					
ANR	1194880	ArgumentList	this		1194738	1					
ANR	1194881	Argument	this		1194738	0					
ANR	1194882	Identifier	this		1194738	0					
ANR	1194883	ElseStatement	else		1194738	0					
ANR	1194884	CompoundStatement		29:2:573:647	1194738	0					
ANR	1194885	IdentifierDeclStatement	"DCMsg :: MessageClosureEnum closure = msg -> callMessageReceived ( this , sock ) ;"	541:2:12195:12269	1194738	0	True				
ANR	1194886	IdentifierDecl	"closure = msg -> callMessageReceived ( this , sock )"		1194738	0					
ANR	1194887	IdentifierDeclType	DCMsg :: MessageClosureEnum		1194738	0					
ANR	1194888	Identifier	closure		1194738	1					
ANR	1194889	AssignmentExpression	"closure = msg -> callMessageReceived ( this , sock )"		1194738	2		=			
ANR	1194890	Identifier	closure		1194738	0					
ANR	1194891	CallExpression	"msg -> callMessageReceived ( this , sock )"		1194738	1					
ANR	1194892	Callee	msg -> callMessageReceived		1194738	0					
ANR	1194893	PtrMemberAccess	msg -> callMessageReceived		1194738	0					
ANR	1194894	Identifier	msg		1194738	0					
ANR	1194895	Identifier	callMessageReceived		1194738	1					
ANR	1194896	ArgumentList	this		1194738	1					
ANR	1194897	Argument	this		1194738	0					
ANR	1194898	Identifier	this		1194738	0					
ANR	1194899	Argument	sock		1194738	1					
ANR	1194900	Identifier	sock		1194738	0					
ANR	1194901	IfStatement	if ( closure == DCMsg :: MESSAGE_CONTINUING )		1194738	1					
ANR	1194902	Condition	closure == DCMsg :: MESSAGE_CONTINUING	543:6:12278:12313	1194738	0	True				
ANR	1194903	EqualityExpression	closure == DCMsg :: MESSAGE_CONTINUING		1194738	0		==			
ANR	1194904	Identifier	closure		1194738	0					
ANR	1194905	Identifier	DCMsg :: MESSAGE_CONTINUING		1194738	1					
ANR	1194906	CompoundStatement		31:45:695:695	1194738	1					
ANR	1194907	ExpressionStatement	done_with_sock = false	544:3:12322:12344	1194738	0	True				
ANR	1194908	AssignmentExpression	done_with_sock = false		1194738	0		=			
ANR	1194909	Identifier	done_with_sock		1194738	0					
ANR	1194910	Identifier	false		1194738	1					
ANR	1194911	IfStatement	if ( done_with_sock )		1194738	8					
ANR	1194912	Condition	done_with_sock	548:5:12359:12372	1194738	0	True				
ANR	1194913	Identifier	done_with_sock		1194738	0					
ANR	1194914	CompoundStatement		36:22:754:754	1194738	1					
ANR	1194915	ExpressionStatement	doneWithSock ( sock )	549:2:12380:12400	1194738	0	True				
ANR	1194916	CallExpression	doneWithSock ( sock )		1194738	0					
ANR	1194917	Callee	doneWithSock		1194738	0					
ANR	1194918	Identifier	doneWithSock		1194738	0					
ANR	1194919	ArgumentList	sock		1194738	1					
ANR	1194920	Argument	sock		1194738	0					
ANR	1194921	Identifier	sock		1194738	0					
ANR	1194922	ExpressionStatement	decRefCount ( )	552:1:12407:12420	1194738	9	True				
ANR	1194923	CallExpression	decRefCount ( )		1194738	0					
ANR	1194924	Callee	decRefCount		1194738	0					
ANR	1194925	Identifier	decRefCount		1194738	0					
ANR	1194926	ArgumentList			1194738	1					
ANR	1194927	ReturnType	void		1194738	1					
ANR	1194928	Identifier	DCMessenger :: readMsg		1194738	2					
ANR	1194929	ParameterList	"classy_counted_ptr < DCMsg > msg , Sock * sock"		1194738	3					
ANR	1194930	Parameter	classy_counted_ptr < DCMsg > msg	512:22:11577:11605	1194738	0	True				
ANR	1194931	ParameterType	classy_counted_ptr < DCMsg >		1194738	0					
ANR	1194932	Identifier	msg		1194738	1					
ANR	1194933	Parameter	Sock * sock	512:53:11608:11617	1194738	1	True				
ANR	1194934	ParameterType	Sock *		1194738	0					
ANR	1194935	Identifier	sock		1194738	1					
ANR	1194936	CFGEntryNode	ENTRY		1194738		True				
ANR	1194937	CFGExitNode	EXIT		1194738		True				
ANR	1194938	Symbol	msg		1194738						
ANR	1194939	Symbol	sock -> deadline_expired		1194738						
ANR	1194940	Symbol	DCMsg :: DELIVERY_CANCELED		1194738						
ANR	1194941	Symbol	msg -> deliveryStatus		1194738						
ANR	1194942	Symbol	sock -> end_of_message		1194738						
ANR	1194943	Symbol	this		1194738						
ANR	1194944	Symbol	false		1194738						
ANR	1194945	Symbol	done_with_sock		1194738						
ANR	1194946	Symbol	* msg		1194738						
ANR	1194947	Symbol	msg -> callMessageReceived		1194738						
ANR	1194948	Symbol	CEDAR_ERR_EOM_FAILED		1194738						
ANR	1194949	Symbol	sock		1194738						
ANR	1194950	Symbol	DCMsg :: MESSAGE_CONTINUING		1194738						
ANR	1194951	Symbol	true		1194738						
ANR	1194952	Symbol	msg . get		1194738						
ANR	1194953	Symbol	msg -> readMsg		1194738						
ANR	1194954	Symbol	closure		1194738						
ANR	1194955	Symbol	* sock		1194738						
ANR	1194956	Function	DCMessenger :: cancelMessage	555:0:12425:13152							
ANR	1194957	FunctionDef	DCMessenger :: cancelMessage (classy_counted_ptr < DCMsg > msg)		1194956	0					
ANR	1194958	CompoundStatement		557:0:12490:13152	1194956	0					
ANR	1194959	IfStatement	if ( msg . get ( ) != m_callback_msg . get ( ) )		1194956	0					
ANR	1194960	Condition	msg . get ( ) != m_callback_msg . get ( )	558:5:12497:12529	1194956	0	True				
ANR	1194961	EqualityExpression	msg . get ( ) != m_callback_msg . get ( )		1194956	0		!=			
ANR	1194962	CallExpression	msg . get ( )		1194956	0					
ANR	1194963	Callee	msg . get		1194956	0					
ANR	1194964	MemberAccess	msg . get		1194956	0					
ANR	1194965	Identifier	msg		1194956	0					
ANR	1194966	Identifier	get		1194956	1					
ANR	1194967	ArgumentList			1194956	1					
ANR	1194968	CallExpression	m_callback_msg . get ( )		1194956	1					
ANR	1194969	Callee	m_callback_msg . get		1194956	0					
ANR	1194970	MemberAccess	m_callback_msg . get		1194956	0					
ANR	1194971	Identifier	m_callback_msg		1194956	0					
ANR	1194972	Identifier	get		1194956	1					
ANR	1194973	ArgumentList			1194956	1					
ANR	1194974	CompoundStatement		2:41:42:42	1194956	1					
ANR	1194975	ReturnStatement	return ;	559:2:12537:12543	1194956	0	True				
ANR	1194976	IfStatement	if ( m_pending_operation == NOTHING_PENDING )		1194956	1					
ANR	1194977	Condition	m_pending_operation == NOTHING_PENDING	562:5:12554:12591	1194956	0	True				
ANR	1194978	EqualityExpression	m_pending_operation == NOTHING_PENDING		1194956	0		==			
ANR	1194979	Identifier	m_pending_operation		1194956	0					
ANR	1194980	Identifier	NOTHING_PENDING		1194956	1					
ANR	1194981	CompoundStatement		6:46:104:104	1194956	1					
ANR	1194982	ReturnStatement	return ;	563:2:12599:12605	1194956	0	True				
ANR	1194983	IfStatement	if ( m_callback_sock -> is_reverse_connect_pending ( ) )		1194956	2					
ANR	1194984	Condition	m_callback_sock -> is_reverse_connect_pending ( )	566:5:12616:12660	1194956	0	True				
ANR	1194985	CallExpression	m_callback_sock -> is_reverse_connect_pending ( )		1194956	0					
ANR	1194986	Callee	m_callback_sock -> is_reverse_connect_pending		1194956	0					
ANR	1194987	PtrMemberAccess	m_callback_sock -> is_reverse_connect_pending		1194956	0					
ANR	1194988	Identifier	m_callback_sock		1194956	0					
ANR	1194989	Identifier	is_reverse_connect_pending		1194956	1					
ANR	1194990	ArgumentList			1194956	1					
ANR	1194991	CompoundStatement		10:53:173:173	1194956	1					
ANR	1194992	ExpressionStatement	m_callback_sock -> close ( )	571:2:12883:12907	1194956	0	True				
ANR	1194993	CallExpression	m_callback_sock -> close ( )		1194956	0					
ANR	1194994	Callee	m_callback_sock -> close		1194956	0					
ANR	1194995	PtrMemberAccess	m_callback_sock -> close		1194956	0					
ANR	1194996	Identifier	m_callback_sock		1194956	0					
ANR	1194997	Identifier	close		1194956	1					
ANR	1194998	ArgumentList			1194956	1					
ANR	1194999	ElseStatement	else		1194956	0					
ANR	1195000	IfStatement	if ( m_callback_sock && m_callback_sock -> get_file_desc ( ) != INVALID_SOCKET )		1194956	0					
ANR	1195001	Condition	m_callback_sock && m_callback_sock -> get_file_desc ( ) != INVALID_SOCKET	573:10:12922:12990	1194956	0	True				
ANR	1195002	AndExpression	m_callback_sock && m_callback_sock -> get_file_desc ( ) != INVALID_SOCKET		1194956	0		&&			
ANR	1195003	Identifier	m_callback_sock		1194956	0					
ANR	1195004	EqualityExpression	m_callback_sock -> get_file_desc ( ) != INVALID_SOCKET		1194956	1		!=			
ANR	1195005	CallExpression	m_callback_sock -> get_file_desc ( )		1194956	0					
ANR	1195006	Callee	m_callback_sock -> get_file_desc		1194956	0					
ANR	1195007	PtrMemberAccess	m_callback_sock -> get_file_desc		1194956	0					
ANR	1195008	Identifier	m_callback_sock		1194956	0					
ANR	1195009	Identifier	get_file_desc		1194956	1					
ANR	1195010	ArgumentList			1194956	1					
ANR	1195011	Identifier	INVALID_SOCKET		1194956	1					
ANR	1195012	CompoundStatement		17:81:502:502	1194956	1					
ANR	1195013	ExpressionStatement	m_callback_sock -> close ( )	574:2:12997:13021	1194956	0	True				
ANR	1195014	CallExpression	m_callback_sock -> close ( )		1194956	0					
ANR	1195015	Callee	m_callback_sock -> close		1194956	0					
ANR	1195016	PtrMemberAccess	m_callback_sock -> close		1194956	0					
ANR	1195017	Identifier	m_callback_sock		1194956	0					
ANR	1195018	Identifier	close		1194956	1					
ANR	1195019	ArgumentList			1194956	1					
ANR	1195020	ExpressionStatement	daemonCoreSockAdapter . CallSocketHandler ( m_callback_sock )	576:2:13089:13147	1194956	1	True				
ANR	1195021	CallExpression	daemonCoreSockAdapter . CallSocketHandler ( m_callback_sock )		1194956	0					
ANR	1195022	Callee	daemonCoreSockAdapter . CallSocketHandler		1194956	0					
ANR	1195023	MemberAccess	daemonCoreSockAdapter . CallSocketHandler		1194956	0					
ANR	1195024	Identifier	daemonCoreSockAdapter		1194956	0					
ANR	1195025	Identifier	CallSocketHandler		1194956	1					
ANR	1195026	ArgumentList	m_callback_sock		1194956	1					
ANR	1195027	Argument	m_callback_sock		1194956	0					
ANR	1195028	Identifier	m_callback_sock		1194956	0					
ANR	1195029	ReturnType	void		1194956	1					
ANR	1195030	Identifier	DCMessenger :: cancelMessage		1194956	2					
ANR	1195031	ParameterList	classy_counted_ptr < DCMsg > msg		1194956	3					
ANR	1195032	Parameter	classy_counted_ptr < DCMsg > msg	556:28:12458:12486	1194956	0	True				
ANR	1195033	ParameterType	classy_counted_ptr < DCMsg >		1194956	0					
ANR	1195034	Identifier	msg		1194956	1					
ANR	1195035	CFGEntryNode	ENTRY		1194956		True				
ANR	1195036	CFGExitNode	EXIT		1194956		True				
ANR	1195037	Symbol	msg		1194956						
ANR	1195038	Symbol	m_callback_sock -> get_file_desc		1194956						
ANR	1195039	Symbol	daemonCoreSockAdapter		1194956						
ANR	1195040	Symbol	m_pending_operation		1194956						
ANR	1195041	Symbol	m_callback_msg . get		1194956						
ANR	1195042	Symbol	m_callback_sock -> is_reverse_connect_pending		1194956						
ANR	1195043	Symbol	msg . get		1194956						
ANR	1195044	Symbol	m_callback_msg		1194956						
ANR	1195045	Symbol	NOTHING_PENDING		1194956						
ANR	1195046	Symbol	m_callback_sock		1194956						
ANR	1195047	Symbol	* m_callback_sock		1194956						
ANR	1195048	Symbol	INVALID_SOCKET		1194956						
ANR	1195049	ClassDef	QueuedCommand	581:0:13156:13230							
ANR	1195050	DeclStmt									
ANR	1195051	Decl							classy_counted_ptr < DCMsg >	classy_counted_ptr < DCMsg >	msg
ANR	1195052	DeclStmt									
ANR	1195053	Decl							int	int	timer_handle
ANR	1195054	Function	DCMessenger :: startCommandAfterDelay	586:0:13234:13664							
ANR	1195055	FunctionDef	"DCMessenger :: startCommandAfterDelay (unsigned int delay , classy_counted_ptr < DCMsg > msg)"		1195054	0					
ANR	1195056	CompoundStatement		588:0:13328:13664	1195054	0					
ANR	1195057	Statement	QueuedCommand	589:1:13331:13343	1195054	0	True				
ANR	1195058	Statement	*	589:15:13345:13345	1195054	1	True				
ANR	1195059	Statement	qc	589:16:13346:13347	1195054	2	True				
ANR	1195060	Statement	=	589:19:13349:13349	1195054	3	True				
ANR	1195061	Statement	new	589:21:13351:13353	1195054	4	True				
ANR	1195062	ExpressionStatement	QueuedCommand	589:25:13355:13368	1195054	5	True				
ANR	1195063	Identifier	QueuedCommand		1195054	0					
ANR	1195064	ExpressionStatement	qc -> msg = msg	590:1:13371:13384	1195054	6	True				
ANR	1195065	AssignmentExpression	qc -> msg = msg		1195054	0		=			
ANR	1195066	PtrMemberAccess	qc -> msg		1195054	0					
ANR	1195067	Identifier	qc		1195054	0					
ANR	1195068	Identifier	msg		1195054	1					
ANR	1195069	Identifier	msg		1195054	1					
ANR	1195070	ExpressionStatement	incRefCount ( )	592:1:13388:13401	1195054	7	True				
ANR	1195071	CallExpression	incRefCount ( )		1195054	0					
ANR	1195072	Callee	incRefCount		1195054	0					
ANR	1195073	Identifier	incRefCount		1195054	0					
ANR	1195074	ArgumentList			1195054	1					
ANR	1195075	ExpressionStatement	"qc -> timer_handle = daemonCoreSockAdapter . Register_Timer ( delay , ( TimerHandlercpp ) & DCMessenger :: startCommandAfterDelay_alarm , ""DCMessenger::startCommandAfterDelay"" , this )"	593:1:13404:13582	1195054	8	True				
ANR	1195076	AssignmentExpression	"qc -> timer_handle = daemonCoreSockAdapter . Register_Timer ( delay , ( TimerHandlercpp ) & DCMessenger :: startCommandAfterDelay_alarm , ""DCMessenger::startCommandAfterDelay"" , this )"		1195054	0		=			
ANR	1195077	PtrMemberAccess	qc -> timer_handle		1195054	0					
ANR	1195078	Identifier	qc		1195054	0					
ANR	1195079	Identifier	timer_handle		1195054	1					
ANR	1195080	CallExpression	"daemonCoreSockAdapter . Register_Timer ( delay , ( TimerHandlercpp ) & DCMessenger :: startCommandAfterDelay_alarm , ""DCMessenger::startCommandAfterDelay"" , this )"		1195054	1					
ANR	1195081	Callee	daemonCoreSockAdapter . Register_Timer		1195054	0					
ANR	1195082	MemberAccess	daemonCoreSockAdapter . Register_Timer		1195054	0					
ANR	1195083	Identifier	daemonCoreSockAdapter		1195054	0					
ANR	1195084	Identifier	Register_Timer		1195054	1					
ANR	1195085	ArgumentList	delay		1195054	1					
ANR	1195086	Argument	delay		1195054	0					
ANR	1195087	Identifier	delay		1195054	0					
ANR	1195088	Argument	( TimerHandlercpp ) & DCMessenger :: startCommandAfterDelay_alarm		1195054	1					
ANR	1195089	CastExpression	( TimerHandlercpp ) & DCMessenger :: startCommandAfterDelay_alarm		1195054	0					
ANR	1195090	CastTarget	TimerHandlercpp		1195054	0					
ANR	1195091	UnaryOperationExpression	& DCMessenger :: startCommandAfterDelay_alarm		1195054	1					
ANR	1195092	UnaryOperator	&		1195054	0					
ANR	1195093	Identifier	DCMessenger :: startCommandAfterDelay_alarm		1195054	1					
ANR	1195094	Argument	"""DCMessenger::startCommandAfterDelay"""		1195054	2					
ANR	1195095	PrimaryExpression	"""DCMessenger::startCommandAfterDelay"""		1195054	0					
ANR	1195096	Argument	this		1195054	3					
ANR	1195097	Identifier	this		1195054	0					
ANR	1195098	ExpressionStatement	ASSERT ( qc -> timer_handle != - 1 )	598:1:13585:13615	1195054	9	True				
ANR	1195099	CallExpression	ASSERT ( qc -> timer_handle != - 1 )		1195054	0					
ANR	1195100	Callee	ASSERT		1195054	0					
ANR	1195101	Identifier	ASSERT		1195054	0					
ANR	1195102	ArgumentList	qc -> timer_handle != - 1		1195054	1					
ANR	1195103	Argument	qc -> timer_handle != - 1		1195054	0					
ANR	1195104	EqualityExpression	qc -> timer_handle != - 1		1195054	0		!=			
ANR	1195105	PtrMemberAccess	qc -> timer_handle		1195054	0					
ANR	1195106	Identifier	qc		1195054	0					
ANR	1195107	Identifier	timer_handle		1195054	1					
ANR	1195108	UnaryOperationExpression	- 1		1195054	1					
ANR	1195109	UnaryOperator	-		1195054	0					
ANR	1195110	PrimaryExpression	1		1195054	1					
ANR	1195111	ExpressionStatement	daemonCoreSockAdapter . Register_DataPtr ( qc )	599:1:13618:13662	1195054	10	True				
ANR	1195112	CallExpression	daemonCoreSockAdapter . Register_DataPtr ( qc )		1195054	0					
ANR	1195113	Callee	daemonCoreSockAdapter . Register_DataPtr		1195054	0					
ANR	1195114	MemberAccess	daemonCoreSockAdapter . Register_DataPtr		1195054	0					
ANR	1195115	Identifier	daemonCoreSockAdapter		1195054	0					
ANR	1195116	Identifier	Register_DataPtr		1195054	1					
ANR	1195117	ArgumentList	qc		1195054	1					
ANR	1195118	Argument	qc		1195054	0					
ANR	1195119	Identifier	qc		1195054	0					
ANR	1195120	ReturnType	void		1195054	1					
ANR	1195121	Identifier	DCMessenger :: startCommandAfterDelay		1195054	2					
ANR	1195122	ParameterList	"unsigned int delay , classy_counted_ptr < DCMsg > msg"		1195054	3					
ANR	1195123	Parameter	unsigned int delay	587:37:13276:13293	1195054	0	True				
ANR	1195124	ParameterType	unsigned int		1195054	0					
ANR	1195125	Identifier	delay		1195054	1					
ANR	1195126	Parameter	classy_counted_ptr < DCMsg > msg	587:57:13296:13324	1195054	1	True				
ANR	1195127	ParameterType	classy_counted_ptr < DCMsg >		1195054	0					
ANR	1195128	Identifier	msg		1195054	1					
ANR	1195129	CFGEntryNode	ENTRY		1195054		True				
ANR	1195130	CFGExitNode	EXIT		1195054		True				
ANR	1195131	Symbol	msg		1195054						
ANR	1195132	Symbol	qc		1195054						
ANR	1195133	Symbol	daemonCoreSockAdapter		1195054						
ANR	1195134	Symbol	delay		1195054						
ANR	1195135	Symbol	& DCMessenger :: startCommandAfterDelay_alarm		1195054						
ANR	1195136	Symbol	qc -> msg		1195054						
ANR	1195137	Symbol	qc -> timer_handle		1195054						
ANR	1195138	Symbol	this		1195054						
ANR	1195139	Symbol	* qc		1195054						
ANR	1195140	Symbol	daemonCoreSockAdapter . Register_Timer		1195054						
ANR	1195141	Function	DCMessenger :: startCommandAfterDelay_alarm	602:0:13667:13859							
ANR	1195142	FunctionDef	DCMessenger :: startCommandAfterDelay_alarm ()		1195141	0					
ANR	1195143	CompoundStatement		603:0:13716:13859	1195141	0					
ANR	1195144	IdentifierDeclStatement	QueuedCommand * qc = ( QueuedCommand * ) daemonCoreSockAdapter . GetDataPtr ( ) ;	604:1:13719:13790	1195141	0	True				
ANR	1195145	IdentifierDecl	* qc = ( QueuedCommand * ) daemonCoreSockAdapter . GetDataPtr ( )		1195141	0					
ANR	1195146	IdentifierDeclType	QueuedCommand *		1195141	0					
ANR	1195147	Identifier	qc		1195141	1					
ANR	1195148	AssignmentExpression	* qc = ( QueuedCommand * ) daemonCoreSockAdapter . GetDataPtr ( )		1195141	2		=			
ANR	1195149	Identifier	qc		1195141	0					
ANR	1195150	CastExpression	( QueuedCommand * ) daemonCoreSockAdapter . GetDataPtr ( )		1195141	1					
ANR	1195151	CastTarget	QueuedCommand *		1195141	0					
ANR	1195152	CallExpression	daemonCoreSockAdapter . GetDataPtr ( )		1195141	1					
ANR	1195153	Callee	daemonCoreSockAdapter . GetDataPtr		1195141	0					
ANR	1195154	MemberAccess	daemonCoreSockAdapter . GetDataPtr		1195141	0					
ANR	1195155	Identifier	daemonCoreSockAdapter		1195141	0					
ANR	1195156	Identifier	GetDataPtr		1195141	1					
ANR	1195157	ArgumentList			1195141	1					
ANR	1195158	ExpressionStatement	ASSERT ( qc )	605:1:13793:13803	1195141	1	True				
ANR	1195159	CallExpression	ASSERT ( qc )		1195141	0					
ANR	1195160	Callee	ASSERT		1195141	0					
ANR	1195161	Identifier	ASSERT		1195141	0					
ANR	1195162	ArgumentList	qc		1195141	1					
ANR	1195163	Argument	qc		1195141	0					
ANR	1195164	Identifier	qc		1195141	0					
ANR	1195165	ExpressionStatement	startCommand ( qc -> msg )	607:1:13807:13828	1195141	2	True				
ANR	1195166	CallExpression	startCommand ( qc -> msg )		1195141	0					
ANR	1195167	Callee	startCommand		1195141	0					
ANR	1195168	Identifier	startCommand		1195141	0					
ANR	1195169	ArgumentList	qc -> msg		1195141	1					
ANR	1195170	Argument	qc -> msg		1195141	0					
ANR	1195171	PtrMemberAccess	qc -> msg		1195141	0					
ANR	1195172	Identifier	qc		1195141	0					
ANR	1195173	Identifier	msg		1195141	1					
ANR	1195174	Statement	delete	609:1:13832:13837	1195141	3	True				
ANR	1195175	ExpressionStatement	qc	609:8:13839:13841	1195141	4	True				
ANR	1195176	Identifier	qc		1195141	0					
ANR	1195177	ExpressionStatement	decRefCount ( )	610:1:13844:13857	1195141	5	True				
ANR	1195178	CallExpression	decRefCount ( )		1195141	0					
ANR	1195179	Callee	decRefCount		1195141	0					
ANR	1195180	Identifier	decRefCount		1195141	0					
ANR	1195181	ArgumentList			1195141	1					
ANR	1195182	ReturnType	void		1195141	1					
ANR	1195183	Identifier	DCMessenger :: startCommandAfterDelay_alarm		1195141	2					
ANR	1195184	ParameterList			1195141	3					
ANR	1195185	CFGEntryNode	ENTRY		1195141		True				
ANR	1195186	CFGExitNode	EXIT		1195141		True				
ANR	1195187	Symbol	daemonCoreSockAdapter		1195141						
ANR	1195188	Symbol	qc		1195141						
ANR	1195189	Symbol	daemonCoreSockAdapter . GetDataPtr		1195141						
ANR	1195190	Symbol	qc -> msg		1195141						
ANR	1195191	Symbol	* qc		1195141						
ANR	1195192	Function	DCCommandOnlyMsg :: DCCommandOnlyMsg	613:0:13862:13924							
ANR	1195193	FunctionDef	DCCommandOnlyMsg :: DCCommandOnlyMsg (int cmd)		1195192	0					
ANR	1195194	CompoundStatement		614:0:13922:13924	1195192	0					
ANR	1195195	Identifier	DCCommandOnlyMsg :: DCCommandOnlyMsg		1195192	1					
ANR	1195196	ParameterList	int cmd		1195192	2					
ANR	1195197	Parameter	int cmd	613:36:13898:13904	1195192	0	True				
ANR	1195198	ParameterType	int		1195192	0					
ANR	1195199	Identifier	cmd		1195192	1					
ANR	1195200	CFGEntryNode	ENTRY		1195192		True				
ANR	1195201	CFGExitNode	EXIT		1195192		True				
ANR	1195202	Symbol	cmd		1195192						
ANR	1195203	Function	DCStringMsg :: DCStringMsg	627:0:14078:14162							
ANR	1195204	FunctionDef	"DCStringMsg :: DCStringMsg (int cmd , char const * str)"		1195203	0					
ANR	1195205	CompoundStatement		629:0:14146:14162	1195203	0					
ANR	1195206	ExpressionStatement	m_str = str	630:1:14149:14160	1195203	0	True				
ANR	1195207	AssignmentExpression	m_str = str		1195203	0		=			
ANR	1195208	Identifier	m_str		1195203	0					
ANR	1195209	Identifier	str		1195203	1					
ANR	1195210	Identifier	DCStringMsg :: DCStringMsg		1195203	1					
ANR	1195211	ParameterList	"int cmd , char const * str"		1195203	2					
ANR	1195212	Parameter	int cmd	627:26:14104:14110	1195203	0	True				
ANR	1195213	ParameterType	int		1195203	0					
ANR	1195214	Identifier	cmd		1195203	1					
ANR	1195215	Parameter	char const * str	627:35:14113:14127	1195203	1	True				
ANR	1195216	ParameterType	char const *		1195203	0					
ANR	1195217	Identifier	str		1195203	1					
ANR	1195218	CFGEntryNode	ENTRY		1195203		True				
ANR	1195219	CFGExitNode	EXIT		1195203		True				
ANR	1195220	Symbol	str		1195203						
ANR	1195221	Symbol	m_str		1195203						
ANR	1195222	Symbol	cmd		1195203						
ANR	1195223	DeclStmt									
ANR	1195224	Decl							char	char *	str
ANR	1195225	Function	DCMsgCallback :: doCallback	655:0:14505:14593							
ANR	1195226	FunctionDef	DCMsgCallback :: doCallback ()		1195225	0					
ANR	1195227	CompoundStatement		657:0:14538:14593	1195225	0					
ANR	1195228	IfStatement	if ( m_fn_cpp )		1195225	0					
ANR	1195229	Condition	m_fn_cpp	658:5:14545:14552	1195225	0	True				
ANR	1195230	Identifier	m_fn_cpp		1195225	0					
ANR	1195231	CompoundStatement		2:16:17:17	1195225	1					
ANR	1195232	Statement	(	659:2:14560:14560	1195225	0	True				
ANR	1195233	Statement	m_service	659:3:14561:14569	1195225	1	True				
ANR	1195234	Statement	->*	659:12:14570:14572	1195225	2	True				
ANR	1195235	Statement	m_fn_cpp	659:15:14573:14580	1195225	3	True				
ANR	1195236	Statement	)	659:23:14581:14581	1195225	4	True				
ANR	1195237	ExpressionStatement	this	659:24:14582:14588	1195225	5	True				
ANR	1195238	Identifier	this		1195225	0					
ANR	1195239	ReturnType	void		1195225	1					
ANR	1195240	Identifier	DCMsgCallback :: doCallback		1195225	2					
ANR	1195241	ParameterList			1195225	3					
ANR	1195242	CFGEntryNode	ENTRY		1195225		True				
ANR	1195243	CFGExitNode	EXIT		1195225		True				
ANR	1195244	Symbol	m_fn_cpp		1195225						
ANR	1195245	Function	DCMsgCallback :: DCMsgCallback	663:0:14596:14740							
ANR	1195246	FunctionDef	"DCMsgCallback :: DCMsgCallback (CppFunction fn , Service * service , void * misc_data)"		1195245	0					
ANR	1195247	CompoundStatement		664:0:14674:14740	1195245	0					
ANR	1195248	ExpressionStatement	m_fn_cpp = fn	665:1:14677:14690	1195245	0	True				
ANR	1195249	AssignmentExpression	m_fn_cpp = fn		1195245	0		=			
ANR	1195250	Identifier	m_fn_cpp		1195245	0					
ANR	1195251	Identifier	fn		1195245	1					
ANR	1195252	ExpressionStatement	m_service = service	666:1:14693:14712	1195245	1	True				
ANR	1195253	AssignmentExpression	m_service = service		1195245	0		=			
ANR	1195254	Identifier	m_service		1195245	0					
ANR	1195255	Identifier	service		1195245	1					
ANR	1195256	ExpressionStatement	m_misc_data = misc_data	667:1:14715:14738	1195245	2	True				
ANR	1195257	AssignmentExpression	m_misc_data = misc_data		1195245	0		=			
ANR	1195258	Identifier	m_misc_data		1195245	0					
ANR	1195259	Identifier	misc_data		1195245	1					
ANR	1195260	Identifier	DCMsgCallback :: DCMsgCallback		1195245	1					
ANR	1195261	ParameterList	"CppFunction fn , Service * service , void * misc_data"		1195245	2					
ANR	1195262	Parameter	CppFunction fn	663:29:14625:14638	1195245	0	True				
ANR	1195263	ParameterType	CppFunction		1195245	0					
ANR	1195264	Identifier	fn		1195245	1					
ANR	1195265	Parameter	Service * service	663:44:14640:14655	1195245	1	True				
ANR	1195266	ParameterType	Service *		1195245	0					
ANR	1195267	Identifier	service		1195245	1					
ANR	1195268	Parameter	void * misc_data	663:61:14657:14671	1195245	2	True				
ANR	1195269	ParameterType	void *		1195245	0					
ANR	1195270	Identifier	misc_data		1195245	1					
ANR	1195271	CFGEntryNode	ENTRY		1195245		True				
ANR	1195272	CFGExitNode	EXIT		1195245		True				
ANR	1195273	Symbol	m_service		1195245						
ANR	1195274	Symbol	service		1195245						
ANR	1195275	Symbol	m_fn_cpp		1195245						
ANR	1195276	Symbol	fn		1195245						
ANR	1195277	Symbol	misc_data		1195245						
ANR	1195278	Symbol	m_misc_data		1195245						
ANR	1195279	Function	DCMsgCallback :: cancelMessage	670:0:14743:14895							
ANR	1195280	FunctionDef	DCMsgCallback :: cancelMessage (bool quiet)		1195279	0					
ANR	1195281	CompoundStatement		672:0:14789:14895	1195279	0					
ANR	1195282	IfStatement	if ( m_msg . get ( ) )		1195279	0					
ANR	1195283	Condition	m_msg . get ( )	673:5:14796:14806	1195279	0	True				
ANR	1195284	CallExpression	m_msg . get ( )		1195279	0					
ANR	1195285	Callee	m_msg . get		1195279	0					
ANR	1195286	MemberAccess	m_msg . get		1195279	0					
ANR	1195287	Identifier	m_msg		1195279	0					
ANR	1195288	Identifier	get		1195279	1					
ANR	1195289	ArgumentList			1195279	1					
ANR	1195290	CompoundStatement		2:19:20:20	1195279	1					
ANR	1195291	IfStatement	if ( quiet )		1195279	0					
ANR	1195292	Condition	quiet	674:6:14818:14822	1195279	0	True				
ANR	1195293	Identifier	quiet		1195279	0					
ANR	1195294	CompoundStatement		3:14:36:36	1195279	1					
ANR	1195295	ExpressionStatement	m_msg -> setCancelDebugLevel ( 0 )	675:3:14831:14860	1195279	0	True				
ANR	1195296	CallExpression	m_msg -> setCancelDebugLevel ( 0 )		1195279	0					
ANR	1195297	Callee	m_msg -> setCancelDebugLevel		1195279	0					
ANR	1195298	PtrMemberAccess	m_msg -> setCancelDebugLevel		1195279	0					
ANR	1195299	Identifier	m_msg		1195279	0					
ANR	1195300	Identifier	setCancelDebugLevel		1195279	1					
ANR	1195301	ArgumentList	0		1195279	1					
ANR	1195302	Argument	0		1195279	0					
ANR	1195303	PrimaryExpression	0		1195279	0					
ANR	1195304	ExpressionStatement	m_msg -> cancelMessage ( )	677:2:14868:14890	1195279	1	True				
ANR	1195305	CallExpression	m_msg -> cancelMessage ( )		1195279	0					
ANR	1195306	Callee	m_msg -> cancelMessage		1195279	0					
ANR	1195307	PtrMemberAccess	m_msg -> cancelMessage		1195279	0					
ANR	1195308	Identifier	m_msg		1195279	0					
ANR	1195309	Identifier	cancelMessage		1195279	1					
ANR	1195310	ArgumentList			1195279	1					
ANR	1195311	ReturnType	void		1195279	1					
ANR	1195312	Identifier	DCMsgCallback :: cancelMessage		1195279	2					
ANR	1195313	ParameterList	bool quiet		1195279	3					
ANR	1195314	Parameter	bool quiet	671:29:14777:14786	1195279	0	True				
ANR	1195315	ParameterType	bool		1195279	0					
ANR	1195316	Identifier	quiet		1195279	1					
ANR	1195317	CFGEntryNode	ENTRY		1195279		True				
ANR	1195318	CFGExitNode	EXIT		1195279		True				
ANR	1195319	Symbol	m_msg		1195279						
ANR	1195320	Symbol	m_msg . get		1195279						
ANR	1195321	Symbol	quiet		1195279						
ANR	1195322	Function	DCMsgCallback :: cancelCallback	681:0:14898:14995							
ANR	1195323	FunctionDef	DCMsgCallback :: cancelCallback ()		1195322	0					
ANR	1195324	CompoundStatement		683:0:14935:14995	1195322	0					
ANR	1195325	ExpressionStatement	m_fn_cpp = NULL	684:1:14938:14953	1195322	0	True				
ANR	1195326	AssignmentExpression	m_fn_cpp = NULL		1195322	0		=			
ANR	1195327	Identifier	m_fn_cpp		1195322	0					
ANR	1195328	Identifier	NULL		1195322	1					
ANR	1195329	ExpressionStatement	m_service = NULL	685:1:14956:14972	1195322	1	True				
ANR	1195330	AssignmentExpression	m_service = NULL		1195322	0		=			
ANR	1195331	Identifier	m_service		1195322	0					
ANR	1195332	Identifier	NULL		1195322	1					
ANR	1195333	ExpressionStatement	m_misc_data = NULL	686:1:14975:14993	1195322	2	True				
ANR	1195334	AssignmentExpression	m_misc_data = NULL		1195322	0		=			
ANR	1195335	Identifier	m_misc_data		1195322	0					
ANR	1195336	Identifier	NULL		1195322	1					
ANR	1195337	ReturnType	void		1195322	1					
ANR	1195338	Identifier	DCMsgCallback :: cancelCallback		1195322	2					
ANR	1195339	ParameterList			1195322	3					
ANR	1195340	CFGEntryNode	ENTRY		1195322		True				
ANR	1195341	CFGExitNode	EXIT		1195322		True				
ANR	1195342	Symbol	NULL		1195322						
ANR	1195343	Symbol	m_service		1195322						
ANR	1195344	Symbol	m_fn_cpp		1195322						
ANR	1195345	Symbol	m_misc_data		1195322						
ANR	1195346	Function	ClassAdMsg :: ClassAdMsg	689:0:14998:15071							
ANR	1195347	FunctionDef	"ClassAdMsg :: ClassAdMsg (int cmd , ClassAd & msg)"		1195346	0					
ANR	1195348	CompoundStatement		692:0:15069:15071	1195346	0					
ANR	1195349	Identifier	ClassAdMsg :: ClassAdMsg		1195346	1					
ANR	1195350	ParameterList	"int cmd , ClassAd & msg"		1195346	2					
ANR	1195351	Parameter	int cmd	689:23:15021:15027	1195346	0	True				
ANR	1195352	ParameterType	int		1195346	0					
ANR	1195353	Identifier	cmd		1195346	1					
ANR	1195354	Parameter	ClassAd & msg	689:31:15029:15040	1195346	1	True				
ANR	1195355	ParameterType	ClassAd &		1195346	0					
ANR	1195356	Identifier	msg		1195346	1					
ANR	1195357	CFGEntryNode	ENTRY		1195346		True				
ANR	1195358	CFGExitNode	EXIT		1195346		True				
ANR	1195359	Symbol	msg		1195346						
ANR	1195360	Symbol	cmd		1195346						
ANR	1195361	Function	ChildAliveMsg :: ChildAliveMsg	715:0:15400:15697							
ANR	1195362	FunctionDef	"ChildAliveMsg :: ChildAliveMsg (int mypid , int max_hang_time , int max_tries , double dprintf_lock_delay , bool blocking)"		1195361	0					
ANR	1195363	CompoundStatement		723:0:15695:15697	1195361	0					
ANR	1195364	Identifier	ChildAliveMsg :: ChildAliveMsg		1195361	1					
ANR	1195365	ParameterList	"int mypid , int max_hang_time , int max_tries , double dprintf_lock_delay , bool blocking"		1195361	2					
ANR	1195366	Parameter	int mypid	715:30:15430:15438	1195361	0	True				
ANR	1195367	ParameterType	int		1195361	0					
ANR	1195368	Identifier	mypid		1195361	1					
ANR	1195369	Parameter	int max_hang_time	715:41:15441:15457	1195361	1	True				
ANR	1195370	ParameterType	int		1195361	0					
ANR	1195371	Identifier	max_hang_time		1195361	1					
ANR	1195372	Parameter	int max_tries	715:60:15460:15472	1195361	2	True				
ANR	1195373	ParameterType	int		1195361	0					
ANR	1195374	Identifier	max_tries		1195361	1					
ANR	1195375	Parameter	double dprintf_lock_delay	715:75:15475:15499	1195361	3	True				
ANR	1195376	ParameterType	double		1195361	0					
ANR	1195377	Identifier	dprintf_lock_delay		1195361	1					
ANR	1195378	Parameter	bool blocking	715:102:15502:15514	1195361	4	True				
ANR	1195379	ParameterType	bool		1195361	0					
ANR	1195380	Identifier	blocking		1195361	1					
ANR	1195381	CFGEntryNode	ENTRY		1195361		True				
ANR	1195382	CFGExitNode	EXIT		1195361		True				
ANR	1195383	Symbol	max_hang_time		1195361						
ANR	1195384	Symbol	blocking		1195361						
ANR	1195385	Symbol	mypid		1195361						
ANR	1195386	Symbol	dprintf_lock_delay		1195361						
ANR	1195387	Symbol	max_tries		1195361						
ANR	1195388	Function	ChildAliveMsg :: messageSendFailed	749:0:16249:16837							
ANR	1195389	FunctionDef	ChildAliveMsg :: messageSendFailed (DCMessenger * messenger)		1195388	0					
ANR	1195390	CompoundStatement		751:0:16313:16837	1195388	0					
ANR	1195391	ExpressionStatement	m_tries ++	752:1:16316:16325	1195388	0	True				
ANR	1195392	PostIncDecOperationExpression	m_tries ++		1195388	0					
ANR	1195393	Identifier	m_tries		1195388	0					
ANR	1195394	IncDec	++		1195388	1					
ANR	1195395	Statement	dprintf	754:1:16329:16335	1195388	1	True				
ANR	1195396	Statement	(	754:8:16336:16336	1195388	2	True				
ANR	1195397	Statement	D_ALWAYS	754:9:16337:16344	1195388	3	True				
ANR	1195398	Statement	","	754:17:16345:16345	1195388	4	True				
ANR	1195399	Statement	"""ChildAliveMsg: failed to send DC_CHILDALIVE to parent %s """	755:3:16350:16408	1195388	5	True				
ANR	1195400	Statement	"""(try %d of %d): %s\\n"""	756:3:16413:16434	1195388	6	True				
ANR	1195401	Statement	","	756:25:16435:16435	1195388	7	True				
ANR	1195402	Statement	messenger	757:3:16440:16448	1195388	8	True				
ANR	1195403	Statement	->	757:12:16449:16450	1195388	9	True				
ANR	1195404	Statement	peerDescription	757:14:16451:16465	1195388	10	True				
ANR	1195405	Statement	(	757:29:16466:16466	1195388	11	True				
ANR	1195406	Statement	)	757:30:16467:16467	1195388	12	True				
ANR	1195407	Statement	","	757:31:16468:16468	1195388	13	True				
ANR	1195408	Statement	m_tries	758:3:16473:16479	1195388	14	True				
ANR	1195409	Statement	","	758:10:16480:16480	1195388	15	True				
ANR	1195410	Statement	m_max_tries	759:3:16485:16495	1195388	16	True				
ANR	1195411	Statement	","	759:14:16496:16496	1195388	17	True				
ANR	1195412	Statement	getErrorStackText	760:3:16501:16517	1195388	18	True				
ANR	1195413	Statement	(	760:20:16518:16518	1195388	19	True				
ANR	1195414	Statement	)	760:21:16519:16519	1195388	20	True				
ANR	1195415	Statement	)	760:22:16520:16520	1195388	21	True				
ANR	1195416	ExpressionStatement		760:23:16521:16521	1195388	22	True				
ANR	1195417	IfStatement	if ( m_tries < m_max_tries )		1195388	23					
ANR	1195418	Condition	m_tries < m_max_tries	762:5:16529:16549	1195388	0	True				
ANR	1195419	RelationalExpression	m_tries < m_max_tries		1195388	0		<			
ANR	1195420	Identifier	m_tries		1195388	0					
ANR	1195421	Identifier	m_max_tries		1195388	1					
ANR	1195422	CompoundStatement		12:29:239:239	1195388	1					
ANR	1195423	IfStatement	if ( getDeadlineExpired ( ) )		1195388	0					
ANR	1195424	Condition	getDeadlineExpired ( )	763:6:16561:16580	1195388	0	True				
ANR	1195425	CallExpression	getDeadlineExpired ( )		1195388	0					
ANR	1195426	Callee	getDeadlineExpired		1195388	0					
ANR	1195427	Identifier	getDeadlineExpired		1195388	0					
ANR	1195428	ArgumentList			1195388	1					
ANR	1195429	CompoundStatement		13:29:270:270	1195388	1					
ANR	1195430	ExpressionStatement	"dprintf ( D_ALWAYS , ""ChildAliveMsg: giving up because deadline expired for sending DC_CHILDALIVE to parent.\\n"" )"	764:3:16589:16697	1195388	0	True				
ANR	1195431	CallExpression	"dprintf ( D_ALWAYS , ""ChildAliveMsg: giving up because deadline expired for sending DC_CHILDALIVE to parent.\\n"" )"		1195388	0					
ANR	1195432	Callee	dprintf		1195388	0					
ANR	1195433	Identifier	dprintf		1195388	0					
ANR	1195434	ArgumentList	D_ALWAYS		1195388	1					
ANR	1195435	Argument	D_ALWAYS		1195388	0					
ANR	1195436	Identifier	D_ALWAYS		1195388	0					
ANR	1195437	Argument	"""ChildAliveMsg: giving up because deadline expired for sending DC_CHILDALIVE to parent.\\n"""		1195388	1					
ANR	1195438	PrimaryExpression	"""ChildAliveMsg: giving up because deadline expired for sending DC_CHILDALIVE to parent.\\n"""		1195388	0					
ANR	1195439	ElseStatement	else		1195388	0					
ANR	1195440	IfStatement	if ( m_blocking )		1195388	0					
ANR	1195441	Condition	m_blocking	766:11:16714:16723	1195388	0	True				
ANR	1195442	Identifier	m_blocking		1195388	0					
ANR	1195443	CompoundStatement		16:24:413:413	1195388	1					
ANR	1195444	ExpressionStatement	messenger -> sendBlockingMsg ( this )	767:3:16732:16766	1195388	0	True				
ANR	1195445	CallExpression	messenger -> sendBlockingMsg ( this )		1195388	0					
ANR	1195446	Callee	messenger -> sendBlockingMsg		1195388	0					
ANR	1195447	PtrMemberAccess	messenger -> sendBlockingMsg		1195388	0					
ANR	1195448	Identifier	messenger		1195388	0					
ANR	1195449	Identifier	sendBlockingMsg		1195388	1					
ANR	1195450	ArgumentList	this		1195388	1					
ANR	1195451	Argument	this		1195388	0					
ANR	1195452	Identifier	this		1195388	0					
ANR	1195453	ElseStatement	else		1195388	0					
ANR	1195454	CompoundStatement		19:7:465:465	1195388	0					
ANR	1195455	ExpressionStatement	"messenger -> startCommandAfterDelay ( 5 , this )"	770:3:16784:16828	1195388	0	True				
ANR	1195456	CallExpression	"messenger -> startCommandAfterDelay ( 5 , this )"		1195388	0					
ANR	1195457	Callee	messenger -> startCommandAfterDelay		1195388	0					
ANR	1195458	PtrMemberAccess	messenger -> startCommandAfterDelay		1195388	0					
ANR	1195459	Identifier	messenger		1195388	0					
ANR	1195460	Identifier	startCommandAfterDelay		1195388	1					
ANR	1195461	ArgumentList	5		1195388	1					
ANR	1195462	Argument	5		1195388	0					
ANR	1195463	PrimaryExpression	5		1195388	0					
ANR	1195464	Argument	this		1195388	1					
ANR	1195465	Identifier	this		1195388	0					
ANR	1195466	ReturnType	void		1195388	1					
ANR	1195467	Identifier	ChildAliveMsg :: messageSendFailed		1195388	2					
ANR	1195468	ParameterList	DCMessenger * messenger		1195388	3					
ANR	1195469	Parameter	DCMessenger * messenger	750:34:16288:16309	1195388	0	True				
ANR	1195470	ParameterType	DCMessenger *		1195388	0					
ANR	1195471	Identifier	messenger		1195388	1					
ANR	1195472	CFGEntryNode	ENTRY		1195388		True				
ANR	1195473	CFGExitNode	EXIT		1195388		True				
ANR	1195474	Symbol	messenger		1195388						
ANR	1195475	Symbol	D_ALWAYS		1195388						
ANR	1195476	Symbol	this		1195388						
ANR	1195477	Symbol	m_max_tries		1195388						
ANR	1195478	Symbol	m_blocking		1195388						
ANR	1195479	Symbol	m_tries		1195388						
ANR	1195480	Symbol	getDeadlineExpired		1195388						
