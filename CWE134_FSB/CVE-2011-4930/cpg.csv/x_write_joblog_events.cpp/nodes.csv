command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5608614	File	data/converged/CVE-2011-4930_htcondor/x_write_joblog_events.cpp								
ANR	5608615	DeclStmt									
ANR	5608616	Decl							struct hostent	struct hostent *	NameEnt
ANR	5608617	DeclStmt									
ANR	5608618	Decl							int	int ( WriteUserLog * log )	writeSubmitEvent
ANR	5608619	DeclStmt									
ANR	5608620	Decl							int	int ( WriteUserLog * log )	writeExecuteEvent
ANR	5608621	DeclStmt									
ANR	5608622	Decl							int	int ( WriteUserLog * log )	writeJobTerminatedEvent
ANR	5608623	Function	main	65:0:1857:3448							
ANR	5608624	FunctionDef	"main (int argc , char * * argv)"		5608623	0					
ANR	5608625	CompoundStatement		67:0:1889:3448	5608623	0					
ANR	5608626	IfStatement	if ( argc != 4 )		5608623	0					
ANR	5608627	Condition	argc != 4	69:4:1896:1904	5608623	0	True				
ANR	5608628	EqualityExpression	argc != 4		5608623	0		!=			
ANR	5608629	Identifier	argc		5608623	0					
ANR	5608630	PrimaryExpression	4		5608623	1					
ANR	5608631	CompoundStatement		3:15:17:17	5608623	1					
ANR	5608632	ExpressionStatement	"printf ( ""ussage: x_write_joblog_events log event count\\n"" )"	70:2:1911:1968	5608623	0	True				
ANR	5608633	CallExpression	"printf ( ""ussage: x_write_joblog_events log event count\\n"" )"		5608623	0					
ANR	5608634	Callee	printf		5608623	0					
ANR	5608635	Identifier	printf		5608623	0					
ANR	5608636	ArgumentList	"""ussage: x_write_joblog_events log event count\\n"""		5608623	1					
ANR	5608637	Argument	"""ussage: x_write_joblog_events log event count\\n"""		5608623	0					
ANR	5608638	PrimaryExpression	"""ussage: x_write_joblog_events log event count\\n"""		5608623	0					
ANR	5608639	ExpressionStatement	exit ( 1 )	71:2:1972:1979	5608623	1	True				
ANR	5608640	CallExpression	exit ( 1 )		5608623	0					
ANR	5608641	Callee	exit		5608623	0					
ANR	5608642	Identifier	exit		5608623	0					
ANR	5608643	ArgumentList	1		5608623	1					
ANR	5608644	Argument	1		5608623	0					
ANR	5608645	PrimaryExpression	1		5608623	0					
ANR	5608646	IdentifierDeclStatement	char * logname = argv [ 1 ] ;	74:1:1986:2009	5608623	1	True				
ANR	5608647	IdentifierDecl	* logname = argv [ 1 ]		5608623	0					
ANR	5608648	IdentifierDeclType	char *		5608623	0					
ANR	5608649	Identifier	logname		5608623	1					
ANR	5608650	AssignmentExpression	* logname = argv [ 1 ]		5608623	2		=			
ANR	5608651	Identifier	logname		5608623	0					
ANR	5608652	ArrayIndexing	argv [ 1 ]		5608623	1					
ANR	5608653	Identifier	argv		5608623	0					
ANR	5608654	PrimaryExpression	1		5608623	1					
ANR	5608655	IdentifierDeclStatement	int count = atoi ( argv [ 3 ] ) ;	75:1:2012:2037	5608623	2	True				
ANR	5608656	IdentifierDecl	count = atoi ( argv [ 3 ] )		5608623	0					
ANR	5608657	IdentifierDeclType	int		5608623	0					
ANR	5608658	Identifier	count		5608623	1					
ANR	5608659	AssignmentExpression	count = atoi ( argv [ 3 ] )		5608623	2		=			
ANR	5608660	Identifier	count		5608623	0					
ANR	5608661	CallExpression	atoi ( argv [ 3 ] )		5608623	1					
ANR	5608662	Callee	atoi		5608623	0					
ANR	5608663	Identifier	atoi		5608623	0					
ANR	5608664	ArgumentList	argv [ 3 ]		5608623	1					
ANR	5608665	Argument	argv [ 3 ]		5608623	0					
ANR	5608666	ArrayIndexing	argv [ 3 ]		5608623	0					
ANR	5608667	Identifier	argv		5608623	0					
ANR	5608668	PrimaryExpression	3		5608623	1					
ANR	5608669	IfStatement	"if ( strcmp ( argv [ 2 ] , ""submit"" ) == 0 )"		5608623	3					
ANR	5608670	Condition	"strcmp ( argv [ 2 ] , ""submit"" ) == 0"	78:5:2046:2074	5608623	0	True				
ANR	5608671	EqualityExpression	"strcmp ( argv [ 2 ] , ""submit"" ) == 0"		5608623	0		==			
ANR	5608672	CallExpression	"strcmp ( argv [ 2 ] , ""submit"" )"		5608623	0					
ANR	5608673	Callee	strcmp		5608623	0					
ANR	5608674	Identifier	strcmp		5608623	0					
ANR	5608675	ArgumentList	argv [ 2 ]		5608623	1					
ANR	5608676	Argument	argv [ 2 ]		5608623	0					
ANR	5608677	ArrayIndexing	argv [ 2 ]		5608623	0					
ANR	5608678	Identifier	argv		5608623	0					
ANR	5608679	PrimaryExpression	2		5608623	1					
ANR	5608680	Argument	"""submit"""		5608623	1					
ANR	5608681	PrimaryExpression	"""submit"""		5608623	0					
ANR	5608682	PrimaryExpression	0		5608623	1					
ANR	5608683	CompoundStatement		12:36:187:187	5608623	1					
ANR	5608684	ForStatement	for ( int cluster = 1 ; cluster <= count ; cluster ++ )		5608623	0					
ANR	5608685	ForInit	int cluster = 1 ;	80:6:2121:2136	5608623	0	True				
ANR	5608686	IdentifierDeclStatement	int cluster = 1 ;		5608623	0					
ANR	5608687	IdentifierDecl	cluster = 1		5608623	0					
ANR	5608688	IdentifierDeclType	int		5608623	0					
ANR	5608689	Identifier	cluster		5608623	1					
ANR	5608690	AssignmentExpression	cluster = 1		5608623	2		=			
ANR	5608691	Identifier	cluster		5608623	0					
ANR	5608692	PrimaryExpression	1		5608623	1					
ANR	5608693	Condition	cluster <= count	80:22:2137:2152	5608623	1	True				
ANR	5608694	RelationalExpression	cluster <= count		5608623	0		<=			
ANR	5608695	Identifier	cluster		5608623	0					
ANR	5608696	Identifier	count		5608623	1					
ANR	5608697	PostIncDecOperationExpression	cluster ++	80:39:2154:2162	5608623	2	True				
ANR	5608698	Identifier	cluster		5608623	0					
ANR	5608699	IncDec	++		5608623	1					
ANR	5608700	CompoundStatement		15:3:280:350	5608623	3					
ANR	5608701	IdentifierDeclStatement	"WriteUserLog log ( ""owner"" , NULL , logname , cluster , 0 , 0 , ( bool ) 0 , NULL ) ;"	81:3:2170:2240	5608623	0	True				
ANR	5608702	IdentifierDecl	"log ( ""owner"" , NULL , logname , cluster , 0 , 0 , ( bool ) 0 , NULL )"		5608623	0					
ANR	5608703	IdentifierDeclType	WriteUserLog		5608623	0					
ANR	5608704	Identifier	log		5608623	1					
ANR	5608705	Expression	"""owner"" , NULL , logname , cluster , 0 , 0 , ( bool ) 0 , NULL"		5608623	2					
ANR	5608706	PrimaryExpression	"""owner"""		5608623	0					
ANR	5608707	Expression	"NULL , logname , cluster , 0 , 0 , ( bool ) 0 , NULL"		5608623	1					
ANR	5608708	Identifier	NULL		5608623	0					
ANR	5608709	Expression	"logname , cluster , 0 , 0 , ( bool ) 0 , NULL"		5608623	1					
ANR	5608710	Identifier	logname		5608623	0					
ANR	5608711	Expression	"cluster , 0 , 0 , ( bool ) 0 , NULL"		5608623	1					
ANR	5608712	Identifier	cluster		5608623	0					
ANR	5608713	Expression	"0 , 0 , ( bool ) 0 , NULL"		5608623	1					
ANR	5608714	PrimaryExpression	0		5608623	0					
ANR	5608715	Expression	"0 , ( bool ) 0 , NULL"		5608623	1					
ANR	5608716	PrimaryExpression	0		5608623	0					
ANR	5608717	Expression	"( bool ) 0 , NULL"		5608623	1					
ANR	5608718	CastExpression	( bool ) 0		5608623	0					
ANR	5608719	CastTarget	bool		5608623	0					
ANR	5608720	PrimaryExpression	0		5608623	1					
ANR	5608721	Identifier	NULL		5608623	1					
ANR	5608722	ExpressionStatement	writeSubmitEvent ( & log )	82:3:2245:2267	5608623	1	True				
ANR	5608723	CallExpression	writeSubmitEvent ( & log )		5608623	0					
ANR	5608724	Callee	writeSubmitEvent		5608623	0					
ANR	5608725	Identifier	writeSubmitEvent		5608623	0					
ANR	5608726	ArgumentList	& log		5608623	1					
ANR	5608727	Argument	& log		5608623	0					
ANR	5608728	UnaryOperationExpression	& log		5608623	0					
ANR	5608729	UnaryOperator	&		5608623	0					
ANR	5608730	Identifier	log		5608623	1					
ANR	5608731	ElseStatement	else		5608623	0					
ANR	5608732	IfStatement	"if ( strcmp ( argv [ 2 ] , ""execute"" ) == 0 )"		5608623	0					
ANR	5608733	Condition	"strcmp ( argv [ 2 ] , ""execute"" ) == 0"	84:12:2285:2314	5608623	0	True				
ANR	5608734	EqualityExpression	"strcmp ( argv [ 2 ] , ""execute"" ) == 0"		5608623	0		==			
ANR	5608735	CallExpression	"strcmp ( argv [ 2 ] , ""execute"" )"		5608623	0					
ANR	5608736	Callee	strcmp		5608623	0					
ANR	5608737	Identifier	strcmp		5608623	0					
ANR	5608738	ArgumentList	argv [ 2 ]		5608623	1					
ANR	5608739	Argument	argv [ 2 ]		5608623	0					
ANR	5608740	ArrayIndexing	argv [ 2 ]		5608623	0					
ANR	5608741	Identifier	argv		5608623	0					
ANR	5608742	PrimaryExpression	2		5608623	1					
ANR	5608743	Argument	"""execute"""		5608623	1					
ANR	5608744	PrimaryExpression	"""execute"""		5608623	0					
ANR	5608745	PrimaryExpression	0		5608623	1					
ANR	5608746	CompoundStatement		18:44:427:427	5608623	1					
ANR	5608747	ForStatement	for ( int cluster = 1 ; cluster <= count ; cluster ++ )		5608623	0					
ANR	5608748	ForInit	int cluster = 1 ;	86:6:2361:2376	5608623	0	True				
ANR	5608749	IdentifierDeclStatement	int cluster = 1 ;		5608623	0					
ANR	5608750	IdentifierDecl	cluster = 1		5608623	0					
ANR	5608751	IdentifierDeclType	int		5608623	0					
ANR	5608752	Identifier	cluster		5608623	1					
ANR	5608753	AssignmentExpression	cluster = 1		5608623	2		=			
ANR	5608754	Identifier	cluster		5608623	0					
ANR	5608755	PrimaryExpression	1		5608623	1					
ANR	5608756	Condition	cluster <= count	86:22:2377:2392	5608623	1	True				
ANR	5608757	RelationalExpression	cluster <= count		5608623	0		<=			
ANR	5608758	Identifier	cluster		5608623	0					
ANR	5608759	Identifier	count		5608623	1					
ANR	5608760	PostIncDecOperationExpression	cluster ++	86:39:2394:2402	5608623	2	True				
ANR	5608761	Identifier	cluster		5608623	0					
ANR	5608762	IncDec	++		5608623	1					
ANR	5608763	CompoundStatement		21:3:520:590	5608623	3					
ANR	5608764	IdentifierDeclStatement	"WriteUserLog log ( ""owner"" , NULL , logname , cluster , 0 , 0 , ( bool ) 0 , NULL ) ;"	87:3:2410:2480	5608623	0	True				
ANR	5608765	IdentifierDecl	"log ( ""owner"" , NULL , logname , cluster , 0 , 0 , ( bool ) 0 , NULL )"		5608623	0					
ANR	5608766	IdentifierDeclType	WriteUserLog		5608623	0					
ANR	5608767	Identifier	log		5608623	1					
ANR	5608768	Expression	"""owner"" , NULL , logname , cluster , 0 , 0 , ( bool ) 0 , NULL"		5608623	2					
ANR	5608769	PrimaryExpression	"""owner"""		5608623	0					
ANR	5608770	Expression	"NULL , logname , cluster , 0 , 0 , ( bool ) 0 , NULL"		5608623	1					
ANR	5608771	Identifier	NULL		5608623	0					
ANR	5608772	Expression	"logname , cluster , 0 , 0 , ( bool ) 0 , NULL"		5608623	1					
ANR	5608773	Identifier	logname		5608623	0					
ANR	5608774	Expression	"cluster , 0 , 0 , ( bool ) 0 , NULL"		5608623	1					
ANR	5608775	Identifier	cluster		5608623	0					
ANR	5608776	Expression	"0 , 0 , ( bool ) 0 , NULL"		5608623	1					
ANR	5608777	PrimaryExpression	0		5608623	0					
ANR	5608778	Expression	"0 , ( bool ) 0 , NULL"		5608623	1					
ANR	5608779	PrimaryExpression	0		5608623	0					
ANR	5608780	Expression	"( bool ) 0 , NULL"		5608623	1					
ANR	5608781	CastExpression	( bool ) 0		5608623	0					
ANR	5608782	CastTarget	bool		5608623	0					
ANR	5608783	PrimaryExpression	0		5608623	1					
ANR	5608784	Identifier	NULL		5608623	1					
ANR	5608785	ExpressionStatement	writeExecuteEvent ( & log )	88:3:2485:2508	5608623	1	True				
ANR	5608786	CallExpression	writeExecuteEvent ( & log )		5608623	0					
ANR	5608787	Callee	writeExecuteEvent		5608623	0					
ANR	5608788	Identifier	writeExecuteEvent		5608623	0					
ANR	5608789	ArgumentList	& log		5608623	1					
ANR	5608790	Argument	& log		5608623	0					
ANR	5608791	UnaryOperationExpression	& log		5608623	0					
ANR	5608792	UnaryOperator	&		5608623	0					
ANR	5608793	Identifier	log		5608623	1					
ANR	5608794	ElseStatement	else		5608623	0					
ANR	5608795	IfStatement	"if ( strcmp ( argv [ 2 ] , ""terminated"" ) == 0 )"		5608623	0					
ANR	5608796	Condition	"strcmp ( argv [ 2 ] , ""terminated"" ) == 0"	90:12:2526:2558	5608623	0	True				
ANR	5608797	EqualityExpression	"strcmp ( argv [ 2 ] , ""terminated"" ) == 0"		5608623	0		==			
ANR	5608798	CallExpression	"strcmp ( argv [ 2 ] , ""terminated"" )"		5608623	0					
ANR	5608799	Callee	strcmp		5608623	0					
ANR	5608800	Identifier	strcmp		5608623	0					
ANR	5608801	ArgumentList	argv [ 2 ]		5608623	1					
ANR	5608802	Argument	argv [ 2 ]		5608623	0					
ANR	5608803	ArrayIndexing	argv [ 2 ]		5608623	0					
ANR	5608804	Identifier	argv		5608623	0					
ANR	5608805	PrimaryExpression	2		5608623	1					
ANR	5608806	Argument	"""terminated"""		5608623	1					
ANR	5608807	PrimaryExpression	"""terminated"""		5608623	0					
ANR	5608808	PrimaryExpression	0		5608623	1					
ANR	5608809	CompoundStatement		24:47:671:671	5608623	1					
ANR	5608810	ForStatement	for ( int cluster = 1 ; cluster <= count ; cluster ++ )		5608623	0					
ANR	5608811	ForInit	int cluster = 1 ;	92:6:2608:2623	5608623	0	True				
ANR	5608812	IdentifierDeclStatement	int cluster = 1 ;		5608623	0					
ANR	5608813	IdentifierDecl	cluster = 1		5608623	0					
ANR	5608814	IdentifierDeclType	int		5608623	0					
ANR	5608815	Identifier	cluster		5608623	1					
ANR	5608816	AssignmentExpression	cluster = 1		5608623	2		=			
ANR	5608817	Identifier	cluster		5608623	0					
ANR	5608818	PrimaryExpression	1		5608623	1					
ANR	5608819	Condition	cluster <= count	92:22:2624:2639	5608623	1	True				
ANR	5608820	RelationalExpression	cluster <= count		5608623	0		<=			
ANR	5608821	Identifier	cluster		5608623	0					
ANR	5608822	Identifier	count		5608623	1					
ANR	5608823	PostIncDecOperationExpression	cluster ++	92:39:2641:2649	5608623	2	True				
ANR	5608824	Identifier	cluster		5608623	0					
ANR	5608825	IncDec	++		5608623	1					
ANR	5608826	CompoundStatement		27:3:767:837	5608623	3					
ANR	5608827	IdentifierDeclStatement	"WriteUserLog log ( ""owner"" , NULL , logname , cluster , 0 , 0 , ( bool ) 0 , NULL ) ;"	93:3:2657:2727	5608623	0	True				
ANR	5608828	IdentifierDecl	"log ( ""owner"" , NULL , logname , cluster , 0 , 0 , ( bool ) 0 , NULL )"		5608623	0					
ANR	5608829	IdentifierDeclType	WriteUserLog		5608623	0					
ANR	5608830	Identifier	log		5608623	1					
ANR	5608831	Expression	"""owner"" , NULL , logname , cluster , 0 , 0 , ( bool ) 0 , NULL"		5608623	2					
ANR	5608832	PrimaryExpression	"""owner"""		5608623	0					
ANR	5608833	Expression	"NULL , logname , cluster , 0 , 0 , ( bool ) 0 , NULL"		5608623	1					
ANR	5608834	Identifier	NULL		5608623	0					
ANR	5608835	Expression	"logname , cluster , 0 , 0 , ( bool ) 0 , NULL"		5608623	1					
ANR	5608836	Identifier	logname		5608623	0					
ANR	5608837	Expression	"cluster , 0 , 0 , ( bool ) 0 , NULL"		5608623	1					
ANR	5608838	Identifier	cluster		5608623	0					
ANR	5608839	Expression	"0 , 0 , ( bool ) 0 , NULL"		5608623	1					
ANR	5608840	PrimaryExpression	0		5608623	0					
ANR	5608841	Expression	"0 , ( bool ) 0 , NULL"		5608623	1					
ANR	5608842	PrimaryExpression	0		5608623	0					
ANR	5608843	Expression	"( bool ) 0 , NULL"		5608623	1					
ANR	5608844	CastExpression	( bool ) 0		5608623	0					
ANR	5608845	CastTarget	bool		5608623	0					
ANR	5608846	PrimaryExpression	0		5608623	1					
ANR	5608847	Identifier	NULL		5608623	1					
ANR	5608848	ExpressionStatement	writeJobTerminatedEvent ( & log )	94:3:2732:2761	5608623	1	True				
ANR	5608849	CallExpression	writeJobTerminatedEvent ( & log )		5608623	0					
ANR	5608850	Callee	writeJobTerminatedEvent		5608623	0					
ANR	5608851	Identifier	writeJobTerminatedEvent		5608623	0					
ANR	5608852	ArgumentList	& log		5608623	1					
ANR	5608853	Argument	& log		5608623	0					
ANR	5608854	UnaryOperationExpression	& log		5608623	0					
ANR	5608855	UnaryOperator	&		5608623	0					
ANR	5608856	Identifier	log		5608623	1					
ANR	5608857	ExpressionStatement	exit ( 0 )	122:1:3439:3446	5608623	4	True				
ANR	5608858	CallExpression	exit ( 0 )		5608623	0					
ANR	5608859	Callee	exit		5608623	0					
ANR	5608860	Identifier	exit		5608623	0					
ANR	5608861	ArgumentList	0		5608623	1					
ANR	5608862	Argument	0		5608623	0					
ANR	5608863	PrimaryExpression	0		5608623	0					
ANR	5608864	ReturnType	int		5608623	1					
ANR	5608865	Identifier	main		5608623	2					
ANR	5608866	ParameterList	"int argc , char * * argv"		5608623	3					
ANR	5608867	Parameter	int argc	66:5:1866:1873	5608623	0	True				
ANR	5608868	ParameterType	int		5608623	0					
ANR	5608869	Identifier	argc		5608623	1					
ANR	5608870	Parameter	char * * argv	66:15:1876:1886	5608623	1	True				
ANR	5608871	ParameterType	char * *		5608623	0					
ANR	5608872	Identifier	argv		5608623	1					
ANR	5608873	CFGEntryNode	ENTRY		5608623		True				
ANR	5608874	CFGExitNode	EXIT		5608623		True				
ANR	5608875	Symbol	argc		5608623						
ANR	5608876	Symbol	atoi		5608623						
ANR	5608877	Symbol	strcmp		5608623						
ANR	5608878	Symbol	cluster		5608623						
ANR	5608879	Symbol	log		5608623						
ANR	5608880	Symbol	logname		5608623						
ANR	5608881	Symbol	count		5608623						
ANR	5608882	Symbol	* argv		5608623						
ANR	5608883	Symbol	argv		5608623						
ANR	5608884	Symbol	& log		5608623						
ANR	5608885	Function	writeSubmitEvent	125:0:3451:3762							
ANR	5608886	FunctionDef	writeSubmitEvent (WriteUserLog * log)		5608885	0					
ANR	5608887	CompoundStatement		126:0:3491:3762	5608885	0					
ANR	5608888	IdentifierDeclStatement	SubmitEvent submit ;	127:1:3494:3512	5608885	0	True				
ANR	5608889	IdentifierDecl	submit		5608885	0					
ANR	5608890	IdentifierDeclType	SubmitEvent		5608885	0					
ANR	5608891	Identifier	submit		5608885	1					
ANR	5608892	ExpressionStatement	"submit . setSubmitHost ( ""<128.105.165.12:32779>"" )"	128:1:3515:3561	5608885	1	True				
ANR	5608893	CallExpression	"submit . setSubmitHost ( ""<128.105.165.12:32779>"" )"		5608885	0					
ANR	5608894	Callee	submit . setSubmitHost		5608885	0					
ANR	5608895	MemberAccess	submit . setSubmitHost		5608885	0					
ANR	5608896	Identifier	submit		5608885	0					
ANR	5608897	Identifier	setSubmitHost		5608885	1					
ANR	5608898	ArgumentList	"""<128.105.165.12:32779>"""		5608885	1					
ANR	5608899	Argument	"""<128.105.165.12:32779>"""		5608885	0					
ANR	5608900	PrimaryExpression	"""<128.105.165.12:32779>"""		5608885	0					
ANR	5608901	ExpressionStatement	"submit . submitEventLogNotes = strdup ( ""DAGMan info"" )"	129:1:3564:3614	5608885	2	True				
ANR	5608902	AssignmentExpression	"submit . submitEventLogNotes = strdup ( ""DAGMan info"" )"		5608885	0		=			
ANR	5608903	MemberAccess	submit . submitEventLogNotes		5608885	0					
ANR	5608904	Identifier	submit		5608885	0					
ANR	5608905	Identifier	submitEventLogNotes		5608885	1					
ANR	5608906	CallExpression	"strdup ( ""DAGMan info"" )"		5608885	1					
ANR	5608907	Callee	strdup		5608885	0					
ANR	5608908	Identifier	strdup		5608885	0					
ANR	5608909	ArgumentList	"""DAGMan info"""		5608885	1					
ANR	5608910	Argument	"""DAGMan info"""		5608885	0					
ANR	5608911	PrimaryExpression	"""DAGMan info"""		5608885	0					
ANR	5608912	ExpressionStatement	"submit . submitEventUserNotes = strdup ( ""User info"" )"	130:1:3617:3666	5608885	3	True				
ANR	5608913	AssignmentExpression	"submit . submitEventUserNotes = strdup ( ""User info"" )"		5608885	0		=			
ANR	5608914	MemberAccess	submit . submitEventUserNotes		5608885	0					
ANR	5608915	Identifier	submit		5608885	0					
ANR	5608916	Identifier	submitEventUserNotes		5608885	1					
ANR	5608917	CallExpression	"strdup ( ""User info"" )"		5608885	1					
ANR	5608918	Callee	strdup		5608885	0					
ANR	5608919	Identifier	strdup		5608885	0					
ANR	5608920	ArgumentList	"""User info"""		5608885	1					
ANR	5608921	Argument	"""User info"""		5608885	0					
ANR	5608922	PrimaryExpression	"""User info"""		5608885	0					
ANR	5608923	IfStatement	if ( ! log -> writeEvent ( & submit ) )		5608885	4					
ANR	5608924	Condition	! log -> writeEvent ( & submit )	131:6:3674:3698	5608885	0	True				
ANR	5608925	UnaryOperationExpression	! log -> writeEvent ( & submit )		5608885	0					
ANR	5608926	UnaryOperator	!		5608885	0					
ANR	5608927	CallExpression	log -> writeEvent ( & submit )		5608885	1					
ANR	5608928	Callee	log -> writeEvent		5608885	0					
ANR	5608929	PtrMemberAccess	log -> writeEvent		5608885	0					
ANR	5608930	Identifier	log		5608885	0					
ANR	5608931	Identifier	writeEvent		5608885	1					
ANR	5608932	ArgumentList	& submit		5608885	1					
ANR	5608933	Argument	& submit		5608885	0					
ANR	5608934	UnaryOperationExpression	& submit		5608885	0					
ANR	5608935	UnaryOperator	&		5608885	0					
ANR	5608936	Identifier	submit		5608885	1					
ANR	5608937	CompoundStatement		6:34:210:210	5608885	1					
ANR	5608938	ExpressionStatement	"printf ( ""Bad submit write\\n"" )"	132:2:3706:3734	5608885	0	True				
ANR	5608939	CallExpression	"printf ( ""Bad submit write\\n"" )"		5608885	0					
ANR	5608940	Callee	printf		5608885	0					
ANR	5608941	Identifier	printf		5608885	0					
ANR	5608942	ArgumentList	"""Bad submit write\\n"""		5608885	1					
ANR	5608943	Argument	"""Bad submit write\\n"""		5608885	0					
ANR	5608944	PrimaryExpression	"""Bad submit write\\n"""		5608885	0					
ANR	5608945	ExpressionStatement	exit ( 1 )	133:2:3738:3745	5608885	1	True				
ANR	5608946	CallExpression	exit ( 1 )		5608885	0					
ANR	5608947	Callee	exit		5608885	0					
ANR	5608948	Identifier	exit		5608885	0					
ANR	5608949	ArgumentList	1		5608885	1					
ANR	5608950	Argument	1		5608885	0					
ANR	5608951	PrimaryExpression	1		5608885	0					
ANR	5608952	ReturnStatement	return ( 0 ) ;	135:1:3751:3760	5608885	5	True				
ANR	5608953	PrimaryExpression	0		5608885	0					
ANR	5608954	ReturnType	int		5608885	1					
ANR	5608955	Identifier	writeSubmitEvent		5608885	2					
ANR	5608956	ParameterList	WriteUserLog * log		5608885	3					
ANR	5608957	Parameter	WriteUserLog * log	125:21:3472:3488	5608885	0	True				
ANR	5608958	ParameterType	WriteUserLog *		5608885	0					
ANR	5608959	Identifier	log		5608885	1					
ANR	5608960	CFGEntryNode	ENTRY		5608885		True				
ANR	5608961	CFGExitNode	EXIT		5608885		True				
ANR	5608962	Symbol	submit . submitEventLogNotes		5608885						
ANR	5608963	Symbol	& submit		5608885						
ANR	5608964	Symbol	submit		5608885						
ANR	5608965	Symbol	log		5608885						
ANR	5608966	Symbol	log -> writeEvent		5608885						
ANR	5608967	Symbol	submit . submitEventUserNotes		5608885						
ANR	5608968	Symbol	strdup		5608885						
ANR	5608969	Symbol	* log		5608885						
ANR	5608970	Function	writeExecuteEvent	138:0:3765:3978							
ANR	5608971	FunctionDef	writeExecuteEvent (WriteUserLog * log)		5608970	0					
ANR	5608972	CompoundStatement		139:0:3806:3978	5608970	0					
ANR	5608973	IdentifierDeclStatement	ExecuteEvent execute ;	140:1:3809:3829	5608970	0	True				
ANR	5608974	IdentifierDecl	execute		5608970	0					
ANR	5608975	IdentifierDeclType	ExecuteEvent		5608970	0					
ANR	5608976	Identifier	execute		5608970	1					
ANR	5608977	ExpressionStatement	"execute . setExecuteHost ( ""<128.105.165.12:32779>"" )"	141:1:3832:3880	5608970	1	True				
ANR	5608978	CallExpression	"execute . setExecuteHost ( ""<128.105.165.12:32779>"" )"		5608970	0					
ANR	5608979	Callee	execute . setExecuteHost		5608970	0					
ANR	5608980	MemberAccess	execute . setExecuteHost		5608970	0					
ANR	5608981	Identifier	execute		5608970	0					
ANR	5608982	Identifier	setExecuteHost		5608970	1					
ANR	5608983	ArgumentList	"""<128.105.165.12:32779>"""		5608970	1					
ANR	5608984	Argument	"""<128.105.165.12:32779>"""		5608970	0					
ANR	5608985	PrimaryExpression	"""<128.105.165.12:32779>"""		5608970	0					
ANR	5608986	IfStatement	if ( ! log -> writeEvent ( & execute ) )		5608970	2					
ANR	5608987	Condition	! log -> writeEvent ( & execute )	142:6:3888:3913	5608970	0	True				
ANR	5608988	UnaryOperationExpression	! log -> writeEvent ( & execute )		5608970	0					
ANR	5608989	UnaryOperator	!		5608970	0					
ANR	5608990	CallExpression	log -> writeEvent ( & execute )		5608970	1					
ANR	5608991	Callee	log -> writeEvent		5608970	0					
ANR	5608992	PtrMemberAccess	log -> writeEvent		5608970	0					
ANR	5608993	Identifier	log		5608970	0					
ANR	5608994	Identifier	writeEvent		5608970	1					
ANR	5608995	ArgumentList	& execute		5608970	1					
ANR	5608996	Argument	& execute		5608970	0					
ANR	5608997	UnaryOperationExpression	& execute		5608970	0					
ANR	5608998	UnaryOperator	&		5608970	0					
ANR	5608999	Identifier	execute		5608970	1					
ANR	5609000	CompoundStatement		4:35:110:110	5608970	1					
ANR	5609001	ExpressionStatement	"printf ( ""Bad execute write\\n"" )"	143:2:3921:3950	5608970	0	True				
ANR	5609002	CallExpression	"printf ( ""Bad execute write\\n"" )"		5608970	0					
ANR	5609003	Callee	printf		5608970	0					
ANR	5609004	Identifier	printf		5608970	0					
ANR	5609005	ArgumentList	"""Bad execute write\\n"""		5608970	1					
ANR	5609006	Argument	"""Bad execute write\\n"""		5608970	0					
ANR	5609007	PrimaryExpression	"""Bad execute write\\n"""		5608970	0					
ANR	5609008	ExpressionStatement	exit ( 1 )	144:2:3954:3961	5608970	1	True				
ANR	5609009	CallExpression	exit ( 1 )		5608970	0					
ANR	5609010	Callee	exit		5608970	0					
ANR	5609011	Identifier	exit		5608970	0					
ANR	5609012	ArgumentList	1		5608970	1					
ANR	5609013	Argument	1		5608970	0					
ANR	5609014	PrimaryExpression	1		5608970	0					
ANR	5609015	ReturnStatement	return ( 0 ) ;	146:1:3967:3976	5608970	3	True				
ANR	5609016	PrimaryExpression	0		5608970	0					
ANR	5609017	ReturnType	int		5608970	1					
ANR	5609018	Identifier	writeExecuteEvent		5608970	2					
ANR	5609019	ParameterList	WriteUserLog * log		5608970	3					
ANR	5609020	Parameter	WriteUserLog * log	138:22:3787:3803	5608970	0	True				
ANR	5609021	ParameterType	WriteUserLog *		5608970	0					
ANR	5609022	Identifier	log		5608970	1					
ANR	5609023	CFGEntryNode	ENTRY		5608970		True				
ANR	5609024	CFGExitNode	EXIT		5608970		True				
ANR	5609025	Symbol	log		5608970						
ANR	5609026	Symbol	log -> writeEvent		5608970						
ANR	5609027	Symbol	& execute		5608970						
ANR	5609028	Symbol	execute		5608970						
ANR	5609029	Symbol	* log		5608970						
ANR	5609030	Function	writeJobTerminatedEvent	149:0:3981:4533							
ANR	5609031	FunctionDef	writeJobTerminatedEvent (WriteUserLog * log)		5609030	0					
ANR	5609032	CompoundStatement		150:0:4028:4533	5609030	0					
ANR	5609033	IdentifierDeclStatement	struct rusage ru ;	151:1:4031:4047	5609030	0	True				
ANR	5609034	IdentifierDecl	ru		5609030	0					
ANR	5609035	IdentifierDeclType	struct rusage		5609030	0					
ANR	5609036	Identifier	ru		5609030	1					
ANR	5609037	IdentifierDeclStatement	JobTerminatedEvent jobterminated ;	153:1:4051:4083	5609030	1	True				
ANR	5609038	IdentifierDecl	jobterminated		5609030	0					
ANR	5609039	IdentifierDeclType	JobTerminatedEvent		5609030	0					
ANR	5609040	Identifier	jobterminated		5609030	1					
ANR	5609041	ExpressionStatement	jobterminated . normal = true	154:1:4086:4113	5609030	2	True				
ANR	5609042	AssignmentExpression	jobterminated . normal = true		5609030	0		=			
ANR	5609043	MemberAccess	jobterminated . normal		5609030	0					
ANR	5609044	Identifier	jobterminated		5609030	0					
ANR	5609045	Identifier	normal		5609030	1					
ANR	5609046	Identifier	true		5609030	1					
ANR	5609047	ExpressionStatement	jobterminated . signalNumber = 0	155:1:4116:4146	5609030	3	True				
ANR	5609048	AssignmentExpression	jobterminated . signalNumber = 0		5609030	0		=			
ANR	5609049	MemberAccess	jobterminated . signalNumber		5609030	0					
ANR	5609050	Identifier	jobterminated		5609030	0					
ANR	5609051	Identifier	signalNumber		5609030	1					
ANR	5609052	PrimaryExpression	0		5609030	1					
ANR	5609053	ExpressionStatement	jobterminated . returnValue = 0	156:1:4149:4178	5609030	4	True				
ANR	5609054	AssignmentExpression	jobterminated . returnValue = 0		5609030	0		=			
ANR	5609055	MemberAccess	jobterminated . returnValue		5609030	0					
ANR	5609056	Identifier	jobterminated		5609030	0					
ANR	5609057	Identifier	returnValue		5609030	1					
ANR	5609058	PrimaryExpression	0		5609030	1					
ANR	5609059	ExpressionStatement	jobterminated . run_remote_rusage = ru	157:1:4181:4217	5609030	5	True				
ANR	5609060	AssignmentExpression	jobterminated . run_remote_rusage = ru		5609030	0		=			
ANR	5609061	MemberAccess	jobterminated . run_remote_rusage		5609030	0					
ANR	5609062	Identifier	jobterminated		5609030	0					
ANR	5609063	Identifier	run_remote_rusage		5609030	1					
ANR	5609064	Identifier	ru		5609030	1					
ANR	5609065	ExpressionStatement	jobterminated . total_remote_rusage = ru	158:1:4220:4258	5609030	6	True				
ANR	5609066	AssignmentExpression	jobterminated . total_remote_rusage = ru		5609030	0		=			
ANR	5609067	MemberAccess	jobterminated . total_remote_rusage		5609030	0					
ANR	5609068	Identifier	jobterminated		5609030	0					
ANR	5609069	Identifier	total_remote_rusage		5609030	1					
ANR	5609070	Identifier	ru		5609030	1					
ANR	5609071	ExpressionStatement	jobterminated . recvd_bytes = 200000	159:1:4261:4295	5609030	7	True				
ANR	5609072	AssignmentExpression	jobterminated . recvd_bytes = 200000		5609030	0		=			
ANR	5609073	MemberAccess	jobterminated . recvd_bytes		5609030	0					
ANR	5609074	Identifier	jobterminated		5609030	0					
ANR	5609075	Identifier	recvd_bytes		5609030	1					
ANR	5609076	PrimaryExpression	200000		5609030	1					
ANR	5609077	ExpressionStatement	jobterminated . sent_bytes = 400000	160:1:4298:4331	5609030	8	True				
ANR	5609078	AssignmentExpression	jobterminated . sent_bytes = 400000		5609030	0		=			
ANR	5609079	MemberAccess	jobterminated . sent_bytes		5609030	0					
ANR	5609080	Identifier	jobterminated		5609030	0					
ANR	5609081	Identifier	sent_bytes		5609030	1					
ANR	5609082	PrimaryExpression	400000		5609030	1					
ANR	5609083	ExpressionStatement	jobterminated . total_recvd_bytes = 800000	161:1:4334:4374	5609030	9	True				
ANR	5609084	AssignmentExpression	jobterminated . total_recvd_bytes = 800000		5609030	0		=			
ANR	5609085	MemberAccess	jobterminated . total_recvd_bytes		5609030	0					
ANR	5609086	Identifier	jobterminated		5609030	0					
ANR	5609087	Identifier	total_recvd_bytes		5609030	1					
ANR	5609088	PrimaryExpression	800000		5609030	1					
ANR	5609089	ExpressionStatement	jobterminated . total_sent_bytes = 900000	162:1:4377:4416	5609030	10	True				
ANR	5609090	AssignmentExpression	jobterminated . total_sent_bytes = 900000		5609030	0		=			
ANR	5609091	MemberAccess	jobterminated . total_sent_bytes		5609030	0					
ANR	5609092	Identifier	jobterminated		5609030	0					
ANR	5609093	Identifier	total_sent_bytes		5609030	1					
ANR	5609094	PrimaryExpression	900000		5609030	1					
ANR	5609095	IfStatement	if ( ! log -> writeEvent ( & jobterminated ) )		5609030	11					
ANR	5609096	Condition	! log -> writeEvent ( & jobterminated )	163:6:4424:4455	5609030	0	True				
ANR	5609097	UnaryOperationExpression	! log -> writeEvent ( & jobterminated )		5609030	0					
ANR	5609098	UnaryOperator	!		5609030	0					
ANR	5609099	CallExpression	log -> writeEvent ( & jobterminated )		5609030	1					
ANR	5609100	Callee	log -> writeEvent		5609030	0					
ANR	5609101	PtrMemberAccess	log -> writeEvent		5609030	0					
ANR	5609102	Identifier	log		5609030	0					
ANR	5609103	Identifier	writeEvent		5609030	1					
ANR	5609104	ArgumentList	& jobterminated		5609030	1					
ANR	5609105	Argument	& jobterminated		5609030	0					
ANR	5609106	UnaryOperationExpression	& jobterminated		5609030	0					
ANR	5609107	UnaryOperator	&		5609030	0					
ANR	5609108	Identifier	jobterminated		5609030	1					
ANR	5609109	CompoundStatement		14:41:430:430	5609030	1					
ANR	5609110	ExpressionStatement	"printf ( ""Bad jobterminate write\\n"" )"	164:9:4470:4504	5609030	0	True				
ANR	5609111	CallExpression	"printf ( ""Bad jobterminate write\\n"" )"		5609030	0					
ANR	5609112	Callee	printf		5609030	0					
ANR	5609113	Identifier	printf		5609030	0					
ANR	5609114	ArgumentList	"""Bad jobterminate write\\n"""		5609030	1					
ANR	5609115	Argument	"""Bad jobterminate write\\n"""		5609030	0					
ANR	5609116	PrimaryExpression	"""Bad jobterminate write\\n"""		5609030	0					
ANR	5609117	ExpressionStatement	exit ( 1 )	165:3:4509:4516	5609030	1	True				
ANR	5609118	CallExpression	exit ( 1 )		5609030	0					
ANR	5609119	Callee	exit		5609030	0					
ANR	5609120	Identifier	exit		5609030	0					
ANR	5609121	ArgumentList	1		5609030	1					
ANR	5609122	Argument	1		5609030	0					
ANR	5609123	PrimaryExpression	1		5609030	0					
ANR	5609124	ReturnStatement	return ( 0 ) ;	167:1:4522:4531	5609030	12	True				
ANR	5609125	PrimaryExpression	0		5609030	0					
ANR	5609126	ReturnType	int		5609030	1					
ANR	5609127	Identifier	writeJobTerminatedEvent		5609030	2					
ANR	5609128	ParameterList	WriteUserLog * log		5609030	3					
ANR	5609129	Parameter	WriteUserLog * log	149:28:4009:4025	5609030	0	True				
ANR	5609130	ParameterType	WriteUserLog *		5609030	0					
ANR	5609131	Identifier	log		5609030	1					
ANR	5609132	CFGEntryNode	ENTRY		5609030		True				
ANR	5609133	CFGExitNode	EXIT		5609030		True				
ANR	5609134	Symbol	jobterminated . signalNumber		5609030						
ANR	5609135	Symbol	ru		5609030						
ANR	5609136	Symbol	log		5609030						
ANR	5609137	Symbol	jobterminated . sent_bytes		5609030						
ANR	5609138	Symbol	jobterminated . run_remote_rusage		5609030						
ANR	5609139	Symbol	jobterminated . total_sent_bytes		5609030						
ANR	5609140	Symbol	jobterminated . normal		5609030						
ANR	5609141	Symbol	* log		5609030						
ANR	5609142	Symbol	jobterminated		5609030						
ANR	5609143	Symbol	jobterminated . recvd_bytes		5609030						
ANR	5609144	Symbol	true		5609030						
ANR	5609145	Symbol	log -> writeEvent		5609030						
ANR	5609146	Symbol	jobterminated . total_remote_rusage		5609030						
ANR	5609147	Symbol	jobterminated . total_recvd_bytes		5609030						
ANR	5609148	Symbol	& jobterminated		5609030						
ANR	5609149	Symbol	jobterminated . returnValue		5609030						
