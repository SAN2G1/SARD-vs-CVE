command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4853808	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_read_multiple_logs.cpp								
ANR	4853809	Function	ReadMultipleUserLogs :: ReadMultipleUserLogs	52:0:1529:1718							
ANR	4853810	FunctionDef	ReadMultipleUserLogs :: ReadMultipleUserLogs ()		4853809	0					
ANR	4853811	CompoundStatement		55:0:1716:1718	4853809	0					
ANR	4853812	Identifier	ReadMultipleUserLogs :: ReadMultipleUserLogs		4853809	1					
ANR	4853813	ParameterList			4853809	2					
ANR	4853814	CFGEntryNode	ENTRY		4853809		True				
ANR	4853815	CFGExitNode	EXIT		4853809		True				
ANR	4853816	Function	ReadMultipleUserLogs :: ~ReadMultipleUserLogs	60:0:1802:2044							
ANR	4853817	FunctionDef	ReadMultipleUserLogs :: ~ReadMultipleUserLogs ()		4853816	0					
ANR	4853818	CompoundStatement		61:0:1848:2044	4853816	0					
ANR	4853819	IfStatement	if ( activeLogFileCount ( ) != 0 )		4853816	0					
ANR	4853820	Condition	activeLogFileCount ( ) != 0	62:5:1855:1879	4853816	0	True				
ANR	4853821	EqualityExpression	activeLogFileCount ( ) != 0		4853816	0		!=			
ANR	4853822	CallExpression	activeLogFileCount ( )		4853816	0					
ANR	4853823	Callee	activeLogFileCount		4853816	0					
ANR	4853824	Identifier	activeLogFileCount		4853816	0					
ANR	4853825	ArgumentList			4853816	1					
ANR	4853826	PrimaryExpression	0		4853816	1					
ANR	4853827	CompoundStatement		2:32:33:33	4853816	1					
ANR	4853828	Statement	dprintf	63:5:1889:1895	4853816	0	True				
ANR	4853829	Statement	(	63:12:1896:1896	4853816	1	True				
ANR	4853830	Statement	D_ALWAYS	63:13:1897:1904	4853816	2	True				
ANR	4853831	Statement	","	63:21:1905:1905	4853816	3	True				
ANR	4853832	Statement	"""Warning: ReadMultipleUserLogs destructor """	63:23:1907:1949	4853816	4	True				
ANR	4853833	Statement	"""called, but still monitoring %d log(s)!\\n"""	64:5:1956:1998	4853816	5	True				
ANR	4853834	Statement	","	64:48:1999:1999	4853816	6	True				
ANR	4853835	Statement	activeLogFileCount	65:5:2006:2023	4853816	7	True				
ANR	4853836	Statement	(	65:23:2024:2024	4853816	8	True				
ANR	4853837	Statement	)	65:24:2025:2025	4853816	9	True				
ANR	4853838	Statement	)	65:25:2026:2026	4853816	10	True				
ANR	4853839	ExpressionStatement		65:26:2027:2027	4853816	11	True				
ANR	4853840	ExpressionStatement	cleanup ( )	67:1:2033:2042	4853816	1	True				
ANR	4853841	CallExpression	cleanup ( )		4853816	0					
ANR	4853842	Callee	cleanup		4853816	0					
ANR	4853843	Identifier	cleanup		4853816	0					
ANR	4853844	ArgumentList			4853816	1					
ANR	4853845	Identifier	ReadMultipleUserLogs :: ~ReadMultipleUserLogs		4853816	1					
ANR	4853846	ParameterList			4853816	2					
ANR	4853847	CFGEntryNode	ENTRY		4853816		True				
ANR	4853848	CFGExitNode	EXIT		4853816		True				
ANR	4853849	Symbol	activeLogFileCount		4853816						
ANR	4853850	Function	operator >	72:0:2128:2656							
ANR	4853851	FunctionDef	"operator > (const tm & lhs , const tm & rhs)"		4853850	0					
ANR	4853852	CompoundStatement		74:0:2173:2656	4853850	0					
ANR	4853853	IfStatement	if ( lhs . tm_year > rhs . tm_year )		4853850	0					
ANR	4853854	Condition	lhs . tm_year > rhs . tm_year	75:5:2180:2204	4853850	0	True				
ANR	4853855	RelationalExpression	lhs . tm_year > rhs . tm_year		4853850	0		>			
ANR	4853856	MemberAccess	lhs . tm_year		4853850	0					
ANR	4853857	Identifier	lhs		4853850	0					
ANR	4853858	Identifier	tm_year		4853850	1					
ANR	4853859	MemberAccess	rhs . tm_year		4853850	1					
ANR	4853860	Identifier	rhs		4853850	0					
ANR	4853861	Identifier	tm_year		4853850	1					
ANR	4853862	CompoundStatement		2:32:33:33	4853850	1					
ANR	4853863	ReturnStatement	return true ;	76:2:2211:2222	4853850	0	True				
ANR	4853864	Identifier	true		4853850	0					
ANR	4853865	IfStatement	if ( lhs . tm_year < rhs . tm_year )		4853850	1					
ANR	4853866	Condition	lhs . tm_year < rhs . tm_year	78:5:2232:2256	4853850	0	True				
ANR	4853867	RelationalExpression	lhs . tm_year < rhs . tm_year		4853850	0		<			
ANR	4853868	MemberAccess	lhs . tm_year		4853850	0					
ANR	4853869	Identifier	lhs		4853850	0					
ANR	4853870	Identifier	tm_year		4853850	1					
ANR	4853871	MemberAccess	rhs . tm_year		4853850	1					
ANR	4853872	Identifier	rhs		4853850	0					
ANR	4853873	Identifier	tm_year		4853850	1					
ANR	4853874	CompoundStatement		5:32:85:85	4853850	1					
ANR	4853875	ReturnStatement	return false ;	79:2:2263:2275	4853850	0	True				
ANR	4853876	Identifier	false		4853850	0					
ANR	4853877	IfStatement	if ( lhs . tm_yday > rhs . tm_yday )		4853850	2					
ANR	4853878	Condition	lhs . tm_yday > rhs . tm_yday	81:5:2285:2309	4853850	0	True				
ANR	4853879	RelationalExpression	lhs . tm_yday > rhs . tm_yday		4853850	0		>			
ANR	4853880	MemberAccess	lhs . tm_yday		4853850	0					
ANR	4853881	Identifier	lhs		4853850	0					
ANR	4853882	Identifier	tm_yday		4853850	1					
ANR	4853883	MemberAccess	rhs . tm_yday		4853850	1					
ANR	4853884	Identifier	rhs		4853850	0					
ANR	4853885	Identifier	tm_yday		4853850	1					
ANR	4853886	CompoundStatement		8:32:138:138	4853850	1					
ANR	4853887	ReturnStatement	return true ;	82:2:2316:2327	4853850	0	True				
ANR	4853888	Identifier	true		4853850	0					
ANR	4853889	IfStatement	if ( lhs . tm_yday < rhs . tm_yday )		4853850	3					
ANR	4853890	Condition	lhs . tm_yday < rhs . tm_yday	84:5:2337:2361	4853850	0	True				
ANR	4853891	RelationalExpression	lhs . tm_yday < rhs . tm_yday		4853850	0		<			
ANR	4853892	MemberAccess	lhs . tm_yday		4853850	0					
ANR	4853893	Identifier	lhs		4853850	0					
ANR	4853894	Identifier	tm_yday		4853850	1					
ANR	4853895	MemberAccess	rhs . tm_yday		4853850	1					
ANR	4853896	Identifier	rhs		4853850	0					
ANR	4853897	Identifier	tm_yday		4853850	1					
ANR	4853898	CompoundStatement		11:32:190:190	4853850	1					
ANR	4853899	ReturnStatement	return false ;	85:2:2368:2380	4853850	0	True				
ANR	4853900	Identifier	false		4853850	0					
ANR	4853901	IfStatement	if ( lhs . tm_hour > rhs . tm_hour )		4853850	4					
ANR	4853902	Condition	lhs . tm_hour > rhs . tm_hour	87:5:2390:2414	4853850	0	True				
ANR	4853903	RelationalExpression	lhs . tm_hour > rhs . tm_hour		4853850	0		>			
ANR	4853904	MemberAccess	lhs . tm_hour		4853850	0					
ANR	4853905	Identifier	lhs		4853850	0					
ANR	4853906	Identifier	tm_hour		4853850	1					
ANR	4853907	MemberAccess	rhs . tm_hour		4853850	1					
ANR	4853908	Identifier	rhs		4853850	0					
ANR	4853909	Identifier	tm_hour		4853850	1					
ANR	4853910	CompoundStatement		14:32:243:243	4853850	1					
ANR	4853911	ReturnStatement	return true ;	88:2:2421:2432	4853850	0	True				
ANR	4853912	Identifier	true		4853850	0					
ANR	4853913	IfStatement	if ( lhs . tm_hour < rhs . tm_hour )		4853850	5					
ANR	4853914	Condition	lhs . tm_hour < rhs . tm_hour	90:5:2442:2466	4853850	0	True				
ANR	4853915	RelationalExpression	lhs . tm_hour < rhs . tm_hour		4853850	0		<			
ANR	4853916	MemberAccess	lhs . tm_hour		4853850	0					
ANR	4853917	Identifier	lhs		4853850	0					
ANR	4853918	Identifier	tm_hour		4853850	1					
ANR	4853919	MemberAccess	rhs . tm_hour		4853850	1					
ANR	4853920	Identifier	rhs		4853850	0					
ANR	4853921	Identifier	tm_hour		4853850	1					
ANR	4853922	CompoundStatement		17:32:295:295	4853850	1					
ANR	4853923	ReturnStatement	return false ;	91:2:2473:2485	4853850	0	True				
ANR	4853924	Identifier	false		4853850	0					
ANR	4853925	IfStatement	if ( lhs . tm_min > rhs . tm_min )		4853850	6					
ANR	4853926	Condition	lhs . tm_min > rhs . tm_min	93:5:2495:2517	4853850	0	True				
ANR	4853927	RelationalExpression	lhs . tm_min > rhs . tm_min		4853850	0		>			
ANR	4853928	MemberAccess	lhs . tm_min		4853850	0					
ANR	4853929	Identifier	lhs		4853850	0					
ANR	4853930	Identifier	tm_min		4853850	1					
ANR	4853931	MemberAccess	rhs . tm_min		4853850	1					
ANR	4853932	Identifier	rhs		4853850	0					
ANR	4853933	Identifier	tm_min		4853850	1					
ANR	4853934	CompoundStatement		20:30:346:346	4853850	1					
ANR	4853935	ReturnStatement	return true ;	94:2:2524:2535	4853850	0	True				
ANR	4853936	Identifier	true		4853850	0					
ANR	4853937	IfStatement	if ( lhs . tm_min < rhs . tm_min )		4853850	7					
ANR	4853938	Condition	lhs . tm_min < rhs . tm_min	96:5:2545:2567	4853850	0	True				
ANR	4853939	RelationalExpression	lhs . tm_min < rhs . tm_min		4853850	0		<			
ANR	4853940	MemberAccess	lhs . tm_min		4853850	0					
ANR	4853941	Identifier	lhs		4853850	0					
ANR	4853942	Identifier	tm_min		4853850	1					
ANR	4853943	MemberAccess	rhs . tm_min		4853850	1					
ANR	4853944	Identifier	rhs		4853850	0					
ANR	4853945	Identifier	tm_min		4853850	1					
ANR	4853946	CompoundStatement		23:30:396:396	4853850	1					
ANR	4853947	ReturnStatement	return false ;	97:2:2574:2586	4853850	0	True				
ANR	4853948	Identifier	false		4853850	0					
ANR	4853949	IfStatement	if ( lhs . tm_sec > rhs . tm_sec )		4853850	8					
ANR	4853950	Condition	lhs . tm_sec > rhs . tm_sec	99:5:2596:2618	4853850	0	True				
ANR	4853951	RelationalExpression	lhs . tm_sec > rhs . tm_sec		4853850	0		>			
ANR	4853952	MemberAccess	lhs . tm_sec		4853850	0					
ANR	4853953	Identifier	lhs		4853850	0					
ANR	4853954	Identifier	tm_sec		4853850	1					
ANR	4853955	MemberAccess	rhs . tm_sec		4853850	1					
ANR	4853956	Identifier	rhs		4853850	0					
ANR	4853957	Identifier	tm_sec		4853850	1					
ANR	4853958	CompoundStatement		26:30:447:447	4853850	1					
ANR	4853959	ReturnStatement	return true ;	100:2:2625:2636	4853850	0	True				
ANR	4853960	Identifier	true		4853850	0					
ANR	4853961	ReturnStatement	return false ;	102:1:2642:2654	4853850	9	True				
ANR	4853962	Identifier	false		4853850	0					
ANR	4853963	ReturnType	bool		4853850	1					
ANR	4853964	Identifier	operator >		4853850	2					
ANR	4853965	ParameterList	"const tm & lhs , const tm & rhs"		4853850	3					
ANR	4853966	Parameter	const tm & lhs	73:10:2143:2155	4853850	0	True				
ANR	4853967	ParameterType	const tm &		4853850	0					
ANR	4853968	Identifier	lhs		4853850	1					
ANR	4853969	Parameter	const tm & rhs	73:25:2158:2170	4853850	1	True				
ANR	4853970	ParameterType	const tm &		4853850	0					
ANR	4853971	Identifier	rhs		4853850	1					
ANR	4853972	CFGEntryNode	ENTRY		4853850		True				
ANR	4853973	CFGExitNode	EXIT		4853850		True				
ANR	4853974	Symbol	lhs . tm_hour		4853850						
ANR	4853975	Symbol	lhs . tm_sec		4853850						
ANR	4853976	Symbol	lhs . tm_min		4853850						
ANR	4853977	Symbol	rhs . tm_year		4853850						
ANR	4853978	Symbol	false		4853850						
ANR	4853979	Symbol	rhs . tm_hour		4853850						
ANR	4853980	Symbol	rhs . tm_sec		4853850						
ANR	4853981	Symbol	rhs . tm_min		4853850						
ANR	4853982	Symbol	rhs . tm_yday		4853850						
ANR	4853983	Symbol	lhs		4853850						
ANR	4853984	Symbol	true		4853850						
ANR	4853985	Symbol	lhs . tm_yday		4853850						
ANR	4853986	Symbol	rhs		4853850						
ANR	4853987	Symbol	lhs . tm_year		4853850						
ANR	4853988	Function	ReadMultipleUserLogs :: readEvent	107:0:2740:4018							
ANR	4853989	FunctionDef	ReadMultipleUserLogs :: readEvent (ULogEvent * & event)		4853988	0					
ANR	4853990	CompoundStatement		109:0:2811:4018	4853988	0					
ANR	4853991	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""ReadMultipleUserLogs::readEvent()\\n"" )"	110:4:2817:2876	4853988	0	True				
ANR	4853992	CallExpression	"dprintf ( D_FULLDEBUG , ""ReadMultipleUserLogs::readEvent()\\n"" )"		4853988	0					
ANR	4853993	Callee	dprintf		4853988	0					
ANR	4853994	Identifier	dprintf		4853988	0					
ANR	4853995	ArgumentList	D_FULLDEBUG		4853988	1					
ANR	4853996	Argument	D_FULLDEBUG		4853988	0					
ANR	4853997	Identifier	D_FULLDEBUG		4853988	0					
ANR	4853998	Argument	"""ReadMultipleUserLogs::readEvent()\\n"""		4853988	1					
ANR	4853999	PrimaryExpression	"""ReadMultipleUserLogs::readEvent()\\n"""		4853988	0					
ANR	4854000	IdentifierDeclStatement	LogFileMonitor * oldestEventMon = NULL ;	112:1:2880:2917	4853988	1	True				
ANR	4854001	IdentifierDecl	* oldestEventMon = NULL		4853988	0					
ANR	4854002	IdentifierDeclType	LogFileMonitor *		4853988	0					
ANR	4854003	Identifier	oldestEventMon		4853988	1					
ANR	4854004	AssignmentExpression	* oldestEventMon = NULL		4853988	2		=			
ANR	4854005	Identifier	NULL		4853988	0					
ANR	4854006	Identifier	NULL		4853988	1					
ANR	4854007	ExpressionStatement	activeLogFiles . startIterations ( )	114:1:2921:2953	4853988	2	True				
ANR	4854008	CallExpression	activeLogFiles . startIterations ( )		4853988	0					
ANR	4854009	Callee	activeLogFiles . startIterations		4853988	0					
ANR	4854010	MemberAccess	activeLogFiles . startIterations		4853988	0					
ANR	4854011	Identifier	activeLogFiles		4853988	0					
ANR	4854012	Identifier	startIterations		4853988	1					
ANR	4854013	ArgumentList			4853988	1					
ANR	4854014	IdentifierDeclStatement	LogFileMonitor * monitor ;	115:1:2956:2979	4853988	3	True				
ANR	4854015	IdentifierDecl	* monitor		4853988	0					
ANR	4854016	IdentifierDeclType	LogFileMonitor *		4853988	0					
ANR	4854017	Identifier	monitor		4853988	1					
ANR	4854018	WhileStatement	while ( activeLogFiles . iterate ( monitor ) )		4853988	4					
ANR	4854019	Condition	activeLogFiles . iterate ( monitor )	116:9:2990:3022	4853988	0	True				
ANR	4854020	CallExpression	activeLogFiles . iterate ( monitor )		4853988	0					
ANR	4854021	Callee	activeLogFiles . iterate		4853988	0					
ANR	4854022	MemberAccess	activeLogFiles . iterate		4853988	0					
ANR	4854023	Identifier	activeLogFiles		4853988	0					
ANR	4854024	Identifier	iterate		4853988	1					
ANR	4854025	ArgumentList	monitor		4853988	1					
ANR	4854026	Argument	monitor		4853988	0					
ANR	4854027	Identifier	monitor		4853988	0					
ANR	4854028	CompoundStatement		9:2:218:252	4853988	1					
ANR	4854029	IdentifierDeclStatement	ULogEventOutcome outcome = ULOG_OK ;	117:2:3030:3064	4853988	0	True				
ANR	4854030	IdentifierDecl	outcome = ULOG_OK		4853988	0					
ANR	4854031	IdentifierDeclType	ULogEventOutcome		4853988	0					
ANR	4854032	Identifier	outcome		4853988	1					
ANR	4854033	AssignmentExpression	outcome = ULOG_OK		4853988	2		=			
ANR	4854034	Identifier	ULOG_OK		4853988	0					
ANR	4854035	Identifier	ULOG_OK		4853988	1					
ANR	4854036	IfStatement	if ( ! monitor -> lastLogEvent )		4853988	1					
ANR	4854037	Condition	! monitor -> lastLogEvent	121:7:3225:3246	4853988	0	True				
ANR	4854038	UnaryOperationExpression	! monitor -> lastLogEvent		4853988	0					
ANR	4854039	UnaryOperator	!		4853988	0					
ANR	4854040	PtrMemberAccess	monitor -> lastLogEvent		4853988	1					
ANR	4854041	Identifier	monitor		4853988	0					
ANR	4854042	Identifier	lastLogEvent		4853988	1					
ANR	4854043	CompoundStatement		13:32:438:438	4853988	1					
ANR	4854044	ExpressionStatement	outcome = readEventFromLog ( monitor )	122:3:3255:3292	4853988	0	True				
ANR	4854045	AssignmentExpression	outcome = readEventFromLog ( monitor )		4853988	0		=			
ANR	4854046	Identifier	outcome		4853988	0					
ANR	4854047	CallExpression	readEventFromLog ( monitor )		4853988	1					
ANR	4854048	Callee	readEventFromLog		4853988	0					
ANR	4854049	Identifier	readEventFromLog		4853988	0					
ANR	4854050	ArgumentList	monitor		4853988	1					
ANR	4854051	Argument	monitor		4853988	0					
ANR	4854052	Identifier	monitor		4853988	0					
ANR	4854053	IfStatement	if ( outcome == ULOG_RD_ERROR || outcome == ULOG_UNK_ERROR )		4853988	1					
ANR	4854054	Condition	outcome == ULOG_RD_ERROR || outcome == ULOG_UNK_ERROR	124:8:3303:3355	4853988	0	True				
ANR	4854055	OrExpression	outcome == ULOG_RD_ERROR || outcome == ULOG_UNK_ERROR		4853988	0		||			
ANR	4854056	EqualityExpression	outcome == ULOG_RD_ERROR		4853988	0		==			
ANR	4854057	Identifier	outcome		4853988	0					
ANR	4854058	Identifier	ULOG_RD_ERROR		4853988	1					
ANR	4854059	EqualityExpression	outcome == ULOG_UNK_ERROR		4853988	1		==			
ANR	4854060	Identifier	outcome		4853988	0					
ANR	4854061	Identifier	ULOG_UNK_ERROR		4853988	1					
ANR	4854062	CompoundStatement		16:64:547:547	4853988	1					
ANR	4854063	Statement	dprintf	128:4:3494:3500	4853988	0	True				
ANR	4854064	Statement	(	128:11:3501:3501	4853988	1	True				
ANR	4854065	Statement	D_ALWAYS	128:13:3503:3510	4853988	2	True				
ANR	4854066	Statement	","	128:21:3511:3511	4853988	3	True				
ANR	4854067	Statement	"""ReadMultipleUserLogs: read error """	128:23:3513:3547	4853988	4	True				
ANR	4854068	Statement	"""on log %s\\n"""	129:7:3556:3568	4853988	5	True				
ANR	4854069	Statement	","	129:20:3569:3569	4853988	6	True				
ANR	4854070	Statement	monitor	129:22:3571:3577	4853988	7	True				
ANR	4854071	Statement	->	129:29:3578:3579	4853988	8	True				
ANR	4854072	Statement	logFile	129:31:3580:3586	4853988	9	True				
ANR	4854073	Statement	.	129:38:3587:3587	4853988	10	True				
ANR	4854074	Statement	Value	129:39:3588:3592	4853988	11	True				
ANR	4854075	Statement	(	129:44:3593:3593	4853988	12	True				
ANR	4854076	Statement	)	129:45:3594:3594	4853988	13	True				
ANR	4854077	Statement	)	129:47:3596:3596	4853988	14	True				
ANR	4854078	ExpressionStatement		129:48:3597:3597	4853988	15	True				
ANR	4854079	ReturnStatement	return outcome ;	130:4:3603:3617	4853988	16	True				
ANR	4854080	Identifier	outcome		4853988	0					
ANR	4854081	IfStatement	if ( outcome != ULOG_NO_EVENT )		4853988	2					
ANR	4854082	Condition	outcome != ULOG_NO_EVENT	134:7:3636:3659	4853988	0	True				
ANR	4854083	EqualityExpression	outcome != ULOG_NO_EVENT		4853988	0		!=			
ANR	4854084	Identifier	outcome		4853988	0					
ANR	4854085	Identifier	ULOG_NO_EVENT		4853988	1					
ANR	4854086	CompoundStatement		26:34:851:851	4853988	1					
ANR	4854087	IfStatement	if ( oldestEventMon == NULL || ( oldestEventMon -> lastLogEvent -> eventTime > monitor -> lastLogEvent -> eventTime ) )		4853988	0					
ANR	4854088	Condition	oldestEventMon == NULL || ( oldestEventMon -> lastLogEvent -> eventTime > monitor -> lastLogEvent -> eventTime )	135:8:3673:3786	4853988	0	True				
ANR	4854089	OrExpression	oldestEventMon == NULL || ( oldestEventMon -> lastLogEvent -> eventTime > monitor -> lastLogEvent -> eventTime )		4853988	0		||			
ANR	4854090	EqualityExpression	oldestEventMon == NULL		4853988	0		==			
ANR	4854091	Identifier	oldestEventMon		4853988	0					
ANR	4854092	Identifier	NULL		4853988	1					
ANR	4854093	RelationalExpression	oldestEventMon -> lastLogEvent -> eventTime > monitor -> lastLogEvent -> eventTime		4853988	1		>			
ANR	4854094	PtrMemberAccess	oldestEventMon -> lastLogEvent -> eventTime		4853988	0					
ANR	4854095	PtrMemberAccess	oldestEventMon -> lastLogEvent		4853988	0					
ANR	4854096	Identifier	oldestEventMon		4853988	0					
ANR	4854097	Identifier	lastLogEvent		4853988	1					
ANR	4854098	Identifier	eventTime		4853988	1					
ANR	4854099	PtrMemberAccess	monitor -> lastLogEvent -> eventTime		4853988	1					
ANR	4854100	PtrMemberAccess	monitor -> lastLogEvent		4853988	0					
ANR	4854101	Identifier	monitor		4853988	0					
ANR	4854102	Identifier	lastLogEvent		4853988	1					
ANR	4854103	Identifier	eventTime		4853988	1					
ANR	4854104	CompoundStatement		29:42:978:978	4853988	1					
ANR	4854105	ExpressionStatement	oldestEventMon = monitor	138:4:3796:3820	4853988	0	True				
ANR	4854106	AssignmentExpression	oldestEventMon = monitor		4853988	0		=			
ANR	4854107	Identifier	oldestEventMon		4853988	0					
ANR	4854108	Identifier	monitor		4853988	1					
ANR	4854109	IfStatement	if ( oldestEventMon == NULL )		4853988	5					
ANR	4854110	Condition	oldestEventMon == NULL	143:6:3841:3862	4853988	0	True				
ANR	4854111	EqualityExpression	oldestEventMon == NULL		4853988	0		==			
ANR	4854112	Identifier	oldestEventMon		4853988	0					
ANR	4854113	Identifier	NULL		4853988	1					
ANR	4854114	CompoundStatement		35:31:1054:1054	4853988	1					
ANR	4854115	ReturnStatement	return ULOG_NO_EVENT ;	144:2:3870:3890	4853988	0	True				
ANR	4854116	Identifier	ULOG_NO_EVENT		4853988	0					
ANR	4854117	ExpressionStatement	event = oldestEventMon -> lastLogEvent	147:1:3897:3933	4853988	6	True				
ANR	4854118	AssignmentExpression	event = oldestEventMon -> lastLogEvent		4853988	0		=			
ANR	4854119	Identifier	event		4853988	0					
ANR	4854120	PtrMemberAccess	oldestEventMon -> lastLogEvent		4853988	1					
ANR	4854121	Identifier	oldestEventMon		4853988	0					
ANR	4854122	Identifier	lastLogEvent		4853988	1					
ANR	4854123	ExpressionStatement	oldestEventMon -> lastLogEvent = NULL	148:1:3936:3971	4853988	7	True				
ANR	4854124	AssignmentExpression	oldestEventMon -> lastLogEvent = NULL		4853988	0		=			
ANR	4854125	PtrMemberAccess	oldestEventMon -> lastLogEvent		4853988	0					
ANR	4854126	Identifier	oldestEventMon		4853988	0					
ANR	4854127	Identifier	lastLogEvent		4853988	1					
ANR	4854128	Identifier	NULL		4853988	1					
ANR	4854129	ReturnStatement	return ULOG_OK ;	150:1:4002:4016	4853988	8	True				
ANR	4854130	Identifier	ULOG_OK		4853988	0					
ANR	4854131	ReturnType	ULogEventOutcome		4853988	1					
ANR	4854132	Identifier	ReadMultipleUserLogs :: readEvent		4853988	2					
ANR	4854133	ParameterList	ULogEvent * & event		4853988	3					
ANR	4854134	Parameter	ULogEvent * & event	108:33:2790:2808	4853988	0	True				
ANR	4854135	ParameterType	ULogEvent * &		4853988	0					
ANR	4854136	Identifier	event		4853988	1					
ANR	4854137	CFGEntryNode	ENTRY		4853988		True				
ANR	4854138	CFGExitNode	EXIT		4853988		True				
ANR	4854139	Symbol	* monitor -> lastLogEvent		4853988						
ANR	4854140	Symbol	ULOG_NO_EVENT		4853988						
ANR	4854141	Symbol	NULL		4853988						
ANR	4854142	Symbol	activeLogFiles . iterate		4853988						
ANR	4854143	Symbol	ULOG_RD_ERROR		4853988						
ANR	4854144	Symbol	* oldestEventMon -> lastLogEvent		4853988						
ANR	4854145	Symbol	readEventFromLog		4853988						
ANR	4854146	Symbol	D_FULLDEBUG		4853988						
ANR	4854147	Symbol	monitor		4853988						
ANR	4854148	Symbol	ULOG_UNK_ERROR		4853988						
ANR	4854149	Symbol	* * monitor		4853988						
ANR	4854150	Symbol	activeLogFiles		4853988						
ANR	4854151	Symbol	oldestEventMon -> lastLogEvent		4853988						
ANR	4854152	Symbol	oldestEventMon		4853988						
ANR	4854153	Symbol	ULOG_OK		4853988						
ANR	4854154	Symbol	oldestEventMon -> lastLogEvent -> eventTime		4853988						
ANR	4854155	Symbol	* monitor		4853988						
ANR	4854156	Symbol	monitor -> lastLogEvent		4853988						
ANR	4854157	Symbol	monitor -> lastLogEvent -> eventTime		4853988						
ANR	4854158	Symbol	* * oldestEventMon		4853988						
ANR	4854159	Symbol	event		4853988						
ANR	4854160	Symbol	outcome		4853988						
ANR	4854161	Symbol	* oldestEventMon		4853988						
ANR	4854162	Function	ReadMultipleUserLogs :: detectLogGrowth	155:0:4102:4658							
ANR	4854163	FunctionDef	ReadMultipleUserLogs :: detectLogGrowth ()		4854162	0					
ANR	4854164	CompoundStatement		157:0:4147:4658	4854162	0					
ANR	4854165	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""ReadMultipleUserLogs::detectLogGrowth()\\n"" )"	158:4:4153:4220	4854162	0	True				
ANR	4854166	CallExpression	"dprintf ( D_FULLDEBUG , ""ReadMultipleUserLogs::detectLogGrowth()\\n"" )"		4854162	0					
ANR	4854167	Callee	dprintf		4854162	0					
ANR	4854168	Identifier	dprintf		4854162	0					
ANR	4854169	ArgumentList	D_FULLDEBUG		4854162	1					
ANR	4854170	Argument	D_FULLDEBUG		4854162	0					
ANR	4854171	Identifier	D_FULLDEBUG		4854162	0					
ANR	4854172	Argument	"""ReadMultipleUserLogs::detectLogGrowth()\\n"""		4854162	1					
ANR	4854173	PrimaryExpression	"""ReadMultipleUserLogs::detectLogGrowth()\\n"""		4854162	0					
ANR	4854174	IdentifierDeclStatement	bool grew = false ;	160:1:4224:4241	4854162	1	True				
ANR	4854175	IdentifierDecl	grew = false		4854162	0					
ANR	4854176	IdentifierDeclType	bool		4854162	0					
ANR	4854177	Identifier	grew		4854162	1					
ANR	4854178	AssignmentExpression	grew = false		4854162	2		=			
ANR	4854179	Identifier	false		4854162	0					
ANR	4854180	Identifier	false		4854162	1					
ANR	4854181	ExpressionStatement	activeLogFiles . startIterations ( )	166:1:4474:4506	4854162	2	True				
ANR	4854182	CallExpression	activeLogFiles . startIterations ( )		4854162	0					
ANR	4854183	Callee	activeLogFiles . startIterations		4854162	0					
ANR	4854184	MemberAccess	activeLogFiles . startIterations		4854162	0					
ANR	4854185	Identifier	activeLogFiles		4854162	0					
ANR	4854186	Identifier	startIterations		4854162	1					
ANR	4854187	ArgumentList			4854162	1					
ANR	4854188	IdentifierDeclStatement	LogFileMonitor * monitor ;	167:1:4509:4532	4854162	3	True				
ANR	4854189	IdentifierDecl	* monitor		4854162	0					
ANR	4854190	IdentifierDeclType	LogFileMonitor *		4854162	0					
ANR	4854191	Identifier	monitor		4854162	1					
ANR	4854192	WhileStatement	while ( activeLogFiles . iterate ( monitor ) )		4854162	4					
ANR	4854193	Condition	activeLogFiles . iterate ( monitor )	168:9:4543:4575	4854162	0	True				
ANR	4854194	CallExpression	activeLogFiles . iterate ( monitor )		4854162	0					
ANR	4854195	Callee	activeLogFiles . iterate		4854162	0					
ANR	4854196	MemberAccess	activeLogFiles . iterate		4854162	0					
ANR	4854197	Identifier	activeLogFiles		4854162	0					
ANR	4854198	Identifier	iterate		4854162	1					
ANR	4854199	ArgumentList	monitor		4854162	1					
ANR	4854200	Argument	monitor		4854162	0					
ANR	4854201	Identifier	monitor		4854162	0					
ANR	4854202	CompoundStatement		12:45:431:431	4854162	1					
ANR	4854203	IfStatement	if ( LogGrew ( monitor ) )		4854162	0					
ANR	4854204	Condition	LogGrew ( monitor )	169:10:4591:4608	4854162	0	True				
ANR	4854205	CallExpression	LogGrew ( monitor )		4854162	0					
ANR	4854206	Callee	LogGrew		4854162	0					
ANR	4854207	Identifier	LogGrew		4854162	0					
ANR	4854208	ArgumentList	monitor		4854162	1					
ANR	4854209	Argument	monitor		4854162	0					
ANR	4854210	Identifier	monitor		4854162	0					
ANR	4854211	CompoundStatement		13:31:464:464	4854162	1					
ANR	4854212	ExpressionStatement	grew = true	170:6:4620:4631	4854162	0	True				
ANR	4854213	AssignmentExpression	grew = true		4854162	0		=			
ANR	4854214	Identifier	grew		4854162	0					
ANR	4854215	Identifier	true		4854162	1					
ANR	4854216	ReturnStatement	return grew ;	174:4:4645:4656	4854162	5	True				
ANR	4854217	Identifier	grew		4854162	0					
ANR	4854218	ReturnType	bool		4854162	1					
ANR	4854219	Identifier	ReadMultipleUserLogs :: detectLogGrowth		4854162	2					
ANR	4854220	ParameterList			4854162	3					
ANR	4854221	CFGEntryNode	ENTRY		4854162		True				
ANR	4854222	CFGExitNode	EXIT		4854162		True				
ANR	4854223	Symbol	LogGrew		4854162						
ANR	4854224	Symbol	activeLogFiles . iterate		4854162						
ANR	4854225	Symbol	false		4854162						
ANR	4854226	Symbol	true		4854162						
ANR	4854227	Symbol	D_FULLDEBUG		4854162						
ANR	4854228	Symbol	monitor		4854162						
ANR	4854229	Symbol	grew		4854162						
ANR	4854230	Symbol	activeLogFiles		4854162						
ANR	4854231	Function	ReadMultipleUserLogs :: totalLogFileCount	179:0:4742:4834							
ANR	4854232	FunctionDef	ReadMultipleUserLogs :: totalLogFileCount ()		4854231	0					
ANR	4854233	CompoundStatement		181:0:4794:4834	4854231	0					
ANR	4854234	ReturnStatement	return allLogFiles . getNumElements ( ) ;	182:1:4797:4832	4854231	0	True				
ANR	4854235	CallExpression	allLogFiles . getNumElements ( )		4854231	0					
ANR	4854236	Callee	allLogFiles . getNumElements		4854231	0					
ANR	4854237	MemberAccess	allLogFiles . getNumElements		4854231	0					
ANR	4854238	Identifier	allLogFiles		4854231	0					
ANR	4854239	Identifier	getNumElements		4854231	1					
ANR	4854240	ArgumentList			4854231	1					
ANR	4854241	ReturnType	int		4854231	1					
ANR	4854242	Identifier	ReadMultipleUserLogs :: totalLogFileCount		4854231	2					
ANR	4854243	ParameterList			4854231	3					
ANR	4854244	CFGEntryNode	ENTRY		4854231		True				
ANR	4854245	CFGExitNode	EXIT		4854231		True				
ANR	4854246	Symbol	allLogFiles . getNumElements		4854231						
ANR	4854247	Symbol	allLogFiles		4854231						
ANR	4854248	Function	MultiLogFiles :: InitializeFile	187:0:4918:5750							
ANR	4854249	FunctionDef	"MultiLogFiles :: InitializeFile (const char * filename , bool truncate , CondorError & errstack)"		4854248	0					
ANR	4854250	CompoundStatement		190:0:5016:5750	4854248	0					
ANR	4854251	ExpressionStatement	"dprintf ( D_LOG_FILES , ""MultiLogFiles::InitializeFile(%s, %d)\\n"" , filename , ( int ) truncate )"	191:1:5019:5113	4854248	0	True				
ANR	4854252	CallExpression	"dprintf ( D_LOG_FILES , ""MultiLogFiles::InitializeFile(%s, %d)\\n"" , filename , ( int ) truncate )"		4854248	0					
ANR	4854253	Callee	dprintf		4854248	0					
ANR	4854254	Identifier	dprintf		4854248	0					
ANR	4854255	ArgumentList	D_LOG_FILES		4854248	1					
ANR	4854256	Argument	D_LOG_FILES		4854248	0					
ANR	4854257	Identifier	D_LOG_FILES		4854248	0					
ANR	4854258	Argument	"""MultiLogFiles::InitializeFile(%s, %d)\\n"""		4854248	1					
ANR	4854259	PrimaryExpression	"""MultiLogFiles::InitializeFile(%s, %d)\\n"""		4854248	0					
ANR	4854260	Argument	filename		4854248	2					
ANR	4854261	Identifier	filename		4854248	0					
ANR	4854262	Argument	( int ) truncate		4854248	3					
ANR	4854263	CastExpression	( int ) truncate		4854248	0					
ANR	4854264	CastTarget	int		4854248	0					
ANR	4854265	Identifier	truncate		4854248	1					
ANR	4854266	IdentifierDeclStatement	int flags = O_WRONLY ;	194:1:5117:5137	4854248	1	True				
ANR	4854267	IdentifierDecl	flags = O_WRONLY		4854248	0					
ANR	4854268	IdentifierDeclType	int		4854248	0					
ANR	4854269	Identifier	flags		4854248	1					
ANR	4854270	AssignmentExpression	flags = O_WRONLY		4854248	2		=			
ANR	4854271	Identifier	O_WRONLY		4854248	0					
ANR	4854272	Identifier	O_WRONLY		4854248	1					
ANR	4854273	IfStatement	if ( truncate )		4854248	2					
ANR	4854274	Condition	truncate	195:6:5145:5152	4854248	0	True				
ANR	4854275	Identifier	truncate		4854248	0					
ANR	4854276	CompoundStatement		6:17:139:139	4854248	1					
ANR	4854277	ExpressionStatement	flags |= O_TRUNC	196:2:5160:5176	4854248	0	True				
ANR	4854278	AssignmentExpression	flags |= O_TRUNC		4854248	0		|=			
ANR	4854279	Identifier	flags		4854248	0					
ANR	4854280	Identifier	O_TRUNC		4854248	1					
ANR	4854281	ExpressionStatement	"dprintf ( D_ALWAYS , ""MultiLogFiles: truncating log file %s\\n"" , filename )"	197:2:5180:5257	4854248	1	True				
ANR	4854282	CallExpression	"dprintf ( D_ALWAYS , ""MultiLogFiles: truncating log file %s\\n"" , filename )"		4854248	0					
ANR	4854283	Callee	dprintf		4854248	0					
ANR	4854284	Identifier	dprintf		4854248	0					
ANR	4854285	ArgumentList	D_ALWAYS		4854248	1					
ANR	4854286	Argument	D_ALWAYS		4854248	0					
ANR	4854287	Identifier	D_ALWAYS		4854248	0					
ANR	4854288	Argument	"""MultiLogFiles: truncating log file %s\\n"""		4854248	1					
ANR	4854289	PrimaryExpression	"""MultiLogFiles: truncating log file %s\\n"""		4854248	0					
ANR	4854290	Argument	filename		4854248	2					
ANR	4854291	Identifier	filename		4854248	0					
ANR	4854292	IdentifierDeclStatement	"int fd = safe_create_keep_if_exists ( filename , flags ) ;"	200:1:5263:5317	4854248	3	True				
ANR	4854293	IdentifierDecl	"fd = safe_create_keep_if_exists ( filename , flags )"		4854248	0					
ANR	4854294	IdentifierDeclType	int		4854248	0					
ANR	4854295	Identifier	fd		4854248	1					
ANR	4854296	AssignmentExpression	"fd = safe_create_keep_if_exists ( filename , flags )"		4854248	2		=			
ANR	4854297	Identifier	fd		4854248	0					
ANR	4854298	CallExpression	"safe_create_keep_if_exists ( filename , flags )"		4854248	1					
ANR	4854299	Callee	safe_create_keep_if_exists		4854248	0					
ANR	4854300	Identifier	safe_create_keep_if_exists		4854248	0					
ANR	4854301	ArgumentList	filename		4854248	1					
ANR	4854302	Argument	filename		4854248	0					
ANR	4854303	Identifier	filename		4854248	0					
ANR	4854304	Argument	flags		4854248	1					
ANR	4854305	Identifier	flags		4854248	0					
ANR	4854306	IfStatement	if ( fd < 0 )		4854248	4					
ANR	4854307	Condition	fd < 0	201:6:5325:5330	4854248	0	True				
ANR	4854308	RelationalExpression	fd < 0		4854248	0		<			
ANR	4854309	Identifier	fd		4854248	0					
ANR	4854310	PrimaryExpression	0		4854248	1					
ANR	4854311	CompoundStatement		12:15:317:317	4854248	1					
ANR	4854312	Statement	errstack	202:2:5338:5345	4854248	0	True				
ANR	4854313	Statement	.	202:10:5346:5346	4854248	1	True				
ANR	4854314	Statement	pushf	202:11:5347:5351	4854248	2	True				
ANR	4854315	Statement	(	202:16:5352:5352	4854248	3	True				
ANR	4854316	Statement	"""MultiLogFiles"""	202:17:5353:5367	4854248	4	True				
ANR	4854317	Statement	","	202:32:5368:5368	4854248	5	True				
ANR	4854318	Statement	UTIL_ERR_OPEN_FILE	202:34:5370:5387	4854248	6	True				
ANR	4854319	Statement	","	202:52:5388:5388	4854248	7	True				
ANR	4854320	Statement	"""Error (%d, %s) opening file %s for creation """	203:5:5395:5440	4854248	8	True				
ANR	4854321	Statement	"""or truncation"""	204:5:5447:5461	4854248	9	True				
ANR	4854322	Statement	","	204:20:5462:5462	4854248	10	True				
ANR	4854323	Statement	errno	204:22:5464:5468	4854248	11	True				
ANR	4854324	Statement	","	204:27:5469:5469	4854248	12	True				
ANR	4854325	Statement	strerror	204:29:5471:5478	4854248	13	True				
ANR	4854326	Statement	(	204:37:5479:5479	4854248	14	True				
ANR	4854327	Statement	errno	204:39:5481:5485	4854248	15	True				
ANR	4854328	Statement	)	204:45:5487:5487	4854248	16	True				
ANR	4854329	Statement	","	204:46:5488:5488	4854248	17	True				
ANR	4854330	Statement	filename	204:48:5490:5497	4854248	18	True				
ANR	4854331	Statement	)	204:57:5499:5499	4854248	19	True				
ANR	4854332	ExpressionStatement		204:58:5500:5500	4854248	20	True				
ANR	4854333	ReturnStatement	return false ;	205:2:5504:5516	4854248	21	True				
ANR	4854334	Identifier	false		4854248	0					
ANR	4854335	IfStatement	if ( close ( fd ) != 0 )		4854248	5					
ANR	4854336	Condition	close ( fd ) != 0	208:6:5528:5543	4854248	0	True				
ANR	4854337	EqualityExpression	close ( fd ) != 0		4854248	0		!=			
ANR	4854338	CallExpression	close ( fd )		4854248	0					
ANR	4854339	Callee	close		4854248	0					
ANR	4854340	Identifier	close		4854248	0					
ANR	4854341	ArgumentList	fd		4854248	1					
ANR	4854342	Argument	fd		4854248	0					
ANR	4854343	Identifier	fd		4854248	0					
ANR	4854344	PrimaryExpression	0		4854248	1					
ANR	4854345	CompoundStatement		19:25:530:530	4854248	1					
ANR	4854346	Statement	errstack	209:2:5551:5558	4854248	0	True				
ANR	4854347	Statement	.	209:10:5559:5559	4854248	1	True				
ANR	4854348	Statement	pushf	209:11:5560:5564	4854248	2	True				
ANR	4854349	Statement	(	209:16:5565:5565	4854248	3	True				
ANR	4854350	Statement	"""MultiLogFiles"""	209:17:5566:5580	4854248	4	True				
ANR	4854351	Statement	","	209:32:5581:5581	4854248	5	True				
ANR	4854352	Statement	UTIL_ERR_CLOSE_FILE	209:34:5583:5601	4854248	6	True				
ANR	4854353	Statement	","	209:53:5602:5602	4854248	7	True				
ANR	4854354	Statement	"""Error (%d, %s) closing file %s for creation """	210:5:5609:5654	4854248	8	True				
ANR	4854355	Statement	"""or truncation"""	211:5:5661:5675	4854248	9	True				
ANR	4854356	Statement	","	211:20:5676:5676	4854248	10	True				
ANR	4854357	Statement	errno	211:22:5678:5682	4854248	11	True				
ANR	4854358	Statement	","	211:27:5683:5683	4854248	12	True				
ANR	4854359	Statement	strerror	211:29:5685:5692	4854248	13	True				
ANR	4854360	Statement	(	211:37:5693:5693	4854248	14	True				
ANR	4854361	Statement	errno	211:39:5695:5699	4854248	15	True				
ANR	4854362	Statement	)	211:45:5701:5701	4854248	16	True				
ANR	4854363	Statement	","	211:46:5702:5702	4854248	17	True				
ANR	4854364	Statement	filename	211:48:5704:5711	4854248	18	True				
ANR	4854365	Statement	)	211:57:5713:5713	4854248	19	True				
ANR	4854366	ExpressionStatement		211:58:5714:5714	4854248	20	True				
ANR	4854367	ReturnStatement	return false ;	212:2:5718:5730	4854248	21	True				
ANR	4854368	Identifier	false		4854248	0					
ANR	4854369	ReturnStatement	return true ;	215:1:5737:5748	4854248	6	True				
ANR	4854370	Identifier	true		4854248	0					
ANR	4854371	ReturnType	bool		4854248	1					
ANR	4854372	Identifier	MultiLogFiles :: InitializeFile		4854248	2					
ANR	4854373	ParameterList	"const char * filename , bool truncate , CondorError & errstack"		4854248	3					
ANR	4854374	Parameter	const char * filename	188:30:4953:4972	4854248	0	True				
ANR	4854375	ParameterType	const char *		4854248	0					
ANR	4854376	Identifier	filename		4854248	1					
ANR	4854377	Parameter	bool truncate	188:52:4975:4987	4854248	1	True				
ANR	4854378	ParameterType	bool		4854248	0					
ANR	4854379	Identifier	truncate		4854248	1					
ANR	4854380	Parameter	CondorError & errstack	189:3:4993:5013	4854248	2	True				
ANR	4854381	ParameterType	CondorError &		4854248	0					
ANR	4854382	Identifier	errstack		4854248	1					
ANR	4854383	CFGEntryNode	ENTRY		4854248		True				
ANR	4854384	CFGExitNode	EXIT		4854248		True				
ANR	4854385	Symbol	D_LOG_FILES		4854248						
ANR	4854386	Symbol	safe_create_keep_if_exists		4854248						
ANR	4854387	Symbol	flags		4854248						
ANR	4854388	Symbol	D_ALWAYS		4854248						
ANR	4854389	Symbol	false		4854248						
ANR	4854390	Symbol	O_TRUNC		4854248						
ANR	4854391	Symbol	filename		4854248						
ANR	4854392	Symbol	errstack		4854248						
ANR	4854393	Symbol	truncate		4854248						
ANR	4854394	Symbol	true		4854248						
ANR	4854395	Symbol	O_WRONLY		4854248						
ANR	4854396	Symbol	close		4854248						
ANR	4854397	Symbol	fd		4854248						
ANR	4854398	Function	ReadMultipleUserLogs :: cleanup	220:0:5834:6044							
ANR	4854399	FunctionDef	ReadMultipleUserLogs :: cleanup ()		4854398	0					
ANR	4854400	CompoundStatement		222:0:5871:6044	4854398	0					
ANR	4854401	ExpressionStatement	activeLogFiles . clear ( )	223:1:5874:5896	4854398	0	True				
ANR	4854402	CallExpression	activeLogFiles . clear ( )		4854398	0					
ANR	4854403	Callee	activeLogFiles . clear		4854398	0					
ANR	4854404	MemberAccess	activeLogFiles . clear		4854398	0					
ANR	4854405	Identifier	activeLogFiles		4854398	0					
ANR	4854406	Identifier	clear		4854398	1					
ANR	4854407	ArgumentList			4854398	1					
ANR	4854408	ExpressionStatement	allLogFiles . startIterations ( )	225:1:5900:5929	4854398	1	True				
ANR	4854409	CallExpression	allLogFiles . startIterations ( )		4854398	0					
ANR	4854410	Callee	allLogFiles . startIterations		4854398	0					
ANR	4854411	MemberAccess	allLogFiles . startIterations		4854398	0					
ANR	4854412	Identifier	allLogFiles		4854398	0					
ANR	4854413	Identifier	startIterations		4854398	1					
ANR	4854414	ArgumentList			4854398	1					
ANR	4854415	IdentifierDeclStatement	LogFileMonitor * monitor ;	226:1:5932:5955	4854398	2	True				
ANR	4854416	IdentifierDecl	* monitor		4854398	0					
ANR	4854417	IdentifierDeclType	LogFileMonitor *		4854398	0					
ANR	4854418	Identifier	monitor		4854398	1					
ANR	4854419	WhileStatement	while ( allLogFiles . iterate ( monitor ) )		4854398	3					
ANR	4854420	Condition	allLogFiles . iterate ( monitor )	227:9:5966:5995	4854398	0	True				
ANR	4854421	CallExpression	allLogFiles . iterate ( monitor )		4854398	0					
ANR	4854422	Callee	allLogFiles . iterate		4854398	0					
ANR	4854423	MemberAccess	allLogFiles . iterate		4854398	0					
ANR	4854424	Identifier	allLogFiles		4854398	0					
ANR	4854425	Identifier	iterate		4854398	1					
ANR	4854426	ArgumentList	monitor		4854398	1					
ANR	4854427	Argument	monitor		4854398	0					
ANR	4854428	Identifier	monitor		4854398	0					
ANR	4854429	CompoundStatement		6:42:127:127	4854398	1					
ANR	4854430	Statement	delete	228:2:6003:6008	4854398	0	True				
ANR	4854431	ExpressionStatement	monitor	228:9:6010:6017	4854398	1	True				
ANR	4854432	Identifier	monitor		4854398	0					
ANR	4854433	ExpressionStatement	allLogFiles . clear ( )	230:1:6023:6042	4854398	4	True				
ANR	4854434	CallExpression	allLogFiles . clear ( )		4854398	0					
ANR	4854435	Callee	allLogFiles . clear		4854398	0					
ANR	4854436	MemberAccess	allLogFiles . clear		4854398	0					
ANR	4854437	Identifier	allLogFiles		4854398	0					
ANR	4854438	Identifier	clear		4854398	1					
ANR	4854439	ArgumentList			4854398	1					
ANR	4854440	ReturnType	void		4854398	1					
ANR	4854441	Identifier	ReadMultipleUserLogs :: cleanup		4854398	2					
ANR	4854442	ParameterList			4854398	3					
ANR	4854443	CFGEntryNode	ENTRY		4854398		True				
ANR	4854444	CFGExitNode	EXIT		4854398		True				
ANR	4854445	Symbol	allLogFiles . iterate		4854398						
ANR	4854446	Symbol	allLogFiles		4854398						
ANR	4854447	Symbol	monitor		4854398						
ANR	4854448	Symbol	activeLogFiles		4854398						
ANR	4854449	Function	ReadMultipleUserLogs :: LogGrew	235:0:6128:6755							
ANR	4854450	FunctionDef	ReadMultipleUserLogs :: LogGrew (LogFileMonitor * monitor)		4854449	0					
ANR	4854451	CompoundStatement		237:0:6190:6755	4854449	0					
ANR	4854452	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""ReadMultipleUserLogs::LogGrew(%s)\\n"" , monitor -> logFile . Value ( ) )"	238:4:6196:6287	4854449	0	True				
ANR	4854453	CallExpression	"dprintf ( D_FULLDEBUG , ""ReadMultipleUserLogs::LogGrew(%s)\\n"" , monitor -> logFile . Value ( ) )"		4854449	0					
ANR	4854454	Callee	dprintf		4854449	0					
ANR	4854455	Identifier	dprintf		4854449	0					
ANR	4854456	ArgumentList	D_FULLDEBUG		4854449	1					
ANR	4854457	Argument	D_FULLDEBUG		4854449	0					
ANR	4854458	Identifier	D_FULLDEBUG		4854449	0					
ANR	4854459	Argument	"""ReadMultipleUserLogs::LogGrew(%s)\\n"""		4854449	1					
ANR	4854460	PrimaryExpression	"""ReadMultipleUserLogs::LogGrew(%s)\\n"""		4854449	0					
ANR	4854461	Argument	monitor -> logFile . Value ( )		4854449	2					
ANR	4854462	CallExpression	monitor -> logFile . Value ( )		4854449	0					
ANR	4854463	Callee	monitor -> logFile . Value		4854449	0					
ANR	4854464	MemberAccess	monitor -> logFile . Value		4854449	0					
ANR	4854465	PtrMemberAccess	monitor -> logFile		4854449	0					
ANR	4854466	Identifier	monitor		4854449	0					
ANR	4854467	Identifier	logFile		4854449	1					
ANR	4854468	Identifier	Value		4854449	1					
ANR	4854469	ArgumentList			4854449	1					
ANR	4854470	IdentifierDeclStatement	ReadUserLog :: FileStatus fs = monitor -> readUserLog -> CheckFileStatus ( ) ;	241:1:6291:6359	4854449	1	True				
ANR	4854471	IdentifierDecl	fs = monitor -> readUserLog -> CheckFileStatus ( )		4854449	0					
ANR	4854472	IdentifierDeclType	ReadUserLog :: FileStatus		4854449	0					
ANR	4854473	Identifier	fs		4854449	1					
ANR	4854474	AssignmentExpression	fs = monitor -> readUserLog -> CheckFileStatus ( )		4854449	2		=			
ANR	4854475	Identifier	fs		4854449	0					
ANR	4854476	CallExpression	monitor -> readUserLog -> CheckFileStatus ( )		4854449	1					
ANR	4854477	Callee	monitor -> readUserLog -> CheckFileStatus		4854449	0					
ANR	4854478	PtrMemberAccess	monitor -> readUserLog -> CheckFileStatus		4854449	0					
ANR	4854479	PtrMemberAccess	monitor -> readUserLog		4854449	0					
ANR	4854480	Identifier	monitor		4854449	0					
ANR	4854481	Identifier	readUserLog		4854449	1					
ANR	4854482	Identifier	CheckFileStatus		4854449	1					
ANR	4854483	ArgumentList			4854449	1					
ANR	4854484	IfStatement	if ( ReadUserLog :: LOG_STATUS_ERROR == fs )		4854449	2					
ANR	4854485	Condition	ReadUserLog :: LOG_STATUS_ERROR == fs	243:6:6368:6402	4854449	0	True				
ANR	4854486	EqualityExpression	ReadUserLog :: LOG_STATUS_ERROR == fs		4854449	0		==			
ANR	4854487	Identifier	ReadUserLog :: LOG_STATUS_ERROR		4854449	0					
ANR	4854488	Identifier	fs		4854449	1					
ANR	4854489	CompoundStatement		7:44:215:215	4854449	1					
ANR	4854490	Statement	dprintf	244:2:6410:6416	4854449	0	True				
ANR	4854491	Statement	(	244:9:6417:6417	4854449	1	True				
ANR	4854492	Statement	D_FULLDEBUG	244:11:6419:6429	4854449	2	True				
ANR	4854493	Statement	","	244:22:6430:6430	4854449	3	True				
ANR	4854494	Statement	"""ReadMultipleUserLogs error: can't stat """	245:5:6437:6477	4854449	4	True				
ANR	4854495	Statement	"""condor log (%s): %s\\n"""	246:5:6484:6506	4854449	5	True				
ANR	4854496	Statement	","	246:28:6507:6507	4854449	6	True				
ANR	4854497	Statement	monitor	247:5:6514:6520	4854449	7	True				
ANR	4854498	Statement	->	247:12:6521:6522	4854449	8	True				
ANR	4854499	Statement	logFile	247:14:6523:6529	4854449	9	True				
ANR	4854500	Statement	.	247:21:6530:6530	4854449	10	True				
ANR	4854501	Statement	Value	247:22:6531:6535	4854449	11	True				
ANR	4854502	Statement	(	247:27:6536:6536	4854449	12	True				
ANR	4854503	Statement	)	247:28:6537:6537	4854449	13	True				
ANR	4854504	Statement	","	247:29:6538:6538	4854449	14	True				
ANR	4854505	Statement	strerror	247:31:6540:6547	4854449	15	True				
ANR	4854506	Statement	(	247:39:6548:6548	4854449	16	True				
ANR	4854507	Statement	errno	247:41:6550:6554	4854449	17	True				
ANR	4854508	Statement	)	247:47:6556:6556	4854449	18	True				
ANR	4854509	Statement	)	247:49:6558:6558	4854449	19	True				
ANR	4854510	ExpressionStatement		247:50:6559:6559	4854449	20	True				
ANR	4854511	ReturnStatement	return false ;	248:2:6563:6575	4854449	21	True				
ANR	4854512	Identifier	false		4854449	0					
ANR	4854513	IdentifierDeclStatement	bool grew = ( fs != ReadUserLog :: LOG_STATUS_NOCHANGE ) ;	250:1:6581:6635	4854449	3	True				
ANR	4854514	IdentifierDecl	grew = ( fs != ReadUserLog :: LOG_STATUS_NOCHANGE )		4854449	0					
ANR	4854515	IdentifierDeclType	bool		4854449	0					
ANR	4854516	Identifier	grew		4854449	1					
ANR	4854517	AssignmentExpression	grew = ( fs != ReadUserLog :: LOG_STATUS_NOCHANGE )		4854449	2		=			
ANR	4854518	Identifier	grew		4854449	0					
ANR	4854519	EqualityExpression	fs != ReadUserLog :: LOG_STATUS_NOCHANGE		4854449	1		!=			
ANR	4854520	Identifier	fs		4854449	0					
ANR	4854521	Identifier	ReadUserLog :: LOG_STATUS_NOCHANGE		4854449	1					
ANR	4854522	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""ReadMultipleUserLogs: %s\\n"" , grew ? ""log GREW!"" : ""no log growth..."" )"	251:4:6641:6738	4854449	4	True				
ANR	4854523	CallExpression	"dprintf ( D_FULLDEBUG , ""ReadMultipleUserLogs: %s\\n"" , grew ? ""log GREW!"" : ""no log growth..."" )"		4854449	0					
ANR	4854524	Callee	dprintf		4854449	0					
ANR	4854525	Identifier	dprintf		4854449	0					
ANR	4854526	ArgumentList	D_FULLDEBUG		4854449	1					
ANR	4854527	Argument	D_FULLDEBUG		4854449	0					
ANR	4854528	Identifier	D_FULLDEBUG		4854449	0					
ANR	4854529	Argument	"""ReadMultipleUserLogs: %s\\n"""		4854449	1					
ANR	4854530	PrimaryExpression	"""ReadMultipleUserLogs: %s\\n"""		4854449	0					
ANR	4854531	Argument	"grew ? ""log GREW!"" : ""no log growth..."""		4854449	2					
ANR	4854532	ConditionalExpression	"grew ? ""log GREW!"" : ""no log growth..."""		4854449	0					
ANR	4854533	Condition	grew		4854449	0					
ANR	4854534	Identifier	grew		4854449	0					
ANR	4854535	PrimaryExpression	"""log GREW!"""		4854449	1					
ANR	4854536	PrimaryExpression	"""no log growth..."""		4854449	2					
ANR	4854537	ReturnStatement	return grew ;	254:1:6742:6753	4854449	5	True				
ANR	4854538	Identifier	grew		4854449	0					
ANR	4854539	ReturnType	bool		4854449	1					
ANR	4854540	Identifier	ReadMultipleUserLogs :: LogGrew		4854449	2					
ANR	4854541	ParameterList	LogFileMonitor * monitor		4854449	3					
ANR	4854542	Parameter	LogFileMonitor * monitor	236:31:6164:6186	4854449	0	True				
ANR	4854543	ParameterType	LogFileMonitor *		4854449	0					
ANR	4854544	Identifier	monitor		4854449	1					
ANR	4854545	CFGEntryNode	ENTRY		4854449		True				
ANR	4854546	CFGExitNode	EXIT		4854449		True				
ANR	4854547	Symbol	false		4854449						
ANR	4854548	Symbol	ReadUserLog :: LOG_STATUS_NOCHANGE		4854449						
ANR	4854549	Symbol	monitor		4854449						
ANR	4854550	Symbol	D_FULLDEBUG		4854449						
ANR	4854551	Symbol	* * monitor		4854449						
ANR	4854552	Symbol	* monitor -> readUserLog		4854449						
ANR	4854553	Symbol	fs		4854449						
ANR	4854554	Symbol	grew		4854449						
ANR	4854555	Symbol	* monitor		4854449						
ANR	4854556	Symbol	monitor -> readUserLog -> CheckFileStatus		4854449						
ANR	4854557	Symbol	monitor -> logFile . Value		4854449						
ANR	4854558	Symbol	ReadUserLog :: LOG_STATUS_ERROR		4854449						
ANR	4854559	Symbol	monitor -> logFile		4854449						
ANR	4854560	Symbol	monitor -> readUserLog		4854449						
ANR	4854561	Function	ReadMultipleUserLogs :: readEventFromLog	259:0:6839:7134							
ANR	4854562	FunctionDef	ReadMultipleUserLogs :: readEventFromLog (LogFileMonitor * monitor)		4854561	0					
ANR	4854563	CompoundStatement		261:0:6922:7134	4854561	0					
ANR	4854564	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""ReadMultipleUserLogs::readEventFromLog(%s)\\n"" , monitor -> logFile . Value ( ) )"	262:1:6925:7025	4854561	0	True				
ANR	4854565	CallExpression	"dprintf ( D_FULLDEBUG , ""ReadMultipleUserLogs::readEventFromLog(%s)\\n"" , monitor -> logFile . Value ( ) )"		4854561	0					
ANR	4854566	Callee	dprintf		4854561	0					
ANR	4854567	Identifier	dprintf		4854561	0					
ANR	4854568	ArgumentList	D_FULLDEBUG		4854561	1					
ANR	4854569	Argument	D_FULLDEBUG		4854561	0					
ANR	4854570	Identifier	D_FULLDEBUG		4854561	0					
ANR	4854571	Argument	"""ReadMultipleUserLogs::readEventFromLog(%s)\\n"""		4854561	1					
ANR	4854572	PrimaryExpression	"""ReadMultipleUserLogs::readEventFromLog(%s)\\n"""		4854561	0					
ANR	4854573	Argument	monitor -> logFile . Value ( )		4854561	2					
ANR	4854574	CallExpression	monitor -> logFile . Value ( )		4854561	0					
ANR	4854575	Callee	monitor -> logFile . Value		4854561	0					
ANR	4854576	MemberAccess	monitor -> logFile . Value		4854561	0					
ANR	4854577	PtrMemberAccess	monitor -> logFile		4854561	0					
ANR	4854578	Identifier	monitor		4854561	0					
ANR	4854579	Identifier	logFile		4854561	1					
ANR	4854580	Identifier	Value		4854561	1					
ANR	4854581	ArgumentList			4854561	1					
ANR	4854582	IdentifierDeclStatement	ULogEventOutcome result = monitor -> readUserLog -> readEvent ( monitor -> lastLogEvent ) ;	265:1:7029:7115	4854561	1	True				
ANR	4854583	IdentifierDecl	result = monitor -> readUserLog -> readEvent ( monitor -> lastLogEvent )		4854561	0					
ANR	4854584	IdentifierDeclType	ULogEventOutcome		4854561	0					
ANR	4854585	Identifier	result		4854561	1					
ANR	4854586	AssignmentExpression	result = monitor -> readUserLog -> readEvent ( monitor -> lastLogEvent )		4854561	2		=			
ANR	4854587	Identifier	result		4854561	0					
ANR	4854588	CallExpression	monitor -> readUserLog -> readEvent ( monitor -> lastLogEvent )		4854561	1					
ANR	4854589	Callee	monitor -> readUserLog -> readEvent		4854561	0					
ANR	4854590	PtrMemberAccess	monitor -> readUserLog -> readEvent		4854561	0					
ANR	4854591	PtrMemberAccess	monitor -> readUserLog		4854561	0					
ANR	4854592	Identifier	monitor		4854561	0					
ANR	4854593	Identifier	readUserLog		4854561	1					
ANR	4854594	Identifier	readEvent		4854561	1					
ANR	4854595	ArgumentList	monitor -> lastLogEvent		4854561	1					
ANR	4854596	Argument	monitor -> lastLogEvent		4854561	0					
ANR	4854597	PtrMemberAccess	monitor -> lastLogEvent		4854561	0					
ANR	4854598	Identifier	monitor		4854561	0					
ANR	4854599	Identifier	lastLogEvent		4854561	1					
ANR	4854600	ReturnStatement	return result ;	268:1:7119:7132	4854561	2	True				
ANR	4854601	Identifier	result		4854561	0					
ANR	4854602	ReturnType	ULogEventOutcome		4854561	1					
ANR	4854603	Identifier	ReadMultipleUserLogs :: readEventFromLog		4854561	2					
ANR	4854604	ParameterList	LogFileMonitor * monitor		4854561	3					
ANR	4854605	Parameter	LogFileMonitor * monitor	260:40:6896:6918	4854561	0	True				
ANR	4854606	ParameterType	LogFileMonitor *		4854561	0					
ANR	4854607	Identifier	monitor		4854561	1					
ANR	4854608	CFGEntryNode	ENTRY		4854561		True				
ANR	4854609	CFGExitNode	EXIT		4854561		True				
ANR	4854610	Symbol	result		4854561						
ANR	4854611	Symbol	* monitor		4854561						
ANR	4854612	Symbol	monitor -> lastLogEvent		4854561						
ANR	4854613	Symbol	monitor -> logFile . Value		4854561						
ANR	4854614	Symbol	monitor -> readUserLog -> readEvent		4854561						
ANR	4854615	Symbol	monitor		4854561						
ANR	4854616	Symbol	D_FULLDEBUG		4854561						
ANR	4854617	Symbol	* * monitor		4854561						
ANR	4854618	Symbol	* monitor -> readUserLog		4854561						
ANR	4854619	Symbol	monitor -> logFile		4854561						
ANR	4854620	Symbol	monitor -> readUserLog		4854561						
ANR	4854621	Function	MultiLogFiles :: fileNameToLogicalLines	273:0:7218:8012							
ANR	4854622	FunctionDef	"MultiLogFiles :: fileNameToLogicalLines (const MyString & filename , StringList & logicalLines)"		4854621	0					
ANR	4854623	CompoundStatement		276:0:7320:8012	4854621	0					
ANR	4854624	IdentifierDeclStatement	"MyString result ( """" ) ;"	277:1:7323:7342	4854621	0	True				
ANR	4854625	IdentifierDecl	"result ( """" )"		4854621	0					
ANR	4854626	IdentifierDeclType	MyString		4854621	0					
ANR	4854627	Identifier	result		4854621	1					
ANR	4854628	PrimaryExpression	""""""		4854621	2					
ANR	4854629	IdentifierDeclStatement	MyString fileContents = readFileToString ( filename ) ;	279:1:7346:7396	4854621	1	True				
ANR	4854630	IdentifierDecl	fileContents = readFileToString ( filename )		4854621	0					
ANR	4854631	IdentifierDeclType	MyString		4854621	0					
ANR	4854632	Identifier	fileContents		4854621	1					
ANR	4854633	AssignmentExpression	fileContents = readFileToString ( filename )		4854621	2		=			
ANR	4854634	Identifier	fileContents		4854621	0					
ANR	4854635	CallExpression	readFileToString ( filename )		4854621	1					
ANR	4854636	Callee	readFileToString		4854621	0					
ANR	4854637	Identifier	readFileToString		4854621	0					
ANR	4854638	ArgumentList	filename		4854621	1					
ANR	4854639	Argument	filename		4854621	0					
ANR	4854640	Identifier	filename		4854621	0					
ANR	4854641	IfStatement	"if ( fileContents == """" )"		4854621	2					
ANR	4854642	Condition	"fileContents == """""	280:5:7403:7420	4854621	0	True				
ANR	4854643	EqualityExpression	"fileContents == """""		4854621	0		==			
ANR	4854644	Identifier	fileContents		4854621	0					
ANR	4854645	PrimaryExpression	""""""		4854621	1					
ANR	4854646	CompoundStatement		5:25:102:102	4854621	1					
ANR	4854647	ExpressionStatement	"result = ""Unable to read file: "" + filename"	281:2:7427:7470	4854621	0	True				
ANR	4854648	AssignmentExpression	"result = ""Unable to read file: "" + filename"		4854621	0		=			
ANR	4854649	Identifier	result		4854621	0					
ANR	4854650	AdditiveExpression	"""Unable to read file: "" + filename"		4854621	1		+			
ANR	4854651	PrimaryExpression	"""Unable to read file: """		4854621	0					
ANR	4854652	Identifier	filename		4854621	1					
ANR	4854653	ExpressionStatement	"dprintf ( D_ALWAYS , ""MultiLogFiles: %s\\n"" , result . Value ( ) )"	282:2:7474:7530	4854621	1	True				
ANR	4854654	CallExpression	"dprintf ( D_ALWAYS , ""MultiLogFiles: %s\\n"" , result . Value ( ) )"		4854621	0					
ANR	4854655	Callee	dprintf		4854621	0					
ANR	4854656	Identifier	dprintf		4854621	0					
ANR	4854657	ArgumentList	D_ALWAYS		4854621	1					
ANR	4854658	Argument	D_ALWAYS		4854621	0					
ANR	4854659	Identifier	D_ALWAYS		4854621	0					
ANR	4854660	Argument	"""MultiLogFiles: %s\\n"""		4854621	1					
ANR	4854661	PrimaryExpression	"""MultiLogFiles: %s\\n"""		4854621	0					
ANR	4854662	Argument	result . Value ( )		4854621	2					
ANR	4854663	CallExpression	result . Value ( )		4854621	0					
ANR	4854664	Callee	result . Value		4854621	0					
ANR	4854665	MemberAccess	result . Value		4854621	0					
ANR	4854666	Identifier	result		4854621	0					
ANR	4854667	Identifier	Value		4854621	1					
ANR	4854668	ArgumentList			4854621	1					
ANR	4854669	ReturnStatement	return result ;	283:2:7534:7547	4854621	2	True				
ANR	4854670	Identifier	result		4854621	0					
ANR	4854671	IdentifierDeclStatement	"StringList physicalLines ( fileContents . Value ( ) , ""\\r\\n"" ) ;"	288:1:7675:7729	4854621	3	True				
ANR	4854672	IdentifierDecl	"physicalLines ( fileContents . Value ( ) , ""\\r\\n"" )"		4854621	0					
ANR	4854673	IdentifierDeclType	StringList		4854621	0					
ANR	4854674	Identifier	physicalLines		4854621	1					
ANR	4854675	Expression	"fileContents . Value ( ) , ""\\r\\n"""		4854621	2					
ANR	4854676	CallExpression	fileContents . Value ( )		4854621	0					
ANR	4854677	Callee	fileContents . Value		4854621	0					
ANR	4854678	MemberAccess	fileContents . Value		4854621	0					
ANR	4854679	Identifier	fileContents		4854621	0					
ANR	4854680	Identifier	Value		4854621	1					
ANR	4854681	ArgumentList			4854621	1					
ANR	4854682	PrimaryExpression	"""\\r\\n"""		4854621	1					
ANR	4854683	ExpressionStatement	physicalLines . rewind ( )	289:1:7732:7754	4854621	4	True				
ANR	4854684	CallExpression	physicalLines . rewind ( )		4854621	0					
ANR	4854685	Callee	physicalLines . rewind		4854621	0					
ANR	4854686	MemberAccess	physicalLines . rewind		4854621	0					
ANR	4854687	Identifier	physicalLines		4854621	0					
ANR	4854688	Identifier	rewind		4854621	1					
ANR	4854689	ArgumentList			4854621	1					
ANR	4854690	IdentifierDeclStatement	"MyString combineResult = CombineLines ( physicalLines , '\\\\' , filename , logicalLines ) ;"	292:1:7807:7893	4854621	5	True				
ANR	4854691	IdentifierDecl	"combineResult = CombineLines ( physicalLines , '\\\\' , filename , logicalLines )"		4854621	0					
ANR	4854692	IdentifierDeclType	MyString		4854621	0					
ANR	4854693	Identifier	combineResult		4854621	1					
ANR	4854694	AssignmentExpression	"combineResult = CombineLines ( physicalLines , '\\\\' , filename , logicalLines )"		4854621	2		=			
ANR	4854695	Identifier	combineResult		4854621	0					
ANR	4854696	CallExpression	"CombineLines ( physicalLines , '\\\\' , filename , logicalLines )"		4854621	1					
ANR	4854697	Callee	CombineLines		4854621	0					
ANR	4854698	Identifier	CombineLines		4854621	0					
ANR	4854699	ArgumentList	physicalLines		4854621	1					
ANR	4854700	Argument	physicalLines		4854621	0					
ANR	4854701	Identifier	physicalLines		4854621	0					
ANR	4854702	Argument	'\\\\'		4854621	1					
ANR	4854703	PrimaryExpression	'\\\\'		4854621	0					
ANR	4854704	Argument	filename		4854621	2					
ANR	4854705	Identifier	filename		4854621	0					
ANR	4854706	Argument	logicalLines		4854621	3					
ANR	4854707	Identifier	logicalLines		4854621	0					
ANR	4854708	IfStatement	"if ( combineResult != """" )"		4854621	6					
ANR	4854709	Condition	"combineResult != """""	294:6:7901:7919	4854621	0	True				
ANR	4854710	EqualityExpression	"combineResult != """""		4854621	0		!=			
ANR	4854711	Identifier	combineResult		4854621	0					
ANR	4854712	PrimaryExpression	""""""		4854621	1					
ANR	4854713	CompoundStatement		19:28:602:602	4854621	1					
ANR	4854714	ExpressionStatement	result = combineResult	295:2:7927:7949	4854621	0	True				
ANR	4854715	AssignmentExpression	result = combineResult		4854621	0		=			
ANR	4854716	Identifier	result		4854621	0					
ANR	4854717	Identifier	combineResult		4854621	1					
ANR	4854718	ReturnStatement	return result ;	296:2:7953:7966	4854621	1	True				
ANR	4854719	Identifier	result		4854621	0					
ANR	4854720	ExpressionStatement	logicalLines . rewind ( )	298:1:7972:7993	4854621	7	True				
ANR	4854721	CallExpression	logicalLines . rewind ( )		4854621	0					
ANR	4854722	Callee	logicalLines . rewind		4854621	0					
ANR	4854723	MemberAccess	logicalLines . rewind		4854621	0					
ANR	4854724	Identifier	logicalLines		4854621	0					
ANR	4854725	Identifier	rewind		4854621	1					
ANR	4854726	ArgumentList			4854621	1					
ANR	4854727	ReturnStatement	return result ;	300:1:7997:8010	4854621	8	True				
ANR	4854728	Identifier	result		4854621	0					
ANR	4854729	ReturnType	MyString		4854621	1					
ANR	4854730	Identifier	MultiLogFiles :: fileNameToLogicalLines		4854621	2					
ANR	4854731	ParameterList	"const MyString & filename , StringList & logicalLines"		4854621	3					
ANR	4854732	Parameter	const MyString & filename	274:38:7265:7288	4854621	0	True				
ANR	4854733	ParameterType	const MyString &		4854621	0					
ANR	4854734	Identifier	filename		4854621	1					
ANR	4854735	Parameter	StringList & logicalLines	275:3:7294:7317	4854621	1	True				
ANR	4854736	ParameterType	StringList &		4854621	0					
ANR	4854737	Identifier	logicalLines		4854621	1					
ANR	4854738	CFGEntryNode	ENTRY		4854621		True				
ANR	4854739	CFGExitNode	EXIT		4854621		True				
ANR	4854740	Symbol	result		4854621						
ANR	4854741	Symbol	CombineLines		4854621						
ANR	4854742	Symbol	filename		4854621						
ANR	4854743	Symbol	logicalLines		4854621						
ANR	4854744	Symbol	result . Value		4854621						
ANR	4854745	Symbol	readFileToString		4854621						
ANR	4854746	Symbol	combineResult		4854621						
ANR	4854747	Symbol	D_ALWAYS		4854621						
ANR	4854748	Symbol	physicalLines		4854621						
ANR	4854749	Symbol	fileContents		4854621						
ANR	4854750	Function	MultiLogFiles :: readFileToString	305:0:8096:9576							
ANR	4854751	FunctionDef	MultiLogFiles :: readFileToString (const MyString & strFilename)		4854750	0					
ANR	4854752	CompoundStatement		307:0:8166:9576	4854750	0					
ANR	4854753	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""MultiLogFiles::readFileToString(%s)\\n"" , strFilename . Value ( ) )"	308:1:8169:8257	4854750	0	True				
ANR	4854754	CallExpression	"dprintf ( D_FULLDEBUG , ""MultiLogFiles::readFileToString(%s)\\n"" , strFilename . Value ( ) )"		4854750	0					
ANR	4854755	Callee	dprintf		4854750	0					
ANR	4854756	Identifier	dprintf		4854750	0					
ANR	4854757	ArgumentList	D_FULLDEBUG		4854750	1					
ANR	4854758	Argument	D_FULLDEBUG		4854750	0					
ANR	4854759	Identifier	D_FULLDEBUG		4854750	0					
ANR	4854760	Argument	"""MultiLogFiles::readFileToString(%s)\\n"""		4854750	1					
ANR	4854761	PrimaryExpression	"""MultiLogFiles::readFileToString(%s)\\n"""		4854750	0					
ANR	4854762	Argument	strFilename . Value ( )		4854750	2					
ANR	4854763	CallExpression	strFilename . Value ( )		4854750	0					
ANR	4854764	Callee	strFilename . Value		4854750	0					
ANR	4854765	MemberAccess	strFilename . Value		4854750	0					
ANR	4854766	Identifier	strFilename		4854750	0					
ANR	4854767	Identifier	Value		4854750	1					
ANR	4854768	ArgumentList			4854750	1					
ANR	4854769	IdentifierDeclStatement	"FILE * pFile = safe_fopen_wrapper_follow ( strFilename . Value ( ) , ""r"" ) ;"	311:1:8261:8326	4854750	1	True				
ANR	4854770	IdentifierDecl	"* pFile = safe_fopen_wrapper_follow ( strFilename . Value ( ) , ""r"" )"		4854750	0					
ANR	4854771	IdentifierDeclType	FILE *		4854750	0					
ANR	4854772	Identifier	pFile		4854750	1					
ANR	4854773	AssignmentExpression	"* pFile = safe_fopen_wrapper_follow ( strFilename . Value ( ) , ""r"" )"		4854750	2		=			
ANR	4854774	Identifier	pFile		4854750	0					
ANR	4854775	CallExpression	"safe_fopen_wrapper_follow ( strFilename . Value ( ) , ""r"" )"		4854750	1					
ANR	4854776	Callee	safe_fopen_wrapper_follow		4854750	0					
ANR	4854777	Identifier	safe_fopen_wrapper_follow		4854750	0					
ANR	4854778	ArgumentList	strFilename . Value ( )		4854750	1					
ANR	4854779	Argument	strFilename . Value ( )		4854750	0					
ANR	4854780	CallExpression	strFilename . Value ( )		4854750	0					
ANR	4854781	Callee	strFilename . Value		4854750	0					
ANR	4854782	MemberAccess	strFilename . Value		4854750	0					
ANR	4854783	Identifier	strFilename		4854750	0					
ANR	4854784	Identifier	Value		4854750	1					
ANR	4854785	ArgumentList			4854750	1					
ANR	4854786	Argument	"""r"""		4854750	1					
ANR	4854787	PrimaryExpression	"""r"""		4854750	0					
ANR	4854788	IfStatement	if ( ! pFile )		4854750	2					
ANR	4854789	Condition	! pFile	312:5:8333:8338	4854750	0	True				
ANR	4854790	UnaryOperationExpression	! pFile		4854750	0					
ANR	4854791	UnaryOperator	!		4854750	0					
ANR	4854792	Identifier	pFile		4854750	1					
ANR	4854793	CompoundStatement		6:13:174:174	4854750	1					
ANR	4854794	Statement	dprintf	313:2:8345:8351	4854750	0	True				
ANR	4854795	Statement	(	313:9:8352:8352	4854750	1	True				
ANR	4854796	Statement	D_ALWAYS	313:11:8354:8361	4854750	2	True				
ANR	4854797	Statement	","	313:19:8362:8362	4854750	3	True				
ANR	4854798	Statement	"""MultiLogFiles::readFileToString: """	313:21:8364:8398	4854750	4	True				
ANR	4854799	Statement	"""safe_fopen_wrapper_follow(%s) failed with errno %d (%s)\\n"""	314:4:8404:8462	4854750	5	True				
ANR	4854800	Statement	","	314:63:8463:8463	4854750	6	True				
ANR	4854801	Statement	strFilename	314:65:8465:8475	4854750	7	True				
ANR	4854802	Statement	.	314:76:8476:8476	4854750	8	True				
ANR	4854803	Statement	Value	314:77:8477:8481	4854750	9	True				
ANR	4854804	Statement	(	314:82:8482:8482	4854750	10	True				
ANR	4854805	Statement	)	314:83:8483:8483	4854750	11	True				
ANR	4854806	Statement	","	314:84:8484:8484	4854750	12	True				
ANR	4854807	Statement	errno	315:4:8490:8494	4854750	13	True				
ANR	4854808	Statement	","	315:9:8495:8495	4854750	14	True				
ANR	4854809	Statement	strerror	315:11:8497:8504	4854750	15	True				
ANR	4854810	Statement	(	315:19:8505:8505	4854750	16	True				
ANR	4854811	Statement	errno	315:20:8506:8510	4854750	17	True				
ANR	4854812	Statement	)	315:25:8511:8511	4854750	18	True				
ANR	4854813	Statement	)	315:27:8513:8513	4854750	19	True				
ANR	4854814	ExpressionStatement		315:28:8514:8514	4854750	20	True				
ANR	4854815	ReturnStatement	"return """" ;"	316:2:8518:8527	4854750	21	True				
ANR	4854816	PrimaryExpression	""""""		4854750	0					
ANR	4854817	IfStatement	"if ( fseek ( pFile , 0 , SEEK_END ) != 0 )"		4854750	3					
ANR	4854818	Condition	"fseek ( pFile , 0 , SEEK_END ) != 0"	319:6:8539:8568	4854750	0	True				
ANR	4854819	EqualityExpression	"fseek ( pFile , 0 , SEEK_END ) != 0"		4854750	0		!=			
ANR	4854820	CallExpression	"fseek ( pFile , 0 , SEEK_END )"		4854750	0					
ANR	4854821	Callee	fseek		4854750	0					
ANR	4854822	Identifier	fseek		4854750	0					
ANR	4854823	ArgumentList	pFile		4854750	1					
ANR	4854824	Argument	pFile		4854750	0					
ANR	4854825	Identifier	pFile		4854750	0					
ANR	4854826	Argument	0		4854750	1					
ANR	4854827	PrimaryExpression	0		4854750	0					
ANR	4854828	Argument	SEEK_END		4854750	2					
ANR	4854829	Identifier	SEEK_END		4854750	0					
ANR	4854830	PrimaryExpression	0		4854750	1					
ANR	4854831	CompoundStatement		13:39:405:405	4854750	1					
ANR	4854832	Statement	dprintf	320:2:8576:8582	4854750	0	True				
ANR	4854833	Statement	(	320:9:8583:8583	4854750	1	True				
ANR	4854834	Statement	D_ALWAYS	320:11:8585:8592	4854750	2	True				
ANR	4854835	Statement	","	320:19:8593:8593	4854750	3	True				
ANR	4854836	Statement	"""MultiLogFiles::readFileToString: """	320:21:8595:8629	4854750	4	True				
ANR	4854837	Statement	"""fseek(%s) failed with errno %d (%s)\\n"""	321:4:8635:8673	4854750	5	True				
ANR	4854838	Statement	","	321:43:8674:8674	4854750	6	True				
ANR	4854839	Statement	strFilename	321:45:8676:8686	4854750	7	True				
ANR	4854840	Statement	.	321:56:8687:8687	4854750	8	True				
ANR	4854841	Statement	Value	321:57:8688:8692	4854750	9	True				
ANR	4854842	Statement	(	321:62:8693:8693	4854750	10	True				
ANR	4854843	Statement	)	321:63:8694:8694	4854750	11	True				
ANR	4854844	Statement	","	321:64:8695:8695	4854750	12	True				
ANR	4854845	Statement	errno	322:4:8701:8705	4854750	13	True				
ANR	4854846	Statement	","	322:9:8706:8706	4854750	14	True				
ANR	4854847	Statement	strerror	322:11:8708:8715	4854750	15	True				
ANR	4854848	Statement	(	322:19:8716:8716	4854750	16	True				
ANR	4854849	Statement	errno	322:20:8717:8721	4854750	17	True				
ANR	4854850	Statement	)	322:25:8722:8722	4854750	18	True				
ANR	4854851	Statement	)	322:27:8724:8724	4854750	19	True				
ANR	4854852	ExpressionStatement		322:28:8725:8725	4854750	20	True				
ANR	4854853	ExpressionStatement	fclose ( pFile )	323:2:8729:8742	4854750	21	True				
ANR	4854854	CallExpression	fclose ( pFile )		4854750	0					
ANR	4854855	Callee	fclose		4854750	0					
ANR	4854856	Identifier	fclose		4854750	0					
ANR	4854857	ArgumentList	pFile		4854750	1					
ANR	4854858	Argument	pFile		4854750	0					
ANR	4854859	Identifier	pFile		4854750	0					
ANR	4854860	ReturnStatement	"return """" ;"	324:2:8746:8755	4854750	22	True				
ANR	4854861	PrimaryExpression	""""""		4854750	0					
ANR	4854862	IdentifierDeclStatement	int iLength = ftell ( pFile ) ;	326:1:8761:8787	4854750	4	True				
ANR	4854863	IdentifierDecl	iLength = ftell ( pFile )		4854750	0					
ANR	4854864	IdentifierDeclType	int		4854750	0					
ANR	4854865	Identifier	iLength		4854750	1					
ANR	4854866	AssignmentExpression	iLength = ftell ( pFile )		4854750	2		=			
ANR	4854867	Identifier	iLength		4854750	0					
ANR	4854868	CallExpression	ftell ( pFile )		4854750	1					
ANR	4854869	Callee	ftell		4854750	0					
ANR	4854870	Identifier	ftell		4854750	0					
ANR	4854871	ArgumentList	pFile		4854750	1					
ANR	4854872	Argument	pFile		4854750	0					
ANR	4854873	Identifier	pFile		4854750	0					
ANR	4854874	IfStatement	if ( iLength == - 1 )		4854750	5					
ANR	4854875	Condition	iLength == - 1	327:6:8795:8807	4854750	0	True				
ANR	4854876	EqualityExpression	iLength == - 1		4854750	0		==			
ANR	4854877	Identifier	iLength		4854750	0					
ANR	4854878	UnaryOperationExpression	- 1		4854750	1					
ANR	4854879	UnaryOperator	-		4854750	0					
ANR	4854880	PrimaryExpression	1		4854750	1					
ANR	4854881	CompoundStatement		21:22:644:644	4854750	1					
ANR	4854882	Statement	dprintf	328:2:8815:8821	4854750	0	True				
ANR	4854883	Statement	(	328:9:8822:8822	4854750	1	True				
ANR	4854884	Statement	D_ALWAYS	328:11:8824:8831	4854750	2	True				
ANR	4854885	Statement	","	328:19:8832:8832	4854750	3	True				
ANR	4854886	Statement	"""MultiLogFiles::readFileToString: """	328:21:8834:8868	4854750	4	True				
ANR	4854887	Statement	"""ftell(%s) failed with errno %d (%s)\\n"""	329:4:8874:8912	4854750	5	True				
ANR	4854888	Statement	","	329:43:8913:8913	4854750	6	True				
ANR	4854889	Statement	strFilename	329:45:8915:8925	4854750	7	True				
ANR	4854890	Statement	.	329:56:8926:8926	4854750	8	True				
ANR	4854891	Statement	Value	329:57:8927:8931	4854750	9	True				
ANR	4854892	Statement	(	329:62:8932:8932	4854750	10	True				
ANR	4854893	Statement	)	329:63:8933:8933	4854750	11	True				
ANR	4854894	Statement	","	329:64:8934:8934	4854750	12	True				
ANR	4854895	Statement	errno	330:4:8940:8944	4854750	13	True				
ANR	4854896	Statement	","	330:9:8945:8945	4854750	14	True				
ANR	4854897	Statement	strerror	330:11:8947:8954	4854750	15	True				
ANR	4854898	Statement	(	330:19:8955:8955	4854750	16	True				
ANR	4854899	Statement	errno	330:20:8956:8960	4854750	17	True				
ANR	4854900	Statement	)	330:25:8961:8961	4854750	18	True				
ANR	4854901	Statement	)	330:27:8963:8963	4854750	19	True				
ANR	4854902	ExpressionStatement		330:28:8964:8964	4854750	20	True				
ANR	4854903	ExpressionStatement	fclose ( pFile )	331:2:8968:8981	4854750	21	True				
ANR	4854904	CallExpression	fclose ( pFile )		4854750	0					
ANR	4854905	Callee	fclose		4854750	0					
ANR	4854906	Identifier	fclose		4854750	0					
ANR	4854907	ArgumentList	pFile		4854750	1					
ANR	4854908	Argument	pFile		4854750	0					
ANR	4854909	Identifier	pFile		4854750	0					
ANR	4854910	ReturnStatement	"return """" ;"	332:2:8985:8994	4854750	22	True				
ANR	4854911	PrimaryExpression	""""""		4854750	0					
ANR	4854912	IdentifierDeclStatement	MyString strToReturn ;	334:1:9000:9020	4854750	6	True				
ANR	4854913	IdentifierDecl	strToReturn		4854750	0					
ANR	4854914	IdentifierDeclType	MyString		4854750	0					
ANR	4854915	Identifier	strToReturn		4854750	1					
ANR	4854916	ExpressionStatement	strToReturn . reserve_at_least ( iLength )	335:1:9023:9060	4854750	7	True				
ANR	4854917	CallExpression	strToReturn . reserve_at_least ( iLength )		4854750	0					
ANR	4854918	Callee	strToReturn . reserve_at_least		4854750	0					
ANR	4854919	MemberAccess	strToReturn . reserve_at_least		4854750	0					
ANR	4854920	Identifier	strToReturn		4854750	0					
ANR	4854921	Identifier	reserve_at_least		4854750	1					
ANR	4854922	ArgumentList	iLength		4854750	1					
ANR	4854923	Argument	iLength		4854750	0					
ANR	4854924	Identifier	iLength		4854750	0					
ANR	4854925	ExpressionStatement	"fseek ( pFile , 0 , SEEK_SET )"	337:1:9064:9089	4854750	8	True				
ANR	4854926	CallExpression	"fseek ( pFile , 0 , SEEK_SET )"		4854750	0					
ANR	4854927	Callee	fseek		4854750	0					
ANR	4854928	Identifier	fseek		4854750	0					
ANR	4854929	ArgumentList	pFile		4854750	1					
ANR	4854930	Argument	pFile		4854750	0					
ANR	4854931	Identifier	pFile		4854750	0					
ANR	4854932	Argument	0		4854750	1					
ANR	4854933	PrimaryExpression	0		4854750	0					
ANR	4854934	Argument	SEEK_SET		4854750	2					
ANR	4854935	Identifier	SEEK_SET		4854750	0					
ANR	4854936	IdentifierDeclStatement	char * psBuf = new char [ iLength + 1 ] ;	338:1:9092:9125	4854750	9	True				
ANR	4854937	IdentifierDecl	* psBuf = new char [ iLength + 1 ]		4854750	0					
ANR	4854938	IdentifierDeclType	char *		4854750	0					
ANR	4854939	Identifier	psBuf		4854750	1					
ANR	4854940	AssignmentExpression	* psBuf = new char [ iLength + 1 ]		4854750	2		=			
ANR	4854941	Identifier	psBuf		4854750	0					
ANR	4854942	AdditiveExpression	iLength + 1		4854750	1		+			
ANR	4854943	Identifier	iLength		4854750	0					
ANR	4854944	PrimaryExpression	1		4854750	1					
ANR	4854945	ExpressionStatement	"memset ( psBuf , 0 , iLength + 1 )"	346:1:9436:9461	4854750	10	True				
ANR	4854946	CallExpression	"memset ( psBuf , 0 , iLength + 1 )"		4854750	0					
ANR	4854947	Callee	memset		4854750	0					
ANR	4854948	Identifier	memset		4854750	0					
ANR	4854949	ArgumentList	psBuf		4854750	1					
ANR	4854950	Argument	psBuf		4854750	0					
ANR	4854951	Identifier	psBuf		4854750	0					
ANR	4854952	Argument	0		4854750	1					
ANR	4854953	PrimaryExpression	0		4854750	0					
ANR	4854954	Argument	iLength + 1		4854750	2					
ANR	4854955	AdditiveExpression	iLength + 1		4854750	0		+			
ANR	4854956	Identifier	iLength		4854750	0					
ANR	4854957	PrimaryExpression	1		4854750	1					
ANR	4854958	ExpressionStatement	"fread ( psBuf , 1 , iLength , pFile )"	347:1:9464:9495	4854750	11	True				
ANR	4854959	CallExpression	"fread ( psBuf , 1 , iLength , pFile )"		4854750	0					
ANR	4854960	Callee	fread		4854750	0					
ANR	4854961	Identifier	fread		4854750	0					
ANR	4854962	ArgumentList	psBuf		4854750	1					
ANR	4854963	Argument	psBuf		4854750	0					
ANR	4854964	Identifier	psBuf		4854750	0					
ANR	4854965	Argument	1		4854750	1					
ANR	4854966	PrimaryExpression	1		4854750	0					
ANR	4854967	Argument	iLength		4854750	2					
ANR	4854968	Identifier	iLength		4854750	0					
ANR	4854969	Argument	pFile		4854750	3					
ANR	4854970	Identifier	pFile		4854750	0					
ANR	4854971	ExpressionStatement	fclose ( pFile )	348:1:9498:9511	4854750	12	True				
ANR	4854972	CallExpression	fclose ( pFile )		4854750	0					
ANR	4854973	Callee	fclose		4854750	0					
ANR	4854974	Identifier	fclose		4854750	0					
ANR	4854975	ArgumentList	pFile		4854750	1					
ANR	4854976	Argument	pFile		4854750	0					
ANR	4854977	Identifier	pFile		4854750	0					
ANR	4854978	ExpressionStatement	strToReturn = psBuf	350:1:9515:9534	4854750	13	True				
ANR	4854979	AssignmentExpression	strToReturn = psBuf		4854750	0		=			
ANR	4854980	Identifier	strToReturn		4854750	0					
ANR	4854981	Identifier	psBuf		4854750	1					
ANR	4854982	Statement	delete	351:1:9537:9542	4854750	14	True				
ANR	4854983	Statement	[	351:8:9544:9544	4854750	15	True				
ANR	4854984	Statement	]	351:9:9545:9545	4854750	16	True				
ANR	4854985	ExpressionStatement	psBuf	351:11:9547:9552	4854750	17	True				
ANR	4854986	Identifier	psBuf		4854750	0					
ANR	4854987	ReturnStatement	return strToReturn ;	353:1:9556:9574	4854750	18	True				
ANR	4854988	Identifier	strToReturn		4854750	0					
ANR	4854989	ReturnType	MyString		4854750	1					
ANR	4854990	Identifier	MultiLogFiles :: readFileToString		4854750	2					
ANR	4854991	ParameterList	const MyString & strFilename		4854750	3					
ANR	4854992	Parameter	const MyString & strFilename	306:32:8137:8163	4854750	0	True				
ANR	4854993	ParameterType	const MyString &		4854750	0					
ANR	4854994	Identifier	strFilename		4854750	1					
ANR	4854995	CFGEntryNode	ENTRY		4854750		True				
ANR	4854996	CFGExitNode	EXIT		4854750		True				
ANR	4854997	Symbol	strFilename . Value		4854750						
ANR	4854998	Symbol	SEEK_SET		4854750						
ANR	4854999	Symbol	strFilename		4854750						
ANR	4855000	Symbol	ftell		4854750						
ANR	4855001	Symbol	pFile		4854750						
ANR	4855002	Symbol	D_FULLDEBUG		4854750						
ANR	4855003	Symbol	strToReturn		4854750						
ANR	4855004	Symbol	safe_fopen_wrapper_follow		4854750						
ANR	4855005	Symbol	fseek		4854750						
ANR	4855006	Symbol	iLength		4854750						
ANR	4855007	Symbol	SEEK_END		4854750						
ANR	4855008	Symbol	psBuf		4854750						
ANR	4855009	Function	MultiLogFiles :: loadLogFileNameFromSubFile	359:0:9723:12429							
ANR	4855010	FunctionDef	"MultiLogFiles :: loadLogFileNameFromSubFile (const MyString & strSubFilename , const MyString & directory , bool & isXml)"		4855009	0					
ANR	4855011	CompoundStatement		362:0:9848:12429	4855009	0					
ANR	4855012	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""MultiLogFiles::loadLogFileNameFromSubFile(%s, %s)\\n"" , strSubFilename . Value ( ) , directory . Value ( ) )"	363:1:9851:9975	4855009	0	True				
ANR	4855013	CallExpression	"dprintf ( D_FULLDEBUG , ""MultiLogFiles::loadLogFileNameFromSubFile(%s, %s)\\n"" , strSubFilename . Value ( ) , directory . Value ( ) )"		4855009	0					
ANR	4855014	Callee	dprintf		4855009	0					
ANR	4855015	Identifier	dprintf		4855009	0					
ANR	4855016	ArgumentList	D_FULLDEBUG		4855009	1					
ANR	4855017	Argument	D_FULLDEBUG		4855009	0					
ANR	4855018	Identifier	D_FULLDEBUG		4855009	0					
ANR	4855019	Argument	"""MultiLogFiles::loadLogFileNameFromSubFile(%s, %s)\\n"""		4855009	1					
ANR	4855020	PrimaryExpression	"""MultiLogFiles::loadLogFileNameFromSubFile(%s, %s)\\n"""		4855009	0					
ANR	4855021	Argument	strSubFilename . Value ( )		4855009	2					
ANR	4855022	CallExpression	strSubFilename . Value ( )		4855009	0					
ANR	4855023	Callee	strSubFilename . Value		4855009	0					
ANR	4855024	MemberAccess	strSubFilename . Value		4855009	0					
ANR	4855025	Identifier	strSubFilename		4855009	0					
ANR	4855026	Identifier	Value		4855009	1					
ANR	4855027	ArgumentList			4855009	1					
ANR	4855028	Argument	directory . Value ( )		4855009	3					
ANR	4855029	CallExpression	directory . Value ( )		4855009	0					
ANR	4855030	Callee	directory . Value		4855009	0					
ANR	4855031	MemberAccess	directory . Value		4855009	0					
ANR	4855032	Identifier	directory		4855009	0					
ANR	4855033	Identifier	Value		4855009	1					
ANR	4855034	ArgumentList			4855009	1					
ANR	4855035	IdentifierDeclStatement	TmpDir td ;	366:1:9979:9989	4855009	1	True				
ANR	4855036	IdentifierDecl	td		4855009	0					
ANR	4855037	IdentifierDeclType	TmpDir		4855009	0					
ANR	4855038	Identifier	td		4855009	1					
ANR	4855039	IfStatement	"if ( directory != """" )"		4855009	2					
ANR	4855040	Condition	"directory != """""	367:6:9997:10011	4855009	0	True				
ANR	4855041	EqualityExpression	"directory != """""		4855009	0		!=			
ANR	4855042	Identifier	directory		4855009	0					
ANR	4855043	PrimaryExpression	""""""		4855009	1					
ANR	4855044	CompoundStatement		7:2:170:185	4855009	1					
ANR	4855045	IdentifierDeclStatement	MyString errMsg ;	368:2:10019:10034	4855009	0	True				
ANR	4855046	IdentifierDecl	errMsg		4855009	0					
ANR	4855047	IdentifierDeclType	MyString		4855009	0					
ANR	4855048	Identifier	errMsg		4855009	1					
ANR	4855049	IfStatement	"if ( ! td . Cd2TmpDir ( directory . Value ( ) , errMsg ) )"		4855009	1					
ANR	4855050	Condition	"! td . Cd2TmpDir ( directory . Value ( ) , errMsg )"	369:7:10043:10082	4855009	0	True				
ANR	4855051	UnaryOperationExpression	"! td . Cd2TmpDir ( directory . Value ( ) , errMsg )"		4855009	0					
ANR	4855052	UnaryOperator	!		4855009	0					
ANR	4855053	CallExpression	"td . Cd2TmpDir ( directory . Value ( ) , errMsg )"		4855009	1					
ANR	4855054	Callee	td . Cd2TmpDir		4855009	0					
ANR	4855055	MemberAccess	td . Cd2TmpDir		4855009	0					
ANR	4855056	Identifier	td		4855009	0					
ANR	4855057	Identifier	Cd2TmpDir		4855009	1					
ANR	4855058	ArgumentList	directory . Value ( )		4855009	1					
ANR	4855059	Argument	directory . Value ( )		4855009	0					
ANR	4855060	CallExpression	directory . Value ( )		4855009	0					
ANR	4855061	Callee	directory . Value		4855009	0					
ANR	4855062	MemberAccess	directory . Value		4855009	0					
ANR	4855063	Identifier	directory		4855009	0					
ANR	4855064	Identifier	Value		4855009	1					
ANR	4855065	ArgumentList			4855009	1					
ANR	4855066	Argument	errMsg		4855009	1					
ANR	4855067	Identifier	errMsg		4855009	0					
ANR	4855068	CompoundStatement		8:50:237:237	4855009	1					
ANR	4855069	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error from Cd2TmpDir: %s\\n"" , errMsg . Value ( ) )"	370:3:10091:10154	4855009	0	True				
ANR	4855070	CallExpression	"dprintf ( D_ALWAYS , ""Error from Cd2TmpDir: %s\\n"" , errMsg . Value ( ) )"		4855009	0					
ANR	4855071	Callee	dprintf		4855009	0					
ANR	4855072	Identifier	dprintf		4855009	0					
ANR	4855073	ArgumentList	D_ALWAYS		4855009	1					
ANR	4855074	Argument	D_ALWAYS		4855009	0					
ANR	4855075	Identifier	D_ALWAYS		4855009	0					
ANR	4855076	Argument	"""Error from Cd2TmpDir: %s\\n"""		4855009	1					
ANR	4855077	PrimaryExpression	"""Error from Cd2TmpDir: %s\\n"""		4855009	0					
ANR	4855078	Argument	errMsg . Value ( )		4855009	2					
ANR	4855079	CallExpression	errMsg . Value ( )		4855009	0					
ANR	4855080	Callee	errMsg . Value		4855009	0					
ANR	4855081	MemberAccess	errMsg . Value		4855009	0					
ANR	4855082	Identifier	errMsg		4855009	0					
ANR	4855083	Identifier	Value		4855009	1					
ANR	4855084	ArgumentList			4855009	1					
ANR	4855085	ReturnStatement	"return """" ;"	371:3:10159:10168	4855009	1	True				
ANR	4855086	PrimaryExpression	""""""		4855009	0					
ANR	4855087	IdentifierDeclStatement	StringList logicalLines ;	375:1:10179:10202	4855009	3	True				
ANR	4855088	IdentifierDecl	logicalLines		4855009	0					
ANR	4855089	IdentifierDeclType	StringList		4855009	0					
ANR	4855090	Identifier	logicalLines		4855009	1					
ANR	4855091	IfStatement	"if ( fileNameToLogicalLines ( strSubFilename , logicalLines ) != """" )"		4855009	4					
ANR	4855092	Condition	"fileNameToLogicalLines ( strSubFilename , logicalLines ) != """""	376:6:10210:10269	4855009	0	True				
ANR	4855093	EqualityExpression	"fileNameToLogicalLines ( strSubFilename , logicalLines ) != """""		4855009	0		!=			
ANR	4855094	CallExpression	"fileNameToLogicalLines ( strSubFilename , logicalLines )"		4855009	0					
ANR	4855095	Callee	fileNameToLogicalLines		4855009	0					
ANR	4855096	Identifier	fileNameToLogicalLines		4855009	0					
ANR	4855097	ArgumentList	strSubFilename		4855009	1					
ANR	4855098	Argument	strSubFilename		4855009	0					
ANR	4855099	Identifier	strSubFilename		4855009	0					
ANR	4855100	Argument	logicalLines		4855009	1					
ANR	4855101	Identifier	logicalLines		4855009	0					
ANR	4855102	PrimaryExpression	""""""		4855009	1					
ANR	4855103	CompoundStatement		15:69:424:424	4855009	1					
ANR	4855104	ReturnStatement	"return """" ;"	377:2:10277:10286	4855009	0	True				
ANR	4855105	PrimaryExpression	""""""		4855009	0					
ANR	4855106	IdentifierDeclStatement	"MyString logFileName ( """" ) ;"	380:1:10293:10317	4855009	5	True				
ANR	4855107	IdentifierDecl	"logFileName ( """" )"		4855009	0					
ANR	4855108	IdentifierDeclType	MyString		4855009	0					
ANR	4855109	Identifier	logFileName		4855009	1					
ANR	4855110	PrimaryExpression	""""""		4855009	2					
ANR	4855111	IdentifierDeclStatement	"MyString initialDir ( """" ) ;"	381:1:10320:10343	4855009	6	True				
ANR	4855112	IdentifierDecl	"initialDir ( """" )"		4855009	0					
ANR	4855113	IdentifierDeclType	MyString		4855009	0					
ANR	4855114	Identifier	initialDir		4855009	1					
ANR	4855115	PrimaryExpression	""""""		4855009	2					
ANR	4855116	IdentifierDeclStatement	"MyString isXmlLogStr ( """" ) ;"	382:1:10346:10370	4855009	7	True				
ANR	4855117	IdentifierDecl	"isXmlLogStr ( """" )"		4855009	0					
ANR	4855118	IdentifierDeclType	MyString		4855009	0					
ANR	4855119	Identifier	isXmlLogStr		4855009	1					
ANR	4855120	PrimaryExpression	""""""		4855009	2					
ANR	4855121	IdentifierDeclStatement	const char * logicalLine ;	388:1:10632:10655	4855009	8	True				
ANR	4855122	IdentifierDecl	* logicalLine		4855009	0					
ANR	4855123	IdentifierDeclType	const char *		4855009	0					
ANR	4855124	Identifier	logicalLine		4855009	1					
ANR	4855125	WhileStatement	while ( ( logicalLine = logicalLines . next ( ) ) != NULL )		4855009	9					
ANR	4855126	Condition	( logicalLine = logicalLines . next ( ) ) != NULL	389:8:10665:10707	4855009	0	True				
ANR	4855127	EqualityExpression	( logicalLine = logicalLines . next ( ) ) != NULL		4855009	0		!=			
ANR	4855128	AssignmentExpression	logicalLine = logicalLines . next ( )		4855009	0		=			
ANR	4855129	Identifier	logicalLine		4855009	0					
ANR	4855130	CallExpression	logicalLines . next ( )		4855009	1					
ANR	4855131	Callee	logicalLines . next		4855009	0					
ANR	4855132	MemberAccess	logicalLines . next		4855009	0					
ANR	4855133	Identifier	logicalLines		4855009	0					
ANR	4855134	Identifier	next		4855009	1					
ANR	4855135	ArgumentList			4855009	1					
ANR	4855136	Identifier	NULL		4855009	1					
ANR	4855137	CompoundStatement		41:2:1179:1245	4855009	1					
ANR	4855138	IdentifierDeclStatement	MyString submitLine ( logicalLine ) ;	390:2:10715:10747	4855009	0	True				
ANR	4855139	IdentifierDecl	submitLine ( logicalLine )		4855009	0					
ANR	4855140	IdentifierDeclType	MyString		4855009	0					
ANR	4855141	Identifier	submitLine		4855009	1					
ANR	4855142	Identifier	logicalLine		4855009	2					
ANR	4855143	IdentifierDeclStatement	"MyString tmpLogName = getParamFromSubmitLine ( submitLine , ""log"" ) ;"	391:2:10751:10814	4855009	1	True				
ANR	4855144	IdentifierDecl	"tmpLogName = getParamFromSubmitLine ( submitLine , ""log"" )"		4855009	0					
ANR	4855145	IdentifierDeclType	MyString		4855009	0					
ANR	4855146	Identifier	tmpLogName		4855009	1					
ANR	4855147	AssignmentExpression	"tmpLogName = getParamFromSubmitLine ( submitLine , ""log"" )"		4855009	2		=			
ANR	4855148	Identifier	tmpLogName		4855009	0					
ANR	4855149	CallExpression	"getParamFromSubmitLine ( submitLine , ""log"" )"		4855009	1					
ANR	4855150	Callee	getParamFromSubmitLine		4855009	0					
ANR	4855151	Identifier	getParamFromSubmitLine		4855009	0					
ANR	4855152	ArgumentList	submitLine		4855009	1					
ANR	4855153	Argument	submitLine		4855009	0					
ANR	4855154	Identifier	submitLine		4855009	0					
ANR	4855155	Argument	"""log"""		4855009	1					
ANR	4855156	PrimaryExpression	"""log"""		4855009	0					
ANR	4855157	IfStatement	"if ( tmpLogName != """" )"		4855009	2					
ANR	4855158	Condition	"tmpLogName != """""	392:7:10823:10838	4855009	0	True				
ANR	4855159	EqualityExpression	"tmpLogName != """""		4855009	0		!=			
ANR	4855160	Identifier	tmpLogName		4855009	0					
ANR	4855161	PrimaryExpression	""""""		4855009	1					
ANR	4855162	CompoundStatement		31:26:993:993	4855009	1					
ANR	4855163	ExpressionStatement	logFileName = tmpLogName	393:3:10847:10871	4855009	0	True				
ANR	4855164	AssignmentExpression	logFileName = tmpLogName		4855009	0		=			
ANR	4855165	Identifier	logFileName		4855009	0					
ANR	4855166	Identifier	tmpLogName		4855009	1					
ANR	4855167	IdentifierDeclStatement	"MyString tmpInitialDir = getParamFromSubmitLine ( submitLine , ""initialdir"" ) ;"	396:2:10880:10957	4855009	3	True				
ANR	4855168	IdentifierDecl	"tmpInitialDir = getParamFromSubmitLine ( submitLine , ""initialdir"" )"		4855009	0					
ANR	4855169	IdentifierDeclType	MyString		4855009	0					
ANR	4855170	Identifier	tmpInitialDir		4855009	1					
ANR	4855171	AssignmentExpression	"tmpInitialDir = getParamFromSubmitLine ( submitLine , ""initialdir"" )"		4855009	2		=			
ANR	4855172	Identifier	tmpInitialDir		4855009	0					
ANR	4855173	CallExpression	"getParamFromSubmitLine ( submitLine , ""initialdir"" )"		4855009	1					
ANR	4855174	Callee	getParamFromSubmitLine		4855009	0					
ANR	4855175	Identifier	getParamFromSubmitLine		4855009	0					
ANR	4855176	ArgumentList	submitLine		4855009	1					
ANR	4855177	Argument	submitLine		4855009	0					
ANR	4855178	Identifier	submitLine		4855009	0					
ANR	4855179	Argument	"""initialdir"""		4855009	1					
ANR	4855180	PrimaryExpression	"""initialdir"""		4855009	0					
ANR	4855181	IfStatement	"if ( tmpInitialDir != """" )"		4855009	4					
ANR	4855182	Condition	"tmpInitialDir != """""	398:7:10966:10984	4855009	0	True				
ANR	4855183	EqualityExpression	"tmpInitialDir != """""		4855009	0		!=			
ANR	4855184	Identifier	tmpInitialDir		4855009	0					
ANR	4855185	PrimaryExpression	""""""		4855009	1					
ANR	4855186	CompoundStatement		37:29:1139:1139	4855009	1					
ANR	4855187	ExpressionStatement	initialDir = tmpInitialDir	399:3:10993:11019	4855009	0	True				
ANR	4855188	AssignmentExpression	initialDir = tmpInitialDir		4855009	0		=			
ANR	4855189	Identifier	initialDir		4855009	0					
ANR	4855190	Identifier	tmpInitialDir		4855009	1					
ANR	4855191	IdentifierDeclStatement	"MyString tmpLogXml = getParamFromSubmitLine ( submitLine , ""log_xml"" ) ;"	402:2:11028:11094	4855009	5	True				
ANR	4855192	IdentifierDecl	"tmpLogXml = getParamFromSubmitLine ( submitLine , ""log_xml"" )"		4855009	0					
ANR	4855193	IdentifierDeclType	MyString		4855009	0					
ANR	4855194	Identifier	tmpLogXml		4855009	1					
ANR	4855195	AssignmentExpression	"tmpLogXml = getParamFromSubmitLine ( submitLine , ""log_xml"" )"		4855009	2		=			
ANR	4855196	Identifier	tmpLogXml		4855009	0					
ANR	4855197	CallExpression	"getParamFromSubmitLine ( submitLine , ""log_xml"" )"		4855009	1					
ANR	4855198	Callee	getParamFromSubmitLine		4855009	0					
ANR	4855199	Identifier	getParamFromSubmitLine		4855009	0					
ANR	4855200	ArgumentList	submitLine		4855009	1					
ANR	4855201	Argument	submitLine		4855009	0					
ANR	4855202	Identifier	submitLine		4855009	0					
ANR	4855203	Argument	"""log_xml"""		4855009	1					
ANR	4855204	PrimaryExpression	"""log_xml"""		4855009	0					
ANR	4855205	IfStatement	"if ( tmpLogXml != """" )"		4855009	6					
ANR	4855206	Condition	"tmpLogXml != """""	403:7:11103:11117	4855009	0	True				
ANR	4855207	EqualityExpression	"tmpLogXml != """""		4855009	0		!=			
ANR	4855208	Identifier	tmpLogXml		4855009	0					
ANR	4855209	PrimaryExpression	""""""		4855009	1					
ANR	4855210	CompoundStatement		42:25:1272:1272	4855009	1					
ANR	4855211	ExpressionStatement	isXmlLogStr = tmpLogXml	404:3:11126:11149	4855009	0	True				
ANR	4855212	AssignmentExpression	isXmlLogStr = tmpLogXml		4855009	0		=			
ANR	4855213	Identifier	isXmlLogStr		4855009	0					
ANR	4855214	Identifier	tmpLogXml		4855009	1					
ANR	4855215	IfStatement	"if ( logFileName != """" )"		4855009	10					
ANR	4855216	Condition	"logFileName != """""	412:6:11259:11275	4855009	0	True				
ANR	4855217	EqualityExpression	"logFileName != """""		4855009	0		!=			
ANR	4855218	Identifier	logFileName		4855009	0					
ANR	4855219	PrimaryExpression	""""""		4855009	1					
ANR	4855220	CompoundStatement		51:26:1430:1430	4855009	1					
ANR	4855221	IfStatement	"if ( strstr ( logFileName . Value ( ) , ""$("" ) )"		4855009	0					
ANR	4855222	Condition	"strstr ( logFileName . Value ( ) , ""$("" )"	413:7:11288:11320	4855009	0	True				
ANR	4855223	CallExpression	"strstr ( logFileName . Value ( ) , ""$("" )"		4855009	0					
ANR	4855224	Callee	strstr		4855009	0					
ANR	4855225	Identifier	strstr		4855009	0					
ANR	4855226	ArgumentList	logFileName . Value ( )		4855009	1					
ANR	4855227	Argument	logFileName . Value ( )		4855009	0					
ANR	4855228	CallExpression	logFileName . Value ( )		4855009	0					
ANR	4855229	Callee	logFileName . Value		4855009	0					
ANR	4855230	MemberAccess	logFileName . Value		4855009	0					
ANR	4855231	Identifier	logFileName		4855009	0					
ANR	4855232	Identifier	Value		4855009	1					
ANR	4855233	ArgumentList			4855009	1					
ANR	4855234	Argument	"""$("""		4855009	1					
ANR	4855235	PrimaryExpression	"""$("""		4855009	0					
ANR	4855236	CompoundStatement		52:43:1475:1475	4855009	1					
ANR	4855237	Statement	dprintf	414:3:11329:11335	4855009	0	True				
ANR	4855238	Statement	(	414:10:11336:11336	4855009	1	True				
ANR	4855239	Statement	D_ALWAYS	414:11:11337:11344	4855009	2	True				
ANR	4855240	Statement	","	414:19:11345:11345	4855009	3	True				
ANR	4855241	Statement	"""MultiLogFiles: macros ('$(...') not allowed """	414:21:11347:11392	4855009	4	True				
ANR	4855242	Statement	"""in log file name (%s) in DAG node submit files\\n"""	415:6:11400:11449	4855009	5	True				
ANR	4855243	Statement	","	415:56:11450:11450	4855009	6	True				
ANR	4855244	Statement	logFileName	416:6:11458:11468	4855009	7	True				
ANR	4855245	Statement	.	416:17:11469:11469	4855009	8	True				
ANR	4855246	Statement	Value	416:18:11470:11474	4855009	9	True				
ANR	4855247	Statement	(	416:23:11475:11475	4855009	10	True				
ANR	4855248	Statement	)	416:24:11476:11476	4855009	11	True				
ANR	4855249	Statement	)	416:25:11477:11477	4855009	12	True				
ANR	4855250	ExpressionStatement		416:26:11478:11478	4855009	13	True				
ANR	4855251	ExpressionStatement	"logFileName = """""	417:3:11483:11499	4855009	14	True				
ANR	4855252	AssignmentExpression	"logFileName = """""		4855009	0		=			
ANR	4855253	Identifier	logFileName		4855009	0					
ANR	4855254	PrimaryExpression	""""""		4855009	1					
ANR	4855255	IfStatement	"if ( logFileName != """" )"		4855009	11					
ANR	4855256	Condition	"logFileName != """""	421:6:11515:11531	4855009	0	True				
ANR	4855257	EqualityExpression	"logFileName != """""		4855009	0		!=			
ANR	4855258	Identifier	logFileName		4855009	0					
ANR	4855259	PrimaryExpression	""""""		4855009	1					
ANR	4855260	CompoundStatement		71:2:2131:2151	4855009	1					
ANR	4855261	IfStatement	"if ( initialDir != """" && ! fullpath ( logFileName . Value ( ) ) )"		4855009	0					
ANR	4855262	Condition	"initialDir != """" && ! fullpath ( logFileName . Value ( ) )"	424:7:11634:11683	4855009	0	True				
ANR	4855263	AndExpression	"initialDir != """" && ! fullpath ( logFileName . Value ( ) )"		4855009	0		&&			
ANR	4855264	EqualityExpression	"initialDir != """""		4855009	0		!=			
ANR	4855265	Identifier	initialDir		4855009	0					
ANR	4855266	PrimaryExpression	""""""		4855009	1					
ANR	4855267	UnaryOperationExpression	! fullpath ( logFileName . Value ( ) )		4855009	1					
ANR	4855268	UnaryOperator	!		4855009	0					
ANR	4855269	CallExpression	fullpath ( logFileName . Value ( ) )		4855009	1					
ANR	4855270	Callee	fullpath		4855009	0					
ANR	4855271	Identifier	fullpath		4855009	0					
ANR	4855272	ArgumentList	logFileName . Value ( )		4855009	1					
ANR	4855273	Argument	logFileName . Value ( )		4855009	0					
ANR	4855274	CallExpression	logFileName . Value ( )		4855009	0					
ANR	4855275	Callee	logFileName . Value		4855009	0					
ANR	4855276	MemberAccess	logFileName . Value		4855009	0					
ANR	4855277	Identifier	logFileName		4855009	0					
ANR	4855278	Identifier	Value		4855009	1					
ANR	4855279	ArgumentList			4855009	1					
ANR	4855280	CompoundStatement		63:60:1838:1838	4855009	1					
ANR	4855281	ExpressionStatement	logFileName = initialDir + DIR_DELIM_STRING + logFileName	425:3:11692:11749	4855009	0	True				
ANR	4855282	AssignmentExpression	logFileName = initialDir + DIR_DELIM_STRING + logFileName		4855009	0		=			
ANR	4855283	Identifier	logFileName		4855009	0					
ANR	4855284	AdditiveExpression	initialDir + DIR_DELIM_STRING + logFileName		4855009	1		+			
ANR	4855285	Identifier	initialDir		4855009	0					
ANR	4855286	AdditiveExpression	DIR_DELIM_STRING + logFileName		4855009	1		+			
ANR	4855287	Identifier	DIR_DELIM_STRING		4855009	0					
ANR	4855288	Identifier	logFileName		4855009	1					
ANR	4855289	IdentifierDeclStatement	CondorError errstack ;	432:2:11980:12000	4855009	1	True				
ANR	4855290	IdentifierDecl	errstack		4855009	0					
ANR	4855291	IdentifierDeclType	CondorError		4855009	0					
ANR	4855292	Identifier	errstack		4855009	1					
ANR	4855293	IfStatement	"if ( ! makePathAbsolute ( logFileName , errstack ) )"		4855009	2					
ANR	4855294	Condition	"! makePathAbsolute ( logFileName , errstack )"	433:7:12009:12050	4855009	0	True				
ANR	4855295	UnaryOperationExpression	"! makePathAbsolute ( logFileName , errstack )"		4855009	0					
ANR	4855296	UnaryOperator	!		4855009	0					
ANR	4855297	CallExpression	"makePathAbsolute ( logFileName , errstack )"		4855009	1					
ANR	4855298	Callee	makePathAbsolute		4855009	0					
ANR	4855299	Identifier	makePathAbsolute		4855009	0					
ANR	4855300	ArgumentList	logFileName		4855009	1					
ANR	4855301	Argument	logFileName		4855009	0					
ANR	4855302	Identifier	logFileName		4855009	0					
ANR	4855303	Argument	errstack		4855009	1					
ANR	4855304	Identifier	errstack		4855009	0					
ANR	4855305	CompoundStatement		72:52:2205:2205	4855009	1					
ANR	4855306	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s\\n"" , errstack . getFullText ( ) )"	434:3:12059:12108	4855009	0	True				
ANR	4855307	CallExpression	"dprintf ( D_ALWAYS , ""%s\\n"" , errstack . getFullText ( ) )"		4855009	0					
ANR	4855308	Callee	dprintf		4855009	0					
ANR	4855309	Identifier	dprintf		4855009	0					
ANR	4855310	ArgumentList	D_ALWAYS		4855009	1					
ANR	4855311	Argument	D_ALWAYS		4855009	0					
ANR	4855312	Identifier	D_ALWAYS		4855009	0					
ANR	4855313	Argument	"""%s\\n"""		4855009	1					
ANR	4855314	PrimaryExpression	"""%s\\n"""		4855009	0					
ANR	4855315	Argument	errstack . getFullText ( )		4855009	2					
ANR	4855316	CallExpression	errstack . getFullText ( )		4855009	0					
ANR	4855317	Callee	errstack . getFullText		4855009	0					
ANR	4855318	MemberAccess	errstack . getFullText		4855009	0					
ANR	4855319	Identifier	errstack		4855009	0					
ANR	4855320	Identifier	getFullText		4855009	1					
ANR	4855321	ArgumentList			4855009	1					
ANR	4855322	ReturnStatement	"return """" ;"	435:3:12113:12122	4855009	1	True				
ANR	4855323	PrimaryExpression	""""""		4855009	0					
ANR	4855324	ExpressionStatement	isXmlLogStr . lower_case ( )	439:1:12133:12157	4855009	12	True				
ANR	4855325	CallExpression	isXmlLogStr . lower_case ( )		4855009	0					
ANR	4855326	Callee	isXmlLogStr . lower_case		4855009	0					
ANR	4855327	MemberAccess	isXmlLogStr . lower_case		4855009	0					
ANR	4855328	Identifier	isXmlLogStr		4855009	0					
ANR	4855329	Identifier	lower_case		4855009	1					
ANR	4855330	ArgumentList			4855009	1					
ANR	4855331	IfStatement	"if ( isXmlLogStr == ""true"" )"		4855009	13					
ANR	4855332	Condition	"isXmlLogStr == ""true"""	440:6:12165:12185	4855009	0	True				
ANR	4855333	EqualityExpression	"isXmlLogStr == ""true"""		4855009	0		==			
ANR	4855334	Identifier	isXmlLogStr		4855009	0					
ANR	4855335	PrimaryExpression	"""true"""		4855009	1					
ANR	4855336	CompoundStatement		79:30:2340:2340	4855009	1					
ANR	4855337	ExpressionStatement	isXml = true	441:2:12193:12205	4855009	0	True				
ANR	4855338	AssignmentExpression	isXml = true		4855009	0		=			
ANR	4855339	Identifier	isXml		4855009	0					
ANR	4855340	Identifier	true		4855009	1					
ANR	4855341	ElseStatement	else		4855009	0					
ANR	4855342	CompoundStatement		81:8:2366:2366	4855009	0					
ANR	4855343	ExpressionStatement	isXml = false	443:2:12219:12232	4855009	0	True				
ANR	4855344	AssignmentExpression	isXml = false		4855009	0		=			
ANR	4855345	Identifier	isXml		4855009	0					
ANR	4855346	Identifier	false		4855009	1					
ANR	4855347	IfStatement	"if ( directory != """" )"		4855009	14					
ANR	4855348	Condition	"directory != """""	446:6:12244:12258	4855009	0	True				
ANR	4855349	EqualityExpression	"directory != """""		4855009	0		!=			
ANR	4855350	Identifier	directory		4855009	0					
ANR	4855351	PrimaryExpression	""""""		4855009	1					
ANR	4855352	CompoundStatement		86:2:2417:2432	4855009	1					
ANR	4855353	IdentifierDeclStatement	MyString errMsg ;	447:2:12266:12281	4855009	0	True				
ANR	4855354	IdentifierDecl	errMsg		4855009	0					
ANR	4855355	IdentifierDeclType	MyString		4855009	0					
ANR	4855356	Identifier	errMsg		4855009	1					
ANR	4855357	IfStatement	if ( ! td . Cd2MainDir ( errMsg ) )		4855009	1					
ANR	4855358	Condition	! td . Cd2MainDir ( errMsg )	448:7:12290:12311	4855009	0	True				
ANR	4855359	UnaryOperationExpression	! td . Cd2MainDir ( errMsg )		4855009	0					
ANR	4855360	UnaryOperator	!		4855009	0					
ANR	4855361	CallExpression	td . Cd2MainDir ( errMsg )		4855009	1					
ANR	4855362	Callee	td . Cd2MainDir		4855009	0					
ANR	4855363	MemberAccess	td . Cd2MainDir		4855009	0					
ANR	4855364	Identifier	td		4855009	0					
ANR	4855365	Identifier	Cd2MainDir		4855009	1					
ANR	4855366	ArgumentList	errMsg		4855009	1					
ANR	4855367	Argument	errMsg		4855009	0					
ANR	4855368	Identifier	errMsg		4855009	0					
ANR	4855369	CompoundStatement		87:32:2466:2466	4855009	1					
ANR	4855370	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error from Cd2MainDir: %s\\n"" , errMsg . Value ( ) )"	449:3:12320:12384	4855009	0	True				
ANR	4855371	CallExpression	"dprintf ( D_ALWAYS , ""Error from Cd2MainDir: %s\\n"" , errMsg . Value ( ) )"		4855009	0					
ANR	4855372	Callee	dprintf		4855009	0					
ANR	4855373	Identifier	dprintf		4855009	0					
ANR	4855374	ArgumentList	D_ALWAYS		4855009	1					
ANR	4855375	Argument	D_ALWAYS		4855009	0					
ANR	4855376	Identifier	D_ALWAYS		4855009	0					
ANR	4855377	Argument	"""Error from Cd2MainDir: %s\\n"""		4855009	1					
ANR	4855378	PrimaryExpression	"""Error from Cd2MainDir: %s\\n"""		4855009	0					
ANR	4855379	Argument	errMsg . Value ( )		4855009	2					
ANR	4855380	CallExpression	errMsg . Value ( )		4855009	0					
ANR	4855381	Callee	errMsg . Value		4855009	0					
ANR	4855382	MemberAccess	errMsg . Value		4855009	0					
ANR	4855383	Identifier	errMsg		4855009	0					
ANR	4855384	Identifier	Value		4855009	1					
ANR	4855385	ArgumentList			4855009	1					
ANR	4855386	ReturnStatement	"return """" ;"	450:3:12389:12398	4855009	1	True				
ANR	4855387	PrimaryExpression	""""""		4855009	0					
ANR	4855388	ReturnStatement	return logFileName ;	454:1:12409:12427	4855009	15	True				
ANR	4855389	Identifier	logFileName		4855009	0					
ANR	4855390	ReturnType	MyString		4855009	1					
ANR	4855391	Identifier	MultiLogFiles :: loadLogFileNameFromSubFile		4855009	2					
ANR	4855392	ParameterList	"const MyString & strSubFilename , const MyString & directory , bool & isXml"		4855009	3					
ANR	4855393	Parameter	const MyString & strSubFilename	360:42:9774:9803	4855009	0	True				
ANR	4855394	ParameterType	const MyString &		4855009	0					
ANR	4855395	Identifier	strSubFilename		4855009	1					
ANR	4855396	Parameter	const MyString & directory	361:2:9808:9832	4855009	1	True				
ANR	4855397	ParameterType	const MyString &		4855009	0					
ANR	4855398	Identifier	directory		4855009	1					
ANR	4855399	Parameter	bool & isXml	361:29:9835:9845	4855009	2	True				
ANR	4855400	ParameterType	bool &		4855009	0					
ANR	4855401	Identifier	isXml		4855009	1					
ANR	4855402	CFGEntryNode	ENTRY		4855009		True				
ANR	4855403	CFGExitNode	EXIT		4855009		True				
ANR	4855404	Symbol	logicalLine		4855009						
ANR	4855405	Symbol	initialDir		4855009						
ANR	4855406	Symbol	logicalLines		4855009						
ANR	4855407	Symbol	td . Cd2MainDir		4855009						
ANR	4855408	Symbol	errMsg		4855009						
ANR	4855409	Symbol	directory		4855009						
ANR	4855410	Symbol	td . Cd2TmpDir		4855009						
ANR	4855411	Symbol	fileNameToLogicalLines		4855009						
ANR	4855412	Symbol	errMsg . Value		4855009						
ANR	4855413	Symbol	fullpath		4855009						
ANR	4855414	Symbol	logFileName		4855009						
ANR	4855415	Symbol	tmpLogName		4855009						
ANR	4855416	Symbol	submitLine		4855009						
ANR	4855417	Symbol	DIR_DELIM_STRING		4855009						
ANR	4855418	Symbol	strSubFilename		4855009						
ANR	4855419	Symbol	directory . Value		4855009						
ANR	4855420	Symbol	NULL		4855009						
ANR	4855421	Symbol	strSubFilename . Value		4855009						
ANR	4855422	Symbol	D_ALWAYS		4855009						
ANR	4855423	Symbol	false		4855009						
ANR	4855424	Symbol	D_FULLDEBUG		4855009						
ANR	4855425	Symbol	getParamFromSubmitLine		4855009						
ANR	4855426	Symbol	tmpInitialDir		4855009						
ANR	4855427	Symbol	isXml		4855009						
ANR	4855428	Symbol	td		4855009						
ANR	4855429	Symbol	tmpLogXml		4855009						
ANR	4855430	Symbol	errstack		4855009						
ANR	4855431	Symbol	isXmlLogStr		4855009						
ANR	4855432	Symbol	makePathAbsolute		4855009						
ANR	4855433	Symbol	strstr		4855009						
ANR	4855434	Symbol	true		4855009						
ANR	4855435	Symbol	errstack . getFullText		4855009						
ANR	4855436	Symbol	logicalLines . next		4855009						
ANR	4855437	Symbol	logFileName . Value		4855009						
ANR	4855438	Function	MultiLogFiles :: loadValueFromSubFile	460:0:12576:13985							
ANR	4855439	FunctionDef	"MultiLogFiles :: loadValueFromSubFile (const MyString & strSubFilename , const MyString & directory , const char * keyword)"		4855438	0					
ANR	4855440	CompoundStatement		463:0:12703:13985	4855438	0					
ANR	4855441	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""MultiLogFiles::loadValueFromSubFile(%s, %s, %s)\\n"" , strSubFilename . Value ( ) , directory . Value ( ) , keyword )"	464:1:12706:12837	4855438	0	True				
ANR	4855442	CallExpression	"dprintf ( D_FULLDEBUG , ""MultiLogFiles::loadValueFromSubFile(%s, %s, %s)\\n"" , strSubFilename . Value ( ) , directory . Value ( ) , keyword )"		4855438	0					
ANR	4855443	Callee	dprintf		4855438	0					
ANR	4855444	Identifier	dprintf		4855438	0					
ANR	4855445	ArgumentList	D_FULLDEBUG		4855438	1					
ANR	4855446	Argument	D_FULLDEBUG		4855438	0					
ANR	4855447	Identifier	D_FULLDEBUG		4855438	0					
ANR	4855448	Argument	"""MultiLogFiles::loadValueFromSubFile(%s, %s, %s)\\n"""		4855438	1					
ANR	4855449	PrimaryExpression	"""MultiLogFiles::loadValueFromSubFile(%s, %s, %s)\\n"""		4855438	0					
ANR	4855450	Argument	strSubFilename . Value ( )		4855438	2					
ANR	4855451	CallExpression	strSubFilename . Value ( )		4855438	0					
ANR	4855452	Callee	strSubFilename . Value		4855438	0					
ANR	4855453	MemberAccess	strSubFilename . Value		4855438	0					
ANR	4855454	Identifier	strSubFilename		4855438	0					
ANR	4855455	Identifier	Value		4855438	1					
ANR	4855456	ArgumentList			4855438	1					
ANR	4855457	Argument	directory . Value ( )		4855438	3					
ANR	4855458	CallExpression	directory . Value ( )		4855438	0					
ANR	4855459	Callee	directory . Value		4855438	0					
ANR	4855460	MemberAccess	directory . Value		4855438	0					
ANR	4855461	Identifier	directory		4855438	0					
ANR	4855462	Identifier	Value		4855438	1					
ANR	4855463	ArgumentList			4855438	1					
ANR	4855464	Argument	keyword		4855438	4					
ANR	4855465	Identifier	keyword		4855438	0					
ANR	4855466	IdentifierDeclStatement	TmpDir td ;	467:1:12841:12851	4855438	1	True				
ANR	4855467	IdentifierDecl	td		4855438	0					
ANR	4855468	IdentifierDeclType	TmpDir		4855438	0					
ANR	4855469	Identifier	td		4855438	1					
ANR	4855470	IfStatement	"if ( directory != """" )"		4855438	2					
ANR	4855471	Condition	"directory != """""	468:6:12859:12873	4855438	0	True				
ANR	4855472	EqualityExpression	"directory != """""		4855438	0		!=			
ANR	4855473	Identifier	directory		4855438	0					
ANR	4855474	PrimaryExpression	""""""		4855438	1					
ANR	4855475	CompoundStatement		7:2:177:192	4855438	1					
ANR	4855476	IdentifierDeclStatement	MyString errMsg ;	469:2:12881:12896	4855438	0	True				
ANR	4855477	IdentifierDecl	errMsg		4855438	0					
ANR	4855478	IdentifierDeclType	MyString		4855438	0					
ANR	4855479	Identifier	errMsg		4855438	1					
ANR	4855480	IfStatement	"if ( ! td . Cd2TmpDir ( directory . Value ( ) , errMsg ) )"		4855438	1					
ANR	4855481	Condition	"! td . Cd2TmpDir ( directory . Value ( ) , errMsg )"	470:7:12905:12944	4855438	0	True				
ANR	4855482	UnaryOperationExpression	"! td . Cd2TmpDir ( directory . Value ( ) , errMsg )"		4855438	0					
ANR	4855483	UnaryOperator	!		4855438	0					
ANR	4855484	CallExpression	"td . Cd2TmpDir ( directory . Value ( ) , errMsg )"		4855438	1					
ANR	4855485	Callee	td . Cd2TmpDir		4855438	0					
ANR	4855486	MemberAccess	td . Cd2TmpDir		4855438	0					
ANR	4855487	Identifier	td		4855438	0					
ANR	4855488	Identifier	Cd2TmpDir		4855438	1					
ANR	4855489	ArgumentList	directory . Value ( )		4855438	1					
ANR	4855490	Argument	directory . Value ( )		4855438	0					
ANR	4855491	CallExpression	directory . Value ( )		4855438	0					
ANR	4855492	Callee	directory . Value		4855438	0					
ANR	4855493	MemberAccess	directory . Value		4855438	0					
ANR	4855494	Identifier	directory		4855438	0					
ANR	4855495	Identifier	Value		4855438	1					
ANR	4855496	ArgumentList			4855438	1					
ANR	4855497	Argument	errMsg		4855438	1					
ANR	4855498	Identifier	errMsg		4855438	0					
ANR	4855499	CompoundStatement		8:50:244:244	4855438	1					
ANR	4855500	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error from Cd2TmpDir: %s\\n"" , errMsg . Value ( ) )"	471:3:12953:13016	4855438	0	True				
ANR	4855501	CallExpression	"dprintf ( D_ALWAYS , ""Error from Cd2TmpDir: %s\\n"" , errMsg . Value ( ) )"		4855438	0					
ANR	4855502	Callee	dprintf		4855438	0					
ANR	4855503	Identifier	dprintf		4855438	0					
ANR	4855504	ArgumentList	D_ALWAYS		4855438	1					
ANR	4855505	Argument	D_ALWAYS		4855438	0					
ANR	4855506	Identifier	D_ALWAYS		4855438	0					
ANR	4855507	Argument	"""Error from Cd2TmpDir: %s\\n"""		4855438	1					
ANR	4855508	PrimaryExpression	"""Error from Cd2TmpDir: %s\\n"""		4855438	0					
ANR	4855509	Argument	errMsg . Value ( )		4855438	2					
ANR	4855510	CallExpression	errMsg . Value ( )		4855438	0					
ANR	4855511	Callee	errMsg . Value		4855438	0					
ANR	4855512	MemberAccess	errMsg . Value		4855438	0					
ANR	4855513	Identifier	errMsg		4855438	0					
ANR	4855514	Identifier	Value		4855438	1					
ANR	4855515	ArgumentList			4855438	1					
ANR	4855516	ReturnStatement	"return """" ;"	472:3:13021:13030	4855438	1	True				
ANR	4855517	PrimaryExpression	""""""		4855438	0					
ANR	4855518	IdentifierDeclStatement	StringList logicalLines ;	476:1:13041:13064	4855438	3	True				
ANR	4855519	IdentifierDecl	logicalLines		4855438	0					
ANR	4855520	IdentifierDeclType	StringList		4855438	0					
ANR	4855521	Identifier	logicalLines		4855438	1					
ANR	4855522	IfStatement	"if ( fileNameToLogicalLines ( strSubFilename , logicalLines ) != """" )"		4855438	4					
ANR	4855523	Condition	"fileNameToLogicalLines ( strSubFilename , logicalLines ) != """""	477:6:13072:13131	4855438	0	True				
ANR	4855524	EqualityExpression	"fileNameToLogicalLines ( strSubFilename , logicalLines ) != """""		4855438	0		!=			
ANR	4855525	CallExpression	"fileNameToLogicalLines ( strSubFilename , logicalLines )"		4855438	0					
ANR	4855526	Callee	fileNameToLogicalLines		4855438	0					
ANR	4855527	Identifier	fileNameToLogicalLines		4855438	0					
ANR	4855528	ArgumentList	strSubFilename		4855438	1					
ANR	4855529	Argument	strSubFilename		4855438	0					
ANR	4855530	Identifier	strSubFilename		4855438	0					
ANR	4855531	Argument	logicalLines		4855438	1					
ANR	4855532	Identifier	logicalLines		4855438	0					
ANR	4855533	PrimaryExpression	""""""		4855438	1					
ANR	4855534	CompoundStatement		15:69:431:431	4855438	1					
ANR	4855535	ReturnStatement	"return """" ;"	478:2:13139:13148	4855438	0	True				
ANR	4855536	PrimaryExpression	""""""		4855438	0					
ANR	4855537	IdentifierDeclStatement	"MyString value ( """" ) ;"	481:1:13155:13173	4855438	5	True				
ANR	4855538	IdentifierDecl	"value ( """" )"		4855438	0					
ANR	4855539	IdentifierDeclType	MyString		4855438	0					
ANR	4855540	Identifier	value		4855438	1					
ANR	4855541	PrimaryExpression	""""""		4855438	2					
ANR	4855542	IdentifierDeclStatement	const char * logicalLine ;	485:1:13282:13305	4855438	6	True				
ANR	4855543	IdentifierDecl	* logicalLine		4855438	0					
ANR	4855544	IdentifierDeclType	const char *		4855438	0					
ANR	4855545	Identifier	logicalLine		4855438	1					
ANR	4855546	WhileStatement	while ( ( logicalLine = logicalLines . next ( ) ) != NULL )		4855438	7					
ANR	4855547	Condition	( logicalLine = logicalLines . next ( ) ) != NULL	486:8:13315:13357	4855438	0	True				
ANR	4855548	EqualityExpression	( logicalLine = logicalLines . next ( ) ) != NULL		4855438	0		!=			
ANR	4855549	AssignmentExpression	logicalLine = logicalLines . next ( )		4855438	0		=			
ANR	4855550	Identifier	logicalLine		4855438	0					
ANR	4855551	CallExpression	logicalLines . next ( )		4855438	1					
ANR	4855552	Callee	logicalLines . next		4855438	0					
ANR	4855553	MemberAccess	logicalLines . next		4855438	0					
ANR	4855554	Identifier	logicalLines		4855438	0					
ANR	4855555	Identifier	next		4855438	1					
ANR	4855556	ArgumentList			4855438	1					
ANR	4855557	Identifier	NULL		4855438	1					
ANR	4855558	CompoundStatement		26:2:697:760	4855438	1					
ANR	4855559	IdentifierDeclStatement	MyString submitLine ( logicalLine ) ;	487:2:13365:13397	4855438	0	True				
ANR	4855560	IdentifierDecl	submitLine ( logicalLine )		4855438	0					
ANR	4855561	IdentifierDeclType	MyString		4855438	0					
ANR	4855562	Identifier	submitLine		4855438	1					
ANR	4855563	Identifier	logicalLine		4855438	2					
ANR	4855564	IdentifierDeclStatement	"MyString tmpValue = getParamFromSubmitLine ( submitLine , keyword ) ;"	488:2:13401:13464	4855438	1	True				
ANR	4855565	IdentifierDecl	"tmpValue = getParamFromSubmitLine ( submitLine , keyword )"		4855438	0					
ANR	4855566	IdentifierDeclType	MyString		4855438	0					
ANR	4855567	Identifier	tmpValue		4855438	1					
ANR	4855568	AssignmentExpression	"tmpValue = getParamFromSubmitLine ( submitLine , keyword )"		4855438	2		=			
ANR	4855569	Identifier	tmpValue		4855438	0					
ANR	4855570	CallExpression	"getParamFromSubmitLine ( submitLine , keyword )"		4855438	1					
ANR	4855571	Callee	getParamFromSubmitLine		4855438	0					
ANR	4855572	Identifier	getParamFromSubmitLine		4855438	0					
ANR	4855573	ArgumentList	submitLine		4855438	1					
ANR	4855574	Argument	submitLine		4855438	0					
ANR	4855575	Identifier	submitLine		4855438	0					
ANR	4855576	Argument	keyword		4855438	1					
ANR	4855577	Identifier	keyword		4855438	0					
ANR	4855578	IfStatement	"if ( tmpValue != """" )"		4855438	2					
ANR	4855579	Condition	"tmpValue != """""	489:7:13473:13486	4855438	0	True				
ANR	4855580	EqualityExpression	"tmpValue != """""		4855438	0		!=			
ANR	4855581	Identifier	tmpValue		4855438	0					
ANR	4855582	PrimaryExpression	""""""		4855438	1					
ANR	4855583	CompoundStatement		27:24:786:786	4855438	1					
ANR	4855584	ExpressionStatement	value = tmpValue	490:3:13495:13511	4855438	0	True				
ANR	4855585	AssignmentExpression	value = tmpValue		4855438	0		=			
ANR	4855586	Identifier	value		4855438	0					
ANR	4855587	Identifier	tmpValue		4855438	1					
ANR	4855588	IfStatement	"if ( value != """" )"		4855438	8					
ANR	4855589	Condition	"value != """""	498:6:13613:13623	4855438	0	True				
ANR	4855590	EqualityExpression	"value != """""		4855438	0		!=			
ANR	4855591	Identifier	value		4855438	0					
ANR	4855592	PrimaryExpression	""""""		4855438	1					
ANR	4855593	CompoundStatement		36:20:923:923	4855438	1					
ANR	4855594	IfStatement	"if ( strchr ( value . Value ( ) , '$' ) )"		4855438	0					
ANR	4855595	Condition	"strchr ( value . Value ( ) , '$' )"	499:7:13636:13661	4855438	0	True				
ANR	4855596	CallExpression	"strchr ( value . Value ( ) , '$' )"		4855438	0					
ANR	4855597	Callee	strchr		4855438	0					
ANR	4855598	Identifier	strchr		4855438	0					
ANR	4855599	ArgumentList	value . Value ( )		4855438	1					
ANR	4855600	Argument	value . Value ( )		4855438	0					
ANR	4855601	CallExpression	value . Value ( )		4855438	0					
ANR	4855602	Callee	value . Value		4855438	0					
ANR	4855603	MemberAccess	value . Value		4855438	0					
ANR	4855604	Identifier	value		4855438	0					
ANR	4855605	Identifier	Value		4855438	1					
ANR	4855606	ArgumentList			4855438	1					
ANR	4855607	Argument	'$'		4855438	1					
ANR	4855608	PrimaryExpression	'$'		4855438	0					
ANR	4855609	CompoundStatement		37:36:961:961	4855438	1					
ANR	4855610	Statement	dprintf	500:3:13670:13676	4855438	0	True				
ANR	4855611	Statement	(	500:10:13677:13677	4855438	1	True				
ANR	4855612	Statement	D_ALWAYS	500:11:13678:13685	4855438	2	True				
ANR	4855613	Statement	","	500:19:13686:13686	4855438	3	True				
ANR	4855614	Statement	"""MultiLogFiles: macros not allowed """	500:21:13688:13723	4855438	4	True				
ANR	4855615	Statement	"""in %s in DAG node submit files\\n"""	501:6:13731:13764	4855438	5	True				
ANR	4855616	Statement	","	501:40:13765:13765	4855438	6	True				
ANR	4855617	Statement	keyword	501:42:13767:13773	4855438	7	True				
ANR	4855618	Statement	)	501:49:13774:13774	4855438	8	True				
ANR	4855619	ExpressionStatement		501:50:13775:13775	4855438	9	True				
ANR	4855620	ExpressionStatement	"value = """""	502:3:13780:13790	4855438	10	True				
ANR	4855621	AssignmentExpression	"value = """""		4855438	0		=			
ANR	4855622	Identifier	value		4855438	0					
ANR	4855623	PrimaryExpression	""""""		4855438	1					
ANR	4855624	IfStatement	"if ( directory != """" )"		4855438	9					
ANR	4855625	Condition	"directory != """""	506:6:13806:13820	4855438	0	True				
ANR	4855626	EqualityExpression	"directory != """""		4855438	0		!=			
ANR	4855627	Identifier	directory		4855438	0					
ANR	4855628	PrimaryExpression	""""""		4855438	1					
ANR	4855629	CompoundStatement		45:2:1124:1139	4855438	1					
ANR	4855630	IdentifierDeclStatement	MyString errMsg ;	507:2:13828:13843	4855438	0	True				
ANR	4855631	IdentifierDecl	errMsg		4855438	0					
ANR	4855632	IdentifierDeclType	MyString		4855438	0					
ANR	4855633	Identifier	errMsg		4855438	1					
ANR	4855634	IfStatement	if ( ! td . Cd2MainDir ( errMsg ) )		4855438	1					
ANR	4855635	Condition	! td . Cd2MainDir ( errMsg )	508:7:13852:13873	4855438	0	True				
ANR	4855636	UnaryOperationExpression	! td . Cd2MainDir ( errMsg )		4855438	0					
ANR	4855637	UnaryOperator	!		4855438	0					
ANR	4855638	CallExpression	td . Cd2MainDir ( errMsg )		4855438	1					
ANR	4855639	Callee	td . Cd2MainDir		4855438	0					
ANR	4855640	MemberAccess	td . Cd2MainDir		4855438	0					
ANR	4855641	Identifier	td		4855438	0					
ANR	4855642	Identifier	Cd2MainDir		4855438	1					
ANR	4855643	ArgumentList	errMsg		4855438	1					
ANR	4855644	Argument	errMsg		4855438	0					
ANR	4855645	Identifier	errMsg		4855438	0					
ANR	4855646	CompoundStatement		46:32:1173:1173	4855438	1					
ANR	4855647	ExpressionStatement	"dprintf ( D_ALWAYS , ""Error from Cd2MainDir: %s\\n"" , errMsg . Value ( ) )"	509:3:13882:13946	4855438	0	True				
ANR	4855648	CallExpression	"dprintf ( D_ALWAYS , ""Error from Cd2MainDir: %s\\n"" , errMsg . Value ( ) )"		4855438	0					
ANR	4855649	Callee	dprintf		4855438	0					
ANR	4855650	Identifier	dprintf		4855438	0					
ANR	4855651	ArgumentList	D_ALWAYS		4855438	1					
ANR	4855652	Argument	D_ALWAYS		4855438	0					
ANR	4855653	Identifier	D_ALWAYS		4855438	0					
ANR	4855654	Argument	"""Error from Cd2MainDir: %s\\n"""		4855438	1					
ANR	4855655	PrimaryExpression	"""Error from Cd2MainDir: %s\\n"""		4855438	0					
ANR	4855656	Argument	errMsg . Value ( )		4855438	2					
ANR	4855657	CallExpression	errMsg . Value ( )		4855438	0					
ANR	4855658	Callee	errMsg . Value		4855438	0					
ANR	4855659	MemberAccess	errMsg . Value		4855438	0					
ANR	4855660	Identifier	errMsg		4855438	0					
ANR	4855661	Identifier	Value		4855438	1					
ANR	4855662	ArgumentList			4855438	1					
ANR	4855663	ReturnStatement	"return """" ;"	510:3:13951:13960	4855438	1	True				
ANR	4855664	PrimaryExpression	""""""		4855438	0					
ANR	4855665	ReturnStatement	return value ;	514:1:13971:13983	4855438	10	True				
ANR	4855666	Identifier	value		4855438	0					
ANR	4855667	ReturnType	MyString		4855438	1					
ANR	4855668	Identifier	MultiLogFiles :: loadValueFromSubFile		4855438	2					
ANR	4855669	ParameterList	"const MyString & strSubFilename , const MyString & directory , const char * keyword"		4855438	3					
ANR	4855670	Parameter	const MyString & strSubFilename	461:36:12621:12650	4855438	0	True				
ANR	4855671	ParameterType	const MyString &		4855438	0					
ANR	4855672	Identifier	strSubFilename		4855438	1					
ANR	4855673	Parameter	const MyString & directory	462:2:12655:12679	4855438	1	True				
ANR	4855674	ParameterType	const MyString &		4855438	0					
ANR	4855675	Identifier	directory		4855438	1					
ANR	4855676	Parameter	const char * keyword	462:29:12682:12700	4855438	2	True				
ANR	4855677	ParameterType	const char *		4855438	0					
ANR	4855678	Identifier	keyword		4855438	1					
ANR	4855679	CFGEntryNode	ENTRY		4855438		True				
ANR	4855680	CFGExitNode	EXIT		4855438		True				
ANR	4855681	Symbol	logicalLine		4855438						
ANR	4855682	Symbol	strSubFilename		4855438						
ANR	4855683	Symbol	directory . Value		4855438						
ANR	4855684	Symbol	logicalLines		4855438						
ANR	4855685	Symbol	NULL		4855438						
ANR	4855686	Symbol	td . Cd2MainDir		4855438						
ANR	4855687	Symbol	strSubFilename . Value		4855438						
ANR	4855688	Symbol	errMsg		4855438						
ANR	4855689	Symbol	D_ALWAYS		4855438						
ANR	4855690	Symbol	strchr		4855438						
ANR	4855691	Symbol	D_FULLDEBUG		4855438						
ANR	4855692	Symbol	directory		4855438						
ANR	4855693	Symbol	tmpValue		4855438						
ANR	4855694	Symbol	getParamFromSubmitLine		4855438						
ANR	4855695	Symbol	td . Cd2TmpDir		4855438						
ANR	4855696	Symbol	fileNameToLogicalLines		4855438						
ANR	4855697	Symbol	td		4855438						
ANR	4855698	Symbol	errMsg . Value		4855438						
ANR	4855699	Symbol	value . Value		4855438						
ANR	4855700	Symbol	logicalLines . next		4855438						
ANR	4855701	Symbol	keyword		4855438						
ANR	4855702	Symbol	value		4855438						
ANR	4855703	Symbol	submitLine		4855438						
ANR	4855704	Function	MultiLogFiles :: makePathAbsolute	519:0:14069:14640							
ANR	4855705	FunctionDef	"MultiLogFiles :: makePathAbsolute (MyString & filename , CondorError & errstack)"		4855704	0					
ANR	4855706	CompoundStatement		521:0:14149:14640	4855704	0					
ANR	4855707	IfStatement	if ( ! fullpath ( filename . Value ( ) ) )		4855704	0					
ANR	4855708	Condition	! fullpath ( filename . Value ( ) )	522:6:14157:14183	4855704	0	True				
ANR	4855709	UnaryOperationExpression	! fullpath ( filename . Value ( ) )		4855704	0					
ANR	4855710	UnaryOperator	!		4855704	0					
ANR	4855711	CallExpression	fullpath ( filename . Value ( ) )		4855704	1					
ANR	4855712	Callee	fullpath		4855704	0					
ANR	4855713	Identifier	fullpath		4855704	0					
ANR	4855714	ArgumentList	filename . Value ( )		4855704	1					
ANR	4855715	Argument	filename . Value ( )		4855704	0					
ANR	4855716	CallExpression	filename . Value ( )		4855704	0					
ANR	4855717	Callee	filename . Value		4855704	0					
ANR	4855718	MemberAccess	filename . Value		4855704	0					
ANR	4855719	Identifier	filename		4855704	0					
ANR	4855720	Identifier	Value		4855704	1					
ANR	4855721	ArgumentList			4855704	1					
ANR	4855722	CompoundStatement		5:2:164:183	4855704	1					
ANR	4855723	IdentifierDeclStatement	MyString currentDir ;	525:2:14314:14333	4855704	0	True				
ANR	4855724	IdentifierDecl	currentDir		4855704	0					
ANR	4855725	IdentifierDeclType	MyString		4855704	0					
ANR	4855726	Identifier	currentDir		4855704	1					
ANR	4855727	IfStatement	if ( ! condor_getcwd ( currentDir ) )		4855704	1					
ANR	4855728	Condition	! condor_getcwd ( currentDir )	526:7:14342:14367	4855704	0	True				
ANR	4855729	UnaryOperationExpression	! condor_getcwd ( currentDir )		4855704	0					
ANR	4855730	UnaryOperator	!		4855704	0					
ANR	4855731	CallExpression	condor_getcwd ( currentDir )		4855704	1					
ANR	4855732	Callee	condor_getcwd		4855704	0					
ANR	4855733	Identifier	condor_getcwd		4855704	0					
ANR	4855734	ArgumentList	currentDir		4855704	1					
ANR	4855735	Argument	currentDir		4855704	0					
ANR	4855736	Identifier	currentDir		4855704	0					
ANR	4855737	CompoundStatement		6:36:221:221	4855704	1					
ANR	4855738	ExpressionStatement	"errstack . pushf ( ""MultiLogFiles"" , UTIL_ERR_GET_CWD , ""ERROR: condor_getcwd() failed with errno %d (%s) at %s:%d"" , errno , strerror ( errno ) , __FILE__ , __LINE__ )"	527:3:14376:14543	4855704	0	True				
ANR	4855739	CallExpression	"errstack . pushf ( ""MultiLogFiles"" , UTIL_ERR_GET_CWD , ""ERROR: condor_getcwd() failed with errno %d (%s) at %s:%d"" , errno , strerror ( errno ) , __FILE__ , __LINE__ )"		4855704	0					
ANR	4855740	Callee	errstack . pushf		4855704	0					
ANR	4855741	MemberAccess	errstack . pushf		4855704	0					
ANR	4855742	Identifier	errstack		4855704	0					
ANR	4855743	Identifier	pushf		4855704	1					
ANR	4855744	ArgumentList	"""MultiLogFiles"""		4855704	1					
ANR	4855745	Argument	"""MultiLogFiles"""		4855704	0					
ANR	4855746	PrimaryExpression	"""MultiLogFiles"""		4855704	0					
ANR	4855747	Argument	UTIL_ERR_GET_CWD		4855704	1					
ANR	4855748	Identifier	UTIL_ERR_GET_CWD		4855704	0					
ANR	4855749	Argument	"""ERROR: condor_getcwd() failed with errno %d (%s) at %s:%d"""		4855704	2					
ANR	4855750	PrimaryExpression	"""ERROR: condor_getcwd() failed with errno %d (%s) at %s:%d"""		4855704	0					
ANR	4855751	Argument	errno		4855704	3					
ANR	4855752	Identifier	errno		4855704	0					
ANR	4855753	Argument	strerror ( errno )		4855704	4					
ANR	4855754	CallExpression	strerror ( errno )		4855704	0					
ANR	4855755	Callee	strerror		4855704	0					
ANR	4855756	Identifier	strerror		4855704	0					
ANR	4855757	ArgumentList	errno		4855704	1					
ANR	4855758	Argument	errno		4855704	0					
ANR	4855759	Identifier	errno		4855704	0					
ANR	4855760	Argument	__FILE__		4855704	5					
ANR	4855761	Identifier	__FILE__		4855704	0					
ANR	4855762	Argument	__LINE__		4855704	6					
ANR	4855763	Identifier	__LINE__		4855704	0					
ANR	4855764	ReturnStatement	return false ;	530:3:14548:14560	4855704	1	True				
ANR	4855765	Identifier	false		4855704	0					
ANR	4855766	ExpressionStatement	filename = currentDir + DIR_DELIM_STRING + filename	533:2:14569:14620	4855704	2	True				
ANR	4855767	AssignmentExpression	filename = currentDir + DIR_DELIM_STRING + filename		4855704	0		=			
ANR	4855768	Identifier	filename		4855704	0					
ANR	4855769	AdditiveExpression	currentDir + DIR_DELIM_STRING + filename		4855704	1		+			
ANR	4855770	Identifier	currentDir		4855704	0					
ANR	4855771	AdditiveExpression	DIR_DELIM_STRING + filename		4855704	1		+			
ANR	4855772	Identifier	DIR_DELIM_STRING		4855704	0					
ANR	4855773	Identifier	filename		4855704	1					
ANR	4855774	ReturnStatement	return true ;	536:1:14627:14638	4855704	1	True				
ANR	4855775	Identifier	true		4855704	0					
ANR	4855776	ReturnType	bool		4855704	1					
ANR	4855777	Identifier	MultiLogFiles :: makePathAbsolute		4855704	2					
ANR	4855778	ParameterList	"MyString & filename , CondorError & errstack"		4855704	3					
ANR	4855779	Parameter	MyString & filename	520:32:14106:14123	4855704	0	True				
ANR	4855780	ParameterType	MyString &		4855704	0					
ANR	4855781	Identifier	filename		4855704	1					
ANR	4855782	Parameter	CondorError & errstack	520:52:14126:14146	4855704	1	True				
ANR	4855783	ParameterType	CondorError &		4855704	0					
ANR	4855784	Identifier	errstack		4855704	1					
ANR	4855785	CFGEntryNode	ENTRY		4855704		True				
ANR	4855786	CFGExitNode	EXIT		4855704		True				
ANR	4855787	Symbol	DIR_DELIM_STRING		4855704						
ANR	4855788	Symbol	errno		4855704						
ANR	4855789	Symbol	currentDir		4855704						
ANR	4855790	Symbol	condor_getcwd		4855704						
ANR	4855791	Symbol	__FILE__		4855704						
ANR	4855792	Symbol	false		4855704						
ANR	4855793	Symbol	filename . Value		4855704						
ANR	4855794	Symbol	__LINE__		4855704						
ANR	4855795	Symbol	strerror		4855704						
ANR	4855796	Symbol	filename		4855704						
ANR	4855797	Symbol	errstack		4855704						
ANR	4855798	Symbol	fullpath		4855704						
ANR	4855799	Symbol	UTIL_ERR_GET_CWD		4855704						
ANR	4855800	Symbol	true		4855704						
ANR	4855801	Function	MultiLogFiles :: skip_whitespace	542:0:14768:14903							
ANR	4855802	FunctionDef	"MultiLogFiles :: skip_whitespace (std :: string const & s , int & offset)"		4855801	0					
ANR	4855803	CompoundStatement		543:65:14838:14903	4855801	0					
ANR	4855804	WhileStatement	while ( ( int ) s . size ( ) > offset && isspace ( s [ offset ] ) )		4855801	0					
ANR	4855805	Condition	( int ) s . size ( ) > offset && isspace ( s [ offset ] )	544:7:14847:14890	4855801	0	True				
ANR	4855806	AndExpression	( int ) s . size ( ) > offset && isspace ( s [ offset ] )		4855801	0		&&			
ANR	4855807	RelationalExpression	( int ) s . size ( ) > offset		4855801	0		>			
ANR	4855808	CastExpression	( int ) s . size ( )		4855801	0					
ANR	4855809	CastTarget	int		4855801	0					
ANR	4855810	CallExpression	s . size ( )		4855801	1					
ANR	4855811	Callee	s . size		4855801	0					
ANR	4855812	MemberAccess	s . size		4855801	0					
ANR	4855813	Identifier	s		4855801	0					
ANR	4855814	Identifier	size		4855801	1					
ANR	4855815	ArgumentList			4855801	1					
ANR	4855816	Identifier	offset		4855801	1					
ANR	4855817	CallExpression	isspace ( s [ offset ] )		4855801	1					
ANR	4855818	Callee	isspace		4855801	0					
ANR	4855819	Identifier	isspace		4855801	0					
ANR	4855820	ArgumentList	s [ offset ]		4855801	1					
ANR	4855821	Argument	s [ offset ]		4855801	0					
ANR	4855822	ArrayIndexing	s [ offset ]		4855801	0					
ANR	4855823	Identifier	s		4855801	0					
ANR	4855824	Identifier	offset		4855801	1					
ANR	4855825	ExpressionStatement	offset ++	544:53:14893:14901	4855801	1	True				
ANR	4855826	PostIncDecOperationExpression	offset ++		4855801	0					
ANR	4855827	Identifier	offset		4855801	0					
ANR	4855828	IncDec	++		4855801	1					
ANR	4855829	ReturnType	void		4855801	1					
ANR	4855830	Identifier	MultiLogFiles :: skip_whitespace		4855801	2					
ANR	4855831	ParameterList	"std :: string const & s , int & offset"		4855801	3					
ANR	4855832	Parameter	std :: string const & s	543:31:14804:14823	4855801	0	True				
ANR	4855833	ParameterType	std :: string const &		4855801	0					
ANR	4855834	Identifier	s		4855801	1					
ANR	4855835	Parameter	int & offset	543:52:14825:14835	4855801	1	True				
ANR	4855836	ParameterType	int &		4855801	0					
ANR	4855837	Identifier	offset		4855801	1					
ANR	4855838	CFGEntryNode	ENTRY		4855801		True				
ANR	4855839	CFGExitNode	EXIT		4855801		True				
ANR	4855840	Symbol	s		4855801						
ANR	4855841	Symbol	offset		4855801						
ANR	4855842	Symbol	s . size		4855801						
ANR	4855843	Symbol	isspace		4855801						
ANR	4855844	Symbol	* offset		4855801						
ANR	4855845	Symbol	* s		4855801						
ANR	4855846	Function	MultiLogFiles :: readFile	548:0:14966:15747							
ANR	4855847	FunctionDef	"MultiLogFiles :: readFile (char const * filename , std :: string & buf)"		4855846	0					
ANR	4855848	CompoundStatement		550:0:15038:15747	4855846	0					
ANR	4855849	IdentifierDeclStatement	char chunk [ 4000 ] ;	551:4:15044:15060	4855846	0	True				
ANR	4855850	IdentifierDecl	chunk [ 4000 ]		4855846	0					
ANR	4855851	IdentifierDeclType	char [ 4000 ]		4855846	0					
ANR	4855852	Identifier	chunk		4855846	1					
ANR	4855853	PrimaryExpression	4000		4855846	2					
ANR	4855854	IdentifierDeclStatement	MyString rtnVal ;	552:1:15063:15078	4855846	1	True				
ANR	4855855	IdentifierDecl	rtnVal		4855846	0					
ANR	4855856	IdentifierDeclType	MyString		4855846	0					
ANR	4855857	Identifier	rtnVal		4855846	1					
ANR	4855858	IdentifierDeclStatement	"int fd = safe_open_wrapper_follow ( filename , O_RDONLY ) ;"	554:1:15082:15135	4855846	2	True				
ANR	4855859	IdentifierDecl	"fd = safe_open_wrapper_follow ( filename , O_RDONLY )"		4855846	0					
ANR	4855860	IdentifierDeclType	int		4855846	0					
ANR	4855861	Identifier	fd		4855846	1					
ANR	4855862	AssignmentExpression	"fd = safe_open_wrapper_follow ( filename , O_RDONLY )"		4855846	2		=			
ANR	4855863	Identifier	fd		4855846	0					
ANR	4855864	CallExpression	"safe_open_wrapper_follow ( filename , O_RDONLY )"		4855846	1					
ANR	4855865	Callee	safe_open_wrapper_follow		4855846	0					
ANR	4855866	Identifier	safe_open_wrapper_follow		4855846	0					
ANR	4855867	ArgumentList	filename		4855846	1					
ANR	4855868	Argument	filename		4855846	0					
ANR	4855869	Identifier	filename		4855846	0					
ANR	4855870	Argument	O_RDONLY		4855846	1					
ANR	4855871	Identifier	O_RDONLY		4855846	0					
ANR	4855872	IfStatement	if ( fd < 0 )		4855846	3					
ANR	4855873	Condition	fd < 0	555:5:15142:15147	4855846	0	True				
ANR	4855874	RelationalExpression	fd < 0		4855846	0		<			
ANR	4855875	Identifier	fd		4855846	0					
ANR	4855876	PrimaryExpression	0		4855846	1					
ANR	4855877	CompoundStatement		6:13:111:111	4855846	1					
ANR	4855878	ExpressionStatement	"rtnVal . sprintf ( ""error opening submit file %s: %s"" , filename , strerror ( errno ) )"	556:2:15154:15236	4855846	0	True				
ANR	4855879	CallExpression	"rtnVal . sprintf ( ""error opening submit file %s: %s"" , filename , strerror ( errno ) )"		4855846	0					
ANR	4855880	Callee	rtnVal . sprintf		4855846	0					
ANR	4855881	MemberAccess	rtnVal . sprintf		4855846	0					
ANR	4855882	Identifier	rtnVal		4855846	0					
ANR	4855883	Identifier	sprintf		4855846	1					
ANR	4855884	ArgumentList	"""error opening submit file %s: %s"""		4855846	1					
ANR	4855885	Argument	"""error opening submit file %s: %s"""		4855846	0					
ANR	4855886	PrimaryExpression	"""error opening submit file %s: %s"""		4855846	0					
ANR	4855887	Argument	filename		4855846	1					
ANR	4855888	Identifier	filename		4855846	0					
ANR	4855889	Argument	strerror ( errno )		4855846	2					
ANR	4855890	CallExpression	strerror ( errno )		4855846	0					
ANR	4855891	Callee	strerror		4855846	0					
ANR	4855892	Identifier	strerror		4855846	0					
ANR	4855893	ArgumentList	errno		4855846	1					
ANR	4855894	Argument	errno		4855846	0					
ANR	4855895	Identifier	errno		4855846	0					
ANR	4855896	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s\\n"" , rtnVal . Value ( ) )"	558:2:15240:15282	4855846	1	True				
ANR	4855897	CallExpression	"dprintf ( D_ALWAYS , ""%s\\n"" , rtnVal . Value ( ) )"		4855846	0					
ANR	4855898	Callee	dprintf		4855846	0					
ANR	4855899	Identifier	dprintf		4855846	0					
ANR	4855900	ArgumentList	D_ALWAYS		4855846	1					
ANR	4855901	Argument	D_ALWAYS		4855846	0					
ANR	4855902	Identifier	D_ALWAYS		4855846	0					
ANR	4855903	Argument	"""%s\\n"""		4855846	1					
ANR	4855904	PrimaryExpression	"""%s\\n"""		4855846	0					
ANR	4855905	Argument	rtnVal . Value ( )		4855846	2					
ANR	4855906	CallExpression	rtnVal . Value ( )		4855846	0					
ANR	4855907	Callee	rtnVal . Value		4855846	0					
ANR	4855908	MemberAccess	rtnVal . Value		4855846	0					
ANR	4855909	Identifier	rtnVal		4855846	0					
ANR	4855910	Identifier	Value		4855846	1					
ANR	4855911	ArgumentList			4855846	1					
ANR	4855912	ReturnStatement	return rtnVal ;	559:2:15286:15299	4855846	2	True				
ANR	4855913	Identifier	rtnVal		4855846	0					
ANR	4855914	WhileStatement	while ( 1 )		4855846	4					
ANR	4855915	Condition	1	562:10:15315:15315	4855846	0	True				
ANR	4855916	PrimaryExpression	1		4855846	0					
ANR	4855917	CompoundStatement		14:8:289:330	4855846	1					
ANR	4855918	IdentifierDeclStatement	"size_t n = read ( fd , chunk , sizeof ( chunk ) - 1 ) ;"	563:8:15328:15369	4855846	0	True				
ANR	4855919	IdentifierDecl	"n = read ( fd , chunk , sizeof ( chunk ) - 1 )"		4855846	0					
ANR	4855920	IdentifierDeclType	size_t		4855846	0					
ANR	4855921	Identifier	n		4855846	1					
ANR	4855922	AssignmentExpression	"n = read ( fd , chunk , sizeof ( chunk ) - 1 )"		4855846	2		=			
ANR	4855923	Identifier	n		4855846	0					
ANR	4855924	CallExpression	"read ( fd , chunk , sizeof ( chunk ) - 1 )"		4855846	1					
ANR	4855925	Callee	read		4855846	0					
ANR	4855926	Identifier	read		4855846	0					
ANR	4855927	ArgumentList	fd		4855846	1					
ANR	4855928	Argument	fd		4855846	0					
ANR	4855929	Identifier	fd		4855846	0					
ANR	4855930	Argument	chunk		4855846	1					
ANR	4855931	Identifier	chunk		4855846	0					
ANR	4855932	Argument	sizeof ( chunk ) - 1		4855846	2					
ANR	4855933	AdditiveExpression	sizeof ( chunk ) - 1		4855846	0		-			
ANR	4855934	SizeofExpression	sizeof ( chunk )		4855846	0					
ANR	4855935	Sizeof	sizeof		4855846	0					
ANR	4855936	SizeofOperand	chunk		4855846	1					
ANR	4855937	PrimaryExpression	1		4855846	1					
ANR	4855938	IfStatement	if ( n > 0 )		4855846	1					
ANR	4855939	Condition	n > 0	564:11:15382:15384	4855846	0	True				
ANR	4855940	RelationalExpression	n > 0		4855846	0		>			
ANR	4855941	Identifier	n		4855846	0					
ANR	4855942	PrimaryExpression	0		4855846	1					
ANR	4855943	CompoundStatement		15:16:348:348	4855846	1					
ANR	4855944	ExpressionStatement	chunk [ n ] = '\\0'	565:12:15401:15416	4855846	0	True				
ANR	4855945	AssignmentExpression	chunk [ n ] = '\\0'		4855846	0		=			
ANR	4855946	ArrayIndexing	chunk [ n ]		4855846	0					
ANR	4855947	Identifier	chunk		4855846	0					
ANR	4855948	Identifier	n		4855846	1					
ANR	4855949	PrimaryExpression	'\\0'		4855846	1					
ANR	4855950	ExpressionStatement	buf += chunk	566:12:15430:15442	4855846	1	True				
ANR	4855951	AssignmentExpression	buf += chunk		4855846	0		+=			
ANR	4855952	Identifier	buf		4855846	0					
ANR	4855953	Identifier	chunk		4855846	1					
ANR	4855954	ElseStatement	else		4855846	0					
ANR	4855955	IfStatement	if ( n == 0 )		4855846	0					
ANR	4855956	Condition	n == 0	568:16:15470:15473	4855846	0	True				
ANR	4855957	EqualityExpression	n == 0		4855846	0		==			
ANR	4855958	Identifier	n		4855846	0					
ANR	4855959	PrimaryExpression	0		4855846	1					
ANR	4855960	CompoundStatement		19:22:437:437	4855846	1					
ANR	4855961	BreakStatement	break ;	569:12:15490:15495	4855846	0	True				
ANR	4855962	ElseStatement	else		4855846	0					
ANR	4855963	CompoundStatement		22:13:481:481	4855846	0					
ANR	4855964	ExpressionStatement	"rtnVal . sprintf ( ""failed to read submit file %s: %s"" , filename , strerror ( errno ) )"	572:12:15534:15618	4855846	0	True				
ANR	4855965	CallExpression	"rtnVal . sprintf ( ""failed to read submit file %s: %s"" , filename , strerror ( errno ) )"		4855846	0					
ANR	4855966	Callee	rtnVal . sprintf		4855846	0					
ANR	4855967	MemberAccess	rtnVal . sprintf		4855846	0					
ANR	4855968	Identifier	rtnVal		4855846	0					
ANR	4855969	Identifier	sprintf		4855846	1					
ANR	4855970	ArgumentList	"""failed to read submit file %s: %s"""		4855846	1					
ANR	4855971	Argument	"""failed to read submit file %s: %s"""		4855846	0					
ANR	4855972	PrimaryExpression	"""failed to read submit file %s: %s"""		4855846	0					
ANR	4855973	Argument	filename		4855846	1					
ANR	4855974	Identifier	filename		4855846	0					
ANR	4855975	Argument	strerror ( errno )		4855846	2					
ANR	4855976	CallExpression	strerror ( errno )		4855846	0					
ANR	4855977	Callee	strerror		4855846	0					
ANR	4855978	Identifier	strerror		4855846	0					
ANR	4855979	ArgumentList	errno		4855846	1					
ANR	4855980	Argument	errno		4855846	0					
ANR	4855981	Identifier	errno		4855846	0					
ANR	4855982	ExpressionStatement	"dprintf ( D_ALWAYS , ""%s\\n"" , rtnVal . Value ( ) )"	574:3:15623:15665	4855846	1	True				
ANR	4855983	CallExpression	"dprintf ( D_ALWAYS , ""%s\\n"" , rtnVal . Value ( ) )"		4855846	0					
ANR	4855984	Callee	dprintf		4855846	0					
ANR	4855985	Identifier	dprintf		4855846	0					
ANR	4855986	ArgumentList	D_ALWAYS		4855846	1					
ANR	4855987	Argument	D_ALWAYS		4855846	0					
ANR	4855988	Identifier	D_ALWAYS		4855846	0					
ANR	4855989	Argument	"""%s\\n"""		4855846	1					
ANR	4855990	PrimaryExpression	"""%s\\n"""		4855846	0					
ANR	4855991	Argument	rtnVal . Value ( )		4855846	2					
ANR	4855992	CallExpression	rtnVal . Value ( )		4855846	0					
ANR	4855993	Callee	rtnVal . Value		4855846	0					
ANR	4855994	MemberAccess	rtnVal . Value		4855846	0					
ANR	4855995	Identifier	rtnVal		4855846	0					
ANR	4855996	Identifier	Value		4855846	1					
ANR	4855997	ArgumentList			4855846	1					
ANR	4855998	ExpressionStatement	close ( fd )	575:3:15670:15679	4855846	2	True				
ANR	4855999	CallExpression	close ( fd )		4855846	0					
ANR	4856000	Callee	close		4855846	0					
ANR	4856001	Identifier	close		4855846	0					
ANR	4856002	ArgumentList	fd		4855846	1					
ANR	4856003	Argument	fd		4855846	0					
ANR	4856004	Identifier	fd		4855846	0					
ANR	4856005	ReturnStatement	return rtnVal ;	576:3:15684:15697	4855846	3	True				
ANR	4856006	Identifier	rtnVal		4855846	0					
ANR	4856007	ExpressionStatement	close ( fd )	580:1:15717:15726	4855846	5	True				
ANR	4856008	CallExpression	close ( fd )		4855846	0					
ANR	4856009	Callee	close		4855846	0					
ANR	4856010	Identifier	close		4855846	0					
ANR	4856011	ArgumentList	fd		4855846	1					
ANR	4856012	Argument	fd		4855846	0					
ANR	4856013	Identifier	fd		4855846	0					
ANR	4856014	ReturnStatement	return rtnVal ;	581:4:15732:15745	4855846	6	True				
ANR	4856015	Identifier	rtnVal		4855846	0					
ANR	4856016	ReturnType	MyString		4855846	1					
ANR	4856017	Identifier	MultiLogFiles :: readFile		4855846	2					
ANR	4856018	ParameterList	"char const * filename , std :: string & buf"		4855846	3					
ANR	4856019	Parameter	char const * filename	549:24:14999:15018	4855846	0	True				
ANR	4856020	ParameterType	char const *		4855846	0					
ANR	4856021	Identifier	filename		4855846	1					
ANR	4856022	Parameter	std :: string & buf	549:45:15020:15035	4855846	1	True				
ANR	4856023	ParameterType	std :: string &		4855846	0					
ANR	4856024	Identifier	buf		4855846	1					
ANR	4856025	CFGEntryNode	ENTRY		4855846		True				
ANR	4856026	CFGExitNode	EXIT		4855846		True				
ANR	4856027	Symbol	errno		4855846						
ANR	4856028	Symbol	safe_open_wrapper_follow		4855846						
ANR	4856029	Symbol	read		4855846						
ANR	4856030	Symbol	D_ALWAYS		4855846						
ANR	4856031	Symbol	chunk		4855846						
ANR	4856032	Symbol	rtnVal		4855846						
ANR	4856033	Symbol	n		4855846						
ANR	4856034	Symbol	strerror		4855846						
ANR	4856035	Symbol	buf		4855846						
ANR	4856036	Symbol	filename		4855846						
ANR	4856037	Symbol	O_RDONLY		4855846						
ANR	4856038	Symbol	rtnVal . Value		4855846						
ANR	4856039	Symbol	* chunk		4855846						
ANR	4856040	Symbol	* n		4855846						
ANR	4856041	Symbol	fd		4855846						
ANR	4856042	Function	MultiLogFiles :: loadLogFileNamesFromStorkSubFile	585:0:15798:18690							
ANR	4856043	FunctionDef	"MultiLogFiles :: loadLogFileNamesFromStorkSubFile (const MyString & strSubFilename , const MyString & directory , StringList & listLogFilenames)"		4856042	0					
ANR	4856044	CompoundStatement		590:0:15951:18690	4856042	0					
ANR	4856045	IdentifierDeclStatement	MyString rtnVal ;	591:1:15954:15969	4856042	0	True				
ANR	4856046	IdentifierDecl	rtnVal		4856042	0					
ANR	4856047	IdentifierDeclType	MyString		4856042	0					
ANR	4856048	Identifier	rtnVal		4856042	1					
ANR	4856049	IdentifierDeclStatement	MyString path ;	592:1:15972:15985	4856042	1	True				
ANR	4856050	IdentifierDecl	path		4856042	0					
ANR	4856051	IdentifierDeclType	MyString		4856042	0					
ANR	4856052	Identifier	path		4856042	1					
ANR	4856053	IdentifierDeclStatement	std :: string adBuf ;	593:1:15988:16005	4856042	2	True				
ANR	4856054	IdentifierDecl	adBuf		4856042	0					
ANR	4856055	IdentifierDeclType	std :: string		4856042	0					
ANR	4856056	Identifier	adBuf		4856042	1					
ANR	4856057	IdentifierDeclStatement	classad :: ClassAdParser parser ;	594:1:16008:16037	4856042	3	True				
ANR	4856058	IdentifierDecl	parser		4856042	0					
ANR	4856059	IdentifierDeclType	classad :: ClassAdParser		4856042	0					
ANR	4856060	Identifier	parser		4856042	1					
ANR	4856061	IdentifierDeclStatement	classad :: PrettyPrint unparser ;	595:1:16040:16069	4856042	4	True				
ANR	4856062	IdentifierDecl	unparser		4856042	0					
ANR	4856063	IdentifierDeclType	classad :: PrettyPrint		4856042	0					
ANR	4856064	Identifier	unparser		4856042	1					
ANR	4856065	IdentifierDeclStatement	std :: string unparsed ;	596:1:16072:16092	4856042	5	True				
ANR	4856066	IdentifierDecl	unparsed		4856042	0					
ANR	4856067	IdentifierDeclType	std :: string		4856042	0					
ANR	4856068	Identifier	unparsed		4856042	1					
ANR	4856069	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""MultiLogFiles::loadLogFileNamesFromStorkSubFile(%s, %s)\\n"" , strSubFilename . Value ( ) , directory . Value ( ) )"	598:1:16096:16229	4856042	6	True				
ANR	4856070	CallExpression	"dprintf ( D_FULLDEBUG , ""MultiLogFiles::loadLogFileNamesFromStorkSubFile(%s, %s)\\n"" , strSubFilename . Value ( ) , directory . Value ( ) )"		4856042	0					
ANR	4856071	Callee	dprintf		4856042	0					
ANR	4856072	Identifier	dprintf		4856042	0					
ANR	4856073	ArgumentList	D_FULLDEBUG		4856042	1					
ANR	4856074	Argument	D_FULLDEBUG		4856042	0					
ANR	4856075	Identifier	D_FULLDEBUG		4856042	0					
ANR	4856076	Argument	"""MultiLogFiles::loadLogFileNamesFromStorkSubFile(%s, %s)\\n"""		4856042	1					
ANR	4856077	PrimaryExpression	"""MultiLogFiles::loadLogFileNamesFromStorkSubFile(%s, %s)\\n"""		4856042	0					
ANR	4856078	Argument	strSubFilename . Value ( )		4856042	2					
ANR	4856079	CallExpression	strSubFilename . Value ( )		4856042	0					
ANR	4856080	Callee	strSubFilename . Value		4856042	0					
ANR	4856081	MemberAccess	strSubFilename . Value		4856042	0					
ANR	4856082	Identifier	strSubFilename		4856042	0					
ANR	4856083	Identifier	Value		4856042	1					
ANR	4856084	ArgumentList			4856042	1					
ANR	4856085	Argument	directory . Value ( )		4856042	3					
ANR	4856086	CallExpression	directory . Value ( )		4856042	0					
ANR	4856087	Callee	directory . Value		4856042	0					
ANR	4856088	MemberAccess	directory . Value		4856042	0					
ANR	4856089	Identifier	directory		4856042	0					
ANR	4856090	Identifier	Value		4856042	1					
ANR	4856091	ArgumentList			4856042	1					
ANR	4856092	IfStatement	if ( directory . Length ( ) > 0 )		4856042	7					
ANR	4856093	Condition	directory . Length ( ) > 0	603:6:16302:16323	4856042	0	True				
ANR	4856094	RelationalExpression	directory . Length ( ) > 0		4856042	0		>			
ANR	4856095	CallExpression	directory . Length ( )		4856042	0					
ANR	4856096	Callee	directory . Length		4856042	0					
ANR	4856097	MemberAccess	directory . Length		4856042	0					
ANR	4856098	Identifier	directory		4856042	0					
ANR	4856099	Identifier	Length		4856042	1					
ANR	4856100	ArgumentList			4856042	1					
ANR	4856101	PrimaryExpression	0		4856042	1					
ANR	4856102	CompoundStatement		14:31:375:375	4856042	1					
ANR	4856103	ExpressionStatement	path = directory + DIR_DELIM_STRING	604:2:16331:16366	4856042	0	True				
ANR	4856104	AssignmentExpression	path = directory + DIR_DELIM_STRING		4856042	0		=			
ANR	4856105	Identifier	path		4856042	0					
ANR	4856106	AdditiveExpression	directory + DIR_DELIM_STRING		4856042	1		+			
ANR	4856107	Identifier	directory		4856042	0					
ANR	4856108	Identifier	DIR_DELIM_STRING		4856042	1					
ANR	4856109	ExpressionStatement	path += strSubFilename	606:1:16372:16394	4856042	8	True				
ANR	4856110	AssignmentExpression	path += strSubFilename		4856042	0		+=			
ANR	4856111	Identifier	path		4856042	0					
ANR	4856112	Identifier	strSubFilename		4856042	1					
ANR	4856113	ExpressionStatement	"rtnVal = MultiLogFiles :: readFile ( path . Value ( ) , adBuf )"	610:1:16503:16557	4856042	9	True				
ANR	4856114	AssignmentExpression	"rtnVal = MultiLogFiles :: readFile ( path . Value ( ) , adBuf )"		4856042	0		=			
ANR	4856115	Identifier	rtnVal		4856042	0					
ANR	4856116	CallExpression	"MultiLogFiles :: readFile ( path . Value ( ) , adBuf )"		4856042	1					
ANR	4856117	Callee	MultiLogFiles :: readFile		4856042	0					
ANR	4856118	Identifier	MultiLogFiles :: readFile		4856042	0					
ANR	4856119	ArgumentList	path . Value ( )		4856042	1					
ANR	4856120	Argument	path . Value ( )		4856042	0					
ANR	4856121	CallExpression	path . Value ( )		4856042	0					
ANR	4856122	Callee	path . Value		4856042	0					
ANR	4856123	MemberAccess	path . Value		4856042	0					
ANR	4856124	Identifier	path		4856042	0					
ANR	4856125	Identifier	Value		4856042	1					
ANR	4856126	ArgumentList			4856042	1					
ANR	4856127	Argument	adBuf		4856042	1					
ANR	4856128	Identifier	adBuf		4856042	0					
ANR	4856129	IfStatement	if ( rtnVal . Length ( ) > 0 )		4856042	10					
ANR	4856130	Condition	rtnVal . Length ( ) > 0	611:5:16564:16582	4856042	0	True				
ANR	4856131	RelationalExpression	rtnVal . Length ( ) > 0		4856042	0		>			
ANR	4856132	CallExpression	rtnVal . Length ( )		4856042	0					
ANR	4856133	Callee	rtnVal . Length		4856042	0					
ANR	4856134	MemberAccess	rtnVal . Length		4856042	0					
ANR	4856135	Identifier	rtnVal		4856042	0					
ANR	4856136	Identifier	Length		4856042	1					
ANR	4856137	ArgumentList			4856042	1					
ANR	4856138	PrimaryExpression	0		4856042	1					
ANR	4856139	CompoundStatement		22:27:634:634	4856042	1					
ANR	4856140	ReturnStatement	return rtnVal ;	612:2:16590:16603	4856042	0	True				
ANR	4856141	Identifier	rtnVal		4856042	0					
ANR	4856142	IdentifierDeclStatement	int offset = 0 ;	616:4:16657:16671	4856042	11	True				
ANR	4856143	IdentifierDecl	offset = 0		4856042	0					
ANR	4856144	IdentifierDeclType	int		4856042	0					
ANR	4856145	Identifier	offset		4856042	1					
ANR	4856146	AssignmentExpression	offset = 0		4856042	2		=			
ANR	4856147	Identifier	offset		4856042	0					
ANR	4856148	PrimaryExpression	0		4856042	1					
ANR	4856149	IdentifierDeclStatement	classad :: ClassAd ad ;	617:4:16677:16696	4856042	12	True				
ANR	4856150	IdentifierDecl	ad		4856042	0					
ANR	4856151	IdentifierDeclType	classad :: ClassAd		4856042	0					
ANR	4856152	Identifier	ad		4856042	1					
ANR	4856153	ExpressionStatement	"skip_whitespace ( adBuf , offset )"	621:1:16792:16821	4856042	13	True				
ANR	4856154	CallExpression	"skip_whitespace ( adBuf , offset )"		4856042	0					
ANR	4856155	Callee	skip_whitespace		4856042	0					
ANR	4856156	Identifier	skip_whitespace		4856042	0					
ANR	4856157	ArgumentList	adBuf		4856042	1					
ANR	4856158	Argument	adBuf		4856042	0					
ANR	4856159	Identifier	adBuf		4856042	0					
ANR	4856160	Argument	offset		4856042	1					
ANR	4856161	Identifier	offset		4856042	0					
ANR	4856162	WhileStatement	"while ( parser . ParseClassAd ( adBuf , ad , offset ) )"		4856042	14					
ANR	4856163	Condition	"parser . ParseClassAd ( adBuf , ad , offset )"	622:11:16874:16911	4856042	0	True				
ANR	4856164	CallExpression	"parser . ParseClassAd ( adBuf , ad , offset )"		4856042	0					
ANR	4856165	Callee	parser . ParseClassAd		4856042	0					
ANR	4856166	MemberAccess	parser . ParseClassAd		4856042	0					
ANR	4856167	Identifier	parser		4856042	0					
ANR	4856168	Identifier	ParseClassAd		4856042	1					
ANR	4856169	ArgumentList	adBuf		4856042	1					
ANR	4856170	Argument	adBuf		4856042	0					
ANR	4856171	Identifier	adBuf		4856042	0					
ANR	4856172	Argument	ad		4856042	1					
ANR	4856173	Identifier	ad		4856042	0					
ANR	4856174	Argument	offset		4856042	2					
ANR	4856175	Identifier	offset		4856042	0					
ANR	4856176	CompoundStatement		81:2:2360:2387	4856042	1					
ANR	4856177	IdentifierDeclStatement	std :: string logfile ;	623:2:16919:16938	4856042	0	True				
ANR	4856178	IdentifierDecl	logfile		4856042	0					
ANR	4856179	IdentifierDeclType	std :: string		4856042	0					
ANR	4856180	Identifier	logfile		4856042	1					
ANR	4856181	IfStatement	"if ( ! ad . EvaluateAttrString ( ""log"" , logfile ) )"		4856042	1					
ANR	4856182	Condition	"! ad . EvaluateAttrString ( ""log"" , logfile )"	627:7:17031:17069	4856042	0	True				
ANR	4856183	UnaryOperationExpression	"! ad . EvaluateAttrString ( ""log"" , logfile )"		4856042	0					
ANR	4856184	UnaryOperator	!		4856042	0					
ANR	4856185	CallExpression	"ad . EvaluateAttrString ( ""log"" , logfile )"		4856042	1					
ANR	4856186	Callee	ad . EvaluateAttrString		4856042	0					
ANR	4856187	MemberAccess	ad . EvaluateAttrString		4856042	0					
ANR	4856188	Identifier	ad		4856042	0					
ANR	4856189	Identifier	EvaluateAttrString		4856042	1					
ANR	4856190	ArgumentList	"""log"""		4856042	1					
ANR	4856191	Argument	"""log"""		4856042	0					
ANR	4856192	PrimaryExpression	"""log"""		4856042	0					
ANR	4856193	Argument	logfile		4856042	1					
ANR	4856194	Identifier	logfile		4856042	0					
ANR	4856195	CompoundStatement		38:49:1121:1121	4856042	1					
ANR	4856196	ContinueStatement	continue ;	629:3:17106:17114	4856042	0	True				
ANR	4856197	IfStatement	if ( logfile . empty ( ) )		4856042	2					
ANR	4856198	Condition	logfile . empty ( )	633:7:17161:17175	4856042	0	True				
ANR	4856199	CallExpression	logfile . empty ( )		4856042	0					
ANR	4856200	Callee	logfile . empty		4856042	0					
ANR	4856201	MemberAccess	logfile . empty		4856042	0					
ANR	4856202	Identifier	logfile		4856042	0					
ANR	4856203	Identifier	empty		4856042	1					
ANR	4856204	ArgumentList			4856042	1					
ANR	4856205	CompoundStatement		44:25:1227:1227	4856042	1					
ANR	4856206	ExpressionStatement	"unparser . Unparse ( unparsed , & ad )"	634:3:17184:17216	4856042	0	True				
ANR	4856207	CallExpression	"unparser . Unparse ( unparsed , & ad )"		4856042	0					
ANR	4856208	Callee	unparser . Unparse		4856042	0					
ANR	4856209	MemberAccess	unparser . Unparse		4856042	0					
ANR	4856210	Identifier	unparser		4856042	0					
ANR	4856211	Identifier	Unparse		4856042	1					
ANR	4856212	ArgumentList	unparsed		4856042	1					
ANR	4856213	Argument	unparsed		4856042	0					
ANR	4856214	Identifier	unparsed		4856042	0					
ANR	4856215	Argument	& ad		4856042	1					
ANR	4856216	UnaryOperationExpression	& ad		4856042	0					
ANR	4856217	UnaryOperator	&		4856042	0					
ANR	4856218	Identifier	ad		4856042	1					
ANR	4856219	ExpressionStatement	"rtnVal . sprintf ( ""Stork job specifies null log file:%s"" , unparsed . c_str ( ) )"	635:3:17221:17299	4856042	1	True				
ANR	4856220	CallExpression	"rtnVal . sprintf ( ""Stork job specifies null log file:%s"" , unparsed . c_str ( ) )"		4856042	0					
ANR	4856221	Callee	rtnVal . sprintf		4856042	0					
ANR	4856222	MemberAccess	rtnVal . sprintf		4856042	0					
ANR	4856223	Identifier	rtnVal		4856042	0					
ANR	4856224	Identifier	sprintf		4856042	1					
ANR	4856225	ArgumentList	"""Stork job specifies null log file:%s"""		4856042	1					
ANR	4856226	Argument	"""Stork job specifies null log file:%s"""		4856042	0					
ANR	4856227	PrimaryExpression	"""Stork job specifies null log file:%s"""		4856042	0					
ANR	4856228	Argument	unparsed . c_str ( )		4856042	1					
ANR	4856229	CallExpression	unparsed . c_str ( )		4856042	0					
ANR	4856230	Callee	unparsed . c_str		4856042	0					
ANR	4856231	MemberAccess	unparsed . c_str		4856042	0					
ANR	4856232	Identifier	unparsed		4856042	0					
ANR	4856233	Identifier	c_str		4856042	1					
ANR	4856234	ArgumentList			4856042	1					
ANR	4856235	ReturnStatement	return rtnVal ;	637:3:17304:17317	4856042	2	True				
ANR	4856236	Identifier	rtnVal		4856042	0					
ANR	4856237	IfStatement	if ( logfile . find ( '$' ) != std :: string :: npos )		4856042	3					
ANR	4856238	Condition	logfile . find ( '$' ) != std :: string :: npos	641:7:17379:17416	4856042	0	True				
ANR	4856239	EqualityExpression	logfile . find ( '$' ) != std :: string :: npos		4856042	0		!=			
ANR	4856240	CallExpression	logfile . find ( '$' )		4856042	0					
ANR	4856241	Callee	logfile . find		4856042	0					
ANR	4856242	MemberAccess	logfile . find		4856042	0					
ANR	4856243	Identifier	logfile		4856042	0					
ANR	4856244	Identifier	find		4856042	1					
ANR	4856245	ArgumentList	'$'		4856042	1					
ANR	4856246	Argument	'$'		4856042	0					
ANR	4856247	PrimaryExpression	'$'		4856042	0					
ANR	4856248	Identifier	std :: string :: npos		4856042	1					
ANR	4856249	CompoundStatement		52:47:1467:1467	4856042	1					
ANR	4856250	ExpressionStatement	"unparser . Unparse ( unparsed , & ad )"	642:3:17424:17456	4856042	0	True				
ANR	4856251	CallExpression	"unparser . Unparse ( unparsed , & ad )"		4856042	0					
ANR	4856252	Callee	unparser . Unparse		4856042	0					
ANR	4856253	MemberAccess	unparser . Unparse		4856042	0					
ANR	4856254	Identifier	unparser		4856042	0					
ANR	4856255	Identifier	Unparse		4856042	1					
ANR	4856256	ArgumentList	unparsed		4856042	1					
ANR	4856257	Argument	unparsed		4856042	0					
ANR	4856258	Identifier	unparsed		4856042	0					
ANR	4856259	Argument	& ad		4856042	1					
ANR	4856260	UnaryOperationExpression	& ad		4856042	0					
ANR	4856261	UnaryOperator	&		4856042	0					
ANR	4856262	Identifier	ad		4856042	1					
ANR	4856263	ExpressionStatement	"rtnVal . sprintf ( ""macros not allowed in Stork log file names:%s"" , unparsed . c_str ( ) )"	643:3:17461:17548	4856042	1	True				
ANR	4856264	CallExpression	"rtnVal . sprintf ( ""macros not allowed in Stork log file names:%s"" , unparsed . c_str ( ) )"		4856042	0					
ANR	4856265	Callee	rtnVal . sprintf		4856042	0					
ANR	4856266	MemberAccess	rtnVal . sprintf		4856042	0					
ANR	4856267	Identifier	rtnVal		4856042	0					
ANR	4856268	Identifier	sprintf		4856042	1					
ANR	4856269	ArgumentList	"""macros not allowed in Stork log file names:%s"""		4856042	1					
ANR	4856270	Argument	"""macros not allowed in Stork log file names:%s"""		4856042	0					
ANR	4856271	PrimaryExpression	"""macros not allowed in Stork log file names:%s"""		4856042	0					
ANR	4856272	Argument	unparsed . c_str ( )		4856042	1					
ANR	4856273	CallExpression	unparsed . c_str ( )		4856042	0					
ANR	4856274	Callee	unparsed . c_str		4856042	0					
ANR	4856275	MemberAccess	unparsed . c_str		4856042	0					
ANR	4856276	Identifier	unparsed		4856042	0					
ANR	4856277	Identifier	c_str		4856042	1					
ANR	4856278	ArgumentList			4856042	1					
ANR	4856279	ReturnStatement	return rtnVal ;	645:3:17553:17566	4856042	2	True				
ANR	4856280	Identifier	rtnVal		4856042	0					
ANR	4856281	IfStatement	if ( ! fullpath ( logfile . c_str ( ) ) )		4856042	4					
ANR	4856282	Condition	! fullpath ( logfile . c_str ( ) )	650:7:17711:17738	4856042	0	True				
ANR	4856283	UnaryOperationExpression	! fullpath ( logfile . c_str ( ) )		4856042	0					
ANR	4856284	UnaryOperator	!		4856042	0					
ANR	4856285	CallExpression	fullpath ( logfile . c_str ( ) )		4856042	1					
ANR	4856286	Callee	fullpath		4856042	0					
ANR	4856287	Identifier	fullpath		4856042	0					
ANR	4856288	ArgumentList	logfile . c_str ( )		4856042	1					
ANR	4856289	Argument	logfile . c_str ( )		4856042	0					
ANR	4856290	CallExpression	logfile . c_str ( )		4856042	0					
ANR	4856291	Callee	logfile . c_str		4856042	0					
ANR	4856292	MemberAccess	logfile . c_str		4856042	0					
ANR	4856293	Identifier	logfile		4856042	0					
ANR	4856294	Identifier	c_str		4856042	1					
ANR	4856295	ArgumentList			4856042	1					
ANR	4856296	CompoundStatement		70:3:2067:2104	4856042	1					
ANR	4856297	IdentifierDeclStatement	MyString currentDir ;	651:3:17747:17766	4856042	0	True				
ANR	4856298	IdentifierDecl	currentDir		4856042	0					
ANR	4856299	IdentifierDeclType	MyString		4856042	0					
ANR	4856300	Identifier	currentDir		4856042	1					
ANR	4856301	IfStatement	if ( ! condor_getcwd ( currentDir ) )		4856042	1					
ANR	4856302	Condition	! condor_getcwd ( currentDir )	652:8:17776:17802	4856042	0	True				
ANR	4856303	UnaryOperationExpression	! condor_getcwd ( currentDir )		4856042	0					
ANR	4856304	UnaryOperator	!		4856042	0					
ANR	4856305	CallExpression	condor_getcwd ( currentDir )		4856042	1					
ANR	4856306	Callee	condor_getcwd		4856042	0					
ANR	4856307	Identifier	condor_getcwd		4856042	0					
ANR	4856308	ArgumentList	currentDir		4856042	1					
ANR	4856309	Argument	currentDir		4856042	0					
ANR	4856310	Identifier	currentDir		4856042	0					
ANR	4856311	CompoundStatement		63:38:1854:1854	4856042	1					
ANR	4856312	ExpressionStatement	"rtnVal . sprintf ( ""condor_getcwd() failed with errno %d (%s)"" , errno , strerror ( errno ) )"	653:4:17812:17901	4856042	0	True				
ANR	4856313	CallExpression	"rtnVal . sprintf ( ""condor_getcwd() failed with errno %d (%s)"" , errno , strerror ( errno ) )"		4856042	0					
ANR	4856314	Callee	rtnVal . sprintf		4856042	0					
ANR	4856315	MemberAccess	rtnVal . sprintf		4856042	0					
ANR	4856316	Identifier	rtnVal		4856042	0					
ANR	4856317	Identifier	sprintf		4856042	1					
ANR	4856318	ArgumentList	"""condor_getcwd() failed with errno %d (%s)"""		4856042	1					
ANR	4856319	Argument	"""condor_getcwd() failed with errno %d (%s)"""		4856042	0					
ANR	4856320	PrimaryExpression	"""condor_getcwd() failed with errno %d (%s)"""		4856042	0					
ANR	4856321	Argument	errno		4856042	1					
ANR	4856322	Identifier	errno		4856042	0					
ANR	4856323	Argument	strerror ( errno )		4856042	2					
ANR	4856324	CallExpression	strerror ( errno )		4856042	0					
ANR	4856325	Callee	strerror		4856042	0					
ANR	4856326	Identifier	strerror		4856042	0					
ANR	4856327	ArgumentList	errno		4856042	1					
ANR	4856328	Argument	errno		4856042	0					
ANR	4856329	Identifier	errno		4856042	0					
ANR	4856330	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: %s at %s:%d\\n"" , rtnVal . Value ( ) , __FILE__ , __LINE__ )"	655:4:17907:17990	4856042	1	True				
ANR	4856331	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: %s at %s:%d\\n"" , rtnVal . Value ( ) , __FILE__ , __LINE__ )"		4856042	0					
ANR	4856332	Callee	dprintf		4856042	0					
ANR	4856333	Identifier	dprintf		4856042	0					
ANR	4856334	ArgumentList	D_ALWAYS		4856042	1					
ANR	4856335	Argument	D_ALWAYS		4856042	0					
ANR	4856336	Identifier	D_ALWAYS		4856042	0					
ANR	4856337	Argument	"""ERROR: %s at %s:%d\\n"""		4856042	1					
ANR	4856338	PrimaryExpression	"""ERROR: %s at %s:%d\\n"""		4856042	0					
ANR	4856339	Argument	rtnVal . Value ( )		4856042	2					
ANR	4856340	CallExpression	rtnVal . Value ( )		4856042	0					
ANR	4856341	Callee	rtnVal . Value		4856042	0					
ANR	4856342	MemberAccess	rtnVal . Value		4856042	0					
ANR	4856343	Identifier	rtnVal		4856042	0					
ANR	4856344	Identifier	Value		4856042	1					
ANR	4856345	ArgumentList			4856042	1					
ANR	4856346	Argument	__FILE__		4856042	3					
ANR	4856347	Identifier	__FILE__		4856042	0					
ANR	4856348	Argument	__LINE__		4856042	4					
ANR	4856349	Identifier	__LINE__		4856042	0					
ANR	4856350	ReturnStatement	return rtnVal ;	657:4:17996:18009	4856042	2	True				
ANR	4856351	Identifier	rtnVal		4856042	0					
ANR	4856352	IdentifierDeclStatement	std :: string tmp = currentDir . Value ( ) ;	659:3:18019:18056	4856042	2	True				
ANR	4856353	IdentifierDecl	tmp = currentDir . Value ( )		4856042	0					
ANR	4856354	IdentifierDeclType	std :: string		4856042	0					
ANR	4856355	Identifier	tmp		4856042	1					
ANR	4856356	AssignmentExpression	tmp = currentDir . Value ( )		4856042	2		=			
ANR	4856357	Identifier	tmp		4856042	0					
ANR	4856358	CallExpression	currentDir . Value ( )		4856042	1					
ANR	4856359	Callee	currentDir . Value		4856042	0					
ANR	4856360	MemberAccess	currentDir . Value		4856042	0					
ANR	4856361	Identifier	currentDir		4856042	0					
ANR	4856362	Identifier	Value		4856042	1					
ANR	4856363	ArgumentList			4856042	1					
ANR	4856364	ExpressionStatement	tmp += DIR_DELIM_STRING	660:3:18061:18084	4856042	3	True				
ANR	4856365	AssignmentExpression	tmp += DIR_DELIM_STRING		4856042	0		+=			
ANR	4856366	Identifier	tmp		4856042	0					
ANR	4856367	Identifier	DIR_DELIM_STRING		4856042	1					
ANR	4856368	ExpressionStatement	tmp += logfile	661:3:18089:18103	4856042	4	True				
ANR	4856369	AssignmentExpression	tmp += logfile		4856042	0		+=			
ANR	4856370	Identifier	tmp		4856042	0					
ANR	4856371	Identifier	logfile		4856042	1					
ANR	4856372	ExpressionStatement	logfile = tmp	662:3:18108:18121	4856042	5	True				
ANR	4856373	AssignmentExpression	logfile = tmp		4856042	0		=			
ANR	4856374	Identifier	logfile		4856042	0					
ANR	4856375	Identifier	tmp		4856042	1					
ANR	4856376	ExpressionStatement	listLogFilenames . rewind ( )	668:2:18260:18285	4856042	5	True				
ANR	4856377	CallExpression	listLogFilenames . rewind ( )		4856042	0					
ANR	4856378	Callee	listLogFilenames . rewind		4856042	0					
ANR	4856379	MemberAccess	listLogFilenames . rewind		4856042	0					
ANR	4856380	Identifier	listLogFilenames		4856042	0					
ANR	4856381	Identifier	rewind		4856042	1					
ANR	4856382	ArgumentList			4856042	1					
ANR	4856383	IdentifierDeclStatement	char * psLogFilename ;	669:2:18289:18308	4856042	6	True				
ANR	4856384	IdentifierDecl	* psLogFilename		4856042	0					
ANR	4856385	IdentifierDeclType	char *		4856042	0					
ANR	4856386	Identifier	psLogFilename		4856042	1					
ANR	4856387	IdentifierDeclStatement	bool bAlreadyInList = false ;	670:2:18312:18339	4856042	7	True				
ANR	4856388	IdentifierDecl	bAlreadyInList = false		4856042	0					
ANR	4856389	IdentifierDeclType	bool		4856042	0					
ANR	4856390	Identifier	bAlreadyInList		4856042	1					
ANR	4856391	AssignmentExpression	bAlreadyInList = false		4856042	2		=			
ANR	4856392	Identifier	false		4856042	0					
ANR	4856393	Identifier	false		4856042	1					
ANR	4856394	WhileStatement	while ( ( psLogFilename = listLogFilenames . next ( ) ) )		4856042	8					
ANR	4856395	Condition	psLogFilename = listLogFilenames . next ( )	671:10:18351:18391	4856042	0	True				
ANR	4856396	AssignmentExpression	psLogFilename = listLogFilenames . next ( )		4856042	0		=			
ANR	4856397	Identifier	psLogFilename		4856042	0					
ANR	4856398	CallExpression	listLogFilenames . next ( )		4856042	1					
ANR	4856399	Callee	listLogFilenames . next		4856042	0					
ANR	4856400	MemberAccess	listLogFilenames . next		4856042	0					
ANR	4856401	Identifier	listLogFilenames		4856042	0					
ANR	4856402	Identifier	next		4856042	1					
ANR	4856403	ArgumentList			4856042	1					
ANR	4856404	CompoundStatement		82:54:2443:2443	4856042	1					
ANR	4856405	IfStatement	if ( logfile == psLogFilename )		4856042	0					
ANR	4856406	Condition	logfile == psLogFilename	672:7:18404:18427	4856042	0	True				
ANR	4856407	EqualityExpression	logfile == psLogFilename		4856042	0		==			
ANR	4856408	Identifier	logfile		4856042	0					
ANR	4856409	Identifier	psLogFilename		4856042	1					
ANR	4856410	CompoundStatement		83:33:2478:2478	4856042	1					
ANR	4856411	ExpressionStatement	bAlreadyInList = true	673:4:18436:18457	4856042	0	True				
ANR	4856412	AssignmentExpression	bAlreadyInList = true		4856042	0		=			
ANR	4856413	Identifier	bAlreadyInList		4856042	0					
ANR	4856414	Identifier	true		4856042	1					
ANR	4856415	IfStatement	if ( ! bAlreadyInList )		4856042	9					
ANR	4856416	Condition	! bAlreadyInList	677:6:18475:18489	4856042	0	True				
ANR	4856417	UnaryOperationExpression	! bAlreadyInList		4856042	0					
ANR	4856418	UnaryOperator	!		4856042	0					
ANR	4856419	Identifier	bAlreadyInList		4856042	1					
ANR	4856420	CompoundStatement		88:23:2540:2540	4856042	1					
ANR	4856421	ExpressionStatement	listLogFilenames . append ( logfile . c_str ( ) )	679:3:18541:18582	4856042	0	True				
ANR	4856422	CallExpression	listLogFilenames . append ( logfile . c_str ( ) )		4856042	0					
ANR	4856423	Callee	listLogFilenames . append		4856042	0					
ANR	4856424	MemberAccess	listLogFilenames . append		4856042	0					
ANR	4856425	Identifier	listLogFilenames		4856042	0					
ANR	4856426	Identifier	append		4856042	1					
ANR	4856427	ArgumentList	logfile . c_str ( )		4856042	1					
ANR	4856428	Argument	logfile . c_str ( )		4856042	0					
ANR	4856429	CallExpression	logfile . c_str ( )		4856042	0					
ANR	4856430	Callee	logfile . c_str		4856042	0					
ANR	4856431	MemberAccess	logfile . c_str		4856042	0					
ANR	4856432	Identifier	logfile		4856042	0					
ANR	4856433	Identifier	c_str		4856042	1					
ANR	4856434	ArgumentList			4856042	1					
ANR	4856435	ExpressionStatement	"skip_whitespace ( adBuf , offset )"	682:8:18597:18626	4856042	10	True				
ANR	4856436	CallExpression	"skip_whitespace ( adBuf , offset )"		4856042	0					
ANR	4856437	Callee	skip_whitespace		4856042	0					
ANR	4856438	Identifier	skip_whitespace		4856042	0					
ANR	4856439	ArgumentList	adBuf		4856042	1					
ANR	4856440	Argument	adBuf		4856042	0					
ANR	4856441	Identifier	adBuf		4856042	0					
ANR	4856442	Argument	offset		4856042	1					
ANR	4856443	Identifier	offset		4856042	0					
ANR	4856444	ReturnStatement	return rtnVal ;	685:1:18675:18688	4856042	15	True				
ANR	4856445	Identifier	rtnVal		4856042	0					
ANR	4856446	ReturnType	MyString		4856042	1					
ANR	4856447	Identifier	MultiLogFiles :: loadLogFileNamesFromStorkSubFile		4856042	2					
ANR	4856448	ParameterList	"const MyString & strSubFilename , const MyString & directory , StringList & listLogFilenames"		4856042	3					
ANR	4856449	Parameter	const MyString & strSubFilename	587:2:15858:15887	4856042	0	True				
ANR	4856450	ParameterType	const MyString &		4856042	0					
ANR	4856451	Identifier	strSubFilename		4856042	1					
ANR	4856452	Parameter	const MyString & directory	588:2:15892:15916	4856042	1	True				
ANR	4856453	ParameterType	const MyString &		4856042	0					
ANR	4856454	Identifier	directory		4856042	1					
ANR	4856455	Parameter	StringList & listLogFilenames	589:2:15921:15948	4856042	2	True				
ANR	4856456	ParameterType	StringList &		4856042	0					
ANR	4856457	Identifier	listLogFilenames		4856042	1					
ANR	4856458	CFGEntryNode	ENTRY		4856042		True				
ANR	4856459	CFGExitNode	EXIT		4856042		True				
ANR	4856460	Symbol	unparsed . c_str		4856042						
ANR	4856461	Symbol	logfile . c_str		4856042						
ANR	4856462	Symbol	currentDir		4856042						
ANR	4856463	Symbol	condor_getcwd		4856042						
ANR	4856464	Symbol	rtnVal		4856042						
ANR	4856465	Symbol	& ad		4856042						
ANR	4856466	Symbol	logfile . find		4856042						
ANR	4856467	Symbol	directory		4856042						
ANR	4856468	Symbol	path		4856042						
ANR	4856469	Symbol	std :: string :: npos		4856042						
ANR	4856470	Symbol	rtnVal . Value		4856042						
ANR	4856471	Symbol	adBuf		4856042						
ANR	4856472	Symbol	fullpath		4856042						
ANR	4856473	Symbol	tmp		4856042						
ANR	4856474	Symbol	listLogFilenames . next		4856042						
ANR	4856475	Symbol	path . Value		4856042						
ANR	4856476	Symbol	psLogFilename		4856042						
ANR	4856477	Symbol	logfile . empty		4856042						
ANR	4856478	Symbol	DIR_DELIM_STRING		4856042						
ANR	4856479	Symbol	strSubFilename		4856042						
ANR	4856480	Symbol	directory . Value		4856042						
ANR	4856481	Symbol	ad . EvaluateAttrString		4856042						
ANR	4856482	Symbol	errno		4856042						
ANR	4856483	Symbol	ad		4856042						
ANR	4856484	Symbol	offset		4856042						
ANR	4856485	Symbol	listLogFilenames		4856042						
ANR	4856486	Symbol	strSubFilename . Value		4856042						
ANR	4856487	Symbol	logfile		4856042						
ANR	4856488	Symbol	__FILE__		4856042						
ANR	4856489	Symbol	unparsed		4856042						
ANR	4856490	Symbol	D_ALWAYS		4856042						
ANR	4856491	Symbol	false		4856042						
ANR	4856492	Symbol	D_FULLDEBUG		4856042						
ANR	4856493	Symbol	__LINE__		4856042						
ANR	4856494	Symbol	directory . Length		4856042						
ANR	4856495	Symbol	parser . ParseClassAd		4856042						
ANR	4856496	Symbol	strerror		4856042						
ANR	4856497	Symbol	bAlreadyInList		4856042						
ANR	4856498	Symbol	MultiLogFiles :: readFile		4856042						
ANR	4856499	Symbol	rtnVal . Length		4856042						
ANR	4856500	Symbol	parser		4856042						
ANR	4856501	Symbol	currentDir . Value		4856042						
ANR	4856502	Symbol	true		4856042						
ANR	4856503	Symbol	unparser		4856042						
ANR	4856504	Function	MultiLogFiles :: getQueueCountFromSubmitFile	690:0:18774:20077							
ANR	4856505	FunctionDef	"MultiLogFiles :: getQueueCountFromSubmitFile (const MyString & strSubFilename , const MyString & directory , MyString & errorMsg)"		4856504	0					
ANR	4856506	CompoundStatement		693:0:18903:20077	4856504	0					
ANR	4856507	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""MultiLogFiles::getQueueCountFromSubmitFile(%s, %s)\\n"" , strSubFilename . Value ( ) , directory . Value ( ) )"	694:1:18906:19035	4856504	0	True				
ANR	4856508	CallExpression	"dprintf ( D_FULLDEBUG , ""MultiLogFiles::getQueueCountFromSubmitFile(%s, %s)\\n"" , strSubFilename . Value ( ) , directory . Value ( ) )"		4856504	0					
ANR	4856509	Callee	dprintf		4856504	0					
ANR	4856510	Identifier	dprintf		4856504	0					
ANR	4856511	ArgumentList	D_FULLDEBUG		4856504	1					
ANR	4856512	Argument	D_FULLDEBUG		4856504	0					
ANR	4856513	Identifier	D_FULLDEBUG		4856504	0					
ANR	4856514	Argument	"""MultiLogFiles::getQueueCountFromSubmitFile(%s, %s)\\n"""		4856504	1					
ANR	4856515	PrimaryExpression	"""MultiLogFiles::getQueueCountFromSubmitFile(%s, %s)\\n"""		4856504	0					
ANR	4856516	Argument	strSubFilename . Value ( )		4856504	2					
ANR	4856517	CallExpression	strSubFilename . Value ( )		4856504	0					
ANR	4856518	Callee	strSubFilename . Value		4856504	0					
ANR	4856519	MemberAccess	strSubFilename . Value		4856504	0					
ANR	4856520	Identifier	strSubFilename		4856504	0					
ANR	4856521	Identifier	Value		4856504	1					
ANR	4856522	ArgumentList			4856504	1					
ANR	4856523	Argument	directory . Value ( )		4856504	3					
ANR	4856524	CallExpression	directory . Value ( )		4856504	0					
ANR	4856525	Callee	directory . Value		4856504	0					
ANR	4856526	MemberAccess	directory . Value		4856504	0					
ANR	4856527	Identifier	directory		4856504	0					
ANR	4856528	Identifier	Value		4856504	1					
ANR	4856529	ArgumentList			4856504	1					
ANR	4856530	IdentifierDeclStatement	int queueCount = 0 ;	698:1:19039:19057	4856504	1	True				
ANR	4856531	IdentifierDecl	queueCount = 0		4856504	0					
ANR	4856532	IdentifierDeclType	int		4856504	0					
ANR	4856533	Identifier	queueCount		4856504	1					
ANR	4856534	AssignmentExpression	queueCount = 0		4856504	2		=			
ANR	4856535	Identifier	queueCount		4856504	0					
ANR	4856536	PrimaryExpression	0		4856504	1					
ANR	4856537	ExpressionStatement	"errorMsg = """""	699:1:19060:19073	4856504	2	True				
ANR	4856538	AssignmentExpression	"errorMsg = """""		4856504	0		=			
ANR	4856539	Identifier	errorMsg		4856504	0					
ANR	4856540	PrimaryExpression	""""""		4856504	1					
ANR	4856541	IdentifierDeclStatement	"MyString fullpath ( """" ) ;"	701:1:19077:19098	4856504	3	True				
ANR	4856542	IdentifierDecl	"fullpath ( """" )"		4856504	0					
ANR	4856543	IdentifierDeclType	MyString		4856504	0					
ANR	4856544	Identifier	fullpath		4856504	1					
ANR	4856545	PrimaryExpression	""""""		4856504	2					
ANR	4856546	IfStatement	"if ( directory != """" )"		4856504	4					
ANR	4856547	Condition	"directory != """""	702:6:19106:19120	4856504	0	True				
ANR	4856548	EqualityExpression	"directory != """""		4856504	0		!=			
ANR	4856549	Identifier	directory		4856504	0					
ANR	4856550	PrimaryExpression	""""""		4856504	1					
ANR	4856551	CompoundStatement		10:24:220:220	4856504	1					
ANR	4856552	ExpressionStatement	fullpath = directory + DIR_DELIM_STRING + strSubFilename	703:2:19128:19184	4856504	0	True				
ANR	4856553	AssignmentExpression	fullpath = directory + DIR_DELIM_STRING + strSubFilename		4856504	0		=			
ANR	4856554	Identifier	fullpath		4856504	0					
ANR	4856555	AdditiveExpression	directory + DIR_DELIM_STRING + strSubFilename		4856504	1		+			
ANR	4856556	Identifier	directory		4856504	0					
ANR	4856557	AdditiveExpression	DIR_DELIM_STRING + strSubFilename		4856504	1		+			
ANR	4856558	Identifier	DIR_DELIM_STRING		4856504	0					
ANR	4856559	Identifier	strSubFilename		4856504	1					
ANR	4856560	ElseStatement	else		4856504	0					
ANR	4856561	CompoundStatement		12:8:290:290	4856504	0					
ANR	4856562	ExpressionStatement	fullpath = strSubFilename	705:2:19198:19223	4856504	0	True				
ANR	4856563	AssignmentExpression	fullpath = strSubFilename		4856504	0		=			
ANR	4856564	Identifier	fullpath		4856504	0					
ANR	4856565	Identifier	strSubFilename		4856504	1					
ANR	4856566	IdentifierDeclStatement	StringList logicalLines ;	708:1:19230:19253	4856504	5	True				
ANR	4856567	IdentifierDecl	logicalLines		4856504	0					
ANR	4856568	IdentifierDeclType	StringList		4856504	0					
ANR	4856569	Identifier	logicalLines		4856504	1					
ANR	4856570	IfStatement	"if ( ( errorMsg = fileNameToLogicalLines ( strSubFilename , logicalLines ) ) != """" )"		4856504	6					
ANR	4856571	Condition	"( errorMsg = fileNameToLogicalLines ( strSubFilename , logicalLines ) ) != """""	709:6:19261:19336	4856504	0	True				
ANR	4856572	EqualityExpression	"( errorMsg = fileNameToLogicalLines ( strSubFilename , logicalLines ) ) != """""		4856504	0		!=			
ANR	4856573	AssignmentExpression	"errorMsg = fileNameToLogicalLines ( strSubFilename , logicalLines )"		4856504	0		=			
ANR	4856574	Identifier	errorMsg		4856504	0					
ANR	4856575	CallExpression	"fileNameToLogicalLines ( strSubFilename , logicalLines )"		4856504	1					
ANR	4856576	Callee	fileNameToLogicalLines		4856504	0					
ANR	4856577	Identifier	fileNameToLogicalLines		4856504	0					
ANR	4856578	ArgumentList	strSubFilename		4856504	1					
ANR	4856579	Argument	strSubFilename		4856504	0					
ANR	4856580	Identifier	strSubFilename		4856504	0					
ANR	4856581	Argument	logicalLines		4856504	1					
ANR	4856582	Identifier	logicalLines		4856504	0					
ANR	4856583	PrimaryExpression	""""""		4856504	1					
ANR	4856584	CompoundStatement		18:27:436:436	4856504	1					
ANR	4856585	ReturnStatement	return - 1 ;	711:2:19344:19353	4856504	0	True				
ANR	4856586	UnaryOperationExpression	- 1		4856504	0					
ANR	4856587	UnaryOperator	-		4856504	0					
ANR	4856588	PrimaryExpression	1		4856504	1					
ANR	4856589	IdentifierDeclStatement	"const char * paramName = ""queue"" ;"	717:1:19507:19539	4856504	7	True				
ANR	4856590	IdentifierDecl	"* paramName = ""queue"""		4856504	0					
ANR	4856591	IdentifierDeclType	const char *		4856504	0					
ANR	4856592	Identifier	paramName		4856504	1					
ANR	4856593	AssignmentExpression	"* paramName = ""queue"""		4856504	2		=			
ANR	4856594	Identifier	paramName		4856504	0					
ANR	4856595	PrimaryExpression	"""queue"""		4856504	1					
ANR	4856596	IdentifierDeclStatement	const char * logicalLine ;	718:1:19542:19565	4856504	8	True				
ANR	4856597	IdentifierDecl	* logicalLine		4856504	0					
ANR	4856598	IdentifierDeclType	const char *		4856504	0					
ANR	4856599	Identifier	logicalLine		4856504	1					
ANR	4856600	WhileStatement	while ( ( logicalLine = logicalLines . next ( ) ) != NULL )		4856504	9					
ANR	4856601	Condition	( logicalLine = logicalLines . next ( ) ) != NULL	719:8:19575:19617	4856504	0	True				
ANR	4856602	EqualityExpression	( logicalLine = logicalLines . next ( ) ) != NULL		4856504	0		!=			
ANR	4856603	AssignmentExpression	logicalLine = logicalLines . next ( )		4856504	0		=			
ANR	4856604	Identifier	logicalLine		4856504	0					
ANR	4856605	CallExpression	logicalLines . next ( )		4856504	1					
ANR	4856606	Callee	logicalLines . next		4856504	0					
ANR	4856607	MemberAccess	logicalLines . next		4856504	0					
ANR	4856608	Identifier	logicalLines		4856504	0					
ANR	4856609	Identifier	next		4856504	1					
ANR	4856610	ArgumentList			4856504	1					
ANR	4856611	Identifier	NULL		4856504	1					
ANR	4856612	CompoundStatement		31:2:809:870	4856504	1					
ANR	4856613	IdentifierDeclStatement	MyString submitLine ( logicalLine ) ;	720:2:19625:19657	4856504	0	True				
ANR	4856614	IdentifierDecl	submitLine ( logicalLine )		4856504	0					
ANR	4856615	IdentifierDeclType	MyString		4856504	0					
ANR	4856616	Identifier	submitLine		4856504	1					
ANR	4856617	Identifier	logicalLine		4856504	2					
ANR	4856618	ExpressionStatement	submitLine . Tokenize ( )	721:2:19661:19682	4856504	1	True				
ANR	4856619	CallExpression	submitLine . Tokenize ( )		4856504	0					
ANR	4856620	Callee	submitLine . Tokenize		4856504	0					
ANR	4856621	MemberAccess	submitLine . Tokenize		4856504	0					
ANR	4856622	Identifier	submitLine		4856504	0					
ANR	4856623	Identifier	Tokenize		4856504	1					
ANR	4856624	ArgumentList			4856504	1					
ANR	4856625	IdentifierDeclStatement	"const char * DELIM = "" "" ;"	722:2:19686:19709	4856504	2	True				
ANR	4856626	IdentifierDecl	"* DELIM = "" """		4856504	0					
ANR	4856627	IdentifierDeclType	const char *		4856504	0					
ANR	4856628	Identifier	DELIM		4856504	1					
ANR	4856629	AssignmentExpression	"* DELIM = "" """		4856504	2		=			
ANR	4856630	Identifier	DELIM		4856504	0					
ANR	4856631	PrimaryExpression	""" """		4856504	1					
ANR	4856632	IdentifierDeclStatement	"const char * rawToken = submitLine . GetNextToken ( DELIM , true ) ;"	723:2:19713:19774	4856504	3	True				
ANR	4856633	IdentifierDecl	"* rawToken = submitLine . GetNextToken ( DELIM , true )"		4856504	0					
ANR	4856634	IdentifierDeclType	const char *		4856504	0					
ANR	4856635	Identifier	rawToken		4856504	1					
ANR	4856636	AssignmentExpression	"* rawToken = submitLine . GetNextToken ( DELIM , true )"		4856504	2		=			
ANR	4856637	Identifier	rawToken		4856504	0					
ANR	4856638	CallExpression	"submitLine . GetNextToken ( DELIM , true )"		4856504	1					
ANR	4856639	Callee	submitLine . GetNextToken		4856504	0					
ANR	4856640	MemberAccess	submitLine . GetNextToken		4856504	0					
ANR	4856641	Identifier	submitLine		4856504	0					
ANR	4856642	Identifier	GetNextToken		4856504	1					
ANR	4856643	ArgumentList	DELIM		4856504	1					
ANR	4856644	Argument	DELIM		4856504	0					
ANR	4856645	Identifier	DELIM		4856504	0					
ANR	4856646	Argument	true		4856504	1					
ANR	4856647	Identifier	true		4856504	0					
ANR	4856648	IfStatement	if ( rawToken )		4856504	4					
ANR	4856649	Condition	rawToken	724:7:19783:19790	4856504	0	True				
ANR	4856650	Identifier	rawToken		4856504	0					
ANR	4856651	CompoundStatement		33:3:895:919	4856504	1					
ANR	4856652	IdentifierDeclStatement	MyString token ( rawToken ) ;	725:3:19799:19823	4856504	0	True				
ANR	4856653	IdentifierDecl	token ( rawToken )		4856504	0					
ANR	4856654	IdentifierDeclType	MyString		4856504	0					
ANR	4856655	Identifier	token		4856504	1					
ANR	4856656	Identifier	rawToken		4856504	2					
ANR	4856657	ExpressionStatement	token . trim ( )	726:3:19828:19840	4856504	1	True				
ANR	4856658	CallExpression	token . trim ( )		4856504	0					
ANR	4856659	Callee	token . trim		4856504	0					
ANR	4856660	MemberAccess	token . trim		4856504	0					
ANR	4856661	Identifier	token		4856504	0					
ANR	4856662	Identifier	trim		4856504	1					
ANR	4856663	ArgumentList			4856504	1					
ANR	4856664	IfStatement	"if ( ! strcasecmp ( token . Value ( ) , paramName ) )"		4856504	2					
ANR	4856665	Condition	"! strcasecmp ( token . Value ( ) , paramName )"	727:8:19850:19886	4856504	0	True				
ANR	4856666	UnaryOperationExpression	"! strcasecmp ( token . Value ( ) , paramName )"		4856504	0					
ANR	4856667	UnaryOperator	!		4856504	0					
ANR	4856668	CallExpression	"strcasecmp ( token . Value ( ) , paramName )"		4856504	1					
ANR	4856669	Callee	strcasecmp		4856504	0					
ANR	4856670	Identifier	strcasecmp		4856504	0					
ANR	4856671	ArgumentList	token . Value ( )		4856504	1					
ANR	4856672	Argument	token . Value ( )		4856504	0					
ANR	4856673	CallExpression	token . Value ( )		4856504	0					
ANR	4856674	Callee	token . Value		4856504	0					
ANR	4856675	MemberAccess	token . Value		4856504	0					
ANR	4856676	Identifier	token		4856504	0					
ANR	4856677	Identifier	Value		4856504	1					
ANR	4856678	ArgumentList			4856504	1					
ANR	4856679	Argument	paramName		4856504	1					
ANR	4856680	Identifier	paramName		4856504	0					
ANR	4856681	CompoundStatement		35:48:986:986	4856504	1					
ANR	4856682	ExpressionStatement	"rawToken = submitLine . GetNextToken ( DELIM , true )"	728:4:19896:19945	4856504	0	True				
ANR	4856683	AssignmentExpression	"rawToken = submitLine . GetNextToken ( DELIM , true )"		4856504	0		=			
ANR	4856684	Identifier	rawToken		4856504	0					
ANR	4856685	CallExpression	"submitLine . GetNextToken ( DELIM , true )"		4856504	1					
ANR	4856686	Callee	submitLine . GetNextToken		4856504	0					
ANR	4856687	MemberAccess	submitLine . GetNextToken		4856504	0					
ANR	4856688	Identifier	submitLine		4856504	0					
ANR	4856689	Identifier	GetNextToken		4856504	1					
ANR	4856690	ArgumentList	DELIM		4856504	1					
ANR	4856691	Argument	DELIM		4856504	0					
ANR	4856692	Identifier	DELIM		4856504	0					
ANR	4856693	Argument	true		4856504	1					
ANR	4856694	Identifier	true		4856504	0					
ANR	4856695	IfStatement	if ( rawToken )		4856504	1					
ANR	4856696	Condition	rawToken	729:9:19956:19963	4856504	0	True				
ANR	4856697	Identifier	rawToken		4856504	0					
ANR	4856698	CompoundStatement		37:20:1063:1063	4856504	1					
ANR	4856699	ExpressionStatement	queueCount += atoi ( rawToken )	730:5:19974:20004	4856504	0	True				
ANR	4856700	AssignmentExpression	queueCount += atoi ( rawToken )		4856504	0		+=			
ANR	4856701	Identifier	queueCount		4856504	0					
ANR	4856702	CallExpression	atoi ( rawToken )		4856504	1					
ANR	4856703	Callee	atoi		4856504	0					
ANR	4856704	Identifier	atoi		4856504	0					
ANR	4856705	ArgumentList	rawToken		4856504	1					
ANR	4856706	Argument	rawToken		4856504	0					
ANR	4856707	Identifier	rawToken		4856504	0					
ANR	4856708	ElseStatement	else		4856504	0					
ANR	4856709	CompoundStatement		39:11:1113:1113	4856504	0					
ANR	4856710	ExpressionStatement	queueCount ++	732:5:20024:20036	4856504	0	True				
ANR	4856711	PostIncDecOperationExpression	queueCount ++		4856504	0					
ANR	4856712	Identifier	queueCount		4856504	0					
ANR	4856713	IncDec	++		4856504	1					
ANR	4856714	ReturnStatement	return queueCount ;	738:1:20058:20075	4856504	10	True				
ANR	4856715	Identifier	queueCount		4856504	0					
ANR	4856716	ReturnType	int		4856504	1					
ANR	4856717	Identifier	MultiLogFiles :: getQueueCountFromSubmitFile		4856504	2					
ANR	4856718	ParameterList	"const MyString & strSubFilename , const MyString & directory , MyString & errorMsg"		4856504	3					
ANR	4856719	Parameter	const MyString & strSubFilename	691:43:18821:18850	4856504	0	True				
ANR	4856720	ParameterType	const MyString &		4856504	0					
ANR	4856721	Identifier	strSubFilename		4856504	1					
ANR	4856722	Parameter	const MyString & directory	692:3:18856:18880	4856504	1	True				
ANR	4856723	ParameterType	const MyString &		4856504	0					
ANR	4856724	Identifier	directory		4856504	1					
ANR	4856725	Parameter	MyString & errorMsg	692:30:18883:18900	4856504	2	True				
ANR	4856726	ParameterType	MyString &		4856504	0					
ANR	4856727	Identifier	errorMsg		4856504	1					
ANR	4856728	CFGEntryNode	ENTRY		4856504		True				
ANR	4856729	CFGExitNode	EXIT		4856504		True				
ANR	4856730	Symbol	atoi		4856504						
ANR	4856731	Symbol	queueCount		4856504						
ANR	4856732	Symbol	DIR_DELIM_STRING		4856504						
ANR	4856733	Symbol	logicalLine		4856504						
ANR	4856734	Symbol	strSubFilename		4856504						
ANR	4856735	Symbol	directory . Value		4856504						
ANR	4856736	Symbol	logicalLines		4856504						
ANR	4856737	Symbol	NULL		4856504						
ANR	4856738	Symbol	strSubFilename . Value		4856504						
ANR	4856739	Symbol	D_FULLDEBUG		4856504						
ANR	4856740	Symbol	paramName		4856504						
ANR	4856741	Symbol	directory		4856504						
ANR	4856742	Symbol	errorMsg		4856504						
ANR	4856743	Symbol	fileNameToLogicalLines		4856504						
ANR	4856744	Symbol	token		4856504						
ANR	4856745	Symbol	DELIM		4856504						
ANR	4856746	Symbol	fullpath		4856504						
ANR	4856747	Symbol	rawToken		4856504						
ANR	4856748	Symbol	true		4856504						
ANR	4856749	Symbol	logicalLines . next		4856504						
ANR	4856750	Symbol	submitLine . GetNextToken		4856504						
ANR	4856751	Symbol	strcasecmp		4856504						
ANR	4856752	Symbol	submitLine		4856504						
ANR	4856753	Symbol	token . Value		4856504						
ANR	4856754	Function	MultiLogFiles :: getValuesFromFile	743:0:20161:21826							
ANR	4856755	FunctionDef	"MultiLogFiles :: getValuesFromFile (const MyString & fileName , const MyString & keyword , StringList & values , int skipTokens)"		4856754	0					
ANR	4856756	CompoundStatement		746:0:20294:21826	4856754	0					
ANR	4856757	IdentifierDeclStatement	MyString errorMsg ;	748:1:20298:20315	4856754	0	True				
ANR	4856758	IdentifierDecl	errorMsg		4856754	0					
ANR	4856759	IdentifierDeclType	MyString		4856754	0					
ANR	4856760	Identifier	errorMsg		4856754	1					
ANR	4856761	IdentifierDeclStatement	StringList logicalLines ;	749:1:20318:20341	4856754	1	True				
ANR	4856762	IdentifierDecl	logicalLines		4856754	0					
ANR	4856763	IdentifierDeclType	StringList		4856754	0					
ANR	4856764	Identifier	logicalLines		4856754	1					
ANR	4856765	IfStatement	"if ( ( errorMsg = fileNameToLogicalLines ( fileName , logicalLines ) ) != """" )"		4856754	2					
ANR	4856766	Condition	"( errorMsg = fileNameToLogicalLines ( fileName , logicalLines ) ) != """""	750:6:20349:20419	4856754	0	True				
ANR	4856767	EqualityExpression	"( errorMsg = fileNameToLogicalLines ( fileName , logicalLines ) ) != """""		4856754	0		!=			
ANR	4856768	AssignmentExpression	"errorMsg = fileNameToLogicalLines ( fileName , logicalLines )"		4856754	0		=			
ANR	4856769	Identifier	errorMsg		4856754	0					
ANR	4856770	CallExpression	"fileNameToLogicalLines ( fileName , logicalLines )"		4856754	1					
ANR	4856771	Callee	fileNameToLogicalLines		4856754	0					
ANR	4856772	Identifier	fileNameToLogicalLines		4856754	0					
ANR	4856773	ArgumentList	fileName		4856754	1					
ANR	4856774	Argument	fileName		4856754	0					
ANR	4856775	Identifier	fileName		4856754	0					
ANR	4856776	Argument	logicalLines		4856754	1					
ANR	4856777	Identifier	logicalLines		4856754	0					
ANR	4856778	PrimaryExpression	""""""		4856754	1					
ANR	4856779	CompoundStatement		6:28:128:128	4856754	1					
ANR	4856780	ReturnStatement	return errorMsg ;	752:2:20427:20442	4856754	0	True				
ANR	4856781	Identifier	errorMsg		4856754	0					
ANR	4856782	IdentifierDeclStatement	const char * logicalLine ;	755:1:20449:20473	4856754	3	True				
ANR	4856783	IdentifierDecl	* logicalLine		4856754	0					
ANR	4856784	IdentifierDeclType	const char *		4856754	0					
ANR	4856785	Identifier	logicalLine		4856754	1					
ANR	4856786	WhileStatement	while ( ( logicalLine = logicalLines . next ( ) ) )		4856754	4					
ANR	4856787	Condition	logicalLine = logicalLines . next ( )	756:9:20484:20518	4856754	0	True				
ANR	4856788	AssignmentExpression	logicalLine = logicalLines . next ( )		4856754	0		=			
ANR	4856789	Identifier	logicalLine		4856754	0					
ANR	4856790	CallExpression	logicalLines . next ( )		4856754	1					
ANR	4856791	Callee	logicalLines . next		4856754	0					
ANR	4856792	MemberAccess	logicalLines . next		4856754	0					
ANR	4856793	Identifier	logicalLines		4856754	0					
ANR	4856794	Identifier	next		4856754	1					
ANR	4856795	ArgumentList			4856754	1					
ANR	4856796	CompoundStatement		11:47:227:227	4856754	1					
ANR	4856797	IfStatement	"if ( strcmp ( logicalLine , """" ) )"		4856754	0					
ANR	4856798	Condition	"strcmp ( logicalLine , """" )"	758:7:20532:20554	4856754	0	True				
ANR	4856799	CallExpression	"strcmp ( logicalLine , """" )"		4856754	0					
ANR	4856800	Callee	strcmp		4856754	0					
ANR	4856801	Identifier	strcmp		4856754	0					
ANR	4856802	ArgumentList	logicalLine		4856754	1					
ANR	4856803	Argument	logicalLine		4856754	0					
ANR	4856804	Identifier	logicalLine		4856754	0					
ANR	4856805	Argument	""""""		4856754	1					
ANR	4856806	PrimaryExpression	""""""		4856754	0					
ANR	4856807	CompoundStatement		17:3:351:388	4856754	1					
ANR	4856808	IdentifierDeclStatement	"StringList tokens ( logicalLine , "" \\t"" ) ;"	762:3:20646:20683	4856754	0	True				
ANR	4856809	IdentifierDecl	"tokens ( logicalLine , "" \\t"" )"		4856754	0					
ANR	4856810	IdentifierDeclType	StringList		4856754	0					
ANR	4856811	Identifier	tokens		4856754	1					
ANR	4856812	Expression	"logicalLine , "" \\t"""		4856754	2					
ANR	4856813	Identifier	logicalLine		4856754	0					
ANR	4856814	PrimaryExpression	""" \\t"""		4856754	1					
ANR	4856815	ExpressionStatement	tokens . rewind ( )	763:3:20688:20703	4856754	1	True				
ANR	4856816	CallExpression	tokens . rewind ( )		4856754	0					
ANR	4856817	Callee	tokens . rewind		4856754	0					
ANR	4856818	MemberAccess	tokens . rewind		4856754	0					
ANR	4856819	Identifier	tokens		4856754	0					
ANR	4856820	Identifier	rewind		4856754	1					
ANR	4856821	ArgumentList			4856754	1					
ANR	4856822	IfStatement	"if ( ! strcasecmp ( tokens . next ( ) , keyword . Value ( ) ) )"		4856754	2					
ANR	4856823	Condition	"! strcasecmp ( tokens . next ( ) , keyword . Value ( ) )"	765:8:20714:20756	4856754	0	True				
ANR	4856824	UnaryOperationExpression	"! strcasecmp ( tokens . next ( ) , keyword . Value ( ) )"		4856754	0					
ANR	4856825	UnaryOperator	!		4856754	0					
ANR	4856826	CallExpression	"strcasecmp ( tokens . next ( ) , keyword . Value ( ) )"		4856754	1					
ANR	4856827	Callee	strcasecmp		4856754	0					
ANR	4856828	Identifier	strcasecmp		4856754	0					
ANR	4856829	ArgumentList	tokens . next ( )		4856754	1					
ANR	4856830	Argument	tokens . next ( )		4856754	0					
ANR	4856831	CallExpression	tokens . next ( )		4856754	0					
ANR	4856832	Callee	tokens . next		4856754	0					
ANR	4856833	MemberAccess	tokens . next		4856754	0					
ANR	4856834	Identifier	tokens		4856754	0					
ANR	4856835	Identifier	next		4856754	1					
ANR	4856836	ArgumentList			4856754	1					
ANR	4856837	Argument	keyword . Value ( )		4856754	1					
ANR	4856838	CallExpression	keyword . Value ( )		4856754	0					
ANR	4856839	Callee	keyword . Value		4856754	0					
ANR	4856840	MemberAccess	keyword . Value		4856754	0					
ANR	4856841	Identifier	keyword		4856754	0					
ANR	4856842	Identifier	Value		4856754	1					
ANR	4856843	ArgumentList			4856754	1					
ANR	4856844	CompoundStatement		45:4:1231:1257	4856754	1					
ANR	4856845	ForStatement	for ( int skipped = 0 ; skipped < skipTokens ; skipped ++ )		4856754	0					
ANR	4856846	ForInit	int skipped = 0 ;	767:10:20807:20822	4856754	0	True				
ANR	4856847	IdentifierDeclStatement	int skipped = 0 ;		4856754	0					
ANR	4856848	IdentifierDecl	skipped = 0		4856754	0					
ANR	4856849	IdentifierDeclType	int		4856754	0					
ANR	4856850	Identifier	skipped		4856754	1					
ANR	4856851	AssignmentExpression	skipped = 0		4856754	2		=			
ANR	4856852	Identifier	skipped		4856754	0					
ANR	4856853	PrimaryExpression	0		4856754	1					
ANR	4856854	Condition	skipped < skipTokens	767:27:20824:20843	4856754	1	True				
ANR	4856855	RelationalExpression	skipped < skipTokens		4856754	0		<			
ANR	4856856	Identifier	skipped		4856754	0					
ANR	4856857	Identifier	skipTokens		4856754	1					
ANR	4856858	PostIncDecOperationExpression	skipped ++	767:49:20846:20854	4856754	2	True				
ANR	4856859	Identifier	skipped		4856754	0					
ANR	4856860	IncDec	++		4856754	1					
ANR	4856861	CompoundStatement		22:61:563:563	4856754	3					
ANR	4856862	IfStatement	if ( ! tokens . next ( ) )		4856754	0					
ANR	4856863	Condition	! tokens . next ( )	768:10:20870:20883	4856754	0	True				
ANR	4856864	UnaryOperationExpression	! tokens . next ( )		4856754	0					
ANR	4856865	UnaryOperator	!		4856754	0					
ANR	4856866	CallExpression	tokens . next ( )		4856754	1					
ANR	4856867	Callee	tokens . next		4856754	0					
ANR	4856868	MemberAccess	tokens . next		4856754	0					
ANR	4856869	Identifier	tokens		4856754	0					
ANR	4856870	Identifier	next		4856754	1					
ANR	4856871	ArgumentList			4856754	1					
ANR	4856872	CompoundStatement		23:27:592:592	4856754	1					
ANR	4856873	Statement	MyString	769:6:20895:20902	4856754	0	True				
ANR	4856874	Statement	result	769:15:20904:20909	4856754	1	True				
ANR	4856875	Statement	=	769:22:20911:20911	4856754	2	True				
ANR	4856876	Statement	MyString	769:24:20913:20920	4856754	3	True				
ANR	4856877	Statement	(	769:32:20921:20921	4856754	4	True				
ANR	4856878	Statement	"""Improperly-formatted DAG """	769:34:20923:20949	4856754	5	True				
ANR	4856879	Statement	"""file: value missing after keyword <"""	770:9:20960:20996	4856754	6	True				
ANR	4856880	Statement	)	770:47:20998:20998	4856754	7	True				
ANR	4856881	ExpressionStatement	"+ keyword + "">"""	770:49:21000:21024	4856754	8	True				
ANR	4856882	AdditiveExpression	"+ keyword + "">"""		4856754	0		+			
ANR	4856883	UnaryOperationExpression	+ keyword		4856754	0					
ANR	4856884	UnaryOperator	+		4856754	0					
ANR	4856885	Identifier	keyword		4856754	1					
ANR	4856886	PrimaryExpression	""">"""		4856754	1					
ANR	4856887	ReturnStatement	return result ;	772:9:21035:21048	4856754	9	True				
ANR	4856888	Identifier	result		4856754	0					
ANR	4856889	IdentifierDeclStatement	const char * newValue = tokens . next ( ) ;	777:4:21091:21127	4856754	1	True				
ANR	4856890	IdentifierDecl	* newValue = tokens . next ( )		4856754	0					
ANR	4856891	IdentifierDeclType	const char *		4856754	0					
ANR	4856892	Identifier	newValue		4856754	1					
ANR	4856893	AssignmentExpression	* newValue = tokens . next ( )		4856754	2		=			
ANR	4856894	Identifier	newValue		4856754	0					
ANR	4856895	CallExpression	tokens . next ( )		4856754	1					
ANR	4856896	Callee	tokens . next		4856754	0					
ANR	4856897	MemberAccess	tokens . next		4856754	0					
ANR	4856898	Identifier	tokens		4856754	0					
ANR	4856899	Identifier	next		4856754	1					
ANR	4856900	ArgumentList			4856754	1					
ANR	4856901	IfStatement	"if ( ! newValue || ! strcmp ( newValue , """" ) )"		4856754	2					
ANR	4856902	Condition	"! newValue || ! strcmp ( newValue , """" )"	778:9:21138:21172	4856754	0	True				
ANR	4856903	OrExpression	"! newValue || ! strcmp ( newValue , """" )"		4856754	0		||			
ANR	4856904	UnaryOperationExpression	! newValue		4856754	0					
ANR	4856905	UnaryOperator	!		4856754	0					
ANR	4856906	Identifier	newValue		4856754	1					
ANR	4856907	UnaryOperationExpression	"! strcmp ( newValue , """" )"		4856754	1					
ANR	4856908	UnaryOperator	!		4856754	0					
ANR	4856909	CallExpression	"strcmp ( newValue , """" )"		4856754	1					
ANR	4856910	Callee	strcmp		4856754	0					
ANR	4856911	Identifier	strcmp		4856754	0					
ANR	4856912	ArgumentList	newValue		4856754	1					
ANR	4856913	Argument	newValue		4856754	0					
ANR	4856914	Identifier	newValue		4856754	0					
ANR	4856915	Argument	""""""		4856754	1					
ANR	4856916	PrimaryExpression	""""""		4856754	0					
ANR	4856917	CompoundStatement		33:47:881:881	4856754	1					
ANR	4856918	Statement	MyString	779:5:21183:21190	4856754	0	True				
ANR	4856919	Statement	result	779:14:21192:21197	4856754	1	True				
ANR	4856920	Statement	=	779:21:21199:21199	4856754	2	True				
ANR	4856921	Statement	MyString	779:23:21201:21208	4856754	3	True				
ANR	4856922	Statement	(	779:31:21209:21209	4856754	4	True				
ANR	4856923	Statement	"""Improperly-formatted DAG """	779:33:21211:21237	4856754	5	True				
ANR	4856924	Statement	"""file: value missing after keyword <"""	780:8:21247:21283	4856754	6	True				
ANR	4856925	Statement	)	780:46:21285:21285	4856754	7	True				
ANR	4856926	ExpressionStatement	"+ keyword + "">"""	780:48:21287:21310	4856754	8	True				
ANR	4856927	AdditiveExpression	"+ keyword + "">"""		4856754	0		+			
ANR	4856928	UnaryOperationExpression	+ keyword		4856754	0					
ANR	4856929	UnaryOperator	+		4856754	0					
ANR	4856930	Identifier	keyword		4856754	1					
ANR	4856931	PrimaryExpression	""">"""		4856754	1					
ANR	4856932	ReturnStatement	return result ;	782:8:21320:21333	4856754	9	True				
ANR	4856933	Identifier	result		4856754	0					
ANR	4856934	ExpressionStatement	values . rewind ( )	788:4:21480:21495	4856754	3	True				
ANR	4856935	CallExpression	values . rewind ( )		4856754	0					
ANR	4856936	Callee	values . rewind		4856754	0					
ANR	4856937	MemberAccess	values . rewind		4856754	0					
ANR	4856938	Identifier	values		4856754	0					
ANR	4856939	Identifier	rewind		4856754	1					
ANR	4856940	ArgumentList			4856754	1					
ANR	4856941	IdentifierDeclStatement	char * existingValue ;	789:4:21501:21520	4856754	4	True				
ANR	4856942	IdentifierDecl	* existingValue		4856754	0					
ANR	4856943	IdentifierDeclType	char *		4856754	0					
ANR	4856944	Identifier	existingValue		4856754	1					
ANR	4856945	IdentifierDeclStatement	bool alreadyInList = false ;	790:4:21526:21552	4856754	5	True				
ANR	4856946	IdentifierDecl	alreadyInList = false		4856754	0					
ANR	4856947	IdentifierDeclType	bool		4856754	0					
ANR	4856948	Identifier	alreadyInList		4856754	1					
ANR	4856949	AssignmentExpression	alreadyInList = false		4856754	2		=			
ANR	4856950	Identifier	false		4856754	0					
ANR	4856951	Identifier	false		4856754	1					
ANR	4856952	WhileStatement	while ( ( existingValue = values . next ( ) ) )		4856754	6					
ANR	4856953	Condition	existingValue = values . next ( )	791:12:21566:21596	4856754	0	True				
ANR	4856954	AssignmentExpression	existingValue = values . next ( )		4856754	0		=			
ANR	4856955	Identifier	existingValue		4856754	0					
ANR	4856956	CallExpression	values . next ( )		4856754	1					
ANR	4856957	Callee	values . next		4856754	0					
ANR	4856958	MemberAccess	values . next		4856754	0					
ANR	4856959	Identifier	values		4856754	0					
ANR	4856960	Identifier	next		4856754	1					
ANR	4856961	ArgumentList			4856754	1					
ANR	4856962	CompoundStatement		46:46:1305:1305	4856754	1					
ANR	4856963	IfStatement	"if ( ! strcmp ( existingValue , newValue ) )"		4856754	0					
ANR	4856964	Condition	"! strcmp ( existingValue , newValue )"	792:9:21611:21644	4856754	0	True				
ANR	4856965	UnaryOperationExpression	"! strcmp ( existingValue , newValue )"		4856754	0					
ANR	4856966	UnaryOperator	!		4856754	0					
ANR	4856967	CallExpression	"strcmp ( existingValue , newValue )"		4856754	1					
ANR	4856968	Callee	strcmp		4856754	0					
ANR	4856969	Identifier	strcmp		4856754	0					
ANR	4856970	ArgumentList	existingValue		4856754	1					
ANR	4856971	Argument	existingValue		4856754	0					
ANR	4856972	Identifier	existingValue		4856754	0					
ANR	4856973	Argument	newValue		4856754	1					
ANR	4856974	Identifier	newValue		4856754	0					
ANR	4856975	CompoundStatement		47:46:1353:1353	4856754	1					
ANR	4856976	ExpressionStatement	alreadyInList = true	793:6:21656:21676	4856754	0	True				
ANR	4856977	AssignmentExpression	alreadyInList = true		4856754	0		=			
ANR	4856978	Identifier	alreadyInList		4856754	0					
ANR	4856979	Identifier	true		4856754	1					
ANR	4856980	IfStatement	if ( ! alreadyInList )		4856754	7					
ANR	4856981	Condition	! alreadyInList	797:8:21700:21713	4856754	0	True				
ANR	4856982	UnaryOperationExpression	! alreadyInList		4856754	0					
ANR	4856983	UnaryOperator	!		4856754	0					
ANR	4856984	Identifier	alreadyInList		4856754	1					
ANR	4856985	CompoundStatement		52:24:1421:1421	4856754	1					
ANR	4856986	ExpressionStatement	values . append ( newValue )	799:5:21769:21792	4856754	0	True				
ANR	4856987	CallExpression	values . append ( newValue )		4856754	0					
ANR	4856988	Callee	values . append		4856754	0					
ANR	4856989	MemberAccess	values . append		4856754	0					
ANR	4856990	Identifier	values		4856754	0					
ANR	4856991	Identifier	append		4856754	1					
ANR	4856992	ArgumentList	newValue		4856754	1					
ANR	4856993	Argument	newValue		4856754	0					
ANR	4856994	Identifier	newValue		4856754	0					
ANR	4856995	ReturnStatement	"return """" ;"	805:1:21815:21824	4856754	5	True				
ANR	4856996	PrimaryExpression	""""""		4856754	0					
ANR	4856997	ReturnType	MyString		4856754	1					
ANR	4856998	Identifier	MultiLogFiles :: getValuesFromFile		4856754	2					
ANR	4856999	ParameterList	"const MyString & fileName , const MyString & keyword , StringList & values , int skipTokens"		4856754	3					
ANR	4857000	Parameter	const MyString & fileName	744:33:20203:20226	4856754	0	True				
ANR	4857001	ParameterType	const MyString &		4856754	0					
ANR	4857002	Identifier	fileName		4856754	1					
ANR	4857003	Parameter	const MyString & keyword	745:3:20233:20255	4856754	1	True				
ANR	4857004	ParameterType	const MyString &		4856754	0					
ANR	4857005	Identifier	keyword		4856754	1					
ANR	4857006	Parameter	StringList & values	745:28:20258:20275	4856754	2	True				
ANR	4857007	ParameterType	StringList &		4856754	0					
ANR	4857008	Identifier	values		4856754	1					
ANR	4857009	Parameter	int skipTokens	745:48:20278:20291	4856754	3	True				
ANR	4857010	ParameterType	int		4856754	0					
ANR	4857011	Identifier	skipTokens		4856754	1					
ANR	4857012	CFGEntryNode	ENTRY		4856754		True				
ANR	4857013	CFGExitNode	EXIT		4856754		True				
ANR	4857014	Symbol	strcmp		4856754						
ANR	4857015	Symbol	logicalLine		4856754						
ANR	4857016	Symbol	newValue		4856754						
ANR	4857017	Symbol	fileName		4856754						
ANR	4857018	Symbol	logicalLines		4856754						
ANR	4857019	Symbol	values		4856754						
ANR	4857020	Symbol	values . next		4856754						
ANR	4857021	Symbol	false		4856754						
ANR	4857022	Symbol	tokens . next		4856754						
ANR	4857023	Symbol	skipTokens		4856754						
ANR	4857024	Symbol	errorMsg		4856754						
ANR	4857025	Symbol	fileNameToLogicalLines		4856754						
ANR	4857026	Symbol	skipped		4856754						
ANR	4857027	Symbol	result		4856754						
ANR	4857028	Symbol	keyword . Value		4856754						
ANR	4857029	Symbol	true		4856754						
ANR	4857030	Symbol	alreadyInList		4856754						
ANR	4857031	Symbol	logicalLines . next		4856754						
ANR	4857032	Symbol	tokens		4856754						
ANR	4857033	Symbol	keyword		4856754						
ANR	4857034	Symbol	strcasecmp		4856754						
ANR	4857035	Symbol	existingValue		4856754						
ANR	4857036	Function	MultiLogFiles :: getParamFromSubmitLine	810:0:21910:22415							
ANR	4857037	FunctionDef	"MultiLogFiles :: getParamFromSubmitLine (MyString & submitLine , const char * paramName)"		4857036	0					
ANR	4857038	CompoundStatement		813:0:22004:22415	4857036	0					
ANR	4857039	IdentifierDeclStatement	"MyString paramValue ( """" ) ;"	814:1:22007:22030	4857036	0	True				
ANR	4857040	IdentifierDecl	"paramValue ( """" )"		4857036	0					
ANR	4857041	IdentifierDeclType	MyString		4857036	0					
ANR	4857042	Identifier	paramValue		4857036	1					
ANR	4857043	PrimaryExpression	""""""		4857036	2					
ANR	4857044	IdentifierDeclStatement	"const char * DELIM = ""="" ;"	816:1:22034:22057	4857036	1	True				
ANR	4857045	IdentifierDecl	"* DELIM = ""="""		4857036	0					
ANR	4857046	IdentifierDeclType	const char *		4857036	0					
ANR	4857047	Identifier	DELIM		4857036	1					
ANR	4857048	AssignmentExpression	"* DELIM = ""="""		4857036	2		=			
ANR	4857049	Identifier	DELIM		4857036	0					
ANR	4857050	PrimaryExpression	"""="""		4857036	1					
ANR	4857051	ExpressionStatement	submitLine . Tokenize ( )	818:1:22061:22082	4857036	2	True				
ANR	4857052	CallExpression	submitLine . Tokenize ( )		4857036	0					
ANR	4857053	Callee	submitLine . Tokenize		4857036	0					
ANR	4857054	MemberAccess	submitLine . Tokenize		4857036	0					
ANR	4857055	Identifier	submitLine		4857036	0					
ANR	4857056	Identifier	Tokenize		4857036	1					
ANR	4857057	ArgumentList			4857036	1					
ANR	4857058	IdentifierDeclStatement	"const char * rawToken = submitLine . GetNextToken ( DELIM , true ) ;"	819:1:22085:22145	4857036	3	True				
ANR	4857059	IdentifierDecl	"* rawToken = submitLine . GetNextToken ( DELIM , true )"		4857036	0					
ANR	4857060	IdentifierDeclType	const char *		4857036	0					
ANR	4857061	Identifier	rawToken		4857036	1					
ANR	4857062	AssignmentExpression	"* rawToken = submitLine . GetNextToken ( DELIM , true )"		4857036	2		=			
ANR	4857063	Identifier	rawToken		4857036	0					
ANR	4857064	CallExpression	"submitLine . GetNextToken ( DELIM , true )"		4857036	1					
ANR	4857065	Callee	submitLine . GetNextToken		4857036	0					
ANR	4857066	MemberAccess	submitLine . GetNextToken		4857036	0					
ANR	4857067	Identifier	submitLine		4857036	0					
ANR	4857068	Identifier	GetNextToken		4857036	1					
ANR	4857069	ArgumentList	DELIM		4857036	1					
ANR	4857070	Argument	DELIM		4857036	0					
ANR	4857071	Identifier	DELIM		4857036	0					
ANR	4857072	Argument	true		4857036	1					
ANR	4857073	Identifier	true		4857036	0					
ANR	4857074	IfStatement	if ( rawToken )		4857036	4					
ANR	4857075	Condition	rawToken	820:6:22153:22160	4857036	0	True				
ANR	4857076	Identifier	rawToken		4857036	0					
ANR	4857077	CompoundStatement		9:2:163:187	4857036	1					
ANR	4857078	IdentifierDeclStatement	MyString token ( rawToken ) ;	821:2:22168:22192	4857036	0	True				
ANR	4857079	IdentifierDecl	token ( rawToken )		4857036	0					
ANR	4857080	IdentifierDeclType	MyString		4857036	0					
ANR	4857081	Identifier	token		4857036	1					
ANR	4857082	Identifier	rawToken		4857036	2					
ANR	4857083	ExpressionStatement	token . trim ( )	822:2:22196:22208	4857036	1	True				
ANR	4857084	CallExpression	token . trim ( )		4857036	0					
ANR	4857085	Callee	token . trim		4857036	0					
ANR	4857086	MemberAccess	token . trim		4857036	0					
ANR	4857087	Identifier	token		4857036	0					
ANR	4857088	Identifier	trim		4857036	1					
ANR	4857089	ArgumentList			4857036	1					
ANR	4857090	IfStatement	"if ( ! strcasecmp ( token . Value ( ) , paramName ) )"		4857036	2					
ANR	4857091	Condition	"! strcasecmp ( token . Value ( ) , paramName )"	823:7:22217:22253	4857036	0	True				
ANR	4857092	UnaryOperationExpression	"! strcasecmp ( token . Value ( ) , paramName )"		4857036	0					
ANR	4857093	UnaryOperator	!		4857036	0					
ANR	4857094	CallExpression	"strcasecmp ( token . Value ( ) , paramName )"		4857036	1					
ANR	4857095	Callee	strcasecmp		4857036	0					
ANR	4857096	Identifier	strcasecmp		4857036	0					
ANR	4857097	ArgumentList	token . Value ( )		4857036	1					
ANR	4857098	Argument	token . Value ( )		4857036	0					
ANR	4857099	CallExpression	token . Value ( )		4857036	0					
ANR	4857100	Callee	token . Value		4857036	0					
ANR	4857101	MemberAccess	token . Value		4857036	0					
ANR	4857102	Identifier	token		4857036	0					
ANR	4857103	Identifier	Value		4857036	1					
ANR	4857104	ArgumentList			4857036	1					
ANR	4857105	Argument	paramName		4857036	1					
ANR	4857106	Identifier	paramName		4857036	0					
ANR	4857107	CompoundStatement		11:47:252:252	4857036	1					
ANR	4857108	ExpressionStatement	"rawToken = submitLine . GetNextToken ( DELIM , true )"	824:3:22262:22309	4857036	0	True				
ANR	4857109	AssignmentExpression	"rawToken = submitLine . GetNextToken ( DELIM , true )"		4857036	0		=			
ANR	4857110	Identifier	rawToken		4857036	0					
ANR	4857111	CallExpression	"submitLine . GetNextToken ( DELIM , true )"		4857036	1					
ANR	4857112	Callee	submitLine . GetNextToken		4857036	0					
ANR	4857113	MemberAccess	submitLine . GetNextToken		4857036	0					
ANR	4857114	Identifier	submitLine		4857036	0					
ANR	4857115	Identifier	GetNextToken		4857036	1					
ANR	4857116	ArgumentList	DELIM		4857036	1					
ANR	4857117	Argument	DELIM		4857036	0					
ANR	4857118	Identifier	DELIM		4857036	0					
ANR	4857119	Argument	true		4857036	1					
ANR	4857120	Identifier	true		4857036	0					
ANR	4857121	IfStatement	if ( rawToken )		4857036	1					
ANR	4857122	Condition	rawToken	825:8:22319:22326	4857036	0	True				
ANR	4857123	Identifier	rawToken		4857036	0					
ANR	4857124	CompoundStatement		13:19:325:325	4857036	1					
ANR	4857125	ExpressionStatement	paramValue = rawToken	826:4:22336:22357	4857036	0	True				
ANR	4857126	AssignmentExpression	paramValue = rawToken		4857036	0		=			
ANR	4857127	Identifier	paramValue		4857036	0					
ANR	4857128	Identifier	rawToken		4857036	1					
ANR	4857129	ExpressionStatement	paramValue . trim ( )	827:4:22363:22380	4857036	1	True				
ANR	4857130	CallExpression	paramValue . trim ( )		4857036	0					
ANR	4857131	Callee	paramValue . trim		4857036	0					
ANR	4857132	MemberAccess	paramValue . trim		4857036	0					
ANR	4857133	Identifier	paramValue		4857036	0					
ANR	4857134	Identifier	trim		4857036	1					
ANR	4857135	ArgumentList			4857036	1					
ANR	4857136	ReturnStatement	return paramValue ;	832:1:22396:22413	4857036	5	True				
ANR	4857137	Identifier	paramValue		4857036	0					
ANR	4857138	ReturnType	MyString		4857036	1					
ANR	4857139	Identifier	MultiLogFiles :: getParamFromSubmitLine		4857036	2					
ANR	4857140	ParameterList	"MyString & submitLine , const char * paramName"		4857036	3					
ANR	4857141	Parameter	MyString & submitLine	811:38:21957:21976	4857036	0	True				
ANR	4857142	ParameterType	MyString &		4857036	0					
ANR	4857143	Identifier	submitLine		4857036	1					
ANR	4857144	Parameter	const char * paramName	812:2:21981:22001	4857036	1	True				
ANR	4857145	ParameterType	const char *		4857036	0					
ANR	4857146	Identifier	paramName		4857036	1					
ANR	4857147	CFGEntryNode	ENTRY		4857036		True				
ANR	4857148	CFGExitNode	EXIT		4857036		True				
ANR	4857149	Symbol	DELIM		4857036						
ANR	4857150	Symbol	rawToken		4857036						
ANR	4857151	Symbol	true		4857036						
ANR	4857152	Symbol	paramName		4857036						
ANR	4857153	Symbol	submitLine . GetNextToken		4857036						
ANR	4857154	Symbol	strcasecmp		4857036						
ANR	4857155	Symbol	submitLine		4857036						
ANR	4857156	Symbol	token . Value		4857036						
ANR	4857157	Symbol	paramValue		4857036						
ANR	4857158	Symbol	token		4857036						
ANR	4857159	Function	MultiLogFiles :: CombineLines	837:0:22499:23648							
ANR	4857160	FunctionDef	"MultiLogFiles :: CombineLines (StringList & listIn , char continuation , const MyString & filename , StringList & listOut)"		4857159	0					
ANR	4857161	CompoundStatement		840:0:22624:23648	4857159	0					
ANR	4857162	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""MultiLogFiles::CombineLines(%s, %c)\\n"" , filename . Value ( ) , continuation )"	841:1:22627:22726	4857159	0	True				
ANR	4857163	CallExpression	"dprintf ( D_FULLDEBUG , ""MultiLogFiles::CombineLines(%s, %c)\\n"" , filename . Value ( ) , continuation )"		4857159	0					
ANR	4857164	Callee	dprintf		4857159	0					
ANR	4857165	Identifier	dprintf		4857159	0					
ANR	4857166	ArgumentList	D_FULLDEBUG		4857159	1					
ANR	4857167	Argument	D_FULLDEBUG		4857159	0					
ANR	4857168	Identifier	D_FULLDEBUG		4857159	0					
ANR	4857169	Argument	"""MultiLogFiles::CombineLines(%s, %c)\\n"""		4857159	1					
ANR	4857170	PrimaryExpression	"""MultiLogFiles::CombineLines(%s, %c)\\n"""		4857159	0					
ANR	4857171	Argument	filename . Value ( )		4857159	2					
ANR	4857172	CallExpression	filename . Value ( )		4857159	0					
ANR	4857173	Callee	filename . Value		4857159	0					
ANR	4857174	MemberAccess	filename . Value		4857159	0					
ANR	4857175	Identifier	filename		4857159	0					
ANR	4857176	Identifier	Value		4857159	1					
ANR	4857177	ArgumentList			4857159	1					
ANR	4857178	Argument	continuation		4857159	3					
ANR	4857179	Identifier	continuation		4857159	0					
ANR	4857180	ExpressionStatement	listIn . rewind ( )	844:1:22730:22745	4857159	1	True				
ANR	4857181	CallExpression	listIn . rewind ( )		4857159	0					
ANR	4857182	Callee	listIn . rewind		4857159	0					
ANR	4857183	MemberAccess	listIn . rewind		4857159	0					
ANR	4857184	Identifier	listIn		4857159	0					
ANR	4857185	Identifier	rewind		4857159	1					
ANR	4857186	ArgumentList			4857159	1					
ANR	4857187	IdentifierDeclStatement	const char * physicalLine ;	847:1:22793:22817	4857159	2	True				
ANR	4857188	IdentifierDecl	* physicalLine		4857159	0					
ANR	4857189	IdentifierDeclType	const char *		4857159	0					
ANR	4857190	Identifier	physicalLine		4857159	1					
ANR	4857191	WhileStatement	while ( ( physicalLine = listIn . next ( ) ) != NULL )		4857159	3					
ANR	4857192	Condition	( physicalLine = listIn . next ( ) ) != NULL	848:9:22828:22865	4857159	0	True				
ANR	4857193	EqualityExpression	( physicalLine = listIn . next ( ) ) != NULL		4857159	0		!=			
ANR	4857194	AssignmentExpression	physicalLine = listIn . next ( )		4857159	0		=			
ANR	4857195	Identifier	physicalLine		4857159	0					
ANR	4857196	CallExpression	listIn . next ( )		4857159	1					
ANR	4857197	Callee	listIn . next		4857159	0					
ANR	4857198	MemberAccess	listIn . next		4857159	0					
ANR	4857199	Identifier	listIn		4857159	0					
ANR	4857200	Identifier	next		4857159	1					
ANR	4857201	ArgumentList			4857159	1					
ANR	4857202	Identifier	NULL		4857159	1					
ANR	4857203	CompoundStatement		13:2:351:385	4857159	1					
ANR	4857204	IdentifierDeclStatement	MyString logicalLine ( physicalLine ) ;	852:2:22976:23010	4857159	0	True				
ANR	4857205	IdentifierDecl	logicalLine ( physicalLine )		4857159	0					
ANR	4857206	IdentifierDeclType	MyString		4857159	0					
ANR	4857207	Identifier	logicalLine		4857159	1					
ANR	4857208	Identifier	physicalLine		4857159	2					
ANR	4857209	WhileStatement	while ( logicalLine [ logicalLine . Length ( ) - 1 ] == continuation )		4857159	1					
ANR	4857210	Condition	logicalLine [ logicalLine . Length ( ) - 1 ] == continuation	854:10:23023:23073	4857159	0	True				
ANR	4857211	EqualityExpression	logicalLine [ logicalLine . Length ( ) - 1 ] == continuation		4857159	0		==			
ANR	4857212	ArrayIndexing	logicalLine [ logicalLine . Length ( ) - 1 ]		4857159	0					
ANR	4857213	Identifier	logicalLine		4857159	0					
ANR	4857214	AdditiveExpression	logicalLine . Length ( ) - 1		4857159	1		-			
ANR	4857215	CallExpression	logicalLine . Length ( )		4857159	0					
ANR	4857216	Callee	logicalLine . Length		4857159	0					
ANR	4857217	MemberAccess	logicalLine . Length		4857159	0					
ANR	4857218	Identifier	logicalLine		4857159	0					
ANR	4857219	Identifier	Length		4857159	1					
ANR	4857220	ArgumentList			4857159	1					
ANR	4857221	PrimaryExpression	1		4857159	1					
ANR	4857222	Identifier	continuation		4857159	1					
ANR	4857223	CompoundStatement		15:64:452:452	4857159	1					
ANR	4857224	ExpressionStatement	"logicalLine . setChar ( logicalLine . Length ( ) - 1 , '\\0' )"	857:3:23125:23174	4857159	0	True				
ANR	4857225	CallExpression	"logicalLine . setChar ( logicalLine . Length ( ) - 1 , '\\0' )"		4857159	0					
ANR	4857226	Callee	logicalLine . setChar		4857159	0					
ANR	4857227	MemberAccess	logicalLine . setChar		4857159	0					
ANR	4857228	Identifier	logicalLine		4857159	0					
ANR	4857229	Identifier	setChar		4857159	1					
ANR	4857230	ArgumentList	logicalLine . Length ( ) - 1		4857159	1					
ANR	4857231	Argument	logicalLine . Length ( ) - 1		4857159	0					
ANR	4857232	AdditiveExpression	logicalLine . Length ( ) - 1		4857159	0		-			
ANR	4857233	CallExpression	logicalLine . Length ( )		4857159	0					
ANR	4857234	Callee	logicalLine . Length		4857159	0					
ANR	4857235	MemberAccess	logicalLine . Length		4857159	0					
ANR	4857236	Identifier	logicalLine		4857159	0					
ANR	4857237	Identifier	Length		4857159	1					
ANR	4857238	ArgumentList			4857159	1					
ANR	4857239	PrimaryExpression	1		4857159	1					
ANR	4857240	Argument	'\\0'		4857159	1					
ANR	4857241	PrimaryExpression	'\\0'		4857159	0					
ANR	4857242	ExpressionStatement	physicalLine = listIn . next ( )	860:3:23218:23246	4857159	1	True				
ANR	4857243	AssignmentExpression	physicalLine = listIn . next ( )		4857159	0		=			
ANR	4857244	Identifier	physicalLine		4857159	0					
ANR	4857245	CallExpression	listIn . next ( )		4857159	1					
ANR	4857246	Callee	listIn . next		4857159	0					
ANR	4857247	MemberAccess	listIn . next		4857159	0					
ANR	4857248	Identifier	listIn		4857159	0					
ANR	4857249	Identifier	next		4857159	1					
ANR	4857250	ArgumentList			4857159	1					
ANR	4857251	IfStatement	if ( physicalLine )		4857159	2					
ANR	4857252	Condition	physicalLine	861:8:23256:23267	4857159	0	True				
ANR	4857253	Identifier	physicalLine		4857159	0					
ANR	4857254	CompoundStatement		22:23:646:646	4857159	1					
ANR	4857255	ExpressionStatement	logicalLine += physicalLine	862:4:23277:23304	4857159	0	True				
ANR	4857256	AssignmentExpression	logicalLine += physicalLine		4857159	0		+=			
ANR	4857257	Identifier	logicalLine		4857159	0					
ANR	4857258	Identifier	physicalLine		4857159	1					
ANR	4857259	ElseStatement	else		4857159	0					
ANR	4857260	CompoundStatement		25:4:697:855	4857159	0					
ANR	4857261	IdentifierDeclStatement	"MyString result = MyString ( ""Improper file syntax: "" ) + ""continuation character with no trailing line! ("" + logicalLine + "") in file "" + filename ;"	864:4:23322:23480	4857159	0	True				
ANR	4857262	IdentifierDecl	"result = MyString ( ""Improper file syntax: "" ) + ""continuation character with no trailing line! ("" + logicalLine + "") in file "" + filename"		4857159	0					
ANR	4857263	IdentifierDeclType	MyString		4857159	0					
ANR	4857264	Identifier	result		4857159	1					
ANR	4857265	AssignmentExpression	"result = MyString ( ""Improper file syntax: "" ) + ""continuation character with no trailing line! ("" + logicalLine + "") in file "" + filename"		4857159	2		=			
ANR	4857266	Identifier	result		4857159	0					
ANR	4857267	AdditiveExpression	"MyString ( ""Improper file syntax: "" ) + ""continuation character with no trailing line! ("" + logicalLine + "") in file "" + filename"		4857159	1		+			
ANR	4857268	CallExpression	"MyString ( ""Improper file syntax: "" )"		4857159	0					
ANR	4857269	Callee	MyString		4857159	0					
ANR	4857270	Identifier	MyString		4857159	0					
ANR	4857271	ArgumentList	"""Improper file syntax: """		4857159	1					
ANR	4857272	Argument	"""Improper file syntax: """		4857159	0					
ANR	4857273	PrimaryExpression	"""Improper file syntax: """		4857159	0					
ANR	4857274	AdditiveExpression	"""continuation character with no trailing line! ("" + logicalLine + "") in file "" + filename"		4857159	1		+			
ANR	4857275	PrimaryExpression	"""continuation character with no trailing line! ("""		4857159	0					
ANR	4857276	AdditiveExpression	"logicalLine + "") in file "" + filename"		4857159	1		+			
ANR	4857277	Identifier	logicalLine		4857159	0					
ANR	4857278	AdditiveExpression	""") in file "" + filename"		4857159	1		+			
ANR	4857279	PrimaryExpression	""") in file """		4857159	0					
ANR	4857280	Identifier	filename		4857159	1					
ANR	4857281	ExpressionStatement	"dprintf ( D_ALWAYS , ""MultiLogFiles: %s\\n"" , result . Value ( ) )"	867:4:23486:23542	4857159	1	True				
ANR	4857282	CallExpression	"dprintf ( D_ALWAYS , ""MultiLogFiles: %s\\n"" , result . Value ( ) )"		4857159	0					
ANR	4857283	Callee	dprintf		4857159	0					
ANR	4857284	Identifier	dprintf		4857159	0					
ANR	4857285	ArgumentList	D_ALWAYS		4857159	1					
ANR	4857286	Argument	D_ALWAYS		4857159	0					
ANR	4857287	Identifier	D_ALWAYS		4857159	0					
ANR	4857288	Argument	"""MultiLogFiles: %s\\n"""		4857159	1					
ANR	4857289	PrimaryExpression	"""MultiLogFiles: %s\\n"""		4857159	0					
ANR	4857290	Argument	result . Value ( )		4857159	2					
ANR	4857291	CallExpression	result . Value ( )		4857159	0					
ANR	4857292	Callee	result . Value		4857159	0					
ANR	4857293	MemberAccess	result . Value		4857159	0					
ANR	4857294	Identifier	result		4857159	0					
ANR	4857295	Identifier	Value		4857159	1					
ANR	4857296	ArgumentList			4857159	1					
ANR	4857297	ReturnStatement	return result ;	868:4:23548:23561	4857159	2	True				
ANR	4857298	Identifier	result		4857159	0					
ANR	4857299	ExpressionStatement	listOut . append ( logicalLine . Value ( ) )	872:2:23575:23610	4857159	2	True				
ANR	4857300	CallExpression	listOut . append ( logicalLine . Value ( ) )		4857159	0					
ANR	4857301	Callee	listOut . append		4857159	0					
ANR	4857302	MemberAccess	listOut . append		4857159	0					
ANR	4857303	Identifier	listOut		4857159	0					
ANR	4857304	Identifier	append		4857159	1					
ANR	4857305	ArgumentList	logicalLine . Value ( )		4857159	1					
ANR	4857306	Argument	logicalLine . Value ( )		4857159	0					
ANR	4857307	CallExpression	logicalLine . Value ( )		4857159	0					
ANR	4857308	Callee	logicalLine . Value		4857159	0					
ANR	4857309	MemberAccess	logicalLine . Value		4857159	0					
ANR	4857310	Identifier	logicalLine		4857159	0					
ANR	4857311	Identifier	Value		4857159	1					
ANR	4857312	ArgumentList			4857159	1					
ANR	4857313	ReturnStatement	"return """" ;"	875:1:23617:23626	4857159	4	True				
ANR	4857314	PrimaryExpression	""""""		4857159	0					
ANR	4857315	ReturnType	MyString		4857159	1					
ANR	4857316	Identifier	MultiLogFiles :: CombineLines		4857159	2					
ANR	4857317	ParameterList	"StringList & listIn , char continuation , const MyString & filename , StringList & listOut"		4857159	3					
ANR	4857318	Parameter	StringList & listIn	838:28:22536:22553	4857159	0	True				
ANR	4857319	ParameterType	StringList &		4857159	0					
ANR	4857320	Identifier	listIn		4857159	1					
ANR	4857321	Parameter	char continuation	838:48:22556:22572	4857159	1	True				
ANR	4857322	ParameterType	char		4857159	0					
ANR	4857323	Identifier	continuation		4857159	1					
ANR	4857324	Parameter	const MyString & filename	839:2:22577:22600	4857159	2	True				
ANR	4857325	ParameterType	const MyString &		4857159	0					
ANR	4857326	Identifier	filename		4857159	1					
ANR	4857327	Parameter	StringList & listOut	839:28:22603:22621	4857159	3	True				
ANR	4857328	ParameterType	StringList &		4857159	0					
ANR	4857329	Identifier	listOut		4857159	1					
ANR	4857330	CFGEntryNode	ENTRY		4857159		True				
ANR	4857331	CFGExitNode	EXIT		4857159		True				
ANR	4857332	Symbol	logicalLine		4857159						
ANR	4857333	Symbol	* logicalLine . Length		4857159						
ANR	4857334	Symbol	NULL		4857159						
ANR	4857335	Symbol	logicalLine . Value		4857159						
ANR	4857336	Symbol	listOut		4857159						
ANR	4857337	Symbol	D_ALWAYS		4857159						
ANR	4857338	Symbol	listIn		4857159						
ANR	4857339	Symbol	D_FULLDEBUG		4857159						
ANR	4857340	Symbol	listIn . next		4857159						
ANR	4857341	Symbol	filename . Value		4857159						
ANR	4857342	Symbol	result		4857159						
ANR	4857343	Symbol	filename		4857159						
ANR	4857344	Symbol	result . Value		4857159						
ANR	4857345	Symbol	* logicalLine		4857159						
ANR	4857346	Symbol	logicalLine . Length		4857159						
ANR	4857347	Symbol	MyString		4857159						
ANR	4857348	Symbol	continuation		4857159						
ANR	4857349	Symbol	physicalLine		4857159						
ANR	4857350	Function	ReadMultipleUserLogs :: hashFuncJobID	880:0:23732:24080							
ANR	4857351	FunctionDef	ReadMultipleUserLogs :: hashFuncJobID (const CondorID & key)		4857350	0					
ANR	4857352	CompoundStatement		882:0:23802:24080	4857350	0					
ANR	4857353	IdentifierDeclStatement	int result = ( key . _cluster * 29 ) ^ ( key . _proc * 7 ) ^ key . _subproc ;	883:1:23805:23871	4857350	0	True				
ANR	4857354	IdentifierDecl	result = ( key . _cluster * 29 ) ^ ( key . _proc * 7 ) ^ key . _subproc		4857350	0					
ANR	4857355	IdentifierDeclType	int		4857350	0					
ANR	4857356	Identifier	result		4857350	1					
ANR	4857357	AssignmentExpression	result = ( key . _cluster * 29 ) ^ ( key . _proc * 7 ) ^ key . _subproc		4857350	2		=			
ANR	4857358	Identifier	result		4857350	0					
ANR	4857359	ExclusiveOrExpression	( key . _cluster * 29 ) ^ ( key . _proc * 7 ) ^ key . _subproc		4857350	1		^			
ANR	4857360	MultiplicativeExpression	key . _cluster * 29		4857350	0		*			
ANR	4857361	MemberAccess	key . _cluster		4857350	0					
ANR	4857362	Identifier	key		4857350	0					
ANR	4857363	Identifier	_cluster		4857350	1					
ANR	4857364	PrimaryExpression	29		4857350	1					
ANR	4857365	ExclusiveOrExpression	( key . _proc * 7 ) ^ key . _subproc		4857350	1		^			
ANR	4857366	MultiplicativeExpression	key . _proc * 7		4857350	0		*			
ANR	4857367	MemberAccess	key . _proc		4857350	0					
ANR	4857368	Identifier	key		4857350	0					
ANR	4857369	Identifier	_proc		4857350	1					
ANR	4857370	PrimaryExpression	7		4857350	1					
ANR	4857371	MemberAccess	key . _subproc		4857350	1					
ANR	4857372	Identifier	key		4857350	0					
ANR	4857373	Identifier	_subproc		4857350	1					
ANR	4857374	IfStatement	if ( result < 0 )		4857350	1					
ANR	4857375	Condition	result < 0	887:6:24018:24027	4857350	0	True				
ANR	4857376	RelationalExpression	result < 0		4857350	0		<			
ANR	4857377	Identifier	result		4857350	0					
ANR	4857378	PrimaryExpression	0		4857350	1					
ANR	4857379	ExpressionStatement	result = - result	887:19:24031:24047	4857350	1	True				
ANR	4857380	AssignmentExpression	result = - result		4857350	0		=			
ANR	4857381	Identifier	result		4857350	0					
ANR	4857382	UnaryOperationExpression	- result		4857350	1					
ANR	4857383	UnaryOperator	-		4857350	0					
ANR	4857384	Identifier	result		4857350	1					
ANR	4857385	ReturnStatement	return ( unsigned int ) result ;	889:1:24051:24078	4857350	2	True				
ANR	4857386	CastExpression	( unsigned int ) result		4857350	0					
ANR	4857387	CastTarget	unsigned int		4857350	0					
ANR	4857388	Identifier	result		4857350	1					
ANR	4857389	ReturnType	unsigned int		4857350	1					
ANR	4857390	Identifier	ReadMultipleUserLogs :: hashFuncJobID		4857350	2					
ANR	4857391	ParameterList	const CondorID & key		4857350	3					
ANR	4857392	Parameter	const CondorID & key	881:36:23781:23799	4857350	0	True				
ANR	4857393	ParameterType	const CondorID &		4857350	0					
ANR	4857394	Identifier	key		4857350	1					
ANR	4857395	CFGEntryNode	ENTRY		4857350		True				
ANR	4857396	CFGExitNode	EXIT		4857350		True				
ANR	4857397	Symbol	result		4857350						
ANR	4857398	Symbol	key . _cluster		4857350						
ANR	4857399	Symbol	key . _proc		4857350						
ANR	4857400	Symbol	key . _subproc		4857350						
ANR	4857401	Symbol	key		4857350						
ANR	4857402	Function	MultiLogFiles :: logFileNFSError	894:0:24164:24770							
ANR	4857403	FunctionDef	"MultiLogFiles :: logFileNFSError (const char * logFilename , bool nfsIsError)"		4857402	0					
ANR	4857404	CompoundStatement		896:0:24242:24770	4857402	0					
ANR	4857405	IdentifierDeclStatement	BOOLEAN isNfs ;	898:1:24246:24259	4857402	0	True				
ANR	4857406	IdentifierDecl	isNfs		4857402	0					
ANR	4857407	IdentifierDeclType	BOOLEAN		4857402	0					
ANR	4857408	Identifier	isNfs		4857402	1					
ANR	4857409	IfStatement	"if ( fs_detect_nfs ( logFilename , & isNfs ) != 0 )"		4857402	1					
ANR	4857410	Condition	"fs_detect_nfs ( logFilename , & isNfs ) != 0"	900:6:24271:24311	4857402	0	True				
ANR	4857411	EqualityExpression	"fs_detect_nfs ( logFilename , & isNfs ) != 0"		4857402	0		!=			
ANR	4857412	CallExpression	"fs_detect_nfs ( logFilename , & isNfs )"		4857402	0					
ANR	4857413	Callee	fs_detect_nfs		4857402	0					
ANR	4857414	Identifier	fs_detect_nfs		4857402	0					
ANR	4857415	ArgumentList	logFilename		4857402	1					
ANR	4857416	Argument	logFilename		4857402	0					
ANR	4857417	Identifier	logFilename		4857402	0					
ANR	4857418	Argument	& isNfs		4857402	1					
ANR	4857419	UnaryOperationExpression	& isNfs		4857402	0					
ANR	4857420	UnaryOperator	&		4857402	0					
ANR	4857421	Identifier	isNfs		4857402	1					
ANR	4857422	PrimaryExpression	0		4857402	1					
ANR	4857423	CompoundStatement		5:50:72:72	4857402	1					
ANR	4857424	Statement	dprintf	902:2:24355:24361	4857402	0	True				
ANR	4857425	Statement	(	902:9:24362:24362	4857402	1	True				
ANR	4857426	Statement	D_ALWAYS	902:10:24363:24370	4857402	2	True				
ANR	4857427	Statement	","	902:18:24371:24371	4857402	3	True				
ANR	4857428	Statement	"""WARNING: can't determine whether log file %s """	902:20:24373:24419	4857402	4	True				
ANR	4857429	Statement	"""is on NFS.\\n"""	903:3:24424:24437	4857402	5	True				
ANR	4857430	Statement	","	903:17:24438:24438	4857402	6	True				
ANR	4857431	Statement	logFilename	903:19:24440:24450	4857402	7	True				
ANR	4857432	Statement	)	903:30:24451:24451	4857402	8	True				
ANR	4857433	ExpressionStatement		903:31:24452:24452	4857402	9	True				
ANR	4857434	ElseStatement	else		4857402	0					
ANR	4857435	IfStatement	if ( isNfs )		4857402	0					
ANR	4857436	Condition	isNfs	905:13:24468:24472	4857402	0	True				
ANR	4857437	Identifier	isNfs		4857402	0					
ANR	4857438	CompoundStatement		10:21:233:233	4857402	1					
ANR	4857439	IfStatement	if ( nfsIsError )		4857402	0					
ANR	4857440	Condition	nfsIsError	906:7:24485:24494	4857402	0	True				
ANR	4857441	Identifier	nfsIsError		4857402	0					
ANR	4857442	CompoundStatement		11:20:255:255	4857402	1					
ANR	4857443	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: log file %s is on NFS.\\n"" , logFilename )"	907:3:24503:24568	4857402	0	True				
ANR	4857444	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: log file %s is on NFS.\\n"" , logFilename )"		4857402	0					
ANR	4857445	Callee	dprintf		4857402	0					
ANR	4857446	Identifier	dprintf		4857402	0					
ANR	4857447	ArgumentList	D_ALWAYS		4857402	1					
ANR	4857448	Argument	D_ALWAYS		4857402	0					
ANR	4857449	Identifier	D_ALWAYS		4857402	0					
ANR	4857450	Argument	"""ERROR: log file %s is on NFS.\\n"""		4857402	1					
ANR	4857451	PrimaryExpression	"""ERROR: log file %s is on NFS.\\n"""		4857402	0					
ANR	4857452	Argument	logFilename		4857402	2					
ANR	4857453	Identifier	logFilename		4857402	0					
ANR	4857454	ReturnStatement	return true ;	908:3:24573:24584	4857402	1	True				
ANR	4857455	Identifier	true		4857402	0					
ANR	4857456	ElseStatement	else		4857402	0					
ANR	4857457	CompoundStatement		14:9:352:352	4857402	0					
ANR	4857458	Statement	dprintf	910:3:24600:24606	4857402	0	True				
ANR	4857459	Statement	(	910:10:24607:24607	4857402	1	True				
ANR	4857460	Statement	D_FULLDEBUG	910:11:24608:24618	4857402	2	True				
ANR	4857461	Statement	","	910:22:24619:24619	4857402	3	True				
ANR	4857462	Statement	"""WARNING: log file %s is on NFS.  This """	910:24:24621:24660	4857402	4	True				
ANR	4857463	Statement	"""could cause log file corruption and is _not_ recommended.\\n"""	911:4:24666:24726	4857402	5	True				
ANR	4857464	Statement	","	911:65:24727:24727	4857402	6	True				
ANR	4857465	Statement	logFilename	912:4:24733:24743	4857402	7	True				
ANR	4857466	Statement	)	912:15:24744:24744	4857402	8	True				
ANR	4857467	ExpressionStatement		912:16:24745:24745	4857402	9	True				
ANR	4857468	ReturnStatement	return false ;	916:1:24756:24768	4857402	2	True				
ANR	4857469	Identifier	false		4857402	0					
ANR	4857470	ReturnType	bool		4857402	1					
ANR	4857471	Identifier	MultiLogFiles :: logFileNFSError		4857402	2					
ANR	4857472	ParameterList	"const char * logFilename , bool nfsIsError"		4857402	3					
ANR	4857473	Parameter	const char * logFilename	895:31:24200:24222	4857402	0	True				
ANR	4857474	ParameterType	const char *		4857402	0					
ANR	4857475	Identifier	logFilename		4857402	1					
ANR	4857476	Parameter	bool nfsIsError	895:56:24225:24239	4857402	1	True				
ANR	4857477	ParameterType	bool		4857402	0					
ANR	4857478	Identifier	nfsIsError		4857402	1					
ANR	4857479	CFGEntryNode	ENTRY		4857402		True				
ANR	4857480	CFGExitNode	EXIT		4857402		True				
ANR	4857481	Symbol	logFilename		4857402						
ANR	4857482	Symbol	nfsIsError		4857402						
ANR	4857483	Symbol	& isNfs		4857402						
ANR	4857484	Symbol	D_ALWAYS		4857402						
ANR	4857485	Symbol	true		4857402						
ANR	4857486	Symbol	false		4857402						
ANR	4857487	Symbol	isNfs		4857402						
ANR	4857488	Symbol	fs_detect_nfs		4857402						
ANR	4857489	Function	GetFileID	926:0:25233:26684							
ANR	4857490	FunctionDef	"GetFileID (const MyString & filename , MyString & fileID , CondorError & errstack)"		4857489	0					
ANR	4857491	CompoundStatement		929:0:25320:26684	4857489	0					
ANR	4857492	IfStatement	"if ( access ( filename . Value ( ) , F_OK ) != 0 )"		4857489	0					
ANR	4857493	Condition	"access ( filename . Value ( ) , F_OK ) != 0"	938:6:25711:25747	4857489	0	True				
ANR	4857494	EqualityExpression	"access ( filename . Value ( ) , F_OK ) != 0"		4857489	0		!=			
ANR	4857495	CallExpression	"access ( filename . Value ( ) , F_OK )"		4857489	0					
ANR	4857496	Callee	access		4857489	0					
ANR	4857497	Identifier	access		4857489	0					
ANR	4857498	ArgumentList	filename . Value ( )		4857489	1					
ANR	4857499	Argument	filename . Value ( )		4857489	0					
ANR	4857500	CallExpression	filename . Value ( )		4857489	0					
ANR	4857501	Callee	filename . Value		4857489	0					
ANR	4857502	MemberAccess	filename . Value		4857489	0					
ANR	4857503	Identifier	filename		4857489	0					
ANR	4857504	Identifier	Value		4857489	1					
ANR	4857505	ArgumentList			4857489	1					
ANR	4857506	Argument	F_OK		4857489	1					
ANR	4857507	Identifier	F_OK		4857489	0					
ANR	4857508	PrimaryExpression	0		4857489	1					
ANR	4857509	CompoundStatement		10:46:430:430	4857489	1					
ANR	4857510	IfStatement	"if ( ! MultiLogFiles :: InitializeFile ( filename . Value ( ) , false , errstack ) )"		4857489	0					
ANR	4857511	Condition	"! MultiLogFiles :: InitializeFile ( filename . Value ( ) , false , errstack )"	939:7:25760:25831	4857489	0	True				
ANR	4857512	UnaryOperationExpression	"! MultiLogFiles :: InitializeFile ( filename . Value ( ) , false , errstack )"		4857489	0					
ANR	4857513	UnaryOperator	!		4857489	0					
ANR	4857514	CallExpression	"MultiLogFiles :: InitializeFile ( filename . Value ( ) , false , errstack )"		4857489	1					
ANR	4857515	Callee	MultiLogFiles :: InitializeFile		4857489	0					
ANR	4857516	Identifier	MultiLogFiles :: InitializeFile		4857489	0					
ANR	4857517	ArgumentList	filename . Value ( )		4857489	1					
ANR	4857518	Argument	filename . Value ( )		4857489	0					
ANR	4857519	CallExpression	filename . Value ( )		4857489	0					
ANR	4857520	Callee	filename . Value		4857489	0					
ANR	4857521	MemberAccess	filename . Value		4857489	0					
ANR	4857522	Identifier	filename		4857489	0					
ANR	4857523	Identifier	Value		4857489	1					
ANR	4857524	ArgumentList			4857489	1					
ANR	4857525	Argument	false		4857489	1					
ANR	4857526	Identifier	false		4857489	0					
ANR	4857527	Argument	errstack		4857489	2					
ANR	4857528	Identifier	errstack		4857489	0					
ANR	4857529	CompoundStatement		12:25:514:514	4857489	1					
ANR	4857530	ExpressionStatement	"errstack . pushf ( ""ReadMultipleUserLogs"" , UTIL_ERR_LOG_FILE , ""Error initializing log file %s"" , filename . Value ( ) )"	941:3:25840:25957	4857489	0	True				
ANR	4857531	CallExpression	"errstack . pushf ( ""ReadMultipleUserLogs"" , UTIL_ERR_LOG_FILE , ""Error initializing log file %s"" , filename . Value ( ) )"		4857489	0					
ANR	4857532	Callee	errstack . pushf		4857489	0					
ANR	4857533	MemberAccess	errstack . pushf		4857489	0					
ANR	4857534	Identifier	errstack		4857489	0					
ANR	4857535	Identifier	pushf		4857489	1					
ANR	4857536	ArgumentList	"""ReadMultipleUserLogs"""		4857489	1					
ANR	4857537	Argument	"""ReadMultipleUserLogs"""		4857489	0					
ANR	4857538	PrimaryExpression	"""ReadMultipleUserLogs"""		4857489	0					
ANR	4857539	Argument	UTIL_ERR_LOG_FILE		4857489	1					
ANR	4857540	Identifier	UTIL_ERR_LOG_FILE		4857489	0					
ANR	4857541	Argument	"""Error initializing log file %s"""		4857489	2					
ANR	4857542	PrimaryExpression	"""Error initializing log file %s"""		4857489	0					
ANR	4857543	Argument	filename . Value ( )		4857489	3					
ANR	4857544	CallExpression	filename . Value ( )		4857489	0					
ANR	4857545	Callee	filename . Value		4857489	0					
ANR	4857546	MemberAccess	filename . Value		4857489	0					
ANR	4857547	Identifier	filename		4857489	0					
ANR	4857548	Identifier	Value		4857489	1					
ANR	4857549	ArgumentList			4857489	1					
ANR	4857550	ReturnStatement	return false ;	943:3:25962:25974	4857489	1	True				
ANR	4857551	Identifier	false		4857489	0					
ANR	4857552	IdentifierDeclStatement	"char * tmpRealPath = realpath ( filename . Value ( ) , NULL ) ;"	948:1:25998:26052	4857489	1	True				
ANR	4857553	IdentifierDecl	"* tmpRealPath = realpath ( filename . Value ( ) , NULL )"		4857489	0					
ANR	4857554	IdentifierDeclType	char *		4857489	0					
ANR	4857555	Identifier	tmpRealPath		4857489	1					
ANR	4857556	AssignmentExpression	"* tmpRealPath = realpath ( filename . Value ( ) , NULL )"		4857489	2		=			
ANR	4857557	Identifier	tmpRealPath		4857489	0					
ANR	4857558	CallExpression	"realpath ( filename . Value ( ) , NULL )"		4857489	1					
ANR	4857559	Callee	realpath		4857489	0					
ANR	4857560	Identifier	realpath		4857489	0					
ANR	4857561	ArgumentList	filename . Value ( )		4857489	1					
ANR	4857562	Argument	filename . Value ( )		4857489	0					
ANR	4857563	CallExpression	filename . Value ( )		4857489	0					
ANR	4857564	Callee	filename . Value		4857489	0					
ANR	4857565	MemberAccess	filename . Value		4857489	0					
ANR	4857566	Identifier	filename		4857489	0					
ANR	4857567	Identifier	Value		4857489	1					
ANR	4857568	ArgumentList			4857489	1					
ANR	4857569	Argument	NULL		4857489	1					
ANR	4857570	Identifier	NULL		4857489	0					
ANR	4857571	IfStatement	if ( ! tmpRealPath )		4857489	2					
ANR	4857572	Condition	! tmpRealPath	949:6:26060:26071	4857489	0	True				
ANR	4857573	UnaryOperationExpression	! tmpRealPath		4857489	0					
ANR	4857574	UnaryOperator	!		4857489	0					
ANR	4857575	Identifier	tmpRealPath		4857489	1					
ANR	4857576	CompoundStatement		21:21:754:754	4857489	1					
ANR	4857577	ExpressionStatement	"errstack . pushf ( ""ReadMultipleUserLogs"" , UTIL_ERR_LOG_FILE , ""Error (%d, %s) getting real path for specified path %s"" , errno , strerror ( errno ) , filename . Value ( ) )"	950:2:26079:26250	4857489	0	True				
ANR	4857578	CallExpression	"errstack . pushf ( ""ReadMultipleUserLogs"" , UTIL_ERR_LOG_FILE , ""Error (%d, %s) getting real path for specified path %s"" , errno , strerror ( errno ) , filename . Value ( ) )"		4857489	0					
ANR	4857579	Callee	errstack . pushf		4857489	0					
ANR	4857580	MemberAccess	errstack . pushf		4857489	0					
ANR	4857581	Identifier	errstack		4857489	0					
ANR	4857582	Identifier	pushf		4857489	1					
ANR	4857583	ArgumentList	"""ReadMultipleUserLogs"""		4857489	1					
ANR	4857584	Argument	"""ReadMultipleUserLogs"""		4857489	0					
ANR	4857585	PrimaryExpression	"""ReadMultipleUserLogs"""		4857489	0					
ANR	4857586	Argument	UTIL_ERR_LOG_FILE		4857489	1					
ANR	4857587	Identifier	UTIL_ERR_LOG_FILE		4857489	0					
ANR	4857588	Argument	"""Error (%d, %s) getting real path for specified path %s"""		4857489	2					
ANR	4857589	PrimaryExpression	"""Error (%d, %s) getting real path for specified path %s"""		4857489	0					
ANR	4857590	Argument	errno		4857489	3					
ANR	4857591	Identifier	errno		4857489	0					
ANR	4857592	Argument	strerror ( errno )		4857489	4					
ANR	4857593	CallExpression	strerror ( errno )		4857489	0					
ANR	4857594	Callee	strerror		4857489	0					
ANR	4857595	Identifier	strerror		4857489	0					
ANR	4857596	ArgumentList	errno		4857489	1					
ANR	4857597	Argument	errno		4857489	0					
ANR	4857598	Identifier	errno		4857489	0					
ANR	4857599	Argument	filename . Value ( )		4857489	5					
ANR	4857600	CallExpression	filename . Value ( )		4857489	0					
ANR	4857601	Callee	filename . Value		4857489	0					
ANR	4857602	MemberAccess	filename . Value		4857489	0					
ANR	4857603	Identifier	filename		4857489	0					
ANR	4857604	Identifier	Value		4857489	1					
ANR	4857605	ArgumentList			4857489	1					
ANR	4857606	ReturnStatement	return false ;	953:2:26254:26266	4857489	1	True				
ANR	4857607	Identifier	false		4857489	0					
ANR	4857608	ExpressionStatement	fileID = tmpRealPath	956:1:26273:26293	4857489	3	True				
ANR	4857609	AssignmentExpression	fileID = tmpRealPath		4857489	0		=			
ANR	4857610	Identifier	fileID		4857489	0					
ANR	4857611	Identifier	tmpRealPath		4857489	1					
ANR	4857612	ExpressionStatement	free ( tmpRealPath )	957:1:26296:26315	4857489	4	True				
ANR	4857613	CallExpression	free ( tmpRealPath )		4857489	0					
ANR	4857614	Callee	free		4857489	0					
ANR	4857615	Identifier	free		4857489	0					
ANR	4857616	ArgumentList	tmpRealPath		4857489	1					
ANR	4857617	Argument	tmpRealPath		4857489	0					
ANR	4857618	Identifier	tmpRealPath		4857489	0					
ANR	4857619	ReturnStatement	return true ;	970:1:26671:26682	4857489	5	True				
ANR	4857620	Identifier	true		4857489	0					
ANR	4857621	ReturnType	bool		4857489	1					
ANR	4857622	Identifier	GetFileID		4857489	2					
ANR	4857623	ParameterList	"const MyString & filename , MyString & fileID , CondorError & errstack"		4857489	3					
ANR	4857624	Parameter	const MyString & filename	927:11:25249:25272	4857489	0	True				
ANR	4857625	ParameterType	const MyString &		4857489	0					
ANR	4857626	Identifier	filename		4857489	1					
ANR	4857627	Parameter	MyString & fileID	927:37:25275:25290	4857489	1	True				
ANR	4857628	ParameterType	MyString &		4857489	0					
ANR	4857629	Identifier	fileID		4857489	1					
ANR	4857630	Parameter	CondorError & errstack	928:3:25296:25316	4857489	2	True				
ANR	4857631	ParameterType	CondorError &		4857489	0					
ANR	4857632	Identifier	errstack		4857489	1					
ANR	4857633	CFGEntryNode	ENTRY		4857489		True				
ANR	4857634	CFGExitNode	EXIT		4857489		True				
ANR	4857635	Symbol	errno		4857489						
ANR	4857636	Symbol	access		4857489						
ANR	4857637	Symbol	MultiLogFiles :: InitializeFile		4857489						
ANR	4857638	Symbol	NULL		4857489						
ANR	4857639	Symbol	realpath		4857489						
ANR	4857640	Symbol	false		4857489						
ANR	4857641	Symbol	filename . Value		4857489						
ANR	4857642	Symbol	UTIL_ERR_LOG_FILE		4857489						
ANR	4857643	Symbol	tmpRealPath		4857489						
ANR	4857644	Symbol	strerror		4857489						
ANR	4857645	Symbol	filename		4857489						
ANR	4857646	Symbol	errstack		4857489						
ANR	4857647	Symbol	F_OK		4857489						
ANR	4857648	Symbol	true		4857489						
ANR	4857649	Symbol	fileID		4857489						
ANR	4857650	Function	ReadMultipleUserLogs :: monitorLogFile	977:0:26864:29772							
ANR	4857651	FunctionDef	"ReadMultipleUserLogs :: monitorLogFile (MyString logfile , bool truncateIfFirst , CondorError & errstack)"		4857650	0					
ANR	4857652	CompoundStatement		980:0:26974:29772	4857650	0					
ANR	4857653	ExpressionStatement	"dprintf ( D_LOG_FILES , ""ReadMultipleUserLogs::monitorLogFile(%s, %d)\\n"" , logfile . Value ( ) , truncateIfFirst )"	981:1:26977:27087	4857650	0	True				
ANR	4857654	CallExpression	"dprintf ( D_LOG_FILES , ""ReadMultipleUserLogs::monitorLogFile(%s, %d)\\n"" , logfile . Value ( ) , truncateIfFirst )"		4857650	0					
ANR	4857655	Callee	dprintf		4857650	0					
ANR	4857656	Identifier	dprintf		4857650	0					
ANR	4857657	ArgumentList	D_LOG_FILES		4857650	1					
ANR	4857658	Argument	D_LOG_FILES		4857650	0					
ANR	4857659	Identifier	D_LOG_FILES		4857650	0					
ANR	4857660	Argument	"""ReadMultipleUserLogs::monitorLogFile(%s, %d)\\n"""		4857650	1					
ANR	4857661	PrimaryExpression	"""ReadMultipleUserLogs::monitorLogFile(%s, %d)\\n"""		4857650	0					
ANR	4857662	Argument	logfile . Value ( )		4857650	2					
ANR	4857663	CallExpression	logfile . Value ( )		4857650	0					
ANR	4857664	Callee	logfile . Value		4857650	0					
ANR	4857665	MemberAccess	logfile . Value		4857650	0					
ANR	4857666	Identifier	logfile		4857650	0					
ANR	4857667	Identifier	Value		4857650	1					
ANR	4857668	ArgumentList			4857650	1					
ANR	4857669	Argument	truncateIfFirst		4857650	3					
ANR	4857670	Identifier	truncateIfFirst		4857650	0					
ANR	4857671	IdentifierDeclStatement	MyString fileID ;	984:1:27091:27106	4857650	1	True				
ANR	4857672	IdentifierDecl	fileID		4857650	0					
ANR	4857673	IdentifierDeclType	MyString		4857650	0					
ANR	4857674	Identifier	fileID		4857650	1					
ANR	4857675	IfStatement	"if ( ! GetFileID ( logfile , fileID , errstack ) )"		4857650	2					
ANR	4857676	Condition	"! GetFileID ( logfile , fileID , errstack )"	985:6:27114:27152	4857650	0	True				
ANR	4857677	UnaryOperationExpression	"! GetFileID ( logfile , fileID , errstack )"		4857650	0					
ANR	4857678	UnaryOperator	!		4857650	0					
ANR	4857679	CallExpression	"GetFileID ( logfile , fileID , errstack )"		4857650	1					
ANR	4857680	Callee	GetFileID		4857650	0					
ANR	4857681	Identifier	GetFileID		4857650	0					
ANR	4857682	ArgumentList	logfile		4857650	1					
ANR	4857683	Argument	logfile		4857650	0					
ANR	4857684	Identifier	logfile		4857650	0					
ANR	4857685	Argument	fileID		4857650	1					
ANR	4857686	Identifier	fileID		4857650	0					
ANR	4857687	Argument	errstack		4857650	2					
ANR	4857688	Identifier	errstack		4857650	0					
ANR	4857689	CompoundStatement		6:48:181:181	4857650	1					
ANR	4857690	ExpressionStatement	"errstack . push ( ""ReadMultipleUserLogs"" , UTIL_ERR_LOG_FILE , ""Error getting file ID in monitorLogFile()"" )"	986:2:27160:27268	4857650	0	True				
ANR	4857691	CallExpression	"errstack . push ( ""ReadMultipleUserLogs"" , UTIL_ERR_LOG_FILE , ""Error getting file ID in monitorLogFile()"" )"		4857650	0					
ANR	4857692	Callee	errstack . push		4857650	0					
ANR	4857693	MemberAccess	errstack . push		4857650	0					
ANR	4857694	Identifier	errstack		4857650	0					
ANR	4857695	Identifier	push		4857650	1					
ANR	4857696	ArgumentList	"""ReadMultipleUserLogs"""		4857650	1					
ANR	4857697	Argument	"""ReadMultipleUserLogs"""		4857650	0					
ANR	4857698	PrimaryExpression	"""ReadMultipleUserLogs"""		4857650	0					
ANR	4857699	Argument	UTIL_ERR_LOG_FILE		4857650	1					
ANR	4857700	Identifier	UTIL_ERR_LOG_FILE		4857650	0					
ANR	4857701	Argument	"""Error getting file ID in monitorLogFile()"""		4857650	2					
ANR	4857702	PrimaryExpression	"""Error getting file ID in monitorLogFile()"""		4857650	0					
ANR	4857703	ReturnStatement	return false ;	988:2:27272:27284	4857650	1	True				
ANR	4857704	Identifier	false		4857650	0					
ANR	4857705	IdentifierDeclStatement	LogFileMonitor * monitor ;	991:1:27291:27314	4857650	3	True				
ANR	4857706	IdentifierDecl	* monitor		4857650	0					
ANR	4857707	IdentifierDeclType	LogFileMonitor *		4857650	0					
ANR	4857708	Identifier	monitor		4857650	1					
ANR	4857709	IfStatement	"if ( allLogFiles . lookup ( fileID , monitor ) == 0 )"		4857650	4					
ANR	4857710	Condition	"allLogFiles . lookup ( fileID , monitor ) == 0"	992:6:27322:27363	4857650	0	True				
ANR	4857711	EqualityExpression	"allLogFiles . lookup ( fileID , monitor ) == 0"		4857650	0		==			
ANR	4857712	CallExpression	"allLogFiles . lookup ( fileID , monitor )"		4857650	0					
ANR	4857713	Callee	allLogFiles . lookup		4857650	0					
ANR	4857714	MemberAccess	allLogFiles . lookup		4857650	0					
ANR	4857715	Identifier	allLogFiles		4857650	0					
ANR	4857716	Identifier	lookup		4857650	1					
ANR	4857717	ArgumentList	fileID		4857650	1					
ANR	4857718	Argument	fileID		4857650	0					
ANR	4857719	Identifier	fileID		4857650	0					
ANR	4857720	Argument	monitor		4857650	1					
ANR	4857721	Identifier	monitor		4857650	0					
ANR	4857722	PrimaryExpression	0		4857650	1					
ANR	4857723	CompoundStatement		13:51:392:392	4857650	1					
ANR	4857724	Statement	dprintf	993:2:27371:27377	4857650	0	True				
ANR	4857725	Statement	(	993:9:27378:27378	4857650	1	True				
ANR	4857726	Statement	D_LOG_FILES	993:11:27380:27390	4857650	2	True				
ANR	4857727	Statement	","	993:22:27391:27391	4857650	3	True				
ANR	4857728	Statement	"""ReadMultipleUserLogs: found """	993:24:27393:27422	4857650	4	True				
ANR	4857729	Statement	"""LogFileMonitor object for %s (%s)\\n"""	994:5:27429:27465	4857650	5	True				
ANR	4857730	Statement	","	994:42:27466:27466	4857650	6	True				
ANR	4857731	Statement	logfile	995:5:27473:27479	4857650	7	True				
ANR	4857732	Statement	.	995:12:27480:27480	4857650	8	True				
ANR	4857733	Statement	Value	995:13:27481:27485	4857650	9	True				
ANR	4857734	Statement	(	995:18:27486:27486	4857650	10	True				
ANR	4857735	Statement	)	995:19:27487:27487	4857650	11	True				
ANR	4857736	Statement	","	995:20:27488:27488	4857650	12	True				
ANR	4857737	Statement	fileID	995:22:27490:27495	4857650	13	True				
ANR	4857738	Statement	.	995:28:27496:27496	4857650	14	True				
ANR	4857739	Statement	Value	995:29:27497:27501	4857650	15	True				
ANR	4857740	Statement	(	995:34:27502:27502	4857650	16	True				
ANR	4857741	Statement	)	995:35:27503:27503	4857650	17	True				
ANR	4857742	Statement	)	995:37:27505:27505	4857650	18	True				
ANR	4857743	ExpressionStatement		995:38:27506:27506	4857650	19	True				
ANR	4857744	ElseStatement	else		4857650	0					
ANR	4857745	CompoundStatement		18:8:542:542	4857650	0					
ANR	4857746	Statement	dprintf	998:2:27521:27527	4857650	0	True				
ANR	4857747	Statement	(	998:9:27528:27528	4857650	1	True				
ANR	4857748	Statement	D_LOG_FILES	998:11:27530:27540	4857650	2	True				
ANR	4857749	Statement	","	998:22:27541:27541	4857650	3	True				
ANR	4857750	Statement	"""ReadMultipleUserLogs: didn't """	998:24:27543:27573	4857650	4	True				
ANR	4857751	Statement	"""find LogFileMonitor object for %s (%s)\\n"""	999:5:27580:27621	4857650	5	True				
ANR	4857752	Statement	","	999:47:27622:27622	4857650	6	True				
ANR	4857753	Statement	logfile	1000:5:27629:27635	4857650	7	True				
ANR	4857754	Statement	.	1000:12:27636:27636	4857650	8	True				
ANR	4857755	Statement	Value	1000:13:27637:27641	4857650	9	True				
ANR	4857756	Statement	(	1000:18:27642:27642	4857650	10	True				
ANR	4857757	Statement	)	1000:19:27643:27643	4857650	11	True				
ANR	4857758	Statement	","	1000:20:27644:27644	4857650	12	True				
ANR	4857759	Statement	fileID	1000:22:27646:27651	4857650	13	True				
ANR	4857760	Statement	.	1000:28:27652:27652	4857650	14	True				
ANR	4857761	Statement	Value	1000:29:27653:27657	4857650	15	True				
ANR	4857762	Statement	(	1000:34:27658:27658	4857650	16	True				
ANR	4857763	Statement	)	1000:35:27659:27659	4857650	17	True				
ANR	4857764	Statement	)	1000:37:27661:27661	4857650	18	True				
ANR	4857765	ExpressionStatement		1000:38:27662:27662	4857650	19	True				
ANR	4857766	IfStatement	"if ( ! MultiLogFiles :: InitializeFile ( logfile . Value ( ) , truncateIfFirst , errstack ) )"		4857650	20					
ANR	4857767	Condition	"! MultiLogFiles :: InitializeFile ( logfile . Value ( ) , truncateIfFirst , errstack )"	1004:7:27780:27860	4857650	0	True				
ANR	4857768	UnaryOperationExpression	"! MultiLogFiles :: InitializeFile ( logfile . Value ( ) , truncateIfFirst , errstack )"		4857650	0					
ANR	4857769	UnaryOperator	!		4857650	0					
ANR	4857770	CallExpression	"MultiLogFiles :: InitializeFile ( logfile . Value ( ) , truncateIfFirst , errstack )"		4857650	1					
ANR	4857771	Callee	MultiLogFiles :: InitializeFile		4857650	0					
ANR	4857772	Identifier	MultiLogFiles :: InitializeFile		4857650	0					
ANR	4857773	ArgumentList	logfile . Value ( )		4857650	1					
ANR	4857774	Argument	logfile . Value ( )		4857650	0					
ANR	4857775	CallExpression	logfile . Value ( )		4857650	0					
ANR	4857776	Callee	logfile . Value		4857650	0					
ANR	4857777	MemberAccess	logfile . Value		4857650	0					
ANR	4857778	Identifier	logfile		4857650	0					
ANR	4857779	Identifier	Value		4857650	1					
ANR	4857780	ArgumentList			4857650	1					
ANR	4857781	Argument	truncateIfFirst		4857650	1					
ANR	4857782	Identifier	truncateIfFirst		4857650	0					
ANR	4857783	Argument	errstack		4857650	2					
ANR	4857784	Identifier	errstack		4857650	0					
ANR	4857785	CompoundStatement		26:35:889:889	4857650	1					
ANR	4857786	ExpressionStatement	"errstack . pushf ( ""ReadMultipleUserLogs"" , UTIL_ERR_LOG_FILE , ""Error initializing log file %s"" , logfile . Value ( ) )"	1006:3:27869:27985	4857650	0	True				
ANR	4857787	CallExpression	"errstack . pushf ( ""ReadMultipleUserLogs"" , UTIL_ERR_LOG_FILE , ""Error initializing log file %s"" , logfile . Value ( ) )"		4857650	0					
ANR	4857788	Callee	errstack . pushf		4857650	0					
ANR	4857789	MemberAccess	errstack . pushf		4857650	0					
ANR	4857790	Identifier	errstack		4857650	0					
ANR	4857791	Identifier	pushf		4857650	1					
ANR	4857792	ArgumentList	"""ReadMultipleUserLogs"""		4857650	1					
ANR	4857793	Argument	"""ReadMultipleUserLogs"""		4857650	0					
ANR	4857794	PrimaryExpression	"""ReadMultipleUserLogs"""		4857650	0					
ANR	4857795	Argument	UTIL_ERR_LOG_FILE		4857650	1					
ANR	4857796	Identifier	UTIL_ERR_LOG_FILE		4857650	0					
ANR	4857797	Argument	"""Error initializing log file %s"""		4857650	2					
ANR	4857798	PrimaryExpression	"""Error initializing log file %s"""		4857650	0					
ANR	4857799	Argument	logfile . Value ( )		4857650	3					
ANR	4857800	CallExpression	logfile . Value ( )		4857650	0					
ANR	4857801	Callee	logfile . Value		4857650	0					
ANR	4857802	MemberAccess	logfile . Value		4857650	0					
ANR	4857803	Identifier	logfile		4857650	0					
ANR	4857804	Identifier	Value		4857650	1					
ANR	4857805	ArgumentList			4857650	1					
ANR	4857806	ReturnStatement	return false ;	1008:3:27990:28002	4857650	1	True				
ANR	4857807	Identifier	false		4857650	0					
ANR	4857808	ExpressionStatement	monitor = new LogFileMonitor ( logfile )	1011:2:28011:28050	4857650	21	True				
ANR	4857809	AssignmentExpression	monitor = new LogFileMonitor ( logfile )		4857650	0		=			
ANR	4857810	Identifier	monitor		4857650	0					
ANR	4857811	Identifier	logfile		4857650	1					
ANR	4857812	ExpressionStatement	ASSERT ( monitor )	1012:2:28054:28071	4857650	22	True				
ANR	4857813	CallExpression	ASSERT ( monitor )		4857650	0					
ANR	4857814	Callee	ASSERT		4857650	0					
ANR	4857815	Identifier	ASSERT		4857650	0					
ANR	4857816	ArgumentList	monitor		4857650	1					
ANR	4857817	Argument	monitor		4857650	0					
ANR	4857818	Identifier	monitor		4857650	0					
ANR	4857819	Statement	dprintf	1013:2:28075:28081	4857650	23	True				
ANR	4857820	Statement	(	1013:9:28082:28082	4857650	24	True				
ANR	4857821	Statement	D_LOG_FILES	1013:11:28084:28094	4857650	25	True				
ANR	4857822	Statement	","	1013:22:28095:28095	4857650	26	True				
ANR	4857823	Statement	"""ReadMultipleUserLogs: created LogFileMonitor """	1013:24:28097:28143	4857650	27	True				
ANR	4857824	Statement	"""object for log file %s\\n"""	1014:5:28150:28175	4857650	28	True				
ANR	4857825	Statement	","	1014:31:28176:28176	4857650	29	True				
ANR	4857826	Statement	logfile	1014:33:28178:28184	4857650	30	True				
ANR	4857827	Statement	.	1014:40:28185:28185	4857650	31	True				
ANR	4857828	Statement	Value	1014:41:28186:28190	4857650	32	True				
ANR	4857829	Statement	(	1014:46:28191:28191	4857650	33	True				
ANR	4857830	Statement	)	1014:47:28192:28192	4857650	34	True				
ANR	4857831	Statement	)	1014:49:28194:28194	4857650	35	True				
ANR	4857832	ExpressionStatement		1014:50:28195:28195	4857650	36	True				
ANR	4857833	IfStatement	"if ( allLogFiles . insert ( fileID , monitor ) != 0 )"		4857650	37					
ANR	4857834	Condition	"allLogFiles . insert ( fileID , monitor ) != 0"	1018:7:28385:28426	4857650	0	True				
ANR	4857835	EqualityExpression	"allLogFiles . insert ( fileID , monitor ) != 0"		4857650	0		!=			
ANR	4857836	CallExpression	"allLogFiles . insert ( fileID , monitor )"		4857650	0					
ANR	4857837	Callee	allLogFiles . insert		4857650	0					
ANR	4857838	MemberAccess	allLogFiles . insert		4857650	0					
ANR	4857839	Identifier	allLogFiles		4857650	0					
ANR	4857840	Identifier	insert		4857650	1					
ANR	4857841	ArgumentList	fileID		4857650	1					
ANR	4857842	Argument	fileID		4857650	0					
ANR	4857843	Identifier	fileID		4857650	0					
ANR	4857844	Argument	monitor		4857650	1					
ANR	4857845	Identifier	monitor		4857650	0					
ANR	4857846	PrimaryExpression	0		4857650	1					
ANR	4857847	CompoundStatement		39:52:1455:1455	4857650	1					
ANR	4857848	ExpressionStatement	"errstack . pushf ( ""ReadMultipleUserLogs"" , UTIL_ERR_LOG_FILE , ""Error inserting %s into allLogFiles"" , logfile . Value ( ) )"	1019:3:28435:28562	4857650	0	True				
ANR	4857849	CallExpression	"errstack . pushf ( ""ReadMultipleUserLogs"" , UTIL_ERR_LOG_FILE , ""Error inserting %s into allLogFiles"" , logfile . Value ( ) )"		4857650	0					
ANR	4857850	Callee	errstack . pushf		4857650	0					
ANR	4857851	MemberAccess	errstack . pushf		4857650	0					
ANR	4857852	Identifier	errstack		4857650	0					
ANR	4857853	Identifier	pushf		4857650	1					
ANR	4857854	ArgumentList	"""ReadMultipleUserLogs"""		4857650	1					
ANR	4857855	Argument	"""ReadMultipleUserLogs"""		4857650	0					
ANR	4857856	PrimaryExpression	"""ReadMultipleUserLogs"""		4857650	0					
ANR	4857857	Argument	UTIL_ERR_LOG_FILE		4857650	1					
ANR	4857858	Identifier	UTIL_ERR_LOG_FILE		4857650	0					
ANR	4857859	Argument	"""Error inserting %s into allLogFiles"""		4857650	2					
ANR	4857860	PrimaryExpression	"""Error inserting %s into allLogFiles"""		4857650	0					
ANR	4857861	Argument	logfile . Value ( )		4857650	3					
ANR	4857862	CallExpression	logfile . Value ( )		4857650	0					
ANR	4857863	Callee	logfile . Value		4857650	0					
ANR	4857864	MemberAccess	logfile . Value		4857650	0					
ANR	4857865	Identifier	logfile		4857650	0					
ANR	4857866	Identifier	Value		4857650	1					
ANR	4857867	ArgumentList			4857650	1					
ANR	4857868	Statement	delete	1022:3:28567:28572	4857650	1	True				
ANR	4857869	ExpressionStatement	monitor	1022:10:28574:28581	4857650	2	True				
ANR	4857870	Identifier	monitor		4857650	0					
ANR	4857871	ReturnStatement	return false ;	1023:3:28586:28598	4857650	3	True				
ANR	4857872	Identifier	false		4857650	0					
ANR	4857873	IfStatement	if ( monitor -> refCount < 1 )		4857650	5					
ANR	4857874	Condition	monitor -> refCount < 1	1027:6:28614:28634	4857650	0	True				
ANR	4857875	RelationalExpression	monitor -> refCount < 1		4857650	0		<			
ANR	4857876	PtrMemberAccess	monitor -> refCount		4857650	0					
ANR	4857877	Identifier	monitor		4857650	0					
ANR	4857878	Identifier	refCount		4857650	1					
ANR	4857879	PrimaryExpression	1		4857650	1					
ANR	4857880	CompoundStatement		48:30:1663:1663	4857650	1					
ANR	4857881	IfStatement	if ( monitor -> state )		4857650	0					
ANR	4857882	Condition	monitor -> state	1031:7:28734:28747	4857650	0	True				
ANR	4857883	PtrMemberAccess	monitor -> state		4857650	0					
ANR	4857884	Identifier	monitor		4857650	0					
ANR	4857885	Identifier	state		4857650	1					
ANR	4857886	CompoundStatement		52:24:1776:1776	4857650	1					
ANR	4857887	IfStatement	if ( monitor -> stateError )		4857650	0					
ANR	4857888	Condition	monitor -> stateError	1034:8:28860:28878	4857650	0	True				
ANR	4857889	PtrMemberAccess	monitor -> stateError		4857650	0					
ANR	4857890	Identifier	monitor		4857650	0					
ANR	4857891	Identifier	stateError		4857650	1					
ANR	4857892	CompoundStatement		55:30:1907:1907	4857650	1					
ANR	4857893	Statement	errstack	1035:4:28888:28895	4857650	0	True				
ANR	4857894	Statement	.	1035:12:28896:28896	4857650	1	True				
ANR	4857895	Statement	pushf	1035:13:28897:28901	4857650	2	True				
ANR	4857896	Statement	(	1035:18:28902:28902	4857650	3	True				
ANR	4857897	Statement	"""ReadMultipleUserLogs"""	1035:20:28904:28925	4857650	4	True				
ANR	4857898	Statement	","	1035:42:28926:28926	4857650	5	True				
ANR	4857899	Statement	UTIL_ERR_LOG_FILE	1035:44:28928:28944	4857650	6	True				
ANR	4857900	Statement	","	1035:61:28945:28945	4857650	7	True				
ANR	4857901	Statement	"""Monitoring log file %s fails because of """	1036:7:28954:28995	4857650	8	True				
ANR	4857902	Statement	"""previous error saving file state"""	1037:7:29004:29037	4857650	9	True				
ANR	4857903	Statement	","	1037:41:29038:29038	4857650	10	True				
ANR	4857904	Statement	logfile	1038:7:29047:29053	4857650	11	True				
ANR	4857905	Statement	.	1038:14:29054:29054	4857650	12	True				
ANR	4857906	Statement	Value	1038:15:29055:29059	4857650	13	True				
ANR	4857907	Statement	(	1038:20:29060:29060	4857650	14	True				
ANR	4857908	Statement	)	1038:21:29061:29061	4857650	15	True				
ANR	4857909	Statement	)	1038:23:29063:29063	4857650	16	True				
ANR	4857910	ExpressionStatement		1038:24:29064:29064	4857650	17	True				
ANR	4857911	ReturnStatement	return false ;	1039:4:29070:29082	4857650	18	True				
ANR	4857912	Identifier	false		4857650	0					
ANR	4857913	ExpressionStatement	monitor -> readUserLog = new ReadUserLog ( * ( monitor -> state ) )	1042:3:29093:29152	4857650	1	True				
ANR	4857914	AssignmentExpression	monitor -> readUserLog = new ReadUserLog ( * ( monitor -> state ) )		4857650	0		=			
ANR	4857915	PtrMemberAccess	monitor -> readUserLog		4857650	0					
ANR	4857916	Identifier	monitor		4857650	0					
ANR	4857917	Identifier	readUserLog		4857650	1					
ANR	4857918	UnaryOperationExpression	* ( monitor -> state )		4857650	1					
ANR	4857919	UnaryOperator	*		4857650	0					
ANR	4857920	PtrMemberAccess	monitor -> state		4857650	1					
ANR	4857921	Identifier	monitor		4857650	0					
ANR	4857922	Identifier	state		4857650	1					
ANR	4857923	ElseStatement	else		4857650	0					
ANR	4857924	CompoundStatement		64:9:2188:2188	4857650	0					
ANR	4857925	ExpressionStatement	monitor -> readUserLog = new ReadUserLog ( monitor -> logFile . Value ( ) )	1046:3:29266:29338	4857650	0	True				
ANR	4857926	AssignmentExpression	monitor -> readUserLog = new ReadUserLog ( monitor -> logFile . Value ( ) )		4857650	0		=			
ANR	4857927	PtrMemberAccess	monitor -> readUserLog		4857650	0					
ANR	4857928	Identifier	monitor		4857650	0					
ANR	4857929	Identifier	readUserLog		4857650	1					
ANR	4857930	CallExpression	monitor -> logFile . Value ( )		4857650	1					
ANR	4857931	Callee	monitor -> logFile . Value		4857650	0					
ANR	4857932	MemberAccess	monitor -> logFile . Value		4857650	0					
ANR	4857933	PtrMemberAccess	monitor -> logFile		4857650	0					
ANR	4857934	Identifier	monitor		4857650	0					
ANR	4857935	Identifier	logFile		4857650	1					
ANR	4857936	Identifier	Value		4857650	1					
ANR	4857937	ArgumentList			4857650	1					
ANR	4857938	IfStatement	"if ( activeLogFiles . insert ( fileID , monitor ) != 0 )"		4857650	1					
ANR	4857939	Condition	"activeLogFiles . insert ( fileID , monitor ) != 0"	1050:7:29352:29396	4857650	0	True				
ANR	4857940	EqualityExpression	"activeLogFiles . insert ( fileID , monitor ) != 0"		4857650	0		!=			
ANR	4857941	CallExpression	"activeLogFiles . insert ( fileID , monitor )"		4857650	0					
ANR	4857942	Callee	activeLogFiles . insert		4857650	0					
ANR	4857943	MemberAccess	activeLogFiles . insert		4857650	0					
ANR	4857944	Identifier	activeLogFiles		4857650	0					
ANR	4857945	Identifier	insert		4857650	1					
ANR	4857946	ArgumentList	fileID		4857650	1					
ANR	4857947	Argument	fileID		4857650	0					
ANR	4857948	Identifier	fileID		4857650	0					
ANR	4857949	Argument	monitor		4857650	1					
ANR	4857950	Identifier	monitor		4857650	0					
ANR	4857951	PrimaryExpression	0		4857650	1					
ANR	4857952	CompoundStatement		71:55:2425:2425	4857650	1					
ANR	4857953	ExpressionStatement	"errstack . pushf ( ""ReadMultipleUserLogs"" , UTIL_ERR_LOG_FILE , ""Error inserting %s (%s) into activeLogFiles"" , logfile . Value ( ) , fileID . Value ( ) )"	1051:3:29405:29556	4857650	0	True				
ANR	4857954	CallExpression	"errstack . pushf ( ""ReadMultipleUserLogs"" , UTIL_ERR_LOG_FILE , ""Error inserting %s (%s) into activeLogFiles"" , logfile . Value ( ) , fileID . Value ( ) )"		4857650	0					
ANR	4857955	Callee	errstack . pushf		4857650	0					
ANR	4857956	MemberAccess	errstack . pushf		4857650	0					
ANR	4857957	Identifier	errstack		4857650	0					
ANR	4857958	Identifier	pushf		4857650	1					
ANR	4857959	ArgumentList	"""ReadMultipleUserLogs"""		4857650	1					
ANR	4857960	Argument	"""ReadMultipleUserLogs"""		4857650	0					
ANR	4857961	PrimaryExpression	"""ReadMultipleUserLogs"""		4857650	0					
ANR	4857962	Argument	UTIL_ERR_LOG_FILE		4857650	1					
ANR	4857963	Identifier	UTIL_ERR_LOG_FILE		4857650	0					
ANR	4857964	Argument	"""Error inserting %s (%s) into activeLogFiles"""		4857650	2					
ANR	4857965	PrimaryExpression	"""Error inserting %s (%s) into activeLogFiles"""		4857650	0					
ANR	4857966	Argument	logfile . Value ( )		4857650	3					
ANR	4857967	CallExpression	logfile . Value ( )		4857650	0					
ANR	4857968	Callee	logfile . Value		4857650	0					
ANR	4857969	MemberAccess	logfile . Value		4857650	0					
ANR	4857970	Identifier	logfile		4857650	0					
ANR	4857971	Identifier	Value		4857650	1					
ANR	4857972	ArgumentList			4857650	1					
ANR	4857973	Argument	fileID . Value ( )		4857650	4					
ANR	4857974	CallExpression	fileID . Value ( )		4857650	0					
ANR	4857975	Callee	fileID . Value		4857650	0					
ANR	4857976	MemberAccess	fileID . Value		4857650	0					
ANR	4857977	Identifier	fileID		4857650	0					
ANR	4857978	Identifier	Value		4857650	1					
ANR	4857979	ArgumentList			4857650	1					
ANR	4857980	ReturnStatement	return false ;	1054:3:29561:29573	4857650	1	True				
ANR	4857981	Identifier	false		4857650	0					
ANR	4857982	ElseStatement	else		4857650	0					
ANR	4857983	CompoundStatement		76:9:2609:2609	4857650	0					
ANR	4857984	Statement	dprintf	1056:3:29589:29595	4857650	0	True				
ANR	4857985	Statement	(	1056:10:29596:29596	4857650	1	True				
ANR	4857986	Statement	D_LOG_FILES	1056:12:29598:29608	4857650	2	True				
ANR	4857987	Statement	","	1056:23:29609:29609	4857650	3	True				
ANR	4857988	Statement	"""ReadMultipleUserLogs: added log """	1056:25:29611:29644	4857650	4	True				
ANR	4857989	Statement	"""file %s (%s) to active list\\n"""	1057:6:29652:29682	4857650	5	True				
ANR	4857990	Statement	","	1057:37:29683:29683	4857650	6	True				
ANR	4857991	Statement	logfile	1057:39:29685:29691	4857650	7	True				
ANR	4857992	Statement	.	1057:46:29692:29692	4857650	8	True				
ANR	4857993	Statement	Value	1057:47:29693:29697	4857650	9	True				
ANR	4857994	Statement	(	1057:52:29698:29698	4857650	10	True				
ANR	4857995	Statement	)	1057:53:29699:29699	4857650	11	True				
ANR	4857996	Statement	","	1057:54:29700:29700	4857650	12	True				
ANR	4857997	Statement	fileID	1058:6:29708:29713	4857650	13	True				
ANR	4857998	Statement	.	1058:12:29714:29714	4857650	14	True				
ANR	4857999	Statement	Value	1058:13:29715:29719	4857650	15	True				
ANR	4858000	Statement	(	1058:18:29720:29720	4857650	16	True				
ANR	4858001	Statement	)	1058:19:29721:29721	4857650	17	True				
ANR	4858002	Statement	)	1058:21:29723:29723	4857650	18	True				
ANR	4858003	ExpressionStatement		1058:22:29724:29724	4857650	19	True				
ANR	4858004	ExpressionStatement	monitor -> refCount ++	1062:1:29735:29754	4857650	6	True				
ANR	4858005	PostIncDecOperationExpression	monitor -> refCount ++		4857650	0					
ANR	4858006	PtrMemberAccess	monitor -> refCount		4857650	0					
ANR	4858007	Identifier	monitor		4857650	0					
ANR	4858008	Identifier	refCount		4857650	1					
ANR	4858009	IncDec	++		4857650	1					
ANR	4858010	ReturnStatement	return true ;	1064:1:29759:29770	4857650	7	True				
ANR	4858011	Identifier	true		4857650	0					
ANR	4858012	ReturnType	bool		4857650	1					
ANR	4858013	Identifier	ReadMultipleUserLogs :: monitorLogFile		4857650	2					
ANR	4858014	ParameterList	"MyString logfile , bool truncateIfFirst , CondorError & errstack"		4857650	3					
ANR	4858015	Parameter	MyString logfile	978:38:26907:26922	4857650	0	True				
ANR	4858016	ParameterType	MyString		4857650	0					
ANR	4858017	Identifier	logfile		4857650	1					
ANR	4858018	Parameter	bool truncateIfFirst	979:3:26928:26947	4857650	1	True				
ANR	4858019	ParameterType	bool		4857650	0					
ANR	4858020	Identifier	truncateIfFirst		4857650	1					
ANR	4858021	Parameter	CondorError & errstack	979:25:26950:26970	4857650	2	True				
ANR	4858022	ParameterType	CondorError &		4857650	0					
ANR	4858023	Identifier	errstack		4857650	1					
ANR	4858024	CFGEntryNode	ENTRY		4857650		True				
ANR	4858025	CFGExitNode	EXIT		4857650		True				
ANR	4858026	Symbol	D_LOG_FILES		4857650						
ANR	4858027	Symbol	MultiLogFiles :: InitializeFile		4857650						
ANR	4858028	Symbol	* monitor -> state		4857650						
ANR	4858029	Symbol	truncateIfFirst		4857650						
ANR	4858030	Symbol	allLogFiles . insert		4857650						
ANR	4858031	Symbol	UTIL_ERR_LOG_FILE		4857650						
ANR	4858032	Symbol	monitor -> logFile . Value		4857650						
ANR	4858033	Symbol	monitor -> state		4857650						
ANR	4858034	Symbol	monitor -> logFile		4857650						
ANR	4858035	Symbol	fileID		4857650						
ANR	4858036	Symbol	allLogFiles . lookup		4857650						
ANR	4858037	Symbol	monitor -> refCount		4857650						
ANR	4858038	Symbol	monitor -> stateError		4857650						
ANR	4858039	Symbol	logfile		4857650						
ANR	4858040	Symbol	false		4857650						
ANR	4858041	Symbol	monitor		4857650						
ANR	4858042	Symbol	allLogFiles		4857650						
ANR	4858043	Symbol	* * monitor		4857650						
ANR	4858044	Symbol	activeLogFiles		4857650						
ANR	4858045	Symbol	errstack		4857650						
ANR	4858046	Symbol	logfile . Value		4857650						
ANR	4858047	Symbol	* monitor		4857650						
ANR	4858048	Symbol	activeLogFiles . insert		4857650						
ANR	4858049	Symbol	true		4857650						
ANR	4858050	Symbol	fileID . Value		4857650						
ANR	4858051	Symbol	GetFileID		4857650						
ANR	4858052	Symbol	* ( monitor -> state )		4857650						
ANR	4858053	Symbol	monitor -> readUserLog		4857650						
ANR	4858054	Function	ReadMultipleUserLogs :: unmonitorLogFile	1071:0:29952:32678							
ANR	4858055	FunctionDef	"ReadMultipleUserLogs :: unmonitorLogFile (MyString logfile , CondorError & errstack)"		4858054	0					
ANR	4858056	CompoundStatement		1074:0:30042:32678	4858054	0					
ANR	4858057	ExpressionStatement	"dprintf ( D_LOG_FILES , ""ReadMultipleUserLogs::unmonitorLogFile(%s)\\n"" , logfile . Value ( ) )"	1075:1:30045:30136	4858054	0	True				
ANR	4858058	CallExpression	"dprintf ( D_LOG_FILES , ""ReadMultipleUserLogs::unmonitorLogFile(%s)\\n"" , logfile . Value ( ) )"		4858054	0					
ANR	4858059	Callee	dprintf		4858054	0					
ANR	4858060	Identifier	dprintf		4858054	0					
ANR	4858061	ArgumentList	D_LOG_FILES		4858054	1					
ANR	4858062	Argument	D_LOG_FILES		4858054	0					
ANR	4858063	Identifier	D_LOG_FILES		4858054	0					
ANR	4858064	Argument	"""ReadMultipleUserLogs::unmonitorLogFile(%s)\\n"""		4858054	1					
ANR	4858065	PrimaryExpression	"""ReadMultipleUserLogs::unmonitorLogFile(%s)\\n"""		4858054	0					
ANR	4858066	Argument	logfile . Value ( )		4858054	2					
ANR	4858067	CallExpression	logfile . Value ( )		4858054	0					
ANR	4858068	Callee	logfile . Value		4858054	0					
ANR	4858069	MemberAccess	logfile . Value		4858054	0					
ANR	4858070	Identifier	logfile		4858054	0					
ANR	4858071	Identifier	Value		4858054	1					
ANR	4858072	ArgumentList			4858054	1					
ANR	4858073	IdentifierDeclStatement	MyString fileID ;	1078:1:30140:30155	4858054	1	True				
ANR	4858074	IdentifierDecl	fileID		4858054	0					
ANR	4858075	IdentifierDeclType	MyString		4858054	0					
ANR	4858076	Identifier	fileID		4858054	1					
ANR	4858077	IfStatement	"if ( ! GetFileID ( logfile , fileID , errstack ) )"		4858054	2					
ANR	4858078	Condition	"! GetFileID ( logfile , fileID , errstack )"	1079:6:30163:30201	4858054	0	True				
ANR	4858079	UnaryOperationExpression	"! GetFileID ( logfile , fileID , errstack )"		4858054	0					
ANR	4858080	UnaryOperator	!		4858054	0					
ANR	4858081	CallExpression	"GetFileID ( logfile , fileID , errstack )"		4858054	1					
ANR	4858082	Callee	GetFileID		4858054	0					
ANR	4858083	Identifier	GetFileID		4858054	0					
ANR	4858084	ArgumentList	logfile		4858054	1					
ANR	4858085	Argument	logfile		4858054	0					
ANR	4858086	Identifier	logfile		4858054	0					
ANR	4858087	Argument	fileID		4858054	1					
ANR	4858088	Identifier	fileID		4858054	0					
ANR	4858089	Argument	errstack		4858054	2					
ANR	4858090	Identifier	errstack		4858054	0					
ANR	4858091	CompoundStatement		6:48:162:162	4858054	1					
ANR	4858092	ExpressionStatement	"errstack . push ( ""ReadMultipleUserLogs"" , UTIL_ERR_LOG_FILE , ""Error getting file ID in unmonitorLogFile()"" )"	1080:2:30209:30319	4858054	0	True				
ANR	4858093	CallExpression	"errstack . push ( ""ReadMultipleUserLogs"" , UTIL_ERR_LOG_FILE , ""Error getting file ID in unmonitorLogFile()"" )"		4858054	0					
ANR	4858094	Callee	errstack . push		4858054	0					
ANR	4858095	MemberAccess	errstack . push		4858054	0					
ANR	4858096	Identifier	errstack		4858054	0					
ANR	4858097	Identifier	push		4858054	1					
ANR	4858098	ArgumentList	"""ReadMultipleUserLogs"""		4858054	1					
ANR	4858099	Argument	"""ReadMultipleUserLogs"""		4858054	0					
ANR	4858100	PrimaryExpression	"""ReadMultipleUserLogs"""		4858054	0					
ANR	4858101	Argument	UTIL_ERR_LOG_FILE		4858054	1					
ANR	4858102	Identifier	UTIL_ERR_LOG_FILE		4858054	0					
ANR	4858103	Argument	"""Error getting file ID in unmonitorLogFile()"""		4858054	2					
ANR	4858104	PrimaryExpression	"""Error getting file ID in unmonitorLogFile()"""		4858054	0					
ANR	4858105	ReturnStatement	return false ;	1082:2:30323:30335	4858054	1	True				
ANR	4858106	Identifier	false		4858054	0					
ANR	4858107	IdentifierDeclStatement	LogFileMonitor * monitor ;	1085:1:30342:30365	4858054	3	True				
ANR	4858108	IdentifierDecl	* monitor		4858054	0					
ANR	4858109	IdentifierDeclType	LogFileMonitor *		4858054	0					
ANR	4858110	Identifier	monitor		4858054	1					
ANR	4858111	IfStatement	"if ( activeLogFiles . lookup ( fileID , monitor ) != 0 )"		4858054	4					
ANR	4858112	Condition	"activeLogFiles . lookup ( fileID , monitor ) != 0"	1086:6:30373:30417	4858054	0	True				
ANR	4858113	EqualityExpression	"activeLogFiles . lookup ( fileID , monitor ) != 0"		4858054	0		!=			
ANR	4858114	CallExpression	"activeLogFiles . lookup ( fileID , monitor )"		4858054	0					
ANR	4858115	Callee	activeLogFiles . lookup		4858054	0					
ANR	4858116	MemberAccess	activeLogFiles . lookup		4858054	0					
ANR	4858117	Identifier	activeLogFiles		4858054	0					
ANR	4858118	Identifier	lookup		4858054	1					
ANR	4858119	ArgumentList	fileID		4858054	1					
ANR	4858120	Argument	fileID		4858054	0					
ANR	4858121	Identifier	fileID		4858054	0					
ANR	4858122	Argument	monitor		4858054	1					
ANR	4858123	Identifier	monitor		4858054	0					
ANR	4858124	PrimaryExpression	0		4858054	1					
ANR	4858125	CompoundStatement		13:54:378:378	4858054	1					
ANR	4858126	Statement	errstack	1087:2:30425:30432	4858054	0	True				
ANR	4858127	Statement	.	1087:10:30433:30433	4858054	1	True				
ANR	4858128	Statement	pushf	1087:11:30434:30438	4858054	2	True				
ANR	4858129	Statement	(	1087:16:30439:30439	4858054	3	True				
ANR	4858130	Statement	"""ReadMultipleUserLogs"""	1087:18:30441:30462	4858054	4	True				
ANR	4858131	Statement	","	1087:40:30463:30463	4858054	5	True				
ANR	4858132	Statement	UTIL_ERR_LOG_FILE	1087:42:30465:30481	4858054	6	True				
ANR	4858133	Statement	","	1087:59:30482:30482	4858054	7	True				
ANR	4858134	Statement	"""Didn't find LogFileMonitor object for log """	1088:5:30489:30532	4858054	8	True				
ANR	4858135	Statement	"""file %s (%s)!"""	1089:5:30539:30553	4858054	9	True				
ANR	4858136	Statement	","	1089:20:30554:30554	4858054	10	True				
ANR	4858137	Statement	logfile	1089:22:30556:30562	4858054	11	True				
ANR	4858138	Statement	.	1089:29:30563:30563	4858054	12	True				
ANR	4858139	Statement	Value	1089:30:30564:30568	4858054	13	True				
ANR	4858140	Statement	(	1089:35:30569:30569	4858054	14	True				
ANR	4858141	Statement	)	1089:36:30570:30570	4858054	15	True				
ANR	4858142	Statement	","	1089:37:30571:30571	4858054	16	True				
ANR	4858143	Statement	fileID	1090:5:30578:30583	4858054	17	True				
ANR	4858144	Statement	.	1090:11:30584:30584	4858054	18	True				
ANR	4858145	Statement	Value	1090:12:30585:30589	4858054	19	True				
ANR	4858146	Statement	(	1090:17:30590:30590	4858054	20	True				
ANR	4858147	Statement	)	1090:18:30591:30591	4858054	21	True				
ANR	4858148	Statement	)	1090:20:30593:30593	4858054	22	True				
ANR	4858149	ExpressionStatement		1090:21:30594:30594	4858054	23	True				
ANR	4858150	ExpressionStatement	"dprintf ( D_ALWAYS , ""ReadMultipleUserLogs error: %s\\n"" , errstack . message ( ) )"	1091:2:30598:30678	4858054	24	True				
ANR	4858151	CallExpression	"dprintf ( D_ALWAYS , ""ReadMultipleUserLogs error: %s\\n"" , errstack . message ( ) )"		4858054	0					
ANR	4858152	Callee	dprintf		4858054	0					
ANR	4858153	Identifier	dprintf		4858054	0					
ANR	4858154	ArgumentList	D_ALWAYS		4858054	1					
ANR	4858155	Argument	D_ALWAYS		4858054	0					
ANR	4858156	Identifier	D_ALWAYS		4858054	0					
ANR	4858157	Argument	"""ReadMultipleUserLogs error: %s\\n"""		4858054	1					
ANR	4858158	PrimaryExpression	"""ReadMultipleUserLogs error: %s\\n"""		4858054	0					
ANR	4858159	Argument	errstack . message ( )		4858054	2					
ANR	4858160	CallExpression	errstack . message ( )		4858054	0					
ANR	4858161	Callee	errstack . message		4858054	0					
ANR	4858162	MemberAccess	errstack . message		4858054	0					
ANR	4858163	Identifier	errstack		4858054	0					
ANR	4858164	Identifier	message		4858054	1					
ANR	4858165	ArgumentList			4858054	1					
ANR	4858166	ExpressionStatement	printAllLogMonitors ( NULL )	1093:2:30682:30709	4858054	25	True				
ANR	4858167	CallExpression	printAllLogMonitors ( NULL )		4858054	0					
ANR	4858168	Callee	printAllLogMonitors		4858054	0					
ANR	4858169	Identifier	printAllLogMonitors		4858054	0					
ANR	4858170	ArgumentList	NULL		4858054	1					
ANR	4858171	Argument	NULL		4858054	0					
ANR	4858172	Identifier	NULL		4858054	0					
ANR	4858173	ReturnStatement	return false ;	1094:2:30713:30725	4858054	26	True				
ANR	4858174	Identifier	false		4858054	0					
ANR	4858175	Statement	dprintf	1097:1:30732:30738	4858054	5	True				
ANR	4858176	Statement	(	1097:8:30739:30739	4858054	6	True				
ANR	4858177	Statement	D_LOG_FILES	1097:10:30741:30751	4858054	7	True				
ANR	4858178	Statement	","	1097:21:30752:30752	4858054	8	True				
ANR	4858179	Statement	"""ReadMultipleUserLogs: found """	1097:23:30754:30783	4858054	9	True				
ANR	4858180	Statement	"""LogFileMonitor object for %s (%s)\\n"""	1098:4:30789:30825	4858054	10	True				
ANR	4858181	Statement	","	1098:41:30826:30826	4858054	11	True				
ANR	4858182	Statement	logfile	1099:4:30832:30838	4858054	12	True				
ANR	4858183	Statement	.	1099:11:30839:30839	4858054	13	True				
ANR	4858184	Statement	Value	1099:12:30840:30844	4858054	14	True				
ANR	4858185	Statement	(	1099:17:30845:30845	4858054	15	True				
ANR	4858186	Statement	)	1099:18:30846:30846	4858054	16	True				
ANR	4858187	Statement	","	1099:19:30847:30847	4858054	17	True				
ANR	4858188	Statement	fileID	1099:21:30849:30854	4858054	18	True				
ANR	4858189	Statement	.	1099:27:30855:30855	4858054	19	True				
ANR	4858190	Statement	Value	1099:28:30856:30860	4858054	20	True				
ANR	4858191	Statement	(	1099:33:30861:30861	4858054	21	True				
ANR	4858192	Statement	)	1099:34:30862:30862	4858054	22	True				
ANR	4858193	Statement	)	1099:36:30864:30864	4858054	23	True				
ANR	4858194	ExpressionStatement		1099:37:30865:30865	4858054	24	True				
ANR	4858195	ExpressionStatement	monitor -> refCount --	1101:1:30869:30888	4858054	25	True				
ANR	4858196	PostIncDecOperationExpression	monitor -> refCount --		4858054	0					
ANR	4858197	PtrMemberAccess	monitor -> refCount		4858054	0					
ANR	4858198	Identifier	monitor		4858054	0					
ANR	4858199	Identifier	refCount		4858054	1					
ANR	4858200	IncDec	--		4858054	1					
ANR	4858201	IfStatement	if ( monitor -> refCount < 1 )		4858054	26					
ANR	4858202	Condition	monitor -> refCount < 1	1103:6:30897:30917	4858054	0	True				
ANR	4858203	RelationalExpression	monitor -> refCount < 1		4858054	0		<			
ANR	4858204	PtrMemberAccess	monitor -> refCount		4858054	0					
ANR	4858205	Identifier	monitor		4858054	0					
ANR	4858206	Identifier	refCount		4858054	1					
ANR	4858207	PrimaryExpression	1		4858054	1					
ANR	4858208	CompoundStatement		30:30:878:878	4858054	1					
ANR	4858209	ExpressionStatement	"dprintf ( D_LOG_FILES , ""Closing file <%s>\\n"" , logfile . Value ( ) )"	1109:2:31210:31272	4858054	0	True				
ANR	4858210	CallExpression	"dprintf ( D_LOG_FILES , ""Closing file <%s>\\n"" , logfile . Value ( ) )"		4858054	0					
ANR	4858211	Callee	dprintf		4858054	0					
ANR	4858212	Identifier	dprintf		4858054	0					
ANR	4858213	ArgumentList	D_LOG_FILES		4858054	1					
ANR	4858214	Argument	D_LOG_FILES		4858054	0					
ANR	4858215	Identifier	D_LOG_FILES		4858054	0					
ANR	4858216	Argument	"""Closing file <%s>\\n"""		4858054	1					
ANR	4858217	PrimaryExpression	"""Closing file <%s>\\n"""		4858054	0					
ANR	4858218	Argument	logfile . Value ( )		4858054	2					
ANR	4858219	CallExpression	logfile . Value ( )		4858054	0					
ANR	4858220	Callee	logfile . Value		4858054	0					
ANR	4858221	MemberAccess	logfile . Value		4858054	0					
ANR	4858222	Identifier	logfile		4858054	0					
ANR	4858223	Identifier	Value		4858054	1					
ANR	4858224	ArgumentList			4858054	1					
ANR	4858225	IfStatement	if ( ! monitor -> state )		4858054	1					
ANR	4858226	Condition	! monitor -> state	1111:7:31282:31296	4858054	0	True				
ANR	4858227	UnaryOperationExpression	! monitor -> state		4858054	0					
ANR	4858228	UnaryOperator	!		4858054	0					
ANR	4858229	PtrMemberAccess	monitor -> state		4858054	1					
ANR	4858230	Identifier	monitor		4858054	0					
ANR	4858231	Identifier	state		4858054	1					
ANR	4858232	CompoundStatement		38:25:1257:1257	4858054	1					
ANR	4858233	ExpressionStatement	monitor -> state = new ReadUserLog :: FileState ( )	1112:3:31305:31350	4858054	0	True				
ANR	4858234	AssignmentExpression	monitor -> state = new ReadUserLog :: FileState ( )		4858054	0		=			
ANR	4858235	PtrMemberAccess	monitor -> state		4858054	0					
ANR	4858236	Identifier	monitor		4858054	0					
ANR	4858237	Identifier	state		4858054	1					
ANR	4858238	UnaryExpression	new ReadUserLog :: FileState ( )		4858054	1					
ANR	4858239	IfStatement	if ( ! ReadUserLog :: InitFileState ( * ( monitor -> state ) ) )		4858054	1					
ANR	4858240	Condition	! ReadUserLog :: InitFileState ( * ( monitor -> state ) )	1113:8:31360:31407	4858054	0	True				
ANR	4858241	UnaryOperationExpression	! ReadUserLog :: InitFileState ( * ( monitor -> state ) )		4858054	0					
ANR	4858242	UnaryOperator	!		4858054	0					
ANR	4858243	CallExpression	ReadUserLog :: InitFileState ( * ( monitor -> state ) )		4858054	1					
ANR	4858244	Callee	ReadUserLog :: InitFileState		4858054	0					
ANR	4858245	Identifier	ReadUserLog :: InitFileState		4858054	0					
ANR	4858246	ArgumentList	* ( monitor -> state )		4858054	1					
ANR	4858247	Argument	* ( monitor -> state )		4858054	0					
ANR	4858248	UnaryOperationExpression	* ( monitor -> state )		4858054	0					
ANR	4858249	UnaryOperator	*		4858054	0					
ANR	4858250	PtrMemberAccess	monitor -> state		4858054	1					
ANR	4858251	Identifier	monitor		4858054	0					
ANR	4858252	Identifier	state		4858054	1					
ANR	4858253	CompoundStatement		40:59:1368:1368	4858054	1					
ANR	4858254	Statement	errstack	1114:4:31417:31424	4858054	0	True				
ANR	4858255	Statement	.	1114:12:31425:31425	4858054	1	True				
ANR	4858256	Statement	pushf	1114:13:31426:31430	4858054	2	True				
ANR	4858257	Statement	(	1114:18:31431:31431	4858054	3	True				
ANR	4858258	Statement	"""ReadMultipleUserLogs"""	1114:20:31433:31454	4858054	4	True				
ANR	4858259	Statement	","	1114:42:31455:31455	4858054	5	True				
ANR	4858260	Statement	UTIL_ERR_LOG_FILE	1114:44:31457:31473	4858054	6	True				
ANR	4858261	Statement	","	1114:61:31474:31474	4858054	7	True				
ANR	4858262	Statement	"""Unable to initialize ReadUserLog::FileState """	1115:7:31483:31528	4858054	8	True				
ANR	4858263	Statement	"""object for log file %s"""	1116:7:31537:31560	4858054	9	True				
ANR	4858264	Statement	","	1116:31:31561:31561	4858054	10	True				
ANR	4858265	Statement	logfile	1116:33:31563:31569	4858054	11	True				
ANR	4858266	Statement	.	1116:40:31570:31570	4858054	12	True				
ANR	4858267	Statement	Value	1116:41:31571:31575	4858054	13	True				
ANR	4858268	Statement	(	1116:46:31576:31576	4858054	14	True				
ANR	4858269	Statement	)	1116:47:31577:31577	4858054	15	True				
ANR	4858270	Statement	)	1116:49:31579:31579	4858054	16	True				
ANR	4858271	ExpressionStatement		1116:50:31580:31580	4858054	17	True				
ANR	4858272	ExpressionStatement	monitor -> stateError = true	1117:4:31586:31612	4858054	18	True				
ANR	4858273	AssignmentExpression	monitor -> stateError = true		4858054	0		=			
ANR	4858274	PtrMemberAccess	monitor -> stateError		4858054	0					
ANR	4858275	Identifier	monitor		4858054	0					
ANR	4858276	Identifier	stateError		4858054	1					
ANR	4858277	Identifier	true		4858054	1					
ANR	4858278	Statement	delete	1118:4:31618:31623	4858054	19	True				
ANR	4858279	ExpressionStatement	monitor -> state	1118:11:31625:31639	4858054	20	True				
ANR	4858280	PtrMemberAccess	monitor -> state		4858054	0					
ANR	4858281	Identifier	monitor		4858054	0					
ANR	4858282	Identifier	state		4858054	1					
ANR	4858283	ExpressionStatement	monitor -> state = NULL	1119:4:31645:31666	4858054	21	True				
ANR	4858284	AssignmentExpression	monitor -> state = NULL		4858054	0		=			
ANR	4858285	PtrMemberAccess	monitor -> state		4858054	0					
ANR	4858286	Identifier	monitor		4858054	0					
ANR	4858287	Identifier	state		4858054	1					
ANR	4858288	Identifier	NULL		4858054	1					
ANR	4858289	ReturnStatement	return false ;	1120:4:31672:31684	4858054	22	True				
ANR	4858290	Identifier	false		4858054	0					
ANR	4858291	IfStatement	if ( ! monitor -> readUserLog -> GetFileState ( * ( monitor -> state ) ) )		4858054	2					
ANR	4858292	Condition	! monitor -> readUserLog -> GetFileState ( * ( monitor -> state ) )	1124:7:31703:31758	4858054	0	True				
ANR	4858293	UnaryOperationExpression	! monitor -> readUserLog -> GetFileState ( * ( monitor -> state ) )		4858054	0					
ANR	4858294	UnaryOperator	!		4858054	0					
ANR	4858295	CallExpression	monitor -> readUserLog -> GetFileState ( * ( monitor -> state ) )		4858054	1					
ANR	4858296	Callee	monitor -> readUserLog -> GetFileState		4858054	0					
ANR	4858297	PtrMemberAccess	monitor -> readUserLog -> GetFileState		4858054	0					
ANR	4858298	PtrMemberAccess	monitor -> readUserLog		4858054	0					
ANR	4858299	Identifier	monitor		4858054	0					
ANR	4858300	Identifier	readUserLog		4858054	1					
ANR	4858301	Identifier	GetFileState		4858054	1					
ANR	4858302	ArgumentList	* ( monitor -> state )		4858054	1					
ANR	4858303	Argument	* ( monitor -> state )		4858054	0					
ANR	4858304	UnaryOperationExpression	* ( monitor -> state )		4858054	0					
ANR	4858305	UnaryOperator	*		4858054	0					
ANR	4858306	PtrMemberAccess	monitor -> state		4858054	1					
ANR	4858307	Identifier	monitor		4858054	0					
ANR	4858308	Identifier	state		4858054	1					
ANR	4858309	CompoundStatement		51:66:1719:1719	4858054	1					
ANR	4858310	ExpressionStatement	"errstack . pushf ( ""ReadMultipleUserLogs"" , UTIL_ERR_LOG_FILE , ""Error getting state for log file %s"" , logfile . Value ( ) )"	1125:3:31767:31894	4858054	0	True				
ANR	4858311	CallExpression	"errstack . pushf ( ""ReadMultipleUserLogs"" , UTIL_ERR_LOG_FILE , ""Error getting state for log file %s"" , logfile . Value ( ) )"		4858054	0					
ANR	4858312	Callee	errstack . pushf		4858054	0					
ANR	4858313	MemberAccess	errstack . pushf		4858054	0					
ANR	4858314	Identifier	errstack		4858054	0					
ANR	4858315	Identifier	pushf		4858054	1					
ANR	4858316	ArgumentList	"""ReadMultipleUserLogs"""		4858054	1					
ANR	4858317	Argument	"""ReadMultipleUserLogs"""		4858054	0					
ANR	4858318	PrimaryExpression	"""ReadMultipleUserLogs"""		4858054	0					
ANR	4858319	Argument	UTIL_ERR_LOG_FILE		4858054	1					
ANR	4858320	Identifier	UTIL_ERR_LOG_FILE		4858054	0					
ANR	4858321	Argument	"""Error getting state for log file %s"""		4858054	2					
ANR	4858322	PrimaryExpression	"""Error getting state for log file %s"""		4858054	0					
ANR	4858323	Argument	logfile . Value ( )		4858054	3					
ANR	4858324	CallExpression	logfile . Value ( )		4858054	0					
ANR	4858325	Callee	logfile . Value		4858054	0					
ANR	4858326	MemberAccess	logfile . Value		4858054	0					
ANR	4858327	Identifier	logfile		4858054	0					
ANR	4858328	Identifier	Value		4858054	1					
ANR	4858329	ArgumentList			4858054	1					
ANR	4858330	ExpressionStatement	monitor -> stateError = true	1128:3:31899:31925	4858054	1	True				
ANR	4858331	AssignmentExpression	monitor -> stateError = true		4858054	0		=			
ANR	4858332	PtrMemberAccess	monitor -> stateError		4858054	0					
ANR	4858333	Identifier	monitor		4858054	0					
ANR	4858334	Identifier	stateError		4858054	1					
ANR	4858335	Identifier	true		4858054	1					
ANR	4858336	Statement	delete	1129:3:31930:31935	4858054	2	True				
ANR	4858337	ExpressionStatement	monitor -> state	1129:10:31937:31951	4858054	3	True				
ANR	4858338	PtrMemberAccess	monitor -> state		4858054	0					
ANR	4858339	Identifier	monitor		4858054	0					
ANR	4858340	Identifier	state		4858054	1					
ANR	4858341	ExpressionStatement	monitor -> state = NULL	1130:3:31956:31977	4858054	4	True				
ANR	4858342	AssignmentExpression	monitor -> state = NULL		4858054	0		=			
ANR	4858343	PtrMemberAccess	monitor -> state		4858054	0					
ANR	4858344	Identifier	monitor		4858054	0					
ANR	4858345	Identifier	state		4858054	1					
ANR	4858346	Identifier	NULL		4858054	1					
ANR	4858347	ReturnStatement	return false ;	1131:3:31982:31994	4858054	5	True				
ANR	4858348	Identifier	false		4858054	0					
ANR	4858349	Statement	delete	1134:2:32003:32008	4858054	3	True				
ANR	4858350	ExpressionStatement	monitor -> readUserLog	1134:9:32010:32030	4858054	4	True				
ANR	4858351	PtrMemberAccess	monitor -> readUserLog		4858054	0					
ANR	4858352	Identifier	monitor		4858054	0					
ANR	4858353	Identifier	readUserLog		4858054	1					
ANR	4858354	ExpressionStatement	monitor -> readUserLog = NULL	1135:2:32034:32061	4858054	5	True				
ANR	4858355	AssignmentExpression	monitor -> readUserLog = NULL		4858054	0		=			
ANR	4858356	PtrMemberAccess	monitor -> readUserLog		4858054	0					
ANR	4858357	Identifier	monitor		4858054	0					
ANR	4858358	Identifier	readUserLog		4858054	1					
ANR	4858359	Identifier	NULL		4858054	1					
ANR	4858360	IfStatement	if ( activeLogFiles . remove ( fileID ) != 0 )		4858054	6					
ANR	4858361	Condition	activeLogFiles . remove ( fileID ) != 0	1139:7:32183:32218	4858054	0	True				
ANR	4858362	EqualityExpression	activeLogFiles . remove ( fileID ) != 0		4858054	0		!=			
ANR	4858363	CallExpression	activeLogFiles . remove ( fileID )		4858054	0					
ANR	4858364	Callee	activeLogFiles . remove		4858054	0					
ANR	4858365	MemberAccess	activeLogFiles . remove		4858054	0					
ANR	4858366	Identifier	activeLogFiles		4858054	0					
ANR	4858367	Identifier	remove		4858054	1					
ANR	4858368	ArgumentList	fileID		4858054	1					
ANR	4858369	Argument	fileID		4858054	0					
ANR	4858370	Identifier	fileID		4858054	0					
ANR	4858371	PrimaryExpression	0		4858054	1					
ANR	4858372	CompoundStatement		66:46:2179:2179	4858054	1					
ANR	4858373	ExpressionStatement	"errstack . pushf ( ""ReadMultipleUserLogs"" , UTIL_ERR_LOG_FILE , ""Error removing %s (%s) from activeLogFiles"" , logfile . Value ( ) , fileID . Value ( ) )"	1140:3:32227:32377	4858054	0	True				
ANR	4858374	CallExpression	"errstack . pushf ( ""ReadMultipleUserLogs"" , UTIL_ERR_LOG_FILE , ""Error removing %s (%s) from activeLogFiles"" , logfile . Value ( ) , fileID . Value ( ) )"		4858054	0					
ANR	4858375	Callee	errstack . pushf		4858054	0					
ANR	4858376	MemberAccess	errstack . pushf		4858054	0					
ANR	4858377	Identifier	errstack		4858054	0					
ANR	4858378	Identifier	pushf		4858054	1					
ANR	4858379	ArgumentList	"""ReadMultipleUserLogs"""		4858054	1					
ANR	4858380	Argument	"""ReadMultipleUserLogs"""		4858054	0					
ANR	4858381	PrimaryExpression	"""ReadMultipleUserLogs"""		4858054	0					
ANR	4858382	Argument	UTIL_ERR_LOG_FILE		4858054	1					
ANR	4858383	Identifier	UTIL_ERR_LOG_FILE		4858054	0					
ANR	4858384	Argument	"""Error removing %s (%s) from activeLogFiles"""		4858054	2					
ANR	4858385	PrimaryExpression	"""Error removing %s (%s) from activeLogFiles"""		4858054	0					
ANR	4858386	Argument	logfile . Value ( )		4858054	3					
ANR	4858387	CallExpression	logfile . Value ( )		4858054	0					
ANR	4858388	Callee	logfile . Value		4858054	0					
ANR	4858389	MemberAccess	logfile . Value		4858054	0					
ANR	4858390	Identifier	logfile		4858054	0					
ANR	4858391	Identifier	Value		4858054	1					
ANR	4858392	ArgumentList			4858054	1					
ANR	4858393	Argument	fileID . Value ( )		4858054	4					
ANR	4858394	CallExpression	fileID . Value ( )		4858054	0					
ANR	4858395	Callee	fileID . Value		4858054	0					
ANR	4858396	MemberAccess	fileID . Value		4858054	0					
ANR	4858397	Identifier	fileID		4858054	0					
ANR	4858398	Identifier	Value		4858054	1					
ANR	4858399	ArgumentList			4858054	1					
ANR	4858400	ExpressionStatement	"dprintf ( D_ALWAYS , ""ReadMultipleUserLogs error: %s\\n"" , errstack . message ( ) )"	1143:3:32382:32463	4858054	1	True				
ANR	4858401	CallExpression	"dprintf ( D_ALWAYS , ""ReadMultipleUserLogs error: %s\\n"" , errstack . message ( ) )"		4858054	0					
ANR	4858402	Callee	dprintf		4858054	0					
ANR	4858403	Identifier	dprintf		4858054	0					
ANR	4858404	ArgumentList	D_ALWAYS		4858054	1					
ANR	4858405	Argument	D_ALWAYS		4858054	0					
ANR	4858406	Identifier	D_ALWAYS		4858054	0					
ANR	4858407	Argument	"""ReadMultipleUserLogs error: %s\\n"""		4858054	1					
ANR	4858408	PrimaryExpression	"""ReadMultipleUserLogs error: %s\\n"""		4858054	0					
ANR	4858409	Argument	errstack . message ( )		4858054	2					
ANR	4858410	CallExpression	errstack . message ( )		4858054	0					
ANR	4858411	Callee	errstack . message		4858054	0					
ANR	4858412	MemberAccess	errstack . message		4858054	0					
ANR	4858413	Identifier	errstack		4858054	0					
ANR	4858414	Identifier	message		4858054	1					
ANR	4858415	ArgumentList			4858054	1					
ANR	4858416	ExpressionStatement	printAllLogMonitors ( NULL )	1145:3:32468:32495	4858054	2	True				
ANR	4858417	CallExpression	printAllLogMonitors ( NULL )		4858054	0					
ANR	4858418	Callee	printAllLogMonitors		4858054	0					
ANR	4858419	Identifier	printAllLogMonitors		4858054	0					
ANR	4858420	ArgumentList	NULL		4858054	1					
ANR	4858421	Argument	NULL		4858054	0					
ANR	4858422	Identifier	NULL		4858054	0					
ANR	4858423	ReturnStatement	return false ;	1146:3:32500:32512	4858054	3	True				
ANR	4858424	Identifier	false		4858054	0					
ANR	4858425	Statement	dprintf	1149:2:32521:32527	4858054	7	True				
ANR	4858426	Statement	(	1149:9:32528:32528	4858054	8	True				
ANR	4858427	Statement	D_LOG_FILES	1149:11:32530:32540	4858054	9	True				
ANR	4858428	Statement	","	1149:22:32541:32541	4858054	10	True				
ANR	4858429	Statement	"""ReadMultipleUserLogs: removed """	1149:24:32543:32574	4858054	11	True				
ANR	4858430	Statement	"""log file %s (%s) from active list\\n"""	1150:5:32581:32617	4858054	12	True				
ANR	4858431	Statement	","	1150:42:32618:32618	4858054	13	True				
ANR	4858432	Statement	logfile	1151:5:32625:32631	4858054	14	True				
ANR	4858433	Statement	.	1151:12:32632:32632	4858054	15	True				
ANR	4858434	Statement	Value	1151:13:32633:32637	4858054	16	True				
ANR	4858435	Statement	(	1151:18:32638:32638	4858054	17	True				
ANR	4858436	Statement	)	1151:19:32639:32639	4858054	18	True				
ANR	4858437	Statement	","	1151:20:32640:32640	4858054	19	True				
ANR	4858438	Statement	fileID	1151:22:32642:32647	4858054	20	True				
ANR	4858439	Statement	.	1151:28:32648:32648	4858054	21	True				
ANR	4858440	Statement	Value	1151:29:32649:32653	4858054	22	True				
ANR	4858441	Statement	(	1151:34:32654:32654	4858054	23	True				
ANR	4858442	Statement	)	1151:35:32655:32655	4858054	24	True				
ANR	4858443	Statement	)	1151:37:32657:32657	4858054	25	True				
ANR	4858444	ExpressionStatement		1151:38:32658:32658	4858054	26	True				
ANR	4858445	ReturnStatement	return true ;	1154:1:32665:32676	4858054	27	True				
ANR	4858446	Identifier	true		4858054	0					
ANR	4858447	ReturnType	bool		4858054	1					
ANR	4858448	Identifier	ReadMultipleUserLogs :: unmonitorLogFile		4858054	2					
ANR	4858449	ParameterList	"MyString logfile , CondorError & errstack"		4858054	3					
ANR	4858450	Parameter	MyString logfile	1072:40:29997:30012	4858054	0	True				
ANR	4858451	ParameterType	MyString		4858054	0					
ANR	4858452	Identifier	logfile		4858054	1					
ANR	4858453	Parameter	CondorError & errstack	1073:3:30018:30038	4858054	1	True				
ANR	4858454	ParameterType	CondorError &		4858054	0					
ANR	4858455	Identifier	errstack		4858054	1					
ANR	4858456	CFGEntryNode	ENTRY		4858054		True				
ANR	4858457	CFGExitNode	EXIT		4858054		True				
ANR	4858458	Symbol	D_LOG_FILES		4858054						
ANR	4858459	Symbol	activeLogFiles . lookup		4858054						
ANR	4858460	Symbol	* monitor -> state		4858054						
ANR	4858461	Symbol	errstack . message		4858054						
ANR	4858462	Symbol	* monitor -> readUserLog		4858054						
ANR	4858463	Symbol	UTIL_ERR_LOG_FILE		4858054						
ANR	4858464	Symbol	monitor -> readUserLog -> GetFileState		4858054						
ANR	4858465	Symbol	monitor -> state		4858054						
ANR	4858466	Symbol	activeLogFiles . remove		4858054						
ANR	4858467	Symbol	fileID		4858054						
ANR	4858468	Symbol	monitor -> refCount		4858054						
ANR	4858469	Symbol	ReadUserLog :: InitFileState		4858054						
ANR	4858470	Symbol	NULL		4858054						
ANR	4858471	Symbol	monitor -> stateError		4858054						
ANR	4858472	Symbol	logfile		4858054						
ANR	4858473	Symbol	false		4858054						
ANR	4858474	Symbol	D_ALWAYS		4858054						
ANR	4858475	Symbol	monitor		4858054						
ANR	4858476	Symbol	* * monitor		4858054						
ANR	4858477	Symbol	activeLogFiles		4858054						
ANR	4858478	Symbol	errstack		4858054						
ANR	4858479	Symbol	logfile . Value		4858054						
ANR	4858480	Symbol	* monitor		4858054						
ANR	4858481	Symbol	true		4858054						
ANR	4858482	Symbol	fileID . Value		4858054						
ANR	4858483	Symbol	GetFileID		4858054						
ANR	4858484	Symbol	* ( monitor -> state )		4858054						
ANR	4858485	Symbol	monitor -> readUserLog		4858054						
ANR	4858486	Function	ReadMultipleUserLogs :: printAllLogMonitors	1159:0:32762:33003							
ANR	4858487	FunctionDef	ReadMultipleUserLogs :: printAllLogMonitors (FILE * stream)		4858486	0					
ANR	4858488	CompoundStatement		1161:0:32831:33003	4858486	0					
ANR	4858489	IfStatement	if ( stream != NULL )		4858486	0					
ANR	4858490	Condition	stream != NULL	1162:6:32839:32852	4858486	0	True				
ANR	4858491	EqualityExpression	stream != NULL		4858486	0		!=			
ANR	4858492	Identifier	stream		4858486	0					
ANR	4858493	Identifier	NULL		4858486	1					
ANR	4858494	CompoundStatement		2:23:24:24	4858486	1					
ANR	4858495	ExpressionStatement	"fprintf ( stream , ""All log monitors:\\n"" )"	1163:2:32860:32900	4858486	0	True				
ANR	4858496	CallExpression	"fprintf ( stream , ""All log monitors:\\n"" )"		4858486	0					
ANR	4858497	Callee	fprintf		4858486	0					
ANR	4858498	Identifier	fprintf		4858486	0					
ANR	4858499	ArgumentList	stream		4858486	1					
ANR	4858500	Argument	stream		4858486	0					
ANR	4858501	Identifier	stream		4858486	0					
ANR	4858502	Argument	"""All log monitors:\\n"""		4858486	1					
ANR	4858503	PrimaryExpression	"""All log monitors:\\n"""		4858486	0					
ANR	4858504	ElseStatement	else		4858486	0					
ANR	4858505	CompoundStatement		4:8:78:78	4858486	0					
ANR	4858506	ExpressionStatement	"dprintf ( D_ALWAYS , ""All log monitors:\\n"" )"	1165:2:32914:32956	4858486	0	True				
ANR	4858507	CallExpression	"dprintf ( D_ALWAYS , ""All log monitors:\\n"" )"		4858486	0					
ANR	4858508	Callee	dprintf		4858486	0					
ANR	4858509	Identifier	dprintf		4858486	0					
ANR	4858510	ArgumentList	D_ALWAYS		4858486	1					
ANR	4858511	Argument	D_ALWAYS		4858486	0					
ANR	4858512	Identifier	D_ALWAYS		4858486	0					
ANR	4858513	Argument	"""All log monitors:\\n"""		4858486	1					
ANR	4858514	PrimaryExpression	"""All log monitors:\\n"""		4858486	0					
ANR	4858515	ExpressionStatement	"printLogMonitors ( stream , allLogFiles )"	1167:1:32962:33001	4858486	1	True				
ANR	4858516	CallExpression	"printLogMonitors ( stream , allLogFiles )"		4858486	0					
ANR	4858517	Callee	printLogMonitors		4858486	0					
ANR	4858518	Identifier	printLogMonitors		4858486	0					
ANR	4858519	ArgumentList	stream		4858486	1					
ANR	4858520	Argument	stream		4858486	0					
ANR	4858521	Identifier	stream		4858486	0					
ANR	4858522	Argument	allLogFiles		4858486	1					
ANR	4858523	Identifier	allLogFiles		4858486	0					
ANR	4858524	ReturnType	void		4858486	1					
ANR	4858525	Identifier	ReadMultipleUserLogs :: printAllLogMonitors		4858486	2					
ANR	4858526	ParameterList	FILE * stream		4858486	3					
ANR	4858527	Parameter	FILE * stream	1160:43:32810:32821	4858486	0	True				
ANR	4858528	ParameterType	FILE *		4858486	0					
ANR	4858529	Identifier	stream		4858486	1					
ANR	4858530	CFGEntryNode	ENTRY		4858486		True				
ANR	4858531	CFGExitNode	EXIT		4858486		True				
ANR	4858532	Symbol	NULL		4858486						
ANR	4858533	Symbol	stream		4858486						
ANR	4858534	Symbol	D_ALWAYS		4858486						
ANR	4858535	Symbol	allLogFiles		4858486						
ANR	4858536	Function	ReadMultipleUserLogs :: printActiveLogMonitors	1172:0:33087:33340							
ANR	4858537	FunctionDef	ReadMultipleUserLogs :: printActiveLogMonitors (FILE * stream)		4858536	0					
ANR	4858538	CompoundStatement		1174:0:33159:33340	4858536	0					
ANR	4858539	IfStatement	if ( stream != NULL )		4858536	0					
ANR	4858540	Condition	stream != NULL	1175:6:33167:33180	4858536	0	True				
ANR	4858541	EqualityExpression	stream != NULL		4858536	0		!=			
ANR	4858542	Identifier	stream		4858536	0					
ANR	4858543	Identifier	NULL		4858536	1					
ANR	4858544	CompoundStatement		2:23:24:24	4858536	1					
ANR	4858545	ExpressionStatement	"fprintf ( stream , ""Active log monitors:\\n"" )"	1176:2:33188:33231	4858536	0	True				
ANR	4858546	CallExpression	"fprintf ( stream , ""Active log monitors:\\n"" )"		4858536	0					
ANR	4858547	Callee	fprintf		4858536	0					
ANR	4858548	Identifier	fprintf		4858536	0					
ANR	4858549	ArgumentList	stream		4858536	1					
ANR	4858550	Argument	stream		4858536	0					
ANR	4858551	Identifier	stream		4858536	0					
ANR	4858552	Argument	"""Active log monitors:\\n"""		4858536	1					
ANR	4858553	PrimaryExpression	"""Active log monitors:\\n"""		4858536	0					
ANR	4858554	ElseStatement	else		4858536	0					
ANR	4858555	CompoundStatement		4:8:81:81	4858536	0					
ANR	4858556	ExpressionStatement	"dprintf ( D_ALWAYS , ""Active log monitors:\\n"" )"	1178:2:33245:33290	4858536	0	True				
ANR	4858557	CallExpression	"dprintf ( D_ALWAYS , ""Active log monitors:\\n"" )"		4858536	0					
ANR	4858558	Callee	dprintf		4858536	0					
ANR	4858559	Identifier	dprintf		4858536	0					
ANR	4858560	ArgumentList	D_ALWAYS		4858536	1					
ANR	4858561	Argument	D_ALWAYS		4858536	0					
ANR	4858562	Identifier	D_ALWAYS		4858536	0					
ANR	4858563	Argument	"""Active log monitors:\\n"""		4858536	1					
ANR	4858564	PrimaryExpression	"""Active log monitors:\\n"""		4858536	0					
ANR	4858565	ExpressionStatement	"printLogMonitors ( stream , activeLogFiles )"	1180:1:33296:33338	4858536	1	True				
ANR	4858566	CallExpression	"printLogMonitors ( stream , activeLogFiles )"		4858536	0					
ANR	4858567	Callee	printLogMonitors		4858536	0					
ANR	4858568	Identifier	printLogMonitors		4858536	0					
ANR	4858569	ArgumentList	stream		4858536	1					
ANR	4858570	Argument	stream		4858536	0					
ANR	4858571	Identifier	stream		4858536	0					
ANR	4858572	Argument	activeLogFiles		4858536	1					
ANR	4858573	Identifier	activeLogFiles		4858536	0					
ANR	4858574	ReturnType	void		4858536	1					
ANR	4858575	Identifier	ReadMultipleUserLogs :: printActiveLogMonitors		4858536	2					
ANR	4858576	ParameterList	FILE * stream		4858536	3					
ANR	4858577	Parameter	FILE * stream	1173:46:33138:33149	4858536	0	True				
ANR	4858578	ParameterType	FILE *		4858536	0					
ANR	4858579	Identifier	stream		4858536	1					
ANR	4858580	CFGEntryNode	ENTRY		4858536		True				
ANR	4858581	CFGExitNode	EXIT		4858536		True				
ANR	4858582	Symbol	NULL		4858536						
ANR	4858583	Symbol	stream		4858536						
ANR	4858584	Symbol	D_ALWAYS		4858536						
ANR	4858585	Symbol	activeLogFiles		4858536						
ANR	4858586	Function	ReadMultipleUserLogs :: printLogMonitors	1185:0:33424:34351							
ANR	4858587	FunctionDef	"ReadMultipleUserLogs :: printLogMonitors (FILE * stream , HashTable < MyString , LogFileMonitor * > logTable)"		4858586	0					
ANR	4858588	CompoundStatement		1188:0:33541:34351	4858586	0					
ANR	4858589	ExpressionStatement	logTable . startIterations ( )	1189:1:33544:33570	4858586	0	True				
ANR	4858590	CallExpression	logTable . startIterations ( )		4858586	0					
ANR	4858591	Callee	logTable . startIterations		4858586	0					
ANR	4858592	MemberAccess	logTable . startIterations		4858586	0					
ANR	4858593	Identifier	logTable		4858586	0					
ANR	4858594	Identifier	startIterations		4858586	1					
ANR	4858595	ArgumentList			4858586	1					
ANR	4858596	IdentifierDeclStatement	MyString fileID ;	1190:1:33573:33588	4858586	1	True				
ANR	4858597	IdentifierDecl	fileID		4858586	0					
ANR	4858598	IdentifierDeclType	MyString		4858586	0					
ANR	4858599	Identifier	fileID		4858586	1					
ANR	4858600	IdentifierDeclStatement	LogFileMonitor * monitor ;	1191:1:33591:33615	4858586	2	True				
ANR	4858601	IdentifierDecl	* monitor		4858586	0					
ANR	4858602	IdentifierDeclType	LogFileMonitor *		4858586	0					
ANR	4858603	Identifier	monitor		4858586	1					
ANR	4858604	WhileStatement	"while ( logTable . iterate ( fileID , monitor ) )"		4858586	3					
ANR	4858605	Condition	"logTable . iterate ( fileID , monitor )"	1192:9:33626:33661	4858586	0	True				
ANR	4858606	CallExpression	"logTable . iterate ( fileID , monitor )"		4858586	0					
ANR	4858607	Callee	logTable . iterate		4858586	0					
ANR	4858608	MemberAccess	logTable . iterate		4858586	0					
ANR	4858609	Identifier	logTable		4858586	0					
ANR	4858610	Identifier	iterate		4858586	1					
ANR	4858611	ArgumentList	fileID		4858586	1					
ANR	4858612	Argument	fileID		4858586	0					
ANR	4858613	Identifier	fileID		4858586	0					
ANR	4858614	Argument	monitor		4858586	1					
ANR	4858615	Identifier	monitor		4858586	0					
ANR	4858616	CompoundStatement		5:48:123:123	4858586	1					
ANR	4858617	IfStatement	if ( stream != NULL )		4858586	0					
ANR	4858618	Condition	stream != NULL	1193:7:33674:33687	4858586	0	True				
ANR	4858619	EqualityExpression	stream != NULL		4858586	0		!=			
ANR	4858620	Identifier	stream		4858586	0					
ANR	4858621	Identifier	NULL		4858586	1					
ANR	4858622	CompoundStatement		6:24:149:149	4858586	1					
ANR	4858623	ExpressionStatement	"fprintf ( stream , ""  File ID: %s\\n"" , fileID . Value ( ) )"	1194:3:33696:33748	4858586	0	True				
ANR	4858624	CallExpression	"fprintf ( stream , ""  File ID: %s\\n"" , fileID . Value ( ) )"		4858586	0					
ANR	4858625	Callee	fprintf		4858586	0					
ANR	4858626	Identifier	fprintf		4858586	0					
ANR	4858627	ArgumentList	stream		4858586	1					
ANR	4858628	Argument	stream		4858586	0					
ANR	4858629	Identifier	stream		4858586	0					
ANR	4858630	Argument	"""  File ID: %s\\n"""		4858586	1					
ANR	4858631	PrimaryExpression	"""  File ID: %s\\n"""		4858586	0					
ANR	4858632	Argument	fileID . Value ( )		4858586	2					
ANR	4858633	CallExpression	fileID . Value ( )		4858586	0					
ANR	4858634	Callee	fileID . Value		4858586	0					
ANR	4858635	MemberAccess	fileID . Value		4858586	0					
ANR	4858636	Identifier	fileID		4858586	0					
ANR	4858637	Identifier	Value		4858586	1					
ANR	4858638	ArgumentList			4858586	1					
ANR	4858639	ExpressionStatement	"fprintf ( stream , ""    Monitor: %p\\n"" , monitor )"	1195:3:33753:33800	4858586	1	True				
ANR	4858640	CallExpression	"fprintf ( stream , ""    Monitor: %p\\n"" , monitor )"		4858586	0					
ANR	4858641	Callee	fprintf		4858586	0					
ANR	4858642	Identifier	fprintf		4858586	0					
ANR	4858643	ArgumentList	stream		4858586	1					
ANR	4858644	Argument	stream		4858586	0					
ANR	4858645	Identifier	stream		4858586	0					
ANR	4858646	Argument	"""    Monitor: %p\\n"""		4858586	1					
ANR	4858647	PrimaryExpression	"""    Monitor: %p\\n"""		4858586	0					
ANR	4858648	Argument	monitor		4858586	2					
ANR	4858649	Identifier	monitor		4858586	0					
ANR	4858650	ExpressionStatement	"fprintf ( stream , ""    Log file: <%s>\\n"" , monitor -> logFile . Value ( ) )"	1196:3:33805:33872	4858586	2	True				
ANR	4858651	CallExpression	"fprintf ( stream , ""    Log file: <%s>\\n"" , monitor -> logFile . Value ( ) )"		4858586	0					
ANR	4858652	Callee	fprintf		4858586	0					
ANR	4858653	Identifier	fprintf		4858586	0					
ANR	4858654	ArgumentList	stream		4858586	1					
ANR	4858655	Argument	stream		4858586	0					
ANR	4858656	Identifier	stream		4858586	0					
ANR	4858657	Argument	"""    Log file: <%s>\\n"""		4858586	1					
ANR	4858658	PrimaryExpression	"""    Log file: <%s>\\n"""		4858586	0					
ANR	4858659	Argument	monitor -> logFile . Value ( )		4858586	2					
ANR	4858660	CallExpression	monitor -> logFile . Value ( )		4858586	0					
ANR	4858661	Callee	monitor -> logFile . Value		4858586	0					
ANR	4858662	MemberAccess	monitor -> logFile . Value		4858586	0					
ANR	4858663	PtrMemberAccess	monitor -> logFile		4858586	0					
ANR	4858664	Identifier	monitor		4858586	0					
ANR	4858665	Identifier	logFile		4858586	1					
ANR	4858666	Identifier	Value		4858586	1					
ANR	4858667	ArgumentList			4858586	1					
ANR	4858668	ExpressionStatement	"fprintf ( stream , ""    refCount: %d\\n"" , monitor -> refCount )"	1197:3:33877:33935	4858586	3	True				
ANR	4858669	CallExpression	"fprintf ( stream , ""    refCount: %d\\n"" , monitor -> refCount )"		4858586	0					
ANR	4858670	Callee	fprintf		4858586	0					
ANR	4858671	Identifier	fprintf		4858586	0					
ANR	4858672	ArgumentList	stream		4858586	1					
ANR	4858673	Argument	stream		4858586	0					
ANR	4858674	Identifier	stream		4858586	0					
ANR	4858675	Argument	"""    refCount: %d\\n"""		4858586	1					
ANR	4858676	PrimaryExpression	"""    refCount: %d\\n"""		4858586	0					
ANR	4858677	Argument	monitor -> refCount		4858586	2					
ANR	4858678	PtrMemberAccess	monitor -> refCount		4858586	0					
ANR	4858679	Identifier	monitor		4858586	0					
ANR	4858680	Identifier	refCount		4858586	1					
ANR	4858681	ExpressionStatement	"fprintf ( stream , ""    lastLogEvent: %p\\n"" , monitor -> lastLogEvent )"	1198:3:33940:34006	4858586	4	True				
ANR	4858682	CallExpression	"fprintf ( stream , ""    lastLogEvent: %p\\n"" , monitor -> lastLogEvent )"		4858586	0					
ANR	4858683	Callee	fprintf		4858586	0					
ANR	4858684	Identifier	fprintf		4858586	0					
ANR	4858685	ArgumentList	stream		4858586	1					
ANR	4858686	Argument	stream		4858586	0					
ANR	4858687	Identifier	stream		4858586	0					
ANR	4858688	Argument	"""    lastLogEvent: %p\\n"""		4858586	1					
ANR	4858689	PrimaryExpression	"""    lastLogEvent: %p\\n"""		4858586	0					
ANR	4858690	Argument	monitor -> lastLogEvent		4858586	2					
ANR	4858691	PtrMemberAccess	monitor -> lastLogEvent		4858586	0					
ANR	4858692	Identifier	monitor		4858586	0					
ANR	4858693	Identifier	lastLogEvent		4858586	1					
ANR	4858694	ElseStatement	else		4858586	0					
ANR	4858695	CompoundStatement		12:9:475:475	4858586	0					
ANR	4858696	ExpressionStatement	"dprintf ( D_ALWAYS , ""  File ID: %s\\n"" , fileID . Value ( ) )"	1200:3:34022:34076	4858586	0	True				
ANR	4858697	CallExpression	"dprintf ( D_ALWAYS , ""  File ID: %s\\n"" , fileID . Value ( ) )"		4858586	0					
ANR	4858698	Callee	dprintf		4858586	0					
ANR	4858699	Identifier	dprintf		4858586	0					
ANR	4858700	ArgumentList	D_ALWAYS		4858586	1					
ANR	4858701	Argument	D_ALWAYS		4858586	0					
ANR	4858702	Identifier	D_ALWAYS		4858586	0					
ANR	4858703	Argument	"""  File ID: %s\\n"""		4858586	1					
ANR	4858704	PrimaryExpression	"""  File ID: %s\\n"""		4858586	0					
ANR	4858705	Argument	fileID . Value ( )		4858586	2					
ANR	4858706	CallExpression	fileID . Value ( )		4858586	0					
ANR	4858707	Callee	fileID . Value		4858586	0					
ANR	4858708	MemberAccess	fileID . Value		4858586	0					
ANR	4858709	Identifier	fileID		4858586	0					
ANR	4858710	Identifier	Value		4858586	1					
ANR	4858711	ArgumentList			4858586	1					
ANR	4858712	ExpressionStatement	"dprintf ( D_ALWAYS , ""    Monitor: %p\\n"" , monitor )"	1201:3:34081:34130	4858586	1	True				
ANR	4858713	CallExpression	"dprintf ( D_ALWAYS , ""    Monitor: %p\\n"" , monitor )"		4858586	0					
ANR	4858714	Callee	dprintf		4858586	0					
ANR	4858715	Identifier	dprintf		4858586	0					
ANR	4858716	ArgumentList	D_ALWAYS		4858586	1					
ANR	4858717	Argument	D_ALWAYS		4858586	0					
ANR	4858718	Identifier	D_ALWAYS		4858586	0					
ANR	4858719	Argument	"""    Monitor: %p\\n"""		4858586	1					
ANR	4858720	PrimaryExpression	"""    Monitor: %p\\n"""		4858586	0					
ANR	4858721	Argument	monitor		4858586	2					
ANR	4858722	Identifier	monitor		4858586	0					
ANR	4858723	ExpressionStatement	"dprintf ( D_ALWAYS , ""    Log file: <%s>\\n"" , monitor -> logFile . Value ( ) )"	1202:3:34135:34204	4858586	2	True				
ANR	4858724	CallExpression	"dprintf ( D_ALWAYS , ""    Log file: <%s>\\n"" , monitor -> logFile . Value ( ) )"		4858586	0					
ANR	4858725	Callee	dprintf		4858586	0					
ANR	4858726	Identifier	dprintf		4858586	0					
ANR	4858727	ArgumentList	D_ALWAYS		4858586	1					
ANR	4858728	Argument	D_ALWAYS		4858586	0					
ANR	4858729	Identifier	D_ALWAYS		4858586	0					
ANR	4858730	Argument	"""    Log file: <%s>\\n"""		4858586	1					
ANR	4858731	PrimaryExpression	"""    Log file: <%s>\\n"""		4858586	0					
ANR	4858732	Argument	monitor -> logFile . Value ( )		4858586	2					
ANR	4858733	CallExpression	monitor -> logFile . Value ( )		4858586	0					
ANR	4858734	Callee	monitor -> logFile . Value		4858586	0					
ANR	4858735	MemberAccess	monitor -> logFile . Value		4858586	0					
ANR	4858736	PtrMemberAccess	monitor -> logFile		4858586	0					
ANR	4858737	Identifier	monitor		4858586	0					
ANR	4858738	Identifier	logFile		4858586	1					
ANR	4858739	Identifier	Value		4858586	1					
ANR	4858740	ArgumentList			4858586	1					
ANR	4858741	ExpressionStatement	"dprintf ( D_ALWAYS , ""    refCount: %d\\n"" , monitor -> refCount )"	1203:3:34209:34269	4858586	3	True				
ANR	4858742	CallExpression	"dprintf ( D_ALWAYS , ""    refCount: %d\\n"" , monitor -> refCount )"		4858586	0					
ANR	4858743	Callee	dprintf		4858586	0					
ANR	4858744	Identifier	dprintf		4858586	0					
ANR	4858745	ArgumentList	D_ALWAYS		4858586	1					
ANR	4858746	Argument	D_ALWAYS		4858586	0					
ANR	4858747	Identifier	D_ALWAYS		4858586	0					
ANR	4858748	Argument	"""    refCount: %d\\n"""		4858586	1					
ANR	4858749	PrimaryExpression	"""    refCount: %d\\n"""		4858586	0					
ANR	4858750	Argument	monitor -> refCount		4858586	2					
ANR	4858751	PtrMemberAccess	monitor -> refCount		4858586	0					
ANR	4858752	Identifier	monitor		4858586	0					
ANR	4858753	Identifier	refCount		4858586	1					
ANR	4858754	ExpressionStatement	"dprintf ( D_ALWAYS , ""    lastLogEvent: %p\\n"" , monitor -> lastLogEvent )"	1204:3:34274:34342	4858586	4	True				
ANR	4858755	CallExpression	"dprintf ( D_ALWAYS , ""    lastLogEvent: %p\\n"" , monitor -> lastLogEvent )"		4858586	0					
ANR	4858756	Callee	dprintf		4858586	0					
ANR	4858757	Identifier	dprintf		4858586	0					
ANR	4858758	ArgumentList	D_ALWAYS		4858586	1					
ANR	4858759	Argument	D_ALWAYS		4858586	0					
ANR	4858760	Identifier	D_ALWAYS		4858586	0					
ANR	4858761	Argument	"""    lastLogEvent: %p\\n"""		4858586	1					
ANR	4858762	PrimaryExpression	"""    lastLogEvent: %p\\n"""		4858586	0					
ANR	4858763	Argument	monitor -> lastLogEvent		4858586	2					
ANR	4858764	PtrMemberAccess	monitor -> lastLogEvent		4858586	0					
ANR	4858765	Identifier	monitor		4858586	0					
ANR	4858766	Identifier	lastLogEvent		4858586	1					
ANR	4858767	ReturnType	void		4858586	1					
ANR	4858768	Identifier	ReadMultipleUserLogs :: printLogMonitors		4858586	2					
ANR	4858769	ParameterList	"FILE * stream , HashTable < MyString , LogFileMonitor * > logTable"		4858586	3					
ANR	4858770	Parameter	FILE * stream	1186:40:33469:33480	4858586	0	True				
ANR	4858771	ParameterType	FILE *		4858586	0					
ANR	4858772	Identifier	stream		4858586	1					
ANR	4858773	Parameter	"HashTable < MyString , LogFileMonitor * > logTable"	1187:3:33486:33531	4858586	1	True				
ANR	4858774	ParameterType	"HashTable < MyString , LogFileMonitor * >"		4858586	0					
ANR	4858775	Identifier	logTable		4858586	1					
ANR	4858776	CFGEntryNode	ENTRY		4858586		True				
ANR	4858777	CFGExitNode	EXIT		4858586		True				
ANR	4858778	Symbol	NULL		4858586						
ANR	4858779	Symbol	D_ALWAYS		4858586						
ANR	4858780	Symbol	logTable		4858586						
ANR	4858781	Symbol	monitor		4858586						
ANR	4858782	Symbol	* monitor		4858586						
ANR	4858783	Symbol	monitor -> lastLogEvent		4858586						
ANR	4858784	Symbol	stream		4858586						
ANR	4858785	Symbol	logTable . iterate		4858586						
ANR	4858786	Symbol	monitor -> logFile . Value		4858586						
ANR	4858787	Symbol	fileID . Value		4858586						
ANR	4858788	Symbol	monitor -> logFile		4858586						
ANR	4858789	Symbol	fileID		4858586						
ANR	4858790	Symbol	monitor -> refCount		4858586						
