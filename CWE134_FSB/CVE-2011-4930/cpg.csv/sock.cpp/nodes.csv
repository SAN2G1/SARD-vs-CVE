command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2366958	File	data/converged/CVE-2011-4930_htcondor/sock.cpp								
ANR	2366959	DeclStmt									
ANR	2366960	Decl							DaemonCoreSockAdapterClass	DaemonCoreSockAdapterClass	daemonCoreSockAdapter
ANR	2366961	Function	Sock :: Sock	55:0:1581:2363							
ANR	2366962	FunctionDef	Sock :: Sock ()		2366961	0					
ANR	2366963	CompoundStatement		55:24:1605:2363	2366961	0					
ANR	2366964	ExpressionStatement	_sock = INVALID_SOCKET	56:1:1608:1630	2366961	0	True				
ANR	2366965	AssignmentExpression	_sock = INVALID_SOCKET		2366961	0		=			
ANR	2366966	Identifier	_sock		2366961	0					
ANR	2366967	Identifier	INVALID_SOCKET		2366961	1					
ANR	2366968	ExpressionStatement	_state = sock_virgin	57:1:1633:1653	2366961	1	True				
ANR	2366969	AssignmentExpression	_state = sock_virgin		2366961	0		=			
ANR	2366970	Identifier	_state		2366961	0					
ANR	2366971	Identifier	sock_virgin		2366961	1					
ANR	2366972	ExpressionStatement	_timeout = 0	58:1:1656:1668	2366961	2	True				
ANR	2366973	AssignmentExpression	_timeout = 0		2366961	0		=			
ANR	2366974	Identifier	_timeout		2366961	0					
ANR	2366975	PrimaryExpression	0		2366961	1					
ANR	2366976	ExpressionStatement	_fqu = NULL	59:1:1671:1682	2366961	3	True				
ANR	2366977	AssignmentExpression	_fqu = NULL		2366961	0		=			
ANR	2366978	Identifier	_fqu		2366961	0					
ANR	2366979	Identifier	NULL		2366961	1					
ANR	2366980	ExpressionStatement	_fqu_user_part = NULL	60:1:1685:1706	2366961	4	True				
ANR	2366981	AssignmentExpression	_fqu_user_part = NULL		2366961	0		=			
ANR	2366982	Identifier	_fqu_user_part		2366961	0					
ANR	2366983	Identifier	NULL		2366961	1					
ANR	2366984	ExpressionStatement	_fqu_domain_part = NULL	61:1:1709:1732	2366961	5	True				
ANR	2366985	AssignmentExpression	_fqu_domain_part = NULL		2366961	0		=			
ANR	2366986	Identifier	_fqu_domain_part		2366961	0					
ANR	2366987	Identifier	NULL		2366961	1					
ANR	2366988	ExpressionStatement	_tried_authentication = false	62:1:1735:1764	2366961	6	True				
ANR	2366989	AssignmentExpression	_tried_authentication = false		2366961	0		=			
ANR	2366990	Identifier	_tried_authentication		2366961	0					
ANR	2366991	Identifier	false		2366961	1					
ANR	2366992	ExpressionStatement	ignore_connect_timeout = FALSE	63:1:1767:1797	2366961	7	True				
ANR	2366993	AssignmentExpression	ignore_connect_timeout = FALSE		2366961	0		=			
ANR	2366994	Identifier	ignore_connect_timeout		2366961	0					
ANR	2366995	Identifier	FALSE		2366961	1					
ANR	2366996	ExpressionStatement	connect_state . connect_failed = false	64:1:1826:1862	2366961	8	True				
ANR	2366997	AssignmentExpression	connect_state . connect_failed = false		2366961	0		=			
ANR	2366998	MemberAccess	connect_state . connect_failed		2366961	0					
ANR	2366999	Identifier	connect_state		2366961	0					
ANR	2367000	Identifier	connect_failed		2366961	1					
ANR	2367001	Identifier	false		2366961	1					
ANR	2367002	ExpressionStatement	connect_state . this_try_timeout_time = 0	65:1:1865:1904	2366961	9	True				
ANR	2367003	AssignmentExpression	connect_state . this_try_timeout_time = 0		2366961	0		=			
ANR	2367004	MemberAccess	connect_state . this_try_timeout_time		2366961	0					
ANR	2367005	Identifier	connect_state		2366961	0					
ANR	2367006	Identifier	this_try_timeout_time		2366961	1					
ANR	2367007	PrimaryExpression	0		2366961	1					
ANR	2367008	ExpressionStatement	connect_state . retry_timeout_time = 0	66:1:1907:1943	2366961	10	True				
ANR	2367009	AssignmentExpression	connect_state . retry_timeout_time = 0		2366961	0		=			
ANR	2367010	MemberAccess	connect_state . retry_timeout_time		2366961	0					
ANR	2367011	Identifier	connect_state		2366961	0					
ANR	2367012	Identifier	retry_timeout_time		2366961	1					
ANR	2367013	PrimaryExpression	0		2366961	1					
ANR	2367014	ExpressionStatement	connect_state . retry_wait_timeout_time = 0	67:1:1946:1987	2366961	11	True				
ANR	2367015	AssignmentExpression	connect_state . retry_wait_timeout_time = 0		2366961	0		=			
ANR	2367016	MemberAccess	connect_state . retry_wait_timeout_time		2366961	0					
ANR	2367017	Identifier	connect_state		2366961	0					
ANR	2367018	Identifier	retry_wait_timeout_time		2366961	1					
ANR	2367019	PrimaryExpression	0		2366961	1					
ANR	2367020	ExpressionStatement	connect_state . failed_once = false	68:1:1990:2023	2366961	12	True				
ANR	2367021	AssignmentExpression	connect_state . failed_once = false		2366961	0		=			
ANR	2367022	MemberAccess	connect_state . failed_once		2366961	0					
ANR	2367023	Identifier	connect_state		2366961	0					
ANR	2367024	Identifier	failed_once		2366961	1					
ANR	2367025	Identifier	false		2366961	1					
ANR	2367026	ExpressionStatement	connect_state . connect_refused = false	69:1:2026:2063	2366961	13	True				
ANR	2367027	AssignmentExpression	connect_state . connect_refused = false		2366961	0		=			
ANR	2367028	MemberAccess	connect_state . connect_refused		2366961	0					
ANR	2367029	Identifier	connect_state		2366961	0					
ANR	2367030	Identifier	connect_refused		2366961	1					
ANR	2367031	Identifier	false		2366961	1					
ANR	2367032	ExpressionStatement	connect_state . old_timeout_value = 0	70:1:2066:2101	2366961	14	True				
ANR	2367033	AssignmentExpression	connect_state . old_timeout_value = 0		2366961	0		=			
ANR	2367034	MemberAccess	connect_state . old_timeout_value		2366961	0					
ANR	2367035	Identifier	connect_state		2366961	0					
ANR	2367036	Identifier	old_timeout_value		2366961	1					
ANR	2367037	PrimaryExpression	0		2366961	1					
ANR	2367038	ExpressionStatement	connect_state . non_blocking_flag = false	71:1:2104:2143	2366961	15	True				
ANR	2367039	AssignmentExpression	connect_state . non_blocking_flag = false		2366961	0		=			
ANR	2367040	MemberAccess	connect_state . non_blocking_flag		2366961	0					
ANR	2367041	Identifier	connect_state		2366961	0					
ANR	2367042	Identifier	non_blocking_flag		2366961	1					
ANR	2367043	Identifier	false		2366961	1					
ANR	2367044	ExpressionStatement	connect_state . host = NULL	72:1:2146:2171	2366961	16	True				
ANR	2367045	AssignmentExpression	connect_state . host = NULL		2366961	0		=			
ANR	2367046	MemberAccess	connect_state . host		2366961	0					
ANR	2367047	Identifier	connect_state		2366961	0					
ANR	2367048	Identifier	host		2366961	1					
ANR	2367049	Identifier	NULL		2366961	1					
ANR	2367050	ExpressionStatement	connect_state . port = 0	73:1:2174:2196	2366961	17	True				
ANR	2367051	AssignmentExpression	connect_state . port = 0		2366961	0		=			
ANR	2367052	MemberAccess	connect_state . port		2366961	0					
ANR	2367053	Identifier	connect_state		2366961	0					
ANR	2367054	Identifier	port		2366961	1					
ANR	2367055	PrimaryExpression	0		2366961	1					
ANR	2367056	ExpressionStatement	connect_state . connect_failure_reason = NULL	74:1:2199:2242	2366961	18	True				
ANR	2367057	AssignmentExpression	connect_state . connect_failure_reason = NULL		2366961	0		=			
ANR	2367058	MemberAccess	connect_state . connect_failure_reason		2366961	0					
ANR	2367059	Identifier	connect_state		2366961	0					
ANR	2367060	Identifier	connect_failure_reason		2366961	1					
ANR	2367061	Identifier	NULL		2366961	1					
ANR	2367062	ExpressionStatement	_who . clear ( )	75:1:2245:2257	2366961	19	True				
ANR	2367063	CallExpression	_who . clear ( )		2366961	0					
ANR	2367064	Callee	_who . clear		2366961	0					
ANR	2367065	MemberAccess	_who . clear		2366961	0					
ANR	2367066	Identifier	_who		2366961	0					
ANR	2367067	Identifier	clear		2366961	1					
ANR	2367068	ArgumentList			2366961	1					
ANR	2367069	ExpressionStatement	crypto_ = NULL	77:4:2264:2278	2366961	20	True				
ANR	2367070	AssignmentExpression	crypto_ = NULL		2366961	0		=			
ANR	2367071	Identifier	crypto_		2366961	0					
ANR	2367072	Identifier	NULL		2366961	1					
ANR	2367073	ExpressionStatement	mdMode_ = MD_OFF	78:4:2284:2300	2366961	21	True				
ANR	2367074	AssignmentExpression	mdMode_ = MD_OFF		2366961	0		=			
ANR	2367075	Identifier	mdMode_		2366961	0					
ANR	2367076	Identifier	MD_OFF		2366961	1					
ANR	2367077	ExpressionStatement	mdKey_ = 0	79:4:2306:2316	2366961	22	True				
ANR	2367078	AssignmentExpression	mdKey_ = 0		2366961	0		=			
ANR	2367079	Identifier	mdKey_		2366961	0					
ANR	2367080	PrimaryExpression	0		2366961	1					
ANR	2367081	ExpressionStatement	m_connect_addr = NULL	81:1:2320:2341	2366961	23	True				
ANR	2367082	AssignmentExpression	m_connect_addr = NULL		2366961	0		=			
ANR	2367083	Identifier	m_connect_addr		2366961	0					
ANR	2367084	Identifier	NULL		2366961	1					
ANR	2367085	ExpressionStatement	addr_changed ( )	82:4:2347:2361	2366961	24	True				
ANR	2367086	CallExpression	addr_changed ( )		2366961	0					
ANR	2367087	Callee	addr_changed		2366961	0					
ANR	2367088	Identifier	addr_changed		2366961	0					
ANR	2367089	ArgumentList			2366961	1					
ANR	2367090	Identifier	Sock :: Sock		2366961	1					
ANR	2367091	ParameterList			2366961	2					
ANR	2367092	CFGEntryNode	ENTRY		2366961		True				
ANR	2367093	CFGExitNode	EXIT		2366961		True				
ANR	2367094	Symbol	connect_state . host		2366961						
ANR	2367095	Symbol	connect_state . retry_wait_timeout_time		2366961						
ANR	2367096	Symbol	connect_state . connect_failure_reason		2366961						
ANR	2367097	Symbol	_tried_authentication		2366961						
ANR	2367098	Symbol	INVALID_SOCKET		2366961						
ANR	2367099	Symbol	connect_state . connect_refused		2366961						
ANR	2367100	Symbol	crypto_		2366961						
ANR	2367101	Symbol	_sock		2366961						
ANR	2367102	Symbol	_who		2366961						
ANR	2367103	Symbol	connect_state . connect_failed		2366961						
ANR	2367104	Symbol	connect_state . port		2366961						
ANR	2367105	Symbol	sock_virgin		2366961						
ANR	2367106	Symbol	mdMode_		2366961						
ANR	2367107	Symbol	connect_state . failed_once		2366961						
ANR	2367108	Symbol	_timeout		2366961						
ANR	2367109	Symbol	_fqu_user_part		2366961						
ANR	2367110	Symbol	NULL		2366961						
ANR	2367111	Symbol	m_connect_addr		2366961						
ANR	2367112	Symbol	connect_state . old_timeout_value		2366961						
ANR	2367113	Symbol	_fqu		2366961						
ANR	2367114	Symbol	false		2366961						
ANR	2367115	Symbol	MD_OFF		2366961						
ANR	2367116	Symbol	ignore_connect_timeout		2366961						
ANR	2367117	Symbol	_fqu_domain_part		2366961						
ANR	2367118	Symbol	connect_state		2366961						
ANR	2367119	Symbol	connect_state . retry_timeout_time		2366961						
ANR	2367120	Symbol	mdKey_		2366961						
ANR	2367121	Symbol	connect_state . this_try_timeout_time		2366961						
ANR	2367122	Symbol	_state		2366961						
ANR	2367123	Symbol	FALSE		2366961						
ANR	2367124	Symbol	connect_state . non_blocking_flag		2366961						
ANR	2367125	Function	Sock :: Sock	85:0:2366:4223							
ANR	2367126	FunctionDef	Sock :: Sock (const Sock & orig)		2367125	0					
ANR	2367127	CompoundStatement		85:41:2407:4223	2367125	0					
ANR	2367128	ExpressionStatement	_sock = INVALID_SOCKET	88:1:2453:2475	2367125	0	True				
ANR	2367129	AssignmentExpression	_sock = INVALID_SOCKET		2367125	0		=			
ANR	2367130	Identifier	_sock		2367125	0					
ANR	2367131	Identifier	INVALID_SOCKET		2367125	1					
ANR	2367132	ExpressionStatement	_state = sock_virgin	89:1:2478:2498	2367125	1	True				
ANR	2367133	AssignmentExpression	_state = sock_virgin		2367125	0		=			
ANR	2367134	Identifier	_state		2367125	0					
ANR	2367135	Identifier	sock_virgin		2367125	1					
ANR	2367136	ExpressionStatement	_timeout = 0	90:1:2501:2513	2367125	2	True				
ANR	2367137	AssignmentExpression	_timeout = 0		2367125	0		=			
ANR	2367138	Identifier	_timeout		2367125	0					
ANR	2367139	PrimaryExpression	0		2367125	1					
ANR	2367140	ExpressionStatement	_fqu = NULL	91:1:2516:2527	2367125	3	True				
ANR	2367141	AssignmentExpression	_fqu = NULL		2367125	0		=			
ANR	2367142	Identifier	_fqu		2367125	0					
ANR	2367143	Identifier	NULL		2367125	1					
ANR	2367144	ExpressionStatement	_fqu_user_part = NULL	92:1:2530:2551	2367125	4	True				
ANR	2367145	AssignmentExpression	_fqu_user_part = NULL		2367125	0		=			
ANR	2367146	Identifier	_fqu_user_part		2367125	0					
ANR	2367147	Identifier	NULL		2367125	1					
ANR	2367148	ExpressionStatement	_fqu_domain_part = NULL	93:1:2554:2577	2367125	5	True				
ANR	2367149	AssignmentExpression	_fqu_domain_part = NULL		2367125	0		=			
ANR	2367150	Identifier	_fqu_domain_part		2367125	0					
ANR	2367151	Identifier	NULL		2367125	1					
ANR	2367152	ExpressionStatement	_tried_authentication = false	94:1:2580:2609	2367125	6	True				
ANR	2367153	AssignmentExpression	_tried_authentication = false		2367125	0		=			
ANR	2367154	Identifier	_tried_authentication		2367125	0					
ANR	2367155	Identifier	false		2367125	1					
ANR	2367156	ExpressionStatement	ignore_timeout_multiplier = orig . ignore_timeout_multiplier	95:1:2612:2670	2367125	7	True				
ANR	2367157	AssignmentExpression	ignore_timeout_multiplier = orig . ignore_timeout_multiplier		2367125	0		=			
ANR	2367158	Identifier	ignore_timeout_multiplier		2367125	0					
ANR	2367159	MemberAccess	orig . ignore_timeout_multiplier		2367125	1					
ANR	2367160	Identifier	orig		2367125	0					
ANR	2367161	Identifier	ignore_timeout_multiplier		2367125	1					
ANR	2367162	ExpressionStatement	connect_state . connect_failed = false	96:1:2673:2709	2367125	8	True				
ANR	2367163	AssignmentExpression	connect_state . connect_failed = false		2367125	0		=			
ANR	2367164	MemberAccess	connect_state . connect_failed		2367125	0					
ANR	2367165	Identifier	connect_state		2367125	0					
ANR	2367166	Identifier	connect_failed		2367125	1					
ANR	2367167	Identifier	false		2367125	1					
ANR	2367168	ExpressionStatement	connect_state . failed_once = false	97:1:2712:2745	2367125	9	True				
ANR	2367169	AssignmentExpression	connect_state . failed_once = false		2367125	0		=			
ANR	2367170	MemberAccess	connect_state . failed_once		2367125	0					
ANR	2367171	Identifier	connect_state		2367125	0					
ANR	2367172	Identifier	failed_once		2367125	1					
ANR	2367173	Identifier	false		2367125	1					
ANR	2367174	ExpressionStatement	connect_state . connect_refused = false	98:1:2748:2785	2367125	10	True				
ANR	2367175	AssignmentExpression	connect_state . connect_refused = false		2367125	0		=			
ANR	2367176	MemberAccess	connect_state . connect_refused		2367125	0					
ANR	2367177	Identifier	connect_state		2367125	0					
ANR	2367178	Identifier	connect_refused		2367125	1					
ANR	2367179	Identifier	false		2367125	1					
ANR	2367180	ExpressionStatement	connect_state . this_try_timeout_time = 0	99:1:2788:2827	2367125	11	True				
ANR	2367181	AssignmentExpression	connect_state . this_try_timeout_time = 0		2367125	0		=			
ANR	2367182	MemberAccess	connect_state . this_try_timeout_time		2367125	0					
ANR	2367183	Identifier	connect_state		2367125	0					
ANR	2367184	Identifier	this_try_timeout_time		2367125	1					
ANR	2367185	PrimaryExpression	0		2367125	1					
ANR	2367186	ExpressionStatement	connect_state . retry_timeout_time = 0	100:1:2830:2866	2367125	12	True				
ANR	2367187	AssignmentExpression	connect_state . retry_timeout_time = 0		2367125	0		=			
ANR	2367188	MemberAccess	connect_state . retry_timeout_time		2367125	0					
ANR	2367189	Identifier	connect_state		2367125	0					
ANR	2367190	Identifier	retry_timeout_time		2367125	1					
ANR	2367191	PrimaryExpression	0		2367125	1					
ANR	2367192	ExpressionStatement	connect_state . retry_wait_timeout_time = 0	101:1:2869:2910	2367125	13	True				
ANR	2367193	AssignmentExpression	connect_state . retry_wait_timeout_time = 0		2367125	0		=			
ANR	2367194	MemberAccess	connect_state . retry_wait_timeout_time		2367125	0					
ANR	2367195	Identifier	connect_state		2367125	0					
ANR	2367196	Identifier	retry_wait_timeout_time		2367125	1					
ANR	2367197	PrimaryExpression	0		2367125	1					
ANR	2367198	ExpressionStatement	connect_state . old_timeout_value = 0	102:1:2913:2948	2367125	14	True				
ANR	2367199	AssignmentExpression	connect_state . old_timeout_value = 0		2367125	0		=			
ANR	2367200	MemberAccess	connect_state . old_timeout_value		2367125	0					
ANR	2367201	Identifier	connect_state		2367125	0					
ANR	2367202	Identifier	old_timeout_value		2367125	1					
ANR	2367203	PrimaryExpression	0		2367125	1					
ANR	2367204	ExpressionStatement	connect_state . non_blocking_flag = false	103:1:2951:2990	2367125	15	True				
ANR	2367205	AssignmentExpression	connect_state . non_blocking_flag = false		2367125	0		=			
ANR	2367206	MemberAccess	connect_state . non_blocking_flag		2367125	0					
ANR	2367207	Identifier	connect_state		2367125	0					
ANR	2367208	Identifier	non_blocking_flag		2367125	1					
ANR	2367209	Identifier	false		2367125	1					
ANR	2367210	ExpressionStatement	connect_state . host = NULL	104:1:2993:3018	2367125	16	True				
ANR	2367211	AssignmentExpression	connect_state . host = NULL		2367125	0		=			
ANR	2367212	MemberAccess	connect_state . host		2367125	0					
ANR	2367213	Identifier	connect_state		2367125	0					
ANR	2367214	Identifier	host		2367125	1					
ANR	2367215	Identifier	NULL		2367125	1					
ANR	2367216	ExpressionStatement	connect_state . port = 0	105:1:3021:3043	2367125	17	True				
ANR	2367217	AssignmentExpression	connect_state . port = 0		2367125	0		=			
ANR	2367218	MemberAccess	connect_state . port		2367125	0					
ANR	2367219	Identifier	connect_state		2367125	0					
ANR	2367220	Identifier	port		2367125	1					
ANR	2367221	PrimaryExpression	0		2367125	1					
ANR	2367222	ExpressionStatement	connect_state . connect_failure_reason = NULL	106:1:3046:3089	2367125	18	True				
ANR	2367223	AssignmentExpression	connect_state . connect_failure_reason = NULL		2367125	0		=			
ANR	2367224	MemberAccess	connect_state . connect_failure_reason		2367125	0					
ANR	2367225	Identifier	connect_state		2367125	0					
ANR	2367226	Identifier	connect_failure_reason		2367125	1					
ANR	2367227	Identifier	NULL		2367125	1					
ANR	2367228	ExpressionStatement	_who . clear ( )	107:1:3092:3104	2367125	19	True				
ANR	2367229	CallExpression	_who . clear ( )		2367125	0					
ANR	2367230	Callee	_who . clear		2367125	0					
ANR	2367231	MemberAccess	_who . clear		2367125	0					
ANR	2367232	Identifier	_who		2367125	0					
ANR	2367233	Identifier	clear		2367125	1					
ANR	2367234	ArgumentList			2367125	1					
ANR	2367235	ExpressionStatement	crypto_ = NULL	109:4:3111:3125	2367125	20	True				
ANR	2367236	AssignmentExpression	crypto_ = NULL		2367125	0		=			
ANR	2367237	Identifier	crypto_		2367125	0					
ANR	2367238	Identifier	NULL		2367125	1					
ANR	2367239	ExpressionStatement	mdMode_ = MD_OFF	110:4:3131:3147	2367125	21	True				
ANR	2367240	AssignmentExpression	mdMode_ = MD_OFF		2367125	0		=			
ANR	2367241	Identifier	mdMode_		2367125	0					
ANR	2367242	Identifier	MD_OFF		2367125	1					
ANR	2367243	ExpressionStatement	mdKey_ = 0	111:4:3153:3163	2367125	22	True				
ANR	2367244	AssignmentExpression	mdKey_ = 0		2367125	0		=			
ANR	2367245	Identifier	mdKey_		2367125	0					
ANR	2367246	PrimaryExpression	0		2367125	1					
ANR	2367247	ExpressionStatement	m_connect_addr = NULL	113:1:3167:3188	2367125	23	True				
ANR	2367248	AssignmentExpression	m_connect_addr = NULL		2367125	0		=			
ANR	2367249	Identifier	m_connect_addr		2367125	0					
ANR	2367250	Identifier	NULL		2367125	1					
ANR	2367251	ExpressionStatement	addr_changed ( )	114:4:3194:3208	2367125	24	True				
ANR	2367252	CallExpression	addr_changed ( )		2367125	0					
ANR	2367253	Callee	addr_changed		2367125	0					
ANR	2367254	Identifier	addr_changed		2367125	0					
ANR	2367255	ArgumentList			2367125	1					
ANR	2367256	IdentifierDeclStatement	SOCKET DuplicateSock = INVALID_SOCKET ;	119:1:3283:3320	2367125	25	True				
ANR	2367257	IdentifierDecl	DuplicateSock = INVALID_SOCKET		2367125	0					
ANR	2367258	IdentifierDeclType	SOCKET		2367125	0					
ANR	2367259	Identifier	DuplicateSock		2367125	1					
ANR	2367260	AssignmentExpression	DuplicateSock = INVALID_SOCKET		2367125	2		=			
ANR	2367261	Identifier	INVALID_SOCKET		2367125	0					
ANR	2367262	Identifier	INVALID_SOCKET		2367125	1					
ANR	2367263	IdentifierDeclStatement	WSAPROTOCOL_INFO sockstate ;	120:1:3323:3349	2367125	26	True				
ANR	2367264	IdentifierDecl	sockstate		2367125	0					
ANR	2367265	IdentifierDeclType	WSAPROTOCOL_INFO		2367125	0					
ANR	2367266	Identifier	sockstate		2367125	1					
ANR	2367267	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""About to sock duplicate, old sock=%X new sock=%X state=%d\\n"" , orig . _sock , _sock , _state )"	122:1:3353:3462	2367125	27	True				
ANR	2367268	CallExpression	"dprintf ( D_FULLDEBUG , ""About to sock duplicate, old sock=%X new sock=%X state=%d\\n"" , orig . _sock , _sock , _state )"		2367125	0					
ANR	2367269	Callee	dprintf		2367125	0					
ANR	2367270	Identifier	dprintf		2367125	0					
ANR	2367271	ArgumentList	D_FULLDEBUG		2367125	1					
ANR	2367272	Argument	D_FULLDEBUG		2367125	0					
ANR	2367273	Identifier	D_FULLDEBUG		2367125	0					
ANR	2367274	Argument	"""About to sock duplicate, old sock=%X new sock=%X state=%d\\n"""		2367125	1					
ANR	2367275	PrimaryExpression	"""About to sock duplicate, old sock=%X new sock=%X state=%d\\n"""		2367125	0					
ANR	2367276	Argument	orig . _sock		2367125	2					
ANR	2367277	MemberAccess	orig . _sock		2367125	0					
ANR	2367278	Identifier	orig		2367125	0					
ANR	2367279	Identifier	_sock		2367125	1					
ANR	2367280	Argument	_sock		2367125	3					
ANR	2367281	Identifier	_sock		2367125	0					
ANR	2367282	Argument	_state		2367125	4					
ANR	2367283	Identifier	_state		2367125	0					
ANR	2367284	IfStatement	"if ( WSADuplicateSocket ( orig . _sock , GetCurrentProcessId ( ) , & sockstate ) == 0 )"		2367125	28					
ANR	2367285	Condition	"WSADuplicateSocket ( orig . _sock , GetCurrentProcessId ( ) , & sockstate ) == 0"	125:5:3470:3537	2367125	0	True				
ANR	2367286	EqualityExpression	"WSADuplicateSocket ( orig . _sock , GetCurrentProcessId ( ) , & sockstate ) == 0"		2367125	0		==			
ANR	2367287	CallExpression	"WSADuplicateSocket ( orig . _sock , GetCurrentProcessId ( ) , & sockstate )"		2367125	0					
ANR	2367288	Callee	WSADuplicateSocket		2367125	0					
ANR	2367289	Identifier	WSADuplicateSocket		2367125	0					
ANR	2367290	ArgumentList	orig . _sock		2367125	1					
ANR	2367291	Argument	orig . _sock		2367125	0					
ANR	2367292	MemberAccess	orig . _sock		2367125	0					
ANR	2367293	Identifier	orig		2367125	0					
ANR	2367294	Identifier	_sock		2367125	1					
ANR	2367295	Argument	GetCurrentProcessId ( )		2367125	1					
ANR	2367296	CallExpression	GetCurrentProcessId ( )		2367125	0					
ANR	2367297	Callee	GetCurrentProcessId		2367125	0					
ANR	2367298	Identifier	GetCurrentProcessId		2367125	0					
ANR	2367299	ArgumentList			2367125	1					
ANR	2367300	Argument	& sockstate		2367125	2					
ANR	2367301	UnaryOperationExpression	& sockstate		2367125	0					
ANR	2367302	UnaryOperator	&		2367125	0					
ANR	2367303	Identifier	sockstate		2367125	1					
ANR	2367304	PrimaryExpression	0		2367125	1					
ANR	2367305	CompoundStatement		42:1:1133:1133	2367125	1					
ANR	2367306	ExpressionStatement	"DuplicateSock = WSASocket ( FROM_PROTOCOL_INFO , FROM_PROTOCOL_INFO , FROM_PROTOCOL_INFO , & sockstate , 0 , 0 )"	128:2:3593:3699	2367125	0	True				
ANR	2367307	AssignmentExpression	"DuplicateSock = WSASocket ( FROM_PROTOCOL_INFO , FROM_PROTOCOL_INFO , FROM_PROTOCOL_INFO , & sockstate , 0 , 0 )"		2367125	0		=			
ANR	2367308	Identifier	DuplicateSock		2367125	0					
ANR	2367309	CallExpression	"WSASocket ( FROM_PROTOCOL_INFO , FROM_PROTOCOL_INFO , FROM_PROTOCOL_INFO , & sockstate , 0 , 0 )"		2367125	1					
ANR	2367310	Callee	WSASocket		2367125	0					
ANR	2367311	Identifier	WSASocket		2367125	0					
ANR	2367312	ArgumentList	FROM_PROTOCOL_INFO		2367125	1					
ANR	2367313	Argument	FROM_PROTOCOL_INFO		2367125	0					
ANR	2367314	Identifier	FROM_PROTOCOL_INFO		2367125	0					
ANR	2367315	Argument	FROM_PROTOCOL_INFO		2367125	1					
ANR	2367316	Identifier	FROM_PROTOCOL_INFO		2367125	0					
ANR	2367317	Argument	FROM_PROTOCOL_INFO		2367125	2					
ANR	2367318	Identifier	FROM_PROTOCOL_INFO		2367125	0					
ANR	2367319	Argument	& sockstate		2367125	3					
ANR	2367320	UnaryOperationExpression	& sockstate		2367125	0					
ANR	2367321	UnaryOperator	&		2367125	0					
ANR	2367322	Identifier	sockstate		2367125	1					
ANR	2367323	Argument	0		2367125	4					
ANR	2367324	PrimaryExpression	0		2367125	0					
ANR	2367325	Argument	0		2367125	5					
ANR	2367326	PrimaryExpression	0		2367125	0					
ANR	2367327	IfStatement	if ( DuplicateSock == INVALID_SOCKET )		2367125	29					
ANR	2367328	Condition	DuplicateSock == INVALID_SOCKET	131:6:3710:3740	2367125	0	True				
ANR	2367329	EqualityExpression	DuplicateSock == INVALID_SOCKET		2367125	0		==			
ANR	2367330	Identifier	DuplicateSock		2367125	0					
ANR	2367331	Identifier	INVALID_SOCKET		2367125	1					
ANR	2367332	CompoundStatement		47:40:1336:1336	2367125	1					
ANR	2367333	ExpressionStatement	"EXCEPT ( ""ERROR failed to duplicate socket, err=%d"" , WSAGetLastError ( ) )"	132:2:3748:3821	2367125	0	True				
ANR	2367334	CallExpression	"EXCEPT ( ""ERROR failed to duplicate socket, err=%d"" , WSAGetLastError ( ) )"		2367125	0					
ANR	2367335	Callee	EXCEPT		2367125	0					
ANR	2367336	Identifier	EXCEPT		2367125	0					
ANR	2367337	ArgumentList	"""ERROR failed to duplicate socket, err=%d"""		2367125	1					
ANR	2367338	Argument	"""ERROR failed to duplicate socket, err=%d"""		2367125	0					
ANR	2367339	PrimaryExpression	"""ERROR failed to duplicate socket, err=%d"""		2367125	0					
ANR	2367340	Argument	WSAGetLastError ( )		2367125	1					
ANR	2367341	CallExpression	WSAGetLastError ( )		2367125	0					
ANR	2367342	Callee	WSAGetLastError		2367125	0					
ANR	2367343	Identifier	WSAGetLastError		2367125	0					
ANR	2367344	ArgumentList			2367125	1					
ANR	2367345	ExpressionStatement	_sock = DuplicateSock	136:1:3871:3892	2367125	30	True				
ANR	2367346	AssignmentExpression	_sock = DuplicateSock		2367125	0		=			
ANR	2367347	Identifier	_sock		2367125	0					
ANR	2367348	Identifier	DuplicateSock		2367125	1					
ANR	2367349	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Socket duplicated, old sock=%X new sock=%X state=%d\\n"" , orig . _sock , _sock , _state )"	137:1:3895:3998	2367125	31	True				
ANR	2367350	CallExpression	"dprintf ( D_FULLDEBUG , ""Socket duplicated, old sock=%X new sock=%X state=%d\\n"" , orig . _sock , _sock , _state )"		2367125	0					
ANR	2367351	Callee	dprintf		2367125	0					
ANR	2367352	Identifier	dprintf		2367125	0					
ANR	2367353	ArgumentList	D_FULLDEBUG		2367125	1					
ANR	2367354	Argument	D_FULLDEBUG		2367125	0					
ANR	2367355	Identifier	D_FULLDEBUG		2367125	0					
ANR	2367356	Argument	"""Socket duplicated, old sock=%X new sock=%X state=%d\\n"""		2367125	1					
ANR	2367357	PrimaryExpression	"""Socket duplicated, old sock=%X new sock=%X state=%d\\n"""		2367125	0					
ANR	2367358	Argument	orig . _sock		2367125	2					
ANR	2367359	MemberAccess	orig . _sock		2367125	0					
ANR	2367360	Identifier	orig		2367125	0					
ANR	2367361	Identifier	_sock		2367125	1					
ANR	2367362	Argument	_sock		2367125	3					
ANR	2367363	Identifier	_sock		2367125	0					
ANR	2367364	Argument	_state		2367125	4					
ANR	2367365	Identifier	_state		2367125	0					
ANR	2367366	ExpressionStatement	ignore_connect_timeout = orig . ignore_connect_timeout	147:1:4154:4206	2367125	32	True				
ANR	2367367	AssignmentExpression	ignore_connect_timeout = orig . ignore_connect_timeout		2367125	0		=			
ANR	2367368	Identifier	ignore_connect_timeout		2367125	0					
ANR	2367369	MemberAccess	orig . ignore_connect_timeout		2367125	1					
ANR	2367370	Identifier	orig		2367125	0					
ANR	2367371	Identifier	ignore_connect_timeout		2367125	1					
ANR	2367372	Identifier	Sock :: Sock		2367125	1					
ANR	2367373	ParameterList	const Sock & orig		2367125	2					
ANR	2367374	Parameter	const Sock & orig	85:11:2377:2393	2367125	0	True				
ANR	2367375	ParameterType	const Sock &		2367125	0					
ANR	2367376	Identifier	orig		2367125	1					
ANR	2367377	CFGEntryNode	ENTRY		2367125		True				
ANR	2367378	CFGExitNode	EXIT		2367125		True				
ANR	2367379	Symbol	orig . ignore_timeout_multiplier		2367125						
ANR	2367380	Symbol	connect_state . host		2367125						
ANR	2367381	Symbol	orig . _sock		2367125						
ANR	2367382	Symbol	connect_state . retry_wait_timeout_time		2367125						
ANR	2367383	Symbol	sockstate		2367125						
ANR	2367384	Symbol	connect_state . connect_failure_reason		2367125						
ANR	2367385	Symbol	_tried_authentication		2367125						
ANR	2367386	Symbol	INVALID_SOCKET		2367125						
ANR	2367387	Symbol	connect_state . connect_refused		2367125						
ANR	2367388	Symbol	crypto_		2367125						
ANR	2367389	Symbol	_sock		2367125						
ANR	2367390	Symbol	_who		2367125						
ANR	2367391	Symbol	connect_state . connect_failed		2367125						
ANR	2367392	Symbol	connect_state . port		2367125						
ANR	2367393	Symbol	sock_virgin		2367125						
ANR	2367394	Symbol	mdMode_		2367125						
ANR	2367395	Symbol	connect_state . failed_once		2367125						
ANR	2367396	Symbol	_timeout		2367125						
ANR	2367397	Symbol	DuplicateSock		2367125						
ANR	2367398	Symbol	ignore_timeout_multiplier		2367125						
ANR	2367399	Symbol	WSASocket		2367125						
ANR	2367400	Symbol	_fqu_user_part		2367125						
ANR	2367401	Symbol	NULL		2367125						
ANR	2367402	Symbol	m_connect_addr		2367125						
ANR	2367403	Symbol	connect_state . old_timeout_value		2367125						
ANR	2367404	Symbol	_fqu		2367125						
ANR	2367405	Symbol	false		2367125						
ANR	2367406	Symbol	MD_OFF		2367125						
ANR	2367407	Symbol	FROM_PROTOCOL_INFO		2367125						
ANR	2367408	Symbol	WSAGetLastError		2367125						
ANR	2367409	Symbol	D_FULLDEBUG		2367125						
ANR	2367410	Symbol	GetCurrentProcessId		2367125						
ANR	2367411	Symbol	ignore_connect_timeout		2367125						
ANR	2367412	Symbol	_fqu_domain_part		2367125						
ANR	2367413	Symbol	connect_state		2367125						
ANR	2367414	Symbol	connect_state . retry_timeout_time		2367125						
ANR	2367415	Symbol	mdKey_		2367125						
ANR	2367416	Symbol	orig . ignore_connect_timeout		2367125						
ANR	2367417	Symbol	connect_state . this_try_timeout_time		2367125						
ANR	2367418	Symbol	orig		2367125						
ANR	2367419	Symbol	_state		2367125						
ANR	2367420	Symbol	& sockstate		2367125						
ANR	2367421	Symbol	connect_state . non_blocking_flag		2367125						
ANR	2367422	Symbol	WSADuplicateSocket		2367125						
ANR	2367423	Function	Sock :: ~Sock	150:0:4226:4713							
ANR	2367424	FunctionDef	Sock :: ~Sock ()		2367423	0					
ANR	2367425	CompoundStatement		151:0:4240:4713	2367423	0					
ANR	2367426	Statement	delete	152:4:4246:4251	2367423	0	True				
ANR	2367427	ExpressionStatement	crypto_	152:11:4253:4260	2367423	1	True				
ANR	2367428	Identifier	crypto_		2367423	0					
ANR	2367429	ExpressionStatement	crypto_ = NULL	153:1:4263:4277	2367423	2	True				
ANR	2367430	AssignmentExpression	crypto_ = NULL		2367423	0		=			
ANR	2367431	Identifier	crypto_		2367423	0					
ANR	2367432	Identifier	NULL		2367423	1					
ANR	2367433	Statement	delete	154:4:4283:4288	2367423	3	True				
ANR	2367434	ExpressionStatement	mdKey_	154:11:4290:4296	2367423	4	True				
ANR	2367435	Identifier	mdKey_		2367423	0					
ANR	2367436	ExpressionStatement	mdKey_ = NULL	155:1:4299:4312	2367423	5	True				
ANR	2367437	AssignmentExpression	mdKey_ = NULL		2367423	0		=			
ANR	2367438	Identifier	mdKey_		2367423	0					
ANR	2367439	Identifier	NULL		2367423	1					
ANR	2367440	IfStatement	if ( connect_state . host )		2367423	6					
ANR	2367441	Condition	connect_state . host	157:6:4321:4338	2367423	0	True				
ANR	2367442	MemberAccess	connect_state . host		2367423	0					
ANR	2367443	Identifier	connect_state		2367423	0					
ANR	2367444	Identifier	host		2367423	1					
ANR	2367445	ExpressionStatement	free ( connect_state . host )	157:27:4342:4366	2367423	1	True				
ANR	2367446	CallExpression	free ( connect_state . host )		2367423	0					
ANR	2367447	Callee	free		2367423	0					
ANR	2367448	Identifier	free		2367423	0					
ANR	2367449	ArgumentList	connect_state . host		2367423	1					
ANR	2367450	Argument	connect_state . host		2367423	0					
ANR	2367451	MemberAccess	connect_state . host		2367423	0					
ANR	2367452	Identifier	connect_state		2367423	0					
ANR	2367453	Identifier	host		2367423	1					
ANR	2367454	IfStatement	if ( connect_state . connect_failure_reason )		2367423	7					
ANR	2367455	Condition	connect_state . connect_failure_reason	158:6:4374:4409	2367423	0	True				
ANR	2367456	MemberAccess	connect_state . connect_failure_reason		2367423	0					
ANR	2367457	Identifier	connect_state		2367423	0					
ANR	2367458	Identifier	connect_failure_reason		2367423	1					
ANR	2367459	CompoundStatement		8:44:171:171	2367423	1					
ANR	2367460	ExpressionStatement	free ( connect_state . connect_failure_reason )	159:2:4416:4458	2367423	0	True				
ANR	2367461	CallExpression	free ( connect_state . connect_failure_reason )		2367423	0					
ANR	2367462	Callee	free		2367423	0					
ANR	2367463	Identifier	free		2367423	0					
ANR	2367464	ArgumentList	connect_state . connect_failure_reason		2367423	1					
ANR	2367465	Argument	connect_state . connect_failure_reason		2367423	0					
ANR	2367466	MemberAccess	connect_state . connect_failure_reason		2367423	0					
ANR	2367467	Identifier	connect_state		2367423	0					
ANR	2367468	Identifier	connect_failure_reason		2367423	1					
ANR	2367469	IfStatement	if ( _fqu )		2367423	8					
ANR	2367470	Condition	_fqu	161:5:4468:4471	2367423	0	True				
ANR	2367471	Identifier	_fqu		2367423	0					
ANR	2367472	CompoundStatement		11:11:233:233	2367423	1					
ANR	2367473	ExpressionStatement	free ( _fqu )	162:2:4478:4488	2367423	0	True				
ANR	2367474	CallExpression	free ( _fqu )		2367423	0					
ANR	2367475	Callee	free		2367423	0					
ANR	2367476	Identifier	free		2367423	0					
ANR	2367477	ArgumentList	_fqu		2367423	1					
ANR	2367478	Argument	_fqu		2367423	0					
ANR	2367479	Identifier	_fqu		2367423	0					
ANR	2367480	ExpressionStatement	_fqu = NULL	163:2:4492:4503	2367423	1	True				
ANR	2367481	AssignmentExpression	_fqu = NULL		2367423	0		=			
ANR	2367482	Identifier	_fqu		2367423	0					
ANR	2367483	Identifier	NULL		2367423	1					
ANR	2367484	IfStatement	if ( _fqu_user_part )		2367423	9					
ANR	2367485	Condition	_fqu_user_part	165:5:4513:4526	2367423	0	True				
ANR	2367486	Identifier	_fqu_user_part		2367423	0					
ANR	2367487	CompoundStatement		15:21:288:288	2367423	1					
ANR	2367488	ExpressionStatement	free ( _fqu_user_part )	166:2:4533:4553	2367423	0	True				
ANR	2367489	CallExpression	free ( _fqu_user_part )		2367423	0					
ANR	2367490	Callee	free		2367423	0					
ANR	2367491	Identifier	free		2367423	0					
ANR	2367492	ArgumentList	_fqu_user_part		2367423	1					
ANR	2367493	Argument	_fqu_user_part		2367423	0					
ANR	2367494	Identifier	_fqu_user_part		2367423	0					
ANR	2367495	ExpressionStatement	_fqu_user_part = NULL	167:2:4557:4578	2367423	1	True				
ANR	2367496	AssignmentExpression	_fqu_user_part = NULL		2367423	0		=			
ANR	2367497	Identifier	_fqu_user_part		2367423	0					
ANR	2367498	Identifier	NULL		2367423	1					
ANR	2367499	IfStatement	if ( _fqu_domain_part )		2367423	10					
ANR	2367500	Condition	_fqu_domain_part	169:5:4588:4603	2367423	0	True				
ANR	2367501	Identifier	_fqu_domain_part		2367423	0					
ANR	2367502	CompoundStatement		19:23:365:365	2367423	1					
ANR	2367503	ExpressionStatement	free ( _fqu_domain_part )	170:2:4610:4632	2367423	0	True				
ANR	2367504	CallExpression	free ( _fqu_domain_part )		2367423	0					
ANR	2367505	Callee	free		2367423	0					
ANR	2367506	Identifier	free		2367423	0					
ANR	2367507	ArgumentList	_fqu_domain_part		2367423	1					
ANR	2367508	Argument	_fqu_domain_part		2367423	0					
ANR	2367509	Identifier	_fqu_domain_part		2367423	0					
ANR	2367510	ExpressionStatement	_fqu_domain_part = NULL	171:2:4636:4659	2367423	1	True				
ANR	2367511	AssignmentExpression	_fqu_domain_part = NULL		2367423	0		=			
ANR	2367512	Identifier	_fqu_domain_part		2367423	0					
ANR	2367513	Identifier	NULL		2367423	1					
ANR	2367514	ExpressionStatement	free ( m_connect_addr )	173:1:4665:4687	2367423	11	True				
ANR	2367515	CallExpression	free ( m_connect_addr )		2367423	0					
ANR	2367516	Callee	free		2367423	0					
ANR	2367517	Identifier	free		2367423	0					
ANR	2367518	ArgumentList	m_connect_addr		2367423	1					
ANR	2367519	Argument	m_connect_addr		2367423	0					
ANR	2367520	Identifier	m_connect_addr		2367423	0					
ANR	2367521	ExpressionStatement	m_connect_addr = NULL	174:1:4690:4711	2367423	12	True				
ANR	2367522	AssignmentExpression	m_connect_addr = NULL		2367423	0		=			
ANR	2367523	Identifier	m_connect_addr		2367423	0					
ANR	2367524	Identifier	NULL		2367423	1					
ANR	2367525	Identifier	Sock :: ~Sock		2367423	1					
ANR	2367526	ParameterList			2367423	2					
ANR	2367527	CFGEntryNode	ENTRY		2367423		True				
ANR	2367528	CFGExitNode	EXIT		2367423		True				
ANR	2367529	Symbol	crypto_		2367423						
ANR	2367530	Symbol	mdKey_		2367423						
ANR	2367531	Symbol	NULL		2367423						
ANR	2367532	Symbol	connect_state . host		2367423						
ANR	2367533	Symbol	m_connect_addr		2367423						
ANR	2367534	Symbol	_fqu		2367423						
ANR	2367535	Symbol	connect_state . connect_failure_reason		2367423						
ANR	2367536	Symbol	_fqu_domain_part		2367423						
ANR	2367537	Symbol	_fqu_user_part		2367423						
ANR	2367538	Symbol	connect_state		2367423						
ANR	2367539	DeclStmt									
ANR	2367540	Decl							HINSTANCE	HINSTANCE	_condor_hSecDll
ANR	2367541	DeclStmt									
ANR	2367542	Decl							bool	bool	_condor_SockInitializerCalled
ANR	2367543	Function	SockInitializer :: init	187:0:5015:5073							
ANR	2367544	FunctionDef	SockInitializer :: init ()		2367543	0					
ANR	2367545	CompoundStatement		188:0:5045:5073	2367543	0					
ANR	2367546	ExpressionStatement	called_from_init = true	189:1:5048:5071	2367543	0	True				
ANR	2367547	AssignmentExpression	called_from_init = true		2367543	0		=			
ANR	2367548	Identifier	called_from_init		2367543	0					
ANR	2367549	Identifier	true		2367543	1					
ANR	2367550	ReturnType	void		2367543	1					
ANR	2367551	Identifier	SockInitializer :: init		2367543	2					
ANR	2367552	ParameterList			2367543	3					
ANR	2367553	CFGEntryNode	ENTRY		2367543		True				
ANR	2367554	CFGExitNode	EXIT		2367543		True				
ANR	2367555	Symbol	true		2367543						
ANR	2367556	Symbol	called_from_init		2367543						
ANR	2367557	Function	SockInitializer :: SockInitializer	192:0:5076:5901							
ANR	2367558	FunctionDef	SockInitializer :: SockInitializer ()		2367557	0					
ANR	2367559	CompoundStatement		193:0:5112:5901	2367557	0					
ANR	2367560	IdentifierDeclStatement	"WORD wVersionRequested = MAKEWORD ( 2 , 0 ) ;"	194:1:5115:5156	2367557	0	True				
ANR	2367561	IdentifierDecl	"wVersionRequested = MAKEWORD ( 2 , 0 )"		2367557	0					
ANR	2367562	IdentifierDeclType	WORD		2367557	0					
ANR	2367563	Identifier	wVersionRequested		2367557	1					
ANR	2367564	AssignmentExpression	"wVersionRequested = MAKEWORD ( 2 , 0 )"		2367557	2		=			
ANR	2367565	Identifier	wVersionRequested		2367557	0					
ANR	2367566	CallExpression	"MAKEWORD ( 2 , 0 )"		2367557	1					
ANR	2367567	Callee	MAKEWORD		2367557	0					
ANR	2367568	Identifier	MAKEWORD		2367557	0					
ANR	2367569	ArgumentList	2		2367557	1					
ANR	2367570	Argument	2		2367557	0					
ANR	2367571	PrimaryExpression	2		2367557	0					
ANR	2367572	Argument	0		2367557	1					
ANR	2367573	PrimaryExpression	0		2367557	0					
ANR	2367574	IdentifierDeclStatement	WSADATA wsaData ;	195:1:5159:5174	2367557	1	True				
ANR	2367575	IdentifierDecl	wsaData		2367557	0					
ANR	2367576	IdentifierDeclType	WSADATA		2367557	0					
ANR	2367577	Identifier	wsaData		2367557	1					
ANR	2367578	IdentifierDeclStatement	int err ;	196:1:5177:5184	2367557	2	True				
ANR	2367579	IdentifierDecl	err		2367557	0					
ANR	2367580	IdentifierDeclType	int		2367557	0					
ANR	2367581	Identifier	err		2367557	1					
ANR	2367582	ExpressionStatement	called_from_init = false	198:1:5188:5212	2367557	3	True				
ANR	2367583	AssignmentExpression	called_from_init = false		2367557	0		=			
ANR	2367584	Identifier	called_from_init		2367557	0					
ANR	2367585	Identifier	false		2367557	1					
ANR	2367586	IfStatement	if ( _condor_SockInitializerCalled )		2367557	4					
ANR	2367587	Condition	_condor_SockInitializerCalled	200:6:5255:5283	2367557	0	True				
ANR	2367588	Identifier	_condor_SockInitializerCalled		2367557	0					
ANR	2367589	CompoundStatement		8:38:174:174	2367557	1					
ANR	2367590	ReturnStatement	return ;	202:2:5320:5326	2367557	0	True				
ANR	2367591	ExpressionStatement	"err = WSAStartup ( wVersionRequested , & wsaData )"	205:1:5333:5380	2367557	5	True				
ANR	2367592	AssignmentExpression	"err = WSAStartup ( wVersionRequested , & wsaData )"		2367557	0		=			
ANR	2367593	Identifier	err		2367557	0					
ANR	2367594	CallExpression	"WSAStartup ( wVersionRequested , & wsaData )"		2367557	1					
ANR	2367595	Callee	WSAStartup		2367557	0					
ANR	2367596	Identifier	WSAStartup		2367557	0					
ANR	2367597	ArgumentList	wVersionRequested		2367557	1					
ANR	2367598	Argument	wVersionRequested		2367557	0					
ANR	2367599	Identifier	wVersionRequested		2367557	0					
ANR	2367600	Argument	& wsaData		2367557	1					
ANR	2367601	UnaryOperationExpression	& wsaData		2367557	0					
ANR	2367602	UnaryOperator	&		2367557	0					
ANR	2367603	Identifier	wsaData		2367557	1					
ANR	2367604	IfStatement	if ( err < 0 )		2367557	6					
ANR	2367605	Condition	err < 0	206:6:5388:5394	2367557	0	True				
ANR	2367606	RelationalExpression	err < 0		2367557	0		<			
ANR	2367607	Identifier	err		2367557	0					
ANR	2367608	PrimaryExpression	0		2367557	1					
ANR	2367609	CompoundStatement		14:16:285:285	2367557	1					
ANR	2367610	ExpressionStatement	"fprintf ( stderr , ""Can't find usable WinSock DLL!\\n"" )"	207:2:5402:5455	2367557	0	True				
ANR	2367611	CallExpression	"fprintf ( stderr , ""Can't find usable WinSock DLL!\\n"" )"		2367557	0					
ANR	2367612	Callee	fprintf		2367557	0					
ANR	2367613	Identifier	fprintf		2367557	0					
ANR	2367614	ArgumentList	stderr		2367557	1					
ANR	2367615	Argument	stderr		2367557	0					
ANR	2367616	Identifier	stderr		2367557	0					
ANR	2367617	Argument	"""Can't find usable WinSock DLL!\\n"""		2367557	1					
ANR	2367618	PrimaryExpression	"""Can't find usable WinSock DLL!\\n"""		2367557	0					
ANR	2367619	ExpressionStatement	exit ( 1 )	208:2:5460:5467	2367557	1	True				
ANR	2367620	CallExpression	exit ( 1 )		2367557	0					
ANR	2367621	Callee	exit		2367557	0					
ANR	2367622	Identifier	exit		2367557	0					
ANR	2367623	ArgumentList	1		2367557	1					
ANR	2367624	Argument	1		2367557	0					
ANR	2367625	PrimaryExpression	1		2367557	0					
ANR	2367626	IfStatement	if ( LOBYTE ( wsaData . wVersion ) != 2 || HIBYTE ( wsaData . wVersion ) != 0 )		2367557	7					
ANR	2367627	Condition	LOBYTE ( wsaData . wVersion ) != 2 || HIBYTE ( wsaData . wVersion ) != 0	211:6:5479:5544	2367557	0	True				
ANR	2367628	OrExpression	LOBYTE ( wsaData . wVersion ) != 2 || HIBYTE ( wsaData . wVersion ) != 0		2367557	0		||			
ANR	2367629	EqualityExpression	LOBYTE ( wsaData . wVersion ) != 2		2367557	0		!=			
ANR	2367630	CallExpression	LOBYTE ( wsaData . wVersion )		2367557	0					
ANR	2367631	Callee	LOBYTE		2367557	0					
ANR	2367632	Identifier	LOBYTE		2367557	0					
ANR	2367633	ArgumentList	wsaData . wVersion		2367557	1					
ANR	2367634	Argument	wsaData . wVersion		2367557	0					
ANR	2367635	MemberAccess	wsaData . wVersion		2367557	0					
ANR	2367636	Identifier	wsaData		2367557	0					
ANR	2367637	Identifier	wVersion		2367557	1					
ANR	2367638	PrimaryExpression	2		2367557	1					
ANR	2367639	EqualityExpression	HIBYTE ( wsaData . wVersion ) != 0		2367557	1		!=			
ANR	2367640	CallExpression	HIBYTE ( wsaData . wVersion )		2367557	0					
ANR	2367641	Callee	HIBYTE		2367557	0					
ANR	2367642	Identifier	HIBYTE		2367557	0					
ANR	2367643	ArgumentList	wsaData . wVersion		2367557	1					
ANR	2367644	Argument	wsaData . wVersion		2367557	0					
ANR	2367645	MemberAccess	wsaData . wVersion		2367557	0					
ANR	2367646	Identifier	wsaData		2367557	0					
ANR	2367647	Identifier	wVersion		2367557	1					
ANR	2367648	PrimaryExpression	0		2367557	1					
ANR	2367649	CompoundStatement		19:75:435:435	2367557	1					
ANR	2367650	ExpressionStatement	"fprintf ( stderr , ""Warning: using WinSock version %d.%d, requested 1.1\\n"" , LOBYTE ( wsaData . wVersion ) , HIBYTE ( wsaData . wVersion ) )"	212:2:5552:5685	2367557	0	True				
ANR	2367651	CallExpression	"fprintf ( stderr , ""Warning: using WinSock version %d.%d, requested 1.1\\n"" , LOBYTE ( wsaData . wVersion ) , HIBYTE ( wsaData . wVersion ) )"		2367557	0					
ANR	2367652	Callee	fprintf		2367557	0					
ANR	2367653	Identifier	fprintf		2367557	0					
ANR	2367654	ArgumentList	stderr		2367557	1					
ANR	2367655	Argument	stderr		2367557	0					
ANR	2367656	Identifier	stderr		2367557	0					
ANR	2367657	Argument	"""Warning: using WinSock version %d.%d, requested 1.1\\n"""		2367557	1					
ANR	2367658	PrimaryExpression	"""Warning: using WinSock version %d.%d, requested 1.1\\n"""		2367557	0					
ANR	2367659	Argument	LOBYTE ( wsaData . wVersion )		2367557	2					
ANR	2367660	CallExpression	LOBYTE ( wsaData . wVersion )		2367557	0					
ANR	2367661	Callee	LOBYTE		2367557	0					
ANR	2367662	Identifier	LOBYTE		2367557	0					
ANR	2367663	ArgumentList	wsaData . wVersion		2367557	1					
ANR	2367664	Argument	wsaData . wVersion		2367557	0					
ANR	2367665	MemberAccess	wsaData . wVersion		2367557	0					
ANR	2367666	Identifier	wsaData		2367557	0					
ANR	2367667	Identifier	wVersion		2367557	1					
ANR	2367668	Argument	HIBYTE ( wsaData . wVersion )		2367557	3					
ANR	2367669	CallExpression	HIBYTE ( wsaData . wVersion )		2367557	0					
ANR	2367670	Callee	HIBYTE		2367557	0					
ANR	2367671	Identifier	HIBYTE		2367557	0					
ANR	2367672	ArgumentList	wsaData . wVersion		2367557	1					
ANR	2367673	Argument	wsaData . wVersion		2367557	0					
ANR	2367674	MemberAccess	wsaData . wVersion		2367557	0					
ANR	2367675	Identifier	wsaData		2367557	0					
ANR	2367676	Identifier	wVersion		2367557	1					
ANR	2367677	IfStatement	"if ( ( _condor_hSecDll = LoadLibrary ( ""security.dll"" ) ) == NULL )"		2367557	8					
ANR	2367678	Condition	"( _condor_hSecDll = LoadLibrary ( ""security.dll"" ) ) == NULL"	217:6:5731:5787	2367557	0	True				
ANR	2367679	EqualityExpression	"( _condor_hSecDll = LoadLibrary ( ""security.dll"" ) ) == NULL"		2367557	0		==			
ANR	2367680	AssignmentExpression	"_condor_hSecDll = LoadLibrary ( ""security.dll"" )"		2367557	0		=			
ANR	2367681	Identifier	_condor_hSecDll		2367557	0					
ANR	2367682	CallExpression	"LoadLibrary ( ""security.dll"" )"		2367557	1					
ANR	2367683	Callee	LoadLibrary		2367557	0					
ANR	2367684	Identifier	LoadLibrary		2367557	0					
ANR	2367685	ArgumentList	"""security.dll"""		2367557	1					
ANR	2367686	Argument	"""security.dll"""		2367557	0					
ANR	2367687	PrimaryExpression	"""security.dll"""		2367557	0					
ANR	2367688	Identifier	NULL		2367557	1					
ANR	2367689	CompoundStatement		25:66:678:678	2367557	1					
ANR	2367690	ExpressionStatement	"fprintf ( stderr , ""Can't find SECURITY.DLL!\\n"" )"	218:2:5795:5839	2367557	0	True				
ANR	2367691	CallExpression	"fprintf ( stderr , ""Can't find SECURITY.DLL!\\n"" )"		2367557	0					
ANR	2367692	Callee	fprintf		2367557	0					
ANR	2367693	Identifier	fprintf		2367557	0					
ANR	2367694	ArgumentList	stderr		2367557	1					
ANR	2367695	Argument	stderr		2367557	0					
ANR	2367696	Identifier	stderr		2367557	0					
ANR	2367697	Argument	"""Can't find SECURITY.DLL!\\n"""		2367557	1					
ANR	2367698	PrimaryExpression	"""Can't find SECURITY.DLL!\\n"""		2367557	0					
ANR	2367699	ExpressionStatement	exit ( 1 )	219:2:5843:5850	2367557	1	True				
ANR	2367700	CallExpression	exit ( 1 )		2367557	0					
ANR	2367701	Callee	exit		2367557	0					
ANR	2367702	Identifier	exit		2367557	0					
ANR	2367703	ArgumentList	1		2367557	1					
ANR	2367704	Argument	1		2367557	0					
ANR	2367705	PrimaryExpression	1		2367557	0					
ANR	2367706	ExpressionStatement	_condor_SockInitializerCalled = true	222:1:5863:5899	2367557	9	True				
ANR	2367707	AssignmentExpression	_condor_SockInitializerCalled = true		2367557	0		=			
ANR	2367708	Identifier	_condor_SockInitializerCalled		2367557	0					
ANR	2367709	Identifier	true		2367557	1					
ANR	2367710	Identifier	SockInitializer :: SockInitializer		2367557	1					
ANR	2367711	ParameterList			2367557	2					
ANR	2367712	CFGEntryNode	ENTRY		2367557		True				
ANR	2367713	CFGExitNode	EXIT		2367557		True				
ANR	2367714	Symbol	_condor_SockInitializerCalled		2367557						
ANR	2367715	Symbol	LOBYTE		2367557						
ANR	2367716	Symbol	NULL		2367557						
ANR	2367717	Symbol	err		2367557						
ANR	2367718	Symbol	wVersionRequested		2367557						
ANR	2367719	Symbol	false		2367557						
ANR	2367720	Symbol	HIBYTE		2367557						
ANR	2367721	Symbol	stderr		2367557						
ANR	2367722	Symbol	WSAStartup		2367557						
ANR	2367723	Symbol	wsaData . wVersion		2367557						
ANR	2367724	Symbol	LoadLibrary		2367557						
ANR	2367725	Symbol	_condor_hSecDll		2367557						
ANR	2367726	Symbol	wsaData		2367557						
ANR	2367727	Symbol	MAKEWORD		2367557						
ANR	2367728	Symbol	called_from_init		2367557						
ANR	2367729	Symbol	true		2367557						
ANR	2367730	Symbol	& wsaData		2367557						
ANR	2367731	Function	SockInitializer :: ~SockInitializer	225:0:5937:6229							
ANR	2367732	FunctionDef	SockInitializer :: ~SockInitializer ()		2367731	0					
ANR	2367733	CompoundStatement		226:0:5974:6229	2367731	0					
ANR	2367734	IfStatement	if ( called_from_init )		2367731	0					
ANR	2367735	Condition	called_from_init	227:6:5982:5997	2367731	0	True				
ANR	2367736	Identifier	called_from_init		2367731	0					
ANR	2367737	CompoundStatement		2:25:26:26	2367731	1					
ANR	2367738	ReturnStatement	return ;	228:2:6005:6011	2367731	0	True				
ANR	2367739	IfStatement	if ( WSACleanup ( ) < 0 )		2367731	1					
ANR	2367740	Condition	WSACleanup ( ) < 0	230:5:6021:6036	2367731	0	True				
ANR	2367741	RelationalExpression	WSACleanup ( ) < 0		2367731	0		<			
ANR	2367742	CallExpression	WSACleanup ( )		2367731	0					
ANR	2367743	Callee	WSACleanup		2367731	0					
ANR	2367744	Identifier	WSACleanup		2367731	0					
ANR	2367745	ArgumentList			2367731	1					
ANR	2367746	PrimaryExpression	0		2367731	1					
ANR	2367747	CompoundStatement		5:23:64:64	2367731	1					
ANR	2367748	ExpressionStatement	"fprintf ( stderr , ""WSACleanup() failed, errno = %d\\n"" , WSAGetLastError ( ) )"	231:2:6043:6119	2367731	0	True				
ANR	2367749	CallExpression	"fprintf ( stderr , ""WSACleanup() failed, errno = %d\\n"" , WSAGetLastError ( ) )"		2367731	0					
ANR	2367750	Callee	fprintf		2367731	0					
ANR	2367751	Identifier	fprintf		2367731	0					
ANR	2367752	ArgumentList	stderr		2367731	1					
ANR	2367753	Argument	stderr		2367731	0					
ANR	2367754	Identifier	stderr		2367731	0					
ANR	2367755	Argument	"""WSACleanup() failed, errno = %d\\n"""		2367731	1					
ANR	2367756	PrimaryExpression	"""WSACleanup() failed, errno = %d\\n"""		2367731	0					
ANR	2367757	Argument	WSAGetLastError ( )		2367731	2					
ANR	2367758	CallExpression	WSAGetLastError ( )		2367731	0					
ANR	2367759	Callee	WSAGetLastError		2367731	0					
ANR	2367760	Identifier	WSAGetLastError		2367731	0					
ANR	2367761	ArgumentList			2367731	1					
ANR	2367762	IfStatement	if ( _condor_hSecDll )		2367731	2					
ANR	2367763	Condition	_condor_hSecDll	235:6:6164:6178	2367731	0	True				
ANR	2367764	Identifier	_condor_hSecDll		2367731	0					
ANR	2367765	CompoundStatement		10:24:207:207	2367731	1					
ANR	2367766	ExpressionStatement	FreeLibrary ( _condor_hSecDll )	236:2:6186:6214	2367731	0	True				
ANR	2367767	CallExpression	FreeLibrary ( _condor_hSecDll )		2367731	0					
ANR	2367768	Callee	FreeLibrary		2367731	0					
ANR	2367769	Identifier	FreeLibrary		2367731	0					
ANR	2367770	ArgumentList	_condor_hSecDll		2367731	1					
ANR	2367771	Argument	_condor_hSecDll		2367731	0					
ANR	2367772	Identifier	_condor_hSecDll		2367731	0					
ANR	2367773	Identifier	SockInitializer :: ~SockInitializer		2367731	1					
ANR	2367774	ParameterList			2367731	2					
ANR	2367775	CFGEntryNode	ENTRY		2367731		True				
ANR	2367776	CFGExitNode	EXIT		2367731		True				
ANR	2367777	Symbol	WSACleanup		2367731						
ANR	2367778	Symbol	_condor_hSecDll		2367731						
ANR	2367779	Symbol	called_from_init		2367731						
ANR	2367780	Symbol	WSAGetLastError		2367731						
ANR	2367781	Symbol	stderr		2367731						
ANR	2367782	DeclStmt									
ANR	2367783	Decl							SockInitializer	SockInitializer	_SockInitializer
ANR	2367784	Function	Sock :: getportbyserv	250:0:6373:6694							
ANR	2367785	FunctionDef	Sock :: getportbyserv (char * s)		2367784	0					
ANR	2367786	CompoundStatement		253:0:6410:6694	2367784	0					
ANR	2367787	IdentifierDeclStatement	servent * sp ;	254:1:6413:6425	2367784	0	True				
ANR	2367788	IdentifierDecl	* sp		2367784	0					
ANR	2367789	IdentifierDeclType	servent *		2367784	0					
ANR	2367790	Identifier	sp		2367784	1					
ANR	2367791	IdentifierDeclStatement	const char * my_prot = 0 ;	255:1:6428:6449	2367784	1	True				
ANR	2367792	IdentifierDecl	* my_prot = 0		2367784	0					
ANR	2367793	IdentifierDeclType	const char *		2367784	0					
ANR	2367794	Identifier	my_prot		2367784	1					
ANR	2367795	AssignmentExpression	* my_prot = 0		2367784	2		=			
ANR	2367796	Identifier	my_prot		2367784	0					
ANR	2367797	PrimaryExpression	0		2367784	1					
ANR	2367798	IfStatement	if ( ! s )		2367784	2					
ANR	2367799	Condition	! s	257:5:6457:6458	2367784	0	True				
ANR	2367800	UnaryOperationExpression	! s		2367784	0					
ANR	2367801	UnaryOperator	!		2367784	0					
ANR	2367802	Identifier	s		2367784	1					
ANR	2367803	ReturnStatement	return - 1 ;	257:9:6461:6470	2367784	1	True				
ANR	2367804	UnaryOperationExpression	- 1		2367784	0					
ANR	2367805	UnaryOperator	-		2367784	0					
ANR	2367806	PrimaryExpression	1		2367784	1					
ANR	2367807	SwitchStatement	switch ( type ( ) )		2367784	3					
ANR	2367808	Condition	type ( )	259:8:6481:6486	2367784	0	True				
ANR	2367809	CallExpression	type ( )		2367784	0					
ANR	2367810	Callee	type		2367784	0					
ANR	2367811	Identifier	type		2367784	0					
ANR	2367812	ArgumentList			2367784	1					
ANR	2367813	CompoundStatement		7:15:77:77	2367784	1					
ANR	2367814	Label	case safe_sock :	260:2:6492:6506	2367784	0	True				
ANR	2367815	Identifier	safe_sock		2367784	0					
ANR	2367816	ExpressionStatement	"my_prot = ""udp"""	261:3:6511:6526	2367784	1	True				
ANR	2367817	AssignmentExpression	"my_prot = ""udp"""		2367784	0		=			
ANR	2367818	Identifier	my_prot		2367784	0					
ANR	2367819	PrimaryExpression	"""udp"""		2367784	1					
ANR	2367820	BreakStatement	break ;	262:3:6531:6536	2367784	2	True				
ANR	2367821	Label	case reli_sock :	263:2:6540:6554	2367784	3	True				
ANR	2367822	Identifier	reli_sock		2367784	0					
ANR	2367823	ExpressionStatement	"my_prot = ""tcp"""	264:3:6559:6574	2367784	4	True				
ANR	2367824	AssignmentExpression	"my_prot = ""tcp"""		2367784	0		=			
ANR	2367825	Identifier	my_prot		2367784	0					
ANR	2367826	PrimaryExpression	"""tcp"""		2367784	1					
ANR	2367827	BreakStatement	break ;	265:3:6579:6584	2367784	5	True				
ANR	2367828	Label	default :	266:2:6588:6595	2367784	6	True				
ANR	2367829	Identifier	default		2367784	0					
ANR	2367830	ExpressionStatement	ASSERT ( 0 )	267:3:6600:6609	2367784	7	True				
ANR	2367831	CallExpression	ASSERT ( 0 )		2367784	0					
ANR	2367832	Callee	ASSERT		2367784	0					
ANR	2367833	Identifier	ASSERT		2367784	0					
ANR	2367834	ArgumentList	0		2367784	1					
ANR	2367835	Argument	0		2367784	0					
ANR	2367836	PrimaryExpression	0		2367784	0					
ANR	2367837	IfStatement	"if ( ! ( sp = getservbyname ( s , my_prot ) ) )"		2367784	4					
ANR	2367838	Condition	"! ( sp = getservbyname ( s , my_prot ) )"	270:5:6620:6652	2367784	0	True				
ANR	2367839	UnaryOperationExpression	"! ( sp = getservbyname ( s , my_prot ) )"		2367784	0					
ANR	2367840	UnaryOperator	!		2367784	0					
ANR	2367841	AssignmentExpression	"sp = getservbyname ( s , my_prot )"		2367784	1		=			
ANR	2367842	Identifier	sp		2367784	0					
ANR	2367843	CallExpression	"getservbyname ( s , my_prot )"		2367784	1					
ANR	2367844	Callee	getservbyname		2367784	0					
ANR	2367845	Identifier	getservbyname		2367784	0					
ANR	2367846	ArgumentList	s		2367784	1					
ANR	2367847	Argument	s		2367784	0					
ANR	2367848	Identifier	s		2367784	0					
ANR	2367849	Argument	my_prot		2367784	1					
ANR	2367850	Identifier	my_prot		2367784	0					
ANR	2367851	ReturnStatement	return - 1 ;	270:40:6655:6664	2367784	1	True				
ANR	2367852	UnaryOperationExpression	- 1		2367784	0					
ANR	2367853	UnaryOperator	-		2367784	0					
ANR	2367854	PrimaryExpression	1		2367784	1					
ANR	2367855	ReturnStatement	return ntohs ( sp -> s_port ) ;	272:1:6668:6692	2367784	5	True				
ANR	2367856	CallExpression	ntohs ( sp -> s_port )		2367784	0					
ANR	2367857	Callee	ntohs		2367784	0					
ANR	2367858	Identifier	ntohs		2367784	0					
ANR	2367859	ArgumentList	sp -> s_port		2367784	1					
ANR	2367860	Argument	sp -> s_port		2367784	0					
ANR	2367861	PtrMemberAccess	sp -> s_port		2367784	0					
ANR	2367862	Identifier	sp		2367784	0					
ANR	2367863	Identifier	s_port		2367784	1					
ANR	2367864	ReturnType	int		2367784	1					
ANR	2367865	Identifier	Sock :: getportbyserv		2367784	2					
ANR	2367866	ParameterList	char * s		2367784	3					
ANR	2367867	Parameter	char * s	251:1:6399:6405	2367784	0	True				
ANR	2367868	ParameterType	char *		2367784	0					
ANR	2367869	Identifier	s		2367784	1					
ANR	2367870	CFGEntryNode	ENTRY		2367784		True				
ANR	2367871	CFGExitNode	EXIT		2367784		True				
ANR	2367872	Symbol	ntohs		2367784						
ANR	2367873	Symbol	* sp		2367784						
ANR	2367874	Symbol	s		2367784						
ANR	2367875	Symbol	getservbyname		2367784						
ANR	2367876	Symbol	sp -> s_port		2367784						
ANR	2367877	Symbol	my_prot		2367784						
ANR	2367878	Symbol	type		2367784						
ANR	2367879	Symbol	sp		2367784						
ANR	2367880	Function	Sock :: assign	276:0:6742:7281							
ANR	2367881	FunctionDef	Sock :: assign (LPWSAPROTOCOL_INFO pProtoInfo)		2367880	0					
ANR	2367882	CompoundStatement		279:0:6794:7281	2367880	0					
ANR	2367883	IfStatement	if ( _state != sock_virgin )		2367880	0					
ANR	2367884	Condition	_state != sock_virgin	280:5:6801:6821	2367880	0	True				
ANR	2367885	EqualityExpression	_state != sock_virgin		2367880	0		!=			
ANR	2367886	Identifier	_state		2367880	0					
ANR	2367887	Identifier	sock_virgin		2367880	1					
ANR	2367888	ReturnStatement	return FALSE ;	280:28:6824:6836	2367880	1	True				
ANR	2367889	Identifier	FALSE		2367880	0					
ANR	2367890	SwitchStatement	switch ( type ( ) )		2367880	1					
ANR	2367891	Condition	type ( )	284:8:6938:6943	2367880	0	True				
ANR	2367892	CallExpression	type ( )		2367880	0					
ANR	2367893	Callee	type		2367880	0					
ANR	2367894	Identifier	type		2367880	0					
ANR	2367895	ArgumentList			2367880	1					
ANR	2367896	CompoundStatement		6:15:150:150	2367880	1					
ANR	2367897	Label	case safe_sock :	285:2:6949:6963	2367880	0	True				
ANR	2367898	Identifier	safe_sock		2367880	0					
ANR	2367899	ExpressionStatement	ASSERT ( pProtoInfo -> iSocketType == SOCK_DGRAM )	286:3:6968:7015	2367880	1	True				
ANR	2367900	CallExpression	ASSERT ( pProtoInfo -> iSocketType == SOCK_DGRAM )		2367880	0					
ANR	2367901	Callee	ASSERT		2367880	0					
ANR	2367902	Identifier	ASSERT		2367880	0					
ANR	2367903	ArgumentList	pProtoInfo -> iSocketType == SOCK_DGRAM		2367880	1					
ANR	2367904	Argument	pProtoInfo -> iSocketType == SOCK_DGRAM		2367880	0					
ANR	2367905	EqualityExpression	pProtoInfo -> iSocketType == SOCK_DGRAM		2367880	0		==			
ANR	2367906	PtrMemberAccess	pProtoInfo -> iSocketType		2367880	0					
ANR	2367907	Identifier	pProtoInfo		2367880	0					
ANR	2367908	Identifier	iSocketType		2367880	1					
ANR	2367909	Identifier	SOCK_DGRAM		2367880	1					
ANR	2367910	BreakStatement	break ;	287:3:7020:7025	2367880	2	True				
ANR	2367911	Label	case reli_sock :	288:2:7029:7043	2367880	3	True				
ANR	2367912	Identifier	reli_sock		2367880	0					
ANR	2367913	ExpressionStatement	ASSERT ( pProtoInfo -> iSocketType == SOCK_STREAM )	289:3:7048:7096	2367880	4	True				
ANR	2367914	CallExpression	ASSERT ( pProtoInfo -> iSocketType == SOCK_STREAM )		2367880	0					
ANR	2367915	Callee	ASSERT		2367880	0					
ANR	2367916	Identifier	ASSERT		2367880	0					
ANR	2367917	ArgumentList	pProtoInfo -> iSocketType == SOCK_STREAM		2367880	1					
ANR	2367918	Argument	pProtoInfo -> iSocketType == SOCK_STREAM		2367880	0					
ANR	2367919	EqualityExpression	pProtoInfo -> iSocketType == SOCK_STREAM		2367880	0		==			
ANR	2367920	PtrMemberAccess	pProtoInfo -> iSocketType		2367880	0					
ANR	2367921	Identifier	pProtoInfo		2367880	0					
ANR	2367922	Identifier	iSocketType		2367880	1					
ANR	2367923	Identifier	SOCK_STREAM		2367880	1					
ANR	2367924	BreakStatement	break ;	290:3:7101:7106	2367880	5	True				
ANR	2367925	Label	default :	291:2:7110:7117	2367880	6	True				
ANR	2367926	Identifier	default		2367880	0					
ANR	2367927	ExpressionStatement	ASSERT ( 0 )	292:3:7122:7131	2367880	7	True				
ANR	2367928	CallExpression	ASSERT ( 0 )		2367880	0					
ANR	2367929	Callee	ASSERT		2367880	0					
ANR	2367930	Identifier	ASSERT		2367880	0					
ANR	2367931	ArgumentList	0		2367880	1					
ANR	2367932	Argument	0		2367880	0					
ANR	2367933	PrimaryExpression	0		2367880	0					
ANR	2367934	IdentifierDeclStatement	"int socket_fd = WSASocket ( FROM_PROTOCOL_INFO , FROM_PROTOCOL_INFO , FROM_PROTOCOL_INFO , pProtoInfo , 0 , 0 ) ;"	295:1:7138:7249	2367880	2	True				
ANR	2367935	IdentifierDecl	"socket_fd = WSASocket ( FROM_PROTOCOL_INFO , FROM_PROTOCOL_INFO , FROM_PROTOCOL_INFO , pProtoInfo , 0 , 0 )"		2367880	0					
ANR	2367936	IdentifierDeclType	int		2367880	0					
ANR	2367937	Identifier	socket_fd		2367880	1					
ANR	2367938	AssignmentExpression	"socket_fd = WSASocket ( FROM_PROTOCOL_INFO , FROM_PROTOCOL_INFO , FROM_PROTOCOL_INFO , pProtoInfo , 0 , 0 )"		2367880	2		=			
ANR	2367939	Identifier	socket_fd		2367880	0					
ANR	2367940	CallExpression	"WSASocket ( FROM_PROTOCOL_INFO , FROM_PROTOCOL_INFO , FROM_PROTOCOL_INFO , pProtoInfo , 0 , 0 )"		2367880	1					
ANR	2367941	Callee	WSASocket		2367880	0					
ANR	2367942	Identifier	WSASocket		2367880	0					
ANR	2367943	ArgumentList	FROM_PROTOCOL_INFO		2367880	1					
ANR	2367944	Argument	FROM_PROTOCOL_INFO		2367880	0					
ANR	2367945	Identifier	FROM_PROTOCOL_INFO		2367880	0					
ANR	2367946	Argument	FROM_PROTOCOL_INFO		2367880	1					
ANR	2367947	Identifier	FROM_PROTOCOL_INFO		2367880	0					
ANR	2367948	Argument	FROM_PROTOCOL_INFO		2367880	2					
ANR	2367949	Identifier	FROM_PROTOCOL_INFO		2367880	0					
ANR	2367950	Argument	pProtoInfo		2367880	3					
ANR	2367951	Identifier	pProtoInfo		2367880	0					
ANR	2367952	Argument	0		2367880	4					
ANR	2367953	PrimaryExpression	0		2367880	0					
ANR	2367954	Argument	0		2367880	5					
ANR	2367955	PrimaryExpression	0		2367880	0					
ANR	2367956	ReturnStatement	return assign ( socket_fd ) ;	298:1:7253:7279	2367880	3	True				
ANR	2367957	CallExpression	assign ( socket_fd )		2367880	0					
ANR	2367958	Callee	assign		2367880	0					
ANR	2367959	Identifier	assign		2367880	0					
ANR	2367960	ArgumentList	socket_fd		2367880	1					
ANR	2367961	Argument	socket_fd		2367880	0					
ANR	2367962	Identifier	socket_fd		2367880	0					
ANR	2367963	ReturnType	int		2367880	1					
ANR	2367964	Identifier	Sock :: assign		2367880	2					
ANR	2367965	ParameterList	LPWSAPROTOCOL_INFO pProtoInfo		2367880	3					
ANR	2367966	Parameter	LPWSAPROTOCOL_INFO pProtoInfo	277:1:6761:6789	2367880	0	True				
ANR	2367967	ParameterType	LPWSAPROTOCOL_INFO		2367880	0					
ANR	2367968	Identifier	pProtoInfo		2367880	1					
ANR	2367969	CFGEntryNode	ENTRY		2367880		True				
ANR	2367970	CFGExitNode	EXIT		2367880		True				
ANR	2367971	Symbol	pProtoInfo		2367880						
ANR	2367972	Symbol	FROM_PROTOCOL_INFO		2367880						
ANR	2367973	Symbol	type		2367880						
ANR	2367974	Symbol	SOCK_DGRAM		2367880						
ANR	2367975	Symbol	socket_fd		2367880						
ANR	2367976	Symbol	SOCK_STREAM		2367880						
ANR	2367977	Symbol	_state		2367880						
ANR	2367978	Symbol	pProtoInfo -> iSocketType		2367880						
ANR	2367979	Symbol	* pProtoInfo		2367880						
ANR	2367980	Symbol	sock_virgin		2367880						
ANR	2367981	Symbol	FALSE		2367880						
ANR	2367982	Symbol	WSASocket		2367880						
ANR	2367983	Symbol	assign		2367880						
ANR	2367984	Function	Sock :: set_inheritable	303:0:7304:8425							
ANR	2367985	FunctionDef	Sock :: set_inheritable (int flag)		2367984	0					
ANR	2367986	CompoundStatement		304:0:7342:8425	2367984	0					
ANR	2367987	IdentifierDeclStatement	SOCKET DuplicateSock ;	313:1:7751:7771	2367984	0	True				
ANR	2367988	IdentifierDecl	DuplicateSock		2367984	0					
ANR	2367989	IdentifierDeclType	SOCKET		2367984	0					
ANR	2367990	Identifier	DuplicateSock		2367984	1					
ANR	2367991	IfStatement	if ( ( flag != TRUE ) && ( flag != FALSE ) )		2367984	1					
ANR	2367992	Condition	( flag != TRUE ) && ( flag != FALSE )	315:6:7780:7812	2367984	0	True				
ANR	2367993	AndExpression	( flag != TRUE ) && ( flag != FALSE )		2367984	0		&&			
ANR	2367994	EqualityExpression	flag != TRUE		2367984	0		!=			
ANR	2367995	Identifier	flag		2367984	0					
ANR	2367996	Identifier	TRUE		2367984	1					
ANR	2367997	EqualityExpression	flag != FALSE		2367984	1		!=			
ANR	2367998	Identifier	flag		2367984	0					
ANR	2367999	Identifier	FALSE		2367984	1					
ANR	2368000	ReturnStatement	return FALSE ;	316:2:7818:7830	2367984	1	True				
ANR	2368001	Identifier	FALSE		2367984	0					
ANR	2368002	IfStatement	"if ( ! DuplicateHandle ( GetCurrentProcess ( ) , ( HANDLE ) _sock , GetCurrentProcess ( ) , ( HANDLE * ) & DuplicateSock , 0 , flag , DUPLICATE_SAME_ACCESS ) )"		2367984	2					
ANR	2368003	Condition	"! DuplicateHandle ( GetCurrentProcess ( ) , ( HANDLE ) _sock , GetCurrentProcess ( ) , ( HANDLE * ) & DuplicateSock , 0 , flag , DUPLICATE_SAME_ACCESS )"	318:5:7878:8075	2367984	0	True				
ANR	2368004	UnaryOperationExpression	"! DuplicateHandle ( GetCurrentProcess ( ) , ( HANDLE ) _sock , GetCurrentProcess ( ) , ( HANDLE * ) & DuplicateSock , 0 , flag , DUPLICATE_SAME_ACCESS )"		2367984	0					
ANR	2368005	UnaryOperator	!		2367984	0					
ANR	2368006	CallExpression	"DuplicateHandle ( GetCurrentProcess ( ) , ( HANDLE ) _sock , GetCurrentProcess ( ) , ( HANDLE * ) & DuplicateSock , 0 , flag , DUPLICATE_SAME_ACCESS )"		2367984	1					
ANR	2368007	Callee	DuplicateHandle		2367984	0					
ANR	2368008	Identifier	DuplicateHandle		2367984	0					
ANR	2368009	ArgumentList	GetCurrentProcess ( )		2367984	1					
ANR	2368010	Argument	GetCurrentProcess ( )		2367984	0					
ANR	2368011	CallExpression	GetCurrentProcess ( )		2367984	0					
ANR	2368012	Callee	GetCurrentProcess		2367984	0					
ANR	2368013	Identifier	GetCurrentProcess		2367984	0					
ANR	2368014	ArgumentList			2367984	1					
ANR	2368015	Argument	( HANDLE ) _sock		2367984	1					
ANR	2368016	CastExpression	( HANDLE ) _sock		2367984	0					
ANR	2368017	CastTarget	HANDLE		2367984	0					
ANR	2368018	Identifier	_sock		2367984	1					
ANR	2368019	Argument	GetCurrentProcess ( )		2367984	2					
ANR	2368020	CallExpression	GetCurrentProcess ( )		2367984	0					
ANR	2368021	Callee	GetCurrentProcess		2367984	0					
ANR	2368022	Identifier	GetCurrentProcess		2367984	0					
ANR	2368023	ArgumentList			2367984	1					
ANR	2368024	Argument	( HANDLE * ) & DuplicateSock		2367984	3					
ANR	2368025	CastExpression	( HANDLE * ) & DuplicateSock		2367984	0					
ANR	2368026	CastTarget	HANDLE *		2367984	0					
ANR	2368027	UnaryOperationExpression	& DuplicateSock		2367984	1					
ANR	2368028	UnaryOperator	&		2367984	0					
ANR	2368029	Identifier	DuplicateSock		2367984	1					
ANR	2368030	Argument	0		2367984	4					
ANR	2368031	PrimaryExpression	0		2367984	0					
ANR	2368032	Argument	flag		2367984	5					
ANR	2368033	Identifier	flag		2367984	0					
ANR	2368034	Argument	DUPLICATE_SAME_ACCESS		2367984	6					
ANR	2368035	Identifier	DUPLICATE_SAME_ACCESS		2367984	0					
ANR	2368036	CompoundStatement		21:32:735:735	2367984	1					
ANR	2368037	Statement	dprintf	326:3:8109:8115	2367984	0	True				
ANR	2368038	Statement	(	326:10:8116:8116	2367984	1	True				
ANR	2368039	Statement	D_ALWAYS	326:11:8117:8124	2367984	2	True				
ANR	2368040	Statement	","	326:19:8125:8125	2367984	3	True				
ANR	2368041	Statement	"""ERROR: DuplicateHandle() failed """	326:20:8126:8159	2367984	4	True				
ANR	2368042	Statement	"""in Sock:set_inheritable(%d), error=%d\\n"""	327:20:8181:8221	2367984	5	True				
ANR	2368043	Statement	","	328:6:8229:8229	2367984	6	True				
ANR	2368044	Statement	flag	328:7:8230:8233	2367984	7	True				
ANR	2368045	Statement	","	328:11:8234:8234	2367984	8	True				
ANR	2368046	Statement	GetLastError	328:12:8235:8246	2367984	9	True				
ANR	2368047	Statement	(	328:24:8247:8247	2367984	10	True				
ANR	2368048	Statement	)	328:25:8248:8248	2367984	11	True				
ANR	2368049	Statement	)	328:26:8249:8249	2367984	12	True				
ANR	2368050	ExpressionStatement		328:27:8250:8250	2367984	13	True				
ANR	2368051	ExpressionStatement	closesocket ( DuplicateSock )	329:3:8255:8281	2367984	14	True				
ANR	2368052	CallExpression	closesocket ( DuplicateSock )		2367984	0					
ANR	2368053	Callee	closesocket		2367984	0					
ANR	2368054	Identifier	closesocket		2367984	0					
ANR	2368055	ArgumentList	DuplicateSock		2367984	1					
ANR	2368056	Argument	DuplicateSock		2367984	0					
ANR	2368057	Identifier	DuplicateSock		2367984	0					
ANR	2368058	ReturnStatement	return FALSE ;	330:3:8286:8298	2367984	15	True				
ANR	2368059	Identifier	FALSE		2367984	0					
ANR	2368060	ExpressionStatement	closesocket ( _sock )	333:1:8366:8384	2367984	3	True				
ANR	2368061	CallExpression	closesocket ( _sock )		2367984	0					
ANR	2368062	Callee	closesocket		2367984	0					
ANR	2368063	Identifier	closesocket		2367984	0					
ANR	2368064	ArgumentList	_sock		2367984	1					
ANR	2368065	Argument	_sock		2367984	0					
ANR	2368066	Identifier	_sock		2367984	0					
ANR	2368067	ExpressionStatement	_sock = DuplicateSock	334:1:8387:8408	2367984	4	True				
ANR	2368068	AssignmentExpression	_sock = DuplicateSock		2367984	0		=			
ANR	2368069	Identifier	_sock		2367984	0					
ANR	2368070	Identifier	DuplicateSock		2367984	1					
ANR	2368071	ReturnStatement	return TRUE ;	336:1:8412:8423	2367984	5	True				
ANR	2368072	Identifier	TRUE		2367984	0					
ANR	2368073	ReturnType	int		2367984	1					
ANR	2368074	Identifier	Sock :: set_inheritable		2367984	2					
ANR	2368075	ParameterList	int flag		2367984	3					
ANR	2368076	Parameter	int flag	303:27:7331:7338	2367984	0	True				
ANR	2368077	ParameterType	int		2367984	0					
ANR	2368078	Identifier	flag		2367984	1					
ANR	2368079	CFGEntryNode	ENTRY		2367984		True				
ANR	2368080	CFGExitNode	EXIT		2367984		True				
ANR	2368081	Symbol	DuplicateHandle		2367984						
ANR	2368082	Symbol	flag		2367984						
ANR	2368083	Symbol	_sock		2367984						
ANR	2368084	Symbol	DUPLICATE_SAME_ACCESS		2367984						
ANR	2368085	Symbol	TRUE		2367984						
ANR	2368086	Symbol	GetCurrentProcess		2367984						
ANR	2368087	Symbol	FALSE		2367984						
ANR	2368088	Symbol	& DuplicateSock		2367984						
ANR	2368089	Symbol	DuplicateSock		2367984						
ANR	2368090	Function	Sock :: move_descriptor_up	340:0:8447:9919							
ANR	2368091	FunctionDef	Sock :: move_descriptor_up ()		2368090	0					
ANR	2368092	CompoundStatement		341:0:8478:9919	2368090	0					
ANR	2368093	IdentifierDeclStatement	SOCKET new_fd = - 1 ;	362:1:9549:9567	2368090	0	True				
ANR	2368094	IdentifierDecl	new_fd = - 1		2368090	0					
ANR	2368095	IdentifierDeclType	SOCKET		2368090	0					
ANR	2368096	Identifier	new_fd		2368090	1					
ANR	2368097	AssignmentExpression	new_fd = - 1		2368090	2		=			
ANR	2368098	Identifier	new_fd		2368090	0					
ANR	2368099	UnaryOperationExpression	- 1		2368090	1					
ANR	2368100	UnaryOperator	-		2368090	0					
ANR	2368101	PrimaryExpression	1		2368090	1					
ANR	2368102	IfStatement	if ( _sock > 100 && _sock < 256 && getdtablesize ( ) > 256 )		2368090	1					
ANR	2368103	Condition	_sock > 100 && _sock < 256 && getdtablesize ( ) > 256	363:6:9575:9625	2368090	0	True				
ANR	2368104	AndExpression	_sock > 100 && _sock < 256 && getdtablesize ( ) > 256		2368090	0		&&			
ANR	2368105	RelationalExpression	_sock > 100		2368090	0		>			
ANR	2368106	Identifier	_sock		2368090	0					
ANR	2368107	PrimaryExpression	100		2368090	1					
ANR	2368108	AndExpression	_sock < 256 && getdtablesize ( ) > 256		2368090	1		&&			
ANR	2368109	RelationalExpression	_sock < 256		2368090	0		<			
ANR	2368110	Identifier	_sock		2368090	0					
ANR	2368111	PrimaryExpression	256		2368090	1					
ANR	2368112	RelationalExpression	getdtablesize ( ) > 256		2368090	1		>			
ANR	2368113	CallExpression	getdtablesize ( )		2368090	0					
ANR	2368114	Callee	getdtablesize		2368090	0					
ANR	2368115	Identifier	getdtablesize		2368090	0					
ANR	2368116	ArgumentList			2368090	1					
ANR	2368117	PrimaryExpression	256		2368090	1					
ANR	2368118	CompoundStatement		23:60:1150:1150	2368090	1					
ANR	2368119	ExpressionStatement	"new_fd = fcntl ( _sock , F_DUPFD , 256 )"	364:2:9633:9668	2368090	0	True				
ANR	2368120	AssignmentExpression	"new_fd = fcntl ( _sock , F_DUPFD , 256 )"		2368090	0		=			
ANR	2368121	Identifier	new_fd		2368090	0					
ANR	2368122	CallExpression	"fcntl ( _sock , F_DUPFD , 256 )"		2368090	1					
ANR	2368123	Callee	fcntl		2368090	0					
ANR	2368124	Identifier	fcntl		2368090	0					
ANR	2368125	ArgumentList	_sock		2368090	1					
ANR	2368126	Argument	_sock		2368090	0					
ANR	2368127	Identifier	_sock		2368090	0					
ANR	2368128	Argument	F_DUPFD		2368090	1					
ANR	2368129	Identifier	F_DUPFD		2368090	0					
ANR	2368130	Argument	256		2368090	2					
ANR	2368131	PrimaryExpression	256		2368090	0					
ANR	2368132	IfStatement	if ( new_fd >= 256 )		2368090	1					
ANR	2368133	Condition	new_fd >= 256	365:7:9677:9689	2368090	0	True				
ANR	2368134	RelationalExpression	new_fd >= 256		2368090	0		>=			
ANR	2368135	Identifier	new_fd		2368090	0					
ANR	2368136	PrimaryExpression	256		2368090	1					
ANR	2368137	CompoundStatement		25:23:1214:1214	2368090	1					
ANR	2368138	Statement	::	366:3:9698:9699	2368090	0	True				
ANR	2368139	ExpressionStatement	closesocket ( _sock )	366:5:9700:9718	2368090	1	True				
ANR	2368140	CallExpression	closesocket ( _sock )		2368090	0					
ANR	2368141	Callee	closesocket		2368090	0					
ANR	2368142	Identifier	closesocket		2368090	0					
ANR	2368143	ArgumentList	_sock		2368090	1					
ANR	2368144	Argument	_sock		2368090	0					
ANR	2368145	Identifier	_sock		2368090	0					
ANR	2368146	ExpressionStatement	_sock = new_fd	367:3:9723:9737	2368090	2	True				
ANR	2368147	AssignmentExpression	_sock = new_fd		2368090	0		=			
ANR	2368148	Identifier	_sock		2368090	0					
ANR	2368149	Identifier	new_fd		2368090	1					
ANR	2368150	ElseStatement	else		2368090	0					
ANR	2368151	CompoundStatement		28:9:1269:1269	2368090	0					
ANR	2368152	ExpressionStatement	"dprintf ( D_NETWORK , ""Sock::move_descriptor_up failed: %s\\n"" , strerror ( errno ) )"	370:3:9786:9871	2368090	0	True				
ANR	2368153	CallExpression	"dprintf ( D_NETWORK , ""Sock::move_descriptor_up failed: %s\\n"" , strerror ( errno ) )"		2368090	0					
ANR	2368154	Callee	dprintf		2368090	0					
ANR	2368155	Identifier	dprintf		2368090	0					
ANR	2368156	ArgumentList	D_NETWORK		2368090	1					
ANR	2368157	Argument	D_NETWORK		2368090	0					
ANR	2368158	Identifier	D_NETWORK		2368090	0					
ANR	2368159	Argument	"""Sock::move_descriptor_up failed: %s\\n"""		2368090	1					
ANR	2368160	PrimaryExpression	"""Sock::move_descriptor_up failed: %s\\n"""		2368090	0					
ANR	2368161	Argument	strerror ( errno )		2368090	2					
ANR	2368162	CallExpression	strerror ( errno )		2368090	0					
ANR	2368163	Callee	strerror		2368090	0					
ANR	2368164	Identifier	strerror		2368090	0					
ANR	2368165	ArgumentList	errno		2368090	1					
ANR	2368166	Argument	errno		2368090	0					
ANR	2368167	Identifier	errno		2368090	0					
ANR	2368168	ReturnStatement	return FALSE ;	372:3:9876:9888	2368090	1	True				
ANR	2368169	Identifier	FALSE		2368090	0					
ANR	2368170	ReturnStatement	return TRUE ;	377:1:9906:9917	2368090	2	True				
ANR	2368171	Identifier	TRUE		2368090	0					
ANR	2368172	ReturnType	int		2368090	1					
ANR	2368173	Identifier	Sock :: move_descriptor_up		2368090	2					
ANR	2368174	ParameterList			2368090	3					
ANR	2368175	CFGEntryNode	ENTRY		2368090		True				
ANR	2368176	CFGExitNode	EXIT		2368090		True				
ANR	2368177	Symbol	strerror		2368090						
ANR	2368178	Symbol	F_DUPFD		2368090						
ANR	2368179	Symbol	errno		2368090						
ANR	2368180	Symbol	_sock		2368090						
ANR	2368181	Symbol	fcntl		2368090						
ANR	2368182	Symbol	new_fd		2368090						
ANR	2368183	Symbol	getdtablesize		2368090						
ANR	2368184	Symbol	D_NETWORK		2368090						
ANR	2368185	Symbol	TRUE		2368090						
ANR	2368186	Symbol	FALSE		2368090						
ANR	2368187	Function	Sock :: assign	380:0:9922:11992							
ANR	2368188	FunctionDef	Sock :: assign (SOCKET sockd)		2368187	0					
ANR	2368189	CompoundStatement		381:0:9953:11992	2368187	0					
ANR	2368190	IdentifierDeclStatement	int my_type = SOCK_DGRAM ;	382:1:9956:9981	2368187	0	True				
ANR	2368191	IdentifierDecl	my_type = SOCK_DGRAM		2368187	0					
ANR	2368192	IdentifierDeclType	int		2368187	0					
ANR	2368193	Identifier	my_type		2368187	1					
ANR	2368194	AssignmentExpression	my_type = SOCK_DGRAM		2368187	2		=			
ANR	2368195	Identifier	SOCK_DGRAM		2368187	0					
ANR	2368196	Identifier	SOCK_DGRAM		2368187	1					
ANR	2368197	IfStatement	if ( _state != sock_virgin )		2368187	1					
ANR	2368198	Condition	_state != sock_virgin	384:5:9989:10009	2368187	0	True				
ANR	2368199	EqualityExpression	_state != sock_virgin		2368187	0		!=			
ANR	2368200	Identifier	_state		2368187	0					
ANR	2368201	Identifier	sock_virgin		2368187	1					
ANR	2368202	ReturnStatement	return FALSE ;	384:28:10012:10024	2368187	1	True				
ANR	2368203	Identifier	FALSE		2368187	0					
ANR	2368204	IfStatement	if ( sockd != INVALID_SOCKET )		2368187	2					
ANR	2368205	Condition	sockd != INVALID_SOCKET	386:5:10032:10054	2368187	0	True				
ANR	2368206	EqualityExpression	sockd != INVALID_SOCKET		2368187	0		!=			
ANR	2368207	Identifier	sockd		2368187	0					
ANR	2368208	Identifier	INVALID_SOCKET		2368187	1					
ANR	2368209	CompoundStatement		6:29:102:102	2368187	1					
ANR	2368210	ExpressionStatement	_sock = sockd	387:2:10060:10073	2368187	0	True				
ANR	2368211	AssignmentExpression	_sock = sockd		2368187	0		=			
ANR	2368212	Identifier	_sock		2368187	0					
ANR	2368213	Identifier	sockd		2368187	1					
ANR	2368214	ExpressionStatement	_state = sock_assigned	389:2:10179:10201	2368187	1	True				
ANR	2368215	AssignmentExpression	_state = sock_assigned		2368187	0		=			
ANR	2368216	Identifier	_state		2368187	0					
ANR	2368217	Identifier	sock_assigned		2368187	1					
ANR	2368218	ExpressionStatement	_who . clear ( )	391:2:10206:10218	2368187	2	True				
ANR	2368219	CallExpression	_who . clear ( )		2368187	0					
ANR	2368220	Callee	_who . clear		2368187	0					
ANR	2368221	MemberAccess	_who . clear		2368187	0					
ANR	2368222	Identifier	_who		2368187	0					
ANR	2368223	Identifier	clear		2368187	1					
ANR	2368224	ArgumentList			2368187	1					
ANR	2368225	ExpressionStatement	"condor_getpeername ( _sock , _who )"	392:2:10222:10253	2368187	3	True				
ANR	2368226	CallExpression	"condor_getpeername ( _sock , _who )"		2368187	0					
ANR	2368227	Callee	condor_getpeername		2368187	0					
ANR	2368228	Identifier	condor_getpeername		2368187	0					
ANR	2368229	ArgumentList	_sock		2368187	1					
ANR	2368230	Argument	_sock		2368187	0					
ANR	2368231	Identifier	_sock		2368187	0					
ANR	2368232	Argument	_who		2368187	1					
ANR	2368233	Identifier	_who		2368187	0					
ANR	2368234	IfStatement	if ( _timeout > 0 )		2368187	4					
ANR	2368235	Condition	_timeout > 0	394:7:10263:10274	2368187	0	True				
ANR	2368236	RelationalExpression	_timeout > 0		2368187	0		>			
ANR	2368237	Identifier	_timeout		2368187	0					
ANR	2368238	PrimaryExpression	0		2368187	1					
ANR	2368239	CompoundStatement		14:22:324:324	2368187	1					
ANR	2368240	ExpressionStatement	timeout_no_timeout_multiplier ( _timeout )	395:3:10283:10324	2368187	0	True				
ANR	2368241	CallExpression	timeout_no_timeout_multiplier ( _timeout )		2368187	0					
ANR	2368242	Callee	timeout_no_timeout_multiplier		2368187	0					
ANR	2368243	Identifier	timeout_no_timeout_multiplier		2368187	0					
ANR	2368244	ArgumentList	_timeout		2368187	1					
ANR	2368245	Argument	_timeout		2368187	0					
ANR	2368246	Identifier	_timeout		2368187	0					
ANR	2368247	ReturnStatement	return TRUE ;	397:2:10332:10343	2368187	5	True				
ANR	2368248	Identifier	TRUE		2368187	0					
ANR	2368249	IdentifierDeclStatement	int af_type ;	400:1:10350:10361	2368187	3	True				
ANR	2368250	IdentifierDecl	af_type		2368187	0					
ANR	2368251	IdentifierDeclType	int		2368187	0					
ANR	2368252	Identifier	af_type		2368187	1					
ANR	2368253	IfStatement	if ( _condor_is_ipv6_mode ( ) )		2368187	4					
ANR	2368254	Condition	_condor_is_ipv6_mode ( )	401:5:10368:10389	2368187	0	True				
ANR	2368255	CallExpression	_condor_is_ipv6_mode ( )		2368187	0					
ANR	2368256	Callee	_condor_is_ipv6_mode		2368187	0					
ANR	2368257	Identifier	_condor_is_ipv6_mode		2368187	0					
ANR	2368258	ArgumentList			2368187	1					
ANR	2368259	ExpressionStatement	af_type = AF_INET6	402:2:10394:10412	2368187	1	True				
ANR	2368260	AssignmentExpression	af_type = AF_INET6		2368187	0		=			
ANR	2368261	Identifier	af_type		2368187	0					
ANR	2368262	Identifier	AF_INET6		2368187	1					
ANR	2368263	ElseStatement	else		2368187	0					
ANR	2368264	ExpressionStatement	af_type = AF_INET	404:2:10422:10439	2368187	0	True				
ANR	2368265	AssignmentExpression	af_type = AF_INET		2368187	0		=			
ANR	2368266	Identifier	af_type		2368187	0					
ANR	2368267	Identifier	AF_INET		2368187	1					
ANR	2368268	SwitchStatement	switch ( type ( ) )		2368187	5					
ANR	2368269	Condition	type ( )	406:8:10450:10455	2368187	0	True				
ANR	2368270	CallExpression	type ( )		2368187	0					
ANR	2368271	Callee	type		2368187	0					
ANR	2368272	Identifier	type		2368187	0					
ANR	2368273	ArgumentList			2368187	1					
ANR	2368274	CompoundStatement		26:15:503:503	2368187	1					
ANR	2368275	Label	case safe_sock :	407:2:10461:10475	2368187	0	True				
ANR	2368276	Identifier	safe_sock		2368187	0					
ANR	2368277	ExpressionStatement	my_type = SOCK_DGRAM	408:3:10480:10500	2368187	1	True				
ANR	2368278	AssignmentExpression	my_type = SOCK_DGRAM		2368187	0		=			
ANR	2368279	Identifier	my_type		2368187	0					
ANR	2368280	Identifier	SOCK_DGRAM		2368187	1					
ANR	2368281	BreakStatement	break ;	409:3:10505:10510	2368187	2	True				
ANR	2368282	Label	case reli_sock :	410:2:10514:10528	2368187	3	True				
ANR	2368283	Identifier	reli_sock		2368187	0					
ANR	2368284	ExpressionStatement	my_type = SOCK_STREAM	411:3:10533:10554	2368187	4	True				
ANR	2368285	AssignmentExpression	my_type = SOCK_STREAM		2368187	0		=			
ANR	2368286	Identifier	my_type		2368187	0					
ANR	2368287	Identifier	SOCK_STREAM		2368187	1					
ANR	2368288	BreakStatement	break ;	412:3:10559:10564	2368187	5	True				
ANR	2368289	Label	default :	413:2:10568:10575	2368187	6	True				
ANR	2368290	Identifier	default		2368187	0					
ANR	2368291	ExpressionStatement	ASSERT ( 0 )	414:3:10580:10589	2368187	7	True				
ANR	2368292	CallExpression	ASSERT ( 0 )		2368187	0					
ANR	2368293	Callee	ASSERT		2368187	0					
ANR	2368294	Identifier	ASSERT		2368187	0					
ANR	2368295	ArgumentList	0		2368187	1					
ANR	2368296	Argument	0		2368187	0					
ANR	2368297	PrimaryExpression	0		2368187	0					
ANR	2368298	ExpressionStatement	errno = 0	418:1:10621:10630	2368187	6	True				
ANR	2368299	AssignmentExpression	errno = 0		2368187	0		=			
ANR	2368300	Identifier	errno		2368187	0					
ANR	2368301	PrimaryExpression	0		2368187	1					
ANR	2368302	IfStatement	"if ( ( _sock = socket ( af_type , my_type , 0 ) ) == INVALID_SOCKET )"		2368187	7					
ANR	2368303	Condition	"( _sock = socket ( af_type , my_type , 0 ) ) == INVALID_SOCKET"	420:5:10644:10698	2368187	0	True				
ANR	2368304	EqualityExpression	"( _sock = socket ( af_type , my_type , 0 ) ) == INVALID_SOCKET"		2368187	0		==			
ANR	2368305	AssignmentExpression	"_sock = socket ( af_type , my_type , 0 )"		2368187	0		=			
ANR	2368306	Identifier	_sock		2368187	0					
ANR	2368307	CallExpression	"socket ( af_type , my_type , 0 )"		2368187	1					
ANR	2368308	Callee	socket		2368187	0					
ANR	2368309	Identifier	socket		2368187	0					
ANR	2368310	ArgumentList	af_type		2368187	1					
ANR	2368311	Argument	af_type		2368187	0					
ANR	2368312	Identifier	af_type		2368187	0					
ANR	2368313	Argument	my_type		2368187	1					
ANR	2368314	Identifier	my_type		2368187	0					
ANR	2368315	Argument	0		2368187	2					
ANR	2368316	PrimaryExpression	0		2368187	0					
ANR	2368317	Identifier	INVALID_SOCKET		2368187	1					
ANR	2368318	CompoundStatement		40:62:747:747	2368187	1					
ANR	2368319	IfStatement	if ( errno == EMFILE )		2368187	0					
ANR	2368320	Condition	errno == EMFILE	422:7:10738:10752	2368187	0	True				
ANR	2368321	EqualityExpression	errno == EMFILE		2368187	0		==			
ANR	2368322	Identifier	errno		2368187	0					
ANR	2368323	Identifier	EMFILE		2368187	1					
ANR	2368324	CompoundStatement		42:25:802:802	2368187	1					
ANR	2368325	ExpressionStatement	"_condor_fd_panic ( __LINE__ , __FILE__ )"	423:3:10761:10799	2368187	0	True				
ANR	2368326	CallExpression	"_condor_fd_panic ( __LINE__ , __FILE__ )"		2368187	0					
ANR	2368327	Callee	_condor_fd_panic		2368187	0					
ANR	2368328	Identifier	_condor_fd_panic		2368187	0					
ANR	2368329	ArgumentList	__LINE__		2368187	1					
ANR	2368330	Argument	__LINE__		2368187	0					
ANR	2368331	Identifier	__LINE__		2368187	0					
ANR	2368332	Argument	__FILE__		2368187	1					
ANR	2368333	Identifier	__FILE__		2368187	0					
ANR	2368334	ReturnStatement	return FALSE ;	426:2:10840:10852	2368187	1	True				
ANR	2368335	Identifier	FALSE		2368187	0					
ANR	2368336	IfStatement	if ( ! move_descriptor_up ( ) )		2368187	8					
ANR	2368337	Condition	! move_descriptor_up ( )	430:6:10930:10950	2368187	0	True				
ANR	2368338	UnaryOperationExpression	! move_descriptor_up ( )		2368187	0					
ANR	2368339	UnaryOperator	!		2368187	0					
ANR	2368340	CallExpression	move_descriptor_up ( )		2368187	1					
ANR	2368341	Callee	move_descriptor_up		2368187	0					
ANR	2368342	Identifier	move_descriptor_up		2368187	0					
ANR	2368343	ArgumentList			2368187	1					
ANR	2368344	CompoundStatement		50:30:1000:1000	2368187	1					
ANR	2368345	Statement	::	431:2:10958:10959	2368187	0	True				
ANR	2368346	ExpressionStatement	closesocket ( _sock )	431:4:10960:10978	2368187	1	True				
ANR	2368347	CallExpression	closesocket ( _sock )		2368187	0					
ANR	2368348	Callee	closesocket		2368187	0					
ANR	2368349	Identifier	closesocket		2368187	0					
ANR	2368350	ArgumentList	_sock		2368187	1					
ANR	2368351	Argument	_sock		2368187	0					
ANR	2368352	Identifier	_sock		2368187	0					
ANR	2368353	ExpressionStatement	_sock = INVALID_SOCKET	432:2:10982:11004	2368187	2	True				
ANR	2368354	AssignmentExpression	_sock = INVALID_SOCKET		2368187	0		=			
ANR	2368355	Identifier	_sock		2368187	0					
ANR	2368356	Identifier	INVALID_SOCKET		2368187	1					
ANR	2368357	ReturnStatement	return FALSE ;	433:2:11008:11020	2368187	3	True				
ANR	2368358	Identifier	FALSE		2368187	0					
ANR	2368359	IfStatement	if ( ! set_inheritable ( FALSE ) )		2368187	9					
ANR	2368360	Condition	! set_inheritable ( FALSE )	442:6:11423:11445	2368187	0	True				
ANR	2368361	UnaryOperationExpression	! set_inheritable ( FALSE )		2368187	0					
ANR	2368362	UnaryOperator	!		2368187	0					
ANR	2368363	CallExpression	set_inheritable ( FALSE )		2368187	1					
ANR	2368364	Callee	set_inheritable		2368187	0					
ANR	2368365	Identifier	set_inheritable		2368187	0					
ANR	2368366	ArgumentList	FALSE		2368187	1					
ANR	2368367	Argument	FALSE		2368187	0					
ANR	2368368	Identifier	FALSE		2368187	0					
ANR	2368369	CompoundStatement		62:32:1495:1495	2368187	1					
ANR	2368370	Statement	::	443:2:11453:11454	2368187	0	True				
ANR	2368371	ExpressionStatement	closesocket ( _sock )	443:4:11455:11473	2368187	1	True				
ANR	2368372	CallExpression	closesocket ( _sock )		2368187	0					
ANR	2368373	Callee	closesocket		2368187	0					
ANR	2368374	Identifier	closesocket		2368187	0					
ANR	2368375	ArgumentList	_sock		2368187	1					
ANR	2368376	Argument	_sock		2368187	0					
ANR	2368377	Identifier	_sock		2368187	0					
ANR	2368378	ExpressionStatement	_sock = INVALID_SOCKET	444:2:11477:11499	2368187	2	True				
ANR	2368379	AssignmentExpression	_sock = INVALID_SOCKET		2368187	0		=			
ANR	2368380	Identifier	_sock		2368187	0					
ANR	2368381	Identifier	INVALID_SOCKET		2368187	1					
ANR	2368382	ReturnStatement	return FALSE ;	445:2:11503:11515	2368187	3	True				
ANR	2368383	Identifier	FALSE		2368187	0					
ANR	2368384	ExpressionStatement	_state = sock_assigned	448:1:11523:11545	2368187	10	True				
ANR	2368385	AssignmentExpression	_state = sock_assigned		2368187	0		=			
ANR	2368386	Identifier	_state		2368187	0					
ANR	2368387	Identifier	sock_assigned		2368187	1					
ANR	2368388	IfStatement	if ( _timeout > 0 )		2368187	11					
ANR	2368389	Condition	_timeout > 0	454:6:11897:11908	2368187	0	True				
ANR	2368390	RelationalExpression	_timeout > 0		2368187	0		>			
ANR	2368391	Identifier	_timeout		2368187	0					
ANR	2368392	PrimaryExpression	0		2368187	1					
ANR	2368393	ExpressionStatement	timeout_no_timeout_multiplier ( _timeout )	455:2:11914:11955	2368187	1	True				
ANR	2368394	CallExpression	timeout_no_timeout_multiplier ( _timeout )		2368187	0					
ANR	2368395	Callee	timeout_no_timeout_multiplier		2368187	0					
ANR	2368396	Identifier	timeout_no_timeout_multiplier		2368187	0					
ANR	2368397	ArgumentList	_timeout		2368187	1					
ANR	2368398	Argument	_timeout		2368187	0					
ANR	2368399	Identifier	_timeout		2368187	0					
ANR	2368400	ExpressionStatement	addr_changed ( )	457:4:11962:11976	2368187	12	True				
ANR	2368401	CallExpression	addr_changed ( )		2368187	0					
ANR	2368402	Callee	addr_changed		2368187	0					
ANR	2368403	Identifier	addr_changed		2368187	0					
ANR	2368404	ArgumentList			2368187	1					
ANR	2368405	ReturnStatement	return TRUE ;	458:1:11979:11990	2368187	13	True				
ANR	2368406	Identifier	TRUE		2368187	0					
ANR	2368407	ReturnType	int		2368187	1					
ANR	2368408	Identifier	Sock :: assign		2368187	2					
ANR	2368409	ParameterList	SOCKET sockd		2368187	3					
ANR	2368410	Parameter	SOCKET sockd	380:17:9939:9950	2368187	0	True				
ANR	2368411	ParameterType	SOCKET		2368187	0					
ANR	2368412	Identifier	sockd		2368187	1					
ANR	2368413	CFGEntryNode	ENTRY		2368187		True				
ANR	2368414	CFGExitNode	EXIT		2368187		True				
ANR	2368415	Symbol	type		2368187						
ANR	2368416	Symbol	INVALID_SOCKET		2368187						
ANR	2368417	Symbol	SOCK_STREAM		2368187						
ANR	2368418	Symbol	_sock		2368187						
ANR	2368419	Symbol	_who		2368187						
ANR	2368420	Symbol	sock_virgin		2368187						
ANR	2368421	Symbol	_timeout		2368187						
ANR	2368422	Symbol	my_type		2368187						
ANR	2368423	Symbol	errno		2368187						
ANR	2368424	Symbol	move_descriptor_up		2368187						
ANR	2368425	Symbol	__FILE__		2368187						
ANR	2368426	Symbol	set_inheritable		2368187						
ANR	2368427	Symbol	sockd		2368187						
ANR	2368428	Symbol	af_type		2368187						
ANR	2368429	Symbol	TRUE		2368187						
ANR	2368430	Symbol	AF_INET		2368187						
ANR	2368431	Symbol	SOCK_DGRAM		2368187						
ANR	2368432	Symbol	__LINE__		2368187						
ANR	2368433	Symbol	AF_INET6		2368187						
ANR	2368434	Symbol	_condor_is_ipv6_mode		2368187						
ANR	2368435	Symbol	_state		2368187						
ANR	2368436	Symbol	sock_assigned		2368187						
ANR	2368437	Symbol	EMFILE		2368187						
ANR	2368438	Symbol	FALSE		2368187						
ANR	2368439	Symbol	socket		2368187						
ANR	2368440	Function	Sock :: bindWithin	462:0:11996:14141							
ANR	2368441	FunctionDef	"Sock :: bindWithin (const int low_port , const int high_port , bool outbound)"		2368440	0					
ANR	2368442	CompoundStatement		464:0:12073:14141	2368440	0					
ANR	2368443	IdentifierDeclStatement	bool bind_all = ( bool ) _condor_bind_all_interfaces ( ) ;	465:1:12076:12127	2368440	0	True				
ANR	2368444	IdentifierDecl	bind_all = ( bool ) _condor_bind_all_interfaces ( )		2368440	0					
ANR	2368445	IdentifierDeclType	bool		2368440	0					
ANR	2368446	Identifier	bind_all		2368440	1					
ANR	2368447	AssignmentExpression	bind_all = ( bool ) _condor_bind_all_interfaces ( )		2368440	2		=			
ANR	2368448	Identifier	bind_all		2368440	0					
ANR	2368449	CastExpression	( bool ) _condor_bind_all_interfaces ( )		2368440	1					
ANR	2368450	CastTarget	bool		2368440	0					
ANR	2368451	CallExpression	_condor_bind_all_interfaces ( )		2368440	1					
ANR	2368452	Callee	_condor_bind_all_interfaces		2368440	0					
ANR	2368453	Identifier	_condor_bind_all_interfaces		2368440	0					
ANR	2368454	ArgumentList			2368440	1					
ANR	2368455	IdentifierDeclStatement	bool ipv6_mode = _condor_is_ipv6_mode ( ) ;	466:1:12130:12169	2368440	1	True				
ANR	2368456	IdentifierDecl	ipv6_mode = _condor_is_ipv6_mode ( )		2368440	0					
ANR	2368457	IdentifierDeclType	bool		2368440	0					
ANR	2368458	Identifier	ipv6_mode		2368440	1					
ANR	2368459	AssignmentExpression	ipv6_mode = _condor_is_ipv6_mode ( )		2368440	2		=			
ANR	2368460	Identifier	ipv6_mode		2368440	0					
ANR	2368461	CallExpression	_condor_is_ipv6_mode ( )		2368440	1					
ANR	2368462	Callee	_condor_is_ipv6_mode		2368440	0					
ANR	2368463	Identifier	_condor_is_ipv6_mode		2368440	0					
ANR	2368464	ArgumentList			2368440	1					
ANR	2368465	IdentifierDeclStatement	struct timeval curTime ;	469:4:12233:12255	2368440	2	True				
ANR	2368466	IdentifierDecl	curTime		2368440	0					
ANR	2368467	IdentifierDeclType	struct timeval		2368440	0					
ANR	2368468	Identifier	curTime		2368440	1					
ANR	2368469	ExpressionStatement	"( void ) gettimeofday ( & curTime , NULL )"	471:4:12275:12310	2368440	3	True				
ANR	2368470	CastExpression	"( void ) gettimeofday ( & curTime , NULL )"		2368440	0					
ANR	2368471	CastTarget	void		2368440	0					
ANR	2368472	CallExpression	"gettimeofday ( & curTime , NULL )"		2368440	1					
ANR	2368473	Callee	gettimeofday		2368440	0					
ANR	2368474	Identifier	gettimeofday		2368440	0					
ANR	2368475	ArgumentList	& curTime		2368440	1					
ANR	2368476	Argument	& curTime		2368440	0					
ANR	2368477	UnaryOperationExpression	& curTime		2368440	0					
ANR	2368478	UnaryOperator	&		2368440	0					
ANR	2368479	Identifier	curTime		2368440	1					
ANR	2368480	Argument	NULL		2368440	1					
ANR	2368481	Identifier	NULL		2368440	0					
ANR	2368482	IdentifierDeclStatement	int range = high_port - low_port + 1 ;	478:1:12448:12484	2368440	4	True				
ANR	2368483	IdentifierDecl	range = high_port - low_port + 1		2368440	0					
ANR	2368484	IdentifierDeclType	int		2368440	0					
ANR	2368485	Identifier	range		2368440	1					
ANR	2368486	AssignmentExpression	range = high_port - low_port + 1		2368440	2		=			
ANR	2368487	Identifier	range		2368440	0					
ANR	2368488	AdditiveExpression	high_port - low_port + 1		2368440	1		-			
ANR	2368489	Identifier	high_port		2368440	0					
ANR	2368490	AdditiveExpression	low_port + 1		2368440	1		+			
ANR	2368491	Identifier	low_port		2368440	0					
ANR	2368492	PrimaryExpression	1		2368440	1					
ANR	2368493	IdentifierDeclStatement	int start_trial = low_port + ( curTime . tv_usec * 73 % range ) ;	480:1:12552:12632	2368440	5	True				
ANR	2368494	IdentifierDecl	start_trial = low_port + ( curTime . tv_usec * 73 % range )		2368440	0					
ANR	2368495	IdentifierDeclType	int		2368440	0					
ANR	2368496	Identifier	start_trial		2368440	1					
ANR	2368497	AssignmentExpression	start_trial = low_port + ( curTime . tv_usec * 73 % range )		2368440	2		=			
ANR	2368498	Identifier	start_trial		2368440	0					
ANR	2368499	AdditiveExpression	low_port + ( curTime . tv_usec * 73 % range )		2368440	1		+			
ANR	2368500	Identifier	low_port		2368440	0					
ANR	2368501	MultiplicativeExpression	curTime . tv_usec * 73 % range		2368440	1		*			
ANR	2368502	MemberAccess	curTime . tv_usec		2368440	0					
ANR	2368503	Identifier	curTime		2368440	0					
ANR	2368504	Identifier	tv_usec		2368440	1					
ANR	2368505	MultiplicativeExpression	73 % range		2368440	1		%			
ANR	2368506	PrimaryExpression	73		2368440	0					
ANR	2368507	Identifier	range		2368440	1					
ANR	2368508	IdentifierDeclStatement	int this_trial = start_trial ;	482:1:12636:12664	2368440	6	True				
ANR	2368509	IdentifierDecl	this_trial = start_trial		2368440	0					
ANR	2368510	IdentifierDeclType	int		2368440	0					
ANR	2368511	Identifier	this_trial		2368440	1					
ANR	2368512	AssignmentExpression	this_trial = start_trial		2368440	2		=			
ANR	2368513	Identifier	start_trial		2368440	0					
ANR	2368514	Identifier	start_trial		2368440	1					
ANR	2368515	DoStatement	do		2368440	7					
ANR	2368516	CompoundStatement		41:2:1050:1069	2368440	0					
ANR	2368517	IdentifierDeclStatement	condor_sockaddr addr ;	484:2:12674:12696	2368440	0	True				
ANR	2368518	IdentifierDecl	addr		2368440	0					
ANR	2368519	IdentifierDeclType	condor_sockaddr		2368440	0					
ANR	2368520	Identifier	addr		2368440	1					
ANR	2368521	IdentifierDeclStatement	int bind_return_val ;	485:2:12700:12719	2368440	1	True				
ANR	2368522	IdentifierDecl	bind_return_val		2368440	0					
ANR	2368523	IdentifierDeclType	int		2368440	0					
ANR	2368524	Identifier	bind_return_val		2368440	1					
ANR	2368525	ExpressionStatement	addr . clear ( )	487:2:12724:12736	2368440	2	True				
ANR	2368526	CallExpression	addr . clear ( )		2368440	0					
ANR	2368527	Callee	addr . clear		2368440	0					
ANR	2368528	MemberAccess	addr . clear		2368440	0					
ANR	2368529	Identifier	addr		2368440	0					
ANR	2368530	Identifier	clear		2368440	1					
ANR	2368531	ArgumentList			2368440	1					
ANR	2368532	IfStatement	if ( bind_all )		2368440	3					
ANR	2368533	Condition	bind_all	488:6:12744:12751	2368440	0	True				
ANR	2368534	Identifier	bind_all		2368440	0					
ANR	2368535	CompoundStatement		25:17:681:681	2368440	1					
ANR	2368536	IfStatement	if ( ipv6_mode )		2368440	0					
ANR	2368537	Condition	ipv6_mode	489:7:12764:12772	2368440	0	True				
ANR	2368538	Identifier	ipv6_mode		2368440	0					
ANR	2368539	ExpressionStatement	addr . set_ipv6 ( )	490:4:12779:12794	2368440	1	True				
ANR	2368540	CallExpression	addr . set_ipv6 ( )		2368440	0					
ANR	2368541	Callee	addr . set_ipv6		2368440	0					
ANR	2368542	MemberAccess	addr . set_ipv6		2368440	0					
ANR	2368543	Identifier	addr		2368440	0					
ANR	2368544	Identifier	set_ipv6		2368440	1					
ANR	2368545	ArgumentList			2368440	1					
ANR	2368546	ElseStatement	else		2368440	0					
ANR	2368547	ExpressionStatement	addr . set_ipv4 ( )	492:4:12808:12823	2368440	0	True				
ANR	2368548	CallExpression	addr . set_ipv4 ( )		2368440	0					
ANR	2368549	Callee	addr . set_ipv4		2368440	0					
ANR	2368550	MemberAccess	addr . set_ipv4		2368440	0					
ANR	2368551	Identifier	addr		2368440	0					
ANR	2368552	Identifier	set_ipv4		2368440	1					
ANR	2368553	ArgumentList			2368440	1					
ANR	2368554	ExpressionStatement	addr . set_addr_any ( )	493:3:12828:12847	2368440	1	True				
ANR	2368555	CallExpression	addr . set_addr_any ( )		2368440	0					
ANR	2368556	Callee	addr . set_addr_any		2368440	0					
ANR	2368557	MemberAccess	addr . set_addr_any		2368440	0					
ANR	2368558	Identifier	addr		2368440	0					
ANR	2368559	Identifier	set_addr_any		2368440	1					
ANR	2368560	ArgumentList			2368440	1					
ANR	2368561	ElseStatement	else		2368440	0					
ANR	2368562	CompoundStatement		31:9:784:784	2368440	0					
ANR	2368563	ExpressionStatement	addr = get_local_ipaddr ( )	495:3:12863:12888	2368440	0	True				
ANR	2368564	AssignmentExpression	addr = get_local_ipaddr ( )		2368440	0		=			
ANR	2368565	Identifier	addr		2368440	0					
ANR	2368566	CallExpression	get_local_ipaddr ( )		2368440	1					
ANR	2368567	Callee	get_local_ipaddr		2368440	0					
ANR	2368568	Identifier	get_local_ipaddr		2368440	0					
ANR	2368569	ArgumentList			2368440	1					
ANR	2368570	IfStatement	if ( addr . is_ipv4 ( ) && ipv6_mode )		2368440	1					
ANR	2368571	Condition	addr . is_ipv4 ( ) && ipv6_mode	498:7:12999:13025	2368440	0	True				
ANR	2368572	AndExpression	addr . is_ipv4 ( ) && ipv6_mode		2368440	0		&&			
ANR	2368573	CallExpression	addr . is_ipv4 ( )		2368440	0					
ANR	2368574	Callee	addr . is_ipv4		2368440	0					
ANR	2368575	MemberAccess	addr . is_ipv4		2368440	0					
ANR	2368576	Identifier	addr		2368440	0					
ANR	2368577	Identifier	is_ipv4		2368440	1					
ANR	2368578	ArgumentList			2368440	1					
ANR	2368579	Identifier	ipv6_mode		2368440	1					
ANR	2368580	ExpressionStatement	addr . convert_to_ipv6 ( )	499:4:13032:13054	2368440	1	True				
ANR	2368581	CallExpression	addr . convert_to_ipv6 ( )		2368440	0					
ANR	2368582	Callee	addr . convert_to_ipv6		2368440	0					
ANR	2368583	MemberAccess	addr . convert_to_ipv6		2368440	0					
ANR	2368584	Identifier	addr		2368440	0					
ANR	2368585	Identifier	convert_to_ipv6		2368440	1					
ANR	2368586	ArgumentList			2368440	1					
ANR	2368587	ExpressionStatement	addr . set_port ( ( unsigned short ) this_trial ++ )	501:2:13062:13105	2368440	4	True				
ANR	2368588	CallExpression	addr . set_port ( ( unsigned short ) this_trial ++ )		2368440	0					
ANR	2368589	Callee	addr . set_port		2368440	0					
ANR	2368590	MemberAccess	addr . set_port		2368440	0					
ANR	2368591	Identifier	addr		2368440	0					
ANR	2368592	Identifier	set_port		2368440	1					
ANR	2368593	ArgumentList	( unsigned short ) this_trial ++		2368440	1					
ANR	2368594	Argument	( unsigned short ) this_trial ++		2368440	0					
ANR	2368595	CastExpression	( unsigned short ) this_trial ++		2368440	0					
ANR	2368596	CastTarget	unsigned short		2368440	0					
ANR	2368597	PostIncDecOperationExpression	this_trial ++		2368440	1					
ANR	2368598	Identifier	this_trial		2368440	0					
ANR	2368599	IncDec	++		2368440	1					
ANR	2368600	IdentifierDeclStatement	priv_state old_priv ;	504:2:13124:13143	2368440	5	True				
ANR	2368601	IdentifierDecl	old_priv		2368440	0					
ANR	2368602	IdentifierDeclType	priv_state		2368440	0					
ANR	2368603	Identifier	old_priv		2368440	1					
ANR	2368604	IfStatement	if ( this_trial <= 1024 )		2368440	6					
ANR	2368605	Condition	this_trial <= 1024	505:6:13151:13168	2368440	0	True				
ANR	2368606	RelationalExpression	this_trial <= 1024		2368440	0		<=			
ANR	2368607	Identifier	this_trial		2368440	0					
ANR	2368608	PrimaryExpression	1024		2368440	1					
ANR	2368609	CompoundStatement		42:26:1097:1097	2368440	1					
ANR	2368610	ExpressionStatement	old_priv = PRIV_UNKNOWN	507:3:13243:13266	2368440	0	True				
ANR	2368611	AssignmentExpression	old_priv = PRIV_UNKNOWN		2368440	0		=			
ANR	2368612	Identifier	old_priv		2368440	0					
ANR	2368613	Identifier	PRIV_UNKNOWN		2368440	1					
ANR	2368614	ExpressionStatement	old_priv = set_root_priv ( )	508:3:13271:13297	2368440	1	True				
ANR	2368615	AssignmentExpression	old_priv = set_root_priv ( )		2368440	0		=			
ANR	2368616	Identifier	old_priv		2368440	0					
ANR	2368617	CallExpression	set_root_priv ( )		2368440	1					
ANR	2368618	Callee	set_root_priv		2368440	0					
ANR	2368619	Identifier	set_root_priv		2368440	0					
ANR	2368620	ArgumentList			2368440	1					
ANR	2368621	ExpressionStatement	"bind_return_val = _bind_helper ( _sock , addr , outbound , false )"	512:2:13313:13373	2368440	7	True				
ANR	2368622	AssignmentExpression	"bind_return_val = _bind_helper ( _sock , addr , outbound , false )"		2368440	0		=			
ANR	2368623	Identifier	bind_return_val		2368440	0					
ANR	2368624	CallExpression	"_bind_helper ( _sock , addr , outbound , false )"		2368440	1					
ANR	2368625	Callee	_bind_helper		2368440	0					
ANR	2368626	Identifier	_bind_helper		2368440	0					
ANR	2368627	ArgumentList	_sock		2368440	1					
ANR	2368628	Argument	_sock		2368440	0					
ANR	2368629	Identifier	_sock		2368440	0					
ANR	2368630	Argument	addr		2368440	1					
ANR	2368631	Identifier	addr		2368440	0					
ANR	2368632	Argument	outbound		2368440	2					
ANR	2368633	Identifier	outbound		2368440	0					
ANR	2368634	Argument	false		2368440	3					
ANR	2368635	Identifier	false		2368440	0					
ANR	2368636	ExpressionStatement	addr_changed ( )	514:8:13384:13398	2368440	8	True				
ANR	2368637	CallExpression	addr_changed ( )		2368440	0					
ANR	2368638	Callee	addr_changed		2368440	0					
ANR	2368639	Identifier	addr_changed		2368440	0					
ANR	2368640	ArgumentList			2368440	1					
ANR	2368641	IfStatement	if ( this_trial <= 1024 )		2368440	9					
ANR	2368642	Condition	this_trial <= 1024	517:6:13421:13438	2368440	0	True				
ANR	2368643	RelationalExpression	this_trial <= 1024		2368440	0		<=			
ANR	2368644	Identifier	this_trial		2368440	0					
ANR	2368645	PrimaryExpression	1024		2368440	1					
ANR	2368646	CompoundStatement		54:26:1367:1367	2368440	1					
ANR	2368647	ExpressionStatement	set_priv ( old_priv )	518:3:13446:13465	2368440	0	True				
ANR	2368648	CallExpression	set_priv ( old_priv )		2368440	0					
ANR	2368649	Callee	set_priv		2368440	0					
ANR	2368650	Identifier	set_priv		2368440	0					
ANR	2368651	ArgumentList	old_priv		2368440	1					
ANR	2368652	Argument	old_priv		2368440	0					
ANR	2368653	Identifier	old_priv		2368440	0					
ANR	2368654	IfStatement	if ( bind_return_val == 0 )		2368440	10					
ANR	2368655	Condition	bind_return_val == 0	522:8:13487:13506	2368440	0	True				
ANR	2368656	EqualityExpression	bind_return_val == 0		2368440	0		==			
ANR	2368657	Identifier	bind_return_val		2368440	0					
ANR	2368658	PrimaryExpression	0		2368440	1					
ANR	2368659	CompoundStatement		59:31:1436:1436	2368440	1					
ANR	2368660	ExpressionStatement	"dprintf ( D_NETWORK , ""Sock::bindWithin - bound to %d...\\n"" , this_trial - 1 )"	523:3:13526:13597	2368440	0	True				
ANR	2368661	CallExpression	"dprintf ( D_NETWORK , ""Sock::bindWithin - bound to %d...\\n"" , this_trial - 1 )"		2368440	0					
ANR	2368662	Callee	dprintf		2368440	0					
ANR	2368663	Identifier	dprintf		2368440	0					
ANR	2368664	ArgumentList	D_NETWORK		2368440	1					
ANR	2368665	Argument	D_NETWORK		2368440	0					
ANR	2368666	Identifier	D_NETWORK		2368440	0					
ANR	2368667	Argument	"""Sock::bindWithin - bound to %d...\\n"""		2368440	1					
ANR	2368668	PrimaryExpression	"""Sock::bindWithin - bound to %d...\\n"""		2368440	0					
ANR	2368669	Argument	this_trial - 1		2368440	2					
ANR	2368670	AdditiveExpression	this_trial - 1		2368440	0		-			
ANR	2368671	Identifier	this_trial		2368440	0					
ANR	2368672	PrimaryExpression	1		2368440	1					
ANR	2368673	ReturnStatement	return TRUE ;	524:3:13602:13613	2368440	1	True				
ANR	2368674	Identifier	TRUE		2368440	0					
ANR	2368675	ElseStatement	else		2368440	0					
ANR	2368676	CompoundStatement		64:3:1568:1597	2368440	0					
ANR	2368677	IdentifierDeclStatement	int error = WSAGetLastError ( ) ;	527:3:13642:13671	2368440	0	True				
ANR	2368678	IdentifierDecl	error = WSAGetLastError ( )		2368440	0					
ANR	2368679	IdentifierDeclType	int		2368440	0					
ANR	2368680	Identifier	error		2368440	1					
ANR	2368681	AssignmentExpression	error = WSAGetLastError ( )		2368440	2		=			
ANR	2368682	Identifier	error		2368440	0					
ANR	2368683	CallExpression	WSAGetLastError ( )		2368440	1					
ANR	2368684	Callee	WSAGetLastError		2368440	0					
ANR	2368685	Identifier	WSAGetLastError		2368440	0					
ANR	2368686	ArgumentList			2368440	1					
ANR	2368687	ExpressionStatement	"dprintf ( D_NETWORK , ""Sock::bindWithin - failed to bind to port %d: WSAError = %d\\n"" , this_trial - 1 , error )"	528:3:13676:13786	2368440	1	True				
ANR	2368688	CallExpression	"dprintf ( D_NETWORK , ""Sock::bindWithin - failed to bind to port %d: WSAError = %d\\n"" , this_trial - 1 , error )"		2368440	0					
ANR	2368689	Callee	dprintf		2368440	0					
ANR	2368690	Identifier	dprintf		2368440	0					
ANR	2368691	ArgumentList	D_NETWORK		2368440	1					
ANR	2368692	Argument	D_NETWORK		2368440	0					
ANR	2368693	Identifier	D_NETWORK		2368440	0					
ANR	2368694	Argument	"""Sock::bindWithin - failed to bind to port %d: WSAError = %d\\n"""		2368440	1					
ANR	2368695	PrimaryExpression	"""Sock::bindWithin - failed to bind to port %d: WSAError = %d\\n"""		2368440	0					
ANR	2368696	Argument	this_trial - 1		2368440	2					
ANR	2368697	AdditiveExpression	this_trial - 1		2368440	0		-			
ANR	2368698	Identifier	this_trial		2368440	0					
ANR	2368699	PrimaryExpression	1		2368440	1					
ANR	2368700	Argument	error		2368440	3					
ANR	2368701	Identifier	error		2368440	0					
ANR	2368702	IfStatement	if ( this_trial > high_port )		2368440	11					
ANR	2368703	Condition	this_trial > high_port	535:7:13921:13942	2368440	0	True				
ANR	2368704	RelationalExpression	this_trial > high_port		2368440	0		>			
ANR	2368705	Identifier	this_trial		2368440	0					
ANR	2368706	Identifier	high_port		2368440	1					
ANR	2368707	ExpressionStatement	this_trial = low_port	536:3:13949:13970	2368440	1	True				
ANR	2368708	AssignmentExpression	this_trial = low_port		2368440	0		=			
ANR	2368709	Identifier	this_trial		2368440	0					
ANR	2368710	Identifier	low_port		2368440	1					
ANR	2368711	Condition	this_trial != start_trial	537:9:13981:14005	2368440	1	True				
ANR	2368712	EqualityExpression	this_trial != start_trial		2368440	0		!=			
ANR	2368713	Identifier	this_trial		2368440	0					
ANR	2368714	Identifier	start_trial		2368440	1					
ANR	2368715	ExpressionStatement	"dprintf ( D_ALWAYS , ""Sock::bindWithin - failed to bind any port within (%d ~ %d)\\n"" , low_port , high_port )"	539:1:14011:14123	2368440	8	True				
ANR	2368716	CallExpression	"dprintf ( D_ALWAYS , ""Sock::bindWithin - failed to bind any port within (%d ~ %d)\\n"" , low_port , high_port )"		2368440	0					
ANR	2368717	Callee	dprintf		2368440	0					
ANR	2368718	Identifier	dprintf		2368440	0					
ANR	2368719	ArgumentList	D_ALWAYS		2368440	1					
ANR	2368720	Argument	D_ALWAYS		2368440	0					
ANR	2368721	Identifier	D_ALWAYS		2368440	0					
ANR	2368722	Argument	"""Sock::bindWithin - failed to bind any port within (%d ~ %d)\\n"""		2368440	1					
ANR	2368723	PrimaryExpression	"""Sock::bindWithin - failed to bind any port within (%d ~ %d)\\n"""		2368440	0					
ANR	2368724	Argument	low_port		2368440	2					
ANR	2368725	Identifier	low_port		2368440	0					
ANR	2368726	Argument	high_port		2368440	3					
ANR	2368727	Identifier	high_port		2368440	0					
ANR	2368728	ReturnStatement	return FALSE ;	542:1:14127:14139	2368440	9	True				
ANR	2368729	Identifier	FALSE		2368440	0					
ANR	2368730	ReturnType	int		2368440	1					
ANR	2368731	Identifier	Sock :: bindWithin		2368440	2					
ANR	2368732	ParameterList	"const int low_port , const int high_port , bool outbound"		2368440	3					
ANR	2368733	Parameter	const int low_port	463:17:12017:12034	2368440	0	True				
ANR	2368734	ParameterType	const int		2368440	0					
ANR	2368735	Identifier	low_port		2368440	1					
ANR	2368736	Parameter	const int high_port	463:37:12037:12055	2368440	1	True				
ANR	2368737	ParameterType	const int		2368440	0					
ANR	2368738	Identifier	high_port		2368440	1					
ANR	2368739	Parameter	bool outbound	463:58:12058:12070	2368440	2	True				
ANR	2368740	ParameterType	bool		2368440	0					
ANR	2368741	Identifier	outbound		2368440	1					
ANR	2368742	CFGEntryNode	ENTRY		2368440		True				
ANR	2368743	CFGExitNode	EXIT		2368440		True				
ANR	2368744	Symbol	curTime . tv_usec		2368440						
ANR	2368745	Symbol	start_trial		2368440						
ANR	2368746	Symbol	range		2368440						
ANR	2368747	Symbol	error		2368440						
ANR	2368748	Symbol	PRIV_UNKNOWN		2368440						
ANR	2368749	Symbol	high_port		2368440						
ANR	2368750	Symbol	_condor_bind_all_interfaces		2368440						
ANR	2368751	Symbol	old_priv		2368440						
ANR	2368752	Symbol	addr . is_ipv4		2368440						
ANR	2368753	Symbol	_sock		2368440						
ANR	2368754	Symbol	outbound		2368440						
ANR	2368755	Symbol	bind_all		2368440						
ANR	2368756	Symbol	addr		2368440						
ANR	2368757	Symbol	low_port		2368440						
ANR	2368758	Symbol	& curTime		2368440						
ANR	2368759	Symbol	NULL		2368440						
ANR	2368760	Symbol	this_trial		2368440						
ANR	2368761	Symbol	false		2368440						
ANR	2368762	Symbol	D_ALWAYS		2368440						
ANR	2368763	Symbol	TRUE		2368440						
ANR	2368764	Symbol	WSAGetLastError		2368440						
ANR	2368765	Symbol	set_root_priv		2368440						
ANR	2368766	Symbol	bind_return_val		2368440						
ANR	2368767	Symbol	_bind_helper		2368440						
ANR	2368768	Symbol	_condor_is_ipv6_mode		2368440						
ANR	2368769	Symbol	ipv6_mode		2368440						
ANR	2368770	Symbol	curTime		2368440						
ANR	2368771	Symbol	get_local_ipaddr		2368440						
ANR	2368772	Symbol	D_NETWORK		2368440						
ANR	2368773	Symbol	FALSE		2368440						
ANR	2368774	Function	Sock :: bind	546:0:14145:18191							
ANR	2368775	FunctionDef	"Sock :: bind (bool outbound , int port , bool loopback)"		2368774	0					
ANR	2368776	CompoundStatement		547:0:14200:18191	2368774	0					
ANR	2368777	IdentifierDeclStatement	condor_sockaddr addr ;	548:1:14203:14223	2368774	0	True				
ANR	2368778	IdentifierDecl	addr		2368774	0					
ANR	2368779	IdentifierDeclType	condor_sockaddr		2368774	0					
ANR	2368780	Identifier	addr		2368774	1					
ANR	2368781	IdentifierDeclStatement	int bind_return_value ;	549:1:14226:14247	2368774	1	True				
ANR	2368782	IdentifierDecl	bind_return_value		2368774	0					
ANR	2368783	IdentifierDeclType	int		2368774	0					
ANR	2368784	Identifier	bind_return_value		2368774	1					
ANR	2368785	IfStatement	if ( port < 0 )		2368774	2					
ANR	2368786	Condition	port < 0	554:5:14415:14422	2368774	0	True				
ANR	2368787	RelationalExpression	port < 0		2368774	0		<			
ANR	2368788	Identifier	port		2368774	0					
ANR	2368789	PrimaryExpression	0		2368774	1					
ANR	2368790	CompoundStatement		8:15:224:224	2368774	1					
ANR	2368791	ExpressionStatement	"dprintf ( D_ALWAYS , ""Sock::bind - invalid port %d\\n"" , port )"	555:8:14435:14492	2368774	0	True				
ANR	2368792	CallExpression	"dprintf ( D_ALWAYS , ""Sock::bind - invalid port %d\\n"" , port )"		2368774	0					
ANR	2368793	Callee	dprintf		2368774	0					
ANR	2368794	Identifier	dprintf		2368774	0					
ANR	2368795	ArgumentList	D_ALWAYS		2368774	1					
ANR	2368796	Argument	D_ALWAYS		2368774	0					
ANR	2368797	Identifier	D_ALWAYS		2368774	0					
ANR	2368798	Argument	"""Sock::bind - invalid port %d\\n"""		2368774	1					
ANR	2368799	PrimaryExpression	"""Sock::bind - invalid port %d\\n"""		2368774	0					
ANR	2368800	Argument	port		2368774	2					
ANR	2368801	Identifier	port		2368774	0					
ANR	2368802	ReturnStatement	return FALSE ;	556:8:14502:14514	2368774	1	True				
ANR	2368803	Identifier	FALSE		2368774	0					
ANR	2368804	IfStatement	if ( _state == sock_virgin )		2368774	3					
ANR	2368805	Condition	_state == sock_virgin	560:5:14579:14599	2368774	0	True				
ANR	2368806	EqualityExpression	_state == sock_virgin		2368774	0		==			
ANR	2368807	Identifier	_state		2368774	0					
ANR	2368808	Identifier	sock_virgin		2368774	1					
ANR	2368809	ExpressionStatement	assign ( )	560:28:14602:14610	2368774	1	True				
ANR	2368810	CallExpression	assign ( )		2368774	0					
ANR	2368811	Callee	assign		2368774	0					
ANR	2368812	Identifier	assign		2368774	0					
ANR	2368813	ArgumentList			2368774	1					
ANR	2368814	IfStatement	if ( _state != sock_assigned )		2368774	4					
ANR	2368815	Condition	_state != sock_assigned	562:5:14618:14640	2368774	0	True				
ANR	2368816	EqualityExpression	_state != sock_assigned		2368774	0		!=			
ANR	2368817	Identifier	_state		2368774	0					
ANR	2368818	Identifier	sock_assigned		2368774	1					
ANR	2368819	CompoundStatement		16:30:442:442	2368774	1					
ANR	2368820	ExpressionStatement	"dprintf ( D_ALWAYS , ""Sock::bind - _state is not correct\\n"" )"	563:2:14647:14704	2368774	0	True				
ANR	2368821	CallExpression	"dprintf ( D_ALWAYS , ""Sock::bind - _state is not correct\\n"" )"		2368774	0					
ANR	2368822	Callee	dprintf		2368774	0					
ANR	2368823	Identifier	dprintf		2368774	0					
ANR	2368824	ArgumentList	D_ALWAYS		2368774	1					
ANR	2368825	Argument	D_ALWAYS		2368774	0					
ANR	2368826	Identifier	D_ALWAYS		2368774	0					
ANR	2368827	Argument	"""Sock::bind - _state is not correct\\n"""		2368774	1					
ANR	2368828	PrimaryExpression	"""Sock::bind - _state is not correct\\n"""		2368774	0					
ANR	2368829	ReturnStatement	return FALSE ;	564:2:14708:14720	2368774	1	True				
ANR	2368830	Identifier	FALSE		2368774	0					
ANR	2368831	IdentifierDeclStatement	"int lowPort , highPort ;"	596:1:16122:16143	2368774	5	True				
ANR	2368832	IdentifierDecl	lowPort		2368774	0					
ANR	2368833	IdentifierDeclType	int		2368774	0					
ANR	2368834	Identifier	lowPort		2368774	1					
ANR	2368835	IdentifierDecl	highPort		2368774	1					
ANR	2368836	IdentifierDeclType	int		2368774	0					
ANR	2368837	Identifier	highPort		2368774	1					
ANR	2368838	IfStatement	"if ( port == 0 && ! loopback && get_port_range ( ( int ) outbound , & lowPort , & highPort ) == TRUE )"		2368774	6					
ANR	2368839	Condition	"port == 0 && ! loopback && get_port_range ( ( int ) outbound , & lowPort , & highPort ) == TRUE"	597:6:16151:16234	2368774	0	True				
ANR	2368840	AndExpression	"port == 0 && ! loopback && get_port_range ( ( int ) outbound , & lowPort , & highPort ) == TRUE"		2368774	0		&&			
ANR	2368841	EqualityExpression	port == 0		2368774	0		==			
ANR	2368842	Identifier	port		2368774	0					
ANR	2368843	PrimaryExpression	0		2368774	1					
ANR	2368844	AndExpression	"! loopback && get_port_range ( ( int ) outbound , & lowPort , & highPort ) == TRUE"		2368774	1		&&			
ANR	2368845	UnaryOperationExpression	! loopback		2368774	0					
ANR	2368846	UnaryOperator	!		2368774	0					
ANR	2368847	Identifier	loopback		2368774	1					
ANR	2368848	EqualityExpression	"get_port_range ( ( int ) outbound , & lowPort , & highPort ) == TRUE"		2368774	1		==			
ANR	2368849	CallExpression	"get_port_range ( ( int ) outbound , & lowPort , & highPort )"		2368774	0					
ANR	2368850	Callee	get_port_range		2368774	0					
ANR	2368851	Identifier	get_port_range		2368774	0					
ANR	2368852	ArgumentList	( int ) outbound		2368774	1					
ANR	2368853	Argument	( int ) outbound		2368774	0					
ANR	2368854	CastExpression	( int ) outbound		2368774	0					
ANR	2368855	CastTarget	int		2368774	0					
ANR	2368856	Identifier	outbound		2368774	1					
ANR	2368857	Argument	& lowPort		2368774	1					
ANR	2368858	UnaryOperationExpression	& lowPort		2368774	0					
ANR	2368859	UnaryOperator	&		2368774	0					
ANR	2368860	Identifier	lowPort		2368774	1					
ANR	2368861	Argument	& highPort		2368774	2					
ANR	2368862	UnaryOperationExpression	& highPort		2368774	0					
ANR	2368863	UnaryOperator	&		2368774	0					
ANR	2368864	Identifier	highPort		2368774	1					
ANR	2368865	Identifier	TRUE		2368774	1					
ANR	2368866	CompoundStatement		51:93:2037:2037	2368774	1					
ANR	2368867	IfStatement	"if ( bindWithin ( lowPort , highPort , outbound ) != TRUE )"		2368774	0					
ANR	2368868	Condition	"bindWithin ( lowPort , highPort , outbound ) != TRUE"	599:7:16284:16330	2368774	0	True				
ANR	2368869	EqualityExpression	"bindWithin ( lowPort , highPort , outbound ) != TRUE"		2368774	0		!=			
ANR	2368870	CallExpression	"bindWithin ( lowPort , highPort , outbound )"		2368774	0					
ANR	2368871	Callee	bindWithin		2368774	0					
ANR	2368872	Identifier	bindWithin		2368774	0					
ANR	2368873	ArgumentList	lowPort		2368774	1					
ANR	2368874	Argument	lowPort		2368774	0					
ANR	2368875	Identifier	lowPort		2368774	0					
ANR	2368876	Argument	highPort		2368774	1					
ANR	2368877	Identifier	highPort		2368774	0					
ANR	2368878	Argument	outbound		2368774	2					
ANR	2368879	Identifier	outbound		2368774	0					
ANR	2368880	Identifier	TRUE		2368774	1					
ANR	2368881	CompoundStatement		53:57:2133:2133	2368774	1					
ANR	2368882	ReturnStatement	return FALSE ;	600:3:16339:16351	2368774	0	True				
ANR	2368883	Identifier	FALSE		2368774	0					
ANR	2368884	ElseStatement	else		2368774	0					
ANR	2368885	CompoundStatement		88:8:2880:2902	2368774	0					
ANR	2368886	IfStatement	if ( _condor_is_ipv6_mode ( ) )		2368774	0					
ANR	2368887	Condition	_condor_is_ipv6_mode ( )	605:6:16404:16425	2368774	0	True				
ANR	2368888	CallExpression	_condor_is_ipv6_mode ( )		2368774	0					
ANR	2368889	Callee	_condor_is_ipv6_mode		2368774	0					
ANR	2368890	Identifier	_condor_is_ipv6_mode		2368774	0					
ANR	2368891	ArgumentList			2368774	1					
ANR	2368892	ExpressionStatement	addr . set_ipv6 ( )	606:3:16431:16446	2368774	1	True				
ANR	2368893	CallExpression	addr . set_ipv6 ( )		2368774	0					
ANR	2368894	Callee	addr . set_ipv6		2368774	0					
ANR	2368895	MemberAccess	addr . set_ipv6		2368774	0					
ANR	2368896	Identifier	addr		2368774	0					
ANR	2368897	Identifier	set_ipv6		2368774	1					
ANR	2368898	ArgumentList			2368774	1					
ANR	2368899	ElseStatement	else		2368774	0					
ANR	2368900	ExpressionStatement	addr . set_ipv4 ( )	608:3:16458:16473	2368774	0	True				
ANR	2368901	CallExpression	addr . set_ipv4 ( )		2368774	0					
ANR	2368902	Callee	addr . set_ipv4		2368774	0					
ANR	2368903	MemberAccess	addr . set_ipv4		2368774	0					
ANR	2368904	Identifier	addr		2368774	0					
ANR	2368905	Identifier	set_ipv4		2368774	1					
ANR	2368906	ArgumentList			2368774	1					
ANR	2368907	IfStatement	if ( loopback )		2368774	1					
ANR	2368908	Condition	loopback	609:6:16481:16488	2368774	0	True				
ANR	2368909	Identifier	loopback		2368774	0					
ANR	2368910	CompoundStatement		63:17:2291:2291	2368774	1					
ANR	2368911	ExpressionStatement	addr . set_loopback ( )	610:3:16497:16516	2368774	0	True				
ANR	2368912	CallExpression	addr . set_loopback ( )		2368774	0					
ANR	2368913	Callee	addr . set_loopback		2368774	0					
ANR	2368914	MemberAccess	addr . set_loopback		2368774	0					
ANR	2368915	Identifier	addr		2368774	0					
ANR	2368916	Identifier	set_loopback		2368774	1					
ANR	2368917	ArgumentList			2368774	1					
ANR	2368918	ElseStatement	else		2368774	0					
ANR	2368919	IfStatement	if ( ( bool ) _condor_bind_all_interfaces ( ) )		2368774	0					
ANR	2368920	Condition	( bool ) _condor_bind_all_interfaces ( )	611:13:16531:16565	2368774	0	True				
ANR	2368921	CastExpression	( bool ) _condor_bind_all_interfaces ( )		2368774	0					
ANR	2368922	CastTarget	bool		2368774	0					
ANR	2368923	CallExpression	_condor_bind_all_interfaces ( )		2368774	1					
ANR	2368924	Callee	_condor_bind_all_interfaces		2368774	0					
ANR	2368925	Identifier	_condor_bind_all_interfaces		2368774	0					
ANR	2368926	ArgumentList			2368774	1					
ANR	2368927	CompoundStatement		65:51:2368:2368	2368774	1					
ANR	2368928	ExpressionStatement	addr . set_addr_any ( )	612:3:16574:16593	2368774	0	True				
ANR	2368929	CallExpression	addr . set_addr_any ( )		2368774	0					
ANR	2368930	Callee	addr . set_addr_any		2368774	0					
ANR	2368931	MemberAccess	addr . set_addr_any		2368774	0					
ANR	2368932	Identifier	addr		2368774	0					
ANR	2368933	Identifier	set_addr_any		2368774	1					
ANR	2368934	ArgumentList			2368774	1					
ANR	2368935	ElseStatement	else		2368774	0					
ANR	2368936	CompoundStatement		67:9:2403:2403	2368774	0					
ANR	2368937	ExpressionStatement	addr = get_local_ipaddr ( )	614:3:16609:16634	2368774	0	True				
ANR	2368938	AssignmentExpression	addr = get_local_ipaddr ( )		2368774	0		=			
ANR	2368939	Identifier	addr		2368774	0					
ANR	2368940	CallExpression	get_local_ipaddr ( )		2368774	1					
ANR	2368941	Callee	get_local_ipaddr		2368774	0					
ANR	2368942	Identifier	get_local_ipaddr		2368774	0					
ANR	2368943	ArgumentList			2368774	1					
ANR	2368944	IfStatement	if ( addr . is_ipv4 ( ) && _condor_is_ipv6_mode ( ) )		2368774	1					
ANR	2368945	Condition	addr . is_ipv4 ( ) && _condor_is_ipv6_mode ( )	615:7:16643:16682	2368774	0	True				
ANR	2368946	AndExpression	addr . is_ipv4 ( ) && _condor_is_ipv6_mode ( )		2368774	0		&&			
ANR	2368947	CallExpression	addr . is_ipv4 ( )		2368774	0					
ANR	2368948	Callee	addr . is_ipv4		2368774	0					
ANR	2368949	MemberAccess	addr . is_ipv4		2368774	0					
ANR	2368950	Identifier	addr		2368774	0					
ANR	2368951	Identifier	is_ipv4		2368774	1					
ANR	2368952	ArgumentList			2368774	1					
ANR	2368953	CallExpression	_condor_is_ipv6_mode ( )		2368774	1					
ANR	2368954	Callee	_condor_is_ipv6_mode		2368774	0					
ANR	2368955	Identifier	_condor_is_ipv6_mode		2368774	0					
ANR	2368956	ArgumentList			2368774	1					
ANR	2368957	ExpressionStatement	addr . convert_to_ipv6 ( )	616:4:16689:16711	2368774	1	True				
ANR	2368958	CallExpression	addr . convert_to_ipv6 ( )		2368774	0					
ANR	2368959	Callee	addr . convert_to_ipv6		2368774	0					
ANR	2368960	MemberAccess	addr . convert_to_ipv6		2368774	0					
ANR	2368961	Identifier	addr		2368774	0					
ANR	2368962	Identifier	convert_to_ipv6		2368774	1					
ANR	2368963	ArgumentList			2368774	1					
ANR	2368964	ExpressionStatement	addr . set_port ( ( unsigned short ) port )	618:2:16719:16754	2368774	2	True				
ANR	2368965	CallExpression	addr . set_port ( ( unsigned short ) port )		2368774	0					
ANR	2368966	Callee	addr . set_port		2368774	0					
ANR	2368967	MemberAccess	addr . set_port		2368774	0					
ANR	2368968	Identifier	addr		2368774	0					
ANR	2368969	Identifier	set_port		2368774	1					
ANR	2368970	ArgumentList	( unsigned short ) port		2368774	1					
ANR	2368971	Argument	( unsigned short ) port		2368774	0					
ANR	2368972	CastExpression	( unsigned short ) port		2368774	0					
ANR	2368973	CastTarget	unsigned short		2368774	0					
ANR	2368974	Identifier	port		2368774	1					
ANR	2368975	IdentifierDeclStatement	priv_state old_priv ;	621:2:16773:16792	2368774	3	True				
ANR	2368976	IdentifierDecl	old_priv		2368774	0					
ANR	2368977	IdentifierDeclType	priv_state		2368774	0					
ANR	2368978	Identifier	old_priv		2368774	1					
ANR	2368979	IfStatement	if ( port > 0 && port < 1024 )		2368774	4					
ANR	2368980	Condition	port > 0 && port < 1024	622:5:16799:16821	2368774	0	True				
ANR	2368981	AndExpression	port > 0 && port < 1024		2368774	0		&&			
ANR	2368982	RelationalExpression	port > 0		2368774	0		>			
ANR	2368983	Identifier	port		2368774	0					
ANR	2368984	PrimaryExpression	0		2368774	1					
ANR	2368985	RelationalExpression	port < 1024		2368774	1		<			
ANR	2368986	Identifier	port		2368774	0					
ANR	2368987	PrimaryExpression	1024		2368774	1					
ANR	2368988	CompoundStatement		76:30:2623:2623	2368774	1					
ANR	2368989	ExpressionStatement	old_priv = PRIV_UNKNOWN	624:3:16896:16919	2368774	0	True				
ANR	2368990	AssignmentExpression	old_priv = PRIV_UNKNOWN		2368774	0		=			
ANR	2368991	Identifier	old_priv		2368774	0					
ANR	2368992	Identifier	PRIV_UNKNOWN		2368774	1					
ANR	2368993	ExpressionStatement	old_priv = set_root_priv ( )	625:3:16924:16950	2368774	1	True				
ANR	2368994	AssignmentExpression	old_priv = set_root_priv ( )		2368774	0		=			
ANR	2368995	Identifier	old_priv		2368774	0					
ANR	2368996	CallExpression	set_root_priv ( )		2368774	1					
ANR	2368997	Callee	set_root_priv		2368774	0					
ANR	2368998	Identifier	set_root_priv		2368774	0					
ANR	2368999	ArgumentList			2368774	1					
ANR	2369000	ExpressionStatement	"bind_return_value = _bind_helper ( _sock , addr , outbound , loopback )"	629:2:16966:17031	2368774	5	True				
ANR	2369001	AssignmentExpression	"bind_return_value = _bind_helper ( _sock , addr , outbound , loopback )"		2368774	0		=			
ANR	2369002	Identifier	bind_return_value		2368774	0					
ANR	2369003	CallExpression	"_bind_helper ( _sock , addr , outbound , loopback )"		2368774	1					
ANR	2369004	Callee	_bind_helper		2368774	0					
ANR	2369005	Identifier	_bind_helper		2368774	0					
ANR	2369006	ArgumentList	_sock		2368774	1					
ANR	2369007	Argument	_sock		2368774	0					
ANR	2369008	Identifier	_sock		2368774	0					
ANR	2369009	Argument	addr		2368774	1					
ANR	2369010	Identifier	addr		2368774	0					
ANR	2369011	Argument	outbound		2368774	2					
ANR	2369012	Identifier	outbound		2368774	0					
ANR	2369013	Argument	loopback		2368774	3					
ANR	2369014	Identifier	loopback		2368774	0					
ANR	2369015	ExpressionStatement	addr_changed ( )	631:8:17042:17056	2368774	6	True				
ANR	2369016	CallExpression	addr_changed ( )		2368774	0					
ANR	2369017	Callee	addr_changed		2368774	0					
ANR	2369018	Identifier	addr_changed		2368774	0					
ANR	2369019	ArgumentList			2368774	1					
ANR	2369020	IdentifierDeclStatement	int bind_errno = errno ;	634:8:17081:17103	2368774	7	True				
ANR	2369021	IdentifierDecl	bind_errno = errno		2368774	0					
ANR	2369022	IdentifierDeclType	int		2368774	0					
ANR	2369023	Identifier	bind_errno		2368774	1					
ANR	2369024	AssignmentExpression	bind_errno = errno		2368774	2		=			
ANR	2369025	Identifier	errno		2368774	0					
ANR	2369026	Identifier	errno		2368774	1					
ANR	2369027	IfStatement	if ( port > 0 && port < 1024 )		2368774	8					
ANR	2369028	Condition	port > 0 && port < 1024	635:5:17110:17132	2368774	0	True				
ANR	2369029	AndExpression	port > 0 && port < 1024		2368774	0		&&			
ANR	2369030	RelationalExpression	port > 0		2368774	0		>			
ANR	2369031	Identifier	port		2368774	0					
ANR	2369032	PrimaryExpression	0		2368774	1					
ANR	2369033	RelationalExpression	port < 1024		2368774	1		<			
ANR	2369034	Identifier	port		2368774	0					
ANR	2369035	PrimaryExpression	1024		2368774	1					
ANR	2369036	CompoundStatement		89:30:2934:2934	2368774	1					
ANR	2369037	ExpressionStatement	set_priv ( old_priv )	636:3:17140:17159	2368774	0	True				
ANR	2369038	CallExpression	set_priv ( old_priv )		2368774	0					
ANR	2369039	Callee	set_priv		2368774	0					
ANR	2369040	Identifier	set_priv		2368774	0					
ANR	2369041	ArgumentList	old_priv		2368774	1					
ANR	2369042	Argument	old_priv		2368774	0					
ANR	2369043	Identifier	old_priv		2368774	0					
ANR	2369044	IfStatement	if ( bind_return_value < 0 )		2368774	9					
ANR	2369045	Condition	bind_return_value < 0	639:7:17179:17199	2368774	0	True				
ANR	2369046	RelationalExpression	bind_return_value < 0		2368774	0		<			
ANR	2369047	Identifier	bind_return_value		2368774	0					
ANR	2369048	PrimaryExpression	0		2368774	1					
ANR	2369049	CompoundStatement		95:3:3020:3049	2368774	1					
ANR	2369050	IdentifierDeclStatement	int error = WSAGetLastError ( ) ;	641:3:17221:17250	2368774	0	True				
ANR	2369051	IdentifierDecl	error = WSAGetLastError ( )		2368774	0					
ANR	2369052	IdentifierDeclType	int		2368774	0					
ANR	2369053	Identifier	error		2368774	1					
ANR	2369054	AssignmentExpression	error = WSAGetLastError ( )		2368774	2		=			
ANR	2369055	Identifier	error		2368774	0					
ANR	2369056	CallExpression	WSAGetLastError ( )		2368774	1					
ANR	2369057	Callee	WSAGetLastError		2368774	0					
ANR	2369058	Identifier	WSAGetLastError		2368774	0					
ANR	2369059	ArgumentList			2368774	1					
ANR	2369060	ExpressionStatement	"dprintf ( D_ALWAYS , ""Sock::bind failed: WSAError = %d\\n"" , error )"	642:3:17255:17319	2368774	1	True				
ANR	2369061	CallExpression	"dprintf ( D_ALWAYS , ""Sock::bind failed: WSAError = %d\\n"" , error )"		2368774	0					
ANR	2369062	Callee	dprintf		2368774	0					
ANR	2369063	Identifier	dprintf		2368774	0					
ANR	2369064	ArgumentList	D_ALWAYS		2368774	1					
ANR	2369065	Argument	D_ALWAYS		2368774	0					
ANR	2369066	Identifier	D_ALWAYS		2368774	0					
ANR	2369067	Argument	"""Sock::bind failed: WSAError = %d\\n"""		2368774	1					
ANR	2369068	PrimaryExpression	"""Sock::bind failed: WSAError = %d\\n"""		2368774	0					
ANR	2369069	Argument	error		2368774	2					
ANR	2369070	Identifier	error		2368774	0					
ANR	2369071	ReturnStatement	return FALSE ;	646:3:17433:17445	2368774	2	True				
ANR	2369072	Identifier	FALSE		2368774	0					
ANR	2369073	ExpressionStatement	_state = sock_bound	650:1:17456:17475	2368774	7	True				
ANR	2369074	AssignmentExpression	_state = sock_bound		2368774	0		=			
ANR	2369075	Identifier	_state		2368774	0					
ANR	2369076	Identifier	sock_bound		2368774	1					
ANR	2369077	IfStatement	if ( type ( ) == Stream :: reli_sock )		2368774	8					
ANR	2369078	Condition	type ( ) == Stream :: reli_sock	656:6:17707:17733	2368774	0	True				
ANR	2369079	EqualityExpression	type ( ) == Stream :: reli_sock		2368774	0		==			
ANR	2369080	CallExpression	type ( )		2368774	0					
ANR	2369081	Callee	type		2368774	0					
ANR	2369082	Identifier	type		2368774	0					
ANR	2369083	ArgumentList			2368774	1					
ANR	2369084	Identifier	Stream :: reli_sock		2368774	1					
ANR	2369085	CompoundStatement		112:2:3572:3582	2368774	1					
ANR	2369086	IdentifierDeclStatement	"struct linger linger = { 0 , 0 } ;"	657:2:17741:17769	2368774	0	True				
ANR	2369087	IdentifierDecl	"linger = { 0 , 0 }"		2368774	0					
ANR	2369088	IdentifierDeclType	struct linger		2368774	0					
ANR	2369089	Identifier	linger		2368774	1					
ANR	2369090	AssignmentExpression	"linger = { 0 , 0 }"		2368774	2		=			
ANR	2369091	Identifier	linger		2368774	0					
ANR	2369092	InitializerList	0		2368774	1					
ANR	2369093	PrimaryExpression	0		2368774	0					
ANR	2369094	PrimaryExpression	0		2368774	1					
ANR	2369095	IdentifierDeclStatement	int on = 1 ;	658:2:17773:17783	2368774	1	True				
ANR	2369096	IdentifierDecl	on = 1		2368774	0					
ANR	2369097	IdentifierDeclType	int		2368774	0					
ANR	2369098	Identifier	on		2368774	1					
ANR	2369099	AssignmentExpression	on = 1		2368774	2		=			
ANR	2369100	Identifier	on		2368774	0					
ANR	2369101	PrimaryExpression	1		2368774	1					
ANR	2369102	ExpressionStatement	"setsockopt ( SOL_SOCKET , SO_LINGER , ( char * ) & linger , sizeof ( linger ) )"	659:2:17787:17852	2368774	2	True				
ANR	2369103	CallExpression	"setsockopt ( SOL_SOCKET , SO_LINGER , ( char * ) & linger , sizeof ( linger ) )"		2368774	0					
ANR	2369104	Callee	setsockopt		2368774	0					
ANR	2369105	Identifier	setsockopt		2368774	0					
ANR	2369106	ArgumentList	SOL_SOCKET		2368774	1					
ANR	2369107	Argument	SOL_SOCKET		2368774	0					
ANR	2369108	Identifier	SOL_SOCKET		2368774	0					
ANR	2369109	Argument	SO_LINGER		2368774	1					
ANR	2369110	Identifier	SO_LINGER		2368774	0					
ANR	2369111	Argument	( char * ) & linger		2368774	2					
ANR	2369112	CastExpression	( char * ) & linger		2368774	0					
ANR	2369113	CastTarget	char *		2368774	0					
ANR	2369114	UnaryOperationExpression	& linger		2368774	1					
ANR	2369115	UnaryOperator	&		2368774	0					
ANR	2369116	Identifier	linger		2368774	1					
ANR	2369117	Argument	sizeof ( linger )		2368774	3					
ANR	2369118	SizeofExpression	sizeof ( linger )		2368774	0					
ANR	2369119	Sizeof	sizeof		2368774	0					
ANR	2369120	SizeofOperand	linger		2368774	1					
ANR	2369121	ExpressionStatement	"setsockopt ( SOL_SOCKET , SO_KEEPALIVE , ( char * ) & on , sizeof ( on ) )"	660:2:17856:17916	2368774	3	True				
ANR	2369122	CallExpression	"setsockopt ( SOL_SOCKET , SO_KEEPALIVE , ( char * ) & on , sizeof ( on ) )"		2368774	0					
ANR	2369123	Callee	setsockopt		2368774	0					
ANR	2369124	Identifier	setsockopt		2368774	0					
ANR	2369125	ArgumentList	SOL_SOCKET		2368774	1					
ANR	2369126	Argument	SOL_SOCKET		2368774	0					
ANR	2369127	Identifier	SOL_SOCKET		2368774	0					
ANR	2369128	Argument	SO_KEEPALIVE		2368774	1					
ANR	2369129	Identifier	SO_KEEPALIVE		2368774	0					
ANR	2369130	Argument	( char * ) & on		2368774	2					
ANR	2369131	CastExpression	( char * ) & on		2368774	0					
ANR	2369132	CastTarget	char *		2368774	0					
ANR	2369133	UnaryOperationExpression	& on		2368774	1					
ANR	2369134	UnaryOperator	&		2368774	0					
ANR	2369135	Identifier	on		2368774	1					
ANR	2369136	Argument	sizeof ( on )		2368774	3					
ANR	2369137	SizeofExpression	sizeof ( on )		2368774	0					
ANR	2369138	Sizeof	sizeof		2368774	0					
ANR	2369139	SizeofOperand	on		2368774	1					
ANR	2369140	ExpressionStatement	"setsockopt ( IPPROTO_TCP , TCP_NODELAY , ( char * ) & on , sizeof ( on ) )"	665:2:18111:18171	2368774	4	True				
ANR	2369141	CallExpression	"setsockopt ( IPPROTO_TCP , TCP_NODELAY , ( char * ) & on , sizeof ( on ) )"		2368774	0					
ANR	2369142	Callee	setsockopt		2368774	0					
ANR	2369143	Identifier	setsockopt		2368774	0					
ANR	2369144	ArgumentList	IPPROTO_TCP		2368774	1					
ANR	2369145	Argument	IPPROTO_TCP		2368774	0					
ANR	2369146	Identifier	IPPROTO_TCP		2368774	0					
ANR	2369147	Argument	TCP_NODELAY		2368774	1					
ANR	2369148	Identifier	TCP_NODELAY		2368774	0					
ANR	2369149	Argument	( char * ) & on		2368774	2					
ANR	2369150	CastExpression	( char * ) & on		2368774	0					
ANR	2369151	CastTarget	char *		2368774	0					
ANR	2369152	UnaryOperationExpression	& on		2368774	1					
ANR	2369153	UnaryOperator	&		2368774	0					
ANR	2369154	Identifier	on		2368774	1					
ANR	2369155	Argument	sizeof ( on )		2368774	3					
ANR	2369156	SizeofExpression	sizeof ( on )		2368774	0					
ANR	2369157	Sizeof	sizeof		2368774	0					
ANR	2369158	SizeofOperand	on		2368774	1					
ANR	2369159	ReturnStatement	return TRUE ;	668:1:18178:18189	2368774	9	True				
ANR	2369160	Identifier	TRUE		2368774	0					
ANR	2369161	ReturnType	int		2368774	1					
ANR	2369162	Identifier	Sock :: bind		2368774	2					
ANR	2369163	ParameterList	"bool outbound , int port , bool loopback"		2368774	3					
ANR	2369164	Parameter	bool outbound	546:15:14160:14172	2368774	0	True				
ANR	2369165	ParameterType	bool		2368774	0					
ANR	2369166	Identifier	outbound		2368774	1					
ANR	2369167	Parameter	int port	546:30:14175:14182	2368774	1	True				
ANR	2369168	ParameterType	int		2368774	0					
ANR	2369169	Identifier	port		2368774	1					
ANR	2369170	Parameter	bool loopback	546:40:14185:14197	2368774	2	True				
ANR	2369171	ParameterType	bool		2368774	0					
ANR	2369172	Identifier	loopback		2368774	1					
ANR	2369173	CFGEntryNode	ENTRY		2368774		True				
ANR	2369174	CFGExitNode	EXIT		2368774		True				
ANR	2369175	Symbol	& highPort		2368774						
ANR	2369176	Symbol	highPort		2368774						
ANR	2369177	Symbol	lowPort		2368774						
ANR	2369178	Symbol	& on		2368774						
ANR	2369179	Symbol	get_port_range		2368774						
ANR	2369180	Symbol	error		2368774						
ANR	2369181	Symbol	type		2368774						
ANR	2369182	Symbol	TCP_NODELAY		2368774						
ANR	2369183	Symbol	PRIV_UNKNOWN		2368774						
ANR	2369184	Symbol	_condor_bind_all_interfaces		2368774						
ANR	2369185	Symbol	old_priv		2368774						
ANR	2369186	Symbol	SO_LINGER		2368774						
ANR	2369187	Symbol	addr . is_ipv4		2368774						
ANR	2369188	Symbol	_sock		2368774						
ANR	2369189	Symbol	IPPROTO_TCP		2368774						
ANR	2369190	Symbol	outbound		2368774						
ANR	2369191	Symbol	SO_KEEPALIVE		2368774						
ANR	2369192	Symbol	sock_virgin		2368774						
ANR	2369193	Symbol	bindWithin		2368774						
ANR	2369194	Symbol	Stream :: reli_sock		2368774						
ANR	2369195	Symbol	addr		2368774						
ANR	2369196	Symbol	loopback		2368774						
ANR	2369197	Symbol	on		2368774						
ANR	2369198	Symbol	bind_return_value		2368774						
ANR	2369199	Symbol	errno		2368774						
ANR	2369200	Symbol	bind_errno		2368774						
ANR	2369201	Symbol	linger		2368774						
ANR	2369202	Symbol	& linger		2368774						
ANR	2369203	Symbol	D_ALWAYS		2368774						
ANR	2369204	Symbol	TRUE		2368774						
ANR	2369205	Symbol	WSAGetLastError		2368774						
ANR	2369206	Symbol	set_root_priv		2368774						
ANR	2369207	Symbol	sock_bound		2368774						
ANR	2369208	Symbol	_bind_helper		2368774						
ANR	2369209	Symbol	& lowPort		2368774						
ANR	2369210	Symbol	SOL_SOCKET		2368774						
ANR	2369211	Symbol	_condor_is_ipv6_mode		2368774						
ANR	2369212	Symbol	port		2368774						
ANR	2369213	Symbol	_state		2368774						
ANR	2369214	Symbol	sock_assigned		2368774						
ANR	2369215	Symbol	get_local_ipaddr		2368774						
ANR	2369216	Symbol	FALSE		2368774						
ANR	2369217	Function	Sock :: bind_to_loopback	671:0:18194:18290							
ANR	2369218	FunctionDef	"Sock :: bind_to_loopback (bool outbound , int port)"		2369217	0					
ANR	2369219	CompoundStatement		672:0:18246:18290	2369217	0					
ANR	2369220	ReturnStatement	"return bind ( outbound , port , true ) == TRUE ;"	673:1:18249:18288	2369217	0	True				
ANR	2369221	EqualityExpression	"bind ( outbound , port , true ) == TRUE"		2369217	0		==			
ANR	2369222	CallExpression	"bind ( outbound , port , true )"		2369217	0					
ANR	2369223	Callee	bind		2369217	0					
ANR	2369224	Identifier	bind		2369217	0					
ANR	2369225	ArgumentList	outbound		2369217	1					
ANR	2369226	Argument	outbound		2369217	0					
ANR	2369227	Identifier	outbound		2369217	0					
ANR	2369228	Argument	port		2369217	1					
ANR	2369229	Identifier	port		2369217	0					
ANR	2369230	Argument	true		2369217	2					
ANR	2369231	Identifier	true		2369217	0					
ANR	2369232	Identifier	TRUE		2369217	1					
ANR	2369233	ReturnType	bool		2369217	1					
ANR	2369234	Identifier	Sock :: bind_to_loopback		2369217	2					
ANR	2369235	ParameterList	"bool outbound , int port"		2369217	3					
ANR	2369236	Parameter	bool outbound	671:28:18222:18234	2369217	0	True				
ANR	2369237	ParameterType	bool		2369217	0					
ANR	2369238	Identifier	outbound		2369217	1					
ANR	2369239	Parameter	int port	671:42:18236:18243	2369217	1	True				
ANR	2369240	ParameterType	int		2369217	0					
ANR	2369241	Identifier	port		2369217	1					
ANR	2369242	CFGEntryNode	ENTRY		2369217		True				
ANR	2369243	CFGExitNode	EXIT		2369217		True				
ANR	2369244	Symbol	bind		2369217						
ANR	2369245	Symbol	port		2369217						
ANR	2369246	Symbol	outbound		2369217						
ANR	2369247	Symbol	true		2369217						
ANR	2369248	Symbol	TRUE		2369217						
ANR	2369249	Function	Sock :: set_os_buffers	676:0:18293:19731							
ANR	2369250	FunctionDef	"Sock :: set_os_buffers (int desired_size , bool set_write_buf)"		2369249	0					
ANR	2369251	CompoundStatement		677:0:18356:19731	2369249	0					
ANR	2369252	IdentifierDeclStatement	int current_size = 0 ;	678:1:18359:18379	2369249	0	True				
ANR	2369253	IdentifierDecl	current_size = 0		2369249	0					
ANR	2369254	IdentifierDeclType	int		2369249	0					
ANR	2369255	Identifier	current_size		2369249	1					
ANR	2369256	AssignmentExpression	current_size = 0		2369249	2		=			
ANR	2369257	Identifier	current_size		2369249	0					
ANR	2369258	PrimaryExpression	0		2369249	1					
ANR	2369259	IdentifierDeclStatement	int previous_size = 0 ;	679:1:18382:18403	2369249	1	True				
ANR	2369260	IdentifierDecl	previous_size = 0		2369249	0					
ANR	2369261	IdentifierDeclType	int		2369249	0					
ANR	2369262	Identifier	previous_size		2369249	1					
ANR	2369263	AssignmentExpression	previous_size = 0		2369249	2		=			
ANR	2369264	Identifier	previous_size		2369249	0					
ANR	2369265	PrimaryExpression	0		2369249	1					
ANR	2369266	IdentifierDeclStatement	int attempt_size = 0 ;	680:1:18406:18426	2369249	2	True				
ANR	2369267	IdentifierDecl	attempt_size = 0		2369249	0					
ANR	2369268	IdentifierDeclType	int		2369249	0					
ANR	2369269	Identifier	attempt_size		2369249	1					
ANR	2369270	AssignmentExpression	attempt_size = 0		2369249	2		=			
ANR	2369271	Identifier	attempt_size		2369249	0					
ANR	2369272	PrimaryExpression	0		2369249	1					
ANR	2369273	IdentifierDeclStatement	int command ;	681:1:18429:18440	2369249	3	True				
ANR	2369274	IdentifierDecl	command		2369249	0					
ANR	2369275	IdentifierDeclType	int		2369249	0					
ANR	2369276	Identifier	command		2369249	1					
ANR	2369277	IdentifierDeclStatement	SOCKET_LENGTH_TYPE temp ;	682:1:18443:18466	2369249	4	True				
ANR	2369278	IdentifierDecl	temp		2369249	0					
ANR	2369279	IdentifierDeclType	SOCKET_LENGTH_TYPE		2369249	0					
ANR	2369280	Identifier	temp		2369249	1					
ANR	2369281	IfStatement	if ( _state == sock_virgin )		2369249	5					
ANR	2369282	Condition	_state == sock_virgin	684:5:18474:18494	2369249	0	True				
ANR	2369283	EqualityExpression	_state == sock_virgin		2369249	0		==			
ANR	2369284	Identifier	_state		2369249	0					
ANR	2369285	Identifier	sock_virgin		2369249	1					
ANR	2369286	ExpressionStatement	assign ( )	684:28:18497:18505	2369249	1	True				
ANR	2369287	CallExpression	assign ( )		2369249	0					
ANR	2369288	Callee	assign		2369249	0					
ANR	2369289	Identifier	assign		2369249	0					
ANR	2369290	ArgumentList			2369249	1					
ANR	2369291	IfStatement	if ( set_write_buf )		2369249	6					
ANR	2369292	Condition	set_write_buf	686:6:18515:18527	2369249	0	True				
ANR	2369293	Identifier	set_write_buf		2369249	0					
ANR	2369294	CompoundStatement		10:22:174:174	2369249	1					
ANR	2369295	ExpressionStatement	command = SO_SNDBUF	687:2:18535:18554	2369249	0	True				
ANR	2369296	AssignmentExpression	command = SO_SNDBUF		2369249	0		=			
ANR	2369297	Identifier	command		2369249	0					
ANR	2369298	Identifier	SO_SNDBUF		2369249	1					
ANR	2369299	ElseStatement	else		2369249	0					
ANR	2369300	CompoundStatement		12:8:207:207	2369249	0					
ANR	2369301	ExpressionStatement	command = SO_RCVBUF	689:2:18568:18587	2369249	0	True				
ANR	2369302	AssignmentExpression	command = SO_RCVBUF		2369249	0		=			
ANR	2369303	Identifier	command		2369249	0					
ANR	2369304	Identifier	SO_RCVBUF		2369249	1					
ANR	2369305	ExpressionStatement	temp = sizeof ( int )	693:1:18647:18665	2369249	7	True				
ANR	2369306	AssignmentExpression	temp = sizeof ( int )		2369249	0		=			
ANR	2369307	Identifier	temp		2369249	0					
ANR	2369308	SizeofExpression	sizeof ( int )		2369249	1					
ANR	2369309	Sizeof	sizeof		2369249	0					
ANR	2369310	SizeofOperand	int		2369249	1					
ANR	2369311	Statement	::	694:1:18668:18669	2369249	8	True				
ANR	2369312	ExpressionStatement	"getsockopt ( _sock , SOL_SOCKET , command , ( char * ) & current_size , ( socklen_t * ) & temp )"	694:3:18670:18749	2369249	9	True				
ANR	2369313	CallExpression	"getsockopt ( _sock , SOL_SOCKET , command , ( char * ) & current_size , ( socklen_t * ) & temp )"		2369249	0					
ANR	2369314	Callee	getsockopt		2369249	0					
ANR	2369315	Identifier	getsockopt		2369249	0					
ANR	2369316	ArgumentList	_sock		2369249	1					
ANR	2369317	Argument	_sock		2369249	0					
ANR	2369318	Identifier	_sock		2369249	0					
ANR	2369319	Argument	SOL_SOCKET		2369249	1					
ANR	2369320	Identifier	SOL_SOCKET		2369249	0					
ANR	2369321	Argument	command		2369249	2					
ANR	2369322	Identifier	command		2369249	0					
ANR	2369323	Argument	( char * ) & current_size		2369249	3					
ANR	2369324	CastExpression	( char * ) & current_size		2369249	0					
ANR	2369325	CastTarget	char *		2369249	0					
ANR	2369326	UnaryOperationExpression	& current_size		2369249	1					
ANR	2369327	UnaryOperator	&		2369249	0					
ANR	2369328	Identifier	current_size		2369249	1					
ANR	2369329	Argument	( socklen_t * ) & temp		2369249	4					
ANR	2369330	CastExpression	( socklen_t * ) & temp		2369249	0					
ANR	2369331	CastTarget	socklen_t *		2369249	0					
ANR	2369332	UnaryOperationExpression	& temp		2369249	1					
ANR	2369333	UnaryOperator	&		2369249	0					
ANR	2369334	Identifier	temp		2369249	1					
ANR	2369335	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Current Socket bufsize=%dk\\n"" , current_size / 1024 )"	696:1:18752:18826	2369249	10	True				
ANR	2369336	CallExpression	"dprintf ( D_FULLDEBUG , ""Current Socket bufsize=%dk\\n"" , current_size / 1024 )"		2369249	0					
ANR	2369337	Callee	dprintf		2369249	0					
ANR	2369338	Identifier	dprintf		2369249	0					
ANR	2369339	ArgumentList	D_FULLDEBUG		2369249	1					
ANR	2369340	Argument	D_FULLDEBUG		2369249	0					
ANR	2369341	Identifier	D_FULLDEBUG		2369249	0					
ANR	2369342	Argument	"""Current Socket bufsize=%dk\\n"""		2369249	1					
ANR	2369343	PrimaryExpression	"""Current Socket bufsize=%dk\\n"""		2369249	0					
ANR	2369344	Argument	current_size / 1024		2369249	2					
ANR	2369345	MultiplicativeExpression	current_size / 1024		2369249	0		/			
ANR	2369346	Identifier	current_size		2369249	0					
ANR	2369347	PrimaryExpression	1024		2369249	1					
ANR	2369348	ExpressionStatement	current_size = 0	698:1:18829:18845	2369249	11	True				
ANR	2369349	AssignmentExpression	current_size = 0		2369249	0		=			
ANR	2369350	Identifier	current_size		2369249	0					
ANR	2369351	PrimaryExpression	0		2369249	1					
ANR	2369352	DoStatement	do		2369249	12					
ANR	2369353	CompoundStatement		34:4:923:923	2369249	0					
ANR	2369354	ExpressionStatement	attempt_size += 1024	711:2:19284:19304	2369249	0	True				
ANR	2369355	AssignmentExpression	attempt_size += 1024		2369249	0		+=			
ANR	2369356	Identifier	attempt_size		2369249	0					
ANR	2369357	PrimaryExpression	1024		2369249	1					
ANR	2369358	IfStatement	if ( attempt_size > desired_size )		2369249	1					
ANR	2369359	Condition	attempt_size > desired_size	712:7:19313:19339	2369249	0	True				
ANR	2369360	RelationalExpression	attempt_size > desired_size		2369249	0		>			
ANR	2369361	Identifier	attempt_size		2369249	0					
ANR	2369362	Identifier	desired_size		2369249	1					
ANR	2369363	CompoundStatement		36:37:986:986	2369249	1					
ANR	2369364	ExpressionStatement	attempt_size = desired_size	713:3:19348:19375	2369249	0	True				
ANR	2369365	AssignmentExpression	attempt_size = desired_size		2369249	0		=			
ANR	2369366	Identifier	attempt_size		2369249	0					
ANR	2369367	Identifier	desired_size		2369249	1					
ANR	2369368	ExpressionStatement	"( void ) setsockopt ( SOL_SOCKET , command , ( char * ) & attempt_size , sizeof ( int ) )"	715:2:19383:19467	2369249	2	True				
ANR	2369369	CastExpression	"( void ) setsockopt ( SOL_SOCKET , command , ( char * ) & attempt_size , sizeof ( int ) )"		2369249	0					
ANR	2369370	CastTarget	void		2369249	0					
ANR	2369371	CallExpression	"setsockopt ( SOL_SOCKET , command , ( char * ) & attempt_size , sizeof ( int ) )"		2369249	1					
ANR	2369372	Callee	setsockopt		2369249	0					
ANR	2369373	Identifier	setsockopt		2369249	0					
ANR	2369374	ArgumentList	SOL_SOCKET		2369249	1					
ANR	2369375	Argument	SOL_SOCKET		2369249	0					
ANR	2369376	Identifier	SOL_SOCKET		2369249	0					
ANR	2369377	Argument	command		2369249	1					
ANR	2369378	Identifier	command		2369249	0					
ANR	2369379	Argument	( char * ) & attempt_size		2369249	2					
ANR	2369380	CastExpression	( char * ) & attempt_size		2369249	0					
ANR	2369381	CastTarget	char *		2369249	0					
ANR	2369382	UnaryOperationExpression	& attempt_size		2369249	1					
ANR	2369383	UnaryOperator	&		2369249	0					
ANR	2369384	Identifier	attempt_size		2369249	1					
ANR	2369385	Argument	sizeof ( int )		2369249	3					
ANR	2369386	SizeofExpression	sizeof ( int )		2369249	0					
ANR	2369387	Sizeof	sizeof		2369249	0					
ANR	2369388	SizeofOperand	int		2369249	1					
ANR	2369389	ExpressionStatement	previous_size = current_size	718:2:19472:19500	2369249	3	True				
ANR	2369390	AssignmentExpression	previous_size = current_size		2369249	0		=			
ANR	2369391	Identifier	previous_size		2369249	0					
ANR	2369392	Identifier	current_size		2369249	1					
ANR	2369393	ExpressionStatement	temp = sizeof ( int )	719:2:19504:19522	2369249	4	True				
ANR	2369394	AssignmentExpression	temp = sizeof ( int )		2369249	0		=			
ANR	2369395	Identifier	temp		2369249	0					
ANR	2369396	SizeofExpression	sizeof ( int )		2369249	1					
ANR	2369397	Sizeof	sizeof		2369249	0					
ANR	2369398	SizeofOperand	int		2369249	1					
ANR	2369399	Statement	::	720:2:19526:19527	2369249	5	True				
ANR	2369400	ExpressionStatement	"getsockopt ( _sock , SOL_SOCKET , command , ( char * ) & current_size , ( socklen_t * ) & temp )"	720:4:19528:19617	2369249	6	True				
ANR	2369401	CallExpression	"getsockopt ( _sock , SOL_SOCKET , command , ( char * ) & current_size , ( socklen_t * ) & temp )"		2369249	0					
ANR	2369402	Callee	getsockopt		2369249	0					
ANR	2369403	Identifier	getsockopt		2369249	0					
ANR	2369404	ArgumentList	_sock		2369249	1					
ANR	2369405	Argument	_sock		2369249	0					
ANR	2369406	Identifier	_sock		2369249	0					
ANR	2369407	Argument	SOL_SOCKET		2369249	1					
ANR	2369408	Identifier	SOL_SOCKET		2369249	0					
ANR	2369409	Argument	command		2369249	2					
ANR	2369410	Identifier	command		2369249	0					
ANR	2369411	Argument	( char * ) & current_size		2369249	3					
ANR	2369412	CastExpression	( char * ) & current_size		2369249	0					
ANR	2369413	CastTarget	char *		2369249	0					
ANR	2369414	UnaryOperationExpression	& current_size		2369249	1					
ANR	2369415	UnaryOperator	&		2369249	0					
ANR	2369416	Identifier	current_size		2369249	1					
ANR	2369417	Argument	( socklen_t * ) & temp		2369249	4					
ANR	2369418	CastExpression	( socklen_t * ) & temp		2369249	0					
ANR	2369419	CastTarget	socklen_t *		2369249	0					
ANR	2369420	UnaryOperationExpression	& temp		2369249	1					
ANR	2369421	UnaryOperator	&		2369249	0					
ANR	2369422	Identifier	temp		2369249	1					
ANR	2369423	Condition	( previous_size < current_size ) && ( attempt_size < desired_size )	723:11:19631:19703	2369249	1	True				
ANR	2369424	AndExpression	( previous_size < current_size ) && ( attempt_size < desired_size )		2369249	0		&&			
ANR	2369425	RelationalExpression	previous_size < current_size		2369249	0		<			
ANR	2369426	Identifier	previous_size		2369249	0					
ANR	2369427	Identifier	current_size		2369249	1					
ANR	2369428	RelationalExpression	attempt_size < desired_size		2369249	1		<			
ANR	2369429	Identifier	attempt_size		2369249	0					
ANR	2369430	Identifier	desired_size		2369249	1					
ANR	2369431	ReturnStatement	return current_size ;	726:1:19710:19729	2369249	13	True				
ANR	2369432	Identifier	current_size		2369249	0					
ANR	2369433	ReturnType	int		2369249	1					
ANR	2369434	Identifier	Sock :: set_os_buffers		2369249	2					
ANR	2369435	ParameterList	"int desired_size , bool set_write_buf"		2369249	3					
ANR	2369436	Parameter	int desired_size	676:25:18318:18333	2369249	0	True				
ANR	2369437	ParameterType	int		2369249	0					
ANR	2369438	Identifier	desired_size		2369249	1					
ANR	2369439	Parameter	bool set_write_buf	676:43:18336:18353	2369249	1	True				
ANR	2369440	ParameterType	bool		2369249	0					
ANR	2369441	Identifier	set_write_buf		2369249	1					
ANR	2369442	CFGEntryNode	ENTRY		2369249		True				
ANR	2369443	CFGExitNode	EXIT		2369249		True				
ANR	2369444	Symbol	temp		2369249						
ANR	2369445	Symbol	attempt_size		2369249						
ANR	2369446	Symbol	SO_SNDBUF		2369249						
ANR	2369447	Symbol	current_size		2369249						
ANR	2369448	Symbol	D_FULLDEBUG		2369249						
ANR	2369449	Symbol	& attempt_size		2369249						
ANR	2369450	Symbol	command		2369249						
ANR	2369451	Symbol	set_write_buf		2369249						
ANR	2369452	Symbol	SOL_SOCKET		2369249						
ANR	2369453	Symbol	SO_RCVBUF		2369249						
ANR	2369454	Symbol	_sock		2369249						
ANR	2369455	Symbol	_state		2369249						
ANR	2369456	Symbol	previous_size		2369249						
ANR	2369457	Symbol	desired_size		2369249						
ANR	2369458	Symbol	sock_virgin		2369249						
ANR	2369459	Symbol	& current_size		2369249						
ANR	2369460	Symbol	& temp		2369249						
ANR	2369461	Function	Sock :: setsockopt	730:0:19735:20002							
ANR	2369462	FunctionDef	"Sock :: setsockopt (int level , int optname , const char * optval , int optlen)"		2369461	0					
ANR	2369463	CompoundStatement		731:0:19812:20002	2369461	0					
ANR	2369464	IfStatement	if ( _state == sock_virgin )		2369461	0					
ANR	2369465	Condition	_state == sock_virgin	733:5:19870:19890	2369461	0	True				
ANR	2369466	EqualityExpression	_state == sock_virgin		2369461	0		==			
ANR	2369467	Identifier	_state		2369461	0					
ANR	2369468	Identifier	sock_virgin		2369461	1					
ANR	2369469	ExpressionStatement	assign ( )	733:28:19893:19901	2369461	1	True				
ANR	2369470	CallExpression	assign ( )		2369461	0					
ANR	2369471	Callee	assign		2369461	0					
ANR	2369472	Identifier	assign		2369461	0					
ANR	2369473	ArgumentList			2369461	1					
ANR	2369474	Statement	if	735:1:19905:19906	2369461	1	True				
ANR	2369475	Statement	(	735:3:19907:19907	2369461	2	True				
ANR	2369476	Statement	::	735:4:19908:19909	2369461	3	True				
ANR	2369477	Statement	setsockopt	735:6:19910:19919	2369461	4	True				
ANR	2369478	Statement	(	735:16:19920:19920	2369461	5	True				
ANR	2369479	Statement	_sock	735:17:19921:19925	2369461	6	True				
ANR	2369480	Statement	","	735:22:19926:19926	2369461	7	True				
ANR	2369481	Statement	level	735:24:19928:19932	2369461	8	True				
ANR	2369482	Statement	","	735:29:19933:19933	2369461	9	True				
ANR	2369483	Statement	optname	735:31:19935:19941	2369461	10	True				
ANR	2369484	Statement	","	735:38:19942:19942	2369461	11	True				
ANR	2369485	Statement	optval	735:40:19944:19949	2369461	12	True				
ANR	2369486	Statement	","	735:46:19950:19950	2369461	13	True				
ANR	2369487	Statement	optlen	735:48:19952:19957	2369461	14	True				
ANR	2369488	Statement	)	735:54:19958:19958	2369461	15	True				
ANR	2369489	Statement	<	735:56:19960:19960	2369461	16	True				
ANR	2369490	Statement	0	735:58:19962:19962	2369461	17	True				
ANR	2369491	Statement	)	735:59:19963:19963	2369461	18	True				
ANR	2369492	CompoundStatement		6:1:153:153	2369461	19					
ANR	2369493	ReturnStatement	return FALSE ;	737:2:19970:19982	2369461	0	True				
ANR	2369494	Identifier	FALSE		2369461	0					
ANR	2369495	ReturnStatement	return TRUE ;	739:1:19988:19999	2369461	20	True				
ANR	2369496	Identifier	TRUE		2369461	0					
ANR	2369497	ReturnType	int		2369461	1					
ANR	2369498	Identifier	Sock :: setsockopt		2369461	2					
ANR	2369499	ParameterList	"int level , int optname , const char * optval , int optlen"		2369461	3					
ANR	2369500	Parameter	int level	730:21:19756:19764	2369461	0	True				
ANR	2369501	ParameterType	int		2369461	0					
ANR	2369502	Identifier	level		2369461	1					
ANR	2369503	Parameter	int optname	730:32:19767:19777	2369461	1	True				
ANR	2369504	ParameterType	int		2369461	0					
ANR	2369505	Identifier	optname		2369461	1					
ANR	2369506	Parameter	const char * optval	730:45:19780:19797	2369461	2	True				
ANR	2369507	ParameterType	const char *		2369461	0					
ANR	2369508	Identifier	optval		2369461	1					
ANR	2369509	Parameter	int optlen	730:65:19800:19809	2369461	3	True				
ANR	2369510	ParameterType	int		2369461	0					
ANR	2369511	Identifier	optlen		2369461	1					
ANR	2369512	CFGEntryNode	ENTRY		2369461		True				
ANR	2369513	CFGExitNode	EXIT		2369461		True				
ANR	2369514	Symbol	optval		2369461						
ANR	2369515	Symbol	level		2369461						
ANR	2369516	Symbol	_state		2369461						
ANR	2369517	Symbol	optname		2369461						
ANR	2369518	Symbol	optlen		2369461						
ANR	2369519	Symbol	sock_virgin		2369461						
ANR	2369520	Symbol	TRUE		2369461						
ANR	2369521	Symbol	FALSE		2369461						
ANR	2369522	Function	Sock :: guess_address_string	742:0:20005:20758							
ANR	2369523	FunctionDef	"Sock :: guess_address_string (char const * host , int port , condor_sockaddr & addr)"		2369522	0					
ANR	2369524	CompoundStatement		742:83:20088:20758	2369522	0					
ANR	2369525	ExpressionStatement	"dprintf ( D_HOSTNAME , ""Guess address string for host = %s, port = %d\\n"" , host , port )"	743:1:20091:20176	2369522	0	True				
ANR	2369526	CallExpression	"dprintf ( D_HOSTNAME , ""Guess address string for host = %s, port = %d\\n"" , host , port )"		2369522	0					
ANR	2369527	Callee	dprintf		2369522	0					
ANR	2369528	Identifier	dprintf		2369522	0					
ANR	2369529	ArgumentList	D_HOSTNAME		2369522	1					
ANR	2369530	Argument	D_HOSTNAME		2369522	0					
ANR	2369531	Identifier	D_HOSTNAME		2369522	0					
ANR	2369532	Argument	"""Guess address string for host = %s, port = %d\\n"""		2369522	1					
ANR	2369533	PrimaryExpression	"""Guess address string for host = %s, port = %d\\n"""		2369522	0					
ANR	2369534	Argument	host		2369522	2					
ANR	2369535	Identifier	host		2369522	0					
ANR	2369536	Argument	port		2369522	3					
ANR	2369537	Identifier	port		2369522	0					
ANR	2369538	IfStatement	if ( host [ 0 ] == '<' )		2369522	1					
ANR	2369539	Condition	host [ 0 ] == '<'	746:5:20226:20239	2369522	0	True				
ANR	2369540	EqualityExpression	host [ 0 ] == '<'		2369522	0		==			
ANR	2369541	ArrayIndexing	host [ 0 ]		2369522	0					
ANR	2369542	Identifier	host		2369522	0					
ANR	2369543	PrimaryExpression	0		2369522	1					
ANR	2369544	PrimaryExpression	'<'		2369522	1					
ANR	2369545	CompoundStatement		5:21:153:153	2369522	1					
ANR	2369546	ExpressionStatement	addr . from_sinful ( host )	747:2:20246:20268	2369522	0	True				
ANR	2369547	CallExpression	addr . from_sinful ( host )		2369522	0					
ANR	2369548	Callee	addr . from_sinful		2369522	0					
ANR	2369549	MemberAccess	addr . from_sinful		2369522	0					
ANR	2369550	Identifier	addr		2369522	0					
ANR	2369551	Identifier	from_sinful		2369522	1					
ANR	2369552	ArgumentList	host		2369522	1					
ANR	2369553	Argument	host		2369522	0					
ANR	2369554	Identifier	host		2369522	0					
ANR	2369555	ExpressionStatement	"dprintf ( D_HOSTNAME , ""it was sinful string. ip = %s, port = %d\\n"" , addr . to_ip_string ( ) . Value ( ) , addr . get_port ( ) )"	748:2:20272:20387	2369522	1	True				
ANR	2369556	CallExpression	"dprintf ( D_HOSTNAME , ""it was sinful string. ip = %s, port = %d\\n"" , addr . to_ip_string ( ) . Value ( ) , addr . get_port ( ) )"		2369522	0					
ANR	2369557	Callee	dprintf		2369522	0					
ANR	2369558	Identifier	dprintf		2369522	0					
ANR	2369559	ArgumentList	D_HOSTNAME		2369522	1					
ANR	2369560	Argument	D_HOSTNAME		2369522	0					
ANR	2369561	Identifier	D_HOSTNAME		2369522	0					
ANR	2369562	Argument	"""it was sinful string. ip = %s, port = %d\\n"""		2369522	1					
ANR	2369563	PrimaryExpression	"""it was sinful string. ip = %s, port = %d\\n"""		2369522	0					
ANR	2369564	Argument	addr . to_ip_string ( ) . Value ( )		2369522	2					
ANR	2369565	CallExpression	addr . to_ip_string ( ) . Value ( )		2369522	0					
ANR	2369566	Callee	addr . to_ip_string ( ) . Value		2369522	0					
ANR	2369567	MemberAccess	addr . to_ip_string ( ) . Value		2369522	0					
ANR	2369568	CallExpression	addr . to_ip_string ( )		2369522	0					
ANR	2369569	Callee	addr . to_ip_string		2369522	0					
ANR	2369570	MemberAccess	addr . to_ip_string		2369522	0					
ANR	2369571	Identifier	addr		2369522	0					
ANR	2369572	Identifier	to_ip_string		2369522	1					
ANR	2369573	ArgumentList			2369522	1					
ANR	2369574	Identifier	Value		2369522	1					
ANR	2369575	ArgumentList			2369522	1					
ANR	2369576	Argument	addr . get_port ( )		2369522	3					
ANR	2369577	CallExpression	addr . get_port ( )		2369522	0					
ANR	2369578	Callee	addr . get_port		2369522	0					
ANR	2369579	MemberAccess	addr . get_port		2369522	0					
ANR	2369580	Identifier	addr		2369522	0					
ANR	2369581	Identifier	get_port		2369522	1					
ANR	2369582	ArgumentList			2369522	1					
ANR	2369583	ElseStatement	else		2369522	0					
ANR	2369584	IfStatement	if ( addr . from_ip_string ( host ) )		2369522	0					
ANR	2369585	Condition	addr . from_ip_string ( host )	752:11:20445:20469	2369522	0	True				
ANR	2369586	CallExpression	addr . from_ip_string ( host )		2369522	0					
ANR	2369587	Callee	addr . from_ip_string		2369522	0					
ANR	2369588	MemberAccess	addr . from_ip_string		2369522	0					
ANR	2369589	Identifier	addr		2369522	0					
ANR	2369590	Identifier	from_ip_string		2369522	1					
ANR	2369591	ArgumentList	host		2369522	1					
ANR	2369592	Argument	host		2369522	0					
ANR	2369593	Identifier	host		2369522	0					
ANR	2369594	CompoundStatement		11:39:384:384	2369522	1					
ANR	2369595	ExpressionStatement	addr . set_port ( port )	754:2:20502:20521	2369522	0	True				
ANR	2369596	CallExpression	addr . set_port ( port )		2369522	0					
ANR	2369597	Callee	addr . set_port		2369522	0					
ANR	2369598	MemberAccess	addr . set_port		2369522	0					
ANR	2369599	Identifier	addr		2369522	0					
ANR	2369600	Identifier	set_port		2369522	1					
ANR	2369601	ArgumentList	port		2369522	1					
ANR	2369602	Argument	port		2369522	0					
ANR	2369603	Identifier	port		2369522	0					
ANR	2369604	ElseStatement	else		2369522	0					
ANR	2369605	CompoundStatement		17:2:497:531	2369522	0					
ANR	2369606	IdentifierDeclStatement	std :: vector < condor_sockaddr > addrs ;	758:2:20586:20620	2369522	0	True				
ANR	2369607	IdentifierDecl	addrs		2369522	0					
ANR	2369608	IdentifierDeclType	std :: vector < condor_sockaddr >		2369522	0					
ANR	2369609	Identifier	addrs		2369522	1					
ANR	2369610	ExpressionStatement	addrs = resolve_hostname ( host )	759:2:20624:20654	2369522	1	True				
ANR	2369611	AssignmentExpression	addrs = resolve_hostname ( host )		2369522	0		=			
ANR	2369612	Identifier	addrs		2369522	0					
ANR	2369613	CallExpression	resolve_hostname ( host )		2369522	1					
ANR	2369614	Callee	resolve_hostname		2369522	0					
ANR	2369615	Identifier	resolve_hostname		2369522	0					
ANR	2369616	ArgumentList	host		2369522	1					
ANR	2369617	Argument	host		2369522	0					
ANR	2369618	Identifier	host		2369522	0					
ANR	2369619	IfStatement	if ( addrs . empty ( ) )		2369522	2					
ANR	2369620	Condition	addrs . empty ( )	760:6:20662:20674	2369522	0	True				
ANR	2369621	CallExpression	addrs . empty ( )		2369522	0					
ANR	2369622	Callee	addrs . empty		2369522	0					
ANR	2369623	MemberAccess	addrs . empty		2369522	0					
ANR	2369624	Identifier	addrs		2369522	0					
ANR	2369625	Identifier	empty		2369522	1					
ANR	2369626	ArgumentList			2369522	1					
ANR	2369627	ReturnStatement	return false ;	761:3:20680:20692	2369522	1	True				
ANR	2369628	Identifier	false		2369522	0					
ANR	2369629	ExpressionStatement	addr = addrs . front ( )	762:2:20696:20716	2369522	3	True				
ANR	2369630	AssignmentExpression	addr = addrs . front ( )		2369522	0		=			
ANR	2369631	Identifier	addr		2369522	0					
ANR	2369632	CallExpression	addrs . front ( )		2369522	1					
ANR	2369633	Callee	addrs . front		2369522	0					
ANR	2369634	MemberAccess	addrs . front		2369522	0					
ANR	2369635	Identifier	addrs		2369522	0					
ANR	2369636	Identifier	front		2369522	1					
ANR	2369637	ArgumentList			2369522	1					
ANR	2369638	ExpressionStatement	addr . set_port ( port )	763:2:20720:20739	2369522	4	True				
ANR	2369639	CallExpression	addr . set_port ( port )		2369522	0					
ANR	2369640	Callee	addr . set_port		2369522	0					
ANR	2369641	MemberAccess	addr . set_port		2369522	0					
ANR	2369642	Identifier	addr		2369522	0					
ANR	2369643	Identifier	set_port		2369522	1					
ANR	2369644	ArgumentList	port		2369522	1					
ANR	2369645	Argument	port		2369522	0					
ANR	2369646	Identifier	port		2369522	0					
ANR	2369647	ReturnStatement	return true ;	765:1:20745:20756	2369522	2	True				
ANR	2369648	Identifier	true		2369522	0					
ANR	2369649	ReturnType	bool		2369522	1					
ANR	2369650	Identifier	Sock :: guess_address_string		2369522	2					
ANR	2369651	ParameterList	"char const * host , int port , condor_sockaddr & addr"		2369522	3					
ANR	2369652	Parameter	char const * host	742:32:20037:20052	2369522	0	True				
ANR	2369653	ParameterType	char const *		2369522	0					
ANR	2369654	Identifier	host		2369522	1					
ANR	2369655	Parameter	int port	742:50:20055:20062	2369522	1	True				
ANR	2369656	ParameterType	int		2369522	0					
ANR	2369657	Identifier	port		2369522	1					
ANR	2369658	Parameter	condor_sockaddr & addr	742:60:20065:20085	2369522	2	True				
ANR	2369659	ParameterType	condor_sockaddr &		2369522	0					
ANR	2369660	Identifier	addr		2369522	1					
ANR	2369661	CFGEntryNode	ENTRY		2369522		True				
ANR	2369662	CFGExitNode	EXIT		2369522		True				
ANR	2369663	Symbol	D_HOSTNAME		2369522						
ANR	2369664	Symbol	* host		2369522						
ANR	2369665	Symbol	addr . to_ip_string		2369522						
ANR	2369666	Symbol	addrs		2369522						
ANR	2369667	Symbol	false		2369522						
ANR	2369668	Symbol	addr . to_ip_string ( ) . Value		2369522						
ANR	2369669	Symbol	addrs . empty		2369522						
ANR	2369670	Symbol	port		2369522						
ANR	2369671	Symbol	resolve_hostname		2369522						
ANR	2369672	Symbol	host		2369522						
ANR	2369673	Symbol	true		2369522						
ANR	2369674	Symbol	addr		2369522						
ANR	2369675	Symbol	addr . get_port		2369522						
ANR	2369676	Symbol	addrs . front		2369522						
ANR	2369677	Symbol	addr . from_ip_string		2369522						
ANR	2369678	Function	Sock :: do_connect	768:0:20761:23457							
ANR	2369679	FunctionDef	"Sock :: do_connect (char const * host , int port , bool non_blocking_flag)"		2369678	0					
ANR	2369680	CompoundStatement		773:0:20841:23457	2369678	0					
ANR	2369681	IfStatement	if ( ! host || port < 0 )		2369678	0					
ANR	2369682	Condition	! host || port < 0	774:5:20848:20864	2369678	0	True				
ANR	2369683	OrExpression	! host || port < 0		2369678	0		||			
ANR	2369684	UnaryOperationExpression	! host		2369678	0					
ANR	2369685	UnaryOperator	!		2369678	0					
ANR	2369686	Identifier	host		2369678	1					
ANR	2369687	RelationalExpression	port < 0		2369678	1		<			
ANR	2369688	Identifier	port		2369678	0					
ANR	2369689	PrimaryExpression	0		2369678	1					
ANR	2369690	ReturnStatement	return FALSE ;	774:24:20867:20879	2369678	1	True				
ANR	2369691	Identifier	FALSE		2369678	0					
ANR	2369692	ExpressionStatement	_who . clear ( )	776:1:20883:20895	2369678	1	True				
ANR	2369693	CallExpression	_who . clear ( )		2369678	0					
ANR	2369694	Callee	_who . clear		2369678	0					
ANR	2369695	MemberAccess	_who . clear		2369678	0					
ANR	2369696	Identifier	_who		2369678	0					
ANR	2369697	Identifier	clear		2369678	1					
ANR	2369698	ArgumentList			2369678	1					
ANR	2369699	IfStatement	"if ( ! guess_address_string ( host , port , _who ) )"		2369678	2					
ANR	2369700	Condition	"! guess_address_string ( host , port , _who )"	777:5:20902:20940	2369678	0	True				
ANR	2369701	UnaryOperationExpression	"! guess_address_string ( host , port , _who )"		2369678	0					
ANR	2369702	UnaryOperator	!		2369678	0					
ANR	2369703	CallExpression	"guess_address_string ( host , port , _who )"		2369678	1					
ANR	2369704	Callee	guess_address_string		2369678	0					
ANR	2369705	Identifier	guess_address_string		2369678	0					
ANR	2369706	ArgumentList	host		2369678	1					
ANR	2369707	Argument	host		2369678	0					
ANR	2369708	Identifier	host		2369678	0					
ANR	2369709	Argument	port		2369678	1					
ANR	2369710	Identifier	port		2369678	0					
ANR	2369711	Argument	_who		2369678	2					
ANR	2369712	Identifier	_who		2369678	0					
ANR	2369713	CompoundStatement		5:46:101:101	2369678	1					
ANR	2369714	ReturnStatement	return FALSE ;	778:2:20947:20959	2369678	0	True				
ANR	2369715	Identifier	FALSE		2369678	0					
ANR	2369716	IfStatement	if ( _condor_is_ipv6_mode ( ) && _who . is_ipv4 ( ) )		2369678	3					
ANR	2369717	Condition	_condor_is_ipv6_mode ( ) && _who . is_ipv4 ( )	781:5:20970:21009	2369678	0	True				
ANR	2369718	AndExpression	_condor_is_ipv6_mode ( ) && _who . is_ipv4 ( )		2369678	0		&&			
ANR	2369719	CallExpression	_condor_is_ipv6_mode ( )		2369678	0					
ANR	2369720	Callee	_condor_is_ipv6_mode		2369678	0					
ANR	2369721	Identifier	_condor_is_ipv6_mode		2369678	0					
ANR	2369722	ArgumentList			2369678	1					
ANR	2369723	CallExpression	_who . is_ipv4 ( )		2369678	1					
ANR	2369724	Callee	_who . is_ipv4		2369678	0					
ANR	2369725	MemberAccess	_who . is_ipv4		2369678	0					
ANR	2369726	Identifier	_who		2369678	0					
ANR	2369727	Identifier	is_ipv4		2369678	1					
ANR	2369728	ArgumentList			2369678	1					
ANR	2369729	ExpressionStatement	_who . convert_to_ipv6 ( )	782:2:21014:21036	2369678	1	True				
ANR	2369730	CallExpression	_who . convert_to_ipv6 ( )		2369678	0					
ANR	2369731	Callee	_who . convert_to_ipv6		2369678	0					
ANR	2369732	MemberAccess	_who . convert_to_ipv6		2369678	0					
ANR	2369733	Identifier	_who		2369678	0					
ANR	2369734	Identifier	convert_to_ipv6		2369678	1					
ANR	2369735	ArgumentList			2369678	1					
ANR	2369736	IfStatement	if ( host [ 0 ] == '<' )		2369678	4					
ANR	2369737	Condition	host [ 0 ] == '<'	786:5:21173:21186	2369678	0	True				
ANR	2369738	EqualityExpression	host [ 0 ] == '<'		2369678	0		==			
ANR	2369739	ArrayIndexing	host [ 0 ]		2369678	0					
ANR	2369740	Identifier	host		2369678	0					
ANR	2369741	PrimaryExpression	0		2369678	1					
ANR	2369742	PrimaryExpression	'<'		2369678	1					
ANR	2369743	CompoundStatement		14:21:347:347	2369678	1					
ANR	2369744	ExpressionStatement	set_connect_addr ( host )	787:2:21193:21215	2369678	0	True				
ANR	2369745	CallExpression	set_connect_addr ( host )		2369678	0					
ANR	2369746	Callee	set_connect_addr		2369678	0					
ANR	2369747	Identifier	set_connect_addr		2369678	0					
ANR	2369748	ArgumentList	host		2369678	1					
ANR	2369749	Argument	host		2369678	0					
ANR	2369750	Identifier	host		2369678	0					
ANR	2369751	ElseStatement	else		2369678	0					
ANR	2369752	CompoundStatement		17:6:384:384	2369678	0					
ANR	2369753	ExpressionStatement	set_connect_addr ( _who . to_ip_string ( ) . Value ( ) )	790:2:21264:21309	2369678	0	True				
ANR	2369754	CallExpression	set_connect_addr ( _who . to_ip_string ( ) . Value ( ) )		2369678	0					
ANR	2369755	Callee	set_connect_addr		2369678	0					
ANR	2369756	Identifier	set_connect_addr		2369678	0					
ANR	2369757	ArgumentList	_who . to_ip_string ( ) . Value ( )		2369678	1					
ANR	2369758	Argument	_who . to_ip_string ( ) . Value ( )		2369678	0					
ANR	2369759	CallExpression	_who . to_ip_string ( ) . Value ( )		2369678	0					
ANR	2369760	Callee	_who . to_ip_string ( ) . Value		2369678	0					
ANR	2369761	MemberAccess	_who . to_ip_string ( ) . Value		2369678	0					
ANR	2369762	CallExpression	_who . to_ip_string ( )		2369678	0					
ANR	2369763	Callee	_who . to_ip_string		2369678	0					
ANR	2369764	MemberAccess	_who . to_ip_string		2369678	0					
ANR	2369765	Identifier	_who		2369678	0					
ANR	2369766	Identifier	to_ip_string		2369678	1					
ANR	2369767	ArgumentList			2369678	1					
ANR	2369768	Identifier	Value		2369678	1					
ANR	2369769	ArgumentList			2369678	1					
ANR	2369770	ExpressionStatement	addr_changed ( )	792:4:21318:21332	2369678	5	True				
ANR	2369771	CallExpression	addr_changed ( )		2369678	0					
ANR	2369772	Callee	addr_changed		2369678	0					
ANR	2369773	Identifier	addr_changed		2369678	0					
ANR	2369774	ArgumentList			2369678	1					
ANR	2369775	IdentifierDeclStatement	"int retval = special_connect ( host , port , non_blocking_flag ) ;"	800:1:21638:21693	2369678	6	True				
ANR	2369776	IdentifierDecl	"retval = special_connect ( host , port , non_blocking_flag )"		2369678	0					
ANR	2369777	IdentifierDeclType	int		2369678	0					
ANR	2369778	Identifier	retval		2369678	1					
ANR	2369779	AssignmentExpression	"retval = special_connect ( host , port , non_blocking_flag )"		2369678	2		=			
ANR	2369780	Identifier	retval		2369678	0					
ANR	2369781	CallExpression	"special_connect ( host , port , non_blocking_flag )"		2369678	1					
ANR	2369782	Callee	special_connect		2369678	0					
ANR	2369783	Identifier	special_connect		2369678	0					
ANR	2369784	ArgumentList	host		2369678	1					
ANR	2369785	Argument	host		2369678	0					
ANR	2369786	Identifier	host		2369678	0					
ANR	2369787	Argument	port		2369678	1					
ANR	2369788	Identifier	port		2369678	0					
ANR	2369789	Argument	non_blocking_flag		2369678	2					
ANR	2369790	Identifier	non_blocking_flag		2369678	0					
ANR	2369791	IfStatement	if ( retval != CEDAR_ENOCCB )		2369678	7					
ANR	2369792	Condition	retval != CEDAR_ENOCCB	801:5:21700:21721	2369678	0	True				
ANR	2369793	EqualityExpression	retval != CEDAR_ENOCCB		2369678	0		!=			
ANR	2369794	Identifier	retval		2369678	0					
ANR	2369795	Identifier	CEDAR_ENOCCB		2369678	1					
ANR	2369796	CompoundStatement		29:30:883:883	2369678	1					
ANR	2369797	ReturnStatement	return retval ;	802:2:21729:21742	2369678	0	True				
ANR	2369798	Identifier	retval		2369678	0					
ANR	2369799	IfStatement	if ( _state == sock_virgin || _state == sock_assigned )		2369678	8					
ANR	2369800	Condition	_state == sock_virgin || _state == sock_assigned	808:5:21888:21935	2369678	0	True				
ANR	2369801	OrExpression	_state == sock_virgin || _state == sock_assigned		2369678	0		||			
ANR	2369802	EqualityExpression	_state == sock_virgin		2369678	0		==			
ANR	2369803	Identifier	_state		2369678	0					
ANR	2369804	Identifier	sock_virgin		2369678	1					
ANR	2369805	EqualityExpression	_state == sock_assigned		2369678	1		==			
ANR	2369806	Identifier	_state		2369678	0					
ANR	2369807	Identifier	sock_assigned		2369678	1					
ANR	2369808	CompoundStatement		36:55:1096:1096	2369678	1					
ANR	2369809	ExpressionStatement	bind ( true )	809:2:21942:21952	2369678	0	True				
ANR	2369810	CallExpression	bind ( true )		2369678	0					
ANR	2369811	Callee	bind		2369678	0					
ANR	2369812	Identifier	bind		2369678	0					
ANR	2369813	ArgumentList	true		2369678	1					
ANR	2369814	Argument	true		2369678	0					
ANR	2369815	Identifier	true		2369678	0					
ANR	2369816	IfStatement	if ( _state != sock_bound )		2369678	9					
ANR	2369817	Condition	_state != sock_bound	812:5:21963:21982	2369678	0	True				
ANR	2369818	EqualityExpression	_state != sock_bound		2369678	0		!=			
ANR	2369819	Identifier	_state		2369678	0					
ANR	2369820	Identifier	sock_bound		2369678	1					
ANR	2369821	ReturnStatement	return FALSE ;	812:27:21985:21997	2369678	1	True				
ANR	2369822	Identifier	FALSE		2369678	0					
ANR	2369823	IfStatement	if ( _timeout < CONNECT_TIMEOUT )		2369678	10					
ANR	2369824	Condition	_timeout < CONNECT_TIMEOUT	814:5:22005:22030	2369678	0	True				
ANR	2369825	RelationalExpression	_timeout < CONNECT_TIMEOUT		2369678	0		<			
ANR	2369826	Identifier	_timeout		2369678	0					
ANR	2369827	Identifier	CONNECT_TIMEOUT		2369678	1					
ANR	2369828	CompoundStatement		42:33:1191:1191	2369678	1					
ANR	2369829	ExpressionStatement	connect_state . retry_timeout_interval = CONNECT_TIMEOUT	818:2:22184:22238	2369678	0	True				
ANR	2369830	AssignmentExpression	connect_state . retry_timeout_interval = CONNECT_TIMEOUT		2369678	0		=			
ANR	2369831	MemberAccess	connect_state . retry_timeout_interval		2369678	0					
ANR	2369832	Identifier	connect_state		2369678	0					
ANR	2369833	Identifier	retry_timeout_interval		2369678	1					
ANR	2369834	Identifier	CONNECT_TIMEOUT		2369678	1					
ANR	2369835	ElseStatement	else		2369678	0					
ANR	2369836	CompoundStatement		47:8:1406:1406	2369678	0					
ANR	2369837	ExpressionStatement	connect_state . retry_timeout_interval = _timeout	820:2:22252:22299	2369678	0	True				
ANR	2369838	AssignmentExpression	connect_state . retry_timeout_interval = _timeout		2369678	0		=			
ANR	2369839	MemberAccess	connect_state . retry_timeout_interval		2369678	0					
ANR	2369840	Identifier	connect_state		2369678	0					
ANR	2369841	Identifier	retry_timeout_interval		2369678	1					
ANR	2369842	Identifier	_timeout		2369678	1					
ANR	2369843	IfStatement	if ( ignore_connect_timeout == TRUE )		2369678	11					
ANR	2369844	Condition	ignore_connect_timeout == TRUE	827:4:22506:22535	2369678	0	True				
ANR	2369845	EqualityExpression	ignore_connect_timeout == TRUE		2369678	0		==			
ANR	2369846	Identifier	ignore_connect_timeout		2369678	0					
ANR	2369847	Identifier	TRUE		2369678	1					
ANR	2369848	CompoundStatement		55:35:1695:1695	2369678	1					
ANR	2369849	ExpressionStatement	connect_state . retry_timeout_interval = _timeout	828:2:22541:22588	2369678	0	True				
ANR	2369850	AssignmentExpression	connect_state . retry_timeout_interval = _timeout		2369678	0		=			
ANR	2369851	MemberAccess	connect_state . retry_timeout_interval		2369678	0					
ANR	2369852	Identifier	connect_state		2369678	0					
ANR	2369853	Identifier	retry_timeout_interval		2369678	1					
ANR	2369854	Identifier	_timeout		2369678	1					
ANR	2369855	ExpressionStatement	connect_state . first_try_start_time = time ( NULL )	831:1:22595:22642	2369678	12	True				
ANR	2369856	AssignmentExpression	connect_state . first_try_start_time = time ( NULL )		2369678	0		=			
ANR	2369857	MemberAccess	connect_state . first_try_start_time		2369678	0					
ANR	2369858	Identifier	connect_state		2369678	0					
ANR	2369859	Identifier	first_try_start_time		2369678	1					
ANR	2369860	CallExpression	time ( NULL )		2369678	1					
ANR	2369861	Callee	time		2369678	0					
ANR	2369862	Identifier	time		2369678	0					
ANR	2369863	ArgumentList	NULL		2369678	1					
ANR	2369864	Argument	NULL		2369678	0					
ANR	2369865	Identifier	NULL		2369678	0					
ANR	2369866	ExpressionStatement	connect_state . retry_timeout_time = time ( NULL ) + connect_state . retry_timeout_interval	832:1:22645:22729	2369678	13	True				
ANR	2369867	AssignmentExpression	connect_state . retry_timeout_time = time ( NULL ) + connect_state . retry_timeout_interval		2369678	0		=			
ANR	2369868	MemberAccess	connect_state . retry_timeout_time		2369678	0					
ANR	2369869	Identifier	connect_state		2369678	0					
ANR	2369870	Identifier	retry_timeout_time		2369678	1					
ANR	2369871	AdditiveExpression	time ( NULL ) + connect_state . retry_timeout_interval		2369678	1		+			
ANR	2369872	CallExpression	time ( NULL )		2369678	0					
ANR	2369873	Callee	time		2369678	0					
ANR	2369874	Identifier	time		2369678	0					
ANR	2369875	ArgumentList	NULL		2369678	1					
ANR	2369876	Argument	NULL		2369678	0					
ANR	2369877	Identifier	NULL		2369678	0					
ANR	2369878	MemberAccess	connect_state . retry_timeout_interval		2369678	1					
ANR	2369879	Identifier	connect_state		2369678	0					
ANR	2369880	Identifier	retry_timeout_interval		2369678	1					
ANR	2369881	ExpressionStatement	connect_state . this_try_timeout_time = time ( NULL ) + _timeout	833:1:22732:22789	2369678	14	True				
ANR	2369882	AssignmentExpression	connect_state . this_try_timeout_time = time ( NULL ) + _timeout		2369678	0		=			
ANR	2369883	MemberAccess	connect_state . this_try_timeout_time		2369678	0					
ANR	2369884	Identifier	connect_state		2369678	0					
ANR	2369885	Identifier	this_try_timeout_time		2369678	1					
ANR	2369886	AdditiveExpression	time ( NULL ) + _timeout		2369678	1		+			
ANR	2369887	CallExpression	time ( NULL )		2369678	0					
ANR	2369888	Callee	time		2369678	0					
ANR	2369889	Identifier	time		2369678	0					
ANR	2369890	ArgumentList	NULL		2369678	1					
ANR	2369891	Argument	NULL		2369678	0					
ANR	2369892	Identifier	NULL		2369678	0					
ANR	2369893	Identifier	_timeout		2369678	1					
ANR	2369894	IfStatement	if ( _timeout == 0 )		2369678	15					
ANR	2369895	Condition	_timeout == 0	834:4:22795:22807	2369678	0	True				
ANR	2369896	EqualityExpression	_timeout == 0		2369678	0		==			
ANR	2369897	Identifier	_timeout		2369678	0					
ANR	2369898	PrimaryExpression	0		2369678	1					
ANR	2369899	CompoundStatement		62:19:1968:1968	2369678	1					
ANR	2369900	ExpressionStatement	connect_state . this_try_timeout_time = 0	839:2:23018:23057	2369678	0	True				
ANR	2369901	AssignmentExpression	connect_state . this_try_timeout_time = 0		2369678	0		=			
ANR	2369902	MemberAccess	connect_state . this_try_timeout_time		2369678	0					
ANR	2369903	Identifier	connect_state		2369678	0					
ANR	2369904	Identifier	this_try_timeout_time		2369678	1					
ANR	2369905	PrimaryExpression	0		2369678	1					
ANR	2369906	ExpressionStatement	connect_state . connect_failed = false	841:1:23063:23099	2369678	16	True				
ANR	2369907	AssignmentExpression	connect_state . connect_failed = false		2369678	0		=			
ANR	2369908	MemberAccess	connect_state . connect_failed		2369678	0					
ANR	2369909	Identifier	connect_state		2369678	0					
ANR	2369910	Identifier	connect_failed		2369678	1					
ANR	2369911	Identifier	false		2369678	1					
ANR	2369912	ExpressionStatement	connect_state . failed_once = false	842:1:23102:23135	2369678	17	True				
ANR	2369913	AssignmentExpression	connect_state . failed_once = false		2369678	0		=			
ANR	2369914	MemberAccess	connect_state . failed_once		2369678	0					
ANR	2369915	Identifier	connect_state		2369678	0					
ANR	2369916	Identifier	failed_once		2369678	1					
ANR	2369917	Identifier	false		2369678	1					
ANR	2369918	ExpressionStatement	connect_state . connect_refused = false	843:1:23138:23175	2369678	18	True				
ANR	2369919	AssignmentExpression	connect_state . connect_refused = false		2369678	0		=			
ANR	2369920	MemberAccess	connect_state . connect_refused		2369678	0					
ANR	2369921	Identifier	connect_state		2369678	0					
ANR	2369922	Identifier	connect_refused		2369678	1					
ANR	2369923	Identifier	false		2369678	1					
ANR	2369924	ExpressionStatement	connect_state . non_blocking_flag = non_blocking_flag	844:1:23178:23229	2369678	19	True				
ANR	2369925	AssignmentExpression	connect_state . non_blocking_flag = non_blocking_flag		2369678	0		=			
ANR	2369926	MemberAccess	connect_state . non_blocking_flag		2369678	0					
ANR	2369927	Identifier	connect_state		2369678	0					
ANR	2369928	Identifier	non_blocking_flag		2369678	1					
ANR	2369929	Identifier	non_blocking_flag		2369678	1					
ANR	2369930	IfStatement	if ( connect_state . host )		2369678	20					
ANR	2369931	Condition	connect_state . host	845:6:23237:23254	2369678	0	True				
ANR	2369932	MemberAccess	connect_state . host		2369678	0					
ANR	2369933	Identifier	connect_state		2369678	0					
ANR	2369934	Identifier	host		2369678	1					
ANR	2369935	ExpressionStatement	free ( connect_state . host )	845:27:23258:23284	2369678	1	True				
ANR	2369936	CallExpression	free ( connect_state . host )		2369678	0					
ANR	2369937	Callee	free		2369678	0					
ANR	2369938	Identifier	free		2369678	0					
ANR	2369939	ArgumentList	connect_state . host		2369678	1					
ANR	2369940	Argument	connect_state . host		2369678	0					
ANR	2369941	MemberAccess	connect_state . host		2369678	0					
ANR	2369942	Identifier	connect_state		2369678	0					
ANR	2369943	Identifier	host		2369678	1					
ANR	2369944	ExpressionStatement	connect_state . host = strdup ( host )	846:1:23287:23320	2369678	21	True				
ANR	2369945	AssignmentExpression	connect_state . host = strdup ( host )		2369678	0		=			
ANR	2369946	MemberAccess	connect_state . host		2369678	0					
ANR	2369947	Identifier	connect_state		2369678	0					
ANR	2369948	Identifier	host		2369678	1					
ANR	2369949	CallExpression	strdup ( host )		2369678	1					
ANR	2369950	Callee	strdup		2369678	0					
ANR	2369951	Identifier	strdup		2369678	0					
ANR	2369952	ArgumentList	host		2369678	1					
ANR	2369953	Argument	host		2369678	0					
ANR	2369954	Identifier	host		2369678	0					
ANR	2369955	ExpressionStatement	connect_state . port = port	847:1:23323:23348	2369678	22	True				
ANR	2369956	AssignmentExpression	connect_state . port = port		2369678	0		=			
ANR	2369957	MemberAccess	connect_state . port		2369678	0					
ANR	2369958	Identifier	connect_state		2369678	0					
ANR	2369959	Identifier	port		2369678	1					
ANR	2369960	Identifier	port		2369678	1					
ANR	2369961	ExpressionStatement	connect_state . old_timeout_value = _timeout	848:1:23351:23393	2369678	23	True				
ANR	2369962	AssignmentExpression	connect_state . old_timeout_value = _timeout		2369678	0		=			
ANR	2369963	MemberAccess	connect_state . old_timeout_value		2369678	0					
ANR	2369964	Identifier	connect_state		2369678	0					
ANR	2369965	Identifier	old_timeout_value		2369678	1					
ANR	2369966	Identifier	_timeout		2369678	1					
ANR	2369967	ExpressionStatement	setConnectFailureReason ( NULL )	849:1:23396:23425	2369678	24	True				
ANR	2369968	CallExpression	setConnectFailureReason ( NULL )		2369678	0					
ANR	2369969	Callee	setConnectFailureReason		2369678	0					
ANR	2369970	Identifier	setConnectFailureReason		2369678	0					
ANR	2369971	ArgumentList	NULL		2369678	1					
ANR	2369972	Argument	NULL		2369678	0					
ANR	2369973	Identifier	NULL		2369678	0					
ANR	2369974	ReturnStatement	return do_connect_finish ( ) ;	851:1:23429:23455	2369678	25	True				
ANR	2369975	CallExpression	do_connect_finish ( )		2369678	0					
ANR	2369976	Callee	do_connect_finish		2369678	0					
ANR	2369977	Identifier	do_connect_finish		2369678	0					
ANR	2369978	ArgumentList			2369678	1					
ANR	2369979	ReturnType	int		2369678	1					
ANR	2369980	Identifier	Sock :: do_connect		2369678	2					
ANR	2369981	ParameterList	"char const * host , int port , bool non_blocking_flag"		2369678	3					
ANR	2369982	Parameter	char const * host	769:1:20784:20799	2369678	0	True				
ANR	2369983	ParameterType	char const *		2369678	0					
ANR	2369984	Identifier	host		2369678	1					
ANR	2369985	Parameter	int port	770:1:20803:20811	2369678	1	True				
ANR	2369986	ParameterType	int		2369678	0					
ANR	2369987	Identifier	port		2369678	1					
ANR	2369988	Parameter	bool non_blocking_flag	771:1:20815:20836	2369678	2	True				
ANR	2369989	ParameterType	bool		2369678	0					
ANR	2369990	Identifier	non_blocking_flag		2369678	1					
ANR	2369991	CFGEntryNode	ENTRY		2369678		True				
ANR	2369992	CFGExitNode	EXIT		2369678		True				
ANR	2369993	Symbol	guess_address_string		2369678						
ANR	2369994	Symbol	* host		2369678						
ANR	2369995	Symbol	connect_state . host		2369678						
ANR	2369996	Symbol	_who . is_ipv4		2369678						
ANR	2369997	Symbol	connect_state . retry_timeout_interval		2369678						
ANR	2369998	Symbol	non_blocking_flag		2369678						
ANR	2369999	Symbol	CONNECT_TIMEOUT		2369678						
ANR	2370000	Symbol	CEDAR_ENOCCB		2369678						
ANR	2370001	Symbol	connect_state . first_try_start_time		2369678						
ANR	2370002	Symbol	_who . to_ip_string ( ) . Value		2369678						
ANR	2370003	Symbol	connect_state . connect_refused		2369678						
ANR	2370004	Symbol	_who		2369678						
ANR	2370005	Symbol	connect_state . connect_failed		2369678						
ANR	2370006	Symbol	connect_state . port		2369678						
ANR	2370007	Symbol	host		2369678						
ANR	2370008	Symbol	sock_virgin		2369678						
ANR	2370009	Symbol	connect_state . failed_once		2369678						
ANR	2370010	Symbol	do_connect_finish		2369678						
ANR	2370011	Symbol	_timeout		2369678						
ANR	2370012	Symbol	_who . to_ip_string		2369678						
ANR	2370013	Symbol	NULL		2369678						
ANR	2370014	Symbol	connect_state . old_timeout_value		2369678						
ANR	2370015	Symbol	special_connect		2369678						
ANR	2370016	Symbol	false		2369678						
ANR	2370017	Symbol	TRUE		2369678						
ANR	2370018	Symbol	ignore_connect_timeout		2369678						
ANR	2370019	Symbol	sock_bound		2369678						
ANR	2370020	Symbol	retval		2369678						
ANR	2370021	Symbol	connect_state		2369678						
ANR	2370022	Symbol	connect_state . retry_timeout_time		2369678						
ANR	2370023	Symbol	_condor_is_ipv6_mode		2369678						
ANR	2370024	Symbol	connect_state . this_try_timeout_time		2369678						
ANR	2370025	Symbol	port		2369678						
ANR	2370026	Symbol	_state		2369678						
ANR	2370027	Symbol	sock_assigned		2369678						
ANR	2370028	Symbol	true		2369678						
ANR	2370029	Symbol	FALSE		2369678						
ANR	2370030	Symbol	time		2369678						
ANR	2370031	Symbol	strdup		2369678						
ANR	2370032	Symbol	connect_state . non_blocking_flag		2369678						
ANR	2370033	Function	Sock :: do_connect_finish	854:0:23460:28573							
ANR	2370034	FunctionDef	Sock :: do_connect_finish ()		2370033	0					
ANR	2370035	CompoundStatement		856:0:23490:28573	2370033	0					
ANR	2370036	WhileStatement	while ( 1 )		2370033	0					
ANR	2370037	Condition	1	862:8:23728:23728	2370033	0	True				
ANR	2370038	PrimaryExpression	1		2370033	0					
ANR	2370039	CompoundStatement		119:2:3490:3608	2370033	1					
ANR	2370040	IfStatement	if ( _state == sock_connect_pending_retry )		2370033	0					
ANR	2370041	Condition	_state == sock_connect_pending_retry	869:6:24049:24084	2370033	0	True				
ANR	2370042	EqualityExpression	_state == sock_connect_pending_retry		2370033	0		==			
ANR	2370043	Identifier	_state		2370033	0					
ANR	2370044	Identifier	sock_connect_pending_retry		2370033	1					
ANR	2370045	CompoundStatement		14:45:597:597	2370033	1					
ANR	2370046	ExpressionStatement	_state = sock_bound	870:3:24093:24112	2370033	0	True				
ANR	2370047	AssignmentExpression	_state = sock_bound		2370033	0		=			
ANR	2370048	Identifier	_state		2370033	0					
ANR	2370049	Identifier	sock_bound		2370033	1					
ANR	2370050	IfStatement	if ( _state == sock_bound )		2370033	1					
ANR	2370051	Condition	_state == sock_bound	873:6:24125:24144	2370033	0	True				
ANR	2370052	EqualityExpression	_state == sock_bound		2370033	0		==			
ANR	2370053	Identifier	_state		2370033	0					
ANR	2370054	Identifier	sock_bound		2370033	1					
ANR	2370055	CompoundStatement		18:29:657:657	2370033	1					
ANR	2370056	IfStatement	if ( do_connect_tryit ( ) )		2370033	0					
ANR	2370057	Condition	do_connect_tryit ( )	874:8:24158:24175	2370033	0	True				
ANR	2370058	CallExpression	do_connect_tryit ( )		2370033	0					
ANR	2370059	Callee	do_connect_tryit		2370033	0					
ANR	2370060	Identifier	do_connect_tryit		2370033	0					
ANR	2370061	ArgumentList			2370033	1					
ANR	2370062	CompoundStatement		19:29:688:688	2370033	1					
ANR	2370063	ReturnStatement	return TRUE ;	875:4:24185:24196	2370033	0	True				
ANR	2370064	Identifier	TRUE		2370033	0					
ANR	2370065	IfStatement	if ( ! connect_state . connect_failed )		2370033	1					
ANR	2370066	Condition	! connect_state . connect_failed	878:7:24211:24239	2370033	0	True				
ANR	2370067	UnaryOperationExpression	! connect_state . connect_failed		2370033	0					
ANR	2370068	UnaryOperator	!		2370033	0					
ANR	2370069	MemberAccess	connect_state . connect_failed		2370033	1					
ANR	2370070	Identifier	connect_state		2370033	0					
ANR	2370071	Identifier	connect_failed		2370033	1					
ANR	2370072	CompoundStatement		23:39:752:752	2370033	1					
ANR	2370073	ExpressionStatement	_state = sock_connect_pending	879:4:24249:24278	2370033	0	True				
ANR	2370074	AssignmentExpression	_state = sock_connect_pending		2370033	0		=			
ANR	2370075	Identifier	_state		2370033	0					
ANR	2370076	Identifier	sock_connect_pending		2370033	1					
ANR	2370077	IfStatement	if ( connect_state . non_blocking_flag && _state == sock_connect_pending )		2370033	2					
ANR	2370078	Condition	connect_state . non_blocking_flag && _state == sock_connect_pending	882:8:24294:24366	2370033	0	True				
ANR	2370079	AndExpression	connect_state . non_blocking_flag && _state == sock_connect_pending		2370033	0		&&			
ANR	2370080	MemberAccess	connect_state . non_blocking_flag		2370033	0					
ANR	2370081	Identifier	connect_state		2370033	0					
ANR	2370082	Identifier	non_blocking_flag		2370033	1					
ANR	2370083	EqualityExpression	_state == sock_connect_pending		2370033	1		==			
ANR	2370084	Identifier	_state		2370033	0					
ANR	2370085	Identifier	sock_connect_pending		2370033	1					
ANR	2370086	CompoundStatement		29:3:882:882	2370033	1					
ANR	2370087	IfStatement	if ( DebugFlags & D_NETWORK )		2370033	0					
ANR	2370088	Condition	DebugFlags & D_NETWORK	888:8:24508:24529	2370033	0	True				
ANR	2370089	BitAndExpression	DebugFlags & D_NETWORK		2370033	0		&			
ANR	2370090	Identifier	DebugFlags		2370033	0					
ANR	2370091	Identifier	D_NETWORK		2370033	1					
ANR	2370092	CompoundStatement		33:33:1042:1042	2370033	1					
ANR	2370093	ExpressionStatement	"dprintf ( D_NETWORK , ""non-blocking CONNECT started fd=%d dst=%s\\n"" , _sock , get_sinful_peer ( ) )"	889:5:24540:24661	2370033	0	True				
ANR	2370094	CallExpression	"dprintf ( D_NETWORK , ""non-blocking CONNECT started fd=%d dst=%s\\n"" , _sock , get_sinful_peer ( ) )"		2370033	0					
ANR	2370095	Callee	dprintf		2370033	0					
ANR	2370096	Identifier	dprintf		2370033	0					
ANR	2370097	ArgumentList	D_NETWORK		2370033	1					
ANR	2370098	Argument	D_NETWORK		2370033	0					
ANR	2370099	Identifier	D_NETWORK		2370033	0					
ANR	2370100	Argument	"""non-blocking CONNECT started fd=%d dst=%s\\n"""		2370033	1					
ANR	2370101	PrimaryExpression	"""non-blocking CONNECT started fd=%d dst=%s\\n"""		2370033	0					
ANR	2370102	Argument	_sock		2370033	2					
ANR	2370103	Identifier	_sock		2370033	0					
ANR	2370104	Argument	get_sinful_peer ( )		2370033	3					
ANR	2370105	CallExpression	get_sinful_peer ( )		2370033	0					
ANR	2370106	Callee	get_sinful_peer		2370033	0					
ANR	2370107	Identifier	get_sinful_peer		2370033	0					
ANR	2370108	ArgumentList			2370033	1					
ANR	2370109	ReturnStatement	return CEDAR_EWOULDBLOCK ;	893:4:24673:24697	2370033	1	True				
ANR	2370110	Identifier	CEDAR_EWOULDBLOCK		2370033	0					
ANR	2370111	WhileStatement	while ( _state == sock_connect_pending )		2370033	2					
ANR	2370112	Condition	_state == sock_connect_pending	904:10:25027:25056	2370033	0	True				
ANR	2370113	EqualityExpression	_state == sock_connect_pending		2370033	0		==			
ANR	2370114	Identifier	_state		2370033	0					
ANR	2370115	Identifier	sock_connect_pending		2370033	1					
ANR	2370116	CompoundStatement		51:3:1597:1663	2370033	1					
ANR	2370117	IdentifierDeclStatement	Selector selector ;	905:3:25065:25083	2370033	0	True				
ANR	2370118	IdentifierDecl	selector		2370033	0					
ANR	2370119	IdentifierDeclType	Selector		2370033	0					
ANR	2370120	Identifier	selector		2370033	1					
ANR	2370121	IdentifierDeclStatement	int timeleft = connect_state . this_try_timeout_time - time ( NULL ) ;	906:3:25088:25154	2370033	1	True				
ANR	2370122	IdentifierDecl	timeleft = connect_state . this_try_timeout_time - time ( NULL )		2370033	0					
ANR	2370123	IdentifierDeclType	int		2370033	0					
ANR	2370124	Identifier	timeleft		2370033	1					
ANR	2370125	AssignmentExpression	timeleft = connect_state . this_try_timeout_time - time ( NULL )		2370033	2		=			
ANR	2370126	Identifier	timeleft		2370033	0					
ANR	2370127	AdditiveExpression	connect_state . this_try_timeout_time - time ( NULL )		2370033	1		-			
ANR	2370128	MemberAccess	connect_state . this_try_timeout_time		2370033	0					
ANR	2370129	Identifier	connect_state		2370033	0					
ANR	2370130	Identifier	this_try_timeout_time		2370033	1					
ANR	2370131	CallExpression	time ( NULL )		2370033	1					
ANR	2370132	Callee	time		2370033	0					
ANR	2370133	Identifier	time		2370033	0					
ANR	2370134	ArgumentList	NULL		2370033	1					
ANR	2370135	Argument	NULL		2370033	0					
ANR	2370136	Identifier	NULL		2370033	0					
ANR	2370137	IfStatement	if ( connect_state . non_blocking_flag )		2370033	2					
ANR	2370138	Condition	connect_state . non_blocking_flag	907:7:25163:25193	2370033	0	True				
ANR	2370139	MemberAccess	connect_state . non_blocking_flag		2370033	0					
ANR	2370140	Identifier	connect_state		2370033	0					
ANR	2370141	Identifier	non_blocking_flag		2370033	1					
ANR	2370142	CompoundStatement		52:41:1706:1706	2370033	1					
ANR	2370143	ExpressionStatement	timeleft = 0	908:4:25203:25215	2370033	0	True				
ANR	2370144	AssignmentExpression	timeleft = 0		2370033	0		=			
ANR	2370145	Identifier	timeleft		2370033	0					
ANR	2370146	PrimaryExpression	0		2370033	1					
ANR	2370147	ElseStatement	else		2370033	0					
ANR	2370148	IfStatement	if ( timeleft < 0 )		2370033	0					
ANR	2370149	Condition	timeleft < 0	910:12:25234:25245	2370033	0	True				
ANR	2370150	RelationalExpression	timeleft < 0		2370033	0		<			
ANR	2370151	Identifier	timeleft		2370033	0					
ANR	2370152	PrimaryExpression	0		2370033	1					
ANR	2370153	CompoundStatement		55:27:1758:1758	2370033	1					
ANR	2370154	ExpressionStatement	timeleft = 0	911:4:25255:25267	2370033	0	True				
ANR	2370155	AssignmentExpression	timeleft = 0		2370033	0		=			
ANR	2370156	Identifier	timeleft		2370033	0					
ANR	2370157	PrimaryExpression	0		2370033	1					
ANR	2370158	ElseStatement	else		2370033	0					
ANR	2370159	IfStatement	if ( timeleft > _timeout )		2370033	0					
ANR	2370160	Condition	timeleft > _timeout	913:12:25286:25304	2370033	0	True				
ANR	2370161	RelationalExpression	timeleft > _timeout		2370033	0		>			
ANR	2370162	Identifier	timeleft		2370033	0					
ANR	2370163	Identifier	_timeout		2370033	1					
ANR	2370164	CompoundStatement		58:34:1817:1817	2370033	1					
ANR	2370165	ExpressionStatement	timeleft = _timeout	915:4:25346:25365	2370033	0	True				
ANR	2370166	AssignmentExpression	timeleft = _timeout		2370033	0		=			
ANR	2370167	Identifier	timeleft		2370033	0					
ANR	2370168	Identifier	_timeout		2370033	1					
ANR	2370169	ExpressionStatement	selector . reset ( )	917:3:25375:25391	2370033	3	True				
ANR	2370170	CallExpression	selector . reset ( )		2370033	0					
ANR	2370171	Callee	selector . reset		2370033	0					
ANR	2370172	MemberAccess	selector . reset		2370033	0					
ANR	2370173	Identifier	selector		2370033	0					
ANR	2370174	Identifier	reset		2370033	1					
ANR	2370175	ArgumentList			2370033	1					
ANR	2370176	ExpressionStatement	selector . set_timeout ( timeleft )	918:3:25396:25428	2370033	4	True				
ANR	2370177	CallExpression	selector . set_timeout ( timeleft )		2370033	0					
ANR	2370178	Callee	selector . set_timeout		2370033	0					
ANR	2370179	MemberAccess	selector . set_timeout		2370033	0					
ANR	2370180	Identifier	selector		2370033	0					
ANR	2370181	Identifier	set_timeout		2370033	1					
ANR	2370182	ArgumentList	timeleft		2370033	1					
ANR	2370183	Argument	timeleft		2370033	0					
ANR	2370184	Identifier	timeleft		2370033	0					
ANR	2370185	ExpressionStatement	"selector . add_fd ( _sock , Selector :: IO_WRITE )"	919:3:25433:25477	2370033	5	True				
ANR	2370186	CallExpression	"selector . add_fd ( _sock , Selector :: IO_WRITE )"		2370033	0					
ANR	2370187	Callee	selector . add_fd		2370033	0					
ANR	2370188	MemberAccess	selector . add_fd		2370033	0					
ANR	2370189	Identifier	selector		2370033	0					
ANR	2370190	Identifier	add_fd		2370033	1					
ANR	2370191	ArgumentList	_sock		2370033	1					
ANR	2370192	Argument	_sock		2370033	0					
ANR	2370193	Identifier	_sock		2370033	0					
ANR	2370194	Argument	Selector :: IO_WRITE		2370033	1					
ANR	2370195	Identifier	Selector :: IO_WRITE		2370033	0					
ANR	2370196	ExpressionStatement	"selector . add_fd ( _sock , Selector :: IO_EXCEPT )"	920:3:25482:25527	2370033	6	True				
ANR	2370197	CallExpression	"selector . add_fd ( _sock , Selector :: IO_EXCEPT )"		2370033	0					
ANR	2370198	Callee	selector . add_fd		2370033	0					
ANR	2370199	MemberAccess	selector . add_fd		2370033	0					
ANR	2370200	Identifier	selector		2370033	0					
ANR	2370201	Identifier	add_fd		2370033	1					
ANR	2370202	ArgumentList	_sock		2370033	1					
ANR	2370203	Argument	_sock		2370033	0					
ANR	2370204	Identifier	_sock		2370033	0					
ANR	2370205	Argument	Selector :: IO_EXCEPT		2370033	1					
ANR	2370206	Identifier	Selector :: IO_EXCEPT		2370033	0					
ANR	2370207	ExpressionStatement	selector . execute ( )	922:3:25533:25551	2370033	7	True				
ANR	2370208	CallExpression	selector . execute ( )		2370033	0					
ANR	2370209	Callee	selector . execute		2370033	0					
ANR	2370210	MemberAccess	selector . execute		2370033	0					
ANR	2370211	Identifier	selector		2370033	0					
ANR	2370212	Identifier	execute		2370033	1					
ANR	2370213	ArgumentList			2370033	1					
ANR	2370214	IfStatement	if ( selector . timed_out ( ) )		2370033	8					
ANR	2370215	Condition	selector . timed_out ( )	924:7:25561:25580	2370033	0	True				
ANR	2370216	CallExpression	selector . timed_out ( )		2370033	0					
ANR	2370217	Callee	selector . timed_out		2370033	0					
ANR	2370218	MemberAccess	selector . timed_out		2370033	0					
ANR	2370219	Identifier	selector		2370033	0					
ANR	2370220	Identifier	timed_out		2370033	1					
ANR	2370221	ArgumentList			2370033	1					
ANR	2370222	CompoundStatement		69:30:2093:2093	2370033	1					
ANR	2370223	IfStatement	if ( ! connect_state . non_blocking_flag )		2370033	0					
ANR	2370224	Condition	! connect_state . non_blocking_flag	925:8:25594:25625	2370033	0	True				
ANR	2370225	UnaryOperationExpression	! connect_state . non_blocking_flag		2370033	0					
ANR	2370226	UnaryOperator	!		2370033	0					
ANR	2370227	MemberAccess	connect_state . non_blocking_flag		2370033	1					
ANR	2370228	Identifier	connect_state		2370033	0					
ANR	2370229	Identifier	non_blocking_flag		2370033	1					
ANR	2370230	CompoundStatement		70:43:2138:2138	2370033	1					
ANR	2370231	ExpressionStatement	cancel_connect ( )	926:5:25636:25652	2370033	0	True				
ANR	2370232	CallExpression	cancel_connect ( )		2370033	0					
ANR	2370233	Callee	cancel_connect		2370033	0					
ANR	2370234	Identifier	cancel_connect		2370033	0					
ANR	2370235	ArgumentList			2370033	1					
ANR	2370236	BreakStatement	break ;	928:4:25664:25669	2370033	1	True				
ANR	2370237	IfStatement	if ( selector . signalled ( ) )		2370033	9					
ANR	2370238	Condition	selector . signalled ( )	930:7:25703:25722	2370033	0	True				
ANR	2370239	CallExpression	selector . signalled ( )		2370033	0					
ANR	2370240	Callee	selector . signalled		2370033	0					
ANR	2370241	MemberAccess	selector . signalled		2370033	0					
ANR	2370242	Identifier	selector		2370033	0					
ANR	2370243	Identifier	signalled		2370033	1					
ANR	2370244	ArgumentList			2370033	1					
ANR	2370245	CompoundStatement		75:30:2235:2235	2370033	1					
ANR	2370246	ContinueStatement	continue ;	931:4:25732:25740	2370033	0	True				
ANR	2370247	IfStatement	if ( selector . failed ( ) )		2370033	10					
ANR	2370248	Condition	selector . failed ( )	933:7:25754:25770	2370033	0	True				
ANR	2370249	CallExpression	selector . failed ( )		2370033	0					
ANR	2370250	Callee	selector . failed		2370033	0					
ANR	2370251	MemberAccess	selector . failed		2370033	0					
ANR	2370252	Identifier	selector		2370033	0					
ANR	2370253	Identifier	failed		2370033	1					
ANR	2370254	ArgumentList			2370033	1					
ANR	2370255	CompoundStatement		78:27:2283:2283	2370033	1					
ANR	2370256	ExpressionStatement	"setConnectFailureErrno ( WSAGetLastError ( ) , ""select"" )"	935:4:25799:25849	2370033	0	True				
ANR	2370257	CallExpression	"setConnectFailureErrno ( WSAGetLastError ( ) , ""select"" )"		2370033	0					
ANR	2370258	Callee	setConnectFailureErrno		2370033	0					
ANR	2370259	Identifier	setConnectFailureErrno		2370033	0					
ANR	2370260	ArgumentList	WSAGetLastError ( )		2370033	1					
ANR	2370261	Argument	WSAGetLastError ( )		2370033	0					
ANR	2370262	CallExpression	WSAGetLastError ( )		2370033	0					
ANR	2370263	Callee	WSAGetLastError		2370033	0					
ANR	2370264	Identifier	WSAGetLastError		2370033	0					
ANR	2370265	ArgumentList			2370033	1					
ANR	2370266	Argument	"""select"""		2370033	1					
ANR	2370267	PrimaryExpression	"""select"""		2370033	0					
ANR	2370268	ExpressionStatement	connect_state . connect_failed = true	939:4:25912:25947	2370033	1	True				
ANR	2370269	AssignmentExpression	connect_state . connect_failed = true		2370033	0		=			
ANR	2370270	MemberAccess	connect_state . connect_failed		2370033	0					
ANR	2370271	Identifier	connect_state		2370033	0					
ANR	2370272	Identifier	connect_failed		2370033	1					
ANR	2370273	Identifier	true		2370033	1					
ANR	2370274	ExpressionStatement	connect_state . connect_refused = true	940:4:25953:25989	2370033	2	True				
ANR	2370275	AssignmentExpression	connect_state . connect_refused = true		2370033	0		=			
ANR	2370276	MemberAccess	connect_state . connect_refused		2370033	0					
ANR	2370277	Identifier	connect_state		2370033	0					
ANR	2370278	Identifier	connect_refused		2370033	1					
ANR	2370279	Identifier	true		2370033	1					
ANR	2370280	ExpressionStatement	cancel_connect ( )	941:4:26013:26029	2370033	3	True				
ANR	2370281	CallExpression	cancel_connect ( )		2370033	0					
ANR	2370282	Callee	cancel_connect		2370033	0					
ANR	2370283	Identifier	cancel_connect		2370033	0					
ANR	2370284	ArgumentList			2370033	1					
ANR	2370285	BreakStatement	break ;	942:4:26035:26040	2370033	4	True				
ANR	2370286	IfStatement	if ( ! test_connection ( ) )		2370033	11					
ANR	2370287	Condition	! test_connection ( )	949:7:26195:26212	2370033	0	True				
ANR	2370288	UnaryOperationExpression	! test_connection ( )		2370033	0					
ANR	2370289	UnaryOperator	!		2370033	0					
ANR	2370290	CallExpression	test_connection ( )		2370033	1					
ANR	2370291	Callee	test_connection		2370033	0					
ANR	2370292	Identifier	test_connection		2370033	0					
ANR	2370293	ArgumentList			2370033	1					
ANR	2370294	CompoundStatement		94:28:2725:2725	2370033	1					
ANR	2370295	ExpressionStatement	_state = sock_bound	951:4:26273:26292	2370033	0	True				
ANR	2370296	AssignmentExpression	_state = sock_bound		2370033	0		=			
ANR	2370297	Identifier	_state		2370033	0					
ANR	2370298	Identifier	sock_bound		2370033	1					
ANR	2370299	ExpressionStatement	connect_state . connect_failed = true	952:4:26298:26333	2370033	1	True				
ANR	2370300	AssignmentExpression	connect_state . connect_failed = true		2370033	0		=			
ANR	2370301	MemberAccess	connect_state . connect_failed		2370033	0					
ANR	2370302	Identifier	connect_state		2370033	0					
ANR	2370303	Identifier	connect_failed		2370033	1					
ANR	2370304	Identifier	true		2370033	1					
ANR	2370305	ExpressionStatement	cancel_connect ( )	953:4:26339:26355	2370033	2	True				
ANR	2370306	CallExpression	cancel_connect ( )		2370033	0					
ANR	2370307	Callee	cancel_connect		2370033	0					
ANR	2370308	Identifier	cancel_connect		2370033	0					
ANR	2370309	ArgumentList			2370033	1					
ANR	2370310	BreakStatement	break ;	954:4:26361:26366	2370033	3	True				
ANR	2370311	ElseStatement	else		2370033	0					
ANR	2370312	IfStatement	"if ( selector . fd_ready ( _sock , Selector :: IO_EXCEPT ) )"		2370033	0					
ANR	2370313	Condition	"selector . fd_ready ( _sock , Selector :: IO_EXCEPT )"	956:12:26412:26455	2370033	0	True				
ANR	2370314	CallExpression	"selector . fd_ready ( _sock , Selector :: IO_EXCEPT )"		2370033	0					
ANR	2370315	Callee	selector . fd_ready		2370033	0					
ANR	2370316	MemberAccess	selector . fd_ready		2370033	0					
ANR	2370317	Identifier	selector		2370033	0					
ANR	2370318	Identifier	fd_ready		2370033	1					
ANR	2370319	ArgumentList	_sock		2370033	1					
ANR	2370320	Argument	_sock		2370033	0					
ANR	2370321	Identifier	_sock		2370033	0					
ANR	2370322	Argument	Selector :: IO_EXCEPT		2370033	1					
ANR	2370323	Identifier	Selector :: IO_EXCEPT		2370033	0					
ANR	2370324	CompoundStatement		101:59:2968:2968	2370033	1					
ANR	2370325	ExpressionStatement	_state = sock_bound	959:4:26574:26593	2370033	0	True				
ANR	2370326	AssignmentExpression	_state = sock_bound		2370033	0		=			
ANR	2370327	Identifier	_state		2370033	0					
ANR	2370328	Identifier	sock_bound		2370033	1					
ANR	2370329	ExpressionStatement	connect_state . connect_failed = true	960:4:26599:26634	2370033	1	True				
ANR	2370330	AssignmentExpression	connect_state . connect_failed = true		2370033	0		=			
ANR	2370331	MemberAccess	connect_state . connect_failed		2370033	0					
ANR	2370332	Identifier	connect_state		2370033	0					
ANR	2370333	Identifier	connect_failed		2370033	1					
ANR	2370334	Identifier	true		2370033	1					
ANR	2370335	ExpressionStatement	"setConnectFailureReason ( ""select() detected failure"" )"	961:4:26640:26692	2370033	2	True				
ANR	2370336	CallExpression	"setConnectFailureReason ( ""select() detected failure"" )"		2370033	0					
ANR	2370337	Callee	setConnectFailureReason		2370033	0					
ANR	2370338	Identifier	setConnectFailureReason		2370033	0					
ANR	2370339	ArgumentList	"""select() detected failure"""		2370033	1					
ANR	2370340	Argument	"""select() detected failure"""		2370033	0					
ANR	2370341	PrimaryExpression	"""select() detected failure"""		2370033	0					
ANR	2370342	ExpressionStatement	cancel_connect ( )	962:4:26698:26714	2370033	3	True				
ANR	2370343	CallExpression	cancel_connect ( )		2370033	0					
ANR	2370344	Callee	cancel_connect		2370033	0					
ANR	2370345	Identifier	cancel_connect		2370033	0					
ANR	2370346	ArgumentList			2370033	1					
ANR	2370347	BreakStatement	break ;	963:4:26720:26725	2370033	4	True				
ANR	2370348	ElseStatement	else		2370033	0					
ANR	2370349	CompoundStatement		110:8:3276:3276	2370033	0					
ANR	2370350	IfStatement	if ( connect_state . old_timeout_value != _timeout )		2370033	0					
ANR	2370351	Condition	connect_state . old_timeout_value != _timeout	966:9:26778:26820	2370033	0	True				
ANR	2370352	EqualityExpression	connect_state . old_timeout_value != _timeout		2370033	0		!=			
ANR	2370353	MemberAccess	connect_state . old_timeout_value		2370033	0					
ANR	2370354	Identifier	connect_state		2370033	0					
ANR	2370355	Identifier	old_timeout_value		2370033	1					
ANR	2370356	Identifier	_timeout		2370033	1					
ANR	2370357	CompoundStatement		111:55:3333:3333	2370033	1					
ANR	2370358	ExpressionStatement	timeout_no_timeout_multiplier ( connect_state . old_timeout_value )	968:5:26860:26922	2370033	0	True				
ANR	2370359	CallExpression	timeout_no_timeout_multiplier ( connect_state . old_timeout_value )		2370033	0					
ANR	2370360	Callee	timeout_no_timeout_multiplier		2370033	0					
ANR	2370361	Identifier	timeout_no_timeout_multiplier		2370033	0					
ANR	2370362	ArgumentList	connect_state . old_timeout_value		2370033	1					
ANR	2370363	Argument	connect_state . old_timeout_value		2370033	0					
ANR	2370364	MemberAccess	connect_state . old_timeout_value		2370033	0					
ANR	2370365	Identifier	connect_state		2370033	0					
ANR	2370366	Identifier	old_timeout_value		2370033	1					
ANR	2370367	ReturnStatement	return enter_connected_state ( ) ;	970:4:26937:26967	2370033	1	True				
ANR	2370368	CallExpression	enter_connected_state ( )		2370033	0					
ANR	2370369	Callee	enter_connected_state		2370033	0					
ANR	2370370	Identifier	enter_connected_state		2370033	0					
ANR	2370371	ArgumentList			2370033	1					
ANR	2370372	IdentifierDeclStatement	bool timed_out = connect_state . retry_timeout_time && time ( NULL ) >= connect_state . retry_timeout_time ;	974:2:26981:27099	2370033	3	True				
ANR	2370373	IdentifierDecl	timed_out = connect_state . retry_timeout_time && time ( NULL ) >= connect_state . retry_timeout_time		2370033	0					
ANR	2370374	IdentifierDeclType	bool		2370033	0					
ANR	2370375	Identifier	timed_out		2370033	1					
ANR	2370376	AssignmentExpression	timed_out = connect_state . retry_timeout_time && time ( NULL ) >= connect_state . retry_timeout_time		2370033	2		=			
ANR	2370377	Identifier	timed_out		2370033	0					
ANR	2370378	AndExpression	connect_state . retry_timeout_time && time ( NULL ) >= connect_state . retry_timeout_time		2370033	1		&&			
ANR	2370379	MemberAccess	connect_state . retry_timeout_time		2370033	0					
ANR	2370380	Identifier	connect_state		2370033	0					
ANR	2370381	Identifier	retry_timeout_time		2370033	1					
ANR	2370382	RelationalExpression	time ( NULL ) >= connect_state . retry_timeout_time		2370033	1		>=			
ANR	2370383	CallExpression	time ( NULL )		2370033	0					
ANR	2370384	Callee	time		2370033	0					
ANR	2370385	Identifier	time		2370033	0					
ANR	2370386	ArgumentList	NULL		2370033	1					
ANR	2370387	Argument	NULL		2370033	0					
ANR	2370388	Identifier	NULL		2370033	0					
ANR	2370389	MemberAccess	connect_state . retry_timeout_time		2370033	1					
ANR	2370390	Identifier	connect_state		2370033	0					
ANR	2370391	Identifier	retry_timeout_time		2370033	1					
ANR	2370392	IfStatement	if ( timed_out || connect_state . connect_refused )		2370033	4					
ANR	2370393	Condition	timed_out || connect_state . connect_refused	977:6:27108:27149	2370033	0	True				
ANR	2370394	OrExpression	timed_out || connect_state . connect_refused		2370033	0		||			
ANR	2370395	Identifier	timed_out		2370033	0					
ANR	2370396	MemberAccess	connect_state . connect_refused		2370033	1					
ANR	2370397	Identifier	connect_state		2370033	0					
ANR	2370398	Identifier	connect_refused		2370033	1					
ANR	2370399	CompoundStatement		122:50:3661:3661	2370033	1					
ANR	2370400	IfStatement	if ( _state != sock_bound )		2370033	0					
ANR	2370401	Condition	_state != sock_bound	978:6:27160:27179	2370033	0	True				
ANR	2370402	EqualityExpression	_state != sock_bound		2370033	0		!=			
ANR	2370403	Identifier	_state		2370033	0					
ANR	2370404	Identifier	sock_bound		2370033	1					
ANR	2370405	CompoundStatement		123:28:3691:3691	2370033	1					
ANR	2370406	ExpressionStatement	cancel_connect ( )	979:4:27188:27204	2370033	0	True				
ANR	2370407	CallExpression	cancel_connect ( )		2370033	0					
ANR	2370408	Callee	cancel_connect		2370033	0					
ANR	2370409	Identifier	cancel_connect		2370033	0					
ANR	2370410	ArgumentList			2370033	1					
ANR	2370411	ExpressionStatement	reportConnectionFailure ( timed_out )	982:3:27277:27311	2370033	1	True				
ANR	2370412	CallExpression	reportConnectionFailure ( timed_out )		2370033	0					
ANR	2370413	Callee	reportConnectionFailure		2370033	0					
ANR	2370414	Identifier	reportConnectionFailure		2370033	0					
ANR	2370415	ArgumentList	timed_out		2370033	1					
ANR	2370416	Argument	timed_out		2370033	0					
ANR	2370417	Identifier	timed_out		2370033	0					
ANR	2370418	ReturnStatement	return FALSE ;	983:3:27316:27328	2370033	2	True				
ANR	2370419	Identifier	FALSE		2370033	0					
ANR	2370420	IfStatement	if ( connect_state . connect_failed )		2370033	5					
ANR	2370421	Condition	connect_state . connect_failed	986:6:27341:27368	2370033	0	True				
ANR	2370422	MemberAccess	connect_state . connect_failed		2370033	0					
ANR	2370423	Identifier	connect_state		2370033	0					
ANR	2370424	Identifier	connect_failed		2370033	1					
ANR	2370425	CompoundStatement		131:37:3881:3881	2370033	1					
ANR	2370426	IfStatement	if ( ! connect_state . failed_once )		2370033	0					
ANR	2370427	Condition	! connect_state . failed_once	988:6:27416:27441	2370033	0	True				
ANR	2370428	UnaryOperationExpression	! connect_state . failed_once		2370033	0					
ANR	2370429	UnaryOperator	!		2370033	0					
ANR	2370430	MemberAccess	connect_state . failed_once		2370033	1					
ANR	2370431	Identifier	connect_state		2370033	0					
ANR	2370432	Identifier	failed_once		2370033	1					
ANR	2370433	CompoundStatement		133:34:3953:3953	2370033	1					
ANR	2370434	ExpressionStatement	connect_state . failed_once = true	989:4:27450:27482	2370033	0	True				
ANR	2370435	AssignmentExpression	connect_state . failed_once = true		2370033	0		=			
ANR	2370436	MemberAccess	connect_state . failed_once		2370033	0					
ANR	2370437	Identifier	connect_state		2370033	0					
ANR	2370438	Identifier	failed_once		2370033	1					
ANR	2370439	Identifier	true		2370033	1					
ANR	2370440	ExpressionStatement	reportConnectionFailure ( timed_out )	991:4:27489:27523	2370033	1	True				
ANR	2370441	CallExpression	reportConnectionFailure ( timed_out )		2370033	0					
ANR	2370442	Callee	reportConnectionFailure		2370033	0					
ANR	2370443	Identifier	reportConnectionFailure		2370033	0					
ANR	2370444	ArgumentList	timed_out		2370033	1					
ANR	2370445	Argument	timed_out		2370033	0					
ANR	2370446	Identifier	timed_out		2370033	0					
ANR	2370447	IfStatement	if ( connect_state . non_blocking_flag && _state == sock_connect_pending )		2370033	6					
ANR	2370448	Condition	connect_state . non_blocking_flag && _state == sock_connect_pending	995:6:27541:27611	2370033	0	True				
ANR	2370449	AndExpression	connect_state . non_blocking_flag && _state == sock_connect_pending		2370033	0		&&			
ANR	2370450	MemberAccess	connect_state . non_blocking_flag		2370033	0					
ANR	2370451	Identifier	connect_state		2370033	0					
ANR	2370452	Identifier	non_blocking_flag		2370033	1					
ANR	2370453	EqualityExpression	_state == sock_connect_pending		2370033	1		==			
ANR	2370454	Identifier	_state		2370033	0					
ANR	2370455	Identifier	sock_connect_pending		2370033	1					
ANR	2370456	CompoundStatement		142:2:4126:4126	2370033	1					
ANR	2370457	ReturnStatement	return CEDAR_EWOULDBLOCK ;	1001:3:27766:27790	2370033	0	True				
ANR	2370458	Identifier	CEDAR_EWOULDBLOCK		2370033	0					
ANR	2370459	IfStatement	if ( connect_state . non_blocking_flag )		2370033	7					
ANR	2370460	Condition	connect_state . non_blocking_flag	1004:6:27803:27833	2370033	0	True				
ANR	2370461	MemberAccess	connect_state . non_blocking_flag		2370033	0					
ANR	2370462	Identifier	connect_state		2370033	0					
ANR	2370463	Identifier	non_blocking_flag		2370033	1					
ANR	2370464	CompoundStatement		149:40:4346:4346	2370033	1					
ANR	2370465	IfStatement	if ( _state != sock_bound )		2370033	0					
ANR	2370466	Condition	_state != sock_bound	1008:6:28014:28033	2370033	0	True				
ANR	2370467	EqualityExpression	_state != sock_bound		2370033	0		!=			
ANR	2370468	Identifier	_state		2370033	0					
ANR	2370469	Identifier	sock_bound		2370033	1					
ANR	2370470	CompoundStatement		153:28:4545:4545	2370033	1					
ANR	2370471	ExpressionStatement	cancel_connect ( )	1009:4:28042:28058	2370033	0	True				
ANR	2370472	CallExpression	cancel_connect ( )		2370033	0					
ANR	2370473	Callee	cancel_connect		2370033	0					
ANR	2370474	Identifier	cancel_connect		2370033	0					
ANR	2370475	ArgumentList			2370033	1					
ANR	2370476	ExpressionStatement	_state = sock_connect_pending_retry	1011:3:28068:28103	2370033	1	True				
ANR	2370477	AssignmentExpression	_state = sock_connect_pending_retry		2370033	0		=			
ANR	2370478	Identifier	_state		2370033	0					
ANR	2370479	Identifier	sock_connect_pending_retry		2370033	1					
ANR	2370480	ExpressionStatement	connect_state . retry_wait_timeout_time = time ( NULL ) + 1	1012:3:28108:28160	2370033	2	True				
ANR	2370481	AssignmentExpression	connect_state . retry_wait_timeout_time = time ( NULL ) + 1		2370033	0		=			
ANR	2370482	MemberAccess	connect_state . retry_wait_timeout_time		2370033	0					
ANR	2370483	Identifier	connect_state		2370033	0					
ANR	2370484	Identifier	retry_wait_timeout_time		2370033	1					
ANR	2370485	AdditiveExpression	time ( NULL ) + 1		2370033	1		+			
ANR	2370486	CallExpression	time ( NULL )		2370033	0					
ANR	2370487	Callee	time		2370033	0					
ANR	2370488	Identifier	time		2370033	0					
ANR	2370489	ArgumentList	NULL		2370033	1					
ANR	2370490	Argument	NULL		2370033	0					
ANR	2370491	Identifier	NULL		2370033	0					
ANR	2370492	PrimaryExpression	1		2370033	1					
ANR	2370493	IfStatement	if ( DebugFlags & D_NETWORK )		2370033	3					
ANR	2370494	Condition	DebugFlags & D_NETWORK	1014:7:28170:28191	2370033	0	True				
ANR	2370495	BitAndExpression	DebugFlags & D_NETWORK		2370033	0		&			
ANR	2370496	Identifier	DebugFlags		2370033	0					
ANR	2370497	Identifier	D_NETWORK		2370033	1					
ANR	2370498	CompoundStatement		159:32:4704:4704	2370033	1					
ANR	2370499	Statement	dprintf	1015:4:28201:28207	2370033	0	True				
ANR	2370500	Statement	(	1015:11:28208:28208	2370033	1	True				
ANR	2370501	Statement	D_NETWORK	1015:12:28209:28217	2370033	2	True				
ANR	2370502	Statement	","	1015:21:28218:28218	2370033	3	True				
ANR	2370503	Statement	"""non-blocking CONNECT  waiting for next """	1016:12:28232:28272	2370033	4	True				
ANR	2370504	Statement	"""attempt fd=%d dst=%s\\n"""	1017:12:28286:28309	2370033	5	True				
ANR	2370505	Statement	","	1017:36:28310:28310	2370033	6	True				
ANR	2370506	Statement	_sock	1018:13:28325:28329	2370033	7	True				
ANR	2370507	Statement	","	1018:18:28330:28330	2370033	8	True				
ANR	2370508	Statement	get_sinful_peer	1018:20:28332:28346	2370033	9	True				
ANR	2370509	Statement	(	1018:35:28347:28347	2370033	10	True				
ANR	2370510	Statement	)	1018:36:28348:28348	2370033	11	True				
ANR	2370511	Statement	)	1018:38:28350:28350	2370033	12	True				
ANR	2370512	ExpressionStatement		1018:39:28351:28351	2370033	13	True				
ANR	2370513	ReturnStatement	return CEDAR_EWOULDBLOCK ;	1021:3:28362:28386	2370033	4	True				
ANR	2370514	Identifier	CEDAR_EWOULDBLOCK		2370033	0					
ANR	2370515	ExpressionStatement	sleep ( 1 )	1025:2:28447:28455	2370033	8	True				
ANR	2370516	CallExpression	sleep ( 1 )		2370033	0					
ANR	2370517	Callee	sleep		2370033	0					
ANR	2370518	Identifier	sleep		2370033	0					
ANR	2370519	ArgumentList	1		2370033	1					
ANR	2370520	Argument	1		2370033	0					
ANR	2370521	PrimaryExpression	1		2370033	0					
ANR	2370522	ExpressionStatement	"EXCEPT ( ""Impossible: Sock::do_connect_finish() broke out of while(1)"" )"	1029:1:28487:28556	2370033	1	True				
ANR	2370523	CallExpression	"EXCEPT ( ""Impossible: Sock::do_connect_finish() broke out of while(1)"" )"		2370033	0					
ANR	2370524	Callee	EXCEPT		2370033	0					
ANR	2370525	Identifier	EXCEPT		2370033	0					
ANR	2370526	ArgumentList	"""Impossible: Sock::do_connect_finish() broke out of while(1)"""		2370033	1					
ANR	2370527	Argument	"""Impossible: Sock::do_connect_finish() broke out of while(1)"""		2370033	0					
ANR	2370528	PrimaryExpression	"""Impossible: Sock::do_connect_finish() broke out of while(1)"""		2370033	0					
ANR	2370529	ReturnStatement	return FALSE ;	1030:1:28559:28571	2370033	2	True				
ANR	2370530	Identifier	FALSE		2370033	0					
ANR	2370531	ReturnType	int		2370033	1					
ANR	2370532	Identifier	Sock :: do_connect_finish		2370033	2					
ANR	2370533	ParameterList			2370033	3					
ANR	2370534	CFGEntryNode	ENTRY		2370033		True				
ANR	2370535	CFGExitNode	EXIT		2370033		True				
ANR	2370536	Symbol	test_connection		2370033						
ANR	2370537	Symbol	connect_state . retry_wait_timeout_time		2370033						
ANR	2370538	Symbol	selector . failed		2370033						
ANR	2370539	Symbol	sock_connect_pending		2370033						
ANR	2370540	Symbol	connect_state . connect_refused		2370033						
ANR	2370541	Symbol	do_connect_tryit		2370033						
ANR	2370542	Symbol	get_sinful_peer		2370033						
ANR	2370543	Symbol	_sock		2370033						
ANR	2370544	Symbol	connect_state . connect_failed		2370033						
ANR	2370545	Symbol	CEDAR_EWOULDBLOCK		2370033						
ANR	2370546	Symbol	selector . fd_ready		2370033						
ANR	2370547	Symbol	enter_connected_state		2370033						
ANR	2370548	Symbol	selector		2370033						
ANR	2370549	Symbol	connect_state . failed_once		2370033						
ANR	2370550	Symbol	_timeout		2370033						
ANR	2370551	Symbol	NULL		2370033						
ANR	2370552	Symbol	connect_state . old_timeout_value		2370033						
ANR	2370553	Symbol	Selector :: IO_EXCEPT		2370033						
ANR	2370554	Symbol	selector . timed_out		2370033						
ANR	2370555	Symbol	TRUE		2370033						
ANR	2370556	Symbol	WSAGetLastError		2370033						
ANR	2370557	Symbol	DebugFlags		2370033						
ANR	2370558	Symbol	timed_out		2370033						
ANR	2370559	Symbol	timeleft		2370033						
ANR	2370560	Symbol	sock_bound		2370033						
ANR	2370561	Symbol	connect_state		2370033						
ANR	2370562	Symbol	connect_state . retry_timeout_time		2370033						
ANR	2370563	Symbol	connect_state . this_try_timeout_time		2370033						
ANR	2370564	Symbol	_state		2370033						
ANR	2370565	Symbol	selector . signalled		2370033						
ANR	2370566	Symbol	true		2370033						
ANR	2370567	Symbol	D_NETWORK		2370033						
ANR	2370568	Symbol	FALSE		2370033						
ANR	2370569	Symbol	sock_connect_pending_retry		2370033						
ANR	2370570	Symbol	time		2370033						
ANR	2370571	Symbol	Selector :: IO_WRITE		2370033						
ANR	2370572	Symbol	connect_state . non_blocking_flag		2370033						
ANR	2370573	Function	Sock :: enter_connected_state	1033:0:28576:29061							
ANR	2370574	FunctionDef	Sock :: enter_connected_state (char const * op)		2370573	0					
ANR	2370575	CompoundStatement		1035:0:28625:29061	2370573	0					
ANR	2370576	ExpressionStatement	_state = sock_connect	1036:1:28628:28649	2370573	0	True				
ANR	2370577	AssignmentExpression	_state = sock_connect		2370573	0		=			
ANR	2370578	Identifier	_state		2370573	0					
ANR	2370579	Identifier	sock_connect		2370573	1					
ANR	2370580	IfStatement	if ( DebugFlags & D_NETWORK )		2370573	1					
ANR	2370581	Condition	DebugFlags & D_NETWORK	1037:5:28656:28677	2370573	0	True				
ANR	2370582	BitAndExpression	DebugFlags & D_NETWORK		2370573	0		&			
ANR	2370583	Identifier	DebugFlags		2370573	0					
ANR	2370584	Identifier	D_NETWORK		2370573	1					
ANR	2370585	CompoundStatement		3:30:55:55	2370573	1					
ANR	2370586	ExpressionStatement	"dprintf ( D_NETWORK , ""%s bound to %s fd=%d peer=%s\\n"" , op , get_sinful ( ) , _sock , get_sinful_peer ( ) )"	1038:2:28685:28788	2370573	0	True				
ANR	2370587	CallExpression	"dprintf ( D_NETWORK , ""%s bound to %s fd=%d peer=%s\\n"" , op , get_sinful ( ) , _sock , get_sinful_peer ( ) )"		2370573	0					
ANR	2370588	Callee	dprintf		2370573	0					
ANR	2370589	Identifier	dprintf		2370573	0					
ANR	2370590	ArgumentList	D_NETWORK		2370573	1					
ANR	2370591	Argument	D_NETWORK		2370573	0					
ANR	2370592	Identifier	D_NETWORK		2370573	0					
ANR	2370593	Argument	"""%s bound to %s fd=%d peer=%s\\n"""		2370573	1					
ANR	2370594	PrimaryExpression	"""%s bound to %s fd=%d peer=%s\\n"""		2370573	0					
ANR	2370595	Argument	op		2370573	2					
ANR	2370596	Identifier	op		2370573	0					
ANR	2370597	Argument	get_sinful ( )		2370573	3					
ANR	2370598	CallExpression	get_sinful ( )		2370573	0					
ANR	2370599	Callee	get_sinful		2370573	0					
ANR	2370600	Identifier	get_sinful		2370573	0					
ANR	2370601	ArgumentList			2370573	1					
ANR	2370602	Argument	_sock		2370573	4					
ANR	2370603	Identifier	_sock		2370573	0					
ANR	2370604	Argument	get_sinful_peer ( )		2370573	5					
ANR	2370605	CallExpression	get_sinful_peer ( )		2370573	0					
ANR	2370606	Callee	get_sinful_peer		2370573	0					
ANR	2370607	Identifier	get_sinful_peer		2370573	0					
ANR	2370608	ArgumentList			2370573	1					
ANR	2370609	IfStatement	if ( ! sendTargetSharedPortID ( ) )		2370573	2					
ANR	2370610	Condition	! sendTargetSharedPortID ( )	1043:5:28897:28921	2370573	0	True				
ANR	2370611	UnaryOperationExpression	! sendTargetSharedPortID ( )		2370573	0					
ANR	2370612	UnaryOperator	!		2370573	0					
ANR	2370613	CallExpression	sendTargetSharedPortID ( )		2370573	1					
ANR	2370614	Callee	sendTargetSharedPortID		2370573	0					
ANR	2370615	Identifier	sendTargetSharedPortID		2370573	0					
ANR	2370616	ArgumentList			2370573	1					
ANR	2370617	CompoundStatement		9:33:299:299	2370573	1					
ANR	2370618	ExpressionStatement	connect_state . connect_refused = true	1044:2:28929:28965	2370573	0	True				
ANR	2370619	AssignmentExpression	connect_state . connect_refused = true		2370573	0		=			
ANR	2370620	MemberAccess	connect_state . connect_refused		2370573	0					
ANR	2370621	Identifier	connect_state		2370573	0					
ANR	2370622	Identifier	connect_refused		2370573	1					
ANR	2370623	Identifier	true		2370573	1					
ANR	2370624	ExpressionStatement	"setConnectFailureReason ( ""Failed to send shared port id."" )"	1045:2:28969:29026	2370573	1	True				
ANR	2370625	CallExpression	"setConnectFailureReason ( ""Failed to send shared port id."" )"		2370573	0					
ANR	2370626	Callee	setConnectFailureReason		2370573	0					
ANR	2370627	Identifier	setConnectFailureReason		2370573	0					
ANR	2370628	ArgumentList	"""Failed to send shared port id."""		2370573	1					
ANR	2370629	Argument	"""Failed to send shared port id."""		2370573	0					
ANR	2370630	PrimaryExpression	"""Failed to send shared port id."""		2370573	0					
ANR	2370631	ReturnStatement	return false ;	1046:2:29030:29042	2370573	2	True				
ANR	2370632	Identifier	false		2370573	0					
ANR	2370633	ReturnStatement	return true ;	1048:1:29048:29059	2370573	3	True				
ANR	2370634	Identifier	true		2370573	0					
ANR	2370635	ReturnType	bool		2370573	1					
ANR	2370636	Identifier	Sock :: enter_connected_state		2370573	2					
ANR	2370637	ParameterList	char const * op		2370573	3					
ANR	2370638	Parameter	char const * op	1034:28:28609:28622	2370573	0	True				
ANR	2370639	ParameterType	char const *		2370573	0					
ANR	2370640	Identifier	op		2370573	1					
ANR	2370641	CFGEntryNode	ENTRY		2370573		True				
ANR	2370642	CFGExitNode	EXIT		2370573		True				
ANR	2370643	Symbol	op		2370573						
ANR	2370644	Symbol	false		2370573						
ANR	2370645	Symbol	DebugFlags		2370573						
ANR	2370646	Symbol	connect_state		2370573						
ANR	2370647	Symbol	connect_state . connect_refused		2370573						
ANR	2370648	Symbol	get_sinful_peer		2370573						
ANR	2370649	Symbol	sock_connect		2370573						
ANR	2370650	Symbol	get_sinful		2370573						
ANR	2370651	Symbol	_sock		2370573						
ANR	2370652	Symbol	_state		2370573						
ANR	2370653	Symbol	true		2370573						
ANR	2370654	Symbol	D_NETWORK		2370573						
ANR	2370655	Symbol	sendTargetSharedPortID		2370573						
ANR	2370656	Function	Sock :: setConnectFailureReason	1051:0:29064:29335							
ANR	2370657	FunctionDef	Sock :: setConnectFailureReason (char const * reason)		2370656	0					
ANR	2370658	CompoundStatement		1053:0:29119:29335	2370656	0					
ANR	2370659	IfStatement	if ( connect_state . connect_failure_reason )		2370656	0					
ANR	2370660	Condition	connect_state . connect_failure_reason	1054:4:29125:29160	2370656	0	True				
ANR	2370661	MemberAccess	connect_state . connect_failure_reason		2370656	0					
ANR	2370662	Identifier	connect_state		2370656	0					
ANR	2370663	Identifier	connect_failure_reason		2370656	1					
ANR	2370664	CompoundStatement		2:42:43:43	2370656	1					
ANR	2370665	ExpressionStatement	free ( connect_state . connect_failure_reason )	1055:2:29167:29209	2370656	0	True				
ANR	2370666	CallExpression	free ( connect_state . connect_failure_reason )		2370656	0					
ANR	2370667	Callee	free		2370656	0					
ANR	2370668	Identifier	free		2370656	0					
ANR	2370669	ArgumentList	connect_state . connect_failure_reason		2370656	1					
ANR	2370670	Argument	connect_state . connect_failure_reason		2370656	0					
ANR	2370671	MemberAccess	connect_state . connect_failure_reason		2370656	0					
ANR	2370672	Identifier	connect_state		2370656	0					
ANR	2370673	Identifier	connect_failure_reason		2370656	1					
ANR	2370674	ExpressionStatement	connect_state . connect_failure_reason = NULL	1056:2:29213:29256	2370656	1	True				
ANR	2370675	AssignmentExpression	connect_state . connect_failure_reason = NULL		2370656	0		=			
ANR	2370676	MemberAccess	connect_state . connect_failure_reason		2370656	0					
ANR	2370677	Identifier	connect_state		2370656	0					
ANR	2370678	Identifier	connect_failure_reason		2370656	1					
ANR	2370679	Identifier	NULL		2370656	1					
ANR	2370680	IfStatement	if ( reason )		2370656	1					
ANR	2370681	Condition	reason	1058:4:29265:29270	2370656	0	True				
ANR	2370682	Identifier	reason		2370656	0					
ANR	2370683	CompoundStatement		6:12:153:153	2370656	1					
ANR	2370684	ExpressionStatement	connect_state . connect_failure_reason = strdup ( reason )	1059:2:29277:29330	2370656	0	True				
ANR	2370685	AssignmentExpression	connect_state . connect_failure_reason = strdup ( reason )		2370656	0		=			
ANR	2370686	MemberAccess	connect_state . connect_failure_reason		2370656	0					
ANR	2370687	Identifier	connect_state		2370656	0					
ANR	2370688	Identifier	connect_failure_reason		2370656	1					
ANR	2370689	CallExpression	strdup ( reason )		2370656	1					
ANR	2370690	Callee	strdup		2370656	0					
ANR	2370691	Identifier	strdup		2370656	0					
ANR	2370692	ArgumentList	reason		2370656	1					
ANR	2370693	Argument	reason		2370656	0					
ANR	2370694	Identifier	reason		2370656	0					
ANR	2370695	ReturnType	void		2370656	1					
ANR	2370696	Identifier	Sock :: setConnectFailureReason		2370656	2					
ANR	2370697	ParameterList	char const * reason		2370656	3					
ANR	2370698	Parameter	char const * reason	1052:30:29099:29116	2370656	0	True				
ANR	2370699	ParameterType	char const *		2370656	0					
ANR	2370700	Identifier	reason		2370656	1					
ANR	2370701	CFGEntryNode	ENTRY		2370656		True				
ANR	2370702	CFGExitNode	EXIT		2370656		True				
ANR	2370703	Symbol	reason		2370656						
ANR	2370704	Symbol	NULL		2370656						
ANR	2370705	Symbol	connect_state . connect_failure_reason		2370656						
ANR	2370706	Symbol	strdup		2370656						
ANR	2370707	Symbol	connect_state		2370656						
ANR	2370708	Function	Sock :: reportConnectionFailure	1063:0:29338:30539							
ANR	2370709	FunctionDef	Sock :: reportConnectionFailure (bool timed_out)		2370708	0					
ANR	2370710	CompoundStatement		1065:0:29389:30539	2370708	0					
ANR	2370711	IdentifierDeclStatement	char const * reason = connect_state . connect_failure_reason ;	1066:1:29392:29449	2370708	0	True				
ANR	2370712	IdentifierDecl	* reason = connect_state . connect_failure_reason		2370708	0					
ANR	2370713	IdentifierDeclType	char const *		2370708	0					
ANR	2370714	Identifier	reason		2370708	1					
ANR	2370715	AssignmentExpression	* reason = connect_state . connect_failure_reason		2370708	2		=			
ANR	2370716	Identifier	reason		2370708	0					
ANR	2370717	MemberAccess	connect_state . connect_failure_reason		2370708	1					
ANR	2370718	Identifier	connect_state		2370708	0					
ANR	2370719	Identifier	connect_failure_reason		2370708	1					
ANR	2370720	IdentifierDeclStatement	char timeout_reason_buf [ 100 ] ;	1067:1:29452:29480	2370708	1	True				
ANR	2370721	IdentifierDecl	timeout_reason_buf [ 100 ]		2370708	0					
ANR	2370722	IdentifierDeclType	char [ 100 ]		2370708	0					
ANR	2370723	Identifier	timeout_reason_buf		2370708	1					
ANR	2370724	PrimaryExpression	100		2370708	2					
ANR	2370725	IfStatement	if ( ( ! reason || ! * reason ) && timed_out )		2370708	2					
ANR	2370726	Condition	( ! reason || ! * reason ) && timed_out	1068:4:29486:29519	2370708	0	True				
ANR	2370727	AndExpression	( ! reason || ! * reason ) && timed_out		2370708	0		&&			
ANR	2370728	OrExpression	! reason || ! * reason		2370708	0		||			
ANR	2370729	UnaryOperationExpression	! reason		2370708	0					
ANR	2370730	UnaryOperator	!		2370708	0					
ANR	2370731	Identifier	reason		2370708	1					
ANR	2370732	UnaryOperationExpression	! * reason		2370708	1					
ANR	2370733	UnaryOperator	!		2370708	0					
ANR	2370734	UnaryOperationExpression	* reason		2370708	1					
ANR	2370735	UnaryOperator	*		2370708	0					
ANR	2370736	Identifier	reason		2370708	1					
ANR	2370737	Identifier	timed_out		2370708	1					
ANR	2370738	CompoundStatement		4:40:132:132	2370708	1					
ANR	2370739	ExpressionStatement	"sprintf ( timeout_reason_buf , ""timed out after %d seconds"" , connect_state . retry_timeout_interval )"	1069:2:29526:29641	2370708	0	True				
ANR	2370740	CallExpression	"sprintf ( timeout_reason_buf , ""timed out after %d seconds"" , connect_state . retry_timeout_interval )"		2370708	0					
ANR	2370741	Callee	sprintf		2370708	0					
ANR	2370742	Identifier	sprintf		2370708	0					
ANR	2370743	ArgumentList	timeout_reason_buf		2370708	1					
ANR	2370744	Argument	timeout_reason_buf		2370708	0					
ANR	2370745	Identifier	timeout_reason_buf		2370708	0					
ANR	2370746	Argument	"""timed out after %d seconds"""		2370708	1					
ANR	2370747	PrimaryExpression	"""timed out after %d seconds"""		2370708	0					
ANR	2370748	Argument	connect_state . retry_timeout_interval		2370708	2					
ANR	2370749	MemberAccess	connect_state . retry_timeout_interval		2370708	0					
ANR	2370750	Identifier	connect_state		2370708	0					
ANR	2370751	Identifier	retry_timeout_interval		2370708	1					
ANR	2370752	ExpressionStatement	reason = timeout_reason_buf	1072:2:29645:29672	2370708	1	True				
ANR	2370753	AssignmentExpression	reason = timeout_reason_buf		2370708	0		=			
ANR	2370754	Identifier	reason		2370708	0					
ANR	2370755	Identifier	timeout_reason_buf		2370708	1					
ANR	2370756	IfStatement	if ( ! reason )		2370708	3					
ANR	2370757	Condition	! reason	1074:4:29681:29687	2370708	0	True				
ANR	2370758	UnaryOperationExpression	! reason		2370708	0					
ANR	2370759	UnaryOperator	!		2370708	0					
ANR	2370760	Identifier	reason		2370708	1					
ANR	2370761	CompoundStatement		10:13:300:300	2370708	1					
ANR	2370762	ExpressionStatement	"reason = """""	1075:2:29694:29705	2370708	0	True				
ANR	2370763	AssignmentExpression	"reason = """""		2370708	0		=			
ANR	2370764	Identifier	reason		2370708	0					
ANR	2370765	PrimaryExpression	""""""		2370708	1					
ANR	2370766	IdentifierDeclStatement	char will_keep_trying [ 100 ] ;	1078:1:29712:29738	2370708	4	True				
ANR	2370767	IdentifierDecl	will_keep_trying [ 100 ]		2370708	0					
ANR	2370768	IdentifierDeclType	char [ 100 ]		2370708	0					
ANR	2370769	Identifier	will_keep_trying		2370708	1					
ANR	2370770	PrimaryExpression	100		2370708	2					
ANR	2370771	ExpressionStatement	will_keep_trying [ 0 ] = '\\0'	1079:1:29741:29767	2370708	5	True				
ANR	2370772	AssignmentExpression	will_keep_trying [ 0 ] = '\\0'		2370708	0		=			
ANR	2370773	ArrayIndexing	will_keep_trying [ 0 ]		2370708	0					
ANR	2370774	Identifier	will_keep_trying		2370708	0					
ANR	2370775	PrimaryExpression	0		2370708	1					
ANR	2370776	PrimaryExpression	'\\0'		2370708	1					
ANR	2370777	IfStatement	if ( ! connect_state . connect_refused && ! timed_out )		2370708	6					
ANR	2370778	Condition	! connect_state . connect_refused && ! timed_out	1080:4:29773:29816	2370708	0	True				
ANR	2370779	AndExpression	! connect_state . connect_refused && ! timed_out		2370708	0		&&			
ANR	2370780	UnaryOperationExpression	! connect_state . connect_refused		2370708	0					
ANR	2370781	UnaryOperator	!		2370708	0					
ANR	2370782	MemberAccess	connect_state . connect_refused		2370708	1					
ANR	2370783	Identifier	connect_state		2370708	0					
ANR	2370784	Identifier	connect_refused		2370708	1					
ANR	2370785	UnaryOperationExpression	! timed_out		2370708	1					
ANR	2370786	UnaryOperator	!		2370708	0					
ANR	2370787	Identifier	timed_out		2370708	1					
ANR	2370788	CompoundStatement		16:50:429:429	2370708	1					
ANR	2370789	ExpressionStatement	"snprintf ( will_keep_trying , sizeof ( will_keep_trying ) , ""  Will keep trying for %ld total seconds (%ld to go).\\n"" , ( long ) connect_state . retry_timeout_interval , ( long ) ( connect_state . retry_timeout_time - time ( NULL ) ) )"	1081:2:29823:30057	2370708	0	True				
ANR	2370790	CallExpression	"snprintf ( will_keep_trying , sizeof ( will_keep_trying ) , ""  Will keep trying for %ld total seconds (%ld to go).\\n"" , ( long ) connect_state . retry_timeout_interval , ( long ) ( connect_state . retry_timeout_time - time ( NULL ) ) )"		2370708	0					
ANR	2370791	Callee	snprintf		2370708	0					
ANR	2370792	Identifier	snprintf		2370708	0					
ANR	2370793	ArgumentList	will_keep_trying		2370708	1					
ANR	2370794	Argument	will_keep_trying		2370708	0					
ANR	2370795	Identifier	will_keep_trying		2370708	0					
ANR	2370796	Argument	sizeof ( will_keep_trying )		2370708	1					
ANR	2370797	SizeofExpression	sizeof ( will_keep_trying )		2370708	0					
ANR	2370798	Sizeof	sizeof		2370708	0					
ANR	2370799	SizeofOperand	will_keep_trying		2370708	1					
ANR	2370800	Argument	"""  Will keep trying for %ld total seconds (%ld to go).\\n"""		2370708	2					
ANR	2370801	PrimaryExpression	"""  Will keep trying for %ld total seconds (%ld to go).\\n"""		2370708	0					
ANR	2370802	Argument	( long ) connect_state . retry_timeout_interval		2370708	3					
ANR	2370803	CastExpression	( long ) connect_state . retry_timeout_interval		2370708	0					
ANR	2370804	CastTarget	long		2370708	0					
ANR	2370805	MemberAccess	connect_state . retry_timeout_interval		2370708	1					
ANR	2370806	Identifier	connect_state		2370708	0					
ANR	2370807	Identifier	retry_timeout_interval		2370708	1					
ANR	2370808	Argument	( long ) ( connect_state . retry_timeout_time - time ( NULL ) )		2370708	4					
ANR	2370809	CastExpression	( long ) ( connect_state . retry_timeout_time - time ( NULL ) )		2370708	0					
ANR	2370810	CastTarget	long		2370708	0					
ANR	2370811	AdditiveExpression	connect_state . retry_timeout_time - time ( NULL )		2370708	1		-			
ANR	2370812	MemberAccess	connect_state . retry_timeout_time		2370708	0					
ANR	2370813	Identifier	connect_state		2370708	0					
ANR	2370814	Identifier	retry_timeout_time		2370708	1					
ANR	2370815	CallExpression	time ( NULL )		2370708	1					
ANR	2370816	Callee	time		2370708	0					
ANR	2370817	Identifier	time		2370708	0					
ANR	2370818	ArgumentList	NULL		2370708	1					
ANR	2370819	Argument	NULL		2370708	0					
ANR	2370820	Identifier	NULL		2370708	0					
ANR	2370821	IdentifierDeclStatement	char const * hostname = connect_state . host ;	1087:1:30064:30105	2370708	7	True				
ANR	2370822	IdentifierDecl	* hostname = connect_state . host		2370708	0					
ANR	2370823	IdentifierDeclType	char const *		2370708	0					
ANR	2370824	Identifier	hostname		2370708	1					
ANR	2370825	AssignmentExpression	* hostname = connect_state . host		2370708	2		=			
ANR	2370826	Identifier	hostname		2370708	0					
ANR	2370827	MemberAccess	connect_state . host		2370708	1					
ANR	2370828	Identifier	connect_state		2370708	0					
ANR	2370829	Identifier	host		2370708	1					
ANR	2370830	IfStatement	if ( ! hostname )		2370708	8					
ANR	2370831	Condition	! hostname	1088:4:30111:30119	2370708	0	True				
ANR	2370832	UnaryOperationExpression	! hostname		2370708	0					
ANR	2370833	UnaryOperator	!		2370708	0					
ANR	2370834	Identifier	hostname		2370708	1					
ANR	2370835	CompoundStatement		24:15:732:732	2370708	1					
ANR	2370836	ExpressionStatement	"hostname = """""	1089:2:30126:30139	2370708	0	True				
ANR	2370837	AssignmentExpression	"hostname = """""		2370708	0		=			
ANR	2370838	Identifier	hostname		2370708	0					
ANR	2370839	PrimaryExpression	""""""		2370708	1					
ANR	2370840	IfStatement	if ( hostname [ 0 ] == '<' )		2370708	9					
ANR	2370841	Condition	hostname [ 0 ] == '<'	1091:4:30148:30165	2370708	0	True				
ANR	2370842	EqualityExpression	hostname [ 0 ] == '<'		2370708	0		==			
ANR	2370843	ArrayIndexing	hostname [ 0 ]		2370708	0					
ANR	2370844	Identifier	hostname		2370708	0					
ANR	2370845	PrimaryExpression	0		2370708	1					
ANR	2370846	PrimaryExpression	'<'		2370708	1					
ANR	2370847	CompoundStatement		27:24:778:778	2370708	1					
ANR	2370848	ExpressionStatement	"hostname = """""	1094:2:30291:30304	2370708	0	True				
ANR	2370849	AssignmentExpression	"hostname = """""		2370708	0		=			
ANR	2370850	Identifier	hostname		2370708	0					
ANR	2370851	PrimaryExpression	""""""		2370708	1					
ANR	2370852	ExpressionStatement	"dprintf ( D_ALWAYS , ""attempt to connect to %s%s%s failed%s%s.%s\\n"" , hostname , hostname [ 0 ] ? "" "" : """" , get_sinful_peer ( ) , reason [ 0 ] ? "": "" : """" , reason , will_keep_trying )"	1096:1:30310:30537	2370708	10	True				
ANR	2370853	CallExpression	"dprintf ( D_ALWAYS , ""attempt to connect to %s%s%s failed%s%s.%s\\n"" , hostname , hostname [ 0 ] ? "" "" : """" , get_sinful_peer ( ) , reason [ 0 ] ? "": "" : """" , reason , will_keep_trying )"		2370708	0					
ANR	2370854	Callee	dprintf		2370708	0					
ANR	2370855	Identifier	dprintf		2370708	0					
ANR	2370856	ArgumentList	D_ALWAYS		2370708	1					
ANR	2370857	Argument	D_ALWAYS		2370708	0					
ANR	2370858	Identifier	D_ALWAYS		2370708	0					
ANR	2370859	Argument	"""attempt to connect to %s%s%s failed%s%s.%s\\n"""		2370708	1					
ANR	2370860	PrimaryExpression	"""attempt to connect to %s%s%s failed%s%s.%s\\n"""		2370708	0					
ANR	2370861	Argument	hostname		2370708	2					
ANR	2370862	Identifier	hostname		2370708	0					
ANR	2370863	Argument	"hostname [ 0 ] ? "" "" : """""		2370708	3					
ANR	2370864	ConditionalExpression	"hostname [ 0 ] ? "" "" : """""		2370708	0					
ANR	2370865	Condition	hostname [ 0 ]		2370708	0					
ANR	2370866	ArrayIndexing	hostname [ 0 ]		2370708	0					
ANR	2370867	Identifier	hostname		2370708	0					
ANR	2370868	PrimaryExpression	0		2370708	1					
ANR	2370869	PrimaryExpression	""" """		2370708	1					
ANR	2370870	PrimaryExpression	""""""		2370708	2					
ANR	2370871	Argument	get_sinful_peer ( )		2370708	4					
ANR	2370872	CallExpression	get_sinful_peer ( )		2370708	0					
ANR	2370873	Callee	get_sinful_peer		2370708	0					
ANR	2370874	Identifier	get_sinful_peer		2370708	0					
ANR	2370875	ArgumentList			2370708	1					
ANR	2370876	Argument	"reason [ 0 ] ? "": "" : """""		2370708	5					
ANR	2370877	ConditionalExpression	"reason [ 0 ] ? "": "" : """""		2370708	0					
ANR	2370878	Condition	reason [ 0 ]		2370708	0					
ANR	2370879	ArrayIndexing	reason [ 0 ]		2370708	0					
ANR	2370880	Identifier	reason		2370708	0					
ANR	2370881	PrimaryExpression	0		2370708	1					
ANR	2370882	PrimaryExpression	""": """		2370708	1					
ANR	2370883	PrimaryExpression	""""""		2370708	2					
ANR	2370884	Argument	reason		2370708	6					
ANR	2370885	Identifier	reason		2370708	0					
ANR	2370886	Argument	will_keep_trying		2370708	7					
ANR	2370887	Identifier	will_keep_trying		2370708	0					
ANR	2370888	ReturnType	void		2370708	1					
ANR	2370889	Identifier	Sock :: reportConnectionFailure		2370708	2					
ANR	2370890	ParameterList	bool timed_out		2370708	3					
ANR	2370891	Parameter	bool timed_out	1064:30:29373:29386	2370708	0	True				
ANR	2370892	ParameterType	bool		2370708	0					
ANR	2370893	Identifier	timed_out		2370708	1					
ANR	2370894	CFGEntryNode	ENTRY		2370708		True				
ANR	2370895	CFGExitNode	EXIT		2370708		True				
ANR	2370896	Symbol	reason		2370708						
ANR	2370897	Symbol	timeout_reason_buf		2370708						
ANR	2370898	Symbol	NULL		2370708						
ANR	2370899	Symbol	connect_state . host		2370708						
ANR	2370900	Symbol	* reason		2370708						
ANR	2370901	Symbol	connect_state . retry_timeout_interval		2370708						
ANR	2370902	Symbol	D_ALWAYS		2370708						
ANR	2370903	Symbol	timed_out		2370708						
ANR	2370904	Symbol	connect_state . connect_failure_reason		2370708						
ANR	2370905	Symbol	connect_state		2370708						
ANR	2370906	Symbol	connect_state . connect_refused		2370708						
ANR	2370907	Symbol	will_keep_trying		2370708						
ANR	2370908	Symbol	connect_state . retry_timeout_time		2370708						
ANR	2370909	Symbol	get_sinful_peer		2370708						
ANR	2370910	Symbol	hostname		2370708						
ANR	2370911	Symbol	* hostname		2370708						
ANR	2370912	Symbol	* will_keep_trying		2370708						
ANR	2370913	Symbol	time		2370708						
ANR	2370914	Function	Sock :: setConnectFailureErrno	1106:0:30542:31205							
ANR	2370915	FunctionDef	"Sock :: setConnectFailureErrno (int error , char const * syscall)"		2370914	0					
ANR	2370916	CompoundStatement		1108:0:30607:31205	2370914	0					
ANR	2370917	IdentifierDeclStatement	char errmsg [ 150 ] ;	1110:1:30629:30645	2370914	0	True				
ANR	2370918	IdentifierDecl	errmsg [ 150 ]		2370914	0					
ANR	2370919	IdentifierDeclType	char [ 150 ]		2370914	0					
ANR	2370920	Identifier	errmsg		2370914	1					
ANR	2370921	PrimaryExpression	150		2370914	2					
ANR	2370922	IdentifierDeclStatement	"char const * errdesc = """" ;"	1111:1:30648:30672	2370914	1	True				
ANR	2370923	IdentifierDecl	"* errdesc = """""		2370914	0					
ANR	2370924	IdentifierDeclType	char const *		2370914	0					
ANR	2370925	Identifier	errdesc		2370914	1					
ANR	2370926	AssignmentExpression	"* errdesc = """""		2370914	2		=			
ANR	2370927	Identifier	errdesc		2370914	0					
ANR	2370928	PrimaryExpression	""""""		2370914	1					
ANR	2370929	IfStatement	if ( error == WSAECONNREFUSED )		2370914	2					
ANR	2370930	Condition	error == WSAECONNREFUSED	1112:4:30678:30701	2370914	0	True				
ANR	2370931	EqualityExpression	error == WSAECONNREFUSED		2370914	0		==			
ANR	2370932	Identifier	error		2370914	0					
ANR	2370933	Identifier	WSAECONNREFUSED		2370914	1					
ANR	2370934	CompoundStatement		5:30:96:96	2370914	1					
ANR	2370935	ExpressionStatement	connect_state . connect_refused = true	1113:2:30708:30744	2370914	0	True				
ANR	2370936	AssignmentExpression	connect_state . connect_refused = true		2370914	0		=			
ANR	2370937	MemberAccess	connect_state . connect_refused		2370914	0					
ANR	2370938	Identifier	connect_state		2370914	0					
ANR	2370939	Identifier	connect_refused		2370914	1					
ANR	2370940	Identifier	true		2370914	1					
ANR	2370941	ExpressionStatement	"errdesc = "" connection refused"""	1114:2:30748:30779	2370914	1	True				
ANR	2370942	AssignmentExpression	"errdesc = "" connection refused"""		2370914	0		=			
ANR	2370943	Identifier	errdesc		2370914	0					
ANR	2370944	PrimaryExpression	""" connection refused"""		2370914	1					
ANR	2370945	ExpressionStatement	"snprintf ( errmsg , sizeof ( errmsg ) , ""%.15s errno = %d%.30s"" , syscall , error , errdesc )"	1116:1:30785:30899	2370914	3	True				
ANR	2370946	CallExpression	"snprintf ( errmsg , sizeof ( errmsg ) , ""%.15s errno = %d%.30s"" , syscall , error , errdesc )"		2370914	0					
ANR	2370947	Callee	snprintf		2370914	0					
ANR	2370948	Identifier	snprintf		2370914	0					
ANR	2370949	ArgumentList	errmsg		2370914	1					
ANR	2370950	Argument	errmsg		2370914	0					
ANR	2370951	Identifier	errmsg		2370914	0					
ANR	2370952	Argument	sizeof ( errmsg )		2370914	1					
ANR	2370953	SizeofExpression	sizeof ( errmsg )		2370914	0					
ANR	2370954	Sizeof	sizeof		2370914	0					
ANR	2370955	SizeofOperand	errmsg		2370914	1					
ANR	2370956	Argument	"""%.15s errno = %d%.30s"""		2370914	2					
ANR	2370957	PrimaryExpression	"""%.15s errno = %d%.30s"""		2370914	0					
ANR	2370958	Argument	syscall		2370914	3					
ANR	2370959	Identifier	syscall		2370914	0					
ANR	2370960	Argument	error		2370914	4					
ANR	2370961	Identifier	error		2370914	0					
ANR	2370962	Argument	errdesc		2370914	5					
ANR	2370963	Identifier	errdesc		2370914	0					
ANR	2370964	ExpressionStatement	setConnectFailureReason ( errmsg )	1120:1:30902:30935	2370914	4	True				
ANR	2370965	CallExpression	setConnectFailureReason ( errmsg )		2370914	0					
ANR	2370966	Callee	setConnectFailureReason		2370914	0					
ANR	2370967	Identifier	setConnectFailureReason		2370914	0					
ANR	2370968	ArgumentList	errmsg		2370914	1					
ANR	2370969	Argument	errmsg		2370914	0					
ANR	2370970	Identifier	errmsg		2370914	0					
ANR	2370971	ReturnType	void		2370914	1					
ANR	2370972	Identifier	Sock :: setConnectFailureErrno		2370914	2					
ANR	2370973	ParameterList	"int error , char const * syscall"		2370914	3					
ANR	2370974	Parameter	int error	1107:29:30576:30584	2370914	0	True				
ANR	2370975	ParameterType	int		2370914	0					
ANR	2370976	Identifier	error		2370914	1					
ANR	2370977	Parameter	char const * syscall	1107:39:30586:30604	2370914	1	True				
ANR	2370978	ParameterType	char const *		2370914	0					
ANR	2370979	Identifier	syscall		2370914	1					
ANR	2370980	CFGEntryNode	ENTRY		2370914		True				
ANR	2370981	CFGExitNode	EXIT		2370914		True				
ANR	2370982	Symbol	connect_state . connect_refused		2370914						
ANR	2370983	Symbol	syscall		2370914						
ANR	2370984	Symbol	errdesc		2370914						
ANR	2370985	Symbol	true		2370914						
ANR	2370986	Symbol	errmsg		2370914						
ANR	2370987	Symbol	error		2370914						
ANR	2370988	Symbol	WSAECONNREFUSED		2370914						
ANR	2370989	Symbol	connect_state		2370914						
ANR	2370990	Function	Sock :: do_connect_tryit	1134:0:31208:33327							
ANR	2370991	FunctionDef	Sock :: do_connect_tryit ()		2370990	0					
ANR	2370992	CompoundStatement		1135:0:31238:33327	2370990	0					
ANR	2370993	ExpressionStatement	connect_state . connect_failed = false	1139:1:31356:31392	2370990	0	True				
ANR	2370994	AssignmentExpression	connect_state . connect_failed = false		2370990	0		=			
ANR	2370995	MemberAccess	connect_state . connect_failed		2370990	0					
ANR	2370996	Identifier	connect_state		2370990	0					
ANR	2370997	Identifier	connect_failed		2370990	1					
ANR	2370998	Identifier	false		2370990	1					
ANR	2370999	ExpressionStatement	connect_state . connect_refused = false	1140:1:31395:31432	2370990	1	True				
ANR	2371000	AssignmentExpression	connect_state . connect_refused = false		2370990	0		=			
ANR	2371001	MemberAccess	connect_state . connect_refused		2370990	0					
ANR	2371002	Identifier	connect_state		2370990	0					
ANR	2371003	Identifier	connect_refused		2370990	1					
ANR	2371004	Identifier	false		2370990	1					
ANR	2371005	IfStatement	if ( connect_state . non_blocking_flag )		2370990	2					
ANR	2371006	Condition	connect_state . non_blocking_flag	1151:6:31880:31910	2370990	0	True				
ANR	2371007	MemberAccess	connect_state . non_blocking_flag		2370990	0					
ANR	2371008	Identifier	connect_state		2370990	0					
ANR	2371009	Identifier	non_blocking_flag		2370990	1					
ANR	2371010	CompoundStatement		17:40:675:675	2370990	1					
ANR	2371011	IfStatement	if ( timeout ( 1 ) < 0 )		2370990	0					
ANR	2371012	Condition	timeout ( 1 ) < 0	1152:7:31923:31936	2370990	0	True				
ANR	2371013	RelationalExpression	timeout ( 1 ) < 0		2370990	0		<			
ANR	2371014	CallExpression	timeout ( 1 )		2370990	0					
ANR	2371015	Callee	timeout		2370990	0					
ANR	2371016	Identifier	timeout		2370990	0					
ANR	2371017	ArgumentList	1		2370990	1					
ANR	2371018	Argument	1		2370990	0					
ANR	2371019	PrimaryExpression	1		2370990	0					
ANR	2371020	PrimaryExpression	0		2370990	1					
ANR	2371021	CompoundStatement		18:24:701:701	2370990	1					
ANR	2371022	ExpressionStatement	connect_state . connect_refused = true	1154:3:31989:32025	2370990	0	True				
ANR	2371023	AssignmentExpression	connect_state . connect_refused = true		2370990	0		=			
ANR	2371024	MemberAccess	connect_state . connect_refused		2370990	0					
ANR	2371025	Identifier	connect_state		2370990	0					
ANR	2371026	Identifier	connect_refused		2370990	1					
ANR	2371027	Identifier	true		2370990	1					
ANR	2371028	ExpressionStatement	"setConnectFailureReason ( ""Failed to set timeout."" )"	1155:3:32048:32097	2370990	1	True				
ANR	2371029	CallExpression	"setConnectFailureReason ( ""Failed to set timeout."" )"		2370990	0					
ANR	2371030	Callee	setConnectFailureReason		2370990	0					
ANR	2371031	Identifier	setConnectFailureReason		2370990	0					
ANR	2371032	ArgumentList	"""Failed to set timeout."""		2370990	1					
ANR	2371033	Argument	"""Failed to set timeout."""		2370990	0					
ANR	2371034	PrimaryExpression	"""Failed to set timeout."""		2370990	0					
ANR	2371035	ReturnStatement	return false ;	1156:3:32102:32114	2370990	2	True				
ANR	2371036	Identifier	false		2370990	0					
ANR	2371037	IfStatement	"if ( condor_connect ( _sock , _who ) == 0 )"		2370990	3					
ANR	2371038	Condition	"condor_connect ( _sock , _who ) == 0"	1161:5:32130:32161	2370990	0	True				
ANR	2371039	EqualityExpression	"condor_connect ( _sock , _who ) == 0"		2370990	0		==			
ANR	2371040	CallExpression	"condor_connect ( _sock , _who )"		2370990	0					
ANR	2371041	Callee	condor_connect		2370990	0					
ANR	2371042	Identifier	condor_connect		2370990	0					
ANR	2371043	ArgumentList	_sock		2370990	1					
ANR	2371044	Argument	_sock		2370990	0					
ANR	2371045	Identifier	_sock		2370990	0					
ANR	2371046	Argument	_who		2370990	1					
ANR	2371047	Identifier	_who		2370990	0					
ANR	2371048	PrimaryExpression	0		2370990	1					
ANR	2371049	CompoundStatement		27:39:925:925	2370990	1					
ANR	2371050	IfStatement	if ( connect_state . non_blocking_flag )		2370990	0					
ANR	2371051	Condition	connect_state . non_blocking_flag	1162:7:32173:32203	2370990	0	True				
ANR	2371052	MemberAccess	connect_state . non_blocking_flag		2370990	0					
ANR	2371053	Identifier	connect_state		2370990	0					
ANR	2371054	Identifier	non_blocking_flag		2370990	1					
ANR	2371055	CompoundStatement		28:41:968:968	2370990	1					
ANR	2371056	ReturnStatement	return false ;	1172:3:32665:32677	2370990	0	True				
ANR	2371057	Identifier	false		2370990	0					
ANR	2371058	ReturnStatement	return enter_connected_state ( ) ;	1175:2:32686:32716	2370990	1	True				
ANR	2371059	CallExpression	enter_connected_state ( )		2370990	0					
ANR	2371060	Callee	enter_connected_state		2370990	0					
ANR	2371061	Identifier	enter_connected_state		2370990	0					
ANR	2371062	ArgumentList			2370990	1					
ANR	2371063	IdentifierDeclStatement	int lasterr = WSAGetLastError ( ) ;	1179:1:32742:32773	2370990	4	True				
ANR	2371064	IdentifierDecl	lasterr = WSAGetLastError ( )		2370990	0					
ANR	2371065	IdentifierDeclType	int		2370990	0					
ANR	2371066	Identifier	lasterr		2370990	1					
ANR	2371067	AssignmentExpression	lasterr = WSAGetLastError ( )		2370990	2		=			
ANR	2371068	Identifier	lasterr		2370990	0					
ANR	2371069	CallExpression	WSAGetLastError ( )		2370990	1					
ANR	2371070	Callee	WSAGetLastError		2370990	0					
ANR	2371071	Identifier	WSAGetLastError		2370990	0					
ANR	2371072	ArgumentList			2370990	1					
ANR	2371073	IfStatement	if ( lasterr != WSAEINPROGRESS && lasterr != WSAEWOULDBLOCK )		2370990	5					
ANR	2371074	Condition	lasterr != WSAEINPROGRESS && lasterr != WSAEWOULDBLOCK	1180:5:32780:32833	2370990	0	True				
ANR	2371075	AndExpression	lasterr != WSAEINPROGRESS && lasterr != WSAEWOULDBLOCK		2370990	0		&&			
ANR	2371076	EqualityExpression	lasterr != WSAEINPROGRESS		2370990	0		!=			
ANR	2371077	Identifier	lasterr		2370990	0					
ANR	2371078	Identifier	WSAEINPROGRESS		2370990	1					
ANR	2371079	EqualityExpression	lasterr != WSAEWOULDBLOCK		2370990	1		!=			
ANR	2371080	Identifier	lasterr		2370990	0					
ANR	2371081	Identifier	WSAEWOULDBLOCK		2370990	1					
ANR	2371082	CompoundStatement		46:61:1597:1597	2370990	1					
ANR	2371083	ExpressionStatement	connect_state . connect_failed = true	1181:2:32840:32875	2370990	0	True				
ANR	2371084	AssignmentExpression	connect_state . connect_failed = true		2370990	0		=			
ANR	2371085	MemberAccess	connect_state . connect_failed		2370990	0					
ANR	2371086	Identifier	connect_state		2370990	0					
ANR	2371087	Identifier	connect_failed		2370990	1					
ANR	2371088	Identifier	true		2370990	1					
ANR	2371089	ExpressionStatement	"setConnectFailureErrno ( lasterr , ""connect"" )"	1182:2:32879:32920	2370990	1	True				
ANR	2371090	CallExpression	"setConnectFailureErrno ( lasterr , ""connect"" )"		2370990	0					
ANR	2371091	Callee	setConnectFailureErrno		2370990	0					
ANR	2371092	Identifier	setConnectFailureErrno		2370990	0					
ANR	2371093	ArgumentList	lasterr		2370990	1					
ANR	2371094	Argument	lasterr		2370990	0					
ANR	2371095	Identifier	lasterr		2370990	0					
ANR	2371096	Argument	"""connect"""		2370990	1					
ANR	2371097	PrimaryExpression	"""connect"""		2370990	0					
ANR	2371098	ExpressionStatement	cancel_connect ( )	1184:2:32925:32941	2370990	2	True				
ANR	2371099	CallExpression	cancel_connect ( )		2370990	0					
ANR	2371100	Callee	cancel_connect		2370990	0					
ANR	2371101	Identifier	cancel_connect		2370990	0					
ANR	2371102	ArgumentList			2370990	1					
ANR	2371103	ReturnStatement	return false ;	1201:1:33313:33325	2370990	6	True				
ANR	2371104	Identifier	false		2370990	0					
ANR	2371105	ReturnType	bool		2370990	1					
ANR	2371106	Identifier	Sock :: do_connect_tryit		2370990	2					
ANR	2371107	ParameterList			2370990	3					
ANR	2371108	CFGEntryNode	ENTRY		2370990		True				
ANR	2371109	CFGExitNode	EXIT		2370990		True				
ANR	2371110	Symbol	WSAEWOULDBLOCK		2370990						
ANR	2371111	Symbol	condor_connect		2370990						
ANR	2371112	Symbol	false		2370990						
ANR	2371113	Symbol	WSAGetLastError		2370990						
ANR	2371114	Symbol	WSAEINPROGRESS		2370990						
ANR	2371115	Symbol	timeout		2370990						
ANR	2371116	Symbol	connect_state		2370990						
ANR	2371117	Symbol	connect_state . connect_refused		2370990						
ANR	2371118	Symbol	_who		2370990						
ANR	2371119	Symbol	_sock		2370990						
ANR	2371120	Symbol	connect_state . connect_failed		2370990						
ANR	2371121	Symbol	enter_connected_state		2370990						
ANR	2371122	Symbol	true		2370990						
ANR	2371123	Symbol	connect_state . non_blocking_flag		2370990						
ANR	2371124	Symbol	lasterr		2370990						
ANR	2371125	Function	Sock :: cancel_connect	1204:0:33330:34849							
ANR	2371126	FunctionDef	Sock :: cancel_connect ()		2371125	0					
ANR	2371127	CompoundStatement		1206:0:33358:34849	2371125	0					
ANR	2371128	Statement	::	1223:1:34270:34271	2371125	0	True				
ANR	2371129	ExpressionStatement	closesocket ( _sock )	1223:3:34272:34290	2371125	1	True				
ANR	2371130	CallExpression	closesocket ( _sock )		2371125	0					
ANR	2371131	Callee	closesocket		2371125	0					
ANR	2371132	Identifier	closesocket		2371125	0					
ANR	2371133	ArgumentList	_sock		2371125	1					
ANR	2371134	Argument	_sock		2371125	0					
ANR	2371135	Identifier	_sock		2371125	0					
ANR	2371136	ExpressionStatement	_sock = INVALID_SOCKET	1224:1:34293:34315	2371125	2	True				
ANR	2371137	AssignmentExpression	_sock = INVALID_SOCKET		2371125	0		=			
ANR	2371138	Identifier	_sock		2371125	0					
ANR	2371139	Identifier	INVALID_SOCKET		2371125	1					
ANR	2371140	ExpressionStatement	_state = sock_virgin	1225:1:34318:34338	2371125	3	True				
ANR	2371141	AssignmentExpression	_state = sock_virgin		2371125	0		=			
ANR	2371142	Identifier	_state		2371125	0					
ANR	2371143	Identifier	sock_virgin		2371125	1					
ANR	2371144	IfStatement	if ( assign ( ) == FALSE )		2371125	4					
ANR	2371145	Condition	assign ( ) == FALSE	1228:5:34377:34393	2371125	0	True				
ANR	2371146	EqualityExpression	assign ( ) == FALSE		2371125	0		==			
ANR	2371147	CallExpression	assign ( )		2371125	0					
ANR	2371148	Callee	assign		2371125	0					
ANR	2371149	Identifier	assign		2371125	0					
ANR	2371150	ArgumentList			2371125	1					
ANR	2371151	Identifier	FALSE		2371125	1					
ANR	2371152	CompoundStatement		23:24:1037:1037	2371125	1					
ANR	2371153	ExpressionStatement	"dprintf ( D_ALWAYS , ""assign() failed after a failed connect!\\n"" )"	1229:2:34400:34465	2371125	0	True				
ANR	2371154	CallExpression	"dprintf ( D_ALWAYS , ""assign() failed after a failed connect!\\n"" )"		2371125	0					
ANR	2371155	Callee	dprintf		2371125	0					
ANR	2371156	Identifier	dprintf		2371125	0					
ANR	2371157	ArgumentList	D_ALWAYS		2371125	1					
ANR	2371158	Argument	D_ALWAYS		2371125	0					
ANR	2371159	Identifier	D_ALWAYS		2371125	0					
ANR	2371160	Argument	"""assign() failed after a failed connect!\\n"""		2371125	1					
ANR	2371161	PrimaryExpression	"""assign() failed after a failed connect!\\n"""		2371125	0					
ANR	2371162	ExpressionStatement	connect_state . connect_refused = true	1231:2:34469:34505	2371125	1	True				
ANR	2371163	AssignmentExpression	connect_state . connect_refused = true		2371125	0		=			
ANR	2371164	MemberAccess	connect_state . connect_refused		2371125	0					
ANR	2371165	Identifier	connect_state		2371125	0					
ANR	2371166	Identifier	connect_refused		2371125	1					
ANR	2371167	Identifier	true		2371125	1					
ANR	2371168	ReturnStatement	return ;	1232:2:34527:34533	2371125	2	True				
ANR	2371169	IfStatement	if ( ! bind ( true ) )		2371125	5					
ANR	2371170	Condition	! bind ( true )	1237:5:34622:34632	2371125	0	True				
ANR	2371171	UnaryOperationExpression	! bind ( true )		2371125	0					
ANR	2371172	UnaryOperator	!		2371125	0					
ANR	2371173	CallExpression	bind ( true )		2371125	1					
ANR	2371174	Callee	bind		2371125	0					
ANR	2371175	Identifier	bind		2371125	0					
ANR	2371176	ArgumentList	true		2371125	1					
ANR	2371177	Argument	true		2371125	0					
ANR	2371178	Identifier	true		2371125	0					
ANR	2371179	CompoundStatement		32:19:1277:1277	2371125	1					
ANR	2371180	ExpressionStatement	connect_state . connect_refused = true	1238:2:34640:34676	2371125	0	True				
ANR	2371181	AssignmentExpression	connect_state . connect_refused = true		2371125	0		=			
ANR	2371182	MemberAccess	connect_state . connect_refused		2371125	0					
ANR	2371183	Identifier	connect_state		2371125	0					
ANR	2371184	Identifier	connect_refused		2371125	1					
ANR	2371185	Identifier	true		2371125	1					
ANR	2371186	IfStatement	if ( connect_state . old_timeout_value != _timeout )		2371125	6					
ANR	2371187	Condition	connect_state . old_timeout_value != _timeout	1241:6:34706:34748	2371125	0	True				
ANR	2371188	EqualityExpression	connect_state . old_timeout_value != _timeout		2371125	0		!=			
ANR	2371189	MemberAccess	connect_state . old_timeout_value		2371125	0					
ANR	2371190	Identifier	connect_state		2371125	0					
ANR	2371191	Identifier	old_timeout_value		2371125	1					
ANR	2371192	Identifier	_timeout		2371125	1					
ANR	2371193	CompoundStatement		36:52:1393:1393	2371125	1					
ANR	2371194	ExpressionStatement	timeout_no_timeout_multiplier ( connect_state . old_timeout_value )	1243:2:34782:34844	2371125	0	True				
ANR	2371195	CallExpression	timeout_no_timeout_multiplier ( connect_state . old_timeout_value )		2371125	0					
ANR	2371196	Callee	timeout_no_timeout_multiplier		2371125	0					
ANR	2371197	Identifier	timeout_no_timeout_multiplier		2371125	0					
ANR	2371198	ArgumentList	connect_state . old_timeout_value		2371125	1					
ANR	2371199	Argument	connect_state . old_timeout_value		2371125	0					
ANR	2371200	MemberAccess	connect_state . old_timeout_value		2371125	0					
ANR	2371201	Identifier	connect_state		2371125	0					
ANR	2371202	Identifier	old_timeout_value		2371125	1					
ANR	2371203	ReturnType	void		2371125	1					
ANR	2371204	Identifier	Sock :: cancel_connect		2371125	2					
ANR	2371205	ParameterList			2371125	3					
ANR	2371206	CFGEntryNode	ENTRY		2371125		True				
ANR	2371207	CFGExitNode	EXIT		2371125		True				
ANR	2371208	Symbol	connect_state . old_timeout_value		2371125						
ANR	2371209	Symbol	D_ALWAYS		2371125						
ANR	2371210	Symbol	INVALID_SOCKET		2371125						
ANR	2371211	Symbol	connect_state		2371125						
ANR	2371212	Symbol	connect_state . connect_refused		2371125						
ANR	2371213	Symbol	_sock		2371125						
ANR	2371214	Symbol	bind		2371125						
ANR	2371215	Symbol	_state		2371125						
ANR	2371216	Symbol	true		2371125						
ANR	2371217	Symbol	sock_virgin		2371125						
ANR	2371218	Symbol	FALSE		2371125						
ANR	2371219	Symbol	_timeout		2371125						
ANR	2371220	Symbol	assign		2371125						
ANR	2371221	Function	Sock :: connect_timeout_time	1247:0:34852:35259							
ANR	2371222	FunctionDef	Sock :: connect_timeout_time ()		2371221	0					
ANR	2371223	CompoundStatement		1248:0:34888:35259	2371221	0					
ANR	2371224	IfStatement	if ( _state == sock_connect_pending_retry )		2371221	0					
ANR	2371225	Condition	_state == sock_connect_pending_retry	1253:5:35051:35086	2371221	0	True				
ANR	2371226	EqualityExpression	_state == sock_connect_pending_retry		2371221	0		==			
ANR	2371227	Identifier	_state		2371221	0					
ANR	2371228	Identifier	sock_connect_pending_retry		2371221	1					
ANR	2371229	CompoundStatement		6:44:201:201	2371221	1					
ANR	2371230	ReturnStatement	return connect_state . retry_wait_timeout_time ;	1254:2:35094:35138	2371221	0	True				
ANR	2371231	MemberAccess	connect_state . retry_wait_timeout_time		2371221	0					
ANR	2371232	Identifier	connect_state		2371221	0					
ANR	2371233	Identifier	retry_wait_timeout_time		2371221	1					
ANR	2371234	ReturnStatement	return connect_state . this_try_timeout_time ;	1257:1:35215:35257	2371221	1	True				
ANR	2371235	MemberAccess	connect_state . this_try_timeout_time		2371221	0					
ANR	2371236	Identifier	connect_state		2371221	0					
ANR	2371237	Identifier	this_try_timeout_time		2371221	1					
ANR	2371238	ReturnType	time_t		2371221	1					
ANR	2371239	Identifier	Sock :: connect_timeout_time		2371221	2					
ANR	2371240	ParameterList			2371221	3					
ANR	2371241	CFGEntryNode	ENTRY		2371221		True				
ANR	2371242	CFGExitNode	EXIT		2371221		True				
ANR	2371243	Symbol	connect_state . this_try_timeout_time		2371221						
ANR	2371244	Symbol	_state		2371221						
ANR	2371245	Symbol	connect_state . retry_wait_timeout_time		2371221						
ANR	2371246	Symbol	sock_connect_pending_retry		2371221						
ANR	2371247	Symbol	connect_state		2371221						
ANR	2371248	Function	Sock :: get_deadline	1260:0:35262:35607							
ANR	2371249	FunctionDef	Sock :: get_deadline ()		2371248	0					
ANR	2371250	CompoundStatement		1262:0:35290:35607	2371248	0					
ANR	2371251	IdentifierDeclStatement	time_t deadline = Stream :: get_deadline ( ) ;	1263:1:35293:35333	2371248	0	True				
ANR	2371252	IdentifierDecl	deadline = Stream :: get_deadline ( )		2371248	0					
ANR	2371253	IdentifierDeclType	time_t		2371248	0					
ANR	2371254	Identifier	deadline		2371248	1					
ANR	2371255	AssignmentExpression	deadline = Stream :: get_deadline ( )		2371248	2		=			
ANR	2371256	Identifier	deadline		2371248	0					
ANR	2371257	CallExpression	Stream :: get_deadline ( )		2371248	1					
ANR	2371258	Callee	Stream :: get_deadline		2371248	0					
ANR	2371259	Identifier	Stream :: get_deadline		2371248	0					
ANR	2371260	ArgumentList			2371248	1					
ANR	2371261	IfStatement	if ( is_connect_pending ( ) )		2371248	1					
ANR	2371262	Condition	is_connect_pending ( )	1264:5:35340:35359	2371248	0	True				
ANR	2371263	CallExpression	is_connect_pending ( )		2371248	0					
ANR	2371264	Callee	is_connect_pending		2371248	0					
ANR	2371265	Identifier	is_connect_pending		2371248	0					
ANR	2371266	ArgumentList			2371248	1					
ANR	2371267	CompoundStatement		4:2:76:124	2371248	1					
ANR	2371268	IdentifierDeclStatement	time_t connect_deadline = connect_timeout_time ( ) ;	1265:2:35367:35415	2371248	0	True				
ANR	2371269	IdentifierDecl	connect_deadline = connect_timeout_time ( )		2371248	0					
ANR	2371270	IdentifierDeclType	time_t		2371248	0					
ANR	2371271	Identifier	connect_deadline		2371248	1					
ANR	2371272	AssignmentExpression	connect_deadline = connect_timeout_time ( )		2371248	2		=			
ANR	2371273	Identifier	connect_deadline		2371248	0					
ANR	2371274	CallExpression	connect_timeout_time ( )		2371248	1					
ANR	2371275	Callee	connect_timeout_time		2371248	0					
ANR	2371276	Identifier	connect_timeout_time		2371248	0					
ANR	2371277	ArgumentList			2371248	1					
ANR	2371278	IfStatement	if ( connect_deadline && ! is_reverse_connect_pending ( ) )		2371248	1					
ANR	2371279	Condition	connect_deadline && ! is_reverse_connect_pending ( )	1266:6:35423:35471	2371248	0	True				
ANR	2371280	AndExpression	connect_deadline && ! is_reverse_connect_pending ( )		2371248	0		&&			
ANR	2371281	Identifier	connect_deadline		2371248	0					
ANR	2371282	UnaryOperationExpression	! is_reverse_connect_pending ( )		2371248	1					
ANR	2371283	UnaryOperator	!		2371248	0					
ANR	2371284	CallExpression	is_reverse_connect_pending ( )		2371248	1					
ANR	2371285	Callee	is_reverse_connect_pending		2371248	0					
ANR	2371286	Identifier	is_reverse_connect_pending		2371248	0					
ANR	2371287	ArgumentList			2371248	1					
ANR	2371288	CompoundStatement		5:58:184:184	2371248	1					
ANR	2371289	IfStatement	if ( deadline && deadline < connect_deadline )		2371248	0					
ANR	2371290	Condition	deadline && deadline < connect_deadline	1267:7:35484:35522	2371248	0	True				
ANR	2371291	AndExpression	deadline && deadline < connect_deadline		2371248	0		&&			
ANR	2371292	Identifier	deadline		2371248	0					
ANR	2371293	RelationalExpression	deadline < connect_deadline		2371248	1		<			
ANR	2371294	Identifier	deadline		2371248	0					
ANR	2371295	Identifier	connect_deadline		2371248	1					
ANR	2371296	CompoundStatement		6:49:235:235	2371248	1					
ANR	2371297	ReturnStatement	return deadline ;	1268:4:35532:35547	2371248	0	True				
ANR	2371298	Identifier	deadline		2371248	0					
ANR	2371299	ReturnStatement	return connect_deadline ;	1270:3:35557:35580	2371248	1	True				
ANR	2371300	Identifier	connect_deadline		2371248	0					
ANR	2371301	ReturnStatement	return deadline ;	1273:1:35590:35605	2371248	2	True				
ANR	2371302	Identifier	deadline		2371248	0					
ANR	2371303	ReturnType	time_t		2371248	1					
ANR	2371304	Identifier	Sock :: get_deadline		2371248	2					
ANR	2371305	ParameterList			2371248	3					
ANR	2371306	CFGEntryNode	ENTRY		2371248		True				
ANR	2371307	CFGExitNode	EXIT		2371248		True				
ANR	2371308	Symbol	connect_deadline		2371248						
ANR	2371309	Symbol	is_connect_pending		2371248						
ANR	2371310	Symbol	is_reverse_connect_pending		2371248						
ANR	2371311	Symbol	Stream :: get_deadline		2371248						
ANR	2371312	Symbol	connect_timeout_time		2371248						
ANR	2371313	Symbol	deadline		2371248						
ANR	2371314	Function	Sock :: doNotEnforceMinimalCONNECT_TIMEOUT	1277:0:35637:35719							
ANR	2371315	FunctionDef	Sock :: doNotEnforceMinimalCONNECT_TIMEOUT ()		2371314	0					
ANR	2371316	CompoundStatement		1278:0:35685:35719	2371314	0					
ANR	2371317	ExpressionStatement	ignore_connect_timeout = TRUE	1279:1:35688:35717	2371314	0	True				
ANR	2371318	AssignmentExpression	ignore_connect_timeout = TRUE		2371314	0		=			
ANR	2371319	Identifier	ignore_connect_timeout		2371314	0					
ANR	2371320	Identifier	TRUE		2371314	1					
ANR	2371321	ReturnType	void		2371314	1					
ANR	2371322	Identifier	Sock :: doNotEnforceMinimalCONNECT_TIMEOUT		2371314	2					
ANR	2371323	ParameterList			2371314	3					
ANR	2371324	CFGEntryNode	ENTRY		2371314		True				
ANR	2371325	CFGExitNode	EXIT		2371314		True				
ANR	2371326	Symbol	TRUE		2371314						
ANR	2371327	Symbol	ignore_connect_timeout		2371314						
ANR	2371328	Function	Sock :: test_connection	1282:0:35722:36528							
ANR	2371329	FunctionDef	Sock :: test_connection ()		2371328	0					
ANR	2371330	CompoundStatement		1283:0:35751:36528	2371328	0					
ANR	2371331	IdentifierDeclStatement	int error ;	1288:1:35924:35933	2371328	0	True				
ANR	2371332	IdentifierDecl	error		2371328	0					
ANR	2371333	IdentifierDeclType	int		2371328	0					
ANR	2371334	Identifier	error		2371328	1					
ANR	2371335	IdentifierDeclStatement	SOCKET_LENGTH_TYPE len = sizeof ( error ) ;	1289:4:35939:35977	2371328	1	True				
ANR	2371336	IdentifierDecl	len = sizeof ( error )		2371328	0					
ANR	2371337	IdentifierDeclType	SOCKET_LENGTH_TYPE		2371328	0					
ANR	2371338	Identifier	len		2371328	1					
ANR	2371339	AssignmentExpression	len = sizeof ( error )		2371328	2		=			
ANR	2371340	Identifier	len		2371328	0					
ANR	2371341	SizeofExpression	sizeof ( error )		2371328	1					
ANR	2371342	Sizeof	sizeof		2371328	0					
ANR	2371343	SizeofOperand	error		2371328	1					
ANR	2371344	Statement	if	1290:4:35983:35984	2371328	2	True				
ANR	2371345	Statement	(	1290:7:35986:35986	2371328	3	True				
ANR	2371346	Statement	::	1290:8:35987:35988	2371328	4	True				
ANR	2371347	Statement	getsockopt	1290:10:35989:35998	2371328	5	True				
ANR	2371348	Statement	(	1290:20:35999:35999	2371328	6	True				
ANR	2371349	Statement	_sock	1290:21:36000:36004	2371328	7	True				
ANR	2371350	Statement	","	1290:26:36005:36005	2371328	8	True				
ANR	2371351	Statement	SOL_SOCKET	1290:28:36007:36016	2371328	9	True				
ANR	2371352	Statement	","	1290:38:36017:36017	2371328	10	True				
ANR	2371353	Statement	SO_ERROR	1290:40:36019:36026	2371328	11	True				
ANR	2371354	Statement	","	1290:48:36027:36027	2371328	12	True				
ANR	2371355	Statement	(	1290:50:36029:36029	2371328	13	True				
ANR	2371356	Statement	char	1290:51:36030:36033	2371328	14	True				
ANR	2371357	Statement	*	1290:55:36034:36034	2371328	15	True				
ANR	2371358	Statement	)	1290:56:36035:36035	2371328	16	True				
ANR	2371359	Statement	&	1290:57:36036:36036	2371328	17	True				
ANR	2371360	Statement	error	1290:58:36037:36041	2371328	18	True				
ANR	2371361	Statement	","	1290:63:36042:36042	2371328	19	True				
ANR	2371362	Statement	(	1290:65:36044:36044	2371328	20	True				
ANR	2371363	Statement	socklen_t	1290:66:36045:36053	2371328	21	True				
ANR	2371364	Statement	*	1290:75:36054:36054	2371328	22	True				
ANR	2371365	Statement	)	1290:76:36055:36055	2371328	23	True				
ANR	2371366	Statement	&	1290:77:36056:36056	2371328	24	True				
ANR	2371367	Statement	len	1290:78:36057:36059	2371328	25	True				
ANR	2371368	Statement	)	1290:81:36060:36060	2371328	26	True				
ANR	2371369	Statement	<	1290:83:36062:36062	2371328	27	True				
ANR	2371370	Statement	0	1290:85:36064:36064	2371328	28	True				
ANR	2371371	Statement	)	1290:86:36065:36065	2371328	29	True				
ANR	2371372	CompoundStatement		8:88:315:315	2371328	30					
ANR	2371373	ExpressionStatement	connect_state . connect_failed = true	1291:2:36071:36106	2371328	0	True				
ANR	2371374	AssignmentExpression	connect_state . connect_failed = true		2371328	0		=			
ANR	2371375	MemberAccess	connect_state . connect_failed		2371328	0					
ANR	2371376	Identifier	connect_state		2371328	0					
ANR	2371377	Identifier	connect_failed		2371328	1					
ANR	2371378	Identifier	true		2371328	1					
ANR	2371379	ExpressionStatement	"setConnectFailureErrno ( WSAGetLastError ( ) , ""getsockopt"" )"	1293:2:36129:36183	2371328	1	True				
ANR	2371380	CallExpression	"setConnectFailureErrno ( WSAGetLastError ( ) , ""getsockopt"" )"		2371328	0					
ANR	2371381	Callee	setConnectFailureErrno		2371328	0					
ANR	2371382	Identifier	setConnectFailureErrno		2371328	0					
ANR	2371383	ArgumentList	WSAGetLastError ( )		2371328	1					
ANR	2371384	Argument	WSAGetLastError ( )		2371328	0					
ANR	2371385	CallExpression	WSAGetLastError ( )		2371328	0					
ANR	2371386	Callee	WSAGetLastError		2371328	0					
ANR	2371387	Identifier	WSAGetLastError		2371328	0					
ANR	2371388	ArgumentList			2371328	1					
ANR	2371389	Argument	"""getsockopt"""		2371328	1					
ANR	2371390	PrimaryExpression	"""getsockopt"""		2371328	0					
ANR	2371391	ExpressionStatement	"dprintf ( D_ALWAYS , ""Sock::test_connection - getsockopt failed\\n"" )"	1297:8:36252:36316	2371328	2	True				
ANR	2371392	CallExpression	"dprintf ( D_ALWAYS , ""Sock::test_connection - getsockopt failed\\n"" )"		2371328	0					
ANR	2371393	Callee	dprintf		2371328	0					
ANR	2371394	Identifier	dprintf		2371328	0					
ANR	2371395	ArgumentList	D_ALWAYS		2371328	1					
ANR	2371396	Argument	D_ALWAYS		2371328	0					
ANR	2371397	Identifier	D_ALWAYS		2371328	0					
ANR	2371398	Argument	"""Sock::test_connection - getsockopt failed\\n"""		2371328	1					
ANR	2371399	PrimaryExpression	"""Sock::test_connection - getsockopt failed\\n"""		2371328	0					
ANR	2371400	ReturnStatement	return false ;	1298:8:36326:36338	2371328	3	True				
ANR	2371401	Identifier	false		2371328	0					
ANR	2371402	IfStatement	if ( error )		2371328	31					
ANR	2371403	Condition	error	1301:8:36375:36379	2371328	0	True				
ANR	2371404	Identifier	error		2371328	0					
ANR	2371405	CompoundStatement		19:15:630:630	2371328	1					
ANR	2371406	ExpressionStatement	connect_state . connect_failed = true	1302:2:36386:36421	2371328	0	True				
ANR	2371407	AssignmentExpression	connect_state . connect_failed = true		2371328	0		=			
ANR	2371408	MemberAccess	connect_state . connect_failed		2371328	0					
ANR	2371409	Identifier	connect_state		2371328	0					
ANR	2371410	Identifier	connect_failed		2371328	1					
ANR	2371411	Identifier	true		2371328	1					
ANR	2371412	ExpressionStatement	"setConnectFailureErrno ( error , ""connect"" )"	1303:2:36425:36464	2371328	1	True				
ANR	2371413	CallExpression	"setConnectFailureErrno ( error , ""connect"" )"		2371328	0					
ANR	2371414	Callee	setConnectFailureErrno		2371328	0					
ANR	2371415	Identifier	setConnectFailureErrno		2371328	0					
ANR	2371416	ArgumentList	error		2371328	1					
ANR	2371417	Argument	error		2371328	0					
ANR	2371418	Identifier	error		2371328	0					
ANR	2371419	Argument	"""connect"""		2371328	1					
ANR	2371420	PrimaryExpression	"""connect"""		2371328	0					
ANR	2371421	ReturnStatement	return false ;	1304:8:36474:36486	2371328	2	True				
ANR	2371422	Identifier	false		2371328	0					
ANR	2371423	ElseStatement	else		2371328	0					
ANR	2371424	CompoundStatement		23:11:747:747	2371328	0					
ANR	2371425	ReturnStatement	return true ;	1306:8:36509:36520	2371328	0	True				
ANR	2371426	Identifier	true		2371328	0					
ANR	2371427	ReturnType	bool		2371328	1					
ANR	2371428	Identifier	Sock :: test_connection		2371328	2					
ANR	2371429	ParameterList			2371328	3					
ANR	2371430	CFGEntryNode	ENTRY		2371328		True				
ANR	2371431	CFGExitNode	EXIT		2371328		True				
ANR	2371432	Symbol	len		2371328						
ANR	2371433	Symbol	connect_state . connect_failed		2371328						
ANR	2371434	Symbol	true		2371328						
ANR	2371435	Symbol	D_ALWAYS		2371328						
ANR	2371436	Symbol	false		2371328						
ANR	2371437	Symbol	WSAGetLastError		2371328						
ANR	2371438	Symbol	error		2371328						
ANR	2371439	Symbol	connect_state		2371328						
ANR	2371440	Function	Sock :: close	1310:0:36531:37104							
ANR	2371441	FunctionDef	Sock :: close ()		2371440	0					
ANR	2371442	CompoundStatement		1311:0:36549:37104	2371440	0					
ANR	2371443	IfStatement	if ( _state == sock_reverse_connect_pending )		2371440	0					
ANR	2371444	Condition	_state == sock_reverse_connect_pending	1312:5:36556:36593	2371440	0	True				
ANR	2371445	EqualityExpression	_state == sock_reverse_connect_pending		2371440	0		==			
ANR	2371446	Identifier	_state		2371440	0					
ANR	2371447	Identifier	sock_reverse_connect_pending		2371440	1					
ANR	2371448	CompoundStatement		2:46:47:47	2371440	1					
ANR	2371449	ExpressionStatement	cancel_reverse_connect ( )	1313:2:36601:36625	2371440	0	True				
ANR	2371450	CallExpression	cancel_reverse_connect ( )		2371440	0					
ANR	2371451	Callee	cancel_reverse_connect		2371440	0					
ANR	2371452	Identifier	cancel_reverse_connect		2371440	0					
ANR	2371453	ArgumentList			2371440	1					
ANR	2371454	IfStatement	if ( _state == sock_virgin )		2371440	1					
ANR	2371455	Condition	_state == sock_virgin	1316:5:36636:36656	2371440	0	True				
ANR	2371456	EqualityExpression	_state == sock_virgin		2371440	0		==			
ANR	2371457	Identifier	_state		2371440	0					
ANR	2371458	Identifier	sock_virgin		2371440	1					
ANR	2371459	ReturnStatement	return FALSE ;	1316:28:36659:36671	2371440	1	True				
ANR	2371460	Identifier	FALSE		2371440	0					
ANR	2371461	IfStatement	if ( type ( ) == Stream :: reli_sock && ( DebugFlags & D_NETWORK ) )		2371440	2					
ANR	2371462	Condition	type ( ) == Stream :: reli_sock && ( DebugFlags & D_NETWORK )	1318:5:36679:36733	2371440	0	True				
ANR	2371463	AndExpression	type ( ) == Stream :: reli_sock && ( DebugFlags & D_NETWORK )		2371440	0		&&			
ANR	2371464	EqualityExpression	type ( ) == Stream :: reli_sock		2371440	0		==			
ANR	2371465	CallExpression	type ( )		2371440	0					
ANR	2371466	Callee	type		2371440	0					
ANR	2371467	Identifier	type		2371440	0					
ANR	2371468	ArgumentList			2371440	1					
ANR	2371469	Identifier	Stream :: reli_sock		2371440	1					
ANR	2371470	BitAndExpression	DebugFlags & D_NETWORK		2371440	1		&			
ANR	2371471	Identifier	DebugFlags		2371440	0					
ANR	2371472	Identifier	D_NETWORK		2371440	1					
ANR	2371473	CompoundStatement		8:62:186:186	2371440	1					
ANR	2371474	ExpressionStatement	"dprintf ( D_NETWORK , ""CLOSE %s fd=%d\\n"" , sock_to_string ( _sock ) , _sock )"	1319:2:36740:36817	2371440	0	True				
ANR	2371475	CallExpression	"dprintf ( D_NETWORK , ""CLOSE %s fd=%d\\n"" , sock_to_string ( _sock ) , _sock )"		2371440	0					
ANR	2371476	Callee	dprintf		2371440	0					
ANR	2371477	Identifier	dprintf		2371440	0					
ANR	2371478	ArgumentList	D_NETWORK		2371440	1					
ANR	2371479	Argument	D_NETWORK		2371440	0					
ANR	2371480	Identifier	D_NETWORK		2371440	0					
ANR	2371481	Argument	"""CLOSE %s fd=%d\\n"""		2371440	1					
ANR	2371482	PrimaryExpression	"""CLOSE %s fd=%d\\n"""		2371440	0					
ANR	2371483	Argument	sock_to_string ( _sock )		2371440	2					
ANR	2371484	CallExpression	sock_to_string ( _sock )		2371440	0					
ANR	2371485	Callee	sock_to_string		2371440	0					
ANR	2371486	Identifier	sock_to_string		2371440	0					
ANR	2371487	ArgumentList	_sock		2371440	1					
ANR	2371488	Argument	_sock		2371440	0					
ANR	2371489	Identifier	_sock		2371440	0					
ANR	2371490	Argument	_sock		2371440	3					
ANR	2371491	Identifier	_sock		2371440	0					
ANR	2371492	IfStatement	if ( _sock != INVALID_SOCKET )		2371440	3					
ANR	2371493	Condition	_sock != INVALID_SOCKET	1323:6:36829:36851	2371440	0	True				
ANR	2371494	EqualityExpression	_sock != INVALID_SOCKET		2371440	0		!=			
ANR	2371495	Identifier	_sock		2371440	0					
ANR	2371496	Identifier	INVALID_SOCKET		2371440	1					
ANR	2371497	CompoundStatement		13:32:305:305	2371440	1					
ANR	2371498	Statement	if	1324:2:36859:36860	2371440	0	True				
ANR	2371499	Statement	(	1324:5:36862:36862	2371440	1	True				
ANR	2371500	Statement	::	1324:6:36863:36864	2371440	2	True				
ANR	2371501	Statement	closesocket	1324:8:36865:36875	2371440	3	True				
ANR	2371502	Statement	(	1324:19:36876:36876	2371440	4	True				
ANR	2371503	Statement	_sock	1324:20:36877:36881	2371440	5	True				
ANR	2371504	Statement	)	1324:25:36882:36882	2371440	6	True				
ANR	2371505	Statement	<	1324:27:36884:36884	2371440	7	True				
ANR	2371506	Statement	0	1324:29:36886:36886	2371440	8	True				
ANR	2371507	Statement	)	1324:30:36887:36887	2371440	9	True				
ANR	2371508	ReturnStatement	return FALSE ;	1324:32:36889:36901	2371440	10	True				
ANR	2371509	Identifier	FALSE		2371440	0					
ANR	2371510	ExpressionStatement	_sock = INVALID_SOCKET	1327:1:36908:36930	2371440	4	True				
ANR	2371511	AssignmentExpression	_sock = INVALID_SOCKET		2371440	0		=			
ANR	2371512	Identifier	_sock		2371440	0					
ANR	2371513	Identifier	INVALID_SOCKET		2371440	1					
ANR	2371514	ExpressionStatement	_state = sock_virgin	1328:1:36933:36953	2371440	5	True				
ANR	2371515	AssignmentExpression	_state = sock_virgin		2371440	0		=			
ANR	2371516	Identifier	_state		2371440	0					
ANR	2371517	Identifier	sock_virgin		2371440	1					
ANR	2371518	IfStatement	if ( connect_state . host )		2371440	6					
ANR	2371519	Condition	connect_state . host	1329:8:36963:36980	2371440	0	True				
ANR	2371520	MemberAccess	connect_state . host		2371440	0					
ANR	2371521	Identifier	connect_state		2371440	0					
ANR	2371522	Identifier	host		2371440	1					
ANR	2371523	CompoundStatement		19:28:433:433	2371440	1					
ANR	2371524	ExpressionStatement	free ( connect_state . host )	1330:8:36993:37017	2371440	0	True				
ANR	2371525	CallExpression	free ( connect_state . host )		2371440	0					
ANR	2371526	Callee	free		2371440	0					
ANR	2371527	Identifier	free		2371440	0					
ANR	2371528	ArgumentList	connect_state . host		2371440	1					
ANR	2371529	Argument	connect_state . host		2371440	0					
ANR	2371530	MemberAccess	connect_state . host		2371440	0					
ANR	2371531	Identifier	connect_state		2371440	0					
ANR	2371532	Identifier	host		2371440	1					
ANR	2371533	ExpressionStatement	connect_state . host = NULL	1332:1:37026:37051	2371440	7	True				
ANR	2371534	AssignmentExpression	connect_state . host = NULL		2371440	0		=			
ANR	2371535	MemberAccess	connect_state . host		2371440	0					
ANR	2371536	Identifier	connect_state		2371440	0					
ANR	2371537	Identifier	host		2371440	1					
ANR	2371538	Identifier	NULL		2371440	1					
ANR	2371539	ExpressionStatement	_who . clear ( )	1333:1:37054:37066	2371440	8	True				
ANR	2371540	CallExpression	_who . clear ( )		2371440	0					
ANR	2371541	Callee	_who . clear		2371440	0					
ANR	2371542	MemberAccess	_who . clear		2371440	0					
ANR	2371543	Identifier	_who		2371440	0					
ANR	2371544	Identifier	clear		2371440	1					
ANR	2371545	ArgumentList			2371440	1					
ANR	2371546	ExpressionStatement	addr_changed ( )	1334:4:37072:37086	2371440	9	True				
ANR	2371547	CallExpression	addr_changed ( )		2371440	0					
ANR	2371548	Callee	addr_changed		2371440	0					
ANR	2371549	Identifier	addr_changed		2371440	0					
ANR	2371550	ArgumentList			2371440	1					
ANR	2371551	ReturnStatement	return TRUE ;	1336:1:37091:37102	2371440	10	True				
ANR	2371552	Identifier	TRUE		2371440	0					
ANR	2371553	ReturnType	int		2371440	1					
ANR	2371554	Identifier	Sock :: close		2371440	2					
ANR	2371555	ParameterList			2371440	3					
ANR	2371556	CFGEntryNode	ENTRY		2371440		True				
ANR	2371557	CFGExitNode	EXIT		2371440		True				
ANR	2371558	Symbol	connect_state . host		2371440						
ANR	2371559	Symbol	NULL		2371440						
ANR	2371560	Symbol	TRUE		2371440						
ANR	2371561	Symbol	DebugFlags		2371440						
ANR	2371562	Symbol	type		2371440						
ANR	2371563	Symbol	sock_reverse_connect_pending		2371440						
ANR	2371564	Symbol	INVALID_SOCKET		2371440						
ANR	2371565	Symbol	connect_state		2371440						
ANR	2371566	Symbol	_sock		2371440						
ANR	2371567	Symbol	_who		2371440						
ANR	2371568	Symbol	_state		2371440						
ANR	2371569	Symbol	sock_virgin		2371440						
ANR	2371570	Symbol	D_NETWORK		2371440						
ANR	2371571	Symbol	FALSE		2371440						
ANR	2371572	Symbol	Stream :: reli_sock		2371440						
ANR	2371573	Symbol	sock_to_string		2371440						
ANR	2371574	Function	Sock :: bytes_available_to_read	1344:0:37162:38272							
ANR	2371575	FunctionDef	Sock :: bytes_available_to_read ()		2371574	0					
ANR	2371576	CompoundStatement		1346:0:37198:38272	2371574	0					
ANR	2371577	Statement	error	1356:1:37602:37606	2371574	0	True				
ANR	2371578	Statement	FIONREAD	1356:7:37608:37615	2371574	1	True				
ANR	2371579	Statement	is	1356:16:37617:37618	2371574	2	True				
ANR	2371580	Statement	not	1356:19:37620:37622	2371574	3	True				
ANR	2371581	Statement	defined	1356:23:37624:37630	2371574	4	True				
ANR	2371582	Statement	!	1356:30:37631:37631	2371574	5	True				
ANR	2371583	Statement	Fix	1356:33:37634:37636	2371574	6	True				
ANR	2371584	Statement	me	1356:37:37638:37639	2371574	7	True				
ANR	2371585	Statement	by	1356:40:37641:37642	2371574	8	True				
ANR	2371586	Statement	seeing	1356:43:37644:37649	2371574	9	True				
ANR	2371587	Statement	code	1356:50:37651:37654	2371574	10	True				
ANR	2371588	Statement	comment	1356:55:37656:37662	2371574	11	True				
ANR	2371589	Statement	.	1356:62:37663:37663	2371574	12	True				
ANR	2371590	IfStatement	if ( _state == sock_virgin )		2371574	13					
ANR	2371591	Condition	_state == sock_virgin	1360:5:37730:37750	2371574	0	True				
ANR	2371592	EqualityExpression	_state == sock_virgin		2371574	0		==			
ANR	2371593	Identifier	_state		2371574	0					
ANR	2371594	Identifier	sock_virgin		2371574	1					
ANR	2371595	ExpressionStatement	assign ( )	1360:28:37753:37761	2371574	1	True				
ANR	2371596	CallExpression	assign ( )		2371574	0					
ANR	2371597	Callee	assign		2371574	0					
ANR	2371598	Identifier	assign		2371574	0					
ANR	2371599	ArgumentList			2371574	1					
ANR	2371600	IfStatement	if ( ( _state != sock_assigned ) && ( _state != sock_connect ) && ( _state != sock_bound ) )		2371574	14					
ANR	2371601	Condition	( _state != sock_assigned ) && ( _state != sock_connect ) && ( _state != sock_bound )	1361:6:37769:37857	2371574	0	True				
ANR	2371602	AndExpression	( _state != sock_assigned ) && ( _state != sock_connect ) && ( _state != sock_bound )		2371574	0		&&			
ANR	2371603	EqualityExpression	_state != sock_assigned		2371574	0		!=			
ANR	2371604	Identifier	_state		2371574	0					
ANR	2371605	Identifier	sock_assigned		2371574	1					
ANR	2371606	AndExpression	( _state != sock_connect ) && ( _state != sock_bound )		2371574	1		&&			
ANR	2371607	EqualityExpression	_state != sock_connect		2371574	0		!=			
ANR	2371608	Identifier	_state		2371574	0					
ANR	2371609	Identifier	sock_connect		2371574	1					
ANR	2371610	EqualityExpression	_state != sock_bound		2371574	1		!=			
ANR	2371611	Identifier	_state		2371574	0					
ANR	2371612	Identifier	sock_bound		2371574	1					
ANR	2371613	CompoundStatement		18:30:663:663	2371574	1					
ANR	2371614	ReturnStatement	return - 1 ;	1364:2:37866:37875	2371574	0	True				
ANR	2371615	UnaryOperationExpression	- 1		2371574	0					
ANR	2371616	UnaryOperator	-		2371574	0					
ANR	2371617	PrimaryExpression	1		2371574	1					
ANR	2371618	IdentifierDeclStatement	unsigned long num_bytes ;	1369:1:37967:37990	2371574	15	True				
ANR	2371619	IdentifierDecl	num_bytes		2371574	0					
ANR	2371620	IdentifierDeclType	unsigned long		2371574	0					
ANR	2371621	Identifier	num_bytes		2371574	1					
ANR	2371622	IfStatement	"if ( ioctlsocket ( _sock , FIONREAD , & num_bytes ) < 0 )"		2371574	16					
ANR	2371623	Condition	"ioctlsocket ( _sock , FIONREAD , & num_bytes ) < 0"	1374:5:38027:38070	2371574	0	True				
ANR	2371624	RelationalExpression	"ioctlsocket ( _sock , FIONREAD , & num_bytes ) < 0"		2371574	0		<			
ANR	2371625	CallExpression	"ioctlsocket ( _sock , FIONREAD , & num_bytes )"		2371574	0					
ANR	2371626	Callee	ioctlsocket		2371574	0					
ANR	2371627	Identifier	ioctlsocket		2371574	0					
ANR	2371628	ArgumentList	_sock		2371574	1					
ANR	2371629	Argument	_sock		2371574	0					
ANR	2371630	Identifier	_sock		2371574	0					
ANR	2371631	Argument	FIONREAD		2371574	1					
ANR	2371632	Identifier	FIONREAD		2371574	0					
ANR	2371633	Argument	& num_bytes		2371574	2					
ANR	2371634	UnaryOperationExpression	& num_bytes		2371574	0					
ANR	2371635	UnaryOperator	&		2371574	0					
ANR	2371636	Identifier	num_bytes		2371574	1					
ANR	2371637	PrimaryExpression	0		2371574	1					
ANR	2371638	CompoundStatement		29:51:874:874	2371574	1					
ANR	2371639	ReturnStatement	return - 1 ;	1375:3:38078:38087	2371574	0	True				
ANR	2371640	UnaryOperationExpression	- 1		2371574	0					
ANR	2371641	UnaryOperator	-		2371574	0					
ANR	2371642	PrimaryExpression	1		2371574	1					
ANR	2371643	IfStatement	if ( num_bytes > INT_MAX )		2371574	17					
ANR	2371644	Condition	num_bytes > INT_MAX	1379:6:38143:38161	2371574	0	True				
ANR	2371645	RelationalExpression	num_bytes > INT_MAX		2371574	0		>			
ANR	2371646	Identifier	num_bytes		2371574	0					
ANR	2371647	Identifier	INT_MAX		2371574	1					
ANR	2371648	CompoundStatement		34:28:966:966	2371574	1					
ANR	2371649	ReturnStatement	return - 1 ;	1380:2:38169:38178	2371574	0	True				
ANR	2371650	UnaryOperationExpression	- 1		2371574	0					
ANR	2371651	UnaryOperator	-		2371574	0					
ANR	2371652	PrimaryExpression	1		2371574	1					
ANR	2371653	IdentifierDeclStatement	int ret_val = ( int ) num_bytes ;	1383:1:38186:38215	2371574	18	True				
ANR	2371654	IdentifierDecl	ret_val = ( int ) num_bytes		2371574	0					
ANR	2371655	IdentifierDeclType	int		2371574	0					
ANR	2371656	Identifier	ret_val		2371574	1					
ANR	2371657	AssignmentExpression	ret_val = ( int ) num_bytes		2371574	2		=			
ANR	2371658	Identifier	ret_val		2371574	0					
ANR	2371659	CastExpression	( int ) num_bytes		2371574	1					
ANR	2371660	CastTarget	int		2371574	0					
ANR	2371661	Identifier	num_bytes		2371574	1					
ANR	2371662	ReturnStatement	return ret_val ;	1385:1:38256:38270	2371574	19	True				
ANR	2371663	Identifier	ret_val		2371574	0					
ANR	2371664	ReturnType	int		2371574	1					
ANR	2371665	Identifier	Sock :: bytes_available_to_read		2371574	2					
ANR	2371666	ParameterList			2371574	3					
ANR	2371667	CFGEntryNode	ENTRY		2371574		True				
ANR	2371668	CFGExitNode	EXIT		2371574		True				
ANR	2371669	Symbol	num_bytes		2371574						
ANR	2371670	Symbol	FIONREAD		2371574						
ANR	2371671	Symbol	sock_connect		2371574						
ANR	2371672	Symbol	_sock		2371574						
ANR	2371673	Symbol	_state		2371574						
ANR	2371674	Symbol	ioctlsocket		2371574						
ANR	2371675	Symbol	sock_assigned		2371574						
ANR	2371676	Symbol	INT_MAX		2371574						
ANR	2371677	Symbol	sock_virgin		2371574						
ANR	2371678	Symbol	& num_bytes		2371574						
ANR	2371679	Symbol	ret_val		2371574						
ANR	2371680	Symbol	sock_bound		2371574						
ANR	2371681	Function	Sock :: readReady	1388:0:38275:38605							
ANR	2371682	FunctionDef	Sock :: readReady ()		2371681	0					
ANR	2371683	CompoundStatement		1389:18:38298:38605	2371681	0					
ANR	2371684	IdentifierDeclStatement	Selector selector ;	1390:1:38301:38318	2371681	0	True				
ANR	2371685	IdentifierDecl	selector		2371681	0					
ANR	2371686	IdentifierDeclType	Selector		2371681	0					
ANR	2371687	Identifier	selector		2371681	1					
ANR	2371688	IfStatement	if ( ( _state != sock_assigned ) && ( _state != sock_connect ) && ( _state != sock_bound ) )		2371681	1					
ANR	2371689	Condition	( _state != sock_assigned ) && ( _state != sock_connect ) && ( _state != sock_bound )	1392:6:38327:38413	2371681	0	True				
ANR	2371690	AndExpression	( _state != sock_assigned ) && ( _state != sock_connect ) && ( _state != sock_bound )		2371681	0		&&			
ANR	2371691	EqualityExpression	_state != sock_assigned		2371681	0		!=			
ANR	2371692	Identifier	_state		2371681	0					
ANR	2371693	Identifier	sock_assigned		2371681	1					
ANR	2371694	AndExpression	( _state != sock_connect ) && ( _state != sock_bound )		2371681	1		&&			
ANR	2371695	EqualityExpression	_state != sock_connect		2371681	0		!=			
ANR	2371696	Identifier	_state		2371681	0					
ANR	2371697	Identifier	sock_connect		2371681	1					
ANR	2371698	EqualityExpression	_state != sock_bound		2371681	1		!=			
ANR	2371699	Identifier	_state		2371681	0					
ANR	2371700	Identifier	sock_bound		2371681	1					
ANR	2371701	CompoundStatement		6:29:119:119	2371681	1					
ANR	2371702	ReturnStatement	return false ;	1395:2:38422:38434	2371681	0	True				
ANR	2371703	Identifier	false		2371681	0					
ANR	2371704	IfStatement	if ( msgReady ( ) )		2371681	2					
ANR	2371705	Condition	msgReady ( )	1398:5:38445:38454	2371681	0	True				
ANR	2371706	CallExpression	msgReady ( )		2371681	0					
ANR	2371707	Callee	msgReady		2371681	0					
ANR	2371708	Identifier	msgReady		2371681	0					
ANR	2371709	ArgumentList			2371681	1					
ANR	2371710	CompoundStatement		10:18:159:159	2371681	1					
ANR	2371711	ReturnStatement	return true ;	1399:2:38462:38473	2371681	0	True				
ANR	2371712	Identifier	true		2371681	0					
ANR	2371713	ExpressionStatement	"selector . add_fd ( _sock , Selector :: IO_READ )"	1402:1:38480:38523	2371681	3	True				
ANR	2371714	CallExpression	"selector . add_fd ( _sock , Selector :: IO_READ )"		2371681	0					
ANR	2371715	Callee	selector . add_fd		2371681	0					
ANR	2371716	MemberAccess	selector . add_fd		2371681	0					
ANR	2371717	Identifier	selector		2371681	0					
ANR	2371718	Identifier	add_fd		2371681	1					
ANR	2371719	ArgumentList	_sock		2371681	1					
ANR	2371720	Argument	_sock		2371681	0					
ANR	2371721	Identifier	_sock		2371681	0					
ANR	2371722	Argument	Selector :: IO_READ		2371681	1					
ANR	2371723	Identifier	Selector :: IO_READ		2371681	0					
ANR	2371724	ExpressionStatement	selector . set_timeout ( 0 )	1403:1:38526:38551	2371681	4	True				
ANR	2371725	CallExpression	selector . set_timeout ( 0 )		2371681	0					
ANR	2371726	Callee	selector . set_timeout		2371681	0					
ANR	2371727	MemberAccess	selector . set_timeout		2371681	0					
ANR	2371728	Identifier	selector		2371681	0					
ANR	2371729	Identifier	set_timeout		2371681	1					
ANR	2371730	ArgumentList	0		2371681	1					
ANR	2371731	Argument	0		2371681	0					
ANR	2371732	PrimaryExpression	0		2371681	0					
ANR	2371733	ExpressionStatement	selector . execute ( )	1404:1:38554:38572	2371681	5	True				
ANR	2371734	CallExpression	selector . execute ( )		2371681	0					
ANR	2371735	Callee	selector . execute		2371681	0					
ANR	2371736	MemberAccess	selector . execute		2371681	0					
ANR	2371737	Identifier	selector		2371681	0					
ANR	2371738	Identifier	execute		2371681	1					
ANR	2371739	ArgumentList			2371681	1					
ANR	2371740	ReturnStatement	return selector . has_ready ( ) ;	1406:1:38576:38603	2371681	6	True				
ANR	2371741	CallExpression	selector . has_ready ( )		2371681	0					
ANR	2371742	Callee	selector . has_ready		2371681	0					
ANR	2371743	MemberAccess	selector . has_ready		2371681	0					
ANR	2371744	Identifier	selector		2371681	0					
ANR	2371745	Identifier	has_ready		2371681	1					
ANR	2371746	ArgumentList			2371681	1					
ANR	2371747	ReturnType	bool		2371681	1					
ANR	2371748	Identifier	Sock :: readReady		2371681	2					
ANR	2371749	ParameterList			2371681	3					
ANR	2371750	CFGEntryNode	ENTRY		2371681		True				
ANR	2371751	CFGExitNode	EXIT		2371681		True				
ANR	2371752	Symbol	msgReady		2371681						
ANR	2371753	Symbol	sock_connect		2371681						
ANR	2371754	Symbol	_sock		2371681						
ANR	2371755	Symbol	_state		2371681						
ANR	2371756	Symbol	sock_assigned		2371681						
ANR	2371757	Symbol	selector . has_ready		2371681						
ANR	2371758	Symbol	false		2371681						
ANR	2371759	Symbol	true		2371681						
ANR	2371760	Symbol	selector		2371681						
ANR	2371761	Symbol	sock_bound		2371681						
ANR	2371762	Symbol	Selector :: IO_READ		2371681						
ANR	2371763	Function	Sock :: get_timeout_raw	1409:0:38608:38656							
ANR	2371764	FunctionDef	Sock :: get_timeout_raw ()		2371763	0					
ANR	2371765	CompoundStatement		1411:0:38636:38656	2371763	0					
ANR	2371766	ReturnStatement	return _timeout ;	1412:1:38639:38654	2371763	0	True				
ANR	2371767	Identifier	_timeout		2371763	0					
ANR	2371768	ReturnType	int		2371763	1					
ANR	2371769	Identifier	Sock :: get_timeout_raw		2371763	2					
ANR	2371770	ParameterList			2371763	3					
ANR	2371771	CFGEntryNode	ENTRY		2371763		True				
ANR	2371772	CFGExitNode	EXIT		2371763		True				
ANR	2371773	Symbol	_timeout		2371763						
ANR	2371774	Function	Sock :: timeout_no_timeout_multiplier	1419:0:38847:40176							
ANR	2371775	FunctionDef	Sock :: timeout_no_timeout_multiplier (int sec)		2371774	0					
ANR	2371776	CompoundStatement		1421:0:38896:40176	2371774	0					
ANR	2371777	IdentifierDeclStatement	int t = _timeout ;	1422:1:38899:38915	2371774	0	True				
ANR	2371778	IdentifierDecl	t = _timeout		2371774	0					
ANR	2371779	IdentifierDeclType	int		2371774	0					
ANR	2371780	Identifier	t		2371774	1					
ANR	2371781	AssignmentExpression	t = _timeout		2371774	2		=			
ANR	2371782	Identifier	_timeout		2371774	0					
ANR	2371783	Identifier	_timeout		2371774	1					
ANR	2371784	ExpressionStatement	_timeout = sec	1424:1:38919:38933	2371774	1	True				
ANR	2371785	AssignmentExpression	_timeout = sec		2371774	0		=			
ANR	2371786	Identifier	_timeout		2371774	0					
ANR	2371787	Identifier	sec		2371774	1					
ANR	2371788	IfStatement	if ( _state == sock_virgin )		2371774	2					
ANR	2371789	Condition	_state == sock_virgin	1426:5:38941:38961	2371774	0	True				
ANR	2371790	EqualityExpression	_state == sock_virgin		2371774	0		==			
ANR	2371791	Identifier	_state		2371774	0					
ANR	2371792	Identifier	sock_virgin		2371774	1					
ANR	2371793	CompoundStatement		6:28:67:67	2371774	1					
ANR	2371794	ReturnStatement	return t ;	1430:2:39112:39120	2371774	0	True				
ANR	2371795	Identifier	t		2371774	0					
ANR	2371796	IfStatement	if ( ( _state != sock_assigned ) && ( _state != sock_connect ) && ( _state != sock_bound ) )		2371774	3					
ANR	2371797	Condition	( _state != sock_assigned ) && ( _state != sock_connect ) && ( _state != sock_bound )	1432:6:39131:39219	2371774	0	True				
ANR	2371798	AndExpression	( _state != sock_assigned ) && ( _state != sock_connect ) && ( _state != sock_bound )		2371774	0		&&			
ANR	2371799	EqualityExpression	_state != sock_assigned		2371774	0		!=			
ANR	2371800	Identifier	_state		2371774	0					
ANR	2371801	Identifier	sock_assigned		2371774	1					
ANR	2371802	AndExpression	( _state != sock_connect ) && ( _state != sock_bound )		2371774	1		&&			
ANR	2371803	EqualityExpression	_state != sock_connect		2371774	0		!=			
ANR	2371804	Identifier	_state		2371774	0					
ANR	2371805	Identifier	sock_connect		2371774	1					
ANR	2371806	EqualityExpression	_state != sock_bound		2371774	1		!=			
ANR	2371807	Identifier	_state		2371774	0					
ANR	2371808	Identifier	sock_bound		2371774	1					
ANR	2371809	CompoundStatement		14:30:327:327	2371774	1					
ANR	2371810	ReturnStatement	return - 1 ;	1435:2:39228:39237	2371774	0	True				
ANR	2371811	UnaryOperationExpression	- 1		2371774	0					
ANR	2371812	UnaryOperator	-		2371774	0					
ANR	2371813	PrimaryExpression	1		2371774	1					
ANR	2371814	IfStatement	if ( _timeout == 0 )		2371774	4					
ANR	2371815	Condition	_timeout == 0	1438:5:39248:39260	2371774	0	True				
ANR	2371816	EqualityExpression	_timeout == 0		2371774	0		==			
ANR	2371817	Identifier	_timeout		2371774	0					
ANR	2371818	PrimaryExpression	0		2371774	1					
ANR	2371819	CompoundStatement		21:2:418:440	2371774	1					
ANR	2371820	IdentifierDeclStatement	unsigned long mode = 0 ;	1441:2:39315:39337	2371774	0	True				
ANR	2371821	IdentifierDecl	mode = 0		2371774	0					
ANR	2371822	IdentifierDeclType	unsigned long		2371774	0					
ANR	2371823	Identifier	mode		2371774	1					
ANR	2371824	AssignmentExpression	mode = 0		2371774	2		=			
ANR	2371825	Identifier	mode		2371774	0					
ANR	2371826	PrimaryExpression	0		2371774	1					
ANR	2371827	IfStatement	"if ( ioctlsocket ( _sock , FIONBIO , & mode ) < 0 )"		2371774	1					
ANR	2371828	Condition	"ioctlsocket ( _sock , FIONBIO , & mode ) < 0"	1442:6:39368:39405	2371774	0	True				
ANR	2371829	RelationalExpression	"ioctlsocket ( _sock , FIONBIO , & mode ) < 0"		2371774	0		<			
ANR	2371830	CallExpression	"ioctlsocket ( _sock , FIONBIO , & mode )"		2371774	0					
ANR	2371831	Callee	ioctlsocket		2371774	0					
ANR	2371832	Identifier	ioctlsocket		2371774	0					
ANR	2371833	ArgumentList	_sock		2371774	1					
ANR	2371834	Argument	_sock		2371774	0					
ANR	2371835	Identifier	_sock		2371774	0					
ANR	2371836	Argument	FIONBIO		2371774	1					
ANR	2371837	Identifier	FIONBIO		2371774	0					
ANR	2371838	Argument	& mode		2371774	2					
ANR	2371839	UnaryOperationExpression	& mode		2371774	0					
ANR	2371840	UnaryOperator	&		2371774	0					
ANR	2371841	Identifier	mode		2371774	1					
ANR	2371842	PrimaryExpression	0		2371774	1					
ANR	2371843	ReturnStatement	return - 1 ;	1443:3:39411:39420	2371774	1	True				
ANR	2371844	UnaryOperationExpression	- 1		2371774	0					
ANR	2371845	UnaryOperator	-		2371774	0					
ANR	2371846	PrimaryExpression	1		2371774	1					
ANR	2371847	ElseStatement	else		2371774	0					
ANR	2371848	CompoundStatement		32:8:743:743	2371774	0					
ANR	2371849	IfStatement	if ( type ( ) != safe_sock )		2371774	0					
ANR	2371850	Condition	type ( ) != safe_sock	1455:7:39763:39781	2371774	0	True				
ANR	2371851	EqualityExpression	type ( ) != safe_sock		2371774	0		!=			
ANR	2371852	CallExpression	type ( )		2371774	0					
ANR	2371853	Callee	type		2371774	0					
ANR	2371854	Identifier	type		2371774	0					
ANR	2371855	ArgumentList			2371774	1					
ANR	2371856	Identifier	safe_sock		2371774	1					
ANR	2371857	CompoundStatement		37:3:938:960	2371774	1					
ANR	2371858	IdentifierDeclStatement	unsigned long mode = 1 ;	1457:3:39835:39857	2371774	0	True				
ANR	2371859	IdentifierDecl	mode = 1		2371774	0					
ANR	2371860	IdentifierDeclType	unsigned long		2371774	0					
ANR	2371861	Identifier	mode		2371774	1					
ANR	2371862	AssignmentExpression	mode = 1		2371774	2		=			
ANR	2371863	Identifier	mode		2371774	0					
ANR	2371864	PrimaryExpression	1		2371774	1					
ANR	2371865	IfStatement	"if ( ioctlsocket ( _sock , FIONBIO , & mode ) < 0 )"		2371774	1					
ANR	2371866	Condition	"ioctlsocket ( _sock , FIONBIO , & mode ) < 0"	1458:7:39886:39923	2371774	0	True				
ANR	2371867	RelationalExpression	"ioctlsocket ( _sock , FIONBIO , & mode ) < 0"		2371774	0		<			
ANR	2371868	CallExpression	"ioctlsocket ( _sock , FIONBIO , & mode )"		2371774	0					
ANR	2371869	Callee	ioctlsocket		2371774	0					
ANR	2371870	Identifier	ioctlsocket		2371774	0					
ANR	2371871	ArgumentList	_sock		2371774	1					
ANR	2371872	Argument	_sock		2371774	0					
ANR	2371873	Identifier	_sock		2371774	0					
ANR	2371874	Argument	FIONBIO		2371774	1					
ANR	2371875	Identifier	FIONBIO		2371774	0					
ANR	2371876	Argument	& mode		2371774	2					
ANR	2371877	UnaryOperationExpression	& mode		2371774	0					
ANR	2371878	UnaryOperator	&		2371774	0					
ANR	2371879	Identifier	mode		2371774	1					
ANR	2371880	PrimaryExpression	0		2371774	1					
ANR	2371881	ReturnStatement	return - 1 ;	1459:4:39930:39939	2371774	1	True				
ANR	2371882	UnaryOperationExpression	- 1		2371774	0					
ANR	2371883	UnaryOperator	-		2371774	0					
ANR	2371884	PrimaryExpression	1		2371774	1					
ANR	2371885	ReturnStatement	return t ;	1471:1:40166:40174	2371774	5	True				
ANR	2371886	Identifier	t		2371774	0					
ANR	2371887	ReturnType	int		2371774	1					
ANR	2371888	Identifier	Sock :: timeout_no_timeout_multiplier		2371774	2					
ANR	2371889	ParameterList	int sec		2371774	3					
ANR	2371890	Parameter	int sec	1420:36:38887:38893	2371774	0	True				
ANR	2371891	ParameterType	int		2371774	0					
ANR	2371892	Identifier	sec		2371774	1					
ANR	2371893	CFGEntryNode	ENTRY		2371774		True				
ANR	2371894	CFGExitNode	EXIT		2371774		True				
ANR	2371895	Symbol	safe_sock		2371774						
ANR	2371896	Symbol	FIONBIO		2371774						
ANR	2371897	Symbol	ioctlsocket		2371774						
ANR	2371898	Symbol	type		2371774						
ANR	2371899	Symbol	sock_bound		2371774						
ANR	2371900	Symbol	sec		2371774						
ANR	2371901	Symbol	mode		2371774						
ANR	2371902	Symbol	sock_connect		2371774						
ANR	2371903	Symbol	& mode		2371774						
ANR	2371904	Symbol	_sock		2371774						
ANR	2371905	Symbol	t		2371774						
ANR	2371906	Symbol	_state		2371774						
ANR	2371907	Symbol	sock_assigned		2371774						
ANR	2371908	Symbol	sock_virgin		2371774						
ANR	2371909	Symbol	_timeout		2371774						
ANR	2371910	Function	Sock :: timeout	1474:0:40179:40743							
ANR	2371911	FunctionDef	Sock :: timeout (int sec)		2371910	0					
ANR	2371912	CompoundStatement		1476:0:40206:40743	2371910	0					
ANR	2371913	IdentifierDeclStatement	bool adjusted = false ;	1477:1:40209:40230	2371910	0	True				
ANR	2371914	IdentifierDecl	adjusted = false		2371910	0					
ANR	2371915	IdentifierDeclType	bool		2371910	0					
ANR	2371916	Identifier	adjusted		2371910	1					
ANR	2371917	AssignmentExpression	adjusted = false		2371910	2		=			
ANR	2371918	Identifier	false		2371910	0					
ANR	2371919	Identifier	false		2371910	1					
ANR	2371920	IfStatement	if ( ( timeout_multiplier > 0 ) && ! ignore_timeout_multiplier )		2371910	1					
ANR	2371921	Condition	( timeout_multiplier > 0 ) && ! ignore_timeout_multiplier	1478:5:40237:40290	2371910	0	True				
ANR	2371922	AndExpression	( timeout_multiplier > 0 ) && ! ignore_timeout_multiplier		2371910	0		&&			
ANR	2371923	RelationalExpression	timeout_multiplier > 0		2371910	0		>			
ANR	2371924	Identifier	timeout_multiplier		2371910	0					
ANR	2371925	PrimaryExpression	0		2371910	1					
ANR	2371926	UnaryOperationExpression	! ignore_timeout_multiplier		2371910	1					
ANR	2371927	UnaryOperator	!		2371910	0					
ANR	2371928	Identifier	ignore_timeout_multiplier		2371910	1					
ANR	2371929	CompoundStatement		3:61:86:86	2371910	1					
ANR	2371930	ExpressionStatement	sec *= timeout_multiplier	1479:2:40297:40322	2371910	0	True				
ANR	2371931	AssignmentExpression	sec *= timeout_multiplier		2371910	0		*=			
ANR	2371932	Identifier	sec		2371910	0					
ANR	2371933	Identifier	timeout_multiplier		2371910	1					
ANR	2371934	ExpressionStatement	adjusted = true	1480:2:40326:40341	2371910	1	True				
ANR	2371935	AssignmentExpression	adjusted = true		2371910	0		=			
ANR	2371936	Identifier	adjusted		2371910	0					
ANR	2371937	Identifier	true		2371910	1					
ANR	2371938	IdentifierDeclStatement	int t = timeout_no_timeout_multiplier ( sec ) ;	1483:1:40348:40392	2371910	2	True				
ANR	2371939	IdentifierDecl	t = timeout_no_timeout_multiplier ( sec )		2371910	0					
ANR	2371940	IdentifierDeclType	int		2371910	0					
ANR	2371941	Identifier	t		2371910	1					
ANR	2371942	AssignmentExpression	t = timeout_no_timeout_multiplier ( sec )		2371910	2		=			
ANR	2371943	Identifier	t		2371910	0					
ANR	2371944	CallExpression	timeout_no_timeout_multiplier ( sec )		2371910	1					
ANR	2371945	Callee	timeout_no_timeout_multiplier		2371910	0					
ANR	2371946	Identifier	timeout_no_timeout_multiplier		2371910	0					
ANR	2371947	ArgumentList	sec		2371910	1					
ANR	2371948	Argument	sec		2371910	0					
ANR	2371949	Identifier	sec		2371910	0					
ANR	2371950	IfStatement	if ( ( t > 0 ) && adjusted )		2371910	3					
ANR	2371951	Condition	( t > 0 ) && adjusted	1487:5:40517:40535	2371910	0	True				
ANR	2371952	AndExpression	( t > 0 ) && adjusted		2371910	0		&&			
ANR	2371953	RelationalExpression	t > 0		2371910	0		>			
ANR	2371954	Identifier	t		2371910	0					
ANR	2371955	PrimaryExpression	0		2371910	1					
ANR	2371956	Identifier	adjusted		2371910	1					
ANR	2371957	CompoundStatement		12:27:332:332	2371910	1					
ANR	2371958	ExpressionStatement	t /= timeout_multiplier	1488:2:40543:40566	2371910	0	True				
ANR	2371959	AssignmentExpression	t /= timeout_multiplier		2371910	0		/=			
ANR	2371960	Identifier	t		2371910	0					
ANR	2371961	Identifier	timeout_multiplier		2371910	1					
ANR	2371962	IfStatement	if ( t == 0 )		2371910	1					
ANR	2371963	Condition	t == 0	1489:6:40574:40579	2371910	0	True				
ANR	2371964	EqualityExpression	t == 0		2371910	0		==			
ANR	2371965	Identifier	t		2371910	0					
ANR	2371966	PrimaryExpression	0		2371910	1					
ANR	2371967	CompoundStatement		14:15:376:376	2371910	1					
ANR	2371968	ExpressionStatement	t = 1	1492:3:40717:40722	2371910	0	True				
ANR	2371969	AssignmentExpression	t = 1		2371910	0		=			
ANR	2371970	Identifier	t		2371910	0					
ANR	2371971	PrimaryExpression	1		2371910	1					
ANR	2371972	ReturnStatement	return t ;	1496:1:40733:40741	2371910	4	True				
ANR	2371973	Identifier	t		2371910	0					
ANR	2371974	ReturnType	int		2371910	1					
ANR	2371975	Identifier	Sock :: timeout		2371910	2					
ANR	2371976	ParameterList	int sec		2371910	3					
ANR	2371977	Parameter	int sec	1475:14:40197:40203	2371910	0	True				
ANR	2371978	ParameterType	int		2371910	0					
ANR	2371979	Identifier	sec		2371910	1					
ANR	2371980	CFGEntryNode	ENTRY		2371910		True				
ANR	2371981	CFGExitNode	EXIT		2371910		True				
ANR	2371982	Symbol	sec		2371910						
ANR	2371983	Symbol	t		2371910						
ANR	2371984	Symbol	adjusted		2371910						
ANR	2371985	Symbol	false		2371910						
ANR	2371986	Symbol	true		2371910						
ANR	2371987	Symbol	timeout_no_timeout_multiplier		2371910						
ANR	2371988	Symbol	timeout_multiplier		2371910						
ANR	2371989	Symbol	ignore_timeout_multiplier		2371910						
ANR	2371990	Function	Sock :: serializeCryptoInfo	1499:0:40746:41565							
ANR	2371991	FunctionDef	Sock :: serializeCryptoInfo ()		2371990	0					
ANR	2371992	CompoundStatement		1500:0:40787:41565	2371990	0					
ANR	2371993	IdentifierDeclStatement	const unsigned char * kserial = NULL ;	1501:4:40793:40829	2371990	0	True				
ANR	2371994	IdentifierDecl	* kserial = NULL		2371990	0					
ANR	2371995	IdentifierDeclType	const unsigned char *		2371990	0					
ANR	2371996	Identifier	kserial		2371990	1					
ANR	2371997	AssignmentExpression	* kserial = NULL		2371990	2		=			
ANR	2371998	Identifier	NULL		2371990	0					
ANR	2371999	Identifier	NULL		2371990	1					
ANR	2372000	IdentifierDeclStatement	int len = 0 ;	1502:4:40835:40846	2371990	1	True				
ANR	2372001	IdentifierDecl	len = 0		2371990	0					
ANR	2372002	IdentifierDeclType	int		2371990	0					
ANR	2372003	Identifier	len		2371990	1					
ANR	2372004	AssignmentExpression	len = 0		2371990	2		=			
ANR	2372005	Identifier	len		2371990	0					
ANR	2372006	PrimaryExpression	0		2371990	1					
ANR	2372007	IfStatement	if ( crypto_ )		2371990	2					
ANR	2372008	Condition	crypto_	1504:8:40857:40863	2371990	0	True				
ANR	2372009	Identifier	crypto_		2371990	0					
ANR	2372010	CompoundStatement		5:17:78:78	2371990	1					
ANR	2372011	ExpressionStatement	kserial = get_crypto_key ( ) . getKeyData ( )	1505:8:40876:40915	2371990	0	True				
ANR	2372012	AssignmentExpression	kserial = get_crypto_key ( ) . getKeyData ( )		2371990	0		=			
ANR	2372013	Identifier	kserial		2371990	0					
ANR	2372014	CallExpression	get_crypto_key ( ) . getKeyData ( )		2371990	1					
ANR	2372015	Callee	get_crypto_key ( ) . getKeyData		2371990	0					
ANR	2372016	MemberAccess	get_crypto_key ( ) . getKeyData		2371990	0					
ANR	2372017	CallExpression	get_crypto_key ( )		2371990	0					
ANR	2372018	Callee	get_crypto_key		2371990	0					
ANR	2372019	Identifier	get_crypto_key		2371990	0					
ANR	2372020	ArgumentList			2371990	1					
ANR	2372021	Identifier	getKeyData		2371990	1					
ANR	2372022	ArgumentList			2371990	1					
ANR	2372023	ExpressionStatement	len = get_crypto_key ( ) . getKeyLength ( )	1506:8:40925:40962	2371990	1	True				
ANR	2372024	AssignmentExpression	len = get_crypto_key ( ) . getKeyLength ( )		2371990	0		=			
ANR	2372025	Identifier	len		2371990	0					
ANR	2372026	CallExpression	get_crypto_key ( ) . getKeyLength ( )		2371990	1					
ANR	2372027	Callee	get_crypto_key ( ) . getKeyLength		2371990	0					
ANR	2372028	MemberAccess	get_crypto_key ( ) . getKeyLength		2371990	0					
ANR	2372029	CallExpression	get_crypto_key ( )		2371990	0					
ANR	2372030	Callee	get_crypto_key		2371990	0					
ANR	2372031	Identifier	get_crypto_key		2371990	0					
ANR	2372032	ArgumentList			2371990	1					
ANR	2372033	Identifier	getKeyLength		2371990	1					
ANR	2372034	ArgumentList			2371990	1					
ANR	2372035	IdentifierDeclStatement	char * outbuf = NULL ;	1510:1:41021:41041	2371990	3	True				
ANR	2372036	IdentifierDecl	* outbuf = NULL		2371990	0					
ANR	2372037	IdentifierDeclType	char *		2371990	0					
ANR	2372038	Identifier	outbuf		2371990	1					
ANR	2372039	AssignmentExpression	* outbuf = NULL		2371990	2		=			
ANR	2372040	Identifier	NULL		2371990	0					
ANR	2372041	Identifier	NULL		2371990	1					
ANR	2372042	IfStatement	if ( len > 0 )		2371990	4					
ANR	2372043	Condition	len > 0	1511:8:41051:41057	2371990	0	True				
ANR	2372044	RelationalExpression	len > 0		2371990	0		>			
ANR	2372045	Identifier	len		2371990	0					
ANR	2372046	PrimaryExpression	0		2371990	1					
ANR	2372047	CompoundStatement		19:8:494:530	2371990	1					
ANR	2372048	IdentifierDeclStatement	int buflen = len * 2 + 32 ;	1512:8:41070:41091	2371990	0	True				
ANR	2372049	IdentifierDecl	buflen = len * 2 + 32		2371990	0					
ANR	2372050	IdentifierDeclType	int		2371990	0					
ANR	2372051	Identifier	buflen		2371990	1					
ANR	2372052	AssignmentExpression	buflen = len * 2 + 32		2371990	2		=			
ANR	2372053	Identifier	buflen		2371990	0					
ANR	2372054	AdditiveExpression	len * 2 + 32		2371990	1		+			
ANR	2372055	MultiplicativeExpression	len * 2		2371990	0		*			
ANR	2372056	Identifier	len		2371990	0					
ANR	2372057	PrimaryExpression	2		2371990	1					
ANR	2372058	PrimaryExpression	32		2371990	1					
ANR	2372059	ExpressionStatement	outbuf = new char [ buflen ]	1513:8:41101:41126	2371990	1	True				
ANR	2372060	AssignmentExpression	outbuf = new char [ buflen ]		2371990	0		=			
ANR	2372061	Identifier	outbuf		2371990	0					
ANR	2372062	Identifier	buflen		2371990	1					
ANR	2372063	ExpressionStatement	"sprintf ( outbuf , ""%d*%d*%d*"" , len * 2 , ( int ) get_crypto_key ( ) . getProtocol ( ) , ( int ) get_encryption ( ) )"	1514:8:41136:41234	2371990	2	True				
ANR	2372064	CallExpression	"sprintf ( outbuf , ""%d*%d*%d*"" , len * 2 , ( int ) get_crypto_key ( ) . getProtocol ( ) , ( int ) get_encryption ( ) )"		2371990	0					
ANR	2372065	Callee	sprintf		2371990	0					
ANR	2372066	Identifier	sprintf		2371990	0					
ANR	2372067	ArgumentList	outbuf		2371990	1					
ANR	2372068	Argument	outbuf		2371990	0					
ANR	2372069	Identifier	outbuf		2371990	0					
ANR	2372070	Argument	"""%d*%d*%d*"""		2371990	1					
ANR	2372071	PrimaryExpression	"""%d*%d*%d*"""		2371990	0					
ANR	2372072	Argument	len * 2		2371990	2					
ANR	2372073	MultiplicativeExpression	len * 2		2371990	0		*			
ANR	2372074	Identifier	len		2371990	0					
ANR	2372075	PrimaryExpression	2		2371990	1					
ANR	2372076	Argument	( int ) get_crypto_key ( ) . getProtocol ( )		2371990	3					
ANR	2372077	CastExpression	( int ) get_crypto_key ( ) . getProtocol ( )		2371990	0					
ANR	2372078	CastTarget	int		2371990	0					
ANR	2372079	CallExpression	get_crypto_key ( ) . getProtocol ( )		2371990	1					
ANR	2372080	Callee	get_crypto_key ( ) . getProtocol		2371990	0					
ANR	2372081	MemberAccess	get_crypto_key ( ) . getProtocol		2371990	0					
ANR	2372082	CallExpression	get_crypto_key ( )		2371990	0					
ANR	2372083	Callee	get_crypto_key		2371990	0					
ANR	2372084	Identifier	get_crypto_key		2371990	0					
ANR	2372085	ArgumentList			2371990	1					
ANR	2372086	Identifier	getProtocol		2371990	1					
ANR	2372087	ArgumentList			2371990	1					
ANR	2372088	Argument	( int ) get_encryption ( )		2371990	4					
ANR	2372089	CastExpression	( int ) get_encryption ( )		2371990	0					
ANR	2372090	CastTarget	int		2371990	0					
ANR	2372091	CallExpression	get_encryption ( )		2371990	1					
ANR	2372092	Callee	get_encryption		2371990	0					
ANR	2372093	Identifier	get_encryption		2371990	0					
ANR	2372094	ArgumentList			2371990	1					
ANR	2372095	IdentifierDeclStatement	char * ptr = outbuf + strlen ( outbuf ) ;	1518:8:41282:41318	2371990	3	True				
ANR	2372096	IdentifierDecl	* ptr = outbuf + strlen ( outbuf )		2371990	0					
ANR	2372097	IdentifierDeclType	char *		2371990	0					
ANR	2372098	Identifier	ptr		2371990	1					
ANR	2372099	AssignmentExpression	* ptr = outbuf + strlen ( outbuf )		2371990	2		=			
ANR	2372100	Identifier	ptr		2371990	0					
ANR	2372101	AdditiveExpression	outbuf + strlen ( outbuf )		2371990	1		+			
ANR	2372102	Identifier	outbuf		2371990	0					
ANR	2372103	CallExpression	strlen ( outbuf )		2371990	1					
ANR	2372104	Callee	strlen		2371990	0					
ANR	2372105	Identifier	strlen		2371990	0					
ANR	2372106	ArgumentList	outbuf		2371990	1					
ANR	2372107	Argument	outbuf		2371990	0					
ANR	2372108	Identifier	outbuf		2371990	0					
ANR	2372109	ForStatement	"for ( int i = 0 ; i < len ; i ++ , kserial ++ , ptr += 2 )"		2371990	4					
ANR	2372110	ForInit	int i = 0 ;	1519:13:41333:41340	2371990	0	True				
ANR	2372111	IdentifierDeclStatement	int i = 0 ;		2371990	0					
ANR	2372112	IdentifierDecl	i = 0		2371990	0					
ANR	2372113	IdentifierDeclType	int		2371990	0					
ANR	2372114	Identifier	i		2371990	1					
ANR	2372115	AssignmentExpression	i = 0		2371990	2		=			
ANR	2372116	Identifier	i		2371990	0					
ANR	2372117	PrimaryExpression	0		2371990	1					
ANR	2372118	Condition	i < len	1519:22:41342:41348	2371990	1	True				
ANR	2372119	RelationalExpression	i < len		2371990	0		<			
ANR	2372120	Identifier	i		2371990	0					
ANR	2372121	Identifier	len		2371990	1					
ANR	2372122	Expression	"i ++ , kserial ++ , ptr += 2"	1519:31:41351:41372	2371990	2	True				
ANR	2372123	PostIncDecOperationExpression	i ++		2371990	0					
ANR	2372124	Identifier	i		2371990	0					
ANR	2372125	IncDec	++		2371990	1					
ANR	2372126	Expression	"kserial ++ , ptr += 2"		2371990	1					
ANR	2372127	PostIncDecOperationExpression	kserial ++		2371990	0					
ANR	2372128	Identifier	kserial		2371990	0					
ANR	2372129	IncDec	++		2371990	1					
ANR	2372130	AssignmentExpression	ptr += 2		2371990	1		+=			
ANR	2372131	Identifier	ptr		2371990	0					
ANR	2372132	PrimaryExpression	2		2371990	1					
ANR	2372133	CompoundStatement		20:55:587:587	2371990	3					
ANR	2372134	ExpressionStatement	"sprintf ( ptr , ""%02X"" , * kserial )"	1520:12:41389:41419	2371990	0	True				
ANR	2372135	CallExpression	"sprintf ( ptr , ""%02X"" , * kserial )"		2371990	0					
ANR	2372136	Callee	sprintf		2371990	0					
ANR	2372137	Identifier	sprintf		2371990	0					
ANR	2372138	ArgumentList	ptr		2371990	1					
ANR	2372139	Argument	ptr		2371990	0					
ANR	2372140	Identifier	ptr		2371990	0					
ANR	2372141	Argument	"""%02X"""		2371990	1					
ANR	2372142	PrimaryExpression	"""%02X"""		2371990	0					
ANR	2372143	Argument	* kserial		2371990	2					
ANR	2372144	UnaryOperationExpression	* kserial		2371990	0					
ANR	2372145	UnaryOperator	*		2371990	0					
ANR	2372146	Identifier	kserial		2371990	1					
ANR	2372147	ElseStatement	else		2371990	0					
ANR	2372148	CompoundStatement		24:9:658:658	2371990	0					
ANR	2372149	ExpressionStatement	outbuf = new char [ 2 ]	1524:8:41456:41476	2371990	0	True				
ANR	2372150	AssignmentExpression	outbuf = new char [ 2 ]		2371990	0		=			
ANR	2372151	Identifier	outbuf		2371990	0					
ANR	2372152	PrimaryExpression	2		2371990	1					
ANR	2372153	ExpressionStatement	"memset ( outbuf , 0 , 2 )"	1525:8:41486:41506	2371990	1	True				
ANR	2372154	CallExpression	"memset ( outbuf , 0 , 2 )"		2371990	0					
ANR	2372155	Callee	memset		2371990	0					
ANR	2372156	Identifier	memset		2371990	0					
ANR	2372157	ArgumentList	outbuf		2371990	1					
ANR	2372158	Argument	outbuf		2371990	0					
ANR	2372159	Identifier	outbuf		2371990	0					
ANR	2372160	Argument	0		2371990	1					
ANR	2372161	PrimaryExpression	0		2371990	0					
ANR	2372162	Argument	2		2371990	2					
ANR	2372163	PrimaryExpression	2		2371990	0					
ANR	2372164	ExpressionStatement	"sprintf ( outbuf , ""%d"" , 0 )"	1526:8:41516:41538	2371990	2	True				
ANR	2372165	CallExpression	"sprintf ( outbuf , ""%d"" , 0 )"		2371990	0					
ANR	2372166	Callee	sprintf		2371990	0					
ANR	2372167	Identifier	sprintf		2371990	0					
ANR	2372168	ArgumentList	outbuf		2371990	1					
ANR	2372169	Argument	outbuf		2371990	0					
ANR	2372170	Identifier	outbuf		2371990	0					
ANR	2372171	Argument	"""%d"""		2371990	1					
ANR	2372172	PrimaryExpression	"""%d"""		2371990	0					
ANR	2372173	Argument	0		2371990	2					
ANR	2372174	PrimaryExpression	0		2371990	0					
ANR	2372175	ReturnStatement	return ( outbuf ) ;	1528:1:41547:41563	2371990	5	True				
ANR	2372176	Identifier	outbuf		2371990	0					
ANR	2372177	ReturnType	char *		2371990	1					
ANR	2372178	Identifier	Sock :: serializeCryptoInfo		2371990	2					
ANR	2372179	ParameterList			2371990	3					
ANR	2372180	CFGEntryNode	ENTRY		2371990		True				
ANR	2372181	CFGExitNode	EXIT		2371990		True				
ANR	2372182	Symbol	NULL		2371990						
ANR	2372183	Symbol	kserial		2371990						
ANR	2372184	Symbol	get_crypto_key		2371990						
ANR	2372185	Symbol	i		2371990						
ANR	2372186	Symbol	get_crypto_key ( ) . getKeyData		2371990						
ANR	2372187	Symbol	get_encryption		2371990						
ANR	2372188	Symbol	get_crypto_key ( ) . getProtocol		2371990						
ANR	2372189	Symbol	ptr		2371990						
ANR	2372190	Symbol	crypto_		2371990						
ANR	2372191	Symbol	strlen		2371990						
ANR	2372192	Symbol	len		2371990						
ANR	2372193	Symbol	get_crypto_key ( ) . getKeyLength		2371990						
ANR	2372194	Symbol	outbuf		2371990						
ANR	2372195	Symbol	* kserial		2371990						
ANR	2372196	Symbol	buflen		2371990						
ANR	2372197	Function	Sock :: serializeMdInfo	1531:0:41568:42301							
ANR	2372198	FunctionDef	Sock :: serializeMdInfo ()		2372197	0					
ANR	2372199	CompoundStatement		1532:0:41605:42301	2372197	0					
ANR	2372200	IdentifierDeclStatement	const unsigned char * kmd = NULL ;	1533:4:41611:41643	2372197	0	True				
ANR	2372201	IdentifierDecl	* kmd = NULL		2372197	0					
ANR	2372202	IdentifierDeclType	const unsigned char *		2372197	0					
ANR	2372203	Identifier	kmd		2372197	1					
ANR	2372204	AssignmentExpression	* kmd = NULL		2372197	2		=			
ANR	2372205	Identifier	NULL		2372197	0					
ANR	2372206	Identifier	NULL		2372197	1					
ANR	2372207	IdentifierDeclStatement	int len = 0 ;	1534:4:41649:41660	2372197	1	True				
ANR	2372208	IdentifierDecl	len = 0		2372197	0					
ANR	2372209	IdentifierDeclType	int		2372197	0					
ANR	2372210	Identifier	len		2372197	1					
ANR	2372211	AssignmentExpression	len = 0		2372197	2		=			
ANR	2372212	Identifier	len		2372197	0					
ANR	2372213	PrimaryExpression	0		2372197	1					
ANR	2372214	IfStatement	if ( isOutgoing_MD5_on ( ) )		2372197	2					
ANR	2372215	Condition	isOutgoing_MD5_on ( )	1536:8:41671:41689	2372197	0	True				
ANR	2372216	CallExpression	isOutgoing_MD5_on ( )		2372197	0					
ANR	2372217	Callee	isOutgoing_MD5_on		2372197	0					
ANR	2372218	Identifier	isOutgoing_MD5_on		2372197	0					
ANR	2372219	ArgumentList			2372197	1					
ANR	2372220	CompoundStatement		5:29:86:86	2372197	1					
ANR	2372221	ExpressionStatement	kmd = get_md_key ( ) . getKeyData ( )	1537:8:41702:41733	2372197	0	True				
ANR	2372222	AssignmentExpression	kmd = get_md_key ( ) . getKeyData ( )		2372197	0		=			
ANR	2372223	Identifier	kmd		2372197	0					
ANR	2372224	CallExpression	get_md_key ( ) . getKeyData ( )		2372197	1					
ANR	2372225	Callee	get_md_key ( ) . getKeyData		2372197	0					
ANR	2372226	MemberAccess	get_md_key ( ) . getKeyData		2372197	0					
ANR	2372227	CallExpression	get_md_key ( )		2372197	0					
ANR	2372228	Callee	get_md_key		2372197	0					
ANR	2372229	Identifier	get_md_key		2372197	0					
ANR	2372230	ArgumentList			2372197	1					
ANR	2372231	Identifier	getKeyData		2372197	1					
ANR	2372232	ArgumentList			2372197	1					
ANR	2372233	ExpressionStatement	len = get_md_key ( ) . getKeyLength ( )	1538:8:41743:41776	2372197	1	True				
ANR	2372234	AssignmentExpression	len = get_md_key ( ) . getKeyLength ( )		2372197	0		=			
ANR	2372235	Identifier	len		2372197	0					
ANR	2372236	CallExpression	get_md_key ( ) . getKeyLength ( )		2372197	1					
ANR	2372237	Callee	get_md_key ( ) . getKeyLength		2372197	0					
ANR	2372238	MemberAccess	get_md_key ( ) . getKeyLength		2372197	0					
ANR	2372239	CallExpression	get_md_key ( )		2372197	0					
ANR	2372240	Callee	get_md_key		2372197	0					
ANR	2372241	Identifier	get_md_key		2372197	0					
ANR	2372242	ArgumentList			2372197	1					
ANR	2372243	Identifier	getKeyLength		2372197	1					
ANR	2372244	ArgumentList			2372197	1					
ANR	2372245	IdentifierDeclStatement	char * outbuf = NULL ;	1542:1:41835:41855	2372197	3	True				
ANR	2372246	IdentifierDecl	* outbuf = NULL		2372197	0					
ANR	2372247	IdentifierDeclType	char *		2372197	0					
ANR	2372248	Identifier	outbuf		2372197	1					
ANR	2372249	AssignmentExpression	* outbuf = NULL		2372197	2		=			
ANR	2372250	Identifier	NULL		2372197	0					
ANR	2372251	Identifier	NULL		2372197	1					
ANR	2372252	IfStatement	if ( len > 0 )		2372197	4					
ANR	2372253	Condition	len > 0	1543:8:41865:41871	2372197	0	True				
ANR	2372254	RelationalExpression	len > 0		2372197	0		>			
ANR	2372255	Identifier	len		2372197	0					
ANR	2372256	PrimaryExpression	0		2372197	1					
ANR	2372257	CompoundStatement		18:8:420:456	2372197	1					
ANR	2372258	IdentifierDeclStatement	int buflen = len * 2 + 32 ;	1544:8:41884:41905	2372197	0	True				
ANR	2372259	IdentifierDecl	buflen = len * 2 + 32		2372197	0					
ANR	2372260	IdentifierDeclType	int		2372197	0					
ANR	2372261	Identifier	buflen		2372197	1					
ANR	2372262	AssignmentExpression	buflen = len * 2 + 32		2372197	2		=			
ANR	2372263	Identifier	buflen		2372197	0					
ANR	2372264	AdditiveExpression	len * 2 + 32		2372197	1		+			
ANR	2372265	MultiplicativeExpression	len * 2		2372197	0		*			
ANR	2372266	Identifier	len		2372197	0					
ANR	2372267	PrimaryExpression	2		2372197	1					
ANR	2372268	PrimaryExpression	32		2372197	1					
ANR	2372269	ExpressionStatement	outbuf = new char [ buflen ]	1545:8:41915:41940	2372197	1	True				
ANR	2372270	AssignmentExpression	outbuf = new char [ buflen ]		2372197	0		=			
ANR	2372271	Identifier	outbuf		2372197	0					
ANR	2372272	Identifier	buflen		2372197	1					
ANR	2372273	ExpressionStatement	"sprintf ( outbuf , ""%d*"" , len * 2 )"	1546:8:41950:41978	2372197	2	True				
ANR	2372274	CallExpression	"sprintf ( outbuf , ""%d*"" , len * 2 )"		2372197	0					
ANR	2372275	Callee	sprintf		2372197	0					
ANR	2372276	Identifier	sprintf		2372197	0					
ANR	2372277	ArgumentList	outbuf		2372197	1					
ANR	2372278	Argument	outbuf		2372197	0					
ANR	2372279	Identifier	outbuf		2372197	0					
ANR	2372280	Argument	"""%d*"""		2372197	1					
ANR	2372281	PrimaryExpression	"""%d*"""		2372197	0					
ANR	2372282	Argument	len * 2		2372197	2					
ANR	2372283	MultiplicativeExpression	len * 2		2372197	0		*			
ANR	2372284	Identifier	len		2372197	0					
ANR	2372285	PrimaryExpression	2		2372197	1					
ANR	2372286	IdentifierDeclStatement	char * ptr = outbuf + strlen ( outbuf ) ;	1549:8:42026:42062	2372197	3	True				
ANR	2372287	IdentifierDecl	* ptr = outbuf + strlen ( outbuf )		2372197	0					
ANR	2372288	IdentifierDeclType	char *		2372197	0					
ANR	2372289	Identifier	ptr		2372197	1					
ANR	2372290	AssignmentExpression	* ptr = outbuf + strlen ( outbuf )		2372197	2		=			
ANR	2372291	Identifier	ptr		2372197	0					
ANR	2372292	AdditiveExpression	outbuf + strlen ( outbuf )		2372197	1		+			
ANR	2372293	Identifier	outbuf		2372197	0					
ANR	2372294	CallExpression	strlen ( outbuf )		2372197	1					
ANR	2372295	Callee	strlen		2372197	0					
ANR	2372296	Identifier	strlen		2372197	0					
ANR	2372297	ArgumentList	outbuf		2372197	1					
ANR	2372298	Argument	outbuf		2372197	0					
ANR	2372299	Identifier	outbuf		2372197	0					
ANR	2372300	ForStatement	"for ( int i = 0 ; i < len ; i ++ , kmd ++ , ptr += 2 )"		2372197	4					
ANR	2372301	ForInit	int i = 0 ;	1550:13:42077:42084	2372197	0	True				
ANR	2372302	IdentifierDeclStatement	int i = 0 ;		2372197	0					
ANR	2372303	IdentifierDecl	i = 0		2372197	0					
ANR	2372304	IdentifierDeclType	int		2372197	0					
ANR	2372305	Identifier	i		2372197	1					
ANR	2372306	AssignmentExpression	i = 0		2372197	2		=			
ANR	2372307	Identifier	i		2372197	0					
ANR	2372308	PrimaryExpression	0		2372197	1					
ANR	2372309	Condition	i < len	1550:22:42086:42092	2372197	1	True				
ANR	2372310	RelationalExpression	i < len		2372197	0		<			
ANR	2372311	Identifier	i		2372197	0					
ANR	2372312	Identifier	len		2372197	1					
ANR	2372313	Expression	"i ++ , kmd ++ , ptr += 2"	1550:31:42095:42112	2372197	2	True				
ANR	2372314	PostIncDecOperationExpression	i ++		2372197	0					
ANR	2372315	Identifier	i		2372197	0					
ANR	2372316	IncDec	++		2372197	1					
ANR	2372317	Expression	"kmd ++ , ptr += 2"		2372197	1					
ANR	2372318	PostIncDecOperationExpression	kmd ++		2372197	0					
ANR	2372319	Identifier	kmd		2372197	0					
ANR	2372320	IncDec	++		2372197	1					
ANR	2372321	AssignmentExpression	ptr += 2		2372197	1		+=			
ANR	2372322	Identifier	ptr		2372197	0					
ANR	2372323	PrimaryExpression	2		2372197	1					
ANR	2372324	CompoundStatement		19:51:509:509	2372197	3					
ANR	2372325	ExpressionStatement	"sprintf ( ptr , ""%02X"" , * kmd )"	1551:12:42129:42155	2372197	0	True				
ANR	2372326	CallExpression	"sprintf ( ptr , ""%02X"" , * kmd )"		2372197	0					
ANR	2372327	Callee	sprintf		2372197	0					
ANR	2372328	Identifier	sprintf		2372197	0					
ANR	2372329	ArgumentList	ptr		2372197	1					
ANR	2372330	Argument	ptr		2372197	0					
ANR	2372331	Identifier	ptr		2372197	0					
ANR	2372332	Argument	"""%02X"""		2372197	1					
ANR	2372333	PrimaryExpression	"""%02X"""		2372197	0					
ANR	2372334	Argument	* kmd		2372197	2					
ANR	2372335	UnaryOperationExpression	* kmd		2372197	0					
ANR	2372336	UnaryOperator	*		2372197	0					
ANR	2372337	Identifier	kmd		2372197	1					
ANR	2372338	ElseStatement	else		2372197	0					
ANR	2372339	CompoundStatement		23:9:576:576	2372197	0					
ANR	2372340	ExpressionStatement	outbuf = new char [ 2 ]	1555:8:42192:42212	2372197	0	True				
ANR	2372341	AssignmentExpression	outbuf = new char [ 2 ]		2372197	0		=			
ANR	2372342	Identifier	outbuf		2372197	0					
ANR	2372343	PrimaryExpression	2		2372197	1					
ANR	2372344	ExpressionStatement	"memset ( outbuf , 0 , 2 )"	1556:8:42222:42242	2372197	1	True				
ANR	2372345	CallExpression	"memset ( outbuf , 0 , 2 )"		2372197	0					
ANR	2372346	Callee	memset		2372197	0					
ANR	2372347	Identifier	memset		2372197	0					
ANR	2372348	ArgumentList	outbuf		2372197	1					
ANR	2372349	Argument	outbuf		2372197	0					
ANR	2372350	Identifier	outbuf		2372197	0					
ANR	2372351	Argument	0		2372197	1					
ANR	2372352	PrimaryExpression	0		2372197	0					
ANR	2372353	Argument	2		2372197	2					
ANR	2372354	PrimaryExpression	2		2372197	0					
ANR	2372355	ExpressionStatement	"sprintf ( outbuf , ""%d"" , 0 )"	1557:8:42252:42274	2372197	2	True				
ANR	2372356	CallExpression	"sprintf ( outbuf , ""%d"" , 0 )"		2372197	0					
ANR	2372357	Callee	sprintf		2372197	0					
ANR	2372358	Identifier	sprintf		2372197	0					
ANR	2372359	ArgumentList	outbuf		2372197	1					
ANR	2372360	Argument	outbuf		2372197	0					
ANR	2372361	Identifier	outbuf		2372197	0					
ANR	2372362	Argument	"""%d"""		2372197	1					
ANR	2372363	PrimaryExpression	"""%d"""		2372197	0					
ANR	2372364	Argument	0		2372197	2					
ANR	2372365	PrimaryExpression	0		2372197	0					
ANR	2372366	ReturnStatement	return ( outbuf ) ;	1559:1:42283:42299	2372197	5	True				
ANR	2372367	Identifier	outbuf		2372197	0					
ANR	2372368	ReturnType	char *		2372197	1					
ANR	2372369	Identifier	Sock :: serializeMdInfo		2372197	2					
ANR	2372370	ParameterList			2372197	3					
ANR	2372371	CFGEntryNode	ENTRY		2372197		True				
ANR	2372372	CFGExitNode	EXIT		2372197		True				
ANR	2372373	Symbol	NULL		2372197						
ANR	2372374	Symbol	kmd		2372197						
ANR	2372375	Symbol	i		2372197						
ANR	2372376	Symbol	* kmd		2372197						
ANR	2372377	Symbol	ptr		2372197						
ANR	2372378	Symbol	strlen		2372197						
ANR	2372379	Symbol	get_md_key		2372197						
ANR	2372380	Symbol	len		2372197						
ANR	2372381	Symbol	outbuf		2372197						
ANR	2372382	Symbol	buflen		2372197						
ANR	2372383	Symbol	get_md_key ( ) . getKeyLength		2372197						
ANR	2372384	Symbol	get_md_key ( ) . getKeyData		2372197						
ANR	2372385	Symbol	isOutgoing_MD5_on		2372197						
ANR	2372386	Function	Sock :: serializeCryptoInfo	1562:0:42304:43989							
ANR	2372387	FunctionDef	Sock :: serializeCryptoInfo (char * buf)		2372386	0					
ANR	2372388	CompoundStatement		1563:0:42349:43989	2372386	0					
ANR	2372389	IdentifierDeclStatement	unsigned char * kserial = NULL ;	1564:1:42352:42382	2372386	0	True				
ANR	2372390	IdentifierDecl	* kserial = NULL		2372386	0					
ANR	2372391	IdentifierDeclType	unsigned char *		2372386	0					
ANR	2372392	Identifier	kserial		2372386	1					
ANR	2372393	AssignmentExpression	* kserial = NULL		2372386	2		=			
ANR	2372394	Identifier	NULL		2372386	0					
ANR	2372395	Identifier	NULL		2372386	1					
ANR	2372396	IdentifierDeclStatement	char * ptmp = buf ;	1565:4:42388:42405	2372386	1	True				
ANR	2372397	IdentifierDecl	* ptmp = buf		2372386	0					
ANR	2372398	IdentifierDeclType	char *		2372386	0					
ANR	2372399	Identifier	ptmp		2372386	1					
ANR	2372400	AssignmentExpression	* ptmp = buf		2372386	2		=			
ANR	2372401	Identifier	buf		2372386	0					
ANR	2372402	Identifier	buf		2372386	1					
ANR	2372403	IdentifierDeclStatement	"int len = 0 , encoded_len = 0 ;"	1566:4:42411:42442	2372386	2	True				
ANR	2372404	IdentifierDecl	len = 0		2372386	0					
ANR	2372405	IdentifierDeclType	int		2372386	0					
ANR	2372406	Identifier	len		2372386	1					
ANR	2372407	AssignmentExpression	len = 0		2372386	2		=			
ANR	2372408	Identifier	len		2372386	0					
ANR	2372409	PrimaryExpression	0		2372386	1					
ANR	2372410	IdentifierDecl	encoded_len = 0		2372386	1					
ANR	2372411	IdentifierDeclType	int		2372386	0					
ANR	2372412	Identifier	encoded_len		2372386	1					
ANR	2372413	AssignmentExpression	encoded_len = 0		2372386	2		=			
ANR	2372414	Identifier	encoded_len		2372386	0					
ANR	2372415	PrimaryExpression	0		2372386	1					
ANR	2372416	IdentifierDeclStatement	int protocol = CONDOR_NO_PROTOCOL ;	1567:4:42448:42481	2372386	3	True				
ANR	2372417	IdentifierDecl	protocol = CONDOR_NO_PROTOCOL		2372386	0					
ANR	2372418	IdentifierDeclType	int		2372386	0					
ANR	2372419	Identifier	protocol		2372386	1					
ANR	2372420	AssignmentExpression	protocol = CONDOR_NO_PROTOCOL		2372386	2		=			
ANR	2372421	Identifier	CONDOR_NO_PROTOCOL		2372386	0					
ANR	2372422	Identifier	CONDOR_NO_PROTOCOL		2372386	1					
ANR	2372423	ExpressionStatement	ASSERT ( ptmp )	1572:4:42692:42704	2372386	4	True				
ANR	2372424	CallExpression	ASSERT ( ptmp )		2372386	0					
ANR	2372425	Callee	ASSERT		2372386	0					
ANR	2372426	Identifier	ASSERT		2372386	0					
ANR	2372427	ArgumentList	ptmp		2372386	1					
ANR	2372428	Argument	ptmp		2372386	0					
ANR	2372429	Identifier	ptmp		2372386	0					
ANR	2372430	ExpressionStatement	"sscanf ( ptmp , ""%d*"" , & encoded_len )"	1574:4:42711:42744	2372386	5	True				
ANR	2372431	CallExpression	"sscanf ( ptmp , ""%d*"" , & encoded_len )"		2372386	0					
ANR	2372432	Callee	sscanf		2372386	0					
ANR	2372433	Identifier	sscanf		2372386	0					
ANR	2372434	ArgumentList	ptmp		2372386	1					
ANR	2372435	Argument	ptmp		2372386	0					
ANR	2372436	Identifier	ptmp		2372386	0					
ANR	2372437	Argument	"""%d*"""		2372386	1					
ANR	2372438	PrimaryExpression	"""%d*"""		2372386	0					
ANR	2372439	Argument	& encoded_len		2372386	2					
ANR	2372440	UnaryOperationExpression	& encoded_len		2372386	0					
ANR	2372441	UnaryOperator	&		2372386	0					
ANR	2372442	Identifier	encoded_len		2372386	1					
ANR	2372443	IfStatement	if ( encoded_len > 0 )		2372386	6					
ANR	2372444	Condition	encoded_len > 0	1575:9:42755:42769	2372386	0	True				
ANR	2372445	RelationalExpression	encoded_len > 0		2372386	0		>			
ANR	2372446	Identifier	encoded_len		2372386	0					
ANR	2372447	PrimaryExpression	0		2372386	1					
ANR	2372448	CompoundStatement		46:8:1333:1393	2372386	1					
ANR	2372449	ExpressionStatement	len = encoded_len / 2	1576:8:42783:42802	2372386	0	True				
ANR	2372450	AssignmentExpression	len = encoded_len / 2		2372386	0		=			
ANR	2372451	Identifier	len		2372386	0					
ANR	2372452	MultiplicativeExpression	encoded_len / 2		2372386	1		/			
ANR	2372453	Identifier	encoded_len		2372386	0					
ANR	2372454	PrimaryExpression	2		2372386	1					
ANR	2372455	ExpressionStatement	kserial = ( unsigned char * ) malloc ( len )	1577:8:42812:42851	2372386	1	True				
ANR	2372456	AssignmentExpression	kserial = ( unsigned char * ) malloc ( len )		2372386	0		=			
ANR	2372457	Identifier	kserial		2372386	0					
ANR	2372458	CastExpression	( unsigned char * ) malloc ( len )		2372386	1					
ANR	2372459	CastTarget	unsigned char *		2372386	0					
ANR	2372460	CallExpression	malloc ( len )		2372386	1					
ANR	2372461	Callee	malloc		2372386	0					
ANR	2372462	Identifier	malloc		2372386	0					
ANR	2372463	ArgumentList	len		2372386	1					
ANR	2372464	Argument	len		2372386	0					
ANR	2372465	Identifier	len		2372386	0					
ANR	2372466	ExpressionStatement	"ptmp = strchr ( ptmp , '*' )"	1580:8:42884:42908	2372386	2	True				
ANR	2372467	AssignmentExpression	"ptmp = strchr ( ptmp , '*' )"		2372386	0		=			
ANR	2372468	Identifier	ptmp		2372386	0					
ANR	2372469	CallExpression	"strchr ( ptmp , '*' )"		2372386	1					
ANR	2372470	Callee	strchr		2372386	0					
ANR	2372471	Identifier	strchr		2372386	0					
ANR	2372472	ArgumentList	ptmp		2372386	1					
ANR	2372473	Argument	ptmp		2372386	0					
ANR	2372474	Identifier	ptmp		2372386	0					
ANR	2372475	Argument	'*'		2372386	1					
ANR	2372476	PrimaryExpression	'*'		2372386	0					
ANR	2372477	ExpressionStatement	ASSERT ( ptmp )	1581:2:42912:42926	2372386	3	True				
ANR	2372478	CallExpression	ASSERT ( ptmp )		2372386	0					
ANR	2372479	Callee	ASSERT		2372386	0					
ANR	2372480	Identifier	ASSERT		2372386	0					
ANR	2372481	ArgumentList	ptmp		2372386	1					
ANR	2372482	Argument	ptmp		2372386	0					
ANR	2372483	Identifier	ptmp		2372386	0					
ANR	2372484	ExpressionStatement	ptmp ++	1582:8:42936:42942	2372386	4	True				
ANR	2372485	PostIncDecOperationExpression	ptmp ++		2372386	0					
ANR	2372486	Identifier	ptmp		2372386	0					
ANR	2372487	IncDec	++		2372386	1					
ANR	2372488	ExpressionStatement	"sscanf ( ptmp , ""%d*"" , & protocol )"	1585:8:42981:43011	2372386	5	True				
ANR	2372489	CallExpression	"sscanf ( ptmp , ""%d*"" , & protocol )"		2372386	0					
ANR	2372490	Callee	sscanf		2372386	0					
ANR	2372491	Identifier	sscanf		2372386	0					
ANR	2372492	ArgumentList	ptmp		2372386	1					
ANR	2372493	Argument	ptmp		2372386	0					
ANR	2372494	Identifier	ptmp		2372386	0					
ANR	2372495	Argument	"""%d*"""		2372386	1					
ANR	2372496	PrimaryExpression	"""%d*"""		2372386	0					
ANR	2372497	Argument	& protocol		2372386	2					
ANR	2372498	UnaryOperationExpression	& protocol		2372386	0					
ANR	2372499	UnaryOperator	&		2372386	0					
ANR	2372500	Identifier	protocol		2372386	1					
ANR	2372501	ExpressionStatement	"ptmp = strchr ( ptmp , '*' )"	1586:8:43021:43045	2372386	6	True				
ANR	2372502	AssignmentExpression	"ptmp = strchr ( ptmp , '*' )"		2372386	0		=			
ANR	2372503	Identifier	ptmp		2372386	0					
ANR	2372504	CallExpression	"strchr ( ptmp , '*' )"		2372386	1					
ANR	2372505	Callee	strchr		2372386	0					
ANR	2372506	Identifier	strchr		2372386	0					
ANR	2372507	ArgumentList	ptmp		2372386	1					
ANR	2372508	Argument	ptmp		2372386	0					
ANR	2372509	Identifier	ptmp		2372386	0					
ANR	2372510	Argument	'*'		2372386	1					
ANR	2372511	PrimaryExpression	'*'		2372386	0					
ANR	2372512	ExpressionStatement	ASSERT ( ptmp )	1587:2:43049:43063	2372386	7	True				
ANR	2372513	CallExpression	ASSERT ( ptmp )		2372386	0					
ANR	2372514	Callee	ASSERT		2372386	0					
ANR	2372515	Identifier	ASSERT		2372386	0					
ANR	2372516	ArgumentList	ptmp		2372386	1					
ANR	2372517	Argument	ptmp		2372386	0					
ANR	2372518	Identifier	ptmp		2372386	0					
ANR	2372519	ExpressionStatement	ptmp ++	1588:8:43073:43079	2372386	8	True				
ANR	2372520	PostIncDecOperationExpression	ptmp ++		2372386	0					
ANR	2372521	Identifier	ptmp		2372386	0					
ANR	2372522	IncDec	++		2372386	1					
ANR	2372523	IdentifierDeclStatement	int encryption_mode = 0 ;	1591:8:43126:43149	2372386	9	True				
ANR	2372524	IdentifierDecl	encryption_mode = 0		2372386	0					
ANR	2372525	IdentifierDeclType	int		2372386	0					
ANR	2372526	Identifier	encryption_mode		2372386	1					
ANR	2372527	AssignmentExpression	encryption_mode = 0		2372386	2		=			
ANR	2372528	Identifier	encryption_mode		2372386	0					
ANR	2372529	PrimaryExpression	0		2372386	1					
ANR	2372530	ExpressionStatement	"sscanf ( ptmp , ""%d*"" , & encryption_mode )"	1592:8:43159:43196	2372386	10	True				
ANR	2372531	CallExpression	"sscanf ( ptmp , ""%d*"" , & encryption_mode )"		2372386	0					
ANR	2372532	Callee	sscanf		2372386	0					
ANR	2372533	Identifier	sscanf		2372386	0					
ANR	2372534	ArgumentList	ptmp		2372386	1					
ANR	2372535	Argument	ptmp		2372386	0					
ANR	2372536	Identifier	ptmp		2372386	0					
ANR	2372537	Argument	"""%d*"""		2372386	1					
ANR	2372538	PrimaryExpression	"""%d*"""		2372386	0					
ANR	2372539	Argument	& encryption_mode		2372386	2					
ANR	2372540	UnaryOperationExpression	& encryption_mode		2372386	0					
ANR	2372541	UnaryOperator	&		2372386	0					
ANR	2372542	Identifier	encryption_mode		2372386	1					
ANR	2372543	ExpressionStatement	"ptmp = strchr ( ptmp , '*' )"	1593:8:43206:43230	2372386	11	True				
ANR	2372544	AssignmentExpression	"ptmp = strchr ( ptmp , '*' )"		2372386	0		=			
ANR	2372545	Identifier	ptmp		2372386	0					
ANR	2372546	CallExpression	"strchr ( ptmp , '*' )"		2372386	1					
ANR	2372547	Callee	strchr		2372386	0					
ANR	2372548	Identifier	strchr		2372386	0					
ANR	2372549	ArgumentList	ptmp		2372386	1					
ANR	2372550	Argument	ptmp		2372386	0					
ANR	2372551	Identifier	ptmp		2372386	0					
ANR	2372552	Argument	'*'		2372386	1					
ANR	2372553	PrimaryExpression	'*'		2372386	0					
ANR	2372554	ExpressionStatement	ASSERT ( ptmp )	1594:8:43240:43254	2372386	12	True				
ANR	2372555	CallExpression	ASSERT ( ptmp )		2372386	0					
ANR	2372556	Callee	ASSERT		2372386	0					
ANR	2372557	Identifier	ASSERT		2372386	0					
ANR	2372558	ArgumentList	ptmp		2372386	1					
ANR	2372559	Argument	ptmp		2372386	0					
ANR	2372560	Identifier	ptmp		2372386	0					
ANR	2372561	ExpressionStatement	ptmp ++	1595:8:43264:43270	2372386	13	True				
ANR	2372562	PostIncDecOperationExpression	ptmp ++		2372386	0					
ANR	2372563	Identifier	ptmp		2372386	0					
ANR	2372564	IncDec	++		2372386	1					
ANR	2372565	IdentifierDeclStatement	unsigned char * ptr = kserial ;	1598:8:43329:43358	2372386	14	True				
ANR	2372566	IdentifierDecl	* ptr = kserial		2372386	0					
ANR	2372567	IdentifierDeclType	unsigned char *		2372386	0					
ANR	2372568	Identifier	ptr		2372386	1					
ANR	2372569	AssignmentExpression	* ptr = kserial		2372386	2		=			
ANR	2372570	Identifier	kserial		2372386	0					
ANR	2372571	Identifier	kserial		2372386	1					
ANR	2372572	IdentifierDeclStatement	unsigned int hex ;	1599:8:43368:43384	2372386	15	True				
ANR	2372573	IdentifierDecl	hex		2372386	0					
ANR	2372574	IdentifierDeclType	unsigned int		2372386	0					
ANR	2372575	Identifier	hex		2372386	1					
ANR	2372576	ForStatement	for ( int i = 0 ; i < len ; i ++ )		2372386	16					
ANR	2372577	ForInit	int i = 0 ;	1600:12:43398:43407	2372386	0	True				
ANR	2372578	IdentifierDeclStatement	int i = 0 ;		2372386	0					
ANR	2372579	IdentifierDecl	i = 0		2372386	0					
ANR	2372580	IdentifierDeclType	int		2372386	0					
ANR	2372581	Identifier	i		2372386	1					
ANR	2372582	AssignmentExpression	i = 0		2372386	2		=			
ANR	2372583	Identifier	i		2372386	0					
ANR	2372584	PrimaryExpression	0		2372386	1					
ANR	2372585	Condition	i < len	1600:23:43409:43415	2372386	1	True				
ANR	2372586	RelationalExpression	i < len		2372386	0		<			
ANR	2372587	Identifier	i		2372386	0					
ANR	2372588	Identifier	len		2372386	1					
ANR	2372589	PostIncDecOperationExpression	i ++	1600:32:43418:43420	2372386	2	True				
ANR	2372590	Identifier	i		2372386	0					
ANR	2372591	IncDec	++		2372386	1					
ANR	2372592	CompoundStatement		38:37:1073:1073	2372386	3					
ANR	2372593	ExpressionStatement	"sscanf ( ptmp , ""%2X"" , & hex )"	1601:12:43437:43462	2372386	0	True				
ANR	2372594	CallExpression	"sscanf ( ptmp , ""%2X"" , & hex )"		2372386	0					
ANR	2372595	Callee	sscanf		2372386	0					
ANR	2372596	Identifier	sscanf		2372386	0					
ANR	2372597	ArgumentList	ptmp		2372386	1					
ANR	2372598	Argument	ptmp		2372386	0					
ANR	2372599	Identifier	ptmp		2372386	0					
ANR	2372600	Argument	"""%2X"""		2372386	1					
ANR	2372601	PrimaryExpression	"""%2X"""		2372386	0					
ANR	2372602	Argument	& hex		2372386	2					
ANR	2372603	UnaryOperationExpression	& hex		2372386	0					
ANR	2372604	UnaryOperator	&		2372386	0					
ANR	2372605	Identifier	hex		2372386	1					
ANR	2372606	ExpressionStatement	* ptr = ( unsigned char ) hex	1602:12:43476:43501	2372386	1	True				
ANR	2372607	AssignmentExpression	* ptr = ( unsigned char ) hex		2372386	0		=			
ANR	2372608	UnaryOperationExpression	* ptr		2372386	0					
ANR	2372609	UnaryOperator	*		2372386	0					
ANR	2372610	Identifier	ptr		2372386	1					
ANR	2372611	CastExpression	( unsigned char ) hex		2372386	1					
ANR	2372612	CastTarget	unsigned char		2372386	0					
ANR	2372613	Identifier	hex		2372386	1					
ANR	2372614	ExpressionStatement	ptmp += 2	1603:3:43506:43515	2372386	2	True				
ANR	2372615	AssignmentExpression	ptmp += 2		2372386	0		+=			
ANR	2372616	Identifier	ptmp		2372386	0					
ANR	2372617	PrimaryExpression	2		2372386	1					
ANR	2372618	ExpressionStatement	ptr ++	1604:3:43562:43567	2372386	3	True				
ANR	2372619	PostIncDecOperationExpression	ptr ++		2372386	0					
ANR	2372620	Identifier	ptr		2372386	0					
ANR	2372621	IncDec	++		2372386	1					
ANR	2372622	IdentifierDeclStatement	"KeyInfo k ( ( unsigned char * ) kserial , len , ( Protocol ) protocol ) ;"	1608:8:43683:43743	2372386	17	True				
ANR	2372623	IdentifierDecl	"k ( ( unsigned char * ) kserial , len , ( Protocol ) protocol )"		2372386	0					
ANR	2372624	IdentifierDeclType	KeyInfo		2372386	0					
ANR	2372625	Identifier	k		2372386	1					
ANR	2372626	Expression	"( unsigned char * ) kserial , len , ( Protocol ) protocol"		2372386	2					
ANR	2372627	CastExpression	( unsigned char * ) kserial		2372386	0					
ANR	2372628	CastTarget	unsigned char *		2372386	0					
ANR	2372629	Identifier	kserial		2372386	1					
ANR	2372630	Expression	"len , ( Protocol ) protocol"		2372386	1					
ANR	2372631	Identifier	len		2372386	0					
ANR	2372632	CastExpression	( Protocol ) protocol		2372386	1					
ANR	2372633	CastTarget	Protocol		2372386	0					
ANR	2372634	Identifier	protocol		2372386	1					
ANR	2372635	ExpressionStatement	"set_crypto_key ( encryption_mode == 1 , & k , 0 )"	1609:8:43753:43794	2372386	18	True				
ANR	2372636	CallExpression	"set_crypto_key ( encryption_mode == 1 , & k , 0 )"		2372386	0					
ANR	2372637	Callee	set_crypto_key		2372386	0					
ANR	2372638	Identifier	set_crypto_key		2372386	0					
ANR	2372639	ArgumentList	encryption_mode == 1		2372386	1					
ANR	2372640	Argument	encryption_mode == 1		2372386	0					
ANR	2372641	EqualityExpression	encryption_mode == 1		2372386	0		==			
ANR	2372642	Identifier	encryption_mode		2372386	0					
ANR	2372643	PrimaryExpression	1		2372386	1					
ANR	2372644	Argument	& k		2372386	1					
ANR	2372645	UnaryOperationExpression	& k		2372386	0					
ANR	2372646	UnaryOperator	&		2372386	0					
ANR	2372647	Identifier	k		2372386	1					
ANR	2372648	Argument	0		2372386	2					
ANR	2372649	PrimaryExpression	0		2372386	0					
ANR	2372650	ExpressionStatement	free ( kserial )	1610:8:43804:43817	2372386	19	True				
ANR	2372651	CallExpression	free ( kserial )		2372386	0					
ANR	2372652	Callee	free		2372386	0					
ANR	2372653	Identifier	free		2372386	0					
ANR	2372654	ArgumentList	kserial		2372386	1					
ANR	2372655	Argument	kserial		2372386	0					
ANR	2372656	Identifier	kserial		2372386	0					
ANR	2372657	ExpressionStatement	ASSERT ( * ptmp == '*' )	1611:2:43821:43843	2372386	20	True				
ANR	2372658	CallExpression	ASSERT ( * ptmp == '*' )		2372386	0					
ANR	2372659	Callee	ASSERT		2372386	0					
ANR	2372660	Identifier	ASSERT		2372386	0					
ANR	2372661	ArgumentList	* ptmp == '*'		2372386	1					
ANR	2372662	Argument	* ptmp == '*'		2372386	0					
ANR	2372663	EqualityExpression	* ptmp == '*'		2372386	0		==			
ANR	2372664	UnaryOperationExpression	* ptmp		2372386	0					
ANR	2372665	UnaryOperator	*		2372386	0					
ANR	2372666	Identifier	ptmp		2372386	1					
ANR	2372667	PrimaryExpression	'*'		2372386	1					
ANR	2372668	ExpressionStatement	ptmp ++	1613:8:43888:43894	2372386	21	True				
ANR	2372669	PostIncDecOperationExpression	ptmp ++		2372386	0					
ANR	2372670	Identifier	ptmp		2372386	0					
ANR	2372671	IncDec	++		2372386	1					
ANR	2372672	ElseStatement	else		2372386	0					
ANR	2372673	CompoundStatement		53:9:1561:1561	2372386	0					
ANR	2372674	ExpressionStatement	"ptmp = strchr ( ptmp , '*' )"	1616:2:43915:43939	2372386	0	True				
ANR	2372675	AssignmentExpression	"ptmp = strchr ( ptmp , '*' )"		2372386	0		=			
ANR	2372676	Identifier	ptmp		2372386	0					
ANR	2372677	CallExpression	"strchr ( ptmp , '*' )"		2372386	1					
ANR	2372678	Callee	strchr		2372386	0					
ANR	2372679	Identifier	strchr		2372386	0					
ANR	2372680	ArgumentList	ptmp		2372386	1					
ANR	2372681	Argument	ptmp		2372386	0					
ANR	2372682	Identifier	ptmp		2372386	0					
ANR	2372683	Argument	'*'		2372386	1					
ANR	2372684	PrimaryExpression	'*'		2372386	0					
ANR	2372685	ExpressionStatement	ASSERT ( ptmp )	1617:2:43943:43957	2372386	1	True				
ANR	2372686	CallExpression	ASSERT ( ptmp )		2372386	0					
ANR	2372687	Callee	ASSERT		2372386	0					
ANR	2372688	Identifier	ASSERT		2372386	0					
ANR	2372689	ArgumentList	ptmp		2372386	1					
ANR	2372690	Argument	ptmp		2372386	0					
ANR	2372691	Identifier	ptmp		2372386	0					
ANR	2372692	ExpressionStatement	ptmp ++	1618:2:43961:43967	2372386	2	True				
ANR	2372693	PostIncDecOperationExpression	ptmp ++		2372386	0					
ANR	2372694	Identifier	ptmp		2372386	0					
ANR	2372695	IncDec	++		2372386	1					
ANR	2372696	ReturnStatement	return ptmp ;	1620:1:43976:43987	2372386	7	True				
ANR	2372697	Identifier	ptmp		2372386	0					
ANR	2372698	ReturnType	char *		2372386	1					
ANR	2372699	Identifier	Sock :: serializeCryptoInfo		2372386	2					
ANR	2372700	ParameterList	char * buf		2372386	3					
ANR	2372701	Parameter	char * buf	1562:33:42337:42346	2372386	0	True				
ANR	2372702	ParameterType	char *		2372386	0					
ANR	2372703	Identifier	buf		2372386	1					
ANR	2372704	CFGEntryNode	ENTRY		2372386		True				
ANR	2372705	CFGExitNode	EXIT		2372386		True				
ANR	2372706	Symbol	& encryption_mode		2372386						
ANR	2372707	Symbol	malloc		2372386						
ANR	2372708	Symbol	kserial		2372386						
ANR	2372709	Symbol	NULL		2372386						
ANR	2372710	Symbol	& hex		2372386						
ANR	2372711	Symbol	strchr		2372386						
ANR	2372712	Symbol	i		2372386						
ANR	2372713	Symbol	& encoded_len		2372386						
ANR	2372714	Symbol	CONDOR_NO_PROTOCOL		2372386						
ANR	2372715	Symbol	k		2372386						
ANR	2372716	Symbol	encryption_mode		2372386						
ANR	2372717	Symbol	& protocol		2372386						
ANR	2372718	Symbol	ptr		2372386						
ANR	2372719	Symbol	& k		2372386						
ANR	2372720	Symbol	buf		2372386						
ANR	2372721	Symbol	protocol		2372386						
ANR	2372722	Symbol	ptmp		2372386						
ANR	2372723	Symbol	len		2372386						
ANR	2372724	Symbol	* ptr		2372386						
ANR	2372725	Symbol	hex		2372386						
ANR	2372726	Symbol	encoded_len		2372386						
ANR	2372727	Symbol	* ptmp		2372386						
ANR	2372728	Function	Sock :: serializeMdInfo	1623:0:43992:45249							
ANR	2372729	FunctionDef	Sock :: serializeMdInfo (char * buf)		2372728	0					
ANR	2372730	CompoundStatement		1624:0:44033:45249	2372728	0					
ANR	2372731	IdentifierDeclStatement	unsigned char * kmd = NULL ;	1625:1:44036:44062	2372728	0	True				
ANR	2372732	IdentifierDecl	* kmd = NULL		2372728	0					
ANR	2372733	IdentifierDeclType	unsigned char *		2372728	0					
ANR	2372734	Identifier	kmd		2372728	1					
ANR	2372735	AssignmentExpression	* kmd = NULL		2372728	2		=			
ANR	2372736	Identifier	NULL		2372728	0					
ANR	2372737	Identifier	NULL		2372728	1					
ANR	2372738	IdentifierDeclStatement	char * ptmp = buf ;	1626:4:44068:44085	2372728	1	True				
ANR	2372739	IdentifierDecl	* ptmp = buf		2372728	0					
ANR	2372740	IdentifierDeclType	char *		2372728	0					
ANR	2372741	Identifier	ptmp		2372728	1					
ANR	2372742	AssignmentExpression	* ptmp = buf		2372728	2		=			
ANR	2372743	Identifier	buf		2372728	0					
ANR	2372744	Identifier	buf		2372728	1					
ANR	2372745	IdentifierDeclStatement	"int len = 0 , encoded_len = 0 ;"	1627:4:44091:44122	2372728	2	True				
ANR	2372746	IdentifierDecl	len = 0		2372728	0					
ANR	2372747	IdentifierDeclType	int		2372728	0					
ANR	2372748	Identifier	len		2372728	1					
ANR	2372749	AssignmentExpression	len = 0		2372728	2		=			
ANR	2372750	Identifier	len		2372728	0					
ANR	2372751	PrimaryExpression	0		2372728	1					
ANR	2372752	IdentifierDecl	encoded_len = 0		2372728	1					
ANR	2372753	IdentifierDeclType	int		2372728	0					
ANR	2372754	Identifier	encoded_len		2372728	1					
ANR	2372755	AssignmentExpression	encoded_len = 0		2372728	2		=			
ANR	2372756	Identifier	encoded_len		2372728	0					
ANR	2372757	PrimaryExpression	0		2372728	1					
ANR	2372758	ExpressionStatement	ASSERT ( ptmp )	1632:4:44325:44337	2372728	3	True				
ANR	2372759	CallExpression	ASSERT ( ptmp )		2372728	0					
ANR	2372760	Callee	ASSERT		2372728	0					
ANR	2372761	Identifier	ASSERT		2372728	0					
ANR	2372762	ArgumentList	ptmp		2372728	1					
ANR	2372763	Argument	ptmp		2372728	0					
ANR	2372764	Identifier	ptmp		2372728	0					
ANR	2372765	ExpressionStatement	"sscanf ( ptmp , ""%d*"" , & encoded_len )"	1634:4:44344:44377	2372728	4	True				
ANR	2372766	CallExpression	"sscanf ( ptmp , ""%d*"" , & encoded_len )"		2372728	0					
ANR	2372767	Callee	sscanf		2372728	0					
ANR	2372768	Identifier	sscanf		2372728	0					
ANR	2372769	ArgumentList	ptmp		2372728	1					
ANR	2372770	Argument	ptmp		2372728	0					
ANR	2372771	Identifier	ptmp		2372728	0					
ANR	2372772	Argument	"""%d*"""		2372728	1					
ANR	2372773	PrimaryExpression	"""%d*"""		2372728	0					
ANR	2372774	Argument	& encoded_len		2372728	2					
ANR	2372775	UnaryOperationExpression	& encoded_len		2372728	0					
ANR	2372776	UnaryOperator	&		2372728	0					
ANR	2372777	Identifier	encoded_len		2372728	1					
ANR	2372778	IfStatement	if ( encoded_len > 0 )		2372728	5					
ANR	2372779	Condition	encoded_len > 0	1635:9:44388:44402	2372728	0	True				
ANR	2372780	RelationalExpression	encoded_len > 0		2372728	0		>			
ANR	2372781	Identifier	encoded_len		2372728	0					
ANR	2372782	PrimaryExpression	0		2372728	1					
ANR	2372783	CompoundStatement		32:8:946:982	2372728	1					
ANR	2372784	ExpressionStatement	len = encoded_len / 2	1636:8:44416:44435	2372728	0	True				
ANR	2372785	AssignmentExpression	len = encoded_len / 2		2372728	0		=			
ANR	2372786	Identifier	len		2372728	0					
ANR	2372787	MultiplicativeExpression	encoded_len / 2		2372728	1		/			
ANR	2372788	Identifier	encoded_len		2372728	0					
ANR	2372789	PrimaryExpression	2		2372728	1					
ANR	2372790	ExpressionStatement	kmd = ( unsigned char * ) malloc ( len )	1637:8:44445:44480	2372728	1	True				
ANR	2372791	AssignmentExpression	kmd = ( unsigned char * ) malloc ( len )		2372728	0		=			
ANR	2372792	Identifier	kmd		2372728	0					
ANR	2372793	CastExpression	( unsigned char * ) malloc ( len )		2372728	1					
ANR	2372794	CastTarget	unsigned char *		2372728	0					
ANR	2372795	CallExpression	malloc ( len )		2372728	1					
ANR	2372796	Callee	malloc		2372728	0					
ANR	2372797	Identifier	malloc		2372728	0					
ANR	2372798	ArgumentList	len		2372728	1					
ANR	2372799	Argument	len		2372728	0					
ANR	2372800	Identifier	len		2372728	0					
ANR	2372801	ExpressionStatement	"ptmp = strchr ( ptmp , '*' )"	1640:8:44513:44537	2372728	2	True				
ANR	2372802	AssignmentExpression	"ptmp = strchr ( ptmp , '*' )"		2372728	0		=			
ANR	2372803	Identifier	ptmp		2372728	0					
ANR	2372804	CallExpression	"strchr ( ptmp , '*' )"		2372728	1					
ANR	2372805	Callee	strchr		2372728	0					
ANR	2372806	Identifier	strchr		2372728	0					
ANR	2372807	ArgumentList	ptmp		2372728	1					
ANR	2372808	Argument	ptmp		2372728	0					
ANR	2372809	Identifier	ptmp		2372728	0					
ANR	2372810	Argument	'*'		2372728	1					
ANR	2372811	PrimaryExpression	'*'		2372728	0					
ANR	2372812	ExpressionStatement	ASSERT ( ptmp )	1641:2:44541:44555	2372728	3	True				
ANR	2372813	CallExpression	ASSERT ( ptmp )		2372728	0					
ANR	2372814	Callee	ASSERT		2372728	0					
ANR	2372815	Identifier	ASSERT		2372728	0					
ANR	2372816	ArgumentList	ptmp		2372728	1					
ANR	2372817	Argument	ptmp		2372728	0					
ANR	2372818	Identifier	ptmp		2372728	0					
ANR	2372819	ExpressionStatement	ptmp ++	1642:8:44565:44571	2372728	4	True				
ANR	2372820	PostIncDecOperationExpression	ptmp ++		2372728	0					
ANR	2372821	Identifier	ptmp		2372728	0					
ANR	2372822	IncDec	++		2372728	1					
ANR	2372823	IdentifierDeclStatement	unsigned char * ptr = kmd ;	1645:8:44630:44655	2372728	5	True				
ANR	2372824	IdentifierDecl	* ptr = kmd		2372728	0					
ANR	2372825	IdentifierDeclType	unsigned char *		2372728	0					
ANR	2372826	Identifier	ptr		2372728	1					
ANR	2372827	AssignmentExpression	* ptr = kmd		2372728	2		=			
ANR	2372828	Identifier	kmd		2372728	0					
ANR	2372829	Identifier	kmd		2372728	1					
ANR	2372830	IdentifierDeclStatement	unsigned int hex ;	1646:8:44665:44681	2372728	6	True				
ANR	2372831	IdentifierDecl	hex		2372728	0					
ANR	2372832	IdentifierDeclType	unsigned int		2372728	0					
ANR	2372833	Identifier	hex		2372728	1					
ANR	2372834	ForStatement	for ( int i = 0 ; i < len ; i ++ )		2372728	7					
ANR	2372835	ForInit	int i = 0 ;	1647:12:44695:44704	2372728	0	True				
ANR	2372836	IdentifierDeclStatement	int i = 0 ;		2372728	0					
ANR	2372837	IdentifierDecl	i = 0		2372728	0					
ANR	2372838	IdentifierDeclType	int		2372728	0					
ANR	2372839	Identifier	i		2372728	1					
ANR	2372840	AssignmentExpression	i = 0		2372728	2		=			
ANR	2372841	Identifier	i		2372728	0					
ANR	2372842	PrimaryExpression	0		2372728	1					
ANR	2372843	Condition	i < len	1647:23:44706:44712	2372728	1	True				
ANR	2372844	RelationalExpression	i < len		2372728	0		<			
ANR	2372845	Identifier	i		2372728	0					
ANR	2372846	Identifier	len		2372728	1					
ANR	2372847	PostIncDecOperationExpression	i ++	1647:32:44715:44717	2372728	2	True				
ANR	2372848	Identifier	i		2372728	0					
ANR	2372849	IncDec	++		2372728	1					
ANR	2372850	CompoundStatement		24:37:686:686	2372728	3					
ANR	2372851	ExpressionStatement	"sscanf ( ptmp , ""%2X"" , & hex )"	1648:12:44734:44759	2372728	0	True				
ANR	2372852	CallExpression	"sscanf ( ptmp , ""%2X"" , & hex )"		2372728	0					
ANR	2372853	Callee	sscanf		2372728	0					
ANR	2372854	Identifier	sscanf		2372728	0					
ANR	2372855	ArgumentList	ptmp		2372728	1					
ANR	2372856	Argument	ptmp		2372728	0					
ANR	2372857	Identifier	ptmp		2372728	0					
ANR	2372858	Argument	"""%2X"""		2372728	1					
ANR	2372859	PrimaryExpression	"""%2X"""		2372728	0					
ANR	2372860	Argument	& hex		2372728	2					
ANR	2372861	UnaryOperationExpression	& hex		2372728	0					
ANR	2372862	UnaryOperator	&		2372728	0					
ANR	2372863	Identifier	hex		2372728	1					
ANR	2372864	ExpressionStatement	* ptr = ( unsigned char ) hex	1649:12:44773:44798	2372728	1	True				
ANR	2372865	AssignmentExpression	* ptr = ( unsigned char ) hex		2372728	0		=			
ANR	2372866	UnaryOperationExpression	* ptr		2372728	0					
ANR	2372867	UnaryOperator	*		2372728	0					
ANR	2372868	Identifier	ptr		2372728	1					
ANR	2372869	CastExpression	( unsigned char ) hex		2372728	1					
ANR	2372870	CastTarget	unsigned char		2372728	0					
ANR	2372871	Identifier	hex		2372728	1					
ANR	2372872	ExpressionStatement	ptmp += 2	1650:3:44803:44812	2372728	2	True				
ANR	2372873	AssignmentExpression	ptmp += 2		2372728	0		+=			
ANR	2372874	Identifier	ptmp		2372728	0					
ANR	2372875	PrimaryExpression	2		2372728	1					
ANR	2372876	ExpressionStatement	ptr ++	1651:3:44859:44864	2372728	3	True				
ANR	2372877	PostIncDecOperationExpression	ptr ++		2372728	0					
ANR	2372878	Identifier	ptr		2372728	0					
ANR	2372879	IncDec	++		2372728	1					
ANR	2372880	IdentifierDeclStatement	"KeyInfo k ( ( unsigned char * ) kmd , len ) ;"	1655:8:44980:45016	2372728	8	True				
ANR	2372881	IdentifierDecl	"k ( ( unsigned char * ) kmd , len )"		2372728	0					
ANR	2372882	IdentifierDeclType	KeyInfo		2372728	0					
ANR	2372883	Identifier	k		2372728	1					
ANR	2372884	Expression	"( unsigned char * ) kmd , len"		2372728	2					
ANR	2372885	CastExpression	( unsigned char * ) kmd		2372728	0					
ANR	2372886	CastTarget	unsigned char *		2372728	0					
ANR	2372887	Identifier	kmd		2372728	1					
ANR	2372888	Identifier	len		2372728	1					
ANR	2372889	ExpressionStatement	"set_MD_mode ( MD_ALWAYS_ON , & k , 0 )"	1656:8:45026:45058	2372728	9	True				
ANR	2372890	CallExpression	"set_MD_mode ( MD_ALWAYS_ON , & k , 0 )"		2372728	0					
ANR	2372891	Callee	set_MD_mode		2372728	0					
ANR	2372892	Identifier	set_MD_mode		2372728	0					
ANR	2372893	ArgumentList	MD_ALWAYS_ON		2372728	1					
ANR	2372894	Argument	MD_ALWAYS_ON		2372728	0					
ANR	2372895	Identifier	MD_ALWAYS_ON		2372728	0					
ANR	2372896	Argument	& k		2372728	1					
ANR	2372897	UnaryOperationExpression	& k		2372728	0					
ANR	2372898	UnaryOperator	&		2372728	0					
ANR	2372899	Identifier	k		2372728	1					
ANR	2372900	Argument	0		2372728	2					
ANR	2372901	PrimaryExpression	0		2372728	0					
ANR	2372902	ExpressionStatement	free ( kmd )	1657:8:45068:45077	2372728	10	True				
ANR	2372903	CallExpression	free ( kmd )		2372728	0					
ANR	2372904	Callee	free		2372728	0					
ANR	2372905	Identifier	free		2372728	0					
ANR	2372906	ArgumentList	kmd		2372728	1					
ANR	2372907	Argument	kmd		2372728	0					
ANR	2372908	Identifier	kmd		2372728	0					
ANR	2372909	ExpressionStatement	ASSERT ( * ptmp == '*' )	1658:2:45081:45103	2372728	11	True				
ANR	2372910	CallExpression	ASSERT ( * ptmp == '*' )		2372728	0					
ANR	2372911	Callee	ASSERT		2372728	0					
ANR	2372912	Identifier	ASSERT		2372728	0					
ANR	2372913	ArgumentList	* ptmp == '*'		2372728	1					
ANR	2372914	Argument	* ptmp == '*'		2372728	0					
ANR	2372915	EqualityExpression	* ptmp == '*'		2372728	0		==			
ANR	2372916	UnaryOperationExpression	* ptmp		2372728	0					
ANR	2372917	UnaryOperator	*		2372728	0					
ANR	2372918	Identifier	ptmp		2372728	1					
ANR	2372919	PrimaryExpression	'*'		2372728	1					
ANR	2372920	ExpressionStatement	ptmp ++	1660:8:45148:45154	2372728	12	True				
ANR	2372921	PostIncDecOperationExpression	ptmp ++		2372728	0					
ANR	2372922	Identifier	ptmp		2372728	0					
ANR	2372923	IncDec	++		2372728	1					
ANR	2372924	ElseStatement	else		2372728	0					
ANR	2372925	CompoundStatement		39:9:1137:1137	2372728	0					
ANR	2372926	ExpressionStatement	"ptmp = strchr ( ptmp , '*' )"	1663:2:45175:45199	2372728	0	True				
ANR	2372927	AssignmentExpression	"ptmp = strchr ( ptmp , '*' )"		2372728	0		=			
ANR	2372928	Identifier	ptmp		2372728	0					
ANR	2372929	CallExpression	"strchr ( ptmp , '*' )"		2372728	1					
ANR	2372930	Callee	strchr		2372728	0					
ANR	2372931	Identifier	strchr		2372728	0					
ANR	2372932	ArgumentList	ptmp		2372728	1					
ANR	2372933	Argument	ptmp		2372728	0					
ANR	2372934	Identifier	ptmp		2372728	0					
ANR	2372935	Argument	'*'		2372728	1					
ANR	2372936	PrimaryExpression	'*'		2372728	0					
ANR	2372937	ExpressionStatement	ASSERT ( ptmp )	1664:2:45203:45217	2372728	1	True				
ANR	2372938	CallExpression	ASSERT ( ptmp )		2372728	0					
ANR	2372939	Callee	ASSERT		2372728	0					
ANR	2372940	Identifier	ASSERT		2372728	0					
ANR	2372941	ArgumentList	ptmp		2372728	1					
ANR	2372942	Argument	ptmp		2372728	0					
ANR	2372943	Identifier	ptmp		2372728	0					
ANR	2372944	ExpressionStatement	ptmp ++	1665:2:45221:45227	2372728	2	True				
ANR	2372945	PostIncDecOperationExpression	ptmp ++		2372728	0					
ANR	2372946	Identifier	ptmp		2372728	0					
ANR	2372947	IncDec	++		2372728	1					
ANR	2372948	ReturnStatement	return ptmp ;	1667:1:45236:45247	2372728	6	True				
ANR	2372949	Identifier	ptmp		2372728	0					
ANR	2372950	ReturnType	char *		2372728	1					
ANR	2372951	Identifier	Sock :: serializeMdInfo		2372728	2					
ANR	2372952	ParameterList	char * buf		2372728	3					
ANR	2372953	Parameter	char * buf	1623:29:44021:44030	2372728	0	True				
ANR	2372954	ParameterType	char *		2372728	0					
ANR	2372955	Identifier	buf		2372728	1					
ANR	2372956	CFGEntryNode	ENTRY		2372728		True				
ANR	2372957	CFGExitNode	EXIT		2372728		True				
ANR	2372958	Symbol	malloc		2372728						
ANR	2372959	Symbol	NULL		2372728						
ANR	2372960	Symbol	kmd		2372728						
ANR	2372961	Symbol	& hex		2372728						
ANR	2372962	Symbol	strchr		2372728						
ANR	2372963	Symbol	i		2372728						
ANR	2372964	Symbol	& encoded_len		2372728						
ANR	2372965	Symbol	k		2372728						
ANR	2372966	Symbol	ptr		2372728						
ANR	2372967	Symbol	& k		2372728						
ANR	2372968	Symbol	buf		2372728						
ANR	2372969	Symbol	ptmp		2372728						
ANR	2372970	Symbol	len		2372728						
ANR	2372971	Symbol	* ptr		2372728						
ANR	2372972	Symbol	MD_ALWAYS_ON		2372728						
ANR	2372973	Symbol	hex		2372728						
ANR	2372974	Symbol	encoded_len		2372728						
ANR	2372975	Symbol	* ptmp		2372728						
ANR	2372976	Function	Sock :: serialize	1670:0:45252:46150							
ANR	2372977	FunctionDef	Sock :: serialize ()		2372976	0					
ANR	2372978	CompoundStatement		1671:0:45283:46150	2372976	0					
ANR	2372979	IdentifierDeclStatement	size_t fqu_len = _fqu ? strlen ( _fqu ) : 0 ;	1673:1:45335:45375	2372976	0	True				
ANR	2372980	IdentifierDecl	fqu_len = _fqu ? strlen ( _fqu ) : 0		2372976	0					
ANR	2372981	IdentifierDeclType	size_t		2372976	0					
ANR	2372982	Identifier	fqu_len		2372976	1					
ANR	2372983	AssignmentExpression	fqu_len = _fqu ? strlen ( _fqu ) : 0		2372976	2		=			
ANR	2372984	Identifier	fqu_len		2372976	0					
ANR	2372985	ConditionalExpression	_fqu ? strlen ( _fqu ) : 0		2372976	1					
ANR	2372986	Condition	_fqu		2372976	0					
ANR	2372987	Identifier	_fqu		2372976	0					
ANR	2372988	CallExpression	strlen ( _fqu )		2372976	1					
ANR	2372989	Callee	strlen		2372976	0					
ANR	2372990	Identifier	strlen		2372976	0					
ANR	2372991	ArgumentList	_fqu		2372976	1					
ANR	2372992	Argument	_fqu		2372976	0					
ANR	2372993	Identifier	_fqu		2372976	0					
ANR	2372994	PrimaryExpression	0		2372976	2					
ANR	2372995	IdentifierDeclStatement	size_t verstring_len = 0 ;	1675:1:45379:45403	2372976	1	True				
ANR	2372996	IdentifierDecl	verstring_len = 0		2372976	0					
ANR	2372997	IdentifierDeclType	size_t		2372976	0					
ANR	2372998	Identifier	verstring_len		2372976	1					
ANR	2372999	AssignmentExpression	verstring_len = 0		2372976	2		=			
ANR	2373000	Identifier	verstring_len		2372976	0					
ANR	2373001	PrimaryExpression	0		2372976	1					
ANR	2373002	IdentifierDeclStatement	char * verstring = NULL ;	1676:1:45406:45429	2372976	2	True				
ANR	2373003	IdentifierDecl	* verstring = NULL		2372976	0					
ANR	2373004	IdentifierDeclType	char *		2372976	0					
ANR	2373005	Identifier	verstring		2372976	1					
ANR	2373006	AssignmentExpression	* verstring = NULL		2372976	2		=			
ANR	2373007	Identifier	NULL		2372976	0					
ANR	2373008	Identifier	NULL		2372976	1					
ANR	2373009	IdentifierDeclStatement	CondorVersionInfo const * peer_version = get_peer_version ( ) ;	1677:1:45432:45490	2372976	3	True				
ANR	2373010	IdentifierDecl	* peer_version = get_peer_version ( )		2372976	0					
ANR	2373011	IdentifierDeclType	CondorVersionInfo const *		2372976	0					
ANR	2373012	Identifier	peer_version		2372976	1					
ANR	2373013	AssignmentExpression	* peer_version = get_peer_version ( )		2372976	2		=			
ANR	2373014	Identifier	peer_version		2372976	0					
ANR	2373015	CallExpression	get_peer_version ( )		2372976	1					
ANR	2373016	Callee	get_peer_version		2372976	0					
ANR	2373017	Identifier	get_peer_version		2372976	0					
ANR	2373018	ArgumentList			2372976	1					
ANR	2373019	IfStatement	if ( peer_version )		2372976	4					
ANR	2373020	Condition	peer_version	1678:5:45497:45508	2372976	0	True				
ANR	2373021	Identifier	peer_version		2372976	0					
ANR	2373022	CompoundStatement		8:20:228:228	2372976	1					
ANR	2373023	ExpressionStatement	verstring = peer_version -> get_version_string ( )	1679:2:45516:45562	2372976	0	True				
ANR	2373024	AssignmentExpression	verstring = peer_version -> get_version_string ( )		2372976	0		=			
ANR	2373025	Identifier	verstring		2372976	0					
ANR	2373026	CallExpression	peer_version -> get_version_string ( )		2372976	1					
ANR	2373027	Callee	peer_version -> get_version_string		2372976	0					
ANR	2373028	PtrMemberAccess	peer_version -> get_version_string		2372976	0					
ANR	2373029	Identifier	peer_version		2372976	0					
ANR	2373030	Identifier	get_version_string		2372976	1					
ANR	2373031	ArgumentList			2372976	1					
ANR	2373032	IfStatement	if ( verstring )		2372976	1					
ANR	2373033	Condition	verstring	1680:6:45570:45578	2372976	0	True				
ANR	2373034	Identifier	verstring		2372976	0					
ANR	2373035	CompoundStatement		13:3:405:412	2372976	1					
ANR	2373036	ExpressionStatement	verstring_len = strlen ( verstring )	1681:3:45587:45620	2372976	0	True				
ANR	2373037	AssignmentExpression	verstring_len = strlen ( verstring )		2372976	0		=			
ANR	2373038	Identifier	verstring_len		2372976	0					
ANR	2373039	CallExpression	strlen ( verstring )		2372976	1					
ANR	2373040	Callee	strlen		2372976	0					
ANR	2373041	Identifier	strlen		2372976	0					
ANR	2373042	ArgumentList	verstring		2372976	1					
ANR	2373043	Argument	verstring		2372976	0					
ANR	2373044	Identifier	verstring		2372976	0					
ANR	2373045	IdentifierDeclStatement	char * s ;	1683:3:45689:45696	2372976	1	True				
ANR	2373046	IdentifierDecl	* s		2372976	0					
ANR	2373047	IdentifierDeclType	char *		2372976	0					
ANR	2373048	Identifier	s		2372976	1					
ANR	2373049	WhileStatement	"while ( ( s = strchr ( verstring , ' ' ) ) )"		2372976	2					
ANR	2373050	Condition	"s = strchr ( verstring , ' ' )"	1684:10:45708:45732	2372976	0	True				
ANR	2373051	AssignmentExpression	"s = strchr ( verstring , ' ' )"		2372976	0		=			
ANR	2373052	Identifier	s		2372976	0					
ANR	2373053	CallExpression	"strchr ( verstring , ' ' )"		2372976	1					
ANR	2373054	Callee	strchr		2372976	0					
ANR	2373055	Identifier	strchr		2372976	0					
ANR	2373056	ArgumentList	verstring		2372976	1					
ANR	2373057	Argument	verstring		2372976	0					
ANR	2373058	Identifier	verstring		2372976	0					
ANR	2373059	Argument	' '		2372976	1					
ANR	2373060	PrimaryExpression	' '		2372976	0					
ANR	2373061	CompoundStatement		14:38:452:452	2372976	1					
ANR	2373062	ExpressionStatement	* s = '_'	1685:4:45742:45750	2372976	0	True				
ANR	2373063	AssignmentExpression	* s = '_'		2372976	0		=			
ANR	2373064	UnaryOperationExpression	* s		2372976	0					
ANR	2373065	UnaryOperator	*		2372976	0					
ANR	2373066	Identifier	s		2372976	1					
ANR	2373067	PrimaryExpression	'_'		2372976	1					
ANR	2373068	IdentifierDeclStatement	char * outbuf = new char [ 500 ] ;	1690:1:45766:45795	2372976	5	True				
ANR	2373069	IdentifierDecl	* outbuf = new char [ 500 ]		2372976	0					
ANR	2373070	IdentifierDeclType	char *		2372976	0					
ANR	2373071	Identifier	outbuf		2372976	1					
ANR	2373072	AssignmentExpression	* outbuf = new char [ 500 ]		2372976	2		=			
ANR	2373073	Identifier	outbuf		2372976	0					
ANR	2373074	PrimaryExpression	500		2372976	1					
ANR	2373075	IfStatement	if ( outbuf )		2372976	6					
ANR	2373076	Condition	outbuf	1691:8:45805:45810	2372976	0	True				
ANR	2373077	Identifier	outbuf		2372976	0					
ANR	2373078	CompoundStatement		21:16:529:529	2372976	1					
ANR	2373079	ExpressionStatement	"memset ( outbuf , 0 , 500 )"	1692:8:45823:45845	2372976	0	True				
ANR	2373080	CallExpression	"memset ( outbuf , 0 , 500 )"		2372976	0					
ANR	2373081	Callee	memset		2372976	0					
ANR	2373082	Identifier	memset		2372976	0					
ANR	2373083	ArgumentList	outbuf		2372976	1					
ANR	2373084	Argument	outbuf		2372976	0					
ANR	2373085	Identifier	outbuf		2372976	0					
ANR	2373086	Argument	0		2372976	1					
ANR	2373087	PrimaryExpression	0		2372976	0					
ANR	2373088	Argument	500		2372976	2					
ANR	2373089	PrimaryExpression	500		2372976	0					
ANR	2373090	ExpressionStatement	"sprintf ( outbuf , ""%u*%d*%d*%d*%lu*%lu*%s*%s*"" , _sock , _state , _timeout , triedAuthentication ( ) , ( unsigned long ) fqu_len , ( unsigned long ) verstring_len , _fqu ? _fqu : """" , verstring ? verstring : """" )"	1693:8:45855:46039	2372976	1	True				
ANR	2373091	CallExpression	"sprintf ( outbuf , ""%u*%d*%d*%d*%lu*%lu*%s*%s*"" , _sock , _state , _timeout , triedAuthentication ( ) , ( unsigned long ) fqu_len , ( unsigned long ) verstring_len , _fqu ? _fqu : """" , verstring ? verstring : """" )"		2372976	0					
ANR	2373092	Callee	sprintf		2372976	0					
ANR	2373093	Identifier	sprintf		2372976	0					
ANR	2373094	ArgumentList	outbuf		2372976	1					
ANR	2373095	Argument	outbuf		2372976	0					
ANR	2373096	Identifier	outbuf		2372976	0					
ANR	2373097	Argument	"""%u*%d*%d*%d*%lu*%lu*%s*%s*"""		2372976	1					
ANR	2373098	PrimaryExpression	"""%u*%d*%d*%d*%lu*%lu*%s*%s*"""		2372976	0					
ANR	2373099	Argument	_sock		2372976	2					
ANR	2373100	Identifier	_sock		2372976	0					
ANR	2373101	Argument	_state		2372976	3					
ANR	2373102	Identifier	_state		2372976	0					
ANR	2373103	Argument	_timeout		2372976	4					
ANR	2373104	Identifier	_timeout		2372976	0					
ANR	2373105	Argument	triedAuthentication ( )		2372976	5					
ANR	2373106	CallExpression	triedAuthentication ( )		2372976	0					
ANR	2373107	Callee	triedAuthentication		2372976	0					
ANR	2373108	Identifier	triedAuthentication		2372976	0					
ANR	2373109	ArgumentList			2372976	1					
ANR	2373110	Argument	( unsigned long ) fqu_len		2372976	6					
ANR	2373111	CastExpression	( unsigned long ) fqu_len		2372976	0					
ANR	2373112	CastTarget	unsigned long		2372976	0					
ANR	2373113	Identifier	fqu_len		2372976	1					
ANR	2373114	Argument	( unsigned long ) verstring_len		2372976	7					
ANR	2373115	CastExpression	( unsigned long ) verstring_len		2372976	0					
ANR	2373116	CastTarget	unsigned long		2372976	0					
ANR	2373117	Identifier	verstring_len		2372976	1					
ANR	2373118	Argument	"_fqu ? _fqu : """""		2372976	8					
ANR	2373119	ConditionalExpression	"_fqu ? _fqu : """""		2372976	0					
ANR	2373120	Condition	_fqu		2372976	0					
ANR	2373121	Identifier	_fqu		2372976	0					
ANR	2373122	Identifier	_fqu		2372976	1					
ANR	2373123	PrimaryExpression	""""""		2372976	2					
ANR	2373124	Argument	"verstring ? verstring : """""		2372976	9					
ANR	2373125	ConditionalExpression	"verstring ? verstring : """""		2372976	0					
ANR	2373126	Condition	verstring		2372976	0					
ANR	2373127	Identifier	verstring		2372976	0					
ANR	2373128	Identifier	verstring		2372976	1					
ANR	2373129	PrimaryExpression	""""""		2372976	2					
ANR	2373130	ElseStatement	else		2372976	0					
ANR	2373131	CompoundStatement		25:9:772:772	2372976	0					
ANR	2373132	ExpressionStatement	"dprintf ( D_ALWAYS , ""Out of memory!\\n"" )"	1696:8:46066:46103	2372976	0	True				
ANR	2373133	CallExpression	"dprintf ( D_ALWAYS , ""Out of memory!\\n"" )"		2372976	0					
ANR	2373134	Callee	dprintf		2372976	0					
ANR	2373135	Identifier	dprintf		2372976	0					
ANR	2373136	ArgumentList	D_ALWAYS		2372976	1					
ANR	2373137	Argument	D_ALWAYS		2372976	0					
ANR	2373138	Identifier	D_ALWAYS		2372976	0					
ANR	2373139	Argument	"""Out of memory!\\n"""		2372976	1					
ANR	2373140	PrimaryExpression	"""Out of memory!\\n"""		2372976	0					
ANR	2373141	ExpressionStatement	free ( verstring )	1698:1:46112:46129	2372976	7	True				
ANR	2373142	CallExpression	free ( verstring )		2372976	0					
ANR	2373143	Callee	free		2372976	0					
ANR	2373144	Identifier	free		2372976	0					
ANR	2373145	ArgumentList	verstring		2372976	1					
ANR	2373146	Argument	verstring		2372976	0					
ANR	2373147	Identifier	verstring		2372976	0					
ANR	2373148	ReturnStatement	return ( outbuf ) ;	1699:1:46132:46148	2372976	8	True				
ANR	2373149	Identifier	outbuf		2372976	0					
ANR	2373150	ReturnType	char *		2372976	1					
ANR	2373151	Identifier	Sock :: serialize		2372976	2					
ANR	2373152	ParameterList			2372976	3					
ANR	2373153	CFGEntryNode	ENTRY		2372976		True				
ANR	2373154	CFGExitNode	EXIT		2372976		True				
ANR	2373155	Symbol	NULL		2372976						
ANR	2373156	Symbol	triedAuthentication		2372976						
ANR	2373157	Symbol	_fqu		2372976						
ANR	2373158	Symbol	D_ALWAYS		2372976						
ANR	2373159	Symbol	verstring		2372976						
ANR	2373160	Symbol	strchr		2372976						
ANR	2373161	Symbol	fqu_len		2372976						
ANR	2373162	Symbol	get_peer_version		2372976						
ANR	2373163	Symbol	peer_version -> get_version_string		2372976						
ANR	2373164	Symbol	strlen		2372976						
ANR	2373165	Symbol	peer_version		2372976						
ANR	2373166	Symbol	s		2372976						
ANR	2373167	Symbol	_sock		2372976						
ANR	2373168	Symbol	outbuf		2372976						
ANR	2373169	Symbol	_state		2372976						
ANR	2373170	Symbol	_timeout		2372976						
ANR	2373171	Symbol	* s		2372976						
ANR	2373172	Symbol	verstring_len		2372976						
ANR	2373173	Symbol	* peer_version		2372976						
ANR	2373174	Function	Sock :: close_serialized_socket	1702:0:46153:46372							
ANR	2373175	FunctionDef	Sock :: close_serialized_socket (char const * buf)		2373174	0					
ANR	2373176	CompoundStatement		1704:0:46205:46372	2373174	0					
ANR	2373177	IdentifierDeclStatement	SOCKET passed_sock ;	1706:1:46265:46283	2373174	0	True				
ANR	2373178	IdentifierDecl	passed_sock		2373174	0					
ANR	2373179	IdentifierDeclType	SOCKET		2373174	0					
ANR	2373180	Identifier	passed_sock		2373174	1					
ANR	2373181	IdentifierDeclStatement	int i ;	1707:1:46286:46291	2373174	1	True				
ANR	2373182	IdentifierDecl	i		2373174	0					
ANR	2373183	IdentifierDeclType	int		2373174	0					
ANR	2373184	Identifier	i		2373174	1					
ANR	2373185	ExpressionStatement	"i = sscanf ( buf , ""%u*"" , & passed_sock )"	1708:1:46294:46328	2373174	2	True				
ANR	2373186	AssignmentExpression	"i = sscanf ( buf , ""%u*"" , & passed_sock )"		2373174	0		=			
ANR	2373187	Identifier	i		2373174	0					
ANR	2373188	CallExpression	"sscanf ( buf , ""%u*"" , & passed_sock )"		2373174	1					
ANR	2373189	Callee	sscanf		2373174	0					
ANR	2373190	Identifier	sscanf		2373174	0					
ANR	2373191	ArgumentList	buf		2373174	1					
ANR	2373192	Argument	buf		2373174	0					
ANR	2373193	Identifier	buf		2373174	0					
ANR	2373194	Argument	"""%u*"""		2373174	1					
ANR	2373195	PrimaryExpression	"""%u*"""		2373174	0					
ANR	2373196	Argument	& passed_sock		2373174	2					
ANR	2373197	UnaryOperationExpression	& passed_sock		2373174	0					
ANR	2373198	UnaryOperator	&		2373174	0					
ANR	2373199	Identifier	passed_sock		2373174	1					
ANR	2373200	ExpressionStatement	ASSERT ( i == 1 )	1709:1:46331:46347	2373174	3	True				
ANR	2373201	CallExpression	ASSERT ( i == 1 )		2373174	0					
ANR	2373202	Callee	ASSERT		2373174	0					
ANR	2373203	Identifier	ASSERT		2373174	0					
ANR	2373204	ArgumentList	i == 1		2373174	1					
ANR	2373205	Argument	i == 1		2373174	0					
ANR	2373206	EqualityExpression	i == 1		2373174	0		==			
ANR	2373207	Identifier	i		2373174	0					
ANR	2373208	PrimaryExpression	1		2373174	1					
ANR	2373209	Statement	::	1710:1:46350:46351	2373174	4	True				
ANR	2373210	ExpressionStatement	close ( passed_sock )	1710:3:46352:46370	2373174	5	True				
ANR	2373211	CallExpression	close ( passed_sock )		2373174	0					
ANR	2373212	Callee	close		2373174	0					
ANR	2373213	Identifier	close		2373174	0					
ANR	2373214	ArgumentList	passed_sock		2373174	1					
ANR	2373215	Argument	passed_sock		2373174	0					
ANR	2373216	Identifier	passed_sock		2373174	0					
ANR	2373217	ReturnType	void		2373174	1					
ANR	2373218	Identifier	Sock :: close_serialized_socket		2373174	2					
ANR	2373219	ParameterList	char const * buf		2373174	3					
ANR	2373220	Parameter	char const * buf	1703:30:46188:46202	2373174	0	True				
ANR	2373221	ParameterType	char const *		2373174	0					
ANR	2373222	Identifier	buf		2373174	1					
ANR	2373223	CFGEntryNode	ENTRY		2373174		True				
ANR	2373224	CFGExitNode	EXIT		2373174		True				
ANR	2373225	Symbol	& passed_sock		2373174						
ANR	2373226	Symbol	buf		2373174						
ANR	2373227	Symbol	passed_sock		2373174						
ANR	2373228	Symbol	sscanf		2373174						
ANR	2373229	Symbol	i		2373174						
ANR	2373230	Function	Sock :: serialize	1713:0:46375:48994							
ANR	2373231	FunctionDef	Sock :: serialize (char * buf)		2373230	0					
ANR	2373232	CompoundStatement		1714:0:46409:48994	2373230	0					
ANR	2373233	IdentifierDeclStatement	int i ;	1715:1:46412:46417	2373230	0	True				
ANR	2373234	IdentifierDecl	i		2373230	0					
ANR	2373235	IdentifierDeclType	int		2373230	0					
ANR	2373236	Identifier	i		2373230	1					
ANR	2373237	IdentifierDeclStatement	SOCKET passed_sock ;	1716:1:46420:46438	2373230	1	True				
ANR	2373238	IdentifierDecl	passed_sock		2373230	0					
ANR	2373239	IdentifierDeclType	SOCKET		2373230	0					
ANR	2373240	Identifier	passed_sock		2373230	1					
ANR	2373241	IdentifierDeclStatement	size_t fqulen = 0 ;	1717:1:46441:46458	2373230	2	True				
ANR	2373242	IdentifierDecl	fqulen = 0		2373230	0					
ANR	2373243	IdentifierDeclType	size_t		2373230	0					
ANR	2373244	Identifier	fqulen		2373230	1					
ANR	2373245	AssignmentExpression	fqulen = 0		2373230	2		=			
ANR	2373246	Identifier	fqulen		2373230	0					
ANR	2373247	PrimaryExpression	0		2373230	1					
ANR	2373248	IdentifierDeclStatement	size_t verstring_len = 0 ;	1718:1:46461:46485	2373230	3	True				
ANR	2373249	IdentifierDecl	verstring_len = 0		2373230	0					
ANR	2373250	IdentifierDeclType	size_t		2373230	0					
ANR	2373251	Identifier	verstring_len		2373230	1					
ANR	2373252	AssignmentExpression	verstring_len = 0		2373230	2		=			
ANR	2373253	Identifier	verstring_len		2373230	0					
ANR	2373254	PrimaryExpression	0		2373230	1					
ANR	2373255	IdentifierDeclStatement	int pos ;	1719:1:46488:46495	2373230	4	True				
ANR	2373256	IdentifierDecl	pos		2373230	0					
ANR	2373257	IdentifierDeclType	int		2373230	0					
ANR	2373258	Identifier	pos		2373230	1					
ANR	2373259	IdentifierDeclStatement	int tried_authentication = 0 ;	1720:1:46498:46526	2373230	5	True				
ANR	2373260	IdentifierDecl	tried_authentication = 0		2373230	0					
ANR	2373261	IdentifierDeclType	int		2373230	0					
ANR	2373262	Identifier	tried_authentication		2373230	1					
ANR	2373263	AssignmentExpression	tried_authentication = 0		2373230	2		=			
ANR	2373264	Identifier	tried_authentication		2373230	0					
ANR	2373265	PrimaryExpression	0		2373230	1					
ANR	2373266	ExpressionStatement	ASSERT ( buf )	1722:1:46530:46541	2373230	6	True				
ANR	2373267	CallExpression	ASSERT ( buf )		2373230	0					
ANR	2373268	Callee	ASSERT		2373230	0					
ANR	2373269	Identifier	ASSERT		2373230	0					
ANR	2373270	ArgumentList	buf		2373230	1					
ANR	2373271	Argument	buf		2373230	0					
ANR	2373272	Identifier	buf		2373230	0					
ANR	2373273	ExpressionStatement	"i = sscanf ( buf , ""%u*%d*%d*%d*%lu*%lu*%n"" , & passed_sock , ( int * ) & _state , & _timeout , & tried_authentication , ( unsigned long * ) & fqulen , ( unsigned long * ) & verstring_len , & pos )"	1725:1:46608:46769	2373230	7	True				
ANR	2373274	AssignmentExpression	"i = sscanf ( buf , ""%u*%d*%d*%d*%lu*%lu*%n"" , & passed_sock , ( int * ) & _state , & _timeout , & tried_authentication , ( unsigned long * ) & fqulen , ( unsigned long * ) & verstring_len , & pos )"		2373230	0		=			
ANR	2373275	Identifier	i		2373230	0					
ANR	2373276	CallExpression	"sscanf ( buf , ""%u*%d*%d*%d*%lu*%lu*%n"" , & passed_sock , ( int * ) & _state , & _timeout , & tried_authentication , ( unsigned long * ) & fqulen , ( unsigned long * ) & verstring_len , & pos )"		2373230	1					
ANR	2373277	Callee	sscanf		2373230	0					
ANR	2373278	Identifier	sscanf		2373230	0					
ANR	2373279	ArgumentList	buf		2373230	1					
ANR	2373280	Argument	buf		2373230	0					
ANR	2373281	Identifier	buf		2373230	0					
ANR	2373282	Argument	"""%u*%d*%d*%d*%lu*%lu*%n"""		2373230	1					
ANR	2373283	PrimaryExpression	"""%u*%d*%d*%d*%lu*%lu*%n"""		2373230	0					
ANR	2373284	Argument	& passed_sock		2373230	2					
ANR	2373285	UnaryOperationExpression	& passed_sock		2373230	0					
ANR	2373286	UnaryOperator	&		2373230	0					
ANR	2373287	Identifier	passed_sock		2373230	1					
ANR	2373288	Argument	( int * ) & _state		2373230	3					
ANR	2373289	CastExpression	( int * ) & _state		2373230	0					
ANR	2373290	CastTarget	int *		2373230	0					
ANR	2373291	UnaryOperationExpression	& _state		2373230	1					
ANR	2373292	UnaryOperator	&		2373230	0					
ANR	2373293	Identifier	_state		2373230	1					
ANR	2373294	Argument	& _timeout		2373230	4					
ANR	2373295	UnaryOperationExpression	& _timeout		2373230	0					
ANR	2373296	UnaryOperator	&		2373230	0					
ANR	2373297	Identifier	_timeout		2373230	1					
ANR	2373298	Argument	& tried_authentication		2373230	5					
ANR	2373299	UnaryOperationExpression	& tried_authentication		2373230	0					
ANR	2373300	UnaryOperator	&		2373230	0					
ANR	2373301	Identifier	tried_authentication		2373230	1					
ANR	2373302	Argument	( unsigned long * ) & fqulen		2373230	6					
ANR	2373303	CastExpression	( unsigned long * ) & fqulen		2373230	0					
ANR	2373304	CastTarget	unsigned long *		2373230	0					
ANR	2373305	UnaryOperationExpression	& fqulen		2373230	1					
ANR	2373306	UnaryOperator	&		2373230	0					
ANR	2373307	Identifier	fqulen		2373230	1					
ANR	2373308	Argument	( unsigned long * ) & verstring_len		2373230	7					
ANR	2373309	CastExpression	( unsigned long * ) & verstring_len		2373230	0					
ANR	2373310	CastTarget	unsigned long *		2373230	0					
ANR	2373311	UnaryOperationExpression	& verstring_len		2373230	1					
ANR	2373312	UnaryOperator	&		2373230	0					
ANR	2373313	Identifier	verstring_len		2373230	1					
ANR	2373314	Argument	& pos		2373230	8					
ANR	2373315	UnaryOperationExpression	& pos		2373230	0					
ANR	2373316	UnaryOperator	&		2373230	0					
ANR	2373317	Identifier	pos		2373230	1					
ANR	2373318	IfStatement	if ( i != 6 )		2373230	8					
ANR	2373319	Condition	i != 6	1726:5:46776:46779	2373230	0	True				
ANR	2373320	EqualityExpression	i != 6		2373230	0		!=			
ANR	2373321	Identifier	i		2373230	0					
ANR	2373322	PrimaryExpression	6		2373230	1					
ANR	2373323	CompoundStatement		13:11:372:372	2373230	1					
ANR	2373324	ExpressionStatement	"EXCEPT ( ""Failed to parse serialized socket information (%d,%d): '%s'\\n"" , i , pos , buf )"	1727:2:46786:46867	2373230	0	True				
ANR	2373325	CallExpression	"EXCEPT ( ""Failed to parse serialized socket information (%d,%d): '%s'\\n"" , i , pos , buf )"		2373230	0					
ANR	2373326	Callee	EXCEPT		2373230	0					
ANR	2373327	Identifier	EXCEPT		2373230	0					
ANR	2373328	ArgumentList	"""Failed to parse serialized socket information (%d,%d): '%s'\\n"""		2373230	1					
ANR	2373329	Argument	"""Failed to parse serialized socket information (%d,%d): '%s'\\n"""		2373230	0					
ANR	2373330	PrimaryExpression	"""Failed to parse serialized socket information (%d,%d): '%s'\\n"""		2373230	0					
ANR	2373331	Argument	i		2373230	1					
ANR	2373332	Identifier	i		2373230	0					
ANR	2373333	Argument	pos		2373230	2					
ANR	2373334	Identifier	pos		2373230	0					
ANR	2373335	Argument	buf		2373230	3					
ANR	2373336	Identifier	buf		2373230	0					
ANR	2373337	ExpressionStatement	buf += pos	1729:1:46873:46883	2373230	9	True				
ANR	2373338	AssignmentExpression	buf += pos		2373230	0		+=			
ANR	2373339	Identifier	buf		2373230	0					
ANR	2373340	Identifier	pos		2373230	1					
ANR	2373341	ExpressionStatement	setTriedAuthentication ( tried_authentication )	1731:1:46887:46931	2373230	10	True				
ANR	2373342	CallExpression	setTriedAuthentication ( tried_authentication )		2373230	0					
ANR	2373343	Callee	setTriedAuthentication		2373230	0					
ANR	2373344	Identifier	setTriedAuthentication		2373230	0					
ANR	2373345	ArgumentList	tried_authentication		2373230	1					
ANR	2373346	Argument	tried_authentication		2373230	0					
ANR	2373347	Identifier	tried_authentication		2373230	0					
ANR	2373348	IdentifierDeclStatement	char * fqubuf = ( char * ) malloc ( fqulen + 1 ) ;	1733:1:46935:46974	2373230	11	True				
ANR	2373349	IdentifierDecl	* fqubuf = ( char * ) malloc ( fqulen + 1 )		2373230	0					
ANR	2373350	IdentifierDeclType	char *		2373230	0					
ANR	2373351	Identifier	fqubuf		2373230	1					
ANR	2373352	AssignmentExpression	* fqubuf = ( char * ) malloc ( fqulen + 1 )		2373230	2		=			
ANR	2373353	Identifier	fqubuf		2373230	0					
ANR	2373354	CastExpression	( char * ) malloc ( fqulen + 1 )		2373230	1					
ANR	2373355	CastTarget	char *		2373230	0					
ANR	2373356	CallExpression	malloc ( fqulen + 1 )		2373230	1					
ANR	2373357	Callee	malloc		2373230	0					
ANR	2373358	Identifier	malloc		2373230	0					
ANR	2373359	ArgumentList	fqulen + 1		2373230	1					
ANR	2373360	Argument	fqulen + 1		2373230	0					
ANR	2373361	AdditiveExpression	fqulen + 1		2373230	0		+			
ANR	2373362	Identifier	fqulen		2373230	0					
ANR	2373363	PrimaryExpression	1		2373230	1					
ANR	2373364	ExpressionStatement	ASSERT ( fqubuf )	1734:1:46977:46991	2373230	12	True				
ANR	2373365	CallExpression	ASSERT ( fqubuf )		2373230	0					
ANR	2373366	Callee	ASSERT		2373230	0					
ANR	2373367	Identifier	ASSERT		2373230	0					
ANR	2373368	ArgumentList	fqubuf		2373230	1					
ANR	2373369	Argument	fqubuf		2373230	0					
ANR	2373370	Identifier	fqubuf		2373230	0					
ANR	2373371	ExpressionStatement	"memset ( fqubuf , 0 , fqulen + 1 )"	1735:1:46994:47019	2373230	13	True				
ANR	2373372	CallExpression	"memset ( fqubuf , 0 , fqulen + 1 )"		2373230	0					
ANR	2373373	Callee	memset		2373230	0					
ANR	2373374	Identifier	memset		2373230	0					
ANR	2373375	ArgumentList	fqubuf		2373230	1					
ANR	2373376	Argument	fqubuf		2373230	0					
ANR	2373377	Identifier	fqubuf		2373230	0					
ANR	2373378	Argument	0		2373230	1					
ANR	2373379	PrimaryExpression	0		2373230	0					
ANR	2373380	Argument	fqulen + 1		2373230	2					
ANR	2373381	AdditiveExpression	fqulen + 1		2373230	0		+			
ANR	2373382	Identifier	fqulen		2373230	0					
ANR	2373383	PrimaryExpression	1		2373230	1					
ANR	2373384	ExpressionStatement	"strncpy ( fqubuf , buf , fqulen )"	1736:1:47022:47048	2373230	14	True				
ANR	2373385	CallExpression	"strncpy ( fqubuf , buf , fqulen )"		2373230	0					
ANR	2373386	Callee	strncpy		2373230	0					
ANR	2373387	Identifier	strncpy		2373230	0					
ANR	2373388	ArgumentList	fqubuf		2373230	1					
ANR	2373389	Argument	fqubuf		2373230	0					
ANR	2373390	Identifier	fqubuf		2373230	0					
ANR	2373391	Argument	buf		2373230	1					
ANR	2373392	Identifier	buf		2373230	0					
ANR	2373393	Argument	fqulen		2373230	2					
ANR	2373394	Identifier	fqulen		2373230	0					
ANR	2373395	ExpressionStatement	setFullyQualifiedUser ( fqubuf )	1737:1:47051:47080	2373230	15	True				
ANR	2373396	CallExpression	setFullyQualifiedUser ( fqubuf )		2373230	0					
ANR	2373397	Callee	setFullyQualifiedUser		2373230	0					
ANR	2373398	Identifier	setFullyQualifiedUser		2373230	0					
ANR	2373399	ArgumentList	fqubuf		2373230	1					
ANR	2373400	Argument	fqubuf		2373230	0					
ANR	2373401	Identifier	fqubuf		2373230	0					
ANR	2373402	ExpressionStatement	free ( fqubuf )	1738:1:47083:47095	2373230	16	True				
ANR	2373403	CallExpression	free ( fqubuf )		2373230	0					
ANR	2373404	Callee	free		2373230	0					
ANR	2373405	Identifier	free		2373230	0					
ANR	2373406	ArgumentList	fqubuf		2373230	1					
ANR	2373407	Argument	fqubuf		2373230	0					
ANR	2373408	Identifier	fqubuf		2373230	0					
ANR	2373409	ExpressionStatement	buf += fqulen	1739:1:47098:47111	2373230	17	True				
ANR	2373410	AssignmentExpression	buf += fqulen		2373230	0		+=			
ANR	2373411	Identifier	buf		2373230	0					
ANR	2373412	Identifier	fqulen		2373230	1					
ANR	2373413	IfStatement	if ( * buf != '*' )		2373230	18					
ANR	2373414	Condition	* buf != '*'	1740:5:47118:47128	2373230	0	True				
ANR	2373415	EqualityExpression	* buf != '*'		2373230	0		!=			
ANR	2373416	UnaryOperationExpression	* buf		2373230	0					
ANR	2373417	UnaryOperator	*		2373230	0					
ANR	2373418	Identifier	buf		2373230	1					
ANR	2373419	PrimaryExpression	'*'		2373230	1					
ANR	2373420	CompoundStatement		27:19:722:722	2373230	1					
ANR	2373421	ExpressionStatement	"EXCEPT ( ""Failed to parse serialized socket fqu (%lu): '%s'\\n"" , ( unsigned long ) fqulen , buf )"	1741:2:47136:47223	2373230	0	True				
ANR	2373422	CallExpression	"EXCEPT ( ""Failed to parse serialized socket fqu (%lu): '%s'\\n"" , ( unsigned long ) fqulen , buf )"		2373230	0					
ANR	2373423	Callee	EXCEPT		2373230	0					
ANR	2373424	Identifier	EXCEPT		2373230	0					
ANR	2373425	ArgumentList	"""Failed to parse serialized socket fqu (%lu): '%s'\\n"""		2373230	1					
ANR	2373426	Argument	"""Failed to parse serialized socket fqu (%lu): '%s'\\n"""		2373230	0					
ANR	2373427	PrimaryExpression	"""Failed to parse serialized socket fqu (%lu): '%s'\\n"""		2373230	0					
ANR	2373428	Argument	( unsigned long ) fqulen		2373230	1					
ANR	2373429	CastExpression	( unsigned long ) fqulen		2373230	0					
ANR	2373430	CastTarget	unsigned long		2373230	0					
ANR	2373431	Identifier	fqulen		2373230	1					
ANR	2373432	Argument	buf		2373230	2					
ANR	2373433	Identifier	buf		2373230	0					
ANR	2373434	ExpressionStatement	buf ++	1743:1:47229:47234	2373230	19	True				
ANR	2373435	PostIncDecOperationExpression	buf ++		2373230	0					
ANR	2373436	Identifier	buf		2373230	0					
ANR	2373437	IncDec	++		2373230	1					
ANR	2373438	IdentifierDeclStatement	char * verstring = ( char * ) malloc ( verstring_len + 1 ) ;	1745:1:47238:47287	2373230	20	True				
ANR	2373439	IdentifierDecl	* verstring = ( char * ) malloc ( verstring_len + 1 )		2373230	0					
ANR	2373440	IdentifierDeclType	char *		2373230	0					
ANR	2373441	Identifier	verstring		2373230	1					
ANR	2373442	AssignmentExpression	* verstring = ( char * ) malloc ( verstring_len + 1 )		2373230	2		=			
ANR	2373443	Identifier	verstring		2373230	0					
ANR	2373444	CastExpression	( char * ) malloc ( verstring_len + 1 )		2373230	1					
ANR	2373445	CastTarget	char *		2373230	0					
ANR	2373446	CallExpression	malloc ( verstring_len + 1 )		2373230	1					
ANR	2373447	Callee	malloc		2373230	0					
ANR	2373448	Identifier	malloc		2373230	0					
ANR	2373449	ArgumentList	verstring_len + 1		2373230	1					
ANR	2373450	Argument	verstring_len + 1		2373230	0					
ANR	2373451	AdditiveExpression	verstring_len + 1		2373230	0		+			
ANR	2373452	Identifier	verstring_len		2373230	0					
ANR	2373453	PrimaryExpression	1		2373230	1					
ANR	2373454	ExpressionStatement	ASSERT ( verstring )	1746:1:47290:47307	2373230	21	True				
ANR	2373455	CallExpression	ASSERT ( verstring )		2373230	0					
ANR	2373456	Callee	ASSERT		2373230	0					
ANR	2373457	Identifier	ASSERT		2373230	0					
ANR	2373458	ArgumentList	verstring		2373230	1					
ANR	2373459	Argument	verstring		2373230	0					
ANR	2373460	Identifier	verstring		2373230	0					
ANR	2373461	ExpressionStatement	"memset ( verstring , 0 , verstring_len + 1 )"	1747:1:47310:47345	2373230	22	True				
ANR	2373462	CallExpression	"memset ( verstring , 0 , verstring_len + 1 )"		2373230	0					
ANR	2373463	Callee	memset		2373230	0					
ANR	2373464	Identifier	memset		2373230	0					
ANR	2373465	ArgumentList	verstring		2373230	1					
ANR	2373466	Argument	verstring		2373230	0					
ANR	2373467	Identifier	verstring		2373230	0					
ANR	2373468	Argument	0		2373230	1					
ANR	2373469	PrimaryExpression	0		2373230	0					
ANR	2373470	Argument	verstring_len + 1		2373230	2					
ANR	2373471	AdditiveExpression	verstring_len + 1		2373230	0		+			
ANR	2373472	Identifier	verstring_len		2373230	0					
ANR	2373473	PrimaryExpression	1		2373230	1					
ANR	2373474	ExpressionStatement	"strncpy ( verstring , buf , verstring_len )"	1748:1:47348:47384	2373230	23	True				
ANR	2373475	CallExpression	"strncpy ( verstring , buf , verstring_len )"		2373230	0					
ANR	2373476	Callee	strncpy		2373230	0					
ANR	2373477	Identifier	strncpy		2373230	0					
ANR	2373478	ArgumentList	verstring		2373230	1					
ANR	2373479	Argument	verstring		2373230	0					
ANR	2373480	Identifier	verstring		2373230	0					
ANR	2373481	Argument	buf		2373230	1					
ANR	2373482	Identifier	buf		2373230	0					
ANR	2373483	Argument	verstring_len		2373230	2					
ANR	2373484	Identifier	verstring_len		2373230	0					
ANR	2373485	IfStatement	if ( verstring_len )		2373230	24					
ANR	2373486	Condition	verstring_len	1749:5:47391:47403	2373230	0	True				
ANR	2373487	Identifier	verstring_len		2373230	0					
ANR	2373488	CompoundStatement		42:2:1131:1172	2373230	1					
ANR	2373489	IdentifierDeclStatement	char * s ;	1751:2:47474:47481	2373230	0	True				
ANR	2373490	IdentifierDecl	* s		2373230	0					
ANR	2373491	IdentifierDeclType	char *		2373230	0					
ANR	2373492	Identifier	s		2373230	1					
ANR	2373493	WhileStatement	"while ( ( s = strchr ( verstring , '_' ) ) )"		2373230	1					
ANR	2373494	Condition	"s = strchr ( verstring , '_' )"	1752:9:47492:47516	2373230	0	True				
ANR	2373495	AssignmentExpression	"s = strchr ( verstring , '_' )"		2373230	0		=			
ANR	2373496	Identifier	s		2373230	0					
ANR	2373497	CallExpression	"strchr ( verstring , '_' )"		2373230	1					
ANR	2373498	Callee	strchr		2373230	0					
ANR	2373499	Identifier	strchr		2373230	0					
ANR	2373500	ArgumentList	verstring		2373230	1					
ANR	2373501	Argument	verstring		2373230	0					
ANR	2373502	Identifier	verstring		2373230	0					
ANR	2373503	Argument	'_'		2373230	1					
ANR	2373504	PrimaryExpression	'_'		2373230	0					
ANR	2373505	CompoundStatement		39:37:1110:1110	2373230	1					
ANR	2373506	ExpressionStatement	* s = ' '	1753:3:47525:47533	2373230	0	True				
ANR	2373507	AssignmentExpression	* s = ' '		2373230	0		=			
ANR	2373508	UnaryOperationExpression	* s		2373230	0					
ANR	2373509	UnaryOperator	*		2373230	0					
ANR	2373510	Identifier	s		2373230	1					
ANR	2373511	PrimaryExpression	' '		2373230	1					
ANR	2373512	IdentifierDeclStatement	CondorVersionInfo peer_version ( verstring ) ;	1755:2:47541:47582	2373230	2	True				
ANR	2373513	IdentifierDecl	peer_version ( verstring )		2373230	0					
ANR	2373514	IdentifierDeclType	CondorVersionInfo		2373230	0					
ANR	2373515	Identifier	peer_version		2373230	1					
ANR	2373516	Identifier	verstring		2373230	2					
ANR	2373517	ExpressionStatement	set_peer_version ( & peer_version )	1756:2:47586:47619	2373230	3	True				
ANR	2373518	CallExpression	set_peer_version ( & peer_version )		2373230	0					
ANR	2373519	Callee	set_peer_version		2373230	0					
ANR	2373520	Identifier	set_peer_version		2373230	0					
ANR	2373521	ArgumentList	& peer_version		2373230	1					
ANR	2373522	Argument	& peer_version		2373230	0					
ANR	2373523	UnaryOperationExpression	& peer_version		2373230	0					
ANR	2373524	UnaryOperator	&		2373230	0					
ANR	2373525	Identifier	peer_version		2373230	1					
ANR	2373526	ExpressionStatement	free ( verstring )	1758:1:47625:47642	2373230	25	True				
ANR	2373527	CallExpression	free ( verstring )		2373230	0					
ANR	2373528	Callee	free		2373230	0					
ANR	2373529	Identifier	free		2373230	0					
ANR	2373530	ArgumentList	verstring		2373230	1					
ANR	2373531	Argument	verstring		2373230	0					
ANR	2373532	Identifier	verstring		2373230	0					
ANR	2373533	ExpressionStatement	buf += verstring_len	1759:1:47645:47665	2373230	26	True				
ANR	2373534	AssignmentExpression	buf += verstring_len		2373230	0		+=			
ANR	2373535	Identifier	buf		2373230	0					
ANR	2373536	Identifier	verstring_len		2373230	1					
ANR	2373537	IfStatement	if ( * buf != '*' )		2373230	27					
ANR	2373538	Condition	* buf != '*'	1760:5:47672:47682	2373230	0	True				
ANR	2373539	EqualityExpression	* buf != '*'		2373230	0		!=			
ANR	2373540	UnaryOperationExpression	* buf		2373230	0					
ANR	2373541	UnaryOperator	*		2373230	0					
ANR	2373542	Identifier	buf		2373230	1					
ANR	2373543	PrimaryExpression	'*'		2373230	1					
ANR	2373544	CompoundStatement		47:19:1276:1276	2373230	1					
ANR	2373545	ExpressionStatement	"EXCEPT ( ""Failed to parse serialized peer version string (%lu): '%s'\\n"" , ( unsigned long ) verstring_len , buf )"	1761:2:47690:47793	2373230	0	True				
ANR	2373546	CallExpression	"EXCEPT ( ""Failed to parse serialized peer version string (%lu): '%s'\\n"" , ( unsigned long ) verstring_len , buf )"		2373230	0					
ANR	2373547	Callee	EXCEPT		2373230	0					
ANR	2373548	Identifier	EXCEPT		2373230	0					
ANR	2373549	ArgumentList	"""Failed to parse serialized peer version string (%lu): '%s'\\n"""		2373230	1					
ANR	2373550	Argument	"""Failed to parse serialized peer version string (%lu): '%s'\\n"""		2373230	0					
ANR	2373551	PrimaryExpression	"""Failed to parse serialized peer version string (%lu): '%s'\\n"""		2373230	0					
ANR	2373552	Argument	( unsigned long ) verstring_len		2373230	1					
ANR	2373553	CastExpression	( unsigned long ) verstring_len		2373230	0					
ANR	2373554	CastTarget	unsigned long		2373230	0					
ANR	2373555	Identifier	verstring_len		2373230	1					
ANR	2373556	Argument	buf		2373230	2					
ANR	2373557	Identifier	buf		2373230	0					
ANR	2373558	ExpressionStatement	buf ++	1763:1:47799:47804	2373230	28	True				
ANR	2373559	PostIncDecOperationExpression	buf ++		2373230	0					
ANR	2373560	Identifier	buf		2373230	0					
ANR	2373561	IncDec	++		2373230	1					
ANR	2373562	IfStatement	if ( _sock == INVALID_SOCKET )		2373230	29					
ANR	2373563	Condition	_sock == INVALID_SOCKET	1773:6:48261:48283	2373230	0	True				
ANR	2373564	EqualityExpression	_sock == INVALID_SOCKET		2373230	0		==			
ANR	2373565	Identifier	_sock		2373230	0					
ANR	2373566	Identifier	INVALID_SOCKET		2373230	1					
ANR	2373567	CompoundStatement		60:32:1877:1877	2373230	1					
ANR	2373568	IfStatement	if ( passed_sock < Selector :: fd_select_size ( ) )		2373230	0					
ANR	2373569	Condition	passed_sock < Selector :: fd_select_size ( )	1775:7:48316:48355	2373230	0	True				
ANR	2373570	RelationalExpression	passed_sock < Selector :: fd_select_size ( )		2373230	0		<			
ANR	2373571	Identifier	passed_sock		2373230	0					
ANR	2373572	CallExpression	Selector :: fd_select_size ( )		2373230	1					
ANR	2373573	Callee	Selector :: fd_select_size		2373230	0					
ANR	2373574	Identifier	Selector :: fd_select_size		2373230	0					
ANR	2373575	ArgumentList			2373230	1					
ANR	2373576	CompoundStatement		62:50:1949:1949	2373230	1					
ANR	2373577	ExpressionStatement	_sock = passed_sock	1776:3:48364:48383	2373230	0	True				
ANR	2373578	AssignmentExpression	_sock = passed_sock		2373230	0		=			
ANR	2373579	Identifier	_sock		2373230	0					
ANR	2373580	Identifier	passed_sock		2373230	1					
ANR	2373581	ElseStatement	else		2373230	0					
ANR	2373582	CompoundStatement		64:9:1984:1984	2373230	0					
ANR	2373583	ExpressionStatement	_sock = dup ( passed_sock )	1778:3:48399:48425	2373230	0	True				
ANR	2373584	AssignmentExpression	_sock = dup ( passed_sock )		2373230	0		=			
ANR	2373585	Identifier	_sock		2373230	0					
ANR	2373586	CallExpression	dup ( passed_sock )		2373230	1					
ANR	2373587	Callee	dup		2373230	0					
ANR	2373588	Identifier	dup		2373230	0					
ANR	2373589	ArgumentList	passed_sock		2373230	1					
ANR	2373590	Argument	passed_sock		2373230	0					
ANR	2373591	Identifier	passed_sock		2373230	0					
ANR	2373592	IfStatement	if ( _sock < 0 )		2373230	1					
ANR	2373593	Condition	_sock < 0	1779:8:48435:48443	2373230	0	True				
ANR	2373594	RelationalExpression	_sock < 0		2373230	0		<			
ANR	2373595	Identifier	_sock		2373230	0					
ANR	2373596	PrimaryExpression	0		2373230	1					
ANR	2373597	CompoundStatement		66:20:2037:2037	2373230	1					
ANR	2373598	Statement	EXCEPT	1780:4:48453:48458	2373230	0	True				
ANR	2373599	Statement	(	1780:10:48459:48459	2373230	1	True				
ANR	2373600	Statement	"""Sock::serialize(): Dup'ing of high fd %d failed, """	1780:12:48461:48511	2373230	2	True				
ANR	2373601	Statement	"""errno=%d (%s)"""	1781:6:48519:48533	2373230	3	True				
ANR	2373602	Statement	","	1781:21:48534:48534	2373230	4	True				
ANR	2373603	Statement	passed_sock	1781:23:48536:48546	2373230	5	True				
ANR	2373604	Statement	","	1781:34:48547:48547	2373230	6	True				
ANR	2373605	Statement	errno	1781:36:48549:48553	2373230	7	True				
ANR	2373606	Statement	","	1781:41:48554:48554	2373230	8	True				
ANR	2373607	Statement	strerror	1782:6:48562:48569	2373230	9	True				
ANR	2373608	Statement	(	1782:14:48570:48570	2373230	10	True				
ANR	2373609	Statement	errno	1782:16:48572:48576	2373230	11	True				
ANR	2373610	Statement	)	1782:22:48578:48578	2373230	12	True				
ANR	2373611	Statement	)	1782:24:48580:48580	2373230	13	True				
ANR	2373612	ExpressionStatement		1782:25:48581:48581	2373230	14	True				
ANR	2373613	ElseStatement	else		2373230	0					
ANR	2373614	IfStatement	if ( _sock >= Selector :: fd_select_size ( ) )		2373230	0					
ANR	2373615	Condition	_sock >= Selector :: fd_select_size ( )	1783:15:48598:48632	2373230	0	True				
ANR	2373616	RelationalExpression	_sock >= Selector :: fd_select_size ( )		2373230	0		>=			
ANR	2373617	Identifier	_sock		2373230	0					
ANR	2373618	CallExpression	Selector :: fd_select_size ( )		2373230	1					
ANR	2373619	Callee	Selector :: fd_select_size		2373230	0					
ANR	2373620	Identifier	Selector :: fd_select_size		2373230	0					
ANR	2373621	ArgumentList			2373230	1					
ANR	2373622	CompoundStatement		70:53:2226:2226	2373230	1					
ANR	2373623	Statement	EXCEPT	1784:4:48642:48647	2373230	0	True				
ANR	2373624	Statement	(	1784:10:48648:48648	2373230	1	True				
ANR	2373625	Statement	"""Sock::serialize(): Dup'ing of high fd %d resulted """	1784:12:48650:48701	2373230	2	True				
ANR	2373626	Statement	"""in new high fd %d"""	1785:6:48709:48727	2373230	3	True				
ANR	2373627	Statement	","	1785:25:48728:48728	2373230	4	True				
ANR	2373628	Statement	passed_sock	1785:27:48730:48740	2373230	5	True				
ANR	2373629	Statement	","	1785:38:48741:48741	2373230	6	True				
ANR	2373630	Statement	_sock	1785:40:48743:48747	2373230	7	True				
ANR	2373631	Statement	)	1785:46:48749:48749	2373230	8	True				
ANR	2373632	ExpressionStatement		1785:47:48750:48750	2373230	9	True				
ANR	2373633	Statement	::	1787:3:48760:48761	2373230	2	True				
ANR	2373634	ExpressionStatement	close ( passed_sock )	1787:5:48762:48782	2373230	3	True				
ANR	2373635	CallExpression	close ( passed_sock )		2373230	0					
ANR	2373636	Callee	close		2373230	0					
ANR	2373637	Identifier	close		2373230	0					
ANR	2373638	ArgumentList	passed_sock		2373230	1					
ANR	2373639	Argument	passed_sock		2373230	0					
ANR	2373640	Identifier	passed_sock		2373230	0					
ANR	2373641	ExpressionStatement	timeout_no_timeout_multiplier ( _timeout )	1796:1:48939:48978	2373230	30	True				
ANR	2373642	CallExpression	timeout_no_timeout_multiplier ( _timeout )		2373230	0					
ANR	2373643	Callee	timeout_no_timeout_multiplier		2373230	0					
ANR	2373644	Identifier	timeout_no_timeout_multiplier		2373230	0					
ANR	2373645	ArgumentList	_timeout		2373230	1					
ANR	2373646	Argument	_timeout		2373230	0					
ANR	2373647	Identifier	_timeout		2373230	0					
ANR	2373648	ReturnStatement	return buf ;	1798:1:48982:48992	2373230	31	True				
ANR	2373649	Identifier	buf		2373230	0					
ANR	2373650	ReturnType	char *		2373230	1					
ANR	2373651	Identifier	Sock :: serialize		2373230	2					
ANR	2373652	ParameterList	char * buf		2373230	3					
ANR	2373653	Parameter	char * buf	1713:23:46398:46406	2373230	0	True				
ANR	2373654	ParameterType	char *		2373230	0					
ANR	2373655	Identifier	buf		2373230	1					
ANR	2373656	CFGEntryNode	ENTRY		2373230		True				
ANR	2373657	CFGExitNode	EXIT		2373230		True				
ANR	2373658	Symbol	passed_sock		2373230						
ANR	2373659	Symbol	& peer_version		2373230						
ANR	2373660	Symbol	verstring		2373230						
ANR	2373661	Symbol	strchr		2373230						
ANR	2373662	Symbol	INVALID_SOCKET		2373230						
ANR	2373663	Symbol	& verstring_len		2373230						
ANR	2373664	Symbol	tried_authentication		2373230						
ANR	2373665	Symbol	& tried_authentication		2373230						
ANR	2373666	Symbol	peer_version		2373230						
ANR	2373667	Symbol	_sock		2373230						
ANR	2373668	Symbol	fqubuf		2373230						
ANR	2373669	Symbol	pos		2373230						
ANR	2373670	Symbol	& _state		2373230						
ANR	2373671	Symbol	_timeout		2373230						
ANR	2373672	Symbol	verstring_len		2373230						
ANR	2373673	Symbol	& passed_sock		2373230						
ANR	2373674	Symbol	malloc		2373230						
ANR	2373675	Symbol	* buf		2373230						
ANR	2373676	Symbol	i		2373230						
ANR	2373677	Symbol	& _timeout		2373230						
ANR	2373678	Symbol	Selector :: fd_select_size		2373230						
ANR	2373679	Symbol	buf		2373230						
ANR	2373680	Symbol	s		2373230						
ANR	2373681	Symbol	& fqulen		2373230						
ANR	2373682	Symbol	fqulen		2373230						
ANR	2373683	Symbol	sscanf		2373230						
ANR	2373684	Symbol	& pos		2373230						
ANR	2373685	Symbol	* s		2373230						
ANR	2373686	Symbol	dup		2373230						
ANR	2373687	Function	Sock :: addr_changed	1801:0:48997:49313							
ANR	2373688	FunctionDef	Sock :: addr_changed ()		2373687	0					
ANR	2373689	CompoundStatement		1803:0:49023:49313	2373687	0					
ANR	2373690	ExpressionStatement	_my_ip_buf [ 0 ] = '\\0'	1806:4:49165:49185	2373687	0	True				
ANR	2373691	AssignmentExpression	_my_ip_buf [ 0 ] = '\\0'		2373687	0		=			
ANR	2373692	ArrayIndexing	_my_ip_buf [ 0 ]		2373687	0					
ANR	2373693	Identifier	_my_ip_buf		2373687	0					
ANR	2373694	PrimaryExpression	0		2373687	1					
ANR	2373695	PrimaryExpression	'\\0'		2373687	1					
ANR	2373696	ExpressionStatement	_peer_ip_buf [ 0 ] = '\\0'	1807:4:49191:49213	2373687	1	True				
ANR	2373697	AssignmentExpression	_peer_ip_buf [ 0 ] = '\\0'		2373687	0		=			
ANR	2373698	ArrayIndexing	_peer_ip_buf [ 0 ]		2373687	0					
ANR	2373699	Identifier	_peer_ip_buf		2373687	0					
ANR	2373700	PrimaryExpression	0		2373687	1					
ANR	2373701	PrimaryExpression	'\\0'		2373687	1					
ANR	2373702	ExpressionStatement	_sinful_self_buf [ 0 ] = '\\0'	1808:4:49219:49245	2373687	2	True				
ANR	2373703	AssignmentExpression	_sinful_self_buf [ 0 ] = '\\0'		2373687	0		=			
ANR	2373704	ArrayIndexing	_sinful_self_buf [ 0 ]		2373687	0					
ANR	2373705	Identifier	_sinful_self_buf		2373687	0					
ANR	2373706	PrimaryExpression	0		2373687	1					
ANR	2373707	PrimaryExpression	'\\0'		2373687	1					
ANR	2373708	ExpressionStatement	_sinful_public_buf [ 0 ] = '\\0'	1809:4:49251:49279	2373687	3	True				
ANR	2373709	AssignmentExpression	_sinful_public_buf [ 0 ] = '\\0'		2373687	0		=			
ANR	2373710	ArrayIndexing	_sinful_public_buf [ 0 ]		2373687	0					
ANR	2373711	Identifier	_sinful_public_buf		2373687	0					
ANR	2373712	PrimaryExpression	0		2373687	1					
ANR	2373713	PrimaryExpression	'\\0'		2373687	1					
ANR	2373714	ExpressionStatement	_sinful_peer_buf [ 0 ] = '\\0'	1810:4:49285:49311	2373687	4	True				
ANR	2373715	AssignmentExpression	_sinful_peer_buf [ 0 ] = '\\0'		2373687	0		=			
ANR	2373716	ArrayIndexing	_sinful_peer_buf [ 0 ]		2373687	0					
ANR	2373717	Identifier	_sinful_peer_buf		2373687	0					
ANR	2373718	PrimaryExpression	0		2373687	1					
ANR	2373719	PrimaryExpression	'\\0'		2373687	1					
ANR	2373720	ReturnType	void		2373687	1					
ANR	2373721	Identifier	Sock :: addr_changed		2373687	2					
ANR	2373722	ParameterList			2373687	3					
ANR	2373723	CFGEntryNode	ENTRY		2373687		True				
ANR	2373724	CFGExitNode	EXIT		2373687		True				
ANR	2373725	Symbol	* _sinful_self_buf		2373687						
ANR	2373726	Symbol	* _sinful_peer_buf		2373687						
ANR	2373727	Symbol	* _my_ip_buf		2373687						
ANR	2373728	Symbol	_peer_ip_buf		2373687						
ANR	2373729	Symbol	_my_ip_buf		2373687						
ANR	2373730	Symbol	_sinful_peer_buf		2373687						
ANR	2373731	Symbol	_sinful_self_buf		2373687						
ANR	2373732	Symbol	* _peer_ip_buf		2373687						
ANR	2373733	Symbol	_sinful_public_buf		2373687						
ANR	2373734	Symbol	* _sinful_public_buf		2373687						
ANR	2373735	Function	Sock :: peer_addr	1813:0:49316:49366							
ANR	2373736	FunctionDef	Sock :: peer_addr ()		2373735	0					
ANR	2373737	CompoundStatement		1815:0:49350:49366	2373735	0					
ANR	2373738	ReturnStatement	return _who ;	1816:1:49353:49364	2373735	0	True				
ANR	2373739	Identifier	_who		2373735	0					
ANR	2373740	ReturnType	condor_sockaddr		2373735	1					
ANR	2373741	Identifier	Sock :: peer_addr		2373735	2					
ANR	2373742	ParameterList			2373735	3					
ANR	2373743	CFGEntryNode	ENTRY		2373735		True				
ANR	2373744	CFGExitNode	EXIT		2373735		True				
ANR	2373745	Symbol	_who		2373735						
ANR	2373746	Function	Sock :: peer_port	1820:0:49370:49467							
ANR	2373747	FunctionDef	Sock :: peer_port ()		2373746	0					
ANR	2373748	CompoundStatement		1822:0:49392:49467	2373746	0					
ANR	2373749	ReturnStatement	return ( int ) ( _who . get_port ( ) ) ;	1824:1:49436:49465	2373746	0	True				
ANR	2373750	CastExpression	( int ) ( _who . get_port ( ) )		2373746	0					
ANR	2373751	CastTarget	int		2373746	0					
ANR	2373752	CallExpression	_who . get_port ( )		2373746	1					
ANR	2373753	Callee	_who . get_port		2373746	0					
ANR	2373754	MemberAccess	_who . get_port		2373746	0					
ANR	2373755	Identifier	_who		2373746	0					
ANR	2373756	Identifier	get_port		2373746	1					
ANR	2373757	ArgumentList			2373746	1					
ANR	2373758	ReturnType	int		2373746	1					
ANR	2373759	Identifier	Sock :: peer_port		2373746	2					
ANR	2373760	ParameterList			2373746	3					
ANR	2373761	CFGEntryNode	ENTRY		2373746		True				
ANR	2373762	CFGExitNode	EXIT		2373746		True				
ANR	2373763	Symbol	_who . get_port		2373746						
ANR	2373764	Symbol	_who		2373746						
ANR	2373765	Function	Sock :: peer_ip_str	1838:0:49584:49969							
ANR	2373766	FunctionDef	Sock :: peer_ip_str ()		2373765	0					
ANR	2373767	CompoundStatement		1840:0:49617:49969	2373765	0					
ANR	2373768	IfStatement	if ( ! _peer_ip_buf [ 0 ] )		2373765	0					
ANR	2373769	Condition	! _peer_ip_buf [ 0 ]	1841:5:49624:49639	2373765	0	True				
ANR	2373770	UnaryOperationExpression	! _peer_ip_buf [ 0 ]		2373765	0					
ANR	2373771	UnaryOperator	!		2373765	0					
ANR	2373772	ArrayIndexing	_peer_ip_buf [ 0 ]		2373765	1					
ANR	2373773	Identifier	_peer_ip_buf		2373765	0					
ANR	2373774	PrimaryExpression	0		2373765	1					
ANR	2373775	CompoundStatement		3:2:28:66	2373765	1					
ANR	2373776	IdentifierDeclStatement	MyString peer_ip = _who . to_ip_string ( ) ;	1842:2:49646:49684	2373765	0	True				
ANR	2373777	IdentifierDecl	peer_ip = _who . to_ip_string ( )		2373765	0					
ANR	2373778	IdentifierDeclType	MyString		2373765	0					
ANR	2373779	Identifier	peer_ip		2373765	1					
ANR	2373780	AssignmentExpression	peer_ip = _who . to_ip_string ( )		2373765	2		=			
ANR	2373781	Identifier	peer_ip		2373765	0					
ANR	2373782	CallExpression	_who . to_ip_string ( )		2373765	1					
ANR	2373783	Callee	_who . to_ip_string		2373765	0					
ANR	2373784	MemberAccess	_who . to_ip_string		2373765	0					
ANR	2373785	Identifier	_who		2373765	0					
ANR	2373786	Identifier	to_ip_string		2373765	1					
ANR	2373787	ArgumentList			2373765	1					
ANR	2373788	ExpressionStatement	"strcpy ( _peer_ip_buf , peer_ip . Value ( ) )"	1843:2:49688:49725	2373765	1	True				
ANR	2373789	CallExpression	"strcpy ( _peer_ip_buf , peer_ip . Value ( ) )"		2373765	0					
ANR	2373790	Callee	strcpy		2373765	0					
ANR	2373791	Identifier	strcpy		2373765	0					
ANR	2373792	ArgumentList	_peer_ip_buf		2373765	1					
ANR	2373793	Argument	_peer_ip_buf		2373765	0					
ANR	2373794	Identifier	_peer_ip_buf		2373765	0					
ANR	2373795	Argument	peer_ip . Value ( )		2373765	1					
ANR	2373796	CallExpression	peer_ip . Value ( )		2373765	0					
ANR	2373797	Callee	peer_ip . Value		2373765	0					
ANR	2373798	MemberAccess	peer_ip . Value		2373765	0					
ANR	2373799	Identifier	peer_ip		2373765	0					
ANR	2373800	Identifier	Value		2373765	1					
ANR	2373801	ArgumentList			2373765	1					
ANR	2373802	ReturnStatement	return _peer_ip_buf ;	1845:1:49731:49750	2373765	1	True				
ANR	2373803	Identifier	_peer_ip_buf		2373765	0					
ANR	2373804	ReturnType	const char *		2373765	1					
ANR	2373805	Identifier	Sock :: peer_ip_str		2373765	2					
ANR	2373806	ParameterList			2373765	3					
ANR	2373807	CFGEntryNode	ENTRY		2373765		True				
ANR	2373808	CFGExitNode	EXIT		2373765		True				
ANR	2373809	Symbol	_who . to_ip_string		2373765						
ANR	2373810	Symbol	peer_ip . Value		2373765						
ANR	2373811	Symbol	peer_ip		2373765						
ANR	2373812	Symbol	_who		2373765						
ANR	2373813	Symbol	_peer_ip_buf		2373765						
ANR	2373814	Symbol	* _peer_ip_buf		2373765						
ANR	2373815	Function	Sock :: peer_is_local	1859:0:50175:53594							
ANR	2373816	FunctionDef	Sock :: peer_is_local ()		2373815	0					
ANR	2373817	CompoundStatement		1861:0:50203:53594	2373815	0					
ANR	2373818	IfStatement	if ( ! peer_addr ( ) . is_valid ( ) )		2373815	0					
ANR	2373819	Condition	! peer_addr ( ) . is_valid ( )	1866:5:50368:50390	2373815	0	True				
ANR	2373820	UnaryOperationExpression	! peer_addr ( ) . is_valid ( )		2373815	0					
ANR	2373821	UnaryOperator	!		2373815	0					
ANR	2373822	CallExpression	peer_addr ( ) . is_valid ( )		2373815	1					
ANR	2373823	Callee	peer_addr ( ) . is_valid		2373815	0					
ANR	2373824	MemberAccess	peer_addr ( ) . is_valid		2373815	0					
ANR	2373825	CallExpression	peer_addr ( )		2373815	0					
ANR	2373826	Callee	peer_addr		2373815	0					
ANR	2373827	Identifier	peer_addr		2373815	0					
ANR	2373828	ArgumentList			2373815	1					
ANR	2373829	Identifier	is_valid		2373815	1					
ANR	2373830	ArgumentList			2373815	1					
ANR	2373831	ReturnStatement	return false ;	1867:2:50395:50407	2373815	1	True				
ANR	2373832	Identifier	false		2373815	0					
ANR	2373833	IdentifierDeclStatement	bool result ;	1869:1:50411:50422	2373815	1	True				
ANR	2373834	IdentifierDecl	result		2373815	0					
ANR	2373835	IdentifierDeclType	bool		2373815	0					
ANR	2373836	Identifier	result		2373815	1					
ANR	2373837	IdentifierDeclStatement	condor_sockaddr addr = peer_addr ( ) ;	1870:1:50425:50459	2373815	2	True				
ANR	2373838	IdentifierDecl	addr = peer_addr ( )		2373815	0					
ANR	2373839	IdentifierDeclType	condor_sockaddr		2373815	0					
ANR	2373840	Identifier	addr		2373815	1					
ANR	2373841	AssignmentExpression	addr = peer_addr ( )		2373815	2		=			
ANR	2373842	Identifier	addr		2373815	0					
ANR	2373843	CallExpression	peer_addr ( )		2373815	1					
ANR	2373844	Callee	peer_addr		2373815	0					
ANR	2373845	Identifier	peer_addr		2373815	0					
ANR	2373846	ArgumentList			2373815	1					
ANR	2373847	ExpressionStatement	addr . set_port ( 0 )	1872:1:50503:50519	2373815	3	True				
ANR	2373848	CallExpression	addr . set_port ( 0 )		2373815	0					
ANR	2373849	Callee	addr . set_port		2373815	0					
ANR	2373850	MemberAccess	addr . set_port		2373815	0					
ANR	2373851	Identifier	addr		2373815	0					
ANR	2373852	Identifier	set_port		2373815	1					
ANR	2373853	ArgumentList	0		2373815	1					
ANR	2373854	Argument	0		2373815	0					
ANR	2373855	PrimaryExpression	0		2373815	0					
ANR	2373856	Statement	int	1873:1:50522:50524	2373815	4	True				
ANR	2373857	Statement	sock	1873:5:50526:50529	2373815	5	True				
ANR	2373858	Statement	=	1873:10:50531:50531	2373815	6	True				
ANR	2373859	Statement	::	1873:12:50533:50534	2373815	7	True				
ANR	2373860	ExpressionStatement	"socket ( addr . get_aftype ( ) , SOCK_DGRAM , IPPROTO_UDP )"	1873:14:50535:50585	2373815	8	True				
ANR	2373861	CallExpression	"socket ( addr . get_aftype ( ) , SOCK_DGRAM , IPPROTO_UDP )"		2373815	0					
ANR	2373862	Callee	socket		2373815	0					
ANR	2373863	Identifier	socket		2373815	0					
ANR	2373864	ArgumentList	addr . get_aftype ( )		2373815	1					
ANR	2373865	Argument	addr . get_aftype ( )		2373815	0					
ANR	2373866	CallExpression	addr . get_aftype ( )		2373815	0					
ANR	2373867	Callee	addr . get_aftype		2373815	0					
ANR	2373868	MemberAccess	addr . get_aftype		2373815	0					
ANR	2373869	Identifier	addr		2373815	0					
ANR	2373870	Identifier	get_aftype		2373815	1					
ANR	2373871	ArgumentList			2373815	1					
ANR	2373872	Argument	SOCK_DGRAM		2373815	1					
ANR	2373873	Identifier	SOCK_DGRAM		2373815	0					
ANR	2373874	Argument	IPPROTO_UDP		2373815	2					
ANR	2373875	Identifier	IPPROTO_UDP		2373815	0					
ANR	2373876	IfStatement	"if ( condor_bind ( sock , addr ) < 0 )"		2373815	9					
ANR	2373877	Condition	"condor_bind ( sock , addr ) < 0"	1876:5:50694:50720	2373815	0	True				
ANR	2373878	RelationalExpression	"condor_bind ( sock , addr ) < 0"		2373815	0		<			
ANR	2373879	CallExpression	"condor_bind ( sock , addr )"		2373815	0					
ANR	2373880	Callee	condor_bind		2373815	0					
ANR	2373881	Identifier	condor_bind		2373815	0					
ANR	2373882	ArgumentList	sock		2373815	1					
ANR	2373883	Argument	sock		2373815	0					
ANR	2373884	Identifier	sock		2373815	0					
ANR	2373885	Argument	addr		2373815	1					
ANR	2373886	Identifier	addr		2373815	0					
ANR	2373887	PrimaryExpression	0		2373815	1					
ANR	2373888	CompoundStatement		16:34:519:519	2373815	1					
ANR	2373889	ExpressionStatement	result = false	1879:2:50811:50825	2373815	0	True				
ANR	2373890	AssignmentExpression	result = false		2373815	0		=			
ANR	2373891	Identifier	result		2373815	0					
ANR	2373892	Identifier	false		2373815	1					
ANR	2373893	ElseStatement	else		2373815	0					
ANR	2373894	CompoundStatement		20:8:631:631	2373815	0					
ANR	2373895	ExpressionStatement	result = true	1882:2:50895:50908	2373815	0	True				
ANR	2373896	AssignmentExpression	result = true		2373815	0		=			
ANR	2373897	Identifier	result		2373815	0					
ANR	2373898	Identifier	true		2373815	1					
ANR	2373899	Statement	::	1885:1:50971:50972	2373815	10	True				
ANR	2373900	ExpressionStatement	closesocket ( sock )	1885:3:50973:50990	2373815	11	True				
ANR	2373901	CallExpression	closesocket ( sock )		2373815	0					
ANR	2373902	Callee	closesocket		2373815	0					
ANR	2373903	Identifier	closesocket		2373815	0					
ANR	2373904	ArgumentList	sock		2373815	1					
ANR	2373905	Argument	sock		2373815	0					
ANR	2373906	Identifier	sock		2373815	0					
ANR	2373907	ReturnStatement	return result ;	1886:1:50993:51006	2373815	12	True				
ANR	2373908	Identifier	result		2373815	0					
ANR	2373909	ReturnType	bool		2373815	1					
ANR	2373910	Identifier	Sock :: peer_is_local		2373815	2					
ANR	2373911	ParameterList			2373815	3					
ANR	2373912	CFGEntryNode	ENTRY		2373815		True				
ANR	2373913	CFGExitNode	EXIT		2373815		True				
ANR	2373914	Symbol	result		2373815						
ANR	2373915	Symbol	sock		2373815						
ANR	2373916	Symbol	peer_addr ( ) . is_valid		2373815						
ANR	2373917	Symbol	peer_addr		2373815						
ANR	2373918	Symbol	IPPROTO_UDP		2373815						
ANR	2373919	Symbol	false		2373815						
ANR	2373920	Symbol	true		2373815						
ANR	2373921	Symbol	addr . get_aftype		2373815						
ANR	2373922	Symbol	addr		2373815						
ANR	2373923	Symbol	SOCK_DGRAM		2373815						
ANR	2373924	Symbol	condor_bind		2373815						
ANR	2373925	Function	Sock :: my_addr	1967:0:53597:53706							
ANR	2373926	FunctionDef	Sock :: my_addr ()		2373925	0					
ANR	2373927	CompoundStatement		1969:0:53630:53706	2373925	0					
ANR	2373928	IdentifierDeclStatement	condor_sockaddr addr ;	1970:1:53633:53653	2373925	0	True				
ANR	2373929	IdentifierDecl	addr		2373925	0					
ANR	2373930	IdentifierDeclType	condor_sockaddr		2373925	0					
ANR	2373931	Identifier	addr		2373925	1					
ANR	2373932	ExpressionStatement	"condor_getsockname_ex ( _sock , addr )"	1971:1:53656:53690	2373925	1	True				
ANR	2373933	CallExpression	"condor_getsockname_ex ( _sock , addr )"		2373925	0					
ANR	2373934	Callee	condor_getsockname_ex		2373925	0					
ANR	2373935	Identifier	condor_getsockname_ex		2373925	0					
ANR	2373936	ArgumentList	_sock		2373925	1					
ANR	2373937	Argument	_sock		2373925	0					
ANR	2373938	Identifier	_sock		2373925	0					
ANR	2373939	Argument	addr		2373925	1					
ANR	2373940	Identifier	addr		2373925	0					
ANR	2373941	ReturnStatement	return addr ;	1972:1:53693:53704	2373925	2	True				
ANR	2373942	Identifier	addr		2373925	0					
ANR	2373943	ReturnType	condor_sockaddr		2373925	1					
ANR	2373944	Identifier	Sock :: my_addr		2373925	2					
ANR	2373945	ParameterList			2373925	3					
ANR	2373946	CFGEntryNode	ENTRY		2373925		True				
ANR	2373947	CFGExitNode	EXIT		2373925		True				
ANR	2373948	Symbol	_sock		2373925						
ANR	2373949	Symbol	addr		2373925						
ANR	2373950	Function	Sock :: my_ip_str	1975:0:53709:53872							
ANR	2373951	FunctionDef	Sock :: my_ip_str ()		2373950	0					
ANR	2373952	CompoundStatement		1977:0:53740:53872	2373950	0					
ANR	2373953	IfStatement	if ( ! _my_ip_buf [ 0 ] )		2373950	0					
ANR	2373954	Condition	! _my_ip_buf [ 0 ]	1978:5:53747:53760	2373950	0	True				
ANR	2373955	UnaryOperationExpression	! _my_ip_buf [ 0 ]		2373950	0					
ANR	2373956	UnaryOperator	!		2373950	0					
ANR	2373957	ArrayIndexing	_my_ip_buf [ 0 ]		2373950	1					
ANR	2373958	Identifier	_my_ip_buf		2373950	0					
ANR	2373959	PrimaryExpression	0		2373950	1					
ANR	2373960	CompoundStatement		3:2:26:68	2373950	1					
ANR	2373961	IdentifierDeclStatement	MyString ip_str = my_addr ( ) . to_ip_string ( ) ;	1979:2:53767:53809	2373950	0	True				
ANR	2373962	IdentifierDecl	ip_str = my_addr ( ) . to_ip_string ( )		2373950	0					
ANR	2373963	IdentifierDeclType	MyString		2373950	0					
ANR	2373964	Identifier	ip_str		2373950	1					
ANR	2373965	AssignmentExpression	ip_str = my_addr ( ) . to_ip_string ( )		2373950	2		=			
ANR	2373966	Identifier	ip_str		2373950	0					
ANR	2373967	CallExpression	my_addr ( ) . to_ip_string ( )		2373950	1					
ANR	2373968	Callee	my_addr ( ) . to_ip_string		2373950	0					
ANR	2373969	MemberAccess	my_addr ( ) . to_ip_string		2373950	0					
ANR	2373970	CallExpression	my_addr ( )		2373950	0					
ANR	2373971	Callee	my_addr		2373950	0					
ANR	2373972	Identifier	my_addr		2373950	0					
ANR	2373973	ArgumentList			2373950	1					
ANR	2373974	Identifier	to_ip_string		2373950	1					
ANR	2373975	ArgumentList			2373950	1					
ANR	2373976	ExpressionStatement	"strcpy ( _my_ip_buf , ip_str . Value ( ) )"	1980:2:53813:53847	2373950	1	True				
ANR	2373977	CallExpression	"strcpy ( _my_ip_buf , ip_str . Value ( ) )"		2373950	0					
ANR	2373978	Callee	strcpy		2373950	0					
ANR	2373979	Identifier	strcpy		2373950	0					
ANR	2373980	ArgumentList	_my_ip_buf		2373950	1					
ANR	2373981	Argument	_my_ip_buf		2373950	0					
ANR	2373982	Identifier	_my_ip_buf		2373950	0					
ANR	2373983	Argument	ip_str . Value ( )		2373950	1					
ANR	2373984	CallExpression	ip_str . Value ( )		2373950	0					
ANR	2373985	Callee	ip_str . Value		2373950	0					
ANR	2373986	MemberAccess	ip_str . Value		2373950	0					
ANR	2373987	Identifier	ip_str		2373950	0					
ANR	2373988	Identifier	Value		2373950	1					
ANR	2373989	ArgumentList			2373950	1					
ANR	2373990	ReturnStatement	return _my_ip_buf ;	1982:1:53853:53870	2373950	1	True				
ANR	2373991	Identifier	_my_ip_buf		2373950	0					
ANR	2373992	ReturnType	const char *		2373950	1					
ANR	2373993	Identifier	Sock :: my_ip_str		2373950	2					
ANR	2373994	ParameterList			2373950	3					
ANR	2373995	CFGEntryNode	ENTRY		2373950		True				
ANR	2373996	CFGExitNode	EXIT		2373950		True				
ANR	2373997	Symbol	* _my_ip_buf		2373950						
ANR	2373998	Symbol	my_addr ( ) . to_ip_string		2373950						
ANR	2373999	Symbol	ip_str . Value		2373950						
ANR	2374000	Symbol	_my_ip_buf		2373950						
ANR	2374001	Symbol	my_addr		2373950						
ANR	2374002	Symbol	ip_str		2373950						
ANR	2374003	Function	Sock :: get_sinful	1985:0:53875:54162							
ANR	2374004	FunctionDef	Sock :: get_sinful ()		2374003	0					
ANR	2374005	CompoundStatement		1987:0:53901:54162	2374003	0					
ANR	2374006	IfStatement	if ( ! _sinful_self_buf [ 0 ] )		2374003	0					
ANR	2374007	Condition	! _sinful_self_buf [ 0 ]	1988:8:53918:53937	2374003	0	True				
ANR	2374008	UnaryOperationExpression	! _sinful_self_buf [ 0 ]		2374003	0					
ANR	2374009	UnaryOperator	!		2374003	0					
ANR	2374010	ArrayIndexing	_sinful_self_buf [ 0 ]		2374003	1					
ANR	2374011	Identifier	_sinful_self_buf		2374003	0					
ANR	2374012	PrimaryExpression	0		2374003	1					
ANR	2374013	CompoundStatement		4:2:67:111	2374003	1					
ANR	2374014	IdentifierDeclStatement	condor_sockaddr addr ;	1989:2:53945:53965	2374003	0	True				
ANR	2374015	IdentifierDecl	addr		2374003	0					
ANR	2374016	IdentifierDeclType	condor_sockaddr		2374003	0					
ANR	2374017	Identifier	addr		2374003	1					
ANR	2374018	IdentifierDeclStatement	"int ret = condor_getsockname_ex ( _sock , addr ) ;"	1990:2:53969:54013	2374003	1	True				
ANR	2374019	IdentifierDecl	"ret = condor_getsockname_ex ( _sock , addr )"		2374003	0					
ANR	2374020	IdentifierDeclType	int		2374003	0					
ANR	2374021	Identifier	ret		2374003	1					
ANR	2374022	AssignmentExpression	"ret = condor_getsockname_ex ( _sock , addr )"		2374003	2		=			
ANR	2374023	Identifier	ret		2374003	0					
ANR	2374024	CallExpression	"condor_getsockname_ex ( _sock , addr )"		2374003	1					
ANR	2374025	Callee	condor_getsockname_ex		2374003	0					
ANR	2374026	Identifier	condor_getsockname_ex		2374003	0					
ANR	2374027	ArgumentList	_sock		2374003	1					
ANR	2374028	Argument	_sock		2374003	0					
ANR	2374029	Identifier	_sock		2374003	0					
ANR	2374030	Argument	addr		2374003	1					
ANR	2374031	Identifier	addr		2374003	0					
ANR	2374032	IfStatement	if ( ret == 0 )		2374003	2					
ANR	2374033	Condition	ret == 0	1991:6:54021:54028	2374003	0	True				
ANR	2374034	EqualityExpression	ret == 0		2374003	0		==			
ANR	2374035	Identifier	ret		2374003	0					
ANR	2374036	PrimaryExpression	0		2374003	1					
ANR	2374037	CompoundStatement		6:3:134:173	2374003	1					
ANR	2374038	IdentifierDeclStatement	MyString sinful_self = addr . to_sinful ( ) ;	1992:3:54036:54075	2374003	0	True				
ANR	2374039	IdentifierDecl	sinful_self = addr . to_sinful ( )		2374003	0					
ANR	2374040	IdentifierDeclType	MyString		2374003	0					
ANR	2374041	Identifier	sinful_self		2374003	1					
ANR	2374042	AssignmentExpression	sinful_self = addr . to_sinful ( )		2374003	2		=			
ANR	2374043	Identifier	sinful_self		2374003	0					
ANR	2374044	CallExpression	addr . to_sinful ( )		2374003	1					
ANR	2374045	Callee	addr . to_sinful		2374003	0					
ANR	2374046	MemberAccess	addr . to_sinful		2374003	0					
ANR	2374047	Identifier	addr		2374003	0					
ANR	2374048	Identifier	to_sinful		2374003	1					
ANR	2374049	ArgumentList			2374003	1					
ANR	2374050	ExpressionStatement	"strcpy ( _sinful_self_buf , sinful_self . Value ( ) )"	1993:3:54080:54125	2374003	1	True				
ANR	2374051	CallExpression	"strcpy ( _sinful_self_buf , sinful_self . Value ( ) )"		2374003	0					
ANR	2374052	Callee	strcpy		2374003	0					
ANR	2374053	Identifier	strcpy		2374003	0					
ANR	2374054	ArgumentList	_sinful_self_buf		2374003	1					
ANR	2374055	Argument	_sinful_self_buf		2374003	0					
ANR	2374056	Identifier	_sinful_self_buf		2374003	0					
ANR	2374057	Argument	sinful_self . Value ( )		2374003	1					
ANR	2374058	CallExpression	sinful_self . Value ( )		2374003	0					
ANR	2374059	Callee	sinful_self . Value		2374003	0					
ANR	2374060	MemberAccess	sinful_self . Value		2374003	0					
ANR	2374061	Identifier	sinful_self		2374003	0					
ANR	2374062	Identifier	Value		2374003	1					
ANR	2374063	ArgumentList			2374003	1					
ANR	2374064	ReturnStatement	return _sinful_self_buf ;	1996:1:54137:54160	2374003	1	True				
ANR	2374065	Identifier	_sinful_self_buf		2374003	0					
ANR	2374066	ReturnType	char *		2374003	1					
ANR	2374067	Identifier	Sock :: get_sinful		2374003	2					
ANR	2374068	ParameterList			2374003	3					
ANR	2374069	CFGEntryNode	ENTRY		2374003		True				
ANR	2374070	CFGExitNode	EXIT		2374003		True				
ANR	2374071	Symbol	* _sinful_self_buf		2374003						
ANR	2374072	Symbol	ret		2374003						
ANR	2374073	Symbol	condor_getsockname_ex		2374003						
ANR	2374074	Symbol	sinful_self . Value		2374003						
ANR	2374075	Symbol	_sock		2374003						
ANR	2374076	Symbol	sinful_self		2374003						
ANR	2374077	Symbol	addr . to_sinful		2374003						
ANR	2374078	Symbol	_sinful_self_buf		2374003						
ANR	2374079	Symbol	addr		2374003						
ANR	2374080	Function	Sock :: get_sinful_peer	1999:0:54165:54357							
ANR	2374081	FunctionDef	Sock :: get_sinful_peer ()		2374080	0					
ANR	2374082	CompoundStatement		2001:0:54196:54357	2374080	0					
ANR	2374083	IfStatement	if ( ! _sinful_peer_buf [ 0 ] )		2374080	0					
ANR	2374084	Condition	! _sinful_peer_buf [ 0 ]	2002:6:54211:54230	2374080	0	True				
ANR	2374085	UnaryOperationExpression	! _sinful_peer_buf [ 0 ]		2374080	0					
ANR	2374086	UnaryOperator	!		2374080	0					
ANR	2374087	ArrayIndexing	_sinful_peer_buf [ 0 ]		2374080	1					
ANR	2374088	Identifier	_sinful_peer_buf		2374080	0					
ANR	2374089	PrimaryExpression	0		2374080	1					
ANR	2374090	CompoundStatement		3:2:41:80	2374080	1					
ANR	2374091	IdentifierDeclStatement	MyString sinful_peer = _who . to_sinful ( ) ;	2003:2:54238:54277	2374080	0	True				
ANR	2374092	IdentifierDecl	sinful_peer = _who . to_sinful ( )		2374080	0					
ANR	2374093	IdentifierDeclType	MyString		2374080	0					
ANR	2374094	Identifier	sinful_peer		2374080	1					
ANR	2374095	AssignmentExpression	sinful_peer = _who . to_sinful ( )		2374080	2		=			
ANR	2374096	Identifier	sinful_peer		2374080	0					
ANR	2374097	CallExpression	_who . to_sinful ( )		2374080	1					
ANR	2374098	Callee	_who . to_sinful		2374080	0					
ANR	2374099	MemberAccess	_who . to_sinful		2374080	0					
ANR	2374100	Identifier	_who		2374080	0					
ANR	2374101	Identifier	to_sinful		2374080	1					
ANR	2374102	ArgumentList			2374080	1					
ANR	2374103	ExpressionStatement	"strcpy ( _sinful_peer_buf , sinful_peer . Value ( ) )"	2004:2:54281:54326	2374080	1	True				
ANR	2374104	CallExpression	"strcpy ( _sinful_peer_buf , sinful_peer . Value ( ) )"		2374080	0					
ANR	2374105	Callee	strcpy		2374080	0					
ANR	2374106	Identifier	strcpy		2374080	0					
ANR	2374107	ArgumentList	_sinful_peer_buf		2374080	1					
ANR	2374108	Argument	_sinful_peer_buf		2374080	0					
ANR	2374109	Identifier	_sinful_peer_buf		2374080	0					
ANR	2374110	Argument	sinful_peer . Value ( )		2374080	1					
ANR	2374111	CallExpression	sinful_peer . Value ( )		2374080	0					
ANR	2374112	Callee	sinful_peer . Value		2374080	0					
ANR	2374113	MemberAccess	sinful_peer . Value		2374080	0					
ANR	2374114	Identifier	sinful_peer		2374080	0					
ANR	2374115	Identifier	Value		2374080	1					
ANR	2374116	ArgumentList			2374080	1					
ANR	2374117	ReturnStatement	return _sinful_peer_buf ;	2006:1:54332:54355	2374080	1	True				
ANR	2374118	Identifier	_sinful_peer_buf		2374080	0					
ANR	2374119	ReturnType	char *		2374080	1					
ANR	2374120	Identifier	Sock :: get_sinful_peer		2374080	2					
ANR	2374121	ParameterList			2374080	3					
ANR	2374122	CFGEntryNode	ENTRY		2374080		True				
ANR	2374123	CFGExitNode	EXIT		2374080		True				
ANR	2374124	Symbol	* _sinful_peer_buf		2374080						
ANR	2374125	Symbol	sinful_peer		2374080						
ANR	2374126	Symbol	_who		2374080						
ANR	2374127	Symbol	_who . to_sinful		2374080						
ANR	2374128	Symbol	sinful_peer . Value		2374080						
ANR	2374129	Symbol	_sinful_peer_buf		2374080						
ANR	2374130	Function	Sock :: default_peer_description	2009:0:54360:54518							
ANR	2374131	FunctionDef	Sock :: default_peer_description ()		2374130	0					
ANR	2374132	CompoundStatement		2011:0:54406:54518	2374130	0					
ANR	2374133	IdentifierDeclStatement	char const * retval = get_sinful_peer ( ) ;	2012:1:54409:54447	2374130	0	True				
ANR	2374134	IdentifierDecl	* retval = get_sinful_peer ( )		2374130	0					
ANR	2374135	IdentifierDeclType	char const *		2374130	0					
ANR	2374136	Identifier	retval		2374130	1					
ANR	2374137	AssignmentExpression	* retval = get_sinful_peer ( )		2374130	2		=			
ANR	2374138	Identifier	retval		2374130	0					
ANR	2374139	CallExpression	get_sinful_peer ( )		2374130	1					
ANR	2374140	Callee	get_sinful_peer		2374130	0					
ANR	2374141	Identifier	get_sinful_peer		2374130	0					
ANR	2374142	ArgumentList			2374130	1					
ANR	2374143	IfStatement	if ( ! retval )		2374130	1					
ANR	2374144	Condition	! retval	2013:5:54454:54460	2374130	0	True				
ANR	2374145	UnaryOperationExpression	! retval		2374130	0					
ANR	2374146	UnaryOperator	!		2374130	0					
ANR	2374147	Identifier	retval		2374130	1					
ANR	2374148	CompoundStatement		3:15:57:57	2374130	1					
ANR	2374149	ReturnStatement	"return ""(unconnected socket)"" ;"	2014:2:54468:54497	2374130	0	True				
ANR	2374150	PrimaryExpression	"""(unconnected socket)"""		2374130	0					
ANR	2374151	ReturnStatement	return retval ;	2016:1:54503:54516	2374130	2	True				
ANR	2374152	Identifier	retval		2374130	0					
ANR	2374153	ReturnType	char const *		2374130	1					
ANR	2374154	Identifier	Sock :: default_peer_description		2374130	2					
ANR	2374155	ParameterList			2374130	3					
ANR	2374156	CFGEntryNode	ENTRY		2374130		True				
ANR	2374157	CFGExitNode	EXIT		2374130		True				
ANR	2374158	Symbol	get_sinful_peer		2374130						
ANR	2374159	Symbol	retval		2374130						
ANR	2374160	Function	Sock :: get_port	2019:0:54521:54647							
ANR	2374161	FunctionDef	Sock :: get_port ()		2374160	0					
ANR	2374162	CompoundStatement		2021:0:54542:54647	2374160	0					
ANR	2374163	IdentifierDeclStatement	condor_sockaddr addr ;	2022:1:54545:54565	2374160	0	True				
ANR	2374164	IdentifierDecl	addr		2374160	0					
ANR	2374165	IdentifierDeclType	condor_sockaddr		2374160	0					
ANR	2374166	Identifier	addr		2374160	1					
ANR	2374167	IfStatement	"if ( condor_getsockname ( _sock , addr ) < 0 )"		2374160	1					
ANR	2374168	Condition	"condor_getsockname ( _sock , addr ) < 0"	2023:5:54572:54606	2374160	0	True				
ANR	2374169	RelationalExpression	"condor_getsockname ( _sock , addr ) < 0"		2374160	0		<			
ANR	2374170	CallExpression	"condor_getsockname ( _sock , addr )"		2374160	0					
ANR	2374171	Callee	condor_getsockname		2374160	0					
ANR	2374172	Identifier	condor_getsockname		2374160	0					
ANR	2374173	ArgumentList	_sock		2374160	1					
ANR	2374174	Argument	_sock		2374160	0					
ANR	2374175	Identifier	_sock		2374160	0					
ANR	2374176	Argument	addr		2374160	1					
ANR	2374177	Identifier	addr		2374160	0					
ANR	2374178	PrimaryExpression	0		2374160	1					
ANR	2374179	ReturnStatement	return - 1 ;	2024:2:54611:54620	2374160	1	True				
ANR	2374180	UnaryOperationExpression	- 1		2374160	0					
ANR	2374181	UnaryOperator	-		2374160	0					
ANR	2374182	PrimaryExpression	1		2374160	1					
ANR	2374183	ReturnStatement	return addr . get_port ( ) ;	2025:1:54623:54645	2374160	2	True				
ANR	2374184	CallExpression	addr . get_port ( )		2374160	0					
ANR	2374185	Callee	addr . get_port		2374160	0					
ANR	2374186	MemberAccess	addr . get_port		2374160	0					
ANR	2374187	Identifier	addr		2374160	0					
ANR	2374188	Identifier	get_port		2374160	1					
ANR	2374189	ArgumentList			2374160	1					
ANR	2374190	ReturnType	int		2374160	1					
ANR	2374191	Identifier	Sock :: get_port		2374160	2					
ANR	2374192	ParameterList			2374160	3					
ANR	2374193	CFGEntryNode	ENTRY		2374160		True				
ANR	2374194	CFGExitNode	EXIT		2374160		True				
ANR	2374195	Symbol	_sock		2374160						
ANR	2374196	Symbol	addr		2374160						
ANR	2374197	Symbol	condor_getsockname		2374160						
ANR	2374198	Symbol	addr . get_port		2374160						
ANR	2374199	DeclStmt									
ANR	2374200	Decl							CedarHandler	CedarHandler * *	handler_table
ANR	2374201	DeclStmt									
ANR	2374202	Decl							Stream	Stream * *	stream_table
ANR	2374203	DeclStmt									
ANR	2374204	Decl							int	int	table_size
ANR	2374205	DeclStmt									
ANR	2374206	Decl							Selector	Selector	selector
ANR	2374207	DeclStmt									
ANR	2374208	Decl							int	int	i
ANR	2374209	Function	make_fd_async	2074:0:56243:57096							
ANR	2374210	FunctionDef	make_fd_async (int fd)		2374209	0					
ANR	2374211	CompoundStatement		2075:0:56279:57096	2374209	0					
ANR	2374212	IdentifierDeclStatement	int bits ;	2076:1:56282:56290	2374209	0	True				
ANR	2374213	IdentifierDecl	bits		2374209	0					
ANR	2374214	IdentifierDeclType	int		2374209	0					
ANR	2374215	Identifier	bits		2374209	1					
ANR	2374216	IdentifierDeclStatement	int pid = getpid ( ) ;	2077:1:56293:56311	2374209	1	True				
ANR	2374217	IdentifierDecl	pid = getpid ( )		2374209	0					
ANR	2374218	IdentifierDeclType	int		2374209	0					
ANR	2374219	Identifier	pid		2374209	1					
ANR	2374220	AssignmentExpression	pid = getpid ( )		2374209	2		=			
ANR	2374221	Identifier	pid		2374209	0					
ANR	2374222	CallExpression	getpid ( )		2374209	1					
ANR	2374223	Callee	getpid		2374209	0					
ANR	2374224	Identifier	getpid		2374209	0					
ANR	2374225	ArgumentList			2374209	1					
ANR	2374226	ExpressionStatement	"ioctl ( fd , FIOSSAIOOWN , & pid )"	2082:2:56392:56422	2374209	2	True				
ANR	2374227	CallExpression	"ioctl ( fd , FIOSSAIOOWN , & pid )"		2374209	0					
ANR	2374228	Callee	ioctl		2374209	0					
ANR	2374229	Identifier	ioctl		2374209	0					
ANR	2374230	ArgumentList	fd		2374209	1					
ANR	2374231	Argument	fd		2374209	0					
ANR	2374232	Identifier	fd		2374209	0					
ANR	2374233	Argument	FIOSSAIOOWN		2374209	1					
ANR	2374234	Identifier	FIOSSAIOOWN		2374209	0					
ANR	2374235	Argument	& pid		2374209	2					
ANR	2374236	UnaryOperationExpression	& pid		2374209	0					
ANR	2374237	UnaryOperator	&		2374209	0					
ANR	2374238	Identifier	pid		2374209	1					
ANR	2374239	ExpressionStatement	"fcntl ( fd , F_SETOWN , pid )"	2086:2:56458:56483	2374209	3	True				
ANR	2374240	CallExpression	"fcntl ( fd , F_SETOWN , pid )"		2374209	0					
ANR	2374241	Callee	fcntl		2374209	0					
ANR	2374242	Identifier	fcntl		2374209	0					
ANR	2374243	ArgumentList	fd		2374209	1					
ANR	2374244	Argument	fd		2374209	0					
ANR	2374245	Identifier	fd		2374209	0					
ANR	2374246	Argument	F_SETOWN		2374209	1					
ANR	2374247	Identifier	F_SETOWN		2374209	0					
ANR	2374248	Argument	pid		2374209	2					
ANR	2374249	Identifier	pid		2374209	0					
ANR	2374250	ExpressionStatement	"bits = fcntl ( fd , F_GETFL , 0 )"	2092:2:56572:56602	2374209	4	True				
ANR	2374251	AssignmentExpression	"bits = fcntl ( fd , F_GETFL , 0 )"		2374209	0		=			
ANR	2374252	Identifier	bits		2374209	0					
ANR	2374253	CallExpression	"fcntl ( fd , F_GETFL , 0 )"		2374209	1					
ANR	2374254	Callee	fcntl		2374209	0					
ANR	2374255	Identifier	fcntl		2374209	0					
ANR	2374256	ArgumentList	fd		2374209	1					
ANR	2374257	Argument	fd		2374209	0					
ANR	2374258	Identifier	fd		2374209	0					
ANR	2374259	Argument	F_GETFL		2374209	1					
ANR	2374260	Identifier	F_GETFL		2374209	0					
ANR	2374261	Argument	0		2374209	2					
ANR	2374262	PrimaryExpression	0		2374209	0					
ANR	2374263	ExpressionStatement	"fcntl ( fd , F_SETFL , bits | O_ASYNC )"	2093:2:56606:56642	2374209	5	True				
ANR	2374264	CallExpression	"fcntl ( fd , F_SETFL , bits | O_ASYNC )"		2374209	0					
ANR	2374265	Callee	fcntl		2374209	0					
ANR	2374266	Identifier	fcntl		2374209	0					
ANR	2374267	ArgumentList	fd		2374209	1					
ANR	2374268	Argument	fd		2374209	0					
ANR	2374269	Identifier	fd		2374209	0					
ANR	2374270	Argument	F_SETFL		2374209	1					
ANR	2374271	Identifier	F_SETFL		2374209	0					
ANR	2374272	Argument	bits | O_ASYNC		2374209	2					
ANR	2374273	InclusiveOrExpression	bits | O_ASYNC		2374209	0		|			
ANR	2374274	Identifier	bits		2374209	0					
ANR	2374275	Identifier	O_ASYNC		2374209	1					
ANR	2374276	ExpressionStatement	"bits = fcntl ( fd , F_GETFL , 0 )"	2097:2:56676:56706	2374209	6	True				
ANR	2374277	AssignmentExpression	"bits = fcntl ( fd , F_GETFL , 0 )"		2374209	0		=			
ANR	2374278	Identifier	bits		2374209	0					
ANR	2374279	CallExpression	"fcntl ( fd , F_GETFL , 0 )"		2374209	1					
ANR	2374280	Callee	fcntl		2374209	0					
ANR	2374281	Identifier	fcntl		2374209	0					
ANR	2374282	ArgumentList	fd		2374209	1					
ANR	2374283	Argument	fd		2374209	0					
ANR	2374284	Identifier	fd		2374209	0					
ANR	2374285	Argument	F_GETFL		2374209	1					
ANR	2374286	Identifier	F_GETFL		2374209	0					
ANR	2374287	Argument	0		2374209	2					
ANR	2374288	PrimaryExpression	0		2374209	0					
ANR	2374289	ExpressionStatement	"fcntl ( fd , F_SETFL , bits | FASYNC )"	2098:2:56710:56745	2374209	7	True				
ANR	2374290	CallExpression	"fcntl ( fd , F_SETFL , bits | FASYNC )"		2374209	0					
ANR	2374291	Callee	fcntl		2374209	0					
ANR	2374292	Identifier	fcntl		2374209	0					
ANR	2374293	ArgumentList	fd		2374209	1					
ANR	2374294	Argument	fd		2374209	0					
ANR	2374295	Identifier	fd		2374209	0					
ANR	2374296	Argument	F_SETFL		2374209	1					
ANR	2374297	Identifier	F_SETFL		2374209	0					
ANR	2374298	Argument	bits | FASYNC		2374209	2					
ANR	2374299	InclusiveOrExpression	bits | FASYNC		2374209	0		|			
ANR	2374300	Identifier	bits		2374209	0					
ANR	2374301	Identifier	FASYNC		2374209	1					
ANR	2374302	CompoundStatement		32:3:663:673	2374209	8					
ANR	2374303	IdentifierDeclStatement	int on = 1 ;	2106:3:56943:56953	2374209	0	True				
ANR	2374304	IdentifierDecl	on = 1		2374209	0					
ANR	2374305	IdentifierDeclType	int		2374209	0					
ANR	2374306	Identifier	on		2374209	1					
ANR	2374307	AssignmentExpression	on = 1		2374209	2		=			
ANR	2374308	Identifier	on		2374209	0					
ANR	2374309	PrimaryExpression	1		2374209	1					
ANR	2374310	ExpressionStatement	"ioctl ( fd , FIOASYNC , & on )"	2107:3:56958:56984	2374209	1	True				
ANR	2374311	CallExpression	"ioctl ( fd , FIOASYNC , & on )"		2374209	0					
ANR	2374312	Callee	ioctl		2374209	0					
ANR	2374313	Identifier	ioctl		2374209	0					
ANR	2374314	ArgumentList	fd		2374209	1					
ANR	2374315	Argument	fd		2374209	0					
ANR	2374316	Identifier	fd		2374209	0					
ANR	2374317	Argument	FIOASYNC		2374209	1					
ANR	2374318	Identifier	FIOASYNC		2374209	0					
ANR	2374319	Argument	& on		2374209	2					
ANR	2374320	UnaryOperationExpression	& on		2374209	0					
ANR	2374321	UnaryOperator	&		2374209	0					
ANR	2374322	Identifier	on		2374209	1					
ANR	2374323	CompoundStatement		39:3:756:766	2374209	9					
ANR	2374324	IdentifierDeclStatement	int on = 1 ;	2113:3:57036:57046	2374209	0	True				
ANR	2374325	IdentifierDecl	on = 1		2374209	0					
ANR	2374326	IdentifierDeclType	int		2374209	0					
ANR	2374327	Identifier	on		2374209	1					
ANR	2374328	AssignmentExpression	on = 1		2374209	2		=			
ANR	2374329	Identifier	on		2374209	0					
ANR	2374330	PrimaryExpression	1		2374209	1					
ANR	2374331	ExpressionStatement	"ioctl ( fd , FIOSSAIOSTAT , & on )"	2114:3:57052:57082	2374209	1	True				
ANR	2374332	CallExpression	"ioctl ( fd , FIOSSAIOSTAT , & on )"		2374209	0					
ANR	2374333	Callee	ioctl		2374209	0					
ANR	2374334	Identifier	ioctl		2374209	0					
ANR	2374335	ArgumentList	fd		2374209	1					
ANR	2374336	Argument	fd		2374209	0					
ANR	2374337	Identifier	fd		2374209	0					
ANR	2374338	Argument	FIOSSAIOSTAT		2374209	1					
ANR	2374339	Identifier	FIOSSAIOSTAT		2374209	0					
ANR	2374340	Argument	& on		2374209	2					
ANR	2374341	UnaryOperationExpression	& on		2374209	0					
ANR	2374342	UnaryOperator	&		2374209	0					
ANR	2374343	Identifier	on		2374209	1					
ANR	2374344	ReturnType	static void		2374209	1					
ANR	2374345	Identifier	make_fd_async		2374209	2					
ANR	2374346	ParameterList	int fd		2374209	3					
ANR	2374347	Parameter	int fd	2074:27:56270:56275	2374209	0	True				
ANR	2374348	ParameterType	int		2374209	0					
ANR	2374349	Identifier	fd		2374209	1					
ANR	2374350	CFGEntryNode	ENTRY		2374209		True				
ANR	2374351	CFGExitNode	EXIT		2374209		True				
ANR	2374352	Symbol	FIOSSAIOSTAT		2374209						
ANR	2374353	Symbol	F_SETOWN		2374209						
ANR	2374354	Symbol	fcntl		2374209						
ANR	2374355	Symbol	bits		2374209						
ANR	2374356	Symbol	& on		2374209						
ANR	2374357	Symbol	pid		2374209						
ANR	2374358	Symbol	F_SETFL		2374209						
ANR	2374359	Symbol	O_ASYNC		2374209						
ANR	2374360	Symbol	FIOASYNC		2374209						
ANR	2374361	Symbol	& pid		2374209						
ANR	2374362	Symbol	FIOSSAIOOWN		2374209						
ANR	2374363	Symbol	FASYNC		2374209						
ANR	2374364	Symbol	F_GETFL		2374209						
ANR	2374365	Symbol	getpid		2374209						
ANR	2374366	Symbol	fd		2374209						
ANR	2374367	Symbol	on		2374209						
ANR	2374368	Function	make_fd_sync	2121:0:57146:57371							
ANR	2374369	FunctionDef	make_fd_sync (int fd)		2374368	0					
ANR	2374370	CompoundStatement		2122:0:57182:57371	2374368	0					
ANR	2374371	IdentifierDeclStatement	int bits ;	2123:1:57185:57193	2374368	0	True				
ANR	2374372	IdentifierDecl	bits		2374368	0					
ANR	2374373	IdentifierDeclType	int		2374368	0					
ANR	2374374	Identifier	bits		2374368	1					
ANR	2374375	ExpressionStatement	"bits = fcntl ( fd , F_GETFL , 0 )"	2125:1:57197:57227	2374368	1	True				
ANR	2374376	AssignmentExpression	"bits = fcntl ( fd , F_GETFL , 0 )"		2374368	0		=			
ANR	2374377	Identifier	bits		2374368	0					
ANR	2374378	CallExpression	"fcntl ( fd , F_GETFL , 0 )"		2374368	1					
ANR	2374379	Callee	fcntl		2374368	0					
ANR	2374380	Identifier	fcntl		2374368	0					
ANR	2374381	ArgumentList	fd		2374368	1					
ANR	2374382	Argument	fd		2374368	0					
ANR	2374383	Identifier	fd		2374368	0					
ANR	2374384	Argument	F_GETFL		2374368	1					
ANR	2374385	Identifier	F_GETFL		2374368	0					
ANR	2374386	Argument	0		2374368	2					
ANR	2374387	PrimaryExpression	0		2374368	0					
ANR	2374388	ExpressionStatement	bits = bits & ~O_ASYNC	2128:2:57254:57276	2374368	2	True				
ANR	2374389	AssignmentExpression	bits = bits & ~O_ASYNC		2374368	0		=			
ANR	2374390	Identifier	bits		2374368	0					
ANR	2374391	BitAndExpression	bits & ~O_ASYNC		2374368	1		&			
ANR	2374392	Identifier	bits		2374368	0					
ANR	2374393	Identifier	~O_ASYNC		2374368	1					
ANR	2374394	ExpressionStatement	bits = bits & ~FASYNC	2132:2:57310:57331	2374368	3	True				
ANR	2374395	AssignmentExpression	bits = bits & ~FASYNC		2374368	0		=			
ANR	2374396	Identifier	bits		2374368	0					
ANR	2374397	BitAndExpression	bits & ~FASYNC		2374368	1		&			
ANR	2374398	Identifier	bits		2374368	0					
ANR	2374399	Identifier	~FASYNC		2374368	1					
ANR	2374400	ExpressionStatement	"fcntl ( fd , F_SETFL , bits )"	2135:1:57343:57369	2374368	4	True				
ANR	2374401	CallExpression	"fcntl ( fd , F_SETFL , bits )"		2374368	0					
ANR	2374402	Callee	fcntl		2374368	0					
ANR	2374403	Identifier	fcntl		2374368	0					
ANR	2374404	ArgumentList	fd		2374368	1					
ANR	2374405	Argument	fd		2374368	0					
ANR	2374406	Identifier	fd		2374368	0					
ANR	2374407	Argument	F_SETFL		2374368	1					
ANR	2374408	Identifier	F_SETFL		2374368	0					
ANR	2374409	Argument	bits		2374368	2					
ANR	2374410	Identifier	bits		2374368	0					
ANR	2374411	ReturnType	static void		2374368	1					
ANR	2374412	Identifier	make_fd_sync		2374368	2					
ANR	2374413	ParameterList	int fd		2374368	3					
ANR	2374414	Parameter	int fd	2121:27:57173:57178	2374368	0	True				
ANR	2374415	ParameterType	int		2374368	0					
ANR	2374416	Identifier	fd		2374368	1					
ANR	2374417	CFGEntryNode	ENTRY		2374368		True				
ANR	2374418	CFGExitNode	EXIT		2374368		True				
ANR	2374419	Symbol	fcntl		2374368						
ANR	2374420	Symbol	bits		2374368						
ANR	2374421	Symbol	~O_ASYNC		2374368						
ANR	2374422	Symbol	F_GETFL		2374368						
ANR	2374423	Symbol	~FASYNC		2374368						
ANR	2374424	Symbol	F_SETFL		2374368						
ANR	2374425	Symbol	fd		2374368						
ANR	2374426	Function	install_async_handler	2145:0:57653:58415							
ANR	2374427	FunctionDef	"install_async_handler (int fd , CedarHandler * handler , Stream * stream)"		2374426	0					
ANR	2374428	CompoundStatement		2146:0:57735:58415	2374426	0					
ANR	2374429	IdentifierDeclStatement	int i ;	2147:1:57738:57743	2374426	0	True				
ANR	2374430	IdentifierDecl	i		2374426	0					
ANR	2374431	IdentifierDeclType	int		2374426	0					
ANR	2374432	Identifier	i		2374426	1					
ANR	2374433	IdentifierDeclStatement	struct sigaction act ;	2148:1:57746:57766	2374426	1	True				
ANR	2374434	IdentifierDecl	act		2374426	0					
ANR	2374435	IdentifierDeclType	struct sigaction		2374426	0					
ANR	2374436	Identifier	act		2374426	1					
ANR	2374437	IfStatement	if ( ! handler_table )		2374426	2					
ANR	2374438	Condition	! handler_table	2150:5:57774:57787	2374426	0	True				
ANR	2374439	UnaryOperationExpression	! handler_table		2374426	0					
ANR	2374440	UnaryOperator	!		2374426	0					
ANR	2374441	Identifier	handler_table		2374426	1					
ANR	2374442	CompoundStatement		5:22:55:55	2374426	1					
ANR	2374443	ExpressionStatement	table_size = sysconf ( _SC_OPEN_MAX )	2151:2:57795:57829	2374426	0	True				
ANR	2374444	AssignmentExpression	table_size = sysconf ( _SC_OPEN_MAX )		2374426	0		=			
ANR	2374445	Identifier	table_size		2374426	0					
ANR	2374446	CallExpression	sysconf ( _SC_OPEN_MAX )		2374426	1					
ANR	2374447	Callee	sysconf		2374426	0					
ANR	2374448	Identifier	sysconf		2374426	0					
ANR	2374449	ArgumentList	_SC_OPEN_MAX		2374426	1					
ANR	2374450	Argument	_SC_OPEN_MAX		2374426	0					
ANR	2374451	Identifier	_SC_OPEN_MAX		2374426	0					
ANR	2374452	IfStatement	if ( table_size <= 0 )		2374426	1					
ANR	2374453	Condition	table_size <= 0	2152:5:57836:57848	2374426	0	True				
ANR	2374454	RelationalExpression	table_size <= 0		2374426	0		<=			
ANR	2374455	Identifier	table_size		2374426	0					
ANR	2374456	PrimaryExpression	0		2374426	1					
ANR	2374457	ReturnStatement	return 0 ;	2152:20:57851:57859	2374426	1	True				
ANR	2374458	PrimaryExpression	0		2374426	0					
ANR	2374459	ExpressionStatement	handler_table = ( CedarHandler * * ) malloc ( sizeof ( handler ) * table_size )	2154:2:57864:57936	2374426	2	True				
ANR	2374460	AssignmentExpression	handler_table = ( CedarHandler * * ) malloc ( sizeof ( handler ) * table_size )		2374426	0		=			
ANR	2374461	Identifier	handler_table		2374426	0					
ANR	2374462	CastExpression	( CedarHandler * * ) malloc ( sizeof ( handler ) * table_size )		2374426	1					
ANR	2374463	CastTarget	CedarHandler * *		2374426	0					
ANR	2374464	CallExpression	malloc ( sizeof ( handler ) * table_size )		2374426	1					
ANR	2374465	Callee	malloc		2374426	0					
ANR	2374466	Identifier	malloc		2374426	0					
ANR	2374467	ArgumentList	sizeof ( handler ) * table_size		2374426	1					
ANR	2374468	Argument	sizeof ( handler ) * table_size		2374426	0					
ANR	2374469	MultiplicativeExpression	sizeof ( handler ) * table_size		2374426	0		*			
ANR	2374470	SizeofExpression	sizeof ( handler )		2374426	0					
ANR	2374471	Sizeof	sizeof		2374426	0					
ANR	2374472	SizeofOperand	handler		2374426	1					
ANR	2374473	Identifier	table_size		2374426	1					
ANR	2374474	IfStatement	if ( ! handler_table )		2374426	3					
ANR	2374475	Condition	! handler_table	2155:5:57943:57956	2374426	0	True				
ANR	2374476	UnaryOperationExpression	! handler_table		2374426	0					
ANR	2374477	UnaryOperator	!		2374426	0					
ANR	2374478	Identifier	handler_table		2374426	1					
ANR	2374479	ReturnStatement	return 0 ;	2155:21:57959:57967	2374426	1	True				
ANR	2374480	PrimaryExpression	0		2374426	0					
ANR	2374481	ExpressionStatement	stream_table = ( Stream * * ) malloc ( sizeof ( stream ) * table_size )	2157:2:57972:58036	2374426	4	True				
ANR	2374482	AssignmentExpression	stream_table = ( Stream * * ) malloc ( sizeof ( stream ) * table_size )		2374426	0		=			
ANR	2374483	Identifier	stream_table		2374426	0					
ANR	2374484	CastExpression	( Stream * * ) malloc ( sizeof ( stream ) * table_size )		2374426	1					
ANR	2374485	CastTarget	Stream * *		2374426	0					
ANR	2374486	CallExpression	malloc ( sizeof ( stream ) * table_size )		2374426	1					
ANR	2374487	Callee	malloc		2374426	0					
ANR	2374488	Identifier	malloc		2374426	0					
ANR	2374489	ArgumentList	sizeof ( stream ) * table_size		2374426	1					
ANR	2374490	Argument	sizeof ( stream ) * table_size		2374426	0					
ANR	2374491	MultiplicativeExpression	sizeof ( stream ) * table_size		2374426	0		*			
ANR	2374492	SizeofExpression	sizeof ( stream )		2374426	0					
ANR	2374493	Sizeof	sizeof		2374426	0					
ANR	2374494	SizeofOperand	stream		2374426	1					
ANR	2374495	Identifier	table_size		2374426	1					
ANR	2374496	IfStatement	if ( ! stream_table )		2374426	5					
ANR	2374497	Condition	! stream_table	2158:5:58043:58055	2374426	0	True				
ANR	2374498	UnaryOperationExpression	! stream_table		2374426	0					
ANR	2374499	UnaryOperator	!		2374426	0					
ANR	2374500	Identifier	stream_table		2374426	1					
ANR	2374501	ReturnStatement	return 0 ;	2158:20:58058:58066	2374426	1	True				
ANR	2374502	PrimaryExpression	0		2374426	0					
ANR	2374503	ForStatement	for ( i = 0 ; i < table_size ; i ++ )		2374426	6					
ANR	2374504	ForInit	i = 0 ;	2160:7:58076:58079	2374426	0	True				
ANR	2374505	AssignmentExpression	i = 0		2374426	0		=			
ANR	2374506	Identifier	i		2374426	0					
ANR	2374507	PrimaryExpression	0		2374426	1					
ANR	2374508	Condition	i < table_size	2160:12:58081:58092	2374426	1	True				
ANR	2374509	RelationalExpression	i < table_size		2374426	0		<			
ANR	2374510	Identifier	i		2374426	0					
ANR	2374511	Identifier	table_size		2374426	1					
ANR	2374512	PostIncDecOperationExpression	i ++	2160:26:58095:58097	2374426	2	True				
ANR	2374513	Identifier	i		2374426	0					
ANR	2374514	IncDec	++		2374426	1					
ANR	2374515	CompoundStatement		15:32:365:365	2374426	3					
ANR	2374516	ExpressionStatement	handler_table [ i ] = 0	2161:3:58106:58126	2374426	0	True				
ANR	2374517	AssignmentExpression	handler_table [ i ] = 0		2374426	0		=			
ANR	2374518	ArrayIndexing	handler_table [ i ]		2374426	0					
ANR	2374519	Identifier	handler_table		2374426	0					
ANR	2374520	Identifier	i		2374426	1					
ANR	2374521	PrimaryExpression	0		2374426	1					
ANR	2374522	ExpressionStatement	stream_table [ i ] = 0	2162:3:58131:58150	2374426	1	True				
ANR	2374523	AssignmentExpression	stream_table [ i ] = 0		2374426	0		=			
ANR	2374524	ArrayIndexing	stream_table [ i ]		2374426	0					
ANR	2374525	Identifier	stream_table		2374426	0					
ANR	2374526	Identifier	i		2374426	1					
ANR	2374527	PrimaryExpression	0		2374426	1					
ANR	2374528	ExpressionStatement	act . sa_handler = async_handler	2165:2:58159:58189	2374426	7	True				
ANR	2374529	AssignmentExpression	act . sa_handler = async_handler		2374426	0		=			
ANR	2374530	MemberAccess	act . sa_handler		2374426	0					
ANR	2374531	Identifier	act		2374426	0					
ANR	2374532	Identifier	sa_handler		2374426	1					
ANR	2374533	Identifier	async_handler		2374426	1					
ANR	2374534	ExpressionStatement	sigfillset ( & act . sa_mask )	2166:2:58193:58217	2374426	8	True				
ANR	2374535	CallExpression	sigfillset ( & act . sa_mask )		2374426	0					
ANR	2374536	Callee	sigfillset		2374426	0					
ANR	2374537	Identifier	sigfillset		2374426	0					
ANR	2374538	ArgumentList	& act . sa_mask		2374426	1					
ANR	2374539	Argument	& act . sa_mask		2374426	0					
ANR	2374540	UnaryOperationExpression	& act . sa_mask		2374426	0					
ANR	2374541	UnaryOperator	&		2374426	0					
ANR	2374542	MemberAccess	act . sa_mask		2374426	1					
ANR	2374543	Identifier	act		2374426	0					
ANR	2374544	Identifier	sa_mask		2374426	1					
ANR	2374545	ExpressionStatement	act . sa_flags = 0	2167:2:58221:58237	2374426	9	True				
ANR	2374546	AssignmentExpression	act . sa_flags = 0		2374426	0		=			
ANR	2374547	MemberAccess	act . sa_flags		2374426	0					
ANR	2374548	Identifier	act		2374426	0					
ANR	2374549	Identifier	sa_flags		2374426	1					
ANR	2374550	PrimaryExpression	0		2374426	1					
ANR	2374551	ExpressionStatement	"sigaction ( SIGIO , & act , 0 )"	2169:2:58242:58269	2374426	10	True				
ANR	2374552	CallExpression	"sigaction ( SIGIO , & act , 0 )"		2374426	0					
ANR	2374553	Callee	sigaction		2374426	0					
ANR	2374554	Identifier	sigaction		2374426	0					
ANR	2374555	ArgumentList	SIGIO		2374426	1					
ANR	2374556	Argument	SIGIO		2374426	0					
ANR	2374557	Identifier	SIGIO		2374426	0					
ANR	2374558	Argument	& act		2374426	1					
ANR	2374559	UnaryOperationExpression	& act		2374426	0					
ANR	2374560	UnaryOperator	&		2374426	0					
ANR	2374561	Identifier	act		2374426	1					
ANR	2374562	Argument	0		2374426	2					
ANR	2374563	PrimaryExpression	0		2374426	0					
ANR	2374564	ExpressionStatement	handler_table [ fd ] = handler	2172:1:58276:58303	2374426	3	True				
ANR	2374565	AssignmentExpression	handler_table [ fd ] = handler		2374426	0		=			
ANR	2374566	ArrayIndexing	handler_table [ fd ]		2374426	0					
ANR	2374567	Identifier	handler_table		2374426	0					
ANR	2374568	Identifier	fd		2374426	1					
ANR	2374569	Identifier	handler		2374426	1					
ANR	2374570	ExpressionStatement	stream_table [ fd ] = stream	2173:1:58306:58331	2374426	4	True				
ANR	2374571	AssignmentExpression	stream_table [ fd ] = stream		2374426	0		=			
ANR	2374572	ArrayIndexing	stream_table [ fd ]		2374426	0					
ANR	2374573	Identifier	stream_table		2374426	0					
ANR	2374574	Identifier	fd		2374426	1					
ANR	2374575	Identifier	stream		2374426	1					
ANR	2374576	IfStatement	if ( handler )		2374426	5					
ANR	2374577	Condition	handler	2175:4:58338:58344	2374426	0	True				
ANR	2374578	Identifier	handler		2374426	0					
ANR	2374579	CompoundStatement		30:13:611:611	2374426	1					
ANR	2374580	ExpressionStatement	make_fd_async ( fd )	2176:2:58351:58368	2374426	0	True				
ANR	2374581	CallExpression	make_fd_async ( fd )		2374426	0					
ANR	2374582	Callee	make_fd_async		2374426	0					
ANR	2374583	Identifier	make_fd_async		2374426	0					
ANR	2374584	ArgumentList	fd		2374426	1					
ANR	2374585	Argument	fd		2374426	0					
ANR	2374586	Identifier	fd		2374426	0					
ANR	2374587	ElseStatement	else		2374426	0					
ANR	2374588	CompoundStatement		32:8:642:642	2374426	0					
ANR	2374589	ExpressionStatement	make_fd_sync ( fd )	2178:2:58382:58398	2374426	0	True				
ANR	2374590	CallExpression	make_fd_sync ( fd )		2374426	0					
ANR	2374591	Callee	make_fd_sync		2374426	0					
ANR	2374592	Identifier	make_fd_sync		2374426	0					
ANR	2374593	ArgumentList	fd		2374426	1					
ANR	2374594	Argument	fd		2374426	0					
ANR	2374595	Identifier	fd		2374426	0					
ANR	2374596	ReturnStatement	return 1 ;	2181:1:58405:58413	2374426	6	True				
ANR	2374597	PrimaryExpression	1		2374426	0					
ANR	2374598	ReturnType	static int		2374426	1					
ANR	2374599	Identifier	install_async_handler		2374426	2					
ANR	2374600	ParameterList	"int fd , CedarHandler * handler , Stream * stream"		2374426	3					
ANR	2374601	Parameter	int fd	2145:34:57687:57692	2374426	0	True				
ANR	2374602	ParameterType	int		2374426	0					
ANR	2374603	Identifier	fd		2374426	1					
ANR	2374604	Parameter	CedarHandler * handler	2145:42:57695:57715	2374426	1	True				
ANR	2374605	ParameterType	CedarHandler *		2374426	0					
ANR	2374606	Identifier	handler		2374426	1					
ANR	2374607	Parameter	Stream * stream	2145:65:57718:57731	2374426	2	True				
ANR	2374608	ParameterType	Stream *		2374426	0					
ANR	2374609	Identifier	stream		2374426	1					
ANR	2374610	CFGEntryNode	ENTRY		2374426		True				
ANR	2374611	CFGExitNode	EXIT		2374426		True				
ANR	2374612	Symbol	handler		2374426						
ANR	2374613	Symbol	table_size		2374426						
ANR	2374614	Symbol	malloc		2374426						
ANR	2374615	Symbol	* handler_table		2374426						
ANR	2374616	Symbol	SIGIO		2374426						
ANR	2374617	Symbol	stream_table		2374426						
ANR	2374618	Symbol	& act . sa_mask		2374426						
ANR	2374619	Symbol	* fd		2374426						
ANR	2374620	Symbol	i		2374426						
ANR	2374621	Symbol	* stream_table		2374426						
ANR	2374622	Symbol	_SC_OPEN_MAX		2374426						
ANR	2374623	Symbol	async_handler		2374426						
ANR	2374624	Symbol	act . sa_flags		2374426						
ANR	2374625	Symbol	act . sa_handler		2374426						
ANR	2374626	Symbol	act		2374426						
ANR	2374627	Symbol	* i		2374426						
ANR	2374628	Symbol	stream		2374426						
ANR	2374629	Symbol	sysconf		2374426						
ANR	2374630	Symbol	fd		2374426						
ANR	2374631	Symbol	handler_table		2374426						
ANR	2374632	Symbol	& act		2374426						
ANR	2374633	Function	Sock :: set_async_handler	2188:0:58468:58578							
ANR	2374634	FunctionDef	Sock :: set_async_handler (CedarHandler * handler)		2374633	0					
ANR	2374635	CompoundStatement		2189:0:58521:58578	2374633	0					
ANR	2374636	ReturnStatement	"return install_async_handler ( _sock , handler , this ) ;"	2190:1:58524:58576	2374633	0	True				
ANR	2374637	CallExpression	"install_async_handler ( _sock , handler , this )"		2374633	0					
ANR	2374638	Callee	install_async_handler		2374633	0					
ANR	2374639	Identifier	install_async_handler		2374633	0					
ANR	2374640	ArgumentList	_sock		2374633	1					
ANR	2374641	Argument	_sock		2374633	0					
ANR	2374642	Identifier	_sock		2374633	0					
ANR	2374643	Argument	handler		2374633	1					
ANR	2374644	Identifier	handler		2374633	0					
ANR	2374645	Argument	this		2374633	2					
ANR	2374646	Identifier	this		2374633	0					
ANR	2374647	ReturnType	int		2374633	1					
ANR	2374648	Identifier	Sock :: set_async_handler		2374633	2					
ANR	2374649	ParameterList	CedarHandler * handler		2374633	3					
ANR	2374650	Parameter	CedarHandler * handler	2188:29:58497:58517	2374633	0	True				
ANR	2374651	ParameterType	CedarHandler *		2374633	0					
ANR	2374652	Identifier	handler		2374633	1					
ANR	2374653	CFGEntryNode	ENTRY		2374633		True				
ANR	2374654	CFGExitNode	EXIT		2374633		True				
ANR	2374655	Symbol	handler		2374633						
ANR	2374656	Symbol	_sock		2374633						
ANR	2374657	Symbol	this		2374633						
ANR	2374658	Symbol	install_async_handler		2374633						
ANR	2374659	Function	Sock :: setFullyQualifiedUser	2196:0:58635:59173							
ANR	2374660	FunctionDef	Sock :: setFullyQualifiedUser (char const * fqu)		2374659	0					
ANR	2374661	CompoundStatement		2197:0:58687:59173	2374659	0					
ANR	2374662	IfStatement	if ( fqu == _fqu )		2374659	0					
ANR	2374663	Condition	fqu == _fqu	2198:5:58694:58704	2374659	0	True				
ANR	2374664	EqualityExpression	fqu == _fqu		2374659	0		==			
ANR	2374665	Identifier	fqu		2374659	0					
ANR	2374666	Identifier	_fqu		2374659	1					
ANR	2374667	CompoundStatement		2:19:20:20	2374659	1					
ANR	2374668	ReturnStatement	return ;	2199:2:58728:58734	2374659	0	True				
ANR	2374669	IfStatement	if ( fqu && fqu [ 0 ] == '\\0' )		2374659	1					
ANR	2374670	Condition	fqu && fqu [ 0 ] == '\\0'	2201:5:58744:58764	2374659	0	True				
ANR	2374671	AndExpression	fqu && fqu [ 0 ] == '\\0'		2374659	0		&&			
ANR	2374672	Identifier	fqu		2374659	0					
ANR	2374673	EqualityExpression	fqu [ 0 ] == '\\0'		2374659	1		==			
ANR	2374674	ArrayIndexing	fqu [ 0 ]		2374659	0					
ANR	2374675	Identifier	fqu		2374659	0					
ANR	2374676	PrimaryExpression	0		2374659	1					
ANR	2374677	PrimaryExpression	'\\0'		2374659	1					
ANR	2374678	CompoundStatement		5:29:80:80	2374659	1					
ANR	2374679	ExpressionStatement	fqu = NULL	2203:2:58836:58846	2374659	0	True				
ANR	2374680	AssignmentExpression	fqu = NULL		2374659	0		=			
ANR	2374681	Identifier	fqu		2374659	0					
ANR	2374682	Identifier	NULL		2374659	1					
ANR	2374683	IfStatement	if ( _fqu )		2374659	2					
ANR	2374684	Condition	_fqu	2205:5:58856:58859	2374659	0	True				
ANR	2374685	Identifier	_fqu		2374659	0					
ANR	2374686	CompoundStatement		9:12:175:175	2374659	1					
ANR	2374687	ExpressionStatement	free ( _fqu )	2206:2:58867:58879	2374659	0	True				
ANR	2374688	CallExpression	free ( _fqu )		2374659	0					
ANR	2374689	Callee	free		2374659	0					
ANR	2374690	Identifier	free		2374659	0					
ANR	2374691	ArgumentList	_fqu		2374659	1					
ANR	2374692	Argument	_fqu		2374659	0					
ANR	2374693	Identifier	_fqu		2374659	0					
ANR	2374694	ExpressionStatement	_fqu = NULL	2207:2:58883:58894	2374659	1	True				
ANR	2374695	AssignmentExpression	_fqu = NULL		2374659	0		=			
ANR	2374696	Identifier	_fqu		2374659	0					
ANR	2374697	Identifier	NULL		2374659	1					
ANR	2374698	IfStatement	if ( _fqu_user_part )		2374659	3					
ANR	2374699	Condition	_fqu_user_part	2209:5:58904:58917	2374659	0	True				
ANR	2374700	Identifier	_fqu_user_part		2374659	0					
ANR	2374701	CompoundStatement		13:21:232:232	2374659	1					
ANR	2374702	ExpressionStatement	free ( _fqu_user_part )	2210:2:58924:58944	2374659	0	True				
ANR	2374703	CallExpression	free ( _fqu_user_part )		2374659	0					
ANR	2374704	Callee	free		2374659	0					
ANR	2374705	Identifier	free		2374659	0					
ANR	2374706	ArgumentList	_fqu_user_part		2374659	1					
ANR	2374707	Argument	_fqu_user_part		2374659	0					
ANR	2374708	Identifier	_fqu_user_part		2374659	0					
ANR	2374709	ExpressionStatement	_fqu_user_part = NULL	2211:2:58948:58969	2374659	1	True				
ANR	2374710	AssignmentExpression	_fqu_user_part = NULL		2374659	0		=			
ANR	2374711	Identifier	_fqu_user_part		2374659	0					
ANR	2374712	Identifier	NULL		2374659	1					
ANR	2374713	IfStatement	if ( _fqu_domain_part )		2374659	4					
ANR	2374714	Condition	_fqu_domain_part	2213:5:58979:58994	2374659	0	True				
ANR	2374715	Identifier	_fqu_domain_part		2374659	0					
ANR	2374716	CompoundStatement		17:23:309:309	2374659	1					
ANR	2374717	ExpressionStatement	free ( _fqu_domain_part )	2214:2:59001:59023	2374659	0	True				
ANR	2374718	CallExpression	free ( _fqu_domain_part )		2374659	0					
ANR	2374719	Callee	free		2374659	0					
ANR	2374720	Identifier	free		2374659	0					
ANR	2374721	ArgumentList	_fqu_domain_part		2374659	1					
ANR	2374722	Argument	_fqu_domain_part		2374659	0					
ANR	2374723	Identifier	_fqu_domain_part		2374659	0					
ANR	2374724	ExpressionStatement	_fqu_domain_part = NULL	2215:2:59027:59050	2374659	1	True				
ANR	2374725	AssignmentExpression	_fqu_domain_part = NULL		2374659	0		=			
ANR	2374726	Identifier	_fqu_domain_part		2374659	0					
ANR	2374727	Identifier	NULL		2374659	1					
ANR	2374728	IfStatement	if ( fqu )		2374659	5					
ANR	2374729	Condition	fqu	2217:5:59060:59062	2374659	0	True				
ANR	2374730	Identifier	fqu		2374659	0					
ANR	2374731	CompoundStatement		21:11:378:378	2374659	1					
ANR	2374732	ExpressionStatement	_fqu = strdup ( fqu )	2218:2:59070:59088	2374659	0	True				
ANR	2374733	AssignmentExpression	_fqu = strdup ( fqu )		2374659	0		=			
ANR	2374734	Identifier	_fqu		2374659	0					
ANR	2374735	CallExpression	strdup ( fqu )		2374659	1					
ANR	2374736	Callee	strdup		2374659	0					
ANR	2374737	Identifier	strdup		2374659	0					
ANR	2374738	ArgumentList	fqu		2374659	1					
ANR	2374739	Argument	fqu		2374659	0					
ANR	2374740	Identifier	fqu		2374659	0					
ANR	2374741	ExpressionStatement	"Authentication :: split_canonical_name ( _fqu , & _fqu_user_part , & _fqu_domain_part )"	2219:2:59092:59168	2374659	1	True				
ANR	2374742	CallExpression	"Authentication :: split_canonical_name ( _fqu , & _fqu_user_part , & _fqu_domain_part )"		2374659	0					
ANR	2374743	Callee	Authentication :: split_canonical_name		2374659	0					
ANR	2374744	Identifier	Authentication :: split_canonical_name		2374659	0					
ANR	2374745	ArgumentList	_fqu		2374659	1					
ANR	2374746	Argument	_fqu		2374659	0					
ANR	2374747	Identifier	_fqu		2374659	0					
ANR	2374748	Argument	& _fqu_user_part		2374659	1					
ANR	2374749	UnaryOperationExpression	& _fqu_user_part		2374659	0					
ANR	2374750	UnaryOperator	&		2374659	0					
ANR	2374751	Identifier	_fqu_user_part		2374659	1					
ANR	2374752	Argument	& _fqu_domain_part		2374659	2					
ANR	2374753	UnaryOperationExpression	& _fqu_domain_part		2374659	0					
ANR	2374754	UnaryOperator	&		2374659	0					
ANR	2374755	Identifier	_fqu_domain_part		2374659	1					
ANR	2374756	ReturnType	void		2374659	1					
ANR	2374757	Identifier	Sock :: setFullyQualifiedUser		2374659	2					
ANR	2374758	ParameterList	char const * fqu		2374659	3					
ANR	2374759	Parameter	char const * fqu	2196:35:58670:58684	2374659	0	True				
ANR	2374760	ParameterType	char const *		2374659	0					
ANR	2374761	Identifier	fqu		2374659	1					
ANR	2374762	CFGEntryNode	ENTRY		2374659		True				
ANR	2374763	CFGExitNode	EXIT		2374659		True				
ANR	2374764	Symbol	NULL		2374659						
ANR	2374765	Symbol	_fqu		2374659						
ANR	2374766	Symbol	fqu		2374659						
ANR	2374767	Symbol	* fqu		2374659						
ANR	2374768	Symbol	strdup		2374659						
ANR	2374769	Symbol	_fqu_domain_part		2374659						
ANR	2374770	Symbol	_fqu_user_part		2374659						
ANR	2374771	Symbol	& _fqu_domain_part		2374659						
ANR	2374772	Symbol	& _fqu_user_part		2374659						
ANR	2374773	Function	Sock :: hdr_encrypt	2228:0:59219:59259							
ANR	2374774	FunctionDef	Sock :: hdr_encrypt ()		2374773	0					
ANR	2374775	CompoundStatement		2229:0:59245:59259	2374773	0					
ANR	2374776	ReturnStatement	return - 1 ;	2230:1:59248:59257	2374773	0	True				
ANR	2374777	UnaryOperationExpression	- 1		2374773	0					
ANR	2374778	UnaryOperator	-		2374773	0					
ANR	2374779	PrimaryExpression	1		2374773	1					
ANR	2374780	ReturnType	int		2374773	1					
ANR	2374781	Identifier	Sock :: hdr_encrypt		2374773	2					
ANR	2374782	ParameterList			2374773	3					
ANR	2374783	CFGEntryNode	ENTRY		2374773		True				
ANR	2374784	CFGExitNode	EXIT		2374773		True				
ANR	2374785	Function	Sock :: is_hdr_encrypt	2233:0:59262:59308							
ANR	2374786	FunctionDef	Sock :: is_hdr_encrypt ()		2374785	0					
ANR	2374787	CompoundStatement		2233:29:59291:59308	2374785	0					
ANR	2374788	ReturnStatement	return FALSE ;	2234:1:59294:59306	2374785	0	True				
ANR	2374789	Identifier	FALSE		2374785	0					
ANR	2374790	ReturnType	bool		2374785	1					
ANR	2374791	Identifier	Sock :: is_hdr_encrypt		2374785	2					
ANR	2374792	ParameterList			2374785	3					
ANR	2374793	CFGEntryNode	ENTRY		2374785		True				
ANR	2374794	CFGExitNode	EXIT		2374785		True				
ANR	2374795	Symbol	FALSE		2374785						
ANR	2374796	Function	Sock :: is_encrypt	2251:0:59732:59778							
ANR	2374797	FunctionDef	Sock :: is_encrypt ()		2374796	0					
ANR	2374798	CompoundStatement		2252:0:59758:59778	2374796	0					
ANR	2374799	ReturnStatement	return FALSE ;	2253:4:59764:59776	2374796	0	True				
ANR	2374800	Identifier	FALSE		2374796	0					
ANR	2374801	ReturnType	bool		2374796	1					
ANR	2374802	Identifier	Sock :: is_encrypt		2374796	2					
ANR	2374803	ParameterList			2374796	3					
ANR	2374804	CFGEntryNode	ENTRY		2374796		True				
ANR	2374805	CFGExitNode	EXIT		2374796		True				
ANR	2374806	Symbol	FALSE		2374796						
ANR	2374807	Function	Sock :: _bind_helper	2257:0:59782:60654							
ANR	2374808	FunctionDef	"Sock :: _bind_helper (int fd , const condor_sockaddr & addr , bool outbound , bool loopback)"		2374807	0					
ANR	2374809	CompoundStatement		2259:0:59872:60654	2374807	0					
ANR	2374810	IdentifierDeclStatement	int rval ;	2260:1:59875:59883	2374807	0	True				
ANR	2374811	IdentifierDecl	rval		2374807	0					
ANR	2374812	IdentifierDeclType	int		2374807	0					
ANR	2374813	Identifier	rval		2374807	1					
ANR	2374814	IfStatement	if ( outbound || loopback )		2374807	1					
ANR	2374815	Condition	outbound || loopback	2263:5:59908:59927	2374807	0	True				
ANR	2374816	OrExpression	outbound || loopback		2374807	0		||			
ANR	2374817	Identifier	outbound		2374807	0					
ANR	2374818	Identifier	loopback		2374807	1					
ANR	2374819	CompoundStatement		5:27:57:57	2374807	1					
ANR	2374820	ExpressionStatement	"rval = GCB_local_bind ( fd , addr . to_sockaddr ( ) , addr . get_socklen ( ) )"	2264:2:59934:60268	2374807	0	True				
ANR	2374821	AssignmentExpression	"rval = GCB_local_bind ( fd , addr . to_sockaddr ( ) , addr . get_socklen ( ) )"		2374807	0		=			
ANR	2374822	Identifier	rval		2374807	0					
ANR	2374823	CallExpression	"GCB_local_bind ( fd , addr . to_sockaddr ( ) , addr . get_socklen ( ) )"		2374807	1					
ANR	2374824	Callee	GCB_local_bind		2374807	0					
ANR	2374825	Identifier	GCB_local_bind		2374807	0					
ANR	2374826	ArgumentList	fd		2374807	1					
ANR	2374827	Argument	fd		2374807	0					
ANR	2374828	Identifier	fd		2374807	0					
ANR	2374829	Argument	addr . to_sockaddr ( )		2374807	1					
ANR	2374830	CallExpression	addr . to_sockaddr ( )		2374807	0					
ANR	2374831	Callee	addr . to_sockaddr		2374807	0					
ANR	2374832	MemberAccess	addr . to_sockaddr		2374807	0					
ANR	2374833	Identifier	addr		2374807	0					
ANR	2374834	Identifier	to_sockaddr		2374807	1					
ANR	2374835	ArgumentList			2374807	1					
ANR	2374836	Argument	addr . get_socklen ( )		2374807	2					
ANR	2374837	CallExpression	addr . get_socklen ( )		2374807	0					
ANR	2374838	Callee	addr . get_socklen		2374807	0					
ANR	2374839	MemberAccess	addr . get_socklen		2374807	0					
ANR	2374840	Identifier	addr		2374807	0					
ANR	2374841	Identifier	get_socklen		2374807	1					
ANR	2374842	ArgumentList			2374807	1					
ANR	2374843	ElseStatement	else		2374807	0					
ANR	2374844	CompoundStatement		16:6:406:406	2374807	0					
ANR	2374845	ExpressionStatement	"rval = condor_bind ( fd , addr )"	2276:2:60359:60387	2374807	0	True				
ANR	2374846	AssignmentExpression	"rval = condor_bind ( fd , addr )"		2374807	0		=			
ANR	2374847	Identifier	rval		2374807	0					
ANR	2374848	CallExpression	"condor_bind ( fd , addr )"		2374807	1					
ANR	2374849	Callee	condor_bind		2374807	0					
ANR	2374850	Identifier	condor_bind		2374807	0					
ANR	2374851	ArgumentList	fd		2374807	1					
ANR	2374852	Argument	fd		2374807	0					
ANR	2374853	Identifier	fd		2374807	0					
ANR	2374854	Argument	addr		2374807	1					
ANR	2374855	Identifier	addr		2374807	0					
ANR	2374856	ReturnStatement	return rval ;	2284:1:60641:60652	2374807	2	True				
ANR	2374857	Identifier	rval		2374807	0					
ANR	2374858	ReturnType	int		2374807	1					
ANR	2374859	Identifier	Sock :: _bind_helper		2374807	2					
ANR	2374860	ParameterList	"int fd , const condor_sockaddr & addr , bool outbound , bool loopback"		2374807	3					
ANR	2374861	Parameter	int fd	2258:19:59805:59810	2374807	0	True				
ANR	2374862	ParameterType	int		2374807	0					
ANR	2374863	Identifier	fd		2374807	1					
ANR	2374864	Parameter	const condor_sockaddr & addr	2258:27:59813:59839	2374807	1	True				
ANR	2374865	ParameterType	const condor_sockaddr &		2374807	0					
ANR	2374866	Identifier	addr		2374807	1					
ANR	2374867	Parameter	bool outbound	2258:56:59842:59854	2374807	2	True				
ANR	2374868	ParameterType	bool		2374807	0					
ANR	2374869	Identifier	outbound		2374807	1					
ANR	2374870	Parameter	bool loopback	2258:71:59857:59869	2374807	3	True				
ANR	2374871	ParameterType	bool		2374807	0					
ANR	2374872	Identifier	loopback		2374807	1					
ANR	2374873	CFGEntryNode	ENTRY		2374807		True				
ANR	2374874	CFGExitNode	EXIT		2374807		True				
ANR	2374875	Symbol	addr . get_socklen		2374807						
ANR	2374876	Symbol	outbound		2374807						
ANR	2374877	Symbol	rval		2374807						
ANR	2374878	Symbol	addr		2374807						
ANR	2374879	Symbol	addr . to_sockaddr		2374807						
ANR	2374880	Symbol	condor_bind		2374807						
ANR	2374881	Symbol	fd		2374807						
ANR	2374882	Symbol	loopback		2374807						
ANR	2374883	Symbol	GCB_local_bind		2374807						
ANR	2374884	Function	Sock :: set_connect_addr	2287:0:60657:60804							
ANR	2374885	FunctionDef	Sock :: set_connect_addr (char const * addr)		2374884	0					
ANR	2374886	CompoundStatement		2289:0:60703:60804	2374884	0					
ANR	2374887	ExpressionStatement	free ( m_connect_addr )	2290:1:60706:60728	2374884	0	True				
ANR	2374888	CallExpression	free ( m_connect_addr )		2374884	0					
ANR	2374889	Callee	free		2374884	0					
ANR	2374890	Identifier	free		2374884	0					
ANR	2374891	ArgumentList	m_connect_addr		2374884	1					
ANR	2374892	Argument	m_connect_addr		2374884	0					
ANR	2374893	Identifier	m_connect_addr		2374884	0					
ANR	2374894	ExpressionStatement	m_connect_addr = NULL	2291:1:60731:60752	2374884	1	True				
ANR	2374895	AssignmentExpression	m_connect_addr = NULL		2374884	0		=			
ANR	2374896	Identifier	m_connect_addr		2374884	0					
ANR	2374897	Identifier	NULL		2374884	1					
ANR	2374898	IfStatement	if ( addr )		2374884	2					
ANR	2374899	Condition	addr	2292:5:60759:60762	2374884	0	True				
ANR	2374900	Identifier	addr		2374884	0					
ANR	2374901	CompoundStatement		4:12:62:62	2374884	1					
ANR	2374902	ExpressionStatement	m_connect_addr = strdup ( addr )	2293:2:60770:60799	2374884	0	True				
ANR	2374903	AssignmentExpression	m_connect_addr = strdup ( addr )		2374884	0		=			
ANR	2374904	Identifier	m_connect_addr		2374884	0					
ANR	2374905	CallExpression	strdup ( addr )		2374884	1					
ANR	2374906	Callee	strdup		2374884	0					
ANR	2374907	Identifier	strdup		2374884	0					
ANR	2374908	ArgumentList	addr		2374884	1					
ANR	2374909	Argument	addr		2374884	0					
ANR	2374910	Identifier	addr		2374884	0					
ANR	2374911	ReturnType	void		2374884	1					
ANR	2374912	Identifier	Sock :: set_connect_addr		2374884	2					
ANR	2374913	ParameterList	char const * addr		2374884	3					
ANR	2374914	Parameter	char const * addr	2288:23:60685:60700	2374884	0	True				
ANR	2374915	ParameterType	char const *		2374884	0					
ANR	2374916	Identifier	addr		2374884	1					
ANR	2374917	CFGEntryNode	ENTRY		2374884		True				
ANR	2374918	CFGExitNode	EXIT		2374884		True				
ANR	2374919	Symbol	m_connect_addr		2374884						
ANR	2374920	Symbol	NULL		2374884						
ANR	2374921	Symbol	strdup		2374884						
ANR	2374922	Symbol	addr		2374884						
ANR	2374923	Function	Sock :: get_connect_addr	2297:0:60807:60871							
ANR	2374924	FunctionDef	Sock :: get_connect_addr ()		2374923	0					
ANR	2374925	CompoundStatement		2299:0:60845:60871	2374923	0					
ANR	2374926	ReturnStatement	return m_connect_addr ;	2300:1:60848:60869	2374923	0	True				
ANR	2374927	Identifier	m_connect_addr		2374923	0					
ANR	2374928	ReturnType	char const *		2374923	1					
ANR	2374929	Identifier	Sock :: get_connect_addr		2374923	2					
ANR	2374930	ParameterList			2374923	3					
ANR	2374931	CFGEntryNode	ENTRY		2374923		True				
ANR	2374932	CFGExitNode	EXIT		2374923		True				
ANR	2374933	Symbol	m_connect_addr		2374923						
ANR	2374934	Function	Sock :: getFullyQualifiedUser	2303:0:60874:60968							
ANR	2374935	FunctionDef	Sock :: getFullyQualifiedUser ()		2374934	0					
ANR	2374936	CompoundStatement		2304:36:60923:60968	2374934	0					
ANR	2374937	ReturnStatement	return _fqu ? _fqu : UNAUTHENTICATED_FQU ;	2305:1:60926:60966	2374934	0	True				
ANR	2374938	ConditionalExpression	_fqu ? _fqu : UNAUTHENTICATED_FQU		2374934	0					
ANR	2374939	Condition	_fqu		2374934	0					
ANR	2374940	Identifier	_fqu		2374934	0					
ANR	2374941	Identifier	_fqu		2374934	1					
ANR	2374942	Identifier	UNAUTHENTICATED_FQU		2374934	2					
ANR	2374943	ReturnType	const char *		2374934	1					
ANR	2374944	Identifier	Sock :: getFullyQualifiedUser		2374934	2					
ANR	2374945	ParameterList			2374934	3					
ANR	2374946	CFGEntryNode	ENTRY		2374934		True				
ANR	2374947	CFGExitNode	EXIT		2374934		True				
ANR	2374948	Symbol	_fqu		2374934						
ANR	2374949	Symbol	UNAUTHENTICATED_FQU		2374934						
ANR	2374950	Function	Sock :: getOwner	2308:0:60971:61073							
ANR	2374951	FunctionDef	Sock :: getOwner ()		2374950	0					
ANR	2374952	CompoundStatement		2309:23:61007:61073	2374950	0					
ANR	2374953	ReturnStatement	return _fqu_user_part ? _fqu_user_part : UNAUTHENTICATED_USER ;	2310:1:61010:61071	2374950	0	True				
ANR	2374954	ConditionalExpression	_fqu_user_part ? _fqu_user_part : UNAUTHENTICATED_USER		2374950	0					
ANR	2374955	Condition	_fqu_user_part		2374950	0					
ANR	2374956	Identifier	_fqu_user_part		2374950	0					
ANR	2374957	Identifier	_fqu_user_part		2374950	1					
ANR	2374958	Identifier	UNAUTHENTICATED_USER		2374950	2					
ANR	2374959	ReturnType	const char *		2374950	1					
ANR	2374960	Identifier	Sock :: getOwner		2374950	2					
ANR	2374961	ParameterList			2374950	3					
ANR	2374962	CFGEntryNode	ENTRY		2374950		True				
ANR	2374963	CFGExitNode	EXIT		2374950		True				
ANR	2374964	Symbol	UNAUTHENTICATED_USER		2374950						
ANR	2374965	Symbol	_fqu_user_part		2374950						
ANR	2374966	Function	Sock :: getDomain	2314:0:61108:61210							
ANR	2374967	FunctionDef	Sock :: getDomain ()		2374966	0					
ANR	2374968	CompoundStatement		2315:24:61145:61210	2374966	0					
ANR	2374969	ReturnStatement	return _fqu_domain_part ? _fqu_domain_part : UNMAPPED_DOMAIN ;	2316:1:61148:61208	2374966	0	True				
ANR	2374970	ConditionalExpression	_fqu_domain_part ? _fqu_domain_part : UNMAPPED_DOMAIN		2374966	0					
ANR	2374971	Condition	_fqu_domain_part		2374966	0					
ANR	2374972	Identifier	_fqu_domain_part		2374966	0					
ANR	2374973	Identifier	_fqu_domain_part		2374966	1					
ANR	2374974	Identifier	UNMAPPED_DOMAIN		2374966	2					
ANR	2374975	ReturnType	const char *		2374966	1					
ANR	2374976	Identifier	Sock :: getDomain		2374966	2					
ANR	2374977	ParameterList			2374966	3					
ANR	2374978	CFGEntryNode	ENTRY		2374966		True				
ANR	2374979	CFGExitNode	EXIT		2374966		True				
ANR	2374980	Symbol	UNMAPPED_DOMAIN		2374966						
ANR	2374981	Symbol	_fqu_domain_part		2374966						
ANR	2374982	Function	Sock :: isMappedFQU	2320:0:61214:61348							
ANR	2374983	FunctionDef	Sock :: isMappedFQU ()		2374982	0					
ANR	2374984	CompoundStatement		2322:0:61245:61348	2374982	0					
ANR	2374985	IfStatement	if ( ! _fqu_domain_part )		2374982	0					
ANR	2374986	Condition	! _fqu_domain_part	2323:5:61252:61268	2374982	0	True				
ANR	2374987	UnaryOperationExpression	! _fqu_domain_part		2374982	0					
ANR	2374988	UnaryOperator	!		2374982	0					
ANR	2374989	Identifier	_fqu_domain_part		2374982	1					
ANR	2374990	CompoundStatement		2:25:26:26	2374982	1					
ANR	2374991	ReturnStatement	return false ;	2324:2:61276:61288	2374982	0	True				
ANR	2374992	Identifier	false		2374982	0					
ANR	2374993	ReturnStatement	"return strcmp ( _fqu_domain_part , UNMAPPED_DOMAIN ) != 0 ;"	2326:1:61294:61346	2374982	1	True				
ANR	2374994	EqualityExpression	"strcmp ( _fqu_domain_part , UNMAPPED_DOMAIN ) != 0"		2374982	0		!=			
ANR	2374995	CallExpression	"strcmp ( _fqu_domain_part , UNMAPPED_DOMAIN )"		2374982	0					
ANR	2374996	Callee	strcmp		2374982	0					
ANR	2374997	Identifier	strcmp		2374982	0					
ANR	2374998	ArgumentList	_fqu_domain_part		2374982	1					
ANR	2374999	Argument	_fqu_domain_part		2374982	0					
ANR	2375000	Identifier	_fqu_domain_part		2374982	0					
ANR	2375001	Argument	UNMAPPED_DOMAIN		2374982	1					
ANR	2375002	Identifier	UNMAPPED_DOMAIN		2374982	0					
ANR	2375003	PrimaryExpression	0		2374982	1					
ANR	2375004	ReturnType	bool		2374982	1					
ANR	2375005	Identifier	Sock :: isMappedFQU		2374982	2					
ANR	2375006	ParameterList			2374982	3					
ANR	2375007	CFGEntryNode	ENTRY		2374982		True				
ANR	2375008	CFGExitNode	EXIT		2374982		True				
ANR	2375009	Symbol	strcmp		2374982						
ANR	2375010	Symbol	UNMAPPED_DOMAIN		2374982						
ANR	2375011	Symbol	false		2374982						
ANR	2375012	Symbol	_fqu_domain_part		2374982						
ANR	2375013	Function	Sock :: isAuthenticated	2329:0:61351:61469							
ANR	2375014	FunctionDef	Sock :: isAuthenticated ()		2375013	0					
ANR	2375015	CompoundStatement		2331:0:61386:61469	2375013	0					
ANR	2375016	IfStatement	if ( ! _fqu )		2375013	0					
ANR	2375017	Condition	! _fqu	2332:5:61393:61397	2375013	0	True				
ANR	2375018	UnaryOperationExpression	! _fqu		2375013	0					
ANR	2375019	UnaryOperator	!		2375013	0					
ANR	2375020	Identifier	_fqu		2375013	1					
ANR	2375021	CompoundStatement		2:13:14:14	2375013	1					
ANR	2375022	ReturnStatement	return false ;	2333:2:61405:61417	2375013	0	True				
ANR	2375023	Identifier	false		2375013	0					
ANR	2375024	ReturnStatement	"return strcmp ( _fqu , UNAUTHENTICATED_FQU ) != 0 ;"	2335:1:61423:61467	2375013	1	True				
ANR	2375025	EqualityExpression	"strcmp ( _fqu , UNAUTHENTICATED_FQU ) != 0"		2375013	0		!=			
ANR	2375026	CallExpression	"strcmp ( _fqu , UNAUTHENTICATED_FQU )"		2375013	0					
ANR	2375027	Callee	strcmp		2375013	0					
ANR	2375028	Identifier	strcmp		2375013	0					
ANR	2375029	ArgumentList	_fqu		2375013	1					
ANR	2375030	Argument	_fqu		2375013	0					
ANR	2375031	Identifier	_fqu		2375013	0					
ANR	2375032	Argument	UNAUTHENTICATED_FQU		2375013	1					
ANR	2375033	Identifier	UNAUTHENTICATED_FQU		2375013	0					
ANR	2375034	PrimaryExpression	0		2375013	1					
ANR	2375035	ReturnType	bool		2375013	1					
ANR	2375036	Identifier	Sock :: isAuthenticated		2375013	2					
ANR	2375037	ParameterList			2375013	3					
ANR	2375038	CFGEntryNode	ENTRY		2375013		True				
ANR	2375039	CFGExitNode	EXIT		2375013		True				
ANR	2375040	Symbol	strcmp		2375013						
ANR	2375041	Symbol	_fqu		2375013						
ANR	2375042	Symbol	false		2375013						
ANR	2375043	Symbol	UNAUTHENTICATED_FQU		2375013						
ANR	2375044	Function	Sock :: wrap	2338:0:61472:61747							
ANR	2375045	FunctionDef	"Sock :: wrap (unsigned char * d_in , int l_in , unsigned char * & d_out , int & l_out)"		2375044	0					
ANR	2375046	CompoundStatement		2341:0:61574:61747	2375044	0					
ANR	2375047	IdentifierDeclStatement	bool coded = false ;	2342:4:61584:61602	2375044	0	True				
ANR	2375048	IdentifierDecl	coded = false		2375044	0					
ANR	2375049	IdentifierDeclType	bool		2375044	0					
ANR	2375050	Identifier	coded		2375044	1					
ANR	2375051	AssignmentExpression	coded = false		2375044	2		=			
ANR	2375052	Identifier	false		2375044	0					
ANR	2375053	Identifier	false		2375044	1					
ANR	2375054	IfStatement	if ( get_encryption ( ) )		2375044	1					
ANR	2375055	Condition	get_encryption ( )	2344:8:61636:61651	2375044	0	True				
ANR	2375056	CallExpression	get_encryption ( )		2375044	0					
ANR	2375057	Callee	get_encryption		2375044	0					
ANR	2375058	Identifier	get_encryption		2375044	0					
ANR	2375059	ArgumentList			2375044	1					
ANR	2375060	CompoundStatement		4:26:79:79	2375044	1					
ANR	2375061	ExpressionStatement	"coded = crypto_ -> encrypt ( d_in , l_in , d_out , l_out )"	2345:8:61664:61714	2375044	0	True				
ANR	2375062	AssignmentExpression	"coded = crypto_ -> encrypt ( d_in , l_in , d_out , l_out )"		2375044	0		=			
ANR	2375063	Identifier	coded		2375044	0					
ANR	2375064	CallExpression	"crypto_ -> encrypt ( d_in , l_in , d_out , l_out )"		2375044	1					
ANR	2375065	Callee	crypto_ -> encrypt		2375044	0					
ANR	2375066	PtrMemberAccess	crypto_ -> encrypt		2375044	0					
ANR	2375067	Identifier	crypto_		2375044	0					
ANR	2375068	Identifier	encrypt		2375044	1					
ANR	2375069	ArgumentList	d_in		2375044	1					
ANR	2375070	Argument	d_in		2375044	0					
ANR	2375071	Identifier	d_in		2375044	0					
ANR	2375072	Argument	l_in		2375044	1					
ANR	2375073	Identifier	l_in		2375044	0					
ANR	2375074	Argument	d_out		2375044	2					
ANR	2375075	Identifier	d_out		2375044	0					
ANR	2375076	Argument	l_out		2375044	3					
ANR	2375077	Identifier	l_out		2375044	0					
ANR	2375078	ReturnStatement	return coded ;	2348:4:61733:61745	2375044	2	True				
ANR	2375079	Identifier	coded		2375044	0					
ANR	2375080	ReturnType	bool		2375044	1					
ANR	2375081	Identifier	Sock :: wrap		2375044	2					
ANR	2375082	ParameterList	"unsigned char * d_in , int l_in , unsigned char * & d_out , int & l_out"		2375044	3					
ANR	2375083	Parameter	unsigned char * d_in	2339:11:61489:61507	2375044	0	True				
ANR	2375084	ParameterType	unsigned char *		2375044	0					
ANR	2375085	Identifier	d_in		2375044	1					
ANR	2375086	Parameter	int l_in	2339:31:61509:61516	2375044	1	True				
ANR	2375087	ParameterType	int		2375044	0					
ANR	2375088	Identifier	l_in		2375044	1					
ANR	2375089	Parameter	unsigned char * & d_out	2340:20:61540:61560	2375044	2	True				
ANR	2375090	ParameterType	unsigned char * &		2375044	0					
ANR	2375091	Identifier	d_out		2375044	1					
ANR	2375092	Parameter	int & l_out	2340:42:61562:61571	2375044	3	True				
ANR	2375093	ParameterType	int &		2375044	0					
ANR	2375094	Identifier	l_out		2375044	1					
ANR	2375095	CFGEntryNode	ENTRY		2375044		True				
ANR	2375096	CFGExitNode	EXIT		2375044		True				
ANR	2375097	Symbol	coded		2375044						
ANR	2375098	Symbol	crypto_		2375044						
ANR	2375099	Symbol	l_out		2375044						
ANR	2375100	Symbol	* crypto_		2375044						
ANR	2375101	Symbol	false		2375044						
ANR	2375102	Symbol	l_in		2375044						
ANR	2375103	Symbol	d_out		2375044						
ANR	2375104	Symbol	d_in		2375044						
ANR	2375105	Symbol	get_encryption		2375044						
ANR	2375106	Symbol	crypto_ -> encrypt		2375044						
ANR	2375107	Function	Sock :: unwrap	2351:0:61750:62025							
ANR	2375108	FunctionDef	"Sock :: unwrap (unsigned char * d_in , int l_in , unsigned char * & d_out , int & l_out)"		2375107	0					
ANR	2375109	CompoundStatement		2354:0:61856:62025	2375107	0					
ANR	2375110	IdentifierDeclStatement	bool coded = false ;	2355:4:61862:61880	2375107	0	True				
ANR	2375111	IdentifierDecl	coded = false		2375107	0					
ANR	2375112	IdentifierDeclType	bool		2375107	0					
ANR	2375113	Identifier	coded		2375107	1					
ANR	2375114	AssignmentExpression	coded = false		2375107	2		=			
ANR	2375115	Identifier	false		2375107	0					
ANR	2375116	Identifier	false		2375107	1					
ANR	2375117	IfStatement	if ( get_encryption ( ) )		2375107	1					
ANR	2375118	Condition	get_encryption ( )	2357:8:61914:61929	2375107	0	True				
ANR	2375119	CallExpression	get_encryption ( )		2375107	0					
ANR	2375120	Callee	get_encryption		2375107	0					
ANR	2375121	Identifier	get_encryption		2375107	0					
ANR	2375122	ArgumentList			2375107	1					
ANR	2375123	CompoundStatement		4:26:75:75	2375107	1					
ANR	2375124	ExpressionStatement	"coded = crypto_ -> decrypt ( d_in , l_in , d_out , l_out )"	2358:8:61942:61992	2375107	0	True				
ANR	2375125	AssignmentExpression	"coded = crypto_ -> decrypt ( d_in , l_in , d_out , l_out )"		2375107	0		=			
ANR	2375126	Identifier	coded		2375107	0					
ANR	2375127	CallExpression	"crypto_ -> decrypt ( d_in , l_in , d_out , l_out )"		2375107	1					
ANR	2375128	Callee	crypto_ -> decrypt		2375107	0					
ANR	2375129	PtrMemberAccess	crypto_ -> decrypt		2375107	0					
ANR	2375130	Identifier	crypto_		2375107	0					
ANR	2375131	Identifier	decrypt		2375107	1					
ANR	2375132	ArgumentList	d_in		2375107	1					
ANR	2375133	Argument	d_in		2375107	0					
ANR	2375134	Identifier	d_in		2375107	0					
ANR	2375135	Argument	l_in		2375107	1					
ANR	2375136	Identifier	l_in		2375107	0					
ANR	2375137	Argument	d_out		2375107	2					
ANR	2375138	Identifier	d_out		2375107	0					
ANR	2375139	Argument	l_out		2375107	3					
ANR	2375140	Identifier	l_out		2375107	0					
ANR	2375141	ReturnStatement	return coded ;	2361:4:62011:62023	2375107	2	True				
ANR	2375142	Identifier	coded		2375107	0					
ANR	2375143	ReturnType	bool		2375107	1					
ANR	2375144	Identifier	Sock :: unwrap		2375107	2					
ANR	2375145	ParameterList	"unsigned char * d_in , int l_in , unsigned char * & d_out , int & l_out"		2375107	3					
ANR	2375146	Parameter	unsigned char * d_in	2352:13:61769:61787	2375107	0	True				
ANR	2375147	ParameterType	unsigned char *		2375107	0					
ANR	2375148	Identifier	d_in		2375107	1					
ANR	2375149	Parameter	int l_in	2352:33:61789:61796	2375107	1	True				
ANR	2375150	ParameterType	int		2375107	0					
ANR	2375151	Identifier	l_in		2375107	1					
ANR	2375152	Parameter	unsigned char * & d_out	2353:22:61821:61841	2375107	2	True				
ANR	2375153	ParameterType	unsigned char * &		2375107	0					
ANR	2375154	Identifier	d_out		2375107	1					
ANR	2375155	Parameter	int & l_out	2353:45:61844:61853	2375107	3	True				
ANR	2375156	ParameterType	int &		2375107	0					
ANR	2375157	Identifier	l_out		2375107	1					
ANR	2375158	CFGEntryNode	ENTRY		2375107		True				
ANR	2375159	CFGExitNode	EXIT		2375107		True				
ANR	2375160	Symbol	coded		2375107						
ANR	2375161	Symbol	crypto_		2375107						
ANR	2375162	Symbol	crypto_ -> decrypt		2375107						
ANR	2375163	Symbol	l_out		2375107						
ANR	2375164	Symbol	* crypto_		2375107						
ANR	2375165	Symbol	false		2375107						
ANR	2375166	Symbol	l_in		2375107						
ANR	2375167	Symbol	d_out		2375107						
ANR	2375168	Symbol	d_in		2375107						
ANR	2375169	Symbol	get_encryption		2375107						
ANR	2375170	Function	Sock :: resetCrypto	2364:0:62028:62134							
ANR	2375171	FunctionDef	Sock :: resetCrypto ()		2375170	0					
ANR	2375172	CompoundStatement		2365:0:62053:62134	2375170	0					
ANR	2375173	IfStatement	if ( crypto_ )		2375170	0					
ANR	2375174	Condition	crypto_	2367:6:62085:62091	2375170	0	True				
ANR	2375175	Identifier	crypto_		2375170	0					
ANR	2375176	CompoundStatement		3:15:40:40	2375170	1					
ANR	2375177	ExpressionStatement	crypto_ -> resetState ( )	2368:4:62100:62121	2375170	0	True				
ANR	2375178	CallExpression	crypto_ -> resetState ( )		2375170	0					
ANR	2375179	Callee	crypto_ -> resetState		2375170	0					
ANR	2375180	PtrMemberAccess	crypto_ -> resetState		2375170	0					
ANR	2375181	Identifier	crypto_		2375170	0					
ANR	2375182	Identifier	resetState		2375170	1					
ANR	2375183	ArgumentList			2375170	1					
ANR	2375184	ReturnType	void		2375170	1					
ANR	2375185	Identifier	Sock :: resetCrypto		2375170	2					
ANR	2375186	ParameterList			2375170	3					
ANR	2375187	CFGEntryNode	ENTRY		2375170		True				
ANR	2375188	CFGExitNode	EXIT		2375170		True				
ANR	2375189	Symbol	crypto_		2375170						
ANR	2375190	Function	Sock :: initialize_crypto	2373:0:62137:62665							
ANR	2375191	FunctionDef	Sock :: initialize_crypto (KeyInfo * key)		2375190	0					
ANR	2375192	CompoundStatement		2375:0:62183:62665	2375190	0					
ANR	2375193	Statement	delete	2376:4:62189:62194	2375190	0	True				
ANR	2375194	ExpressionStatement	crypto_	2376:11:62196:62203	2375190	1	True				
ANR	2375195	Identifier	crypto_		2375190	0					
ANR	2375196	ExpressionStatement	crypto_ = 0	2377:4:62209:62220	2375190	2	True				
ANR	2375197	AssignmentExpression	crypto_ = 0		2375190	0		=			
ANR	2375198	Identifier	crypto_		2375190	0					
ANR	2375199	PrimaryExpression	0		2375190	1					
ANR	2375200	ExpressionStatement	crypto_mode_ = false	2378:1:62223:62243	2375190	3	True				
ANR	2375201	AssignmentExpression	crypto_mode_ = false		2375190	0		=			
ANR	2375202	Identifier	crypto_mode_		2375190	0					
ANR	2375203	Identifier	false		2375190	1					
ANR	2375204	IfStatement	if ( key )		2375190	4					
ANR	2375205	Condition	key	2381:8:62299:62301	2375190	0	True				
ANR	2375206	Identifier	key		2375190	0					
ANR	2375207	CompoundStatement		7:13:120:120	2375190	1					
ANR	2375208	SwitchStatement	switch ( key -> getProtocol ( ) )		2375190	0					
ANR	2375209	Condition	key -> getProtocol ( )	2382:16:62322:62339	2375190	0	True				
ANR	2375210	CallExpression	key -> getProtocol ( )		2375190	0					
ANR	2375211	Callee	key -> getProtocol		2375190	0					
ANR	2375212	PtrMemberAccess	key -> getProtocol		2375190	0					
ANR	2375213	Identifier	key		2375190	0					
ANR	2375214	Identifier	getProtocol		2375190	1					
ANR	2375215	ArgumentList			2375190	1					
ANR	2375216	CompoundStatement		9:8:167:167	2375190	1					
ANR	2375217	Label	case CONDOR_BLOWFISH :	2385:8:62385:62406	2375190	0	True				
ANR	2375218	Identifier	CONDOR_BLOWFISH		2375190	0					
ANR	2375219	ExpressionStatement	crypto_ = new Condor_Crypt_Blowfish ( * key )	2386:12:62420:62461	2375190	1	True				
ANR	2375220	AssignmentExpression	crypto_ = new Condor_Crypt_Blowfish ( * key )		2375190	0		=			
ANR	2375221	Identifier	crypto_		2375190	0					
ANR	2375222	UnaryOperationExpression	* key		2375190	1					
ANR	2375223	UnaryOperator	*		2375190	0					
ANR	2375224	Identifier	key		2375190	1					
ANR	2375225	BreakStatement	break ;	2387:12:62475:62480	2375190	2	True				
ANR	2375226	Label	case CONDOR_3DES :	2388:8:62490:62506	2375190	3	True				
ANR	2375227	Identifier	CONDOR_3DES		2375190	0					
ANR	2375228	ExpressionStatement	crypto_ = new Condor_Crypt_3des ( * key )	2389:12:62520:62557	2375190	4	True				
ANR	2375229	AssignmentExpression	crypto_ = new Condor_Crypt_3des ( * key )		2375190	0		=			
ANR	2375230	Identifier	crypto_		2375190	0					
ANR	2375231	UnaryOperationExpression	* key		2375190	1					
ANR	2375232	UnaryOperator	*		2375190	0					
ANR	2375233	Identifier	key		2375190	1					
ANR	2375234	BreakStatement	break ;	2390:12:62571:62576	2375190	5	True				
ANR	2375235	Label	default :	2392:8:62593:62600	2375190	6	True				
ANR	2375236	Identifier	default		2375190	0					
ANR	2375237	BreakStatement	break ;	2393:12:62614:62619	2375190	7	True				
ANR	2375238	ReturnStatement	return ( crypto_ != 0 ) ;	2397:4:62642:62663	2375190	5	True				
ANR	2375239	EqualityExpression	crypto_ != 0		2375190	0		!=			
ANR	2375240	Identifier	crypto_		2375190	0					
ANR	2375241	PrimaryExpression	0		2375190	1					
ANR	2375242	ReturnType	bool		2375190	1					
ANR	2375243	Identifier	Sock :: initialize_crypto		2375190	2					
ANR	2375244	ParameterList	KeyInfo * key		2375190	3					
ANR	2375245	Parameter	KeyInfo * key	2374:24:62167:62179	2375190	0	True				
ANR	2375246	ParameterType	KeyInfo *		2375190	0					
ANR	2375247	Identifier	key		2375190	1					
ANR	2375248	CFGEntryNode	ENTRY		2375190		True				
ANR	2375249	CFGExitNode	EXIT		2375190		True				
ANR	2375250	Symbol	crypto_		2375190						
ANR	2375251	Symbol	crypto_mode_		2375190						
ANR	2375252	Symbol	false		2375190						
ANR	2375253	Symbol	* key		2375190						
ANR	2375254	Symbol	key		2375190						
ANR	2375255	Symbol	key -> getProtocol		2375190						
ANR	2375256	Function	Sock :: set_MD_mode	2400:0:62668:62902							
ANR	2375257	FunctionDef	"Sock :: set_MD_mode (CONDOR_MD_MODE mode , KeyInfo * key , const char * keyId)"		2375256	0					
ANR	2375258	CompoundStatement		2401:0:62747:62902	2375256	0					
ANR	2375259	ExpressionStatement	mdMode_ = mode	2402:4:62753:62767	2375256	0	True				
ANR	2375260	AssignmentExpression	mdMode_ = mode		2375256	0		=			
ANR	2375261	Identifier	mdMode_		2375256	0					
ANR	2375262	Identifier	mode		2375256	1					
ANR	2375263	Statement	delete	2403:4:62773:62778	2375256	1	True				
ANR	2375264	ExpressionStatement	mdKey_	2403:11:62780:62786	2375256	2	True				
ANR	2375265	Identifier	mdKey_		2375256	0					
ANR	2375266	ExpressionStatement	mdKey_ = 0	2404:4:62792:62802	2375256	3	True				
ANR	2375267	AssignmentExpression	mdKey_ = 0		2375256	0		=			
ANR	2375268	Identifier	mdKey_		2375256	0					
ANR	2375269	PrimaryExpression	0		2375256	1					
ANR	2375270	IfStatement	if ( key )		2375256	4					
ANR	2375271	Condition	key	2405:8:62812:62814	2375256	0	True				
ANR	2375272	Identifier	key		2375256	0					
ANR	2375273	CompoundStatement		5:13:69:69	2375256	1					
ANR	2375274	ExpressionStatement	mdKey_ = new KeyInfo ( * key )	2406:6:62825:62852	2375256	0	True				
ANR	2375275	AssignmentExpression	mdKey_ = new KeyInfo ( * key )		2375256	0		=			
ANR	2375276	Identifier	mdKey_		2375256	0					
ANR	2375277	UnaryOperationExpression	* key		2375256	1					
ANR	2375278	UnaryOperator	*		2375256	0					
ANR	2375279	Identifier	key		2375256	1					
ANR	2375280	ReturnStatement	"return init_MD ( mode , mdKey_ , keyId ) ;"	2409:4:62865:62900	2375256	5	True				
ANR	2375281	CallExpression	"init_MD ( mode , mdKey_ , keyId )"		2375256	0					
ANR	2375282	Callee	init_MD		2375256	0					
ANR	2375283	Identifier	init_MD		2375256	0					
ANR	2375284	ArgumentList	mode		2375256	1					
ANR	2375285	Argument	mode		2375256	0					
ANR	2375286	Identifier	mode		2375256	0					
ANR	2375287	Argument	mdKey_		2375256	1					
ANR	2375288	Identifier	mdKey_		2375256	0					
ANR	2375289	Argument	keyId		2375256	2					
ANR	2375290	Identifier	keyId		2375256	0					
ANR	2375291	ReturnType	bool		2375256	1					
ANR	2375292	Identifier	Sock :: set_MD_mode		2375256	2					
ANR	2375293	ParameterList	"CONDOR_MD_MODE mode , KeyInfo * key , const char * keyId"		2375256	3					
ANR	2375294	Parameter	CONDOR_MD_MODE mode	2400:23:62691:62709	2375256	0	True				
ANR	2375295	ParameterType	CONDOR_MD_MODE		2375256	0					
ANR	2375296	Identifier	mode		2375256	1					
ANR	2375297	Parameter	KeyInfo * key	2400:44:62712:62724	2375256	1	True				
ANR	2375298	ParameterType	KeyInfo *		2375256	0					
ANR	2375299	Identifier	key		2375256	1					
ANR	2375300	Parameter	const char * keyId	2400:59:62727:62744	2375256	2	True				
ANR	2375301	ParameterType	const char *		2375256	0					
ANR	2375302	Identifier	keyId		2375256	1					
ANR	2375303	CFGEntryNode	ENTRY		2375256		True				
ANR	2375304	CFGExitNode	EXIT		2375256		True				
ANR	2375305	Symbol	mode		2375256						
ANR	2375306	Symbol	mdKey_		2375256						
ANR	2375307	Symbol	init_MD		2375256						
ANR	2375308	Symbol	keyId		2375256						
ANR	2375309	Symbol	mdMode_		2375256						
ANR	2375310	Symbol	* key		2375256						
ANR	2375311	Symbol	key		2375256						
ANR	2375312	Function	Sock :: get_crypto_key	2412:0:62905:63150							
ANR	2375313	FunctionDef	Sock :: get_crypto_key ()		2375312	0					
ANR	2375314	CompoundStatement		2413:0:62951:63150	2375312	0					
ANR	2375315	IfStatement	if ( crypto_ )		2375312	0					
ANR	2375316	Condition	crypto_	2415:8:62985:62991	2375312	0	True				
ANR	2375317	Identifier	crypto_		2375312	0					
ANR	2375318	CompoundStatement		3:17:42:42	2375312	1					
ANR	2375319	ReturnStatement	return crypto_ -> get_key ( ) ;	2416:8:63004:63029	2375312	0	True				
ANR	2375320	CallExpression	crypto_ -> get_key ( )		2375312	0					
ANR	2375321	Callee	crypto_ -> get_key		2375312	0					
ANR	2375322	PtrMemberAccess	crypto_ -> get_key		2375312	0					
ANR	2375323	Identifier	crypto_		2375312	0					
ANR	2375324	Identifier	get_key		2375312	1					
ANR	2375325	ArgumentList			2375312	1					
ANR	2375326	ExpressionStatement	ASSERT ( 0 )	2419:4:63048:63057	2375312	1	True				
ANR	2375327	CallExpression	ASSERT ( 0 )		2375312	0					
ANR	2375328	Callee	ASSERT		2375312	0					
ANR	2375329	Identifier	ASSERT		2375312	0					
ANR	2375330	ArgumentList	0		2375312	1					
ANR	2375331	Argument	0		2375312	0					
ANR	2375332	PrimaryExpression	0		2375312	0					
ANR	2375333	ReturnStatement	return crypto_ -> get_key ( ) ;	2420:1:63087:63113	2375312	2	True				
ANR	2375334	CallExpression	crypto_ -> get_key ( )		2375312	0					
ANR	2375335	Callee	crypto_ -> get_key		2375312	0					
ANR	2375336	PtrMemberAccess	crypto_ -> get_key		2375312	0					
ANR	2375337	Identifier	crypto_		2375312	0					
ANR	2375338	Identifier	get_key		2375312	1					
ANR	2375339	ArgumentList			2375312	1					
ANR	2375340	ReturnType	const KeyInfo &		2375312	1					
ANR	2375341	Identifier	Sock :: get_crypto_key		2375312	2					
ANR	2375342	ParameterList			2375312	3					
ANR	2375343	CFGEntryNode	ENTRY		2375312		True				
ANR	2375344	CFGExitNode	EXIT		2375312		True				
ANR	2375345	Symbol	crypto_		2375312						
ANR	2375346	Symbol	crypto_ -> get_key		2375312						
ANR	2375347	Symbol	* crypto_		2375312						
ANR	2375348	Function	Sock :: get_md_key	2423:0:63153:63311							
ANR	2375349	FunctionDef	Sock :: get_md_key ()		2375348	0					
ANR	2375350	CompoundStatement		2424:0:63195:63311	2375348	0					
ANR	2375351	IfStatement	if ( mdKey_ )		2375348	0					
ANR	2375352	Condition	mdKey_	2426:8:63229:63234	2375348	0	True				
ANR	2375353	Identifier	mdKey_		2375348	0					
ANR	2375354	CompoundStatement		3:16:41:41	2375348	1					
ANR	2375355	ReturnStatement	return * mdKey_ ;	2427:8:63247:63261	2375348	0	True				
ANR	2375356	UnaryOperationExpression	* mdKey_		2375348	0					
ANR	2375357	UnaryOperator	*		2375348	0					
ANR	2375358	Identifier	mdKey_		2375348	1					
ANR	2375359	ExpressionStatement	ASSERT ( 0 )	2430:4:63280:63289	2375348	1	True				
ANR	2375360	CallExpression	ASSERT ( 0 )		2375348	0					
ANR	2375361	Callee	ASSERT		2375348	0					
ANR	2375362	Identifier	ASSERT		2375348	0					
ANR	2375363	ArgumentList	0		2375348	1					
ANR	2375364	Argument	0		2375348	0					
ANR	2375365	PrimaryExpression	0		2375348	0					
ANR	2375366	ReturnStatement	return * mdKey_ ;	2431:4:63295:63309	2375348	2	True				
ANR	2375367	UnaryOperationExpression	* mdKey_		2375348	0					
ANR	2375368	UnaryOperator	*		2375348	0					
ANR	2375369	Identifier	mdKey_		2375348	1					
ANR	2375370	ReturnType	const KeyInfo &		2375348	1					
ANR	2375371	Identifier	Sock :: get_md_key		2375348	2					
ANR	2375372	ParameterList			2375348	3					
ANR	2375373	CFGEntryNode	ENTRY		2375348		True				
ANR	2375374	CFGExitNode	EXIT		2375348		True				
ANR	2375375	Symbol	* mdKey_		2375348						
ANR	2375376	Symbol	mdKey_		2375348						
ANR	2375377	Function	Sock :: set_crypto_key	2435:0:63315:64314							
ANR	2375378	FunctionDef	"Sock :: set_crypto_key (bool enable , KeyInfo * key , const char * keyId)"		2375377	0					
ANR	2375379	CompoundStatement		2437:0:63390:64314	2375377	0					
ANR	2375380	IdentifierDeclStatement	bool inited = true ;	2438:4:63396:63414	2375377	0	True				
ANR	2375381	IdentifierDecl	inited = true		2375377	0					
ANR	2375382	IdentifierDeclType	bool		2375377	0					
ANR	2375383	Identifier	inited		2375377	1					
ANR	2375384	AssignmentExpression	inited = true		2375377	2		=			
ANR	2375385	Identifier	true		2375377	0					
ANR	2375386	Identifier	true		2375377	1					
ANR	2375387	IfStatement	if ( key != 0 )		2375377	1					
ANR	2375388	Condition	key != 0	2441:8:63449:63456	2375377	0	True				
ANR	2375389	EqualityExpression	key != 0		2375377	0		!=			
ANR	2375390	Identifier	key		2375377	0					
ANR	2375391	PrimaryExpression	0		2375377	1					
ANR	2375392	CompoundStatement		5:18:68:68	2375377	1					
ANR	2375393	ExpressionStatement	inited = initialize_crypto ( key )	2442:8:63469:63500	2375377	0	True				
ANR	2375394	AssignmentExpression	inited = initialize_crypto ( key )		2375377	0		=			
ANR	2375395	Identifier	inited		2375377	0					
ANR	2375396	CallExpression	initialize_crypto ( key )		2375377	1					
ANR	2375397	Callee	initialize_crypto		2375377	0					
ANR	2375398	Identifier	initialize_crypto		2375377	0					
ANR	2375399	ArgumentList	key		2375377	1					
ANR	2375400	Argument	key		2375377	0					
ANR	2375401	Identifier	key		2375377	0					
ANR	2375402	ElseStatement	else		2375377	0					
ANR	2375403	CompoundStatement		8:9:126:126	2375377	0					
ANR	2375404	IfStatement	if ( crypto_ )		2375377	0					
ANR	2375405	Condition	crypto_	2446:12:63572:63578	2375377	0	True				
ANR	2375406	Identifier	crypto_		2375377	0					
ANR	2375407	CompoundStatement		10:21:190:190	2375377	1					
ANR	2375408	Statement	delete	2447:12:63595:63600	2375377	0	True				
ANR	2375409	ExpressionStatement	crypto_	2447:19:63602:63609	2375377	1	True				
ANR	2375410	Identifier	crypto_		2375377	0					
ANR	2375411	ExpressionStatement	crypto_ = 0	2448:12:63623:63634	2375377	2	True				
ANR	2375412	AssignmentExpression	crypto_ = 0		2375377	0		=			
ANR	2375413	Identifier	crypto_		2375377	0					
ANR	2375414	PrimaryExpression	0		2375377	1					
ANR	2375415	ExpressionStatement	crypto_mode_ = false	2449:3:63639:63659	2375377	3	True				
ANR	2375416	AssignmentExpression	crypto_mode_ = false		2375377	0		=			
ANR	2375417	Identifier	crypto_mode_		2375377	0					
ANR	2375418	Identifier	false		2375377	1					
ANR	2375419	ExpressionStatement	ASSERT ( keyId == 0 )	2451:8:63679:63697	2375377	1	True				
ANR	2375420	CallExpression	ASSERT ( keyId == 0 )		2375377	0					
ANR	2375421	Callee	ASSERT		2375377	0					
ANR	2375422	Identifier	ASSERT		2375377	0					
ANR	2375423	ArgumentList	keyId == 0		2375377	1					
ANR	2375424	Argument	keyId == 0		2375377	0					
ANR	2375425	EqualityExpression	keyId == 0		2375377	0		==			
ANR	2375426	Identifier	keyId		2375377	0					
ANR	2375427	PrimaryExpression	0		2375377	1					
ANR	2375428	ExpressionStatement	ASSERT ( enable == false )	2452:8:63707:63730	2375377	2	True				
ANR	2375429	CallExpression	ASSERT ( enable == false )		2375377	0					
ANR	2375430	Callee	ASSERT		2375377	0					
ANR	2375431	Identifier	ASSERT		2375377	0					
ANR	2375432	ArgumentList	enable == false		2375377	1					
ANR	2375433	Argument	enable == false		2375377	0					
ANR	2375434	EqualityExpression	enable == false		2375377	0		==			
ANR	2375435	Identifier	enable		2375377	0					
ANR	2375436	Identifier	false		2375377	1					
ANR	2375437	ExpressionStatement	inited = true	2453:8:63740:63753	2375377	3	True				
ANR	2375438	AssignmentExpression	inited = true		2375377	0		=			
ANR	2375439	Identifier	inited		2375377	0					
ANR	2375440	Identifier	true		2375377	1					
ANR	2375441	IfStatement	if ( inited )		2375377	2					
ANR	2375442	Condition	inited	2457:8:63832:63837	2375377	0	True				
ANR	2375443	Identifier	inited		2375377	0					
ANR	2375444	CompoundStatement		21:16:449:449	2375377	1					
ANR	2375445	IfStatement	if ( enable )		2375377	0					
ANR	2375446	Condition	enable	2458:6:63848:63853	2375377	0	True				
ANR	2375447	Identifier	enable		2375377	0					
ANR	2375448	CompoundStatement		22:15:466:466	2375377	1					
ANR	2375449	ExpressionStatement	set_encryption_id ( keyId )	2465:3:64200:64224	2375377	0	True				
ANR	2375450	CallExpression	set_encryption_id ( keyId )		2375377	0					
ANR	2375451	Callee	set_encryption_id		2375377	0					
ANR	2375452	Identifier	set_encryption_id		2375377	0					
ANR	2375453	ArgumentList	keyId		2375377	1					
ANR	2375454	Argument	keyId		2375377	0					
ANR	2375455	Identifier	keyId		2375377	0					
ANR	2375456	ExpressionStatement	set_crypto_mode ( enable )	2467:2:64232:64255	2375377	1	True				
ANR	2375457	CallExpression	set_crypto_mode ( enable )		2375377	0					
ANR	2375458	Callee	set_crypto_mode		2375377	0					
ANR	2375459	Identifier	set_crypto_mode		2375377	0					
ANR	2375460	ArgumentList	enable		2375377	1					
ANR	2375461	Argument	enable		2375377	0					
ANR	2375462	Identifier	enable		2375377	0					
ANR	2375463	ReturnStatement	return inited ;	2472:4:64299:64312	2375377	3	True				
ANR	2375464	Identifier	inited		2375377	0					
ANR	2375465	ReturnType	bool		2375377	1					
ANR	2375466	Identifier	Sock :: set_crypto_key		2375377	2					
ANR	2375467	ParameterList	"bool enable , KeyInfo * key , const char * keyId"		2375377	3					
ANR	2375468	Parameter	bool enable	2436:21:63342:63352	2375377	0	True				
ANR	2375469	ParameterType	bool		2375377	0					
ANR	2375470	Identifier	enable		2375377	1					
ANR	2375471	Parameter	KeyInfo * key	2436:34:63355:63367	2375377	1	True				
ANR	2375472	ParameterType	KeyInfo *		2375377	0					
ANR	2375473	Identifier	key		2375377	1					
ANR	2375474	Parameter	const char * keyId	2436:49:63370:63387	2375377	2	True				
ANR	2375475	ParameterType	const char *		2375377	0					
ANR	2375476	Identifier	keyId		2375377	1					
ANR	2375477	CFGEntryNode	ENTRY		2375377		True				
ANR	2375478	CFGExitNode	EXIT		2375377		True				
ANR	2375479	Symbol	crypto_		2375377						
ANR	2375480	Symbol	initialize_crypto		2375377						
ANR	2375481	Symbol	inited		2375377						
ANR	2375482	Symbol	crypto_mode_		2375377						
ANR	2375483	Symbol	enable		2375377						
ANR	2375484	Symbol	true		2375377						
ANR	2375485	Symbol	false		2375377						
ANR	2375486	Symbol	keyId		2375377						
ANR	2375487	Symbol	key		2375377						
ANR	2375488	Function	Sock :: canEncrypt	2475:0:64317:64368							
ANR	2375489	FunctionDef	Sock :: canEncrypt ()		2375488	0					
ANR	2375490	CompoundStatement		2477:0:64341:64368	2375488	0					
ANR	2375491	ReturnStatement	return crypto_ != NULL ;	2478:1:64344:64366	2375488	0	True				
ANR	2375492	EqualityExpression	crypto_ != NULL		2375488	0		!=			
ANR	2375493	Identifier	crypto_		2375488	0					
ANR	2375494	Identifier	NULL		2375488	1					
ANR	2375495	ReturnType	bool		2375488	1					
ANR	2375496	Identifier	Sock :: canEncrypt		2375488	2					
ANR	2375497	ParameterList			2375488	3					
ANR	2375498	CFGEntryNode	ENTRY		2375488		True				
ANR	2375499	CFGExitNode	EXIT		2375488		True				
ANR	2375500	Symbol	crypto_		2375488						
ANR	2375501	Symbol	NULL		2375488						
