command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3157334	File	data/converged/CVE-2011-4930_htcondor/src_condor_dagman_node_scheduler_Superdag.cpp								
ANR	3157335	Function	Superdag :: Superdag	48:0:1514:11556							
ANR	3157336	FunctionDef	Superdag :: Superdag (const Dag & g)		3157335	0					
ANR	3157337	CompoundStatement		49:0:1547:11556	3157335	0					
ANR	3157338	IdentifierDeclStatement	"int i , j , color ;"	50:1:1550:1563	3157335	0	True				
ANR	3157339	IdentifierDecl	i		3157335	0					
ANR	3157340	IdentifierDeclType	int		3157335	0					
ANR	3157341	Identifier	i		3157335	1					
ANR	3157342	IdentifierDecl	j		3157335	1					
ANR	3157343	IdentifierDeclType	int		3157335	0					
ANR	3157344	Identifier	j		3157335	1					
ANR	3157345	IdentifierDecl	color		3157335	2					
ANR	3157346	IdentifierDeclType	int		3157335	0					
ANR	3157347	Identifier	color		3157335	1					
ANR	3157348	IdentifierDeclStatement	Dag skeleton ;	53:1:1591:1603	3157335	1	True				
ANR	3157349	IdentifierDecl	skeleton		3157335	0					
ANR	3157350	IdentifierDeclType	Dag		3157335	0					
ANR	3157351	Identifier	skeleton		3157335	1					
ANR	3157352	ExpressionStatement	skeleton . initializeWith ( g )	54:1:1606:1632	3157335	2	True				
ANR	3157353	CallExpression	skeleton . initializeWith ( g )		3157335	0					
ANR	3157354	Callee	skeleton . initializeWith		3157335	0					
ANR	3157355	MemberAccess	skeleton . initializeWith		3157335	0					
ANR	3157356	Identifier	skeleton		3157335	0					
ANR	3157357	Identifier	initializeWith		3157335	1					
ANR	3157358	ArgumentList	g		3157335	1					
ANR	3157359	Argument	g		3157335	0					
ANR	3157360	Identifier	g		3157335	0					
ANR	3157361	ExpressionStatement	skeleton . skeletonize ( )	55:1:1635:1657	3157335	3	True				
ANR	3157362	CallExpression	skeleton . skeletonize ( )		3157335	0					
ANR	3157363	Callee	skeleton . skeletonize		3157335	0					
ANR	3157364	MemberAccess	skeleton . skeletonize		3157335	0					
ANR	3157365	Identifier	skeleton		3157335	0					
ANR	3157366	Identifier	skeletonize		3157335	1					
ANR	3157367	ArgumentList			3157335	1					
ANR	3157368	IdentifierDeclStatement	int * numberOfParents ;	61:1:1905:1925	3157335	4	True				
ANR	3157369	IdentifierDecl	* numberOfParents		3157335	0					
ANR	3157370	IdentifierDeclType	int *		3157335	0					
ANR	3157371	Identifier	numberOfParents		3157335	1					
ANR	3157372	ExpressionStatement	numberOfParents = skeleton . getParentCountVector ( )	62:1:1928:1977	3157335	5	True				
ANR	3157373	AssignmentExpression	numberOfParents = skeleton . getParentCountVector ( )		3157335	0		=			
ANR	3157374	Identifier	numberOfParents		3157335	0					
ANR	3157375	CallExpression	skeleton . getParentCountVector ( )		3157335	1					
ANR	3157376	Callee	skeleton . getParentCountVector		3157335	0					
ANR	3157377	MemberAccess	skeleton . getParentCountVector		3157335	0					
ANR	3157378	Identifier	skeleton		3157335	0					
ANR	3157379	Identifier	getParentCountVector		3157335	1					
ANR	3157380	ArgumentList			3157335	1					
ANR	3157381	IdentifierDeclStatement	Dag reversed ;	65:1:2052:2064	3157335	6	True				
ANR	3157382	IdentifierDecl	reversed		3157335	0					
ANR	3157383	IdentifierDeclType	Dag		3157335	0					
ANR	3157384	Identifier	reversed		3157335	1					
ANR	3157385	ExpressionStatement	reversed . initializeWith ( skeleton )	66:1:2067:2100	3157335	7	True				
ANR	3157386	CallExpression	reversed . initializeWith ( skeleton )		3157335	0					
ANR	3157387	Callee	reversed . initializeWith		3157335	0					
ANR	3157388	MemberAccess	reversed . initializeWith		3157335	0					
ANR	3157389	Identifier	reversed		3157335	0					
ANR	3157390	Identifier	initializeWith		3157335	1					
ANR	3157391	ArgumentList	skeleton		3157335	1					
ANR	3157392	Argument	skeleton		3157335	0					
ANR	3157393	Identifier	skeleton		3157335	0					
ANR	3157394	ExpressionStatement	reversed . reverseArcs ( )	67:1:2103:2125	3157335	8	True				
ANR	3157395	CallExpression	reversed . reverseArcs ( )		3157335	0					
ANR	3157396	Callee	reversed . reverseArcs		3157335	0					
ANR	3157397	MemberAccess	reversed . reverseArcs		3157335	0					
ANR	3157398	Identifier	reversed		3157335	0					
ANR	3157399	Identifier	reverseArcs		3157335	1					
ANR	3157400	ArgumentList			3157335	1					
ANR	3157401	IdentifierDeclStatement	int numNodes = skeleton . getNumNodes ( ) ;	70:1:2159:2196	3157335	9	True				
ANR	3157402	IdentifierDecl	numNodes = skeleton . getNumNodes ( )		3157335	0					
ANR	3157403	IdentifierDeclType	int		3157335	0					
ANR	3157404	Identifier	numNodes		3157335	1					
ANR	3157405	AssignmentExpression	numNodes = skeleton . getNumNodes ( )		3157335	2		=			
ANR	3157406	Identifier	numNodes		3157335	0					
ANR	3157407	CallExpression	skeleton . getNumNodes ( )		3157335	1					
ANR	3157408	Callee	skeleton . getNumNodes		3157335	0					
ANR	3157409	MemberAccess	skeleton . getNumNodes		3157335	0					
ANR	3157410	Identifier	skeleton		3157335	0					
ANR	3157411	Identifier	getNumNodes		3157335	1					
ANR	3157412	ArgumentList			3157335	1					
ANR	3157413	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		3157335	10					
ANR	3157414	ForInit	i = 0 ;	71:6:2204:2207	3157335	0	True				
ANR	3157415	AssignmentExpression	i = 0		3157335	0		=			
ANR	3157416	Identifier	i		3157335	0					
ANR	3157417	PrimaryExpression	0		3157335	1					
ANR	3157418	Condition	i < numNodes	71:11:2209:2218	3157335	1	True				
ANR	3157419	RelationalExpression	i < numNodes		3157335	0		<			
ANR	3157420	Identifier	i		3157335	0					
ANR	3157421	Identifier	numNodes		3157335	1					
ANR	3157422	PostIncDecOperationExpression	i ++	71:23:2221:2223	3157335	2	True				
ANR	3157423	Identifier	i		3157335	0					
ANR	3157424	IncDec	++		3157335	1					
ANR	3157425	CompoundStatement		23:29:679:679	3157335	3					
ANR	3157426	IfStatement	if ( 0 == skeleton . getNumArcs ( i ) && 0 == reversed . getNumArcs ( i ) )		3157335	0					
ANR	3157427	Condition	0 == skeleton . getNumArcs ( i ) && 0 == reversed . getNumArcs ( i )	72:6:2235:2288	3157335	0	True				
ANR	3157428	AndExpression	0 == skeleton . getNumArcs ( i ) && 0 == reversed . getNumArcs ( i )		3157335	0		&&			
ANR	3157429	EqualityExpression	0 == skeleton . getNumArcs ( i )		3157335	0		==			
ANR	3157430	PrimaryExpression	0		3157335	0					
ANR	3157431	CallExpression	skeleton . getNumArcs ( i )		3157335	1					
ANR	3157432	Callee	skeleton . getNumArcs		3157335	0					
ANR	3157433	MemberAccess	skeleton . getNumArcs		3157335	0					
ANR	3157434	Identifier	skeleton		3157335	0					
ANR	3157435	Identifier	getNumArcs		3157335	1					
ANR	3157436	ArgumentList	i		3157335	1					
ANR	3157437	Argument	i		3157335	0					
ANR	3157438	Identifier	i		3157335	0					
ANR	3157439	EqualityExpression	0 == reversed . getNumArcs ( i )		3157335	1		==			
ANR	3157440	PrimaryExpression	0		3157335	0					
ANR	3157441	CallExpression	reversed . getNumArcs ( i )		3157335	1					
ANR	3157442	Callee	reversed . getNumArcs		3157335	0					
ANR	3157443	MemberAccess	reversed . getNumArcs		3157335	0					
ANR	3157444	Identifier	reversed		3157335	0					
ANR	3157445	Identifier	getNumArcs		3157335	1					
ANR	3157446	ArgumentList	i		3157335	1					
ANR	3157447	Argument	i		3157335	0					
ANR	3157448	Identifier	i		3157335	0					
ANR	3157449	CompoundStatement		24:63:744:744	3157335	1					
ANR	3157450	ExpressionStatement	numberOfParents [ i ] = - 1	77:3:2440:2463	3157335	0	True				
ANR	3157451	AssignmentExpression	numberOfParents [ i ] = - 1		3157335	0		=			
ANR	3157452	ArrayIndexing	numberOfParents [ i ]		3157335	0					
ANR	3157453	Identifier	numberOfParents		3157335	0					
ANR	3157454	Identifier	i		3157335	1					
ANR	3157455	UnaryOperationExpression	- 1		3157335	1					
ANR	3157456	UnaryOperator	-		3157335	0					
ANR	3157457	PrimaryExpression	1		3157335	1					
ANR	3157458	ExpressionStatement		78:3:2468:2468	3157335	1	True				
ANR	3157459	ExpressionStatement		79:2:2472:2472	3157335	11	True				
ANR	3157460	IdentifierDeclStatement	int * sink = new int [ numNodes ] ;	86:1:2682:2711	3157335	12	True				
ANR	3157461	IdentifierDecl	* sink = new int [ numNodes ]		3157335	0					
ANR	3157462	IdentifierDeclType	int *		3157335	0					
ANR	3157463	Identifier	sink		3157335	1					
ANR	3157464	AssignmentExpression	* sink = new int [ numNodes ]		3157335	2		=			
ANR	3157465	Identifier	numNodes		3157335	0					
ANR	3157466	Identifier	numNodes		3157335	1					
ANR	3157467	IdentifierDeclStatement	int * colorS = new int [ numNodes ] ;	87:1:2714:2745	3157335	13	True				
ANR	3157468	IdentifierDecl	* colorS = new int [ numNodes ]		3157335	0					
ANR	3157469	IdentifierDeclType	int *		3157335	0					
ANR	3157470	Identifier	colorS		3157335	1					
ANR	3157471	AssignmentExpression	* colorS = new int [ numNodes ]		3157335	2		=			
ANR	3157472	Identifier	numNodes		3157335	0					
ANR	3157473	Identifier	numNodes		3157335	1					
ANR	3157474	IdentifierDeclStatement	int * ancestor = new int [ numNodes ] ;	88:1:2748:2781	3157335	14	True				
ANR	3157475	IdentifierDecl	* ancestor = new int [ numNodes ]		3157335	0					
ANR	3157476	IdentifierDeclType	int *		3157335	0					
ANR	3157477	Identifier	ancestor		3157335	1					
ANR	3157478	AssignmentExpression	* ancestor = new int [ numNodes ]		3157335	2		=			
ANR	3157479	Identifier	numNodes		3157335	0					
ANR	3157480	Identifier	numNodes		3157335	1					
ANR	3157481	IdentifierDeclStatement	int * colorA = new int [ numNodes ] ;	89:1:2784:2815	3157335	15	True				
ANR	3157482	IdentifierDecl	* colorA = new int [ numNodes ]		3157335	0					
ANR	3157483	IdentifierDeclType	int *		3157335	0					
ANR	3157484	Identifier	colorA		3157335	1					
ANR	3157485	AssignmentExpression	* colorA = new int [ numNodes ]		3157335	2		=			
ANR	3157486	Identifier	numNodes		3157335	0					
ANR	3157487	Identifier	numNodes		3157335	1					
ANR	3157488	IfStatement	if ( NULL == sink || NULL == ancestor || NULL == colorS || NULL == colorA )		3157335	16					
ANR	3157489	Condition	NULL == sink || NULL == ancestor || NULL == colorS || NULL == colorA	90:5:2822:2881	3157335	0	True				
ANR	3157490	OrExpression	NULL == sink || NULL == ancestor || NULL == colorS || NULL == colorA		3157335	0		||			
ANR	3157491	EqualityExpression	NULL == sink		3157335	0		==			
ANR	3157492	Identifier	NULL		3157335	0					
ANR	3157493	Identifier	sink		3157335	1					
ANR	3157494	OrExpression	NULL == ancestor || NULL == colorS || NULL == colorA		3157335	1		||			
ANR	3157495	EqualityExpression	NULL == ancestor		3157335	0		==			
ANR	3157496	Identifier	NULL		3157335	0					
ANR	3157497	Identifier	ancestor		3157335	1					
ANR	3157498	OrExpression	NULL == colorS || NULL == colorA		3157335	1		||			
ANR	3157499	EqualityExpression	NULL == colorS		3157335	0		==			
ANR	3157500	Identifier	NULL		3157335	0					
ANR	3157501	Identifier	colorS		3157335	1					
ANR	3157502	EqualityExpression	NULL == colorA		3157335	1		==			
ANR	3157503	Identifier	NULL		3157335	0					
ANR	3157504	Identifier	colorA		3157335	1					
ANR	3157505	ThrowStatement	"throw ""Superdag::Superdag, scratch memory allocation"" ;"	91:2:2887:2940	3157335	1	True				
ANR	3157506	PrimaryExpression	"""Superdag::Superdag, scratch memory allocation"""		3157335	0					
ANR	3157507	IdentifierDeclStatement	"int lastA , lastS ;"	92:1:2943:2959	3157335	17	True				
ANR	3157508	IdentifierDecl	lastA		3157335	0					
ANR	3157509	IdentifierDeclType	int		3157335	0					
ANR	3157510	Identifier	lastA		3157335	1					
ANR	3157511	IdentifierDecl	lastS		3157335	1					
ANR	3157512	IdentifierDeclType	int		3157335	0					
ANR	3157513	Identifier	lastS		3157335	1					
ANR	3157514	IdentifierDeclStatement	ResizableArray < int > * constituentSink ;	95:1:3027:3063	3157335	18	True				
ANR	3157515	IdentifierDecl	* constituentSink		3157335	0					
ANR	3157516	IdentifierDeclType	ResizableArray < int > *		3157335	0					
ANR	3157517	Identifier	constituentSink		3157335	1					
ANR	3157518	IdentifierDeclStatement	ResizableArray < int > * constituentAncestor ;	96:1:3066:3106	3157335	19	True				
ANR	3157519	IdentifierDecl	* constituentAncestor		3157335	0					
ANR	3157520	IdentifierDeclType	ResizableArray < int > *		3157335	0					
ANR	3157521	Identifier	constituentAncestor		3157335	1					
ANR	3157522	ExpressionStatement	constituentSink = new ResizableArray < int > [ numNodes ]	97:1:3109:3160	3157335	20	True				
ANR	3157523	AssignmentExpression	constituentSink = new ResizableArray < int > [ numNodes ]		3157335	0		=			
ANR	3157524	Identifier	constituentSink		3157335	0					
ANR	3157525	Identifier	numNodes		3157335	1					
ANR	3157526	ExpressionStatement	constituentAncestor = new ResizableArray < int > [ numNodes ]	98:1:3163:3218	3157335	21	True				
ANR	3157527	AssignmentExpression	constituentAncestor = new ResizableArray < int > [ numNodes ]		3157335	0		=			
ANR	3157528	Identifier	constituentAncestor		3157335	0					
ANR	3157529	Identifier	numNodes		3157335	1					
ANR	3157530	IfStatement	if ( NULL == constituentSink || NULL == constituentAncestor )		3157335	22					
ANR	3157531	Condition	NULL == constituentSink || NULL == constituentAncestor	99:5:3225:3274	3157335	0	True				
ANR	3157532	OrExpression	NULL == constituentSink || NULL == constituentAncestor		3157335	0		||			
ANR	3157533	EqualityExpression	NULL == constituentSink		3157335	0		==			
ANR	3157534	Identifier	NULL		3157335	0					
ANR	3157535	Identifier	constituentSink		3157335	1					
ANR	3157536	EqualityExpression	NULL == constituentAncestor		3157335	1		==			
ANR	3157537	Identifier	NULL		3157335	0					
ANR	3157538	Identifier	constituentAncestor		3157335	1					
ANR	3157539	ThrowStatement	"throw ""Superdag::Superdag, resizable allocation"" ;"	100:2:3280:3328	3157335	1	True				
ANR	3157540	PrimaryExpression	"""Superdag::Superdag, resizable allocation"""		3157335	0					
ANR	3157541	IdentifierDeclStatement	int * colorIncl = new int [ numNodes ] ;	103:1:3416:3450	3157335	23	True				
ANR	3157542	IdentifierDecl	* colorIncl = new int [ numNodes ]		3157335	0					
ANR	3157543	IdentifierDeclType	int *		3157335	0					
ANR	3157544	Identifier	colorIncl		3157335	1					
ANR	3157545	AssignmentExpression	* colorIncl = new int [ numNodes ]		3157335	2		=			
ANR	3157546	Identifier	numNodes		3157335	0					
ANR	3157547	Identifier	numNodes		3157335	1					
ANR	3157548	IdentifierDeclStatement	bool * minimalConstituent = new bool [ numNodes ] ;	104:1:3453:3498	3157335	24	True				
ANR	3157549	IdentifierDecl	* minimalConstituent = new bool [ numNodes ]		3157335	0					
ANR	3157550	IdentifierDeclType	bool *		3157335	0					
ANR	3157551	Identifier	minimalConstituent		3157335	1					
ANR	3157552	AssignmentExpression	* minimalConstituent = new bool [ numNodes ]		3157335	2		=			
ANR	3157553	Identifier	numNodes		3157335	0					
ANR	3157554	Identifier	numNodes		3157335	1					
ANR	3157555	IfStatement	if ( NULL == colorIncl || NULL == minimalConstituent )		3157335	25					
ANR	3157556	Condition	NULL == colorIncl || NULL == minimalConstituent	105:5:3505:3547	3157335	0	True				
ANR	3157557	OrExpression	NULL == colorIncl || NULL == minimalConstituent		3157335	0		||			
ANR	3157558	EqualityExpression	NULL == colorIncl		3157335	0		==			
ANR	3157559	Identifier	NULL		3157335	0					
ANR	3157560	Identifier	colorIncl		3157335	1					
ANR	3157561	EqualityExpression	NULL == minimalConstituent		3157335	1		==			
ANR	3157562	Identifier	NULL		3157335	0					
ANR	3157563	Identifier	minimalConstituent		3157335	1					
ANR	3157564	ThrowStatement	"throw ""Superdag::Superdag, inclusion allocation"" ;"	106:2:3553:3601	3157335	1	True				
ANR	3157565	PrimaryExpression	"""Superdag::Superdag, inclusion allocation"""		3157335	0					
ANR	3157566	IdentifierDeclStatement	int * constituentIDtoAnchor ;	110:1:3716:3742	3157335	26	True				
ANR	3157567	IdentifierDecl	* constituentIDtoAnchor		3157335	0					
ANR	3157568	IdentifierDeclType	int *		3157335	0					
ANR	3157569	Identifier	constituentIDtoAnchor		3157335	1					
ANR	3157570	ExpressionStatement	constituentIDtoAnchor = new int [ numNodes ]	111:1:3745:3786	3157335	27	True				
ANR	3157571	AssignmentExpression	constituentIDtoAnchor = new int [ numNodes ]		3157335	0		=			
ANR	3157572	Identifier	constituentIDtoAnchor		3157335	0					
ANR	3157573	Identifier	numNodes		3157335	1					
ANR	3157574	IfStatement	if ( NULL == constituentIDtoAnchor )		3157335	28					
ANR	3157575	Condition	NULL == constituentIDtoAnchor	112:5:3793:3819	3157335	0	True				
ANR	3157576	EqualityExpression	NULL == constituentIDtoAnchor		3157335	0		==			
ANR	3157577	Identifier	NULL		3157335	0					
ANR	3157578	Identifier	constituentIDtoAnchor		3157335	1					
ANR	3157579	ThrowStatement	"throw ""Superdag::Superdag, constituentIDtoAnchor allocation"" ;"	113:2:3825:3885	3157335	1	True				
ANR	3157580	PrimaryExpression	"""Superdag::Superdag, constituentIDtoAnchor allocation"""		3157335	0					
ANR	3157581	IdentifierDeclStatement	int * sinkToConstituentID ;	119:1:4151:4175	3157335	29	True				
ANR	3157582	IdentifierDecl	* sinkToConstituentID		3157335	0					
ANR	3157583	IdentifierDeclType	int *		3157335	0					
ANR	3157584	Identifier	sinkToConstituentID		3157335	1					
ANR	3157585	ExpressionStatement	sinkToConstituentID = new int [ numNodes ]	120:1:4178:4217	3157335	30	True				
ANR	3157586	AssignmentExpression	sinkToConstituentID = new int [ numNodes ]		3157335	0		=			
ANR	3157587	Identifier	sinkToConstituentID		3157335	0					
ANR	3157588	Identifier	numNodes		3157335	1					
ANR	3157589	IfStatement	if ( NULL == sinkToConstituentID )		3157335	31					
ANR	3157590	Condition	NULL == sinkToConstituentID	121:5:4224:4248	3157335	0	True				
ANR	3157591	EqualityExpression	NULL == sinkToConstituentID		3157335	0		==			
ANR	3157592	Identifier	NULL		3157335	0					
ANR	3157593	Identifier	sinkToConstituentID		3157335	1					
ANR	3157594	ThrowStatement	"throw ""Superdag::Superdag, sinkToConstituentID allocation"" ;"	122:2:4254:4312	3157335	1	True				
ANR	3157595	PrimaryExpression	"""Superdag::Superdag, sinkToConstituentID allocation"""		3157335	0					
ANR	3157596	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		3157335	32					
ANR	3157597	ForInit	i = 0 ;	123:6:4320:4323	3157335	0	True				
ANR	3157598	AssignmentExpression	i = 0		3157335	0		=			
ANR	3157599	Identifier	i		3157335	0					
ANR	3157600	PrimaryExpression	0		3157335	1					
ANR	3157601	Condition	i < numNodes	123:11:4325:4334	3157335	1	True				
ANR	3157602	RelationalExpression	i < numNodes		3157335	0		<			
ANR	3157603	Identifier	i		3157335	0					
ANR	3157604	Identifier	numNodes		3157335	1					
ANR	3157605	PostIncDecOperationExpression	i ++	123:23:4337:4339	3157335	2	True				
ANR	3157606	Identifier	i		3157335	0					
ANR	3157607	IncDec	++		3157335	1					
ANR	3157608	ExpressionStatement	sinkToConstituentID [ i ] = - 1	124:2:4345:4372	3157335	3	True				
ANR	3157609	AssignmentExpression	sinkToConstituentID [ i ] = - 1		3157335	0		=			
ANR	3157610	ArrayIndexing	sinkToConstituentID [ i ]		3157335	0					
ANR	3157611	Identifier	sinkToConstituentID		3157335	0					
ANR	3157612	Identifier	i		3157335	1					
ANR	3157613	UnaryOperationExpression	- 1		3157335	1					
ANR	3157614	UnaryOperator	-		3157335	0					
ANR	3157615	PrimaryExpression	1		3157335	1					
ANR	3157616	ExpressionStatement	color = 0	128:1:4413:4422	3157335	33	True				
ANR	3157617	AssignmentExpression	color = 0		3157335	0		=			
ANR	3157618	Identifier	color		3157335	0					
ANR	3157619	PrimaryExpression	0		3157335	1					
ANR	3157620	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		3157335	34					
ANR	3157621	ForInit	i = 0 ;	129:6:4514:4517	3157335	0	True				
ANR	3157622	AssignmentExpression	i = 0		3157335	0		=			
ANR	3157623	Identifier	i		3157335	0					
ANR	3157624	PrimaryExpression	0		3157335	1					
ANR	3157625	Condition	i < numNodes	129:11:4519:4528	3157335	1	True				
ANR	3157626	RelationalExpression	i < numNodes		3157335	0		<			
ANR	3157627	Identifier	i		3157335	0					
ANR	3157628	Identifier	numNodes		3157335	1					
ANR	3157629	PostIncDecOperationExpression	i ++	129:23:4531:4533	3157335	2	True				
ANR	3157630	Identifier	i		3157335	0					
ANR	3157631	IncDec	++		3157335	1					
ANR	3157632	ExpressionStatement	colorS [ i ] = colorA [ i ] = 0	130:2:4539:4564	3157335	3	True				
ANR	3157633	AssignmentExpression	colorS [ i ] = colorA [ i ] = 0		3157335	0		=			
ANR	3157634	ArrayIndexing	colorS [ i ]		3157335	0					
ANR	3157635	Identifier	colorS		3157335	0					
ANR	3157636	Identifier	i		3157335	1					
ANR	3157637	AssignmentExpression	colorA [ i ] = 0		3157335	1		=			
ANR	3157638	ArrayIndexing	colorA [ i ]		3157335	0					
ANR	3157639	Identifier	colorA		3157335	0					
ANR	3157640	Identifier	i		3157335	1					
ANR	3157641	PrimaryExpression	0		3157335	1					
ANR	3157642	IdentifierDeclStatement	float done = - 1 ;	132:1:4568:4583	3157335	35	True				
ANR	3157643	IdentifierDecl	done = - 1		3157335	0					
ANR	3157644	IdentifierDeclType	float		3157335	0					
ANR	3157645	Identifier	done		3157335	1					
ANR	3157646	AssignmentExpression	done = - 1		3157335	2		=			
ANR	3157647	Identifier	done		3157335	0					
ANR	3157648	UnaryOperationExpression	- 1		3157335	1					
ANR	3157649	UnaryOperator	-		3157335	0					
ANR	3157650	PrimaryExpression	1		3157335	1					
ANR	3157651	IdentifierDeclStatement	float last = - 1 ;	133:1:4612:4627	3157335	36	True				
ANR	3157652	IdentifierDecl	last = - 1		3157335	0					
ANR	3157653	IdentifierDeclType	float		3157335	0					
ANR	3157654	Identifier	last		3157335	1					
ANR	3157655	AssignmentExpression	last = - 1		3157335	2		=			
ANR	3157656	Identifier	last		3157335	0					
ANR	3157657	UnaryOperationExpression	- 1		3157335	1					
ANR	3157658	UnaryOperator	-		3157335	0					
ANR	3157659	PrimaryExpression	1		3157335	1					
ANR	3157660	WhileStatement	while ( true )		3157335	37					
ANR	3157661	Condition	true	134:7:4662:4665	3157335	0	True				
ANR	3157662	Identifier	true		3157335	0					
ANR	3157663	CompoundStatement		217:2:7073:7085	3157335	1					
ANR	3157664	ExpressionStatement	done ++	137:2:4694:4700	3157335	0	True				
ANR	3157665	PostIncDecOperationExpression	done ++		3157335	0					
ANR	3157666	Identifier	done		3157335	0					
ANR	3157667	IncDec	++		3157335	1					
ANR	3157668	IfStatement	if ( done / numNodes > last + 0.01 )		3157335	1					
ANR	3157669	Condition	done / numNodes > last + 0.01	138:6:4708:4732	3157335	0	True				
ANR	3157670	RelationalExpression	done / numNodes > last + 0.01		3157335	0		>			
ANR	3157671	MultiplicativeExpression	done / numNodes		3157335	0		/			
ANR	3157672	Identifier	done		3157335	0					
ANR	3157673	Identifier	numNodes		3157335	1					
ANR	3157674	AdditiveExpression	last + 0.01		3157335	1		+			
ANR	3157675	Identifier	last		3157335	0					
ANR	3157676	PrimaryExpression	0.01		3157335	1					
ANR	3157677	CompoundStatement		90:34:3188:3188	3157335	1					
ANR	3157678	ExpressionStatement	last = done / numNodes	139:3:4758:4778	3157335	0	True				
ANR	3157679	AssignmentExpression	last = done / numNodes		3157335	0		=			
ANR	3157680	Identifier	last		3157335	0					
ANR	3157681	MultiplicativeExpression	done / numNodes		3157335	1		/			
ANR	3157682	Identifier	done		3157335	0					
ANR	3157683	Identifier	numNodes		3157335	1					
ANR	3157684	ExpressionStatement	"printf ( ""    about %d percent done\\n"" , ( int ) ( last * 100 ) )"	141:1:4795:4850	3157335	1	True				
ANR	3157685	CallExpression	"printf ( ""    about %d percent done\\n"" , ( int ) ( last * 100 ) )"		3157335	0					
ANR	3157686	Callee	printf		3157335	0					
ANR	3157687	Identifier	printf		3157335	0					
ANR	3157688	ArgumentList	"""    about %d percent done\\n"""		3157335	1					
ANR	3157689	Argument	"""    about %d percent done\\n"""		3157335	0					
ANR	3157690	PrimaryExpression	"""    about %d percent done\\n"""		3157335	0					
ANR	3157691	Argument	( int ) ( last * 100 )		3157335	1					
ANR	3157692	CastExpression	( int ) ( last * 100 )		3157335	0					
ANR	3157693	CastTarget	int		3157335	0					
ANR	3157694	MultiplicativeExpression	last * 100		3157335	1		*			
ANR	3157695	Identifier	last		3157335	0					
ANR	3157696	PrimaryExpression	100		3157335	1					
ANR	3157697	ExpressionStatement		143:3:4862:4862	3157335	2	True				
ANR	3157698	IdentifierDeclStatement	bool sourceExists = false ;	147:2:4947:4972	3157335	3	True				
ANR	3157699	IdentifierDecl	sourceExists = false		3157335	0					
ANR	3157700	IdentifierDeclType	bool		3157335	0					
ANR	3157701	Identifier	sourceExists		3157335	1					
ANR	3157702	AssignmentExpression	sourceExists = false		3157335	2		=			
ANR	3157703	Identifier	false		3157335	0					
ANR	3157704	Identifier	false		3157335	1					
ANR	3157705	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		3157335	4					
ANR	3157706	ForInit	i = 0 ;	148:7:4981:4984	3157335	0	True				
ANR	3157707	AssignmentExpression	i = 0		3157335	0		=			
ANR	3157708	Identifier	i		3157335	0					
ANR	3157709	PrimaryExpression	0		3157335	1					
ANR	3157710	Condition	i < numNodes	148:12:4986:4995	3157335	1	True				
ANR	3157711	RelationalExpression	i < numNodes		3157335	0		<			
ANR	3157712	Identifier	i		3157335	0					
ANR	3157713	Identifier	numNodes		3157335	1					
ANR	3157714	PostIncDecOperationExpression	i ++	148:24:4998:5000	3157335	2	True				
ANR	3157715	Identifier	i		3157335	0					
ANR	3157716	IncDec	++		3157335	1					
ANR	3157717	CompoundStatement		100:30:3456:3456	3157335	3					
ANR	3157718	IfStatement	if ( 0 == numberOfParents [ i ] )		3157335	0					
ANR	3157719	Condition	0 == numberOfParents [ i ]	149:7:5013:5033	3157335	0	True				
ANR	3157720	EqualityExpression	0 == numberOfParents [ i ]		3157335	0		==			
ANR	3157721	PrimaryExpression	0		3157335	0					
ANR	3157722	ArrayIndexing	numberOfParents [ i ]		3157335	1					
ANR	3157723	Identifier	numberOfParents		3157335	0					
ANR	3157724	Identifier	i		3157335	1					
ANR	3157725	CompoundStatement		101:31:3489:3489	3157335	1					
ANR	3157726	ExpressionStatement	sourceExists = true	150:4:5043:5062	3157335	0	True				
ANR	3157727	AssignmentExpression	sourceExists = true		3157335	0		=			
ANR	3157728	Identifier	sourceExists		3157335	0					
ANR	3157729	Identifier	true		3157335	1					
ANR	3157730	BreakStatement	break ;	151:4:5068:5073	3157335	1	True				
ANR	3157731	ExpressionStatement		152:4:5079:5079	3157335	1	True				
ANR	3157732	ExpressionStatement		153:3:5084:5084	3157335	5	True				
ANR	3157733	IfStatement	if ( ! sourceExists )		3157335	6					
ANR	3157734	Condition	! sourceExists	154:6:5092:5104	3157335	0	True				
ANR	3157735	UnaryOperationExpression	! sourceExists		3157335	0					
ANR	3157736	UnaryOperator	!		3157335	0					
ANR	3157737	Identifier	sourceExists		3157335	1					
ANR	3157738	BreakStatement	break ;	155:3:5111:5116	3157335	1	True				
ANR	3157739	IfStatement	if ( color >= INT_MAX / 10 )		3157335	7					
ANR	3157740	Condition	color >= INT_MAX / 10	158:6:5196:5214	3157335	0	True				
ANR	3157741	RelationalExpression	color >= INT_MAX / 10		3157335	0		>=			
ANR	3157742	Identifier	color		3157335	0					
ANR	3157743	MultiplicativeExpression	INT_MAX / 10		3157335	1		/			
ANR	3157744	Identifier	INT_MAX		3157335	0					
ANR	3157745	PrimaryExpression	10		3157335	1					
ANR	3157746	CompoundStatement		110:28:3670:3670	3157335	1					
ANR	3157747	ExpressionStatement	color = 0	159:3:5223:5232	3157335	0	True				
ANR	3157748	AssignmentExpression	color = 0		3157335	0		=			
ANR	3157749	Identifier	color		3157335	0					
ANR	3157750	PrimaryExpression	0		3157335	1					
ANR	3157751	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		3157335	1					
ANR	3157752	ForInit	i = 0 ;	160:8:5242:5245	3157335	0	True				
ANR	3157753	AssignmentExpression	i = 0		3157335	0		=			
ANR	3157754	Identifier	i		3157335	0					
ANR	3157755	PrimaryExpression	0		3157335	1					
ANR	3157756	Condition	i < numNodes	160:13:5247:5256	3157335	1	True				
ANR	3157757	RelationalExpression	i < numNodes		3157335	0		<			
ANR	3157758	Identifier	i		3157335	0					
ANR	3157759	Identifier	numNodes		3157335	1					
ANR	3157760	PostIncDecOperationExpression	i ++	160:25:5259:5261	3157335	2	True				
ANR	3157761	Identifier	i		3157335	0					
ANR	3157762	IncDec	++		3157335	1					
ANR	3157763	ExpressionStatement	colorS [ i ] = colorA [ i ] = 0	161:4:5269:5294	3157335	3	True				
ANR	3157764	AssignmentExpression	colorS [ i ] = colorA [ i ] = 0		3157335	0		=			
ANR	3157765	ArrayIndexing	colorS [ i ]		3157335	0					
ANR	3157766	Identifier	colorS		3157335	0					
ANR	3157767	Identifier	i		3157335	1					
ANR	3157768	AssignmentExpression	colorA [ i ] = 0		3157335	1		=			
ANR	3157769	ArrayIndexing	colorA [ i ]		3157335	0					
ANR	3157770	Identifier	colorA		3157335	0					
ANR	3157771	Identifier	i		3157335	1					
ANR	3157772	PrimaryExpression	0		3157335	1					
ANR	3157773	ExpressionStatement		162:3:5299:5299	3157335	8	True				
ANR	3157774	ExpressionStatement	color ++	170:2:5478:5485	3157335	9	True				
ANR	3157775	PostIncDecOperationExpression	color ++		3157335	0					
ANR	3157776	Identifier	color		3157335	0					
ANR	3157777	IncDec	++		3157335	1					
ANR	3157778	IdentifierDeclStatement	bool found = false ;	172:2:5601:5617	3157335	10	True				
ANR	3157779	IdentifierDecl	found = false		3157335	0					
ANR	3157780	IdentifierDeclType	bool		3157335	0					
ANR	3157781	Identifier	found		3157335	1					
ANR	3157782	AssignmentExpression	found = false		3157335	2		=			
ANR	3157783	Identifier	false		3157335	0					
ANR	3157784	Identifier	false		3157335	1					
ANR	3157785	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		3157335	11					
ANR	3157786	ForInit	i = 0 ;	173:7:5626:5629	3157335	0	True				
ANR	3157787	AssignmentExpression	i = 0		3157335	0		=			
ANR	3157788	Identifier	i		3157335	0					
ANR	3157789	PrimaryExpression	0		3157335	1					
ANR	3157790	Condition	i < numNodes	173:12:5631:5640	3157335	1	True				
ANR	3157791	RelationalExpression	i < numNodes		3157335	0		<			
ANR	3157792	Identifier	i		3157335	0					
ANR	3157793	Identifier	numNodes		3157335	1					
ANR	3157794	PostIncDecOperationExpression	i ++	173:24:5643:5645	3157335	2	True				
ANR	3157795	Identifier	i		3157335	0					
ANR	3157796	IncDec	++		3157335	1					
ANR	3157797	CompoundStatement		125:30:4101:4101	3157335	3					
ANR	3157798	IfStatement	if ( 0 == numberOfParents [ i ] && colorA [ i ] != color )		3157335	0					
ANR	3157799	Condition	0 == numberOfParents [ i ] && colorA [ i ] != color	174:7:5658:5698	3157335	0	True				
ANR	3157800	AndExpression	0 == numberOfParents [ i ] && colorA [ i ] != color		3157335	0		&&			
ANR	3157801	EqualityExpression	0 == numberOfParents [ i ]		3157335	0		==			
ANR	3157802	PrimaryExpression	0		3157335	0					
ANR	3157803	ArrayIndexing	numberOfParents [ i ]		3157335	1					
ANR	3157804	Identifier	numberOfParents		3157335	0					
ANR	3157805	Identifier	i		3157335	1					
ANR	3157806	EqualityExpression	colorA [ i ] != color		3157335	1		!=			
ANR	3157807	ArrayIndexing	colorA [ i ]		3157335	0					
ANR	3157808	Identifier	colorA		3157335	0					
ANR	3157809	Identifier	i		3157335	1					
ANR	3157810	Identifier	color		3157335	1					
ANR	3157811	CompoundStatement		126:51:4154:4154	3157335	1					
ANR	3157812	ExpressionStatement	"found = computeBipartiteConstituent ( skeleton , reversed , numberOfParents , i , ancestor , lastA , sink , lastS , color , colorA , colorS )"	179:4:6004:6179	3157335	0	True				
ANR	3157813	AssignmentExpression	"found = computeBipartiteConstituent ( skeleton , reversed , numberOfParents , i , ancestor , lastA , sink , lastS , color , colorA , colorS )"		3157335	0		=			
ANR	3157814	Identifier	found		3157335	0					
ANR	3157815	CallExpression	"computeBipartiteConstituent ( skeleton , reversed , numberOfParents , i , ancestor , lastA , sink , lastS , color , colorA , colorS )"		3157335	1					
ANR	3157816	Callee	computeBipartiteConstituent		3157335	0					
ANR	3157817	Identifier	computeBipartiteConstituent		3157335	0					
ANR	3157818	ArgumentList	skeleton		3157335	1					
ANR	3157819	Argument	skeleton		3157335	0					
ANR	3157820	Identifier	skeleton		3157335	0					
ANR	3157821	Argument	reversed		3157335	1					
ANR	3157822	Identifier	reversed		3157335	0					
ANR	3157823	Argument	numberOfParents		3157335	2					
ANR	3157824	Identifier	numberOfParents		3157335	0					
ANR	3157825	Argument	i		3157335	3					
ANR	3157826	Identifier	i		3157335	0					
ANR	3157827	Argument	ancestor		3157335	4					
ANR	3157828	Identifier	ancestor		3157335	0					
ANR	3157829	Argument	lastA		3157335	5					
ANR	3157830	Identifier	lastA		3157335	0					
ANR	3157831	Argument	sink		3157335	6					
ANR	3157832	Identifier	sink		3157335	0					
ANR	3157833	Argument	lastS		3157335	7					
ANR	3157834	Identifier	lastS		3157335	0					
ANR	3157835	Argument	color		3157335	8					
ANR	3157836	Identifier	color		3157335	0					
ANR	3157837	Argument	colorA		3157335	9					
ANR	3157838	Identifier	colorA		3157335	0					
ANR	3157839	Argument	colorS		3157335	10					
ANR	3157840	Identifier	colorS		3157335	0					
ANR	3157841	IfStatement	if ( found )		3157335	1					
ANR	3157842	Condition	found	183:8:6189:6193	3157335	0	True				
ANR	3157843	Identifier	found		3157335	0					
ANR	3157844	BreakStatement	break ;	184:5:6202:6207	3157335	1	True				
ANR	3157845	ExpressionStatement		185:4:6213:6213	3157335	1	True				
ANR	3157846	ExpressionStatement		186:3:6218:6218	3157335	12	True				
ANR	3157847	IfStatement	if ( found )		3157335	13					
ANR	3157848	Condition	found	188:6:6227:6231	3157335	0	True				
ANR	3157849	Identifier	found		3157335	0					
ANR	3157850	CompoundStatement		140:14:4687:4687	3157335	1					
ANR	3157851	ExpressionStatement	constituentSink [ i ] . reset ( )	190:3:6298:6324	3157335	0	True				
ANR	3157852	CallExpression	constituentSink [ i ] . reset ( )		3157335	0					
ANR	3157853	Callee	constituentSink [ i ] . reset		3157335	0					
ANR	3157854	MemberAccess	constituentSink [ i ] . reset		3157335	0					
ANR	3157855	ArrayIndexing	constituentSink [ i ]		3157335	0					
ANR	3157856	Identifier	constituentSink		3157335	0					
ANR	3157857	Identifier	i		3157335	1					
ANR	3157858	Identifier	reset		3157335	1					
ANR	3157859	ArgumentList			3157335	1					
ANR	3157860	ForStatement	for ( j = 0 ; j <= lastS ; j ++ )		3157335	1					
ANR	3157861	ForInit	j = 0 ;	191:8:6334:6337	3157335	0	True				
ANR	3157862	AssignmentExpression	j = 0		3157335	0		=			
ANR	3157863	Identifier	j		3157335	0					
ANR	3157864	PrimaryExpression	0		3157335	1					
ANR	3157865	Condition	j <= lastS	191:13:6339:6346	3157335	1	True				
ANR	3157866	RelationalExpression	j <= lastS		3157335	0		<=			
ANR	3157867	Identifier	j		3157335	0					
ANR	3157868	Identifier	lastS		3157335	1					
ANR	3157869	PostIncDecOperationExpression	j ++	191:23:6349:6351	3157335	2	True				
ANR	3157870	Identifier	j		3157335	0					
ANR	3157871	IncDec	++		3157335	1					
ANR	3157872	ExpressionStatement	constituentSink [ i ] . append ( sink [ j ] )	192:4:6359:6395	3157335	3	True				
ANR	3157873	CallExpression	constituentSink [ i ] . append ( sink [ j ] )		3157335	0					
ANR	3157874	Callee	constituentSink [ i ] . append		3157335	0					
ANR	3157875	MemberAccess	constituentSink [ i ] . append		3157335	0					
ANR	3157876	ArrayIndexing	constituentSink [ i ]		3157335	0					
ANR	3157877	Identifier	constituentSink		3157335	0					
ANR	3157878	Identifier	i		3157335	1					
ANR	3157879	Identifier	append		3157335	1					
ANR	3157880	ArgumentList	sink [ j ]		3157335	1					
ANR	3157881	Argument	sink [ j ]		3157335	0					
ANR	3157882	ArrayIndexing	sink [ j ]		3157335	0					
ANR	3157883	Identifier	sink		3157335	0					
ANR	3157884	Identifier	j		3157335	1					
ANR	3157885	ExpressionStatement	constituentAncestor [ i ] . reset ( )	193:3:6400:6430	3157335	2	True				
ANR	3157886	CallExpression	constituentAncestor [ i ] . reset ( )		3157335	0					
ANR	3157887	Callee	constituentAncestor [ i ] . reset		3157335	0					
ANR	3157888	MemberAccess	constituentAncestor [ i ] . reset		3157335	0					
ANR	3157889	ArrayIndexing	constituentAncestor [ i ]		3157335	0					
ANR	3157890	Identifier	constituentAncestor		3157335	0					
ANR	3157891	Identifier	i		3157335	1					
ANR	3157892	Identifier	reset		3157335	1					
ANR	3157893	ArgumentList			3157335	1					
ANR	3157894	ForStatement	for ( j = 0 ; j <= lastA ; j ++ )		3157335	3					
ANR	3157895	ForInit	j = 0 ;	194:8:6440:6443	3157335	0	True				
ANR	3157896	AssignmentExpression	j = 0		3157335	0		=			
ANR	3157897	Identifier	j		3157335	0					
ANR	3157898	PrimaryExpression	0		3157335	1					
ANR	3157899	Condition	j <= lastA	194:13:6445:6452	3157335	1	True				
ANR	3157900	RelationalExpression	j <= lastA		3157335	0		<=			
ANR	3157901	Identifier	j		3157335	0					
ANR	3157902	Identifier	lastA		3157335	1					
ANR	3157903	PostIncDecOperationExpression	j ++	194:23:6455:6457	3157335	2	True				
ANR	3157904	Identifier	j		3157335	0					
ANR	3157905	IncDec	++		3157335	1					
ANR	3157906	ExpressionStatement	constituentAncestor [ i ] . append ( ancestor [ j ] )	195:4:6465:6509	3157335	3	True				
ANR	3157907	CallExpression	constituentAncestor [ i ] . append ( ancestor [ j ] )		3157335	0					
ANR	3157908	Callee	constituentAncestor [ i ] . append		3157335	0					
ANR	3157909	MemberAccess	constituentAncestor [ i ] . append		3157335	0					
ANR	3157910	ArrayIndexing	constituentAncestor [ i ]		3157335	0					
ANR	3157911	Identifier	constituentAncestor		3157335	0					
ANR	3157912	Identifier	i		3157335	1					
ANR	3157913	Identifier	append		3157335	1					
ANR	3157914	ArgumentList	ancestor [ j ]		3157335	1					
ANR	3157915	Argument	ancestor [ j ]		3157335	0					
ANR	3157916	ArrayIndexing	ancestor [ j ]		3157335	0					
ANR	3157917	Identifier	ancestor		3157335	0					
ANR	3157918	Identifier	j		3157335	1					
ANR	3157919	ExpressionStatement	"printf ( ""---constituent anchored at %d\\n"" , i )"	198:0:6527:6570	3157335	4	True				
ANR	3157920	CallExpression	"printf ( ""---constituent anchored at %d\\n"" , i )"		3157335	0					
ANR	3157921	Callee	printf		3157335	0					
ANR	3157922	Identifier	printf		3157335	0					
ANR	3157923	ArgumentList	"""---constituent anchored at %d\\n"""		3157335	1					
ANR	3157924	Argument	"""---constituent anchored at %d\\n"""		3157335	0					
ANR	3157925	PrimaryExpression	"""---constituent anchored at %d\\n"""		3157335	0					
ANR	3157926	Argument	i		3157335	1					
ANR	3157927	Identifier	i		3157335	0					
ANR	3157928	ExpressionStatement	"printf ( ""      ancestors: "" )"	199:0:6572:6599	3157335	5	True				
ANR	3157929	CallExpression	"printf ( ""      ancestors: "" )"		3157335	0					
ANR	3157930	Callee	printf		3157335	0					
ANR	3157931	Identifier	printf		3157335	0					
ANR	3157932	ArgumentList	"""      ancestors: """		3157335	1					
ANR	3157933	Argument	"""      ancestors: """		3157335	0					
ANR	3157934	PrimaryExpression	"""      ancestors: """		3157335	0					
ANR	3157935	ForStatement	for ( int k = 0 ; k < constituentAncestor [ i ] . getNumElem ( ) ; k ++ )		3157335	6					
ANR	3157936	ForInit	int k = 0 ;	200:5:6606:6613	3157335	0	True				
ANR	3157937	IdentifierDeclStatement	int k = 0 ;		3157335	0					
ANR	3157938	IdentifierDecl	k = 0		3157335	0					
ANR	3157939	IdentifierDeclType	int		3157335	0					
ANR	3157940	Identifier	k		3157335	1					
ANR	3157941	AssignmentExpression	k = 0		3157335	2		=			
ANR	3157942	Identifier	k		3157335	0					
ANR	3157943	PrimaryExpression	0		3157335	1					
ANR	3157944	Condition	k < constituentAncestor [ i ] . getNumElem ( )	200:14:6615:6651	3157335	1	True				
ANR	3157945	RelationalExpression	k < constituentAncestor [ i ] . getNumElem ( )		3157335	0		<			
ANR	3157946	Identifier	k		3157335	0					
ANR	3157947	CallExpression	constituentAncestor [ i ] . getNumElem ( )		3157335	1					
ANR	3157948	Callee	constituentAncestor [ i ] . getNumElem		3157335	0					
ANR	3157949	MemberAccess	constituentAncestor [ i ] . getNumElem		3157335	0					
ANR	3157950	ArrayIndexing	constituentAncestor [ i ]		3157335	0					
ANR	3157951	Identifier	constituentAncestor		3157335	0					
ANR	3157952	Identifier	i		3157335	1					
ANR	3157953	Identifier	getNumElem		3157335	1					
ANR	3157954	ArgumentList			3157335	1					
ANR	3157955	PostIncDecOperationExpression	k ++	200:53:6654:6656	3157335	2	True				
ANR	3157956	Identifier	k		3157335	0					
ANR	3157957	IncDec	++		3157335	1					
ANR	3157958	ExpressionStatement	"printf ( ""%d "" , constituentAncestor [ i ] . getElem ( k ) )"	201:1:6661:6710	3157335	3	True				
ANR	3157959	CallExpression	"printf ( ""%d "" , constituentAncestor [ i ] . getElem ( k ) )"		3157335	0					
ANR	3157960	Callee	printf		3157335	0					
ANR	3157961	Identifier	printf		3157335	0					
ANR	3157962	ArgumentList	"""%d """		3157335	1					
ANR	3157963	Argument	"""%d """		3157335	0					
ANR	3157964	PrimaryExpression	"""%d """		3157335	0					
ANR	3157965	Argument	constituentAncestor [ i ] . getElem ( k )		3157335	1					
ANR	3157966	CallExpression	constituentAncestor [ i ] . getElem ( k )		3157335	0					
ANR	3157967	Callee	constituentAncestor [ i ] . getElem		3157335	0					
ANR	3157968	MemberAccess	constituentAncestor [ i ] . getElem		3157335	0					
ANR	3157969	ArrayIndexing	constituentAncestor [ i ]		3157335	0					
ANR	3157970	Identifier	constituentAncestor		3157335	0					
ANR	3157971	Identifier	i		3157335	1					
ANR	3157972	Identifier	getElem		3157335	1					
ANR	3157973	ArgumentList	k		3157335	1					
ANR	3157974	Argument	k		3157335	0					
ANR	3157975	Identifier	k		3157335	0					
ANR	3157976	ExpressionStatement	"printf ( ""\\n"" )"	202:0:6712:6724	3157335	7	True				
ANR	3157977	CallExpression	"printf ( ""\\n"" )"		3157335	0					
ANR	3157978	Callee	printf		3157335	0					
ANR	3157979	Identifier	printf		3157335	0					
ANR	3157980	ArgumentList	"""\\n"""		3157335	1					
ANR	3157981	Argument	"""\\n"""		3157335	0					
ANR	3157982	PrimaryExpression	"""\\n"""		3157335	0					
ANR	3157983	ExpressionStatement	"printf ( ""      sinks: "" )"	203:0:6726:6749	3157335	8	True				
ANR	3157984	CallExpression	"printf ( ""      sinks: "" )"		3157335	0					
ANR	3157985	Callee	printf		3157335	0					
ANR	3157986	Identifier	printf		3157335	0					
ANR	3157987	ArgumentList	"""      sinks: """		3157335	1					
ANR	3157988	Argument	"""      sinks: """		3157335	0					
ANR	3157989	PrimaryExpression	"""      sinks: """		3157335	0					
ANR	3157990	ForStatement	for ( int k = 0 ; k < constituentSink [ i ] . getNumElem ( ) ; k ++ )		3157335	9					
ANR	3157991	ForInit	int k = 0 ;	204:5:6756:6763	3157335	0	True				
ANR	3157992	IdentifierDeclStatement	int k = 0 ;		3157335	0					
ANR	3157993	IdentifierDecl	k = 0		3157335	0					
ANR	3157994	IdentifierDeclType	int		3157335	0					
ANR	3157995	Identifier	k		3157335	1					
ANR	3157996	AssignmentExpression	k = 0		3157335	2		=			
ANR	3157997	Identifier	k		3157335	0					
ANR	3157998	PrimaryExpression	0		3157335	1					
ANR	3157999	Condition	k < constituentSink [ i ] . getNumElem ( )	204:14:6765:6797	3157335	1	True				
ANR	3158000	RelationalExpression	k < constituentSink [ i ] . getNumElem ( )		3157335	0		<			
ANR	3158001	Identifier	k		3157335	0					
ANR	3158002	CallExpression	constituentSink [ i ] . getNumElem ( )		3157335	1					
ANR	3158003	Callee	constituentSink [ i ] . getNumElem		3157335	0					
ANR	3158004	MemberAccess	constituentSink [ i ] . getNumElem		3157335	0					
ANR	3158005	ArrayIndexing	constituentSink [ i ]		3157335	0					
ANR	3158006	Identifier	constituentSink		3157335	0					
ANR	3158007	Identifier	i		3157335	1					
ANR	3158008	Identifier	getNumElem		3157335	1					
ANR	3158009	ArgumentList			3157335	1					
ANR	3158010	PostIncDecOperationExpression	k ++	204:49:6800:6802	3157335	2	True				
ANR	3158011	Identifier	k		3157335	0					
ANR	3158012	IncDec	++		3157335	1					
ANR	3158013	ExpressionStatement	"printf ( ""%d "" , constituentSink [ i ] . getElem ( k ) )"	205:1:6807:6852	3157335	3	True				
ANR	3158014	CallExpression	"printf ( ""%d "" , constituentSink [ i ] . getElem ( k ) )"		3157335	0					
ANR	3158015	Callee	printf		3157335	0					
ANR	3158016	Identifier	printf		3157335	0					
ANR	3158017	ArgumentList	"""%d """		3157335	1					
ANR	3158018	Argument	"""%d """		3157335	0					
ANR	3158019	PrimaryExpression	"""%d """		3157335	0					
ANR	3158020	Argument	constituentSink [ i ] . getElem ( k )		3157335	1					
ANR	3158021	CallExpression	constituentSink [ i ] . getElem ( k )		3157335	0					
ANR	3158022	Callee	constituentSink [ i ] . getElem		3157335	0					
ANR	3158023	MemberAccess	constituentSink [ i ] . getElem		3157335	0					
ANR	3158024	ArrayIndexing	constituentSink [ i ]		3157335	0					
ANR	3158025	Identifier	constituentSink		3157335	0					
ANR	3158026	Identifier	i		3157335	1					
ANR	3158027	Identifier	getElem		3157335	1					
ANR	3158028	ArgumentList	k		3157335	1					
ANR	3158029	Argument	k		3157335	0					
ANR	3158030	Identifier	k		3157335	0					
ANR	3158031	ExpressionStatement	"printf ( ""\\n"" )"	206:0:6854:6866	3157335	10	True				
ANR	3158032	CallExpression	"printf ( ""\\n"" )"		3157335	0					
ANR	3158033	Callee	printf		3157335	0					
ANR	3158034	Identifier	printf		3157335	0					
ANR	3158035	ArgumentList	"""\\n"""		3157335	1					
ANR	3158036	Argument	"""\\n"""		3157335	0					
ANR	3158037	PrimaryExpression	"""\\n"""		3157335	0					
ANR	3158038	ExpressionStatement	"detachConstituent ( skeleton , i , constituentIDtoAnchor , sinkToConstituentID , numberOfParents , constituentAncestor [ i ] , constituentSink [ i ] )"	211:3:6945:7090	3157335	11	True				
ANR	3158039	CallExpression	"detachConstituent ( skeleton , i , constituentIDtoAnchor , sinkToConstituentID , numberOfParents , constituentAncestor [ i ] , constituentSink [ i ] )"		3157335	0					
ANR	3158040	Callee	detachConstituent		3157335	0					
ANR	3158041	Identifier	detachConstituent		3157335	0					
ANR	3158042	ArgumentList	skeleton		3157335	1					
ANR	3158043	Argument	skeleton		3157335	0					
ANR	3158044	Identifier	skeleton		3157335	0					
ANR	3158045	Argument	i		3157335	1					
ANR	3158046	Identifier	i		3157335	0					
ANR	3158047	Argument	constituentIDtoAnchor		3157335	2					
ANR	3158048	Identifier	constituentIDtoAnchor		3157335	0					
ANR	3158049	Argument	sinkToConstituentID		3157335	3					
ANR	3158050	Identifier	sinkToConstituentID		3157335	0					
ANR	3158051	Argument	numberOfParents		3157335	4					
ANR	3158052	Identifier	numberOfParents		3157335	0					
ANR	3158053	Argument	constituentAncestor [ i ]		3157335	5					
ANR	3158054	ArrayIndexing	constituentAncestor [ i ]		3157335	0					
ANR	3158055	Identifier	constituentAncestor		3157335	0					
ANR	3158056	Identifier	i		3157335	1					
ANR	3158057	Argument	constituentSink [ i ]		3157335	6					
ANR	3158058	ArrayIndexing	constituentSink [ i ]		3157335	0					
ANR	3158059	Identifier	constituentSink		3157335	0					
ANR	3158060	Identifier	i		3157335	1					
ANR	3158061	ExpressionStatement	type . append ( BIPARTITE )	215:3:7123:7145	3157335	12	True				
ANR	3158062	CallExpression	type . append ( BIPARTITE )		3157335	0					
ANR	3158063	Callee	type . append		3157335	0					
ANR	3158064	MemberAccess	type . append		3157335	0					
ANR	3158065	Identifier	type		3157335	0					
ANR	3158066	Identifier	append		3157335	1					
ANR	3158067	ArgumentList	BIPARTITE		3157335	1					
ANR	3158068	Argument	BIPARTITE		3157335	0					
ANR	3158069	Identifier	BIPARTITE		3157335	0					
ANR	3158070	ContinueStatement	continue ;	218:3:7199:7207	3157335	13	True				
ANR	3158071	ExpressionStatement		219:3:7212:7212	3157335	14	True				
ANR	3158072	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		3157335	15					
ANR	3158073	ForInit	i = 0 ;	226:7:7362:7365	3157335	0	True				
ANR	3158074	AssignmentExpression	i = 0		3157335	0		=			
ANR	3158075	Identifier	i		3157335	0					
ANR	3158076	PrimaryExpression	0		3157335	1					
ANR	3158077	Condition	i < numNodes	226:12:7367:7376	3157335	1	True				
ANR	3158078	RelationalExpression	i < numNodes		3157335	0		<			
ANR	3158079	Identifier	i		3157335	0					
ANR	3158080	Identifier	numNodes		3157335	1					
ANR	3158081	PostIncDecOperationExpression	i ++	226:24:7379:7381	3157335	2	True				
ANR	3158082	Identifier	i		3157335	0					
ANR	3158083	IncDec	++		3157335	1					
ANR	3158084	CompoundStatement		178:30:5837:5837	3157335	3					
ANR	3158085	IfStatement	if ( 0 == numberOfParents [ i ] )		3157335	0					
ANR	3158086	Condition	0 == numberOfParents [ i ]	227:7:7394:7414	3157335	0	True				
ANR	3158087	EqualityExpression	0 == numberOfParents [ i ]		3157335	0		==			
ANR	3158088	PrimaryExpression	0		3157335	0					
ANR	3158089	ArrayIndexing	numberOfParents [ i ]		3157335	1					
ANR	3158090	Identifier	numberOfParents		3157335	0					
ANR	3158091	Identifier	i		3157335	1					
ANR	3158092	CompoundStatement		179:31:5870:5870	3157335	1					
ANR	3158093	ExpressionStatement	color ++	230:4:7478:7485	3157335	0	True				
ANR	3158094	PostIncDecOperationExpression	color ++		3157335	0					
ANR	3158095	Identifier	color		3157335	0					
ANR	3158096	IncDec	++		3157335	1					
ANR	3158097	ExpressionStatement	"computeConstituent ( skeleton , reversed , numberOfParents , i , ancestor , lastA , sink , lastS , color , colorA , colorS )"	233:4:7651:7784	3157335	1	True				
ANR	3158098	CallExpression	"computeConstituent ( skeleton , reversed , numberOfParents , i , ancestor , lastA , sink , lastS , color , colorA , colorS )"		3157335	0					
ANR	3158099	Callee	computeConstituent		3157335	0					
ANR	3158100	Identifier	computeConstituent		3157335	0					
ANR	3158101	ArgumentList	skeleton		3157335	1					
ANR	3158102	Argument	skeleton		3157335	0					
ANR	3158103	Identifier	skeleton		3157335	0					
ANR	3158104	Argument	reversed		3157335	1					
ANR	3158105	Identifier	reversed		3157335	0					
ANR	3158106	Argument	numberOfParents		3157335	2					
ANR	3158107	Identifier	numberOfParents		3157335	0					
ANR	3158108	Argument	i		3157335	3					
ANR	3158109	Identifier	i		3157335	0					
ANR	3158110	Argument	ancestor		3157335	4					
ANR	3158111	Identifier	ancestor		3157335	0					
ANR	3158112	Argument	lastA		3157335	5					
ANR	3158113	Identifier	lastA		3157335	0					
ANR	3158114	Argument	sink		3157335	6					
ANR	3158115	Identifier	sink		3157335	0					
ANR	3158116	Argument	lastS		3157335	7					
ANR	3158117	Identifier	lastS		3157335	0					
ANR	3158118	Argument	color		3157335	8					
ANR	3158119	Identifier	color		3157335	0					
ANR	3158120	Argument	colorA		3157335	9					
ANR	3158121	Identifier	colorA		3157335	0					
ANR	3158122	Argument	colorS		3157335	10					
ANR	3158123	Identifier	colorS		3157335	0					
ANR	3158124	ExpressionStatement	constituentAncestor [ i ] . reset ( )	238:4:7819:7849	3157335	2	True				
ANR	3158125	CallExpression	constituentAncestor [ i ] . reset ( )		3157335	0					
ANR	3158126	Callee	constituentAncestor [ i ] . reset		3157335	0					
ANR	3158127	MemberAccess	constituentAncestor [ i ] . reset		3157335	0					
ANR	3158128	ArrayIndexing	constituentAncestor [ i ]		3157335	0					
ANR	3158129	Identifier	constituentAncestor		3157335	0					
ANR	3158130	Identifier	i		3157335	1					
ANR	3158131	Identifier	reset		3157335	1					
ANR	3158132	ArgumentList			3157335	1					
ANR	3158133	ExpressionStatement	constituentSink [ i ] . reset ( )	239:4:7855:7881	3157335	3	True				
ANR	3158134	CallExpression	constituentSink [ i ] . reset ( )		3157335	0					
ANR	3158135	Callee	constituentSink [ i ] . reset		3157335	0					
ANR	3158136	MemberAccess	constituentSink [ i ] . reset		3157335	0					
ANR	3158137	ArrayIndexing	constituentSink [ i ]		3157335	0					
ANR	3158138	Identifier	constituentSink		3157335	0					
ANR	3158139	Identifier	i		3157335	1					
ANR	3158140	Identifier	reset		3157335	1					
ANR	3158141	ArgumentList			3157335	1					
ANR	3158142	ForStatement	for ( j = 0 ; j <= lastA ; j ++ )		3157335	4					
ANR	3158143	ForInit	j = 0 ;	240:9:7892:7895	3157335	0	True				
ANR	3158144	AssignmentExpression	j = 0		3157335	0		=			
ANR	3158145	Identifier	j		3157335	0					
ANR	3158146	PrimaryExpression	0		3157335	1					
ANR	3158147	Condition	j <= lastA	240:14:7897:7904	3157335	1	True				
ANR	3158148	RelationalExpression	j <= lastA		3157335	0		<=			
ANR	3158149	Identifier	j		3157335	0					
ANR	3158150	Identifier	lastA		3157335	1					
ANR	3158151	PostIncDecOperationExpression	j ++	240:24:7907:7909	3157335	2	True				
ANR	3158152	Identifier	j		3157335	0					
ANR	3158153	IncDec	++		3157335	1					
ANR	3158154	ExpressionStatement	constituentAncestor [ i ] . append ( ancestor [ j ] )	241:5:7918:7962	3157335	3	True				
ANR	3158155	CallExpression	constituentAncestor [ i ] . append ( ancestor [ j ] )		3157335	0					
ANR	3158156	Callee	constituentAncestor [ i ] . append		3157335	0					
ANR	3158157	MemberAccess	constituentAncestor [ i ] . append		3157335	0					
ANR	3158158	ArrayIndexing	constituentAncestor [ i ]		3157335	0					
ANR	3158159	Identifier	constituentAncestor		3157335	0					
ANR	3158160	Identifier	i		3157335	1					
ANR	3158161	Identifier	append		3157335	1					
ANR	3158162	ArgumentList	ancestor [ j ]		3157335	1					
ANR	3158163	Argument	ancestor [ j ]		3157335	0					
ANR	3158164	ArrayIndexing	ancestor [ j ]		3157335	0					
ANR	3158165	Identifier	ancestor		3157335	0					
ANR	3158166	Identifier	j		3157335	1					
ANR	3158167	ForStatement	for ( j = 0 ; j <= lastS ; j ++ )		3157335	5					
ANR	3158168	ForInit	j = 0 ;	242:9:7973:7976	3157335	0	True				
ANR	3158169	AssignmentExpression	j = 0		3157335	0		=			
ANR	3158170	Identifier	j		3157335	0					
ANR	3158171	PrimaryExpression	0		3157335	1					
ANR	3158172	Condition	j <= lastS	242:14:7978:7985	3157335	1	True				
ANR	3158173	RelationalExpression	j <= lastS		3157335	0		<=			
ANR	3158174	Identifier	j		3157335	0					
ANR	3158175	Identifier	lastS		3157335	1					
ANR	3158176	PostIncDecOperationExpression	j ++	242:24:7988:7990	3157335	2	True				
ANR	3158177	Identifier	j		3157335	0					
ANR	3158178	IncDec	++		3157335	1					
ANR	3158179	ExpressionStatement	constituentSink [ i ] . append ( sink [ j ] )	243:5:7999:8035	3157335	3	True				
ANR	3158180	CallExpression	constituentSink [ i ] . append ( sink [ j ] )		3157335	0					
ANR	3158181	Callee	constituentSink [ i ] . append		3157335	0					
ANR	3158182	MemberAccess	constituentSink [ i ] . append		3157335	0					
ANR	3158183	ArrayIndexing	constituentSink [ i ]		3157335	0					
ANR	3158184	Identifier	constituentSink		3157335	0					
ANR	3158185	Identifier	i		3157335	1					
ANR	3158186	Identifier	append		3157335	1					
ANR	3158187	ArgumentList	sink [ j ]		3157335	1					
ANR	3158188	Argument	sink [ j ]		3157335	0					
ANR	3158189	ArrayIndexing	sink [ j ]		3157335	0					
ANR	3158190	Identifier	sink		3157335	0					
ANR	3158191	Identifier	j		3157335	1					
ANR	3158192	ExpressionStatement	"printf ( ""---constituent anchored at %d\\n"" , i )"	246:0:8053:8096	3157335	6	True				
ANR	3158193	CallExpression	"printf ( ""---constituent anchored at %d\\n"" , i )"		3157335	0					
ANR	3158194	Callee	printf		3157335	0					
ANR	3158195	Identifier	printf		3157335	0					
ANR	3158196	ArgumentList	"""---constituent anchored at %d\\n"""		3157335	1					
ANR	3158197	Argument	"""---constituent anchored at %d\\n"""		3157335	0					
ANR	3158198	PrimaryExpression	"""---constituent anchored at %d\\n"""		3157335	0					
ANR	3158199	Argument	i		3157335	1					
ANR	3158200	Identifier	i		3157335	0					
ANR	3158201	ExpressionStatement	"printf ( ""      ancestors: "" )"	247:0:8098:8125	3157335	7	True				
ANR	3158202	CallExpression	"printf ( ""      ancestors: "" )"		3157335	0					
ANR	3158203	Callee	printf		3157335	0					
ANR	3158204	Identifier	printf		3157335	0					
ANR	3158205	ArgumentList	"""      ancestors: """		3157335	1					
ANR	3158206	Argument	"""      ancestors: """		3157335	0					
ANR	3158207	PrimaryExpression	"""      ancestors: """		3157335	0					
ANR	3158208	ForStatement	for ( int k = 0 ; k < constituentAncestor [ i ] . getNumElem ( ) ; k ++ )		3157335	8					
ANR	3158209	ForInit	int k = 0 ;	248:5:8132:8139	3157335	0	True				
ANR	3158210	IdentifierDeclStatement	int k = 0 ;		3157335	0					
ANR	3158211	IdentifierDecl	k = 0		3157335	0					
ANR	3158212	IdentifierDeclType	int		3157335	0					
ANR	3158213	Identifier	k		3157335	1					
ANR	3158214	AssignmentExpression	k = 0		3157335	2		=			
ANR	3158215	Identifier	k		3157335	0					
ANR	3158216	PrimaryExpression	0		3157335	1					
ANR	3158217	Condition	k < constituentAncestor [ i ] . getNumElem ( )	248:14:8141:8177	3157335	1	True				
ANR	3158218	RelationalExpression	k < constituentAncestor [ i ] . getNumElem ( )		3157335	0		<			
ANR	3158219	Identifier	k		3157335	0					
ANR	3158220	CallExpression	constituentAncestor [ i ] . getNumElem ( )		3157335	1					
ANR	3158221	Callee	constituentAncestor [ i ] . getNumElem		3157335	0					
ANR	3158222	MemberAccess	constituentAncestor [ i ] . getNumElem		3157335	0					
ANR	3158223	ArrayIndexing	constituentAncestor [ i ]		3157335	0					
ANR	3158224	Identifier	constituentAncestor		3157335	0					
ANR	3158225	Identifier	i		3157335	1					
ANR	3158226	Identifier	getNumElem		3157335	1					
ANR	3158227	ArgumentList			3157335	1					
ANR	3158228	PostIncDecOperationExpression	k ++	248:53:8180:8182	3157335	2	True				
ANR	3158229	Identifier	k		3157335	0					
ANR	3158230	IncDec	++		3157335	1					
ANR	3158231	ExpressionStatement	"printf ( ""%d "" , constituentAncestor [ i ] . getElem ( k ) )"	249:1:8187:8236	3157335	3	True				
ANR	3158232	CallExpression	"printf ( ""%d "" , constituentAncestor [ i ] . getElem ( k ) )"		3157335	0					
ANR	3158233	Callee	printf		3157335	0					
ANR	3158234	Identifier	printf		3157335	0					
ANR	3158235	ArgumentList	"""%d """		3157335	1					
ANR	3158236	Argument	"""%d """		3157335	0					
ANR	3158237	PrimaryExpression	"""%d """		3157335	0					
ANR	3158238	Argument	constituentAncestor [ i ] . getElem ( k )		3157335	1					
ANR	3158239	CallExpression	constituentAncestor [ i ] . getElem ( k )		3157335	0					
ANR	3158240	Callee	constituentAncestor [ i ] . getElem		3157335	0					
ANR	3158241	MemberAccess	constituentAncestor [ i ] . getElem		3157335	0					
ANR	3158242	ArrayIndexing	constituentAncestor [ i ]		3157335	0					
ANR	3158243	Identifier	constituentAncestor		3157335	0					
ANR	3158244	Identifier	i		3157335	1					
ANR	3158245	Identifier	getElem		3157335	1					
ANR	3158246	ArgumentList	k		3157335	1					
ANR	3158247	Argument	k		3157335	0					
ANR	3158248	Identifier	k		3157335	0					
ANR	3158249	ExpressionStatement	"printf ( ""\\n"" )"	250:0:8238:8250	3157335	9	True				
ANR	3158250	CallExpression	"printf ( ""\\n"" )"		3157335	0					
ANR	3158251	Callee	printf		3157335	0					
ANR	3158252	Identifier	printf		3157335	0					
ANR	3158253	ArgumentList	"""\\n"""		3157335	1					
ANR	3158254	Argument	"""\\n"""		3157335	0					
ANR	3158255	PrimaryExpression	"""\\n"""		3157335	0					
ANR	3158256	ExpressionStatement	"printf ( ""      sinks: "" )"	251:0:8252:8275	3157335	10	True				
ANR	3158257	CallExpression	"printf ( ""      sinks: "" )"		3157335	0					
ANR	3158258	Callee	printf		3157335	0					
ANR	3158259	Identifier	printf		3157335	0					
ANR	3158260	ArgumentList	"""      sinks: """		3157335	1					
ANR	3158261	Argument	"""      sinks: """		3157335	0					
ANR	3158262	PrimaryExpression	"""      sinks: """		3157335	0					
ANR	3158263	ForStatement	for ( int k = 0 ; k < constituentSink [ i ] . getNumElem ( ) ; k ++ )		3157335	11					
ANR	3158264	ForInit	int k = 0 ;	252:5:8282:8289	3157335	0	True				
ANR	3158265	IdentifierDeclStatement	int k = 0 ;		3157335	0					
ANR	3158266	IdentifierDecl	k = 0		3157335	0					
ANR	3158267	IdentifierDeclType	int		3157335	0					
ANR	3158268	Identifier	k		3157335	1					
ANR	3158269	AssignmentExpression	k = 0		3157335	2		=			
ANR	3158270	Identifier	k		3157335	0					
ANR	3158271	PrimaryExpression	0		3157335	1					
ANR	3158272	Condition	k < constituentSink [ i ] . getNumElem ( )	252:14:8291:8323	3157335	1	True				
ANR	3158273	RelationalExpression	k < constituentSink [ i ] . getNumElem ( )		3157335	0		<			
ANR	3158274	Identifier	k		3157335	0					
ANR	3158275	CallExpression	constituentSink [ i ] . getNumElem ( )		3157335	1					
ANR	3158276	Callee	constituentSink [ i ] . getNumElem		3157335	0					
ANR	3158277	MemberAccess	constituentSink [ i ] . getNumElem		3157335	0					
ANR	3158278	ArrayIndexing	constituentSink [ i ]		3157335	0					
ANR	3158279	Identifier	constituentSink		3157335	0					
ANR	3158280	Identifier	i		3157335	1					
ANR	3158281	Identifier	getNumElem		3157335	1					
ANR	3158282	ArgumentList			3157335	1					
ANR	3158283	PostIncDecOperationExpression	k ++	252:49:8326:8328	3157335	2	True				
ANR	3158284	Identifier	k		3157335	0					
ANR	3158285	IncDec	++		3157335	1					
ANR	3158286	ExpressionStatement	"printf ( ""%d "" , constituentSink [ i ] . getElem ( k ) )"	253:1:8333:8378	3157335	3	True				
ANR	3158287	CallExpression	"printf ( ""%d "" , constituentSink [ i ] . getElem ( k ) )"		3157335	0					
ANR	3158288	Callee	printf		3157335	0					
ANR	3158289	Identifier	printf		3157335	0					
ANR	3158290	ArgumentList	"""%d """		3157335	1					
ANR	3158291	Argument	"""%d """		3157335	0					
ANR	3158292	PrimaryExpression	"""%d """		3157335	0					
ANR	3158293	Argument	constituentSink [ i ] . getElem ( k )		3157335	1					
ANR	3158294	CallExpression	constituentSink [ i ] . getElem ( k )		3157335	0					
ANR	3158295	Callee	constituentSink [ i ] . getElem		3157335	0					
ANR	3158296	MemberAccess	constituentSink [ i ] . getElem		3157335	0					
ANR	3158297	ArrayIndexing	constituentSink [ i ]		3157335	0					
ANR	3158298	Identifier	constituentSink		3157335	0					
ANR	3158299	Identifier	i		3157335	1					
ANR	3158300	Identifier	getElem		3157335	1					
ANR	3158301	ArgumentList	k		3157335	1					
ANR	3158302	Argument	k		3157335	0					
ANR	3158303	Identifier	k		3157335	0					
ANR	3158304	ExpressionStatement	"printf ( ""\\n"" )"	254:0:8380:8392	3157335	12	True				
ANR	3158305	CallExpression	"printf ( ""\\n"" )"		3157335	0					
ANR	3158306	Callee	printf		3157335	0					
ANR	3158307	Identifier	printf		3157335	0					
ANR	3158308	ArgumentList	"""\\n"""		3157335	1					
ANR	3158309	Argument	"""\\n"""		3157335	0					
ANR	3158310	PrimaryExpression	"""\\n"""		3157335	0					
ANR	3158311	ExpressionStatement		256:4:8405:8405	3157335	1	True				
ANR	3158312	ExpressionStatement		257:3:8410:8410	3157335	16	True				
ANR	3158313	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		3157335	17					
ANR	3158314	ForInit	i = 0 ;	261:7:8536:8539	3157335	0	True				
ANR	3158315	AssignmentExpression	i = 0		3157335	0		=			
ANR	3158316	Identifier	i		3157335	0					
ANR	3158317	PrimaryExpression	0		3157335	1					
ANR	3158318	Condition	i < numNodes	261:12:8541:8550	3157335	1	True				
ANR	3158319	RelationalExpression	i < numNodes		3157335	0		<			
ANR	3158320	Identifier	i		3157335	0					
ANR	3158321	Identifier	numNodes		3157335	1					
ANR	3158322	PostIncDecOperationExpression	i ++	261:24:8553:8555	3157335	2	True				
ANR	3158323	Identifier	i		3157335	0					
ANR	3158324	IncDec	++		3157335	1					
ANR	3158325	CompoundStatement		213:30:7011:7011	3157335	3					
ANR	3158326	ExpressionStatement	minimalConstituent [ i ] = false	262:3:8564:8593	3157335	0	True				
ANR	3158327	AssignmentExpression	minimalConstituent [ i ] = false		3157335	0		=			
ANR	3158328	ArrayIndexing	minimalConstituent [ i ]		3157335	0					
ANR	3158329	Identifier	minimalConstituent		3157335	0					
ANR	3158330	Identifier	i		3157335	1					
ANR	3158331	Identifier	false		3157335	1					
ANR	3158332	ExpressionStatement	colorIncl [ i ] = 0	263:3:8598:8612	3157335	1	True				
ANR	3158333	AssignmentExpression	colorIncl [ i ] = 0		3157335	0		=			
ANR	3158334	ArrayIndexing	colorIncl [ i ]		3157335	0					
ANR	3158335	Identifier	colorIncl		3157335	0					
ANR	3158336	Identifier	i		3157335	1					
ANR	3158337	PrimaryExpression	0		3157335	1					
ANR	3158338	ExpressionStatement		264:3:8617:8617	3157335	18	True				
ANR	3158339	IdentifierDeclStatement	int color2 = 0 ;	265:2:8621:8633	3157335	19	True				
ANR	3158340	IdentifierDecl	color2 = 0		3157335	0					
ANR	3158341	IdentifierDeclType	int		3157335	0					
ANR	3158342	Identifier	color2		3157335	1					
ANR	3158343	AssignmentExpression	color2 = 0		3157335	2		=			
ANR	3158344	Identifier	color2		3157335	0					
ANR	3158345	PrimaryExpression	0		3157335	1					
ANR	3158346	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		3157335	20					
ANR	3158347	ForInit	i = 0 ;	266:7:8642:8645	3157335	0	True				
ANR	3158348	AssignmentExpression	i = 0		3157335	0		=			
ANR	3158349	Identifier	i		3157335	0					
ANR	3158350	PrimaryExpression	0		3157335	1					
ANR	3158351	Condition	i < numNodes	266:12:8647:8656	3157335	1	True				
ANR	3158352	RelationalExpression	i < numNodes		3157335	0		<			
ANR	3158353	Identifier	i		3157335	0					
ANR	3158354	Identifier	numNodes		3157335	1					
ANR	3158355	PostIncDecOperationExpression	i ++	266:24:8659:8661	3157335	2	True				
ANR	3158356	Identifier	i		3157335	0					
ANR	3158357	IncDec	++		3157335	1					
ANR	3158358	CompoundStatement		218:30:7117:7117	3157335	3					
ANR	3158359	IfStatement	if ( 0 == numberOfParents [ i ] )		3157335	0					
ANR	3158360	Condition	0 == numberOfParents [ i ]	268:7:8675:8695	3157335	0	True				
ANR	3158361	EqualityExpression	0 == numberOfParents [ i ]		3157335	0		==			
ANR	3158362	PrimaryExpression	0		3157335	0					
ANR	3158363	ArrayIndexing	numberOfParents [ i ]		3157335	1					
ANR	3158364	Identifier	numberOfParents		3157335	0					
ANR	3158365	Identifier	i		3157335	1					
ANR	3158366	CompoundStatement		223:4:7185:7202	3157335	1					
ANR	3158367	IdentifierDeclStatement	bool minimal = true ;	271:4:8733:8750	3157335	0	True				
ANR	3158368	IdentifierDecl	minimal = true		3157335	0					
ANR	3158369	IdentifierDeclType	bool		3157335	0					
ANR	3158370	Identifier	minimal		3157335	1					
ANR	3158371	AssignmentExpression	minimal = true		3157335	2		=			
ANR	3158372	Identifier	true		3157335	0					
ANR	3158373	Identifier	true		3157335	1					
ANR	3158374	ForStatement	for ( j = 0 ; j < numNodes ; j ++ )		3157335	1					
ANR	3158375	ForInit	j = 0 ;	274:9:8797:8800	3157335	0	True				
ANR	3158376	AssignmentExpression	j = 0		3157335	0		=			
ANR	3158377	Identifier	j		3157335	0					
ANR	3158378	PrimaryExpression	0		3157335	1					
ANR	3158379	Condition	j < numNodes	274:14:8802:8811	3157335	1	True				
ANR	3158380	RelationalExpression	j < numNodes		3157335	0		<			
ANR	3158381	Identifier	j		3157335	0					
ANR	3158382	Identifier	numNodes		3157335	1					
ANR	3158383	PostIncDecOperationExpression	j ++	274:26:8814:8816	3157335	2	True				
ANR	3158384	Identifier	j		3157335	0					
ANR	3158385	IncDec	++		3157335	1					
ANR	3158386	CompoundStatement		226:32:7272:7272	3157335	3					
ANR	3158387	IfStatement	if ( 0 == numberOfParents [ j ] && i != j )		3157335	0					
ANR	3158388	Condition	0 == numberOfParents [ j ] && i != j	275:9:8831:8859	3157335	0	True				
ANR	3158389	AndExpression	0 == numberOfParents [ j ] && i != j		3157335	0		&&			
ANR	3158390	EqualityExpression	0 == numberOfParents [ j ]		3157335	0		==			
ANR	3158391	PrimaryExpression	0		3157335	0					
ANR	3158392	ArrayIndexing	numberOfParents [ j ]		3157335	1					
ANR	3158393	Identifier	numberOfParents		3157335	0					
ANR	3158394	Identifier	j		3157335	1					
ANR	3158395	EqualityExpression	i != j		3157335	1		!=			
ANR	3158396	Identifier	i		3157335	0					
ANR	3158397	Identifier	j		3157335	1					
ANR	3158398	CompoundStatement		234:6:7713:7745	3157335	1					
ANR	3158399	ExpressionStatement	color2 ++	278:6:8943:8951	3157335	0	True				
ANR	3158400	PostIncDecOperationExpression	color2 ++		3157335	0					
ANR	3158401	Identifier	color2		3157335	0					
ANR	3158402	IncDec	++		3157335	1					
ANR	3158403	IdentifierDeclStatement	"bool iINj = testAincludedInB ( constituentSink [ i ] , constituentAncestor [ i ] , constituentSink [ j ] , constituentAncestor [ j ] , colorIncl , color2 ) ;"	279:6:8959:9094	3157335	1	True				
ANR	3158404	IdentifierDecl	"iINj = testAincludedInB ( constituentSink [ i ] , constituentAncestor [ i ] , constituentSink [ j ] , constituentAncestor [ j ] , colorIncl , color2 )"		3157335	0					
ANR	3158405	IdentifierDeclType	bool		3157335	0					
ANR	3158406	Identifier	iINj		3157335	1					
ANR	3158407	AssignmentExpression	"iINj = testAincludedInB ( constituentSink [ i ] , constituentAncestor [ i ] , constituentSink [ j ] , constituentAncestor [ j ] , colorIncl , color2 )"		3157335	2		=			
ANR	3158408	Identifier	iINj		3157335	0					
ANR	3158409	CallExpression	"testAincludedInB ( constituentSink [ i ] , constituentAncestor [ i ] , constituentSink [ j ] , constituentAncestor [ j ] , colorIncl , color2 )"		3157335	1					
ANR	3158410	Callee	testAincludedInB		3157335	0					
ANR	3158411	Identifier	testAincludedInB		3157335	0					
ANR	3158412	ArgumentList	constituentSink [ i ]		3157335	1					
ANR	3158413	Argument	constituentSink [ i ]		3157335	0					
ANR	3158414	ArrayIndexing	constituentSink [ i ]		3157335	0					
ANR	3158415	Identifier	constituentSink		3157335	0					
ANR	3158416	Identifier	i		3157335	1					
ANR	3158417	Argument	constituentAncestor [ i ]		3157335	1					
ANR	3158418	ArrayIndexing	constituentAncestor [ i ]		3157335	0					
ANR	3158419	Identifier	constituentAncestor		3157335	0					
ANR	3158420	Identifier	i		3157335	1					
ANR	3158421	Argument	constituentSink [ j ]		3157335	2					
ANR	3158422	ArrayIndexing	constituentSink [ j ]		3157335	0					
ANR	3158423	Identifier	constituentSink		3157335	0					
ANR	3158424	Identifier	j		3157335	1					
ANR	3158425	Argument	constituentAncestor [ j ]		3157335	3					
ANR	3158426	ArrayIndexing	constituentAncestor [ j ]		3157335	0					
ANR	3158427	Identifier	constituentAncestor		3157335	0					
ANR	3158428	Identifier	j		3157335	1					
ANR	3158429	Argument	colorIncl		3157335	4					
ANR	3158430	Identifier	colorIncl		3157335	0					
ANR	3158431	Argument	color2		3157335	5					
ANR	3158432	Identifier	color2		3157335	0					
ANR	3158433	ExpressionStatement	color2 ++	280:6:9102:9110	3157335	2	True				
ANR	3158434	PostIncDecOperationExpression	color2 ++		3157335	0					
ANR	3158435	Identifier	color2		3157335	0					
ANR	3158436	IncDec	++		3157335	1					
ANR	3158437	IdentifierDeclStatement	"bool jINi = testAincludedInB ( constituentSink [ j ] , constituentAncestor [ j ] , constituentSink [ i ] , constituentAncestor [ i ] , colorIncl , color2 ) ;"	281:6:9118:9253	3157335	3	True				
ANR	3158438	IdentifierDecl	"jINi = testAincludedInB ( constituentSink [ j ] , constituentAncestor [ j ] , constituentSink [ i ] , constituentAncestor [ i ] , colorIncl , color2 )"		3157335	0					
ANR	3158439	IdentifierDeclType	bool		3157335	0					
ANR	3158440	Identifier	jINi		3157335	1					
ANR	3158441	AssignmentExpression	"jINi = testAincludedInB ( constituentSink [ j ] , constituentAncestor [ j ] , constituentSink [ i ] , constituentAncestor [ i ] , colorIncl , color2 )"		3157335	2		=			
ANR	3158442	Identifier	jINi		3157335	0					
ANR	3158443	CallExpression	"testAincludedInB ( constituentSink [ j ] , constituentAncestor [ j ] , constituentSink [ i ] , constituentAncestor [ i ] , colorIncl , color2 )"		3157335	1					
ANR	3158444	Callee	testAincludedInB		3157335	0					
ANR	3158445	Identifier	testAincludedInB		3157335	0					
ANR	3158446	ArgumentList	constituentSink [ j ]		3157335	1					
ANR	3158447	Argument	constituentSink [ j ]		3157335	0					
ANR	3158448	ArrayIndexing	constituentSink [ j ]		3157335	0					
ANR	3158449	Identifier	constituentSink		3157335	0					
ANR	3158450	Identifier	j		3157335	1					
ANR	3158451	Argument	constituentAncestor [ j ]		3157335	1					
ANR	3158452	ArrayIndexing	constituentAncestor [ j ]		3157335	0					
ANR	3158453	Identifier	constituentAncestor		3157335	0					
ANR	3158454	Identifier	j		3157335	1					
ANR	3158455	Argument	constituentSink [ i ]		3157335	2					
ANR	3158456	ArrayIndexing	constituentSink [ i ]		3157335	0					
ANR	3158457	Identifier	constituentSink		3157335	0					
ANR	3158458	Identifier	i		3157335	1					
ANR	3158459	Argument	constituentAncestor [ i ]		3157335	3					
ANR	3158460	ArrayIndexing	constituentAncestor [ i ]		3157335	0					
ANR	3158461	Identifier	constituentAncestor		3157335	0					
ANR	3158462	Identifier	i		3157335	1					
ANR	3158463	Argument	colorIncl		3157335	4					
ANR	3158464	Identifier	colorIncl		3157335	0					
ANR	3158465	Argument	color2		3157335	5					
ANR	3158466	Identifier	color2		3157335	0					
ANR	3158467	IdentifierDeclStatement	bool strict = ( jINi && ! ( iINj ) ) ;	282:6:9261:9293	3157335	4	True				
ANR	3158468	IdentifierDecl	strict = ( jINi && ! ( iINj ) )		3157335	0					
ANR	3158469	IdentifierDeclType	bool		3157335	0					
ANR	3158470	Identifier	strict		3157335	1					
ANR	3158471	AssignmentExpression	strict = ( jINi && ! ( iINj ) )		3157335	2		=			
ANR	3158472	Identifier	strict		3157335	0					
ANR	3158473	AndExpression	jINi && ! ( iINj )		3157335	1		&&			
ANR	3158474	Identifier	jINi		3157335	0					
ANR	3158475	UnaryOperationExpression	! ( iINj )		3157335	1					
ANR	3158476	UnaryOperator	!		3157335	0					
ANR	3158477	Identifier	iINj		3157335	1					
ANR	3158478	IfStatement	if ( strict )		3157335	5					
ANR	3158479	Condition	strict	285:10:9363:9368	3157335	0	True				
ANR	3158480	Identifier	strict		3157335	0					
ANR	3158481	CompoundStatement		237:19:7824:7824	3157335	1					
ANR	3158482	ExpressionStatement	minimal = false	286:7:9381:9396	3157335	0	True				
ANR	3158483	AssignmentExpression	minimal = false		3157335	0		=			
ANR	3158484	Identifier	minimal		3157335	0					
ANR	3158485	Identifier	false		3157335	1					
ANR	3158486	BreakStatement	break ;	287:7:9405:9410	3157335	1	True				
ANR	3158487	ExpressionStatement		288:7:9419:9419	3157335	6	True				
ANR	3158488	ExpressionStatement		289:6:9427:9427	3157335	1	True				
ANR	3158489	ExpressionStatement		290:5:9434:9434	3157335	2	True				
ANR	3158490	ExpressionStatement	minimalConstituent [ i ] = minimal	293:4:9471:9502	3157335	3	True				
ANR	3158491	AssignmentExpression	minimalConstituent [ i ] = minimal		3157335	0		=			
ANR	3158492	ArrayIndexing	minimalConstituent [ i ]		3157335	0					
ANR	3158493	Identifier	minimalConstituent		3157335	0					
ANR	3158494	Identifier	i		3157335	1					
ANR	3158495	Identifier	minimal		3157335	1					
ANR	3158496	ExpressionStatement		295:4:9509:9509	3157335	1	True				
ANR	3158497	ExpressionStatement		296:3:9514:9514	3157335	21	True				
ANR	3158498	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		3157335	22					
ANR	3158499	ForInit	i = 0 ;	303:7:9785:9788	3157335	0	True				
ANR	3158500	AssignmentExpression	i = 0		3157335	0		=			
ANR	3158501	Identifier	i		3157335	0					
ANR	3158502	PrimaryExpression	0		3157335	1					
ANR	3158503	Condition	i < numNodes	303:12:9790:9799	3157335	1	True				
ANR	3158504	RelationalExpression	i < numNodes		3157335	0		<			
ANR	3158505	Identifier	i		3157335	0					
ANR	3158506	Identifier	numNodes		3157335	1					
ANR	3158507	PostIncDecOperationExpression	i ++	303:24:9802:9804	3157335	2	True				
ANR	3158508	Identifier	i		3157335	0					
ANR	3158509	IncDec	++		3157335	1					
ANR	3158510	CompoundStatement		255:30:8260:8260	3157335	3					
ANR	3158511	IfStatement	if ( minimalConstituent [ i ] && ( - 1 != numberOfParents [ constituentAncestor [ i ] . getElem ( 0 ) ] ) )		3157335	0					
ANR	3158512	Condition	minimalConstituent [ i ] && ( - 1 != numberOfParents [ constituentAncestor [ i ] . getElem ( 0 ) ] )	308:7:9995:10079	3157335	0	True				
ANR	3158513	AndExpression	minimalConstituent [ i ] && ( - 1 != numberOfParents [ constituentAncestor [ i ] . getElem ( 0 ) ] )		3157335	0		&&			
ANR	3158514	ArrayIndexing	minimalConstituent [ i ]		3157335	0					
ANR	3158515	Identifier	minimalConstituent		3157335	0					
ANR	3158516	Identifier	i		3157335	1					
ANR	3158517	EqualityExpression	- 1 != numberOfParents [ constituentAncestor [ i ] . getElem ( 0 ) ]		3157335	1		!=			
ANR	3158518	UnaryOperationExpression	- 1		3157335	0					
ANR	3158519	UnaryOperator	-		3157335	0					
ANR	3158520	PrimaryExpression	1		3157335	1					
ANR	3158521	ArrayIndexing	numberOfParents [ constituentAncestor [ i ] . getElem ( 0 ) ]		3157335	1					
ANR	3158522	Identifier	numberOfParents		3157335	0					
ANR	3158523	CallExpression	constituentAncestor [ i ] . getElem ( 0 )		3157335	1					
ANR	3158524	Callee	constituentAncestor [ i ] . getElem		3157335	0					
ANR	3158525	MemberAccess	constituentAncestor [ i ] . getElem		3157335	0					
ANR	3158526	ArrayIndexing	constituentAncestor [ i ]		3157335	0					
ANR	3158527	Identifier	constituentAncestor		3157335	0					
ANR	3158528	Identifier	i		3157335	1					
ANR	3158529	Identifier	getElem		3157335	1					
ANR	3158530	ArgumentList	0		3157335	1					
ANR	3158531	Argument	0		3157335	0					
ANR	3158532	PrimaryExpression	0		3157335	0					
ANR	3158533	CompoundStatement		260:95:8535:8535	3157335	1					
ANR	3158534	ExpressionStatement	"detachConstituent ( skeleton , i , constituentIDtoAnchor , sinkToConstituentID , numberOfParents , constituentAncestor [ i ] , constituentSink [ i ] )"	311:4:10174:10320	3157335	0	True				
ANR	3158535	CallExpression	"detachConstituent ( skeleton , i , constituentIDtoAnchor , sinkToConstituentID , numberOfParents , constituentAncestor [ i ] , constituentSink [ i ] )"		3157335	0					
ANR	3158536	Callee	detachConstituent		3157335	0					
ANR	3158537	Identifier	detachConstituent		3157335	0					
ANR	3158538	ArgumentList	skeleton		3157335	1					
ANR	3158539	Argument	skeleton		3157335	0					
ANR	3158540	Identifier	skeleton		3157335	0					
ANR	3158541	Argument	i		3157335	1					
ANR	3158542	Identifier	i		3157335	0					
ANR	3158543	Argument	constituentIDtoAnchor		3157335	2					
ANR	3158544	Identifier	constituentIDtoAnchor		3157335	0					
ANR	3158545	Argument	sinkToConstituentID		3157335	3					
ANR	3158546	Identifier	sinkToConstituentID		3157335	0					
ANR	3158547	Argument	numberOfParents		3157335	4					
ANR	3158548	Identifier	numberOfParents		3157335	0					
ANR	3158549	Argument	constituentAncestor [ i ]		3157335	5					
ANR	3158550	ArrayIndexing	constituentAncestor [ i ]		3157335	0					
ANR	3158551	Identifier	constituentAncestor		3157335	0					
ANR	3158552	Identifier	i		3157335	1					
ANR	3158553	Argument	constituentSink [ i ]		3157335	6					
ANR	3158554	ArrayIndexing	constituentSink [ i ]		3157335	0					
ANR	3158555	Identifier	constituentSink		3157335	0					
ANR	3158556	Identifier	i		3157335	1					
ANR	3158557	ExpressionStatement	type . append ( COMPLEX )	315:4:10359:10379	3157335	1	True				
ANR	3158558	CallExpression	type . append ( COMPLEX )		3157335	0					
ANR	3158559	Callee	type . append		3157335	0					
ANR	3158560	MemberAccess	type . append		3157335	0					
ANR	3158561	Identifier	type		3157335	0					
ANR	3158562	Identifier	append		3157335	1					
ANR	3158563	ArgumentList	COMPLEX		3157335	1					
ANR	3158564	Argument	COMPLEX		3157335	0					
ANR	3158565	Identifier	COMPLEX		3157335	0					
ANR	3158566	ExpressionStatement		316:4:10385:10385	3157335	1	True				
ANR	3158567	ExpressionStatement		317:3:10390:10390	3157335	23	True				
ANR	3158568	ExpressionStatement	"printf ( ""\\n"" )"	320:0:10408:10420	3157335	24	True				
ANR	3158569	CallExpression	"printf ( ""\\n"" )"		3157335	0					
ANR	3158570	Callee	printf		3157335	0					
ANR	3158571	Identifier	printf		3157335	0					
ANR	3158572	ArgumentList	"""\\n"""		3157335	1					
ANR	3158573	Argument	"""\\n"""		3157335	0					
ANR	3158574	PrimaryExpression	"""\\n"""		3157335	0					
ANR	3158575	ExpressionStatement		323:2:10432:10432	3157335	38	True				
ANR	3158576	IdentifierDeclStatement	int numIsolated = 0 ;	328:1:10503:10520	3157335	39	True				
ANR	3158577	IdentifierDecl	numIsolated = 0		3157335	0					
ANR	3158578	IdentifierDeclType	int		3157335	0					
ANR	3158579	Identifier	numIsolated		3157335	1					
ANR	3158580	AssignmentExpression	numIsolated = 0		3157335	2		=			
ANR	3158581	Identifier	numIsolated		3157335	0					
ANR	3158582	PrimaryExpression	0		3157335	1					
ANR	3158583	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		3157335	40					
ANR	3158584	ForInit	i = 0 ;	329:6:10528:10531	3157335	0	True				
ANR	3158585	AssignmentExpression	i = 0		3157335	0		=			
ANR	3158586	Identifier	i		3157335	0					
ANR	3158587	PrimaryExpression	0		3157335	1					
ANR	3158588	Condition	i < numNodes	329:11:10533:10542	3157335	1	True				
ANR	3158589	RelationalExpression	i < numNodes		3157335	0		<			
ANR	3158590	Identifier	i		3157335	0					
ANR	3158591	Identifier	numNodes		3157335	1					
ANR	3158592	PostIncDecOperationExpression	i ++	329:23:10545:10547	3157335	2	True				
ANR	3158593	Identifier	i		3157335	0					
ANR	3158594	IncDec	++		3157335	1					
ANR	3158595	CompoundStatement		281:29:9003:9003	3157335	3					
ANR	3158596	IfStatement	if ( 0 == skeleton . getNumArcs ( i ) && 0 == reversed . getNumArcs ( i ) )		3157335	0					
ANR	3158597	Condition	0 == skeleton . getNumArcs ( i ) && 0 == reversed . getNumArcs ( i )	330:6:10559:10612	3157335	0	True				
ANR	3158598	AndExpression	0 == skeleton . getNumArcs ( i ) && 0 == reversed . getNumArcs ( i )		3157335	0		&&			
ANR	3158599	EqualityExpression	0 == skeleton . getNumArcs ( i )		3157335	0		==			
ANR	3158600	PrimaryExpression	0		3157335	0					
ANR	3158601	CallExpression	skeleton . getNumArcs ( i )		3157335	1					
ANR	3158602	Callee	skeleton . getNumArcs		3157335	0					
ANR	3158603	MemberAccess	skeleton . getNumArcs		3157335	0					
ANR	3158604	Identifier	skeleton		3157335	0					
ANR	3158605	Identifier	getNumArcs		3157335	1					
ANR	3158606	ArgumentList	i		3157335	1					
ANR	3158607	Argument	i		3157335	0					
ANR	3158608	Identifier	i		3157335	0					
ANR	3158609	EqualityExpression	0 == reversed . getNumArcs ( i )		3157335	1		==			
ANR	3158610	PrimaryExpression	0		3157335	0					
ANR	3158611	CallExpression	reversed . getNumArcs ( i )		3157335	1					
ANR	3158612	Callee	reversed . getNumArcs		3157335	0					
ANR	3158613	MemberAccess	reversed . getNumArcs		3157335	0					
ANR	3158614	Identifier	reversed		3157335	0					
ANR	3158615	Identifier	getNumArcs		3157335	1					
ANR	3158616	ArgumentList	i		3157335	1					
ANR	3158617	Argument	i		3157335	0					
ANR	3158618	Identifier	i		3157335	0					
ANR	3158619	ExpressionStatement	numIsolated ++	331:3:10619:10632	3157335	1	True				
ANR	3158620	PostIncDecOperationExpression	numIsolated ++		3157335	0					
ANR	3158621	Identifier	numIsolated		3157335	0					
ANR	3158622	IncDec	++		3157335	1					
ANR	3158623	ExpressionStatement		332:2:10636:10636	3157335	41	True				
ANR	3158624	ForStatement	for ( i = 0 ; i < getNumNodes ( ) ; i ++ )		3157335	42					
ANR	3158625	ForInit	i = 0 ;	335:6:10697:10700	3157335	0	True				
ANR	3158626	AssignmentExpression	i = 0		3157335	0		=			
ANR	3158627	Identifier	i		3157335	0					
ANR	3158628	PrimaryExpression	0		3157335	1					
ANR	3158629	Condition	i < getNumNodes ( )	335:11:10702:10716	3157335	1	True				
ANR	3158630	RelationalExpression	i < getNumNodes ( )		3157335	0		<			
ANR	3158631	Identifier	i		3157335	0					
ANR	3158632	CallExpression	getNumNodes ( )		3157335	1					
ANR	3158633	Callee	getNumNodes		3157335	0					
ANR	3158634	Identifier	getNumNodes		3157335	0					
ANR	3158635	ArgumentList			3157335	1					
ANR	3158636	PostIncDecOperationExpression	i ++	335:28:10719:10721	3157335	2	True				
ANR	3158637	Identifier	i		3157335	0					
ANR	3158638	IncDec	++		3157335	1					
ANR	3158639	CompoundStatement		288:2:9181:9187	3157335	3					
ANR	3158640	IdentifierDeclStatement	Dag * p ;	336:2:10729:10735	3157335	0	True				
ANR	3158641	IdentifierDecl	* p		3157335	0					
ANR	3158642	IdentifierDeclType	Dag *		3157335	0					
ANR	3158643	Identifier	p		3157335	1					
ANR	3158644	ExpressionStatement	"p = constituentToDag ( skeleton , colorA , constituentAncestor [ constituentIDtoAnchor [ i ] ] , constituentSink [ constituentIDtoAnchor [ i ] ] )"	337:2:10739:10887	3157335	1	True				
ANR	3158645	AssignmentExpression	"p = constituentToDag ( skeleton , colorA , constituentAncestor [ constituentIDtoAnchor [ i ] ] , constituentSink [ constituentIDtoAnchor [ i ] ] )"		3157335	0		=			
ANR	3158646	Identifier	p		3157335	0					
ANR	3158647	CallExpression	"constituentToDag ( skeleton , colorA , constituentAncestor [ constituentIDtoAnchor [ i ] ] , constituentSink [ constituentIDtoAnchor [ i ] ] )"		3157335	1					
ANR	3158648	Callee	constituentToDag		3157335	0					
ANR	3158649	Identifier	constituentToDag		3157335	0					
ANR	3158650	ArgumentList	skeleton		3157335	1					
ANR	3158651	Argument	skeleton		3157335	0					
ANR	3158652	Identifier	skeleton		3157335	0					
ANR	3158653	Argument	colorA		3157335	1					
ANR	3158654	Identifier	colorA		3157335	0					
ANR	3158655	Argument	constituentAncestor [ constituentIDtoAnchor [ i ] ]		3157335	2					
ANR	3158656	ArrayIndexing	constituentAncestor [ constituentIDtoAnchor [ i ] ]		3157335	0					
ANR	3158657	Identifier	constituentAncestor		3157335	0					
ANR	3158658	ArrayIndexing	constituentIDtoAnchor [ i ]		3157335	1					
ANR	3158659	Identifier	constituentIDtoAnchor		3157335	0					
ANR	3158660	Identifier	i		3157335	1					
ANR	3158661	Argument	constituentSink [ constituentIDtoAnchor [ i ] ]		3157335	3					
ANR	3158662	ArrayIndexing	constituentSink [ constituentIDtoAnchor [ i ] ]		3157335	0					
ANR	3158663	Identifier	constituentSink		3157335	0					
ANR	3158664	ArrayIndexing	constituentIDtoAnchor [ i ]		3157335	1					
ANR	3158665	Identifier	constituentIDtoAnchor		3157335	0					
ANR	3158666	Identifier	i		3157335	1					
ANR	3158667	ExpressionStatement	constituent . append ( p )	340:2:10891:10912	3157335	2	True				
ANR	3158668	CallExpression	constituent . append ( p )		3157335	0					
ANR	3158669	Callee	constituent . append		3157335	0					
ANR	3158670	MemberAccess	constituent . append		3157335	0					
ANR	3158671	Identifier	constituent		3157335	0					
ANR	3158672	Identifier	append		3157335	1					
ANR	3158673	ArgumentList	p		3157335	1					
ANR	3158674	Argument	p		3157335	0					
ANR	3158675	Identifier	p		3157335	0					
ANR	3158676	ExpressionStatement		341:2:10916:10916	3157335	43	True				
ANR	3158677	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		3157335	44					
ANR	3158678	ForInit	i = 0 ;	344:6:10966:10969	3157335	0	True				
ANR	3158679	AssignmentExpression	i = 0		3157335	0		=			
ANR	3158680	Identifier	i		3157335	0					
ANR	3158681	PrimaryExpression	0		3157335	1					
ANR	3158682	Condition	i < numNodes	344:11:10971:10980	3157335	1	True				
ANR	3158683	RelationalExpression	i < numNodes		3157335	0		<			
ANR	3158684	Identifier	i		3157335	0					
ANR	3158685	Identifier	numNodes		3157335	1					
ANR	3158686	PostIncDecOperationExpression	i ++	344:23:10983:10985	3157335	2	True				
ANR	3158687	Identifier	i		3157335	0					
ANR	3158688	IncDec	++		3157335	1					
ANR	3158689	CompoundStatement		296:29:9441:9441	3157335	3					
ANR	3158690	IfStatement	if ( 0 == skeleton . getNumArcs ( i ) && 0 == reversed . getNumArcs ( i ) )		3157335	0					
ANR	3158691	Condition	0 == skeleton . getNumArcs ( i ) && 0 == reversed . getNumArcs ( i )	345:6:10997:11050	3157335	0	True				
ANR	3158692	AndExpression	0 == skeleton . getNumArcs ( i ) && 0 == reversed . getNumArcs ( i )		3157335	0		&&			
ANR	3158693	EqualityExpression	0 == skeleton . getNumArcs ( i )		3157335	0		==			
ANR	3158694	PrimaryExpression	0		3157335	0					
ANR	3158695	CallExpression	skeleton . getNumArcs ( i )		3157335	1					
ANR	3158696	Callee	skeleton . getNumArcs		3157335	0					
ANR	3158697	MemberAccess	skeleton . getNumArcs		3157335	0					
ANR	3158698	Identifier	skeleton		3157335	0					
ANR	3158699	Identifier	getNumArcs		3157335	1					
ANR	3158700	ArgumentList	i		3157335	1					
ANR	3158701	Argument	i		3157335	0					
ANR	3158702	Identifier	i		3157335	0					
ANR	3158703	EqualityExpression	0 == reversed . getNumArcs ( i )		3157335	1		==			
ANR	3158704	PrimaryExpression	0		3157335	0					
ANR	3158705	CallExpression	reversed . getNumArcs ( i )		3157335	1					
ANR	3158706	Callee	reversed . getNumArcs		3157335	0					
ANR	3158707	MemberAccess	reversed . getNumArcs		3157335	0					
ANR	3158708	Identifier	reversed		3157335	0					
ANR	3158709	Identifier	getNumArcs		3157335	1					
ANR	3158710	ArgumentList	i		3157335	1					
ANR	3158711	Argument	i		3157335	0					
ANR	3158712	Identifier	i		3157335	0					
ANR	3158713	CompoundStatement		298:3:9511:9531	3157335	1					
ANR	3158714	IdentifierDeclStatement	int node = addNode ( ) ;	346:3:11059:11079	3157335	0	True				
ANR	3158715	IdentifierDecl	node = addNode ( )		3157335	0					
ANR	3158716	IdentifierDeclType	int		3157335	0					
ANR	3158717	Identifier	node		3157335	1					
ANR	3158718	AssignmentExpression	node = addNode ( )		3157335	2		=			
ANR	3158719	Identifier	node		3157335	0					
ANR	3158720	CallExpression	addNode ( )		3157335	1					
ANR	3158721	Callee	addNode		3157335	0					
ANR	3158722	Identifier	addNode		3157335	0					
ANR	3158723	ArgumentList			3157335	1					
ANR	3158724	Statement	Dag	349:3:11122:11124	3157335	1	True				
ANR	3158725	Statement	*	349:7:11126:11126	3157335	2	True				
ANR	3158726	Statement	p	349:8:11127:11127	3157335	3	True				
ANR	3158727	Statement	=	349:10:11129:11129	3157335	4	True				
ANR	3158728	Statement	new	349:12:11131:11133	3157335	5	True				
ANR	3158729	ExpressionStatement	Dag	349:16:11135:11138	3157335	6	True				
ANR	3158730	Identifier	Dag		3157335	0					
ANR	3158731	ExpressionStatement	p -> addNode ( )	350:3:11143:11155	3157335	7	True				
ANR	3158732	CallExpression	p -> addNode ( )		3157335	0					
ANR	3158733	Callee	p -> addNode		3157335	0					
ANR	3158734	PtrMemberAccess	p -> addNode		3157335	0					
ANR	3158735	Identifier	p		3157335	0					
ANR	3158736	Identifier	addNode		3157335	1					
ANR	3158737	ArgumentList			3157335	1					
ANR	3158738	ExpressionStatement	"p -> setLabelInt ( 0 , i )"	351:3:11160:11179	3157335	8	True				
ANR	3158739	CallExpression	"p -> setLabelInt ( 0 , i )"		3157335	0					
ANR	3158740	Callee	p -> setLabelInt		3157335	0					
ANR	3158741	PtrMemberAccess	p -> setLabelInt		3157335	0					
ANR	3158742	Identifier	p		3157335	0					
ANR	3158743	Identifier	setLabelInt		3157335	1					
ANR	3158744	ArgumentList	0		3157335	1					
ANR	3158745	Argument	0		3157335	0					
ANR	3158746	PrimaryExpression	0		3157335	0					
ANR	3158747	Argument	i		3157335	1					
ANR	3158748	Identifier	i		3157335	0					
ANR	3158749	ExpressionStatement	constituent . append ( p )	354:3:11201:11222	3157335	9	True				
ANR	3158750	CallExpression	constituent . append ( p )		3157335	0					
ANR	3158751	Callee	constituent . append		3157335	0					
ANR	3158752	MemberAccess	constituent . append		3157335	0					
ANR	3158753	Identifier	constituent		3157335	0					
ANR	3158754	Identifier	append		3157335	1					
ANR	3158755	ArgumentList	p		3157335	1					
ANR	3158756	Argument	p		3157335	0					
ANR	3158757	Identifier	p		3157335	0					
ANR	3158758	ExpressionStatement	type . append ( SINGLETON )	355:3:11227:11249	3157335	10	True				
ANR	3158759	CallExpression	type . append ( SINGLETON )		3157335	0					
ANR	3158760	Callee	type . append		3157335	0					
ANR	3158761	MemberAccess	type . append		3157335	0					
ANR	3158762	Identifier	type		3157335	0					
ANR	3158763	Identifier	append		3157335	1					
ANR	3158764	ArgumentList	SINGLETON		3157335	1					
ANR	3158765	Argument	SINGLETON		3157335	0					
ANR	3158766	Identifier	SINGLETON		3157335	0					
ANR	3158767	ExpressionStatement		356:3:11254:11254	3157335	1	True				
ANR	3158768	ExpressionStatement		357:2:11258:11258	3157335	45	True				
ANR	3158769	Statement	delete	361:1:11285:11290	3157335	46	True				
ANR	3158770	Statement	[	361:7:11291:11291	3157335	47	True				
ANR	3158771	Statement	]	361:8:11292:11292	3157335	48	True				
ANR	3158772	ExpressionStatement	numberOfParents	361:10:11294:11309	3157335	49	True				
ANR	3158773	Identifier	numberOfParents		3157335	0					
ANR	3158774	Statement	delete	362:1:11312:11317	3157335	50	True				
ANR	3158775	Statement	[	362:7:11318:11318	3157335	51	True				
ANR	3158776	Statement	]	362:8:11319:11319	3157335	52	True				
ANR	3158777	ExpressionStatement	sink	362:10:11321:11325	3157335	53	True				
ANR	3158778	Identifier	sink		3157335	0					
ANR	3158779	Statement	delete	363:1:11328:11333	3157335	54	True				
ANR	3158780	Statement	[	363:7:11334:11334	3157335	55	True				
ANR	3158781	Statement	]	363:8:11335:11335	3157335	56	True				
ANR	3158782	ExpressionStatement	colorS	363:10:11337:11343	3157335	57	True				
ANR	3158783	Identifier	colorS		3157335	0					
ANR	3158784	Statement	delete	364:1:11346:11351	3157335	58	True				
ANR	3158785	Statement	[	364:7:11352:11352	3157335	59	True				
ANR	3158786	Statement	]	364:8:11353:11353	3157335	60	True				
ANR	3158787	ExpressionStatement	ancestor	364:10:11355:11363	3157335	61	True				
ANR	3158788	Identifier	ancestor		3157335	0					
ANR	3158789	Statement	delete	365:1:11366:11371	3157335	62	True				
ANR	3158790	Statement	[	365:7:11372:11372	3157335	63	True				
ANR	3158791	Statement	]	365:8:11373:11373	3157335	64	True				
ANR	3158792	ExpressionStatement	colorA	365:10:11375:11381	3157335	65	True				
ANR	3158793	Identifier	colorA		3157335	0					
ANR	3158794	Statement	delete	366:1:11384:11389	3157335	66	True				
ANR	3158795	Statement	[	366:7:11390:11390	3157335	67	True				
ANR	3158796	Statement	]	366:8:11391:11391	3157335	68	True				
ANR	3158797	ExpressionStatement	constituentSink	366:10:11393:11408	3157335	69	True				
ANR	3158798	Identifier	constituentSink		3157335	0					
ANR	3158799	Statement	delete	367:1:11411:11416	3157335	70	True				
ANR	3158800	Statement	[	367:7:11417:11417	3157335	71	True				
ANR	3158801	Statement	]	367:8:11418:11418	3157335	72	True				
ANR	3158802	ExpressionStatement	constituentAncestor	367:10:11420:11439	3157335	73	True				
ANR	3158803	Identifier	constituentAncestor		3157335	0					
ANR	3158804	Statement	delete	368:1:11442:11447	3157335	74	True				
ANR	3158805	Statement	[	368:7:11448:11448	3157335	75	True				
ANR	3158806	Statement	]	368:8:11449:11449	3157335	76	True				
ANR	3158807	ExpressionStatement	colorIncl	368:10:11451:11460	3157335	77	True				
ANR	3158808	Identifier	colorIncl		3157335	0					
ANR	3158809	Statement	delete	369:1:11463:11468	3157335	78	True				
ANR	3158810	Statement	[	369:7:11469:11469	3157335	79	True				
ANR	3158811	Statement	]	369:8:11470:11470	3157335	80	True				
ANR	3158812	ExpressionStatement	minimalConstituent	369:10:11472:11490	3157335	81	True				
ANR	3158813	Identifier	minimalConstituent		3157335	0					
ANR	3158814	Statement	delete	370:1:11493:11498	3157335	82	True				
ANR	3158815	Statement	[	370:7:11499:11499	3157335	83	True				
ANR	3158816	Statement	]	370:8:11500:11500	3157335	84	True				
ANR	3158817	ExpressionStatement	constituentIDtoAnchor	370:10:11502:11523	3157335	85	True				
ANR	3158818	Identifier	constituentIDtoAnchor		3157335	0					
ANR	3158819	Statement	delete	371:1:11526:11531	3157335	86	True				
ANR	3158820	Statement	[	371:7:11532:11532	3157335	87	True				
ANR	3158821	Statement	]	371:8:11533:11533	3157335	88	True				
ANR	3158822	ExpressionStatement	sinkToConstituentID	371:10:11535:11554	3157335	89	True				
ANR	3158823	Identifier	sinkToConstituentID		3157335	0					
ANR	3158824	Identifier	Superdag :: Superdag		3157335	1					
ANR	3158825	ParameterList	const Dag & g		3157335	2					
ANR	3158826	Parameter	const Dag & g	48:19:1533:1544	3157335	0	True				
ANR	3158827	ParameterType	const Dag &		3157335	0					
ANR	3158828	Identifier	g		3157335	1					
ANR	3158829	CFGEntryNode	ENTRY		3157335		True				
ANR	3158830	CFGExitNode	EXIT		3157335		True				
ANR	3158831	CFGExceptionNode	EXCEPTION		3157335		True				
ANR	3158832	CFGExceptionNode	EXCEPTION		3157335		True				
ANR	3158833	CFGExceptionNode	EXCEPTION		3157335		True				
ANR	3158834	CFGExceptionNode	EXCEPTION		3157335		True				
ANR	3158835	CFGExceptionNode	EXCEPTION		3157335		True				
ANR	3158836	CFGExceptionNode	EXCEPTION		3157335		True				
ANR	3158837	CFGExceptionNode	EXCEPTION		3157335		True				
ANR	3158838	CFGExceptionNode	EXCEPTION		3157335		True				
ANR	3158839	CFGExceptionNode	EXCEPTION		3157335		True				
ANR	3158840	Symbol	colorA		3157335						
ANR	3158841	Symbol	* colorA		3157335						
ANR	3158842	Symbol	* sinkToConstituentID		3157335						
ANR	3158843	Symbol	* ancestor		3157335						
ANR	3158844	Symbol	constituentSink		3157335						
ANR	3158845	Symbol	* constituentAncestor [ i ] . getElem		3157335						
ANR	3158846	Symbol	* * constituentIDtoAnchor		3157335						
ANR	3158847	Symbol	jINi		3157335						
ANR	3158848	Symbol	type		3157335						
ANR	3158849	Symbol	skeleton		3157335						
ANR	3158850	Symbol	color2		3157335						
ANR	3158851	Symbol	getNumNodes		3157335						
ANR	3158852	Symbol	* constituentIDtoAnchor		3157335						
ANR	3158853	Symbol	minimalConstituent		3157335						
ANR	3158854	Symbol	* constituentSink		3157335						
ANR	3158855	Symbol	* colorIncl		3157335						
ANR	3158856	Symbol	constituentSink [ i ] . getElem		3157335						
ANR	3158857	Symbol	numIsolated		3157335						
ANR	3158858	Symbol	strict		3157335						
ANR	3158859	Symbol	testAincludedInB		3157335						
ANR	3158860	Symbol	constituentAncestor		3157335						
ANR	3158861	Symbol	sourceExists		3157335						
ANR	3158862	Symbol	* * i		3157335						
ANR	3158863	Symbol	NULL		3157335						
ANR	3158864	Symbol	last		3157335						
ANR	3158865	Symbol	sink		3157335						
ANR	3158866	Symbol	constituentAncestor [ i ] . getElem		3157335						
ANR	3158867	Symbol	ancestor		3157335						
ANR	3158868	Symbol	* constituentAncestor		3157335						
ANR	3158869	Symbol	skeleton . getNumNodes		3157335						
ANR	3158870	Symbol	done		3157335						
ANR	3158871	Symbol	node		3157335						
ANR	3158872	Symbol	numNodes		3157335						
ANR	3158873	Symbol	true		3157335						
ANR	3158874	Symbol	constituentSink [ i ] . getNumElem		3157335						
ANR	3158875	Symbol	constituentIDtoAnchor		3157335						
ANR	3158876	Symbol	color		3157335						
ANR	3158877	Symbol	addNode		3157335						
ANR	3158878	Symbol	numberOfParents		3157335						
ANR	3158879	Symbol	* numberOfParents		3157335						
ANR	3158880	Symbol	* * constituentAncestor		3157335						
ANR	3158881	Symbol	minimal		3157335						
ANR	3158882	Symbol	found		3157335						
ANR	3158883	Symbol	constituentToDag		3157335						
ANR	3158884	Symbol	constituent		3157335						
ANR	3158885	Symbol	constituentAncestor [ i ] . getNumElem		3157335						
ANR	3158886	Symbol	* minimalConstituent		3157335						
ANR	3158887	Symbol	INT_MAX		3157335						
ANR	3158888	Symbol	colorIncl		3157335						
ANR	3158889	Symbol	sinkToConstituentID		3157335						
ANR	3158890	Symbol	computeBipartiteConstituent		3157335						
ANR	3158891	Symbol	skeleton . getParentCountVector		3157335						
ANR	3158892	Symbol	lastS		3157335						
ANR	3158893	Symbol	BIPARTITE		3157335						
ANR	3158894	Symbol	COMPLEX		3157335						
ANR	3158895	Symbol	g		3157335						
ANR	3158896	Symbol	false		3157335						
ANR	3158897	Symbol	SINGLETON		3157335						
ANR	3158898	Symbol	i		3157335						
ANR	3158899	Symbol	j		3157335						
ANR	3158900	Symbol	k		3157335						
ANR	3158901	Symbol	iINj		3157335						
ANR	3158902	Symbol	* sink		3157335						
ANR	3158903	Symbol	colorS		3157335						
ANR	3158904	Symbol	reversed . getNumArcs		3157335						
ANR	3158905	Symbol	p		3157335						
ANR	3158906	Symbol	* colorS		3157335						
ANR	3158907	Symbol	* i		3157335						
ANR	3158908	Symbol	lastA		3157335						
ANR	3158909	Symbol	* j		3157335						
ANR	3158910	Symbol	skeleton . getNumArcs		3157335						
ANR	3158911	Symbol	reversed		3157335						
ANR	3158912	Function	Superdag :: ~Superdag	388:0:11739:11915							
ANR	3158913	FunctionDef	Superdag :: ~Superdag ()		3158912	0					
ANR	3158914	CompoundStatement		389:0:11765:11915	3158912	0					
ANR	3158915	ForStatement	for ( int i = 0 ; i < constituent . getNumElem ( ) ; i ++ )		3158912	0					
ANR	3158916	ForInit	int i = 0 ;	390:6:11773:11780	3158912	0	True				
ANR	3158917	IdentifierDeclStatement	int i = 0 ;		3158912	0					
ANR	3158918	IdentifierDecl	i = 0		3158912	0					
ANR	3158919	IdentifierDeclType	int		3158912	0					
ANR	3158920	Identifier	i		3158912	1					
ANR	3158921	AssignmentExpression	i = 0		3158912	2		=			
ANR	3158922	Identifier	i		3158912	0					
ANR	3158923	PrimaryExpression	0		3158912	1					
ANR	3158924	Condition	i < constituent . getNumElem ( )	390:15:11782:11807	3158912	1	True				
ANR	3158925	RelationalExpression	i < constituent . getNumElem ( )		3158912	0		<			
ANR	3158926	Identifier	i		3158912	0					
ANR	3158927	CallExpression	constituent . getNumElem ( )		3158912	1					
ANR	3158928	Callee	constituent . getNumElem		3158912	0					
ANR	3158929	MemberAccess	constituent . getNumElem		3158912	0					
ANR	3158930	Identifier	constituent		3158912	0					
ANR	3158931	Identifier	getNumElem		3158912	1					
ANR	3158932	ArgumentList			3158912	1					
ANR	3158933	PostIncDecOperationExpression	i ++	390:43:11810:11812	3158912	2	True				
ANR	3158934	Identifier	i		3158912	0					
ANR	3158935	IncDec	++		3158912	1					
ANR	3158936	CompoundStatement		2:49:50:50	3158912	3					
ANR	3158937	IfStatement	if ( NULL != constituent . getElem ( i ) )		3158912	0					
ANR	3158938	Condition	NULL != constituent . getElem ( i )	391:6:11824:11853	3158912	0	True				
ANR	3158939	EqualityExpression	NULL != constituent . getElem ( i )		3158912	0		!=			
ANR	3158940	Identifier	NULL		3158912	0					
ANR	3158941	CallExpression	constituent . getElem ( i )		3158912	1					
ANR	3158942	Callee	constituent . getElem		3158912	0					
ANR	3158943	MemberAccess	constituent . getElem		3158912	0					
ANR	3158944	Identifier	constituent		3158912	0					
ANR	3158945	Identifier	getElem		3158912	1					
ANR	3158946	ArgumentList	i		3158912	1					
ANR	3158947	Argument	i		3158912	0					
ANR	3158948	Identifier	i		3158912	0					
ANR	3158949	Statement	delete	392:2:11860:11865	3158912	1	True				
ANR	3158950	ExpressionStatement	constituent . getElem ( i )	392:9:11867:11889	3158912	1	True				
ANR	3158951	CallExpression	constituent . getElem ( i )		3158912	0					
ANR	3158952	Callee	constituent . getElem		3158912	0					
ANR	3158953	MemberAccess	constituent . getElem		3158912	0					
ANR	3158954	Identifier	constituent		3158912	0					
ANR	3158955	Identifier	getElem		3158912	1					
ANR	3158956	ArgumentList	i		3158912	1					
ANR	3158957	Argument	i		3158912	0					
ANR	3158958	Identifier	i		3158912	0					
ANR	3158959	ExpressionStatement		393:2:11913:11913	3158912	1	True				
ANR	3158960	Identifier	Superdag :: ~Superdag		3158912	1					
ANR	3158961	ParameterList			3158912	2					
ANR	3158962	CFGEntryNode	ENTRY		3158912		True				
ANR	3158963	CFGExitNode	EXIT		3158912		True				
ANR	3158964	Symbol	NULL		3158912						
ANR	3158965	Symbol	constituent		3158912						
ANR	3158966	Symbol	constituent . getNumElem		3158912						
ANR	3158967	Symbol	i		3158912						
ANR	3158968	Symbol	constituent . getElem		3158912						
ANR	3158969	Function	Superdag :: getNumConstituent	411:0:12159:12239							
ANR	3158970	FunctionDef	Superdag :: getNumConstituent ()		3158969	0					
ANR	3158971	CompoundStatement		412:0:12203:12239	3158969	0					
ANR	3158972	ReturnStatement	return constituent . getNumElem ( ) ;	413:1:12206:12237	3158969	0	True				
ANR	3158973	CallExpression	constituent . getNumElem ( )		3158969	0					
ANR	3158974	Callee	constituent . getNumElem		3158969	0					
ANR	3158975	MemberAccess	constituent . getNumElem		3158969	0					
ANR	3158976	Identifier	constituent		3158969	0					
ANR	3158977	Identifier	getNumElem		3158969	1					
ANR	3158978	ArgumentList			3158969	1					
ANR	3158979	ReturnType	int		3158969	1					
ANR	3158980	Identifier	Superdag :: getNumConstituent		3158969	2					
ANR	3158981	ParameterList			3158969	3					
ANR	3158982	CFGEntryNode	ENTRY		3158969		True				
ANR	3158983	CFGExitNode	EXIT		3158969		True				
ANR	3158984	Symbol	constituent		3158969						
ANR	3158985	Symbol	constituent . getNumElem		3158969						
ANR	3158986	Function	Superdag :: getConstituent	430:0:12452:12531							
ANR	3158987	FunctionDef	Superdag :: getConstituent (int id)		3158986	0					
ANR	3158988	CompoundStatement		431:0:12496:12531	3158986	0					
ANR	3158989	ReturnStatement	return constituent . getElem ( id ) ;	432:1:12499:12529	3158986	0	True				
ANR	3158990	CallExpression	constituent . getElem ( id )		3158986	0					
ANR	3158991	Callee	constituent . getElem		3158986	0					
ANR	3158992	MemberAccess	constituent . getElem		3158986	0					
ANR	3158993	Identifier	constituent		3158986	0					
ANR	3158994	Identifier	getElem		3158986	1					
ANR	3158995	ArgumentList	id		3158986	1					
ANR	3158996	Argument	id		3158986	0					
ANR	3158997	Identifier	id		3158986	0					
ANR	3158998	ReturnType	Dag *		3158986	1					
ANR	3158999	Identifier	Superdag :: getConstituent		3158986	2					
ANR	3159000	ParameterList	int id		3158986	3					
ANR	3159001	Parameter	int id	430:30:12482:12487	3158986	0	True				
ANR	3159002	ParameterType	int		3158986	0					
ANR	3159003	Identifier	id		3158986	1					
ANR	3159004	CFGEntryNode	ENTRY		3158986		True				
ANR	3159005	CFGExitNode	EXIT		3158986		True				
ANR	3159006	Symbol	constituent		3158986						
ANR	3159007	Symbol	constituent . getElem		3158986						
ANR	3159008	Symbol	id		3158986						
ANR	3159009	Function	Superdag :: getType	450:0:12745:12809							
ANR	3159010	FunctionDef	Superdag :: getType (int id)		3159009	0					
ANR	3159011	CompoundStatement		451:0:12781:12809	3159009	0					
ANR	3159012	ReturnStatement	return type . getElem ( id ) ;	452:1:12784:12807	3159009	0	True				
ANR	3159013	CallExpression	type . getElem ( id )		3159009	0					
ANR	3159014	Callee	type . getElem		3159009	0					
ANR	3159015	MemberAccess	type . getElem		3159009	0					
ANR	3159016	Identifier	type		3159009	0					
ANR	3159017	Identifier	getElem		3159009	1					
ANR	3159018	ArgumentList	id		3159009	1					
ANR	3159019	Argument	id		3159009	0					
ANR	3159020	Identifier	id		3159009	0					
ANR	3159021	ReturnType	int		3159009	1					
ANR	3159022	Identifier	Superdag :: getType		3159009	2					
ANR	3159023	ParameterList	int id		3159009	3					
ANR	3159024	Parameter	int id	450:22:12767:12772	3159009	0	True				
ANR	3159025	ParameterType	int		3159009	0					
ANR	3159026	Identifier	id		3159009	1					
ANR	3159027	CFGEntryNode	ENTRY		3159009		True				
ANR	3159028	CFGExitNode	EXIT		3159009		True				
ANR	3159029	Symbol	type . getElem		3159009						
ANR	3159030	Symbol	id		3159009						
ANR	3159031	Symbol	type		3159009						
ANR	3159032	Function	Superdag :: computeConstituent	481:0:13922:16495							
ANR	3159033	FunctionDef	"Superdag :: computeConstituent (const Dag & skeleton , const Dag & reversed , const int * numberOfParents , int anchor , int * ancestor , int & lastA , int * sink , int & lastS , int color , int * colorA , int * colorS)"		3159032	0					
ANR	3159034	CompoundStatement		485:0:14157:16495	3159032	0					
ANR	3159035	IdentifierDeclStatement	"int k , j , u , v , first ;"	486:1:14160:14177	3159032	0	True				
ANR	3159036	IdentifierDecl	k		3159032	0					
ANR	3159037	IdentifierDeclType	int		3159032	0					
ANR	3159038	Identifier	k		3159032	1					
ANR	3159039	IdentifierDecl	j		3159032	1					
ANR	3159040	IdentifierDeclType	int		3159032	0					
ANR	3159041	Identifier	j		3159032	1					
ANR	3159042	IdentifierDecl	u		3159032	2					
ANR	3159043	IdentifierDeclType	int		3159032	0					
ANR	3159044	Identifier	u		3159032	1					
ANR	3159045	IdentifierDecl	v		3159032	3					
ANR	3159046	IdentifierDeclType	int		3159032	0					
ANR	3159047	Identifier	v		3159032	1					
ANR	3159048	IdentifierDecl	first		3159032	4					
ANR	3159049	IdentifierDeclType	int		3159032	0					
ANR	3159050	Identifier	first		3159032	1					
ANR	3159051	ExpressionStatement	ancestor [ 0 ] = anchor	489:1:14232:14252	3159032	1	True				
ANR	3159052	AssignmentExpression	ancestor [ 0 ] = anchor		3159032	0		=			
ANR	3159053	ArrayIndexing	ancestor [ 0 ]		3159032	0					
ANR	3159054	Identifier	ancestor		3159032	0					
ANR	3159055	PrimaryExpression	0		3159032	1					
ANR	3159056	Identifier	anchor		3159032	1					
ANR	3159057	ExpressionStatement	colorA [ anchor ] = color	490:1:14255:14277	3159032	2	True				
ANR	3159058	AssignmentExpression	colorA [ anchor ] = color		3159032	0		=			
ANR	3159059	ArrayIndexing	colorA [ anchor ]		3159032	0					
ANR	3159060	Identifier	colorA		3159032	0					
ANR	3159061	Identifier	anchor		3159032	1					
ANR	3159062	Identifier	color		3159032	1					
ANR	3159063	ExpressionStatement	lastA = 0	491:1:14280:14289	3159032	3	True				
ANR	3159064	AssignmentExpression	lastA = 0		3159032	0		=			
ANR	3159065	Identifier	lastA		3159032	0					
ANR	3159066	PrimaryExpression	0		3159032	1					
ANR	3159067	IdentifierDeclStatement	int processedA = - 1 ;	492:1:14292:14311	3159032	4	True				
ANR	3159068	IdentifierDecl	processedA = - 1		3159032	0					
ANR	3159069	IdentifierDeclType	int		3159032	0					
ANR	3159070	Identifier	processedA		3159032	1					
ANR	3159071	AssignmentExpression	processedA = - 1		3159032	2		=			
ANR	3159072	Identifier	processedA		3159032	0					
ANR	3159073	UnaryOperationExpression	- 1		3159032	1					
ANR	3159074	UnaryOperator	-		3159032	0					
ANR	3159075	PrimaryExpression	1		3159032	1					
ANR	3159076	ExpressionStatement	lastS = - 1	495:1:14354:14364	3159032	5	True				
ANR	3159077	AssignmentExpression	lastS = - 1		3159032	0		=			
ANR	3159078	Identifier	lastS		3159032	0					
ANR	3159079	UnaryOperationExpression	- 1		3159032	1					
ANR	3159080	UnaryOperator	-		3159032	0					
ANR	3159081	PrimaryExpression	1		3159032	1					
ANR	3159082	IdentifierDeclStatement	int processedS = - 1 ;	496:1:14367:14386	3159032	6	True				
ANR	3159083	IdentifierDecl	processedS = - 1		3159032	0					
ANR	3159084	IdentifierDeclType	int		3159032	0					
ANR	3159085	Identifier	processedS		3159032	1					
ANR	3159086	AssignmentExpression	processedS = - 1		3159032	2		=			
ANR	3159087	Identifier	processedS		3159032	0					
ANR	3159088	UnaryOperationExpression	- 1		3159032	1					
ANR	3159089	UnaryOperator	-		3159032	0					
ANR	3159090	PrimaryExpression	1		3159032	1					
ANR	3159091	WhileStatement	while ( processedA < lastA || processedS < lastS )		3159032	7					
ANR	3159092	Condition	processedA < lastA || processedS < lastS	498:8:14397:14432	3159032	0	True				
ANR	3159093	OrExpression	processedA < lastA || processedS < lastS		3159032	0		||			
ANR	3159094	RelationalExpression	processedA < lastA		3159032	0		<			
ANR	3159095	Identifier	processedA		3159032	0					
ANR	3159096	Identifier	lastA		3159032	1					
ANR	3159097	RelationalExpression	processedS < lastS		3159032	1		<			
ANR	3159098	Identifier	processedS		3159032	0					
ANR	3159099	Identifier	lastS		3159032	1					
ANR	3159100	CompoundStatement		14:47:278:278	3159032	1					
ANR	3159101	ForStatement	for ( j = processedA + 1 ; j <= lastA ; j ++ )		3159032	0					
ANR	3159102	ForInit	j = processedA + 1 ;	501:7:14469:14483	3159032	0	True				
ANR	3159103	AssignmentExpression	j = processedA + 1		3159032	0		=			
ANR	3159104	Identifier	j		3159032	0					
ANR	3159105	AdditiveExpression	processedA + 1		3159032	1		+			
ANR	3159106	Identifier	processedA		3159032	0					
ANR	3159107	PrimaryExpression	1		3159032	1					
ANR	3159108	Condition	j <= lastA	501:23:14485:14492	3159032	1	True				
ANR	3159109	RelationalExpression	j <= lastA		3159032	0		<=			
ANR	3159110	Identifier	j		3159032	0					
ANR	3159111	Identifier	lastA		3159032	1					
ANR	3159112	PostIncDecOperationExpression	j ++	501:33:14495:14497	3159032	2	True				
ANR	3159113	Identifier	j		3159032	0					
ANR	3159114	IncDec	++		3159032	1					
ANR	3159115	CompoundStatement		19:3:390:436	3159032	3					
ANR	3159116	IdentifierDeclStatement	int numArcs = skeleton . getNumArcs ( ancestor [ j ] ) ;	503:3:14548:14594	3159032	0	True				
ANR	3159117	IdentifierDecl	numArcs = skeleton . getNumArcs ( ancestor [ j ] )		3159032	0					
ANR	3159118	IdentifierDeclType	int		3159032	0					
ANR	3159119	Identifier	numArcs		3159032	1					
ANR	3159120	AssignmentExpression	numArcs = skeleton . getNumArcs ( ancestor [ j ] )		3159032	2		=			
ANR	3159121	Identifier	numArcs		3159032	0					
ANR	3159122	CallExpression	skeleton . getNumArcs ( ancestor [ j ] )		3159032	1					
ANR	3159123	Callee	skeleton . getNumArcs		3159032	0					
ANR	3159124	MemberAccess	skeleton . getNumArcs		3159032	0					
ANR	3159125	Identifier	skeleton		3159032	0					
ANR	3159126	Identifier	getNumArcs		3159032	1					
ANR	3159127	ArgumentList	ancestor [ j ]		3159032	1					
ANR	3159128	Argument	ancestor [ j ]		3159032	0					
ANR	3159129	ArrayIndexing	ancestor [ j ]		3159032	0					
ANR	3159130	Identifier	ancestor		3159032	0					
ANR	3159131	Identifier	j		3159032	1					
ANR	3159132	ForStatement	for ( k = 0 ; k < numArcs ; k ++ )		3159032	1					
ANR	3159133	ForInit	k = 0 ;	504:8:14604:14607	3159032	0	True				
ANR	3159134	AssignmentExpression	k = 0		3159032	0		=			
ANR	3159135	Identifier	k		3159032	0					
ANR	3159136	PrimaryExpression	0		3159032	1					
ANR	3159137	Condition	k < numArcs	504:13:14609:14617	3159032	1	True				
ANR	3159138	RelationalExpression	k < numArcs		3159032	0		<			
ANR	3159139	Identifier	k		3159032	0					
ANR	3159140	Identifier	numArcs		3159032	1					
ANR	3159141	PostIncDecOperationExpression	k ++	504:24:14620:14622	3159032	2	True				
ANR	3159142	Identifier	k		3159032	0					
ANR	3159143	IncDec	++		3159032	1					
ANR	3159144	CompoundStatement		20:30:468:468	3159032	3					
ANR	3159145	ExpressionStatement	"v = skeleton . getArc ( ancestor [ j ] , k )"	505:4:14632:14666	3159032	0	True				
ANR	3159146	AssignmentExpression	"v = skeleton . getArc ( ancestor [ j ] , k )"		3159032	0		=			
ANR	3159147	Identifier	v		3159032	0					
ANR	3159148	CallExpression	"skeleton . getArc ( ancestor [ j ] , k )"		3159032	1					
ANR	3159149	Callee	skeleton . getArc		3159032	0					
ANR	3159150	MemberAccess	skeleton . getArc		3159032	0					
ANR	3159151	Identifier	skeleton		3159032	0					
ANR	3159152	Identifier	getArc		3159032	1					
ANR	3159153	ArgumentList	ancestor [ j ]		3159032	1					
ANR	3159154	Argument	ancestor [ j ]		3159032	0					
ANR	3159155	ArrayIndexing	ancestor [ j ]		3159032	0					
ANR	3159156	Identifier	ancestor		3159032	0					
ANR	3159157	Identifier	j		3159032	1					
ANR	3159158	Argument	k		3159032	1					
ANR	3159159	Identifier	k		3159032	0					
ANR	3159160	IfStatement	if ( colorS [ v ] != color )		3159032	1					
ANR	3159161	Condition	colorS [ v ] != color	506:8:14676:14693	3159032	0	True				
ANR	3159162	EqualityExpression	colorS [ v ] != color		3159032	0		!=			
ANR	3159163	ArrayIndexing	colorS [ v ]		3159032	0					
ANR	3159164	Identifier	colorS		3159032	0					
ANR	3159165	Identifier	v		3159032	1					
ANR	3159166	Identifier	color		3159032	1					
ANR	3159167	CompoundStatement		22:29:539:539	3159032	1					
ANR	3159168	ExpressionStatement	lastS ++	507:5:14704:14711	3159032	0	True				
ANR	3159169	PostIncDecOperationExpression	lastS ++		3159032	0					
ANR	3159170	Identifier	lastS		3159032	0					
ANR	3159171	IncDec	++		3159032	1					
ANR	3159172	ExpressionStatement	sink [ lastS ] = v	508:5:14718:14733	3159032	1	True				
ANR	3159173	AssignmentExpression	sink [ lastS ] = v		3159032	0		=			
ANR	3159174	ArrayIndexing	sink [ lastS ]		3159032	0					
ANR	3159175	Identifier	sink		3159032	0					
ANR	3159176	Identifier	lastS		3159032	1					
ANR	3159177	Identifier	v		3159032	1					
ANR	3159178	ExpressionStatement	colorS [ v ] = color	509:5:14740:14757	3159032	2	True				
ANR	3159179	AssignmentExpression	colorS [ v ] = color		3159032	0		=			
ANR	3159180	ArrayIndexing	colorS [ v ]		3159032	0					
ANR	3159181	Identifier	colorS		3159032	0					
ANR	3159182	Identifier	v		3159032	1					
ANR	3159183	Identifier	color		3159032	1					
ANR	3159184	ExpressionStatement		510:5:14764:14764	3159032	2	True				
ANR	3159185	ExpressionStatement		511:4:14770:14770	3159032	2	True				
ANR	3159186	ExpressionStatement	processedA ++	512:3:14775:14787	3159032	3	True				
ANR	3159187	PostIncDecOperationExpression	processedA ++		3159032	0					
ANR	3159188	Identifier	processedA		3159032	0					
ANR	3159189	IncDec	++		3159032	1					
ANR	3159190	ExpressionStatement		513:3:14792:14792	3159032	1	True				
ANR	3159191	ForStatement	for ( j = processedS + 1 ; j <= lastS ; j ++ )		3159032	2					
ANR	3159192	ForInit	j = processedS + 1 ;	519:7:14930:14944	3159032	0	True				
ANR	3159193	AssignmentExpression	j = processedS + 1		3159032	0		=			
ANR	3159194	Identifier	j		3159032	0					
ANR	3159195	AdditiveExpression	processedS + 1		3159032	1		+			
ANR	3159196	Identifier	processedS		3159032	0					
ANR	3159197	PrimaryExpression	1		3159032	1					
ANR	3159198	Condition	j <= lastS	519:23:14946:14953	3159032	1	True				
ANR	3159199	RelationalExpression	j <= lastS		3159032	0		<=			
ANR	3159200	Identifier	j		3159032	0					
ANR	3159201	Identifier	lastS		3159032	1					
ANR	3159202	PostIncDecOperationExpression	j ++	519:33:14956:14958	3159032	2	True				
ANR	3159203	Identifier	j		3159032	0					
ANR	3159204	IncDec	++		3159032	1					
ANR	3159205	CompoundStatement		40:3:997:1039	3159032	3					
ANR	3159206	IdentifierDeclStatement	int numArcs = reversed . getNumArcs ( sink [ j ] ) ;	524:3:15155:15197	3159032	0	True				
ANR	3159207	IdentifierDecl	numArcs = reversed . getNumArcs ( sink [ j ] )		3159032	0					
ANR	3159208	IdentifierDeclType	int		3159032	0					
ANR	3159209	Identifier	numArcs		3159032	1					
ANR	3159210	AssignmentExpression	numArcs = reversed . getNumArcs ( sink [ j ] )		3159032	2		=			
ANR	3159211	Identifier	numArcs		3159032	0					
ANR	3159212	CallExpression	reversed . getNumArcs ( sink [ j ] )		3159032	1					
ANR	3159213	Callee	reversed . getNumArcs		3159032	0					
ANR	3159214	MemberAccess	reversed . getNumArcs		3159032	0					
ANR	3159215	Identifier	reversed		3159032	0					
ANR	3159216	Identifier	getNumArcs		3159032	1					
ANR	3159217	ArgumentList	sink [ j ]		3159032	1					
ANR	3159218	Argument	sink [ j ]		3159032	0					
ANR	3159219	ArrayIndexing	sink [ j ]		3159032	0					
ANR	3159220	Identifier	sink		3159032	0					
ANR	3159221	Identifier	j		3159032	1					
ANR	3159222	ForStatement	for ( k = 0 ; k < numArcs ; k ++ )		3159032	1					
ANR	3159223	ForInit	k = 0 ;	525:8:15207:15210	3159032	0	True				
ANR	3159224	AssignmentExpression	k = 0		3159032	0		=			
ANR	3159225	Identifier	k		3159032	0					
ANR	3159226	PrimaryExpression	0		3159032	1					
ANR	3159227	Condition	k < numArcs	525:13:15212:15220	3159032	1	True				
ANR	3159228	RelationalExpression	k < numArcs		3159032	0		<			
ANR	3159229	Identifier	k		3159032	0					
ANR	3159230	Identifier	numArcs		3159032	1					
ANR	3159231	PostIncDecOperationExpression	k ++	525:24:15223:15225	3159032	2	True				
ANR	3159232	Identifier	k		3159032	0					
ANR	3159233	IncDec	++		3159032	1					
ANR	3159234	CompoundStatement		41:30:1071:1071	3159032	3					
ANR	3159235	ExpressionStatement	"u = reversed . getArc ( sink [ j ] , k )"	526:4:15235:15265	3159032	0	True				
ANR	3159236	AssignmentExpression	"u = reversed . getArc ( sink [ j ] , k )"		3159032	0		=			
ANR	3159237	Identifier	u		3159032	0					
ANR	3159238	CallExpression	"reversed . getArc ( sink [ j ] , k )"		3159032	1					
ANR	3159239	Callee	reversed . getArc		3159032	0					
ANR	3159240	MemberAccess	reversed . getArc		3159032	0					
ANR	3159241	Identifier	reversed		3159032	0					
ANR	3159242	Identifier	getArc		3159032	1					
ANR	3159243	ArgumentList	sink [ j ]		3159032	1					
ANR	3159244	Argument	sink [ j ]		3159032	0					
ANR	3159245	ArrayIndexing	sink [ j ]		3159032	0					
ANR	3159246	Identifier	sink		3159032	0					
ANR	3159247	Identifier	j		3159032	1					
ANR	3159248	Argument	k		3159032	1					
ANR	3159249	Identifier	k		3159032	0					
ANR	3159250	IfStatement	if ( colorA [ u ] != color && - 1 != numberOfParents [ u ] )		3159032	1					
ANR	3159251	Condition	colorA [ u ] != color && - 1 != numberOfParents [ u ]	527:9:15276:15322	3159032	0	True				
ANR	3159252	AndExpression	colorA [ u ] != color && - 1 != numberOfParents [ u ]		3159032	0		&&			
ANR	3159253	EqualityExpression	colorA [ u ] != color		3159032	0		!=			
ANR	3159254	ArrayIndexing	colorA [ u ]		3159032	0					
ANR	3159255	Identifier	colorA		3159032	0					
ANR	3159256	Identifier	u		3159032	1					
ANR	3159257	Identifier	color		3159032	1					
ANR	3159258	EqualityExpression	- 1 != numberOfParents [ u ]		3159032	1		!=			
ANR	3159259	UnaryOperationExpression	- 1		3159032	0					
ANR	3159260	UnaryOperator	-		3159032	0					
ANR	3159261	PrimaryExpression	1		3159032	1					
ANR	3159262	ArrayIndexing	numberOfParents [ u ]		3159032	1					
ANR	3159263	Identifier	numberOfParents		3159032	0					
ANR	3159264	Identifier	u		3159032	1					
ANR	3159265	CompoundStatement		43:60:1169:1169	3159032	1					
ANR	3159266	ExpressionStatement	lastA ++	529:5:15412:15419	3159032	0	True				
ANR	3159267	PostIncDecOperationExpression	lastA ++		3159032	0					
ANR	3159268	Identifier	lastA		3159032	0					
ANR	3159269	IncDec	++		3159032	1					
ANR	3159270	ExpressionStatement	ancestor [ lastA ] = u	530:5:15426:15445	3159032	1	True				
ANR	3159271	AssignmentExpression	ancestor [ lastA ] = u		3159032	0		=			
ANR	3159272	ArrayIndexing	ancestor [ lastA ]		3159032	0					
ANR	3159273	Identifier	ancestor		3159032	0					
ANR	3159274	Identifier	lastA		3159032	1					
ANR	3159275	Identifier	u		3159032	1					
ANR	3159276	ExpressionStatement	colorA [ u ] = color	531:5:15452:15469	3159032	2	True				
ANR	3159277	AssignmentExpression	colorA [ u ] = color		3159032	0		=			
ANR	3159278	ArrayIndexing	colorA [ u ]		3159032	0					
ANR	3159279	Identifier	colorA		3159032	0					
ANR	3159280	Identifier	u		3159032	1					
ANR	3159281	Identifier	color		3159032	1					
ANR	3159282	ExpressionStatement		532:5:15476:15476	3159032	2	True				
ANR	3159283	ExpressionStatement		533:4:15482:15482	3159032	2	True				
ANR	3159284	IfStatement	if ( processedA < lastA )		3159032	3					
ANR	3159285	Condition	processedA < lastA	535:7:15538:15555	3159032	0	True				
ANR	3159286	RelationalExpression	processedA < lastA		3159032	0		<			
ANR	3159287	Identifier	processedA		3159032	0					
ANR	3159288	Identifier	lastA		3159032	1					
ANR	3159289	CompoundStatement		51:28:1401:1401	3159032	1					
ANR	3159290	ExpressionStatement	first = processedA + 1	538:4:15644:15664	3159032	0	True				
ANR	3159291	AssignmentExpression	first = processedA + 1		3159032	0		=			
ANR	3159292	Identifier	first		3159032	0					
ANR	3159293	AdditiveExpression	processedA + 1		3159032	1		+			
ANR	3159294	Identifier	processedA		3159032	0					
ANR	3159295	PrimaryExpression	1		3159032	1					
ANR	3159296	WhileStatement	while ( first <= lastA )		3159032	1					
ANR	3159297	Condition	first <= lastA	539:11:15677:15690	3159032	0	True				
ANR	3159298	RelationalExpression	first <= lastA		3159032	0		<=			
ANR	3159299	Identifier	first		3159032	0					
ANR	3159300	Identifier	lastA		3159032	1					
ANR	3159301	CompoundStatement		59:5:1680:1730	3159032	1					
ANR	3159302	IdentifierDeclStatement	int numArcs = reversed . getNumArcs ( ancestor [ first ] ) ;	543:5:15838:15888	3159032	0	True				
ANR	3159303	IdentifierDecl	numArcs = reversed . getNumArcs ( ancestor [ first ] )		3159032	0					
ANR	3159304	IdentifierDeclType	int		3159032	0					
ANR	3159305	Identifier	numArcs		3159032	1					
ANR	3159306	AssignmentExpression	numArcs = reversed . getNumArcs ( ancestor [ first ] )		3159032	2		=			
ANR	3159307	Identifier	numArcs		3159032	0					
ANR	3159308	CallExpression	reversed . getNumArcs ( ancestor [ first ] )		3159032	1					
ANR	3159309	Callee	reversed . getNumArcs		3159032	0					
ANR	3159310	MemberAccess	reversed . getNumArcs		3159032	0					
ANR	3159311	Identifier	reversed		3159032	0					
ANR	3159312	Identifier	getNumArcs		3159032	1					
ANR	3159313	ArgumentList	ancestor [ first ]		3159032	1					
ANR	3159314	Argument	ancestor [ first ]		3159032	0					
ANR	3159315	ArrayIndexing	ancestor [ first ]		3159032	0					
ANR	3159316	Identifier	ancestor		3159032	0					
ANR	3159317	Identifier	first		3159032	1					
ANR	3159318	ForStatement	for ( k = 0 ; k < numArcs ; k ++ )		3159032	1					
ANR	3159319	ForInit	k = 0 ;	544:10:15900:15903	3159032	0	True				
ANR	3159320	AssignmentExpression	k = 0		3159032	0		=			
ANR	3159321	Identifier	k		3159032	0					
ANR	3159322	PrimaryExpression	0		3159032	1					
ANR	3159323	Condition	k < numArcs	544:15:15905:15913	3159032	1	True				
ANR	3159324	RelationalExpression	k < numArcs		3159032	0		<			
ANR	3159325	Identifier	k		3159032	0					
ANR	3159326	Identifier	numArcs		3159032	1					
ANR	3159327	PostIncDecOperationExpression	k ++	544:26:15916:15918	3159032	2	True				
ANR	3159328	Identifier	k		3159032	0					
ANR	3159329	IncDec	++		3159032	1					
ANR	3159330	CompoundStatement		60:32:1764:1764	3159032	3					
ANR	3159331	ExpressionStatement	"u = reversed . getArc ( ancestor [ first ] , k )"	545:6:15930:15968	3159032	0	True				
ANR	3159332	AssignmentExpression	"u = reversed . getArc ( ancestor [ first ] , k )"		3159032	0		=			
ANR	3159333	Identifier	u		3159032	0					
ANR	3159334	CallExpression	"reversed . getArc ( ancestor [ first ] , k )"		3159032	1					
ANR	3159335	Callee	reversed . getArc		3159032	0					
ANR	3159336	MemberAccess	reversed . getArc		3159032	0					
ANR	3159337	Identifier	reversed		3159032	0					
ANR	3159338	Identifier	getArc		3159032	1					
ANR	3159339	ArgumentList	ancestor [ first ]		3159032	1					
ANR	3159340	Argument	ancestor [ first ]		3159032	0					
ANR	3159341	ArrayIndexing	ancestor [ first ]		3159032	0					
ANR	3159342	Identifier	ancestor		3159032	0					
ANR	3159343	Identifier	first		3159032	1					
ANR	3159344	Argument	k		3159032	1					
ANR	3159345	Identifier	k		3159032	0					
ANR	3159346	IfStatement	if ( colorA [ u ] != color && - 1 != numberOfParents [ u ] )		3159032	1					
ANR	3159347	Condition	colorA [ u ] != color && - 1 != numberOfParents [ u ]	546:10:15980:16026	3159032	0	True				
ANR	3159348	AndExpression	colorA [ u ] != color && - 1 != numberOfParents [ u ]		3159032	0		&&			
ANR	3159349	EqualityExpression	colorA [ u ] != color		3159032	0		!=			
ANR	3159350	ArrayIndexing	colorA [ u ]		3159032	0					
ANR	3159351	Identifier	colorA		3159032	0					
ANR	3159352	Identifier	u		3159032	1					
ANR	3159353	Identifier	color		3159032	1					
ANR	3159354	EqualityExpression	- 1 != numberOfParents [ u ]		3159032	1		!=			
ANR	3159355	UnaryOperationExpression	- 1		3159032	0					
ANR	3159356	UnaryOperator	-		3159032	0					
ANR	3159357	PrimaryExpression	1		3159032	1					
ANR	3159358	ArrayIndexing	numberOfParents [ u ]		3159032	1					
ANR	3159359	Identifier	numberOfParents		3159032	0					
ANR	3159360	Identifier	u		3159032	1					
ANR	3159361	CompoundStatement		62:60:1872:1872	3159032	1					
ANR	3159362	ExpressionStatement	lastA ++	547:7:16039:16046	3159032	0	True				
ANR	3159363	PostIncDecOperationExpression	lastA ++		3159032	0					
ANR	3159364	Identifier	lastA		3159032	0					
ANR	3159365	IncDec	++		3159032	1					
ANR	3159366	ExpressionStatement	ancestor [ lastA ] = u	548:7:16055:16074	3159032	1	True				
ANR	3159367	AssignmentExpression	ancestor [ lastA ] = u		3159032	0		=			
ANR	3159368	ArrayIndexing	ancestor [ lastA ]		3159032	0					
ANR	3159369	Identifier	ancestor		3159032	0					
ANR	3159370	Identifier	lastA		3159032	1					
ANR	3159371	Identifier	u		3159032	1					
ANR	3159372	ExpressionStatement	colorA [ u ] = color	549:7:16083:16100	3159032	2	True				
ANR	3159373	AssignmentExpression	colorA [ u ] = color		3159032	0		=			
ANR	3159374	ArrayIndexing	colorA [ u ]		3159032	0					
ANR	3159375	Identifier	colorA		3159032	0					
ANR	3159376	Identifier	u		3159032	1					
ANR	3159377	Identifier	color		3159032	1					
ANR	3159378	ExpressionStatement		550:7:16109:16109	3159032	2	True				
ANR	3159379	ExpressionStatement		551:6:16117:16117	3159032	2	True				
ANR	3159380	ExpressionStatement	first ++	554:5:16147:16154	3159032	3	True				
ANR	3159381	PostIncDecOperationExpression	first ++		3159032	0					
ANR	3159382	Identifier	first		3159032	0					
ANR	3159383	IncDec	++		3159032	1					
ANR	3159384	ExpressionStatement		556:5:16162:16162	3159032	2	True				
ANR	3159385	ExpressionStatement		557:4:16168:16168	3159032	4	True				
ANR	3159386	ExpressionStatement	processedS ++	559:3:16174:16186	3159032	5	True				
ANR	3159387	PostIncDecOperationExpression	processedS ++		3159032	0					
ANR	3159388	Identifier	processedS		3159032	0					
ANR	3159389	IncDec	++		3159032	1					
ANR	3159390	ExpressionStatement		560:3:16191:16191	3159032	3	True				
ANR	3159391	ExpressionStatement		561:2:16195:16195	3159032	8	True				
ANR	3159392	IdentifierDeclStatement	int current = 0 ;	564:1:16247:16260	3159032	9	True				
ANR	3159393	IdentifierDecl	current = 0		3159032	0					
ANR	3159394	IdentifierDeclType	int		3159032	0					
ANR	3159395	Identifier	current		3159032	1					
ANR	3159396	AssignmentExpression	current = 0		3159032	2		=			
ANR	3159397	Identifier	current		3159032	0					
ANR	3159398	PrimaryExpression	0		3159032	1					
ANR	3159399	IdentifierDeclStatement	int lastOK = - 1 ;	565:1:16263:16276	3159032	10	True				
ANR	3159400	IdentifierDecl	lastOK = - 1		3159032	0					
ANR	3159401	IdentifierDeclType	int		3159032	0					
ANR	3159402	Identifier	lastOK		3159032	1					
ANR	3159403	AssignmentExpression	lastOK = - 1		3159032	2		=			
ANR	3159404	Identifier	lastOK		3159032	0					
ANR	3159405	UnaryOperationExpression	- 1		3159032	1					
ANR	3159406	UnaryOperator	-		3159032	0					
ANR	3159407	PrimaryExpression	1		3159032	1					
ANR	3159408	WhileStatement	while ( current <= lastS )		3159032	11					
ANR	3159409	Condition	current <= lastS	566:8:16286:16299	3159032	0	True				
ANR	3159410	RelationalExpression	current <= lastS		3159032	0		<=			
ANR	3159411	Identifier	current		3159032	0					
ANR	3159412	Identifier	lastS		3159032	1					
ANR	3159413	CompoundStatement		82:25:2145:2145	3159032	1					
ANR	3159414	IfStatement	if ( colorA [ sink [ current ] ] != color )		3159032	0					
ANR	3159415	Condition	colorA [ sink [ current ] ] != color	569:6:16370:16401	3159032	0	True				
ANR	3159416	EqualityExpression	colorA [ sink [ current ] ] != color		3159032	0		!=			
ANR	3159417	ArrayIndexing	colorA [ sink [ current ] ]		3159032	0					
ANR	3159418	Identifier	colorA		3159032	0					
ANR	3159419	ArrayIndexing	sink [ current ]		3159032	1					
ANR	3159420	Identifier	sink		3159032	0					
ANR	3159421	Identifier	current		3159032	1					
ANR	3159422	Identifier	color		3159032	1					
ANR	3159423	CompoundStatement		85:41:2247:2247	3159032	1					
ANR	3159424	ExpressionStatement	lastOK ++	570:3:16410:16418	3159032	0	True				
ANR	3159425	PostIncDecOperationExpression	lastOK ++		3159032	0					
ANR	3159426	Identifier	lastOK		3159032	0					
ANR	3159427	IncDec	++		3159032	1					
ANR	3159428	ExpressionStatement	sink [ lastOK ] = sink [ current ]	571:3:16423:16451	3159032	1	True				
ANR	3159429	AssignmentExpression	sink [ lastOK ] = sink [ current ]		3159032	0		=			
ANR	3159430	ArrayIndexing	sink [ lastOK ]		3159032	0					
ANR	3159431	Identifier	sink		3159032	0					
ANR	3159432	Identifier	lastOK		3159032	1					
ANR	3159433	ArrayIndexing	sink [ current ]		3159032	1					
ANR	3159434	Identifier	sink		3159032	0					
ANR	3159435	Identifier	current		3159032	1					
ANR	3159436	ExpressionStatement		572:3:16456:16456	3159032	1	True				
ANR	3159437	ExpressionStatement	current ++	574:2:16463:16472	3159032	2	True				
ANR	3159438	PostIncDecOperationExpression	current ++		3159032	0					
ANR	3159439	Identifier	current		3159032	0					
ANR	3159440	IncDec	++		3159032	1					
ANR	3159441	ExpressionStatement		575:2:16476:16476	3159032	12	True				
ANR	3159442	ExpressionStatement	lastS = lastOK	576:1:16479:16493	3159032	13	True				
ANR	3159443	AssignmentExpression	lastS = lastOK		3159032	0		=			
ANR	3159444	Identifier	lastS		3159032	0					
ANR	3159445	Identifier	lastOK		3159032	1					
ANR	3159446	ReturnType	void		3159032	1					
ANR	3159447	Identifier	Superdag :: computeConstituent		3159032	2					
ANR	3159448	ParameterList	"const Dag & skeleton , const Dag & reversed , const int * numberOfParents , int anchor , int * ancestor , int & lastA , int * sink , int & lastS , int color , int * colorA , int * colorS"		3159032	3					
ANR	3159449	Parameter	const Dag & skeleton	481:35:13957:13975	3159032	0	True				
ANR	3159450	ParameterType	const Dag &		3159032	0					
ANR	3159451	Identifier	skeleton		3159032	1					
ANR	3159452	Parameter	const Dag & reversed	481:56:13978:13996	3159032	1	True				
ANR	3159453	ParameterType	const Dag &		3159032	0					
ANR	3159454	Identifier	reversed		3159032	1					
ANR	3159455	Parameter	const int * numberOfParents	482:9:14009:14034	3159032	2	True				
ANR	3159456	ParameterType	const int *		3159032	0					
ANR	3159457	Identifier	numberOfParents		3159032	1					
ANR	3159458	Parameter	int anchor	482:37:14037:14046	3159032	3	True				
ANR	3159459	ParameterType	int		3159032	0					
ANR	3159460	Identifier	anchor		3159032	1					
ANR	3159461	Parameter	int * ancestor	483:9:14059:14071	3159032	4	True				
ANR	3159462	ParameterType	int *		3159032	0					
ANR	3159463	Identifier	ancestor		3159032	1					
ANR	3159464	Parameter	int & lastA	483:24:14074:14083	3159032	5	True				
ANR	3159465	ParameterType	int &		3159032	0					
ANR	3159466	Identifier	lastA		3159032	1					
ANR	3159467	Parameter	int * sink	483:36:14086:14094	3159032	6	True				
ANR	3159468	ParameterType	int *		3159032	0					
ANR	3159469	Identifier	sink		3159032	1					
ANR	3159470	Parameter	int & lastS	483:47:14097:14106	3159032	7	True				
ANR	3159471	ParameterType	int &		3159032	0					
ANR	3159472	Identifier	lastS		3159032	1					
ANR	3159473	Parameter	int color	484:9:14119:14127	3159032	8	True				
ANR	3159474	ParameterType	int		3159032	0					
ANR	3159475	Identifier	color		3159032	1					
ANR	3159476	Parameter	int * colorA	484:20:14130:14140	3159032	9	True				
ANR	3159477	ParameterType	int *		3159032	0					
ANR	3159478	Identifier	colorA		3159032	1					
ANR	3159479	Parameter	int * colorS	484:33:14143:14153	3159032	10	True				
ANR	3159480	ParameterType	int *		3159032	0					
ANR	3159481	Identifier	colorS		3159032	1					
ANR	3159482	CFGEntryNode	ENTRY		3159032		True				
ANR	3159483	CFGExitNode	EXIT		3159032		True				
ANR	3159484	Symbol	colorA		3159032						
ANR	3159485	Symbol	* v		3159032						
ANR	3159486	Symbol	* colorA		3159032						
ANR	3159487	Symbol	color		3159032						
ANR	3159488	Symbol	* ancestor		3159032						
ANR	3159489	Symbol	* lastS		3159032						
ANR	3159490	Symbol	* current		3159032						
ANR	3159491	Symbol	numberOfParents		3159032						
ANR	3159492	Symbol	* numberOfParents		3159032						
ANR	3159493	Symbol	* anchor		3159032						
ANR	3159494	Symbol	skeleton		3159032						
ANR	3159495	Symbol	current		3159032						
ANR	3159496	Symbol	reversed . getArc		3159032						
ANR	3159497	Symbol	* first		3159032						
ANR	3159498	Symbol	processedA		3159032						
ANR	3159499	Symbol	lastS		3159032						
ANR	3159500	Symbol	* * sink		3159032						
ANR	3159501	Symbol	skeleton . getArc		3159032						
ANR	3159502	Symbol	sink		3159032						
ANR	3159503	Symbol	ancestor		3159032						
ANR	3159504	Symbol	j		3159032						
ANR	3159505	Symbol	lastOK		3159032						
ANR	3159506	Symbol	k		3159032						
ANR	3159507	Symbol	* sink		3159032						
ANR	3159508	Symbol	colorS		3159032						
ANR	3159509	Symbol	processedS		3159032						
ANR	3159510	Symbol	reversed . getNumArcs		3159032						
ANR	3159511	Symbol	* colorS		3159032						
ANR	3159512	Symbol	* * current		3159032						
ANR	3159513	Symbol	lastA		3159032						
ANR	3159514	Symbol	numArcs		3159032						
ANR	3159515	Symbol	* j		3159032						
ANR	3159516	Symbol	u		3159032						
ANR	3159517	Symbol	* lastA		3159032						
ANR	3159518	Symbol	v		3159032						
ANR	3159519	Symbol	anchor		3159032						
ANR	3159520	Symbol	skeleton . getNumArcs		3159032						
ANR	3159521	Symbol	* lastOK		3159032						
ANR	3159522	Symbol	reversed		3159032						
ANR	3159523	Symbol	first		3159032						
ANR	3159524	Symbol	* u		3159032						
ANR	3159525	Function	Superdag :: computeBipartiteConstituent	597:0:17081:19342							
ANR	3159526	FunctionDef	"Superdag :: computeBipartiteConstituent (const Dag & skeleton , const Dag & reversed , const int * numberOfParents , int anchor , int * ancestor , int & lastA , int * sink , int & lastS , int color , int * colorA , int * colorS)"		3159525	0					
ANR	3159527	CompoundStatement		600:0:17318:19342	3159525	0					
ANR	3159528	IdentifierDeclStatement	"int k , j , u , v , first ;"	601:1:17321:17338	3159525	0	True				
ANR	3159529	IdentifierDecl	k		3159525	0					
ANR	3159530	IdentifierDeclType	int		3159525	0					
ANR	3159531	Identifier	k		3159525	1					
ANR	3159532	IdentifierDecl	j		3159525	1					
ANR	3159533	IdentifierDeclType	int		3159525	0					
ANR	3159534	Identifier	j		3159525	1					
ANR	3159535	IdentifierDecl	u		3159525	2					
ANR	3159536	IdentifierDeclType	int		3159525	0					
ANR	3159537	Identifier	u		3159525	1					
ANR	3159538	IdentifierDecl	v		3159525	3					
ANR	3159539	IdentifierDeclType	int		3159525	0					
ANR	3159540	Identifier	v		3159525	1					
ANR	3159541	IdentifierDecl	first		3159525	4					
ANR	3159542	IdentifierDeclType	int		3159525	0					
ANR	3159543	Identifier	first		3159525	1					
ANR	3159544	IdentifierDeclStatement	bool bipartite = true ;	603:1:17342:17363	3159525	1	True				
ANR	3159545	IdentifierDecl	bipartite = true		3159525	0					
ANR	3159546	IdentifierDeclType	bool		3159525	0					
ANR	3159547	Identifier	bipartite		3159525	1					
ANR	3159548	AssignmentExpression	bipartite = true		3159525	2		=			
ANR	3159549	Identifier	true		3159525	0					
ANR	3159550	Identifier	true		3159525	1					
ANR	3159551	ExpressionStatement	ancestor [ 0 ] = anchor	606:1:17418:17438	3159525	2	True				
ANR	3159552	AssignmentExpression	ancestor [ 0 ] = anchor		3159525	0		=			
ANR	3159553	ArrayIndexing	ancestor [ 0 ]		3159525	0					
ANR	3159554	Identifier	ancestor		3159525	0					
ANR	3159555	PrimaryExpression	0		3159525	1					
ANR	3159556	Identifier	anchor		3159525	1					
ANR	3159557	ExpressionStatement	colorA [ anchor ] = color	607:1:17441:17463	3159525	3	True				
ANR	3159558	AssignmentExpression	colorA [ anchor ] = color		3159525	0		=			
ANR	3159559	ArrayIndexing	colorA [ anchor ]		3159525	0					
ANR	3159560	Identifier	colorA		3159525	0					
ANR	3159561	Identifier	anchor		3159525	1					
ANR	3159562	Identifier	color		3159525	1					
ANR	3159563	ExpressionStatement	lastA = 0	608:1:17466:17475	3159525	4	True				
ANR	3159564	AssignmentExpression	lastA = 0		3159525	0		=			
ANR	3159565	Identifier	lastA		3159525	0					
ANR	3159566	PrimaryExpression	0		3159525	1					
ANR	3159567	IdentifierDeclStatement	int processedA = - 1 ;	609:1:17478:17497	3159525	5	True				
ANR	3159568	IdentifierDecl	processedA = - 1		3159525	0					
ANR	3159569	IdentifierDeclType	int		3159525	0					
ANR	3159570	Identifier	processedA		3159525	1					
ANR	3159571	AssignmentExpression	processedA = - 1		3159525	2		=			
ANR	3159572	Identifier	processedA		3159525	0					
ANR	3159573	UnaryOperationExpression	- 1		3159525	1					
ANR	3159574	UnaryOperator	-		3159525	0					
ANR	3159575	PrimaryExpression	1		3159525	1					
ANR	3159576	ExpressionStatement	lastS = - 1	612:1:17540:17550	3159525	6	True				
ANR	3159577	AssignmentExpression	lastS = - 1		3159525	0		=			
ANR	3159578	Identifier	lastS		3159525	0					
ANR	3159579	UnaryOperationExpression	- 1		3159525	1					
ANR	3159580	UnaryOperator	-		3159525	0					
ANR	3159581	PrimaryExpression	1		3159525	1					
ANR	3159582	IdentifierDeclStatement	int processedS = - 1 ;	613:1:17553:17572	3159525	7	True				
ANR	3159583	IdentifierDecl	processedS = - 1		3159525	0					
ANR	3159584	IdentifierDeclType	int		3159525	0					
ANR	3159585	Identifier	processedS		3159525	1					
ANR	3159586	AssignmentExpression	processedS = - 1		3159525	2		=			
ANR	3159587	Identifier	processedS		3159525	0					
ANR	3159588	UnaryOperationExpression	- 1		3159525	1					
ANR	3159589	UnaryOperator	-		3159525	0					
ANR	3159590	PrimaryExpression	1		3159525	1					
ANR	3159591	WhileStatement	while ( processedA < lastA || processedS < lastS )		3159525	8					
ANR	3159592	Condition	processedA < lastA || processedS < lastS	615:8:17583:17618	3159525	0	True				
ANR	3159593	OrExpression	processedA < lastA || processedS < lastS		3159525	0		||			
ANR	3159594	RelationalExpression	processedA < lastA		3159525	0		<			
ANR	3159595	Identifier	processedA		3159525	0					
ANR	3159596	Identifier	lastA		3159525	1					
ANR	3159597	RelationalExpression	processedS < lastS		3159525	1		<			
ANR	3159598	Identifier	processedS		3159525	0					
ANR	3159599	Identifier	lastS		3159525	1					
ANR	3159600	CompoundStatement		16:47:303:303	3159525	1					
ANR	3159601	ForStatement	for ( j = processedA + 1 ; j <= lastA ; j ++ )		3159525	0					
ANR	3159602	ForInit	j = processedA + 1 ;	618:7:17655:17669	3159525	0	True				
ANR	3159603	AssignmentExpression	j = processedA + 1		3159525	0		=			
ANR	3159604	Identifier	j		3159525	0					
ANR	3159605	AdditiveExpression	processedA + 1		3159525	1		+			
ANR	3159606	Identifier	processedA		3159525	0					
ANR	3159607	PrimaryExpression	1		3159525	1					
ANR	3159608	Condition	j <= lastA	618:23:17671:17678	3159525	1	True				
ANR	3159609	RelationalExpression	j <= lastA		3159525	0		<=			
ANR	3159610	Identifier	j		3159525	0					
ANR	3159611	Identifier	lastA		3159525	1					
ANR	3159612	PostIncDecOperationExpression	j ++	618:33:17681:17683	3159525	2	True				
ANR	3159613	Identifier	j		3159525	0					
ANR	3159614	IncDec	++		3159525	1					
ANR	3159615	CompoundStatement		21:3:415:461	3159525	3					
ANR	3159616	IdentifierDeclStatement	int numArcs = skeleton . getNumArcs ( ancestor [ j ] ) ;	620:3:17734:17780	3159525	0	True				
ANR	3159617	IdentifierDecl	numArcs = skeleton . getNumArcs ( ancestor [ j ] )		3159525	0					
ANR	3159618	IdentifierDeclType	int		3159525	0					
ANR	3159619	Identifier	numArcs		3159525	1					
ANR	3159620	AssignmentExpression	numArcs = skeleton . getNumArcs ( ancestor [ j ] )		3159525	2		=			
ANR	3159621	Identifier	numArcs		3159525	0					
ANR	3159622	CallExpression	skeleton . getNumArcs ( ancestor [ j ] )		3159525	1					
ANR	3159623	Callee	skeleton . getNumArcs		3159525	0					
ANR	3159624	MemberAccess	skeleton . getNumArcs		3159525	0					
ANR	3159625	Identifier	skeleton		3159525	0					
ANR	3159626	Identifier	getNumArcs		3159525	1					
ANR	3159627	ArgumentList	ancestor [ j ]		3159525	1					
ANR	3159628	Argument	ancestor [ j ]		3159525	0					
ANR	3159629	ArrayIndexing	ancestor [ j ]		3159525	0					
ANR	3159630	Identifier	ancestor		3159525	0					
ANR	3159631	Identifier	j		3159525	1					
ANR	3159632	ForStatement	for ( k = 0 ; k < numArcs ; k ++ )		3159525	1					
ANR	3159633	ForInit	k = 0 ;	621:8:17790:17793	3159525	0	True				
ANR	3159634	AssignmentExpression	k = 0		3159525	0		=			
ANR	3159635	Identifier	k		3159525	0					
ANR	3159636	PrimaryExpression	0		3159525	1					
ANR	3159637	Condition	k < numArcs	621:13:17795:17803	3159525	1	True				
ANR	3159638	RelationalExpression	k < numArcs		3159525	0		<			
ANR	3159639	Identifier	k		3159525	0					
ANR	3159640	Identifier	numArcs		3159525	1					
ANR	3159641	PostIncDecOperationExpression	k ++	621:24:17806:17808	3159525	2	True				
ANR	3159642	Identifier	k		3159525	0					
ANR	3159643	IncDec	++		3159525	1					
ANR	3159644	CompoundStatement		22:30:493:493	3159525	3					
ANR	3159645	ExpressionStatement	"v = skeleton . getArc ( ancestor [ j ] , k )"	622:4:17818:17852	3159525	0	True				
ANR	3159646	AssignmentExpression	"v = skeleton . getArc ( ancestor [ j ] , k )"		3159525	0		=			
ANR	3159647	Identifier	v		3159525	0					
ANR	3159648	CallExpression	"skeleton . getArc ( ancestor [ j ] , k )"		3159525	1					
ANR	3159649	Callee	skeleton . getArc		3159525	0					
ANR	3159650	MemberAccess	skeleton . getArc		3159525	0					
ANR	3159651	Identifier	skeleton		3159525	0					
ANR	3159652	Identifier	getArc		3159525	1					
ANR	3159653	ArgumentList	ancestor [ j ]		3159525	1					
ANR	3159654	Argument	ancestor [ j ]		3159525	0					
ANR	3159655	ArrayIndexing	ancestor [ j ]		3159525	0					
ANR	3159656	Identifier	ancestor		3159525	0					
ANR	3159657	Identifier	j		3159525	1					
ANR	3159658	Argument	k		3159525	1					
ANR	3159659	Identifier	k		3159525	0					
ANR	3159660	IfStatement	if ( colorS [ v ] != color )		3159525	1					
ANR	3159661	Condition	colorS [ v ] != color	623:8:17862:17879	3159525	0	True				
ANR	3159662	EqualityExpression	colorS [ v ] != color		3159525	0		!=			
ANR	3159663	ArrayIndexing	colorS [ v ]		3159525	0					
ANR	3159664	Identifier	colorS		3159525	0					
ANR	3159665	Identifier	v		3159525	1					
ANR	3159666	Identifier	color		3159525	1					
ANR	3159667	CompoundStatement		24:29:564:564	3159525	1					
ANR	3159668	ExpressionStatement	lastS ++	624:5:17890:17897	3159525	0	True				
ANR	3159669	PostIncDecOperationExpression	lastS ++		3159525	0					
ANR	3159670	Identifier	lastS		3159525	0					
ANR	3159671	IncDec	++		3159525	1					
ANR	3159672	ExpressionStatement	sink [ lastS ] = v	625:5:17904:17919	3159525	1	True				
ANR	3159673	AssignmentExpression	sink [ lastS ] = v		3159525	0		=			
ANR	3159674	ArrayIndexing	sink [ lastS ]		3159525	0					
ANR	3159675	Identifier	sink		3159525	0					
ANR	3159676	Identifier	lastS		3159525	1					
ANR	3159677	Identifier	v		3159525	1					
ANR	3159678	ExpressionStatement	colorS [ v ] = color	626:5:17926:17943	3159525	2	True				
ANR	3159679	AssignmentExpression	colorS [ v ] = color		3159525	0		=			
ANR	3159680	ArrayIndexing	colorS [ v ]		3159525	0					
ANR	3159681	Identifier	colorS		3159525	0					
ANR	3159682	Identifier	v		3159525	1					
ANR	3159683	Identifier	color		3159525	1					
ANR	3159684	ExpressionStatement		627:5:17950:17950	3159525	2	True				
ANR	3159685	ExpressionStatement		628:4:17956:17956	3159525	2	True				
ANR	3159686	ExpressionStatement	processedA ++	629:3:17961:17973	3159525	3	True				
ANR	3159687	PostIncDecOperationExpression	processedA ++		3159525	0					
ANR	3159688	Identifier	processedA		3159525	0					
ANR	3159689	IncDec	++		3159525	1					
ANR	3159690	ExpressionStatement		630:3:17978:17978	3159525	1	True				
ANR	3159691	ForStatement	for ( j = processedS + 1 ; j <= lastS ; j ++ )		3159525	2					
ANR	3159692	ForInit	j = processedS + 1 ;	633:7:18012:18026	3159525	0	True				
ANR	3159693	AssignmentExpression	j = processedS + 1		3159525	0		=			
ANR	3159694	Identifier	j		3159525	0					
ANR	3159695	AdditiveExpression	processedS + 1		3159525	1		+			
ANR	3159696	Identifier	processedS		3159525	0					
ANR	3159697	PrimaryExpression	1		3159525	1					
ANR	3159698	Condition	j <= lastS	633:23:18028:18035	3159525	1	True				
ANR	3159699	RelationalExpression	j <= lastS		3159525	0		<=			
ANR	3159700	Identifier	j		3159525	0					
ANR	3159701	Identifier	lastS		3159525	1					
ANR	3159702	PostIncDecOperationExpression	j ++	633:33:18038:18040	3159525	2	True				
ANR	3159703	Identifier	j		3159525	0					
ANR	3159704	IncDec	++		3159525	1					
ANR	3159705	CompoundStatement		39:3:908:950	3159525	3					
ANR	3159706	IdentifierDeclStatement	int numArcs = reversed . getNumArcs ( sink [ j ] ) ;	638:3:18227:18269	3159525	0	True				
ANR	3159707	IdentifierDecl	numArcs = reversed . getNumArcs ( sink [ j ] )		3159525	0					
ANR	3159708	IdentifierDeclType	int		3159525	0					
ANR	3159709	Identifier	numArcs		3159525	1					
ANR	3159710	AssignmentExpression	numArcs = reversed . getNumArcs ( sink [ j ] )		3159525	2		=			
ANR	3159711	Identifier	numArcs		3159525	0					
ANR	3159712	CallExpression	reversed . getNumArcs ( sink [ j ] )		3159525	1					
ANR	3159713	Callee	reversed . getNumArcs		3159525	0					
ANR	3159714	MemberAccess	reversed . getNumArcs		3159525	0					
ANR	3159715	Identifier	reversed		3159525	0					
ANR	3159716	Identifier	getNumArcs		3159525	1					
ANR	3159717	ArgumentList	sink [ j ]		3159525	1					
ANR	3159718	Argument	sink [ j ]		3159525	0					
ANR	3159719	ArrayIndexing	sink [ j ]		3159525	0					
ANR	3159720	Identifier	sink		3159525	0					
ANR	3159721	Identifier	j		3159525	1					
ANR	3159722	ForStatement	for ( k = 0 ; k < numArcs ; k ++ )		3159525	1					
ANR	3159723	ForInit	k = 0 ;	639:8:18279:18282	3159525	0	True				
ANR	3159724	AssignmentExpression	k = 0		3159525	0		=			
ANR	3159725	Identifier	k		3159525	0					
ANR	3159726	PrimaryExpression	0		3159525	1					
ANR	3159727	Condition	k < numArcs	639:13:18284:18292	3159525	1	True				
ANR	3159728	RelationalExpression	k < numArcs		3159525	0		<			
ANR	3159729	Identifier	k		3159525	0					
ANR	3159730	Identifier	numArcs		3159525	1					
ANR	3159731	PostIncDecOperationExpression	k ++	639:24:18295:18297	3159525	2	True				
ANR	3159732	Identifier	k		3159525	0					
ANR	3159733	IncDec	++		3159525	1					
ANR	3159734	CompoundStatement		40:30:982:982	3159525	3					
ANR	3159735	ExpressionStatement	"u = reversed . getArc ( sink [ j ] , k )"	640:4:18307:18337	3159525	0	True				
ANR	3159736	AssignmentExpression	"u = reversed . getArc ( sink [ j ] , k )"		3159525	0		=			
ANR	3159737	Identifier	u		3159525	0					
ANR	3159738	CallExpression	"reversed . getArc ( sink [ j ] , k )"		3159525	1					
ANR	3159739	Callee	reversed . getArc		3159525	0					
ANR	3159740	MemberAccess	reversed . getArc		3159525	0					
ANR	3159741	Identifier	reversed		3159525	0					
ANR	3159742	Identifier	getArc		3159525	1					
ANR	3159743	ArgumentList	sink [ j ]		3159525	1					
ANR	3159744	Argument	sink [ j ]		3159525	0					
ANR	3159745	ArrayIndexing	sink [ j ]		3159525	0					
ANR	3159746	Identifier	sink		3159525	0					
ANR	3159747	Identifier	j		3159525	1					
ANR	3159748	Argument	k		3159525	1					
ANR	3159749	Identifier	k		3159525	0					
ANR	3159750	IfStatement	if ( colorA [ u ] != color && - 1 != numberOfParents [ u ] )		3159525	1					
ANR	3159751	Condition	colorA [ u ] != color && - 1 != numberOfParents [ u ]	641:9:18348:18394	3159525	0	True				
ANR	3159752	AndExpression	colorA [ u ] != color && - 1 != numberOfParents [ u ]		3159525	0		&&			
ANR	3159753	EqualityExpression	colorA [ u ] != color		3159525	0		!=			
ANR	3159754	ArrayIndexing	colorA [ u ]		3159525	0					
ANR	3159755	Identifier	colorA		3159525	0					
ANR	3159756	Identifier	u		3159525	1					
ANR	3159757	Identifier	color		3159525	1					
ANR	3159758	EqualityExpression	- 1 != numberOfParents [ u ]		3159525	1		!=			
ANR	3159759	UnaryOperationExpression	- 1		3159525	0					
ANR	3159760	UnaryOperator	-		3159525	0					
ANR	3159761	PrimaryExpression	1		3159525	1					
ANR	3159762	ArrayIndexing	numberOfParents [ u ]		3159525	1					
ANR	3159763	Identifier	numberOfParents		3159525	0					
ANR	3159764	Identifier	u		3159525	1					
ANR	3159765	CompoundStatement		42:60:1080:1080	3159525	1					
ANR	3159766	ExpressionStatement	lastA ++	642:5:18406:18413	3159525	0	True				
ANR	3159767	PostIncDecOperationExpression	lastA ++		3159525	0					
ANR	3159768	Identifier	lastA		3159525	0					
ANR	3159769	IncDec	++		3159525	1					
ANR	3159770	ExpressionStatement	ancestor [ lastA ] = u	643:5:18420:18439	3159525	1	True				
ANR	3159771	AssignmentExpression	ancestor [ lastA ] = u		3159525	0		=			
ANR	3159772	ArrayIndexing	ancestor [ lastA ]		3159525	0					
ANR	3159773	Identifier	ancestor		3159525	0					
ANR	3159774	Identifier	lastA		3159525	1					
ANR	3159775	Identifier	u		3159525	1					
ANR	3159776	ExpressionStatement	colorA [ u ] = color	644:5:18446:18463	3159525	2	True				
ANR	3159777	AssignmentExpression	colorA [ u ] = color		3159525	0		=			
ANR	3159778	ArrayIndexing	colorA [ u ]		3159525	0					
ANR	3159779	Identifier	colorA		3159525	0					
ANR	3159780	Identifier	u		3159525	1					
ANR	3159781	Identifier	color		3159525	1					
ANR	3159782	ExpressionStatement		645:5:18470:18470	3159525	2	True				
ANR	3159783	ExpressionStatement		646:4:18476:18476	3159525	2	True				
ANR	3159784	IfStatement	if ( processedA < lastA )		3159525	3					
ANR	3159785	Condition	processedA < lastA	648:7:18532:18549	3159525	0	True				
ANR	3159786	RelationalExpression	processedA < lastA		3159525	0		<			
ANR	3159787	Identifier	processedA		3159525	0					
ANR	3159788	Identifier	lastA		3159525	1					
ANR	3159789	CompoundStatement		49:28:1234:1234	3159525	1					
ANR	3159790	ExpressionStatement	first = processedA + 1	653:4:18746:18766	3159525	0	True				
ANR	3159791	AssignmentExpression	first = processedA + 1		3159525	0		=			
ANR	3159792	Identifier	first		3159525	0					
ANR	3159793	AdditiveExpression	processedA + 1		3159525	1		+			
ANR	3159794	Identifier	processedA		3159525	0					
ANR	3159795	PrimaryExpression	1		3159525	1					
ANR	3159796	WhileStatement	while ( first <= lastA )		3159525	1					
ANR	3159797	Condition	first <= lastA	654:11:18779:18792	3159525	0	True				
ANR	3159798	RelationalExpression	first <= lastA		3159525	0		<=			
ANR	3159799	Identifier	first		3159525	0					
ANR	3159800	Identifier	lastA		3159525	1					
ANR	3159801	CompoundStatement		60:5:1654:1704	3159525	1					
ANR	3159802	IdentifierDeclStatement	int numArcs = reversed . getNumArcs ( ancestor [ first ] ) ;	659:5:18973:19023	3159525	0	True				
ANR	3159803	IdentifierDecl	numArcs = reversed . getNumArcs ( ancestor [ first ] )		3159525	0					
ANR	3159804	IdentifierDeclType	int		3159525	0					
ANR	3159805	Identifier	numArcs		3159525	1					
ANR	3159806	AssignmentExpression	numArcs = reversed . getNumArcs ( ancestor [ first ] )		3159525	2		=			
ANR	3159807	Identifier	numArcs		3159525	0					
ANR	3159808	CallExpression	reversed . getNumArcs ( ancestor [ first ] )		3159525	1					
ANR	3159809	Callee	reversed . getNumArcs		3159525	0					
ANR	3159810	MemberAccess	reversed . getNumArcs		3159525	0					
ANR	3159811	Identifier	reversed		3159525	0					
ANR	3159812	Identifier	getNumArcs		3159525	1					
ANR	3159813	ArgumentList	ancestor [ first ]		3159525	1					
ANR	3159814	Argument	ancestor [ first ]		3159525	0					
ANR	3159815	ArrayIndexing	ancestor [ first ]		3159525	0					
ANR	3159816	Identifier	ancestor		3159525	0					
ANR	3159817	Identifier	first		3159525	1					
ANR	3159818	ForStatement	for ( k = 0 ; k < numArcs ; k ++ )		3159525	1					
ANR	3159819	ForInit	k = 0 ;	660:10:19035:19038	3159525	0	True				
ANR	3159820	AssignmentExpression	k = 0		3159525	0		=			
ANR	3159821	Identifier	k		3159525	0					
ANR	3159822	PrimaryExpression	0		3159525	1					
ANR	3159823	Condition	k < numArcs	660:15:19040:19048	3159525	1	True				
ANR	3159824	RelationalExpression	k < numArcs		3159525	0		<			
ANR	3159825	Identifier	k		3159525	0					
ANR	3159826	Identifier	numArcs		3159525	1					
ANR	3159827	PostIncDecOperationExpression	k ++	660:26:19051:19053	3159525	2	True				
ANR	3159828	Identifier	k		3159525	0					
ANR	3159829	IncDec	++		3159525	1					
ANR	3159830	CompoundStatement		61:32:1738:1738	3159525	3					
ANR	3159831	ExpressionStatement	"u = reversed . getArc ( ancestor [ first ] , k )"	661:6:19065:19103	3159525	0	True				
ANR	3159832	AssignmentExpression	"u = reversed . getArc ( ancestor [ first ] , k )"		3159525	0		=			
ANR	3159833	Identifier	u		3159525	0					
ANR	3159834	CallExpression	"reversed . getArc ( ancestor [ first ] , k )"		3159525	1					
ANR	3159835	Callee	reversed . getArc		3159525	0					
ANR	3159836	MemberAccess	reversed . getArc		3159525	0					
ANR	3159837	Identifier	reversed		3159525	0					
ANR	3159838	Identifier	getArc		3159525	1					
ANR	3159839	ArgumentList	ancestor [ first ]		3159525	1					
ANR	3159840	Argument	ancestor [ first ]		3159525	0					
ANR	3159841	ArrayIndexing	ancestor [ first ]		3159525	0					
ANR	3159842	Identifier	ancestor		3159525	0					
ANR	3159843	Identifier	first		3159525	1					
ANR	3159844	Argument	k		3159525	1					
ANR	3159845	Identifier	k		3159525	0					
ANR	3159846	IfStatement	if ( - 1 != numberOfParents [ u ] )		3159525	1					
ANR	3159847	Condition	- 1 != numberOfParents [ u ]	662:10:19115:19138	3159525	0	True				
ANR	3159848	EqualityExpression	- 1 != numberOfParents [ u ]		3159525	0		!=			
ANR	3159849	UnaryOperationExpression	- 1		3159525	0					
ANR	3159850	UnaryOperator	-		3159525	0					
ANR	3159851	PrimaryExpression	1		3159525	1					
ANR	3159852	ArrayIndexing	numberOfParents [ u ]		3159525	1					
ANR	3159853	Identifier	numberOfParents		3159525	0					
ANR	3159854	Identifier	u		3159525	1					
ANR	3159855	CompoundStatement		63:37:1823:1823	3159525	1					
ANR	3159856	ExpressionStatement	bipartite = false	664:7:19194:19211	3159525	0	True				
ANR	3159857	AssignmentExpression	bipartite = false		3159525	0		=			
ANR	3159858	Identifier	bipartite		3159525	0					
ANR	3159859	Identifier	false		3159525	1					
ANR	3159860	BreakStatement	break ;	665:7:19220:19225	3159525	1	True				
ANR	3159861	ExpressionStatement		666:7:19234:19234	3159525	2	True				
ANR	3159862	ExpressionStatement		667:6:19242:19242	3159525	2	True				
ANR	3159863	ExpressionStatement	first ++	670:5:19272:19279	3159525	3	True				
ANR	3159864	PostIncDecOperationExpression	first ++		3159525	0					
ANR	3159865	Identifier	first		3159525	0					
ANR	3159866	IncDec	++		3159525	1					
ANR	3159867	ExpressionStatement		672:5:19287:19287	3159525	2	True				
ANR	3159868	ExpressionStatement		673:4:19293:19293	3159525	4	True				
ANR	3159869	ExpressionStatement	processedS ++	675:3:19299:19311	3159525	5	True				
ANR	3159870	PostIncDecOperationExpression	processedS ++		3159525	0					
ANR	3159871	Identifier	processedS		3159525	0					
ANR	3159872	IncDec	++		3159525	1					
ANR	3159873	ExpressionStatement		676:3:19316:19316	3159525	3	True				
ANR	3159874	ExpressionStatement		677:2:19320:19320	3159525	9	True				
ANR	3159875	ReturnStatement	return bipartite ;	679:1:19324:19340	3159525	10	True				
ANR	3159876	Identifier	bipartite		3159525	0					
ANR	3159877	ReturnType	bool		3159525	1					
ANR	3159878	Identifier	Superdag :: computeBipartiteConstituent		3159525	2					
ANR	3159879	ParameterList	"const Dag & skeleton , const Dag & reversed , const int * numberOfParents , int anchor , int * ancestor , int & lastA , int * sink , int & lastS , int color , int * colorA , int * colorS"		3159525	3					
ANR	3159880	Parameter	const Dag & skeleton	597:44:17125:17143	3159525	0	True				
ANR	3159881	ParameterType	const Dag &		3159525	0					
ANR	3159882	Identifier	skeleton		3159525	1					
ANR	3159883	Parameter	const Dag & reversed	597:65:17146:17164	3159525	1	True				
ANR	3159884	ParameterType	const Dag &		3159525	0					
ANR	3159885	Identifier	reversed		3159525	1					
ANR	3159886	Parameter	const int * numberOfParents	597:86:17167:17192	3159525	2	True				
ANR	3159887	ParameterType	const int *		3159525	0					
ANR	3159888	Identifier	numberOfParents		3159525	1					
ANR	3159889	Parameter	int anchor	598:11:17207:17216	3159525	3	True				
ANR	3159890	ParameterType	int		3159525	0					
ANR	3159891	Identifier	anchor		3159525	1					
ANR	3159892	Parameter	int * ancestor	598:23:17219:17231	3159525	4	True				
ANR	3159893	ParameterType	int *		3159525	0					
ANR	3159894	Identifier	ancestor		3159525	1					
ANR	3159895	Parameter	int & lastA	598:38:17234:17243	3159525	5	True				
ANR	3159896	ParameterType	int &		3159525	0					
ANR	3159897	Identifier	lastA		3159525	1					
ANR	3159898	Parameter	int * sink	598:50:17246:17254	3159525	6	True				
ANR	3159899	ParameterType	int *		3159525	0					
ANR	3159900	Identifier	sink		3159525	1					
ANR	3159901	Parameter	int & lastS	598:61:17257:17266	3159525	7	True				
ANR	3159902	ParameterType	int &		3159525	0					
ANR	3159903	Identifier	lastS		3159525	1					
ANR	3159904	Parameter	int color	599:11:17280:17288	3159525	8	True				
ANR	3159905	ParameterType	int		3159525	0					
ANR	3159906	Identifier	color		3159525	1					
ANR	3159907	Parameter	int * colorA	599:22:17291:17301	3159525	9	True				
ANR	3159908	ParameterType	int *		3159525	0					
ANR	3159909	Identifier	colorA		3159525	1					
ANR	3159910	Parameter	int * colorS	599:35:17304:17314	3159525	10	True				
ANR	3159911	ParameterType	int *		3159525	0					
ANR	3159912	Identifier	colorS		3159525	1					
ANR	3159913	CFGEntryNode	ENTRY		3159525		True				
ANR	3159914	CFGExitNode	EXIT		3159525		True				
ANR	3159915	Symbol	colorA		3159525						
ANR	3159916	Symbol	* v		3159525						
ANR	3159917	Symbol	* colorA		3159525						
ANR	3159918	Symbol	color		3159525						
ANR	3159919	Symbol	* ancestor		3159525						
ANR	3159920	Symbol	* lastS		3159525						
ANR	3159921	Symbol	numberOfParents		3159525						
ANR	3159922	Symbol	* numberOfParents		3159525						
ANR	3159923	Symbol	* anchor		3159525						
ANR	3159924	Symbol	skeleton		3159525						
ANR	3159925	Symbol	reversed . getArc		3159525						
ANR	3159926	Symbol	* first		3159525						
ANR	3159927	Symbol	processedA		3159525						
ANR	3159928	Symbol	lastS		3159525						
ANR	3159929	Symbol	skeleton . getArc		3159525						
ANR	3159930	Symbol	sink		3159525						
ANR	3159931	Symbol	ancestor		3159525						
ANR	3159932	Symbol	false		3159525						
ANR	3159933	Symbol	j		3159525						
ANR	3159934	Symbol	bipartite		3159525						
ANR	3159935	Symbol	k		3159525						
ANR	3159936	Symbol	* sink		3159525						
ANR	3159937	Symbol	colorS		3159525						
ANR	3159938	Symbol	processedS		3159525						
ANR	3159939	Symbol	reversed . getNumArcs		3159525						
ANR	3159940	Symbol	* colorS		3159525						
ANR	3159941	Symbol	lastA		3159525						
ANR	3159942	Symbol	* j		3159525						
ANR	3159943	Symbol	numArcs		3159525						
ANR	3159944	Symbol	u		3159525						
ANR	3159945	Symbol	* lastA		3159525						
ANR	3159946	Symbol	v		3159525						
ANR	3159947	Symbol	anchor		3159525						
ANR	3159948	Symbol	true		3159525						
ANR	3159949	Symbol	skeleton . getNumArcs		3159525						
ANR	3159950	Symbol	reversed		3159525						
ANR	3159951	Symbol	first		3159525						
ANR	3159952	Symbol	* u		3159525						
ANR	3159953	Function	Superdag :: detachConstituent	705:0:20157:22638							
ANR	3159954	FunctionDef	"Superdag :: detachConstituent (const Dag & skeleton , int anchorNode , int * constituentIDtoAnchor , int * sinkToConstituentID , int * numberOfParents , ResizableArray < int > & constituentAncestor , ResizableArray < int > & constituentSink)"		3159953	0					
ANR	3159955	CompoundStatement		710:0:20424:22638	3159953	0					
ANR	3159956	IdentifierDeclStatement	int k ;	711:1:20427:20432	3159953	0	True				
ANR	3159957	IdentifierDecl	k		3159953	0					
ANR	3159958	IdentifierDeclType	int		3159953	0					
ANR	3159959	Identifier	k		3159953	1					
ANR	3159960	IdentifierDeclStatement	int constituentID ;	714:1:20513:20530	3159953	1	True				
ANR	3159961	IdentifierDecl	constituentID		3159953	0					
ANR	3159962	IdentifierDeclType	int		3159953	0					
ANR	3159963	Identifier	constituentID		3159953	1					
ANR	3159964	ExpressionStatement	constituentID = addNode ( )	715:1:20533:20558	3159953	2	True				
ANR	3159965	AssignmentExpression	constituentID = addNode ( )		3159953	0		=			
ANR	3159966	Identifier	constituentID		3159953	0					
ANR	3159967	CallExpression	addNode ( )		3159953	1					
ANR	3159968	Callee	addNode		3159953	0					
ANR	3159969	Identifier	addNode		3159953	0					
ANR	3159970	ArgumentList			3159953	1					
ANR	3159971	ExpressionStatement	constituentIDtoAnchor [ constituentID ] = anchorNode	718:1:20649:20698	3159953	3	True				
ANR	3159972	AssignmentExpression	constituentIDtoAnchor [ constituentID ] = anchorNode		3159953	0		=			
ANR	3159973	ArrayIndexing	constituentIDtoAnchor [ constituentID ]		3159953	0					
ANR	3159974	Identifier	constituentIDtoAnchor		3159953	0					
ANR	3159975	Identifier	constituentID		3159953	1					
ANR	3159976	Identifier	anchorNode		3159953	1					
ANR	3159977	ExpressionStatement	"printf ( ""---detaching constituent anchored at %d\\n"" , anchorNode )"	722:1:20760:20822	3159953	4	True				
ANR	3159978	CallExpression	"printf ( ""---detaching constituent anchored at %d\\n"" , anchorNode )"		3159953	0					
ANR	3159979	Callee	printf		3159953	0					
ANR	3159980	Identifier	printf		3159953	0					
ANR	3159981	ArgumentList	"""---detaching constituent anchored at %d\\n"""		3159953	1					
ANR	3159982	Argument	"""---detaching constituent anchored at %d\\n"""		3159953	0					
ANR	3159983	PrimaryExpression	"""---detaching constituent anchored at %d\\n"""		3159953	0					
ANR	3159984	Argument	anchorNode		3159953	1					
ANR	3159985	Identifier	anchorNode		3159953	0					
ANR	3159986	ExpressionStatement	"printf ( ""      ancestors: "" )"	723:1:20825:20852	3159953	5	True				
ANR	3159987	CallExpression	"printf ( ""      ancestors: "" )"		3159953	0					
ANR	3159988	Callee	printf		3159953	0					
ANR	3159989	Identifier	printf		3159953	0					
ANR	3159990	ArgumentList	"""      ancestors: """		3159953	1					
ANR	3159991	Argument	"""      ancestors: """		3159953	0					
ANR	3159992	PrimaryExpression	"""      ancestors: """		3159953	0					
ANR	3159993	ForStatement	for ( k = 0 ; k < constituentAncestor . getNumElem ( ) ; k ++ )		3159953	6					
ANR	3159994	ForInit	k = 0 ;	724:6:20860:20863	3159953	0	True				
ANR	3159995	AssignmentExpression	k = 0		3159953	0		=			
ANR	3159996	Identifier	k		3159953	0					
ANR	3159997	PrimaryExpression	0		3159953	1					
ANR	3159998	Condition	k < constituentAncestor . getNumElem ( )	724:11:20865:20898	3159953	1	True				
ANR	3159999	RelationalExpression	k < constituentAncestor . getNumElem ( )		3159953	0		<			
ANR	3160000	Identifier	k		3159953	0					
ANR	3160001	CallExpression	constituentAncestor . getNumElem ( )		3159953	1					
ANR	3160002	Callee	constituentAncestor . getNumElem		3159953	0					
ANR	3160003	MemberAccess	constituentAncestor . getNumElem		3159953	0					
ANR	3160004	Identifier	constituentAncestor		3159953	0					
ANR	3160005	Identifier	getNumElem		3159953	1					
ANR	3160006	ArgumentList			3159953	1					
ANR	3160007	PostIncDecOperationExpression	k ++	724:47:20901:20903	3159953	2	True				
ANR	3160008	Identifier	k		3159953	0					
ANR	3160009	IncDec	++		3159953	1					
ANR	3160010	ExpressionStatement	"printf ( ""%d "" , constituentAncestor . getElem ( k ) )"	725:2:20909:20955	3159953	3	True				
ANR	3160011	CallExpression	"printf ( ""%d "" , constituentAncestor . getElem ( k ) )"		3159953	0					
ANR	3160012	Callee	printf		3159953	0					
ANR	3160013	Identifier	printf		3159953	0					
ANR	3160014	ArgumentList	"""%d """		3159953	1					
ANR	3160015	Argument	"""%d """		3159953	0					
ANR	3160016	PrimaryExpression	"""%d """		3159953	0					
ANR	3160017	Argument	constituentAncestor . getElem ( k )		3159953	1					
ANR	3160018	CallExpression	constituentAncestor . getElem ( k )		3159953	0					
ANR	3160019	Callee	constituentAncestor . getElem		3159953	0					
ANR	3160020	MemberAccess	constituentAncestor . getElem		3159953	0					
ANR	3160021	Identifier	constituentAncestor		3159953	0					
ANR	3160022	Identifier	getElem		3159953	1					
ANR	3160023	ArgumentList	k		3159953	1					
ANR	3160024	Argument	k		3159953	0					
ANR	3160025	Identifier	k		3159953	0					
ANR	3160026	ExpressionStatement	"printf ( ""\\n"" )"	726:1:20958:20970	3159953	7	True				
ANR	3160027	CallExpression	"printf ( ""\\n"" )"		3159953	0					
ANR	3160028	Callee	printf		3159953	0					
ANR	3160029	Identifier	printf		3159953	0					
ANR	3160030	ArgumentList	"""\\n"""		3159953	1					
ANR	3160031	Argument	"""\\n"""		3159953	0					
ANR	3160032	PrimaryExpression	"""\\n"""		3159953	0					
ANR	3160033	ExpressionStatement	"printf ( ""      sinks: "" )"	727:1:20973:20996	3159953	8	True				
ANR	3160034	CallExpression	"printf ( ""      sinks: "" )"		3159953	0					
ANR	3160035	Callee	printf		3159953	0					
ANR	3160036	Identifier	printf		3159953	0					
ANR	3160037	ArgumentList	"""      sinks: """		3159953	1					
ANR	3160038	Argument	"""      sinks: """		3159953	0					
ANR	3160039	PrimaryExpression	"""      sinks: """		3159953	0					
ANR	3160040	ForStatement	for ( k = 0 ; k < constituentSink . getNumElem ( ) ; k ++ )		3159953	9					
ANR	3160041	ForInit	k = 0 ;	728:6:21004:21007	3159953	0	True				
ANR	3160042	AssignmentExpression	k = 0		3159953	0		=			
ANR	3160043	Identifier	k		3159953	0					
ANR	3160044	PrimaryExpression	0		3159953	1					
ANR	3160045	Condition	k < constituentSink . getNumElem ( )	728:11:21009:21038	3159953	1	True				
ANR	3160046	RelationalExpression	k < constituentSink . getNumElem ( )		3159953	0		<			
ANR	3160047	Identifier	k		3159953	0					
ANR	3160048	CallExpression	constituentSink . getNumElem ( )		3159953	1					
ANR	3160049	Callee	constituentSink . getNumElem		3159953	0					
ANR	3160050	MemberAccess	constituentSink . getNumElem		3159953	0					
ANR	3160051	Identifier	constituentSink		3159953	0					
ANR	3160052	Identifier	getNumElem		3159953	1					
ANR	3160053	ArgumentList			3159953	1					
ANR	3160054	PostIncDecOperationExpression	k ++	728:43:21041:21043	3159953	2	True				
ANR	3160055	Identifier	k		3159953	0					
ANR	3160056	IncDec	++		3159953	1					
ANR	3160057	ExpressionStatement	"printf ( ""%d "" , constituentSink . getElem ( k ) )"	729:2:21049:21091	3159953	3	True				
ANR	3160058	CallExpression	"printf ( ""%d "" , constituentSink . getElem ( k ) )"		3159953	0					
ANR	3160059	Callee	printf		3159953	0					
ANR	3160060	Identifier	printf		3159953	0					
ANR	3160061	ArgumentList	"""%d """		3159953	1					
ANR	3160062	Argument	"""%d """		3159953	0					
ANR	3160063	PrimaryExpression	"""%d """		3159953	0					
ANR	3160064	Argument	constituentSink . getElem ( k )		3159953	1					
ANR	3160065	CallExpression	constituentSink . getElem ( k )		3159953	0					
ANR	3160066	Callee	constituentSink . getElem		3159953	0					
ANR	3160067	MemberAccess	constituentSink . getElem		3159953	0					
ANR	3160068	Identifier	constituentSink		3159953	0					
ANR	3160069	Identifier	getElem		3159953	1					
ANR	3160070	ArgumentList	k		3159953	1					
ANR	3160071	Argument	k		3159953	0					
ANR	3160072	Identifier	k		3159953	0					
ANR	3160073	ExpressionStatement	"printf ( ""\\n"" )"	730:1:21094:21106	3159953	10	True				
ANR	3160074	CallExpression	"printf ( ""\\n"" )"		3159953	0					
ANR	3160075	Callee	printf		3159953	0					
ANR	3160076	Identifier	printf		3159953	0					
ANR	3160077	ArgumentList	"""\\n"""		3159953	1					
ANR	3160078	Argument	"""\\n"""		3159953	0					
ANR	3160079	PrimaryExpression	"""\\n"""		3159953	0					
ANR	3160080	ForStatement	for ( k = 0 ; k < constituentAncestor . getNumElem ( ) ; k ++ )		3159953	11					
ANR	3160081	ForInit	k = 0 ;	734:6:21170:21173	3159953	0	True				
ANR	3160082	AssignmentExpression	k = 0		3159953	0		=			
ANR	3160083	Identifier	k		3159953	0					
ANR	3160084	PrimaryExpression	0		3159953	1					
ANR	3160085	Condition	k < constituentAncestor . getNumElem ( )	734:11:21175:21208	3159953	1	True				
ANR	3160086	RelationalExpression	k < constituentAncestor . getNumElem ( )		3159953	0		<			
ANR	3160087	Identifier	k		3159953	0					
ANR	3160088	CallExpression	constituentAncestor . getNumElem ( )		3159953	1					
ANR	3160089	Callee	constituentAncestor . getNumElem		3159953	0					
ANR	3160090	MemberAccess	constituentAncestor . getNumElem		3159953	0					
ANR	3160091	Identifier	constituentAncestor		3159953	0					
ANR	3160092	Identifier	getNumElem		3159953	1					
ANR	3160093	ArgumentList			3159953	1					
ANR	3160094	PostIncDecOperationExpression	k ++	734:47:21211:21213	3159953	2	True				
ANR	3160095	Identifier	k		3159953	0					
ANR	3160096	IncDec	++		3159953	1					
ANR	3160097	CompoundStatement		28:2:862:929	3159953	3					
ANR	3160098	IdentifierDeclStatement	int arcFrom = sinkToConstituentID [ constituentAncestor . getElem ( k ) ] ;	737:2:21287:21354	3159953	0	True				
ANR	3160099	IdentifierDecl	arcFrom = sinkToConstituentID [ constituentAncestor . getElem ( k ) ]		3159953	0					
ANR	3160100	IdentifierDeclType	int		3159953	0					
ANR	3160101	Identifier	arcFrom		3159953	1					
ANR	3160102	AssignmentExpression	arcFrom = sinkToConstituentID [ constituentAncestor . getElem ( k ) ]		3159953	2		=			
ANR	3160103	Identifier	arcFrom		3159953	0					
ANR	3160104	ArrayIndexing	sinkToConstituentID [ constituentAncestor . getElem ( k ) ]		3159953	1					
ANR	3160105	Identifier	sinkToConstituentID		3159953	0					
ANR	3160106	CallExpression	constituentAncestor . getElem ( k )		3159953	1					
ANR	3160107	Callee	constituentAncestor . getElem		3159953	0					
ANR	3160108	MemberAccess	constituentAncestor . getElem		3159953	0					
ANR	3160109	Identifier	constituentAncestor		3159953	0					
ANR	3160110	Identifier	getElem		3159953	1					
ANR	3160111	ArgumentList	k		3159953	1					
ANR	3160112	Argument	k		3159953	0					
ANR	3160113	Identifier	k		3159953	0					
ANR	3160114	IfStatement	if ( - 1 != arcFrom )		3159953	1					
ANR	3160115	Condition	- 1 != arcFrom	738:6:21363:21375	3159953	0	True				
ANR	3160116	EqualityExpression	- 1 != arcFrom		3159953	0		!=			
ANR	3160117	UnaryOperationExpression	- 1		3159953	0					
ANR	3160118	UnaryOperator	-		3159953	0					
ANR	3160119	PrimaryExpression	1		3159953	1					
ANR	3160120	Identifier	arcFrom		3159953	1					
ANR	3160121	CompoundStatement		29:22:954:954	3159953	1					
ANR	3160122	IfStatement	"if ( addArcNoDuplicates ( arcFrom , constituentID ) )"		3159953	0					
ANR	3160123	Condition	"addArcNoDuplicates ( arcFrom , constituentID )"	743:7:21517:21557	3159953	0	True				
ANR	3160124	CallExpression	"addArcNoDuplicates ( arcFrom , constituentID )"		3159953	0					
ANR	3160125	Callee	addArcNoDuplicates		3159953	0					
ANR	3160126	Identifier	addArcNoDuplicates		3159953	0					
ANR	3160127	ArgumentList	arcFrom		3159953	1					
ANR	3160128	Argument	arcFrom		3159953	0					
ANR	3160129	Identifier	arcFrom		3159953	0					
ANR	3160130	Argument	constituentID		3159953	1					
ANR	3160131	Identifier	constituentID		3159953	0					
ANR	3160132	CompoundStatement		34:51:1136:1136	3159953	1					
ANR	3160133	ExpressionStatement	"printf ( "">>>>>>>>>>>>>> %d --> %d\\n"" , arcFrom , constituentID )"	746:4:21583:21644	3159953	0	True				
ANR	3160134	CallExpression	"printf ( "">>>>>>>>>>>>>> %d --> %d\\n"" , arcFrom , constituentID )"		3159953	0					
ANR	3160135	Callee	printf		3159953	0					
ANR	3160136	Identifier	printf		3159953	0					
ANR	3160137	ArgumentList	""">>>>>>>>>>>>>> %d --> %d\\n"""		3159953	1					
ANR	3160138	Argument	""">>>>>>>>>>>>>> %d --> %d\\n"""		3159953	0					
ANR	3160139	PrimaryExpression	""">>>>>>>>>>>>>> %d --> %d\\n"""		3159953	0					
ANR	3160140	Argument	arcFrom		3159953	1					
ANR	3160141	Identifier	arcFrom		3159953	0					
ANR	3160142	Argument	constituentID		3159953	2					
ANR	3160143	Identifier	constituentID		3159953	0					
ANR	3160144	ExpressionStatement		749:4:21658:21658	3159953	1	True				
ANR	3160145	ExpressionStatement		750:3:21663:21663	3159953	2	True				
ANR	3160146	ExpressionStatement		751:2:21667:21667	3159953	12	True				
ANR	3160147	ForStatement	for ( k = 0 ; k < constituentSink . getNumElem ( ) ; k ++ )		3159953	13					
ANR	3160148	ForInit	k = 0 ;	756:6:21796:21799	3159953	0	True				
ANR	3160149	AssignmentExpression	k = 0		3159953	0		=			
ANR	3160150	Identifier	k		3159953	0					
ANR	3160151	PrimaryExpression	0		3159953	1					
ANR	3160152	Condition	k < constituentSink . getNumElem ( )	756:11:21801:21830	3159953	1	True				
ANR	3160153	RelationalExpression	k < constituentSink . getNumElem ( )		3159953	0		<			
ANR	3160154	Identifier	k		3159953	0					
ANR	3160155	CallExpression	constituentSink . getNumElem ( )		3159953	1					
ANR	3160156	Callee	constituentSink . getNumElem		3159953	0					
ANR	3160157	MemberAccess	constituentSink . getNumElem		3159953	0					
ANR	3160158	Identifier	constituentSink		3159953	0					
ANR	3160159	Identifier	getNumElem		3159953	1					
ANR	3160160	ArgumentList			3159953	1					
ANR	3160161	PostIncDecOperationExpression	k ++	756:43:21833:21835	3159953	2	True				
ANR	3160162	Identifier	k		3159953	0					
ANR	3160163	IncDec	++		3159953	1					
ANR	3160164	ExpressionStatement	sinkToConstituentID [ constituentSink . getElem ( k ) ] = constituentID	757:2:21841:21906	3159953	3	True				
ANR	3160165	AssignmentExpression	sinkToConstituentID [ constituentSink . getElem ( k ) ] = constituentID		3159953	0		=			
ANR	3160166	ArrayIndexing	sinkToConstituentID [ constituentSink . getElem ( k ) ]		3159953	0					
ANR	3160167	Identifier	sinkToConstituentID		3159953	0					
ANR	3160168	CallExpression	constituentSink . getElem ( k )		3159953	1					
ANR	3160169	Callee	constituentSink . getElem		3159953	0					
ANR	3160170	MemberAccess	constituentSink . getElem		3159953	0					
ANR	3160171	Identifier	constituentSink		3159953	0					
ANR	3160172	Identifier	getElem		3159953	1					
ANR	3160173	ArgumentList	k		3159953	1					
ANR	3160174	Argument	k		3159953	0					
ANR	3160175	Identifier	k		3159953	0					
ANR	3160176	Identifier	constituentID		3159953	1					
ANR	3160177	ForStatement	for ( k = 0 ; k < constituentAncestor . getNumElem ( ) ; k ++ )		3159953	14					
ANR	3160178	ForInit	k = 0 ;	760:6:22010:22013	3159953	0	True				
ANR	3160179	AssignmentExpression	k = 0		3159953	0		=			
ANR	3160180	Identifier	k		3159953	0					
ANR	3160181	PrimaryExpression	0		3159953	1					
ANR	3160182	Condition	k < constituentAncestor . getNumElem ( )	760:11:22015:22048	3159953	1	True				
ANR	3160183	RelationalExpression	k < constituentAncestor . getNumElem ( )		3159953	0		<			
ANR	3160184	Identifier	k		3159953	0					
ANR	3160185	CallExpression	constituentAncestor . getNumElem ( )		3159953	1					
ANR	3160186	Callee	constituentAncestor . getNumElem		3159953	0					
ANR	3160187	MemberAccess	constituentAncestor . getNumElem		3159953	0					
ANR	3160188	Identifier	constituentAncestor		3159953	0					
ANR	3160189	Identifier	getNumElem		3159953	1					
ANR	3160190	ArgumentList			3159953	1					
ANR	3160191	PostIncDecOperationExpression	k ++	760:47:22051:22053	3159953	2	True				
ANR	3160192	Identifier	k		3159953	0					
ANR	3160193	IncDec	++		3159953	1					
ANR	3160194	ExpressionStatement	numberOfParents [ constituentAncestor . getElem ( k ) ] = - 1	761:2:22059:22113	3159953	3	True				
ANR	3160195	AssignmentExpression	numberOfParents [ constituentAncestor . getElem ( k ) ] = - 1		3159953	0		=			
ANR	3160196	ArrayIndexing	numberOfParents [ constituentAncestor . getElem ( k ) ]		3159953	0					
ANR	3160197	Identifier	numberOfParents		3159953	0					
ANR	3160198	CallExpression	constituentAncestor . getElem ( k )		3159953	1					
ANR	3160199	Callee	constituentAncestor . getElem		3159953	0					
ANR	3160200	MemberAccess	constituentAncestor . getElem		3159953	0					
ANR	3160201	Identifier	constituentAncestor		3159953	0					
ANR	3160202	Identifier	getElem		3159953	1					
ANR	3160203	ArgumentList	k		3159953	1					
ANR	3160204	Argument	k		3159953	0					
ANR	3160205	Identifier	k		3159953	0					
ANR	3160206	UnaryOperationExpression	- 1		3159953	1					
ANR	3160207	UnaryOperator	-		3159953	0					
ANR	3160208	PrimaryExpression	1		3159953	1					
ANR	3160209	ForStatement	for ( k = 0 ; k < constituentSink . getNumElem ( ) ; k ++ )		3159953	15					
ANR	3160210	ForInit	k = 0 ;	766:6:22360:22363	3159953	0	True				
ANR	3160211	AssignmentExpression	k = 0		3159953	0		=			
ANR	3160212	Identifier	k		3159953	0					
ANR	3160213	PrimaryExpression	0		3159953	1					
ANR	3160214	Condition	k < constituentSink . getNumElem ( )	766:11:22365:22394	3159953	1	True				
ANR	3160215	RelationalExpression	k < constituentSink . getNumElem ( )		3159953	0		<			
ANR	3160216	Identifier	k		3159953	0					
ANR	3160217	CallExpression	constituentSink . getNumElem ( )		3159953	1					
ANR	3160218	Callee	constituentSink . getNumElem		3159953	0					
ANR	3160219	MemberAccess	constituentSink . getNumElem		3159953	0					
ANR	3160220	Identifier	constituentSink		3159953	0					
ANR	3160221	Identifier	getNumElem		3159953	1					
ANR	3160222	ArgumentList			3159953	1					
ANR	3160223	PostIncDecOperationExpression	k ++	766:43:22397:22399	3159953	2	True				
ANR	3160224	Identifier	k		3159953	0					
ANR	3160225	IncDec	++		3159953	1					
ANR	3160226	CompoundStatement		58:2:1982:2049	3159953	3					
ANR	3160227	IdentifierDeclStatement	int numChildren = skeleton . getNumArcs ( constituentSink . getElem ( k ) ) ;	767:2:22407:22474	3159953	0	True				
ANR	3160228	IdentifierDecl	numChildren = skeleton . getNumArcs ( constituentSink . getElem ( k ) )		3159953	0					
ANR	3160229	IdentifierDeclType	int		3159953	0					
ANR	3160230	Identifier	numChildren		3159953	1					
ANR	3160231	AssignmentExpression	numChildren = skeleton . getNumArcs ( constituentSink . getElem ( k ) )		3159953	2		=			
ANR	3160232	Identifier	numChildren		3159953	0					
ANR	3160233	CallExpression	skeleton . getNumArcs ( constituentSink . getElem ( k ) )		3159953	1					
ANR	3160234	Callee	skeleton . getNumArcs		3159953	0					
ANR	3160235	MemberAccess	skeleton . getNumArcs		3159953	0					
ANR	3160236	Identifier	skeleton		3159953	0					
ANR	3160237	Identifier	getNumArcs		3159953	1					
ANR	3160238	ArgumentList	constituentSink . getElem ( k )		3159953	1					
ANR	3160239	Argument	constituentSink . getElem ( k )		3159953	0					
ANR	3160240	CallExpression	constituentSink . getElem ( k )		3159953	0					
ANR	3160241	Callee	constituentSink . getElem		3159953	0					
ANR	3160242	MemberAccess	constituentSink . getElem		3159953	0					
ANR	3160243	Identifier	constituentSink		3159953	0					
ANR	3160244	Identifier	getElem		3159953	1					
ANR	3160245	ArgumentList	k		3159953	1					
ANR	3160246	Argument	k		3159953	0					
ANR	3160247	Identifier	k		3159953	0					
ANR	3160248	IfStatement	if ( 0 == numChildren )		3159953	1					
ANR	3160249	Condition	0 == numChildren	768:6:22482:22497	3159953	0	True				
ANR	3160250	EqualityExpression	0 == numChildren		3159953	0		==			
ANR	3160251	PrimaryExpression	0		3159953	0					
ANR	3160252	Identifier	numChildren		3159953	1					
ANR	3160253	ExpressionStatement	numberOfParents [ constituentSink . getElem ( k ) ] = - 1	769:3:22504:22554	3159953	1	True				
ANR	3160254	AssignmentExpression	numberOfParents [ constituentSink . getElem ( k ) ] = - 1		3159953	0		=			
ANR	3160255	ArrayIndexing	numberOfParents [ constituentSink . getElem ( k ) ]		3159953	0					
ANR	3160256	Identifier	numberOfParents		3159953	0					
ANR	3160257	CallExpression	constituentSink . getElem ( k )		3159953	1					
ANR	3160258	Callee	constituentSink . getElem		3159953	0					
ANR	3160259	MemberAccess	constituentSink . getElem		3159953	0					
ANR	3160260	Identifier	constituentSink		3159953	0					
ANR	3160261	Identifier	getElem		3159953	1					
ANR	3160262	ArgumentList	k		3159953	1					
ANR	3160263	Argument	k		3159953	0					
ANR	3160264	Identifier	k		3159953	0					
ANR	3160265	UnaryOperationExpression	- 1		3159953	1					
ANR	3160266	UnaryOperator	-		3159953	0					
ANR	3160267	PrimaryExpression	1		3159953	1					
ANR	3160268	IfStatement	if ( 0 < numChildren )		3159953	2					
ANR	3160269	Condition	0 < numChildren	770:6:22562:22576	3159953	0	True				
ANR	3160270	RelationalExpression	0 < numChildren		3159953	0		<			
ANR	3160271	PrimaryExpression	0		3159953	0					
ANR	3160272	Identifier	numChildren		3159953	1					
ANR	3160273	ExpressionStatement	numberOfParents [ constituentSink . getElem ( k ) ] = 0	771:3:22583:22632	3159953	1	True				
ANR	3160274	AssignmentExpression	numberOfParents [ constituentSink . getElem ( k ) ] = 0		3159953	0		=			
ANR	3160275	ArrayIndexing	numberOfParents [ constituentSink . getElem ( k ) ]		3159953	0					
ANR	3160276	Identifier	numberOfParents		3159953	0					
ANR	3160277	CallExpression	constituentSink . getElem ( k )		3159953	1					
ANR	3160278	Callee	constituentSink . getElem		3159953	0					
ANR	3160279	MemberAccess	constituentSink . getElem		3159953	0					
ANR	3160280	Identifier	constituentSink		3159953	0					
ANR	3160281	Identifier	getElem		3159953	1					
ANR	3160282	ArgumentList	k		3159953	1					
ANR	3160283	Argument	k		3159953	0					
ANR	3160284	Identifier	k		3159953	0					
ANR	3160285	PrimaryExpression	0		3159953	1					
ANR	3160286	ExpressionStatement		772:2:22636:22636	3159953	16	True				
ANR	3160287	ReturnType	void		3159953	1					
ANR	3160288	Identifier	Superdag :: detachConstituent		3159953	2					
ANR	3160289	ParameterList	"const Dag & skeleton , int anchorNode , int * constituentIDtoAnchor , int * sinkToConstituentID , int * numberOfParents , ResizableArray < int > & constituentAncestor , ResizableArray < int > & constituentSink"		3159953	3					
ANR	3160290	Parameter	const Dag & skeleton	705:34:20191:20209	3159953	0	True				
ANR	3160291	ParameterType	const Dag &		3159953	0					
ANR	3160292	Identifier	skeleton		3159953	1					
ANR	3160293	Parameter	int anchorNode	705:55:20212:20225	3159953	1	True				
ANR	3160294	ParameterType	int		3159953	0					
ANR	3160295	Identifier	anchorNode		3159953	1					
ANR	3160296	Parameter	int * constituentIDtoAnchor	706:9:20238:20263	3159953	2	True				
ANR	3160297	ParameterType	int *		3159953	0					
ANR	3160298	Identifier	constituentIDtoAnchor		3159953	1					
ANR	3160299	Parameter	int * sinkToConstituentID	706:37:20266:20289	3159953	3	True				
ANR	3160300	ParameterType	int *		3159953	0					
ANR	3160301	Identifier	sinkToConstituentID		3159953	1					
ANR	3160302	Parameter	int * numberOfParents	707:9:20302:20321	3159953	4	True				
ANR	3160303	ParameterType	int *		3159953	0					
ANR	3160304	Identifier	numberOfParents		3159953	1					
ANR	3160305	Parameter	ResizableArray < int > & constituentAncestor	708:9:20333:20372	3159953	5	True				
ANR	3160306	ParameterType	ResizableArray < int > &		3159953	0					
ANR	3160307	Identifier	constituentAncestor		3159953	1					
ANR	3160308	Parameter	ResizableArray < int > & constituentSink	709:9:20385:20420	3159953	6	True				
ANR	3160309	ParameterType	ResizableArray < int > &		3159953	0					
ANR	3160310	Identifier	constituentSink		3159953	1					
ANR	3160311	CFGEntryNode	ENTRY		3159953		True				
ANR	3160312	CFGExitNode	EXIT		3159953		True				
ANR	3160313	Symbol	* constituentID		3159953						
ANR	3160314	Symbol	addNode		3159953						
ANR	3160315	Symbol	* sinkToConstituentID		3159953						
ANR	3160316	Symbol	arcFrom		3159953						
ANR	3160317	Symbol	* constituentSink . getElem		3159953						
ANR	3160318	Symbol	constituentSink		3159953						
ANR	3160319	Symbol	numberOfParents		3159953						
ANR	3160320	Symbol	* numberOfParents		3159953						
ANR	3160321	Symbol	skeleton		3159953						
ANR	3160322	Symbol	* constituentIDtoAnchor		3159953						
ANR	3160323	Symbol	constituentSink . getNumElem		3159953						
ANR	3160324	Symbol	constituentSink . getElem		3159953						
ANR	3160325	Symbol	* constituentSink		3159953						
ANR	3160326	Symbol	numChildren		3159953						
ANR	3160327	Symbol	sinkToConstituentID		3159953						
ANR	3160328	Symbol	constituentAncestor		3159953						
ANR	3160329	Symbol	* constituentAncestor . getElem		3159953						
ANR	3160330	Symbol	constituentAncestor . getNumElem		3159953						
ANR	3160331	Symbol	* constituentAncestor		3159953						
ANR	3160332	Symbol	k		3159953						
ANR	3160333	Symbol	constituentID		3159953						
ANR	3160334	Symbol	skeleton . getNumArcs		3159953						
ANR	3160335	Symbol	anchorNode		3159953						
ANR	3160336	Symbol	constituentAncestor . getElem		3159953						
ANR	3160337	Symbol	addArcNoDuplicates		3159953						
ANR	3160338	Symbol	constituentIDtoAnchor		3159953						
ANR	3160339	Function	Superdag :: testAincludedInB	792:0:23077:23827							
ANR	3160340	FunctionDef	"Superdag :: testAincludedInB (const ResizableArray < int > & setA_1 , const ResizableArray < int > & setA_2 , const ResizableArray < int > & setB_1 , const ResizableArray < int > & setB_2 , int * colorMem , int color)"		3160339	0					
ANR	3160341	CompoundStatement		795:0:23296:23827	3160339	0					
ANR	3160342	IdentifierDeclStatement	int k ;	796:1:23299:23304	3160339	0	True				
ANR	3160343	IdentifierDecl	k		3160339	0					
ANR	3160344	IdentifierDeclType	int		3160339	0					
ANR	3160345	Identifier	k		3160339	1					
ANR	3160346	ForStatement	for ( k = 0 ; k < setB_1 . getNumElem ( ) ; k ++ )		3160339	1					
ANR	3160347	ForInit	k = 0 ;	799:6:23344:23347	3160339	0	True				
ANR	3160348	AssignmentExpression	k = 0		3160339	0		=			
ANR	3160349	Identifier	k		3160339	0					
ANR	3160350	PrimaryExpression	0		3160339	1					
ANR	3160351	Condition	k < setB_1 . getNumElem ( )	799:11:23349:23369	3160339	1	True				
ANR	3160352	RelationalExpression	k < setB_1 . getNumElem ( )		3160339	0		<			
ANR	3160353	Identifier	k		3160339	0					
ANR	3160354	CallExpression	setB_1 . getNumElem ( )		3160339	1					
ANR	3160355	Callee	setB_1 . getNumElem		3160339	0					
ANR	3160356	MemberAccess	setB_1 . getNumElem		3160339	0					
ANR	3160357	Identifier	setB_1		3160339	0					
ANR	3160358	Identifier	getNumElem		3160339	1					
ANR	3160359	ArgumentList			3160339	1					
ANR	3160360	PostIncDecOperationExpression	k ++	799:34:23372:23374	3160339	2	True				
ANR	3160361	Identifier	k		3160339	0					
ANR	3160362	IncDec	++		3160339	1					
ANR	3160363	ExpressionStatement	colorMem [ setB_1 . getElem ( k ) ] = color	800:8:23386:23423	3160339	3	True				
ANR	3160364	AssignmentExpression	colorMem [ setB_1 . getElem ( k ) ] = color		3160339	0		=			
ANR	3160365	ArrayIndexing	colorMem [ setB_1 . getElem ( k ) ]		3160339	0					
ANR	3160366	Identifier	colorMem		3160339	0					
ANR	3160367	CallExpression	setB_1 . getElem ( k )		3160339	1					
ANR	3160368	Callee	setB_1 . getElem		3160339	0					
ANR	3160369	MemberAccess	setB_1 . getElem		3160339	0					
ANR	3160370	Identifier	setB_1		3160339	0					
ANR	3160371	Identifier	getElem		3160339	1					
ANR	3160372	ArgumentList	k		3160339	1					
ANR	3160373	Argument	k		3160339	0					
ANR	3160374	Identifier	k		3160339	0					
ANR	3160375	Identifier	color		3160339	1					
ANR	3160376	ForStatement	for ( k = 0 ; k < setB_2 . getNumElem ( ) ; k ++ )		3160339	2					
ANR	3160377	ForInit	k = 0 ;	801:6:23431:23434	3160339	0	True				
ANR	3160378	AssignmentExpression	k = 0		3160339	0		=			
ANR	3160379	Identifier	k		3160339	0					
ANR	3160380	PrimaryExpression	0		3160339	1					
ANR	3160381	Condition	k < setB_2 . getNumElem ( )	801:11:23436:23456	3160339	1	True				
ANR	3160382	RelationalExpression	k < setB_2 . getNumElem ( )		3160339	0		<			
ANR	3160383	Identifier	k		3160339	0					
ANR	3160384	CallExpression	setB_2 . getNumElem ( )		3160339	1					
ANR	3160385	Callee	setB_2 . getNumElem		3160339	0					
ANR	3160386	MemberAccess	setB_2 . getNumElem		3160339	0					
ANR	3160387	Identifier	setB_2		3160339	0					
ANR	3160388	Identifier	getNumElem		3160339	1					
ANR	3160389	ArgumentList			3160339	1					
ANR	3160390	PostIncDecOperationExpression	k ++	801:34:23459:23461	3160339	2	True				
ANR	3160391	Identifier	k		3160339	0					
ANR	3160392	IncDec	++		3160339	1					
ANR	3160393	ExpressionStatement	colorMem [ setB_2 . getElem ( k ) ] = color	802:2:23467:23504	3160339	3	True				
ANR	3160394	AssignmentExpression	colorMem [ setB_2 . getElem ( k ) ] = color		3160339	0		=			
ANR	3160395	ArrayIndexing	colorMem [ setB_2 . getElem ( k ) ]		3160339	0					
ANR	3160396	Identifier	colorMem		3160339	0					
ANR	3160397	CallExpression	setB_2 . getElem ( k )		3160339	1					
ANR	3160398	Callee	setB_2 . getElem		3160339	0					
ANR	3160399	MemberAccess	setB_2 . getElem		3160339	0					
ANR	3160400	Identifier	setB_2		3160339	0					
ANR	3160401	Identifier	getElem		3160339	1					
ANR	3160402	ArgumentList	k		3160339	1					
ANR	3160403	Argument	k		3160339	0					
ANR	3160404	Identifier	k		3160339	0					
ANR	3160405	Identifier	color		3160339	1					
ANR	3160406	IdentifierDeclStatement	bool A_NotIn_B = false ;	805:1:23551:23571	3160339	3	True				
ANR	3160407	IdentifierDecl	A_NotIn_B = false		3160339	0					
ANR	3160408	IdentifierDeclType	bool		3160339	0					
ANR	3160409	Identifier	A_NotIn_B		3160339	1					
ANR	3160410	AssignmentExpression	A_NotIn_B = false		3160339	2		=			
ANR	3160411	Identifier	false		3160339	0					
ANR	3160412	Identifier	false		3160339	1					
ANR	3160413	ForStatement	for ( k = 0 ; k < setA_1 . getNumElem ( ) ; k ++ )		3160339	4					
ANR	3160414	ForInit	k = 0 ;	806:6:23579:23582	3160339	0	True				
ANR	3160415	AssignmentExpression	k = 0		3160339	0		=			
ANR	3160416	Identifier	k		3160339	0					
ANR	3160417	PrimaryExpression	0		3160339	1					
ANR	3160418	Condition	k < setA_1 . getNumElem ( )	806:11:23584:23604	3160339	1	True				
ANR	3160419	RelationalExpression	k < setA_1 . getNumElem ( )		3160339	0		<			
ANR	3160420	Identifier	k		3160339	0					
ANR	3160421	CallExpression	setA_1 . getNumElem ( )		3160339	1					
ANR	3160422	Callee	setA_1 . getNumElem		3160339	0					
ANR	3160423	MemberAccess	setA_1 . getNumElem		3160339	0					
ANR	3160424	Identifier	setA_1		3160339	0					
ANR	3160425	Identifier	getNumElem		3160339	1					
ANR	3160426	ArgumentList			3160339	1					
ANR	3160427	PostIncDecOperationExpression	k ++	806:34:23607:23609	3160339	2	True				
ANR	3160428	Identifier	k		3160339	0					
ANR	3160429	IncDec	++		3160339	1					
ANR	3160430	CompoundStatement		12:40:316:316	3160339	3					
ANR	3160431	IfStatement	if ( colorMem [ setA_1 . getElem ( k ) ] != color )		3160339	0					
ANR	3160432	Condition	colorMem [ setA_1 . getElem ( k ) ] != color	807:6:23621:23658	3160339	0	True				
ANR	3160433	EqualityExpression	colorMem [ setA_1 . getElem ( k ) ] != color		3160339	0		!=			
ANR	3160434	ArrayIndexing	colorMem [ setA_1 . getElem ( k ) ]		3160339	0					
ANR	3160435	Identifier	colorMem		3160339	0					
ANR	3160436	CallExpression	setA_1 . getElem ( k )		3160339	1					
ANR	3160437	Callee	setA_1 . getElem		3160339	0					
ANR	3160438	MemberAccess	setA_1 . getElem		3160339	0					
ANR	3160439	Identifier	setA_1		3160339	0					
ANR	3160440	Identifier	getElem		3160339	1					
ANR	3160441	ArgumentList	k		3160339	1					
ANR	3160442	Argument	k		3160339	0					
ANR	3160443	Identifier	k		3160339	0					
ANR	3160444	Identifier	color		3160339	1					
ANR	3160445	ExpressionStatement	A_NotIn_B = true	808:2:23664:23680	3160339	1	True				
ANR	3160446	AssignmentExpression	A_NotIn_B = true		3160339	0		=			
ANR	3160447	Identifier	A_NotIn_B		3160339	0					
ANR	3160448	Identifier	true		3160339	1					
ANR	3160449	ExpressionStatement		809:2:23684:23684	3160339	5	True				
ANR	3160450	ForStatement	for ( k = 0 ; k < setA_2 . getNumElem ( ) ; k ++ )		3160339	6					
ANR	3160451	ForInit	k = 0 ;	810:6:23692:23695	3160339	0	True				
ANR	3160452	AssignmentExpression	k = 0		3160339	0		=			
ANR	3160453	Identifier	k		3160339	0					
ANR	3160454	PrimaryExpression	0		3160339	1					
ANR	3160455	Condition	k < setA_2 . getNumElem ( )	810:11:23697:23717	3160339	1	True				
ANR	3160456	RelationalExpression	k < setA_2 . getNumElem ( )		3160339	0		<			
ANR	3160457	Identifier	k		3160339	0					
ANR	3160458	CallExpression	setA_2 . getNumElem ( )		3160339	1					
ANR	3160459	Callee	setA_2 . getNumElem		3160339	0					
ANR	3160460	MemberAccess	setA_2 . getNumElem		3160339	0					
ANR	3160461	Identifier	setA_2		3160339	0					
ANR	3160462	Identifier	getNumElem		3160339	1					
ANR	3160463	ArgumentList			3160339	1					
ANR	3160464	PostIncDecOperationExpression	k ++	810:34:23720:23722	3160339	2	True				
ANR	3160465	Identifier	k		3160339	0					
ANR	3160466	IncDec	++		3160339	1					
ANR	3160467	CompoundStatement		16:40:429:429	3160339	3					
ANR	3160468	IfStatement	if ( colorMem [ setA_2 . getElem ( k ) ] != color )		3160339	0					
ANR	3160469	Condition	colorMem [ setA_2 . getElem ( k ) ] != color	811:6:23734:23771	3160339	0	True				
ANR	3160470	EqualityExpression	colorMem [ setA_2 . getElem ( k ) ] != color		3160339	0		!=			
ANR	3160471	ArrayIndexing	colorMem [ setA_2 . getElem ( k ) ]		3160339	0					
ANR	3160472	Identifier	colorMem		3160339	0					
ANR	3160473	CallExpression	setA_2 . getElem ( k )		3160339	1					
ANR	3160474	Callee	setA_2 . getElem		3160339	0					
ANR	3160475	MemberAccess	setA_2 . getElem		3160339	0					
ANR	3160476	Identifier	setA_2		3160339	0					
ANR	3160477	Identifier	getElem		3160339	1					
ANR	3160478	ArgumentList	k		3160339	1					
ANR	3160479	Argument	k		3160339	0					
ANR	3160480	Identifier	k		3160339	0					
ANR	3160481	Identifier	color		3160339	1					
ANR	3160482	ExpressionStatement	A_NotIn_B = true	812:2:23777:23793	3160339	1	True				
ANR	3160483	AssignmentExpression	A_NotIn_B = true		3160339	0		=			
ANR	3160484	Identifier	A_NotIn_B		3160339	0					
ANR	3160485	Identifier	true		3160339	1					
ANR	3160486	ExpressionStatement		813:2:23804:23804	3160339	7	True				
ANR	3160487	ReturnStatement	return ! A_NotIn_B ;	814:1:23807:23825	3160339	8	True				
ANR	3160488	UnaryOperationExpression	! A_NotIn_B		3160339	0					
ANR	3160489	UnaryOperator	!		3160339	0					
ANR	3160490	Identifier	A_NotIn_B		3160339	1					
ANR	3160491	ReturnType	bool		3160339	1					
ANR	3160492	Identifier	Superdag :: testAincludedInB		3160339	2					
ANR	3160493	ParameterList	"const ResizableArray < int > & setA_1 , const ResizableArray < int > & setA_2 , const ResizableArray < int > & setB_1 , const ResizableArray < int > & setB_2 , int * colorMem , int color"		3160339	3					
ANR	3160494	Parameter	const ResizableArray < int > & setA_1	792:33:23110:23142	3160339	0	True				
ANR	3160495	ParameterType	const ResizableArray < int > &		3160339	0					
ANR	3160496	Identifier	setA_1		3160339	1					
ANR	3160497	Parameter	const ResizableArray < int > & setA_2	792:68:23145:23177	3160339	1	True				
ANR	3160498	ParameterType	const ResizableArray < int > &		3160339	0					
ANR	3160499	Identifier	setA_2		3160339	1					
ANR	3160500	Parameter	const ResizableArray < int > & setB_1	793:9:23190:23222	3160339	2	True				
ANR	3160501	ParameterType	const ResizableArray < int > &		3160339	0					
ANR	3160502	Identifier	setB_1		3160339	1					
ANR	3160503	Parameter	const ResizableArray < int > & setB_2	793:44:23225:23257	3160339	3	True				
ANR	3160504	ParameterType	const ResizableArray < int > &		3160339	0					
ANR	3160505	Identifier	setB_2		3160339	1					
ANR	3160506	Parameter	int * colorMem	794:9:23270:23282	3160339	4	True				
ANR	3160507	ParameterType	int *		3160339	0					
ANR	3160508	Identifier	colorMem		3160339	1					
ANR	3160509	Parameter	int color	794:24:23285:23293	3160339	5	True				
ANR	3160510	ParameterType	int		3160339	0					
ANR	3160511	Identifier	color		3160339	1					
ANR	3160512	CFGEntryNode	ENTRY		3160339		True				
ANR	3160513	CFGExitNode	EXIT		3160339		True				
ANR	3160514	Symbol	setA_2 . getNumElem		3160339						
ANR	3160515	Symbol	* setB_2 . getElem		3160339						
ANR	3160516	Symbol	color		3160339						
ANR	3160517	Symbol	* setA_2 . getElem		3160339						
ANR	3160518	Symbol	setB_1 . getNumElem		3160339						
ANR	3160519	Symbol	setA_2		3160339						
ANR	3160520	Symbol	setB_1		3160339						
ANR	3160521	Symbol	setB_2		3160339						
ANR	3160522	Symbol	setB_2 . getNumElem		3160339						
ANR	3160523	Symbol	setB_2 . getElem		3160339						
ANR	3160524	Symbol	setA_1		3160339						
ANR	3160525	Symbol	setA_2 . getElem		3160339						
ANR	3160526	Symbol	* setB_1 . getElem		3160339						
ANR	3160527	Symbol	false		3160339						
ANR	3160528	Symbol	setA_1 . getElem		3160339						
ANR	3160529	Symbol	setB_1 . getElem		3160339						
ANR	3160530	Symbol	k		3160339						
ANR	3160531	Symbol	* setA_1 . getElem		3160339						
ANR	3160532	Symbol	* setB_2		3160339						
ANR	3160533	Symbol	* setB_1		3160339						
ANR	3160534	Symbol	* setA_2		3160339						
ANR	3160535	Symbol	colorMem		3160339						
ANR	3160536	Symbol	* colorMem		3160339						
ANR	3160537	Symbol	A_NotIn_B		3160339						
ANR	3160538	Symbol	true		3160339						
ANR	3160539	Symbol	* setA_1		3160339						
ANR	3160540	Symbol	setA_1 . getNumElem		3160339						
ANR	3160541	Function	Superdag :: constituentToDag	835:0:24309:25593							
ANR	3160542	FunctionDef	"Superdag :: constituentToDag (const Dag & skeleton , int * nodeSkelToNodeG , const ResizableArray < int > & constituentAncestor , const ResizableArray < int > & constituentSink)"		3160541	0					
ANR	3160543	CompoundStatement		838:0:24497:25593	3160541	0					
ANR	3160544	IdentifierDeclStatement	"int i , j ;"	839:1:24500:24507	3160541	0	True				
ANR	3160545	IdentifierDecl	i		3160541	0					
ANR	3160546	IdentifierDeclType	int		3160541	0					
ANR	3160547	Identifier	i		3160541	1					
ANR	3160548	IdentifierDecl	j		3160541	1					
ANR	3160549	IdentifierDeclType	int		3160541	0					
ANR	3160550	Identifier	j		3160541	1					
ANR	3160551	IdentifierDeclStatement	Dag * g = new Dag ( ) ;	842:1:24538:24556	3160541	1	True				
ANR	3160552	IdentifierDecl	* g = new Dag ( )		3160541	0					
ANR	3160553	IdentifierDeclType	Dag *		3160541	0					
ANR	3160554	Identifier	g		3160541	1					
ANR	3160555	AssignmentExpression	* g = new Dag ( )		3160541	2		=			
ANR	3160556	Identifier	g		3160541	0					
ANR	3160557	UnaryExpression	new Dag ( )		3160541	1					
ANR	3160558	IfStatement	if ( NULL == g )		3160541	2					
ANR	3160559	Condition	NULL == g	843:5:24563:24569	3160541	0	True				
ANR	3160560	EqualityExpression	NULL == g		3160541	0		==			
ANR	3160561	Identifier	NULL		3160541	0					
ANR	3160562	Identifier	g		3160541	1					
ANR	3160563	ThrowStatement	"throw ""Superdag::constituentToDag, g is NULL"" ;"	844:2:24575:24620	3160541	1	True				
ANR	3160564	PrimaryExpression	"""Superdag::constituentToDag, g is NULL"""		3160541	0					
ANR	3160565	IdentifierDeclStatement	int numNodes = constituentAncestor . getNumElem ( ) + constituentSink . getNumElem ( ) ;	847:1:24659:24737	3160541	3	True				
ANR	3160566	IdentifierDecl	numNodes = constituentAncestor . getNumElem ( ) + constituentSink . getNumElem ( )		3160541	0					
ANR	3160567	IdentifierDeclType	int		3160541	0					
ANR	3160568	Identifier	numNodes		3160541	1					
ANR	3160569	AssignmentExpression	numNodes = constituentAncestor . getNumElem ( ) + constituentSink . getNumElem ( )		3160541	2		=			
ANR	3160570	Identifier	numNodes		3160541	0					
ANR	3160571	AdditiveExpression	constituentAncestor . getNumElem ( ) + constituentSink . getNumElem ( )		3160541	1		+			
ANR	3160572	CallExpression	constituentAncestor . getNumElem ( )		3160541	0					
ANR	3160573	Callee	constituentAncestor . getNumElem		3160541	0					
ANR	3160574	MemberAccess	constituentAncestor . getNumElem		3160541	0					
ANR	3160575	Identifier	constituentAncestor		3160541	0					
ANR	3160576	Identifier	getNumElem		3160541	1					
ANR	3160577	ArgumentList			3160541	1					
ANR	3160578	CallExpression	constituentSink . getNumElem ( )		3160541	1					
ANR	3160579	Callee	constituentSink . getNumElem		3160541	0					
ANR	3160580	MemberAccess	constituentSink . getNumElem		3160541	0					
ANR	3160581	Identifier	constituentSink		3160541	0					
ANR	3160582	Identifier	getNumElem		3160541	1					
ANR	3160583	ArgumentList			3160541	1					
ANR	3160584	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		3160541	4					
ANR	3160585	ForInit	i = 0 ;	848:6:24745:24748	3160541	0	True				
ANR	3160586	AssignmentExpression	i = 0		3160541	0		=			
ANR	3160587	Identifier	i		3160541	0					
ANR	3160588	PrimaryExpression	0		3160541	1					
ANR	3160589	Condition	i < numNodes	848:11:24750:24759	3160541	1	True				
ANR	3160590	RelationalExpression	i < numNodes		3160541	0		<			
ANR	3160591	Identifier	i		3160541	0					
ANR	3160592	Identifier	numNodes		3160541	1					
ANR	3160593	PostIncDecOperationExpression	i ++	848:23:24762:24764	3160541	2	True				
ANR	3160594	Identifier	i		3160541	0					
ANR	3160595	IncDec	++		3160541	1					
ANR	3160596	ExpressionStatement	g -> addNode ( )	849:2:24770:24782	3160541	3	True				
ANR	3160597	CallExpression	g -> addNode ( )		3160541	0					
ANR	3160598	Callee	g -> addNode		3160541	0					
ANR	3160599	PtrMemberAccess	g -> addNode		3160541	0					
ANR	3160600	Identifier	g		3160541	0					
ANR	3160601	Identifier	addNode		3160541	1					
ANR	3160602	ArgumentList			3160541	1					
ANR	3160603	IdentifierDeclStatement	int sequence = 0 ;	853:1:24866:24880	3160541	5	True				
ANR	3160604	IdentifierDecl	sequence = 0		3160541	0					
ANR	3160605	IdentifierDeclType	int		3160541	0					
ANR	3160606	Identifier	sequence		3160541	1					
ANR	3160607	AssignmentExpression	sequence = 0		3160541	2		=			
ANR	3160608	Identifier	sequence		3160541	0					
ANR	3160609	PrimaryExpression	0		3160541	1					
ANR	3160610	ForStatement	for ( i = 0 ; i < constituentAncestor . getNumElem ( ) ; i ++ )		3160541	6					
ANR	3160611	ForInit	i = 0 ;	854:6:24888:24891	3160541	0	True				
ANR	3160612	AssignmentExpression	i = 0		3160541	0		=			
ANR	3160613	Identifier	i		3160541	0					
ANR	3160614	PrimaryExpression	0		3160541	1					
ANR	3160615	Condition	i < constituentAncestor . getNumElem ( )	854:11:24893:24926	3160541	1	True				
ANR	3160616	RelationalExpression	i < constituentAncestor . getNumElem ( )		3160541	0		<			
ANR	3160617	Identifier	i		3160541	0					
ANR	3160618	CallExpression	constituentAncestor . getNumElem ( )		3160541	1					
ANR	3160619	Callee	constituentAncestor . getNumElem		3160541	0					
ANR	3160620	MemberAccess	constituentAncestor . getNumElem		3160541	0					
ANR	3160621	Identifier	constituentAncestor		3160541	0					
ANR	3160622	Identifier	getNumElem		3160541	1					
ANR	3160623	ArgumentList			3160541	1					
ANR	3160624	PostIncDecOperationExpression	i ++	854:47:24929:24931	3160541	2	True				
ANR	3160625	Identifier	i		3160541	0					
ANR	3160626	IncDec	++		3160541	1					
ANR	3160627	CompoundStatement		18:2:441:479	3160541	3					
ANR	3160628	IdentifierDeclStatement	int u = constituentAncestor . getElem ( i ) ;	855:2:24939:24977	3160541	0	True				
ANR	3160629	IdentifierDecl	u = constituentAncestor . getElem ( i )		3160541	0					
ANR	3160630	IdentifierDeclType	int		3160541	0					
ANR	3160631	Identifier	u		3160541	1					
ANR	3160632	AssignmentExpression	u = constituentAncestor . getElem ( i )		3160541	2		=			
ANR	3160633	Identifier	u		3160541	0					
ANR	3160634	CallExpression	constituentAncestor . getElem ( i )		3160541	1					
ANR	3160635	Callee	constituentAncestor . getElem		3160541	0					
ANR	3160636	MemberAccess	constituentAncestor . getElem		3160541	0					
ANR	3160637	Identifier	constituentAncestor		3160541	0					
ANR	3160638	Identifier	getElem		3160541	1					
ANR	3160639	ArgumentList	i		3160541	1					
ANR	3160640	Argument	i		3160541	0					
ANR	3160641	Identifier	i		3160541	0					
ANR	3160642	ExpressionStatement	nodeSkelToNodeG [ u ] = sequence	856:2:24981:25010	3160541	1	True				
ANR	3160643	AssignmentExpression	nodeSkelToNodeG [ u ] = sequence		3160541	0		=			
ANR	3160644	ArrayIndexing	nodeSkelToNodeG [ u ]		3160541	0					
ANR	3160645	Identifier	nodeSkelToNodeG		3160541	0					
ANR	3160646	Identifier	u		3160541	1					
ANR	3160647	Identifier	sequence		3160541	1					
ANR	3160648	ExpressionStatement	"g -> setLabelInt ( sequence , u )"	857:2:25014:25040	3160541	2	True				
ANR	3160649	CallExpression	"g -> setLabelInt ( sequence , u )"		3160541	0					
ANR	3160650	Callee	g -> setLabelInt		3160541	0					
ANR	3160651	PtrMemberAccess	g -> setLabelInt		3160541	0					
ANR	3160652	Identifier	g		3160541	0					
ANR	3160653	Identifier	setLabelInt		3160541	1					
ANR	3160654	ArgumentList	sequence		3160541	1					
ANR	3160655	Argument	sequence		3160541	0					
ANR	3160656	Identifier	sequence		3160541	0					
ANR	3160657	Argument	u		3160541	1					
ANR	3160658	Identifier	u		3160541	0					
ANR	3160659	ExpressionStatement	sequence ++	858:2:25044:25054	3160541	3	True				
ANR	3160660	PostIncDecOperationExpression	sequence ++		3160541	0					
ANR	3160661	Identifier	sequence		3160541	0					
ANR	3160662	IncDec	++		3160541	1					
ANR	3160663	ExpressionStatement		859:2:25058:25058	3160541	7	True				
ANR	3160664	ForStatement	for ( i = 0 ; i < constituentSink . getNumElem ( ) ; i ++ )		3160541	8					
ANR	3160665	ForInit	i = 0 ;	860:6:25066:25069	3160541	0	True				
ANR	3160666	AssignmentExpression	i = 0		3160541	0		=			
ANR	3160667	Identifier	i		3160541	0					
ANR	3160668	PrimaryExpression	0		3160541	1					
ANR	3160669	Condition	i < constituentSink . getNumElem ( )	860:11:25071:25100	3160541	1	True				
ANR	3160670	RelationalExpression	i < constituentSink . getNumElem ( )		3160541	0		<			
ANR	3160671	Identifier	i		3160541	0					
ANR	3160672	CallExpression	constituentSink . getNumElem ( )		3160541	1					
ANR	3160673	Callee	constituentSink . getNumElem		3160541	0					
ANR	3160674	MemberAccess	constituentSink . getNumElem		3160541	0					
ANR	3160675	Identifier	constituentSink		3160541	0					
ANR	3160676	Identifier	getNumElem		3160541	1					
ANR	3160677	ArgumentList			3160541	1					
ANR	3160678	PostIncDecOperationExpression	i ++	860:43:25103:25105	3160541	2	True				
ANR	3160679	Identifier	i		3160541	0					
ANR	3160680	IncDec	++		3160541	1					
ANR	3160681	CompoundStatement		24:2:615:649	3160541	3					
ANR	3160682	IdentifierDeclStatement	int u = constituentSink . getElem ( i ) ;	861:2:25113:25147	3160541	0	True				
ANR	3160683	IdentifierDecl	u = constituentSink . getElem ( i )		3160541	0					
ANR	3160684	IdentifierDeclType	int		3160541	0					
ANR	3160685	Identifier	u		3160541	1					
ANR	3160686	AssignmentExpression	u = constituentSink . getElem ( i )		3160541	2		=			
ANR	3160687	Identifier	u		3160541	0					
ANR	3160688	CallExpression	constituentSink . getElem ( i )		3160541	1					
ANR	3160689	Callee	constituentSink . getElem		3160541	0					
ANR	3160690	MemberAccess	constituentSink . getElem		3160541	0					
ANR	3160691	Identifier	constituentSink		3160541	0					
ANR	3160692	Identifier	getElem		3160541	1					
ANR	3160693	ArgumentList	i		3160541	1					
ANR	3160694	Argument	i		3160541	0					
ANR	3160695	Identifier	i		3160541	0					
ANR	3160696	ExpressionStatement	nodeSkelToNodeG [ u ] = sequence	863:2:25201:25230	3160541	1	True				
ANR	3160697	AssignmentExpression	nodeSkelToNodeG [ u ] = sequence		3160541	0		=			
ANR	3160698	ArrayIndexing	nodeSkelToNodeG [ u ]		3160541	0					
ANR	3160699	Identifier	nodeSkelToNodeG		3160541	0					
ANR	3160700	Identifier	u		3160541	1					
ANR	3160701	Identifier	sequence		3160541	1					
ANR	3160702	ExpressionStatement	"g -> setLabelInt ( sequence , u )"	864:2:25234:25260	3160541	2	True				
ANR	3160703	CallExpression	"g -> setLabelInt ( sequence , u )"		3160541	0					
ANR	3160704	Callee	g -> setLabelInt		3160541	0					
ANR	3160705	PtrMemberAccess	g -> setLabelInt		3160541	0					
ANR	3160706	Identifier	g		3160541	0					
ANR	3160707	Identifier	setLabelInt		3160541	1					
ANR	3160708	ArgumentList	sequence		3160541	1					
ANR	3160709	Argument	sequence		3160541	0					
ANR	3160710	Identifier	sequence		3160541	0					
ANR	3160711	Argument	u		3160541	1					
ANR	3160712	Identifier	u		3160541	0					
ANR	3160713	ExpressionStatement	sequence ++	865:2:25264:25274	3160541	3	True				
ANR	3160714	PostIncDecOperationExpression	sequence ++		3160541	0					
ANR	3160715	Identifier	sequence		3160541	0					
ANR	3160716	IncDec	++		3160541	1					
ANR	3160717	ExpressionStatement		866:2:25278:25278	3160541	9	True				
ANR	3160718	ForStatement	for ( i = 0 ; i < constituentAncestor . getNumElem ( ) ; i ++ )		3160541	10					
ANR	3160719	ForInit	i = 0 ;	869:6:25305:25308	3160541	0	True				
ANR	3160720	AssignmentExpression	i = 0		3160541	0		=			
ANR	3160721	Identifier	i		3160541	0					
ANR	3160722	PrimaryExpression	0		3160541	1					
ANR	3160723	Condition	i < constituentAncestor . getNumElem ( )	869:11:25310:25343	3160541	1	True				
ANR	3160724	RelationalExpression	i < constituentAncestor . getNumElem ( )		3160541	0		<			
ANR	3160725	Identifier	i		3160541	0					
ANR	3160726	CallExpression	constituentAncestor . getNumElem ( )		3160541	1					
ANR	3160727	Callee	constituentAncestor . getNumElem		3160541	0					
ANR	3160728	MemberAccess	constituentAncestor . getNumElem		3160541	0					
ANR	3160729	Identifier	constituentAncestor		3160541	0					
ANR	3160730	Identifier	getNumElem		3160541	1					
ANR	3160731	ArgumentList			3160541	1					
ANR	3160732	PostIncDecOperationExpression	i ++	869:48:25347:25349	3160541	2	True				
ANR	3160733	Identifier	i		3160541	0					
ANR	3160734	IncDec	++		3160541	1					
ANR	3160735	CompoundStatement		33:2:859:897	3160541	3					
ANR	3160736	IdentifierDeclStatement	int u = constituentAncestor . getElem ( i ) ;	870:2:25357:25395	3160541	0	True				
ANR	3160737	IdentifierDecl	u = constituentAncestor . getElem ( i )		3160541	0					
ANR	3160738	IdentifierDeclType	int		3160541	0					
ANR	3160739	Identifier	u		3160541	1					
ANR	3160740	AssignmentExpression	u = constituentAncestor . getElem ( i )		3160541	2		=			
ANR	3160741	Identifier	u		3160541	0					
ANR	3160742	CallExpression	constituentAncestor . getElem ( i )		3160541	1					
ANR	3160743	Callee	constituentAncestor . getElem		3160541	0					
ANR	3160744	MemberAccess	constituentAncestor . getElem		3160541	0					
ANR	3160745	Identifier	constituentAncestor		3160541	0					
ANR	3160746	Identifier	getElem		3160541	1					
ANR	3160747	ArgumentList	i		3160541	1					
ANR	3160748	Argument	i		3160541	0					
ANR	3160749	Identifier	i		3160541	0					
ANR	3160750	ForStatement	for ( j = 0 ; j < skeleton . getNumArcs ( u ) ; j ++ )		3160541	1					
ANR	3160751	ForInit	j = 0 ;	872:7:25444:25447	3160541	0	True				
ANR	3160752	AssignmentExpression	j = 0		3160541	0		=			
ANR	3160753	Identifier	j		3160541	0					
ANR	3160754	PrimaryExpression	0		3160541	1					
ANR	3160755	Condition	j < skeleton . getNumArcs ( u )	872:12:25449:25472	3160541	1	True				
ANR	3160756	RelationalExpression	j < skeleton . getNumArcs ( u )		3160541	0		<			
ANR	3160757	Identifier	j		3160541	0					
ANR	3160758	CallExpression	skeleton . getNumArcs ( u )		3160541	1					
ANR	3160759	Callee	skeleton . getNumArcs		3160541	0					
ANR	3160760	MemberAccess	skeleton . getNumArcs		3160541	0					
ANR	3160761	Identifier	skeleton		3160541	0					
ANR	3160762	Identifier	getNumArcs		3160541	1					
ANR	3160763	ArgumentList	u		3160541	1					
ANR	3160764	Argument	u		3160541	0					
ANR	3160765	Identifier	u		3160541	0					
ANR	3160766	PostIncDecOperationExpression	j ++	872:38:25475:25477	3160541	2	True				
ANR	3160767	Identifier	j		3160541	0					
ANR	3160768	IncDec	++		3160541	1					
ANR	3160769	CompoundStatement		36:3:988:1016	3160541	3					
ANR	3160770	IdentifierDeclStatement	"int v = skeleton . getArc ( u , j ) ;"	873:3:25486:25514	3160541	0	True				
ANR	3160771	IdentifierDecl	"v = skeleton . getArc ( u , j )"		3160541	0					
ANR	3160772	IdentifierDeclType	int		3160541	0					
ANR	3160773	Identifier	v		3160541	1					
ANR	3160774	AssignmentExpression	"v = skeleton . getArc ( u , j )"		3160541	2		=			
ANR	3160775	Identifier	v		3160541	0					
ANR	3160776	CallExpression	"skeleton . getArc ( u , j )"		3160541	1					
ANR	3160777	Callee	skeleton . getArc		3160541	0					
ANR	3160778	MemberAccess	skeleton . getArc		3160541	0					
ANR	3160779	Identifier	skeleton		3160541	0					
ANR	3160780	Identifier	getArc		3160541	1					
ANR	3160781	ArgumentList	u		3160541	1					
ANR	3160782	Argument	u		3160541	0					
ANR	3160783	Identifier	u		3160541	0					
ANR	3160784	Argument	j		3160541	1					
ANR	3160785	Identifier	j		3160541	0					
ANR	3160786	ExpressionStatement	"g -> addArc ( nodeSkelToNodeG [ u ] , nodeSkelToNodeG [ v ] )"	874:3:25519:25570	3160541	1	True				
ANR	3160787	CallExpression	"g -> addArc ( nodeSkelToNodeG [ u ] , nodeSkelToNodeG [ v ] )"		3160541	0					
ANR	3160788	Callee	g -> addArc		3160541	0					
ANR	3160789	PtrMemberAccess	g -> addArc		3160541	0					
ANR	3160790	Identifier	g		3160541	0					
ANR	3160791	Identifier	addArc		3160541	1					
ANR	3160792	ArgumentList	nodeSkelToNodeG [ u ]		3160541	1					
ANR	3160793	Argument	nodeSkelToNodeG [ u ]		3160541	0					
ANR	3160794	ArrayIndexing	nodeSkelToNodeG [ u ]		3160541	0					
ANR	3160795	Identifier	nodeSkelToNodeG		3160541	0					
ANR	3160796	Identifier	u		3160541	1					
ANR	3160797	Argument	nodeSkelToNodeG [ v ]		3160541	1					
ANR	3160798	ArrayIndexing	nodeSkelToNodeG [ v ]		3160541	0					
ANR	3160799	Identifier	nodeSkelToNodeG		3160541	0					
ANR	3160800	Identifier	v		3160541	1					
ANR	3160801	ExpressionStatement		875:3:25575:25575	3160541	2	True				
ANR	3160802	ExpressionStatement		876:2:25579:25579	3160541	11	True				
ANR	3160803	ReturnStatement	return g ;	878:1:25583:25591	3160541	12	True				
ANR	3160804	Identifier	g		3160541	0					
ANR	3160805	ReturnType	Dag *		3160541	1					
ANR	3160806	Identifier	Superdag :: constituentToDag		3160541	2					
ANR	3160807	ParameterList	"const Dag & skeleton , int * nodeSkelToNodeG , const ResizableArray < int > & constituentAncestor , const ResizableArray < int > & constituentSink"		3160541	3					
ANR	3160808	Parameter	const Dag & skeleton	835:33:24342:24360	3160541	0	True				
ANR	3160809	ParameterType	const Dag &		3160541	0					
ANR	3160810	Identifier	skeleton		3160541	1					
ANR	3160811	Parameter	int * nodeSkelToNodeG	835:54:24363:24382	3160541	1	True				
ANR	3160812	ParameterType	int *		3160541	0					
ANR	3160813	Identifier	nodeSkelToNodeG		3160541	1					
ANR	3160814	Parameter	const ResizableArray < int > & constituentAncestor	836:9:24394:24439	3160541	2	True				
ANR	3160815	ParameterType	const ResizableArray < int > &		3160541	0					
ANR	3160816	Identifier	constituentAncestor		3160541	1					
ANR	3160817	Parameter	const ResizableArray < int > & constituentSink	837:9:24452:24493	3160541	3	True				
ANR	3160818	ParameterType	const ResizableArray < int > &		3160541	0					
ANR	3160819	Identifier	constituentSink		3160541	1					
ANR	3160820	CFGEntryNode	ENTRY		3160541		True				
ANR	3160821	CFGExitNode	EXIT		3160541		True				
ANR	3160822	CFGExceptionNode	EXCEPTION		3160541		True				
ANR	3160823	Symbol	* v		3160541						
ANR	3160824	Symbol	constituentAncestor		3160541						
ANR	3160825	Symbol	NULL		3160541						
ANR	3160826	Symbol	skeleton . getArc		3160541						
ANR	3160827	Symbol	constituentAncestor . getNumElem		3160541						
ANR	3160828	Symbol	g		3160541						
ANR	3160829	Symbol	constituentSink		3160541						
ANR	3160830	Symbol	i		3160541						
ANR	3160831	Symbol	j		3160541						
ANR	3160832	Symbol	nodeSkelToNodeG		3160541						
ANR	3160833	Symbol	* nodeSkelToNodeG		3160541						
ANR	3160834	Symbol	skeleton		3160541						
ANR	3160835	Symbol	sequence		3160541						
ANR	3160836	Symbol	numNodes		3160541						
ANR	3160837	Symbol	constituentSink . getNumElem		3160541						
ANR	3160838	Symbol	u		3160541						
ANR	3160839	Symbol	constituentSink . getElem		3160541						
ANR	3160840	Symbol	v		3160541						
ANR	3160841	Symbol	skeleton . getNumArcs		3160541						
ANR	3160842	Symbol	constituentAncestor . getElem		3160541						
ANR	3160843	Symbol	* u		3160541						
ANR	3160844	Function	Superdag :: saveSuperdagAsDot	895:0:25818:26117							
ANR	3160845	FunctionDef	Superdag :: saveSuperdagAsDot (const char * fileName)		3160844	0					
ANR	3160846	CompoundStatement		896:0:25881:26117	3160844	0					
ANR	3160847	IfStatement	if ( NULL == fileName )		3160844	0					
ANR	3160848	Condition	NULL == fileName	897:5:25888:25901	3160844	0	True				
ANR	3160849	EqualityExpression	NULL == fileName		3160844	0		==			
ANR	3160850	Identifier	NULL		3160844	0					
ANR	3160851	Identifier	fileName		3160844	1					
ANR	3160852	ThrowStatement	"throw ""Superdag::saveSuperdagAsDot, fileName is NULL"" ;"	898:2:25907:25960	3160844	1	True				
ANR	3160853	PrimaryExpression	"""Superdag::saveSuperdagAsDot, fileName is NULL"""		3160844	0					
ANR	3160854	IdentifierDeclStatement	FILE * stream ;	900:1:25964:25976	3160844	1	True				
ANR	3160855	IdentifierDecl	* stream		3160844	0					
ANR	3160856	IdentifierDeclType	FILE *		3160844	0					
ANR	3160857	Identifier	stream		3160844	1					
ANR	3160858	ExpressionStatement	"stream = fopen ( fileName , ""wt"" )"	901:1:25979:26008	3160844	2	True				
ANR	3160859	AssignmentExpression	"stream = fopen ( fileName , ""wt"" )"		3160844	0		=			
ANR	3160860	Identifier	stream		3160844	0					
ANR	3160861	CallExpression	"fopen ( fileName , ""wt"" )"		3160844	1					
ANR	3160862	Callee	fopen		3160844	0					
ANR	3160863	Identifier	fopen		3160844	0					
ANR	3160864	ArgumentList	fileName		3160844	1					
ANR	3160865	Argument	fileName		3160844	0					
ANR	3160866	Identifier	fileName		3160844	0					
ANR	3160867	Argument	"""wt"""		3160844	1					
ANR	3160868	PrimaryExpression	"""wt"""		3160844	0					
ANR	3160869	IfStatement	if ( NULL == stream )		3160844	3					
ANR	3160870	Condition	NULL == stream	902:5:26015:26026	3160844	0	True				
ANR	3160871	EqualityExpression	NULL == stream		3160844	0		==			
ANR	3160872	Identifier	NULL		3160844	0					
ANR	3160873	Identifier	stream		3160844	1					
ANR	3160874	ThrowStatement	"throw ""Superdag::saveSuperdagAsDot, stream is NULL, 1"" ;"	903:2:26032:26086	3160844	1	True				
ANR	3160875	PrimaryExpression	"""Superdag::saveSuperdagAsDot, stream is NULL, 1"""		3160844	0					
ANR	3160876	ExpressionStatement	saveSuperdagAsDot ( stream )	905:1:26090:26115	3160844	4	True				
ANR	3160877	CallExpression	saveSuperdagAsDot ( stream )		3160844	0					
ANR	3160878	Callee	saveSuperdagAsDot		3160844	0					
ANR	3160879	Identifier	saveSuperdagAsDot		3160844	0					
ANR	3160880	ArgumentList	stream		3160844	1					
ANR	3160881	Argument	stream		3160844	0					
ANR	3160882	Identifier	stream		3160844	0					
ANR	3160883	ReturnType	void		3160844	1					
ANR	3160884	Identifier	Superdag :: saveSuperdagAsDot		3160844	2					
ANR	3160885	ParameterList	const char * fileName		3160844	3					
ANR	3160886	Parameter	const char * fileName	895:34:25852:25871	3160844	0	True				
ANR	3160887	ParameterType	const char *		3160844	0					
ANR	3160888	Identifier	fileName		3160844	1					
ANR	3160889	CFGEntryNode	ENTRY		3160844		True				
ANR	3160890	CFGExitNode	EXIT		3160844		True				
ANR	3160891	CFGExceptionNode	EXCEPTION		3160844		True				
ANR	3160892	CFGExceptionNode	EXCEPTION		3160844		True				
ANR	3160893	CFGExceptionNode	EXCEPTION		3160844		True				
ANR	3160894	Symbol	fopen		3160844						
ANR	3160895	Symbol	fileName		3160844						
ANR	3160896	Symbol	NULL		3160844						
ANR	3160897	Symbol	stream		3160844						
ANR	3160898	Function	Superdag :: saveSuperdagAsDot	925:0:26486:27164							
ANR	3160899	FunctionDef	Superdag :: saveSuperdagAsDot (FILE * stream)		3160898	0					
ANR	3160900	CompoundStatement		926:0:26541:27164	3160898	0					
ANR	3160901	IfStatement	if ( NULL == stream )		3160898	0					
ANR	3160902	Condition	NULL == stream	927:5:26548:26559	3160898	0	True				
ANR	3160903	EqualityExpression	NULL == stream		3160898	0		==			
ANR	3160904	Identifier	NULL		3160898	0					
ANR	3160905	Identifier	stream		3160898	1					
ANR	3160906	ThrowStatement	"throw ""Superdag::saveSuperdagAsDot, stream is NULL, 2"" ;"	928:2:26565:26619	3160898	1	True				
ANR	3160907	PrimaryExpression	"""Superdag::saveSuperdagAsDot, stream is NULL, 2"""		3160898	0					
ANR	3160908	ExpressionStatement	"fprintf ( stream , ""digraph SuperDag {\\n"" )"	930:1:26623:26663	3160898	1	True				
ANR	3160909	CallExpression	"fprintf ( stream , ""digraph SuperDag {\\n"" )"		3160898	0					
ANR	3160910	Callee	fprintf		3160898	0					
ANR	3160911	Identifier	fprintf		3160898	0					
ANR	3160912	ArgumentList	stream		3160898	1					
ANR	3160913	Argument	stream		3160898	0					
ANR	3160914	Identifier	stream		3160898	0					
ANR	3160915	Argument	"""digraph SuperDag {\\n"""		3160898	1					
ANR	3160916	PrimaryExpression	"""digraph SuperDag {\\n"""		3160898	0					
ANR	3160917	ExpressionStatement	"fprintf ( stream , ""rankdir=BT;\\n"" )"	931:1:26666:26699	3160898	2	True				
ANR	3160918	CallExpression	"fprintf ( stream , ""rankdir=BT;\\n"" )"		3160898	0					
ANR	3160919	Callee	fprintf		3160898	0					
ANR	3160920	Identifier	fprintf		3160898	0					
ANR	3160921	ArgumentList	stream		3160898	1					
ANR	3160922	Argument	stream		3160898	0					
ANR	3160923	Identifier	stream		3160898	0					
ANR	3160924	Argument	"""rankdir=BT;\\n"""		3160898	1					
ANR	3160925	PrimaryExpression	"""rankdir=BT;\\n"""		3160898	0					
ANR	3160926	ExpressionStatement	"fprintf ( stream , ""size=\\""7.5,10\\"";\\n"" )"	932:1:26702:26740	3160898	3	True				
ANR	3160927	CallExpression	"fprintf ( stream , ""size=\\""7.5,10\\"";\\n"" )"		3160898	0					
ANR	3160928	Callee	fprintf		3160898	0					
ANR	3160929	Identifier	fprintf		3160898	0					
ANR	3160930	ArgumentList	stream		3160898	1					
ANR	3160931	Argument	stream		3160898	0					
ANR	3160932	Identifier	stream		3160898	0					
ANR	3160933	Argument	"""size=\\""7.5,10\\"";\\n"""		3160898	1					
ANR	3160934	PrimaryExpression	"""size=\\""7.5,10\\"";\\n"""		3160898	0					
ANR	3160935	ExpressionStatement	"fprintf ( stream , ""compound=true;\\n"" )"	933:1:26743:26779	3160898	4	True				
ANR	3160936	CallExpression	"fprintf ( stream , ""compound=true;\\n"" )"		3160898	0					
ANR	3160937	Callee	fprintf		3160898	0					
ANR	3160938	Identifier	fprintf		3160898	0					
ANR	3160939	ArgumentList	stream		3160898	1					
ANR	3160940	Argument	stream		3160898	0					
ANR	3160941	Identifier	stream		3160898	0					
ANR	3160942	Argument	"""compound=true;\\n"""		3160898	1					
ANR	3160943	PrimaryExpression	"""compound=true;\\n"""		3160898	0					
ANR	3160944	ExpressionStatement	"fprintf ( stream , ""\\n\\n"" )"	934:1:26782:26807	3160898	5	True				
ANR	3160945	CallExpression	"fprintf ( stream , ""\\n\\n"" )"		3160898	0					
ANR	3160946	Callee	fprintf		3160898	0					
ANR	3160947	Identifier	fprintf		3160898	0					
ANR	3160948	ArgumentList	stream		3160898	1					
ANR	3160949	Argument	stream		3160898	0					
ANR	3160950	Identifier	stream		3160898	0					
ANR	3160951	Argument	"""\\n\\n"""		3160898	1					
ANR	3160952	PrimaryExpression	"""\\n\\n"""		3160898	0					
ANR	3160953	ForStatement	for ( int i = 0 ; i < getNumNodes ( ) ; i ++ )		3160898	6					
ANR	3160954	ForInit	int i = 0 ;	937:6:26839:26846	3160898	0	True				
ANR	3160955	IdentifierDeclStatement	int i = 0 ;		3160898	0					
ANR	3160956	IdentifierDecl	i = 0		3160898	0					
ANR	3160957	IdentifierDeclType	int		3160898	0					
ANR	3160958	Identifier	i		3160898	1					
ANR	3160959	AssignmentExpression	i = 0		3160898	2		=			
ANR	3160960	Identifier	i		3160898	0					
ANR	3160961	PrimaryExpression	0		3160898	1					
ANR	3160962	Condition	i < getNumNodes ( )	937:15:26848:26862	3160898	1	True				
ANR	3160963	RelationalExpression	i < getNumNodes ( )		3160898	0		<			
ANR	3160964	Identifier	i		3160898	0					
ANR	3160965	CallExpression	getNumNodes ( )		3160898	1					
ANR	3160966	Callee	getNumNodes		3160898	0					
ANR	3160967	Identifier	getNumNodes		3160898	0					
ANR	3160968	ArgumentList			3160898	1					
ANR	3160969	PostIncDecOperationExpression	i ++	937:32:26865:26867	3160898	2	True				
ANR	3160970	Identifier	i		3160898	0					
ANR	3160971	IncDec	++		3160898	1					
ANR	3160972	ExpressionStatement	"saveConstituent ( stream , i )"	938:2:26874:26899	3160898	3	True				
ANR	3160973	CallExpression	"saveConstituent ( stream , i )"		3160898	0					
ANR	3160974	Callee	saveConstituent		3160898	0					
ANR	3160975	Identifier	saveConstituent		3160898	0					
ANR	3160976	ArgumentList	stream		3160898	1					
ANR	3160977	Argument	stream		3160898	0					
ANR	3160978	Identifier	stream		3160898	0					
ANR	3160979	Argument	i		3160898	1					
ANR	3160980	Identifier	i		3160898	0					
ANR	3160981	ForStatement	for ( int i = 0 ; i < getNumNodes ( ) ; i ++ )		3160898	7					
ANR	3160982	ForInit	int i = 0 ;	941:6:26943:26950	3160898	0	True				
ANR	3160983	IdentifierDeclStatement	int i = 0 ;		3160898	0					
ANR	3160984	IdentifierDecl	i = 0		3160898	0					
ANR	3160985	IdentifierDeclType	int		3160898	0					
ANR	3160986	Identifier	i		3160898	1					
ANR	3160987	AssignmentExpression	i = 0		3160898	2		=			
ANR	3160988	Identifier	i		3160898	0					
ANR	3160989	PrimaryExpression	0		3160898	1					
ANR	3160990	Condition	i < getNumNodes ( )	941:15:26952:26966	3160898	1	True				
ANR	3160991	RelationalExpression	i < getNumNodes ( )		3160898	0		<			
ANR	3160992	Identifier	i		3160898	0					
ANR	3160993	CallExpression	getNumNodes ( )		3160898	1					
ANR	3160994	Callee	getNumNodes		3160898	0					
ANR	3160995	Identifier	getNumNodes		3160898	0					
ANR	3160996	ArgumentList			3160898	1					
ANR	3160997	PostIncDecOperationExpression	i ++	941:32:26969:26971	3160898	2	True				
ANR	3160998	Identifier	i		3160898	0					
ANR	3160999	IncDec	++		3160898	1					
ANR	3161000	CompoundStatement		17:2:437:464	3160898	3					
ANR	3161001	IdentifierDeclStatement	int numArcs = getNumArcs ( i ) ;	942:2:26979:27006	3160898	0	True				
ANR	3161002	IdentifierDecl	numArcs = getNumArcs ( i )		3160898	0					
ANR	3161003	IdentifierDeclType	int		3160898	0					
ANR	3161004	Identifier	numArcs		3160898	1					
ANR	3161005	AssignmentExpression	numArcs = getNumArcs ( i )		3160898	2		=			
ANR	3161006	Identifier	numArcs		3160898	0					
ANR	3161007	CallExpression	getNumArcs ( i )		3160898	1					
ANR	3161008	Callee	getNumArcs		3160898	0					
ANR	3161009	Identifier	getNumArcs		3160898	0					
ANR	3161010	ArgumentList	i		3160898	1					
ANR	3161011	Argument	i		3160898	0					
ANR	3161012	Identifier	i		3160898	0					
ANR	3161013	ForStatement	for ( int j = 0 ; j < numArcs ; j ++ )		3160898	1					
ANR	3161014	ForInit	int j = 0 ;	943:7:27015:27022	3160898	0	True				
ANR	3161015	IdentifierDeclStatement	int j = 0 ;		3160898	0					
ANR	3161016	IdentifierDecl	j = 0		3160898	0					
ANR	3161017	IdentifierDeclType	int		3160898	0					
ANR	3161018	Identifier	j		3160898	1					
ANR	3161019	AssignmentExpression	j = 0		3160898	2		=			
ANR	3161020	Identifier	j		3160898	0					
ANR	3161021	PrimaryExpression	0		3160898	1					
ANR	3161022	Condition	j < numArcs	943:16:27024:27032	3160898	1	True				
ANR	3161023	RelationalExpression	j < numArcs		3160898	0		<			
ANR	3161024	Identifier	j		3160898	0					
ANR	3161025	Identifier	numArcs		3160898	1					
ANR	3161026	PostIncDecOperationExpression	j ++	943:27:27035:27037	3160898	2	True				
ANR	3161027	Identifier	j		3160898	0					
ANR	3161028	IncDec	++		3160898	1					
ANR	3161029	ExpressionStatement	"saveArcs ( stream , i , getArc ( i , j ) )"	944:12:27053:27084	3160898	3	True				
ANR	3161030	CallExpression	"saveArcs ( stream , i , getArc ( i , j ) )"		3160898	0					
ANR	3161031	Callee	saveArcs		3160898	0					
ANR	3161032	Identifier	saveArcs		3160898	0					
ANR	3161033	ArgumentList	stream		3160898	1					
ANR	3161034	Argument	stream		3160898	0					
ANR	3161035	Identifier	stream		3160898	0					
ANR	3161036	Argument	i		3160898	1					
ANR	3161037	Identifier	i		3160898	0					
ANR	3161038	Argument	"getArc ( i , j )"		3160898	2					
ANR	3161039	CallExpression	"getArc ( i , j )"		3160898	0					
ANR	3161040	Callee	getArc		3160898	0					
ANR	3161041	Identifier	getArc		3160898	0					
ANR	3161042	ArgumentList	i		3160898	1					
ANR	3161043	Argument	i		3160898	0					
ANR	3161044	Identifier	i		3160898	0					
ANR	3161045	Argument	j		3160898	1					
ANR	3161046	Identifier	j		3160898	0					
ANR	3161047	ExpressionStatement	"fprintf ( stream , ""\\n\\n"" )"	945:2:27088:27112	3160898	2	True				
ANR	3161048	CallExpression	"fprintf ( stream , ""\\n\\n"" )"		3160898	0					
ANR	3161049	Callee	fprintf		3160898	0					
ANR	3161050	Identifier	fprintf		3160898	0					
ANR	3161051	ArgumentList	stream		3160898	1					
ANR	3161052	Argument	stream		3160898	0					
ANR	3161053	Identifier	stream		3160898	0					
ANR	3161054	Argument	"""\\n\\n"""		3160898	1					
ANR	3161055	PrimaryExpression	"""\\n\\n"""		3160898	0					
ANR	3161056	ExpressionStatement		946:2:27116:27116	3160898	8	True				
ANR	3161057	ExpressionStatement	"fprintf ( stream , ""}\\n"" )"	948:1:27120:27143	3160898	9	True				
ANR	3161058	CallExpression	"fprintf ( stream , ""}\\n"" )"		3160898	0					
ANR	3161059	Callee	fprintf		3160898	0					
ANR	3161060	Identifier	fprintf		3160898	0					
ANR	3161061	ArgumentList	stream		3160898	1					
ANR	3161062	Argument	stream		3160898	0					
ANR	3161063	Identifier	stream		3160898	0					
ANR	3161064	Argument	"""}\\n"""		3160898	1					
ANR	3161065	PrimaryExpression	"""}\\n"""		3160898	0					
ANR	3161066	ExpressionStatement	fclose ( stream )	949:1:27146:27162	3160898	10	True				
ANR	3161067	CallExpression	fclose ( stream )		3160898	0					
ANR	3161068	Callee	fclose		3160898	0					
ANR	3161069	Identifier	fclose		3160898	0					
ANR	3161070	ArgumentList	stream		3160898	1					
ANR	3161071	Argument	stream		3160898	0					
ANR	3161072	Identifier	stream		3160898	0					
ANR	3161073	ReturnType	void		3160898	1					
ANR	3161074	Identifier	Superdag :: saveSuperdagAsDot		3160898	2					
ANR	3161075	ParameterList	FILE * stream		3160898	3					
ANR	3161076	Parameter	FILE * stream	925:34:26520:26531	3160898	0	True				
ANR	3161077	ParameterType	FILE *		3160898	0					
ANR	3161078	Identifier	stream		3160898	1					
ANR	3161079	CFGEntryNode	ENTRY		3160898		True				
ANR	3161080	CFGExitNode	EXIT		3160898		True				
ANR	3161081	CFGExceptionNode	EXCEPTION		3160898		True				
ANR	3161082	Symbol	getNumArcs		3160898						
ANR	3161083	Symbol	getNumNodes		3160898						
ANR	3161084	Symbol	NULL		3160898						
ANR	3161085	Symbol	numArcs		3160898						
ANR	3161086	Symbol	getArc		3160898						
ANR	3161087	Symbol	stream		3160898						
ANR	3161088	Symbol	i		3160898						
ANR	3161089	Symbol	j		3160898						
ANR	3161090	Function	Superdag :: saveConstituent	966:0:27369:28605							
ANR	3161091	FunctionDef	"Superdag :: saveConstituent (FILE * stream , int id)"		3161090	0					
ANR	3161092	CompoundStatement		967:0:27430:28605	3161090	0					
ANR	3161093	IfStatement	if ( NULL == stream )		3161090	0					
ANR	3161094	Condition	NULL == stream	968:5:27437:27448	3161090	0	True				
ANR	3161095	EqualityExpression	NULL == stream		3161090	0		==			
ANR	3161096	Identifier	NULL		3161090	0					
ANR	3161097	Identifier	stream		3161090	1					
ANR	3161098	ThrowStatement	"throw ""Superdag::saveArcs, stream is NULL"" ;"	969:2:27454:27496	3161090	1	True				
ANR	3161099	PrimaryExpression	"""Superdag::saveArcs, stream is NULL"""		3161090	0					
ANR	3161100	IdentifierDeclStatement	Dag * g = getConstituent ( id ) ;	972:1:27528:27555	3161090	1	True				
ANR	3161101	IdentifierDecl	* g = getConstituent ( id )		3161090	0					
ANR	3161102	IdentifierDeclType	Dag *		3161090	0					
ANR	3161103	Identifier	g		3161090	1					
ANR	3161104	AssignmentExpression	* g = getConstituent ( id )		3161090	2		=			
ANR	3161105	Identifier	g		3161090	0					
ANR	3161106	CallExpression	getConstituent ( id )		3161090	1					
ANR	3161107	Callee	getConstituent		3161090	0					
ANR	3161108	Identifier	getConstituent		3161090	0					
ANR	3161109	ArgumentList	id		3161090	1					
ANR	3161110	Argument	id		3161090	0					
ANR	3161111	Identifier	id		3161090	0					
ANR	3161112	IfStatement	if ( NULL == g )		3161090	2					
ANR	3161113	Condition	NULL == g	973:5:27562:27568	3161090	0	True				
ANR	3161114	EqualityExpression	NULL == g		3161090	0		==			
ANR	3161115	Identifier	NULL		3161090	0					
ANR	3161116	Identifier	g		3161090	1					
ANR	3161117	ThrowStatement	"throw ""Superdag::saveConstituent, g is NULL"" ;"	974:2:27574:27618	3161090	1	True				
ANR	3161118	PrimaryExpression	"""Superdag::saveConstituent, g is NULL"""		3161090	0					
ANR	3161119	ExpressionStatement	"fprintf ( stream , ""subgraph cluster%d {\\n"" , id )"	976:1:27622:27667	3161090	3	True				
ANR	3161120	CallExpression	"fprintf ( stream , ""subgraph cluster%d {\\n"" , id )"		3161090	0					
ANR	3161121	Callee	fprintf		3161090	0					
ANR	3161122	Identifier	fprintf		3161090	0					
ANR	3161123	ArgumentList	stream		3161090	1					
ANR	3161124	Argument	stream		3161090	0					
ANR	3161125	Identifier	stream		3161090	0					
ANR	3161126	Argument	"""subgraph cluster%d {\\n"""		3161090	1					
ANR	3161127	PrimaryExpression	"""subgraph cluster%d {\\n"""		3161090	0					
ANR	3161128	Argument	id		3161090	2					
ANR	3161129	Identifier	id		3161090	0					
ANR	3161130	ExpressionStatement	"fprintf ( stream , ""style=filled;\\n"" )"	977:1:27670:27705	3161090	4	True				
ANR	3161131	CallExpression	"fprintf ( stream , ""style=filled;\\n"" )"		3161090	0					
ANR	3161132	Callee	fprintf		3161090	0					
ANR	3161133	Identifier	fprintf		3161090	0					
ANR	3161134	ArgumentList	stream		3161090	1					
ANR	3161135	Argument	stream		3161090	0					
ANR	3161136	Identifier	stream		3161090	0					
ANR	3161137	Argument	"""style=filled;\\n"""		3161090	1					
ANR	3161138	PrimaryExpression	"""style=filled;\\n"""		3161090	0					
ANR	3161139	SwitchStatement	switch ( getType ( id ) )		3161090	5					
ANR	3161140	Condition	getType ( id )	980:9:27767:27777	3161090	0	True				
ANR	3161141	CallExpression	getType ( id )		3161090	0					
ANR	3161142	Callee	getType		3161090	0					
ANR	3161143	Identifier	getType		3161090	0					
ANR	3161144	ArgumentList	id		3161090	1					
ANR	3161145	Argument	id		3161090	0					
ANR	3161146	Identifier	id		3161090	0					
ANR	3161147	CompoundStatement		14:23:350:350	3161090	1					
ANR	3161148	Label	case BIPARTITE :	981:2:27785:27799	3161090	0	True				
ANR	3161149	Identifier	BIPARTITE		3161090	0					
ANR	3161150	ExpressionStatement	"fprintf ( stream , ""color=lightgrey;\\n"" )"	982:3:27804:27842	3161090	1	True				
ANR	3161151	CallExpression	"fprintf ( stream , ""color=lightgrey;\\n"" )"		3161090	0					
ANR	3161152	Callee	fprintf		3161090	0					
ANR	3161153	Identifier	fprintf		3161090	0					
ANR	3161154	ArgumentList	stream		3161090	1					
ANR	3161155	Argument	stream		3161090	0					
ANR	3161156	Identifier	stream		3161090	0					
ANR	3161157	Argument	"""color=lightgrey;\\n"""		3161090	1					
ANR	3161158	PrimaryExpression	"""color=lightgrey;\\n"""		3161090	0					
ANR	3161159	BreakStatement	break ;	983:3:27847:27852	3161090	2	True				
ANR	3161160	Label	case SINGLETON :	984:2:27856:27870	3161090	3	True				
ANR	3161161	Identifier	SINGLETON		3161090	0					
ANR	3161162	ExpressionStatement	"fprintf ( stream , ""color=yellow;\\n"" )"	985:3:27875:27910	3161090	4	True				
ANR	3161163	CallExpression	"fprintf ( stream , ""color=yellow;\\n"" )"		3161090	0					
ANR	3161164	Callee	fprintf		3161090	0					
ANR	3161165	Identifier	fprintf		3161090	0					
ANR	3161166	ArgumentList	stream		3161090	1					
ANR	3161167	Argument	stream		3161090	0					
ANR	3161168	Identifier	stream		3161090	0					
ANR	3161169	Argument	"""color=yellow;\\n"""		3161090	1					
ANR	3161170	PrimaryExpression	"""color=yellow;\\n"""		3161090	0					
ANR	3161171	BreakStatement	break ;	986:3:27915:27920	3161090	5	True				
ANR	3161172	Label	case COMPLEX :	987:2:27924:27936	3161090	6	True				
ANR	3161173	Identifier	COMPLEX		3161090	0					
ANR	3161174	ExpressionStatement	"fprintf ( stream , ""color=crimson;\\n"" )"	988:3:27941:27977	3161090	7	True				
ANR	3161175	CallExpression	"fprintf ( stream , ""color=crimson;\\n"" )"		3161090	0					
ANR	3161176	Callee	fprintf		3161090	0					
ANR	3161177	Identifier	fprintf		3161090	0					
ANR	3161178	ArgumentList	stream		3161090	1					
ANR	3161179	Argument	stream		3161090	0					
ANR	3161180	Identifier	stream		3161090	0					
ANR	3161181	Argument	"""color=crimson;\\n"""		3161090	1					
ANR	3161182	PrimaryExpression	"""color=crimson;\\n"""		3161090	0					
ANR	3161183	BreakStatement	break ;	989:3:27982:27987	3161090	8	True				
ANR	3161184	ExpressionStatement		990:2:27991:27991	3161090	6	True				
ANR	3161185	ExpressionStatement	"fprintf ( stream , ""label=\\""%d\\"";\\n"" , id )"	993:1:28020:28058	3161090	7	True				
ANR	3161186	CallExpression	"fprintf ( stream , ""label=\\""%d\\"";\\n"" , id )"		3161090	0					
ANR	3161187	Callee	fprintf		3161090	0					
ANR	3161188	Identifier	fprintf		3161090	0					
ANR	3161189	ArgumentList	stream		3161090	1					
ANR	3161190	Argument	stream		3161090	0					
ANR	3161191	Identifier	stream		3161090	0					
ANR	3161192	Argument	"""label=\\""%d\\"";\\n"""		3161090	1					
ANR	3161193	PrimaryExpression	"""label=\\""%d\\"";\\n"""		3161090	0					
ANR	3161194	Argument	id		3161090	2					
ANR	3161195	Identifier	id		3161090	0					
ANR	3161196	IdentifierDeclStatement	int numNodes = g -> getNumNodes ( ) ;	996:1:28106:28137	3161090	8	True				
ANR	3161197	IdentifierDecl	numNodes = g -> getNumNodes ( )		3161090	0					
ANR	3161198	IdentifierDeclType	int		3161090	0					
ANR	3161199	Identifier	numNodes		3161090	1					
ANR	3161200	AssignmentExpression	numNodes = g -> getNumNodes ( )		3161090	2		=			
ANR	3161201	Identifier	numNodes		3161090	0					
ANR	3161202	CallExpression	g -> getNumNodes ( )		3161090	1					
ANR	3161203	Callee	g -> getNumNodes		3161090	0					
ANR	3161204	PtrMemberAccess	g -> getNumNodes		3161090	0					
ANR	3161205	Identifier	g		3161090	0					
ANR	3161206	Identifier	getNumNodes		3161090	1					
ANR	3161207	ArgumentList			3161090	1					
ANR	3161208	ForStatement	for ( int j = 0 ; j < numNodes ; j ++ )		3161090	9					
ANR	3161209	ForInit	int j = 0 ;	997:6:28145:28152	3161090	0	True				
ANR	3161210	IdentifierDeclStatement	int j = 0 ;		3161090	0					
ANR	3161211	IdentifierDecl	j = 0		3161090	0					
ANR	3161212	IdentifierDeclType	int		3161090	0					
ANR	3161213	Identifier	j		3161090	1					
ANR	3161214	AssignmentExpression	j = 0		3161090	2		=			
ANR	3161215	Identifier	j		3161090	0					
ANR	3161216	PrimaryExpression	0		3161090	1					
ANR	3161217	Condition	j < numNodes	997:15:28154:28163	3161090	1	True				
ANR	3161218	RelationalExpression	j < numNodes		3161090	0		<			
ANR	3161219	Identifier	j		3161090	0					
ANR	3161220	Identifier	numNodes		3161090	1					
ANR	3161221	PostIncDecOperationExpression	j ++	997:28:28167:28169	3161090	2	True				
ANR	3161222	Identifier	j		3161090	0					
ANR	3161223	IncDec	++		3161090	1					
ANR	3161224	CompoundStatement		32:2:746:776	3161090	3					
ANR	3161225	IdentifierDeclStatement	int numArcs = g -> getNumArcs ( j ) ;	998:2:28177:28207	3161090	0	True				
ANR	3161226	IdentifierDecl	numArcs = g -> getNumArcs ( j )		3161090	0					
ANR	3161227	IdentifierDeclType	int		3161090	0					
ANR	3161228	Identifier	numArcs		3161090	1					
ANR	3161229	AssignmentExpression	numArcs = g -> getNumArcs ( j )		3161090	2		=			
ANR	3161230	Identifier	numArcs		3161090	0					
ANR	3161231	CallExpression	g -> getNumArcs ( j )		3161090	1					
ANR	3161232	Callee	g -> getNumArcs		3161090	0					
ANR	3161233	PtrMemberAccess	g -> getNumArcs		3161090	0					
ANR	3161234	Identifier	g		3161090	0					
ANR	3161235	Identifier	getNumArcs		3161090	1					
ANR	3161236	ArgumentList	j		3161090	1					
ANR	3161237	Argument	j		3161090	0					
ANR	3161238	Identifier	j		3161090	0					
ANR	3161239	ExpressionStatement	"fprintf ( stream , ""%d.%d -> { "" , j , id )"	999:2:28211:28247	3161090	1	True				
ANR	3161240	CallExpression	"fprintf ( stream , ""%d.%d -> { "" , j , id )"		3161090	0					
ANR	3161241	Callee	fprintf		3161090	0					
ANR	3161242	Identifier	fprintf		3161090	0					
ANR	3161243	ArgumentList	stream		3161090	1					
ANR	3161244	Argument	stream		3161090	0					
ANR	3161245	Identifier	stream		3161090	0					
ANR	3161246	Argument	"""%d.%d -> { """		3161090	1					
ANR	3161247	PrimaryExpression	"""%d.%d -> { """		3161090	0					
ANR	3161248	Argument	j		3161090	2					
ANR	3161249	Identifier	j		3161090	0					
ANR	3161250	Argument	id		3161090	3					
ANR	3161251	Identifier	id		3161090	0					
ANR	3161252	ForStatement	for ( int k = 0 ; k < numArcs ; k ++ )		3161090	2					
ANR	3161253	ForInit	int k = 0 ;	1000:7:28256:28263	3161090	0	True				
ANR	3161254	IdentifierDeclStatement	int k = 0 ;		3161090	0					
ANR	3161255	IdentifierDecl	k = 0		3161090	0					
ANR	3161256	IdentifierDeclType	int		3161090	0					
ANR	3161257	Identifier	k		3161090	1					
ANR	3161258	AssignmentExpression	k = 0		3161090	2		=			
ANR	3161259	Identifier	k		3161090	0					
ANR	3161260	PrimaryExpression	0		3161090	1					
ANR	3161261	Condition	k < numArcs	1000:16:28265:28273	3161090	1	True				
ANR	3161262	RelationalExpression	k < numArcs		3161090	0		<			
ANR	3161263	Identifier	k		3161090	0					
ANR	3161264	Identifier	numArcs		3161090	1					
ANR	3161265	PostIncDecOperationExpression	k ++	1000:27:28276:28278	3161090	2	True				
ANR	3161266	Identifier	k		3161090	0					
ANR	3161267	IncDec	++		3161090	1					
ANR	3161268	CompoundStatement		35:3:856:882	3161090	3					
ANR	3161269	IdentifierDeclStatement	"int child = g -> getArc ( j , k ) ;"	1001:3:28287:28313	3161090	0	True				
ANR	3161270	IdentifierDecl	"child = g -> getArc ( j , k )"		3161090	0					
ANR	3161271	IdentifierDeclType	int		3161090	0					
ANR	3161272	Identifier	child		3161090	1					
ANR	3161273	AssignmentExpression	"child = g -> getArc ( j , k )"		3161090	2		=			
ANR	3161274	Identifier	child		3161090	0					
ANR	3161275	CallExpression	"g -> getArc ( j , k )"		3161090	1					
ANR	3161276	Callee	g -> getArc		3161090	0					
ANR	3161277	PtrMemberAccess	g -> getArc		3161090	0					
ANR	3161278	Identifier	g		3161090	0					
ANR	3161279	Identifier	getArc		3161090	1					
ANR	3161280	ArgumentList	j		3161090	1					
ANR	3161281	Argument	j		3161090	0					
ANR	3161282	Identifier	j		3161090	0					
ANR	3161283	Argument	k		3161090	1					
ANR	3161284	Identifier	k		3161090	0					
ANR	3161285	ExpressionStatement	"fprintf ( stream , ""%d.%d ; "" , child , id )"	1002:3:28318:28357	3161090	1	True				
ANR	3161286	CallExpression	"fprintf ( stream , ""%d.%d ; "" , child , id )"		3161090	0					
ANR	3161287	Callee	fprintf		3161090	0					
ANR	3161288	Identifier	fprintf		3161090	0					
ANR	3161289	ArgumentList	stream		3161090	1					
ANR	3161290	Argument	stream		3161090	0					
ANR	3161291	Identifier	stream		3161090	0					
ANR	3161292	Argument	"""%d.%d ; """		3161090	1					
ANR	3161293	PrimaryExpression	"""%d.%d ; """		3161090	0					
ANR	3161294	Argument	child		3161090	2					
ANR	3161295	Identifier	child		3161090	0					
ANR	3161296	Argument	id		3161090	3					
ANR	3161297	Identifier	id		3161090	0					
ANR	3161298	ExpressionStatement		1003:3:28362:28362	3161090	3	True				
ANR	3161299	ExpressionStatement	"fprintf ( stream , ""}; \\n"" )"	1004:2:28366:28392	3161090	4	True				
ANR	3161300	CallExpression	"fprintf ( stream , ""}; \\n"" )"		3161090	0					
ANR	3161301	Callee	fprintf		3161090	0					
ANR	3161302	Identifier	fprintf		3161090	0					
ANR	3161303	ArgumentList	stream		3161090	1					
ANR	3161304	Argument	stream		3161090	0					
ANR	3161305	Identifier	stream		3161090	0					
ANR	3161306	Argument	"""}; \\n"""		3161090	1					
ANR	3161307	PrimaryExpression	"""}; \\n"""		3161090	0					
ANR	3161308	ExpressionStatement		1005:2:28396:28396	3161090	10	True				
ANR	3161309	ExpressionStatement	"fprintf ( stream , ""}; \\n\\n"" )"	1006:1:28399:28427	3161090	11	True				
ANR	3161310	CallExpression	"fprintf ( stream , ""}; \\n\\n"" )"		3161090	0					
ANR	3161311	Callee	fprintf		3161090	0					
ANR	3161312	Identifier	fprintf		3161090	0					
ANR	3161313	ArgumentList	stream		3161090	1					
ANR	3161314	Argument	stream		3161090	0					
ANR	3161315	Identifier	stream		3161090	0					
ANR	3161316	Argument	"""}; \\n\\n"""		3161090	1					
ANR	3161317	PrimaryExpression	"""}; \\n\\n"""		3161090	0					
ANR	3161318	ForStatement	for ( int j = 0 ; j < numNodes ; j ++ )		3161090	12					
ANR	3161319	ForInit	int j = 0 ;	1009:6:28453:28460	3161090	0	True				
ANR	3161320	IdentifierDeclStatement	int j = 0 ;		3161090	0					
ANR	3161321	IdentifierDecl	j = 0		3161090	0					
ANR	3161322	IdentifierDeclType	int		3161090	0					
ANR	3161323	Identifier	j		3161090	1					
ANR	3161324	AssignmentExpression	j = 0		3161090	2		=			
ANR	3161325	Identifier	j		3161090	0					
ANR	3161326	PrimaryExpression	0		3161090	1					
ANR	3161327	Condition	j < numNodes	1009:15:28462:28471	3161090	1	True				
ANR	3161328	RelationalExpression	j < numNodes		3161090	0		<			
ANR	3161329	Identifier	j		3161090	0					
ANR	3161330	Identifier	numNodes		3161090	1					
ANR	3161331	PostIncDecOperationExpression	j ++	1009:28:28475:28477	3161090	2	True				
ANR	3161332	Identifier	j		3161090	0					
ANR	3161333	IncDec	++		3161090	1					
ANR	3161334	CompoundStatement		44:2:1054:1083	3161090	3					
ANR	3161335	IdentifierDeclStatement	int label = g -> getLabelInt ( j ) ;	1010:2:28485:28514	3161090	0	True				
ANR	3161336	IdentifierDecl	label = g -> getLabelInt ( j )		3161090	0					
ANR	3161337	IdentifierDeclType	int		3161090	0					
ANR	3161338	Identifier	label		3161090	1					
ANR	3161339	AssignmentExpression	label = g -> getLabelInt ( j )		3161090	2		=			
ANR	3161340	Identifier	label		3161090	0					
ANR	3161341	CallExpression	g -> getLabelInt ( j )		3161090	1					
ANR	3161342	Callee	g -> getLabelInt		3161090	0					
ANR	3161343	PtrMemberAccess	g -> getLabelInt		3161090	0					
ANR	3161344	Identifier	g		3161090	0					
ANR	3161345	Identifier	getLabelInt		3161090	1					
ANR	3161346	ArgumentList	j		3161090	1					
ANR	3161347	Argument	j		3161090	0					
ANR	3161348	Identifier	j		3161090	0					
ANR	3161349	ExpressionStatement	"fprintf ( stream , ""%d.%d [label=\\""%d\\""];\\n"" , j , id , label )"	1011:2:28518:28572	3161090	1	True				
ANR	3161350	CallExpression	"fprintf ( stream , ""%d.%d [label=\\""%d\\""];\\n"" , j , id , label )"		3161090	0					
ANR	3161351	Callee	fprintf		3161090	0					
ANR	3161352	Identifier	fprintf		3161090	0					
ANR	3161353	ArgumentList	stream		3161090	1					
ANR	3161354	Argument	stream		3161090	0					
ANR	3161355	Identifier	stream		3161090	0					
ANR	3161356	Argument	"""%d.%d [label=\\""%d\\""];\\n"""		3161090	1					
ANR	3161357	PrimaryExpression	"""%d.%d [label=\\""%d\\""];\\n"""		3161090	0					
ANR	3161358	Argument	j		3161090	2					
ANR	3161359	Identifier	j		3161090	0					
ANR	3161360	Argument	id		3161090	3					
ANR	3161361	Identifier	id		3161090	0					
ANR	3161362	Argument	label		3161090	4					
ANR	3161363	Identifier	label		3161090	0					
ANR	3161364	ExpressionStatement		1012:2:28576:28576	3161090	13	True				
ANR	3161365	ExpressionStatement	"fprintf ( stream , ""\\n"" )"	1014:1:28580:28603	3161090	14	True				
ANR	3161366	CallExpression	"fprintf ( stream , ""\\n"" )"		3161090	0					
ANR	3161367	Callee	fprintf		3161090	0					
ANR	3161368	Identifier	fprintf		3161090	0					
ANR	3161369	ArgumentList	stream		3161090	1					
ANR	3161370	Argument	stream		3161090	0					
ANR	3161371	Identifier	stream		3161090	0					
ANR	3161372	Argument	"""\\n"""		3161090	1					
ANR	3161373	PrimaryExpression	"""\\n"""		3161090	0					
ANR	3161374	ReturnType	void		3161090	1					
ANR	3161375	Identifier	Superdag :: saveConstituent		3161090	2					
ANR	3161376	ParameterList	"FILE * stream , int id"		3161090	3					
ANR	3161377	Parameter	FILE * stream	966:32:27401:27412	3161090	0	True				
ANR	3161378	ParameterType	FILE *		3161090	0					
ANR	3161379	Identifier	stream		3161090	1					
ANR	3161380	Parameter	int id	966:46:27415:27420	3161090	1	True				
ANR	3161381	ParameterType	int		3161090	0					
ANR	3161382	Identifier	id		3161090	1					
ANR	3161383	CFGEntryNode	ENTRY		3161090		True				
ANR	3161384	CFGExitNode	EXIT		3161090		True				
ANR	3161385	CFGExceptionNode	EXCEPTION		3161090		True				
ANR	3161386	CFGExceptionNode	EXCEPTION		3161090		True				
ANR	3161387	CFGExceptionNode	EXCEPTION		3161090		True				
ANR	3161388	Symbol	g -> getArc		3161090						
ANR	3161389	Symbol	g -> getNumArcs		3161090						
ANR	3161390	Symbol	NULL		3161090						
ANR	3161391	Symbol	g		3161090						
ANR	3161392	Symbol	g -> getLabelInt		3161090						
ANR	3161393	Symbol	getConstituent		3161090						
ANR	3161394	Symbol	j		3161090						
ANR	3161395	Symbol	k		3161090						
ANR	3161396	Symbol	label		3161090						
ANR	3161397	Symbol	* g		3161090						
ANR	3161398	Symbol	numNodes		3161090						
ANR	3161399	Symbol	numArcs		3161090						
ANR	3161400	Symbol	stream		3161090						
ANR	3161401	Symbol	getType		3161090						
ANR	3161402	Symbol	g -> getNumNodes		3161090						
ANR	3161403	Symbol	id		3161090						
ANR	3161404	Symbol	child		3161090						
ANR	3161405	Function	Superdag :: saveArcs	1032:0:28867:29590							
ANR	3161406	FunctionDef	"Superdag :: saveArcs (FILE * stream , int srcId , int dstId)"		3161405	0					
ANR	3161407	CompoundStatement		1033:0:28935:29590	3161405	0					
ANR	3161408	IdentifierDeclStatement	"int i , j ;"	1034:1:28938:28945	3161405	0	True				
ANR	3161409	IdentifierDecl	i		3161405	0					
ANR	3161410	IdentifierDeclType	int		3161405	0					
ANR	3161411	Identifier	i		3161405	1					
ANR	3161412	IdentifierDecl	j		3161405	1					
ANR	3161413	IdentifierDeclType	int		3161405	0					
ANR	3161414	Identifier	j		3161405	1					
ANR	3161415	IfStatement	if ( NULL == stream )		3161405	1					
ANR	3161416	Condition	NULL == stream	1036:5:28953:28964	3161405	0	True				
ANR	3161417	EqualityExpression	NULL == stream		3161405	0		==			
ANR	3161418	Identifier	NULL		3161405	0					
ANR	3161419	Identifier	stream		3161405	1					
ANR	3161420	ThrowStatement	"throw ""Superdag::saveArcs, stream is NULL"" ;"	1037:2:28970:29012	3161405	1	True				
ANR	3161421	PrimaryExpression	"""Superdag::saveArcs, stream is NULL"""		3161405	0					
ANR	3161422	IdentifierDeclStatement	Dag * src = getConstituent ( srcId ) ;	1040:1:29040:29072	3161405	2	True				
ANR	3161423	IdentifierDecl	* src = getConstituent ( srcId )		3161405	0					
ANR	3161424	IdentifierDeclType	Dag *		3161405	0					
ANR	3161425	Identifier	src		3161405	1					
ANR	3161426	AssignmentExpression	* src = getConstituent ( srcId )		3161405	2		=			
ANR	3161427	Identifier	src		3161405	0					
ANR	3161428	CallExpression	getConstituent ( srcId )		3161405	1					
ANR	3161429	Callee	getConstituent		3161405	0					
ANR	3161430	Identifier	getConstituent		3161405	0					
ANR	3161431	ArgumentList	srcId		3161405	1					
ANR	3161432	Argument	srcId		3161405	0					
ANR	3161433	Identifier	srcId		3161405	0					
ANR	3161434	IdentifierDeclStatement	Dag * dst = getConstituent ( dstId ) ;	1041:1:29075:29107	3161405	3	True				
ANR	3161435	IdentifierDecl	* dst = getConstituent ( dstId )		3161405	0					
ANR	3161436	IdentifierDeclType	Dag *		3161405	0					
ANR	3161437	Identifier	dst		3161405	1					
ANR	3161438	AssignmentExpression	* dst = getConstituent ( dstId )		3161405	2		=			
ANR	3161439	Identifier	dst		3161405	0					
ANR	3161440	CallExpression	getConstituent ( dstId )		3161405	1					
ANR	3161441	Callee	getConstituent		3161405	0					
ANR	3161442	Identifier	getConstituent		3161405	0					
ANR	3161443	ArgumentList	dstId		3161405	1					
ANR	3161444	Argument	dstId		3161405	0					
ANR	3161445	Identifier	dstId		3161405	0					
ANR	3161446	IfStatement	if ( NULL == src || NULL == dst )		3161405	4					
ANR	3161447	Condition	NULL == src || NULL == dst	1042:5:29114:29135	3161405	0	True				
ANR	3161448	OrExpression	NULL == src || NULL == dst		3161405	0		||			
ANR	3161449	EqualityExpression	NULL == src		3161405	0		==			
ANR	3161450	Identifier	NULL		3161405	0					
ANR	3161451	Identifier	src		3161405	1					
ANR	3161452	EqualityExpression	NULL == dst		3161405	1		==			
ANR	3161453	Identifier	NULL		3161405	0					
ANR	3161454	Identifier	dst		3161405	1					
ANR	3161455	ThrowStatement	"throw ""Superdag::saveArcs, src or dst is NULL"" ;"	1043:2:29141:29187	3161405	1	True				
ANR	3161456	PrimaryExpression	"""Superdag::saveArcs, src or dst is NULL"""		3161405	0					
ANR	3161457	ForStatement	for ( i = 0 ; i < src -> getNumNodes ( ) ; i ++ )		3161405	5					
ANR	3161458	ForInit	i = 0 ;	1046:6:29227:29230	3161405	0	True				
ANR	3161459	AssignmentExpression	i = 0		3161405	0		=			
ANR	3161460	Identifier	i		3161405	0					
ANR	3161461	PrimaryExpression	0		3161405	1					
ANR	3161462	Condition	i < src -> getNumNodes ( )	1046:11:29232:29251	3161405	1	True				
ANR	3161463	RelationalExpression	i < src -> getNumNodes ( )		3161405	0		<			
ANR	3161464	Identifier	i		3161405	0					
ANR	3161465	CallExpression	src -> getNumNodes ( )		3161405	1					
ANR	3161466	Callee	src -> getNumNodes		3161405	0					
ANR	3161467	PtrMemberAccess	src -> getNumNodes		3161405	0					
ANR	3161468	Identifier	src		3161405	0					
ANR	3161469	Identifier	getNumNodes		3161405	1					
ANR	3161470	ArgumentList			3161405	1					
ANR	3161471	PostIncDecOperationExpression	i ++	1046:33:29254:29256	3161405	2	True				
ANR	3161472	Identifier	i		3161405	0					
ANR	3161473	IncDec	++		3161405	1					
ANR	3161474	CompoundStatement		14:39:324:324	3161405	3					
ANR	3161475	ForStatement	for ( j = 0 ; j < dst -> getNumNodes ( ) ; j ++ )		3161405	0					
ANR	3161476	ForInit	j = 0 ;	1047:7:29269:29272	3161405	0	True				
ANR	3161477	AssignmentExpression	j = 0		3161405	0		=			
ANR	3161478	Identifier	j		3161405	0					
ANR	3161479	PrimaryExpression	0		3161405	1					
ANR	3161480	Condition	j < dst -> getNumNodes ( )	1047:12:29274:29293	3161405	1	True				
ANR	3161481	RelationalExpression	j < dst -> getNumNodes ( )		3161405	0		<			
ANR	3161482	Identifier	j		3161405	0					
ANR	3161483	CallExpression	dst -> getNumNodes ( )		3161405	1					
ANR	3161484	Callee	dst -> getNumNodes		3161405	0					
ANR	3161485	PtrMemberAccess	dst -> getNumNodes		3161405	0					
ANR	3161486	Identifier	dst		3161405	0					
ANR	3161487	Identifier	getNumNodes		3161405	1					
ANR	3161488	ArgumentList			3161405	1					
ANR	3161489	PostIncDecOperationExpression	j ++	1047:34:29296:29298	3161405	2	True				
ANR	3161490	Identifier	j		3161405	0					
ANR	3161491	IncDec	++		3161405	1					
ANR	3161492	CompoundStatement		15:40:366:366	3161405	3					
ANR	3161493	IfStatement	if ( src -> getLabelInt ( i ) == dst -> getLabelInt ( j ) )		3161405	0					
ANR	3161494	Condition	src -> getLabelInt ( i ) == dst -> getLabelInt ( j )	1049:7:29350:29391	3161405	0	True				
ANR	3161495	EqualityExpression	src -> getLabelInt ( i ) == dst -> getLabelInt ( j )		3161405	0		==			
ANR	3161496	CallExpression	src -> getLabelInt ( i )		3161405	0					
ANR	3161497	Callee	src -> getLabelInt		3161405	0					
ANR	3161498	PtrMemberAccess	src -> getLabelInt		3161405	0					
ANR	3161499	Identifier	src		3161405	0					
ANR	3161500	Identifier	getLabelInt		3161405	1					
ANR	3161501	ArgumentList	i		3161405	1					
ANR	3161502	Argument	i		3161405	0					
ANR	3161503	Identifier	i		3161405	0					
ANR	3161504	CallExpression	dst -> getLabelInt ( j )		3161405	1					
ANR	3161505	Callee	dst -> getLabelInt		3161405	0					
ANR	3161506	PtrMemberAccess	dst -> getLabelInt		3161405	0					
ANR	3161507	Identifier	dst		3161405	0					
ANR	3161508	Identifier	getLabelInt		3161405	1					
ANR	3161509	ArgumentList	j		3161405	1					
ANR	3161510	Argument	j		3161405	0					
ANR	3161511	Identifier	j		3161405	0					
ANR	3161512	CompoundStatement		17:52:459:459	3161405	1					
ANR	3161513	ExpressionStatement	"fprintf ( stream , ""%d.%d -> %d.%d "" , i , srcId , j , dstId )"	1050:4:29401:29457	3161405	0	True				
ANR	3161514	CallExpression	"fprintf ( stream , ""%d.%d -> %d.%d "" , i , srcId , j , dstId )"		3161405	0					
ANR	3161515	Callee	fprintf		3161405	0					
ANR	3161516	Identifier	fprintf		3161405	0					
ANR	3161517	ArgumentList	stream		3161405	1					
ANR	3161518	Argument	stream		3161405	0					
ANR	3161519	Identifier	stream		3161405	0					
ANR	3161520	Argument	"""%d.%d -> %d.%d """		3161405	1					
ANR	3161521	PrimaryExpression	"""%d.%d -> %d.%d """		3161405	0					
ANR	3161522	Argument	i		3161405	2					
ANR	3161523	Identifier	i		3161405	0					
ANR	3161524	Argument	srcId		3161405	3					
ANR	3161525	Identifier	srcId		3161405	0					
ANR	3161526	Argument	j		3161405	4					
ANR	3161527	Identifier	j		3161405	0					
ANR	3161528	Argument	dstId		3161405	5					
ANR	3161529	Identifier	dstId		3161405	0					
ANR	3161530	ExpressionStatement	"fprintf ( stream , "" [ltail=cluster%d, lhead=cluster%d"" , srcId , dstId )"	1051:4:29463:29533	3161405	1	True				
ANR	3161531	CallExpression	"fprintf ( stream , "" [ltail=cluster%d, lhead=cluster%d"" , srcId , dstId )"		3161405	0					
ANR	3161532	Callee	fprintf		3161405	0					
ANR	3161533	Identifier	fprintf		3161405	0					
ANR	3161534	ArgumentList	stream		3161405	1					
ANR	3161535	Argument	stream		3161405	0					
ANR	3161536	Identifier	stream		3161405	0					
ANR	3161537	Argument	""" [ltail=cluster%d, lhead=cluster%d"""		3161405	1					
ANR	3161538	PrimaryExpression	""" [ltail=cluster%d, lhead=cluster%d"""		3161405	0					
ANR	3161539	Argument	srcId		3161405	2					
ANR	3161540	Identifier	srcId		3161405	0					
ANR	3161541	Argument	dstId		3161405	3					
ANR	3161542	Identifier	dstId		3161405	0					
ANR	3161543	ExpressionStatement	"fprintf ( stream , "", minlen=3];\\n"" )"	1052:4:29539:29573	3161405	2	True				
ANR	3161544	CallExpression	"fprintf ( stream , "", minlen=3];\\n"" )"		3161405	0					
ANR	3161545	Callee	fprintf		3161405	0					
ANR	3161546	Identifier	fprintf		3161405	0					
ANR	3161547	ArgumentList	stream		3161405	1					
ANR	3161548	Argument	stream		3161405	0					
ANR	3161549	Identifier	stream		3161405	0					
ANR	3161550	Argument	""", minlen=3];\\n"""		3161405	1					
ANR	3161551	PrimaryExpression	""", minlen=3];\\n"""		3161405	0					
ANR	3161552	ExpressionStatement		1053:4:29579:29579	3161405	1	True				
ANR	3161553	ExpressionStatement		1054:3:29584:29584	3161405	1	True				
ANR	3161554	ExpressionStatement		1055:2:29588:29588	3161405	6	True				
ANR	3161555	ReturnType	void		3161405	1					
ANR	3161556	Identifier	Superdag :: saveArcs		3161405	2					
ANR	3161557	ParameterList	"FILE * stream , int srcId , int dstId"		3161405	3					
ANR	3161558	Parameter	FILE * stream	1032:25:28892:28903	3161405	0	True				
ANR	3161559	ParameterType	FILE *		3161405	0					
ANR	3161560	Identifier	stream		3161405	1					
ANR	3161561	Parameter	int srcId	1032:39:28906:28914	3161405	1	True				
ANR	3161562	ParameterType	int		3161405	0					
ANR	3161563	Identifier	srcId		3161405	1					
ANR	3161564	Parameter	int dstId	1032:50:28917:28925	3161405	2	True				
ANR	3161565	ParameterType	int		3161405	0					
ANR	3161566	Identifier	dstId		3161405	1					
ANR	3161567	CFGEntryNode	ENTRY		3161405		True				
ANR	3161568	CFGExitNode	EXIT		3161405		True				
ANR	3161569	CFGExceptionNode	EXCEPTION		3161405		True				
ANR	3161570	CFGExceptionNode	EXCEPTION		3161405		True				
ANR	3161571	CFGExceptionNode	EXCEPTION		3161405		True				
ANR	3161572	Symbol	NULL		3161405						
ANR	3161573	Symbol	dst		3161405						
ANR	3161574	Symbol	src		3161405						
ANR	3161575	Symbol	i		3161405						
ANR	3161576	Symbol	getConstituent		3161405						
ANR	3161577	Symbol	j		3161405						
ANR	3161578	Symbol	src -> getNumNodes		3161405						
ANR	3161579	Symbol	* src		3161405						
ANR	3161580	Symbol	* dst		3161405						
ANR	3161581	Symbol	dst -> getLabelInt		3161405						
ANR	3161582	Symbol	stream		3161405						
ANR	3161583	Symbol	srcId		3161405						
ANR	3161584	Symbol	dstId		3161405						
ANR	3161585	Symbol	dst -> getNumNodes		3161405						
ANR	3161586	Symbol	src -> getLabelInt		3161405						
ANR	3161587	Function	Superdag_test	1072:0:29742:31337							
ANR	3161588	FunctionDef	Superdag_test ()		3161587	0					
ANR	3161589	CompoundStatement		1073:0:29767:31337	3161587	0					
ANR	3161590	CompoundStatement		13:2:154:168	3161587	0					
ANR	3161591	IdentifierDeclStatement	Dag g ;	1077:2:29802:29807	3161587	0	True				
ANR	3161592	IdentifierDecl	g		3161587	0					
ANR	3161593	IdentifierDeclType	Dag		3161587	0					
ANR	3161594	Identifier	g		3161587	1					
ANR	3161595	ExpressionStatement	g . addNode ( )	1078:2:29811:29822	3161587	1	True				
ANR	3161596	CallExpression	g . addNode ( )		3161587	0					
ANR	3161597	Callee	g . addNode		3161587	0					
ANR	3161598	MemberAccess	g . addNode		3161587	0					
ANR	3161599	Identifier	g		3161587	0					
ANR	3161600	Identifier	addNode		3161587	1					
ANR	3161601	ArgumentList			3161587	1					
ANR	3161602	ExpressionStatement	g . addNode ( )	1079:2:29826:29837	3161587	2	True				
ANR	3161603	CallExpression	g . addNode ( )		3161587	0					
ANR	3161604	Callee	g . addNode		3161587	0					
ANR	3161605	MemberAccess	g . addNode		3161587	0					
ANR	3161606	Identifier	g		3161587	0					
ANR	3161607	Identifier	addNode		3161587	1					
ANR	3161608	ArgumentList			3161587	1					
ANR	3161609	ExpressionStatement	g . addNode ( )	1080:2:29841:29852	3161587	3	True				
ANR	3161610	CallExpression	g . addNode ( )		3161587	0					
ANR	3161611	Callee	g . addNode		3161587	0					
ANR	3161612	MemberAccess	g . addNode		3161587	0					
ANR	3161613	Identifier	g		3161587	0					
ANR	3161614	Identifier	addNode		3161587	1					
ANR	3161615	ArgumentList			3161587	1					
ANR	3161616	ExpressionStatement	g . addNode ( )	1081:2:29856:29867	3161587	4	True				
ANR	3161617	CallExpression	g . addNode ( )		3161587	0					
ANR	3161618	Callee	g . addNode		3161587	0					
ANR	3161619	MemberAccess	g . addNode		3161587	0					
ANR	3161620	Identifier	g		3161587	0					
ANR	3161621	Identifier	addNode		3161587	1					
ANR	3161622	ArgumentList			3161587	1					
ANR	3161623	ExpressionStatement	"g . addArc ( 0 , 1 )"	1082:2:29871:29884	3161587	5	True				
ANR	3161624	CallExpression	"g . addArc ( 0 , 1 )"		3161587	0					
ANR	3161625	Callee	g . addArc		3161587	0					
ANR	3161626	MemberAccess	g . addArc		3161587	0					
ANR	3161627	Identifier	g		3161587	0					
ANR	3161628	Identifier	addArc		3161587	1					
ANR	3161629	ArgumentList	0		3161587	1					
ANR	3161630	Argument	0		3161587	0					
ANR	3161631	PrimaryExpression	0		3161587	0					
ANR	3161632	Argument	1		3161587	1					
ANR	3161633	PrimaryExpression	1		3161587	0					
ANR	3161634	ExpressionStatement	"g . addArc ( 1 , 2 )"	1083:2:29888:29901	3161587	6	True				
ANR	3161635	CallExpression	"g . addArc ( 1 , 2 )"		3161587	0					
ANR	3161636	Callee	g . addArc		3161587	0					
ANR	3161637	MemberAccess	g . addArc		3161587	0					
ANR	3161638	Identifier	g		3161587	0					
ANR	3161639	Identifier	addArc		3161587	1					
ANR	3161640	ArgumentList	1		3161587	1					
ANR	3161641	Argument	1		3161587	0					
ANR	3161642	PrimaryExpression	1		3161587	0					
ANR	3161643	Argument	2		3161587	1					
ANR	3161644	PrimaryExpression	2		3161587	0					
ANR	3161645	ExpressionStatement	"g . addArc ( 0 , 2 )"	1084:2:29905:29918	3161587	7	True				
ANR	3161646	CallExpression	"g . addArc ( 0 , 2 )"		3161587	0					
ANR	3161647	Callee	g . addArc		3161587	0					
ANR	3161648	MemberAccess	g . addArc		3161587	0					
ANR	3161649	Identifier	g		3161587	0					
ANR	3161650	Identifier	addArc		3161587	1					
ANR	3161651	ArgumentList	0		3161587	1					
ANR	3161652	Argument	0		3161587	0					
ANR	3161653	PrimaryExpression	0		3161587	0					
ANR	3161654	Argument	2		3161587	1					
ANR	3161655	PrimaryExpression	2		3161587	0					
ANR	3161656	IdentifierDeclStatement	Superdag sd ( g ) ;	1085:2:29922:29936	3161587	8	True				
ANR	3161657	IdentifierDecl	sd ( g )		3161587	0					
ANR	3161658	IdentifierDeclType	Superdag		3161587	0					
ANR	3161659	Identifier	sd		3161587	1					
ANR	3161660	Identifier	g		3161587	2					
ANR	3161661	ExpressionStatement	"printf ( ""num constituents %d\\n"" , sd . getNumConstituent ( ) )"	1086:2:29940:29996	3161587	9	True				
ANR	3161662	CallExpression	"printf ( ""num constituents %d\\n"" , sd . getNumConstituent ( ) )"		3161587	0					
ANR	3161663	Callee	printf		3161587	0					
ANR	3161664	Identifier	printf		3161587	0					
ANR	3161665	ArgumentList	"""num constituents %d\\n"""		3161587	1					
ANR	3161666	Argument	"""num constituents %d\\n"""		3161587	0					
ANR	3161667	PrimaryExpression	"""num constituents %d\\n"""		3161587	0					
ANR	3161668	Argument	sd . getNumConstituent ( )		3161587	1					
ANR	3161669	CallExpression	sd . getNumConstituent ( )		3161587	0					
ANR	3161670	Callee	sd . getNumConstituent		3161587	0					
ANR	3161671	MemberAccess	sd . getNumConstituent		3161587	0					
ANR	3161672	Identifier	sd		3161587	0					
ANR	3161673	Identifier	getNumConstituent		3161587	1					
ANR	3161674	ArgumentList			3161587	1					
ANR	3161675	ForStatement	for ( int i = 0 ; i < sd . getNumConstituent ( ) ; i ++ )		3161587	10					
ANR	3161676	ForInit	int i = 0 ;	1087:7:30005:30012	3161587	0	True				
ANR	3161677	IdentifierDeclStatement	int i = 0 ;		3161587	0					
ANR	3161678	IdentifierDecl	i = 0		3161587	0					
ANR	3161679	IdentifierDeclType	int		3161587	0					
ANR	3161680	Identifier	i		3161587	1					
ANR	3161681	AssignmentExpression	i = 0		3161587	2		=			
ANR	3161682	Identifier	i		3161587	0					
ANR	3161683	PrimaryExpression	0		3161587	1					
ANR	3161684	Condition	i < sd . getNumConstituent ( )	1087:16:30014:30037	3161587	1	True				
ANR	3161685	RelationalExpression	i < sd . getNumConstituent ( )		3161587	0		<			
ANR	3161686	Identifier	i		3161587	0					
ANR	3161687	CallExpression	sd . getNumConstituent ( )		3161587	1					
ANR	3161688	Callee	sd . getNumConstituent		3161587	0					
ANR	3161689	MemberAccess	sd . getNumConstituent		3161587	0					
ANR	3161690	Identifier	sd		3161587	0					
ANR	3161691	Identifier	getNumConstituent		3161587	1					
ANR	3161692	ArgumentList			3161587	1					
ANR	3161693	PostIncDecOperationExpression	i ++	1087:42:30040:30042	3161587	2	True				
ANR	3161694	Identifier	i		3161587	0					
ANR	3161695	IncDec	++		3161587	1					
ANR	3161696	CompoundStatement		15:48:278:278	3161587	3					
ANR	3161697	ExpressionStatement	"printf ( ""-- %d type %d\\n"" , i , sd . getType ( i ) )"	1088:3:30051:30093	3161587	0	True				
ANR	3161698	CallExpression	"printf ( ""-- %d type %d\\n"" , i , sd . getType ( i ) )"		3161587	0					
ANR	3161699	Callee	printf		3161587	0					
ANR	3161700	Identifier	printf		3161587	0					
ANR	3161701	ArgumentList	"""-- %d type %d\\n"""		3161587	1					
ANR	3161702	Argument	"""-- %d type %d\\n"""		3161587	0					
ANR	3161703	PrimaryExpression	"""-- %d type %d\\n"""		3161587	0					
ANR	3161704	Argument	i		3161587	1					
ANR	3161705	Identifier	i		3161587	0					
ANR	3161706	Argument	sd . getType ( i )		3161587	2					
ANR	3161707	CallExpression	sd . getType ( i )		3161587	0					
ANR	3161708	Callee	sd . getType		3161587	0					
ANR	3161709	MemberAccess	sd . getType		3161587	0					
ANR	3161710	Identifier	sd		3161587	0					
ANR	3161711	Identifier	getType		3161587	1					
ANR	3161712	ArgumentList	i		3161587	1					
ANR	3161713	Argument	i		3161587	0					
ANR	3161714	Identifier	i		3161587	0					
ANR	3161715	ExpressionStatement	( sd . getConstituent ( i ) ) -> printAsText ( )	1089:3:30098:30135	3161587	1	True				
ANR	3161716	CallExpression	( sd . getConstituent ( i ) ) -> printAsText ( )		3161587	0					
ANR	3161717	Callee	( sd . getConstituent ( i ) ) -> printAsText		3161587	0					
ANR	3161718	PtrMemberAccess	( sd . getConstituent ( i ) ) -> printAsText		3161587	0					
ANR	3161719	CallExpression	sd . getConstituent ( i )		3161587	0					
ANR	3161720	Callee	sd . getConstituent		3161587	0					
ANR	3161721	MemberAccess	sd . getConstituent		3161587	0					
ANR	3161722	Identifier	sd		3161587	0					
ANR	3161723	Identifier	getConstituent		3161587	1					
ANR	3161724	ArgumentList	i		3161587	1					
ANR	3161725	Argument	i		3161587	0					
ANR	3161726	Identifier	i		3161587	0					
ANR	3161727	Identifier	printAsText		3161587	1					
ANR	3161728	ArgumentList			3161587	1					
ANR	3161729	ExpressionStatement		1090:3:30140:30140	3161587	11	True				
ANR	3161730	ExpressionStatement		1091:2:30144:30144	3161587	1	True				
ANR	3161731	CompoundStatement		34:2:583:597	3161587	2					
ANR	3161732	IdentifierDeclStatement	Dag h ;	1095:2:30182:30187	3161587	0	True				
ANR	3161733	IdentifierDecl	h		3161587	0					
ANR	3161734	IdentifierDeclType	Dag		3161587	0					
ANR	3161735	Identifier	h		3161587	1					
ANR	3161736	ExpressionStatement	h . addNode ( )	1096:2:30191:30202	3161587	1	True				
ANR	3161737	CallExpression	h . addNode ( )		3161587	0					
ANR	3161738	Callee	h . addNode		3161587	0					
ANR	3161739	MemberAccess	h . addNode		3161587	0					
ANR	3161740	Identifier	h		3161587	0					
ANR	3161741	Identifier	addNode		3161587	1					
ANR	3161742	ArgumentList			3161587	1					
ANR	3161743	ExpressionStatement	h . addNode ( )	1097:2:30206:30217	3161587	2	True				
ANR	3161744	CallExpression	h . addNode ( )		3161587	0					
ANR	3161745	Callee	h . addNode		3161587	0					
ANR	3161746	MemberAccess	h . addNode		3161587	0					
ANR	3161747	Identifier	h		3161587	0					
ANR	3161748	Identifier	addNode		3161587	1					
ANR	3161749	ArgumentList			3161587	1					
ANR	3161750	ExpressionStatement	h . addNode ( )	1098:2:30221:30232	3161587	3	True				
ANR	3161751	CallExpression	h . addNode ( )		3161587	0					
ANR	3161752	Callee	h . addNode		3161587	0					
ANR	3161753	MemberAccess	h . addNode		3161587	0					
ANR	3161754	Identifier	h		3161587	0					
ANR	3161755	Identifier	addNode		3161587	1					
ANR	3161756	ArgumentList			3161587	1					
ANR	3161757	ExpressionStatement	h . addNode ( )	1099:2:30236:30247	3161587	4	True				
ANR	3161758	CallExpression	h . addNode ( )		3161587	0					
ANR	3161759	Callee	h . addNode		3161587	0					
ANR	3161760	MemberAccess	h . addNode		3161587	0					
ANR	3161761	Identifier	h		3161587	0					
ANR	3161762	Identifier	addNode		3161587	1					
ANR	3161763	ArgumentList			3161587	1					
ANR	3161764	ExpressionStatement	h . addNode ( )	1100:2:30251:30262	3161587	5	True				
ANR	3161765	CallExpression	h . addNode ( )		3161587	0					
ANR	3161766	Callee	h . addNode		3161587	0					
ANR	3161767	MemberAccess	h . addNode		3161587	0					
ANR	3161768	Identifier	h		3161587	0					
ANR	3161769	Identifier	addNode		3161587	1					
ANR	3161770	ArgumentList			3161587	1					
ANR	3161771	ExpressionStatement	"h . addArc ( 0 , 1 )"	1101:2:30266:30279	3161587	6	True				
ANR	3161772	CallExpression	"h . addArc ( 0 , 1 )"		3161587	0					
ANR	3161773	Callee	h . addArc		3161587	0					
ANR	3161774	MemberAccess	h . addArc		3161587	0					
ANR	3161775	Identifier	h		3161587	0					
ANR	3161776	Identifier	addArc		3161587	1					
ANR	3161777	ArgumentList	0		3161587	1					
ANR	3161778	Argument	0		3161587	0					
ANR	3161779	PrimaryExpression	0		3161587	0					
ANR	3161780	Argument	1		3161587	1					
ANR	3161781	PrimaryExpression	1		3161587	0					
ANR	3161782	ExpressionStatement	"h . addArc ( 1 , 2 )"	1102:2:30283:30296	3161587	7	True				
ANR	3161783	CallExpression	"h . addArc ( 1 , 2 )"		3161587	0					
ANR	3161784	Callee	h . addArc		3161587	0					
ANR	3161785	MemberAccess	h . addArc		3161587	0					
ANR	3161786	Identifier	h		3161587	0					
ANR	3161787	Identifier	addArc		3161587	1					
ANR	3161788	ArgumentList	1		3161587	1					
ANR	3161789	Argument	1		3161587	0					
ANR	3161790	PrimaryExpression	1		3161587	0					
ANR	3161791	Argument	2		3161587	1					
ANR	3161792	PrimaryExpression	2		3161587	0					
ANR	3161793	ExpressionStatement	"h . addArc ( 0 , 4 )"	1103:2:30300:30313	3161587	8	True				
ANR	3161794	CallExpression	"h . addArc ( 0 , 4 )"		3161587	0					
ANR	3161795	Callee	h . addArc		3161587	0					
ANR	3161796	MemberAccess	h . addArc		3161587	0					
ANR	3161797	Identifier	h		3161587	0					
ANR	3161798	Identifier	addArc		3161587	1					
ANR	3161799	ArgumentList	0		3161587	1					
ANR	3161800	Argument	0		3161587	0					
ANR	3161801	PrimaryExpression	0		3161587	0					
ANR	3161802	Argument	4		3161587	1					
ANR	3161803	PrimaryExpression	4		3161587	0					
ANR	3161804	ExpressionStatement	"h . addArc ( 3 , 2 )"	1104:2:30317:30330	3161587	9	True				
ANR	3161805	CallExpression	"h . addArc ( 3 , 2 )"		3161587	0					
ANR	3161806	Callee	h . addArc		3161587	0					
ANR	3161807	MemberAccess	h . addArc		3161587	0					
ANR	3161808	Identifier	h		3161587	0					
ANR	3161809	Identifier	addArc		3161587	1					
ANR	3161810	ArgumentList	3		3161587	1					
ANR	3161811	Argument	3		3161587	0					
ANR	3161812	PrimaryExpression	3		3161587	0					
ANR	3161813	Argument	2		3161587	1					
ANR	3161814	PrimaryExpression	2		3161587	0					
ANR	3161815	ExpressionStatement	"h . addArc ( 3 , 4 )"	1105:2:30334:30347	3161587	10	True				
ANR	3161816	CallExpression	"h . addArc ( 3 , 4 )"		3161587	0					
ANR	3161817	Callee	h . addArc		3161587	0					
ANR	3161818	MemberAccess	h . addArc		3161587	0					
ANR	3161819	Identifier	h		3161587	0					
ANR	3161820	Identifier	addArc		3161587	1					
ANR	3161821	ArgumentList	3		3161587	1					
ANR	3161822	Argument	3		3161587	0					
ANR	3161823	PrimaryExpression	3		3161587	0					
ANR	3161824	Argument	4		3161587	1					
ANR	3161825	PrimaryExpression	4		3161587	0					
ANR	3161826	IdentifierDeclStatement	Superdag sd ( h ) ;	1106:2:30351:30365	3161587	11	True				
ANR	3161827	IdentifierDecl	sd ( h )		3161587	0					
ANR	3161828	IdentifierDeclType	Superdag		3161587	0					
ANR	3161829	Identifier	sd		3161587	1					
ANR	3161830	Identifier	h		3161587	2					
ANR	3161831	ExpressionStatement	"printf ( ""num constituents %d\\n"" , sd . getNumConstituent ( ) )"	1107:2:30369:30425	3161587	12	True				
ANR	3161832	CallExpression	"printf ( ""num constituents %d\\n"" , sd . getNumConstituent ( ) )"		3161587	0					
ANR	3161833	Callee	printf		3161587	0					
ANR	3161834	Identifier	printf		3161587	0					
ANR	3161835	ArgumentList	"""num constituents %d\\n"""		3161587	1					
ANR	3161836	Argument	"""num constituents %d\\n"""		3161587	0					
ANR	3161837	PrimaryExpression	"""num constituents %d\\n"""		3161587	0					
ANR	3161838	Argument	sd . getNumConstituent ( )		3161587	1					
ANR	3161839	CallExpression	sd . getNumConstituent ( )		3161587	0					
ANR	3161840	Callee	sd . getNumConstituent		3161587	0					
ANR	3161841	MemberAccess	sd . getNumConstituent		3161587	0					
ANR	3161842	Identifier	sd		3161587	0					
ANR	3161843	Identifier	getNumConstituent		3161587	1					
ANR	3161844	ArgumentList			3161587	1					
ANR	3161845	ForStatement	for ( int i = 0 ; i < sd . getNumConstituent ( ) ; i ++ )		3161587	13					
ANR	3161846	ForInit	int i = 0 ;	1108:7:30434:30441	3161587	0	True				
ANR	3161847	IdentifierDeclStatement	int i = 0 ;		3161587	0					
ANR	3161848	IdentifierDecl	i = 0		3161587	0					
ANR	3161849	IdentifierDeclType	int		3161587	0					
ANR	3161850	Identifier	i		3161587	1					
ANR	3161851	AssignmentExpression	i = 0		3161587	2		=			
ANR	3161852	Identifier	i		3161587	0					
ANR	3161853	PrimaryExpression	0		3161587	1					
ANR	3161854	Condition	i < sd . getNumConstituent ( )	1108:16:30443:30466	3161587	1	True				
ANR	3161855	RelationalExpression	i < sd . getNumConstituent ( )		3161587	0		<			
ANR	3161856	Identifier	i		3161587	0					
ANR	3161857	CallExpression	sd . getNumConstituent ( )		3161587	1					
ANR	3161858	Callee	sd . getNumConstituent		3161587	0					
ANR	3161859	MemberAccess	sd . getNumConstituent		3161587	0					
ANR	3161860	Identifier	sd		3161587	0					
ANR	3161861	Identifier	getNumConstituent		3161587	1					
ANR	3161862	ArgumentList			3161587	1					
ANR	3161863	PostIncDecOperationExpression	i ++	1108:42:30469:30471	3161587	2	True				
ANR	3161864	Identifier	i		3161587	0					
ANR	3161865	IncDec	++		3161587	1					
ANR	3161866	CompoundStatement		36:48:707:707	3161587	3					
ANR	3161867	ExpressionStatement	"printf ( ""-- %d type %d\\n"" , i , sd . getType ( i ) )"	1109:3:30480:30522	3161587	0	True				
ANR	3161868	CallExpression	"printf ( ""-- %d type %d\\n"" , i , sd . getType ( i ) )"		3161587	0					
ANR	3161869	Callee	printf		3161587	0					
ANR	3161870	Identifier	printf		3161587	0					
ANR	3161871	ArgumentList	"""-- %d type %d\\n"""		3161587	1					
ANR	3161872	Argument	"""-- %d type %d\\n"""		3161587	0					
ANR	3161873	PrimaryExpression	"""-- %d type %d\\n"""		3161587	0					
ANR	3161874	Argument	i		3161587	1					
ANR	3161875	Identifier	i		3161587	0					
ANR	3161876	Argument	sd . getType ( i )		3161587	2					
ANR	3161877	CallExpression	sd . getType ( i )		3161587	0					
ANR	3161878	Callee	sd . getType		3161587	0					
ANR	3161879	MemberAccess	sd . getType		3161587	0					
ANR	3161880	Identifier	sd		3161587	0					
ANR	3161881	Identifier	getType		3161587	1					
ANR	3161882	ArgumentList	i		3161587	1					
ANR	3161883	Argument	i		3161587	0					
ANR	3161884	Identifier	i		3161587	0					
ANR	3161885	ExpressionStatement	( sd . getConstituent ( i ) ) -> printAsText ( )	1110:3:30527:30564	3161587	1	True				
ANR	3161886	CallExpression	( sd . getConstituent ( i ) ) -> printAsText ( )		3161587	0					
ANR	3161887	Callee	( sd . getConstituent ( i ) ) -> printAsText		3161587	0					
ANR	3161888	PtrMemberAccess	( sd . getConstituent ( i ) ) -> printAsText		3161587	0					
ANR	3161889	CallExpression	sd . getConstituent ( i )		3161587	0					
ANR	3161890	Callee	sd . getConstituent		3161587	0					
ANR	3161891	MemberAccess	sd . getConstituent		3161587	0					
ANR	3161892	Identifier	sd		3161587	0					
ANR	3161893	Identifier	getConstituent		3161587	1					
ANR	3161894	ArgumentList	i		3161587	1					
ANR	3161895	Argument	i		3161587	0					
ANR	3161896	Identifier	i		3161587	0					
ANR	3161897	Identifier	printAsText		3161587	1					
ANR	3161898	ArgumentList			3161587	1					
ANR	3161899	ExpressionStatement		1111:3:30569:30569	3161587	14	True				
ANR	3161900	ExpressionStatement		1112:2:30573:30573	3161587	3	True				
ANR	3161901	CompoundStatement		60:2:1105:1119	3161587	4					
ANR	3161902	IdentifierDeclStatement	Dag h ;	1116:2:30615:30620	3161587	0	True				
ANR	3161903	IdentifierDecl	h		3161587	0					
ANR	3161904	IdentifierDeclType	Dag		3161587	0					
ANR	3161905	Identifier	h		3161587	1					
ANR	3161906	ExpressionStatement	h . addNode ( )	1117:2:30624:30635	3161587	1	True				
ANR	3161907	CallExpression	h . addNode ( )		3161587	0					
ANR	3161908	Callee	h . addNode		3161587	0					
ANR	3161909	MemberAccess	h . addNode		3161587	0					
ANR	3161910	Identifier	h		3161587	0					
ANR	3161911	Identifier	addNode		3161587	1					
ANR	3161912	ArgumentList			3161587	1					
ANR	3161913	ExpressionStatement	h . addNode ( )	1118:2:30639:30650	3161587	2	True				
ANR	3161914	CallExpression	h . addNode ( )		3161587	0					
ANR	3161915	Callee	h . addNode		3161587	0					
ANR	3161916	MemberAccess	h . addNode		3161587	0					
ANR	3161917	Identifier	h		3161587	0					
ANR	3161918	Identifier	addNode		3161587	1					
ANR	3161919	ArgumentList			3161587	1					
ANR	3161920	ExpressionStatement	h . addNode ( )	1119:2:30654:30665	3161587	3	True				
ANR	3161921	CallExpression	h . addNode ( )		3161587	0					
ANR	3161922	Callee	h . addNode		3161587	0					
ANR	3161923	MemberAccess	h . addNode		3161587	0					
ANR	3161924	Identifier	h		3161587	0					
ANR	3161925	Identifier	addNode		3161587	1					
ANR	3161926	ArgumentList			3161587	1					
ANR	3161927	ExpressionStatement	h . addNode ( )	1120:2:30669:30680	3161587	4	True				
ANR	3161928	CallExpression	h . addNode ( )		3161587	0					
ANR	3161929	Callee	h . addNode		3161587	0					
ANR	3161930	MemberAccess	h . addNode		3161587	0					
ANR	3161931	Identifier	h		3161587	0					
ANR	3161932	Identifier	addNode		3161587	1					
ANR	3161933	ArgumentList			3161587	1					
ANR	3161934	ExpressionStatement	h . addNode ( )	1121:2:30684:30695	3161587	5	True				
ANR	3161935	CallExpression	h . addNode ( )		3161587	0					
ANR	3161936	Callee	h . addNode		3161587	0					
ANR	3161937	MemberAccess	h . addNode		3161587	0					
ANR	3161938	Identifier	h		3161587	0					
ANR	3161939	Identifier	addNode		3161587	1					
ANR	3161940	ArgumentList			3161587	1					
ANR	3161941	ExpressionStatement	h . addNode ( )	1122:2:30699:30710	3161587	6	True				
ANR	3161942	CallExpression	h . addNode ( )		3161587	0					
ANR	3161943	Callee	h . addNode		3161587	0					
ANR	3161944	MemberAccess	h . addNode		3161587	0					
ANR	3161945	Identifier	h		3161587	0					
ANR	3161946	Identifier	addNode		3161587	1					
ANR	3161947	ArgumentList			3161587	1					
ANR	3161948	ExpressionStatement	h . addNode ( )	1123:2:30714:30725	3161587	7	True				
ANR	3161949	CallExpression	h . addNode ( )		3161587	0					
ANR	3161950	Callee	h . addNode		3161587	0					
ANR	3161951	MemberAccess	h . addNode		3161587	0					
ANR	3161952	Identifier	h		3161587	0					
ANR	3161953	Identifier	addNode		3161587	1					
ANR	3161954	ArgumentList			3161587	1					
ANR	3161955	ExpressionStatement	"h . addArc ( 0 , 1 )"	1124:2:30729:30742	3161587	8	True				
ANR	3161956	CallExpression	"h . addArc ( 0 , 1 )"		3161587	0					
ANR	3161957	Callee	h . addArc		3161587	0					
ANR	3161958	MemberAccess	h . addArc		3161587	0					
ANR	3161959	Identifier	h		3161587	0					
ANR	3161960	Identifier	addArc		3161587	1					
ANR	3161961	ArgumentList	0		3161587	1					
ANR	3161962	Argument	0		3161587	0					
ANR	3161963	PrimaryExpression	0		3161587	0					
ANR	3161964	Argument	1		3161587	1					
ANR	3161965	PrimaryExpression	1		3161587	0					
ANR	3161966	ExpressionStatement	"h . addArc ( 1 , 2 )"	1125:2:30746:30759	3161587	9	True				
ANR	3161967	CallExpression	"h . addArc ( 1 , 2 )"		3161587	0					
ANR	3161968	Callee	h . addArc		3161587	0					
ANR	3161969	MemberAccess	h . addArc		3161587	0					
ANR	3161970	Identifier	h		3161587	0					
ANR	3161971	Identifier	addArc		3161587	1					
ANR	3161972	ArgumentList	1		3161587	1					
ANR	3161973	Argument	1		3161587	0					
ANR	3161974	PrimaryExpression	1		3161587	0					
ANR	3161975	Argument	2		3161587	1					
ANR	3161976	PrimaryExpression	2		3161587	0					
ANR	3161977	ExpressionStatement	"h . addArc ( 0 , 4 )"	1126:2:30763:30776	3161587	10	True				
ANR	3161978	CallExpression	"h . addArc ( 0 , 4 )"		3161587	0					
ANR	3161979	Callee	h . addArc		3161587	0					
ANR	3161980	MemberAccess	h . addArc		3161587	0					
ANR	3161981	Identifier	h		3161587	0					
ANR	3161982	Identifier	addArc		3161587	1					
ANR	3161983	ArgumentList	0		3161587	1					
ANR	3161984	Argument	0		3161587	0					
ANR	3161985	PrimaryExpression	0		3161587	0					
ANR	3161986	Argument	4		3161587	1					
ANR	3161987	PrimaryExpression	4		3161587	0					
ANR	3161988	ExpressionStatement	"h . addArc ( 3 , 2 )"	1127:2:30780:30793	3161587	11	True				
ANR	3161989	CallExpression	"h . addArc ( 3 , 2 )"		3161587	0					
ANR	3161990	Callee	h . addArc		3161587	0					
ANR	3161991	MemberAccess	h . addArc		3161587	0					
ANR	3161992	Identifier	h		3161587	0					
ANR	3161993	Identifier	addArc		3161587	1					
ANR	3161994	ArgumentList	3		3161587	1					
ANR	3161995	Argument	3		3161587	0					
ANR	3161996	PrimaryExpression	3		3161587	0					
ANR	3161997	Argument	2		3161587	1					
ANR	3161998	PrimaryExpression	2		3161587	0					
ANR	3161999	ExpressionStatement	"h . addArc ( 3 , 4 )"	1128:2:30797:30810	3161587	12	True				
ANR	3162000	CallExpression	"h . addArc ( 3 , 4 )"		3161587	0					
ANR	3162001	Callee	h . addArc		3161587	0					
ANR	3162002	MemberAccess	h . addArc		3161587	0					
ANR	3162003	Identifier	h		3161587	0					
ANR	3162004	Identifier	addArc		3161587	1					
ANR	3162005	ArgumentList	3		3161587	1					
ANR	3162006	Argument	3		3161587	0					
ANR	3162007	PrimaryExpression	3		3161587	0					
ANR	3162008	Argument	4		3161587	1					
ANR	3162009	PrimaryExpression	4		3161587	0					
ANR	3162010	ExpressionStatement	"h . addArc ( 5 , 6 )"	1129:2:30814:30827	3161587	13	True				
ANR	3162011	CallExpression	"h . addArc ( 5 , 6 )"		3161587	0					
ANR	3162012	Callee	h . addArc		3161587	0					
ANR	3162013	MemberAccess	h . addArc		3161587	0					
ANR	3162014	Identifier	h		3161587	0					
ANR	3162015	Identifier	addArc		3161587	1					
ANR	3162016	ArgumentList	5		3161587	1					
ANR	3162017	Argument	5		3161587	0					
ANR	3162018	PrimaryExpression	5		3161587	0					
ANR	3162019	Argument	6		3161587	1					
ANR	3162020	PrimaryExpression	6		3161587	0					
ANR	3162021	ExpressionStatement	"h . addArc ( 4 , 6 )"	1130:2:30831:30844	3161587	14	True				
ANR	3162022	CallExpression	"h . addArc ( 4 , 6 )"		3161587	0					
ANR	3162023	Callee	h . addArc		3161587	0					
ANR	3162024	MemberAccess	h . addArc		3161587	0					
ANR	3162025	Identifier	h		3161587	0					
ANR	3162026	Identifier	addArc		3161587	1					
ANR	3162027	ArgumentList	4		3161587	1					
ANR	3162028	Argument	4		3161587	0					
ANR	3162029	PrimaryExpression	4		3161587	0					
ANR	3162030	Argument	6		3161587	1					
ANR	3162031	PrimaryExpression	6		3161587	0					
ANR	3162032	ExpressionStatement	"h . saveAsDot ( ""h2.dot"" )"	1131:2:30848:30869	3161587	15	True				
ANR	3162033	CallExpression	"h . saveAsDot ( ""h2.dot"" )"		3161587	0					
ANR	3162034	Callee	h . saveAsDot		3161587	0					
ANR	3162035	MemberAccess	h . saveAsDot		3161587	0					
ANR	3162036	Identifier	h		3161587	0					
ANR	3162037	Identifier	saveAsDot		3161587	1					
ANR	3162038	ArgumentList	"""h2.dot"""		3161587	1					
ANR	3162039	Argument	"""h2.dot"""		3161587	0					
ANR	3162040	PrimaryExpression	"""h2.dot"""		3161587	0					
ANR	3162041	IdentifierDeclStatement	Superdag sd ( h ) ;	1132:2:30873:30887	3161587	16	True				
ANR	3162042	IdentifierDecl	sd ( h )		3161587	0					
ANR	3162043	IdentifierDeclType	Superdag		3161587	0					
ANR	3162044	Identifier	sd		3161587	1					
ANR	3162045	Identifier	h		3161587	2					
ANR	3162046	ExpressionStatement	"printf ( ""num constituents %d\\n"" , sd . getNumConstituent ( ) )"	1133:2:30891:30947	3161587	17	True				
ANR	3162047	CallExpression	"printf ( ""num constituents %d\\n"" , sd . getNumConstituent ( ) )"		3161587	0					
ANR	3162048	Callee	printf		3161587	0					
ANR	3162049	Identifier	printf		3161587	0					
ANR	3162050	ArgumentList	"""num constituents %d\\n"""		3161587	1					
ANR	3162051	Argument	"""num constituents %d\\n"""		3161587	0					
ANR	3162052	PrimaryExpression	"""num constituents %d\\n"""		3161587	0					
ANR	3162053	Argument	sd . getNumConstituent ( )		3161587	1					
ANR	3162054	CallExpression	sd . getNumConstituent ( )		3161587	0					
ANR	3162055	Callee	sd . getNumConstituent		3161587	0					
ANR	3162056	MemberAccess	sd . getNumConstituent		3161587	0					
ANR	3162057	Identifier	sd		3161587	0					
ANR	3162058	Identifier	getNumConstituent		3161587	1					
ANR	3162059	ArgumentList			3161587	1					
ANR	3162060	ForStatement	for ( int i = 0 ; i < sd . getNumConstituent ( ) ; i ++ )		3161587	18					
ANR	3162061	ForInit	int i = 0 ;	1134:7:30956:30963	3161587	0	True				
ANR	3162062	IdentifierDeclStatement	int i = 0 ;		3161587	0					
ANR	3162063	IdentifierDecl	i = 0		3161587	0					
ANR	3162064	IdentifierDeclType	int		3161587	0					
ANR	3162065	Identifier	i		3161587	1					
ANR	3162066	AssignmentExpression	i = 0		3161587	2		=			
ANR	3162067	Identifier	i		3161587	0					
ANR	3162068	PrimaryExpression	0		3161587	1					
ANR	3162069	Condition	i < sd . getNumConstituent ( )	1134:16:30965:30988	3161587	1	True				
ANR	3162070	RelationalExpression	i < sd . getNumConstituent ( )		3161587	0		<			
ANR	3162071	Identifier	i		3161587	0					
ANR	3162072	CallExpression	sd . getNumConstituent ( )		3161587	1					
ANR	3162073	Callee	sd . getNumConstituent		3161587	0					
ANR	3162074	MemberAccess	sd . getNumConstituent		3161587	0					
ANR	3162075	Identifier	sd		3161587	0					
ANR	3162076	Identifier	getNumConstituent		3161587	1					
ANR	3162077	ArgumentList			3161587	1					
ANR	3162078	PostIncDecOperationExpression	i ++	1134:42:30991:30993	3161587	2	True				
ANR	3162079	Identifier	i		3161587	0					
ANR	3162080	IncDec	++		3161587	1					
ANR	3162081	CompoundStatement		62:48:1229:1229	3161587	3					
ANR	3162082	ExpressionStatement	"printf ( ""-- %d type %d\\n"" , i , sd . getType ( i ) )"	1135:3:31002:31044	3161587	0	True				
ANR	3162083	CallExpression	"printf ( ""-- %d type %d\\n"" , i , sd . getType ( i ) )"		3161587	0					
ANR	3162084	Callee	printf		3161587	0					
ANR	3162085	Identifier	printf		3161587	0					
ANR	3162086	ArgumentList	"""-- %d type %d\\n"""		3161587	1					
ANR	3162087	Argument	"""-- %d type %d\\n"""		3161587	0					
ANR	3162088	PrimaryExpression	"""-- %d type %d\\n"""		3161587	0					
ANR	3162089	Argument	i		3161587	1					
ANR	3162090	Identifier	i		3161587	0					
ANR	3162091	Argument	sd . getType ( i )		3161587	2					
ANR	3162092	CallExpression	sd . getType ( i )		3161587	0					
ANR	3162093	Callee	sd . getType		3161587	0					
ANR	3162094	MemberAccess	sd . getType		3161587	0					
ANR	3162095	Identifier	sd		3161587	0					
ANR	3162096	Identifier	getType		3161587	1					
ANR	3162097	ArgumentList	i		3161587	1					
ANR	3162098	Argument	i		3161587	0					
ANR	3162099	Identifier	i		3161587	0					
ANR	3162100	ExpressionStatement	( sd . getConstituent ( i ) ) -> printAsText ( )	1136:3:31049:31086	3161587	1	True				
ANR	3162101	CallExpression	( sd . getConstituent ( i ) ) -> printAsText ( )		3161587	0					
ANR	3162102	Callee	( sd . getConstituent ( i ) ) -> printAsText		3161587	0					
ANR	3162103	PtrMemberAccess	( sd . getConstituent ( i ) ) -> printAsText		3161587	0					
ANR	3162104	CallExpression	sd . getConstituent ( i )		3161587	0					
ANR	3162105	Callee	sd . getConstituent		3161587	0					
ANR	3162106	MemberAccess	sd . getConstituent		3161587	0					
ANR	3162107	Identifier	sd		3161587	0					
ANR	3162108	Identifier	getConstituent		3161587	1					
ANR	3162109	ArgumentList	i		3161587	1					
ANR	3162110	Argument	i		3161587	0					
ANR	3162111	Identifier	i		3161587	0					
ANR	3162112	Identifier	printAsText		3161587	1					
ANR	3162113	ArgumentList			3161587	1					
ANR	3162114	ExpressionStatement		1137:3:31091:31091	3161587	19	True				
ANR	3162115	ExpressionStatement	"sd . saveSuperdagAsDot ( ""h2s.dot"" )"	1139:2:31096:31127	3161587	20	True				
ANR	3162116	CallExpression	"sd . saveSuperdagAsDot ( ""h2s.dot"" )"		3161587	0					
ANR	3162117	Callee	sd . saveSuperdagAsDot		3161587	0					
ANR	3162118	MemberAccess	sd . saveSuperdagAsDot		3161587	0					
ANR	3162119	Identifier	sd		3161587	0					
ANR	3162120	Identifier	saveSuperdagAsDot		3161587	1					
ANR	3162121	ArgumentList	"""h2s.dot"""		3161587	1					
ANR	3162122	Argument	"""h2s.dot"""		3161587	0					
ANR	3162123	PrimaryExpression	"""h2s.dot"""		3161587	0					
ANR	3162124	ExpressionStatement		1140:2:31131:31131	3161587	5	True				
ANR	3162125	CompoundStatement		75:2:1504:1518	3161587	6					
ANR	3162126	IdentifierDeclStatement	"DagmanDag h ( ""rundg_test-0.dag"" ) ;"	1144:2:31187:31218	3161587	0	True				
ANR	3162127	IdentifierDecl	"h ( ""rundg_test-0.dag"" )"		3161587	0					
ANR	3162128	IdentifierDeclType	DagmanDag		3161587	0					
ANR	3162129	Identifier	h		3161587	1					
ANR	3162130	PrimaryExpression	"""rundg_test-0.dag"""		3161587	2					
ANR	3162131	ExpressionStatement	h . addNode ( )	1145:2:31222:31233	3161587	1	True				
ANR	3162132	CallExpression	h . addNode ( )		3161587	0					
ANR	3162133	Callee	h . addNode		3161587	0					
ANR	3162134	MemberAccess	h . addNode		3161587	0					
ANR	3162135	Identifier	h		3161587	0					
ANR	3162136	Identifier	addNode		3161587	1					
ANR	3162137	ArgumentList			3161587	1					
ANR	3162138	ExpressionStatement	"h . saveAsDot ( ""rundg_test-0.dot"" )"	1146:2:31237:31268	3161587	2	True				
ANR	3162139	CallExpression	"h . saveAsDot ( ""rundg_test-0.dot"" )"		3161587	0					
ANR	3162140	Callee	h . saveAsDot		3161587	0					
ANR	3162141	MemberAccess	h . saveAsDot		3161587	0					
ANR	3162142	Identifier	h		3161587	0					
ANR	3162143	Identifier	saveAsDot		3161587	1					
ANR	3162144	ArgumentList	"""rundg_test-0.dot"""		3161587	1					
ANR	3162145	Argument	"""rundg_test-0.dot"""		3161587	0					
ANR	3162146	PrimaryExpression	"""rundg_test-0.dot"""		3161587	0					
ANR	3162147	IdentifierDeclStatement	Superdag sd ( h ) ;	1147:2:31272:31286	3161587	3	True				
ANR	3162148	IdentifierDecl	sd ( h )		3161587	0					
ANR	3162149	IdentifierDeclType	Superdag		3161587	0					
ANR	3162150	Identifier	sd		3161587	1					
ANR	3162151	Identifier	h		3161587	2					
ANR	3162152	ExpressionStatement	"sd . saveSuperdagAsDot ( ""rundg_test-0S.dot"" )"	1148:2:31290:31331	3161587	4	True				
ANR	3162153	CallExpression	"sd . saveSuperdagAsDot ( ""rundg_test-0S.dot"" )"		3161587	0					
ANR	3162154	Callee	sd . saveSuperdagAsDot		3161587	0					
ANR	3162155	MemberAccess	sd . saveSuperdagAsDot		3161587	0					
ANR	3162156	Identifier	sd		3161587	0					
ANR	3162157	Identifier	saveSuperdagAsDot		3161587	1					
ANR	3162158	ArgumentList	"""rundg_test-0S.dot"""		3161587	1					
ANR	3162159	Argument	"""rundg_test-0S.dot"""		3161587	0					
ANR	3162160	PrimaryExpression	"""rundg_test-0S.dot"""		3161587	0					
ANR	3162161	ExpressionStatement		1149:2:31335:31335	3161587	7	True				
ANR	3162162	ReturnType	void		3161587	1					
ANR	3162163	Identifier	Superdag_test		3161587	2					
ANR	3162164	ParameterList			3161587	3					
ANR	3162165	CFGEntryNode	ENTRY		3161587		True				
ANR	3162166	CFGExitNode	EXIT		3161587		True				
ANR	3162167	Symbol	sd		3161587						
ANR	3162168	Symbol	sd . getConstituent		3161587						
ANR	3162169	Symbol	g		3161587						
ANR	3162170	Symbol	sd . getType		3161587						
ANR	3162171	Symbol	sd . getNumConstituent		3161587						
ANR	3162172	Symbol	h		3161587						
ANR	3162173	Symbol	i		3161587						
