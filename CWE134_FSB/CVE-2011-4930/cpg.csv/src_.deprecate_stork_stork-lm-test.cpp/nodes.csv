command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2431987	File	data/converged/CVE-2011-4930_htcondor/src_.deprecate_stork_stork-lm-test.cpp								
ANR	2431988	DeclStmt									
ANR	2431989	Decl							list < DCLeaseManagerLease * >	list < DCLeaseManagerLease * >	mylist
ANR	2431990	Function	main	28:0:1001:1490							
ANR	2431991	FunctionDef	"main (int argc , char * * argv)"		2431990	0					
ANR	2431992	CompoundStatement		29:0:1036:1490	2431990	0					
ANR	2431993	ExpressionStatement	( void ) argc	30:1:1039:1050	2431990	0	True				
ANR	2431994	CastExpression	( void ) argc		2431990	0					
ANR	2431995	CastTarget	void		2431990	0					
ANR	2431996	Identifier	argc		2431990	1					
ANR	2431997	ExpressionStatement	( void ) argv	31:1:1053:1064	2431990	1	True				
ANR	2431998	CastExpression	( void ) argv		2431990	0					
ANR	2431999	CastTarget	void		2431990	0					
ANR	2432000	Identifier	argv		2431990	1					
ANR	2432001	IdentifierDeclStatement	DCLeaseManagerLease l ;	33:1:1068:1089	2431990	2	True				
ANR	2432002	IdentifierDecl	l		2431990	0					
ANR	2432003	IdentifierDeclType	DCLeaseManagerLease		2431990	0					
ANR	2432004	Identifier	l		2431990	1					
ANR	2432005	ExpressionStatement	mylist . push_back ( & l )	34:1:1092:1114	2431990	3	True				
ANR	2432006	CallExpression	mylist . push_back ( & l )		2431990	0					
ANR	2432007	Callee	mylist . push_back		2431990	0					
ANR	2432008	MemberAccess	mylist . push_back		2431990	0					
ANR	2432009	Identifier	mylist		2431990	0					
ANR	2432010	Identifier	push_back		2431990	1					
ANR	2432011	ArgumentList	& l		2431990	1					
ANR	2432012	Argument	& l		2431990	0					
ANR	2432013	UnaryOperationExpression	& l		2431990	0					
ANR	2432014	UnaryOperator	&		2431990	0					
ANR	2432015	Identifier	l		2431990	1					
ANR	2432016	ExpressionStatement	mylist . remove ( & l )	35:1:1117:1135	2431990	4	True				
ANR	2432017	CallExpression	mylist . remove ( & l )		2431990	0					
ANR	2432018	Callee	mylist . remove		2431990	0					
ANR	2432019	MemberAccess	mylist . remove		2431990	0					
ANR	2432020	Identifier	mylist		2431990	0					
ANR	2432021	Identifier	remove		2431990	1					
ANR	2432022	ArgumentList	& l		2431990	1					
ANR	2432023	Argument	& l		2431990	0					
ANR	2432024	UnaryOperationExpression	& l		2431990	0					
ANR	2432025	UnaryOperator	&		2431990	0					
ANR	2432026	Identifier	l		2431990	1					
ANR	2432027	ExpressionStatement	config ( )	37:1:1139:1147	2431990	5	True				
ANR	2432028	CallExpression	config ( )		2431990	0					
ANR	2432029	Callee	config		2431990	0					
ANR	2432030	Identifier	config		2431990	0					
ANR	2432031	ArgumentList			2431990	1					
ANR	2432032	ExpressionStatement	Termlog = 1	38:1:1150:1161	2431990	6	True				
ANR	2432033	AssignmentExpression	Termlog = 1		2431990	0		=			
ANR	2432034	Identifier	Termlog		2431990	0					
ANR	2432035	PrimaryExpression	1		2431990	1					
ANR	2432036	ExpressionStatement	"dprintf_config ( ""TOOL"" )"	39:1:1164:1186	2431990	7	True				
ANR	2432037	CallExpression	"dprintf_config ( ""TOOL"" )"		2431990	0					
ANR	2432038	Callee	dprintf_config		2431990	0					
ANR	2432039	Identifier	dprintf_config		2431990	0					
ANR	2432040	ArgumentList	"""TOOL"""		2431990	1					
ANR	2432041	Argument	"""TOOL"""		2431990	0					
ANR	2432042	PrimaryExpression	"""TOOL"""		2431990	0					
ANR	2432043	IdentifierDeclStatement	StorkLeaseManager mm ;	41:1:1190:1210	2431990	8	True				
ANR	2432044	IdentifierDecl	mm		2431990	0					
ANR	2432045	IdentifierDeclType	StorkLeaseManager		2431990	0					
ANR	2432046	Identifier	mm		2431990	1					
ANR	2432047	ExpressionStatement	"printf ( ""mm size %d @ %p\\n"" , sizeof ( mm ) , & mm )"	42:1:1213:1259	2431990	9	True				
ANR	2432048	CallExpression	"printf ( ""mm size %d @ %p\\n"" , sizeof ( mm ) , & mm )"		2431990	0					
ANR	2432049	Callee	printf		2431990	0					
ANR	2432050	Identifier	printf		2431990	0					
ANR	2432051	ArgumentList	"""mm size %d @ %p\\n"""		2431990	1					
ANR	2432052	Argument	"""mm size %d @ %p\\n"""		2431990	0					
ANR	2432053	PrimaryExpression	"""mm size %d @ %p\\n"""		2431990	0					
ANR	2432054	Argument	sizeof ( mm )		2431990	1					
ANR	2432055	SizeofExpression	sizeof ( mm )		2431990	0					
ANR	2432056	Sizeof	sizeof		2431990	0					
ANR	2432057	SizeofOperand	mm		2431990	1					
ANR	2432058	Argument	& mm		2431990	2					
ANR	2432059	UnaryOperationExpression	& mm		2431990	0					
ANR	2432060	UnaryOperator	&		2431990	0					
ANR	2432061	Identifier	mm		2431990	1					
ANR	2432062	IdentifierDeclStatement	const char * result = NULL ;	43:1:1262:1287	2431990	10	True				
ANR	2432063	IdentifierDecl	* result = NULL		2431990	0					
ANR	2432064	IdentifierDeclType	const char *		2431990	0					
ANR	2432065	Identifier	result		2431990	1					
ANR	2432066	AssignmentExpression	* result = NULL		2431990	2		=			
ANR	2432067	Identifier	NULL		2431990	0					
ANR	2432068	Identifier	NULL		2431990	1					
ANR	2432069	ExpressionStatement	result = mm . getTransferDirectory ( NULL )	44:1:1290:1328	2431990	11	True				
ANR	2432070	AssignmentExpression	result = mm . getTransferDirectory ( NULL )		2431990	0		=			
ANR	2432071	Identifier	result		2431990	0					
ANR	2432072	CallExpression	mm . getTransferDirectory ( NULL )		2431990	1					
ANR	2432073	Callee	mm . getTransferDirectory		2431990	0					
ANR	2432074	MemberAccess	mm . getTransferDirectory		2431990	0					
ANR	2432075	Identifier	mm		2431990	0					
ANR	2432076	Identifier	getTransferDirectory		2431990	1					
ANR	2432077	ArgumentList	NULL		2431990	1					
ANR	2432078	Argument	NULL		2431990	0					
ANR	2432079	Identifier	NULL		2431990	0					
ANR	2432080	ExpressionStatement	"printf ( ""TODD dest = %s\\n"" , result ? result : ""(NULL)"" )"	45:1:1331:1386	2431990	12	True				
ANR	2432081	CallExpression	"printf ( ""TODD dest = %s\\n"" , result ? result : ""(NULL)"" )"		2431990	0					
ANR	2432082	Callee	printf		2431990	0					
ANR	2432083	Identifier	printf		2431990	0					
ANR	2432084	ArgumentList	"""TODD dest = %s\\n"""		2431990	1					
ANR	2432085	Argument	"""TODD dest = %s\\n"""		2431990	0					
ANR	2432086	PrimaryExpression	"""TODD dest = %s\\n"""		2431990	0					
ANR	2432087	Argument	"result ? result : ""(NULL)"""		2431990	1					
ANR	2432088	ConditionalExpression	"result ? result : ""(NULL)"""		2431990	0					
ANR	2432089	Condition	result		2431990	0					
ANR	2432090	Identifier	result		2431990	0					
ANR	2432091	Identifier	result		2431990	1					
ANR	2432092	PrimaryExpression	"""(NULL)"""		2431990	2					
ANR	2432093	ExpressionStatement	result = mm . getTransferDirectory ( NULL )	46:1:1389:1427	2431990	13	True				
ANR	2432094	AssignmentExpression	result = mm . getTransferDirectory ( NULL )		2431990	0		=			
ANR	2432095	Identifier	result		2431990	0					
ANR	2432096	CallExpression	mm . getTransferDirectory ( NULL )		2431990	1					
ANR	2432097	Callee	mm . getTransferDirectory		2431990	0					
ANR	2432098	MemberAccess	mm . getTransferDirectory		2431990	0					
ANR	2432099	Identifier	mm		2431990	0					
ANR	2432100	Identifier	getTransferDirectory		2431990	1					
ANR	2432101	ArgumentList	NULL		2431990	1					
ANR	2432102	Argument	NULL		2431990	0					
ANR	2432103	Identifier	NULL		2431990	0					
ANR	2432104	ExpressionStatement	"printf ( ""TODD dest = %s\\n"" , result ? result : ""(NULL)"" )"	47:1:1430:1485	2431990	14	True				
ANR	2432105	CallExpression	"printf ( ""TODD dest = %s\\n"" , result ? result : ""(NULL)"" )"		2431990	0					
ANR	2432106	Callee	printf		2431990	0					
ANR	2432107	Identifier	printf		2431990	0					
ANR	2432108	ArgumentList	"""TODD dest = %s\\n"""		2431990	1					
ANR	2432109	Argument	"""TODD dest = %s\\n"""		2431990	0					
ANR	2432110	PrimaryExpression	"""TODD dest = %s\\n"""		2431990	0					
ANR	2432111	Argument	"result ? result : ""(NULL)"""		2431990	1					
ANR	2432112	ConditionalExpression	"result ? result : ""(NULL)"""		2431990	0					
ANR	2432113	Condition	result		2431990	0					
ANR	2432114	Identifier	result		2431990	0					
ANR	2432115	Identifier	result		2431990	1					
ANR	2432116	PrimaryExpression	"""(NULL)"""		2431990	2					
ANR	2432117	ReturnType	int		2431990	1					
ANR	2432118	Identifier	main		2431990	2					
ANR	2432119	ParameterList	"int argc , char * * argv"		2431990	3					
ANR	2432120	Parameter	int argc	28:11:1012:1019	2431990	0	True				
ANR	2432121	ParameterType	int		2431990	0					
ANR	2432122	Identifier	argc		2431990	1					
ANR	2432123	Parameter	char * * argv	28:21:1022:1032	2431990	1	True				
ANR	2432124	ParameterType	char * *		2431990	0					
ANR	2432125	Identifier	argv		2431990	1					
ANR	2432126	CFGEntryNode	ENTRY		2431990		True				
ANR	2432127	CFGExitNode	EXIT		2431990		True				
ANR	2432128	Symbol	argc		2431990						
ANR	2432129	Symbol	mm		2431990						
ANR	2432130	Symbol	result		2431990						
ANR	2432131	Symbol	& l		2431990						
ANR	2432132	Symbol	NULL		2431990						
ANR	2432133	Symbol	mm . getTransferDirectory		2431990						
ANR	2432134	Symbol	mylist		2431990						
ANR	2432135	Symbol	Termlog		2431990						
ANR	2432136	Symbol	& mm		2431990						
ANR	2432137	Symbol	l		2431990						
ANR	2432138	Symbol	argv		2431990						
