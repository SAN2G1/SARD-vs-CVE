command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	964091	File	data/converged/CVE-2011-4930_htcondor/condor_sockaddr.cpp								
ANR	964092	DeclStmt									
ANR	964093	Decl							condor_sockaddr	condor_sockaddr	condor_sockaddr :: null
ANR	964094	Function	condor_sockaddr :: clear	8:0:146:226							
ANR	964095	FunctionDef	condor_sockaddr :: clear ()		964094	0					
ANR	964096	CompoundStatement		9:0:176:226	964094	0					
ANR	964097	ExpressionStatement	"memset ( & storage , 0 , sizeof ( sockaddr_storage ) )"	10:1:179:224	964094	0	True				
ANR	964098	CallExpression	"memset ( & storage , 0 , sizeof ( sockaddr_storage ) )"		964094	0					
ANR	964099	Callee	memset		964094	0					
ANR	964100	Identifier	memset		964094	0					
ANR	964101	ArgumentList	& storage		964094	1					
ANR	964102	Argument	& storage		964094	0					
ANR	964103	UnaryOperationExpression	& storage		964094	0					
ANR	964104	UnaryOperator	&		964094	0					
ANR	964105	Identifier	storage		964094	1					
ANR	964106	Argument	0		964094	1					
ANR	964107	PrimaryExpression	0		964094	0					
ANR	964108	Argument	sizeof ( sockaddr_storage )		964094	2					
ANR	964109	SizeofExpression	sizeof ( sockaddr_storage )		964094	0					
ANR	964110	Sizeof	sizeof		964094	0					
ANR	964111	SizeofOperand	sockaddr_storage		964094	1					
ANR	964112	ReturnType	void		964094	1					
ANR	964113	Identifier	condor_sockaddr :: clear		964094	2					
ANR	964114	ParameterList			964094	3					
ANR	964115	CFGEntryNode	ENTRY		964094		True				
ANR	964116	CFGExitNode	EXIT		964094		True				
ANR	964117	Symbol	& storage		964094						
ANR	964118	Function	condor_sockaddr :: init	14:0:278:498							
ANR	964119	FunctionDef	"condor_sockaddr :: init (int32_t ip , unsigned port)"		964118	0					
ANR	964120	CompoundStatement		15:0:332:498	964118	0					
ANR	964121	ExpressionStatement	clear ( )	16:1:335:342	964118	0	True				
ANR	964122	CallExpression	clear ( )		964118	0					
ANR	964123	Callee	clear		964118	0					
ANR	964124	Identifier	clear		964118	0					
ANR	964125	ArgumentList			964118	1					
ANR	964126	ExpressionStatement	v4 . sin_len = sizeof ( sockaddr_in )	18:1:384:416	964118	1	True				
ANR	964127	AssignmentExpression	v4 . sin_len = sizeof ( sockaddr_in )		964118	0		=			
ANR	964128	MemberAccess	v4 . sin_len		964118	0					
ANR	964129	Identifier	v4		964118	0					
ANR	964130	Identifier	sin_len		964118	1					
ANR	964131	SizeofExpression	sizeof ( sockaddr_in )		964118	1					
ANR	964132	Sizeof	sizeof		964118	0					
ANR	964133	SizeofOperand	sockaddr_in		964118	1					
ANR	964134	ExpressionStatement	v4 . sin_family = AF_INET	20:1:426:449	964118	2	True				
ANR	964135	AssignmentExpression	v4 . sin_family = AF_INET		964118	0		=			
ANR	964136	MemberAccess	v4 . sin_family		964118	0					
ANR	964137	Identifier	v4		964118	0					
ANR	964138	Identifier	sin_family		964118	1					
ANR	964139	Identifier	AF_INET		964118	1					
ANR	964140	ExpressionStatement	v4 . sin_port = port	21:1:452:470	964118	3	True				
ANR	964141	AssignmentExpression	v4 . sin_port = port		964118	0		=			
ANR	964142	MemberAccess	v4 . sin_port		964118	0					
ANR	964143	Identifier	v4		964118	0					
ANR	964144	Identifier	sin_port		964118	1					
ANR	964145	Identifier	port		964118	1					
ANR	964146	ExpressionStatement	v4 . sin_addr . s_addr = ip	22:1:473:496	964118	4	True				
ANR	964147	AssignmentExpression	v4 . sin_addr . s_addr = ip		964118	0		=			
ANR	964148	MemberAccess	v4 . sin_addr . s_addr		964118	0					
ANR	964149	MemberAccess	v4 . sin_addr		964118	0					
ANR	964150	Identifier	v4		964118	0					
ANR	964151	Identifier	sin_addr		964118	1					
ANR	964152	Identifier	s_addr		964118	1					
ANR	964153	Identifier	ip		964118	1					
ANR	964154	ReturnType	void		964118	1					
ANR	964155	Identifier	condor_sockaddr :: init		964118	2					
ANR	964156	ParameterList	"int32_t ip , unsigned port"		964118	3					
ANR	964157	Parameter	int32_t ip	14:27:305:314	964118	0	True				
ANR	964158	ParameterType	int32_t		964118	0					
ANR	964159	Identifier	ip		964118	1					
ANR	964160	Parameter	unsigned port	14:39:317:329	964118	1	True				
ANR	964161	ParameterType	unsigned		964118	0					
ANR	964162	Identifier	port		964118	1					
ANR	964163	CFGEntryNode	ENTRY		964118		True				
ANR	964164	CFGExitNode	EXIT		964118		True				
ANR	964165	Symbol	v4 . sin_len		964118						
ANR	964166	Symbol	v4 . sin_family		964118						
ANR	964167	Symbol	v4 . sin_addr . s_addr		964118						
ANR	964168	Symbol	port		964118						
ANR	964169	Symbol	v4 . sin_port		964118						
ANR	964170	Symbol	ip		964118						
ANR	964171	Symbol	v4 . sin_addr		964118						
ANR	964172	Symbol	AF_INET		964118						
ANR	964173	Symbol	v4		964118						
ANR	964174	Function	condor_sockaddr :: condor_sockaddr	25:0:501:548							
ANR	964175	FunctionDef	condor_sockaddr :: condor_sockaddr ()		964174	0					
ANR	964176	CompoundStatement		26:0:536:548	964174	0					
ANR	964177	ExpressionStatement	clear ( )	27:1:539:546	964174	0	True				
ANR	964178	CallExpression	clear ( )		964174	0					
ANR	964179	Callee	clear		964174	0					
ANR	964180	Identifier	clear		964174	0					
ANR	964181	ArgumentList			964174	1					
ANR	964182	Identifier	condor_sockaddr :: condor_sockaddr		964174	1					
ANR	964183	ParameterList			964174	2					
ANR	964184	CFGEntryNode	ENTRY		964174		True				
ANR	964185	CFGExitNode	EXIT		964174		True				
ANR	964186	Function	condor_sockaddr :: condor_sockaddr	30:0:551:650							
ANR	964187	FunctionDef	"condor_sockaddr :: condor_sockaddr (in_addr ip , unsigned short port)"		964186	0					
ANR	964188	CompoundStatement		31:0:617:650	964186	0					
ANR	964189	ExpressionStatement	"init ( ip . s_addr , htons ( port ) )"	32:1:620:648	964186	0	True				
ANR	964190	CallExpression	"init ( ip . s_addr , htons ( port ) )"		964186	0					
ANR	964191	Callee	init		964186	0					
ANR	964192	Identifier	init		964186	0					
ANR	964193	ArgumentList	ip . s_addr		964186	1					
ANR	964194	Argument	ip . s_addr		964186	0					
ANR	964195	MemberAccess	ip . s_addr		964186	0					
ANR	964196	Identifier	ip		964186	0					
ANR	964197	Identifier	s_addr		964186	1					
ANR	964198	Argument	htons ( port )		964186	1					
ANR	964199	CallExpression	htons ( port )		964186	0					
ANR	964200	Callee	htons		964186	0					
ANR	964201	Identifier	htons		964186	0					
ANR	964202	ArgumentList	port		964186	1					
ANR	964203	Argument	port		964186	0					
ANR	964204	Identifier	port		964186	0					
ANR	964205	Identifier	condor_sockaddr :: condor_sockaddr		964186	1					
ANR	964206	ParameterList	"in_addr ip , unsigned short port"		964186	2					
ANR	964207	Parameter	in_addr ip	30:33:584:593	964186	0	True				
ANR	964208	ParameterType	in_addr		964186	0					
ANR	964209	Identifier	ip		964186	1					
ANR	964210	Parameter	unsigned short port	30:45:596:614	964186	1	True				
ANR	964211	ParameterType	unsigned short		964186	0					
ANR	964212	Identifier	port		964186	1					
ANR	964213	CFGEntryNode	ENTRY		964186		True				
ANR	964214	CFGExitNode	EXIT		964186		True				
ANR	964215	Symbol	port		964186						
ANR	964216	Symbol	ip		964186						
ANR	964217	Symbol	htons		964186						
ANR	964218	Symbol	ip . s_addr		964186						
ANR	964219	Function	condor_sockaddr :: condor_sockaddr	35:0:653:901							
ANR	964220	FunctionDef	"condor_sockaddr :: condor_sockaddr (const in6_addr & in6 , unsigned short port)"		964219	0					
ANR	964221	CompoundStatement		36:0:728:901	964219	0					
ANR	964222	ExpressionStatement	clear ( )	37:1:731:738	964219	0	True				
ANR	964223	CallExpression	clear ( )		964219	0					
ANR	964224	Callee	clear		964219	0					
ANR	964225	Identifier	clear		964219	0					
ANR	964226	ArgumentList			964219	1					
ANR	964227	ExpressionStatement	v6 . sin6_len = sizeof ( sockaddr_in6 )	39:1:780:814	964219	1	True				
ANR	964228	AssignmentExpression	v6 . sin6_len = sizeof ( sockaddr_in6 )		964219	0		=			
ANR	964229	MemberAccess	v6 . sin6_len		964219	0					
ANR	964230	Identifier	v6		964219	0					
ANR	964231	Identifier	sin6_len		964219	1					
ANR	964232	SizeofExpression	sizeof ( sockaddr_in6 )		964219	1					
ANR	964233	Sizeof	sizeof		964219	0					
ANR	964234	SizeofOperand	sockaddr_in6		964219	1					
ANR	964235	ExpressionStatement	v6 . sin6_family = AF_INET6	41:1:824:849	964219	2	True				
ANR	964236	AssignmentExpression	v6 . sin6_family = AF_INET6		964219	0		=			
ANR	964237	MemberAccess	v6 . sin6_family		964219	0					
ANR	964238	Identifier	v6		964219	0					
ANR	964239	Identifier	sin6_family		964219	1					
ANR	964240	Identifier	AF_INET6		964219	1					
ANR	964241	ExpressionStatement	v6 . sin6_port = htons ( port )	42:1:852:878	964219	3	True				
ANR	964242	AssignmentExpression	v6 . sin6_port = htons ( port )		964219	0		=			
ANR	964243	MemberAccess	v6 . sin6_port		964219	0					
ANR	964244	Identifier	v6		964219	0					
ANR	964245	Identifier	sin6_port		964219	1					
ANR	964246	CallExpression	htons ( port )		964219	1					
ANR	964247	Callee	htons		964219	0					
ANR	964248	Identifier	htons		964219	0					
ANR	964249	ArgumentList	port		964219	1					
ANR	964250	Argument	port		964219	0					
ANR	964251	Identifier	port		964219	0					
ANR	964252	ExpressionStatement	v6 . sin6_addr = in6	43:1:881:899	964219	4	True				
ANR	964253	AssignmentExpression	v6 . sin6_addr = in6		964219	0		=			
ANR	964254	MemberAccess	v6 . sin6_addr		964219	0					
ANR	964255	Identifier	v6		964219	0					
ANR	964256	Identifier	sin6_addr		964219	1					
ANR	964257	Identifier	in6		964219	1					
ANR	964258	Identifier	condor_sockaddr :: condor_sockaddr		964219	1					
ANR	964259	ParameterList	"const in6_addr & in6 , unsigned short port"		964219	2					
ANR	964260	Parameter	const in6_addr & in6	35:33:686:704	964219	0	True				
ANR	964261	ParameterType	const in6_addr &		964219	0					
ANR	964262	Identifier	in6		964219	1					
ANR	964263	Parameter	unsigned short port	35:54:707:725	964219	1	True				
ANR	964264	ParameterType	unsigned short		964219	0					
ANR	964265	Identifier	port		964219	1					
ANR	964266	CFGEntryNode	ENTRY		964219		True				
ANR	964267	CFGExitNode	EXIT		964219		True				
ANR	964268	Symbol	in6		964219						
ANR	964269	Symbol	v6		964219						
ANR	964270	Symbol	v6 . sin6_len		964219						
ANR	964271	Symbol	v6 . sin6_port		964219						
ANR	964272	Symbol	port		964219						
ANR	964273	Symbol	htons		964219						
ANR	964274	Symbol	v6 . sin6_family		964219						
ANR	964275	Symbol	v6 . sin6_addr		964219						
ANR	964276	Symbol	AF_INET6		964219						
ANR	964277	Function	condor_sockaddr :: condor_sockaddr	46:0:904:1197							
ANR	964278	FunctionDef	condor_sockaddr :: condor_sockaddr (const sockaddr * sa)		964277	0					
ANR	964279	CompoundStatement		47:0:957:1197	964277	0					
ANR	964280	IfStatement	if ( sa -> sa_family == AF_INET )		964277	0					
ANR	964281	Condition	sa -> sa_family == AF_INET	48:5:964:987	964277	0	True				
ANR	964282	EqualityExpression	sa -> sa_family == AF_INET		964277	0		==			
ANR	964283	PtrMemberAccess	sa -> sa_family		964277	0					
ANR	964284	Identifier	sa		964277	0					
ANR	964285	Identifier	sa_family		964277	1					
ANR	964286	Identifier	AF_INET		964277	1					
ANR	964287	CompoundStatement		3:2:36:71	964277	1					
ANR	964288	IdentifierDeclStatement	sockaddr_in * sin = ( sockaddr_in * ) sa ;	49:2:994:1029	964277	0	True				
ANR	964289	IdentifierDecl	* sin = ( sockaddr_in * ) sa		964277	0					
ANR	964290	IdentifierDeclType	sockaddr_in *		964277	0					
ANR	964291	Identifier	sin		964277	1					
ANR	964292	AssignmentExpression	* sin = ( sockaddr_in * ) sa		964277	2		=			
ANR	964293	Identifier	sin		964277	0					
ANR	964294	CastExpression	( sockaddr_in * ) sa		964277	1					
ANR	964295	CastTarget	sockaddr_in *		964277	0					
ANR	964296	Identifier	sa		964277	1					
ANR	964297	ExpressionStatement	"init ( sin -> sin_addr . s_addr , sin -> sin_port )"	50:2:1033:1074	964277	1	True				
ANR	964298	CallExpression	"init ( sin -> sin_addr . s_addr , sin -> sin_port )"		964277	0					
ANR	964299	Callee	init		964277	0					
ANR	964300	Identifier	init		964277	0					
ANR	964301	ArgumentList	sin -> sin_addr . s_addr		964277	1					
ANR	964302	Argument	sin -> sin_addr . s_addr		964277	0					
ANR	964303	MemberAccess	sin -> sin_addr . s_addr		964277	0					
ANR	964304	PtrMemberAccess	sin -> sin_addr		964277	0					
ANR	964305	Identifier	sin		964277	0					
ANR	964306	Identifier	sin_addr		964277	1					
ANR	964307	Identifier	s_addr		964277	1					
ANR	964308	Argument	sin -> sin_port		964277	1					
ANR	964309	PtrMemberAccess	sin -> sin_port		964277	0					
ANR	964310	Identifier	sin		964277	0					
ANR	964311	Identifier	sin_port		964277	1					
ANR	964312	ElseStatement	else		964277	0					
ANR	964313	IfStatement	if ( sa -> sa_family == AF_INET6 )		964277	0					
ANR	964314	Condition	sa -> sa_family == AF_INET6	51:12:1088:1112	964277	0	True				
ANR	964315	EqualityExpression	sa -> sa_family == AF_INET6		964277	0		==			
ANR	964316	PtrMemberAccess	sa -> sa_family		964277	0					
ANR	964317	Identifier	sa		964277	0					
ANR	964318	Identifier	sa_family		964277	1					
ANR	964319	Identifier	AF_INET6		964277	1					
ANR	964320	CompoundStatement		6:2:161:199	964277	1					
ANR	964321	IdentifierDeclStatement	sockaddr_in6 * sin6 = ( sockaddr_in6 * ) sa ;	52:2:1119:1157	964277	0	True				
ANR	964322	IdentifierDecl	* sin6 = ( sockaddr_in6 * ) sa		964277	0					
ANR	964323	IdentifierDeclType	sockaddr_in6 *		964277	0					
ANR	964324	Identifier	sin6		964277	1					
ANR	964325	AssignmentExpression	* sin6 = ( sockaddr_in6 * ) sa		964277	2		=			
ANR	964326	Identifier	sin6		964277	0					
ANR	964327	CastExpression	( sockaddr_in6 * ) sa		964277	1					
ANR	964328	CastTarget	sockaddr_in6 *		964277	0					
ANR	964329	Identifier	sa		964277	1					
ANR	964330	ExpressionStatement	v6 = * sin6	53:2:1161:1171	964277	1	True				
ANR	964331	AssignmentExpression	v6 = * sin6		964277	0		=			
ANR	964332	Identifier	v6		964277	0					
ANR	964333	UnaryOperationExpression	* sin6		964277	1					
ANR	964334	UnaryOperator	*		964277	0					
ANR	964335	Identifier	sin6		964277	1					
ANR	964336	ElseStatement	else		964277	0					
ANR	964337	CompoundStatement		8:8:223:223	964277	0					
ANR	964338	ExpressionStatement	clear ( )	55:2:1185:1192	964277	0	True				
ANR	964339	CallExpression	clear ( )		964277	0					
ANR	964340	Callee	clear		964277	0					
ANR	964341	Identifier	clear		964277	0					
ANR	964342	ArgumentList			964277	1					
ANR	964343	Identifier	condor_sockaddr :: condor_sockaddr		964277	1					
ANR	964344	ParameterList	const sockaddr * sa		964277	2					
ANR	964345	Parameter	const sockaddr * sa	46:33:937:954	964277	0	True				
ANR	964346	ParameterType	const sockaddr *		964277	0					
ANR	964347	Identifier	sa		964277	1					
ANR	964348	CFGEntryNode	ENTRY		964277		True				
ANR	964349	CFGExitNode	EXIT		964277		True				
ANR	964350	Symbol	v6		964277						
ANR	964351	Symbol	sin -> sin_port		964277						
ANR	964352	Symbol	* sin		964277						
ANR	964353	Symbol	sa -> sa_family		964277						
ANR	964354	Symbol	AF_INET		964277						
ANR	964355	Symbol	sin6		964277						
ANR	964356	Symbol	sa		964277						
ANR	964357	Symbol	AF_INET6		964277						
ANR	964358	Symbol	* sin6		964277						
ANR	964359	Symbol	* sa		964277						
ANR	964360	Symbol	sin -> sin_addr		964277						
ANR	964361	Symbol	sin		964277						
ANR	964362	Symbol	sin -> sin_addr . s_addr		964277						
ANR	964363	Function	condor_sockaddr :: condor_sockaddr	59:0:1200:1304							
ANR	964364	FunctionDef	condor_sockaddr :: condor_sockaddr (const sockaddr_in * sin)		964363	0					
ANR	964365	CompoundStatement		60:0:1258:1304	964363	0					
ANR	964366	ExpressionStatement	"init ( sin -> sin_addr . s_addr , sin -> sin_port )"	61:1:1261:1302	964363	0	True				
ANR	964367	CallExpression	"init ( sin -> sin_addr . s_addr , sin -> sin_port )"		964363	0					
ANR	964368	Callee	init		964363	0					
ANR	964369	Identifier	init		964363	0					
ANR	964370	ArgumentList	sin -> sin_addr . s_addr		964363	1					
ANR	964371	Argument	sin -> sin_addr . s_addr		964363	0					
ANR	964372	MemberAccess	sin -> sin_addr . s_addr		964363	0					
ANR	964373	PtrMemberAccess	sin -> sin_addr		964363	0					
ANR	964374	Identifier	sin		964363	0					
ANR	964375	Identifier	sin_addr		964363	1					
ANR	964376	Identifier	s_addr		964363	1					
ANR	964377	Argument	sin -> sin_port		964363	1					
ANR	964378	PtrMemberAccess	sin -> sin_port		964363	0					
ANR	964379	Identifier	sin		964363	0					
ANR	964380	Identifier	sin_port		964363	1					
ANR	964381	Identifier	condor_sockaddr :: condor_sockaddr		964363	1					
ANR	964382	ParameterList	const sockaddr_in * sin		964363	2					
ANR	964383	Parameter	const sockaddr_in * sin	59:33:1233:1254	964363	0	True				
ANR	964384	ParameterType	const sockaddr_in *		964363	0					
ANR	964385	Identifier	sin		964363	1					
ANR	964386	CFGEntryNode	ENTRY		964363		True				
ANR	964387	CFGExitNode	EXIT		964363		True				
ANR	964388	Symbol	sin -> sin_port		964363						
ANR	964389	Symbol	* sin		964363						
ANR	964390	Symbol	sin -> sin_addr		964363						
ANR	964391	Symbol	sin		964363						
ANR	964392	Symbol	sin -> sin_addr . s_addr		964363						
ANR	964393	Function	condor_sockaddr :: condor_sockaddr	64:0:1307:1381							
ANR	964394	FunctionDef	condor_sockaddr :: condor_sockaddr (const sockaddr_in6 * sin6)		964393	0					
ANR	964395	CompoundStatement		65:0:1366:1381	964393	0					
ANR	964396	ExpressionStatement	v6 = * sin6	66:1:1369:1379	964393	0	True				
ANR	964397	AssignmentExpression	v6 = * sin6		964393	0		=			
ANR	964398	Identifier	v6		964393	0					
ANR	964399	UnaryOperationExpression	* sin6		964393	1					
ANR	964400	UnaryOperator	*		964393	0					
ANR	964401	Identifier	sin6		964393	1					
ANR	964402	Identifier	condor_sockaddr :: condor_sockaddr		964393	1					
ANR	964403	ParameterList	const sockaddr_in6 * sin6		964393	2					
ANR	964404	Parameter	const sockaddr_in6 * sin6	64:33:1340:1363	964393	0	True				
ANR	964405	ParameterType	const sockaddr_in6 *		964393	0					
ANR	964406	Identifier	sin6		964393	1					
ANR	964407	CFGEntryNode	ENTRY		964393		True				
ANR	964408	CFGExitNode	EXIT		964393		True				
ANR	964409	Symbol	v6		964393						
ANR	964410	Symbol	* sin6		964393						
ANR	964411	Symbol	sin6		964393						
ANR	964412	Function	condor_sockaddr :: to_sin	69:0:1384:1442							
ANR	964413	FunctionDef	condor_sockaddr :: to_sin ()		964412	0					
ANR	964414	CompoundStatement		70:0:1428:1442	964412	0					
ANR	964415	ReturnStatement	return v4 ;	71:1:1431:1440	964412	0	True				
ANR	964416	Identifier	v4		964412	0					
ANR	964417	ReturnType	sockaddr_in		964412	1					
ANR	964418	Identifier	condor_sockaddr :: to_sin		964412	2					
ANR	964419	ParameterList			964412	3					
ANR	964420	CFGEntryNode	ENTRY		964412		True				
ANR	964421	CFGExitNode	EXIT		964412		True				
ANR	964422	Symbol	v4		964412						
ANR	964423	Function	condor_sockaddr :: to_sin6	74:0:1445:1505							
ANR	964424	FunctionDef	condor_sockaddr :: to_sin6 ()		964423	0					
ANR	964425	CompoundStatement		75:0:1491:1505	964423	0					
ANR	964426	ReturnStatement	return v6 ;	76:1:1494:1503	964423	0	True				
ANR	964427	Identifier	v6		964423	0					
ANR	964428	ReturnType	sockaddr_in6		964423	1					
ANR	964429	Identifier	condor_sockaddr :: to_sin6		964423	2					
ANR	964430	ParameterList			964423	3					
ANR	964431	CFGEntryNode	ENTRY		964423		True				
ANR	964432	CFGExitNode	EXIT		964423		True				
ANR	964433	Symbol	v6		964423						
ANR	964434	Function	condor_sockaddr :: is_ipv4	79:0:1508:1582							
ANR	964435	FunctionDef	condor_sockaddr :: is_ipv4 ()		964434	0					
ANR	964436	CompoundStatement		80:0:1546:1582	964434	0					
ANR	964437	ReturnStatement	return v4 . sin_family == AF_INET ;	81:1:1549:1580	964434	0	True				
ANR	964438	EqualityExpression	v4 . sin_family == AF_INET		964434	0		==			
ANR	964439	MemberAccess	v4 . sin_family		964434	0					
ANR	964440	Identifier	v4		964434	0					
ANR	964441	Identifier	sin_family		964434	1					
ANR	964442	Identifier	AF_INET		964434	1					
ANR	964443	ReturnType	bool		964434	1					
ANR	964444	Identifier	condor_sockaddr :: is_ipv4		964434	2					
ANR	964445	ParameterList			964434	3					
ANR	964446	CFGEntryNode	ENTRY		964434		True				
ANR	964447	CFGExitNode	EXIT		964434		True				
ANR	964448	Symbol	v4 . sin_family		964434						
ANR	964449	Symbol	AF_INET		964434						
ANR	964450	Symbol	v4		964434						
ANR	964451	Function	condor_sockaddr :: is_ipv6	84:0:1585:1661							
ANR	964452	FunctionDef	condor_sockaddr :: is_ipv6 ()		964451	0					
ANR	964453	CompoundStatement		85:0:1623:1661	964451	0					
ANR	964454	ReturnStatement	return v6 . sin6_family == AF_INET6 ;	86:1:1626:1659	964451	0	True				
ANR	964455	EqualityExpression	v6 . sin6_family == AF_INET6		964451	0		==			
ANR	964456	MemberAccess	v6 . sin6_family		964451	0					
ANR	964457	Identifier	v6		964451	0					
ANR	964458	Identifier	sin6_family		964451	1					
ANR	964459	Identifier	AF_INET6		964451	1					
ANR	964460	ReturnType	bool		964451	1					
ANR	964461	Identifier	condor_sockaddr :: is_ipv6		964451	2					
ANR	964462	ParameterList			964451	3					
ANR	964463	CFGEntryNode	ENTRY		964451		True				
ANR	964464	CFGExitNode	EXIT		964451		True				
ANR	964465	Symbol	v6		964451						
ANR	964466	Symbol	v6 . sin6_family		964451						
ANR	964467	Symbol	AF_INET6		964451						
ANR	964468	Function	condor_sockaddr :: is_addr_any	92:0:1811:2016							
ANR	964469	FunctionDef	condor_sockaddr :: is_addr_any ()		964468	0					
ANR	964470	CompoundStatement		93:0:1853:2016	964468	0					
ANR	964471	IfStatement	if ( is_ipv4 ( ) )		964468	0					
ANR	964472	Condition	is_ipv4 ( )	94:5:1860:1868	964468	0	True				
ANR	964473	CallExpression	is_ipv4 ( )		964468	0					
ANR	964474	Callee	is_ipv4		964468	0					
ANR	964475	Identifier	is_ipv4		964468	0					
ANR	964476	ArgumentList			964468	1					
ANR	964477	CompoundStatement		2:16:17:17	964468	1					
ANR	964478	ReturnStatement	return v4 . sin_addr . s_addr == ntohl ( INADDR_ANY ) ;	95:2:1875:1921	964468	0	True				
ANR	964479	EqualityExpression	v4 . sin_addr . s_addr == ntohl ( INADDR_ANY )		964468	0		==			
ANR	964480	MemberAccess	v4 . sin_addr . s_addr		964468	0					
ANR	964481	MemberAccess	v4 . sin_addr		964468	0					
ANR	964482	Identifier	v4		964468	0					
ANR	964483	Identifier	sin_addr		964468	1					
ANR	964484	Identifier	s_addr		964468	1					
ANR	964485	CallExpression	ntohl ( INADDR_ANY )		964468	1					
ANR	964486	Callee	ntohl		964468	0					
ANR	964487	Identifier	ntohl		964468	0					
ANR	964488	ArgumentList	INADDR_ANY		964468	1					
ANR	964489	Argument	INADDR_ANY		964468	0					
ANR	964490	Identifier	INADDR_ANY		964468	0					
ANR	964491	ElseStatement	else		964468	0					
ANR	964492	IfStatement	if ( is_ipv6 ( ) )		964468	0					
ANR	964493	Condition	is_ipv6 ( )	97:10:1936:1944	964468	0	True				
ANR	964494	CallExpression	is_ipv6 ( )		964468	0					
ANR	964495	Callee	is_ipv6		964468	0					
ANR	964496	Identifier	is_ipv6		964468	0					
ANR	964497	ArgumentList			964468	1					
ANR	964498	CompoundStatement		5:21:93:93	964468	1					
ANR	964499	ReturnStatement	return IN6_IS_ADDR_UNSPECIFIED ( & v6 . sin6_addr ) ;	98:2:1951:1996	964468	0	True				
ANR	964500	CallExpression	IN6_IS_ADDR_UNSPECIFIED ( & v6 . sin6_addr )		964468	0					
ANR	964501	Callee	IN6_IS_ADDR_UNSPECIFIED		964468	0					
ANR	964502	Identifier	IN6_IS_ADDR_UNSPECIFIED		964468	0					
ANR	964503	ArgumentList	& v6 . sin6_addr		964468	1					
ANR	964504	Argument	& v6 . sin6_addr		964468	0					
ANR	964505	UnaryOperationExpression	& v6 . sin6_addr		964468	0					
ANR	964506	UnaryOperator	&		964468	0					
ANR	964507	MemberAccess	v6 . sin6_addr		964468	1					
ANR	964508	Identifier	v6		964468	0					
ANR	964509	Identifier	sin6_addr		964468	1					
ANR	964510	ReturnStatement	return false ;	100:1:2002:2014	964468	1	True				
ANR	964511	Identifier	false		964468	0					
ANR	964512	ReturnType	bool		964468	1					
ANR	964513	Identifier	condor_sockaddr :: is_addr_any		964468	2					
ANR	964514	ParameterList			964468	3					
ANR	964515	CFGEntryNode	ENTRY		964468		True				
ANR	964516	CFGExitNode	EXIT		964468		True				
ANR	964517	Symbol	v6		964468						
ANR	964518	Symbol	v4 . sin_addr . s_addr		964468						
ANR	964519	Symbol	IN6_IS_ADDR_UNSPECIFIED		964468						
ANR	964520	Symbol	v4 . sin_addr		964468						
ANR	964521	Symbol	& v6 . sin6_addr		964468						
ANR	964522	Symbol	false		964468						
ANR	964523	Symbol	ntohl		964468						
ANR	964524	Symbol	INADDR_ANY		964468						
ANR	964525	Symbol	is_ipv6		964468						
ANR	964526	Symbol	& v6		964468						
ANR	964527	Symbol	is_ipv4		964468						
ANR	964528	Symbol	v4		964468						
ANR	964529	Function	condor_sockaddr :: set_addr_any	103:0:2019:2177							
ANR	964530	FunctionDef	condor_sockaddr :: set_addr_any ()		964529	0					
ANR	964531	CompoundStatement		104:0:2056:2177	964529	0					
ANR	964532	IfStatement	if ( is_ipv4 ( ) )		964529	0					
ANR	964533	Condition	is_ipv4 ( )	105:5:2063:2071	964529	0	True				
ANR	964534	CallExpression	is_ipv4 ( )		964529	0					
ANR	964535	Callee	is_ipv4		964529	0					
ANR	964536	Identifier	is_ipv4		964529	0					
ANR	964537	ArgumentList			964529	1					
ANR	964538	CompoundStatement		2:16:17:17	964529	1					
ANR	964539	ExpressionStatement	v4 . sin_addr . s_addr = ntohl ( INADDR_ANY )	106:2:2078:2116	964529	0	True				
ANR	964540	AssignmentExpression	v4 . sin_addr . s_addr = ntohl ( INADDR_ANY )		964529	0		=			
ANR	964541	MemberAccess	v4 . sin_addr . s_addr		964529	0					
ANR	964542	MemberAccess	v4 . sin_addr		964529	0					
ANR	964543	Identifier	v4		964529	0					
ANR	964544	Identifier	sin_addr		964529	1					
ANR	964545	Identifier	s_addr		964529	1					
ANR	964546	CallExpression	ntohl ( INADDR_ANY )		964529	1					
ANR	964547	Callee	ntohl		964529	0					
ANR	964548	Identifier	ntohl		964529	0					
ANR	964549	ArgumentList	INADDR_ANY		964529	1					
ANR	964550	Argument	INADDR_ANY		964529	0					
ANR	964551	Identifier	INADDR_ANY		964529	0					
ANR	964552	ElseStatement	else		964529	0					
ANR	964553	IfStatement	if ( is_ipv6 ( ) )		964529	0					
ANR	964554	Condition	is_ipv6 ( )	108:10:2131:2139	964529	0	True				
ANR	964555	CallExpression	is_ipv6 ( )		964529	0					
ANR	964556	Callee	is_ipv6		964529	0					
ANR	964557	Identifier	is_ipv6		964529	0					
ANR	964558	ArgumentList			964529	1					
ANR	964559	CompoundStatement		5:21:85:85	964529	1					
ANR	964560	ExpressionStatement	v6 . sin6_addr = in6addr_any	109:2:2146:2172	964529	0	True				
ANR	964561	AssignmentExpression	v6 . sin6_addr = in6addr_any		964529	0		=			
ANR	964562	MemberAccess	v6 . sin6_addr		964529	0					
ANR	964563	Identifier	v6		964529	0					
ANR	964564	Identifier	sin6_addr		964529	1					
ANR	964565	Identifier	in6addr_any		964529	1					
ANR	964566	ReturnType	void		964529	1					
ANR	964567	Identifier	condor_sockaddr :: set_addr_any		964529	2					
ANR	964568	ParameterList			964529	3					
ANR	964569	CFGEntryNode	ENTRY		964529		True				
ANR	964570	CFGExitNode	EXIT		964529		True				
ANR	964571	Symbol	v6		964529						
ANR	964572	Symbol	v4 . sin_addr . s_addr		964529						
ANR	964573	Symbol	v4 . sin_addr		964529						
ANR	964574	Symbol	ntohl		964529						
ANR	964575	Symbol	INADDR_ANY		964529						
ANR	964576	Symbol	is_ipv6		964529						
ANR	964577	Symbol	in6addr_any		964529						
ANR	964578	Symbol	is_ipv4		964529						
ANR	964579	Symbol	v6 . sin6_addr		964529						
ANR	964580	Symbol	v4		964529						
ANR	964581	Function	condor_sockaddr :: is_loopback	113:0:2180:2364							
ANR	964582	FunctionDef	condor_sockaddr :: is_loopback ()		964581	0					
ANR	964583	CompoundStatement		114:0:2222:2364	964581	0					
ANR	964584	IfStatement	if ( is_ipv4 ( ) )		964581	0					
ANR	964585	Condition	is_ipv4 ( )	115:5:2229:2237	964581	0	True				
ANR	964586	CallExpression	is_ipv4 ( )		964581	0					
ANR	964587	Callee	is_ipv4		964581	0					
ANR	964588	Identifier	is_ipv4		964581	0					
ANR	964589	ArgumentList			964581	1					
ANR	964590	CompoundStatement		2:16:17:17	964581	1					
ANR	964591	ReturnStatement	return ( ( v4 . sin_addr . s_addr & 0xFF ) == 0x7F ) ;	116:5:2247:2291	964581	0	True				
ANR	964592	EqualityExpression	( v4 . sin_addr . s_addr & 0xFF ) == 0x7F		964581	0		==			
ANR	964593	BitAndExpression	v4 . sin_addr . s_addr & 0xFF		964581	0		&			
ANR	964594	MemberAccess	v4 . sin_addr . s_addr		964581	0					
ANR	964595	MemberAccess	v4 . sin_addr		964581	0					
ANR	964596	Identifier	v4		964581	0					
ANR	964597	Identifier	sin_addr		964581	1					
ANR	964598	Identifier	s_addr		964581	1					
ANR	964599	PrimaryExpression	0xFF		964581	1					
ANR	964600	PrimaryExpression	0x7F		964581	1					
ANR	964601	ElseStatement	else		964581	0					
ANR	964602	CompoundStatement		5:6:88:88	964581	0					
ANR	964603	ReturnStatement	return IN6_IS_ADDR_LOOPBACK ( & v6 . sin6_addr ) ;	119:2:2315:2359	964581	0	True				
ANR	964604	CallExpression	IN6_IS_ADDR_LOOPBACK ( & v6 . sin6_addr )		964581	0					
ANR	964605	Callee	IN6_IS_ADDR_LOOPBACK		964581	0					
ANR	964606	Identifier	IN6_IS_ADDR_LOOPBACK		964581	0					
ANR	964607	ArgumentList	& v6 . sin6_addr		964581	1					
ANR	964608	Argument	& v6 . sin6_addr		964581	0					
ANR	964609	UnaryOperationExpression	& v6 . sin6_addr		964581	0					
ANR	964610	UnaryOperator	&		964581	0					
ANR	964611	MemberAccess	v6 . sin6_addr		964581	1					
ANR	964612	Identifier	v6		964581	0					
ANR	964613	Identifier	sin6_addr		964581	1					
ANR	964614	ReturnType	bool		964581	1					
ANR	964615	Identifier	condor_sockaddr :: is_loopback		964581	2					
ANR	964616	ParameterList			964581	3					
ANR	964617	CFGEntryNode	ENTRY		964581		True				
ANR	964618	CFGExitNode	EXIT		964581		True				
ANR	964619	Symbol	IN6_IS_ADDR_LOOPBACK		964581						
ANR	964620	Symbol	v6		964581						
ANR	964621	Symbol	v4 . sin_addr . s_addr		964581						
ANR	964622	Symbol	v4 . sin_addr		964581						
ANR	964623	Symbol	& v6 . sin6_addr		964581						
ANR	964624	Symbol	& v6		964581						
ANR	964625	Symbol	is_ipv4		964581						
ANR	964626	Symbol	v4		964581						
ANR	964627	Function	condor_sockaddr :: set_loopback	123:0:2367:2520							
ANR	964628	FunctionDef	condor_sockaddr :: set_loopback ()		964627	0					
ANR	964629	CompoundStatement		124:0:2404:2520	964627	0					
ANR	964630	IfStatement	if ( is_ipv4 ( ) )		964627	0					
ANR	964631	Condition	is_ipv4 ( )	125:5:2411:2419	964627	0	True				
ANR	964632	CallExpression	is_ipv4 ( )		964627	0					
ANR	964633	Callee	is_ipv4		964627	0					
ANR	964634	Identifier	is_ipv4		964627	0					
ANR	964635	ArgumentList			964627	1					
ANR	964636	CompoundStatement		2:16:17:17	964627	1					
ANR	964637	ExpressionStatement	v4 . sin_addr . s_addr = ntohl ( INADDR_LOOPBACK )	126:2:2426:2469	964627	0	True				
ANR	964638	AssignmentExpression	v4 . sin_addr . s_addr = ntohl ( INADDR_LOOPBACK )		964627	0		=			
ANR	964639	MemberAccess	v4 . sin_addr . s_addr		964627	0					
ANR	964640	MemberAccess	v4 . sin_addr		964627	0					
ANR	964641	Identifier	v4		964627	0					
ANR	964642	Identifier	sin_addr		964627	1					
ANR	964643	Identifier	s_addr		964627	1					
ANR	964644	CallExpression	ntohl ( INADDR_LOOPBACK )		964627	1					
ANR	964645	Callee	ntohl		964627	0					
ANR	964646	Identifier	ntohl		964627	0					
ANR	964647	ArgumentList	INADDR_LOOPBACK		964627	1					
ANR	964648	Argument	INADDR_LOOPBACK		964627	0					
ANR	964649	Identifier	INADDR_LOOPBACK		964627	0					
ANR	964650	ElseStatement	else		964627	0					
ANR	964651	CompoundStatement		5:6:75:75	964627	0					
ANR	964652	ExpressionStatement	v6 . sin6_addr = in6addr_loopback	129:2:2484:2515	964627	0	True				
ANR	964653	AssignmentExpression	v6 . sin6_addr = in6addr_loopback		964627	0		=			
ANR	964654	MemberAccess	v6 . sin6_addr		964627	0					
ANR	964655	Identifier	v6		964627	0					
ANR	964656	Identifier	sin6_addr		964627	1					
ANR	964657	Identifier	in6addr_loopback		964627	1					
ANR	964658	ReturnType	void		964627	1					
ANR	964659	Identifier	condor_sockaddr :: set_loopback		964627	2					
ANR	964660	ParameterList			964627	3					
ANR	964661	CFGEntryNode	ENTRY		964627		True				
ANR	964662	CFGExitNode	EXIT		964627		True				
ANR	964663	Symbol	v6		964627						
ANR	964664	Symbol	v4 . sin_addr . s_addr		964627						
ANR	964665	Symbol	v4 . sin_addr		964627						
ANR	964666	Symbol	ntohl		964627						
ANR	964667	Symbol	in6addr_loopback		964627						
ANR	964668	Symbol	INADDR_LOOPBACK		964627						
ANR	964669	Symbol	is_ipv4		964627						
ANR	964670	Symbol	v6 . sin6_addr		964627						
ANR	964671	Symbol	v4		964627						
ANR	964672	Function	condor_sockaddr :: get_port	133:0:2523:2665							
ANR	964673	FunctionDef	condor_sockaddr :: get_port ()		964672	0					
ANR	964674	CompoundStatement		134:0:2572:2665	964672	0					
ANR	964675	IfStatement	if ( is_ipv4 ( ) )		964672	0					
ANR	964676	Condition	is_ipv4 ( )	135:5:2579:2587	964672	0	True				
ANR	964677	CallExpression	is_ipv4 ( )		964672	0					
ANR	964678	Callee	is_ipv4		964672	0					
ANR	964679	Identifier	is_ipv4		964672	0					
ANR	964680	ArgumentList			964672	1					
ANR	964681	CompoundStatement		2:16:17:17	964672	1					
ANR	964682	ReturnStatement	return ntohs ( v4 . sin_port ) ;	136:2:2594:2619	964672	0	True				
ANR	964683	CallExpression	ntohs ( v4 . sin_port )		964672	0					
ANR	964684	Callee	ntohs		964672	0					
ANR	964685	Identifier	ntohs		964672	0					
ANR	964686	ArgumentList	v4 . sin_port		964672	1					
ANR	964687	Argument	v4 . sin_port		964672	0					
ANR	964688	MemberAccess	v4 . sin_port		964672	0					
ANR	964689	Identifier	v4		964672	0					
ANR	964690	Identifier	sin_port		964672	1					
ANR	964691	ElseStatement	else		964672	0					
ANR	964692	CompoundStatement		5:6:57:57	964672	0					
ANR	964693	ReturnStatement	return ntohs ( v6 . sin6_port ) ;	139:2:2634:2660	964672	0	True				
ANR	964694	CallExpression	ntohs ( v6 . sin6_port )		964672	0					
ANR	964695	Callee	ntohs		964672	0					
ANR	964696	Identifier	ntohs		964672	0					
ANR	964697	ArgumentList	v6 . sin6_port		964672	1					
ANR	964698	Argument	v6 . sin6_port		964672	0					
ANR	964699	MemberAccess	v6 . sin6_port		964672	0					
ANR	964700	Identifier	v6		964672	0					
ANR	964701	Identifier	sin6_port		964672	1					
ANR	964702	ReturnType	unsigned short		964672	1					
ANR	964703	Identifier	condor_sockaddr :: get_port		964672	2					
ANR	964704	ParameterList			964672	3					
ANR	964705	CFGEntryNode	ENTRY		964672		True				
ANR	964706	CFGExitNode	EXIT		964672		True				
ANR	964707	Symbol	ntohs		964672						
ANR	964708	Symbol	v6		964672						
ANR	964709	Symbol	v6 . sin6_port		964672						
ANR	964710	Symbol	v4 . sin_port		964672						
ANR	964711	Symbol	is_ipv4		964672						
ANR	964712	Symbol	v4		964672						
ANR	964713	Function	condor_sockaddr :: set_port	143:0:2668:2813							
ANR	964714	FunctionDef	condor_sockaddr :: set_port (unsigned short port)		964713	0					
ANR	964715	CompoundStatement		144:0:2720:2813	964713	0					
ANR	964716	IfStatement	if ( is_ipv4 ( ) )		964713	0					
ANR	964717	Condition	is_ipv4 ( )	145:5:2727:2735	964713	0	True				
ANR	964718	CallExpression	is_ipv4 ( )		964713	0					
ANR	964719	Callee	is_ipv4		964713	0					
ANR	964720	Identifier	is_ipv4		964713	0					
ANR	964721	ArgumentList			964713	1					
ANR	964722	CompoundStatement		2:16:17:17	964713	1					
ANR	964723	ExpressionStatement	v4 . sin_port = htons ( port )	146:2:2742:2767	964713	0	True				
ANR	964724	AssignmentExpression	v4 . sin_port = htons ( port )		964713	0		=			
ANR	964725	MemberAccess	v4 . sin_port		964713	0					
ANR	964726	Identifier	v4		964713	0					
ANR	964727	Identifier	sin_port		964713	1					
ANR	964728	CallExpression	htons ( port )		964713	1					
ANR	964729	Callee	htons		964713	0					
ANR	964730	Identifier	htons		964713	0					
ANR	964731	ArgumentList	port		964713	1					
ANR	964732	Argument	port		964713	0					
ANR	964733	Identifier	port		964713	0					
ANR	964734	ElseStatement	else		964713	0					
ANR	964735	CompoundStatement		5:6:57:57	964713	0					
ANR	964736	ExpressionStatement	v6 . sin6_port = htons ( port )	149:2:2782:2808	964713	0	True				
ANR	964737	AssignmentExpression	v6 . sin6_port = htons ( port )		964713	0		=			
ANR	964738	MemberAccess	v6 . sin6_port		964713	0					
ANR	964739	Identifier	v6		964713	0					
ANR	964740	Identifier	sin6_port		964713	1					
ANR	964741	CallExpression	htons ( port )		964713	1					
ANR	964742	Callee	htons		964713	0					
ANR	964743	Identifier	htons		964713	0					
ANR	964744	ArgumentList	port		964713	1					
ANR	964745	Argument	port		964713	0					
ANR	964746	Identifier	port		964713	0					
ANR	964747	ReturnType	void		964713	1					
ANR	964748	Identifier	condor_sockaddr :: set_port		964713	2					
ANR	964749	ParameterList	unsigned short port		964713	3					
ANR	964750	Parameter	unsigned short port	143:31:2699:2717	964713	0	True				
ANR	964751	ParameterType	unsigned short		964713	0					
ANR	964752	Identifier	port		964713	1					
ANR	964753	CFGEntryNode	ENTRY		964713		True				
ANR	964754	CFGExitNode	EXIT		964713		True				
ANR	964755	Symbol	v6		964713						
ANR	964756	Symbol	v6 . sin6_port		964713						
ANR	964757	Symbol	port		964713						
ANR	964758	Symbol	v4 . sin_port		964713						
ANR	964759	Symbol	htons		964713						
ANR	964760	Symbol	is_ipv4		964713						
ANR	964761	Symbol	v4		964713						
ANR	964762	Function	condor_sockaddr :: to_sinful	153:0:2816:3198							
ANR	964763	FunctionDef	condor_sockaddr :: to_sinful ()		964762	0					
ANR	964764	CompoundStatement		154:0:2860:3198	964762	0					
ANR	964765	IdentifierDeclStatement	MyString ret ;	155:1:2863:2875	964762	0	True				
ANR	964766	IdentifierDecl	ret		964762	0					
ANR	964767	IdentifierDeclType	MyString		964762	0					
ANR	964768	Identifier	ret		964762	1					
ANR	964769	IdentifierDeclStatement	char tmp [ IP_STRING_BUF_SIZE ] ;	156:1:2878:2906	964762	1	True				
ANR	964770	IdentifierDecl	tmp [ IP_STRING_BUF_SIZE ]		964762	0					
ANR	964771	IdentifierDeclType	char [ IP_STRING_BUF_SIZE ]		964762	0					
ANR	964772	Identifier	tmp		964762	1					
ANR	964773	Identifier	IP_STRING_BUF_SIZE		964762	2					
ANR	964774	IfStatement	"if ( ! to_ip_string_ex ( tmp , IP_STRING_BUF_SIZE ) )"		964762	2					
ANR	964775	Condition	"! to_ip_string_ex ( tmp , IP_STRING_BUF_SIZE )"	158:6:2973:3013	964762	0	True				
ANR	964776	UnaryOperationExpression	"! to_ip_string_ex ( tmp , IP_STRING_BUF_SIZE )"		964762	0					
ANR	964777	UnaryOperator	!		964762	0					
ANR	964778	CallExpression	"to_ip_string_ex ( tmp , IP_STRING_BUF_SIZE )"		964762	1					
ANR	964779	Callee	to_ip_string_ex		964762	0					
ANR	964780	Identifier	to_ip_string_ex		964762	0					
ANR	964781	ArgumentList	tmp		964762	1					
ANR	964782	Argument	tmp		964762	0					
ANR	964783	Identifier	tmp		964762	0					
ANR	964784	Argument	IP_STRING_BUF_SIZE		964762	1					
ANR	964785	Identifier	IP_STRING_BUF_SIZE		964762	0					
ANR	964786	ReturnStatement	return ret ;	159:2:3019:3029	964762	1	True				
ANR	964787	Identifier	ret		964762	0					
ANR	964788	IfStatement	if ( is_ipv4 ( ) )		964762	3					
ANR	964789	Condition	is_ipv4 ( )	161:5:3037:3045	964762	0	True				
ANR	964790	CallExpression	is_ipv4 ( )		964762	0					
ANR	964791	Callee	is_ipv4		964762	0					
ANR	964792	Identifier	is_ipv4		964762	0					
ANR	964793	ArgumentList			964762	1					
ANR	964794	CompoundStatement		8:16:187:187	964762	1					
ANR	964795	ExpressionStatement	"ret . sprintf ( ""<%s:%d>"" , tmp , ntohs ( v4 . sin_port ) )"	162:2:3052:3099	964762	0	True				
ANR	964796	CallExpression	"ret . sprintf ( ""<%s:%d>"" , tmp , ntohs ( v4 . sin_port ) )"		964762	0					
ANR	964797	Callee	ret . sprintf		964762	0					
ANR	964798	MemberAccess	ret . sprintf		964762	0					
ANR	964799	Identifier	ret		964762	0					
ANR	964800	Identifier	sprintf		964762	1					
ANR	964801	ArgumentList	"""<%s:%d>"""		964762	1					
ANR	964802	Argument	"""<%s:%d>"""		964762	0					
ANR	964803	PrimaryExpression	"""<%s:%d>"""		964762	0					
ANR	964804	Argument	tmp		964762	1					
ANR	964805	Identifier	tmp		964762	0					
ANR	964806	Argument	ntohs ( v4 . sin_port )		964762	2					
ANR	964807	CallExpression	ntohs ( v4 . sin_port )		964762	0					
ANR	964808	Callee	ntohs		964762	0					
ANR	964809	Identifier	ntohs		964762	0					
ANR	964810	ArgumentList	v4 . sin_port		964762	1					
ANR	964811	Argument	v4 . sin_port		964762	0					
ANR	964812	MemberAccess	v4 . sin_port		964762	0					
ANR	964813	Identifier	v4		964762	0					
ANR	964814	Identifier	sin_port		964762	1					
ANR	964815	ElseStatement	else		964762	0					
ANR	964816	IfStatement	if ( is_ipv6 ( ) )		964762	0					
ANR	964817	Condition	is_ipv6 ( )	164:10:3114:3122	964762	0	True				
ANR	964818	CallExpression	is_ipv6 ( )		964762	0					
ANR	964819	Callee	is_ipv6		964762	0					
ANR	964820	Identifier	is_ipv6		964762	0					
ANR	964821	ArgumentList			964762	1					
ANR	964822	CompoundStatement		11:21:264:264	964762	1					
ANR	964823	ExpressionStatement	"ret . sprintf ( ""<[%s]:%d>"" , tmp , ntohs ( v6 . sin6_port ) )"	165:2:3129:3179	964762	0	True				
ANR	964824	CallExpression	"ret . sprintf ( ""<[%s]:%d>"" , tmp , ntohs ( v6 . sin6_port ) )"		964762	0					
ANR	964825	Callee	ret . sprintf		964762	0					
ANR	964826	MemberAccess	ret . sprintf		964762	0					
ANR	964827	Identifier	ret		964762	0					
ANR	964828	Identifier	sprintf		964762	1					
ANR	964829	ArgumentList	"""<[%s]:%d>"""		964762	1					
ANR	964830	Argument	"""<[%s]:%d>"""		964762	0					
ANR	964831	PrimaryExpression	"""<[%s]:%d>"""		964762	0					
ANR	964832	Argument	tmp		964762	1					
ANR	964833	Identifier	tmp		964762	0					
ANR	964834	Argument	ntohs ( v6 . sin6_port )		964762	2					
ANR	964835	CallExpression	ntohs ( v6 . sin6_port )		964762	0					
ANR	964836	Callee	ntohs		964762	0					
ANR	964837	Identifier	ntohs		964762	0					
ANR	964838	ArgumentList	v6 . sin6_port		964762	1					
ANR	964839	Argument	v6 . sin6_port		964762	0					
ANR	964840	MemberAccess	v6 . sin6_port		964762	0					
ANR	964841	Identifier	v6		964762	0					
ANR	964842	Identifier	sin6_port		964762	1					
ANR	964843	ReturnStatement	return ret ;	168:1:3186:3196	964762	4	True				
ANR	964844	Identifier	ret		964762	0					
ANR	964845	ReturnType	MyString		964762	1					
ANR	964846	Identifier	condor_sockaddr :: to_sinful		964762	2					
ANR	964847	ParameterList			964762	3					
ANR	964848	CFGEntryNode	ENTRY		964762		True				
ANR	964849	CFGExitNode	EXIT		964762		True				
ANR	964850	Symbol	ret		964762						
ANR	964851	Symbol	ntohs		964762						
ANR	964852	Symbol	v6		964762						
ANR	964853	Symbol	IP_STRING_BUF_SIZE		964762						
ANR	964854	Symbol	to_ip_string_ex		964762						
ANR	964855	Symbol	v6 . sin6_port		964762						
ANR	964856	Symbol	tmp		964762						
ANR	964857	Symbol	v4 . sin_port		964762						
ANR	964858	Symbol	is_ipv6		964762						
ANR	964859	Symbol	is_ipv4		964762						
ANR	964860	Symbol	v4		964762						
ANR	964861	Function	condor_sockaddr :: to_sinful	171:0:3201:3604							
ANR	964862	FunctionDef	"condor_sockaddr :: to_sinful (char * buf , int len)"		964861	0					
ANR	964863	CompoundStatement		172:0:3266:3604	964861	0					
ANR	964864	IdentifierDeclStatement	char tmp [ IP_STRING_BUF_SIZE ] ;	173:1:3269:3297	964861	0	True				
ANR	964865	IdentifierDecl	tmp [ IP_STRING_BUF_SIZE ]		964861	0					
ANR	964866	IdentifierDeclType	char [ IP_STRING_BUF_SIZE ]		964861	0					
ANR	964867	Identifier	tmp		964861	1					
ANR	964868	Identifier	IP_STRING_BUF_SIZE		964861	2					
ANR	964869	IfStatement	"if ( ! to_ip_string_ex ( tmp , IP_STRING_BUF_SIZE ) )"		964861	1					
ANR	964870	Condition	"! to_ip_string_ex ( tmp , IP_STRING_BUF_SIZE )"	175:6:3364:3404	964861	0	True				
ANR	964871	UnaryOperationExpression	"! to_ip_string_ex ( tmp , IP_STRING_BUF_SIZE )"		964861	0					
ANR	964872	UnaryOperator	!		964861	0					
ANR	964873	CallExpression	"to_ip_string_ex ( tmp , IP_STRING_BUF_SIZE )"		964861	1					
ANR	964874	Callee	to_ip_string_ex		964861	0					
ANR	964875	Identifier	to_ip_string_ex		964861	0					
ANR	964876	ArgumentList	tmp		964861	1					
ANR	964877	Argument	tmp		964861	0					
ANR	964878	Identifier	tmp		964861	0					
ANR	964879	Argument	IP_STRING_BUF_SIZE		964861	1					
ANR	964880	Identifier	IP_STRING_BUF_SIZE		964861	0					
ANR	964881	ReturnStatement	return NULL ;	176:2:3410:3421	964861	1	True				
ANR	964882	Identifier	NULL		964861	0					
ANR	964883	IfStatement	if ( is_ipv4 ( ) )		964861	2					
ANR	964884	Condition	is_ipv4 ( )	178:5:3429:3437	964861	0	True				
ANR	964885	CallExpression	is_ipv4 ( )		964861	0					
ANR	964886	Callee	is_ipv4		964861	0					
ANR	964887	Identifier	is_ipv4		964861	0					
ANR	964888	ArgumentList			964861	1					
ANR	964889	CompoundStatement		7:16:173:173	964861	1					
ANR	964890	ExpressionStatement	"snprintf ( buf , len , ""<%s:%d>"" , tmp , ntohs ( v4 . sin_port ) )"	179:2:3444:3498	964861	0	True				
ANR	964891	CallExpression	"snprintf ( buf , len , ""<%s:%d>"" , tmp , ntohs ( v4 . sin_port ) )"		964861	0					
ANR	964892	Callee	snprintf		964861	0					
ANR	964893	Identifier	snprintf		964861	0					
ANR	964894	ArgumentList	buf		964861	1					
ANR	964895	Argument	buf		964861	0					
ANR	964896	Identifier	buf		964861	0					
ANR	964897	Argument	len		964861	1					
ANR	964898	Identifier	len		964861	0					
ANR	964899	Argument	"""<%s:%d>"""		964861	2					
ANR	964900	PrimaryExpression	"""<%s:%d>"""		964861	0					
ANR	964901	Argument	tmp		964861	3					
ANR	964902	Identifier	tmp		964861	0					
ANR	964903	Argument	ntohs ( v4 . sin_port )		964861	4					
ANR	964904	CallExpression	ntohs ( v4 . sin_port )		964861	0					
ANR	964905	Callee	ntohs		964861	0					
ANR	964906	Identifier	ntohs		964861	0					
ANR	964907	ArgumentList	v4 . sin_port		964861	1					
ANR	964908	Argument	v4 . sin_port		964861	0					
ANR	964909	MemberAccess	v4 . sin_port		964861	0					
ANR	964910	Identifier	v4		964861	0					
ANR	964911	Identifier	sin_port		964861	1					
ANR	964912	ElseStatement	else		964861	0					
ANR	964913	IfStatement	if ( is_ipv6 ( ) )		964861	0					
ANR	964914	Condition	is_ipv6 ( )	181:10:3513:3521	964861	0	True				
ANR	964915	CallExpression	is_ipv6 ( )		964861	0					
ANR	964916	Callee	is_ipv6		964861	0					
ANR	964917	Identifier	is_ipv6		964861	0					
ANR	964918	ArgumentList			964861	1					
ANR	964919	CompoundStatement		10:21:257:257	964861	1					
ANR	964920	ExpressionStatement	"snprintf ( buf , len , ""<[%s]:%d>"" , tmp , ntohs ( v6 . sin6_port ) )"	182:2:3528:3585	964861	0	True				
ANR	964921	CallExpression	"snprintf ( buf , len , ""<[%s]:%d>"" , tmp , ntohs ( v6 . sin6_port ) )"		964861	0					
ANR	964922	Callee	snprintf		964861	0					
ANR	964923	Identifier	snprintf		964861	0					
ANR	964924	ArgumentList	buf		964861	1					
ANR	964925	Argument	buf		964861	0					
ANR	964926	Identifier	buf		964861	0					
ANR	964927	Argument	len		964861	1					
ANR	964928	Identifier	len		964861	0					
ANR	964929	Argument	"""<[%s]:%d>"""		964861	2					
ANR	964930	PrimaryExpression	"""<[%s]:%d>"""		964861	0					
ANR	964931	Argument	tmp		964861	3					
ANR	964932	Identifier	tmp		964861	0					
ANR	964933	Argument	ntohs ( v6 . sin6_port )		964861	4					
ANR	964934	CallExpression	ntohs ( v6 . sin6_port )		964861	0					
ANR	964935	Callee	ntohs		964861	0					
ANR	964936	Identifier	ntohs		964861	0					
ANR	964937	ArgumentList	v6 . sin6_port		964861	1					
ANR	964938	Argument	v6 . sin6_port		964861	0					
ANR	964939	MemberAccess	v6 . sin6_port		964861	0					
ANR	964940	Identifier	v6		964861	0					
ANR	964941	Identifier	sin6_port		964861	1					
ANR	964942	ReturnStatement	return buf ;	185:1:3592:3602	964861	3	True				
ANR	964943	Identifier	buf		964861	0					
ANR	964944	ReturnType	const char *		964861	1					
ANR	964945	Identifier	condor_sockaddr :: to_sinful		964861	2					
ANR	964946	ParameterList	"char * buf , int len"		964861	3					
ANR	964947	Parameter	char * buf	171:39:3240:3248	964861	0	True				
ANR	964948	ParameterType	char *		964861	0					
ANR	964949	Identifier	buf		964861	1					
ANR	964950	Parameter	int len	171:50:3251:3257	964861	1	True				
ANR	964951	ParameterType	int		964861	0					
ANR	964952	Identifier	len		964861	1					
ANR	964953	CFGEntryNode	ENTRY		964861		True				
ANR	964954	CFGExitNode	EXIT		964861		True				
ANR	964955	Symbol	v6		964861						
ANR	964956	Symbol	IP_STRING_BUF_SIZE		964861						
ANR	964957	Symbol	NULL		964861						
ANR	964958	Symbol	v6 . sin6_port		964861						
ANR	964959	Symbol	is_ipv6		964861						
ANR	964960	Symbol	is_ipv4		964861						
ANR	964961	Symbol	ntohs		964861						
ANR	964962	Symbol	buf		964861						
ANR	964963	Symbol	len		964861						
ANR	964964	Symbol	to_ip_string_ex		964861						
ANR	964965	Symbol	tmp		964861						
ANR	964966	Symbol	v4 . sin_port		964861						
ANR	964967	Symbol	v4		964861						
ANR	964968	Function	condor_sockaddr :: from_sinful	188:0:3607:3704							
ANR	964969	FunctionDef	condor_sockaddr :: from_sinful (const MyString & sinful)		964968	0					
ANR	964970	CompoundStatement		188:58:3665:3704	964968	0					
ANR	964971	ReturnStatement	return from_sinful ( sinful . Value ( ) ) ;	189:1:3668:3702	964968	0	True				
ANR	964972	CallExpression	from_sinful ( sinful . Value ( ) )		964968	0					
ANR	964973	Callee	from_sinful		964968	0					
ANR	964974	Identifier	from_sinful		964968	0					
ANR	964975	ArgumentList	sinful . Value ( )		964968	1					
ANR	964976	Argument	sinful . Value ( )		964968	0					
ANR	964977	CallExpression	sinful . Value ( )		964968	0					
ANR	964978	Callee	sinful . Value		964968	0					
ANR	964979	MemberAccess	sinful . Value		964968	0					
ANR	964980	Identifier	sinful		964968	0					
ANR	964981	Identifier	Value		964968	1					
ANR	964982	ArgumentList			964968	1					
ANR	964983	ReturnType	bool		964968	1					
ANR	964984	Identifier	condor_sockaddr :: from_sinful		964968	2					
ANR	964985	ParameterList	const MyString & sinful		964968	3					
ANR	964986	Parameter	const MyString & sinful	188:34:3641:3662	964968	0	True				
ANR	964987	ParameterType	const MyString &		964968	0					
ANR	964988	Identifier	sinful		964968	1					
ANR	964989	CFGEntryNode	ENTRY		964968		True				
ANR	964990	CFGExitNode	EXIT		964968		True				
ANR	964991	Symbol	from_sinful		964968						
ANR	964992	Symbol	sinful . Value		964968						
ANR	964993	Symbol	sinful		964968						
ANR	964994	Function	condor_sockaddr :: from_sinful	193:0:3769:5595							
ANR	964995	FunctionDef	condor_sockaddr :: from_sinful (const char * sinful)		964994	0					
ANR	964996	CompoundStatement		194:0:3823:5595	964994	0					
ANR	964997	IdentifierDeclStatement	const char * addr = sinful ;	195:1:3826:3851	964994	0	True				
ANR	964998	IdentifierDecl	* addr = sinful		964994	0					
ANR	964999	IdentifierDeclType	const char *		964994	0					
ANR	965000	Identifier	addr		964994	1					
ANR	965001	AssignmentExpression	* addr = sinful		964994	2		=			
ANR	965002	Identifier	sinful		964994	0					
ANR	965003	Identifier	sinful		964994	1					
ANR	965004	IdentifierDeclStatement	bool ipv6 = false ;	196:1:3854:3871	964994	1	True				
ANR	965005	IdentifierDecl	ipv6 = false		964994	0					
ANR	965006	IdentifierDeclType	bool		964994	0					
ANR	965007	Identifier	ipv6		964994	1					
ANR	965008	AssignmentExpression	ipv6 = false		964994	2		=			
ANR	965009	Identifier	false		964994	0					
ANR	965010	Identifier	false		964994	1					
ANR	965011	IdentifierDeclStatement	const char * addr_begin = NULL ;	197:1:3874:3903	964994	2	True				
ANR	965012	IdentifierDecl	* addr_begin = NULL		964994	0					
ANR	965013	IdentifierDeclType	const char *		964994	0					
ANR	965014	Identifier	addr_begin		964994	1					
ANR	965015	AssignmentExpression	* addr_begin = NULL		964994	2		=			
ANR	965016	Identifier	NULL		964994	0					
ANR	965017	Identifier	NULL		964994	1					
ANR	965018	IdentifierDeclStatement	const char * port_begin = NULL ;	198:1:3906:3935	964994	3	True				
ANR	965019	IdentifierDecl	* port_begin = NULL		964994	0					
ANR	965020	IdentifierDeclType	const char *		964994	0					
ANR	965021	Identifier	port_begin		964994	1					
ANR	965022	AssignmentExpression	* port_begin = NULL		964994	2		=			
ANR	965023	Identifier	NULL		964994	0					
ANR	965024	Identifier	NULL		964994	1					
ANR	965025	IdentifierDeclStatement	int addr_len = 0 ;	199:1:3938:3954	964994	4	True				
ANR	965026	IdentifierDecl	addr_len = 0		964994	0					
ANR	965027	IdentifierDeclType	int		964994	0					
ANR	965028	Identifier	addr_len		964994	1					
ANR	965029	AssignmentExpression	addr_len = 0		964994	2		=			
ANR	965030	Identifier	addr_len		964994	0					
ANR	965031	PrimaryExpression	0		964994	1					
ANR	965032	IdentifierDeclStatement	int port_len = 0 ;	200:1:3957:3973	964994	5	True				
ANR	965033	IdentifierDecl	port_len = 0		964994	0					
ANR	965034	IdentifierDeclType	int		964994	0					
ANR	965035	Identifier	port_len		964994	1					
ANR	965036	AssignmentExpression	port_len = 0		964994	2		=			
ANR	965037	Identifier	port_len		964994	0					
ANR	965038	PrimaryExpression	0		964994	1					
ANR	965039	IfStatement	if ( * addr != '<' )		964994	6					
ANR	965040	Condition	* addr != '<'	201:6:3981:3992	964994	0	True				
ANR	965041	EqualityExpression	* addr != '<'		964994	0		!=			
ANR	965042	UnaryOperationExpression	* addr		964994	0					
ANR	965043	UnaryOperator	*		964994	0					
ANR	965044	Identifier	addr		964994	1					
ANR	965045	PrimaryExpression	'<'		964994	1					
ANR	965046	ReturnStatement	return false ;	201:21:3996:4008	964994	1	True				
ANR	965047	Identifier	false		964994	0					
ANR	965048	ExpressionStatement	addr ++	202:1:4011:4017	964994	7	True				
ANR	965049	PostIncDecOperationExpression	addr ++		964994	0					
ANR	965050	Identifier	addr		964994	0					
ANR	965051	IncDec	++		964994	1					
ANR	965052	IfStatement	if ( * addr == '[' )		964994	8					
ANR	965053	Condition	* addr == '['	203:6:4025:4036	964994	0	True				
ANR	965054	EqualityExpression	* addr == '['		964994	0		==			
ANR	965055	UnaryOperationExpression	* addr		964994	0					
ANR	965056	UnaryOperator	*		964994	0					
ANR	965057	Identifier	addr		964994	1					
ANR	965058	PrimaryExpression	'['		964994	1					
ANR	965059	CompoundStatement		10:21:216:216	964994	1					
ANR	965060	ExpressionStatement	ipv6 = true	204:2:4044:4055	964994	0	True				
ANR	965061	AssignmentExpression	ipv6 = true		964994	0		=			
ANR	965062	Identifier	ipv6		964994	0					
ANR	965063	Identifier	true		964994	1					
ANR	965064	ExpressionStatement	addr ++	205:2:4059:4065	964994	1	True				
ANR	965065	PostIncDecOperationExpression	addr ++		964994	0					
ANR	965066	Identifier	addr		964994	0					
ANR	965067	IncDec	++		964994	1					
ANR	965068	ExpressionStatement	addr_begin = addr	206:2:4069:4086	964994	2	True				
ANR	965069	AssignmentExpression	addr_begin = addr		964994	0		=			
ANR	965070	Identifier	addr_begin		964994	0					
ANR	965071	Identifier	addr		964994	1					
ANR	965072	WhileStatement	while ( * addr && * addr != ']' )		964994	3					
ANR	965073	Condition	* addr && * addr != ']'	208:9:4098:4118	964994	0	True				
ANR	965074	AndExpression	* addr && * addr != ']'		964994	0		&&			
ANR	965075	UnaryOperationExpression	* addr		964994	0					
ANR	965076	UnaryOperator	*		964994	0					
ANR	965077	Identifier	addr		964994	1					
ANR	965078	EqualityExpression	* addr != ']'		964994	1		!=			
ANR	965079	UnaryOperationExpression	* addr		964994	0					
ANR	965080	UnaryOperator	*		964994	0					
ANR	965081	Identifier	addr		964994	1					
ANR	965082	PrimaryExpression	']'		964994	1					
ANR	965083	ExpressionStatement	addr ++	209:3:4125:4131	964994	1	True				
ANR	965084	PostIncDecOperationExpression	addr ++		964994	0					
ANR	965085	Identifier	addr		964994	0					
ANR	965086	IncDec	++		964994	1					
ANR	965087	IfStatement	if ( * addr == 0 )		964994	4					
ANR	965088	Condition	* addr == 0	211:7:4141:4150	964994	0	True				
ANR	965089	EqualityExpression	* addr == 0		964994	0		==			
ANR	965090	UnaryOperationExpression	* addr		964994	0					
ANR	965091	UnaryOperator	*		964994	0					
ANR	965092	Identifier	addr		964994	1					
ANR	965093	PrimaryExpression	0		964994	1					
ANR	965094	ReturnStatement	return false ;	211:20:4154:4166	964994	1	True				
ANR	965095	Identifier	false		964994	0					
ANR	965096	ExpressionStatement	addr_len = addr - addr_begin	213:2:4171:4197	964994	5	True				
ANR	965097	AssignmentExpression	addr_len = addr - addr_begin		964994	0		=			
ANR	965098	Identifier	addr_len		964994	0					
ANR	965099	AdditiveExpression	addr - addr_begin		964994	1		-			
ANR	965100	Identifier	addr		964994	0					
ANR	965101	Identifier	addr_begin		964994	1					
ANR	965102	ExpressionStatement	addr ++	214:2:4201:4207	964994	6	True				
ANR	965103	PostIncDecOperationExpression	addr ++		964994	0					
ANR	965104	Identifier	addr		964994	0					
ANR	965105	IncDec	++		964994	1					
ANR	965106	ElseStatement	else		964994	0					
ANR	965107	CompoundStatement		23:6:394:394	964994	0					
ANR	965108	ExpressionStatement	addr_begin = addr	217:2:4222:4239	964994	0	True				
ANR	965109	AssignmentExpression	addr_begin = addr		964994	0		=			
ANR	965110	Identifier	addr_begin		964994	0					
ANR	965111	Identifier	addr		964994	1					
ANR	965112	WhileStatement	while ( * addr && * addr != ':' && * addr != '>' )		964994	1					
ANR	965113	Condition	* addr && * addr != ':' && * addr != '>'	218:10:4251:4287	964994	0	True				
ANR	965114	AndExpression	* addr && * addr != ':' && * addr != '>'		964994	0		&&			
ANR	965115	UnaryOperationExpression	* addr		964994	0					
ANR	965116	UnaryOperator	*		964994	0					
ANR	965117	Identifier	addr		964994	1					
ANR	965118	AndExpression	* addr != ':' && * addr != '>'		964994	1		&&			
ANR	965119	EqualityExpression	* addr != ':'		964994	0		!=			
ANR	965120	UnaryOperationExpression	* addr		964994	0					
ANR	965121	UnaryOperator	*		964994	0					
ANR	965122	Identifier	addr		964994	1					
ANR	965123	PrimaryExpression	':'		964994	1					
ANR	965124	EqualityExpression	* addr != '>'		964994	1		!=			
ANR	965125	UnaryOperationExpression	* addr		964994	0					
ANR	965126	UnaryOperator	*		964994	0					
ANR	965127	Identifier	addr		964994	1					
ANR	965128	PrimaryExpression	'>'		964994	1					
ANR	965129	ExpressionStatement	addr ++	219:3:4294:4300	964994	1	True				
ANR	965130	PostIncDecOperationExpression	addr ++		964994	0					
ANR	965131	Identifier	addr		964994	0					
ANR	965132	IncDec	++		964994	1					
ANR	965133	IfStatement	if ( * addr == 0 )		964994	2					
ANR	965134	Condition	* addr == 0	221:7:4310:4319	964994	0	True				
ANR	965135	EqualityExpression	* addr == 0		964994	0		==			
ANR	965136	UnaryOperationExpression	* addr		964994	0					
ANR	965137	UnaryOperator	*		964994	0					
ANR	965138	Identifier	addr		964994	1					
ANR	965139	PrimaryExpression	0		964994	1					
ANR	965140	ReturnStatement	return false ;	221:20:4323:4335	964994	1	True				
ANR	965141	Identifier	false		964994	0					
ANR	965142	ExpressionStatement	addr_len = addr - addr_begin	223:2:4340:4366	964994	3	True				
ANR	965143	AssignmentExpression	addr_len = addr - addr_begin		964994	0		=			
ANR	965144	Identifier	addr_len		964994	0					
ANR	965145	AdditiveExpression	addr - addr_begin		964994	1		-			
ANR	965146	Identifier	addr		964994	0					
ANR	965147	Identifier	addr_begin		964994	1					
ANR	965148	IfStatement	if ( * addr == ':' )		964994	9					
ANR	965149	Condition	* addr == ':'	227:6:4415:4426	964994	0	True				
ANR	965150	EqualityExpression	* addr == ':'		964994	0		==			
ANR	965151	UnaryOperationExpression	* addr		964994	0					
ANR	965152	UnaryOperator	*		964994	0					
ANR	965153	Identifier	addr		964994	1					
ANR	965154	PrimaryExpression	':'		964994	1					
ANR	965155	CompoundStatement		34:21:606:606	964994	1					
ANR	965156	ExpressionStatement	addr ++	228:2:4434:4440	964994	0	True				
ANR	965157	PostIncDecOperationExpression	addr ++		964994	0					
ANR	965158	Identifier	addr		964994	0					
ANR	965159	IncDec	++		964994	1					
ANR	965160	ExpressionStatement	port_begin = addr	229:2:4444:4461	964994	1	True				
ANR	965161	AssignmentExpression	port_begin = addr		964994	0		=			
ANR	965162	Identifier	port_begin		964994	0					
ANR	965163	Identifier	addr		964994	1					
ANR	965164	ExpressionStatement	"port_len = strspn ( addr , ""0123456789"" )"	230:2:4465:4502	964994	2	True				
ANR	965165	AssignmentExpression	"port_len = strspn ( addr , ""0123456789"" )"		964994	0		=			
ANR	965166	Identifier	port_len		964994	0					
ANR	965167	CallExpression	"strspn ( addr , ""0123456789"" )"		964994	1					
ANR	965168	Callee	strspn		964994	0					
ANR	965169	Identifier	strspn		964994	0					
ANR	965170	ArgumentList	addr		964994	1					
ANR	965171	Argument	addr		964994	0					
ANR	965172	Identifier	addr		964994	0					
ANR	965173	Argument	"""0123456789"""		964994	1					
ANR	965174	PrimaryExpression	"""0123456789"""		964994	0					
ANR	965175	ExpressionStatement	addr += port_len	231:2:4506:4522	964994	3	True				
ANR	965176	AssignmentExpression	addr += port_len		964994	0		+=			
ANR	965177	Identifier	addr		964994	0					
ANR	965178	Identifier	port_len		964994	1					
ANR	965179	IfStatement	if ( * addr == '?' )		964994	10					
ANR	965180	Condition	* addr == '?'	233:6:4533:4544	964994	0	True				
ANR	965181	EqualityExpression	* addr == '?'		964994	0		==			
ANR	965182	UnaryOperationExpression	* addr		964994	0					
ANR	965183	UnaryOperator	*		964994	0					
ANR	965184	Identifier	addr		964994	1					
ANR	965185	PrimaryExpression	'?'		964994	1					
ANR	965186	CompoundStatement		42:2:738:766	964994	1					
ANR	965187	ExpressionStatement	addr ++	234:2:4552:4558	964994	0	True				
ANR	965188	PostIncDecOperationExpression	addr ++		964994	0					
ANR	965189	Identifier	addr		964994	0					
ANR	965190	IncDec	++		964994	1					
ANR	965191	IdentifierDeclStatement	"int len = strcspn ( addr , "">"" ) ;"	235:2:4562:4590	964994	1	True				
ANR	965192	IdentifierDecl	"len = strcspn ( addr , "">"" )"		964994	0					
ANR	965193	IdentifierDeclType	int		964994	0					
ANR	965194	Identifier	len		964994	1					
ANR	965195	AssignmentExpression	"len = strcspn ( addr , "">"" )"		964994	2		=			
ANR	965196	Identifier	len		964994	0					
ANR	965197	CallExpression	"strcspn ( addr , "">"" )"		964994	1					
ANR	965198	Callee	strcspn		964994	0					
ANR	965199	Identifier	strcspn		964994	0					
ANR	965200	ArgumentList	addr		964994	1					
ANR	965201	Argument	addr		964994	0					
ANR	965202	Identifier	addr		964994	0					
ANR	965203	Argument	""">"""		964994	1					
ANR	965204	PrimaryExpression	""">"""		964994	0					
ANR	965205	ExpressionStatement	addr += len	236:2:4594:4605	964994	2	True				
ANR	965206	AssignmentExpression	addr += len		964994	0		+=			
ANR	965207	Identifier	addr		964994	0					
ANR	965208	Identifier	len		964994	1					
ANR	965209	IfStatement	if ( addr [ 0 ] != '>' || addr [ 1 ] != '\\0' )		964994	11					
ANR	965210	Condition	addr [ 0 ] != '>' || addr [ 1 ] != '\\0'	239:6:4617:4649	964994	0	True				
ANR	965211	OrExpression	addr [ 0 ] != '>' || addr [ 1 ] != '\\0'		964994	0		||			
ANR	965212	EqualityExpression	addr [ 0 ] != '>'		964994	0		!=			
ANR	965213	ArrayIndexing	addr [ 0 ]		964994	0					
ANR	965214	Identifier	addr		964994	0					
ANR	965215	PrimaryExpression	0		964994	1					
ANR	965216	PrimaryExpression	'>'		964994	1					
ANR	965217	EqualityExpression	addr [ 1 ] != '\\0'		964994	1		!=			
ANR	965218	ArrayIndexing	addr [ 1 ]		964994	0					
ANR	965219	Identifier	addr		964994	0					
ANR	965220	PrimaryExpression	1		964994	1					
ANR	965221	PrimaryExpression	'\\0'		964994	1					
ANR	965222	ReturnStatement	return false ;	239:42:4653:4665	964994	1	True				
ANR	965223	Identifier	false		964994	0					
ANR	965224	ExpressionStatement	clear ( )	241:1:4669:4676	964994	12	True				
ANR	965225	CallExpression	clear ( )		964994	0					
ANR	965226	Callee	clear		964994	0					
ANR	965227	Identifier	clear		964994	0					
ANR	965228	ArgumentList			964994	1					
ANR	965229	IdentifierDeclStatement	int port_no = atoi ( port_begin ) ;	243:1:4680:4710	964994	13	True				
ANR	965230	IdentifierDecl	port_no = atoi ( port_begin )		964994	0					
ANR	965231	IdentifierDeclType	int		964994	0					
ANR	965232	Identifier	port_no		964994	1					
ANR	965233	AssignmentExpression	port_no = atoi ( port_begin )		964994	2		=			
ANR	965234	Identifier	port_no		964994	0					
ANR	965235	CallExpression	atoi ( port_begin )		964994	1					
ANR	965236	Callee	atoi		964994	0					
ANR	965237	Identifier	atoi		964994	0					
ANR	965238	ArgumentList	port_begin		964994	1					
ANR	965239	Argument	port_begin		964994	0					
ANR	965240	Identifier	port_begin		964994	0					
ANR	965241	IdentifierDeclStatement	char tmp [ NI_MAXHOST ] ;	245:1:4714:4734	964994	14	True				
ANR	965242	IdentifierDecl	tmp [ NI_MAXHOST ]		964994	0					
ANR	965243	IdentifierDeclType	char [ NI_MAXHOST ]		964994	0					
ANR	965244	Identifier	tmp		964994	1					
ANR	965245	Identifier	NI_MAXHOST		964994	2					
ANR	965246	IfStatement	if ( ipv6 )		964994	15					
ANR	965247	Condition	ipv6	246:6:4742:4745	964994	0	True				
ANR	965248	Identifier	ipv6		964994	0					
ANR	965249	CompoundStatement		53:13:925:925	964994	1					
ANR	965250	IfStatement	if ( addr_len >= INET6_ADDRSTRLEN )		964994	0					
ANR	965251	Condition	addr_len >= INET6_ADDRSTRLEN	247:6:4757:4784	964994	0	True				
ANR	965252	RelationalExpression	addr_len >= INET6_ADDRSTRLEN		964994	0		>=			
ANR	965253	Identifier	addr_len		964994	0					
ANR	965254	Identifier	INET6_ADDRSTRLEN		964994	1					
ANR	965255	ReturnStatement	return false ;	248:3:4791:4803	964994	1	True				
ANR	965256	Identifier	false		964994	0					
ANR	965257	ExpressionStatement	"memcpy ( tmp , addr_begin , addr_len )"	249:2:4807:4840	964994	1	True				
ANR	965258	CallExpression	"memcpy ( tmp , addr_begin , addr_len )"		964994	0					
ANR	965259	Callee	memcpy		964994	0					
ANR	965260	Identifier	memcpy		964994	0					
ANR	965261	ArgumentList	tmp		964994	1					
ANR	965262	Argument	tmp		964994	0					
ANR	965263	Identifier	tmp		964994	0					
ANR	965264	Argument	addr_begin		964994	1					
ANR	965265	Identifier	addr_begin		964994	0					
ANR	965266	Argument	addr_len		964994	2					
ANR	965267	Identifier	addr_len		964994	0					
ANR	965268	ExpressionStatement	tmp [ addr_len ] = '\\0'	250:2:4844:4864	964994	2	True				
ANR	965269	AssignmentExpression	tmp [ addr_len ] = '\\0'		964994	0		=			
ANR	965270	ArrayIndexing	tmp [ addr_len ]		964994	0					
ANR	965271	Identifier	tmp		964994	0					
ANR	965272	Identifier	addr_len		964994	1					
ANR	965273	PrimaryExpression	'\\0'		964994	1					
ANR	965274	ExpressionStatement	v6 . sin6_len = sizeof ( sockaddr_in6 )	252:2:4907:4941	964994	3	True				
ANR	965275	AssignmentExpression	v6 . sin6_len = sizeof ( sockaddr_in6 )		964994	0		=			
ANR	965276	MemberAccess	v6 . sin6_len		964994	0					
ANR	965277	Identifier	v6		964994	0					
ANR	965278	Identifier	sin6_len		964994	1					
ANR	965279	SizeofExpression	sizeof ( sockaddr_in6 )		964994	1					
ANR	965280	Sizeof	sizeof		964994	0					
ANR	965281	SizeofOperand	sockaddr_in6		964994	1					
ANR	965282	ExpressionStatement	v6 . sin6_family = AF_INET6	254:2:4952:4977	964994	4	True				
ANR	965283	AssignmentExpression	v6 . sin6_family = AF_INET6		964994	0		=			
ANR	965284	MemberAccess	v6 . sin6_family		964994	0					
ANR	965285	Identifier	v6		964994	0					
ANR	965286	Identifier	sin6_family		964994	1					
ANR	965287	Identifier	AF_INET6		964994	1					
ANR	965288	IfStatement	"if ( inet_pton ( AF_INET6 , tmp , & v6 . sin6_addr ) <= 0 )"		964994	5					
ANR	965289	Condition	"inet_pton ( AF_INET6 , tmp , & v6 . sin6_addr ) <= 0"	255:7:4986:5029	964994	0	True				
ANR	965290	RelationalExpression	"inet_pton ( AF_INET6 , tmp , & v6 . sin6_addr ) <= 0"		964994	0		<=			
ANR	965291	CallExpression	"inet_pton ( AF_INET6 , tmp , & v6 . sin6_addr )"		964994	0					
ANR	965292	Callee	inet_pton		964994	0					
ANR	965293	Identifier	inet_pton		964994	0					
ANR	965294	ArgumentList	AF_INET6		964994	1					
ANR	965295	Argument	AF_INET6		964994	0					
ANR	965296	Identifier	AF_INET6		964994	0					
ANR	965297	Argument	tmp		964994	1					
ANR	965298	Identifier	tmp		964994	0					
ANR	965299	Argument	& v6 . sin6_addr		964994	2					
ANR	965300	UnaryOperationExpression	& v6 . sin6_addr		964994	0					
ANR	965301	UnaryOperator	&		964994	0					
ANR	965302	MemberAccess	v6 . sin6_addr		964994	1					
ANR	965303	Identifier	v6		964994	0					
ANR	965304	Identifier	sin6_addr		964994	1					
ANR	965305	PrimaryExpression	0		964994	1					
ANR	965306	ReturnStatement	return false ;	255:53:5032:5044	964994	1	True				
ANR	965307	Identifier	false		964994	0					
ANR	965308	ExpressionStatement	v6 . sin6_port = htons ( port_no )	256:2:5048:5077	964994	6	True				
ANR	965309	AssignmentExpression	v6 . sin6_port = htons ( port_no )		964994	0		=			
ANR	965310	MemberAccess	v6 . sin6_port		964994	0					
ANR	965311	Identifier	v6		964994	0					
ANR	965312	Identifier	sin6_port		964994	1					
ANR	965313	CallExpression	htons ( port_no )		964994	1					
ANR	965314	Callee	htons		964994	0					
ANR	965315	Identifier	htons		964994	0					
ANR	965316	ArgumentList	port_no		964994	1					
ANR	965317	Argument	port_no		964994	0					
ANR	965318	Identifier	port_no		964994	0					
ANR	965319	ElseStatement	else		964994	0					
ANR	965320	CompoundStatement		65:6:1265:1265	964994	0					
ANR	965321	IfStatement	if ( addr_len >= NI_MAXHOST )		964994	0					
ANR	965322	Condition	addr_len >= NI_MAXHOST	259:6:5097:5118	964994	0	True				
ANR	965323	RelationalExpression	addr_len >= NI_MAXHOST		964994	0		>=			
ANR	965324	Identifier	addr_len		964994	0					
ANR	965325	Identifier	NI_MAXHOST		964994	1					
ANR	965326	ReturnStatement	return false ;	260:3:5124:5136	964994	1	True				
ANR	965327	Identifier	false		964994	0					
ANR	965328	ExpressionStatement	"memcpy ( tmp , addr_begin , addr_len )"	261:2:5140:5173	964994	1	True				
ANR	965329	CallExpression	"memcpy ( tmp , addr_begin , addr_len )"		964994	0					
ANR	965330	Callee	memcpy		964994	0					
ANR	965331	Identifier	memcpy		964994	0					
ANR	965332	ArgumentList	tmp		964994	1					
ANR	965333	Argument	tmp		964994	0					
ANR	965334	Identifier	tmp		964994	0					
ANR	965335	Argument	addr_begin		964994	1					
ANR	965336	Identifier	addr_begin		964994	0					
ANR	965337	Argument	addr_len		964994	2					
ANR	965338	Identifier	addr_len		964994	0					
ANR	965339	ExpressionStatement	tmp [ addr_len ] = '\\0'	262:2:5177:5197	964994	2	True				
ANR	965340	AssignmentExpression	tmp [ addr_len ] = '\\0'		964994	0		=			
ANR	965341	ArrayIndexing	tmp [ addr_len ]		964994	0					
ANR	965342	Identifier	tmp		964994	0					
ANR	965343	Identifier	addr_len		964994	1					
ANR	965344	PrimaryExpression	'\\0'		964994	1					
ANR	965345	IfStatement	"if ( inet_pton ( AF_INET , tmp , & v4 . sin_addr ) > 0 )"		964994	3					
ANR	965346	Condition	"inet_pton ( AF_INET , tmp , & v4 . sin_addr ) > 0"	264:6:5206:5246	964994	0	True				
ANR	965347	RelationalExpression	"inet_pton ( AF_INET , tmp , & v4 . sin_addr ) > 0"		964994	0		>			
ANR	965348	CallExpression	"inet_pton ( AF_INET , tmp , & v4 . sin_addr )"		964994	0					
ANR	965349	Callee	inet_pton		964994	0					
ANR	965350	Identifier	inet_pton		964994	0					
ANR	965351	ArgumentList	AF_INET		964994	1					
ANR	965352	Argument	AF_INET		964994	0					
ANR	965353	Identifier	AF_INET		964994	0					
ANR	965354	Argument	tmp		964994	1					
ANR	965355	Identifier	tmp		964994	0					
ANR	965356	Argument	& v4 . sin_addr		964994	2					
ANR	965357	UnaryOperationExpression	& v4 . sin_addr		964994	0					
ANR	965358	UnaryOperator	&		964994	0					
ANR	965359	MemberAccess	v4 . sin_addr		964994	1					
ANR	965360	Identifier	v4		964994	0					
ANR	965361	Identifier	sin_addr		964994	1					
ANR	965362	PrimaryExpression	0		964994	1					
ANR	965363	CompoundStatement		71:49:1425:1425	964994	1					
ANR	965364	ExpressionStatement	v4 . sin_len = sizeof ( sockaddr_in )	266:3:5293:5325	964994	0	True				
ANR	965365	AssignmentExpression	v4 . sin_len = sizeof ( sockaddr_in )		964994	0		=			
ANR	965366	MemberAccess	v4 . sin_len		964994	0					
ANR	965367	Identifier	v4		964994	0					
ANR	965368	Identifier	sin_len		964994	1					
ANR	965369	SizeofExpression	sizeof ( sockaddr_in )		964994	1					
ANR	965370	Sizeof	sizeof		964994	0					
ANR	965371	SizeofOperand	sockaddr_in		964994	1					
ANR	965372	ExpressionStatement	v4 . sin_family = AF_INET	268:3:5337:5360	964994	1	True				
ANR	965373	AssignmentExpression	v4 . sin_family = AF_INET		964994	0		=			
ANR	965374	MemberAccess	v4 . sin_family		964994	0					
ANR	965375	Identifier	v4		964994	0					
ANR	965376	Identifier	sin_family		964994	1					
ANR	965377	Identifier	AF_INET		964994	1					
ANR	965378	ExpressionStatement	v4 . sin_port = htons ( port_no )	269:3:5365:5393	964994	2	True				
ANR	965379	AssignmentExpression	v4 . sin_port = htons ( port_no )		964994	0		=			
ANR	965380	MemberAccess	v4 . sin_port		964994	0					
ANR	965381	Identifier	v4		964994	0					
ANR	965382	Identifier	sin_port		964994	1					
ANR	965383	CallExpression	htons ( port_no )		964994	1					
ANR	965384	Callee	htons		964994	0					
ANR	965385	Identifier	htons		964994	0					
ANR	965386	ArgumentList	port_no		964994	1					
ANR	965387	Argument	port_no		964994	0					
ANR	965388	Identifier	port_no		964994	0					
ANR	965389	ElseStatement	else		964994	0					
ANR	965390	CompoundStatement		78:3:1585:1617	964994	0					
ANR	965391	IdentifierDeclStatement	std :: vector < condor_sockaddr > ret ;	271:3:5409:5441	964994	0	True				
ANR	965392	IdentifierDecl	ret		964994	0					
ANR	965393	IdentifierDeclType	std :: vector < condor_sockaddr >		964994	0					
ANR	965394	Identifier	ret		964994	1					
ANR	965395	ExpressionStatement	ret = resolve_hostname ( tmp )	272:3:5446:5473	964994	1	True				
ANR	965396	AssignmentExpression	ret = resolve_hostname ( tmp )		964994	0		=			
ANR	965397	Identifier	ret		964994	0					
ANR	965398	CallExpression	resolve_hostname ( tmp )		964994	1					
ANR	965399	Callee	resolve_hostname		964994	0					
ANR	965400	Identifier	resolve_hostname		964994	0					
ANR	965401	ArgumentList	tmp		964994	1					
ANR	965402	Argument	tmp		964994	0					
ANR	965403	Identifier	tmp		964994	0					
ANR	965404	IfStatement	if ( ! ret . empty ( ) )		964994	2					
ANR	965405	Condition	! ret . empty ( )	273:7:5482:5493	964994	0	True				
ANR	965406	UnaryOperationExpression	! ret . empty ( )		964994	0					
ANR	965407	UnaryOperator	!		964994	0					
ANR	965408	CallExpression	ret . empty ( )		964994	1					
ANR	965409	Callee	ret . empty		964994	0					
ANR	965410	MemberAccess	ret . empty		964994	0					
ANR	965411	Identifier	ret		964994	0					
ANR	965412	Identifier	empty		964994	1					
ANR	965413	ArgumentList			964994	1					
ANR	965414	CompoundStatement		80:21:1672:1672	964994	1					
ANR	965415	ExpressionStatement	* this = ret . front ( )	274:4:5502:5521	964994	0	True				
ANR	965416	AssignmentExpression	* this = ret . front ( )		964994	0		=			
ANR	965417	UnaryOperationExpression	* this		964994	0					
ANR	965418	UnaryOperator	*		964994	0					
ANR	965419	Identifier	this		964994	1					
ANR	965420	CallExpression	ret . front ( )		964994	1					
ANR	965421	Callee	ret . front		964994	0					
ANR	965422	MemberAccess	ret . front		964994	0					
ANR	965423	Identifier	ret		964994	0					
ANR	965424	Identifier	front		964994	1					
ANR	965425	ArgumentList			964994	1					
ANR	965426	ExpressionStatement	set_port ( port_no )	275:4:5527:5544	964994	1	True				
ANR	965427	CallExpression	set_port ( port_no )		964994	0					
ANR	965428	Callee	set_port		964994	0					
ANR	965429	Identifier	set_port		964994	0					
ANR	965430	ArgumentList	port_no		964994	1					
ANR	965431	Argument	port_no		964994	0					
ANR	965432	Identifier	port_no		964994	0					
ANR	965433	ElseStatement	else		964994	0					
ANR	965434	ReturnStatement	return false ;	277:4:5560:5572	964994	0	True				
ANR	965435	Identifier	false		964994	0					
ANR	965436	ReturnStatement	return true ;	280:1:5582:5593	964994	16	True				
ANR	965437	Identifier	true		964994	0					
ANR	965438	ReturnType	bool		964994	1					
ANR	965439	Identifier	condor_sockaddr :: from_sinful		964994	2					
ANR	965440	ParameterList	const char * sinful		964994	3					
ANR	965441	Parameter	const char * sinful	193:34:3803:3820	964994	0	True				
ANR	965442	ParameterType	const char *		964994	0					
ANR	965443	Identifier	sinful		964994	1					
ANR	965444	CFGEntryNode	ENTRY		964994		True				
ANR	965445	CFGExitNode	EXIT		964994		True				
ANR	965446	Symbol	v6		964994						
ANR	965447	Symbol	* tmp		964994						
ANR	965448	Symbol	v6 . sin6_port		964994						
ANR	965449	Symbol	htons		964994						
ANR	965450	Symbol	strcspn		964994						
ANR	965451	Symbol	* addr_len		964994						
ANR	965452	Symbol	v4 . sin_len		964994						
ANR	965453	Symbol	len		964994						
ANR	965454	Symbol	v4 . sin_family		964994						
ANR	965455	Symbol	ipv6		964994						
ANR	965456	Symbol	tmp		964994						
ANR	965457	Symbol	v4 . sin_port		964994						
ANR	965458	Symbol	& v6 . sin6_addr		964994						
ANR	965459	Symbol	v6 . sin6_family		964994						
ANR	965460	Symbol	addr		964994						
ANR	965461	Symbol	& v4 . sin_addr		964994						
ANR	965462	Symbol	sinful		964994						
ANR	965463	Symbol	addr_len		964994						
ANR	965464	Symbol	port_no		964994						
ANR	965465	Symbol	addr_begin		964994						
ANR	965466	Symbol	atoi		964994						
ANR	965467	Symbol	ret		964994						
ANR	965468	Symbol	v6 . sin6_len		964994						
ANR	965469	Symbol	NULL		964994						
ANR	965470	Symbol	inet_pton		964994						
ANR	965471	Symbol	false		964994						
ANR	965472	Symbol	this		964994						
ANR	965473	Symbol	& v4		964994						
ANR	965474	Symbol	ret . empty		964994						
ANR	965475	Symbol	INET6_ADDRSTRLEN		964994						
ANR	965476	Symbol	& v6		964994						
ANR	965477	Symbol	AF_INET		964994						
ANR	965478	Symbol	AF_INET6		964994						
ANR	965479	Symbol	NI_MAXHOST		964994						
ANR	965480	Symbol	* this		964994						
ANR	965481	Symbol	strspn		964994						
ANR	965482	Symbol	resolve_hostname		964994						
ANR	965483	Symbol	port_len		964994						
ANR	965484	Symbol	true		964994						
ANR	965485	Symbol	* addr		964994						
ANR	965486	Symbol	port_begin		964994						
ANR	965487	Symbol	ret . front		964994						
ANR	965488	Symbol	v4		964994						
ANR	965489	Function	condor_sockaddr :: to_sockaddr	283:0:5598:5676							
ANR	965490	FunctionDef	condor_sockaddr :: to_sockaddr ()		965489	0					
ANR	965491	CompoundStatement		284:0:5645:5676	965489	0					
ANR	965492	ReturnStatement	return ( sockaddr * ) & storage ;	285:1:5648:5674	965489	0	True				
ANR	965493	CastExpression	( sockaddr * ) & storage		965489	0					
ANR	965494	CastTarget	sockaddr *		965489	0					
ANR	965495	UnaryOperationExpression	& storage		965489	1					
ANR	965496	UnaryOperator	&		965489	0					
ANR	965497	Identifier	storage		965489	1					
ANR	965498	ReturnType	sockaddr *		965489	1					
ANR	965499	Identifier	condor_sockaddr :: to_sockaddr		965489	2					
ANR	965500	ParameterList			965489	3					
ANR	965501	CFGEntryNode	ENTRY		965489		True				
ANR	965502	CFGExitNode	EXIT		965489		True				
ANR	965503	Symbol	& storage		965489						
ANR	965504	Function	condor_sockaddr :: get_socklen	288:0:5679:5867							
ANR	965505	FunctionDef	condor_sockaddr :: get_socklen ()		965504	0					
ANR	965506	CompoundStatement		289:0:5726:5867	965504	0					
ANR	965507	IfStatement	if ( is_ipv4 ( ) )		965504	0					
ANR	965508	Condition	is_ipv4 ( )	290:5:5733:5741	965504	0	True				
ANR	965509	CallExpression	is_ipv4 ( )		965504	0					
ANR	965510	Callee	is_ipv4		965504	0					
ANR	965511	Identifier	is_ipv4		965504	0					
ANR	965512	ArgumentList			965504	1					
ANR	965513	ReturnStatement	return sizeof ( sockaddr_in ) ;	291:2:5746:5772	965504	1	True				
ANR	965514	SizeofExpression	sizeof ( sockaddr_in )		965504	0					
ANR	965515	Sizeof	sizeof		965504	0					
ANR	965516	SizeofOperand	sockaddr_in		965504	1					
ANR	965517	ElseStatement	else		965504	0					
ANR	965518	IfStatement	if ( is_ipv6 ( ) )		965504	0					
ANR	965519	Condition	is_ipv6 ( )	292:10:5784:5792	965504	0	True				
ANR	965520	CallExpression	is_ipv6 ( )		965504	0					
ANR	965521	Callee	is_ipv6		965504	0					
ANR	965522	Identifier	is_ipv6		965504	0					
ANR	965523	ArgumentList			965504	1					
ANR	965524	ReturnStatement	return sizeof ( sockaddr_in6 ) ;	293:2:5797:5824	965504	1	True				
ANR	965525	SizeofExpression	sizeof ( sockaddr_in6 )		965504	0					
ANR	965526	Sizeof	sizeof		965504	0					
ANR	965527	SizeofOperand	sockaddr_in6		965504	1					
ANR	965528	ElseStatement	else		965504	0					
ANR	965529	ReturnStatement	return sizeof ( sockaddr_storage ) ;	295:2:5834:5865	965504	0	True				
ANR	965530	SizeofExpression	sizeof ( sockaddr_storage )		965504	0					
ANR	965531	Sizeof	sizeof		965504	0					
ANR	965532	SizeofOperand	sockaddr_storage		965504	1					
ANR	965533	ReturnType	socklen_t		965504	1					
ANR	965534	Identifier	condor_sockaddr :: get_socklen		965504	2					
ANR	965535	ParameterList			965504	3					
ANR	965536	CFGEntryNode	ENTRY		965504		True				
ANR	965537	CFGExitNode	EXIT		965504		True				
ANR	965538	Symbol	is_ipv6		965504						
ANR	965539	Symbol	is_ipv4		965504						
ANR	965540	Function	condor_sockaddr :: from_ip_string	298:0:5870:5979							
ANR	965541	FunctionDef	condor_sockaddr :: from_ip_string (const MyString & ip_string)		965540	0					
ANR	965542	CompoundStatement		299:0:5934:5979	965540	0					
ANR	965543	ReturnStatement	return from_ip_string ( ip_string . Value ( ) ) ;	300:1:5937:5977	965540	0	True				
ANR	965544	CallExpression	from_ip_string ( ip_string . Value ( ) )		965540	0					
ANR	965545	Callee	from_ip_string		965540	0					
ANR	965546	Identifier	from_ip_string		965540	0					
ANR	965547	ArgumentList	ip_string . Value ( )		965540	1					
ANR	965548	Argument	ip_string . Value ( )		965540	0					
ANR	965549	CallExpression	ip_string . Value ( )		965540	0					
ANR	965550	Callee	ip_string . Value		965540	0					
ANR	965551	MemberAccess	ip_string . Value		965540	0					
ANR	965552	Identifier	ip_string		965540	0					
ANR	965553	Identifier	Value		965540	1					
ANR	965554	ArgumentList			965540	1					
ANR	965555	ReturnType	bool		965540	1					
ANR	965556	Identifier	condor_sockaddr :: from_ip_string		965540	2					
ANR	965557	ParameterList	const MyString & ip_string		965540	3					
ANR	965558	Parameter	const MyString & ip_string	298:37:5907:5931	965540	0	True				
ANR	965559	ParameterType	const MyString &		965540	0					
ANR	965560	Identifier	ip_string		965540	1					
ANR	965561	CFGEntryNode	ENTRY		965540		True				
ANR	965562	CFGExitNode	EXIT		965540		True				
ANR	965563	Symbol	ip_string		965540						
ANR	965564	Symbol	ip_string . Value		965540						
ANR	965565	Symbol	from_ip_string		965540						
ANR	965566	Function	condor_sockaddr :: from_ip_string	303:0:5982:6475							
ANR	965567	FunctionDef	condor_sockaddr :: from_ip_string (const char * ip_string)		965566	0					
ANR	965568	CompoundStatement		304:0:6042:6475	965566	0					
ANR	965569	IfStatement	"if ( inet_pton ( AF_INET , ip_string , & v4 . sin_addr ) == 1 )"		965566	0					
ANR	965570	Condition	"inet_pton ( AF_INET , ip_string , & v4 . sin_addr ) == 1"	305:5:6049:6096	965566	0	True				
ANR	965571	EqualityExpression	"inet_pton ( AF_INET , ip_string , & v4 . sin_addr ) == 1"		965566	0		==			
ANR	965572	CallExpression	"inet_pton ( AF_INET , ip_string , & v4 . sin_addr )"		965566	0					
ANR	965573	Callee	inet_pton		965566	0					
ANR	965574	Identifier	inet_pton		965566	0					
ANR	965575	ArgumentList	AF_INET		965566	1					
ANR	965576	Argument	AF_INET		965566	0					
ANR	965577	Identifier	AF_INET		965566	0					
ANR	965578	Argument	ip_string		965566	1					
ANR	965579	Identifier	ip_string		965566	0					
ANR	965580	Argument	& v4 . sin_addr		965566	2					
ANR	965581	UnaryOperationExpression	& v4 . sin_addr		965566	0					
ANR	965582	UnaryOperator	&		965566	0					
ANR	965583	MemberAccess	v4 . sin_addr		965566	1					
ANR	965584	Identifier	v4		965566	0					
ANR	965585	Identifier	sin_addr		965566	1					
ANR	965586	PrimaryExpression	1		965566	1					
ANR	965587	CompoundStatement		2:55:56:56	965566	1					
ANR	965588	ExpressionStatement	v4 . sin_len = sizeof ( sockaddr_in )	307:2:6142:6174	965566	0	True				
ANR	965589	AssignmentExpression	v4 . sin_len = sizeof ( sockaddr_in )		965566	0		=			
ANR	965590	MemberAccess	v4 . sin_len		965566	0					
ANR	965591	Identifier	v4		965566	0					
ANR	965592	Identifier	sin_len		965566	1					
ANR	965593	SizeofExpression	sizeof ( sockaddr_in )		965566	1					
ANR	965594	Sizeof	sizeof		965566	0					
ANR	965595	SizeofOperand	sockaddr_in		965566	1					
ANR	965596	ExpressionStatement	v4 . sin_family = AF_INET	309:2:6185:6208	965566	1	True				
ANR	965597	AssignmentExpression	v4 . sin_family = AF_INET		965566	0		=			
ANR	965598	MemberAccess	v4 . sin_family		965566	0					
ANR	965599	Identifier	v4		965566	0					
ANR	965600	Identifier	sin_family		965566	1					
ANR	965601	Identifier	AF_INET		965566	1					
ANR	965602	ExpressionStatement	v4 . sin_port = 0	310:2:6212:6227	965566	2	True				
ANR	965603	AssignmentExpression	v4 . sin_port = 0		965566	0		=			
ANR	965604	MemberAccess	v4 . sin_port		965566	0					
ANR	965605	Identifier	v4		965566	0					
ANR	965606	Identifier	sin_port		965566	1					
ANR	965607	PrimaryExpression	0		965566	1					
ANR	965608	ReturnStatement	return true ;	311:2:6231:6242	965566	3	True				
ANR	965609	Identifier	true		965566	0					
ANR	965610	ElseStatement	else		965566	0					
ANR	965611	IfStatement	"if ( inet_pton ( AF_INET6 , ip_string , & v6 . sin6_addr ) == 1 )"		965566	0					
ANR	965612	Condition	"inet_pton ( AF_INET6 , ip_string , & v6 . sin6_addr ) == 1"	312:12:6256:6305	965566	0	True				
ANR	965613	EqualityExpression	"inet_pton ( AF_INET6 , ip_string , & v6 . sin6_addr ) == 1"		965566	0		==			
ANR	965614	CallExpression	"inet_pton ( AF_INET6 , ip_string , & v6 . sin6_addr )"		965566	0					
ANR	965615	Callee	inet_pton		965566	0					
ANR	965616	Identifier	inet_pton		965566	0					
ANR	965617	ArgumentList	AF_INET6		965566	1					
ANR	965618	Argument	AF_INET6		965566	0					
ANR	965619	Identifier	AF_INET6		965566	0					
ANR	965620	Argument	ip_string		965566	1					
ANR	965621	Identifier	ip_string		965566	0					
ANR	965622	Argument	& v6 . sin6_addr		965566	2					
ANR	965623	UnaryOperationExpression	& v6 . sin6_addr		965566	0					
ANR	965624	UnaryOperator	&		965566	0					
ANR	965625	MemberAccess	v6 . sin6_addr		965566	1					
ANR	965626	Identifier	v6		965566	0					
ANR	965627	Identifier	sin6_addr		965566	1					
ANR	965628	PrimaryExpression	1		965566	1					
ANR	965629	CompoundStatement		9:64:265:265	965566	1					
ANR	965630	ExpressionStatement	v6 . sin6_len = sizeof ( sockaddr_in )	314:2:6351:6384	965566	0	True				
ANR	965631	AssignmentExpression	v6 . sin6_len = sizeof ( sockaddr_in )		965566	0		=			
ANR	965632	MemberAccess	v6 . sin6_len		965566	0					
ANR	965633	Identifier	v6		965566	0					
ANR	965634	Identifier	sin6_len		965566	1					
ANR	965635	SizeofExpression	sizeof ( sockaddr_in )		965566	1					
ANR	965636	Sizeof	sizeof		965566	0					
ANR	965637	SizeofOperand	sockaddr_in		965566	1					
ANR	965638	ExpressionStatement	v6 . sin6_family = AF_INET6	316:2:6395:6420	965566	1	True				
ANR	965639	AssignmentExpression	v6 . sin6_family = AF_INET6		965566	0		=			
ANR	965640	MemberAccess	v6 . sin6_family		965566	0					
ANR	965641	Identifier	v6		965566	0					
ANR	965642	Identifier	sin6_family		965566	1					
ANR	965643	Identifier	AF_INET6		965566	1					
ANR	965644	ExpressionStatement	v6 . sin6_port = 0	317:2:6424:6440	965566	2	True				
ANR	965645	AssignmentExpression	v6 . sin6_port = 0		965566	0		=			
ANR	965646	MemberAccess	v6 . sin6_port		965566	0					
ANR	965647	Identifier	v6		965566	0					
ANR	965648	Identifier	sin6_port		965566	1					
ANR	965649	PrimaryExpression	0		965566	1					
ANR	965650	ReturnStatement	return true ;	318:2:6444:6455	965566	3	True				
ANR	965651	Identifier	true		965566	0					
ANR	965652	ReturnStatement	return false ;	320:1:6461:6473	965566	1	True				
ANR	965653	Identifier	false		965566	0					
ANR	965654	ReturnType	bool		965566	1					
ANR	965655	Identifier	condor_sockaddr :: from_ip_string		965566	2					
ANR	965656	ParameterList	const char * ip_string		965566	3					
ANR	965657	Parameter	const char * ip_string	303:37:6019:6039	965566	0	True				
ANR	965658	ParameterType	const char *		965566	0					
ANR	965659	Identifier	ip_string		965566	1					
ANR	965660	CFGEntryNode	ENTRY		965566		True				
ANR	965661	CFGExitNode	EXIT		965566		True				
ANR	965662	Symbol	v6		965566						
ANR	965663	Symbol	v6 . sin6_len		965566						
ANR	965664	Symbol	v6 . sin6_port		965566						
ANR	965665	Symbol	inet_pton		965566						
ANR	965666	Symbol	false		965566						
ANR	965667	Symbol	& v4		965566						
ANR	965668	Symbol	AF_INET		965566						
ANR	965669	Symbol	& v6		965566						
ANR	965670	Symbol	AF_INET6		965566						
ANR	965671	Symbol	v4 . sin_len		965566						
ANR	965672	Symbol	ip_string		965566						
ANR	965673	Symbol	v4 . sin_family		965566						
ANR	965674	Symbol	v4 . sin_port		965566						
ANR	965675	Symbol	true		965566						
ANR	965676	Symbol	& v6 . sin6_addr		965566						
ANR	965677	Symbol	v6 . sin6_family		965566						
ANR	965678	Symbol	& v4 . sin_addr		965566						
ANR	965679	Symbol	v4		965566						
ANR	965680	Function	condor_sockaddr :: to_ip_string	341:0:6849:7826							
ANR	965681	FunctionDef	"condor_sockaddr :: to_ip_string (char * buf , int len)"		965680	0					
ANR	965682	CompoundStatement		342:0:6917:7826	965680	0					
ANR	965683	IfStatement	if ( is_ipv4 ( ) )		965680	0					
ANR	965684	Condition	is_ipv4 ( )	343:6:6925:6933	965680	0	True				
ANR	965685	CallExpression	is_ipv4 ( )		965680	0					
ANR	965686	Callee	is_ipv4		965680	0					
ANR	965687	Identifier	is_ipv4		965680	0					
ANR	965688	ArgumentList			965680	1					
ANR	965689	ReturnStatement	"return inet_ntop ( AF_INET , & v4 . sin_addr , buf , len ) ;"	344:2:6940:6989	965680	1	True				
ANR	965690	CallExpression	"inet_ntop ( AF_INET , & v4 . sin_addr , buf , len )"		965680	0					
ANR	965691	Callee	inet_ntop		965680	0					
ANR	965692	Identifier	inet_ntop		965680	0					
ANR	965693	ArgumentList	AF_INET		965680	1					
ANR	965694	Argument	AF_INET		965680	0					
ANR	965695	Identifier	AF_INET		965680	0					
ANR	965696	Argument	& v4 . sin_addr		965680	1					
ANR	965697	UnaryOperationExpression	& v4 . sin_addr		965680	0					
ANR	965698	UnaryOperator	&		965680	0					
ANR	965699	MemberAccess	v4 . sin_addr		965680	1					
ANR	965700	Identifier	v4		965680	0					
ANR	965701	Identifier	sin_addr		965680	1					
ANR	965702	Argument	buf		965680	2					
ANR	965703	Identifier	buf		965680	0					
ANR	965704	Argument	len		965680	3					
ANR	965705	Identifier	len		965680	0					
ANR	965706	ElseStatement	else		965680	0					
ANR	965707	IfStatement	if ( is_ipv6 ( ) )		965680	0					
ANR	965708	Condition	is_ipv6 ( )	345:10:7002:7010	965680	0	True				
ANR	965709	CallExpression	is_ipv6 ( )		965680	0					
ANR	965710	Callee	is_ipv6		965680	0					
ANR	965711	Identifier	is_ipv6		965680	0					
ANR	965712	ArgumentList			965680	1					
ANR	965713	CompoundStatement		16:2:568:609	965680	1					
ANR	965714	IdentifierDeclStatement	uint32_t * addr = ( uint32_t * ) & v6 . sin6_addr ;	357:2:7486:7527	965680	0	True				
ANR	965715	IdentifierDecl	* addr = ( uint32_t * ) & v6 . sin6_addr		965680	0					
ANR	965716	IdentifierDeclType	uint32_t *		965680	0					
ANR	965717	Identifier	addr		965680	1					
ANR	965718	AssignmentExpression	* addr = ( uint32_t * ) & v6 . sin6_addr		965680	2		=			
ANR	965719	Identifier	addr		965680	0					
ANR	965720	CastExpression	( uint32_t * ) & v6 . sin6_addr		965680	1					
ANR	965721	CastTarget	uint32_t *		965680	0					
ANR	965722	UnaryOperationExpression	& v6 . sin6_addr		965680	1					
ANR	965723	UnaryOperator	&		965680	0					
ANR	965724	MemberAccess	v6 . sin6_addr		965680	1					
ANR	965725	Identifier	v6		965680	0					
ANR	965726	Identifier	sin6_addr		965680	1					
ANR	965727	IfStatement	if ( addr [ 0 ] == 0 && addr [ 1 ] == 0 && addr [ 2 ] == ntohl ( 0xffff ) )		965680	1					
ANR	965728	Condition	addr [ 0 ] == 0 && addr [ 1 ] == 0 && addr [ 2 ] == ntohl ( 0xffff )	358:6:7535:7590	965680	0	True				
ANR	965729	AndExpression	addr [ 0 ] == 0 && addr [ 1 ] == 0 && addr [ 2 ] == ntohl ( 0xffff )		965680	0		&&			
ANR	965730	EqualityExpression	addr [ 0 ] == 0		965680	0		==			
ANR	965731	ArrayIndexing	addr [ 0 ]		965680	0					
ANR	965732	Identifier	addr		965680	0					
ANR	965733	PrimaryExpression	0		965680	1					
ANR	965734	PrimaryExpression	0		965680	1					
ANR	965735	AndExpression	addr [ 1 ] == 0 && addr [ 2 ] == ntohl ( 0xffff )		965680	1		&&			
ANR	965736	EqualityExpression	addr [ 1 ] == 0		965680	0		==			
ANR	965737	ArrayIndexing	addr [ 1 ]		965680	0					
ANR	965738	Identifier	addr		965680	0					
ANR	965739	PrimaryExpression	1		965680	1					
ANR	965740	PrimaryExpression	0		965680	1					
ANR	965741	EqualityExpression	addr [ 2 ] == ntohl ( 0xffff )		965680	1		==			
ANR	965742	ArrayIndexing	addr [ 2 ]		965680	0					
ANR	965743	Identifier	addr		965680	0					
ANR	965744	PrimaryExpression	2		965680	1					
ANR	965745	CallExpression	ntohl ( 0xffff )		965680	1					
ANR	965746	Callee	ntohl		965680	0					
ANR	965747	Identifier	ntohl		965680	0					
ANR	965748	ArgumentList	0xffff		965680	1					
ANR	965749	Argument	0xffff		965680	0					
ANR	965750	PrimaryExpression	0xffff		965680	0					
ANR	965751	CompoundStatement		17:64:675:675	965680	1					
ANR	965752	ReturnStatement	"return inet_ntop ( AF_INET , ( const void * ) & addr [ 3 ] , buf , len ) ;"	359:3:7598:7656	965680	0	True				
ANR	965753	CallExpression	"inet_ntop ( AF_INET , ( const void * ) & addr [ 3 ] , buf , len )"		965680	0					
ANR	965754	Callee	inet_ntop		965680	0					
ANR	965755	Identifier	inet_ntop		965680	0					
ANR	965756	ArgumentList	AF_INET		965680	1					
ANR	965757	Argument	AF_INET		965680	0					
ANR	965758	Identifier	AF_INET		965680	0					
ANR	965759	Argument	( const void * ) & addr [ 3 ]		965680	1					
ANR	965760	CastExpression	( const void * ) & addr [ 3 ]		965680	0					
ANR	965761	CastTarget	const void *		965680	0					
ANR	965762	UnaryOperationExpression	& addr [ 3 ]		965680	1					
ANR	965763	UnaryOperator	&		965680	0					
ANR	965764	ArrayIndexing	addr [ 3 ]		965680	1					
ANR	965765	Identifier	addr		965680	0					
ANR	965766	PrimaryExpression	3		965680	1					
ANR	965767	Argument	buf		965680	2					
ANR	965768	Identifier	buf		965680	0					
ANR	965769	Argument	len		965680	3					
ANR	965770	Identifier	len		965680	0					
ANR	965771	ReturnStatement	"return inet_ntop ( AF_INET6 , & v6 . sin6_addr , buf , len ) ;"	362:2:7665:7716	965680	2	True				
ANR	965772	CallExpression	"inet_ntop ( AF_INET6 , & v6 . sin6_addr , buf , len )"		965680	0					
ANR	965773	Callee	inet_ntop		965680	0					
ANR	965774	Identifier	inet_ntop		965680	0					
ANR	965775	ArgumentList	AF_INET6		965680	1					
ANR	965776	Argument	AF_INET6		965680	0					
ANR	965777	Identifier	AF_INET6		965680	0					
ANR	965778	Argument	& v6 . sin6_addr		965680	1					
ANR	965779	UnaryOperationExpression	& v6 . sin6_addr		965680	0					
ANR	965780	UnaryOperator	&		965680	0					
ANR	965781	MemberAccess	v6 . sin6_addr		965680	1					
ANR	965782	Identifier	v6		965680	0					
ANR	965783	Identifier	sin6_addr		965680	1					
ANR	965784	Argument	buf		965680	2					
ANR	965785	Identifier	buf		965680	0					
ANR	965786	Argument	len		965680	3					
ANR	965787	Identifier	len		965680	0					
ANR	965788	ElseStatement	else		965680	0					
ANR	965789	CompoundStatement		22:8:808:808	965680	0					
ANR	965790	ExpressionStatement	"snprintf ( buf , len , ""%x INVALID ADDRESS FAMILY"" , ( unsigned int ) v4 . sin_family )"	364:2:7730:7806	965680	0	True				
ANR	965791	CallExpression	"snprintf ( buf , len , ""%x INVALID ADDRESS FAMILY"" , ( unsigned int ) v4 . sin_family )"		965680	0					
ANR	965792	Callee	snprintf		965680	0					
ANR	965793	Identifier	snprintf		965680	0					
ANR	965794	ArgumentList	buf		965680	1					
ANR	965795	Argument	buf		965680	0					
ANR	965796	Identifier	buf		965680	0					
ANR	965797	Argument	len		965680	1					
ANR	965798	Identifier	len		965680	0					
ANR	965799	Argument	"""%x INVALID ADDRESS FAMILY"""		965680	2					
ANR	965800	PrimaryExpression	"""%x INVALID ADDRESS FAMILY"""		965680	0					
ANR	965801	Argument	( unsigned int ) v4 . sin_family		965680	3					
ANR	965802	CastExpression	( unsigned int ) v4 . sin_family		965680	0					
ANR	965803	CastTarget	unsigned int		965680	0					
ANR	965804	MemberAccess	v4 . sin_family		965680	1					
ANR	965805	Identifier	v4		965680	0					
ANR	965806	Identifier	sin_family		965680	1					
ANR	965807	ReturnStatement	return NULL ;	365:2:7810:7821	965680	1	True				
ANR	965808	Identifier	NULL		965680	0					
ANR	965809	ReturnType	const char *		965680	1					
ANR	965810	Identifier	condor_sockaddr :: to_ip_string		965680	2					
ANR	965811	ParameterList	"char * buf , int len"		965680	3					
ANR	965812	Parameter	char * buf	341:42:6891:6899	965680	0	True				
ANR	965813	ParameterType	char *		965680	0					
ANR	965814	Identifier	buf		965680	1					
ANR	965815	Parameter	int len	341:53:6902:6908	965680	1	True				
ANR	965816	ParameterType	int		965680	0					
ANR	965817	Identifier	len		965680	1					
ANR	965818	CFGEntryNode	ENTRY		965680		True				
ANR	965819	CFGExitNode	EXIT		965680		True				
ANR	965820	Symbol	v6		965680						
ANR	965821	Symbol	NULL		965680						
ANR	965822	Symbol	& v4		965680						
ANR	965823	Symbol	ntohl		965680						
ANR	965824	Symbol	AF_INET		965680						
ANR	965825	Symbol	is_ipv6		965680						
ANR	965826	Symbol	& v6		965680						
ANR	965827	Symbol	is_ipv4		965680						
ANR	965828	Symbol	AF_INET6		965680						
ANR	965829	Symbol	buf		965680						
ANR	965830	Symbol	len		965680						
ANR	965831	Symbol	v4 . sin_family		965680						
ANR	965832	Symbol	& v6 . sin6_addr		965680						
ANR	965833	Symbol	inet_ntop		965680						
ANR	965834	Symbol	* addr		965680						
ANR	965835	Symbol	& v4 . sin_addr		965680						
ANR	965836	Symbol	addr		965680						
ANR	965837	Symbol	v4		965680						
ANR	965838	Function	condor_sockaddr :: to_ip_string	369:0:7829:8010							
ANR	965839	FunctionDef	condor_sockaddr :: to_ip_string ()		965838	0					
ANR	965840	CompoundStatement		370:0:7876:8010	965838	0					
ANR	965841	IdentifierDeclStatement	char tmp [ IP_STRING_BUF_SIZE ] ;	371:1:7879:7907	965838	0	True				
ANR	965842	IdentifierDecl	tmp [ IP_STRING_BUF_SIZE ]		965838	0					
ANR	965843	IdentifierDeclType	char [ IP_STRING_BUF_SIZE ]		965838	0					
ANR	965844	Identifier	tmp		965838	1					
ANR	965845	Identifier	IP_STRING_BUF_SIZE		965838	2					
ANR	965846	IdentifierDeclStatement	MyString ret ;	372:1:7910:7922	965838	1	True				
ANR	965847	IdentifierDecl	ret		965838	0					
ANR	965848	IdentifierDeclType	MyString		965838	0					
ANR	965849	Identifier	ret		965838	1					
ANR	965850	IfStatement	"if ( ! to_ip_string ( tmp , IP_STRING_BUF_SIZE ) )"		965838	2					
ANR	965851	Condition	"! to_ip_string ( tmp , IP_STRING_BUF_SIZE )"	373:6:7930:7967	965838	0	True				
ANR	965852	UnaryOperationExpression	"! to_ip_string ( tmp , IP_STRING_BUF_SIZE )"		965838	0					
ANR	965853	UnaryOperator	!		965838	0					
ANR	965854	CallExpression	"to_ip_string ( tmp , IP_STRING_BUF_SIZE )"		965838	1					
ANR	965855	Callee	to_ip_string		965838	0					
ANR	965856	Identifier	to_ip_string		965838	0					
ANR	965857	ArgumentList	tmp		965838	1					
ANR	965858	Argument	tmp		965838	0					
ANR	965859	Identifier	tmp		965838	0					
ANR	965860	Argument	IP_STRING_BUF_SIZE		965838	1					
ANR	965861	Identifier	IP_STRING_BUF_SIZE		965838	0					
ANR	965862	ReturnStatement	return ret ;	374:2:7973:7983	965838	1	True				
ANR	965863	Identifier	ret		965838	0					
ANR	965864	ExpressionStatement	ret = tmp	375:1:7986:7995	965838	3	True				
ANR	965865	AssignmentExpression	ret = tmp		965838	0		=			
ANR	965866	Identifier	ret		965838	0					
ANR	965867	Identifier	tmp		965838	1					
ANR	965868	ReturnStatement	return ret ;	376:1:7998:8008	965838	4	True				
ANR	965869	Identifier	ret		965838	0					
ANR	965870	ReturnType	MyString		965838	1					
ANR	965871	Identifier	condor_sockaddr :: to_ip_string		965838	2					
ANR	965872	ParameterList			965838	3					
ANR	965873	CFGEntryNode	ENTRY		965838		True				
ANR	965874	CFGExitNode	EXIT		965838		True				
ANR	965875	Symbol	ret		965838						
ANR	965876	Symbol	IP_STRING_BUF_SIZE		965838						
ANR	965877	Symbol	tmp		965838						
ANR	965878	Symbol	to_ip_string		965838						
ANR	965879	Function	condor_sockaddr :: to_ip_string_ex	379:0:8013:8195							
ANR	965880	FunctionDef	condor_sockaddr :: to_ip_string_ex ()		965879	0					
ANR	965881	CompoundStatement		380:0:8063:8195	965879	0					
ANR	965882	IfStatement	if ( is_addr_any ( ) )		965879	0					
ANR	965883	Condition	is_addr_any ( )	382:6:8104:8116	965879	0	True				
ANR	965884	CallExpression	is_addr_any ( )		965879	0					
ANR	965885	Callee	is_addr_any		965879	0					
ANR	965886	Identifier	is_addr_any		965879	0					
ANR	965887	ArgumentList			965879	1					
ANR	965888	ReturnStatement	return get_local_ipaddr ( ) . to_ip_string ( ) ;	383:2:8122:8162	965879	1	True				
ANR	965889	CallExpression	get_local_ipaddr ( ) . to_ip_string ( )		965879	0					
ANR	965890	Callee	get_local_ipaddr ( ) . to_ip_string		965879	0					
ANR	965891	MemberAccess	get_local_ipaddr ( ) . to_ip_string		965879	0					
ANR	965892	CallExpression	get_local_ipaddr ( )		965879	0					
ANR	965893	Callee	get_local_ipaddr		965879	0					
ANR	965894	Identifier	get_local_ipaddr		965879	0					
ANR	965895	ArgumentList			965879	1					
ANR	965896	Identifier	to_ip_string		965879	1					
ANR	965897	ArgumentList			965879	1					
ANR	965898	ElseStatement	else		965879	0					
ANR	965899	ReturnStatement	return to_ip_string ( ) ;	385:2:8172:8193	965879	0	True				
ANR	965900	CallExpression	to_ip_string ( )		965879	0					
ANR	965901	Callee	to_ip_string		965879	0					
ANR	965902	Identifier	to_ip_string		965879	0					
ANR	965903	ArgumentList			965879	1					
ANR	965904	ReturnType	MyString		965879	1					
ANR	965905	Identifier	condor_sockaddr :: to_ip_string_ex		965879	2					
ANR	965906	ParameterList			965879	3					
ANR	965907	CFGEntryNode	ENTRY		965879		True				
ANR	965908	CFGExitNode	EXIT		965879		True				
ANR	965909	Symbol	get_local_ipaddr		965879						
ANR	965910	Symbol	to_ip_string		965879						
ANR	965911	Symbol	is_addr_any		965879						
ANR	965912	Symbol	get_local_ipaddr ( ) . to_ip_string		965879						
ANR	965913	Function	condor_sockaddr :: to_ip_string_ex	388:0:8198:8415							
ANR	965914	FunctionDef	"condor_sockaddr :: to_ip_string_ex (char * buf , int len)"		965913	0					
ANR	965915	CompoundStatement		389:0:8269:8415	965913	0					
ANR	965916	IfStatement	if ( is_addr_any ( ) )		965913	0					
ANR	965917	Condition	is_addr_any ( )	391:5:8309:8321	965913	0	True				
ANR	965918	CallExpression	is_addr_any ( )		965913	0					
ANR	965919	Callee	is_addr_any		965913	0					
ANR	965920	Identifier	is_addr_any		965913	0					
ANR	965921	ArgumentList			965913	1					
ANR	965922	ReturnStatement	"return get_local_ipaddr ( ) . to_ip_string ( buf , len ) ;"	392:2:8326:8374	965913	1	True				
ANR	965923	CallExpression	"get_local_ipaddr ( ) . to_ip_string ( buf , len )"		965913	0					
ANR	965924	Callee	get_local_ipaddr ( ) . to_ip_string		965913	0					
ANR	965925	MemberAccess	get_local_ipaddr ( ) . to_ip_string		965913	0					
ANR	965926	CallExpression	get_local_ipaddr ( )		965913	0					
ANR	965927	Callee	get_local_ipaddr		965913	0					
ANR	965928	Identifier	get_local_ipaddr		965913	0					
ANR	965929	ArgumentList			965913	1					
ANR	965930	Identifier	to_ip_string		965913	1					
ANR	965931	ArgumentList	buf		965913	1					
ANR	965932	Argument	buf		965913	0					
ANR	965933	Identifier	buf		965913	0					
ANR	965934	Argument	len		965913	1					
ANR	965935	Identifier	len		965913	0					
ANR	965936	ElseStatement	else		965913	0					
ANR	965937	ReturnStatement	"return to_ip_string ( buf , len ) ;"	394:2:8384:8413	965913	0	True				
ANR	965938	CallExpression	"to_ip_string ( buf , len )"		965913	0					
ANR	965939	Callee	to_ip_string		965913	0					
ANR	965940	Identifier	to_ip_string		965913	0					
ANR	965941	ArgumentList	buf		965913	1					
ANR	965942	Argument	buf		965913	0					
ANR	965943	Identifier	buf		965913	0					
ANR	965944	Argument	len		965913	1					
ANR	965945	Identifier	len		965913	0					
ANR	965946	ReturnType	const char *		965913	1					
ANR	965947	Identifier	condor_sockaddr :: to_ip_string_ex		965913	2					
ANR	965948	ParameterList	"char * buf , int len"		965913	3					
ANR	965949	Parameter	char * buf	388:45:8243:8251	965913	0	True				
ANR	965950	ParameterType	char *		965913	0					
ANR	965951	Identifier	buf		965913	1					
ANR	965952	Parameter	int len	388:56:8254:8260	965913	1	True				
ANR	965953	ParameterType	int		965913	0					
ANR	965954	Identifier	len		965913	1					
ANR	965955	CFGEntryNode	ENTRY		965913		True				
ANR	965956	CFGExitNode	EXIT		965913		True				
ANR	965957	Symbol	buf		965913						
ANR	965958	Symbol	len		965913						
ANR	965959	Symbol	get_local_ipaddr		965913						
ANR	965960	Symbol	to_ip_string		965913						
ANR	965961	Symbol	is_addr_any		965913						
ANR	965962	Symbol	get_local_ipaddr ( ) . to_ip_string		965913						
ANR	965963	Function	condor_sockaddr :: is_valid	397:0:8418:8819							
ANR	965964	FunctionDef	condor_sockaddr :: is_valid ()		965963	0					
ANR	965965	CompoundStatement		398:0:8457:8819	965963	0					
ANR	965966	ReturnStatement	return v4 . sin_family == AF_INET || v6 . sin6_family == AF_INET6 ;	404:1:8756:8817	965963	0	True				
ANR	965967	OrExpression	v4 . sin_family == AF_INET || v6 . sin6_family == AF_INET6		965963	0		||			
ANR	965968	EqualityExpression	v4 . sin_family == AF_INET		965963	0		==			
ANR	965969	MemberAccess	v4 . sin_family		965963	0					
ANR	965970	Identifier	v4		965963	0					
ANR	965971	Identifier	sin_family		965963	1					
ANR	965972	Identifier	AF_INET		965963	1					
ANR	965973	EqualityExpression	v6 . sin6_family == AF_INET6		965963	1		==			
ANR	965974	MemberAccess	v6 . sin6_family		965963	0					
ANR	965975	Identifier	v6		965963	0					
ANR	965976	Identifier	sin6_family		965963	1					
ANR	965977	Identifier	AF_INET6		965963	1					
ANR	965978	ReturnType	bool		965963	1					
ANR	965979	Identifier	condor_sockaddr :: is_valid		965963	2					
ANR	965980	ParameterList			965963	3					
ANR	965981	CFGEntryNode	ENTRY		965963		True				
ANR	965982	CFGExitNode	EXIT		965963		True				
ANR	965983	Symbol	v6		965963						
ANR	965984	Symbol	v4 . sin_family		965963						
ANR	965985	Symbol	AF_INET		965963						
ANR	965986	Symbol	v6 . sin6_family		965963						
ANR	965987	Symbol	v4		965963						
ANR	965988	Symbol	AF_INET6		965963						
ANR	965989	Function	condor_sockaddr :: is_private_network	407:0:8822:9213							
ANR	965990	FunctionDef	condor_sockaddr :: is_private_network ()		965989	0					
ANR	965991	CompoundStatement		408:0:8871:9213	965989	0					
ANR	965992	IfStatement	if ( is_ipv4 ( ) )		965989	0					
ANR	965993	Condition	is_ipv4 ( )	409:5:8878:8886	965989	0	True				
ANR	965994	CallExpression	is_ipv4 ( )		965989	0					
ANR	965995	Callee	is_ipv4		965989	0					
ANR	965996	Identifier	is_ipv4		965989	0					
ANR	965997	ArgumentList			965989	1					
ANR	965998	CompoundStatement		3:2:21:63	965989	1					
ANR	965999	IdentifierDeclStatement	uint32_t ip = ( uint32_t ) v4 . sin_addr . s_addr ;	410:2:8893:8935	965989	0	True				
ANR	966000	IdentifierDecl	ip = ( uint32_t ) v4 . sin_addr . s_addr		965989	0					
ANR	966001	IdentifierDeclType	uint32_t		965989	0					
ANR	966002	Identifier	ip		965989	1					
ANR	966003	AssignmentExpression	ip = ( uint32_t ) v4 . sin_addr . s_addr		965989	2		=			
ANR	966004	Identifier	ip		965989	0					
ANR	966005	CastExpression	( uint32_t ) v4 . sin_addr . s_addr		965989	1					
ANR	966006	CastTarget	uint32_t		965989	0					
ANR	966007	MemberAccess	v4 . sin_addr . s_addr		965989	1					
ANR	966008	MemberAccess	v4 . sin_addr		965989	0					
ANR	966009	Identifier	v4		965989	0					
ANR	966010	Identifier	sin_addr		965989	1					
ANR	966011	Identifier	s_addr		965989	1					
ANR	966012	ReturnStatement	return ( ( ip & 0xFF000000 ) == 0x0A000000 || ( ip & 0xFFF00000 ) == 0xAC100000 || ( ip & 0xFFFF0000 ) == 0xC0A80000 ) ;	411:2:8939:9088	965989	1	True				
ANR	966013	OrExpression	( ip & 0xFF000000 ) == 0x0A000000 || ( ip & 0xFFF00000 ) == 0xAC100000 || ( ip & 0xFFFF0000 ) == 0xC0A80000		965989	0		||			
ANR	966014	EqualityExpression	( ip & 0xFF000000 ) == 0x0A000000		965989	0		==			
ANR	966015	BitAndExpression	ip & 0xFF000000		965989	0		&			
ANR	966016	Identifier	ip		965989	0					
ANR	966017	PrimaryExpression	0xFF000000		965989	1					
ANR	966018	PrimaryExpression	0x0A000000		965989	1					
ANR	966019	OrExpression	( ip & 0xFFF00000 ) == 0xAC100000 || ( ip & 0xFFFF0000 ) == 0xC0A80000		965989	1		||			
ANR	966020	EqualityExpression	( ip & 0xFFF00000 ) == 0xAC100000		965989	0		==			
ANR	966021	BitAndExpression	ip & 0xFFF00000		965989	0		&			
ANR	966022	Identifier	ip		965989	0					
ANR	966023	PrimaryExpression	0xFFF00000		965989	1					
ANR	966024	PrimaryExpression	0xAC100000		965989	1					
ANR	966025	EqualityExpression	( ip & 0xFFFF0000 ) == 0xC0A80000		965989	1		==			
ANR	966026	BitAndExpression	ip & 0xFFFF0000		965989	0		&			
ANR	966027	Identifier	ip		965989	0					
ANR	966028	PrimaryExpression	0xFFFF0000		965989	1					
ANR	966029	PrimaryExpression	0xC0A80000		965989	1					
ANR	966030	ElseStatement	else		965989	0					
ANR	966031	IfStatement	if ( is_ipv6 ( ) )		965989	0					
ANR	966032	Condition	is_ipv6 ( )	415:10:9123:9131	965989	0	True				
ANR	966033	CallExpression	is_ipv6 ( )		965989	0					
ANR	966034	Callee	is_ipv6		965989	0					
ANR	966035	Identifier	is_ipv6		965989	0					
ANR	966036	ArgumentList			965989	1					
ANR	966037	CompoundStatement		8:21:262:262	965989	1					
ANR	966038	ReturnStatement	return IN6_IS_ADDR_LINKLOCAL ( & v6 . sin6_addr ) ;	416:2:9138:9181	965989	0	True				
ANR	966039	CallExpression	IN6_IS_ADDR_LINKLOCAL ( & v6 . sin6_addr )		965989	0					
ANR	966040	Callee	IN6_IS_ADDR_LINKLOCAL		965989	0					
ANR	966041	Identifier	IN6_IS_ADDR_LINKLOCAL		965989	0					
ANR	966042	ArgumentList	& v6 . sin6_addr		965989	1					
ANR	966043	Argument	& v6 . sin6_addr		965989	0					
ANR	966044	UnaryOperationExpression	& v6 . sin6_addr		965989	0					
ANR	966045	UnaryOperator	&		965989	0					
ANR	966046	MemberAccess	v6 . sin6_addr		965989	1					
ANR	966047	Identifier	v6		965989	0					
ANR	966048	Identifier	sin6_addr		965989	1					
ANR	966049	ElseStatement	else		965989	0					
ANR	966050	CompoundStatement		11:6:320:320	965989	0					
ANR	966051	ReturnStatement	return false ;	421:1:9199:9211	965989	1	True				
ANR	966052	Identifier	false		965989	0					
ANR	966053	ReturnType	bool		965989	1					
ANR	966054	Identifier	condor_sockaddr :: is_private_network		965989	2					
ANR	966055	ParameterList			965989	3					
ANR	966056	CFGEntryNode	ENTRY		965989		True				
ANR	966057	CFGExitNode	EXIT		965989		True				
ANR	966058	Symbol	v6		965989						
ANR	966059	Symbol	v4 . sin_addr . s_addr		965989						
ANR	966060	Symbol	ip		965989						
ANR	966061	Symbol	v4 . sin_addr		965989						
ANR	966062	Symbol	& v6 . sin6_addr		965989						
ANR	966063	Symbol	false		965989						
ANR	966064	Symbol	is_ipv6		965989						
ANR	966065	Symbol	& v6		965989						
ANR	966066	Symbol	is_ipv4		965989						
ANR	966067	Symbol	v4		965989						
ANR	966068	Symbol	IN6_IS_ADDR_LINKLOCAL		965989						
ANR	966069	Function	condor_sockaddr :: set_ipv4	424:0:9216:9277							
ANR	966070	FunctionDef	condor_sockaddr :: set_ipv4 ()		966069	0					
ANR	966071	CompoundStatement		424:33:9249:9277	966069	0					
ANR	966072	ExpressionStatement	v4 . sin_family = AF_INET	425:1:9252:9275	966069	0	True				
ANR	966073	AssignmentExpression	v4 . sin_family = AF_INET		966069	0		=			
ANR	966074	MemberAccess	v4 . sin_family		966069	0					
ANR	966075	Identifier	v4		966069	0					
ANR	966076	Identifier	sin_family		966069	1					
ANR	966077	Identifier	AF_INET		966069	1					
ANR	966078	ReturnType	void		966069	1					
ANR	966079	Identifier	condor_sockaddr :: set_ipv4		966069	2					
ANR	966080	ParameterList			966069	3					
ANR	966081	CFGEntryNode	ENTRY		966069		True				
ANR	966082	CFGExitNode	EXIT		966069		True				
ANR	966083	Symbol	v4 . sin_family		966069						
ANR	966084	Symbol	AF_INET		966069						
ANR	966085	Symbol	v4		966069						
ANR	966086	Function	condor_sockaddr :: set_ipv6	428:0:9280:9343							
ANR	966087	FunctionDef	condor_sockaddr :: set_ipv6 ()		966086	0					
ANR	966088	CompoundStatement		428:33:9313:9343	966086	0					
ANR	966089	ExpressionStatement	v6 . sin6_family = AF_INET6	429:1:9316:9341	966086	0	True				
ANR	966090	AssignmentExpression	v6 . sin6_family = AF_INET6		966086	0		=			
ANR	966091	MemberAccess	v6 . sin6_family		966086	0					
ANR	966092	Identifier	v6		966086	0					
ANR	966093	Identifier	sin6_family		966086	1					
ANR	966094	Identifier	AF_INET6		966086	1					
ANR	966095	ReturnType	void		966086	1					
ANR	966096	Identifier	condor_sockaddr :: set_ipv6		966086	2					
ANR	966097	ParameterList			966086	3					
ANR	966098	CFGEntryNode	ENTRY		966086		True				
ANR	966099	CFGExitNode	EXIT		966086		True				
ANR	966100	Symbol	v6		966086						
ANR	966101	Symbol	v6 . sin6_family		966086						
ANR	966102	Symbol	AF_INET6		966086						
ANR	966103	Function	condor_sockaddr :: get_aftype	432:0:9346:9481							
ANR	966104	FunctionDef	condor_sockaddr :: get_aftype ()		966103	0					
ANR	966105	CompoundStatement		432:40:9386:9481	966103	0					
ANR	966106	IfStatement	if ( is_ipv4 ( ) )		966103	0					
ANR	966107	Condition	is_ipv4 ( )	433:5:9393:9401	966103	0	True				
ANR	966108	CallExpression	is_ipv4 ( )		966103	0					
ANR	966109	Callee	is_ipv4		966103	0					
ANR	966110	Identifier	is_ipv4		966103	0					
ANR	966111	ArgumentList			966103	1					
ANR	966112	ReturnStatement	return AF_INET ;	434:2:9406:9420	966103	1	True				
ANR	966113	Identifier	AF_INET		966103	0					
ANR	966114	ElseStatement	else		966103	0					
ANR	966115	IfStatement	if ( is_ipv6 ( ) )		966103	0					
ANR	966116	Condition	is_ipv6 ( )	435:10:9432:9440	966103	0	True				
ANR	966117	CallExpression	is_ipv6 ( )		966103	0					
ANR	966118	Callee	is_ipv6		966103	0					
ANR	966119	Identifier	is_ipv6		966103	0					
ANR	966120	ArgumentList			966103	1					
ANR	966121	ReturnStatement	return AF_INET6 ;	436:2:9445:9460	966103	1	True				
ANR	966122	Identifier	AF_INET6		966103	0					
ANR	966123	ReturnStatement	return AF_UNSPEC ;	437:1:9463:9479	966103	1	True				
ANR	966124	Identifier	AF_UNSPEC		966103	0					
ANR	966125	ReturnType	int		966103	1					
ANR	966126	Identifier	condor_sockaddr :: get_aftype		966103	2					
ANR	966127	ParameterList			966103	3					
ANR	966128	CFGEntryNode	ENTRY		966103		True				
ANR	966129	CFGExitNode	EXIT		966103		True				
ANR	966130	Symbol	AF_INET		966103						
ANR	966131	Symbol	is_ipv6		966103						
ANR	966132	Symbol	is_ipv4		966103						
ANR	966133	Symbol	AF_INET6		966103						
ANR	966134	Symbol	AF_UNSPEC		966103						
ANR	966135	Function	condor_sockaddr :: get_address	440:0:9484:9690							
ANR	966136	FunctionDef	condor_sockaddr :: get_address ()		966135	0					
ANR	966137	CompoundStatement		440:53:9537:9690	966135	0					
ANR	966138	SwitchStatement	switch ( v4 . sin_family )		966135	0					
ANR	966139	Condition	v4 . sin_family	441:8:9547:9559	966135	0	True				
ANR	966140	MemberAccess	v4 . sin_family		966135	0					
ANR	966141	Identifier	v4		966135	0					
ANR	966142	Identifier	sin_family		966135	1					
ANR	966143	CompoundStatement		2:23:24:24	966135	1					
ANR	966144	Label	case AF_INET :	442:1:9565:9577	966135	0	True				
ANR	966145	Identifier	AF_INET		966135	0					
ANR	966146	ReturnStatement	return ( const uint32_t * ) & v4 . sin_addr ;	443:2:9581:9617	966135	1	True				
ANR	966147	CastExpression	( const uint32_t * ) & v4 . sin_addr		966135	0					
ANR	966148	CastTarget	const uint32_t *		966135	0					
ANR	966149	UnaryOperationExpression	& v4 . sin_addr		966135	1					
ANR	966150	UnaryOperator	&		966135	0					
ANR	966151	MemberAccess	v4 . sin_addr		966135	1					
ANR	966152	Identifier	v4		966135	0					
ANR	966153	Identifier	sin_addr		966135	1					
ANR	966154	Label	case AF_INET6 :	444:1:9620:9633	966135	2	True				
ANR	966155	Identifier	AF_INET6		966135	0					
ANR	966156	ReturnStatement	return ( const uint32_t * ) & v6 . sin6_addr ;	445:2:9637:9674	966135	3	True				
ANR	966157	CastExpression	( const uint32_t * ) & v6 . sin6_addr		966135	0					
ANR	966158	CastTarget	const uint32_t *		966135	0					
ANR	966159	UnaryOperationExpression	& v6 . sin6_addr		966135	1					
ANR	966160	UnaryOperator	&		966135	0					
ANR	966161	MemberAccess	v6 . sin6_addr		966135	1					
ANR	966162	Identifier	v6		966135	0					
ANR	966163	Identifier	sin6_addr		966135	1					
ANR	966164	ReturnStatement	return 0 ;	447:1:9680:9688	966135	1	True				
ANR	966165	PrimaryExpression	0		966135	0					
ANR	966166	ReturnType	const uint32_t *		966135	1					
ANR	966167	Identifier	condor_sockaddr :: get_address		966135	2					
ANR	966168	ParameterList			966135	3					
ANR	966169	CFGEntryNode	ENTRY		966135		True				
ANR	966170	CFGExitNode	EXIT		966135		True				
ANR	966171	Symbol	v6		966135						
ANR	966172	Symbol	v4 . sin_family		966135						
ANR	966173	Symbol	& v6 . sin6_addr		966135						
ANR	966174	Symbol	& v4		966135						
ANR	966175	Symbol	& v6		966135						
ANR	966176	Symbol	& v4 . sin_addr		966135						
ANR	966177	Symbol	v4		966135						
ANR	966178	Function	condor_sockaddr :: get_address_len	450:0:9693:9834							
ANR	966179	FunctionDef	condor_sockaddr :: get_address_len ()		966178	0					
ANR	966180	CompoundStatement		450:45:9738:9834	966178	0					
ANR	966181	SwitchStatement	switch ( v4 . sin_family )		966178	0					
ANR	966182	Condition	v4 . sin_family	451:8:9748:9760	966178	0	True				
ANR	966183	MemberAccess	v4 . sin_family		966178	0					
ANR	966184	Identifier	v4		966178	0					
ANR	966185	Identifier	sin_family		966178	1					
ANR	966186	CompoundStatement		2:23:24:24	966178	1					
ANR	966187	Label	case AF_INET :	452:1:9766:9778	966178	0	True				
ANR	966188	Identifier	AF_INET		966178	0					
ANR	966189	ReturnStatement	return 1 ;	453:2:9782:9790	966178	1	True				
ANR	966190	PrimaryExpression	1		966178	0					
ANR	966191	Label	case AF_INET6 :	454:1:9793:9806	966178	2	True				
ANR	966192	Identifier	AF_INET6		966178	0					
ANR	966193	ReturnStatement	return 4 ;	455:2:9810:9818	966178	3	True				
ANR	966194	PrimaryExpression	4		966178	0					
ANR	966195	ReturnStatement	return 0 ;	457:1:9824:9832	966178	1	True				
ANR	966196	PrimaryExpression	0		966178	0					
ANR	966197	ReturnType	int		966178	1					
ANR	966198	Identifier	condor_sockaddr :: get_address_len		966178	2					
ANR	966199	ParameterList			966178	3					
ANR	966200	CFGEntryNode	ENTRY		966178		True				
ANR	966201	CFGExitNode	EXIT		966178		True				
ANR	966202	Symbol	v4 . sin_family		966178						
ANR	966203	Symbol	v4		966178						
ANR	966204	Function	condor_sockaddr :: to_ipv6_address	460:0:9837:10179							
ANR	966205	FunctionDef	condor_sockaddr :: to_ipv6_address ()		966204	0					
ANR	966206	CompoundStatement		461:0:9887:10179	966204	0					
ANR	966207	IfStatement	if ( is_ipv6 ( ) )		966204	0					
ANR	966208	Condition	is_ipv6 ( )	462:5:9894:9902	966204	0	True				
ANR	966209	CallExpression	is_ipv6 ( )		966204	0					
ANR	966210	Callee	is_ipv6		966204	0					
ANR	966211	Identifier	is_ipv6		966204	0					
ANR	966212	ArgumentList			966204	1					
ANR	966213	ReturnStatement	return v6 . sin6_addr ;	462:16:9905:9924	966204	1	True				
ANR	966214	MemberAccess	v6 . sin6_addr		966204	0					
ANR	966215	Identifier	v6		966204	0					
ANR	966216	Identifier	sin6_addr		966204	1					
ANR	966217	IdentifierDeclStatement	in6_addr ret ;	463:1:9927:9939	966204	1	True				
ANR	966218	IdentifierDecl	ret		966204	0					
ANR	966219	IdentifierDeclType	in6_addr		966204	0					
ANR	966220	Identifier	ret		966204	1					
ANR	966221	IdentifierDeclStatement	uint32_t * addr = ( uint32_t * ) & ret ;	466:1:10047:10079	966204	2	True				
ANR	966222	IdentifierDecl	* addr = ( uint32_t * ) & ret		966204	0					
ANR	966223	IdentifierDeclType	uint32_t *		966204	0					
ANR	966224	Identifier	addr		966204	1					
ANR	966225	AssignmentExpression	* addr = ( uint32_t * ) & ret		966204	2		=			
ANR	966226	Identifier	addr		966204	0					
ANR	966227	CastExpression	( uint32_t * ) & ret		966204	1					
ANR	966228	CastTarget	uint32_t *		966204	0					
ANR	966229	UnaryOperationExpression	& ret		966204	1					
ANR	966230	UnaryOperator	&		966204	0					
ANR	966231	Identifier	ret		966204	1					
ANR	966232	ExpressionStatement	addr [ 0 ] = 0	467:1:10082:10093	966204	3	True				
ANR	966233	AssignmentExpression	addr [ 0 ] = 0		966204	0		=			
ANR	966234	ArrayIndexing	addr [ 0 ]		966204	0					
ANR	966235	Identifier	addr		966204	0					
ANR	966236	PrimaryExpression	0		966204	1					
ANR	966237	PrimaryExpression	0		966204	1					
ANR	966238	ExpressionStatement	addr [ 1 ] = 0	468:1:10096:10107	966204	4	True				
ANR	966239	AssignmentExpression	addr [ 1 ] = 0		966204	0		=			
ANR	966240	ArrayIndexing	addr [ 1 ]		966204	0					
ANR	966241	Identifier	addr		966204	0					
ANR	966242	PrimaryExpression	1		966204	1					
ANR	966243	PrimaryExpression	0		966204	1					
ANR	966244	ExpressionStatement	addr [ 2 ] = htonl ( 0xffff )	469:1:10110:10133	966204	5	True				
ANR	966245	AssignmentExpression	addr [ 2 ] = htonl ( 0xffff )		966204	0		=			
ANR	966246	ArrayIndexing	addr [ 2 ]		966204	0					
ANR	966247	Identifier	addr		966204	0					
ANR	966248	PrimaryExpression	2		966204	1					
ANR	966249	CallExpression	htonl ( 0xffff )		966204	1					
ANR	966250	Callee	htonl		966204	0					
ANR	966251	Identifier	htonl		966204	0					
ANR	966252	ArgumentList	0xffff		966204	1					
ANR	966253	Argument	0xffff		966204	0					
ANR	966254	PrimaryExpression	0xffff		966204	0					
ANR	966255	ExpressionStatement	addr [ 3 ] = v4 . sin_addr . s_addr	470:1:10136:10164	966204	6	True				
ANR	966256	AssignmentExpression	addr [ 3 ] = v4 . sin_addr . s_addr		966204	0		=			
ANR	966257	ArrayIndexing	addr [ 3 ]		966204	0					
ANR	966258	Identifier	addr		966204	0					
ANR	966259	PrimaryExpression	3		966204	1					
ANR	966260	MemberAccess	v4 . sin_addr . s_addr		966204	1					
ANR	966261	MemberAccess	v4 . sin_addr		966204	0					
ANR	966262	Identifier	v4		966204	0					
ANR	966263	Identifier	sin_addr		966204	1					
ANR	966264	Identifier	s_addr		966204	1					
ANR	966265	ReturnStatement	return ret ;	471:1:10167:10177	966204	7	True				
ANR	966266	Identifier	ret		966204	0					
ANR	966267	ReturnType	in6_addr		966204	1					
ANR	966268	Identifier	condor_sockaddr :: to_ipv6_address		966204	2					
ANR	966269	ParameterList			966204	3					
ANR	966270	CFGEntryNode	ENTRY		966204		True				
ANR	966271	CFGExitNode	EXIT		966204		True				
ANR	966272	Symbol	v6		966204						
ANR	966273	Symbol	ret		966204						
ANR	966274	Symbol	& ret		966204						
ANR	966275	Symbol	v4 . sin_addr . s_addr		966204						
ANR	966276	Symbol	v4 . sin_addr		966204						
ANR	966277	Symbol	is_ipv6		966204						
ANR	966278	Symbol	* addr		966204						
ANR	966279	Symbol	addr		966204						
ANR	966280	Symbol	v6 . sin6_addr		966204						
ANR	966281	Symbol	htonl		966204						
ANR	966282	Symbol	v4		966204						
ANR	966283	Function	condor_sockaddr :: convert_to_ipv6	474:0:10182:10424							
ANR	966284	FunctionDef	condor_sockaddr :: convert_to_ipv6 ()		966283	0					
ANR	966285	CompoundStatement		474:40:10222:10424	966283	0					
ANR	966286	IfStatement	if ( ! is_ipv4 ( ) )		966283	0					
ANR	966287	Condition	! is_ipv4 ( )	476:5:10269:10278	966283	0	True				
ANR	966288	UnaryOperationExpression	! is_ipv4 ( )		966283	0					
ANR	966289	UnaryOperator	!		966283	0					
ANR	966290	CallExpression	is_ipv4 ( )		966283	1					
ANR	966291	Callee	is_ipv4		966283	0					
ANR	966292	Identifier	is_ipv4		966283	0					
ANR	966293	ArgumentList			966283	1					
ANR	966294	ReturnStatement	return ;	477:2:10283:10289	966283	1	True				
ANR	966295	IdentifierDeclStatement	in6_addr addr = to_ipv6_address ( ) ;	478:1:10292:10325	966283	1	True				
ANR	966296	IdentifierDecl	addr = to_ipv6_address ( )		966283	0					
ANR	966297	IdentifierDeclType	in6_addr		966283	0					
ANR	966298	Identifier	addr		966283	1					
ANR	966299	AssignmentExpression	addr = to_ipv6_address ( )		966283	2		=			
ANR	966300	Identifier	addr		966283	0					
ANR	966301	CallExpression	to_ipv6_address ( )		966283	1					
ANR	966302	Callee	to_ipv6_address		966283	0					
ANR	966303	Identifier	to_ipv6_address		966283	0					
ANR	966304	ArgumentList			966283	1					
ANR	966305	IdentifierDeclStatement	unsigned short port = get_port ( ) ;	479:1:10328:10360	966283	2	True				
ANR	966306	IdentifierDecl	port = get_port ( )		966283	0					
ANR	966307	IdentifierDeclType	unsigned short		966283	0					
ANR	966308	Identifier	port		966283	1					
ANR	966309	AssignmentExpression	port = get_port ( )		966283	2		=			
ANR	966310	Identifier	port		966283	0					
ANR	966311	CallExpression	get_port ( )		966283	1					
ANR	966312	Callee	get_port		966283	0					
ANR	966313	Identifier	get_port		966283	0					
ANR	966314	ArgumentList			966283	1					
ANR	966315	ExpressionStatement	clear ( )	480:1:10363:10370	966283	3	True				
ANR	966316	CallExpression	clear ( )		966283	0					
ANR	966317	Callee	clear		966283	0					
ANR	966318	Identifier	clear		966283	0					
ANR	966319	ArgumentList			966283	1					
ANR	966320	ExpressionStatement	set_ipv6 ( )	481:1:10373:10383	966283	4	True				
ANR	966321	CallExpression	set_ipv6 ( )		966283	0					
ANR	966322	Callee	set_ipv6		966283	0					
ANR	966323	Identifier	set_ipv6		966283	0					
ANR	966324	ArgumentList			966283	1					
ANR	966325	ExpressionStatement	set_port ( port )	482:1:10386:10400	966283	5	True				
ANR	966326	CallExpression	set_port ( port )		966283	0					
ANR	966327	Callee	set_port		966283	0					
ANR	966328	Identifier	set_port		966283	0					
ANR	966329	ArgumentList	port		966283	1					
ANR	966330	Argument	port		966283	0					
ANR	966331	Identifier	port		966283	0					
ANR	966332	ExpressionStatement	v6 . sin6_addr = addr	483:1:10403:10422	966283	6	True				
ANR	966333	AssignmentExpression	v6 . sin6_addr = addr		966283	0		=			
ANR	966334	MemberAccess	v6 . sin6_addr		966283	0					
ANR	966335	Identifier	v6		966283	0					
ANR	966336	Identifier	sin6_addr		966283	1					
ANR	966337	Identifier	addr		966283	1					
ANR	966338	ReturnType	void		966283	1					
ANR	966339	Identifier	condor_sockaddr :: convert_to_ipv6		966283	2					
ANR	966340	ParameterList			966283	3					
ANR	966341	CFGEntryNode	ENTRY		966283		True				
ANR	966342	CFGExitNode	EXIT		966283		True				
ANR	966343	Symbol	v6		966283						
ANR	966344	Symbol	to_ipv6_address		966283						
ANR	966345	Symbol	port		966283						
ANR	966346	Symbol	get_port		966283						
ANR	966347	Symbol	addr		966283						
ANR	966348	Symbol	is_ipv4		966283						
ANR	966349	Symbol	v6 . sin6_addr		966283						
ANR	966350	Function	condor_sockaddr :: compare_address	486:0:10427:10814							
ANR	966351	FunctionDef	condor_sockaddr :: compare_address (const condor_sockaddr & addr)		966350	0					
ANR	966352	CompoundStatement		487:0:10500:10814	966350	0					
ANR	966353	IfStatement	if ( is_ipv4 ( ) )		966350	0					
ANR	966354	Condition	is_ipv4 ( )	488:5:10507:10515	966350	0	True				
ANR	966355	CallExpression	is_ipv4 ( )		966350	0					
ANR	966356	Callee	is_ipv4		966350	0					
ANR	966357	Identifier	is_ipv4		966350	0					
ANR	966358	ArgumentList			966350	1					
ANR	966359	CompoundStatement		2:16:17:17	966350	1					
ANR	966360	IfStatement	if ( ! addr . is_ipv4 ( ) )		966350	0					
ANR	966361	Condition	! addr . is_ipv4 ( )	489:6:10526:10540	966350	0	True				
ANR	966362	UnaryOperationExpression	! addr . is_ipv4 ( )		966350	0					
ANR	966363	UnaryOperator	!		966350	0					
ANR	966364	CallExpression	addr . is_ipv4 ( )		966350	1					
ANR	966365	Callee	addr . is_ipv4		966350	0					
ANR	966366	MemberAccess	addr . is_ipv4		966350	0					
ANR	966367	Identifier	addr		966350	0					
ANR	966368	Identifier	is_ipv4		966350	1					
ANR	966369	ArgumentList			966350	1					
ANR	966370	ReturnStatement	return false ;	490:3:10546:10558	966350	1	True				
ANR	966371	Identifier	false		966350	0					
ANR	966372	ReturnStatement	return v4 . sin_addr . s_addr == addr . v4 . sin_addr . s_addr ;	491:2:10562:10614	966350	1	True				
ANR	966373	EqualityExpression	v4 . sin_addr . s_addr == addr . v4 . sin_addr . s_addr		966350	0		==			
ANR	966374	MemberAccess	v4 . sin_addr . s_addr		966350	0					
ANR	966375	MemberAccess	v4 . sin_addr		966350	0					
ANR	966376	Identifier	v4		966350	0					
ANR	966377	Identifier	sin_addr		966350	1					
ANR	966378	Identifier	s_addr		966350	1					
ANR	966379	MemberAccess	addr . v4 . sin_addr . s_addr		966350	1					
ANR	966380	MemberAccess	addr . v4 . sin_addr		966350	0					
ANR	966381	MemberAccess	addr . v4		966350	0					
ANR	966382	Identifier	addr		966350	0					
ANR	966383	Identifier	v4		966350	1					
ANR	966384	Identifier	sin_addr		966350	1					
ANR	966385	Identifier	s_addr		966350	1					
ANR	966386	ElseStatement	else		966350	0					
ANR	966387	IfStatement	if ( is_ipv6 ( ) )		966350	0					
ANR	966388	Condition	is_ipv6 ( )	492:12:10628:10636	966350	0	True				
ANR	966389	CallExpression	is_ipv6 ( )		966350	0					
ANR	966390	Callee	is_ipv6		966350	0					
ANR	966391	Identifier	is_ipv6		966350	0					
ANR	966392	ArgumentList			966350	1					
ANR	966393	CompoundStatement		6:23:138:138	966350	1					
ANR	966394	IfStatement	if ( ! addr . is_ipv6 ( ) )		966350	0					
ANR	966395	Condition	! addr . is_ipv6 ( )	493:6:10647:10661	966350	0	True				
ANR	966396	UnaryOperationExpression	! addr . is_ipv6 ( )		966350	0					
ANR	966397	UnaryOperator	!		966350	0					
ANR	966398	CallExpression	addr . is_ipv6 ( )		966350	1					
ANR	966399	Callee	addr . is_ipv6		966350	0					
ANR	966400	MemberAccess	addr . is_ipv6		966350	0					
ANR	966401	Identifier	addr		966350	0					
ANR	966402	Identifier	is_ipv6		966350	1					
ANR	966403	ArgumentList			966350	1					
ANR	966404	ReturnStatement	return false ;	494:3:10667:10679	966350	1	True				
ANR	966405	Identifier	false		966350	0					
ANR	966406	ReturnStatement	"return memcmp ( ( const void * ) & v6 . sin6_addr , ( const void * ) & addr . v6 . sin6_addr , sizeof ( in6_addr ) ) == 0 ;"	495:2:10683:10794	966350	1	True				
ANR	966407	EqualityExpression	"memcmp ( ( const void * ) & v6 . sin6_addr , ( const void * ) & addr . v6 . sin6_addr , sizeof ( in6_addr ) ) == 0"		966350	0		==			
ANR	966408	CallExpression	"memcmp ( ( const void * ) & v6 . sin6_addr , ( const void * ) & addr . v6 . sin6_addr , sizeof ( in6_addr ) )"		966350	0					
ANR	966409	Callee	memcmp		966350	0					
ANR	966410	Identifier	memcmp		966350	0					
ANR	966411	ArgumentList	( const void * ) & v6 . sin6_addr		966350	1					
ANR	966412	Argument	( const void * ) & v6 . sin6_addr		966350	0					
ANR	966413	CastExpression	( const void * ) & v6 . sin6_addr		966350	0					
ANR	966414	CastTarget	const void *		966350	0					
ANR	966415	UnaryOperationExpression	& v6 . sin6_addr		966350	1					
ANR	966416	UnaryOperator	&		966350	0					
ANR	966417	MemberAccess	v6 . sin6_addr		966350	1					
ANR	966418	Identifier	v6		966350	0					
ANR	966419	Identifier	sin6_addr		966350	1					
ANR	966420	Argument	( const void * ) & addr . v6 . sin6_addr		966350	1					
ANR	966421	CastExpression	( const void * ) & addr . v6 . sin6_addr		966350	0					
ANR	966422	CastTarget	const void *		966350	0					
ANR	966423	UnaryOperationExpression	& addr . v6 . sin6_addr		966350	1					
ANR	966424	UnaryOperator	&		966350	0					
ANR	966425	MemberAccess	addr . v6 . sin6_addr		966350	1					
ANR	966426	MemberAccess	addr . v6		966350	0					
ANR	966427	Identifier	addr		966350	0					
ANR	966428	Identifier	v6		966350	1					
ANR	966429	Identifier	sin6_addr		966350	1					
ANR	966430	Argument	sizeof ( in6_addr )		966350	2					
ANR	966431	SizeofExpression	sizeof ( in6_addr )		966350	0					
ANR	966432	Sizeof	sizeof		966350	0					
ANR	966433	SizeofOperand	in6_addr		966350	1					
ANR	966434	PrimaryExpression	0		966350	1					
ANR	966435	ReturnStatement	return false ;	499:1:10800:10812	966350	1	True				
ANR	966436	Identifier	false		966350	0					
ANR	966437	ReturnType	bool		966350	1					
ANR	966438	Identifier	condor_sockaddr :: compare_address		966350	2					
ANR	966439	ParameterList	const condor_sockaddr & addr		966350	3					
ANR	966440	Parameter	const condor_sockaddr & addr	486:38:10465:10491	966350	0	True				
ANR	966441	ParameterType	const condor_sockaddr &		966350	0					
ANR	966442	Identifier	addr		966350	1					
ANR	966443	CFGEntryNode	ENTRY		966350		True				
ANR	966444	CFGExitNode	EXIT		966350		True				
ANR	966445	Symbol	v6		966350						
ANR	966446	Symbol	& addr		966350						
ANR	966447	Symbol	v4 . sin_addr . s_addr		966350						
ANR	966448	Symbol	false		966350						
ANR	966449	Symbol	v4 . sin_addr		966350						
ANR	966450	Symbol	is_ipv6		966350						
ANR	966451	Symbol	& v6		966350						
ANR	966452	Symbol	addr . v4 . sin_addr		966350						
ANR	966453	Symbol	addr . v4		966350						
ANR	966454	Symbol	is_ipv4		966350						
ANR	966455	Symbol	addr . v4 . sin_addr . s_addr		966350						
ANR	966456	Symbol	addr . is_ipv6		966350						
ANR	966457	Symbol	addr . is_ipv4		966350						
ANR	966458	Symbol	addr . v6		966350						
ANR	966459	Symbol	memcmp		966350						
ANR	966460	Symbol	& addr . v6		966350						
ANR	966461	Symbol	& addr . v6 . sin6_addr		966350						
ANR	966462	Symbol	& v6 . sin6_addr		966350						
ANR	966463	Symbol	addr		966350						
ANR	966464	Symbol	v4		966350						
ANR	966465	Function	operator <	507:22:10944:11126							
ANR	966466	FunctionDef	operator < (const condor_sockaddr & rhs)		966465	0					
ANR	966467	CompoundStatement		508:0:10988:11126	966465	0					
ANR	966468	IdentifierDeclStatement	const void * l = ( const void * ) & storage ;	509:1:10991:11028	966465	0	True				
ANR	966469	IdentifierDecl	* l = ( const void * ) & storage		966465	0					
ANR	966470	IdentifierDeclType	const void *		966465	0					
ANR	966471	Identifier	l		966465	1					
ANR	966472	AssignmentExpression	* l = ( const void * ) & storage		966465	2		=			
ANR	966473	Identifier	l		966465	0					
ANR	966474	CastExpression	( const void * ) & storage		966465	1					
ANR	966475	CastTarget	const void *		966465	0					
ANR	966476	UnaryOperationExpression	& storage		966465	1					
ANR	966477	UnaryOperator	&		966465	0					
ANR	966478	Identifier	storage		966465	1					
ANR	966479	IdentifierDeclStatement	const void * r = ( const void * ) & rhs . storage ;	510:1:11031:11072	966465	1	True				
ANR	966480	IdentifierDecl	* r = ( const void * ) & rhs . storage		966465	0					
ANR	966481	IdentifierDeclType	const void *		966465	0					
ANR	966482	Identifier	r		966465	1					
ANR	966483	AssignmentExpression	* r = ( const void * ) & rhs . storage		966465	2		=			
ANR	966484	Identifier	r		966465	0					
ANR	966485	CastExpression	( const void * ) & rhs . storage		966465	1					
ANR	966486	CastTarget	const void *		966465	0					
ANR	966487	UnaryOperationExpression	& rhs . storage		966465	1					
ANR	966488	UnaryOperator	&		966465	0					
ANR	966489	MemberAccess	rhs . storage		966465	1					
ANR	966490	Identifier	rhs		966465	0					
ANR	966491	Identifier	storage		966465	1					
ANR	966492	ReturnStatement	"return memcmp ( l , r , sizeof ( sockaddr_storage ) ) < 0 ;"	511:1:11075:11124	966465	2	True				
ANR	966493	RelationalExpression	"memcmp ( l , r , sizeof ( sockaddr_storage ) ) < 0"		966465	0		<			
ANR	966494	CallExpression	"memcmp ( l , r , sizeof ( sockaddr_storage ) )"		966465	0					
ANR	966495	Callee	memcmp		966465	0					
ANR	966496	Identifier	memcmp		966465	0					
ANR	966497	ArgumentList	l		966465	1					
ANR	966498	Argument	l		966465	0					
ANR	966499	Identifier	l		966465	0					
ANR	966500	Argument	r		966465	1					
ANR	966501	Identifier	r		966465	0					
ANR	966502	Argument	sizeof ( sockaddr_storage )		966465	2					
ANR	966503	SizeofExpression	sizeof ( sockaddr_storage )		966465	0					
ANR	966504	Sizeof	sizeof		966465	0					
ANR	966505	SizeofOperand	sockaddr_storage		966465	1					
ANR	966506	PrimaryExpression	0		966465	1					
ANR	966507	Identifier	operator <		966465	1					
ANR	966508	ParameterList	const condor_sockaddr & rhs		966465	2					
ANR	966509	Parameter	const condor_sockaddr & rhs	507:32:10954:10979	966465	0	True				
ANR	966510	ParameterType	const condor_sockaddr &		966465	0					
ANR	966511	Identifier	rhs		966465	1					
ANR	966512	CFGEntryNode	ENTRY		966465		True				
ANR	966513	CFGExitNode	EXIT		966465		True				
ANR	966514	Symbol	r		966465						
ANR	966515	Symbol	memcmp		966465						
ANR	966516	Symbol	& rhs		966465						
ANR	966517	Symbol	& rhs . storage		966465						
ANR	966518	Symbol	rhs		966465						
ANR	966519	Symbol	l		966465						
ANR	966520	Symbol	& storage		966465						
ANR	966521	Function	operator ==	514:22:11151:11335							
ANR	966522	FunctionDef	operator == (const condor_sockaddr & rhs)		966521	0					
ANR	966523	CompoundStatement		515:0:11196:11335	966521	0					
ANR	966524	IdentifierDeclStatement	const void * l = ( const void * ) & storage ;	516:1:11199:11236	966521	0	True				
ANR	966525	IdentifierDecl	* l = ( const void * ) & storage		966521	0					
ANR	966526	IdentifierDeclType	const void *		966521	0					
ANR	966527	Identifier	l		966521	1					
ANR	966528	AssignmentExpression	* l = ( const void * ) & storage		966521	2		=			
ANR	966529	Identifier	l		966521	0					
ANR	966530	CastExpression	( const void * ) & storage		966521	1					
ANR	966531	CastTarget	const void *		966521	0					
ANR	966532	UnaryOperationExpression	& storage		966521	1					
ANR	966533	UnaryOperator	&		966521	0					
ANR	966534	Identifier	storage		966521	1					
ANR	966535	IdentifierDeclStatement	const void * r = ( const void * ) & rhs . storage ;	517:1:11239:11280	966521	1	True				
ANR	966536	IdentifierDecl	* r = ( const void * ) & rhs . storage		966521	0					
ANR	966537	IdentifierDeclType	const void *		966521	0					
ANR	966538	Identifier	r		966521	1					
ANR	966539	AssignmentExpression	* r = ( const void * ) & rhs . storage		966521	2		=			
ANR	966540	Identifier	r		966521	0					
ANR	966541	CastExpression	( const void * ) & rhs . storage		966521	1					
ANR	966542	CastTarget	const void *		966521	0					
ANR	966543	UnaryOperationExpression	& rhs . storage		966521	1					
ANR	966544	UnaryOperator	&		966521	0					
ANR	966545	MemberAccess	rhs . storage		966521	1					
ANR	966546	Identifier	rhs		966521	0					
ANR	966547	Identifier	storage		966521	1					
ANR	966548	ReturnStatement	"return memcmp ( l , r , sizeof ( sockaddr_storage ) ) == 0 ;"	518:1:11283:11333	966521	2	True				
ANR	966549	EqualityExpression	"memcmp ( l , r , sizeof ( sockaddr_storage ) ) == 0"		966521	0		==			
ANR	966550	CallExpression	"memcmp ( l , r , sizeof ( sockaddr_storage ) )"		966521	0					
ANR	966551	Callee	memcmp		966521	0					
ANR	966552	Identifier	memcmp		966521	0					
ANR	966553	ArgumentList	l		966521	1					
ANR	966554	Argument	l		966521	0					
ANR	966555	Identifier	l		966521	0					
ANR	966556	Argument	r		966521	1					
ANR	966557	Identifier	r		966521	0					
ANR	966558	Argument	sizeof ( sockaddr_storage )		966521	2					
ANR	966559	SizeofExpression	sizeof ( sockaddr_storage )		966521	0					
ANR	966560	Sizeof	sizeof		966521	0					
ANR	966561	SizeofOperand	sockaddr_storage		966521	1					
ANR	966562	PrimaryExpression	0		966521	1					
ANR	966563	Identifier	operator ==		966521	1					
ANR	966564	ParameterList	const condor_sockaddr & rhs		966521	2					
ANR	966565	Parameter	const condor_sockaddr & rhs	514:33:11162:11187	966521	0	True				
ANR	966566	ParameterType	const condor_sockaddr &		966521	0					
ANR	966567	Identifier	rhs		966521	1					
ANR	966568	CFGEntryNode	ENTRY		966521		True				
ANR	966569	CFGExitNode	EXIT		966521		True				
ANR	966570	Symbol	r		966521						
ANR	966571	Symbol	memcmp		966521						
ANR	966572	Symbol	& rhs		966521						
ANR	966573	Symbol	& rhs . storage		966521						
ANR	966574	Symbol	rhs		966521						
ANR	966575	Symbol	l		966521						
ANR	966576	Symbol	& storage		966521						
ANR	966577	Function	condor_sockaddr :: is_link_local	521:0:11338:11674							
ANR	966578	FunctionDef	condor_sockaddr :: is_link_local ()		966577	0					
ANR	966579	CompoundStatement		521:44:11382:11674	966577	0					
ANR	966580	IfStatement	if ( is_ipv4 ( ) )		966577	0					
ANR	966581	Condition	is_ipv4 ( )	522:5:11389:11397	966577	0	True				
ANR	966582	CallExpression	is_ipv4 ( )		966577	0					
ANR	966583	Callee	is_ipv4		966577	0					
ANR	966584	Identifier	is_ipv4		966577	0					
ANR	966585	ArgumentList			966577	1					
ANR	966586	CompoundStatement		4:2:58:84	966577	1					
ANR	966587	IdentifierDeclStatement	uint32_t mask = 0xa9fe0000 ;	524:2:11441:11467	966577	0	True				
ANR	966588	IdentifierDecl	mask = 0xa9fe0000		966577	0					
ANR	966589	IdentifierDeclType	uint32_t		966577	0					
ANR	966590	Identifier	mask		966577	1					
ANR	966591	AssignmentExpression	mask = 0xa9fe0000		966577	2		=			
ANR	966592	Identifier	mask		966577	0					
ANR	966593	PrimaryExpression	0xa9fe0000		966577	1					
ANR	966594	ReturnStatement	return ( ( uint32_t ) v4 . sin_addr . s_addr & mask ) == mask ;	525:2:11471:11523	966577	1	True				
ANR	966595	EqualityExpression	( ( uint32_t ) v4 . sin_addr . s_addr & mask ) == mask		966577	0		==			
ANR	966596	BitAndExpression	( uint32_t ) v4 . sin_addr . s_addr & mask		966577	0		&			
ANR	966597	CastExpression	( uint32_t ) v4 . sin_addr . s_addr		966577	0					
ANR	966598	CastTarget	uint32_t		966577	0					
ANR	966599	MemberAccess	v4 . sin_addr . s_addr		966577	1					
ANR	966600	MemberAccess	v4 . sin_addr		966577	0					
ANR	966601	Identifier	v4		966577	0					
ANR	966602	Identifier	sin_addr		966577	1					
ANR	966603	Identifier	s_addr		966577	1					
ANR	966604	Identifier	mask		966577	1					
ANR	966605	Identifier	mask		966577	1					
ANR	966606	ElseStatement	else		966577	0					
ANR	966607	IfStatement	if ( is_ipv6 ( ) )		966577	0					
ANR	966608	Condition	is_ipv6 ( )	526:12:11537:11545	966577	0	True				
ANR	966609	CallExpression	is_ipv6 ( )		966577	0					
ANR	966610	Callee	is_ipv6		966577	0					
ANR	966611	Identifier	is_ipv6		966577	0					
ANR	966612	ArgumentList			966577	1					
ANR	966613	CompoundStatement		6:23:165:165	966577	1					
ANR	966614	ReturnStatement	return v6 . sin6_addr . s6_addr [ 0 ] == 0xfe && v6 . sin6_addr . s6_addr [ 1 ] == 0x80 ;	528:2:11577:11654	966577	0	True				
ANR	966615	AndExpression	v6 . sin6_addr . s6_addr [ 0 ] == 0xfe && v6 . sin6_addr . s6_addr [ 1 ] == 0x80		966577	0		&&			
ANR	966616	EqualityExpression	v6 . sin6_addr . s6_addr [ 0 ] == 0xfe		966577	0		==			
ANR	966617	ArrayIndexing	v6 . sin6_addr . s6_addr [ 0 ]		966577	0					
ANR	966618	MemberAccess	v6 . sin6_addr . s6_addr		966577	0					
ANR	966619	MemberAccess	v6 . sin6_addr		966577	0					
ANR	966620	Identifier	v6		966577	0					
ANR	966621	Identifier	sin6_addr		966577	1					
ANR	966622	Identifier	s6_addr		966577	1					
ANR	966623	PrimaryExpression	0		966577	1					
ANR	966624	PrimaryExpression	0xfe		966577	1					
ANR	966625	EqualityExpression	v6 . sin6_addr . s6_addr [ 1 ] == 0x80		966577	1		==			
ANR	966626	ArrayIndexing	v6 . sin6_addr . s6_addr [ 1 ]		966577	0					
ANR	966627	MemberAccess	v6 . sin6_addr . s6_addr		966577	0					
ANR	966628	MemberAccess	v6 . sin6_addr		966577	0					
ANR	966629	Identifier	v6		966577	0					
ANR	966630	Identifier	sin6_addr		966577	1					
ANR	966631	Identifier	s6_addr		966577	1					
ANR	966632	PrimaryExpression	1		966577	1					
ANR	966633	PrimaryExpression	0x80		966577	1					
ANR	966634	ReturnStatement	return false ;	531:1:11660:11672	966577	1	True				
ANR	966635	Identifier	false		966577	0					
ANR	966636	ReturnType	bool		966577	1					
ANR	966637	Identifier	condor_sockaddr :: is_link_local		966577	2					
ANR	966638	ParameterList			966577	3					
ANR	966639	CFGEntryNode	ENTRY		966577		True				
ANR	966640	CFGExitNode	EXIT		966577		True				
ANR	966641	Symbol	v6		966577						
ANR	966642	Symbol	v6 . sin6_addr . s6_addr		966577						
ANR	966643	Symbol	v4 . sin_addr . s_addr		966577						
ANR	966644	Symbol	* v6		966577						
ANR	966645	Symbol	v4 . sin_addr		966577						
ANR	966646	Symbol	false		966577						
ANR	966647	Symbol	is_ipv6		966577						
ANR	966648	Symbol	is_ipv4		966577						
ANR	966649	Symbol	v6 . sin6_addr		966577						
ANR	966650	Symbol	* v6 . sin6_addr . s6_addr		966577						
ANR	966651	Symbol	v4		966577						
ANR	966652	Symbol	mask		966577						
ANR	966653	Symbol	* v6 . sin6_addr		966577						
ANR	966654	Function	condor_sockaddr :: set_scope_id	534:0:11677:11791							
ANR	966655	FunctionDef	condor_sockaddr :: set_scope_id (uint32_t scope_id)		966654	0					
ANR	966656	CompoundStatement		534:54:11731:11791	966654	0					
ANR	966657	IfStatement	if ( ! is_ipv6 ( ) )		966654	0					
ANR	966658	Condition	! is_ipv6 ( )	535:5:11738:11747	966654	0	True				
ANR	966659	UnaryOperationExpression	! is_ipv6 ( )		966654	0					
ANR	966660	UnaryOperator	!		966654	0					
ANR	966661	CallExpression	is_ipv6 ( )		966654	1					
ANR	966662	Callee	is_ipv6		966654	0					
ANR	966663	Identifier	is_ipv6		966654	0					
ANR	966664	ArgumentList			966654	1					
ANR	966665	ReturnStatement	return ;	536:2:11752:11758	966654	1	True				
ANR	966666	ExpressionStatement	v6 . sin6_scope_id = scope_id	538:1:11762:11789	966654	1	True				
ANR	966667	AssignmentExpression	v6 . sin6_scope_id = scope_id		966654	0		=			
ANR	966668	MemberAccess	v6 . sin6_scope_id		966654	0					
ANR	966669	Identifier	v6		966654	0					
ANR	966670	Identifier	sin6_scope_id		966654	1					
ANR	966671	Identifier	scope_id		966654	1					
ANR	966672	ReturnType	void		966654	1					
ANR	966673	Identifier	condor_sockaddr :: set_scope_id		966654	2					
ANR	966674	ParameterList	uint32_t scope_id		966654	3					
ANR	966675	Parameter	uint32_t scope_id	534:35:11712:11728	966654	0	True				
ANR	966676	ParameterType	uint32_t		966654	0					
ANR	966677	Identifier	scope_id		966654	1					
ANR	966678	CFGEntryNode	ENTRY		966654		True				
ANR	966679	CFGExitNode	EXIT		966654		True				
ANR	966680	Symbol	v6		966654						
ANR	966681	Symbol	scope_id		966654						
ANR	966682	Symbol	is_ipv6		966654						
ANR	966683	Symbol	v6 . sin6_scope_id		966654						
