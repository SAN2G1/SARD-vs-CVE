command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2513452	File	data/converged/CVE-2011-4930_htcondor/src_classad_classad_functional_tester.cpp								
ANR	2513453	DeclStmt									
ANR	2513454	Decl							"map < string , Variable * >"	"map < string , Variable * >"	VariableMap
ANR	2513455	ClassDef	Command	41:0:1299:1560							
ANR	2513456	ClassDef	PrintFormat	61:0:1564:1655							
ANR	2513457	ClassDef	Parameters	69:0:1659:1924							
ANR	2513458	DeclStmt									
ANR	2513459	Decl							bool	bool	debug
ANR	2513460	DeclStmt									
ANR	2513461	Decl							bool	bool	verbose
ANR	2513462	DeclStmt									
ANR	2513463	Decl							bool	bool	interactive
ANR	2513464	DeclStmt									
ANR	2513465	Decl							ifstream	ifstream *	input_file
ANR	2513466	Function	Parameters	77:1:1784:1818							
ANR	2513467	FunctionDef	Parameters ()		2513466	4					
ANR	2513468	CompoundStatement		77:14:1797:1818	2513466	0					
ANR	2513469	ExpressionStatement	input_file = NULL	77:1:1799:1816	2513466	0	True				
ANR	2513470	AssignmentExpression	input_file = NULL		2513466	0		=			
ANR	2513471	Identifier	input_file		2513466	0					
ANR	2513472	Identifier	NULL		2513466	1					
ANR	2513473	Identifier	Parameters		2513466	1					
ANR	2513474	ParameterList			2513466	2					
ANR	2513475	CFGEntryNode	ENTRY		2513466		True				
ANR	2513476	CFGExitNode	EXIT		2513466		True				
ANR	2513477	Symbol	input_file		2513466						
ANR	2513478	Symbol	NULL		2513466						
ANR	2513479	Function	~Parameters	78:4:1824:1875							
ANR	2513480	FunctionDef	~Parameters ()		2513479	5					
ANR	2513481	CompoundStatement		78:18:1838:1875	2513479	0					
ANR	2513482	IfStatement	if ( input_file )		2513479	0					
ANR	2513483	Condition	input_file	78:5:1844:1853	2513479	0	True				
ANR	2513484	Identifier	input_file		2513479	0					
ANR	2513485	Statement	delete	78:17:1856:1861	2513479	1	True				
ANR	2513486	ExpressionStatement	input_file	78:24:1863:1873	2513479	1	True				
ANR	2513487	Identifier	input_file		2513479	0					
ANR	2513488	Identifier	~Parameters		2513479	1					
ANR	2513489	ParameterList			2513479	2					
ANR	2513490	CFGEntryNode	ENTRY		2513479		True				
ANR	2513491	CFGExitNode	EXIT		2513479		True				
ANR	2513492	Symbol	input_file		2513479						
ANR	2513493	DeclStmt									
ANR	2513494	Decl							void	"void ( int argc , char * * argv )"	ParseCommandLine
ANR	2513495	ClassDef	State	82:0:1928:2051							
ANR	2513496	DeclStmt									
ANR	2513497	Decl							int	int	number_of_errors
ANR	2513498	DeclStmt									
ANR	2513499	Decl							int	int	line_number
ANR	2513500	DeclStmt									
ANR	2513501	Decl							PrintFormat	PrintFormat	format
ANR	2513502	DeclStmt									
ANR	2513503	Decl							"map < string , Variable * >"	"map < string , Variable * >"	VariableMap
ANR	2513504	DeclStmt									
ANR	2513505	Decl							bool	"bool ( string & line , State & state , Parameters & parameters )"	read_line
ANR	2513506	DeclStmt									
ANR	2513507	Decl							bool	"bool ( string & line , State & state , Parameters & parameters )"	read_line_stdin
ANR	2513508	DeclStmt									
ANR	2513509	Decl							bool	"bool ( string & line , State & state , Parameters & parameters )"	read_line_file
ANR	2513510	DeclStmt									
ANR	2513511	Decl							bool	"bool ( string & line , State & state , Parameters & parameters )"	replace_variables
ANR	2513512	DeclStmt									
ANR	2513513	Decl							Command	"Command ( string & line , Parameters & parameters )"	get_command
ANR	2513514	DeclStmt									
ANR	2513515	Decl							bool	"bool ( string & line , bool swallow_equals , string & variable_name , State & state , Parameters & parameters )"	get_variable_name
ANR	2513516	DeclStmt									
ANR	2513517	Decl							bool	"bool ( string & line , string & variable_name , State & state , Parameters & parameters )"	get_file_name
ANR	2513518	DeclStmt									
ANR	2513519	Decl							ExprTree	"ExprTree * ( string & line , State & state , Parameters & parameters )"	get_expr
ANR	2513520	DeclStmt									
ANR	2513521	Decl							void	"void ( string & line , ExprTree * & tree1 , ExprTree * & tree2 , State & state , Parameters & parameters )"	get_two_exprs
ANR	2513522	DeclStmt									
ANR	2513523	Decl							void	"void ( ExprTree * tree , State & state , Parameters & parameters )"	print_expr
ANR	2513524	DeclStmt									
ANR	2513525	Decl							bool	"bool ( ExprTree * tree , Value & value , Parameters & parameters )"	evaluate_expr
ANR	2513526	DeclStmt									
ANR	2513527	Decl							void	"void ( string & line , int offset )"	shorten_line
ANR	2513528	DeclStmt									
ANR	2513529	Decl							bool	"bool ( Command command , string & line , State & state , Parameters & parameters )"	handle_command
ANR	2513530	DeclStmt									
ANR	2513531	Decl							void	"void ( string & line , State & state , Parameters & parameters )"	handle_let
ANR	2513532	DeclStmt									
ANR	2513533	Decl							void	"void ( string & line , State & state , Parameters & parameters )"	handle_eval
ANR	2513534	DeclStmt									
ANR	2513535	Decl							void	"void ( string & line , State & state , Parameters & parameters )"	handle_same
ANR	2513536	DeclStmt									
ANR	2513537	Decl							void	"void ( string & line , State & state , Parameters & parameters )"	handle_sameq
ANR	2513538	DeclStmt									
ANR	2513539	Decl							void	"void ( string & line , State & state , Parameters & parameters )"	handle_diff
ANR	2513540	DeclStmt									
ANR	2513541	Decl							void	"void ( string & line , State & state , Parameters & parameters )"	handle_diffq
ANR	2513542	DeclStmt									
ANR	2513543	Decl							void	"void ( string & line , State & state , Parameters & parameters )"	handle_set
ANR	2513544	DeclStmt									
ANR	2513545	Decl							void	"void ( string & line , State & state , Parameters & parameters )"	handle_show
ANR	2513546	DeclStmt									
ANR	2513547	Decl							void	"void ( string & line , State & state , Parameters & parameters )"	handle_writexml
ANR	2513548	DeclStmt									
ANR	2513549	Decl							void	"void ( string & line , State & state , Parameters & parameters )"	handle_readxml
ANR	2513550	DeclStmt									
ANR	2513551	Decl							void	"void ( string & line , State & state , Parameters & parameters )"	handle_echo
ANR	2513552	DeclStmt									
ANR	2513553	Decl							void	"void ( string & line , State & state , Parameters & parameters )"	handle_print
ANR	2513554	DeclStmt									
ANR	2513555	Decl							void	void ( void )	handle_help
ANR	2513556	DeclStmt									
ANR	2513557	Decl							void	void ( void )	print_version
ANR	2513558	DeclStmt									
ANR	2513559	Decl							void	"void ( const char * error , State & state )"	print_error_message
ANR	2513560	DeclStmt									
ANR	2513561	Decl							void	"void ( string & error , State & state )"	print_error_message
ANR	2513562	DeclStmt									
ANR	2513563	Decl							void	void ( State & state )	print_final_state
ANR	2513564	DeclStmt									
ANR	2513565	Decl							bool	bool ( string & line )	line_is_comment
ANR	2513566	DeclStmt									
ANR	2513567	Decl							bool	"bool ( ExprTree * tree , State & state , Parameters & parameters )"	expr_okay_for_xml_file
ANR	2513568	Function	Parameters :: ParseCommandLine	144:0:4850:5722							
ANR	2513569	FunctionDef	"Parameters :: ParseCommandLine (int argc , char * * argv)"		2513568	0					
ANR	2513570	CompoundStatement		147:0:4918:5722	2513568	0					
ANR	2513571	ExpressionStatement	debug = false	149:1:4955:4974	2513568	0	True				
ANR	2513572	AssignmentExpression	debug = false		2513568	0		=			
ANR	2513573	Identifier	debug		2513568	0					
ANR	2513574	Identifier	false		2513568	1					
ANR	2513575	ExpressionStatement	verbose = false	150:4:4980:4999	2513568	1	True				
ANR	2513576	AssignmentExpression	verbose = false		2513568	0		=			
ANR	2513577	Identifier	verbose		2513568	0					
ANR	2513578	Identifier	false		2513568	1					
ANR	2513579	ExpressionStatement	interactive = true	151:4:5005:5023	2513568	2	True				
ANR	2513580	AssignmentExpression	interactive = true		2513568	0		=			
ANR	2513581	Identifier	interactive		2513568	0					
ANR	2513582	Identifier	true		2513568	1					
ANR	2513583	ExpressionStatement	input_file = NULL	152:1:5026:5044	2513568	3	True				
ANR	2513584	AssignmentExpression	input_file = NULL		2513568	0		=			
ANR	2513585	Identifier	input_file		2513568	0					
ANR	2513586	Identifier	NULL		2513568	1					
ANR	2513587	ForStatement	for ( int arg_index = 1 ; arg_index < argc ; arg_index ++ )		2513568	4					
ANR	2513588	ForInit	int arg_index = 1 ;	155:6:5100:5117	2513568	0	True				
ANR	2513589	IdentifierDeclStatement	int arg_index = 1 ;		2513568	0					
ANR	2513590	IdentifierDecl	arg_index = 1		2513568	0					
ANR	2513591	IdentifierDeclType	int		2513568	0					
ANR	2513592	Identifier	arg_index		2513568	1					
ANR	2513593	AssignmentExpression	arg_index = 1		2513568	2		=			
ANR	2513594	Identifier	arg_index		2513568	0					
ANR	2513595	PrimaryExpression	1		2513568	1					
ANR	2513596	Condition	arg_index < argc	155:25:5119:5134	2513568	1	True				
ANR	2513597	RelationalExpression	arg_index < argc		2513568	0		<			
ANR	2513598	Identifier	arg_index		2513568	0					
ANR	2513599	Identifier	argc		2513568	1					
ANR	2513600	PostIncDecOperationExpression	arg_index ++	155:43:5137:5147	2513568	2	True				
ANR	2513601	Identifier	arg_index		2513568	0					
ANR	2513602	IncDec	++		2513568	1					
ANR	2513603	CompoundStatement		9:56:231:231	2513568	3					
ANR	2513604	IfStatement	"if ( ! strcasecmp ( argv [ arg_index ] , ""-d"" ) || ! strcasecmp ( argv [ arg_index ] , ""-debug"" ) )"		2513568	0					
ANR	2513605	Condition	"! strcasecmp ( argv [ arg_index ] , ""-d"" ) || ! strcasecmp ( argv [ arg_index ] , ""-debug"" )"	156:9:5161:5248	2513568	0	True				
ANR	2513606	OrExpression	"! strcasecmp ( argv [ arg_index ] , ""-d"" ) || ! strcasecmp ( argv [ arg_index ] , ""-debug"" )"		2513568	0		||			
ANR	2513607	UnaryOperationExpression	"! strcasecmp ( argv [ arg_index ] , ""-d"" )"		2513568	0					
ANR	2513608	UnaryOperator	!		2513568	0					
ANR	2513609	CallExpression	"strcasecmp ( argv [ arg_index ] , ""-d"" )"		2513568	1					
ANR	2513610	Callee	strcasecmp		2513568	0					
ANR	2513611	Identifier	strcasecmp		2513568	0					
ANR	2513612	ArgumentList	argv [ arg_index ]		2513568	1					
ANR	2513613	Argument	argv [ arg_index ]		2513568	0					
ANR	2513614	ArrayIndexing	argv [ arg_index ]		2513568	0					
ANR	2513615	Identifier	argv		2513568	0					
ANR	2513616	Identifier	arg_index		2513568	1					
ANR	2513617	Argument	"""-d"""		2513568	1					
ANR	2513618	PrimaryExpression	"""-d"""		2513568	0					
ANR	2513619	UnaryOperationExpression	"! strcasecmp ( argv [ arg_index ] , ""-debug"" )"		2513568	1					
ANR	2513620	UnaryOperator	!		2513568	0					
ANR	2513621	CallExpression	"strcasecmp ( argv [ arg_index ] , ""-debug"" )"		2513568	1					
ANR	2513622	Callee	strcasecmp		2513568	0					
ANR	2513623	Identifier	strcasecmp		2513568	0					
ANR	2513624	ArgumentList	argv [ arg_index ]		2513568	1					
ANR	2513625	Argument	argv [ arg_index ]		2513568	0					
ANR	2513626	ArrayIndexing	argv [ arg_index ]		2513568	0					
ANR	2513627	Identifier	argv		2513568	0					
ANR	2513628	Identifier	arg_index		2513568	1					
ANR	2513629	Argument	"""-debug"""		2513568	1					
ANR	2513630	PrimaryExpression	"""-debug"""		2513568	0					
ANR	2513631	CompoundStatement		11:55:332:332	2513568	1					
ANR	2513632	ExpressionStatement	debug = true	158:3:5256:5268	2513568	0	True				
ANR	2513633	AssignmentExpression	debug = true		2513568	0		=			
ANR	2513634	Identifier	debug		2513568	0					
ANR	2513635	Identifier	true		2513568	1					
ANR	2513636	ElseStatement	else		2513568	0					
ANR	2513637	IfStatement	"if ( ! strcasecmp ( argv [ arg_index ] , ""-v"" ) || ! strcasecmp ( argv [ arg_index ] , ""-verbose"" ) )"		2513568	0					
ANR	2513638	Condition	"! strcasecmp ( argv [ arg_index ] , ""-v"" ) || ! strcasecmp ( argv [ arg_index ] , ""-verbose"" )"	159:16:5286:5382	2513568	0	True				
ANR	2513639	OrExpression	"! strcasecmp ( argv [ arg_index ] , ""-v"" ) || ! strcasecmp ( argv [ arg_index ] , ""-verbose"" )"		2513568	0		||			
ANR	2513640	UnaryOperationExpression	"! strcasecmp ( argv [ arg_index ] , ""-v"" )"		2513568	0					
ANR	2513641	UnaryOperator	!		2513568	0					
ANR	2513642	CallExpression	"strcasecmp ( argv [ arg_index ] , ""-v"" )"		2513568	1					
ANR	2513643	Callee	strcasecmp		2513568	0					
ANR	2513644	Identifier	strcasecmp		2513568	0					
ANR	2513645	ArgumentList	argv [ arg_index ]		2513568	1					
ANR	2513646	Argument	argv [ arg_index ]		2513568	0					
ANR	2513647	ArrayIndexing	argv [ arg_index ]		2513568	0					
ANR	2513648	Identifier	argv		2513568	0					
ANR	2513649	Identifier	arg_index		2513568	1					
ANR	2513650	Argument	"""-v"""		2513568	1					
ANR	2513651	PrimaryExpression	"""-v"""		2513568	0					
ANR	2513652	UnaryOperationExpression	"! strcasecmp ( argv [ arg_index ] , ""-verbose"" )"		2513568	1					
ANR	2513653	UnaryOperator	!		2513568	0					
ANR	2513654	CallExpression	"strcasecmp ( argv [ arg_index ] , ""-verbose"" )"		2513568	1					
ANR	2513655	Callee	strcasecmp		2513568	0					
ANR	2513656	Identifier	strcasecmp		2513568	0					
ANR	2513657	ArgumentList	argv [ arg_index ]		2513568	1					
ANR	2513658	Argument	argv [ arg_index ]		2513568	0					
ANR	2513659	ArrayIndexing	argv [ arg_index ]		2513568	0					
ANR	2513660	Identifier	argv		2513568	0					
ANR	2513661	Identifier	arg_index		2513568	1					
ANR	2513662	Argument	"""-verbose"""		2513568	1					
ANR	2513663	PrimaryExpression	"""-verbose"""		2513568	0					
ANR	2513664	CompoundStatement		14:64:466:466	2513568	1					
ANR	2513665	ExpressionStatement	verbose = true	161:3:5390:5404	2513568	0	True				
ANR	2513666	AssignmentExpression	verbose = true		2513568	0		=			
ANR	2513667	Identifier	verbose		2513568	0					
ANR	2513668	Identifier	true		2513568	1					
ANR	2513669	ElseStatement	else		2513568	0					
ANR	2513670	CompoundStatement		16:9:496:496	2513568	0					
ANR	2513671	IfStatement	if ( input_file == NULL )		2513568	0					
ANR	2513672	Condition	input_file == NULL	163:7:5424:5441	2513568	0	True				
ANR	2513673	EqualityExpression	input_file == NULL		2513568	0		==			
ANR	2513674	Identifier	input_file		2513568	0					
ANR	2513675	Identifier	NULL		2513568	1					
ANR	2513676	CompoundStatement		17:27:525:525	2513568	1					
ANR	2513677	ExpressionStatement	interactive = false	164:16:5462:5481	2513568	0	True				
ANR	2513678	AssignmentExpression	interactive = false		2513568	0		=			
ANR	2513679	Identifier	interactive		2513568	0					
ANR	2513680	Identifier	false		2513568	1					
ANR	2513681	ExpressionStatement	input_file = new ifstream ( argv [ arg_index ] )	165:4:5487:5529	2513568	1	True				
ANR	2513682	AssignmentExpression	input_file = new ifstream ( argv [ arg_index ] )		2513568	0		=			
ANR	2513683	Identifier	input_file		2513568	0					
ANR	2513684	ArrayIndexing	argv [ arg_index ]		2513568	1					
ANR	2513685	Identifier	argv		2513568	0					
ANR	2513686	Identifier	arg_index		2513568	1					
ANR	2513687	IfStatement	if ( input_file -> bad ( ) )		2513568	2					
ANR	2513688	Condition	input_file -> bad ( )	166:20:5551:5567	2513568	0	True				
ANR	2513689	CallExpression	input_file -> bad ( )		2513568	0					
ANR	2513690	Callee	input_file -> bad		2513568	0					
ANR	2513691	PtrMemberAccess	input_file -> bad		2513568	0					
ANR	2513692	Identifier	input_file		2513568	0					
ANR	2513693	Identifier	bad		2513568	1					
ANR	2513694	ArgumentList			2513568	1					
ANR	2513695	CompoundStatement		20:39:651:651	2513568	1					
ANR	2513696	ExpressionStatement	"cout << ""Could not open file '"" << argv [ arg_index ] << ""'.\\n"""	167:20:5592:5651	2513568	0	True				
ANR	2513697	ShiftExpression	"cout << ""Could not open file '"" << argv [ arg_index ] << ""'.\\n"""		2513568	0		<<			
ANR	2513698	Identifier	cout		2513568	0					
ANR	2513699	ShiftExpression	"""Could not open file '"" << argv [ arg_index ] << ""'.\\n"""		2513568	1		<<			
ANR	2513700	PrimaryExpression	"""Could not open file '"""		2513568	0					
ANR	2513701	ShiftExpression	"argv [ arg_index ] << ""'.\\n"""		2513568	1		<<			
ANR	2513702	ArrayIndexing	argv [ arg_index ]		2513568	0					
ANR	2513703	Identifier	argv		2513568	0					
ANR	2513704	Identifier	arg_index		2513568	1					
ANR	2513705	PrimaryExpression	"""'.\\n"""		2513568	1					
ANR	2513706	ExpressionStatement	exit ( 1 )	168:20:5673:5680	2513568	1	True				
ANR	2513707	CallExpression	exit ( 1 )		2513568	0					
ANR	2513708	Callee	exit		2513568	0					
ANR	2513709	Identifier	exit		2513568	0					
ANR	2513710	ArgumentList	1		2513568	1					
ANR	2513711	Argument	1		2513568	0					
ANR	2513712	PrimaryExpression	1		2513568	0					
ANR	2513713	ReturnStatement	return ;	174:1:5714:5720	2513568	5	True				
ANR	2513714	ReturnType	void		2513568	1					
ANR	2513715	Identifier	Parameters :: ParseCommandLine		2513568	2					
ANR	2513716	ParameterList	"int argc , char * * argv"		2513568	3					
ANR	2513717	Parameter	int argc	145:4:4889:4897	2513568	0	True				
ANR	2513718	ParameterType	int		2513568	0					
ANR	2513719	Identifier	argc		2513568	1					
ANR	2513720	Parameter	char * * argv	146:4:4905:4915	2513568	1	True				
ANR	2513721	ParameterType	char * *		2513568	0					
ANR	2513722	Identifier	argv		2513568	1					
ANR	2513723	CFGEntryNode	ENTRY		2513568		True				
ANR	2513724	CFGExitNode	EXIT		2513568		True				
ANR	2513725	Symbol	argc		2513568						
ANR	2513726	Symbol	debug		2513568						
ANR	2513727	Symbol	NULL		2513568						
ANR	2513728	Symbol	arg_index		2513568						
ANR	2513729	Symbol	false		2513568						
ANR	2513730	Symbol	interactive		2513568						
ANR	2513731	Symbol	* argv		2513568						
ANR	2513732	Symbol	argv		2513568						
ANR	2513733	Symbol	verbose		2513568						
ANR	2513734	Symbol	input_file		2513568						
ANR	2513735	Symbol	* arg_index		2513568						
ANR	2513736	Symbol	true		2513568						
ANR	2513737	Symbol	input_file -> bad		2513568						
ANR	2513738	Symbol	* input_file		2513568						
ANR	2513739	Symbol	strcasecmp		2513568						
ANR	2513740	Function	State :: State	183:0:5902:6021							
ANR	2513741	FunctionDef	State :: State ()		2513740	0					
ANR	2513742	CompoundStatement		184:0:5917:6021	2513740	0					
ANR	2513743	ExpressionStatement	number_of_errors = 0	185:4:5923:5943	2513740	0	True				
ANR	2513744	AssignmentExpression	number_of_errors = 0		2513740	0		=			
ANR	2513745	Identifier	number_of_errors		2513740	0					
ANR	2513746	PrimaryExpression	0		2513740	1					
ANR	2513747	ExpressionStatement	line_number = 0	186:4:5949:5969	2513740	1	True				
ANR	2513748	AssignmentExpression	line_number = 0		2513740	0		=			
ANR	2513749	Identifier	line_number		2513740	0					
ANR	2513750	PrimaryExpression	0		2513740	1					
ANR	2513751	ExpressionStatement	format = print_Compact	187:4:5975:6007	2513740	2	True				
ANR	2513752	AssignmentExpression	format = print_Compact		2513740	0		=			
ANR	2513753	Identifier	format		2513740	0					
ANR	2513754	Identifier	print_Compact		2513740	1					
ANR	2513755	ReturnStatement	return ;	188:4:6013:6019	2513740	3	True				
ANR	2513756	Identifier	State :: State		2513740	1					
ANR	2513757	ParameterList			2513740	2					
ANR	2513758	CFGEntryNode	ENTRY		2513740		True				
ANR	2513759	CFGExitNode	EXIT		2513740		True				
ANR	2513760	Symbol	line_number		2513740						
ANR	2513761	Symbol	format		2513740						
ANR	2513762	Symbol	number_of_errors		2513740						
ANR	2513763	Symbol	print_Compact		2513740						
ANR	2513764	Function	Variable :: Variable	197:0:6201:6338							
ANR	2513765	FunctionDef	"Variable :: Variable (string & name , ExprTree * tree)"		2513764	0					
ANR	2513766	CompoundStatement		200:0:6261:6338	2513764	0					
ANR	2513767	ExpressionStatement	_name = name	201:4:6267:6282	2513764	0	True				
ANR	2513768	AssignmentExpression	_name = name		2513764	0		=			
ANR	2513769	Identifier	_name		2513764	0					
ANR	2513770	Identifier	name		2513764	1					
ANR	2513771	ExpressionStatement	_tree = tree	202:4:6288:6303	2513764	1	True				
ANR	2513772	AssignmentExpression	_tree = tree		2513764	0		=			
ANR	2513773	Identifier	_tree		2513764	0					
ANR	2513774	Identifier	tree		2513764	1					
ANR	2513775	ExpressionStatement	_is_tree = true	203:4:6309:6324	2513764	2	True				
ANR	2513776	AssignmentExpression	_is_tree = true		2513764	0		=			
ANR	2513777	Identifier	_is_tree		2513764	0					
ANR	2513778	Identifier	true		2513764	1					
ANR	2513779	ReturnStatement	return ;	204:4:6330:6336	2513764	3	True				
ANR	2513780	Identifier	Variable :: Variable		2513764	1					
ANR	2513781	ParameterList	"string & name , ExprTree * tree"		2513764	2					
ANR	2513782	Parameter	string & name	198:4:6225:6237	2513764	0	True				
ANR	2513783	ParameterType	string &		2513764	0					
ANR	2513784	Identifier	name		2513764	1					
ANR	2513785	Parameter	ExprTree * tree	199:4:6245:6258	2513764	1	True				
ANR	2513786	ParameterType	ExprTree *		2513764	0					
ANR	2513787	Identifier	tree		2513764	1					
ANR	2513788	CFGEntryNode	ENTRY		2513764		True				
ANR	2513789	CFGExitNode	EXIT		2513764		True				
ANR	2513790	Symbol	_name		2513764						
ANR	2513791	Symbol	name		2513764						
ANR	2513792	Symbol	tree		2513764						
ANR	2513793	Symbol	_is_tree		2513764						
ANR	2513794	Symbol	true		2513764						
ANR	2513795	Symbol	_tree		2513764						
ANR	2513796	Function	Variable :: Variable	213:0:6518:6676							
ANR	2513797	FunctionDef	"Variable :: Variable (string & name , Value & value)"		2513796	0					
ANR	2513798	CompoundStatement		216:0:6576:6676	2513796	0					
ANR	2513799	ExpressionStatement	_name = name	217:4:6582:6597	2513796	0	True				
ANR	2513800	AssignmentExpression	_name = name		2513796	0		=			
ANR	2513801	Identifier	_name		2513796	0					
ANR	2513802	Identifier	name		2513796	1					
ANR	2513803	ExpressionStatement	_value = value	218:4:6603:6619	2513796	1	True				
ANR	2513804	AssignmentExpression	_value = value		2513796	0		=			
ANR	2513805	Identifier	_value		2513796	0					
ANR	2513806	Identifier	value		2513796	1					
ANR	2513807	ExpressionStatement	_is_tree = false	219:4:6625:6641	2513796	2	True				
ANR	2513808	AssignmentExpression	_is_tree = false		2513796	0		=			
ANR	2513809	Identifier	_is_tree		2513796	0					
ANR	2513810	Identifier	false		2513796	1					
ANR	2513811	ExpressionStatement	_tree = NULL	220:4:6647:6662	2513796	3	True				
ANR	2513812	AssignmentExpression	_tree = NULL		2513796	0		=			
ANR	2513813	Identifier	_tree		2513796	0					
ANR	2513814	Identifier	NULL		2513796	1					
ANR	2513815	ReturnStatement	return ;	221:4:6668:6674	2513796	4	True				
ANR	2513816	Identifier	Variable :: Variable		2513796	1					
ANR	2513817	ParameterList	"string & name , Value & value"		2513796	2					
ANR	2513818	Parameter	string & name	214:4:6542:6553	2513796	0	True				
ANR	2513819	ParameterType	string &		2513796	0					
ANR	2513820	Identifier	name		2513796	1					
ANR	2513821	Parameter	Value & value	215:4:6561:6573	2513796	1	True				
ANR	2513822	ParameterType	Value &		2513796	0					
ANR	2513823	Identifier	value		2513796	1					
ANR	2513824	CFGEntryNode	ENTRY		2513796		True				
ANR	2513825	CFGExitNode	EXIT		2513796		True				
ANR	2513826	Symbol	NULL		2513796						
ANR	2513827	Symbol	_name		2513796						
ANR	2513828	Symbol	name		2513796						
ANR	2513829	Symbol	false		2513796						
ANR	2513830	Symbol	_is_tree		2513796						
ANR	2513831	Symbol	_value		2513796						
ANR	2513832	Symbol	_tree		2513796						
ANR	2513833	Symbol	value		2513796						
ANR	2513834	Function	Variable :: ~Variable	230:0:6856:6979							
ANR	2513835	FunctionDef	Variable :: ~Variable ()		2513834	0					
ANR	2513836	CompoundStatement		231:0:6878:6979	2513834	0					
ANR	2513837	IfStatement	if ( _is_tree && _tree != NULL )		2513834	0					
ANR	2513838	Condition	_is_tree && _tree != NULL	232:8:6888:6912	2513834	0	True				
ANR	2513839	AndExpression	_is_tree && _tree != NULL		2513834	0		&&			
ANR	2513840	Identifier	_is_tree		2513834	0					
ANR	2513841	EqualityExpression	_tree != NULL		2513834	1		!=			
ANR	2513842	Identifier	_tree		2513834	0					
ANR	2513843	Identifier	NULL		2513834	1					
ANR	2513844	CompoundStatement		2:35:36:36	2513834	1					
ANR	2513845	Statement	delete	233:8:6925:6930	2513834	0	True				
ANR	2513846	ExpressionStatement	_tree	233:15:6932:6937	2513834	1	True				
ANR	2513847	Identifier	_tree		2513834	0					
ANR	2513848	ExpressionStatement	_tree = NULL	234:8:6947:6959	2513834	2	True				
ANR	2513849	AssignmentExpression	_tree = NULL		2513834	0		=			
ANR	2513850	Identifier	_tree		2513834	0					
ANR	2513851	Identifier	NULL		2513834	1					
ANR	2513852	ReturnStatement	return ;	236:4:6971:6977	2513834	1	True				
ANR	2513853	Identifier	Variable :: ~Variable		2513834	1					
ANR	2513854	ParameterList			2513834	2					
ANR	2513855	CFGEntryNode	ENTRY		2513834		True				
ANR	2513856	CFGExitNode	EXIT		2513834		True				
ANR	2513857	Symbol	NULL		2513834						
ANR	2513858	Symbol	_is_tree		2513834						
ANR	2513859	Symbol	_tree		2513834						
ANR	2513860	Function	Variable :: GetStringRepresentation	245:0:7159:7410							
ANR	2513861	FunctionDef	Variable :: GetStringRepresentation (string & representation)		2513860	0					
ANR	2513862	CompoundStatement		247:0:7227:7410	2513860	0					
ANR	2513863	IdentifierDeclStatement	ClassAdUnParser unparser ;	248:4:7233:7257	2513860	0	True				
ANR	2513864	IdentifierDecl	unparser		2513860	0					
ANR	2513865	IdentifierDeclType	ClassAdUnParser		2513860	0					
ANR	2513866	Identifier	unparser		2513860	1					
ANR	2513867	IfStatement	if ( _is_tree )		2513860	1					
ANR	2513868	Condition	_is_tree	250:8:7268:7275	2513860	0	True				
ANR	2513869	Identifier	_is_tree		2513860	0					
ANR	2513870	CompoundStatement		4:18:50:50	2513860	1					
ANR	2513871	ExpressionStatement	"unparser . Unparse ( representation , _tree )"	251:8:7288:7327	2513860	0	True				
ANR	2513872	CallExpression	"unparser . Unparse ( representation , _tree )"		2513860	0					
ANR	2513873	Callee	unparser . Unparse		2513860	0					
ANR	2513874	MemberAccess	unparser . Unparse		2513860	0					
ANR	2513875	Identifier	unparser		2513860	0					
ANR	2513876	Identifier	Unparse		2513860	1					
ANR	2513877	ArgumentList	representation		2513860	1					
ANR	2513878	Argument	representation		2513860	0					
ANR	2513879	Identifier	representation		2513860	0					
ANR	2513880	Argument	_tree		2513860	1					
ANR	2513881	Identifier	_tree		2513860	0					
ANR	2513882	ElseStatement	else		2513860	0					
ANR	2513883	CompoundStatement		6:11:112:112	2513860	0					
ANR	2513884	ExpressionStatement	"unparser . Unparse ( representation , _value )"	253:8:7350:7390	2513860	0	True				
ANR	2513885	CallExpression	"unparser . Unparse ( representation , _value )"		2513860	0					
ANR	2513886	Callee	unparser . Unparse		2513860	0					
ANR	2513887	MemberAccess	unparser . Unparse		2513860	0					
ANR	2513888	Identifier	unparser		2513860	0					
ANR	2513889	Identifier	Unparse		2513860	1					
ANR	2513890	ArgumentList	representation		2513860	1					
ANR	2513891	Argument	representation		2513860	0					
ANR	2513892	Identifier	representation		2513860	0					
ANR	2513893	Argument	_value		2513860	1					
ANR	2513894	Identifier	_value		2513860	0					
ANR	2513895	ReturnStatement	return ;	255:4:7402:7408	2513860	2	True				
ANR	2513896	ReturnType	void		2513860	1					
ANR	2513897	Identifier	Variable :: GetStringRepresentation		2513860	2					
ANR	2513898	ParameterList	string & representation		2513860	3					
ANR	2513899	Parameter	string & representation	246:4:7203:7224	2513860	0	True				
ANR	2513900	ParameterType	string &		2513860	0					
ANR	2513901	Identifier	representation		2513860	1					
ANR	2513902	CFGEntryNode	ENTRY		2513860		True				
ANR	2513903	CFGExitNode	EXIT		2513860		True				
ANR	2513904	Symbol	_is_tree		2513860						
ANR	2513905	Symbol	unparser		2513860						
ANR	2513906	Symbol	_value		2513860						
ANR	2513907	Symbol	_tree		2513860						
ANR	2513908	Symbol	representation		2513860						
ANR	2513909	DeclStmt									
ANR	2513910	Decl							VariableMap	VariableMap	variables
ANR	2513911	Function	main	266:0:7641:8482							
ANR	2513912	FunctionDef	"main (int argc , char * * argv)"		2513911	0					
ANR	2513913	CompoundStatement		269:0:7684:8482	2513911	0					
ANR	2513914	IdentifierDeclStatement	bool quit ;	270:4:7690:7706	2513911	0	True				
ANR	2513915	IdentifierDecl	quit		2513911	0					
ANR	2513916	IdentifierDeclType	bool		2513911	0					
ANR	2513917	Identifier	quit		2513911	1					
ANR	2513918	IdentifierDeclStatement	string line ;	271:4:7712:7728	2513911	1	True				
ANR	2513919	IdentifierDecl	line		2513911	0					
ANR	2513920	IdentifierDeclType	string		2513911	0					
ANR	2513921	Identifier	line		2513911	1					
ANR	2513922	IdentifierDeclStatement	State state ;	272:4:7734:7751	2513911	2	True				
ANR	2513923	IdentifierDecl	state		2513911	0					
ANR	2513924	IdentifierDeclType	State		2513911	0					
ANR	2513925	Identifier	state		2513911	1					
ANR	2513926	IdentifierDeclStatement	Parameters parameters ;	273:4:7757:7779	2513911	3	True				
ANR	2513927	IdentifierDecl	parameters		2513911	0					
ANR	2513928	IdentifierDeclType	Parameters		2513911	0					
ANR	2513929	Identifier	parameters		2513911	1					
ANR	2513930	ExpressionStatement	print_version ( )	275:4:7786:7801	2513911	4	True				
ANR	2513931	CallExpression	print_version ( )		2513911	0					
ANR	2513932	Callee	print_version		2513911	0					
ANR	2513933	Identifier	print_version		2513911	0					
ANR	2513934	ArgumentList			2513911	1					
ANR	2513935	ExpressionStatement	"parameters . ParseCommandLine ( argc , argv )"	276:4:7807:7846	2513911	5	True				
ANR	2513936	CallExpression	"parameters . ParseCommandLine ( argc , argv )"		2513911	0					
ANR	2513937	Callee	parameters . ParseCommandLine		2513911	0					
ANR	2513938	MemberAccess	parameters . ParseCommandLine		2513911	0					
ANR	2513939	Identifier	parameters		2513911	0					
ANR	2513940	Identifier	ParseCommandLine		2513911	1					
ANR	2513941	ArgumentList	argc		2513911	1					
ANR	2513942	Argument	argc		2513911	0					
ANR	2513943	Identifier	argc		2513911	0					
ANR	2513944	Argument	argv		2513911	1					
ANR	2513945	Identifier	argv		2513911	0					
ANR	2513946	ExpressionStatement	quit = false	277:4:7852:7864	2513911	6	True				
ANR	2513947	AssignmentExpression	quit = false		2513911	0		=			
ANR	2513948	Identifier	quit		2513911	0					
ANR	2513949	Identifier	false		2513911	1					
ANR	2513950	WhileStatement	"while ( ! quit && read_line ( line , state , parameters ) == true )"		2513911	7					
ANR	2513951	Condition	"! quit && read_line ( line , state , parameters ) == true"	279:11:7878:7928	2513911	0	True				
ANR	2513952	AndExpression	"! quit && read_line ( line , state , parameters ) == true"		2513911	0		&&			
ANR	2513953	UnaryOperationExpression	! quit		2513911	0					
ANR	2513954	UnaryOperator	!		2513911	0					
ANR	2513955	Identifier	quit		2513911	1					
ANR	2513956	EqualityExpression	"read_line ( line , state , parameters ) == true"		2513911	1		==			
ANR	2513957	CallExpression	"read_line ( line , state , parameters )"		2513911	0					
ANR	2513958	Callee	read_line		2513911	0					
ANR	2513959	Identifier	read_line		2513911	0					
ANR	2513960	ArgumentList	line		2513911	1					
ANR	2513961	Argument	line		2513911	0					
ANR	2513962	Identifier	line		2513911	0					
ANR	2513963	Argument	state		2513911	1					
ANR	2513964	Identifier	state		2513911	0					
ANR	2513965	Argument	parameters		2513911	2					
ANR	2513966	Identifier	parameters		2513911	0					
ANR	2513967	Identifier	true		2513911	1					
ANR	2513968	CompoundStatement		14:8:310:327	2513911	1					
ANR	2513969	IdentifierDeclStatement	bool good_line ;	280:8:7941:7960	2513911	0	True				
ANR	2513970	IdentifierDecl	good_line		2513911	0					
ANR	2513971	IdentifierDeclType	bool		2513911	0					
ANR	2513972	Identifier	good_line		2513911	1					
ANR	2513973	IdentifierDeclStatement	string error ;	281:8:7970:7985	2513911	1	True				
ANR	2513974	IdentifierDecl	error		2513911	0					
ANR	2513975	IdentifierDeclType	string		2513911	0					
ANR	2513976	Identifier	error		2513911	1					
ANR	2513977	IdentifierDeclStatement	Command command ;	282:8:7995:8012	2513911	2	True				
ANR	2513978	IdentifierDecl	command		2513911	0					
ANR	2513979	IdentifierDeclType	Command		2513911	0					
ANR	2513980	Identifier	command		2513911	1					
ANR	2513981	ExpressionStatement	"good_line = replace_variables ( line , state , parameters )"	284:8:8023:8077	2513911	3	True				
ANR	2513982	AssignmentExpression	"good_line = replace_variables ( line , state , parameters )"		2513911	0		=			
ANR	2513983	Identifier	good_line		2513911	0					
ANR	2513984	CallExpression	"replace_variables ( line , state , parameters )"		2513911	1					
ANR	2513985	Callee	replace_variables		2513911	0					
ANR	2513986	Identifier	replace_variables		2513911	0					
ANR	2513987	ArgumentList	line		2513911	1					
ANR	2513988	Argument	line		2513911	0					
ANR	2513989	Identifier	line		2513911	0					
ANR	2513990	Argument	state		2513911	1					
ANR	2513991	Identifier	state		2513911	0					
ANR	2513992	Argument	parameters		2513911	2					
ANR	2513993	Identifier	parameters		2513911	0					
ANR	2513994	IfStatement	if ( good_line )		2513911	4					
ANR	2513995	Condition	good_line	285:12:8091:8099	2513911	0	True				
ANR	2513996	Identifier	good_line		2513911	0					
ANR	2513997	CompoundStatement		17:23:417:417	2513911	1					
ANR	2513998	ExpressionStatement	"command = get_command ( line , parameters )"	286:12:8116:8155	2513911	0	True				
ANR	2513999	AssignmentExpression	"command = get_command ( line , parameters )"		2513911	0		=			
ANR	2514000	Identifier	command		2513911	0					
ANR	2514001	CallExpression	"get_command ( line , parameters )"		2513911	1					
ANR	2514002	Callee	get_command		2513911	0					
ANR	2514003	Identifier	get_command		2513911	0					
ANR	2514004	ArgumentList	line		2513911	1					
ANR	2514005	Argument	line		2513911	0					
ANR	2514006	Identifier	line		2513911	0					
ANR	2514007	Argument	parameters		2513911	1					
ANR	2514008	Identifier	parameters		2513911	0					
ANR	2514009	ExpressionStatement	"quit = handle_command ( command , line , state , parameters )"	287:12:8169:8224	2513911	1	True				
ANR	2514010	AssignmentExpression	"quit = handle_command ( command , line , state , parameters )"		2513911	0		=			
ANR	2514011	Identifier	quit		2513911	0					
ANR	2514012	CallExpression	"handle_command ( command , line , state , parameters )"		2513911	1					
ANR	2514013	Callee	handle_command		2513911	0					
ANR	2514014	Identifier	handle_command		2513911	0					
ANR	2514015	ArgumentList	command		2513911	1					
ANR	2514016	Argument	command		2513911	0					
ANR	2514017	Identifier	command		2513911	0					
ANR	2514018	Argument	line		2513911	1					
ANR	2514019	Identifier	line		2513911	0					
ANR	2514020	Argument	state		2513911	2					
ANR	2514021	Identifier	state		2513911	0					
ANR	2514022	Argument	parameters		2513911	3					
ANR	2514023	Identifier	parameters		2513911	0					
ANR	2514024	ExpressionStatement	print_final_state ( state )	290:4:8246:8270	2513911	8	True				
ANR	2514025	CallExpression	print_final_state ( state )		2513911	0					
ANR	2514026	Callee	print_final_state		2513911	0					
ANR	2514027	Identifier	print_final_state		2513911	0					
ANR	2514028	ArgumentList	state		2513911	1					
ANR	2514029	Argument	state		2513911	0					
ANR	2514030	Identifier	state		2513911	0					
ANR	2514031	IfStatement	if ( ! parameters . interactive && parameters . input_file != NULL )		2513911	9					
ANR	2514032	Condition	! parameters . interactive && parameters . input_file != NULL	292:8:8281:8336	2513911	0	True				
ANR	2514033	AndExpression	! parameters . interactive && parameters . input_file != NULL		2513911	0		&&			
ANR	2514034	UnaryOperationExpression	! parameters . interactive		2513911	0					
ANR	2514035	UnaryOperator	!		2513911	0					
ANR	2514036	MemberAccess	parameters . interactive		2513911	1					
ANR	2514037	Identifier	parameters		2513911	0					
ANR	2514038	Identifier	interactive		2513911	1					
ANR	2514039	EqualityExpression	parameters . input_file != NULL		2513911	1		!=			
ANR	2514040	MemberAccess	parameters . input_file		2513911	0					
ANR	2514041	Identifier	parameters		2513911	0					
ANR	2514042	Identifier	input_file		2513911	1					
ANR	2514043	Identifier	NULL		2513911	1					
ANR	2514044	CompoundStatement		24:66:654:654	2513911	1					
ANR	2514045	ExpressionStatement	parameters . input_file -> close ( )	293:8:8349:8379	2513911	0	True				
ANR	2514046	CallExpression	parameters . input_file -> close ( )		2513911	0					
ANR	2514047	Callee	parameters . input_file -> close		2513911	0					
ANR	2514048	PtrMemberAccess	parameters . input_file -> close		2513911	0					
ANR	2514049	MemberAccess	parameters . input_file		2513911	0					
ANR	2514050	Identifier	parameters		2513911	0					
ANR	2514051	Identifier	input_file		2513911	1					
ANR	2514052	Identifier	close		2513911	1					
ANR	2514053	ArgumentList			2513911	1					
ANR	2514054	IfStatement	if ( state . number_of_errors == 0 )		2513911	10					
ANR	2514055	Condition	state . number_of_errors == 0	296:8:8396:8422	2513911	0	True				
ANR	2514056	EqualityExpression	state . number_of_errors == 0		2513911	0		==			
ANR	2514057	MemberAccess	state . number_of_errors		2513911	0					
ANR	2514058	Identifier	state		2513911	0					
ANR	2514059	Identifier	number_of_errors		2513911	1					
ANR	2514060	PrimaryExpression	0		2513911	1					
ANR	2514061	CompoundStatement		28:37:740:740	2513911	1					
ANR	2514062	ReturnStatement	return 0 ;	297:8:8435:8443	2513911	0	True				
ANR	2514063	PrimaryExpression	0		2513911	0					
ANR	2514064	ElseStatement	else		2513911	0					
ANR	2514065	CompoundStatement		30:11:771:771	2513911	0					
ANR	2514066	ReturnStatement	return 1 ;	299:8:8466:8474	2513911	0	True				
ANR	2514067	PrimaryExpression	1		2513911	0					
ANR	2514068	ReturnType	int		2513911	1					
ANR	2514069	Identifier	main		2513911	2					
ANR	2514070	ParameterList	"int argc , char * * argv"		2513911	3					
ANR	2514071	Parameter	int argc	267:4:7655:7663	2513911	0	True				
ANR	2514072	ParameterType	int		2513911	0					
ANR	2514073	Identifier	argc		2513911	1					
ANR	2514074	Parameter	char * * argv	268:4:7671:7681	2513911	1	True				
ANR	2514075	ParameterType	char * *		2513911	0					
ANR	2514076	Identifier	argv		2513911	1					
ANR	2514077	CFGEntryNode	ENTRY		2513911		True				
ANR	2514078	CFGExitNode	EXIT		2513911		True				
ANR	2514079	Symbol	argc		2513911						
ANR	2514080	Symbol	read_line		2513911						
ANR	2514081	Symbol	NULL		2513911						
ANR	2514082	Symbol	line		2513911						
ANR	2514083	Symbol	good_line		2513911						
ANR	2514084	Symbol	replace_variables		2513911						
ANR	2514085	Symbol	false		2513911						
ANR	2514086	Symbol	error		2513911						
ANR	2514087	Symbol	argv		2513911						
ANR	2514088	Symbol	command		2513911						
ANR	2514089	Symbol	handle_command		2513911						
ANR	2514090	Symbol	get_command		2513911						
ANR	2514091	Symbol	true		2513911						
ANR	2514092	Symbol	quit		2513911						
ANR	2514093	Symbol	state . number_of_errors		2513911						
ANR	2514094	Symbol	state		2513911						
ANR	2514095	Symbol	parameters		2513911						
ANR	2514096	Symbol	parameters . input_file		2513911						
ANR	2514097	Symbol	parameters . interactive		2513911						
ANR	2514098	Function	read_line	309:0:8671:8987							
ANR	2514099	FunctionDef	"read_line (string & line , State & state , Parameters & parameters)"		2514098	0					
ANR	2514100	CompoundStatement		313:0:8762:8987	2514098	0					
ANR	2514101	IdentifierDeclStatement	bool have_input ;	314:4:8768:8783	2514098	0	True				
ANR	2514102	IdentifierDecl	have_input		2514098	0					
ANR	2514103	IdentifierDeclType	bool		2514098	0					
ANR	2514104	Identifier	have_input		2514098	1					
ANR	2514105	IfStatement	if ( parameters . interactive )		2514098	1					
ANR	2514106	Condition	parameters . interactive	316:8:8794:8815	2514098	0	True				
ANR	2514107	MemberAccess	parameters . interactive		2514098	0					
ANR	2514108	Identifier	parameters		2514098	0					
ANR	2514109	Identifier	interactive		2514098	1					
ANR	2514110	CompoundStatement		4:32:55:55	2514098	1					
ANR	2514111	ExpressionStatement	"have_input = read_line_stdin ( line , state , parameters )"	317:8:8828:8881	2514098	0	True				
ANR	2514112	AssignmentExpression	"have_input = read_line_stdin ( line , state , parameters )"		2514098	0		=			
ANR	2514113	Identifier	have_input		2514098	0					
ANR	2514114	CallExpression	"read_line_stdin ( line , state , parameters )"		2514098	1					
ANR	2514115	Callee	read_line_stdin		2514098	0					
ANR	2514116	Identifier	read_line_stdin		2514098	0					
ANR	2514117	ArgumentList	line		2514098	1					
ANR	2514118	Argument	line		2514098	0					
ANR	2514119	Identifier	line		2514098	0					
ANR	2514120	Argument	state		2514098	1					
ANR	2514121	Identifier	state		2514098	0					
ANR	2514122	Argument	parameters		2514098	2					
ANR	2514123	Identifier	parameters		2514098	0					
ANR	2514124	ElseStatement	else		2514098	0					
ANR	2514125	CompoundStatement		6:11:131:131	2514098	0					
ANR	2514126	ExpressionStatement	"have_input = read_line_file ( line , state , parameters )"	319:8:8904:8956	2514098	0	True				
ANR	2514127	AssignmentExpression	"have_input = read_line_file ( line , state , parameters )"		2514098	0		=			
ANR	2514128	Identifier	have_input		2514098	0					
ANR	2514129	CallExpression	"read_line_file ( line , state , parameters )"		2514098	1					
ANR	2514130	Callee	read_line_file		2514098	0					
ANR	2514131	Identifier	read_line_file		2514098	0					
ANR	2514132	ArgumentList	line		2514098	1					
ANR	2514133	Argument	line		2514098	0					
ANR	2514134	Identifier	line		2514098	0					
ANR	2514135	Argument	state		2514098	1					
ANR	2514136	Identifier	state		2514098	0					
ANR	2514137	Argument	parameters		2514098	2					
ANR	2514138	Identifier	parameters		2514098	0					
ANR	2514139	ReturnStatement	return have_input ;	321:4:8968:8985	2514098	2	True				
ANR	2514140	Identifier	have_input		2514098	0					
ANR	2514141	ReturnType	bool		2514098	1					
ANR	2514142	Identifier	read_line		2514098	2					
ANR	2514143	ParameterList	"string & line , State & state , Parameters & parameters"		2514098	3					
ANR	2514144	Parameter	string & line	310:4:8691:8706	2514098	0	True				
ANR	2514145	ParameterType	string &		2514098	0					
ANR	2514146	Identifier	line		2514098	1					
ANR	2514147	Parameter	State & state	311:4:8714:8730	2514098	1	True				
ANR	2514148	ParameterType	State &		2514098	0					
ANR	2514149	Identifier	state		2514098	1					
ANR	2514150	Parameter	Parameters & parameters	312:4:8738:8759	2514098	2	True				
ANR	2514151	ParameterType	Parameters &		2514098	0					
ANR	2514152	Identifier	parameters		2514098	1					
ANR	2514153	CFGEntryNode	ENTRY		2514098		True				
ANR	2514154	CFGExitNode	EXIT		2514098		True				
ANR	2514155	Symbol	line		2514098						
ANR	2514156	Symbol	have_input		2514098						
ANR	2514157	Symbol	read_line_file		2514098						
ANR	2514158	Symbol	state		2514098						
ANR	2514159	Symbol	parameters		2514098						
ANR	2514160	Symbol	parameters . interactive		2514098						
ANR	2514161	Symbol	read_line_stdin		2514098						
ANR	2514162	DeclStmt									
ANR	2514163	Decl							bool	bool	have_input
ANR	2514164	DeclStmt									
ANR	2514165	Decl							bool	bool	in_continuation
ANR	2514166	DeclStmt									
ANR	2514167	Decl							bool	bool	done
ANR	2514168	DeclStmt									
ANR	2514169	Decl							string	string	line_segment
ANR	2514170	Function	read_line_file	395:0:10864:12631							
ANR	2514171	FunctionDef	"read_line_file (string & line , State & state , Parameters & parameters)"		2514170	0					
ANR	2514172	CompoundStatement		399:0:10960:12631	2514170	0					
ANR	2514173	IdentifierDeclStatement	bool have_input ;	400:4:10966:10991	2514170	0	True				
ANR	2514174	IdentifierDecl	have_input		2514170	0					
ANR	2514175	IdentifierDeclType	bool		2514170	0					
ANR	2514176	Identifier	have_input		2514170	1					
ANR	2514177	Statement	static	401:4:10997:11002	2514170	1	True				
ANR	2514178	IdentifierDeclStatement	bool have_cached_line = false ;	401:11:11004:11036	2514170	2	True				
ANR	2514179	IdentifierDecl	have_cached_line = false		2514170	0					
ANR	2514180	IdentifierDeclType	bool		2514170	0					
ANR	2514181	Identifier	have_cached_line		2514170	1					
ANR	2514182	AssignmentExpression	have_cached_line = false		2514170	2		=			
ANR	2514183	Identifier	false		2514170	0					
ANR	2514184	Identifier	false		2514170	1					
ANR	2514185	Statement	static	402:4:11042:11047	2514170	3	True				
ANR	2514186	IdentifierDeclStatement	"string cached_line = """" ;"	402:11:11049:11073	2514170	4	True				
ANR	2514187	IdentifierDecl	"cached_line = """""		2514170	0					
ANR	2514188	IdentifierDeclType	string		2514170	0					
ANR	2514189	Identifier	cached_line		2514170	1					
ANR	2514190	AssignmentExpression	"cached_line = """""		2514170	2		=			
ANR	2514191	Identifier	cached_line		2514170	0					
ANR	2514192	PrimaryExpression	""""""		2514170	1					
ANR	2514193	IfStatement	if ( ! have_cached_line )		2514170	5					
ANR	2514194	Condition	! have_cached_line	405:8:11152:11168	2514170	0	True				
ANR	2514195	UnaryOperationExpression	! have_cached_line		2514170	0					
ANR	2514196	UnaryOperator	!		2514170	0					
ANR	2514197	Identifier	have_cached_line		2514170	1					
ANR	2514198	CompoundStatement		7:27:210:210	2514170	1					
ANR	2514199	ExpressionStatement	"getline ( * parameters . input_file , cached_line , '\\n' )"	406:8:11181:11231	2514170	0	True				
ANR	2514200	CallExpression	"getline ( * parameters . input_file , cached_line , '\\n' )"		2514170	0					
ANR	2514201	Callee	getline		2514170	0					
ANR	2514202	Identifier	getline		2514170	0					
ANR	2514203	ArgumentList	* parameters . input_file		2514170	1					
ANR	2514204	Argument	* parameters . input_file		2514170	0					
ANR	2514205	UnaryOperationExpression	* parameters . input_file		2514170	0					
ANR	2514206	UnaryOperator	*		2514170	0					
ANR	2514207	MemberAccess	parameters . input_file		2514170	1					
ANR	2514208	Identifier	parameters		2514170	0					
ANR	2514209	Identifier	input_file		2514170	1					
ANR	2514210	Argument	cached_line		2514170	1					
ANR	2514211	Identifier	cached_line		2514170	0					
ANR	2514212	Argument	'\\n'		2514170	2					
ANR	2514213	PrimaryExpression	'\\n'		2514170	0					
ANR	2514214	ExpressionStatement	state . line_number ++	407:8:11241:11260	2514170	1	True				
ANR	2514215	PostIncDecOperationExpression	state . line_number ++		2514170	0					
ANR	2514216	MemberAccess	state . line_number		2514170	0					
ANR	2514217	Identifier	state		2514170	0					
ANR	2514218	Identifier	line_number		2514170	1					
ANR	2514219	IncDec	++		2514170	1					
ANR	2514220	ExpressionStatement	have_cached_line = true	408:8:11270:11293	2514170	2	True				
ANR	2514221	AssignmentExpression	have_cached_line = true		2514170	0		=			
ANR	2514222	Identifier	have_cached_line		2514170	0					
ANR	2514223	Identifier	true		2514170	1					
ANR	2514224	ElseStatement	else		2514170	0					
ANR	2514225	CompoundStatement		11:11:345:345	2514170	0					
ANR	2514226	ExpressionStatement	state . line_number ++	412:8:11450:11469	2514170	0	True				
ANR	2514227	PostIncDecOperationExpression	state . line_number ++		2514170	0					
ANR	2514228	MemberAccess	state . line_number		2514170	0					
ANR	2514229	Identifier	state		2514170	0					
ANR	2514230	Identifier	line_number		2514170	1					
ANR	2514231	IncDec	++		2514170	1					
ANR	2514232	IfStatement	if ( parameters . input_file -> eof ( ) && cached_line . size ( ) == 0 )		2514170	6					
ANR	2514233	Condition	parameters . input_file -> eof ( ) && cached_line . size ( ) == 0	414:8:11485:11539	2514170	0	True				
ANR	2514234	AndExpression	parameters . input_file -> eof ( ) && cached_line . size ( ) == 0		2514170	0		&&			
ANR	2514235	CallExpression	parameters . input_file -> eof ( )		2514170	0					
ANR	2514236	Callee	parameters . input_file -> eof		2514170	0					
ANR	2514237	PtrMemberAccess	parameters . input_file -> eof		2514170	0					
ANR	2514238	MemberAccess	parameters . input_file		2514170	0					
ANR	2514239	Identifier	parameters		2514170	0					
ANR	2514240	Identifier	input_file		2514170	1					
ANR	2514241	Identifier	eof		2514170	1					
ANR	2514242	ArgumentList			2514170	1					
ANR	2514243	EqualityExpression	cached_line . size ( ) == 0		2514170	1		==			
ANR	2514244	CallExpression	cached_line . size ( )		2514170	0					
ANR	2514245	Callee	cached_line . size		2514170	0					
ANR	2514246	MemberAccess	cached_line . size		2514170	0					
ANR	2514247	Identifier	cached_line		2514170	0					
ANR	2514248	Identifier	size		2514170	1					
ANR	2514249	ArgumentList			2514170	1					
ANR	2514250	PrimaryExpression	0		2514170	1					
ANR	2514251	CompoundStatement		16:65:581:581	2514170	1					
ANR	2514252	ExpressionStatement	have_input = false	415:8:11552:11570	2514170	0	True				
ANR	2514253	AssignmentExpression	have_input = false		2514170	0		=			
ANR	2514254	Identifier	have_input		2514170	0					
ANR	2514255	Identifier	false		2514170	1					
ANR	2514256	ExpressionStatement	have_cached_line = false	416:8:11580:11604	2514170	1	True				
ANR	2514257	AssignmentExpression	have_cached_line = false		2514170	0		=			
ANR	2514258	Identifier	have_cached_line		2514170	0					
ANR	2514259	Identifier	false		2514170	1					
ANR	2514260	ElseStatement	else		2514170	0					
ANR	2514261	CompoundStatement		19:11:656:656	2514170	0					
ANR	2514262	ExpressionStatement	line = cached_line	418:8:11627:11645	2514170	0	True				
ANR	2514263	AssignmentExpression	line = cached_line		2514170	0		=			
ANR	2514264	Identifier	line		2514170	0					
ANR	2514265	Identifier	cached_line		2514170	1					
ANR	2514266	ExpressionStatement	have_input = true	419:8:11655:11672	2514170	1	True				
ANR	2514267	AssignmentExpression	have_input = true		2514170	0		=			
ANR	2514268	Identifier	have_input		2514170	0					
ANR	2514269	Identifier	true		2514170	1					
ANR	2514270	ExpressionStatement	have_cached_line = false	420:8:11682:11706	2514170	2	True				
ANR	2514271	AssignmentExpression	have_cached_line = false		2514170	0		=			
ANR	2514272	Identifier	have_cached_line		2514170	0					
ANR	2514273	Identifier	false		2514170	1					
ANR	2514274	IfStatement	if ( have_input )		2514170	7					
ANR	2514275	Condition	have_input	427:8:11971:11980	2514170	0	True				
ANR	2514276	Identifier	have_input		2514170	0					
ANR	2514277	CompoundStatement		29:20:1022:1022	2514170	1					
ANR	2514278	IfStatement	if ( line_is_comment ( line ) )		2514170	0					
ANR	2514279	Condition	line_is_comment ( line )	428:12:11997:12017	2514170	0	True				
ANR	2514280	CallExpression	line_is_comment ( line )		2514170	0					
ANR	2514281	Callee	line_is_comment		2514170	0					
ANR	2514282	Identifier	line_is_comment		2514170	0					
ANR	2514283	ArgumentList	line		2514170	1					
ANR	2514284	Argument	line		2514170	0					
ANR	2514285	Identifier	line		2514170	0					
ANR	2514286	CompoundStatement		30:35:1059:1059	2514170	1					
ANR	2514287	ExpressionStatement	"line = """""	429:12:12034:12043	2514170	0	True				
ANR	2514288	AssignmentExpression	"line = """""		2514170	0		=			
ANR	2514289	Identifier	line		2514170	0					
ANR	2514290	PrimaryExpression	""""""		2514170	1					
ANR	2514291	ElseStatement	else		2514170	0					
ANR	2514292	CompoundStatement		33:12:1113:1130	2514170	0					
ANR	2514293	IdentifierDeclStatement	bool done = false ;	431:12:12074:12091	2514170	0	True				
ANR	2514294	IdentifierDecl	done = false		2514170	0					
ANR	2514295	IdentifierDeclType	bool		2514170	0					
ANR	2514296	Identifier	done		2514170	1					
ANR	2514297	AssignmentExpression	done = false		2514170	2		=			
ANR	2514298	Identifier	false		2514170	0					
ANR	2514299	Identifier	false		2514170	1					
ANR	2514300	WhileStatement	while ( ! done )		2514170	1					
ANR	2514301	Condition	! done	432:19:12112:12116	2514170	0	True				
ANR	2514302	UnaryOperationExpression	! done		2514170	0					
ANR	2514303	UnaryOperator	!		2514170	0					
ANR	2514304	Identifier	done		2514170	1					
ANR	2514305	CompoundStatement		34:26:1158:1158	2514170	1					
ANR	2514306	ExpressionStatement	"getline ( * parameters . input_file , cached_line , '\\n' )"	433:16:12137:12187	2514170	0	True				
ANR	2514307	CallExpression	"getline ( * parameters . input_file , cached_line , '\\n' )"		2514170	0					
ANR	2514308	Callee	getline		2514170	0					
ANR	2514309	Identifier	getline		2514170	0					
ANR	2514310	ArgumentList	* parameters . input_file		2514170	1					
ANR	2514311	Argument	* parameters . input_file		2514170	0					
ANR	2514312	UnaryOperationExpression	* parameters . input_file		2514170	0					
ANR	2514313	UnaryOperator	*		2514170	0					
ANR	2514314	MemberAccess	parameters . input_file		2514170	1					
ANR	2514315	Identifier	parameters		2514170	0					
ANR	2514316	Identifier	input_file		2514170	1					
ANR	2514317	Argument	cached_line		2514170	1					
ANR	2514318	Identifier	cached_line		2514170	0					
ANR	2514319	Argument	'\\n'		2514170	2					
ANR	2514320	PrimaryExpression	'\\n'		2514170	0					
ANR	2514321	IfStatement	if ( line_is_comment ( cached_line ) )		2514170	1					
ANR	2514322	Condition	line_is_comment ( cached_line )	434:20:12209:12236	2514170	0	True				
ANR	2514323	CallExpression	line_is_comment ( cached_line )		2514170	0					
ANR	2514324	Callee	line_is_comment		2514170	0					
ANR	2514325	Identifier	line_is_comment		2514170	0					
ANR	2514326	ArgumentList	cached_line		2514170	1					
ANR	2514327	Argument	cached_line		2514170	0					
ANR	2514328	Identifier	cached_line		2514170	0					
ANR	2514329	CompoundStatement		36:50:1278:1278	2514170	1					
ANR	2514330	ExpressionStatement	state . line_number ++	436:20:12300:12319	2514170	0	True				
ANR	2514331	PostIncDecOperationExpression	state . line_number ++		2514170	0					
ANR	2514332	MemberAccess	state . line_number		2514170	0					
ANR	2514333	Identifier	state		2514170	0					
ANR	2514334	Identifier	line_number		2514170	1					
ANR	2514335	IncDec	++		2514170	1					
ANR	2514336	ElseStatement	else		2514170	0					
ANR	2514337	IfStatement	if ( isspace ( cached_line [ 0 ] ) )		2514170	0					
ANR	2514338	Condition	isspace ( cached_line [ 0 ] )	437:27:12348:12370	2514170	0	True				
ANR	2514339	CallExpression	isspace ( cached_line [ 0 ] )		2514170	0					
ANR	2514340	Callee	isspace		2514170	0					
ANR	2514341	Identifier	isspace		2514170	0					
ANR	2514342	ArgumentList	cached_line [ 0 ]		2514170	1					
ANR	2514343	Argument	cached_line [ 0 ]		2514170	0					
ANR	2514344	ArrayIndexing	cached_line [ 0 ]		2514170	0					
ANR	2514345	Identifier	cached_line		2514170	0					
ANR	2514346	PrimaryExpression	0		2514170	1					
ANR	2514347	CompoundStatement		39:52:1412:1412	2514170	1					
ANR	2514348	ExpressionStatement	line += cached_line	438:20:12395:12414	2514170	0	True				
ANR	2514349	AssignmentExpression	line += cached_line		2514170	0		+=			
ANR	2514350	Identifier	line		2514170	0					
ANR	2514351	Identifier	cached_line		2514170	1					
ANR	2514352	ExpressionStatement	state . line_number ++	439:20:12436:12455	2514170	1	True				
ANR	2514353	PostIncDecOperationExpression	state . line_number ++		2514170	0					
ANR	2514354	MemberAccess	state . line_number		2514170	0					
ANR	2514355	Identifier	state		2514170	0					
ANR	2514356	Identifier	line_number		2514170	1					
ANR	2514357	IncDec	++		2514170	1					
ANR	2514358	ElseStatement	else		2514170	0					
ANR	2514359	CompoundStatement		42:23:1519:1519	2514170	0					
ANR	2514360	ExpressionStatement	done = true	441:20:12502:12513	2514170	0	True				
ANR	2514361	AssignmentExpression	done = true		2514170	0		=			
ANR	2514362	Identifier	done		2514170	0					
ANR	2514363	Identifier	true		2514170	1					
ANR	2514364	ExpressionStatement	have_cached_line = true	442:20:12535:12558	2514170	1	True				
ANR	2514365	AssignmentExpression	have_cached_line = true		2514170	0		=			
ANR	2514366	Identifier	have_cached_line		2514170	0					
ANR	2514367	Identifier	true		2514170	1					
ANR	2514368	ReturnStatement	return have_input ;	447:4:12612:12629	2514170	8	True				
ANR	2514369	Identifier	have_input		2514170	0					
ANR	2514370	ReturnType	bool		2514170	1					
ANR	2514371	Identifier	read_line_file		2514170	2					
ANR	2514372	ParameterList	"string & line , State & state , Parameters & parameters"		2514170	3					
ANR	2514373	Parameter	string & line	396:4:10889:10904	2514170	0	True				
ANR	2514374	ParameterType	string &		2514170	0					
ANR	2514375	Identifier	line		2514170	1					
ANR	2514376	Parameter	State & state	397:4:10912:10928	2514170	1	True				
ANR	2514377	ParameterType	State &		2514170	0					
ANR	2514378	Identifier	state		2514170	1					
ANR	2514379	Parameter	Parameters & parameters	398:4:10936:10957	2514170	2	True				
ANR	2514380	ParameterType	Parameters &		2514170	0					
ANR	2514381	Identifier	parameters		2514170	1					
ANR	2514382	CFGEntryNode	ENTRY		2514170		True				
ANR	2514383	CFGExitNode	EXIT		2514170		True				
ANR	2514384	Symbol	have_cached_line		2514170						
ANR	2514385	Symbol	* parameters . input_file		2514170						
ANR	2514386	Symbol	cached_line . size		2514170						
ANR	2514387	Symbol	line		2514170						
ANR	2514388	Symbol	parameters . input_file -> eof		2514170						
ANR	2514389	Symbol	have_input		2514170						
ANR	2514390	Symbol	false		2514170						
ANR	2514391	Symbol	isspace		2514170						
ANR	2514392	Symbol	line_is_comment		2514170						
ANR	2514393	Symbol	* cached_line		2514170						
ANR	2514394	Symbol	cached_line		2514170						
ANR	2514395	Symbol	done		2514170						
ANR	2514396	Symbol	* parameters		2514170						
ANR	2514397	Symbol	state . line_number		2514170						
ANR	2514398	Symbol	true		2514170						
ANR	2514399	Symbol	state		2514170						
ANR	2514400	Symbol	parameters		2514170						
ANR	2514401	Symbol	parameters . input_file		2514170						
ANR	2514402	Function	replace_variables	457:0:12837:14611							
ANR	2514403	FunctionDef	"replace_variables (string & line , State & state , Parameters & parameters)"		2514402	0					
ANR	2514404	CompoundStatement		461:0:12936:14611	2514402	0					
ANR	2514405	IdentifierDeclStatement	bool good_line ;	462:4:12942:12959	2514402	0	True				
ANR	2514406	IdentifierDecl	good_line		2514402	0					
ANR	2514407	IdentifierDeclType	bool		2514402	0					
ANR	2514408	Identifier	good_line		2514402	1					
ANR	2514409	IdentifierDeclStatement	string error ;	463:4:12965:12978	2514402	1	True				
ANR	2514410	IdentifierDecl	error		2514402	0					
ANR	2514411	IdentifierDeclType	string		2514402	0					
ANR	2514412	Identifier	error		2514402	1					
ANR	2514413	ExpressionStatement	good_line = true	465:4:12985:13001	2514402	2	True				
ANR	2514414	AssignmentExpression	good_line = true		2514402	0		=			
ANR	2514415	Identifier	good_line		2514402	0					
ANR	2514416	Identifier	true		2514402	1					
ANR	2514417	ExpressionStatement	"error = """""	466:4:13007:13017	2514402	3	True				
ANR	2514418	AssignmentExpression	"error = """""		2514402	0		=			
ANR	2514419	Identifier	error		2514402	0					
ANR	2514420	PrimaryExpression	""""""		2514402	1					
ANR	2514421	ForStatement	for ( ; ; )		2514402	4					
ANR	2514422	CompoundStatement		45:8:1248:1258	2514402	0					
ANR	2514423	IdentifierDeclStatement	"int dollar , current_position ;"	468:8:13042:13075	2514402	0	True				
ANR	2514424	IdentifierDecl	dollar		2514402	0					
ANR	2514425	IdentifierDeclType	int		2514402	0					
ANR	2514426	Identifier	dollar		2514402	1					
ANR	2514427	IdentifierDecl	current_position		2514402	1					
ANR	2514428	IdentifierDeclType	int		2514402	0					
ANR	2514429	Identifier	current_position		2514402	1					
ANR	2514430	IdentifierDeclStatement	string variable_name ;	469:8:13085:13107	2514402	1	True				
ANR	2514431	IdentifierDecl	variable_name		2514402	0					
ANR	2514432	IdentifierDeclType	string		2514402	0					
ANR	2514433	Identifier	variable_name		2514402	1					
ANR	2514434	IdentifierDeclStatement	string variable_value ;	470:8:13117:13140	2514402	2	True				
ANR	2514435	IdentifierDecl	variable_value		2514402	0					
ANR	2514436	IdentifierDeclType	string		2514402	0					
ANR	2514437	Identifier	variable_value		2514402	1					
ANR	2514438	IdentifierDeclStatement	Variable * var ;	471:8:13150:13163	2514402	3	True				
ANR	2514439	IdentifierDecl	* var		2514402	0					
ANR	2514440	IdentifierDeclType	Variable *		2514402	0					
ANR	2514441	Identifier	var		2514402	1					
ANR	2514442	ExpressionStatement	current_position = 0	473:8:13174:13194	2514402	4	True				
ANR	2514443	AssignmentExpression	current_position = 0		2514402	0		=			
ANR	2514444	Identifier	current_position		2514402	0					
ANR	2514445	PrimaryExpression	0		2514402	1					
ANR	2514446	ExpressionStatement	"dollar = line . find ( '$' , current_position )"	474:8:13204:13245	2514402	5	True				
ANR	2514447	AssignmentExpression	"dollar = line . find ( '$' , current_position )"		2514402	0		=			
ANR	2514448	Identifier	dollar		2514402	0					
ANR	2514449	CallExpression	"line . find ( '$' , current_position )"		2514402	1					
ANR	2514450	Callee	line . find		2514402	0					
ANR	2514451	MemberAccess	line . find		2514402	0					
ANR	2514452	Identifier	line		2514402	0					
ANR	2514453	Identifier	find		2514402	1					
ANR	2514454	ArgumentList	'$'		2514402	1					
ANR	2514455	Argument	'$'		2514402	0					
ANR	2514456	PrimaryExpression	'$'		2514402	0					
ANR	2514457	Argument	current_position		2514402	1					
ANR	2514458	Identifier	current_position		2514402	0					
ANR	2514459	IfStatement	if ( dollar == - 1 )		2514402	6					
ANR	2514460	Condition	dollar == - 1	475:12:13259:13270	2514402	0	True				
ANR	2514461	EqualityExpression	dollar == - 1		2514402	0		==			
ANR	2514462	Identifier	dollar		2514402	0					
ANR	2514463	UnaryOperationExpression	- 1		2514402	1					
ANR	2514464	UnaryOperator	-		2514402	0					
ANR	2514465	PrimaryExpression	1		2514402	1					
ANR	2514466	CompoundStatement		15:26:336:336	2514402	1					
ANR	2514467	BreakStatement	break ;	476:12:13287:13292	2514402	0	True				
ANR	2514468	ExpressionStatement	current_position = dollar + 1	478:8:13312:13341	2514402	7	True				
ANR	2514469	AssignmentExpression	current_position = dollar + 1		2514402	0		=			
ANR	2514470	Identifier	current_position		2514402	0					
ANR	2514471	AdditiveExpression	dollar + 1		2514402	1		+			
ANR	2514472	Identifier	dollar		2514402	0					
ANR	2514473	PrimaryExpression	1		2514402	1					
ANR	2514474	IfStatement	if ( ! isalpha ( line [ current_position ] ) )		2514402	8					
ANR	2514475	Condition	! isalpha ( line [ current_position ] )	479:12:13355:13386	2514402	0	True				
ANR	2514476	UnaryOperationExpression	! isalpha ( line [ current_position ] )		2514402	0					
ANR	2514477	UnaryOperator	!		2514402	0					
ANR	2514478	CallExpression	isalpha ( line [ current_position ] )		2514402	1					
ANR	2514479	Callee	isalpha		2514402	0					
ANR	2514480	Identifier	isalpha		2514402	0					
ANR	2514481	ArgumentList	line [ current_position ]		2514402	1					
ANR	2514482	Argument	line [ current_position ]		2514402	0					
ANR	2514483	ArrayIndexing	line [ current_position ]		2514402	0					
ANR	2514484	Identifier	line		2514402	0					
ANR	2514485	Identifier	current_position		2514402	1					
ANR	2514486	CompoundStatement		19:45:451:451	2514402	1					
ANR	2514487	ExpressionStatement	good_line = false	480:12:13403:13420	2514402	0	True				
ANR	2514488	AssignmentExpression	good_line = false		2514402	0		=			
ANR	2514489	Identifier	good_line		2514402	0					
ANR	2514490	Identifier	false		2514402	1					
ANR	2514491	ExpressionStatement	"error = ""Bad variable name."""	481:12:13434:13462	2514402	1	True				
ANR	2514492	AssignmentExpression	"error = ""Bad variable name."""		2514402	0		=			
ANR	2514493	Identifier	error		2514402	0					
ANR	2514494	PrimaryExpression	"""Bad variable name."""		2514402	1					
ANR	2514495	BreakStatement	break ;	482:12:13476:13481	2514402	2	True				
ANR	2514496	ExpressionStatement	current_position ++	484:8:13501:13519	2514402	9	True				
ANR	2514497	PostIncDecOperationExpression	current_position ++		2514402	0					
ANR	2514498	Identifier	current_position		2514402	0					
ANR	2514499	IncDec	++		2514402	1					
ANR	2514500	WhileStatement	while ( isalnum ( line [ current_position ] ) || line [ current_position ] == '_' )		2514402	10					
ANR	2514501	Condition	isalnum ( line [ current_position ] ) || line [ current_position ] == '_'	485:15:13536:13599	2514402	0	True				
ANR	2514502	OrExpression	isalnum ( line [ current_position ] ) || line [ current_position ] == '_'		2514402	0		||			
ANR	2514503	CallExpression	isalnum ( line [ current_position ] )		2514402	0					
ANR	2514504	Callee	isalnum		2514402	0					
ANR	2514505	Identifier	isalnum		2514402	0					
ANR	2514506	ArgumentList	line [ current_position ]		2514402	1					
ANR	2514507	Argument	line [ current_position ]		2514402	0					
ANR	2514508	ArrayIndexing	line [ current_position ]		2514402	0					
ANR	2514509	Identifier	line		2514402	0					
ANR	2514510	Identifier	current_position		2514402	1					
ANR	2514511	EqualityExpression	line [ current_position ] == '_'		2514402	1		==			
ANR	2514512	ArrayIndexing	line [ current_position ]		2514402	0					
ANR	2514513	Identifier	line		2514402	0					
ANR	2514514	Identifier	current_position		2514402	1					
ANR	2514515	PrimaryExpression	'_'		2514402	1					
ANR	2514516	CompoundStatement		25:81:665:665	2514402	1					
ANR	2514517	ExpressionStatement	current_position ++	486:12:13616:13634	2514402	0	True				
ANR	2514518	PostIncDecOperationExpression	current_position ++		2514402	0					
ANR	2514519	Identifier	current_position		2514402	0					
ANR	2514520	IncDec	++		2514402	1					
ANR	2514521	ExpressionStatement	"variable_name = line . substr ( dollar + 1 , current_position - ( dollar + 1 ) )"	489:8:13663:13735	2514402	11	True				
ANR	2514522	AssignmentExpression	"variable_name = line . substr ( dollar + 1 , current_position - ( dollar + 1 ) )"		2514402	0		=			
ANR	2514523	Identifier	variable_name		2514402	0					
ANR	2514524	CallExpression	"line . substr ( dollar + 1 , current_position - ( dollar + 1 ) )"		2514402	1					
ANR	2514525	Callee	line . substr		2514402	0					
ANR	2514526	MemberAccess	line . substr		2514402	0					
ANR	2514527	Identifier	line		2514402	0					
ANR	2514528	Identifier	substr		2514402	1					
ANR	2514529	ArgumentList	dollar + 1		2514402	1					
ANR	2514530	Argument	dollar + 1		2514402	0					
ANR	2514531	AdditiveExpression	dollar + 1		2514402	0		+			
ANR	2514532	Identifier	dollar		2514402	0					
ANR	2514533	PrimaryExpression	1		2514402	1					
ANR	2514534	Argument	current_position - ( dollar + 1 )		2514402	1					
ANR	2514535	AdditiveExpression	current_position - ( dollar + 1 )		2514402	0		-			
ANR	2514536	Identifier	current_position		2514402	0					
ANR	2514537	AdditiveExpression	dollar + 1		2514402	1		+			
ANR	2514538	Identifier	dollar		2514402	0					
ANR	2514539	PrimaryExpression	1		2514402	1					
ANR	2514540	ExpressionStatement	var = variables [ variable_name ]	491:8:13746:13776	2514402	12	True				
ANR	2514541	AssignmentExpression	var = variables [ variable_name ]		2514402	0		=			
ANR	2514542	Identifier	var		2514402	0					
ANR	2514543	ArrayIndexing	variables [ variable_name ]		2514402	1					
ANR	2514544	Identifier	variables		2514402	0					
ANR	2514545	Identifier	variable_name		2514402	1					
ANR	2514546	IfStatement	if ( var == NULL )		2514402	13					
ANR	2514547	Condition	var == NULL	493:12:13791:13801	2514402	0	True				
ANR	2514548	EqualityExpression	var == NULL		2514402	0		==			
ANR	2514549	Identifier	var		2514402	0					
ANR	2514550	Identifier	NULL		2514402	1					
ANR	2514551	CompoundStatement		33:25:867:867	2514402	1					
ANR	2514552	ExpressionStatement	good_line = false	494:12:13818:13835	2514402	0	True				
ANR	2514553	AssignmentExpression	good_line = false		2514402	0		=			
ANR	2514554	Identifier	good_line		2514402	0					
ANR	2514555	Identifier	false		2514402	1					
ANR	2514556	ExpressionStatement	"error = ""Unknown variable '$"""	495:12:13849:13878	2514402	1	True				
ANR	2514557	AssignmentExpression	"error = ""Unknown variable '$"""		2514402	0		=			
ANR	2514558	Identifier	error		2514402	0					
ANR	2514559	PrimaryExpression	"""Unknown variable '$"""		2514402	1					
ANR	2514560	ExpressionStatement	error += variable_name	496:12:13892:13914	2514402	2	True				
ANR	2514561	AssignmentExpression	error += variable_name		2514402	0		+=			
ANR	2514562	Identifier	error		2514402	0					
ANR	2514563	Identifier	variable_name		2514402	1					
ANR	2514564	ExpressionStatement	"error += ""'"""	497:12:13928:13940	2514402	3	True				
ANR	2514565	AssignmentExpression	"error += ""'"""		2514402	0		+=			
ANR	2514566	Identifier	error		2514402	0					
ANR	2514567	PrimaryExpression	"""'"""		2514402	1					
ANR	2514568	BreakStatement	break ;	498:12:13954:13959	2514402	4	True				
ANR	2514569	ExpressionStatement	var -> GetStringRepresentation ( variable_value )	501:8:13980:14024	2514402	14	True				
ANR	2514570	CallExpression	var -> GetStringRepresentation ( variable_value )		2514402	0					
ANR	2514571	Callee	var -> GetStringRepresentation		2514402	0					
ANR	2514572	PtrMemberAccess	var -> GetStringRepresentation		2514402	0					
ANR	2514573	Identifier	var		2514402	0					
ANR	2514574	Identifier	GetStringRepresentation		2514402	1					
ANR	2514575	ArgumentList	variable_value		2514402	1					
ANR	2514576	Argument	variable_value		2514402	0					
ANR	2514577	Identifier	variable_value		2514402	0					
ANR	2514578	IdentifierDeclStatement	string end ;	505:8:14185:14195	2514402	15	True				
ANR	2514579	IdentifierDecl	end		2514402	0					
ANR	2514580	IdentifierDeclType	string		2514402	0					
ANR	2514581	Identifier	end		2514402	1					
ANR	2514582	IfStatement	if ( current_position < ( int ) line . size ( ) )		2514402	16					
ANR	2514583	Condition	current_position < ( int ) line . size ( )	506:12:14209:14244	2514402	0	True				
ANR	2514584	RelationalExpression	current_position < ( int ) line . size ( )		2514402	0		<			
ANR	2514585	Identifier	current_position		2514402	0					
ANR	2514586	CastExpression	( int ) line . size ( )		2514402	1					
ANR	2514587	CastTarget	int		2514402	0					
ANR	2514588	CallExpression	line . size ( )		2514402	1					
ANR	2514589	Callee	line . size		2514402	0					
ANR	2514590	MemberAccess	line . size		2514402	0					
ANR	2514591	Identifier	line		2514402	0					
ANR	2514592	Identifier	size		2514402	1					
ANR	2514593	ArgumentList			2514402	1					
ANR	2514594	CompoundStatement		46:50:1310:1310	2514402	1					
ANR	2514595	ExpressionStatement	end = line . substr ( current_position )	507:12:14261:14296	2514402	0	True				
ANR	2514596	AssignmentExpression	end = line . substr ( current_position )		2514402	0		=			
ANR	2514597	Identifier	end		2514402	0					
ANR	2514598	CallExpression	line . substr ( current_position )		2514402	1					
ANR	2514599	Callee	line . substr		2514402	0					
ANR	2514600	MemberAccess	line . substr		2514402	0					
ANR	2514601	Identifier	line		2514402	0					
ANR	2514602	Identifier	substr		2514402	1					
ANR	2514603	ArgumentList	current_position		2514402	1					
ANR	2514604	Argument	current_position		2514402	0					
ANR	2514605	Identifier	current_position		2514402	0					
ANR	2514606	ElseStatement	else		2514402	0					
ANR	2514607	CompoundStatement		48:15:1376:1376	2514402	0					
ANR	2514608	ExpressionStatement	"end = """""	509:12:14327:14335	2514402	0	True				
ANR	2514609	AssignmentExpression	"end = """""		2514402	0		=			
ANR	2514610	Identifier	end		2514402	0					
ANR	2514611	PrimaryExpression	""""""		2514402	1					
ANR	2514612	ExpressionStatement	"line = line . substr ( 0 , dollar ) + variable_value + end"	511:8:14355:14407	2514402	17	True				
ANR	2514613	AssignmentExpression	"line = line . substr ( 0 , dollar ) + variable_value + end"		2514402	0		=			
ANR	2514614	Identifier	line		2514402	0					
ANR	2514615	AdditiveExpression	"line . substr ( 0 , dollar ) + variable_value + end"		2514402	1		+			
ANR	2514616	CallExpression	"line . substr ( 0 , dollar )"		2514402	0					
ANR	2514617	Callee	line . substr		2514402	0					
ANR	2514618	MemberAccess	line . substr		2514402	0					
ANR	2514619	Identifier	line		2514402	0					
ANR	2514620	Identifier	substr		2514402	1					
ANR	2514621	ArgumentList	0		2514402	1					
ANR	2514622	Argument	0		2514402	0					
ANR	2514623	PrimaryExpression	0		2514402	0					
ANR	2514624	Argument	dollar		2514402	1					
ANR	2514625	Identifier	dollar		2514402	0					
ANR	2514626	AdditiveExpression	variable_value + end		2514402	1		+			
ANR	2514627	Identifier	variable_value		2514402	0					
ANR	2514628	Identifier	end		2514402	1					
ANR	2514629	IfStatement	if ( parameters . debug )		2514402	5					
ANR	2514630	Condition	parameters . debug	515:8:14429:14444	2514402	0	True				
ANR	2514631	MemberAccess	parameters . debug		2514402	0					
ANR	2514632	Identifier	parameters		2514402	0					
ANR	2514633	Identifier	debug		2514402	1					
ANR	2514634	CompoundStatement		55:26:1510:1510	2514402	1					
ANR	2514635	ExpressionStatement	"cerr << ""# after replacement: "" << line << endl"	516:8:14457:14504	2514402	0	True				
ANR	2514636	ShiftExpression	"cerr << ""# after replacement: "" << line << endl"		2514402	0		<<			
ANR	2514637	Identifier	cerr		2514402	0					
ANR	2514638	ShiftExpression	"""# after replacement: "" << line << endl"		2514402	1		<<			
ANR	2514639	PrimaryExpression	"""# after replacement: """		2514402	0					
ANR	2514640	ShiftExpression	line << endl		2514402	1		<<			
ANR	2514641	Identifier	line		2514402	0					
ANR	2514642	Identifier	endl		2514402	1					
ANR	2514643	IfStatement	if ( ! good_line )		2514402	6					
ANR	2514644	Condition	! good_line	519:8:14525:14534	2514402	0	True				
ANR	2514645	UnaryOperationExpression	! good_line		2514402	0					
ANR	2514646	UnaryOperator	!		2514402	0					
ANR	2514647	Identifier	good_line		2514402	1					
ANR	2514648	CompoundStatement		59:20:1600:1600	2514402	1					
ANR	2514649	ExpressionStatement	"print_error_message ( error , state )"	520:8:14547:14580	2514402	0	True				
ANR	2514650	CallExpression	"print_error_message ( error , state )"		2514402	0					
ANR	2514651	Callee	print_error_message		2514402	0					
ANR	2514652	Identifier	print_error_message		2514402	0					
ANR	2514653	ArgumentList	error		2514402	1					
ANR	2514654	Argument	error		2514402	0					
ANR	2514655	Identifier	error		2514402	0					
ANR	2514656	Argument	state		2514402	1					
ANR	2514657	Identifier	state		2514402	0					
ANR	2514658	ReturnStatement	return good_line ;	523:4:14593:14609	2514402	7	True				
ANR	2514659	Identifier	good_line		2514402	0					
ANR	2514660	ReturnType	bool		2514402	1					
ANR	2514661	Identifier	replace_variables		2514402	2					
ANR	2514662	ParameterList	"string & line , State & state , Parameters & parameters"		2514402	3					
ANR	2514663	Parameter	string & line	458:4:12865:12880	2514402	0	True				
ANR	2514664	ParameterType	string &		2514402	0					
ANR	2514665	Identifier	line		2514402	1					
ANR	2514666	Parameter	State & state	459:4:12888:12904	2514402	1	True				
ANR	2514667	ParameterType	State &		2514402	0					
ANR	2514668	Identifier	state		2514402	1					
ANR	2514669	Parameter	Parameters & parameters	460:4:12912:12933	2514402	2	True				
ANR	2514670	ParameterType	Parameters &		2514402	0					
ANR	2514671	Identifier	parameters		2514402	1					
ANR	2514672	CFGEntryNode	ENTRY		2514402		True				
ANR	2514673	CFGExitNode	EXIT		2514402		True				
ANR	2514674	InfiniteForNode	true		2514402		True				
ANR	2514675	Symbol	isalpha		2514402						
ANR	2514676	Symbol	variable_value		2514402						
ANR	2514677	Symbol	line . find		2514402						
ANR	2514678	Symbol	line		2514402						
ANR	2514679	Symbol	line . substr		2514402						
ANR	2514680	Symbol	line . size		2514402						
ANR	2514681	Symbol	current_position		2514402						
ANR	2514682	Symbol	* variables		2514402						
ANR	2514683	Symbol	* line		2514402						
ANR	2514684	Symbol	error		2514402						
ANR	2514685	Symbol	dollar		2514402						
ANR	2514686	Symbol	parameters . debug		2514402						
ANR	2514687	Symbol	* variable_name		2514402						
ANR	2514688	Symbol	end		2514402						
ANR	2514689	Symbol	state		2514402						
ANR	2514690	Symbol	variable_name		2514402						
ANR	2514691	Symbol	variables		2514402						
ANR	2514692	Symbol	NULL		2514402						
ANR	2514693	Symbol	isalnum		2514402						
ANR	2514694	Symbol	good_line		2514402						
ANR	2514695	Symbol	var		2514402						
ANR	2514696	Symbol	false		2514402						
ANR	2514697	Symbol	* current_position		2514402						
ANR	2514698	Symbol	true		2514402						
ANR	2514699	Symbol	parameters		2514402						
ANR	2514700	DeclStmt									
ANR	2514701	Decl							int	int	current_position
ANR	2514702	DeclStmt									
ANR	2514703	Decl							int	int	length
ANR	2514704	DeclStmt									
ANR	2514705	Decl							string	string	command_name
ANR	2514706	DeclStmt									
ANR	2514707	Decl							Command	Command	command
ANR	2514708	Function	handle_command	599:0:16816:18284							
ANR	2514709	FunctionDef	"handle_command (Command command , string & line , State & state , Parameters & parameters)"		2514708	0					
ANR	2514710	CompoundStatement		604:0:16937:18284	2514708	0					
ANR	2514711	IdentifierDeclStatement	bool quit = false ;	605:4:16943:16960	2514708	0	True				
ANR	2514712	IdentifierDecl	quit = false		2514708	0					
ANR	2514713	IdentifierDeclType	bool		2514708	0					
ANR	2514714	Identifier	quit		2514708	1					
ANR	2514715	AssignmentExpression	quit = false		2514708	2		=			
ANR	2514716	Identifier	false		2514708	0					
ANR	2514717	Identifier	false		2514708	1					
ANR	2514718	SwitchStatement	switch ( command )		2514708	1					
ANR	2514719	Condition	command	607:12:16975:16981	2514708	0	True				
ANR	2514720	Identifier	command		2514708	0					
ANR	2514721	CompoundStatement		4:21:46:46	2514708	1					
ANR	2514722	Label	case cmd_NoCommand :	608:4:16990:17008	2514708	0	True				
ANR	2514723	Identifier	cmd_NoCommand		2514708	0					
ANR	2514724	BreakStatement	break ;	610:8:17059:17064	2514708	1	True				
ANR	2514725	Label	case cmd_InvalidCommand :	611:4:17070:17093	2514708	2	True				
ANR	2514726	Identifier	cmd_InvalidCommand		2514708	0					
ANR	2514727	ExpressionStatement	"print_error_message ( ""Unknown command on line"" , state )"	612:8:17103:17156	2514708	3	True				
ANR	2514728	CallExpression	"print_error_message ( ""Unknown command on line"" , state )"		2514708	0					
ANR	2514729	Callee	print_error_message		2514708	0					
ANR	2514730	Identifier	print_error_message		2514708	0					
ANR	2514731	ArgumentList	"""Unknown command on line"""		2514708	1					
ANR	2514732	Argument	"""Unknown command on line"""		2514708	0					
ANR	2514733	PrimaryExpression	"""Unknown command on line"""		2514708	0					
ANR	2514734	Argument	state		2514708	1					
ANR	2514735	Identifier	state		2514708	0					
ANR	2514736	BreakStatement	break ;	613:8:17166:17171	2514708	4	True				
ANR	2514737	Label	case cmd_Let :	614:4:17177:17189	2514708	5	True				
ANR	2514738	Identifier	cmd_Let		2514708	0					
ANR	2514739	ExpressionStatement	"handle_let ( line , state , parameters )"	615:8:17199:17234	2514708	6	True				
ANR	2514740	CallExpression	"handle_let ( line , state , parameters )"		2514708	0					
ANR	2514741	Callee	handle_let		2514708	0					
ANR	2514742	Identifier	handle_let		2514708	0					
ANR	2514743	ArgumentList	line		2514708	1					
ANR	2514744	Argument	line		2514708	0					
ANR	2514745	Identifier	line		2514708	0					
ANR	2514746	Argument	state		2514708	1					
ANR	2514747	Identifier	state		2514708	0					
ANR	2514748	Argument	parameters		2514708	2					
ANR	2514749	Identifier	parameters		2514708	0					
ANR	2514750	BreakStatement	break ;	616:8:17244:17249	2514708	7	True				
ANR	2514751	Label	case cmd_Eval :	617:4:17255:17268	2514708	8	True				
ANR	2514752	Identifier	cmd_Eval		2514708	0					
ANR	2514753	ExpressionStatement	"handle_eval ( line , state , parameters )"	618:8:17278:17314	2514708	9	True				
ANR	2514754	CallExpression	"handle_eval ( line , state , parameters )"		2514708	0					
ANR	2514755	Callee	handle_eval		2514708	0					
ANR	2514756	Identifier	handle_eval		2514708	0					
ANR	2514757	ArgumentList	line		2514708	1					
ANR	2514758	Argument	line		2514708	0					
ANR	2514759	Identifier	line		2514708	0					
ANR	2514760	Argument	state		2514708	1					
ANR	2514761	Identifier	state		2514708	0					
ANR	2514762	Argument	parameters		2514708	2					
ANR	2514763	Identifier	parameters		2514708	0					
ANR	2514764	BreakStatement	break ;	619:8:17324:17329	2514708	10	True				
ANR	2514765	Label	case cmd_Print :	620:4:17335:17349	2514708	11	True				
ANR	2514766	Identifier	cmd_Print		2514708	0					
ANR	2514767	ExpressionStatement	"handle_print ( line , state , parameters )"	621:8:17359:17396	2514708	12	True				
ANR	2514768	CallExpression	"handle_print ( line , state , parameters )"		2514708	0					
ANR	2514769	Callee	handle_print		2514708	0					
ANR	2514770	Identifier	handle_print		2514708	0					
ANR	2514771	ArgumentList	line		2514708	1					
ANR	2514772	Argument	line		2514708	0					
ANR	2514773	Identifier	line		2514708	0					
ANR	2514774	Argument	state		2514708	1					
ANR	2514775	Identifier	state		2514708	0					
ANR	2514776	Argument	parameters		2514708	2					
ANR	2514777	Identifier	parameters		2514708	0					
ANR	2514778	BreakStatement	break ;	622:8:17406:17411	2514708	13	True				
ANR	2514779	Label	case cmd_Same :	623:4:17417:17430	2514708	14	True				
ANR	2514780	Identifier	cmd_Same		2514708	0					
ANR	2514781	ExpressionStatement	"handle_same ( line , state , parameters )"	624:8:17440:17476	2514708	15	True				
ANR	2514782	CallExpression	"handle_same ( line , state , parameters )"		2514708	0					
ANR	2514783	Callee	handle_same		2514708	0					
ANR	2514784	Identifier	handle_same		2514708	0					
ANR	2514785	ArgumentList	line		2514708	1					
ANR	2514786	Argument	line		2514708	0					
ANR	2514787	Identifier	line		2514708	0					
ANR	2514788	Argument	state		2514708	1					
ANR	2514789	Identifier	state		2514708	0					
ANR	2514790	Argument	parameters		2514708	2					
ANR	2514791	Identifier	parameters		2514708	0					
ANR	2514792	BreakStatement	break ;	625:8:17486:17491	2514708	16	True				
ANR	2514793	Label	case cmd_Sameq :	626:4:17497:17511	2514708	17	True				
ANR	2514794	Identifier	cmd_Sameq		2514708	0					
ANR	2514795	ExpressionStatement	"handle_sameq ( line , state , parameters )"	627:8:17521:17558	2514708	18	True				
ANR	2514796	CallExpression	"handle_sameq ( line , state , parameters )"		2514708	0					
ANR	2514797	Callee	handle_sameq		2514708	0					
ANR	2514798	Identifier	handle_sameq		2514708	0					
ANR	2514799	ArgumentList	line		2514708	1					
ANR	2514800	Argument	line		2514708	0					
ANR	2514801	Identifier	line		2514708	0					
ANR	2514802	Argument	state		2514708	1					
ANR	2514803	Identifier	state		2514708	0					
ANR	2514804	Argument	parameters		2514708	2					
ANR	2514805	Identifier	parameters		2514708	0					
ANR	2514806	BreakStatement	break ;	628:8:17568:17573	2514708	19	True				
ANR	2514807	Label	case cmd_Diff :	629:4:17579:17592	2514708	20	True				
ANR	2514808	Identifier	cmd_Diff		2514708	0					
ANR	2514809	ExpressionStatement	"handle_diff ( line , state , parameters )"	630:8:17602:17638	2514708	21	True				
ANR	2514810	CallExpression	"handle_diff ( line , state , parameters )"		2514708	0					
ANR	2514811	Callee	handle_diff		2514708	0					
ANR	2514812	Identifier	handle_diff		2514708	0					
ANR	2514813	ArgumentList	line		2514708	1					
ANR	2514814	Argument	line		2514708	0					
ANR	2514815	Identifier	line		2514708	0					
ANR	2514816	Argument	state		2514708	1					
ANR	2514817	Identifier	state		2514708	0					
ANR	2514818	Argument	parameters		2514708	2					
ANR	2514819	Identifier	parameters		2514708	0					
ANR	2514820	BreakStatement	break ;	631:8:17648:17653	2514708	22	True				
ANR	2514821	Label	case cmd_Diffq :	632:4:17659:17673	2514708	23	True				
ANR	2514822	Identifier	cmd_Diffq		2514708	0					
ANR	2514823	ExpressionStatement	"handle_diffq ( line , state , parameters )"	633:8:17683:17720	2514708	24	True				
ANR	2514824	CallExpression	"handle_diffq ( line , state , parameters )"		2514708	0					
ANR	2514825	Callee	handle_diffq		2514708	0					
ANR	2514826	Identifier	handle_diffq		2514708	0					
ANR	2514827	ArgumentList	line		2514708	1					
ANR	2514828	Argument	line		2514708	0					
ANR	2514829	Identifier	line		2514708	0					
ANR	2514830	Argument	state		2514708	1					
ANR	2514831	Identifier	state		2514708	0					
ANR	2514832	Argument	parameters		2514708	2					
ANR	2514833	Identifier	parameters		2514708	0					
ANR	2514834	BreakStatement	break ;	634:8:17730:17735	2514708	25	True				
ANR	2514835	Label	case cmd_Set :	635:4:17741:17753	2514708	26	True				
ANR	2514836	Identifier	cmd_Set		2514708	0					
ANR	2514837	ExpressionStatement	"handle_set ( line , state , parameters )"	636:8:17763:17798	2514708	27	True				
ANR	2514838	CallExpression	"handle_set ( line , state , parameters )"		2514708	0					
ANR	2514839	Callee	handle_set		2514708	0					
ANR	2514840	Identifier	handle_set		2514708	0					
ANR	2514841	ArgumentList	line		2514708	1					
ANR	2514842	Argument	line		2514708	0					
ANR	2514843	Identifier	line		2514708	0					
ANR	2514844	Argument	state		2514708	1					
ANR	2514845	Identifier	state		2514708	0					
ANR	2514846	Argument	parameters		2514708	2					
ANR	2514847	Identifier	parameters		2514708	0					
ANR	2514848	BreakStatement	break ;	637:8:17808:17813	2514708	28	True				
ANR	2514849	Label	case cmd_Show :	638:4:17819:17832	2514708	29	True				
ANR	2514850	Identifier	cmd_Show		2514708	0					
ANR	2514851	ExpressionStatement	"handle_show ( line , state , parameters )"	639:8:17842:17878	2514708	30	True				
ANR	2514852	CallExpression	"handle_show ( line , state , parameters )"		2514708	0					
ANR	2514853	Callee	handle_show		2514708	0					
ANR	2514854	Identifier	handle_show		2514708	0					
ANR	2514855	ArgumentList	line		2514708	1					
ANR	2514856	Argument	line		2514708	0					
ANR	2514857	Identifier	line		2514708	0					
ANR	2514858	Argument	state		2514708	1					
ANR	2514859	Identifier	state		2514708	0					
ANR	2514860	Argument	parameters		2514708	2					
ANR	2514861	Identifier	parameters		2514708	0					
ANR	2514862	BreakStatement	break ;	640:8:17888:17893	2514708	31	True				
ANR	2514863	Label	case cmd_Writexml :	641:4:17899:17916	2514708	32	True				
ANR	2514864	Identifier	cmd_Writexml		2514708	0					
ANR	2514865	ExpressionStatement	"handle_writexml ( line , state , parameters )"	642:8:17926:17966	2514708	33	True				
ANR	2514866	CallExpression	"handle_writexml ( line , state , parameters )"		2514708	0					
ANR	2514867	Callee	handle_writexml		2514708	0					
ANR	2514868	Identifier	handle_writexml		2514708	0					
ANR	2514869	ArgumentList	line		2514708	1					
ANR	2514870	Argument	line		2514708	0					
ANR	2514871	Identifier	line		2514708	0					
ANR	2514872	Argument	state		2514708	1					
ANR	2514873	Identifier	state		2514708	0					
ANR	2514874	Argument	parameters		2514708	2					
ANR	2514875	Identifier	parameters		2514708	0					
ANR	2514876	BreakStatement	break ;	643:8:17976:17981	2514708	34	True				
ANR	2514877	Label	case cmd_Readxml :	644:4:17987:18003	2514708	35	True				
ANR	2514878	Identifier	cmd_Readxml		2514708	0					
ANR	2514879	ExpressionStatement	"handle_readxml ( line , state , parameters )"	645:8:18013:18052	2514708	36	True				
ANR	2514880	CallExpression	"handle_readxml ( line , state , parameters )"		2514708	0					
ANR	2514881	Callee	handle_readxml		2514708	0					
ANR	2514882	Identifier	handle_readxml		2514708	0					
ANR	2514883	ArgumentList	line		2514708	1					
ANR	2514884	Argument	line		2514708	0					
ANR	2514885	Identifier	line		2514708	0					
ANR	2514886	Argument	state		2514708	1					
ANR	2514887	Identifier	state		2514708	0					
ANR	2514888	Argument	parameters		2514708	2					
ANR	2514889	Identifier	parameters		2514708	0					
ANR	2514890	BreakStatement	break ;	646:8:18062:18067	2514708	37	True				
ANR	2514891	Label	case cmd_Echo :	647:4:18073:18086	2514708	38	True				
ANR	2514892	Identifier	cmd_Echo		2514708	0					
ANR	2514893	ExpressionStatement	"handle_echo ( line , state , parameters )"	648:8:18096:18132	2514708	39	True				
ANR	2514894	CallExpression	"handle_echo ( line , state , parameters )"		2514708	0					
ANR	2514895	Callee	handle_echo		2514708	0					
ANR	2514896	Identifier	handle_echo		2514708	0					
ANR	2514897	ArgumentList	line		2514708	1					
ANR	2514898	Argument	line		2514708	0					
ANR	2514899	Identifier	line		2514708	0					
ANR	2514900	Argument	state		2514708	1					
ANR	2514901	Identifier	state		2514708	0					
ANR	2514902	Argument	parameters		2514708	2					
ANR	2514903	Identifier	parameters		2514708	0					
ANR	2514904	BreakStatement	break ;	649:8:18142:18147	2514708	40	True				
ANR	2514905	Label	case cmd_Help :	650:4:18153:18166	2514708	41	True				
ANR	2514906	Identifier	cmd_Help		2514708	0					
ANR	2514907	ExpressionStatement	handle_help ( )	651:8:18176:18189	2514708	42	True				
ANR	2514908	CallExpression	handle_help ( )		2514708	0					
ANR	2514909	Callee	handle_help		2514708	0					
ANR	2514910	Identifier	handle_help		2514708	0					
ANR	2514911	ArgumentList			2514708	1					
ANR	2514912	BreakStatement	break ;	652:8:18199:18204	2514708	43	True				
ANR	2514913	Label	case cmd_Quit :	653:4:18210:18223	2514708	44	True				
ANR	2514914	Identifier	cmd_Quit		2514708	0					
ANR	2514915	ExpressionStatement	quit = true	654:8:18233:18244	2514708	45	True				
ANR	2514916	AssignmentExpression	quit = true		2514708	0		=			
ANR	2514917	Identifier	quit		2514708	0					
ANR	2514918	Identifier	true		2514708	1					
ANR	2514919	BreakStatement	break ;	655:8:18254:18259	2514708	46	True				
ANR	2514920	ReturnStatement	return quit ;	657:4:18271:18282	2514708	2	True				
ANR	2514921	Identifier	quit		2514708	0					
ANR	2514922	ReturnType	bool		2514708	1					
ANR	2514923	Identifier	handle_command		2514708	2					
ANR	2514924	ParameterList	"Command command , string & line , State & state , Parameters & parameters"		2514708	3					
ANR	2514925	Parameter	Command command	600:4:16841:16858	2514708	0	True				
ANR	2514926	ParameterType	Command		2514708	0					
ANR	2514927	Identifier	command		2514708	1					
ANR	2514928	Parameter	string & line	601:4:16866:16881	2514708	1	True				
ANR	2514929	ParameterType	string &		2514708	0					
ANR	2514930	Identifier	line		2514708	1					
ANR	2514931	Parameter	State & state	602:4:16889:16905	2514708	2	True				
ANR	2514932	ParameterType	State &		2514708	0					
ANR	2514933	Identifier	state		2514708	1					
ANR	2514934	Parameter	Parameters & parameters	603:4:16913:16934	2514708	3	True				
ANR	2514935	ParameterType	Parameters &		2514708	0					
ANR	2514936	Identifier	parameters		2514708	1					
ANR	2514937	CFGEntryNode	ENTRY		2514708		True				
ANR	2514938	CFGExitNode	EXIT		2514708		True				
ANR	2514939	Symbol	line		2514708						
ANR	2514940	Symbol	false		2514708						
ANR	2514941	Symbol	true		2514708						
ANR	2514942	Symbol	quit		2514708						
ANR	2514943	Symbol	state		2514708						
ANR	2514944	Symbol	parameters		2514708						
ANR	2514945	Symbol	command		2514708						
ANR	2514946	Function	handle_let	666:0:18474:19041							
ANR	2514947	FunctionDef	"handle_let (string & line , State & state , Parameters & parameters)"		2514946	0					
ANR	2514948	CompoundStatement		670:0:18566:19041	2514946	0					
ANR	2514949	IdentifierDeclStatement	string variable_name ;	671:4:18572:18595	2514946	0	True				
ANR	2514950	IdentifierDecl	variable_name		2514946	0					
ANR	2514951	IdentifierDeclType	string		2514946	0					
ANR	2514952	Identifier	variable_name		2514946	1					
ANR	2514953	IdentifierDeclStatement	ExprTree * tree ;	672:4:18601:18616	2514946	1	True				
ANR	2514954	IdentifierDecl	* tree		2514946	0					
ANR	2514955	IdentifierDeclType	ExprTree *		2514946	0					
ANR	2514956	Identifier	tree		2514946	1					
ANR	2514957	IdentifierDeclStatement	Variable * variable ;	673:4:18622:18641	2514946	2	True				
ANR	2514958	IdentifierDecl	* variable		2514946	0					
ANR	2514959	IdentifierDeclType	Variable *		2514946	0					
ANR	2514960	Identifier	variable		2514946	1					
ANR	2514961	IfStatement	"if ( get_variable_name ( line , true , variable_name , state , parameters ) )"		2514946	3					
ANR	2514962	Condition	"get_variable_name ( line , true , variable_name , state , parameters )"	675:8:18652:18714	2514946	0	True				
ANR	2514963	CallExpression	"get_variable_name ( line , true , variable_name , state , parameters )"		2514946	0					
ANR	2514964	Callee	get_variable_name		2514946	0					
ANR	2514965	Identifier	get_variable_name		2514946	0					
ANR	2514966	ArgumentList	line		2514946	1					
ANR	2514967	Argument	line		2514946	0					
ANR	2514968	Identifier	line		2514946	0					
ANR	2514969	Argument	true		2514946	1					
ANR	2514970	Identifier	true		2514946	0					
ANR	2514971	Argument	variable_name		2514946	2					
ANR	2514972	Identifier	variable_name		2514946	0					
ANR	2514973	Argument	state		2514946	3					
ANR	2514974	Identifier	state		2514946	0					
ANR	2514975	Argument	parameters		2514946	4					
ANR	2514976	Identifier	parameters		2514946	0					
ANR	2514977	CompoundStatement		6:73:150:150	2514946	1					
ANR	2514978	ExpressionStatement	"tree = get_expr ( line , state , parameters )"	676:8:18727:18767	2514946	0	True				
ANR	2514979	AssignmentExpression	"tree = get_expr ( line , state , parameters )"		2514946	0		=			
ANR	2514980	Identifier	tree		2514946	0					
ANR	2514981	CallExpression	"get_expr ( line , state , parameters )"		2514946	1					
ANR	2514982	Callee	get_expr		2514946	0					
ANR	2514983	Identifier	get_expr		2514946	0					
ANR	2514984	ArgumentList	line		2514946	1					
ANR	2514985	Argument	line		2514946	0					
ANR	2514986	Identifier	line		2514946	0					
ANR	2514987	Argument	state		2514946	1					
ANR	2514988	Identifier	state		2514946	0					
ANR	2514989	Argument	parameters		2514946	2					
ANR	2514990	Identifier	parameters		2514946	0					
ANR	2514991	IfStatement	if ( tree != NULL )		2514946	1					
ANR	2514992	Condition	tree != NULL	677:12:18781:18792	2514946	0	True				
ANR	2514993	EqualityExpression	tree != NULL		2514946	0		!=			
ANR	2514994	Identifier	tree		2514946	0					
ANR	2514995	Identifier	NULL		2514946	1					
ANR	2514996	CompoundStatement		8:26:228:228	2514946	1					
ANR	2514997	ExpressionStatement	"variable = new Variable ( variable_name , tree )"	678:12:18809:18853	2514946	0	True				
ANR	2514998	AssignmentExpression	"variable = new Variable ( variable_name , tree )"		2514946	0		=			
ANR	2514999	Identifier	variable		2514946	0					
ANR	2515000	Expression	"variable_name , tree"		2514946	1					
ANR	2515001	Identifier	variable_name		2514946	0					
ANR	2515002	Identifier	tree		2514946	1					
ANR	2515003	ExpressionStatement	variables [ variable_name ] = variable	679:12:18867:18902	2514946	1	True				
ANR	2515004	AssignmentExpression	variables [ variable_name ] = variable		2514946	0		=			
ANR	2515005	ArrayIndexing	variables [ variable_name ]		2514946	0					
ANR	2515006	Identifier	variables		2514946	0					
ANR	2515007	Identifier	variable_name		2514946	1					
ANR	2515008	Identifier	variable		2514946	1					
ANR	2515009	IfStatement	if ( parameters . interactive )		2514946	2					
ANR	2515010	Condition	parameters . interactive	680:16:18920:18941	2514946	0	True				
ANR	2515011	MemberAccess	parameters . interactive		2514946	0					
ANR	2515012	Identifier	parameters		2514946	0					
ANR	2515013	Identifier	interactive		2514946	1					
ANR	2515014	CompoundStatement		11:40:377:377	2514946	1					
ANR	2515015	ExpressionStatement	"print_expr ( tree , state , parameters )"	681:16:18962:18997	2514946	0	True				
ANR	2515016	CallExpression	"print_expr ( tree , state , parameters )"		2514946	0					
ANR	2515017	Callee	print_expr		2514946	0					
ANR	2515018	Identifier	print_expr		2514946	0					
ANR	2515019	ArgumentList	tree		2514946	1					
ANR	2515020	Argument	tree		2514946	0					
ANR	2515021	Identifier	tree		2514946	0					
ANR	2515022	Argument	state		2514946	1					
ANR	2515023	Identifier	state		2514946	0					
ANR	2515024	Argument	parameters		2514946	2					
ANR	2515025	Identifier	parameters		2514946	0					
ANR	2515026	ReturnStatement	return ;	685:4:19033:19039	2514946	4	True				
ANR	2515027	ReturnType	void		2514946	1					
ANR	2515028	Identifier	handle_let		2514946	2					
ANR	2515029	ParameterList	"string & line , State & state , Parameters & parameters"		2514946	3					
ANR	2515030	Parameter	string & line	667:4:18495:18510	2514946	0	True				
ANR	2515031	ParameterType	string &		2514946	0					
ANR	2515032	Identifier	line		2514946	1					
ANR	2515033	Parameter	State & state	668:4:18518:18534	2514946	1	True				
ANR	2515034	ParameterType	State &		2514946	0					
ANR	2515035	Identifier	state		2514946	1					
ANR	2515036	Parameter	Parameters & parameters	669:4:18542:18563	2514946	2	True				
ANR	2515037	ParameterType	Parameters &		2514946	0					
ANR	2515038	Identifier	parameters		2514946	1					
ANR	2515039	CFGEntryNode	ENTRY		2514946		True				
ANR	2515040	CFGExitNode	EXIT		2514946		True				
ANR	2515041	Symbol	variables		2514946						
ANR	2515042	Symbol	NULL		2514946						
ANR	2515043	Symbol	line		2514946						
ANR	2515044	Symbol	tree		2514946						
ANR	2515045	Symbol	* variables		2514946						
ANR	2515046	Symbol	get_variable_name		2514946						
ANR	2515047	Symbol	get_expr		2514946						
ANR	2515048	Symbol	* variable_name		2514946						
ANR	2515049	Symbol	variable		2514946						
ANR	2515050	Symbol	true		2514946						
ANR	2515051	Symbol	state		2514946						
ANR	2515052	Symbol	variable_name		2514946						
ANR	2515053	Symbol	parameters		2514946						
ANR	2515054	Symbol	parameters . interactive		2514946						
ANR	2515055	Function	handle_eval	694:0:19232:19998							
ANR	2515056	FunctionDef	"handle_eval (string & line , State & state , Parameters & parameters)"		2515055	0					
ANR	2515057	CompoundStatement		698:0:19325:19998	2515055	0					
ANR	2515058	IdentifierDeclStatement	string variable_name ;	699:4:19331:19354	2515055	0	True				
ANR	2515059	IdentifierDecl	variable_name		2515055	0					
ANR	2515060	IdentifierDeclType	string		2515055	0					
ANR	2515061	Identifier	variable_name		2515055	1					
ANR	2515062	IdentifierDeclStatement	ExprTree * tree ;	700:4:19360:19375	2515055	1	True				
ANR	2515063	IdentifierDecl	* tree		2515055	0					
ANR	2515064	IdentifierDeclType	ExprTree *		2515055	0					
ANR	2515065	Identifier	tree		2515055	1					
ANR	2515066	IdentifierDeclStatement	Variable * variable ;	701:4:19381:19400	2515055	2	True				
ANR	2515067	IdentifierDecl	* variable		2515055	0					
ANR	2515068	IdentifierDeclType	Variable *		2515055	0					
ANR	2515069	Identifier	variable		2515055	1					
ANR	2515070	IfStatement	"if ( get_variable_name ( line , true , variable_name , state , parameters ) )"		2515055	3					
ANR	2515071	Condition	"get_variable_name ( line , true , variable_name , state , parameters )"	703:8:19411:19473	2515055	0	True				
ANR	2515072	CallExpression	"get_variable_name ( line , true , variable_name , state , parameters )"		2515055	0					
ANR	2515073	Callee	get_variable_name		2515055	0					
ANR	2515074	Identifier	get_variable_name		2515055	0					
ANR	2515075	ArgumentList	line		2515055	1					
ANR	2515076	Argument	line		2515055	0					
ANR	2515077	Identifier	line		2515055	0					
ANR	2515078	Argument	true		2515055	1					
ANR	2515079	Identifier	true		2515055	0					
ANR	2515080	Argument	variable_name		2515055	2					
ANR	2515081	Identifier	variable_name		2515055	0					
ANR	2515082	Argument	state		2515055	3					
ANR	2515083	Identifier	state		2515055	0					
ANR	2515084	Argument	parameters		2515055	4					
ANR	2515085	Identifier	parameters		2515055	0					
ANR	2515086	CompoundStatement		6:73:150:150	2515055	1					
ANR	2515087	ExpressionStatement	"tree = get_expr ( line , state , parameters )"	704:8:19486:19526	2515055	0	True				
ANR	2515088	AssignmentExpression	"tree = get_expr ( line , state , parameters )"		2515055	0		=			
ANR	2515089	Identifier	tree		2515055	0					
ANR	2515090	CallExpression	"get_expr ( line , state , parameters )"		2515055	1					
ANR	2515091	Callee	get_expr		2515055	0					
ANR	2515092	Identifier	get_expr		2515055	0					
ANR	2515093	ArgumentList	line		2515055	1					
ANR	2515094	Argument	line		2515055	0					
ANR	2515095	Identifier	line		2515055	0					
ANR	2515096	Argument	state		2515055	1					
ANR	2515097	Identifier	state		2515055	0					
ANR	2515098	Argument	parameters		2515055	2					
ANR	2515099	Identifier	parameters		2515055	0					
ANR	2515100	IfStatement	if ( tree != NULL )		2515055	1					
ANR	2515101	Condition	tree != NULL	705:12:19540:19551	2515055	0	True				
ANR	2515102	EqualityExpression	tree != NULL		2515055	0		!=			
ANR	2515103	Identifier	tree		2515055	0					
ANR	2515104	Identifier	NULL		2515055	1					
ANR	2515105	CompoundStatement		9:12:242:253	2515055	1					
ANR	2515106	IdentifierDeclStatement	Value value ;	706:12:19568:19579	2515055	0	True				
ANR	2515107	IdentifierDecl	value		2515055	0					
ANR	2515108	IdentifierDeclType	Value		2515055	0					
ANR	2515109	Identifier	value		2515055	1					
ANR	2515110	IfStatement	"if ( ! evaluate_expr ( tree , value , parameters ) )"		2515055	1					
ANR	2515111	Condition	"! evaluate_expr ( tree , value , parameters )"	707:16:19597:19635	2515055	0	True				
ANR	2515112	UnaryOperationExpression	"! evaluate_expr ( tree , value , parameters )"		2515055	0					
ANR	2515113	UnaryOperator	!		2515055	0					
ANR	2515114	CallExpression	"evaluate_expr ( tree , value , parameters )"		2515055	1					
ANR	2515115	Callee	evaluate_expr		2515055	0					
ANR	2515116	Identifier	evaluate_expr		2515055	0					
ANR	2515117	ArgumentList	tree		2515055	1					
ANR	2515118	Argument	tree		2515055	0					
ANR	2515119	Identifier	tree		2515055	0					
ANR	2515120	Argument	value		2515055	1					
ANR	2515121	Identifier	value		2515055	0					
ANR	2515122	Argument	parameters		2515055	2					
ANR	2515123	Identifier	parameters		2515055	0					
ANR	2515124	CompoundStatement		10:57:312:312	2515055	1					
ANR	2515125	ExpressionStatement	"print_error_message ( ""Couldn't evaluate rvalue"" , state )"	708:16:19656:19710	2515055	0	True				
ANR	2515126	CallExpression	"print_error_message ( ""Couldn't evaluate rvalue"" , state )"		2515055	0					
ANR	2515127	Callee	print_error_message		2515055	0					
ANR	2515128	Identifier	print_error_message		2515055	0					
ANR	2515129	ArgumentList	"""Couldn't evaluate rvalue"""		2515055	1					
ANR	2515130	Argument	"""Couldn't evaluate rvalue"""		2515055	0					
ANR	2515131	PrimaryExpression	"""Couldn't evaluate rvalue"""		2515055	0					
ANR	2515132	Argument	state		2515055	1					
ANR	2515133	Identifier	state		2515055	0					
ANR	2515134	ElseStatement	else		2515055	0					
ANR	2515135	CompoundStatement		12:19:405:405	2515055	0					
ANR	2515136	ExpressionStatement	"variable = new Variable ( variable_name , value )"	710:16:19749:19794	2515055	0	True				
ANR	2515137	AssignmentExpression	"variable = new Variable ( variable_name , value )"		2515055	0		=			
ANR	2515138	Identifier	variable		2515055	0					
ANR	2515139	Expression	"variable_name , value"		2515055	1					
ANR	2515140	Identifier	variable_name		2515055	0					
ANR	2515141	Identifier	value		2515055	1					
ANR	2515142	ExpressionStatement	variables [ variable_name ] = variable	711:16:19812:19847	2515055	1	True				
ANR	2515143	AssignmentExpression	variables [ variable_name ] = variable		2515055	0		=			
ANR	2515144	ArrayIndexing	variables [ variable_name ]		2515055	0					
ANR	2515145	Identifier	variables		2515055	0					
ANR	2515146	Identifier	variable_name		2515055	1					
ANR	2515147	Identifier	variable		2515055	1					
ANR	2515148	IfStatement	if ( parameters . interactive )		2515055	2					
ANR	2515149	Condition	parameters . interactive	712:20:19869:19890	2515055	0	True				
ANR	2515150	MemberAccess	parameters . interactive		2515055	0					
ANR	2515151	Identifier	parameters		2515055	0					
ANR	2515152	Identifier	interactive		2515055	1					
ANR	2515153	CompoundStatement		15:44:567:567	2515055	1					
ANR	2515154	ExpressionStatement	cout << value << endl	713:20:19915:19936	2515055	0	True				
ANR	2515155	ShiftExpression	cout << value << endl		2515055	0		<<			
ANR	2515156	Identifier	cout		2515055	0					
ANR	2515157	ShiftExpression	value << endl		2515055	1		<<			
ANR	2515158	Identifier	value		2515055	0					
ANR	2515159	Identifier	endl		2515055	1					
ANR	2515160	ReturnStatement	return ;	718:4:19990:19996	2515055	4	True				
ANR	2515161	ReturnType	void		2515055	1					
ANR	2515162	Identifier	handle_eval		2515055	2					
ANR	2515163	ParameterList	"string & line , State & state , Parameters & parameters"		2515055	3					
ANR	2515164	Parameter	string & line	695:4:19254:19269	2515055	0	True				
ANR	2515165	ParameterType	string &		2515055	0					
ANR	2515166	Identifier	line		2515055	1					
ANR	2515167	Parameter	State & state	696:4:19277:19293	2515055	1	True				
ANR	2515168	ParameterType	State &		2515055	0					
ANR	2515169	Identifier	state		2515055	1					
ANR	2515170	Parameter	Parameters & parameters	697:4:19301:19322	2515055	2	True				
ANR	2515171	ParameterType	Parameters &		2515055	0					
ANR	2515172	Identifier	parameters		2515055	1					
ANR	2515173	CFGEntryNode	ENTRY		2515055		True				
ANR	2515174	CFGExitNode	EXIT		2515055		True				
ANR	2515175	Symbol	variables		2515055						
ANR	2515176	Symbol	NULL		2515055						
ANR	2515177	Symbol	line		2515055						
ANR	2515178	Symbol	tree		2515055						
ANR	2515179	Symbol	* variables		2515055						
ANR	2515180	Symbol	get_variable_name		2515055						
ANR	2515181	Symbol	get_expr		2515055						
ANR	2515182	Symbol	* variable_name		2515055						
ANR	2515183	Symbol	variable		2515055						
ANR	2515184	Symbol	true		2515055						
ANR	2515185	Symbol	state		2515055						
ANR	2515186	Symbol	variable_name		2515055						
ANR	2515187	Symbol	parameters		2515055						
ANR	2515188	Symbol	value		2515055						
ANR	2515189	Symbol	evaluate_expr		2515055						
ANR	2515190	Symbol	parameters . interactive		2515055						
ANR	2515191	Function	handle_print	727:0:20190:20432							
ANR	2515192	FunctionDef	"handle_print (string & line , State & state , Parameters & parameters)"		2515191	0					
ANR	2515193	CompoundStatement		731:0:20284:20432	2515191	0					
ANR	2515194	IdentifierDeclStatement	ExprTree * tree ;	732:4:20290:20304	2515191	0	True				
ANR	2515195	IdentifierDecl	* tree		2515191	0					
ANR	2515196	IdentifierDeclType	ExprTree *		2515191	0					
ANR	2515197	Identifier	tree		2515191	1					
ANR	2515198	ExpressionStatement	"tree = get_expr ( line , state , parameters )"	734:4:20311:20351	2515191	1	True				
ANR	2515199	AssignmentExpression	"tree = get_expr ( line , state , parameters )"		2515191	0		=			
ANR	2515200	Identifier	tree		2515191	0					
ANR	2515201	CallExpression	"get_expr ( line , state , parameters )"		2515191	1					
ANR	2515202	Callee	get_expr		2515191	0					
ANR	2515203	Identifier	get_expr		2515191	0					
ANR	2515204	ArgumentList	line		2515191	1					
ANR	2515205	Argument	line		2515191	0					
ANR	2515206	Identifier	line		2515191	0					
ANR	2515207	Argument	state		2515191	1					
ANR	2515208	Identifier	state		2515191	0					
ANR	2515209	Argument	parameters		2515191	2					
ANR	2515210	Identifier	parameters		2515191	0					
ANR	2515211	IfStatement	if ( tree )		2515191	2					
ANR	2515212	Condition	tree	735:8:20361:20364	2515191	0	True				
ANR	2515213	Identifier	tree		2515191	0					
ANR	2515214	CompoundStatement		5:14:82:82	2515191	1					
ANR	2515215	ExpressionStatement	"print_expr ( tree , state , parameters )"	736:8:20377:20412	2515191	0	True				
ANR	2515216	CallExpression	"print_expr ( tree , state , parameters )"		2515191	0					
ANR	2515217	Callee	print_expr		2515191	0					
ANR	2515218	Identifier	print_expr		2515191	0					
ANR	2515219	ArgumentList	tree		2515191	1					
ANR	2515220	Argument	tree		2515191	0					
ANR	2515221	Identifier	tree		2515191	0					
ANR	2515222	Argument	state		2515191	1					
ANR	2515223	Identifier	state		2515191	0					
ANR	2515224	Argument	parameters		2515191	2					
ANR	2515225	Identifier	parameters		2515191	0					
ANR	2515226	ReturnStatement	return ;	738:4:20424:20430	2515191	3	True				
ANR	2515227	ReturnType	void		2515191	1					
ANR	2515228	Identifier	handle_print		2515191	2					
ANR	2515229	ParameterList	"string & line , State & state , Parameters & parameters"		2515191	3					
ANR	2515230	Parameter	string & line	728:4:20213:20228	2515191	0	True				
ANR	2515231	ParameterType	string &		2515191	0					
ANR	2515232	Identifier	line		2515191	1					
ANR	2515233	Parameter	State & state	729:4:20236:20252	2515191	1	True				
ANR	2515234	ParameterType	State &		2515191	0					
ANR	2515235	Identifier	state		2515191	1					
ANR	2515236	Parameter	Parameters & parameters	730:4:20260:20281	2515191	2	True				
ANR	2515237	ParameterType	Parameters &		2515191	0					
ANR	2515238	Identifier	parameters		2515191	1					
ANR	2515239	CFGEntryNode	ENTRY		2515191		True				
ANR	2515240	CFGExitNode	EXIT		2515191		True				
ANR	2515241	Symbol	get_expr		2515191						
ANR	2515242	Symbol	line		2515191						
ANR	2515243	Symbol	tree		2515191						
ANR	2515244	Symbol	state		2515191						
ANR	2515245	Symbol	parameters		2515191						
ANR	2515246	Function	handle_same	747:0:20623:21902							
ANR	2515247	FunctionDef	"handle_same (string & line , State & state , Parameters & parameters)"		2515246	0					
ANR	2515248	CompoundStatement		751:0:20716:21902	2515246	0					
ANR	2515249	IdentifierDeclStatement	"ExprTree * tree , * tree2 ;"	752:4:20722:20745	2515246	0	True				
ANR	2515250	IdentifierDecl	* tree		2515246	0					
ANR	2515251	IdentifierDeclType	ExprTree *		2515246	0					
ANR	2515252	Identifier	tree		2515246	1					
ANR	2515253	IdentifierDecl	* tree2		2515246	1					
ANR	2515254	IdentifierDeclType	ExprTree *		2515246	0					
ANR	2515255	Identifier	tree2		2515246	1					
ANR	2515256	IdentifierDeclStatement	"Value value1 , value2 ;"	753:4:20751:20775	2515246	1	True				
ANR	2515257	IdentifierDecl	value1		2515246	0					
ANR	2515258	IdentifierDeclType	Value		2515246	0					
ANR	2515259	Identifier	value1		2515246	1					
ANR	2515260	IdentifierDecl	value2		2515246	1					
ANR	2515261	IdentifierDeclType	Value		2515246	0					
ANR	2515262	Identifier	value2		2515246	1					
ANR	2515263	ExpressionStatement	"get_two_exprs ( line , tree , tree2 , state , parameters )"	755:4:20782:20833	2515246	2	True				
ANR	2515264	CallExpression	"get_two_exprs ( line , tree , tree2 , state , parameters )"		2515246	0					
ANR	2515265	Callee	get_two_exprs		2515246	0					
ANR	2515266	Identifier	get_two_exprs		2515246	0					
ANR	2515267	ArgumentList	line		2515246	1					
ANR	2515268	Argument	line		2515246	0					
ANR	2515269	Identifier	line		2515246	0					
ANR	2515270	Argument	tree		2515246	1					
ANR	2515271	Identifier	tree		2515246	0					
ANR	2515272	Argument	tree2		2515246	2					
ANR	2515273	Identifier	tree2		2515246	0					
ANR	2515274	Argument	state		2515246	3					
ANR	2515275	Identifier	state		2515246	0					
ANR	2515276	Argument	parameters		2515246	4					
ANR	2515277	Identifier	parameters		2515246	0					
ANR	2515278	IfStatement	if ( tree != NULL || tree2 != NULL )		2515246	3					
ANR	2515279	Condition	tree != NULL || tree2 != NULL	756:8:20843:20871	2515246	0	True				
ANR	2515280	OrExpression	tree != NULL || tree2 != NULL		2515246	0		||			
ANR	2515281	EqualityExpression	tree != NULL		2515246	0		!=			
ANR	2515282	Identifier	tree		2515246	0					
ANR	2515283	Identifier	NULL		2515246	1					
ANR	2515284	EqualityExpression	tree2 != NULL		2515246	1		!=			
ANR	2515285	Identifier	tree2		2515246	0					
ANR	2515286	Identifier	NULL		2515246	1					
ANR	2515287	CompoundStatement		6:39:157:157	2515246	1					
ANR	2515288	IfStatement	if ( parameters . debug )		2515246	0					
ANR	2515289	Condition	parameters . debug	757:12:20888:20903	2515246	0	True				
ANR	2515290	MemberAccess	parameters . debug		2515246	0					
ANR	2515291	Identifier	parameters		2515246	0					
ANR	2515292	Identifier	debug		2515246	1					
ANR	2515293	CompoundStatement		7:30:189:189	2515246	1					
ANR	2515294	ExpressionStatement	"cout << ""Sameeval has two trees: \\n"""	758:12:20920:20956	2515246	0	True				
ANR	2515295	ShiftExpression	"cout << ""Sameeval has two trees: \\n"""		2515246	0		<<			
ANR	2515296	Identifier	cout		2515246	0					
ANR	2515297	PrimaryExpression	"""Sameeval has two trees: \\n"""		2515246	1					
ANR	2515298	ExpressionStatement	"cout << "" """	759:12:20970:20981	2515246	1	True				
ANR	2515299	ShiftExpression	"cout << "" """		2515246	0		<<			
ANR	2515300	Identifier	cout		2515246	0					
ANR	2515301	PrimaryExpression	""" """		2515246	1					
ANR	2515302	ExpressionStatement	"print_expr ( tree , state , parameters )"	760:12:20996:21031	2515246	2	True				
ANR	2515303	CallExpression	"print_expr ( tree , state , parameters )"		2515246	0					
ANR	2515304	Callee	print_expr		2515246	0					
ANR	2515305	Identifier	print_expr		2515246	0					
ANR	2515306	ArgumentList	tree		2515246	1					
ANR	2515307	Argument	tree		2515246	0					
ANR	2515308	Identifier	tree		2515246	0					
ANR	2515309	Argument	state		2515246	1					
ANR	2515310	Identifier	state		2515246	0					
ANR	2515311	Argument	parameters		2515246	2					
ANR	2515312	Identifier	parameters		2515246	0					
ANR	2515313	ExpressionStatement	cout << endl	761:12:21046:21058	2515246	3	True				
ANR	2515314	ShiftExpression	cout << endl		2515246	0		<<			
ANR	2515315	Identifier	cout		2515246	0					
ANR	2515316	Identifier	endl		2515246	1					
ANR	2515317	ExpressionStatement	"cout << "" """	762:12:21072:21083	2515246	4	True				
ANR	2515318	ShiftExpression	"cout << "" """		2515246	0		<<			
ANR	2515319	Identifier	cout		2515246	0					
ANR	2515320	PrimaryExpression	""" """		2515246	1					
ANR	2515321	ExpressionStatement	"print_expr ( tree2 , state , parameters )"	763:12:21098:21134	2515246	5	True				
ANR	2515322	CallExpression	"print_expr ( tree2 , state , parameters )"		2515246	0					
ANR	2515323	Callee	print_expr		2515246	0					
ANR	2515324	Identifier	print_expr		2515246	0					
ANR	2515325	ArgumentList	tree2		2515246	1					
ANR	2515326	Argument	tree2		2515246	0					
ANR	2515327	Identifier	tree2		2515246	0					
ANR	2515328	Argument	state		2515246	1					
ANR	2515329	Identifier	state		2515246	0					
ANR	2515330	Argument	parameters		2515246	2					
ANR	2515331	Identifier	parameters		2515246	0					
ANR	2515332	ExpressionStatement	cout << endl	764:12:21148:21160	2515246	6	True				
ANR	2515333	ShiftExpression	cout << endl		2515246	0		<<			
ANR	2515334	Identifier	cout		2515246	0					
ANR	2515335	Identifier	endl		2515246	1					
ANR	2515336	IfStatement	"if ( ! evaluate_expr ( tree , value1 , parameters ) )"		2515246	1					
ANR	2515337	Condition	"! evaluate_expr ( tree , value1 , parameters )"	766:12:21184:21223	2515246	0	True				
ANR	2515338	UnaryOperationExpression	"! evaluate_expr ( tree , value1 , parameters )"		2515246	0					
ANR	2515339	UnaryOperator	!		2515246	0					
ANR	2515340	CallExpression	"evaluate_expr ( tree , value1 , parameters )"		2515246	1					
ANR	2515341	Callee	evaluate_expr		2515246	0					
ANR	2515342	Identifier	evaluate_expr		2515246	0					
ANR	2515343	ArgumentList	tree		2515246	1					
ANR	2515344	Argument	tree		2515246	0					
ANR	2515345	Identifier	tree		2515246	0					
ANR	2515346	Argument	value1		2515246	1					
ANR	2515347	Identifier	value1		2515246	0					
ANR	2515348	Argument	parameters		2515246	2					
ANR	2515349	Identifier	parameters		2515246	0					
ANR	2515350	CompoundStatement		16:54:509:509	2515246	1					
ANR	2515351	ExpressionStatement	"print_error_message ( ""Couldn't evaluate first expression.\\n"" , state )"	767:12:21240:21307	2515246	0	True				
ANR	2515352	CallExpression	"print_error_message ( ""Couldn't evaluate first expression.\\n"" , state )"		2515246	0					
ANR	2515353	Callee	print_error_message		2515246	0					
ANR	2515354	Identifier	print_error_message		2515246	0					
ANR	2515355	ArgumentList	"""Couldn't evaluate first expression.\\n"""		2515246	1					
ANR	2515356	Argument	"""Couldn't evaluate first expression.\\n"""		2515246	0					
ANR	2515357	PrimaryExpression	"""Couldn't evaluate first expression.\\n"""		2515246	0					
ANR	2515358	Argument	state		2515246	1					
ANR	2515359	Identifier	state		2515246	0					
ANR	2515360	ElseStatement	else		2515246	0					
ANR	2515361	IfStatement	"if ( ! evaluate_expr ( tree2 , value2 , parameters ) )"		2515246	0					
ANR	2515362	Condition	"! evaluate_expr ( tree2 , value2 , parameters )"	768:19:21328:21368	2515246	0	True				
ANR	2515363	UnaryOperationExpression	"! evaluate_expr ( tree2 , value2 , parameters )"		2515246	0					
ANR	2515364	UnaryOperator	!		2515246	0					
ANR	2515365	CallExpression	"evaluate_expr ( tree2 , value2 , parameters )"		2515246	1					
ANR	2515366	Callee	evaluate_expr		2515246	0					
ANR	2515367	Identifier	evaluate_expr		2515246	0					
ANR	2515368	ArgumentList	tree2		2515246	1					
ANR	2515369	Argument	tree2		2515246	0					
ANR	2515370	Identifier	tree2		2515246	0					
ANR	2515371	Argument	value2		2515246	1					
ANR	2515372	Identifier	value2		2515246	0					
ANR	2515373	Argument	parameters		2515246	2					
ANR	2515374	Identifier	parameters		2515246	0					
ANR	2515375	CompoundStatement		18:62:654:654	2515246	1					
ANR	2515376	ExpressionStatement	"print_error_message ( ""Couldn't evaluate second expressions.\\n"" , state )"	769:12:21385:21454	2515246	0	True				
ANR	2515377	CallExpression	"print_error_message ( ""Couldn't evaluate second expressions.\\n"" , state )"		2515246	0					
ANR	2515378	Callee	print_error_message		2515246	0					
ANR	2515379	Identifier	print_error_message		2515246	0					
ANR	2515380	ArgumentList	"""Couldn't evaluate second expressions.\\n"""		2515246	1					
ANR	2515381	Argument	"""Couldn't evaluate second expressions.\\n"""		2515246	0					
ANR	2515382	PrimaryExpression	"""Couldn't evaluate second expressions.\\n"""		2515246	0					
ANR	2515383	Argument	state		2515246	1					
ANR	2515384	Identifier	state		2515246	0					
ANR	2515385	ElseStatement	else		2515246	0					
ANR	2515386	IfStatement	if ( ! value1 . SameAs ( value2 ) )		2515246	0					
ANR	2515387	Condition	! value1 . SameAs ( value2 )	770:19:21475:21496	2515246	0	True				
ANR	2515388	UnaryOperationExpression	! value1 . SameAs ( value2 )		2515246	0					
ANR	2515389	UnaryOperator	!		2515246	0					
ANR	2515390	CallExpression	value1 . SameAs ( value2 )		2515246	1					
ANR	2515391	Callee	value1 . SameAs		2515246	0					
ANR	2515392	MemberAccess	value1 . SameAs		2515246	0					
ANR	2515393	Identifier	value1		2515246	0					
ANR	2515394	Identifier	SameAs		2515246	1					
ANR	2515395	ArgumentList	value2		2515246	1					
ANR	2515396	Argument	value2		2515246	0					
ANR	2515397	Identifier	value2		2515246	0					
ANR	2515398	CompoundStatement		20:43:782:782	2515246	1					
ANR	2515399	IfStatement	if ( parameters . debug )		2515246	0					
ANR	2515400	Condition	parameters . debug	771:16:21517:21532	2515246	0	True				
ANR	2515401	MemberAccess	parameters . debug		2515246	0					
ANR	2515402	Identifier	parameters		2515246	0					
ANR	2515403	Identifier	debug		2515246	1					
ANR	2515404	CompoundStatement		21:34:818:818	2515246	1					
ANR	2515405	ExpressionStatement	"cout << ""They evaluated to: \\n"""	772:16:21553:21584	2515246	0	True				
ANR	2515406	ShiftExpression	"cout << ""They evaluated to: \\n"""		2515246	0		<<			
ANR	2515407	Identifier	cout		2515246	0					
ANR	2515408	PrimaryExpression	"""They evaluated to: \\n"""		2515246	1					
ANR	2515409	ExpressionStatement	"cout << "" "" << value1 << endl"	773:16:21602:21631	2515246	1	True				
ANR	2515410	ShiftExpression	"cout << "" "" << value1 << endl"		2515246	0		<<			
ANR	2515411	Identifier	cout		2515246	0					
ANR	2515412	ShiftExpression	""" "" << value1 << endl"		2515246	1		<<			
ANR	2515413	PrimaryExpression	""" """		2515246	0					
ANR	2515414	ShiftExpression	value1 << endl		2515246	1		<<			
ANR	2515415	Identifier	value1		2515246	0					
ANR	2515416	Identifier	endl		2515246	1					
ANR	2515417	ExpressionStatement	"cout << "" "" << value2 << endl"	774:16:21649:21678	2515246	2	True				
ANR	2515418	ShiftExpression	"cout << "" "" << value2 << endl"		2515246	0		<<			
ANR	2515419	Identifier	cout		2515246	0					
ANR	2515420	ShiftExpression	""" "" << value2 << endl"		2515246	1		<<			
ANR	2515421	PrimaryExpression	""" """		2515246	0					
ANR	2515422	ShiftExpression	value2 << endl		2515246	1		<<			
ANR	2515423	Identifier	value2		2515246	0					
ANR	2515424	Identifier	endl		2515246	1					
ANR	2515425	ExpressionStatement	"print_error_message ( ""the expressions are different."" , state )"	776:12:21706:21766	2515246	1	True				
ANR	2515426	CallExpression	"print_error_message ( ""the expressions are different."" , state )"		2515246	0					
ANR	2515427	Callee	print_error_message		2515246	0					
ANR	2515428	Identifier	print_error_message		2515246	0					
ANR	2515429	ArgumentList	"""the expressions are different."""		2515246	1					
ANR	2515430	Argument	"""the expressions are different."""		2515246	0					
ANR	2515431	PrimaryExpression	"""the expressions are different."""		2515246	0					
ANR	2515432	Argument	state		2515246	1					
ANR	2515433	Identifier	state		2515246	0					
ANR	2515434	IfStatement	if ( tree != NULL )		2515246	4					
ANR	2515435	Condition	tree != NULL	780:8:21793:21804	2515246	0	True				
ANR	2515436	EqualityExpression	tree != NULL		2515246	0		!=			
ANR	2515437	Identifier	tree		2515246	0					
ANR	2515438	Identifier	NULL		2515246	1					
ANR	2515439	CompoundStatement		30:22:1090:1090	2515246	1					
ANR	2515440	Statement	delete	781:8:21817:21822	2515246	0	True				
ANR	2515441	ExpressionStatement	tree	781:15:21824:21828	2515246	1	True				
ANR	2515442	Identifier	tree		2515246	0					
ANR	2515443	IfStatement	if ( tree2 != NULL )		2515246	5					
ANR	2515444	Condition	tree2 != NULL	783:8:21845:21857	2515246	0	True				
ANR	2515445	EqualityExpression	tree2 != NULL		2515246	0		!=			
ANR	2515446	Identifier	tree2		2515246	0					
ANR	2515447	Identifier	NULL		2515246	1					
ANR	2515448	CompoundStatement		33:23:1143:1143	2515246	1					
ANR	2515449	Statement	delete	784:8:21870:21875	2515246	0	True				
ANR	2515450	ExpressionStatement	tree2	784:15:21877:21882	2515246	1	True				
ANR	2515451	Identifier	tree2		2515246	0					
ANR	2515452	ReturnStatement	return ;	786:4:21894:21900	2515246	6	True				
ANR	2515453	ReturnType	void		2515246	1					
ANR	2515454	Identifier	handle_same		2515246	2					
ANR	2515455	ParameterList	"string & line , State & state , Parameters & parameters"		2515246	3					
ANR	2515456	Parameter	string & line	748:4:20645:20660	2515246	0	True				
ANR	2515457	ParameterType	string &		2515246	0					
ANR	2515458	Identifier	line		2515246	1					
ANR	2515459	Parameter	State & state	749:4:20668:20684	2515246	1	True				
ANR	2515460	ParameterType	State &		2515246	0					
ANR	2515461	Identifier	state		2515246	1					
ANR	2515462	Parameter	Parameters & parameters	750:4:20692:20713	2515246	2	True				
ANR	2515463	ParameterType	Parameters &		2515246	0					
ANR	2515464	Identifier	parameters		2515246	1					
ANR	2515465	CFGEntryNode	ENTRY		2515246		True				
ANR	2515466	CFGExitNode	EXIT		2515246		True				
ANR	2515467	Symbol	NULL		2515246						
ANR	2515468	Symbol	value2		2515246						
ANR	2515469	Symbol	value1		2515246						
ANR	2515470	Symbol	line		2515246						
ANR	2515471	Symbol	tree		2515246						
ANR	2515472	Symbol	state		2515246						
ANR	2515473	Symbol	tree2		2515246						
ANR	2515474	Symbol	parameters		2515246						
ANR	2515475	Symbol	evaluate_expr		2515246						
ANR	2515476	Symbol	value1 . SameAs		2515246						
ANR	2515477	Symbol	parameters . debug		2515246						
ANR	2515478	Function	handle_sameq	795:0:22094:22560							
ANR	2515479	FunctionDef	"handle_sameq (string & line , State & state , Parameters & parameters)"		2515478	0					
ANR	2515480	CompoundStatement		799:0:22188:22560	2515478	0					
ANR	2515481	IdentifierDeclStatement	"ExprTree * tree , * tree2 ;"	800:4:22194:22217	2515478	0	True				
ANR	2515482	IdentifierDecl	* tree		2515478	0					
ANR	2515483	IdentifierDeclType	ExprTree *		2515478	0					
ANR	2515484	Identifier	tree		2515478	1					
ANR	2515485	IdentifierDecl	* tree2		2515478	1					
ANR	2515486	IdentifierDeclType	ExprTree *		2515478	0					
ANR	2515487	Identifier	tree2		2515478	1					
ANR	2515488	ExpressionStatement	"get_two_exprs ( line , tree , tree2 , state , parameters )"	802:4:22224:22275	2515478	1	True				
ANR	2515489	CallExpression	"get_two_exprs ( line , tree , tree2 , state , parameters )"		2515478	0					
ANR	2515490	Callee	get_two_exprs		2515478	0					
ANR	2515491	Identifier	get_two_exprs		2515478	0					
ANR	2515492	ArgumentList	line		2515478	1					
ANR	2515493	Argument	line		2515478	0					
ANR	2515494	Identifier	line		2515478	0					
ANR	2515495	Argument	tree		2515478	1					
ANR	2515496	Identifier	tree		2515478	0					
ANR	2515497	Argument	tree2		2515478	2					
ANR	2515498	Identifier	tree2		2515478	0					
ANR	2515499	Argument	state		2515478	3					
ANR	2515500	Identifier	state		2515478	0					
ANR	2515501	Argument	parameters		2515478	4					
ANR	2515502	Identifier	parameters		2515478	0					
ANR	2515503	IfStatement	if ( tree != NULL || tree2 != NULL )		2515478	2					
ANR	2515504	Condition	tree != NULL || tree2 != NULL	803:8:22285:22313	2515478	0	True				
ANR	2515505	OrExpression	tree != NULL || tree2 != NULL		2515478	0		||			
ANR	2515506	EqualityExpression	tree != NULL		2515478	0		!=			
ANR	2515507	Identifier	tree		2515478	0					
ANR	2515508	Identifier	NULL		2515478	1					
ANR	2515509	EqualityExpression	tree2 != NULL		2515478	1		!=			
ANR	2515510	Identifier	tree2		2515478	0					
ANR	2515511	Identifier	NULL		2515478	1					
ANR	2515512	CompoundStatement		5:39:127:127	2515478	1					
ANR	2515513	IfStatement	if ( ! tree -> SameAs ( tree2 ) )		2515478	0					
ANR	2515514	Condition	! tree -> SameAs ( tree2 )	804:12:22330:22349	2515478	0	True				
ANR	2515515	UnaryOperationExpression	! tree -> SameAs ( tree2 )		2515478	0					
ANR	2515516	UnaryOperator	!		2515478	0					
ANR	2515517	CallExpression	tree -> SameAs ( tree2 )		2515478	1					
ANR	2515518	Callee	tree -> SameAs		2515478	0					
ANR	2515519	PtrMemberAccess	tree -> SameAs		2515478	0					
ANR	2515520	Identifier	tree		2515478	0					
ANR	2515521	Identifier	SameAs		2515478	1					
ANR	2515522	ArgumentList	tree2		2515478	1					
ANR	2515523	Argument	tree2		2515478	0					
ANR	2515524	Identifier	tree2		2515478	0					
ANR	2515525	CompoundStatement		6:34:163:163	2515478	1					
ANR	2515526	ExpressionStatement	"print_error_message ( ""the expressions are different."" , state )"	805:12:22366:22426	2515478	0	True				
ANR	2515527	CallExpression	"print_error_message ( ""the expressions are different."" , state )"		2515478	0					
ANR	2515528	Callee	print_error_message		2515478	0					
ANR	2515529	Identifier	print_error_message		2515478	0					
ANR	2515530	ArgumentList	"""the expressions are different."""		2515478	1					
ANR	2515531	Argument	"""the expressions are different."""		2515478	0					
ANR	2515532	PrimaryExpression	"""the expressions are different."""		2515478	0					
ANR	2515533	Argument	state		2515478	1					
ANR	2515534	Identifier	state		2515478	0					
ANR	2515535	IfStatement	if ( tree != NULL )		2515478	3					
ANR	2515536	Condition	tree != NULL	808:8:22452:22463	2515478	0	True				
ANR	2515537	EqualityExpression	tree != NULL		2515478	0		!=			
ANR	2515538	Identifier	tree		2515478	0					
ANR	2515539	Identifier	NULL		2515478	1					
ANR	2515540	CompoundStatement		10:22:277:277	2515478	1					
ANR	2515541	Statement	delete	809:8:22476:22481	2515478	0	True				
ANR	2515542	ExpressionStatement	tree	809:15:22483:22487	2515478	1	True				
ANR	2515543	Identifier	tree		2515478	0					
ANR	2515544	IfStatement	if ( tree2 != NULL )		2515478	4					
ANR	2515545	Condition	tree2 != NULL	811:8:22503:22515	2515478	0	True				
ANR	2515546	EqualityExpression	tree2 != NULL		2515478	0		!=			
ANR	2515547	Identifier	tree2		2515478	0					
ANR	2515548	Identifier	NULL		2515478	1					
ANR	2515549	CompoundStatement		13:23:329:329	2515478	1					
ANR	2515550	Statement	delete	812:8:22528:22533	2515478	0	True				
ANR	2515551	ExpressionStatement	tree2	812:15:22535:22540	2515478	1	True				
ANR	2515552	Identifier	tree2		2515478	0					
ANR	2515553	ReturnStatement	return ;	814:4:22552:22558	2515478	5	True				
ANR	2515554	ReturnType	void		2515478	1					
ANR	2515555	Identifier	handle_sameq		2515478	2					
ANR	2515556	ParameterList	"string & line , State & state , Parameters & parameters"		2515478	3					
ANR	2515557	Parameter	string & line	796:4:22117:22132	2515478	0	True				
ANR	2515558	ParameterType	string &		2515478	0					
ANR	2515559	Identifier	line		2515478	1					
ANR	2515560	Parameter	State & state	797:4:22140:22156	2515478	1	True				
ANR	2515561	ParameterType	State &		2515478	0					
ANR	2515562	Identifier	state		2515478	1					
ANR	2515563	Parameter	Parameters & parameters	798:4:22164:22185	2515478	2	True				
ANR	2515564	ParameterType	Parameters &		2515478	0					
ANR	2515565	Identifier	parameters		2515478	1					
ANR	2515566	CFGEntryNode	ENTRY		2515478		True				
ANR	2515567	CFGExitNode	EXIT		2515478		True				
ANR	2515568	Symbol	* tree		2515478						
ANR	2515569	Symbol	NULL		2515478						
ANR	2515570	Symbol	line		2515478						
ANR	2515571	Symbol	tree		2515478						
ANR	2515572	Symbol	state		2515478						
ANR	2515573	Symbol	tree2		2515478						
ANR	2515574	Symbol	parameters		2515478						
ANR	2515575	Symbol	tree -> SameAs		2515478						
ANR	2515576	Function	handle_diff	823:0:22751:23541							
ANR	2515577	FunctionDef	"handle_diff (string & line , State & state , Parameters & parameters)"		2515576	0					
ANR	2515578	CompoundStatement		827:0:22844:23541	2515576	0					
ANR	2515579	IdentifierDeclStatement	"ExprTree * tree , * tree2 ;"	828:4:22850:22873	2515576	0	True				
ANR	2515580	IdentifierDecl	* tree		2515576	0					
ANR	2515581	IdentifierDeclType	ExprTree *		2515576	0					
ANR	2515582	Identifier	tree		2515576	1					
ANR	2515583	IdentifierDecl	* tree2		2515576	1					
ANR	2515584	IdentifierDeclType	ExprTree *		2515576	0					
ANR	2515585	Identifier	tree2		2515576	1					
ANR	2515586	IdentifierDeclStatement	"Value value1 , value2 ;"	829:4:22879:22903	2515576	1	True				
ANR	2515587	IdentifierDecl	value1		2515576	0					
ANR	2515588	IdentifierDeclType	Value		2515576	0					
ANR	2515589	Identifier	value1		2515576	1					
ANR	2515590	IdentifierDecl	value2		2515576	1					
ANR	2515591	IdentifierDeclType	Value		2515576	0					
ANR	2515592	Identifier	value2		2515576	1					
ANR	2515593	ExpressionStatement	"get_two_exprs ( line , tree , tree2 , state , parameters )"	831:4:22910:22961	2515576	2	True				
ANR	2515594	CallExpression	"get_two_exprs ( line , tree , tree2 , state , parameters )"		2515576	0					
ANR	2515595	Callee	get_two_exprs		2515576	0					
ANR	2515596	Identifier	get_two_exprs		2515576	0					
ANR	2515597	ArgumentList	line		2515576	1					
ANR	2515598	Argument	line		2515576	0					
ANR	2515599	Identifier	line		2515576	0					
ANR	2515600	Argument	tree		2515576	1					
ANR	2515601	Identifier	tree		2515576	0					
ANR	2515602	Argument	tree2		2515576	2					
ANR	2515603	Identifier	tree2		2515576	0					
ANR	2515604	Argument	state		2515576	3					
ANR	2515605	Identifier	state		2515576	0					
ANR	2515606	Argument	parameters		2515576	4					
ANR	2515607	Identifier	parameters		2515576	0					
ANR	2515608	IfStatement	if ( tree != NULL || tree2 != NULL )		2515576	3					
ANR	2515609	Condition	tree != NULL || tree2 != NULL	832:8:22971:22999	2515576	0	True				
ANR	2515610	OrExpression	tree != NULL || tree2 != NULL		2515576	0		||			
ANR	2515611	EqualityExpression	tree != NULL		2515576	0		!=			
ANR	2515612	Identifier	tree		2515576	0					
ANR	2515613	Identifier	NULL		2515576	1					
ANR	2515614	EqualityExpression	tree2 != NULL		2515576	1		!=			
ANR	2515615	Identifier	tree2		2515576	0					
ANR	2515616	Identifier	NULL		2515576	1					
ANR	2515617	CompoundStatement		6:39:157:157	2515576	1					
ANR	2515618	IfStatement	"if ( ! evaluate_expr ( tree , value1 , parameters ) )"		2515576	0					
ANR	2515619	Condition	"! evaluate_expr ( tree , value1 , parameters )"	833:12:23016:23055	2515576	0	True				
ANR	2515620	UnaryOperationExpression	"! evaluate_expr ( tree , value1 , parameters )"		2515576	0					
ANR	2515621	UnaryOperator	!		2515576	0					
ANR	2515622	CallExpression	"evaluate_expr ( tree , value1 , parameters )"		2515576	1					
ANR	2515623	Callee	evaluate_expr		2515576	0					
ANR	2515624	Identifier	evaluate_expr		2515576	0					
ANR	2515625	ArgumentList	tree		2515576	1					
ANR	2515626	Argument	tree		2515576	0					
ANR	2515627	Identifier	tree		2515576	0					
ANR	2515628	Argument	value1		2515576	1					
ANR	2515629	Identifier	value1		2515576	0					
ANR	2515630	Argument	parameters		2515576	2					
ANR	2515631	Identifier	parameters		2515576	0					
ANR	2515632	CompoundStatement		7:54:213:213	2515576	1					
ANR	2515633	ExpressionStatement	"print_error_message ( ""Couldn't evaluate first expression.\\n"" , state )"	834:12:23072:23139	2515576	0	True				
ANR	2515634	CallExpression	"print_error_message ( ""Couldn't evaluate first expression.\\n"" , state )"		2515576	0					
ANR	2515635	Callee	print_error_message		2515576	0					
ANR	2515636	Identifier	print_error_message		2515576	0					
ANR	2515637	ArgumentList	"""Couldn't evaluate first expression.\\n"""		2515576	1					
ANR	2515638	Argument	"""Couldn't evaluate first expression.\\n"""		2515576	0					
ANR	2515639	PrimaryExpression	"""Couldn't evaluate first expression.\\n"""		2515576	0					
ANR	2515640	Argument	state		2515576	1					
ANR	2515641	Identifier	state		2515576	0					
ANR	2515642	ElseStatement	else		2515576	0					
ANR	2515643	IfStatement	"if ( ! evaluate_expr ( tree2 , value2 , parameters ) )"		2515576	0					
ANR	2515644	Condition	"! evaluate_expr ( tree2 , value2 , parameters )"	835:19:23160:23200	2515576	0	True				
ANR	2515645	UnaryOperationExpression	"! evaluate_expr ( tree2 , value2 , parameters )"		2515576	0					
ANR	2515646	UnaryOperator	!		2515576	0					
ANR	2515647	CallExpression	"evaluate_expr ( tree2 , value2 , parameters )"		2515576	1					
ANR	2515648	Callee	evaluate_expr		2515576	0					
ANR	2515649	Identifier	evaluate_expr		2515576	0					
ANR	2515650	ArgumentList	tree2		2515576	1					
ANR	2515651	Argument	tree2		2515576	0					
ANR	2515652	Identifier	tree2		2515576	0					
ANR	2515653	Argument	value2		2515576	1					
ANR	2515654	Identifier	value2		2515576	0					
ANR	2515655	Argument	parameters		2515576	2					
ANR	2515656	Identifier	parameters		2515576	0					
ANR	2515657	CompoundStatement		9:62:358:358	2515576	1					
ANR	2515658	ExpressionStatement	"print_error_message ( ""Couldn't evaluate second expressions.\\n"" , state )"	836:12:23217:23286	2515576	0	True				
ANR	2515659	CallExpression	"print_error_message ( ""Couldn't evaluate second expressions.\\n"" , state )"		2515576	0					
ANR	2515660	Callee	print_error_message		2515576	0					
ANR	2515661	Identifier	print_error_message		2515576	0					
ANR	2515662	ArgumentList	"""Couldn't evaluate second expressions.\\n"""		2515576	1					
ANR	2515663	Argument	"""Couldn't evaluate second expressions.\\n"""		2515576	0					
ANR	2515664	PrimaryExpression	"""Couldn't evaluate second expressions.\\n"""		2515576	0					
ANR	2515665	Argument	state		2515576	1					
ANR	2515666	Identifier	state		2515576	0					
ANR	2515667	ElseStatement	else		2515576	0					
ANR	2515668	IfStatement	if ( value1 . SameAs ( value2 ) )		2515576	0					
ANR	2515669	Condition	value1 . SameAs ( value2 )	837:19:23307:23327	2515576	0	True				
ANR	2515670	CallExpression	value1 . SameAs ( value2 )		2515576	0					
ANR	2515671	Callee	value1 . SameAs		2515576	0					
ANR	2515672	MemberAccess	value1 . SameAs		2515576	0					
ANR	2515673	Identifier	value1		2515576	0					
ANR	2515674	Identifier	SameAs		2515576	1					
ANR	2515675	ArgumentList	value2		2515576	1					
ANR	2515676	Argument	value2		2515576	0					
ANR	2515677	Identifier	value2		2515576	0					
ANR	2515678	CompoundStatement		11:42:485:485	2515576	1					
ANR	2515679	ExpressionStatement	"print_error_message ( ""the expressions are the same."" , state )"	838:16:23348:23407	2515576	0	True				
ANR	2515680	CallExpression	"print_error_message ( ""the expressions are the same."" , state )"		2515576	0					
ANR	2515681	Callee	print_error_message		2515576	0					
ANR	2515682	Identifier	print_error_message		2515576	0					
ANR	2515683	ArgumentList	"""the expressions are the same."""		2515576	1					
ANR	2515684	Argument	"""the expressions are the same."""		2515576	0					
ANR	2515685	PrimaryExpression	"""the expressions are the same."""		2515576	0					
ANR	2515686	Argument	state		2515576	1					
ANR	2515687	Identifier	state		2515576	0					
ANR	2515688	IfStatement	if ( tree != NULL )		2515576	4					
ANR	2515689	Condition	tree != NULL	841:8:23433:23444	2515576	0	True				
ANR	2515690	EqualityExpression	tree != NULL		2515576	0		!=			
ANR	2515691	Identifier	tree		2515576	0					
ANR	2515692	Identifier	NULL		2515576	1					
ANR	2515693	CompoundStatement		15:22:602:602	2515576	1					
ANR	2515694	Statement	delete	842:8:23457:23462	2515576	0	True				
ANR	2515695	ExpressionStatement	tree	842:15:23464:23468	2515576	1	True				
ANR	2515696	Identifier	tree		2515576	0					
ANR	2515697	IfStatement	if ( tree2 != NULL )		2515576	5					
ANR	2515698	Condition	tree2 != NULL	844:8:23484:23496	2515576	0	True				
ANR	2515699	EqualityExpression	tree2 != NULL		2515576	0		!=			
ANR	2515700	Identifier	tree2		2515576	0					
ANR	2515701	Identifier	NULL		2515576	1					
ANR	2515702	CompoundStatement		18:23:654:654	2515576	1					
ANR	2515703	Statement	delete	845:8:23509:23514	2515576	0	True				
ANR	2515704	ExpressionStatement	tree2	845:15:23516:23521	2515576	1	True				
ANR	2515705	Identifier	tree2		2515576	0					
ANR	2515706	ReturnStatement	return ;	847:4:23533:23539	2515576	6	True				
ANR	2515707	ReturnType	void		2515576	1					
ANR	2515708	Identifier	handle_diff		2515576	2					
ANR	2515709	ParameterList	"string & line , State & state , Parameters & parameters"		2515576	3					
ANR	2515710	Parameter	string & line	824:4:22773:22788	2515576	0	True				
ANR	2515711	ParameterType	string &		2515576	0					
ANR	2515712	Identifier	line		2515576	1					
ANR	2515713	Parameter	State & state	825:4:22796:22812	2515576	1	True				
ANR	2515714	ParameterType	State &		2515576	0					
ANR	2515715	Identifier	state		2515576	1					
ANR	2515716	Parameter	Parameters & parameters	826:4:22820:22841	2515576	2	True				
ANR	2515717	ParameterType	Parameters &		2515576	0					
ANR	2515718	Identifier	parameters		2515576	1					
ANR	2515719	CFGEntryNode	ENTRY		2515576		True				
ANR	2515720	CFGExitNode	EXIT		2515576		True				
ANR	2515721	Symbol	NULL		2515576						
ANR	2515722	Symbol	value2		2515576						
ANR	2515723	Symbol	value1		2515576						
ANR	2515724	Symbol	line		2515576						
ANR	2515725	Symbol	tree		2515576						
ANR	2515726	Symbol	state		2515576						
ANR	2515727	Symbol	tree2		2515576						
ANR	2515728	Symbol	parameters		2515576						
ANR	2515729	Symbol	evaluate_expr		2515576						
ANR	2515730	Symbol	value1 . SameAs		2515576						
ANR	2515731	Function	handle_diffq	856:0:23733:24197							
ANR	2515732	FunctionDef	"handle_diffq (string & line , State & state , Parameters & parameters)"		2515731	0					
ANR	2515733	CompoundStatement		860:0:23827:24197	2515731	0					
ANR	2515734	IdentifierDeclStatement	"ExprTree * tree , * tree2 ;"	861:4:23833:23856	2515731	0	True				
ANR	2515735	IdentifierDecl	* tree		2515731	0					
ANR	2515736	IdentifierDeclType	ExprTree *		2515731	0					
ANR	2515737	Identifier	tree		2515731	1					
ANR	2515738	IdentifierDecl	* tree2		2515731	1					
ANR	2515739	IdentifierDeclType	ExprTree *		2515731	0					
ANR	2515740	Identifier	tree2		2515731	1					
ANR	2515741	ExpressionStatement	"get_two_exprs ( line , tree , tree2 , state , parameters )"	863:4:23863:23914	2515731	1	True				
ANR	2515742	CallExpression	"get_two_exprs ( line , tree , tree2 , state , parameters )"		2515731	0					
ANR	2515743	Callee	get_two_exprs		2515731	0					
ANR	2515744	Identifier	get_two_exprs		2515731	0					
ANR	2515745	ArgumentList	line		2515731	1					
ANR	2515746	Argument	line		2515731	0					
ANR	2515747	Identifier	line		2515731	0					
ANR	2515748	Argument	tree		2515731	1					
ANR	2515749	Identifier	tree		2515731	0					
ANR	2515750	Argument	tree2		2515731	2					
ANR	2515751	Identifier	tree2		2515731	0					
ANR	2515752	Argument	state		2515731	3					
ANR	2515753	Identifier	state		2515731	0					
ANR	2515754	Argument	parameters		2515731	4					
ANR	2515755	Identifier	parameters		2515731	0					
ANR	2515756	IfStatement	if ( tree != NULL || tree2 != NULL )		2515731	2					
ANR	2515757	Condition	tree != NULL || tree2 != NULL	864:8:23924:23952	2515731	0	True				
ANR	2515758	OrExpression	tree != NULL || tree2 != NULL		2515731	0		||			
ANR	2515759	EqualityExpression	tree != NULL		2515731	0		!=			
ANR	2515760	Identifier	tree		2515731	0					
ANR	2515761	Identifier	NULL		2515731	1					
ANR	2515762	EqualityExpression	tree2 != NULL		2515731	1		!=			
ANR	2515763	Identifier	tree2		2515731	0					
ANR	2515764	Identifier	NULL		2515731	1					
ANR	2515765	CompoundStatement		5:39:127:127	2515731	1					
ANR	2515766	IfStatement	if ( tree -> SameAs ( tree2 ) )		2515731	0					
ANR	2515767	Condition	tree -> SameAs ( tree2 )	865:12:23969:23987	2515731	0	True				
ANR	2515768	CallExpression	tree -> SameAs ( tree2 )		2515731	0					
ANR	2515769	Callee	tree -> SameAs		2515731	0					
ANR	2515770	PtrMemberAccess	tree -> SameAs		2515731	0					
ANR	2515771	Identifier	tree		2515731	0					
ANR	2515772	Identifier	SameAs		2515731	1					
ANR	2515773	ArgumentList	tree2		2515731	1					
ANR	2515774	Argument	tree2		2515731	0					
ANR	2515775	Identifier	tree2		2515731	0					
ANR	2515776	CompoundStatement		6:33:162:162	2515731	1					
ANR	2515777	ExpressionStatement	"print_error_message ( ""the expressions are the same."" , state )"	866:12:24004:24063	2515731	0	True				
ANR	2515778	CallExpression	"print_error_message ( ""the expressions are the same."" , state )"		2515731	0					
ANR	2515779	Callee	print_error_message		2515731	0					
ANR	2515780	Identifier	print_error_message		2515731	0					
ANR	2515781	ArgumentList	"""the expressions are the same."""		2515731	1					
ANR	2515782	Argument	"""the expressions are the same."""		2515731	0					
ANR	2515783	PrimaryExpression	"""the expressions are the same."""		2515731	0					
ANR	2515784	Argument	state		2515731	1					
ANR	2515785	Identifier	state		2515731	0					
ANR	2515786	IfStatement	if ( tree != NULL )		2515731	3					
ANR	2515787	Condition	tree != NULL	869:8:24089:24100	2515731	0	True				
ANR	2515788	EqualityExpression	tree != NULL		2515731	0		!=			
ANR	2515789	Identifier	tree		2515731	0					
ANR	2515790	Identifier	NULL		2515731	1					
ANR	2515791	CompoundStatement		10:22:275:275	2515731	1					
ANR	2515792	Statement	delete	870:8:24113:24118	2515731	0	True				
ANR	2515793	ExpressionStatement	tree	870:15:24120:24124	2515731	1	True				
ANR	2515794	Identifier	tree		2515731	0					
ANR	2515795	IfStatement	if ( tree2 != NULL )		2515731	4					
ANR	2515796	Condition	tree2 != NULL	872:8:24140:24152	2515731	0	True				
ANR	2515797	EqualityExpression	tree2 != NULL		2515731	0		!=			
ANR	2515798	Identifier	tree2		2515731	0					
ANR	2515799	Identifier	NULL		2515731	1					
ANR	2515800	CompoundStatement		13:23:327:327	2515731	1					
ANR	2515801	Statement	delete	873:8:24165:24170	2515731	0	True				
ANR	2515802	ExpressionStatement	tree2	873:15:24172:24177	2515731	1	True				
ANR	2515803	Identifier	tree2		2515731	0					
ANR	2515804	ReturnStatement	return ;	875:4:24189:24195	2515731	5	True				
ANR	2515805	ReturnType	void		2515731	1					
ANR	2515806	Identifier	handle_diffq		2515731	2					
ANR	2515807	ParameterList	"string & line , State & state , Parameters & parameters"		2515731	3					
ANR	2515808	Parameter	string & line	857:4:23756:23771	2515731	0	True				
ANR	2515809	ParameterType	string &		2515731	0					
ANR	2515810	Identifier	line		2515731	1					
ANR	2515811	Parameter	State & state	858:4:23779:23795	2515731	1	True				
ANR	2515812	ParameterType	State &		2515731	0					
ANR	2515813	Identifier	state		2515731	1					
ANR	2515814	Parameter	Parameters & parameters	859:4:23803:23824	2515731	2	True				
ANR	2515815	ParameterType	Parameters &		2515731	0					
ANR	2515816	Identifier	parameters		2515731	1					
ANR	2515817	CFGEntryNode	ENTRY		2515731		True				
ANR	2515818	CFGExitNode	EXIT		2515731		True				
ANR	2515819	Symbol	* tree		2515731						
ANR	2515820	Symbol	NULL		2515731						
ANR	2515821	Symbol	line		2515731						
ANR	2515822	Symbol	tree		2515731						
ANR	2515823	Symbol	state		2515731						
ANR	2515824	Symbol	tree2		2515731						
ANR	2515825	Symbol	parameters		2515731						
ANR	2515826	Symbol	tree -> SameAs		2515731						
ANR	2515827	Function	handle_set	884:0:24387:25468							
ANR	2515828	FunctionDef	"handle_set (string & line , State & state , Parameters & parameters)"		2515827	0					
ANR	2515829	CompoundStatement		888:0:24479:25468	2515827	0					
ANR	2515830	IdentifierDeclStatement	string option_name ;	889:4:24485:24504	2515827	0	True				
ANR	2515831	IdentifierDecl	option_name		2515827	0					
ANR	2515832	IdentifierDeclType	string		2515827	0					
ANR	2515833	Identifier	option_name		2515827	1					
ANR	2515834	IdentifierDeclStatement	string option_value ;	890:4:24510:24530	2515827	1	True				
ANR	2515835	IdentifierDecl	option_value		2515827	0					
ANR	2515836	IdentifierDeclType	string		2515827	0					
ANR	2515837	Identifier	option_value		2515827	1					
ANR	2515838	IfStatement	"if ( get_variable_name ( line , false , option_name , state , parameters ) )"		2515827	2					
ANR	2515839	Condition	"get_variable_name ( line , false , option_name , state , parameters )"	892:8:24541:24602	2515827	0	True				
ANR	2515840	CallExpression	"get_variable_name ( line , false , option_name , state , parameters )"		2515827	0					
ANR	2515841	Callee	get_variable_name		2515827	0					
ANR	2515842	Identifier	get_variable_name		2515827	0					
ANR	2515843	ArgumentList	line		2515827	1					
ANR	2515844	Argument	line		2515827	0					
ANR	2515845	Identifier	line		2515827	0					
ANR	2515846	Argument	false		2515827	1					
ANR	2515847	Identifier	false		2515827	0					
ANR	2515848	Argument	option_name		2515827	2					
ANR	2515849	Identifier	option_name		2515827	0					
ANR	2515850	Argument	state		2515827	3					
ANR	2515851	Identifier	state		2515827	0					
ANR	2515852	Argument	parameters		2515827	4					
ANR	2515853	Identifier	parameters		2515827	0					
ANR	2515854	CompoundStatement		5:72:125:125	2515827	1					
ANR	2515855	IfStatement	"if ( get_variable_name ( line , false , option_value , state , parameters ) )"		2515827	0					
ANR	2515856	Condition	"get_variable_name ( line , false , option_value , state , parameters )"	893:12:24619:24681	2515827	0	True				
ANR	2515857	CallExpression	"get_variable_name ( line , false , option_value , state , parameters )"		2515827	0					
ANR	2515858	Callee	get_variable_name		2515827	0					
ANR	2515859	Identifier	get_variable_name		2515827	0					
ANR	2515860	ArgumentList	line		2515827	1					
ANR	2515861	Argument	line		2515827	0					
ANR	2515862	Identifier	line		2515827	0					
ANR	2515863	Argument	false		2515827	1					
ANR	2515864	Identifier	false		2515827	0					
ANR	2515865	Argument	option_value		2515827	2					
ANR	2515866	Identifier	option_value		2515827	0					
ANR	2515867	Argument	state		2515827	3					
ANR	2515868	Identifier	state		2515827	0					
ANR	2515869	Argument	parameters		2515827	4					
ANR	2515870	Identifier	parameters		2515827	0					
ANR	2515871	CompoundStatement		6:77:204:204	2515827	1					
ANR	2515872	IfStatement	"if ( option_name == ""format"" )"		2515827	0					
ANR	2515873	Condition	"option_name == ""format"""	894:16:24702:24724	2515827	0	True				
ANR	2515874	EqualityExpression	"option_name == ""format"""		2515827	0		==			
ANR	2515875	Identifier	option_name		2515827	0					
ANR	2515876	PrimaryExpression	"""format"""		2515827	1					
ANR	2515877	CompoundStatement		7:41:247:247	2515827	1					
ANR	2515878	IfStatement	"if ( option_value == ""compact"" )"		2515827	0					
ANR	2515879	Condition	"option_value == ""compact"""	895:20:24749:24773	2515827	0	True				
ANR	2515880	EqualityExpression	"option_value == ""compact"""		2515827	0		==			
ANR	2515881	Identifier	option_value		2515827	0					
ANR	2515882	PrimaryExpression	"""compact"""		2515827	1					
ANR	2515883	CompoundStatement		8:47:296:296	2515827	1					
ANR	2515884	ExpressionStatement	state . format = print_Compact	896:20:24798:24826	2515827	0	True				
ANR	2515885	AssignmentExpression	state . format = print_Compact		2515827	0		=			
ANR	2515886	MemberAccess	state . format		2515827	0					
ANR	2515887	Identifier	state		2515827	0					
ANR	2515888	Identifier	format		2515827	1					
ANR	2515889	Identifier	print_Compact		2515827	1					
ANR	2515890	ElseStatement	else		2515827	0					
ANR	2515891	IfStatement	"if ( option_value == ""pretty"" )"		2515827	0					
ANR	2515892	Condition	"option_value == ""pretty"""	897:27:24855:24878	2515827	0	True				
ANR	2515893	EqualityExpression	"option_value == ""pretty"""		2515827	0		==			
ANR	2515894	Identifier	option_value		2515827	0					
ANR	2515895	PrimaryExpression	"""pretty"""		2515827	1					
ANR	2515896	CompoundStatement		10:53:401:401	2515827	1					
ANR	2515897	ExpressionStatement	state . format = print_Pretty	898:20:24903:24930	2515827	0	True				
ANR	2515898	AssignmentExpression	state . format = print_Pretty		2515827	0		=			
ANR	2515899	MemberAccess	state . format		2515827	0					
ANR	2515900	Identifier	state		2515827	0					
ANR	2515901	Identifier	format		2515827	1					
ANR	2515902	Identifier	print_Pretty		2515827	1					
ANR	2515903	ElseStatement	else		2515827	0					
ANR	2515904	IfStatement	"if ( option_value == ""xml"" )"		2515827	0					
ANR	2515905	Condition	"option_value == ""xml"""	899:27:24960:24980	2515827	0	True				
ANR	2515906	EqualityExpression	"option_value == ""xml"""		2515827	0		==			
ANR	2515907	Identifier	option_value		2515827	0					
ANR	2515908	PrimaryExpression	"""xml"""		2515827	1					
ANR	2515909	CompoundStatement		12:50:503:503	2515827	1					
ANR	2515910	ExpressionStatement	state . format = print_XML	900:20:25005:25029	2515827	0	True				
ANR	2515911	AssignmentExpression	state . format = print_XML		2515827	0		=			
ANR	2515912	MemberAccess	state . format		2515827	0					
ANR	2515913	Identifier	state		2515827	0					
ANR	2515914	Identifier	format		2515827	1					
ANR	2515915	Identifier	print_XML		2515827	1					
ANR	2515916	ElseStatement	else		2515827	0					
ANR	2515917	IfStatement	"if ( option_value == ""xmlpretty"" )"		2515827	0					
ANR	2515918	Condition	"option_value == ""xmlpretty"""	901:27:25058:25084	2515827	0	True				
ANR	2515919	EqualityExpression	"option_value == ""xmlpretty"""		2515827	0		==			
ANR	2515920	Identifier	option_value		2515827	0					
ANR	2515921	PrimaryExpression	"""xmlpretty"""		2515827	1					
ANR	2515922	CompoundStatement		14:56:607:607	2515827	1					
ANR	2515923	ExpressionStatement	state . format = print_XMLPretty	902:20:25109:25139	2515827	0	True				
ANR	2515924	AssignmentExpression	state . format = print_XMLPretty		2515827	0		=			
ANR	2515925	MemberAccess	state . format		2515827	0					
ANR	2515926	Identifier	state		2515827	0					
ANR	2515927	Identifier	format		2515827	1					
ANR	2515928	Identifier	print_XMLPretty		2515827	1					
ANR	2515929	ElseStatement	else		2515827	0					
ANR	2515930	CompoundStatement		16:23:684:684	2515827	0					
ANR	2515931	ExpressionStatement	"print_error_message ( ""Unknown print format. Use compact, pretty, xml, or xmlpretty"" , state )"	904:20:25186:25276	2515827	0	True				
ANR	2515932	CallExpression	"print_error_message ( ""Unknown print format. Use compact, pretty, xml, or xmlpretty"" , state )"		2515827	0					
ANR	2515933	Callee	print_error_message		2515827	0					
ANR	2515934	Identifier	print_error_message		2515827	0					
ANR	2515935	ArgumentList	"""Unknown print format. Use compact, pretty, xml, or xmlpretty"""		2515827	1					
ANR	2515936	Argument	"""Unknown print format. Use compact, pretty, xml, or xmlpretty"""		2515827	0					
ANR	2515937	PrimaryExpression	"""Unknown print format. Use compact, pretty, xml, or xmlpretty"""		2515827	0					
ANR	2515938	Argument	state		2515827	1					
ANR	2515939	Identifier	state		2515827	0					
ANR	2515940	ElseStatement	else		2515827	0					
ANR	2515941	CompoundStatement		19:19:835:835	2515827	0					
ANR	2515942	ExpressionStatement	"print_error_message ( ""Unknown option. The only option currently available is format"" , state )"	907:16:25333:25424	2515827	0	True				
ANR	2515943	CallExpression	"print_error_message ( ""Unknown option. The only option currently available is format"" , state )"		2515827	0					
ANR	2515944	Callee	print_error_message		2515827	0					
ANR	2515945	Identifier	print_error_message		2515827	0					
ANR	2515946	ArgumentList	"""Unknown option. The only option currently available is format"""		2515827	1					
ANR	2515947	Argument	"""Unknown option. The only option currently available is format"""		2515827	0					
ANR	2515948	PrimaryExpression	"""Unknown option. The only option currently available is format"""		2515827	0					
ANR	2515949	Argument	state		2515827	1					
ANR	2515950	Identifier	state		2515827	0					
ANR	2515951	ReturnStatement	return ;	911:4:25460:25466	2515827	3	True				
ANR	2515952	ReturnType	void		2515827	1					
ANR	2515953	Identifier	handle_set		2515827	2					
ANR	2515954	ParameterList	"string & line , State & state , Parameters & parameters"		2515827	3					
ANR	2515955	Parameter	string & line	885:4:24408:24423	2515827	0	True				
ANR	2515956	ParameterType	string &		2515827	0					
ANR	2515957	Identifier	line		2515827	1					
ANR	2515958	Parameter	State & state	886:4:24431:24447	2515827	1	True				
ANR	2515959	ParameterType	State &		2515827	0					
ANR	2515960	Identifier	state		2515827	1					
ANR	2515961	Parameter	Parameters & parameters	887:4:24455:24476	2515827	2	True				
ANR	2515962	ParameterType	Parameters &		2515827	0					
ANR	2515963	Identifier	parameters		2515827	1					
ANR	2515964	CFGEntryNode	ENTRY		2515827		True				
ANR	2515965	CFGExitNode	EXIT		2515827		True				
ANR	2515966	Symbol	print_XMLPretty		2515827						
ANR	2515967	Symbol	option_value		2515827						
ANR	2515968	Symbol	get_variable_name		2515827						
ANR	2515969	Symbol	print_Pretty		2515827						
ANR	2515970	Symbol	line		2515827						
ANR	2515971	Symbol	false		2515827						
ANR	2515972	Symbol	option_name		2515827						
ANR	2515973	Symbol	state		2515827						
ANR	2515974	Symbol	print_XML		2515827						
ANR	2515975	Symbol	parameters		2515827						
ANR	2515976	Symbol	print_Compact		2515827						
ANR	2515977	Symbol	state . format		2515827						
ANR	2515978	Function	handle_show	920:0:25659:26521							
ANR	2515979	FunctionDef	"handle_show (string & line , State & state , Parameters & parameters)"		2515978	0					
ANR	2515980	CompoundStatement		924:0:25752:26521	2515978	0					
ANR	2515981	IdentifierDeclStatement	string option_name ;	925:4:25758:25777	2515978	0	True				
ANR	2515982	IdentifierDecl	option_name		2515978	0					
ANR	2515983	IdentifierDeclType	string		2515978	0					
ANR	2515984	Identifier	option_name		2515978	1					
ANR	2515985	IfStatement	"if ( get_variable_name ( line , false , option_name , state , parameters ) )"		2515978	1					
ANR	2515986	Condition	"get_variable_name ( line , false , option_name , state , parameters )"	927:8:25788:25849	2515978	0	True				
ANR	2515987	CallExpression	"get_variable_name ( line , false , option_name , state , parameters )"		2515978	0					
ANR	2515988	Callee	get_variable_name		2515978	0					
ANR	2515989	Identifier	get_variable_name		2515978	0					
ANR	2515990	ArgumentList	line		2515978	1					
ANR	2515991	Argument	line		2515978	0					
ANR	2515992	Identifier	line		2515978	0					
ANR	2515993	Argument	false		2515978	1					
ANR	2515994	Identifier	false		2515978	0					
ANR	2515995	Argument	option_name		2515978	2					
ANR	2515996	Identifier	option_name		2515978	0					
ANR	2515997	Argument	state		2515978	3					
ANR	2515998	Identifier	state		2515978	0					
ANR	2515999	Argument	parameters		2515978	4					
ANR	2516000	Identifier	parameters		2515978	0					
ANR	2516001	CompoundStatement		4:72:99:99	2515978	1					
ANR	2516002	IfStatement	"if ( option_name == ""format"" )"		2515978	0					
ANR	2516003	Condition	"option_name == ""format"""	928:12:25866:25888	2515978	0	True				
ANR	2516004	EqualityExpression	"option_name == ""format"""		2515978	0		==			
ANR	2516005	Identifier	option_name		2515978	0					
ANR	2516006	PrimaryExpression	"""format"""		2515978	1					
ANR	2516007	CompoundStatement		5:37:138:138	2515978	1					
ANR	2516008	ExpressionStatement	"cout << ""Format: """	929:12:25905:25923	2515978	0	True				
ANR	2516009	ShiftExpression	"cout << ""Format: """		2515978	0		<<			
ANR	2516010	Identifier	cout		2515978	0					
ANR	2516011	PrimaryExpression	"""Format: """		2515978	1					
ANR	2516012	SwitchStatement	switch ( state . format )		2515978	1					
ANR	2516013	Condition	state . format	930:20:25945:25956	2515978	0	True				
ANR	2516014	MemberAccess	state . format		2515978	0					
ANR	2516015	Identifier	state		2515978	0					
ANR	2516016	Identifier	format		2515978	1					
ANR	2516017	CompoundStatement		7:34:206:206	2515978	1					
ANR	2516018	Label	case print_Compact :	931:12:25973:25991	2515978	0	True				
ANR	2516019	Identifier	print_Compact		2515978	0					
ANR	2516020	ExpressionStatement	"cout << ""Traditional Compact\\n"""	932:16:26009:26040	2515978	1	True				
ANR	2516021	ShiftExpression	"cout << ""Traditional Compact\\n"""		2515978	0		<<			
ANR	2516022	Identifier	cout		2515978	0					
ANR	2516023	PrimaryExpression	"""Traditional Compact\\n"""		2515978	1					
ANR	2516024	BreakStatement	break ;	933:16:26058:26063	2515978	2	True				
ANR	2516025	Label	case print_Pretty :	934:12:26077:26094	2515978	3	True				
ANR	2516026	Identifier	print_Pretty		2515978	0					
ANR	2516027	ExpressionStatement	"cout << ""Traditional Pretty\\n"""	935:16:26112:26142	2515978	4	True				
ANR	2516028	ShiftExpression	"cout << ""Traditional Pretty\\n"""		2515978	0		<<			
ANR	2516029	Identifier	cout		2515978	0					
ANR	2516030	PrimaryExpression	"""Traditional Pretty\\n"""		2515978	1					
ANR	2516031	BreakStatement	break ;	936:16:26160:26165	2515978	5	True				
ANR	2516032	Label	case print_XML :	937:12:26179:26193	2515978	6	True				
ANR	2516033	Identifier	print_XML		2515978	0					
ANR	2516034	ExpressionStatement	"cout << ""XML Compact\\n"""	938:16:26211:26234	2515978	7	True				
ANR	2516035	ShiftExpression	"cout << ""XML Compact\\n"""		2515978	0		<<			
ANR	2516036	Identifier	cout		2515978	0					
ANR	2516037	PrimaryExpression	"""XML Compact\\n"""		2515978	1					
ANR	2516038	BreakStatement	break ;	939:16:26252:26257	2515978	8	True				
ANR	2516039	Label	case print_XMLPretty :	940:12:26271:26291	2515978	9	True				
ANR	2516040	Identifier	print_XMLPretty		2515978	0					
ANR	2516041	ExpressionStatement	"cout << ""XML Pretty\\n"""	941:16:26309:26331	2515978	10	True				
ANR	2516042	ShiftExpression	"cout << ""XML Pretty\\n"""		2515978	0		<<			
ANR	2516043	Identifier	cout		2515978	0					
ANR	2516044	PrimaryExpression	"""XML Pretty\\n"""		2515978	1					
ANR	2516045	BreakStatement	break ;	942:16:26349:26354	2515978	11	True				
ANR	2516046	ElseStatement	else		2515978	0					
ANR	2516047	CompoundStatement		21:15:632:632	2515978	0					
ANR	2516048	ExpressionStatement	"print_error_message ( ""Unknown option. The only option currently available is format"" , state )"	945:12:26399:26490	2515978	0	True				
ANR	2516049	CallExpression	"print_error_message ( ""Unknown option. The only option currently available is format"" , state )"		2515978	0					
ANR	2516050	Callee	print_error_message		2515978	0					
ANR	2516051	Identifier	print_error_message		2515978	0					
ANR	2516052	ArgumentList	"""Unknown option. The only option currently available is format"""		2515978	1					
ANR	2516053	Argument	"""Unknown option. The only option currently available is format"""		2515978	0					
ANR	2516054	PrimaryExpression	"""Unknown option. The only option currently available is format"""		2515978	0					
ANR	2516055	Argument	state		2515978	1					
ANR	2516056	Identifier	state		2515978	0					
ANR	2516057	ReturnStatement	return ;	949:4:26513:26519	2515978	2	True				
ANR	2516058	ReturnType	void		2515978	1					
ANR	2516059	Identifier	handle_show		2515978	2					
ANR	2516060	ParameterList	"string & line , State & state , Parameters & parameters"		2515978	3					
ANR	2516061	Parameter	string & line	921:4:25681:25696	2515978	0	True				
ANR	2516062	ParameterType	string &		2515978	0					
ANR	2516063	Identifier	line		2515978	1					
ANR	2516064	Parameter	State & state	922:4:25704:25720	2515978	1	True				
ANR	2516065	ParameterType	State &		2515978	0					
ANR	2516066	Identifier	state		2515978	1					
ANR	2516067	Parameter	Parameters & parameters	923:4:25728:25749	2515978	2	True				
ANR	2516068	ParameterType	Parameters &		2515978	0					
ANR	2516069	Identifier	parameters		2515978	1					
ANR	2516070	CFGEntryNode	ENTRY		2515978		True				
ANR	2516071	CFGExitNode	EXIT		2515978		True				
ANR	2516072	Symbol	get_variable_name		2515978						
ANR	2516073	Symbol	line		2515978						
ANR	2516074	Symbol	false		2515978						
ANR	2516075	Symbol	option_name		2515978						
ANR	2516076	Symbol	state		2515978						
ANR	2516077	Symbol	parameters		2515978						
ANR	2516078	Symbol	state . format		2515978						
ANR	2516079	Function	handle_writexml	958:0:26716:28485							
ANR	2516080	FunctionDef	"handle_writexml (string & line , State & state , Parameters & parameters)"		2516079	0					
ANR	2516081	CompoundStatement		962:0:26813:28485	2516079	0					
ANR	2516082	IdentifierDeclStatement	string filename ;	963:4:26819:26837	2516079	0	True				
ANR	2516083	IdentifierDecl	filename		2516079	0					
ANR	2516084	IdentifierDeclType	string		2516079	0					
ANR	2516085	Identifier	filename		2516079	1					
ANR	2516086	IdentifierDeclStatement	ExprTree * expr ;	964:4:26843:26858	2516079	1	True				
ANR	2516087	IdentifierDecl	* expr		2516079	0					
ANR	2516088	IdentifierDeclType	ExprTree *		2516079	0					
ANR	2516089	Identifier	expr		2516079	1					
ANR	2516090	IdentifierDeclStatement	ofstream xml_file ;	965:4:26864:26882	2516079	2	True				
ANR	2516091	IdentifierDecl	xml_file		2516079	0					
ANR	2516092	IdentifierDeclType	ofstream		2516079	0					
ANR	2516093	Identifier	xml_file		2516079	1					
ANR	2516094	ExpressionStatement	expr = NULL	967:4:26889:26900	2516079	3	True				
ANR	2516095	AssignmentExpression	expr = NULL		2516079	0		=			
ANR	2516096	Identifier	expr		2516079	0					
ANR	2516097	Identifier	NULL		2516079	1					
ANR	2516098	IfStatement	"if ( get_file_name ( line , filename , state , parameters ) )"		2516079	4					
ANR	2516099	Condition	"get_file_name ( line , filename , state , parameters )"	968:8:26910:26957	2516079	0	True				
ANR	2516100	CallExpression	"get_file_name ( line , filename , state , parameters )"		2516079	0					
ANR	2516101	Callee	get_file_name		2516079	0					
ANR	2516102	Identifier	get_file_name		2516079	0					
ANR	2516103	ArgumentList	line		2516079	1					
ANR	2516104	Argument	line		2516079	0					
ANR	2516105	Identifier	line		2516079	0					
ANR	2516106	Argument	filename		2516079	1					
ANR	2516107	Identifier	filename		2516079	0					
ANR	2516108	Argument	state		2516079	2					
ANR	2516109	Identifier	state		2516079	0					
ANR	2516110	Argument	parameters		2516079	3					
ANR	2516111	Identifier	parameters		2516079	0					
ANR	2516112	CompoundStatement		7:58:146:146	2516079	1					
ANR	2516113	IfStatement	"if ( ( expr = get_expr ( line , state , parameters ) ) != NULL )"		2516079	0					
ANR	2516114	Condition	"( expr = get_expr ( line , state , parameters ) ) != NULL"	969:12:26974:27023	2516079	0	True				
ANR	2516115	EqualityExpression	"( expr = get_expr ( line , state , parameters ) ) != NULL"		2516079	0		!=			
ANR	2516116	AssignmentExpression	"expr = get_expr ( line , state , parameters )"		2516079	0		=			
ANR	2516117	Identifier	expr		2516079	0					
ANR	2516118	CallExpression	"get_expr ( line , state , parameters )"		2516079	1					
ANR	2516119	Callee	get_expr		2516079	0					
ANR	2516120	Identifier	get_expr		2516079	0					
ANR	2516121	ArgumentList	line		2516079	1					
ANR	2516122	Argument	line		2516079	0					
ANR	2516123	Identifier	line		2516079	0					
ANR	2516124	Argument	state		2516079	1					
ANR	2516125	Identifier	state		2516079	0					
ANR	2516126	Argument	parameters		2516079	2					
ANR	2516127	Identifier	parameters		2516079	0					
ANR	2516128	Identifier	NULL		2516079	1					
ANR	2516129	CompoundStatement		8:64:212:212	2516079	1					
ANR	2516130	IfStatement	"if ( expr_okay_for_xml_file ( expr , state , parameters ) )"		2516079	0					
ANR	2516131	Condition	"expr_okay_for_xml_file ( expr , state , parameters )"	970:16:27044:27090	2516079	0	True				
ANR	2516132	CallExpression	"expr_okay_for_xml_file ( expr , state , parameters )"		2516079	0					
ANR	2516133	Callee	expr_okay_for_xml_file		2516079	0					
ANR	2516134	Identifier	expr_okay_for_xml_file		2516079	0					
ANR	2516135	ArgumentList	expr		2516079	1					
ANR	2516136	Argument	expr		2516079	0					
ANR	2516137	Identifier	expr		2516079	0					
ANR	2516138	Argument	state		2516079	1					
ANR	2516139	Identifier	state		2516079	0					
ANR	2516140	Argument	parameters		2516079	2					
ANR	2516141	Identifier	parameters		2516079	0					
ANR	2516142	CompoundStatement		9:65:279:279	2516079	1					
ANR	2516143	ExpressionStatement	xml_file . open ( filename . c_str ( ) )	971:16:27111:27142	2516079	0	True				
ANR	2516144	CallExpression	xml_file . open ( filename . c_str ( ) )		2516079	0					
ANR	2516145	Callee	xml_file . open		2516079	0					
ANR	2516146	MemberAccess	xml_file . open		2516079	0					
ANR	2516147	Identifier	xml_file		2516079	0					
ANR	2516148	Identifier	open		2516079	1					
ANR	2516149	ArgumentList	filename . c_str ( )		2516079	1					
ANR	2516150	Argument	filename . c_str ( )		2516079	0					
ANR	2516151	CallExpression	filename . c_str ( )		2516079	0					
ANR	2516152	Callee	filename . c_str		2516079	0					
ANR	2516153	MemberAccess	filename . c_str		2516079	0					
ANR	2516154	Identifier	filename		2516079	0					
ANR	2516155	Identifier	c_str		2516079	1					
ANR	2516156	ArgumentList			2516079	1					
ANR	2516157	IfStatement	if ( xml_file . bad ( ) )		2516079	1					
ANR	2516158	Condition	xml_file . bad ( )	972:20:27164:27177	2516079	0	True				
ANR	2516159	CallExpression	xml_file . bad ( )		2516079	0					
ANR	2516160	Callee	xml_file . bad		2516079	0					
ANR	2516161	MemberAccess	xml_file . bad		2516079	0					
ANR	2516162	Identifier	xml_file		2516079	0					
ANR	2516163	Identifier	bad		2516079	1					
ANR	2516164	ArgumentList			2516079	1					
ANR	2516165	CompoundStatement		12:20:388:408	2516079	1					
ANR	2516166	IdentifierDeclStatement	string error_message ;	973:20:27202:27222	2516079	0	True				
ANR	2516167	IdentifierDecl	error_message		2516079	0					
ANR	2516168	IdentifierDeclType	string		2516079	0					
ANR	2516169	Identifier	error_message		2516079	1					
ANR	2516170	ExpressionStatement	"error_message = ""Can't open """	974:20:27244:27273	2516079	1	True				
ANR	2516171	AssignmentExpression	"error_message = ""Can't open """		2516079	0		=			
ANR	2516172	Identifier	error_message		2516079	0					
ANR	2516173	PrimaryExpression	"""Can't open """		2516079	1					
ANR	2516174	ExpressionStatement	error_message += filename	975:20:27295:27320	2516079	2	True				
ANR	2516175	AssignmentExpression	error_message += filename		2516079	0		+=			
ANR	2516176	Identifier	error_message		2516079	0					
ANR	2516177	Identifier	filename		2516079	1					
ANR	2516178	ExpressionStatement	"error_message += "" for output"""	976:20:27342:27372	2516079	3	True				
ANR	2516179	AssignmentExpression	"error_message += "" for output"""		2516079	0		+=			
ANR	2516180	Identifier	error_message		2516079	0					
ANR	2516181	PrimaryExpression	""" for output"""		2516079	1					
ANR	2516182	ExpressionStatement	"print_error_message ( error_message , state )"	977:20:27394:27435	2516079	4	True				
ANR	2516183	CallExpression	"print_error_message ( error_message , state )"		2516079	0					
ANR	2516184	Callee	print_error_message		2516079	0					
ANR	2516185	Identifier	print_error_message		2516079	0					
ANR	2516186	ArgumentList	error_message		2516079	1					
ANR	2516187	Argument	error_message		2516079	0					
ANR	2516188	Identifier	error_message		2516079	0					
ANR	2516189	Argument	state		2516079	1					
ANR	2516190	Identifier	state		2516079	0					
ANR	2516191	ElseStatement	else		2516079	0					
ANR	2516192	CompoundStatement		19:20:717:748	2516079	0					
ANR	2516193	IdentifierDeclStatement	ClassAdXMLUnParser unparser ;	979:20:27482:27509	2516079	0	True				
ANR	2516194	IdentifierDecl	unparser		2516079	0					
ANR	2516195	IdentifierDeclType	ClassAdXMLUnParser		2516079	0					
ANR	2516196	Identifier	unparser		2516079	1					
ANR	2516197	IdentifierDeclStatement	string classad_text ;	980:20:27531:27562	2516079	1	True				
ANR	2516198	IdentifierDecl	classad_text		2516079	0					
ANR	2516199	IdentifierDeclType	string		2516079	0					
ANR	2516200	Identifier	classad_text		2516079	1					
ANR	2516201	ExpressionStatement	"xml_file << ""<classads>\\n"""	982:20:27585:27611	2516079	2	True				
ANR	2516202	ShiftExpression	"xml_file << ""<classads>\\n"""		2516079	0		<<			
ANR	2516203	Identifier	xml_file		2516079	0					
ANR	2516204	PrimaryExpression	"""<classads>\\n"""		2516079	1					
ANR	2516205	IfStatement	if ( expr -> GetKind ( ) == ExprTree :: CLASSAD_NODE )		2516079	3					
ANR	2516206	Condition	expr -> GetKind ( ) == ExprTree :: CLASSAD_NODE	984:24:27638:27678	2516079	0	True				
ANR	2516207	EqualityExpression	expr -> GetKind ( ) == ExprTree :: CLASSAD_NODE		2516079	0		==			
ANR	2516208	CallExpression	expr -> GetKind ( )		2516079	0					
ANR	2516209	Callee	expr -> GetKind		2516079	0					
ANR	2516210	PtrMemberAccess	expr -> GetKind		2516079	0					
ANR	2516211	Identifier	expr		2516079	0					
ANR	2516212	Identifier	GetKind		2516079	1					
ANR	2516213	ArgumentList			2516079	1					
ANR	2516214	Identifier	ExprTree :: CLASSAD_NODE		2516079	1					
ANR	2516215	CompoundStatement		23:67:867:867	2516079	1					
ANR	2516216	ExpressionStatement	"unparser . Unparse ( classad_text , expr )"	985:24:27707:27743	2516079	0	True				
ANR	2516217	CallExpression	"unparser . Unparse ( classad_text , expr )"		2516079	0					
ANR	2516218	Callee	unparser . Unparse		2516079	0					
ANR	2516219	MemberAccess	unparser . Unparse		2516079	0					
ANR	2516220	Identifier	unparser		2516079	0					
ANR	2516221	Identifier	Unparse		2516079	1					
ANR	2516222	ArgumentList	classad_text		2516079	1					
ANR	2516223	Argument	classad_text		2516079	0					
ANR	2516224	Identifier	classad_text		2516079	0					
ANR	2516225	Argument	expr		2516079	1					
ANR	2516226	Identifier	expr		2516079	0					
ANR	2516227	ExpressionStatement	xml_file << classad_text	986:24:27769:27793	2516079	1	True				
ANR	2516228	ShiftExpression	xml_file << classad_text		2516079	0		<<			
ANR	2516229	Identifier	xml_file		2516079	0					
ANR	2516230	Identifier	classad_text		2516079	1					
ANR	2516231	ElseStatement	else		2516079	0					
ANR	2516232	CompoundStatement		28:24:1093:1116	2516079	0					
ANR	2516233	IdentifierDeclStatement	ExprList * list = ( ExprList * ) expr ;	988:24:27848:27881	2516079	0	True				
ANR	2516234	IdentifierDecl	* list = ( ExprList * ) expr		2516079	0					
ANR	2516235	IdentifierDeclType	ExprList *		2516079	0					
ANR	2516236	Identifier	list		2516079	1					
ANR	2516237	AssignmentExpression	* list = ( ExprList * ) expr		2516079	2		=			
ANR	2516238	Identifier	list		2516079	0					
ANR	2516239	CastExpression	( ExprList * ) expr		2516079	1					
ANR	2516240	CastTarget	ExprList *		2516079	0					
ANR	2516241	Identifier	expr		2516079	1					
ANR	2516242	IdentifierDeclStatement	ExprList :: iterator iter ;	989:24:27907:27930	2516079	1	True				
ANR	2516243	IdentifierDecl	iter		2516079	0					
ANR	2516244	IdentifierDeclType	ExprList :: iterator		2516079	0					
ANR	2516245	Identifier	iter		2516079	1					
ANR	2516246	ForStatement	for ( iter = list -> begin ( ) ; iter != list -> end ( ) ; iter ++ )		2516079	2					
ANR	2516247	ForInit	iter = list -> begin ( ) ;	990:29:27961:27981	2516079	0	True				
ANR	2516248	AssignmentExpression	iter = list -> begin ( )		2516079	0		=			
ANR	2516249	Identifier	iter		2516079	0					
ANR	2516250	CallExpression	list -> begin ( )		2516079	1					
ANR	2516251	Callee	list -> begin		2516079	0					
ANR	2516252	PtrMemberAccess	list -> begin		2516079	0					
ANR	2516253	Identifier	list		2516079	0					
ANR	2516254	Identifier	begin		2516079	1					
ANR	2516255	ArgumentList			2516079	1					
ANR	2516256	Condition	iter != list -> end ( )	990:51:27983:28001	2516079	1	True				
ANR	2516257	EqualityExpression	iter != list -> end ( )		2516079	0		!=			
ANR	2516258	Identifier	iter		2516079	0					
ANR	2516259	CallExpression	list -> end ( )		2516079	1					
ANR	2516260	Callee	list -> end		2516079	0					
ANR	2516261	PtrMemberAccess	list -> end		2516079	0					
ANR	2516262	Identifier	list		2516079	0					
ANR	2516263	Identifier	end		2516079	1					
ANR	2516264	ArgumentList			2516079	1					
ANR	2516265	PostIncDecOperationExpression	iter ++	990:72:28004:28009	2516079	2	True				
ANR	2516266	Identifier	iter		2516079	0					
ANR	2516267	IncDec	++		2516079	1					
ANR	2516268	CompoundStatement		30:28:1228:1245	2516079	3					
ANR	2516269	IdentifierDeclStatement	ExprTree * classad ;	991:28:28042:28059	2516079	0	True				
ANR	2516270	IdentifierDecl	* classad		2516079	0					
ANR	2516271	IdentifierDeclType	ExprTree *		2516079	0					
ANR	2516272	Identifier	classad		2516079	1					
ANR	2516273	ExpressionStatement	classad = * iter	993:28:28090:28105	2516079	1	True				
ANR	2516274	AssignmentExpression	classad = * iter		2516079	0		=			
ANR	2516275	Identifier	classad		2516079	0					
ANR	2516276	UnaryOperationExpression	* iter		2516079	1					
ANR	2516277	UnaryOperator	*		2516079	0					
ANR	2516278	Identifier	iter		2516079	1					
ANR	2516279	ExpressionStatement	"classad_text = """""	994:28:28135:28152	2516079	2	True				
ANR	2516280	AssignmentExpression	"classad_text = """""		2516079	0		=			
ANR	2516281	Identifier	classad_text		2516079	0					
ANR	2516282	PrimaryExpression	""""""		2516079	1					
ANR	2516283	ExpressionStatement	"unparser . Unparse ( classad_text , classad )"	995:28:28182:28221	2516079	3	True				
ANR	2516284	CallExpression	"unparser . Unparse ( classad_text , classad )"		2516079	0					
ANR	2516285	Callee	unparser . Unparse		2516079	0					
ANR	2516286	MemberAccess	unparser . Unparse		2516079	0					
ANR	2516287	Identifier	unparser		2516079	0					
ANR	2516288	Identifier	Unparse		2516079	1					
ANR	2516289	ArgumentList	classad_text		2516079	1					
ANR	2516290	Argument	classad_text		2516079	0					
ANR	2516291	Identifier	classad_text		2516079	0					
ANR	2516292	Argument	classad		2516079	1					
ANR	2516293	Identifier	classad		2516079	0					
ANR	2516294	ExpressionStatement	xml_file << classad_text << endl	996:28:28251:28283	2516079	4	True				
ANR	2516295	ShiftExpression	xml_file << classad_text << endl		2516079	0		<<			
ANR	2516296	Identifier	xml_file		2516079	0					
ANR	2516297	ShiftExpression	classad_text << endl		2516079	1		<<			
ANR	2516298	Identifier	classad_text		2516079	0					
ANR	2516299	Identifier	endl		2516079	1					
ANR	2516300	ExpressionStatement	"xml_file << ""</classads>\\n"""	999:20:28353:28380	2516079	4	True				
ANR	2516301	ShiftExpression	"xml_file << ""</classads>\\n"""		2516079	0		<<			
ANR	2516302	Identifier	xml_file		2516079	0					
ANR	2516303	PrimaryExpression	"""</classads>\\n"""		2516079	1					
ANR	2516304	IfStatement	if ( expr )		2516079	5					
ANR	2516305	Condition	expr	1004:8:28438:28441	2516079	0	True				
ANR	2516306	Identifier	expr		2516079	0					
ANR	2516307	CompoundStatement		43:14:1630:1630	2516079	1					
ANR	2516308	Statement	delete	1005:8:28454:28459	2516079	0	True				
ANR	2516309	ExpressionStatement	expr	1005:15:28461:28465	2516079	1	True				
ANR	2516310	Identifier	expr		2516079	0					
ANR	2516311	ReturnStatement	return ;	1007:4:28477:28483	2516079	6	True				
ANR	2516312	ReturnType	void		2516079	1					
ANR	2516313	Identifier	handle_writexml		2516079	2					
ANR	2516314	ParameterList	"string & line , State & state , Parameters & parameters"		2516079	3					
ANR	2516315	Parameter	string & line	959:4:26742:26757	2516079	0	True				
ANR	2516316	ParameterType	string &		2516079	0					
ANR	2516317	Identifier	line		2516079	1					
ANR	2516318	Parameter	State & state	960:4:26765:26781	2516079	1	True				
ANR	2516319	ParameterType	State &		2516079	0					
ANR	2516320	Identifier	state		2516079	1					
ANR	2516321	Parameter	Parameters & parameters	961:4:26789:26810	2516079	2	True				
ANR	2516322	ParameterType	Parameters &		2516079	0					
ANR	2516323	Identifier	parameters		2516079	1					
ANR	2516324	CFGEntryNode	ENTRY		2516079		True				
ANR	2516325	CFGExitNode	EXIT		2516079		True				
ANR	2516326	Symbol	list -> end		2516079						
ANR	2516327	Symbol	line		2516079						
ANR	2516328	Symbol	list -> begin		2516079						
ANR	2516329	Symbol	expr_okay_for_xml_file		2516079						
ANR	2516330	Symbol	* iter		2516079						
ANR	2516331	Symbol	ExprTree :: CLASSAD_NODE		2516079						
ANR	2516332	Symbol	expr		2516079						
ANR	2516333	Symbol	state		2516079						
ANR	2516334	Symbol	error_message		2516079						
ANR	2516335	Symbol	expr -> GetKind		2516079						
ANR	2516336	Symbol	NULL		2516079						
ANR	2516337	Symbol	classad_text		2516079						
ANR	2516338	Symbol	iter		2516079						
ANR	2516339	Symbol	filename . c_str		2516079						
ANR	2516340	Symbol	list		2516079						
ANR	2516341	Symbol	xml_file		2516079						
ANR	2516342	Symbol	filename		2516079						
ANR	2516343	Symbol	get_expr		2516079						
ANR	2516344	Symbol	* expr		2516079						
ANR	2516345	Symbol	* list		2516079						
ANR	2516346	Symbol	unparser		2516079						
ANR	2516347	Symbol	classad		2516079						
ANR	2516348	Symbol	xml_file . bad		2516079						
ANR	2516349	Symbol	parameters		2516079						
ANR	2516350	Symbol	get_file_name		2516079						
ANR	2516351	Function	handle_readxml	1016:0:28679:29967							
ANR	2516352	FunctionDef	"handle_readxml (string & line , State & state , Parameters & parameters)"		2516351	0					
ANR	2516353	CompoundStatement		1020:0:28775:29967	2516351	0					
ANR	2516354	IdentifierDeclStatement	string variable_name ;	1021:4:28781:28804	2516351	0	True				
ANR	2516355	IdentifierDecl	variable_name		2516351	0					
ANR	2516356	IdentifierDeclType	string		2516351	0					
ANR	2516357	Identifier	variable_name		2516351	1					
ANR	2516358	IdentifierDeclStatement	string file_name ;	1022:4:28810:28829	2516351	1	True				
ANR	2516359	IdentifierDecl	file_name		2516351	0					
ANR	2516360	IdentifierDeclType	string		2516351	0					
ANR	2516361	Identifier	file_name		2516351	1					
ANR	2516362	IfStatement	"if ( get_variable_name ( line , false , variable_name , state , parameters ) )"		2516351	2					
ANR	2516363	Condition	"get_variable_name ( line , false , variable_name , state , parameters )"	1024:8:28840:28903	2516351	0	True				
ANR	2516364	CallExpression	"get_variable_name ( line , false , variable_name , state , parameters )"		2516351	0					
ANR	2516365	Callee	get_variable_name		2516351	0					
ANR	2516366	Identifier	get_variable_name		2516351	0					
ANR	2516367	ArgumentList	line		2516351	1					
ANR	2516368	Argument	line		2516351	0					
ANR	2516369	Identifier	line		2516351	0					
ANR	2516370	Argument	false		2516351	1					
ANR	2516371	Identifier	false		2516351	0					
ANR	2516372	Argument	variable_name		2516351	2					
ANR	2516373	Identifier	variable_name		2516351	0					
ANR	2516374	Argument	state		2516351	3					
ANR	2516375	Identifier	state		2516351	0					
ANR	2516376	Argument	parameters		2516351	4					
ANR	2516377	Identifier	parameters		2516351	0					
ANR	2516378	CompoundStatement		5:74:130:130	2516351	1					
ANR	2516379	IfStatement	"if ( get_file_name ( line , file_name , state , parameters ) )"		2516351	0					
ANR	2516380	Condition	"get_file_name ( line , file_name , state , parameters )"	1025:12:28920:28968	2516351	0	True				
ANR	2516381	CallExpression	"get_file_name ( line , file_name , state , parameters )"		2516351	0					
ANR	2516382	Callee	get_file_name		2516351	0					
ANR	2516383	Identifier	get_file_name		2516351	0					
ANR	2516384	ArgumentList	line		2516351	1					
ANR	2516385	Argument	line		2516351	0					
ANR	2516386	Identifier	line		2516351	0					
ANR	2516387	Argument	file_name		2516351	1					
ANR	2516388	Identifier	file_name		2516351	0					
ANR	2516389	Argument	state		2516351	2					
ANR	2516390	Identifier	state		2516351	0					
ANR	2516391	Argument	parameters		2516351	3					
ANR	2516392	Identifier	parameters		2516351	0					
ANR	2516393	CompoundStatement		7:12:209:245	2516351	1					
ANR	2516394	IdentifierDeclStatement	ifstream xml_file ( file_name . c_str ( ) ) ;	1026:12:28985:29021	2516351	0	True				
ANR	2516395	IdentifierDecl	xml_file ( file_name . c_str ( ) )		2516351	0					
ANR	2516396	IdentifierDeclType	ifstream		2516351	0					
ANR	2516397	Identifier	xml_file		2516351	1					
ANR	2516398	CallExpression	file_name . c_str ( )		2516351	2					
ANR	2516399	Callee	file_name . c_str		2516351	0					
ANR	2516400	MemberAccess	file_name . c_str		2516351	0					
ANR	2516401	Identifier	file_name		2516351	0					
ANR	2516402	Identifier	c_str		2516351	1					
ANR	2516403	ArgumentList			2516351	1					
ANR	2516404	IfStatement	if ( xml_file . bad ( ) )		2516351	1					
ANR	2516405	Condition	xml_file . bad ( )	1028:16:29040:29053	2516351	0	True				
ANR	2516406	CallExpression	xml_file . bad ( )		2516351	0					
ANR	2516407	Callee	xml_file . bad		2516351	0					
ANR	2516408	MemberAccess	xml_file . bad		2516351	0					
ANR	2516409	Identifier	xml_file		2516351	0					
ANR	2516410	Identifier	bad		2516351	1					
ANR	2516411	ArgumentList			2516351	1					
ANR	2516412	CompoundStatement		10:16:298:310	2516351	1					
ANR	2516413	IdentifierDeclStatement	string error ;	1029:16:29074:29086	2516351	0	True				
ANR	2516414	IdentifierDecl	error		2516351	0					
ANR	2516415	IdentifierDeclType	string		2516351	0					
ANR	2516416	Identifier	error		2516351	1					
ANR	2516417	ExpressionStatement	"error = ""Can't read file: """	1030:16:29104:29131	2516351	1	True				
ANR	2516418	AssignmentExpression	"error = ""Can't read file: """		2516351	0		=			
ANR	2516419	Identifier	error		2516351	0					
ANR	2516420	PrimaryExpression	"""Can't read file: """		2516351	1					
ANR	2516421	ExpressionStatement	error += file_name	1031:16:29149:29167	2516351	2	True				
ANR	2516422	AssignmentExpression	error += file_name		2516351	0		+=			
ANR	2516423	Identifier	error		2516351	0					
ANR	2516424	Identifier	file_name		2516351	1					
ANR	2516425	ExpressionStatement	"print_error_message ( error , state )"	1032:16:29185:29218	2516351	3	True				
ANR	2516426	CallExpression	"print_error_message ( error , state )"		2516351	0					
ANR	2516427	Callee	print_error_message		2516351	0					
ANR	2516428	Identifier	print_error_message		2516351	0					
ANR	2516429	ArgumentList	error		2516351	1					
ANR	2516430	Argument	error		2516351	0					
ANR	2516431	Identifier	error		2516351	0					
ANR	2516432	Argument	state		2516351	1					
ANR	2516433	Identifier	state		2516351	0					
ANR	2516434	ElseStatement	else		2516351	0					
ANR	2516435	CompoundStatement		18:16:605:631	2516351	0					
ANR	2516436	IdentifierDeclStatement	ExprList * list ;	1034:16:29257:29279	2516351	0	True				
ANR	2516437	IdentifierDecl	* list		2516351	0					
ANR	2516438	IdentifierDeclType	ExprList *		2516351	0					
ANR	2516439	Identifier	list		2516351	1					
ANR	2516440	IdentifierDeclStatement	ClassAd * classad ;	1035:16:29297:29322	2516351	1	True				
ANR	2516441	IdentifierDecl	* classad		2516351	0					
ANR	2516442	IdentifierDeclType	ClassAd *		2516351	0					
ANR	2516443	Identifier	classad		2516351	1					
ANR	2516444	IdentifierDeclStatement	ClassAdXMLParser parser ;	1036:16:29340:29363	2516351	2	True				
ANR	2516445	IdentifierDecl	parser		2516351	0					
ANR	2516446	IdentifierDeclType	ClassAdXMLParser		2516351	0					
ANR	2516447	Identifier	parser		2516351	1					
ANR	2516448	IdentifierDeclStatement	Variable * variable ;	1037:16:29381:29407	2516351	3	True				
ANR	2516449	IdentifierDecl	* variable		2516351	0					
ANR	2516450	IdentifierDeclType	Variable *		2516351	0					
ANR	2516451	Identifier	variable		2516351	1					
ANR	2516452	ExpressionStatement	list = new ExprList ( )	1039:16:29426:29447	2516351	4	True				
ANR	2516453	AssignmentExpression	list = new ExprList ( )		2516351	0		=			
ANR	2516454	Identifier	list		2516351	0					
ANR	2516455	UnaryExpression	new ExprList ( )		2516351	1					
ANR	2516456	DoStatement	do		2516351	5					
ANR	2516457	CompoundStatement		21:19:692:692	2516351	0					
ANR	2516458	ExpressionStatement	classad = parser . ParseClassAd ( xml_file )	1041:20:29490:29529	2516351	0	True				
ANR	2516459	AssignmentExpression	classad = parser . ParseClassAd ( xml_file )		2516351	0		=			
ANR	2516460	Identifier	classad		2516351	0					
ANR	2516461	CallExpression	parser . ParseClassAd ( xml_file )		2516351	1					
ANR	2516462	Callee	parser . ParseClassAd		2516351	0					
ANR	2516463	MemberAccess	parser . ParseClassAd		2516351	0					
ANR	2516464	Identifier	parser		2516351	0					
ANR	2516465	Identifier	ParseClassAd		2516351	1					
ANR	2516466	ArgumentList	xml_file		2516351	1					
ANR	2516467	Argument	xml_file		2516351	0					
ANR	2516468	Identifier	xml_file		2516351	0					
ANR	2516469	IfStatement	if ( classad != NULL )		2516351	1					
ANR	2516470	Condition	classad != NULL	1042:24:29555:29569	2516351	0	True				
ANR	2516471	EqualityExpression	classad != NULL		2516351	0		!=			
ANR	2516472	Identifier	classad		2516351	0					
ANR	2516473	Identifier	NULL		2516351	1					
ANR	2516474	CompoundStatement		23:41:796:796	2516351	1					
ANR	2516475	ExpressionStatement	list -> push_back ( classad )	1043:24:29598:29622	2516351	0	True				
ANR	2516476	CallExpression	list -> push_back ( classad )		2516351	0					
ANR	2516477	Callee	list -> push_back		2516351	0					
ANR	2516478	PtrMemberAccess	list -> push_back		2516351	0					
ANR	2516479	Identifier	list		2516351	0					
ANR	2516480	Identifier	push_back		2516351	1					
ANR	2516481	ArgumentList	classad		2516351	1					
ANR	2516482	Argument	classad		2516351	0					
ANR	2516483	Identifier	classad		2516351	0					
ANR	2516484	Condition	classad != NULL	1045:25:29671:29685	2516351	1	True				
ANR	2516485	EqualityExpression	classad != NULL		2516351	0		!=			
ANR	2516486	Identifier	classad		2516351	0					
ANR	2516487	Identifier	NULL		2516351	1					
ANR	2516488	ExpressionStatement	"variable = new Variable ( variable_name , list )"	1046:16:29705:29749	2516351	6	True				
ANR	2516489	AssignmentExpression	"variable = new Variable ( variable_name , list )"		2516351	0		=			
ANR	2516490	Identifier	variable		2516351	0					
ANR	2516491	Expression	"variable_name , list"		2516351	1					
ANR	2516492	Identifier	variable_name		2516351	0					
ANR	2516493	Identifier	list		2516351	1					
ANR	2516494	ExpressionStatement	variables [ variable_name ] = variable	1047:16:29767:29802	2516351	7	True				
ANR	2516495	AssignmentExpression	variables [ variable_name ] = variable		2516351	0		=			
ANR	2516496	ArrayIndexing	variables [ variable_name ]		2516351	0					
ANR	2516497	Identifier	variables		2516351	0					
ANR	2516498	Identifier	variable_name		2516351	1					
ANR	2516499	Identifier	variable		2516351	1					
ANR	2516500	IfStatement	if ( parameters . interactive )		2516351	8					
ANR	2516501	Condition	parameters . interactive	1048:20:29824:29845	2516351	0	True				
ANR	2516502	MemberAccess	parameters . interactive		2516351	0					
ANR	2516503	Identifier	parameters		2516351	0					
ANR	2516504	Identifier	interactive		2516351	1					
ANR	2516505	CompoundStatement		29:44:1072:1072	2516351	1					
ANR	2516506	ExpressionStatement	"print_expr ( list , state , parameters )"	1049:20:29870:29905	2516351	0	True				
ANR	2516507	CallExpression	"print_expr ( list , state , parameters )"		2516351	0					
ANR	2516508	Callee	print_expr		2516351	0					
ANR	2516509	Identifier	print_expr		2516351	0					
ANR	2516510	ArgumentList	list		2516351	1					
ANR	2516511	Argument	list		2516351	0					
ANR	2516512	Identifier	list		2516351	0					
ANR	2516513	Argument	state		2516351	1					
ANR	2516514	Identifier	state		2516351	0					
ANR	2516515	Argument	parameters		2516351	2					
ANR	2516516	Identifier	parameters		2516351	0					
ANR	2516517	ReturnStatement	return ;	1054:4:29959:29965	2516351	3	True				
ANR	2516518	ReturnType	void		2516351	1					
ANR	2516519	Identifier	handle_readxml		2516351	2					
ANR	2516520	ParameterList	"string & line , State & state , Parameters & parameters"		2516351	3					
ANR	2516521	Parameter	string & line	1017:4:28704:28719	2516351	0	True				
ANR	2516522	ParameterType	string &		2516351	0					
ANR	2516523	Identifier	line		2516351	1					
ANR	2516524	Parameter	State & state	1018:4:28727:28743	2516351	1	True				
ANR	2516525	ParameterType	State &		2516351	0					
ANR	2516526	Identifier	state		2516351	1					
ANR	2516527	Parameter	Parameters & parameters	1019:4:28751:28772	2516351	2	True				
ANR	2516528	ParameterType	Parameters &		2516351	0					
ANR	2516529	Identifier	parameters		2516351	1					
ANR	2516530	CFGEntryNode	ENTRY		2516351		True				
ANR	2516531	CFGExitNode	EXIT		2516351		True				
ANR	2516532	Symbol	variables		2516351						
ANR	2516533	Symbol	NULL		2516351						
ANR	2516534	Symbol	line		2516351						
ANR	2516535	Symbol	file_name		2516351						
ANR	2516536	Symbol	false		2516351						
ANR	2516537	Symbol	* variables		2516351						
ANR	2516538	Symbol	error		2516351						
ANR	2516539	Symbol	list		2516351						
ANR	2516540	Symbol	xml_file		2516351						
ANR	2516541	Symbol	parser . ParseClassAd		2516351						
ANR	2516542	Symbol	get_variable_name		2516351						
ANR	2516543	Symbol	parser		2516351						
ANR	2516544	Symbol	* variable_name		2516351						
ANR	2516545	Symbol	variable		2516351						
ANR	2516546	Symbol	classad		2516351						
ANR	2516547	Symbol	state		2516351						
ANR	2516548	Symbol	variable_name		2516351						
ANR	2516549	Symbol	xml_file . bad		2516351						
ANR	2516550	Symbol	parameters		2516351						
ANR	2516551	Symbol	get_file_name		2516351						
ANR	2516552	Symbol	parameters . interactive		2516351						
ANR	2516553	DeclStmt									
ANR	2516554	Decl							string	string	new_line
ANR	2516555	DeclStmt									
ANR	2516556	Decl							int	int	index
ANR	2516557	Function	handle_help	1091:0:30716:32105							
ANR	2516558	FunctionDef	handle_help ()		2516557	0					
ANR	2516559	CompoundStatement		1092:0:30739:32105	2516557	0					
ANR	2516560	ExpressionStatement	print_version ( )	1093:4:30745:30760	2516557	0	True				
ANR	2516561	CallExpression	print_version ( )		2516557	0					
ANR	2516562	Callee	print_version		2516557	0					
ANR	2516563	Identifier	print_version		2516557	0					
ANR	2516564	ArgumentList			2516557	1					
ANR	2516565	ExpressionStatement	"cout << ""\\n"""	1095:4:30767:30779	2516557	1	True				
ANR	2516566	ShiftExpression	"cout << ""\\n"""		2516557	0		<<			
ANR	2516567	Identifier	cout		2516557	0					
ANR	2516568	PrimaryExpression	"""\\n"""		2516557	1					
ANR	2516569	ExpressionStatement	"cout << ""Commands:\\n"""	1096:4:30785:30806	2516557	2	True				
ANR	2516570	ShiftExpression	"cout << ""Commands:\\n"""		2516557	0		<<			
ANR	2516571	Identifier	cout		2516557	0					
ANR	2516572	PrimaryExpression	"""Commands:\\n"""		2516557	1					
ANR	2516573	ExpressionStatement	"cout << ""let name = expr   Set a variable to an unevaluated expression.\\n"""	1097:4:30812:30886	2516557	3	True				
ANR	2516574	ShiftExpression	"cout << ""let name = expr   Set a variable to an unevaluated expression.\\n"""		2516557	0		<<			
ANR	2516575	Identifier	cout		2516557	0					
ANR	2516576	PrimaryExpression	"""let name = expr   Set a variable to an unevaluated expression.\\n"""		2516557	1					
ANR	2516577	ExpressionStatement	"cout << ""eval name = expr  Set a variable to an evaluated expression.\\n"""	1098:4:30892:30964	2516557	4	True				
ANR	2516578	ShiftExpression	"cout << ""eval name = expr  Set a variable to an evaluated expression.\\n"""		2516557	0		<<			
ANR	2516579	Identifier	cout		2516557	0					
ANR	2516580	PrimaryExpression	"""eval name = expr  Set a variable to an evaluated expression.\\n"""		2516557	1					
ANR	2516581	ExpressionStatement	"cout << ""same expr1 expr2  Prints a message only if expr1 and expr2 are different.\\n"""	1099:4:30970:31055	2516557	5	True				
ANR	2516582	ShiftExpression	"cout << ""same expr1 expr2  Prints a message only if expr1 and expr2 are different.\\n"""		2516557	0		<<			
ANR	2516583	Identifier	cout		2516557	0					
ANR	2516584	PrimaryExpression	"""same expr1 expr2  Prints a message only if expr1 and expr2 are different.\\n"""		2516557	1					
ANR	2516585	ExpressionStatement	"cout << ""sameq expr1 expr2 Prints a message only if expr1 and expr2 are different.\\n"""	1100:4:31061:31146	2516557	6	True				
ANR	2516586	ShiftExpression	"cout << ""sameq expr1 expr2 Prints a message only if expr1 and expr2 are different.\\n"""		2516557	0		<<			
ANR	2516587	Identifier	cout		2516557	0					
ANR	2516588	PrimaryExpression	"""sameq expr1 expr2 Prints a message only if expr1 and expr2 are different.\\n"""		2516557	1					
ANR	2516589	ExpressionStatement	"cout << ""                   same evaluates its expressions first, sameq doesn't.\\n"""	1101:4:31152:31234	2516557	7	True				
ANR	2516590	ShiftExpression	"cout << ""                   same evaluates its expressions first, sameq doesn't.\\n"""		2516557	0		<<			
ANR	2516591	Identifier	cout		2516557	0					
ANR	2516592	PrimaryExpression	"""                   same evaluates its expressions first, sameq doesn't.\\n"""		2516557	1					
ANR	2516593	ExpressionStatement	"cout << ""diff expr1 expr2  Prints a message only if expr1 and expr2 are the same.\\n"""	1102:4:31240:31324	2516557	8	True				
ANR	2516594	ShiftExpression	"cout << ""diff expr1 expr2  Prints a message only if expr1 and expr2 are the same.\\n"""		2516557	0		<<			
ANR	2516595	Identifier	cout		2516557	0					
ANR	2516596	PrimaryExpression	"""diff expr1 expr2  Prints a message only if expr1 and expr2 are the same.\\n"""		2516557	1					
ANR	2516597	ExpressionStatement	"cout << ""diffq expr1 expr2 Prints a message only if expr1 and expr2 are the same.\\n"""	1103:4:31330:31414	2516557	9	True				
ANR	2516598	ShiftExpression	"cout << ""diffq expr1 expr2 Prints a message only if expr1 and expr2 are the same.\\n"""		2516557	0		<<			
ANR	2516599	Identifier	cout		2516557	0					
ANR	2516600	PrimaryExpression	"""diffq expr1 expr2 Prints a message only if expr1 and expr2 are the same.\\n"""		2516557	1					
ANR	2516601	ExpressionStatement	"cout << ""                   diff evaluates its expressions first, diffq doesn't.\\n"""	1104:4:31420:31502	2516557	10	True				
ANR	2516602	ShiftExpression	"cout << ""                   diff evaluates its expressions first, diffq doesn't.\\n"""		2516557	0		<<			
ANR	2516603	Identifier	cout		2516557	0					
ANR	2516604	PrimaryExpression	"""                   diff evaluates its expressions first, diffq doesn't.\\n"""		2516557	1					
ANR	2516605	ExpressionStatement	"cout << ""set opt value     Sets an option to a particular value.\\n"""	1105:4:31508:31575	2516557	11	True				
ANR	2516606	ShiftExpression	"cout << ""set opt value     Sets an option to a particular value.\\n"""		2516557	0		<<			
ANR	2516607	Identifier	cout		2516557	0					
ANR	2516608	PrimaryExpression	"""set opt value     Sets an option to a particular value.\\n"""		2516557	1					
ANR	2516609	ExpressionStatement	"cout << ""quit              Exit this program.\\n"""	1106:4:31581:31629	2516557	12	True				
ANR	2516610	ShiftExpression	"cout << ""quit              Exit this program.\\n"""		2516557	0		<<			
ANR	2516611	Identifier	cout		2516557	0					
ANR	2516612	PrimaryExpression	"""quit              Exit this program.\\n"""		2516557	1					
ANR	2516613	ExpressionStatement	"cout << ""help              Print this message.\\n"""	1107:4:31635:31684	2516557	13	True				
ANR	2516614	ShiftExpression	"cout << ""help              Print this message.\\n"""		2516557	0		<<			
ANR	2516615	Identifier	cout		2516557	0					
ANR	2516616	PrimaryExpression	"""help              Print this message.\\n"""		2516557	1					
ANR	2516617	ExpressionStatement	"cout << ""\\n"""	1108:4:31690:31702	2516557	14	True				
ANR	2516618	ShiftExpression	"cout << ""\\n"""		2516557	0		<<			
ANR	2516619	Identifier	cout		2516557	0					
ANR	2516620	PrimaryExpression	"""\\n"""		2516557	1					
ANR	2516621	ExpressionStatement	"cout << ""Options (for the set command):\\n"""	1109:4:31708:31750	2516557	15	True				
ANR	2516622	ShiftExpression	"cout << ""Options (for the set command):\\n"""		2516557	0		<<			
ANR	2516623	Identifier	cout		2516557	0					
ANR	2516624	PrimaryExpression	"""Options (for the set command):\\n"""		2516557	1					
ANR	2516625	ExpressionStatement	"cout << ""format              Set the way ClassAds print.\\n"""	1110:4:31756:31815	2516557	16	True				
ANR	2516626	ShiftExpression	"cout << ""format              Set the way ClassAds print.\\n"""		2516557	0		<<			
ANR	2516627	Identifier	cout		2516557	0					
ANR	2516628	PrimaryExpression	"""format              Set the way ClassAds print.\\n"""		2516557	1					
ANR	2516629	ExpressionStatement	"cout << ""  compact           A compact, traditional style\\n"""	1111:4:31821:31881	2516557	17	True				
ANR	2516630	ShiftExpression	"cout << ""  compact           A compact, traditional style\\n"""		2516557	0		<<			
ANR	2516631	Identifier	cout		2516557	0					
ANR	2516632	PrimaryExpression	"""  compact           A compact, traditional style\\n"""		2516557	1					
ANR	2516633	ExpressionStatement	"cout << ""  pretty            Traditional, with more spaces\\n"""	1112:4:31887:31948	2516557	18	True				
ANR	2516634	ShiftExpression	"cout << ""  pretty            Traditional, with more spaces\\n"""		2516557	0		<<			
ANR	2516635	Identifier	cout		2516557	0					
ANR	2516636	PrimaryExpression	"""  pretty            Traditional, with more spaces\\n"""		2516557	1					
ANR	2516637	ExpressionStatement	"cout << ""  xml               A compact XML representation\\n"""	1113:4:31954:32014	2516557	19	True				
ANR	2516638	ShiftExpression	"cout << ""  xml               A compact XML representation\\n"""		2516557	0		<<			
ANR	2516639	Identifier	cout		2516557	0					
ANR	2516640	PrimaryExpression	"""  xml               A compact XML representation\\n"""		2516557	1					
ANR	2516641	ExpressionStatement	"cout << ""  xmlpretty         XML with extra spacing for readability.\\n"""	1114:4:32020:32091	2516557	20	True				
ANR	2516642	ShiftExpression	"cout << ""  xmlpretty         XML with extra spacing for readability.\\n"""		2516557	0		<<			
ANR	2516643	Identifier	cout		2516557	0					
ANR	2516644	PrimaryExpression	"""  xmlpretty         XML with extra spacing for readability.\\n"""		2516557	1					
ANR	2516645	ReturnStatement	return ;	1115:4:32097:32103	2516557	21	True				
ANR	2516646	ReturnType	void		2516557	1					
ANR	2516647	Identifier	handle_help		2516557	2					
ANR	2516648	ParameterList			2516557	3					
ANR	2516649	CFGEntryNode	ENTRY		2516557		True				
ANR	2516650	CFGExitNode	EXIT		2516557		True				
ANR	2516651	Function	get_variable_name	1124:0:32302:34096							
ANR	2516652	FunctionDef	"get_variable_name (string & line , bool swallow_equals , string & variable_name , State & state , Parameters & parameters)"		2516651	0					
ANR	2516653	CompoundStatement		1130:0:32464:34096	2516651	0					
ANR	2516654	IdentifierDeclStatement	int current_position ;	1131:4:32470:32495	2516651	0	True				
ANR	2516655	IdentifierDecl	current_position		2516651	0					
ANR	2516656	IdentifierDeclType	int		2516651	0					
ANR	2516657	Identifier	current_position		2516651	1					
ANR	2516658	IdentifierDeclStatement	int length ;	1132:4:32501:32516	2516651	1	True				
ANR	2516659	IdentifierDecl	length		2516651	0					
ANR	2516660	IdentifierDeclType	int		2516651	0					
ANR	2516661	Identifier	length		2516651	1					
ANR	2516662	IdentifierDeclStatement	bool have_good_name ;	1133:4:32522:32545	2516651	2	True				
ANR	2516663	IdentifierDecl	have_good_name		2516651	0					
ANR	2516664	IdentifierDeclType	bool		2516651	0					
ANR	2516665	Identifier	have_good_name		2516651	1					
ANR	2516666	ExpressionStatement	current_position = 0	1135:4:32552:32572	2516651	3	True				
ANR	2516667	AssignmentExpression	current_position = 0		2516651	0		=			
ANR	2516668	Identifier	current_position		2516651	0					
ANR	2516669	PrimaryExpression	0		2516651	1					
ANR	2516670	ExpressionStatement	length = line . size ( )	1136:4:32578:32608	2516651	4	True				
ANR	2516671	AssignmentExpression	length = line . size ( )		2516651	0		=			
ANR	2516672	Identifier	length		2516651	0					
ANR	2516673	CallExpression	line . size ( )		2516651	1					
ANR	2516674	Callee	line . size		2516651	0					
ANR	2516675	MemberAccess	line . size		2516651	0					
ANR	2516676	Identifier	line		2516651	0					
ANR	2516677	Identifier	size		2516651	1					
ANR	2516678	ArgumentList			2516651	1					
ANR	2516679	ExpressionStatement	"variable_name = """""	1137:4:32614:32635	2516651	5	True				
ANR	2516680	AssignmentExpression	"variable_name = """""		2516651	0		=			
ANR	2516681	Identifier	variable_name		2516651	0					
ANR	2516682	PrimaryExpression	""""""		2516651	1					
ANR	2516683	ExpressionStatement	have_good_name = false	1138:4:32641:32665	2516651	6	True				
ANR	2516684	AssignmentExpression	have_good_name = false		2516651	0		=			
ANR	2516685	Identifier	have_good_name		2516651	0					
ANR	2516686	Identifier	false		2516651	1					
ANR	2516687	WhileStatement	while ( current_position < length && isspace ( line [ current_position ] ) )		2516651	7					
ANR	2516688	Condition	current_position < length && isspace ( line [ current_position ] )	1141:11:32702:32761	2516651	0	True				
ANR	2516689	AndExpression	current_position < length && isspace ( line [ current_position ] )		2516651	0		&&			
ANR	2516690	RelationalExpression	current_position < length		2516651	0		<			
ANR	2516691	Identifier	current_position		2516651	0					
ANR	2516692	Identifier	length		2516651	1					
ANR	2516693	CallExpression	isspace ( line [ current_position ] )		2516651	1					
ANR	2516694	Callee	isspace		2516651	0					
ANR	2516695	Identifier	isspace		2516651	0					
ANR	2516696	ArgumentList	line [ current_position ]		2516651	1					
ANR	2516697	Argument	line [ current_position ]		2516651	0					
ANR	2516698	ArrayIndexing	line [ current_position ]		2516651	0					
ANR	2516699	Identifier	line		2516651	0					
ANR	2516700	Identifier	current_position		2516651	1					
ANR	2516701	CompoundStatement		12:73:299:299	2516651	1					
ANR	2516702	ExpressionStatement	current_position ++	1142:8:32774:32792	2516651	0	True				
ANR	2516703	PostIncDecOperationExpression	current_position ++		2516651	0					
ANR	2516704	Identifier	current_position		2516651	0					
ANR	2516705	IncDec	++		2516651	1					
ANR	2516706	IfStatement	if ( current_position < length && isalpha ( line [ current_position ] ) )		2516651	8					
ANR	2516707	Condition	current_position < length && isalpha ( line [ current_position ] )	1145:8:32834:32893	2516651	0	True				
ANR	2516708	AndExpression	current_position < length && isalpha ( line [ current_position ] )		2516651	0		&&			
ANR	2516709	RelationalExpression	current_position < length		2516651	0		<			
ANR	2516710	Identifier	current_position		2516651	0					
ANR	2516711	Identifier	length		2516651	1					
ANR	2516712	CallExpression	isalpha ( line [ current_position ] )		2516651	1					
ANR	2516713	Callee	isalpha		2516651	0					
ANR	2516714	Identifier	isalpha		2516651	0					
ANR	2516715	ArgumentList	line [ current_position ]		2516651	1					
ANR	2516716	Argument	line [ current_position ]		2516651	0					
ANR	2516717	ArrayIndexing	line [ current_position ]		2516651	0					
ANR	2516718	Identifier	line		2516651	0					
ANR	2516719	Identifier	current_position		2516651	1					
ANR	2516720	CompoundStatement		16:70:431:431	2516651	1					
ANR	2516721	ExpressionStatement	variable_name += line [ current_position ]	1146:8:32906:32945	2516651	0	True				
ANR	2516722	AssignmentExpression	variable_name += line [ current_position ]		2516651	0		+=			
ANR	2516723	Identifier	variable_name		2516651	0					
ANR	2516724	ArrayIndexing	line [ current_position ]		2516651	1					
ANR	2516725	Identifier	line		2516651	0					
ANR	2516726	Identifier	current_position		2516651	1					
ANR	2516727	ExpressionStatement	current_position ++	1147:8:32955:32973	2516651	1	True				
ANR	2516728	PostIncDecOperationExpression	current_position ++		2516651	0					
ANR	2516729	Identifier	current_position		2516651	0					
ANR	2516730	IncDec	++		2516651	1					
ANR	2516731	ExpressionStatement	have_good_name = true	1149:8:33060:33081	2516651	2	True				
ANR	2516732	AssignmentExpression	have_good_name = true		2516651	0		=			
ANR	2516733	Identifier	have_good_name		2516651	0					
ANR	2516734	Identifier	true		2516651	1					
ANR	2516735	WhileStatement	while ( current_position < length && ( isalnum ( line [ current_position ] ) || line [ current_position ] == '_' ) )		2516651	3					
ANR	2516736	Condition	current_position < length && ( isalnum ( line [ current_position ] ) || line [ current_position ] == '_' )	1151:18:33102:33215	2516651	0	True				
ANR	2516737	AndExpression	current_position < length && ( isalnum ( line [ current_position ] ) || line [ current_position ] == '_' )		2516651	0		&&			
ANR	2516738	RelationalExpression	current_position < length		2516651	0		<			
ANR	2516739	Identifier	current_position		2516651	0					
ANR	2516740	Identifier	length		2516651	1					
ANR	2516741	OrExpression	isalnum ( line [ current_position ] ) || line [ current_position ] == '_'		2516651	1		||			
ANR	2516742	CallExpression	isalnum ( line [ current_position ] )		2516651	0					
ANR	2516743	Callee	isalnum		2516651	0					
ANR	2516744	Identifier	isalnum		2516651	0					
ANR	2516745	ArgumentList	line [ current_position ]		2516651	1					
ANR	2516746	Argument	line [ current_position ]		2516651	0					
ANR	2516747	ArrayIndexing	line [ current_position ]		2516651	0					
ANR	2516748	Identifier	line		2516651	0					
ANR	2516749	Identifier	current_position		2516651	1					
ANR	2516750	EqualityExpression	line [ current_position ] == '_'		2516651	1		==			
ANR	2516751	ArrayIndexing	line [ current_position ]		2516651	0					
ANR	2516752	Identifier	line		2516651	0					
ANR	2516753	Identifier	current_position		2516651	1					
ANR	2516754	PrimaryExpression	'_'		2516651	1					
ANR	2516755	CompoundStatement		23:89:753:753	2516651	1					
ANR	2516756	ExpressionStatement	variable_name += line [ current_position ]	1153:12:33232:33271	2516651	0	True				
ANR	2516757	AssignmentExpression	variable_name += line [ current_position ]		2516651	0		+=			
ANR	2516758	Identifier	variable_name		2516651	0					
ANR	2516759	ArrayIndexing	line [ current_position ]		2516651	1					
ANR	2516760	Identifier	line		2516651	0					
ANR	2516761	Identifier	current_position		2516651	1					
ANR	2516762	ExpressionStatement	current_position ++	1154:12:33285:33303	2516651	1	True				
ANR	2516763	PostIncDecOperationExpression	current_position ++		2516651	0					
ANR	2516764	Identifier	current_position		2516651	0					
ANR	2516765	IncDec	++		2516651	1					
ANR	2516766	IfStatement	if ( ! have_good_name )		2516651	9					
ANR	2516767	Condition	! have_good_name	1157:8:33329:33343	2516651	0	True				
ANR	2516768	UnaryOperationExpression	! have_good_name		2516651	0					
ANR	2516769	UnaryOperator	!		2516651	0					
ANR	2516770	Identifier	have_good_name		2516651	1					
ANR	2516771	CompoundStatement		28:25:881:881	2516651	1					
ANR	2516772	ExpressionStatement	"print_error_message ( ""Bad variable name"" , state )"	1158:8:33356:33403	2516651	0	True				
ANR	2516773	CallExpression	"print_error_message ( ""Bad variable name"" , state )"		2516651	0					
ANR	2516774	Callee	print_error_message		2516651	0					
ANR	2516775	Identifier	print_error_message		2516651	0					
ANR	2516776	ArgumentList	"""Bad variable name"""		2516651	1					
ANR	2516777	Argument	"""Bad variable name"""		2516651	0					
ANR	2516778	PrimaryExpression	"""Bad variable name"""		2516651	0					
ANR	2516779	Argument	state		2516651	1					
ANR	2516780	Identifier	state		2516651	0					
ANR	2516781	ElseStatement	else		2516651	0					
ANR	2516782	IfStatement	if ( swallow_equals )		2516651	0					
ANR	2516783	Condition	swallow_equals	1159:15:33420:33433	2516651	0	True				
ANR	2516784	Identifier	swallow_equals		2516651	0					
ANR	2516785	CompoundStatement		30:31:971:971	2516651	1					
ANR	2516786	WhileStatement	while ( current_position < length && isspace ( line [ current_position ] ) )		2516651	0					
ANR	2516787	Condition	current_position < length && isspace ( line [ current_position ] )	1161:15:33480:33539	2516651	0	True				
ANR	2516788	AndExpression	current_position < length && isspace ( line [ current_position ] )		2516651	0		&&			
ANR	2516789	RelationalExpression	current_position < length		2516651	0		<			
ANR	2516790	Identifier	current_position		2516651	0					
ANR	2516791	Identifier	length		2516651	1					
ANR	2516792	CallExpression	isspace ( line [ current_position ] )		2516651	1					
ANR	2516793	Callee	isspace		2516651	0					
ANR	2516794	Identifier	isspace		2516651	0					
ANR	2516795	ArgumentList	line [ current_position ]		2516651	1					
ANR	2516796	Argument	line [ current_position ]		2516651	0					
ANR	2516797	ArrayIndexing	line [ current_position ]		2516651	0					
ANR	2516798	Identifier	line		2516651	0					
ANR	2516799	Identifier	current_position		2516651	1					
ANR	2516800	CompoundStatement		32:77:1077:1077	2516651	1					
ANR	2516801	ExpressionStatement	current_position ++	1162:12:33556:33574	2516651	0	True				
ANR	2516802	PostIncDecOperationExpression	current_position ++		2516651	0					
ANR	2516803	Identifier	current_position		2516651	0					
ANR	2516804	IncDec	++		2516651	1					
ANR	2516805	IfStatement	if ( line [ current_position ] == '=' )		2516651	1					
ANR	2516806	Condition	line [ current_position ] == '='	1164:12:33598:33626	2516651	0	True				
ANR	2516807	EqualityExpression	line [ current_position ] == '='		2516651	0		==			
ANR	2516808	ArrayIndexing	line [ current_position ]		2516651	0					
ANR	2516809	Identifier	line		2516651	0					
ANR	2516810	Identifier	current_position		2516651	1					
ANR	2516811	PrimaryExpression	'='		2516651	1					
ANR	2516812	CompoundStatement		35:43:1164:1164	2516651	1					
ANR	2516813	ExpressionStatement	current_position ++	1165:12:33643:33661	2516651	0	True				
ANR	2516814	PostIncDecOperationExpression	current_position ++		2516651	0					
ANR	2516815	Identifier	current_position		2516651	0					
ANR	2516816	IncDec	++		2516651	1					
ANR	2516817	ElseStatement	else		2516651	0					
ANR	2516818	CompoundStatement		37:15:1213:1213	2516651	0					
ANR	2516819	ExpressionStatement	"print_error_message ( ""Missing equal sign"" , state )"	1167:12:33692:33740	2516651	0	True				
ANR	2516820	CallExpression	"print_error_message ( ""Missing equal sign"" , state )"		2516651	0					
ANR	2516821	Callee	print_error_message		2516651	0					
ANR	2516822	Identifier	print_error_message		2516651	0					
ANR	2516823	ArgumentList	"""Missing equal sign"""		2516651	1					
ANR	2516824	Argument	"""Missing equal sign"""		2516651	0					
ANR	2516825	PrimaryExpression	"""Missing equal sign"""		2516651	0					
ANR	2516826	Argument	state		2516651	1					
ANR	2516827	Identifier	state		2516651	0					
ANR	2516828	ExpressionStatement	have_good_name = false	1168:12:33754:33776	2516651	1	True				
ANR	2516829	AssignmentExpression	have_good_name = false		2516651	0		=			
ANR	2516830	Identifier	have_good_name		2516651	0					
ANR	2516831	Identifier	false		2516651	1					
ANR	2516832	IfStatement	if ( parameters . debug )		2516651	10					
ANR	2516833	Condition	parameters . debug	1172:8:33803:33818	2516651	0	True				
ANR	2516834	MemberAccess	parameters . debug		2516651	0					
ANR	2516835	Identifier	parameters		2516651	0					
ANR	2516836	Identifier	debug		2516651	1					
ANR	2516837	CompoundStatement		43:26:1356:1356	2516651	1					
ANR	2516838	IfStatement	if ( have_good_name )		2516651	0					
ANR	2516839	Condition	have_good_name	1173:12:33835:33848	2516651	0	True				
ANR	2516840	Identifier	have_good_name		2516651	0					
ANR	2516841	CompoundStatement		44:28:1386:1386	2516651	1					
ANR	2516842	ExpressionStatement	"cout << ""# Got variable name: "" << variable_name << endl"	1174:12:33865:33921	2516651	0	True				
ANR	2516843	ShiftExpression	"cout << ""# Got variable name: "" << variable_name << endl"		2516651	0		<<			
ANR	2516844	Identifier	cout		2516651	0					
ANR	2516845	ShiftExpression	"""# Got variable name: "" << variable_name << endl"		2516651	1		<<			
ANR	2516846	PrimaryExpression	"""# Got variable name: """		2516651	0					
ANR	2516847	ShiftExpression	variable_name << endl		2516651	1		<<			
ANR	2516848	Identifier	variable_name		2516651	0					
ANR	2516849	Identifier	endl		2516651	1					
ANR	2516850	ElseStatement	else		2516651	0					
ANR	2516851	CompoundStatement		46:15:1473:1473	2516651	0					
ANR	2516852	ExpressionStatement	"cout << ""# Bad variable name: "" << variable_name << endl"	1176:12:33952:34008	2516651	0	True				
ANR	2516853	ShiftExpression	"cout << ""# Bad variable name: "" << variable_name << endl"		2516651	0		<<			
ANR	2516854	Identifier	cout		2516651	0					
ANR	2516855	ShiftExpression	"""# Bad variable name: "" << variable_name << endl"		2516651	1		<<			
ANR	2516856	PrimaryExpression	"""# Bad variable name: """		2516651	0					
ANR	2516857	ShiftExpression	variable_name << endl		2516651	1		<<			
ANR	2516858	Identifier	variable_name		2516651	0					
ANR	2516859	Identifier	endl		2516651	1					
ANR	2516860	ExpressionStatement	"shorten_line ( line , current_position )"	1180:4:34031:34067	2516651	11	True				
ANR	2516861	CallExpression	"shorten_line ( line , current_position )"		2516651	0					
ANR	2516862	Callee	shorten_line		2516651	0					
ANR	2516863	Identifier	shorten_line		2516651	0					
ANR	2516864	ArgumentList	line		2516651	1					
ANR	2516865	Argument	line		2516651	0					
ANR	2516866	Identifier	line		2516651	0					
ANR	2516867	Argument	current_position		2516651	1					
ANR	2516868	Identifier	current_position		2516651	0					
ANR	2516869	ReturnStatement	return have_good_name ;	1181:4:34073:34094	2516651	12	True				
ANR	2516870	Identifier	have_good_name		2516651	0					
ANR	2516871	ReturnType	bool		2516651	1					
ANR	2516872	Identifier	get_variable_name		2516651	2					
ANR	2516873	ParameterList	"string & line , bool swallow_equals , string & variable_name , State & state , Parameters & parameters"		2516651	3					
ANR	2516874	Parameter	string & line	1125:4:32330:32345	2516651	0	True				
ANR	2516875	ParameterType	string &		2516651	0					
ANR	2516876	Identifier	line		2516651	1					
ANR	2516877	Parameter	bool swallow_equals	1126:4:32353:32377	2516651	1	True				
ANR	2516878	ParameterType	bool		2516651	0					
ANR	2516879	Identifier	swallow_equals		2516651	1					
ANR	2516880	Parameter	string & variable_name	1127:4:32385:32409	2516651	2	True				
ANR	2516881	ParameterType	string &		2516651	0					
ANR	2516882	Identifier	variable_name		2516651	1					
ANR	2516883	Parameter	State & state	1128:4:32417:32433	2516651	3	True				
ANR	2516884	ParameterType	State &		2516651	0					
ANR	2516885	Identifier	state		2516651	1					
ANR	2516886	Parameter	Parameters & parameters	1129:4:32440:32461	2516651	4	True				
ANR	2516887	ParameterType	Parameters &		2516651	0					
ANR	2516888	Identifier	parameters		2516651	1					
ANR	2516889	CFGEntryNode	ENTRY		2516651		True				
ANR	2516890	CFGExitNode	EXIT		2516651		True				
ANR	2516891	Symbol	isalpha		2516651						
ANR	2516892	Symbol	isalnum		2516651						
ANR	2516893	Symbol	line		2516651						
ANR	2516894	Symbol	line . size		2516651						
ANR	2516895	Symbol	current_position		2516651						
ANR	2516896	Symbol	length		2516651						
ANR	2516897	Symbol	false		2516651						
ANR	2516898	Symbol	isspace		2516651						
ANR	2516899	Symbol	* line		2516651						
ANR	2516900	Symbol	parameters . debug		2516651						
ANR	2516901	Symbol	* current_position		2516651						
ANR	2516902	Symbol	have_good_name		2516651						
ANR	2516903	Symbol	true		2516651						
ANR	2516904	Symbol	swallow_equals		2516651						
ANR	2516905	Symbol	variable_name		2516651						
ANR	2516906	Symbol	state		2516651						
ANR	2516907	Symbol	parameters		2516651						
ANR	2516908	Function	get_file_name	1190:0:34289:35364							
ANR	2516909	FunctionDef	"get_file_name (string & line , string & variable_name , State & state , Parameters & parameters)"		2516908	0					
ANR	2516910	CompoundStatement		1195:0:34415:35364	2516908	0					
ANR	2516911	IdentifierDeclStatement	int current_position ;	1196:4:34421:34446	2516908	0	True				
ANR	2516912	IdentifierDecl	current_position		2516908	0					
ANR	2516913	IdentifierDeclType	int		2516908	0					
ANR	2516914	Identifier	current_position		2516908	1					
ANR	2516915	IdentifierDeclStatement	int length ;	1197:4:34452:34467	2516908	1	True				
ANR	2516916	IdentifierDecl	length		2516908	0					
ANR	2516917	IdentifierDeclType	int		2516908	0					
ANR	2516918	Identifier	length		2516908	1					
ANR	2516919	IdentifierDeclStatement	bool have_good_name ;	1198:4:34473:34496	2516908	2	True				
ANR	2516920	IdentifierDecl	have_good_name		2516908	0					
ANR	2516921	IdentifierDeclType	bool		2516908	0					
ANR	2516922	Identifier	have_good_name		2516908	1					
ANR	2516923	ExpressionStatement	current_position = 0	1200:4:34503:34523	2516908	3	True				
ANR	2516924	AssignmentExpression	current_position = 0		2516908	0		=			
ANR	2516925	Identifier	current_position		2516908	0					
ANR	2516926	PrimaryExpression	0		2516908	1					
ANR	2516927	ExpressionStatement	length = line . size ( )	1201:4:34529:34559	2516908	4	True				
ANR	2516928	AssignmentExpression	length = line . size ( )		2516908	0		=			
ANR	2516929	Identifier	length		2516908	0					
ANR	2516930	CallExpression	line . size ( )		2516908	1					
ANR	2516931	Callee	line . size		2516908	0					
ANR	2516932	MemberAccess	line . size		2516908	0					
ANR	2516933	Identifier	line		2516908	0					
ANR	2516934	Identifier	size		2516908	1					
ANR	2516935	ArgumentList			2516908	1					
ANR	2516936	ExpressionStatement	"variable_name = """""	1202:4:34565:34586	2516908	5	True				
ANR	2516937	AssignmentExpression	"variable_name = """""		2516908	0		=			
ANR	2516938	Identifier	variable_name		2516908	0					
ANR	2516939	PrimaryExpression	""""""		2516908	1					
ANR	2516940	ExpressionStatement	have_good_name = false	1203:4:34592:34616	2516908	6	True				
ANR	2516941	AssignmentExpression	have_good_name = false		2516908	0		=			
ANR	2516942	Identifier	have_good_name		2516908	0					
ANR	2516943	Identifier	false		2516908	1					
ANR	2516944	WhileStatement	while ( current_position < length && isspace ( line [ current_position ] ) )		2516908	7					
ANR	2516945	Condition	current_position < length && isspace ( line [ current_position ] )	1206:11:34653:34712	2516908	0	True				
ANR	2516946	AndExpression	current_position < length && isspace ( line [ current_position ] )		2516908	0		&&			
ANR	2516947	RelationalExpression	current_position < length		2516908	0		<			
ANR	2516948	Identifier	current_position		2516908	0					
ANR	2516949	Identifier	length		2516908	1					
ANR	2516950	CallExpression	isspace ( line [ current_position ] )		2516908	1					
ANR	2516951	Callee	isspace		2516908	0					
ANR	2516952	Identifier	isspace		2516908	0					
ANR	2516953	ArgumentList	line [ current_position ]		2516908	1					
ANR	2516954	Argument	line [ current_position ]		2516908	0					
ANR	2516955	ArrayIndexing	line [ current_position ]		2516908	0					
ANR	2516956	Identifier	line		2516908	0					
ANR	2516957	Identifier	current_position		2516908	1					
ANR	2516958	CompoundStatement		12:73:299:299	2516908	1					
ANR	2516959	ExpressionStatement	current_position ++	1207:8:34725:34743	2516908	0	True				
ANR	2516960	PostIncDecOperationExpression	current_position ++		2516908	0					
ANR	2516961	Identifier	current_position		2516908	0					
ANR	2516962	IncDec	++		2516908	1					
ANR	2516963	WhileStatement	while ( current_position < length && ( ! isspace ( line [ current_position ] ) ) )		2516908	8					
ANR	2516964	Condition	current_position < length && ( ! isspace ( line [ current_position ] ) )	1210:14:34787:34864	2516908	0	True				
ANR	2516965	AndExpression	current_position < length && ( ! isspace ( line [ current_position ] ) )		2516908	0		&&			
ANR	2516966	RelationalExpression	current_position < length		2516908	0		<			
ANR	2516967	Identifier	current_position		2516908	0					
ANR	2516968	Identifier	length		2516908	1					
ANR	2516969	UnaryOperationExpression	! isspace ( line [ current_position ] )		2516908	1					
ANR	2516970	UnaryOperator	!		2516908	0					
ANR	2516971	CallExpression	isspace ( line [ current_position ] )		2516908	1					
ANR	2516972	Callee	isspace		2516908	0					
ANR	2516973	Identifier	isspace		2516908	0					
ANR	2516974	ArgumentList	line [ current_position ]		2516908	1					
ANR	2516975	Argument	line [ current_position ]		2516908	0					
ANR	2516976	ArrayIndexing	line [ current_position ]		2516908	0					
ANR	2516977	Identifier	line		2516908	0					
ANR	2516978	Identifier	current_position		2516908	1					
ANR	2516979	CompoundStatement		17:53:451:451	2516908	1					
ANR	2516980	ExpressionStatement	have_good_name = true	1212:8:34877:34898	2516908	0	True				
ANR	2516981	AssignmentExpression	have_good_name = true		2516908	0		=			
ANR	2516982	Identifier	have_good_name		2516908	0					
ANR	2516983	Identifier	true		2516908	1					
ANR	2516984	ExpressionStatement	variable_name += line [ current_position ]	1213:8:34908:34947	2516908	1	True				
ANR	2516985	AssignmentExpression	variable_name += line [ current_position ]		2516908	0		+=			
ANR	2516986	Identifier	variable_name		2516908	0					
ANR	2516987	ArrayIndexing	line [ current_position ]		2516908	1					
ANR	2516988	Identifier	line		2516908	0					
ANR	2516989	Identifier	current_position		2516908	1					
ANR	2516990	ExpressionStatement	current_position ++	1214:8:34957:34975	2516908	2	True				
ANR	2516991	PostIncDecOperationExpression	current_position ++		2516908	0					
ANR	2516992	Identifier	current_position		2516908	0					
ANR	2516993	IncDec	++		2516908	1					
ANR	2516994	IfStatement	if ( ! have_good_name )		2516908	9					
ANR	2516995	Condition	! have_good_name	1216:8:34991:35005	2516908	0	True				
ANR	2516996	UnaryOperationExpression	! have_good_name		2516908	0					
ANR	2516997	UnaryOperator	!		2516908	0					
ANR	2516998	Identifier	have_good_name		2516908	1					
ANR	2516999	CompoundStatement		22:25:592:592	2516908	1					
ANR	2517000	ExpressionStatement	"print_error_message ( ""Bad file name"" , state )"	1217:8:35018:35061	2516908	0	True				
ANR	2517001	CallExpression	"print_error_message ( ""Bad file name"" , state )"		2516908	0					
ANR	2517002	Callee	print_error_message		2516908	0					
ANR	2517003	Identifier	print_error_message		2516908	0					
ANR	2517004	ArgumentList	"""Bad file name"""		2516908	1					
ANR	2517005	Argument	"""Bad file name"""		2516908	0					
ANR	2517006	PrimaryExpression	"""Bad file name"""		2516908	0					
ANR	2517007	Argument	state		2516908	1					
ANR	2517008	Identifier	state		2516908	0					
ANR	2517009	IfStatement	if ( parameters . debug )		2516908	10					
ANR	2517010	Condition	parameters . debug	1220:8:35079:35094	2516908	0	True				
ANR	2517011	MemberAccess	parameters . debug		2516908	0					
ANR	2517012	Identifier	parameters		2516908	0					
ANR	2517013	Identifier	debug		2516908	1					
ANR	2517014	CompoundStatement		26:26:681:681	2516908	1					
ANR	2517015	IfStatement	if ( have_good_name )		2516908	0					
ANR	2517016	Condition	have_good_name	1221:12:35111:35124	2516908	0	True				
ANR	2517017	Identifier	have_good_name		2516908	0					
ANR	2517018	CompoundStatement		27:28:711:711	2516908	1					
ANR	2517019	ExpressionStatement	"cout << ""# Got file name: "" << variable_name << endl"	1222:12:35141:35193	2516908	0	True				
ANR	2517020	ShiftExpression	"cout << ""# Got file name: "" << variable_name << endl"		2516908	0		<<			
ANR	2517021	Identifier	cout		2516908	0					
ANR	2517022	ShiftExpression	"""# Got file name: "" << variable_name << endl"		2516908	1		<<			
ANR	2517023	PrimaryExpression	"""# Got file name: """		2516908	0					
ANR	2517024	ShiftExpression	variable_name << endl		2516908	1		<<			
ANR	2517025	Identifier	variable_name		2516908	0					
ANR	2517026	Identifier	endl		2516908	1					
ANR	2517027	ElseStatement	else		2516908	0					
ANR	2517028	CompoundStatement		29:15:794:794	2516908	0					
ANR	2517029	ExpressionStatement	"cout << ""# Bad file name: "" << variable_name << endl"	1224:12:35224:35276	2516908	0	True				
ANR	2517030	ShiftExpression	"cout << ""# Bad file name: "" << variable_name << endl"		2516908	0		<<			
ANR	2517031	Identifier	cout		2516908	0					
ANR	2517032	ShiftExpression	"""# Bad file name: "" << variable_name << endl"		2516908	1		<<			
ANR	2517033	PrimaryExpression	"""# Bad file name: """		2516908	0					
ANR	2517034	ShiftExpression	variable_name << endl		2516908	1		<<			
ANR	2517035	Identifier	variable_name		2516908	0					
ANR	2517036	Identifier	endl		2516908	1					
ANR	2517037	ExpressionStatement	"shorten_line ( line , current_position )"	1228:4:35299:35335	2516908	11	True				
ANR	2517038	CallExpression	"shorten_line ( line , current_position )"		2516908	0					
ANR	2517039	Callee	shorten_line		2516908	0					
ANR	2517040	Identifier	shorten_line		2516908	0					
ANR	2517041	ArgumentList	line		2516908	1					
ANR	2517042	Argument	line		2516908	0					
ANR	2517043	Identifier	line		2516908	0					
ANR	2517044	Argument	current_position		2516908	1					
ANR	2517045	Identifier	current_position		2516908	0					
ANR	2517046	ReturnStatement	return have_good_name ;	1229:4:35341:35362	2516908	12	True				
ANR	2517047	Identifier	have_good_name		2516908	0					
ANR	2517048	ReturnType	bool		2516908	1					
ANR	2517049	Identifier	get_file_name		2516908	2					
ANR	2517050	ParameterList	"string & line , string & variable_name , State & state , Parameters & parameters"		2516908	3					
ANR	2517051	Parameter	string & line	1191:4:34313:34328	2516908	0	True				
ANR	2517052	ParameterType	string &		2516908	0					
ANR	2517053	Identifier	line		2516908	1					
ANR	2517054	Parameter	string & variable_name	1192:4:34336:34360	2516908	1	True				
ANR	2517055	ParameterType	string &		2516908	0					
ANR	2517056	Identifier	variable_name		2516908	1					
ANR	2517057	Parameter	State & state	1193:4:34368:34384	2516908	2	True				
ANR	2517058	ParameterType	State &		2516908	0					
ANR	2517059	Identifier	state		2516908	1					
ANR	2517060	Parameter	Parameters & parameters	1194:4:34391:34412	2516908	3	True				
ANR	2517061	ParameterType	Parameters &		2516908	0					
ANR	2517062	Identifier	parameters		2516908	1					
ANR	2517063	CFGEntryNode	ENTRY		2516908		True				
ANR	2517064	CFGExitNode	EXIT		2516908		True				
ANR	2517065	Symbol	line		2516908						
ANR	2517066	Symbol	line . size		2516908						
ANR	2517067	Symbol	current_position		2516908						
ANR	2517068	Symbol	length		2516908						
ANR	2517069	Symbol	false		2516908						
ANR	2517070	Symbol	isspace		2516908						
ANR	2517071	Symbol	* line		2516908						
ANR	2517072	Symbol	parameters . debug		2516908						
ANR	2517073	Symbol	* current_position		2516908						
ANR	2517074	Symbol	have_good_name		2516908						
ANR	2517075	Symbol	true		2516908						
ANR	2517076	Symbol	variable_name		2516908						
ANR	2517077	Symbol	state		2516908						
ANR	2517078	Symbol	parameters		2516908						
ANR	2517079	DeclStmt									
ANR	2517080	Decl							int	int	offset
ANR	2517081	DeclStmt									
ANR	2517082	Decl							ExprTree	ExprTree *	tree
ANR	2517083	DeclStmt									
ANR	2517084	Decl							ClassAdParser	ClassAdParser	parser
ANR	2517085	DeclStmt									
ANR	2517086	Decl							StringLexerSource	StringLexerSource	lexer_source
ANR	2517087	Function	get_two_exprs	1265:0:36209:37655							
ANR	2517088	FunctionDef	"get_two_exprs (string & line , ExprTree * & tree1 , ExprTree * & tree2 , State & state , Parameters & parameters)"		2517087	0					
ANR	2517089	CompoundStatement		1271:0:36354:37655	2517087	0					
ANR	2517090	IdentifierDeclStatement	int offset ;	1272:4:36360:36370	2517087	0	True				
ANR	2517091	IdentifierDecl	offset		2517087	0					
ANR	2517092	IdentifierDeclType	int		2517087	0					
ANR	2517093	Identifier	offset		2517087	1					
ANR	2517094	IdentifierDeclStatement	ClassAdParser parser ;	1273:4:36376:36396	2517087	1	True				
ANR	2517095	IdentifierDecl	parser		2517087	0					
ANR	2517096	IdentifierDeclType	ClassAdParser		2517087	0					
ANR	2517097	Identifier	parser		2517087	1					
ANR	2517098	IdentifierDeclStatement	StringLexerSource lexer_source ( & line ) ;	1274:4:36402:36439	2517087	2	True				
ANR	2517099	IdentifierDecl	lexer_source ( & line )		2517087	0					
ANR	2517100	IdentifierDeclType	StringLexerSource		2517087	0					
ANR	2517101	Identifier	lexer_source		2517087	1					
ANR	2517102	UnaryOperationExpression	& line		2517087	2					
ANR	2517103	UnaryOperator	&		2517087	0					
ANR	2517104	Identifier	line		2517087	1					
ANR	2517105	ExpressionStatement	"tree1 = parser . ParseExpression ( & lexer_source , false )"	1276:4:36446:36498	2517087	3	True				
ANR	2517106	AssignmentExpression	"tree1 = parser . ParseExpression ( & lexer_source , false )"		2517087	0		=			
ANR	2517107	Identifier	tree1		2517087	0					
ANR	2517108	CallExpression	"parser . ParseExpression ( & lexer_source , false )"		2517087	1					
ANR	2517109	Callee	parser . ParseExpression		2517087	0					
ANR	2517110	MemberAccess	parser . ParseExpression		2517087	0					
ANR	2517111	Identifier	parser		2517087	0					
ANR	2517112	Identifier	ParseExpression		2517087	1					
ANR	2517113	ArgumentList	& lexer_source		2517087	1					
ANR	2517114	Argument	& lexer_source		2517087	0					
ANR	2517115	UnaryOperationExpression	& lexer_source		2517087	0					
ANR	2517116	UnaryOperator	&		2517087	0					
ANR	2517117	Identifier	lexer_source		2517087	1					
ANR	2517118	Argument	false		2517087	1					
ANR	2517119	Identifier	false		2517087	0					
ANR	2517120	IfStatement	if ( tree1 == NULL )		2517087	4					
ANR	2517121	Condition	tree1 == NULL	1277:8:36508:36520	2517087	0	True				
ANR	2517122	EqualityExpression	tree1 == NULL		2517087	0		==			
ANR	2517123	Identifier	tree1		2517087	0					
ANR	2517124	Identifier	NULL		2517087	1					
ANR	2517125	CompoundStatement		7:23:168:168	2517087	1					
ANR	2517126	ExpressionStatement	"print_error_message ( ""Couldn't parse first expression."" , state )"	1278:8:36533:36595	2517087	0	True				
ANR	2517127	CallExpression	"print_error_message ( ""Couldn't parse first expression."" , state )"		2517087	0					
ANR	2517128	Callee	print_error_message		2517087	0					
ANR	2517129	Identifier	print_error_message		2517087	0					
ANR	2517130	ArgumentList	"""Couldn't parse first expression."""		2517087	1					
ANR	2517131	Argument	"""Couldn't parse first expression."""		2517087	0					
ANR	2517132	PrimaryExpression	"""Couldn't parse first expression."""		2517087	0					
ANR	2517133	Argument	state		2517087	1					
ANR	2517134	Identifier	state		2517087	0					
ANR	2517135	ExpressionStatement	tree2 = NULL	1279:8:36605:36617	2517087	1	True				
ANR	2517136	AssignmentExpression	tree2 = NULL		2517087	0		=			
ANR	2517137	Identifier	tree2		2517087	0					
ANR	2517138	Identifier	NULL		2517087	1					
ANR	2517139	ElseStatement	else		2517087	0					
ANR	2517140	CompoundStatement		10:11:275:275	2517087	0					
ANR	2517141	IfStatement	if ( parameters . debug )		2517087	0					
ANR	2517142	Condition	parameters . debug	1281:12:36644:36659	2517087	0	True				
ANR	2517143	MemberAccess	parameters . debug		2517087	0					
ANR	2517144	Identifier	parameters		2517087	0					
ANR	2517145	Identifier	debug		2517087	1					
ANR	2517146	CompoundStatement		11:30:307:307	2517087	1					
ANR	2517147	ExpressionStatement	"cout << ""# Tree1: """	1282:12:36676:36695	2517087	0	True				
ANR	2517148	ShiftExpression	"cout << ""# Tree1: """		2517087	0		<<			
ANR	2517149	Identifier	cout		2517087	0					
ANR	2517150	PrimaryExpression	"""# Tree1: """		2517087	1					
ANR	2517151	ExpressionStatement	"print_expr ( tree1 , state , parameters )"	1283:12:36710:36746	2517087	1	True				
ANR	2517152	CallExpression	"print_expr ( tree1 , state , parameters )"		2517087	0					
ANR	2517153	Callee	print_expr		2517087	0					
ANR	2517154	Identifier	print_expr		2517087	0					
ANR	2517155	ArgumentList	tree1		2517087	1					
ANR	2517156	Argument	tree1		2517087	0					
ANR	2517157	Identifier	tree1		2517087	0					
ANR	2517158	Argument	state		2517087	1					
ANR	2517159	Identifier	state		2517087	0					
ANR	2517160	Argument	parameters		2517087	2					
ANR	2517161	Identifier	parameters		2517087	0					
ANR	2517162	ExpressionStatement	cout << endl	1284:12:36761:36773	2517087	2	True				
ANR	2517163	ShiftExpression	cout << endl		2517087	0		<<			
ANR	2517164	Identifier	cout		2517087	0					
ANR	2517165	Identifier	endl		2517087	1					
ANR	2517166	IfStatement	if ( parser . PeekToken ( ) != Lexer :: LEX_COMMA )		2517087	1					
ANR	2517167	Condition	parser . PeekToken ( ) != Lexer :: LEX_COMMA	1287:12:36802:36839	2517087	0	True				
ANR	2517168	EqualityExpression	parser . PeekToken ( ) != Lexer :: LEX_COMMA		2517087	0		!=			
ANR	2517169	CallExpression	parser . PeekToken ( )		2517087	0					
ANR	2517170	Callee	parser . PeekToken		2517087	0					
ANR	2517171	MemberAccess	parser . PeekToken		2517087	0					
ANR	2517172	Identifier	parser		2517087	0					
ANR	2517173	Identifier	PeekToken		2517087	1					
ANR	2517174	ArgumentList			2517087	1					
ANR	2517175	Identifier	Lexer :: LEX_COMMA		2517087	1					
ANR	2517176	CompoundStatement		17:52:487:487	2517087	1					
ANR	2517177	ExpressionStatement	"print_error_message ( ""Missing comma.\\n"" , state )"	1288:12:36856:36902	2517087	0	True				
ANR	2517178	CallExpression	"print_error_message ( ""Missing comma.\\n"" , state )"		2517087	0					
ANR	2517179	Callee	print_error_message		2517087	0					
ANR	2517180	Identifier	print_error_message		2517087	0					
ANR	2517181	ArgumentList	"""Missing comma.\\n"""		2517087	1					
ANR	2517182	Argument	"""Missing comma.\\n"""		2517087	0					
ANR	2517183	PrimaryExpression	"""Missing comma.\\n"""		2517087	0					
ANR	2517184	Argument	state		2517087	1					
ANR	2517185	Identifier	state		2517087	0					
ANR	2517186	Statement	delete	1289:12:36916:36921	2517087	1	True				
ANR	2517187	ExpressionStatement	tree1	1289:19:36923:36928	2517087	2	True				
ANR	2517188	Identifier	tree1		2517087	0					
ANR	2517189	ExpressionStatement	tree1 = NULL	1290:12:36942:36954	2517087	3	True				
ANR	2517190	AssignmentExpression	tree1 = NULL		2517087	0		=			
ANR	2517191	Identifier	tree1		2517087	0					
ANR	2517192	Identifier	NULL		2517087	1					
ANR	2517193	ExpressionStatement	tree2 = NULL	1291:12:36968:36980	2517087	4	True				
ANR	2517194	AssignmentExpression	tree2 = NULL		2517087	0		=			
ANR	2517195	Identifier	tree2		2517087	0					
ANR	2517196	Identifier	NULL		2517087	1					
ANR	2517197	ElseStatement	else		2517087	0					
ANR	2517198	CompoundStatement		22:15:642:642	2517087	0					
ANR	2517199	ExpressionStatement	parser . ConsumeToken ( )	1293:12:37011:37032	2517087	0	True				
ANR	2517200	CallExpression	parser . ConsumeToken ( )		2517087	0					
ANR	2517201	Callee	parser . ConsumeToken		2517087	0					
ANR	2517202	MemberAccess	parser . ConsumeToken		2517087	0					
ANR	2517203	Identifier	parser		2517087	0					
ANR	2517204	Identifier	ConsumeToken		2517087	1					
ANR	2517205	ArgumentList			2517087	1					
ANR	2517206	ExpressionStatement	tree2 = parser . ParseNextExpression ( )	1294:12:37046:37082	2517087	1	True				
ANR	2517207	AssignmentExpression	tree2 = parser . ParseNextExpression ( )		2517087	0		=			
ANR	2517208	Identifier	tree2		2517087	0					
ANR	2517209	CallExpression	parser . ParseNextExpression ( )		2517087	1					
ANR	2517210	Callee	parser . ParseNextExpression		2517087	0					
ANR	2517211	MemberAccess	parser . ParseNextExpression		2517087	0					
ANR	2517212	Identifier	parser		2517087	0					
ANR	2517213	Identifier	ParseNextExpression		2517087	1					
ANR	2517214	ArgumentList			2517087	1					
ANR	2517215	ExpressionStatement	offset = lexer_source . GetCurrentLocation ( )	1295:12:37096:37138	2517087	2	True				
ANR	2517216	AssignmentExpression	offset = lexer_source . GetCurrentLocation ( )		2517087	0		=			
ANR	2517217	Identifier	offset		2517087	0					
ANR	2517218	CallExpression	lexer_source . GetCurrentLocation ( )		2517087	1					
ANR	2517219	Callee	lexer_source . GetCurrentLocation		2517087	0					
ANR	2517220	MemberAccess	lexer_source . GetCurrentLocation		2517087	0					
ANR	2517221	Identifier	lexer_source		2517087	0					
ANR	2517222	Identifier	GetCurrentLocation		2517087	1					
ANR	2517223	ArgumentList			2517087	1					
ANR	2517224	ExpressionStatement	"shorten_line ( line , offset )"	1296:12:37152:37178	2517087	3	True				
ANR	2517225	CallExpression	"shorten_line ( line , offset )"		2517087	0					
ANR	2517226	Callee	shorten_line		2517087	0					
ANR	2517227	Identifier	shorten_line		2517087	0					
ANR	2517228	ArgumentList	line		2517087	1					
ANR	2517229	Argument	line		2517087	0					
ANR	2517230	Identifier	line		2517087	0					
ANR	2517231	Argument	offset		2517087	1					
ANR	2517232	Identifier	offset		2517087	0					
ANR	2517233	IfStatement	if ( tree2 == NULL )		2517087	4					
ANR	2517234	Condition	tree2 == NULL	1297:16:37196:37208	2517087	0	True				
ANR	2517235	EqualityExpression	tree2 == NULL		2517087	0		==			
ANR	2517236	Identifier	tree2		2517087	0					
ANR	2517237	Identifier	NULL		2517087	1					
ANR	2517238	CompoundStatement		27:31:856:856	2517087	1					
ANR	2517239	ExpressionStatement	"print_error_message ( ""Couldn't parse second expression."" , state )"	1298:16:37229:37292	2517087	0	True				
ANR	2517240	CallExpression	"print_error_message ( ""Couldn't parse second expression."" , state )"		2517087	0					
ANR	2517241	Callee	print_error_message		2517087	0					
ANR	2517242	Identifier	print_error_message		2517087	0					
ANR	2517243	ArgumentList	"""Couldn't parse second expression."""		2517087	1					
ANR	2517244	Argument	"""Couldn't parse second expression."""		2517087	0					
ANR	2517245	PrimaryExpression	"""Couldn't parse second expression."""		2517087	0					
ANR	2517246	Argument	state		2517087	1					
ANR	2517247	Identifier	state		2517087	0					
ANR	2517248	Statement	delete	1299:16:37310:37315	2517087	1	True				
ANR	2517249	ExpressionStatement	tree1	1299:23:37317:37322	2517087	2	True				
ANR	2517250	Identifier	tree1		2517087	0					
ANR	2517251	ExpressionStatement	tree1 = NULL	1300:16:37340:37352	2517087	3	True				
ANR	2517252	AssignmentExpression	tree1 = NULL		2517087	0		=			
ANR	2517253	Identifier	tree1		2517087	0					
ANR	2517254	Identifier	NULL		2517087	1					
ANR	2517255	ElseStatement	else		2517087	0					
ANR	2517256	IfStatement	if ( parameters . debug )		2517087	0					
ANR	2517257	Condition	parameters . debug	1301:23:37377:37392	2517087	0	True				
ANR	2517258	MemberAccess	parameters . debug		2517087	0					
ANR	2517259	Identifier	parameters		2517087	0					
ANR	2517260	Identifier	debug		2517087	1					
ANR	2517261	CompoundStatement		31:40:1039:1039	2517087	1					
ANR	2517262	ExpressionStatement	"cout << ""# Tree2: """	1302:16:37412:37431	2517087	0	True				
ANR	2517263	ShiftExpression	"cout << ""# Tree2: """		2517087	0		<<			
ANR	2517264	Identifier	cout		2517087	0					
ANR	2517265	PrimaryExpression	"""# Tree2: """		2517087	1					
ANR	2517266	ExpressionStatement	"print_expr ( tree2 , state , parameters )"	1303:16:37450:37486	2517087	1	True				
ANR	2517267	CallExpression	"print_expr ( tree2 , state , parameters )"		2517087	0					
ANR	2517268	Callee	print_expr		2517087	0					
ANR	2517269	Identifier	print_expr		2517087	0					
ANR	2517270	ArgumentList	tree2		2517087	1					
ANR	2517271	Argument	tree2		2517087	0					
ANR	2517272	Identifier	tree2		2517087	0					
ANR	2517273	Argument	state		2517087	1					
ANR	2517274	Identifier	state		2517087	0					
ANR	2517275	Argument	parameters		2517087	2					
ANR	2517276	Identifier	parameters		2517087	0					
ANR	2517277	ExpressionStatement	"cout << ""# Tree1: """	1304:16:37505:37524	2517087	2	True				
ANR	2517278	ShiftExpression	"cout << ""# Tree1: """		2517087	0		<<			
ANR	2517279	Identifier	cout		2517087	0					
ANR	2517280	PrimaryExpression	"""# Tree1: """		2517087	1					
ANR	2517281	ExpressionStatement	"print_expr ( tree1 , state , parameters )"	1305:16:37543:37579	2517087	3	True				
ANR	2517282	CallExpression	"print_expr ( tree1 , state , parameters )"		2517087	0					
ANR	2517283	Callee	print_expr		2517087	0					
ANR	2517284	Identifier	print_expr		2517087	0					
ANR	2517285	ArgumentList	tree1		2517087	1					
ANR	2517286	Argument	tree1		2517087	0					
ANR	2517287	Identifier	tree1		2517087	0					
ANR	2517288	Argument	state		2517087	1					
ANR	2517289	Identifier	state		2517087	0					
ANR	2517290	Argument	parameters		2517087	2					
ANR	2517291	Identifier	parameters		2517087	0					
ANR	2517292	ExpressionStatement	cout << endl	1306:16:37598:37610	2517087	4	True				
ANR	2517293	ShiftExpression	cout << endl		2517087	0		<<			
ANR	2517294	Identifier	cout		2517087	0					
ANR	2517295	Identifier	endl		2517087	1					
ANR	2517296	ReturnStatement	return ;	1311:4:37647:37653	2517087	5	True				
ANR	2517297	ReturnType	void		2517087	1					
ANR	2517298	Identifier	get_two_exprs		2517087	2					
ANR	2517299	ParameterList	"string & line , ExprTree * & tree1 , ExprTree * & tree2 , State & state , Parameters & parameters"		2517087	3					
ANR	2517300	Parameter	string & line	1266:4:36233:36248	2517087	0	True				
ANR	2517301	ParameterType	string &		2517087	0					
ANR	2517302	Identifier	line		2517087	1					
ANR	2517303	Parameter	ExprTree * & tree1	1267:4:36256:36273	2517087	1	True				
ANR	2517304	ParameterType	ExprTree * &		2517087	0					
ANR	2517305	Identifier	tree1		2517087	1					
ANR	2517306	Parameter	ExprTree * & tree2	1268:4:36281:36298	2517087	2	True				
ANR	2517307	ParameterType	ExprTree * &		2517087	0					
ANR	2517308	Identifier	tree2		2517087	1					
ANR	2517309	Parameter	State & state	1269:4:36306:36322	2517087	3	True				
ANR	2517310	ParameterType	State &		2517087	0					
ANR	2517311	Identifier	state		2517087	1					
ANR	2517312	Parameter	Parameters & parameters	1270:4:36330:36351	2517087	4	True				
ANR	2517313	ParameterType	Parameters &		2517087	0					
ANR	2517314	Identifier	parameters		2517087	1					
ANR	2517315	CFGEntryNode	ENTRY		2517087		True				
ANR	2517316	CFGExitNode	EXIT		2517087		True				
ANR	2517317	Symbol	NULL		2517087						
ANR	2517318	Symbol	offset		2517087						
ANR	2517319	Symbol	& lexer_source		2517087						
ANR	2517320	Symbol	parser . ParseExpression		2517087						
ANR	2517321	Symbol	line		2517087						
ANR	2517322	Symbol	false		2517087						
ANR	2517323	Symbol	parser . PeekToken		2517087						
ANR	2517324	Symbol	tree1		2517087						
ANR	2517325	Symbol	parser . ParseNextExpression		2517087						
ANR	2517326	Symbol	tree2		2517087						
ANR	2517327	Symbol	lexer_source . GetCurrentLocation		2517087						
ANR	2517328	Symbol	parameters . debug		2517087						
ANR	2517329	Symbol	lexer_source		2517087						
ANR	2517330	Symbol	parser		2517087						
ANR	2517331	Symbol	Lexer :: LEX_COMMA		2517087						
ANR	2517332	Symbol	state		2517087						
ANR	2517333	Symbol	parameters		2517087						
ANR	2517334	DeclStmt									
ANR	2517335	Decl							string	string	output
ANR	2517336	DeclStmt									
ANR	2517337	Decl							ClassAdUnParser	ClassAdUnParser	unparser
ANR	2517338	DeclStmt									
ANR	2517339	Decl							PrettyPrint	PrettyPrint	unparser
ANR	2517340	DeclStmt									
ANR	2517341	Decl							ClassAdXMLUnParser	ClassAdXMLUnParser	unparser
ANR	2517342	DeclStmt									
ANR	2517343	Decl							ClassAdXMLUnParser	ClassAdXMLUnParser	unparser
ANR	2517344	DeclStmt									
ANR	2517345	Decl							ClassAd	ClassAd	classad
ANR	2517346	DeclStmt									
ANR	2517347	Decl							bool	bool	success
ANR	2517348	Function	shorten_line	1373:0:39233:39558							
ANR	2517349	FunctionDef	"shorten_line (string & line , int offset)"		2517348	0					
ANR	2517350	CompoundStatement		1376:0:39290:39558	2517348	0					
ANR	2517351	IfStatement	if ( offset < ( int ) line . size ( ) )		2517348	0					
ANR	2517352	Condition	offset < ( int ) line . size ( )	1379:8:39442:39467	2517348	0	True				
ANR	2517353	RelationalExpression	offset < ( int ) line . size ( )		2517348	0		<			
ANR	2517354	Identifier	offset		2517348	0					
ANR	2517355	CastExpression	( int ) line . size ( )		2517348	1					
ANR	2517356	CastTarget	int		2517348	0					
ANR	2517357	CallExpression	line . size ( )		2517348	1					
ANR	2517358	Callee	line . size		2517348	0					
ANR	2517359	MemberAccess	line . size		2517348	0					
ANR	2517360	Identifier	line		2517348	0					
ANR	2517361	Identifier	size		2517348	1					
ANR	2517362	ArgumentList			2517348	1					
ANR	2517363	CompoundStatement		4:36:179:179	2517348	1					
ANR	2517364	ExpressionStatement	line = line . substr ( offset )	1380:8:39480:39506	2517348	0	True				
ANR	2517365	AssignmentExpression	line = line . substr ( offset )		2517348	0		=			
ANR	2517366	Identifier	line		2517348	0					
ANR	2517367	CallExpression	line . substr ( offset )		2517348	1					
ANR	2517368	Callee	line . substr		2517348	0					
ANR	2517369	MemberAccess	line . substr		2517348	0					
ANR	2517370	Identifier	line		2517348	0					
ANR	2517371	Identifier	substr		2517348	1					
ANR	2517372	ArgumentList	offset		2517348	1					
ANR	2517373	Argument	offset		2517348	0					
ANR	2517374	Identifier	offset		2517348	0					
ANR	2517375	ElseStatement	else		2517348	0					
ANR	2517376	CompoundStatement		6:11:228:228	2517348	0					
ANR	2517377	ExpressionStatement	"line = """""	1382:8:39529:39538	2517348	0	True				
ANR	2517378	AssignmentExpression	"line = """""		2517348	0		=			
ANR	2517379	Identifier	line		2517348	0					
ANR	2517380	PrimaryExpression	""""""		2517348	1					
ANR	2517381	ReturnStatement	return ;	1384:4:39550:39556	2517348	1	True				
ANR	2517382	ReturnType	void		2517348	1					
ANR	2517383	Identifier	shorten_line		2517348	2					
ANR	2517384	ParameterList	"string & line , int offset"		2517348	3					
ANR	2517385	Parameter	string & line	1374:4:39256:39267	2517348	0	True				
ANR	2517386	ParameterType	string &		2517348	0					
ANR	2517387	Identifier	line		2517348	1					
ANR	2517388	Parameter	int offset	1375:4:39275:39287	2517348	1	True				
ANR	2517389	ParameterType	int		2517348	0					
ANR	2517390	Identifier	offset		2517348	1					
ANR	2517391	CFGEntryNode	ENTRY		2517348		True				
ANR	2517392	CFGExitNode	EXIT		2517348		True				
ANR	2517393	Symbol	offset		2517348						
ANR	2517394	Symbol	line		2517348						
ANR	2517395	Symbol	line . substr		2517348						
ANR	2517396	Symbol	line . size		2517348						
ANR	2517397	Function	print_version	1393:0:39751:39935							
ANR	2517398	FunctionDef	print_version ()		2517397	0					
ANR	2517399	CompoundStatement		1394:0:39776:39935	2517397	0					
ANR	2517400	IdentifierDeclStatement	string classad_version ;	1395:4:39782:39804	2517397	0	True				
ANR	2517401	IdentifierDecl	classad_version		2517397	0					
ANR	2517402	IdentifierDeclType	string		2517397	0					
ANR	2517403	Identifier	classad_version		2517397	1					
ANR	2517404	ExpressionStatement	ClassAdLibraryVersion ( classad_version )	1397:4:39811:39849	2517397	1	True				
ANR	2517405	CallExpression	ClassAdLibraryVersion ( classad_version )		2517397	0					
ANR	2517406	Callee	ClassAdLibraryVersion		2517397	0					
ANR	2517407	Identifier	ClassAdLibraryVersion		2517397	0					
ANR	2517408	ArgumentList	classad_version		2517397	1					
ANR	2517409	Argument	classad_version		2517397	0					
ANR	2517410	Identifier	classad_version		2517397	0					
ANR	2517411	ExpressionStatement	"cout << ""ClassAd Functional Tester v"" << classad_version << endl"	1399:4:39856:39920	2517397	2	True				
ANR	2517412	ShiftExpression	"cout << ""ClassAd Functional Tester v"" << classad_version << endl"		2517397	0		<<			
ANR	2517413	Identifier	cout		2517397	0					
ANR	2517414	ShiftExpression	"""ClassAd Functional Tester v"" << classad_version << endl"		2517397	1		<<			
ANR	2517415	PrimaryExpression	"""ClassAd Functional Tester v"""		2517397	0					
ANR	2517416	ShiftExpression	classad_version << endl		2517397	1		<<			
ANR	2517417	Identifier	classad_version		2517397	0					
ANR	2517418	Identifier	endl		2517397	1					
ANR	2517419	ReturnStatement	return ;	1401:4:39927:39933	2517397	3	True				
ANR	2517420	ReturnType	void		2517397	1					
ANR	2517421	Identifier	print_version		2517397	2					
ANR	2517422	ParameterList			2517397	3					
ANR	2517423	CFGEntryNode	ENTRY		2517397		True				
ANR	2517424	CFGExitNode	EXIT		2517397		True				
ANR	2517425	Symbol	classad_version		2517397						
ANR	2517426	Function	print_error_message	1410:0:40134:40286							
ANR	2517427	FunctionDef	"print_error_message (const char * error , State & state)"		2517426	0					
ANR	2517428	CompoundStatement		1413:0:40203:40286	2517426	0					
ANR	2517429	IdentifierDeclStatement	string error_s = error ;	1414:4:40209:40231	2517426	0	True				
ANR	2517430	IdentifierDecl	error_s = error		2517426	0					
ANR	2517431	IdentifierDeclType	string		2517426	0					
ANR	2517432	Identifier	error_s		2517426	1					
ANR	2517433	AssignmentExpression	error_s = error		2517426	2		=			
ANR	2517434	Identifier	error		2517426	0					
ANR	2517435	Identifier	error		2517426	1					
ANR	2517436	ExpressionStatement	"print_error_message ( error_s , state )"	1415:4:40237:40272	2517426	1	True				
ANR	2517437	CallExpression	"print_error_message ( error_s , state )"		2517426	0					
ANR	2517438	Callee	print_error_message		2517426	0					
ANR	2517439	Identifier	print_error_message		2517426	0					
ANR	2517440	ArgumentList	error_s		2517426	1					
ANR	2517441	Argument	error_s		2517426	0					
ANR	2517442	Identifier	error_s		2517426	0					
ANR	2517443	Argument	state		2517426	1					
ANR	2517444	Identifier	state		2517426	0					
ANR	2517445	ReturnStatement	return ;	1416:4:40278:40284	2517426	2	True				
ANR	2517446	ReturnType	void		2517426	1					
ANR	2517447	Identifier	print_error_message		2517426	2					
ANR	2517448	ParameterList	"const char * error , State & state"		2517426	3					
ANR	2517449	Parameter	const char * error	1411:4:40164:40181	2517426	0	True				
ANR	2517450	ParameterType	const char *		2517426	0					
ANR	2517451	Identifier	error		2517426	1					
ANR	2517452	Parameter	State & state	1412:4:40189:40200	2517426	1	True				
ANR	2517453	ParameterType	State &		2517426	0					
ANR	2517454	Identifier	state		2517426	1					
ANR	2517455	CFGEntryNode	ENTRY		2517426		True				
ANR	2517456	CFGExitNode	EXIT		2517426		True				
ANR	2517457	Symbol	error_s		2517426						
ANR	2517458	Symbol	state		2517426						
ANR	2517459	Symbol	error		2517426						
ANR	2517460	Function	print_error_message	1426:0:40486:40664							
ANR	2517461	FunctionDef	"print_error_message (string & error , State & state)"		2517460	0					
ANR	2517462	CompoundStatement		1429:0:40551:40664	2517460	0					
ANR	2517463	ExpressionStatement	"cout << ""* Line "" << state . line_number << "": "" << error << endl"	1430:4:40557:40620	2517460	0	True				
ANR	2517464	ShiftExpression	"cout << ""* Line "" << state . line_number << "": "" << error << endl"		2517460	0		<<			
ANR	2517465	Identifier	cout		2517460	0					
ANR	2517466	ShiftExpression	"""* Line "" << state . line_number << "": "" << error << endl"		2517460	1		<<			
ANR	2517467	PrimaryExpression	"""* Line """		2517460	0					
ANR	2517468	ShiftExpression	"state . line_number << "": "" << error << endl"		2517460	1		<<			
ANR	2517469	MemberAccess	state . line_number		2517460	0					
ANR	2517470	Identifier	state		2517460	0					
ANR	2517471	Identifier	line_number		2517460	1					
ANR	2517472	ShiftExpression	""": "" << error << endl"		2517460	1		<<			
ANR	2517473	PrimaryExpression	""": """		2517460	0					
ANR	2517474	ShiftExpression	error << endl		2517460	1		<<			
ANR	2517475	Identifier	error		2517460	0					
ANR	2517476	Identifier	endl		2517460	1					
ANR	2517477	ExpressionStatement	state . number_of_errors ++	1431:4:40626:40650	2517460	1	True				
ANR	2517478	PostIncDecOperationExpression	state . number_of_errors ++		2517460	0					
ANR	2517479	MemberAccess	state . number_of_errors		2517460	0					
ANR	2517480	Identifier	state		2517460	0					
ANR	2517481	Identifier	number_of_errors		2517460	1					
ANR	2517482	IncDec	++		2517460	1					
ANR	2517483	ReturnStatement	return ;	1432:4:40656:40662	2517460	2	True				
ANR	2517484	ReturnType	void		2517460	1					
ANR	2517485	Identifier	print_error_message		2517460	2					
ANR	2517486	ParameterList	"string & error , State & state"		2517460	3					
ANR	2517487	Parameter	string & error	1427:4:40516:40528	2517460	0	True				
ANR	2517488	ParameterType	string &		2517460	0					
ANR	2517489	Identifier	error		2517460	1					
ANR	2517490	Parameter	State & state	1428:4:40536:40548	2517460	1	True				
ANR	2517491	ParameterType	State &		2517460	0					
ANR	2517492	Identifier	state		2517460	1					
ANR	2517493	CFGEntryNode	ENTRY		2517460		True				
ANR	2517494	CFGExitNode	EXIT		2517460		True				
ANR	2517495	Symbol	state . number_of_errors		2517460						
ANR	2517496	Symbol	state		2517460						
ANR	2517497	Symbol	error		2517460						
ANR	2517498	Function	print_final_state	1441:0:40861:41138							
ANR	2517499	FunctionDef	print_final_state (State & state)		2517498	0					
ANR	2517500	CompoundStatement		1443:0:40903:41138	2517498	0					
ANR	2517501	IfStatement	if ( state . number_of_errors == 0 )		2517498	0					
ANR	2517502	Condition	state . number_of_errors == 0	1444:8:40913:40939	2517498	0	True				
ANR	2517503	EqualityExpression	state . number_of_errors == 0		2517498	0		==			
ANR	2517504	MemberAccess	state . number_of_errors		2517498	0					
ANR	2517505	Identifier	state		2517498	0					
ANR	2517506	Identifier	number_of_errors		2517498	1					
ANR	2517507	PrimaryExpression	0		2517498	1					
ANR	2517508	CompoundStatement		2:37:38:38	2517498	1					
ANR	2517509	ExpressionStatement	"cout << ""No errors.\\n"""	1445:8:40952:40974	2517498	0	True				
ANR	2517510	ShiftExpression	"cout << ""No errors.\\n"""		2517498	0		<<			
ANR	2517511	Identifier	cout		2517498	0					
ANR	2517512	PrimaryExpression	"""No errors.\\n"""		2517498	1					
ANR	2517513	ElseStatement	else		2517498	0					
ANR	2517514	IfStatement	if ( state . number_of_errors == 1 )		2517498	0					
ANR	2517515	Condition	state . number_of_errors == 1	1446:15:40991:41017	2517498	0	True				
ANR	2517516	EqualityExpression	state . number_of_errors == 1		2517498	0		==			
ANR	2517517	MemberAccess	state . number_of_errors		2517498	0					
ANR	2517518	Identifier	state		2517498	0					
ANR	2517519	Identifier	number_of_errors		2517498	1					
ANR	2517520	PrimaryExpression	1		2517498	1					
ANR	2517521	CompoundStatement		4:44:116:116	2517498	1					
ANR	2517522	ExpressionStatement	"cout << ""1 error.\\n"""	1447:8:41030:41050	2517498	0	True				
ANR	2517523	ShiftExpression	"cout << ""1 error.\\n"""		2517498	0		<<			
ANR	2517524	Identifier	cout		2517498	0					
ANR	2517525	PrimaryExpression	"""1 error.\\n"""		2517498	1					
ANR	2517526	ElseStatement	else		2517498	0					
ANR	2517527	CompoundStatement		6:11:159:159	2517498	0					
ANR	2517528	ExpressionStatement	"cout << state . number_of_errors << "" errors\\n"""	1449:8:41073:41118	2517498	0	True				
ANR	2517529	ShiftExpression	"cout << state . number_of_errors << "" errors\\n"""		2517498	0		<<			
ANR	2517530	Identifier	cout		2517498	0					
ANR	2517531	ShiftExpression	"state . number_of_errors << "" errors\\n"""		2517498	1		<<			
ANR	2517532	MemberAccess	state . number_of_errors		2517498	0					
ANR	2517533	Identifier	state		2517498	0					
ANR	2517534	Identifier	number_of_errors		2517498	1					
ANR	2517535	PrimaryExpression	""" errors\\n"""		2517498	1					
ANR	2517536	ReturnStatement	return ;	1451:4:41130:41136	2517498	1	True				
ANR	2517537	ReturnType	void		2517498	1					
ANR	2517538	Identifier	print_final_state		2517498	2					
ANR	2517539	ParameterList	State & state		2517498	3					
ANR	2517540	Parameter	State & state	1442:4:40889:40900	2517498	0	True				
ANR	2517541	ParameterType	State &		2517498	0					
ANR	2517542	Identifier	state		2517498	1					
ANR	2517543	CFGEntryNode	ENTRY		2517498		True				
ANR	2517544	CFGExitNode	EXIT		2517498		True				
ANR	2517545	Symbol	state . number_of_errors		2517498						
ANR	2517546	Symbol	state		2517498						
ANR	2517547	Function	line_is_comment	1454:0:41141:41365							
ANR	2517548	FunctionDef	line_is_comment (string & line)		2517547	0					
ANR	2517549	CompoundStatement		1456:0:41181:41365	2517547	0					
ANR	2517550	IdentifierDeclStatement	bool is_comment ;	1457:4:41187:41202	2517547	0	True				
ANR	2517551	IdentifierDecl	is_comment		2517547	0					
ANR	2517552	IdentifierDeclType	bool		2517547	0					
ANR	2517553	Identifier	is_comment		2517547	1					
ANR	2517554	IfStatement	if ( line . size ( ) > 1 && line [ 0 ] == '/' && line [ 1 ] == '/' )		2517547	1					
ANR	2517555	Condition	line . size ( ) > 1 && line [ 0 ] == '/' && line [ 1 ] == '/'	1459:8:41213:41263	2517547	0	True				
ANR	2517556	AndExpression	line . size ( ) > 1 && line [ 0 ] == '/' && line [ 1 ] == '/'		2517547	0		&&			
ANR	2517557	RelationalExpression	line . size ( ) > 1		2517547	0		>			
ANR	2517558	CallExpression	line . size ( )		2517547	0					
ANR	2517559	Callee	line . size		2517547	0					
ANR	2517560	MemberAccess	line . size		2517547	0					
ANR	2517561	Identifier	line		2517547	0					
ANR	2517562	Identifier	size		2517547	1					
ANR	2517563	ArgumentList			2517547	1					
ANR	2517564	PrimaryExpression	1		2517547	1					
ANR	2517565	AndExpression	line [ 0 ] == '/' && line [ 1 ] == '/'		2517547	1		&&			
ANR	2517566	EqualityExpression	line [ 0 ] == '/'		2517547	0		==			
ANR	2517567	ArrayIndexing	line [ 0 ]		2517547	0					
ANR	2517568	Identifier	line		2517547	0					
ANR	2517569	PrimaryExpression	0		2517547	1					
ANR	2517570	PrimaryExpression	'/'		2517547	1					
ANR	2517571	EqualityExpression	line [ 1 ] == '/'		2517547	1		==			
ANR	2517572	ArrayIndexing	line [ 1 ]		2517547	0					
ANR	2517573	Identifier	line		2517547	0					
ANR	2517574	PrimaryExpression	1		2517547	1					
ANR	2517575	PrimaryExpression	'/'		2517547	1					
ANR	2517576	CompoundStatement		4:61:84:84	2517547	1					
ANR	2517577	ExpressionStatement	is_comment = true	1460:8:41276:41293	2517547	0	True				
ANR	2517578	AssignmentExpression	is_comment = true		2517547	0		=			
ANR	2517579	Identifier	is_comment		2517547	0					
ANR	2517580	Identifier	true		2517547	1					
ANR	2517581	ElseStatement	else		2517547	0					
ANR	2517582	CompoundStatement		6:11:124:124	2517547	0					
ANR	2517583	ExpressionStatement	is_comment = false	1462:8:41316:41334	2517547	0	True				
ANR	2517584	AssignmentExpression	is_comment = false		2517547	0		=			
ANR	2517585	Identifier	is_comment		2517547	0					
ANR	2517586	Identifier	false		2517547	1					
ANR	2517587	ReturnStatement	return is_comment ;	1464:4:41346:41363	2517547	2	True				
ANR	2517588	Identifier	is_comment		2517547	0					
ANR	2517589	ReturnType	bool		2517547	1					
ANR	2517590	Identifier	line_is_comment		2517547	2					
ANR	2517591	ParameterList	string & line		2517547	3					
ANR	2517592	Parameter	string & line	1455:4:41167:41178	2517547	0	True				
ANR	2517593	ParameterType	string &		2517547	0					
ANR	2517594	Identifier	line		2517547	1					
ANR	2517595	CFGEntryNode	ENTRY		2517547		True				
ANR	2517596	CFGExitNode	EXIT		2517547		True				
ANR	2517597	Symbol	line		2517547						
ANR	2517598	Symbol	line . size		2517547						
ANR	2517599	Symbol	is_comment		2517547						
ANR	2517600	Symbol	true		2517547						
ANR	2517601	Symbol	false		2517547						
ANR	2517602	Symbol	* line		2517547						
ANR	2517603	DeclStmt									
ANR	2517604	Decl							bool	bool	is_okay
ANR	2517605	DeclStmt									
ANR	2517606	Decl							ExprList	ExprList *	list
ANR	2517607	DeclStmt									
ANR	2517608	Decl							ExprList :: iterator	ExprList :: iterator	iter
ANR	2517609	DeclStmt									
ANR	2517610	Decl							ExprTree	ExprTree *	element
