command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2499714	File	data/converged/CVE-2011-4930_htcondor/src_classad_analysis_testAnalysis.cpp								
ANR	2499715	DeclStmt									
ANR	2499716	Decl							int	int	numAttrs
ANR	2499717	DeclStmt									
ANR	2499718	Decl							const int	const int	NUM_OPS
ANR	2499719	DeclStmt									
ANR	2499720	Decl							string	string *	attrs
ANR	2499721	DeclStmt									
ANR	2499722	Decl							string	string [ NUM_OPS ]	operators
ANR	2499723	DeclStmt									
ANR	2499724	Decl							void	void ( char * myName )	usage
ANR	2499725	DeclStmt									
ANR	2499726	Decl							bool	bool ( )	generateAttributes
ANR	2499727	DeclStmt									
ANR	2499728	Decl							bool	"bool ( int numAds , int reqLen , int numDiffReqs , ClassAdList & adList )"	generateClassAdList
ANR	2499729	DeclStmt									
ANR	2499730	Decl							bool	"bool ( int reqLen , classad :: ClassAd * & ad )"	generateClassAd
ANR	2499731	Function	main	35:0:1205:5446							
ANR	2499732	FunctionDef	"main (int argc , char * argv [ ])"		2499731	0					
ANR	2499733	CompoundStatement		36:0:1241:5446	2499731	0					
ANR	2499734	IdentifierDeclStatement	int requestReqLen = 0 ;	38:1:1263:1284	2499731	0	True				
ANR	2499735	IdentifierDecl	requestReqLen = 0		2499731	0					
ANR	2499736	IdentifierDeclType	int		2499731	0					
ANR	2499737	Identifier	requestReqLen		2499731	1					
ANR	2499738	AssignmentExpression	requestReqLen = 0		2499731	2		=			
ANR	2499739	Identifier	requestReqLen		2499731	0					
ANR	2499740	PrimaryExpression	0		2499731	1					
ANR	2499741	IdentifierDeclStatement	int offerReqLen = 0 ;	39:1:1287:1306	2499731	1	True				
ANR	2499742	IdentifierDecl	offerReqLen = 0		2499731	0					
ANR	2499743	IdentifierDeclType	int		2499731	0					
ANR	2499744	Identifier	offerReqLen		2499731	1					
ANR	2499745	AssignmentExpression	offerReqLen = 0		2499731	2		=			
ANR	2499746	Identifier	offerReqLen		2499731	0					
ANR	2499747	PrimaryExpression	0		2499731	1					
ANR	2499748	IdentifierDeclStatement	int numOffers = 0 ;	40:1:1309:1326	2499731	2	True				
ANR	2499749	IdentifierDecl	numOffers = 0		2499731	0					
ANR	2499750	IdentifierDeclType	int		2499731	0					
ANR	2499751	Identifier	numOffers		2499731	1					
ANR	2499752	AssignmentExpression	numOffers = 0		2499731	2		=			
ANR	2499753	Identifier	numOffers		2499731	0					
ANR	2499754	PrimaryExpression	0		2499731	1					
ANR	2499755	IdentifierDeclStatement	int numUniqueOfferReqs = 0 ;	41:1:1329:1355	2499731	3	True				
ANR	2499756	IdentifierDecl	numUniqueOfferReqs = 0		2499731	0					
ANR	2499757	IdentifierDeclType	int		2499731	0					
ANR	2499758	Identifier	numUniqueOfferReqs		2499731	1					
ANR	2499759	AssignmentExpression	numUniqueOfferReqs = 0		2499731	2		=			
ANR	2499760	Identifier	numUniqueOfferReqs		2499731	0					
ANR	2499761	PrimaryExpression	0		2499731	1					
ANR	2499762	IdentifierDeclStatement	classad :: ClassAd * request = NULL ;	42:1:1358:1390	2499731	4	True				
ANR	2499763	IdentifierDecl	* request = NULL		2499731	0					
ANR	2499764	IdentifierDeclType	classad :: ClassAd *		2499731	0					
ANR	2499765	Identifier	request		2499731	1					
ANR	2499766	AssignmentExpression	* request = NULL		2499731	2		=			
ANR	2499767	Identifier	NULL		2499731	0					
ANR	2499768	Identifier	NULL		2499731	1					
ANR	2499769	IdentifierDeclStatement	classad :: ClassAd * offer = NULL ;	43:1:1393:1423	2499731	5	True				
ANR	2499770	IdentifierDecl	* offer = NULL		2499731	0					
ANR	2499771	IdentifierDeclType	classad :: ClassAd *		2499731	0					
ANR	2499772	Identifier	offer		2499731	1					
ANR	2499773	AssignmentExpression	* offer = NULL		2499731	2		=			
ANR	2499774	Identifier	NULL		2499731	0					
ANR	2499775	Identifier	NULL		2499731	1					
ANR	2499776	IdentifierDeclStatement	ClassAdList offerList ;	44:1:1426:1447	2499731	6	True				
ANR	2499777	IdentifierDecl	offerList		2499731	0					
ANR	2499778	IdentifierDeclType	ClassAdList		2499731	0					
ANR	2499779	Identifier	offerList		2499731	1					
ANR	2499780	IdentifierDeclStatement	ClassAdAnalyzer analyzer ;	45:1:1450:1474	2499731	7	True				
ANR	2499781	IdentifierDecl	analyzer		2499731	0					
ANR	2499782	IdentifierDeclType	ClassAdAnalyzer		2499731	0					
ANR	2499783	Identifier	analyzer		2499731	1					
ANR	2499784	IdentifierDeclStatement	"string buffer = """" ;"	46:1:1477:1495	2499731	8	True				
ANR	2499785	IdentifierDecl	"buffer = """""		2499731	0					
ANR	2499786	IdentifierDeclType	string		2499731	0					
ANR	2499787	Identifier	buffer		2499731	1					
ANR	2499788	AssignmentExpression	"buffer = """""		2499731	2		=			
ANR	2499789	Identifier	buffer		2499731	0					
ANR	2499790	PrimaryExpression	""""""		2499731	1					
ANR	2499791	Statement	struct	50:1:1541:1546	2499731	9	True				
ANR	2499792	Statement	timeval	50:8:1548:1554	2499731	10	True				
ANR	2499793	Statement	*	50:16:1556:1556	2499731	11	True				
ANR	2499794	Statement	tvStart	50:17:1557:1563	2499731	12	True				
ANR	2499795	Statement	=	50:25:1565:1565	2499731	13	True				
ANR	2499796	Statement	new	50:27:1567:1569	2499731	14	True				
ANR	2499797	ExpressionStatement	timeval	50:31:1571:1578	2499731	15	True				
ANR	2499798	Identifier	timeval		2499731	0					
ANR	2499799	Statement	struct	51:1:1581:1586	2499731	16	True				
ANR	2499800	Statement	timeval	51:8:1588:1594	2499731	17	True				
ANR	2499801	Statement	*	51:16:1596:1596	2499731	18	True				
ANR	2499802	Statement	tvEnd	51:17:1597:1601	2499731	19	True				
ANR	2499803	Statement	=	51:23:1603:1603	2499731	20	True				
ANR	2499804	Statement	new	51:25:1605:1607	2499731	21	True				
ANR	2499805	ExpressionStatement	timeval	51:29:1609:1616	2499731	22	True				
ANR	2499806	Identifier	timeval		2499731	0					
ANR	2499807	IdentifierDeclStatement	struct timezone * tz = NULL ;	52:1:1619:1645	2499731	23	True				
ANR	2499808	IdentifierDecl	* tz = NULL		2499731	0					
ANR	2499809	IdentifierDeclType	struct timezone *		2499731	0					
ANR	2499810	Identifier	tz		2499731	1					
ANR	2499811	AssignmentExpression	* tz = NULL		2499731	2		=			
ANR	2499812	Identifier	NULL		2499731	0					
ANR	2499813	Identifier	NULL		2499731	1					
ANR	2499814	ExpressionStatement	srand ( time ( NULL ) )	54:1:1649:1670	2499731	24	True				
ANR	2499815	CallExpression	srand ( time ( NULL ) )		2499731	0					
ANR	2499816	Callee	srand		2499731	0					
ANR	2499817	Identifier	srand		2499731	0					
ANR	2499818	ArgumentList	time ( NULL )		2499731	1					
ANR	2499819	Argument	time ( NULL )		2499731	0					
ANR	2499820	CallExpression	time ( NULL )		2499731	0					
ANR	2499821	Callee	time		2499731	0					
ANR	2499822	Identifier	time		2499731	0					
ANR	2499823	ArgumentList	NULL		2499731	1					
ANR	2499824	Argument	NULL		2499731	0					
ANR	2499825	Identifier	NULL		2499731	0					
ANR	2499826	IfStatement	if ( argc != 6 && argc != 7 )		2499731	25					
ANR	2499827	Condition	argc != 6 && argc != 7	56:5:1678:1699	2499731	0	True				
ANR	2499828	AndExpression	argc != 6 && argc != 7		2499731	0		&&			
ANR	2499829	EqualityExpression	argc != 6		2499731	0		!=			
ANR	2499830	Identifier	argc		2499731	0					
ANR	2499831	PrimaryExpression	6		2499731	1					
ANR	2499832	EqualityExpression	argc != 7		2499731	1		!=			
ANR	2499833	Identifier	argc		2499731	0					
ANR	2499834	PrimaryExpression	7		2499731	1					
ANR	2499835	CompoundStatement		21:30:461:461	2499731	1					
ANR	2499836	ExpressionStatement	usage ( argv [ 0 ] )	57:2:1707:1723	2499731	0	True				
ANR	2499837	CallExpression	usage ( argv [ 0 ] )		2499731	0					
ANR	2499838	Callee	usage		2499731	0					
ANR	2499839	Identifier	usage		2499731	0					
ANR	2499840	ArgumentList	argv [ 0 ]		2499731	1					
ANR	2499841	Argument	argv [ 0 ]		2499731	0					
ANR	2499842	ArrayIndexing	argv [ 0 ]		2499731	0					
ANR	2499843	Identifier	argv		2499731	0					
ANR	2499844	PrimaryExpression	0		2499731	1					
ANR	2499845	ExpressionStatement	exit ( 1 )	58:2:1727:1736	2499731	1	True				
ANR	2499846	CallExpression	exit ( 1 )		2499731	0					
ANR	2499847	Callee	exit		2499731	0					
ANR	2499848	Identifier	exit		2499731	0					
ANR	2499849	ArgumentList	1		2499731	1					
ANR	2499850	Argument	1		2499731	0					
ANR	2499851	PrimaryExpression	1		2499731	0					
ANR	2499852	ElseStatement	else		2499731	0					
ANR	2499853	CompoundStatement		25:6:505:505	2499731	0					
ANR	2499854	ExpressionStatement	numAttrs = atoi ( argv [ 2 ] )	61:2:1751:1777	2499731	0	True				
ANR	2499855	AssignmentExpression	numAttrs = atoi ( argv [ 2 ] )		2499731	0		=			
ANR	2499856	Identifier	numAttrs		2499731	0					
ANR	2499857	CallExpression	atoi ( argv [ 2 ] )		2499731	1					
ANR	2499858	Callee	atoi		2499731	0					
ANR	2499859	Identifier	atoi		2499731	0					
ANR	2499860	ArgumentList	argv [ 2 ]		2499731	1					
ANR	2499861	Argument	argv [ 2 ]		2499731	0					
ANR	2499862	ArrayIndexing	argv [ 2 ]		2499731	0					
ANR	2499863	Identifier	argv		2499731	0					
ANR	2499864	PrimaryExpression	2		2499731	1					
ANR	2499865	IfStatement	if ( numAttrs <= 0 )		2499731	1					
ANR	2499866	Condition	numAttrs <= 0	62:6:1785:1797	2499731	0	True				
ANR	2499867	RelationalExpression	numAttrs <= 0		2499731	0		<=			
ANR	2499868	Identifier	numAttrs		2499731	0					
ANR	2499869	PrimaryExpression	0		2499731	1					
ANR	2499870	CompoundStatement		27:22:559:559	2499731	1					
ANR	2499871	ExpressionStatement	"cerr << argv [ 0 ] << "": bad value for number of attributes: "" << numAttrs << endl"	63:3:1806:1890	2499731	0	True				
ANR	2499872	ShiftExpression	"cerr << argv [ 0 ] << "": bad value for number of attributes: "" << numAttrs << endl"		2499731	0		<<			
ANR	2499873	Identifier	cerr		2499731	0					
ANR	2499874	ShiftExpression	"argv [ 0 ] << "": bad value for number of attributes: "" << numAttrs << endl"		2499731	1		<<			
ANR	2499875	ArrayIndexing	argv [ 0 ]		2499731	0					
ANR	2499876	Identifier	argv		2499731	0					
ANR	2499877	PrimaryExpression	0		2499731	1					
ANR	2499878	ShiftExpression	""": bad value for number of attributes: "" << numAttrs << endl"		2499731	1		<<			
ANR	2499879	PrimaryExpression	""": bad value for number of attributes: """		2499731	0					
ANR	2499880	ShiftExpression	numAttrs << endl		2499731	1		<<			
ANR	2499881	Identifier	numAttrs		2499731	0					
ANR	2499882	Identifier	endl		2499731	1					
ANR	2499883	ExpressionStatement	exit ( 1 )	65:3:1895:1904	2499731	1	True				
ANR	2499884	CallExpression	exit ( 1 )		2499731	0					
ANR	2499885	Callee	exit		2499731	0					
ANR	2499886	Identifier	exit		2499731	0					
ANR	2499887	ArgumentList	1		2499731	1					
ANR	2499888	Argument	1		2499731	0					
ANR	2499889	PrimaryExpression	1		2499731	0					
ANR	2499890	IfStatement	if ( ! generateAttributes ( ) )		2499731	2					
ANR	2499891	Condition	! generateAttributes ( )	67:6:1916:1937	2499731	0	True				
ANR	2499892	UnaryOperationExpression	! generateAttributes ( )		2499731	0					
ANR	2499893	UnaryOperator	!		2499731	0					
ANR	2499894	CallExpression	generateAttributes ( )		2499731	1					
ANR	2499895	Callee	generateAttributes		2499731	0					
ANR	2499896	Identifier	generateAttributes		2499731	0					
ANR	2499897	ArgumentList			2499731	1					
ANR	2499898	CompoundStatement		32:31:699:699	2499731	1					
ANR	2499899	ExpressionStatement	"cerr << argv [ 0 ] << "": error in generateAttributes( )"" << endl"	68:3:1946:2007	2499731	0	True				
ANR	2499900	ShiftExpression	"cerr << argv [ 0 ] << "": error in generateAttributes( )"" << endl"		2499731	0		<<			
ANR	2499901	Identifier	cerr		2499731	0					
ANR	2499902	ShiftExpression	"argv [ 0 ] << "": error in generateAttributes( )"" << endl"		2499731	1		<<			
ANR	2499903	ArrayIndexing	argv [ 0 ]		2499731	0					
ANR	2499904	Identifier	argv		2499731	0					
ANR	2499905	PrimaryExpression	0		2499731	1					
ANR	2499906	ShiftExpression	""": error in generateAttributes( )"" << endl"		2499731	1		<<			
ANR	2499907	PrimaryExpression	""": error in generateAttributes( )"""		2499731	0					
ANR	2499908	Identifier	endl		2499731	1					
ANR	2499909	ExpressionStatement	exit ( 1 )	69:3:2012:2021	2499731	1	True				
ANR	2499910	CallExpression	exit ( 1 )		2499731	0					
ANR	2499911	Callee	exit		2499731	0					
ANR	2499912	Identifier	exit		2499731	0					
ANR	2499913	ArgumentList	1		2499731	1					
ANR	2499914	Argument	1		2499731	0					
ANR	2499915	PrimaryExpression	1		2499731	0					
ANR	2499916	ExpressionStatement	requestReqLen = atoi ( argv [ 3 ] )	72:2:2030:2061	2499731	3	True				
ANR	2499917	AssignmentExpression	requestReqLen = atoi ( argv [ 3 ] )		2499731	0		=			
ANR	2499918	Identifier	requestReqLen		2499731	0					
ANR	2499919	CallExpression	atoi ( argv [ 3 ] )		2499731	1					
ANR	2499920	Callee	atoi		2499731	0					
ANR	2499921	Identifier	atoi		2499731	0					
ANR	2499922	ArgumentList	argv [ 3 ]		2499731	1					
ANR	2499923	Argument	argv [ 3 ]		2499731	0					
ANR	2499924	ArrayIndexing	argv [ 3 ]		2499731	0					
ANR	2499925	Identifier	argv		2499731	0					
ANR	2499926	PrimaryExpression	3		2499731	1					
ANR	2499927	IfStatement	if ( requestReqLen <= 0 )		2499731	4					
ANR	2499928	Condition	requestReqLen <= 0	73:6:2069:2086	2499731	0	True				
ANR	2499929	RelationalExpression	requestReqLen <= 0		2499731	0		<=			
ANR	2499930	Identifier	requestReqLen		2499731	0					
ANR	2499931	PrimaryExpression	0		2499731	1					
ANR	2499932	CompoundStatement		38:27:848:848	2499731	1					
ANR	2499933	ExpressionStatement	"cerr << argv [ 0 ] << "": bad value for request requirements length: "" << requestReqLen << endl"	74:3:2095:2191	2499731	0	True				
ANR	2499934	ShiftExpression	"cerr << argv [ 0 ] << "": bad value for request requirements length: "" << requestReqLen << endl"		2499731	0		<<			
ANR	2499935	Identifier	cerr		2499731	0					
ANR	2499936	ShiftExpression	"argv [ 0 ] << "": bad value for request requirements length: "" << requestReqLen << endl"		2499731	1		<<			
ANR	2499937	ArrayIndexing	argv [ 0 ]		2499731	0					
ANR	2499938	Identifier	argv		2499731	0					
ANR	2499939	PrimaryExpression	0		2499731	1					
ANR	2499940	ShiftExpression	""": bad value for request requirements length: "" << requestReqLen << endl"		2499731	1		<<			
ANR	2499941	PrimaryExpression	""": bad value for request requirements length: """		2499731	0					
ANR	2499942	ShiftExpression	requestReqLen << endl		2499731	1		<<			
ANR	2499943	Identifier	requestReqLen		2499731	0					
ANR	2499944	Identifier	endl		2499731	1					
ANR	2499945	ExpressionStatement	exit ( 1 )	76:3:2196:2205	2499731	1	True				
ANR	2499946	CallExpression	exit ( 1 )		2499731	0					
ANR	2499947	Callee	exit		2499731	0					
ANR	2499948	Identifier	exit		2499731	0					
ANR	2499949	ArgumentList	1		2499731	1					
ANR	2499950	Argument	1		2499731	0					
ANR	2499951	PrimaryExpression	1		2499731	0					
ANR	2499952	IfStatement	"if ( ! generateClassAd ( requestReqLen , request ) )"		2499731	5					
ANR	2499953	Condition	"! generateClassAd ( requestReqLen , request )"	78:6:2217:2258	2499731	0	True				
ANR	2499954	UnaryOperationExpression	"! generateClassAd ( requestReqLen , request )"		2499731	0					
ANR	2499955	UnaryOperator	!		2499731	0					
ANR	2499956	CallExpression	"generateClassAd ( requestReqLen , request )"		2499731	1					
ANR	2499957	Callee	generateClassAd		2499731	0					
ANR	2499958	Identifier	generateClassAd		2499731	0					
ANR	2499959	ArgumentList	requestReqLen		2499731	1					
ANR	2499960	Argument	requestReqLen		2499731	0					
ANR	2499961	Identifier	requestReqLen		2499731	0					
ANR	2499962	Argument	request		2499731	1					
ANR	2499963	Identifier	request		2499731	0					
ANR	2499964	CompoundStatement		43:51:1020:1020	2499731	1					
ANR	2499965	ExpressionStatement	"cerr << argv [ 0 ] << "": error in generateClassAd( "" << requestReqLen << "", request )"" << endl"	79:3:2267:2363	2499731	0	True				
ANR	2499966	ShiftExpression	"cerr << argv [ 0 ] << "": error in generateClassAd( "" << requestReqLen << "", request )"" << endl"		2499731	0		<<			
ANR	2499967	Identifier	cerr		2499731	0					
ANR	2499968	ShiftExpression	"argv [ 0 ] << "": error in generateClassAd( "" << requestReqLen << "", request )"" << endl"		2499731	1		<<			
ANR	2499969	ArrayIndexing	argv [ 0 ]		2499731	0					
ANR	2499970	Identifier	argv		2499731	0					
ANR	2499971	PrimaryExpression	0		2499731	1					
ANR	2499972	ShiftExpression	""": error in generateClassAd( "" << requestReqLen << "", request )"" << endl"		2499731	1		<<			
ANR	2499973	PrimaryExpression	""": error in generateClassAd( """		2499731	0					
ANR	2499974	ShiftExpression	"requestReqLen << "", request )"" << endl"		2499731	1		<<			
ANR	2499975	Identifier	requestReqLen		2499731	0					
ANR	2499976	ShiftExpression	""", request )"" << endl"		2499731	1		<<			
ANR	2499977	PrimaryExpression	""", request )"""		2499731	0					
ANR	2499978	Identifier	endl		2499731	1					
ANR	2499979	ExpressionStatement	exit ( 1 )	81:3:2368:2377	2499731	1	True				
ANR	2499980	CallExpression	exit ( 1 )		2499731	0					
ANR	2499981	Callee	exit		2499731	0					
ANR	2499982	Identifier	exit		2499731	0					
ANR	2499983	ArgumentList	1		2499731	1					
ANR	2499984	Argument	1		2499731	0					
ANR	2499985	PrimaryExpression	1		2499731	0					
ANR	2499986	ExpressionStatement	offerReqLen = atoi ( argv [ 4 ] )	84:2:2386:2415	2499731	6	True				
ANR	2499987	AssignmentExpression	offerReqLen = atoi ( argv [ 4 ] )		2499731	0		=			
ANR	2499988	Identifier	offerReqLen		2499731	0					
ANR	2499989	CallExpression	atoi ( argv [ 4 ] )		2499731	1					
ANR	2499990	Callee	atoi		2499731	0					
ANR	2499991	Identifier	atoi		2499731	0					
ANR	2499992	ArgumentList	argv [ 4 ]		2499731	1					
ANR	2499993	Argument	argv [ 4 ]		2499731	0					
ANR	2499994	ArrayIndexing	argv [ 4 ]		2499731	0					
ANR	2499995	Identifier	argv		2499731	0					
ANR	2499996	PrimaryExpression	4		2499731	1					
ANR	2499997	IfStatement	if ( offerReqLen <= 0 )		2499731	7					
ANR	2499998	Condition	offerReqLen <= 0	85:6:2423:2438	2499731	0	True				
ANR	2499999	RelationalExpression	offerReqLen <= 0		2499731	0		<=			
ANR	2500000	Identifier	offerReqLen		2499731	0					
ANR	2500001	PrimaryExpression	0		2499731	1					
ANR	2500002	CompoundStatement		50:25:1200:1200	2499731	1					
ANR	2500003	ExpressionStatement	"cerr << argv [ 0 ] << "": bad value for offer requirements length: "" << offerReqLen << endl"	86:3:2447:2539	2499731	0	True				
ANR	2500004	ShiftExpression	"cerr << argv [ 0 ] << "": bad value for offer requirements length: "" << offerReqLen << endl"		2499731	0		<<			
ANR	2500005	Identifier	cerr		2499731	0					
ANR	2500006	ShiftExpression	"argv [ 0 ] << "": bad value for offer requirements length: "" << offerReqLen << endl"		2499731	1		<<			
ANR	2500007	ArrayIndexing	argv [ 0 ]		2499731	0					
ANR	2500008	Identifier	argv		2499731	0					
ANR	2500009	PrimaryExpression	0		2499731	1					
ANR	2500010	ShiftExpression	""": bad value for offer requirements length: "" << offerReqLen << endl"		2499731	1		<<			
ANR	2500011	PrimaryExpression	""": bad value for offer requirements length: """		2499731	0					
ANR	2500012	ShiftExpression	offerReqLen << endl		2499731	1		<<			
ANR	2500013	Identifier	offerReqLen		2499731	0					
ANR	2500014	Identifier	endl		2499731	1					
ANR	2500015	ExpressionStatement	exit ( 1 )	88:3:2544:2553	2499731	1	True				
ANR	2500016	CallExpression	exit ( 1 )		2499731	0					
ANR	2500017	Callee	exit		2499731	0					
ANR	2500018	Identifier	exit		2499731	0					
ANR	2500019	ArgumentList	1		2499731	1					
ANR	2500020	Argument	1		2499731	0					
ANR	2500021	PrimaryExpression	1		2499731	0					
ANR	2500022	IfStatement	"if ( strcmp ( argv [ 1 ] , ""e"" ) == 0 )"		2499731	8					
ANR	2500023	Condition	"strcmp ( argv [ 1 ] , ""e"" ) == 0"	91:6:2566:2592	2499731	0	True				
ANR	2500024	EqualityExpression	"strcmp ( argv [ 1 ] , ""e"" ) == 0"		2499731	0		==			
ANR	2500025	CallExpression	"strcmp ( argv [ 1 ] , ""e"" )"		2499731	0					
ANR	2500026	Callee	strcmp		2499731	0					
ANR	2500027	Identifier	strcmp		2499731	0					
ANR	2500028	ArgumentList	argv [ 1 ]		2499731	1					
ANR	2500029	Argument	argv [ 1 ]		2499731	0					
ANR	2500030	ArrayIndexing	argv [ 1 ]		2499731	0					
ANR	2500031	Identifier	argv		2499731	0					
ANR	2500032	PrimaryExpression	1		2499731	1					
ANR	2500033	Argument	"""e"""		2499731	1					
ANR	2500034	PrimaryExpression	"""e"""		2499731	0					
ANR	2500035	PrimaryExpression	0		2499731	1					
ANR	2500036	CompoundStatement		67:3:1628:1649	2499731	1					
ANR	2500037	IfStatement	if ( argc != 6 )		2499731	0					
ANR	2500038	Condition	argc != 6	92:7:2605:2613	2499731	0	True				
ANR	2500039	EqualityExpression	argc != 6		2499731	0		!=			
ANR	2500040	Identifier	argc		2499731	0					
ANR	2500041	PrimaryExpression	6		2499731	1					
ANR	2500042	CompoundStatement		57:19:1375:1375	2499731	1					
ANR	2500043	ExpressionStatement	usage ( argv [ 0 ] )	93:4:2623:2639	2499731	0	True				
ANR	2500044	CallExpression	usage ( argv [ 0 ] )		2499731	0					
ANR	2500045	Callee	usage		2499731	0					
ANR	2500046	Identifier	usage		2499731	0					
ANR	2500047	ArgumentList	argv [ 0 ]		2499731	1					
ANR	2500048	Argument	argv [ 0 ]		2499731	0					
ANR	2500049	ArrayIndexing	argv [ 0 ]		2499731	0					
ANR	2500050	Identifier	argv		2499731	0					
ANR	2500051	PrimaryExpression	0		2499731	1					
ANR	2500052	ExpressionStatement	exit ( 1 )	94:4:2645:2654	2499731	1	True				
ANR	2500053	CallExpression	exit ( 1 )		2499731	0					
ANR	2500054	Callee	exit		2499731	0					
ANR	2500055	Identifier	exit		2499731	0					
ANR	2500056	ArgumentList	1		2499731	1					
ANR	2500057	Argument	1		2499731	0					
ANR	2500058	PrimaryExpression	1		2499731	0					
ANR	2500059	IfStatement	"if ( ! generateClassAd ( offerReqLen , offer ) )"		2499731	1					
ANR	2500060	Condition	"! generateClassAd ( offerReqLen , offer )"	97:7:2706:2743	2499731	0	True				
ANR	2500061	UnaryOperationExpression	"! generateClassAd ( offerReqLen , offer )"		2499731	0					
ANR	2500062	UnaryOperator	!		2499731	0					
ANR	2500063	CallExpression	"generateClassAd ( offerReqLen , offer )"		2499731	1					
ANR	2500064	Callee	generateClassAd		2499731	0					
ANR	2500065	Identifier	generateClassAd		2499731	0					
ANR	2500066	ArgumentList	offerReqLen		2499731	1					
ANR	2500067	Argument	offerReqLen		2499731	0					
ANR	2500068	Identifier	offerReqLen		2499731	0					
ANR	2500069	Argument	offer		2499731	1					
ANR	2500070	Identifier	offer		2499731	0					
ANR	2500071	CompoundStatement		62:48:1505:1505	2499731	1					
ANR	2500072	ExpressionStatement	"cerr << argv [ 0 ] << "": error in generateClassAd( "" << offerReqLen << "", offer )"" << endl"	98:4:2753:2845	2499731	0	True				
ANR	2500073	ShiftExpression	"cerr << argv [ 0 ] << "": error in generateClassAd( "" << offerReqLen << "", offer )"" << endl"		2499731	0		<<			
ANR	2500074	Identifier	cerr		2499731	0					
ANR	2500075	ShiftExpression	"argv [ 0 ] << "": error in generateClassAd( "" << offerReqLen << "", offer )"" << endl"		2499731	1		<<			
ANR	2500076	ArrayIndexing	argv [ 0 ]		2499731	0					
ANR	2500077	Identifier	argv		2499731	0					
ANR	2500078	PrimaryExpression	0		2499731	1					
ANR	2500079	ShiftExpression	""": error in generateClassAd( "" << offerReqLen << "", offer )"" << endl"		2499731	1		<<			
ANR	2500080	PrimaryExpression	""": error in generateClassAd( """		2499731	0					
ANR	2500081	ShiftExpression	"offerReqLen << "", offer )"" << endl"		2499731	1		<<			
ANR	2500082	Identifier	offerReqLen		2499731	0					
ANR	2500083	ShiftExpression	""", offer )"" << endl"		2499731	1		<<			
ANR	2500084	PrimaryExpression	""", offer )"""		2499731	0					
ANR	2500085	Identifier	endl		2499731	1					
ANR	2500086	ExpressionStatement	exit ( 1 )	100:4:2851:2860	2499731	1	True				
ANR	2500087	CallExpression	exit ( 1 )		2499731	0					
ANR	2500088	Callee	exit		2499731	0					
ANR	2500089	Identifier	exit		2499731	0					
ANR	2500090	ArgumentList	1		2499731	1					
ANR	2500091	Argument	1		2499731	0					
ANR	2500092	PrimaryExpression	1		2499731	0					
ANR	2500093	IdentifierDeclStatement	string attr = argv [ 5 ] ;	102:3:2870:2891	2499731	2	True				
ANR	2500094	IdentifierDecl	attr = argv [ 5 ]		2499731	0					
ANR	2500095	IdentifierDeclType	string		2499731	0					
ANR	2500096	Identifier	attr		2499731	1					
ANR	2500097	AssignmentExpression	attr = argv [ 5 ]		2499731	2		=			
ANR	2500098	Identifier	attr		2499731	0					
ANR	2500099	ArrayIndexing	argv [ 5 ]		2499731	1					
ANR	2500100	Identifier	argv		2499731	0					
ANR	2500101	PrimaryExpression	5		2499731	1					
ANR	2500102	ExpressionStatement	"buffer = """""	112:3:3215:3226	2499731	3	True				
ANR	2500103	AssignmentExpression	"buffer = """""		2499731	0		=			
ANR	2500104	Identifier	buffer		2499731	0					
ANR	2500105	PrimaryExpression	""""""		2499731	1					
ANR	2500106	ExpressionStatement	"gettimeofday ( tvStart , tz )"	113:3:3231:3258	2499731	4	True				
ANR	2500107	CallExpression	"gettimeofday ( tvStart , tz )"		2499731	0					
ANR	2500108	Callee	gettimeofday		2499731	0					
ANR	2500109	Identifier	gettimeofday		2499731	0					
ANR	2500110	ArgumentList	tvStart		2499731	1					
ANR	2500111	Argument	tvStart		2499731	0					
ANR	2500112	Identifier	tvStart		2499731	0					
ANR	2500113	Argument	tz		2499731	1					
ANR	2500114	Identifier	tz		2499731	0					
ANR	2500115	ExpressionStatement	"analyzer . AnalyzeExprToBuffer ( request , offer , attr , buffer )"	114:3:3263:3323	2499731	5	True				
ANR	2500116	CallExpression	"analyzer . AnalyzeExprToBuffer ( request , offer , attr , buffer )"		2499731	0					
ANR	2500117	Callee	analyzer . AnalyzeExprToBuffer		2499731	0					
ANR	2500118	MemberAccess	analyzer . AnalyzeExprToBuffer		2499731	0					
ANR	2500119	Identifier	analyzer		2499731	0					
ANR	2500120	Identifier	AnalyzeExprToBuffer		2499731	1					
ANR	2500121	ArgumentList	request		2499731	1					
ANR	2500122	Argument	request		2499731	0					
ANR	2500123	Identifier	request		2499731	0					
ANR	2500124	Argument	offer		2499731	1					
ANR	2500125	Identifier	offer		2499731	0					
ANR	2500126	Argument	attr		2499731	2					
ANR	2500127	Identifier	attr		2499731	0					
ANR	2500128	Argument	buffer		2499731	3					
ANR	2500129	Identifier	buffer		2499731	0					
ANR	2500130	ExpressionStatement	"gettimeofday ( tvEnd , tz )"	115:3:3328:3353	2499731	6	True				
ANR	2500131	CallExpression	"gettimeofday ( tvEnd , tz )"		2499731	0					
ANR	2500132	Callee	gettimeofday		2499731	0					
ANR	2500133	Identifier	gettimeofday		2499731	0					
ANR	2500134	ArgumentList	tvEnd		2499731	1					
ANR	2500135	Argument	tvEnd		2499731	0					
ANR	2500136	Identifier	tvEnd		2499731	0					
ANR	2500137	Argument	tz		2499731	1					
ANR	2500138	Identifier	tz		2499731	0					
ANR	2500139	ExpressionStatement	cout << ( round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 ) / 100 ) << endl	116:3:3358:3497	2499731	7	True				
ANR	2500140	ShiftExpression	cout << ( round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 ) / 100 ) << endl		2499731	0		<<			
ANR	2500141	Identifier	cout		2499731	0					
ANR	2500142	ShiftExpression	( round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 ) / 100 ) << endl		2499731	1		<<			
ANR	2500143	MultiplicativeExpression	round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 ) / 100		2499731	0		/			
ANR	2500144	CallExpression	round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 )		2499731	0					
ANR	2500145	Callee	round		2499731	0					
ANR	2500146	Identifier	round		2499731	0					
ANR	2500147	ArgumentList	( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000		2499731	1					
ANR	2500148	Argument	( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000		2499731	0					
ANR	2500149	AdditiveExpression	( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000		2499731	0		+			
ANR	2500150	MultiplicativeExpression	( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100		2499731	0		*			
ANR	2500151	AdditiveExpression	tvEnd -> tv_sec - tvStart -> tv_sec		2499731	0		-			
ANR	2500152	PtrMemberAccess	tvEnd -> tv_sec		2499731	0					
ANR	2500153	Identifier	tvEnd		2499731	0					
ANR	2500154	Identifier	tv_sec		2499731	1					
ANR	2500155	PtrMemberAccess	tvStart -> tv_sec		2499731	1					
ANR	2500156	Identifier	tvStart		2499731	0					
ANR	2500157	Identifier	tv_sec		2499731	1					
ANR	2500158	PrimaryExpression	100		2499731	1					
ANR	2500159	MultiplicativeExpression	( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000		2499731	1		/			
ANR	2500160	AdditiveExpression	tvEnd -> tv_usec - tvStart -> tv_usec		2499731	0		-			
ANR	2500161	PtrMemberAccess	tvEnd -> tv_usec		2499731	0					
ANR	2500162	Identifier	tvEnd		2499731	0					
ANR	2500163	Identifier	tv_usec		2499731	1					
ANR	2500164	PtrMemberAccess	tvStart -> tv_usec		2499731	1					
ANR	2500165	Identifier	tvStart		2499731	0					
ANR	2500166	Identifier	tv_usec		2499731	1					
ANR	2500167	PrimaryExpression	10000		2499731	1					
ANR	2500168	PrimaryExpression	100		2499731	1					
ANR	2500169	Identifier	endl		2499731	1					
ANR	2500170	ReturnStatement	return 0 ;	120:3:3525:3533	2499731	8	True				
ANR	2500171	PrimaryExpression	0		2499731	0					
ANR	2500172	ElseStatement	else		2499731	0					
ANR	2500173	IfStatement	if ( argc != 7 )		2499731	0					
ANR	2500174	Condition	argc != 7	122:11:3550:3558	2499731	0	True				
ANR	2500175	EqualityExpression	argc != 7		2499731	0		!=			
ANR	2500176	Identifier	argc		2499731	0					
ANR	2500177	PrimaryExpression	7		2499731	1					
ANR	2500178	CompoundStatement		87:23:2320:2320	2499731	1					
ANR	2500179	ExpressionStatement	usage ( argv [ 0 ] )	123:3:3567:3583	2499731	0	True				
ANR	2500180	CallExpression	usage ( argv [ 0 ] )		2499731	0					
ANR	2500181	Callee	usage		2499731	0					
ANR	2500182	Identifier	usage		2499731	0					
ANR	2500183	ArgumentList	argv [ 0 ]		2499731	1					
ANR	2500184	Argument	argv [ 0 ]		2499731	0					
ANR	2500185	ArrayIndexing	argv [ 0 ]		2499731	0					
ANR	2500186	Identifier	argv		2499731	0					
ANR	2500187	PrimaryExpression	0		2499731	1					
ANR	2500188	ExpressionStatement	exit ( 1 )	124:3:3588:3597	2499731	1	True				
ANR	2500189	CallExpression	exit ( 1 )		2499731	0					
ANR	2500190	Callee	exit		2499731	0					
ANR	2500191	Identifier	exit		2499731	0					
ANR	2500192	ArgumentList	1		2499731	1					
ANR	2500193	Argument	1		2499731	0					
ANR	2500194	PrimaryExpression	1		2499731	0					
ANR	2500195	ElseStatement	else		2499731	0					
ANR	2500196	CompoundStatement		91:7:2368:2368	2499731	0					
ANR	2500197	ExpressionStatement	numOffers = atoi ( argv [ 5 ] )	127:3:3615:3642	2499731	0	True				
ANR	2500198	AssignmentExpression	numOffers = atoi ( argv [ 5 ] )		2499731	0		=			
ANR	2500199	Identifier	numOffers		2499731	0					
ANR	2500200	CallExpression	atoi ( argv [ 5 ] )		2499731	1					
ANR	2500201	Callee	atoi		2499731	0					
ANR	2500202	Identifier	atoi		2499731	0					
ANR	2500203	ArgumentList	argv [ 5 ]		2499731	1					
ANR	2500204	Argument	argv [ 5 ]		2499731	0					
ANR	2500205	ArrayIndexing	argv [ 5 ]		2499731	0					
ANR	2500206	Identifier	argv		2499731	0					
ANR	2500207	PrimaryExpression	5		2499731	1					
ANR	2500208	IfStatement	if ( numOffers <= 0 )		2499731	1					
ANR	2500209	Condition	numOffers <= 0	128:7:3651:3664	2499731	0	True				
ANR	2500210	RelationalExpression	numOffers <= 0		2499731	0		<=			
ANR	2500211	Identifier	numOffers		2499731	0					
ANR	2500212	PrimaryExpression	0		2499731	1					
ANR	2500213	CompoundStatement		93:24:2426:2426	2499731	1					
ANR	2500214	ExpressionStatement	"cerr << argv [ 0 ] << "": bad value for number of offers: "" << numOffers << endl"	129:4:3674:3756	2499731	0	True				
ANR	2500215	ShiftExpression	"cerr << argv [ 0 ] << "": bad value for number of offers: "" << numOffers << endl"		2499731	0		<<			
ANR	2500216	Identifier	cerr		2499731	0					
ANR	2500217	ShiftExpression	"argv [ 0 ] << "": bad value for number of offers: "" << numOffers << endl"		2499731	1		<<			
ANR	2500218	ArrayIndexing	argv [ 0 ]		2499731	0					
ANR	2500219	Identifier	argv		2499731	0					
ANR	2500220	PrimaryExpression	0		2499731	1					
ANR	2500221	ShiftExpression	""": bad value for number of offers: "" << numOffers << endl"		2499731	1		<<			
ANR	2500222	PrimaryExpression	""": bad value for number of offers: """		2499731	0					
ANR	2500223	ShiftExpression	numOffers << endl		2499731	1		<<			
ANR	2500224	Identifier	numOffers		2499731	0					
ANR	2500225	Identifier	endl		2499731	1					
ANR	2500226	ExpressionStatement	exit ( 1 )	131:4:3762:3771	2499731	1	True				
ANR	2500227	CallExpression	exit ( 1 )		2499731	0					
ANR	2500228	Callee	exit		2499731	0					
ANR	2500229	Identifier	exit		2499731	0					
ANR	2500230	ArgumentList	1		2499731	1					
ANR	2500231	Argument	1		2499731	0					
ANR	2500232	PrimaryExpression	1		2499731	0					
ANR	2500233	ExpressionStatement	numUniqueOfferReqs = atoi ( argv [ 6 ] )	133:3:3781:3817	2499731	2	True				
ANR	2500234	AssignmentExpression	numUniqueOfferReqs = atoi ( argv [ 6 ] )		2499731	0		=			
ANR	2500235	Identifier	numUniqueOfferReqs		2499731	0					
ANR	2500236	CallExpression	atoi ( argv [ 6 ] )		2499731	1					
ANR	2500237	Callee	atoi		2499731	0					
ANR	2500238	Identifier	atoi		2499731	0					
ANR	2500239	ArgumentList	argv [ 6 ]		2499731	1					
ANR	2500240	Argument	argv [ 6 ]		2499731	0					
ANR	2500241	ArrayIndexing	argv [ 6 ]		2499731	0					
ANR	2500242	Identifier	argv		2499731	0					
ANR	2500243	PrimaryExpression	6		2499731	1					
ANR	2500244	IfStatement	if ( numUniqueOfferReqs <= 0 || numUniqueOfferReqs > numOffers )		2499731	3					
ANR	2500245	Condition	numUniqueOfferReqs <= 0 || numUniqueOfferReqs > numOffers	134:7:3826:3882	2499731	0	True				
ANR	2500246	OrExpression	numUniqueOfferReqs <= 0 || numUniqueOfferReqs > numOffers		2499731	0		||			
ANR	2500247	RelationalExpression	numUniqueOfferReqs <= 0		2499731	0		<=			
ANR	2500248	Identifier	numUniqueOfferReqs		2499731	0					
ANR	2500249	PrimaryExpression	0		2499731	1					
ANR	2500250	RelationalExpression	numUniqueOfferReqs > numOffers		2499731	1		>			
ANR	2500251	Identifier	numUniqueOfferReqs		2499731	0					
ANR	2500252	Identifier	numOffers		2499731	1					
ANR	2500253	CompoundStatement		99:67:2644:2644	2499731	1					
ANR	2500254	ExpressionStatement	"cerr << argv [ 0 ] << "": bad value for number of unique offer requirements: "" << numUniqueOfferReqs << endl"	135:4:3892:4002	2499731	0	True				
ANR	2500255	ShiftExpression	"cerr << argv [ 0 ] << "": bad value for number of unique offer requirements: "" << numUniqueOfferReqs << endl"		2499731	0		<<			
ANR	2500256	Identifier	cerr		2499731	0					
ANR	2500257	ShiftExpression	"argv [ 0 ] << "": bad value for number of unique offer requirements: "" << numUniqueOfferReqs << endl"		2499731	1		<<			
ANR	2500258	ArrayIndexing	argv [ 0 ]		2499731	0					
ANR	2500259	Identifier	argv		2499731	0					
ANR	2500260	PrimaryExpression	0		2499731	1					
ANR	2500261	ShiftExpression	""": bad value for number of unique offer requirements: "" << numUniqueOfferReqs << endl"		2499731	1		<<			
ANR	2500262	PrimaryExpression	""": bad value for number of unique offer requirements: """		2499731	0					
ANR	2500263	ShiftExpression	numUniqueOfferReqs << endl		2499731	1		<<			
ANR	2500264	Identifier	numUniqueOfferReqs		2499731	0					
ANR	2500265	Identifier	endl		2499731	1					
ANR	2500266	ExpressionStatement	exit ( 1 )	137:4:4008:4017	2499731	1	True				
ANR	2500267	CallExpression	exit ( 1 )		2499731	0					
ANR	2500268	Callee	exit		2499731	0					
ANR	2500269	Identifier	exit		2499731	0					
ANR	2500270	ArgumentList	1		2499731	1					
ANR	2500271	Argument	1		2499731	0					
ANR	2500272	PrimaryExpression	1		2499731	0					
ANR	2500273	IfStatement	"if ( ! generateClassAdList ( numOffers , offerReqLen , numUniqueOfferReqs , offerList ) )"		2499731	4					
ANR	2500274	Condition	"! generateClassAdList ( numOffers , offerReqLen , numUniqueOfferReqs , offerList )"	139:8:4032:4121	2499731	0	True				
ANR	2500275	UnaryOperationExpression	"! generateClassAdList ( numOffers , offerReqLen , numUniqueOfferReqs , offerList )"		2499731	0					
ANR	2500276	UnaryOperator	!		2499731	0					
ANR	2500277	CallExpression	"generateClassAdList ( numOffers , offerReqLen , numUniqueOfferReqs , offerList )"		2499731	1					
ANR	2500278	Callee	generateClassAdList		2499731	0					
ANR	2500279	Identifier	generateClassAdList		2499731	0					
ANR	2500280	ArgumentList	numOffers		2499731	1					
ANR	2500281	Argument	numOffers		2499731	0					
ANR	2500282	Identifier	numOffers		2499731	0					
ANR	2500283	Argument	offerReqLen		2499731	1					
ANR	2500284	Identifier	offerReqLen		2499731	0					
ANR	2500285	Argument	numUniqueOfferReqs		2499731	2					
ANR	2500286	Identifier	numUniqueOfferReqs		2499731	0					
ANR	2500287	Argument	offerList		2499731	3					
ANR	2500288	Identifier	offerList		2499731	0					
ANR	2500289	CompoundStatement		105:46:2883:2883	2499731	1					
ANR	2500290	ExpressionStatement	"cerr << argv [ 0 ] << "": error in generateClassAdList( "" << numOffers << "", "" << offerReqLen << "", "" << numUniqueOfferReqs << "", offerList )"" << endl"	141:4:4131:4289	2499731	0	True				
ANR	2500291	ShiftExpression	"cerr << argv [ 0 ] << "": error in generateClassAdList( "" << numOffers << "", "" << offerReqLen << "", "" << numUniqueOfferReqs << "", offerList )"" << endl"		2499731	0		<<			
ANR	2500292	Identifier	cerr		2499731	0					
ANR	2500293	ShiftExpression	"argv [ 0 ] << "": error in generateClassAdList( "" << numOffers << "", "" << offerReqLen << "", "" << numUniqueOfferReqs << "", offerList )"" << endl"		2499731	1		<<			
ANR	2500294	ArrayIndexing	argv [ 0 ]		2499731	0					
ANR	2500295	Identifier	argv		2499731	0					
ANR	2500296	PrimaryExpression	0		2499731	1					
ANR	2500297	ShiftExpression	""": error in generateClassAdList( "" << numOffers << "", "" << offerReqLen << "", "" << numUniqueOfferReqs << "", offerList )"" << endl"		2499731	1		<<			
ANR	2500298	PrimaryExpression	""": error in generateClassAdList( """		2499731	0					
ANR	2500299	ShiftExpression	"numOffers << "", "" << offerReqLen << "", "" << numUniqueOfferReqs << "", offerList )"" << endl"		2499731	1		<<			
ANR	2500300	Identifier	numOffers		2499731	0					
ANR	2500301	ShiftExpression	""", "" << offerReqLen << "", "" << numUniqueOfferReqs << "", offerList )"" << endl"		2499731	1		<<			
ANR	2500302	PrimaryExpression	""", """		2499731	0					
ANR	2500303	ShiftExpression	"offerReqLen << "", "" << numUniqueOfferReqs << "", offerList )"" << endl"		2499731	1		<<			
ANR	2500304	Identifier	offerReqLen		2499731	0					
ANR	2500305	ShiftExpression	""", "" << numUniqueOfferReqs << "", offerList )"" << endl"		2499731	1		<<			
ANR	2500306	PrimaryExpression	""", """		2499731	0					
ANR	2500307	ShiftExpression	"numUniqueOfferReqs << "", offerList )"" << endl"		2499731	1		<<			
ANR	2500308	Identifier	numUniqueOfferReqs		2499731	0					
ANR	2500309	ShiftExpression	""", offerList )"" << endl"		2499731	1		<<			
ANR	2500310	PrimaryExpression	""", offerList )"""		2499731	0					
ANR	2500311	Identifier	endl		2499731	1					
ANR	2500312	ExpressionStatement	exit ( 1 )	144:4:4295:4304	2499731	1	True				
ANR	2500313	CallExpression	exit ( 1 )		2499731	0					
ANR	2500314	Callee	exit		2499731	0					
ANR	2500315	Identifier	exit		2499731	0					
ANR	2500316	ArgumentList	1		2499731	1					
ANR	2500317	Argument	1		2499731	0					
ANR	2500318	PrimaryExpression	1		2499731	0					
ANR	2500319	IfStatement	"if ( strcmp ( argv [ 1 ] , ""jr"" ) == 0 )"		2499731	5					
ANR	2500320	Condition	"strcmp ( argv [ 1 ] , ""jr"" ) == 0"	147:7:4319:4346	2499731	0	True				
ANR	2500321	EqualityExpression	"strcmp ( argv [ 1 ] , ""jr"" ) == 0"		2499731	0		==			
ANR	2500322	CallExpression	"strcmp ( argv [ 1 ] , ""jr"" )"		2499731	0					
ANR	2500323	Callee	strcmp		2499731	0					
ANR	2500324	Identifier	strcmp		2499731	0					
ANR	2500325	ArgumentList	argv [ 1 ]		2499731	1					
ANR	2500326	Argument	argv [ 1 ]		2499731	0					
ANR	2500327	ArrayIndexing	argv [ 1 ]		2499731	0					
ANR	2500328	Identifier	argv		2499731	0					
ANR	2500329	PrimaryExpression	1		2499731	1					
ANR	2500330	Argument	"""jr"""		2499731	1					
ANR	2500331	PrimaryExpression	"""jr"""		2499731	0					
ANR	2500332	PrimaryExpression	0		2499731	1					
ANR	2500333	CompoundStatement		112:38:3108:3108	2499731	1					
ANR	2500334	ExpressionStatement	"buffer = """""	151:4:4478:4489	2499731	0	True				
ANR	2500335	AssignmentExpression	"buffer = """""		2499731	0		=			
ANR	2500336	Identifier	buffer		2499731	0					
ANR	2500337	PrimaryExpression	""""""		2499731	1					
ANR	2500338	ExpressionStatement	"gettimeofday ( tvStart , tz )"	152:4:4495:4522	2499731	1	True				
ANR	2500339	CallExpression	"gettimeofday ( tvStart , tz )"		2499731	0					
ANR	2500340	Callee	gettimeofday		2499731	0					
ANR	2500341	Identifier	gettimeofday		2499731	0					
ANR	2500342	ArgumentList	tvStart		2499731	1					
ANR	2500343	Argument	tvStart		2499731	0					
ANR	2500344	Identifier	tvStart		2499731	0					
ANR	2500345	Argument	tz		2499731	1					
ANR	2500346	Identifier	tz		2499731	0					
ANR	2500347	ExpressionStatement	"analyzer . AnalyzeJobReqToBuffer ( toOldClassAd ( request ) , offerList , buffer )"	153:4:4528:4617	2499731	2	True				
ANR	2500348	CallExpression	"analyzer . AnalyzeJobReqToBuffer ( toOldClassAd ( request ) , offerList , buffer )"		2499731	0					
ANR	2500349	Callee	analyzer . AnalyzeJobReqToBuffer		2499731	0					
ANR	2500350	MemberAccess	analyzer . AnalyzeJobReqToBuffer		2499731	0					
ANR	2500351	Identifier	analyzer		2499731	0					
ANR	2500352	Identifier	AnalyzeJobReqToBuffer		2499731	1					
ANR	2500353	ArgumentList	toOldClassAd ( request )		2499731	1					
ANR	2500354	Argument	toOldClassAd ( request )		2499731	0					
ANR	2500355	CallExpression	toOldClassAd ( request )		2499731	0					
ANR	2500356	Callee	toOldClassAd		2499731	0					
ANR	2500357	Identifier	toOldClassAd		2499731	0					
ANR	2500358	ArgumentList	request		2499731	1					
ANR	2500359	Argument	request		2499731	0					
ANR	2500360	Identifier	request		2499731	0					
ANR	2500361	Argument	offerList		2499731	1					
ANR	2500362	Identifier	offerList		2499731	0					
ANR	2500363	Argument	buffer		2499731	2					
ANR	2500364	Identifier	buffer		2499731	0					
ANR	2500365	ExpressionStatement	"gettimeofday ( tvEnd , tz )"	155:4:4623:4648	2499731	3	True				
ANR	2500366	CallExpression	"gettimeofday ( tvEnd , tz )"		2499731	0					
ANR	2500367	Callee	gettimeofday		2499731	0					
ANR	2500368	Identifier	gettimeofday		2499731	0					
ANR	2500369	ArgumentList	tvEnd		2499731	1					
ANR	2500370	Argument	tvEnd		2499731	0					
ANR	2500371	Identifier	tvEnd		2499731	0					
ANR	2500372	Argument	tz		2499731	1					
ANR	2500373	Identifier	tz		2499731	0					
ANR	2500374	ExpressionStatement	cout << ( round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 ) / 100 ) << endl	156:4:4654:4792	2499731	4	True				
ANR	2500375	ShiftExpression	cout << ( round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 ) / 100 ) << endl		2499731	0		<<			
ANR	2500376	Identifier	cout		2499731	0					
ANR	2500377	ShiftExpression	( round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 ) / 100 ) << endl		2499731	1		<<			
ANR	2500378	MultiplicativeExpression	round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 ) / 100		2499731	0		/			
ANR	2500379	CallExpression	round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 )		2499731	0					
ANR	2500380	Callee	round		2499731	0					
ANR	2500381	Identifier	round		2499731	0					
ANR	2500382	ArgumentList	( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000		2499731	1					
ANR	2500383	Argument	( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000		2499731	0					
ANR	2500384	AdditiveExpression	( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000		2499731	0		+			
ANR	2500385	MultiplicativeExpression	( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100		2499731	0		*			
ANR	2500386	AdditiveExpression	tvEnd -> tv_sec - tvStart -> tv_sec		2499731	0		-			
ANR	2500387	PtrMemberAccess	tvEnd -> tv_sec		2499731	0					
ANR	2500388	Identifier	tvEnd		2499731	0					
ANR	2500389	Identifier	tv_sec		2499731	1					
ANR	2500390	PtrMemberAccess	tvStart -> tv_sec		2499731	1					
ANR	2500391	Identifier	tvStart		2499731	0					
ANR	2500392	Identifier	tv_sec		2499731	1					
ANR	2500393	PrimaryExpression	100		2499731	1					
ANR	2500394	MultiplicativeExpression	( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000		2499731	1		/			
ANR	2500395	AdditiveExpression	tvEnd -> tv_usec - tvStart -> tv_usec		2499731	0		-			
ANR	2500396	PtrMemberAccess	tvEnd -> tv_usec		2499731	0					
ANR	2500397	Identifier	tvEnd		2499731	0					
ANR	2500398	Identifier	tv_usec		2499731	1					
ANR	2500399	PtrMemberAccess	tvStart -> tv_usec		2499731	1					
ANR	2500400	Identifier	tvStart		2499731	0					
ANR	2500401	Identifier	tv_usec		2499731	1					
ANR	2500402	PrimaryExpression	10000		2499731	1					
ANR	2500403	PrimaryExpression	100		2499731	1					
ANR	2500404	Identifier	endl		2499731	1					
ANR	2500405	ReturnStatement	return 0 ;	160:4:4822:4830	2499731	5	True				
ANR	2500406	PrimaryExpression	0		2499731	0					
ANR	2500407	ElseStatement	else		2499731	0					
ANR	2500408	IfStatement	"if ( strcmp ( argv [ 1 ] , ""ja"" ) == 0 )"		2499731	0					
ANR	2500409	Condition	"strcmp ( argv [ 1 ] , ""ja"" ) == 0"	162:12:4849:4876	2499731	0	True				
ANR	2500410	EqualityExpression	"strcmp ( argv [ 1 ] , ""ja"" ) == 0"		2499731	0		==			
ANR	2500411	CallExpression	"strcmp ( argv [ 1 ] , ""ja"" )"		2499731	0					
ANR	2500412	Callee	strcmp		2499731	0					
ANR	2500413	Identifier	strcmp		2499731	0					
ANR	2500414	ArgumentList	argv [ 1 ]		2499731	1					
ANR	2500415	Argument	argv [ 1 ]		2499731	0					
ANR	2500416	ArrayIndexing	argv [ 1 ]		2499731	0					
ANR	2500417	Identifier	argv		2499731	0					
ANR	2500418	PrimaryExpression	1		2499731	1					
ANR	2500419	Argument	"""ja"""		2499731	1					
ANR	2500420	PrimaryExpression	"""ja"""		2499731	0					
ANR	2500421	PrimaryExpression	0		2499731	1					
ANR	2500422	CompoundStatement		127:43:3638:3638	2499731	1					
ANR	2500423	ExpressionStatement	"buffer = """""	166:4:5010:5021	2499731	0	True				
ANR	2500424	AssignmentExpression	"buffer = """""		2499731	0		=			
ANR	2500425	Identifier	buffer		2499731	0					
ANR	2500426	PrimaryExpression	""""""		2499731	1					
ANR	2500427	ExpressionStatement	"gettimeofday ( tvStart , tz )"	167:4:5027:5054	2499731	1	True				
ANR	2500428	CallExpression	"gettimeofday ( tvStart , tz )"		2499731	0					
ANR	2500429	Callee	gettimeofday		2499731	0					
ANR	2500430	Identifier	gettimeofday		2499731	0					
ANR	2500431	ArgumentList	tvStart		2499731	1					
ANR	2500432	Argument	tvStart		2499731	0					
ANR	2500433	Identifier	tvStart		2499731	0					
ANR	2500434	Argument	tz		2499731	1					
ANR	2500435	Identifier	tz		2499731	0					
ANR	2500436	ExpressionStatement	"analyzer . AnalyzeJobAttrsToBuffer ( toOldClassAd ( request ) , offerList , buffer )"	168:4:5060:5153	2499731	2	True				
ANR	2500437	CallExpression	"analyzer . AnalyzeJobAttrsToBuffer ( toOldClassAd ( request ) , offerList , buffer )"		2499731	0					
ANR	2500438	Callee	analyzer . AnalyzeJobAttrsToBuffer		2499731	0					
ANR	2500439	MemberAccess	analyzer . AnalyzeJobAttrsToBuffer		2499731	0					
ANR	2500440	Identifier	analyzer		2499731	0					
ANR	2500441	Identifier	AnalyzeJobAttrsToBuffer		2499731	1					
ANR	2500442	ArgumentList	toOldClassAd ( request )		2499731	1					
ANR	2500443	Argument	toOldClassAd ( request )		2499731	0					
ANR	2500444	CallExpression	toOldClassAd ( request )		2499731	0					
ANR	2500445	Callee	toOldClassAd		2499731	0					
ANR	2500446	Identifier	toOldClassAd		2499731	0					
ANR	2500447	ArgumentList	request		2499731	1					
ANR	2500448	Argument	request		2499731	0					
ANR	2500449	Identifier	request		2499731	0					
ANR	2500450	Argument	offerList		2499731	1					
ANR	2500451	Identifier	offerList		2499731	0					
ANR	2500452	Argument	buffer		2499731	2					
ANR	2500453	Identifier	buffer		2499731	0					
ANR	2500454	ExpressionStatement	"gettimeofday ( tvEnd , tz )"	170:4:5159:5184	2499731	3	True				
ANR	2500455	CallExpression	"gettimeofday ( tvEnd , tz )"		2499731	0					
ANR	2500456	Callee	gettimeofday		2499731	0					
ANR	2500457	Identifier	gettimeofday		2499731	0					
ANR	2500458	ArgumentList	tvEnd		2499731	1					
ANR	2500459	Argument	tvEnd		2499731	0					
ANR	2500460	Identifier	tvEnd		2499731	0					
ANR	2500461	Argument	tz		2499731	1					
ANR	2500462	Identifier	tz		2499731	0					
ANR	2500463	ExpressionStatement	cout << ( round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 ) / 100 ) << endl	171:4:5190:5338	2499731	4	True				
ANR	2500464	ShiftExpression	cout << ( round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 ) / 100 ) << endl		2499731	0		<<			
ANR	2500465	Identifier	cout		2499731	0					
ANR	2500466	ShiftExpression	( round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 ) / 100 ) << endl		2499731	1		<<			
ANR	2500467	MultiplicativeExpression	round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 ) / 100		2499731	0		/			
ANR	2500468	CallExpression	round ( ( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000 )		2499731	0					
ANR	2500469	Callee	round		2499731	0					
ANR	2500470	Identifier	round		2499731	0					
ANR	2500471	ArgumentList	( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000		2499731	1					
ANR	2500472	Argument	( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000		2499731	0					
ANR	2500473	AdditiveExpression	( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100 + ( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000		2499731	0		+			
ANR	2500474	MultiplicativeExpression	( tvEnd -> tv_sec - tvStart -> tv_sec ) * 100		2499731	0		*			
ANR	2500475	AdditiveExpression	tvEnd -> tv_sec - tvStart -> tv_sec		2499731	0		-			
ANR	2500476	PtrMemberAccess	tvEnd -> tv_sec		2499731	0					
ANR	2500477	Identifier	tvEnd		2499731	0					
ANR	2500478	Identifier	tv_sec		2499731	1					
ANR	2500479	PtrMemberAccess	tvStart -> tv_sec		2499731	1					
ANR	2500480	Identifier	tvStart		2499731	0					
ANR	2500481	Identifier	tv_sec		2499731	1					
ANR	2500482	PrimaryExpression	100		2499731	1					
ANR	2500483	MultiplicativeExpression	( tvEnd -> tv_usec - tvStart -> tv_usec ) / 10000		2499731	1		/			
ANR	2500484	AdditiveExpression	tvEnd -> tv_usec - tvStart -> tv_usec		2499731	0		-			
ANR	2500485	PtrMemberAccess	tvEnd -> tv_usec		2499731	0					
ANR	2500486	Identifier	tvEnd		2499731	0					
ANR	2500487	Identifier	tv_usec		2499731	1					
ANR	2500488	PtrMemberAccess	tvStart -> tv_usec		2499731	1					
ANR	2500489	Identifier	tvStart		2499731	0					
ANR	2500490	Identifier	tv_usec		2499731	1					
ANR	2500491	PrimaryExpression	10000		2499731	1					
ANR	2500492	PrimaryExpression	100		2499731	1					
ANR	2500493	Identifier	endl		2499731	1					
ANR	2500494	ReturnStatement	return 0 ;	176:4:5368:5376	2499731	5	True				
ANR	2500495	PrimaryExpression	0		2499731	0					
ANR	2500496	ElseStatement	else		2499731	0					
ANR	2500497	CompoundStatement		143:8:4153:4153	2499731	0					
ANR	2500498	ExpressionStatement	usage ( argv [ 0 ] )	179:4:5401:5417	2499731	0	True				
ANR	2500499	CallExpression	usage ( argv [ 0 ] )		2499731	0					
ANR	2500500	Callee	usage		2499731	0					
ANR	2500501	Identifier	usage		2499731	0					
ANR	2500502	ArgumentList	argv [ 0 ]		2499731	1					
ANR	2500503	Argument	argv [ 0 ]		2499731	0					
ANR	2500504	ArrayIndexing	argv [ 0 ]		2499731	0					
ANR	2500505	Identifier	argv		2499731	0					
ANR	2500506	PrimaryExpression	0		2499731	1					
ANR	2500507	ExpressionStatement	exit ( 1 )	180:4:5423:5432	2499731	1	True				
ANR	2500508	CallExpression	exit ( 1 )		2499731	0					
ANR	2500509	Callee	exit		2499731	0					
ANR	2500510	Identifier	exit		2499731	0					
ANR	2500511	ArgumentList	1		2499731	1					
ANR	2500512	Argument	1		2499731	0					
ANR	2500513	PrimaryExpression	1		2499731	0					
ANR	2500514	ReturnType	int		2499731	1					
ANR	2500515	Identifier	main		2499731	2					
ANR	2500516	ParameterList	"int argc , char * argv [ ]"		2499731	3					
ANR	2500517	Parameter	int argc	35:11:1216:1223	2499731	0	True				
ANR	2500518	ParameterType	int		2499731	0					
ANR	2500519	Identifier	argc		2499731	1					
ANR	2500520	Parameter	char * argv [ ]	35:21:1226:1237	2499731	1	True				
ANR	2500521	ParameterType	char * [ ]		2499731	0					
ANR	2500522	Identifier	argv		2499731	1					
ANR	2500523	CFGEntryNode	ENTRY		2499731		True				
ANR	2500524	CFGExitNode	EXIT		2499731		True				
ANR	2500525	Symbol	request		2499731						
ANR	2500526	Symbol	tz		2499731						
ANR	2500527	Symbol	generateClassAdList		2499731						
ANR	2500528	Symbol	numOffers		2499731						
ANR	2500529	Symbol	numUniqueOfferReqs		2499731						
ANR	2500530	Symbol	* argv		2499731						
ANR	2500531	Symbol	argv		2499731						
ANR	2500532	Symbol	generateClassAd		2499731						
ANR	2500533	Symbol	offer		2499731						
ANR	2500534	Symbol	analyzer		2499731						
ANR	2500535	Symbol	requestReqLen		2499731						
ANR	2500536	Symbol	buffer		2499731						
ANR	2500537	Symbol	attr		2499731						
ANR	2500538	Symbol	* tvStart		2499731						
ANR	2500539	Symbol	tvStart -> tv_usec		2499731						
ANR	2500540	Symbol	tvStart -> tv_sec		2499731						
ANR	2500541	Symbol	argc		2499731						
ANR	2500542	Symbol	atoi		2499731						
ANR	2500543	Symbol	strcmp		2499731						
ANR	2500544	Symbol	tvEnd		2499731						
ANR	2500545	Symbol	NULL		2499731						
ANR	2500546	Symbol	offerReqLen		2499731						
ANR	2500547	Symbol	toOldClassAd		2499731						
ANR	2500548	Symbol	tvStart		2499731						
ANR	2500549	Symbol	offerList		2499731						
ANR	2500550	Symbol	numAttrs		2499731						
ANR	2500551	Symbol	* tvEnd		2499731						
ANR	2500552	Symbol	tvEnd -> tv_sec		2499731						
ANR	2500553	Symbol	time		2499731						
ANR	2500554	Symbol	generateAttributes		2499731						
ANR	2500555	Symbol	tvEnd -> tv_usec		2499731						
ANR	2500556	Function	usage	186:0:5449:5677							
ANR	2500557	FunctionDef	usage (char * myName)		2500556	0					
ANR	2500558	CompoundStatement		188:0:5477:5677	2500556	0					
ANR	2500559	ExpressionStatement	"printf ( ""Usage:\\n"" )"	189:1:5480:5500	2500556	0	True				
ANR	2500560	CallExpression	"printf ( ""Usage:\\n"" )"		2500556	0					
ANR	2500561	Callee	printf		2500556	0					
ANR	2500562	Identifier	printf		2500556	0					
ANR	2500563	ArgumentList	"""Usage:\\n"""		2500556	1					
ANR	2500564	Argument	"""Usage:\\n"""		2500556	0					
ANR	2500565	PrimaryExpression	"""Usage:\\n"""		2500556	0					
ANR	2500566	ExpressionStatement	"printf ( ""%s jr|ja <#attrs> <request reqLen> <offer reqLen> <#offers> <#unique>\\n"" , myName )"	190:1:5503:5594	2500556	1	True				
ANR	2500567	CallExpression	"printf ( ""%s jr|ja <#attrs> <request reqLen> <offer reqLen> <#offers> <#unique>\\n"" , myName )"		2500556	0					
ANR	2500568	Callee	printf		2500556	0					
ANR	2500569	Identifier	printf		2500556	0					
ANR	2500570	ArgumentList	"""%s jr|ja <#attrs> <request reqLen> <offer reqLen> <#offers> <#unique>\\n"""		2500556	1					
ANR	2500571	Argument	"""%s jr|ja <#attrs> <request reqLen> <offer reqLen> <#offers> <#unique>\\n"""		2500556	0					
ANR	2500572	PrimaryExpression	"""%s jr|ja <#attrs> <request reqLen> <offer reqLen> <#offers> <#unique>\\n"""		2500556	0					
ANR	2500573	Argument	myName		2500556	1					
ANR	2500574	Identifier	myName		2500556	0					
ANR	2500575	ExpressionStatement	"printf ( ""%s e <#attrs> <main Ad reqLen> <context Ad reqLen> <attr>\\n"" , myName )"	191:1:5597:5675	2500556	2	True				
ANR	2500576	CallExpression	"printf ( ""%s e <#attrs> <main Ad reqLen> <context Ad reqLen> <attr>\\n"" , myName )"		2500556	0					
ANR	2500577	Callee	printf		2500556	0					
ANR	2500578	Identifier	printf		2500556	0					
ANR	2500579	ArgumentList	"""%s e <#attrs> <main Ad reqLen> <context Ad reqLen> <attr>\\n"""		2500556	1					
ANR	2500580	Argument	"""%s e <#attrs> <main Ad reqLen> <context Ad reqLen> <attr>\\n"""		2500556	0					
ANR	2500581	PrimaryExpression	"""%s e <#attrs> <main Ad reqLen> <context Ad reqLen> <attr>\\n"""		2500556	0					
ANR	2500582	Argument	myName		2500556	1					
ANR	2500583	Identifier	myName		2500556	0					
ANR	2500584	ReturnType	void		2500556	1					
ANR	2500585	Identifier	usage		2500556	2					
ANR	2500586	ParameterList	char * myName		2500556	3					
ANR	2500587	Parameter	char * myName	187:7:5462:5473	2500556	0	True				
ANR	2500588	ParameterType	char *		2500556	0					
ANR	2500589	Identifier	myName		2500556	1					
ANR	2500590	CFGEntryNode	ENTRY		2500556		True				
ANR	2500591	CFGExitNode	EXIT		2500556		True				
ANR	2500592	Symbol	myName		2500556						
ANR	2500593	Function	generateAttributes	194:0:5680:5916							
ANR	2500594	FunctionDef	generateAttributes ()		2500593	0					
ANR	2500595	CompoundStatement		196:0:5707:5916	2500593	0					
ANR	2500596	IfStatement	if ( numAttrs <= 0 )		2500593	0					
ANR	2500597	Condition	numAttrs <= 0	197:5:5714:5726	2500593	0	True				
ANR	2500598	RelationalExpression	numAttrs <= 0		2500593	0		<=			
ANR	2500599	Identifier	numAttrs		2500593	0					
ANR	2500600	PrimaryExpression	0		2500593	1					
ANR	2500601	CompoundStatement		2:21:22:22	2500593	1					
ANR	2500602	ReturnStatement	return false ;	198:2:5734:5746	2500593	0	True				
ANR	2500603	Identifier	false		2500593	0					
ANR	2500604	ExpressionStatement	attrs = new string [ numAttrs ]	200:1:5752:5780	2500593	1	True				
ANR	2500605	AssignmentExpression	attrs = new string [ numAttrs ]		2500593	0		=			
ANR	2500606	Identifier	attrs		2500593	0					
ANR	2500607	Identifier	numAttrs		2500593	1					
ANR	2500608	IdentifierDeclStatement	char tempAttr [ 32 ] ;	201:1:5783:5800	2500593	2	True				
ANR	2500609	IdentifierDecl	tempAttr [ 32 ]		2500593	0					
ANR	2500610	IdentifierDeclType	char [ 32 ]		2500593	0					
ANR	2500611	Identifier	tempAttr		2500593	1					
ANR	2500612	PrimaryExpression	32		2500593	2					
ANR	2500613	ForStatement	for ( int i = 0 ; i < numAttrs ; i ++ )		2500593	3					
ANR	2500614	ForInit	int i = 0 ;	202:6:5808:5817	2500593	0	True				
ANR	2500615	IdentifierDeclStatement	int i = 0 ;		2500593	0					
ANR	2500616	IdentifierDecl	i = 0		2500593	0					
ANR	2500617	IdentifierDeclType	int		2500593	0					
ANR	2500618	Identifier	i		2500593	1					
ANR	2500619	AssignmentExpression	i = 0		2500593	2		=			
ANR	2500620	Identifier	i		2500593	0					
ANR	2500621	PrimaryExpression	0		2500593	1					
ANR	2500622	Condition	i < numAttrs	202:17:5819:5830	2500593	1	True				
ANR	2500623	RelationalExpression	i < numAttrs		2500593	0		<			
ANR	2500624	Identifier	i		2500593	0					
ANR	2500625	Identifier	numAttrs		2500593	1					
ANR	2500626	PostIncDecOperationExpression	i ++	202:31:5833:5835	2500593	2	True				
ANR	2500627	Identifier	i		2500593	0					
ANR	2500628	IncDec	++		2500593	1					
ANR	2500629	CompoundStatement		7:36:130:130	2500593	3					
ANR	2500630	ExpressionStatement	"sprintf ( tempAttr , ""attr%i"" , i )"	203:2:5842:5874	2500593	0	True				
ANR	2500631	CallExpression	"sprintf ( tempAttr , ""attr%i"" , i )"		2500593	0					
ANR	2500632	Callee	sprintf		2500593	0					
ANR	2500633	Identifier	sprintf		2500593	0					
ANR	2500634	ArgumentList	tempAttr		2500593	1					
ANR	2500635	Argument	tempAttr		2500593	0					
ANR	2500636	Identifier	tempAttr		2500593	0					
ANR	2500637	Argument	"""attr%i"""		2500593	1					
ANR	2500638	PrimaryExpression	"""attr%i"""		2500593	0					
ANR	2500639	Argument	i		2500593	2					
ANR	2500640	Identifier	i		2500593	0					
ANR	2500641	ExpressionStatement	attrs [ i ] = tempAttr	204:2:5878:5897	2500593	1	True				
ANR	2500642	AssignmentExpression	attrs [ i ] = tempAttr		2500593	0		=			
ANR	2500643	ArrayIndexing	attrs [ i ]		2500593	0					
ANR	2500644	Identifier	attrs		2500593	0					
ANR	2500645	Identifier	i		2500593	1					
ANR	2500646	Identifier	tempAttr		2500593	1					
ANR	2500647	ReturnStatement	return true ;	206:1:5903:5914	2500593	4	True				
ANR	2500648	Identifier	true		2500593	0					
ANR	2500649	ReturnType	bool		2500593	1					
ANR	2500650	Identifier	generateAttributes		2500593	2					
ANR	2500651	ParameterList			2500593	3					
ANR	2500652	CFGEntryNode	ENTRY		2500593		True				
ANR	2500653	CFGExitNode	EXIT		2500593		True				
ANR	2500654	Symbol	tempAttr		2500593						
ANR	2500655	Symbol	* attrs		2500593						
ANR	2500656	Symbol	* i		2500593						
ANR	2500657	Symbol	false		2500593						
ANR	2500658	Symbol	true		2500593						
ANR	2500659	Symbol	numAttrs		2500593						
ANR	2500660	Symbol	i		2500593						
ANR	2500661	Symbol	attrs		2500593						
ANR	2500662	Function	generateClassAdList	209:0:5919:6450							
ANR	2500663	FunctionDef	"generateClassAdList (int numAds , int reqLen , int numDiffReqs , ClassAdList & adList)"		2500662	0					
ANR	2500664	CompoundStatement		212:0:6016:6450	2500662	0					
ANR	2500665	IdentifierDeclStatement	classad :: ClassAd * uniqueAds [ numDiffReqs ] ;	213:1:6019:6059	2500662	0	True				
ANR	2500666	IdentifierDecl	* uniqueAds [ numDiffReqs ]		2500662	0					
ANR	2500667	IdentifierDeclType	classad :: ClassAd * [ numDiffReqs ]		2500662	0					
ANR	2500668	Identifier	uniqueAds		2500662	1					
ANR	2500669	Identifier	numDiffReqs		2500662	2					
ANR	2500670	IdentifierDeclStatement	classad :: ClassAd * currentAd = NULL ;	214:1:6062:6096	2500662	1	True				
ANR	2500671	IdentifierDecl	* currentAd = NULL		2500662	0					
ANR	2500672	IdentifierDeclType	classad :: ClassAd *		2500662	0					
ANR	2500673	Identifier	currentAd		2500662	1					
ANR	2500674	AssignmentExpression	* currentAd = NULL		2500662	2		=			
ANR	2500675	Identifier	NULL		2500662	0					
ANR	2500676	Identifier	NULL		2500662	1					
ANR	2500677	ForStatement	for ( int i = 0 ; i < numDiffReqs ; i ++ )		2500662	2					
ANR	2500678	ForInit	int i = 0 ;	215:6:6104:6113	2500662	0	True				
ANR	2500679	IdentifierDeclStatement	int i = 0 ;		2500662	0					
ANR	2500680	IdentifierDecl	i = 0		2500662	0					
ANR	2500681	IdentifierDeclType	int		2500662	0					
ANR	2500682	Identifier	i		2500662	1					
ANR	2500683	AssignmentExpression	i = 0		2500662	2		=			
ANR	2500684	Identifier	i		2500662	0					
ANR	2500685	PrimaryExpression	0		2500662	1					
ANR	2500686	Condition	i < numDiffReqs	215:17:6115:6129	2500662	1	True				
ANR	2500687	RelationalExpression	i < numDiffReqs		2500662	0		<			
ANR	2500688	Identifier	i		2500662	0					
ANR	2500689	Identifier	numDiffReqs		2500662	1					
ANR	2500690	PostIncDecOperationExpression	i ++	215:34:6132:6134	2500662	2	True				
ANR	2500691	Identifier	i		2500662	0					
ANR	2500692	IncDec	++		2500662	1					
ANR	2500693	CompoundStatement		4:40:121:121	2500662	3					
ANR	2500694	ExpressionStatement	uniqueAds [ i ] = NULL	216:2:6142:6161	2500662	0	True				
ANR	2500695	AssignmentExpression	uniqueAds [ i ] = NULL		2500662	0		=			
ANR	2500696	ArrayIndexing	uniqueAds [ i ]		2500662	0					
ANR	2500697	Identifier	uniqueAds		2500662	0					
ANR	2500698	Identifier	i		2500662	1					
ANR	2500699	Identifier	NULL		2500662	1					
ANR	2500700	IfStatement	"if ( ! generateClassAd ( reqLen , uniqueAds [ i ] ) )"		2500662	1					
ANR	2500701	Condition	"! generateClassAd ( reqLen , uniqueAds [ i ] )"	217:6:6169:6208	2500662	0	True				
ANR	2500702	UnaryOperationExpression	"! generateClassAd ( reqLen , uniqueAds [ i ] )"		2500662	0					
ANR	2500703	UnaryOperator	!		2500662	0					
ANR	2500704	CallExpression	"generateClassAd ( reqLen , uniqueAds [ i ] )"		2500662	1					
ANR	2500705	Callee	generateClassAd		2500662	0					
ANR	2500706	Identifier	generateClassAd		2500662	0					
ANR	2500707	ArgumentList	reqLen		2500662	1					
ANR	2500708	Argument	reqLen		2500662	0					
ANR	2500709	Identifier	reqLen		2500662	0					
ANR	2500710	Argument	uniqueAds [ i ]		2500662	1					
ANR	2500711	ArrayIndexing	uniqueAds [ i ]		2500662	0					
ANR	2500712	Identifier	uniqueAds		2500662	0					
ANR	2500713	Identifier	i		2500662	1					
ANR	2500714	CompoundStatement		6:49:195:195	2500662	1					
ANR	2500715	ReturnStatement	return false ;	218:3:6217:6229	2500662	0	True				
ANR	2500716	Identifier	false		2500662	0					
ANR	2500717	ExpressionStatement	adList . Rewind ( )	221:1:6239:6255	2500662	3	True				
ANR	2500718	CallExpression	adList . Rewind ( )		2500662	0					
ANR	2500719	Callee	adList . Rewind		2500662	0					
ANR	2500720	MemberAccess	adList . Rewind		2500662	0					
ANR	2500721	Identifier	adList		2500662	0					
ANR	2500722	Identifier	Rewind		2500662	1					
ANR	2500723	ArgumentList			2500662	1					
ANR	2500724	ForStatement	for ( int i = 0 ; i < numAds ; i ++ )		2500662	4					
ANR	2500725	ForInit	int i = 0 ;	222:6:6263:6272	2500662	0	True				
ANR	2500726	IdentifierDeclStatement	int i = 0 ;		2500662	0					
ANR	2500727	IdentifierDecl	i = 0		2500662	0					
ANR	2500728	IdentifierDeclType	int		2500662	0					
ANR	2500729	Identifier	i		2500662	1					
ANR	2500730	AssignmentExpression	i = 0		2500662	2		=			
ANR	2500731	Identifier	i		2500662	0					
ANR	2500732	PrimaryExpression	0		2500662	1					
ANR	2500733	Condition	i < numAds	222:17:6274:6283	2500662	1	True				
ANR	2500734	RelationalExpression	i < numAds		2500662	0		<			
ANR	2500735	Identifier	i		2500662	0					
ANR	2500736	Identifier	numAds		2500662	1					
ANR	2500737	PostIncDecOperationExpression	i ++	222:29:6286:6288	2500662	2	True				
ANR	2500738	Identifier	i		2500662	0					
ANR	2500739	IncDec	++		2500662	1					
ANR	2500740	CompoundStatement		11:35:275:275	2500662	3					
ANR	2500741	ExpressionStatement	currentAd = ( classad :: ClassAd * ) uniqueAds [ rand ( ) % numDiffReqs ] -> Copy ( )	223:2:6296:6366	2500662	0	True				
ANR	2500742	AssignmentExpression	currentAd = ( classad :: ClassAd * ) uniqueAds [ rand ( ) % numDiffReqs ] -> Copy ( )		2500662	0		=			
ANR	2500743	Identifier	currentAd		2500662	0					
ANR	2500744	CastExpression	( classad :: ClassAd * ) uniqueAds [ rand ( ) % numDiffReqs ] -> Copy ( )		2500662	1					
ANR	2500745	CastTarget	classad :: ClassAd *		2500662	0					
ANR	2500746	CallExpression	uniqueAds [ rand ( ) % numDiffReqs ] -> Copy ( )		2500662	1					
ANR	2500747	Callee	uniqueAds [ rand ( ) % numDiffReqs ] -> Copy		2500662	0					
ANR	2500748	PtrMemberAccess	uniqueAds [ rand ( ) % numDiffReqs ] -> Copy		2500662	0					
ANR	2500749	ArrayIndexing	uniqueAds [ rand ( ) % numDiffReqs ]		2500662	0					
ANR	2500750	Identifier	uniqueAds		2500662	0					
ANR	2500751	MultiplicativeExpression	rand ( ) % numDiffReqs		2500662	1		%			
ANR	2500752	CallExpression	rand ( )		2500662	0					
ANR	2500753	Callee	rand		2500662	0					
ANR	2500754	Identifier	rand		2500662	0					
ANR	2500755	ArgumentList			2500662	1					
ANR	2500756	Identifier	numDiffReqs		2500662	1					
ANR	2500757	Identifier	Copy		2500662	1					
ANR	2500758	ArgumentList			2500662	1					
ANR	2500759	ExpressionStatement	adList . Insert ( toOldClassAd ( currentAd ) )	224:2:6370:6412	2500662	1	True				
ANR	2500760	CallExpression	adList . Insert ( toOldClassAd ( currentAd ) )		2500662	0					
ANR	2500761	Callee	adList . Insert		2500662	0					
ANR	2500762	MemberAccess	adList . Insert		2500662	0					
ANR	2500763	Identifier	adList		2500662	0					
ANR	2500764	Identifier	Insert		2500662	1					
ANR	2500765	ArgumentList	toOldClassAd ( currentAd )		2500662	1					
ANR	2500766	Argument	toOldClassAd ( currentAd )		2500662	0					
ANR	2500767	CallExpression	toOldClassAd ( currentAd )		2500662	0					
ANR	2500768	Callee	toOldClassAd		2500662	0					
ANR	2500769	Identifier	toOldClassAd		2500662	0					
ANR	2500770	ArgumentList	currentAd		2500662	1					
ANR	2500771	Argument	currentAd		2500662	0					
ANR	2500772	Identifier	currentAd		2500662	0					
ANR	2500773	ExpressionStatement	adList . Rewind ( )	226:1:6418:6434	2500662	5	True				
ANR	2500774	CallExpression	adList . Rewind ( )		2500662	0					
ANR	2500775	Callee	adList . Rewind		2500662	0					
ANR	2500776	MemberAccess	adList . Rewind		2500662	0					
ANR	2500777	Identifier	adList		2500662	0					
ANR	2500778	Identifier	Rewind		2500662	1					
ANR	2500779	ArgumentList			2500662	1					
ANR	2500780	ReturnStatement	return true ;	227:1:6437:6448	2500662	6	True				
ANR	2500781	Identifier	true		2500662	0					
ANR	2500782	ReturnType	bool		2500662	1					
ANR	2500783	Identifier	generateClassAdList		2500662	2					
ANR	2500784	ParameterList	"int numAds , int reqLen , int numDiffReqs , ClassAdList & adList"		2500662	3					
ANR	2500785	Parameter	int numAds	210:21:5945:5954	2500662	0	True				
ANR	2500786	ParameterType	int		2500662	0					
ANR	2500787	Identifier	numAds		2500662	1					
ANR	2500788	Parameter	int reqLen	210:33:5957:5966	2500662	1	True				
ANR	2500789	ParameterType	int		2500662	0					
ANR	2500790	Identifier	reqLen		2500662	1					
ANR	2500791	Parameter	int numDiffReqs	210:45:5969:5983	2500662	2	True				
ANR	2500792	ParameterType	int		2500662	0					
ANR	2500793	Identifier	numDiffReqs		2500662	1					
ANR	2500794	Parameter	ClassAdList & adList	211:8:5994:6012	2500662	3	True				
ANR	2500795	ParameterType	ClassAdList &		2500662	0					
ANR	2500796	Identifier	adList		2500662	1					
ANR	2500797	CFGEntryNode	ENTRY		2500662		True				
ANR	2500798	CFGExitNode	EXIT		2500662		True				
ANR	2500799	Symbol	* * numDiffReqs		2500662						
ANR	2500800	Symbol	NULL		2500662						
ANR	2500801	Symbol	* * uniqueAds		2500662						
ANR	2500802	Symbol	uniqueAds [ rand ( ) % numDiffReqs ] -> Copy		2500662						
ANR	2500803	Symbol	false		2500662						
ANR	2500804	Symbol	numDiffReqs		2500662						
ANR	2500805	Symbol	i		2500662						
ANR	2500806	Symbol	adList		2500662						
ANR	2500807	Symbol	* * rand		2500662						
ANR	2500808	Symbol	currentAd		2500662						
ANR	2500809	Symbol	generateClassAd		2500662						
ANR	2500810	Symbol	toOldClassAd		2500662						
ANR	2500811	Symbol	rand		2500662						
ANR	2500812	Symbol	numAds		2500662						
ANR	2500813	Symbol	* i		2500662						
ANR	2500814	Symbol	* uniqueAds		2500662						
ANR	2500815	Symbol	uniqueAds		2500662						
ANR	2500816	Symbol	* numDiffReqs		2500662						
ANR	2500817	Symbol	* rand		2500662						
ANR	2500818	Symbol	true		2500662						
ANR	2500819	Symbol	reqLen		2500662						
ANR	2500820	Function	generateClassAd	230:0:6453:7290							
ANR	2500821	FunctionDef	"generateClassAd (int reqLen , classad :: ClassAd * & ad)"		2500820	0					
ANR	2500822	CompoundStatement		231:0:6511:7290	2500820	0					
ANR	2500823	IfStatement	if ( attrs == NULL || numAttrs <= 0 )		2500820	0					
ANR	2500824	Condition	attrs == NULL || numAttrs <= 0	232:5:6518:6547	2500820	0	True				
ANR	2500825	OrExpression	attrs == NULL || numAttrs <= 0		2500820	0		||			
ANR	2500826	EqualityExpression	attrs == NULL		2500820	0		==			
ANR	2500827	Identifier	attrs		2500820	0					
ANR	2500828	Identifier	NULL		2500820	1					
ANR	2500829	RelationalExpression	numAttrs <= 0		2500820	1		<=			
ANR	2500830	Identifier	numAttrs		2500820	0					
ANR	2500831	PrimaryExpression	0		2500820	1					
ANR	2500832	CompoundStatement		2:37:38:38	2500820	1					
ANR	2500833	ReturnStatement	return false ;	233:2:6554:6566	2500820	0	True				
ANR	2500834	Identifier	false		2500820	0					
ANR	2500835	IdentifierDeclStatement	classad :: ClassAdParser parser ;	235:1:6572:6601	2500820	1	True				
ANR	2500836	IdentifierDecl	parser		2500820	0					
ANR	2500837	IdentifierDeclType	classad :: ClassAdParser		2500820	0					
ANR	2500838	Identifier	parser		2500820	1					
ANR	2500839	IdentifierDeclStatement	"string adString = """" ;"	236:1:6604:6624	2500820	2	True				
ANR	2500840	IdentifierDecl	"adString = """""		2500820	0					
ANR	2500841	IdentifierDeclType	string		2500820	0					
ANR	2500842	Identifier	adString		2500820	1					
ANR	2500843	AssignmentExpression	"adString = """""		2500820	2		=			
ANR	2500844	Identifier	adString		2500820	0					
ANR	2500845	PrimaryExpression	""""""		2500820	1					
ANR	2500846	IdentifierDeclStatement	"string reqString = """" ;"	237:1:6627:6648	2500820	3	True				
ANR	2500847	IdentifierDecl	"reqString = """""		2500820	0					
ANR	2500848	IdentifierDeclType	string		2500820	0					
ANR	2500849	Identifier	reqString		2500820	1					
ANR	2500850	AssignmentExpression	"reqString = """""		2500820	2		=			
ANR	2500851	Identifier	reqString		2500820	0					
ANR	2500852	PrimaryExpression	""""""		2500820	1					
ANR	2500853	IdentifierDeclStatement	char tempString [ 64 ] ;	238:1:6651:6670	2500820	4	True				
ANR	2500854	IdentifierDecl	tempString [ 64 ]		2500820	0					
ANR	2500855	IdentifierDeclType	char [ 64 ]		2500820	0					
ANR	2500856	Identifier	tempString		2500820	1					
ANR	2500857	PrimaryExpression	64		2500820	2					
ANR	2500858	ExpressionStatement	adString += '['	240:1:6674:6689	2500820	5	True				
ANR	2500859	AssignmentExpression	adString += '['		2500820	0		+=			
ANR	2500860	Identifier	adString		2500820	0					
ANR	2500861	PrimaryExpression	'['		2500820	1					
ANR	2500862	ForStatement	for ( int i = 0 ; i < numAttrs ; i ++ )		2500820	6					
ANR	2500863	ForInit	int i = 0 ;	242:6:6698:6707	2500820	0	True				
ANR	2500864	IdentifierDeclStatement	int i = 0 ;		2500820	0					
ANR	2500865	IdentifierDecl	i = 0		2500820	0					
ANR	2500866	IdentifierDeclType	int		2500820	0					
ANR	2500867	Identifier	i		2500820	1					
ANR	2500868	AssignmentExpression	i = 0		2500820	2		=			
ANR	2500869	Identifier	i		2500820	0					
ANR	2500870	PrimaryExpression	0		2500820	1					
ANR	2500871	Condition	i < numAttrs	242:17:6709:6720	2500820	1	True				
ANR	2500872	RelationalExpression	i < numAttrs		2500820	0		<			
ANR	2500873	Identifier	i		2500820	0					
ANR	2500874	Identifier	numAttrs		2500820	1					
ANR	2500875	PostIncDecOperationExpression	i ++	242:31:6723:6725	2500820	2	True				
ANR	2500876	Identifier	i		2500820	0					
ANR	2500877	IncDec	++		2500820	1					
ANR	2500878	CompoundStatement		12:37:217:217	2500820	3					
ANR	2500879	ExpressionStatement	"sprintf ( tempString , ""%s=%i;"" , attrs [ i ] . c_str ( ) , rand ( ) )"	243:2:6733:6792	2500820	0	True				
ANR	2500880	CallExpression	"sprintf ( tempString , ""%s=%i;"" , attrs [ i ] . c_str ( ) , rand ( ) )"		2500820	0					
ANR	2500881	Callee	sprintf		2500820	0					
ANR	2500882	Identifier	sprintf		2500820	0					
ANR	2500883	ArgumentList	tempString		2500820	1					
ANR	2500884	Argument	tempString		2500820	0					
ANR	2500885	Identifier	tempString		2500820	0					
ANR	2500886	Argument	"""%s=%i;"""		2500820	1					
ANR	2500887	PrimaryExpression	"""%s=%i;"""		2500820	0					
ANR	2500888	Argument	attrs [ i ] . c_str ( )		2500820	2					
ANR	2500889	CallExpression	attrs [ i ] . c_str ( )		2500820	0					
ANR	2500890	Callee	attrs [ i ] . c_str		2500820	0					
ANR	2500891	MemberAccess	attrs [ i ] . c_str		2500820	0					
ANR	2500892	ArrayIndexing	attrs [ i ]		2500820	0					
ANR	2500893	Identifier	attrs		2500820	0					
ANR	2500894	Identifier	i		2500820	1					
ANR	2500895	Identifier	c_str		2500820	1					
ANR	2500896	ArgumentList			2500820	1					
ANR	2500897	Argument	rand ( )		2500820	3					
ANR	2500898	CallExpression	rand ( )		2500820	0					
ANR	2500899	Callee	rand		2500820	0					
ANR	2500900	Identifier	rand		2500820	0					
ANR	2500901	ArgumentList			2500820	1					
ANR	2500902	ExpressionStatement	adString += tempString	244:2:6796:6818	2500820	1	True				
ANR	2500903	AssignmentExpression	adString += tempString		2500820	0		+=			
ANR	2500904	Identifier	adString		2500820	0					
ANR	2500905	Identifier	tempString		2500820	1					
ANR	2500906	ForStatement	for ( int i = 0 ; i < reqLen ; i ++ )		2500820	7					
ANR	2500907	ForInit	int i = 0 ;	247:6:6830:6839	2500820	0	True				
ANR	2500908	IdentifierDeclStatement	int i = 0 ;		2500820	0					
ANR	2500909	IdentifierDecl	i = 0		2500820	0					
ANR	2500910	IdentifierDeclType	int		2500820	0					
ANR	2500911	Identifier	i		2500820	1					
ANR	2500912	AssignmentExpression	i = 0		2500820	2		=			
ANR	2500913	Identifier	i		2500820	0					
ANR	2500914	PrimaryExpression	0		2500820	1					
ANR	2500915	Condition	i < reqLen	247:17:6841:6850	2500820	1	True				
ANR	2500916	RelationalExpression	i < reqLen		2500820	0		<			
ANR	2500917	Identifier	i		2500820	0					
ANR	2500918	Identifier	reqLen		2500820	1					
ANR	2500919	PostIncDecOperationExpression	i ++	247:29:6853:6855	2500820	2	True				
ANR	2500920	Identifier	i		2500820	0					
ANR	2500921	IncDec	++		2500820	1					
ANR	2500922	CompoundStatement		17:35:347:347	2500820	3					
ANR	2500923	IfStatement	if ( i > 0 )		2500820	0					
ANR	2500924	Condition	i > 0	248:6:6867:6871	2500820	0	True				
ANR	2500925	RelationalExpression	i > 0		2500820	0		>			
ANR	2500926	Identifier	i		2500820	0					
ANR	2500927	PrimaryExpression	0		2500820	1					
ANR	2500928	CompoundStatement		18:14:363:363	2500820	1					
ANR	2500929	ExpressionStatement	"reqString += ""&&"""	249:3:6880:6897	2500820	0	True				
ANR	2500930	AssignmentExpression	"reqString += ""&&"""		2500820	0		+=			
ANR	2500931	Identifier	reqString		2500820	0					
ANR	2500932	PrimaryExpression	"""&&"""		2500820	1					
ANR	2500933	ExpressionStatement	"sprintf ( tempString , ""(other.%s%s%i)"" , attrs [ rand ( ) % numAttrs ] . c_str ( ) , operators [ rand ( ) % NUM_OPS ] . c_str ( ) , rand ( ) )"	251:2:6905:7038	2500820	1	True				
ANR	2500934	CallExpression	"sprintf ( tempString , ""(other.%s%s%i)"" , attrs [ rand ( ) % numAttrs ] . c_str ( ) , operators [ rand ( ) % NUM_OPS ] . c_str ( ) , rand ( ) )"		2500820	0					
ANR	2500935	Callee	sprintf		2500820	0					
ANR	2500936	Identifier	sprintf		2500820	0					
ANR	2500937	ArgumentList	tempString		2500820	1					
ANR	2500938	Argument	tempString		2500820	0					
ANR	2500939	Identifier	tempString		2500820	0					
ANR	2500940	Argument	"""(other.%s%s%i)"""		2500820	1					
ANR	2500941	PrimaryExpression	"""(other.%s%s%i)"""		2500820	0					
ANR	2500942	Argument	attrs [ rand ( ) % numAttrs ] . c_str ( )		2500820	2					
ANR	2500943	CallExpression	attrs [ rand ( ) % numAttrs ] . c_str ( )		2500820	0					
ANR	2500944	Callee	attrs [ rand ( ) % numAttrs ] . c_str		2500820	0					
ANR	2500945	MemberAccess	attrs [ rand ( ) % numAttrs ] . c_str		2500820	0					
ANR	2500946	ArrayIndexing	attrs [ rand ( ) % numAttrs ]		2500820	0					
ANR	2500947	Identifier	attrs		2500820	0					
ANR	2500948	MultiplicativeExpression	rand ( ) % numAttrs		2500820	1		%			
ANR	2500949	CallExpression	rand ( )		2500820	0					
ANR	2500950	Callee	rand		2500820	0					
ANR	2500951	Identifier	rand		2500820	0					
ANR	2500952	ArgumentList			2500820	1					
ANR	2500953	Identifier	numAttrs		2500820	1					
ANR	2500954	Identifier	c_str		2500820	1					
ANR	2500955	ArgumentList			2500820	1					
ANR	2500956	Argument	operators [ rand ( ) % NUM_OPS ] . c_str ( )		2500820	3					
ANR	2500957	CallExpression	operators [ rand ( ) % NUM_OPS ] . c_str ( )		2500820	0					
ANR	2500958	Callee	operators [ rand ( ) % NUM_OPS ] . c_str		2500820	0					
ANR	2500959	MemberAccess	operators [ rand ( ) % NUM_OPS ] . c_str		2500820	0					
ANR	2500960	ArrayIndexing	operators [ rand ( ) % NUM_OPS ]		2500820	0					
ANR	2500961	Identifier	operators		2500820	0					
ANR	2500962	MultiplicativeExpression	rand ( ) % NUM_OPS		2500820	1		%			
ANR	2500963	CallExpression	rand ( )		2500820	0					
ANR	2500964	Callee	rand		2500820	0					
ANR	2500965	Identifier	rand		2500820	0					
ANR	2500966	ArgumentList			2500820	1					
ANR	2500967	Identifier	NUM_OPS		2500820	1					
ANR	2500968	Identifier	c_str		2500820	1					
ANR	2500969	ArgumentList			2500820	1					
ANR	2500970	Argument	rand ( )		2500820	4					
ANR	2500971	CallExpression	rand ( )		2500820	0					
ANR	2500972	Callee	rand		2500820	0					
ANR	2500973	Identifier	rand		2500820	0					
ANR	2500974	ArgumentList			2500820	1					
ANR	2500975	ExpressionStatement	reqString += tempString	255:2:7042:7065	2500820	2	True				
ANR	2500976	AssignmentExpression	reqString += tempString		2500820	0		+=			
ANR	2500977	Identifier	reqString		2500820	0					
ANR	2500978	Identifier	tempString		2500820	1					
ANR	2500979	ExpressionStatement	adString += ATTR_REQUIREMENTS	257:1:7071:7100	2500820	8	True				
ANR	2500980	AssignmentExpression	adString += ATTR_REQUIREMENTS		2500820	0		+=			
ANR	2500981	Identifier	adString		2500820	0					
ANR	2500982	Identifier	ATTR_REQUIREMENTS		2500820	1					
ANR	2500983	ExpressionStatement	adString += '='	258:1:7103:7118	2500820	9	True				
ANR	2500984	AssignmentExpression	adString += '='		2500820	0		+=			
ANR	2500985	Identifier	adString		2500820	0					
ANR	2500986	PrimaryExpression	'='		2500820	1					
ANR	2500987	ExpressionStatement	adString += reqString	259:1:7121:7142	2500820	10	True				
ANR	2500988	AssignmentExpression	adString += reqString		2500820	0		+=			
ANR	2500989	Identifier	adString		2500820	0					
ANR	2500990	Identifier	reqString		2500820	1					
ANR	2500991	ExpressionStatement	adString += ']'	261:1:7146:7161	2500820	11	True				
ANR	2500992	AssignmentExpression	adString += ']'		2500820	0		+=			
ANR	2500993	Identifier	adString		2500820	0					
ANR	2500994	PrimaryExpression	']'		2500820	1					
ANR	2500995	IfStatement	if ( ! ( ad = parser . ParseClassAd ( adString ) ) )		2500820	12					
ANR	2500996	Condition	! ( ad = parser . ParseClassAd ( adString ) )	262:5:7168:7208	2500820	0	True				
ANR	2500997	UnaryOperationExpression	! ( ad = parser . ParseClassAd ( adString ) )		2500820	0					
ANR	2500998	UnaryOperator	!		2500820	0					
ANR	2500999	AssignmentExpression	ad = parser . ParseClassAd ( adString )		2500820	1		=			
ANR	2501000	Identifier	ad		2500820	0					
ANR	2501001	CallExpression	parser . ParseClassAd ( adString )		2500820	1					
ANR	2501002	Callee	parser . ParseClassAd		2500820	0					
ANR	2501003	MemberAccess	parser . ParseClassAd		2500820	0					
ANR	2501004	Identifier	parser		2500820	0					
ANR	2501005	Identifier	ParseClassAd		2500820	1					
ANR	2501006	ArgumentList	adString		2500820	1					
ANR	2501007	Argument	adString		2500820	0					
ANR	2501008	Identifier	adString		2500820	0					
ANR	2501009	CompoundStatement		32:49:700:700	2500820	1					
ANR	2501010	ExpressionStatement	"cerr << ""ad = "" << adString"	263:2:7216:7243	2500820	0	True				
ANR	2501011	ShiftExpression	"cerr << ""ad = "" << adString"		2500820	0		<<			
ANR	2501012	Identifier	cerr		2500820	0					
ANR	2501013	ShiftExpression	"""ad = "" << adString"		2500820	1		<<			
ANR	2501014	PrimaryExpression	"""ad = """		2500820	0					
ANR	2501015	Identifier	adString		2500820	1					
ANR	2501016	ReturnStatement	return false ;	264:2:7247:7259	2500820	1	True				
ANR	2501017	Identifier	false		2500820	0					
ANR	2501018	ElseStatement	else		2500820	0					
ANR	2501019	CompoundStatement		36:6:758:758	2500820	0					
ANR	2501020	ReturnStatement	return true ;	267:2:7274:7285	2500820	0	True				
ANR	2501021	Identifier	true		2500820	0					
ANR	2501022	ReturnType	bool		2500820	1					
ANR	2501023	Identifier	generateClassAd		2500820	2					
ANR	2501024	ParameterList	"int reqLen , classad :: ClassAd * & ad"		2500820	3					
ANR	2501025	Parameter	int reqLen	230:22:6475:6484	2500820	0	True				
ANR	2501026	ParameterType	int		2500820	0					
ANR	2501027	Identifier	reqLen		2500820	1					
ANR	2501028	Parameter	classad :: ClassAd * & ad	230:34:6487:6507	2500820	1	True				
ANR	2501029	ParameterType	classad :: ClassAd * &		2500820	0					
ANR	2501030	Identifier	ad		2500820	1					
ANR	2501031	CFGEntryNode	ENTRY		2500820		True				
ANR	2501032	CFGExitNode	EXIT		2500820		True				
ANR	2501033	Symbol	* attrs		2500820						
ANR	2501034	Symbol	attrs [ rand ( ) % numAttrs ] . c_str		2500820						
ANR	2501035	Symbol	rand		2500820						
ANR	2501036	Symbol	operators		2500820						
ANR	2501037	Symbol	* operators		2500820						
ANR	2501038	Symbol	attrs [ i ] . c_str		2500820						
ANR	2501039	Symbol	reqLen		2500820						
ANR	2501040	Symbol	tempString		2500820						
ANR	2501041	Symbol	NUM_OPS		2500820						
ANR	2501042	Symbol	ad		2500820						
ANR	2501043	Symbol	NULL		2500820						
ANR	2501044	Symbol	reqString		2500820						
ANR	2501045	Symbol	ATTR_REQUIREMENTS		2500820						
ANR	2501046	Symbol	operators [ rand ( ) % NUM_OPS ] . c_str		2500820						
ANR	2501047	Symbol	false		2500820						
ANR	2501048	Symbol	i		2500820						
ANR	2501049	Symbol	* numAttrs		2500820						
ANR	2501050	Symbol	parser . ParseClassAd		2500820						
ANR	2501051	Symbol	attrs		2500820						
ANR	2501052	Symbol	adString		2500820						
ANR	2501053	Symbol	* i		2500820						
ANR	2501054	Symbol	parser		2500820						
ANR	2501055	Symbol	* rand		2500820						
ANR	2501056	Symbol	* NUM_OPS		2500820						
ANR	2501057	Symbol	true		2500820						
ANR	2501058	Symbol	numAttrs		2500820						
