command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4886139	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_socket_proxy.cpp								
ANR	4886140	Function	SocketProxy :: SocketProxy	26:0:939:985							
ANR	4886141	FunctionDef	SocketProxy :: SocketProxy ()		4886140	0					
ANR	4886142	CompoundStatement		28:0:983:985	4886140	0					
ANR	4886143	Identifier	SocketProxy :: SocketProxy		4886140	1					
ANR	4886144	ParameterList			4886140	2					
ANR	4886145	CFGEntryNode	ENTRY		4886140		True				
ANR	4886146	CFGExitNode	EXIT		4886140		True				
ANR	4886147	Function	SocketProxy :: getErrorMsg	31:0:988:1093							
ANR	4886148	FunctionDef	SocketProxy :: getErrorMsg ()		4886147	0					
ANR	4886149	CompoundStatement		32:0:1027:1093	4886147	0					
ANR	4886150	IfStatement	if ( m_error )		4886147	0					
ANR	4886151	Condition	m_error	33:5:1034:1040	4886147	0	True				
ANR	4886152	Identifier	m_error		4886147	0					
ANR	4886153	CompoundStatement		2:15:16:16	4886147	1					
ANR	4886154	ReturnStatement	return m_error_msg . Value ( ) ;	34:2:1048:1074	4886147	0	True				
ANR	4886155	CallExpression	m_error_msg . Value ( )		4886147	0					
ANR	4886156	Callee	m_error_msg . Value		4886147	0					
ANR	4886157	MemberAccess	m_error_msg . Value		4886147	0					
ANR	4886158	Identifier	m_error_msg		4886147	0					
ANR	4886159	Identifier	Value		4886147	1					
ANR	4886160	ArgumentList			4886147	1					
ANR	4886161	ReturnStatement	return NULL ;	36:1:1080:1091	4886147	1	True				
ANR	4886162	Identifier	NULL		4886147	0					
ANR	4886163	ReturnType	char const *		4886147	1					
ANR	4886164	Identifier	SocketProxy :: getErrorMsg		4886147	2					
ANR	4886165	ParameterList			4886147	3					
ANR	4886166	CFGEntryNode	ENTRY		4886147		True				
ANR	4886167	CFGExitNode	EXIT		4886147		True				
ANR	4886168	Symbol	m_error_msg		4886147						
ANR	4886169	Symbol	NULL		4886147						
ANR	4886170	Symbol	m_error_msg . Value		4886147						
ANR	4886171	Symbol	m_error		4886147						
ANR	4886172	Function	SocketProxy :: setErrorMsg	39:0:1096:1231							
ANR	4886173	FunctionDef	SocketProxy :: setErrorMsg (char const * msg)		4886172	0					
ANR	4886174	CompoundStatement		40:0:1143:1231	4886172	0					
ANR	4886175	IfStatement	if ( ! msg )		4886172	0					
ANR	4886176	Condition	! msg	41:5:1150:1153	4886172	0	True				
ANR	4886177	UnaryOperationExpression	! msg		4886172	0					
ANR	4886178	UnaryOperator	!		4886172	0					
ANR	4886179	Identifier	msg		4886172	1					
ANR	4886180	CompoundStatement		2:12:13:13	4886172	1					
ANR	4886181	ExpressionStatement	m_error = false	42:2:1161:1176	4886172	0	True				
ANR	4886182	AssignmentExpression	m_error = false		4886172	0		=			
ANR	4886183	Identifier	m_error		4886172	0					
ANR	4886184	Identifier	false		4886172	1					
ANR	4886185	ElseStatement	else		4886172	0					
ANR	4886186	CompoundStatement		5:6:43:43	4886172	0					
ANR	4886187	ExpressionStatement	m_error = true	45:2:1191:1205	4886172	0	True				
ANR	4886188	AssignmentExpression	m_error = true		4886172	0		=			
ANR	4886189	Identifier	m_error		4886172	0					
ANR	4886190	Identifier	true		4886172	1					
ANR	4886191	ExpressionStatement	m_error_msg = msg	46:2:1209:1226	4886172	1	True				
ANR	4886192	AssignmentExpression	m_error_msg = msg		4886172	0		=			
ANR	4886193	Identifier	m_error_msg		4886172	0					
ANR	4886194	Identifier	msg		4886172	1					
ANR	4886195	ReturnType	void		4886172	1					
ANR	4886196	Identifier	SocketProxy :: setErrorMsg		4886172	2					
ANR	4886197	ParameterList	char const * msg		4886172	3					
ANR	4886198	Parameter	char const * msg	39:30:1126:1140	4886172	0	True				
ANR	4886199	ParameterType	char const *		4886172	0					
ANR	4886200	Identifier	msg		4886172	1					
ANR	4886201	CFGEntryNode	ENTRY		4886172		True				
ANR	4886202	CFGExitNode	EXIT		4886172		True				
ANR	4886203	Symbol	msg		4886172						
ANR	4886204	Symbol	m_error_msg		4886172						
ANR	4886205	Symbol	false		4886172						
ANR	4886206	Symbol	true		4886172						
ANR	4886207	Symbol	m_error		4886172						
ANR	4886208	Function	SocketProxy :: fdInUse	50:0:1234:1476							
ANR	4886209	FunctionDef	SocketProxy :: fdInUse (int fd)		4886208	0					
ANR	4886210	CompoundStatement		51:0:1268:1476	4886208	0					
ANR	4886211	IdentifierDeclStatement	std :: list < SocketProxyPair > :: iterator it ;	52:1:1271:1310	4886208	0	True				
ANR	4886212	IdentifierDecl	it		4886208	0					
ANR	4886213	IdentifierDeclType	std :: list < SocketProxyPair > :: iterator		4886208	0					
ANR	4886214	Identifier	it		4886208	1					
ANR	4886215	ForStatement	for ( it = m_socket_pairs . begin ( ) ; it != m_socket_pairs . end ( ) ; ++ it )		4886208	1					
ANR	4886216	ForInit	it = m_socket_pairs . begin ( ) ;	53:7:1319:1344	4886208	0	True				
ANR	4886217	AssignmentExpression	it = m_socket_pairs . begin ( )		4886208	0		=			
ANR	4886218	Identifier	it		4886208	0					
ANR	4886219	CallExpression	m_socket_pairs . begin ( )		4886208	1					
ANR	4886220	Callee	m_socket_pairs . begin		4886208	0					
ANR	4886221	MemberAccess	m_socket_pairs . begin		4886208	0					
ANR	4886222	Identifier	m_socket_pairs		4886208	0					
ANR	4886223	Identifier	begin		4886208	1					
ANR	4886224	ArgumentList			4886208	1					
ANR	4886225	Condition	it != m_socket_pairs . end ( )	53:34:1346:1371	4886208	1	True				
ANR	4886226	EqualityExpression	it != m_socket_pairs . end ( )		4886208	0		!=			
ANR	4886227	Identifier	it		4886208	0					
ANR	4886228	CallExpression	m_socket_pairs . end ( )		4886208	1					
ANR	4886229	Callee	m_socket_pairs . end		4886208	0					
ANR	4886230	MemberAccess	m_socket_pairs . end		4886208	0					
ANR	4886231	Identifier	m_socket_pairs		4886208	0					
ANR	4886232	Identifier	end		4886208	1					
ANR	4886233	ArgumentList			4886208	1					
ANR	4886234	UnaryExpression	++ it	53:62:1374:1377	4886208	2	True				
ANR	4886235	IncDec	++		4886208	0					
ANR	4886236	Identifier	it		4886208	1					
ANR	4886237	CompoundStatement		3:69:112:112	4886208	3					
ANR	4886238	IfStatement	if ( it -> from_socket == fd || it -> to_socket == fd )		4886208	0					
ANR	4886239	Condition	it -> from_socket == fd || it -> to_socket == fd	54:6:1389:1432	4886208	0	True				
ANR	4886240	OrExpression	it -> from_socket == fd || it -> to_socket == fd		4886208	0		||			
ANR	4886241	EqualityExpression	it -> from_socket == fd		4886208	0		==			
ANR	4886242	PtrMemberAccess	it -> from_socket		4886208	0					
ANR	4886243	Identifier	it		4886208	0					
ANR	4886244	Identifier	from_socket		4886208	1					
ANR	4886245	Identifier	fd		4886208	1					
ANR	4886246	EqualityExpression	it -> to_socket == fd		4886208	1		==			
ANR	4886247	PtrMemberAccess	it -> to_socket		4886208	0					
ANR	4886248	Identifier	it		4886208	0					
ANR	4886249	Identifier	to_socket		4886208	1					
ANR	4886250	Identifier	fd		4886208	1					
ANR	4886251	CompoundStatement		4:53:167:167	4886208	1					
ANR	4886252	ReturnStatement	return true ;	55:3:1441:1452	4886208	0	True				
ANR	4886253	Identifier	true		4886208	0					
ANR	4886254	ReturnStatement	return false ;	58:1:1462:1474	4886208	2	True				
ANR	4886255	Identifier	false		4886208	0					
ANR	4886256	ReturnType	bool		4886208	1					
ANR	4886257	Identifier	SocketProxy :: fdInUse		4886208	2					
ANR	4886258	ParameterList	int fd		4886208	3					
ANR	4886259	Parameter	int fd	50:26:1260:1265	4886208	0	True				
ANR	4886260	ParameterType	int		4886208	0					
ANR	4886261	Identifier	fd		4886208	1					
ANR	4886262	CFGEntryNode	ENTRY		4886208		True				
ANR	4886263	CFGExitNode	EXIT		4886208		True				
ANR	4886264	Symbol	* it		4886208						
ANR	4886265	Symbol	it -> from_socket		4886208						
ANR	4886266	Symbol	true		4886208						
ANR	4886267	Symbol	false		4886208						
ANR	4886268	Symbol	it -> to_socket		4886208						
ANR	4886269	Symbol	it		4886208						
ANR	4886270	Symbol	m_socket_pairs		4886208						
ANR	4886271	Symbol	m_socket_pairs . begin		4886208						
ANR	4886272	Symbol	fd		4886208						
ANR	4886273	Symbol	m_socket_pairs . end		4886208						
ANR	4886274	Function	SocketProxy :: addSocketPair	61:0:1479:1858							
ANR	4886275	FunctionDef	"SocketProxy :: addSocketPair (int from , int to)"		4886274	0					
ANR	4886276	CompoundStatement		62:0:1528:1858	4886274	0					
ANR	4886277	IfStatement	if ( fdInUse ( from ) )		4886274	0					
ANR	4886278	Condition	fdInUse ( from )	64:5:1605:1617	4886274	0	True				
ANR	4886279	CallExpression	fdInUse ( from )		4886274	0					
ANR	4886280	Callee	fdInUse		4886274	0					
ANR	4886281	Identifier	fdInUse		4886274	0					
ANR	4886282	ArgumentList	from		4886274	1					
ANR	4886283	Argument	from		4886274	0					
ANR	4886284	Identifier	from		4886274	0					
ANR	4886285	CompoundStatement		3:21:92:92	4886274	1					
ANR	4886286	ExpressionStatement	from = dup ( from )	65:2:1625:1641	4886274	0	True				
ANR	4886287	AssignmentExpression	from = dup ( from )		4886274	0		=			
ANR	4886288	Identifier	from		4886274	0					
ANR	4886289	CallExpression	dup ( from )		4886274	1					
ANR	4886290	Callee	dup		4886274	0					
ANR	4886291	Identifier	dup		4886274	0					
ANR	4886292	ArgumentList	from		4886274	1					
ANR	4886293	Argument	from		4886274	0					
ANR	4886294	Identifier	from		4886274	0					
ANR	4886295	IfStatement	if ( fdInUse ( to ) )		4886274	1					
ANR	4886296	Condition	fdInUse ( to )	67:5:1651:1661	4886274	0	True				
ANR	4886297	CallExpression	fdInUse ( to )		4886274	0					
ANR	4886298	Callee	fdInUse		4886274	0					
ANR	4886299	Identifier	fdInUse		4886274	0					
ANR	4886300	ArgumentList	to		4886274	1					
ANR	4886301	Argument	to		4886274	0					
ANR	4886302	Identifier	to		4886274	0					
ANR	4886303	CompoundStatement		6:19:136:136	4886274	1					
ANR	4886304	ExpressionStatement	to = dup ( to )	68:2:1669:1681	4886274	0	True				
ANR	4886305	AssignmentExpression	to = dup ( to )		4886274	0		=			
ANR	4886306	Identifier	to		4886274	0					
ANR	4886307	CallExpression	dup ( to )		4886274	1					
ANR	4886308	Callee	dup		4886274	0					
ANR	4886309	Identifier	dup		4886274	0					
ANR	4886310	ArgumentList	to		4886274	1					
ANR	4886311	Argument	to		4886274	0					
ANR	4886312	Identifier	to		4886274	0					
ANR	4886313	ExpressionStatement	"m_socket_pairs . push_front ( SocketProxyPair ( from , to ) )"	70:1:1687:1738	4886274	2	True				
ANR	4886314	CallExpression	"m_socket_pairs . push_front ( SocketProxyPair ( from , to ) )"		4886274	0					
ANR	4886315	Callee	m_socket_pairs . push_front		4886274	0					
ANR	4886316	MemberAccess	m_socket_pairs . push_front		4886274	0					
ANR	4886317	Identifier	m_socket_pairs		4886274	0					
ANR	4886318	Identifier	push_front		4886274	1					
ANR	4886319	ArgumentList	"SocketProxyPair ( from , to )"		4886274	1					
ANR	4886320	Argument	"SocketProxyPair ( from , to )"		4886274	0					
ANR	4886321	CallExpression	"SocketProxyPair ( from , to )"		4886274	0					
ANR	4886322	Callee	SocketProxyPair		4886274	0					
ANR	4886323	Identifier	SocketProxyPair		4886274	0					
ANR	4886324	ArgumentList	from		4886274	1					
ANR	4886325	Argument	from		4886274	0					
ANR	4886326	Identifier	from		4886274	0					
ANR	4886327	Argument	to		4886274	1					
ANR	4886328	Identifier	to		4886274	0					
ANR	4886329	IfStatement	if ( ! setNonBlocking ( from ) || ! setNonBlocking ( to ) )		4886274	3					
ANR	4886330	Condition	! setNonBlocking ( from ) || ! setNonBlocking ( to )	71:5:1745:1788	4886274	0	True				
ANR	4886331	OrExpression	! setNonBlocking ( from ) || ! setNonBlocking ( to )		4886274	0		||			
ANR	4886332	UnaryOperationExpression	! setNonBlocking ( from )		4886274	0					
ANR	4886333	UnaryOperator	!		4886274	0					
ANR	4886334	CallExpression	setNonBlocking ( from )		4886274	1					
ANR	4886335	Callee	setNonBlocking		4886274	0					
ANR	4886336	Identifier	setNonBlocking		4886274	0					
ANR	4886337	ArgumentList	from		4886274	1					
ANR	4886338	Argument	from		4886274	0					
ANR	4886339	Identifier	from		4886274	0					
ANR	4886340	UnaryOperationExpression	! setNonBlocking ( to )		4886274	1					
ANR	4886341	UnaryOperator	!		4886274	0					
ANR	4886342	CallExpression	setNonBlocking ( to )		4886274	1					
ANR	4886343	Callee	setNonBlocking		4886274	0					
ANR	4886344	Identifier	setNonBlocking		4886274	0					
ANR	4886345	ArgumentList	to		4886274	1					
ANR	4886346	Argument	to		4886274	0					
ANR	4886347	Identifier	to		4886274	0					
ANR	4886348	CompoundStatement		10:52:263:263	4886274	1					
ANR	4886349	ExpressionStatement	"setErrorMsg ( ""Failed to set socket to non-blocking mode."" )"	72:2:1796:1853	4886274	0	True				
ANR	4886350	CallExpression	"setErrorMsg ( ""Failed to set socket to non-blocking mode."" )"		4886274	0					
ANR	4886351	Callee	setErrorMsg		4886274	0					
ANR	4886352	Identifier	setErrorMsg		4886274	0					
ANR	4886353	ArgumentList	"""Failed to set socket to non-blocking mode."""		4886274	1					
ANR	4886354	Argument	"""Failed to set socket to non-blocking mode."""		4886274	0					
ANR	4886355	PrimaryExpression	"""Failed to set socket to non-blocking mode."""		4886274	0					
ANR	4886356	ReturnType	void		4886274	1					
ANR	4886357	Identifier	SocketProxy :: addSocketPair		4886274	2					
ANR	4886358	ParameterList	"int from , int to"		4886274	3					
ANR	4886359	Parameter	int from	61:32:1511:1518	4886274	0	True				
ANR	4886360	ParameterType	int		4886274	0					
ANR	4886361	Identifier	from		4886274	1					
ANR	4886362	Parameter	int to	61:41:1520:1525	4886274	1	True				
ANR	4886363	ParameterType	int		4886274	0					
ANR	4886364	Identifier	to		4886274	1					
ANR	4886365	CFGEntryNode	ENTRY		4886274		True				
ANR	4886366	CFGExitNode	EXIT		4886274		True				
ANR	4886367	Symbol	SocketProxyPair		4886274						
ANR	4886368	Symbol	from		4886274						
ANR	4886369	Symbol	to		4886274						
ANR	4886370	Symbol	m_socket_pairs		4886274						
ANR	4886371	Symbol	fdInUse		4886274						
ANR	4886372	Symbol	dup		4886274						
ANR	4886373	Symbol	setNonBlocking		4886274						
ANR	4886374	Function	SocketProxy :: setNonBlocking	76:0:1861:2202							
ANR	4886375	FunctionDef	SocketProxy :: setNonBlocking (int sock)		4886374	0					
ANR	4886376	CompoundStatement		77:0:1904:2202	4886374	0					
ANR	4886377	IdentifierDeclStatement	unsigned long mode = 1 ;	79:1:1920:1942	4886374	0	True				
ANR	4886378	IdentifierDecl	mode = 1		4886374	0					
ANR	4886379	IdentifierDeclType	unsigned long		4886374	0					
ANR	4886380	Identifier	mode		4886374	1					
ANR	4886381	AssignmentExpression	mode = 1		4886374	2		=			
ANR	4886382	Identifier	mode		4886374	0					
ANR	4886383	PrimaryExpression	1		4886374	1					
ANR	4886384	IfStatement	"if ( ioctlsocket ( sock , FIONBIO , & mode ) < 0 )"		4886374	1					
ANR	4886385	Condition	"ioctlsocket ( sock , FIONBIO , & mode ) < 0"	80:5:1949:1985	4886374	0	True				
ANR	4886386	RelationalExpression	"ioctlsocket ( sock , FIONBIO , & mode ) < 0"		4886374	0		<			
ANR	4886387	CallExpression	"ioctlsocket ( sock , FIONBIO , & mode )"		4886374	0					
ANR	4886388	Callee	ioctlsocket		4886374	0					
ANR	4886389	Identifier	ioctlsocket		4886374	0					
ANR	4886390	ArgumentList	sock		4886374	1					
ANR	4886391	Argument	sock		4886374	0					
ANR	4886392	Identifier	sock		4886374	0					
ANR	4886393	Argument	FIONBIO		4886374	1					
ANR	4886394	Identifier	FIONBIO		4886374	0					
ANR	4886395	Argument	& mode		4886374	2					
ANR	4886396	UnaryOperationExpression	& mode		4886374	0					
ANR	4886397	UnaryOperator	&		4886374	0					
ANR	4886398	Identifier	mode		4886374	1					
ANR	4886399	PrimaryExpression	0		4886374	1					
ANR	4886400	ReturnStatement	return false ;	81:2:1990:2002	4886374	1	True				
ANR	4886401	Identifier	false		4886374	0					
ANR	4886402	ReturnStatement	return true ;	90:1:2189:2200	4886374	2	True				
ANR	4886403	Identifier	true		4886374	0					
ANR	4886404	ReturnType	bool		4886374	1					
ANR	4886405	Identifier	SocketProxy :: setNonBlocking		4886374	2					
ANR	4886406	ParameterList	int sock		4886374	3					
ANR	4886407	Parameter	int sock	76:33:1894:1901	4886374	0	True				
ANR	4886408	ParameterType	int		4886374	0					
ANR	4886409	Identifier	sock		4886374	1					
ANR	4886410	CFGEntryNode	ENTRY		4886374		True				
ANR	4886411	CFGExitNode	EXIT		4886374		True				
ANR	4886412	Symbol	mode		4886374						
ANR	4886413	Symbol	sock		4886374						
ANR	4886414	Symbol	& mode		4886374						
ANR	4886415	Symbol	ioctlsocket		4886374						
ANR	4886416	Symbol	FIONBIO		4886374						
ANR	4886417	Symbol	false		4886374						
ANR	4886418	Symbol	true		4886374						
ANR	4886419	Function	SocketProxy :: execute	93:0:2205:3942							
ANR	4886420	FunctionDef	SocketProxy :: execute ()		4886419	0					
ANR	4886421	CompoundStatement		94:0:2233:3942	4886419	0					
ANR	4886422	IdentifierDeclStatement	std :: list < SocketProxyPair > :: iterator it ;	95:1:2236:2275	4886419	0	True				
ANR	4886423	IdentifierDecl	it		4886419	0					
ANR	4886424	IdentifierDeclType	std :: list < SocketProxyPair > :: iterator		4886419	0					
ANR	4886425	Identifier	it		4886419	1					
ANR	4886426	IdentifierDeclStatement	Selector selector ;	96:1:2278:2295	4886419	1	True				
ANR	4886427	IdentifierDecl	selector		4886419	0					
ANR	4886428	IdentifierDeclType	Selector		4886419	0					
ANR	4886429	Identifier	selector		4886419	1					
ANR	4886430	WhileStatement	while ( true )		4886419	2					
ANR	4886431	Condition	true	98:8:2306:2309	4886419	0	True				
ANR	4886432	Identifier	true		4886419	0					
ANR	4886433	CompoundStatement		8:2:104:135	4886419	1					
ANR	4886434	ExpressionStatement	selector . reset ( )	99:2:2317:2333	4886419	0	True				
ANR	4886435	CallExpression	selector . reset ( )		4886419	0					
ANR	4886436	Callee	selector . reset		4886419	0					
ANR	4886437	MemberAccess	selector . reset		4886419	0					
ANR	4886438	Identifier	selector		4886419	0					
ANR	4886439	Identifier	reset		4886419	1					
ANR	4886440	ArgumentList			4886419	1					
ANR	4886441	IdentifierDeclStatement	bool has_active_sockets = false ;	101:2:2338:2369	4886419	1	True				
ANR	4886442	IdentifierDecl	has_active_sockets = false		4886419	0					
ANR	4886443	IdentifierDeclType	bool		4886419	0					
ANR	4886444	Identifier	has_active_sockets		4886419	1					
ANR	4886445	AssignmentExpression	has_active_sockets = false		4886419	2		=			
ANR	4886446	Identifier	false		4886419	0					
ANR	4886447	Identifier	false		4886419	1					
ANR	4886448	ForStatement	for ( it = m_socket_pairs . begin ( ) ; it != m_socket_pairs . end ( ) ; ++ it )		4886419	2					
ANR	4886449	ForInit	it = m_socket_pairs . begin ( ) ;	102:8:2379:2404	4886419	0	True				
ANR	4886450	AssignmentExpression	it = m_socket_pairs . begin ( )		4886419	0		=			
ANR	4886451	Identifier	it		4886419	0					
ANR	4886452	CallExpression	m_socket_pairs . begin ( )		4886419	1					
ANR	4886453	Callee	m_socket_pairs . begin		4886419	0					
ANR	4886454	MemberAccess	m_socket_pairs . begin		4886419	0					
ANR	4886455	Identifier	m_socket_pairs		4886419	0					
ANR	4886456	Identifier	begin		4886419	1					
ANR	4886457	ArgumentList			4886419	1					
ANR	4886458	Condition	it != m_socket_pairs . end ( )	102:35:2406:2431	4886419	1	True				
ANR	4886459	EqualityExpression	it != m_socket_pairs . end ( )		4886419	0		!=			
ANR	4886460	Identifier	it		4886419	0					
ANR	4886461	CallExpression	m_socket_pairs . end ( )		4886419	1					
ANR	4886462	Callee	m_socket_pairs . end		4886419	0					
ANR	4886463	MemberAccess	m_socket_pairs . end		4886419	0					
ANR	4886464	Identifier	m_socket_pairs		4886419	0					
ANR	4886465	Identifier	end		4886419	1					
ANR	4886466	ArgumentList			4886419	1					
ANR	4886467	UnaryExpression	++ it	102:63:2434:2437	4886419	2	True				
ANR	4886468	IncDec	++		4886419	0					
ANR	4886469	Identifier	it		4886419	1					
ANR	4886470	CompoundStatement		9:70:207:207	4886419	3					
ANR	4886471	IfStatement	if ( it -> shutdown )		4886419	0					
ANR	4886472	Condition	it -> shutdown	103:7:2450:2461	4886419	0	True				
ANR	4886473	PtrMemberAccess	it -> shutdown		4886419	0					
ANR	4886474	Identifier	it		4886419	0					
ANR	4886475	Identifier	shutdown		4886419	1					
ANR	4886476	CompoundStatement		10:22:231:231	4886419	1					
ANR	4886477	ContinueStatement	continue ;	104:4:2471:2479	4886419	0	True				
ANR	4886478	ExpressionStatement	has_active_sockets = true	106:3:2489:2514	4886419	1	True				
ANR	4886479	AssignmentExpression	has_active_sockets = true		4886419	0		=			
ANR	4886480	Identifier	has_active_sockets		4886419	0					
ANR	4886481	Identifier	true		4886419	1					
ANR	4886482	IfStatement	if ( it -> buf_end > 0 )		4886419	2					
ANR	4886483	Condition	it -> buf_end > 0	107:7:2523:2537	4886419	0	True				
ANR	4886484	RelationalExpression	it -> buf_end > 0		4886419	0		>			
ANR	4886485	PtrMemberAccess	it -> buf_end		4886419	0					
ANR	4886486	Identifier	it		4886419	0					
ANR	4886487	Identifier	buf_end		4886419	1					
ANR	4886488	PrimaryExpression	0		4886419	1					
ANR	4886489	CompoundStatement		14:25:307:307	4886419	1					
ANR	4886490	ExpressionStatement	"selector . add_fd ( it -> to_socket , Selector :: IO_WRITE )"	109:4:2592:2642	4886419	0	True				
ANR	4886491	CallExpression	"selector . add_fd ( it -> to_socket , Selector :: IO_WRITE )"		4886419	0					
ANR	4886492	Callee	selector . add_fd		4886419	0					
ANR	4886493	MemberAccess	selector . add_fd		4886419	0					
ANR	4886494	Identifier	selector		4886419	0					
ANR	4886495	Identifier	add_fd		4886419	1					
ANR	4886496	ArgumentList	it -> to_socket		4886419	1					
ANR	4886497	Argument	it -> to_socket		4886419	0					
ANR	4886498	PtrMemberAccess	it -> to_socket		4886419	0					
ANR	4886499	Identifier	it		4886419	0					
ANR	4886500	Identifier	to_socket		4886419	1					
ANR	4886501	Argument	Selector :: IO_WRITE		4886419	1					
ANR	4886502	Identifier	Selector :: IO_WRITE		4886419	0					
ANR	4886503	ElseStatement	else		4886419	0					
ANR	4886504	CompoundStatement		18:8:423:423	4886419	0					
ANR	4886505	ExpressionStatement	"selector . add_fd ( it -> from_socket , Selector :: IO_READ )"	112:4:2663:2714	4886419	0	True				
ANR	4886506	CallExpression	"selector . add_fd ( it -> from_socket , Selector :: IO_READ )"		4886419	0					
ANR	4886507	Callee	selector . add_fd		4886419	0					
ANR	4886508	MemberAccess	selector . add_fd		4886419	0					
ANR	4886509	Identifier	selector		4886419	0					
ANR	4886510	Identifier	add_fd		4886419	1					
ANR	4886511	ArgumentList	it -> from_socket		4886419	1					
ANR	4886512	Argument	it -> from_socket		4886419	0					
ANR	4886513	PtrMemberAccess	it -> from_socket		4886419	0					
ANR	4886514	Identifier	it		4886419	0					
ANR	4886515	Identifier	from_socket		4886419	1					
ANR	4886516	Argument	Selector :: IO_READ		4886419	1					
ANR	4886517	Identifier	Selector :: IO_READ		4886419	0					
ANR	4886518	IfStatement	if ( ! has_active_sockets )		4886419	3					
ANR	4886519	Condition	! has_active_sockets	116:6:2732:2750	4886419	0	True				
ANR	4886520	UnaryOperationExpression	! has_active_sockets		4886419	0					
ANR	4886521	UnaryOperator	!		4886419	0					
ANR	4886522	Identifier	has_active_sockets		4886419	1					
ANR	4886523	CompoundStatement		23:28:520:520	4886419	1					
ANR	4886524	BreakStatement	break ;	117:3:2759:2764	4886419	0	True				
ANR	4886525	ExpressionStatement	selector . execute ( )	120:2:2773:2791	4886419	4	True				
ANR	4886526	CallExpression	selector . execute ( )		4886419	0					
ANR	4886527	Callee	selector . execute		4886419	0					
ANR	4886528	MemberAccess	selector . execute		4886419	0					
ANR	4886529	Identifier	selector		4886419	0					
ANR	4886530	Identifier	execute		4886419	1					
ANR	4886531	ArgumentList			4886419	1					
ANR	4886532	ForStatement	for ( it = m_socket_pairs . begin ( ) ; it != m_socket_pairs . end ( ) ; ++ it )		4886419	5					
ANR	4886533	ForInit	it = m_socket_pairs . begin ( ) ;	122:8:2802:2827	4886419	0	True				
ANR	4886534	AssignmentExpression	it = m_socket_pairs . begin ( )		4886419	0		=			
ANR	4886535	Identifier	it		4886419	0					
ANR	4886536	CallExpression	m_socket_pairs . begin ( )		4886419	1					
ANR	4886537	Callee	m_socket_pairs . begin		4886419	0					
ANR	4886538	MemberAccess	m_socket_pairs . begin		4886419	0					
ANR	4886539	Identifier	m_socket_pairs		4886419	0					
ANR	4886540	Identifier	begin		4886419	1					
ANR	4886541	ArgumentList			4886419	1					
ANR	4886542	Condition	it != m_socket_pairs . end ( )	122:35:2829:2854	4886419	1	True				
ANR	4886543	EqualityExpression	it != m_socket_pairs . end ( )		4886419	0		!=			
ANR	4886544	Identifier	it		4886419	0					
ANR	4886545	CallExpression	m_socket_pairs . end ( )		4886419	1					
ANR	4886546	Callee	m_socket_pairs . end		4886419	0					
ANR	4886547	MemberAccess	m_socket_pairs . end		4886419	0					
ANR	4886548	Identifier	m_socket_pairs		4886419	0					
ANR	4886549	Identifier	end		4886419	1					
ANR	4886550	ArgumentList			4886419	1					
ANR	4886551	UnaryExpression	++ it	122:63:2857:2860	4886419	2	True				
ANR	4886552	IncDec	++		4886419	0					
ANR	4886553	Identifier	it		4886419	1					
ANR	4886554	CompoundStatement		29:70:630:630	4886419	3					
ANR	4886555	IfStatement	if ( it -> shutdown )		4886419	0					
ANR	4886556	Condition	it -> shutdown	123:7:2873:2884	4886419	0	True				
ANR	4886557	PtrMemberAccess	it -> shutdown		4886419	0					
ANR	4886558	Identifier	it		4886419	0					
ANR	4886559	Identifier	shutdown		4886419	1					
ANR	4886560	CompoundStatement		30:22:654:654	4886419	1					
ANR	4886561	ContinueStatement	continue ;	124:4:2894:2902	4886419	0	True				
ANR	4886562	IfStatement	if ( it -> buf_end > 0 )		4886419	1					
ANR	4886563	Condition	it -> buf_end > 0	126:7:2916:2930	4886419	0	True				
ANR	4886564	RelationalExpression	it -> buf_end > 0		4886419	0		>			
ANR	4886565	PtrMemberAccess	it -> buf_end		4886419	0					
ANR	4886566	Identifier	it		4886419	0					
ANR	4886567	Identifier	buf_end		4886419	1					
ANR	4886568	PrimaryExpression	0		4886419	1					
ANR	4886569	CompoundStatement		33:25:700:700	4886419	1					
ANR	4886570	IfStatement	"if ( selector . fd_ready ( it -> to_socket , Selector :: IO_WRITE ) )"		4886419	0					
ANR	4886571	Condition	"selector . fd_ready ( it -> to_socket , Selector :: IO_WRITE )"	128:8:2980:3031	4886419	0	True				
ANR	4886572	CallExpression	"selector . fd_ready ( it -> to_socket , Selector :: IO_WRITE )"		4886419	0					
ANR	4886573	Callee	selector . fd_ready		4886419	0					
ANR	4886574	MemberAccess	selector . fd_ready		4886419	0					
ANR	4886575	Identifier	selector		4886419	0					
ANR	4886576	Identifier	fd_ready		4886419	1					
ANR	4886577	ArgumentList	it -> to_socket		4886419	1					
ANR	4886578	Argument	it -> to_socket		4886419	0					
ANR	4886579	PtrMemberAccess	it -> to_socket		4886419	0					
ANR	4886580	Identifier	it		4886419	0					
ANR	4886581	Identifier	to_socket		4886419	1					
ANR	4886582	Argument	Selector :: IO_WRITE		4886419	1					
ANR	4886583	Identifier	Selector :: IO_WRITE		4886419	0					
ANR	4886584	CompoundStatement		36:5:808:886	4886419	1					
ANR	4886585	IdentifierDeclStatement	"int n = write ( it -> to_socket , & it -> buf [ it -> buf_begin ] , it -> buf_end - it -> buf_begin ) ;"	129:5:3042:3120	4886419	0	True				
ANR	4886586	IdentifierDecl	"n = write ( it -> to_socket , & it -> buf [ it -> buf_begin ] , it -> buf_end - it -> buf_begin )"		4886419	0					
ANR	4886587	IdentifierDeclType	int		4886419	0					
ANR	4886588	Identifier	n		4886419	1					
ANR	4886589	AssignmentExpression	"n = write ( it -> to_socket , & it -> buf [ it -> buf_begin ] , it -> buf_end - it -> buf_begin )"		4886419	2		=			
ANR	4886590	Identifier	n		4886419	0					
ANR	4886591	CallExpression	"write ( it -> to_socket , & it -> buf [ it -> buf_begin ] , it -> buf_end - it -> buf_begin )"		4886419	1					
ANR	4886592	Callee	write		4886419	0					
ANR	4886593	Identifier	write		4886419	0					
ANR	4886594	ArgumentList	it -> to_socket		4886419	1					
ANR	4886595	Argument	it -> to_socket		4886419	0					
ANR	4886596	PtrMemberAccess	it -> to_socket		4886419	0					
ANR	4886597	Identifier	it		4886419	0					
ANR	4886598	Identifier	to_socket		4886419	1					
ANR	4886599	Argument	& it -> buf [ it -> buf_begin ]		4886419	1					
ANR	4886600	UnaryOperationExpression	& it -> buf [ it -> buf_begin ]		4886419	0					
ANR	4886601	UnaryOperator	&		4886419	0					
ANR	4886602	ArrayIndexing	it -> buf [ it -> buf_begin ]		4886419	1					
ANR	4886603	PtrMemberAccess	it -> buf		4886419	0					
ANR	4886604	Identifier	it		4886419	0					
ANR	4886605	Identifier	buf		4886419	1					
ANR	4886606	PtrMemberAccess	it -> buf_begin		4886419	1					
ANR	4886607	Identifier	it		4886419	0					
ANR	4886608	Identifier	buf_begin		4886419	1					
ANR	4886609	Argument	it -> buf_end - it -> buf_begin		4886419	2					
ANR	4886610	AdditiveExpression	it -> buf_end - it -> buf_begin		4886419	0		-			
ANR	4886611	PtrMemberAccess	it -> buf_end		4886419	0					
ANR	4886612	Identifier	it		4886419	0					
ANR	4886613	Identifier	buf_end		4886419	1					
ANR	4886614	PtrMemberAccess	it -> buf_begin		4886419	1					
ANR	4886615	Identifier	it		4886419	0					
ANR	4886616	Identifier	buf_begin		4886419	1					
ANR	4886617	IfStatement	if ( n > 0 )		4886419	1					
ANR	4886618	Condition	n > 0	130:9:3131:3135	4886419	0	True				
ANR	4886619	RelationalExpression	n > 0		4886419	0		>			
ANR	4886620	Identifier	n		4886419	0					
ANR	4886621	PrimaryExpression	0		4886419	1					
ANR	4886622	CompoundStatement		37:17:905:905	4886419	1					
ANR	4886623	ExpressionStatement	it -> buf_begin += n	131:6:3147:3165	4886419	0	True				
ANR	4886624	AssignmentExpression	it -> buf_begin += n		4886419	0		+=			
ANR	4886625	PtrMemberAccess	it -> buf_begin		4886419	0					
ANR	4886626	Identifier	it		4886419	0					
ANR	4886627	Identifier	buf_begin		4886419	1					
ANR	4886628	Identifier	n		4886419	1					
ANR	4886629	IfStatement	if ( it -> buf_begin >= it -> buf_end )		4886419	1					
ANR	4886630	Condition	it -> buf_begin >= it -> buf_end	132:10:3177:3204	4886419	0	True				
ANR	4886631	RelationalExpression	it -> buf_begin >= it -> buf_end		4886419	0		>=			
ANR	4886632	PtrMemberAccess	it -> buf_begin		4886419	0					
ANR	4886633	Identifier	it		4886419	0					
ANR	4886634	Identifier	buf_begin		4886419	1					
ANR	4886635	PtrMemberAccess	it -> buf_end		4886419	1					
ANR	4886636	Identifier	it		4886419	0					
ANR	4886637	Identifier	buf_end		4886419	1					
ANR	4886638	CompoundStatement		39:41:974:974	4886419	1					
ANR	4886639	ExpressionStatement	it -> buf_begin = 0	133:7:3217:3234	4886419	0	True				
ANR	4886640	AssignmentExpression	it -> buf_begin = 0		4886419	0		=			
ANR	4886641	PtrMemberAccess	it -> buf_begin		4886419	0					
ANR	4886642	Identifier	it		4886419	0					
ANR	4886643	Identifier	buf_begin		4886419	1					
ANR	4886644	PrimaryExpression	0		4886419	1					
ANR	4886645	ExpressionStatement	it -> buf_end = 0	134:7:3243:3258	4886419	1	True				
ANR	4886646	AssignmentExpression	it -> buf_end = 0		4886419	0		=			
ANR	4886647	PtrMemberAccess	it -> buf_end		4886419	0					
ANR	4886648	Identifier	it		4886419	0					
ANR	4886649	Identifier	buf_end		4886419	1					
ANR	4886650	PrimaryExpression	0		4886419	1					
ANR	4886651	ElseStatement	else		4886419	0					
ANR	4886652	IfStatement	"if ( selector . fd_ready ( it -> from_socket , Selector :: IO_READ ) )"		4886419	0					
ANR	4886653	Condition	"selector . fd_ready ( it -> from_socket , Selector :: IO_READ )"	139:12:3298:3350	4886419	0	True				
ANR	4886654	CallExpression	"selector . fd_ready ( it -> from_socket , Selector :: IO_READ )"		4886419	0					
ANR	4886655	Callee	selector . fd_ready		4886419	0					
ANR	4886656	MemberAccess	selector . fd_ready		4886419	0					
ANR	4886657	Identifier	selector		4886419	0					
ANR	4886658	Identifier	fd_ready		4886419	1					
ANR	4886659	ArgumentList	it -> from_socket		4886419	1					
ANR	4886660	Argument	it -> from_socket		4886419	0					
ANR	4886661	PtrMemberAccess	it -> from_socket		4886419	0					
ANR	4886662	Identifier	it		4886419	0					
ANR	4886663	Identifier	from_socket		4886419	1					
ANR	4886664	Argument	Selector :: IO_READ		4886419	1					
ANR	4886665	Identifier	Selector :: IO_READ		4886419	0					
ANR	4886666	CompoundStatement		47:4:1126:1184	4886419	1					
ANR	4886667	IdentifierDeclStatement	"int n = read ( it -> from_socket , it -> buf , SOCKET_PROXY_BUFSIZE ) ;"	140:4:3360:3418	4886419	0	True				
ANR	4886668	IdentifierDecl	"n = read ( it -> from_socket , it -> buf , SOCKET_PROXY_BUFSIZE )"		4886419	0					
ANR	4886669	IdentifierDeclType	int		4886419	0					
ANR	4886670	Identifier	n		4886419	1					
ANR	4886671	AssignmentExpression	"n = read ( it -> from_socket , it -> buf , SOCKET_PROXY_BUFSIZE )"		4886419	2		=			
ANR	4886672	Identifier	n		4886419	0					
ANR	4886673	CallExpression	"read ( it -> from_socket , it -> buf , SOCKET_PROXY_BUFSIZE )"		4886419	1					
ANR	4886674	Callee	read		4886419	0					
ANR	4886675	Identifier	read		4886419	0					
ANR	4886676	ArgumentList	it -> from_socket		4886419	1					
ANR	4886677	Argument	it -> from_socket		4886419	0					
ANR	4886678	PtrMemberAccess	it -> from_socket		4886419	0					
ANR	4886679	Identifier	it		4886419	0					
ANR	4886680	Identifier	from_socket		4886419	1					
ANR	4886681	Argument	it -> buf		4886419	1					
ANR	4886682	PtrMemberAccess	it -> buf		4886419	0					
ANR	4886683	Identifier	it		4886419	0					
ANR	4886684	Identifier	buf		4886419	1					
ANR	4886685	Argument	SOCKET_PROXY_BUFSIZE		4886419	2					
ANR	4886686	Identifier	SOCKET_PROXY_BUFSIZE		4886419	0					
ANR	4886687	IfStatement	if ( n > 0 )		4886419	1					
ANR	4886688	Condition	n > 0	141:8:3428:3432	4886419	0	True				
ANR	4886689	RelationalExpression	n > 0		4886419	0		>			
ANR	4886690	Identifier	n		4886419	0					
ANR	4886691	PrimaryExpression	0		4886419	1					
ANR	4886692	CompoundStatement		48:16:1202:1202	4886419	1					
ANR	4886693	ExpressionStatement	it -> buf_end = n	142:5:3443:3458	4886419	0	True				
ANR	4886694	AssignmentExpression	it -> buf_end = n		4886419	0		=			
ANR	4886695	PtrMemberAccess	it -> buf_end		4886419	0					
ANR	4886696	Identifier	it		4886419	0					
ANR	4886697	Identifier	buf_end		4886419	1					
ANR	4886698	Identifier	n		4886419	1					
ANR	4886699	ElseStatement	else		4886419	0					
ANR	4886700	IfStatement	if ( n == 0 )		4886419	0					
ANR	4886701	Condition	n == 0	144:13:3479:3484	4886419	0	True				
ANR	4886702	EqualityExpression	n == 0		4886419	0		==			
ANR	4886703	Identifier	n		4886419	0					
ANR	4886704	PrimaryExpression	0		4886419	1					
ANR	4886705	CompoundStatement		51:22:1254:1254	4886419	1					
ANR	4886706	ExpressionStatement	"shutdown ( it -> from_socket , 0 )"	147:5:3571:3598	4886419	0	True				
ANR	4886707	CallExpression	"shutdown ( it -> from_socket , 0 )"		4886419	0					
ANR	4886708	Callee	shutdown		4886419	0					
ANR	4886709	Identifier	shutdown		4886419	0					
ANR	4886710	ArgumentList	it -> from_socket		4886419	1					
ANR	4886711	Argument	it -> from_socket		4886419	0					
ANR	4886712	PtrMemberAccess	it -> from_socket		4886419	0					
ANR	4886713	Identifier	it		4886419	0					
ANR	4886714	Identifier	from_socket		4886419	1					
ANR	4886715	Argument	0		4886419	1					
ANR	4886716	PrimaryExpression	0		4886419	0					
ANR	4886717	ExpressionStatement	close ( it -> from_socket )	148:5:3605:3627	4886419	1	True				
ANR	4886718	CallExpression	close ( it -> from_socket )		4886419	0					
ANR	4886719	Callee	close		4886419	0					
ANR	4886720	Identifier	close		4886419	0					
ANR	4886721	ArgumentList	it -> from_socket		4886419	1					
ANR	4886722	Argument	it -> from_socket		4886419	0					
ANR	4886723	PtrMemberAccess	it -> from_socket		4886419	0					
ANR	4886724	Identifier	it		4886419	0					
ANR	4886725	Identifier	from_socket		4886419	1					
ANR	4886726	ExpressionStatement	"shutdown ( it -> to_socket , 1 )"	149:5:3634:3659	4886419	2	True				
ANR	4886727	CallExpression	"shutdown ( it -> to_socket , 1 )"		4886419	0					
ANR	4886728	Callee	shutdown		4886419	0					
ANR	4886729	Identifier	shutdown		4886419	0					
ANR	4886730	ArgumentList	it -> to_socket		4886419	1					
ANR	4886731	Argument	it -> to_socket		4886419	0					
ANR	4886732	PtrMemberAccess	it -> to_socket		4886419	0					
ANR	4886733	Identifier	it		4886419	0					
ANR	4886734	Identifier	to_socket		4886419	1					
ANR	4886735	Argument	1		4886419	1					
ANR	4886736	PrimaryExpression	1		4886419	0					
ANR	4886737	ExpressionStatement	close ( it -> to_socket )	150:5:3666:3686	4886419	3	True				
ANR	4886738	CallExpression	close ( it -> to_socket )		4886419	0					
ANR	4886739	Callee	close		4886419	0					
ANR	4886740	Identifier	close		4886419	0					
ANR	4886741	ArgumentList	it -> to_socket		4886419	1					
ANR	4886742	Argument	it -> to_socket		4886419	0					
ANR	4886743	PtrMemberAccess	it -> to_socket		4886419	0					
ANR	4886744	Identifier	it		4886419	0					
ANR	4886745	Identifier	to_socket		4886419	1					
ANR	4886746	ExpressionStatement	it -> shutdown = true	151:5:3693:3712	4886419	4	True				
ANR	4886747	AssignmentExpression	it -> shutdown = true		4886419	0		=			
ANR	4886748	PtrMemberAccess	it -> shutdown		4886419	0					
ANR	4886749	Identifier	it		4886419	0					
ANR	4886750	Identifier	shutdown		4886419	1					
ANR	4886751	Identifier	true		4886419	1					
ANR	4886752	ElseStatement	else		4886419	0					
ANR	4886753	IfStatement	if ( n < 0 )		4886419	0					
ANR	4886754	Condition	n < 0	153:13:3733:3737	4886419	0	True				
ANR	4886755	RelationalExpression	n < 0		4886419	0		<			
ANR	4886756	Identifier	n		4886419	0					
ANR	4886757	PrimaryExpression	0		4886419	1					
ANR	4886758	CompoundStatement		61:5:1514:1532	4886419	1					
ANR	4886759	IdentifierDeclStatement	MyString error_msg ;	154:5:3748:3766	4886419	0	True				
ANR	4886760	IdentifierDecl	error_msg		4886419	0					
ANR	4886761	IdentifierDeclType	MyString		4886419	0					
ANR	4886762	Identifier	error_msg		4886419	1					
ANR	4886763	ExpressionStatement	"error_msg . sprintf ( ""Error reading from socket %d: %s\\n"" , it -> from_socket , strerror ( errno ) )"	155:5:3773:3873	4886419	1	True				
ANR	4886764	CallExpression	"error_msg . sprintf ( ""Error reading from socket %d: %s\\n"" , it -> from_socket , strerror ( errno ) )"		4886419	0					
ANR	4886765	Callee	error_msg . sprintf		4886419	0					
ANR	4886766	MemberAccess	error_msg . sprintf		4886419	0					
ANR	4886767	Identifier	error_msg		4886419	0					
ANR	4886768	Identifier	sprintf		4886419	1					
ANR	4886769	ArgumentList	"""Error reading from socket %d: %s\\n"""		4886419	1					
ANR	4886770	Argument	"""Error reading from socket %d: %s\\n"""		4886419	0					
ANR	4886771	PrimaryExpression	"""Error reading from socket %d: %s\\n"""		4886419	0					
ANR	4886772	Argument	it -> from_socket		4886419	1					
ANR	4886773	PtrMemberAccess	it -> from_socket		4886419	0					
ANR	4886774	Identifier	it		4886419	0					
ANR	4886775	Identifier	from_socket		4886419	1					
ANR	4886776	Argument	strerror ( errno )		4886419	2					
ANR	4886777	CallExpression	strerror ( errno )		4886419	0					
ANR	4886778	Callee	strerror		4886419	0					
ANR	4886779	Identifier	strerror		4886419	0					
ANR	4886780	ArgumentList	errno		4886419	1					
ANR	4886781	Argument	errno		4886419	0					
ANR	4886782	Identifier	errno		4886419	0					
ANR	4886783	ExpressionStatement	setErrorMsg ( error_msg . Value ( ) )	157:5:3880:3910	4886419	2	True				
ANR	4886784	CallExpression	setErrorMsg ( error_msg . Value ( ) )		4886419	0					
ANR	4886785	Callee	setErrorMsg		4886419	0					
ANR	4886786	Identifier	setErrorMsg		4886419	0					
ANR	4886787	ArgumentList	error_msg . Value ( )		4886419	1					
ANR	4886788	Argument	error_msg . Value ( )		4886419	0					
ANR	4886789	CallExpression	error_msg . Value ( )		4886419	0					
ANR	4886790	Callee	error_msg . Value		4886419	0					
ANR	4886791	MemberAccess	error_msg . Value		4886419	0					
ANR	4886792	Identifier	error_msg		4886419	0					
ANR	4886793	Identifier	Value		4886419	1					
ANR	4886794	ArgumentList			4886419	1					
ANR	4886795	BreakStatement	break ;	158:5:3917:3922	4886419	3	True				
ANR	4886796	ReturnType	void		4886419	1					
ANR	4886797	Identifier	SocketProxy :: execute		4886419	2					
ANR	4886798	ParameterList			4886419	3					
ANR	4886799	CFGEntryNode	ENTRY		4886419		True				
ANR	4886800	CFGExitNode	EXIT		4886419		True				
ANR	4886801	Symbol	error_msg . Value		4886419						
ANR	4886802	Symbol	it -> shutdown		4886419						
ANR	4886803	Symbol	Selector :: IO_READ		4886419						
ANR	4886804	Symbol	has_active_sockets		4886419						
ANR	4886805	Symbol	selector . fd_ready		4886419						
ANR	4886806	Symbol	selector		4886419						
ANR	4886807	Symbol	it -> to_socket		4886419						
ANR	4886808	Symbol	write		4886419						
ANR	4886809	Symbol	SOCKET_PROXY_BUFSIZE		4886419						
ANR	4886810	Symbol	errno		4886419						
ANR	4886811	Symbol	read		4886419						
ANR	4886812	Symbol	error_msg		4886419						
ANR	4886813	Symbol	false		4886419						
ANR	4886814	Symbol	it		4886419						
ANR	4886815	Symbol	n		4886419						
ANR	4886816	Symbol	strerror		4886419						
ANR	4886817	Symbol	it -> buf_begin		4886419						
ANR	4886818	Symbol	* it		4886419						
ANR	4886819	Symbol	true		4886419						
ANR	4886820	Symbol	it -> from_socket		4886419						
ANR	4886821	Symbol	m_socket_pairs		4886419						
ANR	4886822	Symbol	m_socket_pairs . begin		4886419						
ANR	4886823	Symbol	Selector :: IO_WRITE		4886419						
ANR	4886824	Symbol	it -> buf		4886419						
ANR	4886825	Symbol	it -> buf_end		4886419						
ANR	4886826	Symbol	m_socket_pairs . end		4886419						
ANR	4886827	Function	SocketProxyPair :: SocketProxyPair	165:0:3945:4095							
ANR	4886828	FunctionDef	"SocketProxyPair :: SocketProxyPair (int from , int to)"		4886827	0					
ANR	4886829	CompoundStatement		171:0:4077:4095	4886827	0					
ANR	4886830	ExpressionStatement	buf [ 0 ] = '\\0'	172:1:4080:4093	4886827	0	True				
ANR	4886831	AssignmentExpression	buf [ 0 ] = '\\0'		4886827	0		=			
ANR	4886832	ArrayIndexing	buf [ 0 ]		4886827	0					
ANR	4886833	Identifier	buf		4886827	0					
ANR	4886834	PrimaryExpression	0		4886827	1					
ANR	4886835	PrimaryExpression	'\\0'		4886827	1					
ANR	4886836	Identifier	SocketProxyPair :: SocketProxyPair		4886827	1					
ANR	4886837	ParameterList	"int from , int to"		4886827	2					
ANR	4886838	Parameter	int from	165:33:3978:3985	4886827	0	True				
ANR	4886839	ParameterType	int		4886827	0					
ANR	4886840	Identifier	from		4886827	1					
ANR	4886841	Parameter	int to	165:42:3987:3992	4886827	1	True				
ANR	4886842	ParameterType	int		4886827	0					
ANR	4886843	Identifier	to		4886827	1					
ANR	4886844	CFGEntryNode	ENTRY		4886827		True				
ANR	4886845	CFGExitNode	EXIT		4886827		True				
ANR	4886846	Symbol	buf		4886827						
ANR	4886847	Symbol	* buf		4886827						
ANR	4886848	Symbol	from		4886827						
ANR	4886849	Symbol	to		4886827						
