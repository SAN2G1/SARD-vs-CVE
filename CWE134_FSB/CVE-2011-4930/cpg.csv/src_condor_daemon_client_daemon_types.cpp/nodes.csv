command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3001214	File	data/converged/CVE-2011-4930_htcondor/src_condor_daemon_client_daemon_types.cpp								
ANR	3001215	DeclStmt									
ANR	3001216	Decl							const char	const char * [ ]	daemon_names
ANR	3001217	Function	daemonString	49:0:1163:1295							
ANR	3001218	FunctionDef	daemonString (daemon_t dt)		3001217	0					
ANR	3001219	CompoundStatement		51:0:1203:1295	3001217	0					
ANR	3001220	IfStatement	if ( dt < _dt_threshold_ )		3001217	0					
ANR	3001221	Condition	dt < _dt_threshold_	52:5:1211:1229	3001217	0	True				
ANR	3001222	RelationalExpression	dt < _dt_threshold_		3001217	0		<			
ANR	3001223	Identifier	dt		3001217	0					
ANR	3001224	Identifier	_dt_threshold_		3001217	1					
ANR	3001225	CompoundStatement		2:27:29:29	3001217	1					
ANR	3001226	ReturnStatement	return daemon_names [ dt ] ;	53:2:1237:1260	3001217	0	True				
ANR	3001227	ArrayIndexing	daemon_names [ dt ]		3001217	0					
ANR	3001228	Identifier	daemon_names		3001217	0					
ANR	3001229	Identifier	dt		3001217	1					
ANR	3001230	ElseStatement	else		3001217	0					
ANR	3001231	CompoundStatement		4:8:66:66	3001217	0					
ANR	3001232	ReturnStatement	"return ""Unknown"" ;"	55:2:1274:1290	3001217	0	True				
ANR	3001233	PrimaryExpression	"""Unknown"""		3001217	0					
ANR	3001234	ReturnType	const char *		3001217	1					
ANR	3001235	Identifier	daemonString		3001217	2					
ANR	3001236	ParameterList	daemon_t dt		3001217	3					
ANR	3001237	Parameter	daemon_t dt	50:14:1189:1199	3001217	0	True				
ANR	3001238	ParameterType	daemon_t		3001217	0					
ANR	3001239	Identifier	dt		3001217	1					
ANR	3001240	CFGEntryNode	ENTRY		3001217		True				
ANR	3001241	CFGExitNode	EXIT		3001217		True				
ANR	3001242	Symbol	dt		3001217						
ANR	3001243	Symbol	_dt_threshold_		3001217						
ANR	3001244	Symbol	* dt		3001217						
ANR	3001245	Symbol	* daemon_names		3001217						
ANR	3001246	Symbol	daemon_names		3001217						
ANR	3001247	Function	stringToDaemonType	59:0:1298:1479							
ANR	3001248	FunctionDef	stringToDaemonType (char * name)		3001247	0					
ANR	3001249	CompoundStatement		61:0:1340:1479	3001247	0					
ANR	3001250	IdentifierDeclStatement	int i ;	62:1:1343:1348	3001247	0	True				
ANR	3001251	IdentifierDecl	i		3001247	0					
ANR	3001252	IdentifierDeclType	int		3001247	0					
ANR	3001253	Identifier	i		3001247	1					
ANR	3001254	ForStatement	for ( i = 0 ; i < _dt_threshold_ ; i ++ )		3001247	1					
ANR	3001255	ForInit	i = 0 ;	63:6:1356:1359	3001247	0	True				
ANR	3001256	AssignmentExpression	i = 0		3001247	0		=			
ANR	3001257	Identifier	i		3001247	0					
ANR	3001258	PrimaryExpression	0		3001247	1					
ANR	3001259	Condition	i < _dt_threshold_	63:11:1361:1376	3001247	1	True				
ANR	3001260	RelationalExpression	i < _dt_threshold_		3001247	0		<			
ANR	3001261	Identifier	i		3001247	0					
ANR	3001262	Identifier	_dt_threshold_		3001247	1					
ANR	3001263	PostIncDecOperationExpression	i ++	63:29:1379:1381	3001247	2	True				
ANR	3001264	Identifier	i		3001247	0					
ANR	3001265	IncDec	++		3001247	1					
ANR	3001266	CompoundStatement		3:35:44:44	3001247	3					
ANR	3001267	IfStatement	"if ( ! strcasecmp ( daemon_names [ i ] , name ) )"		3001247	0					
ANR	3001268	Condition	"! strcasecmp ( daemon_names [ i ] , name )"	64:6:1393:1426	3001247	0	True				
ANR	3001269	UnaryOperationExpression	"! strcasecmp ( daemon_names [ i ] , name )"		3001247	0					
ANR	3001270	UnaryOperator	!		3001247	0					
ANR	3001271	CallExpression	"strcasecmp ( daemon_names [ i ] , name )"		3001247	1					
ANR	3001272	Callee	strcasecmp		3001247	0					
ANR	3001273	Identifier	strcasecmp		3001247	0					
ANR	3001274	ArgumentList	daemon_names [ i ]		3001247	1					
ANR	3001275	Argument	daemon_names [ i ]		3001247	0					
ANR	3001276	ArrayIndexing	daemon_names [ i ]		3001247	0					
ANR	3001277	Identifier	daemon_names		3001247	0					
ANR	3001278	Identifier	i		3001247	1					
ANR	3001279	Argument	name		3001247	1					
ANR	3001280	Identifier	name		3001247	0					
ANR	3001281	CompoundStatement		4:43:89:89	3001247	1					
ANR	3001282	ReturnStatement	return ( daemon_t ) i ;	65:3:1435:1453	3001247	0	True				
ANR	3001283	CastExpression	( daemon_t ) i		3001247	0					
ANR	3001284	CastTarget	daemon_t		3001247	0					
ANR	3001285	Identifier	i		3001247	1					
ANR	3001286	ReturnStatement	return DT_NONE ;	68:1:1463:1477	3001247	2	True				
ANR	3001287	Identifier	DT_NONE		3001247	0					
ANR	3001288	ReturnType	daemon_t		3001247	1					
ANR	3001289	Identifier	stringToDaemonType		3001247	2					
ANR	3001290	ParameterList	char * name		3001247	3					
ANR	3001291	Parameter	char * name	60:20:1327:1336	3001247	0	True				
ANR	3001292	ParameterType	char *		3001247	0					
ANR	3001293	Identifier	name		3001247	1					
ANR	3001294	CFGEntryNode	ENTRY		3001247		True				
ANR	3001295	CFGExitNode	EXIT		3001247		True				
ANR	3001296	Symbol	_dt_threshold_		3001247						
ANR	3001297	Symbol	* i		3001247						
ANR	3001298	Symbol	* daemon_names		3001247						
ANR	3001299	Symbol	name		3001247						
ANR	3001300	Symbol	i		3001247						
ANR	3001301	Symbol	DT_NONE		3001247						
ANR	3001302	Symbol	daemon_names		3001247						
ANR	3001303	Symbol	strcasecmp		3001247						
