command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5379338	File	data/converged/CVE-2011-4930_htcondor/test_it.cpp								
ANR	5379339	DeclStmt									
ANR	5379340	Decl							extern int	extern int	errno
ANR	5379341	DeclStmt									
ANR	5379342	Decl							pid_t	pid_t	StarterPid
ANR	5379343	ClassDef	<unnamed>	28:8:931:990							
ANR	5379344	DeclStmt									
ANR	5379345	Decl							EVENT	EVENT	ev
ANR	5379346	DeclStmt									
ANR	5379347	Decl							char	char *	str
ANR	5379348	DeclStmt									
ANR	5379349	Decl							char	char	response
ANR	5379350	DeclStmt									
ANR	5379351	Decl									MENU_ITEM
ANR	5379352	DeclStmt									
ANR	5379353	Decl							MENU_ITEM	MENU_ITEM [ ]	Menu
ANR	5379354	DeclStmt									
ANR	5379355	Decl							EVENT	EVENT ( )	get_command
ANR	5379356	DeclStmt									
ANR	5379357	Decl							void	void ( char * )	usage
ANR	5379358	DeclStmt									
ANR	5379359	Decl							void	void ( int sig )	send_sig
ANR	5379360	DeclStmt									
ANR	5379361	Decl							pid_t	pid_t ( const char * )	get_starter_pid
ANR	5379362	DeclStmt									
ANR	5379363	Decl							void	void ( )	check_starter
ANR	5379364	DeclStmt									
ANR	5379365	Decl							int	"int ( const char * , const char * )"	contains
ANR	5379366	DeclStmt									
ANR	5379367	Decl							pid_t	pid_t ( const char * )	get_pid
ANR	5379368	Function	usage	53:0:1605:1705							
ANR	5379369	FunctionDef	usage (char * my_name)		5379368	0					
ANR	5379370	CompoundStatement		55:0:1633:1705	5379368	0					
ANR	5379371	ExpressionStatement	"fprintf ( stderr , ""Usage: %s [starter_pid]\\n"" , my_name )"	56:1:1636:1691	5379368	0	True				
ANR	5379372	CallExpression	"fprintf ( stderr , ""Usage: %s [starter_pid]\\n"" , my_name )"		5379368	0					
ANR	5379373	Callee	fprintf		5379368	0					
ANR	5379374	Identifier	fprintf		5379368	0					
ANR	5379375	ArgumentList	stderr		5379368	1					
ANR	5379376	Argument	stderr		5379368	0					
ANR	5379377	Identifier	stderr		5379368	0					
ANR	5379378	Argument	"""Usage: %s [starter_pid]\\n"""		5379368	1					
ANR	5379379	PrimaryExpression	"""Usage: %s [starter_pid]\\n"""		5379368	0					
ANR	5379380	Argument	my_name		5379368	2					
ANR	5379381	Identifier	my_name		5379368	0					
ANR	5379382	ExpressionStatement	exit ( 1 )	57:1:1694:1703	5379368	1	True				
ANR	5379383	CallExpression	exit ( 1 )		5379368	0					
ANR	5379384	Callee	exit		5379368	0					
ANR	5379385	Identifier	exit		5379368	0					
ANR	5379386	ArgumentList	1		5379368	1					
ANR	5379387	Argument	1		5379368	0					
ANR	5379388	PrimaryExpression	1		5379368	0					
ANR	5379389	ReturnType	void		5379368	1					
ANR	5379390	Identifier	usage		5379368	2					
ANR	5379391	ParameterList	char * my_name		5379368	3					
ANR	5379392	Parameter	char * my_name	54:7:1617:1629	5379368	0	True				
ANR	5379393	ParameterType	char *		5379368	0					
ANR	5379394	Identifier	my_name		5379368	1					
ANR	5379395	CFGEntryNode	ENTRY		5379368		True				
ANR	5379396	CFGExitNode	EXIT		5379368		True				
ANR	5379397	Symbol	my_name		5379368						
ANR	5379398	Symbol	stderr		5379368						
ANR	5379399	Function	main	62:0:1710:2463							
ANR	5379400	FunctionDef	"main (int argc , char * argv [ ])"		5379399	0					
ANR	5379401	CompoundStatement		64:0:1745:2463	5379399	0					
ANR	5379402	IdentifierDeclStatement	EVENT command ;	65:1:1748:1761	5379399	0	True				
ANR	5379403	IdentifierDecl	command		5379399	0					
ANR	5379404	IdentifierDeclType	EVENT		5379399	0					
ANR	5379405	Identifier	command		5379399	1					
ANR	5379406	IfStatement	if ( ( argc != 1 ) && ( argc != 2 ) )		5379399	1					
ANR	5379407	Condition	( argc != 1 ) && ( argc != 2 )	67:5:1771:1796	5379399	0	True				
ANR	5379408	AndExpression	( argc != 1 ) && ( argc != 2 )		5379399	0		&&			
ANR	5379409	EqualityExpression	argc != 1		5379399	0		!=			
ANR	5379410	Identifier	argc		5379399	0					
ANR	5379411	PrimaryExpression	1		5379399	1					
ANR	5379412	EqualityExpression	argc != 2		5379399	1		!=			
ANR	5379413	Identifier	argc		5379399	0					
ANR	5379414	PrimaryExpression	2		5379399	1					
ANR	5379415	CompoundStatement		4:34:54:54	5379399	1					
ANR	5379416	ExpressionStatement	usage ( argv [ 0 ] )	68:2:1804:1820	5379399	0	True				
ANR	5379417	CallExpression	usage ( argv [ 0 ] )		5379399	0					
ANR	5379418	Callee	usage		5379399	0					
ANR	5379419	Identifier	usage		5379399	0					
ANR	5379420	ArgumentList	argv [ 0 ]		5379399	1					
ANR	5379421	Argument	argv [ 0 ]		5379399	0					
ANR	5379422	ArrayIndexing	argv [ 0 ]		5379399	0					
ANR	5379423	Identifier	argv		5379399	0					
ANR	5379424	PrimaryExpression	0		5379399	1					
ANR	5379425	IfStatement	if ( argc == 2 )		5379399	2					
ANR	5379426	Condition	argc == 2	71:5:1831:1839	5379399	0	True				
ANR	5379427	EqualityExpression	argc == 2		5379399	0		==			
ANR	5379428	Identifier	argc		5379399	0					
ANR	5379429	PrimaryExpression	2		5379399	1					
ANR	5379430	CompoundStatement		8:17:97:97	5379399	1					
ANR	5379431	ExpressionStatement	StarterPid = ( pid_t ) atoi ( argv [ 1 ] )	72:2:1847:1882	5379399	0	True				
ANR	5379432	AssignmentExpression	StarterPid = ( pid_t ) atoi ( argv [ 1 ] )		5379399	0		=			
ANR	5379433	Identifier	StarterPid		5379399	0					
ANR	5379434	CastExpression	( pid_t ) atoi ( argv [ 1 ] )		5379399	1					
ANR	5379435	CastTarget	pid_t		5379399	0					
ANR	5379436	CallExpression	atoi ( argv [ 1 ] )		5379399	1					
ANR	5379437	Callee	atoi		5379399	0					
ANR	5379438	Identifier	atoi		5379399	0					
ANR	5379439	ArgumentList	argv [ 1 ]		5379399	1					
ANR	5379440	Argument	argv [ 1 ]		5379399	0					
ANR	5379441	ArrayIndexing	argv [ 1 ]		5379399	0					
ANR	5379442	Identifier	argv		5379399	0					
ANR	5379443	PrimaryExpression	1		5379399	1					
ANR	5379444	ElseStatement	else		5379399	0					
ANR	5379445	CompoundStatement		10:8:146:146	5379399	0					
ANR	5379446	ExpressionStatement	StarterPid = get_starter_pid ( argv [ 0 ] )	74:2:1896:1935	5379399	0	True				
ANR	5379447	AssignmentExpression	StarterPid = get_starter_pid ( argv [ 0 ] )		5379399	0		=			
ANR	5379448	Identifier	StarterPid		5379399	0					
ANR	5379449	CallExpression	get_starter_pid ( argv [ 0 ] )		5379399	1					
ANR	5379450	Callee	get_starter_pid		5379399	0					
ANR	5379451	Identifier	get_starter_pid		5379399	0					
ANR	5379452	ArgumentList	argv [ 0 ]		5379399	1					
ANR	5379453	Argument	argv [ 0 ]		5379399	0					
ANR	5379454	ArrayIndexing	argv [ 0 ]		5379399	0					
ANR	5379455	Identifier	argv		5379399	0					
ANR	5379456	PrimaryExpression	0		5379399	1					
ANR	5379457	WhileStatement	while ( StarterPid )		5379399	3					
ANR	5379458	Condition	StarterPid	77:8:1949:1958	5379399	0	True				
ANR	5379459	Identifier	StarterPid		5379399	0					
ANR	5379460	CompoundStatement		14:21:216:216	5379399	1					
ANR	5379461	ExpressionStatement	check_starter ( )	78:2:1966:1981	5379399	0	True				
ANR	5379462	CallExpression	check_starter ( )		5379399	0					
ANR	5379463	Callee	check_starter		5379399	0					
ANR	5379464	Identifier	check_starter		5379399	0					
ANR	5379465	ArgumentList			5379399	1					
ANR	5379466	ExpressionStatement	command = get_command ( )	79:2:1985:2008	5379399	1	True				
ANR	5379467	AssignmentExpression	command = get_command ( )		5379399	0		=			
ANR	5379468	Identifier	command		5379399	0					
ANR	5379469	CallExpression	get_command ( )		5379399	1					
ANR	5379470	Callee	get_command		5379399	0					
ANR	5379471	Identifier	get_command		5379399	0					
ANR	5379472	ArgumentList			5379399	1					
ANR	5379473	SwitchStatement	switch ( command )		5379399	2					
ANR	5379474	Condition	command	80:10:2020:2026	5379399	0	True				
ANR	5379475	Identifier	command		5379399	0					
ANR	5379476	CompoundStatement		17:20:284:284	5379399	1					
ANR	5379477	Label	case SUSPEND :	81:3:2035:2047	5379399	0	True				
ANR	5379478	Identifier	SUSPEND		5379399	0					
ANR	5379479	ExpressionStatement	send_sig ( SIGUSR1 )	82:4:2053:2072	5379399	1	True				
ANR	5379480	CallExpression	send_sig ( SIGUSR1 )		5379399	0					
ANR	5379481	Callee	send_sig		5379399	0					
ANR	5379482	Identifier	send_sig		5379399	0					
ANR	5379483	ArgumentList	SIGUSR1		5379399	1					
ANR	5379484	Argument	SIGUSR1		5379399	0					
ANR	5379485	Identifier	SIGUSR1		5379399	0					
ANR	5379486	BreakStatement	break ;	83:4:2078:2083	5379399	2	True				
ANR	5379487	Label	case CONTINUE :	84:3:2088:2101	5379399	3	True				
ANR	5379488	Identifier	CONTINUE		5379399	0					
ANR	5379489	ExpressionStatement	send_sig ( SIGCONT )	85:4:2107:2126	5379399	4	True				
ANR	5379490	CallExpression	send_sig ( SIGCONT )		5379399	0					
ANR	5379491	Callee	send_sig		5379399	0					
ANR	5379492	Identifier	send_sig		5379399	0					
ANR	5379493	ArgumentList	SIGCONT		5379399	1					
ANR	5379494	Argument	SIGCONT		5379399	0					
ANR	5379495	Identifier	SIGCONT		5379399	0					
ANR	5379496	BreakStatement	break ;	86:4:2132:2137	5379399	5	True				
ANR	5379497	Label	case VACATE :	87:3:2142:2153	5379399	6	True				
ANR	5379498	Identifier	VACATE		5379399	0					
ANR	5379499	ExpressionStatement	send_sig ( SIGTSTP )	88:4:2159:2178	5379399	7	True				
ANR	5379500	CallExpression	send_sig ( SIGTSTP )		5379399	0					
ANR	5379501	Callee	send_sig		5379399	0					
ANR	5379502	Identifier	send_sig		5379399	0					
ANR	5379503	ArgumentList	SIGTSTP		5379399	1					
ANR	5379504	Argument	SIGTSTP		5379399	0					
ANR	5379505	Identifier	SIGTSTP		5379399	0					
ANR	5379506	BreakStatement	break ;	89:4:2184:2189	5379399	8	True				
ANR	5379507	Label	case ALARM :	90:3:2194:2204	5379399	9	True				
ANR	5379508	Identifier	ALARM		5379399	0					
ANR	5379509	ExpressionStatement	send_sig ( SIGALRM )	91:4:2210:2229	5379399	10	True				
ANR	5379510	CallExpression	send_sig ( SIGALRM )		5379399	0					
ANR	5379511	Callee	send_sig		5379399	0					
ANR	5379512	Identifier	send_sig		5379399	0					
ANR	5379513	ArgumentList	SIGALRM		5379399	1					
ANR	5379514	Argument	SIGALRM		5379399	0					
ANR	5379515	Identifier	SIGALRM		5379399	0					
ANR	5379516	BreakStatement	break ;	92:4:2235:2240	5379399	11	True				
ANR	5379517	Label	case DIE :	93:3:2245:2253	5379399	12	True				
ANR	5379518	Identifier	DIE		5379399	0					
ANR	5379519	ExpressionStatement	send_sig ( SIGINT )	94:4:2259:2277	5379399	13	True				
ANR	5379520	CallExpression	send_sig ( SIGINT )		5379399	0					
ANR	5379521	Callee	send_sig		5379399	0					
ANR	5379522	Identifier	send_sig		5379399	0					
ANR	5379523	ArgumentList	SIGINT		5379399	1					
ANR	5379524	Argument	SIGINT		5379399	0					
ANR	5379525	Identifier	SIGINT		5379399	0					
ANR	5379526	BreakStatement	break ;	95:4:2283:2288	5379399	14	True				
ANR	5379527	Label	case CKPT_and_VACATE :	96:3:2293:2313	5379399	15	True				
ANR	5379528	Identifier	CKPT_and_VACATE		5379399	0					
ANR	5379529	ExpressionStatement	send_sig ( SIGUSR2 )	97:4:2319:2338	5379399	16	True				
ANR	5379530	CallExpression	send_sig ( SIGUSR2 )		5379399	0					
ANR	5379531	Callee	send_sig		5379399	0					
ANR	5379532	Identifier	send_sig		5379399	0					
ANR	5379533	ArgumentList	SIGUSR2		5379399	1					
ANR	5379534	Argument	SIGUSR2		5379399	0					
ANR	5379535	Identifier	SIGUSR2		5379399	0					
ANR	5379536	BreakStatement	break ;	98:4:2344:2349	5379399	17	True				
ANR	5379537	Label	case NO_EVENT :	99:3:2354:2367	5379399	18	True				
ANR	5379538	Identifier	NO_EVENT		5379399	0					
ANR	5379539	ExpressionStatement	exit ( 0 )	100:4:2373:2382	5379399	19	True				
ANR	5379540	CallExpression	exit ( 0 )		5379399	0					
ANR	5379541	Callee	exit		5379399	0					
ANR	5379542	Identifier	exit		5379399	0					
ANR	5379543	ArgumentList	0		5379399	1					
ANR	5379544	Argument	0		5379399	0					
ANR	5379545	PrimaryExpression	0		5379399	0					
ANR	5379546	Label	default :	101:3:2387:2394	5379399	20	True				
ANR	5379547	Identifier	default		5379399	0					
ANR	5379548	ExpressionStatement	"printf ( ""Unknown command (%d)\\n"" , command )"	102:4:2400:2443	5379399	21	True				
ANR	5379549	CallExpression	"printf ( ""Unknown command (%d)\\n"" , command )"		5379399	0					
ANR	5379550	Callee	printf		5379399	0					
ANR	5379551	Identifier	printf		5379399	0					
ANR	5379552	ArgumentList	"""Unknown command (%d)\\n"""		5379399	1					
ANR	5379553	Argument	"""Unknown command (%d)\\n"""		5379399	0					
ANR	5379554	PrimaryExpression	"""Unknown command (%d)\\n"""		5379399	0					
ANR	5379555	Argument	command		5379399	1					
ANR	5379556	Identifier	command		5379399	0					
ANR	5379557	ReturnStatement	return 0 ;	105:1:2453:2461	5379399	4	True				
ANR	5379558	PrimaryExpression	0		5379399	0					
ANR	5379559	ReturnType	int		5379399	1					
ANR	5379560	Identifier	main		5379399	2					
ANR	5379561	ParameterList	"int argc , char * argv [ ]"		5379399	3					
ANR	5379562	Parameter	int argc	63:6:1720:1727	5379399	0	True				
ANR	5379563	ParameterType	int		5379399	0					
ANR	5379564	Identifier	argc		5379399	1					
ANR	5379565	Parameter	char * argv [ ]	63:16:1730:1741	5379399	1	True				
ANR	5379566	ParameterType	char * [ ]		5379399	0					
ANR	5379567	Identifier	argv		5379399	1					
ANR	5379568	CFGEntryNode	ENTRY		5379399		True				
ANR	5379569	CFGExitNode	EXIT		5379399		True				
ANR	5379570	Symbol	argc		5379399						
ANR	5379571	Symbol	atoi		5379399						
ANR	5379572	Symbol	SIGUSR2		5379399						
ANR	5379573	Symbol	SIGUSR1		5379399						
ANR	5379574	Symbol	SIGALRM		5379399						
ANR	5379575	Symbol	* argv		5379399						
ANR	5379576	Symbol	SIGTSTP		5379399						
ANR	5379577	Symbol	argv		5379399						
ANR	5379578	Symbol	command		5379399						
ANR	5379579	Symbol	SIGINT		5379399						
ANR	5379580	Symbol	get_command		5379399						
ANR	5379581	Symbol	get_starter_pid		5379399						
ANR	5379582	Symbol	StarterPid		5379399						
ANR	5379583	Symbol	SIGCONT		5379399						
ANR	5379584	Function	get_command	108:0:2466:2899							
ANR	5379585	FunctionDef	get_command ()		5379584	0					
ANR	5379586	CompoundStatement		110:0:2486:2899	5379584	0					
ANR	5379587	IdentifierDeclStatement	MENU_ITEM * ptr ;	111:1:2489:2503	5379584	0	True				
ANR	5379588	IdentifierDecl	* ptr		5379584	0					
ANR	5379589	IdentifierDeclType	MENU_ITEM *		5379584	0					
ANR	5379590	Identifier	ptr		5379584	1					
ANR	5379591	IdentifierDeclStatement	char ch ;	112:1:2506:2514	5379584	1	True				
ANR	5379592	IdentifierDecl	ch		5379584	0					
ANR	5379593	IdentifierDeclType	char		5379584	0					
ANR	5379594	Identifier	ch		5379584	1					
ANR	5379595	IdentifierDeclStatement	char buf [ 1024 ] ;	113:1:2517:2532	5379584	2	True				
ANR	5379596	IdentifierDecl	buf [ 1024 ]		5379584	0					
ANR	5379597	IdentifierDeclType	char [ 1024 ]		5379584	0					
ANR	5379598	Identifier	buf		5379584	1					
ANR	5379599	PrimaryExpression	1024		5379584	2					
ANR	5379600	ForStatement	for ( ptr = Menu ; ptr -> str ; ptr ++ )		5379584	3					
ANR	5379601	ForInit	ptr = Menu ;	115:6:2541:2549	5379584	0	True				
ANR	5379602	AssignmentExpression	ptr = Menu		5379584	0		=			
ANR	5379603	Identifier	ptr		5379584	0					
ANR	5379604	Identifier	Menu		5379584	1					
ANR	5379605	Condition	ptr -> str	115:16:2551:2558	5379584	1	True				
ANR	5379606	PtrMemberAccess	ptr -> str		5379584	0					
ANR	5379607	Identifier	ptr		5379584	0					
ANR	5379608	Identifier	str		5379584	1					
ANR	5379609	PostIncDecOperationExpression	ptr ++	115:26:2561:2565	5379584	2	True				
ANR	5379610	Identifier	ptr		5379584	0					
ANR	5379611	IncDec	++		5379584	1					
ANR	5379612	CompoundStatement		6:34:82:82	5379584	3					
ANR	5379613	ExpressionStatement	"printf ( ""%s\\n"" , ptr -> str )"	116:2:2573:2599	5379584	0	True				
ANR	5379614	CallExpression	"printf ( ""%s\\n"" , ptr -> str )"		5379584	0					
ANR	5379615	Callee	printf		5379584	0					
ANR	5379616	Identifier	printf		5379584	0					
ANR	5379617	ArgumentList	"""%s\\n"""		5379584	1					
ANR	5379618	Argument	"""%s\\n"""		5379584	0					
ANR	5379619	PrimaryExpression	"""%s\\n"""		5379584	0					
ANR	5379620	Argument	ptr -> str		5379584	1					
ANR	5379621	PtrMemberAccess	ptr -> str		5379584	0					
ANR	5379622	Identifier	ptr		5379584	0					
ANR	5379623	Identifier	str		5379584	1					
ANR	5379624	ExpressionStatement		117:2:2603:2603	5379584	4	True				
ANR	5379625	ExpressionStatement	"printf ( ""(Send EOF to quit)\\n"" )"	118:1:2606:2638	5379584	5	True				
ANR	5379626	CallExpression	"printf ( ""(Send EOF to quit)\\n"" )"		5379584	0					
ANR	5379627	Callee	printf		5379584	0					
ANR	5379628	Identifier	printf		5379584	0					
ANR	5379629	ArgumentList	"""(Send EOF to quit)\\n"""		5379584	1					
ANR	5379630	Argument	"""(Send EOF to quit)\\n"""		5379584	0					
ANR	5379631	PrimaryExpression	"""(Send EOF to quit)\\n"""		5379584	0					
ANR	5379632	ForStatement	for ( ; ; )		5379584	6					
ANR	5379633	CompoundStatement		12:9:164:164	5379584	0					
ANR	5379634	IfStatement	"if ( fgets ( buf , sizeof ( buf ) , stdin ) == NULL )"		5379584	0					
ANR	5379635	Condition	"fgets ( buf , sizeof ( buf ) , stdin ) == NULL"	122:6:2659:2694	5379584	0	True				
ANR	5379636	EqualityExpression	"fgets ( buf , sizeof ( buf ) , stdin ) == NULL"		5379584	0		==			
ANR	5379637	CallExpression	"fgets ( buf , sizeof ( buf ) , stdin )"		5379584	0					
ANR	5379638	Callee	fgets		5379584	0					
ANR	5379639	Identifier	fgets		5379584	0					
ANR	5379640	ArgumentList	buf		5379584	1					
ANR	5379641	Argument	buf		5379584	0					
ANR	5379642	Identifier	buf		5379584	0					
ANR	5379643	Argument	sizeof ( buf )		5379584	1					
ANR	5379644	SizeofExpression	sizeof ( buf )		5379584	0					
ANR	5379645	Sizeof	sizeof		5379584	0					
ANR	5379646	SizeofOperand	buf		5379584	1					
ANR	5379647	Argument	stdin		5379584	2					
ANR	5379648	Identifier	stdin		5379584	0					
ANR	5379649	Identifier	NULL		5379584	1					
ANR	5379650	CompoundStatement		13:45:211:211	5379584	1					
ANR	5379651	ReturnStatement	return NO_EVENT ;	123:3:2703:2718	5379584	0	True				
ANR	5379652	Identifier	NO_EVENT		5379584	0					
ANR	5379653	ExpressionStatement	ch = toupper ( ( int ) buf [ 0 ] )	126:2:2727:2754	5379584	1	True				
ANR	5379654	AssignmentExpression	ch = toupper ( ( int ) buf [ 0 ] )		5379584	0		=			
ANR	5379655	Identifier	ch		5379584	0					
ANR	5379656	CallExpression	toupper ( ( int ) buf [ 0 ] )		5379584	1					
ANR	5379657	Callee	toupper		5379584	0					
ANR	5379658	Identifier	toupper		5379584	0					
ANR	5379659	ArgumentList	( int ) buf [ 0 ]		5379584	1					
ANR	5379660	Argument	( int ) buf [ 0 ]		5379584	0					
ANR	5379661	CastExpression	( int ) buf [ 0 ]		5379584	0					
ANR	5379662	CastTarget	int		5379584	0					
ANR	5379663	ArrayIndexing	buf [ 0 ]		5379584	1					
ANR	5379664	Identifier	buf		5379584	0					
ANR	5379665	PrimaryExpression	0		5379584	1					
ANR	5379666	ForStatement	for ( ptr = Menu ; ptr -> str ; ptr ++ )		5379584	2					
ANR	5379667	ForInit	ptr = Menu ;	127:7:2763:2771	5379584	0	True				
ANR	5379668	AssignmentExpression	ptr = Menu		5379584	0		=			
ANR	5379669	Identifier	ptr		5379584	0					
ANR	5379670	Identifier	Menu		5379584	1					
ANR	5379671	Condition	ptr -> str	127:17:2773:2780	5379584	1	True				
ANR	5379672	PtrMemberAccess	ptr -> str		5379584	0					
ANR	5379673	Identifier	ptr		5379584	0					
ANR	5379674	Identifier	str		5379584	1					
ANR	5379675	PostIncDecOperationExpression	ptr ++	127:27:2783:2787	5379584	2	True				
ANR	5379676	Identifier	ptr		5379584	0					
ANR	5379677	IncDec	++		5379584	1					
ANR	5379678	CompoundStatement		18:35:304:304	5379584	3					
ANR	5379679	IfStatement	if ( ch == ptr -> response )		5379584	0					
ANR	5379680	Condition	ch == ptr -> response	128:7:2800:2818	5379584	0	True				
ANR	5379681	EqualityExpression	ch == ptr -> response		5379584	0		==			
ANR	5379682	Identifier	ch		5379584	0					
ANR	5379683	PtrMemberAccess	ptr -> response		5379584	1					
ANR	5379684	Identifier	ptr		5379584	0					
ANR	5379685	Identifier	response		5379584	1					
ANR	5379686	CompoundStatement		19:29:335:335	5379584	1					
ANR	5379687	ReturnStatement	return ptr -> ev ;	129:4:2828:2842	5379584	0	True				
ANR	5379688	PtrMemberAccess	ptr -> ev		5379584	0					
ANR	5379689	Identifier	ptr		5379584	0					
ANR	5379690	Identifier	ev		5379584	1					
ANR	5379691	ExpressionStatement	"printf ( ""%c - Unknown command\\n"" , ch )"	132:2:2855:2893	5379584	3	True				
ANR	5379692	CallExpression	"printf ( ""%c - Unknown command\\n"" , ch )"		5379584	0					
ANR	5379693	Callee	printf		5379584	0					
ANR	5379694	Identifier	printf		5379584	0					
ANR	5379695	ArgumentList	"""%c - Unknown command\\n"""		5379584	1					
ANR	5379696	Argument	"""%c - Unknown command\\n"""		5379584	0					
ANR	5379697	PrimaryExpression	"""%c - Unknown command\\n"""		5379584	0					
ANR	5379698	Argument	ch		5379584	1					
ANR	5379699	Identifier	ch		5379584	0					
ANR	5379700	ReturnType	EVENT		5379584	1					
ANR	5379701	Identifier	get_command		5379584	2					
ANR	5379702	ParameterList			5379584	3					
ANR	5379703	CFGEntryNode	ENTRY		5379584		True				
ANR	5379704	CFGExitNode	EXIT		5379584		True				
ANR	5379705	InfiniteForNode	true		5379584		True				
ANR	5379706	Symbol	ptr -> str		5379584						
ANR	5379707	Symbol	stdin		5379584						
ANR	5379708	Symbol	* buf		5379584						
ANR	5379709	Symbol	NULL		5379584						
ANR	5379710	Symbol	NO_EVENT		5379584						
ANR	5379711	Symbol	ch		5379584						
ANR	5379712	Symbol	toupper		5379584						
ANR	5379713	Symbol	fgets		5379584						
ANR	5379714	Symbol	ptr		5379584						
ANR	5379715	Symbol	buf		5379584						
ANR	5379716	Symbol	ptr -> response		5379584						
ANR	5379717	Symbol	* ptr		5379584						
ANR	5379718	Symbol	Menu		5379584						
ANR	5379719	Symbol	ptr -> ev		5379584						
ANR	5379720	Function	send_sig	137:0:2902:3491							
ANR	5379721	FunctionDef	send_sig (int sig)		5379720	0					
ANR	5379722	CompoundStatement		139:0:2927:3491	5379720	0					
ANR	5379723	IfStatement	if ( sig != SIGCONT )		5379720	0					
ANR	5379724	Condition	sig != SIGCONT	140:5:2934:2947	5379720	0	True				
ANR	5379725	EqualityExpression	sig != SIGCONT		5379720	0		!=			
ANR	5379726	Identifier	sig		5379720	0					
ANR	5379727	Identifier	SIGCONT		5379720	1					
ANR	5379728	CompoundStatement		2:22:23:23	5379720	1					
ANR	5379729	IfStatement	"if ( kill ( StarterPid , SIGCONT ) < 0 )"		5379720	0					
ANR	5379730	Condition	"kill ( StarterPid , SIGCONT ) < 0"	141:6:2959:2986	5379720	0	True				
ANR	5379731	RelationalExpression	"kill ( StarterPid , SIGCONT ) < 0"		5379720	0		<			
ANR	5379732	CallExpression	"kill ( StarterPid , SIGCONT )"		5379720	0					
ANR	5379733	Callee	kill		5379720	0					
ANR	5379734	Identifier	kill		5379720	0					
ANR	5379735	ArgumentList	StarterPid		5379720	1					
ANR	5379736	Argument	StarterPid		5379720	0					
ANR	5379737	Identifier	StarterPid		5379720	0					
ANR	5379738	Argument	SIGCONT		5379720	1					
ANR	5379739	Identifier	SIGCONT		5379720	0					
ANR	5379740	PrimaryExpression	0		5379720	1					
ANR	5379741	CompoundStatement		3:37:62:62	5379720	1					
ANR	5379742	IfStatement	if ( errno == ESRCH )		5379720	0					
ANR	5379743	Condition	errno == ESRCH	142:7:2999:3012	5379720	0	True				
ANR	5379744	EqualityExpression	errno == ESRCH		5379720	0		==			
ANR	5379745	Identifier	errno		5379720	0					
ANR	5379746	Identifier	ESRCH		5379720	1					
ANR	5379747	CompoundStatement		4:24:88:88	5379720	1					
ANR	5379748	ExpressionStatement	StarterPid = 0	143:4:3022:3036	5379720	0	True				
ANR	5379749	AssignmentExpression	StarterPid = 0		5379720	0		=			
ANR	5379750	Identifier	StarterPid		5379720	0					
ANR	5379751	PrimaryExpression	0		5379720	1					
ANR	5379752	ReturnStatement	return ;	144:4:3042:3048	5379720	1	True				
ANR	5379753	ExpressionStatement	"fprintf ( stderr , ""Can't send SIGCONT to process %d"" , StarterPid )"	146:3:3058:3123	5379720	1	True				
ANR	5379754	CallExpression	"fprintf ( stderr , ""Can't send SIGCONT to process %d"" , StarterPid )"		5379720	0					
ANR	5379755	Callee	fprintf		5379720	0					
ANR	5379756	Identifier	fprintf		5379720	0					
ANR	5379757	ArgumentList	stderr		5379720	1					
ANR	5379758	Argument	stderr		5379720	0					
ANR	5379759	Identifier	stderr		5379720	0					
ANR	5379760	Argument	"""Can't send SIGCONT to process %d"""		5379720	1					
ANR	5379761	PrimaryExpression	"""Can't send SIGCONT to process %d"""		5379720	0					
ANR	5379762	Argument	StarterPid		5379720	2					
ANR	5379763	Identifier	StarterPid		5379720	0					
ANR	5379764	ExpressionStatement	"perror ( "" "" )"	147:3:3128:3141	5379720	2	True				
ANR	5379765	CallExpression	"perror ( "" "" )"		5379720	0					
ANR	5379766	Callee	perror		5379720	0					
ANR	5379767	Identifier	perror		5379720	0					
ANR	5379768	ArgumentList	""" """		5379720	1					
ANR	5379769	Argument	""" """		5379720	0					
ANR	5379770	PrimaryExpression	""" """		5379720	0					
ANR	5379771	ExpressionStatement	exit ( 1 )	148:3:3146:3155	5379720	3	True				
ANR	5379772	CallExpression	exit ( 1 )		5379720	0					
ANR	5379773	Callee	exit		5379720	0					
ANR	5379774	Identifier	exit		5379720	0					
ANR	5379775	ArgumentList	1		5379720	1					
ANR	5379776	Argument	1		5379720	0					
ANR	5379777	PrimaryExpression	1		5379720	0					
ANR	5379778	ExpressionStatement	"printf ( ""Sent signal SIGCONT to process %d\\n"" , StarterPid )"	151:1:3165:3224	5379720	1	True				
ANR	5379779	CallExpression	"printf ( ""Sent signal SIGCONT to process %d\\n"" , StarterPid )"		5379720	0					
ANR	5379780	Callee	printf		5379720	0					
ANR	5379781	Identifier	printf		5379720	0					
ANR	5379782	ArgumentList	"""Sent signal SIGCONT to process %d\\n"""		5379720	1					
ANR	5379783	Argument	"""Sent signal SIGCONT to process %d\\n"""		5379720	0					
ANR	5379784	PrimaryExpression	"""Sent signal SIGCONT to process %d\\n"""		5379720	0					
ANR	5379785	Argument	StarterPid		5379720	1					
ANR	5379786	Identifier	StarterPid		5379720	0					
ANR	5379787	IfStatement	"if ( kill ( StarterPid , sig ) < 0 )"		5379720	2					
ANR	5379788	Condition	"kill ( StarterPid , sig ) < 0"	153:5:3232:3255	5379720	0	True				
ANR	5379789	RelationalExpression	"kill ( StarterPid , sig ) < 0"		5379720	0		<			
ANR	5379790	CallExpression	"kill ( StarterPid , sig )"		5379720	0					
ANR	5379791	Callee	kill		5379720	0					
ANR	5379792	Identifier	kill		5379720	0					
ANR	5379793	ArgumentList	StarterPid		5379720	1					
ANR	5379794	Argument	StarterPid		5379720	0					
ANR	5379795	Identifier	StarterPid		5379720	0					
ANR	5379796	Argument	sig		5379720	1					
ANR	5379797	Identifier	sig		5379720	0					
ANR	5379798	PrimaryExpression	0		5379720	1					
ANR	5379799	CompoundStatement		15:32:331:331	5379720	1					
ANR	5379800	IfStatement	if ( errno == ESRCH )		5379720	0					
ANR	5379801	Condition	errno == ESRCH	154:6:3267:3280	5379720	0	True				
ANR	5379802	EqualityExpression	errno == ESRCH		5379720	0		==			
ANR	5379803	Identifier	errno		5379720	0					
ANR	5379804	Identifier	ESRCH		5379720	1					
ANR	5379805	CompoundStatement		16:23:356:356	5379720	1					
ANR	5379806	ExpressionStatement	StarterPid = 0	155:3:3289:3303	5379720	0	True				
ANR	5379807	AssignmentExpression	StarterPid = 0		5379720	0		=			
ANR	5379808	Identifier	StarterPid		5379720	0					
ANR	5379809	PrimaryExpression	0		5379720	1					
ANR	5379810	ReturnStatement	return ;	156:3:3308:3314	5379720	1	True				
ANR	5379811	ExpressionStatement	"fprintf ( stderr , ""Can't send signal %d to process %d"" , sig , StarterPid )"	158:2:3322:3394	5379720	1	True				
ANR	5379812	CallExpression	"fprintf ( stderr , ""Can't send signal %d to process %d"" , sig , StarterPid )"		5379720	0					
ANR	5379813	Callee	fprintf		5379720	0					
ANR	5379814	Identifier	fprintf		5379720	0					
ANR	5379815	ArgumentList	stderr		5379720	1					
ANR	5379816	Argument	stderr		5379720	0					
ANR	5379817	Identifier	stderr		5379720	0					
ANR	5379818	Argument	"""Can't send signal %d to process %d"""		5379720	1					
ANR	5379819	PrimaryExpression	"""Can't send signal %d to process %d"""		5379720	0					
ANR	5379820	Argument	sig		5379720	2					
ANR	5379821	Identifier	sig		5379720	0					
ANR	5379822	Argument	StarterPid		5379720	3					
ANR	5379823	Identifier	StarterPid		5379720	0					
ANR	5379824	ExpressionStatement	"perror ( "" "" )"	159:2:3398:3411	5379720	2	True				
ANR	5379825	CallExpression	"perror ( "" "" )"		5379720	0					
ANR	5379826	Callee	perror		5379720	0					
ANR	5379827	Identifier	perror		5379720	0					
ANR	5379828	ArgumentList	""" """		5379720	1					
ANR	5379829	Argument	""" """		5379720	0					
ANR	5379830	PrimaryExpression	""" """		5379720	0					
ANR	5379831	ExpressionStatement	exit ( 1 )	160:2:3415:3424	5379720	3	True				
ANR	5379832	CallExpression	exit ( 1 )		5379720	0					
ANR	5379833	Callee	exit		5379720	0					
ANR	5379834	Identifier	exit		5379720	0					
ANR	5379835	ArgumentList	1		5379720	1					
ANR	5379836	Argument	1		5379720	0					
ANR	5379837	PrimaryExpression	1		5379720	0					
ANR	5379838	ExpressionStatement	"printf ( ""Sent signal %d to process %d\\n"" , sig , StarterPid )"	162:1:3430:3489	5379720	3	True				
ANR	5379839	CallExpression	"printf ( ""Sent signal %d to process %d\\n"" , sig , StarterPid )"		5379720	0					
ANR	5379840	Callee	printf		5379720	0					
ANR	5379841	Identifier	printf		5379720	0					
ANR	5379842	ArgumentList	"""Sent signal %d to process %d\\n"""		5379720	1					
ANR	5379843	Argument	"""Sent signal %d to process %d\\n"""		5379720	0					
ANR	5379844	PrimaryExpression	"""Sent signal %d to process %d\\n"""		5379720	0					
ANR	5379845	Argument	sig		5379720	1					
ANR	5379846	Identifier	sig		5379720	0					
ANR	5379847	Argument	StarterPid		5379720	2					
ANR	5379848	Identifier	StarterPid		5379720	0					
ANR	5379849	ReturnType	void		5379720	1					
ANR	5379850	Identifier	send_sig		5379720	2					
ANR	5379851	ParameterList	int sig		5379720	3					
ANR	5379852	Parameter	int sig	138:10:2917:2923	5379720	0	True				
ANR	5379853	ParameterType	int		5379720	0					
ANR	5379854	Identifier	sig		5379720	1					
ANR	5379855	CFGEntryNode	ENTRY		5379720		True				
ANR	5379856	CFGExitNode	EXIT		5379720		True				
ANR	5379857	Symbol	sig		5379720						
ANR	5379858	Symbol	errno		5379720						
ANR	5379859	Symbol	ESRCH		5379720						
ANR	5379860	Symbol	SIGCONT		5379720						
ANR	5379861	Symbol	kill		5379720						
ANR	5379862	Symbol	StarterPid		5379720						
ANR	5379863	Symbol	stderr		5379720						
ANR	5379864	Function	get_starter_pid	167:0:3544:4437							
ANR	5379865	FunctionDef	get_starter_pid (const char * my_name)		5379864	0					
ANR	5379866	CompoundStatement		169:0:3588:4437	5379864	0					
ANR	5379867	IdentifierDeclStatement	char buf [ 1024 ] ;	170:1:3591:3605	5379864	0	True				
ANR	5379868	IdentifierDecl	buf [ 1024 ]		5379864	0					
ANR	5379869	IdentifierDeclType	char [ 1024 ]		5379864	0					
ANR	5379870	Identifier	buf		5379864	1					
ANR	5379871	PrimaryExpression	1024		5379864	2					
ANR	5379872	IdentifierDeclStatement	FILE * fp ;	171:1:3608:3616	5379864	1	True				
ANR	5379873	IdentifierDecl	* fp		5379864	0					
ANR	5379874	IdentifierDeclType	FILE *		5379864	0					
ANR	5379875	Identifier	fp		5379864	1					
ANR	5379876	IdentifierDeclStatement	char cmd [ 1024 ] ;	172:1:3619:3634	5379864	2	True				
ANR	5379877	IdentifierDecl	cmd [ 1024 ]		5379864	0					
ANR	5379878	IdentifierDeclType	char [ 1024 ]		5379864	0					
ANR	5379879	Identifier	cmd		5379864	1					
ANR	5379880	PrimaryExpression	1024		5379864	2					
ANR	5379881	IdentifierDeclStatement	pid_t answer = 0 ;	173:1:3637:3653	5379864	3	True				
ANR	5379882	IdentifierDecl	answer = 0		5379864	0					
ANR	5379883	IdentifierDeclType	pid_t		5379864	0					
ANR	5379884	Identifier	answer		5379864	1					
ANR	5379885	AssignmentExpression	answer = 0		5379864	2		=			
ANR	5379886	Identifier	answer		5379864	0					
ANR	5379887	PrimaryExpression	0		5379864	1					
ANR	5379888	ExpressionStatement	"sprintf ( cmd , ""ps -ef | egrep %s"" , PROG_NAME )"	176:1:3708:3754	5379864	4	True				
ANR	5379889	CallExpression	"sprintf ( cmd , ""ps -ef | egrep %s"" , PROG_NAME )"		5379864	0					
ANR	5379890	Callee	sprintf		5379864	0					
ANR	5379891	Identifier	sprintf		5379864	0					
ANR	5379892	ArgumentList	cmd		5379864	1					
ANR	5379893	Argument	cmd		5379864	0					
ANR	5379894	Identifier	cmd		5379864	0					
ANR	5379895	Argument	"""ps -ef | egrep %s"""		5379864	1					
ANR	5379896	PrimaryExpression	"""ps -ef | egrep %s"""		5379864	0					
ANR	5379897	Argument	PROG_NAME		5379864	2					
ANR	5379898	Identifier	PROG_NAME		5379864	0					
ANR	5379899	IfStatement	"if ( ( fp = popen ( cmd , ""r"" ) ) == NULL )"		5379864	5					
ANR	5379900	Condition	"( fp = popen ( cmd , ""r"" ) ) == NULL"	181:5:3824:3850	5379864	0	True				
ANR	5379901	EqualityExpression	"( fp = popen ( cmd , ""r"" ) ) == NULL"		5379864	0		==			
ANR	5379902	AssignmentExpression	"fp = popen ( cmd , ""r"" )"		5379864	0		=			
ANR	5379903	Identifier	fp		5379864	0					
ANR	5379904	CallExpression	"popen ( cmd , ""r"" )"		5379864	1					
ANR	5379905	Callee	popen		5379864	0					
ANR	5379906	Identifier	popen		5379864	0					
ANR	5379907	ArgumentList	cmd		5379864	1					
ANR	5379908	Argument	cmd		5379864	0					
ANR	5379909	Identifier	cmd		5379864	0					
ANR	5379910	Argument	"""r"""		5379864	1					
ANR	5379911	PrimaryExpression	"""r"""		5379864	0					
ANR	5379912	Identifier	NULL		5379864	1					
ANR	5379913	CompoundStatement		13:35:265:265	5379864	1					
ANR	5379914	ExpressionStatement	"fprintf ( stderr , ""Can't execute \\""%s\\""\\n"" , cmd )"	182:2:3858:3906	5379864	0	True				
ANR	5379915	CallExpression	"fprintf ( stderr , ""Can't execute \\""%s\\""\\n"" , cmd )"		5379864	0					
ANR	5379916	Callee	fprintf		5379864	0					
ANR	5379917	Identifier	fprintf		5379864	0					
ANR	5379918	ArgumentList	stderr		5379864	1					
ANR	5379919	Argument	stderr		5379864	0					
ANR	5379920	Identifier	stderr		5379864	0					
ANR	5379921	Argument	"""Can't execute \\""%s\\""\\n"""		5379864	1					
ANR	5379922	PrimaryExpression	"""Can't execute \\""%s\\""\\n"""		5379864	0					
ANR	5379923	Argument	cmd		5379864	2					
ANR	5379924	Identifier	cmd		5379864	0					
ANR	5379925	ExpressionStatement	exit ( 1 )	183:2:3910:3919	5379864	1	True				
ANR	5379926	CallExpression	exit ( 1 )		5379864	0					
ANR	5379927	Callee	exit		5379864	0					
ANR	5379928	Identifier	exit		5379864	0					
ANR	5379929	ArgumentList	1		5379864	1					
ANR	5379930	Argument	1		5379864	0					
ANR	5379931	PrimaryExpression	1		5379864	0					
ANR	5379932	WhileStatement	"while ( fgets ( buf , sizeof ( buf ) , fp ) )"		5379864	6					
ANR	5379933	Condition	"fgets ( buf , sizeof ( buf ) , fp )"	185:8:3932:3956	5379864	0	True				
ANR	5379934	CallExpression	"fgets ( buf , sizeof ( buf ) , fp )"		5379864	0					
ANR	5379935	Callee	fgets		5379864	0					
ANR	5379936	Identifier	fgets		5379864	0					
ANR	5379937	ArgumentList	buf		5379864	1					
ANR	5379938	Argument	buf		5379864	0					
ANR	5379939	Identifier	buf		5379864	0					
ANR	5379940	Argument	sizeof ( buf )		5379864	1					
ANR	5379941	SizeofExpression	sizeof ( buf )		5379864	0					
ANR	5379942	Sizeof	sizeof		5379864	0					
ANR	5379943	SizeofOperand	buf		5379864	1					
ANR	5379944	Argument	fp		5379864	2					
ANR	5379945	Identifier	fp		5379864	0					
ANR	5379946	CompoundStatement		17:36:371:371	5379864	1					
ANR	5379947	IfStatement	"if ( contains ( buf , ""egrep"" ) )"		5379864	0					
ANR	5379948	Condition	"contains ( buf , ""egrep"" )"	186:6:3968:3988	5379864	0	True				
ANR	5379949	CallExpression	"contains ( buf , ""egrep"" )"		5379864	0					
ANR	5379950	Callee	contains		5379864	0					
ANR	5379951	Identifier	contains		5379864	0					
ANR	5379952	ArgumentList	buf		5379864	1					
ANR	5379953	Argument	buf		5379864	0					
ANR	5379954	Identifier	buf		5379864	0					
ANR	5379955	Argument	"""egrep"""		5379864	1					
ANR	5379956	PrimaryExpression	"""egrep"""		5379864	0					
ANR	5379957	CompoundStatement		18:30:403:403	5379864	1					
ANR	5379958	ContinueStatement	continue ;	187:3:3997:4005	5379864	0	True				
ANR	5379959	IfStatement	"if ( contains ( buf , my_name ) )"		5379864	1					
ANR	5379960	Condition	"contains ( buf , my_name )"	189:6:4017:4037	5379864	0	True				
ANR	5379961	CallExpression	"contains ( buf , my_name )"		5379864	0					
ANR	5379962	Callee	contains		5379864	0					
ANR	5379963	Identifier	contains		5379864	0					
ANR	5379964	ArgumentList	buf		5379864	1					
ANR	5379965	Argument	buf		5379864	0					
ANR	5379966	Identifier	buf		5379864	0					
ANR	5379967	Argument	my_name		5379864	1					
ANR	5379968	Identifier	my_name		5379864	0					
ANR	5379969	CompoundStatement		21:30:452:452	5379864	1					
ANR	5379970	ContinueStatement	continue ;	190:3:4046:4054	5379864	0	True				
ANR	5379971	IfStatement	"if ( contains ( buf , PROG_NAME ) )"		5379864	2					
ANR	5379972	Condition	"contains ( buf , PROG_NAME )"	192:6:4066:4088	5379864	0	True				
ANR	5379973	CallExpression	"contains ( buf , PROG_NAME )"		5379864	0					
ANR	5379974	Callee	contains		5379864	0					
ANR	5379975	Identifier	contains		5379864	0					
ANR	5379976	ArgumentList	buf		5379864	1					
ANR	5379977	Argument	buf		5379864	0					
ANR	5379978	Identifier	buf		5379864	0					
ANR	5379979	Argument	PROG_NAME		5379864	1					
ANR	5379980	Identifier	PROG_NAME		5379864	0					
ANR	5379981	CompoundStatement		24:32:503:503	5379864	1					
ANR	5379982	IfStatement	if ( answer )		5379864	0					
ANR	5379983	Condition	answer	193:7:4101:4106	5379864	0	True				
ANR	5379984	Identifier	answer		5379864	0					
ANR	5379985	CompoundStatement		25:16:521:521	5379864	1					
ANR	5379986	ExpressionStatement	"fprintf ( stderr , ""Multiple processes named \\""%s\\"" exist\\n"" , PROG_NAME )"	194:4:4116:4196	5379864	0	True				
ANR	5379987	CallExpression	"fprintf ( stderr , ""Multiple processes named \\""%s\\"" exist\\n"" , PROG_NAME )"		5379864	0					
ANR	5379988	Callee	fprintf		5379864	0					
ANR	5379989	Identifier	fprintf		5379864	0					
ANR	5379990	ArgumentList	stderr		5379864	1					
ANR	5379991	Argument	stderr		5379864	0					
ANR	5379992	Identifier	stderr		5379864	0					
ANR	5379993	Argument	"""Multiple processes named \\""%s\\"" exist\\n"""		5379864	1					
ANR	5379994	PrimaryExpression	"""Multiple processes named \\""%s\\"" exist\\n"""		5379864	0					
ANR	5379995	Argument	PROG_NAME		5379864	2					
ANR	5379996	Identifier	PROG_NAME		5379864	0					
ANR	5379997	ExpressionStatement	exit ( 1 )	197:4:4202:4211	5379864	1	True				
ANR	5379998	CallExpression	exit ( 1 )		5379864	0					
ANR	5379999	Callee	exit		5379864	0					
ANR	5380000	Identifier	exit		5379864	0					
ANR	5380001	ArgumentList	1		5379864	1					
ANR	5380002	Argument	1		5379864	0					
ANR	5380003	PrimaryExpression	1		5379864	0					
ANR	5380004	ExpressionStatement	answer = get_pid ( buf )	199:3:4221:4242	5379864	1	True				
ANR	5380005	AssignmentExpression	answer = get_pid ( buf )		5379864	0		=			
ANR	5380006	Identifier	answer		5379864	0					
ANR	5380007	CallExpression	get_pid ( buf )		5379864	1					
ANR	5380008	Callee	get_pid		5379864	0					
ANR	5380009	Identifier	get_pid		5379864	0					
ANR	5380010	ArgumentList	buf		5379864	1					
ANR	5380011	Argument	buf		5379864	0					
ANR	5380012	Identifier	buf		5379864	0					
ANR	5380013	ExpressionStatement	( void ) pclose ( fp )	202:1:4252:4270	5379864	7	True				
ANR	5380014	CastExpression	( void ) pclose ( fp )		5379864	0					
ANR	5380015	CastTarget	void		5379864	0					
ANR	5380016	CallExpression	pclose ( fp )		5379864	1					
ANR	5380017	Callee	pclose		5379864	0					
ANR	5380018	Identifier	pclose		5379864	0					
ANR	5380019	ArgumentList	fp		5379864	1					
ANR	5380020	Argument	fp		5379864	0					
ANR	5380021	Identifier	fp		5379864	0					
ANR	5380022	IfStatement	if ( answer )		5379864	8					
ANR	5380023	Condition	answer	203:5:4277:4282	5379864	0	True				
ANR	5380024	Identifier	answer		5379864	0					
ANR	5380025	CompoundStatement		35:14:697:697	5379864	1					
ANR	5380026	ExpressionStatement	"printf ( ""Process \\""%s\\"" PID is %d\\n"" , PROG_NAME , answer )"	204:2:4290:4347	5379864	0	True				
ANR	5380027	CallExpression	"printf ( ""Process \\""%s\\"" PID is %d\\n"" , PROG_NAME , answer )"		5379864	0					
ANR	5380028	Callee	printf		5379864	0					
ANR	5380029	Identifier	printf		5379864	0					
ANR	5380030	ArgumentList	"""Process \\""%s\\"" PID is %d\\n"""		5379864	1					
ANR	5380031	Argument	"""Process \\""%s\\"" PID is %d\\n"""		5379864	0					
ANR	5380032	PrimaryExpression	"""Process \\""%s\\"" PID is %d\\n"""		5379864	0					
ANR	5380033	Argument	PROG_NAME		5379864	1					
ANR	5380034	Identifier	PROG_NAME		5379864	0					
ANR	5380035	Argument	answer		5379864	2					
ANR	5380036	Identifier	answer		5379864	0					
ANR	5380037	ReturnStatement	return answer ;	205:2:4351:4364	5379864	1	True				
ANR	5380038	Identifier	answer		5379864	0					
ANR	5380039	ElseStatement	else		5379864	0					
ANR	5380040	CompoundStatement		38:8:785:785	5379864	0					
ANR	5380041	ExpressionStatement	"printf ( ""Can't find \\""%s\\""\\n"" , PROG_NAME )"	207:2:4378:4420	5379864	0	True				
ANR	5380042	CallExpression	"printf ( ""Can't find \\""%s\\""\\n"" , PROG_NAME )"		5379864	0					
ANR	5380043	Callee	printf		5379864	0					
ANR	5380044	Identifier	printf		5379864	0					
ANR	5380045	ArgumentList	"""Can't find \\""%s\\""\\n"""		5379864	1					
ANR	5380046	Argument	"""Can't find \\""%s\\""\\n"""		5379864	0					
ANR	5380047	PrimaryExpression	"""Can't find \\""%s\\""\\n"""		5379864	0					
ANR	5380048	Argument	PROG_NAME		5379864	1					
ANR	5380049	Identifier	PROG_NAME		5379864	0					
ANR	5380050	ReturnStatement	return 0 ;	208:2:4424:4432	5379864	1	True				
ANR	5380051	PrimaryExpression	0		5379864	0					
ANR	5380052	ReturnType	pid_t		5379864	1					
ANR	5380053	Identifier	get_starter_pid		5379864	2					
ANR	5380054	ParameterList	const char * my_name		5379864	3					
ANR	5380055	Parameter	const char * my_name	168:17:3567:3585	5379864	0	True				
ANR	5380056	ParameterType	const char *		5379864	0					
ANR	5380057	Identifier	my_name		5379864	1					
ANR	5380058	CFGEntryNode	ENTRY		5379864		True				
ANR	5380059	CFGExitNode	EXIT		5379864		True				
ANR	5380060	Symbol	my_name		5379864						
ANR	5380061	Symbol	buf		5379864						
ANR	5380062	Symbol	contains		5379864						
ANR	5380063	Symbol	NULL		5379864						
ANR	5380064	Symbol	answer		5379864						
ANR	5380065	Symbol	popen		5379864						
ANR	5380066	Symbol	PROG_NAME		5379864						
ANR	5380067	Symbol	get_pid		5379864						
ANR	5380068	Symbol	fp		5379864						
ANR	5380069	Symbol	cmd		5379864						
ANR	5380070	Symbol	stderr		5379864						
ANR	5380071	Symbol	fgets		5379864						
ANR	5380072	Function	check_starter	212:0:4440:4676							
ANR	5380073	FunctionDef	check_starter ()		5380072	0					
ANR	5380074	CompoundStatement		214:0:4461:4676	5380072	0					
ANR	5380075	IfStatement	"if ( kill ( StarterPid , 0 ) < 0 )"		5380072	0					
ANR	5380076	Condition	"kill ( StarterPid , 0 ) < 0"	215:5:4468:4489	5380072	0	True				
ANR	5380077	RelationalExpression	"kill ( StarterPid , 0 ) < 0"		5380072	0		<			
ANR	5380078	CallExpression	"kill ( StarterPid , 0 )"		5380072	0					
ANR	5380079	Callee	kill		5380072	0					
ANR	5380080	Identifier	kill		5380072	0					
ANR	5380081	ArgumentList	StarterPid		5380072	1					
ANR	5380082	Argument	StarterPid		5380072	0					
ANR	5380083	Identifier	StarterPid		5380072	0					
ANR	5380084	Argument	0		5380072	1					
ANR	5380085	PrimaryExpression	0		5380072	0					
ANR	5380086	PrimaryExpression	0		5380072	1					
ANR	5380087	CompoundStatement		2:30:31:31	5380072	1					
ANR	5380088	IfStatement	if ( errno == ESRCH )		5380072	0					
ANR	5380089	Condition	errno == ESRCH	216:6:4501:4514	5380072	0	True				
ANR	5380090	EqualityExpression	errno == ESRCH		5380072	0		==			
ANR	5380091	Identifier	errno		5380072	0					
ANR	5380092	Identifier	ESRCH		5380072	1					
ANR	5380093	CompoundStatement		3:23:56:56	5380072	1					
ANR	5380094	ExpressionStatement	"printf ( ""Starter %d exited\\n"" , StarterPid )"	217:3:4523:4566	5380072	0	True				
ANR	5380095	CallExpression	"printf ( ""Starter %d exited\\n"" , StarterPid )"		5380072	0					
ANR	5380096	Callee	printf		5380072	0					
ANR	5380097	Identifier	printf		5380072	0					
ANR	5380098	ArgumentList	"""Starter %d exited\\n"""		5380072	1					
ANR	5380099	Argument	"""Starter %d exited\\n"""		5380072	0					
ANR	5380100	PrimaryExpression	"""Starter %d exited\\n"""		5380072	0					
ANR	5380101	Argument	StarterPid		5380072	1					
ANR	5380102	Identifier	StarterPid		5380072	0					
ANR	5380103	ExpressionStatement	exit ( 0 )	218:3:4571:4580	5380072	1	True				
ANR	5380104	CallExpression	exit ( 0 )		5380072	0					
ANR	5380105	Callee	exit		5380072	0					
ANR	5380106	Identifier	exit		5380072	0					
ANR	5380107	ArgumentList	0		5380072	1					
ANR	5380108	Argument	0		5380072	0					
ANR	5380109	PrimaryExpression	0		5380072	0					
ANR	5380110	ElseStatement	else		5380072	0					
ANR	5380111	CompoundStatement		6:9:129:129	5380072	0					
ANR	5380112	ExpressionStatement	"printf ( ""Can't send signal to starter %d\\n"" , StarterPid )"	220:3:4596:4653	5380072	0	True				
ANR	5380113	CallExpression	"printf ( ""Can't send signal to starter %d\\n"" , StarterPid )"		5380072	0					
ANR	5380114	Callee	printf		5380072	0					
ANR	5380115	Identifier	printf		5380072	0					
ANR	5380116	ArgumentList	"""Can't send signal to starter %d\\n"""		5380072	1					
ANR	5380117	Argument	"""Can't send signal to starter %d\\n"""		5380072	0					
ANR	5380118	PrimaryExpression	"""Can't send signal to starter %d\\n"""		5380072	0					
ANR	5380119	Argument	StarterPid		5380072	1					
ANR	5380120	Identifier	StarterPid		5380072	0					
ANR	5380121	ExpressionStatement	exit ( 1 )	221:3:4658:4667	5380072	1	True				
ANR	5380122	CallExpression	exit ( 1 )		5380072	0					
ANR	5380123	Callee	exit		5380072	0					
ANR	5380124	Identifier	exit		5380072	0					
ANR	5380125	ArgumentList	1		5380072	1					
ANR	5380126	Argument	1		5380072	0					
ANR	5380127	PrimaryExpression	1		5380072	0					
ANR	5380128	ReturnType	void		5380072	1					
ANR	5380129	Identifier	check_starter		5380072	2					
ANR	5380130	ParameterList			5380072	3					
ANR	5380131	CFGEntryNode	ENTRY		5380072		True				
ANR	5380132	CFGExitNode	EXIT		5380072		True				
ANR	5380133	Symbol	errno		5380072						
ANR	5380134	Symbol	ESRCH		5380072						
ANR	5380135	Symbol	kill		5380072						
ANR	5380136	Symbol	StarterPid		5380072						
ANR	5380137	Function	contains	229:0:4755:4960							
ANR	5380138	FunctionDef	"contains (const char * str , const char * targ)"		5380137	0					
ANR	5380139	CompoundStatement		231:0:4805:4960	5380137	0					
ANR	5380140	IdentifierDeclStatement	int len = strlen ( targ ) ;	232:1:4808:4833	5380137	0	True				
ANR	5380141	IdentifierDecl	len = strlen ( targ )		5380137	0					
ANR	5380142	IdentifierDeclType	int		5380137	0					
ANR	5380143	Identifier	len		5380137	1					
ANR	5380144	AssignmentExpression	len = strlen ( targ )		5380137	2		=			
ANR	5380145	Identifier	len		5380137	0					
ANR	5380146	CallExpression	strlen ( targ )		5380137	1					
ANR	5380147	Callee	strlen		5380137	0					
ANR	5380148	Identifier	strlen		5380137	0					
ANR	5380149	ArgumentList	targ		5380137	1					
ANR	5380150	Argument	targ		5380137	0					
ANR	5380151	Identifier	targ		5380137	0					
ANR	5380152	IdentifierDeclStatement	const char * ptr ;	233:1:4836:4851	5380137	1	True				
ANR	5380153	IdentifierDecl	* ptr		5380137	0					
ANR	5380154	IdentifierDeclType	const char *		5380137	0					
ANR	5380155	Identifier	ptr		5380137	1					
ANR	5380156	ForStatement	for ( ptr = str ; * ptr ; ptr ++ )		5380137	2					
ANR	5380157	ForInit	ptr = str ;	235:6:4860:4867	5380137	0	True				
ANR	5380158	AssignmentExpression	ptr = str		5380137	0		=			
ANR	5380159	Identifier	ptr		5380137	0					
ANR	5380160	Identifier	str		5380137	1					
ANR	5380161	Condition	* ptr	235:15:4869:4872	5380137	1	True				
ANR	5380162	UnaryOperationExpression	* ptr		5380137	0					
ANR	5380163	UnaryOperator	*		5380137	0					
ANR	5380164	Identifier	ptr		5380137	1					
ANR	5380165	PostIncDecOperationExpression	ptr ++	235:21:4875:4879	5380137	2	True				
ANR	5380166	Identifier	ptr		5380137	0					
ANR	5380167	IncDec	++		5380137	1					
ANR	5380168	CompoundStatement		5:29:77:77	5380137	3					
ANR	5380169	IfStatement	"if ( strncmp ( ptr , targ , len ) == 0 )"		5380137	0					
ANR	5380170	Condition	"strncmp ( ptr , targ , len ) == 0"	236:6:4891:4916	5380137	0	True				
ANR	5380171	EqualityExpression	"strncmp ( ptr , targ , len ) == 0"		5380137	0		==			
ANR	5380172	CallExpression	"strncmp ( ptr , targ , len )"		5380137	0					
ANR	5380173	Callee	strncmp		5380137	0					
ANR	5380174	Identifier	strncmp		5380137	0					
ANR	5380175	ArgumentList	ptr		5380137	1					
ANR	5380176	Argument	ptr		5380137	0					
ANR	5380177	Identifier	ptr		5380137	0					
ANR	5380178	Argument	targ		5380137	1					
ANR	5380179	Identifier	targ		5380137	0					
ANR	5380180	Argument	len		5380137	2					
ANR	5380181	Identifier	len		5380137	0					
ANR	5380182	PrimaryExpression	0		5380137	1					
ANR	5380183	CompoundStatement		6:35:114:114	5380137	1					
ANR	5380184	ReturnStatement	return TRUE ;	237:3:4925:4936	5380137	0	True				
ANR	5380185	Identifier	TRUE		5380137	0					
ANR	5380186	ReturnStatement	return FALSE ;	240:1:4946:4958	5380137	3	True				
ANR	5380187	Identifier	FALSE		5380137	0					
ANR	5380188	ReturnType	int		5380137	1					
ANR	5380189	Identifier	contains		5380137	2					
ANR	5380190	ParameterList	"const char * str , const char * targ"		5380137	3					
ANR	5380191	Parameter	const char * str	230:10:4769:4783	5380137	0	True				
ANR	5380192	ParameterType	const char *		5380137	0					
ANR	5380193	Identifier	str		5380137	1					
ANR	5380194	Parameter	const char * targ	230:27:4786:4801	5380137	1	True				
ANR	5380195	ParameterType	const char *		5380137	0					
ANR	5380196	Identifier	targ		5380137	1					
ANR	5380197	CFGEntryNode	ENTRY		5380137		True				
ANR	5380198	CFGExitNode	EXIT		5380137		True				
ANR	5380199	Symbol	str		5380137						
ANR	5380200	Symbol	strlen		5380137						
ANR	5380201	Symbol	strncmp		5380137						
ANR	5380202	Symbol	targ		5380137						
ANR	5380203	Symbol	len		5380137						
ANR	5380204	Symbol	* ptr		5380137						
ANR	5380205	Symbol	TRUE		5380137						
ANR	5380206	Symbol	FALSE		5380137						
ANR	5380207	Symbol	ptr		5380137						
ANR	5380208	Function	get_pid	243:0:4963:5111							
ANR	5380209	FunctionDef	get_pid (const char * str)		5380208	0					
ANR	5380210	CompoundStatement		245:0:4996:5111	5380208	0					
ANR	5380211	IdentifierDeclStatement	const char * ptr ;	246:1:4999:5014	5380208	0	True				
ANR	5380212	IdentifierDecl	* ptr		5380208	0					
ANR	5380213	IdentifierDeclType	const char *		5380208	0					
ANR	5380214	Identifier	ptr		5380208	1					
ANR	5380215	ForStatement	for ( ptr = str ; * ptr ; ptr ++ )		5380208	1					
ANR	5380216	ForInit	ptr = str ;	248:6:5023:5030	5380208	0	True				
ANR	5380217	AssignmentExpression	ptr = str		5380208	0		=			
ANR	5380218	Identifier	ptr		5380208	0					
ANR	5380219	Identifier	str		5380208	1					
ANR	5380220	Condition	* ptr	248:15:5032:5035	5380208	1	True				
ANR	5380221	UnaryOperationExpression	* ptr		5380208	0					
ANR	5380222	UnaryOperator	*		5380208	0					
ANR	5380223	Identifier	ptr		5380208	1					
ANR	5380224	PostIncDecOperationExpression	ptr ++	248:21:5038:5042	5380208	2	True				
ANR	5380225	Identifier	ptr		5380208	0					
ANR	5380226	IncDec	++		5380208	1					
ANR	5380227	CompoundStatement		4:29:49:49	5380208	3					
ANR	5380228	IfStatement	if ( isdigit ( * ptr ) )		5380208	0					
ANR	5380229	Condition	isdigit ( * ptr )	249:6:5054:5066	5380208	0	True				
ANR	5380230	CallExpression	isdigit ( * ptr )		5380208	0					
ANR	5380231	Callee	isdigit		5380208	0					
ANR	5380232	Identifier	isdigit		5380208	0					
ANR	5380233	ArgumentList	* ptr		5380208	1					
ANR	5380234	Argument	* ptr		5380208	0					
ANR	5380235	UnaryOperationExpression	* ptr		5380208	0					
ANR	5380236	UnaryOperator	*		5380208	0					
ANR	5380237	Identifier	ptr		5380208	1					
ANR	5380238	CompoundStatement		5:22:73:73	5380208	1					
ANR	5380239	ReturnStatement	return atoi ( ptr ) ;	250:3:5075:5091	5380208	0	True				
ANR	5380240	CallExpression	atoi ( ptr )		5380208	0					
ANR	5380241	Callee	atoi		5380208	0					
ANR	5380242	Identifier	atoi		5380208	0					
ANR	5380243	ArgumentList	ptr		5380208	1					
ANR	5380244	Argument	ptr		5380208	0					
ANR	5380245	Identifier	ptr		5380208	0					
ANR	5380246	ReturnStatement	return 0 ;	253:1:5101:5109	5380208	2	True				
ANR	5380247	PrimaryExpression	0		5380208	0					
ANR	5380248	ReturnType	pid_t		5380208	1					
ANR	5380249	Identifier	get_pid		5380208	2					
ANR	5380250	ParameterList	const char * str		5380208	3					
ANR	5380251	Parameter	const char * str	244:9:4978:4992	5380208	0	True				
ANR	5380252	ParameterType	const char *		5380208	0					
ANR	5380253	Identifier	str		5380208	1					
ANR	5380254	CFGEntryNode	ENTRY		5380208		True				
ANR	5380255	CFGExitNode	EXIT		5380208		True				
ANR	5380256	Symbol	str		5380208						
ANR	5380257	Symbol	atoi		5380208						
ANR	5380258	Symbol	* ptr		5380208						
ANR	5380259	Symbol	isdigit		5380208						
ANR	5380260	Symbol	ptr		5380208						
