command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5259023	File	data/converged/CVE-2011-4930_htcondor/store_cred_main.cpp								
ANR	5259024	ClassDef	StoreCredOptions	37:0:1136:1302							
ANR	5259025	DeclStmt									
ANR	5259026	Decl							int	int	mode
ANR	5259027	DeclStmt									
ANR	5259028	Decl							char	char [ MAX_PASSWORD_LENGTH + 1 ]	pw
ANR	5259029	DeclStmt									
ANR	5259030	Decl							char	char [ MAX_PASSWORD_LENGTH + 1 ]	username
ANR	5259031	DeclStmt									
ANR	5259032	Decl							char	char *	daemonname
ANR	5259033	DeclStmt									
ANR	5259034	Decl							char	char *	password_file
ANR	5259035	DeclStmt									
ANR	5259036	Decl							bool	bool	help
ANR	5259037	DeclStmt									
ANR	5259038	Decl							const char	const char *	MyName
ANR	5259039	DeclStmt									
ANR	5259040	Decl							void	void ( void )	usage
ANR	5259041	DeclStmt									
ANR	5259042	Decl							bool	"bool ( StoreCredOptions * opts , int argc , char * argv [ ] )"	parseCommandLine
ANR	5259043	DeclStmt									
ANR	5259044	Decl							void	void ( const char * option )	badOption
ANR	5259045	DeclStmt									
ANR	5259046	Decl							void	void ( const char * command )	badCommand
ANR	5259047	DeclStmt									
ANR	5259048	Decl							void	void ( const char * option )	optionNeedsArg
ANR	5259049	DeclStmt									
ANR	5259050	Decl							bool	bool ( )	goAheadAnyways
ANR	5259051	Function	main	54:0:1554:7606							
ANR	5259052	FunctionDef	"main (int argc , char * argv [ ])"		5259051	0					
ANR	5259053	CompoundStatement		54:33:1587:7606	5259051	0					
ANR	5259054	IdentifierDeclStatement	MyString my_full_name ;	56:1:1592:1613	5259051	0	True				
ANR	5259055	IdentifierDecl	my_full_name		5259051	0					
ANR	5259056	IdentifierDeclType	MyString		5259051	0					
ANR	5259057	Identifier	my_full_name		5259051	1					
ANR	5259058	IdentifierDeclStatement	const char * full_name ;	57:1:1616:1637	5259051	1	True				
ANR	5259059	IdentifierDecl	* full_name		5259051	0					
ANR	5259060	IdentifierDeclType	const char *		5259051	0					
ANR	5259061	Identifier	full_name		5259051	1					
ANR	5259062	IdentifierDeclStatement	char * pw = NULL ;	58:1:1640:1655	5259051	2	True				
ANR	5259063	IdentifierDecl	* pw = NULL		5259051	0					
ANR	5259064	IdentifierDeclType	char *		5259051	0					
ANR	5259065	Identifier	pw		5259051	1					
ANR	5259066	AssignmentExpression	* pw = NULL		5259051	2		=			
ANR	5259067	Identifier	NULL		5259051	0					
ANR	5259068	Identifier	NULL		5259051	1					
ANR	5259069	IdentifierDeclStatement	struct StoreCredOptions options ;	59:1:1658:1689	5259051	3	True				
ANR	5259070	IdentifierDecl	options		5259051	0					
ANR	5259071	IdentifierDeclType	struct StoreCredOptions		5259051	0					
ANR	5259072	Identifier	options		5259051	1					
ANR	5259073	IdentifierDeclStatement	int result = FAILURE_ABORTED ;	60:1:1692:1720	5259051	4	True				
ANR	5259074	IdentifierDecl	result = FAILURE_ABORTED		5259051	0					
ANR	5259075	IdentifierDeclType	int		5259051	0					
ANR	5259076	Identifier	result		5259051	1					
ANR	5259077	AssignmentExpression	result = FAILURE_ABORTED		5259051	2		=			
ANR	5259078	Identifier	FAILURE_ABORTED		5259051	0					
ANR	5259079	Identifier	FAILURE_ABORTED		5259051	1					
ANR	5259080	IdentifierDeclStatement	bool pool_password_arg = false ;	61:1:1723:1753	5259051	5	True				
ANR	5259081	IdentifierDecl	pool_password_arg = false		5259051	0					
ANR	5259082	IdentifierDeclType	bool		5259051	0					
ANR	5259083	Identifier	pool_password_arg		5259051	1					
ANR	5259084	AssignmentExpression	pool_password_arg = false		5259051	2		=			
ANR	5259085	Identifier	false		5259051	0					
ANR	5259086	Identifier	false		5259051	1					
ANR	5259087	IdentifierDeclStatement	bool pool_password_delete = false ;	62:1:1756:1789	5259051	6	True				
ANR	5259088	IdentifierDecl	pool_password_delete = false		5259051	0					
ANR	5259089	IdentifierDeclType	bool		5259051	0					
ANR	5259090	Identifier	pool_password_delete		5259051	1					
ANR	5259091	AssignmentExpression	pool_password_delete = false		5259051	2		=			
ANR	5259092	Identifier	false		5259051	0					
ANR	5259093	Identifier	false		5259051	1					
ANR	5259094	IdentifierDeclStatement	Daemon * daemon = NULL ;	63:1:1792:1813	5259051	7	True				
ANR	5259095	IdentifierDecl	* daemon = NULL		5259051	0					
ANR	5259096	IdentifierDeclType	Daemon *		5259051	0					
ANR	5259097	Identifier	daemon		5259051	1					
ANR	5259098	AssignmentExpression	* daemon = NULL		5259051	2		=			
ANR	5259099	Identifier	NULL		5259051	0					
ANR	5259100	Identifier	NULL		5259051	1					
ANR	5259101	IdentifierDeclStatement	char * credd_host ;	64:1:1816:1832	5259051	8	True				
ANR	5259102	IdentifierDecl	* credd_host		5259051	0					
ANR	5259103	IdentifierDeclType	char *		5259051	0					
ANR	5259104	Identifier	credd_host		5259051	1					
ANR	5259105	ExpressionStatement	MyName = condor_basename ( argv [ 0 ] )	66:1:1836:1869	5259051	9	True				
ANR	5259106	AssignmentExpression	MyName = condor_basename ( argv [ 0 ] )		5259051	0		=			
ANR	5259107	Identifier	MyName		5259051	0					
ANR	5259108	CallExpression	condor_basename ( argv [ 0 ] )		5259051	1					
ANR	5259109	Callee	condor_basename		5259051	0					
ANR	5259110	Identifier	condor_basename		5259051	0					
ANR	5259111	ArgumentList	argv [ 0 ]		5259051	1					
ANR	5259112	Argument	argv [ 0 ]		5259051	0					
ANR	5259113	ArrayIndexing	argv [ 0 ]		5259051	0					
ANR	5259114	Identifier	argv		5259051	0					
ANR	5259115	PrimaryExpression	0		5259051	1					
ANR	5259116	ExpressionStatement	"myDistro -> Init ( argc , argv )"	69:1:1905:1933	5259051	10	True				
ANR	5259117	CallExpression	"myDistro -> Init ( argc , argv )"		5259051	0					
ANR	5259118	Callee	myDistro -> Init		5259051	0					
ANR	5259119	PtrMemberAccess	myDistro -> Init		5259051	0					
ANR	5259120	Identifier	myDistro		5259051	0					
ANR	5259121	Identifier	Init		5259051	1					
ANR	5259122	ArgumentList	argc		5259051	1					
ANR	5259123	Argument	argc		5259051	0					
ANR	5259124	Identifier	argc		5259051	0					
ANR	5259125	Argument	argv		5259051	1					
ANR	5259126	Identifier	argv		5259051	0					
ANR	5259127	ExpressionStatement	config ( )	70:1:1936:1944	5259051	11	True				
ANR	5259128	CallExpression	config ( )		5259051	0					
ANR	5259129	Callee	config		5259051	0					
ANR	5259130	Identifier	config		5259051	0					
ANR	5259131	ArgumentList			5259051	1					
ANR	5259132	IfStatement	"if ( ! parseCommandLine ( & options , argc , argv ) )"		5259051	12					
ANR	5259133	Condition	"! parseCommandLine ( & options , argc , argv )"	72:5:1952:1990	5259051	0	True				
ANR	5259134	UnaryOperationExpression	"! parseCommandLine ( & options , argc , argv )"		5259051	0					
ANR	5259135	UnaryOperator	!		5259051	0					
ANR	5259136	CallExpression	"parseCommandLine ( & options , argc , argv )"		5259051	1					
ANR	5259137	Callee	parseCommandLine		5259051	0					
ANR	5259138	Identifier	parseCommandLine		5259051	0					
ANR	5259139	ArgumentList	& options		5259051	1					
ANR	5259140	Argument	& options		5259051	0					
ANR	5259141	UnaryOperationExpression	& options		5259051	0					
ANR	5259142	UnaryOperator	&		5259051	0					
ANR	5259143	Identifier	options		5259051	1					
ANR	5259144	Argument	argc		5259051	1					
ANR	5259145	Identifier	argc		5259051	0					
ANR	5259146	Argument	argv		5259051	2					
ANR	5259147	Identifier	argv		5259051	0					
ANR	5259148	CompoundStatement		19:46:405:405	5259051	1					
ANR	5259149	GotoStatement	goto cleanup ;	73:2:1997:2009	5259051	0	True				
ANR	5259150	Identifier	cleanup		5259051	0					
ANR	5259151	IfStatement	if ( options . help || ( options . mode == 0 ) )		5259051	13					
ANR	5259152	Condition	options . help || ( options . mode == 0 )	77:5:2058:2092	5259051	0	True				
ANR	5259153	OrExpression	options . help || ( options . mode == 0 )		5259051	0		||			
ANR	5259154	MemberAccess	options . help		5259051	0					
ANR	5259155	Identifier	options		5259051	0					
ANR	5259156	Identifier	help		5259051	1					
ANR	5259157	EqualityExpression	options . mode == 0		5259051	1		==			
ANR	5259158	MemberAccess	options . mode		5259051	0					
ANR	5259159	Identifier	options		5259051	0					
ANR	5259160	Identifier	mode		5259051	1					
ANR	5259161	PrimaryExpression	0		5259051	1					
ANR	5259162	CompoundStatement		24:42:507:507	5259051	1					
ANR	5259163	ExpressionStatement	usage ( )	78:2:2099:2106	5259051	0	True				
ANR	5259164	CallExpression	usage ( )		5259051	0					
ANR	5259165	Callee	usage		5259051	0					
ANR	5259166	Identifier	usage		5259051	0					
ANR	5259167	ArgumentList			5259051	1					
ANR	5259168	GotoStatement	goto cleanup ;	79:2:2110:2122	5259051	1	True				
ANR	5259169	Identifier	cleanup		5259051	0					
ANR	5259170	IfStatement	if ( options . password_file != NULL )		5259051	14					
ANR	5259171	Condition	options . password_file != NULL	86:5:2285:2313	5259051	0	True				
ANR	5259172	EqualityExpression	options . password_file != NULL		5259051	0		!=			
ANR	5259173	MemberAccess	options . password_file		5259051	0					
ANR	5259174	Identifier	options		5259051	0					
ANR	5259175	Identifier	password_file		5259051	1					
ANR	5259176	Identifier	NULL		5259051	1					
ANR	5259177	CompoundStatement		33:36:728:728	5259051	1					
ANR	5259178	IfStatement	if ( options . pw [ 0 ] == '\\0' )		5259051	0					
ANR	5259179	Condition	options . pw [ 0 ] == '\\0'	87:6:2324:2344	5259051	0	True				
ANR	5259180	EqualityExpression	options . pw [ 0 ] == '\\0'		5259051	0		==			
ANR	5259181	ArrayIndexing	options . pw [ 0 ]		5259051	0					
ANR	5259182	MemberAccess	options . pw		5259051	0					
ANR	5259183	Identifier	options		5259051	0					
ANR	5259184	Identifier	pw		5259051	1					
ANR	5259185	PrimaryExpression	0		5259051	1					
ANR	5259186	PrimaryExpression	'\\0'		5259051	1					
ANR	5259187	CompoundStatement		34:29:759:759	5259051	1					
ANR	5259188	ExpressionStatement	pw = get_password ( )	88:3:2352:2371	5259051	0	True				
ANR	5259189	AssignmentExpression	pw = get_password ( )		5259051	0		=			
ANR	5259190	Identifier	pw		5259051	0					
ANR	5259191	CallExpression	get_password ( )		5259051	1					
ANR	5259192	Callee	get_password		5259051	0					
ANR	5259193	Identifier	get_password		5259051	0					
ANR	5259194	ArgumentList			5259051	1					
ANR	5259195	ExpressionStatement	"printf ( ""\\n"" )"	89:3:2376:2388	5259051	1	True				
ANR	5259196	CallExpression	"printf ( ""\\n"" )"		5259051	0					
ANR	5259197	Callee	printf		5259051	0					
ANR	5259198	Identifier	printf		5259051	0					
ANR	5259199	ArgumentList	"""\\n"""		5259051	1					
ANR	5259200	Argument	"""\\n"""		5259051	0					
ANR	5259201	PrimaryExpression	"""\\n"""		5259051	0					
ANR	5259202	ElseStatement	else		5259051	0					
ANR	5259203	CompoundStatement		38:7:813:813	5259051	0					
ANR	5259204	ExpressionStatement	pw = strnewp ( options . pw )	92:3:2406:2430	5259051	0	True				
ANR	5259205	AssignmentExpression	pw = strnewp ( options . pw )		5259051	0		=			
ANR	5259206	Identifier	pw		5259051	0					
ANR	5259207	CallExpression	strnewp ( options . pw )		5259051	1					
ANR	5259208	Callee	strnewp		5259051	0					
ANR	5259209	Identifier	strnewp		5259051	0					
ANR	5259210	ArgumentList	options . pw		5259051	1					
ANR	5259211	Argument	options . pw		5259051	0					
ANR	5259212	MemberAccess	options . pw		5259051	0					
ANR	5259213	Identifier	options		5259051	0					
ANR	5259214	Identifier	pw		5259051	1					
ANR	5259215	ExpressionStatement	"SecureZeroMemory ( options . pw , MAX_PASSWORD_LENGTH + 1 )"	93:3:2435:2488	5259051	1	True				
ANR	5259216	CallExpression	"SecureZeroMemory ( options . pw , MAX_PASSWORD_LENGTH + 1 )"		5259051	0					
ANR	5259217	Callee	SecureZeroMemory		5259051	0					
ANR	5259218	Identifier	SecureZeroMemory		5259051	0					
ANR	5259219	ArgumentList	options . pw		5259051	1					
ANR	5259220	Argument	options . pw		5259051	0					
ANR	5259221	MemberAccess	options . pw		5259051	0					
ANR	5259222	Identifier	options		5259051	0					
ANR	5259223	Identifier	pw		5259051	1					
ANR	5259224	Argument	MAX_PASSWORD_LENGTH + 1		5259051	1					
ANR	5259225	AdditiveExpression	MAX_PASSWORD_LENGTH + 1		5259051	0		+			
ANR	5259226	Identifier	MAX_PASSWORD_LENGTH		5259051	0					
ANR	5259227	PrimaryExpression	1		5259051	1					
ANR	5259228	ExpressionStatement	"result = write_password_file ( options . password_file , pw )"	95:2:2496:2551	5259051	1	True				
ANR	5259229	AssignmentExpression	"result = write_password_file ( options . password_file , pw )"		5259051	0		=			
ANR	5259230	Identifier	result		5259051	0					
ANR	5259231	CallExpression	"write_password_file ( options . password_file , pw )"		5259051	1					
ANR	5259232	Callee	write_password_file		5259051	0					
ANR	5259233	Identifier	write_password_file		5259051	0					
ANR	5259234	ArgumentList	options . password_file		5259051	1					
ANR	5259235	Argument	options . password_file		5259051	0					
ANR	5259236	MemberAccess	options . password_file		5259051	0					
ANR	5259237	Identifier	options		5259051	0					
ANR	5259238	Identifier	password_file		5259051	1					
ANR	5259239	Argument	pw		5259051	1					
ANR	5259240	Identifier	pw		5259051	0					
ANR	5259241	ExpressionStatement	"SecureZeroMemory ( pw , strlen ( pw ) )"	96:2:2555:2587	5259051	2	True				
ANR	5259242	CallExpression	"SecureZeroMemory ( pw , strlen ( pw ) )"		5259051	0					
ANR	5259243	Callee	SecureZeroMemory		5259051	0					
ANR	5259244	Identifier	SecureZeroMemory		5259051	0					
ANR	5259245	ArgumentList	pw		5259051	1					
ANR	5259246	Argument	pw		5259051	0					
ANR	5259247	Identifier	pw		5259051	0					
ANR	5259248	Argument	strlen ( pw )		5259051	1					
ANR	5259249	CallExpression	strlen ( pw )		5259051	0					
ANR	5259250	Callee	strlen		5259051	0					
ANR	5259251	Identifier	strlen		5259051	0					
ANR	5259252	ArgumentList	pw		5259051	1					
ANR	5259253	Argument	pw		5259051	0					
ANR	5259254	Identifier	pw		5259051	0					
ANR	5259255	IfStatement	if ( result != SUCCESS )		5259051	3					
ANR	5259256	Condition	result != SUCCESS	97:6:2595:2611	5259051	0	True				
ANR	5259257	EqualityExpression	result != SUCCESS		5259051	0		!=			
ANR	5259258	Identifier	result		5259051	0					
ANR	5259259	Identifier	SUCCESS		5259051	1					
ANR	5259260	CompoundStatement		44:25:1026:1026	5259051	1					
ANR	5259261	ExpressionStatement	"fprintf ( stderr , ""error writing password file: %s\\n"" , options . password_file )"	98:3:2619:2716	5259051	0	True				
ANR	5259262	CallExpression	"fprintf ( stderr , ""error writing password file: %s\\n"" , options . password_file )"		5259051	0					
ANR	5259263	Callee	fprintf		5259051	0					
ANR	5259264	Identifier	fprintf		5259051	0					
ANR	5259265	ArgumentList	stderr		5259051	1					
ANR	5259266	Argument	stderr		5259051	0					
ANR	5259267	Identifier	stderr		5259051	0					
ANR	5259268	Argument	"""error writing password file: %s\\n"""		5259051	1					
ANR	5259269	PrimaryExpression	"""error writing password file: %s\\n"""		5259051	0					
ANR	5259270	Argument	options . password_file		5259051	2					
ANR	5259271	MemberAccess	options . password_file		5259051	0					
ANR	5259272	Identifier	options		5259051	0					
ANR	5259273	Identifier	password_file		5259051	1					
ANR	5259274	GotoStatement	goto cleanup ;	102:2:2724:2736	5259051	4	True				
ANR	5259275	Identifier	cleanup		5259051	0					
ANR	5259276	IfStatement	"if ( strcmp ( options . username , """" ) == 0 )"		5259051	15					
ANR	5259277	Condition	"strcmp ( options . username , """" ) == 0"	107:6:2789:2821	5259051	0	True				
ANR	5259278	EqualityExpression	"strcmp ( options . username , """" ) == 0"		5259051	0		==			
ANR	5259279	CallExpression	"strcmp ( options . username , """" )"		5259051	0					
ANR	5259280	Callee	strcmp		5259051	0					
ANR	5259281	Identifier	strcmp		5259051	0					
ANR	5259282	ArgumentList	options . username		5259051	1					
ANR	5259283	Argument	options . username		5259051	0					
ANR	5259284	MemberAccess	options . username		5259051	0					
ANR	5259285	Identifier	options		5259051	0					
ANR	5259286	Identifier	username		5259051	1					
ANR	5259287	Argument	""""""		5259051	1					
ANR	5259288	PrimaryExpression	""""""		5259051	0					
ANR	5259289	PrimaryExpression	0		5259051	1					
ANR	5259290	CompoundStatement		57:2:1316:1349	5259051	1					
ANR	5259291	IdentifierDeclStatement	char * my_name = my_username ( ) ;	109:2:2870:2899	5259051	0	True				
ANR	5259292	IdentifierDecl	* my_name = my_username ( )		5259051	0					
ANR	5259293	IdentifierDeclType	char *		5259051	0					
ANR	5259294	Identifier	my_name		5259051	1					
ANR	5259295	AssignmentExpression	* my_name = my_username ( )		5259051	2		=			
ANR	5259296	Identifier	my_name		5259051	0					
ANR	5259297	CallExpression	my_username ( )		5259051	1					
ANR	5259298	Callee	my_username		5259051	0					
ANR	5259299	Identifier	my_username		5259051	0					
ANR	5259300	ArgumentList			5259051	1					
ANR	5259301	IdentifierDeclStatement	char * my_domain = my_domainname ( ) ;	110:2:2904:2937	5259051	1	True				
ANR	5259302	IdentifierDecl	* my_domain = my_domainname ( )		5259051	0					
ANR	5259303	IdentifierDeclType	char *		5259051	0					
ANR	5259304	Identifier	my_domain		5259051	1					
ANR	5259305	AssignmentExpression	* my_domain = my_domainname ( )		5259051	2		=			
ANR	5259306	Identifier	my_domain		5259051	0					
ANR	5259307	CallExpression	my_domainname ( )		5259051	1					
ANR	5259308	Callee	my_domainname		5259051	0					
ANR	5259309	Identifier	my_domainname		5259051	0					
ANR	5259310	ArgumentList			5259051	1					
ANR	5259311	ExpressionStatement	"my_full_name . sprintf ( ""%s@%s"" , my_name , my_domain )"	112:2:2942:2991	5259051	2	True				
ANR	5259312	CallExpression	"my_full_name . sprintf ( ""%s@%s"" , my_name , my_domain )"		5259051	0					
ANR	5259313	Callee	my_full_name . sprintf		5259051	0					
ANR	5259314	MemberAccess	my_full_name . sprintf		5259051	0					
ANR	5259315	Identifier	my_full_name		5259051	0					
ANR	5259316	Identifier	sprintf		5259051	1					
ANR	5259317	ArgumentList	"""%s@%s"""		5259051	1					
ANR	5259318	Argument	"""%s@%s"""		5259051	0					
ANR	5259319	PrimaryExpression	"""%s@%s"""		5259051	0					
ANR	5259320	Argument	my_name		5259051	1					
ANR	5259321	Identifier	my_name		5259051	0					
ANR	5259322	Argument	my_domain		5259051	2					
ANR	5259323	Identifier	my_domain		5259051	0					
ANR	5259324	IfStatement	if ( my_name )		5259051	3					
ANR	5259325	Condition	my_name	113:7:3000:3006	5259051	0	True				
ANR	5259326	Identifier	my_name		5259051	0					
ANR	5259327	CompoundStatement		60:16:1421:1421	5259051	1					
ANR	5259328	ExpressionStatement	free ( my_name )	113:18:3011:3024	5259051	0	True				
ANR	5259329	CallExpression	free ( my_name )		5259051	0					
ANR	5259330	Callee	free		5259051	0					
ANR	5259331	Identifier	free		5259051	0					
ANR	5259332	ArgumentList	my_name		5259051	1					
ANR	5259333	Argument	my_name		5259051	0					
ANR	5259334	Identifier	my_name		5259051	0					
ANR	5259335	IfStatement	if ( my_domain )		5259051	4					
ANR	5259336	Condition	my_domain	114:7:3035:3043	5259051	0	True				
ANR	5259337	Identifier	my_domain		5259051	0					
ANR	5259338	CompoundStatement		61:18:1458:1458	5259051	1					
ANR	5259339	ExpressionStatement	free ( my_domain )	114:20:3048:3063	5259051	0	True				
ANR	5259340	CallExpression	free ( my_domain )		5259051	0					
ANR	5259341	Callee	free		5259051	0					
ANR	5259342	Identifier	free		5259051	0					
ANR	5259343	ArgumentList	my_domain		5259051	1					
ANR	5259344	Argument	my_domain		5259051	0					
ANR	5259345	Identifier	my_domain		5259051	0					
ANR	5259346	ExpressionStatement	my_name = my_domain = NULL	115:2:3069:3095	5259051	5	True				
ANR	5259347	AssignmentExpression	my_name = my_domain = NULL		5259051	0		=			
ANR	5259348	Identifier	my_name		5259051	0					
ANR	5259349	AssignmentExpression	my_domain = NULL		5259051	1		=			
ANR	5259350	Identifier	my_domain		5259051	0					
ANR	5259351	Identifier	NULL		5259051	1					
ANR	5259352	ElseStatement	else		5259051	0					
ANR	5259353	IfStatement	"if ( strcmp ( options . username , POOL_PASSWORD_USERNAME ) == 0 )"		5259051	0					
ANR	5259354	Condition	"strcmp ( options . username , POOL_PASSWORD_USERNAME ) == 0"	116:12:3109:3161	5259051	0	True				
ANR	5259355	EqualityExpression	"strcmp ( options . username , POOL_PASSWORD_USERNAME ) == 0"		5259051	0		==			
ANR	5259356	CallExpression	"strcmp ( options . username , POOL_PASSWORD_USERNAME )"		5259051	0					
ANR	5259357	Callee	strcmp		5259051	0					
ANR	5259358	Identifier	strcmp		5259051	0					
ANR	5259359	ArgumentList	options . username		5259051	1					
ANR	5259360	Argument	options . username		5259051	0					
ANR	5259361	MemberAccess	options . username		5259051	0					
ANR	5259362	Identifier	options		5259051	0					
ANR	5259363	Identifier	username		5259051	1					
ANR	5259364	Argument	POOL_PASSWORD_USERNAME		5259051	1					
ANR	5259365	Identifier	POOL_PASSWORD_USERNAME		5259051	0					
ANR	5259366	PrimaryExpression	0		5259051	1					
ANR	5259367	CompoundStatement		76:2:2025:2037	5259051	1					
ANR	5259368	IfStatement	if ( options . mode == QUERY_MODE )		5259051	0					
ANR	5259369	Condition	options . mode == QUERY_MODE	121:6:3332:3357	5259051	0	True				
ANR	5259370	EqualityExpression	options . mode == QUERY_MODE		5259051	0		==			
ANR	5259371	MemberAccess	options . mode		5259051	0					
ANR	5259372	Identifier	options		5259051	0					
ANR	5259373	Identifier	mode		5259051	1					
ANR	5259374	Identifier	QUERY_MODE		5259051	1					
ANR	5259375	CompoundStatement		68:34:1772:1772	5259051	1					
ANR	5259376	ExpressionStatement	"fprintf ( stderr , ""Querying the pool password is not supported.\\n"" )"	122:3:3365:3430	5259051	0	True				
ANR	5259377	CallExpression	"fprintf ( stderr , ""Querying the pool password is not supported.\\n"" )"		5259051	0					
ANR	5259378	Callee	fprintf		5259051	0					
ANR	5259379	Identifier	fprintf		5259051	0					
ANR	5259380	ArgumentList	stderr		5259051	1					
ANR	5259381	Argument	stderr		5259051	0					
ANR	5259382	Identifier	stderr		5259051	0					
ANR	5259383	Argument	"""Querying the pool password is not supported.\\n"""		5259051	1					
ANR	5259384	PrimaryExpression	"""Querying the pool password is not supported.\\n"""		5259051	0					
ANR	5259385	GotoStatement	goto cleanup ;	123:3:3435:3447	5259051	1	True				
ANR	5259386	Identifier	cleanup		5259051	0					
ANR	5259387	ExpressionStatement	pool_password_arg = true	128:2:3585:3609	5259051	1	True				
ANR	5259388	AssignmentExpression	pool_password_arg = true		5259051	0		=			
ANR	5259389	Identifier	pool_password_arg		5259051	0					
ANR	5259390	Identifier	true		5259051	1					
ANR	5259391	IdentifierDeclStatement	char * domain ;	129:2:3613:3625	5259051	2	True				
ANR	5259392	IdentifierDecl	* domain		5259051	0					
ANR	5259393	IdentifierDeclType	char *		5259051	0					
ANR	5259394	Identifier	domain		5259051	1					
ANR	5259395	IfStatement	"if ( ( domain = param ( ""SEC_PASSWORD_DOMAIN"" ) ) == NULL )"		5259051	3					
ANR	5259396	Condition	"( domain = param ( ""SEC_PASSWORD_DOMAIN"" ) ) == NULL"	130:6:3633:3679	5259051	0	True				
ANR	5259397	EqualityExpression	"( domain = param ( ""SEC_PASSWORD_DOMAIN"" ) ) == NULL"		5259051	0		==			
ANR	5259398	AssignmentExpression	"domain = param ( ""SEC_PASSWORD_DOMAIN"" )"		5259051	0		=			
ANR	5259399	Identifier	domain		5259051	0					
ANR	5259400	CallExpression	"param ( ""SEC_PASSWORD_DOMAIN"" )"		5259051	1					
ANR	5259401	Callee	param		5259051	0					
ANR	5259402	Identifier	param		5259051	0					
ANR	5259403	ArgumentList	"""SEC_PASSWORD_DOMAIN"""		5259051	1					
ANR	5259404	Argument	"""SEC_PASSWORD_DOMAIN"""		5259051	0					
ANR	5259405	PrimaryExpression	"""SEC_PASSWORD_DOMAIN"""		5259051	0					
ANR	5259406	Identifier	NULL		5259051	1					
ANR	5259407	CompoundStatement		77:55:2094:2094	5259051	1					
ANR	5259408	IfStatement	"if ( ( domain = param ( ""UID_DOMAIN"" ) ) == NULL )"		5259051	0					
ANR	5259409	Condition	"( domain = param ( ""UID_DOMAIN"" ) ) == NULL"	131:7:3691:3728	5259051	0	True				
ANR	5259410	EqualityExpression	"( domain = param ( ""UID_DOMAIN"" ) ) == NULL"		5259051	0		==			
ANR	5259411	AssignmentExpression	"domain = param ( ""UID_DOMAIN"" )"		5259051	0		=			
ANR	5259412	Identifier	domain		5259051	0					
ANR	5259413	CallExpression	"param ( ""UID_DOMAIN"" )"		5259051	1					
ANR	5259414	Callee	param		5259051	0					
ANR	5259415	Identifier	param		5259051	0					
ANR	5259416	ArgumentList	"""UID_DOMAIN"""		5259051	1					
ANR	5259417	Argument	"""UID_DOMAIN"""		5259051	0					
ANR	5259418	PrimaryExpression	"""UID_DOMAIN"""		5259051	0					
ANR	5259419	Identifier	NULL		5259051	1					
ANR	5259420	CompoundStatement		78:47:2143:2143	5259051	1					
ANR	5259421	ExpressionStatement	"fprintf ( stderr , ""ERROR: could not domain for pool password\\n"" )"	132:4:3737:3799	5259051	0	True				
ANR	5259422	CallExpression	"fprintf ( stderr , ""ERROR: could not domain for pool password\\n"" )"		5259051	0					
ANR	5259423	Callee	fprintf		5259051	0					
ANR	5259424	Identifier	fprintf		5259051	0					
ANR	5259425	ArgumentList	stderr		5259051	1					
ANR	5259426	Argument	stderr		5259051	0					
ANR	5259427	Identifier	stderr		5259051	0					
ANR	5259428	Argument	"""ERROR: could not domain for pool password\\n"""		5259051	1					
ANR	5259429	PrimaryExpression	"""ERROR: could not domain for pool password\\n"""		5259051	0					
ANR	5259430	GotoStatement	goto cleanup ;	133:4:3805:3817	5259051	1	True				
ANR	5259431	Identifier	cleanup		5259051	0					
ANR	5259432	Statement	my_full_name	136:2:3830:3841	5259051	4	True				
ANR	5259433	Statement	.	136:14:3842:3842	5259051	5	True				
ANR	5259434	Statement	sprintf	136:15:3843:3849	5259051	6	True				
ANR	5259435	Statement	(	136:22:3850:3850	5259051	7	True				
ANR	5259436	Statement	POOL_PASSWORD_USERNAME	136:23:3851:3872	5259051	8	True				
ANR	5259437	Statement	"""@%s"""	136:46:3874:3878	5259051	9	True				
ANR	5259438	Statement	","	136:51:3879:3879	5259051	10	True				
ANR	5259439	Statement	domain	136:53:3881:3886	5259051	11	True				
ANR	5259440	Statement	)	136:59:3887:3887	5259051	12	True				
ANR	5259441	ExpressionStatement		136:60:3888:3888	5259051	13	True				
ANR	5259442	ExpressionStatement	free ( domain )	137:2:3892:3904	5259051	14	True				
ANR	5259443	CallExpression	free ( domain )		5259051	0					
ANR	5259444	Callee	free		5259051	0					
ANR	5259445	Identifier	free		5259051	0					
ANR	5259446	ArgumentList	domain		5259051	1					
ANR	5259447	Argument	domain		5259051	0					
ANR	5259448	Identifier	domain		5259051	0					
ANR	5259449	ElseStatement	else		5259051	0					
ANR	5259450	CompoundStatement		85:8:2326:2326	5259051	0					
ANR	5259451	ExpressionStatement	my_full_name += options . username	140:2:3967:3999	5259051	0	True				
ANR	5259452	AssignmentExpression	my_full_name += options . username		5259051	0		+=			
ANR	5259453	Identifier	my_full_name		5259051	0					
ANR	5259454	MemberAccess	options . username		5259051	1					
ANR	5259455	Identifier	options		5259051	0					
ANR	5259456	Identifier	username		5259051	1					
ANR	5259457	ExpressionStatement	full_name = my_full_name . Value ( )	142:1:4005:4037	5259051	16	True				
ANR	5259458	AssignmentExpression	full_name = my_full_name . Value ( )		5259051	0		=			
ANR	5259459	Identifier	full_name		5259051	0					
ANR	5259460	CallExpression	my_full_name . Value ( )		5259051	1					
ANR	5259461	Callee	my_full_name . Value		5259051	0					
ANR	5259462	MemberAccess	my_full_name . Value		5259051	0					
ANR	5259463	Identifier	my_full_name		5259051	0					
ANR	5259464	Identifier	Value		5259051	1					
ANR	5259465	ArgumentList			5259051	1					
ANR	5259466	ExpressionStatement	"printf ( ""Account: %s\\n\\n"" , full_name )"	143:1:4040:4076	5259051	17	True				
ANR	5259467	CallExpression	"printf ( ""Account: %s\\n\\n"" , full_name )"		5259051	0					
ANR	5259468	Callee	printf		5259051	0					
ANR	5259469	Identifier	printf		5259051	0					
ANR	5259470	ArgumentList	"""Account: %s\\n\\n"""		5259051	1					
ANR	5259471	Argument	"""Account: %s\\n\\n"""		5259051	0					
ANR	5259472	PrimaryExpression	"""Account: %s\\n\\n"""		5259051	0					
ANR	5259473	Argument	full_name		5259051	1					
ANR	5259474	Identifier	full_name		5259051	0					
ANR	5259475	ExpressionStatement	daemon = NULL	146:1:4122:4135	5259051	18	True				
ANR	5259476	AssignmentExpression	daemon = NULL		5259051	0		=			
ANR	5259477	Identifier	daemon		5259051	0					
ANR	5259478	Identifier	NULL		5259051	1					
ANR	5259479	ExpressionStatement	credd_host = NULL	147:1:4138:4155	5259051	19	True				
ANR	5259480	AssignmentExpression	credd_host = NULL		5259051	0		=			
ANR	5259481	Identifier	credd_host		5259051	0					
ANR	5259482	Identifier	NULL		5259051	1					
ANR	5259483	IfStatement	if ( options . daemonname != NULL )		5259051	20					
ANR	5259484	Condition	options . daemonname != NULL	148:5:4162:4187	5259051	0	True				
ANR	5259485	EqualityExpression	options . daemonname != NULL		5259051	0		!=			
ANR	5259486	MemberAccess	options . daemonname		5259051	0					
ANR	5259487	Identifier	options		5259051	0					
ANR	5259488	Identifier	daemonname		5259051	1					
ANR	5259489	Identifier	NULL		5259051	1					
ANR	5259490	CompoundStatement		95:33:2602:2602	5259051	1					
ANR	5259491	IfStatement	if ( pool_password_arg && ( options . mode != QUERY_MODE ) )		5259051	0					
ANR	5259492	Condition	pool_password_arg && ( options . mode != QUERY_MODE )	149:6:4198:4246	5259051	0	True				
ANR	5259493	AndExpression	pool_password_arg && ( options . mode != QUERY_MODE )		5259051	0		&&			
ANR	5259494	Identifier	pool_password_arg		5259051	0					
ANR	5259495	EqualityExpression	options . mode != QUERY_MODE		5259051	1		!=			
ANR	5259496	MemberAccess	options . mode		5259051	0					
ANR	5259497	Identifier	options		5259051	0					
ANR	5259498	Identifier	mode		5259051	1					
ANR	5259499	Identifier	QUERY_MODE		5259051	1					
ANR	5259500	CompoundStatement		96:57:2661:2661	5259051	1					
ANR	5259501	ExpressionStatement	"daemon = new Daemon ( DT_MASTER , options . daemonname )"	152:3:4389:4439	5259051	0	True				
ANR	5259502	AssignmentExpression	"daemon = new Daemon ( DT_MASTER , options . daemonname )"		5259051	0		=			
ANR	5259503	Identifier	daemon		5259051	0					
ANR	5259504	Expression	"DT_MASTER , options . daemonname"		5259051	1					
ANR	5259505	Identifier	DT_MASTER		5259051	0					
ANR	5259506	MemberAccess	options . daemonname		5259051	1					
ANR	5259507	Identifier	options		5259051	0					
ANR	5259508	Identifier	daemonname		5259051	1					
ANR	5259509	ElseStatement	else		5259051	0					
ANR	5259510	CompoundStatement		101:7:2864:2864	5259051	0					
ANR	5259511	ExpressionStatement	"daemon = new Daemon ( DT_SCHEDD , options . daemonname )"	157:3:4592:4642	5259051	0	True				
ANR	5259512	AssignmentExpression	"daemon = new Daemon ( DT_SCHEDD , options . daemonname )"		5259051	0		=			
ANR	5259513	Identifier	daemon		5259051	0					
ANR	5259514	Expression	"DT_SCHEDD , options . daemonname"		5259051	1					
ANR	5259515	Identifier	DT_SCHEDD		5259051	0					
ANR	5259516	MemberAccess	options . daemonname		5259051	1					
ANR	5259517	Identifier	options		5259051	0					
ANR	5259518	Identifier	daemonname		5259051	1					
ANR	5259519	ElseStatement	else		5259051	0					
ANR	5259520	IfStatement	"if ( ! pool_password_arg && ( ( credd_host = param ( ""CREDD_HOST"" ) ) != NULL ) )"		5259051	0					
ANR	5259521	Condition	"! pool_password_arg && ( ( credd_host = param ( ""CREDD_HOST"" ) ) != NULL )"	160:10:4661:4726	5259051	0	True				
ANR	5259522	AndExpression	"! pool_password_arg && ( ( credd_host = param ( ""CREDD_HOST"" ) ) != NULL )"		5259051	0		&&			
ANR	5259523	UnaryOperationExpression	! pool_password_arg		5259051	0					
ANR	5259524	UnaryOperator	!		5259051	0					
ANR	5259525	Identifier	pool_password_arg		5259051	1					
ANR	5259526	EqualityExpression	"( credd_host = param ( ""CREDD_HOST"" ) ) != NULL"		5259051	1		!=			
ANR	5259527	AssignmentExpression	"credd_host = param ( ""CREDD_HOST"" )"		5259051	0		=			
ANR	5259528	Identifier	credd_host		5259051	0					
ANR	5259529	CallExpression	"param ( ""CREDD_HOST"" )"		5259051	1					
ANR	5259530	Callee	param		5259051	0					
ANR	5259531	Identifier	param		5259051	0					
ANR	5259532	ArgumentList	"""CREDD_HOST"""		5259051	1					
ANR	5259533	Argument	"""CREDD_HOST"""		5259051	0					
ANR	5259534	PrimaryExpression	"""CREDD_HOST"""		5259051	0					
ANR	5259535	Identifier	NULL		5259051	1					
ANR	5259536	CompoundStatement		107:78:3141:3141	5259051	1					
ANR	5259537	ExpressionStatement	daemon = new Daemon ( DT_CREDD )	164:2:4909:4938	5259051	0	True				
ANR	5259538	AssignmentExpression	daemon = new Daemon ( DT_CREDD )		5259051	0		=			
ANR	5259539	Identifier	daemon		5259051	0					
ANR	5259540	Identifier	DT_CREDD		5259051	1					
ANR	5259541	ElseStatement	else		5259051	0					
ANR	5259542	CompoundStatement		113:6:3361:3361	5259051	0					
ANR	5259543	IfStatement	if ( pool_password_arg && ( options . mode == DELETE_MODE ) )		5259051	21					
ANR	5259544	Condition	pool_password_arg && ( options . mode == DELETE_MODE )	171:5:5066:5115	5259051	0	True				
ANR	5259545	AndExpression	pool_password_arg && ( options . mode == DELETE_MODE )		5259051	0		&&			
ANR	5259546	Identifier	pool_password_arg		5259051	0					
ANR	5259547	EqualityExpression	options . mode == DELETE_MODE		5259051	1		==			
ANR	5259548	MemberAccess	options . mode		5259051	0					
ANR	5259549	Identifier	options		5259051	0					
ANR	5259550	Identifier	mode		5259051	1					
ANR	5259551	Identifier	DELETE_MODE		5259051	1					
ANR	5259552	CompoundStatement		118:57:3530:3530	5259051	1					
ANR	5259553	ExpressionStatement	pool_password_delete = true	172:2:5122:5149	5259051	0	True				
ANR	5259554	AssignmentExpression	pool_password_delete = true		5259051	0		=			
ANR	5259555	Identifier	pool_password_delete		5259051	0					
ANR	5259556	Identifier	true		5259051	1					
ANR	5259557	SwitchStatement	switch ( options . mode )		5259051	22					
ANR	5259558	Condition	options . mode	175:9:5164:5175	5259051	0	True				
ANR	5259559	MemberAccess	options . mode		5259051	0					
ANR	5259560	Identifier	options		5259051	0					
ANR	5259561	Identifier	mode		5259051	1					
ANR	5259562	CompoundStatement		122:23:3590:3590	5259051	1					
ANR	5259563	Label	case ADD_MODE :	176:2:5182:5195	5259051	0	True				
ANR	5259564	Identifier	ADD_MODE		5259051	0					
ANR	5259565	Label	case DELETE_MODE :	177:2:5199:5215	5259051	1	True				
ANR	5259566	Identifier	DELETE_MODE		5259051	0					
ANR	5259567	IfStatement	if ( ! pool_password_delete )		5259051	2					
ANR	5259568	Condition	! pool_password_delete	178:7:5224:5244	5259051	0	True				
ANR	5259569	UnaryOperationExpression	! pool_password_delete		5259051	0					
ANR	5259570	UnaryOperator	!		5259051	0					
ANR	5259571	Identifier	pool_password_delete		5259051	1					
ANR	5259572	CompoundStatement		125:30:3659:3659	5259051	1					
ANR	5259573	IfStatement	"if ( strcmp ( options . pw , """" ) == 0 )"		5259051	0					
ANR	5259574	Condition	"strcmp ( options . pw , """" ) == 0"	179:9:5258:5284	5259051	0	True				
ANR	5259575	EqualityExpression	"strcmp ( options . pw , """" ) == 0"		5259051	0		==			
ANR	5259576	CallExpression	"strcmp ( options . pw , """" )"		5259051	0					
ANR	5259577	Callee	strcmp		5259051	0					
ANR	5259578	Identifier	strcmp		5259051	0					
ANR	5259579	ArgumentList	options . pw		5259051	1					
ANR	5259580	Argument	options . pw		5259051	0					
ANR	5259581	MemberAccess	options . pw		5259051	0					
ANR	5259582	Identifier	options		5259051	0					
ANR	5259583	Identifier	pw		5259051	1					
ANR	5259584	Argument	""""""		5259051	1					
ANR	5259585	PrimaryExpression	""""""		5259051	0					
ANR	5259586	PrimaryExpression	0		5259051	1					
ANR	5259587	CompoundStatement		126:39:3700:3700	5259051	1					
ANR	5259588	ExpressionStatement	pw = get_password ( )	181:5:5331:5350	5259051	0	True				
ANR	5259589	AssignmentExpression	pw = get_password ( )		5259051	0		=			
ANR	5259590	Identifier	pw		5259051	0					
ANR	5259591	CallExpression	get_password ( )		5259051	1					
ANR	5259592	Callee	get_password		5259051	0					
ANR	5259593	Identifier	get_password		5259051	0					
ANR	5259594	ArgumentList			5259051	1					
ANR	5259595	ExpressionStatement	"printf ( ""\\n\\n"" )"	182:5:5357:5371	5259051	1	True				
ANR	5259596	CallExpression	"printf ( ""\\n\\n"" )"		5259051	0					
ANR	5259597	Callee	printf		5259051	0					
ANR	5259598	Identifier	printf		5259051	0					
ANR	5259599	ArgumentList	"""\\n\\n"""		5259051	1					
ANR	5259600	Argument	"""\\n\\n"""		5259051	0					
ANR	5259601	PrimaryExpression	"""\\n\\n"""		5259051	0					
ANR	5259602	ElseStatement	else		5259051	0					
ANR	5259603	CompoundStatement		130:11:3796:3796	5259051	0					
ANR	5259604	ExpressionStatement	pw = strnewp ( options . pw )	185:5:5437:5461	5259051	0	True				
ANR	5259605	AssignmentExpression	pw = strnewp ( options . pw )		5259051	0		=			
ANR	5259606	Identifier	pw		5259051	0					
ANR	5259607	CallExpression	strnewp ( options . pw )		5259051	1					
ANR	5259608	Callee	strnewp		5259051	0					
ANR	5259609	Identifier	strnewp		5259051	0					
ANR	5259610	ArgumentList	options . pw		5259051	1					
ANR	5259611	Argument	options . pw		5259051	0					
ANR	5259612	MemberAccess	options . pw		5259051	0					
ANR	5259613	Identifier	options		5259051	0					
ANR	5259614	Identifier	pw		5259051	1					
ANR	5259615	ExpressionStatement	"SecureZeroMemory ( options . pw , MAX_PASSWORD_LENGTH )"	186:5:5468:5517	5259051	1	True				
ANR	5259616	CallExpression	"SecureZeroMemory ( options . pw , MAX_PASSWORD_LENGTH )"		5259051	0					
ANR	5259617	Callee	SecureZeroMemory		5259051	0					
ANR	5259618	Identifier	SecureZeroMemory		5259051	0					
ANR	5259619	ArgumentList	options . pw		5259051	1					
ANR	5259620	Argument	options . pw		5259051	0					
ANR	5259621	MemberAccess	options . pw		5259051	0					
ANR	5259622	Identifier	options		5259051	0					
ANR	5259623	Identifier	pw		5259051	1					
ANR	5259624	Argument	MAX_PASSWORD_LENGTH		5259051	1					
ANR	5259625	Identifier	MAX_PASSWORD_LENGTH		5259051	0					
ANR	5259626	IfStatement	if ( pw || pool_password_delete )		5259051	3					
ANR	5259627	Condition	pw || pool_password_delete	189:8:5538:5563	5259051	0	True				
ANR	5259628	OrExpression	pw || pool_password_delete		5259051	0		||			
ANR	5259629	Identifier	pw		5259051	0					
ANR	5259630	Identifier	pool_password_delete		5259051	1					
ANR	5259631	CompoundStatement		136:36:3978:3978	5259051	1					
ANR	5259632	ExpressionStatement	"result = store_cred ( full_name , pw , options . mode , daemon )"	190:4:5572:5628	5259051	0	True				
ANR	5259633	AssignmentExpression	"result = store_cred ( full_name , pw , options . mode , daemon )"		5259051	0		=			
ANR	5259634	Identifier	result		5259051	0					
ANR	5259635	CallExpression	"store_cred ( full_name , pw , options . mode , daemon )"		5259051	1					
ANR	5259636	Callee	store_cred		5259051	0					
ANR	5259637	Identifier	store_cred		5259051	0					
ANR	5259638	ArgumentList	full_name		5259051	1					
ANR	5259639	Argument	full_name		5259051	0					
ANR	5259640	Identifier	full_name		5259051	0					
ANR	5259641	Argument	pw		5259051	1					
ANR	5259642	Identifier	pw		5259051	0					
ANR	5259643	Argument	options . mode		5259051	2					
ANR	5259644	MemberAccess	options . mode		5259051	0					
ANR	5259645	Identifier	options		5259051	0					
ANR	5259646	Identifier	mode		5259051	1					
ANR	5259647	Argument	daemon		5259051	3					
ANR	5259648	Identifier	daemon		5259051	0					
ANR	5259649	IfStatement	if ( ( result == FAILURE_NOT_SECURE ) && goAheadAnyways ( ) )		5259051	1					
ANR	5259650	Condition	( result == FAILURE_NOT_SECURE ) && goAheadAnyways ( )	191:8:5638:5687	5259051	0	True				
ANR	5259651	AndExpression	( result == FAILURE_NOT_SECURE ) && goAheadAnyways ( )		5259051	0		&&			
ANR	5259652	EqualityExpression	result == FAILURE_NOT_SECURE		5259051	0		==			
ANR	5259653	Identifier	result		5259051	0					
ANR	5259654	Identifier	FAILURE_NOT_SECURE		5259051	1					
ANR	5259655	CallExpression	goAheadAnyways ( )		5259051	1					
ANR	5259656	Callee	goAheadAnyways		5259051	0					
ANR	5259657	Identifier	goAheadAnyways		5259051	0					
ANR	5259658	ArgumentList			5259051	1					
ANR	5259659	CompoundStatement		138:60:4102:4102	5259051	1					
ANR	5259660	ExpressionStatement	"result = store_cred ( full_name , pw , options . mode , daemon , true )"	193:5:5760:5822	5259051	0	True				
ANR	5259661	AssignmentExpression	"result = store_cred ( full_name , pw , options . mode , daemon , true )"		5259051	0		=			
ANR	5259662	Identifier	result		5259051	0					
ANR	5259663	CallExpression	"store_cred ( full_name , pw , options . mode , daemon , true )"		5259051	1					
ANR	5259664	Callee	store_cred		5259051	0					
ANR	5259665	Identifier	store_cred		5259051	0					
ANR	5259666	ArgumentList	full_name		5259051	1					
ANR	5259667	Argument	full_name		5259051	0					
ANR	5259668	Identifier	full_name		5259051	0					
ANR	5259669	Argument	pw		5259051	1					
ANR	5259670	Identifier	pw		5259051	0					
ANR	5259671	Argument	options . mode		5259051	2					
ANR	5259672	MemberAccess	options . mode		5259051	0					
ANR	5259673	Identifier	options		5259051	0					
ANR	5259674	Identifier	mode		5259051	1					
ANR	5259675	Argument	daemon		5259051	3					
ANR	5259676	Identifier	daemon		5259051	0					
ANR	5259677	Argument	true		5259051	4					
ANR	5259678	Identifier	true		5259051	0					
ANR	5259679	IfStatement	if ( pw )		5259051	2					
ANR	5259680	Condition	pw	195:8:5838:5839	5259051	0	True				
ANR	5259681	Identifier	pw		5259051	0					
ANR	5259682	CompoundStatement		142:12:4254:4254	5259051	1					
ANR	5259683	ExpressionStatement	"SecureZeroMemory ( pw , strlen ( pw ) )"	196:5:5849:5881	5259051	0	True				
ANR	5259684	CallExpression	"SecureZeroMemory ( pw , strlen ( pw ) )"		5259051	0					
ANR	5259685	Callee	SecureZeroMemory		5259051	0					
ANR	5259686	Identifier	SecureZeroMemory		5259051	0					
ANR	5259687	ArgumentList	pw		5259051	1					
ANR	5259688	Argument	pw		5259051	0					
ANR	5259689	Identifier	pw		5259051	0					
ANR	5259690	Argument	strlen ( pw )		5259051	1					
ANR	5259691	CallExpression	strlen ( pw )		5259051	0					
ANR	5259692	Callee	strlen		5259051	0					
ANR	5259693	Identifier	strlen		5259051	0					
ANR	5259694	ArgumentList	pw		5259051	1					
ANR	5259695	Argument	pw		5259051	0					
ANR	5259696	Identifier	pw		5259051	0					
ANR	5259697	Statement	delete	197:5:5888:5893	5259051	1	True				
ANR	5259698	Statement	[	197:11:5894:5894	5259051	2	True				
ANR	5259699	Statement	]	197:12:5895:5895	5259051	3	True				
ANR	5259700	ExpressionStatement	pw	197:14:5897:5899	5259051	4	True				
ANR	5259701	Identifier	pw		5259051	0					
ANR	5259702	BreakStatement	break ;	200:3:5915:5920	5259051	4	True				
ANR	5259703	Label	case QUERY_MODE :	201:2:5924:5939	5259051	5	True				
ANR	5259704	Identifier	QUERY_MODE		5259051	0					
ANR	5259705	ExpressionStatement	"result = queryCredential ( full_name , daemon )"	202:3:5944:5987	5259051	6	True				
ANR	5259706	AssignmentExpression	"result = queryCredential ( full_name , daemon )"		5259051	0		=			
ANR	5259707	Identifier	result		5259051	0					
ANR	5259708	CallExpression	"queryCredential ( full_name , daemon )"		5259051	1					
ANR	5259709	Callee	queryCredential		5259051	0					
ANR	5259710	Identifier	queryCredential		5259051	0					
ANR	5259711	ArgumentList	full_name		5259051	1					
ANR	5259712	Argument	full_name		5259051	0					
ANR	5259713	Identifier	full_name		5259051	0					
ANR	5259714	Argument	daemon		5259051	1					
ANR	5259715	Identifier	daemon		5259051	0					
ANR	5259716	BreakStatement	break ;	203:3:5992:5997	5259051	7	True				
ANR	5259717	Label	case CONFIG_MODE :	205:2:6020:6036	5259051	8	True				
ANR	5259718	Identifier	CONFIG_MODE		5259051	0					
ANR	5259719	ReturnStatement	return interactive ( ) ;	206:3:6041:6061	5259051	9	True				
ANR	5259720	CallExpression	interactive ( )		5259051	0					
ANR	5259721	Callee	interactive		5259051	0					
ANR	5259722	Identifier	interactive		5259051	0					
ANR	5259723	ArgumentList			5259051	1					
ANR	5259724	BreakStatement	break ;	207:3:6066:6071	5259051	10	True				
ANR	5259725	Label	default :	209:2:6082:6089	5259051	11	True				
ANR	5259726	Identifier	default		5259051	0					
ANR	5259727	ExpressionStatement	"fprintf ( stderr , ""Internal error\\n"" )"	210:3:6094:6129	5259051	12	True				
ANR	5259728	CallExpression	"fprintf ( stderr , ""Internal error\\n"" )"		5259051	0					
ANR	5259729	Callee	fprintf		5259051	0					
ANR	5259730	Identifier	fprintf		5259051	0					
ANR	5259731	ArgumentList	stderr		5259051	1					
ANR	5259732	Argument	stderr		5259051	0					
ANR	5259733	Identifier	stderr		5259051	0					
ANR	5259734	Argument	"""Internal error\\n"""		5259051	1					
ANR	5259735	PrimaryExpression	"""Internal error\\n"""		5259051	0					
ANR	5259736	GotoStatement	goto cleanup ;	211:3:6134:6146	5259051	13	True				
ANR	5259737	Identifier	cleanup		5259051	0					
ANR	5259738	SwitchStatement	switch ( result )		5259051	23					
ANR	5259739	Condition	result	215:9:6192:6197	5259051	0	True				
ANR	5259740	Identifier	result		5259051	0					
ANR	5259741	CompoundStatement		162:17:4612:4612	5259051	1					
ANR	5259742	Label	case SUCCESS :	216:2:6204:6216	5259051	0	True				
ANR	5259743	Identifier	SUCCESS		5259051	0					
ANR	5259744	IfStatement	if ( options . mode == QUERY_MODE )		5259051	1					
ANR	5259745	Condition	options . mode == QUERY_MODE	217:7:6225:6250	5259051	0	True				
ANR	5259746	EqualityExpression	options . mode == QUERY_MODE		5259051	0		==			
ANR	5259747	MemberAccess	options . mode		5259051	0					
ANR	5259748	Identifier	options		5259051	0					
ANR	5259749	Identifier	mode		5259051	1					
ANR	5259750	Identifier	QUERY_MODE		5259051	1					
ANR	5259751	CompoundStatement		164:35:4665:4665	5259051	1					
ANR	5259752	ExpressionStatement	"printf ( ""A credential is stored and is valid.\\n"" )"	218:4:6259:6307	5259051	0	True				
ANR	5259753	CallExpression	"printf ( ""A credential is stored and is valid.\\n"" )"		5259051	0					
ANR	5259754	Callee	printf		5259051	0					
ANR	5259755	Identifier	printf		5259051	0					
ANR	5259756	ArgumentList	"""A credential is stored and is valid.\\n"""		5259051	1					
ANR	5259757	Argument	"""A credential is stored and is valid.\\n"""		5259051	0					
ANR	5259758	PrimaryExpression	"""A credential is stored and is valid.\\n"""		5259051	0					
ANR	5259759	ElseStatement	else		5259051	0					
ANR	5259760	CompoundStatement		167:8:4734:4734	5259051	0					
ANR	5259761	ExpressionStatement	"printf ( ""Operation succeeded.\\n"" )"	221:4:6328:6360	5259051	0	True				
ANR	5259762	CallExpression	"printf ( ""Operation succeeded.\\n"" )"		5259051	0					
ANR	5259763	Callee	printf		5259051	0					
ANR	5259764	Identifier	printf		5259051	0					
ANR	5259765	ArgumentList	"""Operation succeeded.\\n"""		5259051	1					
ANR	5259766	Argument	"""Operation succeeded.\\n"""		5259051	0					
ANR	5259767	PrimaryExpression	"""Operation succeeded.\\n"""		5259051	0					
ANR	5259768	BreakStatement	break ;	223:3:6370:6375	5259051	2	True				
ANR	5259769	Label	case FAILURE :	225:2:6380:6392	5259051	3	True				
ANR	5259770	Identifier	FAILURE		5259051	0					
ANR	5259771	ExpressionStatement	"printf ( ""Operation failed.\\n"" )"	226:3:6397:6426	5259051	4	True				
ANR	5259772	CallExpression	"printf ( ""Operation failed.\\n"" )"		5259051	0					
ANR	5259773	Callee	printf		5259051	0					
ANR	5259774	Identifier	printf		5259051	0					
ANR	5259775	ArgumentList	"""Operation failed.\\n"""		5259051	1					
ANR	5259776	Argument	"""Operation failed.\\n"""		5259051	0					
ANR	5259777	PrimaryExpression	"""Operation failed.\\n"""		5259051	0					
ANR	5259778	IfStatement	if ( pool_password_arg && ( options . mode != QUERY_MODE ) )		5259051	5					
ANR	5259779	Condition	pool_password_arg && ( options . mode != QUERY_MODE )	227:7:6435:6483	5259051	0	True				
ANR	5259780	AndExpression	pool_password_arg && ( options . mode != QUERY_MODE )		5259051	0		&&			
ANR	5259781	Identifier	pool_password_arg		5259051	0					
ANR	5259782	EqualityExpression	options . mode != QUERY_MODE		5259051	1		!=			
ANR	5259783	MemberAccess	options . mode		5259051	0					
ANR	5259784	Identifier	options		5259051	0					
ANR	5259785	Identifier	mode		5259051	1					
ANR	5259786	Identifier	QUERY_MODE		5259051	1					
ANR	5259787	CompoundStatement		174:58:4898:4898	5259051	1					
ANR	5259788	ExpressionStatement	"printf ( ""    Make sure you have CONFIG access to the target Master.\\n"" )"	228:4:6492:6562	5259051	0	True				
ANR	5259789	CallExpression	"printf ( ""    Make sure you have CONFIG access to the target Master.\\n"" )"		5259051	0					
ANR	5259790	Callee	printf		5259051	0					
ANR	5259791	Identifier	printf		5259051	0					
ANR	5259792	ArgumentList	"""    Make sure you have CONFIG access to the target Master.\\n"""		5259051	1					
ANR	5259793	Argument	"""    Make sure you have CONFIG access to the target Master.\\n"""		5259051	0					
ANR	5259794	PrimaryExpression	"""    Make sure you have CONFIG access to the target Master.\\n"""		5259051	0					
ANR	5259795	ElseStatement	else		5259051	0					
ANR	5259796	CompoundStatement		177:8:4989:4989	5259051	0					
ANR	5259797	ExpressionStatement	"printf ( ""    Make sure your ALLOW_WRITE setting includes this host.\\n"" )"	231:4:6583:6653	5259051	0	True				
ANR	5259798	CallExpression	"printf ( ""    Make sure your ALLOW_WRITE setting includes this host.\\n"" )"		5259051	0					
ANR	5259799	Callee	printf		5259051	0					
ANR	5259800	Identifier	printf		5259051	0					
ANR	5259801	ArgumentList	"""    Make sure your ALLOW_WRITE setting includes this host.\\n"""		5259051	1					
ANR	5259802	Argument	"""    Make sure your ALLOW_WRITE setting includes this host.\\n"""		5259051	0					
ANR	5259803	PrimaryExpression	"""    Make sure your ALLOW_WRITE setting includes this host.\\n"""		5259051	0					
ANR	5259804	BreakStatement	break ;	233:3:6663:6668	5259051	6	True				
ANR	5259805	Label	case FAILURE_BAD_PASSWORD :	235:2:6673:6698	5259051	7	True				
ANR	5259806	Identifier	FAILURE_BAD_PASSWORD		5259051	0					
ANR	5259807	IfStatement	if ( options . mode == QUERY_MODE )		5259051	8					
ANR	5259808	Condition	options . mode == QUERY_MODE	236:7:6707:6732	5259051	0	True				
ANR	5259809	EqualityExpression	options . mode == QUERY_MODE		5259051	0		==			
ANR	5259810	MemberAccess	options . mode		5259051	0					
ANR	5259811	Identifier	options		5259051	0					
ANR	5259812	Identifier	mode		5259051	1					
ANR	5259813	Identifier	QUERY_MODE		5259051	1					
ANR	5259814	CompoundStatement		183:35:5147:5147	5259051	1					
ANR	5259815	Statement	printf	237:4:6741:6746	5259051	0	True				
ANR	5259816	Statement	(	237:10:6747:6747	5259051	1	True				
ANR	5259817	Statement	"""A credential is stored, but it is invalid. """	237:11:6748:6792	5259051	2	True				
ANR	5259818	Statement	"""Run 'condor_store_cred add' again.\\n"""	238:11:6805:6842	5259051	3	True				
ANR	5259819	Statement	)	238:49:6843:6843	5259051	4	True				
ANR	5259820	ExpressionStatement		238:50:6844:6844	5259051	5	True				
ANR	5259821	ElseStatement	else		5259051	0					
ANR	5259822	CompoundStatement		187:8:5271:5271	5259051	0					
ANR	5259823	ExpressionStatement	"printf ( ""Operation failed: bad password.\\n"" )"	241:4:6865:6908	5259051	0	True				
ANR	5259824	CallExpression	"printf ( ""Operation failed: bad password.\\n"" )"		5259051	0					
ANR	5259825	Callee	printf		5259051	0					
ANR	5259826	Identifier	printf		5259051	0					
ANR	5259827	ArgumentList	"""Operation failed: bad password.\\n"""		5259051	1					
ANR	5259828	Argument	"""Operation failed: bad password.\\n"""		5259051	0					
ANR	5259829	PrimaryExpression	"""Operation failed: bad password.\\n"""		5259051	0					
ANR	5259830	BreakStatement	break ;	243:3:6918:6923	5259051	9	True				
ANR	5259831	Label	case FAILURE_NOT_FOUND :	245:2:6928:6950	5259051	10	True				
ANR	5259832	Identifier	FAILURE_NOT_FOUND		5259051	0					
ANR	5259833	IfStatement	if ( options . mode == QUERY_MODE )		5259051	11					
ANR	5259834	Condition	options . mode == QUERY_MODE	246:7:6959:6984	5259051	0	True				
ANR	5259835	EqualityExpression	options . mode == QUERY_MODE		5259051	0		==			
ANR	5259836	MemberAccess	options . mode		5259051	0					
ANR	5259837	Identifier	options		5259051	0					
ANR	5259838	Identifier	mode		5259051	1					
ANR	5259839	Identifier	QUERY_MODE		5259051	1					
ANR	5259840	CompoundStatement		193:35:5399:5399	5259051	1					
ANR	5259841	ExpressionStatement	"printf ( ""No credential is stored.\\n"" )"	247:4:6993:7029	5259051	0	True				
ANR	5259842	CallExpression	"printf ( ""No credential is stored.\\n"" )"		5259051	0					
ANR	5259843	Callee	printf		5259051	0					
ANR	5259844	Identifier	printf		5259051	0					
ANR	5259845	ArgumentList	"""No credential is stored.\\n"""		5259051	1					
ANR	5259846	Argument	"""No credential is stored.\\n"""		5259051	0					
ANR	5259847	PrimaryExpression	"""No credential is stored.\\n"""		5259051	0					
ANR	5259848	ElseStatement	else		5259051	0					
ANR	5259849	CompoundStatement		196:8:5456:5456	5259051	0					
ANR	5259850	ExpressionStatement	"printf ( ""Operation failed: username not found.\\n"" )"	250:4:7050:7099	5259051	0	True				
ANR	5259851	CallExpression	"printf ( ""Operation failed: username not found.\\n"" )"		5259051	0					
ANR	5259852	Callee	printf		5259051	0					
ANR	5259853	Identifier	printf		5259051	0					
ANR	5259854	ArgumentList	"""Operation failed: username not found.\\n"""		5259051	1					
ANR	5259855	Argument	"""Operation failed: username not found.\\n"""		5259051	0					
ANR	5259856	PrimaryExpression	"""Operation failed: username not found.\\n"""		5259051	0					
ANR	5259857	BreakStatement	break ;	252:3:7109:7114	5259051	12	True				
ANR	5259858	Label	case FAILURE_NOT_SECURE :	254:2:7119:7142	5259051	13	True				
ANR	5259859	Identifier	FAILURE_NOT_SECURE		5259051	0					
ANR	5259860	Label	case FAILURE_ABORTED :	255:2:7146:7166	5259051	14	True				
ANR	5259861	Identifier	FAILURE_ABORTED		5259051	0					
ANR	5259862	ExpressionStatement	"printf ( ""Operation aborted.\\n"" )"	256:3:7171:7201	5259051	15	True				
ANR	5259863	CallExpression	"printf ( ""Operation aborted.\\n"" )"		5259051	0					
ANR	5259864	Callee	printf		5259051	0					
ANR	5259865	Identifier	printf		5259051	0					
ANR	5259866	ArgumentList	"""Operation aborted.\\n"""		5259051	1					
ANR	5259867	Argument	"""Operation aborted.\\n"""		5259051	0					
ANR	5259868	PrimaryExpression	"""Operation aborted.\\n"""		5259051	0					
ANR	5259869	BreakStatement	break ;	257:3:7206:7211	5259051	16	True				
ANR	5259870	Label	case FAILURE_NOT_SUPPORTED :	259:2:7216:7242	5259051	17	True				
ANR	5259871	Identifier	FAILURE_NOT_SUPPORTED		5259051	0					
ANR	5259872	Statement	printf	260:3:7247:7252	5259051	18	True				
ANR	5259873	Statement	(	260:9:7253:7253	5259051	19	True				
ANR	5259874	Statement	"""Operation failed.\\n"""	260:10:7254:7274	5259051	20	True				
ANR	5259875	Statement	"""    The target daemon is not running as SYSTEM.\\n"""	261:10:7286:7336	5259051	21	True				
ANR	5259876	Statement	)	261:61:7337:7337	5259051	22	True				
ANR	5259877	ExpressionStatement		261:62:7338:7338	5259051	23	True				
ANR	5259878	BreakStatement	break ;	262:3:7343:7348	5259051	24	True				
ANR	5259879	Label	default :	264:2:7353:7360	5259051	25	True				
ANR	5259880	Identifier	default		5259051	0					
ANR	5259881	ExpressionStatement	"fprintf ( stderr , ""Operation failed: unknown error code\\n"" )"	265:3:7365:7422	5259051	26	True				
ANR	5259882	CallExpression	"fprintf ( stderr , ""Operation failed: unknown error code\\n"" )"		5259051	0					
ANR	5259883	Callee	fprintf		5259051	0					
ANR	5259884	Identifier	fprintf		5259051	0					
ANR	5259885	ArgumentList	stderr		5259051	1					
ANR	5259886	Argument	stderr		5259051	0					
ANR	5259887	Identifier	stderr		5259051	0					
ANR	5259888	Argument	"""Operation failed: unknown error code\\n"""		5259051	1					
ANR	5259889	PrimaryExpression	"""Operation failed: unknown error code\\n"""		5259051	0					
ANR	5259890	Label	cleanup :	268:0:7428:7435	5259051	24	True				
ANR	5259891	Identifier	cleanup		5259051	0					
ANR	5259892	IfStatement	if ( options . daemonname )		5259051	25					
ANR	5259893	Condition	options . daemonname	269:5:7445:7462	5259051	0	True				
ANR	5259894	MemberAccess	options . daemonname		5259051	0					
ANR	5259895	Identifier	options		5259051	0					
ANR	5259896	Identifier	daemonname		5259051	1					
ANR	5259897	CompoundStatement		216:25:5877:5877	5259051	1					
ANR	5259898	Statement	delete	270:2:7469:7474	5259051	0	True				
ANR	5259899	Statement	[	270:8:7475:7475	5259051	1	True				
ANR	5259900	Statement	]	270:9:7476:7476	5259051	2	True				
ANR	5259901	ExpressionStatement	options . daemonname	270:11:7478:7496	5259051	3	True				
ANR	5259902	MemberAccess	options . daemonname		5259051	0					
ANR	5259903	Identifier	options		5259051	0					
ANR	5259904	Identifier	daemonname		5259051	1					
ANR	5259905	IfStatement	if ( daemon )		5259051	26					
ANR	5259906	Condition	daemon	272:5:7506:7511	5259051	0	True				
ANR	5259907	Identifier	daemon		5259051	0					
ANR	5259908	CompoundStatement		219:13:5926:5926	5259051	1					
ANR	5259909	Statement	delete	273:2:7518:7523	5259051	0	True				
ANR	5259910	ExpressionStatement	daemon	273:9:7525:7531	5259051	1	True				
ANR	5259911	Identifier	daemon		5259051	0					
ANR	5259912	IfStatement	if ( result == SUCCESS )		5259051	27					
ANR	5259913	Condition	result == SUCCESS	276:6:7544:7560	5259051	0	True				
ANR	5259914	EqualityExpression	result == SUCCESS		5259051	0		==			
ANR	5259915	Identifier	result		5259051	0					
ANR	5259916	Identifier	SUCCESS		5259051	1					
ANR	5259917	CompoundStatement		223:26:5976:5976	5259051	1					
ANR	5259918	ReturnStatement	return 0 ;	277:5:7571:7579	5259051	0	True				
ANR	5259919	PrimaryExpression	0		5259051	0					
ANR	5259920	ElseStatement	else		5259051	0					
ANR	5259921	CompoundStatement		225:8:6001:6001	5259051	0					
ANR	5259922	ReturnStatement	return 1 ;	279:2:7593:7601	5259051	0	True				
ANR	5259923	PrimaryExpression	1		5259051	0					
ANR	5259924	ReturnType	int		5259051	1					
ANR	5259925	Identifier	main		5259051	2					
ANR	5259926	ParameterList	"int argc , char * argv [ ]"		5259051	3					
ANR	5259927	Parameter	int argc	54:9:1563:1570	5259051	0	True				
ANR	5259928	ParameterType	int		5259051	0					
ANR	5259929	Identifier	argc		5259051	1					
ANR	5259930	Parameter	char * argv [ ]	54:19:1573:1584	5259051	1	True				
ANR	5259931	ParameterType	char * [ ]		5259051	0					
ANR	5259932	Identifier	argv		5259051	1					
ANR	5259933	CFGEntryNode	ENTRY		5259051		True				
ANR	5259934	CFGExitNode	EXIT		5259051		True				
ANR	5259935	Symbol	DELETE_MODE		5259051						
ANR	5259936	Symbol	FAILURE_NOT_SECURE		5259051						
ANR	5259937	Symbol	pw		5259051						
ANR	5259938	Symbol	store_cred		5259051						
ANR	5259939	Symbol	interactive		5259051						
ANR	5259940	Symbol	DT_CREDD		5259051						
ANR	5259941	Symbol	* argv		5259051						
ANR	5259942	Symbol	queryCredential		5259051						
ANR	5259943	Symbol	get_password		5259051						
ANR	5259944	Symbol	strlen		5259051						
ANR	5259945	Symbol	myDistro		5259051						
ANR	5259946	Symbol	options		5259051						
ANR	5259947	Symbol	strcmp		5259051						
ANR	5259948	Symbol	goAheadAnyways		5259051						
ANR	5259949	Symbol	NULL		5259051						
ANR	5259950	Symbol	options . username		5259051						
ANR	5259951	Symbol	stderr		5259051						
ANR	5259952	Symbol	my_username		5259051						
ANR	5259953	Symbol	FAILURE_ABORTED		5259051						
ANR	5259954	Symbol	daemon		5259051						
ANR	5259955	Symbol	full_name		5259051						
ANR	5259956	Symbol	options . daemonname		5259051						
ANR	5259957	Symbol	POOL_PASSWORD_USERNAME		5259051						
ANR	5259958	Symbol	domain		5259051						
ANR	5259959	Symbol	true		5259051						
ANR	5259960	Symbol	condor_basename		5259051						
ANR	5259961	Symbol	pool_password_arg		5259051						
ANR	5259962	Symbol	my_domain		5259051						
ANR	5259963	Symbol	MyName		5259051						
ANR	5259964	Symbol	my_domainname		5259051						
ANR	5259965	Symbol	credd_host		5259051						
ANR	5259966	Symbol	argv		5259051						
ANR	5259967	Symbol	* options		5259051						
ANR	5259968	Symbol	result		5259051						
ANR	5259969	Symbol	my_name		5259051						
ANR	5259970	Symbol	DT_MASTER		5259051						
ANR	5259971	Symbol	param		5259051						
ANR	5259972	Symbol	strnewp		5259051						
ANR	5259973	Symbol	parseCommandLine		5259051						
ANR	5259974	Symbol	options . help		5259051						
ANR	5259975	Symbol	my_full_name . Value		5259051						
ANR	5259976	Symbol	argc		5259051						
ANR	5259977	Symbol	SUCCESS		5259051						
ANR	5259978	Symbol	* options . pw		5259051						
ANR	5259979	Symbol	false		5259051						
ANR	5259980	Symbol	options . pw		5259051						
ANR	5259981	Symbol	DT_SCHEDD		5259051						
ANR	5259982	Symbol	my_full_name		5259051						
ANR	5259983	Symbol	& options		5259051						
ANR	5259984	Symbol	write_password_file		5259051						
ANR	5259985	Symbol	QUERY_MODE		5259051						
ANR	5259986	Symbol	pool_password_delete		5259051						
ANR	5259987	Symbol	options . mode		5259051						
ANR	5259988	Symbol	options . password_file		5259051						
ANR	5259989	Symbol	MAX_PASSWORD_LENGTH		5259051						
ANR	5259990	Function	parseCommandLine	283:0:7609:12056							
ANR	5259991	FunctionDef	"parseCommandLine (StoreCredOptions * opts , int argc , char * argv [ ])"		5259990	0					
ANR	5259992	CompoundStatement		284:65:7679:12056	5259990	0					
ANR	5259993	IdentifierDeclStatement	int i ;	286:1:7683:7688	5259990	0	True				
ANR	5259994	IdentifierDecl	i		5259990	0					
ANR	5259995	IdentifierDeclType	int		5259990	0					
ANR	5259996	Identifier	i		5259990	1					
ANR	5259997	IdentifierDeclStatement	param_functions * p_funcs = NULL ;	287:1:7691:7722	5259990	1	True				
ANR	5259998	IdentifierDecl	* p_funcs = NULL		5259990	0					
ANR	5259999	IdentifierDeclType	param_functions *		5259990	0					
ANR	5260000	Identifier	p_funcs		5259990	1					
ANR	5260001	AssignmentExpression	* p_funcs = NULL		5259990	2		=			
ANR	5260002	Identifier	NULL		5259990	0					
ANR	5260003	Identifier	NULL		5259990	1					
ANR	5260004	ExpressionStatement	opts -> mode = 0	288:1:7725:7739	5259990	2	True				
ANR	5260005	AssignmentExpression	opts -> mode = 0		5259990	0		=			
ANR	5260006	PtrMemberAccess	opts -> mode		5259990	0					
ANR	5260007	Identifier	opts		5259990	0					
ANR	5260008	Identifier	mode		5259990	1					
ANR	5260009	PrimaryExpression	0		5259990	1					
ANR	5260010	ExpressionStatement	opts -> pw [ 0 ] = opts -> pw [ MAX_PASSWORD_LENGTH ] = '\\0'	289:1:7742:7792	5259990	3	True				
ANR	5260011	AssignmentExpression	opts -> pw [ 0 ] = opts -> pw [ MAX_PASSWORD_LENGTH ] = '\\0'		5259990	0		=			
ANR	5260012	ArrayIndexing	opts -> pw [ 0 ]		5259990	0					
ANR	5260013	PtrMemberAccess	opts -> pw		5259990	0					
ANR	5260014	Identifier	opts		5259990	0					
ANR	5260015	Identifier	pw		5259990	1					
ANR	5260016	PrimaryExpression	0		5259990	1					
ANR	5260017	AssignmentExpression	opts -> pw [ MAX_PASSWORD_LENGTH ] = '\\0'		5259990	1		=			
ANR	5260018	ArrayIndexing	opts -> pw [ MAX_PASSWORD_LENGTH ]		5259990	0					
ANR	5260019	PtrMemberAccess	opts -> pw		5259990	0					
ANR	5260020	Identifier	opts		5259990	0					
ANR	5260021	Identifier	pw		5259990	1					
ANR	5260022	Identifier	MAX_PASSWORD_LENGTH		5259990	1					
ANR	5260023	PrimaryExpression	'\\0'		5259990	1					
ANR	5260024	ExpressionStatement	opts -> username [ 0 ] = opts -> username [ MAX_PASSWORD_LENGTH ] = '\\0'	290:1:7795:7857	5259990	4	True				
ANR	5260025	AssignmentExpression	opts -> username [ 0 ] = opts -> username [ MAX_PASSWORD_LENGTH ] = '\\0'		5259990	0		=			
ANR	5260026	ArrayIndexing	opts -> username [ 0 ]		5259990	0					
ANR	5260027	PtrMemberAccess	opts -> username		5259990	0					
ANR	5260028	Identifier	opts		5259990	0					
ANR	5260029	Identifier	username		5259990	1					
ANR	5260030	PrimaryExpression	0		5259990	1					
ANR	5260031	AssignmentExpression	opts -> username [ MAX_PASSWORD_LENGTH ] = '\\0'		5259990	1		=			
ANR	5260032	ArrayIndexing	opts -> username [ MAX_PASSWORD_LENGTH ]		5259990	0					
ANR	5260033	PtrMemberAccess	opts -> username		5259990	0					
ANR	5260034	Identifier	opts		5259990	0					
ANR	5260035	Identifier	username		5259990	1					
ANR	5260036	Identifier	MAX_PASSWORD_LENGTH		5259990	1					
ANR	5260037	PrimaryExpression	'\\0'		5259990	1					
ANR	5260038	ExpressionStatement	opts -> daemonname = NULL	291:1:7860:7883	5259990	5	True				
ANR	5260039	AssignmentExpression	opts -> daemonname = NULL		5259990	0		=			
ANR	5260040	PtrMemberAccess	opts -> daemonname		5259990	0					
ANR	5260041	Identifier	opts		5259990	0					
ANR	5260042	Identifier	daemonname		5259990	1					
ANR	5260043	Identifier	NULL		5259990	1					
ANR	5260044	ExpressionStatement	opts -> password_file = NULL	292:1:7886:7912	5259990	6	True				
ANR	5260045	AssignmentExpression	opts -> password_file = NULL		5259990	0		=			
ANR	5260046	PtrMemberAccess	opts -> password_file		5259990	0					
ANR	5260047	Identifier	opts		5259990	0					
ANR	5260048	Identifier	password_file		5259990	1					
ANR	5260049	Identifier	NULL		5259990	1					
ANR	5260050	ExpressionStatement		292:28:7913:7913	5259990	7	True				
ANR	5260051	ExpressionStatement	opts -> help = false	293:1:7916:7934	5259990	8	True				
ANR	5260052	AssignmentExpression	opts -> help = false		5259990	0		=			
ANR	5260053	PtrMemberAccess	opts -> help		5259990	0					
ANR	5260054	Identifier	opts		5259990	0					
ANR	5260055	Identifier	help		5259990	1					
ANR	5260056	Identifier	false		5259990	1					
ANR	5260057	IdentifierDeclStatement	bool err = false ;	295:1:7938:7954	5259990	9	True				
ANR	5260058	IdentifierDecl	err = false		5259990	0					
ANR	5260059	IdentifierDeclType	bool		5259990	0					
ANR	5260060	Identifier	err		5259990	1					
ANR	5260061	AssignmentExpression	err = false		5259990	2		=			
ANR	5260062	Identifier	false		5259990	0					
ANR	5260063	Identifier	false		5259990	1					
ANR	5260064	ForStatement	for ( i = 1 ; i < argc && ! err ; i ++ )		5259990	10					
ANR	5260065	ForInit	i = 1 ;	296:6:7962:7965	5259990	0	True				
ANR	5260066	AssignmentExpression	i = 1		5259990	0		=			
ANR	5260067	Identifier	i		5259990	0					
ANR	5260068	PrimaryExpression	1		5259990	1					
ANR	5260069	Condition	i < argc && ! err	296:11:7967:7980	5259990	1	True				
ANR	5260070	AndExpression	i < argc && ! err		5259990	0		&&			
ANR	5260071	RelationalExpression	i < argc		5259990	0		<			
ANR	5260072	Identifier	i		5259990	0					
ANR	5260073	Identifier	argc		5259990	1					
ANR	5260074	UnaryOperationExpression	! err		5259990	1					
ANR	5260075	UnaryOperator	!		5259990	0					
ANR	5260076	Identifier	err		5259990	1					
ANR	5260077	PostIncDecOperationExpression	i ++	296:27:7983:7985	5259990	2	True				
ANR	5260078	Identifier	i		5259990	0					
ANR	5260079	IncDec	++		5259990	1					
ANR	5260080	CompoundStatement		13:32:308:308	5259990	3					
ANR	5260081	SwitchStatement	switch ( argv [ i ] [ 0 ] )		5259990	0					
ANR	5260082	Condition	argv [ i ] [ 0 ]	297:9:7999:8008	5259990	0	True				
ANR	5260083	ArrayIndexing	argv [ i ] [ 0 ]		5259990	0					
ANR	5260084	ArrayIndexing	argv [ i ]		5259990	0					
ANR	5260085	Identifier	argv		5259990	0					
ANR	5260086	Identifier	i		5259990	1					
ANR	5260087	PrimaryExpression	0		5259990	1					
ANR	5260088	CompoundStatement		14:21:331:331	5259990	1					
ANR	5260089	Label	case 'a' :	298:2:8015:8023	5259990	0	True				
ANR	5260090	Label	case 'A' :	299:2:8027:8035	5259990	1	True				
ANR	5260091	IfStatement	"if ( strcasecmp ( argv [ i ] , ADD_CREDENTIAL ) == 0 )"		5259990	2					
ANR	5260092	Condition	"strcasecmp ( argv [ i ] , ADD_CREDENTIAL ) == 0"	300:7:8051:8090	5259990	0	True				
ANR	5260093	EqualityExpression	"strcasecmp ( argv [ i ] , ADD_CREDENTIAL ) == 0"		5259990	0		==			
ANR	5260094	CallExpression	"strcasecmp ( argv [ i ] , ADD_CREDENTIAL )"		5259990	0					
ANR	5260095	Callee	strcasecmp		5259990	0					
ANR	5260096	Identifier	strcasecmp		5259990	0					
ANR	5260097	ArgumentList	argv [ i ]		5259990	1					
ANR	5260098	Argument	argv [ i ]		5259990	0					
ANR	5260099	ArrayIndexing	argv [ i ]		5259990	0					
ANR	5260100	Identifier	argv		5259990	0					
ANR	5260101	Identifier	i		5259990	1					
ANR	5260102	Argument	ADD_CREDENTIAL		5259990	1					
ANR	5260103	Identifier	ADD_CREDENTIAL		5259990	0					
ANR	5260104	PrimaryExpression	0		5259990	1					
ANR	5260105	CompoundStatement		17:49:413:413	5259990	1					
ANR	5260106	IfStatement	if ( ! opts -> mode )		5259990	0					
ANR	5260107	Condition	! opts -> mode	301:8:8103:8113	5259990	0	True				
ANR	5260108	UnaryOperationExpression	! opts -> mode		5259990	0					
ANR	5260109	UnaryOperator	!		5259990	0					
ANR	5260110	PtrMemberAccess	opts -> mode		5259990	1					
ANR	5260111	Identifier	opts		5259990	0					
ANR	5260112	Identifier	mode		5259990	1					
ANR	5260113	CompoundStatement		18:21:436:436	5259990	1					
ANR	5260114	ExpressionStatement	opts -> mode = ADD_MODE	302:5:8123:8144	5259990	0	True				
ANR	5260115	AssignmentExpression	opts -> mode = ADD_MODE		5259990	0		=			
ANR	5260116	PtrMemberAccess	opts -> mode		5259990	0					
ANR	5260117	Identifier	opts		5259990	0					
ANR	5260118	Identifier	mode		5259990	1					
ANR	5260119	Identifier	ADD_MODE		5259990	1					
ANR	5260120	ElseStatement	else		5259990	0					
ANR	5260121	IfStatement	if ( opts -> mode != ADD_MODE )		5259990	0					
ANR	5260122	Condition	opts -> mode != ADD_MODE	304:13:8165:8186	5259990	0	True				
ANR	5260123	EqualityExpression	opts -> mode != ADD_MODE		5259990	0		!=			
ANR	5260124	PtrMemberAccess	opts -> mode		5259990	0					
ANR	5260125	Identifier	opts		5259990	0					
ANR	5260126	Identifier	mode		5259990	1					
ANR	5260127	Identifier	ADD_MODE		5259990	1					
ANR	5260128	CompoundStatement		21:37:509:509	5259990	1					
ANR	5260129	ExpressionStatement	"fprintf ( stderr , ""ERROR: exactly one command must be provided\\n"" )"	305:5:8196:8273	5259990	0	True				
ANR	5260130	CallExpression	"fprintf ( stderr , ""ERROR: exactly one command must be provided\\n"" )"		5259990	0					
ANR	5260131	Callee	fprintf		5259990	0					
ANR	5260132	Identifier	fprintf		5259990	0					
ANR	5260133	ArgumentList	stderr		5259990	1					
ANR	5260134	Argument	stderr		5259990	0					
ANR	5260135	Identifier	stderr		5259990	0					
ANR	5260136	Argument	"""ERROR: exactly one command must be provided\\n"""		5259990	1					
ANR	5260137	PrimaryExpression	"""ERROR: exactly one command must be provided\\n"""		5259990	0					
ANR	5260138	ExpressionStatement	usage ( )	307:5:8280:8287	5259990	1	True				
ANR	5260139	CallExpression	usage ( )		5259990	0					
ANR	5260140	Callee	usage		5259990	0					
ANR	5260141	Identifier	usage		5259990	0					
ANR	5260142	ArgumentList			5259990	1					
ANR	5260143	ExpressionStatement	err = true	308:5:8294:8304	5259990	2	True				
ANR	5260144	AssignmentExpression	err = true		5259990	0		=			
ANR	5260145	Identifier	err		5259990	0					
ANR	5260146	Identifier	true		5259990	1					
ANR	5260147	ElseStatement	else		5259990	0					
ANR	5260148	CompoundStatement		27:10:642:642	5259990	0					
ANR	5260149	ExpressionStatement	err = true	311:4:8328:8338	5259990	0	True				
ANR	5260150	AssignmentExpression	err = true		5259990	0		=			
ANR	5260151	Identifier	err		5259990	0					
ANR	5260152	Identifier	true		5259990	1					
ANR	5260153	ExpressionStatement	badCommand ( argv [ i ] )	312:4:8344:8363	5259990	1	True				
ANR	5260154	CallExpression	badCommand ( argv [ i ] )		5259990	0					
ANR	5260155	Callee	badCommand		5259990	0					
ANR	5260156	Identifier	badCommand		5259990	0					
ANR	5260157	ArgumentList	argv [ i ]		5259990	1					
ANR	5260158	Argument	argv [ i ]		5259990	0					
ANR	5260159	ArrayIndexing	argv [ i ]		5259990	0					
ANR	5260160	Identifier	argv		5259990	0					
ANR	5260161	Identifier	i		5259990	1					
ANR	5260162	BreakStatement	break ;	314:3:8374:8379	5259990	3	True				
ANR	5260163	Label	case 'd' :	315:2:8383:8391	5259990	4	True				
ANR	5260164	Label	case 'D' :	316:2:8396:8404	5259990	5	True				
ANR	5260165	IfStatement	"if ( strcasecmp ( argv [ i ] , DELETE_CREDENTIAL ) == 0 )"		5259990	6					
ANR	5260166	Condition	"strcasecmp ( argv [ i ] , DELETE_CREDENTIAL ) == 0"	317:7:8423:8465	5259990	0	True				
ANR	5260167	EqualityExpression	"strcasecmp ( argv [ i ] , DELETE_CREDENTIAL ) == 0"		5259990	0		==			
ANR	5260168	CallExpression	"strcasecmp ( argv [ i ] , DELETE_CREDENTIAL )"		5259990	0					
ANR	5260169	Callee	strcasecmp		5259990	0					
ANR	5260170	Identifier	strcasecmp		5259990	0					
ANR	5260171	ArgumentList	argv [ i ]		5259990	1					
ANR	5260172	Argument	argv [ i ]		5259990	0					
ANR	5260173	ArrayIndexing	argv [ i ]		5259990	0					
ANR	5260174	Identifier	argv		5259990	0					
ANR	5260175	Identifier	i		5259990	1					
ANR	5260176	Argument	DELETE_CREDENTIAL		5259990	1					
ANR	5260177	Identifier	DELETE_CREDENTIAL		5259990	0					
ANR	5260178	PrimaryExpression	0		5259990	1					
ANR	5260179	CompoundStatement		34:52:788:788	5259990	1					
ANR	5260180	IfStatement	if ( ! opts -> mode )		5259990	0					
ANR	5260181	Condition	! opts -> mode	318:8:8478:8488	5259990	0	True				
ANR	5260182	UnaryOperationExpression	! opts -> mode		5259990	0					
ANR	5260183	UnaryOperator	!		5259990	0					
ANR	5260184	PtrMemberAccess	opts -> mode		5259990	1					
ANR	5260185	Identifier	opts		5259990	0					
ANR	5260186	Identifier	mode		5259990	1					
ANR	5260187	CompoundStatement		35:21:811:811	5259990	1					
ANR	5260188	ExpressionStatement	opts -> mode = DELETE_MODE	319:5:8498:8522	5259990	0	True				
ANR	5260189	AssignmentExpression	opts -> mode = DELETE_MODE		5259990	0		=			
ANR	5260190	PtrMemberAccess	opts -> mode		5259990	0					
ANR	5260191	Identifier	opts		5259990	0					
ANR	5260192	Identifier	mode		5259990	1					
ANR	5260193	Identifier	DELETE_MODE		5259990	1					
ANR	5260194	ElseStatement	else		5259990	0					
ANR	5260195	IfStatement	if ( opts -> mode != DELETE_MODE )		5259990	0					
ANR	5260196	Condition	opts -> mode != DELETE_MODE	321:13:8543:8567	5259990	0	True				
ANR	5260197	EqualityExpression	opts -> mode != DELETE_MODE		5259990	0		!=			
ANR	5260198	PtrMemberAccess	opts -> mode		5259990	0					
ANR	5260199	Identifier	opts		5259990	0					
ANR	5260200	Identifier	mode		5259990	1					
ANR	5260201	Identifier	DELETE_MODE		5259990	1					
ANR	5260202	CompoundStatement		38:40:890:890	5259990	1					
ANR	5260203	ExpressionStatement	"fprintf ( stderr , ""ERROR: exactly one command must be provided\\n"" )"	322:5:8577:8654	5259990	0	True				
ANR	5260204	CallExpression	"fprintf ( stderr , ""ERROR: exactly one command must be provided\\n"" )"		5259990	0					
ANR	5260205	Callee	fprintf		5259990	0					
ANR	5260206	Identifier	fprintf		5259990	0					
ANR	5260207	ArgumentList	stderr		5259990	1					
ANR	5260208	Argument	stderr		5259990	0					
ANR	5260209	Identifier	stderr		5259990	0					
ANR	5260210	Argument	"""ERROR: exactly one command must be provided\\n"""		5259990	1					
ANR	5260211	PrimaryExpression	"""ERROR: exactly one command must be provided\\n"""		5259990	0					
ANR	5260212	ExpressionStatement	usage ( )	324:5:8661:8668	5259990	1	True				
ANR	5260213	CallExpression	usage ( )		5259990	0					
ANR	5260214	Callee	usage		5259990	0					
ANR	5260215	Identifier	usage		5259990	0					
ANR	5260216	ArgumentList			5259990	1					
ANR	5260217	ExpressionStatement	err = true	325:5:8675:8685	5259990	2	True				
ANR	5260218	AssignmentExpression	err = true		5259990	0		=			
ANR	5260219	Identifier	err		5259990	0					
ANR	5260220	Identifier	true		5259990	1					
ANR	5260221	ElseStatement	else		5259990	0					
ANR	5260222	CompoundStatement		44:10:1023:1023	5259990	0					
ANR	5260223	ExpressionStatement	err = true	328:4:8709:8719	5259990	0	True				
ANR	5260224	AssignmentExpression	err = true		5259990	0		=			
ANR	5260225	Identifier	err		5259990	0					
ANR	5260226	Identifier	true		5259990	1					
ANR	5260227	ExpressionStatement	badCommand ( argv [ i ] )	329:4:8725:8744	5259990	1	True				
ANR	5260228	CallExpression	badCommand ( argv [ i ] )		5259990	0					
ANR	5260229	Callee	badCommand		5259990	0					
ANR	5260230	Identifier	badCommand		5259990	0					
ANR	5260231	ArgumentList	argv [ i ]		5259990	1					
ANR	5260232	Argument	argv [ i ]		5259990	0					
ANR	5260233	ArrayIndexing	argv [ i ]		5259990	0					
ANR	5260234	Identifier	argv		5259990	0					
ANR	5260235	Identifier	i		5259990	1					
ANR	5260236	BreakStatement	break ;	331:3:8755:8760	5259990	7	True				
ANR	5260237	Label	case 'q' :	332:2:8764:8772	5259990	8	True				
ANR	5260238	Label	case 'Q' :	333:2:8777:8785	5259990	9	True				
ANR	5260239	IfStatement	"if ( strcasecmp ( argv [ i ] , QUERY_CREDENTIAL ) == 0 )"		5259990	10					
ANR	5260240	Condition	"strcasecmp ( argv [ i ] , QUERY_CREDENTIAL ) == 0"	334:7:8831:8872	5259990	0	True				
ANR	5260241	EqualityExpression	"strcasecmp ( argv [ i ] , QUERY_CREDENTIAL ) == 0"		5259990	0		==			
ANR	5260242	CallExpression	"strcasecmp ( argv [ i ] , QUERY_CREDENTIAL )"		5259990	0					
ANR	5260243	Callee	strcasecmp		5259990	0					
ANR	5260244	Identifier	strcasecmp		5259990	0					
ANR	5260245	ArgumentList	argv [ i ]		5259990	1					
ANR	5260246	Argument	argv [ i ]		5259990	0					
ANR	5260247	ArrayIndexing	argv [ i ]		5259990	0					
ANR	5260248	Identifier	argv		5259990	0					
ANR	5260249	Identifier	i		5259990	1					
ANR	5260250	Argument	QUERY_CREDENTIAL		5259990	1					
ANR	5260251	Identifier	QUERY_CREDENTIAL		5259990	0					
ANR	5260252	PrimaryExpression	0		5259990	1					
ANR	5260253	CompoundStatement		51:51:1195:1195	5259990	1					
ANR	5260254	IfStatement	if ( ! opts -> mode )		5259990	0					
ANR	5260255	Condition	! opts -> mode	335:8:8885:8895	5259990	0	True				
ANR	5260256	UnaryOperationExpression	! opts -> mode		5259990	0					
ANR	5260257	UnaryOperator	!		5259990	0					
ANR	5260258	PtrMemberAccess	opts -> mode		5259990	1					
ANR	5260259	Identifier	opts		5259990	0					
ANR	5260260	Identifier	mode		5259990	1					
ANR	5260261	CompoundStatement		52:21:1218:1218	5259990	1					
ANR	5260262	ExpressionStatement	opts -> mode = QUERY_MODE	336:5:8905:8928	5259990	0	True				
ANR	5260263	AssignmentExpression	opts -> mode = QUERY_MODE		5259990	0		=			
ANR	5260264	PtrMemberAccess	opts -> mode		5259990	0					
ANR	5260265	Identifier	opts		5259990	0					
ANR	5260266	Identifier	mode		5259990	1					
ANR	5260267	Identifier	QUERY_MODE		5259990	1					
ANR	5260268	ElseStatement	else		5259990	0					
ANR	5260269	IfStatement	if ( opts -> mode != QUERY_MODE )		5259990	0					
ANR	5260270	Condition	opts -> mode != QUERY_MODE	338:13:8949:8972	5259990	0	True				
ANR	5260271	EqualityExpression	opts -> mode != QUERY_MODE		5259990	0		!=			
ANR	5260272	PtrMemberAccess	opts -> mode		5259990	0					
ANR	5260273	Identifier	opts		5259990	0					
ANR	5260274	Identifier	mode		5259990	1					
ANR	5260275	Identifier	QUERY_MODE		5259990	1					
ANR	5260276	CompoundStatement		55:39:1295:1295	5259990	1					
ANR	5260277	ExpressionStatement	"fprintf ( stderr , ""ERROR: exactly one command must be provided\\n"" )"	339:5:8982:9059	5259990	0	True				
ANR	5260278	CallExpression	"fprintf ( stderr , ""ERROR: exactly one command must be provided\\n"" )"		5259990	0					
ANR	5260279	Callee	fprintf		5259990	0					
ANR	5260280	Identifier	fprintf		5259990	0					
ANR	5260281	ArgumentList	stderr		5259990	1					
ANR	5260282	Argument	stderr		5259990	0					
ANR	5260283	Identifier	stderr		5259990	0					
ANR	5260284	Argument	"""ERROR: exactly one command must be provided\\n"""		5259990	1					
ANR	5260285	PrimaryExpression	"""ERROR: exactly one command must be provided\\n"""		5259990	0					
ANR	5260286	ExpressionStatement	usage ( )	341:5:9066:9073	5259990	1	True				
ANR	5260287	CallExpression	usage ( )		5259990	0					
ANR	5260288	Callee	usage		5259990	0					
ANR	5260289	Identifier	usage		5259990	0					
ANR	5260290	ArgumentList			5259990	1					
ANR	5260291	ExpressionStatement	err = true	342:5:9080:9090	5259990	2	True				
ANR	5260292	AssignmentExpression	err = true		5259990	0		=			
ANR	5260293	Identifier	err		5259990	0					
ANR	5260294	Identifier	true		5259990	1					
ANR	5260295	ElseStatement	else		5259990	0					
ANR	5260296	CompoundStatement		61:10:1428:1428	5259990	0					
ANR	5260297	ExpressionStatement	err = true	345:4:9114:9124	5259990	0	True				
ANR	5260298	AssignmentExpression	err = true		5259990	0		=			
ANR	5260299	Identifier	err		5259990	0					
ANR	5260300	Identifier	true		5259990	1					
ANR	5260301	ExpressionStatement	badCommand ( argv [ i ] )	346:4:9130:9149	5259990	1	True				
ANR	5260302	CallExpression	badCommand ( argv [ i ] )		5259990	0					
ANR	5260303	Callee	badCommand		5259990	0					
ANR	5260304	Identifier	badCommand		5259990	0					
ANR	5260305	ArgumentList	argv [ i ]		5259990	1					
ANR	5260306	Argument	argv [ i ]		5259990	0					
ANR	5260307	ArrayIndexing	argv [ i ]		5259990	0					
ANR	5260308	Identifier	argv		5259990	0					
ANR	5260309	Identifier	i		5259990	1					
ANR	5260310	BreakStatement	break ;	348:3:9160:9165	5259990	11	True				
ANR	5260311	Label	case 'c' :	350:2:9188:9196	5259990	12	True				
ANR	5260312	Label	case 'C' :	351:2:9201:9209	5259990	13	True				
ANR	5260313	IfStatement	"if ( strcasecmp ( argv [ i ] , CONFIG_CREDENTIAL ) == 0 )"		5259990	14					
ANR	5260314	Condition	"strcasecmp ( argv [ i ] , CONFIG_CREDENTIAL ) == 0"	352:7:9228:9270	5259990	0	True				
ANR	5260315	EqualityExpression	"strcasecmp ( argv [ i ] , CONFIG_CREDENTIAL ) == 0"		5259990	0		==			
ANR	5260316	CallExpression	"strcasecmp ( argv [ i ] , CONFIG_CREDENTIAL )"		5259990	0					
ANR	5260317	Callee	strcasecmp		5259990	0					
ANR	5260318	Identifier	strcasecmp		5259990	0					
ANR	5260319	ArgumentList	argv [ i ]		5259990	1					
ANR	5260320	Argument	argv [ i ]		5259990	0					
ANR	5260321	ArrayIndexing	argv [ i ]		5259990	0					
ANR	5260322	Identifier	argv		5259990	0					
ANR	5260323	Identifier	i		5259990	1					
ANR	5260324	Argument	CONFIG_CREDENTIAL		5259990	1					
ANR	5260325	Identifier	CONFIG_CREDENTIAL		5259990	0					
ANR	5260326	PrimaryExpression	0		5259990	1					
ANR	5260327	CompoundStatement		69:52:1593:1593	5259990	1					
ANR	5260328	IfStatement	if ( ! opts -> mode )		5259990	0					
ANR	5260329	Condition	! opts -> mode	353:8:9283:9293	5259990	0	True				
ANR	5260330	UnaryOperationExpression	! opts -> mode		5259990	0					
ANR	5260331	UnaryOperator	!		5259990	0					
ANR	5260332	PtrMemberAccess	opts -> mode		5259990	1					
ANR	5260333	Identifier	opts		5259990	0					
ANR	5260334	Identifier	mode		5259990	1					
ANR	5260335	CompoundStatement		70:21:1616:1616	5259990	1					
ANR	5260336	ExpressionStatement	opts -> mode = CONFIG_MODE	354:5:9303:9327	5259990	0	True				
ANR	5260337	AssignmentExpression	opts -> mode = CONFIG_MODE		5259990	0		=			
ANR	5260338	PtrMemberAccess	opts -> mode		5259990	0					
ANR	5260339	Identifier	opts		5259990	0					
ANR	5260340	Identifier	mode		5259990	1					
ANR	5260341	Identifier	CONFIG_MODE		5259990	1					
ANR	5260342	ElseStatement	else		5259990	0					
ANR	5260343	CompoundStatement		73:9:1664:1664	5259990	0					
ANR	5260344	ExpressionStatement	"fprintf ( stderr , ""ERROR: exactly one command must be provided\\n"" )"	357:5:9351:9415	5259990	0	True				
ANR	5260345	CallExpression	"fprintf ( stderr , ""ERROR: exactly one command must be provided\\n"" )"		5259990	0					
ANR	5260346	Callee	fprintf		5259990	0					
ANR	5260347	Identifier	fprintf		5259990	0					
ANR	5260348	ArgumentList	stderr		5259990	1					
ANR	5260349	Argument	stderr		5259990	0					
ANR	5260350	Identifier	stderr		5259990	0					
ANR	5260351	Argument	"""ERROR: exactly one command must be provided\\n"""		5259990	1					
ANR	5260352	PrimaryExpression	"""ERROR: exactly one command must be provided\\n"""		5259990	0					
ANR	5260353	ExpressionStatement	usage ( )	358:5:9422:9429	5259990	1	True				
ANR	5260354	CallExpression	usage ( )		5259990	0					
ANR	5260355	Callee	usage		5259990	0					
ANR	5260356	Identifier	usage		5259990	0					
ANR	5260357	ArgumentList			5259990	1					
ANR	5260358	ExpressionStatement	err = true	359:5:9436:9446	5259990	2	True				
ANR	5260359	AssignmentExpression	err = true		5259990	0		=			
ANR	5260360	Identifier	err		5259990	0					
ANR	5260361	Identifier	true		5259990	1					
ANR	5260362	ElseStatement	else		5259990	0					
ANR	5260363	CompoundStatement		78:10:1784:1784	5259990	0					
ANR	5260364	ExpressionStatement	err = true	362:4:9470:9480	5259990	0	True				
ANR	5260365	AssignmentExpression	err = true		5259990	0		=			
ANR	5260366	Identifier	err		5259990	0					
ANR	5260367	Identifier	true		5259990	1					
ANR	5260368	ExpressionStatement	badCommand ( argv [ i ] )	363:4:9486:9505	5259990	1	True				
ANR	5260369	CallExpression	badCommand ( argv [ i ] )		5259990	0					
ANR	5260370	Callee	badCommand		5259990	0					
ANR	5260371	Identifier	badCommand		5259990	0					
ANR	5260372	ArgumentList	argv [ i ]		5259990	1					
ANR	5260373	Argument	argv [ i ]		5259990	0					
ANR	5260374	ArrayIndexing	argv [ i ]		5259990	0					
ANR	5260375	Identifier	argv		5259990	0					
ANR	5260376	Identifier	i		5259990	1					
ANR	5260377	BreakStatement	break ;	365:3:9516:9521	5259990	15	True				
ANR	5260378	Label	case '-' :	367:2:9532:9540	5259990	16	True				
ANR	5260379	SwitchStatement	switch ( argv [ i ] [ 1 ] )		5259990	17					
ANR	5260380	Condition	argv [ i ] [ 1 ]	369:11:9576:9585	5259990	0	True				
ANR	5260381	ArrayIndexing	argv [ i ] [ 1 ]		5259990	0					
ANR	5260382	ArrayIndexing	argv [ i ]		5259990	0					
ANR	5260383	Identifier	argv		5259990	0					
ANR	5260384	Identifier	i		5259990	1					
ANR	5260385	PrimaryExpression	1		5259990	1					
ANR	5260386	CompoundStatement		86:23:1908:1908	5259990	1					
ANR	5260387	Label	case 'n' :	370:4:9594:9602	5259990	0	True				
ANR	5260388	IfStatement	if ( i + 1 < argc )		5259990	1					
ANR	5260389	Condition	i + 1 < argc	371:9:9613:9622	5259990	0	True				
ANR	5260390	RelationalExpression	i + 1 < argc		5259990	0		<			
ANR	5260391	AdditiveExpression	i + 1		5259990	0		+			
ANR	5260392	Identifier	i		5259990	0					
ANR	5260393	PrimaryExpression	1		5259990	1					
ANR	5260394	Identifier	argc		5259990	1					
ANR	5260395	CompoundStatement		88:21:1945:1945	5259990	1					
ANR	5260396	IfStatement	if ( opts -> daemonname != NULL )		5259990	0					
ANR	5260397	Condition	opts -> daemonname != NULL	372:10:9637:9660	5259990	0	True				
ANR	5260398	EqualityExpression	opts -> daemonname != NULL		5259990	0		!=			
ANR	5260399	PtrMemberAccess	opts -> daemonname		5259990	0					
ANR	5260400	Identifier	opts		5259990	0					
ANR	5260401	Identifier	daemonname		5259990	1					
ANR	5260402	Identifier	NULL		5259990	1					
ANR	5260403	CompoundStatement		89:36:1983:1983	5259990	1					
ANR	5260404	ExpressionStatement	"fprintf ( stderr , ""ERROR: only one '-n' arg my be provided\\n"" )"	373:7:9672:9732	5259990	0	True				
ANR	5260405	CallExpression	"fprintf ( stderr , ""ERROR: only one '-n' arg my be provided\\n"" )"		5259990	0					
ANR	5260406	Callee	fprintf		5259990	0					
ANR	5260407	Identifier	fprintf		5259990	0					
ANR	5260408	ArgumentList	stderr		5259990	1					
ANR	5260409	Argument	stderr		5259990	0					
ANR	5260410	Identifier	stderr		5259990	0					
ANR	5260411	Argument	"""ERROR: only one '-n' arg my be provided\\n"""		5259990	1					
ANR	5260412	PrimaryExpression	"""ERROR: only one '-n' arg my be provided\\n"""		5259990	0					
ANR	5260413	ExpressionStatement	usage ( )	374:7:9741:9748	5259990	1	True				
ANR	5260414	CallExpression	usage ( )		5259990	0					
ANR	5260415	Callee	usage		5259990	0					
ANR	5260416	Identifier	usage		5259990	0					
ANR	5260417	ArgumentList			5259990	1					
ANR	5260418	ExpressionStatement	err = true	375:7:9757:9767	5259990	2	True				
ANR	5260419	AssignmentExpression	err = true		5259990	0		=			
ANR	5260420	Identifier	err		5259990	0					
ANR	5260421	Identifier	true		5259990	1					
ANR	5260422	ElseStatement	else		5259990	0					
ANR	5260423	CompoundStatement		94:11:2108:2108	5259990	0					
ANR	5260424	ExpressionStatement	opts -> daemonname = get_daemon_name ( argv [ i + 1 ] )	378:7:9797:9842	5259990	0	True				
ANR	5260425	AssignmentExpression	opts -> daemonname = get_daemon_name ( argv [ i + 1 ] )		5259990	0		=			
ANR	5260426	PtrMemberAccess	opts -> daemonname		5259990	0					
ANR	5260427	Identifier	opts		5259990	0					
ANR	5260428	Identifier	daemonname		5259990	1					
ANR	5260429	CallExpression	get_daemon_name ( argv [ i + 1 ] )		5259990	1					
ANR	5260430	Callee	get_daemon_name		5259990	0					
ANR	5260431	Identifier	get_daemon_name		5259990	0					
ANR	5260432	ArgumentList	argv [ i + 1 ]		5259990	1					
ANR	5260433	Argument	argv [ i + 1 ]		5259990	0					
ANR	5260434	ArrayIndexing	argv [ i + 1 ]		5259990	0					
ANR	5260435	Identifier	argv		5259990	0					
ANR	5260436	AdditiveExpression	i + 1		5259990	1		+			
ANR	5260437	Identifier	i		5259990	0					
ANR	5260438	PrimaryExpression	1		5259990	1					
ANR	5260439	IfStatement	if ( opts -> daemonname == NULL )		5259990	1					
ANR	5260440	Condition	opts -> daemonname == NULL	379:11:9855:9878	5259990	0	True				
ANR	5260441	EqualityExpression	opts -> daemonname == NULL		5259990	0		==			
ANR	5260442	PtrMemberAccess	opts -> daemonname		5259990	0					
ANR	5260443	Identifier	opts		5259990	0					
ANR	5260444	Identifier	daemonname		5259990	1					
ANR	5260445	Identifier	NULL		5259990	1					
ANR	5260446	CompoundStatement		96:37:2201:2201	5259990	1					
ANR	5260447	ExpressionStatement	"fprintf ( stderr , ""ERROR: %s is not a valid daemon name\\n"" , argv [ i + 1 ] )"	380:8:9891:9968	5259990	0	True				
ANR	5260448	CallExpression	"fprintf ( stderr , ""ERROR: %s is not a valid daemon name\\n"" , argv [ i + 1 ] )"		5259990	0					
ANR	5260449	Callee	fprintf		5259990	0					
ANR	5260450	Identifier	fprintf		5259990	0					
ANR	5260451	ArgumentList	stderr		5259990	1					
ANR	5260452	Argument	stderr		5259990	0					
ANR	5260453	Identifier	stderr		5259990	0					
ANR	5260454	Argument	"""ERROR: %s is not a valid daemon name\\n"""		5259990	1					
ANR	5260455	PrimaryExpression	"""ERROR: %s is not a valid daemon name\\n"""		5259990	0					
ANR	5260456	Argument	argv [ i + 1 ]		5259990	2					
ANR	5260457	ArrayIndexing	argv [ i + 1 ]		5259990	0					
ANR	5260458	Identifier	argv		5259990	0					
ANR	5260459	AdditiveExpression	i + 1		5259990	1		+			
ANR	5260460	Identifier	i		5259990	0					
ANR	5260461	PrimaryExpression	1		5259990	1					
ANR	5260462	ExpressionStatement	err = true	382:8:9978:9988	5259990	1	True				
ANR	5260463	AssignmentExpression	err = true		5259990	0		=			
ANR	5260464	Identifier	err		5259990	0					
ANR	5260465	Identifier	true		5259990	1					
ANR	5260466	ExpressionStatement	i ++	384:7:10006:10009	5259990	2	True				
ANR	5260467	PostIncDecOperationExpression	i ++		5259990	0					
ANR	5260468	Identifier	i		5259990	0					
ANR	5260469	IncDec	++		5259990	1					
ANR	5260470	ElseStatement	else		5259990	0					
ANR	5260471	CompoundStatement		103:12:2351:2351	5259990	0					
ANR	5260472	ExpressionStatement	err = true	387:6:10039:10049	5259990	0	True				
ANR	5260473	AssignmentExpression	err = true		5259990	0		=			
ANR	5260474	Identifier	err		5259990	0					
ANR	5260475	Identifier	true		5259990	1					
ANR	5260476	ExpressionStatement	optionNeedsArg ( argv [ i ] )	388:6:10057:10080	5259990	1	True				
ANR	5260477	CallExpression	optionNeedsArg ( argv [ i ] )		5259990	0					
ANR	5260478	Callee	optionNeedsArg		5259990	0					
ANR	5260479	Identifier	optionNeedsArg		5259990	0					
ANR	5260480	ArgumentList	argv [ i ]		5259990	1					
ANR	5260481	Argument	argv [ i ]		5259990	0					
ANR	5260482	ArrayIndexing	argv [ i ]		5259990	0					
ANR	5260483	Identifier	argv		5259990	0					
ANR	5260484	Identifier	i		5259990	1					
ANR	5260485	BreakStatement	break ;	390:5:10094:10099	5259990	2	True				
ANR	5260486	Label	case 'p' :	391:4:10105:10113	5259990	3	True				
ANR	5260487	IfStatement	if ( i + 1 < argc )		5259990	4					
ANR	5260488	Condition	i + 1 < argc	392:9:10124:10133	5259990	0	True				
ANR	5260489	RelationalExpression	i + 1 < argc		5259990	0		<			
ANR	5260490	AdditiveExpression	i + 1		5259990	0		+			
ANR	5260491	Identifier	i		5259990	0					
ANR	5260492	PrimaryExpression	1		5259990	1					
ANR	5260493	Identifier	argc		5259990	1					
ANR	5260494	CompoundStatement		109:21:2456:2456	5259990	1					
ANR	5260495	IfStatement	if ( opts -> pw [ 0 ] != '\\0' )		5259990	0					
ANR	5260496	Condition	opts -> pw [ 0 ] != '\\0'	393:10:10148:10166	5259990	0	True				
ANR	5260497	EqualityExpression	opts -> pw [ 0 ] != '\\0'		5259990	0		!=			
ANR	5260498	ArrayIndexing	opts -> pw [ 0 ]		5259990	0					
ANR	5260499	PtrMemberAccess	opts -> pw		5259990	0					
ANR	5260500	Identifier	opts		5259990	0					
ANR	5260501	Identifier	pw		5259990	1					
ANR	5260502	PrimaryExpression	0		5259990	1					
ANR	5260503	PrimaryExpression	'\\0'		5259990	1					
ANR	5260504	CompoundStatement		110:31:2489:2489	5259990	1					
ANR	5260505	ExpressionStatement	"fprintf ( stderr , ""ERROR: only one '-p' args may be provided\\n"" )"	394:7:10178:10240	5259990	0	True				
ANR	5260506	CallExpression	"fprintf ( stderr , ""ERROR: only one '-p' args may be provided\\n"" )"		5259990	0					
ANR	5260507	Callee	fprintf		5259990	0					
ANR	5260508	Identifier	fprintf		5259990	0					
ANR	5260509	ArgumentList	stderr		5259990	1					
ANR	5260510	Argument	stderr		5259990	0					
ANR	5260511	Identifier	stderr		5259990	0					
ANR	5260512	Argument	"""ERROR: only one '-p' args may be provided\\n"""		5259990	1					
ANR	5260513	PrimaryExpression	"""ERROR: only one '-p' args may be provided\\n"""		5259990	0					
ANR	5260514	ExpressionStatement	usage ( )	395:7:10249:10256	5259990	1	True				
ANR	5260515	CallExpression	usage ( )		5259990	0					
ANR	5260516	Callee	usage		5259990	0					
ANR	5260517	Identifier	usage		5259990	0					
ANR	5260518	ArgumentList			5259990	1					
ANR	5260519	ExpressionStatement	err = true	396:7:10265:10275	5259990	2	True				
ANR	5260520	AssignmentExpression	err = true		5259990	0		=			
ANR	5260521	Identifier	err		5259990	0					
ANR	5260522	Identifier	true		5259990	1					
ANR	5260523	ElseStatement	else		5259990	0					
ANR	5260524	CompoundStatement		115:11:2616:2616	5259990	0					
ANR	5260525	ExpressionStatement	"strncpy ( opts -> pw , argv [ i + 1 ] , MAX_PASSWORD_LENGTH )"	399:7:10305:10354	5259990	0	True				
ANR	5260526	CallExpression	"strncpy ( opts -> pw , argv [ i + 1 ] , MAX_PASSWORD_LENGTH )"		5259990	0					
ANR	5260527	Callee	strncpy		5259990	0					
ANR	5260528	Identifier	strncpy		5259990	0					
ANR	5260529	ArgumentList	opts -> pw		5259990	1					
ANR	5260530	Argument	opts -> pw		5259990	0					
ANR	5260531	PtrMemberAccess	opts -> pw		5259990	0					
ANR	5260532	Identifier	opts		5259990	0					
ANR	5260533	Identifier	pw		5259990	1					
ANR	5260534	Argument	argv [ i + 1 ]		5259990	1					
ANR	5260535	ArrayIndexing	argv [ i + 1 ]		5259990	0					
ANR	5260536	Identifier	argv		5259990	0					
ANR	5260537	AdditiveExpression	i + 1		5259990	1		+			
ANR	5260538	Identifier	i		5259990	0					
ANR	5260539	PrimaryExpression	1		5259990	1					
ANR	5260540	Argument	MAX_PASSWORD_LENGTH		5259990	2					
ANR	5260541	Identifier	MAX_PASSWORD_LENGTH		5259990	0					
ANR	5260542	ExpressionStatement	i ++	400:7:10363:10366	5259990	1	True				
ANR	5260543	PostIncDecOperationExpression	i ++		5259990	0					
ANR	5260544	Identifier	i		5259990	0					
ANR	5260545	IncDec	++		5259990	1					
ANR	5260546	ElseStatement	else		5259990	0					
ANR	5260547	CompoundStatement		119:12:2708:2708	5259990	0					
ANR	5260548	ExpressionStatement	err = true	403:6:10396:10406	5259990	0	True				
ANR	5260549	AssignmentExpression	err = true		5259990	0		=			
ANR	5260550	Identifier	err		5259990	0					
ANR	5260551	Identifier	true		5259990	1					
ANR	5260552	ExpressionStatement	optionNeedsArg ( argv [ i ] )	404:6:10414:10437	5259990	1	True				
ANR	5260553	CallExpression	optionNeedsArg ( argv [ i ] )		5259990	0					
ANR	5260554	Callee	optionNeedsArg		5259990	0					
ANR	5260555	Identifier	optionNeedsArg		5259990	0					
ANR	5260556	ArgumentList	argv [ i ]		5259990	1					
ANR	5260557	Argument	argv [ i ]		5259990	0					
ANR	5260558	ArrayIndexing	argv [ i ]		5259990	0					
ANR	5260559	Identifier	argv		5259990	0					
ANR	5260560	Identifier	i		5259990	1					
ANR	5260561	BreakStatement	break ;	406:5:10451:10456	5259990	5	True				
ANR	5260562	Label	case 'c' :	407:4:10462:10470	5259990	6	True				
ANR	5260563	IfStatement	if ( opts -> username [ 0 ] != '\\0' )		5259990	7					
ANR	5260564	Condition	opts -> username [ 0 ] != '\\0'	408:9:10481:10505	5259990	0	True				
ANR	5260565	EqualityExpression	opts -> username [ 0 ] != '\\0'		5259990	0		!=			
ANR	5260566	ArrayIndexing	opts -> username [ 0 ]		5259990	0					
ANR	5260567	PtrMemberAccess	opts -> username		5259990	0					
ANR	5260568	Identifier	opts		5259990	0					
ANR	5260569	Identifier	username		5259990	1					
ANR	5260570	PrimaryExpression	0		5259990	1					
ANR	5260571	PrimaryExpression	'\\0'		5259990	1					
ANR	5260572	CompoundStatement		125:36:2828:2828	5259990	1					
ANR	5260573	ExpressionStatement	"fprintf ( stderr , ""ERROR: only one '-c' or '-u' arg may be provided\\n"" )"	409:6:10516:10585	5259990	0	True				
ANR	5260574	CallExpression	"fprintf ( stderr , ""ERROR: only one '-c' or '-u' arg may be provided\\n"" )"		5259990	0					
ANR	5260575	Callee	fprintf		5259990	0					
ANR	5260576	Identifier	fprintf		5259990	0					
ANR	5260577	ArgumentList	stderr		5259990	1					
ANR	5260578	Argument	stderr		5259990	0					
ANR	5260579	Identifier	stderr		5259990	0					
ANR	5260580	Argument	"""ERROR: only one '-c' or '-u' arg may be provided\\n"""		5259990	1					
ANR	5260581	PrimaryExpression	"""ERROR: only one '-c' or '-u' arg may be provided\\n"""		5259990	0					
ANR	5260582	ExpressionStatement	usage ( )	410:6:10593:10600	5259990	1	True				
ANR	5260583	CallExpression	usage ( )		5259990	0					
ANR	5260584	Callee	usage		5259990	0					
ANR	5260585	Identifier	usage		5259990	0					
ANR	5260586	ArgumentList			5259990	1					
ANR	5260587	ExpressionStatement	err = true	411:6:10608:10618	5259990	2	True				
ANR	5260588	AssignmentExpression	err = true		5259990	0		=			
ANR	5260589	Identifier	err		5259990	0					
ANR	5260590	Identifier	true		5259990	1					
ANR	5260591	ElseStatement	else		5259990	0					
ANR	5260592	CompoundStatement		130:10:2957:2957	5259990	0					
ANR	5260593	ExpressionStatement	"strcpy ( opts -> username , POOL_PASSWORD_USERNAME )"	414:6:10645:10691	5259990	0	True				
ANR	5260594	CallExpression	"strcpy ( opts -> username , POOL_PASSWORD_USERNAME )"		5259990	0					
ANR	5260595	Callee	strcpy		5259990	0					
ANR	5260596	Identifier	strcpy		5259990	0					
ANR	5260597	ArgumentList	opts -> username		5259990	1					
ANR	5260598	Argument	opts -> username		5259990	0					
ANR	5260599	PtrMemberAccess	opts -> username		5259990	0					
ANR	5260600	Identifier	opts		5259990	0					
ANR	5260601	Identifier	username		5259990	1					
ANR	5260602	Argument	POOL_PASSWORD_USERNAME		5259990	1					
ANR	5260603	Identifier	POOL_PASSWORD_USERNAME		5259990	0					
ANR	5260604	BreakStatement	break ;	416:5:10705:10710	5259990	8	True				
ANR	5260605	Label	case 'u' :	417:4:10716:10724	5259990	9	True				
ANR	5260606	IfStatement	if ( i + 1 < argc )		5259990	10					
ANR	5260607	Condition	i + 1 < argc	418:9:10735:10744	5259990	0	True				
ANR	5260608	RelationalExpression	i + 1 < argc		5259990	0		<			
ANR	5260609	AdditiveExpression	i + 1		5259990	0		+			
ANR	5260610	Identifier	i		5259990	0					
ANR	5260611	PrimaryExpression	1		5259990	1					
ANR	5260612	Identifier	argc		5259990	1					
ANR	5260613	CompoundStatement		135:21:3067:3067	5259990	1					
ANR	5260614	IfStatement	if ( opts -> username [ 0 ] != '\\0' )		5259990	0					
ANR	5260615	Condition	opts -> username [ 0 ] != '\\0'	419:10:10759:10783	5259990	0	True				
ANR	5260616	EqualityExpression	opts -> username [ 0 ] != '\\0'		5259990	0		!=			
ANR	5260617	ArrayIndexing	opts -> username [ 0 ]		5259990	0					
ANR	5260618	PtrMemberAccess	opts -> username		5259990	0					
ANR	5260619	Identifier	opts		5259990	0					
ANR	5260620	Identifier	username		5259990	1					
ANR	5260621	PrimaryExpression	0		5259990	1					
ANR	5260622	PrimaryExpression	'\\0'		5259990	1					
ANR	5260623	CompoundStatement		136:37:3106:3106	5259990	1					
ANR	5260624	ExpressionStatement	"fprintf ( stderr , ""ERROR: only one of '-s' or '-u' may be provided\\n"" )"	420:7:10795:10863	5259990	0	True				
ANR	5260625	CallExpression	"fprintf ( stderr , ""ERROR: only one of '-s' or '-u' may be provided\\n"" )"		5259990	0					
ANR	5260626	Callee	fprintf		5259990	0					
ANR	5260627	Identifier	fprintf		5259990	0					
ANR	5260628	ArgumentList	stderr		5259990	1					
ANR	5260629	Argument	stderr		5259990	0					
ANR	5260630	Identifier	stderr		5259990	0					
ANR	5260631	Argument	"""ERROR: only one of '-s' or '-u' may be provided\\n"""		5259990	1					
ANR	5260632	PrimaryExpression	"""ERROR: only one of '-s' or '-u' may be provided\\n"""		5259990	0					
ANR	5260633	ExpressionStatement	usage ( )	421:7:10872:10879	5259990	1	True				
ANR	5260634	CallExpression	usage ( )		5259990	0					
ANR	5260635	Callee	usage		5259990	0					
ANR	5260636	Identifier	usage		5259990	0					
ANR	5260637	ArgumentList			5259990	1					
ANR	5260638	ExpressionStatement	err = true	422:7:10888:10898	5259990	2	True				
ANR	5260639	AssignmentExpression	err = true		5259990	0		=			
ANR	5260640	Identifier	err		5259990	0					
ANR	5260641	Identifier	true		5259990	1					
ANR	5260642	ElseStatement	else		5259990	0					
ANR	5260643	CompoundStatement		144:7:3324:3366	5259990	0					
ANR	5260644	ExpressionStatement	"strncpy ( opts -> username , argv [ i + 1 ] , MAX_PASSWORD_LENGTH )"	425:7:10928:10983	5259990	0	True				
ANR	5260645	CallExpression	"strncpy ( opts -> username , argv [ i + 1 ] , MAX_PASSWORD_LENGTH )"		5259990	0					
ANR	5260646	Callee	strncpy		5259990	0					
ANR	5260647	Identifier	strncpy		5259990	0					
ANR	5260648	ArgumentList	opts -> username		5259990	1					
ANR	5260649	Argument	opts -> username		5259990	0					
ANR	5260650	PtrMemberAccess	opts -> username		5259990	0					
ANR	5260651	Identifier	opts		5259990	0					
ANR	5260652	Identifier	username		5259990	1					
ANR	5260653	Argument	argv [ i + 1 ]		5259990	1					
ANR	5260654	ArrayIndexing	argv [ i + 1 ]		5259990	0					
ANR	5260655	Identifier	argv		5259990	0					
ANR	5260656	AdditiveExpression	i + 1		5259990	1		+			
ANR	5260657	Identifier	i		5259990	0					
ANR	5260658	PrimaryExpression	1		5259990	1					
ANR	5260659	Argument	MAX_PASSWORD_LENGTH		5259990	2					
ANR	5260660	Identifier	MAX_PASSWORD_LENGTH		5259990	0					
ANR	5260661	ExpressionStatement	i ++	426:7:10992:10995	5259990	1	True				
ANR	5260662	PostIncDecOperationExpression	i ++		5259990	0					
ANR	5260663	Identifier	i		5259990	0					
ANR	5260664	IncDec	++		5259990	1					
ANR	5260665	IdentifierDeclStatement	"char * at_ptr = strchr ( opts -> username , '@' ) ;"	427:7:11004:11046	5259990	2	True				
ANR	5260666	IdentifierDecl	"* at_ptr = strchr ( opts -> username , '@' )"		5259990	0					
ANR	5260667	IdentifierDeclType	char *		5259990	0					
ANR	5260668	Identifier	at_ptr		5259990	1					
ANR	5260669	AssignmentExpression	"* at_ptr = strchr ( opts -> username , '@' )"		5259990	2		=			
ANR	5260670	Identifier	at_ptr		5259990	0					
ANR	5260671	CallExpression	"strchr ( opts -> username , '@' )"		5259990	1					
ANR	5260672	Callee	strchr		5259990	0					
ANR	5260673	Identifier	strchr		5259990	0					
ANR	5260674	ArgumentList	opts -> username		5259990	1					
ANR	5260675	Argument	opts -> username		5259990	0					
ANR	5260676	PtrMemberAccess	opts -> username		5259990	0					
ANR	5260677	Identifier	opts		5259990	0					
ANR	5260678	Identifier	username		5259990	1					
ANR	5260679	Argument	'@'		5259990	1					
ANR	5260680	PrimaryExpression	'@'		5259990	0					
ANR	5260681	IfStatement	if ( at_ptr == NULL || at_ptr == opts -> username || at_ptr == opts -> username + strlen ( opts -> username ) - 1 )		5259990	3					
ANR	5260682	Condition	at_ptr == NULL || at_ptr == opts -> username || at_ptr == opts -> username + strlen ( opts -> username ) - 1	430:11:11150:11264	5259990	0	True				
ANR	5260683	OrExpression	at_ptr == NULL || at_ptr == opts -> username || at_ptr == opts -> username + strlen ( opts -> username ) - 1		5259990	0		||			
ANR	5260684	EqualityExpression	at_ptr == NULL		5259990	0		==			
ANR	5260685	Identifier	at_ptr		5259990	0					
ANR	5260686	Identifier	NULL		5259990	1					
ANR	5260687	OrExpression	at_ptr == opts -> username || at_ptr == opts -> username + strlen ( opts -> username ) - 1		5259990	1		||			
ANR	5260688	EqualityExpression	at_ptr == opts -> username		5259990	0		==			
ANR	5260689	Identifier	at_ptr		5259990	0					
ANR	5260690	PtrMemberAccess	opts -> username		5259990	1					
ANR	5260691	Identifier	opts		5259990	0					
ANR	5260692	Identifier	username		5259990	1					
ANR	5260693	EqualityExpression	at_ptr == opts -> username + strlen ( opts -> username ) - 1		5259990	1		==			
ANR	5260694	Identifier	at_ptr		5259990	0					
ANR	5260695	AdditiveExpression	opts -> username + strlen ( opts -> username ) - 1		5259990	1		+			
ANR	5260696	PtrMemberAccess	opts -> username		5259990	0					
ANR	5260697	Identifier	opts		5259990	0					
ANR	5260698	Identifier	username		5259990	1					
ANR	5260699	AdditiveExpression	strlen ( opts -> username ) - 1		5259990	1		-			
ANR	5260700	CallExpression	strlen ( opts -> username )		5259990	0					
ANR	5260701	Callee	strlen		5259990	0					
ANR	5260702	Identifier	strlen		5259990	0					
ANR	5260703	ArgumentList	opts -> username		5259990	1					
ANR	5260704	Argument	opts -> username		5259990	0					
ANR	5260705	PtrMemberAccess	opts -> username		5259990	0					
ANR	5260706	Identifier	opts		5259990	0					
ANR	5260707	Identifier	username		5259990	1					
ANR	5260708	PrimaryExpression	1		5259990	1					
ANR	5260709	CompoundStatement		149:62:3587:3587	5259990	1					
ANR	5260710	Statement	fprintf	433:8:11277:11283	5259990	0	True				
ANR	5260711	Statement	(	433:15:11284:11284	5259990	1	True				
ANR	5260712	Statement	stderr	433:16:11285:11290	5259990	2	True				
ANR	5260713	Statement	","	433:22:11291:11291	5259990	3	True				
ANR	5260714	Statement	"""ERROR: Username '%s' is not of """	433:24:11293:11325	5259990	4	True				
ANR	5260715	Statement	"""the form: account@domain\\n"""	434:12:11339:11366	5259990	5	True				
ANR	5260716	Statement	","	434:40:11367:11367	5259990	6	True				
ANR	5260717	Statement	opts	434:42:11369:11372	5259990	7	True				
ANR	5260718	Statement	->	434:46:11373:11374	5259990	8	True				
ANR	5260719	Statement	username	434:48:11375:11382	5259990	9	True				
ANR	5260720	Statement	)	434:56:11383:11383	5259990	10	True				
ANR	5260721	ExpressionStatement		434:57:11384:11384	5259990	11	True				
ANR	5260722	ExpressionStatement	usage ( )	435:8:11394:11401	5259990	12	True				
ANR	5260723	CallExpression	usage ( )		5259990	0					
ANR	5260724	Callee	usage		5259990	0					
ANR	5260725	Identifier	usage		5259990	0					
ANR	5260726	ArgumentList			5259990	1					
ANR	5260727	ElseStatement	else		5259990	0					
ANR	5260728	CompoundStatement		155:12:3752:3752	5259990	0					
ANR	5260729	ExpressionStatement	err = true	439:6:11440:11450	5259990	0	True				
ANR	5260730	AssignmentExpression	err = true		5259990	0		=			
ANR	5260731	Identifier	err		5259990	0					
ANR	5260732	Identifier	true		5259990	1					
ANR	5260733	ExpressionStatement	optionNeedsArg ( argv [ i ] )	440:6:11458:11481	5259990	1	True				
ANR	5260734	CallExpression	optionNeedsArg ( argv [ i ] )		5259990	0					
ANR	5260735	Callee	optionNeedsArg		5259990	0					
ANR	5260736	Identifier	optionNeedsArg		5259990	0					
ANR	5260737	ArgumentList	argv [ i ]		5259990	1					
ANR	5260738	Argument	argv [ i ]		5259990	0					
ANR	5260739	ArrayIndexing	argv [ i ]		5259990	0					
ANR	5260740	Identifier	argv		5259990	0					
ANR	5260741	Identifier	i		5259990	1					
ANR	5260742	BreakStatement	break ;	442:5:11495:11500	5259990	11	True				
ANR	5260743	Label	case 'f' :	444:4:11526:11534	5259990	12	True				
ANR	5260744	IfStatement	if ( i + 1 >= argc )		5259990	13					
ANR	5260745	Condition	i + 1 >= argc	445:9:11545:11555	5259990	0	True				
ANR	5260746	RelationalExpression	i + 1 >= argc		5259990	0		>=			
ANR	5260747	AdditiveExpression	i + 1		5259990	0		+			
ANR	5260748	Identifier	i		5259990	0					
ANR	5260749	PrimaryExpression	1		5259990	1					
ANR	5260750	Identifier	argc		5259990	1					
ANR	5260751	CompoundStatement		162:22:3878:3878	5259990	1					
ANR	5260752	ExpressionStatement	err = true	446:6:11566:11576	5259990	0	True				
ANR	5260753	AssignmentExpression	err = true		5259990	0		=			
ANR	5260754	Identifier	err		5259990	0					
ANR	5260755	Identifier	true		5259990	1					
ANR	5260756	ExpressionStatement	optionNeedsArg ( argv [ i ] )	447:6:11584:11607	5259990	1	True				
ANR	5260757	CallExpression	optionNeedsArg ( argv [ i ] )		5259990	0					
ANR	5260758	Callee	optionNeedsArg		5259990	0					
ANR	5260759	Identifier	optionNeedsArg		5259990	0					
ANR	5260760	ArgumentList	argv [ i ]		5259990	1					
ANR	5260761	Argument	argv [ i ]		5259990	0					
ANR	5260762	ArrayIndexing	argv [ i ]		5259990	0					
ANR	5260763	Identifier	argv		5259990	0					
ANR	5260764	Identifier	i		5259990	1					
ANR	5260765	ExpressionStatement	opts -> password_file = argv [ i + 1 ]	449:5:11621:11652	5259990	14	True				
ANR	5260766	AssignmentExpression	opts -> password_file = argv [ i + 1 ]		5259990	0		=			
ANR	5260767	PtrMemberAccess	opts -> password_file		5259990	0					
ANR	5260768	Identifier	opts		5259990	0					
ANR	5260769	Identifier	password_file		5259990	1					
ANR	5260770	ArrayIndexing	argv [ i + 1 ]		5259990	1					
ANR	5260771	Identifier	argv		5259990	0					
ANR	5260772	AdditiveExpression	i + 1		5259990	1		+			
ANR	5260773	Identifier	i		5259990	0					
ANR	5260774	PrimaryExpression	1		5259990	1					
ANR	5260775	ExpressionStatement	i ++	450:5:11659:11662	5259990	15	True				
ANR	5260776	PostIncDecOperationExpression	i ++		5259990	0					
ANR	5260777	Identifier	i		5259990	0					
ANR	5260778	IncDec	++		5259990	1					
ANR	5260779	ExpressionStatement	opts -> mode = ADD_MODE	451:5:11669:11690	5259990	16	True				
ANR	5260780	AssignmentExpression	opts -> mode = ADD_MODE		5259990	0		=			
ANR	5260781	PtrMemberAccess	opts -> mode		5259990	0					
ANR	5260782	Identifier	opts		5259990	0					
ANR	5260783	Identifier	mode		5259990	1					
ANR	5260784	Identifier	ADD_MODE		5259990	1					
ANR	5260785	BreakStatement	break ;	452:5:11697:11702	5259990	17	True				
ANR	5260786	Label	case 'd' :	454:4:11715:11723	5259990	18	True				
ANR	5260787	ExpressionStatement	Termlog = 1	455:5:11730:11741	5259990	19	True				
ANR	5260788	AssignmentExpression	Termlog = 1		5259990	0		=			
ANR	5260789	Identifier	Termlog		5259990	0					
ANR	5260790	PrimaryExpression	1		5259990	1					
ANR	5260791	ExpressionStatement	p_funcs = get_param_functions ( )	456:5:11748:11779	5259990	20	True				
ANR	5260792	AssignmentExpression	p_funcs = get_param_functions ( )		5259990	0		=			
ANR	5260793	Identifier	p_funcs		5259990	0					
ANR	5260794	CallExpression	get_param_functions ( )		5259990	1					
ANR	5260795	Callee	get_param_functions		5259990	0					
ANR	5260796	Identifier	get_param_functions		5259990	0					
ANR	5260797	ArgumentList			5259990	1					
ANR	5260798	ExpressionStatement	"dprintf_config ( ""TOOL"" , p_funcs )"	457:5:11786:11818	5259990	21	True				
ANR	5260799	CallExpression	"dprintf_config ( ""TOOL"" , p_funcs )"		5259990	0					
ANR	5260800	Callee	dprintf_config		5259990	0					
ANR	5260801	Identifier	dprintf_config		5259990	0					
ANR	5260802	ArgumentList	"""TOOL"""		5259990	1					
ANR	5260803	Argument	"""TOOL"""		5259990	0					
ANR	5260804	PrimaryExpression	"""TOOL"""		5259990	0					
ANR	5260805	Argument	p_funcs		5259990	1					
ANR	5260806	Identifier	p_funcs		5259990	0					
ANR	5260807	BreakStatement	break ;	458:5:11825:11830	5259990	22	True				
ANR	5260808	Label	case 'h' :	459:4:11836:11844	5259990	23	True				
ANR	5260809	ExpressionStatement	opts -> help = true	460:5:11851:11868	5259990	24	True				
ANR	5260810	AssignmentExpression	opts -> help = true		5259990	0		=			
ANR	5260811	PtrMemberAccess	opts -> help		5259990	0					
ANR	5260812	Identifier	opts		5259990	0					
ANR	5260813	Identifier	help		5259990	1					
ANR	5260814	Identifier	true		5259990	1					
ANR	5260815	BreakStatement	break ;	461:5:11875:11880	5259990	25	True				
ANR	5260816	Label	default :	462:4:11886:11893	5259990	26	True				
ANR	5260817	Identifier	default		5259990	0					
ANR	5260818	ExpressionStatement	err = true	463:5:11900:11910	5259990	27	True				
ANR	5260819	AssignmentExpression	err = true		5259990	0		=			
ANR	5260820	Identifier	err		5259990	0					
ANR	5260821	Identifier	true		5259990	1					
ANR	5260822	ExpressionStatement	badOption ( argv [ i ] )	464:5:11917:11935	5259990	28	True				
ANR	5260823	CallExpression	badOption ( argv [ i ] )		5259990	0					
ANR	5260824	Callee	badOption		5259990	0					
ANR	5260825	Identifier	badOption		5259990	0					
ANR	5260826	ArgumentList	argv [ i ]		5259990	1					
ANR	5260827	Argument	argv [ i ]		5259990	0					
ANR	5260828	ArrayIndexing	argv [ i ]		5259990	0					
ANR	5260829	Identifier	argv		5259990	0					
ANR	5260830	Identifier	i		5259990	1					
ANR	5260831	BreakStatement	break ;	466:3:11945:11950	5259990	18	True				
ANR	5260832	Label	default :	467:2:11976:11983	5259990	19	True				
ANR	5260833	Identifier	default		5259990	0					
ANR	5260834	ExpressionStatement	err = true	468:3:11988:11998	5259990	20	True				
ANR	5260835	AssignmentExpression	err = true		5259990	0		=			
ANR	5260836	Identifier	err		5259990	0					
ANR	5260837	Identifier	true		5259990	1					
ANR	5260838	ExpressionStatement	badCommand ( argv [ i ] )	469:3:12003:12022	5259990	21	True				
ANR	5260839	CallExpression	badCommand ( argv [ i ] )		5259990	0					
ANR	5260840	Callee	badCommand		5259990	0					
ANR	5260841	Identifier	badCommand		5259990	0					
ANR	5260842	ArgumentList	argv [ i ]		5259990	1					
ANR	5260843	Argument	argv [ i ]		5259990	0					
ANR	5260844	ArrayIndexing	argv [ i ]		5259990	0					
ANR	5260845	Identifier	argv		5259990	0					
ANR	5260846	Identifier	i		5259990	1					
ANR	5260847	BreakStatement	break ;	470:3:12027:12032	5259990	22	True				
ANR	5260848	ReturnStatement	return ! err ;	474:1:12043:12054	5259990	11	True				
ANR	5260849	UnaryOperationExpression	! err		5259990	0					
ANR	5260850	UnaryOperator	!		5259990	0					
ANR	5260851	Identifier	err		5259990	1					
ANR	5260852	ReturnType	bool		5259990	1					
ANR	5260853	Identifier	parseCommandLine		5259990	2					
ANR	5260854	ParameterList	"StoreCredOptions * opts , int argc , char * argv [ ]"		5259990	3					
ANR	5260855	Parameter	StoreCredOptions * opts	284:17:7631:7652	5259990	0	True				
ANR	5260856	ParameterType	StoreCredOptions *		5259990	0					
ANR	5260857	Identifier	opts		5259990	1					
ANR	5260858	Parameter	int argc	284:41:7655:7662	5259990	1	True				
ANR	5260859	ParameterType	int		5259990	0					
ANR	5260860	Identifier	argc		5259990	1					
ANR	5260861	Parameter	char * argv [ ]	284:51:7665:7676	5259990	2	True				
ANR	5260862	ParameterType	char * [ ]		5259990	0					
ANR	5260863	Identifier	argv		5259990	1					
ANR	5260864	CFGEntryNode	ENTRY		5259990		True				
ANR	5260865	CFGExitNode	EXIT		5259990		True				
ANR	5260866	Symbol	QUERY_CREDENTIAL		5259990						
ANR	5260867	Symbol	DELETE_MODE		5259990						
ANR	5260868	Symbol	opts -> mode		5259990						
ANR	5260869	Symbol	strchr		5259990						
ANR	5260870	Symbol	p_funcs		5259990						
ANR	5260871	Symbol	* argv		5259990						
ANR	5260872	Symbol	argv		5259990						
ANR	5260873	Symbol	opts -> password_file		5259990						
ANR	5260874	Symbol	ADD_CREDENTIAL		5259990						
ANR	5260875	Symbol	CONFIG_CREDENTIAL		5259990						
ANR	5260876	Symbol	strlen		5259990						
ANR	5260877	Symbol	opts		5259990						
ANR	5260878	Symbol	* * opts		5259990						
ANR	5260879	Symbol	* * argv		5259990						
ANR	5260880	Symbol	strcasecmp		5259990						
ANR	5260881	Symbol	ADD_MODE		5259990						
ANR	5260882	Symbol	opts -> daemonname		5259990						
ANR	5260883	Symbol	CONFIG_MODE		5259990						
ANR	5260884	Symbol	* MAX_PASSWORD_LENGTH		5259990						
ANR	5260885	Symbol	argc		5259990						
ANR	5260886	Symbol	* * i		5259990						
ANR	5260887	Symbol	NULL		5259990						
ANR	5260888	Symbol	opts -> username		5259990						
ANR	5260889	Symbol	err		5259990						
ANR	5260890	Symbol	* opts -> pw		5259990						
ANR	5260891	Symbol	Termlog		5259990						
ANR	5260892	Symbol	get_param_functions		5259990						
ANR	5260893	Symbol	opts -> help		5259990						
ANR	5260894	Symbol	false		5259990						
ANR	5260895	Symbol	i		5259990						
ANR	5260896	Symbol	get_daemon_name		5259990						
ANR	5260897	Symbol	stderr		5259990						
ANR	5260898	Symbol	DELETE_CREDENTIAL		5259990						
ANR	5260899	Symbol	* i		5259990						
ANR	5260900	Symbol	* opts		5259990						
ANR	5260901	Symbol	POOL_PASSWORD_USERNAME		5259990						
ANR	5260902	Symbol	* opts -> username		5259990						
ANR	5260903	Symbol	at_ptr		5259990						
ANR	5260904	Symbol	true		5259990						
ANR	5260905	Symbol	opts -> pw		5259990						
ANR	5260906	Symbol	QUERY_MODE		5259990						
ANR	5260907	Symbol	MAX_PASSWORD_LENGTH		5259990						
ANR	5260908	Function	badCommand	477:0:12059:12177							
ANR	5260909	FunctionDef	badCommand (const char * command)		5260908	0					
ANR	5260910	CompoundStatement		478:32:12096:12177	5260908	0					
ANR	5260911	ExpressionStatement	"fprintf ( stderr , ""ERROR: Unrecognized command - '%s'\\n\\n"" , command )"	479:1:12099:12165	5260908	0	True				
ANR	5260912	CallExpression	"fprintf ( stderr , ""ERROR: Unrecognized command - '%s'\\n\\n"" , command )"		5260908	0					
ANR	5260913	Callee	fprintf		5260908	0					
ANR	5260914	Identifier	fprintf		5260908	0					
ANR	5260915	ArgumentList	stderr		5260908	1					
ANR	5260916	Argument	stderr		5260908	0					
ANR	5260917	Identifier	stderr		5260908	0					
ANR	5260918	Argument	"""ERROR: Unrecognized command - '%s'\\n\\n"""		5260908	1					
ANR	5260919	PrimaryExpression	"""ERROR: Unrecognized command - '%s'\\n\\n"""		5260908	0					
ANR	5260920	Argument	command		5260908	2					
ANR	5260921	Identifier	command		5260908	0					
ANR	5260922	ExpressionStatement	usage ( )	480:1:12168:12175	5260908	1	True				
ANR	5260923	CallExpression	usage ( )		5260908	0					
ANR	5260924	Callee	usage		5260908	0					
ANR	5260925	Identifier	usage		5260908	0					
ANR	5260926	ArgumentList			5260908	1					
ANR	5260927	ReturnType	void		5260908	1					
ANR	5260928	Identifier	badCommand		5260908	2					
ANR	5260929	ParameterList	const char * command		5260908	3					
ANR	5260930	Parameter	const char * command	478:11:12075:12093	5260908	0	True				
ANR	5260931	ParameterType	const char *		5260908	0					
ANR	5260932	Identifier	command		5260908	1					
ANR	5260933	CFGEntryNode	ENTRY		5260908		True				
ANR	5260934	CFGExitNode	EXIT		5260908		True				
ANR	5260935	Symbol	stderr		5260908						
ANR	5260936	Symbol	command		5260908						
ANR	5260937	Function	badOption	483:0:12180:12294							
ANR	5260938	FunctionDef	badOption (const char * option)		5260937	0					
ANR	5260939	CompoundStatement		484:30:12215:12294	5260937	0					
ANR	5260940	ExpressionStatement	"fprintf ( stderr , ""ERROR: Unrecognized option - '%s'\\n\\n"" , option )"	485:1:12218:12282	5260937	0	True				
ANR	5260941	CallExpression	"fprintf ( stderr , ""ERROR: Unrecognized option - '%s'\\n\\n"" , option )"		5260937	0					
ANR	5260942	Callee	fprintf		5260937	0					
ANR	5260943	Identifier	fprintf		5260937	0					
ANR	5260944	ArgumentList	stderr		5260937	1					
ANR	5260945	Argument	stderr		5260937	0					
ANR	5260946	Identifier	stderr		5260937	0					
ANR	5260947	Argument	"""ERROR: Unrecognized option - '%s'\\n\\n"""		5260937	1					
ANR	5260948	PrimaryExpression	"""ERROR: Unrecognized option - '%s'\\n\\n"""		5260937	0					
ANR	5260949	Argument	option		5260937	2					
ANR	5260950	Identifier	option		5260937	0					
ANR	5260951	ExpressionStatement	usage ( )	486:1:12285:12292	5260937	1	True				
ANR	5260952	CallExpression	usage ( )		5260937	0					
ANR	5260953	Callee	usage		5260937	0					
ANR	5260954	Identifier	usage		5260937	0					
ANR	5260955	ArgumentList			5260937	1					
ANR	5260956	ReturnType	void		5260937	1					
ANR	5260957	Identifier	badOption		5260937	2					
ANR	5260958	ParameterList	const char * option		5260937	3					
ANR	5260959	Parameter	const char * option	484:10:12195:12212	5260937	0	True				
ANR	5260960	ParameterType	const char *		5260937	0					
ANR	5260961	Identifier	option		5260937	1					
ANR	5260962	CFGEntryNode	ENTRY		5260937		True				
ANR	5260963	CFGExitNode	EXIT		5260937		True				
ANR	5260964	Symbol	stderr		5260937						
ANR	5260965	Symbol	option		5260937						
ANR	5260966	Function	optionNeedsArg	489:0:12297:12422							
ANR	5260967	FunctionDef	optionNeedsArg (const char * option)		5260966	0					
ANR	5260968	CompoundStatement		491:0:12337:12422	5260966	0					
ANR	5260969	ExpressionStatement	"fprintf ( stderr , ""ERROR: Option '%s' requires an argument\\n\\n"" , option )"	492:1:12340:12410	5260966	0	True				
ANR	5260970	CallExpression	"fprintf ( stderr , ""ERROR: Option '%s' requires an argument\\n\\n"" , option )"		5260966	0					
ANR	5260971	Callee	fprintf		5260966	0					
ANR	5260972	Identifier	fprintf		5260966	0					
ANR	5260973	ArgumentList	stderr		5260966	1					
ANR	5260974	Argument	stderr		5260966	0					
ANR	5260975	Identifier	stderr		5260966	0					
ANR	5260976	Argument	"""ERROR: Option '%s' requires an argument\\n\\n"""		5260966	1					
ANR	5260977	PrimaryExpression	"""ERROR: Option '%s' requires an argument\\n\\n"""		5260966	0					
ANR	5260978	Argument	option		5260966	2					
ANR	5260979	Identifier	option		5260966	0					
ANR	5260980	ExpressionStatement	usage ( )	493:1:12413:12420	5260966	1	True				
ANR	5260981	CallExpression	usage ( )		5260966	0					
ANR	5260982	Callee	usage		5260966	0					
ANR	5260983	Identifier	usage		5260966	0					
ANR	5260984	ArgumentList			5260966	1					
ANR	5260985	ReturnType	void		5260966	1					
ANR	5260986	Identifier	optionNeedsArg		5260966	2					
ANR	5260987	ParameterList	const char * option		5260966	3					
ANR	5260988	Parameter	const char * option	490:15:12317:12334	5260966	0	True				
ANR	5260989	ParameterType	const char *		5260966	0					
ANR	5260990	Identifier	option		5260966	1					
ANR	5260991	CFGEntryNode	ENTRY		5260966		True				
ANR	5260992	CFGExitNode	EXIT		5260966		True				
ANR	5260993	Symbol	stderr		5260966						
ANR	5260994	Symbol	option		5260966						
ANR	5260995	Function	usage	496:0:12425:13507							
ANR	5260996	FunctionDef	usage ()		5260995	0					
ANR	5260997	CompoundStatement		498:0:12438:13507	5260995	0					
ANR	5260998	ExpressionStatement	"fprintf ( stderr , ""Usage: %s [options] action\\n"" , MyName )"	499:1:12441:12498	5260995	0	True				
ANR	5260999	CallExpression	"fprintf ( stderr , ""Usage: %s [options] action\\n"" , MyName )"		5260995	0					
ANR	5261000	Callee	fprintf		5260995	0					
ANR	5261001	Identifier	fprintf		5260995	0					
ANR	5261002	ArgumentList	stderr		5260995	1					
ANR	5261003	Argument	stderr		5260995	0					
ANR	5261004	Identifier	stderr		5260995	0					
ANR	5261005	Argument	"""Usage: %s [options] action\\n"""		5260995	1					
ANR	5261006	PrimaryExpression	"""Usage: %s [options] action\\n"""		5260995	0					
ANR	5261007	Argument	MyName		5260995	2					
ANR	5261008	Identifier	MyName		5260995	0					
ANR	5261009	ExpressionStatement	"fprintf ( stderr , ""  where action is one of:\\n"" )"	500:1:12501:12549	5260995	1	True				
ANR	5261010	CallExpression	"fprintf ( stderr , ""  where action is one of:\\n"" )"		5260995	0					
ANR	5261011	Callee	fprintf		5260995	0					
ANR	5261012	Identifier	fprintf		5260995	0					
ANR	5261013	ArgumentList	stderr		5260995	1					
ANR	5261014	Argument	stderr		5260995	0					
ANR	5261015	Identifier	stderr		5260995	0					
ANR	5261016	Argument	"""  where action is one of:\\n"""		5260995	1					
ANR	5261017	PrimaryExpression	"""  where action is one of:\\n"""		5260995	0					
ANR	5261018	ExpressionStatement	"fprintf ( stderr , ""    add               (Add credential to secure storage)\\n"" )"	501:1:12552:12631	5260995	2	True				
ANR	5261019	CallExpression	"fprintf ( stderr , ""    add               (Add credential to secure storage)\\n"" )"		5260995	0					
ANR	5261020	Callee	fprintf		5260995	0					
ANR	5261021	Identifier	fprintf		5260995	0					
ANR	5261022	ArgumentList	stderr		5260995	1					
ANR	5261023	Argument	stderr		5260995	0					
ANR	5261024	Identifier	stderr		5260995	0					
ANR	5261025	Argument	"""    add               (Add credential to secure storage)\\n"""		5260995	1					
ANR	5261026	PrimaryExpression	"""    add               (Add credential to secure storage)\\n"""		5260995	0					
ANR	5261027	ExpressionStatement	"fprintf ( stderr , ""    delete            (Remove credential from secure storage)\\n"" )"	502:1:12634:12718	5260995	3	True				
ANR	5261028	CallExpression	"fprintf ( stderr , ""    delete            (Remove credential from secure storage)\\n"" )"		5260995	0					
ANR	5261029	Callee	fprintf		5260995	0					
ANR	5261030	Identifier	fprintf		5260995	0					
ANR	5261031	ArgumentList	stderr		5260995	1					
ANR	5261032	Argument	stderr		5260995	0					
ANR	5261033	Identifier	stderr		5260995	0					
ANR	5261034	Argument	"""    delete            (Remove credential from secure storage)\\n"""		5260995	1					
ANR	5261035	PrimaryExpression	"""    delete            (Remove credential from secure storage)\\n"""		5260995	0					
ANR	5261036	ExpressionStatement	"fprintf ( stderr , ""    query             (Check if a credential has been stored)\\n"" )"	503:1:12721:12805	5260995	4	True				
ANR	5261037	CallExpression	"fprintf ( stderr , ""    query             (Check if a credential has been stored)\\n"" )"		5260995	0					
ANR	5261038	Callee	fprintf		5260995	0					
ANR	5261039	Identifier	fprintf		5260995	0					
ANR	5261040	ArgumentList	stderr		5260995	1					
ANR	5261041	Argument	stderr		5260995	0					
ANR	5261042	Identifier	stderr		5260995	0					
ANR	5261043	Argument	"""    query             (Check if a credential has been stored)\\n"""		5260995	1					
ANR	5261044	PrimaryExpression	"""    query             (Check if a credential has been stored)\\n"""		5260995	0					
ANR	5261045	ExpressionStatement	"fprintf ( stderr , ""  and where [options] is one or more of:\\n"" )"	504:1:12808:12871	5260995	5	True				
ANR	5261046	CallExpression	"fprintf ( stderr , ""  and where [options] is one or more of:\\n"" )"		5260995	0					
ANR	5261047	Callee	fprintf		5260995	0					
ANR	5261048	Identifier	fprintf		5260995	0					
ANR	5261049	ArgumentList	stderr		5260995	1					
ANR	5261050	Argument	stderr		5260995	0					
ANR	5261051	Identifier	stderr		5260995	0					
ANR	5261052	Argument	"""  and where [options] is one or more of:\\n"""		5260995	1					
ANR	5261053	PrimaryExpression	"""  and where [options] is one or more of:\\n"""		5260995	0					
ANR	5261054	ExpressionStatement	"fprintf ( stderr , ""    -u username       (use the specified username)\\n"" )"	505:1:12874:12947	5260995	6	True				
ANR	5261055	CallExpression	"fprintf ( stderr , ""    -u username       (use the specified username)\\n"" )"		5260995	0					
ANR	5261056	Callee	fprintf		5260995	0					
ANR	5261057	Identifier	fprintf		5260995	0					
ANR	5261058	ArgumentList	stderr		5260995	1					
ANR	5261059	Argument	stderr		5260995	0					
ANR	5261060	Identifier	stderr		5260995	0					
ANR	5261061	Argument	"""    -u username       (use the specified username)\\n"""		5260995	1					
ANR	5261062	PrimaryExpression	"""    -u username       (use the specified username)\\n"""		5260995	0					
ANR	5261063	ExpressionStatement	"fprintf ( stderr , ""    -c                (update/query the condor pool password)\\n"" )"	506:1:12950:13033	5260995	7	True				
ANR	5261064	CallExpression	"fprintf ( stderr , ""    -c                (update/query the condor pool password)\\n"" )"		5260995	0					
ANR	5261065	Callee	fprintf		5260995	0					
ANR	5261066	Identifier	fprintf		5260995	0					
ANR	5261067	ArgumentList	stderr		5260995	1					
ANR	5261068	Argument	stderr		5260995	0					
ANR	5261069	Identifier	stderr		5260995	0					
ANR	5261070	Argument	"""    -c                (update/query the condor pool password)\\n"""		5260995	1					
ANR	5261071	PrimaryExpression	"""    -c                (update/query the condor pool password)\\n"""		5260995	0					
ANR	5261072	ExpressionStatement	"fprintf ( stderr , ""    -p password       (use the specified password rather than prompting)\\n"" )"	507:1:13036:13131	5260995	8	True				
ANR	5261073	CallExpression	"fprintf ( stderr , ""    -p password       (use the specified password rather than prompting)\\n"" )"		5260995	0					
ANR	5261074	Callee	fprintf		5260995	0					
ANR	5261075	Identifier	fprintf		5260995	0					
ANR	5261076	ArgumentList	stderr		5260995	1					
ANR	5261077	Argument	stderr		5260995	0					
ANR	5261078	Identifier	stderr		5260995	0					
ANR	5261079	Argument	"""    -p password       (use the specified password rather than prompting)\\n"""		5260995	1					
ANR	5261080	PrimaryExpression	"""    -p password       (use the specified password rather than prompting)\\n"""		5260995	0					
ANR	5261081	ExpressionStatement	"fprintf ( stderr , ""    -n name           (update/query to the named machine)\\n"" )"	508:1:13134:13214	5260995	9	True				
ANR	5261082	CallExpression	"fprintf ( stderr , ""    -n name           (update/query to the named machine)\\n"" )"		5260995	0					
ANR	5261083	Callee	fprintf		5260995	0					
ANR	5261084	Identifier	fprintf		5260995	0					
ANR	5261085	ArgumentList	stderr		5260995	1					
ANR	5261086	Argument	stderr		5260995	0					
ANR	5261087	Identifier	stderr		5260995	0					
ANR	5261088	Argument	"""    -n name           (update/query to the named machine)\\n"""		5260995	1					
ANR	5261089	PrimaryExpression	"""    -n name           (update/query to the named machine)\\n"""		5260995	0					
ANR	5261090	ExpressionStatement	"fprintf ( stderr , ""    -f filename       (generate a pool password file)\\n"" )"	510:1:13237:13313	5260995	10	True				
ANR	5261091	CallExpression	"fprintf ( stderr , ""    -f filename       (generate a pool password file)\\n"" )"		5260995	0					
ANR	5261092	Callee	fprintf		5260995	0					
ANR	5261093	Identifier	fprintf		5260995	0					
ANR	5261094	ArgumentList	stderr		5260995	1					
ANR	5261095	Argument	stderr		5260995	0					
ANR	5261096	Identifier	stderr		5260995	0					
ANR	5261097	Argument	"""    -f filename       (generate a pool password file)\\n"""		5260995	1					
ANR	5261098	PrimaryExpression	"""    -f filename       (generate a pool password file)\\n"""		5260995	0					
ANR	5261099	ExpressionStatement	"fprintf ( stderr , ""    -d                (display debugging messages)\\n"" )"	512:1:13323:13396	5260995	11	True				
ANR	5261100	CallExpression	"fprintf ( stderr , ""    -d                (display debugging messages)\\n"" )"		5260995	0					
ANR	5261101	Callee	fprintf		5260995	0					
ANR	5261102	Identifier	fprintf		5260995	0					
ANR	5261103	ArgumentList	stderr		5260995	1					
ANR	5261104	Argument	stderr		5260995	0					
ANR	5261105	Identifier	stderr		5260995	0					
ANR	5261106	Argument	"""    -d                (display debugging messages)\\n"""		5260995	1					
ANR	5261107	PrimaryExpression	"""    -d                (display debugging messages)\\n"""		5260995	0					
ANR	5261108	ExpressionStatement	"fprintf ( stderr , ""    -h                (display this message)\\n"" )"	513:1:13399:13466	5260995	12	True				
ANR	5261109	CallExpression	"fprintf ( stderr , ""    -h                (display this message)\\n"" )"		5260995	0					
ANR	5261110	Callee	fprintf		5260995	0					
ANR	5261111	Identifier	fprintf		5260995	0					
ANR	5261112	ArgumentList	stderr		5260995	1					
ANR	5261113	Argument	stderr		5260995	0					
ANR	5261114	Identifier	stderr		5260995	0					
ANR	5261115	Argument	"""    -h                (display this message)\\n"""		5260995	1					
ANR	5261116	PrimaryExpression	"""    -h                (display this message)\\n"""		5260995	0					
ANR	5261117	ExpressionStatement	"fprintf ( stderr , ""\\n"" )"	514:1:13469:13492	5260995	13	True				
ANR	5261118	CallExpression	"fprintf ( stderr , ""\\n"" )"		5260995	0					
ANR	5261119	Callee	fprintf		5260995	0					
ANR	5261120	Identifier	fprintf		5260995	0					
ANR	5261121	ArgumentList	stderr		5260995	1					
ANR	5261122	Argument	stderr		5260995	0					
ANR	5261123	Identifier	stderr		5260995	0					
ANR	5261124	Argument	"""\\n"""		5260995	1					
ANR	5261125	PrimaryExpression	"""\\n"""		5260995	0					
ANR	5261126	ExpressionStatement	exit ( 1 )	516:1:13496:13505	5260995	14	True				
ANR	5261127	CallExpression	exit ( 1 )		5260995	0					
ANR	5261128	Callee	exit		5260995	0					
ANR	5261129	Identifier	exit		5260995	0					
ANR	5261130	ArgumentList	1		5260995	1					
ANR	5261131	Argument	1		5260995	0					
ANR	5261132	PrimaryExpression	1		5260995	0					
ANR	5261133	ReturnType	void		5260995	1					
ANR	5261134	Identifier	usage		5260995	2					
ANR	5261135	ParameterList			5260995	3					
ANR	5261136	CFGEntryNode	ENTRY		5260995		True				
ANR	5261137	CFGExitNode	EXIT		5260995		True				
ANR	5261138	Symbol	MyName		5260995						
ANR	5261139	Symbol	stderr		5260995						
ANR	5261140	Function	goAheadAnyways	519:0:13511:13912							
ANR	5261141	FunctionDef	goAheadAnyways ()		5261140	0					
ANR	5261142	CompoundStatement		521:0:13533:13912	5261140	0					
ANR	5261143	Statement	printf	522:1:13536:13541	5261140	0	True				
ANR	5261144	Statement	(	522:7:13542:13542	5261140	1	True				
ANR	5261145	Statement	"""WARNING: Continuing will result in your password """	522:8:13543:13593	5261140	2	True				
ANR	5261146	Statement	"""being sent in the clear!\\n"""	523:5:13600:13627	5261140	3	True				
ANR	5261147	Statement	"""  Do you want to continue? [y/N] """	524:5:13634:13668	5261140	4	True				
ANR	5261148	Statement	)	524:40:13669:13669	5261140	5	True				
ANR	5261149	ExpressionStatement		524:41:13670:13670	5261140	6	True				
ANR	5261150	ExpressionStatement	fflush ( stdout )	525:1:13673:13687	5261140	7	True				
ANR	5261151	CallExpression	fflush ( stdout )		5261140	0					
ANR	5261152	Callee	fflush		5261140	0					
ANR	5261153	Identifier	fflush		5261140	0					
ANR	5261154	ArgumentList	stdout		5261140	1					
ANR	5261155	Argument	stdout		5261140	0					
ANR	5261156	Identifier	stdout		5261140	0					
ANR	5261157	IdentifierDeclStatement	const int BUFSIZE = 10 ;	527:1:13691:13713	5261140	8	True				
ANR	5261158	IdentifierDecl	BUFSIZE = 10		5261140	0					
ANR	5261159	IdentifierDeclType	const int		5261140	0					
ANR	5261160	Identifier	BUFSIZE		5261140	1					
ANR	5261161	AssignmentExpression	BUFSIZE = 10		5261140	2		=			
ANR	5261162	Identifier	BUFSIZE		5261140	0					
ANR	5261163	PrimaryExpression	10		5261140	1					
ANR	5261164	IdentifierDeclStatement	char buf [ BUFSIZE ] ;	528:1:13716:13733	5261140	9	True				
ANR	5261165	IdentifierDecl	buf [ BUFSIZE ]		5261140	0					
ANR	5261166	IdentifierDeclType	char [ BUFSIZE ]		5261140	0					
ANR	5261167	Identifier	buf		5261140	1					
ANR	5261168	Identifier	BUFSIZE		5261140	2					
ANR	5261169	IdentifierDeclStatement	"bool result = read_from_keyboard ( buf , BUFSIZE ) ;"	529:1:13736:13782	5261140	10	True				
ANR	5261170	IdentifierDecl	"result = read_from_keyboard ( buf , BUFSIZE )"		5261140	0					
ANR	5261171	IdentifierDeclType	bool		5261140	0					
ANR	5261172	Identifier	result		5261140	1					
ANR	5261173	AssignmentExpression	"result = read_from_keyboard ( buf , BUFSIZE )"		5261140	2		=			
ANR	5261174	Identifier	result		5261140	0					
ANR	5261175	CallExpression	"read_from_keyboard ( buf , BUFSIZE )"		5261140	1					
ANR	5261176	Callee	read_from_keyboard		5261140	0					
ANR	5261177	Identifier	read_from_keyboard		5261140	0					
ANR	5261178	ArgumentList	buf		5261140	1					
ANR	5261179	Argument	buf		5261140	0					
ANR	5261180	Identifier	buf		5261140	0					
ANR	5261181	Argument	BUFSIZE		5261140	1					
ANR	5261182	Identifier	BUFSIZE		5261140	0					
ANR	5261183	ExpressionStatement	"printf ( ""\\n\\n"" )"	530:1:13785:13799	5261140	11	True				
ANR	5261184	CallExpression	"printf ( ""\\n\\n"" )"		5261140	0					
ANR	5261185	Callee	printf		5261140	0					
ANR	5261186	Identifier	printf		5261140	0					
ANR	5261187	ArgumentList	"""\\n\\n"""		5261140	1					
ANR	5261188	Argument	"""\\n\\n"""		5261140	0					
ANR	5261189	PrimaryExpression	"""\\n\\n"""		5261140	0					
ANR	5261190	IfStatement	if ( ! result )		5261140	12					
ANR	5261191	Condition	! result	531:5:13806:13812	5261140	0	True				
ANR	5261192	UnaryOperationExpression	! result		5261140	0					
ANR	5261193	UnaryOperator	!		5261140	0					
ANR	5261194	Identifier	result		5261140	1					
ANR	5261195	CompoundStatement		11:14:281:281	5261140	1					
ANR	5261196	ReturnStatement	return false ;	532:2:13819:13831	5261140	0	True				
ANR	5261197	Identifier	false		5261140	0					
ANR	5261198	IfStatement	if ( ( buf [ 0 ] == 'y' ) || ( buf [ 0 ] == 'Y' ) )		5261140	13					
ANR	5261199	Condition	( buf [ 0 ] == 'y' ) || ( buf [ 0 ] == 'Y' )	534:5:13841:13874	5261140	0	True				
ANR	5261200	OrExpression	( buf [ 0 ] == 'y' ) || ( buf [ 0 ] == 'Y' )		5261140	0		||			
ANR	5261201	EqualityExpression	buf [ 0 ] == 'y'		5261140	0		==			
ANR	5261202	ArrayIndexing	buf [ 0 ]		5261140	0					
ANR	5261203	Identifier	buf		5261140	0					
ANR	5261204	PrimaryExpression	0		5261140	1					
ANR	5261205	PrimaryExpression	'y'		5261140	1					
ANR	5261206	EqualityExpression	buf [ 0 ] == 'Y'		5261140	1		==			
ANR	5261207	ArrayIndexing	buf [ 0 ]		5261140	0					
ANR	5261208	Identifier	buf		5261140	0					
ANR	5261209	PrimaryExpression	0		5261140	1					
ANR	5261210	PrimaryExpression	'Y'		5261140	1					
ANR	5261211	CompoundStatement		14:41:343:343	5261140	1					
ANR	5261212	ReturnStatement	return true ;	535:2:13881:13892	5261140	0	True				
ANR	5261213	Identifier	true		5261140	0					
ANR	5261214	ReturnStatement	return false ;	537:1:13898:13910	5261140	14	True				
ANR	5261215	Identifier	false		5261140	0					
ANR	5261216	ReturnType	bool		5261140	1					
ANR	5261217	Identifier	goAheadAnyways		5261140	2					
ANR	5261218	ParameterList			5261140	3					
ANR	5261219	CFGEntryNode	ENTRY		5261140		True				
ANR	5261220	CFGExitNode	EXIT		5261140		True				
ANR	5261221	Symbol	result		5261140						
ANR	5261222	Symbol	buf		5261140						
ANR	5261223	Symbol	* buf		5261140						
ANR	5261224	Symbol	stdout		5261140						
ANR	5261225	Symbol	false		5261140						
ANR	5261226	Symbol	true		5261140						
ANR	5261227	Symbol	BUFSIZE		5261140						
ANR	5261228	Symbol	read_from_keyboard		5261140						
