command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	643033	File	data/converged/CVE-2011-4930_htcondor/attrrefs.cpp								
ANR	643034	Function	AttributeReference :: AttributeReference	28:0:912:1015							
ANR	643035	FunctionDef	AttributeReference :: AttributeReference ()		643034	0					
ANR	643036	CompoundStatement		30:0:954:1015	643034	0					
ANR	643037	ExpressionStatement	nodeKind = ATTRREF_NODE	31:1:957:980	643034	0	True				
ANR	643038	AssignmentExpression	nodeKind = ATTRREF_NODE		643034	0		=			
ANR	643039	Identifier	nodeKind		643034	0					
ANR	643040	Identifier	ATTRREF_NODE		643034	1					
ANR	643041	ExpressionStatement	expr = NULL	32:1:983:994	643034	1	True				
ANR	643042	AssignmentExpression	expr = NULL		643034	0		=			
ANR	643043	Identifier	expr		643034	0					
ANR	643044	Identifier	NULL		643034	1					
ANR	643045	ExpressionStatement	absolute = false	33:1:997:1013	643034	2	True				
ANR	643046	AssignmentExpression	absolute = false		643034	0		=			
ANR	643047	Identifier	absolute		643034	0					
ANR	643048	Identifier	false		643034	1					
ANR	643049	Identifier	AttributeReference :: AttributeReference		643034	1					
ANR	643050	ParameterList			643034	2					
ANR	643051	CFGEntryNode	ENTRY		643034		True				
ANR	643052	CFGExitNode	EXIT		643034		True				
ANR	643053	Symbol	NULL		643034						
ANR	643054	Symbol	ATTRREF_NODE		643034						
ANR	643055	Symbol	absolute		643034						
ANR	643056	Symbol	false		643034						
ANR	643057	Symbol	nodeKind		643034						
ANR	643058	Symbol	expr		643034						
ANR	643059	Function	AttributeReference :: AttributeReference	38:0:1080:1265							
ANR	643060	FunctionDef	"AttributeReference :: AttributeReference (ExprTree * tree , const string & attrname , bool absolut)"		643059	0					
ANR	643061	CompoundStatement		40:0:1176:1265	643059	0					
ANR	643062	ExpressionStatement	nodeKind = ATTRREF_NODE	41:1:1179:1202	643059	0	True				
ANR	643063	AssignmentExpression	nodeKind = ATTRREF_NODE		643059	0		=			
ANR	643064	Identifier	nodeKind		643059	0					
ANR	643065	Identifier	ATTRREF_NODE		643059	1					
ANR	643066	ExpressionStatement	attributeStr = attrname	42:1:1205:1228	643059	1	True				
ANR	643067	AssignmentExpression	attributeStr = attrname		643059	0		=			
ANR	643068	Identifier	attributeStr		643059	0					
ANR	643069	Identifier	attrname		643059	1					
ANR	643070	ExpressionStatement	expr = tree	43:1:1231:1242	643059	2	True				
ANR	643071	AssignmentExpression	expr = tree		643059	0		=			
ANR	643072	Identifier	expr		643059	0					
ANR	643073	Identifier	tree		643059	1					
ANR	643074	ExpressionStatement	absolute = absolut	44:1:1245:1263	643059	3	True				
ANR	643075	AssignmentExpression	absolute = absolut		643059	0		=			
ANR	643076	Identifier	absolute		643059	0					
ANR	643077	Identifier	absolut		643059	1					
ANR	643078	Identifier	AttributeReference :: AttributeReference		643059	1					
ANR	643079	ParameterList	"ExprTree * tree , const string & attrname , bool absolut"		643059	2					
ANR	643080	Parameter	ExprTree * tree	39:20:1121:1134	643059	0	True				
ANR	643081	ParameterType	ExprTree *		643059	0					
ANR	643082	Identifier	tree		643059	1					
ANR	643083	Parameter	const string & attrname	39:36:1137:1158	643059	1	True				
ANR	643084	ParameterType	const string &		643059	0					
ANR	643085	Identifier	attrname		643059	1					
ANR	643086	Parameter	bool absolut	39:60:1161:1172	643059	2	True				
ANR	643087	ParameterType	bool		643059	0					
ANR	643088	Identifier	absolut		643059	1					
ANR	643089	CFGEntryNode	ENTRY		643059		True				
ANR	643090	CFGExitNode	EXIT		643059		True				
ANR	643091	Symbol	ATTRREF_NODE		643059						
ANR	643092	Symbol	absolute		643059						
ANR	643093	Symbol	tree		643059						
ANR	643094	Symbol	nodeKind		643059						
ANR	643095	Symbol	expr		643059						
ANR	643096	Symbol	attrname		643059						
ANR	643097	Symbol	attributeStr		643059						
ANR	643098	Symbol	absolut		643059						
ANR	643099	Function	AttributeReference :: AttributeReference	47:0:1268:1372							
ANR	643100	FunctionDef	AttributeReference :: AttributeReference (const AttributeReference & ref)		643099	0					
ANR	643101	CompoundStatement		49:0:1339:1372	643099	0					
ANR	643102	ExpressionStatement	CopyFrom ( ref )	50:4:1345:1358	643099	0	True				
ANR	643103	CallExpression	CopyFrom ( ref )		643099	0					
ANR	643104	Callee	CopyFrom		643099	0					
ANR	643105	Identifier	CopyFrom		643099	0					
ANR	643106	ArgumentList	ref		643099	1					
ANR	643107	Argument	ref		643099	0					
ANR	643108	Identifier	ref		643099	0					
ANR	643109	ReturnStatement	return ;	51:4:1364:1370	643099	1	True				
ANR	643110	Identifier	AttributeReference :: AttributeReference		643099	1					
ANR	643111	ParameterList	const AttributeReference & ref		643099	2					
ANR	643112	Parameter	const AttributeReference & ref	48:19:1308:1336	643099	0	True				
ANR	643113	ParameterType	const AttributeReference &		643099	0					
ANR	643114	Identifier	ref		643099	1					
ANR	643115	CFGEntryNode	ENTRY		643099		True				
ANR	643116	CFGExitNode	EXIT		643099		True				
ANR	643117	Symbol	ref		643099						
ANR	643118	Function	AttributeReference :: ~AttributeReference	54:0:1375:1445							
ANR	643119	FunctionDef	AttributeReference :: ~AttributeReference ()		643118	0					
ANR	643120	CompoundStatement		56:0:1418:1445	643118	0					
ANR	643121	IfStatement	if ( expr )		643118	0					
ANR	643122	Condition	expr	57:5:1425:1428	643118	0	True				
ANR	643123	Identifier	expr		643118	0					
ANR	643124	Statement	delete	57:12:1432:1437	643118	1	True				
ANR	643125	ExpressionStatement	expr	57:19:1439:1443	643118	1	True				
ANR	643126	Identifier	expr		643118	0					
ANR	643127	Identifier	AttributeReference :: ~AttributeReference		643118	1					
ANR	643128	ParameterList			643118	2					
ANR	643129	CFGEntryNode	ENTRY		643118		True				
ANR	643130	CFGExitNode	EXIT		643118		True				
ANR	643131	Symbol	expr		643118						
ANR	643132	Function	operator =	61:0:1489:1603							
ANR	643133	FunctionDef	operator = (const AttributeReference & ref)		643132	0					
ANR	643134	CompoundStatement		62:0:1530:1603	643132	0					
ANR	643135	IfStatement	if ( this != & ref )		643132	0					
ANR	643136	Condition	this != & ref	63:8:1540:1551	643132	0	True				
ANR	643137	EqualityExpression	this != & ref		643132	0		!=			
ANR	643138	Identifier	this		643132	0					
ANR	643139	UnaryOperationExpression	& ref		643132	1					
ANR	643140	UnaryOperator	&		643132	0					
ANR	643141	Identifier	ref		643132	1					
ANR	643142	CompoundStatement		2:22:23:23	643132	1					
ANR	643143	ExpressionStatement	CopyFrom ( ref )	64:8:1564:1577	643132	0	True				
ANR	643144	CallExpression	CopyFrom ( ref )		643132	0					
ANR	643145	Callee	CopyFrom		643132	0					
ANR	643146	Identifier	CopyFrom		643132	0					
ANR	643147	ArgumentList	ref		643132	1					
ANR	643148	Argument	ref		643132	0					
ANR	643149	Identifier	ref		643132	0					
ANR	643150	ReturnStatement	return * this ;	66:4:1589:1601	643132	1	True				
ANR	643151	UnaryOperationExpression	* this		643132	0					
ANR	643152	UnaryOperator	*		643132	0					
ANR	643153	Identifier	this		643132	1					
ANR	643154	Identifier	operator =		643132	1					
ANR	643155	ParameterList	const AttributeReference & ref		643132	2					
ANR	643156	Parameter	const AttributeReference & ref	61:10:1499:1527	643132	0	True				
ANR	643157	ParameterType	const AttributeReference &		643132	0					
ANR	643158	Identifier	ref		643132	1					
ANR	643159	CFGEntryNode	ENTRY		643132		True				
ANR	643160	CFGExitNode	EXIT		643132		True				
ANR	643161	Symbol	* this		643132						
ANR	643162	Symbol	ref		643132						
ANR	643163	Symbol	this		643132						
ANR	643164	Symbol	& ref		643132						
ANR	643165	Function	AttributeReference :: Copy	70:0:1607:1920							
ANR	643166	FunctionDef	AttributeReference :: Copy ()		643165	0					
ANR	643167	CompoundStatement		72:0:1652:1920	643165	0					
ANR	643168	IdentifierDeclStatement	AttributeReference * newTree = new AttributeReference ( ) ;	73:1:1655:1710	643165	0	True				
ANR	643169	IdentifierDecl	* newTree = new AttributeReference ( )		643165	0					
ANR	643170	IdentifierDeclType	AttributeReference *		643165	0					
ANR	643171	Identifier	newTree		643165	1					
ANR	643172	AssignmentExpression	* newTree = new AttributeReference ( )		643165	2		=			
ANR	643173	Identifier	newTree		643165	0					
ANR	643174	UnaryExpression	new AttributeReference ( )		643165	1					
ANR	643175	IfStatement	if ( newTree == 0 )		643165	1					
ANR	643176	Condition	newTree == 0	74:5:1717:1728	643165	0	True				
ANR	643177	EqualityExpression	newTree == 0		643165	0		==			
ANR	643178	Identifier	newTree		643165	0					
ANR	643179	PrimaryExpression	0		643165	1					
ANR	643180	CompoundStatement		3:19:78:78	643165	1					
ANR	643181	ExpressionStatement	CondorErrno = ERR_MEM_ALLOC_FAILED	75:2:1735:1769	643165	0	True				
ANR	643182	AssignmentExpression	CondorErrno = ERR_MEM_ALLOC_FAILED		643165	0		=			
ANR	643183	Identifier	CondorErrno		643165	0					
ANR	643184	Identifier	ERR_MEM_ALLOC_FAILED		643165	1					
ANR	643185	ExpressionStatement	"CondorErrMsg = """""	76:2:1773:1790	643165	1	True				
ANR	643186	AssignmentExpression	"CondorErrMsg = """""		643165	0		=			
ANR	643187	Identifier	CondorErrMsg		643165	0					
ANR	643188	PrimaryExpression	""""""		643165	1					
ANR	643189	ReturnStatement	return NULL ;	77:2:1794:1805	643165	2	True				
ANR	643190	Identifier	NULL		643165	0					
ANR	643191	IfStatement	if ( ! newTree -> CopyFrom ( * this ) )		643165	2					
ANR	643192	Condition	! newTree -> CopyFrom ( * this )	80:8:1819:1843	643165	0	True				
ANR	643193	UnaryOperationExpression	! newTree -> CopyFrom ( * this )		643165	0					
ANR	643194	UnaryOperator	!		643165	0					
ANR	643195	CallExpression	newTree -> CopyFrom ( * this )		643165	1					
ANR	643196	Callee	newTree -> CopyFrom		643165	0					
ANR	643197	PtrMemberAccess	newTree -> CopyFrom		643165	0					
ANR	643198	Identifier	newTree		643165	0					
ANR	643199	Identifier	CopyFrom		643165	1					
ANR	643200	ArgumentList	* this		643165	1					
ANR	643201	Argument	* this		643165	0					
ANR	643202	UnaryOperationExpression	* this		643165	0					
ANR	643203	UnaryOperator	*		643165	0					
ANR	643204	Identifier	this		643165	1					
ANR	643205	CompoundStatement		9:35:193:193	643165	1					
ANR	643206	Statement	delete	81:8:1856:1861	643165	0	True				
ANR	643207	ExpressionStatement	newTree	81:15:1863:1870	643165	1	True				
ANR	643208	Identifier	newTree		643165	0					
ANR	643209	ExpressionStatement	newTree = NULL	82:8:1880:1894	643165	2	True				
ANR	643210	AssignmentExpression	newTree = NULL		643165	0		=			
ANR	643211	Identifier	newTree		643165	0					
ANR	643212	Identifier	NULL		643165	1					
ANR	643213	ReturnStatement	return newTree ;	85:1:1904:1918	643165	3	True				
ANR	643214	Identifier	newTree		643165	0					
ANR	643215	ReturnType	ExprTree *		643165	1					
ANR	643216	Identifier	AttributeReference :: Copy		643165	2					
ANR	643217	ParameterList			643165	3					
ANR	643218	CFGEntryNode	ENTRY		643165		True				
ANR	643219	CFGExitNode	EXIT		643165		True				
ANR	643220	Symbol	* this		643165						
ANR	643221	Symbol	NULL		643165						
ANR	643222	Symbol	* newTree		643165						
ANR	643223	Symbol	newTree		643165						
ANR	643224	Symbol	CondorErrMsg		643165						
ANR	643225	Symbol	newTree -> CopyFrom		643165						
ANR	643226	Symbol	this		643165						
ANR	643227	Symbol	ERR_MEM_ALLOC_FAILED		643165						
ANR	643228	Symbol	CondorErrno		643165						
ANR	643229	Function	AttributeReference :: CopyFrom	88:0:1923:2248							
ANR	643230	FunctionDef	AttributeReference :: CopyFrom (const AttributeReference & ref)		643229	0					
ANR	643231	CompoundStatement		90:0:1989:2248	643229	0					
ANR	643232	IdentifierDeclStatement	bool success ;	91:4:1995:2007	643229	0	True				
ANR	643233	IdentifierDecl	success		643229	0					
ANR	643234	IdentifierDeclType	bool		643229	0					
ANR	643235	Identifier	success		643229	1					
ANR	643236	ExpressionStatement	success = true	93:4:2014:2028	643229	1	True				
ANR	643237	AssignmentExpression	success = true		643229	0		=			
ANR	643238	Identifier	success		643229	0					
ANR	643239	Identifier	true		643229	1					
ANR	643240	ExpressionStatement	attributeStr = ref . attributeStr	95:1:2032:2063	643229	2	True				
ANR	643241	AssignmentExpression	attributeStr = ref . attributeStr		643229	0		=			
ANR	643242	Identifier	attributeStr		643229	0					
ANR	643243	MemberAccess	ref . attributeStr		643229	1					
ANR	643244	Identifier	ref		643229	0					
ANR	643245	Identifier	attributeStr		643229	1					
ANR	643246	IfStatement	if ( ref . expr && ( expr = ref . expr -> Copy ( ) ) == NULL )		643229	3					
ANR	643247	Condition	ref . expr && ( expr = ref . expr -> Copy ( ) ) == NULL	96:5:2070:2115	643229	0	True				
ANR	643248	AndExpression	ref . expr && ( expr = ref . expr -> Copy ( ) ) == NULL		643229	0		&&			
ANR	643249	MemberAccess	ref . expr		643229	0					
ANR	643250	Identifier	ref		643229	0					
ANR	643251	Identifier	expr		643229	1					
ANR	643252	EqualityExpression	( expr = ref . expr -> Copy ( ) ) == NULL		643229	1		==			
ANR	643253	AssignmentExpression	expr = ref . expr -> Copy ( )		643229	0		=			
ANR	643254	Identifier	expr		643229	0					
ANR	643255	CallExpression	ref . expr -> Copy ( )		643229	1					
ANR	643256	Callee	ref . expr -> Copy		643229	0					
ANR	643257	PtrMemberAccess	ref . expr -> Copy		643229	0					
ANR	643258	MemberAccess	ref . expr		643229	0					
ANR	643259	Identifier	ref		643229	0					
ANR	643260	Identifier	expr		643229	1					
ANR	643261	Identifier	Copy		643229	1					
ANR	643262	ArgumentList			643229	1					
ANR	643263	Identifier	NULL		643229	1					
ANR	643264	CompoundStatement		7:54:129:129	643229	1					
ANR	643265	ExpressionStatement	success = false	97:8:2129:2144	643229	0	True				
ANR	643266	AssignmentExpression	success = false		643229	0		=			
ANR	643267	Identifier	success		643229	0					
ANR	643268	Identifier	false		643229	1					
ANR	643269	ElseStatement	else		643229	0					
ANR	643270	CompoundStatement		9:8:164:164	643229	0					
ANR	643271	ExpressionStatement	ExprTree :: CopyFrom ( ref )	99:8:2164:2187	643229	0	True				
ANR	643272	CallExpression	ExprTree :: CopyFrom ( ref )		643229	0					
ANR	643273	Callee	ExprTree :: CopyFrom		643229	0					
ANR	643274	Identifier	ExprTree :: CopyFrom		643229	0					
ANR	643275	ArgumentList	ref		643229	1					
ANR	643276	Argument	ref		643229	0					
ANR	643277	Identifier	ref		643229	0					
ANR	643278	ExpressionStatement	absolute = ref . absolute	100:8:2197:2220	643229	1	True				
ANR	643279	AssignmentExpression	absolute = ref . absolute		643229	0		=			
ANR	643280	Identifier	absolute		643229	0					
ANR	643281	MemberAccess	ref . absolute		643229	1					
ANR	643282	Identifier	ref		643229	0					
ANR	643283	Identifier	absolute		643229	1					
ANR	643284	ReturnStatement	return success ;	102:4:2232:2246	643229	4	True				
ANR	643285	Identifier	success		643229	0					
ANR	643286	ReturnType	bool		643229	1					
ANR	643287	Identifier	AttributeReference :: CopyFrom		643229	2					
ANR	643288	ParameterList	const AttributeReference & ref		643229	3					
ANR	643289	Parameter	const AttributeReference & ref	89:9:1958:1986	643229	0	True				
ANR	643290	ParameterType	const AttributeReference &		643229	0					
ANR	643291	Identifier	ref		643229	1					
ANR	643292	CFGEntryNode	ENTRY		643229		True				
ANR	643293	CFGExitNode	EXIT		643229		True				
ANR	643294	Symbol	ref . absolute		643229						
ANR	643295	Symbol	NULL		643229						
ANR	643296	Symbol	false		643229						
ANR	643297	Symbol	* ref . expr		643229						
ANR	643298	Symbol	ref . expr -> Copy		643229						
ANR	643299	Symbol	ref . expr		643229						
ANR	643300	Symbol	ref		643229						
ANR	643301	Symbol	success		643229						
ANR	643302	Symbol	absolute		643229						
ANR	643303	Symbol	true		643229						
ANR	643304	Symbol	expr		643229						
ANR	643305	Symbol	attributeStr		643229						
ANR	643306	Symbol	* ref		643229						
ANR	643307	Symbol	ref . attributeStr		643229						
ANR	643308	Function	AttributeReference :: SameAs	105:0:2251:3048							
ANR	643309	FunctionDef	AttributeReference :: SameAs (const ExprTree * tree)		643308	0					
ANR	643310	CompoundStatement		107:0:2312:3048	643308	0					
ANR	643311	IdentifierDeclStatement	bool is_same ;	108:4:2318:2330	643308	0	True				
ANR	643312	IdentifierDecl	is_same		643308	0					
ANR	643313	IdentifierDeclType	bool		643308	0					
ANR	643314	Identifier	is_same		643308	1					
ANR	643315	IfStatement	if ( tree -> GetKind ( ) != ATTRREF_NODE )		643308	1					
ANR	643316	Condition	tree -> GetKind ( ) != ATTRREF_NODE	110:8:2341:2371	643308	0	True				
ANR	643317	EqualityExpression	tree -> GetKind ( ) != ATTRREF_NODE		643308	0		!=			
ANR	643318	CallExpression	tree -> GetKind ( )		643308	0					
ANR	643319	Callee	tree -> GetKind		643308	0					
ANR	643320	PtrMemberAccess	tree -> GetKind		643308	0					
ANR	643321	Identifier	tree		643308	0					
ANR	643322	Identifier	GetKind		643308	1					
ANR	643323	ArgumentList			643308	1					
ANR	643324	Identifier	ATTRREF_NODE		643308	1					
ANR	643325	CompoundStatement		4:41:61:61	643308	1					
ANR	643326	ExpressionStatement	is_same = false	111:8:2384:2399	643308	0	True				
ANR	643327	AssignmentExpression	is_same = false		643308	0		=			
ANR	643328	Identifier	is_same		643308	0					
ANR	643329	Identifier	false		643308	1					
ANR	643330	ElseStatement	else		643308	0					
ANR	643331	CompoundStatement		7:8:109:180	643308	0					
ANR	643332	IdentifierDeclStatement	const AttributeReference * other_ref = ( const AttributeReference * ) tree ;	113:8:2422:2493	643308	0	True				
ANR	643333	IdentifierDecl	* other_ref = ( const AttributeReference * ) tree		643308	0					
ANR	643334	IdentifierDeclType	const AttributeReference *		643308	0					
ANR	643335	Identifier	other_ref		643308	1					
ANR	643336	AssignmentExpression	* other_ref = ( const AttributeReference * ) tree		643308	2		=			
ANR	643337	Identifier	other_ref		643308	0					
ANR	643338	CastExpression	( const AttributeReference * ) tree		643308	1					
ANR	643339	CastTarget	const AttributeReference *		643308	0					
ANR	643340	Identifier	tree		643308	1					
ANR	643341	IfStatement	if ( absolute != other_ref -> absolute || attributeStr != other_ref -> attributeStr )		643308	1					
ANR	643342	Condition	absolute != other_ref -> absolute || attributeStr != other_ref -> attributeStr	115:15:2519:2608	643308	0	True				
ANR	643343	OrExpression	absolute != other_ref -> absolute || attributeStr != other_ref -> attributeStr		643308	0		||			
ANR	643344	EqualityExpression	absolute != other_ref -> absolute		643308	0		!=			
ANR	643345	Identifier	absolute		643308	0					
ANR	643346	PtrMemberAccess	other_ref -> absolute		643308	1					
ANR	643347	Identifier	other_ref		643308	0					
ANR	643348	Identifier	absolute		643308	1					
ANR	643349	EqualityExpression	attributeStr != other_ref -> attributeStr		643308	1		!=			
ANR	643350	Identifier	attributeStr		643308	0					
ANR	643351	PtrMemberAccess	other_ref -> attributeStr		643308	1					
ANR	643352	Identifier	other_ref		643308	0					
ANR	643353	Identifier	attributeStr		643308	1					
ANR	643354	CompoundStatement		10:56:298:298	643308	1					
ANR	643355	ExpressionStatement	is_same = false	117:12:2625:2640	643308	0	True				
ANR	643356	AssignmentExpression	is_same = false		643308	0		=			
ANR	643357	Identifier	is_same		643308	0					
ANR	643358	Identifier	false		643308	1					
ANR	643359	ElseStatement	else		643308	0					
ANR	643360	IfStatement	if ( ( expr == NULL && other_ref -> expr == NULL ) || ( expr == other_ref -> expr ) || ( expr != NULL && other_ref -> expr != NULL && expr -> SameAs ( other_ref -> expr ) ) )		643308	0					
ANR	643361	Condition	( expr == NULL && other_ref -> expr == NULL ) || ( expr == other_ref -> expr ) || ( expr != NULL && other_ref -> expr != NULL && expr -> SameAs ( other_ref -> expr ) )	118:23:2665:2852	643308	0	True				
ANR	643362	OrExpression	( expr == NULL && other_ref -> expr == NULL ) || ( expr == other_ref -> expr ) || ( expr != NULL && other_ref -> expr != NULL && expr -> SameAs ( other_ref -> expr ) )		643308	0		||			
ANR	643363	AndExpression	expr == NULL && other_ref -> expr == NULL		643308	0		&&			
ANR	643364	EqualityExpression	expr == NULL		643308	0		==			
ANR	643365	Identifier	expr		643308	0					
ANR	643366	Identifier	NULL		643308	1					
ANR	643367	EqualityExpression	other_ref -> expr == NULL		643308	1		==			
ANR	643368	PtrMemberAccess	other_ref -> expr		643308	0					
ANR	643369	Identifier	other_ref		643308	0					
ANR	643370	Identifier	expr		643308	1					
ANR	643371	Identifier	NULL		643308	1					
ANR	643372	OrExpression	( expr == other_ref -> expr ) || ( expr != NULL && other_ref -> expr != NULL && expr -> SameAs ( other_ref -> expr ) )		643308	1		||			
ANR	643373	EqualityExpression	expr == other_ref -> expr		643308	0		==			
ANR	643374	Identifier	expr		643308	0					
ANR	643375	PtrMemberAccess	other_ref -> expr		643308	1					
ANR	643376	Identifier	other_ref		643308	0					
ANR	643377	Identifier	expr		643308	1					
ANR	643378	AndExpression	expr != NULL && other_ref -> expr != NULL && expr -> SameAs ( other_ref -> expr )		643308	1		&&			
ANR	643379	EqualityExpression	expr != NULL		643308	0		!=			
ANR	643380	Identifier	expr		643308	0					
ANR	643381	Identifier	NULL		643308	1					
ANR	643382	AndExpression	other_ref -> expr != NULL && expr -> SameAs ( other_ref -> expr )		643308	1		&&			
ANR	643383	EqualityExpression	other_ref -> expr != NULL		643308	0		!=			
ANR	643384	PtrMemberAccess	other_ref -> expr		643308	0					
ANR	643385	Identifier	other_ref		643308	0					
ANR	643386	Identifier	expr		643308	1					
ANR	643387	Identifier	NULL		643308	1					
ANR	643388	CallExpression	expr -> SameAs ( other_ref -> expr )		643308	1					
ANR	643389	Callee	expr -> SameAs		643308	0					
ANR	643390	PtrMemberAccess	expr -> SameAs		643308	0					
ANR	643391	Identifier	expr		643308	0					
ANR	643392	Identifier	SameAs		643308	1					
ANR	643393	ArgumentList	other_ref -> expr		643308	1					
ANR	643394	Argument	other_ref -> expr		643308	0					
ANR	643395	PtrMemberAccess	other_ref -> expr		643308	0					
ANR	643396	Identifier	other_ref		643308	0					
ANR	643397	Identifier	expr		643308	1					
ANR	643398	CompoundStatement		14:99:542:542	643308	1					
ANR	643399	ExpressionStatement	is_same = true	122:12:2949:2963	643308	0	True				
ANR	643400	AssignmentExpression	is_same = true		643308	0		=			
ANR	643401	Identifier	is_same		643308	0					
ANR	643402	Identifier	true		643308	1					
ANR	643403	ElseStatement	else		643308	0					
ANR	643404	CompoundStatement		17:15:667:667	643308	0					
ANR	643405	ExpressionStatement	is_same = false	124:12:2994:3009	643308	0	True				
ANR	643406	AssignmentExpression	is_same = false		643308	0		=			
ANR	643407	Identifier	is_same		643308	0					
ANR	643408	Identifier	false		643308	1					
ANR	643409	ReturnStatement	return is_same ;	128:4:3032:3046	643308	2	True				
ANR	643410	Identifier	is_same		643308	0					
ANR	643411	ReturnType	bool		643308	1					
ANR	643412	Identifier	AttributeReference :: SameAs		643308	2					
ANR	643413	ParameterList	const ExprTree * tree		643308	3					
ANR	643414	Parameter	const ExprTree * tree	106:7:2284:2303	643308	0	True				
ANR	643415	ParameterType	const ExprTree *		643308	0					
ANR	643416	Identifier	tree		643308	1					
ANR	643417	CFGEntryNode	ENTRY		643308		True				
ANR	643418	CFGExitNode	EXIT		643308		True				
ANR	643419	Symbol	NULL		643308						
ANR	643420	Symbol	is_same		643308						
ANR	643421	Symbol	tree		643308						
ANR	643422	Symbol	false		643308						
ANR	643423	Symbol	other_ref -> attributeStr		643308						
ANR	643424	Symbol	other_ref		643308						
ANR	643425	Symbol	* tree		643308						
ANR	643426	Symbol	expr -> SameAs		643308						
ANR	643427	Symbol	* other_ref		643308						
ANR	643428	Symbol	other_ref -> expr		643308						
ANR	643429	Symbol	tree -> GetKind		643308						
ANR	643430	Symbol	ATTRREF_NODE		643308						
ANR	643431	Symbol	other_ref -> absolute		643308						
ANR	643432	Symbol	* expr		643308						
ANR	643433	Symbol	absolute		643308						
ANR	643434	Symbol	true		643308						
ANR	643435	Symbol	expr		643308						
ANR	643436	Symbol	attributeStr		643308						
ANR	643437	Function	operator ==	131:0:3051:3165							
ANR	643438	FunctionDef	"operator == (const AttributeReference & ref1 , const AttributeReference & ref2)"		643437	0					
ANR	643439	CompoundStatement		133:0:3132:3165	643437	0					
ANR	643440	ReturnStatement	return ref1 . SameAs ( & ref2 ) ;	134:4:3138:3163	643437	0	True				
ANR	643441	CallExpression	ref1 . SameAs ( & ref2 )		643437	0					
ANR	643442	Callee	ref1 . SameAs		643437	0					
ANR	643443	MemberAccess	ref1 . SameAs		643437	0					
ANR	643444	Identifier	ref1		643437	0					
ANR	643445	Identifier	SameAs		643437	1					
ANR	643446	ArgumentList	& ref2		643437	1					
ANR	643447	Argument	& ref2		643437	0					
ANR	643448	UnaryOperationExpression	& ref2		643437	0					
ANR	643449	UnaryOperator	&		643437	0					
ANR	643450	Identifier	ref2		643437	1					
ANR	643451	ReturnType	bool		643437	1					
ANR	643452	Identifier	operator ==		643437	2					
ANR	643453	ParameterList	"const AttributeReference & ref1 , const AttributeReference & ref2"		643437	3					
ANR	643454	Parameter	const AttributeReference & ref1	132:11:3068:3097	643437	0	True				
ANR	643455	ParameterType	const AttributeReference &		643437	0					
ANR	643456	Identifier	ref1		643437	1					
ANR	643457	Parameter	const AttributeReference & ref2	132:43:3100:3129	643437	1	True				
ANR	643458	ParameterType	const AttributeReference &		643437	0					
ANR	643459	Identifier	ref2		643437	1					
ANR	643460	CFGEntryNode	ENTRY		643437		True				
ANR	643461	CFGExitNode	EXIT		643437		True				
ANR	643462	Symbol	ref1 . SameAs		643437						
ANR	643463	Symbol	& ref2		643437						
ANR	643464	Symbol	ref2		643437						
ANR	643465	Symbol	ref1		643437						
ANR	643466	Function	AttributeReference :: _SetParentScope	137:0:3168:3282							
ANR	643467	FunctionDef	AttributeReference :: _SetParentScope (const ClassAd * parent)		643466	0					
ANR	643468	CompoundStatement		139:0:3236:3282	643466	0					
ANR	643469	IfStatement	if ( expr )		643466	0					
ANR	643470	Condition	expr	140:5:3243:3246	643466	0	True				
ANR	643471	Identifier	expr		643466	0					
ANR	643472	ExpressionStatement	expr -> SetParentScope ( parent )	140:12:3250:3280	643466	1	True				
ANR	643473	CallExpression	expr -> SetParentScope ( parent )		643466	0					
ANR	643474	Callee	expr -> SetParentScope		643466	0					
ANR	643475	PtrMemberAccess	expr -> SetParentScope		643466	0					
ANR	643476	Identifier	expr		643466	0					
ANR	643477	Identifier	SetParentScope		643466	1					
ANR	643478	ArgumentList	parent		643466	1					
ANR	643479	Argument	parent		643466	0					
ANR	643480	Identifier	parent		643466	0					
ANR	643481	ReturnType	void		643466	1					
ANR	643482	Identifier	AttributeReference :: _SetParentScope		643466	2					
ANR	643483	ParameterList	const ClassAd * parent		643466	3					
ANR	643484	Parameter	const ClassAd * parent	138:17:3211:3231	643466	0	True				
ANR	643485	ParameterType	const ClassAd *		643466	0					
ANR	643486	Identifier	parent		643466	1					
ANR	643487	CFGEntryNode	ENTRY		643466		True				
ANR	643488	CFGExitNode	EXIT		643466		True				
ANR	643489	Symbol	parent		643466						
ANR	643490	Symbol	expr		643466						
ANR	643491	Function	AttributeReference :: GetComponents	144:0:3286:3431							
ANR	643492	FunctionDef	"AttributeReference :: GetComponents (ExprTree * & tree , string & attr , bool & abs)"		643491	0					
ANR	643493	CompoundStatement		146:0:3376:3431	643491	0					
ANR	643494	ExpressionStatement	tree = expr	147:1:3379:3390	643491	0	True				
ANR	643495	AssignmentExpression	tree = expr		643491	0		=			
ANR	643496	Identifier	tree		643491	0					
ANR	643497	Identifier	expr		643491	1					
ANR	643498	ExpressionStatement	attr = attributeStr	148:1:3393:3412	643491	1	True				
ANR	643499	AssignmentExpression	attr = attributeStr		643491	0		=			
ANR	643500	Identifier	attr		643491	0					
ANR	643501	Identifier	attributeStr		643491	1					
ANR	643502	ExpressionStatement	abs = absolute	149:1:3415:3429	643491	2	True				
ANR	643503	AssignmentExpression	abs = absolute		643491	0		=			
ANR	643504	Identifier	abs		643491	0					
ANR	643505	Identifier	absolute		643491	1					
ANR	643506	ReturnType	void		643491	1					
ANR	643507	Identifier	AttributeReference :: GetComponents		643491	2					
ANR	643508	ParameterList	"ExprTree * & tree , string & attr , bool & abs"		643491	3					
ANR	643509	Parameter	ExprTree * & tree	145:15:3327:3341	643491	0	True				
ANR	643510	ParameterType	ExprTree * &		643491	0					
ANR	643511	Identifier	tree		643491	1					
ANR	643512	Parameter	string & attr	145:32:3344:3355	643491	1	True				
ANR	643513	ParameterType	string &		643491	0					
ANR	643514	Identifier	attr		643491	1					
ANR	643515	Parameter	bool & abs	145:46:3358:3366	643491	2	True				
ANR	643516	ParameterType	bool &		643491	0					
ANR	643517	Identifier	abs		643491	1					
ANR	643518	CFGEntryNode	ENTRY		643491		True				
ANR	643519	CFGExitNode	EXIT		643491		True				
ANR	643520	Symbol	abs		643491						
ANR	643521	Symbol	absolute		643491						
ANR	643522	Symbol	tree		643491						
ANR	643523	Symbol	expr		643491						
ANR	643524	Symbol	attr		643491						
ANR	643525	Symbol	attributeStr		643491						
ANR	643526	Function	AttributeReference :: _Evaluate	153:0:3435:4303							
ANR	643527	FunctionDef	"AttributeReference :: _Evaluate (EvalState & state , Value & val)"		643526	0					
ANR	643528	CompoundStatement		155:0:3508:4303	643526	0					
ANR	643529	IdentifierDeclStatement	ExprTree * tree ;	156:1:3511:3525	643526	0	True				
ANR	643530	IdentifierDecl	* tree		643526	0					
ANR	643531	IdentifierDeclType	ExprTree *		643526	0					
ANR	643532	Identifier	tree		643526	1					
ANR	643533	IdentifierDeclStatement	ExprTree * dummy ;	157:1:3529:3544	643526	1	True				
ANR	643534	IdentifierDecl	* dummy		643526	0					
ANR	643535	IdentifierDeclType	ExprTree *		643526	0					
ANR	643536	Identifier	dummy		643526	1					
ANR	643537	IdentifierDeclStatement	const ClassAd * curAd ;	158:1:3547:3567	643526	2	True				
ANR	643538	IdentifierDecl	* curAd		643526	0					
ANR	643539	IdentifierDeclType	const ClassAd *		643526	0					
ANR	643540	Identifier	curAd		643526	1					
ANR	643541	IdentifierDeclStatement	bool rval ;	159:1:3570:3580	643526	3	True				
ANR	643542	IdentifierDecl	rval		643526	0					
ANR	643543	IdentifierDeclType	bool		643526	0					
ANR	643544	Identifier	rval		643526	1					
ANR	643545	ExpressionStatement	curAd = state . curAd	162:1:3626:3645	643526	4	True				
ANR	643546	AssignmentExpression	curAd = state . curAd		643526	0		=			
ANR	643547	Identifier	curAd		643526	0					
ANR	643548	MemberAccess	state . curAd		643526	1					
ANR	643549	Identifier	state		643526	0					
ANR	643550	Identifier	curAd		643526	1					
ANR	643551	SwitchStatement	"switch ( FindExpr ( state , tree , dummy , false ) )"		643526	5					
ANR	643552	Condition	"FindExpr ( state , tree , dummy , false )"	163:9:3656:3692	643526	0	True				
ANR	643553	CallExpression	"FindExpr ( state , tree , dummy , false )"		643526	0					
ANR	643554	Callee	FindExpr		643526	0					
ANR	643555	Identifier	FindExpr		643526	0					
ANR	643556	ArgumentList	state		643526	1					
ANR	643557	Argument	state		643526	0					
ANR	643558	Identifier	state		643526	0					
ANR	643559	Argument	tree		643526	1					
ANR	643560	Identifier	tree		643526	0					
ANR	643561	Argument	dummy		643526	2					
ANR	643562	Identifier	dummy		643526	0					
ANR	643563	Argument	false		643526	3					
ANR	643564	Identifier	false		643526	0					
ANR	643565	CompoundStatement		9:49:187:187	643526	1					
ANR	643566	Label	case EVAL_FAIL :	164:2:3700:3714	643526	0	True				
ANR	643567	Identifier	EVAL_FAIL		643526	0					
ANR	643568	ReturnStatement	return false ;	165:3:3719:3731	643526	1	True				
ANR	643569	Identifier	false		643526	0					
ANR	643570	Label	case EVAL_ERROR :	167:2:3736:3751	643526	2	True				
ANR	643571	Identifier	EVAL_ERROR		643526	0					
ANR	643572	Label	case PROP_ERROR :	168:2:3755:3770	643526	3	True				
ANR	643573	Identifier	PROP_ERROR		643526	0					
ANR	643574	ExpressionStatement	val . SetErrorValue ( )	169:3:3775:3794	643526	4	True				
ANR	643575	CallExpression	val . SetErrorValue ( )		643526	0					
ANR	643576	Callee	val . SetErrorValue		643526	0					
ANR	643577	MemberAccess	val . SetErrorValue		643526	0					
ANR	643578	Identifier	val		643526	0					
ANR	643579	Identifier	SetErrorValue		643526	1					
ANR	643580	ArgumentList			643526	1					
ANR	643581	ExpressionStatement	state . curAd = curAd	170:3:3799:3818	643526	5	True				
ANR	643582	AssignmentExpression	state . curAd = curAd		643526	0		=			
ANR	643583	MemberAccess	state . curAd		643526	0					
ANR	643584	Identifier	state		643526	0					
ANR	643585	Identifier	curAd		643526	1					
ANR	643586	Identifier	curAd		643526	1					
ANR	643587	ReturnStatement	return true ;	171:3:3823:3834	643526	6	True				
ANR	643588	Identifier	true		643526	0					
ANR	643589	Label	case EVAL_UNDEF :	173:2:3839:3854	643526	7	True				
ANR	643590	Identifier	EVAL_UNDEF		643526	0					
ANR	643591	Label	case PROP_UNDEF :	174:2:3858:3873	643526	8	True				
ANR	643592	Identifier	PROP_UNDEF		643526	0					
ANR	643593	ExpressionStatement	val . SetUndefinedValue ( )	175:3:3878:3901	643526	9	True				
ANR	643594	CallExpression	val . SetUndefinedValue ( )		643526	0					
ANR	643595	Callee	val . SetUndefinedValue		643526	0					
ANR	643596	MemberAccess	val . SetUndefinedValue		643526	0					
ANR	643597	Identifier	val		643526	0					
ANR	643598	Identifier	SetUndefinedValue		643526	1					
ANR	643599	ArgumentList			643526	1					
ANR	643600	ExpressionStatement	state . curAd = curAd	176:3:3906:3925	643526	10	True				
ANR	643601	AssignmentExpression	state . curAd = curAd		643526	0		=			
ANR	643602	MemberAccess	state . curAd		643526	0					
ANR	643603	Identifier	state		643526	0					
ANR	643604	Identifier	curAd		643526	1					
ANR	643605	Identifier	curAd		643526	1					
ANR	643606	ReturnStatement	return true ;	177:3:3930:3941	643526	11	True				
ANR	643607	Identifier	true		643526	0					
ANR	643608	Label	case EVAL_OK :	179:2:3946:3958	643526	12	True				
ANR	643609	Identifier	EVAL_OK		643526	0					
ANR	643610	CompoundStatement		26:2:454:454	643526	13					
ANR	643611	IfStatement	if ( state . depth_remaining <= 0 )		643526	0					
ANR	643612	Condition	state . depth_remaining <= 0	181:7:3972:3997	643526	0	True				
ANR	643613	RelationalExpression	state . depth_remaining <= 0		643526	0		<=			
ANR	643614	MemberAccess	state . depth_remaining		643526	0					
ANR	643615	Identifier	state		643526	0					
ANR	643616	Identifier	depth_remaining		643526	1					
ANR	643617	PrimaryExpression	0		643526	1					
ANR	643618	CompoundStatement		27:36:492:492	643526	1					
ANR	643619	ExpressionStatement	val . SetErrorValue ( )	182:4:4007:4026	643526	0	True				
ANR	643620	CallExpression	val . SetErrorValue ( )		643526	0					
ANR	643621	Callee	val . SetErrorValue		643526	0					
ANR	643622	MemberAccess	val . SetErrorValue		643526	0					
ANR	643623	Identifier	val		643526	0					
ANR	643624	Identifier	SetErrorValue		643526	1					
ANR	643625	ArgumentList			643526	1					
ANR	643626	ExpressionStatement	state . curAd = curAd	183:4:4032:4051	643526	1	True				
ANR	643627	AssignmentExpression	state . curAd = curAd		643526	0		=			
ANR	643628	MemberAccess	state . curAd		643526	0					
ANR	643629	Identifier	state		643526	0					
ANR	643630	Identifier	curAd		643526	1					
ANR	643631	Identifier	curAd		643526	1					
ANR	643632	ReturnStatement	return false ;	184:4:4057:4069	643526	2	True				
ANR	643633	Identifier	false		643526	0					
ANR	643634	ExpressionStatement	state . depth_remaining --	186:3:4079:4102	643526	1	True				
ANR	643635	PostIncDecOperationExpression	state . depth_remaining --		643526	0					
ANR	643636	MemberAccess	state . depth_remaining		643526	0					
ANR	643637	Identifier	state		643526	0					
ANR	643638	Identifier	depth_remaining		643526	1					
ANR	643639	IncDec	--		643526	1					
ANR	643640	ExpressionStatement	"rval = tree -> Evaluate ( state , val )"	188:3:4108:4143	643526	2	True				
ANR	643641	AssignmentExpression	"rval = tree -> Evaluate ( state , val )"		643526	0		=			
ANR	643642	Identifier	rval		643526	0					
ANR	643643	CallExpression	"tree -> Evaluate ( state , val )"		643526	1					
ANR	643644	Callee	tree -> Evaluate		643526	0					
ANR	643645	PtrMemberAccess	tree -> Evaluate		643526	0					
ANR	643646	Identifier	tree		643526	0					
ANR	643647	Identifier	Evaluate		643526	1					
ANR	643648	ArgumentList	state		643526	1					
ANR	643649	Argument	state		643526	0					
ANR	643650	Identifier	state		643526	0					
ANR	643651	Argument	val		643526	1					
ANR	643652	Identifier	val		643526	0					
ANR	643653	ExpressionStatement	state . depth_remaining ++	190:3:4149:4172	643526	3	True				
ANR	643654	PostIncDecOperationExpression	state . depth_remaining ++		643526	0					
ANR	643655	MemberAccess	state . depth_remaining		643526	0					
ANR	643656	Identifier	state		643526	0					
ANR	643657	Identifier	depth_remaining		643526	1					
ANR	643658	IncDec	++		643526	1					
ANR	643659	ExpressionStatement	state . curAd = curAd	192:3:4178:4197	643526	4	True				
ANR	643660	AssignmentExpression	state . curAd = curAd		643526	0		=			
ANR	643661	MemberAccess	state . curAd		643526	0					
ANR	643662	Identifier	state		643526	0					
ANR	643663	Identifier	curAd		643526	1					
ANR	643664	Identifier	curAd		643526	1					
ANR	643665	ReturnStatement	return rval ;	194:3:4203:4214	643526	5	True				
ANR	643666	Identifier	rval		643526	0					
ANR	643667	Label	default :	196:2:4222:4229	643526	14	True				
ANR	643668	Identifier	default		643526	0					
ANR	643669	ExpressionStatement	"CLASSAD_EXCEPT ( ""ClassAd:  Should not reach here"" )"	196:12:4232:4283	643526	15	True				
ANR	643670	CallExpression	"CLASSAD_EXCEPT ( ""ClassAd:  Should not reach here"" )"		643526	0					
ANR	643671	Callee	CLASSAD_EXCEPT		643526	0					
ANR	643672	Identifier	CLASSAD_EXCEPT		643526	0					
ANR	643673	ArgumentList	"""ClassAd:  Should not reach here"""		643526	1					
ANR	643674	Argument	"""ClassAd:  Should not reach here"""		643526	0					
ANR	643675	PrimaryExpression	"""ClassAd:  Should not reach here"""		643526	0					
ANR	643676	ReturnStatement	return false ;	198:1:4289:4301	643526	6	True				
ANR	643677	Identifier	false		643526	0					
ANR	643678	ReturnType	bool		643526	1					
ANR	643679	Identifier	AttributeReference :: _Evaluate		643526	2					
ANR	643680	ParameterList	"EvalState & state , Value & val"		643526	3					
ANR	643681	Parameter	EvalState & state	154:11:3472:3487	643526	0	True				
ANR	643682	ParameterType	EvalState &		643526	0					
ANR	643683	Identifier	state		643526	1					
ANR	643684	Parameter	Value & val	154:29:3490:3499	643526	1	True				
ANR	643685	ParameterType	Value &		643526	0					
ANR	643686	Identifier	val		643526	1					
ANR	643687	CFGEntryNode	ENTRY		643526		True				
ANR	643688	CFGExitNode	EXIT		643526		True				
ANR	643689	Symbol	val		643526						
ANR	643690	Symbol	tree		643526						
ANR	643691	Symbol	false		643526						
ANR	643692	Symbol	curAd		643526						
ANR	643693	Symbol	dummy		643526						
ANR	643694	Symbol	state . curAd		643526						
ANR	643695	Symbol	* tree		643526						
ANR	643696	Symbol	state . depth_remaining		643526						
ANR	643697	Symbol	FindExpr		643526						
ANR	643698	Symbol	true		643526						
ANR	643699	Symbol	tree -> Evaluate		643526						
ANR	643700	Symbol	rval		643526						
ANR	643701	Symbol	state		643526						
ANR	643702	Function	AttributeReference :: _Evaluate	202:0:4307:5339							
ANR	643703	FunctionDef	"AttributeReference :: _Evaluate (EvalState & state , Value & val , ExprTree * & sig)"		643702	0					
ANR	643704	CompoundStatement		204:0:4397:5339	643702	0					
ANR	643705	IdentifierDeclStatement	ExprTree * tree ;	205:1:4400:4414	643702	0	True				
ANR	643706	IdentifierDecl	* tree		643702	0					
ANR	643707	IdentifierDeclType	ExprTree *		643702	0					
ANR	643708	Identifier	tree		643702	1					
ANR	643709	IdentifierDeclStatement	ExprTree * exprSig ;	206:1:4417:4434	643702	1	True				
ANR	643710	IdentifierDecl	* exprSig		643702	0					
ANR	643711	IdentifierDeclType	ExprTree *		643702	0					
ANR	643712	Identifier	exprSig		643702	1					
ANR	643713	IdentifierDeclStatement	const ClassAd * curAd ;	207:1:4437:4457	643702	2	True				
ANR	643714	IdentifierDecl	* curAd		643702	0					
ANR	643715	IdentifierDeclType	const ClassAd *		643702	0					
ANR	643716	Identifier	curAd		643702	1					
ANR	643717	IdentifierDeclStatement	bool rval ;	208:1:4460:4470	643702	3	True				
ANR	643718	IdentifierDecl	rval		643702	0					
ANR	643719	IdentifierDeclType	bool		643702	0					
ANR	643720	Identifier	rval		643702	1					
ANR	643721	ExpressionStatement	curAd = state . curAd	210:1:4474:4493	643702	4	True				
ANR	643722	AssignmentExpression	curAd = state . curAd		643702	0		=			
ANR	643723	Identifier	curAd		643702	0					
ANR	643724	MemberAccess	state . curAd		643702	1					
ANR	643725	Identifier	state		643702	0					
ANR	643726	Identifier	curAd		643702	1					
ANR	643727	ExpressionStatement	exprSig = NULL	211:1:4496:4510	643702	5	True				
ANR	643728	AssignmentExpression	exprSig = NULL		643702	0		=			
ANR	643729	Identifier	exprSig		643702	0					
ANR	643730	Identifier	NULL		643702	1					
ANR	643731	ExpressionStatement	rval = true	212:1:4513:4525	643702	6	True				
ANR	643732	AssignmentExpression	rval = true		643702	0		=			
ANR	643733	Identifier	rval		643702	0					
ANR	643734	Identifier	true		643702	1					
ANR	643735	SwitchStatement	"switch ( FindExpr ( state , tree , exprSig , true ) )"		643702	7					
ANR	643736	Condition	"FindExpr ( state , tree , exprSig , true )"	214:9:4537:4577	643702	0	True				
ANR	643737	CallExpression	"FindExpr ( state , tree , exprSig , true )"		643702	0					
ANR	643738	Callee	FindExpr		643702	0					
ANR	643739	Identifier	FindExpr		643702	0					
ANR	643740	ArgumentList	state		643702	1					
ANR	643741	Argument	state		643702	0					
ANR	643742	Identifier	state		643702	0					
ANR	643743	Argument	tree		643702	1					
ANR	643744	Identifier	tree		643702	0					
ANR	643745	Argument	exprSig		643702	2					
ANR	643746	Identifier	exprSig		643702	0					
ANR	643747	Argument	true		643702	3					
ANR	643748	Identifier	true		643702	0					
ANR	643749	CompoundStatement		11:53:183:183	643702	1					
ANR	643750	Label	case EVAL_FAIL :	215:2:4585:4599	643702	0	True				
ANR	643751	Identifier	EVAL_FAIL		643702	0					
ANR	643752	ExpressionStatement	rval = false	216:3:4604:4616	643702	1	True				
ANR	643753	AssignmentExpression	rval = false		643702	0		=			
ANR	643754	Identifier	rval		643702	0					
ANR	643755	Identifier	false		643702	1					
ANR	643756	BreakStatement	break ;	217:3:4621:4626	643702	2	True				
ANR	643757	Label	case EVAL_ERROR :	219:2:4631:4646	643702	3	True				
ANR	643758	Identifier	EVAL_ERROR		643702	0					
ANR	643759	Label	case PROP_ERROR :	220:2:4650:4665	643702	4	True				
ANR	643760	Identifier	PROP_ERROR		643702	0					
ANR	643761	ExpressionStatement	val . SetErrorValue ( )	221:3:4670:4690	643702	5	True				
ANR	643762	CallExpression	val . SetErrorValue ( )		643702	0					
ANR	643763	Callee	val . SetErrorValue		643702	0					
ANR	643764	MemberAccess	val . SetErrorValue		643702	0					
ANR	643765	Identifier	val		643702	0					
ANR	643766	Identifier	SetErrorValue		643702	1					
ANR	643767	ArgumentList			643702	1					
ANR	643768	BreakStatement	break ;	222:3:4695:4700	643702	6	True				
ANR	643769	Label	case EVAL_UNDEF :	224:2:4705:4720	643702	7	True				
ANR	643770	Identifier	EVAL_UNDEF		643702	0					
ANR	643771	Label	case PROP_UNDEF :	225:2:4724:4739	643702	8	True				
ANR	643772	Identifier	PROP_UNDEF		643702	0					
ANR	643773	ExpressionStatement	val . SetUndefinedValue ( )	226:3:4744:4768	643702	9	True				
ANR	643774	CallExpression	val . SetUndefinedValue ( )		643702	0					
ANR	643775	Callee	val . SetUndefinedValue		643702	0					
ANR	643776	MemberAccess	val . SetUndefinedValue		643702	0					
ANR	643777	Identifier	val		643702	0					
ANR	643778	Identifier	SetUndefinedValue		643702	1					
ANR	643779	ArgumentList			643702	1					
ANR	643780	BreakStatement	break ;	227:3:4773:4778	643702	10	True				
ANR	643781	Label	case EVAL_OK :	229:2:4783:4795	643702	11	True				
ANR	643782	Identifier	EVAL_OK		643702	0					
ANR	643783	CompoundStatement		27:2:401:401	643702	12					
ANR	643784	IfStatement	if ( state . depth_remaining <= 0 )		643702	0					
ANR	643785	Condition	state . depth_remaining <= 0	231:7:4808:4833	643702	0	True				
ANR	643786	RelationalExpression	state . depth_remaining <= 0		643702	0		<=			
ANR	643787	MemberAccess	state . depth_remaining		643702	0					
ANR	643788	Identifier	state		643702	0					
ANR	643789	Identifier	depth_remaining		643702	1					
ANR	643790	PrimaryExpression	0		643702	1					
ANR	643791	CompoundStatement		28:36:439:439	643702	1					
ANR	643792	ExpressionStatement	val . SetErrorValue ( )	232:4:4843:4862	643702	0	True				
ANR	643793	CallExpression	val . SetErrorValue ( )		643702	0					
ANR	643794	Callee	val . SetErrorValue		643702	0					
ANR	643795	MemberAccess	val . SetErrorValue		643702	0					
ANR	643796	Identifier	val		643702	0					
ANR	643797	Identifier	SetErrorValue		643702	1					
ANR	643798	ArgumentList			643702	1					
ANR	643799	ExpressionStatement	state . curAd = curAd	233:4:4868:4887	643702	1	True				
ANR	643800	AssignmentExpression	state . curAd = curAd		643702	0		=			
ANR	643801	MemberAccess	state . curAd		643702	0					
ANR	643802	Identifier	state		643702	0					
ANR	643803	Identifier	curAd		643702	1					
ANR	643804	Identifier	curAd		643702	1					
ANR	643805	ReturnStatement	return false ;	234:4:4893:4905	643702	2	True				
ANR	643806	Identifier	false		643702	0					
ANR	643807	ExpressionStatement	state . depth_remaining --	236:3:4915:4938	643702	1	True				
ANR	643808	PostIncDecOperationExpression	state . depth_remaining --		643702	0					
ANR	643809	MemberAccess	state . depth_remaining		643702	0					
ANR	643810	Identifier	state		643702	0					
ANR	643811	Identifier	depth_remaining		643702	1					
ANR	643812	IncDec	--		643702	1					
ANR	643813	ExpressionStatement	"rval = tree -> Evaluate ( state , val )"	238:3:4944:4979	643702	2	True				
ANR	643814	AssignmentExpression	"rval = tree -> Evaluate ( state , val )"		643702	0		=			
ANR	643815	Identifier	rval		643702	0					
ANR	643816	CallExpression	"tree -> Evaluate ( state , val )"		643702	1					
ANR	643817	Callee	tree -> Evaluate		643702	0					
ANR	643818	PtrMemberAccess	tree -> Evaluate		643702	0					
ANR	643819	Identifier	tree		643702	0					
ANR	643820	Identifier	Evaluate		643702	1					
ANR	643821	ArgumentList	state		643702	1					
ANR	643822	Argument	state		643702	0					
ANR	643823	Identifier	state		643702	0					
ANR	643824	Argument	val		643702	1					
ANR	643825	Identifier	val		643702	0					
ANR	643826	ExpressionStatement	state . depth_remaining ++	240:3:4985:5008	643702	3	True				
ANR	643827	PostIncDecOperationExpression	state . depth_remaining ++		643702	0					
ANR	643828	MemberAccess	state . depth_remaining		643702	0					
ANR	643829	Identifier	state		643702	0					
ANR	643830	Identifier	depth_remaining		643702	1					
ANR	643831	IncDec	++		643702	1					
ANR	643832	BreakStatement	break ;	242:3:5014:5019	643702	4	True				
ANR	643833	Label	default :	244:2:5027:5034	643702	13	True				
ANR	643834	Identifier	default		643702	0					
ANR	643835	ExpressionStatement	"CLASSAD_EXCEPT ( ""ClassAd:  Should not reach here"" )"	244:12:5037:5088	643702	14	True				
ANR	643836	CallExpression	"CLASSAD_EXCEPT ( ""ClassAd:  Should not reach here"" )"		643702	0					
ANR	643837	Callee	CLASSAD_EXCEPT		643702	0					
ANR	643838	Identifier	CLASSAD_EXCEPT		643702	0					
ANR	643839	ArgumentList	"""ClassAd:  Should not reach here"""		643702	1					
ANR	643840	Argument	"""ClassAd:  Should not reach here"""		643702	0					
ANR	643841	PrimaryExpression	"""ClassAd:  Should not reach here"""		643702	0					
ANR	643842	IfStatement	"if ( ! rval || ! ( sig = new AttributeReference ( exprSig , attributeStr , absolute ) ) )"		643702	8					
ANR	643843	Condition	"! rval || ! ( sig = new AttributeReference ( exprSig , attributeStr , absolute ) )"	246:4:5097:5165	643702	0	True				
ANR	643844	OrExpression	"! rval || ! ( sig = new AttributeReference ( exprSig , attributeStr , absolute ) )"		643702	0		||			
ANR	643845	UnaryOperationExpression	! rval		643702	0					
ANR	643846	UnaryOperator	!		643702	0					
ANR	643847	Identifier	rval		643702	1					
ANR	643848	UnaryOperationExpression	"! ( sig = new AttributeReference ( exprSig , attributeStr , absolute ) )"		643702	1					
ANR	643849	UnaryOperator	!		643702	0					
ANR	643850	AssignmentExpression	"sig = new AttributeReference ( exprSig , attributeStr , absolute )"		643702	1		=			
ANR	643851	Identifier	sig		643702	0					
ANR	643852	Expression	"exprSig , attributeStr , absolute"		643702	1					
ANR	643853	Identifier	exprSig		643702	0					
ANR	643854	Expression	"attributeStr , absolute"		643702	1					
ANR	643855	Identifier	attributeStr		643702	0					
ANR	643856	Identifier	absolute		643702	1					
ANR	643857	CompoundStatement		43:74:769:769	643702	1					
ANR	643858	IfStatement	if ( rval )		643702	0					
ANR	643859	Condition	rval	247:6:5175:5178	643702	0	True				
ANR	643860	Identifier	rval		643702	0					
ANR	643861	CompoundStatement		44:13:784:784	643702	1					
ANR	643862	ExpressionStatement	CondorErrno = ERR_MEM_ALLOC_FAILED	248:3:5187:5221	643702	0	True				
ANR	643863	AssignmentExpression	CondorErrno = ERR_MEM_ALLOC_FAILED		643702	0		=			
ANR	643864	Identifier	CondorErrno		643702	0					
ANR	643865	Identifier	ERR_MEM_ALLOC_FAILED		643702	1					
ANR	643866	ExpressionStatement	"CondorErrMsg = """""	249:3:5226:5243	643702	1	True				
ANR	643867	AssignmentExpression	"CondorErrMsg = """""		643702	0		=			
ANR	643868	Identifier	CondorErrMsg		643702	0					
ANR	643869	PrimaryExpression	""""""		643702	1					
ANR	643870	Statement	delete	251:2:5251:5256	643702	1	True				
ANR	643871	ExpressionStatement	exprSig	251:9:5258:5265	643702	2	True				
ANR	643872	Identifier	exprSig		643702	0					
ANR	643873	ExpressionStatement	sig = NULL	252:2:5269:5279	643702	3	True				
ANR	643874	AssignmentExpression	sig = NULL		643702	0		=			
ANR	643875	Identifier	sig		643702	0					
ANR	643876	Identifier	NULL		643702	1					
ANR	643877	ReturnStatement	return ( false ) ;	253:2:5283:5298	643702	4	True				
ANR	643878	Identifier	false		643702	0					
ANR	643879	ExpressionStatement	state . curAd = curAd	255:1:5304:5323	643702	9	True				
ANR	643880	AssignmentExpression	state . curAd = curAd		643702	0		=			
ANR	643881	MemberAccess	state . curAd		643702	0					
ANR	643882	Identifier	state		643702	0					
ANR	643883	Identifier	curAd		643702	1					
ANR	643884	Identifier	curAd		643702	1					
ANR	643885	ReturnStatement	return rval ;	256:1:5326:5337	643702	10	True				
ANR	643886	Identifier	rval		643702	0					
ANR	643887	ReturnType	bool		643702	1					
ANR	643888	Identifier	AttributeReference :: _Evaluate		643702	2					
ANR	643889	ParameterList	"EvalState & state , Value & val , ExprTree * & sig"		643702	3					
ANR	643890	Parameter	EvalState & state	203:11:4344:4359	643702	0	True				
ANR	643891	ParameterType	EvalState &		643702	0					
ANR	643892	Identifier	state		643702	1					
ANR	643893	Parameter	Value & val	203:29:4362:4371	643702	1	True				
ANR	643894	ParameterType	Value &		643702	0					
ANR	643895	Identifier	val		643702	1					
ANR	643896	Parameter	ExprTree * & sig	203:41:4374:4387	643702	2	True				
ANR	643897	ParameterType	ExprTree * &		643702	0					
ANR	643898	Identifier	sig		643702	1					
ANR	643899	CFGEntryNode	ENTRY		643702		True				
ANR	643900	CFGExitNode	EXIT		643702		True				
ANR	643901	Symbol	val		643702						
ANR	643902	Symbol	NULL		643702						
ANR	643903	Symbol	exprSig		643702						
ANR	643904	Symbol	tree		643702						
ANR	643905	Symbol	false		643702						
ANR	643906	Symbol	ERR_MEM_ALLOC_FAILED		643702						
ANR	643907	Symbol	curAd		643702						
ANR	643908	Symbol	CondorErrno		643702						
ANR	643909	Symbol	sig		643702						
ANR	643910	Symbol	state . curAd		643702						
ANR	643911	Symbol	* tree		643702						
ANR	643912	Symbol	state . depth_remaining		643702						
ANR	643913	Symbol	CondorErrMsg		643702						
ANR	643914	Symbol	FindExpr		643702						
ANR	643915	Symbol	absolute		643702						
ANR	643916	Symbol	true		643702						
ANR	643917	Symbol	tree -> Evaluate		643702						
ANR	643918	Symbol	rval		643702						
ANR	643919	Symbol	state		643702						
ANR	643920	Symbol	attributeStr		643702						
ANR	643921	DeclStmt									
ANR	643922	Decl							ExprTree	ExprTree *	tree
ANR	643923	DeclStmt									
ANR	643924	Decl							ExprTree	ExprTree *	dummy
ANR	643925	DeclStmt									
ANR	643926	Decl							const ClassAd	const ClassAd *	curAd
ANR	643927	DeclStmt									
ANR	643928	Decl							bool	bool	rval
ANR	643929	DeclStmt									
ANR	643930	Decl							ExprTree	ExprTree *	expr_ntree
ANR	643931	DeclStmt									
ANR	643932	Decl							Value	Value	expr_val
ANR	643933	Function	AttributeReference :: FindExpr	349:0:7240:10170							
ANR	643934	FunctionDef	"AttributeReference :: FindExpr (EvalState & state , ExprTree * & tree , ExprTree * & sig , bool wantSig)"		643933	0					
ANR	643935	CompoundStatement		351:0:7345:10170	643933	0					
ANR	643936	IdentifierDeclStatement	const ClassAd * current = NULL ;	352:1:7348:7375	643933	0	True				
ANR	643937	IdentifierDecl	* current = NULL		643933	0					
ANR	643938	IdentifierDeclType	const ClassAd *		643933	0					
ANR	643939	Identifier	current		643933	1					
ANR	643940	AssignmentExpression	* current = NULL		643933	2		=			
ANR	643941	Identifier	NULL		643933	0					
ANR	643942	Identifier	NULL		643933	1					
ANR	643943	IdentifierDeclStatement	const ExprList * adList = NULL ;	353:1:7378:7407	643933	1	True				
ANR	643944	IdentifierDecl	* adList = NULL		643933	0					
ANR	643945	IdentifierDeclType	const ExprList *		643933	0					
ANR	643946	Identifier	adList		643933	1					
ANR	643947	AssignmentExpression	* adList = NULL		643933	2		=			
ANR	643948	Identifier	NULL		643933	0					
ANR	643949	Identifier	NULL		643933	1					
ANR	643950	IdentifierDeclStatement	Value val ;	354:1:7410:7419	643933	2	True				
ANR	643951	IdentifierDecl	val		643933	0					
ANR	643952	IdentifierDeclType	Value		643933	0					
ANR	643953	Identifier	val		643933	1					
ANR	643954	IdentifierDeclStatement	bool rval ;	355:1:7422:7431	643933	3	True				
ANR	643955	IdentifierDecl	rval		643933	0					
ANR	643956	IdentifierDeclType	bool		643933	0					
ANR	643957	Identifier	rval		643933	1					
ANR	643958	ExpressionStatement	sig = NULL	357:1:7435:7445	643933	4	True				
ANR	643959	AssignmentExpression	sig = NULL		643933	0		=			
ANR	643960	Identifier	sig		643933	0					
ANR	643961	Identifier	NULL		643933	1					
ANR	643962	IfStatement	if ( expr == NULL )		643933	5					
ANR	643963	Condition	expr == NULL	360:5:7493:7504	643933	0	True				
ANR	643964	EqualityExpression	expr == NULL		643933	0		==			
ANR	643965	Identifier	expr		643933	0					
ANR	643966	Identifier	NULL		643933	1					
ANR	643967	CompoundStatement		10:20:162:162	643933	1					
ANR	643968	ExpressionStatement	current = absolute ? state . rootAd : state . curAd	362:2:7536:7583	643933	0	True				
ANR	643969	AssignmentExpression	current = absolute ? state . rootAd : state . curAd		643933	0		=			
ANR	643970	Identifier	current		643933	0					
ANR	643971	ConditionalExpression	absolute ? state . rootAd : state . curAd		643933	1					
ANR	643972	Condition	absolute		643933	0					
ANR	643973	Identifier	absolute		643933	0					
ANR	643974	MemberAccess	state . rootAd		643933	1					
ANR	643975	Identifier	state		643933	0					
ANR	643976	Identifier	rootAd		643933	1					
ANR	643977	MemberAccess	state . curAd		643933	2					
ANR	643978	Identifier	state		643933	0					
ANR	643979	Identifier	curAd		643933	1					
ANR	643980	IfStatement	if ( absolute && ( current == NULL ) )		643933	1					
ANR	643981	Condition	absolute && ( current == NULL )	363:6:7591:7621	643933	0	True				
ANR	643982	AndExpression	absolute && ( current == NULL )		643933	0		&&			
ANR	643983	Identifier	absolute		643933	0					
ANR	643984	EqualityExpression	current == NULL		643933	1		==			
ANR	643985	Identifier	current		643933	0					
ANR	643986	Identifier	NULL		643933	1					
ANR	643987	CompoundStatement		13:40:279:279	643933	1					
ANR	643988	ReturnStatement	return EVAL_FAIL ;	364:3:7662:7678	643933	0	True				
ANR	643989	Identifier	EVAL_FAIL		643933	0					
ANR	643990	ElseStatement	else		643933	0					
ANR	643991	CompoundStatement		16:8:373:373	643933	0					
ANR	643992	ExpressionStatement	"rval = wantSig ? expr -> Evaluate ( state , val , sig ) : expr -> Evaluate ( state , val )"	368:2:7740:7808	643933	0	True				
ANR	643993	AssignmentExpression	"rval = wantSig ? expr -> Evaluate ( state , val , sig ) : expr -> Evaluate ( state , val )"		643933	0		=			
ANR	643994	Identifier	rval		643933	0					
ANR	643995	ConditionalExpression	"wantSig ? expr -> Evaluate ( state , val , sig ) : expr -> Evaluate ( state , val )"		643933	1					
ANR	643996	Condition	wantSig		643933	0					
ANR	643997	Identifier	wantSig		643933	0					
ANR	643998	CallExpression	"expr -> Evaluate ( state , val , sig )"		643933	1					
ANR	643999	Callee	expr -> Evaluate		643933	0					
ANR	644000	PtrMemberAccess	expr -> Evaluate		643933	0					
ANR	644001	Identifier	expr		643933	0					
ANR	644002	Identifier	Evaluate		643933	1					
ANR	644003	ArgumentList	state		643933	1					
ANR	644004	Argument	state		643933	0					
ANR	644005	Identifier	state		643933	0					
ANR	644006	Argument	val		643933	1					
ANR	644007	Identifier	val		643933	0					
ANR	644008	Argument	sig		643933	2					
ANR	644009	Identifier	sig		643933	0					
ANR	644010	CallExpression	"expr -> Evaluate ( state , val )"		643933	2					
ANR	644011	Callee	expr -> Evaluate		643933	0					
ANR	644012	PtrMemberAccess	expr -> Evaluate		643933	0					
ANR	644013	Identifier	expr		643933	0					
ANR	644014	Identifier	Evaluate		643933	1					
ANR	644015	ArgumentList	state		643933	1					
ANR	644016	Argument	state		643933	0					
ANR	644017	Identifier	state		643933	0					
ANR	644018	Argument	val		643933	1					
ANR	644019	Identifier	val		643933	0					
ANR	644020	IfStatement	if ( ! rval )		643933	1					
ANR	644021	Condition	! rval	369:6:7816:7820	643933	0	True				
ANR	644022	UnaryOperationExpression	! rval		643933	0					
ANR	644023	UnaryOperator	!		643933	0					
ANR	644024	Identifier	rval		643933	1					
ANR	644025	CompoundStatement		19:14:478:478	643933	1					
ANR	644026	ReturnStatement	return ( EVAL_FAIL ) ;	370:3:7829:7848	643933	0	True				
ANR	644027	Identifier	EVAL_FAIL		643933	0					
ANR	644028	IfStatement	if ( val . IsUndefinedValue ( ) )		643933	2					
ANR	644029	Condition	val . IsUndefinedValue ( )	373:6:7861:7883	643933	0	True				
ANR	644030	CallExpression	val . IsUndefinedValue ( )		643933	0					
ANR	644031	Callee	val . IsUndefinedValue		643933	0					
ANR	644032	MemberAccess	val . IsUndefinedValue		643933	0					
ANR	644033	Identifier	val		643933	0					
ANR	644034	Identifier	IsUndefinedValue		643933	1					
ANR	644035	ArgumentList			643933	1					
ANR	644036	CompoundStatement		23:32:541:541	643933	1					
ANR	644037	ReturnStatement	return ( PROP_UNDEF ) ;	374:3:7892:7912	643933	0	True				
ANR	644038	Identifier	PROP_UNDEF		643933	0					
ANR	644039	ElseStatement	else		643933	0					
ANR	644040	IfStatement	if ( val . IsErrorValue ( ) )		643933	0					
ANR	644041	Condition	val . IsErrorValue ( )	375:13:7927:7945	643933	0	True				
ANR	644042	CallExpression	val . IsErrorValue ( )		643933	0					
ANR	644043	Callee	val . IsErrorValue		643933	0					
ANR	644044	MemberAccess	val . IsErrorValue		643933	0					
ANR	644045	Identifier	val		643933	0					
ANR	644046	Identifier	IsErrorValue		643933	1					
ANR	644047	ArgumentList			643933	1					
ANR	644048	CompoundStatement		25:35:603:603	643933	1					
ANR	644049	ReturnStatement	return ( PROP_ERROR ) ;	376:3:7954:7974	643933	0	True				
ANR	644050	Identifier	PROP_ERROR		643933	0					
ANR	644051	IfStatement	if ( ! val . IsClassAdValue ( current ) && ! val . IsListValue ( adList ) )		643933	3					
ANR	644052	Condition	! val . IsClassAdValue ( current ) && ! val . IsListValue ( adList )	379:6:7989:8048	643933	0	True				
ANR	644053	AndExpression	! val . IsClassAdValue ( current ) && ! val . IsListValue ( adList )		643933	0		&&			
ANR	644054	UnaryOperationExpression	! val . IsClassAdValue ( current )		643933	0					
ANR	644055	UnaryOperator	!		643933	0					
ANR	644056	CallExpression	val . IsClassAdValue ( current )		643933	1					
ANR	644057	Callee	val . IsClassAdValue		643933	0					
ANR	644058	MemberAccess	val . IsClassAdValue		643933	0					
ANR	644059	Identifier	val		643933	0					
ANR	644060	Identifier	IsClassAdValue		643933	1					
ANR	644061	ArgumentList	current		643933	1					
ANR	644062	Argument	current		643933	0					
ANR	644063	Identifier	current		643933	0					
ANR	644064	UnaryOperationExpression	! val . IsListValue ( adList )		643933	1					
ANR	644065	UnaryOperator	!		643933	0					
ANR	644066	CallExpression	val . IsListValue ( adList )		643933	1					
ANR	644067	Callee	val . IsListValue		643933	0					
ANR	644068	MemberAccess	val . IsListValue		643933	0					
ANR	644069	Identifier	val		643933	0					
ANR	644070	Identifier	IsListValue		643933	1					
ANR	644071	ArgumentList	adList		643933	1					
ANR	644072	Argument	adList		643933	0					
ANR	644073	Identifier	adList		643933	0					
ANR	644074	CompoundStatement		29:69:706:706	643933	1					
ANR	644075	ReturnStatement	return ( EVAL_ERROR ) ;	380:3:8057:8077	643933	0	True				
ANR	644076	Identifier	EVAL_ERROR		643933	0					
ANR	644077	IfStatement	if ( val . IsListValue ( ) )		643933	6					
ANR	644078	Condition	val . IsListValue ( )	384:5:8092:8109	643933	0	True				
ANR	644079	CallExpression	val . IsListValue ( )		643933	0					
ANR	644080	Callee	val . IsListValue		643933	0					
ANR	644081	MemberAccess	val . IsListValue		643933	0					
ANR	644082	Identifier	val		643933	0					
ANR	644083	Identifier	IsListValue		643933	1					
ANR	644084	ArgumentList			643933	1					
ANR	644085	CompoundStatement		77:2:2069:2102	643933	1					
ANR	644086	IdentifierDeclStatement	vector < ExprTree * > eVector ;	385:2:8117:8144	643933	0	True				
ANR	644087	IdentifierDecl	eVector		643933	0					
ANR	644088	IdentifierDeclType	vector < ExprTree * >		643933	0					
ANR	644089	Identifier	eVector		643933	1					
ANR	644090	IdentifierDeclStatement	const ExprTree * currExpr ;	386:2:8148:8172	643933	1	True				
ANR	644091	IdentifierDecl	* currExpr		643933	0					
ANR	644092	IdentifierDeclType	const ExprTree *		643933	0					
ANR	644093	Identifier	currExpr		643933	1					
ANR	644094	ForStatement	for ( ExprListIterator itr ( adList ) ; ! itr . IsAfterLast ( ) ; itr . NextExpr ( ) )		643933	2					
ANR	644095	ForInit	ExprListIterator itr ( adList ) ;	389:6:8264:8292	643933	0	True				
ANR	644096	IdentifierDeclStatement	ExprListIterator itr ( adList ) ;		643933	0					
ANR	644097	IdentifierDecl	itr ( adList )		643933	0					
ANR	644098	IdentifierDeclType	ExprListIterator		643933	0					
ANR	644099	Identifier	itr		643933	1					
ANR	644100	Identifier	adList		643933	2					
ANR	644101	Condition	! itr . IsAfterLast ( )	389:35:8293:8311	643933	1	True				
ANR	644102	UnaryOperationExpression	! itr . IsAfterLast ( )		643933	0					
ANR	644103	UnaryOperator	!		643933	0					
ANR	644104	CallExpression	itr . IsAfterLast ( )		643933	1					
ANR	644105	Callee	itr . IsAfterLast		643933	0					
ANR	644106	MemberAccess	itr . IsAfterLast		643933	0					
ANR	644107	Identifier	itr		643933	0					
ANR	644108	Identifier	IsAfterLast		643933	1					
ANR	644109	ArgumentList			643933	1					
ANR	644110	CallExpression	itr . NextExpr ( )	389:55:8313:8327	643933	2	True				
ANR	644111	Callee	itr . NextExpr		643933	0					
ANR	644112	MemberAccess	itr . NextExpr		643933	0					
ANR	644113	Identifier	itr		643933	0					
ANR	644114	Identifier	NextExpr		643933	1					
ANR	644115	ArgumentList			643933	1					
ANR	644116	CompoundStatement		39:71:983:983	643933	3					
ANR	644117	ExpressionStatement	currExpr = itr . CurrentExpr ( )	390:4:8335:8364	643933	0	True				
ANR	644118	AssignmentExpression	currExpr = itr . CurrentExpr ( )		643933	0		=			
ANR	644119	Identifier	currExpr		643933	0					
ANR	644120	CallExpression	itr . CurrentExpr ( )		643933	1					
ANR	644121	Callee	itr . CurrentExpr		643933	0					
ANR	644122	MemberAccess	itr . CurrentExpr		643933	0					
ANR	644123	Identifier	itr		643933	0					
ANR	644124	Identifier	CurrentExpr		643933	1					
ANR	644125	ArgumentList			643933	1					
ANR	644126	IfStatement	if ( currExpr == NULL )		643933	1					
ANR	644127	Condition	currExpr == NULL	391:7:8373:8388	643933	0	True				
ANR	644128	EqualityExpression	currExpr == NULL		643933	0		==			
ANR	644129	Identifier	currExpr		643933	0					
ANR	644130	Identifier	NULL		643933	1					
ANR	644131	CompoundStatement		41:26:1046:1046	643933	1					
ANR	644132	ReturnStatement	return ( EVAL_FAIL ) ;	392:4:8398:8417	643933	0	True				
ANR	644133	Identifier	EVAL_FAIL		643933	0					
ANR	644134	ElseStatement	else		643933	0					
ANR	644135	CompoundStatement		62:4:1692:1725	643933	0					
ANR	644136	IdentifierDeclStatement	AttributeReference * attrRef = NULL ;	394:4:8435:8469	643933	0	True				
ANR	644137	IdentifierDecl	* attrRef = NULL		643933	0					
ANR	644138	IdentifierDeclType	AttributeReference *		643933	0					
ANR	644139	Identifier	attrRef		643933	1					
ANR	644140	AssignmentExpression	* attrRef = NULL		643933	2		=			
ANR	644141	Identifier	NULL		643933	0					
ANR	644142	Identifier	NULL		643933	1					
ANR	644143	ExpressionStatement	"attrRef = MakeAttributeReference ( currExpr -> Copy ( ) , attributeStr , false )"	395:4:8475:8577	643933	1	True				
ANR	644144	AssignmentExpression	"attrRef = MakeAttributeReference ( currExpr -> Copy ( ) , attributeStr , false )"		643933	0		=			
ANR	644145	Identifier	attrRef		643933	0					
ANR	644146	CallExpression	"MakeAttributeReference ( currExpr -> Copy ( ) , attributeStr , false )"		643933	1					
ANR	644147	Callee	MakeAttributeReference		643933	0					
ANR	644148	Identifier	MakeAttributeReference		643933	0					
ANR	644149	ArgumentList	currExpr -> Copy ( )		643933	1					
ANR	644150	Argument	currExpr -> Copy ( )		643933	0					
ANR	644151	CallExpression	currExpr -> Copy ( )		643933	0					
ANR	644152	Callee	currExpr -> Copy		643933	0					
ANR	644153	PtrMemberAccess	currExpr -> Copy		643933	0					
ANR	644154	Identifier	currExpr		643933	0					
ANR	644155	Identifier	Copy		643933	1					
ANR	644156	ArgumentList			643933	1					
ANR	644157	Argument	attributeStr		643933	1					
ANR	644158	Identifier	attributeStr		643933	0					
ANR	644159	Argument	false		643933	2					
ANR	644160	Identifier	false		643933	0					
ANR	644161	ExpressionStatement	val . Clear ( )	398:4:8583:8595	643933	2	True				
ANR	644162	CallExpression	val . Clear ( )		643933	0					
ANR	644163	Callee	val . Clear		643933	0					
ANR	644164	MemberAccess	val . Clear		643933	0					
ANR	644165	Identifier	val		643933	0					
ANR	644166	Identifier	Clear		643933	1					
ANR	644167	ArgumentList			643933	1					
ANR	644168	IdentifierDeclStatement	EvalState tstate ;	402:4:8776:8792	643933	3	True				
ANR	644169	IdentifierDecl	tstate		643933	0					
ANR	644170	IdentifierDeclType	EvalState		643933	0					
ANR	644171	Identifier	tstate		643933	1					
ANR	644172	ExpressionStatement	tstate . SetScopes ( state . curAd )	403:4:8798:8827	643933	4	True				
ANR	644173	CallExpression	tstate . SetScopes ( state . curAd )		643933	0					
ANR	644174	Callee	tstate . SetScopes		643933	0					
ANR	644175	MemberAccess	tstate . SetScopes		643933	0					
ANR	644176	Identifier	tstate		643933	0					
ANR	644177	Identifier	SetScopes		643933	1					
ANR	644178	ArgumentList	state . curAd		643933	1					
ANR	644179	Argument	state . curAd		643933	0					
ANR	644180	MemberAccess	state . curAd		643933	0					
ANR	644181	Identifier	state		643933	0					
ANR	644182	Identifier	curAd		643933	1					
ANR	644183	ExpressionStatement	"rval = wantSig ? attrRef -> Evaluate ( tstate , val , sig ) : attrRef -> Evaluate ( tstate , val )"	404:4:8833:8927	643933	5	True				
ANR	644184	AssignmentExpression	"rval = wantSig ? attrRef -> Evaluate ( tstate , val , sig ) : attrRef -> Evaluate ( tstate , val )"		643933	0		=			
ANR	644185	Identifier	rval		643933	0					
ANR	644186	ConditionalExpression	"wantSig ? attrRef -> Evaluate ( tstate , val , sig ) : attrRef -> Evaluate ( tstate , val )"		643933	1					
ANR	644187	Condition	wantSig		643933	0					
ANR	644188	Identifier	wantSig		643933	0					
ANR	644189	CallExpression	"attrRef -> Evaluate ( tstate , val , sig )"		643933	1					
ANR	644190	Callee	attrRef -> Evaluate		643933	0					
ANR	644191	PtrMemberAccess	attrRef -> Evaluate		643933	0					
ANR	644192	Identifier	attrRef		643933	0					
ANR	644193	Identifier	Evaluate		643933	1					
ANR	644194	ArgumentList	tstate		643933	1					
ANR	644195	Argument	tstate		643933	0					
ANR	644196	Identifier	tstate		643933	0					
ANR	644197	Argument	val		643933	1					
ANR	644198	Identifier	val		643933	0					
ANR	644199	Argument	sig		643933	2					
ANR	644200	Identifier	sig		643933	0					
ANR	644201	CallExpression	"attrRef -> Evaluate ( tstate , val )"		643933	2					
ANR	644202	Callee	attrRef -> Evaluate		643933	0					
ANR	644203	PtrMemberAccess	attrRef -> Evaluate		643933	0					
ANR	644204	Identifier	attrRef		643933	0					
ANR	644205	Identifier	Evaluate		643933	1					
ANR	644206	ArgumentList	tstate		643933	1					
ANR	644207	Argument	tstate		643933	0					
ANR	644208	Identifier	tstate		643933	0					
ANR	644209	Argument	val		643933	1					
ANR	644210	Identifier	val		643933	0					
ANR	644211	Statement	delete	406:4:8933:8938	643933	6	True				
ANR	644212	ExpressionStatement	attrRef	406:11:8940:8947	643933	7	True				
ANR	644213	Identifier	attrRef		643933	0					
ANR	644214	IfStatement	if ( ! rval )		643933	8					
ANR	644215	Condition	! rval	407:8:8957:8961	643933	0	True				
ANR	644216	UnaryOperationExpression	! rval		643933	0					
ANR	644217	UnaryOperator	!		643933	0					
ANR	644218	Identifier	rval		643933	1					
ANR	644219	CompoundStatement		57:16:1619:1619	643933	1					
ANR	644220	ReturnStatement	return ( EVAL_FAIL ) ;	408:5:8972:8991	643933	0	True				
ANR	644221	Identifier	EVAL_FAIL		643933	0					
ANR	644222	IdentifierDeclStatement	ClassAd * evaledAd = NULL ;	411:4:9008:9032	643933	9	True				
ANR	644223	IdentifierDecl	* evaledAd = NULL		643933	0					
ANR	644224	IdentifierDeclType	ClassAd *		643933	0					
ANR	644225	Identifier	evaledAd		643933	1					
ANR	644226	AssignmentExpression	* evaledAd = NULL		643933	2		=			
ANR	644227	Identifier	NULL		643933	0					
ANR	644228	Identifier	NULL		643933	1					
ANR	644229	IdentifierDeclStatement	const ExprList * evaledList = NULL ;	412:4:9038:9071	643933	10	True				
ANR	644230	IdentifierDecl	* evaledList = NULL		643933	0					
ANR	644231	IdentifierDeclType	const ExprList *		643933	0					
ANR	644232	Identifier	evaledList		643933	1					
ANR	644233	AssignmentExpression	* evaledList = NULL		643933	2		=			
ANR	644234	Identifier	NULL		643933	0					
ANR	644235	Identifier	NULL		643933	1					
ANR	644236	IfStatement	if ( val . IsClassAdValue ( evaledAd ) )		643933	11					
ANR	644237	Condition	val . IsClassAdValue ( evaledAd )	413:8:9081:9110	643933	0	True				
ANR	644238	CallExpression	val . IsClassAdValue ( evaledAd )		643933	0					
ANR	644239	Callee	val . IsClassAdValue		643933	0					
ANR	644240	MemberAccess	val . IsClassAdValue		643933	0					
ANR	644241	Identifier	val		643933	0					
ANR	644242	Identifier	IsClassAdValue		643933	1					
ANR	644243	ArgumentList	evaledAd		643933	1					
ANR	644244	Argument	evaledAd		643933	0					
ANR	644245	Identifier	evaledAd		643933	0					
ANR	644246	CompoundStatement		63:41:1768:1768	643933	1					
ANR	644247	ExpressionStatement	eVector . push_back ( evaledAd )	414:5:9121:9150	643933	0	True				
ANR	644248	CallExpression	eVector . push_back ( evaledAd )		643933	0					
ANR	644249	Callee	eVector . push_back		643933	0					
ANR	644250	MemberAccess	eVector . push_back		643933	0					
ANR	644251	Identifier	eVector		643933	0					
ANR	644252	Identifier	push_back		643933	1					
ANR	644253	ArgumentList	evaledAd		643933	1					
ANR	644254	Argument	evaledAd		643933	0					
ANR	644255	Identifier	evaledAd		643933	0					
ANR	644256	ContinueStatement	continue ;	415:5:9157:9165	643933	1	True				
ANR	644257	ElseStatement	else		643933	0					
ANR	644258	IfStatement	if ( val . IsListValue ( evaledList ) )		643933	0					
ANR	644259	Condition	val . IsListValue ( evaledList )	417:13:9186:9214	643933	0	True				
ANR	644260	CallExpression	val . IsListValue ( evaledList )		643933	0					
ANR	644261	Callee	val . IsListValue		643933	0					
ANR	644262	MemberAccess	val . IsListValue		643933	0					
ANR	644263	Identifier	val		643933	0					
ANR	644264	Identifier	IsListValue		643933	1					
ANR	644265	ArgumentList	evaledList		643933	1					
ANR	644266	Argument	evaledList		643933	0					
ANR	644267	Identifier	evaledList		643933	0					
ANR	644268	CompoundStatement		67:45:1872:1872	643933	1					
ANR	644269	ExpressionStatement	eVector . push_back ( evaledList -> Copy ( ) )	418:5:9225:9265	643933	0	True				
ANR	644270	CallExpression	eVector . push_back ( evaledList -> Copy ( ) )		643933	0					
ANR	644271	Callee	eVector . push_back		643933	0					
ANR	644272	MemberAccess	eVector . push_back		643933	0					
ANR	644273	Identifier	eVector		643933	0					
ANR	644274	Identifier	push_back		643933	1					
ANR	644275	ArgumentList	evaledList -> Copy ( )		643933	1					
ANR	644276	Argument	evaledList -> Copy ( )		643933	0					
ANR	644277	CallExpression	evaledList -> Copy ( )		643933	0					
ANR	644278	Callee	evaledList -> Copy		643933	0					
ANR	644279	PtrMemberAccess	evaledList -> Copy		643933	0					
ANR	644280	Identifier	evaledList		643933	0					
ANR	644281	Identifier	Copy		643933	1					
ANR	644282	ArgumentList			643933	1					
ANR	644283	ContinueStatement	continue ;	419:5:9272:9280	643933	1	True				
ANR	644284	ElseStatement	else		643933	0					
ANR	644285	CompoundStatement		71:9:1951:1951	643933	0					
ANR	644286	ExpressionStatement	eVector . push_back ( Literal :: MakeLiteral ( val ) )	422:5:9304:9352	643933	0	True				
ANR	644287	CallExpression	eVector . push_back ( Literal :: MakeLiteral ( val ) )		643933	0					
ANR	644288	Callee	eVector . push_back		643933	0					
ANR	644289	MemberAccess	eVector . push_back		643933	0					
ANR	644290	Identifier	eVector		643933	0					
ANR	644291	Identifier	push_back		643933	1					
ANR	644292	ArgumentList	Literal :: MakeLiteral ( val )		643933	1					
ANR	644293	Argument	Literal :: MakeLiteral ( val )		643933	0					
ANR	644294	CallExpression	Literal :: MakeLiteral ( val )		643933	0					
ANR	644295	Callee	Literal :: MakeLiteral		643933	0					
ANR	644296	Identifier	Literal :: MakeLiteral		643933	0					
ANR	644297	ArgumentList	val		643933	1					
ANR	644298	Argument	val		643933	0					
ANR	644299	Identifier	val		643933	0					
ANR	644300	ExpressionStatement	tree = ExprList :: MakeExprList ( eVector )	426:2:9371:9411	643933	3	True				
ANR	644301	AssignmentExpression	tree = ExprList :: MakeExprList ( eVector )		643933	0		=			
ANR	644302	Identifier	tree		643933	0					
ANR	644303	CallExpression	ExprList :: MakeExprList ( eVector )		643933	1					
ANR	644304	Callee	ExprList :: MakeExprList		643933	0					
ANR	644305	Identifier	ExprList :: MakeExprList		643933	0					
ANR	644306	ArgumentList	eVector		643933	1					
ANR	644307	Argument	eVector		643933	0					
ANR	644308	Identifier	eVector		643933	0					
ANR	644309	IdentifierDeclStatement	ClassAd * newRoot = new ClassAd ( ) ;	427:2:9415:9448	643933	4	True				
ANR	644310	IdentifierDecl	* newRoot = new ClassAd ( )		643933	0					
ANR	644311	IdentifierDeclType	ClassAd *		643933	0					
ANR	644312	Identifier	newRoot		643933	1					
ANR	644313	AssignmentExpression	* newRoot = new ClassAd ( )		643933	2		=			
ANR	644314	Identifier	newRoot		643933	0					
ANR	644315	UnaryExpression	new ClassAd ( )		643933	1					
ANR	644316	ExpressionStatement	( ( ExprList * ) tree ) -> SetParentScope ( newRoot )	428:2:9452:9496	643933	5	True				
ANR	644317	CallExpression	( ( ExprList * ) tree ) -> SetParentScope ( newRoot )		643933	0					
ANR	644318	Callee	( ( ExprList * ) tree ) -> SetParentScope		643933	0					
ANR	644319	PtrMemberAccess	( ( ExprList * ) tree ) -> SetParentScope		643933	0					
ANR	644320	CastExpression	( ExprList * ) tree		643933	0					
ANR	644321	CastTarget	ExprList *		643933	0					
ANR	644322	Identifier	tree		643933	1					
ANR	644323	Identifier	SetParentScope		643933	1					
ANR	644324	ArgumentList	newRoot		643933	1					
ANR	644325	Argument	newRoot		643933	0					
ANR	644326	Identifier	newRoot		643933	0					
ANR	644327	ReturnStatement	return EVAL_OK ;	429:2:9500:9514	643933	6	True				
ANR	644328	Identifier	EVAL_OK		643933	0					
ANR	644329	IdentifierDeclStatement	"int rc = current -> LookupInScope ( attributeStr , tree , state ) ;"	440:1:9954:10014	643933	7	True				
ANR	644330	IdentifierDecl	"rc = current -> LookupInScope ( attributeStr , tree , state )"		643933	0					
ANR	644331	IdentifierDeclType	int		643933	0					
ANR	644332	Identifier	rc		643933	1					
ANR	644333	AssignmentExpression	"rc = current -> LookupInScope ( attributeStr , tree , state )"		643933	2		=			
ANR	644334	Identifier	rc		643933	0					
ANR	644335	CallExpression	"current -> LookupInScope ( attributeStr , tree , state )"		643933	1					
ANR	644336	Callee	current -> LookupInScope		643933	0					
ANR	644337	PtrMemberAccess	current -> LookupInScope		643933	0					
ANR	644338	Identifier	current		643933	0					
ANR	644339	Identifier	LookupInScope		643933	1					
ANR	644340	ArgumentList	attributeStr		643933	1					
ANR	644341	Argument	attributeStr		643933	0					
ANR	644342	Identifier	attributeStr		643933	0					
ANR	644343	Argument	tree		643933	1					
ANR	644344	Identifier	tree		643933	0					
ANR	644345	Argument	state		643933	2					
ANR	644346	Identifier	state		643933	0					
ANR	644347	IfStatement	if ( ! expr && rc == EVAL_UNDEF && current -> alternateScope )		643933	8					
ANR	644348	Condition	! expr && rc == EVAL_UNDEF && current -> alternateScope	441:6:10022:10073	643933	0	True				
ANR	644349	AndExpression	! expr && rc == EVAL_UNDEF && current -> alternateScope		643933	0		&&			
ANR	644350	UnaryOperationExpression	! expr		643933	0					
ANR	644351	UnaryOperator	!		643933	0					
ANR	644352	Identifier	expr		643933	1					
ANR	644353	AndExpression	rc == EVAL_UNDEF && current -> alternateScope		643933	1		&&			
ANR	644354	EqualityExpression	rc == EVAL_UNDEF		643933	0		==			
ANR	644355	Identifier	rc		643933	0					
ANR	644356	Identifier	EVAL_UNDEF		643933	1					
ANR	644357	PtrMemberAccess	current -> alternateScope		643933	1					
ANR	644358	Identifier	current		643933	0					
ANR	644359	Identifier	alternateScope		643933	1					
ANR	644360	CompoundStatement		91:61:2731:2731	643933	1					
ANR	644361	ExpressionStatement	"rc = current -> alternateScope -> LookupInScope ( attributeStr , tree , state )"	442:2:10081:10153	643933	0	True				
ANR	644362	AssignmentExpression	"rc = current -> alternateScope -> LookupInScope ( attributeStr , tree , state )"		643933	0		=			
ANR	644363	Identifier	rc		643933	0					
ANR	644364	CallExpression	"current -> alternateScope -> LookupInScope ( attributeStr , tree , state )"		643933	1					
ANR	644365	Callee	current -> alternateScope -> LookupInScope		643933	0					
ANR	644366	PtrMemberAccess	current -> alternateScope -> LookupInScope		643933	0					
ANR	644367	PtrMemberAccess	current -> alternateScope		643933	0					
ANR	644368	Identifier	current		643933	0					
ANR	644369	Identifier	alternateScope		643933	1					
ANR	644370	Identifier	LookupInScope		643933	1					
ANR	644371	ArgumentList	attributeStr		643933	1					
ANR	644372	Argument	attributeStr		643933	0					
ANR	644373	Identifier	attributeStr		643933	0					
ANR	644374	Argument	tree		643933	1					
ANR	644375	Identifier	tree		643933	0					
ANR	644376	Argument	state		643933	2					
ANR	644377	Identifier	state		643933	0					
ANR	644378	ReturnStatement	return rc ;	444:1:10159:10168	643933	9	True				
ANR	644379	Identifier	rc		643933	0					
ANR	644380	ReturnType	int		643933	1					
ANR	644381	Identifier	AttributeReference :: FindExpr		643933	2					
ANR	644382	ParameterList	"EvalState & state , ExprTree * & tree , ExprTree * & sig , bool wantSig"		643933	3					
ANR	644383	Parameter	EvalState & state	350:9:7274:7289	643933	0	True				
ANR	644384	ParameterType	EvalState &		643933	0					
ANR	644385	Identifier	state		643933	1					
ANR	644386	Parameter	ExprTree * & tree	350:27:7292:7306	643933	1	True				
ANR	644387	ParameterType	ExprTree * &		643933	0					
ANR	644388	Identifier	tree		643933	1					
ANR	644389	Parameter	ExprTree * & sig	350:44:7309:7322	643933	2	True				
ANR	644390	ParameterType	ExprTree * &		643933	0					
ANR	644391	Identifier	sig		643933	1					
ANR	644392	Parameter	bool wantSig	350:60:7325:7336	643933	3	True				
ANR	644393	ParameterType	bool		643933	0					
ANR	644394	Identifier	wantSig		643933	1					
ANR	644395	CFGEntryNode	ENTRY		643933		True				
ANR	644396	CFGExitNode	EXIT		643933		True				
ANR	644397	Symbol	currExpr -> Copy		643933						
ANR	644398	Symbol	Literal :: MakeLiteral		643933						
ANR	644399	Symbol	state . rootAd		643933						
ANR	644400	Symbol	* current		643933						
ANR	644401	Symbol	evaledList		643933						
ANR	644402	Symbol	state . curAd		643933						
ANR	644403	Symbol	expr -> Evaluate		643933						
ANR	644404	Symbol	state		643933						
ANR	644405	Symbol	attributeStr		643933						
ANR	644406	Symbol	* evaledList		643933						
ANR	644407	Symbol	val		643933						
ANR	644408	Symbol	NULL		643933						
ANR	644409	Symbol	evaledAd		643933						
ANR	644410	Symbol	attrRef		643933						
ANR	644411	Symbol	itr		643933						
ANR	644412	Symbol	tree		643933						
ANR	644413	Symbol	MakeAttributeReference		643933						
ANR	644414	Symbol	* currExpr		643933						
ANR	644415	Symbol	val . IsUndefinedValue		643933						
ANR	644416	Symbol	rc		643933						
ANR	644417	Symbol	* * current		643933						
ANR	644418	Symbol	* expr		643933						
ANR	644419	Symbol	current -> alternateScope		643933						
ANR	644420	Symbol	* current -> alternateScope		643933						
ANR	644421	Symbol	val . IsErrorValue		643933						
ANR	644422	Symbol	current -> LookupInScope		643933						
ANR	644423	Symbol	adList		643933						
ANR	644424	Symbol	* attrRef		643933						
ANR	644425	Symbol	evaledList -> Copy		643933						
ANR	644426	Symbol	ExprList :: MakeExprList		643933						
ANR	644427	Symbol	sig		643933						
ANR	644428	Symbol	PROP_ERROR		643933						
ANR	644429	Symbol	current		643933						
ANR	644430	Symbol	val . IsClassAdValue		643933						
ANR	644431	Symbol	attrRef -> Evaluate		643933						
ANR	644432	Symbol	newRoot		643933						
ANR	644433	Symbol	EVAL_OK		643933						
ANR	644434	Symbol	rval		643933						
ANR	644435	Symbol	expr		643933						
ANR	644436	Symbol	EVAL_ERROR		643933						
ANR	644437	Symbol	val . IsListValue		643933						
ANR	644438	Symbol	eVector		643933						
ANR	644439	Symbol	tstate		643933						
ANR	644440	Symbol	current -> alternateScope -> LookupInScope		643933						
ANR	644441	Symbol	false		643933						
ANR	644442	Symbol	itr . IsAfterLast		643933						
ANR	644443	Symbol	PROP_UNDEF		643933						
ANR	644444	Symbol	wantSig		643933						
ANR	644445	Symbol	itr . CurrentExpr		643933						
ANR	644446	Symbol	EVAL_UNDEF		643933						
ANR	644447	Symbol	absolute		643933						
ANR	644448	Symbol	EVAL_FAIL		643933						
ANR	644449	Symbol	currExpr		643933						
ANR	644450	Function	AttributeReference :: MakeAttributeReference	448:0:10174:10354							
ANR	644451	FunctionDef	"AttributeReference :: MakeAttributeReference (ExprTree * tree , const string & attrStr , bool absolut)"		644450	0					
ANR	644452	CompoundStatement		450:0:10291:10354	644450	0					
ANR	644453	ReturnStatement	"return ( new AttributeReference ( tree , attrStr , absolut ) ) ;"	451:1:10294:10352	644450	0	True				
ANR	644454	Expression	"tree , attrStr , absolut"		644450	0					
ANR	644455	Identifier	tree		644450	0					
ANR	644456	Expression	"attrStr , absolut"		644450	1					
ANR	644457	Identifier	attrStr		644450	0					
ANR	644458	Identifier	absolut		644450	1					
ANR	644459	ReturnType	AttributeReference *		644450	1					
ANR	644460	Identifier	AttributeReference :: MakeAttributeReference		644450	2					
ANR	644461	ParameterList	"ExprTree * tree , const string & attrStr , bool absolut"		644450	3					
ANR	644462	Parameter	ExprTree * tree	449:23:10238:10251	644450	0	True				
ANR	644463	ParameterType	ExprTree *		644450	0					
ANR	644464	Identifier	tree		644450	1					
ANR	644465	Parameter	const string & attrStr	449:39:10254:10274	644450	1	True				
ANR	644466	ParameterType	const string &		644450	0					
ANR	644467	Identifier	attrStr		644450	1					
ANR	644468	Parameter	bool absolut	449:62:10277:10288	644450	2	True				
ANR	644469	ParameterType	bool		644450	0					
ANR	644470	Identifier	absolut		644450	1					
ANR	644471	CFGEntryNode	ENTRY		644450		True				
ANR	644472	CFGExitNode	EXIT		644450		True				
ANR	644473	Symbol	attrStr		644450						
ANR	644474	Symbol	tree		644450						
ANR	644475	Symbol	absolut		644450						
