command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	678130	File	data/converged/CVE-2011-4930_htcondor/boinc_mgr.cpp								
ANR	678131	Function	BOINC_BackfillSlot :: BOINC_BackfillSlot	30:0:964:1141							
ANR	678132	FunctionDef	BOINC_BackfillSlot :: BOINC_BackfillSlot (int slot_id)		678131	0					
ANR	678133	CompoundStatement		32:0:1049:1141	678131	0					
ANR	678134	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""New BOINC_BackfillSlot (id %d) created\\n"" , m_slot_id )"	33:1:1052:1129	678131	0	True				
ANR	678135	CallExpression	"dprintf ( D_FULLDEBUG , ""New BOINC_BackfillSlot (id %d) created\\n"" , m_slot_id )"		678131	0					
ANR	678136	Callee	dprintf		678131	0					
ANR	678137	Identifier	dprintf		678131	0					
ANR	678138	ArgumentList	D_FULLDEBUG		678131	1					
ANR	678139	Argument	D_FULLDEBUG		678131	0					
ANR	678140	Identifier	D_FULLDEBUG		678131	0					
ANR	678141	Argument	"""New BOINC_BackfillSlot (id %d) created\\n"""		678131	1					
ANR	678142	PrimaryExpression	"""New BOINC_BackfillSlot (id %d) created\\n"""		678131	0					
ANR	678143	Argument	m_slot_id		678131	2					
ANR	678144	Identifier	m_slot_id		678131	0					
ANR	678145	Identifier	BOINC_BackfillSlot :: BOINC_BackfillSlot		678131	1					
ANR	678146	ParameterList	int slot_id		678131	2					
ANR	678147	Parameter	int slot_id	30:40:1004:1014	678131	0	True				
ANR	678148	ParameterType	int		678131	0					
ANR	678149	Identifier	slot_id		678131	1					
ANR	678150	CFGEntryNode	ENTRY		678131		True				
ANR	678151	CFGExitNode	EXIT		678131		True				
ANR	678152	Symbol	slot_id		678131						
ANR	678153	Symbol	m_slot_id		678131						
ANR	678154	Symbol	D_FULLDEBUG		678131						
ANR	678155	Function	BOINC_BackfillSlot :: ~BOINC_BackfillSlot	38:0:1145:1275							
ANR	678156	FunctionDef	BOINC_BackfillSlot :: ~BOINC_BackfillSlot ()		678155	0					
ANR	678157	CompoundStatement		39:0:1187:1275	678155	0					
ANR	678158	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""BOINC_BackfillSlot (id %d) deleted\\n"" , m_slot_id )"	40:1:1190:1263	678155	0	True				
ANR	678159	CallExpression	"dprintf ( D_FULLDEBUG , ""BOINC_BackfillSlot (id %d) deleted\\n"" , m_slot_id )"		678155	0					
ANR	678160	Callee	dprintf		678155	0					
ANR	678161	Identifier	dprintf		678155	0					
ANR	678162	ArgumentList	D_FULLDEBUG		678155	1					
ANR	678163	Argument	D_FULLDEBUG		678155	0					
ANR	678164	Identifier	D_FULLDEBUG		678155	0					
ANR	678165	Argument	"""BOINC_BackfillSlot (id %d) deleted\\n"""		678155	1					
ANR	678166	PrimaryExpression	"""BOINC_BackfillSlot (id %d) deleted\\n"""		678155	0					
ANR	678167	Argument	m_slot_id		678155	2					
ANR	678168	Identifier	m_slot_id		678155	0					
ANR	678169	Identifier	BOINC_BackfillSlot :: ~BOINC_BackfillSlot		678155	1					
ANR	678170	ParameterList			678155	2					
ANR	678171	CFGEntryNode	ENTRY		678155		True				
ANR	678172	CFGExitNode	EXIT		678155		True				
ANR	678173	Symbol	m_slot_id		678155						
ANR	678174	Symbol	D_FULLDEBUG		678155						
ANR	678175	Function	BOINC_BackfillSlot :: init	45:0:1279:1337							
ANR	678176	FunctionDef	BOINC_BackfillSlot :: init ()		678175	0					
ANR	678177	CompoundStatement		47:0:1311:1337	678175	0					
ANR	678178	ReturnStatement	return true ;	49:1:1324:1335	678175	0	True				
ANR	678179	Identifier	true		678175	0					
ANR	678180	ReturnType	bool		678175	1					
ANR	678181	Identifier	BOINC_BackfillSlot :: init		678175	2					
ANR	678182	ParameterList			678175	3					
ANR	678183	CFGEntryNode	ENTRY		678175		True				
ANR	678184	CFGExitNode	EXIT		678175		True				
ANR	678185	Symbol	true		678175						
ANR	678186	Function	BOINC_BackfillSlot :: start	53:0:1341:1400							
ANR	678187	FunctionDef	BOINC_BackfillSlot :: start ()		678186	0					
ANR	678188	CompoundStatement		55:0:1374:1400	678186	0					
ANR	678189	ReturnStatement	return true ;	57:1:1387:1398	678186	0	True				
ANR	678190	Identifier	true		678186	0					
ANR	678191	ReturnType	bool		678186	1					
ANR	678192	Identifier	BOINC_BackfillSlot :: start		678186	2					
ANR	678193	ParameterList			678186	3					
ANR	678194	CFGEntryNode	ENTRY		678186		True				
ANR	678195	CFGExitNode	EXIT		678186		True				
ANR	678196	Symbol	true		678186						
ANR	678197	Function	BOINC_BackfillSlot :: suspend	61:0:1404:1465							
ANR	678198	FunctionDef	BOINC_BackfillSlot :: suspend ()		678197	0					
ANR	678199	CompoundStatement		63:0:1439:1465	678197	0					
ANR	678200	ReturnStatement	return true ;	65:1:1452:1463	678197	0	True				
ANR	678201	Identifier	true		678197	0					
ANR	678202	ReturnType	bool		678197	1					
ANR	678203	Identifier	BOINC_BackfillSlot :: suspend		678197	2					
ANR	678204	ParameterList			678197	3					
ANR	678205	CFGEntryNode	ENTRY		678197		True				
ANR	678206	CFGExitNode	EXIT		678197		True				
ANR	678207	Symbol	true		678197						
ANR	678208	Function	BOINC_BackfillSlot :: resume	69:0:1469:1529							
ANR	678209	FunctionDef	BOINC_BackfillSlot :: resume ()		678208	0					
ANR	678210	CompoundStatement		71:0:1503:1529	678208	0					
ANR	678211	ReturnStatement	return true ;	73:1:1516:1527	678208	0	True				
ANR	678212	Identifier	true		678208	0					
ANR	678213	ReturnType	bool		678208	1					
ANR	678214	Identifier	BOINC_BackfillSlot :: resume		678208	2					
ANR	678215	ParameterList			678208	3					
ANR	678216	CFGEntryNode	ENTRY		678208		True				
ANR	678217	CFGExitNode	EXIT		678208		True				
ANR	678218	Symbol	true		678208						
ANR	678219	Function	BOINC_BackfillSlot :: softkill	77:0:1533:1595							
ANR	678220	FunctionDef	BOINC_BackfillSlot :: softkill ()		678219	0					
ANR	678221	CompoundStatement		79:0:1569:1595	678219	0					
ANR	678222	ReturnStatement	return true ;	81:1:1582:1593	678219	0	True				
ANR	678223	Identifier	true		678219	0					
ANR	678224	ReturnType	bool		678219	1					
ANR	678225	Identifier	BOINC_BackfillSlot :: softkill		678219	2					
ANR	678226	ParameterList			678219	3					
ANR	678227	CFGEntryNode	ENTRY		678219		True				
ANR	678228	CFGExitNode	EXIT		678219		True				
ANR	678229	Symbol	true		678219						
ANR	678230	Function	BOINC_BackfillSlot :: hardkill	85:0:1599:1661							
ANR	678231	FunctionDef	BOINC_BackfillSlot :: hardkill ()		678230	0					
ANR	678232	CompoundStatement		87:0:1635:1661	678230	0					
ANR	678233	ReturnStatement	return true ;	89:1:1648:1659	678230	0	True				
ANR	678234	Identifier	true		678230	0					
ANR	678235	ReturnType	bool		678230	1					
ANR	678236	Identifier	BOINC_BackfillSlot :: hardkill		678230	2					
ANR	678237	ParameterList			678230	3					
ANR	678238	CFGEntryNode	ENTRY		678230		True				
ANR	678239	CFGExitNode	EXIT		678230		True				
ANR	678240	Symbol	true		678230						
ANR	678241	Function	BOINC_BackfillMgr :: BOINC_BackfillMgr	100:0:1733:1925							
ANR	678242	FunctionDef	BOINC_BackfillMgr :: BOINC_BackfillMgr ()		678241	0					
ANR	678243	CompoundStatement		102:0:1789:1925	678241	0					
ANR	678244	ExpressionStatement	"dprintf ( D_ALWAYS , ""Instantiating a BOINC_BackfillMgr\\n"" )"	103:1:1792:1850	678241	0	True				
ANR	678245	CallExpression	"dprintf ( D_ALWAYS , ""Instantiating a BOINC_BackfillMgr\\n"" )"		678241	0					
ANR	678246	Callee	dprintf		678241	0					
ANR	678247	Identifier	dprintf		678241	0					
ANR	678248	ArgumentList	D_ALWAYS		678241	1					
ANR	678249	Argument	D_ALWAYS		678241	0					
ANR	678250	Identifier	D_ALWAYS		678241	0					
ANR	678251	Argument	"""Instantiating a BOINC_BackfillMgr\\n"""		678241	1					
ANR	678252	PrimaryExpression	"""Instantiating a BOINC_BackfillMgr\\n"""		678241	0					
ANR	678253	ExpressionStatement	m_delete_boinc_mgr = false	104:1:1853:1879	678241	1	True				
ANR	678254	AssignmentExpression	m_delete_boinc_mgr = false		678241	0		=			
ANR	678255	Identifier	m_delete_boinc_mgr		678241	0					
ANR	678256	Identifier	false		678241	1					
ANR	678257	ExpressionStatement	m_boinc_starter = NULL	105:1:1882:1904	678241	2	True				
ANR	678258	AssignmentExpression	m_boinc_starter = NULL		678241	0		=			
ANR	678259	Identifier	m_boinc_starter		678241	0					
ANR	678260	Identifier	NULL		678241	1					
ANR	678261	ExpressionStatement	m_reaper_id = - 1	106:1:1907:1923	678241	3	True				
ANR	678262	AssignmentExpression	m_reaper_id = - 1		678241	0		=			
ANR	678263	Identifier	m_reaper_id		678241	0					
ANR	678264	UnaryOperationExpression	- 1		678241	1					
ANR	678265	UnaryOperator	-		678241	0					
ANR	678266	PrimaryExpression	1		678241	1					
ANR	678267	Identifier	BOINC_BackfillMgr :: BOINC_BackfillMgr		678241	1					
ANR	678268	ParameterList			678241	2					
ANR	678269	CFGEntryNode	ENTRY		678241		True				
ANR	678270	CFGExitNode	EXIT		678241		True				
ANR	678271	Symbol	NULL		678241						
ANR	678272	Symbol	D_ALWAYS		678241						
ANR	678273	Symbol	false		678241						
ANR	678274	Symbol	m_boinc_starter		678241						
ANR	678275	Symbol	m_reaper_id		678241						
ANR	678276	Symbol	m_delete_boinc_mgr		678241						
ANR	678277	Function	BOINC_BackfillMgr :: ~BOINC_BackfillMgr	110:0:1929:2186							
ANR	678278	FunctionDef	BOINC_BackfillMgr :: ~BOINC_BackfillMgr ()		678277	0					
ANR	678279	CompoundStatement		111:0:1969:2186	678277	0					
ANR	678280	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Destroying a BOINC_BackfillMgr\\n"" )"	112:1:1972:2030	678277	0	True				
ANR	678281	CallExpression	"dprintf ( D_FULLDEBUG , ""Destroying a BOINC_BackfillMgr\\n"" )"		678277	0					
ANR	678282	Callee	dprintf		678277	0					
ANR	678283	Identifier	dprintf		678277	0					
ANR	678284	ArgumentList	D_FULLDEBUG		678277	1					
ANR	678285	Argument	D_FULLDEBUG		678277	0					
ANR	678286	Identifier	D_FULLDEBUG		678277	0					
ANR	678287	Argument	"""Destroying a BOINC_BackfillMgr\\n"""		678277	1					
ANR	678288	PrimaryExpression	"""Destroying a BOINC_BackfillMgr\\n"""		678277	0					
ANR	678289	IfStatement	if ( m_boinc_starter && m_boinc_starter -> active ( ) )		678277	1					
ANR	678290	Condition	m_boinc_starter && m_boinc_starter -> active ( )	113:5:2037:2080	678277	0	True				
ANR	678291	AndExpression	m_boinc_starter && m_boinc_starter -> active ( )		678277	0		&&			
ANR	678292	Identifier	m_boinc_starter		678277	0					
ANR	678293	CallExpression	m_boinc_starter -> active ( )		678277	1					
ANR	678294	Callee	m_boinc_starter -> active		678277	0					
ANR	678295	PtrMemberAccess	m_boinc_starter -> active		678277	0					
ANR	678296	Identifier	m_boinc_starter		678277	0					
ANR	678297	Identifier	active		678277	1					
ANR	678298	ArgumentList			678277	1					
ANR	678299	CompoundStatement		3:52:114:114	678277	1					
ANR	678300	ExpressionStatement	hardkill ( 0 )	115:2:2142:2155	678277	0	True				
ANR	678301	CallExpression	hardkill ( 0 )		678277	0					
ANR	678302	Callee	hardkill		678277	0					
ANR	678303	Identifier	hardkill		678277	0					
ANR	678304	ArgumentList	0		678277	1					
ANR	678305	Argument	0		678277	0					
ANR	678306	PrimaryExpression	0		678277	0					
ANR	678307	Statement	delete	116:2:2159:2164	678277	1	True				
ANR	678308	ExpressionStatement	m_boinc_starter	116:9:2166:2181	678277	2	True				
ANR	678309	Identifier	m_boinc_starter		678277	0					
ANR	678310	Identifier	BOINC_BackfillMgr :: ~BOINC_BackfillMgr		678277	1					
ANR	678311	ParameterList			678277	2					
ANR	678312	CFGEntryNode	ENTRY		678277		True				
ANR	678313	CFGExitNode	EXIT		678277		True				
ANR	678314	Symbol	m_boinc_starter		678277						
ANR	678315	Symbol	* m_boinc_starter		678277						
ANR	678316	Symbol	D_FULLDEBUG		678277						
ANR	678317	Symbol	m_boinc_starter -> active		678277						
ANR	678318	Function	param_boinc	121:0:2190:2794							
ANR	678319	FunctionDef	"param_boinc (const char * attr_name , const char * alt_name)"		678318	0					
ANR	678320	CompoundStatement		123:0:2261:2794	678318	0					
ANR	678321	IfStatement	if ( ! attr_name )		678318	0					
ANR	678322	Condition	! attr_name	124:5:2268:2278	678318	0	True				
ANR	678323	UnaryOperationExpression	! attr_name		678318	0					
ANR	678324	UnaryOperator	!		678318	0					
ANR	678325	Identifier	attr_name		678318	1					
ANR	678326	CompoundStatement		2:19:20:20	678318	1					
ANR	678327	ExpressionStatement	"EXCEPT ( ""param_boinc() called with NULL attr_name"" )"	125:2:2286:2338	678318	0	True				
ANR	678328	CallExpression	"EXCEPT ( ""param_boinc() called with NULL attr_name"" )"		678318	0					
ANR	678329	Callee	EXCEPT		678318	0					
ANR	678330	Identifier	EXCEPT		678318	0					
ANR	678331	ArgumentList	"""param_boinc() called with NULL attr_name"""		678318	1					
ANR	678332	Argument	"""param_boinc() called with NULL attr_name"""		678318	0					
ANR	678333	PrimaryExpression	"""param_boinc() called with NULL attr_name"""		678318	0					
ANR	678334	IdentifierDeclStatement	MyString param_name ;	127:1:2344:2363	678318	1	True				
ANR	678335	IdentifierDecl	param_name		678318	0					
ANR	678336	IdentifierDeclType	MyString		678318	0					
ANR	678337	Identifier	param_name		678318	1					
ANR	678338	ExpressionStatement	"param_name . sprintf ( ""BOINC_%s"" , attr_name )"	128:1:2366:2409	678318	2	True				
ANR	678339	CallExpression	"param_name . sprintf ( ""BOINC_%s"" , attr_name )"		678318	0					
ANR	678340	Callee	param_name . sprintf		678318	0					
ANR	678341	MemberAccess	param_name . sprintf		678318	0					
ANR	678342	Identifier	param_name		678318	0					
ANR	678343	Identifier	sprintf		678318	1					
ANR	678344	ArgumentList	"""BOINC_%s"""		678318	1					
ANR	678345	Argument	"""BOINC_%s"""		678318	0					
ANR	678346	PrimaryExpression	"""BOINC_%s"""		678318	0					
ANR	678347	Argument	attr_name		678318	1					
ANR	678348	Identifier	attr_name		678318	0					
ANR	678349	IdentifierDeclStatement	char * tmp = param ( param_name . Value ( ) ) ;	129:1:2412:2451	678318	3	True				
ANR	678350	IdentifierDecl	* tmp = param ( param_name . Value ( ) )		678318	0					
ANR	678351	IdentifierDeclType	char *		678318	0					
ANR	678352	Identifier	tmp		678318	1					
ANR	678353	AssignmentExpression	* tmp = param ( param_name . Value ( ) )		678318	2		=			
ANR	678354	Identifier	tmp		678318	0					
ANR	678355	CallExpression	param ( param_name . Value ( ) )		678318	1					
ANR	678356	Callee	param		678318	0					
ANR	678357	Identifier	param		678318	0					
ANR	678358	ArgumentList	param_name . Value ( )		678318	1					
ANR	678359	Argument	param_name . Value ( )		678318	0					
ANR	678360	CallExpression	param_name . Value ( )		678318	0					
ANR	678361	Callee	param_name . Value		678318	0					
ANR	678362	MemberAccess	param_name . Value		678318	0					
ANR	678363	Identifier	param_name		678318	0					
ANR	678364	Identifier	Value		678318	1					
ANR	678365	ArgumentList			678318	1					
ANR	678366	IfStatement	if ( tmp )		678318	4					
ANR	678367	Condition	tmp	130:5:2458:2460	678318	0	True				
ANR	678368	Identifier	tmp		678318	0					
ANR	678369	CompoundStatement		8:11:202:202	678318	1					
ANR	678370	ExpressionStatement	free ( tmp )	131:2:2468:2479	678318	0	True				
ANR	678371	CallExpression	free ( tmp )		678318	0					
ANR	678372	Callee	free		678318	0					
ANR	678373	Identifier	free		678318	0					
ANR	678374	ArgumentList	tmp		678318	1					
ANR	678375	Argument	tmp		678318	0					
ANR	678376	Identifier	tmp		678318	0					
ANR	678377	ReturnStatement	return true ;	132:2:2483:2494	678318	1	True				
ANR	678378	Identifier	true		678318	0					
ANR	678379	IfStatement	if ( alt_name )		678318	5					
ANR	678380	Condition	alt_name	134:5:2504:2511	678318	0	True				
ANR	678381	Identifier	alt_name		678318	0					
ANR	678382	CompoundStatement		12:16:253:253	678318	1					
ANR	678383	ExpressionStatement	"param_name . sprintf ( ""BOINC_%s"" , alt_name )"	135:2:2519:2561	678318	0	True				
ANR	678384	CallExpression	"param_name . sprintf ( ""BOINC_%s"" , alt_name )"		678318	0					
ANR	678385	Callee	param_name . sprintf		678318	0					
ANR	678386	MemberAccess	param_name . sprintf		678318	0					
ANR	678387	Identifier	param_name		678318	0					
ANR	678388	Identifier	sprintf		678318	1					
ANR	678389	ArgumentList	"""BOINC_%s"""		678318	1					
ANR	678390	Argument	"""BOINC_%s"""		678318	0					
ANR	678391	PrimaryExpression	"""BOINC_%s"""		678318	0					
ANR	678392	Argument	alt_name		678318	1					
ANR	678393	Identifier	alt_name		678318	0					
ANR	678394	ExpressionStatement	tmp = param ( param_name . Value ( ) )	136:2:2565:2598	678318	1	True				
ANR	678395	AssignmentExpression	tmp = param ( param_name . Value ( ) )		678318	0		=			
ANR	678396	Identifier	tmp		678318	0					
ANR	678397	CallExpression	param ( param_name . Value ( ) )		678318	1					
ANR	678398	Callee	param		678318	0					
ANR	678399	Identifier	param		678318	0					
ANR	678400	ArgumentList	param_name . Value ( )		678318	1					
ANR	678401	Argument	param_name . Value ( )		678318	0					
ANR	678402	CallExpression	param_name . Value ( )		678318	0					
ANR	678403	Callee	param_name . Value		678318	0					
ANR	678404	MemberAccess	param_name . Value		678318	0					
ANR	678405	Identifier	param_name		678318	0					
ANR	678406	Identifier	Value		678318	1					
ANR	678407	ArgumentList			678318	1					
ANR	678408	IfStatement	if ( tmp )		678318	2					
ANR	678409	Condition	tmp	137:6:2606:2608	678318	0	True				
ANR	678410	Identifier	tmp		678318	0					
ANR	678411	CompoundStatement		15:12:350:350	678318	1					
ANR	678412	ExpressionStatement	free ( tmp )	138:3:2617:2628	678318	0	True				
ANR	678413	CallExpression	free ( tmp )		678318	0					
ANR	678414	Callee	free		678318	0					
ANR	678415	Identifier	free		678318	0					
ANR	678416	ArgumentList	tmp		678318	1					
ANR	678417	Argument	tmp		678318	0					
ANR	678418	Identifier	tmp		678318	0					
ANR	678419	ReturnStatement	return true ;	139:3:2633:2644	678318	1	True				
ANR	678420	Identifier	true		678318	0					
ANR	678421	Statement	dprintf	142:1:2654:2660	678318	6	True				
ANR	678422	Statement	(	142:8:2661:2661	678318	7	True				
ANR	678423	Statement	D_ALWAYS	142:10:2663:2670	678318	8	True				
ANR	678424	Statement	","	142:18:2671:2671	678318	9	True				
ANR	678425	Statement	"""Trying to initialize a BOINC backfill manager, """	142:20:2673:2721	678318	10	True				
ANR	678426	Statement	"""but BOINC_%s not defined, failing\\n"""	143:4:2727:2763	678318	11	True				
ANR	678427	Statement	","	143:41:2764:2764	678318	12	True				
ANR	678428	Statement	attr_name	143:43:2766:2774	678318	13	True				
ANR	678429	Statement	)	143:53:2776:2776	678318	14	True				
ANR	678430	ExpressionStatement		143:54:2777:2777	678318	15	True				
ANR	678431	ReturnStatement	return false ;	144:1:2780:2792	678318	16	True				
ANR	678432	Identifier	false		678318	0					
ANR	678433	ReturnType	static bool		678318	1					
ANR	678434	Identifier	param_boinc		678318	2					
ANR	678435	ParameterList	"const char * attr_name , const char * alt_name"		678318	3					
ANR	678436	Parameter	const char * attr_name	122:13:2215:2235	678318	0	True				
ANR	678437	ParameterType	const char *		678318	0					
ANR	678438	Identifier	attr_name		678318	1					
ANR	678439	Parameter	const char * alt_name	122:36:2238:2257	678318	1	True				
ANR	678440	ParameterType	const char *		678318	0					
ANR	678441	Identifier	alt_name		678318	1					
ANR	678442	CFGEntryNode	ENTRY		678318		True				
ANR	678443	CFGExitNode	EXIT		678318		True				
ANR	678444	Symbol	alt_name		678318						
ANR	678445	Symbol	param		678318						
ANR	678446	Symbol	attr_name		678318						
ANR	678447	Symbol	tmp		678318						
ANR	678448	Symbol	true		678318						
ANR	678449	Symbol	false		678318						
ANR	678450	Symbol	param_name		678318						
ANR	678451	Symbol	param_name . Value		678318						
ANR	678452	Function	BOINC_BackfillMgr :: init	148:0:2798:2851							
ANR	678453	FunctionDef	BOINC_BackfillMgr :: init ()		678452	0					
ANR	678454	CompoundStatement		150:0:2829:2851	678452	0					
ANR	678455	ReturnStatement	return reconfig ( ) ;	151:1:2832:2849	678452	0	True				
ANR	678456	CallExpression	reconfig ( )		678452	0					
ANR	678457	Callee	reconfig		678452	0					
ANR	678458	Identifier	reconfig		678452	0					
ANR	678459	ArgumentList			678452	1					
ANR	678460	ReturnType	bool		678452	1					
ANR	678461	Identifier	BOINC_BackfillMgr :: init		678452	2					
ANR	678462	ParameterList			678452	3					
ANR	678463	CFGEntryNode	ENTRY		678452		True				
ANR	678464	CFGExitNode	EXIT		678452		True				
ANR	678465	Symbol	reconfig		678452						
ANR	678466	Function	BOINC_BackfillMgr :: reconfig	155:0:2855:3170							
ANR	678467	FunctionDef	BOINC_BackfillMgr :: reconfig ()		678466	0					
ANR	678468	CompoundStatement		157:0:2890:3170	678466	0					
ANR	678469	IfStatement	"if ( ! param_boinc ( ATTR_JOB_CMD , ""Executable"" ) )"		678466	0					
ANR	678470	Condition	"! param_boinc ( ATTR_JOB_CMD , ""Executable"" )"	160:5:2946:2986	678466	0	True				
ANR	678471	UnaryOperationExpression	"! param_boinc ( ATTR_JOB_CMD , ""Executable"" )"		678466	0					
ANR	678472	UnaryOperator	!		678466	0					
ANR	678473	CallExpression	"param_boinc ( ATTR_JOB_CMD , ""Executable"" )"		678466	1					
ANR	678474	Callee	param_boinc		678466	0					
ANR	678475	Identifier	param_boinc		678466	0					
ANR	678476	ArgumentList	ATTR_JOB_CMD		678466	1					
ANR	678477	Argument	ATTR_JOB_CMD		678466	0					
ANR	678478	Identifier	ATTR_JOB_CMD		678466	0					
ANR	678479	Argument	"""Executable"""		678466	1					
ANR	678480	PrimaryExpression	"""Executable"""		678466	0					
ANR	678481	CompoundStatement		4:49:99:99	678466	1					
ANR	678482	ReturnStatement	return false ;	161:2:2994:3006	678466	0	True				
ANR	678483	Identifier	false		678466	0					
ANR	678484	IfStatement	"if ( ! param_boinc ( ATTR_JOB_IWD , ""InitialDir"" ) )"		678466	1					
ANR	678485	Condition	"! param_boinc ( ATTR_JOB_IWD , ""InitialDir"" )"	163:5:3016:3056	678466	0	True				
ANR	678486	UnaryOperationExpression	"! param_boinc ( ATTR_JOB_IWD , ""InitialDir"" )"		678466	0					
ANR	678487	UnaryOperator	!		678466	0					
ANR	678488	CallExpression	"param_boinc ( ATTR_JOB_IWD , ""InitialDir"" )"		678466	1					
ANR	678489	Callee	param_boinc		678466	0					
ANR	678490	Identifier	param_boinc		678466	0					
ANR	678491	ArgumentList	ATTR_JOB_IWD		678466	1					
ANR	678492	Argument	ATTR_JOB_IWD		678466	0					
ANR	678493	Identifier	ATTR_JOB_IWD		678466	0					
ANR	678494	Argument	"""InitialDir"""		678466	1					
ANR	678495	PrimaryExpression	"""InitialDir"""		678466	0					
ANR	678496	CompoundStatement		7:49:169:169	678466	1					
ANR	678497	ReturnStatement	return false ;	164:2:3064:3076	678466	0	True				
ANR	678498	Identifier	false		678466	0					
ANR	678499	IfStatement	"if ( ! param_boinc ( ""Universe"" , ATTR_JOB_UNIVERSE ) )"		678466	2					
ANR	678500	Condition	"! param_boinc ( ""Universe"" , ATTR_JOB_UNIVERSE )"	166:5:3086:3129	678466	0	True				
ANR	678501	UnaryOperationExpression	"! param_boinc ( ""Universe"" , ATTR_JOB_UNIVERSE )"		678466	0					
ANR	678502	UnaryOperator	!		678466	0					
ANR	678503	CallExpression	"param_boinc ( ""Universe"" , ATTR_JOB_UNIVERSE )"		678466	1					
ANR	678504	Callee	param_boinc		678466	0					
ANR	678505	Identifier	param_boinc		678466	0					
ANR	678506	ArgumentList	"""Universe"""		678466	1					
ANR	678507	Argument	"""Universe"""		678466	0					
ANR	678508	PrimaryExpression	"""Universe"""		678466	0					
ANR	678509	Argument	ATTR_JOB_UNIVERSE		678466	1					
ANR	678510	Identifier	ATTR_JOB_UNIVERSE		678466	0					
ANR	678511	CompoundStatement		10:52:242:242	678466	1					
ANR	678512	ReturnStatement	return false ;	167:2:3137:3149	678466	0	True				
ANR	678513	Identifier	false		678466	0					
ANR	678514	ReturnStatement	return true ;	170:1:3157:3168	678466	3	True				
ANR	678515	Identifier	true		678466	0					
ANR	678516	ReturnType	bool		678466	1					
ANR	678517	Identifier	BOINC_BackfillMgr :: reconfig		678466	2					
ANR	678518	ParameterList			678466	3					
ANR	678519	CFGEntryNode	ENTRY		678466		True				
ANR	678520	CFGExitNode	EXIT		678466		True				
ANR	678521	Symbol	ATTR_JOB_IWD		678466						
ANR	678522	Symbol	param_boinc		678466						
ANR	678523	Symbol	ATTR_JOB_UNIVERSE		678466						
ANR	678524	Symbol	false		678466						
ANR	678525	Symbol	true		678466						
ANR	678526	Symbol	ATTR_JOB_CMD		678466						
ANR	678527	Function	BOINC_BackfillMgr :: destroy	174:0:3174:3398							
ANR	678528	FunctionDef	BOINC_BackfillMgr :: destroy ()		678527	0					
ANR	678529	CompoundStatement		176:0:3208:3398	678527	0					
ANR	678530	IfStatement	if ( m_boinc_starter && m_boinc_starter -> active ( ) )		678527	0					
ANR	678531	Condition	m_boinc_starter && m_boinc_starter -> active ( )	177:5:3215:3258	678527	0	True				
ANR	678532	AndExpression	m_boinc_starter && m_boinc_starter -> active ( )		678527	0		&&			
ANR	678533	Identifier	m_boinc_starter		678527	0					
ANR	678534	CallExpression	m_boinc_starter -> active ( )		678527	1					
ANR	678535	Callee	m_boinc_starter -> active		678527	0					
ANR	678536	PtrMemberAccess	m_boinc_starter -> active		678527	0					
ANR	678537	Identifier	m_boinc_starter		678527	0					
ANR	678538	Identifier	active		678527	1					
ANR	678539	ArgumentList			678527	1					
ANR	678540	CompoundStatement		2:52:53:53	678527	1					
ANR	678541	ExpressionStatement	hardkill ( 0 )	179:2:3320:3333	678527	0	True				
ANR	678542	CallExpression	hardkill ( 0 )		678527	0					
ANR	678543	Callee	hardkill		678527	0					
ANR	678544	Identifier	hardkill		678527	0					
ANR	678545	ArgumentList	0		678527	1					
ANR	678546	Argument	0		678527	0					
ANR	678547	PrimaryExpression	0		678527	0					
ANR	678548	ExpressionStatement	m_delete_boinc_mgr = true	180:2:3337:3362	678527	1	True				
ANR	678549	AssignmentExpression	m_delete_boinc_mgr = true		678527	0		=			
ANR	678550	Identifier	m_delete_boinc_mgr		678527	0					
ANR	678551	Identifier	true		678527	1					
ANR	678552	ReturnStatement	return false ;	181:2:3366:3378	678527	2	True				
ANR	678553	Identifier	false		678527	0					
ANR	678554	ReturnStatement	return true ;	184:1:3385:3396	678527	1	True				
ANR	678555	Identifier	true		678527	0					
ANR	678556	ReturnType	bool		678527	1					
ANR	678557	Identifier	BOINC_BackfillMgr :: destroy		678527	2					
ANR	678558	ParameterList			678527	3					
ANR	678559	CFGEntryNode	ENTRY		678527		True				
ANR	678560	CFGExitNode	EXIT		678527		True				
ANR	678561	Symbol	m_boinc_starter		678527						
ANR	678562	Symbol	* m_boinc_starter		678527						
ANR	678563	Symbol	true		678527						
ANR	678564	Symbol	false		678527						
ANR	678565	Symbol	m_boinc_starter -> active		678527						
ANR	678566	Symbol	m_delete_boinc_mgr		678527						
ANR	678567	Function	BOINC_BackfillMgr :: rmSlot	196:0:3502:4377							
ANR	678568	FunctionDef	BOINC_BackfillMgr :: rmSlot (int slot_id)		678567	0					
ANR	678569	CompoundStatement		198:0:3548:4377	678567	0					
ANR	678570	IfStatement	if ( ! m_slots [ slot_id ] )		678567	0					
ANR	678571	Condition	! m_slots [ slot_id ]	199:5:3555:3572	678567	0	True				
ANR	678572	UnaryOperationExpression	! m_slots [ slot_id ]		678567	0					
ANR	678573	UnaryOperator	!		678567	0					
ANR	678574	ArrayIndexing	m_slots [ slot_id ]		678567	1					
ANR	678575	Identifier	m_slots		678567	0					
ANR	678576	Identifier	slot_id		678567	1					
ANR	678577	CompoundStatement		2:26:27:27	678567	1					
ANR	678578	ReturnStatement	return false ;	200:2:3580:3592	678567	0	True				
ANR	678579	Identifier	false		678567	0					
ANR	678580	Statement	delete	202:1:3598:3603	678567	1	True				
ANR	678581	ExpressionStatement	m_slots [ slot_id ]	202:8:3605:3621	678567	2	True				
ANR	678582	ArrayIndexing	m_slots [ slot_id ]		678567	0					
ANR	678583	Identifier	m_slots		678567	0					
ANR	678584	Identifier	slot_id		678567	1					
ANR	678585	ExpressionStatement	m_slots [ slot_id ] = NULL	203:1:3624:3647	678567	3	True				
ANR	678586	AssignmentExpression	m_slots [ slot_id ] = NULL		678567	0		=			
ANR	678587	ArrayIndexing	m_slots [ slot_id ]		678567	0					
ANR	678588	Identifier	m_slots		678567	0					
ANR	678589	Identifier	slot_id		678567	1					
ANR	678590	Identifier	NULL		678567	1					
ANR	678591	ExpressionStatement	m_num_slots --	204:1:3650:3663	678567	4	True				
ANR	678592	PostIncDecOperationExpression	m_num_slots --		678567	0					
ANR	678593	Identifier	m_num_slots		678567	0					
ANR	678594	IncDec	--		678567	1					
ANR	678595	IdentifierDeclStatement	Resource * rip = resmgr -> get_by_slot_id ( slot_id ) ;	208:1:3762:3811	678567	5	True				
ANR	678596	IdentifierDecl	* rip = resmgr -> get_by_slot_id ( slot_id )		678567	0					
ANR	678597	IdentifierDeclType	Resource *		678567	0					
ANR	678598	Identifier	rip		678567	1					
ANR	678599	AssignmentExpression	* rip = resmgr -> get_by_slot_id ( slot_id )		678567	2		=			
ANR	678600	Identifier	rip		678567	0					
ANR	678601	CallExpression	resmgr -> get_by_slot_id ( slot_id )		678567	1					
ANR	678602	Callee	resmgr -> get_by_slot_id		678567	0					
ANR	678603	PtrMemberAccess	resmgr -> get_by_slot_id		678567	0					
ANR	678604	Identifier	resmgr		678567	0					
ANR	678605	Identifier	get_by_slot_id		678567	1					
ANR	678606	ArgumentList	slot_id		678567	1					
ANR	678607	Argument	slot_id		678567	0					
ANR	678608	Identifier	slot_id		678567	0					
ANR	678609	IfStatement	if ( ! rip )		678567	6					
ANR	678610	Condition	! rip	209:5:3818:3822	678567	0	True				
ANR	678611	UnaryOperationExpression	! rip		678567	0					
ANR	678612	UnaryOperator	!		678567	0					
ANR	678613	Identifier	rip		678567	1					
ANR	678614	CompoundStatement		12:13:277:277	678567	1					
ANR	678615	Statement	dprintf	210:2:3830:3836	678567	0	True				
ANR	678616	Statement	(	210:9:3837:3837	678567	1	True				
ANR	678617	Statement	D_ALWAYS	210:11:3839:3846	678567	2	True				
ANR	678618	Statement	","	210:19:3847:3847	678567	3	True				
ANR	678619	Statement	"""ERROR in BOINC_BackfillMgr::rmSlot(): """	210:21:3849:3888	678567	4	True				
ANR	678620	Statement	"""can't find resource with slot id %d\\n"""	211:5:3895:3933	678567	5	True				
ANR	678621	Statement	","	211:44:3934:3934	678567	6	True				
ANR	678622	Statement	slot_id	211:46:3936:3942	678567	7	True				
ANR	678623	Statement	)	211:54:3944:3944	678567	8	True				
ANR	678624	ExpressionStatement		211:55:3945:3945	678567	9	True				
ANR	678625	ReturnStatement	return false ;	212:2:3949:3961	678567	10	True				
ANR	678626	Identifier	false		678567	0					
ANR	678627	IfStatement	if ( m_delete_boinc_mgr )		678567	7					
ANR	678628	Condition	m_delete_boinc_mgr	214:5:3971:3988	678567	0	True				
ANR	678629	Identifier	m_delete_boinc_mgr		678567	0					
ANR	678630	CompoundStatement		17:26:443:443	678567	1					
ANR	678631	IfStatement	if ( rip -> r_state -> destination ( ) == no_state )		678567	0					
ANR	678632	Condition	rip -> r_state -> destination ( ) == no_state	221:6:4229:4267	678567	0	True				
ANR	678633	EqualityExpression	rip -> r_state -> destination ( ) == no_state		678567	0		==			
ANR	678634	CallExpression	rip -> r_state -> destination ( )		678567	0					
ANR	678635	Callee	rip -> r_state -> destination		678567	0					
ANR	678636	PtrMemberAccess	rip -> r_state -> destination		678567	0					
ANR	678637	PtrMemberAccess	rip -> r_state		678567	0					
ANR	678638	Identifier	rip		678567	0					
ANR	678639	Identifier	r_state		678567	1					
ANR	678640	Identifier	destination		678567	1					
ANR	678641	ArgumentList			678567	1					
ANR	678642	Identifier	no_state		678567	1					
ANR	678643	CompoundStatement		24:48:722:722	678567	1					
ANR	678644	ExpressionStatement	rip -> r_state -> set_destination ( owner_state )	222:3:4276:4320	678567	0	True				
ANR	678645	CallExpression	rip -> r_state -> set_destination ( owner_state )		678567	0					
ANR	678646	Callee	rip -> r_state -> set_destination		678567	0					
ANR	678647	PtrMemberAccess	rip -> r_state -> set_destination		678567	0					
ANR	678648	PtrMemberAccess	rip -> r_state		678567	0					
ANR	678649	Identifier	rip		678567	0					
ANR	678650	Identifier	r_state		678567	1					
ANR	678651	Identifier	set_destination		678567	1					
ANR	678652	ArgumentList	owner_state		678567	1					
ANR	678653	Argument	owner_state		678567	0					
ANR	678654	Identifier	owner_state		678567	0					
ANR	678655	ExpressionStatement	rip -> r_state -> starterExited ( )	226:1:4331:4360	678567	8	True				
ANR	678656	CallExpression	rip -> r_state -> starterExited ( )		678567	0					
ANR	678657	Callee	rip -> r_state -> starterExited		678567	0					
ANR	678658	PtrMemberAccess	rip -> r_state -> starterExited		678567	0					
ANR	678659	PtrMemberAccess	rip -> r_state		678567	0					
ANR	678660	Identifier	rip		678567	0					
ANR	678661	Identifier	r_state		678567	1					
ANR	678662	Identifier	starterExited		678567	1					
ANR	678663	ArgumentList			678567	1					
ANR	678664	ReturnStatement	return true ;	228:1:4364:4375	678567	9	True				
ANR	678665	Identifier	true		678567	0					
ANR	678666	ReturnType	bool		678567	1					
ANR	678667	Identifier	BOINC_BackfillMgr :: rmSlot		678567	2					
ANR	678668	ParameterList	int slot_id		678567	3					
ANR	678669	Parameter	int slot_id	197:27:3534:3544	678567	0	True				
ANR	678670	ParameterType	int		678567	0					
ANR	678671	Identifier	slot_id		678567	1					
ANR	678672	CFGEntryNode	ENTRY		678567		True				
ANR	678673	CFGExitNode	EXIT		678567		True				
ANR	678674	Symbol	NULL		678567						
ANR	678675	Symbol	resmgr -> get_by_slot_id		678567						
ANR	678676	Symbol	* rip		678567						
ANR	678677	Symbol	rip -> r_state		678567						
ANR	678678	Symbol	rip -> r_state -> destination		678567						
ANR	678679	Symbol	* m_slots		678567						
ANR	678680	Symbol	false		678567						
ANR	678681	Symbol	* resmgr		678567						
ANR	678682	Symbol	* rip -> r_state		678567						
ANR	678683	Symbol	m_slots		678567						
ANR	678684	Symbol	* slot_id		678567						
ANR	678685	Symbol	* * rip		678567						
ANR	678686	Symbol	m_delete_boinc_mgr		678567						
ANR	678687	Symbol	no_state		678567						
ANR	678688	Symbol	resmgr		678567						
ANR	678689	Symbol	slot_id		678567						
ANR	678690	Symbol	m_num_slots		678567						
ANR	678691	Symbol	rip		678567						
ANR	678692	Symbol	true		678567						
ANR	678693	Symbol	owner_state		678567						
ANR	678694	Function	BOINC_BackfillMgr :: start	232:0:4381:6343							
ANR	678695	FunctionDef	BOINC_BackfillMgr :: start (int slot_id)		678694	0					
ANR	678696	CompoundStatement		234:0:4426:6343	678694	0					
ANR	678697	IfStatement	if ( m_delete_boinc_mgr || resmgr -> isShuttingDown ( ) )		678694	0					
ANR	678698	Condition	m_delete_boinc_mgr || resmgr -> isShuttingDown ( )	235:5:4433:4478	678694	0	True				
ANR	678699	OrExpression	m_delete_boinc_mgr || resmgr -> isShuttingDown ( )		678694	0		||			
ANR	678700	Identifier	m_delete_boinc_mgr		678694	0					
ANR	678701	CallExpression	resmgr -> isShuttingDown ( )		678694	1					
ANR	678702	Callee	resmgr -> isShuttingDown		678694	0					
ANR	678703	PtrMemberAccess	resmgr -> isShuttingDown		678694	0					
ANR	678704	Identifier	resmgr		678694	0					
ANR	678705	Identifier	isShuttingDown		678694	1					
ANR	678706	ArgumentList			678694	1					
ANR	678707	CompoundStatement		2:54:55:55	678694	1					
ANR	678708	ReturnStatement	return false ;	237:2:4539:4551	678694	0	True				
ANR	678709	Identifier	false		678694	0					
ANR	678710	IfStatement	if ( m_slots [ slot_id ] )		678694	1					
ANR	678711	Condition	m_slots [ slot_id ]	240:5:4562:4577	678694	0	True				
ANR	678712	ArrayIndexing	m_slots [ slot_id ]		678694	0					
ANR	678713	Identifier	m_slots		678694	0					
ANR	678714	Identifier	slot_id		678694	1					
ANR	678715	CompoundStatement		7:24:154:154	678694	1					
ANR	678716	ExpressionStatement	"dprintf ( D_ALWAYS , ""BackfillSlot object for slot %d already exists\\n"" , slot_id )"	241:2:4585:4670	678694	0	True				
ANR	678717	CallExpression	"dprintf ( D_ALWAYS , ""BackfillSlot object for slot %d already exists\\n"" , slot_id )"		678694	0					
ANR	678718	Callee	dprintf		678694	0					
ANR	678719	Identifier	dprintf		678694	0					
ANR	678720	ArgumentList	D_ALWAYS		678694	1					
ANR	678721	Argument	D_ALWAYS		678694	0					
ANR	678722	Identifier	D_ALWAYS		678694	0					
ANR	678723	Argument	"""BackfillSlot object for slot %d already exists\\n"""		678694	1					
ANR	678724	PrimaryExpression	"""BackfillSlot object for slot %d already exists\\n"""		678694	0					
ANR	678725	Argument	slot_id		678694	2					
ANR	678726	Identifier	slot_id		678694	0					
ANR	678727	ReturnStatement	return true ;	243:2:4674:4685	678694	1	True				
ANR	678728	Identifier	true		678694	0					
ANR	678729	IdentifierDeclStatement	Resource * rip = resmgr -> get_by_slot_id ( slot_id ) ;	246:1:4692:4741	678694	2	True				
ANR	678730	IdentifierDecl	* rip = resmgr -> get_by_slot_id ( slot_id )		678694	0					
ANR	678731	IdentifierDeclType	Resource *		678694	0					
ANR	678732	Identifier	rip		678694	1					
ANR	678733	AssignmentExpression	* rip = resmgr -> get_by_slot_id ( slot_id )		678694	2		=			
ANR	678734	Identifier	rip		678694	0					
ANR	678735	CallExpression	resmgr -> get_by_slot_id ( slot_id )		678694	1					
ANR	678736	Callee	resmgr -> get_by_slot_id		678694	0					
ANR	678737	PtrMemberAccess	resmgr -> get_by_slot_id		678694	0					
ANR	678738	Identifier	resmgr		678694	0					
ANR	678739	Identifier	get_by_slot_id		678694	1					
ANR	678740	ArgumentList	slot_id		678694	1					
ANR	678741	Argument	slot_id		678694	0					
ANR	678742	Identifier	slot_id		678694	0					
ANR	678743	IfStatement	if ( ! rip )		678694	3					
ANR	678744	Condition	! rip	247:5:4748:4752	678694	0	True				
ANR	678745	UnaryOperationExpression	! rip		678694	0					
ANR	678746	UnaryOperator	!		678694	0					
ANR	678747	Identifier	rip		678694	1					
ANR	678748	CompoundStatement		14:13:329:329	678694	1					
ANR	678749	Statement	dprintf	248:2:4760:4766	678694	0	True				
ANR	678750	Statement	(	248:9:4767:4767	678694	1	True				
ANR	678751	Statement	D_ALWAYS	248:11:4769:4776	678694	2	True				
ANR	678752	Statement	","	248:19:4777:4777	678694	3	True				
ANR	678753	Statement	"""ERROR in BOINC_BackfillMgr::start(): """	248:21:4779:4817	678694	4	True				
ANR	678754	Statement	"""can't find resource with slot id %d\\n"""	249:5:4824:4862	678694	5	True				
ANR	678755	Statement	","	249:44:4863:4863	678694	6	True				
ANR	678756	Statement	slot_id	249:46:4865:4871	678694	7	True				
ANR	678757	Statement	)	249:54:4873:4873	678694	8	True				
ANR	678758	ExpressionStatement		249:55:4874:4874	678694	9	True				
ANR	678759	ReturnStatement	return false ;	250:2:4878:4890	678694	10	True				
ANR	678760	Identifier	false		678694	0					
ANR	678761	IdentifierDeclStatement	State s = rip -> state ( ) ;	252:1:4896:4918	678694	4	True				
ANR	678762	IdentifierDecl	s = rip -> state ( )		678694	0					
ANR	678763	IdentifierDeclType	State		678694	0					
ANR	678764	Identifier	s		678694	1					
ANR	678765	AssignmentExpression	s = rip -> state ( )		678694	2		=			
ANR	678766	Identifier	s		678694	0					
ANR	678767	CallExpression	rip -> state ( )		678694	1					
ANR	678768	Callee	rip -> state		678694	0					
ANR	678769	PtrMemberAccess	rip -> state		678694	0					
ANR	678770	Identifier	rip		678694	0					
ANR	678771	Identifier	state		678694	1					
ANR	678772	ArgumentList			678694	1					
ANR	678773	IdentifierDeclStatement	Activity a = rip -> activity ( ) ;	253:1:4921:4949	678694	5	True				
ANR	678774	IdentifierDecl	a = rip -> activity ( )		678694	0					
ANR	678775	IdentifierDeclType	Activity		678694	0					
ANR	678776	Identifier	a		678694	1					
ANR	678777	AssignmentExpression	a = rip -> activity ( )		678694	2		=			
ANR	678778	Identifier	a		678694	0					
ANR	678779	CallExpression	rip -> activity ( )		678694	1					
ANR	678780	Callee	rip -> activity		678694	0					
ANR	678781	PtrMemberAccess	rip -> activity		678694	0					
ANR	678782	Identifier	rip		678694	0					
ANR	678783	Identifier	activity		678694	1					
ANR	678784	ArgumentList			678694	1					
ANR	678785	IfStatement	if ( s != backfill_state )		678694	6					
ANR	678786	Condition	s != backfill_state	255:5:4957:4975	678694	0	True				
ANR	678787	EqualityExpression	s != backfill_state		678694	0		!=			
ANR	678788	Identifier	s		678694	0					
ANR	678789	Identifier	backfill_state		678694	1					
ANR	678790	CompoundStatement		22:27:552:552	678694	1					
ANR	678791	Statement	dprintf	256:2:4983:4989	678694	0	True				
ANR	678792	Statement	(	256:9:4990:4990	678694	1	True				
ANR	678793	Statement	D_ALWAYS	256:11:4992:4999	678694	2	True				
ANR	678794	Statement	","	256:19:5000:5000	678694	3	True				
ANR	678795	Statement	"""ERROR in BOINC_BackfillMgr::start(): """	256:21:5002:5040	678694	4	True				
ANR	678796	Statement	"""Resource for slot id %d not in Backfill state (%s/%s)\\n"""	257:5:5047:5103	678694	5	True				
ANR	678797	Statement	","	257:62:5104:5104	678694	6	True				
ANR	678798	Statement	slot_id	258:5:5111:5117	678694	7	True				
ANR	678799	Statement	","	258:12:5118:5118	678694	8	True				
ANR	678800	Statement	state_to_string	258:14:5120:5134	678694	9	True				
ANR	678801	Statement	(	258:29:5135:5135	678694	10	True				
ANR	678802	Statement	s	258:30:5136:5136	678694	11	True				
ANR	678803	Statement	)	258:31:5137:5137	678694	12	True				
ANR	678804	Statement	","	258:32:5138:5138	678694	13	True				
ANR	678805	Statement	activity_to_string	258:34:5140:5157	678694	14	True				
ANR	678806	Statement	(	258:52:5158:5158	678694	15	True				
ANR	678807	Statement	a	258:53:5159:5159	678694	16	True				
ANR	678808	Statement	)	258:54:5160:5160	678694	17	True				
ANR	678809	Statement	)	258:56:5162:5162	678694	18	True				
ANR	678810	ExpressionStatement		258:57:5163:5163	678694	19	True				
ANR	678811	ReturnStatement	return false ;	259:2:5167:5179	678694	20	True				
ANR	678812	Identifier	false		678694	0					
ANR	678813	IfStatement	if ( a != idle_act )		678694	7					
ANR	678814	Condition	a != idle_act	261:5:5189:5201	678694	0	True				
ANR	678815	EqualityExpression	a != idle_act		678694	0		!=			
ANR	678816	Identifier	a		678694	0					
ANR	678817	Identifier	idle_act		678694	1					
ANR	678818	CompoundStatement		28:21:778:778	678694	1					
ANR	678819	Statement	dprintf	262:2:5209:5215	678694	0	True				
ANR	678820	Statement	(	262:9:5216:5216	678694	1	True				
ANR	678821	Statement	D_ALWAYS	262:11:5218:5225	678694	2	True				
ANR	678822	Statement	","	262:19:5226:5226	678694	3	True				
ANR	678823	Statement	"""ERROR in BOINC_BackfillMgr::start(): """	262:21:5228:5266	678694	4	True				
ANR	678824	Statement	"""Resource for slot id %d not in Backfill/Idle (%s/%s)\\n"""	263:5:5273:5328	678694	5	True				
ANR	678825	Statement	","	263:61:5329:5329	678694	6	True				
ANR	678826	Statement	slot_id	264:5:5336:5342	678694	7	True				
ANR	678827	Statement	","	264:12:5343:5343	678694	8	True				
ANR	678828	Statement	state_to_string	264:14:5345:5359	678694	9	True				
ANR	678829	Statement	(	264:29:5360:5360	678694	10	True				
ANR	678830	Statement	s	264:30:5361:5361	678694	11	True				
ANR	678831	Statement	)	264:31:5362:5362	678694	12	True				
ANR	678832	Statement	","	264:32:5363:5363	678694	13	True				
ANR	678833	Statement	activity_to_string	264:34:5365:5382	678694	14	True				
ANR	678834	Statement	(	264:52:5383:5383	678694	15	True				
ANR	678835	Statement	a	264:53:5384:5384	678694	16	True				
ANR	678836	Statement	)	264:54:5385:5385	678694	17	True				
ANR	678837	Statement	)	264:56:5387:5387	678694	18	True				
ANR	678838	ExpressionStatement		264:57:5388:5388	678694	19	True				
ANR	678839	ReturnStatement	return false ;	265:2:5392:5404	678694	20	True				
ANR	678840	Identifier	false		678694	0					
ANR	678841	IfStatement	if ( m_boinc_starter && m_boinc_starter -> active ( ) )		678694	8					
ANR	678842	Condition	m_boinc_starter && m_boinc_starter -> active ( )	268:5:5415:5458	678694	0	True				
ANR	678843	AndExpression	m_boinc_starter && m_boinc_starter -> active ( )		678694	0		&&			
ANR	678844	Identifier	m_boinc_starter		678694	0					
ANR	678845	CallExpression	m_boinc_starter -> active ( )		678694	1					
ANR	678846	Callee	m_boinc_starter -> active		678694	0					
ANR	678847	PtrMemberAccess	m_boinc_starter -> active		678694	0					
ANR	678848	Identifier	m_boinc_starter		678694	0					
ANR	678849	Identifier	active		678694	1					
ANR	678850	ArgumentList			678694	1					
ANR	678851	CompoundStatement		35:52:1035:1035	678694	1					
ANR	678852	Statement	dprintf	271:2:5585:5591	678694	0	True				
ANR	678853	Statement	(	271:9:5592:5592	678694	1	True				
ANR	678854	Statement	D_FULLDEBUG	271:11:5594:5604	678694	2	True				
ANR	678855	Statement	","	271:22:5605:5605	678694	3	True				
ANR	678856	Statement	"""Slot %d wants to do backfill, already have """	271:24:5607:5651	678694	4	True				
ANR	678857	Statement	"""a BOINC client running (pid %d)\\n"""	272:5:5659:5693	678694	5	True				
ANR	678858	Statement	","	272:40:5694:5694	678694	6	True				
ANR	678859	Statement	slot_id	272:42:5696:5702	678694	7	True				
ANR	678860	Statement	","	272:49:5703:5703	678694	8	True				
ANR	678861	Statement	(	273:5:5711:5711	678694	9	True				
ANR	678862	Statement	int	273:6:5712:5714	678694	10	True				
ANR	678863	Statement	)	273:9:5715:5715	678694	11	True				
ANR	678864	Statement	m_boinc_starter	273:10:5716:5730	678694	12	True				
ANR	678865	Statement	->	273:25:5731:5732	678694	13	True				
ANR	678866	Statement	pid	273:27:5733:5735	678694	14	True				
ANR	678867	Statement	(	273:30:5736:5736	678694	15	True				
ANR	678868	Statement	)	273:31:5737:5737	678694	16	True				
ANR	678869	Statement	)	273:33:5739:5739	678694	17	True				
ANR	678870	ExpressionStatement		273:34:5740:5740	678694	18	True				
ANR	678871	ElseStatement	else		678694	0					
ANR	678872	CompoundStatement		41:8:1323:1323	678694	0					
ANR	678873	IfStatement	if ( ! spawnClient ( rip ) )		678694	0					
ANR	678874	Condition	! spawnClient ( rip )	276:6:5809:5826	678694	0	True				
ANR	678875	UnaryOperationExpression	! spawnClient ( rip )		678694	0					
ANR	678876	UnaryOperator	!		678694	0					
ANR	678877	CallExpression	spawnClient ( rip )		678694	1					
ANR	678878	Callee	spawnClient		678694	0					
ANR	678879	Identifier	spawnClient		678694	0					
ANR	678880	ArgumentList	rip		678694	1					
ANR	678881	Argument	rip		678694	0					
ANR	678882	Identifier	rip		678694	0					
ANR	678883	CompoundStatement		43:27:1403:1403	678694	1					
ANR	678884	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR spawning BOINC client, can't start backfill!\\n"" )"	277:3:5835:5916	678694	0	True				
ANR	678885	CallExpression	"dprintf ( D_ALWAYS , ""ERROR spawning BOINC client, can't start backfill!\\n"" )"		678694	0					
ANR	678886	Callee	dprintf		678694	0					
ANR	678887	Identifier	dprintf		678694	0					
ANR	678888	ArgumentList	D_ALWAYS		678694	1					
ANR	678889	Argument	D_ALWAYS		678694	0					
ANR	678890	Identifier	D_ALWAYS		678694	0					
ANR	678891	Argument	"""ERROR spawning BOINC client, can't start backfill!\\n"""		678694	1					
ANR	678892	PrimaryExpression	"""ERROR spawning BOINC client, can't start backfill!\\n"""		678694	0					
ANR	678893	ReturnStatement	return false ;	279:3:5921:5933	678694	1	True				
ANR	678894	Identifier	false		678694	0					
ANR	678895	ExpressionStatement	m_slots [ slot_id ] = new BOINC_BackfillSlot ( slot_id )	284:1:6005:6057	678694	9	True				
ANR	678896	AssignmentExpression	m_slots [ slot_id ] = new BOINC_BackfillSlot ( slot_id )		678694	0		=			
ANR	678897	ArrayIndexing	m_slots [ slot_id ]		678694	0					
ANR	678898	Identifier	m_slots		678694	0					
ANR	678899	Identifier	slot_id		678694	1					
ANR	678900	Identifier	slot_id		678694	1					
ANR	678901	ExpressionStatement	m_num_slots ++	285:1:6060:6073	678694	10	True				
ANR	678902	PostIncDecOperationExpression	m_num_slots ++		678694	0					
ANR	678903	Identifier	m_num_slots		678694	0					
ANR	678904	IncDec	++		678694	1					
ANR	678905	ExpressionStatement	"dprintf ( D_ALWAYS , ""State change: BOINC client running for slot%d\\n"" , slot_id )"	289:1:6191:6274	678694	11	True				
ANR	678906	CallExpression	"dprintf ( D_ALWAYS , ""State change: BOINC client running for slot%d\\n"" , slot_id )"		678694	0					
ANR	678907	Callee	dprintf		678694	0					
ANR	678908	Identifier	dprintf		678694	0					
ANR	678909	ArgumentList	D_ALWAYS		678694	1					
ANR	678910	Argument	D_ALWAYS		678694	0					
ANR	678911	Identifier	D_ALWAYS		678694	0					
ANR	678912	Argument	"""State change: BOINC client running for slot%d\\n"""		678694	1					
ANR	678913	PrimaryExpression	"""State change: BOINC client running for slot%d\\n"""		678694	0					
ANR	678914	Argument	slot_id		678694	2					
ANR	678915	Identifier	slot_id		678694	0					
ANR	678916	ExpressionStatement	rip -> change_state ( busy_act )	291:1:6278:6307	678694	12	True				
ANR	678917	CallExpression	rip -> change_state ( busy_act )		678694	0					
ANR	678918	Callee	rip -> change_state		678694	0					
ANR	678919	PtrMemberAccess	rip -> change_state		678694	0					
ANR	678920	Identifier	rip		678694	0					
ANR	678921	Identifier	change_state		678694	1					
ANR	678922	ArgumentList	busy_act		678694	1					
ANR	678923	Argument	busy_act		678694	0					
ANR	678924	Identifier	busy_act		678694	0					
ANR	678925	ReturnStatement	return TRUE ;	292:1:6310:6321	678694	13	True				
ANR	678926	Identifier	TRUE		678694	0					
ANR	678927	ReturnType	bool		678694	1					
ANR	678928	Identifier	BOINC_BackfillMgr :: start		678694	2					
ANR	678929	ParameterList	int slot_id		678694	3					
ANR	678930	Parameter	int slot_id	233:26:4412:4422	678694	0	True				
ANR	678931	ParameterType	int		678694	0					
ANR	678932	Identifier	slot_id		678694	1					
ANR	678933	CFGEntryNode	ENTRY		678694		True				
ANR	678934	CFGExitNode	EXIT		678694		True				
ANR	678935	Symbol	* rip		678694						
ANR	678936	Symbol	m_slots		678694						
ANR	678937	Symbol	backfill_state		678694						
ANR	678938	Symbol	m_delete_boinc_mgr		678694						
ANR	678939	Symbol	rip		678694						
ANR	678940	Symbol	m_boinc_starter		678694						
ANR	678941	Symbol	rip -> state		678694						
ANR	678942	Symbol	rip -> activity		678694						
ANR	678943	Symbol	m_boinc_starter -> active		678694						
ANR	678944	Symbol	a		678694						
ANR	678945	Symbol	resmgr -> get_by_slot_id		678694						
ANR	678946	Symbol	* m_slots		678694						
ANR	678947	Symbol	* resmgr		678694						
ANR	678948	Symbol	false		678694						
ANR	678949	Symbol	D_ALWAYS		678694						
ANR	678950	Symbol	* m_boinc_starter		678694						
ANR	678951	Symbol	TRUE		678694						
ANR	678952	Symbol	* slot_id		678694						
ANR	678953	Symbol	s		678694						
ANR	678954	Symbol	busy_act		678694						
ANR	678955	Symbol	resmgr		678694						
ANR	678956	Symbol	slot_id		678694						
ANR	678957	Symbol	idle_act		678694						
ANR	678958	Symbol	m_num_slots		678694						
ANR	678959	Symbol	true		678694						
ANR	678960	Symbol	resmgr -> isShuttingDown		678694						
ANR	678961	Symbol	spawnClient		678694						
ANR	678962	Function	BOINC_BackfillMgr :: spawnClient	296:0:6347:7930							
ANR	678963	FunctionDef	BOINC_BackfillMgr :: spawnClient (Resource * rip)		678962	0					
ANR	678964	CompoundStatement		298:0:6400:7930	678962	0					
ANR	678965	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Entering BOINC_BackfillMgr::spawnClient()\\n"" )"	299:1:6404:6473	678962	0	True				
ANR	678966	CallExpression	"dprintf ( D_FULLDEBUG , ""Entering BOINC_BackfillMgr::spawnClient()\\n"" )"		678962	0					
ANR	678967	Callee	dprintf		678962	0					
ANR	678968	Identifier	dprintf		678962	0					
ANR	678969	ArgumentList	D_FULLDEBUG		678962	1					
ANR	678970	Argument	D_FULLDEBUG		678962	0					
ANR	678971	Identifier	D_FULLDEBUG		678962	0					
ANR	678972	Argument	"""Entering BOINC_BackfillMgr::spawnClient()\\n"""		678962	1					
ANR	678973	PrimaryExpression	"""Entering BOINC_BackfillMgr::spawnClient()\\n"""		678962	0					
ANR	678974	IfStatement	if ( m_reaper_id < 0 )		678962	1					
ANR	678975	Condition	m_reaper_id < 0	301:5:6481:6495	678962	0	True				
ANR	678976	RelationalExpression	m_reaper_id < 0		678962	0		<			
ANR	678977	Identifier	m_reaper_id		678962	0					
ANR	678978	PrimaryExpression	0		678962	1					
ANR	678979	CompoundStatement		4:23:98:98	678962	1					
ANR	678980	ExpressionStatement	"m_reaper_id = daemonCore -> Register_Reaper ( ""BOINC reaper"" , ( ReaperHandlercpp ) & BOINC_BackfillMgr :: reaper , ""BOINC_BackfillMgr::reaper()"" , this )"	302:2:6503:6651	678962	0	True				
ANR	678981	AssignmentExpression	"m_reaper_id = daemonCore -> Register_Reaper ( ""BOINC reaper"" , ( ReaperHandlercpp ) & BOINC_BackfillMgr :: reaper , ""BOINC_BackfillMgr::reaper()"" , this )"		678962	0		=			
ANR	678982	Identifier	m_reaper_id		678962	0					
ANR	678983	CallExpression	"daemonCore -> Register_Reaper ( ""BOINC reaper"" , ( ReaperHandlercpp ) & BOINC_BackfillMgr :: reaper , ""BOINC_BackfillMgr::reaper()"" , this )"		678962	1					
ANR	678984	Callee	daemonCore -> Register_Reaper		678962	0					
ANR	678985	PtrMemberAccess	daemonCore -> Register_Reaper		678962	0					
ANR	678986	Identifier	daemonCore		678962	0					
ANR	678987	Identifier	Register_Reaper		678962	1					
ANR	678988	ArgumentList	"""BOINC reaper"""		678962	1					
ANR	678989	Argument	"""BOINC reaper"""		678962	0					
ANR	678990	PrimaryExpression	"""BOINC reaper"""		678962	0					
ANR	678991	Argument	( ReaperHandlercpp ) & BOINC_BackfillMgr :: reaper		678962	1					
ANR	678992	CastExpression	( ReaperHandlercpp ) & BOINC_BackfillMgr :: reaper		678962	0					
ANR	678993	CastTarget	ReaperHandlercpp		678962	0					
ANR	678994	UnaryOperationExpression	& BOINC_BackfillMgr :: reaper		678962	1					
ANR	678995	UnaryOperator	&		678962	0					
ANR	678996	Identifier	BOINC_BackfillMgr :: reaper		678962	1					
ANR	678997	Argument	"""BOINC_BackfillMgr::reaper()"""		678962	2					
ANR	678998	PrimaryExpression	"""BOINC_BackfillMgr::reaper()"""		678962	0					
ANR	678999	Argument	this		678962	3					
ANR	679000	Identifier	this		678962	0					
ANR	679001	ExpressionStatement	ASSERT ( m_reaper_id != FALSE )	305:2:6655:6685	678962	1	True				
ANR	679002	CallExpression	ASSERT ( m_reaper_id != FALSE )		678962	0					
ANR	679003	Callee	ASSERT		678962	0					
ANR	679004	Identifier	ASSERT		678962	0					
ANR	679005	ArgumentList	m_reaper_id != FALSE		678962	1					
ANR	679006	Argument	m_reaper_id != FALSE		678962	0					
ANR	679007	EqualityExpression	m_reaper_id != FALSE		678962	0		!=			
ANR	679008	Identifier	m_reaper_id		678962	0					
ANR	679009	Identifier	FALSE		678962	1					
ANR	679010	IfStatement	if ( m_boinc_starter && m_boinc_starter -> active ( ) )		678962	2					
ANR	679011	Condition	m_boinc_starter && m_boinc_starter -> active ( )	308:5:6696:6739	678962	0	True				
ANR	679012	AndExpression	m_boinc_starter && m_boinc_starter -> active ( )		678962	0		&&			
ANR	679013	Identifier	m_boinc_starter		678962	0					
ANR	679014	CallExpression	m_boinc_starter -> active ( )		678962	1					
ANR	679015	Callee	m_boinc_starter -> active		678962	0					
ANR	679016	PtrMemberAccess	m_boinc_starter -> active		678962	0					
ANR	679017	Identifier	m_boinc_starter		678962	0					
ANR	679018	Identifier	active		678962	1					
ANR	679019	ArgumentList			678962	1					
ANR	679020	CompoundStatement		11:52:342:342	678962	1					
ANR	679021	Statement	dprintf	310:2:6798:6804	678962	0	True				
ANR	679022	Statement	(	310:9:6805:6805	678962	1	True				
ANR	679023	Statement	D_ALWAYS	310:11:6807:6814	678962	2	True				
ANR	679024	Statement	","	310:19:6815:6815	678962	3	True				
ANR	679025	Statement	"""ERROR: BOINC_BackfillMgr::spawnClient() """	310:21:6817:6858	678962	4	True				
ANR	679026	Statement	"""called with active m_boinc_starter object (pid %d)\\n"""	311:5:6865:6918	678962	5	True				
ANR	679027	Statement	","	311:59:6919:6919	678962	6	True				
ANR	679028	Statement	(	312:5:6926:6926	678962	7	True				
ANR	679029	Statement	int	312:6:6927:6929	678962	8	True				
ANR	679030	Statement	)	312:9:6930:6930	678962	9	True				
ANR	679031	Statement	m_boinc_starter	312:10:6931:6945	678962	10	True				
ANR	679032	Statement	->	312:25:6946:6947	678962	11	True				
ANR	679033	Statement	pid	312:27:6948:6950	678962	12	True				
ANR	679034	Statement	(	312:30:6951:6951	678962	13	True				
ANR	679035	Statement	)	312:31:6952:6952	678962	14	True				
ANR	679036	Statement	)	312:33:6954:6954	678962	15	True				
ANR	679037	ExpressionStatement		312:34:6955:6955	678962	16	True				
ANR	679038	ReturnStatement	return false ;	313:2:6959:6971	678962	17	True				
ANR	679039	Identifier	false		678962	0					
ANR	679040	IfStatement	if ( ! m_boinc_starter )		678962	3					
ANR	679041	Condition	! m_boinc_starter	316:5:6982:6998	678962	0	True				
ANR	679042	UnaryOperationExpression	! m_boinc_starter		678962	0					
ANR	679043	UnaryOperator	!		678962	0					
ANR	679044	Identifier	m_boinc_starter		678962	1					
ANR	679045	CompoundStatement		23:2:669:692	678962	1					
ANR	679046	IdentifierDeclStatement	Starter * tmp_starter ;	317:2:7006:7026	678962	0	True				
ANR	679047	IdentifierDecl	* tmp_starter		678962	0					
ANR	679048	IdentifierDeclType	Starter *		678962	0					
ANR	679049	Identifier	tmp_starter		678962	1					
ANR	679050	IdentifierDeclStatement	ClassAd fake_ad ;	318:2:7030:7045	678962	1	True				
ANR	679051	IdentifierDecl	fake_ad		678962	0					
ANR	679052	IdentifierDeclType	ClassAd		678962	0					
ANR	679053	Identifier	fake_ad		678962	1					
ANR	679054	IdentifierDeclStatement	MyString fake_req ;	319:2:7049:7066	678962	2	True				
ANR	679055	IdentifierDecl	fake_req		678962	0					
ANR	679056	IdentifierDeclType	MyString		678962	0					
ANR	679057	Identifier	fake_req		678962	1					
ANR	679058	IdentifierDeclStatement	bool no_starter = false ;	320:2:7070:7093	678962	3	True				
ANR	679059	IdentifierDecl	no_starter = false		678962	0					
ANR	679060	IdentifierDeclType	bool		678962	0					
ANR	679061	Identifier	no_starter		678962	1					
ANR	679062	AssignmentExpression	no_starter = false		678962	2		=			
ANR	679063	Identifier	false		678962	0					
ANR	679064	Identifier	false		678962	1					
ANR	679065	ExpressionStatement	"fake_req . sprintf ( ""%s = TARGET.%s"" , ATTR_REQUIREMENTS , ATTR_HAS_JIC_LOCAL_CONFIG )"	321:2:7097:7187	678962	4	True				
ANR	679066	CallExpression	"fake_req . sprintf ( ""%s = TARGET.%s"" , ATTR_REQUIREMENTS , ATTR_HAS_JIC_LOCAL_CONFIG )"		678962	0					
ANR	679067	Callee	fake_req . sprintf		678962	0					
ANR	679068	MemberAccess	fake_req . sprintf		678962	0					
ANR	679069	Identifier	fake_req		678962	0					
ANR	679070	Identifier	sprintf		678962	1					
ANR	679071	ArgumentList	"""%s = TARGET.%s"""		678962	1					
ANR	679072	Argument	"""%s = TARGET.%s"""		678962	0					
ANR	679073	PrimaryExpression	"""%s = TARGET.%s"""		678962	0					
ANR	679074	Argument	ATTR_REQUIREMENTS		678962	1					
ANR	679075	Identifier	ATTR_REQUIREMENTS		678962	0					
ANR	679076	Argument	ATTR_HAS_JIC_LOCAL_CONFIG		678962	2					
ANR	679077	Identifier	ATTR_HAS_JIC_LOCAL_CONFIG		678962	0					
ANR	679078	ExpressionStatement	fake_ad . Insert ( fake_req . Value ( ) )	323:2:7191:7225	678962	5	True				
ANR	679079	CallExpression	fake_ad . Insert ( fake_req . Value ( ) )		678962	0					
ANR	679080	Callee	fake_ad . Insert		678962	0					
ANR	679081	MemberAccess	fake_ad . Insert		678962	0					
ANR	679082	Identifier	fake_ad		678962	0					
ANR	679083	Identifier	Insert		678962	1					
ANR	679084	ArgumentList	fake_req . Value ( )		678962	1					
ANR	679085	Argument	fake_req . Value ( )		678962	0					
ANR	679086	CallExpression	fake_req . Value ( )		678962	0					
ANR	679087	Callee	fake_req . Value		678962	0					
ANR	679088	MemberAccess	fake_req . Value		678962	0					
ANR	679089	Identifier	fake_req		678962	0					
ANR	679090	Identifier	Value		678962	1					
ANR	679091	ArgumentList			678962	1					
ANR	679092	ExpressionStatement	"tmp_starter = resmgr -> starter_mgr . findStarter ( & fake_ad , NULL , no_starter )"	324:2:7229:7304	678962	6	True				
ANR	679093	AssignmentExpression	"tmp_starter = resmgr -> starter_mgr . findStarter ( & fake_ad , NULL , no_starter )"		678962	0		=			
ANR	679094	Identifier	tmp_starter		678962	0					
ANR	679095	CallExpression	"resmgr -> starter_mgr . findStarter ( & fake_ad , NULL , no_starter )"		678962	1					
ANR	679096	Callee	resmgr -> starter_mgr . findStarter		678962	0					
ANR	679097	MemberAccess	resmgr -> starter_mgr . findStarter		678962	0					
ANR	679098	PtrMemberAccess	resmgr -> starter_mgr		678962	0					
ANR	679099	Identifier	resmgr		678962	0					
ANR	679100	Identifier	starter_mgr		678962	1					
ANR	679101	Identifier	findStarter		678962	1					
ANR	679102	ArgumentList	& fake_ad		678962	1					
ANR	679103	Argument	& fake_ad		678962	0					
ANR	679104	UnaryOperationExpression	& fake_ad		678962	0					
ANR	679105	UnaryOperator	&		678962	0					
ANR	679106	Identifier	fake_ad		678962	1					
ANR	679107	Argument	NULL		678962	1					
ANR	679108	Identifier	NULL		678962	0					
ANR	679109	Argument	no_starter		678962	2					
ANR	679110	Identifier	no_starter		678962	0					
ANR	679111	IfStatement	if ( ! tmp_starter )		678962	7					
ANR	679112	Condition	! tmp_starter	325:6:7312:7324	678962	0	True				
ANR	679113	UnaryOperationExpression	! tmp_starter		678962	0					
ANR	679114	UnaryOperator	!		678962	0					
ANR	679115	Identifier	tmp_starter		678962	1					
ANR	679116	CompoundStatement		28:22:927:927	678962	1					
ANR	679117	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: Can't find a starter with %s\\n"" , ATTR_HAS_JIC_LOCAL_CONFIG )"	326:3:7333:7426	678962	0	True				
ANR	679118	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: Can't find a starter with %s\\n"" , ATTR_HAS_JIC_LOCAL_CONFIG )"		678962	0					
ANR	679119	Callee	dprintf		678962	0					
ANR	679120	Identifier	dprintf		678962	0					
ANR	679121	ArgumentList	D_ALWAYS		678962	1					
ANR	679122	Argument	D_ALWAYS		678962	0					
ANR	679123	Identifier	D_ALWAYS		678962	0					
ANR	679124	Argument	"""ERROR: Can't find a starter with %s\\n"""		678962	1					
ANR	679125	PrimaryExpression	"""ERROR: Can't find a starter with %s\\n"""		678962	0					
ANR	679126	Argument	ATTR_HAS_JIC_LOCAL_CONFIG		678962	2					
ANR	679127	Identifier	ATTR_HAS_JIC_LOCAL_CONFIG		678962	0					
ANR	679128	ReturnStatement	return false ;	328:3:7431:7443	678962	1	True				
ANR	679129	Identifier	false		678962	0					
ANR	679130	ExpressionStatement	m_boinc_starter = tmp_starter	330:2:7451:7480	678962	8	True				
ANR	679131	AssignmentExpression	m_boinc_starter = tmp_starter		678962	0		=			
ANR	679132	Identifier	m_boinc_starter		678962	0					
ANR	679133	Identifier	tmp_starter		678962	1					
ANR	679134	ExpressionStatement	m_boinc_starter -> setIsBOINC ( true )	331:2:7484:7519	678962	9	True				
ANR	679135	CallExpression	m_boinc_starter -> setIsBOINC ( true )		678962	0					
ANR	679136	Callee	m_boinc_starter -> setIsBOINC		678962	0					
ANR	679137	PtrMemberAccess	m_boinc_starter -> setIsBOINC		678962	0					
ANR	679138	Identifier	m_boinc_starter		678962	0					
ANR	679139	Identifier	setIsBOINC		678962	1					
ANR	679140	ArgumentList	true		678962	1					
ANR	679141	Argument	true		678962	0					
ANR	679142	Identifier	true		678962	0					
ANR	679143	ExpressionStatement	m_boinc_starter -> setReaperID ( m_reaper_id )	332:2:7523:7566	678962	10	True				
ANR	679144	CallExpression	m_boinc_starter -> setReaperID ( m_reaper_id )		678962	0					
ANR	679145	Callee	m_boinc_starter -> setReaperID		678962	0					
ANR	679146	PtrMemberAccess	m_boinc_starter -> setReaperID		678962	0					
ANR	679147	Identifier	m_boinc_starter		678962	0					
ANR	679148	Identifier	setReaperID		678962	1					
ANR	679149	ArgumentList	m_reaper_id		678962	1					
ANR	679150	Argument	m_reaper_id		678962	0					
ANR	679151	Identifier	m_reaper_id		678962	0					
ANR	679152	ExpressionStatement	ASSERT ( rip )	333:2:7570:7583	678962	11	True				
ANR	679153	CallExpression	ASSERT ( rip )		678962	0					
ANR	679154	Callee	ASSERT		678962	0					
ANR	679155	Identifier	ASSERT		678962	0					
ANR	679156	ArgumentList	rip		678962	1					
ANR	679157	Argument	rip		678962	0					
ANR	679158	Identifier	rip		678962	0					
ANR	679159	ExpressionStatement	m_boinc_starter -> setExecuteDir ( rip -> executeDir ( ) )	334:2:7587:7638	678962	12	True				
ANR	679160	CallExpression	m_boinc_starter -> setExecuteDir ( rip -> executeDir ( ) )		678962	0					
ANR	679161	Callee	m_boinc_starter -> setExecuteDir		678962	0					
ANR	679162	PtrMemberAccess	m_boinc_starter -> setExecuteDir		678962	0					
ANR	679163	Identifier	m_boinc_starter		678962	0					
ANR	679164	Identifier	setExecuteDir		678962	1					
ANR	679165	ArgumentList	rip -> executeDir ( )		678962	1					
ANR	679166	Argument	rip -> executeDir ( )		678962	0					
ANR	679167	CallExpression	rip -> executeDir ( )		678962	0					
ANR	679168	Callee	rip -> executeDir		678962	0					
ANR	679169	PtrMemberAccess	rip -> executeDir		678962	0					
ANR	679170	Identifier	rip		678962	0					
ANR	679171	Identifier	executeDir		678962	1					
ANR	679172	ArgumentList			678962	1					
ANR	679173	IfStatement	"if ( ! m_boinc_starter -> spawn ( time ( NULL ) , NULL ) )"		678962	4					
ANR	679174	Condition	"! m_boinc_starter -> spawn ( time ( NULL ) , NULL )"	338:5:7698:7739	678962	0	True				
ANR	679175	UnaryOperationExpression	"! m_boinc_starter -> spawn ( time ( NULL ) , NULL )"		678962	0					
ANR	679176	UnaryOperator	!		678962	0					
ANR	679177	CallExpression	"m_boinc_starter -> spawn ( time ( NULL ) , NULL )"		678962	1					
ANR	679178	Callee	m_boinc_starter -> spawn		678962	0					
ANR	679179	PtrMemberAccess	m_boinc_starter -> spawn		678962	0					
ANR	679180	Identifier	m_boinc_starter		678962	0					
ANR	679181	Identifier	spawn		678962	1					
ANR	679182	ArgumentList	time ( NULL )		678962	1					
ANR	679183	Argument	time ( NULL )		678962	0					
ANR	679184	CallExpression	time ( NULL )		678962	0					
ANR	679185	Callee	time		678962	0					
ANR	679186	Identifier	time		678962	0					
ANR	679187	ArgumentList	NULL		678962	1					
ANR	679188	Argument	NULL		678962	0					
ANR	679189	Identifier	NULL		678962	0					
ANR	679190	Argument	NULL		678962	1					
ANR	679191	Identifier	NULL		678962	0					
ANR	679192	CompoundStatement		41:50:1342:1342	678962	1					
ANR	679193	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR spawning BOINC client\\n"" )"	339:2:7747:7799	678962	0	True				
ANR	679194	CallExpression	"dprintf ( D_ALWAYS , ""ERROR spawning BOINC client\\n"" )"		678962	0					
ANR	679195	Callee	dprintf		678962	0					
ANR	679196	Identifier	dprintf		678962	0					
ANR	679197	ArgumentList	D_ALWAYS		678962	1					
ANR	679198	Argument	D_ALWAYS		678962	0					
ANR	679199	Identifier	D_ALWAYS		678962	0					
ANR	679200	Argument	"""ERROR spawning BOINC client\\n"""		678962	1					
ANR	679201	PrimaryExpression	"""ERROR spawning BOINC client\\n"""		678962	0					
ANR	679202	ReturnStatement	return false ;	340:2:7803:7815	678962	1	True				
ANR	679203	Identifier	false		678962	0					
ANR	679204	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Spawned BOINC starter: (pid %d)\\n"" , ( int ) m_boinc_starter -> pid ( ) )"	342:1:7821:7914	678962	5	True				
ANR	679205	CallExpression	"dprintf ( D_FULLDEBUG , ""Spawned BOINC starter: (pid %d)\\n"" , ( int ) m_boinc_starter -> pid ( ) )"		678962	0					
ANR	679206	Callee	dprintf		678962	0					
ANR	679207	Identifier	dprintf		678962	0					
ANR	679208	ArgumentList	D_FULLDEBUG		678962	1					
ANR	679209	Argument	D_FULLDEBUG		678962	0					
ANR	679210	Identifier	D_FULLDEBUG		678962	0					
ANR	679211	Argument	"""Spawned BOINC starter: (pid %d)\\n"""		678962	1					
ANR	679212	PrimaryExpression	"""Spawned BOINC starter: (pid %d)\\n"""		678962	0					
ANR	679213	Argument	( int ) m_boinc_starter -> pid ( )		678962	2					
ANR	679214	CastExpression	( int ) m_boinc_starter -> pid ( )		678962	0					
ANR	679215	CastTarget	int		678962	0					
ANR	679216	CallExpression	m_boinc_starter -> pid ( )		678962	1					
ANR	679217	Callee	m_boinc_starter -> pid		678962	0					
ANR	679218	PtrMemberAccess	m_boinc_starter -> pid		678962	0					
ANR	679219	Identifier	m_boinc_starter		678962	0					
ANR	679220	Identifier	pid		678962	1					
ANR	679221	ArgumentList			678962	1					
ANR	679222	ReturnStatement	return true ;	344:1:7917:7928	678962	6	True				
ANR	679223	Identifier	true		678962	0					
ANR	679224	ReturnType	bool		678962	1					
ANR	679225	Identifier	BOINC_BackfillMgr :: spawnClient		678962	2					
ANR	679226	ParameterList	Resource * rip		678962	3					
ANR	679227	Parameter	Resource * rip	297:32:6384:6396	678962	0	True				
ANR	679228	ParameterType	Resource *		678962	0					
ANR	679229	Identifier	rip		678962	1					
ANR	679230	CFGEntryNode	ENTRY		678962		True				
ANR	679231	CFGExitNode	EXIT		678962		True				
ANR	679232	Symbol	* rip		678962						
ANR	679233	Symbol	ATTR_HAS_JIC_LOCAL_CONFIG		678962						
ANR	679234	Symbol	fake_req . Value		678962						
ANR	679235	Symbol	resmgr -> starter_mgr . findStarter		678962						
ANR	679236	Symbol	daemonCore		678962						
ANR	679237	Symbol	rip		678962						
ANR	679238	Symbol	m_boinc_starter		678962						
ANR	679239	Symbol	& BOINC_BackfillMgr :: reaper		678962						
ANR	679240	Symbol	fake_ad		678962						
ANR	679241	Symbol	rip -> executeDir		678962						
ANR	679242	Symbol	m_boinc_starter -> pid		678962						
ANR	679243	Symbol	m_boinc_starter -> active		678962						
ANR	679244	Symbol	NULL		678962						
ANR	679245	Symbol	no_starter		678962						
ANR	679246	Symbol	ATTR_REQUIREMENTS		678962						
ANR	679247	Symbol	this		678962						
ANR	679248	Symbol	* m_boinc_starter		678962						
ANR	679249	Symbol	false		678962						
ANR	679250	Symbol	* resmgr		678962						
ANR	679251	Symbol	D_ALWAYS		678962						
ANR	679252	Symbol	m_reaper_id		678962						
ANR	679253	Symbol	D_FULLDEBUG		678962						
ANR	679254	Symbol	daemonCore -> Register_Reaper		678962						
ANR	679255	Symbol	& fake_ad		678962						
ANR	679256	Symbol	m_boinc_starter -> spawn		678962						
ANR	679257	Symbol	fake_req		678962						
ANR	679258	Symbol	resmgr		678962						
ANR	679259	Symbol	* daemonCore		678962						
ANR	679260	Symbol	tmp_starter		678962						
ANR	679261	Symbol	true		678962						
ANR	679262	Symbol	FALSE		678962						
ANR	679263	Symbol	time		678962						
ANR	679264	Symbol	resmgr -> starter_mgr		678962						
ANR	679265	Function	BOINC_BackfillMgr :: killClient	348:0:7934:8362							
ANR	679266	FunctionDef	BOINC_BackfillMgr :: killClient ()		679265	0					
ANR	679267	CompoundStatement		350:0:7977:8362	679265	0					
ANR	679268	IdentifierDeclStatement	bool rval = m_boinc_starter -> killHard ( ) ;	351:1:7980:8019	679265	0	True				
ANR	679269	IdentifierDecl	rval = m_boinc_starter -> killHard ( )		679265	0					
ANR	679270	IdentifierDeclType	bool		679265	0					
ANR	679271	Identifier	rval		679265	1					
ANR	679272	AssignmentExpression	rval = m_boinc_starter -> killHard ( )		679265	2		=			
ANR	679273	Identifier	rval		679265	0					
ANR	679274	CallExpression	m_boinc_starter -> killHard ( )		679265	1					
ANR	679275	Callee	m_boinc_starter -> killHard		679265	0					
ANR	679276	PtrMemberAccess	m_boinc_starter -> killHard		679265	0					
ANR	679277	Identifier	m_boinc_starter		679265	0					
ANR	679278	Identifier	killHard		679265	1					
ANR	679279	ArgumentList			679265	1					
ANR	679280	IfStatement	if ( ! rval )		679265	1					
ANR	679281	Condition	! rval	352:5:8026:8031	679265	0	True				
ANR	679282	UnaryOperationExpression	! rval		679265	0					
ANR	679283	UnaryOperator	!		679265	0					
ANR	679284	Identifier	rval		679265	1					
ANR	679285	CompoundStatement		3:14:57:57	679265	1					
ANR	679286	Statement	dprintf	353:2:8039:8045	679265	0	True				
ANR	679287	Statement	(	353:9:8046:8046	679265	1	True				
ANR	679288	Statement	D_ALWAYS	353:11:8048:8055	679265	2	True				
ANR	679289	Statement	","	353:19:8056:8056	679265	3	True				
ANR	679290	Statement	"""BOINC_BackfillMgr::killClient(): """	353:21:8058:8092	679265	4	True				
ANR	679291	Statement	"""ERROR telling BOINC starter (pid %d) to hardkill\\n"""	354:5:8099:8150	679265	5	True				
ANR	679292	Statement	","	354:57:8151:8151	679265	6	True				
ANR	679293	Statement	(	355:5:8158:8158	679265	7	True				
ANR	679294	Statement	int	355:6:8159:8161	679265	8	True				
ANR	679295	Statement	)	355:9:8162:8162	679265	9	True				
ANR	679296	Statement	m_boinc_starter	355:10:8163:8177	679265	10	True				
ANR	679297	Statement	->	355:25:8178:8179	679265	11	True				
ANR	679298	Statement	pid	355:27:8180:8182	679265	12	True				
ANR	679299	Statement	(	355:30:8183:8183	679265	13	True				
ANR	679300	Statement	)	355:31:8184:8184	679265	14	True				
ANR	679301	Statement	)	355:33:8186:8186	679265	15	True				
ANR	679302	ExpressionStatement		355:34:8187:8187	679265	16	True				
ANR	679303	ElseStatement	else		679265	0					
ANR	679304	CompoundStatement		7:8:219:219	679265	0					
ANR	679305	Statement	dprintf	357:2:8201:8207	679265	0	True				
ANR	679306	Statement	(	357:9:8208:8208	679265	1	True				
ANR	679307	Statement	D_FULLDEBUG	357:11:8210:8220	679265	2	True				
ANR	679308	Statement	","	357:22:8221:8221	679265	3	True				
ANR	679309	Statement	"""BOINC_BackfillMgr::killClient(): """	357:24:8223:8257	679265	4	True				
ANR	679310	Statement	"""told BOINC starter (pid %d) to hardkill\\n"""	358:5:8264:8306	679265	5	True				
ANR	679311	Statement	","	358:48:8307:8307	679265	6	True				
ANR	679312	Statement	(	359:5:8314:8314	679265	7	True				
ANR	679313	Statement	int	359:6:8315:8317	679265	8	True				
ANR	679314	Statement	)	359:9:8318:8318	679265	9	True				
ANR	679315	Statement	m_boinc_starter	359:10:8319:8333	679265	10	True				
ANR	679316	Statement	->	359:25:8334:8335	679265	11	True				
ANR	679317	Statement	pid	359:27:8336:8338	679265	12	True				
ANR	679318	Statement	(	359:30:8339:8339	679265	13	True				
ANR	679319	Statement	)	359:31:8340:8340	679265	14	True				
ANR	679320	Statement	)	359:33:8342:8342	679265	15	True				
ANR	679321	ExpressionStatement		359:34:8343:8343	679265	16	True				
ANR	679322	ReturnStatement	return rval ;	361:1:8349:8360	679265	2	True				
ANR	679323	Identifier	rval		679265	0					
ANR	679324	ReturnType	bool		679265	1					
ANR	679325	Identifier	BOINC_BackfillMgr :: killClient		679265	2					
ANR	679326	ParameterList			679265	3					
ANR	679327	CFGEntryNode	ENTRY		679265		True				
ANR	679328	CFGExitNode	EXIT		679265		True				
ANR	679329	Symbol	* m_boinc_starter		679265						
ANR	679330	Symbol	m_boinc_starter		679265						
ANR	679331	Symbol	m_boinc_starter -> killHard		679265						
ANR	679332	Symbol	rval		679265						
ANR	679333	Function	BOINC_BackfillMgr :: reaper	365:0:8366:9309							
ANR	679334	FunctionDef	"BOINC_BackfillMgr :: reaper (int pid , int status)"		679333	0					
ANR	679335	CompoundStatement		367:0:8419:9309	679333	0					
ANR	679336	IdentifierDeclStatement	MyString status_str ;	368:1:8422:8441	679333	0	True				
ANR	679337	IdentifierDecl	status_str		679333	0					
ANR	679338	IdentifierDeclType	MyString		679333	0					
ANR	679339	Identifier	status_str		679333	1					
ANR	679340	ExpressionStatement	"statusString ( status , status_str )"	369:1:8444:8478	679333	1	True				
ANR	679341	CallExpression	"statusString ( status , status_str )"		679333	0					
ANR	679342	Callee	statusString		679333	0					
ANR	679343	Identifier	statusString		679333	0					
ANR	679344	ArgumentList	status		679333	1					
ANR	679345	Argument	status		679333	0					
ANR	679346	Identifier	status		679333	0					
ANR	679347	Argument	status_str		679333	1					
ANR	679348	Identifier	status_str		679333	0					
ANR	679349	ExpressionStatement	"dprintf ( D_ALWAYS , ""BOINC client (pid %d) %s\\n"" , pid , status_str . Value ( ) )"	370:1:8481:8555	679333	2	True				
ANR	679350	CallExpression	"dprintf ( D_ALWAYS , ""BOINC client (pid %d) %s\\n"" , pid , status_str . Value ( ) )"		679333	0					
ANR	679351	Callee	dprintf		679333	0					
ANR	679352	Identifier	dprintf		679333	0					
ANR	679353	ArgumentList	D_ALWAYS		679333	1					
ANR	679354	Argument	D_ALWAYS		679333	0					
ANR	679355	Identifier	D_ALWAYS		679333	0					
ANR	679356	Argument	"""BOINC client (pid %d) %s\\n"""		679333	1					
ANR	679357	PrimaryExpression	"""BOINC client (pid %d) %s\\n"""		679333	0					
ANR	679358	Argument	pid		679333	2					
ANR	679359	Identifier	pid		679333	0					
ANR	679360	Argument	status_str . Value ( )		679333	3					
ANR	679361	CallExpression	status_str . Value ( )		679333	0					
ANR	679362	Callee	status_str . Value		679333	0					
ANR	679363	MemberAccess	status_str . Value		679333	0					
ANR	679364	Identifier	status_str		679333	0					
ANR	679365	Identifier	Value		679333	1					
ANR	679366	ArgumentList			679333	1					
ANR	679367	IfStatement	if ( ! m_boinc_starter )		679333	3					
ANR	679368	Condition	! m_boinc_starter	371:5:8562:8578	679333	0	True				
ANR	679369	UnaryOperationExpression	! m_boinc_starter		679333	0					
ANR	679370	UnaryOperator	!		679333	0					
ANR	679371	Identifier	m_boinc_starter		679333	1					
ANR	679372	CompoundStatement		5:25:162:162	679333	1					
ANR	679373	Statement	EXCEPT	372:2:8586:8591	679333	0	True				
ANR	679374	Statement	(	372:8:8592:8592	679333	1	True				
ANR	679375	Statement	"""Impossible: BOINC_BackfillMgr::reaper() pid [%d] """	372:10:8594:8644	679333	2	True				
ANR	679376	Statement	"""called while m_boinc_starter is NULL!"""	373:4:8650:8688	679333	3	True				
ANR	679377	Statement	","	373:43:8689:8689	679333	4	True				
ANR	679378	Statement	pid	373:45:8691:8693	679333	5	True				
ANR	679379	Statement	)	373:49:8695:8695	679333	6	True				
ANR	679380	ExpressionStatement		373:50:8696:8696	679333	7	True				
ANR	679381	IfStatement	if ( ( int ) m_boinc_starter -> pid ( ) != pid )		679333	4					
ANR	679382	Condition	( int ) m_boinc_starter -> pid ( ) != pid	375:5:8706:8739	679333	0	True				
ANR	679383	EqualityExpression	( int ) m_boinc_starter -> pid ( ) != pid		679333	0		!=			
ANR	679384	CastExpression	( int ) m_boinc_starter -> pid ( )		679333	0					
ANR	679385	CastTarget	int		679333	0					
ANR	679386	CallExpression	m_boinc_starter -> pid ( )		679333	1					
ANR	679387	Callee	m_boinc_starter -> pid		679333	0					
ANR	679388	PtrMemberAccess	m_boinc_starter -> pid		679333	0					
ANR	679389	Identifier	m_boinc_starter		679333	0					
ANR	679390	Identifier	pid		679333	1					
ANR	679391	ArgumentList			679333	1					
ANR	679392	Identifier	pid		679333	1					
ANR	679393	CompoundStatement		9:42:323:323	679333	1					
ANR	679394	Statement	EXCEPT	376:2:8747:8752	679333	0	True				
ANR	679395	Statement	(	376:8:8753:8753	679333	1	True				
ANR	679396	Statement	"""Impossible: BOINC_BackfillMgr::reaper() pid [%d] """	376:10:8755:8805	679333	2	True				
ANR	679397	Statement	"""doesn't match m_boinc_starter's pid [%d]"""	377:4:8811:8852	679333	3	True				
ANR	679398	Statement	","	377:46:8853:8853	679333	4	True				
ANR	679399	Statement	pid	377:48:8855:8857	679333	5	True				
ANR	679400	Statement	","	377:51:8858:8858	679333	6	True				
ANR	679401	Statement	(	378:4:8865:8865	679333	7	True				
ANR	679402	Statement	int	378:5:8866:8868	679333	8	True				
ANR	679403	Statement	)	378:8:8869:8869	679333	9	True				
ANR	679404	Statement	m_boinc_starter	378:9:8870:8884	679333	10	True				
ANR	679405	Statement	->	378:24:8885:8886	679333	11	True				
ANR	679406	Statement	pid	378:26:8887:8889	679333	12	True				
ANR	679407	Statement	(	378:29:8890:8890	679333	13	True				
ANR	679408	Statement	)	378:30:8891:8891	679333	14	True				
ANR	679409	Statement	)	378:32:8893:8893	679333	15	True				
ANR	679410	ExpressionStatement		378:33:8894:8894	679333	16	True				
ANR	679411	ExpressionStatement	m_boinc_starter -> exited ( status )	382:1:8950:8981	679333	5	True				
ANR	679412	CallExpression	m_boinc_starter -> exited ( status )		679333	0					
ANR	679413	Callee	m_boinc_starter -> exited		679333	0					
ANR	679414	PtrMemberAccess	m_boinc_starter -> exited		679333	0					
ANR	679415	Identifier	m_boinc_starter		679333	0					
ANR	679416	Identifier	exited		679333	1					
ANR	679417	ArgumentList	status		679333	1					
ANR	679418	Argument	status		679333	0					
ANR	679419	Identifier	status		679333	0					
ANR	679420	Statement	delete	383:1:8984:8989	679333	6	True				
ANR	679421	ExpressionStatement	m_boinc_starter	383:8:8991:9006	679333	7	True				
ANR	679422	Identifier	m_boinc_starter		679333	0					
ANR	679423	ExpressionStatement	m_boinc_starter = NULL	384:1:9009:9031	679333	8	True				
ANR	679424	AssignmentExpression	m_boinc_starter = NULL		679333	0		=			
ANR	679425	Identifier	m_boinc_starter		679333	0					
ANR	679426	Identifier	NULL		679333	1					
ANR	679427	IdentifierDeclStatement	"int i , max = m_slots . getsize ( ) ;"	387:1:9094:9124	679333	9	True				
ANR	679428	IdentifierDecl	i		679333	0					
ANR	679429	IdentifierDeclType	int		679333	0					
ANR	679430	Identifier	i		679333	1					
ANR	679431	IdentifierDecl	max = m_slots . getsize ( )		679333	1					
ANR	679432	IdentifierDeclType	int		679333	0					
ANR	679433	Identifier	max		679333	1					
ANR	679434	AssignmentExpression	max = m_slots . getsize ( )		679333	2		=			
ANR	679435	Identifier	max		679333	0					
ANR	679436	CallExpression	m_slots . getsize ( )		679333	1					
ANR	679437	Callee	m_slots . getsize		679333	0					
ANR	679438	MemberAccess	m_slots . getsize		679333	0					
ANR	679439	Identifier	m_slots		679333	0					
ANR	679440	Identifier	getsize		679333	1					
ANR	679441	ArgumentList			679333	1					
ANR	679442	ForStatement	for ( i = 0 ; i < max ; i ++ )		679333	10					
ANR	679443	ForInit	i = 0 ;	388:6:9132:9135	679333	0	True				
ANR	679444	AssignmentExpression	i = 0		679333	0		=			
ANR	679445	Identifier	i		679333	0					
ANR	679446	PrimaryExpression	0		679333	1					
ANR	679447	Condition	i < max	388:11:9137:9143	679333	1	True				
ANR	679448	RelationalExpression	i < max		679333	0		<			
ANR	679449	Identifier	i		679333	0					
ANR	679450	Identifier	max		679333	1					
ANR	679451	PostIncDecOperationExpression	i ++	388:20:9146:9148	679333	2	True				
ANR	679452	Identifier	i		679333	0					
ANR	679453	IncDec	++		679333	1					
ANR	679454	CompoundStatement		22:26:732:732	679333	3					
ANR	679455	ExpressionStatement	rmSlot ( i )	389:2:9156:9167	679333	0	True				
ANR	679456	CallExpression	rmSlot ( i )		679333	0					
ANR	679457	Callee	rmSlot		679333	0					
ANR	679458	Identifier	rmSlot		679333	0					
ANR	679459	ArgumentList	i		679333	1					
ANR	679460	Argument	i		679333	0					
ANR	679461	Identifier	i		679333	0					
ANR	679462	IfStatement	if ( resmgr -> isShuttingDown ( ) )		679333	11					
ANR	679463	Condition	resmgr -> isShuttingDown ( )	392:5:9178:9201	679333	0	True				
ANR	679464	CallExpression	resmgr -> isShuttingDown ( )		679333	0					
ANR	679465	Callee	resmgr -> isShuttingDown		679333	0					
ANR	679466	PtrMemberAccess	resmgr -> isShuttingDown		679333	0					
ANR	679467	Identifier	resmgr		679333	0					
ANR	679468	Identifier	isShuttingDown		679333	1					
ANR	679469	ArgumentList			679333	1					
ANR	679470	CompoundStatement		26:32:785:785	679333	1					
ANR	679471	ExpressionStatement	startd_check_free ( )	393:2:9209:9228	679333	0	True				
ANR	679472	CallExpression	startd_check_free ( )		679333	0					
ANR	679473	Callee	startd_check_free		679333	0					
ANR	679474	Identifier	startd_check_free		679333	0					
ANR	679475	ArgumentList			679333	1					
ANR	679476	IfStatement	if ( m_delete_boinc_mgr )		679333	12					
ANR	679477	Condition	m_delete_boinc_mgr	396:5:9239:9256	679333	0	True				
ANR	679478	Identifier	m_delete_boinc_mgr		679333	0					
ANR	679479	CompoundStatement		30:26:840:840	679333	1					
ANR	679480	ExpressionStatement	resmgr -> backfillMgrDone ( )	397:2:9264:9289	679333	0	True				
ANR	679481	CallExpression	resmgr -> backfillMgrDone ( )		679333	0					
ANR	679482	Callee	resmgr -> backfillMgrDone		679333	0					
ANR	679483	PtrMemberAccess	resmgr -> backfillMgrDone		679333	0					
ANR	679484	Identifier	resmgr		679333	0					
ANR	679485	Identifier	backfillMgrDone		679333	1					
ANR	679486	ArgumentList			679333	1					
ANR	679487	ReturnStatement	return TRUE ;	400:1:9296:9307	679333	13	True				
ANR	679488	Identifier	TRUE		679333	0					
ANR	679489	ReturnType	int		679333	1					
ANR	679490	Identifier	BOINC_BackfillMgr :: reaper		679333	2					
ANR	679491	ParameterList	"int pid , int status"		679333	3					
ANR	679492	Parameter	int pid	366:27:8397:8403	679333	0	True				
ANR	679493	ParameterType	int		679333	0					
ANR	679494	Identifier	pid		679333	1					
ANR	679495	Parameter	int status	366:36:8406:8415	679333	1	True				
ANR	679496	ParameterType	int		679333	0					
ANR	679497	Identifier	status		679333	1					
ANR	679498	CFGEntryNode	ENTRY		679333		True				
ANR	679499	CFGExitNode	EXIT		679333		True				
ANR	679500	Symbol	NULL		679333						
ANR	679501	Symbol	max		679333						
ANR	679502	Symbol	D_ALWAYS		679333						
ANR	679503	Symbol	* m_boinc_starter		679333						
ANR	679504	Symbol	* resmgr		679333						
ANR	679505	Symbol	status_str		679333						
ANR	679506	Symbol	m_slots		679333						
ANR	679507	Symbol	i		679333						
ANR	679508	Symbol	TRUE		679333						
ANR	679509	Symbol	pid		679333						
ANR	679510	Symbol	m_delete_boinc_mgr		679333						
ANR	679511	Symbol	resmgr		679333						
ANR	679512	Symbol	m_boinc_starter		679333						
ANR	679513	Symbol	resmgr -> isShuttingDown		679333						
ANR	679514	Symbol	m_boinc_starter -> pid		679333						
ANR	679515	Symbol	m_slots . getsize		679333						
ANR	679516	Symbol	status_str . Value		679333						
ANR	679517	Symbol	status		679333						
ANR	679518	Function	BOINC_BackfillMgr :: hardkill	428:0:9556:10439							
ANR	679519	FunctionDef	BOINC_BackfillMgr :: hardkill (int slot_id)		679518	0					
ANR	679520	CompoundStatement		430:0:9604:10439	679518	0					
ANR	679521	IfStatement	if ( ! ( m_boinc_starter && m_boinc_starter -> active ( ) ) )		679518	0					
ANR	679522	Condition	! ( m_boinc_starter && m_boinc_starter -> active ( ) )	431:5:9611:9658	679518	0	True				
ANR	679523	UnaryOperationExpression	! ( m_boinc_starter && m_boinc_starter -> active ( ) )		679518	0					
ANR	679524	UnaryOperator	!		679518	0					
ANR	679525	AndExpression	m_boinc_starter && m_boinc_starter -> active ( )		679518	1		&&			
ANR	679526	Identifier	m_boinc_starter		679518	0					
ANR	679527	CallExpression	m_boinc_starter -> active ( )		679518	1					
ANR	679528	Callee	m_boinc_starter -> active		679518	0					
ANR	679529	PtrMemberAccess	m_boinc_starter -> active		679518	0					
ANR	679530	Identifier	m_boinc_starter		679518	0					
ANR	679531	Identifier	active		679518	1					
ANR	679532	ArgumentList			679518	1					
ANR	679533	CompoundStatement		2:56:57:57	679518	1					
ANR	679534	ReturnStatement	return true ;	433:2:9708:9719	679518	0	True				
ANR	679535	Identifier	true		679518	0					
ANR	679536	IfStatement	if ( slot_id != 0 && m_num_slots > 1 )		679518	1					
ANR	679537	Condition	slot_id != 0 && m_num_slots > 1	437:5:9785:9815	679518	0	True				
ANR	679538	AndExpression	slot_id != 0 && m_num_slots > 1		679518	0		&&			
ANR	679539	EqualityExpression	slot_id != 0		679518	0		!=			
ANR	679540	Identifier	slot_id		679518	0					
ANR	679541	PrimaryExpression	0		679518	1					
ANR	679542	RelationalExpression	m_num_slots > 1		679518	1		>			
ANR	679543	Identifier	m_num_slots		679518	0					
ANR	679544	PrimaryExpression	1		679518	1					
ANR	679545	CompoundStatement		8:39:214:214	679518	1					
ANR	679546	IfStatement	if ( ! m_slots [ slot_id ] )		679518	0					
ANR	679547	Condition	! m_slots [ slot_id ]	442:6:10060:10077	679518	0	True				
ANR	679548	UnaryOperationExpression	! m_slots [ slot_id ]		679518	0					
ANR	679549	UnaryOperator	!		679518	0					
ANR	679550	ArrayIndexing	m_slots [ slot_id ]		679518	1					
ANR	679551	Identifier	m_slots		679518	0					
ANR	679552	Identifier	slot_id		679518	1					
ANR	679553	CompoundStatement		13:27:476:476	679518	1					
ANR	679554	Statement	dprintf	443:3:10086:10092	679518	0	True				
ANR	679555	Statement	(	443:10:10093:10093	679518	1	True				
ANR	679556	Statement	D_ALWAYS	443:12:10095:10102	679518	2	True				
ANR	679557	Statement	","	443:20:10103:10103	679518	3	True				
ANR	679558	Statement	"""ERROR in BOINC_BackfillMgr::hardkill(%d) """	443:22:10105:10147	679518	4	True				
ANR	679559	Statement	"""no BackfillSlot object with that id\\n"""	444:6:10155:10193	679518	5	True				
ANR	679560	Statement	","	444:45:10194:10194	679518	6	True				
ANR	679561	Statement	slot_id	444:47:10196:10202	679518	7	True				
ANR	679562	Statement	)	444:55:10204:10204	679518	8	True				
ANR	679563	ExpressionStatement		444:56:10205:10205	679518	9	True				
ANR	679564	ReturnStatement	return false ;	445:3:10210:10222	679518	10	True				
ANR	679565	Identifier	false		679518	0					
ANR	679566	ReturnStatement	return rmSlot ( slot_id ) ;	447:2:10230:10254	679518	1	True				
ANR	679567	CallExpression	rmSlot ( slot_id )		679518	0					
ANR	679568	Callee	rmSlot		679518	0					
ANR	679569	Identifier	rmSlot		679518	0					
ANR	679570	ArgumentList	slot_id		679518	1					
ANR	679571	Argument	slot_id		679518	0					
ANR	679572	Identifier	slot_id		679518	0					
ANR	679573	ReturnStatement	return killClient ( ) ;	453:1:10418:10437	679518	2	True				
ANR	679574	CallExpression	killClient ( )		679518	0					
ANR	679575	Callee	killClient		679518	0					
ANR	679576	Identifier	killClient		679518	0					
ANR	679577	ArgumentList			679518	1					
ANR	679578	ReturnType	bool		679518	1					
ANR	679579	Identifier	BOINC_BackfillMgr :: hardkill		679518	2					
ANR	679580	ParameterList	int slot_id		679518	3					
ANR	679581	Parameter	int slot_id	429:29:9590:9600	679518	0	True				
ANR	679582	ParameterType	int		679518	0					
ANR	679583	Identifier	slot_id		679518	1					
ANR	679584	CFGEntryNode	ENTRY		679518		True				
ANR	679585	CFGExitNode	EXIT		679518		True				
ANR	679586	Symbol	killClient		679518						
ANR	679587	Symbol	slot_id		679518						
ANR	679588	Symbol	rmSlot		679518						
ANR	679589	Symbol	m_num_slots		679518						
ANR	679590	Symbol	* m_slots		679518						
ANR	679591	Symbol	m_boinc_starter		679518						
ANR	679592	Symbol	* m_boinc_starter		679518						
ANR	679593	Symbol	true		679518						
ANR	679594	Symbol	false		679518						
ANR	679595	Symbol	m_slots		679518						
ANR	679596	Symbol	* slot_id		679518						
ANR	679597	Symbol	m_boinc_starter -> active		679518						
ANR	679598	Function	BOINC_BackfillMgr :: walk	457:0:10443:10760							
ANR	679599	FunctionDef	BOINC_BackfillMgr :: walk (BoincSlotMember member_func)		679598	0					
ANR	679600	CompoundStatement		459:0:10503:10760	679598	0					
ANR	679601	IdentifierDeclStatement	bool rval = true ;	460:1:10506:10522	679598	0	True				
ANR	679602	IdentifierDecl	rval = true		679598	0					
ANR	679603	IdentifierDeclType	bool		679598	0					
ANR	679604	Identifier	rval		679598	1					
ANR	679605	AssignmentExpression	rval = true		679598	2		=			
ANR	679606	Identifier	true		679598	0					
ANR	679607	Identifier	true		679598	1					
ANR	679608	IdentifierDeclStatement	"int i , num = 0 , max = m_slots . getsize ( ) ;"	461:1:10525:10564	679598	1	True				
ANR	679609	IdentifierDecl	i		679598	0					
ANR	679610	IdentifierDeclType	int		679598	0					
ANR	679611	Identifier	i		679598	1					
ANR	679612	IdentifierDecl	num = 0		679598	1					
ANR	679613	IdentifierDeclType	int		679598	0					
ANR	679614	Identifier	num		679598	1					
ANR	679615	AssignmentExpression	num = 0		679598	2		=			
ANR	679616	Identifier	num		679598	0					
ANR	679617	PrimaryExpression	0		679598	1					
ANR	679618	IdentifierDecl	max = m_slots . getsize ( )		679598	2					
ANR	679619	IdentifierDeclType	int		679598	0					
ANR	679620	Identifier	max		679598	1					
ANR	679621	AssignmentExpression	max = m_slots . getsize ( )		679598	2		=			
ANR	679622	Identifier	max		679598	0					
ANR	679623	CallExpression	m_slots . getsize ( )		679598	1					
ANR	679624	Callee	m_slots . getsize		679598	0					
ANR	679625	MemberAccess	m_slots . getsize		679598	0					
ANR	679626	Identifier	m_slots		679598	0					
ANR	679627	Identifier	getsize		679598	1					
ANR	679628	ArgumentList			679598	1					
ANR	679629	ForStatement	for ( i = 0 ; num < m_num_slots && i < max ; i ++ )		679598	2					
ANR	679630	ForInit	i = 0 ;	462:6:10572:10577	679598	0	True				
ANR	679631	AssignmentExpression	i = 0		679598	0		=			
ANR	679632	Identifier	i		679598	0					
ANR	679633	PrimaryExpression	0		679598	1					
ANR	679634	Condition	num < m_num_slots && i < max	462:13:10579:10606	679598	1	True				
ANR	679635	AndExpression	num < m_num_slots && i < max		679598	0		&&			
ANR	679636	RelationalExpression	num < m_num_slots		679598	0		<			
ANR	679637	Identifier	num		679598	0					
ANR	679638	Identifier	m_num_slots		679598	1					
ANR	679639	RelationalExpression	i < max		679598	1		<			
ANR	679640	Identifier	i		679598	0					
ANR	679641	Identifier	max		679598	1					
ANR	679642	PostIncDecOperationExpression	i ++	462:43:10609:10611	679598	2	True				
ANR	679643	Identifier	i		679598	0					
ANR	679644	IncDec	++		679598	1					
ANR	679645	CompoundStatement		4:49:111:111	679598	3					
ANR	679646	IfStatement	if ( m_slots [ i ] )		679598	0					
ANR	679647	Condition	m_slots [ i ]	463:6:10623:10632	679598	0	True				
ANR	679648	ArrayIndexing	m_slots [ i ]		679598	0					
ANR	679649	Identifier	m_slots		679598	0					
ANR	679650	Identifier	i		679598	1					
ANR	679651	CompoundStatement		5:19:132:132	679598	1					
ANR	679652	ExpressionStatement	num ++	464:3:10642:10647	679598	0	True				
ANR	679653	PostIncDecOperationExpression	num ++		679598	0					
ANR	679654	Identifier	num		679598	0					
ANR	679655	IncDec	++		679598	1					
ANR	679656	Statement	if	465:3:10652:10653	679598	1	True				
ANR	679657	Statement	(	465:5:10654:10654	679598	2	True				
ANR	679658	Statement	!	465:7:10656:10656	679598	3	True				
ANR	679659	Statement	(	465:9:10658:10658	679598	4	True				
ANR	679660	Statement	(	465:10:10659:10659	679598	5	True				
ANR	679661	Statement	(	465:11:10660:10660	679598	6	True				
ANR	679662	Statement	BOINC_BackfillSlot	465:12:10661:10678	679598	7	True				
ANR	679663	Statement	*	465:30:10679:10679	679598	8	True				
ANR	679664	Statement	)	465:31:10680:10680	679598	9	True				
ANR	679665	Statement	m_slots	465:32:10681:10687	679598	10	True				
ANR	679666	Statement	[	465:39:10688:10688	679598	11	True				
ANR	679667	Statement	i	465:40:10689:10689	679598	12	True				
ANR	679668	Statement	]	465:41:10690:10690	679598	13	True				
ANR	679669	Statement	)	465:42:10691:10691	679598	14	True				
ANR	679670	Statement	->*	465:43:10692:10694	679598	15	True				
ANR	679671	Statement	(	465:46:10695:10695	679598	16	True				
ANR	679672	Statement	member_func	465:47:10696:10706	679598	17	True				
ANR	679673	Statement	)	465:58:10707:10707	679598	18	True				
ANR	679674	Statement	)	465:59:10708:10708	679598	19	True				
ANR	679675	Statement	(	465:60:10709:10709	679598	20	True				
ANR	679676	Statement	)	465:61:10710:10710	679598	21	True				
ANR	679677	Statement	)	465:63:10712:10712	679598	22	True				
ANR	679678	CompoundStatement		7:65:210:210	679598	23					
ANR	679679	ExpressionStatement	rval = false	466:4:10720:10732	679598	0	True				
ANR	679680	AssignmentExpression	rval = false		679598	0		=			
ANR	679681	Identifier	rval		679598	0					
ANR	679682	Identifier	false		679598	1					
ANR	679683	ReturnStatement	return rval ;	470:1:10747:10758	679598	3	True				
ANR	679684	Identifier	rval		679598	0					
ANR	679685	ReturnType	bool		679598	1					
ANR	679686	Identifier	BOINC_BackfillMgr :: walk		679598	2					
ANR	679687	ParameterList	BoincSlotMember member_func		679598	3					
ANR	679688	Parameter	BoincSlotMember member_func	458:25:10473:10499	679598	0	True				
ANR	679689	ParameterType	BoincSlotMember		679598	0					
ANR	679690	Identifier	member_func		679598	1					
ANR	679691	CFGEntryNode	ENTRY		679598		True				
ANR	679692	CFGExitNode	EXIT		679598		True				
ANR	679693	Symbol	member_func		679598						
ANR	679694	Symbol	* i		679598						
ANR	679695	Symbol	max		679598						
ANR	679696	Symbol	num		679598						
ANR	679697	Symbol	m_num_slots		679598						
ANR	679698	Symbol	* m_slots		679598						
ANR	679699	Symbol	true		679598						
ANR	679700	Symbol	false		679598						
ANR	679701	Symbol	m_slots		679598						
ANR	679702	Symbol	i		679598						
ANR	679703	Symbol	rval		679598						
ANR	679704	Symbol	m_slots . getsize		679598						
