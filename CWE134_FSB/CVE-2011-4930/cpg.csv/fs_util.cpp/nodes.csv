command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1369501	File	data/converged/CVE-2011-4930_htcondor/fs_util.cpp								
ANR	1369502	Function	detect_nfs_statvfs	89:0:2079:2840							
ANR	1369503	FunctionDef	"detect_nfs_statvfs (const char * path , BOOLEAN * is_nfs)"		1369502	0					
ANR	1369504	CompoundStatement		91:0:2146:2840	1369502	0					
ANR	1369505	IdentifierDeclStatement	int status ;	92:1:2149:2159	1369502	0	True				
ANR	1369506	IdentifierDecl	status		1369502	0					
ANR	1369507	IdentifierDeclType	int		1369502	0					
ANR	1369508	Identifier	status		1369502	1					
ANR	1369509	IdentifierDeclStatement	struct statvfs buf ;	93:1:2162:2180	1369502	1	True				
ANR	1369510	IdentifierDecl	buf		1369502	0					
ANR	1369511	IdentifierDeclType	struct statvfs		1369502	0					
ANR	1369512	Identifier	buf		1369502	1					
ANR	1369513	ExpressionStatement	"status = statvfs ( path , & buf )"	95:1:2184:2214	1369502	2	True				
ANR	1369514	AssignmentExpression	"status = statvfs ( path , & buf )"		1369502	0		=			
ANR	1369515	Identifier	status		1369502	0					
ANR	1369516	CallExpression	"statvfs ( path , & buf )"		1369502	1					
ANR	1369517	Callee	statvfs		1369502	0					
ANR	1369518	Identifier	statvfs		1369502	0					
ANR	1369519	ArgumentList	path		1369502	1					
ANR	1369520	Argument	path		1369502	0					
ANR	1369521	Identifier	path		1369502	0					
ANR	1369522	Argument	& buf		1369502	1					
ANR	1369523	UnaryOperationExpression	& buf		1369502	0					
ANR	1369524	UnaryOperator	&		1369502	0					
ANR	1369525	Identifier	buf		1369502	1					
ANR	1369526	IfStatement	if ( ( status < 0 ) && ( errno == ENOENT ) )		1369502	3					
ANR	1369527	Condition	( status < 0 ) && ( errno == ENOENT )	96:6:2222:2258	1369502	0	True				
ANR	1369528	AndExpression	( status < 0 ) && ( errno == ENOENT )		1369502	0		&&			
ANR	1369529	RelationalExpression	status < 0		1369502	0		<			
ANR	1369530	Identifier	status		1369502	0					
ANR	1369531	PrimaryExpression	0		1369502	1					
ANR	1369532	EqualityExpression	errno == ENOENT		1369502	1		==			
ANR	1369533	Identifier	errno		1369502	0					
ANR	1369534	Identifier	ENOENT		1369502	1					
ANR	1369535	CompoundStatement		8:3:176:191	1369502	1					
ANR	1369536	IdentifierDeclStatement	char * _dir_name ;	98:3:2323:2338	1369502	0	True				
ANR	1369537	IdentifierDecl	* _dir_name		1369502	0					
ANR	1369538	IdentifierDeclType	char *		1369502	0					
ANR	1369539	Identifier	_dir_name		1369502	1					
ANR	1369540	ExpressionStatement	_dir_name = condor_dirname ( path )	99:3:2343:2375	1369502	1	True				
ANR	1369541	AssignmentExpression	_dir_name = condor_dirname ( path )		1369502	0		=			
ANR	1369542	Identifier	_dir_name		1369502	0					
ANR	1369543	CallExpression	condor_dirname ( path )		1369502	1					
ANR	1369544	Callee	condor_dirname		1369502	0					
ANR	1369545	Identifier	condor_dirname		1369502	0					
ANR	1369546	ArgumentList	path		1369502	1					
ANR	1369547	Argument	path		1369502	0					
ANR	1369548	Identifier	path		1369502	0					
ANR	1369549	ExpressionStatement	"status = statvfs ( _dir_name , & buf )"	100:3:2380:2415	1369502	2	True				
ANR	1369550	AssignmentExpression	"status = statvfs ( _dir_name , & buf )"		1369502	0		=			
ANR	1369551	Identifier	status		1369502	0					
ANR	1369552	CallExpression	"statvfs ( _dir_name , & buf )"		1369502	1					
ANR	1369553	Callee	statvfs		1369502	0					
ANR	1369554	Identifier	statvfs		1369502	0					
ANR	1369555	ArgumentList	_dir_name		1369502	1					
ANR	1369556	Argument	_dir_name		1369502	0					
ANR	1369557	Identifier	_dir_name		1369502	0					
ANR	1369558	Argument	& buf		1369502	1					
ANR	1369559	UnaryOperationExpression	& buf		1369502	0					
ANR	1369560	UnaryOperator	&		1369502	0					
ANR	1369561	Identifier	buf		1369502	1					
ANR	1369562	ExpressionStatement	free ( _dir_name )	101:3:2420:2435	1369502	3	True				
ANR	1369563	CallExpression	free ( _dir_name )		1369502	0					
ANR	1369564	Callee	free		1369502	0					
ANR	1369565	Identifier	free		1369502	0					
ANR	1369566	ArgumentList	_dir_name		1369502	1					
ANR	1369567	Argument	_dir_name		1369502	0					
ANR	1369568	Identifier	_dir_name		1369502	0					
ANR	1369569	IfStatement	if ( status < 0 )		1369502	4					
ANR	1369570	Condition	status < 0	104:6:2447:2456	1369502	0	True				
ANR	1369571	RelationalExpression	status < 0		1369502	0		<			
ANR	1369572	Identifier	status		1369502	0					
ANR	1369573	PrimaryExpression	0		1369502	1					
ANR	1369574	CompoundStatement		16:5:321:422	1369502	1					
ANR	1369575	IdentifierDeclStatement	"ifndef FS_UTIL_TEST dprintf ( D_ALWAYS , ""statvfs() failed: %d/%s\\n"" , errno , strerror ( errno ) ) ;"	106:5:2468:2569	1369502	0	True				
ANR	1369576	IdentifierDecl	"dprintf ( D_ALWAYS , ""statvfs() failed: %d/%s\\n"" , errno , strerror ( errno ) )"		1369502	0					
ANR	1369577	IdentifierDeclType	ifndef FS_UTIL_TEST		1369502	0					
ANR	1369578	Identifier	dprintf		1369502	1					
ANR	1369579	Expression	"D_ALWAYS , ""statvfs() failed: %d/%s\\n"" , errno , strerror ( errno )"		1369502	2					
ANR	1369580	Identifier	D_ALWAYS		1369502	0					
ANR	1369581	Expression	"""statvfs() failed: %d/%s\\n"" , errno , strerror ( errno )"		1369502	1					
ANR	1369582	PrimaryExpression	"""statvfs() failed: %d/%s\\n"""		1369502	0					
ANR	1369583	Expression	"errno , strerror ( errno )"		1369502	1					
ANR	1369584	Identifier	errno		1369502	0					
ANR	1369585	CallExpression	strerror ( errno )		1369502	1					
ANR	1369586	Callee	strerror		1369502	0					
ANR	1369587	Identifier	strerror		1369502	0					
ANR	1369588	ArgumentList	errno		1369502	1					
ANR	1369589	Argument	errno		1369502	0					
ANR	1369590	Identifier	errno		1369502	0					
ANR	1369591	Statement	endif	109:5:2576:2580	1369502	1	True				
ANR	1369592	ReturnStatement	return - 1 ;	110:2:2584:2593	1369502	2	True				
ANR	1369593	UnaryOperationExpression	- 1		1369502	0					
ANR	1369594	UnaryOperator	-		1369502	0					
ANR	1369595	PrimaryExpression	1		1369502	1					
ANR	1369596	IfStatement	"if ( ! strncmp ( buf . f_basetype , ""nfs"" , 3 ) )"		1369502	5					
ANR	1369597	Condition	"! strncmp ( buf . f_basetype , ""nfs"" , 3 )"	112:6:2604:2639	1369502	0	True				
ANR	1369598	UnaryOperationExpression	"! strncmp ( buf . f_basetype , ""nfs"" , 3 )"		1369502	0					
ANR	1369599	UnaryOperator	!		1369502	0					
ANR	1369600	CallExpression	"strncmp ( buf . f_basetype , ""nfs"" , 3 )"		1369502	1					
ANR	1369601	Callee	strncmp		1369502	0					
ANR	1369602	Identifier	strncmp		1369502	0					
ANR	1369603	ArgumentList	buf . f_basetype		1369502	1					
ANR	1369604	Argument	buf . f_basetype		1369502	0					
ANR	1369605	MemberAccess	buf . f_basetype		1369502	0					
ANR	1369606	Identifier	buf		1369502	0					
ANR	1369607	Identifier	f_basetype		1369502	1					
ANR	1369608	Argument	"""nfs"""		1369502	1					
ANR	1369609	PrimaryExpression	"""nfs"""		1369502	0					
ANR	1369610	Argument	3		1369502	2					
ANR	1369611	PrimaryExpression	3		1369502	0					
ANR	1369612	CompoundStatement		22:45:496:496	1369502	1					
ANR	1369613	ExpressionStatement	* is_nfs = TRUE	113:2:2647:2661	1369502	0	True				
ANR	1369614	AssignmentExpression	* is_nfs = TRUE		1369502	0		=			
ANR	1369615	UnaryOperationExpression	* is_nfs		1369502	0					
ANR	1369616	UnaryOperator	*		1369502	0					
ANR	1369617	Identifier	is_nfs		1369502	1					
ANR	1369618	Identifier	TRUE		1369502	1					
ANR	1369619	ElseStatement	else		1369502	0					
ANR	1369620	CompoundStatement		24:8:524:524	1369502	0					
ANR	1369621	ExpressionStatement	* is_nfs = FALSE	115:2:2675:2690	1369502	0	True				
ANR	1369622	AssignmentExpression	* is_nfs = FALSE		1369502	0		=			
ANR	1369623	UnaryOperationExpression	* is_nfs		1369502	0					
ANR	1369624	UnaryOperator	*		1369502	0					
ANR	1369625	Identifier	is_nfs		1369502	1					
ANR	1369626	Identifier	FALSE		1369502	1					
ANR	1369627	IdentifierDeclStatement	"ifdef FS_UTIL_TEST printf ( ""detect_nfs_statvfs: f_basetype = %s -> %s\\n"" , buf . f_basetype , * is_nfs ? ""true"" : ""false"" ) ;"	117:2:2697:2819	1369502	6	True				
ANR	1369628	IdentifierDecl	"printf ( ""detect_nfs_statvfs: f_basetype = %s -> %s\\n"" , buf . f_basetype , * is_nfs ? ""true"" : ""false"" )"		1369502	0					
ANR	1369629	IdentifierDeclType	ifdef FS_UTIL_TEST		1369502	0					
ANR	1369630	Identifier	printf		1369502	1					
ANR	1369631	Expression	"""detect_nfs_statvfs: f_basetype = %s -> %s\\n"" , buf . f_basetype , * is_nfs ? ""true"" : ""false"""		1369502	2					
ANR	1369632	PrimaryExpression	"""detect_nfs_statvfs: f_basetype = %s -> %s\\n"""		1369502	0					
ANR	1369633	Expression	"buf . f_basetype , * is_nfs ? ""true"" : ""false"""		1369502	1					
ANR	1369634	MemberAccess	buf . f_basetype		1369502	0					
ANR	1369635	Identifier	buf		1369502	0					
ANR	1369636	Identifier	f_basetype		1369502	1					
ANR	1369637	ConditionalExpression	"* is_nfs ? ""true"" : ""false"""		1369502	1					
ANR	1369638	Condition	* is_nfs		1369502	0					
ANR	1369639	UnaryOperationExpression	* is_nfs		1369502	0					
ANR	1369640	UnaryOperator	*		1369502	0					
ANR	1369641	Identifier	is_nfs		1369502	1					
ANR	1369642	PrimaryExpression	"""true"""		1369502	1					
ANR	1369643	PrimaryExpression	"""false"""		1369502	2					
ANR	1369644	Statement	endif	120:2:2823:2827	1369502	7	True				
ANR	1369645	ReturnStatement	return 0 ;	121:1:2830:2838	1369502	8	True				
ANR	1369646	PrimaryExpression	0		1369502	0					
ANR	1369647	ReturnType	static int		1369502	1					
ANR	1369648	Identifier	detect_nfs_statvfs		1369502	2					
ANR	1369649	ParameterList	"const char * path , BOOLEAN * is_nfs"		1369502	3					
ANR	1369650	Parameter	const char * path	90:20:2110:2125	1369502	0	True				
ANR	1369651	ParameterType	const char *		1369502	0					
ANR	1369652	Identifier	path		1369502	1					
ANR	1369653	Parameter	BOOLEAN * is_nfs	90:38:2128:2142	1369502	1	True				
ANR	1369654	ParameterType	BOOLEAN *		1369502	0					
ANR	1369655	Identifier	is_nfs		1369502	1					
ANR	1369656	CFGEntryNode	ENTRY		1369502		True				
ANR	1369657	CFGExitNode	EXIT		1369502		True				
ANR	1369658	Symbol	errno		1369502						
ANR	1369659	Symbol	statvfs		1369502						
ANR	1369660	Symbol	_dir_name		1369502						
ANR	1369661	Symbol	is_nfs		1369502						
ANR	1369662	Symbol	condor_dirname		1369502						
ANR	1369663	Symbol	TRUE		1369502						
ANR	1369664	Symbol	ENOENT		1369502						
ANR	1369665	Symbol	printf		1369502						
ANR	1369666	Symbol	path		1369502						
ANR	1369667	Symbol	strncmp		1369502						
ANR	1369668	Symbol	buf		1369502						
ANR	1369669	Symbol	dprintf		1369502						
ANR	1369670	Symbol	buf . f_basetype		1369502						
ANR	1369671	Symbol	FALSE		1369502						
ANR	1369672	Symbol	* is_nfs		1369502						
ANR	1369673	Symbol	& buf		1369502						
ANR	1369674	Symbol	status		1369502						
ANR	1369675	Function	detect_nfs_statfs	125:0:2871:4815							
ANR	1369676	FunctionDef	"detect_nfs_statfs (const char * path , BOOLEAN * is_nfs)"		1369675	0					
ANR	1369677	CompoundStatement		127:0:2937:4815	1369675	0					
ANR	1369678	IdentifierDeclStatement	int status ;	128:1:2940:2950	1369675	0	True				
ANR	1369679	IdentifierDecl	status		1369675	0					
ANR	1369680	IdentifierDeclType	int		1369675	0					
ANR	1369681	Identifier	status		1369675	1					
ANR	1369682	IdentifierDeclStatement	struct statfs buf ;	129:1:2953:2970	1369675	1	True				
ANR	1369683	IdentifierDecl	buf		1369675	0					
ANR	1369684	IdentifierDeclType	struct statfs		1369675	0					
ANR	1369685	Identifier	buf		1369675	1					
ANR	1369686	IfStatement	if ( STATFS_ARGS == 2 )		1369675	2					
ANR	1369687	Condition	STATFS_ARGS == 2	131:6:2979:2994	1369675	0	True				
ANR	1369688	EqualityExpression	STATFS_ARGS == 2		1369675	0		==			
ANR	1369689	Identifier	STATFS_ARGS		1369675	0					
ANR	1369690	PrimaryExpression	2		1369675	1					
ANR	1369691	ExpressionStatement	"status = statfs ( path , & buf )"	132:1:2998:3027	1369675	1	True				
ANR	1369692	AssignmentExpression	"status = statfs ( path , & buf )"		1369675	0		=			
ANR	1369693	Identifier	status		1369675	0					
ANR	1369694	CallExpression	"statfs ( path , & buf )"		1369675	1					
ANR	1369695	Callee	statfs		1369675	0					
ANR	1369696	Identifier	statfs		1369675	0					
ANR	1369697	ArgumentList	path		1369675	1					
ANR	1369698	Argument	path		1369675	0					
ANR	1369699	Identifier	path		1369675	0					
ANR	1369700	Argument	& buf		1369675	1					
ANR	1369701	UnaryOperationExpression	& buf		1369675	0					
ANR	1369702	UnaryOperator	&		1369675	0					
ANR	1369703	Identifier	buf		1369675	1					
ANR	1369704	ElseStatement	else		1369675	0					
ANR	1369705	Statement	error	136:3:3113:3117	1369675	0	True				
ANR	1369706	Statement	elif	133:2:3031:3034	1369675	3	True				
ANR	1369707	Statement	(	133:7:3036:3036	1369675	4	True				
ANR	1369708	Statement	STATFS_ARGS	133:8:3037:3047	1369675	5	True				
ANR	1369709	Statement	==	133:20:3049:3050	1369675	6	True				
ANR	1369710	Statement	4	133:23:3052:3052	1369675	7	True				
ANR	1369711	Statement	)	133:24:3053:3053	1369675	8	True				
ANR	1369712	ExpressionStatement	"status = statfs ( path , & buf , sizeof ( buf ) , 0 )"	134:1:3056:3101	1369675	9	True				
ANR	1369713	AssignmentExpression	"status = statfs ( path , & buf , sizeof ( buf ) , 0 )"		1369675	0		=			
ANR	1369714	Identifier	status		1369675	0					
ANR	1369715	CallExpression	"statfs ( path , & buf , sizeof ( buf ) , 0 )"		1369675	1					
ANR	1369716	Callee	statfs		1369675	0					
ANR	1369717	Identifier	statfs		1369675	0					
ANR	1369718	ArgumentList	path		1369675	1					
ANR	1369719	Argument	path		1369675	0					
ANR	1369720	Identifier	path		1369675	0					
ANR	1369721	Argument	& buf		1369675	1					
ANR	1369722	UnaryOperationExpression	& buf		1369675	0					
ANR	1369723	UnaryOperator	&		1369675	0					
ANR	1369724	Identifier	buf		1369675	1					
ANR	1369725	Argument	sizeof ( buf )		1369675	2					
ANR	1369726	SizeofExpression	sizeof ( buf )		1369675	0					
ANR	1369727	Sizeof	sizeof		1369675	0					
ANR	1369728	SizeofOperand	buf		1369675	1					
ANR	1369729	Argument	0		1369675	3					
ANR	1369730	PrimaryExpression	0		1369675	0					
ANR	1369731	Statement	"""Unknown statfs() implemenation"""	136:9:3119:3150	1369675	10	True				
ANR	1369732	Statement	endif	137:2:3154:3158	1369675	11	True				
ANR	1369733	IfStatement	if ( ( status < 0 ) && ( errno == ENOENT ) )		1369675	12					
ANR	1369734	Condition	( status < 0 ) && ( errno == ENOENT )	139:6:3167:3203	1369675	0	True				
ANR	1369735	AndExpression	( status < 0 ) && ( errno == ENOENT )		1369675	0		&&			
ANR	1369736	RelationalExpression	status < 0		1369675	0		<			
ANR	1369737	Identifier	status		1369675	0					
ANR	1369738	PrimaryExpression	0		1369675	1					
ANR	1369739	EqualityExpression	errno == ENOENT		1369675	1		==			
ANR	1369740	Identifier	errno		1369675	0					
ANR	1369741	Identifier	ENOENT		1369675	1					
ANR	1369742	CompoundStatement		26:2:658:682	1369675	1					
ANR	1369743	IdentifierDeclStatement	char * _dir_name ;	141:3:3268:3283	1369675	0	True				
ANR	1369744	IdentifierDecl	* _dir_name		1369675	0					
ANR	1369745	IdentifierDeclType	char *		1369675	0					
ANR	1369746	Identifier	_dir_name		1369675	1					
ANR	1369747	ExpressionStatement	_dir_name = condor_dirname ( path )	142:3:3288:3320	1369675	1	True				
ANR	1369748	AssignmentExpression	_dir_name = condor_dirname ( path )		1369675	0		=			
ANR	1369749	Identifier	_dir_name		1369675	0					
ANR	1369750	CallExpression	condor_dirname ( path )		1369675	1					
ANR	1369751	Callee	condor_dirname		1369675	0					
ANR	1369752	Identifier	condor_dirname		1369675	0					
ANR	1369753	ArgumentList	path		1369675	1					
ANR	1369754	Argument	path		1369675	0					
ANR	1369755	Identifier	path		1369675	0					
ANR	1369756	IdentifierDeclStatement	"ifdef FS_UTIL_TEST printf ( ""checking %s instead...\\n"" , _dir_name ) ;"	143:2:3324:3391	1369675	2	True				
ANR	1369757	IdentifierDecl	"printf ( ""checking %s instead...\\n"" , _dir_name )"		1369675	0					
ANR	1369758	IdentifierDeclType	ifdef FS_UTIL_TEST		1369675	0					
ANR	1369759	Identifier	printf		1369675	1					
ANR	1369760	Expression	"""checking %s instead...\\n"" , _dir_name"		1369675	2					
ANR	1369761	PrimaryExpression	"""checking %s instead...\\n"""		1369675	0					
ANR	1369762	Identifier	_dir_name		1369675	1					
ANR	1369763	Statement	endif	145:2:3395:3399	1369675	3	True				
ANR	1369764	IfStatement	if ( STATFS_ARGS == 2 )		1369675	4					
ANR	1369765	Condition	STATFS_ARGS == 2	146:6:3407:3422	1369675	0	True				
ANR	1369766	EqualityExpression	STATFS_ARGS == 2		1369675	0		==			
ANR	1369767	Identifier	STATFS_ARGS		1369675	0					
ANR	1369768	PrimaryExpression	2		1369675	1					
ANR	1369769	ExpressionStatement	"status = statfs ( _dir_name , & buf )"	147:3:3428:3462	1369675	1	True				
ANR	1369770	AssignmentExpression	"status = statfs ( _dir_name , & buf )"		1369675	0		=			
ANR	1369771	Identifier	status		1369675	0					
ANR	1369772	CallExpression	"statfs ( _dir_name , & buf )"		1369675	1					
ANR	1369773	Callee	statfs		1369675	0					
ANR	1369774	Identifier	statfs		1369675	0					
ANR	1369775	ArgumentList	_dir_name		1369675	1					
ANR	1369776	Argument	_dir_name		1369675	0					
ANR	1369777	Identifier	_dir_name		1369675	0					
ANR	1369778	Argument	& buf		1369675	1					
ANR	1369779	UnaryOperationExpression	& buf		1369675	0					
ANR	1369780	UnaryOperator	&		1369675	0					
ANR	1369781	Identifier	buf		1369675	1					
ANR	1369782	ElseStatement	else		1369675	0					
ANR	1369783	Statement	error	151:3:3555:3559	1369675	0	True				
ANR	1369784	Statement	elif	148:2:3466:3469	1369675	5	True				
ANR	1369785	Statement	(	148:7:3471:3471	1369675	6	True				
ANR	1369786	Statement	STATFS_ARGS	148:8:3472:3482	1369675	7	True				
ANR	1369787	Statement	==	148:20:3484:3485	1369675	8	True				
ANR	1369788	Statement	4	148:23:3487:3487	1369675	9	True				
ANR	1369789	Statement	)	148:24:3488:3488	1369675	10	True				
ANR	1369790	ExpressionStatement	"status = statfs ( _dir_name , & buf , sizeof ( buf ) , 0 )"	149:3:3493:3543	1369675	11	True				
ANR	1369791	AssignmentExpression	"status = statfs ( _dir_name , & buf , sizeof ( buf ) , 0 )"		1369675	0		=			
ANR	1369792	Identifier	status		1369675	0					
ANR	1369793	CallExpression	"statfs ( _dir_name , & buf , sizeof ( buf ) , 0 )"		1369675	1					
ANR	1369794	Callee	statfs		1369675	0					
ANR	1369795	Identifier	statfs		1369675	0					
ANR	1369796	ArgumentList	_dir_name		1369675	1					
ANR	1369797	Argument	_dir_name		1369675	0					
ANR	1369798	Identifier	_dir_name		1369675	0					
ANR	1369799	Argument	& buf		1369675	1					
ANR	1369800	UnaryOperationExpression	& buf		1369675	0					
ANR	1369801	UnaryOperator	&		1369675	0					
ANR	1369802	Identifier	buf		1369675	1					
ANR	1369803	Argument	sizeof ( buf )		1369675	2					
ANR	1369804	SizeofExpression	sizeof ( buf )		1369675	0					
ANR	1369805	Sizeof	sizeof		1369675	0					
ANR	1369806	SizeofOperand	buf		1369675	1					
ANR	1369807	Argument	0		1369675	3					
ANR	1369808	PrimaryExpression	0		1369675	0					
ANR	1369809	Statement	"""Unknown statfs() implemenation"""	151:9:3561:3592	1369675	12	True				
ANR	1369810	IdentifierDeclStatement	endif free ( _dir_name ) ;	152:2:3596:3620	1369675	13	True				
ANR	1369811	IdentifierDecl	free ( _dir_name )		1369675	0					
ANR	1369812	IdentifierDeclType	endif		1369675	0					
ANR	1369813	Identifier	free		1369675	1					
ANR	1369814	Identifier	_dir_name		1369675	2					
ANR	1369815	IfStatement	if ( status < 0 )		1369675	13					
ANR	1369816	Condition	status < 0	156:6:3632:3641	1369675	0	True				
ANR	1369817	RelationalExpression	status < 0		1369675	0		<			
ANR	1369818	Identifier	status		1369675	0					
ANR	1369819	PrimaryExpression	0		1369675	1					
ANR	1369820	CompoundStatement		30:19:707:707	1369675	1					
ANR	1369821	Statement	if	157:4:3651:3652	1369675	0	True				
ANR	1369822	Statement	(	157:7:3654:3654	1369675	1	True				
ANR	1369823	Statement	!	157:8:3655:3655	1369675	2	True				
ANR	1369824	Statement	defined	157:9:3656:3662	1369675	3	True				
ANR	1369825	Statement	FS_UTIL_TEST	157:17:3664:3675	1369675	4	True				
ANR	1369826	Statement	)	157:30:3677:3677	1369675	5	True				
ANR	1369827	ExpressionStatement	"dprintf ( D_ALWAYS , ""statfs(%s) failed: %d/%s\\n"" , path , errno , strerror ( errno ) )"	158:2:3681:3767	1369675	6	True				
ANR	1369828	CallExpression	"dprintf ( D_ALWAYS , ""statfs(%s) failed: %d/%s\\n"" , path , errno , strerror ( errno ) )"		1369675	0					
ANR	1369829	Callee	dprintf		1369675	0					
ANR	1369830	Identifier	dprintf		1369675	0					
ANR	1369831	ArgumentList	D_ALWAYS		1369675	1					
ANR	1369832	Argument	D_ALWAYS		1369675	0					
ANR	1369833	Identifier	D_ALWAYS		1369675	0					
ANR	1369834	Argument	"""statfs(%s) failed: %d/%s\\n"""		1369675	1					
ANR	1369835	PrimaryExpression	"""statfs(%s) failed: %d/%s\\n"""		1369675	0					
ANR	1369836	Argument	path		1369675	2					
ANR	1369837	Identifier	path		1369675	0					
ANR	1369838	Argument	errno		1369675	3					
ANR	1369839	Identifier	errno		1369675	0					
ANR	1369840	Argument	strerror ( errno )		1369675	4					
ANR	1369841	CallExpression	strerror ( errno )		1369675	0					
ANR	1369842	Callee	strerror		1369675	0					
ANR	1369843	Identifier	strerror		1369675	0					
ANR	1369844	ArgumentList	errno		1369675	1					
ANR	1369845	Argument	errno		1369675	0					
ANR	1369846	Identifier	errno		1369675	0					
ANR	1369847	IfStatement	if ( EOVERFLOW == errno )		1369675	7					
ANR	1369848	Condition	EOVERFLOW == errno	160:6:3775:3792	1369675	0	True				
ANR	1369849	EqualityExpression	EOVERFLOW == errno		1369675	0		==			
ANR	1369850	Identifier	EOVERFLOW		1369675	0					
ANR	1369851	Identifier	errno		1369675	1					
ANR	1369852	CompoundStatement		34:26:857:857	1369675	1					
ANR	1369853	Statement	dprintf	161:3:3800:3806	1369675	0	True				
ANR	1369854	Statement	(	161:10:3807:3807	1369675	1	True				
ANR	1369855	Statement	D_ALWAYS	161:11:3808:3815	1369675	2	True				
ANR	1369856	Statement	","	161:19:3816:3816	1369675	3	True				
ANR	1369857	Statement	"""statfs overflow, if %s is a large volume make """	162:5:3823:3870	1369675	4	True				
ANR	1369858	Statement	"""sure you have a 64 bit version of Condor\\n"""	163:5:3877:3920	1369675	5	True				
ANR	1369859	Statement	","	163:49:3921:3921	1369675	6	True				
ANR	1369860	Statement	path	163:51:3923:3926	1369675	7	True				
ANR	1369861	Statement	)	163:55:3927:3927	1369675	8	True				
ANR	1369862	ExpressionStatement		163:56:3928:3928	1369675	9	True				
ANR	1369863	Statement	endif	165:4:3938:3942	1369675	8	True				
ANR	1369864	ReturnStatement	return - 1 ;	166:2:3946:3955	1369675	9	True				
ANR	1369865	UnaryOperationExpression	- 1		1369675	0					
ANR	1369866	UnaryOperator	-		1369675	0					
ANR	1369867	PrimaryExpression	1		1369675	1					
ANR	1369868	ElseStatement	else		1369675	0					
ANR	1369869	Statement	error	199:2:4751:4755	1369675	0	True				
ANR	1369870	Statement	if	170:2:4006:4007	1369675	14	True				
ANR	1369871	Statement	defined	170:5:4009:4015	1369675	15	True				
ANR	1369872	Statement	HAVE_STRUCT_STATFS_F_FSTYPENAME	170:13:4017:4047	1369675	16	True				
ANR	1369873	IfStatement	"if ( ! strncmp ( buf . f_fstypename , ""nfs"" , 3 ) )"		1369675	17					
ANR	1369874	Condition	"! strncmp ( buf . f_fstypename , ""nfs"" , 3 )"	171:6:4055:4092	1369675	0	True				
ANR	1369875	UnaryOperationExpression	"! strncmp ( buf . f_fstypename , ""nfs"" , 3 )"		1369675	0					
ANR	1369876	UnaryOperator	!		1369675	0					
ANR	1369877	CallExpression	"strncmp ( buf . f_fstypename , ""nfs"" , 3 )"		1369675	1					
ANR	1369878	Callee	strncmp		1369675	0					
ANR	1369879	Identifier	strncmp		1369675	0					
ANR	1369880	ArgumentList	buf . f_fstypename		1369675	1					
ANR	1369881	Argument	buf . f_fstypename		1369675	0					
ANR	1369882	MemberAccess	buf . f_fstypename		1369675	0					
ANR	1369883	Identifier	buf		1369675	0					
ANR	1369884	Identifier	f_fstypename		1369675	1					
ANR	1369885	Argument	"""nfs"""		1369675	1					
ANR	1369886	PrimaryExpression	"""nfs"""		1369675	0					
ANR	1369887	Argument	3		1369675	2					
ANR	1369888	PrimaryExpression	3		1369675	0					
ANR	1369889	CompoundStatement		45:47:1158:1158	1369675	1					
ANR	1369890	ExpressionStatement	* is_nfs = TRUE	172:2:4100:4114	1369675	0	True				
ANR	1369891	AssignmentExpression	* is_nfs = TRUE		1369675	0		=			
ANR	1369892	UnaryOperationExpression	* is_nfs		1369675	0					
ANR	1369893	UnaryOperator	*		1369675	0					
ANR	1369894	Identifier	is_nfs		1369675	1					
ANR	1369895	Identifier	TRUE		1369675	1					
ANR	1369896	ElseStatement	else		1369675	0					
ANR	1369897	CompoundStatement		47:8:1186:1186	1369675	0					
ANR	1369898	ExpressionStatement	* is_nfs = FALSE	174:2:4128:4143	1369675	0	True				
ANR	1369899	AssignmentExpression	* is_nfs = FALSE		1369675	0		=			
ANR	1369900	UnaryOperationExpression	* is_nfs		1369675	0					
ANR	1369901	UnaryOperator	*		1369675	0					
ANR	1369902	Identifier	is_nfs		1369675	1					
ANR	1369903	Identifier	FALSE		1369675	1					
ANR	1369904	IdentifierDeclStatement	"ifdef FS_UTIL_TEST printf ( ""detect_nfs_statfs: f_fstypename = %s -> %s\\n"" , buf . f_fstypename , * is_nfs ? ""true"" : ""false"" ) ;"	176:3:4151:4276	1369675	18	True				
ANR	1369905	IdentifierDecl	"printf ( ""detect_nfs_statfs: f_fstypename = %s -> %s\\n"" , buf . f_fstypename , * is_nfs ? ""true"" : ""false"" )"		1369675	0					
ANR	1369906	IdentifierDeclType	ifdef FS_UTIL_TEST		1369675	0					
ANR	1369907	Identifier	printf		1369675	1					
ANR	1369908	Expression	"""detect_nfs_statfs: f_fstypename = %s -> %s\\n"" , buf . f_fstypename , * is_nfs ? ""true"" : ""false"""		1369675	2					
ANR	1369909	PrimaryExpression	"""detect_nfs_statfs: f_fstypename = %s -> %s\\n"""		1369675	0					
ANR	1369910	Expression	"buf . f_fstypename , * is_nfs ? ""true"" : ""false"""		1369675	1					
ANR	1369911	MemberAccess	buf . f_fstypename		1369675	0					
ANR	1369912	Identifier	buf		1369675	0					
ANR	1369913	Identifier	f_fstypename		1369675	1					
ANR	1369914	ConditionalExpression	"* is_nfs ? ""true"" : ""false"""		1369675	1					
ANR	1369915	Condition	* is_nfs		1369675	0					
ANR	1369916	UnaryOperationExpression	* is_nfs		1369675	0					
ANR	1369917	UnaryOperator	*		1369675	0					
ANR	1369918	Identifier	is_nfs		1369675	1					
ANR	1369919	PrimaryExpression	"""true"""		1369675	1					
ANR	1369920	PrimaryExpression	"""false"""		1369675	2					
ANR	1369921	Statement	endif	179:3:4281:4285	1369675	19	True				
ANR	1369922	Statement	elif	182:2:4323:4326	1369675	20	True				
ANR	1369923	Statement	defined	182:7:4328:4334	1369675	21	True				
ANR	1369924	Statement	HAVE_STRUCT_STATFS_F_TYPE	182:15:4336:4360	1369675	22	True				
ANR	1369925	IfStatement	if ( buf . f_type == NFS_SUPER_MAGIC )		1369675	23					
ANR	1369926	Condition	buf . f_type == NFS_SUPER_MAGIC	183:6:4368:4396	1369675	0	True				
ANR	1369927	EqualityExpression	buf . f_type == NFS_SUPER_MAGIC		1369675	0		==			
ANR	1369928	MemberAccess	buf . f_type		1369675	0					
ANR	1369929	Identifier	buf		1369675	0					
ANR	1369930	Identifier	f_type		1369675	1					
ANR	1369931	Identifier	NFS_SUPER_MAGIC		1369675	1					
ANR	1369932	CompoundStatement		57:38:1462:1462	1369675	1					
ANR	1369933	ExpressionStatement	* is_nfs = TRUE	184:2:4404:4418	1369675	0	True				
ANR	1369934	AssignmentExpression	* is_nfs = TRUE		1369675	0		=			
ANR	1369935	UnaryOperationExpression	* is_nfs		1369675	0					
ANR	1369936	UnaryOperator	*		1369675	0					
ANR	1369937	Identifier	is_nfs		1369675	1					
ANR	1369938	Identifier	TRUE		1369675	1					
ANR	1369939	ElseStatement	else		1369675	0					
ANR	1369940	CompoundStatement		59:8:1490:1490	1369675	0					
ANR	1369941	ExpressionStatement	* is_nfs = FALSE	186:2:4432:4447	1369675	0	True				
ANR	1369942	AssignmentExpression	* is_nfs = FALSE		1369675	0		=			
ANR	1369943	UnaryOperationExpression	* is_nfs		1369675	0					
ANR	1369944	UnaryOperator	*		1369675	0					
ANR	1369945	Identifier	is_nfs		1369675	1					
ANR	1369946	Identifier	FALSE		1369675	1					
ANR	1369947	IdentifierDeclStatement	"ifdef FS_UTIL_TEST printf ( ""detect_nfs_statfs: f_type = %x -> %s\\n"" , buf . f_type , * is_nfs ? ""true"" : ""false"" ) ;"	188:3:4455:4568	1369675	24	True				
ANR	1369948	IdentifierDecl	"printf ( ""detect_nfs_statfs: f_type = %x -> %s\\n"" , buf . f_type , * is_nfs ? ""true"" : ""false"" )"		1369675	0					
ANR	1369949	IdentifierDeclType	ifdef FS_UTIL_TEST		1369675	0					
ANR	1369950	Identifier	printf		1369675	1					
ANR	1369951	Expression	"""detect_nfs_statfs: f_type = %x -> %s\\n"" , buf . f_type , * is_nfs ? ""true"" : ""false"""		1369675	2					
ANR	1369952	PrimaryExpression	"""detect_nfs_statfs: f_type = %x -> %s\\n"""		1369675	0					
ANR	1369953	Expression	"buf . f_type , * is_nfs ? ""true"" : ""false"""		1369675	1					
ANR	1369954	MemberAccess	buf . f_type		1369675	0					
ANR	1369955	Identifier	buf		1369675	0					
ANR	1369956	Identifier	f_type		1369675	1					
ANR	1369957	ConditionalExpression	"* is_nfs ? ""true"" : ""false"""		1369675	1					
ANR	1369958	Condition	* is_nfs		1369675	0					
ANR	1369959	UnaryOperationExpression	* is_nfs		1369675	0					
ANR	1369960	UnaryOperator	*		1369675	0					
ANR	1369961	Identifier	is_nfs		1369675	1					
ANR	1369962	PrimaryExpression	"""true"""		1369675	1					
ANR	1369963	PrimaryExpression	"""false"""		1369675	2					
ANR	1369964	Statement	endif	191:3:4573:4577	1369675	25	True				
ANR	1369965	Statement	elif	194:2:4623:4626	1369675	26	True				
ANR	1369966	Statement	defined	194:7:4628:4634	1369675	27	True				
ANR	1369967	Statement	HAVE_STRUCT_STATFS_F_FSTYP	194:15:4636:4661	1369675	28	True				
ANR	1369968	Statement	error	195:4:4667:4671	1369675	29	True				
ANR	1369969	Statement	"""Don't know how to evaluate f_fstyp yet"""	195:10:4673:4712	1369675	30	True				
ANR	1369970	Statement	"""Neither F_TYPE or F_FSTYP defined!"""	199:8:4757:4792	1369675	31	True				
ANR	1369971	Statement	endif	201:2:4797:4801	1369675	32	True				
ANR	1369972	ReturnStatement	return 0 ;	203:1:4805:4813	1369675	33	True				
ANR	1369973	PrimaryExpression	0		1369675	0					
ANR	1369974	ReturnType	static int		1369675	1					
ANR	1369975	Identifier	detect_nfs_statfs		1369675	2					
ANR	1369976	ParameterList	"const char * path , BOOLEAN * is_nfs"		1369675	3					
ANR	1369977	Parameter	const char * path	126:19:2901:2916	1369675	0	True				
ANR	1369978	ParameterType	const char *		1369675	0					
ANR	1369979	Identifier	path		1369675	1					
ANR	1369980	Parameter	BOOLEAN * is_nfs	126:37:2919:2933	1369675	1	True				
ANR	1369981	ParameterType	BOOLEAN *		1369675	0					
ANR	1369982	Identifier	is_nfs		1369675	1					
ANR	1369983	CFGEntryNode	ENTRY		1369675		True				
ANR	1369984	CFGExitNode	EXIT		1369675		True				
ANR	1369985	Symbol	errno		1369675						
ANR	1369986	Symbol	_dir_name		1369675						
ANR	1369987	Symbol	buf . f_type		1369675						
ANR	1369988	Symbol	is_nfs		1369675						
ANR	1369989	Symbol	condor_dirname		1369675						
ANR	1369990	Symbol	D_ALWAYS		1369675						
ANR	1369991	Symbol	TRUE		1369675						
ANR	1369992	Symbol	STATFS_ARGS		1369675						
ANR	1369993	Symbol	ENOENT		1369675						
ANR	1369994	Symbol	statfs		1369675						
ANR	1369995	Symbol	EOVERFLOW		1369675						
ANR	1369996	Symbol	buf . f_fstypename		1369675						
ANR	1369997	Symbol	printf		1369675						
ANR	1369998	Symbol	strerror		1369675						
ANR	1369999	Symbol	path		1369675						
ANR	1370000	Symbol	strncmp		1369675						
ANR	1370001	Symbol	buf		1369675						
ANR	1370002	Symbol	FALSE		1369675						
ANR	1370003	Symbol	* is_nfs		1369675						
ANR	1370004	Symbol	free		1369675						
ANR	1370005	Symbol	& buf		1369675						
ANR	1370006	Symbol	status		1369675						
ANR	1370007	Symbol	NFS_SUPER_MAGIC		1369675						
ANR	1370008	Function	fs_detect_nfs	207:0:4825:5137							
ANR	1370009	FunctionDef	"fs_detect_nfs (const char * path , BOOLEAN * is_nfs)"		1370008	0					
ANR	1370010	CompoundStatement		210:0:4886:5137	1370008	0					
ANR	1370011	ReturnStatement	"return detect_nfs_statfs ( path , is_nfs ) ;"	212:1:4912:4952	1370008	0	True				
ANR	1370012	CallExpression	"detect_nfs_statfs ( path , is_nfs )"		1370008	0					
ANR	1370013	Callee	detect_nfs_statfs		1370008	0					
ANR	1370014	Identifier	detect_nfs_statfs		1370008	0					
ANR	1370015	ArgumentList	path		1370008	1					
ANR	1370016	Argument	path		1370008	0					
ANR	1370017	Identifier	path		1370008	0					
ANR	1370018	Argument	is_nfs		1370008	1					
ANR	1370019	Identifier	is_nfs		1370008	0					
ANR	1370020	ReturnType	int		1370008	1					
ANR	1370021	Identifier	fs_detect_nfs		1370008	2					
ANR	1370022	ParameterList	"const char * path , BOOLEAN * is_nfs"		1370008	3					
ANR	1370023	Parameter	const char * path	208:15:4844:4859	1370008	0	True				
ANR	1370024	ParameterType	const char *		1370008	0					
ANR	1370025	Identifier	path		1370008	1					
ANR	1370026	Parameter	BOOLEAN * is_nfs	209:6:4868:4882	1370008	1	True				
ANR	1370027	ParameterType	BOOLEAN *		1370008	0					
ANR	1370028	Identifier	is_nfs		1370008	1					
ANR	1370029	CFGEntryNode	ENTRY		1370008		True				
ANR	1370030	CFGExitNode	EXIT		1370008		True				
ANR	1370031	Symbol	path		1370008						
ANR	1370032	Symbol	detect_nfs_statfs		1370008						
ANR	1370033	Symbol	is_nfs		1370008						
ANR	1370034	Function	main	226:0:5160:5528							
ANR	1370035	FunctionDef	"main (int argc , const char * argv [ ])"		1370034	0					
ANR	1370036	CompoundStatement		228:0:5201:5528	1370034	0					
ANR	1370037	IdentifierDeclStatement	const char * path = argv [ 1 ] ;	229:1:5204:5230	1370034	0	True				
ANR	1370038	IdentifierDecl	* path = argv [ 1 ]		1370034	0					
ANR	1370039	IdentifierDeclType	const char *		1370034	0					
ANR	1370040	Identifier	path		1370034	1					
ANR	1370041	AssignmentExpression	* path = argv [ 1 ]		1370034	2		=			
ANR	1370042	Identifier	path		1370034	0					
ANR	1370043	ArrayIndexing	argv [ 1 ]		1370034	1					
ANR	1370044	Identifier	argv		1370034	0					
ANR	1370045	PrimaryExpression	1		1370034	1					
ANR	1370046	IdentifierDeclStatement	BOOLEAN is_nfs ;	230:1:5233:5247	1370034	1	True				
ANR	1370047	IdentifierDecl	is_nfs		1370034	0					
ANR	1370048	IdentifierDeclType	BOOLEAN		1370034	0					
ANR	1370049	Identifier	is_nfs		1370034	1					
ANR	1370050	IfStatement	if ( argc != 2 )		1370034	2					
ANR	1370051	Condition	argc != 2	232:6:5256:5264	1370034	0	True				
ANR	1370052	EqualityExpression	argc != 2		1370034	0		!=			
ANR	1370053	Identifier	argc		1370034	0					
ANR	1370054	PrimaryExpression	2		1370034	1					
ANR	1370055	CompoundStatement		5:18:66:66	1370034	1					
ANR	1370056	ExpressionStatement	"fprintf ( stderr , ""usage: fs_util_test path\\n"" )"	233:2:5272:5319	1370034	0	True				
ANR	1370057	CallExpression	"fprintf ( stderr , ""usage: fs_util_test path\\n"" )"		1370034	0					
ANR	1370058	Callee	fprintf		1370034	0					
ANR	1370059	Identifier	fprintf		1370034	0					
ANR	1370060	ArgumentList	stderr		1370034	1					
ANR	1370061	Argument	stderr		1370034	0					
ANR	1370062	Identifier	stderr		1370034	0					
ANR	1370063	Argument	"""usage: fs_util_test path\\n"""		1370034	1					
ANR	1370064	PrimaryExpression	"""usage: fs_util_test path\\n"""		1370034	0					
ANR	1370065	ExpressionStatement	exit ( 1 )	234:2:5323:5332	1370034	1	True				
ANR	1370066	CallExpression	exit ( 1 )		1370034	0					
ANR	1370067	Callee	exit		1370034	0					
ANR	1370068	Identifier	exit		1370034	0					
ANR	1370069	ArgumentList	1		1370034	1					
ANR	1370070	Argument	1		1370034	0					
ANR	1370071	PrimaryExpression	1		1370034	0					
ANR	1370072	IfStatement	"if ( fs_detect_nfs ( path , & is_nfs ) < 0 )"		1370034	3					
ANR	1370073	Condition	"fs_detect_nfs ( path , & is_nfs ) < 0"	236:6:5343:5376	1370034	0	True				
ANR	1370074	RelationalExpression	"fs_detect_nfs ( path , & is_nfs ) < 0"		1370034	0		<			
ANR	1370075	CallExpression	"fs_detect_nfs ( path , & is_nfs )"		1370034	0					
ANR	1370076	Callee	fs_detect_nfs		1370034	0					
ANR	1370077	Identifier	fs_detect_nfs		1370034	0					
ANR	1370078	ArgumentList	path		1370034	1					
ANR	1370079	Argument	path		1370034	0					
ANR	1370080	Identifier	path		1370034	0					
ANR	1370081	Argument	& is_nfs		1370034	1					
ANR	1370082	UnaryOperationExpression	& is_nfs		1370034	0					
ANR	1370083	UnaryOperator	&		1370034	0					
ANR	1370084	Identifier	is_nfs		1370034	1					
ANR	1370085	PrimaryExpression	0		1370034	1					
ANR	1370086	CompoundStatement		9:43:178:178	1370034	1					
ANR	1370087	ExpressionStatement	"fprintf ( stderr , ""fs_detect_nfs(%s) failed\\n"" , path )"	237:2:5384:5437	1370034	0	True				
ANR	1370088	CallExpression	"fprintf ( stderr , ""fs_detect_nfs(%s) failed\\n"" , path )"		1370034	0					
ANR	1370089	Callee	fprintf		1370034	0					
ANR	1370090	Identifier	fprintf		1370034	0					
ANR	1370091	ArgumentList	stderr		1370034	1					
ANR	1370092	Argument	stderr		1370034	0					
ANR	1370093	Identifier	stderr		1370034	0					
ANR	1370094	Argument	"""fs_detect_nfs(%s) failed\\n"""		1370034	1					
ANR	1370095	PrimaryExpression	"""fs_detect_nfs(%s) failed\\n"""		1370034	0					
ANR	1370096	Argument	path		1370034	2					
ANR	1370097	Identifier	path		1370034	0					
ANR	1370098	ExpressionStatement	exit ( 1 )	238:2:5441:5450	1370034	1	True				
ANR	1370099	CallExpression	exit ( 1 )		1370034	0					
ANR	1370100	Callee	exit		1370034	0					
ANR	1370101	Identifier	exit		1370034	0					
ANR	1370102	ArgumentList	1		1370034	1					
ANR	1370103	Argument	1		1370034	0					
ANR	1370104	PrimaryExpression	1		1370034	0					
ANR	1370105	ExpressionStatement	"printf ( ""%s %s on NFS\\n"" , path , is_nfs ? ""is"" : ""is not"" )"	240:1:5456:5514	1370034	4	True				
ANR	1370106	CallExpression	"printf ( ""%s %s on NFS\\n"" , path , is_nfs ? ""is"" : ""is not"" )"		1370034	0					
ANR	1370107	Callee	printf		1370034	0					
ANR	1370108	Identifier	printf		1370034	0					
ANR	1370109	ArgumentList	"""%s %s on NFS\\n"""		1370034	1					
ANR	1370110	Argument	"""%s %s on NFS\\n"""		1370034	0					
ANR	1370111	PrimaryExpression	"""%s %s on NFS\\n"""		1370034	0					
ANR	1370112	Argument	path		1370034	1					
ANR	1370113	Identifier	path		1370034	0					
ANR	1370114	Argument	"is_nfs ? ""is"" : ""is not"""		1370034	2					
ANR	1370115	ConditionalExpression	"is_nfs ? ""is"" : ""is not"""		1370034	0					
ANR	1370116	Condition	is_nfs		1370034	0					
ANR	1370117	Identifier	is_nfs		1370034	0					
ANR	1370118	PrimaryExpression	"""is"""		1370034	1					
ANR	1370119	PrimaryExpression	"""is not"""		1370034	2					
ANR	1370120	ReturnStatement	return 0 ;	242:1:5518:5526	1370034	5	True				
ANR	1370121	PrimaryExpression	0		1370034	0					
ANR	1370122	ReturnType	int		1370034	1					
ANR	1370123	Identifier	main		1370034	2					
ANR	1370124	ParameterList	"int argc , const char * argv [ ]"		1370034	3					
ANR	1370125	Parameter	int argc	227:6:5170:5177	1370034	0	True				
ANR	1370126	ParameterType	int		1370034	0					
ANR	1370127	Identifier	argc		1370034	1					
ANR	1370128	Parameter	const char * argv [ ]	227:16:5180:5197	1370034	1	True				
ANR	1370129	ParameterType	const char * [ ]		1370034	0					
ANR	1370130	Identifier	argv		1370034	1					
ANR	1370131	CFGEntryNode	ENTRY		1370034		True				
ANR	1370132	CFGExitNode	EXIT		1370034		True				
ANR	1370133	Symbol	argc		1370034						
ANR	1370134	Symbol	path		1370034						
ANR	1370135	Symbol	& is_nfs		1370034						
ANR	1370136	Symbol	is_nfs		1370034						
ANR	1370137	Symbol	* argv		1370034						
ANR	1370138	Symbol	stderr		1370034						
ANR	1370139	Symbol	fs_detect_nfs		1370034						
ANR	1370140	Symbol	argv		1370034						
