command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	5024389	File	data/converged/CVE-2011-4930_htcondor/src_condor_vm-gahp_vmgahp_common.cpp								
ANR	5024390	DeclStmt									
ANR	5024391	Decl							extern DLL_IMPORT_MAGIC char	extern DLL_IMPORT_MAGIC char * *	environ
ANR	5024392	DeclStmt									
ANR	5024393	Decl							MyString	MyString	caller_name
ANR	5024394	DeclStmt									
ANR	5024395	Decl							MyString	MyString	job_user_name
ANR	5024396	DeclStmt									
ANR	5024397	Decl							uid_t	uid_t	caller_uid
ANR	5024398	DeclStmt									
ANR	5024399	Decl							gid_t	gid_t	caller_gid
ANR	5024400	DeclStmt									
ANR	5024401	Decl							uid_t	uid_t	job_user_uid
ANR	5024402	DeclStmt									
ANR	5024403	Decl							uid_t	uid_t	job_user_gid
ANR	5024404	DeclStmt									
ANR	5024405	Decl							const char	const char * [ ]	support_vms_list
ANR	5024406	Function	parse_vmgahp_command	63:0:1879:2939							
ANR	5024407	FunctionDef	"parse_vmgahp_command (const char * raw , Gahp_Args & args)"		5024406	0					
ANR	5024408	CompoundStatement		64:0:1940:2939	5024406	0					
ANR	5024409	IfStatement	if ( ! raw )		5024406	0					
ANR	5024410	Condition	! raw	65:5:1947:1950	5024406	0	True				
ANR	5024411	UnaryOperationExpression	! raw		5024406	0					
ANR	5024412	UnaryOperator	!		5024406	0					
ANR	5024413	Identifier	raw		5024406	1					
ANR	5024414	CompoundStatement		2:11:12:12	5024406	1					
ANR	5024415	ExpressionStatement	"vmprintf ( D_ALWAYS , ""ERROR parse_vmgahp_command: empty command\\n"" )"	66:2:1957:2021	5024406	0	True				
ANR	5024416	CallExpression	"vmprintf ( D_ALWAYS , ""ERROR parse_vmgahp_command: empty command\\n"" )"		5024406	0					
ANR	5024417	Callee	vmprintf		5024406	0					
ANR	5024418	Identifier	vmprintf		5024406	0					
ANR	5024419	ArgumentList	D_ALWAYS		5024406	1					
ANR	5024420	Argument	D_ALWAYS		5024406	0					
ANR	5024421	Identifier	D_ALWAYS		5024406	0					
ANR	5024422	Argument	"""ERROR parse_vmgahp_command: empty command\\n"""		5024406	1					
ANR	5024423	PrimaryExpression	"""ERROR parse_vmgahp_command: empty command\\n"""		5024406	0					
ANR	5024424	ReturnStatement	return false ;	67:2:2025:2037	5024406	1	True				
ANR	5024425	Identifier	false		5024406	0					
ANR	5024426	ExpressionStatement	args . reset ( )	70:1:2044:2056	5024406	1	True				
ANR	5024427	CallExpression	args . reset ( )		5024406	0					
ANR	5024428	Callee	args . reset		5024406	0					
ANR	5024429	MemberAccess	args . reset		5024406	0					
ANR	5024430	Identifier	args		5024406	0					
ANR	5024431	Identifier	reset		5024406	1					
ANR	5024432	ArgumentList			5024406	1					
ANR	5024433	IdentifierDeclStatement	int beginning = 0 ;	72:1:2060:2077	5024406	2	True				
ANR	5024434	IdentifierDecl	beginning = 0		5024406	0					
ANR	5024435	IdentifierDeclType	int		5024406	0					
ANR	5024436	Identifier	beginning		5024406	1					
ANR	5024437	AssignmentExpression	beginning = 0		5024406	2		=			
ANR	5024438	Identifier	beginning		5024406	0					
ANR	5024439	PrimaryExpression	0		5024406	1					
ANR	5024440	IdentifierDeclStatement	int len = strlen ( raw ) ;	74:1:2081:2100	5024406	3	True				
ANR	5024441	IdentifierDecl	len = strlen ( raw )		5024406	0					
ANR	5024442	IdentifierDeclType	int		5024406	0					
ANR	5024443	Identifier	len		5024406	1					
ANR	5024444	AssignmentExpression	len = strlen ( raw )		5024406	2		=			
ANR	5024445	Identifier	len		5024406	0					
ANR	5024446	CallExpression	strlen ( raw )		5024406	1					
ANR	5024447	Callee	strlen		5024406	0					
ANR	5024448	Identifier	strlen		5024406	0					
ANR	5024449	ArgumentList	raw		5024406	1					
ANR	5024450	Argument	raw		5024406	0					
ANR	5024451	Identifier	raw		5024406	0					
ANR	5024452	IdentifierDeclStatement	char * buff = ( char * ) malloc ( len + 1 ) ;	76:1:2104:2138	5024406	4	True				
ANR	5024453	IdentifierDecl	* buff = ( char * ) malloc ( len + 1 )		5024406	0					
ANR	5024454	IdentifierDeclType	char *		5024406	0					
ANR	5024455	Identifier	buff		5024406	1					
ANR	5024456	AssignmentExpression	* buff = ( char * ) malloc ( len + 1 )		5024406	2		=			
ANR	5024457	Identifier	buff		5024406	0					
ANR	5024458	CastExpression	( char * ) malloc ( len + 1 )		5024406	1					
ANR	5024459	CastTarget	char *		5024406	0					
ANR	5024460	CallExpression	malloc ( len + 1 )		5024406	1					
ANR	5024461	Callee	malloc		5024406	0					
ANR	5024462	Identifier	malloc		5024406	0					
ANR	5024463	ArgumentList	len + 1		5024406	1					
ANR	5024464	Argument	len + 1		5024406	0					
ANR	5024465	AdditiveExpression	len + 1		5024406	0		+			
ANR	5024466	Identifier	len		5024406	0					
ANR	5024467	PrimaryExpression	1		5024406	1					
ANR	5024468	IdentifierDeclStatement	int buff_len = 0 ;	77:1:2141:2157	5024406	5	True				
ANR	5024469	IdentifierDecl	buff_len = 0		5024406	0					
ANR	5024470	IdentifierDeclType	int		5024406	0					
ANR	5024471	Identifier	buff_len		5024406	1					
ANR	5024472	AssignmentExpression	buff_len = 0		5024406	2		=			
ANR	5024473	Identifier	buff_len		5024406	0					
ANR	5024474	PrimaryExpression	0		5024406	1					
ANR	5024475	ForStatement	for ( int i = 0 ; i < len ; i ++ )		5024406	6					
ANR	5024476	ForInit	int i = 0 ;	79:6:2166:2175	5024406	0	True				
ANR	5024477	IdentifierDeclStatement	int i = 0 ;		5024406	0					
ANR	5024478	IdentifierDecl	i = 0		5024406	0					
ANR	5024479	IdentifierDeclType	int		5024406	0					
ANR	5024480	Identifier	i		5024406	1					
ANR	5024481	AssignmentExpression	i = 0		5024406	2		=			
ANR	5024482	Identifier	i		5024406	0					
ANR	5024483	PrimaryExpression	0		5024406	1					
ANR	5024484	Condition	i < len	79:17:2177:2181	5024406	1	True				
ANR	5024485	RelationalExpression	i < len		5024406	0		<			
ANR	5024486	Identifier	i		5024406	0					
ANR	5024487	Identifier	len		5024406	1					
ANR	5024488	PostIncDecOperationExpression	i ++	79:24:2184:2186	5024406	2	True				
ANR	5024489	Identifier	i		5024406	0					
ANR	5024490	IncDec	++		5024406	1					
ANR	5024491	CompoundStatement		16:29:248:248	5024406	3					
ANR	5024492	IfStatement	if ( raw [ i ] == '\\\\' )		5024406	0					
ANR	5024493	Condition	raw [ i ] == '\\\\'	81:7:2199:2212	5024406	0	True				
ANR	5024494	EqualityExpression	raw [ i ] == '\\\\'		5024406	0		==			
ANR	5024495	ArrayIndexing	raw [ i ]		5024406	0					
ANR	5024496	Identifier	raw		5024406	0					
ANR	5024497	Identifier	i		5024406	1					
ANR	5024498	PrimaryExpression	'\\\\'		5024406	1					
ANR	5024499	CompoundStatement		18:24:275:275	5024406	1					
ANR	5024500	ExpressionStatement	i ++	82:3:2221:2224	5024406	0	True				
ANR	5024501	PostIncDecOperationExpression	i ++		5024406	0					
ANR	5024502	Identifier	i		5024406	0					
ANR	5024503	IncDec	++		5024406	1					
ANR	5024504	IfStatement	if ( i < ( len - 1 ) )		5024406	1					
ANR	5024505	Condition	i < ( len - 1 )	83:7:2253:2261	5024406	0	True				
ANR	5024506	RelationalExpression	i < ( len - 1 )		5024406	0		<			
ANR	5024507	Identifier	i		5024406	0					
ANR	5024508	AdditiveExpression	len - 1		5024406	1		-			
ANR	5024509	Identifier	len		5024406	0					
ANR	5024510	PrimaryExpression	1		5024406	1					
ANR	5024511	CompoundStatement		20:18:323:323	5024406	1					
ANR	5024512	ExpressionStatement	buff [ buff_len ++ ] = raw [ i ]	84:4:2270:2295	5024406	0	True				
ANR	5024513	AssignmentExpression	buff [ buff_len ++ ] = raw [ i ]		5024406	0		=			
ANR	5024514	ArrayIndexing	buff [ buff_len ++ ]		5024406	0					
ANR	5024515	Identifier	buff		5024406	0					
ANR	5024516	PostIncDecOperationExpression	buff_len ++		5024406	1					
ANR	5024517	Identifier	buff_len		5024406	0					
ANR	5024518	IncDec	++		5024406	1					
ANR	5024519	ArrayIndexing	raw [ i ]		5024406	1					
ANR	5024520	Identifier	raw		5024406	0					
ANR	5024521	Identifier	i		5024406	1					
ANR	5024522	ContinueStatement	continue ;	86:3:2305:2313	5024406	2	True				
ANR	5024523	IfStatement	if ( raw [ i ] == ' ' || raw [ i ] == '\\t' || raw [ i ] == '\\r' || raw [ i ] == '\\n' )		5024406	1					
ANR	5024524	Condition	raw [ i ] == ' ' || raw [ i ] == '\\t' || raw [ i ] == '\\r' || raw [ i ] == '\\n'	90:7:2374:2434	5024406	0	True				
ANR	5024525	OrExpression	raw [ i ] == ' ' || raw [ i ] == '\\t' || raw [ i ] == '\\r' || raw [ i ] == '\\n'		5024406	0		||			
ANR	5024526	EqualityExpression	raw [ i ] == ' '		5024406	0		==			
ANR	5024527	ArrayIndexing	raw [ i ]		5024406	0					
ANR	5024528	Identifier	raw		5024406	0					
ANR	5024529	Identifier	i		5024406	1					
ANR	5024530	PrimaryExpression	' '		5024406	1					
ANR	5024531	OrExpression	raw [ i ] == '\\t' || raw [ i ] == '\\r' || raw [ i ] == '\\n'		5024406	1		||			
ANR	5024532	EqualityExpression	raw [ i ] == '\\t'		5024406	0		==			
ANR	5024533	ArrayIndexing	raw [ i ]		5024406	0					
ANR	5024534	Identifier	raw		5024406	0					
ANR	5024535	Identifier	i		5024406	1					
ANR	5024536	PrimaryExpression	'\\t'		5024406	1					
ANR	5024537	OrExpression	raw [ i ] == '\\r' || raw [ i ] == '\\n'		5024406	1		||			
ANR	5024538	EqualityExpression	raw [ i ] == '\\r'		5024406	0		==			
ANR	5024539	ArrayIndexing	raw [ i ]		5024406	0					
ANR	5024540	Identifier	raw		5024406	0					
ANR	5024541	Identifier	i		5024406	1					
ANR	5024542	PrimaryExpression	'\\r'		5024406	1					
ANR	5024543	EqualityExpression	raw [ i ] == '\\n'		5024406	1		==			
ANR	5024544	ArrayIndexing	raw [ i ]		5024406	0					
ANR	5024545	Identifier	raw		5024406	0					
ANR	5024546	Identifier	i		5024406	1					
ANR	5024547	PrimaryExpression	'\\n'		5024406	1					
ANR	5024548	CompoundStatement		27:70:496:496	5024406	1					
ANR	5024549	ExpressionStatement	buff [ buff_len ++ ] = '\\0'	95:3:2566:2589	5024406	0	True				
ANR	5024550	AssignmentExpression	buff [ buff_len ++ ] = '\\0'		5024406	0		=			
ANR	5024551	ArrayIndexing	buff [ buff_len ++ ]		5024406	0					
ANR	5024552	Identifier	buff		5024406	0					
ANR	5024553	PostIncDecOperationExpression	buff_len ++		5024406	1					
ANR	5024554	Identifier	buff_len		5024406	0					
ANR	5024555	IncDec	++		5024406	1					
ANR	5024556	PrimaryExpression	'\\0'		5024406	1					
ANR	5024557	ExpressionStatement	args . add_arg ( strdup ( buff ) )	96:3:2594:2622	5024406	1	True				
ANR	5024558	CallExpression	args . add_arg ( strdup ( buff ) )		5024406	0					
ANR	5024559	Callee	args . add_arg		5024406	0					
ANR	5024560	MemberAccess	args . add_arg		5024406	0					
ANR	5024561	Identifier	args		5024406	0					
ANR	5024562	Identifier	add_arg		5024406	1					
ANR	5024563	ArgumentList	strdup ( buff )		5024406	1					
ANR	5024564	Argument	strdup ( buff )		5024406	0					
ANR	5024565	CallExpression	strdup ( buff )		5024406	0					
ANR	5024566	Callee	strdup		5024406	0					
ANR	5024567	Identifier	strdup		5024406	0					
ANR	5024568	ArgumentList	buff		5024406	1					
ANR	5024569	Argument	buff		5024406	0					
ANR	5024570	Identifier	buff		5024406	0					
ANR	5024571	ExpressionStatement	buff_len = 0	97:3:2627:2639	5024406	2	True				
ANR	5024572	AssignmentExpression	buff_len = 0		5024406	0		=			
ANR	5024573	Identifier	buff_len		5024406	0					
ANR	5024574	PrimaryExpression	0		5024406	1					
ANR	5024575	ExpressionStatement	beginning = i + 1	99:3:2672:2687	5024406	3	True				
ANR	5024576	AssignmentExpression	beginning = i + 1		5024406	0		=			
ANR	5024577	Identifier	beginning		5024406	0					
ANR	5024578	AdditiveExpression	i + 1		5024406	1		+			
ANR	5024579	Identifier	i		5024406	0					
ANR	5024580	PrimaryExpression	1		5024406	1					
ANR	5024581	ElseStatement	else		5024406	0					
ANR	5024582	CompoundStatement		37:9:799:799	5024406	0					
ANR	5024583	ExpressionStatement	buff [ buff_len ++ ] = raw [ i ]	102:3:2790:2815	5024406	0	True				
ANR	5024584	AssignmentExpression	buff [ buff_len ++ ] = raw [ i ]		5024406	0		=			
ANR	5024585	ArrayIndexing	buff [ buff_len ++ ]		5024406	0					
ANR	5024586	Identifier	buff		5024406	0					
ANR	5024587	PostIncDecOperationExpression	buff_len ++		5024406	1					
ANR	5024588	Identifier	buff_len		5024406	0					
ANR	5024589	IncDec	++		5024406	1					
ANR	5024590	ArrayIndexing	raw [ i ]		5024406	1					
ANR	5024591	Identifier	raw		5024406	0					
ANR	5024592	Identifier	i		5024406	1					
ANR	5024593	ExpressionStatement	buff [ buff_len ++ ] = '\\0'	107:1:2855:2878	5024406	7	True				
ANR	5024594	AssignmentExpression	buff [ buff_len ++ ] = '\\0'		5024406	0		=			
ANR	5024595	ArrayIndexing	buff [ buff_len ++ ]		5024406	0					
ANR	5024596	Identifier	buff		5024406	0					
ANR	5024597	PostIncDecOperationExpression	buff_len ++		5024406	1					
ANR	5024598	Identifier	buff_len		5024406	0					
ANR	5024599	IncDec	++		5024406	1					
ANR	5024600	PrimaryExpression	'\\0'		5024406	1					
ANR	5024601	ExpressionStatement	args . add_arg ( strdup ( buff ) )	108:1:2881:2908	5024406	8	True				
ANR	5024602	CallExpression	args . add_arg ( strdup ( buff ) )		5024406	0					
ANR	5024603	Callee	args . add_arg		5024406	0					
ANR	5024604	MemberAccess	args . add_arg		5024406	0					
ANR	5024605	Identifier	args		5024406	0					
ANR	5024606	Identifier	add_arg		5024406	1					
ANR	5024607	ArgumentList	strdup ( buff )		5024406	1					
ANR	5024608	Argument	strdup ( buff )		5024406	0					
ANR	5024609	CallExpression	strdup ( buff )		5024406	0					
ANR	5024610	Callee	strdup		5024406	0					
ANR	5024611	Identifier	strdup		5024406	0					
ANR	5024612	ArgumentList	buff		5024406	1					
ANR	5024613	Argument	buff		5024406	0					
ANR	5024614	Identifier	buff		5024406	0					
ANR	5024615	ExpressionStatement	free ( buff )	110:1:2912:2923	5024406	9	True				
ANR	5024616	CallExpression	free ( buff )		5024406	0					
ANR	5024617	Callee	free		5024406	0					
ANR	5024618	Identifier	free		5024406	0					
ANR	5024619	ArgumentList	buff		5024406	1					
ANR	5024620	Argument	buff		5024406	0					
ANR	5024621	Identifier	buff		5024406	0					
ANR	5024622	ReturnStatement	return true ;	111:1:2926:2937	5024406	10	True				
ANR	5024623	Identifier	true		5024406	0					
ANR	5024624	ReturnType	bool		5024406	1					
ANR	5024625	Identifier	parse_vmgahp_command		5024406	2					
ANR	5024626	ParameterList	"const char * raw , Gahp_Args & args"		5024406	3					
ANR	5024627	Parameter	const char * raw	63:26:1905:1919	5024406	0	True				
ANR	5024628	ParameterType	const char *		5024406	0					
ANR	5024629	Identifier	raw		5024406	1					
ANR	5024630	Parameter	Gahp_Args & args	63:43:1922:1936	5024406	1	True				
ANR	5024631	ParameterType	Gahp_Args &		5024406	0					
ANR	5024632	Identifier	args		5024406	1					
ANR	5024633	CFGEntryNode	ENTRY		5024406		True				
ANR	5024634	CFGExitNode	EXIT		5024406		True				
ANR	5024635	Symbol	malloc		5024406						
ANR	5024636	Symbol	beginning		5024406						
ANR	5024637	Symbol	D_ALWAYS		5024406						
ANR	5024638	Symbol	false		5024406						
ANR	5024639	Symbol	raw		5024406						
ANR	5024640	Symbol	i		5024406						
ANR	5024641	Symbol	buff_len		5024406						
ANR	5024642	Symbol	args		5024406						
ANR	5024643	Symbol	strlen		5024406						
ANR	5024644	Symbol	* raw		5024406						
ANR	5024645	Symbol	* i		5024406						
ANR	5024646	Symbol	len		5024406						
ANR	5024647	Symbol	* buff		5024406						
ANR	5024648	Symbol	true		5024406						
ANR	5024649	Symbol	strdup		5024406						
ANR	5024650	Symbol	buff		5024406						
ANR	5024651	Function	verify_vm_type	115:0:3004:3254							
ANR	5024652	FunctionDef	verify_vm_type (const char * vmtype)		5024651	0					
ANR	5024653	CompoundStatement		117:0:3045:3254	5024651	0					
ANR	5024654	IdentifierDeclStatement	int i = 0 ;	118:1:3048:3055	5024651	0	True				
ANR	5024655	IdentifierDecl	i = 0		5024651	0					
ANR	5024656	IdentifierDeclType	int		5024651	0					
ANR	5024657	Identifier	i		5024651	1					
ANR	5024658	AssignmentExpression	i = 0		5024651	2		=			
ANR	5024659	Identifier	i		5024651	0					
ANR	5024660	PrimaryExpression	0		5024651	1					
ANR	5024661	WhileStatement	while ( support_vms_list [ i ] != NULL )		5024651	1					
ANR	5024662	Condition	support_vms_list [ i ] != NULL	119:7:3064:3090	5024651	0	True				
ANR	5024663	EqualityExpression	support_vms_list [ i ] != NULL		5024651	0		!=			
ANR	5024664	ArrayIndexing	support_vms_list [ i ]		5024651	0					
ANR	5024665	Identifier	support_vms_list		5024651	0					
ANR	5024666	Identifier	i		5024651	1					
ANR	5024667	Identifier	NULL		5024651	1					
ANR	5024668	CompoundStatement		3:36:47:47	5024651	1					
ANR	5024669	IfStatement	"if ( strcasecmp ( vmtype , support_vms_list [ i ] ) == 0 )"		5024651	0					
ANR	5024670	Condition	"strcasecmp ( vmtype , support_vms_list [ i ] ) == 0"	120:5:3100:3143	5024651	0	True				
ANR	5024671	EqualityExpression	"strcasecmp ( vmtype , support_vms_list [ i ] ) == 0"		5024651	0		==			
ANR	5024672	CallExpression	"strcasecmp ( vmtype , support_vms_list [ i ] )"		5024651	0					
ANR	5024673	Callee	strcasecmp		5024651	0					
ANR	5024674	Identifier	strcasecmp		5024651	0					
ANR	5024675	ArgumentList	vmtype		5024651	1					
ANR	5024676	Argument	vmtype		5024651	0					
ANR	5024677	Identifier	vmtype		5024651	0					
ANR	5024678	Argument	support_vms_list [ i ]		5024651	1					
ANR	5024679	ArrayIndexing	support_vms_list [ i ]		5024651	0					
ANR	5024680	Identifier	support_vms_list		5024651	0					
ANR	5024681	Identifier	i		5024651	1					
ANR	5024682	PrimaryExpression	0		5024651	1					
ANR	5024683	CompoundStatement		4:52:101:101	5024651	1					
ANR	5024684	ReturnStatement	return true ;	121:3:3152:3163	5024651	0	True				
ANR	5024685	Identifier	true		5024651	0					
ANR	5024686	ExpressionStatement	i ++	123:2:3171:3174	5024651	1	True				
ANR	5024687	PostIncDecOperationExpression	i ++		5024651	0					
ANR	5024688	Identifier	i		5024651	0					
ANR	5024689	IncDec	++		5024651	1					
ANR	5024690	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Not supported VM TYPE(%s)\\n"" , vmtype )"	125:1:3180:3237	5024651	2	True				
ANR	5024691	CallExpression	"vmprintf ( D_ALWAYS , ""Not supported VM TYPE(%s)\\n"" , vmtype )"		5024651	0					
ANR	5024692	Callee	vmprintf		5024651	0					
ANR	5024693	Identifier	vmprintf		5024651	0					
ANR	5024694	ArgumentList	D_ALWAYS		5024651	1					
ANR	5024695	Argument	D_ALWAYS		5024651	0					
ANR	5024696	Identifier	D_ALWAYS		5024651	0					
ANR	5024697	Argument	"""Not supported VM TYPE(%s)\\n"""		5024651	1					
ANR	5024698	PrimaryExpression	"""Not supported VM TYPE(%s)\\n"""		5024651	0					
ANR	5024699	Argument	vmtype		5024651	2					
ANR	5024700	Identifier	vmtype		5024651	0					
ANR	5024701	ReturnStatement	return false ;	126:1:3240:3252	5024651	3	True				
ANR	5024702	Identifier	false		5024651	0					
ANR	5024703	ReturnType	bool		5024651	1					
ANR	5024704	Identifier	verify_vm_type		5024651	2					
ANR	5024705	ParameterList	const char * vmtype		5024651	3					
ANR	5024706	Parameter	const char * vmtype	116:15:3025:3042	5024651	0	True				
ANR	5024707	ParameterType	const char *		5024651	0					
ANR	5024708	Identifier	vmtype		5024651	1					
ANR	5024709	CFGEntryNode	ENTRY		5024651		True				
ANR	5024710	CFGExitNode	EXIT		5024651		True				
ANR	5024711	Symbol	support_vms_list		5024651						
ANR	5024712	Symbol	vmtype		5024651						
ANR	5024713	Symbol	NULL		5024651						
ANR	5024714	Symbol	* i		5024651						
ANR	5024715	Symbol	true		5024651						
ANR	5024716	Symbol	D_ALWAYS		5024651						
ANR	5024717	Symbol	false		5024651						
ANR	5024718	Symbol	i		5024651						
ANR	5024719	Symbol	* support_vms_list		5024651						
ANR	5024720	Symbol	strcasecmp		5024651						
ANR	5024721	Function	check_vm_read_access_file	130:0:3258:3653							
ANR	5024722	FunctionDef	"check_vm_read_access_file (const char * file , bool is_root)"		5024721	0					
ANR	5024723	CompoundStatement		132:0:3331:3653	5024721	0					
ANR	5024724	IfStatement	if ( ( file == NULL ) || ( file [ 0 ] == '\\0' ) )		5024721	0					
ANR	5024725	Condition	( file == NULL ) || ( file [ 0 ] == '\\0' )	133:5:3338:3372	5024721	0	True				
ANR	5024726	OrExpression	( file == NULL ) || ( file [ 0 ] == '\\0' )		5024721	0		||			
ANR	5024727	EqualityExpression	file == NULL		5024721	0		==			
ANR	5024728	Identifier	file		5024721	0					
ANR	5024729	Identifier	NULL		5024721	1					
ANR	5024730	EqualityExpression	file [ 0 ] == '\\0'		5024721	1		==			
ANR	5024731	ArrayIndexing	file [ 0 ]		5024721	0					
ANR	5024732	Identifier	file		5024721	0					
ANR	5024733	PrimaryExpression	0		5024721	1					
ANR	5024734	PrimaryExpression	'\\0'		5024721	1					
ANR	5024735	CompoundStatement		2:43:44:44	5024721	1					
ANR	5024736	ReturnStatement	return false ;	134:2:3380:3392	5024721	0	True				
ANR	5024737	Identifier	false		5024721	0					
ANR	5024738	IdentifierDeclStatement	priv_state priv = PRIV_UNKNOWN ;	137:1:3399:3429	5024721	1	True				
ANR	5024739	IdentifierDecl	priv = PRIV_UNKNOWN		5024721	0					
ANR	5024740	IdentifierDeclType	priv_state		5024721	0					
ANR	5024741	Identifier	priv		5024721	1					
ANR	5024742	AssignmentExpression	priv = PRIV_UNKNOWN		5024721	2		=			
ANR	5024743	Identifier	PRIV_UNKNOWN		5024721	0					
ANR	5024744	Identifier	PRIV_UNKNOWN		5024721	1					
ANR	5024745	IfStatement	if ( is_root )		5024721	2					
ANR	5024746	Condition	is_root	138:5:3436:3442	5024721	0	True				
ANR	5024747	Identifier	is_root		5024721	0					
ANR	5024748	CompoundStatement		7:15:114:114	5024721	1					
ANR	5024749	ExpressionStatement	priv = set_root_priv ( )	139:2:3450:3472	5024721	0	True				
ANR	5024750	AssignmentExpression	priv = set_root_priv ( )		5024721	0		=			
ANR	5024751	Identifier	priv		5024721	0					
ANR	5024752	CallExpression	set_root_priv ( )		5024721	1					
ANR	5024753	Callee	set_root_priv		5024721	0					
ANR	5024754	Identifier	set_root_priv		5024721	0					
ANR	5024755	ArgumentList			5024721	1					
ANR	5024756	IdentifierDeclStatement	"int ret = access ( file , R_OK ) ;"	141:1:3478:3506	5024721	3	True				
ANR	5024757	IdentifierDecl	"ret = access ( file , R_OK )"		5024721	0					
ANR	5024758	IdentifierDeclType	int		5024721	0					
ANR	5024759	Identifier	ret		5024721	1					
ANR	5024760	AssignmentExpression	"ret = access ( file , R_OK )"		5024721	2		=			
ANR	5024761	Identifier	ret		5024721	0					
ANR	5024762	CallExpression	"access ( file , R_OK )"		5024721	1					
ANR	5024763	Callee	access		5024721	0					
ANR	5024764	Identifier	access		5024721	0					
ANR	5024765	ArgumentList	file		5024721	1					
ANR	5024766	Argument	file		5024721	0					
ANR	5024767	Identifier	file		5024721	0					
ANR	5024768	Argument	R_OK		5024721	1					
ANR	5024769	Identifier	R_OK		5024721	0					
ANR	5024770	IfStatement	if ( is_root )		5024721	4					
ANR	5024771	Condition	is_root	142:5:3513:3519	5024721	0	True				
ANR	5024772	Identifier	is_root		5024721	0					
ANR	5024773	CompoundStatement		11:15:191:191	5024721	1					
ANR	5024774	ExpressionStatement	set_priv ( priv )	143:2:3527:3541	5024721	0	True				
ANR	5024775	CallExpression	set_priv ( priv )		5024721	0					
ANR	5024776	Callee	set_priv		5024721	0					
ANR	5024777	Identifier	set_priv		5024721	0					
ANR	5024778	ArgumentList	priv		5024721	1					
ANR	5024779	Argument	priv		5024721	0					
ANR	5024780	Identifier	priv		5024721	0					
ANR	5024781	IfStatement	if ( ret < 0 )		5024721	5					
ANR	5024782	Condition	ret < 0	146:5:3552:3558	5024721	0	True				
ANR	5024783	RelationalExpression	ret < 0		5024721	0		<			
ANR	5024784	Identifier	ret		5024721	0					
ANR	5024785	PrimaryExpression	0		5024721	1					
ANR	5024786	CompoundStatement		15:15:230:230	5024721	1					
ANR	5024787	ExpressionStatement	"vmprintf ( D_ALWAYS , ""File(%s) can't be read\\n"" , file )"	147:2:3566:3618	5024721	0	True				
ANR	5024788	CallExpression	"vmprintf ( D_ALWAYS , ""File(%s) can't be read\\n"" , file )"		5024721	0					
ANR	5024789	Callee	vmprintf		5024721	0					
ANR	5024790	Identifier	vmprintf		5024721	0					
ANR	5024791	ArgumentList	D_ALWAYS		5024721	1					
ANR	5024792	Argument	D_ALWAYS		5024721	0					
ANR	5024793	Identifier	D_ALWAYS		5024721	0					
ANR	5024794	Argument	"""File(%s) can't be read\\n"""		5024721	1					
ANR	5024795	PrimaryExpression	"""File(%s) can't be read\\n"""		5024721	0					
ANR	5024796	Argument	file		5024721	2					
ANR	5024797	Identifier	file		5024721	0					
ANR	5024798	ReturnStatement	return false ;	148:2:3622:3634	5024721	1	True				
ANR	5024799	Identifier	false		5024721	0					
ANR	5024800	ReturnStatement	return true ;	150:1:3640:3651	5024721	6	True				
ANR	5024801	Identifier	true		5024721	0					
ANR	5024802	ReturnType	bool		5024721	1					
ANR	5024803	Identifier	check_vm_read_access_file		5024721	2					
ANR	5024804	ParameterList	"const char * file , bool is_root"		5024721	3					
ANR	5024805	Parameter	const char * file	131:26:3289:3304	5024721	0	True				
ANR	5024806	ParameterType	const char *		5024721	0					
ANR	5024807	Identifier	file		5024721	1					
ANR	5024808	Parameter	bool is_root	131:44:3307:3318	5024721	1	True				
ANR	5024809	ParameterType	bool		5024721	0					
ANR	5024810	Identifier	is_root		5024721	1					
ANR	5024811	CFGEntryNode	ENTRY		5024721		True				
ANR	5024812	CFGExitNode	EXIT		5024721		True				
ANR	5024813	Symbol	ret		5024721						
ANR	5024814	Symbol	NULL		5024721						
ANR	5024815	Symbol	access		5024721						
ANR	5024816	Symbol	false		5024721						
ANR	5024817	Symbol	D_ALWAYS		5024721						
ANR	5024818	Symbol	set_root_priv		5024721						
ANR	5024819	Symbol	is_root		5024721						
ANR	5024820	Symbol	* file		5024721						
ANR	5024821	Symbol	PRIV_UNKNOWN		5024721						
ANR	5024822	Symbol	R_OK		5024721						
ANR	5024823	Symbol	file		5024721						
ANR	5024824	Symbol	true		5024721						
ANR	5024825	Symbol	priv		5024721						
ANR	5024826	Function	check_vm_write_access_file	153:0:3656:4056							
ANR	5024827	FunctionDef	"check_vm_write_access_file (const char * file , bool is_root)"		5024826	0					
ANR	5024828	CompoundStatement		155:0:3730:4056	5024826	0					
ANR	5024829	IfStatement	if ( ( file == NULL ) || ( file [ 0 ] == '\\0' ) )		5024826	0					
ANR	5024830	Condition	( file == NULL ) || ( file [ 0 ] == '\\0' )	156:5:3737:3771	5024826	0	True				
ANR	5024831	OrExpression	( file == NULL ) || ( file [ 0 ] == '\\0' )		5024826	0		||			
ANR	5024832	EqualityExpression	file == NULL		5024826	0		==			
ANR	5024833	Identifier	file		5024826	0					
ANR	5024834	Identifier	NULL		5024826	1					
ANR	5024835	EqualityExpression	file [ 0 ] == '\\0'		5024826	1		==			
ANR	5024836	ArrayIndexing	file [ 0 ]		5024826	0					
ANR	5024837	Identifier	file		5024826	0					
ANR	5024838	PrimaryExpression	0		5024826	1					
ANR	5024839	PrimaryExpression	'\\0'		5024826	1					
ANR	5024840	CompoundStatement		2:43:44:44	5024826	1					
ANR	5024841	ReturnStatement	return false ;	157:2:3779:3791	5024826	0	True				
ANR	5024842	Identifier	false		5024826	0					
ANR	5024843	IdentifierDeclStatement	priv_state priv = PRIV_UNKNOWN ;	160:1:3798:3828	5024826	1	True				
ANR	5024844	IdentifierDecl	priv = PRIV_UNKNOWN		5024826	0					
ANR	5024845	IdentifierDeclType	priv_state		5024826	0					
ANR	5024846	Identifier	priv		5024826	1					
ANR	5024847	AssignmentExpression	priv = PRIV_UNKNOWN		5024826	2		=			
ANR	5024848	Identifier	PRIV_UNKNOWN		5024826	0					
ANR	5024849	Identifier	PRIV_UNKNOWN		5024826	1					
ANR	5024850	IfStatement	if ( is_root )		5024826	2					
ANR	5024851	Condition	is_root	161:5:3835:3841	5024826	0	True				
ANR	5024852	Identifier	is_root		5024826	0					
ANR	5024853	CompoundStatement		7:15:114:114	5024826	1					
ANR	5024854	ExpressionStatement	priv = set_root_priv ( )	162:2:3849:3871	5024826	0	True				
ANR	5024855	AssignmentExpression	priv = set_root_priv ( )		5024826	0		=			
ANR	5024856	Identifier	priv		5024826	0					
ANR	5024857	CallExpression	set_root_priv ( )		5024826	1					
ANR	5024858	Callee	set_root_priv		5024826	0					
ANR	5024859	Identifier	set_root_priv		5024826	0					
ANR	5024860	ArgumentList			5024826	1					
ANR	5024861	IdentifierDeclStatement	"int ret = access ( file , W_OK ) ;"	164:1:3877:3905	5024826	3	True				
ANR	5024862	IdentifierDecl	"ret = access ( file , W_OK )"		5024826	0					
ANR	5024863	IdentifierDeclType	int		5024826	0					
ANR	5024864	Identifier	ret		5024826	1					
ANR	5024865	AssignmentExpression	"ret = access ( file , W_OK )"		5024826	2		=			
ANR	5024866	Identifier	ret		5024826	0					
ANR	5024867	CallExpression	"access ( file , W_OK )"		5024826	1					
ANR	5024868	Callee	access		5024826	0					
ANR	5024869	Identifier	access		5024826	0					
ANR	5024870	ArgumentList	file		5024826	1					
ANR	5024871	Argument	file		5024826	0					
ANR	5024872	Identifier	file		5024826	0					
ANR	5024873	Argument	W_OK		5024826	1					
ANR	5024874	Identifier	W_OK		5024826	0					
ANR	5024875	IfStatement	if ( is_root )		5024826	4					
ANR	5024876	Condition	is_root	165:5:3912:3918	5024826	0	True				
ANR	5024877	Identifier	is_root		5024826	0					
ANR	5024878	CompoundStatement		11:15:191:191	5024826	1					
ANR	5024879	ExpressionStatement	set_priv ( priv )	166:2:3926:3940	5024826	0	True				
ANR	5024880	CallExpression	set_priv ( priv )		5024826	0					
ANR	5024881	Callee	set_priv		5024826	0					
ANR	5024882	Identifier	set_priv		5024826	0					
ANR	5024883	ArgumentList	priv		5024826	1					
ANR	5024884	Argument	priv		5024826	0					
ANR	5024885	Identifier	priv		5024826	0					
ANR	5024886	IfStatement	if ( ret < 0 )		5024826	5					
ANR	5024887	Condition	ret < 0	169:5:3951:3957	5024826	0	True				
ANR	5024888	RelationalExpression	ret < 0		5024826	0		<			
ANR	5024889	Identifier	ret		5024826	0					
ANR	5024890	PrimaryExpression	0		5024826	1					
ANR	5024891	CompoundStatement		15:15:230:230	5024826	1					
ANR	5024892	ExpressionStatement	"vmprintf ( D_ALWAYS , ""File(%s) can't be modified\\n"" , file )"	170:2:3965:4021	5024826	0	True				
ANR	5024893	CallExpression	"vmprintf ( D_ALWAYS , ""File(%s) can't be modified\\n"" , file )"		5024826	0					
ANR	5024894	Callee	vmprintf		5024826	0					
ANR	5024895	Identifier	vmprintf		5024826	0					
ANR	5024896	ArgumentList	D_ALWAYS		5024826	1					
ANR	5024897	Argument	D_ALWAYS		5024826	0					
ANR	5024898	Identifier	D_ALWAYS		5024826	0					
ANR	5024899	Argument	"""File(%s) can't be modified\\n"""		5024826	1					
ANR	5024900	PrimaryExpression	"""File(%s) can't be modified\\n"""		5024826	0					
ANR	5024901	Argument	file		5024826	2					
ANR	5024902	Identifier	file		5024826	0					
ANR	5024903	ReturnStatement	return false ;	171:2:4025:4037	5024826	1	True				
ANR	5024904	Identifier	false		5024826	0					
ANR	5024905	ReturnStatement	return true ;	173:1:4043:4054	5024826	6	True				
ANR	5024906	Identifier	true		5024826	0					
ANR	5024907	ReturnType	bool		5024826	1					
ANR	5024908	Identifier	check_vm_write_access_file		5024826	2					
ANR	5024909	ParameterList	"const char * file , bool is_root"		5024826	3					
ANR	5024910	Parameter	const char * file	154:27:3688:3703	5024826	0	True				
ANR	5024911	ParameterType	const char *		5024826	0					
ANR	5024912	Identifier	file		5024826	1					
ANR	5024913	Parameter	bool is_root	154:45:3706:3717	5024826	1	True				
ANR	5024914	ParameterType	bool		5024826	0					
ANR	5024915	Identifier	is_root		5024826	1					
ANR	5024916	CFGEntryNode	ENTRY		5024826		True				
ANR	5024917	CFGExitNode	EXIT		5024826		True				
ANR	5024918	Symbol	ret		5024826						
ANR	5024919	Symbol	NULL		5024826						
ANR	5024920	Symbol	access		5024826						
ANR	5024921	Symbol	false		5024826						
ANR	5024922	Symbol	D_ALWAYS		5024826						
ANR	5024923	Symbol	set_root_priv		5024826						
ANR	5024924	Symbol	is_root		5024826						
ANR	5024925	Symbol	* file		5024826						
ANR	5024926	Symbol	W_OK		5024826						
ANR	5024927	Symbol	PRIV_UNKNOWN		5024826						
ANR	5024928	Symbol	file		5024826						
ANR	5024929	Symbol	true		5024826						
ANR	5024930	Symbol	priv		5024826						
ANR	5024931	Function	check_vm_execute_file	176:0:4059:4454							
ANR	5024932	FunctionDef	"check_vm_execute_file (const char * file , bool is_root)"		5024931	0					
ANR	5024933	CompoundStatement		178:0:4128:4454	5024931	0					
ANR	5024934	IfStatement	if ( ( file == NULL ) || ( file [ 0 ] == '\\0' ) )		5024931	0					
ANR	5024935	Condition	( file == NULL ) || ( file [ 0 ] == '\\0' )	179:5:4135:4169	5024931	0	True				
ANR	5024936	OrExpression	( file == NULL ) || ( file [ 0 ] == '\\0' )		5024931	0		||			
ANR	5024937	EqualityExpression	file == NULL		5024931	0		==			
ANR	5024938	Identifier	file		5024931	0					
ANR	5024939	Identifier	NULL		5024931	1					
ANR	5024940	EqualityExpression	file [ 0 ] == '\\0'		5024931	1		==			
ANR	5024941	ArrayIndexing	file [ 0 ]		5024931	0					
ANR	5024942	Identifier	file		5024931	0					
ANR	5024943	PrimaryExpression	0		5024931	1					
ANR	5024944	PrimaryExpression	'\\0'		5024931	1					
ANR	5024945	CompoundStatement		2:43:44:44	5024931	1					
ANR	5024946	ReturnStatement	return false ;	180:2:4177:4189	5024931	0	True				
ANR	5024947	Identifier	false		5024931	0					
ANR	5024948	IdentifierDeclStatement	priv_state priv = PRIV_UNKNOWN ;	183:1:4196:4226	5024931	1	True				
ANR	5024949	IdentifierDecl	priv = PRIV_UNKNOWN		5024931	0					
ANR	5024950	IdentifierDeclType	priv_state		5024931	0					
ANR	5024951	Identifier	priv		5024931	1					
ANR	5024952	AssignmentExpression	priv = PRIV_UNKNOWN		5024931	2		=			
ANR	5024953	Identifier	PRIV_UNKNOWN		5024931	0					
ANR	5024954	Identifier	PRIV_UNKNOWN		5024931	1					
ANR	5024955	IfStatement	if ( is_root )		5024931	2					
ANR	5024956	Condition	is_root	184:5:4233:4239	5024931	0	True				
ANR	5024957	Identifier	is_root		5024931	0					
ANR	5024958	CompoundStatement		7:15:114:114	5024931	1					
ANR	5024959	ExpressionStatement	priv = set_root_priv ( )	185:2:4247:4269	5024931	0	True				
ANR	5024960	AssignmentExpression	priv = set_root_priv ( )		5024931	0		=			
ANR	5024961	Identifier	priv		5024931	0					
ANR	5024962	CallExpression	set_root_priv ( )		5024931	1					
ANR	5024963	Callee	set_root_priv		5024931	0					
ANR	5024964	Identifier	set_root_priv		5024931	0					
ANR	5024965	ArgumentList			5024931	1					
ANR	5024966	IdentifierDeclStatement	"int ret = access ( file , X_OK ) ;"	187:1:4275:4303	5024931	3	True				
ANR	5024967	IdentifierDecl	"ret = access ( file , X_OK )"		5024931	0					
ANR	5024968	IdentifierDeclType	int		5024931	0					
ANR	5024969	Identifier	ret		5024931	1					
ANR	5024970	AssignmentExpression	"ret = access ( file , X_OK )"		5024931	2		=			
ANR	5024971	Identifier	ret		5024931	0					
ANR	5024972	CallExpression	"access ( file , X_OK )"		5024931	1					
ANR	5024973	Callee	access		5024931	0					
ANR	5024974	Identifier	access		5024931	0					
ANR	5024975	ArgumentList	file		5024931	1					
ANR	5024976	Argument	file		5024931	0					
ANR	5024977	Identifier	file		5024931	0					
ANR	5024978	Argument	X_OK		5024931	1					
ANR	5024979	Identifier	X_OK		5024931	0					
ANR	5024980	IfStatement	if ( is_root )		5024931	4					
ANR	5024981	Condition	is_root	188:5:4310:4316	5024931	0	True				
ANR	5024982	Identifier	is_root		5024931	0					
ANR	5024983	CompoundStatement		11:15:191:191	5024931	1					
ANR	5024984	ExpressionStatement	set_priv ( priv )	189:2:4324:4338	5024931	0	True				
ANR	5024985	CallExpression	set_priv ( priv )		5024931	0					
ANR	5024986	Callee	set_priv		5024931	0					
ANR	5024987	Identifier	set_priv		5024931	0					
ANR	5024988	ArgumentList	priv		5024931	1					
ANR	5024989	Argument	priv		5024931	0					
ANR	5024990	Identifier	priv		5024931	0					
ANR	5024991	IfStatement	if ( ret < 0 )		5024931	5					
ANR	5024992	Condition	ret < 0	192:5:4349:4355	5024931	0	True				
ANR	5024993	RelationalExpression	ret < 0		5024931	0		<			
ANR	5024994	Identifier	ret		5024931	0					
ANR	5024995	PrimaryExpression	0		5024931	1					
ANR	5024996	CompoundStatement		15:15:230:230	5024931	1					
ANR	5024997	ExpressionStatement	"vmprintf ( D_ALWAYS , ""File(%s) can't be executed\\n"" , file )"	193:2:4363:4419	5024931	0	True				
ANR	5024998	CallExpression	"vmprintf ( D_ALWAYS , ""File(%s) can't be executed\\n"" , file )"		5024931	0					
ANR	5024999	Callee	vmprintf		5024931	0					
ANR	5025000	Identifier	vmprintf		5024931	0					
ANR	5025001	ArgumentList	D_ALWAYS		5024931	1					
ANR	5025002	Argument	D_ALWAYS		5024931	0					
ANR	5025003	Identifier	D_ALWAYS		5024931	0					
ANR	5025004	Argument	"""File(%s) can't be executed\\n"""		5024931	1					
ANR	5025005	PrimaryExpression	"""File(%s) can't be executed\\n"""		5024931	0					
ANR	5025006	Argument	file		5024931	2					
ANR	5025007	Identifier	file		5024931	0					
ANR	5025008	ReturnStatement	return false ;	194:2:4423:4435	5024931	1	True				
ANR	5025009	Identifier	false		5024931	0					
ANR	5025010	ReturnStatement	return true ;	196:1:4441:4452	5024931	6	True				
ANR	5025011	Identifier	true		5024931	0					
ANR	5025012	ReturnType	bool		5024931	1					
ANR	5025013	Identifier	check_vm_execute_file		5024931	2					
ANR	5025014	ParameterList	"const char * file , bool is_root"		5024931	3					
ANR	5025015	Parameter	const char * file	177:22:4086:4101	5024931	0	True				
ANR	5025016	ParameterType	const char *		5024931	0					
ANR	5025017	Identifier	file		5024931	1					
ANR	5025018	Parameter	bool is_root	177:40:4104:4115	5024931	1	True				
ANR	5025019	ParameterType	bool		5024931	0					
ANR	5025020	Identifier	is_root		5024931	1					
ANR	5025021	CFGEntryNode	ENTRY		5024931		True				
ANR	5025022	CFGExitNode	EXIT		5024931		True				
ANR	5025023	Symbol	ret		5024931						
ANR	5025024	Symbol	NULL		5024931						
ANR	5025025	Symbol	access		5024931						
ANR	5025026	Symbol	false		5024931						
ANR	5025027	Symbol	D_ALWAYS		5024931						
ANR	5025028	Symbol	set_root_priv		5024931						
ANR	5025029	Symbol	X_OK		5024931						
ANR	5025030	Symbol	is_root		5024931						
ANR	5025031	Symbol	* file		5024931						
ANR	5025032	Symbol	PRIV_UNKNOWN		5024931						
ANR	5025033	Symbol	file		5024931						
ANR	5025034	Symbol	true		5024931						
ANR	5025035	Symbol	priv		5024931						
ANR	5025036	Function	write_local_settings_from_file	199:0:4457:5719							
ANR	5025037	FunctionDef	"write_local_settings_from_file (FILE * out_fp , const char * param_name , const char * start_mark , const char * end_mark)"		5025036	0					
ANR	5025038	CompoundStatement		204:0:4670:5719	5025036	0					
ANR	5025039	IdentifierDeclStatement	char * tmp = param ( param_name ) ;	205:1:4673:4702	5025036	0	True				
ANR	5025040	IdentifierDecl	* tmp = param ( param_name )		5025036	0					
ANR	5025041	IdentifierDeclType	char *		5025036	0					
ANR	5025042	Identifier	tmp		5025036	1					
ANR	5025043	AssignmentExpression	* tmp = param ( param_name )		5025036	2		=			
ANR	5025044	Identifier	tmp		5025036	0					
ANR	5025045	CallExpression	param ( param_name )		5025036	1					
ANR	5025046	Callee	param		5025036	0					
ANR	5025047	Identifier	param		5025036	0					
ANR	5025048	ArgumentList	param_name		5025036	1					
ANR	5025049	Argument	param_name		5025036	0					
ANR	5025050	Identifier	param_name		5025036	0					
ANR	5025051	IfStatement	if ( tmp == NULL )		5025036	1					
ANR	5025052	Condition	tmp == NULL	206:5:4709:4719	5025036	0	True				
ANR	5025053	EqualityExpression	tmp == NULL		5025036	0		==			
ANR	5025054	Identifier	tmp		5025036	0					
ANR	5025055	Identifier	NULL		5025036	1					
ANR	5025056	CompoundStatement		3:18:51:51	5025036	1					
ANR	5025057	ReturnStatement	return true ;	207:2:4726:4737	5025036	0	True				
ANR	5025058	Identifier	true		5025036	0					
ANR	5025059	IdentifierDeclStatement	MyString local_settings_file = tmp ;	209:1:4743:4777	5025036	2	True				
ANR	5025060	IdentifierDecl	local_settings_file = tmp		5025036	0					
ANR	5025061	IdentifierDeclType	MyString		5025036	0					
ANR	5025062	Identifier	local_settings_file		5025036	1					
ANR	5025063	AssignmentExpression	local_settings_file = tmp		5025036	2		=			
ANR	5025064	Identifier	tmp		5025036	0					
ANR	5025065	Identifier	tmp		5025036	1					
ANR	5025066	ExpressionStatement	free ( tmp )	210:1:4780:4789	5025036	3	True				
ANR	5025067	CallExpression	free ( tmp )		5025036	0					
ANR	5025068	Callee	free		5025036	0					
ANR	5025069	Identifier	free		5025036	0					
ANR	5025070	ArgumentList	tmp		5025036	1					
ANR	5025071	Argument	tmp		5025036	0					
ANR	5025072	Identifier	tmp		5025036	0					
ANR	5025073	IfStatement	if ( start_mark != NULL )		5025036	4					
ANR	5025074	Condition	start_mark != NULL	211:5:4796:4813	5025036	0	True				
ANR	5025075	EqualityExpression	start_mark != NULL		5025036	0		!=			
ANR	5025076	Identifier	start_mark		5025036	0					
ANR	5025077	Identifier	NULL		5025036	1					
ANR	5025078	CompoundStatement		8:25:145:145	5025036	1					
ANR	5025079	IfStatement	"if ( fprintf ( out_fp , ""%s\\n"" , start_mark ) < 0 )"		5025036	0					
ANR	5025080	Condition	"fprintf ( out_fp , ""%s\\n"" , start_mark ) < 0"	212:6:4824:4862	5025036	0	True				
ANR	5025081	RelationalExpression	"fprintf ( out_fp , ""%s\\n"" , start_mark ) < 0"		5025036	0		<			
ANR	5025082	CallExpression	"fprintf ( out_fp , ""%s\\n"" , start_mark )"		5025036	0					
ANR	5025083	Callee	fprintf		5025036	0					
ANR	5025084	Identifier	fprintf		5025036	0					
ANR	5025085	ArgumentList	out_fp		5025036	1					
ANR	5025086	Argument	out_fp		5025036	0					
ANR	5025087	Identifier	out_fp		5025036	0					
ANR	5025088	Argument	"""%s\\n"""		5025036	1					
ANR	5025089	PrimaryExpression	"""%s\\n"""		5025036	0					
ANR	5025090	Argument	start_mark		5025036	2					
ANR	5025091	Identifier	start_mark		5025036	0					
ANR	5025092	PrimaryExpression	0		5025036	1					
ANR	5025093	CompoundStatement		9:47:194:194	5025036	1					
ANR	5025094	ExpressionStatement	"vmprintf ( D_ALWAYS , ""fprintf error writing start marker: %s\\n"" , strerror ( errno ) )"	213:3:4870:4973	5025036	0	True				
ANR	5025095	CallExpression	"vmprintf ( D_ALWAYS , ""fprintf error writing start marker: %s\\n"" , strerror ( errno ) )"		5025036	0					
ANR	5025096	Callee	vmprintf		5025036	0					
ANR	5025097	Identifier	vmprintf		5025036	0					
ANR	5025098	ArgumentList	D_ALWAYS		5025036	1					
ANR	5025099	Argument	D_ALWAYS		5025036	0					
ANR	5025100	Identifier	D_ALWAYS		5025036	0					
ANR	5025101	Argument	"""fprintf error writing start marker: %s\\n"""		5025036	1					
ANR	5025102	PrimaryExpression	"""fprintf error writing start marker: %s\\n"""		5025036	0					
ANR	5025103	Argument	strerror ( errno )		5025036	2					
ANR	5025104	CallExpression	strerror ( errno )		5025036	0					
ANR	5025105	Callee	strerror		5025036	0					
ANR	5025106	Identifier	strerror		5025036	0					
ANR	5025107	ArgumentList	errno		5025036	1					
ANR	5025108	Argument	errno		5025036	0					
ANR	5025109	Identifier	errno		5025036	0					
ANR	5025110	ReturnStatement	return false ;	216:3:4978:4990	5025036	1	True				
ANR	5025111	Identifier	false		5025036	0					
ANR	5025112	IdentifierDeclStatement	"FILE * in_fp = safe_fopen_wrapper_follow ( local_settings_file . Value ( ) , ""r"" ) ;"	219:1:5000:5073	5025036	5	True				
ANR	5025113	IdentifierDecl	"* in_fp = safe_fopen_wrapper_follow ( local_settings_file . Value ( ) , ""r"" )"		5025036	0					
ANR	5025114	IdentifierDeclType	FILE *		5025036	0					
ANR	5025115	Identifier	in_fp		5025036	1					
ANR	5025116	AssignmentExpression	"* in_fp = safe_fopen_wrapper_follow ( local_settings_file . Value ( ) , ""r"" )"		5025036	2		=			
ANR	5025117	Identifier	in_fp		5025036	0					
ANR	5025118	CallExpression	"safe_fopen_wrapper_follow ( local_settings_file . Value ( ) , ""r"" )"		5025036	1					
ANR	5025119	Callee	safe_fopen_wrapper_follow		5025036	0					
ANR	5025120	Identifier	safe_fopen_wrapper_follow		5025036	0					
ANR	5025121	ArgumentList	local_settings_file . Value ( )		5025036	1					
ANR	5025122	Argument	local_settings_file . Value ( )		5025036	0					
ANR	5025123	CallExpression	local_settings_file . Value ( )		5025036	0					
ANR	5025124	Callee	local_settings_file . Value		5025036	0					
ANR	5025125	MemberAccess	local_settings_file . Value		5025036	0					
ANR	5025126	Identifier	local_settings_file		5025036	0					
ANR	5025127	Identifier	Value		5025036	1					
ANR	5025128	ArgumentList			5025036	1					
ANR	5025129	Argument	"""r"""		5025036	1					
ANR	5025130	PrimaryExpression	"""r"""		5025036	0					
ANR	5025131	IfStatement	if ( in_fp == NULL )		5025036	6					
ANR	5025132	Condition	in_fp == NULL	220:5:5080:5092	5025036	0	True				
ANR	5025133	EqualityExpression	in_fp == NULL		5025036	0		==			
ANR	5025134	Identifier	in_fp		5025036	0					
ANR	5025135	Identifier	NULL		5025036	1					
ANR	5025136	CompoundStatement		17:20:424:424	5025036	1					
ANR	5025137	ExpressionStatement	"vmprintf ( D_ALWAYS , ""fopen error on %s: %s\\n"" , local_settings_file . Value ( ) , strerror ( errno ) )"	221:2:5099:5223	5025036	0	True				
ANR	5025138	CallExpression	"vmprintf ( D_ALWAYS , ""fopen error on %s: %s\\n"" , local_settings_file . Value ( ) , strerror ( errno ) )"		5025036	0					
ANR	5025139	Callee	vmprintf		5025036	0					
ANR	5025140	Identifier	vmprintf		5025036	0					
ANR	5025141	ArgumentList	D_ALWAYS		5025036	1					
ANR	5025142	Argument	D_ALWAYS		5025036	0					
ANR	5025143	Identifier	D_ALWAYS		5025036	0					
ANR	5025144	Argument	"""fopen error on %s: %s\\n"""		5025036	1					
ANR	5025145	PrimaryExpression	"""fopen error on %s: %s\\n"""		5025036	0					
ANR	5025146	Argument	local_settings_file . Value ( )		5025036	2					
ANR	5025147	CallExpression	local_settings_file . Value ( )		5025036	0					
ANR	5025148	Callee	local_settings_file . Value		5025036	0					
ANR	5025149	MemberAccess	local_settings_file . Value		5025036	0					
ANR	5025150	Identifier	local_settings_file		5025036	0					
ANR	5025151	Identifier	Value		5025036	1					
ANR	5025152	ArgumentList			5025036	1					
ANR	5025153	Argument	strerror ( errno )		5025036	3					
ANR	5025154	CallExpression	strerror ( errno )		5025036	0					
ANR	5025155	Callee	strerror		5025036	0					
ANR	5025156	Identifier	strerror		5025036	0					
ANR	5025157	ArgumentList	errno		5025036	1					
ANR	5025158	Argument	errno		5025036	0					
ANR	5025159	Identifier	errno		5025036	0					
ANR	5025160	ReturnStatement	return false ;	225:2:5227:5239	5025036	1	True				
ANR	5025161	Identifier	false		5025036	0					
ANR	5025162	IdentifierDeclStatement	MyString line ;	227:1:5245:5258	5025036	7	True				
ANR	5025163	IdentifierDecl	line		5025036	0					
ANR	5025164	IdentifierDeclType	MyString		5025036	0					
ANR	5025165	Identifier	line		5025036	1					
ANR	5025166	WhileStatement	while ( line . readLine ( in_fp ) )		5025036	8					
ANR	5025167	Condition	line . readLine ( in_fp )	228:8:5268:5287	5025036	0	True				
ANR	5025168	CallExpression	line . readLine ( in_fp )		5025036	0					
ANR	5025169	Callee	line . readLine		5025036	0					
ANR	5025170	MemberAccess	line . readLine		5025036	0					
ANR	5025171	Identifier	line		5025036	0					
ANR	5025172	Identifier	readLine		5025036	1					
ANR	5025173	ArgumentList	in_fp		5025036	1					
ANR	5025174	Argument	in_fp		5025036	0					
ANR	5025175	Identifier	in_fp		5025036	0					
ANR	5025176	CompoundStatement		25:30:619:619	5025036	1					
ANR	5025177	IfStatement	"if ( fputs ( line . Value ( ) , out_fp ) == EOF )"		5025036	0					
ANR	5025178	Condition	"fputs ( line . Value ( ) , out_fp ) == EOF"	229:6:5298:5331	5025036	0	True				
ANR	5025179	EqualityExpression	"fputs ( line . Value ( ) , out_fp ) == EOF"		5025036	0		==			
ANR	5025180	CallExpression	"fputs ( line . Value ( ) , out_fp )"		5025036	0					
ANR	5025181	Callee	fputs		5025036	0					
ANR	5025182	Identifier	fputs		5025036	0					
ANR	5025183	ArgumentList	line . Value ( )		5025036	1					
ANR	5025184	Argument	line . Value ( )		5025036	0					
ANR	5025185	CallExpression	line . Value ( )		5025036	0					
ANR	5025186	Callee	line . Value		5025036	0					
ANR	5025187	MemberAccess	line . Value		5025036	0					
ANR	5025188	Identifier	line		5025036	0					
ANR	5025189	Identifier	Value		5025036	1					
ANR	5025190	ArgumentList			5025036	1					
ANR	5025191	Argument	out_fp		5025036	1					
ANR	5025192	Identifier	out_fp		5025036	0					
ANR	5025193	Identifier	EOF		5025036	1					
ANR	5025194	CompoundStatement		26:42:663:663	5025036	1					
ANR	5025195	ExpressionStatement	"vmprintf ( D_ALWAYS , ""fputs error copying local settings: %s\\n"" , strerror ( errno ) )"	230:3:5339:5442	5025036	0	True				
ANR	5025196	CallExpression	"vmprintf ( D_ALWAYS , ""fputs error copying local settings: %s\\n"" , strerror ( errno ) )"		5025036	0					
ANR	5025197	Callee	vmprintf		5025036	0					
ANR	5025198	Identifier	vmprintf		5025036	0					
ANR	5025199	ArgumentList	D_ALWAYS		5025036	1					
ANR	5025200	Argument	D_ALWAYS		5025036	0					
ANR	5025201	Identifier	D_ALWAYS		5025036	0					
ANR	5025202	Argument	"""fputs error copying local settings: %s\\n"""		5025036	1					
ANR	5025203	PrimaryExpression	"""fputs error copying local settings: %s\\n"""		5025036	0					
ANR	5025204	Argument	strerror ( errno )		5025036	2					
ANR	5025205	CallExpression	strerror ( errno )		5025036	0					
ANR	5025206	Callee	strerror		5025036	0					
ANR	5025207	Identifier	strerror		5025036	0					
ANR	5025208	ArgumentList	errno		5025036	1					
ANR	5025209	Argument	errno		5025036	0					
ANR	5025210	Identifier	errno		5025036	0					
ANR	5025211	ExpressionStatement	fclose ( in_fp )	233:3:5447:5460	5025036	1	True				
ANR	5025212	CallExpression	fclose ( in_fp )		5025036	0					
ANR	5025213	Callee	fclose		5025036	0					
ANR	5025214	Identifier	fclose		5025036	0					
ANR	5025215	ArgumentList	in_fp		5025036	1					
ANR	5025216	Argument	in_fp		5025036	0					
ANR	5025217	Identifier	in_fp		5025036	0					
ANR	5025218	ReturnStatement	return false ;	234:3:5465:5477	5025036	2	True				
ANR	5025219	Identifier	false		5025036	0					
ANR	5025220	ExpressionStatement	fclose ( in_fp )	237:1:5487:5500	5025036	9	True				
ANR	5025221	CallExpression	fclose ( in_fp )		5025036	0					
ANR	5025222	Callee	fclose		5025036	0					
ANR	5025223	Identifier	fclose		5025036	0					
ANR	5025224	ArgumentList	in_fp		5025036	1					
ANR	5025225	Argument	in_fp		5025036	0					
ANR	5025226	Identifier	in_fp		5025036	0					
ANR	5025227	IfStatement	if ( end_mark != NULL )		5025036	10					
ANR	5025228	Condition	end_mark != NULL	238:5:5507:5522	5025036	0	True				
ANR	5025229	EqualityExpression	end_mark != NULL		5025036	0		!=			
ANR	5025230	Identifier	end_mark		5025036	0					
ANR	5025231	Identifier	NULL		5025036	1					
ANR	5025232	CompoundStatement		35:23:854:854	5025036	1					
ANR	5025233	IfStatement	"if ( fprintf ( out_fp , ""%s\\n"" , end_mark ) == EOF )"		5025036	0					
ANR	5025234	Condition	"fprintf ( out_fp , ""%s\\n"" , end_mark ) == EOF"	239:6:5533:5572	5025036	0	True				
ANR	5025235	EqualityExpression	"fprintf ( out_fp , ""%s\\n"" , end_mark ) == EOF"		5025036	0		==			
ANR	5025236	CallExpression	"fprintf ( out_fp , ""%s\\n"" , end_mark )"		5025036	0					
ANR	5025237	Callee	fprintf		5025036	0					
ANR	5025238	Identifier	fprintf		5025036	0					
ANR	5025239	ArgumentList	out_fp		5025036	1					
ANR	5025240	Argument	out_fp		5025036	0					
ANR	5025241	Identifier	out_fp		5025036	0					
ANR	5025242	Argument	"""%s\\n"""		5025036	1					
ANR	5025243	PrimaryExpression	"""%s\\n"""		5025036	0					
ANR	5025244	Argument	end_mark		5025036	2					
ANR	5025245	Identifier	end_mark		5025036	0					
ANR	5025246	Identifier	EOF		5025036	1					
ANR	5025247	CompoundStatement		36:48:904:904	5025036	1					
ANR	5025248	ExpressionStatement	"vmprintf ( D_ALWAYS , ""fputs error writing end marker: %s\\n"" , strerror ( errno ) )"	240:3:5580:5679	5025036	0	True				
ANR	5025249	CallExpression	"vmprintf ( D_ALWAYS , ""fputs error writing end marker: %s\\n"" , strerror ( errno ) )"		5025036	0					
ANR	5025250	Callee	vmprintf		5025036	0					
ANR	5025251	Identifier	vmprintf		5025036	0					
ANR	5025252	ArgumentList	D_ALWAYS		5025036	1					
ANR	5025253	Argument	D_ALWAYS		5025036	0					
ANR	5025254	Identifier	D_ALWAYS		5025036	0					
ANR	5025255	Argument	"""fputs error writing end marker: %s\\n"""		5025036	1					
ANR	5025256	PrimaryExpression	"""fputs error writing end marker: %s\\n"""		5025036	0					
ANR	5025257	Argument	strerror ( errno )		5025036	2					
ANR	5025258	CallExpression	strerror ( errno )		5025036	0					
ANR	5025259	Callee	strerror		5025036	0					
ANR	5025260	Identifier	strerror		5025036	0					
ANR	5025261	ArgumentList	errno		5025036	1					
ANR	5025262	Argument	errno		5025036	0					
ANR	5025263	Identifier	errno		5025036	0					
ANR	5025264	ReturnStatement	return false ;	243:3:5684:5696	5025036	1	True				
ANR	5025265	Identifier	false		5025036	0					
ANR	5025266	ReturnStatement	return true ;	246:1:5706:5717	5025036	11	True				
ANR	5025267	Identifier	true		5025036	0					
ANR	5025268	ReturnType	bool		5025036	1					
ANR	5025269	Identifier	write_local_settings_from_file		5025036	2					
ANR	5025270	ParameterList	"FILE * out_fp , const char * param_name , const char * start_mark , const char * end_mark"		5025036	3					
ANR	5025271	Parameter	FILE * out_fp	200:31:4493:4504	5025036	0	True				
ANR	5025272	ParameterType	FILE *		5025036	0					
ANR	5025273	Identifier	out_fp		5025036	1					
ANR	5025274	Parameter	const char * param_name	201:31:4538:4559	5025036	1	True				
ANR	5025275	ParameterType	const char *		5025036	0					
ANR	5025276	Identifier	param_name		5025036	1					
ANR	5025277	Parameter	const char * start_mark	202:31:4593:4614	5025036	2	True				
ANR	5025278	ParameterType	const char *		5025036	0					
ANR	5025279	Identifier	start_mark		5025036	1					
ANR	5025280	Parameter	const char * end_mark	203:31:4648:4667	5025036	3	True				
ANR	5025281	ParameterType	const char *		5025036	0					
ANR	5025282	Identifier	end_mark		5025036	1					
ANR	5025283	CFGEntryNode	ENTRY		5025036		True				
ANR	5025284	CFGExitNode	EXIT		5025036		True				
ANR	5025285	Symbol	line . readLine		5025036						
ANR	5025286	Symbol	errno		5025036						
ANR	5025287	Symbol	NULL		5025036						
ANR	5025288	Symbol	line . Value		5025036						
ANR	5025289	Symbol	line		5025036						
ANR	5025290	Symbol	end_mark		5025036						
ANR	5025291	Symbol	D_ALWAYS		5025036						
ANR	5025292	Symbol	false		5025036						
ANR	5025293	Symbol	local_settings_file		5025036						
ANR	5025294	Symbol	out_fp		5025036						
ANR	5025295	Symbol	fprintf		5025036						
ANR	5025296	Symbol	strerror		5025036						
ANR	5025297	Symbol	start_mark		5025036						
ANR	5025298	Symbol	param		5025036						
ANR	5025299	Symbol	tmp		5025036						
ANR	5025300	Symbol	true		5025036						
ANR	5025301	Symbol	fputs		5025036						
ANR	5025302	Symbol	local_settings_file . Value		5025036						
ANR	5025303	Symbol	param_name		5025036						
ANR	5025304	Symbol	safe_fopen_wrapper_follow		5025036						
ANR	5025305	Symbol	EOF		5025036						
ANR	5025306	Symbol	in_fp		5025036						
ANR	5025307	Function	parse_result_string	255:0:5977:6382							
ANR	5025308	FunctionDef	"parse_result_string (const char * result_string , int field_num)"		5025307	0					
ANR	5025309	CompoundStatement		256:0:6049:6382	5025307	0					
ANR	5025310	IdentifierDeclStatement	"StringList result_list ( result_string , "" "" ) ;"	257:1:6052:6094	5025307	0	True				
ANR	5025311	IdentifierDecl	"result_list ( result_string , "" "" )"		5025307	0					
ANR	5025312	IdentifierDeclType	StringList		5025307	0					
ANR	5025313	Identifier	result_list		5025307	1					
ANR	5025314	Expression	"result_string , "" """		5025307	2					
ANR	5025315	Identifier	result_string		5025307	0					
ANR	5025316	PrimaryExpression	""" """		5025307	1					
ANR	5025317	IfStatement	if ( result_list . isEmpty ( ) )		5025307	1					
ANR	5025318	Condition	result_list . isEmpty ( )	258:5:6101:6121	5025307	0	True				
ANR	5025319	CallExpression	result_list . isEmpty ( )		5025307	0					
ANR	5025320	Callee	result_list . isEmpty		5025307	0					
ANR	5025321	MemberAccess	result_list . isEmpty		5025307	0					
ANR	5025322	Identifier	result_list		5025307	0					
ANR	5025323	Identifier	isEmpty		5025307	1					
ANR	5025324	ArgumentList			5025307	1					
ANR	5025325	CompoundStatement		3:29:75:75	5025307	1					
ANR	5025326	ReturnStatement	"return """" ;"	259:2:6129:6138	5025307	0	True				
ANR	5025327	PrimaryExpression	""""""		5025307	0					
ANR	5025328	IfStatement	if ( field_num > result_list . number ( ) )		5025307	2					
ANR	5025329	Condition	field_num > result_list . number ( )	262:5:6149:6180	5025307	0	True				
ANR	5025330	RelationalExpression	field_num > result_list . number ( )		5025307	0		>			
ANR	5025331	Identifier	field_num		5025307	0					
ANR	5025332	CallExpression	result_list . number ( )		5025307	1					
ANR	5025333	Callee	result_list . number		5025307	0					
ANR	5025334	MemberAccess	result_list . number		5025307	0					
ANR	5025335	Identifier	result_list		5025307	0					
ANR	5025336	Identifier	number		5025307	1					
ANR	5025337	ArgumentList			5025307	1					
ANR	5025338	CompoundStatement		7:40:134:134	5025307	1					
ANR	5025339	ReturnStatement	"return """" ;"	263:2:6188:6197	5025307	0	True				
ANR	5025340	PrimaryExpression	""""""		5025307	0					
ANR	5025341	IdentifierDeclStatement	char * arg = NULL ;	266:1:6204:6220	5025307	3	True				
ANR	5025342	IdentifierDecl	* arg = NULL		5025307	0					
ANR	5025343	IdentifierDeclType	char *		5025307	0					
ANR	5025344	Identifier	arg		5025307	1					
ANR	5025345	AssignmentExpression	* arg = NULL		5025307	2		=			
ANR	5025346	Identifier	NULL		5025307	0					
ANR	5025347	Identifier	NULL		5025307	1					
ANR	5025348	IdentifierDeclStatement	int field = 0 ;	267:1:6223:6236	5025307	4	True				
ANR	5025349	IdentifierDecl	field = 0		5025307	0					
ANR	5025350	IdentifierDeclType	int		5025307	0					
ANR	5025351	Identifier	field		5025307	1					
ANR	5025352	AssignmentExpression	field = 0		5025307	2		=			
ANR	5025353	Identifier	field		5025307	0					
ANR	5025354	PrimaryExpression	0		5025307	1					
ANR	5025355	ExpressionStatement	result_list . rewind ( )	268:1:6239:6259	5025307	5	True				
ANR	5025356	CallExpression	result_list . rewind ( )		5025307	0					
ANR	5025357	Callee	result_list . rewind		5025307	0					
ANR	5025358	MemberAccess	result_list . rewind		5025307	0					
ANR	5025359	Identifier	result_list		5025307	0					
ANR	5025360	Identifier	rewind		5025307	1					
ANR	5025361	ArgumentList			5025307	1					
ANR	5025362	WhileStatement	while ( ( arg = result_list . next ( ) ) != NULL )		5025307	6					
ANR	5025363	Condition	( arg = result_list . next ( ) ) != NULL	269:8:6269:6302	5025307	0	True				
ANR	5025364	EqualityExpression	( arg = result_list . next ( ) ) != NULL		5025307	0		!=			
ANR	5025365	AssignmentExpression	arg = result_list . next ( )		5025307	0		=			
ANR	5025366	Identifier	arg		5025307	0					
ANR	5025367	CallExpression	result_list . next ( )		5025307	1					
ANR	5025368	Callee	result_list . next		5025307	0					
ANR	5025369	MemberAccess	result_list . next		5025307	0					
ANR	5025370	Identifier	result_list		5025307	0					
ANR	5025371	Identifier	next		5025307	1					
ANR	5025372	ArgumentList			5025307	1					
ANR	5025373	Identifier	NULL		5025307	1					
ANR	5025374	CompoundStatement		14:45:256:256	5025307	1					
ANR	5025375	ExpressionStatement	field ++	270:2:6310:6317	5025307	0	True				
ANR	5025376	PostIncDecOperationExpression	field ++		5025307	0					
ANR	5025377	Identifier	field		5025307	0					
ANR	5025378	IncDec	++		5025307	1					
ANR	5025379	IfStatement	if ( field == field_num )		5025307	1					
ANR	5025380	Condition	field == field_num	271:6:6325:6342	5025307	0	True				
ANR	5025381	EqualityExpression	field == field_num		5025307	0		==			
ANR	5025382	Identifier	field		5025307	0					
ANR	5025383	Identifier	field_num		5025307	1					
ANR	5025384	CompoundStatement		16:27:296:296	5025307	1					
ANR	5025385	ReturnStatement	return arg ;	272:3:6351:6361	5025307	0	True				
ANR	5025386	Identifier	arg		5025307	0					
ANR	5025387	ReturnStatement	"return """" ;"	275:1:6371:6380	5025307	7	True				
ANR	5025388	PrimaryExpression	""""""		5025307	0					
ANR	5025389	ReturnType	MyString		5025307	1					
ANR	5025390	Identifier	parse_result_string		5025307	2					
ANR	5025391	ParameterList	"const char * result_string , int field_num"		5025307	3					
ANR	5025392	Parameter	const char * result_string	255:30:6007:6031	5025307	0	True				
ANR	5025393	ParameterType	const char *		5025307	0					
ANR	5025394	Identifier	result_string		5025307	1					
ANR	5025395	Parameter	int field_num	255:57:6034:6046	5025307	1	True				
ANR	5025396	ParameterType	int		5025307	0					
ANR	5025397	Identifier	field_num		5025307	1					
ANR	5025398	CFGEntryNode	ENTRY		5025307		True				
ANR	5025399	CFGExitNode	EXIT		5025307		True				
ANR	5025400	Symbol	result_list . isEmpty		5025307						
ANR	5025401	Symbol	NULL		5025307						
ANR	5025402	Symbol	field		5025307						
ANR	5025403	Symbol	result_list . next		5025307						
ANR	5025404	Symbol	arg		5025307						
ANR	5025405	Symbol	result_list . number		5025307						
ANR	5025406	Symbol	result_list		5025307						
ANR	5025407	Symbol	result_string		5025307						
ANR	5025408	Symbol	field_num		5025307						
ANR	5025409	Function	verify_digit_arg	278:0:6385:6617							
ANR	5025410	FunctionDef	verify_digit_arg (const char * s)		5025409	0					
ANR	5025411	CompoundStatement		279:0:6422:6617	5025409	0					
ANR	5025412	IfStatement	if ( ! s )		5025409	0					
ANR	5025413	Condition	! s	280:5:6429:6430	5025409	0	True				
ANR	5025414	UnaryOperationExpression	! s		5025409	0					
ANR	5025415	UnaryOperator	!		5025409	0					
ANR	5025416	Identifier	s		5025409	1					
ANR	5025417	CompoundStatement		2:10:11:11	5025409	1					
ANR	5025418	ReturnStatement	return false ;	281:2:6438:6450	5025409	0	True				
ANR	5025419	Identifier	false		5025409	0					
ANR	5025420	IdentifierDeclStatement	unsigned int i = 0 ;	283:1:6456:6474	5025409	1	True				
ANR	5025421	IdentifierDecl	i = 0		5025409	0					
ANR	5025422	IdentifierDeclType	unsigned int		5025409	0					
ANR	5025423	Identifier	i		5025409	1					
ANR	5025424	AssignmentExpression	i = 0		5025409	2		=			
ANR	5025425	Identifier	i		5025409	0					
ANR	5025426	PrimaryExpression	0		5025409	1					
ANR	5025427	ForStatement	for ( i = 0 ; i < strlen ( s ) ; i ++ )		5025409	2					
ANR	5025428	ForInit	i = 0 ;	284:5:6481:6484	5025409	0	True				
ANR	5025429	AssignmentExpression	i = 0		5025409	0		=			
ANR	5025430	Identifier	i		5025409	0					
ANR	5025431	PrimaryExpression	0		5025409	1					
ANR	5025432	Condition	i < strlen ( s )	284:9:6485:6495	5025409	1	True				
ANR	5025433	RelationalExpression	i < strlen ( s )		5025409	0		<			
ANR	5025434	Identifier	i		5025409	0					
ANR	5025435	CallExpression	strlen ( s )		5025409	1					
ANR	5025436	Callee	strlen		5025409	0					
ANR	5025437	Identifier	strlen		5025409	0					
ANR	5025438	ArgumentList	s		5025409	1					
ANR	5025439	Argument	s		5025409	0					
ANR	5025440	Identifier	s		5025409	0					
ANR	5025441	PostIncDecOperationExpression	i ++	284:21:6497:6499	5025409	2	True				
ANR	5025442	Identifier	i		5025409	0					
ANR	5025443	IncDec	++		5025409	1					
ANR	5025444	CompoundStatement		6:26:79:79	5025409	3					
ANR	5025445	IfStatement	if ( ! isdigit ( s [ i ] ) )		5025409	0					
ANR	5025446	Condition	! isdigit ( s [ i ] )	285:5:6509:6522	5025409	0	True				
ANR	5025447	UnaryOperationExpression	! isdigit ( s [ i ] )		5025409	0					
ANR	5025448	UnaryOperator	!		5025409	0					
ANR	5025449	CallExpression	isdigit ( s [ i ] )		5025409	1					
ANR	5025450	Callee	isdigit		5025409	0					
ANR	5025451	Identifier	isdigit		5025409	0					
ANR	5025452	ArgumentList	s [ i ]		5025409	1					
ANR	5025453	Argument	s [ i ]		5025409	0					
ANR	5025454	ArrayIndexing	s [ i ]		5025409	0					
ANR	5025455	Identifier	s		5025409	0					
ANR	5025456	Identifier	i		5025409	1					
ANR	5025457	CompoundStatement		7:21:102:102	5025409	1					
ANR	5025458	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Arg(%s) is not digit\\n"" , s )"	286:3:6530:6577	5025409	0	True				
ANR	5025459	CallExpression	"vmprintf ( D_ALWAYS , ""Arg(%s) is not digit\\n"" , s )"		5025409	0					
ANR	5025460	Callee	vmprintf		5025409	0					
ANR	5025461	Identifier	vmprintf		5025409	0					
ANR	5025462	ArgumentList	D_ALWAYS		5025409	1					
ANR	5025463	Argument	D_ALWAYS		5025409	0					
ANR	5025464	Identifier	D_ALWAYS		5025409	0					
ANR	5025465	Argument	"""Arg(%s) is not digit\\n"""		5025409	1					
ANR	5025466	PrimaryExpression	"""Arg(%s) is not digit\\n"""		5025409	0					
ANR	5025467	Argument	s		5025409	2					
ANR	5025468	Identifier	s		5025409	0					
ANR	5025469	ReturnStatement	return false ;	287:3:6582:6594	5025409	1	True				
ANR	5025470	Identifier	false		5025409	0					
ANR	5025471	ReturnStatement	return true ;	290:1:6604:6615	5025409	3	True				
ANR	5025472	Identifier	true		5025409	0					
ANR	5025473	ReturnType	bool		5025409	1					
ANR	5025474	Identifier	verify_digit_arg		5025409	2					
ANR	5025475	ParameterList	const char * s		5025409	3					
ANR	5025476	Parameter	const char * s	278:22:6407:6419	5025409	0	True				
ANR	5025477	ParameterType	const char *		5025409	0					
ANR	5025478	Identifier	s		5025409	1					
ANR	5025479	CFGEntryNode	ENTRY		5025409		True				
ANR	5025480	CFGExitNode	EXIT		5025409		True				
ANR	5025481	Symbol	strlen		5025409						
ANR	5025482	Symbol	s		5025409						
ANR	5025483	Symbol	* i		5025409						
ANR	5025484	Symbol	false		5025409						
ANR	5025485	Symbol	D_ALWAYS		5025409						
ANR	5025486	Symbol	true		5025409						
ANR	5025487	Symbol	i		5025409						
ANR	5025488	Symbol	* s		5025409						
ANR	5025489	Symbol	isdigit		5025409						
ANR	5025490	Function	verify_number_args	293:0:6620:6814							
ANR	5025491	FunctionDef	"verify_number_args (const int is , const int should_be)"		5025490	0					
ANR	5025492	CompoundStatement		294:0:6680:6814	5025490	0					
ANR	5025493	IfStatement	if ( is != should_be )		5025490	0					
ANR	5025494	Condition	is != should_be	295:5:6687:6701	5025490	0	True				
ANR	5025495	EqualityExpression	is != should_be		5025490	0		!=			
ANR	5025496	Identifier	is		5025490	0					
ANR	5025497	Identifier	should_be		5025490	1					
ANR	5025498	CompoundStatement		2:22:23:23	5025490	1					
ANR	5025499	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Wrong # of args %d, should be %d\\n"" , is , should_be )"	296:2:6708:6779	5025490	0	True				
ANR	5025500	CallExpression	"vmprintf ( D_ALWAYS , ""Wrong # of args %d, should be %d\\n"" , is , should_be )"		5025490	0					
ANR	5025501	Callee	vmprintf		5025490	0					
ANR	5025502	Identifier	vmprintf		5025490	0					
ANR	5025503	ArgumentList	D_ALWAYS		5025490	1					
ANR	5025504	Argument	D_ALWAYS		5025490	0					
ANR	5025505	Identifier	D_ALWAYS		5025490	0					
ANR	5025506	Argument	"""Wrong # of args %d, should be %d\\n"""		5025490	1					
ANR	5025507	PrimaryExpression	"""Wrong # of args %d, should be %d\\n"""		5025490	0					
ANR	5025508	Argument	is		5025490	2					
ANR	5025509	Identifier	is		5025490	0					
ANR	5025510	Argument	should_be		5025490	3					
ANR	5025511	Identifier	should_be		5025490	0					
ANR	5025512	ReturnStatement	return false ;	297:2:6783:6795	5025490	1	True				
ANR	5025513	Identifier	false		5025490	0					
ANR	5025514	ReturnStatement	return true ;	299:1:6801:6812	5025490	1	True				
ANR	5025515	Identifier	true		5025490	0					
ANR	5025516	ReturnType	bool		5025490	1					
ANR	5025517	Identifier	verify_number_args		5025490	2					
ANR	5025518	ParameterList	"const int is , const int should_be"		5025490	3					
ANR	5025519	Parameter	const int is	293:24:6644:6655	5025490	0	True				
ANR	5025520	ParameterType	const int		5025490	0					
ANR	5025521	Identifier	is		5025490	1					
ANR	5025522	Parameter	const int should_be	293:38:6658:6676	5025490	1	True				
ANR	5025523	ParameterType	const int		5025490	0					
ANR	5025524	Identifier	should_be		5025490	1					
ANR	5025525	CFGEntryNode	ENTRY		5025490		True				
ANR	5025526	CFGExitNode	EXIT		5025490		True				
ANR	5025527	Symbol	D_ALWAYS		5025490						
ANR	5025528	Symbol	false		5025490						
ANR	5025529	Symbol	true		5025490						
ANR	5025530	Symbol	is		5025490						
ANR	5025531	Symbol	should_be		5025490						
ANR	5025532	Function	validate_vmgahp_result_string	303:0:6845:7613							
ANR	5025533	FunctionDef	validate_vmgahp_result_string (const char * result_string)		5025532	0					
ANR	5025534	CompoundStatement		304:0:6907:7613	5025532	0					
ANR	5025535	IdentifierDeclStatement	"StringList result_list ( result_string , "" "" ) ;"	305:1:6910:6952	5025532	0	True				
ANR	5025536	IdentifierDecl	"result_list ( result_string , "" "" )"		5025532	0					
ANR	5025537	IdentifierDeclType	StringList		5025532	0					
ANR	5025538	Identifier	result_list		5025532	1					
ANR	5025539	Expression	"result_string , "" """		5025532	2					
ANR	5025540	Identifier	result_string		5025532	0					
ANR	5025541	PrimaryExpression	""" """		5025532	1					
ANR	5025542	IfStatement	if ( result_list . isEmpty ( ) )		5025532	1					
ANR	5025543	Condition	result_list . isEmpty ( )	306:5:6959:6979	5025532	0	True				
ANR	5025544	CallExpression	result_list . isEmpty ( )		5025532	0					
ANR	5025545	Callee	result_list . isEmpty		5025532	0					
ANR	5025546	MemberAccess	result_list . isEmpty		5025532	0					
ANR	5025547	Identifier	result_list		5025532	0					
ANR	5025548	Identifier	isEmpty		5025532	1					
ANR	5025549	ArgumentList			5025532	1					
ANR	5025550	CompoundStatement		3:29:75:75	5025532	1					
ANR	5025551	ReturnStatement	return false ;	307:2:6987:6999	5025532	0	True				
ANR	5025552	Identifier	false		5025532	0					
ANR	5025553	IfStatement	if ( result_list . number ( ) < 3 )		5025532	2					
ANR	5025554	Condition	result_list . number ( ) < 3	313:4:7082:7105	5025532	0	True				
ANR	5025555	RelationalExpression	result_list . number ( ) < 3		5025532	0		<			
ANR	5025556	CallExpression	result_list . number ( )		5025532	0					
ANR	5025557	Callee	result_list . number		5025532	0					
ANR	5025558	MemberAccess	result_list . number		5025532	0					
ANR	5025559	Identifier	result_list		5025532	0					
ANR	5025560	Identifier	number		5025532	1					
ANR	5025561	ArgumentList			5025532	1					
ANR	5025562	PrimaryExpression	3		5025532	1					
ANR	5025563	CompoundStatement		10:31:201:201	5025532	1					
ANR	5025564	ReturnStatement	return false ;	314:2:7113:7125	5025532	0	True				
ANR	5025565	Identifier	false		5025532	0					
ANR	5025566	IdentifierDeclStatement	char * arg = NULL ;	317:1:7132:7148	5025532	3	True				
ANR	5025567	IdentifierDecl	* arg = NULL		5025532	0					
ANR	5025568	IdentifierDeclType	char *		5025532	0					
ANR	5025569	Identifier	arg		5025532	1					
ANR	5025570	AssignmentExpression	* arg = NULL		5025532	2		=			
ANR	5025571	Identifier	NULL		5025532	0					
ANR	5025572	Identifier	NULL		5025532	1					
ANR	5025573	ExpressionStatement	result_list . rewind ( )	318:1:7151:7171	5025532	4	True				
ANR	5025574	CallExpression	result_list . rewind ( )		5025532	0					
ANR	5025575	Callee	result_list . rewind		5025532	0					
ANR	5025576	MemberAccess	result_list . rewind		5025532	0					
ANR	5025577	Identifier	result_list		5025532	0					
ANR	5025578	Identifier	rewind		5025532	1					
ANR	5025579	ArgumentList			5025532	1					
ANR	5025580	ExpressionStatement	arg = result_list . next ( )	321:1:7203:7227	5025532	5	True				
ANR	5025581	AssignmentExpression	arg = result_list . next ( )		5025532	0		=			
ANR	5025582	Identifier	arg		5025532	0					
ANR	5025583	CallExpression	result_list . next ( )		5025532	1					
ANR	5025584	Callee	result_list . next		5025532	0					
ANR	5025585	MemberAccess	result_list . next		5025532	0					
ANR	5025586	Identifier	result_list		5025532	0					
ANR	5025587	Identifier	next		5025532	1					
ANR	5025588	ArgumentList			5025532	1					
ANR	5025589	IfStatement	if ( ! arg || ! verify_digit_arg ( arg ) )		5025532	6					
ANR	5025590	Condition	! arg || ! verify_digit_arg ( arg )	322:5:7234:7263	5025532	0	True				
ANR	5025591	OrExpression	! arg || ! verify_digit_arg ( arg )		5025532	0		||			
ANR	5025592	UnaryOperationExpression	! arg		5025532	0					
ANR	5025593	UnaryOperator	!		5025532	0					
ANR	5025594	Identifier	arg		5025532	1					
ANR	5025595	UnaryOperationExpression	! verify_digit_arg ( arg )		5025532	1					
ANR	5025596	UnaryOperator	!		5025532	0					
ANR	5025597	CallExpression	verify_digit_arg ( arg )		5025532	1					
ANR	5025598	Callee	verify_digit_arg		5025532	0					
ANR	5025599	Identifier	verify_digit_arg		5025532	0					
ANR	5025600	ArgumentList	arg		5025532	1					
ANR	5025601	Argument	arg		5025532	0					
ANR	5025602	Identifier	arg		5025532	0					
ANR	5025603	CompoundStatement		19:37:358:358	5025532	1					
ANR	5025604	ExpressionStatement	"vmprintf ( D_ALWAYS , ""First arg in result must be digit: %s\\n"" , result_string )"	323:2:7270:7346	5025532	0	True				
ANR	5025605	CallExpression	"vmprintf ( D_ALWAYS , ""First arg in result must be digit: %s\\n"" , result_string )"		5025532	0					
ANR	5025606	Callee	vmprintf		5025532	0					
ANR	5025607	Identifier	vmprintf		5025532	0					
ANR	5025608	ArgumentList	D_ALWAYS		5025532	1					
ANR	5025609	Argument	D_ALWAYS		5025532	0					
ANR	5025610	Identifier	D_ALWAYS		5025532	0					
ANR	5025611	Argument	"""First arg in result must be digit: %s\\n"""		5025532	1					
ANR	5025612	PrimaryExpression	"""First arg in result must be digit: %s\\n"""		5025532	0					
ANR	5025613	Argument	result_string		5025532	2					
ANR	5025614	Identifier	result_string		5025532	0					
ANR	5025615	ReturnStatement	return false ;	324:2:7350:7362	5025532	1	True				
ANR	5025616	Identifier	false		5025532	0					
ANR	5025617	ExpressionStatement	arg = result_list . next ( )	328:1:7406:7430	5025532	7	True				
ANR	5025618	AssignmentExpression	arg = result_list . next ( )		5025532	0		=			
ANR	5025619	Identifier	arg		5025532	0					
ANR	5025620	CallExpression	result_list . next ( )		5025532	1					
ANR	5025621	Callee	result_list . next		5025532	0					
ANR	5025622	MemberAccess	result_list . next		5025532	0					
ANR	5025623	Identifier	result_list		5025532	0					
ANR	5025624	Identifier	next		5025532	1					
ANR	5025625	ArgumentList			5025532	1					
ANR	5025626	IfStatement	"if ( ! arg || ( strcmp ( arg , ""0"" ) && strcmp ( arg , ""1"" ) ) )"		5025532	8					
ANR	5025627	Condition	"! arg || ( strcmp ( arg , ""0"" ) && strcmp ( arg , ""1"" ) )"	329:5:7437:7484	5025532	0	True				
ANR	5025628	OrExpression	"! arg || ( strcmp ( arg , ""0"" ) && strcmp ( arg , ""1"" ) )"		5025532	0		||			
ANR	5025629	UnaryOperationExpression	! arg		5025532	0					
ANR	5025630	UnaryOperator	!		5025532	0					
ANR	5025631	Identifier	arg		5025532	1					
ANR	5025632	AndExpression	"strcmp ( arg , ""0"" ) && strcmp ( arg , ""1"" )"		5025532	1		&&			
ANR	5025633	CallExpression	"strcmp ( arg , ""0"" )"		5025532	0					
ANR	5025634	Callee	strcmp		5025532	0					
ANR	5025635	Identifier	strcmp		5025532	0					
ANR	5025636	ArgumentList	arg		5025532	1					
ANR	5025637	Argument	arg		5025532	0					
ANR	5025638	Identifier	arg		5025532	0					
ANR	5025639	Argument	"""0"""		5025532	1					
ANR	5025640	PrimaryExpression	"""0"""		5025532	0					
ANR	5025641	CallExpression	"strcmp ( arg , ""1"" )"		5025532	1					
ANR	5025642	Callee	strcmp		5025532	0					
ANR	5025643	Identifier	strcmp		5025532	0					
ANR	5025644	ArgumentList	arg		5025532	1					
ANR	5025645	Argument	arg		5025532	0					
ANR	5025646	Identifier	arg		5025532	0					
ANR	5025647	Argument	"""1"""		5025532	1					
ANR	5025648	PrimaryExpression	"""1"""		5025532	0					
ANR	5025649	CompoundStatement		26:56:580:580	5025532	1					
ANR	5025650	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Second arg in result must be either 0 or 1: %s\\n"" , result_string )"	330:2:7492:7577	5025532	0	True				
ANR	5025651	CallExpression	"vmprintf ( D_ALWAYS , ""Second arg in result must be either 0 or 1: %s\\n"" , result_string )"		5025532	0					
ANR	5025652	Callee	vmprintf		5025532	0					
ANR	5025653	Identifier	vmprintf		5025532	0					
ANR	5025654	ArgumentList	D_ALWAYS		5025532	1					
ANR	5025655	Argument	D_ALWAYS		5025532	0					
ANR	5025656	Identifier	D_ALWAYS		5025532	0					
ANR	5025657	Argument	"""Second arg in result must be either 0 or 1: %s\\n"""		5025532	1					
ANR	5025658	PrimaryExpression	"""Second arg in result must be either 0 or 1: %s\\n"""		5025532	0					
ANR	5025659	Argument	result_string		5025532	2					
ANR	5025660	Identifier	result_string		5025532	0					
ANR	5025661	ReturnStatement	return false ;	331:2:7581:7593	5025532	1	True				
ANR	5025662	Identifier	false		5025532	0					
ANR	5025663	ReturnStatement	return true ;	334:1:7600:7611	5025532	9	True				
ANR	5025664	Identifier	true		5025532	0					
ANR	5025665	ReturnType	bool		5025532	1					
ANR	5025666	Identifier	validate_vmgahp_result_string		5025532	2					
ANR	5025667	ParameterList	const char * result_string		5025532	3					
ANR	5025668	Parameter	const char * result_string	303:35:6880:6904	5025532	0	True				
ANR	5025669	ParameterType	const char *		5025532	0					
ANR	5025670	Identifier	result_string		5025532	1					
ANR	5025671	CFGEntryNode	ENTRY		5025532		True				
ANR	5025672	CFGExitNode	EXIT		5025532		True				
ANR	5025673	Symbol	strcmp		5025532						
ANR	5025674	Symbol	result_list . isEmpty		5025532						
ANR	5025675	Symbol	NULL		5025532						
ANR	5025676	Symbol	result_list . next		5025532						
ANR	5025677	Symbol	arg		5025532						
ANR	5025678	Symbol	false		5025532						
ANR	5025679	Symbol	result_list . number		5025532						
ANR	5025680	Symbol	D_ALWAYS		5025532						
ANR	5025681	Symbol	true		5025532						
ANR	5025682	Symbol	result_list		5025532						
ANR	5025683	Symbol	verify_digit_arg		5025532						
ANR	5025684	Symbol	result_string		5025532						
ANR	5025685	Function	write_to_daemoncore_pipe	337:0:7616:7816							
ANR	5025686	FunctionDef	"write_to_daemoncore_pipe (int pipefd , const char * str , int len)"		5025685	0					
ANR	5025687	CompoundStatement		339:0:7684:7816	5025685	0					
ANR	5025688	IfStatement	if ( pipefd == - 1 || ! str || len <= 0 || ! daemonCore )		5025685	0					
ANR	5025689	Condition	pipefd == - 1 || ! str || len <= 0 || ! daemonCore	340:5:7691:7737	5025685	0	True				
ANR	5025690	OrExpression	pipefd == - 1 || ! str || len <= 0 || ! daemonCore		5025685	0		||			
ANR	5025691	EqualityExpression	pipefd == - 1		5025685	0		==			
ANR	5025692	Identifier	pipefd		5025685	0					
ANR	5025693	UnaryOperationExpression	- 1		5025685	1					
ANR	5025694	UnaryOperator	-		5025685	0					
ANR	5025695	PrimaryExpression	1		5025685	1					
ANR	5025696	OrExpression	! str || len <= 0 || ! daemonCore		5025685	1		||			
ANR	5025697	UnaryOperationExpression	! str		5025685	0					
ANR	5025698	UnaryOperator	!		5025685	0					
ANR	5025699	Identifier	str		5025685	1					
ANR	5025700	OrExpression	len <= 0 || ! daemonCore		5025685	1		||			
ANR	5025701	RelationalExpression	len <= 0		5025685	0		<=			
ANR	5025702	Identifier	len		5025685	0					
ANR	5025703	PrimaryExpression	0		5025685	1					
ANR	5025704	UnaryOperationExpression	! daemonCore		5025685	1					
ANR	5025705	UnaryOperator	!		5025685	0					
ANR	5025706	Identifier	daemonCore		5025685	1					
ANR	5025707	CompoundStatement		2:55:56:56	5025685	1					
ANR	5025708	ReturnStatement	return ;	341:2:7745:7751	5025685	0	True				
ANR	5025709	ExpressionStatement	"daemonCore -> Write_Pipe ( pipefd , str , len )"	345:1:7773:7814	5025685	1	True				
ANR	5025710	CallExpression	"daemonCore -> Write_Pipe ( pipefd , str , len )"		5025685	0					
ANR	5025711	Callee	daemonCore -> Write_Pipe		5025685	0					
ANR	5025712	PtrMemberAccess	daemonCore -> Write_Pipe		5025685	0					
ANR	5025713	Identifier	daemonCore		5025685	0					
ANR	5025714	Identifier	Write_Pipe		5025685	1					
ANR	5025715	ArgumentList	pipefd		5025685	1					
ANR	5025716	Argument	pipefd		5025685	0					
ANR	5025717	Identifier	pipefd		5025685	0					
ANR	5025718	Argument	str		5025685	1					
ANR	5025719	Identifier	str		5025685	0					
ANR	5025720	Argument	len		5025685	2					
ANR	5025721	Identifier	len		5025685	0					
ANR	5025722	ReturnType	void		5025685	1					
ANR	5025723	Identifier	write_to_daemoncore_pipe		5025685	2					
ANR	5025724	ParameterList	"int pipefd , const char * str , int len"		5025685	3					
ANR	5025725	Parameter	int pipefd	338:25:7646:7655	5025685	0	True				
ANR	5025726	ParameterType	int		5025685	0					
ANR	5025727	Identifier	pipefd		5025685	1					
ANR	5025728	Parameter	const char * str	338:37:7658:7672	5025685	1	True				
ANR	5025729	ParameterType	const char *		5025685	0					
ANR	5025730	Identifier	str		5025685	1					
ANR	5025731	Parameter	int len	338:54:7675:7681	5025685	2	True				
ANR	5025732	ParameterType	int		5025685	0					
ANR	5025733	Identifier	len		5025685	1					
ANR	5025734	CFGEntryNode	ENTRY		5025685		True				
ANR	5025735	CFGExitNode	EXIT		5025685		True				
ANR	5025736	Symbol	str		5025685						
ANR	5025737	Symbol	len		5025685						
ANR	5025738	Symbol	pipefd		5025685						
ANR	5025739	Symbol	daemonCore		5025685						
ANR	5025740	Function	write_to_daemoncore_pipe	348:0:7819:8105							
ANR	5025741	FunctionDef	write_to_daemoncore_pipe (const char * fmt)		5025740	0					
ANR	5025742	CompoundStatement		350:0:7872:8105	5025740	0					
ANR	5025743	IfStatement	if ( vmgahp_stdout_pipe == - 1 )		5025740	0					
ANR	5025744	Condition	vmgahp_stdout_pipe == - 1	351:5:7879:7902	5025740	0	True				
ANR	5025745	EqualityExpression	vmgahp_stdout_pipe == - 1		5025740	0		==			
ANR	5025746	Identifier	vmgahp_stdout_pipe		5025740	0					
ANR	5025747	UnaryOperationExpression	- 1		5025740	1					
ANR	5025748	UnaryOperator	-		5025740	0					
ANR	5025749	PrimaryExpression	1		5025740	1					
ANR	5025750	CompoundStatement		2:32:33:33	5025740	1					
ANR	5025751	ReturnStatement	return ;	352:2:7910:7916	5025740	0	True				
ANR	5025752	IdentifierDeclStatement	MyString output ;	355:1:7923:7938	5025740	1	True				
ANR	5025753	IdentifierDecl	output		5025740	0					
ANR	5025754	IdentifierDeclType	MyString		5025740	0					
ANR	5025755	Identifier	output		5025740	1					
ANR	5025756	IdentifierDeclStatement	va_list args ;	356:1:7941:7953	5025740	2	True				
ANR	5025757	IdentifierDecl	args		5025740	0					
ANR	5025758	IdentifierDeclType	va_list		5025740	0					
ANR	5025759	Identifier	args		5025740	1					
ANR	5025760	ExpressionStatement	"va_start ( args , fmt )"	357:1:7956:7975	5025740	3	True				
ANR	5025761	CallExpression	"va_start ( args , fmt )"		5025740	0					
ANR	5025762	Callee	va_start		5025740	0					
ANR	5025763	Identifier	va_start		5025740	0					
ANR	5025764	ArgumentList	args		5025740	1					
ANR	5025765	Argument	args		5025740	0					
ANR	5025766	Identifier	args		5025740	0					
ANR	5025767	Argument	fmt		5025740	1					
ANR	5025768	Identifier	fmt		5025740	0					
ANR	5025769	ExpressionStatement	"output . vsprintf ( fmt , args )"	358:1:7978:8004	5025740	4	True				
ANR	5025770	CallExpression	"output . vsprintf ( fmt , args )"		5025740	0					
ANR	5025771	Callee	output . vsprintf		5025740	0					
ANR	5025772	MemberAccess	output . vsprintf		5025740	0					
ANR	5025773	Identifier	output		5025740	0					
ANR	5025774	Identifier	vsprintf		5025740	1					
ANR	5025775	ArgumentList	fmt		5025740	1					
ANR	5025776	Argument	fmt		5025740	0					
ANR	5025777	Identifier	fmt		5025740	0					
ANR	5025778	Argument	args		5025740	1					
ANR	5025779	Identifier	args		5025740	0					
ANR	5025780	ExpressionStatement	"write_to_daemoncore_pipe ( vmgahp_stdout_pipe , output . Value ( ) , output . Length ( ) )"	359:1:8007:8088	5025740	5	True				
ANR	5025781	CallExpression	"write_to_daemoncore_pipe ( vmgahp_stdout_pipe , output . Value ( ) , output . Length ( ) )"		5025740	0					
ANR	5025782	Callee	write_to_daemoncore_pipe		5025740	0					
ANR	5025783	Identifier	write_to_daemoncore_pipe		5025740	0					
ANR	5025784	ArgumentList	vmgahp_stdout_pipe		5025740	1					
ANR	5025785	Argument	vmgahp_stdout_pipe		5025740	0					
ANR	5025786	Identifier	vmgahp_stdout_pipe		5025740	0					
ANR	5025787	Argument	output . Value ( )		5025740	1					
ANR	5025788	CallExpression	output . Value ( )		5025740	0					
ANR	5025789	Callee	output . Value		5025740	0					
ANR	5025790	MemberAccess	output . Value		5025740	0					
ANR	5025791	Identifier	output		5025740	0					
ANR	5025792	Identifier	Value		5025740	1					
ANR	5025793	ArgumentList			5025740	1					
ANR	5025794	Argument	output . Length ( )		5025740	2					
ANR	5025795	CallExpression	output . Length ( )		5025740	0					
ANR	5025796	Callee	output . Length		5025740	0					
ANR	5025797	MemberAccess	output . Length		5025740	0					
ANR	5025798	Identifier	output		5025740	0					
ANR	5025799	Identifier	Length		5025740	1					
ANR	5025800	ArgumentList			5025740	1					
ANR	5025801	ExpressionStatement	va_end ( args )	361:1:8091:8103	5025740	6	True				
ANR	5025802	CallExpression	va_end ( args )		5025740	0					
ANR	5025803	Callee	va_end		5025740	0					
ANR	5025804	Identifier	va_end		5025740	0					
ANR	5025805	ArgumentList	args		5025740	1					
ANR	5025806	Argument	args		5025740	0					
ANR	5025807	Identifier	args		5025740	0					
ANR	5025808	ReturnType	void		5025740	1					
ANR	5025809	Identifier	write_to_daemoncore_pipe		5025740	2					
ANR	5025810	ParameterList	const char * fmt		5025740	3					
ANR	5025811	Parameter	const char * fmt	349:25:7849:7863	5025740	0	True				
ANR	5025812	ParameterType	const char *		5025740	0					
ANR	5025813	Identifier	fmt		5025740	1					
ANR	5025814	CFGEntryNode	ENTRY		5025740		True				
ANR	5025815	CFGExitNode	EXIT		5025740		True				
ANR	5025816	Symbol	output		5025740						
ANR	5025817	Symbol	args		5025740						
ANR	5025818	Symbol	output . Length		5025740						
ANR	5025819	Symbol	output . Value		5025740						
ANR	5025820	Symbol	vmgahp_stdout_pipe		5025740						
ANR	5025821	Symbol	fmt		5025740						
ANR	5025822	Function	write_stderr_to_pipe	364:0:8108:8403							
ANR	5025823	FunctionDef	write_stderr_to_pipe ()		5025822	0					
ANR	5025824	CompoundStatement		366:0:8136:8403	5025822	0					
ANR	5025825	IfStatement	if ( vmgahp_stderr_pipe == - 1 )		5025822	0					
ANR	5025826	Condition	vmgahp_stderr_pipe == - 1	367:5:8143:8166	5025822	0	True				
ANR	5025827	EqualityExpression	vmgahp_stderr_pipe == - 1		5025822	0		==			
ANR	5025828	Identifier	vmgahp_stderr_pipe		5025822	0					
ANR	5025829	UnaryOperationExpression	- 1		5025822	1					
ANR	5025830	UnaryOperator	-		5025822	0					
ANR	5025831	PrimaryExpression	1		5025822	1					
ANR	5025832	CompoundStatement		2:32:33:33	5025822	1					
ANR	5025833	ReturnStatement	return ;	368:2:8174:8180	5025822	0	True				
ANR	5025834	ExpressionStatement	vmgahp_stderr_buffer . Write ( )	371:1:8187:8215	5025822	1	True				
ANR	5025835	CallExpression	vmgahp_stderr_buffer . Write ( )		5025822	0					
ANR	5025836	Callee	vmgahp_stderr_buffer . Write		5025822	0					
ANR	5025837	MemberAccess	vmgahp_stderr_buffer . Write		5025822	0					
ANR	5025838	Identifier	vmgahp_stderr_buffer		5025822	0					
ANR	5025839	Identifier	Write		5025822	1					
ANR	5025840	ArgumentList			5025822	1					
ANR	5025841	IfStatement	if ( vmgahp_stderr_buffer . IsError ( ) )		5025822	2					
ANR	5025842	Condition	vmgahp_stderr_buffer . IsError ( )	373:5:8223:8252	5025822	0	True				
ANR	5025843	CallExpression	vmgahp_stderr_buffer . IsError ( )		5025822	0					
ANR	5025844	Callee	vmgahp_stderr_buffer . IsError		5025822	0					
ANR	5025845	MemberAccess	vmgahp_stderr_buffer . IsError		5025822	0					
ANR	5025846	Identifier	vmgahp_stderr_buffer		5025822	0					
ANR	5025847	Identifier	IsError		5025822	1					
ANR	5025848	ArgumentList			5025822	1					
ANR	5025849	CompoundStatement		8:38:119:119	5025822	1					
ANR	5025850	IfStatement	if ( vmgahp_stderr_tid != - 1 )		5025822	0					
ANR	5025851	Condition	vmgahp_stderr_tid != - 1	374:6:8265:8287	5025822	0	True				
ANR	5025852	EqualityExpression	vmgahp_stderr_tid != - 1		5025822	0		!=			
ANR	5025853	Identifier	vmgahp_stderr_tid		5025822	0					
ANR	5025854	UnaryOperationExpression	- 1		5025822	1					
ANR	5025855	UnaryOperator	-		5025822	0					
ANR	5025856	PrimaryExpression	1		5025822	1					
ANR	5025857	CompoundStatement		9:32:154:154	5025822	1					
ANR	5025858	ExpressionStatement	daemonCore -> Cancel_Timer ( vmgahp_stderr_tid )	375:3:8296:8339	5025822	0	True				
ANR	5025859	CallExpression	daemonCore -> Cancel_Timer ( vmgahp_stderr_tid )		5025822	0					
ANR	5025860	Callee	daemonCore -> Cancel_Timer		5025822	0					
ANR	5025861	PtrMemberAccess	daemonCore -> Cancel_Timer		5025822	0					
ANR	5025862	Identifier	daemonCore		5025822	0					
ANR	5025863	Identifier	Cancel_Timer		5025822	1					
ANR	5025864	ArgumentList	vmgahp_stderr_tid		5025822	1					
ANR	5025865	Argument	vmgahp_stderr_tid		5025822	0					
ANR	5025866	Identifier	vmgahp_stderr_tid		5025822	0					
ANR	5025867	ExpressionStatement	vmgahp_stderr_tid = - 1	376:3:8344:8366	5025822	1	True				
ANR	5025868	AssignmentExpression	vmgahp_stderr_tid = - 1		5025822	0		=			
ANR	5025869	Identifier	vmgahp_stderr_tid		5025822	0					
ANR	5025870	UnaryOperationExpression	- 1		5025822	1					
ANR	5025871	UnaryOperator	-		5025822	0					
ANR	5025872	PrimaryExpression	1		5025822	1					
ANR	5025873	ExpressionStatement	vmgahp_stderr_pipe = - 1	377:3:8371:8394	5025822	2	True				
ANR	5025874	AssignmentExpression	vmgahp_stderr_pipe = - 1		5025822	0		=			
ANR	5025875	Identifier	vmgahp_stderr_pipe		5025822	0					
ANR	5025876	UnaryOperationExpression	- 1		5025822	1					
ANR	5025877	UnaryOperator	-		5025822	0					
ANR	5025878	PrimaryExpression	1		5025822	1					
ANR	5025879	ReturnType	void		5025822	1					
ANR	5025880	Identifier	write_stderr_to_pipe		5025822	2					
ANR	5025881	ParameterList			5025822	3					
ANR	5025882	CFGEntryNode	ENTRY		5025822		True				
ANR	5025883	CFGExitNode	EXIT		5025822		True				
ANR	5025884	Symbol	vmgahp_stderr_buffer		5025822						
ANR	5025885	Symbol	vmgahp_stderr_pipe		5025822						
ANR	5025886	Symbol	daemonCore		5025822						
ANR	5025887	Symbol	vmgahp_stderr_buffer . IsError		5025822						
ANR	5025888	Symbol	vmgahp_stderr_tid		5025822						
ANR	5025889	Function	vmprintf	382:0:8406:9380							
ANR	5025890	FunctionDef	"vmprintf (int flags , const char * fmt)"		5025889	0					
ANR	5025891	CompoundStatement		383:0:8456:9380	5025889	0					
ANR	5025892	IdentifierDeclStatement	int saved_flags = 0 ;	384:1:8459:8478	5025889	0	True				
ANR	5025893	IdentifierDecl	saved_flags = 0		5025889	0					
ANR	5025894	IdentifierDeclType	int		5025889	0					
ANR	5025895	Identifier	saved_flags		5025889	1					
ANR	5025896	AssignmentExpression	saved_flags = 0		5025889	2		=			
ANR	5025897	Identifier	saved_flags		5025889	0					
ANR	5025898	PrimaryExpression	0		5025889	1					
ANR	5025899	Statement	static	385:1:8481:8486	5025889	1	True				
ANR	5025900	IdentifierDeclStatement	pid_t mypid = 0 ;	385:8:8488:8503	5025889	2	True				
ANR	5025901	IdentifierDecl	mypid = 0		5025889	0					
ANR	5025902	IdentifierDeclType	pid_t		5025889	0					
ANR	5025903	Identifier	mypid		5025889	1					
ANR	5025904	AssignmentExpression	mypid = 0		5025889	2		=			
ANR	5025905	Identifier	mypid		5025889	0					
ANR	5025906	PrimaryExpression	0		5025889	1					
ANR	5025907	IfStatement	if ( ! mypid )		5025889	3					
ANR	5025908	Condition	! mypid	387:5:8511:8516	5025889	0	True				
ANR	5025909	UnaryOperationExpression	! mypid		5025889	0					
ANR	5025910	UnaryOperator	!		5025889	0					
ANR	5025911	Identifier	mypid		5025889	1					
ANR	5025912	CompoundStatement		5:14:63:63	5025889	1					
ANR	5025913	ExpressionStatement	mypid = daemonCore -> getpid ( )	388:2:8524:8552	5025889	0	True				
ANR	5025914	AssignmentExpression	mypid = daemonCore -> getpid ( )		5025889	0		=			
ANR	5025915	Identifier	mypid		5025889	0					
ANR	5025916	CallExpression	daemonCore -> getpid ( )		5025889	1					
ANR	5025917	Callee	daemonCore -> getpid		5025889	0					
ANR	5025918	PtrMemberAccess	daemonCore -> getpid		5025889	0					
ANR	5025919	Identifier	daemonCore		5025889	0					
ANR	5025920	Identifier	getpid		5025889	1					
ANR	5025921	ArgumentList			5025889	1					
ANR	5025922	IfStatement	if ( ! fmt )		5025889	4					
ANR	5025923	Condition	! fmt	391:5:8563:8566	5025889	0	True				
ANR	5025924	UnaryOperationExpression	! fmt		5025889	0					
ANR	5025925	UnaryOperator	!		5025889	0					
ANR	5025926	Identifier	fmt		5025889	1					
ANR	5025927	CompoundStatement		9:12:113:113	5025889	1					
ANR	5025928	ReturnStatement	return ;	392:2:8574:8580	5025889	0	True				
ANR	5025929	IfStatement	if ( ! ( flags & oriDebugFlags ) )		5025889	5					
ANR	5025930	Condition	! ( flags & oriDebugFlags )	395:5:8591:8614	5025889	0	True				
ANR	5025931	UnaryOperationExpression	! ( flags & oriDebugFlags )		5025889	0					
ANR	5025932	UnaryOperator	!		5025889	0					
ANR	5025933	BitAndExpression	flags & oriDebugFlags		5025889	1		&			
ANR	5025934	Identifier	flags		5025889	0					
ANR	5025935	Identifier	oriDebugFlags		5025889	1					
ANR	5025936	CompoundStatement		13:32:161:161	5025889	1					
ANR	5025937	ReturnStatement	return ;	396:2:8622:8628	5025889	0	True				
ANR	5025938	ExpressionStatement	saved_flags = oriDebugFlags	399:1:8635:8662	5025889	6	True				
ANR	5025939	AssignmentExpression	saved_flags = oriDebugFlags		5025889	0		=			
ANR	5025940	Identifier	saved_flags		5025889	0					
ANR	5025941	Identifier	oriDebugFlags		5025889	1					
ANR	5025942	ExpressionStatement	oriDebugFlags = 0	400:1:8693:8710	5025889	7	True				
ANR	5025943	AssignmentExpression	oriDebugFlags = 0		5025889	0		=			
ANR	5025944	Identifier	oriDebugFlags		5025889	0					
ANR	5025945	PrimaryExpression	0		5025889	1					
ANR	5025946	IdentifierDeclStatement	MyString output ;	402:1:8714:8729	5025889	8	True				
ANR	5025947	IdentifierDecl	output		5025889	0					
ANR	5025948	IdentifierDeclType	MyString		5025889	0					
ANR	5025949	Identifier	output		5025889	1					
ANR	5025950	IdentifierDeclStatement	va_list args ;	403:1:8732:8744	5025889	9	True				
ANR	5025951	IdentifierDecl	args		5025889	0					
ANR	5025952	IdentifierDeclType	va_list		5025889	0					
ANR	5025953	Identifier	args		5025889	1					
ANR	5025954	ExpressionStatement	"va_start ( args , fmt )"	404:1:8747:8766	5025889	10	True				
ANR	5025955	CallExpression	"va_start ( args , fmt )"		5025889	0					
ANR	5025956	Callee	va_start		5025889	0					
ANR	5025957	Identifier	va_start		5025889	0					
ANR	5025958	ArgumentList	args		5025889	1					
ANR	5025959	Argument	args		5025889	0					
ANR	5025960	Identifier	args		5025889	0					
ANR	5025961	Argument	fmt		5025889	1					
ANR	5025962	Identifier	fmt		5025889	0					
ANR	5025963	ExpressionStatement	"output . vsprintf ( fmt , args )"	405:1:8769:8795	5025889	11	True				
ANR	5025964	CallExpression	"output . vsprintf ( fmt , args )"		5025889	0					
ANR	5025965	Callee	output . vsprintf		5025889	0					
ANR	5025966	MemberAccess	output . vsprintf		5025889	0					
ANR	5025967	Identifier	output		5025889	0					
ANR	5025968	Identifier	vsprintf		5025889	1					
ANR	5025969	ArgumentList	fmt		5025889	1					
ANR	5025970	Argument	fmt		5025889	0					
ANR	5025971	Identifier	fmt		5025889	0					
ANR	5025972	Argument	args		5025889	1					
ANR	5025973	Identifier	args		5025889	0					
ANR	5025974	ExpressionStatement	va_end ( args )	406:1:8798:8810	5025889	12	True				
ANR	5025975	CallExpression	va_end ( args )		5025889	0					
ANR	5025976	Callee	va_end		5025889	0					
ANR	5025977	Identifier	va_end		5025889	0					
ANR	5025978	ArgumentList	args		5025889	1					
ANR	5025979	Argument	args		5025889	0					
ANR	5025980	Identifier	args		5025889	0					
ANR	5025981	IfStatement	if ( output . IsEmpty ( ) )		5025889	13					
ANR	5025982	Condition	output . IsEmpty ( )	407:5:8817:8832	5025889	0	True				
ANR	5025983	CallExpression	output . IsEmpty ( )		5025889	0					
ANR	5025984	Callee	output . IsEmpty		5025889	0					
ANR	5025985	MemberAccess	output . IsEmpty		5025889	0					
ANR	5025986	Identifier	output		5025889	0					
ANR	5025987	Identifier	IsEmpty		5025889	1					
ANR	5025988	ArgumentList			5025889	1					
ANR	5025989	CompoundStatement		25:24:379:379	5025889	1					
ANR	5025990	ExpressionStatement	oriDebugFlags = saved_flags	408:2:8840:8867	5025889	0	True				
ANR	5025991	AssignmentExpression	oriDebugFlags = saved_flags		5025889	0		=			
ANR	5025992	Identifier	oriDebugFlags		5025889	0					
ANR	5025993	Identifier	saved_flags		5025889	1					
ANR	5025994	ReturnStatement	return ;	409:2:8871:8877	5025889	1	True				
ANR	5025995	IfStatement	if ( Termlog )		5025889	14					
ANR	5025996	Condition	Termlog	412:5:8888:8894	5025889	0	True				
ANR	5025997	Identifier	Termlog		5025889	0					
ANR	5025998	CompoundStatement		30:15:441:441	5025889	1					
ANR	5025999	IfStatement	if ( ( vmgahp_mode == VMGAHP_TEST_MODE ) || ( vmgahp_mode == VMGAHP_KILL_MODE ) )		5025889	0					
ANR	5026000	Condition	( vmgahp_mode == VMGAHP_TEST_MODE ) || ( vmgahp_mode == VMGAHP_KILL_MODE )	413:6:8906:8979	5025889	0	True				
ANR	5026001	OrExpression	( vmgahp_mode == VMGAHP_TEST_MODE ) || ( vmgahp_mode == VMGAHP_KILL_MODE )		5025889	0		||			
ANR	5026002	EqualityExpression	vmgahp_mode == VMGAHP_TEST_MODE		5025889	0		==			
ANR	5026003	Identifier	vmgahp_mode		5025889	0					
ANR	5026004	Identifier	VMGAHP_TEST_MODE		5025889	1					
ANR	5026005	EqualityExpression	vmgahp_mode == VMGAHP_KILL_MODE		5025889	1		==			
ANR	5026006	Identifier	vmgahp_mode		5025889	0					
ANR	5026007	Identifier	VMGAHP_KILL_MODE		5025889	1					
ANR	5026008	CompoundStatement		32:40:526:526	5025889	1					
ANR	5026009	ExpressionStatement	"fprintf ( stderr , ""VMGAHP[%d]: %s"" , ( int ) mypid , output . Value ( ) )"	415:3:8988:9049	5025889	0	True				
ANR	5026010	CallExpression	"fprintf ( stderr , ""VMGAHP[%d]: %s"" , ( int ) mypid , output . Value ( ) )"		5025889	0					
ANR	5026011	Callee	fprintf		5025889	0					
ANR	5026012	Identifier	fprintf		5025889	0					
ANR	5026013	ArgumentList	stderr		5025889	1					
ANR	5026014	Argument	stderr		5025889	0					
ANR	5026015	Identifier	stderr		5025889	0					
ANR	5026016	Argument	"""VMGAHP[%d]: %s"""		5025889	1					
ANR	5026017	PrimaryExpression	"""VMGAHP[%d]: %s"""		5025889	0					
ANR	5026018	Argument	( int ) mypid		5025889	2					
ANR	5026019	CastExpression	( int ) mypid		5025889	0					
ANR	5026020	CastTarget	int		5025889	0					
ANR	5026021	Identifier	mypid		5025889	1					
ANR	5026022	Argument	output . Value ( )		5025889	3					
ANR	5026023	CallExpression	output . Value ( )		5025889	0					
ANR	5026024	Callee	output . Value		5025889	0					
ANR	5026025	MemberAccess	output . Value		5025889	0					
ANR	5026026	Identifier	output		5025889	0					
ANR	5026027	Identifier	Value		5025889	1					
ANR	5026028	ArgumentList			5025889	1					
ANR	5026029	ExpressionStatement	oriDebugFlags = saved_flags	416:3:9054:9081	5025889	1	True				
ANR	5026030	AssignmentExpression	oriDebugFlags = saved_flags		5025889	0		=			
ANR	5026031	Identifier	oriDebugFlags		5025889	0					
ANR	5026032	Identifier	saved_flags		5025889	1					
ANR	5026033	ReturnStatement	return ;	417:3:9086:9092	5025889	2	True				
ANR	5026034	IfStatement	if ( ( vmgahp_stderr_tid != - 1 ) && ( vmgahp_stderr_pipe != - 1 ) )		5025889	1					
ANR	5026035	Condition	( vmgahp_stderr_tid != - 1 ) && ( vmgahp_stderr_pipe != - 1 )	420:6:9105:9165	5025889	0	True				
ANR	5026036	AndExpression	( vmgahp_stderr_tid != - 1 ) && ( vmgahp_stderr_pipe != - 1 )		5025889	0		&&			
ANR	5026037	EqualityExpression	vmgahp_stderr_tid != - 1		5025889	0		!=			
ANR	5026038	Identifier	vmgahp_stderr_tid		5025889	0					
ANR	5026039	UnaryOperationExpression	- 1		5025889	1					
ANR	5026040	UnaryOperator	-		5025889	0					
ANR	5026041	PrimaryExpression	1		5025889	1					
ANR	5026042	EqualityExpression	vmgahp_stderr_pipe != - 1		5025889	1		!=			
ANR	5026043	Identifier	vmgahp_stderr_pipe		5025889	0					
ANR	5026044	UnaryOperationExpression	- 1		5025889	1					
ANR	5026045	UnaryOperator	-		5025889	0					
ANR	5026046	PrimaryExpression	1		5025889	1					
ANR	5026047	CompoundStatement		39:33:711:711	5025889	1					
ANR	5026048	ExpressionStatement	vmgahp_stderr_buffer . Write ( output . Value ( ) )	422:3:9173:9215	5025889	0	True				
ANR	5026049	CallExpression	vmgahp_stderr_buffer . Write ( output . Value ( ) )		5025889	0					
ANR	5026050	Callee	vmgahp_stderr_buffer . Write		5025889	0					
ANR	5026051	MemberAccess	vmgahp_stderr_buffer . Write		5025889	0					
ANR	5026052	Identifier	vmgahp_stderr_buffer		5025889	0					
ANR	5026053	Identifier	Write		5025889	1					
ANR	5026054	ArgumentList	output . Value ( )		5025889	1					
ANR	5026055	Argument	output . Value ( )		5025889	0					
ANR	5026056	CallExpression	output . Value ( )		5025889	0					
ANR	5026057	Callee	output . Value		5025889	0					
ANR	5026058	MemberAccess	output . Value		5025889	0					
ANR	5026059	Identifier	output		5025889	0					
ANR	5026060	Identifier	Value		5025889	1					
ANR	5026061	ArgumentList			5025889	1					
ANR	5026062	ExpressionStatement	"daemonCore -> Reset_Timer ( vmgahp_stderr_tid , 0 , 2 )"	423:3:9220:9268	5025889	1	True				
ANR	5026063	CallExpression	"daemonCore -> Reset_Timer ( vmgahp_stderr_tid , 0 , 2 )"		5025889	0					
ANR	5026064	Callee	daemonCore -> Reset_Timer		5025889	0					
ANR	5026065	PtrMemberAccess	daemonCore -> Reset_Timer		5025889	0					
ANR	5026066	Identifier	daemonCore		5025889	0					
ANR	5026067	Identifier	Reset_Timer		5025889	1					
ANR	5026068	ArgumentList	vmgahp_stderr_tid		5025889	1					
ANR	5026069	Argument	vmgahp_stderr_tid		5025889	0					
ANR	5026070	Identifier	vmgahp_stderr_tid		5025889	0					
ANR	5026071	Argument	0		5025889	1					
ANR	5026072	PrimaryExpression	0		5025889	0					
ANR	5026073	Argument	2		5025889	2					
ANR	5026074	PrimaryExpression	2		5025889	0					
ANR	5026075	ElseStatement	else		5025889	0					
ANR	5026076	CompoundStatement		43:7:824:824	5025889	0					
ANR	5026077	ExpressionStatement	"dprintf ( flags , ""VMGAHP[%d]: %s"" , ( int ) mypid , output . Value ( ) )"	426:2:9285:9345	5025889	0	True				
ANR	5026078	CallExpression	"dprintf ( flags , ""VMGAHP[%d]: %s"" , ( int ) mypid , output . Value ( ) )"		5025889	0					
ANR	5026079	Callee	dprintf		5025889	0					
ANR	5026080	Identifier	dprintf		5025889	0					
ANR	5026081	ArgumentList	flags		5025889	1					
ANR	5026082	Argument	flags		5025889	0					
ANR	5026083	Identifier	flags		5025889	0					
ANR	5026084	Argument	"""VMGAHP[%d]: %s"""		5025889	1					
ANR	5026085	PrimaryExpression	"""VMGAHP[%d]: %s"""		5025889	0					
ANR	5026086	Argument	( int ) mypid		5025889	2					
ANR	5026087	CastExpression	( int ) mypid		5025889	0					
ANR	5026088	CastTarget	int		5025889	0					
ANR	5026089	Identifier	mypid		5025889	1					
ANR	5026090	Argument	output . Value ( )		5025889	3					
ANR	5026091	CallExpression	output . Value ( )		5025889	0					
ANR	5026092	Callee	output . Value		5025889	0					
ANR	5026093	MemberAccess	output . Value		5025889	0					
ANR	5026094	Identifier	output		5025889	0					
ANR	5026095	Identifier	Value		5025889	1					
ANR	5026096	ArgumentList			5025889	1					
ANR	5026097	ExpressionStatement	oriDebugFlags = saved_flags	428:1:9351:9378	5025889	15	True				
ANR	5026098	AssignmentExpression	oriDebugFlags = saved_flags		5025889	0		=			
ANR	5026099	Identifier	oriDebugFlags		5025889	0					
ANR	5026100	Identifier	saved_flags		5025889	1					
ANR	5026101	ReturnType	void		5025889	1					
ANR	5026102	Identifier	vmprintf		5025889	2					
ANR	5026103	ParameterList	"int flags , const char * fmt"		5025889	3					
ANR	5026104	Parameter	int flags	382:15:8421:8429	5025889	0	True				
ANR	5026105	ParameterType	int		5025889	0					
ANR	5026106	Identifier	flags		5025889	1					
ANR	5026107	Parameter	const char * fmt	382:26:8432:8446	5025889	1	True				
ANR	5026108	ParameterType	const char *		5025889	0					
ANR	5026109	Identifier	fmt		5025889	1					
ANR	5026110	CFGEntryNode	ENTRY		5025889		True				
ANR	5026111	CFGExitNode	EXIT		5025889		True				
ANR	5026112	Symbol	vmgahp_stderr_buffer		5025889						
ANR	5026113	Symbol	saved_flags		5025889						
ANR	5026114	Symbol	Termlog		5025889						
ANR	5026115	Symbol	mypid		5025889						
ANR	5026116	Symbol	flags		5025889						
ANR	5026117	Symbol	daemonCore -> getpid		5025889						
ANR	5026118	Symbol	vmgahp_stderr_tid		5025889						
ANR	5026119	Symbol	fmt		5025889						
ANR	5026120	Symbol	stderr		5025889						
ANR	5026121	Symbol	oriDebugFlags		5025889						
ANR	5026122	Symbol	output		5025889						
ANR	5026123	Symbol	args		5025889						
ANR	5026124	Symbol	output . Value		5025889						
ANR	5026125	Symbol	* daemonCore		5025889						
ANR	5026126	Symbol	vmgahp_mode		5025889						
ANR	5026127	Symbol	daemonCore		5025889						
ANR	5026128	Symbol	vmgahp_stderr_pipe		5025889						
ANR	5026129	Symbol	output . IsEmpty		5025889						
ANR	5026130	Symbol	VMGAHP_TEST_MODE		5025889						
ANR	5026131	Symbol	VMGAHP_KILL_MODE		5025889						
ANR	5026132	Function	initialize_uids	432:0:9384:10389							
ANR	5026133	FunctionDef	initialize_uids ()		5026132	0					
ANR	5026134	CompoundStatement		434:0:9412:10389	5026132	0					
ANR	5026135	Statement	include	436:1:9434:9440	5026132	0	True				
ANR	5026136	Statement	"""my_username.h"""	436:9:9442:9456	5026132	1	True				
ANR	5026137	IdentifierDeclStatement	char * name = NULL ;	438:1:9460:9477	5026132	2	True				
ANR	5026138	IdentifierDecl	* name = NULL		5026132	0					
ANR	5026139	IdentifierDeclType	char *		5026132	0					
ANR	5026140	Identifier	name		5026132	1					
ANR	5026141	AssignmentExpression	* name = NULL		5026132	2		=			
ANR	5026142	Identifier	NULL		5026132	0					
ANR	5026143	Identifier	NULL		5026132	1					
ANR	5026144	IdentifierDeclStatement	char * domain = NULL ;	439:1:9480:9499	5026132	3	True				
ANR	5026145	IdentifierDecl	* domain = NULL		5026132	0					
ANR	5026146	IdentifierDeclType	char *		5026132	0					
ANR	5026147	Identifier	domain		5026132	1					
ANR	5026148	AssignmentExpression	* domain = NULL		5026132	2		=			
ANR	5026149	Identifier	NULL		5026132	0					
ANR	5026150	Identifier	NULL		5026132	1					
ANR	5026151	ExpressionStatement	name = my_username ( )	441:1:9503:9523	5026132	4	True				
ANR	5026152	AssignmentExpression	name = my_username ( )		5026132	0		=			
ANR	5026153	Identifier	name		5026132	0					
ANR	5026154	CallExpression	my_username ( )		5026132	1					
ANR	5026155	Callee	my_username		5026132	0					
ANR	5026156	Identifier	my_username		5026132	0					
ANR	5026157	ArgumentList			5026132	1					
ANR	5026158	ExpressionStatement	domain = my_domainname ( )	442:1:9526:9550	5026132	5	True				
ANR	5026159	AssignmentExpression	domain = my_domainname ( )		5026132	0		=			
ANR	5026160	Identifier	domain		5026132	0					
ANR	5026161	CallExpression	my_domainname ( )		5026132	1					
ANR	5026162	Callee	my_domainname		5026132	0					
ANR	5026163	Identifier	my_domainname		5026132	0					
ANR	5026164	ArgumentList			5026132	1					
ANR	5026165	ExpressionStatement	caller_name = name	444:1:9554:9572	5026132	6	True				
ANR	5026166	AssignmentExpression	caller_name = name		5026132	0		=			
ANR	5026167	Identifier	caller_name		5026132	0					
ANR	5026168	Identifier	name		5026132	1					
ANR	5026169	ExpressionStatement	job_user_name = name	445:1:9575:9595	5026132	7	True				
ANR	5026170	AssignmentExpression	job_user_name = name		5026132	0		=			
ANR	5026171	Identifier	job_user_name		5026132	0					
ANR	5026172	Identifier	name		5026132	1					
ANR	5026173	IfStatement	"if ( ! init_user_ids ( name , domain ) )"		5026132	8					
ANR	5026174	Condition	"! init_user_ids ( name , domain )"	447:6:9604:9632	5026132	0	True				
ANR	5026175	UnaryOperationExpression	"! init_user_ids ( name , domain )"		5026132	0					
ANR	5026176	UnaryOperator	!		5026132	0					
ANR	5026177	CallExpression	"init_user_ids ( name , domain )"		5026132	1					
ANR	5026178	Callee	init_user_ids		5026132	0					
ANR	5026179	Identifier	init_user_ids		5026132	0					
ANR	5026180	ArgumentList	name		5026132	1					
ANR	5026181	Argument	name		5026132	0					
ANR	5026182	Identifier	name		5026132	0					
ANR	5026183	Argument	domain		5026132	1					
ANR	5026184	Identifier	domain		5026132	0					
ANR	5026185	CompoundStatement		14:38:223:223	5026132	1					
ANR	5026186	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Could not initialize user_priv with our own token!\\n"" )"	449:2:9696:9770	5026132	0	True				
ANR	5026187	CallExpression	"vmprintf ( D_ALWAYS , ""Could not initialize user_priv with our own token!\\n"" )"		5026132	0					
ANR	5026188	Callee	vmprintf		5026132	0					
ANR	5026189	Identifier	vmprintf		5026132	0					
ANR	5026190	ArgumentList	D_ALWAYS		5026132	1					
ANR	5026191	Argument	D_ALWAYS		5026132	0					
ANR	5026192	Identifier	D_ALWAYS		5026132	0					
ANR	5026193	Argument	"""Could not initialize user_priv with our own token!\\n"""		5026132	1					
ANR	5026194	PrimaryExpression	"""Could not initialize user_priv with our own token!\\n"""		5026132	0					
ANR	5026195	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Initialize Uids: caller=%s@%s, job user=%s@%s\\n"" , caller_name . Value ( ) , domain , job_user_name . Value ( ) , domain )"	452:1:9777:9910	5026132	9	True				
ANR	5026196	CallExpression	"vmprintf ( D_ALWAYS , ""Initialize Uids: caller=%s@%s, job user=%s@%s\\n"" , caller_name . Value ( ) , domain , job_user_name . Value ( ) , domain )"		5026132	0					
ANR	5026197	Callee	vmprintf		5026132	0					
ANR	5026198	Identifier	vmprintf		5026132	0					
ANR	5026199	ArgumentList	D_ALWAYS		5026132	1					
ANR	5026200	Argument	D_ALWAYS		5026132	0					
ANR	5026201	Identifier	D_ALWAYS		5026132	0					
ANR	5026202	Argument	"""Initialize Uids: caller=%s@%s, job user=%s@%s\\n"""		5026132	1					
ANR	5026203	PrimaryExpression	"""Initialize Uids: caller=%s@%s, job user=%s@%s\\n"""		5026132	0					
ANR	5026204	Argument	caller_name . Value ( )		5026132	2					
ANR	5026205	CallExpression	caller_name . Value ( )		5026132	0					
ANR	5026206	Callee	caller_name . Value		5026132	0					
ANR	5026207	MemberAccess	caller_name . Value		5026132	0					
ANR	5026208	Identifier	caller_name		5026132	0					
ANR	5026209	Identifier	Value		5026132	1					
ANR	5026210	ArgumentList			5026132	1					
ANR	5026211	Argument	domain		5026132	3					
ANR	5026212	Identifier	domain		5026132	0					
ANR	5026213	Argument	job_user_name . Value ( )		5026132	4					
ANR	5026214	CallExpression	job_user_name . Value ( )		5026132	0					
ANR	5026215	Callee	job_user_name . Value		5026132	0					
ANR	5026216	MemberAccess	job_user_name . Value		5026132	0					
ANR	5026217	Identifier	job_user_name		5026132	0					
ANR	5026218	Identifier	Value		5026132	1					
ANR	5026219	ArgumentList			5026132	1					
ANR	5026220	Argument	domain		5026132	5					
ANR	5026221	Identifier	domain		5026132	0					
ANR	5026222	IfStatement	if ( name )		5026132	10					
ANR	5026223	Condition	name	455:5:9918:9921	5026132	0	True				
ANR	5026224	Identifier	name		5026132	0					
ANR	5026225	CompoundStatement		22:12:512:512	5026132	1					
ANR	5026226	ExpressionStatement	free ( name )	456:2:9929:9939	5026132	0	True				
ANR	5026227	CallExpression	free ( name )		5026132	0					
ANR	5026228	Callee	free		5026132	0					
ANR	5026229	Identifier	free		5026132	0					
ANR	5026230	ArgumentList	name		5026132	1					
ANR	5026231	Argument	name		5026132	0					
ANR	5026232	Identifier	name		5026132	0					
ANR	5026233	IfStatement	if ( domain )		5026132	11					
ANR	5026234	Condition	domain	458:5:9949:9954	5026132	0	True				
ANR	5026235	Identifier	domain		5026132	0					
ANR	5026236	CompoundStatement		25:14:545:545	5026132	1					
ANR	5026237	ExpressionStatement	free ( domain )	459:2:9962:9974	5026132	0	True				
ANR	5026238	CallExpression	free ( domain )		5026132	0					
ANR	5026239	Callee	free		5026132	0					
ANR	5026240	Identifier	free		5026132	0					
ANR	5026241	ArgumentList	domain		5026132	1					
ANR	5026242	Argument	domain		5026132	0					
ANR	5026243	Identifier	domain		5026132	0					
ANR	5026244	ReturnStatement	return ;	461:1:9980:9986	5026132	12	True				
ANR	5026245	ReturnType	void		5026132	1					
ANR	5026246	Identifier	initialize_uids		5026132	2					
ANR	5026247	ParameterList			5026132	3					
ANR	5026248	CFGEntryNode	ENTRY		5026132		True				
ANR	5026249	CFGExitNode	EXIT		5026132		True				
ANR	5026250	Symbol	caller_name		5026132						
ANR	5026251	Symbol	caller_name . Value		5026132						
ANR	5026252	Symbol	NULL		5026132						
ANR	5026253	Symbol	job_user_name		5026132						
ANR	5026254	Symbol	my_domainname		5026132						
ANR	5026255	Symbol	domain		5026132						
ANR	5026256	Symbol	name		5026132						
ANR	5026257	Symbol	D_ALWAYS		5026132						
ANR	5026258	Symbol	job_user_name . Value		5026132						
ANR	5026259	Symbol	my_username		5026132						
ANR	5026260	Symbol	init_user_ids		5026132						
ANR	5026261	Function	get_caller_uid	476:0:10392:10442							
ANR	5026262	FunctionDef	get_caller_uid ()		5026261	0					
ANR	5026263	CompoundStatement		478:0:10420:10442	5026261	0					
ANR	5026264	ReturnStatement	return caller_uid ;	479:1:10423:10440	5026261	0	True				
ANR	5026265	Identifier	caller_uid		5026261	0					
ANR	5026266	ReturnType	uid_t		5026261	1					
ANR	5026267	Identifier	get_caller_uid		5026261	2					
ANR	5026268	ParameterList			5026261	3					
ANR	5026269	CFGEntryNode	ENTRY		5026261		True				
ANR	5026270	CFGExitNode	EXIT		5026261		True				
ANR	5026271	Symbol	caller_uid		5026261						
ANR	5026272	Function	get_caller_gid	482:0:10445:10495							
ANR	5026273	FunctionDef	get_caller_gid ()		5026272	0					
ANR	5026274	CompoundStatement		484:0:10473:10495	5026272	0					
ANR	5026275	ReturnStatement	return caller_gid ;	485:1:10476:10493	5026272	0	True				
ANR	5026276	Identifier	caller_gid		5026272	0					
ANR	5026277	ReturnType	gid_t		5026272	1					
ANR	5026278	Identifier	get_caller_gid		5026272	2					
ANR	5026279	ParameterList			5026272	3					
ANR	5026280	CFGEntryNode	ENTRY		5026272		True				
ANR	5026281	CFGExitNode	EXIT		5026272		True				
ANR	5026282	Symbol	caller_gid		5026272						
ANR	5026283	Function	get_job_user_uid	488:0:10498:10552							
ANR	5026284	FunctionDef	get_job_user_uid ()		5026283	0					
ANR	5026285	CompoundStatement		490:0:10528:10552	5026283	0					
ANR	5026286	ReturnStatement	return job_user_uid ;	491:1:10531:10550	5026283	0	True				
ANR	5026287	Identifier	job_user_uid		5026283	0					
ANR	5026288	ReturnType	uid_t		5026283	1					
ANR	5026289	Identifier	get_job_user_uid		5026283	2					
ANR	5026290	ParameterList			5026283	3					
ANR	5026291	CFGEntryNode	ENTRY		5026283		True				
ANR	5026292	CFGExitNode	EXIT		5026283		True				
ANR	5026293	Symbol	job_user_uid		5026283						
ANR	5026294	Function	get_job_user_gid	494:0:10555:10609							
ANR	5026295	FunctionDef	get_job_user_gid ()		5026294	0					
ANR	5026296	CompoundStatement		496:0:10585:10609	5026294	0					
ANR	5026297	ReturnStatement	return job_user_gid ;	497:1:10588:10607	5026294	0	True				
ANR	5026298	Identifier	job_user_gid		5026294	0					
ANR	5026299	ReturnType	gid_t		5026294	1					
ANR	5026300	Identifier	get_job_user_gid		5026294	2					
ANR	5026301	ParameterList			5026294	3					
ANR	5026302	CFGEntryNode	ENTRY		5026294		True				
ANR	5026303	CFGExitNode	EXIT		5026294		True				
ANR	5026304	Symbol	job_user_gid		5026294						
ANR	5026305	Function	get_caller_name	500:0:10612:10678							
ANR	5026306	FunctionDef	get_caller_name ()		5026305	0					
ANR	5026307	CompoundStatement		502:0:10647:10678	5026305	0					
ANR	5026308	ReturnStatement	return caller_name . Value ( ) ;	503:1:10650:10676	5026305	0	True				
ANR	5026309	CallExpression	caller_name . Value ( )		5026305	0					
ANR	5026310	Callee	caller_name . Value		5026305	0					
ANR	5026311	MemberAccess	caller_name . Value		5026305	0					
ANR	5026312	Identifier	caller_name		5026305	0					
ANR	5026313	Identifier	Value		5026305	1					
ANR	5026314	ArgumentList			5026305	1					
ANR	5026315	ReturnType	const char *		5026305	1					
ANR	5026316	Identifier	get_caller_name		5026305	2					
ANR	5026317	ParameterList			5026305	3					
ANR	5026318	CFGEntryNode	ENTRY		5026305		True				
ANR	5026319	CFGExitNode	EXIT		5026305		True				
ANR	5026320	Symbol	caller_name		5026305						
ANR	5026321	Symbol	caller_name . Value		5026305						
ANR	5026322	Function	get_job_user_name	506:0:10681:10751							
ANR	5026323	FunctionDef	get_job_user_name ()		5026322	0					
ANR	5026324	CompoundStatement		508:0:10718:10751	5026322	0					
ANR	5026325	ReturnStatement	return job_user_name . Value ( ) ;	509:1:10721:10749	5026322	0	True				
ANR	5026326	CallExpression	job_user_name . Value ( )		5026322	0					
ANR	5026327	Callee	job_user_name . Value		5026322	0					
ANR	5026328	MemberAccess	job_user_name . Value		5026322	0					
ANR	5026329	Identifier	job_user_name		5026322	0					
ANR	5026330	Identifier	Value		5026322	1					
ANR	5026331	ArgumentList			5026322	1					
ANR	5026332	ReturnType	const char *		5026322	1					
ANR	5026333	Identifier	get_job_user_name		5026322	2					
ANR	5026334	ParameterList			5026322	3					
ANR	5026335	CFGEntryNode	ENTRY		5026322		True				
ANR	5026336	CFGExitNode	EXIT		5026322		True				
ANR	5026337	Symbol	job_user_name		5026322						
ANR	5026338	Symbol	job_user_name . Value		5026322						
ANR	5026339	Function	canSwitchUid	512:0:10754:10806							
ANR	5026340	FunctionDef	canSwitchUid ()		5026339	0					
ANR	5026341	CompoundStatement		513:0:10778:10806	5026339	0					
ANR	5026342	ReturnStatement	return can_switch_ids ( ) ;	514:1:10781:10804	5026339	0	True				
ANR	5026343	CallExpression	can_switch_ids ( )		5026339	0					
ANR	5026344	Callee	can_switch_ids		5026339	0					
ANR	5026345	Identifier	can_switch_ids		5026339	0					
ANR	5026346	ArgumentList			5026339	1					
ANR	5026347	ReturnType	bool		5026339	1					
ANR	5026348	Identifier	canSwitchUid		5026339	2					
ANR	5026349	ParameterList			5026339	3					
ANR	5026350	CFGEntryNode	ENTRY		5026339		True				
ANR	5026351	CFGExitNode	EXIT		5026339		True				
ANR	5026352	Symbol	can_switch_ids		5026339						
ANR	5026353	Function	systemCommand	522:0:10992:17964							
ANR	5026354	FunctionDef	"systemCommand (ArgList & args , priv_state priv , StringList * cmd_out , StringList * cmd_in , StringList * cmd_err , bool merge_stderr_with_stdout)"		5026353	0					
ANR	5026355	CompoundStatement		524:0:11142:17964	5026353	0					
ANR	5026356	IdentifierDeclStatement	int result = 0 ;	525:1:11145:11159	5026353	0	True				
ANR	5026357	IdentifierDecl	result = 0		5026353	0					
ANR	5026358	IdentifierDeclType	int		5026353	0					
ANR	5026359	Identifier	result		5026353	1					
ANR	5026360	AssignmentExpression	result = 0		5026353	2		=			
ANR	5026361	Identifier	result		5026353	0					
ANR	5026362	PrimaryExpression	0		5026353	1					
ANR	5026363	IdentifierDeclStatement	FILE * fp = NULL ;	526:1:11162:11177	5026353	1	True				
ANR	5026364	IdentifierDecl	* fp = NULL		5026353	0					
ANR	5026365	IdentifierDeclType	FILE *		5026353	0					
ANR	5026366	Identifier	fp		5026353	1					
ANR	5026367	AssignmentExpression	* fp = NULL		5026353	2		=			
ANR	5026368	Identifier	NULL		5026353	0					
ANR	5026369	Identifier	NULL		5026353	1					
ANR	5026370	IdentifierDeclStatement	FILE * fp_for_stdin = NULL ;	527:1:11180:11206	5026353	2	True				
ANR	5026371	IdentifierDecl	* fp_for_stdin = NULL		5026353	0					
ANR	5026372	IdentifierDeclType	FILE *		5026353	0					
ANR	5026373	Identifier	fp_for_stdin		5026353	1					
ANR	5026374	AssignmentExpression	* fp_for_stdin = NULL		5026353	2		=			
ANR	5026375	Identifier	NULL		5026353	0					
ANR	5026376	Identifier	NULL		5026353	1					
ANR	5026377	IdentifierDeclStatement	FILE * childerr = NULL ;	528:1:11209:11231	5026353	3	True				
ANR	5026378	IdentifierDecl	* childerr = NULL		5026353	0					
ANR	5026379	IdentifierDeclType	FILE *		5026353	0					
ANR	5026380	Identifier	childerr		5026353	1					
ANR	5026381	AssignmentExpression	* childerr = NULL		5026353	2		=			
ANR	5026382	Identifier	NULL		5026353	0					
ANR	5026383	Identifier	NULL		5026353	1					
ANR	5026384	IdentifierDeclStatement	MyString line ;	529:1:11234:11247	5026353	4	True				
ANR	5026385	IdentifierDecl	line		5026353	0					
ANR	5026386	IdentifierDeclType	MyString		5026353	0					
ANR	5026387	Identifier	line		5026353	1					
ANR	5026388	IdentifierDeclStatement	char buff [ 1024 ] ;	530:1:11250:11265	5026353	5	True				
ANR	5026389	IdentifierDecl	buff [ 1024 ]		5026353	0					
ANR	5026390	IdentifierDeclType	char [ 1024 ]		5026353	0					
ANR	5026391	Identifier	buff		5026353	1					
ANR	5026392	PrimaryExpression	1024		5026353	2					
ANR	5026393	IdentifierDeclStatement	StringList * my_cmd_out = cmd_out ;	531:1:11268:11300	5026353	6	True				
ANR	5026394	IdentifierDecl	* my_cmd_out = cmd_out		5026353	0					
ANR	5026395	IdentifierDeclType	StringList *		5026353	0					
ANR	5026396	Identifier	my_cmd_out		5026353	1					
ANR	5026397	AssignmentExpression	* my_cmd_out = cmd_out		5026353	2		=			
ANR	5026398	Identifier	cmd_out		5026353	0					
ANR	5026399	Identifier	cmd_out		5026353	1					
ANR	5026400	IdentifierDeclStatement	priv_state prev = PRIV_UNKNOWN ;	533:1:11304:11334	5026353	7	True				
ANR	5026401	IdentifierDecl	prev = PRIV_UNKNOWN		5026353	0					
ANR	5026402	IdentifierDeclType	priv_state		5026353	0					
ANR	5026403	Identifier	prev		5026353	1					
ANR	5026404	AssignmentExpression	prev = PRIV_UNKNOWN		5026353	2		=			
ANR	5026405	Identifier	PRIV_UNKNOWN		5026353	0					
ANR	5026406	Identifier	PRIV_UNKNOWN		5026353	1					
ANR	5026407	IdentifierDeclStatement	int stdout_pipes [ 2 ] ;	535:1:11338:11357	5026353	8	True				
ANR	5026408	IdentifierDecl	stdout_pipes [ 2 ]		5026353	0					
ANR	5026409	IdentifierDeclType	int [ 2 ]		5026353	0					
ANR	5026410	Identifier	stdout_pipes		5026353	1					
ANR	5026411	PrimaryExpression	2		5026353	2					
ANR	5026412	IdentifierDeclStatement	int stdin_pipes [ 2 ] ;	536:1:11360:11378	5026353	9	True				
ANR	5026413	IdentifierDecl	stdin_pipes [ 2 ]		5026353	0					
ANR	5026414	IdentifierDeclType	int [ 2 ]		5026353	0					
ANR	5026415	Identifier	stdin_pipes		5026353	1					
ANR	5026416	PrimaryExpression	2		5026353	2					
ANR	5026417	IdentifierDeclStatement	int pid ;	537:1:11381:11388	5026353	10	True				
ANR	5026418	IdentifierDecl	pid		5026353	0					
ANR	5026419	IdentifierDeclType	int		5026353	0					
ANR	5026420	Identifier	pid		5026353	1					
ANR	5026421	IdentifierDeclStatement	bool use_privsep = false ;	538:1:11391:11415	5026353	11	True				
ANR	5026422	IdentifierDecl	use_privsep = false		5026353	0					
ANR	5026423	IdentifierDeclType	bool		5026353	0					
ANR	5026424	Identifier	use_privsep		5026353	1					
ANR	5026425	AssignmentExpression	use_privsep = false		5026353	2		=			
ANR	5026426	Identifier	false		5026353	0					
ANR	5026427	Identifier	false		5026353	1					
ANR	5026428	SwitchStatement	switch ( priv )		5026353	12					
ANR	5026429	Condition	priv	539:10:11427:11430	5026353	0	True				
ANR	5026430	Identifier	priv		5026353	0					
ANR	5026431	CompoundStatement		16:17:291:291	5026353	1					
ANR	5026432	Label	case PRIV_ROOT :	540:1:11437:11451	5026353	0	True				
ANR	5026433	Identifier	PRIV_ROOT		5026353	0					
ANR	5026434	ExpressionStatement	prev = set_root_priv ( )	541:2:11455:11477	5026353	1	True				
ANR	5026435	AssignmentExpression	prev = set_root_priv ( )		5026353	0		=			
ANR	5026436	Identifier	prev		5026353	0					
ANR	5026437	CallExpression	set_root_priv ( )		5026353	1					
ANR	5026438	Callee	set_root_priv		5026353	0					
ANR	5026439	Identifier	set_root_priv		5026353	0					
ANR	5026440	ArgumentList			5026353	1					
ANR	5026441	BreakStatement	break ;	542:2:11481:11486	5026353	2	True				
ANR	5026442	Label	case PRIV_USER :	543:1:11489:11503	5026353	3	True				
ANR	5026443	Identifier	PRIV_USER		5026353	0					
ANR	5026444	Label	case PRIV_USER_FINAL :	544:1:11506:11526	5026353	4	True				
ANR	5026445	Identifier	PRIV_USER_FINAL		5026353	0					
ANR	5026446	ExpressionStatement	prev = set_user_priv ( )	545:2:11530:11552	5026353	5	True				
ANR	5026447	AssignmentExpression	prev = set_user_priv ( )		5026353	0		=			
ANR	5026448	Identifier	prev		5026353	0					
ANR	5026449	CallExpression	set_user_priv ( )		5026353	1					
ANR	5026450	Callee	set_user_priv		5026353	0					
ANR	5026451	Identifier	set_user_priv		5026353	0					
ANR	5026452	ArgumentList			5026353	1					
ANR	5026453	IfStatement	if ( privsep_enabled ( ) && ( job_user_uid != get_condor_uid ( ) ) )		5026353	6					
ANR	5026454	Condition	privsep_enabled ( ) && ( job_user_uid != get_condor_uid ( ) )	547:7:11581:11635	5026353	0	True				
ANR	5026455	AndExpression	privsep_enabled ( ) && ( job_user_uid != get_condor_uid ( ) )		5026353	0		&&			
ANR	5026456	CallExpression	privsep_enabled ( )		5026353	0					
ANR	5026457	Callee	privsep_enabled		5026353	0					
ANR	5026458	Identifier	privsep_enabled		5026353	0					
ANR	5026459	ArgumentList			5026353	1					
ANR	5026460	EqualityExpression	job_user_uid != get_condor_uid ( )		5026353	1		!=			
ANR	5026461	Identifier	job_user_uid		5026353	0					
ANR	5026462	CallExpression	get_condor_uid ( )		5026353	1					
ANR	5026463	Callee	get_condor_uid		5026353	0					
ANR	5026464	Identifier	get_condor_uid		5026353	0					
ANR	5026465	ArgumentList			5026353	1					
ANR	5026466	CompoundStatement		24:65:496:496	5026353	1					
ANR	5026467	ExpressionStatement	use_privsep = true	548:3:11644:11662	5026353	0	True				
ANR	5026468	AssignmentExpression	use_privsep = true		5026353	0		=			
ANR	5026469	Identifier	use_privsep		5026353	0					
ANR	5026470	Identifier	true		5026353	1					
ANR	5026471	BreakStatement	break ;	551:2:11677:11682	5026353	7	True				
ANR	5026472	Label	default :	552:1:11685:11692	5026353	8	True				
ANR	5026473	Identifier	default		5026353	0					
ANR	5026474	ExpressionStatement		554:2:11721:11721	5026353	9	True				
ANR	5026475	IfStatement	if ( ( cmd_in != NULL ) || ( cmd_err != NULL ) )		5026353	13					
ANR	5026476	Condition	( cmd_in != NULL ) || ( cmd_err != NULL )	557:4:11749:11785	5026353	0	True				
ANR	5026477	OrExpression	( cmd_in != NULL ) || ( cmd_err != NULL )		5026353	0		||			
ANR	5026478	EqualityExpression	cmd_in != NULL		5026353	0		!=			
ANR	5026479	Identifier	cmd_in		5026353	0					
ANR	5026480	Identifier	NULL		5026353	1					
ANR	5026481	EqualityExpression	cmd_err != NULL		5026353	1		!=			
ANR	5026482	Identifier	cmd_err		5026353	0					
ANR	5026483	Identifier	NULL		5026353	1					
ANR	5026484	CompoundStatement		35:3:648:648	5026353	1					
ANR	5026485	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Invalid use of systemCommand() in Windows.\\n"" )"	559:5:11798:11864	5026353	0	True				
ANR	5026486	CallExpression	"vmprintf ( D_ALWAYS , ""Invalid use of systemCommand() in Windows.\\n"" )"		5026353	0					
ANR	5026487	Callee	vmprintf		5026353	0					
ANR	5026488	Identifier	vmprintf		5026353	0					
ANR	5026489	ArgumentList	D_ALWAYS		5026353	1					
ANR	5026490	Argument	D_ALWAYS		5026353	0					
ANR	5026491	Identifier	D_ALWAYS		5026353	0					
ANR	5026492	Argument	"""Invalid use of systemCommand() in Windows.\\n"""		5026353	1					
ANR	5026493	PrimaryExpression	"""Invalid use of systemCommand() in Windows.\\n"""		5026353	0					
ANR	5026494	ReturnStatement	return - 1 ;	560:5:11871:11880	5026353	1	True				
ANR	5026495	UnaryOperationExpression	- 1		5026353	0					
ANR	5026496	UnaryOperator	-		5026353	0					
ANR	5026497	PrimaryExpression	1		5026353	1					
ANR	5026498	ExpressionStatement	"fp = my_popen ( args , ""r"" , merge_stderr_with_stdout )"	566:1:11989:12041	5026353	14	True				
ANR	5026499	AssignmentExpression	"fp = my_popen ( args , ""r"" , merge_stderr_with_stdout )"		5026353	0		=			
ANR	5026500	Identifier	fp		5026353	0					
ANR	5026501	CallExpression	"my_popen ( args , ""r"" , merge_stderr_with_stdout )"		5026353	1					
ANR	5026502	Callee	my_popen		5026353	0					
ANR	5026503	Identifier	my_popen		5026353	0					
ANR	5026504	ArgumentList	args		5026353	1					
ANR	5026505	Argument	args		5026353	0					
ANR	5026506	Identifier	args		5026353	0					
ANR	5026507	Argument	"""r"""		5026353	1					
ANR	5026508	PrimaryExpression	"""r"""		5026353	0					
ANR	5026509	Argument	merge_stderr_with_stdout		5026353	2					
ANR	5026510	Identifier	merge_stderr_with_stdout		5026353	0					
ANR	5026511	ExpressionStatement	set_priv ( prev )	736:1:16120:16136	5026353	15	True				
ANR	5026512	CallExpression	set_priv ( prev )		5026353	0					
ANR	5026513	Callee	set_priv		5026353	0					
ANR	5026514	Identifier	set_priv		5026353	0					
ANR	5026515	ArgumentList	prev		5026353	1					
ANR	5026516	Argument	prev		5026353	0					
ANR	5026517	Identifier	prev		5026353	0					
ANR	5026518	IfStatement	if ( fp == NULL )		5026353	16					
ANR	5026519	Condition	fp == NULL	737:6:16144:16153	5026353	0	True				
ANR	5026520	EqualityExpression	fp == NULL		5026353	0		==			
ANR	5026521	Identifier	fp		5026353	0					
ANR	5026522	Identifier	NULL		5026353	1					
ANR	5026523	CompoundStatement		215:2:5018:5038	5026353	1					
ANR	5026524	IdentifierDeclStatement	MyString args_string ;	738:2:16161:16181	5026353	0	True				
ANR	5026525	IdentifierDecl	args_string		5026353	0					
ANR	5026526	IdentifierDeclType	MyString		5026353	0					
ANR	5026527	Identifier	args_string		5026353	1					
ANR	5026528	ExpressionStatement	"args . GetArgsStringForDisplay ( & args_string , 0 )"	739:2:16185:16232	5026353	1	True				
ANR	5026529	CallExpression	"args . GetArgsStringForDisplay ( & args_string , 0 )"		5026353	0					
ANR	5026530	Callee	args . GetArgsStringForDisplay		5026353	0					
ANR	5026531	MemberAccess	args . GetArgsStringForDisplay		5026353	0					
ANR	5026532	Identifier	args		5026353	0					
ANR	5026533	Identifier	GetArgsStringForDisplay		5026353	1					
ANR	5026534	ArgumentList	& args_string		5026353	1					
ANR	5026535	Argument	& args_string		5026353	0					
ANR	5026536	UnaryOperationExpression	& args_string		5026353	0					
ANR	5026537	UnaryOperator	&		5026353	0					
ANR	5026538	Identifier	args_string		5026353	1					
ANR	5026539	Argument	0		5026353	1					
ANR	5026540	PrimaryExpression	0		5026353	0					
ANR	5026541	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Failed to execute command: %s\\n"" , args_string . Value ( ) )"	740:2:16236:16318	5026353	2	True				
ANR	5026542	CallExpression	"vmprintf ( D_ALWAYS , ""Failed to execute command: %s\\n"" , args_string . Value ( ) )"		5026353	0					
ANR	5026543	Callee	vmprintf		5026353	0					
ANR	5026544	Identifier	vmprintf		5026353	0					
ANR	5026545	ArgumentList	D_ALWAYS		5026353	1					
ANR	5026546	Argument	D_ALWAYS		5026353	0					
ANR	5026547	Identifier	D_ALWAYS		5026353	0					
ANR	5026548	Argument	"""Failed to execute command: %s\\n"""		5026353	1					
ANR	5026549	PrimaryExpression	"""Failed to execute command: %s\\n"""		5026353	0					
ANR	5026550	Argument	args_string . Value ( )		5026353	2					
ANR	5026551	CallExpression	args_string . Value ( )		5026353	0					
ANR	5026552	Callee	args_string . Value		5026353	0					
ANR	5026553	MemberAccess	args_string . Value		5026353	0					
ANR	5026554	Identifier	args_string		5026353	0					
ANR	5026555	Identifier	Value		5026353	1					
ANR	5026556	ArgumentList			5026353	1					
ANR	5026557	ExpressionStatement	fclose ( childerr )	742:5:16325:16341	5026353	3	True				
ANR	5026558	CallExpression	fclose ( childerr )		5026353	0					
ANR	5026559	Callee	fclose		5026353	0					
ANR	5026560	Identifier	fclose		5026353	0					
ANR	5026561	ArgumentList	childerr		5026353	1					
ANR	5026562	Argument	childerr		5026353	0					
ANR	5026563	Identifier	childerr		5026353	0					
ANR	5026564	ReturnStatement	return - 1 ;	743:2:16345:16354	5026353	4	True				
ANR	5026565	UnaryOperationExpression	- 1		5026353	0					
ANR	5026566	UnaryOperator	-		5026353	0					
ANR	5026567	PrimaryExpression	1		5026353	1					
ANR	5026568	IfStatement	if ( cmd_in != NULL )		5026353	17					
ANR	5026569	Condition	cmd_in != NULL	746:4:16364:16377	5026353	0	True				
ANR	5026570	EqualityExpression	cmd_in != NULL		5026353	0		!=			
ANR	5026571	Identifier	cmd_in		5026353	0					
ANR	5026572	Identifier	NULL		5026353	1					
ANR	5026573	CompoundStatement		225:3:5263:5273	5026353	1					
ANR	5026574	ExpressionStatement	cmd_in -> rewind ( )	747:3:16385:16401	5026353	0	True				
ANR	5026575	CallExpression	cmd_in -> rewind ( )		5026353	0					
ANR	5026576	Callee	cmd_in -> rewind		5026353	0					
ANR	5026577	PtrMemberAccess	cmd_in -> rewind		5026353	0					
ANR	5026578	Identifier	cmd_in		5026353	0					
ANR	5026579	Identifier	rewind		5026353	1					
ANR	5026580	ArgumentList			5026353	1					
ANR	5026581	IdentifierDeclStatement	char * tmp ;	748:3:16406:16416	5026353	1	True				
ANR	5026582	IdentifierDecl	* tmp		5026353	0					
ANR	5026583	IdentifierDeclType	char *		5026353	0					
ANR	5026584	Identifier	tmp		5026353	1					
ANR	5026585	WhileStatement	while ( ( tmp = cmd_in -> next ( ) ) != NULL )		5026353	2					
ANR	5026586	Condition	( tmp = cmd_in -> next ( ) ) != NULL	749:9:16427:16456	5026353	0	True				
ANR	5026587	EqualityExpression	( tmp = cmd_in -> next ( ) ) != NULL		5026353	0		!=			
ANR	5026588	AssignmentExpression	tmp = cmd_in -> next ( )		5026353	0		=			
ANR	5026589	Identifier	tmp		5026353	0					
ANR	5026590	CallExpression	cmd_in -> next ( )		5026353	1					
ANR	5026591	Callee	cmd_in -> next		5026353	0					
ANR	5026592	PtrMemberAccess	cmd_in -> next		5026353	0					
ANR	5026593	Identifier	cmd_in		5026353	0					
ANR	5026594	Identifier	next		5026353	1					
ANR	5026595	ArgumentList			5026353	1					
ANR	5026596	Identifier	NULL		5026353	1					
ANR	5026597	CompoundStatement		227:5:5321:5321	5026353	1					
ANR	5026598	ExpressionStatement	"fprintf ( fp_for_stdin , ""%s\\n"" , tmp )"	751:7:16473:16507	5026353	0	True				
ANR	5026599	CallExpression	"fprintf ( fp_for_stdin , ""%s\\n"" , tmp )"		5026353	0					
ANR	5026600	Callee	fprintf		5026353	0					
ANR	5026601	Identifier	fprintf		5026353	0					
ANR	5026602	ArgumentList	fp_for_stdin		5026353	1					
ANR	5026603	Argument	fp_for_stdin		5026353	0					
ANR	5026604	Identifier	fp_for_stdin		5026353	0					
ANR	5026605	Argument	"""%s\\n"""		5026353	1					
ANR	5026606	PrimaryExpression	"""%s\\n"""		5026353	0					
ANR	5026607	Argument	tmp		5026353	2					
ANR	5026608	Identifier	tmp		5026353	0					
ANR	5026609	ExpressionStatement	fflush ( fp_for_stdin )	752:7:16516:16536	5026353	1	True				
ANR	5026610	CallExpression	fflush ( fp_for_stdin )		5026353	0					
ANR	5026611	Callee	fflush		5026353	0					
ANR	5026612	Identifier	fflush		5026353	0					
ANR	5026613	ArgumentList	fp_for_stdin		5026353	1					
ANR	5026614	Argument	fp_for_stdin		5026353	0					
ANR	5026615	Identifier	fp_for_stdin		5026353	0					
ANR	5026616	IfStatement	if ( fp_for_stdin )		5026353	18					
ANR	5026617	Condition	fp_for_stdin	755:5:16553:16564	5026353	0	True				
ANR	5026618	Identifier	fp_for_stdin		5026353	0					
ANR	5026619	CompoundStatement		232:19:5424:5424	5026353	1					
ANR	5026620	ExpressionStatement	fclose ( fp_for_stdin )	758:3:16673:16693	5026353	0	True				
ANR	5026621	CallExpression	fclose ( fp_for_stdin )		5026353	0					
ANR	5026622	Callee	fclose		5026353	0					
ANR	5026623	Identifier	fclose		5026353	0					
ANR	5026624	ArgumentList	fp_for_stdin		5026353	1					
ANR	5026625	Argument	fp_for_stdin		5026353	0					
ANR	5026626	Identifier	fp_for_stdin		5026353	0					
ANR	5026627	IfStatement	if ( my_cmd_out == NULL )		5026353	19					
ANR	5026628	Condition	my_cmd_out == NULL	761:6:16705:16722	5026353	0	True				
ANR	5026629	EqualityExpression	my_cmd_out == NULL		5026353	0		==			
ANR	5026630	Identifier	my_cmd_out		5026353	0					
ANR	5026631	Identifier	NULL		5026353	1					
ANR	5026632	CompoundStatement		238:27:5583:5583	5026353	1					
ANR	5026633	ExpressionStatement	my_cmd_out = new StringList ( )	762:2:16730:16759	5026353	0	True				
ANR	5026634	AssignmentExpression	my_cmd_out = new StringList ( )		5026353	0		=			
ANR	5026635	Identifier	my_cmd_out		5026353	0					
ANR	5026636	UnaryExpression	new StringList ( )		5026353	1					
ANR	5026637	WhileStatement	"while ( fgets ( buff , sizeof ( buff ) , fp ) != NULL )"		5026353	20					
ANR	5026638	Condition	"fgets ( buff , sizeof ( buff ) , fp ) != NULL"	765:9:16774:16812	5026353	0	True				
ANR	5026639	EqualityExpression	"fgets ( buff , sizeof ( buff ) , fp ) != NULL"		5026353	0		!=			
ANR	5026640	CallExpression	"fgets ( buff , sizeof ( buff ) , fp )"		5026353	0					
ANR	5026641	Callee	fgets		5026353	0					
ANR	5026642	Identifier	fgets		5026353	0					
ANR	5026643	ArgumentList	buff		5026353	1					
ANR	5026644	Argument	buff		5026353	0					
ANR	5026645	Identifier	buff		5026353	0					
ANR	5026646	Argument	sizeof ( buff )		5026353	1					
ANR	5026647	SizeofExpression	sizeof ( buff )		5026353	0					
ANR	5026648	Sizeof	sizeof		5026353	0					
ANR	5026649	SizeofOperand	buff		5026353	1					
ANR	5026650	Argument	fp		5026353	2					
ANR	5026651	Identifier	fp		5026353	0					
ANR	5026652	Identifier	NULL		5026353	1					
ANR	5026653	CompoundStatement		242:51:5673:5673	5026353	1					
ANR	5026654	ExpressionStatement	line += buff	766:2:16820:16832	5026353	0	True				
ANR	5026655	AssignmentExpression	line += buff		5026353	0		+=			
ANR	5026656	Identifier	line		5026353	0					
ANR	5026657	Identifier	buff		5026353	1					
ANR	5026658	IfStatement	if ( line . chomp ( ) )		5026353	1					
ANR	5026659	Condition	line . chomp ( )	767:7:16841:16852	5026353	0	True				
ANR	5026660	CallExpression	line . chomp ( )		5026353	0					
ANR	5026661	Callee	line . chomp		5026353	0					
ANR	5026662	MemberAccess	line . chomp		5026353	0					
ANR	5026663	Identifier	line		5026353	0					
ANR	5026664	Identifier	chomp		5026353	1					
ANR	5026665	ArgumentList			5026353	1					
ANR	5026666	CompoundStatement		244:22:5713:5713	5026353	1					
ANR	5026667	ExpressionStatement	my_cmd_out -> append ( line . Value ( ) )	768:3:16861:16895	5026353	0	True				
ANR	5026668	CallExpression	my_cmd_out -> append ( line . Value ( ) )		5026353	0					
ANR	5026669	Callee	my_cmd_out -> append		5026353	0					
ANR	5026670	PtrMemberAccess	my_cmd_out -> append		5026353	0					
ANR	5026671	Identifier	my_cmd_out		5026353	0					
ANR	5026672	Identifier	append		5026353	1					
ANR	5026673	ArgumentList	line . Value ( )		5026353	1					
ANR	5026674	Argument	line . Value ( )		5026353	0					
ANR	5026675	CallExpression	line . Value ( )		5026353	0					
ANR	5026676	Callee	line . Value		5026353	0					
ANR	5026677	MemberAccess	line . Value		5026353	0					
ANR	5026678	Identifier	line		5026353	0					
ANR	5026679	Identifier	Value		5026353	1					
ANR	5026680	ArgumentList			5026353	1					
ANR	5026681	ExpressionStatement	"line = """""	769:3:16900:16909	5026353	1	True				
ANR	5026682	AssignmentExpression	"line = """""		5026353	0		=			
ANR	5026683	Identifier	line		5026353	0					
ANR	5026684	PrimaryExpression	""""""		5026353	1					
ANR	5026685	IfStatement	if ( cmd_err != NULL )		5026353	21					
ANR	5026686	Condition	cmd_err != NULL	773:4:16923:16937	5026353	0	True				
ANR	5026687	EqualityExpression	cmd_err != NULL		5026353	0		!=			
ANR	5026688	Identifier	cmd_err		5026353	0					
ANR	5026689	Identifier	NULL		5026353	1					
ANR	5026690	CompoundStatement		251:3:5800:5800	5026353	1					
ANR	5026691	WhileStatement	"while ( fgets ( buff , sizeof ( buff ) , childerr ) != NULL )"		5026353	0					
ANR	5026692	Condition	"fgets ( buff , sizeof ( buff ) , childerr ) != NULL"	775:11:16956:16998	5026353	0	True				
ANR	5026693	EqualityExpression	"fgets ( buff , sizeof ( buff ) , childerr ) != NULL"		5026353	0		!=			
ANR	5026694	CallExpression	"fgets ( buff , sizeof ( buff ) , childerr )"		5026353	0					
ANR	5026695	Callee	fgets		5026353	0					
ANR	5026696	Identifier	fgets		5026353	0					
ANR	5026697	ArgumentList	buff		5026353	1					
ANR	5026698	Argument	buff		5026353	0					
ANR	5026699	Identifier	buff		5026353	0					
ANR	5026700	Argument	sizeof ( buff )		5026353	1					
ANR	5026701	SizeofExpression	sizeof ( buff )		5026353	0					
ANR	5026702	Sizeof	sizeof		5026353	0					
ANR	5026703	SizeofOperand	buff		5026353	1					
ANR	5026704	Argument	childerr		5026353	2					
ANR	5026705	Identifier	childerr		5026353	0					
ANR	5026706	Identifier	NULL		5026353	1					
ANR	5026707	CompoundStatement		253:7:5865:5865	5026353	1					
ANR	5026708	ExpressionStatement	line += buff	777:2:17012:17024	5026353	0	True				
ANR	5026709	AssignmentExpression	line += buff		5026353	0		+=			
ANR	5026710	Identifier	line		5026353	0					
ANR	5026711	Identifier	buff		5026353	1					
ANR	5026712	IfStatement	if ( line . chomp ( ) )		5026353	1					
ANR	5026713	Condition	line . chomp ( )	778:5:17031:17042	5026353	0	True				
ANR	5026714	CallExpression	line . chomp ( )		5026353	0					
ANR	5026715	Callee	line . chomp		5026353	0					
ANR	5026716	MemberAccess	line . chomp		5026353	0					
ANR	5026717	Identifier	line		5026353	0					
ANR	5026718	Identifier	chomp		5026353	1					
ANR	5026719	ArgumentList			5026353	1					
ANR	5026720	CompoundStatement		256:4:5906:5906	5026353	1					
ANR	5026721	ExpressionStatement	cmd_err -> append ( line . Value ( ) )	780:6:17057:17086	5026353	0	True				
ANR	5026722	CallExpression	cmd_err -> append ( line . Value ( ) )		5026353	0					
ANR	5026723	Callee	cmd_err -> append		5026353	0					
ANR	5026724	PtrMemberAccess	cmd_err -> append		5026353	0					
ANR	5026725	Identifier	cmd_err		5026353	0					
ANR	5026726	Identifier	append		5026353	1					
ANR	5026727	ArgumentList	line . Value ( )		5026353	1					
ANR	5026728	Argument	line . Value ( )		5026353	0					
ANR	5026729	CallExpression	line . Value ( )		5026353	0					
ANR	5026730	Callee	line . Value		5026353	0					
ANR	5026731	MemberAccess	line . Value		5026353	0					
ANR	5026732	Identifier	line		5026353	0					
ANR	5026733	Identifier	Value		5026353	1					
ANR	5026734	ArgumentList			5026353	1					
ANR	5026735	ExpressionStatement	"line = """""	781:6:17094:17103	5026353	1	True				
ANR	5026736	AssignmentExpression	"line = """""		5026353	0		=			
ANR	5026737	Identifier	line		5026353	0					
ANR	5026738	PrimaryExpression	""""""		5026353	1					
ANR	5026739	ExpressionStatement	fclose ( childerr )	784:5:17125:17141	5026353	1	True				
ANR	5026740	CallExpression	fclose ( childerr )		5026353	0					
ANR	5026741	Callee	fclose		5026353	0					
ANR	5026742	Identifier	fclose		5026353	0					
ANR	5026743	ArgumentList	childerr		5026353	1					
ANR	5026744	Argument	childerr		5026353	0					
ANR	5026745	Identifier	childerr		5026353	0					
ANR	5026746	ExpressionStatement	result = my_pclose ( fp )	787:1:17168:17192	5026353	22	True				
ANR	5026747	AssignmentExpression	result = my_pclose ( fp )		5026353	0		=			
ANR	5026748	Identifier	result		5026353	0					
ANR	5026749	CallExpression	my_pclose ( fp )		5026353	1					
ANR	5026750	Callee	my_pclose		5026353	0					
ANR	5026751	Identifier	my_pclose		5026353	0					
ANR	5026752	ArgumentList	fp		5026353	1					
ANR	5026753	Argument	fp		5026353	0					
ANR	5026754	Identifier	fp		5026353	0					
ANR	5026755	IfStatement	if ( result != 0 )		5026353	23					
ANR	5026756	Condition	result != 0	803:5:17561:17571	5026353	0	True				
ANR	5026757	EqualityExpression	result != 0		5026353	0		!=			
ANR	5026758	Identifier	result		5026353	0					
ANR	5026759	PrimaryExpression	0		5026353	1					
ANR	5026760	CompoundStatement		287:2:6632:6653	5026353	1					
ANR	5026761	IdentifierDeclStatement	MyString args_string ;	804:2:17579:17599	5026353	0	True				
ANR	5026762	IdentifierDecl	args_string		5026353	0					
ANR	5026763	IdentifierDeclType	MyString		5026353	0					
ANR	5026764	Identifier	args_string		5026353	1					
ANR	5026765	ExpressionStatement	"args . GetArgsStringForDisplay ( & args_string , 0 )"	805:2:17603:17647	5026353	1	True				
ANR	5026766	CallExpression	"args . GetArgsStringForDisplay ( & args_string , 0 )"		5026353	0					
ANR	5026767	Callee	args . GetArgsStringForDisplay		5026353	0					
ANR	5026768	MemberAccess	args . GetArgsStringForDisplay		5026353	0					
ANR	5026769	Identifier	args		5026353	0					
ANR	5026770	Identifier	GetArgsStringForDisplay		5026353	1					
ANR	5026771	ArgumentList	& args_string		5026353	1					
ANR	5026772	Argument	& args_string		5026353	0					
ANR	5026773	UnaryOperationExpression	& args_string		5026353	0					
ANR	5026774	UnaryOperator	&		5026353	0					
ANR	5026775	Identifier	args_string		5026353	1					
ANR	5026776	Argument	0		5026353	1					
ANR	5026777	PrimaryExpression	0		5026353	0					
ANR	5026778	ExpressionStatement	"vmprintf ( D_ALWAYS , ""Command returned non-zero: %s\\n"" , args_string . Value ( ) )"	806:2:17651:17747	5026353	2	True				
ANR	5026779	CallExpression	"vmprintf ( D_ALWAYS , ""Command returned non-zero: %s\\n"" , args_string . Value ( ) )"		5026353	0					
ANR	5026780	Callee	vmprintf		5026353	0					
ANR	5026781	Identifier	vmprintf		5026353	0					
ANR	5026782	ArgumentList	D_ALWAYS		5026353	1					
ANR	5026783	Argument	D_ALWAYS		5026353	0					
ANR	5026784	Identifier	D_ALWAYS		5026353	0					
ANR	5026785	Argument	"""Command returned non-zero: %s\\n"""		5026353	1					
ANR	5026786	PrimaryExpression	"""Command returned non-zero: %s\\n"""		5026353	0					
ANR	5026787	Argument	args_string . Value ( )		5026353	2					
ANR	5026788	CallExpression	args_string . Value ( )		5026353	0					
ANR	5026789	Callee	args_string . Value		5026353	0					
ANR	5026790	MemberAccess	args_string . Value		5026353	0					
ANR	5026791	Identifier	args_string		5026353	0					
ANR	5026792	Identifier	Value		5026353	1					
ANR	5026793	ArgumentList			5026353	1					
ANR	5026794	ExpressionStatement	my_cmd_out -> rewind ( )	809:2:17751:17771	5026353	3	True				
ANR	5026795	CallExpression	my_cmd_out -> rewind ( )		5026353	0					
ANR	5026796	Callee	my_cmd_out -> rewind		5026353	0					
ANR	5026797	PtrMemberAccess	my_cmd_out -> rewind		5026353	0					
ANR	5026798	Identifier	my_cmd_out		5026353	0					
ANR	5026799	Identifier	rewind		5026353	1					
ANR	5026800	ArgumentList			5026353	1					
ANR	5026801	IdentifierDeclStatement	const char * next_line ;	810:2:17775:17796	5026353	4	True				
ANR	5026802	IdentifierDecl	* next_line		5026353	0					
ANR	5026803	IdentifierDeclType	const char *		5026353	0					
ANR	5026804	Identifier	next_line		5026353	1					
ANR	5026805	WhileStatement	while ( ( next_line = my_cmd_out -> next ( ) ) )		5026353	5					
ANR	5026806	Condition	next_line = my_cmd_out -> next ( )	811:10:17808:17839	5026353	0	True				
ANR	5026807	AssignmentExpression	next_line = my_cmd_out -> next ( )		5026353	0		=			
ANR	5026808	Identifier	next_line		5026353	0					
ANR	5026809	CallExpression	my_cmd_out -> next ( )		5026353	1					
ANR	5026810	Callee	my_cmd_out -> next		5026353	0					
ANR	5026811	PtrMemberAccess	my_cmd_out -> next		5026353	0					
ANR	5026812	Identifier	my_cmd_out		5026353	0					
ANR	5026813	Identifier	next		5026353	1					
ANR	5026814	ArgumentList			5026353	1					
ANR	5026815	CompoundStatement		288:45:6700:6700	5026353	1					
ANR	5026816	ExpressionStatement	"vmprintf ( D_ALWAYS , ""  %s\\n"" , next_line )"	812:3:17848:17889	5026353	0	True				
ANR	5026817	CallExpression	"vmprintf ( D_ALWAYS , ""  %s\\n"" , next_line )"		5026353	0					
ANR	5026818	Callee	vmprintf		5026353	0					
ANR	5026819	Identifier	vmprintf		5026353	0					
ANR	5026820	ArgumentList	D_ALWAYS		5026353	1					
ANR	5026821	Argument	D_ALWAYS		5026353	0					
ANR	5026822	Identifier	D_ALWAYS		5026353	0					
ANR	5026823	Argument	"""  %s\\n"""		5026353	1					
ANR	5026824	PrimaryExpression	"""  %s\\n"""		5026353	0					
ANR	5026825	Argument	next_line		5026353	2					
ANR	5026826	Identifier	next_line		5026353	0					
ANR	5026827	IfStatement	if ( cmd_out == NULL )		5026353	24					
ANR	5026828	Condition	cmd_out == NULL	815:6:17904:17918	5026353	0	True				
ANR	5026829	EqualityExpression	cmd_out == NULL		5026353	0		==			
ANR	5026830	Identifier	cmd_out		5026353	0					
ANR	5026831	Identifier	NULL		5026353	1					
ANR	5026832	CompoundStatement		292:24:6779:6779	5026353	1					
ANR	5026833	Statement	delete	816:2:17926:17931	5026353	0	True				
ANR	5026834	ExpressionStatement	my_cmd_out	816:9:17933:17943	5026353	1	True				
ANR	5026835	Identifier	my_cmd_out		5026353	0					
ANR	5026836	ReturnStatement	return result ;	818:1:17949:17962	5026353	25	True				
ANR	5026837	Identifier	result		5026353	0					
ANR	5026838	ReturnType	int		5026353	1					
ANR	5026839	Identifier	systemCommand		5026353	2					
ANR	5026840	ParameterList	"ArgList & args , priv_state priv , StringList * cmd_out , StringList * cmd_in , StringList * cmd_err , bool merge_stderr_with_stdout"		5026353	3					
ANR	5026841	Parameter	ArgList & args	522:19:11011:11023	5026353	0	True				
ANR	5026842	ParameterType	ArgList &		5026353	0					
ANR	5026843	Identifier	args		5026353	1					
ANR	5026844	Parameter	priv_state priv	522:34:11026:11040	5026353	1	True				
ANR	5026845	ParameterType	priv_state		5026353	0					
ANR	5026846	Identifier	priv		5026353	1					
ANR	5026847	Parameter	StringList * cmd_out	522:51:11043:11061	5026353	2	True				
ANR	5026848	ParameterType	StringList *		5026353	0					
ANR	5026849	Identifier	cmd_out		5026353	1					
ANR	5026850	Parameter	StringList * cmd_in	522:72:11064:11082	5026353	3	True				
ANR	5026851	ParameterType	StringList *		5026353	0					
ANR	5026852	Identifier	cmd_in		5026353	1					
ANR	5026853	Parameter	StringList * cmd_err	523:5:11090:11108	5026353	4	True				
ANR	5026854	ParameterType	StringList *		5026353	0					
ANR	5026855	Identifier	cmd_err		5026353	1					
ANR	5026856	Parameter	bool merge_stderr_with_stdout	523:26:11111:11139	5026353	5	True				
ANR	5026857	ParameterType	bool		5026353	0					
ANR	5026858	Identifier	merge_stderr_with_stdout		5026353	1					
ANR	5026859	CFGEntryNode	ENTRY		5026353		True				
ANR	5026860	CFGExitNode	EXIT		5026353		True				
ANR	5026861	Symbol	& args_string		5026353						
ANR	5026862	Symbol	use_privsep		5026353						
ANR	5026863	Symbol	job_user_uid		5026353						
ANR	5026864	Symbol	line		5026353						
ANR	5026865	Symbol	prev		5026353						
ANR	5026866	Symbol	merge_stderr_with_stdout		5026353						
ANR	5026867	Symbol	set_user_priv		5026353						
ANR	5026868	Symbol	next_line		5026353						
ANR	5026869	Symbol	fp		5026353						
ANR	5026870	Symbol	pid		5026353						
ANR	5026871	Symbol	my_popen		5026353						
ANR	5026872	Symbol	PRIV_UNKNOWN		5026353						
ANR	5026873	Symbol	fgets		5026353						
ANR	5026874	Symbol	result		5026353						
ANR	5026875	Symbol	my_cmd_out -> next		5026353						
ANR	5026876	Symbol	my_cmd_out		5026353						
ANR	5026877	Symbol	cmd_in		5026353						
ANR	5026878	Symbol	cmd_in -> next		5026353						
ANR	5026879	Symbol	tmp		5026353						
ANR	5026880	Symbol	cmd_err		5026353						
ANR	5026881	Symbol	* cmd_in		5026353						
ANR	5026882	Symbol	priv		5026353						
ANR	5026883	Symbol	args_string		5026353						
ANR	5026884	Symbol	NULL		5026353						
ANR	5026885	Symbol	childerr		5026353						
ANR	5026886	Symbol	line . Value		5026353						
ANR	5026887	Symbol	false		5026353						
ANR	5026888	Symbol	D_ALWAYS		5026353						
ANR	5026889	Symbol	args_string . Value		5026353						
ANR	5026890	Symbol	set_root_priv		5026353						
ANR	5026891	Symbol	stdout_pipes		5026353						
ANR	5026892	Symbol	args		5026353						
ANR	5026893	Symbol	stdin_pipes		5026353						
ANR	5026894	Symbol	* my_cmd_out		5026353						
ANR	5026895	Symbol	get_condor_uid		5026353						
ANR	5026896	Symbol	fp_for_stdin		5026353						
ANR	5026897	Symbol	privsep_enabled		5026353						
ANR	5026898	Symbol	true		5026353						
ANR	5026899	Symbol	buff		5026353						
ANR	5026900	Symbol	my_pclose		5026353						
ANR	5026901	Symbol	cmd_out		5026353						
ANR	5026902	Symbol	line . chomp		5026353						
ANR	5026903	Function	makeErrorMessage	821:0:17967:18288							
ANR	5026904	FunctionDef	makeErrorMessage (const char * err_string)		5026903	0					
ANR	5026905	CompoundStatement		823:0:18017:18288	5026903	0					
ANR	5026906	IdentifierDeclStatement	MyString buffer ;	824:1:18020:18035	5026903	0	True				
ANR	5026907	IdentifierDecl	buffer		5026903	0					
ANR	5026908	IdentifierDeclType	MyString		5026903	0					
ANR	5026909	Identifier	buffer		5026903	1					
ANR	5026910	IfStatement	if ( err_string )		5026903	1					
ANR	5026911	Condition	err_string	826:5:18043:18052	5026903	0	True				
ANR	5026912	Identifier	err_string		5026903	0					
ANR	5026913	CompoundStatement		4:18:38:38	5026903	1					
ANR	5026914	ForStatement	for ( int i = 0 ; err_string [ i ] != '\\0' ; i ++ )		5026903	0					
ANR	5026915	ForInit	int i = 0 ;	827:7:18065:18074	5026903	0	True				
ANR	5026916	IdentifierDeclStatement	int i = 0 ;		5026903	0					
ANR	5026917	IdentifierDecl	i = 0		5026903	0					
ANR	5026918	IdentifierDeclType	int		5026903	0					
ANR	5026919	Identifier	i		5026903	1					
ANR	5026920	AssignmentExpression	i = 0		5026903	2		=			
ANR	5026921	Identifier	i		5026903	0					
ANR	5026922	PrimaryExpression	0		5026903	1					
ANR	5026923	Condition	err_string [ i ] != '\\0'	827:18:18076:18096	5026903	1	True				
ANR	5026924	EqualityExpression	err_string [ i ] != '\\0'		5026903	0		!=			
ANR	5026925	ArrayIndexing	err_string [ i ]		5026903	0					
ANR	5026926	Identifier	err_string		5026903	0					
ANR	5026927	Identifier	i		5026903	1					
ANR	5026928	PrimaryExpression	'\\0'		5026903	1					
ANR	5026929	PostIncDecOperationExpression	i ++	827:41:18099:18101	5026903	2	True				
ANR	5026930	Identifier	i		5026903	0					
ANR	5026931	IncDec	++		5026903	1					
ANR	5026932	CompoundStatement		5:47:87:87	5026903	3					
ANR	5026933	SwitchStatement	switch ( err_string [ i ] )		5026903	0					
ANR	5026934	Condition	err_string [ i ]	828:11:18118:18130	5026903	0	True				
ANR	5026935	ArrayIndexing	err_string [ i ]		5026903	0					
ANR	5026936	Identifier	err_string		5026903	0					
ANR	5026937	Identifier	i		5026903	1					
ANR	5026938	CompoundStatement		6:27:116:116	5026903	1					
ANR	5026939	Label	case ' ' :	829:4:18140:18148	5026903	0	True				
ANR	5026940	Label	case '\\\\' :	830:4:18154:18163	5026903	1	True				
ANR	5026941	Label	case '\\r' :	831:4:18169:18178	5026903	2	True				
ANR	5026942	Label	case '\\n' :	832:4:18184:18193	5026903	3	True				
ANR	5026943	ExpressionStatement	buffer += '\\\\'	833:5:18200:18214	5026903	4	True				
ANR	5026944	AssignmentExpression	buffer += '\\\\'		5026903	0		+=			
ANR	5026945	Identifier	buffer		5026903	0					
ANR	5026946	PrimaryExpression	'\\\\'		5026903	1					
ANR	5026947	Label	default :	834:4:18220:18227	5026903	5	True				
ANR	5026948	Identifier	default		5026903	0					
ANR	5026949	ExpressionStatement	buffer += err_string [ i ]	835:5:18234:18257	5026903	6	True				
ANR	5026950	AssignmentExpression	buffer += err_string [ i ]		5026903	0		+=			
ANR	5026951	Identifier	buffer		5026903	0					
ANR	5026952	ArrayIndexing	err_string [ i ]		5026903	1					
ANR	5026953	Identifier	err_string		5026903	0					
ANR	5026954	Identifier	i		5026903	1					
ANR	5026955	ReturnStatement	return buffer ;	840:1:18273:18286	5026903	2	True				
ANR	5026956	Identifier	buffer		5026903	0					
ANR	5026957	ReturnType	MyString		5026903	1					
ANR	5026958	Identifier	makeErrorMessage		5026903	2					
ANR	5026959	ParameterList	const char * err_string		5026903	3					
ANR	5026960	Parameter	const char * err_string	822:17:17993:18014	5026903	0	True				
ANR	5026961	ParameterType	const char *		5026903	0					
ANR	5026962	Identifier	err_string		5026903	1					
ANR	5026963	CFGEntryNode	ENTRY		5026903		True				
ANR	5026964	CFGExitNode	EXIT		5026903		True				
ANR	5026965	Symbol	* i		5026903						
ANR	5026966	Symbol	err_string		5026903						
ANR	5026967	Symbol	* err_string		5026903						
ANR	5026968	Symbol	i		5026903						
ANR	5026969	Symbol	buffer		5026903						
