command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1273511	File	data/converged/CVE-2011-4930_htcondor/dprintf_config.cpp								
ANR	1273512	DeclStmt									
ANR	1273513	Decl							int	int	Termlog
ANR	1273514	DeclStmt									
ANR	1273515	Decl							extern int	extern int	DebugFlags
ANR	1273516	DeclStmt									
ANR	1273517	Decl							extern FILE	extern FILE * [ D_NUMLEVELS + 1 ]	DebugFPs
ANR	1273518	DeclStmt									
ANR	1273519	Decl							extern std :: vector < DebugFileInfo >	extern std :: vector < DebugFileInfo > *	DebugLogs
ANR	1273520	DeclStmt									
ANR	1273521	Decl							extern char	extern char *	DebugLock
ANR	1273522	DeclStmt									
ANR	1273523	Decl							const char	const char * [ ]	_condor_DebugFlagNames
ANR	1273524	DeclStmt									
ANR	1273525	Decl							extern int	extern int	_condor_dprintf_works
ANR	1273526	DeclStmt									
ANR	1273527	Decl							extern time_t	extern time_t	DebugLastMod
ANR	1273528	DeclStmt									
ANR	1273529	Decl							extern int	extern int	DebugUseTimestamps
ANR	1273530	DeclStmt									
ANR	1273531	Decl							extern int	extern int	DebugContinueOnOpenFailure
ANR	1273532	DeclStmt									
ANR	1273533	Decl							extern int	extern int	log_keep_open
ANR	1273534	DeclStmt									
ANR	1273535	Decl							extern void	extern void ( const char * strflags )	_condor_set_debug_flags
ANR	1273536	DeclStmt									
ANR	1273537	Decl							extern void	extern void ( void )	_condor_dprintf_saved_lines
ANR	1273538	DeclStmt									
ANR	1273539	Decl							extern bool	"extern bool ( struct DebugFileInfo & it , bool fTruncate , bool dont_panic )"	debug_check_it
ANR	1273540	DeclStmt									
ANR	1273541	Decl							param_functions	param_functions *	dprintf_param_funcs
ANR	1273542	DeclStmt									
ANR	1273543	Decl							void	"void ( int flags , char * fmt , va_list args )"	_condor_gcb_dprintf_va
ANR	1273544	DeclStmt									
ANR	1273545	Decl							void	"void ( void ( * app_log_va ) ( int level , char * fmt , va_list args ) )"	Generic_set_log_va
ANR	1273546	Function	sig_backtrace_handler	62:0:2047:2342							
ANR	1273547	FunctionDef	sig_backtrace_handler (int signum)		1273546	0					
ANR	1273548	CompoundStatement		64:0:2093:2342	1273546	0					
ANR	1273549	ExpressionStatement	dprintf_dump_stack ( )	65:1:2096:2116	1273546	0	True				
ANR	1273550	CallExpression	dprintf_dump_stack ( )		1273546	0					
ANR	1273551	Callee	dprintf_dump_stack		1273546	0					
ANR	1273552	Identifier	dprintf_dump_stack		1273546	0					
ANR	1273553	ArgumentList			1273546	1					
ANR	1273554	IdentifierDeclStatement	struct sigaction sa ;	68:1:2156:2175	1273546	1	True				
ANR	1273555	IdentifierDecl	sa		1273546	0					
ANR	1273556	IdentifierDeclType	struct sigaction		1273546	0					
ANR	1273557	Identifier	sa		1273546	1					
ANR	1273558	ExpressionStatement	sa . sa_handler = SIG_DFL	69:1:2178:2201	1273546	2	True				
ANR	1273559	AssignmentExpression	sa . sa_handler = SIG_DFL		1273546	0		=			
ANR	1273560	MemberAccess	sa . sa_handler		1273546	0					
ANR	1273561	Identifier	sa		1273546	0					
ANR	1273562	Identifier	sa_handler		1273546	1					
ANR	1273563	Identifier	SIG_DFL		1273546	1					
ANR	1273564	ExpressionStatement	sigemptyset ( & sa . sa_mask )	70:1:2204:2228	1273546	3	True				
ANR	1273565	CallExpression	sigemptyset ( & sa . sa_mask )		1273546	0					
ANR	1273566	Callee	sigemptyset		1273546	0					
ANR	1273567	Identifier	sigemptyset		1273546	0					
ANR	1273568	ArgumentList	& sa . sa_mask		1273546	1					
ANR	1273569	Argument	& sa . sa_mask		1273546	0					
ANR	1273570	UnaryOperationExpression	& sa . sa_mask		1273546	0					
ANR	1273571	UnaryOperator	&		1273546	0					
ANR	1273572	MemberAccess	sa . sa_mask		1273546	1					
ANR	1273573	Identifier	sa		1273546	0					
ANR	1273574	Identifier	sa_mask		1273546	1					
ANR	1273575	ExpressionStatement	sa . sa_flags = 0	71:1:2231:2246	1273546	4	True				
ANR	1273576	AssignmentExpression	sa . sa_flags = 0		1273546	0		=			
ANR	1273577	MemberAccess	sa . sa_flags		1273546	0					
ANR	1273578	Identifier	sa		1273546	0					
ANR	1273579	Identifier	sa_flags		1273546	1					
ANR	1273580	PrimaryExpression	0		1273546	1					
ANR	1273581	ExpressionStatement	"sigaction ( signum , & sa , NULL )"	72:1:2249:2277	1273546	5	True				
ANR	1273582	CallExpression	"sigaction ( signum , & sa , NULL )"		1273546	0					
ANR	1273583	Callee	sigaction		1273546	0					
ANR	1273584	Identifier	sigaction		1273546	0					
ANR	1273585	ArgumentList	signum		1273546	1					
ANR	1273586	Argument	signum		1273546	0					
ANR	1273587	Identifier	signum		1273546	0					
ANR	1273588	Argument	& sa		1273546	1					
ANR	1273589	UnaryOperationExpression	& sa		1273546	0					
ANR	1273590	UnaryOperator	&		1273546	0					
ANR	1273591	Identifier	sa		1273546	1					
ANR	1273592	Argument	NULL		1273546	2					
ANR	1273593	Identifier	NULL		1273546	0					
ANR	1273594	ExpressionStatement	"sigprocmask ( SIG_SETMASK , & sa . sa_mask , NULL )"	73:1:2280:2323	1273546	6	True				
ANR	1273595	CallExpression	"sigprocmask ( SIG_SETMASK , & sa . sa_mask , NULL )"		1273546	0					
ANR	1273596	Callee	sigprocmask		1273546	0					
ANR	1273597	Identifier	sigprocmask		1273546	0					
ANR	1273598	ArgumentList	SIG_SETMASK		1273546	1					
ANR	1273599	Argument	SIG_SETMASK		1273546	0					
ANR	1273600	Identifier	SIG_SETMASK		1273546	0					
ANR	1273601	Argument	& sa . sa_mask		1273546	1					
ANR	1273602	UnaryOperationExpression	& sa . sa_mask		1273546	0					
ANR	1273603	UnaryOperator	&		1273546	0					
ANR	1273604	MemberAccess	sa . sa_mask		1273546	1					
ANR	1273605	Identifier	sa		1273546	0					
ANR	1273606	Identifier	sa_mask		1273546	1					
ANR	1273607	Argument	NULL		1273546	2					
ANR	1273608	Identifier	NULL		1273546	0					
ANR	1273609	ExpressionStatement	raise ( signum )	75:1:2327:2340	1273546	7	True				
ANR	1273610	CallExpression	raise ( signum )		1273546	0					
ANR	1273611	Callee	raise		1273546	0					
ANR	1273612	Identifier	raise		1273546	0					
ANR	1273613	ArgumentList	signum		1273546	1					
ANR	1273614	Argument	signum		1273546	0					
ANR	1273615	Identifier	signum		1273546	0					
ANR	1273616	ReturnType	static void		1273546	1					
ANR	1273617	Identifier	sig_backtrace_handler		1273546	2					
ANR	1273618	ParameterList	int signum		1273546	3					
ANR	1273619	Parameter	int signum	63:22:2081:2090	1273546	0	True				
ANR	1273620	ParameterType	int		1273546	0					
ANR	1273621	Identifier	signum		1273546	1					
ANR	1273622	CFGEntryNode	ENTRY		1273546		True				
ANR	1273623	CFGExitNode	EXIT		1273546		True				
ANR	1273624	Symbol	signum		1273546						
ANR	1273625	Symbol	& sa . sa_mask		1273546						
ANR	1273626	Symbol	NULL		1273546						
ANR	1273627	Symbol	SIG_DFL		1273546						
ANR	1273628	Symbol	sa . sa_flags		1273546						
ANR	1273629	Symbol	SIG_SETMASK		1273546						
ANR	1273630	Symbol	& sa		1273546						
ANR	1273631	Symbol	sa		1273546						
ANR	1273632	Symbol	sa . sa_handler		1273546						
ANR	1273633	Function	install_backtrace_handler	78:0:2345:2802							
ANR	1273634	FunctionDef	install_backtrace_handler ()		1273633	0					
ANR	1273635	CompoundStatement		80:0:2389:2802	1273633	0					
ANR	1273636	IdentifierDeclStatement	sigset_t fullset ;	81:1:2392:2408	1273633	0	True				
ANR	1273637	IdentifierDecl	fullset		1273633	0					
ANR	1273638	IdentifierDeclType	sigset_t		1273633	0					
ANR	1273639	Identifier	fullset		1273633	1					
ANR	1273640	ExpressionStatement	sigfillset ( & fullset )	82:1:2411:2433	1273633	1	True				
ANR	1273641	CallExpression	sigfillset ( & fullset )		1273633	0					
ANR	1273642	Callee	sigfillset		1273633	0					
ANR	1273643	Identifier	sigfillset		1273633	0					
ANR	1273644	ArgumentList	& fullset		1273633	1					
ANR	1273645	Argument	& fullset		1273633	0					
ANR	1273646	UnaryOperationExpression	& fullset		1273633	0					
ANR	1273647	UnaryOperator	&		1273633	0					
ANR	1273648	Identifier	fullset		1273633	1					
ANR	1273649	ExpressionStatement	"install_sig_handler_with_mask ( SIGSEGV , & fullset , sig_backtrace_handler )"	83:1:2436:2507	1273633	2	True				
ANR	1273650	CallExpression	"install_sig_handler_with_mask ( SIGSEGV , & fullset , sig_backtrace_handler )"		1273633	0					
ANR	1273651	Callee	install_sig_handler_with_mask		1273633	0					
ANR	1273652	Identifier	install_sig_handler_with_mask		1273633	0					
ANR	1273653	ArgumentList	SIGSEGV		1273633	1					
ANR	1273654	Argument	SIGSEGV		1273633	0					
ANR	1273655	Identifier	SIGSEGV		1273633	0					
ANR	1273656	Argument	& fullset		1273633	1					
ANR	1273657	UnaryOperationExpression	& fullset		1273633	0					
ANR	1273658	UnaryOperator	&		1273633	0					
ANR	1273659	Identifier	fullset		1273633	1					
ANR	1273660	Argument	sig_backtrace_handler		1273633	2					
ANR	1273661	Identifier	sig_backtrace_handler		1273633	0					
ANR	1273662	ExpressionStatement	"install_sig_handler_with_mask ( SIGABRT , & fullset , sig_backtrace_handler )"	84:1:2510:2581	1273633	3	True				
ANR	1273663	CallExpression	"install_sig_handler_with_mask ( SIGABRT , & fullset , sig_backtrace_handler )"		1273633	0					
ANR	1273664	Callee	install_sig_handler_with_mask		1273633	0					
ANR	1273665	Identifier	install_sig_handler_with_mask		1273633	0					
ANR	1273666	ArgumentList	SIGABRT		1273633	1					
ANR	1273667	Argument	SIGABRT		1273633	0					
ANR	1273668	Identifier	SIGABRT		1273633	0					
ANR	1273669	Argument	& fullset		1273633	1					
ANR	1273670	UnaryOperationExpression	& fullset		1273633	0					
ANR	1273671	UnaryOperator	&		1273633	0					
ANR	1273672	Identifier	fullset		1273633	1					
ANR	1273673	Argument	sig_backtrace_handler		1273633	2					
ANR	1273674	Identifier	sig_backtrace_handler		1273633	0					
ANR	1273675	ExpressionStatement	"install_sig_handler_with_mask ( SIGILL , & fullset , sig_backtrace_handler )"	85:1:2584:2654	1273633	4	True				
ANR	1273676	CallExpression	"install_sig_handler_with_mask ( SIGILL , & fullset , sig_backtrace_handler )"		1273633	0					
ANR	1273677	Callee	install_sig_handler_with_mask		1273633	0					
ANR	1273678	Identifier	install_sig_handler_with_mask		1273633	0					
ANR	1273679	ArgumentList	SIGILL		1273633	1					
ANR	1273680	Argument	SIGILL		1273633	0					
ANR	1273681	Identifier	SIGILL		1273633	0					
ANR	1273682	Argument	& fullset		1273633	1					
ANR	1273683	UnaryOperationExpression	& fullset		1273633	0					
ANR	1273684	UnaryOperator	&		1273633	0					
ANR	1273685	Identifier	fullset		1273633	1					
ANR	1273686	Argument	sig_backtrace_handler		1273633	2					
ANR	1273687	Identifier	sig_backtrace_handler		1273633	0					
ANR	1273688	ExpressionStatement	"install_sig_handler_with_mask ( SIGFPE , & fullset , sig_backtrace_handler )"	86:1:2657:2727	1273633	5	True				
ANR	1273689	CallExpression	"install_sig_handler_with_mask ( SIGFPE , & fullset , sig_backtrace_handler )"		1273633	0					
ANR	1273690	Callee	install_sig_handler_with_mask		1273633	0					
ANR	1273691	Identifier	install_sig_handler_with_mask		1273633	0					
ANR	1273692	ArgumentList	SIGFPE		1273633	1					
ANR	1273693	Argument	SIGFPE		1273633	0					
ANR	1273694	Identifier	SIGFPE		1273633	0					
ANR	1273695	Argument	& fullset		1273633	1					
ANR	1273696	UnaryOperationExpression	& fullset		1273633	0					
ANR	1273697	UnaryOperator	&		1273633	0					
ANR	1273698	Identifier	fullset		1273633	1					
ANR	1273699	Argument	sig_backtrace_handler		1273633	2					
ANR	1273700	Identifier	sig_backtrace_handler		1273633	0					
ANR	1273701	ExpressionStatement	"install_sig_handler_with_mask ( SIGBUS , & fullset , sig_backtrace_handler )"	87:1:2730:2800	1273633	6	True				
ANR	1273702	CallExpression	"install_sig_handler_with_mask ( SIGBUS , & fullset , sig_backtrace_handler )"		1273633	0					
ANR	1273703	Callee	install_sig_handler_with_mask		1273633	0					
ANR	1273704	Identifier	install_sig_handler_with_mask		1273633	0					
ANR	1273705	ArgumentList	SIGBUS		1273633	1					
ANR	1273706	Argument	SIGBUS		1273633	0					
ANR	1273707	Identifier	SIGBUS		1273633	0					
ANR	1273708	Argument	& fullset		1273633	1					
ANR	1273709	UnaryOperationExpression	& fullset		1273633	0					
ANR	1273710	UnaryOperator	&		1273633	0					
ANR	1273711	Identifier	fullset		1273633	1					
ANR	1273712	Argument	sig_backtrace_handler		1273633	2					
ANR	1273713	Identifier	sig_backtrace_handler		1273633	0					
ANR	1273714	ReturnType	static void		1273633	1					
ANR	1273715	Identifier	install_backtrace_handler		1273633	2					
ANR	1273716	ParameterList			1273633	3					
ANR	1273717	CFGEntryNode	ENTRY		1273633		True				
ANR	1273718	CFGExitNode	EXIT		1273633		True				
ANR	1273719	Symbol	SIGILL		1273633						
ANR	1273720	Symbol	SIGFPE		1273633						
ANR	1273721	Symbol	fullset		1273633						
ANR	1273722	Symbol	SIGSEGV		1273633						
ANR	1273723	Symbol	SIGBUS		1273633						
ANR	1273724	Symbol	SIGABRT		1273633						
ANR	1273725	Symbol	& fullset		1273633						
ANR	1273726	Symbol	sig_backtrace_handler		1273633						
ANR	1273727	Function	dprintf_config_ContinueOnFailure	91:0:2812:2967							
ANR	1273728	FunctionDef	dprintf_config_ContinueOnFailure (int fContinue)		1273727	0					
ANR	1273729	CompoundStatement		93:0:2867:2967	1273727	0					
ANR	1273730	IdentifierDeclStatement	int fOld = DebugContinueOnOpenFailure ;	94:4:2873:2910	1273727	0	True				
ANR	1273731	IdentifierDecl	fOld = DebugContinueOnOpenFailure		1273727	0					
ANR	1273732	IdentifierDeclType	int		1273727	0					
ANR	1273733	Identifier	fOld		1273727	1					
ANR	1273734	AssignmentExpression	fOld = DebugContinueOnOpenFailure		1273727	2		=			
ANR	1273735	Identifier	DebugContinueOnOpenFailure		1273727	0					
ANR	1273736	Identifier	DebugContinueOnOpenFailure		1273727	1					
ANR	1273737	ExpressionStatement	DebugContinueOnOpenFailure = fContinue	95:1:2913:2951	1273727	1	True				
ANR	1273738	AssignmentExpression	DebugContinueOnOpenFailure = fContinue		1273727	0		=			
ANR	1273739	Identifier	DebugContinueOnOpenFailure		1273727	0					
ANR	1273740	Identifier	fContinue		1273727	1					
ANR	1273741	ReturnStatement	return fOld ;	96:1:2954:2965	1273727	2	True				
ANR	1273742	Identifier	fOld		1273727	0					
ANR	1273743	ReturnType	int		1273727	1					
ANR	1273744	Identifier	dprintf_config_ContinueOnFailure		1273727	2					
ANR	1273745	ParameterList	int fContinue		1273727	3					
ANR	1273746	Parameter	int fContinue	92:35:2851:2863	1273727	0	True				
ANR	1273747	ParameterType	int		1273727	0					
ANR	1273748	Identifier	fContinue		1273727	1					
ANR	1273749	CFGEntryNode	ENTRY		1273727		True				
ANR	1273750	CFGExitNode	EXIT		1273727		True				
ANR	1273751	Symbol	fContinue		1273727						
ANR	1273752	Symbol	DebugContinueOnOpenFailure		1273727						
ANR	1273753	Symbol	fOld		1273727						
ANR	1273754	Function	dprintf_config	99:0:2970:11367							
ANR	1273755	FunctionDef	"dprintf_config (const char * subsys , param_functions * p_funcs)"		1273754	0					
ANR	1273756	CompoundStatement		101:0:3038:11367	1273754	0					
ANR	1273757	IdentifierDeclStatement	char pname [ BUFSIZ ] ;	102:1:3041:3061	1273754	0	True				
ANR	1273758	IdentifierDecl	pname [ BUFSIZ ]		1273754	0					
ANR	1273759	IdentifierDeclType	char [ BUFSIZ ]		1273754	0					
ANR	1273760	Identifier	pname		1273754	1					
ANR	1273761	Identifier	BUFSIZ		1273754	2					
ANR	1273762	IdentifierDeclStatement	char * pval ;	103:1:3064:3074	1273754	1	True				
ANR	1273763	IdentifierDecl	* pval		1273754	0					
ANR	1273764	IdentifierDeclType	char *		1273754	0					
ANR	1273765	Identifier	pval		1273754	1					
ANR	1273766	Statement	static	104:1:3077:3082	1273754	2	True				
ANR	1273767	IdentifierDeclStatement	int first_time = 1 ;	104:8:3084:3102	1273754	3	True				
ANR	1273768	IdentifierDecl	first_time = 1		1273754	0					
ANR	1273769	IdentifierDeclType	int		1273754	0					
ANR	1273770	Identifier	first_time		1273754	1					
ANR	1273771	AssignmentExpression	first_time = 1		1273754	2		=			
ANR	1273772	Identifier	first_time		1273754	0					
ANR	1273773	PrimaryExpression	1		1273754	1					
ANR	1273774	IdentifierDeclStatement	int want_truncate ;	105:1:3105:3122	1273754	4	True				
ANR	1273775	IdentifierDecl	want_truncate		1273754	0					
ANR	1273776	IdentifierDeclType	int		1273754	0					
ANR	1273777	Identifier	want_truncate		1273754	1					
ANR	1273778	IdentifierDeclStatement	int debug_level ;	106:1:3125:3140	1273754	5	True				
ANR	1273779	IdentifierDecl	debug_level		1273754	0					
ANR	1273780	IdentifierDeclType	int		1273754	0					
ANR	1273781	Identifier	debug_level		1273754	1					
ANR	1273782	IdentifierDeclStatement	int log_open_default = TRUE ;	107:1:3143:3170	1273754	6	True				
ANR	1273783	IdentifierDecl	log_open_default = TRUE		1273754	0					
ANR	1273784	IdentifierDeclType	int		1273754	0					
ANR	1273785	Identifier	log_open_default		1273754	1					
ANR	1273786	AssignmentExpression	log_open_default = TRUE		1273754	2		=			
ANR	1273787	Identifier	TRUE		1273754	0					
ANR	1273788	Identifier	TRUE		1273754	1					
ANR	1273789	IdentifierDeclStatement	std :: vector < DebugFileInfo > * debugLogsOld = DebugLogs ;	108:1:3173:3225	1273754	7	True				
ANR	1273790	IdentifierDecl	* debugLogsOld = DebugLogs		1273754	0					
ANR	1273791	IdentifierDeclType	std :: vector < DebugFileInfo > *		1273754	0					
ANR	1273792	Identifier	debugLogsOld		1273754	1					
ANR	1273793	AssignmentExpression	* debugLogsOld = DebugLogs		1273754	2		=			
ANR	1273794	Identifier	DebugLogs		1273754	0					
ANR	1273795	Identifier	DebugLogs		1273754	1					
ANR	1273796	IdentifierDeclStatement	bool debug_zero = false ;	109:1:3228:3251	1273754	8	True				
ANR	1273797	IdentifierDecl	debug_zero = false		1273754	0					
ANR	1273798	IdentifierDeclType	bool		1273754	0					
ANR	1273799	Identifier	debug_zero		1273754	1					
ANR	1273800	AssignmentExpression	debug_zero = false		1273754	2		=			
ANR	1273801	Identifier	false		1273754	0					
ANR	1273802	Identifier	false		1273754	1					
ANR	1273803	ExpressionStatement	DebugLogs = new std :: vector < DebugFileInfo > ( )	112:1:3321:3365	1273754	9	True				
ANR	1273804	AssignmentExpression	DebugLogs = new std :: vector < DebugFileInfo > ( )		1273754	0		=			
ANR	1273805	Identifier	DebugLogs		1273754	0					
ANR	1273806	UnaryExpression	new std :: vector < DebugFileInfo > ( )		1273754	1					
ANR	1273807	IfStatement	if ( ! dprintf_param_funcs )		1273754	10					
ANR	1273808	Condition	! dprintf_param_funcs	113:4:3371:3390	1273754	0	True				
ANR	1273809	UnaryOperationExpression	! dprintf_param_funcs		1273754	0					
ANR	1273810	UnaryOperator	!		1273754	0					
ANR	1273811	Identifier	dprintf_param_funcs		1273754	1					
ANR	1273812	ExpressionStatement	dprintf_param_funcs = new param_functions ( )	114:2:3395:3438	1273754	1	True				
ANR	1273813	AssignmentExpression	dprintf_param_funcs = new param_functions ( )		1273754	0		=			
ANR	1273814	Identifier	dprintf_param_funcs		1273754	0					
ANR	1273815	UnaryExpression	new param_functions ( )		1273754	1					
ANR	1273816	IfStatement	if ( p_funcs )		1273754	11					
ANR	1273817	Condition	p_funcs	121:4:3714:3720	1273754	0	True				
ANR	1273818	Identifier	p_funcs		1273754	0					
ANR	1273819	CompoundStatement		22:1:685:685	1273754	1					
ANR	1273820	ExpressionStatement	dprintf_param_funcs -> set_param_func ( p_funcs -> get_param_func ( ) )	123:2:3728:3790	1273754	0	True				
ANR	1273821	CallExpression	dprintf_param_funcs -> set_param_func ( p_funcs -> get_param_func ( ) )		1273754	0					
ANR	1273822	Callee	dprintf_param_funcs -> set_param_func		1273754	0					
ANR	1273823	PtrMemberAccess	dprintf_param_funcs -> set_param_func		1273754	0					
ANR	1273824	Identifier	dprintf_param_funcs		1273754	0					
ANR	1273825	Identifier	set_param_func		1273754	1					
ANR	1273826	ArgumentList	p_funcs -> get_param_func ( )		1273754	1					
ANR	1273827	Argument	p_funcs -> get_param_func ( )		1273754	0					
ANR	1273828	CallExpression	p_funcs -> get_param_func ( )		1273754	0					
ANR	1273829	Callee	p_funcs -> get_param_func		1273754	0					
ANR	1273830	PtrMemberAccess	p_funcs -> get_param_func		1273754	0					
ANR	1273831	Identifier	p_funcs		1273754	0					
ANR	1273832	Identifier	get_param_func		1273754	1					
ANR	1273833	ArgumentList			1273754	1					
ANR	1273834	ExpressionStatement	dprintf_param_funcs -> set_param_bool_int_func ( p_funcs -> get_param_bool_int_func ( ) )	124:2:3794:3874	1273754	1	True				
ANR	1273835	CallExpression	dprintf_param_funcs -> set_param_bool_int_func ( p_funcs -> get_param_bool_int_func ( ) )		1273754	0					
ANR	1273836	Callee	dprintf_param_funcs -> set_param_bool_int_func		1273754	0					
ANR	1273837	PtrMemberAccess	dprintf_param_funcs -> set_param_bool_int_func		1273754	0					
ANR	1273838	Identifier	dprintf_param_funcs		1273754	0					
ANR	1273839	Identifier	set_param_bool_int_func		1273754	1					
ANR	1273840	ArgumentList	p_funcs -> get_param_bool_int_func ( )		1273754	1					
ANR	1273841	Argument	p_funcs -> get_param_bool_int_func ( )		1273754	0					
ANR	1273842	CallExpression	p_funcs -> get_param_bool_int_func ( )		1273754	0					
ANR	1273843	Callee	p_funcs -> get_param_bool_int_func		1273754	0					
ANR	1273844	PtrMemberAccess	p_funcs -> get_param_bool_int_func		1273754	0					
ANR	1273845	Identifier	p_funcs		1273754	0					
ANR	1273846	Identifier	get_param_bool_int_func		1273754	1					
ANR	1273847	ArgumentList			1273754	1					
ANR	1273848	ExpressionStatement	dprintf_param_funcs -> set_param_wo_default_func ( p_funcs -> get_param_wo_default_func ( ) )	125:2:3878:3962	1273754	2	True				
ANR	1273849	CallExpression	dprintf_param_funcs -> set_param_wo_default_func ( p_funcs -> get_param_wo_default_func ( ) )		1273754	0					
ANR	1273850	Callee	dprintf_param_funcs -> set_param_wo_default_func		1273754	0					
ANR	1273851	PtrMemberAccess	dprintf_param_funcs -> set_param_wo_default_func		1273754	0					
ANR	1273852	Identifier	dprintf_param_funcs		1273754	0					
ANR	1273853	Identifier	set_param_wo_default_func		1273754	1					
ANR	1273854	ArgumentList	p_funcs -> get_param_wo_default_func ( )		1273754	1					
ANR	1273855	Argument	p_funcs -> get_param_wo_default_func ( )		1273754	0					
ANR	1273856	CallExpression	p_funcs -> get_param_wo_default_func ( )		1273754	0					
ANR	1273857	Callee	p_funcs -> get_param_wo_default_func		1273754	0					
ANR	1273858	PtrMemberAccess	p_funcs -> get_param_wo_default_func		1273754	0					
ANR	1273859	Identifier	p_funcs		1273754	0					
ANR	1273860	Identifier	get_param_wo_default_func		1273754	1					
ANR	1273861	ArgumentList			1273754	1					
ANR	1273862	ExpressionStatement	DebugFlags = D_ALWAYS	133:1:4132:4153	1273754	12	True				
ANR	1273863	AssignmentExpression	DebugFlags = D_ALWAYS		1273754	0		=			
ANR	1273864	Identifier	DebugFlags		1273754	0					
ANR	1273865	Identifier	D_ALWAYS		1273754	1					
ANR	1273866	ExpressionStatement	"pval = dprintf_param_funcs -> param ( ""ALL_DEBUG"" )"	138:1:4225:4271	1273754	13	True				
ANR	1273867	AssignmentExpression	"pval = dprintf_param_funcs -> param ( ""ALL_DEBUG"" )"		1273754	0		=			
ANR	1273868	Identifier	pval		1273754	0					
ANR	1273869	CallExpression	"dprintf_param_funcs -> param ( ""ALL_DEBUG"" )"		1273754	1					
ANR	1273870	Callee	dprintf_param_funcs -> param		1273754	0					
ANR	1273871	PtrMemberAccess	dprintf_param_funcs -> param		1273754	0					
ANR	1273872	Identifier	dprintf_param_funcs		1273754	0					
ANR	1273873	Identifier	param		1273754	1					
ANR	1273874	ArgumentList	"""ALL_DEBUG"""		1273754	1					
ANR	1273875	Argument	"""ALL_DEBUG"""		1273754	0					
ANR	1273876	PrimaryExpression	"""ALL_DEBUG"""		1273754	0					
ANR	1273877	IfStatement	if ( pval )		1273754	14					
ANR	1273878	Condition	pval	139:5:4278:4281	1273754	0	True				
ANR	1273879	Identifier	pval		1273754	0					
ANR	1273880	CompoundStatement		39:12:1246:1246	1273754	1					
ANR	1273881	ExpressionStatement	_condor_set_debug_flags ( pval )	140:2:4289:4320	1273754	0	True				
ANR	1273882	CallExpression	_condor_set_debug_flags ( pval )		1273754	0					
ANR	1273883	Callee	_condor_set_debug_flags		1273754	0					
ANR	1273884	Identifier	_condor_set_debug_flags		1273754	0					
ANR	1273885	ArgumentList	pval		1273754	1					
ANR	1273886	Argument	pval		1273754	0					
ANR	1273887	Identifier	pval		1273754	0					
ANR	1273888	ExpressionStatement	free ( pval )	141:2:4324:4336	1273754	1	True				
ANR	1273889	CallExpression	free ( pval )		1273754	0					
ANR	1273890	Callee	free		1273754	0					
ANR	1273891	Identifier	free		1273754	0					
ANR	1273892	ArgumentList	pval		1273754	1					
ANR	1273893	Argument	pval		1273754	0					
ANR	1273894	Identifier	pval		1273754	0					
ANR	1273895	ExpressionStatement	"( void ) sprintf ( pname , ""%s_DEBUG"" , subsys )"	148:1:4473:4513	1273754	15	True				
ANR	1273896	CastExpression	"( void ) sprintf ( pname , ""%s_DEBUG"" , subsys )"		1273754	0					
ANR	1273897	CastTarget	void		1273754	0					
ANR	1273898	CallExpression	"sprintf ( pname , ""%s_DEBUG"" , subsys )"		1273754	1					
ANR	1273899	Callee	sprintf		1273754	0					
ANR	1273900	Identifier	sprintf		1273754	0					
ANR	1273901	ArgumentList	pname		1273754	1					
ANR	1273902	Argument	pname		1273754	0					
ANR	1273903	Identifier	pname		1273754	0					
ANR	1273904	Argument	"""%s_DEBUG"""		1273754	1					
ANR	1273905	PrimaryExpression	"""%s_DEBUG"""		1273754	0					
ANR	1273906	Argument	subsys		1273754	2					
ANR	1273907	Identifier	subsys		1273754	0					
ANR	1273908	ExpressionStatement	pval = dprintf_param_funcs -> param ( pname )	149:1:4516:4556	1273754	16	True				
ANR	1273909	AssignmentExpression	pval = dprintf_param_funcs -> param ( pname )		1273754	0		=			
ANR	1273910	Identifier	pval		1273754	0					
ANR	1273911	CallExpression	dprintf_param_funcs -> param ( pname )		1273754	1					
ANR	1273912	Callee	dprintf_param_funcs -> param		1273754	0					
ANR	1273913	PtrMemberAccess	dprintf_param_funcs -> param		1273754	0					
ANR	1273914	Identifier	dprintf_param_funcs		1273754	0					
ANR	1273915	Identifier	param		1273754	1					
ANR	1273916	ArgumentList	pname		1273754	1					
ANR	1273917	Argument	pname		1273754	0					
ANR	1273918	Identifier	pname		1273754	0					
ANR	1273919	IfStatement	if ( pval )		1273754	17					
ANR	1273920	Condition	pval	150:5:4563:4566	1273754	0	True				
ANR	1273921	Identifier	pval		1273754	0					
ANR	1273922	CompoundStatement		50:12:1531:1531	1273754	1					
ANR	1273923	ExpressionStatement	_condor_set_debug_flags ( pval )	151:2:4574:4605	1273754	0	True				
ANR	1273924	CallExpression	_condor_set_debug_flags ( pval )		1273754	0					
ANR	1273925	Callee	_condor_set_debug_flags		1273754	0					
ANR	1273926	Identifier	_condor_set_debug_flags		1273754	0					
ANR	1273927	ArgumentList	pval		1273754	1					
ANR	1273928	Argument	pval		1273754	0					
ANR	1273929	Identifier	pval		1273754	0					
ANR	1273930	ExpressionStatement	free ( pval )	152:2:4609:4621	1273754	1	True				
ANR	1273931	CallExpression	free ( pval )		1273754	0					
ANR	1273932	Callee	free		1273754	0					
ANR	1273933	Identifier	free		1273754	0					
ANR	1273934	ArgumentList	pval		1273754	1					
ANR	1273935	Argument	pval		1273754	0					
ANR	1273936	Identifier	pval		1273754	0					
ANR	1273937	ExpressionStatement	DebugShouldLockToAppend = 1	161:1:4856:4883	1273754	18	True				
ANR	1273938	AssignmentExpression	DebugShouldLockToAppend = 1		1273754	0		=			
ANR	1273939	Identifier	DebugShouldLockToAppend		1273754	0					
ANR	1273940	PrimaryExpression	1		1273754	1					
ANR	1273941	IfStatement	if ( ! ( Termlog ) )		1273754	19					
ANR	1273942	Condition	! ( Termlog )	171:5:5163:5173	1273754	0	True				
ANR	1273943	UnaryOperationExpression	! ( Termlog )		1273754	0					
ANR	1273944	UnaryOperator	!		1273754	0					
ANR	1273945	Identifier	Termlog		1273754	1					
ANR	1273946	CompoundStatement		72:2:2142:2181	1273754	1					
ANR	1273947	IdentifierDeclStatement	std :: vector < DebugFileInfo > :: iterator it ;	172:2:5181:5220	1273754	0	True				
ANR	1273948	IdentifierDecl	it		1273754	0					
ANR	1273949	IdentifierDeclType	std :: vector < DebugFileInfo > :: iterator		1273754	0					
ANR	1273950	Identifier	it		1273754	1					
ANR	1273951	ForStatement	for ( debug_level = 0 ; debug_level <= D_NUMLEVELS ; debug_level ++ )		1273754	1					
ANR	1273952	ForInit	debug_level = 0 ;	173:7:5271:5286	1273754	0	True				
ANR	1273953	AssignmentExpression	debug_level = 0		1273754	0		=			
ANR	1273954	Identifier	debug_level		1273754	0					
ANR	1273955	PrimaryExpression	0		1273754	1					
ANR	1273956	Condition	debug_level <= D_NUMLEVELS	173:24:5288:5313	1273754	1	True				
ANR	1273957	RelationalExpression	debug_level <= D_NUMLEVELS		1273754	0		<=			
ANR	1273958	Identifier	debug_level		1273754	0					
ANR	1273959	Identifier	D_NUMLEVELS		1273754	1					
ANR	1273960	PostIncDecOperationExpression	debug_level ++	173:52:5316:5328	1273754	2	True				
ANR	1273961	Identifier	debug_level		1273754	0					
ANR	1273962	IncDec	++		1273754	1					
ANR	1273963	CompoundStatement		74:3:2297:2316	1273754	3					
ANR	1273964	IdentifierDeclStatement	std :: string logPath ;	174:3:5336:5355	1273754	0	True				
ANR	1273965	IdentifierDecl	logPath		1273754	0					
ANR	1273966	IdentifierDeclType	std :: string		1273754	0					
ANR	1273967	Identifier	logPath		1273754	1					
ANR	1273968	ExpressionStatement	want_truncate = 0	175:3:5360:5377	1273754	1	True				
ANR	1273969	AssignmentExpression	want_truncate = 0		1273754	0		=			
ANR	1273970	Identifier	want_truncate		1273754	0					
ANR	1273971	PrimaryExpression	0		1273754	1					
ANR	1273972	IfStatement	if ( debug_level == 0 )		1273754	2					
ANR	1273973	Condition	debug_level == 0	176:7:5386:5401	1273754	0	True				
ANR	1273974	EqualityExpression	debug_level == 0		1273754	0		==			
ANR	1273975	Identifier	debug_level		1273754	0					
ANR	1273976	PrimaryExpression	0		1273754	1					
ANR	1273977	CompoundStatement		76:25:2365:2365	1273754	1					
ANR	1273978	ExpressionStatement	"( void ) sprintf ( pname , ""%s_LOG"" , subsys )"	183:4:5620:5658	1273754	0	True				
ANR	1273979	CastExpression	"( void ) sprintf ( pname , ""%s_LOG"" , subsys )"		1273754	0					
ANR	1273980	CastTarget	void		1273754	0					
ANR	1273981	CallExpression	"sprintf ( pname , ""%s_LOG"" , subsys )"		1273754	1					
ANR	1273982	Callee	sprintf		1273754	0					
ANR	1273983	Identifier	sprintf		1273754	0					
ANR	1273984	ArgumentList	pname		1273754	1					
ANR	1273985	Argument	pname		1273754	0					
ANR	1273986	Identifier	pname		1273754	0					
ANR	1273987	Argument	"""%s_LOG"""		1273754	1					
ANR	1273988	PrimaryExpression	"""%s_LOG"""		1273754	0					
ANR	1273989	Argument	subsys		1273754	2					
ANR	1273990	Identifier	subsys		1273754	0					
ANR	1273991	ElseStatement	else		1273754	0					
ANR	1273992	CompoundStatement		84:10:2631:2631	1273754	0					
ANR	1273993	ExpressionStatement	"( void ) sprintf ( pname , ""%s_%s_LOG"" , subsys , _condor_DebugFlagNames [ debug_level - 1 ] + 2 )"	185:4:5676:5767	1273754	0	True				
ANR	1273994	CastExpression	"( void ) sprintf ( pname , ""%s_%s_LOG"" , subsys , _condor_DebugFlagNames [ debug_level - 1 ] + 2 )"		1273754	0					
ANR	1273995	CastTarget	void		1273754	0					
ANR	1273996	CallExpression	"sprintf ( pname , ""%s_%s_LOG"" , subsys , _condor_DebugFlagNames [ debug_level - 1 ] + 2 )"		1273754	1					
ANR	1273997	Callee	sprintf		1273754	0					
ANR	1273998	Identifier	sprintf		1273754	0					
ANR	1273999	ArgumentList	pname		1273754	1					
ANR	1274000	Argument	pname		1273754	0					
ANR	1274001	Identifier	pname		1273754	0					
ANR	1274002	Argument	"""%s_%s_LOG"""		1273754	1					
ANR	1274003	PrimaryExpression	"""%s_%s_LOG"""		1273754	0					
ANR	1274004	Argument	subsys		1273754	2					
ANR	1274005	Identifier	subsys		1273754	0					
ANR	1274006	Argument	_condor_DebugFlagNames [ debug_level - 1 ] + 2		1273754	3					
ANR	1274007	AdditiveExpression	_condor_DebugFlagNames [ debug_level - 1 ] + 2		1273754	0		+			
ANR	1274008	ArrayIndexing	_condor_DebugFlagNames [ debug_level - 1 ]		1273754	0					
ANR	1274009	Identifier	_condor_DebugFlagNames		1273754	0					
ANR	1274010	AdditiveExpression	debug_level - 1		1273754	1		-			
ANR	1274011	Identifier	debug_level		1273754	0					
ANR	1274012	PrimaryExpression	1		1273754	1					
ANR	1274013	PrimaryExpression	2		1273754	1					
ANR	1274014	CompoundStatement		95:4:2980:3003	1273754	3					
ANR	1274015	IdentifierDeclStatement	char * logPathParam = NULL ;	194:4:5988:6013	1273754	0	True				
ANR	1274016	IdentifierDecl	* logPathParam = NULL		1273754	0					
ANR	1274017	IdentifierDeclType	char *		1273754	0					
ANR	1274018	Identifier	logPathParam		1273754	1					
ANR	1274019	AssignmentExpression	* logPathParam = NULL		1273754	2		=			
ANR	1274020	Identifier	NULL		1273754	0					
ANR	1274021	Identifier	NULL		1273754	1					
ANR	1274022	IdentifierDeclStatement	bool file_found = false ;	195:4:6019:6042	1273754	1	True				
ANR	1274023	IdentifierDecl	file_found = false		1273754	0					
ANR	1274024	IdentifierDeclType	bool		1273754	0					
ANR	1274025	Identifier	file_found		1273754	1					
ANR	1274026	AssignmentExpression	file_found = false		1273754	2		=			
ANR	1274027	Identifier	false		1273754	0					
ANR	1274028	Identifier	false		1273754	1					
ANR	1274029	IfStatement	if ( debug_level == 0 )		1273754	2					
ANR	1274030	Condition	debug_level == 0	196:7:6051:6066	1273754	0	True				
ANR	1274031	EqualityExpression	debug_level == 0		1273754	0		==			
ANR	1274032	Identifier	debug_level		1273754	0					
ANR	1274033	PrimaryExpression	0		1273754	1					
ANR	1274034	CompoundStatement		97:4:3034:3034	1273754	1					
ANR	1274035	ExpressionStatement	logPathParam = param ( pname )	198:5:6080:6107	1273754	0	True				
ANR	1274036	AssignmentExpression	logPathParam = param ( pname )		1273754	0		=			
ANR	1274037	Identifier	logPathParam		1273754	0					
ANR	1274038	CallExpression	param ( pname )		1273754	1					
ANR	1274039	Callee	param		1273754	0					
ANR	1274040	Identifier	param		1273754	0					
ANR	1274041	ArgumentList	pname		1273754	1					
ANR	1274042	Argument	pname		1273754	0					
ANR	1274043	Identifier	pname		1273754	0					
ANR	1274044	IfStatement	if ( ! logPathParam )		1273754	1					
ANR	1274045	Condition	! logPathParam	201:8:6180:6192	1273754	0	True				
ANR	1274046	UnaryOperationExpression	! logPathParam		1273754	0					
ANR	1274047	UnaryOperator	!		1273754	0					
ANR	1274048	Identifier	logPathParam		1273754	1					
ANR	1274049	CompoundStatement		103:6:3196:3230	1273754	1					
ANR	1274050	IdentifierDeclStatement	"char * log = param ( ""LOG"" ) ;"	202:6:6203:6227	1273754	0	True				
ANR	1274051	IdentifierDecl	"* log = param ( ""LOG"" )"		1273754	0					
ANR	1274052	IdentifierDeclType	char *		1273754	0					
ANR	1274053	Identifier	log		1273754	1					
ANR	1274054	AssignmentExpression	"* log = param ( ""LOG"" )"		1273754	2		=			
ANR	1274055	Identifier	log		1273754	0					
ANR	1274056	CallExpression	"param ( ""LOG"" )"		1273754	1					
ANR	1274057	Callee	param		1273754	0					
ANR	1274058	Identifier	param		1273754	0					
ANR	1274059	ArgumentList	"""LOG"""		1273754	1					
ANR	1274060	Argument	"""LOG"""		1273754	0					
ANR	1274061	PrimaryExpression	"""LOG"""		1273754	0					
ANR	1274062	IdentifierDeclStatement	"char * lsubsys = param ( ""SUBSYSTEM"" ) ;"	203:6:6235:6269	1273754	1	True				
ANR	1274063	IdentifierDecl	"* lsubsys = param ( ""SUBSYSTEM"" )"		1273754	0					
ANR	1274064	IdentifierDeclType	char *		1273754	0					
ANR	1274065	Identifier	lsubsys		1273754	1					
ANR	1274066	AssignmentExpression	"* lsubsys = param ( ""SUBSYSTEM"" )"		1273754	2		=			
ANR	1274067	Identifier	lsubsys		1273754	0					
ANR	1274068	CallExpression	"param ( ""SUBSYSTEM"" )"		1273754	1					
ANR	1274069	Callee	param		1273754	0					
ANR	1274070	Identifier	param		1273754	0					
ANR	1274071	ArgumentList	"""SUBSYSTEM"""		1273754	1					
ANR	1274072	Argument	"""SUBSYSTEM"""		1273754	0					
ANR	1274073	PrimaryExpression	"""SUBSYSTEM"""		1273754	0					
ANR	1274074	IfStatement	if ( ! log || ! lsubsys )		1273754	2					
ANR	1274075	Condition	! log || ! lsubsys	204:9:6280:6295	1273754	0	True				
ANR	1274076	OrExpression	! log || ! lsubsys		1273754	0		||			
ANR	1274077	UnaryOperationExpression	! log		1273754	0					
ANR	1274078	UnaryOperator	!		1273754	0					
ANR	1274079	Identifier	log		1273754	1					
ANR	1274080	UnaryOperationExpression	! lsubsys		1273754	1					
ANR	1274081	UnaryOperator	!		1273754	0					
ANR	1274082	Identifier	lsubsys		1273754	1					
ANR	1274083	CompoundStatement		104:27:3259:3259	1273754	1					
ANR	1274084	ExpressionStatement	"EXCEPT ( ""Unable to find LOG or SUBSYSTEM.\\n"" )"	205:7:6307:6351	1273754	0	True				
ANR	1274085	CallExpression	"EXCEPT ( ""Unable to find LOG or SUBSYSTEM.\\n"" )"		1273754	0					
ANR	1274086	Callee	EXCEPT		1273754	0					
ANR	1274087	Identifier	EXCEPT		1273754	0					
ANR	1274088	ArgumentList	"""Unable to find LOG or SUBSYSTEM.\\n"""		1273754	1					
ANR	1274089	Argument	"""Unable to find LOG or SUBSYSTEM.\\n"""		1273754	0					
ANR	1274090	PrimaryExpression	"""Unable to find LOG or SUBSYSTEM.\\n"""		1273754	0					
ANR	1274091	ExpressionStatement	"sprintf ( logPath , ""%s%c%sLog"" , log , DIR_DELIM_CHAR , lsubsys )"	208:6:6374:6433	1273754	3	True				
ANR	1274092	CallExpression	"sprintf ( logPath , ""%s%c%sLog"" , log , DIR_DELIM_CHAR , lsubsys )"		1273754	0					
ANR	1274093	Callee	sprintf		1273754	0					
ANR	1274094	Identifier	sprintf		1273754	0					
ANR	1274095	ArgumentList	logPath		1273754	1					
ANR	1274096	Argument	logPath		1273754	0					
ANR	1274097	Identifier	logPath		1273754	0					
ANR	1274098	Argument	"""%s%c%sLog"""		1273754	1					
ANR	1274099	PrimaryExpression	"""%s%c%sLog"""		1273754	0					
ANR	1274100	Argument	log		1273754	2					
ANR	1274101	Identifier	log		1273754	0					
ANR	1274102	Argument	DIR_DELIM_CHAR		1273754	3					
ANR	1274103	Identifier	DIR_DELIM_CHAR		1273754	0					
ANR	1274104	Argument	lsubsys		1273754	4					
ANR	1274105	Identifier	lsubsys		1273754	0					
ANR	1274106	ExpressionStatement	free ( log )	210:6:6442:6451	1273754	4	True				
ANR	1274107	CallExpression	free ( log )		1273754	0					
ANR	1274108	Callee	free		1273754	0					
ANR	1274109	Identifier	free		1273754	0					
ANR	1274110	ArgumentList	log		1273754	1					
ANR	1274111	Argument	log		1273754	0					
ANR	1274112	Identifier	log		1273754	0					
ANR	1274113	ExpressionStatement	free ( lsubsys )	211:6:6459:6472	1273754	5	True				
ANR	1274114	CallExpression	free ( lsubsys )		1273754	0					
ANR	1274115	Callee	free		1273754	0					
ANR	1274116	Identifier	free		1273754	0					
ANR	1274117	ArgumentList	lsubsys		1273754	1					
ANR	1274118	Argument	lsubsys		1273754	0					
ANR	1274119	Identifier	lsubsys		1273754	0					
ANR	1274120	ElseStatement	else		1273754	0					
ANR	1274121	CompoundStatement		113:10:3452:3452	1273754	0					
ANR	1274122	ExpressionStatement	"logPath . insert ( 0 , logPathParam )"	214:6:6499:6530	1273754	0	True				
ANR	1274123	CallExpression	"logPath . insert ( 0 , logPathParam )"		1273754	0					
ANR	1274124	Callee	logPath . insert		1273754	0					
ANR	1274125	MemberAccess	logPath . insert		1273754	0					
ANR	1274126	Identifier	logPath		1273754	0					
ANR	1274127	Identifier	insert		1273754	1					
ANR	1274128	ArgumentList	0		1273754	1					
ANR	1274129	Argument	0		1273754	0					
ANR	1274130	PrimaryExpression	0		1273754	0					
ANR	1274131	Argument	logPathParam		1273754	1					
ANR	1274132	Identifier	logPathParam		1273754	0					
ANR	1274133	ElseStatement	else		1273754	0					
ANR	1274134	CompoundStatement		117:9:3515:3515	1273754	0					
ANR	1274135	ExpressionStatement	logPathParam = param_without_default ( pname )	223:5:6785:6828	1273754	0	True				
ANR	1274136	AssignmentExpression	logPathParam = param_without_default ( pname )		1273754	0		=			
ANR	1274137	Identifier	logPathParam		1273754	0					
ANR	1274138	CallExpression	param_without_default ( pname )		1273754	1					
ANR	1274139	Callee	param_without_default		1273754	0					
ANR	1274140	Identifier	param_without_default		1273754	0					
ANR	1274141	ArgumentList	pname		1273754	1					
ANR	1274142	Argument	pname		1273754	0					
ANR	1274143	Identifier	pname		1273754	0					
ANR	1274144	IfStatement	if ( logPathParam )		1273754	1					
ANR	1274145	Condition	logPathParam	224:8:6838:6849	1273754	0	True				
ANR	1274146	Identifier	logPathParam		1273754	0					
ANR	1274147	ExpressionStatement	"logPath . insert ( 0 , logPathParam )"	225:6:6858:6889	1273754	1	True				
ANR	1274148	CallExpression	"logPath . insert ( 0 , logPathParam )"		1273754	0					
ANR	1274149	Callee	logPath . insert		1273754	0					
ANR	1274150	MemberAccess	logPath . insert		1273754	0					
ANR	1274151	Identifier	logPath		1273754	0					
ANR	1274152	Identifier	insert		1273754	1					
ANR	1274153	ArgumentList	0		1273754	1					
ANR	1274154	Argument	0		1273754	0					
ANR	1274155	PrimaryExpression	0		1273754	0					
ANR	1274156	Argument	logPathParam		1273754	1					
ANR	1274157	Identifier	logPathParam		1273754	0					
ANR	1274158	IfStatement	if ( ! logPath . empty ( ) )		1273754	3					
ANR	1274159	Condition	! logPath . empty ( )	228:7:6905:6920	1273754	0	True				
ANR	1274160	UnaryOperationExpression	! logPath . empty ( )		1273754	0					
ANR	1274161	UnaryOperator	!		1273754	0					
ANR	1274162	CallExpression	logPath . empty ( )		1273754	1					
ANR	1274163	Callee	logPath . empty		1273754	0					
ANR	1274164	MemberAccess	logPath . empty		1273754	0					
ANR	1274165	Identifier	logPath		1273754	0					
ANR	1274166	Identifier	empty		1273754	1					
ANR	1274167	ArgumentList			1273754	1					
ANR	1274168	CompoundStatement		129:4:3888:3888	1273754	1					
ANR	1274169	IfStatement	if ( ! DebugLogs -> empty ( ) )		1273754	0					
ANR	1274170	Condition	! DebugLogs -> empty ( )	230:8:6937:6955	1273754	0	True				
ANR	1274171	UnaryOperationExpression	! DebugLogs -> empty ( )		1273754	0					
ANR	1274172	UnaryOperator	!		1273754	0					
ANR	1274173	CallExpression	DebugLogs -> empty ( )		1273754	1					
ANR	1274174	Callee	DebugLogs -> empty		1273754	0					
ANR	1274175	PtrMemberAccess	DebugLogs -> empty		1273754	0					
ANR	1274176	Identifier	DebugLogs		1273754	0					
ANR	1274177	Identifier	empty		1273754	1					
ANR	1274178	ArgumentList			1273754	1					
ANR	1274179	CompoundStatement		131:5:3924:3924	1273754	1					
ANR	1274180	ForStatement	for ( it = DebugLogs -> begin ( ) ; it < DebugLogs -> end ( ) ; it ++ )		1273754	0					
ANR	1274181	ForInit	it = DebugLogs -> begin ( ) ;	232:10:6975:6998	1273754	0	True				
ANR	1274182	AssignmentExpression	it = DebugLogs -> begin ( )		1273754	0		=			
ANR	1274183	Identifier	it		1273754	0					
ANR	1274184	CallExpression	DebugLogs -> begin ( )		1273754	1					
ANR	1274185	Callee	DebugLogs -> begin		1273754	0					
ANR	1274186	PtrMemberAccess	DebugLogs -> begin		1273754	0					
ANR	1274187	Identifier	DebugLogs		1273754	0					
ANR	1274188	Identifier	begin		1273754	1					
ANR	1274189	ArgumentList			1273754	1					
ANR	1274190	Condition	it < DebugLogs -> end ( )	232:35:7000:7020	1273754	1	True				
ANR	1274191	RelationalExpression	it < DebugLogs -> end ( )		1273754	0		<			
ANR	1274192	Identifier	it		1273754	0					
ANR	1274193	CallExpression	DebugLogs -> end ( )		1273754	1					
ANR	1274194	Callee	DebugLogs -> end		1273754	0					
ANR	1274195	PtrMemberAccess	DebugLogs -> end		1273754	0					
ANR	1274196	Identifier	DebugLogs		1273754	0					
ANR	1274197	Identifier	end		1273754	1					
ANR	1274198	ArgumentList			1273754	1					
ANR	1274199	PostIncDecOperationExpression	it ++	232:58:7023:7026	1273754	2	True				
ANR	1274200	Identifier	it		1273754	0					
ANR	1274201	IncDec	++		1273754	1					
ANR	1274202	CompoundStatement		133:6:3996:3996	1273754	3					
ANR	1274203	IfStatement	if ( it -> logPath != logPath )		1273754	0					
ANR	1274204	Condition	it -> logPath != logPath	234:10:7047:7068	1273754	0	True				
ANR	1274205	EqualityExpression	it -> logPath != logPath		1273754	0		!=			
ANR	1274206	PtrMemberAccess	it -> logPath		1273754	0					
ANR	1274207	Identifier	it		1273754	0					
ANR	1274208	Identifier	logPath		1273754	1					
ANR	1274209	Identifier	logPath		1273754	1					
ANR	1274210	ContinueStatement	continue ;	235:8:7079:7087	1273754	1	True				
ANR	1274211	ExpressionStatement	it -> debugFlags |= debug_level	236:7:7096:7125	1273754	1	True				
ANR	1274212	AssignmentExpression	it -> debugFlags |= debug_level		1273754	0		|=			
ANR	1274213	PtrMemberAccess	it -> debugFlags		1273754	0					
ANR	1274214	Identifier	it		1273754	0					
ANR	1274215	Identifier	debugFlags		1273754	1					
ANR	1274216	Identifier	debug_level		1273754	1					
ANR	1274217	ExpressionStatement	file_found = true	237:7:7134:7151	1273754	2	True				
ANR	1274218	AssignmentExpression	file_found = true		1273754	0		=			
ANR	1274219	Identifier	file_found		1273754	0					
ANR	1274220	Identifier	true		1273754	1					
ANR	1274221	BreakStatement	break ;	238:7:7160:7165	1273754	3	True				
ANR	1274222	IfStatement	if ( ! file_found )		1273754	1					
ANR	1274223	Condition	! file_found	241:8:7190:7200	1273754	0	True				
ANR	1274224	UnaryOperationExpression	! file_found		1273754	0					
ANR	1274225	UnaryOperator	!		1273754	0					
ANR	1274226	Identifier	file_found		1273754	1					
ANR	1274227	CompoundStatement		143:6:4177:4202	1273754	1					
ANR	1274228	IdentifierDeclStatement	DebugFileInfo logFileInfo ;	243:6:7216:7241	1273754	0	True				
ANR	1274229	IdentifierDecl	logFileInfo		1273754	0					
ANR	1274230	IdentifierDeclType	DebugFileInfo		1273754	0					
ANR	1274231	Identifier	logFileInfo		1273754	1					
ANR	1274232	ExpressionStatement	logFileInfo . debugFlags = debug_level	244:6:7249:7285	1273754	1	True				
ANR	1274233	AssignmentExpression	logFileInfo . debugFlags = debug_level		1273754	0		=			
ANR	1274234	MemberAccess	logFileInfo . debugFlags		1273754	0					
ANR	1274235	Identifier	logFileInfo		1273754	0					
ANR	1274236	Identifier	debugFlags		1273754	1					
ANR	1274237	Identifier	debug_level		1273754	1					
ANR	1274238	ExpressionStatement	logFileInfo . logPath = logPath	245:6:7293:7322	1273754	2	True				
ANR	1274239	AssignmentExpression	logFileInfo . logPath = logPath		1273754	0		=			
ANR	1274240	MemberAccess	logFileInfo . logPath		1273754	0					
ANR	1274241	Identifier	logFileInfo		1273754	0					
ANR	1274242	Identifier	logPath		1273754	1					
ANR	1274243	Identifier	logPath		1273754	1					
ANR	1274244	ExpressionStatement	"it = DebugLogs -> insert ( DebugLogs -> end ( ) , logFileInfo )"	246:6:7330:7383	1273754	3	True				
ANR	1274245	AssignmentExpression	"it = DebugLogs -> insert ( DebugLogs -> end ( ) , logFileInfo )"		1273754	0		=			
ANR	1274246	Identifier	it		1273754	0					
ANR	1274247	CallExpression	"DebugLogs -> insert ( DebugLogs -> end ( ) , logFileInfo )"		1273754	1					
ANR	1274248	Callee	DebugLogs -> insert		1273754	0					
ANR	1274249	PtrMemberAccess	DebugLogs -> insert		1273754	0					
ANR	1274250	Identifier	DebugLogs		1273754	0					
ANR	1274251	Identifier	insert		1273754	1					
ANR	1274252	ArgumentList	DebugLogs -> end ( )		1273754	1					
ANR	1274253	Argument	DebugLogs -> end ( )		1273754	0					
ANR	1274254	CallExpression	DebugLogs -> end ( )		1273754	0					
ANR	1274255	Callee	DebugLogs -> end		1273754	0					
ANR	1274256	PtrMemberAccess	DebugLogs -> end		1273754	0					
ANR	1274257	Identifier	DebugLogs		1273754	0					
ANR	1274258	Identifier	end		1273754	1					
ANR	1274259	ArgumentList			1273754	1					
ANR	1274260	Argument	logFileInfo		1273754	1					
ANR	1274261	Identifier	logFileInfo		1273754	0					
ANR	1274262	IfStatement	if ( logPathParam )		1273754	4					
ANR	1274263	Condition	logPathParam	250:7:7406:7417	1273754	0	True				
ANR	1274264	Identifier	logPathParam		1273754	0					
ANR	1274265	CompoundStatement		151:4:4385:4385	1273754	1					
ANR	1274266	ExpressionStatement	free ( logPathParam )	252:5:7431:7449	1273754	0	True				
ANR	1274267	CallExpression	free ( logPathParam )		1273754	0					
ANR	1274268	Callee	free		1273754	0					
ANR	1274269	Identifier	free		1273754	0					
ANR	1274270	ArgumentList	logPathParam		1273754	1					
ANR	1274271	Argument	logPathParam		1273754	0					
ANR	1274272	Identifier	logPathParam		1273754	0					
ANR	1274273	ExpressionStatement	logPathParam = NULL	253:5:7456:7475	1273754	1	True				
ANR	1274274	AssignmentExpression	logPathParam = NULL		1273754	0		=			
ANR	1274275	Identifier	logPathParam		1273754	0					
ANR	1274276	Identifier	NULL		1273754	1					
ANR	1274277	ExpressionStatement	debug_zero = true	257:3:7492:7509	1273754	4	True				
ANR	1274278	AssignmentExpression	debug_zero = true		1273754	0		=			
ANR	1274279	Identifier	debug_zero		1273754	0					
ANR	1274280	Identifier	true		1273754	1					
ANR	1274281	IfStatement	if ( debug_level == 0 && ! debug_zero )		1273754	5					
ANR	1274282	Condition	debug_level == 0 && ! debug_zero	259:7:7519:7549	1273754	0	True				
ANR	1274283	AndExpression	debug_level == 0 && ! debug_zero		1273754	0		&&			
ANR	1274284	EqualityExpression	debug_level == 0		1273754	0		==			
ANR	1274285	Identifier	debug_level		1273754	0					
ANR	1274286	PrimaryExpression	0		1273754	1					
ANR	1274287	UnaryOperationExpression	! debug_zero		1273754	1					
ANR	1274288	UnaryOperator	!		1273754	0					
ANR	1274289	Identifier	debug_zero		1273754	1					
ANR	1274290	CompoundStatement		159:41:4514:4514	1273754	1					
ANR	1274291	ExpressionStatement	"EXCEPT ( ""No '%s' parameter specified."" , pname )"	260:4:7559:7604	1273754	0	True				
ANR	1274292	CallExpression	"EXCEPT ( ""No '%s' parameter specified."" , pname )"		1273754	0					
ANR	1274293	Callee	EXCEPT		1273754	0					
ANR	1274294	Identifier	EXCEPT		1273754	0					
ANR	1274295	ArgumentList	"""No '%s' parameter specified."""		1273754	1					
ANR	1274296	Argument	"""No '%s' parameter specified."""		1273754	0					
ANR	1274297	PrimaryExpression	"""No '%s' parameter specified."""		1273754	0					
ANR	1274298	Argument	pname		1273754	1					
ANR	1274299	Identifier	pname		1273754	0					
ANR	1274300	ElseStatement	else		1273754	0					
ANR	1274301	IfStatement	if ( ! logPath . empty ( ) )		1273754	0					
ANR	1274302	Condition	! logPath . empty ( )	261:15:7621:7636	1273754	0	True				
ANR	1274303	UnaryOperationExpression	! logPath . empty ( )		1273754	0					
ANR	1274304	UnaryOperator	!		1273754	0					
ANR	1274305	CallExpression	logPath . empty ( )		1273754	1					
ANR	1274306	Callee	logPath . empty		1273754	0					
ANR	1274307	MemberAccess	logPath . empty		1273754	0					
ANR	1274308	Identifier	logPath		1273754	0					
ANR	1274309	Identifier	empty		1273754	1					
ANR	1274310	ArgumentList			1273754	1					
ANR	1274311	CompoundStatement		217:16:6249:6265	1273754	1					
ANR	1274312	IfStatement	if ( debug_level == 0 && first_time )		1273754	0					
ANR	1274313	Condition	debug_level == 0 && first_time	263:8:7651:7680	1273754	0	True				
ANR	1274314	AndExpression	debug_level == 0 && first_time		1273754	0		&&			
ANR	1274315	EqualityExpression	debug_level == 0		1273754	0		==			
ANR	1274316	Identifier	debug_level		1273754	0					
ANR	1274317	PrimaryExpression	0		1273754	1					
ANR	1274318	Identifier	first_time		1273754	1					
ANR	1274319	CompoundStatement		164:5:4651:4671	1273754	1					
ANR	1274320	IdentifierDeclStatement	struct stat stat_buf ;	264:5:7690:7710	1273754	0	True				
ANR	1274321	IdentifierDecl	stat_buf		1273754	0					
ANR	1274322	IdentifierDeclType	struct stat		1273754	0					
ANR	1274323	Identifier	stat_buf		1273754	1					
ANR	1274324	IfStatement	"if ( stat ( logPath . c_str ( ) , & stat_buf ) >= 0 )"		1273754	1					
ANR	1274325	Condition	"stat ( logPath . c_str ( ) , & stat_buf ) >= 0"	265:10:7722:7760	1273754	0	True				
ANR	1274326	RelationalExpression	"stat ( logPath . c_str ( ) , & stat_buf ) >= 0"		1273754	0		>=			
ANR	1274327	CallExpression	"stat ( logPath . c_str ( ) , & stat_buf )"		1273754	0					
ANR	1274328	Callee	stat		1273754	0					
ANR	1274329	Identifier	stat		1273754	0					
ANR	1274330	ArgumentList	logPath . c_str ( )		1273754	1					
ANR	1274331	Argument	logPath . c_str ( )		1273754	0					
ANR	1274332	CallExpression	logPath . c_str ( )		1273754	0					
ANR	1274333	Callee	logPath . c_str		1273754	0					
ANR	1274334	MemberAccess	logPath . c_str		1273754	0					
ANR	1274335	Identifier	logPath		1273754	0					
ANR	1274336	Identifier	c_str		1273754	1					
ANR	1274337	ArgumentList			1273754	1					
ANR	1274338	Argument	& stat_buf		1273754	1					
ANR	1274339	UnaryOperationExpression	& stat_buf		1273754	0					
ANR	1274340	UnaryOperator	&		1273754	0					
ANR	1274341	Identifier	stat_buf		1273754	1					
ANR	1274342	PrimaryExpression	0		1273754	1					
ANR	1274343	CompoundStatement		165:52:4725:4725	1273754	1					
ANR	1274344	ExpressionStatement	DebugLastMod = stat_buf . st_mtime > stat_buf . st_ctime ? stat_buf . st_mtime : stat_buf . st_ctime	266:6:7772:7864	1273754	0	True				
ANR	1274345	AssignmentExpression	DebugLastMod = stat_buf . st_mtime > stat_buf . st_ctime ? stat_buf . st_mtime : stat_buf . st_ctime		1273754	0		=			
ANR	1274346	Identifier	DebugLastMod		1273754	0					
ANR	1274347	ConditionalExpression	stat_buf . st_mtime > stat_buf . st_ctime ? stat_buf . st_mtime : stat_buf . st_ctime		1273754	1					
ANR	1274348	Condition	stat_buf . st_mtime > stat_buf . st_ctime		1273754	0					
ANR	1274349	RelationalExpression	stat_buf . st_mtime > stat_buf . st_ctime		1273754	0		>			
ANR	1274350	MemberAccess	stat_buf . st_mtime		1273754	0					
ANR	1274351	Identifier	stat_buf		1273754	0					
ANR	1274352	Identifier	st_mtime		1273754	1					
ANR	1274353	MemberAccess	stat_buf . st_ctime		1273754	1					
ANR	1274354	Identifier	stat_buf		1273754	0					
ANR	1274355	Identifier	st_ctime		1273754	1					
ANR	1274356	MemberAccess	stat_buf . st_mtime		1273754	1					
ANR	1274357	Identifier	stat_buf		1273754	0					
ANR	1274358	Identifier	st_mtime		1273754	1					
ANR	1274359	MemberAccess	stat_buf . st_ctime		1273754	2					
ANR	1274360	Identifier	stat_buf		1273754	0					
ANR	1274361	Identifier	st_ctime		1273754	1					
ANR	1274362	ElseStatement	else		1273754	0					
ANR	1274363	CompoundStatement		167:12:4839:4839	1273754	0					
ANR	1274364	ExpressionStatement	DebugLastMod = - errno	268:6:7886:7907	1273754	0	True				
ANR	1274365	AssignmentExpression	DebugLastMod = - errno		1273754	0		=			
ANR	1274366	Identifier	DebugLastMod		1273754	0					
ANR	1274367	UnaryOperationExpression	- errno		1273754	1					
ANR	1274368	UnaryOperator	-		1273754	0					
ANR	1274369	Identifier	errno		1273754	1					
ANR	1274370	IfStatement	if ( debug_level == 0 )		1273754	1					
ANR	1274371	Condition	debug_level == 0	272:8:7931:7946	1273754	0	True				
ANR	1274372	EqualityExpression	debug_level == 0		1273754	0		==			
ANR	1274373	Identifier	debug_level		1273754	0					
ANR	1274374	PrimaryExpression	0		1273754	1					
ANR	1274375	CompoundStatement		172:26:4910:4910	1273754	1					
ANR	1274376	ExpressionStatement	"( void ) sprintf ( pname , ""TRUNC_%s_LOG_ON_OPEN"" , subsys )"	273:5:7956:8008	1273754	0	True				
ANR	1274377	CastExpression	"( void ) sprintf ( pname , ""TRUNC_%s_LOG_ON_OPEN"" , subsys )"		1273754	0					
ANR	1274378	CastTarget	void		1273754	0					
ANR	1274379	CallExpression	"sprintf ( pname , ""TRUNC_%s_LOG_ON_OPEN"" , subsys )"		1273754	1					
ANR	1274380	Callee	sprintf		1273754	0					
ANR	1274381	Identifier	sprintf		1273754	0					
ANR	1274382	ArgumentList	pname		1273754	1					
ANR	1274383	Argument	pname		1273754	0					
ANR	1274384	Identifier	pname		1273754	0					
ANR	1274385	Argument	"""TRUNC_%s_LOG_ON_OPEN"""		1273754	1					
ANR	1274386	PrimaryExpression	"""TRUNC_%s_LOG_ON_OPEN"""		1273754	0					
ANR	1274387	Argument	subsys		1273754	2					
ANR	1274388	Identifier	subsys		1273754	0					
ANR	1274389	ElseStatement	else		1273754	0					
ANR	1274390	CompoundStatement		174:11:4982:4982	1273754	0					
ANR	1274391	ExpressionStatement	"( void ) sprintf ( pname , ""TRUNC_%s_%s_LOG_ON_OPEN"" , subsys , _condor_DebugFlagNames [ debug_level - 1 ] + 2 )"	275:5:8028:8134	1273754	0	True				
ANR	1274392	CastExpression	"( void ) sprintf ( pname , ""TRUNC_%s_%s_LOG_ON_OPEN"" , subsys , _condor_DebugFlagNames [ debug_level - 1 ] + 2 )"		1273754	0					
ANR	1274393	CastTarget	void		1273754	0					
ANR	1274394	CallExpression	"sprintf ( pname , ""TRUNC_%s_%s_LOG_ON_OPEN"" , subsys , _condor_DebugFlagNames [ debug_level - 1 ] + 2 )"		1273754	1					
ANR	1274395	Callee	sprintf		1273754	0					
ANR	1274396	Identifier	sprintf		1273754	0					
ANR	1274397	ArgumentList	pname		1273754	1					
ANR	1274398	Argument	pname		1273754	0					
ANR	1274399	Identifier	pname		1273754	0					
ANR	1274400	Argument	"""TRUNC_%s_%s_LOG_ON_OPEN"""		1273754	1					
ANR	1274401	PrimaryExpression	"""TRUNC_%s_%s_LOG_ON_OPEN"""		1273754	0					
ANR	1274402	Argument	subsys		1273754	2					
ANR	1274403	Identifier	subsys		1273754	0					
ANR	1274404	Argument	_condor_DebugFlagNames [ debug_level - 1 ] + 2		1273754	3					
ANR	1274405	AdditiveExpression	_condor_DebugFlagNames [ debug_level - 1 ] + 2		1273754	0		+			
ANR	1274406	ArrayIndexing	_condor_DebugFlagNames [ debug_level - 1 ]		1273754	0					
ANR	1274407	Identifier	_condor_DebugFlagNames		1273754	0					
ANR	1274408	AdditiveExpression	debug_level - 1		1273754	1		-			
ANR	1274409	Identifier	debug_level		1273754	0					
ANR	1274410	PrimaryExpression	1		1273754	1					
ANR	1274411	PrimaryExpression	2		1273754	1					
ANR	1274412	ExpressionStatement	"want_truncate = param_boolean_crufty ( pname , false ) ? 1 : 0"	278:4:8146:8204	1273754	2	True				
ANR	1274413	AssignmentExpression	"want_truncate = param_boolean_crufty ( pname , false ) ? 1 : 0"		1273754	0		=			
ANR	1274414	Identifier	want_truncate		1273754	0					
ANR	1274415	ConditionalExpression	"param_boolean_crufty ( pname , false ) ? 1 : 0"		1273754	1					
ANR	1274416	Condition	"param_boolean_crufty ( pname , false )"		1273754	0					
ANR	1274417	CallExpression	"param_boolean_crufty ( pname , false )"		1273754	0					
ANR	1274418	Callee	param_boolean_crufty		1273754	0					
ANR	1274419	Identifier	param_boolean_crufty		1273754	0					
ANR	1274420	ArgumentList	pname		1273754	1					
ANR	1274421	Argument	pname		1273754	0					
ANR	1274422	Identifier	pname		1273754	0					
ANR	1274423	Argument	false		1273754	1					
ANR	1274424	Identifier	false		1273754	0					
ANR	1274425	PrimaryExpression	1		1273754	1					
ANR	1274426	PrimaryExpression	0		1273754	2					
ANR	1274427	IfStatement	if ( debug_level == 0 )		1273754	3					
ANR	1274428	Condition	debug_level == 0	280:8:8215:8230	1273754	0	True				
ANR	1274429	EqualityExpression	debug_level == 0		1273754	0		==			
ANR	1274430	Identifier	debug_level		1273754	0					
ANR	1274431	PrimaryExpression	0		1273754	1					
ANR	1274432	CompoundStatement		180:26:5194:5194	1273754	1					
ANR	1274433	ExpressionStatement	"( void ) sprintf ( pname , ""%s_LOCK"" , subsys )"	281:5:8240:8279	1273754	0	True				
ANR	1274434	CastExpression	"( void ) sprintf ( pname , ""%s_LOCK"" , subsys )"		1273754	0					
ANR	1274435	CastTarget	void		1273754	0					
ANR	1274436	CallExpression	"sprintf ( pname , ""%s_LOCK"" , subsys )"		1273754	1					
ANR	1274437	Callee	sprintf		1273754	0					
ANR	1274438	Identifier	sprintf		1273754	0					
ANR	1274439	ArgumentList	pname		1273754	1					
ANR	1274440	Argument	pname		1273754	0					
ANR	1274441	Identifier	pname		1273754	0					
ANR	1274442	Argument	"""%s_LOCK"""		1273754	1					
ANR	1274443	PrimaryExpression	"""%s_LOCK"""		1273754	0					
ANR	1274444	Argument	subsys		1273754	2					
ANR	1274445	Identifier	subsys		1273754	0					
ANR	1274446	IfStatement	if ( DebugLock )		1273754	1					
ANR	1274447	Condition	DebugLock	282:9:8290:8298	1273754	0	True				
ANR	1274448	Identifier	DebugLock		1273754	0					
ANR	1274449	CompoundStatement		182:20:5262:5262	1273754	1					
ANR	1274450	ExpressionStatement	free ( DebugLock )	283:6:8309:8324	1273754	0	True				
ANR	1274451	CallExpression	free ( DebugLock )		1273754	0					
ANR	1274452	Callee	free		1273754	0					
ANR	1274453	Identifier	free		1273754	0					
ANR	1274454	ArgumentList	DebugLock		1273754	1					
ANR	1274455	Argument	DebugLock		1273754	0					
ANR	1274456	Identifier	DebugLock		1273754	0					
ANR	1274457	ExpressionStatement	DebugLock = param ( pname )	285:5:8338:8362	1273754	2	True				
ANR	1274458	AssignmentExpression	DebugLock = param ( pname )		1273754	0		=			
ANR	1274459	Identifier	DebugLock		1273754	0					
ANR	1274460	CallExpression	param ( pname )		1273754	1					
ANR	1274461	Callee	param		1273754	0					
ANR	1274462	Identifier	param		1273754	0					
ANR	1274463	ArgumentList	pname		1273754	1					
ANR	1274464	Argument	pname		1273754	0					
ANR	1274465	Identifier	pname		1273754	0					
ANR	1274466	IdentifierDeclStatement	bool dont_panic = true ;	289:4:8424:8446	1273754	4	True				
ANR	1274467	IdentifierDecl	dont_panic = true		1273754	0					
ANR	1274468	IdentifierDeclType	bool		1273754	0					
ANR	1274469	Identifier	dont_panic		1273754	1					
ANR	1274470	AssignmentExpression	dont_panic = true		1273754	2		=			
ANR	1274471	Identifier	true		1273754	0					
ANR	1274472	Identifier	true		1273754	1					
ANR	1274473	IdentifierDeclStatement	"bool fOk = debug_check_it ( * it , ( first_time && want_truncate ) , dont_panic ) ;"	290:4:8452:8525	1273754	5	True				
ANR	1274474	IdentifierDecl	"fOk = debug_check_it ( * it , ( first_time && want_truncate ) , dont_panic )"		1273754	0					
ANR	1274475	IdentifierDeclType	bool		1273754	0					
ANR	1274476	Identifier	fOk		1273754	1					
ANR	1274477	AssignmentExpression	"fOk = debug_check_it ( * it , ( first_time && want_truncate ) , dont_panic )"		1273754	2		=			
ANR	1274478	Identifier	fOk		1273754	0					
ANR	1274479	CallExpression	"debug_check_it ( * it , ( first_time && want_truncate ) , dont_panic )"		1273754	1					
ANR	1274480	Callee	debug_check_it		1273754	0					
ANR	1274481	Identifier	debug_check_it		1273754	0					
ANR	1274482	ArgumentList	* it		1273754	1					
ANR	1274483	Argument	* it		1273754	0					
ANR	1274484	UnaryOperationExpression	* it		1273754	0					
ANR	1274485	UnaryOperator	*		1273754	0					
ANR	1274486	Identifier	it		1273754	1					
ANR	1274487	Argument	first_time && want_truncate		1273754	1					
ANR	1274488	AndExpression	first_time && want_truncate		1273754	0		&&			
ANR	1274489	Identifier	first_time		1273754	0					
ANR	1274490	Identifier	want_truncate		1273754	1					
ANR	1274491	Argument	dont_panic		1273754	2					
ANR	1274492	Identifier	dont_panic		1273754	0					
ANR	1274493	IfStatement	if ( ! fOk && debug_level == 0 )		1273754	6					
ANR	1274494	Condition	! fOk && debug_level == 0	291:8:8535:8559	1273754	0	True				
ANR	1274495	AndExpression	! fOk && debug_level == 0		1273754	0		&&			
ANR	1274496	UnaryOperationExpression	! fOk		1273754	0					
ANR	1274497	UnaryOperator	!		1273754	0					
ANR	1274498	Identifier	fOk		1273754	1					
ANR	1274499	EqualityExpression	debug_level == 0		1273754	1		==			
ANR	1274500	Identifier	debug_level		1273754	0					
ANR	1274501	PrimaryExpression	0		1273754	1					
ANR	1274502	CompoundStatement		191:36:5524:5524	1273754	1					
ANR	1274503	IfStatement	if ( DebugContinueOnOpenFailure )		1273754	0					
ANR	1274504	Condition	DebugContinueOnOpenFailure	298:9:8809:8834	1273754	0	True				
ANR	1274505	Identifier	DebugContinueOnOpenFailure		1273754	0					
ANR	1274506	CompoundStatement		198:37:5798:5798	1273754	1					
ANR	1274507	ExpressionStatement	"it -> logPath . insert ( 0 , NULL_FILE )"	301:6:8908:8940	1273754	0	True				
ANR	1274508	CallExpression	"it -> logPath . insert ( 0 , NULL_FILE )"		1273754	0					
ANR	1274509	Callee	it -> logPath . insert		1273754	0					
ANR	1274510	MemberAccess	it -> logPath . insert		1273754	0					
ANR	1274511	PtrMemberAccess	it -> logPath		1273754	0					
ANR	1274512	Identifier	it		1273754	0					
ANR	1274513	Identifier	logPath		1273754	1					
ANR	1274514	Identifier	insert		1273754	1					
ANR	1274515	ArgumentList	0		1273754	1					
ANR	1274516	Argument	0		1273754	0					
ANR	1274517	PrimaryExpression	0		1273754	0					
ANR	1274518	Argument	NULL_FILE		1273754	1					
ANR	1274519	Identifier	NULL_FILE		1273754	0					
ANR	1274520	ElseStatement	else		1273754	0					
ANR	1274521	CompoundStatement		205:5:5938:5938	1273754	0					
ANR	1274522	ExpressionStatement	"EXCEPT ( ""Cannot open log file '%s'"" , logPath . c_str ( ) )"	306:9:8988:9040	1273754	0	True				
ANR	1274523	CallExpression	"EXCEPT ( ""Cannot open log file '%s'"" , logPath . c_str ( ) )"		1273754	0					
ANR	1274524	Callee	EXCEPT		1273754	0					
ANR	1274525	Identifier	EXCEPT		1273754	0					
ANR	1274526	ArgumentList	"""Cannot open log file '%s'"""		1273754	1					
ANR	1274527	Argument	"""Cannot open log file '%s'"""		1273754	0					
ANR	1274528	PrimaryExpression	"""Cannot open log file '%s'"""		1273754	0					
ANR	1274529	Argument	logPath . c_str ( )		1273754	1					
ANR	1274530	CallExpression	logPath . c_str ( )		1273754	0					
ANR	1274531	Callee	logPath . c_str		1273754	0					
ANR	1274532	MemberAccess	logPath . c_str		1273754	0					
ANR	1274533	Identifier	logPath		1273754	0					
ANR	1274534	Identifier	c_str		1273754	1					
ANR	1274535	ArgumentList			1273754	1					
ANR	1274536	IfStatement	if ( debug_level == 0 )		1273754	7					
ANR	1274537	Condition	debug_level == 0	310:8:9064:9079	1273754	0	True				
ANR	1274538	EqualityExpression	debug_level == 0		1273754	0		==			
ANR	1274539	Identifier	debug_level		1273754	0					
ANR	1274540	PrimaryExpression	0		1273754	1					
ANR	1274541	CompoundStatement		210:26:6043:6043	1273754	1					
ANR	1274542	ExpressionStatement	"( void ) sprintf ( pname , ""MAX_%s_LOG"" , subsys )"	311:5:9089:9131	1273754	0	True				
ANR	1274543	CastExpression	"( void ) sprintf ( pname , ""MAX_%s_LOG"" , subsys )"		1273754	0					
ANR	1274544	CastTarget	void		1273754	0					
ANR	1274545	CallExpression	"sprintf ( pname , ""MAX_%s_LOG"" , subsys )"		1273754	1					
ANR	1274546	Callee	sprintf		1273754	0					
ANR	1274547	Identifier	sprintf		1273754	0					
ANR	1274548	ArgumentList	pname		1273754	1					
ANR	1274549	Argument	pname		1273754	0					
ANR	1274550	Identifier	pname		1273754	0					
ANR	1274551	Argument	"""MAX_%s_LOG"""		1273754	1					
ANR	1274552	PrimaryExpression	"""MAX_%s_LOG"""		1273754	0					
ANR	1274553	Argument	subsys		1273754	2					
ANR	1274554	Identifier	subsys		1273754	0					
ANR	1274555	ElseStatement	else		1273754	0					
ANR	1274556	CompoundStatement		212:11:6105:6105	1273754	0					
ANR	1274557	ExpressionStatement	"( void ) sprintf ( pname , ""MAX_%s_%s_LOG"" , subsys , _condor_DebugFlagNames [ debug_level - 1 ] + 2 )"	313:5:9151:9247	1273754	0	True				
ANR	1274558	CastExpression	"( void ) sprintf ( pname , ""MAX_%s_%s_LOG"" , subsys , _condor_DebugFlagNames [ debug_level - 1 ] + 2 )"		1273754	0					
ANR	1274559	CastTarget	void		1273754	0					
ANR	1274560	CallExpression	"sprintf ( pname , ""MAX_%s_%s_LOG"" , subsys , _condor_DebugFlagNames [ debug_level - 1 ] + 2 )"		1273754	1					
ANR	1274561	Callee	sprintf		1273754	0					
ANR	1274562	Identifier	sprintf		1273754	0					
ANR	1274563	ArgumentList	pname		1273754	1					
ANR	1274564	Argument	pname		1273754	0					
ANR	1274565	Identifier	pname		1273754	0					
ANR	1274566	Argument	"""MAX_%s_%s_LOG"""		1273754	1					
ANR	1274567	PrimaryExpression	"""MAX_%s_%s_LOG"""		1273754	0					
ANR	1274568	Argument	subsys		1273754	2					
ANR	1274569	Identifier	subsys		1273754	0					
ANR	1274570	Argument	_condor_DebugFlagNames [ debug_level - 1 ] + 2		1273754	3					
ANR	1274571	AdditiveExpression	_condor_DebugFlagNames [ debug_level - 1 ] + 2		1273754	0		+			
ANR	1274572	ArrayIndexing	_condor_DebugFlagNames [ debug_level - 1 ]		1273754	0					
ANR	1274573	Identifier	_condor_DebugFlagNames		1273754	0					
ANR	1274574	AdditiveExpression	debug_level - 1		1273754	1		-			
ANR	1274575	Identifier	debug_level		1273754	0					
ANR	1274576	PrimaryExpression	1		1273754	1					
ANR	1274577	PrimaryExpression	2		1273754	1					
ANR	1274578	IdentifierDeclStatement	off_t maxlog = 0 ;	317:16:9288:9304	1273754	8	True				
ANR	1274579	IdentifierDecl	maxlog = 0		1273754	0					
ANR	1274580	IdentifierDeclType	off_t		1273754	0					
ANR	1274581	Identifier	maxlog		1273754	1					
ANR	1274582	AssignmentExpression	maxlog = 0		1273754	2		=			
ANR	1274583	Identifier	maxlog		1273754	0					
ANR	1274584	PrimaryExpression	0		1273754	1					
ANR	1274585	ExpressionStatement	pval = param ( pname )	318:4:9310:9329	1273754	9	True				
ANR	1274586	AssignmentExpression	pval = param ( pname )		1273754	0		=			
ANR	1274587	Identifier	pval		1273754	0					
ANR	1274588	CallExpression	param ( pname )		1273754	1					
ANR	1274589	Callee	param		1273754	0					
ANR	1274590	Identifier	param		1273754	0					
ANR	1274591	ArgumentList	pname		1273754	1					
ANR	1274592	Argument	pname		1273754	0					
ANR	1274593	Identifier	pname		1273754	0					
ANR	1274594	IfStatement	if ( pval != NULL )		1273754	10					
ANR	1274595	Condition	pval != NULL	319:8:9339:9350	1273754	0	True				
ANR	1274596	EqualityExpression	pval != NULL		1273754	0		!=			
ANR	1274597	Identifier	pval		1273754	0					
ANR	1274598	Identifier	NULL		1273754	1					
ANR	1274599	CompoundStatement		221:20:6424:6455	1273754	1					
ANR	1274600	IdentifierDeclStatement	"bool r = lex_cast ( pval , maxlog ) ;"	321:20:9463:9494	1273754	0	True				
ANR	1274601	IdentifierDecl	"r = lex_cast ( pval , maxlog )"		1273754	0					
ANR	1274602	IdentifierDeclType	bool		1273754	0					
ANR	1274603	Identifier	r		1273754	1					
ANR	1274604	AssignmentExpression	"r = lex_cast ( pval , maxlog )"		1273754	2		=			
ANR	1274605	Identifier	r		1273754	0					
ANR	1274606	CallExpression	"lex_cast ( pval , maxlog )"		1273754	1					
ANR	1274607	Callee	lex_cast		1273754	0					
ANR	1274608	Identifier	lex_cast		1273754	0					
ANR	1274609	ArgumentList	pval		1273754	1					
ANR	1274610	Argument	pval		1273754	0					
ANR	1274611	Identifier	pval		1273754	0					
ANR	1274612	Argument	maxlog		1273754	1					
ANR	1274613	Identifier	maxlog		1273754	0					
ANR	1274614	IfStatement	if ( ! r || ( maxlog < 0 ) )		1273754	1					
ANR	1274615	Condition	! r || ( maxlog < 0 )	322:24:9520:9537	1273754	0	True				
ANR	1274616	OrExpression	! r || ( maxlog < 0 )		1273754	0		||			
ANR	1274617	UnaryOperationExpression	! r		1273754	0					
ANR	1274618	UnaryOperator	!		1273754	0					
ANR	1274619	Identifier	r		1273754	1					
ANR	1274620	RelationalExpression	maxlog < 0		1273754	1		<			
ANR	1274621	Identifier	maxlog		1273754	0					
ANR	1274622	PrimaryExpression	0		1273754	1					
ANR	1274623	CompoundStatement		222:44:6501:6501	1273754	1					
ANR	1274624	ExpressionStatement	"EXCEPT ( ""Invalid config: %s = %s"" , pname , pval )"	323:24:9566:9612	1273754	0	True				
ANR	1274625	CallExpression	"EXCEPT ( ""Invalid config: %s = %s"" , pname , pval )"		1273754	0					
ANR	1274626	Callee	EXCEPT		1273754	0					
ANR	1274627	Identifier	EXCEPT		1273754	0					
ANR	1274628	ArgumentList	"""Invalid config: %s = %s"""		1273754	1					
ANR	1274629	Argument	"""Invalid config: %s = %s"""		1273754	0					
ANR	1274630	PrimaryExpression	"""Invalid config: %s = %s"""		1273754	0					
ANR	1274631	Argument	pname		1273754	1					
ANR	1274632	Identifier	pname		1273754	0					
ANR	1274633	Argument	pval		1273754	2					
ANR	1274634	Identifier	pval		1273754	0					
ANR	1274635	ExpressionStatement	it -> maxLog = maxlog	325:20:9656:9675	1273754	2	True				
ANR	1274636	AssignmentExpression	it -> maxLog = maxlog		1273754	0		=			
ANR	1274637	PtrMemberAccess	it -> maxLog		1273754	0					
ANR	1274638	Identifier	it		1273754	0					
ANR	1274639	Identifier	maxLog		1273754	1					
ANR	1274640	Identifier	maxlog		1273754	1					
ANR	1274641	ExpressionStatement	free ( pval )	326:5:9682:9692	1273754	3	True				
ANR	1274642	CallExpression	free ( pval )		1273754	0					
ANR	1274643	Callee	free		1273754	0					
ANR	1274644	Identifier	free		1273754	0					
ANR	1274645	ArgumentList	pval		1273754	1					
ANR	1274646	Argument	pval		1273754	0					
ANR	1274647	Identifier	pval		1273754	0					
ANR	1274648	ElseStatement	else		1273754	0					
ANR	1274649	CompoundStatement		227:11:6666:6666	1273754	0					
ANR	1274650	ExpressionStatement	it -> maxLog = 1024 * 1024	328:5:9712:9734	1273754	0	True				
ANR	1274651	AssignmentExpression	it -> maxLog = 1024 * 1024		1273754	0		=			
ANR	1274652	PtrMemberAccess	it -> maxLog		1273754	0					
ANR	1274653	Identifier	it		1273754	0					
ANR	1274654	Identifier	maxLog		1273754	1					
ANR	1274655	MultiplicativeExpression	1024 * 1024		1273754	1		*			
ANR	1274656	PrimaryExpression	1024		1273754	0					
ANR	1274657	PrimaryExpression	1024		1273754	1					
ANR	1274658	IfStatement	if ( debug_level == 0 )		1273754	11					
ANR	1274659	Condition	debug_level == 0	331:8:9755:9770	1273754	0	True				
ANR	1274660	EqualityExpression	debug_level == 0		1273754	0		==			
ANR	1274661	Identifier	debug_level		1273754	0					
ANR	1274662	PrimaryExpression	0		1273754	1					
ANR	1274663	CompoundStatement		231:26:6734:6734	1273754	1					
ANR	1274664	ExpressionStatement	"( void ) sprintf ( pname , ""MAX_NUM_%s_LOG"" , subsys )"	332:5:9780:9826	1273754	0	True				
ANR	1274665	CastExpression	"( void ) sprintf ( pname , ""MAX_NUM_%s_LOG"" , subsys )"		1273754	0					
ANR	1274666	CastTarget	void		1273754	0					
ANR	1274667	CallExpression	"sprintf ( pname , ""MAX_NUM_%s_LOG"" , subsys )"		1273754	1					
ANR	1274668	Callee	sprintf		1273754	0					
ANR	1274669	Identifier	sprintf		1273754	0					
ANR	1274670	ArgumentList	pname		1273754	1					
ANR	1274671	Argument	pname		1273754	0					
ANR	1274672	Identifier	pname		1273754	0					
ANR	1274673	Argument	"""MAX_NUM_%s_LOG"""		1273754	1					
ANR	1274674	PrimaryExpression	"""MAX_NUM_%s_LOG"""		1273754	0					
ANR	1274675	Argument	subsys		1273754	2					
ANR	1274676	Identifier	subsys		1273754	0					
ANR	1274677	ElseStatement	else		1273754	0					
ANR	1274678	CompoundStatement		233:11:6800:6800	1273754	0					
ANR	1274679	ExpressionStatement	"( void ) sprintf ( pname , ""MAX_NUM_%s_%s_LOG"" , subsys , _condor_DebugFlagNames [ debug_level - 1 ] + 2 )"	334:5:9846:9946	1273754	0	True				
ANR	1274680	CastExpression	"( void ) sprintf ( pname , ""MAX_NUM_%s_%s_LOG"" , subsys , _condor_DebugFlagNames [ debug_level - 1 ] + 2 )"		1273754	0					
ANR	1274681	CastTarget	void		1273754	0					
ANR	1274682	CallExpression	"sprintf ( pname , ""MAX_NUM_%s_%s_LOG"" , subsys , _condor_DebugFlagNames [ debug_level - 1 ] + 2 )"		1273754	1					
ANR	1274683	Callee	sprintf		1273754	0					
ANR	1274684	Identifier	sprintf		1273754	0					
ANR	1274685	ArgumentList	pname		1273754	1					
ANR	1274686	Argument	pname		1273754	0					
ANR	1274687	Identifier	pname		1273754	0					
ANR	1274688	Argument	"""MAX_NUM_%s_%s_LOG"""		1273754	1					
ANR	1274689	PrimaryExpression	"""MAX_NUM_%s_%s_LOG"""		1273754	0					
ANR	1274690	Argument	subsys		1273754	2					
ANR	1274691	Identifier	subsys		1273754	0					
ANR	1274692	Argument	_condor_DebugFlagNames [ debug_level - 1 ] + 2		1273754	3					
ANR	1274693	AdditiveExpression	_condor_DebugFlagNames [ debug_level - 1 ] + 2		1273754	0		+			
ANR	1274694	ArrayIndexing	_condor_DebugFlagNames [ debug_level - 1 ]		1273754	0					
ANR	1274695	Identifier	_condor_DebugFlagNames		1273754	0					
ANR	1274696	AdditiveExpression	debug_level - 1		1273754	1		-			
ANR	1274697	Identifier	debug_level		1273754	0					
ANR	1274698	PrimaryExpression	1		1273754	1					
ANR	1274699	PrimaryExpression	2		1273754	1					
ANR	1274700	ExpressionStatement	pval = param ( pname )	338:4:9959:9978	1273754	12	True				
ANR	1274701	AssignmentExpression	pval = param ( pname )		1273754	0		=			
ANR	1274702	Identifier	pval		1273754	0					
ANR	1274703	CallExpression	param ( pname )		1273754	1					
ANR	1274704	Callee	param		1273754	0					
ANR	1274705	Identifier	param		1273754	0					
ANR	1274706	ArgumentList	pname		1273754	1					
ANR	1274707	Argument	pname		1273754	0					
ANR	1274708	Identifier	pname		1273754	0					
ANR	1274709	IfStatement	if ( pval != NULL )		1273754	13					
ANR	1274710	Condition	pval != NULL	339:8:9988:9999	1273754	0	True				
ANR	1274711	EqualityExpression	pval != NULL		1273754	0		!=			
ANR	1274712	Identifier	pval		1273754	0					
ANR	1274713	Identifier	NULL		1273754	1					
ANR	1274714	CompoundStatement		239:22:6963:6963	1273754	1					
ANR	1274715	ExpressionStatement	"it -> maxLogNum = param_integer ( pname , 1 , 0 )"	340:5:10009:10051	1273754	0	True				
ANR	1274716	AssignmentExpression	"it -> maxLogNum = param_integer ( pname , 1 , 0 )"		1273754	0		=			
ANR	1274717	PtrMemberAccess	it -> maxLogNum		1273754	0					
ANR	1274718	Identifier	it		1273754	0					
ANR	1274719	Identifier	maxLogNum		1273754	1					
ANR	1274720	CallExpression	"param_integer ( pname , 1 , 0 )"		1273754	1					
ANR	1274721	Callee	param_integer		1273754	0					
ANR	1274722	Identifier	param_integer		1273754	0					
ANR	1274723	ArgumentList	pname		1273754	1					
ANR	1274724	Argument	pname		1273754	0					
ANR	1274725	Identifier	pname		1273754	0					
ANR	1274726	Argument	1		1273754	1					
ANR	1274727	PrimaryExpression	1		1273754	0					
ANR	1274728	Argument	0		1273754	2					
ANR	1274729	PrimaryExpression	0		1273754	0					
ANR	1274730	ExpressionStatement	free ( pval )	341:5:10058:10068	1273754	1	True				
ANR	1274731	CallExpression	free ( pval )		1273754	0					
ANR	1274732	Callee	free		1273754	0					
ANR	1274733	Identifier	free		1273754	0					
ANR	1274734	ArgumentList	pval		1273754	1					
ANR	1274735	Argument	pval		1273754	0					
ANR	1274736	Identifier	pval		1273754	0					
ANR	1274737	ElseStatement	else		1273754	0					
ANR	1274738	CompoundStatement		242:11:7042:7042	1273754	0					
ANR	1274739	ExpressionStatement	it -> maxLogNum = 1	343:5:10088:10105	1273754	0	True				
ANR	1274740	AssignmentExpression	it -> maxLogNum = 1		1273754	0		=			
ANR	1274741	PtrMemberAccess	it -> maxLogNum		1273754	0					
ANR	1274742	Identifier	it		1273754	0					
ANR	1274743	Identifier	maxLogNum		1273754	1					
ANR	1274744	PrimaryExpression	1		1273754	1					
ANR	1274745	ElseStatement	else		1273754	0					
ANR	1274746	CompoundStatement		247:8:7091:7091	1273754	0					
ANR	1274747	ExpressionStatement	setlinebuf ( stderr )	350:2:10155:10175	1273754	0	True				
ANR	1274748	CallExpression	setlinebuf ( stderr )		1273754	0					
ANR	1274749	Callee	setlinebuf		1273754	0					
ANR	1274750	Identifier	setlinebuf		1273754	0					
ANR	1274751	ArgumentList	stderr		1273754	1					
ANR	1274752	Argument	stderr		1273754	0					
ANR	1274753	Identifier	stderr		1273754	0					
ANR	1274754	ExpressionStatement	( void ) fflush ( stderr )	353:2:10187:10209	1273754	1	True				
ANR	1274755	CastExpression	( void ) fflush ( stderr )		1273754	0					
ANR	1274756	CastTarget	void		1273754	0					
ANR	1274757	CallExpression	fflush ( stderr )		1273754	1					
ANR	1274758	Callee	fflush		1273754	0					
ANR	1274759	Identifier	fflush		1273754	0					
ANR	1274760	ArgumentList	stderr		1273754	1					
ANR	1274761	Argument	stderr		1273754	0					
ANR	1274762	Identifier	stderr		1273754	0					
ANR	1274763	IfStatement	"if ( ( strcmp ( subsys , ""SHADOW"" ) == 0 ) || ( strcmp ( subsys , ""GRIDMANAGER"" ) == 0 ) )"		1273754	20					
ANR	1274764	Condition	"( strcmp ( subsys , ""SHADOW"" ) == 0 ) || ( strcmp ( subsys , ""GRIDMANAGER"" ) == 0 )"	358:4:10340:10410	1273754	0	True				
ANR	1274765	OrExpression	"( strcmp ( subsys , ""SHADOW"" ) == 0 ) || ( strcmp ( subsys , ""GRIDMANAGER"" ) == 0 )"		1273754	0		||			
ANR	1274766	EqualityExpression	"strcmp ( subsys , ""SHADOW"" ) == 0"		1273754	0		==			
ANR	1274767	CallExpression	"strcmp ( subsys , ""SHADOW"" )"		1273754	0					
ANR	1274768	Callee	strcmp		1273754	0					
ANR	1274769	Identifier	strcmp		1273754	0					
ANR	1274770	ArgumentList	subsys		1273754	1					
ANR	1274771	Argument	subsys		1273754	0					
ANR	1274772	Identifier	subsys		1273754	0					
ANR	1274773	Argument	"""SHADOW"""		1273754	1					
ANR	1274774	PrimaryExpression	"""SHADOW"""		1273754	0					
ANR	1274775	PrimaryExpression	0		1273754	1					
ANR	1274776	EqualityExpression	"strcmp ( subsys , ""GRIDMANAGER"" ) == 0"		1273754	1		==			
ANR	1274777	CallExpression	"strcmp ( subsys , ""GRIDMANAGER"" )"		1273754	0					
ANR	1274778	Callee	strcmp		1273754	0					
ANR	1274779	Identifier	strcmp		1273754	0					
ANR	1274780	ArgumentList	subsys		1273754	1					
ANR	1274781	Argument	subsys		1273754	0					
ANR	1274782	Identifier	subsys		1273754	0					
ANR	1274783	Argument	"""GRIDMANAGER"""		1273754	1					
ANR	1274784	PrimaryExpression	"""GRIDMANAGER"""		1273754	0					
ANR	1274785	PrimaryExpression	0		1273754	1					
ANR	1274786	CompoundStatement		259:1:7375:7375	1273754	1					
ANR	1274787	ExpressionStatement	log_open_default = FALSE	360:2:10418:10442	1273754	0	True				
ANR	1274788	AssignmentExpression	log_open_default = FALSE		1273754	0		=			
ANR	1274789	Identifier	log_open_default		1273754	0					
ANR	1274790	Identifier	FALSE		1273754	1					
ANR	1274791	IfStatement	if ( ! DebugLock )		1273754	21					
ANR	1274792	Condition	! DebugLock	364:4:10459:10468	1273754	0	True				
ANR	1274793	UnaryOperationExpression	! DebugLock		1273754	0					
ANR	1274794	UnaryOperator	!		1273754	0					
ANR	1274795	Identifier	DebugLock		1273754	1					
ANR	1274796	CompoundStatement		264:16:7432:7432	1273754	1					
ANR	1274797	ExpressionStatement	"sprintf ( pname , ""%s_LOG_KEEP_OPEN"" , subsys )"	365:2:10475:10517	1273754	0	True				
ANR	1274798	CallExpression	"sprintf ( pname , ""%s_LOG_KEEP_OPEN"" , subsys )"		1273754	0					
ANR	1274799	Callee	sprintf		1273754	0					
ANR	1274800	Identifier	sprintf		1273754	0					
ANR	1274801	ArgumentList	pname		1273754	1					
ANR	1274802	Argument	pname		1273754	0					
ANR	1274803	Identifier	pname		1273754	0					
ANR	1274804	Argument	"""%s_LOG_KEEP_OPEN"""		1273754	1					
ANR	1274805	PrimaryExpression	"""%s_LOG_KEEP_OPEN"""		1273754	0					
ANR	1274806	Argument	subsys		1273754	2					
ANR	1274807	Identifier	subsys		1273754	0					
ANR	1274808	ExpressionStatement	"log_keep_open = dprintf_param_funcs -> param_boolean_int ( pname , log_open_default )"	366:2:10521:10600	1273754	1	True				
ANR	1274809	AssignmentExpression	"log_keep_open = dprintf_param_funcs -> param_boolean_int ( pname , log_open_default )"		1273754	0		=			
ANR	1274810	Identifier	log_keep_open		1273754	0					
ANR	1274811	CallExpression	"dprintf_param_funcs -> param_boolean_int ( pname , log_open_default )"		1273754	1					
ANR	1274812	Callee	dprintf_param_funcs -> param_boolean_int		1273754	0					
ANR	1274813	PtrMemberAccess	dprintf_param_funcs -> param_boolean_int		1273754	0					
ANR	1274814	Identifier	dprintf_param_funcs		1273754	0					
ANR	1274815	Identifier	param_boolean_int		1273754	1					
ANR	1274816	ArgumentList	pname		1273754	1					
ANR	1274817	Argument	pname		1273754	0					
ANR	1274818	Identifier	pname		1273754	0					
ANR	1274819	Argument	log_open_default		1273754	1					
ANR	1274820	Identifier	log_open_default		1273754	0					
ANR	1274821	ExpressionStatement	first_time = 0	369:1:10607:10621	1273754	22	True				
ANR	1274822	AssignmentExpression	first_time = 0		1273754	0		=			
ANR	1274823	Identifier	first_time		1273754	0					
ANR	1274824	PrimaryExpression	0		1273754	1					
ANR	1274825	ExpressionStatement	_condor_dprintf_works = 1	370:1:10624:10649	1273754	23	True				
ANR	1274826	AssignmentExpression	_condor_dprintf_works = 1		1273754	0		=			
ANR	1274827	Identifier	_condor_dprintf_works		1273754	0					
ANR	1274828	PrimaryExpression	1		1273754	1					
ANR	1274829	IfStatement	"if ( dprintf_param_funcs -> param_boolean_int ( ""NET_REMAP_ENABLE"" , 0 ) )"		1273754	24					
ANR	1274830	Condition	"dprintf_param_funcs -> param_boolean_int ( ""NET_REMAP_ENABLE"" , 0 )"	377:9:10858:10918	1273754	0	True				
ANR	1274831	CallExpression	"dprintf_param_funcs -> param_boolean_int ( ""NET_REMAP_ENABLE"" , 0 )"		1273754	0					
ANR	1274832	Callee	dprintf_param_funcs -> param_boolean_int		1273754	0					
ANR	1274833	PtrMemberAccess	dprintf_param_funcs -> param_boolean_int		1273754	0					
ANR	1274834	Identifier	dprintf_param_funcs		1273754	0					
ANR	1274835	Identifier	param_boolean_int		1273754	1					
ANR	1274836	ArgumentList	"""NET_REMAP_ENABLE"""		1273754	1					
ANR	1274837	Argument	"""NET_REMAP_ENABLE"""		1273754	0					
ANR	1274838	PrimaryExpression	"""NET_REMAP_ENABLE"""		1273754	0					
ANR	1274839	Argument	0		1273754	1					
ANR	1274840	PrimaryExpression	0		1273754	0					
ANR	1274841	CompoundStatement		277:73:7883:7883	1273754	1					
ANR	1274842	ExpressionStatement	Generic_set_log_va ( _condor_gcb_dprintf_va )	378:8:10932:10974	1273754	0	True				
ANR	1274843	CallExpression	Generic_set_log_va ( _condor_gcb_dprintf_va )		1273754	0					
ANR	1274844	Callee	Generic_set_log_va		1273754	0					
ANR	1274845	Identifier	Generic_set_log_va		1273754	0					
ANR	1274846	ArgumentList	_condor_gcb_dprintf_va		1273754	1					
ANR	1274847	Argument	_condor_gcb_dprintf_va		1273754	0					
ANR	1274848	Identifier	_condor_gcb_dprintf_va		1273754	0					
ANR	1274849	ExpressionStatement	"DebugUseTimestamps = dprintf_param_funcs -> param_boolean_int ( ""LOGS_USE_TIMESTAMP"" , FALSE )"	386:1:11137:11227	1273754	25	True				
ANR	1274850	AssignmentExpression	"DebugUseTimestamps = dprintf_param_funcs -> param_boolean_int ( ""LOGS_USE_TIMESTAMP"" , FALSE )"		1273754	0		=			
ANR	1274851	Identifier	DebugUseTimestamps		1273754	0					
ANR	1274852	CallExpression	"dprintf_param_funcs -> param_boolean_int ( ""LOGS_USE_TIMESTAMP"" , FALSE )"		1273754	1					
ANR	1274853	Callee	dprintf_param_funcs -> param_boolean_int		1273754	0					
ANR	1274854	PtrMemberAccess	dprintf_param_funcs -> param_boolean_int		1273754	0					
ANR	1274855	Identifier	dprintf_param_funcs		1273754	0					
ANR	1274856	Identifier	param_boolean_int		1273754	1					
ANR	1274857	ArgumentList	"""LOGS_USE_TIMESTAMP"""		1273754	1					
ANR	1274858	Argument	"""LOGS_USE_TIMESTAMP"""		1273754	0					
ANR	1274859	PrimaryExpression	"""LOGS_USE_TIMESTAMP"""		1273754	0					
ANR	1274860	Argument	FALSE		1273754	1					
ANR	1274861	Identifier	FALSE		1273754	0					
ANR	1274862	ExpressionStatement	install_backtrace_handler ( )	389:1:11250:11277	1273754	26	True				
ANR	1274863	CallExpression	install_backtrace_handler ( )		1273754	0					
ANR	1274864	Callee	install_backtrace_handler		1273754	0					
ANR	1274865	Identifier	install_backtrace_handler		1273754	0					
ANR	1274866	ArgumentList			1273754	1					
ANR	1274867	IfStatement	if ( debugLogsOld )		1273754	27					
ANR	1274868	Condition	debugLogsOld	392:4:11291:11302	1273754	0	True				
ANR	1274869	Identifier	debugLogsOld		1273754	0					
ANR	1274870	CompoundStatement		293:1:8267:8267	1273754	1					
ANR	1274871	Statement	delete	394:2:11310:11315	1273754	0	True				
ANR	1274872	ExpressionStatement	debugLogsOld	394:9:11317:11329	1273754	1	True				
ANR	1274873	Identifier	debugLogsOld		1273754	0					
ANR	1274874	ExpressionStatement	_condor_dprintf_saved_lines ( )	397:1:11336:11365	1273754	28	True				
ANR	1274875	CallExpression	_condor_dprintf_saved_lines ( )		1273754	0					
ANR	1274876	Callee	_condor_dprintf_saved_lines		1273754	0					
ANR	1274877	Identifier	_condor_dprintf_saved_lines		1273754	0					
ANR	1274878	ArgumentList			1273754	1					
ANR	1274879	ReturnType	void		1273754	1					
ANR	1274880	Identifier	dprintf_config		1273754	2					
ANR	1274881	ParameterList	"const char * subsys , param_functions * p_funcs"		1273754	3					
ANR	1274882	Parameter	const char * subsys	100:16:2991:3008	1273754	0	True				
ANR	1274883	ParameterType	const char *		1273754	0					
ANR	1274884	Identifier	subsys		1273754	1					
ANR	1274885	Parameter	param_functions * p_funcs	100:36:3011:3034	1273754	1	True				
ANR	1274886	ParameterType	param_functions *		1273754	0					
ANR	1274887	Identifier	p_funcs		1273754	1					
ANR	1274888	CFGEntryNode	ENTRY		1273754		True				
ANR	1274889	CFGExitNode	EXIT		1273754		True				
ANR	1274890	Symbol	* _condor_DebugFlagNames		1273754						
ANR	1274891	Symbol	lsubsys		1273754						
ANR	1274892	Symbol	it -> debugFlags		1273754						
ANR	1274893	Symbol	pval		1273754						
ANR	1274894	Symbol	stat_buf		1273754						
ANR	1274895	Symbol	DebugLastMod		1273754						
ANR	1274896	Symbol	DebugContinueOnOpenFailure		1273754						
ANR	1274897	Symbol	p_funcs		1273754						
ANR	1274898	Symbol	p_funcs -> get_param_bool_int_func		1273754						
ANR	1274899	Symbol	first_time		1273754						
ANR	1274900	Symbol	D_NUMLEVELS		1273754						
ANR	1274901	Symbol	dprintf_param_funcs -> param		1273754						
ANR	1274902	Symbol	dprintf_param_funcs		1273754						
ANR	1274903	Symbol	stat_buf . st_mtime		1273754						
ANR	1274904	Symbol	DebugLogs		1273754						
ANR	1274905	Symbol	p_funcs -> get_param_func		1273754						
ANR	1274906	Symbol	* p_funcs		1273754						
ANR	1274907	Symbol	param_without_default		1273754						
ANR	1274908	Symbol	strcmp		1273754						
ANR	1274909	Symbol	errno		1273754						
ANR	1274910	Symbol	NULL		1273754						
ANR	1274911	Symbol	pname		1273754						
ANR	1274912	Symbol	TRUE		1273754						
ANR	1274913	Symbol	DebugFlags		1273754						
ANR	1274914	Symbol	it		1273754						
ANR	1274915	Symbol	DebugLogs -> empty		1273754						
ANR	1274916	Symbol	stderr		1273754						
ANR	1274917	Symbol	dont_panic		1273754						
ANR	1274918	Symbol	want_truncate		1273754						
ANR	1274919	Symbol	stat_buf . st_ctime		1273754						
ANR	1274920	Symbol	NULL_FILE		1273754						
ANR	1274921	Symbol	logPathParam		1273754						
ANR	1274922	Symbol	true		1273754						
ANR	1274923	Symbol	param_integer		1273754						
ANR	1274924	Symbol	logPath . c_str		1273754						
ANR	1274925	Symbol	* dprintf_param_funcs		1273754						
ANR	1274926	Symbol	DebugLogs -> end		1273754						
ANR	1274927	Symbol	dprintf_param_funcs -> param_boolean_int		1273754						
ANR	1274928	Symbol	log		1273754						
ANR	1274929	Symbol	log_open_default		1273754						
ANR	1274930	Symbol	logFileInfo . debugFlags		1273754						
ANR	1274931	Symbol	logFileInfo . logPath		1273754						
ANR	1274932	Symbol	& stat_buf		1273754						
ANR	1274933	Symbol	debug_check_it		1273754						
ANR	1274934	Symbol	debug_zero		1273754						
ANR	1274935	Symbol	DebugUseTimestamps		1273754						
ANR	1274936	Symbol	it -> maxLog		1273754						
ANR	1274937	Symbol	_condor_dprintf_works		1273754						
ANR	1274938	Symbol	it -> maxLogNum		1273754						
ANR	1274939	Symbol	_condor_DebugFlagNames		1273754						
ANR	1274940	Symbol	p_funcs -> get_param_wo_default_func		1273754						
ANR	1274941	Symbol	logPath . empty		1273754						
ANR	1274942	Symbol	_condor_gcb_dprintf_va		1273754						
ANR	1274943	Symbol	subsys		1273754						
ANR	1274944	Symbol	debug_level		1273754						
ANR	1274945	Symbol	logPath		1273754						
ANR	1274946	Symbol	param		1273754						
ANR	1274947	Symbol	DebugShouldLockToAppend		1273754						
ANR	1274948	Symbol	param_boolean_crufty		1273754						
ANR	1274949	Symbol	lex_cast		1273754						
ANR	1274950	Symbol	* debug_level		1273754						
ANR	1274951	Symbol	* DebugLogs		1273754						
ANR	1274952	Symbol	stat		1273754						
ANR	1274953	Symbol	DebugLock		1273754						
ANR	1274954	Symbol	fOk		1273754						
ANR	1274955	Symbol	debugLogsOld		1273754						
ANR	1274956	Symbol	Termlog		1273754						
ANR	1274957	Symbol	DIR_DELIM_CHAR		1273754						
ANR	1274958	Symbol	false		1273754						
ANR	1274959	Symbol	D_ALWAYS		1273754						
ANR	1274960	Symbol	file_found		1273754						
ANR	1274961	Symbol	maxlog		1273754						
ANR	1274962	Symbol	log_keep_open		1273754						
ANR	1274963	Symbol	* it		1273754						
ANR	1274964	Symbol	r		1273754						
ANR	1274965	Symbol	logFileInfo		1273754						
ANR	1274966	Symbol	DebugLogs -> insert		1273754						
ANR	1274967	Symbol	DebugLogs -> begin		1273754						
ANR	1274968	Symbol	FALSE		1273754						
ANR	1274969	Symbol	it -> logPath		1273754						
ANR	1274970	Function	_condor_gcb_dprintf_va	402:0:11388:11745							
ANR	1274971	FunctionDef	"_condor_gcb_dprintf_va (int flags , char * fmt , va_list args)"		1274970	0					
ANR	1274972	CompoundStatement		404:0:11454:11745	1274970	0					
ANR	1274973	IdentifierDeclStatement	char * new_fmt ;	405:1:11457:11470	1274970	0	True				
ANR	1274974	IdentifierDecl	* new_fmt		1274970	0					
ANR	1274975	IdentifierDeclType	char *		1274970	0					
ANR	1274976	Identifier	new_fmt		1274970	1					
ANR	1274977	IdentifierDeclStatement	int len ;	406:1:11473:11480	1274970	1	True				
ANR	1274978	IdentifierDecl	len		1274970	0					
ANR	1274979	IdentifierDeclType	int		1274970	0					
ANR	1274980	Identifier	len		1274970	1					
ANR	1274981	ExpressionStatement	len = strlen ( fmt )	408:1:11484:11501	1274970	2	True				
ANR	1274982	AssignmentExpression	len = strlen ( fmt )		1274970	0		=			
ANR	1274983	Identifier	len		1274970	0					
ANR	1274984	CallExpression	strlen ( fmt )		1274970	1					
ANR	1274985	Callee	strlen		1274970	0					
ANR	1274986	Identifier	strlen		1274970	0					
ANR	1274987	ArgumentList	fmt		1274970	1					
ANR	1274988	Argument	fmt		1274970	0					
ANR	1274989	Identifier	fmt		1274970	0					
ANR	1274990	ExpressionStatement	new_fmt = ( char * ) malloc ( ( len + 6 ) * sizeof ( char ) )	409:1:11504:11556	1274970	3	True				
ANR	1274991	AssignmentExpression	new_fmt = ( char * ) malloc ( ( len + 6 ) * sizeof ( char ) )		1274970	0		=			
ANR	1274992	Identifier	new_fmt		1274970	0					
ANR	1274993	CastExpression	( char * ) malloc ( ( len + 6 ) * sizeof ( char ) )		1274970	1					
ANR	1274994	CastTarget	char *		1274970	0					
ANR	1274995	CallExpression	malloc ( ( len + 6 ) * sizeof ( char ) )		1274970	1					
ANR	1274996	Callee	malloc		1274970	0					
ANR	1274997	Identifier	malloc		1274970	0					
ANR	1274998	ArgumentList	( len + 6 ) * sizeof ( char )		1274970	1					
ANR	1274999	Argument	( len + 6 ) * sizeof ( char )		1274970	0					
ANR	1275000	MultiplicativeExpression	( len + 6 ) * sizeof ( char )		1274970	0		*			
ANR	1275001	AdditiveExpression	len + 6		1274970	0		+			
ANR	1275002	Identifier	len		1274970	0					
ANR	1275003	PrimaryExpression	6		1274970	1					
ANR	1275004	SizeofExpression	sizeof ( char )		1274970	1					
ANR	1275005	Sizeof	sizeof		1274970	0					
ANR	1275006	SizeofOperand	char		1274970	1					
ANR	1275007	IfStatement	if ( ! new_fmt )		1274970	4					
ANR	1275008	Condition	! new_fmt	410:5:11563:11571	1274970	0	True				
ANR	1275009	UnaryOperationExpression	! new_fmt		1274970	0					
ANR	1275010	UnaryOperator	!		1274970	0					
ANR	1275011	Identifier	new_fmt		1274970	1					
ANR	1275012	CompoundStatement		7:17:120:120	1274970	1					
ANR	1275013	ExpressionStatement	"EXCEPT ( ""_condor_gcb_dprintf_va() out of memory!"" )"	411:2:11579:11630	1274970	0	True				
ANR	1275014	CallExpression	"EXCEPT ( ""_condor_gcb_dprintf_va() out of memory!"" )"		1274970	0					
ANR	1275015	Callee	EXCEPT		1274970	0					
ANR	1275016	Identifier	EXCEPT		1274970	0					
ANR	1275017	ArgumentList	"""_condor_gcb_dprintf_va() out of memory!"""		1274970	1					
ANR	1275018	Argument	"""_condor_gcb_dprintf_va() out of memory!"""		1274970	0					
ANR	1275019	PrimaryExpression	"""_condor_gcb_dprintf_va() out of memory!"""		1274970	0					
ANR	1275020	ExpressionStatement	"snprintf ( new_fmt , len + 6 , ""GCB: %s"" , fmt )"	413:1:11636:11680	1274970	5	True				
ANR	1275021	CallExpression	"snprintf ( new_fmt , len + 6 , ""GCB: %s"" , fmt )"		1274970	0					
ANR	1275022	Callee	snprintf		1274970	0					
ANR	1275023	Identifier	snprintf		1274970	0					
ANR	1275024	ArgumentList	new_fmt		1274970	1					
ANR	1275025	Argument	new_fmt		1274970	0					
ANR	1275026	Identifier	new_fmt		1274970	0					
ANR	1275027	Argument	len + 6		1274970	1					
ANR	1275028	AdditiveExpression	len + 6		1274970	0		+			
ANR	1275029	Identifier	len		1274970	0					
ANR	1275030	PrimaryExpression	6		1274970	1					
ANR	1275031	Argument	"""GCB: %s"""		1274970	2					
ANR	1275032	PrimaryExpression	"""GCB: %s"""		1274970	0					
ANR	1275033	Argument	fmt		1274970	3					
ANR	1275034	Identifier	fmt		1274970	0					
ANR	1275035	ExpressionStatement	"_condor_dprintf_va ( flags , new_fmt , args )"	414:1:11683:11725	1274970	6	True				
ANR	1275036	CallExpression	"_condor_dprintf_va ( flags , new_fmt , args )"		1274970	0					
ANR	1275037	Callee	_condor_dprintf_va		1274970	0					
ANR	1275038	Identifier	_condor_dprintf_va		1274970	0					
ANR	1275039	ArgumentList	flags		1274970	1					
ANR	1275040	Argument	flags		1274970	0					
ANR	1275041	Identifier	flags		1274970	0					
ANR	1275042	Argument	new_fmt		1274970	1					
ANR	1275043	Identifier	new_fmt		1274970	0					
ANR	1275044	Argument	args		1274970	2					
ANR	1275045	Identifier	args		1274970	0					
ANR	1275046	ExpressionStatement	free ( new_fmt )	415:1:11728:11743	1274970	7	True				
ANR	1275047	CallExpression	free ( new_fmt )		1274970	0					
ANR	1275048	Callee	free		1274970	0					
ANR	1275049	Identifier	free		1274970	0					
ANR	1275050	ArgumentList	new_fmt		1274970	1					
ANR	1275051	Argument	new_fmt		1274970	0					
ANR	1275052	Identifier	new_fmt		1274970	0					
ANR	1275053	ReturnType	void		1274970	1					
ANR	1275054	Identifier	_condor_gcb_dprintf_va		1274970	2					
ANR	1275055	ParameterList	"int flags , char * fmt , va_list args"		1274970	3					
ANR	1275056	Parameter	int flags	403:24:11417:11425	1274970	0	True				
ANR	1275057	ParameterType	int		1274970	0					
ANR	1275058	Identifier	flags		1274970	1					
ANR	1275059	Parameter	char * fmt	403:35:11428:11436	1274970	1	True				
ANR	1275060	ParameterType	char *		1274970	0					
ANR	1275061	Identifier	fmt		1274970	1					
ANR	1275062	Parameter	va_list args	403:46:11439:11450	1274970	2	True				
ANR	1275063	ParameterType	va_list		1274970	0					
ANR	1275064	Identifier	args		1274970	1					
ANR	1275065	CFGEntryNode	ENTRY		1274970		True				
ANR	1275066	CFGExitNode	EXIT		1274970		True				
ANR	1275067	Symbol	args		1274970						
ANR	1275068	Symbol	strlen		1274970						
ANR	1275069	Symbol	malloc		1274970						
ANR	1275070	Symbol	len		1274970						
ANR	1275071	Symbol	flags		1274970						
ANR	1275072	Symbol	fmt		1274970						
ANR	1275073	Symbol	new_fmt		1274970						
