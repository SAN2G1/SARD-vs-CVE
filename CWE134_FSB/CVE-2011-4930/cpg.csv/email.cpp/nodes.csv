command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1289523	File	data/converged/CVE-2011-4930_htcondor/email.cpp								
ANR	1289524	DeclStmt									
ANR	1289525	Decl							char	char *	EMAIL_FINAL_COMMAND
ANR	1289526	DeclStmt									
ANR	1289527	Decl							FILE	"FILE * ( char * Mailer , const char * final_args [ ] )"	email_open_implementation
ANR	1289528	DeclStmt									
ANR	1289529	Decl							FILE	FILE * ( const char * final_args [ ] )	email_open_implementation
ANR	1289530	DeclStmt									
ANR	1289531	Decl							extern DLL_IMPORT_MAGIC char	extern DLL_IMPORT_MAGIC char * *	environ
ANR	1289532	DeclStmt									
ANR	1289533	Decl							extern int	extern int	Termlog
ANR	1289534	Function	email_open	52:0:1540:5727							
ANR	1289535	FunctionDef	"email_open (const char * email_addr , const char * subject)"		1289534	0					
ANR	1289536	CompoundStatement		54:0:1605:5727	1289534	0					
ANR	1289537	IdentifierDeclStatement	char * Mailer ;	55:1:1608:1620	1289534	0	True				
ANR	1289538	IdentifierDecl	* Mailer		1289534	0					
ANR	1289539	IdentifierDeclType	char *		1289534	0					
ANR	1289540	Identifier	Mailer		1289534	1					
ANR	1289541	IdentifierDeclStatement	char * SmtpServer = NULL ;	56:1:1623:1646	1289534	1	True				
ANR	1289542	IdentifierDecl	* SmtpServer = NULL		1289534	0					
ANR	1289543	IdentifierDeclType	char *		1289534	0					
ANR	1289544	Identifier	SmtpServer		1289534	1					
ANR	1289545	AssignmentExpression	* SmtpServer = NULL		1289534	2		=			
ANR	1289546	Identifier	NULL		1289534	0					
ANR	1289547	Identifier	NULL		1289534	1					
ANR	1289548	IdentifierDeclStatement	char * FromAddress = NULL ;	57:1:1649:1673	1289534	2	True				
ANR	1289549	IdentifierDecl	* FromAddress = NULL		1289534	0					
ANR	1289550	IdentifierDeclType	char *		1289534	0					
ANR	1289551	Identifier	FromAddress		1289534	1					
ANR	1289552	AssignmentExpression	* FromAddress = NULL		1289534	2		=			
ANR	1289553	Identifier	NULL		1289534	0					
ANR	1289554	Identifier	NULL		1289534	1					
ANR	1289555	IdentifierDeclStatement	char * FinalSubject ;	58:1:1676:1694	1289534	3	True				
ANR	1289556	IdentifierDecl	* FinalSubject		1289534	0					
ANR	1289557	IdentifierDeclType	char *		1289534	0					
ANR	1289558	Identifier	FinalSubject		1289534	1					
ANR	1289559	IdentifierDeclStatement	char * FinalAddr ;	59:1:1697:1712	1289534	4	True				
ANR	1289560	IdentifierDecl	* FinalAddr		1289534	0					
ANR	1289561	IdentifierDeclType	char *		1289534	0					
ANR	1289562	Identifier	FinalAddr		1289534	1					
ANR	1289563	IdentifierDeclStatement	char * temp ;	60:1:1715:1725	1289534	5	True				
ANR	1289564	IdentifierDecl	* temp		1289534	0					
ANR	1289565	IdentifierDeclType	char *		1289534	0					
ANR	1289566	Identifier	temp		1289534	1					
ANR	1289567	IdentifierDeclStatement	int token_boundary ;	61:1:1728:1746	1289534	6	True				
ANR	1289568	IdentifierDecl	token_boundary		1289534	0					
ANR	1289569	IdentifierDeclType	int		1289534	0					
ANR	1289570	Identifier	token_boundary		1289534	1					
ANR	1289571	IdentifierDeclStatement	int num_addresses ;	62:1:1749:1766	1289534	7	True				
ANR	1289572	IdentifierDecl	num_addresses		1289534	0					
ANR	1289573	IdentifierDeclType	int		1289534	0					
ANR	1289574	Identifier	num_addresses		1289534	1					
ANR	1289575	IdentifierDeclStatement	int arg_index ;	63:1:1769:1782	1289534	8	True				
ANR	1289576	IdentifierDecl	arg_index		1289534	0					
ANR	1289577	IdentifierDeclType	int		1289534	0					
ANR	1289578	Identifier	arg_index		1289534	1					
ANR	1289579	IdentifierDeclStatement	FILE * mailerstream ;	64:1:1785:1803	1289534	9	True				
ANR	1289580	IdentifierDecl	* mailerstream		1289534	0					
ANR	1289581	IdentifierDeclType	FILE *		1289534	0					
ANR	1289582	Identifier	mailerstream		1289534	1					
ANR	1289583	IfStatement	"if ( ( Mailer = param ( ""MAIL"" ) ) == NULL )"		1289534	10					
ANR	1289584	Condition	"( Mailer = param ( ""MAIL"" ) ) == NULL"	66:6:1812:1843	1289534	0	True				
ANR	1289585	EqualityExpression	"( Mailer = param ( ""MAIL"" ) ) == NULL"		1289534	0		==			
ANR	1289586	AssignmentExpression	"Mailer = param ( ""MAIL"" )"		1289534	0		=			
ANR	1289587	Identifier	Mailer		1289534	0					
ANR	1289588	CallExpression	"param ( ""MAIL"" )"		1289534	1					
ANR	1289589	Callee	param		1289534	0					
ANR	1289590	Identifier	param		1289534	0					
ANR	1289591	ArgumentList	"""MAIL"""		1289534	1					
ANR	1289592	Argument	"""MAIL"""		1289534	0					
ANR	1289593	PrimaryExpression	"""MAIL"""		1289534	0					
ANR	1289594	Identifier	NULL		1289534	1					
ANR	1289595	CompoundStatement		13:41:241:241	1289534	1					
ANR	1289596	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Trying to email, but MAIL not specified in config file\\n"" )"	67:2:1851:1934	1289534	0	True				
ANR	1289597	CallExpression	"dprintf ( D_FULLDEBUG , ""Trying to email, but MAIL not specified in config file\\n"" )"		1289534	0					
ANR	1289598	Callee	dprintf		1289534	0					
ANR	1289599	Identifier	dprintf		1289534	0					
ANR	1289600	ArgumentList	D_FULLDEBUG		1289534	1					
ANR	1289601	Argument	D_FULLDEBUG		1289534	0					
ANR	1289602	Identifier	D_FULLDEBUG		1289534	0					
ANR	1289603	Argument	"""Trying to email, but MAIL not specified in config file\\n"""		1289534	1					
ANR	1289604	PrimaryExpression	"""Trying to email, but MAIL not specified in config file\\n"""		1289534	0					
ANR	1289605	ReturnStatement	return NULL ;	69:2:1938:1949	1289534	1	True				
ANR	1289606	Identifier	NULL		1289534	0					
ANR	1289607	IfStatement	if ( subject )		1289534	11					
ANR	1289608	Condition	subject	73:6:1994:2000	1289534	0	True				
ANR	1289609	Identifier	subject		1289534	0					
ANR	1289610	CompoundStatement		22:2:457:496	1289534	1					
ANR	1289611	IdentifierDeclStatement	size_t prolog_length = strlen ( EMAIL_SUBJECT_PROLOG ) ;	74:2:2008:2059	1289534	0	True				
ANR	1289612	IdentifierDecl	prolog_length = strlen ( EMAIL_SUBJECT_PROLOG )		1289534	0					
ANR	1289613	IdentifierDeclType	size_t		1289534	0					
ANR	1289614	Identifier	prolog_length		1289534	1					
ANR	1289615	AssignmentExpression	prolog_length = strlen ( EMAIL_SUBJECT_PROLOG )		1289534	2		=			
ANR	1289616	Identifier	prolog_length		1289534	0					
ANR	1289617	CallExpression	strlen ( EMAIL_SUBJECT_PROLOG )		1289534	1					
ANR	1289618	Callee	strlen		1289534	0					
ANR	1289619	Identifier	strlen		1289534	0					
ANR	1289620	ArgumentList	EMAIL_SUBJECT_PROLOG		1289534	1					
ANR	1289621	Argument	EMAIL_SUBJECT_PROLOG		1289534	0					
ANR	1289622	Identifier	EMAIL_SUBJECT_PROLOG		1289534	0					
ANR	1289623	IdentifierDeclStatement	size_t subject_length = strlen ( subject ) ;	75:2:2063:2102	1289534	1	True				
ANR	1289624	IdentifierDecl	subject_length = strlen ( subject )		1289534	0					
ANR	1289625	IdentifierDeclType	size_t		1289534	0					
ANR	1289626	Identifier	subject_length		1289534	1					
ANR	1289627	AssignmentExpression	subject_length = strlen ( subject )		1289534	2		=			
ANR	1289628	Identifier	subject_length		1289534	0					
ANR	1289629	CallExpression	strlen ( subject )		1289534	1					
ANR	1289630	Callee	strlen		1289534	0					
ANR	1289631	Identifier	strlen		1289534	0					
ANR	1289632	ArgumentList	subject		1289534	1					
ANR	1289633	Argument	subject		1289534	0					
ANR	1289634	Identifier	subject		1289534	0					
ANR	1289635	ExpressionStatement	FinalSubject = ( char * ) malloc ( prolog_length + subject_length + 1 )	76:2:2106:2171	1289534	2	True				
ANR	1289636	AssignmentExpression	FinalSubject = ( char * ) malloc ( prolog_length + subject_length + 1 )		1289534	0		=			
ANR	1289637	Identifier	FinalSubject		1289534	0					
ANR	1289638	CastExpression	( char * ) malloc ( prolog_length + subject_length + 1 )		1289534	1					
ANR	1289639	CastTarget	char *		1289534	0					
ANR	1289640	CallExpression	malloc ( prolog_length + subject_length + 1 )		1289534	1					
ANR	1289641	Callee	malloc		1289534	0					
ANR	1289642	Identifier	malloc		1289534	0					
ANR	1289643	ArgumentList	prolog_length + subject_length + 1		1289534	1					
ANR	1289644	Argument	prolog_length + subject_length + 1		1289534	0					
ANR	1289645	AdditiveExpression	prolog_length + subject_length + 1		1289534	0		+			
ANR	1289646	Identifier	prolog_length		1289534	0					
ANR	1289647	AdditiveExpression	subject_length + 1		1289534	1		+			
ANR	1289648	Identifier	subject_length		1289534	0					
ANR	1289649	PrimaryExpression	1		1289534	1					
ANR	1289650	ExpressionStatement	"memcpy ( FinalSubject , EMAIL_SUBJECT_PROLOG , prolog_length )"	77:2:2175:2232	1289534	3	True				
ANR	1289651	CallExpression	"memcpy ( FinalSubject , EMAIL_SUBJECT_PROLOG , prolog_length )"		1289534	0					
ANR	1289652	Callee	memcpy		1289534	0					
ANR	1289653	Identifier	memcpy		1289534	0					
ANR	1289654	ArgumentList	FinalSubject		1289534	1					
ANR	1289655	Argument	FinalSubject		1289534	0					
ANR	1289656	Identifier	FinalSubject		1289534	0					
ANR	1289657	Argument	EMAIL_SUBJECT_PROLOG		1289534	1					
ANR	1289658	Identifier	EMAIL_SUBJECT_PROLOG		1289534	0					
ANR	1289659	Argument	prolog_length		1289534	2					
ANR	1289660	Identifier	prolog_length		1289534	0					
ANR	1289661	ExpressionStatement	"memcpy ( & FinalSubject [ prolog_length ] , subject , subject_length )"	78:2:2236:2297	1289534	4	True				
ANR	1289662	CallExpression	"memcpy ( & FinalSubject [ prolog_length ] , subject , subject_length )"		1289534	0					
ANR	1289663	Callee	memcpy		1289534	0					
ANR	1289664	Identifier	memcpy		1289534	0					
ANR	1289665	ArgumentList	& FinalSubject [ prolog_length ]		1289534	1					
ANR	1289666	Argument	& FinalSubject [ prolog_length ]		1289534	0					
ANR	1289667	UnaryOperationExpression	& FinalSubject [ prolog_length ]		1289534	0					
ANR	1289668	UnaryOperator	&		1289534	0					
ANR	1289669	ArrayIndexing	FinalSubject [ prolog_length ]		1289534	1					
ANR	1289670	Identifier	FinalSubject		1289534	0					
ANR	1289671	Identifier	prolog_length		1289534	1					
ANR	1289672	Argument	subject		1289534	1					
ANR	1289673	Identifier	subject		1289534	0					
ANR	1289674	Argument	subject_length		1289534	2					
ANR	1289675	Identifier	subject_length		1289534	0					
ANR	1289676	ExpressionStatement	FinalSubject [ prolog_length + subject_length ] = '\\0'	79:2:2301:2352	1289534	5	True				
ANR	1289677	AssignmentExpression	FinalSubject [ prolog_length + subject_length ] = '\\0'		1289534	0		=			
ANR	1289678	ArrayIndexing	FinalSubject [ prolog_length + subject_length ]		1289534	0					
ANR	1289679	Identifier	FinalSubject		1289534	0					
ANR	1289680	AdditiveExpression	prolog_length + subject_length		1289534	1		+			
ANR	1289681	Identifier	prolog_length		1289534	0					
ANR	1289682	Identifier	subject_length		1289534	1					
ANR	1289683	PrimaryExpression	'\\0'		1289534	1					
ANR	1289684	ElseStatement	else		1289534	0					
ANR	1289685	CompoundStatement		28:6:757:757	1289534	0					
ANR	1289686	ExpressionStatement	FinalSubject = strdup ( EMAIL_SUBJECT_PROLOG )	82:2:2367:2410	1289534	0	True				
ANR	1289687	AssignmentExpression	FinalSubject = strdup ( EMAIL_SUBJECT_PROLOG )		1289534	0		=			
ANR	1289688	Identifier	FinalSubject		1289534	0					
ANR	1289689	CallExpression	strdup ( EMAIL_SUBJECT_PROLOG )		1289534	1					
ANR	1289690	Callee	strdup		1289534	0					
ANR	1289691	Identifier	strdup		1289534	0					
ANR	1289692	ArgumentList	EMAIL_SUBJECT_PROLOG		1289534	1					
ANR	1289693	Argument	EMAIL_SUBJECT_PROLOG		1289534	0					
ANR	1289694	Identifier	EMAIL_SUBJECT_PROLOG		1289534	0					
ANR	1289695	ExpressionStatement	"FromAddress = param ( ""MAIL_FROM"" )"	87:1:2545:2577	1289534	12	True				
ANR	1289696	AssignmentExpression	"FromAddress = param ( ""MAIL_FROM"" )"		1289534	0		=			
ANR	1289697	Identifier	FromAddress		1289534	0					
ANR	1289698	CallExpression	"param ( ""MAIL_FROM"" )"		1289534	1					
ANR	1289699	Callee	param		1289534	0					
ANR	1289700	Identifier	param		1289534	0					
ANR	1289701	ArgumentList	"""MAIL_FROM"""		1289534	1					
ANR	1289702	Argument	"""MAIL_FROM"""		1289534	0					
ANR	1289703	PrimaryExpression	"""MAIL_FROM"""		1289534	0					
ANR	1289704	IfStatement	"if ( ( SmtpServer = param ( ""SMTP_SERVER"" ) ) == NULL )"		1289534	13					
ANR	1289705	Condition	"( SmtpServer = param ( ""SMTP_SERVER"" ) ) == NULL"	93:6:2728:2768	1289534	0	True				
ANR	1289706	EqualityExpression	"( SmtpServer = param ( ""SMTP_SERVER"" ) ) == NULL"		1289534	0		==			
ANR	1289707	AssignmentExpression	"SmtpServer = param ( ""SMTP_SERVER"" )"		1289534	0		=			
ANR	1289708	Identifier	SmtpServer		1289534	0					
ANR	1289709	CallExpression	"param ( ""SMTP_SERVER"" )"		1289534	1					
ANR	1289710	Callee	param		1289534	0					
ANR	1289711	Identifier	param		1289534	0					
ANR	1289712	ArgumentList	"""SMTP_SERVER"""		1289534	1					
ANR	1289713	Argument	"""SMTP_SERVER"""		1289534	0					
ANR	1289714	PrimaryExpression	"""SMTP_SERVER"""		1289534	0					
ANR	1289715	Identifier	NULL		1289534	1					
ANR	1289716	CompoundStatement		40:50:1166:1166	1289534	1					
ANR	1289717	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Trying to email, but SMTP_SERVER not specified in config file\\n"" )"	94:2:2776:2866	1289534	0	True				
ANR	1289718	CallExpression	"dprintf ( D_FULLDEBUG , ""Trying to email, but SMTP_SERVER not specified in config file\\n"" )"		1289534	0					
ANR	1289719	Callee	dprintf		1289534	0					
ANR	1289720	Identifier	dprintf		1289534	0					
ANR	1289721	ArgumentList	D_FULLDEBUG		1289534	1					
ANR	1289722	Argument	D_FULLDEBUG		1289534	0					
ANR	1289723	Identifier	D_FULLDEBUG		1289534	0					
ANR	1289724	Argument	"""Trying to email, but SMTP_SERVER not specified in config file\\n"""		1289534	1					
ANR	1289725	PrimaryExpression	"""Trying to email, but SMTP_SERVER not specified in config file\\n"""		1289534	0					
ANR	1289726	ExpressionStatement	free ( Mailer )	96:2:2870:2882	1289534	1	True				
ANR	1289727	CallExpression	free ( Mailer )		1289534	0					
ANR	1289728	Callee	free		1289534	0					
ANR	1289729	Identifier	free		1289534	0					
ANR	1289730	ArgumentList	Mailer		1289534	1					
ANR	1289731	Argument	Mailer		1289534	0					
ANR	1289732	Identifier	Mailer		1289534	0					
ANR	1289733	ExpressionStatement	free ( FinalSubject )	97:2:2886:2904	1289534	2	True				
ANR	1289734	CallExpression	free ( FinalSubject )		1289534	0					
ANR	1289735	Callee	free		1289534	0					
ANR	1289736	Identifier	free		1289534	0					
ANR	1289737	ArgumentList	FinalSubject		1289534	1					
ANR	1289738	Argument	FinalSubject		1289534	0					
ANR	1289739	Identifier	FinalSubject		1289534	0					
ANR	1289740	IfStatement	if ( FromAddress )		1289534	3					
ANR	1289741	Condition	FromAddress	98:6:2912:2922	1289534	0	True				
ANR	1289742	Identifier	FromAddress		1289534	0					
ANR	1289743	ExpressionStatement	free ( FromAddress )	98:19:2925:2942	1289534	1	True				
ANR	1289744	CallExpression	free ( FromAddress )		1289534	0					
ANR	1289745	Callee	free		1289534	0					
ANR	1289746	Identifier	free		1289534	0					
ANR	1289747	ArgumentList	FromAddress		1289534	1					
ANR	1289748	Argument	FromAddress		1289534	0					
ANR	1289749	Identifier	FromAddress		1289534	0					
ANR	1289750	ReturnStatement	return NULL ;	99:2:2946:2957	1289534	4	True				
ANR	1289751	Identifier	NULL		1289534	0					
ANR	1289752	IfStatement	if ( email_addr )		1289534	14					
ANR	1289753	Condition	email_addr	108:6:3232:3241	1289534	0	True				
ANR	1289754	Identifier	email_addr		1289534	0					
ANR	1289755	CompoundStatement		55:19:1639:1639	1289534	1					
ANR	1289756	ExpressionStatement	FinalAddr = strdup ( email_addr )	109:2:3249:3279	1289534	0	True				
ANR	1289757	AssignmentExpression	FinalAddr = strdup ( email_addr )		1289534	0		=			
ANR	1289758	Identifier	FinalAddr		1289534	0					
ANR	1289759	CallExpression	strdup ( email_addr )		1289534	1					
ANR	1289760	Callee	strdup		1289534	0					
ANR	1289761	Identifier	strdup		1289534	0					
ANR	1289762	ArgumentList	email_addr		1289534	1					
ANR	1289763	Argument	email_addr		1289534	0					
ANR	1289764	Identifier	email_addr		1289534	0					
ANR	1289765	ElseStatement	else		1289534	0					
ANR	1289766	CompoundStatement		57:8:1683:1683	1289534	0					
ANR	1289767	IfStatement	"if ( ( FinalAddr = param ( ""CONDOR_ADMIN"" ) ) == NULL )"		1289534	0					
ANR	1289768	Condition	"( FinalAddr = param ( ""CONDOR_ADMIN"" ) ) == NULL"	111:7:3298:3340	1289534	0	True				
ANR	1289769	EqualityExpression	"( FinalAddr = param ( ""CONDOR_ADMIN"" ) ) == NULL"		1289534	0		==			
ANR	1289770	AssignmentExpression	"FinalAddr = param ( ""CONDOR_ADMIN"" )"		1289534	0		=			
ANR	1289771	Identifier	FinalAddr		1289534	0					
ANR	1289772	CallExpression	"param ( ""CONDOR_ADMIN"" )"		1289534	1					
ANR	1289773	Callee	param		1289534	0					
ANR	1289774	Identifier	param		1289534	0					
ANR	1289775	ArgumentList	"""CONDOR_ADMIN"""		1289534	1					
ANR	1289776	Argument	"""CONDOR_ADMIN"""		1289534	0					
ANR	1289777	PrimaryExpression	"""CONDOR_ADMIN"""		1289534	0					
ANR	1289778	Identifier	NULL		1289534	1					
ANR	1289779	CompoundStatement		58:53:1738:1738	1289534	1					
ANR	1289780	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Trying to email, but CONDOR_ADMIN not specified in config file\\n"" )"	112:3:3349:3441	1289534	0	True				
ANR	1289781	CallExpression	"dprintf ( D_FULLDEBUG , ""Trying to email, but CONDOR_ADMIN not specified in config file\\n"" )"		1289534	0					
ANR	1289782	Callee	dprintf		1289534	0					
ANR	1289783	Identifier	dprintf		1289534	0					
ANR	1289784	ArgumentList	D_FULLDEBUG		1289534	1					
ANR	1289785	Argument	D_FULLDEBUG		1289534	0					
ANR	1289786	Identifier	D_FULLDEBUG		1289534	0					
ANR	1289787	Argument	"""Trying to email, but CONDOR_ADMIN not specified in config file\\n"""		1289534	1					
ANR	1289788	PrimaryExpression	"""Trying to email, but CONDOR_ADMIN not specified in config file\\n"""		1289534	0					
ANR	1289789	ExpressionStatement	free ( Mailer )	114:3:3446:3458	1289534	1	True				
ANR	1289790	CallExpression	free ( Mailer )		1289534	0					
ANR	1289791	Callee	free		1289534	0					
ANR	1289792	Identifier	free		1289534	0					
ANR	1289793	ArgumentList	Mailer		1289534	1					
ANR	1289794	Argument	Mailer		1289534	0					
ANR	1289795	Identifier	Mailer		1289534	0					
ANR	1289796	ExpressionStatement	free ( FinalSubject )	115:3:3463:3481	1289534	2	True				
ANR	1289797	CallExpression	free ( FinalSubject )		1289534	0					
ANR	1289798	Callee	free		1289534	0					
ANR	1289799	Identifier	free		1289534	0					
ANR	1289800	ArgumentList	FinalSubject		1289534	1					
ANR	1289801	Argument	FinalSubject		1289534	0					
ANR	1289802	Identifier	FinalSubject		1289534	0					
ANR	1289803	IfStatement	if ( FromAddress )		1289534	3					
ANR	1289804	Condition	FromAddress	116:7:3490:3500	1289534	0	True				
ANR	1289805	Identifier	FromAddress		1289534	0					
ANR	1289806	ExpressionStatement	free ( FromAddress )	116:20:3503:3520	1289534	1	True				
ANR	1289807	CallExpression	free ( FromAddress )		1289534	0					
ANR	1289808	Callee	free		1289534	0					
ANR	1289809	Identifier	free		1289534	0					
ANR	1289810	ArgumentList	FromAddress		1289534	1					
ANR	1289811	Argument	FromAddress		1289534	0					
ANR	1289812	Identifier	FromAddress		1289534	0					
ANR	1289813	IfStatement	if ( SmtpServer )		1289534	4					
ANR	1289814	Condition	SmtpServer	117:7:3529:3538	1289534	0	True				
ANR	1289815	Identifier	SmtpServer		1289534	0					
ANR	1289816	ExpressionStatement	free ( SmtpServer )	117:19:3541:3557	1289534	1	True				
ANR	1289817	CallExpression	free ( SmtpServer )		1289534	0					
ANR	1289818	Callee	free		1289534	0					
ANR	1289819	Identifier	free		1289534	0					
ANR	1289820	ArgumentList	SmtpServer		1289534	1					
ANR	1289821	Argument	SmtpServer		1289534	0					
ANR	1289822	Identifier	SmtpServer		1289534	0					
ANR	1289823	ReturnStatement	return NULL ;	118:3:3562:3573	1289534	5	True				
ANR	1289824	Identifier	NULL		1289534	0					
ANR	1289825	ExpressionStatement	token_boundary = TRUE	126:1:3786:3807	1289534	15	True				
ANR	1289826	AssignmentExpression	token_boundary = TRUE		1289534	0		=			
ANR	1289827	Identifier	token_boundary		1289534	0					
ANR	1289828	Identifier	TRUE		1289534	1					
ANR	1289829	ExpressionStatement	num_addresses = 0	127:1:3810:3827	1289534	16	True				
ANR	1289830	AssignmentExpression	num_addresses = 0		1289534	0		=			
ANR	1289831	Identifier	num_addresses		1289534	0					
ANR	1289832	PrimaryExpression	0		1289534	1					
ANR	1289833	ForStatement	for ( temp = FinalAddr ; * temp != '\\0' ; temp ++ )		1289534	17					
ANR	1289834	ForInit	temp = FinalAddr ;	128:6:3835:3851	1289534	0	True				
ANR	1289835	AssignmentExpression	temp = FinalAddr		1289534	0		=			
ANR	1289836	Identifier	temp		1289534	0					
ANR	1289837	Identifier	FinalAddr		1289534	1					
ANR	1289838	Condition	* temp != '\\0'	128:24:3853:3865	1289534	1	True				
ANR	1289839	EqualityExpression	* temp != '\\0'		1289534	0		!=			
ANR	1289840	UnaryOperationExpression	* temp		1289534	0					
ANR	1289841	UnaryOperator	*		1289534	0					
ANR	1289842	Identifier	temp		1289534	1					
ANR	1289843	PrimaryExpression	'\\0'		1289534	1					
ANR	1289844	PostIncDecOperationExpression	temp ++	128:39:3868:3873	1289534	2	True				
ANR	1289845	Identifier	temp		1289534	0					
ANR	1289846	IncDec	++		1289534	1					
ANR	1289847	CompoundStatement		75:47:2270:2270	1289534	3					
ANR	1289848	IfStatement	"if ( * temp == ',' || * temp == ' ' )"		1289534	0					
ANR	1289849	Condition	"* temp == ',' || * temp == ' '"	129:6:3884:3911	1289534	0	True				
ANR	1289850	OrExpression	"* temp == ',' || * temp == ' '"		1289534	0		||			
ANR	1289851	EqualityExpression	"* temp == ','"		1289534	0		==			
ANR	1289852	UnaryOperationExpression	* temp		1289534	0					
ANR	1289853	UnaryOperator	*		1289534	0					
ANR	1289854	Identifier	temp		1289534	1					
ANR	1289855	PrimaryExpression	"','"		1289534	1					
ANR	1289856	EqualityExpression	* temp == ' '		1289534	1		==			
ANR	1289857	UnaryOperationExpression	* temp		1289534	0					
ANR	1289858	UnaryOperator	*		1289534	0					
ANR	1289859	Identifier	temp		1289534	1					
ANR	1289860	PrimaryExpression	' '		1289534	1					
ANR	1289861	CompoundStatement		76:36:2308:2308	1289534	1					
ANR	1289862	ExpressionStatement	* temp = '\\0'	130:3:3919:3931	1289534	0	True				
ANR	1289863	AssignmentExpression	* temp = '\\0'		1289534	0		=			
ANR	1289864	UnaryOperationExpression	* temp		1289534	0					
ANR	1289865	UnaryOperator	*		1289534	0					
ANR	1289866	Identifier	temp		1289534	1					
ANR	1289867	PrimaryExpression	'\\0'		1289534	1					
ANR	1289868	ExpressionStatement	token_boundary = TRUE	131:3:3936:3957	1289534	1	True				
ANR	1289869	AssignmentExpression	token_boundary = TRUE		1289534	0		=			
ANR	1289870	Identifier	token_boundary		1289534	0					
ANR	1289871	Identifier	TRUE		1289534	1					
ANR	1289872	ElseStatement	else		1289534	0					
ANR	1289873	IfStatement	if ( token_boundary )		1289534	0					
ANR	1289874	Condition	token_boundary	133:11:3974:3987	1289534	0	True				
ANR	1289875	Identifier	token_boundary		1289534	0					
ANR	1289876	CompoundStatement		80:27:2384:2384	1289534	1					
ANR	1289877	ExpressionStatement	num_addresses ++	134:3:3995:4010	1289534	0	True				
ANR	1289878	PostIncDecOperationExpression	num_addresses ++		1289534	0					
ANR	1289879	Identifier	num_addresses		1289534	0					
ANR	1289880	IncDec	++		1289534	1					
ANR	1289881	ExpressionStatement	token_boundary = FALSE	135:3:4015:4037	1289534	1	True				
ANR	1289882	AssignmentExpression	token_boundary = FALSE		1289534	0		=			
ANR	1289883	Identifier	token_boundary		1289534	0					
ANR	1289884	Identifier	FALSE		1289534	1					
ANR	1289885	IfStatement	if ( num_addresses == 0 )		1289534	18					
ANR	1289886	Condition	num_addresses == 0	138:5:4051:4068	1289534	0	True				
ANR	1289887	EqualityExpression	num_addresses == 0		1289534	0		==			
ANR	1289888	Identifier	num_addresses		1289534	0					
ANR	1289889	PrimaryExpression	0		1289534	1					
ANR	1289890	CompoundStatement		85:25:2465:2465	1289534	1					
ANR	1289891	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Trying to email, but address list is empty\\n"" )"	139:2:4075:4143	1289534	0	True				
ANR	1289892	CallExpression	"dprintf ( D_FULLDEBUG , ""Trying to email, but address list is empty\\n"" )"		1289534	0					
ANR	1289893	Callee	dprintf		1289534	0					
ANR	1289894	Identifier	dprintf		1289534	0					
ANR	1289895	ArgumentList	D_FULLDEBUG		1289534	1					
ANR	1289896	Argument	D_FULLDEBUG		1289534	0					
ANR	1289897	Identifier	D_FULLDEBUG		1289534	0					
ANR	1289898	Argument	"""Trying to email, but address list is empty\\n"""		1289534	1					
ANR	1289899	PrimaryExpression	"""Trying to email, but address list is empty\\n"""		1289534	0					
ANR	1289900	ExpressionStatement	free ( Mailer )	140:2:4147:4159	1289534	1	True				
ANR	1289901	CallExpression	free ( Mailer )		1289534	0					
ANR	1289902	Callee	free		1289534	0					
ANR	1289903	Identifier	free		1289534	0					
ANR	1289904	ArgumentList	Mailer		1289534	1					
ANR	1289905	Argument	Mailer		1289534	0					
ANR	1289906	Identifier	Mailer		1289534	0					
ANR	1289907	ExpressionStatement	free ( FinalSubject )	141:2:4163:4181	1289534	2	True				
ANR	1289908	CallExpression	free ( FinalSubject )		1289534	0					
ANR	1289909	Callee	free		1289534	0					
ANR	1289910	Identifier	free		1289534	0					
ANR	1289911	ArgumentList	FinalSubject		1289534	1					
ANR	1289912	Argument	FinalSubject		1289534	0					
ANR	1289913	Identifier	FinalSubject		1289534	0					
ANR	1289914	IfStatement	if ( FromAddress )		1289534	3					
ANR	1289915	Condition	FromAddress	142:6:4189:4199	1289534	0	True				
ANR	1289916	Identifier	FromAddress		1289534	0					
ANR	1289917	ExpressionStatement	free ( FromAddress )	142:19:4202:4219	1289534	1	True				
ANR	1289918	CallExpression	free ( FromAddress )		1289534	0					
ANR	1289919	Callee	free		1289534	0					
ANR	1289920	Identifier	free		1289534	0					
ANR	1289921	ArgumentList	FromAddress		1289534	1					
ANR	1289922	Argument	FromAddress		1289534	0					
ANR	1289923	Identifier	FromAddress		1289534	0					
ANR	1289924	IfStatement	if ( SmtpServer )		1289534	4					
ANR	1289925	Condition	SmtpServer	143:6:4227:4236	1289534	0	True				
ANR	1289926	Identifier	SmtpServer		1289534	0					
ANR	1289927	ExpressionStatement	free ( SmtpServer )	143:18:4239:4255	1289534	1	True				
ANR	1289928	CallExpression	free ( SmtpServer )		1289534	0					
ANR	1289929	Callee	free		1289534	0					
ANR	1289930	Identifier	free		1289534	0					
ANR	1289931	ArgumentList	SmtpServer		1289534	1					
ANR	1289932	Argument	SmtpServer		1289534	0					
ANR	1289933	Identifier	SmtpServer		1289534	0					
ANR	1289934	ExpressionStatement	free ( FinalAddr )	144:2:4259:4274	1289534	5	True				
ANR	1289935	CallExpression	free ( FinalAddr )		1289534	0					
ANR	1289936	Callee	free		1289534	0					
ANR	1289937	Identifier	free		1289534	0					
ANR	1289938	ArgumentList	FinalAddr		1289534	1					
ANR	1289939	Argument	FinalAddr		1289534	0					
ANR	1289940	Identifier	FinalAddr		1289534	0					
ANR	1289941	ReturnStatement	return NULL ;	145:2:4278:4289	1289534	6	True				
ANR	1289942	Identifier	NULL		1289534	0					
ANR	1289943	IdentifierDeclStatement	const char * * final_args ;	150:1:4384:4409	1289534	19	True				
ANR	1289944	IdentifierDecl	* * final_args		1289534	0					
ANR	1289945	IdentifierDeclType	const char * *		1289534	0					
ANR	1289946	Identifier	final_args		1289534	1					
ANR	1289947	ExpressionStatement	final_args = ( char const * * ) malloc ( ( 8 + num_addresses ) * sizeof ( char * ) )	151:1:4412:4484	1289534	20	True				
ANR	1289948	AssignmentExpression	final_args = ( char const * * ) malloc ( ( 8 + num_addresses ) * sizeof ( char * ) )		1289534	0		=			
ANR	1289949	Identifier	final_args		1289534	0					
ANR	1289950	CastExpression	( char const * * ) malloc ( ( 8 + num_addresses ) * sizeof ( char * ) )		1289534	1					
ANR	1289951	CastTarget	char const * *		1289534	0					
ANR	1289952	CallExpression	malloc ( ( 8 + num_addresses ) * sizeof ( char * ) )		1289534	1					
ANR	1289953	Callee	malloc		1289534	0					
ANR	1289954	Identifier	malloc		1289534	0					
ANR	1289955	ArgumentList	( 8 + num_addresses ) * sizeof ( char * )		1289534	1					
ANR	1289956	Argument	( 8 + num_addresses ) * sizeof ( char * )		1289534	0					
ANR	1289957	MultiplicativeExpression	( 8 + num_addresses ) * sizeof ( char * )		1289534	0		*			
ANR	1289958	AdditiveExpression	8 + num_addresses		1289534	0		+			
ANR	1289959	PrimaryExpression	8		1289534	0					
ANR	1289960	Identifier	num_addresses		1289534	1					
ANR	1289961	SizeofExpression	sizeof ( char * )		1289534	1					
ANR	1289962	Sizeof	sizeof		1289534	0					
ANR	1289963	SizeofOperand	char *		1289534	1					
ANR	1289964	IfStatement	if ( final_args == NULL )		1289534	21					
ANR	1289965	Condition	final_args == NULL	152:5:4491:4508	1289534	0	True				
ANR	1289966	EqualityExpression	final_args == NULL		1289534	0		==			
ANR	1289967	Identifier	final_args		1289534	0					
ANR	1289968	Identifier	NULL		1289534	1					
ANR	1289969	CompoundStatement		99:25:2905:2905	1289534	1					
ANR	1289970	ExpressionStatement	"EXCEPT ( ""Out of memory"" )"	153:2:4515:4538	1289534	0	True				
ANR	1289971	CallExpression	"EXCEPT ( ""Out of memory"" )"		1289534	0					
ANR	1289972	Callee	EXCEPT		1289534	0					
ANR	1289973	Identifier	EXCEPT		1289534	0					
ANR	1289974	ArgumentList	"""Out of memory"""		1289534	1					
ANR	1289975	Argument	"""Out of memory"""		1289534	0					
ANR	1289976	PrimaryExpression	"""Out of memory"""		1289534	0					
ANR	1289977	ExpressionStatement	arg_index = 0	155:1:4544:4557	1289534	22	True				
ANR	1289978	AssignmentExpression	arg_index = 0		1289534	0		=			
ANR	1289979	Identifier	arg_index		1289534	0					
ANR	1289980	PrimaryExpression	0		1289534	1					
ANR	1289981	ExpressionStatement	final_args [ arg_index ++ ] = Mailer	156:1:4560:4592	1289534	23	True				
ANR	1289982	AssignmentExpression	final_args [ arg_index ++ ] = Mailer		1289534	0		=			
ANR	1289983	ArrayIndexing	final_args [ arg_index ++ ]		1289534	0					
ANR	1289984	Identifier	final_args		1289534	0					
ANR	1289985	PostIncDecOperationExpression	arg_index ++		1289534	1					
ANR	1289986	Identifier	arg_index		1289534	0					
ANR	1289987	IncDec	++		1289534	1					
ANR	1289988	Identifier	Mailer		1289534	1					
ANR	1289989	ExpressionStatement	"final_args [ arg_index ++ ] = ""-s"""	157:1:4595:4625	1289534	24	True				
ANR	1289990	AssignmentExpression	"final_args [ arg_index ++ ] = ""-s"""		1289534	0		=			
ANR	1289991	ArrayIndexing	final_args [ arg_index ++ ]		1289534	0					
ANR	1289992	Identifier	final_args		1289534	0					
ANR	1289993	PostIncDecOperationExpression	arg_index ++		1289534	1					
ANR	1289994	Identifier	arg_index		1289534	0					
ANR	1289995	IncDec	++		1289534	1					
ANR	1289996	PrimaryExpression	"""-s"""		1289534	1					
ANR	1289997	ExpressionStatement	final_args [ arg_index ++ ] = FinalSubject	158:1:4628:4666	1289534	25	True				
ANR	1289998	AssignmentExpression	final_args [ arg_index ++ ] = FinalSubject		1289534	0		=			
ANR	1289999	ArrayIndexing	final_args [ arg_index ++ ]		1289534	0					
ANR	1290000	Identifier	final_args		1289534	0					
ANR	1290001	PostIncDecOperationExpression	arg_index ++		1289534	1					
ANR	1290002	Identifier	arg_index		1289534	0					
ANR	1290003	IncDec	++		1289534	1					
ANR	1290004	Identifier	FinalSubject		1289534	1					
ANR	1290005	IfStatement	if ( FromAddress )		1289534	26					
ANR	1290006	Condition	FromAddress	159:5:4673:4683	1289534	0	True				
ANR	1290007	Identifier	FromAddress		1289534	0					
ANR	1290008	CompoundStatement		106:18:3080:3080	1289534	1					
ANR	1290009	ExpressionStatement	"final_args [ arg_index ++ ] = ""-f"""	160:2:4690:4720	1289534	0	True				
ANR	1290010	AssignmentExpression	"final_args [ arg_index ++ ] = ""-f"""		1289534	0		=			
ANR	1290011	ArrayIndexing	final_args [ arg_index ++ ]		1289534	0					
ANR	1290012	Identifier	final_args		1289534	0					
ANR	1290013	PostIncDecOperationExpression	arg_index ++		1289534	1					
ANR	1290014	Identifier	arg_index		1289534	0					
ANR	1290015	IncDec	++		1289534	1					
ANR	1290016	PrimaryExpression	"""-f"""		1289534	1					
ANR	1290017	ExpressionStatement	final_args [ arg_index ++ ] = FromAddress	161:2:4724:4761	1289534	1	True				
ANR	1290018	AssignmentExpression	final_args [ arg_index ++ ] = FromAddress		1289534	0		=			
ANR	1290019	ArrayIndexing	final_args [ arg_index ++ ]		1289534	0					
ANR	1290020	Identifier	final_args		1289534	0					
ANR	1290021	PostIncDecOperationExpression	arg_index ++		1289534	1					
ANR	1290022	Identifier	arg_index		1289534	0					
ANR	1290023	IncDec	++		1289534	1					
ANR	1290024	Identifier	FromAddress		1289534	1					
ANR	1290025	IfStatement	if ( SmtpServer )		1289534	27					
ANR	1290026	Condition	SmtpServer	163:5:4771:4780	1289534	0	True				
ANR	1290027	Identifier	SmtpServer		1289534	0					
ANR	1290028	CompoundStatement		110:17:3177:3177	1289534	1					
ANR	1290029	ExpressionStatement	"final_args [ arg_index ++ ] = ""-relay"""	164:2:4787:4821	1289534	0	True				
ANR	1290030	AssignmentExpression	"final_args [ arg_index ++ ] = ""-relay"""		1289534	0		=			
ANR	1290031	ArrayIndexing	final_args [ arg_index ++ ]		1289534	0					
ANR	1290032	Identifier	final_args		1289534	0					
ANR	1290033	PostIncDecOperationExpression	arg_index ++		1289534	1					
ANR	1290034	Identifier	arg_index		1289534	0					
ANR	1290035	IncDec	++		1289534	1					
ANR	1290036	PrimaryExpression	"""-relay"""		1289534	1					
ANR	1290037	ExpressionStatement	final_args [ arg_index ++ ] = SmtpServer	165:2:4825:4861	1289534	1	True				
ANR	1290038	AssignmentExpression	final_args [ arg_index ++ ] = SmtpServer		1289534	0		=			
ANR	1290039	ArrayIndexing	final_args [ arg_index ++ ]		1289534	0					
ANR	1290040	Identifier	final_args		1289534	0					
ANR	1290041	PostIncDecOperationExpression	arg_index ++		1289534	1					
ANR	1290042	Identifier	arg_index		1289534	0					
ANR	1290043	IncDec	++		1289534	1					
ANR	1290044	Identifier	SmtpServer		1289534	1					
ANR	1290045	ExpressionStatement	temp = FinalAddr	167:1:4867:4883	1289534	28	True				
ANR	1290046	AssignmentExpression	temp = FinalAddr		1289534	0		=			
ANR	1290047	Identifier	temp		1289534	0					
ANR	1290048	Identifier	FinalAddr		1289534	1					
ANR	1290049	ForStatement	for ( ; ; )		1289534	29					
ANR	1290050	CompoundStatement		115:10:3289:3289	1289534	0					
ANR	1290051	WhileStatement	while ( * temp == '\\0' )		1289534	0					
ANR	1290052	Condition	* temp == '\\0'	169:9:4906:4918	1289534	0	True				
ANR	1290053	EqualityExpression	* temp == '\\0'		1289534	0		==			
ANR	1290054	UnaryOperationExpression	* temp		1289534	0					
ANR	1290055	UnaryOperator	*		1289534	0					
ANR	1290056	Identifier	temp		1289534	1					
ANR	1290057	PrimaryExpression	'\\0'		1289534	1					
ANR	1290058	ExpressionStatement	temp ++	169:24:4921:4927	1289534	1	True				
ANR	1290059	PostIncDecOperationExpression	temp ++		1289534	0					
ANR	1290060	Identifier	temp		1289534	0					
ANR	1290061	IncDec	++		1289534	1					
ANR	1290062	ExpressionStatement	final_args [ arg_index ++ ] = temp	170:2:4931:4961	1289534	1	True				
ANR	1290063	AssignmentExpression	final_args [ arg_index ++ ] = temp		1289534	0		=			
ANR	1290064	ArrayIndexing	final_args [ arg_index ++ ]		1289534	0					
ANR	1290065	Identifier	final_args		1289534	0					
ANR	1290066	PostIncDecOperationExpression	arg_index ++		1289534	1					
ANR	1290067	Identifier	arg_index		1289534	0					
ANR	1290068	IncDec	++		1289534	1					
ANR	1290069	Identifier	temp		1289534	1					
ANR	1290070	IfStatement	if ( -- num_addresses == 0 )		1289534	2					
ANR	1290071	Condition	-- num_addresses == 0	171:6:4969:4988	1289534	0	True				
ANR	1290072	EqualityExpression	-- num_addresses == 0		1289534	0		==			
ANR	1290073	UnaryExpression	-- num_addresses		1289534	0					
ANR	1290074	IncDec	--		1289534	0					
ANR	1290075	Identifier	num_addresses		1289534	1					
ANR	1290076	PrimaryExpression	0		1289534	1					
ANR	1290077	BreakStatement	break ;	171:28:4991:4996	1289534	1	True				
ANR	1290078	WhileStatement	while ( * temp != '\\0' )		1289534	3					
ANR	1290079	Condition	* temp != '\\0'	172:9:5007:5019	1289534	0	True				
ANR	1290080	EqualityExpression	* temp != '\\0'		1289534	0		!=			
ANR	1290081	UnaryOperationExpression	* temp		1289534	0					
ANR	1290082	UnaryOperator	*		1289534	0					
ANR	1290083	Identifier	temp		1289534	1					
ANR	1290084	PrimaryExpression	'\\0'		1289534	1					
ANR	1290085	ExpressionStatement	temp ++	172:24:5022:5028	1289534	1	True				
ANR	1290086	PostIncDecOperationExpression	temp ++		1289534	0					
ANR	1290087	Identifier	temp		1289534	0					
ANR	1290088	IncDec	++		1289534	1					
ANR	1290089	ExpressionStatement	final_args [ arg_index ] = NULL	174:1:5034:5062	1289534	30	True				
ANR	1290090	AssignmentExpression	final_args [ arg_index ] = NULL		1289534	0		=			
ANR	1290091	ArrayIndexing	final_args [ arg_index ]		1289534	0					
ANR	1290092	Identifier	final_args		1289534	0					
ANR	1290093	Identifier	arg_index		1289534	1					
ANR	1290094	Identifier	NULL		1289534	1					
ANR	1290095	ExpressionStatement	"mailerstream = email_open_implementation ( Mailer , final_args )"	180:1:5183:5243	1289534	31	True				
ANR	1290096	AssignmentExpression	"mailerstream = email_open_implementation ( Mailer , final_args )"		1289534	0		=			
ANR	1290097	Identifier	mailerstream		1289534	0					
ANR	1290098	CallExpression	"email_open_implementation ( Mailer , final_args )"		1289534	1					
ANR	1290099	Callee	email_open_implementation		1289534	0					
ANR	1290100	Identifier	email_open_implementation		1289534	0					
ANR	1290101	ArgumentList	Mailer		1289534	1					
ANR	1290102	Argument	Mailer		1289534	0					
ANR	1290103	Identifier	Mailer		1289534	0					
ANR	1290104	Argument	final_args		1289534	1					
ANR	1290105	Identifier	final_args		1289534	0					
ANR	1290106	IfStatement	if ( mailerstream )		1289534	32					
ANR	1290107	Condition	mailerstream	185:6:5320:5331	1289534	0	True				
ANR	1290108	Identifier	mailerstream		1289534	0					
ANR	1290109	CompoundStatement		132:21:3729:3729	1289534	1					
ANR	1290110	Statement	fprintf	186:2:5339:5345	1289534	0	True				
ANR	1290111	Statement	(	186:9:5346:5346	1289534	1	True				
ANR	1290112	Statement	mailerstream	186:10:5347:5358	1289534	2	True				
ANR	1290113	Statement	","	186:22:5359:5359	1289534	3	True				
ANR	1290114	Statement	"""This is an automated email from the Condor """	186:23:5360:5404	1289534	4	True				
ANR	1290115	Statement	"""system\\non machine \\""%s\\"".  Do not reply.\\n\\n"""	187:3:5409:5455	1289534	5	True				
ANR	1290116	Statement	","	187:50:5456:5456	1289534	6	True				
ANR	1290117	Statement	get_local_fqdn	187:51:5457:5470	1289534	7	True				
ANR	1290118	Statement	(	187:65:5471:5471	1289534	8	True				
ANR	1290119	Statement	)	187:66:5472:5472	1289534	9	True				
ANR	1290120	Statement	.	187:67:5473:5473	1289534	10	True				
ANR	1290121	Statement	Value	187:68:5474:5478	1289534	11	True				
ANR	1290122	Statement	(	187:73:5479:5479	1289534	12	True				
ANR	1290123	Statement	)	187:74:5480:5480	1289534	13	True				
ANR	1290124	Statement	)	187:75:5481:5481	1289534	14	True				
ANR	1290125	ExpressionStatement		187:76:5482:5482	1289534	15	True				
ANR	1290126	ExpressionStatement	free ( Mailer )	191:1:5560:5572	1289534	33	True				
ANR	1290127	CallExpression	free ( Mailer )		1289534	0					
ANR	1290128	Callee	free		1289534	0					
ANR	1290129	Identifier	free		1289534	0					
ANR	1290130	ArgumentList	Mailer		1289534	1					
ANR	1290131	Argument	Mailer		1289534	0					
ANR	1290132	Identifier	Mailer		1289534	0					
ANR	1290133	ExpressionStatement	free ( FinalSubject )	192:1:5575:5593	1289534	34	True				
ANR	1290134	CallExpression	free ( FinalSubject )		1289534	0					
ANR	1290135	Callee	free		1289534	0					
ANR	1290136	Identifier	free		1289534	0					
ANR	1290137	ArgumentList	FinalSubject		1289534	1					
ANR	1290138	Argument	FinalSubject		1289534	0					
ANR	1290139	Identifier	FinalSubject		1289534	0					
ANR	1290140	IfStatement	if ( FromAddress )		1289534	35					
ANR	1290141	Condition	FromAddress	193:5:5600:5610	1289534	0	True				
ANR	1290142	Identifier	FromAddress		1289534	0					
ANR	1290143	ExpressionStatement	free ( FromAddress )	193:18:5613:5630	1289534	1	True				
ANR	1290144	CallExpression	free ( FromAddress )		1289534	0					
ANR	1290145	Callee	free		1289534	0					
ANR	1290146	Identifier	free		1289534	0					
ANR	1290147	ArgumentList	FromAddress		1289534	1					
ANR	1290148	Argument	FromAddress		1289534	0					
ANR	1290149	Identifier	FromAddress		1289534	0					
ANR	1290150	IfStatement	if ( SmtpServer )		1289534	36					
ANR	1290151	Condition	SmtpServer	194:5:5637:5646	1289534	0	True				
ANR	1290152	Identifier	SmtpServer		1289534	0					
ANR	1290153	ExpressionStatement	free ( SmtpServer )	194:17:5649:5665	1289534	1	True				
ANR	1290154	CallExpression	free ( SmtpServer )		1289534	0					
ANR	1290155	Callee	free		1289534	0					
ANR	1290156	Identifier	free		1289534	0					
ANR	1290157	ArgumentList	SmtpServer		1289534	1					
ANR	1290158	Argument	SmtpServer		1289534	0					
ANR	1290159	Identifier	SmtpServer		1289534	0					
ANR	1290160	ExpressionStatement	free ( FinalAddr )	195:1:5668:5683	1289534	37	True				
ANR	1290161	CallExpression	free ( FinalAddr )		1289534	0					
ANR	1290162	Callee	free		1289534	0					
ANR	1290163	Identifier	free		1289534	0					
ANR	1290164	ArgumentList	FinalAddr		1289534	1					
ANR	1290165	Argument	FinalAddr		1289534	0					
ANR	1290166	Identifier	FinalAddr		1289534	0					
ANR	1290167	ExpressionStatement	free ( final_args )	196:1:5686:5702	1289534	38	True				
ANR	1290168	CallExpression	free ( final_args )		1289534	0					
ANR	1290169	Callee	free		1289534	0					
ANR	1290170	Identifier	free		1289534	0					
ANR	1290171	ArgumentList	final_args		1289534	1					
ANR	1290172	Argument	final_args		1289534	0					
ANR	1290173	Identifier	final_args		1289534	0					
ANR	1290174	ReturnStatement	return mailerstream ;	198:1:5706:5725	1289534	39	True				
ANR	1290175	Identifier	mailerstream		1289534	0					
ANR	1290176	ReturnType	FILE *		1289534	1					
ANR	1290177	Identifier	email_open		1289534	2					
ANR	1290178	ParameterList	"const char * email_addr , const char * subject"		1289534	3					
ANR	1290179	Parameter	const char * email_addr	53:12:1559:1580	1289534	0	True				
ANR	1290180	ParameterType	const char *		1289534	0					
ANR	1290181	Identifier	email_addr		1289534	1					
ANR	1290182	Parameter	const char * subject	53:36:1583:1601	1289534	1	True				
ANR	1290183	ParameterType	const char *		1289534	0					
ANR	1290184	Identifier	subject		1289534	1					
ANR	1290185	CFGEntryNode	ENTRY		1289534		True				
ANR	1290186	CFGExitNode	EXIT		1289534		True				
ANR	1290187	InfiniteForNode	true		1289534		True				
ANR	1290188	Symbol	final_args		1289534						
ANR	1290189	Symbol	arg_index		1289534						
ANR	1290190	Symbol	SmtpServer		1289534						
ANR	1290191	Symbol	subject		1289534						
ANR	1290192	Symbol	* subject_length		1289534						
ANR	1290193	Symbol	FinalSubject		1289534						
ANR	1290194	Symbol	strlen		1289534						
ANR	1290195	Symbol	FromAddress		1289534						
ANR	1290196	Symbol	* arg_index		1289534						
ANR	1290197	Symbol	param		1289534						
ANR	1290198	Symbol	num_addresses		1289534						
ANR	1290199	Symbol	token_boundary		1289534						
ANR	1290200	Symbol	mailerstream		1289534						
ANR	1290201	Symbol	malloc		1289534						
ANR	1290202	Symbol	temp		1289534						
ANR	1290203	Symbol	NULL		1289534						
ANR	1290204	Symbol	email_addr		1289534						
ANR	1290205	Symbol	Mailer		1289534						
ANR	1290206	Symbol	TRUE		1289534						
ANR	1290207	Symbol	D_FULLDEBUG		1289534						
ANR	1290208	Symbol	* FinalSubject		1289534						
ANR	1290209	Symbol	* temp		1289534						
ANR	1290210	Symbol	FinalAddr		1289534						
ANR	1290211	Symbol	subject_length		1289534						
ANR	1290212	Symbol	EMAIL_SUBJECT_PROLOG		1289534						
ANR	1290213	Symbol	* prolog_length		1289534						
ANR	1290214	Symbol	prolog_length		1289534						
ANR	1290215	Symbol	FALSE		1289534						
ANR	1290216	Symbol	strdup		1289534						
ANR	1290217	Symbol	* final_args		1289534						
ANR	1290218	Symbol	email_open_implementation		1289534						
ANR	1290219	Function	email_open_implementation	202:0:5743:6518							
ANR	1290220	FunctionDef	"email_open_implementation (char * Mailer , const char * final_args [ ])"		1290219	0					
ANR	1290221	CompoundStatement		204:0:5817:6518	1290219	0					
ANR	1290222	IdentifierDeclStatement	priv_state priv ;	205:1:5820:5835	1290219	0	True				
ANR	1290223	IdentifierDecl	priv		1290219	0					
ANR	1290224	IdentifierDeclType	priv_state		1290219	0					
ANR	1290225	Identifier	priv		1290219	1					
ANR	1290226	IdentifierDeclStatement	int prev_umask ;	206:1:5838:5852	1290219	1	True				
ANR	1290227	IdentifierDecl	prev_umask		1290219	0					
ANR	1290228	IdentifierDeclType	int		1290219	0					
ANR	1290229	Identifier	prev_umask		1290219	1					
ANR	1290230	IdentifierDeclStatement	FILE * mailerstream ;	207:1:5855:5873	1290219	2	True				
ANR	1290231	IdentifierDecl	* mailerstream		1290219	0					
ANR	1290232	IdentifierDeclType	FILE *		1290219	0					
ANR	1290233	Identifier	mailerstream		1290219	1					
ANR	1290234	ExpressionStatement	priv = set_condor_priv ( )	210:1:5934:5958	1290219	3	True				
ANR	1290235	AssignmentExpression	priv = set_condor_priv ( )		1290219	0		=			
ANR	1290236	Identifier	priv		1290219	0					
ANR	1290237	CallExpression	set_condor_priv ( )		1290219	1					
ANR	1290238	Callee	set_condor_priv		1290219	0					
ANR	1290239	Identifier	set_condor_priv		1290219	0					
ANR	1290240	ArgumentList			1290219	1					
ANR	1290241	ExpressionStatement	prev_umask = umask ( 022 )	216:1:6232:6255	1290219	4	True				
ANR	1290242	AssignmentExpression	prev_umask = umask ( 022 )		1290219	0		=			
ANR	1290243	Identifier	prev_umask		1290219	0					
ANR	1290244	CallExpression	umask ( 022 )		1290219	1					
ANR	1290245	Callee	umask		1290219	0					
ANR	1290246	Identifier	umask		1290219	0					
ANR	1290247	ArgumentList	022		1290219	1					
ANR	1290248	Argument	022		1290219	0					
ANR	1290249	PrimaryExpression	022		1290219	0					
ANR	1290250	ExpressionStatement	"mailerstream = my_popenv ( final_args , EMAIL_POPEN_FLAGS , FALSE )"	217:1:6258:6318	1290219	5	True				
ANR	1290251	AssignmentExpression	"mailerstream = my_popenv ( final_args , EMAIL_POPEN_FLAGS , FALSE )"		1290219	0		=			
ANR	1290252	Identifier	mailerstream		1290219	0					
ANR	1290253	CallExpression	"my_popenv ( final_args , EMAIL_POPEN_FLAGS , FALSE )"		1290219	1					
ANR	1290254	Callee	my_popenv		1290219	0					
ANR	1290255	Identifier	my_popenv		1290219	0					
ANR	1290256	ArgumentList	final_args		1290219	1					
ANR	1290257	Argument	final_args		1290219	0					
ANR	1290258	Identifier	final_args		1290219	0					
ANR	1290259	Argument	EMAIL_POPEN_FLAGS		1290219	1					
ANR	1290260	Identifier	EMAIL_POPEN_FLAGS		1290219	0					
ANR	1290261	Argument	FALSE		1290219	2					
ANR	1290262	Identifier	FALSE		1290219	0					
ANR	1290263	ExpressionStatement	umask ( prev_umask )	218:1:6321:6338	1290219	6	True				
ANR	1290264	CallExpression	umask ( prev_umask )		1290219	0					
ANR	1290265	Callee	umask		1290219	0					
ANR	1290266	Identifier	umask		1290219	0					
ANR	1290267	ArgumentList	prev_umask		1290219	1					
ANR	1290268	Argument	prev_umask		1290219	0					
ANR	1290269	Identifier	prev_umask		1290219	0					
ANR	1290270	ExpressionStatement	set_priv ( priv )	221:1:6369:6383	1290219	7	True				
ANR	1290271	CallExpression	set_priv ( priv )		1290219	0					
ANR	1290272	Callee	set_priv		1290219	0					
ANR	1290273	Identifier	set_priv		1290219	0					
ANR	1290274	ArgumentList	priv		1290219	1					
ANR	1290275	Argument	priv		1290219	0					
ANR	1290276	Identifier	priv		1290219	0					
ANR	1290277	IfStatement	if ( mailerstream == NULL )		1290219	8					
ANR	1290278	Condition	mailerstream == NULL	223:6:6392:6411	1290219	0	True				
ANR	1290279	EqualityExpression	mailerstream == NULL		1290219	0		==			
ANR	1290280	Identifier	mailerstream		1290219	0					
ANR	1290281	Identifier	NULL		1290219	1					
ANR	1290282	CompoundStatement		20:29:597:597	1290219	1					
ANR	1290283	ExpressionStatement	"dprintf ( D_ALWAYS , ""Failed to access email program \\""%s\\""\\n"" , Mailer )"	224:2:6420:6490	1290219	0	True				
ANR	1290284	CallExpression	"dprintf ( D_ALWAYS , ""Failed to access email program \\""%s\\""\\n"" , Mailer )"		1290219	0					
ANR	1290285	Callee	dprintf		1290219	0					
ANR	1290286	Identifier	dprintf		1290219	0					
ANR	1290287	ArgumentList	D_ALWAYS		1290219	1					
ANR	1290288	Argument	D_ALWAYS		1290219	0					
ANR	1290289	Identifier	D_ALWAYS		1290219	0					
ANR	1290290	Argument	"""Failed to access email program \\""%s\\""\\n"""		1290219	1					
ANR	1290291	PrimaryExpression	"""Failed to access email program \\""%s\\""\\n"""		1290219	0					
ANR	1290292	Argument	Mailer		1290219	2					
ANR	1290293	Identifier	Mailer		1290219	0					
ANR	1290294	ReturnStatement	return mailerstream ;	228:1:6497:6516	1290219	9	True				
ANR	1290295	Identifier	mailerstream		1290219	0					
ANR	1290296	ReturnType	FILE *		1290219	1					
ANR	1290297	Identifier	email_open_implementation		1290219	2					
ANR	1290298	ParameterList	"char * Mailer , const char * final_args [ ]"		1290219	3					
ANR	1290299	Parameter	char * Mailer	203:26:5776:5787	1290219	0	True				
ANR	1290300	ParameterType	char *		1290219	0					
ANR	1290301	Identifier	Mailer		1290219	1					
ANR	1290302	Parameter	const char * final_args [ ]	203:40:5790:5814	1290219	1	True				
ANR	1290303	ParameterType	const char * [ ]		1290219	0					
ANR	1290304	Identifier	final_args		1290219	1					
ANR	1290305	CFGEntryNode	ENTRY		1290219		True				
ANR	1290306	CFGExitNode	EXIT		1290219		True				
ANR	1290307	Symbol	final_args		1290219						
ANR	1290308	Symbol	set_condor_priv		1290219						
ANR	1290309	Symbol	umask		1290219						
ANR	1290310	Symbol	NULL		1290219						
ANR	1290311	Symbol	prev_umask		1290219						
ANR	1290312	Symbol	D_ALWAYS		1290219						
ANR	1290313	Symbol	Mailer		1290219						
ANR	1290314	Symbol	FALSE		1290219						
ANR	1290315	Symbol	EMAIL_POPEN_FLAGS		1290219						
ANR	1290316	Symbol	priv		1290219						
ANR	1290317	Symbol	mailerstream		1290219						
ANR	1290318	Symbol	my_popenv		1290219						
ANR	1290319	Function	email_open_implementation	233:0:6539:10893							
ANR	1290320	FunctionDef	email_open_implementation (const char * final_args [ ])		1290319	0					
ANR	1290321	CompoundStatement		235:0:6600:10893	1290319	0					
ANR	1290322	IdentifierDeclStatement	FILE * mailerstream ;	237:1:6604:6622	1290319	0	True				
ANR	1290323	IdentifierDecl	* mailerstream		1290319	0					
ANR	1290324	IdentifierDeclType	FILE *		1290319	0					
ANR	1290325	Identifier	mailerstream		1290319	1					
ANR	1290326	IdentifierDeclStatement	pid_t pid ;	238:1:6625:6634	1290319	1	True				
ANR	1290327	IdentifierDecl	pid		1290319	0					
ANR	1290328	IdentifierDeclType	pid_t		1290319	0					
ANR	1290329	Identifier	pid		1290319	1					
ANR	1290330	IdentifierDeclStatement	int pipefds [ 2 ] ;	239:1:6637:6651	1290319	2	True				
ANR	1290331	IdentifierDecl	pipefds [ 2 ]		1290319	0					
ANR	1290332	IdentifierDeclType	int [ 2 ]		1290319	0					
ANR	1290333	Identifier	pipefds		1290319	1					
ANR	1290334	PrimaryExpression	2		1290319	2					
ANR	1290335	IdentifierDeclStatement	param_functions * p_funcs = NULL ;	240:1:6654:6685	1290319	3	True				
ANR	1290336	IdentifierDecl	* p_funcs = NULL		1290319	0					
ANR	1290337	IdentifierDeclType	param_functions *		1290319	0					
ANR	1290338	Identifier	p_funcs		1290319	1					
ANR	1290339	AssignmentExpression	* p_funcs = NULL		1290319	2		=			
ANR	1290340	Identifier	NULL		1290319	0					
ANR	1290341	Identifier	NULL		1290319	1					
ANR	1290342	IfStatement	if ( pipe ( pipefds ) < 0 )		1290319	4					
ANR	1290343	Condition	pipe ( pipefds ) < 0	256:5:7287:7303	1290319	0	True				
ANR	1290344	RelationalExpression	pipe ( pipefds ) < 0		1290319	0		<			
ANR	1290345	CallExpression	pipe ( pipefds )		1290319	0					
ANR	1290346	Callee	pipe		1290319	0					
ANR	1290347	Identifier	pipe		1290319	0					
ANR	1290348	ArgumentList	pipefds		1290319	1					
ANR	1290349	Argument	pipefds		1290319	0					
ANR	1290350	Identifier	pipefds		1290319	0					
ANR	1290351	PrimaryExpression	0		1290319	1					
ANR	1290352	CompoundStatement		23:1:706:706	1290319	1					
ANR	1290353	ExpressionStatement	"dprintf ( D_ALWAYS , ""Could not open email pipe!\\n"" )"	258:2:7311:7360	1290319	0	True				
ANR	1290354	CallExpression	"dprintf ( D_ALWAYS , ""Could not open email pipe!\\n"" )"		1290319	0					
ANR	1290355	Callee	dprintf		1290319	0					
ANR	1290356	Identifier	dprintf		1290319	0					
ANR	1290357	ArgumentList	D_ALWAYS		1290319	1					
ANR	1290358	Argument	D_ALWAYS		1290319	0					
ANR	1290359	Identifier	D_ALWAYS		1290319	0					
ANR	1290360	Argument	"""Could not open email pipe!\\n"""		1290319	1					
ANR	1290361	PrimaryExpression	"""Could not open email pipe!\\n"""		1290319	0					
ANR	1290362	ReturnStatement	return NULL ;	259:2:7364:7375	1290319	1	True				
ANR	1290363	Identifier	NULL		1290319	0					
ANR	1290364	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Forking Mailer process...\\n"" )"	262:1:7382:7433	1290319	5	True				
ANR	1290365	CallExpression	"dprintf ( D_FULLDEBUG , ""Forking Mailer process...\\n"" )"		1290319	0					
ANR	1290366	Callee	dprintf		1290319	0					
ANR	1290367	Identifier	dprintf		1290319	0					
ANR	1290368	ArgumentList	D_FULLDEBUG		1290319	1					
ANR	1290369	Argument	D_FULLDEBUG		1290319	0					
ANR	1290370	Identifier	D_FULLDEBUG		1290319	0					
ANR	1290371	Argument	"""Forking Mailer process...\\n"""		1290319	1					
ANR	1290372	PrimaryExpression	"""Forking Mailer process...\\n"""		1290319	0					
ANR	1290373	IfStatement	if ( ( pid = fork ( ) ) < 0 )		1290319	6					
ANR	1290374	Condition	( pid = fork ( ) ) < 0	263:5:7440:7457	1290319	0	True				
ANR	1290375	RelationalExpression	( pid = fork ( ) ) < 0		1290319	0		<			
ANR	1290376	AssignmentExpression	pid = fork ( )		1290319	0		=			
ANR	1290377	Identifier	pid		1290319	0					
ANR	1290378	CallExpression	fork ( )		1290319	1					
ANR	1290379	Callee	fork		1290319	0					
ANR	1290380	Identifier	fork		1290319	0					
ANR	1290381	ArgumentList			1290319	1					
ANR	1290382	PrimaryExpression	0		1290319	1					
ANR	1290383	CompoundStatement		30:1:860:860	1290319	1					
ANR	1290384	ExpressionStatement	"dprintf ( D_ALWAYS , ""Could not fork email process!\\n"" )"	265:2:7465:7517	1290319	0	True				
ANR	1290385	CallExpression	"dprintf ( D_ALWAYS , ""Could not fork email process!\\n"" )"		1290319	0					
ANR	1290386	Callee	dprintf		1290319	0					
ANR	1290387	Identifier	dprintf		1290319	0					
ANR	1290388	ArgumentList	D_ALWAYS		1290319	1					
ANR	1290389	Argument	D_ALWAYS		1290319	0					
ANR	1290390	Identifier	D_ALWAYS		1290319	0					
ANR	1290391	Argument	"""Could not fork email process!\\n"""		1290319	1					
ANR	1290392	PrimaryExpression	"""Could not fork email process!\\n"""		1290319	0					
ANR	1290393	ReturnStatement	return NULL ;	266:2:7521:7532	1290319	1	True				
ANR	1290394	Identifier	NULL		1290319	0					
ANR	1290395	ElseStatement	else		1290319	0					
ANR	1290396	IfStatement	if ( pid > 0 )		1290319	0					
ANR	1290397	Condition	pid > 0	268:10:7547:7553	1290319	0	True				
ANR	1290398	RelationalExpression	pid > 0		1290319	0		>			
ANR	1290399	Identifier	pid		1290319	0					
ANR	1290400	PrimaryExpression	0		1290319	1					
ANR	1290401	CompoundStatement		35:1:969:969	1290319	1					
ANR	1290402	ExpressionStatement	close ( pipefds [ 0 ] )	273:2:7668:7685	1290319	0	True				
ANR	1290403	CallExpression	close ( pipefds [ 0 ] )		1290319	0					
ANR	1290404	Callee	close		1290319	0					
ANR	1290405	Identifier	close		1290319	0					
ANR	1290406	ArgumentList	pipefds [ 0 ]		1290319	1					
ANR	1290407	Argument	pipefds [ 0 ]		1290319	0					
ANR	1290408	ArrayIndexing	pipefds [ 0 ]		1290319	0					
ANR	1290409	Identifier	pipefds		1290319	0					
ANR	1290410	PrimaryExpression	0		1290319	1					
ANR	1290411	ExpressionStatement	"mailerstream = fdopen ( pipefds [ 1 ] , EMAIL_POPEN_FLAGS )"	275:2:7690:7742	1290319	1	True				
ANR	1290412	AssignmentExpression	"mailerstream = fdopen ( pipefds [ 1 ] , EMAIL_POPEN_FLAGS )"		1290319	0		=			
ANR	1290413	Identifier	mailerstream		1290319	0					
ANR	1290414	CallExpression	"fdopen ( pipefds [ 1 ] , EMAIL_POPEN_FLAGS )"		1290319	1					
ANR	1290415	Callee	fdopen		1290319	0					
ANR	1290416	Identifier	fdopen		1290319	0					
ANR	1290417	ArgumentList	pipefds [ 1 ]		1290319	1					
ANR	1290418	Argument	pipefds [ 1 ]		1290319	0					
ANR	1290419	ArrayIndexing	pipefds [ 1 ]		1290319	0					
ANR	1290420	Identifier	pipefds		1290319	0					
ANR	1290421	PrimaryExpression	1		1290319	1					
ANR	1290422	Argument	EMAIL_POPEN_FLAGS		1290319	1					
ANR	1290423	Identifier	EMAIL_POPEN_FLAGS		1290319	0					
ANR	1290424	IfStatement	if ( mailerstream == NULL )		1290319	2					
ANR	1290425	Condition	mailerstream == NULL	276:6:7750:7769	1290319	0	True				
ANR	1290426	EqualityExpression	mailerstream == NULL		1290319	0		==			
ANR	1290427	Identifier	mailerstream		1290319	0					
ANR	1290428	Identifier	NULL		1290319	1					
ANR	1290429	CompoundStatement		43:2:1173:1173	1290319	1					
ANR	1290430	ExpressionStatement	"dprintf ( D_ALWAYS , ""Could not open email FILE*: %s\\n"" , strerror ( errno ) )"	278:3:7779:7854	1290319	0	True				
ANR	1290431	CallExpression	"dprintf ( D_ALWAYS , ""Could not open email FILE*: %s\\n"" , strerror ( errno ) )"		1290319	0					
ANR	1290432	Callee	dprintf		1290319	0					
ANR	1290433	Identifier	dprintf		1290319	0					
ANR	1290434	ArgumentList	D_ALWAYS		1290319	1					
ANR	1290435	Argument	D_ALWAYS		1290319	0					
ANR	1290436	Identifier	D_ALWAYS		1290319	0					
ANR	1290437	Argument	"""Could not open email FILE*: %s\\n"""		1290319	1					
ANR	1290438	PrimaryExpression	"""Could not open email FILE*: %s\\n"""		1290319	0					
ANR	1290439	Argument	strerror ( errno )		1290319	2					
ANR	1290440	CallExpression	strerror ( errno )		1290319	0					
ANR	1290441	Callee	strerror		1290319	0					
ANR	1290442	Identifier	strerror		1290319	0					
ANR	1290443	ArgumentList	errno		1290319	1					
ANR	1290444	Argument	errno		1290319	0					
ANR	1290445	Identifier	errno		1290319	0					
ANR	1290446	ReturnStatement	return NULL ;	280:3:7859:7870	1290319	1	True				
ANR	1290447	Identifier	NULL		1290319	0					
ANR	1290448	ReturnStatement	return mailerstream ;	282:2:7878:7897	1290319	3	True				
ANR	1290449	Identifier	mailerstream		1290319	0					
ANR	1290450	ElseStatement	else		1290319	0					
ANR	1290451	CompoundStatement		55:2:1463:1468	1290319	0					
ANR	1290452	Statement	static	286:2:7940:7945	1290319	0	True				
ANR	1290453	IdentifierDeclStatement	char pe_logname [ 256 ] ;	286:9:7947:7967	1290319	1	True				
ANR	1290454	IdentifierDecl	pe_logname [ 256 ]		1290319	0					
ANR	1290455	IdentifierDeclType	char [ 256 ]		1290319	0					
ANR	1290456	Identifier	pe_logname		1290319	1					
ANR	1290457	PrimaryExpression	256		1290319	2					
ANR	1290458	Statement	static	287:2:8009:8014	1290319	2	True				
ANR	1290459	IdentifierDeclStatement	char pe_user [ 256 ] ;	287:9:8016:8033	1290319	3	True				
ANR	1290460	IdentifierDecl	pe_user [ 256 ]		1290319	0					
ANR	1290461	IdentifierDeclType	char [ 256 ]		1290319	0					
ANR	1290462	Identifier	pe_user		1290319	1					
ANR	1290463	PrimaryExpression	256		1290319	2					
ANR	1290464	IdentifierDeclStatement	const char * condor_name ;	288:2:8037:8060	1290319	4	True				
ANR	1290465	IdentifierDecl	* condor_name		1290319	0					
ANR	1290466	IdentifierDeclType	const char *		1290319	0					
ANR	1290467	Identifier	condor_name		1290319	1					
ANR	1290468	IdentifierDeclStatement	int i ;	289:2:8064:8069	1290319	5	True				
ANR	1290469	IdentifierDecl	i		1290319	0					
ANR	1290470	IdentifierDeclType	int		1290319	0					
ANR	1290471	Identifier	i		1290319	1					
ANR	1290472	ExpressionStatement	_EXCEPT_Cleanup = NULL	294:2:8282:8304	1290319	6	True				
ANR	1290473	AssignmentExpression	_EXCEPT_Cleanup = NULL		1290319	0		=			
ANR	1290474	Identifier	_EXCEPT_Cleanup		1290319	0					
ANR	1290475	Identifier	NULL		1290319	1					
ANR	1290476	ExpressionStatement	Termlog = 1	306:2:8774:8785	1290319	7	True				
ANR	1290477	AssignmentExpression	Termlog = 1		1290319	0		=			
ANR	1290478	Identifier	Termlog		1290319	0					
ANR	1290479	PrimaryExpression	1		1290319	1					
ANR	1290480	ExpressionStatement	p_funcs = get_param_functions ( )	307:2:8789:8820	1290319	8	True				
ANR	1290481	AssignmentExpression	p_funcs = get_param_functions ( )		1290319	0		=			
ANR	1290482	Identifier	p_funcs		1290319	0					
ANR	1290483	CallExpression	get_param_functions ( )		1290319	1					
ANR	1290484	Callee	get_param_functions		1290319	0					
ANR	1290485	Identifier	get_param_functions		1290319	0					
ANR	1290486	ArgumentList			1290319	1					
ANR	1290487	ExpressionStatement	"dprintf_config ( get_mySubSystemName ( ) , p_funcs )"	308:2:8824:8870	1290319	9	True				
ANR	1290488	CallExpression	"dprintf_config ( get_mySubSystemName ( ) , p_funcs )"		1290319	0					
ANR	1290489	Callee	dprintf_config		1290319	0					
ANR	1290490	Identifier	dprintf_config		1290319	0					
ANR	1290491	ArgumentList	get_mySubSystemName ( )		1290319	1					
ANR	1290492	Argument	get_mySubSystemName ( )		1290319	0					
ANR	1290493	CallExpression	get_mySubSystemName ( )		1290319	0					
ANR	1290494	Callee	get_mySubSystemName		1290319	0					
ANR	1290495	Identifier	get_mySubSystemName		1290319	0					
ANR	1290496	ArgumentList			1290319	1					
ANR	1290497	Argument	p_funcs		1290319	1					
ANR	1290498	Identifier	p_funcs		1290319	0					
ANR	1290499	ExpressionStatement	"chdir ( ""/"" )"	313:2:9073:9083	1290319	10	True				
ANR	1290500	CallExpression	"chdir ( ""/"" )"		1290319	0					
ANR	1290501	Callee	chdir		1290319	0					
ANR	1290502	Identifier	chdir		1290319	0					
ANR	1290503	ArgumentList	"""/"""		1290319	1					
ANR	1290504	Argument	"""/"""		1290319	0					
ANR	1290505	PrimaryExpression	"""/"""		1290319	0					
ANR	1290506	ExpressionStatement	umask ( 0 )	314:2:9087:9095	1290319	11	True				
ANR	1290507	CallExpression	umask ( 0 )		1290319	0					
ANR	1290508	Callee	umask		1290319	0					
ANR	1290509	Identifier	umask		1290319	0					
ANR	1290510	ArgumentList	0		1290319	1					
ANR	1290511	Argument	0		1290319	0					
ANR	1290512	PrimaryExpression	0		1290319	0					
ANR	1290513	ExpressionStatement	set_condor_priv_final ( )	318:2:9220:9243	1290319	12	True				
ANR	1290514	CallExpression	set_condor_priv_final ( )		1290319	0					
ANR	1290515	Callee	set_condor_priv_final		1290319	0					
ANR	1290516	Identifier	set_condor_priv_final		1290319	0					
ANR	1290517	ArgumentList			1290319	1					
ANR	1290518	ExpressionStatement	close ( pipefds [ 1 ] )	321:2:9280:9297	1290319	13	True				
ANR	1290519	CallExpression	close ( pipefds [ 1 ] )		1290319	0					
ANR	1290520	Callee	close		1290319	0					
ANR	1290521	Identifier	close		1290319	0					
ANR	1290522	ArgumentList	pipefds [ 1 ]		1290319	1					
ANR	1290523	Argument	pipefds [ 1 ]		1290319	0					
ANR	1290524	ArrayIndexing	pipefds [ 1 ]		1290319	0					
ANR	1290525	Identifier	pipefds		1290319	0					
ANR	1290526	PrimaryExpression	1		1290319	1					
ANR	1290527	IfStatement	"if ( dup2 ( pipefds [ 0 ] , STDIN_FILENO ) < 0 )"		1290319	14					
ANR	1290528	Condition	"dup2 ( pipefds [ 0 ] , STDIN_FILENO ) < 0"	324:6:9375:9408	1290319	0	True				
ANR	1290529	RelationalExpression	"dup2 ( pipefds [ 0 ] , STDIN_FILENO ) < 0"		1290319	0		<			
ANR	1290530	CallExpression	"dup2 ( pipefds [ 0 ] , STDIN_FILENO )"		1290319	0					
ANR	1290531	Callee	dup2		1290319	0					
ANR	1290532	Identifier	dup2		1290319	0					
ANR	1290533	ArgumentList	pipefds [ 0 ]		1290319	1					
ANR	1290534	Argument	pipefds [ 0 ]		1290319	0					
ANR	1290535	ArrayIndexing	pipefds [ 0 ]		1290319	0					
ANR	1290536	Identifier	pipefds		1290319	0					
ANR	1290537	PrimaryExpression	0		1290319	1					
ANR	1290538	Argument	STDIN_FILENO		1290319	1					
ANR	1290539	Identifier	STDIN_FILENO		1290319	0					
ANR	1290540	PrimaryExpression	0		1290319	1					
ANR	1290541	CompoundStatement		91:2:2812:2812	1290319	1					
ANR	1290542	ExpressionStatement	"EXCEPT ( ""EMAIL PROCESS: Could not connect stdin to child!\\n"" )"	327:3:9470:9530	1290319	0	True				
ANR	1290543	CallExpression	"EXCEPT ( ""EMAIL PROCESS: Could not connect stdin to child!\\n"" )"		1290319	0					
ANR	1290544	Callee	EXCEPT		1290319	0					
ANR	1290545	Identifier	EXCEPT		1290319	0					
ANR	1290546	ArgumentList	"""EMAIL PROCESS: Could not connect stdin to child!\\n"""		1290319	1					
ANR	1290547	Argument	"""EMAIL PROCESS: Could not connect stdin to child!\\n"""		1290319	0					
ANR	1290548	PrimaryExpression	"""EMAIL PROCESS: Could not connect stdin to child!\\n"""		1290319	0					
ANR	1290549	ForStatement	for ( i = 0 ; i < sysconf ( _SC_OPEN_MAX ) ; i ++ )		1290319	15					
ANR	1290550	ForInit	i = 0 ;	332:6:9668:9673	1290319	0	True				
ANR	1290551	AssignmentExpression	i = 0		1290319	0		=			
ANR	1290552	Identifier	i		1290319	0					
ANR	1290553	PrimaryExpression	0		1290319	1					
ANR	1290554	Condition	i < sysconf ( _SC_OPEN_MAX )	332:13:9675:9699	1290319	1	True				
ANR	1290555	RelationalExpression	i < sysconf ( _SC_OPEN_MAX )		1290319	0		<			
ANR	1290556	Identifier	i		1290319	0					
ANR	1290557	CallExpression	sysconf ( _SC_OPEN_MAX )		1290319	1					
ANR	1290558	Callee	sysconf		1290319	0					
ANR	1290559	Identifier	sysconf		1290319	0					
ANR	1290560	ArgumentList	_SC_OPEN_MAX		1290319	1					
ANR	1290561	Argument	_SC_OPEN_MAX		1290319	0					
ANR	1290562	Identifier	_SC_OPEN_MAX		1290319	0					
ANR	1290563	PostIncDecOperationExpression	i ++	332:40:9702:9704	1290319	2	True				
ANR	1290564	Identifier	i		1290319	0					
ANR	1290565	IncDec	++		1290319	1					
ANR	1290566	CompoundStatement		99:2:3108:3108	1290319	3					
ANR	1290567	IfStatement	if ( i != pipefds [ 0 ] && i != STDIN_FILENO )		1290319	0					
ANR	1290568	Condition	i != pipefds [ 0 ] && i != STDIN_FILENO	334:7:9718:9753	1290319	0	True				
ANR	1290569	AndExpression	i != pipefds [ 0 ] && i != STDIN_FILENO		1290319	0		&&			
ANR	1290570	EqualityExpression	i != pipefds [ 0 ]		1290319	0		!=			
ANR	1290571	Identifier	i		1290319	0					
ANR	1290572	ArrayIndexing	pipefds [ 0 ]		1290319	1					
ANR	1290573	Identifier	pipefds		1290319	0					
ANR	1290574	PrimaryExpression	0		1290319	1					
ANR	1290575	EqualityExpression	i != STDIN_FILENO		1290319	1		!=			
ANR	1290576	Identifier	i		1290319	0					
ANR	1290577	Identifier	STDIN_FILENO		1290319	1					
ANR	1290578	CompoundStatement		101:3:3158:3158	1290319	1					
ANR	1290579	ExpressionStatement	( void ) close ( i )	336:4:9765:9779	1290319	0	True				
ANR	1290580	CastExpression	( void ) close ( i )		1290319	0					
ANR	1290581	CastTarget	void		1290319	0					
ANR	1290582	CallExpression	close ( i )		1290319	1					
ANR	1290583	Callee	close		1290319	0					
ANR	1290584	Identifier	close		1290319	0					
ANR	1290585	ArgumentList	i		1290319	1					
ANR	1290586	Argument	i		1290319	0					
ANR	1290587	Identifier	i		1290319	0					
ANR	1290588	ExpressionStatement	condor_name = get_condor_username ( )	342:2:9881:9916	1290319	16	True				
ANR	1290589	AssignmentExpression	condor_name = get_condor_username ( )		1290319	0		=			
ANR	1290590	Identifier	condor_name		1290319	0					
ANR	1290591	CallExpression	get_condor_username ( )		1290319	1					
ANR	1290592	Callee	get_condor_username		1290319	0					
ANR	1290593	Identifier	get_condor_username		1290319	0					
ANR	1290594	ArgumentList			1290319	1					
ANR	1290595	ExpressionStatement	"sprintf ( pe_logname , ""LOGNAME=%s"" , condor_name )"	345:2:9989:10034	1290319	17	True				
ANR	1290596	CallExpression	"sprintf ( pe_logname , ""LOGNAME=%s"" , condor_name )"		1290319	0					
ANR	1290597	Callee	sprintf		1290319	0					
ANR	1290598	Identifier	sprintf		1290319	0					
ANR	1290599	ArgumentList	pe_logname		1290319	1					
ANR	1290600	Argument	pe_logname		1290319	0					
ANR	1290601	Identifier	pe_logname		1290319	0					
ANR	1290602	Argument	"""LOGNAME=%s"""		1290319	1					
ANR	1290603	PrimaryExpression	"""LOGNAME=%s"""		1290319	0					
ANR	1290604	Argument	condor_name		1290319	2					
ANR	1290605	Identifier	condor_name		1290319	0					
ANR	1290606	IfStatement	if ( putenv ( pe_logname ) != 0 )		1290319	18					
ANR	1290607	Condition	putenv ( pe_logname ) != 0	346:6:10042:10064	1290319	0	True				
ANR	1290608	EqualityExpression	putenv ( pe_logname ) != 0		1290319	0		!=			
ANR	1290609	CallExpression	putenv ( pe_logname )		1290319	0					
ANR	1290610	Callee	putenv		1290319	0					
ANR	1290611	Identifier	putenv		1290319	0					
ANR	1290612	ArgumentList	pe_logname		1290319	1					
ANR	1290613	Argument	pe_logname		1290319	0					
ANR	1290614	Identifier	pe_logname		1290319	0					
ANR	1290615	PrimaryExpression	0		1290319	1					
ANR	1290616	CompoundStatement		113:2:3468:3468	1290319	1					
ANR	1290617	Statement	EXCEPT	348:3:10074:10079	1290319	0	True				
ANR	1290618	Statement	(	348:9:10080:10080	1290319	1	True				
ANR	1290619	Statement	"""EMAIL PROCESS: Unable to insert LOGNAME=%s into """	348:10:10081:10130	1290319	2	True				
ANR	1290620	Statement	""" environment correctly: %s\\n"""	349:4:10136:10165	1290319	3	True				
ANR	1290621	Statement	","	349:34:10166:10166	1290319	4	True				
ANR	1290622	Statement	pe_logname	349:36:10168:10177	1290319	5	True				
ANR	1290623	Statement	","	349:46:10178:10178	1290319	6	True				
ANR	1290624	Statement	strerror	349:48:10180:10187	1290319	7	True				
ANR	1290625	Statement	(	349:56:10188:10188	1290319	8	True				
ANR	1290626	Statement	errno	349:57:10189:10193	1290319	9	True				
ANR	1290627	Statement	)	349:62:10194:10194	1290319	10	True				
ANR	1290628	Statement	)	349:63:10195:10195	1290319	11	True				
ANR	1290629	ExpressionStatement		349:64:10196:10196	1290319	12	True				
ANR	1290630	ExpressionStatement	"sprintf ( pe_user , ""USER=%s"" , condor_name )"	353:2:10273:10312	1290319	19	True				
ANR	1290631	CallExpression	"sprintf ( pe_user , ""USER=%s"" , condor_name )"		1290319	0					
ANR	1290632	Callee	sprintf		1290319	0					
ANR	1290633	Identifier	sprintf		1290319	0					
ANR	1290634	ArgumentList	pe_user		1290319	1					
ANR	1290635	Argument	pe_user		1290319	0					
ANR	1290636	Identifier	pe_user		1290319	0					
ANR	1290637	Argument	"""USER=%s"""		1290319	1					
ANR	1290638	PrimaryExpression	"""USER=%s"""		1290319	0					
ANR	1290639	Argument	condor_name		1290319	2					
ANR	1290640	Identifier	condor_name		1290319	0					
ANR	1290641	IfStatement	if ( putenv ( pe_user ) != 0 )		1290319	20					
ANR	1290642	Condition	putenv ( pe_user ) != 0	354:6:10320:10339	1290319	0	True				
ANR	1290643	EqualityExpression	putenv ( pe_user ) != 0		1290319	0		!=			
ANR	1290644	CallExpression	putenv ( pe_user )		1290319	0					
ANR	1290645	Callee	putenv		1290319	0					
ANR	1290646	Identifier	putenv		1290319	0					
ANR	1290647	ArgumentList	pe_user		1290319	1					
ANR	1290648	Argument	pe_user		1290319	0					
ANR	1290649	Identifier	pe_user		1290319	0					
ANR	1290650	PrimaryExpression	0		1290319	1					
ANR	1290651	CompoundStatement		121:2:3743:3743	1290319	1					
ANR	1290652	Statement	EXCEPT	357:3:10401:10406	1290319	0	True				
ANR	1290653	Statement	(	357:9:10407:10407	1290319	1	True				
ANR	1290654	Statement	"""EMAIL PROCESS: Unable to insert USER=%s into """	357:10:10408:10454	1290319	2	True				
ANR	1290655	Statement	""" environment correctly: %s\\n"""	358:4:10460:10489	1290319	3	True				
ANR	1290656	Statement	","	358:34:10490:10490	1290319	4	True				
ANR	1290657	Statement	pe_user	358:36:10492:10498	1290319	5	True				
ANR	1290658	Statement	","	358:43:10499:10499	1290319	6	True				
ANR	1290659	Statement	strerror	358:45:10501:10508	1290319	7	True				
ANR	1290660	Statement	(	358:53:10509:10509	1290319	8	True				
ANR	1290661	Statement	errno	358:54:10510:10514	1290319	9	True				
ANR	1290662	Statement	)	358:59:10515:10515	1290319	10	True				
ANR	1290663	Statement	)	358:60:10516:10516	1290319	11	True				
ANR	1290664	ExpressionStatement		358:61:10517:10517	1290319	12	True				
ANR	1290665	Statement	execvp	362:2:10552:10557	1290319	21	True				
ANR	1290666	Statement	(	362:8:10558:10558	1290319	22	True				
ANR	1290667	Statement	final_args	362:9:10559:10568	1290319	23	True				
ANR	1290668	Statement	[	362:19:10569:10569	1290319	24	True				
ANR	1290669	Statement	0	362:20:10570:10570	1290319	25	True				
ANR	1290670	Statement	]	362:21:10571:10571	1290319	26	True				
ANR	1290671	Statement	","	362:22:10572:10572	1290319	27	True				
ANR	1290672	Statement	const_cast	362:24:10574:10583	1290319	28	True				
ANR	1290673	Statement	<	362:34:10584:10584	1290319	29	True				
ANR	1290674	Statement	char	362:35:10585:10588	1290319	30	True				
ANR	1290675	Statement	*	362:40:10590:10590	1290319	31	True				
ANR	1290676	Statement	const	362:41:10591:10595	1290319	32	True				
ANR	1290677	Statement	*	362:46:10596:10596	1290319	33	True				
ANR	1290678	Statement	>	362:47:10597:10597	1290319	34	True				
ANR	1290679	Statement	(	362:48:10598:10598	1290319	35	True				
ANR	1290680	Statement	final_args	362:49:10599:10608	1290319	36	True				
ANR	1290681	Statement	)	362:59:10609:10609	1290319	37	True				
ANR	1290682	Statement	)	362:61:10611:10611	1290319	38	True				
ANR	1290683	ExpressionStatement		362:62:10612:10612	1290319	39	True				
ANR	1290684	Statement	EXCEPT	365:2:10668:10673	1290319	40	True				
ANR	1290685	Statement	(	365:8:10674:10674	1290319	41	True				
ANR	1290686	Statement	"""EMAIL PROCESS: Could not exec mailer using '%s' with command """	365:9:10675:10737	1290319	42	True				
ANR	1290687	Statement	"""'%s' because of error: %s."""	366:3:10742:10769	1290319	43	True				
ANR	1290688	Statement	","	366:31:10770:10770	1290319	44	True				
ANR	1290689	Statement	"""/bin/sh"""	366:33:10772:10780	1290319	45	True				
ANR	1290690	Statement	","	366:42:10781:10781	1290319	46	True				
ANR	1290691	Statement	(	367:3:10787:10787	1290319	47	True				
ANR	1290692	Statement	final_args	367:4:10788:10797	1290319	48	True				
ANR	1290693	Statement	[	367:14:10798:10798	1290319	49	True				
ANR	1290694	Statement	0	367:15:10799:10799	1290319	50	True				
ANR	1290695	Statement	]	367:16:10800:10800	1290319	51	True				
ANR	1290696	Statement	==	367:17:10801:10802	1290319	52	True				
ANR	1290697	Statement	NULL	367:19:10803:10806	1290319	53	True				
ANR	1290698	Statement	)	367:23:10807:10807	1290319	54	True				
ANR	1290699	Statement	?	367:24:10808:10808	1290319	55	True				
ANR	1290700	Statement	"""(null)"""	367:25:10809:10816	1290319	56	True				
ANR	1290701	Statement	:	367:33:10817:10817	1290319	57	True				
ANR	1290702	Statement	final_args	367:34:10818:10827	1290319	58	True				
ANR	1290703	Statement	[	367:44:10828:10828	1290319	59	True				
ANR	1290704	Statement	0	367:45:10829:10829	1290319	60	True				
ANR	1290705	Statement	]	367:46:10830:10830	1290319	61	True				
ANR	1290706	Statement	","	367:47:10831:10831	1290319	62	True				
ANR	1290707	Statement	strerror	367:49:10833:10840	1290319	63	True				
ANR	1290708	Statement	(	367:57:10841:10841	1290319	64	True				
ANR	1290709	Statement	errno	367:58:10842:10846	1290319	65	True				
ANR	1290710	Statement	)	367:63:10847:10847	1290319	66	True				
ANR	1290711	Statement	)	367:64:10848:10848	1290319	67	True				
ANR	1290712	ExpressionStatement		367:65:10849:10849	1290319	68	True				
ANR	1290713	ReturnStatement	return NULL ;	371:1:10880:10891	1290319	7	True				
ANR	1290714	Identifier	NULL		1290319	0					
ANR	1290715	ReturnType	FILE *		1290319	1					
ANR	1290716	Identifier	email_open_implementation		1290319	2					
ANR	1290717	ParameterList	const char * final_args [ ]		1290319	3					
ANR	1290718	Parameter	const char * final_args [ ]	234:27:6573:6597	1290319	0	True				
ANR	1290719	ParameterType	const char * [ ]		1290319	0					
ANR	1290720	Identifier	final_args		1290319	1					
ANR	1290721	CFGEntryNode	ENTRY		1290319		True				
ANR	1290722	CFGExitNode	EXIT		1290319		True				
ANR	1290723	Symbol	final_args		1290319						
ANR	1290724	Symbol	pipefds		1290319						
ANR	1290725	Symbol	pid		1290319						
ANR	1290726	Symbol	p_funcs		1290319						
ANR	1290727	Symbol	_SC_OPEN_MAX		1290319						
ANR	1290728	Symbol	fdopen		1290319						
ANR	1290729	Symbol	get_mySubSystemName		1290319						
ANR	1290730	Symbol	pe_user		1290319						
ANR	1290731	Symbol	pipe		1290319						
ANR	1290732	Symbol	EMAIL_POPEN_FLAGS		1290319						
ANR	1290733	Symbol	sysconf		1290319						
ANR	1290734	Symbol	_EXCEPT_Cleanup		1290319						
ANR	1290735	Symbol	mailerstream		1290319						
ANR	1290736	Symbol	pe_logname		1290319						
ANR	1290737	Symbol	errno		1290319						
ANR	1290738	Symbol	NULL		1290319						
ANR	1290739	Symbol	STDIN_FILENO		1290319						
ANR	1290740	Symbol	Termlog		1290319						
ANR	1290741	Symbol	get_param_functions		1290319						
ANR	1290742	Symbol	D_ALWAYS		1290319						
ANR	1290743	Symbol	i		1290319						
ANR	1290744	Symbol	D_FULLDEBUG		1290319						
ANR	1290745	Symbol	strerror		1290319						
ANR	1290746	Symbol	get_condor_username		1290319						
ANR	1290747	Symbol	* pipefds		1290319						
ANR	1290748	Symbol	fork		1290319						
ANR	1290749	Symbol	condor_name		1290319						
ANR	1290750	Symbol	putenv		1290319						
ANR	1290751	Symbol	dup2		1290319						
ANR	1290752	Function	email_admin_open	375:0:10914:10995							
ANR	1290753	FunctionDef	email_admin_open (const char * subject)		1290752	0					
ANR	1290754	CompoundStatement		377:0:10959:10995	1290752	0					
ANR	1290755	ReturnStatement	"return email_open ( NULL , subject ) ;"	378:1:10962:10993	1290752	0	True				
ANR	1290756	CallExpression	"email_open ( NULL , subject )"		1290752	0					
ANR	1290757	Callee	email_open		1290752	0					
ANR	1290758	Identifier	email_open		1290752	0					
ANR	1290759	ArgumentList	NULL		1290752	1					
ANR	1290760	Argument	NULL		1290752	0					
ANR	1290761	Identifier	NULL		1290752	0					
ANR	1290762	Argument	subject		1290752	1					
ANR	1290763	Identifier	subject		1290752	0					
ANR	1290764	ReturnType	FILE *		1290752	1					
ANR	1290765	Identifier	email_admin_open		1290752	2					
ANR	1290766	ParameterList	const char * subject		1290752	3					
ANR	1290767	Parameter	const char * subject	376:17:10938:10956	1290752	0	True				
ANR	1290768	ParameterType	const char *		1290752	0					
ANR	1290769	Identifier	subject		1290752	1					
ANR	1290770	CFGEntryNode	ENTRY		1290752		True				
ANR	1290771	CFGExitNode	EXIT		1290752		True				
ANR	1290772	Symbol	NULL		1290752						
ANR	1290773	Symbol	subject		1290752						
ANR	1290774	Symbol	email_open		1290752						
ANR	1290775	Function	email_developers_open	381:0:10998:11659							
ANR	1290776	FunctionDef	email_developers_open (const char * subject)		1290775	0					
ANR	1290777	CompoundStatement		383:0:11048:11659	1290775	0					
ANR	1290778	IdentifierDeclStatement	char * tmp ;	384:1:11051:11060	1290775	0	True				
ANR	1290779	IdentifierDecl	* tmp		1290775	0					
ANR	1290780	IdentifierDeclType	char *		1290775	0					
ANR	1290781	Identifier	tmp		1290775	1					
ANR	1290782	IdentifierDeclStatement	FILE * mailer ;	385:1:11063:11075	1290775	1	True				
ANR	1290783	IdentifierDecl	* mailer		1290775	0					
ANR	1290784	IdentifierDeclType	FILE *		1290775	0					
ANR	1290785	Identifier	mailer		1290775	1					
ANR	1290786	ExpressionStatement	"tmp = param ( ""CONDOR_DEVELOPERS"" )"	392:4:11239:11272	1290775	2	True				
ANR	1290787	AssignmentExpression	"tmp = param ( ""CONDOR_DEVELOPERS"" )"		1290775	0		=			
ANR	1290788	Identifier	tmp		1290775	0					
ANR	1290789	CallExpression	"param ( ""CONDOR_DEVELOPERS"" )"		1290775	1					
ANR	1290790	Callee	param		1290775	0					
ANR	1290791	Identifier	param		1290775	0					
ANR	1290792	ArgumentList	"""CONDOR_DEVELOPERS"""		1290775	1					
ANR	1290793	Argument	"""CONDOR_DEVELOPERS"""		1290775	0					
ANR	1290794	PrimaryExpression	"""CONDOR_DEVELOPERS"""		1290775	0					
ANR	1290795	IfStatement	if ( tmp == NULL )		1290775	3					
ANR	1290796	Condition	tmp == NULL	393:8:11282:11292	1290775	0	True				
ANR	1290797	EqualityExpression	tmp == NULL		1290775	0		==			
ANR	1290798	Identifier	tmp		1290775	0					
ANR	1290799	Identifier	NULL		1290775	1					
ANR	1290800	CompoundStatement		11:21:246:246	1290775	1					
ANR	1290801	ExpressionStatement	"tmp = strdup ( ""NONE"" )"	396:2:11375:11395	1290775	0	True				
ANR	1290802	AssignmentExpression	"tmp = strdup ( ""NONE"" )"		1290775	0		=			
ANR	1290803	Identifier	tmp		1290775	0					
ANR	1290804	CallExpression	"strdup ( ""NONE"" )"		1290775	1					
ANR	1290805	Callee	strdup		1290775	0					
ANR	1290806	Identifier	strdup		1290775	0					
ANR	1290807	ArgumentList	"""NONE"""		1290775	1					
ANR	1290808	Argument	"""NONE"""		1290775	0					
ANR	1290809	PrimaryExpression	"""NONE"""		1290775	0					
ANR	1290810	ElseStatement	else		1290775	0					
ANR	1290811	IfStatement	"if ( strcasecmp ( tmp , ""NONE"" ) == 0 )"		1290775	0					
ANR	1290812	Condition	"strcasecmp ( tmp , ""NONE"" ) == 0"	401:8:11479:11507	1290775	0	True				
ANR	1290813	EqualityExpression	"strcasecmp ( tmp , ""NONE"" ) == 0"		1290775	0		==			
ANR	1290814	CallExpression	"strcasecmp ( tmp , ""NONE"" )"		1290775	0					
ANR	1290815	Callee	strcasecmp		1290775	0					
ANR	1290816	Identifier	strcasecmp		1290775	0					
ANR	1290817	ArgumentList	tmp		1290775	1					
ANR	1290818	Argument	tmp		1290775	0					
ANR	1290819	Identifier	tmp		1290775	0					
ANR	1290820	Argument	"""NONE"""		1290775	1					
ANR	1290821	PrimaryExpression	"""NONE"""		1290775	0					
ANR	1290822	PrimaryExpression	0		1290775	1					
ANR	1290823	CompoundStatement		19:39:461:461	1290775	1					
ANR	1290824	ExpressionStatement	free ( tmp )	402:8:11520:11530	1290775	0	True				
ANR	1290825	CallExpression	free ( tmp )		1290775	0					
ANR	1290826	Callee	free		1290775	0					
ANR	1290827	Identifier	free		1290775	0					
ANR	1290828	ArgumentList	tmp		1290775	1					
ANR	1290829	Argument	tmp		1290775	0					
ANR	1290830	Identifier	tmp		1290775	0					
ANR	1290831	ReturnStatement	return NULL ;	403:8:11540:11551	1290775	1	True				
ANR	1290832	Identifier	NULL		1290775	0					
ANR	1290833	ExpressionStatement	"mailer = email_open ( tmp , subject )"	406:1:11561:11593	1290775	4	True				
ANR	1290834	AssignmentExpression	"mailer = email_open ( tmp , subject )"		1290775	0		=			
ANR	1290835	Identifier	mailer		1290775	0					
ANR	1290836	CallExpression	"email_open ( tmp , subject )"		1290775	1					
ANR	1290837	Callee	email_open		1290775	0					
ANR	1290838	Identifier	email_open		1290775	0					
ANR	1290839	ArgumentList	tmp		1290775	1					
ANR	1290840	Argument	tmp		1290775	0					
ANR	1290841	Identifier	tmp		1290775	0					
ANR	1290842	Argument	subject		1290775	1					
ANR	1290843	Identifier	subject		1290775	0					
ANR	1290844	ExpressionStatement	free ( tmp )	409:1:11632:11641	1290775	5	True				
ANR	1290845	CallExpression	free ( tmp )		1290775	0					
ANR	1290846	Callee	free		1290775	0					
ANR	1290847	Identifier	free		1290775	0					
ANR	1290848	ArgumentList	tmp		1290775	1					
ANR	1290849	Argument	tmp		1290775	0					
ANR	1290850	Identifier	tmp		1290775	0					
ANR	1290851	ReturnStatement	return mailer ;	410:1:11644:11657	1290775	6	True				
ANR	1290852	Identifier	mailer		1290775	0					
ANR	1290853	ReturnType	FILE *		1290775	1					
ANR	1290854	Identifier	email_developers_open		1290775	2					
ANR	1290855	ParameterList	const char * subject		1290775	3					
ANR	1290856	Parameter	const char * subject	382:22:11027:11045	1290775	0	True				
ANR	1290857	ParameterType	const char *		1290775	0					
ANR	1290858	Identifier	subject		1290775	1					
ANR	1290859	CFGEntryNode	ENTRY		1290775		True				
ANR	1290860	CFGExitNode	EXIT		1290775		True				
ANR	1290861	Symbol	NULL		1290775						
ANR	1290862	Symbol	param		1290775						
ANR	1290863	Symbol	subject		1290775						
ANR	1290864	Symbol	tmp		1290775						
ANR	1290865	Symbol	email_open		1290775						
ANR	1290866	Symbol	strdup		1290775						
ANR	1290867	Symbol	mailer		1290775						
ANR	1290868	Symbol	strcasecmp		1290775						
ANR	1290869	Function	email_close	418:0:11849:13993							
ANR	1290870	FunctionDef	email_close (FILE * mailer)		1290869	0					
ANR	1290871	CompoundStatement		420:0:11880:13993	1290869	0					
ANR	1290872	IdentifierDeclStatement	char * temp ;	421:1:11883:11893	1290869	0	True				
ANR	1290873	IdentifierDecl	* temp		1290869	0					
ANR	1290874	IdentifierDeclType	char *		1290869	0					
ANR	1290875	Identifier	temp		1290869	1					
ANR	1290876	IdentifierDeclStatement	mode_t prev_umask ;	422:1:11896:11913	1290869	1	True				
ANR	1290877	IdentifierDecl	prev_umask		1290869	0					
ANR	1290878	IdentifierDeclType	mode_t		1290869	0					
ANR	1290879	Identifier	prev_umask		1290869	1					
ANR	1290880	IdentifierDeclStatement	priv_state priv ;	423:1:11916:11931	1290869	2	True				
ANR	1290881	IdentifierDecl	priv		1290869	0					
ANR	1290882	IdentifierDeclType	priv_state		1290869	0					
ANR	1290883	Identifier	priv		1290869	1					
ANR	1290884	IdentifierDeclStatement	char * customSig ;	424:1:11934:11949	1290869	3	True				
ANR	1290885	IdentifierDecl	* customSig		1290869	0					
ANR	1290886	IdentifierDeclType	char *		1290869	0					
ANR	1290887	Identifier	customSig		1290869	1					
ANR	1290888	IfStatement	if ( mailer == NULL )		1290869	4					
ANR	1290889	Condition	mailer == NULL	426:6:11958:11971	1290869	0	True				
ANR	1290890	EqualityExpression	mailer == NULL		1290869	0		==			
ANR	1290891	Identifier	mailer		1290869	0					
ANR	1290892	Identifier	NULL		1290869	1					
ANR	1290893	CompoundStatement		7:23:94:94	1290869	1					
ANR	1290894	ReturnStatement	return ;	427:2:11979:11985	1290869	0	True				
ANR	1290895	ExpressionStatement	priv = set_condor_priv ( )	431:1:12049:12073	1290869	5	True				
ANR	1290896	AssignmentExpression	priv = set_condor_priv ( )		1290869	0		=			
ANR	1290897	Identifier	priv		1290869	0					
ANR	1290898	CallExpression	set_condor_priv ( )		1290869	1					
ANR	1290899	Callee	set_condor_priv		1290869	0					
ANR	1290900	Identifier	set_condor_priv		1290869	0					
ANR	1290901	ArgumentList			1290869	1					
ANR	1290902	ExpressionStatement	customSig = NULL	433:1:12077:12093	1290869	6	True				
ANR	1290903	AssignmentExpression	customSig = NULL		1290869	0		=			
ANR	1290904	Identifier	customSig		1290869	0					
ANR	1290905	Identifier	NULL		1290869	1					
ANR	1290906	IfStatement	"if ( ( customSig = param ( ""EMAIL_SIGNATURE"" ) ) != NULL )"		1290869	7					
ANR	1290907	Condition	"( customSig = param ( ""EMAIL_SIGNATURE"" ) ) != NULL"	434:5:12100:12145	1290869	0	True				
ANR	1290908	EqualityExpression	"( customSig = param ( ""EMAIL_SIGNATURE"" ) ) != NULL"		1290869	0		!=			
ANR	1290909	AssignmentExpression	"customSig = param ( ""EMAIL_SIGNATURE"" )"		1290869	0		=			
ANR	1290910	Identifier	customSig		1290869	0					
ANR	1290911	CallExpression	"param ( ""EMAIL_SIGNATURE"" )"		1290869	1					
ANR	1290912	Callee	param		1290869	0					
ANR	1290913	Identifier	param		1290869	0					
ANR	1290914	ArgumentList	"""EMAIL_SIGNATURE"""		1290869	1					
ANR	1290915	Argument	"""EMAIL_SIGNATURE"""		1290869	0					
ANR	1290916	PrimaryExpression	"""EMAIL_SIGNATURE"""		1290869	0					
ANR	1290917	Identifier	NULL		1290869	1					
ANR	1290918	CompoundStatement		15:53:267:267	1290869	1					
ANR	1290919	ExpressionStatement	"fprintf ( mailer , ""\\n\\n"" )"	435:2:12152:12176	1290869	0	True				
ANR	1290920	CallExpression	"fprintf ( mailer , ""\\n\\n"" )"		1290869	0					
ANR	1290921	Callee	fprintf		1290869	0					
ANR	1290922	Identifier	fprintf		1290869	0					
ANR	1290923	ArgumentList	mailer		1290869	1					
ANR	1290924	Argument	mailer		1290869	0					
ANR	1290925	Identifier	mailer		1290869	0					
ANR	1290926	Argument	"""\\n\\n"""		1290869	1					
ANR	1290927	PrimaryExpression	"""\\n\\n"""		1290869	0					
ANR	1290928	ExpressionStatement	"fprintf ( mailer , customSig )"	436:2:12180:12207	1290869	1	True				
ANR	1290929	CallExpression	"fprintf ( mailer , customSig )"		1290869	0					
ANR	1290930	Callee	fprintf		1290869	0					
ANR	1290931	Identifier	fprintf		1290869	0					
ANR	1290932	ArgumentList	mailer		1290869	1					
ANR	1290933	Argument	mailer		1290869	0					
ANR	1290934	Identifier	mailer		1290869	0					
ANR	1290935	Argument	customSig		1290869	1					
ANR	1290936	Identifier	customSig		1290869	0					
ANR	1290937	ExpressionStatement	"fprintf ( mailer , ""\\n"" )"	437:2:12211:12233	1290869	2	True				
ANR	1290938	CallExpression	"fprintf ( mailer , ""\\n"" )"		1290869	0					
ANR	1290939	Callee	fprintf		1290869	0					
ANR	1290940	Identifier	fprintf		1290869	0					
ANR	1290941	ArgumentList	mailer		1290869	1					
ANR	1290942	Argument	mailer		1290869	0					
ANR	1290943	Identifier	mailer		1290869	0					
ANR	1290944	Argument	"""\\n"""		1290869	1					
ANR	1290945	PrimaryExpression	"""\\n"""		1290869	0					
ANR	1290946	ExpressionStatement	free ( customSig )	438:2:12237:12252	1290869	3	True				
ANR	1290947	CallExpression	free ( customSig )		1290869	0					
ANR	1290948	Callee	free		1290869	0					
ANR	1290949	Identifier	free		1290869	0					
ANR	1290950	ArgumentList	customSig		1290869	1					
ANR	1290951	Argument	customSig		1290869	0					
ANR	1290952	Identifier	customSig		1290869	0					
ANR	1290953	ElseStatement	else		1290869	0					
ANR	1290954	CompoundStatement		20:8:381:381	1290869	0					
ANR	1290955	ExpressionStatement	"fprintf ( mailer , ""\\n\\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\\n"" )"	442:2:12320:12389	1290869	0	True				
ANR	1290956	CallExpression	"fprintf ( mailer , ""\\n\\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\\n"" )"		1290869	0					
ANR	1290957	Callee	fprintf		1290869	0					
ANR	1290958	Identifier	fprintf		1290869	0					
ANR	1290959	ArgumentList	mailer		1290869	1					
ANR	1290960	Argument	mailer		1290869	0					
ANR	1290961	Identifier	mailer		1290869	0					
ANR	1290962	Argument	"""\\n\\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\\n"""		1290869	1					
ANR	1290963	PrimaryExpression	"""\\n\\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=\\n"""		1290869	0					
ANR	1290964	ExpressionStatement	"fprintf ( mailer , ""Questions about this message or Condor in general?\\n"" )"	443:2:12393:12466	1290869	1	True				
ANR	1290965	CallExpression	"fprintf ( mailer , ""Questions about this message or Condor in general?\\n"" )"		1290869	0					
ANR	1290966	Callee	fprintf		1290869	0					
ANR	1290967	Identifier	fprintf		1290869	0					
ANR	1290968	ArgumentList	mailer		1290869	1					
ANR	1290969	Argument	mailer		1290869	0					
ANR	1290970	Identifier	mailer		1290869	0					
ANR	1290971	Argument	"""Questions about this message or Condor in general?\\n"""		1290869	1					
ANR	1290972	PrimaryExpression	"""Questions about this message or Condor in general?\\n"""		1290869	0					
ANR	1290973	ExpressionStatement	"temp = param ( ""CONDOR_SUPPORT_EMAIL"" )"	446:2:12532:12570	1290869	2	True				
ANR	1290974	AssignmentExpression	"temp = param ( ""CONDOR_SUPPORT_EMAIL"" )"		1290869	0		=			
ANR	1290975	Identifier	temp		1290869	0					
ANR	1290976	CallExpression	"param ( ""CONDOR_SUPPORT_EMAIL"" )"		1290869	1					
ANR	1290977	Callee	param		1290869	0					
ANR	1290978	Identifier	param		1290869	0					
ANR	1290979	ArgumentList	"""CONDOR_SUPPORT_EMAIL"""		1290869	1					
ANR	1290980	Argument	"""CONDOR_SUPPORT_EMAIL"""		1290869	0					
ANR	1290981	PrimaryExpression	"""CONDOR_SUPPORT_EMAIL"""		1290869	0					
ANR	1290982	IfStatement	if ( ! temp )		1290869	3					
ANR	1290983	Condition	! temp	447:6:12578:12583	1290869	0	True				
ANR	1290984	UnaryOperationExpression	! temp		1290869	0					
ANR	1290985	UnaryOperator	!		1290869	0					
ANR	1290986	Identifier	temp		1290869	1					
ANR	1290987	CompoundStatement		28:15:706:706	1290869	1					
ANR	1290988	ExpressionStatement	"temp = param ( ""CONDOR_ADMIN"" )"	448:3:12592:12622	1290869	0	True				
ANR	1290989	AssignmentExpression	"temp = param ( ""CONDOR_ADMIN"" )"		1290869	0		=			
ANR	1290990	Identifier	temp		1290869	0					
ANR	1290991	CallExpression	"param ( ""CONDOR_ADMIN"" )"		1290869	1					
ANR	1290992	Callee	param		1290869	0					
ANR	1290993	Identifier	param		1290869	0					
ANR	1290994	ArgumentList	"""CONDOR_ADMIN"""		1290869	1					
ANR	1290995	Argument	"""CONDOR_ADMIN"""		1290869	0					
ANR	1290996	PrimaryExpression	"""CONDOR_ADMIN"""		1290869	0					
ANR	1290997	IfStatement	if ( temp )		1290869	4					
ANR	1290998	Condition	temp	450:6:12634:12637	1290869	0	True				
ANR	1290999	Identifier	temp		1290869	0					
ANR	1291000	CompoundStatement		31:13:760:760	1290869	1					
ANR	1291001	Statement	fprintf	451:3:12646:12652	1290869	0	True				
ANR	1291002	Statement	(	451:10:12653:12653	1290869	1	True				
ANR	1291003	Statement	mailer	451:12:12655:12660	1290869	2	True				
ANR	1291004	Statement	","	451:18:12661:12661	1290869	3	True				
ANR	1291005	Statement	"""Email address of the local Condor administrator: """	451:20:12663:12713	1290869	4	True				
ANR	1291006	Statement	"""%s\\n"""	452:6:12721:12726	1290869	5	True				
ANR	1291007	Statement	","	452:12:12727:12727	1290869	6	True				
ANR	1291008	Statement	temp	452:14:12729:12732	1290869	7	True				
ANR	1291009	Statement	)	452:19:12734:12734	1290869	8	True				
ANR	1291010	ExpressionStatement		452:20:12735:12735	1290869	9	True				
ANR	1291011	ExpressionStatement	free ( temp )	453:3:12740:12752	1290869	10	True				
ANR	1291012	CallExpression	free ( temp )		1290869	0					
ANR	1291013	Callee	free		1290869	0					
ANR	1291014	Identifier	free		1290869	0					
ANR	1291015	ArgumentList	temp		1290869	1					
ANR	1291016	Argument	temp		1290869	0					
ANR	1291017	Identifier	temp		1290869	0					
ANR	1291018	Statement	fprintf	455:2:12760:12766	1290869	5	True				
ANR	1291019	Statement	(	455:9:12767:12767	1290869	6	True				
ANR	1291020	Statement	mailer	455:11:12769:12774	1290869	7	True				
ANR	1291021	Statement	","	455:17:12775:12775	1290869	8	True				
ANR	1291022	Statement	"""The Official Condor Homepage is """	455:19:12777:12810	1290869	9	True				
ANR	1291023	Statement	"""http://www.cs.wisc.edu/condor\\n"""	456:5:12817:12849	1290869	10	True				
ANR	1291024	Statement	)	456:39:12851:12851	1290869	11	True				
ANR	1291025	ExpressionStatement		456:40:12852:12852	1290869	12	True				
ANR	1291026	ExpressionStatement	fflush ( mailer )	459:1:12859:12873	1290869	8	True				
ANR	1291027	CallExpression	fflush ( mailer )		1290869	0					
ANR	1291028	Callee	fflush		1290869	0					
ANR	1291029	Identifier	fflush		1290869	0					
ANR	1291030	ArgumentList	mailer		1290869	1					
ANR	1291031	Argument	mailer		1290869	0					
ANR	1291032	Identifier	mailer		1290869	0					
ANR	1291033	ExpressionStatement	prev_umask = umask ( 022 )	465:1:13151:13174	1290869	9	True				
ANR	1291034	AssignmentExpression	prev_umask = umask ( 022 )		1290869	0		=			
ANR	1291035	Identifier	prev_umask		1290869	0					
ANR	1291036	CallExpression	umask ( 022 )		1290869	1					
ANR	1291037	Callee	umask		1290869	0					
ANR	1291038	Identifier	umask		1290869	0					
ANR	1291039	ArgumentList	022		1290869	1					
ANR	1291040	Argument	022		1290869	0					
ANR	1291041	PrimaryExpression	022		1290869	0					
ANR	1291042	IfStatement	if ( EMAIL_FINAL_COMMAND == NULL )		1290869	10					
ANR	1291043	Condition	EMAIL_FINAL_COMMAND == NULL	470:5:13251:13277	1290869	0	True				
ANR	1291044	EqualityExpression	EMAIL_FINAL_COMMAND == NULL		1290869	0		==			
ANR	1291045	Identifier	EMAIL_FINAL_COMMAND		1290869	0					
ANR	1291046	Identifier	NULL		1290869	1					
ANR	1291047	CompoundStatement		51:34:1399:1399	1290869	1					
ANR	1291048	ExpressionStatement	my_pclose ( mailer )	471:2:13284:13303	1290869	0	True				
ANR	1291049	CallExpression	my_pclose ( mailer )		1290869	0					
ANR	1291050	Callee	my_pclose		1290869	0					
ANR	1291051	Identifier	my_pclose		1290869	0					
ANR	1291052	ArgumentList	mailer		1290869	1					
ANR	1291053	Argument	mailer		1290869	0					
ANR	1291054	Identifier	mailer		1290869	0					
ANR	1291055	ElseStatement	else		1290869	0					
ANR	1291056	CompoundStatement		54:2:1436:1463	1290869	0					
ANR	1291057	IdentifierDeclStatement	char * email_filename = NULL ;	473:2:13317:13344	1290869	0	True				
ANR	1291058	IdentifierDecl	* email_filename = NULL		1290869	0					
ANR	1291059	IdentifierDeclType	char *		1290869	0					
ANR	1291060	Identifier	email_filename		1290869	1					
ANR	1291061	AssignmentExpression	* email_filename = NULL		1290869	2		=			
ANR	1291062	Identifier	NULL		1290869	0					
ANR	1291063	Identifier	NULL		1290869	1					
ANR	1291064	ExpressionStatement	fclose ( mailer )	475:2:13398:13414	1290869	1	True				
ANR	1291065	CallExpression	fclose ( mailer )		1290869	0					
ANR	1291066	Callee	fclose		1290869	0					
ANR	1291067	Identifier	fclose		1290869	0					
ANR	1291068	ArgumentList	mailer		1290869	1					
ANR	1291069	Argument	mailer		1290869	0					
ANR	1291070	Identifier	mailer		1290869	0					
ANR	1291071	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Sending email via system(%s)\\n"" , EMAIL_FINAL_COMMAND )"	476:2:13418:13495	1290869	2	True				
ANR	1291072	CallExpression	"dprintf ( D_FULLDEBUG , ""Sending email via system(%s)\\n"" , EMAIL_FINAL_COMMAND )"		1290869	0					
ANR	1291073	Callee	dprintf		1290869	0					
ANR	1291074	Identifier	dprintf		1290869	0					
ANR	1291075	ArgumentList	D_FULLDEBUG		1290869	1					
ANR	1291076	Argument	D_FULLDEBUG		1290869	0					
ANR	1291077	Identifier	D_FULLDEBUG		1290869	0					
ANR	1291078	Argument	"""Sending email via system(%s)\\n"""		1290869	1					
ANR	1291079	PrimaryExpression	"""Sending email via system(%s)\\n"""		1290869	0					
ANR	1291080	Argument	EMAIL_FINAL_COMMAND		1290869	2					
ANR	1291081	Identifier	EMAIL_FINAL_COMMAND		1290869	0					
ANR	1291082	ExpressionStatement	system ( EMAIL_FINAL_COMMAND )	478:2:13499:13526	1290869	3	True				
ANR	1291083	CallExpression	system ( EMAIL_FINAL_COMMAND )		1290869	0					
ANR	1291084	Callee	system		1290869	0					
ANR	1291085	Identifier	system		1290869	0					
ANR	1291086	ArgumentList	EMAIL_FINAL_COMMAND		1290869	1					
ANR	1291087	Argument	EMAIL_FINAL_COMMAND		1290869	0					
ANR	1291088	Identifier	EMAIL_FINAL_COMMAND		1290869	0					
ANR	1291089	IfStatement	"if ( ( email_filename = strrchr ( EMAIL_FINAL_COMMAND , '<' ) ) )"		1290869	4					
ANR	1291090	Condition	"email_filename = strrchr ( EMAIL_FINAL_COMMAND , '<' )"	479:7:13535:13583	1290869	0	True				
ANR	1291091	AssignmentExpression	"email_filename = strrchr ( EMAIL_FINAL_COMMAND , '<' )"		1290869	0		=			
ANR	1291092	Identifier	email_filename		1290869	0					
ANR	1291093	CallExpression	"strrchr ( EMAIL_FINAL_COMMAND , '<' )"		1290869	1					
ANR	1291094	Callee	strrchr		1290869	0					
ANR	1291095	Identifier	strrchr		1290869	0					
ANR	1291096	ArgumentList	EMAIL_FINAL_COMMAND		1290869	1					
ANR	1291097	Argument	EMAIL_FINAL_COMMAND		1290869	0					
ANR	1291098	Identifier	EMAIL_FINAL_COMMAND		1290869	0					
ANR	1291099	Argument	'<'		1290869	1					
ANR	1291100	PrimaryExpression	'<'		1290869	0					
ANR	1291101	CompoundStatement		60:59:1706:1706	1290869	1					
ANR	1291102	ExpressionStatement	email_filename ++	480:3:13592:13608	1290869	0	True				
ANR	1291103	PostIncDecOperationExpression	email_filename ++		1290869	0					
ANR	1291104	Identifier	email_filename		1290869	0					
ANR	1291105	IncDec	++		1290869	1					
ANR	1291106	ExpressionStatement	email_filename ++	481:3:13635:13651	1290869	1	True				
ANR	1291107	PostIncDecOperationExpression	email_filename ++		1290869	0					
ANR	1291108	Identifier	email_filename		1290869	0					
ANR	1291109	IncDec	++		1290869	1					
ANR	1291110	IfStatement	if ( unlink ( email_filename ) == - 1 )		1290869	2					
ANR	1291111	Condition	unlink ( email_filename ) == - 1	482:8:13697:13724	1290869	0	True				
ANR	1291112	EqualityExpression	unlink ( email_filename ) == - 1		1290869	0		==			
ANR	1291113	CallExpression	unlink ( email_filename )		1290869	0					
ANR	1291114	Callee	unlink		1290869	0					
ANR	1291115	Identifier	unlink		1290869	0					
ANR	1291116	ArgumentList	email_filename		1290869	1					
ANR	1291117	Argument	email_filename		1290869	0					
ANR	1291118	Identifier	email_filename		1290869	0					
ANR	1291119	UnaryOperationExpression	- 1		1290869	1					
ANR	1291120	UnaryOperator	-		1290869	0					
ANR	1291121	PrimaryExpression	1		1290869	1					
ANR	1291122	CompoundStatement		63:39:1847:1847	1290869	1					
ANR	1291123	ExpressionStatement	"dprintf ( D_ALWAYS , ""email_close: cannot unlink temp file %s\\n"" , email_filename )"	483:4:13734:13816	1290869	0	True				
ANR	1291124	CallExpression	"dprintf ( D_ALWAYS , ""email_close: cannot unlink temp file %s\\n"" , email_filename )"		1290869	0					
ANR	1291125	Callee	dprintf		1290869	0					
ANR	1291126	Identifier	dprintf		1290869	0					
ANR	1291127	ArgumentList	D_ALWAYS		1290869	1					
ANR	1291128	Argument	D_ALWAYS		1290869	0					
ANR	1291129	Identifier	D_ALWAYS		1290869	0					
ANR	1291130	Argument	"""email_close: cannot unlink temp file %s\\n"""		1290869	1					
ANR	1291131	PrimaryExpression	"""email_close: cannot unlink temp file %s\\n"""		1290869	0					
ANR	1291132	Argument	email_filename		1290869	2					
ANR	1291133	Identifier	email_filename		1290869	0					
ANR	1291134	ExpressionStatement	free ( EMAIL_FINAL_COMMAND )	487:2:13829:13854	1290869	5	True				
ANR	1291135	CallExpression	free ( EMAIL_FINAL_COMMAND )		1290869	0					
ANR	1291136	Callee	free		1290869	0					
ANR	1291137	Identifier	free		1290869	0					
ANR	1291138	ArgumentList	EMAIL_FINAL_COMMAND		1290869	1					
ANR	1291139	Argument	EMAIL_FINAL_COMMAND		1290869	0					
ANR	1291140	Identifier	EMAIL_FINAL_COMMAND		1290869	0					
ANR	1291141	ExpressionStatement	EMAIL_FINAL_COMMAND = NULL	488:2:13858:13884	1290869	6	True				
ANR	1291142	AssignmentExpression	EMAIL_FINAL_COMMAND = NULL		1290869	0		=			
ANR	1291143	Identifier	EMAIL_FINAL_COMMAND		1290869	0					
ANR	1291144	Identifier	NULL		1290869	1					
ANR	1291145	ExpressionStatement	umask ( prev_umask )	493:1:13928:13945	1290869	11	True				
ANR	1291146	CallExpression	umask ( prev_umask )		1290869	0					
ANR	1291147	Callee	umask		1290869	0					
ANR	1291148	Identifier	umask		1290869	0					
ANR	1291149	ArgumentList	prev_umask		1290869	1					
ANR	1291150	Argument	prev_umask		1290869	0					
ANR	1291151	Identifier	prev_umask		1290869	0					
ANR	1291152	ExpressionStatement	set_priv ( priv )	496:1:13976:13990	1290869	12	True				
ANR	1291153	CallExpression	set_priv ( priv )		1290869	0					
ANR	1291154	Callee	set_priv		1290869	0					
ANR	1291155	Identifier	set_priv		1290869	0					
ANR	1291156	ArgumentList	priv		1290869	1					
ANR	1291157	Argument	priv		1290869	0					
ANR	1291158	Identifier	priv		1290869	0					
ANR	1291159	ReturnType	void		1290869	1					
ANR	1291160	Identifier	email_close		1290869	2					
ANR	1291161	ParameterList	FILE * mailer		1290869	3					
ANR	1291162	Parameter	FILE * mailer	419:12:11866:11877	1290869	0	True				
ANR	1291163	ParameterType	FILE *		1290869	0					
ANR	1291164	Identifier	mailer		1290869	1					
ANR	1291165	CFGEntryNode	ENTRY		1290869		True				
ANR	1291166	CFGExitNode	EXIT		1290869		True				
ANR	1291167	Symbol	temp		1290869						
ANR	1291168	Symbol	set_condor_priv		1290869						
ANR	1291169	Symbol	umask		1290869						
ANR	1291170	Symbol	NULL		1290869						
ANR	1291171	Symbol	prev_umask		1290869						
ANR	1291172	Symbol	EMAIL_FINAL_COMMAND		1290869						
ANR	1291173	Symbol	D_ALWAYS		1290869						
ANR	1291174	Symbol	D_FULLDEBUG		1290869						
ANR	1291175	Symbol	mailer		1290869						
ANR	1291176	Symbol	customSig		1290869						
ANR	1291177	Symbol	unlink		1290869						
ANR	1291178	Symbol	param		1290869						
ANR	1291179	Symbol	email_filename		1290869						
ANR	1291180	Symbol	strrchr		1290869						
ANR	1291181	Symbol	priv		1290869						
