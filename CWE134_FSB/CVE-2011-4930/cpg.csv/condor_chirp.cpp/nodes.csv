command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	857350	File	data/converged/CVE-2011-4930_htcondor/condor_chirp.cpp								
ANR	857351	DeclStmt									
ANR	857352	Decl							int	int	save_errno
ANR	857353	DeclStmt									
ANR	857354	Decl							int	int	save_errno
ANR	857355	DeclStmt									
ANR	857356	Decl							time_t	time_t	t
ANR	857357	Function	chirp_client_connect_starter	83:0:2716:3592							
ANR	857358	FunctionDef	chirp_client_connect_starter ()		857357	0					
ANR	857359	CompoundStatement		85:0:2769:3592	857357	0					
ANR	857360	IdentifierDeclStatement	FILE * file ;	86:4:2775:2785	857357	0	True				
ANR	857361	IdentifierDecl	* file		857357	0					
ANR	857362	IdentifierDeclType	FILE *		857357	0					
ANR	857363	Identifier	file		857357	1					
ANR	857364	IdentifierDeclStatement	int fields ;	87:4:2791:2801	857357	1	True				
ANR	857365	IdentifierDecl	fields		857357	0					
ANR	857366	IdentifierDeclType	int		857357	0					
ANR	857367	Identifier	fields		857357	1					
ANR	857368	IdentifierDeclStatement	struct chirp_client * client ;	88:4:2807:2834	857357	2	True				
ANR	857369	IdentifierDecl	* client		857357	0					
ANR	857370	IdentifierDeclType	struct chirp_client *		857357	0					
ANR	857371	Identifier	client		857357	1					
ANR	857372	IdentifierDeclStatement	char host [ CONDOR_HOSTNAME_MAX ] ;	89:4:2840:2870	857357	3	True				
ANR	857373	IdentifierDecl	host [ CONDOR_HOSTNAME_MAX ]		857357	0					
ANR	857374	IdentifierDeclType	char [ CONDOR_HOSTNAME_MAX ]		857357	0					
ANR	857375	Identifier	host		857357	1					
ANR	857376	Identifier	CONDOR_HOSTNAME_MAX		857357	2					
ANR	857377	IdentifierDeclStatement	char cookie [ CHIRP_LINE_MAX ] ;	90:4:2876:2903	857357	4	True				
ANR	857378	IdentifierDecl	cookie [ CHIRP_LINE_MAX ]		857357	0					
ANR	857379	IdentifierDeclType	char [ CHIRP_LINE_MAX ]		857357	0					
ANR	857380	Identifier	cookie		857357	1					
ANR	857381	Identifier	CHIRP_LINE_MAX		857357	2					
ANR	857382	IdentifierDeclStatement	MyString path ;	91:1:2906:2919	857357	5	True				
ANR	857383	IdentifierDecl	path		857357	0					
ANR	857384	IdentifierDeclType	MyString		857357	0					
ANR	857385	Identifier	path		857357	1					
ANR	857386	IdentifierDeclStatement	int port ;	92:4:2925:2933	857357	6	True				
ANR	857387	IdentifierDecl	port		857357	0					
ANR	857388	IdentifierDeclType	int		857357	0					
ANR	857389	Identifier	port		857357	1					
ANR	857390	IdentifierDeclStatement	int result ;	93:4:2939:2949	857357	7	True				
ANR	857391	IdentifierDecl	result		857357	0					
ANR	857392	IdentifierDeclType	int		857357	0					
ANR	857393	Identifier	result		857357	1					
ANR	857394	IdentifierDeclStatement	const char * dir ;	94:1:2952:2967	857357	8	True				
ANR	857395	IdentifierDecl	* dir		857357	0					
ANR	857396	IdentifierDeclType	const char *		857357	0					
ANR	857397	Identifier	dir		857357	1					
ANR	857398	IfStatement	"if ( NULL == ( dir = getenv ( ""_CONDOR_SCRATCH_DIR"" ) ) )"		857357	9					
ANR	857399	Condition	"NULL == ( dir = getenv ( ""_CONDOR_SCRATCH_DIR"" ) )"	96:5:2975:3019	857357	0	True				
ANR	857400	EqualityExpression	"NULL == ( dir = getenv ( ""_CONDOR_SCRATCH_DIR"" ) )"		857357	0		==			
ANR	857401	Identifier	NULL		857357	0					
ANR	857402	AssignmentExpression	"dir = getenv ( ""_CONDOR_SCRATCH_DIR"" )"		857357	1		=			
ANR	857403	Identifier	dir		857357	0					
ANR	857404	CallExpression	"getenv ( ""_CONDOR_SCRATCH_DIR"" )"		857357	1					
ANR	857405	Callee	getenv		857357	0					
ANR	857406	Identifier	getenv		857357	0					
ANR	857407	ArgumentList	"""_CONDOR_SCRATCH_DIR"""		857357	1					
ANR	857408	Argument	"""_CONDOR_SCRATCH_DIR"""		857357	0					
ANR	857409	PrimaryExpression	"""_CONDOR_SCRATCH_DIR"""		857357	0					
ANR	857410	CompoundStatement		12:52:252:252	857357	1					
ANR	857411	ExpressionStatement	"dir = ""."""	97:2:3026:3035	857357	0	True				
ANR	857412	AssignmentExpression	"dir = ""."""		857357	0		=			
ANR	857413	Identifier	dir		857357	0					
ANR	857414	PrimaryExpression	"""."""		857357	1					
ANR	857415	ExpressionStatement	"path . sprintf ( ""%s%c%s"" , dir , DIR_DELIM_CHAR , ""chirp.config"" )"	99:1:3041:3098	857357	10	True				
ANR	857416	CallExpression	"path . sprintf ( ""%s%c%s"" , dir , DIR_DELIM_CHAR , ""chirp.config"" )"		857357	0					
ANR	857417	Callee	path . sprintf		857357	0					
ANR	857418	MemberAccess	path . sprintf		857357	0					
ANR	857419	Identifier	path		857357	0					
ANR	857420	Identifier	sprintf		857357	1					
ANR	857421	ArgumentList	"""%s%c%s"""		857357	1					
ANR	857422	Argument	"""%s%c%s"""		857357	0					
ANR	857423	PrimaryExpression	"""%s%c%s"""		857357	0					
ANR	857424	Argument	dir		857357	1					
ANR	857425	Identifier	dir		857357	0					
ANR	857426	Argument	DIR_DELIM_CHAR		857357	2					
ANR	857427	Identifier	DIR_DELIM_CHAR		857357	0					
ANR	857428	Argument	"""chirp.config"""		857357	3					
ANR	857429	PrimaryExpression	"""chirp.config"""		857357	0					
ANR	857430	ExpressionStatement	"file = safe_fopen_wrapper_follow ( path . Value ( ) , ""r"" )"	100:4:3104:3154	857357	11	True				
ANR	857431	AssignmentExpression	"file = safe_fopen_wrapper_follow ( path . Value ( ) , ""r"" )"		857357	0		=			
ANR	857432	Identifier	file		857357	0					
ANR	857433	CallExpression	"safe_fopen_wrapper_follow ( path . Value ( ) , ""r"" )"		857357	1					
ANR	857434	Callee	safe_fopen_wrapper_follow		857357	0					
ANR	857435	Identifier	safe_fopen_wrapper_follow		857357	0					
ANR	857436	ArgumentList	path . Value ( )		857357	1					
ANR	857437	Argument	path . Value ( )		857357	0					
ANR	857438	CallExpression	path . Value ( )		857357	0					
ANR	857439	Callee	path . Value		857357	0					
ANR	857440	MemberAccess	path . Value		857357	0					
ANR	857441	Identifier	path		857357	0					
ANR	857442	Identifier	Value		857357	1					
ANR	857443	ArgumentList			857357	1					
ANR	857444	Argument	"""r"""		857357	1					
ANR	857445	PrimaryExpression	"""r"""		857357	0					
ANR	857446	IfStatement	if ( ! file )		857357	12					
ANR	857447	Condition	! file	101:7:3163:3167	857357	0	True				
ANR	857448	UnaryOperationExpression	! file		857357	0					
ANR	857449	UnaryOperator	!		857357	0					
ANR	857450	Identifier	file		857357	1					
ANR	857451	CompoundStatement		17:14:400:400	857357	1					
ANR	857452	ExpressionStatement	"fprintf ( stderr , ""Can't open %s file\\n"" , path . Value ( ) )"	102:2:3174:3226	857357	0	True				
ANR	857453	CallExpression	"fprintf ( stderr , ""Can't open %s file\\n"" , path . Value ( ) )"		857357	0					
ANR	857454	Callee	fprintf		857357	0					
ANR	857455	Identifier	fprintf		857357	0					
ANR	857456	ArgumentList	stderr		857357	1					
ANR	857457	Argument	stderr		857357	0					
ANR	857458	Identifier	stderr		857357	0					
ANR	857459	Argument	"""Can't open %s file\\n"""		857357	1					
ANR	857460	PrimaryExpression	"""Can't open %s file\\n"""		857357	0					
ANR	857461	Argument	path . Value ( )		857357	2					
ANR	857462	CallExpression	path . Value ( )		857357	0					
ANR	857463	Callee	path . Value		857357	0					
ANR	857464	MemberAccess	path . Value		857357	0					
ANR	857465	Identifier	path		857357	0					
ANR	857466	Identifier	Value		857357	1					
ANR	857467	ArgumentList			857357	1					
ANR	857468	ReturnStatement	return 0 ;	103:2:3230:3238	857357	1	True				
ANR	857469	PrimaryExpression	0		857357	0					
ANR	857470	ExpressionStatement	"fields = fscanf ( file , ""%s %d %s"" , host , & port , cookie )"	106:4:3248:3298	857357	13	True				
ANR	857471	AssignmentExpression	"fields = fscanf ( file , ""%s %d %s"" , host , & port , cookie )"		857357	0		=			
ANR	857472	Identifier	fields		857357	0					
ANR	857473	CallExpression	"fscanf ( file , ""%s %d %s"" , host , & port , cookie )"		857357	1					
ANR	857474	Callee	fscanf		857357	0					
ANR	857475	Identifier	fscanf		857357	0					
ANR	857476	ArgumentList	file		857357	1					
ANR	857477	Argument	file		857357	0					
ANR	857478	Identifier	file		857357	0					
ANR	857479	Argument	"""%s %d %s"""		857357	1					
ANR	857480	PrimaryExpression	"""%s %d %s"""		857357	0					
ANR	857481	Argument	host		857357	2					
ANR	857482	Identifier	host		857357	0					
ANR	857483	Argument	& port		857357	3					
ANR	857484	UnaryOperationExpression	& port		857357	0					
ANR	857485	UnaryOperator	&		857357	0					
ANR	857486	Identifier	port		857357	1					
ANR	857487	Argument	cookie		857357	4					
ANR	857488	Identifier	cookie		857357	0					
ANR	857489	ExpressionStatement	fclose ( file )	107:4:3304:3316	857357	14	True				
ANR	857490	CallExpression	fclose ( file )		857357	0					
ANR	857491	Callee	fclose		857357	0					
ANR	857492	Identifier	fclose		857357	0					
ANR	857493	ArgumentList	file		857357	1					
ANR	857494	Argument	file		857357	0					
ANR	857495	Identifier	file		857357	0					
ANR	857496	IfStatement	if ( fields != 3 )		857357	15					
ANR	857497	Condition	fields != 3	109:7:3326:3334	857357	0	True				
ANR	857498	EqualityExpression	fields != 3		857357	0		!=			
ANR	857499	Identifier	fields		857357	0					
ANR	857500	PrimaryExpression	3		857357	1					
ANR	857501	CompoundStatement		25:18:567:567	857357	1					
ANR	857502	ExpressionStatement	errno = EINVAL	110:8:3347:3361	857357	0	True				
ANR	857503	AssignmentExpression	errno = EINVAL		857357	0		=			
ANR	857504	Identifier	errno		857357	0					
ANR	857505	Identifier	EINVAL		857357	1					
ANR	857506	ReturnStatement	return 0 ;	111:8:3371:3379	857357	1	True				
ANR	857507	PrimaryExpression	0		857357	0					
ANR	857508	ExpressionStatement	"client = chirp_client_connect ( host , port )"	114:4:3392:3432	857357	16	True				
ANR	857509	AssignmentExpression	"client = chirp_client_connect ( host , port )"		857357	0		=			
ANR	857510	Identifier	client		857357	0					
ANR	857511	CallExpression	"chirp_client_connect ( host , port )"		857357	1					
ANR	857512	Callee	chirp_client_connect		857357	0					
ANR	857513	Identifier	chirp_client_connect		857357	0					
ANR	857514	ArgumentList	host		857357	1					
ANR	857515	Argument	host		857357	0					
ANR	857516	Identifier	host		857357	0					
ANR	857517	Argument	port		857357	1					
ANR	857518	Identifier	port		857357	0					
ANR	857519	IfStatement	if ( ! client )		857357	17					
ANR	857520	Condition	! client	115:7:3441:3447	857357	0	True				
ANR	857521	UnaryOperationExpression	! client		857357	0					
ANR	857522	UnaryOperator	!		857357	0					
ANR	857523	Identifier	client		857357	1					
ANR	857524	ReturnStatement	return 0 ;	115:16:3450:3458	857357	1	True				
ANR	857525	PrimaryExpression	0		857357	0					
ANR	857526	ExpressionStatement	"result = chirp_client_cookie ( client , cookie )"	117:4:3465:3508	857357	18	True				
ANR	857527	AssignmentExpression	"result = chirp_client_cookie ( client , cookie )"		857357	0		=			
ANR	857528	Identifier	result		857357	0					
ANR	857529	CallExpression	"chirp_client_cookie ( client , cookie )"		857357	1					
ANR	857530	Callee	chirp_client_cookie		857357	0					
ANR	857531	Identifier	chirp_client_cookie		857357	0					
ANR	857532	ArgumentList	client		857357	1					
ANR	857533	Argument	client		857357	0					
ANR	857534	Identifier	client		857357	0					
ANR	857535	Argument	cookie		857357	1					
ANR	857536	Identifier	cookie		857357	0					
ANR	857537	IfStatement	if ( result != 0 )		857357	19					
ANR	857538	Condition	result != 0	118:7:3517:3525	857357	0	True				
ANR	857539	EqualityExpression	result != 0		857357	0		!=			
ANR	857540	Identifier	result		857357	0					
ANR	857541	PrimaryExpression	0		857357	1					
ANR	857542	CompoundStatement		34:18:758:758	857357	1					
ANR	857543	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , 0 )"	119:2:3532:3564	857357	0	True				
ANR	857544	CallExpression	"DISCONNECT_AND_RETURN ( client , 0 )"		857357	0					
ANR	857545	Callee	DISCONNECT_AND_RETURN		857357	0					
ANR	857546	Identifier	DISCONNECT_AND_RETURN		857357	0					
ANR	857547	ArgumentList	client		857357	1					
ANR	857548	Argument	client		857357	0					
ANR	857549	Identifier	client		857357	0					
ANR	857550	Argument	0		857357	1					
ANR	857551	PrimaryExpression	0		857357	0					
ANR	857552	ReturnStatement	return client ;	122:4:3577:3590	857357	20	True				
ANR	857553	Identifier	client		857357	0					
ANR	857554	ReturnType	struct chirp_client *		857357	1					
ANR	857555	Identifier	chirp_client_connect_starter		857357	2					
ANR	857556	ParameterList			857357	3					
ANR	857557	CFGEntryNode	ENTRY		857357		True				
ANR	857558	CFGExitNode	EXIT		857357		True				
ANR	857559	Symbol	errno		857357						
ANR	857560	Symbol	chirp_client_cookie		857357						
ANR	857561	Symbol	NULL		857357						
ANR	857562	Symbol	cookie		857357						
ANR	857563	Symbol	DIR_DELIM_CHAR		857357						
ANR	857564	Symbol	dir		857357						
ANR	857565	Symbol	stderr		857357						
ANR	857566	Symbol	chirp_client_connect		857357						
ANR	857567	Symbol	result		857357						
ANR	857568	Symbol	EINVAL		857357						
ANR	857569	Symbol	path		857357						
ANR	857570	Symbol	fscanf		857357						
ANR	857571	Symbol	file		857357						
ANR	857572	Symbol	& port		857357						
ANR	857573	Symbol	port		857357						
ANR	857574	Symbol	host		857357						
ANR	857575	Symbol	client		857357						
ANR	857576	Symbol	path . Value		857357						
ANR	857577	Symbol	fields		857357						
ANR	857578	Symbol	safe_fopen_wrapper_follow		857357						
ANR	857579	Symbol	getenv		857357						
ANR	857580	Function	chirp_get_one_file	125:0:3595:4393							
ANR	857581	FunctionDef	"chirp_get_one_file (char * remote , char * local)"		857580	0					
ANR	857582	CompoundStatement		126:46:3645:4393	857580	0					
ANR	857583	IdentifierDeclStatement	struct chirp_client * client = 0 ;	127:1:3648:3679	857580	0	True				
ANR	857584	IdentifierDecl	* client = 0		857580	0					
ANR	857585	IdentifierDeclType	struct chirp_client *		857580	0					
ANR	857586	Identifier	client		857580	1					
ANR	857587	AssignmentExpression	* client = 0		857580	2		=			
ANR	857588	Identifier	client		857580	0					
ANR	857589	PrimaryExpression	0		857580	1					
ANR	857590	ExpressionStatement	CONNECT_STARTER ( client )	129:1:3683:3706	857580	1	True				
ANR	857591	CallExpression	CONNECT_STARTER ( client )		857580	0					
ANR	857592	Callee	CONNECT_STARTER		857580	0					
ANR	857593	Identifier	CONNECT_STARTER		857580	0					
ANR	857594	ArgumentList	client		857580	1					
ANR	857595	Argument	client		857580	0					
ANR	857596	Identifier	client		857580	0					
ANR	857597	IdentifierDeclStatement	char * buf = NULL ;	131:1:3711:3727	857580	2	True				
ANR	857598	IdentifierDecl	* buf = NULL		857580	0					
ANR	857599	IdentifierDeclType	char *		857580	0					
ANR	857600	Identifier	buf		857580	1					
ANR	857601	AssignmentExpression	* buf = NULL		857580	2		=			
ANR	857602	Identifier	NULL		857580	0					
ANR	857603	Identifier	NULL		857580	1					
ANR	857604	IdentifierDeclStatement	"int num_read = chirp_client_getfile_buffer ( client , remote , & buf ) ;"	133:1:3732:3798	857580	3	True				
ANR	857605	IdentifierDecl	"num_read = chirp_client_getfile_buffer ( client , remote , & buf )"		857580	0					
ANR	857606	IdentifierDeclType	int		857580	0					
ANR	857607	Identifier	num_read		857580	1					
ANR	857608	AssignmentExpression	"num_read = chirp_client_getfile_buffer ( client , remote , & buf )"		857580	2		=			
ANR	857609	Identifier	num_read		857580	0					
ANR	857610	CallExpression	"chirp_client_getfile_buffer ( client , remote , & buf )"		857580	1					
ANR	857611	Callee	chirp_client_getfile_buffer		857580	0					
ANR	857612	Identifier	chirp_client_getfile_buffer		857580	0					
ANR	857613	ArgumentList	client		857580	1					
ANR	857614	Argument	client		857580	0					
ANR	857615	Identifier	client		857580	0					
ANR	857616	Argument	remote		857580	1					
ANR	857617	Identifier	remote		857580	0					
ANR	857618	Argument	& buf		857580	2					
ANR	857619	UnaryOperationExpression	& buf		857580	0					
ANR	857620	UnaryOperator	&		857580	0					
ANR	857621	Identifier	buf		857580	1					
ANR	857622	IfStatement	if ( num_read < 0 )		857580	4					
ANR	857623	Condition	num_read < 0	134:5:3805:3816	857580	0	True				
ANR	857624	RelationalExpression	num_read < 0		857580	0		<			
ANR	857625	Identifier	num_read		857580	0					
ANR	857626	PrimaryExpression	0		857580	1					
ANR	857627	CompoundStatement		9:19:173:173	857580	1					
ANR	857628	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , - 1 )"	135:2:3823:3856	857580	0	True				
ANR	857629	CallExpression	"DISCONNECT_AND_RETURN ( client , - 1 )"		857580	0					
ANR	857630	Callee	DISCONNECT_AND_RETURN		857580	0					
ANR	857631	Identifier	DISCONNECT_AND_RETURN		857580	0					
ANR	857632	ArgumentList	client		857580	1					
ANR	857633	Argument	client		857580	0					
ANR	857634	Identifier	client		857580	0					
ANR	857635	Argument	- 1		857580	1					
ANR	857636	UnaryOperationExpression	- 1		857580	0					
ANR	857637	UnaryOperator	-		857580	0					
ANR	857638	PrimaryExpression	1		857580	1					
ANR	857639	IdentifierDeclStatement	FILE * wfd ;	138:1:3864:3873	857580	5	True				
ANR	857640	IdentifierDecl	* wfd		857580	0					
ANR	857641	IdentifierDeclType	FILE *		857580	0					
ANR	857642	Identifier	wfd		857580	1					
ANR	857643	IfStatement	"if ( strcmp ( local , ""-"" ) == 0 )"		857580	6					
ANR	857644	Condition	"strcmp ( local , ""-"" ) == 0"	139:5:3880:3902	857580	0	True				
ANR	857645	EqualityExpression	"strcmp ( local , ""-"" ) == 0"		857580	0		==			
ANR	857646	CallExpression	"strcmp ( local , ""-"" )"		857580	0					
ANR	857647	Callee	strcmp		857580	0					
ANR	857648	Identifier	strcmp		857580	0					
ANR	857649	ArgumentList	local		857580	1					
ANR	857650	Argument	local		857580	0					
ANR	857651	Identifier	local		857580	0					
ANR	857652	Argument	"""-"""		857580	1					
ANR	857653	PrimaryExpression	"""-"""		857580	0					
ANR	857654	PrimaryExpression	0		857580	1					
ANR	857655	CompoundStatement		14:30:259:259	857580	1					
ANR	857656	ExpressionStatement	wfd = stdout	140:2:3909:3921	857580	0	True				
ANR	857657	AssignmentExpression	wfd = stdout		857580	0		=			
ANR	857658	Identifier	wfd		857580	0					
ANR	857659	Identifier	stdout		857580	1					
ANR	857660	ElseStatement	else		857580	0					
ANR	857661	CompoundStatement		16:8:285:285	857580	0					
ANR	857662	Statement	wfd	142:2:3935:3937	857580	0	True				
ANR	857663	Statement	=	142:6:3939:3939	857580	1	True				
ANR	857664	Statement	::	142:8:3941:3942	857580	2	True				
ANR	857665	ExpressionStatement	"safe_fopen_wrapper_follow ( local , ""wb+"" )"	142:10:3943:3982	857580	3	True				
ANR	857666	CallExpression	"safe_fopen_wrapper_follow ( local , ""wb+"" )"		857580	0					
ANR	857667	Callee	safe_fopen_wrapper_follow		857580	0					
ANR	857668	Identifier	safe_fopen_wrapper_follow		857580	0					
ANR	857669	ArgumentList	local		857580	1					
ANR	857670	Argument	local		857580	0					
ANR	857671	Identifier	local		857580	0					
ANR	857672	Argument	"""wb+"""		857580	1					
ANR	857673	PrimaryExpression	"""wb+"""		857580	0					
ANR	857674	IfStatement	if ( wfd == NULL )		857580	7					
ANR	857675	Condition	wfd == NULL	145:5:3993:4003	857580	0	True				
ANR	857676	EqualityExpression	wfd == NULL		857580	0		==			
ANR	857677	Identifier	wfd		857580	0					
ANR	857678	Identifier	NULL		857580	1					
ANR	857679	CompoundStatement		20:18:360:360	857580	1					
ANR	857680	ExpressionStatement	"fprintf ( stderr , ""Can't open local file %s\\n"" , local )"	146:2:4010:4062	857580	0	True				
ANR	857681	CallExpression	"fprintf ( stderr , ""Can't open local file %s\\n"" , local )"		857580	0					
ANR	857682	Callee	fprintf		857580	0					
ANR	857683	Identifier	fprintf		857580	0					
ANR	857684	ArgumentList	stderr		857580	1					
ANR	857685	Argument	stderr		857580	0					
ANR	857686	Identifier	stderr		857580	0					
ANR	857687	Argument	"""Can't open local file %s\\n"""		857580	1					
ANR	857688	PrimaryExpression	"""Can't open local file %s\\n"""		857580	0					
ANR	857689	Argument	local		857580	2					
ANR	857690	Identifier	local		857580	0					
ANR	857691	ExpressionStatement	free ( buf )	147:2:4066:4075	857580	1	True				
ANR	857692	CallExpression	free ( buf )		857580	0					
ANR	857693	Callee	free		857580	0					
ANR	857694	Identifier	free		857580	0					
ANR	857695	ArgumentList	buf		857580	1					
ANR	857696	Argument	buf		857580	0					
ANR	857697	Identifier	buf		857580	0					
ANR	857698	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , - 1 )"	148:2:4079:4112	857580	2	True				
ANR	857699	CallExpression	"DISCONNECT_AND_RETURN ( client , - 1 )"		857580	0					
ANR	857700	Callee	DISCONNECT_AND_RETURN		857580	0					
ANR	857701	Identifier	DISCONNECT_AND_RETURN		857580	0					
ANR	857702	ArgumentList	client		857580	1					
ANR	857703	Argument	client		857580	0					
ANR	857704	Identifier	client		857580	0					
ANR	857705	Argument	- 1		857580	1					
ANR	857706	UnaryOperationExpression	- 1		857580	0					
ANR	857707	UnaryOperator	-		857580	0					
ANR	857708	PrimaryExpression	1		857580	1					
ANR	857709	Statement	int	152:1:4122:4124	857580	8	True				
ANR	857710	Statement	num_written	152:5:4126:4136	857580	9	True				
ANR	857711	Statement	=	152:17:4138:4138	857580	10	True				
ANR	857712	Statement	::	152:19:4140:4141	857580	11	True				
ANR	857713	ExpressionStatement	"fwrite ( buf , 1 , num_read , wfd )"	152:21:4142:4171	857580	12	True				
ANR	857714	CallExpression	"fwrite ( buf , 1 , num_read , wfd )"		857580	0					
ANR	857715	Callee	fwrite		857580	0					
ANR	857716	Identifier	fwrite		857580	0					
ANR	857717	ArgumentList	buf		857580	1					
ANR	857718	Argument	buf		857580	0					
ANR	857719	Identifier	buf		857580	0					
ANR	857720	Argument	1		857580	1					
ANR	857721	PrimaryExpression	1		857580	0					
ANR	857722	Argument	num_read		857580	2					
ANR	857723	Identifier	num_read		857580	0					
ANR	857724	Argument	wfd		857580	3					
ANR	857725	Identifier	wfd		857580	0					
ANR	857726	IfStatement	if ( num_written != num_read )		857580	13					
ANR	857727	Condition	num_written != num_read	153:5:4178:4200	857580	0	True				
ANR	857728	EqualityExpression	num_written != num_read		857580	0		!=			
ANR	857729	Identifier	num_written		857580	0					
ANR	857730	Identifier	num_read		857580	1					
ANR	857731	CompoundStatement		28:30:557:557	857580	1					
ANR	857732	ExpressionStatement	"fprintf ( stderr , ""local write error on %s\\n"" , local )"	154:2:4207:4258	857580	0	True				
ANR	857733	CallExpression	"fprintf ( stderr , ""local write error on %s\\n"" , local )"		857580	0					
ANR	857734	Callee	fprintf		857580	0					
ANR	857735	Identifier	fprintf		857580	0					
ANR	857736	ArgumentList	stderr		857580	1					
ANR	857737	Argument	stderr		857580	0					
ANR	857738	Identifier	stderr		857580	0					
ANR	857739	Argument	"""local write error on %s\\n"""		857580	1					
ANR	857740	PrimaryExpression	"""local write error on %s\\n"""		857580	0					
ANR	857741	Argument	local		857580	2					
ANR	857742	Identifier	local		857580	0					
ANR	857743	Statement	::	155:2:4262:4263	857580	1	True				
ANR	857744	ExpressionStatement	fclose ( wfd )	155:4:4264:4275	857580	2	True				
ANR	857745	CallExpression	fclose ( wfd )		857580	0					
ANR	857746	Callee	fclose		857580	0					
ANR	857747	Identifier	fclose		857580	0					
ANR	857748	ArgumentList	wfd		857580	1					
ANR	857749	Argument	wfd		857580	0					
ANR	857750	Identifier	wfd		857580	0					
ANR	857751	ExpressionStatement	free ( buf )	156:2:4279:4288	857580	3	True				
ANR	857752	CallExpression	free ( buf )		857580	0					
ANR	857753	Callee	free		857580	0					
ANR	857754	Identifier	free		857580	0					
ANR	857755	ArgumentList	buf		857580	1					
ANR	857756	Argument	buf		857580	0					
ANR	857757	Identifier	buf		857580	0					
ANR	857758	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , - 1 )"	157:2:4292:4325	857580	4	True				
ANR	857759	CallExpression	"DISCONNECT_AND_RETURN ( client , - 1 )"		857580	0					
ANR	857760	Callee	DISCONNECT_AND_RETURN		857580	0					
ANR	857761	Identifier	DISCONNECT_AND_RETURN		857580	0					
ANR	857762	ArgumentList	client		857580	1					
ANR	857763	Argument	client		857580	0					
ANR	857764	Identifier	client		857580	0					
ANR	857765	Argument	- 1		857580	1					
ANR	857766	UnaryOperationExpression	- 1		857580	0					
ANR	857767	UnaryOperator	-		857580	0					
ANR	857768	PrimaryExpression	1		857580	1					
ANR	857769	ExpressionStatement	fclose ( wfd )	160:1:4333:4344	857580	14	True				
ANR	857770	CallExpression	fclose ( wfd )		857580	0					
ANR	857771	Callee	fclose		857580	0					
ANR	857772	Identifier	fclose		857580	0					
ANR	857773	ArgumentList	wfd		857580	1					
ANR	857774	Argument	wfd		857580	0					
ANR	857775	Identifier	wfd		857580	0					
ANR	857776	ExpressionStatement	free ( buf )	161:1:4347:4356	857580	15	True				
ANR	857777	CallExpression	free ( buf )		857580	0					
ANR	857778	Callee	free		857580	0					
ANR	857779	Identifier	free		857580	0					
ANR	857780	ArgumentList	buf		857580	1					
ANR	857781	Argument	buf		857580	0					
ANR	857782	Identifier	buf		857580	0					
ANR	857783	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , 0 )"	162:1:4359:4391	857580	16	True				
ANR	857784	CallExpression	"DISCONNECT_AND_RETURN ( client , 0 )"		857580	0					
ANR	857785	Callee	DISCONNECT_AND_RETURN		857580	0					
ANR	857786	Identifier	DISCONNECT_AND_RETURN		857580	0					
ANR	857787	ArgumentList	client		857580	1					
ANR	857788	Argument	client		857580	0					
ANR	857789	Identifier	client		857580	0					
ANR	857790	Argument	0		857580	1					
ANR	857791	PrimaryExpression	0		857580	0					
ANR	857792	ReturnType	int		857580	1					
ANR	857793	Identifier	chirp_get_one_file		857580	2					
ANR	857794	ParameterList	"char * remote , char * local"		857580	3					
ANR	857795	Parameter	char * remote	126:19:3618:3629	857580	0	True				
ANR	857796	ParameterType	char *		857580	0					
ANR	857797	Identifier	remote		857580	1					
ANR	857798	Parameter	char * local	126:33:3632:3642	857580	1	True				
ANR	857799	ParameterType	char *		857580	0					
ANR	857800	Identifier	local		857580	1					
ANR	857801	CFGEntryNode	ENTRY		857580		True				
ANR	857802	CFGExitNode	EXIT		857580		True				
ANR	857803	Symbol	chirp_client_getfile_buffer		857580						
ANR	857804	Symbol	strcmp		857580						
ANR	857805	Symbol	NULL		857580						
ANR	857806	Symbol	stdout		857580						
ANR	857807	Symbol	num_read		857580						
ANR	857808	Symbol	num_written		857580						
ANR	857809	Symbol	remote		857580						
ANR	857810	Symbol	stderr		857580						
ANR	857811	Symbol	local		857580						
ANR	857812	Symbol	buf		857580						
ANR	857813	Symbol	wfd		857580						
ANR	857814	Symbol	client		857580						
ANR	857815	Symbol	& buf		857580						
ANR	857816	Function	chirp_put_one_file	167:0:4489:5775							
ANR	857817	FunctionDef	"chirp_put_one_file (char * local , char * remote , char * mode , int perm)"		857816	0					
ANR	857818	CompoundStatement		168:68:4561:5775	857816	0					
ANR	857819	IdentifierDeclStatement	struct chirp_client * client ;	169:1:4564:4591	857816	0	True				
ANR	857820	IdentifierDecl	* client		857816	0					
ANR	857821	IdentifierDeclType	struct chirp_client *		857816	0					
ANR	857822	Identifier	client		857816	1					
ANR	857823	ExpressionStatement	CONNECT_STARTER ( client )	173:1:4705:4728	857816	1	True				
ANR	857824	CallExpression	CONNECT_STARTER ( client )		857816	0					
ANR	857825	Callee	CONNECT_STARTER		857816	0					
ANR	857826	Identifier	CONNECT_STARTER		857816	0					
ANR	857827	ArgumentList	client		857816	1					
ANR	857828	Argument	client		857816	0					
ANR	857829	Identifier	client		857816	0					
ANR	857830	IdentifierDeclStatement	FILE * rfd ;	175:1:4732:4741	857816	2	True				
ANR	857831	IdentifierDecl	* rfd		857816	0					
ANR	857832	IdentifierDeclType	FILE *		857816	0					
ANR	857833	Identifier	rfd		857816	1					
ANR	857834	IfStatement	"if ( strcmp ( local , ""-"" ) == 0 )"		857816	3					
ANR	857835	Condition	"strcmp ( local , ""-"" ) == 0"	176:5:4748:4770	857816	0	True				
ANR	857836	EqualityExpression	"strcmp ( local , ""-"" ) == 0"		857816	0		==			
ANR	857837	CallExpression	"strcmp ( local , ""-"" )"		857816	0					
ANR	857838	Callee	strcmp		857816	0					
ANR	857839	Identifier	strcmp		857816	0					
ANR	857840	ArgumentList	local		857816	1					
ANR	857841	Argument	local		857816	0					
ANR	857842	Identifier	local		857816	0					
ANR	857843	Argument	"""-"""		857816	1					
ANR	857844	PrimaryExpression	"""-"""		857816	0					
ANR	857845	PrimaryExpression	0		857816	1					
ANR	857846	CompoundStatement		9:30:211:211	857816	1					
ANR	857847	ExpressionStatement	rfd = stdin	177:2:4777:4788	857816	0	True				
ANR	857848	AssignmentExpression	rfd = stdin		857816	0		=			
ANR	857849	Identifier	rfd		857816	0					
ANR	857850	Identifier	stdin		857816	1					
ANR	857851	ElseStatement	else		857816	0					
ANR	857852	CompoundStatement		11:8:236:236	857816	0					
ANR	857853	Statement	rfd	179:2:4802:4804	857816	0	True				
ANR	857854	Statement	=	179:6:4806:4806	857816	1	True				
ANR	857855	Statement	::	179:8:4808:4809	857816	2	True				
ANR	857856	ExpressionStatement	"safe_fopen_wrapper_follow ( local , ""rb"" )"	179:10:4810:4848	857816	3	True				
ANR	857857	CallExpression	"safe_fopen_wrapper_follow ( local , ""rb"" )"		857816	0					
ANR	857858	Callee	safe_fopen_wrapper_follow		857816	0					
ANR	857859	Identifier	safe_fopen_wrapper_follow		857816	0					
ANR	857860	ArgumentList	local		857816	1					
ANR	857861	Argument	local		857816	0					
ANR	857862	Identifier	local		857816	0					
ANR	857863	Argument	"""rb"""		857816	1					
ANR	857864	PrimaryExpression	"""rb"""		857816	0					
ANR	857865	IfStatement	if ( rfd == NULL )		857816	4					
ANR	857866	Condition	rfd == NULL	182:5:4859:4869	857816	0	True				
ANR	857867	EqualityExpression	rfd == NULL		857816	0		==			
ANR	857868	Identifier	rfd		857816	0					
ANR	857869	Identifier	NULL		857816	1					
ANR	857870	CompoundStatement		15:18:310:310	857816	1					
ANR	857871	ExpressionStatement	"fprintf ( stderr , ""Can't open local file %s\\n"" , local )"	183:2:4876:4928	857816	0	True				
ANR	857872	CallExpression	"fprintf ( stderr , ""Can't open local file %s\\n"" , local )"		857816	0					
ANR	857873	Callee	fprintf		857816	0					
ANR	857874	Identifier	fprintf		857816	0					
ANR	857875	ArgumentList	stderr		857816	1					
ANR	857876	Argument	stderr		857816	0					
ANR	857877	Identifier	stderr		857816	0					
ANR	857878	Argument	"""Can't open local file %s\\n"""		857816	1					
ANR	857879	PrimaryExpression	"""Can't open local file %s\\n"""		857816	0					
ANR	857880	Argument	local		857816	2					
ANR	857881	Identifier	local		857816	0					
ANR	857882	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , - 1 )"	184:2:4932:4965	857816	1	True				
ANR	857883	CallExpression	"DISCONNECT_AND_RETURN ( client , - 1 )"		857816	0					
ANR	857884	Callee	DISCONNECT_AND_RETURN		857816	0					
ANR	857885	Identifier	DISCONNECT_AND_RETURN		857816	0					
ANR	857886	ArgumentList	client		857816	1					
ANR	857887	Argument	client		857816	0					
ANR	857888	Identifier	client		857816	0					
ANR	857889	Argument	- 1		857816	1					
ANR	857890	UnaryOperationExpression	- 1		857816	0					
ANR	857891	UnaryOperator	-		857816	0					
ANR	857892	PrimaryExpression	1		857816	1					
ANR	857893	IdentifierDeclStatement	"int wfd = chirp_client_open ( client , remote , mode , perm ) ;"	187:1:4972:5027	857816	5	True				
ANR	857894	IdentifierDecl	"wfd = chirp_client_open ( client , remote , mode , perm )"		857816	0					
ANR	857895	IdentifierDeclType	int		857816	0					
ANR	857896	Identifier	wfd		857816	1					
ANR	857897	AssignmentExpression	"wfd = chirp_client_open ( client , remote , mode , perm )"		857816	2		=			
ANR	857898	Identifier	wfd		857816	0					
ANR	857899	CallExpression	"chirp_client_open ( client , remote , mode , perm )"		857816	1					
ANR	857900	Callee	chirp_client_open		857816	0					
ANR	857901	Identifier	chirp_client_open		857816	0					
ANR	857902	ArgumentList	client		857816	1					
ANR	857903	Argument	client		857816	0					
ANR	857904	Identifier	client		857816	0					
ANR	857905	Argument	remote		857816	1					
ANR	857906	Identifier	remote		857816	0					
ANR	857907	Argument	mode		857816	2					
ANR	857908	Identifier	mode		857816	0					
ANR	857909	Argument	perm		857816	3					
ANR	857910	Identifier	perm		857816	0					
ANR	857911	IfStatement	if ( wfd < 0 )		857816	6					
ANR	857912	Condition	wfd < 0	188:5:5034:5040	857816	0	True				
ANR	857913	RelationalExpression	wfd < 0		857816	0		<			
ANR	857914	Identifier	wfd		857816	0					
ANR	857915	PrimaryExpression	0		857816	1					
ANR	857916	CompoundStatement		21:14:481:481	857816	1					
ANR	857917	Statement	::	189:2:5047:5048	857816	0	True				
ANR	857918	ExpressionStatement	fclose ( rfd )	189:4:5049:5060	857816	1	True				
ANR	857919	CallExpression	fclose ( rfd )		857816	0					
ANR	857920	Callee	fclose		857816	0					
ANR	857921	Identifier	fclose		857816	0					
ANR	857922	ArgumentList	rfd		857816	1					
ANR	857923	Argument	rfd		857816	0					
ANR	857924	Identifier	rfd		857816	0					
ANR	857925	ExpressionStatement	"fprintf ( stderr , ""Can't chirp_client_open %s:%d\\n"" , remote , wfd )"	190:2:5064:5127	857816	2	True				
ANR	857926	CallExpression	"fprintf ( stderr , ""Can't chirp_client_open %s:%d\\n"" , remote , wfd )"		857816	0					
ANR	857927	Callee	fprintf		857816	0					
ANR	857928	Identifier	fprintf		857816	0					
ANR	857929	ArgumentList	stderr		857816	1					
ANR	857930	Argument	stderr		857816	0					
ANR	857931	Identifier	stderr		857816	0					
ANR	857932	Argument	"""Can't chirp_client_open %s:%d\\n"""		857816	1					
ANR	857933	PrimaryExpression	"""Can't chirp_client_open %s:%d\\n"""		857816	0					
ANR	857934	Argument	remote		857816	2					
ANR	857935	Identifier	remote		857816	0					
ANR	857936	Argument	wfd		857816	3					
ANR	857937	Identifier	wfd		857816	0					
ANR	857938	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , - 1 )"	191:2:5131:5164	857816	3	True				
ANR	857939	CallExpression	"DISCONNECT_AND_RETURN ( client , - 1 )"		857816	0					
ANR	857940	Callee	DISCONNECT_AND_RETURN		857816	0					
ANR	857941	Identifier	DISCONNECT_AND_RETURN		857816	0					
ANR	857942	ArgumentList	client		857816	1					
ANR	857943	Argument	client		857816	0					
ANR	857944	Identifier	client		857816	0					
ANR	857945	Argument	- 1		857816	1					
ANR	857946	UnaryOperationExpression	- 1		857816	0					
ANR	857947	UnaryOperator	-		857816	0					
ANR	857948	PrimaryExpression	1		857816	1					
ANR	857949	IdentifierDeclStatement	char buf [ 8192 ] ;	194:1:5171:5185	857816	7	True				
ANR	857950	IdentifierDecl	buf [ 8192 ]		857816	0					
ANR	857951	IdentifierDeclType	char [ 8192 ]		857816	0					
ANR	857952	Identifier	buf		857816	1					
ANR	857953	PrimaryExpression	8192		857816	2					
ANR	857954	IdentifierDeclStatement	int num_read = 0 ;	196:1:5189:5205	857816	8	True				
ANR	857955	IdentifierDecl	num_read = 0		857816	0					
ANR	857956	IdentifierDeclType	int		857816	0					
ANR	857957	Identifier	num_read		857816	1					
ANR	857958	AssignmentExpression	num_read = 0		857816	2		=			
ANR	857959	Identifier	num_read		857816	0					
ANR	857960	PrimaryExpression	0		857816	1					
ANR	857961	DoStatement	do		857816	9					
ANR	857962	CompoundStatement		43:2:889:953	857816	0					
ANR	857963	Statement	num_read	198:2:5215:5222	857816	0	True				
ANR	857964	Statement	=	198:11:5224:5224	857816	1	True				
ANR	857965	Statement	::	198:13:5226:5227	857816	2	True				
ANR	857966	ExpressionStatement	"fread ( buf , 1 , 8192 , rfd )"	198:15:5228:5252	857816	3	True				
ANR	857967	CallExpression	"fread ( buf , 1 , 8192 , rfd )"		857816	0					
ANR	857968	Callee	fread		857816	0					
ANR	857969	Identifier	fread		857816	0					
ANR	857970	ArgumentList	buf		857816	1					
ANR	857971	Argument	buf		857816	0					
ANR	857972	Identifier	buf		857816	0					
ANR	857973	Argument	1		857816	1					
ANR	857974	PrimaryExpression	1		857816	0					
ANR	857975	Argument	8192		857816	2					
ANR	857976	PrimaryExpression	8192		857816	0					
ANR	857977	Argument	rfd		857816	3					
ANR	857978	Identifier	rfd		857816	0					
ANR	857979	IfStatement	if ( num_read < 0 )		857816	4					
ANR	857980	Condition	num_read < 0	199:6:5260:5271	857816	0	True				
ANR	857981	RelationalExpression	num_read < 0		857816	0		<			
ANR	857982	Identifier	num_read		857816	0					
ANR	857983	PrimaryExpression	0		857816	1					
ANR	857984	CompoundStatement		32:20:712:712	857816	1					
ANR	857985	ExpressionStatement	fclose ( rfd )	200:3:5279:5290	857816	0	True				
ANR	857986	CallExpression	fclose ( rfd )		857816	0					
ANR	857987	Callee	fclose		857816	0					
ANR	857988	Identifier	fclose		857816	0					
ANR	857989	ArgumentList	rfd		857816	1					
ANR	857990	Argument	rfd		857816	0					
ANR	857991	Identifier	rfd		857816	0					
ANR	857992	ExpressionStatement	"fprintf ( stderr , ""local read error on %s\\n"" , local )"	201:3:5295:5345	857816	1	True				
ANR	857993	CallExpression	"fprintf ( stderr , ""local read error on %s\\n"" , local )"		857816	0					
ANR	857994	Callee	fprintf		857816	0					
ANR	857995	Identifier	fprintf		857816	0					
ANR	857996	ArgumentList	stderr		857816	1					
ANR	857997	Argument	stderr		857816	0					
ANR	857998	Identifier	stderr		857816	0					
ANR	857999	Argument	"""local read error on %s\\n"""		857816	1					
ANR	858000	PrimaryExpression	"""local read error on %s\\n"""		857816	0					
ANR	858001	Argument	local		857816	2					
ANR	858002	Identifier	local		857816	0					
ANR	858003	ExpressionStatement	"CLOSE_DISCONNECT_AND_RETURN ( client , wfd , - 1 )"	202:3:5350:5394	857816	2	True				
ANR	858004	CallExpression	"CLOSE_DISCONNECT_AND_RETURN ( client , wfd , - 1 )"		857816	0					
ANR	858005	Callee	CLOSE_DISCONNECT_AND_RETURN		857816	0					
ANR	858006	Identifier	CLOSE_DISCONNECT_AND_RETURN		857816	0					
ANR	858007	ArgumentList	client		857816	1					
ANR	858008	Argument	client		857816	0					
ANR	858009	Identifier	client		857816	0					
ANR	858010	Argument	wfd		857816	1					
ANR	858011	Identifier	wfd		857816	0					
ANR	858012	Argument	- 1		857816	2					
ANR	858013	UnaryOperationExpression	- 1		857816	0					
ANR	858014	UnaryOperator	-		857816	0					
ANR	858015	PrimaryExpression	1		857816	1					
ANR	858016	IfStatement	if ( num_read == 0 )		857816	5					
ANR	858017	Condition	num_read == 0	206:6:5417:5429	857816	0	True				
ANR	858018	EqualityExpression	num_read == 0		857816	0		==			
ANR	858019	Identifier	num_read		857816	0					
ANR	858020	PrimaryExpression	0		857816	1					
ANR	858021	CompoundStatement		39:21:870:870	857816	1					
ANR	858022	BreakStatement	break ;	207:3:5437:5442	857816	0	True				
ANR	858023	IdentifierDeclStatement	"int num_written = chirp_client_write ( client , wfd , buf , num_read ) ;"	210:2:5451:5515	857816	6	True				
ANR	858024	IdentifierDecl	"num_written = chirp_client_write ( client , wfd , buf , num_read )"		857816	0					
ANR	858025	IdentifierDeclType	int		857816	0					
ANR	858026	Identifier	num_written		857816	1					
ANR	858027	AssignmentExpression	"num_written = chirp_client_write ( client , wfd , buf , num_read )"		857816	2		=			
ANR	858028	Identifier	num_written		857816	0					
ANR	858029	CallExpression	"chirp_client_write ( client , wfd , buf , num_read )"		857816	1					
ANR	858030	Callee	chirp_client_write		857816	0					
ANR	858031	Identifier	chirp_client_write		857816	0					
ANR	858032	ArgumentList	client		857816	1					
ANR	858033	Argument	client		857816	0					
ANR	858034	Identifier	client		857816	0					
ANR	858035	Argument	wfd		857816	1					
ANR	858036	Identifier	wfd		857816	0					
ANR	858037	Argument	buf		857816	2					
ANR	858038	Identifier	buf		857816	0					
ANR	858039	Argument	num_read		857816	3					
ANR	858040	Identifier	num_read		857816	0					
ANR	858041	IfStatement	if ( num_written != num_read )		857816	7					
ANR	858042	Condition	num_written != num_read	211:6:5523:5545	857816	0	True				
ANR	858043	EqualityExpression	num_written != num_read		857816	0		!=			
ANR	858044	Identifier	num_written		857816	0					
ANR	858045	Identifier	num_read		857816	1					
ANR	858046	CompoundStatement		44:31:986:986	857816	1					
ANR	858047	ExpressionStatement	fclose ( rfd )	212:3:5553:5564	857816	0	True				
ANR	858048	CallExpression	fclose ( rfd )		857816	0					
ANR	858049	Callee	fclose		857816	0					
ANR	858050	Identifier	fclose		857816	0					
ANR	858051	ArgumentList	rfd		857816	1					
ANR	858052	Argument	rfd		857816	0					
ANR	858053	Identifier	rfd		857816	0					
ANR	858054	ExpressionStatement	"fprintf ( stderr , ""Couldn't chirp_write as much as we read\\n"" )"	213:3:5569:5629	857816	1	True				
ANR	858055	CallExpression	"fprintf ( stderr , ""Couldn't chirp_write as much as we read\\n"" )"		857816	0					
ANR	858056	Callee	fprintf		857816	0					
ANR	858057	Identifier	fprintf		857816	0					
ANR	858058	ArgumentList	stderr		857816	1					
ANR	858059	Argument	stderr		857816	0					
ANR	858060	Identifier	stderr		857816	0					
ANR	858061	Argument	"""Couldn't chirp_write as much as we read\\n"""		857816	1					
ANR	858062	PrimaryExpression	"""Couldn't chirp_write as much as we read\\n"""		857816	0					
ANR	858063	ExpressionStatement	"CLOSE_DISCONNECT_AND_RETURN ( client , wfd , - 1 )"	214:3:5634:5678	857816	2	True				
ANR	858064	CallExpression	"CLOSE_DISCONNECT_AND_RETURN ( client , wfd , - 1 )"		857816	0					
ANR	858065	Callee	CLOSE_DISCONNECT_AND_RETURN		857816	0					
ANR	858066	Identifier	CLOSE_DISCONNECT_AND_RETURN		857816	0					
ANR	858067	ArgumentList	client		857816	1					
ANR	858068	Argument	client		857816	0					
ANR	858069	Identifier	client		857816	0					
ANR	858070	Argument	wfd		857816	1					
ANR	858071	Identifier	wfd		857816	0					
ANR	858072	Argument	- 1		857816	2					
ANR	858073	UnaryOperationExpression	- 1		857816	0					
ANR	858074	UnaryOperator	-		857816	0					
ANR	858075	PrimaryExpression	1		857816	1					
ANR	858076	Condition	num_read > 0	217:10:5695:5706	857816	1	True				
ANR	858077	RelationalExpression	num_read > 0		857816	0		>			
ANR	858078	Identifier	num_read		857816	0					
ANR	858079	PrimaryExpression	0		857816	1					
ANR	858080	Statement	::	218:1:5711:5712	857816	10	True				
ANR	858081	ExpressionStatement	fclose ( rfd )	218:3:5713:5724	857816	11	True				
ANR	858082	CallExpression	fclose ( rfd )		857816	0					
ANR	858083	Callee	fclose		857816	0					
ANR	858084	Identifier	fclose		857816	0					
ANR	858085	ArgumentList	rfd		857816	1					
ANR	858086	Argument	rfd		857816	0					
ANR	858087	Identifier	rfd		857816	0					
ANR	858088	ExpressionStatement	"CLOSE_DISCONNECT_AND_RETURN ( client , wfd , 0 )"	220:1:5730:5773	857816	12	True				
ANR	858089	CallExpression	"CLOSE_DISCONNECT_AND_RETURN ( client , wfd , 0 )"		857816	0					
ANR	858090	Callee	CLOSE_DISCONNECT_AND_RETURN		857816	0					
ANR	858091	Identifier	CLOSE_DISCONNECT_AND_RETURN		857816	0					
ANR	858092	ArgumentList	client		857816	1					
ANR	858093	Argument	client		857816	0					
ANR	858094	Identifier	client		857816	0					
ANR	858095	Argument	wfd		857816	1					
ANR	858096	Identifier	wfd		857816	0					
ANR	858097	Argument	0		857816	2					
ANR	858098	PrimaryExpression	0		857816	0					
ANR	858099	ReturnType	int		857816	1					
ANR	858100	Identifier	chirp_put_one_file		857816	2					
ANR	858101	ParameterList	"char * local , char * remote , char * mode , int perm"		857816	3					
ANR	858102	Parameter	char * local	168:19:4512:4522	857816	0	True				
ANR	858103	ParameterType	char *		857816	0					
ANR	858104	Identifier	local		857816	1					
ANR	858105	Parameter	char * remote	168:32:4525:4536	857816	1	True				
ANR	858106	ParameterType	char *		857816	0					
ANR	858107	Identifier	remote		857816	1					
ANR	858108	Parameter	char * mode	168:46:4539:4548	857816	2	True				
ANR	858109	ParameterType	char *		857816	0					
ANR	858110	Identifier	mode		857816	1					
ANR	858111	Parameter	int perm	168:58:4551:4558	857816	3	True				
ANR	858112	ParameterType	int		857816	0					
ANR	858113	Identifier	perm		857816	1					
ANR	858114	CFGEntryNode	ENTRY		857816		True				
ANR	858115	CFGExitNode	EXIT		857816		True				
ANR	858116	Symbol	strcmp		857816						
ANR	858117	Symbol	stdin		857816						
ANR	858118	Symbol	NULL		857816						
ANR	858119	Symbol	perm		857816						
ANR	858120	Symbol	num_read		857816						
ANR	858121	Symbol	num_written		857816						
ANR	858122	Symbol	remote		857816						
ANR	858123	Symbol	stderr		857816						
ANR	858124	Symbol	local		857816						
ANR	858125	Symbol	mode		857816						
ANR	858126	Symbol	rfd		857816						
ANR	858127	Symbol	buf		857816						
ANR	858128	Symbol	wfd		857816						
ANR	858129	Symbol	chirp_client_write		857816						
ANR	858130	Symbol	client		857816						
ANR	858131	Symbol	chirp_client_open		857816						
ANR	858132	Function	chirp_put_one_file	224:0:5807:6900							
ANR	858133	FunctionDef	"chirp_put_one_file (char * local , char * remote , int perm)"		858132	0					
ANR	858134	CompoundStatement		225:56:5867:6900	858132	0					
ANR	858135	IdentifierDeclStatement	struct chirp_client * client ;	226:1:5870:5897	858132	0	True				
ANR	858136	IdentifierDecl	* client		858132	0					
ANR	858137	IdentifierDeclType	struct chirp_client *		858132	0					
ANR	858138	Identifier	client		858132	1					
ANR	858139	ExpressionStatement	CONNECT_STARTER ( client )	228:1:5901:5924	858132	1	True				
ANR	858140	CallExpression	CONNECT_STARTER ( client )		858132	0					
ANR	858141	Callee	CONNECT_STARTER		858132	0					
ANR	858142	Identifier	CONNECT_STARTER		858132	0					
ANR	858143	ArgumentList	client		858132	1					
ANR	858144	Argument	client		858132	0					
ANR	858145	Identifier	client		858132	0					
ANR	858146	Statement	FILE	230:1:5928:5931	858132	2	True				
ANR	858147	Statement	*	230:6:5933:5933	858132	3	True				
ANR	858148	Statement	rfd	230:7:5934:5936	858132	4	True				
ANR	858149	Statement	=	230:11:5938:5938	858132	5	True				
ANR	858150	Statement	::	230:13:5940:5941	858132	6	True				
ANR	858151	ExpressionStatement	"safe_fopen_wrapper_follow ( local , ""rb"" )"	230:15:5942:5980	858132	7	True				
ANR	858152	CallExpression	"safe_fopen_wrapper_follow ( local , ""rb"" )"		858132	0					
ANR	858153	Callee	safe_fopen_wrapper_follow		858132	0					
ANR	858154	Identifier	safe_fopen_wrapper_follow		858132	0					
ANR	858155	ArgumentList	local		858132	1					
ANR	858156	Argument	local		858132	0					
ANR	858157	Identifier	local		858132	0					
ANR	858158	Argument	"""rb"""		858132	1					
ANR	858159	PrimaryExpression	"""rb"""		858132	0					
ANR	858160	IfStatement	if ( rfd == NULL )		858132	8					
ANR	858161	Condition	rfd == NULL	233:5:5989:5999	858132	0	True				
ANR	858162	EqualityExpression	rfd == NULL		858132	0		==			
ANR	858163	Identifier	rfd		858132	0					
ANR	858164	Identifier	NULL		858132	1					
ANR	858165	CompoundStatement		9:18:134:134	858132	1					
ANR	858166	ExpressionStatement	"fprintf ( stderr , ""Can't open local file %s\\n"" , local )"	234:2:6006:6058	858132	0	True				
ANR	858167	CallExpression	"fprintf ( stderr , ""Can't open local file %s\\n"" , local )"		858132	0					
ANR	858168	Callee	fprintf		858132	0					
ANR	858169	Identifier	fprintf		858132	0					
ANR	858170	ArgumentList	stderr		858132	1					
ANR	858171	Argument	stderr		858132	0					
ANR	858172	Identifier	stderr		858132	0					
ANR	858173	Argument	"""Can't open local file %s\\n"""		858132	1					
ANR	858174	PrimaryExpression	"""Can't open local file %s\\n"""		858132	0					
ANR	858175	Argument	local		858132	2					
ANR	858176	Identifier	local		858132	0					
ANR	858177	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , - 1 )"	235:2:6062:6095	858132	1	True				
ANR	858178	CallExpression	"DISCONNECT_AND_RETURN ( client , - 1 )"		858132	0					
ANR	858179	Callee	DISCONNECT_AND_RETURN		858132	0					
ANR	858180	Identifier	DISCONNECT_AND_RETURN		858132	0					
ANR	858181	ArgumentList	client		858132	1					
ANR	858182	Argument	client		858132	0					
ANR	858183	Identifier	client		858132	0					
ANR	858184	Argument	- 1		858132	1					
ANR	858185	UnaryOperationExpression	- 1		858132	0					
ANR	858186	UnaryOperator	-		858132	0					
ANR	858187	PrimaryExpression	1		858132	1					
ANR	858188	IdentifierDeclStatement	struct stat stat_buf ;	239:1:6142:6162	858132	9	True				
ANR	858189	IdentifierDecl	stat_buf		858132	0					
ANR	858190	IdentifierDeclType	struct stat		858132	0					
ANR	858191	Identifier	stat_buf		858132	1					
ANR	858192	ExpressionStatement	"stat ( local , & stat_buf )"	240:1:6165:6187	858132	10	True				
ANR	858193	CallExpression	"stat ( local , & stat_buf )"		858132	0					
ANR	858194	Callee	stat		858132	0					
ANR	858195	Identifier	stat		858132	0					
ANR	858196	ArgumentList	local		858132	1					
ANR	858197	Argument	local		858132	0					
ANR	858198	Identifier	local		858132	0					
ANR	858199	Argument	& stat_buf		858132	1					
ANR	858200	UnaryOperationExpression	& stat_buf		858132	0					
ANR	858201	UnaryOperator	&		858132	0					
ANR	858202	Identifier	stat_buf		858132	1					
ANR	858203	IdentifierDeclStatement	int size = stat_buf . st_size ;	241:1:6190:6217	858132	11	True				
ANR	858204	IdentifierDecl	size = stat_buf . st_size		858132	0					
ANR	858205	IdentifierDeclType	int		858132	0					
ANR	858206	Identifier	size		858132	1					
ANR	858207	AssignmentExpression	size = stat_buf . st_size		858132	2		=			
ANR	858208	Identifier	size		858132	0					
ANR	858209	MemberAccess	stat_buf . st_size		858132	1					
ANR	858210	Identifier	stat_buf		858132	0					
ANR	858211	Identifier	st_size		858132	1					
ANR	858212	IdentifierDeclStatement	char * buf = ( char * ) malloc ( size ) ;	242:1:6220:6251	858132	12	True				
ANR	858213	IdentifierDecl	* buf = ( char * ) malloc ( size )		858132	0					
ANR	858214	IdentifierDeclType	char *		858132	0					
ANR	858215	Identifier	buf		858132	1					
ANR	858216	AssignmentExpression	* buf = ( char * ) malloc ( size )		858132	2		=			
ANR	858217	Identifier	buf		858132	0					
ANR	858218	CastExpression	( char * ) malloc ( size )		858132	1					
ANR	858219	CastTarget	char *		858132	0					
ANR	858220	CallExpression	malloc ( size )		858132	1					
ANR	858221	Callee	malloc		858132	0					
ANR	858222	Identifier	malloc		858132	0					
ANR	858223	ArgumentList	size		858132	1					
ANR	858224	Argument	size		858132	0					
ANR	858225	Identifier	size		858132	0					
ANR	858226	IfStatement	if ( ! buf )		858132	13					
ANR	858227	Condition	! buf	243:6:6259:6263	858132	0	True				
ANR	858228	UnaryOperationExpression	! buf		858132	0					
ANR	858229	UnaryOperator	!		858132	0					
ANR	858230	Identifier	buf		858132	1					
ANR	858231	CompoundStatement		19:13:398:398	858132	1					
ANR	858232	ExpressionStatement	"fprintf ( stderr , ""Can't allocate %d bytes\\n"" , size )"	244:2:6270:6320	858132	0	True				
ANR	858233	CallExpression	"fprintf ( stderr , ""Can't allocate %d bytes\\n"" , size )"		858132	0					
ANR	858234	Callee	fprintf		858132	0					
ANR	858235	Identifier	fprintf		858132	0					
ANR	858236	ArgumentList	stderr		858132	1					
ANR	858237	Argument	stderr		858132	0					
ANR	858238	Identifier	stderr		858132	0					
ANR	858239	Argument	"""Can't allocate %d bytes\\n"""		858132	1					
ANR	858240	PrimaryExpression	"""Can't allocate %d bytes\\n"""		858132	0					
ANR	858241	Argument	size		858132	2					
ANR	858242	Identifier	size		858132	0					
ANR	858243	ExpressionStatement	fclose ( rfd )	245:2:6324:6335	858132	1	True				
ANR	858244	CallExpression	fclose ( rfd )		858132	0					
ANR	858245	Callee	fclose		858132	0					
ANR	858246	Identifier	fclose		858132	0					
ANR	858247	ArgumentList	rfd		858132	1					
ANR	858248	Argument	rfd		858132	0					
ANR	858249	Identifier	rfd		858132	0					
ANR	858250	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , - 1 )"	246:2:6339:6372	858132	2	True				
ANR	858251	CallExpression	"DISCONNECT_AND_RETURN ( client , - 1 )"		858132	0					
ANR	858252	Callee	DISCONNECT_AND_RETURN		858132	0					
ANR	858253	Identifier	DISCONNECT_AND_RETURN		858132	0					
ANR	858254	ArgumentList	client		858132	1					
ANR	858255	Argument	client		858132	0					
ANR	858256	Identifier	client		858132	0					
ANR	858257	Argument	- 1		858132	1					
ANR	858258	UnaryOperationExpression	- 1		858132	0					
ANR	858259	UnaryOperator	-		858132	0					
ANR	858260	PrimaryExpression	1		858132	1					
ANR	858261	Statement	int	249:1:6380:6382	858132	14	True				
ANR	858262	Statement	num_read	249:5:6384:6391	858132	15	True				
ANR	858263	Statement	=	249:14:6393:6393	858132	16	True				
ANR	858264	Statement	::	249:16:6395:6396	858132	17	True				
ANR	858265	ExpressionStatement	"fread ( buf , 1 , size , rfd )"	249:18:6397:6421	858132	18	True				
ANR	858266	CallExpression	"fread ( buf , 1 , size , rfd )"		858132	0					
ANR	858267	Callee	fread		858132	0					
ANR	858268	Identifier	fread		858132	0					
ANR	858269	ArgumentList	buf		858132	1					
ANR	858270	Argument	buf		858132	0					
ANR	858271	Identifier	buf		858132	0					
ANR	858272	Argument	1		858132	1					
ANR	858273	PrimaryExpression	1		858132	0					
ANR	858274	Argument	size		858132	2					
ANR	858275	Identifier	size		858132	0					
ANR	858276	Argument	rfd		858132	3					
ANR	858277	Identifier	rfd		858132	0					
ANR	858278	IfStatement	if ( num_read < 0 )		858132	19					
ANR	858279	Condition	num_read < 0	251:5:6430:6441	858132	0	True				
ANR	858280	RelationalExpression	num_read < 0		858132	0		<			
ANR	858281	Identifier	num_read		858132	0					
ANR	858282	PrimaryExpression	0		858132	1					
ANR	858283	CompoundStatement		27:19:576:576	858132	1					
ANR	858284	ExpressionStatement	fclose ( rfd )	252:2:6448:6459	858132	0	True				
ANR	858285	CallExpression	fclose ( rfd )		858132	0					
ANR	858286	Callee	fclose		858132	0					
ANR	858287	Identifier	fclose		858132	0					
ANR	858288	ArgumentList	rfd		858132	1					
ANR	858289	Argument	rfd		858132	0					
ANR	858290	Identifier	rfd		858132	0					
ANR	858291	ExpressionStatement	free ( buf )	253:2:6463:6472	858132	1	True				
ANR	858292	CallExpression	free ( buf )		858132	0					
ANR	858293	Callee	free		858132	0					
ANR	858294	Identifier	free		858132	0					
ANR	858295	ArgumentList	buf		858132	1					
ANR	858296	Argument	buf		858132	0					
ANR	858297	Identifier	buf		858132	0					
ANR	858298	ExpressionStatement	"fprintf ( stderr , ""Local read error on %s\\n"" , local )"	254:2:6476:6526	858132	2	True				
ANR	858299	CallExpression	"fprintf ( stderr , ""Local read error on %s\\n"" , local )"		858132	0					
ANR	858300	Callee	fprintf		858132	0					
ANR	858301	Identifier	fprintf		858132	0					
ANR	858302	ArgumentList	stderr		858132	1					
ANR	858303	Argument	stderr		858132	0					
ANR	858304	Identifier	stderr		858132	0					
ANR	858305	Argument	"""Local read error on %s\\n"""		858132	1					
ANR	858306	PrimaryExpression	"""Local read error on %s\\n"""		858132	0					
ANR	858307	Argument	local		858132	2					
ANR	858308	Identifier	local		858132	0					
ANR	858309	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , - 1 )"	255:2:6530:6563	858132	3	True				
ANR	858310	CallExpression	"DISCONNECT_AND_RETURN ( client , - 1 )"		858132	0					
ANR	858311	Callee	DISCONNECT_AND_RETURN		858132	0					
ANR	858312	Identifier	DISCONNECT_AND_RETURN		858132	0					
ANR	858313	ArgumentList	client		858132	1					
ANR	858314	Argument	client		858132	0					
ANR	858315	Identifier	client		858132	0					
ANR	858316	Argument	- 1		858132	1					
ANR	858317	UnaryOperationExpression	- 1		858132	0					
ANR	858318	UnaryOperator	-		858132	0					
ANR	858319	PrimaryExpression	1		858132	1					
ANR	858320	IdentifierDeclStatement	"int num_written = chirp_client_putfile_buffer ( client , remote , buf , perm , num_read ) ;"	259:1:6589:6671	858132	20	True				
ANR	858321	IdentifierDecl	"num_written = chirp_client_putfile_buffer ( client , remote , buf , perm , num_read )"		858132	0					
ANR	858322	IdentifierDeclType	int		858132	0					
ANR	858323	Identifier	num_written		858132	1					
ANR	858324	AssignmentExpression	"num_written = chirp_client_putfile_buffer ( client , remote , buf , perm , num_read )"		858132	2		=			
ANR	858325	Identifier	num_written		858132	0					
ANR	858326	CallExpression	"chirp_client_putfile_buffer ( client , remote , buf , perm , num_read )"		858132	1					
ANR	858327	Callee	chirp_client_putfile_buffer		858132	0					
ANR	858328	Identifier	chirp_client_putfile_buffer		858132	0					
ANR	858329	ArgumentList	client		858132	1					
ANR	858330	Argument	client		858132	0					
ANR	858331	Identifier	client		858132	0					
ANR	858332	Argument	remote		858132	1					
ANR	858333	Identifier	remote		858132	0					
ANR	858334	Argument	buf		858132	2					
ANR	858335	Identifier	buf		858132	0					
ANR	858336	Argument	perm		858132	3					
ANR	858337	Identifier	perm		858132	0					
ANR	858338	Argument	num_read		858132	4					
ANR	858339	Identifier	num_read		858132	0					
ANR	858340	IfStatement	if ( num_written != num_read )		858132	21					
ANR	858341	Condition	num_written != num_read	260:5:6678:6700	858132	0	True				
ANR	858342	EqualityExpression	num_written != num_read		858132	0		!=			
ANR	858343	Identifier	num_written		858132	0					
ANR	858344	Identifier	num_read		858132	1					
ANR	858345	CompoundStatement		36:30:835:835	858132	1					
ANR	858346	ExpressionStatement	fclose ( rfd )	261:2:6707:6718	858132	0	True				
ANR	858347	CallExpression	fclose ( rfd )		858132	0					
ANR	858348	Callee	fclose		858132	0					
ANR	858349	Identifier	fclose		858132	0					
ANR	858350	ArgumentList	rfd		858132	1					
ANR	858351	Argument	rfd		858132	0					
ANR	858352	Identifier	rfd		858132	0					
ANR	858353	ExpressionStatement	free ( buf )	262:2:6722:6731	858132	1	True				
ANR	858354	CallExpression	free ( buf )		858132	0					
ANR	858355	Callee	free		858132	0					
ANR	858356	Identifier	free		858132	0					
ANR	858357	ArgumentList	buf		858132	1					
ANR	858358	Argument	buf		858132	0					
ANR	858359	Identifier	buf		858132	0					
ANR	858360	ExpressionStatement	"fprintf ( stderr , ""Couldn't chirp_write as much as we read\\n"" )"	263:2:6735:6795	858132	2	True				
ANR	858361	CallExpression	"fprintf ( stderr , ""Couldn't chirp_write as much as we read\\n"" )"		858132	0					
ANR	858362	Callee	fprintf		858132	0					
ANR	858363	Identifier	fprintf		858132	0					
ANR	858364	ArgumentList	stderr		858132	1					
ANR	858365	Argument	stderr		858132	0					
ANR	858366	Identifier	stderr		858132	0					
ANR	858367	Argument	"""Couldn't chirp_write as much as we read\\n"""		858132	1					
ANR	858368	PrimaryExpression	"""Couldn't chirp_write as much as we read\\n"""		858132	0					
ANR	858369	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , - 1 )"	264:2:6799:6832	858132	3	True				
ANR	858370	CallExpression	"DISCONNECT_AND_RETURN ( client , - 1 )"		858132	0					
ANR	858371	Callee	DISCONNECT_AND_RETURN		858132	0					
ANR	858372	Identifier	DISCONNECT_AND_RETURN		858132	0					
ANR	858373	ArgumentList	client		858132	1					
ANR	858374	Argument	client		858132	0					
ANR	858375	Identifier	client		858132	0					
ANR	858376	Argument	- 1		858132	1					
ANR	858377	UnaryOperationExpression	- 1		858132	0					
ANR	858378	UnaryOperator	-		858132	0					
ANR	858379	PrimaryExpression	1		858132	1					
ANR	858380	ExpressionStatement	fclose ( rfd )	267:1:6840:6851	858132	22	True				
ANR	858381	CallExpression	fclose ( rfd )		858132	0					
ANR	858382	Callee	fclose		858132	0					
ANR	858383	Identifier	fclose		858132	0					
ANR	858384	ArgumentList	rfd		858132	1					
ANR	858385	Argument	rfd		858132	0					
ANR	858386	Identifier	rfd		858132	0					
ANR	858387	ExpressionStatement	free ( buf )	268:1:6854:6863	858132	23	True				
ANR	858388	CallExpression	free ( buf )		858132	0					
ANR	858389	Callee	free		858132	0					
ANR	858390	Identifier	free		858132	0					
ANR	858391	ArgumentList	buf		858132	1					
ANR	858392	Argument	buf		858132	0					
ANR	858393	Identifier	buf		858132	0					
ANR	858394	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , 0 )"	269:1:6866:6898	858132	24	True				
ANR	858395	CallExpression	"DISCONNECT_AND_RETURN ( client , 0 )"		858132	0					
ANR	858396	Callee	DISCONNECT_AND_RETURN		858132	0					
ANR	858397	Identifier	DISCONNECT_AND_RETURN		858132	0					
ANR	858398	ArgumentList	client		858132	1					
ANR	858399	Argument	client		858132	0					
ANR	858400	Identifier	client		858132	0					
ANR	858401	Argument	0		858132	1					
ANR	858402	PrimaryExpression	0		858132	0					
ANR	858403	ReturnType	int		858132	1					
ANR	858404	Identifier	chirp_put_one_file		858132	2					
ANR	858405	ParameterList	"char * local , char * remote , int perm"		858132	3					
ANR	858406	Parameter	char * local	225:19:5830:5840	858132	0	True				
ANR	858407	ParameterType	char *		858132	0					
ANR	858408	Identifier	local		858132	1					
ANR	858409	Parameter	char * remote	225:32:5843:5854	858132	1	True				
ANR	858410	ParameterType	char *		858132	0					
ANR	858411	Identifier	remote		858132	1					
ANR	858412	Parameter	int perm	225:46:5857:5864	858132	2	True				
ANR	858413	ParameterType	int		858132	0					
ANR	858414	Identifier	perm		858132	1					
ANR	858415	CFGEntryNode	ENTRY		858132		True				
ANR	858416	CFGExitNode	EXIT		858132		True				
ANR	858417	Symbol	malloc		858132						
ANR	858418	Symbol	NULL		858132						
ANR	858419	Symbol	perm		858132						
ANR	858420	Symbol	num_read		858132						
ANR	858421	Symbol	& stat_buf		858132						
ANR	858422	Symbol	stat_buf		858132						
ANR	858423	Symbol	num_written		858132						
ANR	858424	Symbol	chirp_client_putfile_buffer		858132						
ANR	858425	Symbol	remote		858132						
ANR	858426	Symbol	stderr		858132						
ANR	858427	Symbol	local		858132						
ANR	858428	Symbol	rfd		858132						
ANR	858429	Symbol	stat_buf . st_size		858132						
ANR	858430	Symbol	buf		858132						
ANR	858431	Symbol	size		858132						
ANR	858432	Symbol	client		858132						
ANR	858433	Function	chirp_fetch	278:0:7020:7198							
ANR	858434	FunctionDef	"chirp_fetch (int argc , char * * argv)"		858433	0					
ANR	858435	CompoundStatement		278:39:7059:7198	858433	0					
ANR	858436	IfStatement	if ( argc != 4 )		858433	0					
ANR	858437	Condition	argc != 4	279:5:7066:7074	858433	0	True				
ANR	858438	EqualityExpression	argc != 4		858433	0		!=			
ANR	858439	Identifier	argc		858433	0					
ANR	858440	PrimaryExpression	4		858433	1					
ANR	858441	CompoundStatement		2:16:17:17	858433	1					
ANR	858442	ExpressionStatement	"printf ( ""condor_chirp fetch remote_file local_file\\n"" )"	280:2:7081:7134	858433	0	True				
ANR	858443	CallExpression	"printf ( ""condor_chirp fetch remote_file local_file\\n"" )"		858433	0					
ANR	858444	Callee	printf		858433	0					
ANR	858445	Identifier	printf		858433	0					
ANR	858446	ArgumentList	"""condor_chirp fetch remote_file local_file\\n"""		858433	1					
ANR	858447	Argument	"""condor_chirp fetch remote_file local_file\\n"""		858433	0					
ANR	858448	PrimaryExpression	"""condor_chirp fetch remote_file local_file\\n"""		858433	0					
ANR	858449	ReturnStatement	return - 1 ;	281:2:7138:7147	858433	1	True				
ANR	858450	UnaryOperationExpression	- 1		858433	0					
ANR	858451	UnaryOperator	-		858433	0					
ANR	858452	PrimaryExpression	1		858433	1					
ANR	858453	ReturnStatement	"return chirp_get_one_file ( argv [ 2 ] , argv [ 3 ] ) ;"	283:1:7153:7196	858433	1	True				
ANR	858454	CallExpression	"chirp_get_one_file ( argv [ 2 ] , argv [ 3 ] )"		858433	0					
ANR	858455	Callee	chirp_get_one_file		858433	0					
ANR	858456	Identifier	chirp_get_one_file		858433	0					
ANR	858457	ArgumentList	argv [ 2 ]		858433	1					
ANR	858458	Argument	argv [ 2 ]		858433	0					
ANR	858459	ArrayIndexing	argv [ 2 ]		858433	0					
ANR	858460	Identifier	argv		858433	0					
ANR	858461	PrimaryExpression	2		858433	1					
ANR	858462	Argument	argv [ 3 ]		858433	1					
ANR	858463	ArrayIndexing	argv [ 3 ]		858433	0					
ANR	858464	Identifier	argv		858433	0					
ANR	858465	PrimaryExpression	3		858433	1					
ANR	858466	ReturnType	int		858433	1					
ANR	858467	Identifier	chirp_fetch		858433	2					
ANR	858468	ParameterList	"int argc , char * * argv"		858433	3					
ANR	858469	Parameter	int argc	278:16:7036:7043	858433	0	True				
ANR	858470	ParameterType	int		858433	0					
ANR	858471	Identifier	argc		858433	1					
ANR	858472	Parameter	char * * argv	278:26:7046:7056	858433	1	True				
ANR	858473	ParameterType	char * *		858433	0					
ANR	858474	Identifier	argv		858433	1					
ANR	858475	CFGEntryNode	ENTRY		858433		True				
ANR	858476	CFGExitNode	EXIT		858433		True				
ANR	858477	Symbol	argc		858433						
ANR	858478	Symbol	chirp_get_one_file		858433						
ANR	858479	Symbol	* argv		858433						
ANR	858480	Symbol	argv		858433						
ANR	858481	Function	chirp_put	292:0:7314:8281							
ANR	858482	FunctionDef	"chirp_put (int argc , char * * argv)"		858481	0					
ANR	858483	CompoundStatement		292:37:7351:8281	858481	0					
ANR	858484	IdentifierDeclStatement	int fileOffset = 2 ;	294:1:7355:7373	858481	0	True				
ANR	858485	IdentifierDecl	fileOffset = 2		858481	0					
ANR	858486	IdentifierDeclType	int		858481	0					
ANR	858487	Identifier	fileOffset		858481	1					
ANR	858488	AssignmentExpression	fileOffset = 2		858481	2		=			
ANR	858489	Identifier	fileOffset		858481	0					
ANR	858490	PrimaryExpression	2		858481	1					
ANR	858491	IdentifierDeclStatement	"char default_mode [ ] = ""cwt"" ;"	295:1:7376:7404	858481	1	True				
ANR	858492	IdentifierDecl	"default_mode [ ] = ""cwt"""		858481	0					
ANR	858493	IdentifierDeclType	char [ ]		858481	0					
ANR	858494	Identifier	default_mode		858481	1					
ANR	858495	AssignmentExpression	"default_mode [ ] = ""cwt"""		858481	2		=			
ANR	858496	Identifier	default_mode		858481	0					
ANR	858497	PrimaryExpression	"""cwt"""		858481	1					
ANR	858498	IdentifierDeclStatement	char * mode = default_mode ;	296:1:7407:7432	858481	2	True				
ANR	858499	IdentifierDecl	* mode = default_mode		858481	0					
ANR	858500	IdentifierDeclType	char *		858481	0					
ANR	858501	Identifier	mode		858481	1					
ANR	858502	AssignmentExpression	* mode = default_mode		858481	2		=			
ANR	858503	Identifier	default_mode		858481	0					
ANR	858504	Identifier	default_mode		858481	1					
ANR	858505	IdentifierDeclStatement	unsigned perm = 0777 ;	297:1:7435:7455	858481	3	True				
ANR	858506	IdentifierDecl	perm = 0777		858481	0					
ANR	858507	IdentifierDeclType	unsigned		858481	0					
ANR	858508	Identifier	perm		858481	1					
ANR	858509	AssignmentExpression	perm = 0777		858481	2		=			
ANR	858510	Identifier	perm		858481	0					
ANR	858511	PrimaryExpression	0777		858481	1					
ANR	858512	IdentifierDeclStatement	bool more = true ;	299:1:7459:7475	858481	4	True				
ANR	858513	IdentifierDecl	more = true		858481	0					
ANR	858514	IdentifierDeclType	bool		858481	0					
ANR	858515	Identifier	more		858481	1					
ANR	858516	AssignmentExpression	more = true		858481	2		=			
ANR	858517	Identifier	true		858481	0					
ANR	858518	Identifier	true		858481	1					
ANR	858519	WhileStatement	while ( more && fileOffset + 1 < argc )		858481	5					
ANR	858520	Condition	more && fileOffset + 1 < argc	300:8:7485:7513	858481	0	True				
ANR	858521	AndExpression	more && fileOffset + 1 < argc		858481	0		&&			
ANR	858522	Identifier	more		858481	0					
ANR	858523	RelationalExpression	fileOffset + 1 < argc		858481	1		<			
ANR	858524	AdditiveExpression	fileOffset + 1		858481	0		+			
ANR	858525	Identifier	fileOffset		858481	0					
ANR	858526	PrimaryExpression	1		858481	1					
ANR	858527	Identifier	argc		858481	1					
ANR	858528	CompoundStatement		9:39:164:164	858481	1					
ANR	858529	IfStatement	"if ( strcmp ( argv [ fileOffset ] , ""-mode"" ) == 0 )"		858481	0					
ANR	858530	Condition	"strcmp ( argv [ fileOffset ] , ""-mode"" ) == 0"	302:6:7525:7562	858481	0	True				
ANR	858531	EqualityExpression	"strcmp ( argv [ fileOffset ] , ""-mode"" ) == 0"		858481	0		==			
ANR	858532	CallExpression	"strcmp ( argv [ fileOffset ] , ""-mode"" )"		858481	0					
ANR	858533	Callee	strcmp		858481	0					
ANR	858534	Identifier	strcmp		858481	0					
ANR	858535	ArgumentList	argv [ fileOffset ]		858481	1					
ANR	858536	Argument	argv [ fileOffset ]		858481	0					
ANR	858537	ArrayIndexing	argv [ fileOffset ]		858481	0					
ANR	858538	Identifier	argv		858481	0					
ANR	858539	Identifier	fileOffset		858481	1					
ANR	858540	Argument	"""-mode"""		858481	1					
ANR	858541	PrimaryExpression	"""-mode"""		858481	0					
ANR	858542	PrimaryExpression	0		858481	1					
ANR	858543	CompoundStatement		11:46:213:213	858481	1					
ANR	858544	ExpressionStatement	mode = argv [ fileOffset + 1 ]	303:3:7570:7595	858481	0	True				
ANR	858545	AssignmentExpression	mode = argv [ fileOffset + 1 ]		858481	0		=			
ANR	858546	Identifier	mode		858481	0					
ANR	858547	ArrayIndexing	argv [ fileOffset + 1 ]		858481	1					
ANR	858548	Identifier	argv		858481	0					
ANR	858549	AdditiveExpression	fileOffset + 1		858481	1		+			
ANR	858550	Identifier	fileOffset		858481	0					
ANR	858551	PrimaryExpression	1		858481	1					
ANR	858552	ExpressionStatement	fileOffset += 2	304:3:7600:7615	858481	1	True				
ANR	858553	AssignmentExpression	fileOffset += 2		858481	0		+=			
ANR	858554	Identifier	fileOffset		858481	0					
ANR	858555	PrimaryExpression	2		858481	1					
ANR	858556	ExpressionStatement	more = true	305:3:7620:7631	858481	2	True				
ANR	858557	AssignmentExpression	more = true		858481	0		=			
ANR	858558	Identifier	more		858481	0					
ANR	858559	Identifier	true		858481	1					
ANR	858560	ElseStatement	else		858481	0					
ANR	858561	IfStatement	"if ( strcmp ( argv [ fileOffset ] , ""-perm"" ) == 0 )"		858481	0					
ANR	858562	Condition	"strcmp ( argv [ fileOffset ] , ""-perm"" ) == 0"	307:11:7648:7685	858481	0	True				
ANR	858563	EqualityExpression	"strcmp ( argv [ fileOffset ] , ""-perm"" ) == 0"		858481	0		==			
ANR	858564	CallExpression	"strcmp ( argv [ fileOffset ] , ""-perm"" )"		858481	0					
ANR	858565	Callee	strcmp		858481	0					
ANR	858566	Identifier	strcmp		858481	0					
ANR	858567	ArgumentList	argv [ fileOffset ]		858481	1					
ANR	858568	Argument	argv [ fileOffset ]		858481	0					
ANR	858569	ArrayIndexing	argv [ fileOffset ]		858481	0					
ANR	858570	Identifier	argv		858481	0					
ANR	858571	Identifier	fileOffset		858481	1					
ANR	858572	Argument	"""-perm"""		858481	1					
ANR	858573	PrimaryExpression	"""-perm"""		858481	0					
ANR	858574	PrimaryExpression	0		858481	1					
ANR	858575	CompoundStatement		17:3:341:377	858481	1					
ANR	858576	IdentifierDeclStatement	char * permStr = argv [ fileOffset + 1 ] ;	308:3:7693:7729	858481	0	True				
ANR	858577	IdentifierDecl	* permStr = argv [ fileOffset + 1 ]		858481	0					
ANR	858578	IdentifierDeclType	char *		858481	0					
ANR	858579	Identifier	permStr		858481	1					
ANR	858580	AssignmentExpression	* permStr = argv [ fileOffset + 1 ]		858481	2		=			
ANR	858581	Identifier	permStr		858481	0					
ANR	858582	ArrayIndexing	argv [ fileOffset + 1 ]		858481	1					
ANR	858583	Identifier	argv		858481	0					
ANR	858584	AdditiveExpression	fileOffset + 1		858481	1		+			
ANR	858585	Identifier	fileOffset		858481	0					
ANR	858586	PrimaryExpression	1		858481	1					
ANR	858587	ExpressionStatement	"perm = strtol ( permStr , NULL , 8 )"	309:3:7734:7765	858481	1	True				
ANR	858588	AssignmentExpression	"perm = strtol ( permStr , NULL , 8 )"		858481	0		=			
ANR	858589	Identifier	perm		858481	0					
ANR	858590	CallExpression	"strtol ( permStr , NULL , 8 )"		858481	1					
ANR	858591	Callee	strtol		858481	0					
ANR	858592	Identifier	strtol		858481	0					
ANR	858593	ArgumentList	permStr		858481	1					
ANR	858594	Argument	permStr		858481	0					
ANR	858595	Identifier	permStr		858481	0					
ANR	858596	Argument	NULL		858481	1					
ANR	858597	Identifier	NULL		858481	0					
ANR	858598	Argument	8		858481	2					
ANR	858599	PrimaryExpression	8		858481	0					
ANR	858600	ExpressionStatement	fileOffset += 2	310:3:7770:7785	858481	2	True				
ANR	858601	AssignmentExpression	fileOffset += 2		858481	0		+=			
ANR	858602	Identifier	fileOffset		858481	0					
ANR	858603	PrimaryExpression	2		858481	1					
ANR	858604	ExpressionStatement	more = true	311:3:7790:7801	858481	3	True				
ANR	858605	AssignmentExpression	more = true		858481	0		=			
ANR	858606	Identifier	more		858481	0					
ANR	858607	Identifier	true		858481	1					
ANR	858608	ElseStatement	else		858481	0					
ANR	858609	CompoundStatement		22:7:462:462	858481	0					
ANR	858610	ExpressionStatement	more = false	314:3:7819:7831	858481	0	True				
ANR	858611	AssignmentExpression	more = false		858481	0		=			
ANR	858612	Identifier	more		858481	0					
ANR	858613	Identifier	false		858481	1					
ANR	858614	IfStatement	if ( fileOffset + 1 >= argc || argc > fileOffset + 2 )		858481	6					
ANR	858615	Condition	fileOffset + 1 >= argc || argc > fileOffset + 2	318:4:7845:7891	858481	0	True				
ANR	858616	OrExpression	fileOffset + 1 >= argc || argc > fileOffset + 2		858481	0		||			
ANR	858617	RelationalExpression	fileOffset + 1 >= argc		858481	0		>=			
ANR	858618	AdditiveExpression	fileOffset + 1		858481	0		+			
ANR	858619	Identifier	fileOffset		858481	0					
ANR	858620	PrimaryExpression	1		858481	1					
ANR	858621	Identifier	argc		858481	1					
ANR	858622	RelationalExpression	argc > fileOffset + 2		858481	1		>			
ANR	858623	Identifier	argc		858481	0					
ANR	858624	AdditiveExpression	fileOffset + 2		858481	1		+			
ANR	858625	Identifier	fileOffset		858481	0					
ANR	858626	PrimaryExpression	2		858481	1					
ANR	858627	CompoundStatement		27:53:542:542	858481	1					
ANR	858628	Statement	printf	319:2:7898:7903	858481	0	True				
ANR	858629	Statement	(	319:8:7904:7904	858481	1	True				
ANR	858630	Statement	"""condor_chirp put  [-mode mode] [-perm perm] local_file """	319:9:7905:7961	858481	2	True				
ANR	858631	Statement	"""remote_file\\n"""	320:6:7969:7983	858481	3	True				
ANR	858632	Statement	)	320:21:7984:7984	858481	4	True				
ANR	858633	ExpressionStatement		320:22:7985:7985	858481	5	True				
ANR	858634	ReturnStatement	return - 1 ;	321:2:7989:7998	858481	6	True				
ANR	858635	UnaryOperationExpression	- 1		858481	0					
ANR	858636	UnaryOperator	-		858481	0					
ANR	858637	PrimaryExpression	1		858481	1					
ANR	858638	IfStatement	"if ( strcmp ( mode , ""cwt"" ) == 0 && strcmp ( argv [ fileOffset ] , ""-"" ) != 0 )"		858481	7					
ANR	858639	Condition	"strcmp ( mode , ""cwt"" ) == 0 && strcmp ( argv [ fileOffset ] , ""-"" ) != 0"	325:4:8025:8086	858481	0	True				
ANR	858640	AndExpression	"strcmp ( mode , ""cwt"" ) == 0 && strcmp ( argv [ fileOffset ] , ""-"" ) != 0"		858481	0		&&			
ANR	858641	EqualityExpression	"strcmp ( mode , ""cwt"" ) == 0"		858481	0		==			
ANR	858642	CallExpression	"strcmp ( mode , ""cwt"" )"		858481	0					
ANR	858643	Callee	strcmp		858481	0					
ANR	858644	Identifier	strcmp		858481	0					
ANR	858645	ArgumentList	mode		858481	1					
ANR	858646	Argument	mode		858481	0					
ANR	858647	Identifier	mode		858481	0					
ANR	858648	Argument	"""cwt"""		858481	1					
ANR	858649	PrimaryExpression	"""cwt"""		858481	0					
ANR	858650	PrimaryExpression	0		858481	1					
ANR	858651	EqualityExpression	"strcmp ( argv [ fileOffset ] , ""-"" ) != 0"		858481	1		!=			
ANR	858652	CallExpression	"strcmp ( argv [ fileOffset ] , ""-"" )"		858481	0					
ANR	858653	Callee	strcmp		858481	0					
ANR	858654	Identifier	strcmp		858481	0					
ANR	858655	ArgumentList	argv [ fileOffset ]		858481	1					
ANR	858656	Argument	argv [ fileOffset ]		858481	0					
ANR	858657	ArrayIndexing	argv [ fileOffset ]		858481	0					
ANR	858658	Identifier	argv		858481	0					
ANR	858659	Identifier	fileOffset		858481	1					
ANR	858660	Argument	"""-"""		858481	1					
ANR	858661	PrimaryExpression	"""-"""		858481	0					
ANR	858662	PrimaryExpression	0		858481	1					
ANR	858663	CompoundStatement		34:68:737:737	858481	1					
ANR	858664	ReturnStatement	"return chirp_put_one_file ( argv [ fileOffset ] , argv [ fileOffset + 1 ] , perm ) ;"	326:2:8093:8164	858481	0	True				
ANR	858665	CallExpression	"chirp_put_one_file ( argv [ fileOffset ] , argv [ fileOffset + 1 ] , perm )"		858481	0					
ANR	858666	Callee	chirp_put_one_file		858481	0					
ANR	858667	Identifier	chirp_put_one_file		858481	0					
ANR	858668	ArgumentList	argv [ fileOffset ]		858481	1					
ANR	858669	Argument	argv [ fileOffset ]		858481	0					
ANR	858670	ArrayIndexing	argv [ fileOffset ]		858481	0					
ANR	858671	Identifier	argv		858481	0					
ANR	858672	Identifier	fileOffset		858481	1					
ANR	858673	Argument	argv [ fileOffset + 1 ]		858481	1					
ANR	858674	ArrayIndexing	argv [ fileOffset + 1 ]		858481	0					
ANR	858675	Identifier	argv		858481	0					
ANR	858676	AdditiveExpression	fileOffset + 1		858481	1		+			
ANR	858677	Identifier	fileOffset		858481	0					
ANR	858678	PrimaryExpression	1		858481	1					
ANR	858679	Argument	perm		858481	2					
ANR	858680	Identifier	perm		858481	0					
ANR	858681	ElseStatement	else		858481	0					
ANR	858682	CompoundStatement		38:6:843:843	858481	0					
ANR	858683	ReturnStatement	"return chirp_put_one_file ( argv [ fileOffset ] , argv [ fileOffset + 1 ] , mode , perm ) ;"	330:2:8199:8276	858481	0	True				
ANR	858684	CallExpression	"chirp_put_one_file ( argv [ fileOffset ] , argv [ fileOffset + 1 ] , mode , perm )"		858481	0					
ANR	858685	Callee	chirp_put_one_file		858481	0					
ANR	858686	Identifier	chirp_put_one_file		858481	0					
ANR	858687	ArgumentList	argv [ fileOffset ]		858481	1					
ANR	858688	Argument	argv [ fileOffset ]		858481	0					
ANR	858689	ArrayIndexing	argv [ fileOffset ]		858481	0					
ANR	858690	Identifier	argv		858481	0					
ANR	858691	Identifier	fileOffset		858481	1					
ANR	858692	Argument	argv [ fileOffset + 1 ]		858481	1					
ANR	858693	ArrayIndexing	argv [ fileOffset + 1 ]		858481	0					
ANR	858694	Identifier	argv		858481	0					
ANR	858695	AdditiveExpression	fileOffset + 1		858481	1		+			
ANR	858696	Identifier	fileOffset		858481	0					
ANR	858697	PrimaryExpression	1		858481	1					
ANR	858698	Argument	mode		858481	2					
ANR	858699	Identifier	mode		858481	0					
ANR	858700	Argument	perm		858481	3					
ANR	858701	Identifier	perm		858481	0					
ANR	858702	ReturnType	int		858481	1					
ANR	858703	Identifier	chirp_put		858481	2					
ANR	858704	ParameterList	"int argc , char * * argv"		858481	3					
ANR	858705	Parameter	int argc	292:14:7328:7335	858481	0	True				
ANR	858706	ParameterType	int		858481	0					
ANR	858707	Identifier	argc		858481	1					
ANR	858708	Parameter	char * * argv	292:24:7338:7348	858481	1	True				
ANR	858709	ParameterType	char * *		858481	0					
ANR	858710	Identifier	argv		858481	1					
ANR	858711	CFGEntryNode	ENTRY		858481		True				
ANR	858712	CFGExitNode	EXIT		858481		True				
ANR	858713	Symbol	argc		858481						
ANR	858714	Symbol	strcmp		858481						
ANR	858715	Symbol	NULL		858481						
ANR	858716	Symbol	perm		858481						
ANR	858717	Symbol	* fileOffset		858481						
ANR	858718	Symbol	more		858481						
ANR	858719	Symbol	false		858481						
ANR	858720	Symbol	fileOffset		858481						
ANR	858721	Symbol	* argv		858481						
ANR	858722	Symbol	argv		858481						
ANR	858723	Symbol	permStr		858481						
ANR	858724	Symbol	mode		858481						
ANR	858725	Symbol	strtol		858481						
ANR	858726	Symbol	true		858481						
ANR	858727	Symbol	default_mode		858481						
ANR	858728	Symbol	chirp_put_one_file		858481						
ANR	858729	Function	chirp_remove	339:0:8351:8627							
ANR	858730	FunctionDef	"chirp_remove (int argc , char * * argv)"		858729	0					
ANR	858731	CompoundStatement		339:40:8391:8627	858729	0					
ANR	858732	IfStatement	if ( argc != 3 )		858729	0					
ANR	858733	Condition	argc != 3	340:5:8398:8406	858729	0	True				
ANR	858734	EqualityExpression	argc != 3		858729	0		!=			
ANR	858735	Identifier	argc		858729	0					
ANR	858736	PrimaryExpression	3		858729	1					
ANR	858737	CompoundStatement		2:16:17:17	858729	1					
ANR	858738	ExpressionStatement	"printf ( ""condor_chirp remove remote_file\\n"" )"	341:2:8413:8456	858729	0	True				
ANR	858739	CallExpression	"printf ( ""condor_chirp remove remote_file\\n"" )"		858729	0					
ANR	858740	Callee	printf		858729	0					
ANR	858741	Identifier	printf		858729	0					
ANR	858742	ArgumentList	"""condor_chirp remove remote_file\\n"""		858729	1					
ANR	858743	Argument	"""condor_chirp remove remote_file\\n"""		858729	0					
ANR	858744	PrimaryExpression	"""condor_chirp remove remote_file\\n"""		858729	0					
ANR	858745	ReturnStatement	return - 1 ;	342:2:8460:8469	858729	1	True				
ANR	858746	UnaryOperationExpression	- 1		858729	0					
ANR	858747	UnaryOperator	-		858729	0					
ANR	858748	PrimaryExpression	1		858729	1					
ANR	858749	IdentifierDeclStatement	struct chirp_client * client = 0 ;	345:1:8476:8507	858729	1	True				
ANR	858750	IdentifierDecl	* client = 0		858729	0					
ANR	858751	IdentifierDeclType	struct chirp_client *		858729	0					
ANR	858752	Identifier	client		858729	1					
ANR	858753	AssignmentExpression	* client = 0		858729	2		=			
ANR	858754	Identifier	client		858729	0					
ANR	858755	PrimaryExpression	0		858729	1					
ANR	858756	ExpressionStatement	CONNECT_STARTER ( client )	346:1:8510:8533	858729	2	True				
ANR	858757	CallExpression	CONNECT_STARTER ( client )		858729	0					
ANR	858758	Callee	CONNECT_STARTER		858729	0					
ANR	858759	Identifier	CONNECT_STARTER		858729	0					
ANR	858760	ArgumentList	client		858729	1					
ANR	858761	Argument	client		858729	0					
ANR	858762	Identifier	client		858729	0					
ANR	858763	IdentifierDeclStatement	"int rval = chirp_client_unlink ( client , argv [ 2 ] ) ;"	348:4:8540:8587	858729	3	True				
ANR	858764	IdentifierDecl	"rval = chirp_client_unlink ( client , argv [ 2 ] )"		858729	0					
ANR	858765	IdentifierDeclType	int		858729	0					
ANR	858766	Identifier	rval		858729	1					
ANR	858767	AssignmentExpression	"rval = chirp_client_unlink ( client , argv [ 2 ] )"		858729	2		=			
ANR	858768	Identifier	rval		858729	0					
ANR	858769	CallExpression	"chirp_client_unlink ( client , argv [ 2 ] )"		858729	1					
ANR	858770	Callee	chirp_client_unlink		858729	0					
ANR	858771	Identifier	chirp_client_unlink		858729	0					
ANR	858772	ArgumentList	client		858729	1					
ANR	858773	Argument	client		858729	0					
ANR	858774	Identifier	client		858729	0					
ANR	858775	Argument	argv [ 2 ]		858729	1					
ANR	858776	ArrayIndexing	argv [ 2 ]		858729	0					
ANR	858777	Identifier	argv		858729	0					
ANR	858778	PrimaryExpression	2		858729	1					
ANR	858779	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , rval )"	349:1:8590:8625	858729	4	True				
ANR	858780	CallExpression	"DISCONNECT_AND_RETURN ( client , rval )"		858729	0					
ANR	858781	Callee	DISCONNECT_AND_RETURN		858729	0					
ANR	858782	Identifier	DISCONNECT_AND_RETURN		858729	0					
ANR	858783	ArgumentList	client		858729	1					
ANR	858784	Argument	client		858729	0					
ANR	858785	Identifier	client		858729	0					
ANR	858786	Argument	rval		858729	1					
ANR	858787	Identifier	rval		858729	0					
ANR	858788	ReturnType	int		858729	1					
ANR	858789	Identifier	chirp_remove		858729	2					
ANR	858790	ParameterList	"int argc , char * * argv"		858729	3					
ANR	858791	Parameter	int argc	339:17:8368:8375	858729	0	True				
ANR	858792	ParameterType	int		858729	0					
ANR	858793	Identifier	argc		858729	1					
ANR	858794	Parameter	char * * argv	339:27:8378:8388	858729	1	True				
ANR	858795	ParameterType	char * *		858729	0					
ANR	858796	Identifier	argv		858729	1					
ANR	858797	CFGEntryNode	ENTRY		858729		True				
ANR	858798	CFGExitNode	EXIT		858729		True				
ANR	858799	Symbol	argc		858729						
ANR	858800	Symbol	client		858729						
ANR	858801	Symbol	chirp_client_unlink		858729						
ANR	858802	Symbol	* argv		858729						
ANR	858803	Symbol	rval		858729						
ANR	858804	Symbol	argv		858729						
ANR	858805	Function	chirp_get_job_attr	357:0:8699:9033							
ANR	858806	FunctionDef	"chirp_get_job_attr (int argc , char * * argv)"		858805	0					
ANR	858807	CompoundStatement		357:46:8745:9033	858805	0					
ANR	858808	IfStatement	if ( argc != 3 )		858805	0					
ANR	858809	Condition	argc != 3	358:5:8752:8760	858805	0	True				
ANR	858810	EqualityExpression	argc != 3		858805	0		!=			
ANR	858811	Identifier	argc		858805	0					
ANR	858812	PrimaryExpression	3		858805	1					
ANR	858813	CompoundStatement		2:16:17:17	858805	1					
ANR	858814	ExpressionStatement	"printf ( ""condor_chirp get_job_attr AttributeName\\n"" )"	359:2:8767:8818	858805	0	True				
ANR	858815	CallExpression	"printf ( ""condor_chirp get_job_attr AttributeName\\n"" )"		858805	0					
ANR	858816	Callee	printf		858805	0					
ANR	858817	Identifier	printf		858805	0					
ANR	858818	ArgumentList	"""condor_chirp get_job_attr AttributeName\\n"""		858805	1					
ANR	858819	Argument	"""condor_chirp get_job_attr AttributeName\\n"""		858805	0					
ANR	858820	PrimaryExpression	"""condor_chirp get_job_attr AttributeName\\n"""		858805	0					
ANR	858821	ReturnStatement	return - 1 ;	360:2:8822:8831	858805	1	True				
ANR	858822	UnaryOperationExpression	- 1		858805	0					
ANR	858823	UnaryOperator	-		858805	0					
ANR	858824	PrimaryExpression	1		858805	1					
ANR	858825	IdentifierDeclStatement	struct chirp_client * client = 0 ;	363:1:8838:8869	858805	1	True				
ANR	858826	IdentifierDecl	* client = 0		858805	0					
ANR	858827	IdentifierDeclType	struct chirp_client *		858805	0					
ANR	858828	Identifier	client		858805	1					
ANR	858829	AssignmentExpression	* client = 0		858805	2		=			
ANR	858830	Identifier	client		858805	0					
ANR	858831	PrimaryExpression	0		858805	1					
ANR	858832	ExpressionStatement	CONNECT_STARTER ( client )	364:1:8872:8895	858805	2	True				
ANR	858833	CallExpression	CONNECT_STARTER ( client )		858805	0					
ANR	858834	Callee	CONNECT_STARTER		858805	0					
ANR	858835	Identifier	CONNECT_STARTER		858805	0					
ANR	858836	ArgumentList	client		858805	1					
ANR	858837	Argument	client		858805	0					
ANR	858838	Identifier	client		858805	0					
ANR	858839	IdentifierDeclStatement	char * p = 0 ;	366:1:8899:8910	858805	3	True				
ANR	858840	IdentifierDecl	* p = 0		858805	0					
ANR	858841	IdentifierDeclType	char *		858805	0					
ANR	858842	Identifier	p		858805	1					
ANR	858843	AssignmentExpression	* p = 0		858805	2		=			
ANR	858844	Identifier	p		858805	0					
ANR	858845	PrimaryExpression	0		858805	1					
ANR	858846	IdentifierDeclStatement	"int len = chirp_client_get_job_attr ( client , argv [ 2 ] , & p ) ;"	367:1:8913:8969	858805	4	True				
ANR	858847	IdentifierDecl	"len = chirp_client_get_job_attr ( client , argv [ 2 ] , & p )"		858805	0					
ANR	858848	IdentifierDeclType	int		858805	0					
ANR	858849	Identifier	len		858805	1					
ANR	858850	AssignmentExpression	"len = chirp_client_get_job_attr ( client , argv [ 2 ] , & p )"		858805	2		=			
ANR	858851	Identifier	len		858805	0					
ANR	858852	CallExpression	"chirp_client_get_job_attr ( client , argv [ 2 ] , & p )"		858805	1					
ANR	858853	Callee	chirp_client_get_job_attr		858805	0					
ANR	858854	Identifier	chirp_client_get_job_attr		858805	0					
ANR	858855	ArgumentList	client		858805	1					
ANR	858856	Argument	client		858805	0					
ANR	858857	Identifier	client		858805	0					
ANR	858858	Argument	argv [ 2 ]		858805	1					
ANR	858859	ArrayIndexing	argv [ 2 ]		858805	0					
ANR	858860	Identifier	argv		858805	0					
ANR	858861	PrimaryExpression	2		858805	1					
ANR	858862	Argument	& p		858805	2					
ANR	858863	UnaryOperationExpression	& p		858805	0					
ANR	858864	UnaryOperator	&		858805	0					
ANR	858865	Identifier	p		858805	1					
ANR	858866	ExpressionStatement	"printf ( ""%.*s\\n"" , len , p )"	368:1:8972:8996	858805	5	True				
ANR	858867	CallExpression	"printf ( ""%.*s\\n"" , len , p )"		858805	0					
ANR	858868	Callee	printf		858805	0					
ANR	858869	Identifier	printf		858805	0					
ANR	858870	ArgumentList	"""%.*s\\n"""		858805	1					
ANR	858871	Argument	"""%.*s\\n"""		858805	0					
ANR	858872	PrimaryExpression	"""%.*s\\n"""		858805	0					
ANR	858873	Argument	len		858805	1					
ANR	858874	Identifier	len		858805	0					
ANR	858875	Argument	p		858805	2					
ANR	858876	Identifier	p		858805	0					
ANR	858877	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , 0 )"	369:1:8999:9031	858805	6	True				
ANR	858878	CallExpression	"DISCONNECT_AND_RETURN ( client , 0 )"		858805	0					
ANR	858879	Callee	DISCONNECT_AND_RETURN		858805	0					
ANR	858880	Identifier	DISCONNECT_AND_RETURN		858805	0					
ANR	858881	ArgumentList	client		858805	1					
ANR	858882	Argument	client		858805	0					
ANR	858883	Identifier	client		858805	0					
ANR	858884	Argument	0		858805	1					
ANR	858885	PrimaryExpression	0		858805	0					
ANR	858886	ReturnType	int		858805	1					
ANR	858887	Identifier	chirp_get_job_attr		858805	2					
ANR	858888	ParameterList	"int argc , char * * argv"		858805	3					
ANR	858889	Parameter	int argc	357:23:8722:8729	858805	0	True				
ANR	858890	ParameterType	int		858805	0					
ANR	858891	Identifier	argc		858805	1					
ANR	858892	Parameter	char * * argv	357:33:8732:8742	858805	1	True				
ANR	858893	ParameterType	char * *		858805	0					
ANR	858894	Identifier	argv		858805	1					
ANR	858895	CFGEntryNode	ENTRY		858805		True				
ANR	858896	CFGExitNode	EXIT		858805		True				
ANR	858897	Symbol	argc		858805						
ANR	858898	Symbol	p		858805						
ANR	858899	Symbol	chirp_client_get_job_attr		858805						
ANR	858900	Symbol	len		858805						
ANR	858901	Symbol	& p		858805						
ANR	858902	Symbol	client		858805						
ANR	858903	Symbol	* argv		858805						
ANR	858904	Symbol	argv		858805						
ANR	858905	Function	chirp_set_job_attr	377:0:9105:9425							
ANR	858906	FunctionDef	"chirp_set_job_attr (int argc , char * * argv)"		858905	0					
ANR	858907	CompoundStatement		377:46:9151:9425	858905	0					
ANR	858908	IfStatement	if ( argc != 4 )		858905	0					
ANR	858909	Condition	argc != 4	378:5:9158:9166	858905	0	True				
ANR	858910	EqualityExpression	argc != 4		858905	0		!=			
ANR	858911	Identifier	argc		858905	0					
ANR	858912	PrimaryExpression	4		858905	1					
ANR	858913	CompoundStatement		2:16:17:17	858905	1					
ANR	858914	ExpressionStatement	"printf ( ""condor_chirp set_job_attr AttributeName AttributeValue\\n"" )"	379:2:9173:9239	858905	0	True				
ANR	858915	CallExpression	"printf ( ""condor_chirp set_job_attr AttributeName AttributeValue\\n"" )"		858905	0					
ANR	858916	Callee	printf		858905	0					
ANR	858917	Identifier	printf		858905	0					
ANR	858918	ArgumentList	"""condor_chirp set_job_attr AttributeName AttributeValue\\n"""		858905	1					
ANR	858919	Argument	"""condor_chirp set_job_attr AttributeName AttributeValue\\n"""		858905	0					
ANR	858920	PrimaryExpression	"""condor_chirp set_job_attr AttributeName AttributeValue\\n"""		858905	0					
ANR	858921	ReturnStatement	return - 1 ;	380:2:9243:9252	858905	1	True				
ANR	858922	UnaryOperationExpression	- 1		858905	0					
ANR	858923	UnaryOperator	-		858905	0					
ANR	858924	PrimaryExpression	1		858905	1					
ANR	858925	IdentifierDeclStatement	struct chirp_client * client = 0 ;	383:1:9259:9290	858905	1	True				
ANR	858926	IdentifierDecl	* client = 0		858905	0					
ANR	858927	IdentifierDeclType	struct chirp_client *		858905	0					
ANR	858928	Identifier	client		858905	1					
ANR	858929	AssignmentExpression	* client = 0		858905	2		=			
ANR	858930	Identifier	client		858905	0					
ANR	858931	PrimaryExpression	0		858905	1					
ANR	858932	ExpressionStatement	CONNECT_STARTER ( client )	384:1:9293:9316	858905	2	True				
ANR	858933	CallExpression	CONNECT_STARTER ( client )		858905	0					
ANR	858934	Callee	CONNECT_STARTER		858905	0					
ANR	858935	Identifier	CONNECT_STARTER		858905	0					
ANR	858936	ArgumentList	client		858905	1					
ANR	858937	Argument	client		858905	0					
ANR	858938	Identifier	client		858905	0					
ANR	858939	IdentifierDeclStatement	"int rval = chirp_client_set_job_attr ( client , argv [ 2 ] , argv [ 3 ] ) ;"	386:4:9323:9385	858905	3	True				
ANR	858940	IdentifierDecl	"rval = chirp_client_set_job_attr ( client , argv [ 2 ] , argv [ 3 ] )"		858905	0					
ANR	858941	IdentifierDeclType	int		858905	0					
ANR	858942	Identifier	rval		858905	1					
ANR	858943	AssignmentExpression	"rval = chirp_client_set_job_attr ( client , argv [ 2 ] , argv [ 3 ] )"		858905	2		=			
ANR	858944	Identifier	rval		858905	0					
ANR	858945	CallExpression	"chirp_client_set_job_attr ( client , argv [ 2 ] , argv [ 3 ] )"		858905	1					
ANR	858946	Callee	chirp_client_set_job_attr		858905	0					
ANR	858947	Identifier	chirp_client_set_job_attr		858905	0					
ANR	858948	ArgumentList	client		858905	1					
ANR	858949	Argument	client		858905	0					
ANR	858950	Identifier	client		858905	0					
ANR	858951	Argument	argv [ 2 ]		858905	1					
ANR	858952	ArrayIndexing	argv [ 2 ]		858905	0					
ANR	858953	Identifier	argv		858905	0					
ANR	858954	PrimaryExpression	2		858905	1					
ANR	858955	Argument	argv [ 3 ]		858905	2					
ANR	858956	ArrayIndexing	argv [ 3 ]		858905	0					
ANR	858957	Identifier	argv		858905	0					
ANR	858958	PrimaryExpression	3		858905	1					
ANR	858959	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , rval )"	387:1:9388:9423	858905	4	True				
ANR	858960	CallExpression	"DISCONNECT_AND_RETURN ( client , rval )"		858905	0					
ANR	858961	Callee	DISCONNECT_AND_RETURN		858905	0					
ANR	858962	Identifier	DISCONNECT_AND_RETURN		858905	0					
ANR	858963	ArgumentList	client		858905	1					
ANR	858964	Argument	client		858905	0					
ANR	858965	Identifier	client		858905	0					
ANR	858966	Argument	rval		858905	1					
ANR	858967	Identifier	rval		858905	0					
ANR	858968	ReturnType	int		858905	1					
ANR	858969	Identifier	chirp_set_job_attr		858905	2					
ANR	858970	ParameterList	"int argc , char * * argv"		858905	3					
ANR	858971	Parameter	int argc	377:23:9128:9135	858905	0	True				
ANR	858972	ParameterType	int		858905	0					
ANR	858973	Identifier	argc		858905	1					
ANR	858974	Parameter	char * * argv	377:33:9138:9148	858905	1	True				
ANR	858975	ParameterType	char * *		858905	0					
ANR	858976	Identifier	argv		858905	1					
ANR	858977	CFGEntryNode	ENTRY		858905		True				
ANR	858978	CFGExitNode	EXIT		858905		True				
ANR	858979	Symbol	argc		858905						
ANR	858980	Symbol	chirp_client_set_job_attr		858905						
ANR	858981	Symbol	client		858905						
ANR	858982	Symbol	rval		858905						
ANR	858983	Symbol	* argv		858905						
ANR	858984	Symbol	argv		858905						
ANR	858985	Function	chirp_ulog	395:0:9453:9719							
ANR	858986	FunctionDef	"chirp_ulog (int argc , char * * argv)"		858985	0					
ANR	858987	CompoundStatement		395:38:9491:9719	858985	0					
ANR	858988	IfStatement	if ( argc != 3 )		858985	0					
ANR	858989	Condition	argc != 3	396:5:9498:9506	858985	0	True				
ANR	858990	EqualityExpression	argc != 3		858985	0		!=			
ANR	858991	Identifier	argc		858985	0					
ANR	858992	PrimaryExpression	3		858985	1					
ANR	858993	CompoundStatement		2:16:17:17	858985	1					
ANR	858994	ExpressionStatement	"printf ( ""condor_chirp ulog message\\n"" )"	397:2:9513:9550	858985	0	True				
ANR	858995	CallExpression	"printf ( ""condor_chirp ulog message\\n"" )"		858985	0					
ANR	858996	Callee	printf		858985	0					
ANR	858997	Identifier	printf		858985	0					
ANR	858998	ArgumentList	"""condor_chirp ulog message\\n"""		858985	1					
ANR	858999	Argument	"""condor_chirp ulog message\\n"""		858985	0					
ANR	859000	PrimaryExpression	"""condor_chirp ulog message\\n"""		858985	0					
ANR	859001	ReturnStatement	return - 1 ;	398:2:9554:9563	858985	1	True				
ANR	859002	UnaryOperationExpression	- 1		858985	0					
ANR	859003	UnaryOperator	-		858985	0					
ANR	859004	PrimaryExpression	1		858985	1					
ANR	859005	IdentifierDeclStatement	struct chirp_client * client = 0 ;	401:1:9570:9601	858985	1	True				
ANR	859006	IdentifierDecl	* client = 0		858985	0					
ANR	859007	IdentifierDeclType	struct chirp_client *		858985	0					
ANR	859008	Identifier	client		858985	1					
ANR	859009	AssignmentExpression	* client = 0		858985	2		=			
ANR	859010	Identifier	client		858985	0					
ANR	859011	PrimaryExpression	0		858985	1					
ANR	859012	ExpressionStatement	CONNECT_STARTER ( client )	402:1:9604:9627	858985	2	True				
ANR	859013	CallExpression	CONNECT_STARTER ( client )		858985	0					
ANR	859014	Callee	CONNECT_STARTER		858985	0					
ANR	859015	Identifier	CONNECT_STARTER		858985	0					
ANR	859016	ArgumentList	client		858985	1					
ANR	859017	Argument	client		858985	0					
ANR	859018	Identifier	client		858985	0					
ANR	859019	IdentifierDeclStatement	"int rval = chirp_client_ulog ( client , argv [ 2 ] ) ;"	404:4:9634:9679	858985	3	True				
ANR	859020	IdentifierDecl	"rval = chirp_client_ulog ( client , argv [ 2 ] )"		858985	0					
ANR	859021	IdentifierDeclType	int		858985	0					
ANR	859022	Identifier	rval		858985	1					
ANR	859023	AssignmentExpression	"rval = chirp_client_ulog ( client , argv [ 2 ] )"		858985	2		=			
ANR	859024	Identifier	rval		858985	0					
ANR	859025	CallExpression	"chirp_client_ulog ( client , argv [ 2 ] )"		858985	1					
ANR	859026	Callee	chirp_client_ulog		858985	0					
ANR	859027	Identifier	chirp_client_ulog		858985	0					
ANR	859028	ArgumentList	client		858985	1					
ANR	859029	Argument	client		858985	0					
ANR	859030	Identifier	client		858985	0					
ANR	859031	Argument	argv [ 2 ]		858985	1					
ANR	859032	ArrayIndexing	argv [ 2 ]		858985	0					
ANR	859033	Identifier	argv		858985	0					
ANR	859034	PrimaryExpression	2		858985	1					
ANR	859035	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , rval )"	405:1:9682:9717	858985	4	True				
ANR	859036	CallExpression	"DISCONNECT_AND_RETURN ( client , rval )"		858985	0					
ANR	859037	Callee	DISCONNECT_AND_RETURN		858985	0					
ANR	859038	Identifier	DISCONNECT_AND_RETURN		858985	0					
ANR	859039	ArgumentList	client		858985	1					
ANR	859040	Argument	client		858985	0					
ANR	859041	Identifier	client		858985	0					
ANR	859042	Argument	rval		858985	1					
ANR	859043	Identifier	rval		858985	0					
ANR	859044	ReturnType	int		858985	1					
ANR	859045	Identifier	chirp_ulog		858985	2					
ANR	859046	ParameterList	"int argc , char * * argv"		858985	3					
ANR	859047	Parameter	int argc	395:15:9468:9475	858985	0	True				
ANR	859048	ParameterType	int		858985	0					
ANR	859049	Identifier	argc		858985	1					
ANR	859050	Parameter	char * * argv	395:25:9478:9488	858985	1	True				
ANR	859051	ParameterType	char * *		858985	0					
ANR	859052	Identifier	argv		858985	1					
ANR	859053	CFGEntryNode	ENTRY		858985		True				
ANR	859054	CFGExitNode	EXIT		858985		True				
ANR	859055	Symbol	argc		858985						
ANR	859056	Symbol	client		858985						
ANR	859057	Symbol	* argv		858985						
ANR	859058	Symbol	rval		858985						
ANR	859059	Symbol	chirp_client_ulog		858985						
ANR	859060	Symbol	argv		858985						
ANR	859061	Function	chirp_read	408:0:9722:11352							
ANR	859062	FunctionDef	"chirp_read (int argc , char * * argv)"		859061	0					
ANR	859063	CompoundStatement		408:38:9760:11352	859061	0					
ANR	859064	IdentifierDeclStatement	int fileOffset = 2 ;	409:1:9763:9781	859061	0	True				
ANR	859065	IdentifierDecl	fileOffset = 2		859061	0					
ANR	859066	IdentifierDeclType	int		859061	0					
ANR	859067	Identifier	fileOffset		859061	1					
ANR	859068	AssignmentExpression	fileOffset = 2		859061	2		=			
ANR	859069	Identifier	fileOffset		859061	0					
ANR	859070	PrimaryExpression	2		859061	1					
ANR	859071	IdentifierDeclStatement	int offset = 0 ;	410:1:9784:9798	859061	1	True				
ANR	859072	IdentifierDecl	offset = 0		859061	0					
ANR	859073	IdentifierDeclType	int		859061	0					
ANR	859074	Identifier	offset		859061	1					
ANR	859075	AssignmentExpression	offset = 0		859061	2		=			
ANR	859076	Identifier	offset		859061	0					
ANR	859077	PrimaryExpression	0		859061	1					
ANR	859078	IdentifierDeclStatement	int stride_length = 0 ;	411:1:9801:9822	859061	2	True				
ANR	859079	IdentifierDecl	stride_length = 0		859061	0					
ANR	859080	IdentifierDeclType	int		859061	0					
ANR	859081	Identifier	stride_length		859061	1					
ANR	859082	AssignmentExpression	stride_length = 0		859061	2		=			
ANR	859083	Identifier	stride_length		859061	0					
ANR	859084	PrimaryExpression	0		859061	1					
ANR	859085	IdentifierDeclStatement	int stride_skip = 0 ;	412:1:9825:9844	859061	3	True				
ANR	859086	IdentifierDecl	stride_skip = 0		859061	0					
ANR	859087	IdentifierDeclType	int		859061	0					
ANR	859088	Identifier	stride_skip		859061	1					
ANR	859089	AssignmentExpression	stride_skip = 0		859061	2		=			
ANR	859090	Identifier	stride_skip		859061	0					
ANR	859091	PrimaryExpression	0		859061	1					
ANR	859092	IdentifierDeclStatement	bool more = true ;	414:1:9848:9864	859061	4	True				
ANR	859093	IdentifierDecl	more = true		859061	0					
ANR	859094	IdentifierDeclType	bool		859061	0					
ANR	859095	Identifier	more		859061	1					
ANR	859096	AssignmentExpression	more = true		859061	2		=			
ANR	859097	Identifier	true		859061	0					
ANR	859098	Identifier	true		859061	1					
ANR	859099	WhileStatement	while ( more && fileOffset + 1 < argc )		859061	5					
ANR	859100	Condition	more && fileOffset + 1 < argc	415:8:9874:9902	859061	0	True				
ANR	859101	AndExpression	more && fileOffset + 1 < argc		859061	0		&&			
ANR	859102	Identifier	more		859061	0					
ANR	859103	RelationalExpression	fileOffset + 1 < argc		859061	1		<			
ANR	859104	AdditiveExpression	fileOffset + 1		859061	0		+			
ANR	859105	Identifier	fileOffset		859061	0					
ANR	859106	PrimaryExpression	1		859061	1					
ANR	859107	Identifier	argc		859061	1					
ANR	859108	CompoundStatement		8:39:144:144	859061	1					
ANR	859109	IfStatement	"if ( strcmp ( argv [ fileOffset ] , ""-offset"" ) == 0 )"		859061	0					
ANR	859110	Condition	"strcmp ( argv [ fileOffset ] , ""-offset"" ) == 0"	417:6:9914:9953	859061	0	True				
ANR	859111	EqualityExpression	"strcmp ( argv [ fileOffset ] , ""-offset"" ) == 0"		859061	0		==			
ANR	859112	CallExpression	"strcmp ( argv [ fileOffset ] , ""-offset"" )"		859061	0					
ANR	859113	Callee	strcmp		859061	0					
ANR	859114	Identifier	strcmp		859061	0					
ANR	859115	ArgumentList	argv [ fileOffset ]		859061	1					
ANR	859116	Argument	argv [ fileOffset ]		859061	0					
ANR	859117	ArrayIndexing	argv [ fileOffset ]		859061	0					
ANR	859118	Identifier	argv		859061	0					
ANR	859119	Identifier	fileOffset		859061	1					
ANR	859120	Argument	"""-offset"""		859061	1					
ANR	859121	PrimaryExpression	"""-offset"""		859061	0					
ANR	859122	PrimaryExpression	0		859061	1					
ANR	859123	CompoundStatement		10:48:195:195	859061	1					
ANR	859124	ExpressionStatement	"offset = strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"	418:3:9961:10008	859061	0	True				
ANR	859125	AssignmentExpression	"offset = strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"		859061	0		=			
ANR	859126	Identifier	offset		859061	0					
ANR	859127	CallExpression	"strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"		859061	1					
ANR	859128	Callee	strtol		859061	0					
ANR	859129	Identifier	strtol		859061	0					
ANR	859130	ArgumentList	argv [ fileOffset + 1 ]		859061	1					
ANR	859131	Argument	argv [ fileOffset + 1 ]		859061	0					
ANR	859132	ArrayIndexing	argv [ fileOffset + 1 ]		859061	0					
ANR	859133	Identifier	argv		859061	0					
ANR	859134	AdditiveExpression	fileOffset + 1		859061	1		+			
ANR	859135	Identifier	fileOffset		859061	0					
ANR	859136	PrimaryExpression	1		859061	1					
ANR	859137	Argument	NULL		859061	1					
ANR	859138	Identifier	NULL		859061	0					
ANR	859139	Argument	10		859061	2					
ANR	859140	PrimaryExpression	10		859061	0					
ANR	859141	ExpressionStatement	fileOffset += 2	419:3:10013:10028	859061	1	True				
ANR	859142	AssignmentExpression	fileOffset += 2		859061	0		+=			
ANR	859143	Identifier	fileOffset		859061	0					
ANR	859144	PrimaryExpression	2		859061	1					
ANR	859145	ExpressionStatement	more = true	420:3:10033:10044	859061	2	True				
ANR	859146	AssignmentExpression	more = true		859061	0		=			
ANR	859147	Identifier	more		859061	0					
ANR	859148	Identifier	true		859061	1					
ANR	859149	ElseStatement	else		859061	0					
ANR	859150	IfStatement	"if ( strcmp ( argv [ fileOffset ] , ""-stride"" ) == 0 && fileOffset + 2 < argc )"		859061	0					
ANR	859151	Condition	"strcmp ( argv [ fileOffset ] , ""-stride"" ) == 0 && fileOffset + 2 < argc"	422:11:10061:10130	859061	0	True				
ANR	859152	AndExpression	"strcmp ( argv [ fileOffset ] , ""-stride"" ) == 0 && fileOffset + 2 < argc"		859061	0		&&			
ANR	859153	EqualityExpression	"strcmp ( argv [ fileOffset ] , ""-stride"" ) == 0"		859061	0		==			
ANR	859154	CallExpression	"strcmp ( argv [ fileOffset ] , ""-stride"" )"		859061	0					
ANR	859155	Callee	strcmp		859061	0					
ANR	859156	Identifier	strcmp		859061	0					
ANR	859157	ArgumentList	argv [ fileOffset ]		859061	1					
ANR	859158	Argument	argv [ fileOffset ]		859061	0					
ANR	859159	ArrayIndexing	argv [ fileOffset ]		859061	0					
ANR	859160	Identifier	argv		859061	0					
ANR	859161	Identifier	fileOffset		859061	1					
ANR	859162	Argument	"""-stride"""		859061	1					
ANR	859163	PrimaryExpression	"""-stride"""		859061	0					
ANR	859164	PrimaryExpression	0		859061	1					
ANR	859165	RelationalExpression	fileOffset + 2 < argc		859061	1		<			
ANR	859166	AdditiveExpression	fileOffset + 2		859061	0		+			
ANR	859167	Identifier	fileOffset		859061	0					
ANR	859168	PrimaryExpression	2		859061	1					
ANR	859169	Identifier	argc		859061	1					
ANR	859170	CompoundStatement		16:31:372:372	859061	1					
ANR	859171	ExpressionStatement	"stride_length = strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"	424:3:10138:10192	859061	0	True				
ANR	859172	AssignmentExpression	"stride_length = strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"		859061	0		=			
ANR	859173	Identifier	stride_length		859061	0					
ANR	859174	CallExpression	"strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"		859061	1					
ANR	859175	Callee	strtol		859061	0					
ANR	859176	Identifier	strtol		859061	0					
ANR	859177	ArgumentList	argv [ fileOffset + 1 ]		859061	1					
ANR	859178	Argument	argv [ fileOffset + 1 ]		859061	0					
ANR	859179	ArrayIndexing	argv [ fileOffset + 1 ]		859061	0					
ANR	859180	Identifier	argv		859061	0					
ANR	859181	AdditiveExpression	fileOffset + 1		859061	1		+			
ANR	859182	Identifier	fileOffset		859061	0					
ANR	859183	PrimaryExpression	1		859061	1					
ANR	859184	Argument	NULL		859061	1					
ANR	859185	Identifier	NULL		859061	0					
ANR	859186	Argument	10		859061	2					
ANR	859187	PrimaryExpression	10		859061	0					
ANR	859188	ExpressionStatement	"stride_skip = strtol ( argv [ fileOffset + 2 ] , NULL , 10 )"	425:3:10197:10249	859061	1	True				
ANR	859189	AssignmentExpression	"stride_skip = strtol ( argv [ fileOffset + 2 ] , NULL , 10 )"		859061	0		=			
ANR	859190	Identifier	stride_skip		859061	0					
ANR	859191	CallExpression	"strtol ( argv [ fileOffset + 2 ] , NULL , 10 )"		859061	1					
ANR	859192	Callee	strtol		859061	0					
ANR	859193	Identifier	strtol		859061	0					
ANR	859194	ArgumentList	argv [ fileOffset + 2 ]		859061	1					
ANR	859195	Argument	argv [ fileOffset + 2 ]		859061	0					
ANR	859196	ArrayIndexing	argv [ fileOffset + 2 ]		859061	0					
ANR	859197	Identifier	argv		859061	0					
ANR	859198	AdditiveExpression	fileOffset + 2		859061	1		+			
ANR	859199	Identifier	fileOffset		859061	0					
ANR	859200	PrimaryExpression	2		859061	1					
ANR	859201	Argument	NULL		859061	1					
ANR	859202	Identifier	NULL		859061	0					
ANR	859203	Argument	10		859061	2					
ANR	859204	PrimaryExpression	10		859061	0					
ANR	859205	ExpressionStatement	fileOffset += 3	426:3:10254:10269	859061	2	True				
ANR	859206	AssignmentExpression	fileOffset += 3		859061	0		+=			
ANR	859207	Identifier	fileOffset		859061	0					
ANR	859208	PrimaryExpression	3		859061	1					
ANR	859209	ExpressionStatement	more = true	427:3:10274:10285	859061	3	True				
ANR	859210	AssignmentExpression	more = true		859061	0		=			
ANR	859211	Identifier	more		859061	0					
ANR	859212	Identifier	true		859061	1					
ANR	859213	ElseStatement	else		859061	0					
ANR	859214	CompoundStatement		22:7:537:537	859061	0					
ANR	859215	ExpressionStatement	more = false	430:3:10303:10315	859061	0	True				
ANR	859216	AssignmentExpression	more = false		859061	0		=			
ANR	859217	Identifier	more		859061	0					
ANR	859218	Identifier	false		859061	1					
ANR	859219	IfStatement	if ( fileOffset + 2 != argc )		859061	6					
ANR	859220	Condition	fileOffset + 2 != argc	434:4:10329:10350	859061	0	True				
ANR	859221	EqualityExpression	fileOffset + 2 != argc		859061	0		!=			
ANR	859222	AdditiveExpression	fileOffset + 2		859061	0		+			
ANR	859223	Identifier	fileOffset		859061	0					
ANR	859224	PrimaryExpression	2		859061	1					
ANR	859225	Identifier	argc		859061	1					
ANR	859226	CompoundStatement		27:28:592:592	859061	1					
ANR	859227	Statement	printf	435:2:10357:10362	859061	0	True				
ANR	859228	Statement	(	435:8:10363:10363	859061	1	True				
ANR	859229	Statement	"""condor_chirp read [-offset offset] [-stride length skip] """	435:9:10364:10422	859061	2	True				
ANR	859230	Statement	"""remotepath length\\n"""	436:3:10427:10447	859061	3	True				
ANR	859231	Statement	)	436:24:10448:10448	859061	4	True				
ANR	859232	ExpressionStatement		436:25:10449:10449	859061	5	True				
ANR	859233	ReturnStatement	return - 1 ;	437:2:10453:10462	859061	6	True				
ANR	859234	UnaryOperationExpression	- 1		859061	0					
ANR	859235	UnaryOperator	-		859061	0					
ANR	859236	PrimaryExpression	1		859061	1					
ANR	859237	IdentifierDeclStatement	char * path = argv [ fileOffset ] ;	440:1:10469:10498	859061	7	True				
ANR	859238	IdentifierDecl	* path = argv [ fileOffset ]		859061	0					
ANR	859239	IdentifierDeclType	char *		859061	0					
ANR	859240	Identifier	path		859061	1					
ANR	859241	AssignmentExpression	* path = argv [ fileOffset ]		859061	2		=			
ANR	859242	Identifier	path		859061	0					
ANR	859243	ArrayIndexing	argv [ fileOffset ]		859061	1					
ANR	859244	Identifier	argv		859061	0					
ANR	859245	Identifier	fileOffset		859061	1					
ANR	859246	IdentifierDeclStatement	"int length = strtol ( argv [ fileOffset + 1 ] , NULL , 10 ) ;"	441:1:10501:10552	859061	8	True				
ANR	859247	IdentifierDecl	"length = strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"		859061	0					
ANR	859248	IdentifierDeclType	int		859061	0					
ANR	859249	Identifier	length		859061	1					
ANR	859250	AssignmentExpression	"length = strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"		859061	2		=			
ANR	859251	Identifier	length		859061	0					
ANR	859252	CallExpression	"strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"		859061	1					
ANR	859253	Callee	strtol		859061	0					
ANR	859254	Identifier	strtol		859061	0					
ANR	859255	ArgumentList	argv [ fileOffset + 1 ]		859061	1					
ANR	859256	Argument	argv [ fileOffset + 1 ]		859061	0					
ANR	859257	ArrayIndexing	argv [ fileOffset + 1 ]		859061	0					
ANR	859258	Identifier	argv		859061	0					
ANR	859259	AdditiveExpression	fileOffset + 1		859061	1		+			
ANR	859260	Identifier	fileOffset		859061	0					
ANR	859261	PrimaryExpression	1		859061	1					
ANR	859262	Argument	NULL		859061	1					
ANR	859263	Identifier	NULL		859061	0					
ANR	859264	Argument	10		859061	2					
ANR	859265	PrimaryExpression	10		859061	0					
ANR	859266	IdentifierDeclStatement	struct chirp_client * client = 0 ;	443:1:10557:10588	859061	9	True				
ANR	859267	IdentifierDecl	* client = 0		859061	0					
ANR	859268	IdentifierDeclType	struct chirp_client *		859061	0					
ANR	859269	Identifier	client		859061	1					
ANR	859270	AssignmentExpression	* client = 0		859061	2		=			
ANR	859271	Identifier	client		859061	0					
ANR	859272	PrimaryExpression	0		859061	1					
ANR	859273	ExpressionStatement	CONNECT_STARTER ( client )	444:1:10591:10614	859061	10	True				
ANR	859274	CallExpression	CONNECT_STARTER ( client )		859061	0					
ANR	859275	Callee	CONNECT_STARTER		859061	0					
ANR	859276	Identifier	CONNECT_STARTER		859061	0					
ANR	859277	ArgumentList	client		859061	1					
ANR	859278	Argument	client		859061	0					
ANR	859279	Identifier	client		859061	0					
ANR	859280	IdentifierDeclStatement	"int fd = chirp_client_open ( client , path , ""r"" , 0 ) ;"	446:1:10618:10666	859061	11	True				
ANR	859281	IdentifierDecl	"fd = chirp_client_open ( client , path , ""r"" , 0 )"		859061	0					
ANR	859282	IdentifierDeclType	int		859061	0					
ANR	859283	Identifier	fd		859061	1					
ANR	859284	AssignmentExpression	"fd = chirp_client_open ( client , path , ""r"" , 0 )"		859061	2		=			
ANR	859285	Identifier	fd		859061	0					
ANR	859286	CallExpression	"chirp_client_open ( client , path , ""r"" , 0 )"		859061	1					
ANR	859287	Callee	chirp_client_open		859061	0					
ANR	859288	Identifier	chirp_client_open		859061	0					
ANR	859289	ArgumentList	client		859061	1					
ANR	859290	Argument	client		859061	0					
ANR	859291	Identifier	client		859061	0					
ANR	859292	Argument	path		859061	1					
ANR	859293	Identifier	path		859061	0					
ANR	859294	Argument	"""r"""		859061	2					
ANR	859295	PrimaryExpression	"""r"""		859061	0					
ANR	859296	Argument	0		859061	3					
ANR	859297	PrimaryExpression	0		859061	0					
ANR	859298	IfStatement	if ( fd < 0 )		859061	12					
ANR	859299	Condition	fd < 0	447:4:10672:10677	859061	0	True				
ANR	859300	RelationalExpression	fd < 0		859061	0		<			
ANR	859301	Identifier	fd		859061	0					
ANR	859302	PrimaryExpression	0		859061	1					
ANR	859303	CompoundStatement		40:12:919:919	859061	1					
ANR	859304	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , fd )"	448:2:10684:10717	859061	0	True				
ANR	859305	CallExpression	"DISCONNECT_AND_RETURN ( client , fd )"		859061	0					
ANR	859306	Callee	DISCONNECT_AND_RETURN		859061	0					
ANR	859307	Identifier	DISCONNECT_AND_RETURN		859061	0					
ANR	859308	ArgumentList	client		859061	1					
ANR	859309	Argument	client		859061	0					
ANR	859310	Identifier	client		859061	0					
ANR	859311	Argument	fd		859061	1					
ANR	859312	Identifier	fd		859061	0					
ANR	859313	IdentifierDeclStatement	void * buf = malloc ( length + 1 ) ;	450:1:10723:10751	859061	13	True				
ANR	859314	IdentifierDecl	* buf = malloc ( length + 1 )		859061	0					
ANR	859315	IdentifierDeclType	void *		859061	0					
ANR	859316	Identifier	buf		859061	1					
ANR	859317	AssignmentExpression	* buf = malloc ( length + 1 )		859061	2		=			
ANR	859318	Identifier	buf		859061	0					
ANR	859319	CallExpression	malloc ( length + 1 )		859061	1					
ANR	859320	Callee	malloc		859061	0					
ANR	859321	Identifier	malloc		859061	0					
ANR	859322	ArgumentList	length + 1		859061	1					
ANR	859323	Argument	length + 1		859061	0					
ANR	859324	AdditiveExpression	length + 1		859061	0		+			
ANR	859325	Identifier	length		859061	0					
ANR	859326	PrimaryExpression	1		859061	1					
ANR	859327	IdentifierDeclStatement	int ret_val = - 1 ;	452:1:10756:10772	859061	14	True				
ANR	859328	IdentifierDecl	ret_val = - 1		859061	0					
ANR	859329	IdentifierDeclType	int		859061	0					
ANR	859330	Identifier	ret_val		859061	1					
ANR	859331	AssignmentExpression	ret_val = - 1		859061	2		=			
ANR	859332	Identifier	ret_val		859061	0					
ANR	859333	UnaryOperationExpression	- 1		859061	1					
ANR	859334	UnaryOperator	-		859061	0					
ANR	859335	PrimaryExpression	1		859061	1					
ANR	859336	IfStatement	if ( offset == 0 && stride_length == 0 && stride_skip == 0 )		859061	15					
ANR	859337	Condition	offset == 0 && stride_length == 0 && stride_skip == 0	454:4:10791:10843	859061	0	True				
ANR	859338	AndExpression	offset == 0 && stride_length == 0 && stride_skip == 0		859061	0		&&			
ANR	859339	EqualityExpression	offset == 0		859061	0		==			
ANR	859340	Identifier	offset		859061	0					
ANR	859341	PrimaryExpression	0		859061	1					
ANR	859342	AndExpression	stride_length == 0 && stride_skip == 0		859061	1		&&			
ANR	859343	EqualityExpression	stride_length == 0		859061	0		==			
ANR	859344	Identifier	stride_length		859061	0					
ANR	859345	PrimaryExpression	0		859061	1					
ANR	859346	EqualityExpression	stride_skip == 0		859061	1		==			
ANR	859347	Identifier	stride_skip		859061	0					
ANR	859348	PrimaryExpression	0		859061	1					
ANR	859349	CompoundStatement		47:59:1085:1085	859061	1					
ANR	859350	ExpressionStatement	"ret_val = chirp_client_read ( client , fd , buf , length )"	455:2:10850:10902	859061	0	True				
ANR	859351	AssignmentExpression	"ret_val = chirp_client_read ( client , fd , buf , length )"		859061	0		=			
ANR	859352	Identifier	ret_val		859061	0					
ANR	859353	CallExpression	"chirp_client_read ( client , fd , buf , length )"		859061	1					
ANR	859354	Callee	chirp_client_read		859061	0					
ANR	859355	Identifier	chirp_client_read		859061	0					
ANR	859356	ArgumentList	client		859061	1					
ANR	859357	Argument	client		859061	0					
ANR	859358	Identifier	client		859061	0					
ANR	859359	Argument	fd		859061	1					
ANR	859360	Identifier	fd		859061	0					
ANR	859361	Argument	buf		859061	2					
ANR	859362	Identifier	buf		859061	0					
ANR	859363	Argument	length		859061	3					
ANR	859364	Identifier	length		859061	0					
ANR	859365	ElseStatement	else		859061	0					
ANR	859366	IfStatement	if ( offset != 0 && stride_length == 0 && stride_skip == 0 )		859061	0					
ANR	859367	Condition	offset != 0 && stride_length == 0 && stride_skip == 0	458:9:10930:10982	859061	0	True				
ANR	859368	AndExpression	offset != 0 && stride_length == 0 && stride_skip == 0		859061	0		&&			
ANR	859369	EqualityExpression	offset != 0		859061	0		!=			
ANR	859370	Identifier	offset		859061	0					
ANR	859371	PrimaryExpression	0		859061	1					
ANR	859372	AndExpression	stride_length == 0 && stride_skip == 0		859061	1		&&			
ANR	859373	EqualityExpression	stride_length == 0		859061	0		==			
ANR	859374	Identifier	stride_length		859061	0					
ANR	859375	PrimaryExpression	0		859061	1					
ANR	859376	EqualityExpression	stride_skip == 0		859061	1		==			
ANR	859377	Identifier	stride_skip		859061	0					
ANR	859378	PrimaryExpression	0		859061	1					
ANR	859379	CompoundStatement		51:64:1224:1224	859061	1					
ANR	859380	ExpressionStatement	"ret_val = chirp_client_pread ( client , fd , buf , length , offset )"	459:2:10989:11050	859061	0	True				
ANR	859381	AssignmentExpression	"ret_val = chirp_client_pread ( client , fd , buf , length , offset )"		859061	0		=			
ANR	859382	Identifier	ret_val		859061	0					
ANR	859383	CallExpression	"chirp_client_pread ( client , fd , buf , length , offset )"		859061	1					
ANR	859384	Callee	chirp_client_pread		859061	0					
ANR	859385	Identifier	chirp_client_pread		859061	0					
ANR	859386	ArgumentList	client		859061	1					
ANR	859387	Argument	client		859061	0					
ANR	859388	Identifier	client		859061	0					
ANR	859389	Argument	fd		859061	1					
ANR	859390	Identifier	fd		859061	0					
ANR	859391	Argument	buf		859061	2					
ANR	859392	Identifier	buf		859061	0					
ANR	859393	Argument	length		859061	3					
ANR	859394	Identifier	length		859061	0					
ANR	859395	Argument	offset		859061	4					
ANR	859396	Identifier	offset		859061	0					
ANR	859397	ElseStatement	else		859061	0					
ANR	859398	CompoundStatement		55:6:1314:1314	859061	0					
ANR	859399	ExpressionStatement	"ret_val = chirp_client_sread ( client , fd , buf , length , offset , stride_length , stride_skip )"	463:2:11079:11171	859061	0	True				
ANR	859400	AssignmentExpression	"ret_val = chirp_client_sread ( client , fd , buf , length , offset , stride_length , stride_skip )"		859061	0		=			
ANR	859401	Identifier	ret_val		859061	0					
ANR	859402	CallExpression	"chirp_client_sread ( client , fd , buf , length , offset , stride_length , stride_skip )"		859061	1					
ANR	859403	Callee	chirp_client_sread		859061	0					
ANR	859404	Identifier	chirp_client_sread		859061	0					
ANR	859405	ArgumentList	client		859061	1					
ANR	859406	Argument	client		859061	0					
ANR	859407	Identifier	client		859061	0					
ANR	859408	Argument	fd		859061	1					
ANR	859409	Identifier	fd		859061	0					
ANR	859410	Argument	buf		859061	2					
ANR	859411	Identifier	buf		859061	0					
ANR	859412	Argument	length		859061	3					
ANR	859413	Identifier	length		859061	0					
ANR	859414	Argument	offset		859061	4					
ANR	859415	Identifier	offset		859061	0					
ANR	859416	Argument	stride_length		859061	5					
ANR	859417	Identifier	stride_length		859061	0					
ANR	859418	Argument	stride_skip		859061	6					
ANR	859419	Identifier	stride_skip		859061	0					
ANR	859420	IfStatement	if ( ret_val >= 0 )		859061	16					
ANR	859421	Condition	ret_val >= 0	467:4:11181:11192	859061	0	True				
ANR	859422	RelationalExpression	ret_val >= 0		859061	0		>=			
ANR	859423	Identifier	ret_val		859061	0					
ANR	859424	PrimaryExpression	0		859061	1					
ANR	859425	CompoundStatement		61:2:1438:1465	859061	1					
ANR	859426	IdentifierDeclStatement	char * to_print = ( char * ) buf ;	468:2:11199:11226	859061	0	True				
ANR	859427	IdentifierDecl	* to_print = ( char * ) buf		859061	0					
ANR	859428	IdentifierDeclType	char *		859061	0					
ANR	859429	Identifier	to_print		859061	1					
ANR	859430	AssignmentExpression	* to_print = ( char * ) buf		859061	2		=			
ANR	859431	Identifier	to_print		859061	0					
ANR	859432	CastExpression	( char * ) buf		859061	1					
ANR	859433	CastTarget	char *		859061	0					
ANR	859434	Identifier	buf		859061	1					
ANR	859435	ExpressionStatement	to_print [ length ] = '\\0'	469:2:11230:11253	859061	1	True				
ANR	859436	AssignmentExpression	to_print [ length ] = '\\0'		859061	0		=			
ANR	859437	ArrayIndexing	to_print [ length ]		859061	0					
ANR	859438	Identifier	to_print		859061	0					
ANR	859439	Identifier	length		859061	1					
ANR	859440	PrimaryExpression	'\\0'		859061	1					
ANR	859441	ExpressionStatement	"printf ( ""%s\\n"" , to_print )"	470:2:11257:11281	859061	2	True				
ANR	859442	CallExpression	"printf ( ""%s\\n"" , to_print )"		859061	0					
ANR	859443	Callee	printf		859061	0					
ANR	859444	Identifier	printf		859061	0					
ANR	859445	ArgumentList	"""%s\\n"""		859061	1					
ANR	859446	Argument	"""%s\\n"""		859061	0					
ANR	859447	PrimaryExpression	"""%s\\n"""		859061	0					
ANR	859448	Argument	to_print		859061	1					
ANR	859449	Identifier	to_print		859061	0					
ANR	859450	ExpressionStatement	free ( buf )	473:1:11288:11297	859061	17	True				
ANR	859451	CallExpression	free ( buf )		859061	0					
ANR	859452	Callee	free		859061	0					
ANR	859453	Identifier	free		859061	0					
ANR	859454	ArgumentList	buf		859061	1					
ANR	859455	Argument	buf		859061	0					
ANR	859456	Identifier	buf		859061	0					
ANR	859457	ExpressionStatement	"CLOSE_DISCONNECT_AND_RETURN ( client , fd , ret_val )"	474:1:11300:11348	859061	18	True				
ANR	859458	CallExpression	"CLOSE_DISCONNECT_AND_RETURN ( client , fd , ret_val )"		859061	0					
ANR	859459	Callee	CLOSE_DISCONNECT_AND_RETURN		859061	0					
ANR	859460	Identifier	CLOSE_DISCONNECT_AND_RETURN		859061	0					
ANR	859461	ArgumentList	client		859061	1					
ANR	859462	Argument	client		859061	0					
ANR	859463	Identifier	client		859061	0					
ANR	859464	Argument	fd		859061	1					
ANR	859465	Identifier	fd		859061	0					
ANR	859466	Argument	ret_val		859061	2					
ANR	859467	Identifier	ret_val		859061	0					
ANR	859468	ReturnType	int		859061	1					
ANR	859469	Identifier	chirp_read		859061	2					
ANR	859470	ParameterList	"int argc , char * * argv"		859061	3					
ANR	859471	Parameter	int argc	408:15:9737:9744	859061	0	True				
ANR	859472	ParameterType	int		859061	0					
ANR	859473	Identifier	argc		859061	1					
ANR	859474	Parameter	char * * argv	408:25:9747:9757	859061	1	True				
ANR	859475	ParameterType	char * *		859061	0					
ANR	859476	Identifier	argv		859061	1					
ANR	859477	CFGEntryNode	ENTRY		859061		True				
ANR	859478	CFGExitNode	EXIT		859061		True				
ANR	859479	Symbol	* argv		859061						
ANR	859480	Symbol	argv		859061						
ANR	859481	Symbol	path		859061						
ANR	859482	Symbol	strtol		859061						
ANR	859483	Symbol	client		859061						
ANR	859484	Symbol	* length		859061						
ANR	859485	Symbol	argc		859061						
ANR	859486	Symbol	strcmp		859061						
ANR	859487	Symbol	malloc		859061						
ANR	859488	Symbol	NULL		859061						
ANR	859489	Symbol	offset		859061						
ANR	859490	Symbol	* fileOffset		859061						
ANR	859491	Symbol	more		859061						
ANR	859492	Symbol	false		859061						
ANR	859493	Symbol	length		859061						
ANR	859494	Symbol	fileOffset		859061						
ANR	859495	Symbol	ret_val		859061						
ANR	859496	Symbol	* to_print		859061						
ANR	859497	Symbol	stride_length		859061						
ANR	859498	Symbol	to_print		859061						
ANR	859499	Symbol	buf		859061						
ANR	859500	Symbol	stride_skip		859061						
ANR	859501	Symbol	chirp_client_read		859061						
ANR	859502	Symbol	chirp_client_pread		859061						
ANR	859503	Symbol	chirp_client_sread		859061						
ANR	859504	Symbol	true		859061						
ANR	859505	Symbol	chirp_client_open		859061						
ANR	859506	Symbol	fd		859061						
ANR	859507	Function	chirp_write	478:0:11355:13751							
ANR	859508	FunctionDef	"chirp_write (int argc , char * * argv)"		859507	0					
ANR	859509	CompoundStatement		478:39:11394:13751	859507	0					
ANR	859510	IdentifierDeclStatement	int fileOffset = 2 ;	479:1:11397:11415	859507	0	True				
ANR	859511	IdentifierDecl	fileOffset = 2		859507	0					
ANR	859512	IdentifierDeclType	int		859507	0					
ANR	859513	Identifier	fileOffset		859507	1					
ANR	859514	AssignmentExpression	fileOffset = 2		859507	2		=			
ANR	859515	Identifier	fileOffset		859507	0					
ANR	859516	PrimaryExpression	2		859507	1					
ANR	859517	IdentifierDeclStatement	int offset = 0 ;	480:1:11418:11432	859507	1	True				
ANR	859518	IdentifierDecl	offset = 0		859507	0					
ANR	859519	IdentifierDeclType	int		859507	0					
ANR	859520	Identifier	offset		859507	1					
ANR	859521	AssignmentExpression	offset = 0		859507	2		=			
ANR	859522	Identifier	offset		859507	0					
ANR	859523	PrimaryExpression	0		859507	1					
ANR	859524	IdentifierDeclStatement	int stride_length = 0 ;	481:1:11435:11456	859507	2	True				
ANR	859525	IdentifierDecl	stride_length = 0		859507	0					
ANR	859526	IdentifierDeclType	int		859507	0					
ANR	859527	Identifier	stride_length		859507	1					
ANR	859528	AssignmentExpression	stride_length = 0		859507	2		=			
ANR	859529	Identifier	stride_length		859507	0					
ANR	859530	PrimaryExpression	0		859507	1					
ANR	859531	IdentifierDeclStatement	int stride_skip = 0 ;	482:1:11459:11478	859507	3	True				
ANR	859532	IdentifierDecl	stride_skip = 0		859507	0					
ANR	859533	IdentifierDeclType	int		859507	0					
ANR	859534	Identifier	stride_skip		859507	1					
ANR	859535	AssignmentExpression	stride_skip = 0		859507	2		=			
ANR	859536	Identifier	stride_skip		859507	0					
ANR	859537	PrimaryExpression	0		859507	1					
ANR	859538	IdentifierDeclStatement	bool more = true ;	484:1:11483:11499	859507	4	True				
ANR	859539	IdentifierDecl	more = true		859507	0					
ANR	859540	IdentifierDeclType	bool		859507	0					
ANR	859541	Identifier	more		859507	1					
ANR	859542	AssignmentExpression	more = true		859507	2		=			
ANR	859543	Identifier	true		859507	0					
ANR	859544	Identifier	true		859507	1					
ANR	859545	WhileStatement	while ( more && fileOffset + 1 < argc )		859507	5					
ANR	859546	Condition	more && fileOffset + 1 < argc	485:8:11509:11537	859507	0	True				
ANR	859547	AndExpression	more && fileOffset + 1 < argc		859507	0		&&			
ANR	859548	Identifier	more		859507	0					
ANR	859549	RelationalExpression	fileOffset + 1 < argc		859507	1		<			
ANR	859550	AdditiveExpression	fileOffset + 1		859507	0		+			
ANR	859551	Identifier	fileOffset		859507	0					
ANR	859552	PrimaryExpression	1		859507	1					
ANR	859553	Identifier	argc		859507	1					
ANR	859554	CompoundStatement		8:39:145:145	859507	1					
ANR	859555	IfStatement	"if ( strcmp ( argv [ fileOffset ] , ""-offset"" ) == 0 )"		859507	0					
ANR	859556	Condition	"strcmp ( argv [ fileOffset ] , ""-offset"" ) == 0"	487:6:11549:11588	859507	0	True				
ANR	859557	EqualityExpression	"strcmp ( argv [ fileOffset ] , ""-offset"" ) == 0"		859507	0		==			
ANR	859558	CallExpression	"strcmp ( argv [ fileOffset ] , ""-offset"" )"		859507	0					
ANR	859559	Callee	strcmp		859507	0					
ANR	859560	Identifier	strcmp		859507	0					
ANR	859561	ArgumentList	argv [ fileOffset ]		859507	1					
ANR	859562	Argument	argv [ fileOffset ]		859507	0					
ANR	859563	ArrayIndexing	argv [ fileOffset ]		859507	0					
ANR	859564	Identifier	argv		859507	0					
ANR	859565	Identifier	fileOffset		859507	1					
ANR	859566	Argument	"""-offset"""		859507	1					
ANR	859567	PrimaryExpression	"""-offset"""		859507	0					
ANR	859568	PrimaryExpression	0		859507	1					
ANR	859569	CompoundStatement		10:48:196:196	859507	1					
ANR	859570	ExpressionStatement	"offset = strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"	488:3:11596:11643	859507	0	True				
ANR	859571	AssignmentExpression	"offset = strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"		859507	0		=			
ANR	859572	Identifier	offset		859507	0					
ANR	859573	CallExpression	"strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"		859507	1					
ANR	859574	Callee	strtol		859507	0					
ANR	859575	Identifier	strtol		859507	0					
ANR	859576	ArgumentList	argv [ fileOffset + 1 ]		859507	1					
ANR	859577	Argument	argv [ fileOffset + 1 ]		859507	0					
ANR	859578	ArrayIndexing	argv [ fileOffset + 1 ]		859507	0					
ANR	859579	Identifier	argv		859507	0					
ANR	859580	AdditiveExpression	fileOffset + 1		859507	1		+			
ANR	859581	Identifier	fileOffset		859507	0					
ANR	859582	PrimaryExpression	1		859507	1					
ANR	859583	Argument	NULL		859507	1					
ANR	859584	Identifier	NULL		859507	0					
ANR	859585	Argument	10		859507	2					
ANR	859586	PrimaryExpression	10		859507	0					
ANR	859587	ExpressionStatement	fileOffset += 2	489:3:11648:11663	859507	1	True				
ANR	859588	AssignmentExpression	fileOffset += 2		859507	0		+=			
ANR	859589	Identifier	fileOffset		859507	0					
ANR	859590	PrimaryExpression	2		859507	1					
ANR	859591	ExpressionStatement	more = true	490:3:11668:11679	859507	2	True				
ANR	859592	AssignmentExpression	more = true		859507	0		=			
ANR	859593	Identifier	more		859507	0					
ANR	859594	Identifier	true		859507	1					
ANR	859595	ElseStatement	else		859507	0					
ANR	859596	IfStatement	"if ( strcmp ( argv [ fileOffset ] , ""-stride"" ) == 0 && fileOffset + 2 < argc )"		859507	0					
ANR	859597	Condition	"strcmp ( argv [ fileOffset ] , ""-stride"" ) == 0 && fileOffset + 2 < argc"	492:11:11696:11765	859507	0	True				
ANR	859598	AndExpression	"strcmp ( argv [ fileOffset ] , ""-stride"" ) == 0 && fileOffset + 2 < argc"		859507	0		&&			
ANR	859599	EqualityExpression	"strcmp ( argv [ fileOffset ] , ""-stride"" ) == 0"		859507	0		==			
ANR	859600	CallExpression	"strcmp ( argv [ fileOffset ] , ""-stride"" )"		859507	0					
ANR	859601	Callee	strcmp		859507	0					
ANR	859602	Identifier	strcmp		859507	0					
ANR	859603	ArgumentList	argv [ fileOffset ]		859507	1					
ANR	859604	Argument	argv [ fileOffset ]		859507	0					
ANR	859605	ArrayIndexing	argv [ fileOffset ]		859507	0					
ANR	859606	Identifier	argv		859507	0					
ANR	859607	Identifier	fileOffset		859507	1					
ANR	859608	Argument	"""-stride"""		859507	1					
ANR	859609	PrimaryExpression	"""-stride"""		859507	0					
ANR	859610	PrimaryExpression	0		859507	1					
ANR	859611	RelationalExpression	fileOffset + 2 < argc		859507	1		<			
ANR	859612	AdditiveExpression	fileOffset + 2		859507	0		+			
ANR	859613	Identifier	fileOffset		859507	0					
ANR	859614	PrimaryExpression	2		859507	1					
ANR	859615	Identifier	argc		859507	1					
ANR	859616	CompoundStatement		16:31:373:373	859507	1					
ANR	859617	ExpressionStatement	"stride_length = strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"	494:3:11773:11827	859507	0	True				
ANR	859618	AssignmentExpression	"stride_length = strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"		859507	0		=			
ANR	859619	Identifier	stride_length		859507	0					
ANR	859620	CallExpression	"strtol ( argv [ fileOffset + 1 ] , NULL , 10 )"		859507	1					
ANR	859621	Callee	strtol		859507	0					
ANR	859622	Identifier	strtol		859507	0					
ANR	859623	ArgumentList	argv [ fileOffset + 1 ]		859507	1					
ANR	859624	Argument	argv [ fileOffset + 1 ]		859507	0					
ANR	859625	ArrayIndexing	argv [ fileOffset + 1 ]		859507	0					
ANR	859626	Identifier	argv		859507	0					
ANR	859627	AdditiveExpression	fileOffset + 1		859507	1		+			
ANR	859628	Identifier	fileOffset		859507	0					
ANR	859629	PrimaryExpression	1		859507	1					
ANR	859630	Argument	NULL		859507	1					
ANR	859631	Identifier	NULL		859507	0					
ANR	859632	Argument	10		859507	2					
ANR	859633	PrimaryExpression	10		859507	0					
ANR	859634	ExpressionStatement	"stride_skip = strtol ( argv [ fileOffset + 2 ] , NULL , 10 )"	495:3:11832:11884	859507	1	True				
ANR	859635	AssignmentExpression	"stride_skip = strtol ( argv [ fileOffset + 2 ] , NULL , 10 )"		859507	0		=			
ANR	859636	Identifier	stride_skip		859507	0					
ANR	859637	CallExpression	"strtol ( argv [ fileOffset + 2 ] , NULL , 10 )"		859507	1					
ANR	859638	Callee	strtol		859507	0					
ANR	859639	Identifier	strtol		859507	0					
ANR	859640	ArgumentList	argv [ fileOffset + 2 ]		859507	1					
ANR	859641	Argument	argv [ fileOffset + 2 ]		859507	0					
ANR	859642	ArrayIndexing	argv [ fileOffset + 2 ]		859507	0					
ANR	859643	Identifier	argv		859507	0					
ANR	859644	AdditiveExpression	fileOffset + 2		859507	1		+			
ANR	859645	Identifier	fileOffset		859507	0					
ANR	859646	PrimaryExpression	2		859507	1					
ANR	859647	Argument	NULL		859507	1					
ANR	859648	Identifier	NULL		859507	0					
ANR	859649	Argument	10		859507	2					
ANR	859650	PrimaryExpression	10		859507	0					
ANR	859651	ExpressionStatement	fileOffset += 3	496:3:11889:11904	859507	2	True				
ANR	859652	AssignmentExpression	fileOffset += 3		859507	0		+=			
ANR	859653	Identifier	fileOffset		859507	0					
ANR	859654	PrimaryExpression	3		859507	1					
ANR	859655	ExpressionStatement	more = true	497:3:11909:11920	859507	3	True				
ANR	859656	AssignmentExpression	more = true		859507	0		=			
ANR	859657	Identifier	more		859507	0					
ANR	859658	Identifier	true		859507	1					
ANR	859659	ElseStatement	else		859507	0					
ANR	859660	CompoundStatement		22:7:538:538	859507	0					
ANR	859661	ExpressionStatement	more = false	500:3:11938:11950	859507	0	True				
ANR	859662	AssignmentExpression	more = false		859507	0		=			
ANR	859663	Identifier	more		859507	0					
ANR	859664	Identifier	false		859507	1					
ANR	859665	IfStatement	if ( fileOffset + 2 != argc )		859507	6					
ANR	859666	Condition	fileOffset + 2 != argc	504:4:11964:11985	859507	0	True				
ANR	859667	EqualityExpression	fileOffset + 2 != argc		859507	0		!=			
ANR	859668	AdditiveExpression	fileOffset + 2		859507	0		+			
ANR	859669	Identifier	fileOffset		859507	0					
ANR	859670	PrimaryExpression	2		859507	1					
ANR	859671	Identifier	argc		859507	1					
ANR	859672	CompoundStatement		27:28:593:593	859507	1					
ANR	859673	Statement	printf	505:2:11992:11997	859507	0	True				
ANR	859674	Statement	(	505:8:11998:11998	859507	1	True				
ANR	859675	Statement	"""condor_chirp write [-offset offset] [-stride length skip] """	505:9:11999:12058	859507	2	True				
ANR	859676	Statement	"""remote_file local_file\\n"""	506:3:12063:12088	859507	3	True				
ANR	859677	Statement	)	506:29:12089:12089	859507	4	True				
ANR	859678	ExpressionStatement		506:30:12090:12090	859507	5	True				
ANR	859679	ReturnStatement	return - 1 ;	507:2:12094:12103	859507	6	True				
ANR	859680	UnaryOperationExpression	- 1		859507	0					
ANR	859681	UnaryOperator	-		859507	0					
ANR	859682	PrimaryExpression	1		859507	1					
ANR	859683	IdentifierDeclStatement	char * remote_file = argv [ fileOffset ] ;	509:1:12109:12145	859507	7	True				
ANR	859684	IdentifierDecl	* remote_file = argv [ fileOffset ]		859507	0					
ANR	859685	IdentifierDeclType	char *		859507	0					
ANR	859686	Identifier	remote_file		859507	1					
ANR	859687	AssignmentExpression	* remote_file = argv [ fileOffset ]		859507	2		=			
ANR	859688	Identifier	remote_file		859507	0					
ANR	859689	ArrayIndexing	argv [ fileOffset ]		859507	1					
ANR	859690	Identifier	argv		859507	0					
ANR	859691	Identifier	fileOffset		859507	1					
ANR	859692	IdentifierDeclStatement	char * local_file = argv [ fileOffset + 1 ] ;	510:1:12148:12185	859507	8	True				
ANR	859693	IdentifierDecl	* local_file = argv [ fileOffset + 1 ]		859507	0					
ANR	859694	IdentifierDeclType	char *		859507	0					
ANR	859695	Identifier	local_file		859507	1					
ANR	859696	AssignmentExpression	* local_file = argv [ fileOffset + 1 ]		859507	2		=			
ANR	859697	Identifier	local_file		859507	0					
ANR	859698	ArrayIndexing	argv [ fileOffset + 1 ]		859507	1					
ANR	859699	Identifier	argv		859507	0					
ANR	859700	AdditiveExpression	fileOffset + 1		859507	1		+			
ANR	859701	Identifier	fileOffset		859507	0					
ANR	859702	PrimaryExpression	1		859507	1					
ANR	859703	IdentifierDeclStatement	struct chirp_client * client = 0 ;	512:1:12189:12220	859507	9	True				
ANR	859704	IdentifierDecl	* client = 0		859507	0					
ANR	859705	IdentifierDeclType	struct chirp_client *		859507	0					
ANR	859706	Identifier	client		859507	1					
ANR	859707	AssignmentExpression	* client = 0		859507	2		=			
ANR	859708	Identifier	client		859507	0					
ANR	859709	PrimaryExpression	0		859507	1					
ANR	859710	ExpressionStatement	CONNECT_STARTER ( client )	513:1:12223:12246	859507	10	True				
ANR	859711	CallExpression	CONNECT_STARTER ( client )		859507	0					
ANR	859712	Callee	CONNECT_STARTER		859507	0					
ANR	859713	Identifier	CONNECT_STARTER		859507	0					
ANR	859714	ArgumentList	client		859507	1					
ANR	859715	Argument	client		859507	0					
ANR	859716	Identifier	client		859507	0					
ANR	859717	IdentifierDeclStatement	"int num_read = 0 , num_written = 0 , size = 0 , add = 0 ;"	515:1:12250:12302	859507	11	True				
ANR	859718	IdentifierDecl	num_read = 0		859507	0					
ANR	859719	IdentifierDeclType	int		859507	0					
ANR	859720	Identifier	num_read		859507	1					
ANR	859721	AssignmentExpression	num_read = 0		859507	2		=			
ANR	859722	Identifier	num_read		859507	0					
ANR	859723	PrimaryExpression	0		859507	1					
ANR	859724	IdentifierDecl	num_written = 0		859507	1					
ANR	859725	IdentifierDeclType	int		859507	0					
ANR	859726	Identifier	num_written		859507	1					
ANR	859727	AssignmentExpression	num_written = 0		859507	2		=			
ANR	859728	Identifier	num_written		859507	0					
ANR	859729	PrimaryExpression	0		859507	1					
ANR	859730	IdentifierDecl	size = 0		859507	2					
ANR	859731	IdentifierDeclType	int		859507	0					
ANR	859732	Identifier	size		859507	1					
ANR	859733	AssignmentExpression	size = 0		859507	2		=			
ANR	859734	Identifier	size		859507	0					
ANR	859735	PrimaryExpression	0		859507	1					
ANR	859736	IdentifierDecl	add = 0		859507	3					
ANR	859737	IdentifierDeclType	int		859507	0					
ANR	859738	Identifier	add		859507	1					
ANR	859739	AssignmentExpression	add = 0		859507	2		=			
ANR	859740	Identifier	add		859507	0					
ANR	859741	PrimaryExpression	0		859507	1					
ANR	859742	IdentifierDeclStatement	FILE * rfd ;	516:1:12305:12314	859507	12	True				
ANR	859743	IdentifierDecl	* rfd		859507	0					
ANR	859744	IdentifierDeclType	FILE *		859507	0					
ANR	859745	Identifier	rfd		859507	1					
ANR	859746	IdentifierDeclStatement	char * buf ;	517:1:12317:12326	859507	13	True				
ANR	859747	IdentifierDecl	* buf		859507	0					
ANR	859748	IdentifierDeclType	char *		859507	0					
ANR	859749	Identifier	buf		859507	1					
ANR	859750	IfStatement	if ( stride_length != 0 || stride_skip != 0 )		859507	14					
ANR	859751	Condition	stride_length != 0 || stride_skip != 0	519:4:12333:12370	859507	0	True				
ANR	859752	OrExpression	stride_length != 0 || stride_skip != 0		859507	0		||			
ANR	859753	EqualityExpression	stride_length != 0		859507	0		!=			
ANR	859754	Identifier	stride_length		859507	0					
ANR	859755	PrimaryExpression	0		859507	1					
ANR	859756	EqualityExpression	stride_skip != 0		859507	1		!=			
ANR	859757	Identifier	stride_skip		859507	0					
ANR	859758	PrimaryExpression	0		859507	1					
ANR	859759	CompoundStatement		42:44:978:978	859507	1					
ANR	859760	ExpressionStatement	size = stride_length	520:2:12377:12397	859507	0	True				
ANR	859761	AssignmentExpression	size = stride_length		859507	0		=			
ANR	859762	Identifier	size		859507	0					
ANR	859763	Identifier	stride_length		859507	1					
ANR	859764	ElseStatement	else		859507	0					
ANR	859765	CompoundStatement		44:8:1012:1012	859507	0					
ANR	859766	ExpressionStatement	size = 1024	522:2:12411:12422	859507	0	True				
ANR	859767	AssignmentExpression	size = 1024		859507	0		=			
ANR	859768	Identifier	size		859507	0					
ANR	859769	PrimaryExpression	1024		859507	1					
ANR	859770	ExpressionStatement	buf = ( char * ) malloc ( size )	524:1:12428:12453	859507	15	True				
ANR	859771	AssignmentExpression	buf = ( char * ) malloc ( size )		859507	0		=			
ANR	859772	Identifier	buf		859507	0					
ANR	859773	CastExpression	( char * ) malloc ( size )		859507	1					
ANR	859774	CastTarget	char *		859507	0					
ANR	859775	CallExpression	malloc ( size )		859507	1					
ANR	859776	Callee	malloc		859507	0					
ANR	859777	Identifier	malloc		859507	0					
ANR	859778	ArgumentList	size		859507	1					
ANR	859779	Argument	size		859507	0					
ANR	859780	Identifier	size		859507	0					
ANR	859781	IfStatement	"if ( strcmp ( local_file , ""-"" ) == 0 )"		859507	16					
ANR	859782	Condition	"strcmp ( local_file , ""-"" ) == 0"	527:5:12493:12520	859507	0	True				
ANR	859783	EqualityExpression	"strcmp ( local_file , ""-"" ) == 0"		859507	0		==			
ANR	859784	CallExpression	"strcmp ( local_file , ""-"" )"		859507	0					
ANR	859785	Callee	strcmp		859507	0					
ANR	859786	Identifier	strcmp		859507	0					
ANR	859787	ArgumentList	local_file		859507	1					
ANR	859788	Argument	local_file		859507	0					
ANR	859789	Identifier	local_file		859507	0					
ANR	859790	Argument	"""-"""		859507	1					
ANR	859791	PrimaryExpression	"""-"""		859507	0					
ANR	859792	PrimaryExpression	0		859507	1					
ANR	859793	CompoundStatement		50:35:1128:1128	859507	1					
ANR	859794	ExpressionStatement	rfd = stdin	528:2:12527:12538	859507	0	True				
ANR	859795	AssignmentExpression	rfd = stdin		859507	0		=			
ANR	859796	Identifier	rfd		859507	0					
ANR	859797	Identifier	stdin		859507	1					
ANR	859798	ElseStatement	else		859507	0					
ANR	859799	CompoundStatement		52:8:1153:1153	859507	0					
ANR	859800	Statement	rfd	530:2:12552:12554	859507	0	True				
ANR	859801	Statement	=	530:6:12556:12556	859507	1	True				
ANR	859802	Statement	::	530:8:12558:12559	859507	2	True				
ANR	859803	ExpressionStatement	"safe_fopen_wrapper_follow ( local_file , ""rb"" )"	530:10:12560:12603	859507	3	True				
ANR	859804	CallExpression	"safe_fopen_wrapper_follow ( local_file , ""rb"" )"		859507	0					
ANR	859805	Callee	safe_fopen_wrapper_follow		859507	0					
ANR	859806	Identifier	safe_fopen_wrapper_follow		859507	0					
ANR	859807	ArgumentList	local_file		859507	1					
ANR	859808	Argument	local_file		859507	0					
ANR	859809	Identifier	local_file		859507	0					
ANR	859810	Argument	"""rb"""		859507	1					
ANR	859811	PrimaryExpression	"""rb"""		859507	0					
ANR	859812	IfStatement	if ( ! rfd )		859507	4					
ANR	859813	Condition	! rfd	531:6:12611:12614	859507	0	True				
ANR	859814	UnaryOperationExpression	! rfd		859507	0					
ANR	859815	UnaryOperator	!		859507	0					
ANR	859816	Identifier	rfd		859507	1					
ANR	859817	CompoundStatement		54:12:1222:1222	859507	1					
ANR	859818	ExpressionStatement	free ( ( char * ) buf )	532:3:12622:12638	859507	0	True				
ANR	859819	CallExpression	free ( ( char * ) buf )		859507	0					
ANR	859820	Callee	free		859507	0					
ANR	859821	Identifier	free		859507	0					
ANR	859822	ArgumentList	( char * ) buf		859507	1					
ANR	859823	Argument	( char * ) buf		859507	0					
ANR	859824	CastExpression	( char * ) buf		859507	0					
ANR	859825	CastTarget	char *		859507	0					
ANR	859826	Identifier	buf		859507	1					
ANR	859827	ExpressionStatement	"fprintf ( stderr , ""Can't open local file %s\\n"" , local_file )"	533:3:12643:12700	859507	1	True				
ANR	859828	CallExpression	"fprintf ( stderr , ""Can't open local file %s\\n"" , local_file )"		859507	0					
ANR	859829	Callee	fprintf		859507	0					
ANR	859830	Identifier	fprintf		859507	0					
ANR	859831	ArgumentList	stderr		859507	1					
ANR	859832	Argument	stderr		859507	0					
ANR	859833	Identifier	stderr		859507	0					
ANR	859834	Argument	"""Can't open local file %s\\n"""		859507	1					
ANR	859835	PrimaryExpression	"""Can't open local file %s\\n"""		859507	0					
ANR	859836	Argument	local_file		859507	2					
ANR	859837	Identifier	local_file		859507	0					
ANR	859838	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , - 1 )"	534:3:12705:12738	859507	2	True				
ANR	859839	CallExpression	"DISCONNECT_AND_RETURN ( client , - 1 )"		859507	0					
ANR	859840	Callee	DISCONNECT_AND_RETURN		859507	0					
ANR	859841	Identifier	DISCONNECT_AND_RETURN		859507	0					
ANR	859842	ArgumentList	client		859507	1					
ANR	859843	Argument	client		859507	0					
ANR	859844	Identifier	client		859507	0					
ANR	859845	Argument	- 1		859507	1					
ANR	859846	UnaryOperationExpression	- 1		859507	0					
ANR	859847	UnaryOperator	-		859507	0					
ANR	859848	PrimaryExpression	1		859507	1					
ANR	859849	IdentifierDeclStatement	"int fd = chirp_client_open ( client , remote_file , ""w"" , 0 ) ;"	539:1:12776:12831	859507	17	True				
ANR	859850	IdentifierDecl	"fd = chirp_client_open ( client , remote_file , ""w"" , 0 )"		859507	0					
ANR	859851	IdentifierDeclType	int		859507	0					
ANR	859852	Identifier	fd		859507	1					
ANR	859853	AssignmentExpression	"fd = chirp_client_open ( client , remote_file , ""w"" , 0 )"		859507	2		=			
ANR	859854	Identifier	fd		859507	0					
ANR	859855	CallExpression	"chirp_client_open ( client , remote_file , ""w"" , 0 )"		859507	1					
ANR	859856	Callee	chirp_client_open		859507	0					
ANR	859857	Identifier	chirp_client_open		859507	0					
ANR	859858	ArgumentList	client		859507	1					
ANR	859859	Argument	client		859507	0					
ANR	859860	Identifier	client		859507	0					
ANR	859861	Argument	remote_file		859507	1					
ANR	859862	Identifier	remote_file		859507	0					
ANR	859863	Argument	"""w"""		859507	2					
ANR	859864	PrimaryExpression	"""w"""		859507	0					
ANR	859865	Argument	0		859507	3					
ANR	859866	PrimaryExpression	0		859507	0					
ANR	859867	IfStatement	if ( fd < 0 )		859507	18					
ANR	859868	Condition	fd < 0	540:4:12837:12842	859507	0	True				
ANR	859869	RelationalExpression	fd < 0		859507	0		<			
ANR	859870	Identifier	fd		859507	0					
ANR	859871	PrimaryExpression	0		859507	1					
ANR	859872	CompoundStatement		63:12:1450:1450	859507	1					
ANR	859873	ExpressionStatement	fclose ( rfd )	541:2:12849:12860	859507	0	True				
ANR	859874	CallExpression	fclose ( rfd )		859507	0					
ANR	859875	Callee	fclose		859507	0					
ANR	859876	Identifier	fclose		859507	0					
ANR	859877	ArgumentList	rfd		859507	1					
ANR	859878	Argument	rfd		859507	0					
ANR	859879	Identifier	rfd		859507	0					
ANR	859880	ExpressionStatement	free ( ( char * ) buf )	542:2:12864:12880	859507	1	True				
ANR	859881	CallExpression	free ( ( char * ) buf )		859507	0					
ANR	859882	Callee	free		859507	0					
ANR	859883	Identifier	free		859507	0					
ANR	859884	ArgumentList	( char * ) buf		859507	1					
ANR	859885	Argument	( char * ) buf		859507	0					
ANR	859886	CastExpression	( char * ) buf		859507	0					
ANR	859887	CastTarget	char *		859507	0					
ANR	859888	Identifier	buf		859507	1					
ANR	859889	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , fd )"	543:2:12884:12917	859507	2	True				
ANR	859890	CallExpression	"DISCONNECT_AND_RETURN ( client , fd )"		859507	0					
ANR	859891	Callee	DISCONNECT_AND_RETURN		859507	0					
ANR	859892	Identifier	DISCONNECT_AND_RETURN		859507	0					
ANR	859893	ArgumentList	client		859507	1					
ANR	859894	Argument	client		859507	0					
ANR	859895	Identifier	client		859507	0					
ANR	859896	Argument	fd		859507	1					
ANR	859897	Identifier	fd		859507	0					
ANR	859898	DoStatement	do		859507	19					
ANR	859899	CompoundStatement		70:4:1553:1553	859507	0					
ANR	859900	Statement	num_read	548:2:12952:12959	859507	0	True				
ANR	859901	Statement	=	548:11:12961:12961	859507	1	True				
ANR	859902	Statement	::	548:13:12963:12964	859507	2	True				
ANR	859903	ExpressionStatement	"fread ( buf , 1 , size , rfd )"	548:15:12965:12989	859507	3	True				
ANR	859904	CallExpression	"fread ( buf , 1 , size , rfd )"		859507	0					
ANR	859905	Callee	fread		859507	0					
ANR	859906	Identifier	fread		859507	0					
ANR	859907	ArgumentList	buf		859507	1					
ANR	859908	Argument	buf		859507	0					
ANR	859909	Identifier	buf		859507	0					
ANR	859910	Argument	1		859507	1					
ANR	859911	PrimaryExpression	1		859507	0					
ANR	859912	Argument	size		859507	2					
ANR	859913	Identifier	size		859507	0					
ANR	859914	Argument	rfd		859507	3					
ANR	859915	Identifier	rfd		859507	0					
ANR	859916	IfStatement	if ( num_read < 0 )		859507	4					
ANR	859917	Condition	num_read < 0	549:6:12997:13008	859507	0	True				
ANR	859918	RelationalExpression	num_read < 0		859507	0		<			
ANR	859919	Identifier	num_read		859507	0					
ANR	859920	PrimaryExpression	0		859507	1					
ANR	859921	CompoundStatement		72:20:1616:1616	859507	1					
ANR	859922	ExpressionStatement	fclose ( rfd )	550:3:13016:13027	859507	0	True				
ANR	859923	CallExpression	fclose ( rfd )		859507	0					
ANR	859924	Callee	fclose		859507	0					
ANR	859925	Identifier	fclose		859507	0					
ANR	859926	ArgumentList	rfd		859507	1					
ANR	859927	Argument	rfd		859507	0					
ANR	859928	Identifier	rfd		859507	0					
ANR	859929	ExpressionStatement	free ( ( char * ) buf )	551:3:13032:13048	859507	1	True				
ANR	859930	CallExpression	free ( ( char * ) buf )		859507	0					
ANR	859931	Callee	free		859507	0					
ANR	859932	Identifier	free		859507	0					
ANR	859933	ArgumentList	( char * ) buf		859507	1					
ANR	859934	Argument	( char * ) buf		859507	0					
ANR	859935	CastExpression	( char * ) buf		859507	0					
ANR	859936	CastTarget	char *		859507	0					
ANR	859937	Identifier	buf		859507	1					
ANR	859938	ExpressionStatement	"fprintf ( stderr , ""Local read error on %s\\n"" , local_file )"	552:3:13053:13108	859507	2	True				
ANR	859939	CallExpression	"fprintf ( stderr , ""Local read error on %s\\n"" , local_file )"		859507	0					
ANR	859940	Callee	fprintf		859507	0					
ANR	859941	Identifier	fprintf		859507	0					
ANR	859942	ArgumentList	stderr		859507	1					
ANR	859943	Argument	stderr		859507	0					
ANR	859944	Identifier	stderr		859507	0					
ANR	859945	Argument	"""Local read error on %s\\n"""		859507	1					
ANR	859946	PrimaryExpression	"""Local read error on %s\\n"""		859507	0					
ANR	859947	Argument	local_file		859507	2					
ANR	859948	Identifier	local_file		859507	0					
ANR	859949	ExpressionStatement	"CLOSE_DISCONNECT_AND_RETURN ( client , fd , - 1 )"	553:3:13113:13156	859507	3	True				
ANR	859950	CallExpression	"CLOSE_DISCONNECT_AND_RETURN ( client , fd , - 1 )"		859507	0					
ANR	859951	Callee	CLOSE_DISCONNECT_AND_RETURN		859507	0					
ANR	859952	Identifier	CLOSE_DISCONNECT_AND_RETURN		859507	0					
ANR	859953	ArgumentList	client		859507	1					
ANR	859954	Argument	client		859507	0					
ANR	859955	Identifier	client		859507	0					
ANR	859956	Argument	fd		859507	1					
ANR	859957	Identifier	fd		859507	0					
ANR	859958	Argument	- 1		859507	2					
ANR	859959	UnaryOperationExpression	- 1		859507	0					
ANR	859960	UnaryOperator	-		859507	0					
ANR	859961	PrimaryExpression	1		859507	1					
ANR	859962	IfStatement	if ( num_read == 0 )		859507	5					
ANR	859963	Condition	num_read == 0	557:6:13179:13191	859507	0	True				
ANR	859964	EqualityExpression	num_read == 0		859507	0		==			
ANR	859965	Identifier	num_read		859507	0					
ANR	859966	PrimaryExpression	0		859507	1					
ANR	859967	CompoundStatement		80:21:1799:1799	859507	1					
ANR	859968	BreakStatement	break ;	558:3:13199:13204	859507	0	True				
ANR	859969	ExpressionStatement	"num_written = chirp_client_pwrite ( client , fd , buf , num_read , offset + add )"	562:2:13231:13303	859507	6	True				
ANR	859970	AssignmentExpression	"num_written = chirp_client_pwrite ( client , fd , buf , num_read , offset + add )"		859507	0		=			
ANR	859971	Identifier	num_written		859507	0					
ANR	859972	CallExpression	"chirp_client_pwrite ( client , fd , buf , num_read , offset + add )"		859507	1					
ANR	859973	Callee	chirp_client_pwrite		859507	0					
ANR	859974	Identifier	chirp_client_pwrite		859507	0					
ANR	859975	ArgumentList	client		859507	1					
ANR	859976	Argument	client		859507	0					
ANR	859977	Identifier	client		859507	0					
ANR	859978	Argument	fd		859507	1					
ANR	859979	Identifier	fd		859507	0					
ANR	859980	Argument	buf		859507	2					
ANR	859981	Identifier	buf		859507	0					
ANR	859982	Argument	num_read		859507	3					
ANR	859983	Identifier	num_read		859507	0					
ANR	859984	Argument	offset + add		859507	4					
ANR	859985	AdditiveExpression	offset + add		859507	0		+			
ANR	859986	Identifier	offset		859507	0					
ANR	859987	Identifier	add		859507	1					
ANR	859988	IfStatement	if ( num_written != num_read )		859507	7					
ANR	859989	Condition	num_written != num_read	565:5:13365:13387	859507	0	True				
ANR	859990	EqualityExpression	num_written != num_read		859507	0		!=			
ANR	859991	Identifier	num_written		859507	0					
ANR	859992	Identifier	num_read		859507	1					
ANR	859993	CompoundStatement		88:30:1995:1995	859507	1					
ANR	859994	ExpressionStatement	fclose ( rfd )	566:3:13395:13406	859507	0	True				
ANR	859995	CallExpression	fclose ( rfd )		859507	0					
ANR	859996	Callee	fclose		859507	0					
ANR	859997	Identifier	fclose		859507	0					
ANR	859998	ArgumentList	rfd		859507	1					
ANR	859999	Argument	rfd		859507	0					
ANR	860000	Identifier	rfd		859507	0					
ANR	860001	ExpressionStatement	free ( ( char * ) buf )	567:3:13411:13427	859507	1	True				
ANR	860002	CallExpression	free ( ( char * ) buf )		859507	0					
ANR	860003	Callee	free		859507	0					
ANR	860004	Identifier	free		859507	0					
ANR	860005	ArgumentList	( char * ) buf		859507	1					
ANR	860006	Argument	( char * ) buf		859507	0					
ANR	860007	CastExpression	( char * ) buf		859507	0					
ANR	860008	CastTarget	char *		859507	0					
ANR	860009	Identifier	buf		859507	1					
ANR	860010	ExpressionStatement	"fprintf ( stderr , ""pwrite unable to write %d bytes\\n"" , num_read )"	568:3:13432:13494	859507	2	True				
ANR	860011	CallExpression	"fprintf ( stderr , ""pwrite unable to write %d bytes\\n"" , num_read )"		859507	0					
ANR	860012	Callee	fprintf		859507	0					
ANR	860013	Identifier	fprintf		859507	0					
ANR	860014	ArgumentList	stderr		859507	1					
ANR	860015	Argument	stderr		859507	0					
ANR	860016	Identifier	stderr		859507	0					
ANR	860017	Argument	"""pwrite unable to write %d bytes\\n"""		859507	1					
ANR	860018	PrimaryExpression	"""pwrite unable to write %d bytes\\n"""		859507	0					
ANR	860019	Argument	num_read		859507	2					
ANR	860020	Identifier	num_read		859507	0					
ANR	860021	ExpressionStatement	"CLOSE_DISCONNECT_AND_RETURN ( client , fd , - 1 )"	569:3:13499:13542	859507	3	True				
ANR	860022	CallExpression	"CLOSE_DISCONNECT_AND_RETURN ( client , fd , - 1 )"		859507	0					
ANR	860023	Callee	CLOSE_DISCONNECT_AND_RETURN		859507	0					
ANR	860024	Identifier	CLOSE_DISCONNECT_AND_RETURN		859507	0					
ANR	860025	ArgumentList	client		859507	1					
ANR	860026	Argument	client		859507	0					
ANR	860027	Identifier	client		859507	0					
ANR	860028	Argument	fd		859507	1					
ANR	860029	Identifier	fd		859507	0					
ANR	860030	Argument	- 1		859507	2					
ANR	860031	UnaryOperationExpression	- 1		859507	0					
ANR	860032	UnaryOperator	-		859507	0					
ANR	860033	PrimaryExpression	1		859507	1					
ANR	860034	IfStatement	if ( stride_length != 0 || stride_skip != 0 )		859507	8					
ANR	860035	Condition	stride_length != 0 || stride_skip != 0	572:5:13556:13593	859507	0	True				
ANR	860036	OrExpression	stride_length != 0 || stride_skip != 0		859507	0		||			
ANR	860037	EqualityExpression	stride_length != 0		859507	0		!=			
ANR	860038	Identifier	stride_length		859507	0					
ANR	860039	PrimaryExpression	0		859507	1					
ANR	860040	EqualityExpression	stride_skip != 0		859507	1		!=			
ANR	860041	Identifier	stride_skip		859507	0					
ANR	860042	PrimaryExpression	0		859507	1					
ANR	860043	CompoundStatement		95:45:2201:2201	859507	1					
ANR	860044	ExpressionStatement	add += stride_skip	573:3:13601:13619	859507	0	True				
ANR	860045	AssignmentExpression	add += stride_skip		859507	0		+=			
ANR	860046	Identifier	add		859507	0					
ANR	860047	Identifier	stride_skip		859507	1					
ANR	860048	ElseStatement	else		859507	0					
ANR	860049	CompoundStatement		97:9:2235:2235	859507	0					
ANR	860050	ExpressionStatement	add += num_read	575:3:13635:13650	859507	0	True				
ANR	860051	AssignmentExpression	add += num_read		859507	0		+=			
ANR	860052	Identifier	add		859507	0					
ANR	860053	Identifier	num_read		859507	1					
ANR	860054	Condition	num_read > 0	577:10:13666:13677	859507	1	True				
ANR	860055	RelationalExpression	num_read > 0		859507	0		>			
ANR	860056	Identifier	num_read		859507	0					
ANR	860057	PrimaryExpression	0		859507	1					
ANR	860058	ExpressionStatement	fclose ( rfd )	579:1:13684:13695	859507	20	True				
ANR	860059	CallExpression	fclose ( rfd )		859507	0					
ANR	860060	Callee	fclose		859507	0					
ANR	860061	Identifier	fclose		859507	0					
ANR	860062	ArgumentList	rfd		859507	1					
ANR	860063	Argument	rfd		859507	0					
ANR	860064	Identifier	rfd		859507	0					
ANR	860065	ExpressionStatement	free ( ( char * ) buf )	580:1:13698:13714	859507	21	True				
ANR	860066	CallExpression	free ( ( char * ) buf )		859507	0					
ANR	860067	Callee	free		859507	0					
ANR	860068	Identifier	free		859507	0					
ANR	860069	ArgumentList	( char * ) buf		859507	1					
ANR	860070	Argument	( char * ) buf		859507	0					
ANR	860071	CastExpression	( char * ) buf		859507	0					
ANR	860072	CastTarget	char *		859507	0					
ANR	860073	Identifier	buf		859507	1					
ANR	860074	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , 0 )"	581:1:13717:13749	859507	22	True				
ANR	860075	CallExpression	"DISCONNECT_AND_RETURN ( client , 0 )"		859507	0					
ANR	860076	Callee	DISCONNECT_AND_RETURN		859507	0					
ANR	860077	Identifier	DISCONNECT_AND_RETURN		859507	0					
ANR	860078	ArgumentList	client		859507	1					
ANR	860079	Argument	client		859507	0					
ANR	860080	Identifier	client		859507	0					
ANR	860081	Argument	0		859507	1					
ANR	860082	PrimaryExpression	0		859507	0					
ANR	860083	ReturnType	int		859507	1					
ANR	860084	Identifier	chirp_write		859507	2					
ANR	860085	ParameterList	"int argc , char * * argv"		859507	3					
ANR	860086	Parameter	int argc	478:16:11371:11378	859507	0	True				
ANR	860087	ParameterType	int		859507	0					
ANR	860088	Identifier	argc		859507	1					
ANR	860089	Parameter	char * * argv	478:26:11381:11391	859507	1	True				
ANR	860090	ParameterType	char * *		859507	0					
ANR	860091	Identifier	argv		859507	1					
ANR	860092	CFGEntryNode	ENTRY		859507		True				
ANR	860093	CFGExitNode	EXIT		859507		True				
ANR	860094	Symbol	stdin		859507						
ANR	860095	Symbol	num_read		859507						
ANR	860096	Symbol	* argv		859507						
ANR	860097	Symbol	num_written		859507						
ANR	860098	Symbol	argv		859507						
ANR	860099	Symbol	strtol		859507						
ANR	860100	Symbol	client		859507						
ANR	860101	Symbol	argc		859507						
ANR	860102	Symbol	strcmp		859507						
ANR	860103	Symbol	add		859507						
ANR	860104	Symbol	malloc		859507						
ANR	860105	Symbol	NULL		859507						
ANR	860106	Symbol	offset		859507						
ANR	860107	Symbol	* fileOffset		859507						
ANR	860108	Symbol	more		859507						
ANR	860109	Symbol	false		859507						
ANR	860110	Symbol	fileOffset		859507						
ANR	860111	Symbol	stderr		859507						
ANR	860112	Symbol	stride_length		859507						
ANR	860113	Symbol	rfd		859507						
ANR	860114	Symbol	buf		859507						
ANR	860115	Symbol	stride_skip		859507						
ANR	860116	Symbol	size		859507						
ANR	860117	Symbol	true		859507						
ANR	860118	Symbol	remote_file		859507						
ANR	860119	Symbol	chirp_client_open		859507						
ANR	860120	Symbol	chirp_client_pwrite		859507						
ANR	860121	Symbol	local_file		859507						
ANR	860122	Symbol	fd		859507						
ANR	860123	Function	chirp_rmdir	584:0:13754:14218							
ANR	860124	FunctionDef	"chirp_rmdir (int argc , char * * argv)"		860123	0					
ANR	860125	CompoundStatement		584:39:13793:14218	860123	0					
ANR	860126	IfStatement	"if ( argc < 3 || argc > 4 || ( argc == 4 && strcmp ( argv [ 2 ] , ""-r"" ) != 0 ) )"		860123	0					
ANR	860127	Condition	"argc < 3 || argc > 4 || ( argc == 4 && strcmp ( argv [ 2 ] , ""-r"" ) != 0 )"	585:5:13800:13864	860123	0	True				
ANR	860128	OrExpression	"argc < 3 || argc > 4 || ( argc == 4 && strcmp ( argv [ 2 ] , ""-r"" ) != 0 )"		860123	0		||			
ANR	860129	RelationalExpression	argc < 3		860123	0		<			
ANR	860130	Identifier	argc		860123	0					
ANR	860131	PrimaryExpression	3		860123	1					
ANR	860132	OrExpression	"argc > 4 || ( argc == 4 && strcmp ( argv [ 2 ] , ""-r"" ) != 0 )"		860123	1		||			
ANR	860133	RelationalExpression	argc > 4		860123	0		>			
ANR	860134	Identifier	argc		860123	0					
ANR	860135	PrimaryExpression	4		860123	1					
ANR	860136	AndExpression	"argc == 4 && strcmp ( argv [ 2 ] , ""-r"" ) != 0"		860123	1		&&			
ANR	860137	EqualityExpression	argc == 4		860123	0		==			
ANR	860138	Identifier	argc		860123	0					
ANR	860139	PrimaryExpression	4		860123	1					
ANR	860140	EqualityExpression	"strcmp ( argv [ 2 ] , ""-r"" ) != 0"		860123	1		!=			
ANR	860141	CallExpression	"strcmp ( argv [ 2 ] , ""-r"" )"		860123	0					
ANR	860142	Callee	strcmp		860123	0					
ANR	860143	Identifier	strcmp		860123	0					
ANR	860144	ArgumentList	argv [ 2 ]		860123	1					
ANR	860145	Argument	argv [ 2 ]		860123	0					
ANR	860146	ArrayIndexing	argv [ 2 ]		860123	0					
ANR	860147	Identifier	argv		860123	0					
ANR	860148	PrimaryExpression	2		860123	1					
ANR	860149	Argument	"""-r"""		860123	1					
ANR	860150	PrimaryExpression	"""-r"""		860123	0					
ANR	860151	PrimaryExpression	0		860123	1					
ANR	860152	CompoundStatement		2:72:73:73	860123	1					
ANR	860153	ExpressionStatement	"printf ( ""condor_chirp rmdir [-r] remotepath\\n"" )"	586:2:13871:13917	860123	0	True				
ANR	860154	CallExpression	"printf ( ""condor_chirp rmdir [-r] remotepath\\n"" )"		860123	0					
ANR	860155	Callee	printf		860123	0					
ANR	860156	Identifier	printf		860123	0					
ANR	860157	ArgumentList	"""condor_chirp rmdir [-r] remotepath\\n"""		860123	1					
ANR	860158	Argument	"""condor_chirp rmdir [-r] remotepath\\n"""		860123	0					
ANR	860159	PrimaryExpression	"""condor_chirp rmdir [-r] remotepath\\n"""		860123	0					
ANR	860160	ReturnStatement	return - 1 ;	587:2:13921:13930	860123	1	True				
ANR	860161	UnaryOperationExpression	- 1		860123	0					
ANR	860162	UnaryOperator	-		860123	0					
ANR	860163	PrimaryExpression	1		860123	1					
ANR	860164	IdentifierDeclStatement	struct chirp_client * client = 0 ;	590:1:13938:13969	860123	1	True				
ANR	860165	IdentifierDecl	* client = 0		860123	0					
ANR	860166	IdentifierDeclType	struct chirp_client *		860123	0					
ANR	860167	Identifier	client		860123	1					
ANR	860168	AssignmentExpression	* client = 0		860123	2		=			
ANR	860169	Identifier	client		860123	0					
ANR	860170	PrimaryExpression	0		860123	1					
ANR	860171	ExpressionStatement	CONNECT_STARTER ( client )	591:1:13972:13995	860123	2	True				
ANR	860172	CallExpression	CONNECT_STARTER ( client )		860123	0					
ANR	860173	Callee	CONNECT_STARTER		860123	0					
ANR	860174	Identifier	CONNECT_STARTER		860123	0					
ANR	860175	ArgumentList	client		860123	1					
ANR	860176	Argument	client		860123	0					
ANR	860177	Identifier	client		860123	0					
ANR	860178	IdentifierDeclStatement	int status = - 1 ;	593:1:14000:14015	860123	3	True				
ANR	860179	IdentifierDecl	status = - 1		860123	0					
ANR	860180	IdentifierDeclType	int		860123	0					
ANR	860181	Identifier	status		860123	1					
ANR	860182	AssignmentExpression	status = - 1		860123	2		=			
ANR	860183	Identifier	status		860123	0					
ANR	860184	UnaryOperationExpression	- 1		860123	1					
ANR	860185	UnaryOperator	-		860123	0					
ANR	860186	PrimaryExpression	1		860123	1					
ANR	860187	IfStatement	if ( argc == 4 )		860123	4					
ANR	860188	Condition	argc == 4	596:4:14056:14064	860123	0	True				
ANR	860189	EqualityExpression	argc == 4		860123	0		==			
ANR	860190	Identifier	argc		860123	0					
ANR	860191	PrimaryExpression	4		860123	1					
ANR	860192	CompoundStatement		13:15:273:273	860123	1					
ANR	860193	ExpressionStatement	"status = chirp_client_rmall ( client , argv [ 3 ] )"	597:2:14071:14115	860123	0	True				
ANR	860194	AssignmentExpression	"status = chirp_client_rmall ( client , argv [ 3 ] )"		860123	0		=			
ANR	860195	Identifier	status		860123	0					
ANR	860196	CallExpression	"chirp_client_rmall ( client , argv [ 3 ] )"		860123	1					
ANR	860197	Callee	chirp_client_rmall		860123	0					
ANR	860198	Identifier	chirp_client_rmall		860123	0					
ANR	860199	ArgumentList	client		860123	1					
ANR	860200	Argument	client		860123	0					
ANR	860201	Identifier	client		860123	0					
ANR	860202	Argument	argv [ 3 ]		860123	1					
ANR	860203	ArrayIndexing	argv [ 3 ]		860123	0					
ANR	860204	Identifier	argv		860123	0					
ANR	860205	PrimaryExpression	3		860123	1					
ANR	860206	ElseStatement	else		860123	0					
ANR	860207	CompoundStatement		15:8:331:331	860123	0					
ANR	860208	ExpressionStatement	"status = chirp_client_rmdir ( client , argv [ 2 ] )"	599:2:14129:14173	860123	0	True				
ANR	860209	AssignmentExpression	"status = chirp_client_rmdir ( client , argv [ 2 ] )"		860123	0		=			
ANR	860210	Identifier	status		860123	0					
ANR	860211	CallExpression	"chirp_client_rmdir ( client , argv [ 2 ] )"		860123	1					
ANR	860212	Callee	chirp_client_rmdir		860123	0					
ANR	860213	Identifier	chirp_client_rmdir		860123	0					
ANR	860214	ArgumentList	client		860123	1					
ANR	860215	Argument	client		860123	0					
ANR	860216	Identifier	client		860123	0					
ANR	860217	Argument	argv [ 2 ]		860123	1					
ANR	860218	ArrayIndexing	argv [ 2 ]		860123	0					
ANR	860219	Identifier	argv		860123	0					
ANR	860220	PrimaryExpression	2		860123	1					
ANR	860221	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , status )"	601:1:14179:14216	860123	5	True				
ANR	860222	CallExpression	"DISCONNECT_AND_RETURN ( client , status )"		860123	0					
ANR	860223	Callee	DISCONNECT_AND_RETURN		860123	0					
ANR	860224	Identifier	DISCONNECT_AND_RETURN		860123	0					
ANR	860225	ArgumentList	client		860123	1					
ANR	860226	Argument	client		860123	0					
ANR	860227	Identifier	client		860123	0					
ANR	860228	Argument	status		860123	1					
ANR	860229	Identifier	status		860123	0					
ANR	860230	ReturnType	int		860123	1					
ANR	860231	Identifier	chirp_rmdir		860123	2					
ANR	860232	ParameterList	"int argc , char * * argv"		860123	3					
ANR	860233	Parameter	int argc	584:16:13770:13777	860123	0	True				
ANR	860234	ParameterType	int		860123	0					
ANR	860235	Identifier	argc		860123	1					
ANR	860236	Parameter	char * * argv	584:26:13780:13790	860123	1	True				
ANR	860237	ParameterType	char * *		860123	0					
ANR	860238	Identifier	argv		860123	1					
ANR	860239	CFGEntryNode	ENTRY		860123		True				
ANR	860240	CFGExitNode	EXIT		860123		True				
ANR	860241	Symbol	argc		860123						
ANR	860242	Symbol	strcmp		860123						
ANR	860243	Symbol	client		860123						
ANR	860244	Symbol	* argv		860123						
ANR	860245	Symbol	chirp_client_rmall		860123						
ANR	860246	Symbol	argv		860123						
ANR	860247	Symbol	chirp_client_rmdir		860123						
ANR	860248	Symbol	status		860123						
ANR	860249	Function	chirp_getdir	604:0:14221:15098							
ANR	860250	FunctionDef	"chirp_getdir (int argc , char * * argv)"		860249	0					
ANR	860251	CompoundStatement		604:40:14261:15098	860249	0					
ANR	860252	IfStatement	"if ( argc < 3 || argc > 4 || ( argc == 4 && strcmp ( argv [ 2 ] , ""-l"" ) != 0 ) )"		860249	0					
ANR	860253	Condition	"argc < 3 || argc > 4 || ( argc == 4 && strcmp ( argv [ 2 ] , ""-l"" ) != 0 )"	605:5:14268:14332	860249	0	True				
ANR	860254	OrExpression	"argc < 3 || argc > 4 || ( argc == 4 && strcmp ( argv [ 2 ] , ""-l"" ) != 0 )"		860249	0		||			
ANR	860255	RelationalExpression	argc < 3		860249	0		<			
ANR	860256	Identifier	argc		860249	0					
ANR	860257	PrimaryExpression	3		860249	1					
ANR	860258	OrExpression	"argc > 4 || ( argc == 4 && strcmp ( argv [ 2 ] , ""-l"" ) != 0 )"		860249	1		||			
ANR	860259	RelationalExpression	argc > 4		860249	0		>			
ANR	860260	Identifier	argc		860249	0					
ANR	860261	PrimaryExpression	4		860249	1					
ANR	860262	AndExpression	"argc == 4 && strcmp ( argv [ 2 ] , ""-l"" ) != 0"		860249	1		&&			
ANR	860263	EqualityExpression	argc == 4		860249	0		==			
ANR	860264	Identifier	argc		860249	0					
ANR	860265	PrimaryExpression	4		860249	1					
ANR	860266	EqualityExpression	"strcmp ( argv [ 2 ] , ""-l"" ) != 0"		860249	1		!=			
ANR	860267	CallExpression	"strcmp ( argv [ 2 ] , ""-l"" )"		860249	0					
ANR	860268	Callee	strcmp		860249	0					
ANR	860269	Identifier	strcmp		860249	0					
ANR	860270	ArgumentList	argv [ 2 ]		860249	1					
ANR	860271	Argument	argv [ 2 ]		860249	0					
ANR	860272	ArrayIndexing	argv [ 2 ]		860249	0					
ANR	860273	Identifier	argv		860249	0					
ANR	860274	PrimaryExpression	2		860249	1					
ANR	860275	Argument	"""-l"""		860249	1					
ANR	860276	PrimaryExpression	"""-l"""		860249	0					
ANR	860277	PrimaryExpression	0		860249	1					
ANR	860278	CompoundStatement		2:72:73:73	860249	1					
ANR	860279	ExpressionStatement	"printf ( ""condor_chirp getdir [-l] remotepath\\n"" )"	606:2:14339:14386	860249	0	True				
ANR	860280	CallExpression	"printf ( ""condor_chirp getdir [-l] remotepath\\n"" )"		860249	0					
ANR	860281	Callee	printf		860249	0					
ANR	860282	Identifier	printf		860249	0					
ANR	860283	ArgumentList	"""condor_chirp getdir [-l] remotepath\\n"""		860249	1					
ANR	860284	Argument	"""condor_chirp getdir [-l] remotepath\\n"""		860249	0					
ANR	860285	PrimaryExpression	"""condor_chirp getdir [-l] remotepath\\n"""		860249	0					
ANR	860286	ReturnStatement	return - 1 ;	607:2:14390:14399	860249	1	True				
ANR	860287	UnaryOperationExpression	- 1		860249	0					
ANR	860288	UnaryOperator	-		860249	0					
ANR	860289	PrimaryExpression	1		860249	1					
ANR	860290	IdentifierDeclStatement	struct chirp_client * client = 0 ;	610:1:14407:14438	860249	1	True				
ANR	860291	IdentifierDecl	* client = 0		860249	0					
ANR	860292	IdentifierDeclType	struct chirp_client *		860249	0					
ANR	860293	Identifier	client		860249	1					
ANR	860294	AssignmentExpression	* client = 0		860249	2		=			
ANR	860295	Identifier	client		860249	0					
ANR	860296	PrimaryExpression	0		860249	1					
ANR	860297	ExpressionStatement	CONNECT_STARTER ( client )	611:1:14441:14464	860249	2	True				
ANR	860298	CallExpression	CONNECT_STARTER ( client )		860249	0					
ANR	860299	Callee	CONNECT_STARTER		860249	0					
ANR	860300	Identifier	CONNECT_STARTER		860249	0					
ANR	860301	ArgumentList	client		860249	1					
ANR	860302	Argument	client		860249	0					
ANR	860303	Identifier	client		860249	0					
ANR	860304	IdentifierDeclStatement	char * buffer ;	613:1:14469:14481	860249	3	True				
ANR	860305	IdentifierDecl	* buffer		860249	0					
ANR	860306	IdentifierDeclType	char *		860249	0					
ANR	860307	Identifier	buffer		860249	1					
ANR	860308	IdentifierDeclStatement	int status = - 1 ;	614:1:14484:14499	860249	4	True				
ANR	860309	IdentifierDecl	status = - 1		860249	0					
ANR	860310	IdentifierDeclType	int		860249	0					
ANR	860311	Identifier	status		860249	1					
ANR	860312	AssignmentExpression	status = - 1		860249	2		=			
ANR	860313	Identifier	status		860249	0					
ANR	860314	UnaryOperationExpression	- 1		860249	1					
ANR	860315	UnaryOperator	-		860249	0					
ANR	860316	PrimaryExpression	1		860249	1					
ANR	860317	IfStatement	if ( argc == 4 )		860249	5					
ANR	860318	Condition	argc == 4	617:4:14546:14554	860249	0	True				
ANR	860319	EqualityExpression	argc == 4		860249	0		==			
ANR	860320	Identifier	argc		860249	0					
ANR	860321	PrimaryExpression	4		860249	1					
ANR	860322	CompoundStatement		14:15:295:295	860249	1					
ANR	860323	IfStatement	"if ( ( status = chirp_client_getlongdir ( client , argv [ 3 ] , & buffer ) ) >= 0 )"		860249	0					
ANR	860324	Condition	"( status = chirp_client_getlongdir ( client , argv [ 3 ] , & buffer ) ) >= 0"	618:5:14564:14628	860249	0	True				
ANR	860325	RelationalExpression	"( status = chirp_client_getlongdir ( client , argv [ 3 ] , & buffer ) ) >= 0"		860249	0		>=			
ANR	860326	AssignmentExpression	"status = chirp_client_getlongdir ( client , argv [ 3 ] , & buffer )"		860249	0		=			
ANR	860327	Identifier	status		860249	0					
ANR	860328	CallExpression	"chirp_client_getlongdir ( client , argv [ 3 ] , & buffer )"		860249	1					
ANR	860329	Callee	chirp_client_getlongdir		860249	0					
ANR	860330	Identifier	chirp_client_getlongdir		860249	0					
ANR	860331	ArgumentList	client		860249	1					
ANR	860332	Argument	client		860249	0					
ANR	860333	Identifier	client		860249	0					
ANR	860334	Argument	argv [ 3 ]		860249	1					
ANR	860335	ArrayIndexing	argv [ 3 ]		860249	0					
ANR	860336	Identifier	argv		860249	0					
ANR	860337	PrimaryExpression	3		860249	1					
ANR	860338	Argument	& buffer		860249	2					
ANR	860339	UnaryOperationExpression	& buffer		860249	0					
ANR	860340	UnaryOperator	&		860249	0					
ANR	860341	Identifier	buffer		860249	1					
ANR	860342	PrimaryExpression	0		860249	1					
ANR	860343	CompoundStatement		17:3:389:411	860249	1					
ANR	860344	IdentifierDeclStatement	char * line ;	619:3:14636:14646	860249	0	True				
ANR	860345	IdentifierDecl	* line		860249	0					
ANR	860346	IdentifierDeclType	char *		860249	0					
ANR	860347	Identifier	line		860249	1					
ANR	860348	IdentifierDeclStatement	struct chirp_stat stat ;	620:3:14651:14673	860249	1	True				
ANR	860349	IdentifierDecl	stat		860249	0					
ANR	860350	IdentifierDeclType	struct chirp_stat		860249	0					
ANR	860351	Identifier	stat		860249	1					
ANR	860352	ExpressionStatement	"line = strtok ( buffer , ""\\n"" )"	622:3:14681:14708	860249	2	True				
ANR	860353	AssignmentExpression	"line = strtok ( buffer , ""\\n"" )"		860249	0		=			
ANR	860354	Identifier	line		860249	0					
ANR	860355	CallExpression	"strtok ( buffer , ""\\n"" )"		860249	1					
ANR	860356	Callee	strtok		860249	0					
ANR	860357	Identifier	strtok		860249	0					
ANR	860358	ArgumentList	buffer		860249	1					
ANR	860359	Argument	buffer		860249	0					
ANR	860360	Identifier	buffer		860249	0					
ANR	860361	Argument	"""\\n"""		860249	1					
ANR	860362	PrimaryExpression	"""\\n"""		860249	0					
ANR	860363	WhileStatement	while ( line != NULL )		860249	3					
ANR	860364	Condition	line != NULL	623:9:14719:14730	860249	0	True				
ANR	860365	EqualityExpression	line != NULL		860249	0		!=			
ANR	860366	Identifier	line		860249	0					
ANR	860367	Identifier	NULL		860249	1					
ANR	860368	CompoundStatement		20:23:471:471	860249	1					
ANR	860369	ExpressionStatement	"printf ( ""%s\\n"" , line )"	624:4:14739:14759	860249	0	True				
ANR	860370	CallExpression	"printf ( ""%s\\n"" , line )"		860249	0					
ANR	860371	Callee	printf		860249	0					
ANR	860372	Identifier	printf		860249	0					
ANR	860373	ArgumentList	"""%s\\n"""		860249	1					
ANR	860374	Argument	"""%s\\n"""		860249	0					
ANR	860375	PrimaryExpression	"""%s\\n"""		860249	0					
ANR	860376	Argument	line		860249	1					
ANR	860377	Identifier	line		860249	0					
ANR	860378	ExpressionStatement	"line = strtok ( NULL , ""\\n"" )"	625:4:14765:14790	860249	1	True				
ANR	860379	AssignmentExpression	"line = strtok ( NULL , ""\\n"" )"		860249	0		=			
ANR	860380	Identifier	line		860249	0					
ANR	860381	CallExpression	"strtok ( NULL , ""\\n"" )"		860249	1					
ANR	860382	Callee	strtok		860249	0					
ANR	860383	Identifier	strtok		860249	0					
ANR	860384	ArgumentList	NULL		860249	1					
ANR	860385	Argument	NULL		860249	0					
ANR	860386	Identifier	NULL		860249	0					
ANR	860387	Argument	"""\\n"""		860249	1					
ANR	860388	PrimaryExpression	"""\\n"""		860249	0					
ANR	860389	IfStatement	"if ( line == NULL || get_stat ( line , & stat ) < 0 )"		860249	2					
ANR	860390	Condition	"line == NULL || get_stat ( line , & stat ) < 0"	626:7:14799:14839	860249	0	True				
ANR	860391	OrExpression	"line == NULL || get_stat ( line , & stat ) < 0"		860249	0		||			
ANR	860392	EqualityExpression	line == NULL		860249	0		==			
ANR	860393	Identifier	line		860249	0					
ANR	860394	Identifier	NULL		860249	1					
ANR	860395	RelationalExpression	"get_stat ( line , & stat ) < 0"		860249	1		<			
ANR	860396	CallExpression	"get_stat ( line , & stat )"		860249	0					
ANR	860397	Callee	get_stat		860249	0					
ANR	860398	Identifier	get_stat		860249	0					
ANR	860399	ArgumentList	line		860249	1					
ANR	860400	Argument	line		860249	0					
ANR	860401	Identifier	line		860249	0					
ANR	860402	Argument	& stat		860249	1					
ANR	860403	UnaryOperationExpression	& stat		860249	0					
ANR	860404	UnaryOperator	&		860249	0					
ANR	860405	Identifier	stat		860249	1					
ANR	860406	PrimaryExpression	0		860249	1					
ANR	860407	CompoundStatement		23:50:580:580	860249	1					
ANR	860408	BreakStatement	break ;	627:5:14849:14854	860249	0	True				
ANR	860409	ExpressionStatement	"print_stat ( & stat , ""\\t"" )"	629:4:14866:14889	860249	3	True				
ANR	860410	CallExpression	"print_stat ( & stat , ""\\t"" )"		860249	0					
ANR	860411	Callee	print_stat		860249	0					
ANR	860412	Identifier	print_stat		860249	0					
ANR	860413	ArgumentList	& stat		860249	1					
ANR	860414	Argument	& stat		860249	0					
ANR	860415	UnaryOperationExpression	& stat		860249	0					
ANR	860416	UnaryOperator	&		860249	0					
ANR	860417	Identifier	stat		860249	1					
ANR	860418	Argument	"""\\t"""		860249	1					
ANR	860419	PrimaryExpression	"""\\t"""		860249	0					
ANR	860420	ExpressionStatement	"line = strtok ( NULL , ""\\n"" )"	630:4:14895:14920	860249	4	True				
ANR	860421	AssignmentExpression	"line = strtok ( NULL , ""\\n"" )"		860249	0		=			
ANR	860422	Identifier	line		860249	0					
ANR	860423	CallExpression	"strtok ( NULL , ""\\n"" )"		860249	1					
ANR	860424	Callee	strtok		860249	0					
ANR	860425	Identifier	strtok		860249	0					
ANR	860426	ArgumentList	NULL		860249	1					
ANR	860427	Argument	NULL		860249	0					
ANR	860428	Identifier	NULL		860249	0					
ANR	860429	Argument	"""\\n"""		860249	1					
ANR	860430	PrimaryExpression	"""\\n"""		860249	0					
ANR	860431	ElseStatement	else		860249	0					
ANR	860432	CompoundStatement		30:8:677:677	860249	0					
ANR	860433	IfStatement	"if ( ( status = chirp_client_getdir ( client , argv [ 2 ] , & buffer ) >= 0 ) )"		860249	0					
ANR	860434	Condition	"status = chirp_client_getdir ( client , argv [ 2 ] , & buffer ) >= 0"	634:5:14946:15006	860249	0	True				
ANR	860435	AssignmentExpression	"status = chirp_client_getdir ( client , argv [ 2 ] , & buffer ) >= 0"		860249	0		=			
ANR	860436	Identifier	status		860249	0					
ANR	860437	RelationalExpression	"chirp_client_getdir ( client , argv [ 2 ] , & buffer ) >= 0"		860249	1		>=			
ANR	860438	CallExpression	"chirp_client_getdir ( client , argv [ 2 ] , & buffer )"		860249	0					
ANR	860439	Callee	chirp_client_getdir		860249	0					
ANR	860440	Identifier	chirp_client_getdir		860249	0					
ANR	860441	ArgumentList	client		860249	1					
ANR	860442	Argument	client		860249	0					
ANR	860443	Identifier	client		860249	0					
ANR	860444	Argument	argv [ 2 ]		860249	1					
ANR	860445	ArrayIndexing	argv [ 2 ]		860249	0					
ANR	860446	Identifier	argv		860249	0					
ANR	860447	PrimaryExpression	2		860249	1					
ANR	860448	Argument	& buffer		860249	2					
ANR	860449	UnaryOperationExpression	& buffer		860249	0					
ANR	860450	UnaryOperator	&		860249	0					
ANR	860451	Identifier	buffer		860249	1					
ANR	860452	PrimaryExpression	0		860249	1					
ANR	860453	CompoundStatement		31:68:747:747	860249	1					
ANR	860454	ExpressionStatement	"printf ( ""%s"" , buffer )"	635:3:15014:15034	860249	0	True				
ANR	860455	CallExpression	"printf ( ""%s"" , buffer )"		860249	0					
ANR	860456	Callee	printf		860249	0					
ANR	860457	Identifier	printf		860249	0					
ANR	860458	ArgumentList	"""%s"""		860249	1					
ANR	860459	Argument	"""%s"""		860249	0					
ANR	860460	PrimaryExpression	"""%s"""		860249	0					
ANR	860461	Argument	buffer		860249	1					
ANR	860462	Identifier	buffer		860249	0					
ANR	860463	ExpressionStatement	free ( buffer )	638:1:15044:15056	860249	6	True				
ANR	860464	CallExpression	free ( buffer )		860249	0					
ANR	860465	Callee	free		860249	0					
ANR	860466	Identifier	free		860249	0					
ANR	860467	ArgumentList	buffer		860249	1					
ANR	860468	Argument	buffer		860249	0					
ANR	860469	Identifier	buffer		860249	0					
ANR	860470	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , status )"	639:1:15059:15096	860249	7	True				
ANR	860471	CallExpression	"DISCONNECT_AND_RETURN ( client , status )"		860249	0					
ANR	860472	Callee	DISCONNECT_AND_RETURN		860249	0					
ANR	860473	Identifier	DISCONNECT_AND_RETURN		860249	0					
ANR	860474	ArgumentList	client		860249	1					
ANR	860475	Argument	client		860249	0					
ANR	860476	Identifier	client		860249	0					
ANR	860477	Argument	status		860249	1					
ANR	860478	Identifier	status		860249	0					
ANR	860479	ReturnType	int		860249	1					
ANR	860480	Identifier	chirp_getdir		860249	2					
ANR	860481	ParameterList	"int argc , char * * argv"		860249	3					
ANR	860482	Parameter	int argc	604:17:14238:14245	860249	0	True				
ANR	860483	ParameterType	int		860249	0					
ANR	860484	Identifier	argc		860249	1					
ANR	860485	Parameter	char * * argv	604:27:14248:14258	860249	1	True				
ANR	860486	ParameterType	char * *		860249	0					
ANR	860487	Identifier	argv		860249	1					
ANR	860488	CFGEntryNode	ENTRY		860249		True				
ANR	860489	CFGExitNode	EXIT		860249		True				
ANR	860490	Symbol	argc		860249						
ANR	860491	Symbol	strcmp		860249						
ANR	860492	Symbol	stat		860249						
ANR	860493	Symbol	NULL		860249						
ANR	860494	Symbol	line		860249						
ANR	860495	Symbol	* argv		860249						
ANR	860496	Symbol	strtok		860249						
ANR	860497	Symbol	get_stat		860249						
ANR	860498	Symbol	argv		860249						
ANR	860499	Symbol	chirp_client_getlongdir		860249						
ANR	860500	Symbol	chirp_client_getdir		860249						
ANR	860501	Symbol	& buffer		860249						
ANR	860502	Symbol	client		860249						
ANR	860503	Symbol	buffer		860249						
ANR	860504	Symbol	status		860249						
ANR	860505	Symbol	& stat		860249						
ANR	860506	Function	chirp_whoami	642:0:15101:15378							
ANR	860507	FunctionDef	chirp_whoami ()		860506	0					
ANR	860508	CompoundStatement		642:19:15120:15378	860506	0					
ANR	860509	IdentifierDeclStatement	struct chirp_client * client = 0 ;	643:1:15123:15154	860506	0	True				
ANR	860510	IdentifierDecl	* client = 0		860506	0					
ANR	860511	IdentifierDeclType	struct chirp_client *		860506	0					
ANR	860512	Identifier	client		860506	1					
ANR	860513	AssignmentExpression	* client = 0		860506	2		=			
ANR	860514	Identifier	client		860506	0					
ANR	860515	PrimaryExpression	0		860506	1					
ANR	860516	ExpressionStatement	CONNECT_STARTER ( client )	644:1:15157:15180	860506	1	True				
ANR	860517	CallExpression	CONNECT_STARTER ( client )		860506	0					
ANR	860518	Callee	CONNECT_STARTER		860506	0					
ANR	860519	Identifier	CONNECT_STARTER		860506	0					
ANR	860520	ArgumentList	client		860506	1					
ANR	860521	Argument	client		860506	0					
ANR	860522	Identifier	client		860506	0					
ANR	860523	IdentifierDeclStatement	char * buffer = ( char * ) malloc ( CHIRP_LINE_MAX ) ;	646:1:15185:15229	860506	2	True				
ANR	860524	IdentifierDecl	* buffer = ( char * ) malloc ( CHIRP_LINE_MAX )		860506	0					
ANR	860525	IdentifierDeclType	char *		860506	0					
ANR	860526	Identifier	buffer		860506	1					
ANR	860527	AssignmentExpression	* buffer = ( char * ) malloc ( CHIRP_LINE_MAX )		860506	2		=			
ANR	860528	Identifier	buffer		860506	0					
ANR	860529	CastExpression	( char * ) malloc ( CHIRP_LINE_MAX )		860506	1					
ANR	860530	CastTarget	char *		860506	0					
ANR	860531	CallExpression	malloc ( CHIRP_LINE_MAX )		860506	1					
ANR	860532	Callee	malloc		860506	0					
ANR	860533	Identifier	malloc		860506	0					
ANR	860534	ArgumentList	CHIRP_LINE_MAX		860506	1					
ANR	860535	Argument	CHIRP_LINE_MAX		860506	0					
ANR	860536	Identifier	CHIRP_LINE_MAX		860506	0					
ANR	860537	IdentifierDeclStatement	"int status = chirp_client_whoami ( client , buffer , CHIRP_LINE_MAX ) ;"	647:1:15232:15296	860506	3	True				
ANR	860538	IdentifierDecl	"status = chirp_client_whoami ( client , buffer , CHIRP_LINE_MAX )"		860506	0					
ANR	860539	IdentifierDeclType	int		860506	0					
ANR	860540	Identifier	status		860506	1					
ANR	860541	AssignmentExpression	"status = chirp_client_whoami ( client , buffer , CHIRP_LINE_MAX )"		860506	2		=			
ANR	860542	Identifier	status		860506	0					
ANR	860543	CallExpression	"chirp_client_whoami ( client , buffer , CHIRP_LINE_MAX )"		860506	1					
ANR	860544	Callee	chirp_client_whoami		860506	0					
ANR	860545	Identifier	chirp_client_whoami		860506	0					
ANR	860546	ArgumentList	client		860506	1					
ANR	860547	Argument	client		860506	0					
ANR	860548	Identifier	client		860506	0					
ANR	860549	Argument	buffer		860506	1					
ANR	860550	Identifier	buffer		860506	0					
ANR	860551	Argument	CHIRP_LINE_MAX		860506	2					
ANR	860552	Identifier	CHIRP_LINE_MAX		860506	0					
ANR	860553	ExpressionStatement	"printf ( ""%s\\n"" , buffer )"	648:1:15299:15321	860506	4	True				
ANR	860554	CallExpression	"printf ( ""%s\\n"" , buffer )"		860506	0					
ANR	860555	Callee	printf		860506	0					
ANR	860556	Identifier	printf		860506	0					
ANR	860557	ArgumentList	"""%s\\n"""		860506	1					
ANR	860558	Argument	"""%s\\n"""		860506	0					
ANR	860559	PrimaryExpression	"""%s\\n"""		860506	0					
ANR	860560	Argument	buffer		860506	1					
ANR	860561	Identifier	buffer		860506	0					
ANR	860562	ExpressionStatement	free ( buffer )	649:1:15324:15336	860506	5	True				
ANR	860563	CallExpression	free ( buffer )		860506	0					
ANR	860564	Callee	free		860506	0					
ANR	860565	Identifier	free		860506	0					
ANR	860566	ArgumentList	buffer		860506	1					
ANR	860567	Argument	buffer		860506	0					
ANR	860568	Identifier	buffer		860506	0					
ANR	860569	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , status )"	650:1:15339:15376	860506	6	True				
ANR	860570	CallExpression	"DISCONNECT_AND_RETURN ( client , status )"		860506	0					
ANR	860571	Callee	DISCONNECT_AND_RETURN		860506	0					
ANR	860572	Identifier	DISCONNECT_AND_RETURN		860506	0					
ANR	860573	ArgumentList	client		860506	1					
ANR	860574	Argument	client		860506	0					
ANR	860575	Identifier	client		860506	0					
ANR	860576	Argument	status		860506	1					
ANR	860577	Identifier	status		860506	0					
ANR	860578	ReturnType	int		860506	1					
ANR	860579	Identifier	chirp_whoami		860506	2					
ANR	860580	ParameterList			860506	3					
ANR	860581	CFGEntryNode	ENTRY		860506		True				
ANR	860582	CFGExitNode	EXIT		860506		True				
ANR	860583	Symbol	malloc		860506						
ANR	860584	Symbol	chirp_client_whoami		860506						
ANR	860585	Symbol	client		860506						
ANR	860586	Symbol	buffer		860506						
ANR	860587	Symbol	CHIRP_LINE_MAX		860506						
ANR	860588	Symbol	status		860506						
ANR	860589	Function	chirp_whoareyou	653:0:15381:15779							
ANR	860590	FunctionDef	"chirp_whoareyou (int argc , char * * argv)"		860589	0					
ANR	860591	CompoundStatement		653:43:15424:15779	860589	0					
ANR	860592	IfStatement	if ( argc != 3 )		860589	0					
ANR	860593	Condition	argc != 3	654:5:15431:15439	860589	0	True				
ANR	860594	EqualityExpression	argc != 3		860589	0		!=			
ANR	860595	Identifier	argc		860589	0					
ANR	860596	PrimaryExpression	3		860589	1					
ANR	860597	CompoundStatement		2:16:17:17	860589	1					
ANR	860598	ExpressionStatement	"printf ( ""condor_chirp whoareyou remotepath\\n"" )"	655:2:15446:15491	860589	0	True				
ANR	860599	CallExpression	"printf ( ""condor_chirp whoareyou remotepath\\n"" )"		860589	0					
ANR	860600	Callee	printf		860589	0					
ANR	860601	Identifier	printf		860589	0					
ANR	860602	ArgumentList	"""condor_chirp whoareyou remotepath\\n"""		860589	1					
ANR	860603	Argument	"""condor_chirp whoareyou remotepath\\n"""		860589	0					
ANR	860604	PrimaryExpression	"""condor_chirp whoareyou remotepath\\n"""		860589	0					
ANR	860605	ReturnStatement	return - 1 ;	656:2:15495:15504	860589	1	True				
ANR	860606	UnaryOperationExpression	- 1		860589	0					
ANR	860607	UnaryOperator	-		860589	0					
ANR	860608	PrimaryExpression	1		860589	1					
ANR	860609	IdentifierDeclStatement	struct chirp_client * client = 0 ;	659:1:15512:15543	860589	1	True				
ANR	860610	IdentifierDecl	* client = 0		860589	0					
ANR	860611	IdentifierDeclType	struct chirp_client *		860589	0					
ANR	860612	Identifier	client		860589	1					
ANR	860613	AssignmentExpression	* client = 0		860589	2		=			
ANR	860614	Identifier	client		860589	0					
ANR	860615	PrimaryExpression	0		860589	1					
ANR	860616	ExpressionStatement	CONNECT_STARTER ( client )	660:1:15546:15569	860589	2	True				
ANR	860617	CallExpression	CONNECT_STARTER ( client )		860589	0					
ANR	860618	Callee	CONNECT_STARTER		860589	0					
ANR	860619	Identifier	CONNECT_STARTER		860589	0					
ANR	860620	ArgumentList	client		860589	1					
ANR	860621	Argument	client		860589	0					
ANR	860622	Identifier	client		860589	0					
ANR	860623	IdentifierDeclStatement	char * buffer = ( char * ) malloc ( CHIRP_LINE_MAX ) ;	662:1:15574:15618	860589	3	True				
ANR	860624	IdentifierDecl	* buffer = ( char * ) malloc ( CHIRP_LINE_MAX )		860589	0					
ANR	860625	IdentifierDeclType	char *		860589	0					
ANR	860626	Identifier	buffer		860589	1					
ANR	860627	AssignmentExpression	* buffer = ( char * ) malloc ( CHIRP_LINE_MAX )		860589	2		=			
ANR	860628	Identifier	buffer		860589	0					
ANR	860629	CastExpression	( char * ) malloc ( CHIRP_LINE_MAX )		860589	1					
ANR	860630	CastTarget	char *		860589	0					
ANR	860631	CallExpression	malloc ( CHIRP_LINE_MAX )		860589	1					
ANR	860632	Callee	malloc		860589	0					
ANR	860633	Identifier	malloc		860589	0					
ANR	860634	ArgumentList	CHIRP_LINE_MAX		860589	1					
ANR	860635	Argument	CHIRP_LINE_MAX		860589	0					
ANR	860636	Identifier	CHIRP_LINE_MAX		860589	0					
ANR	860637	IdentifierDeclStatement	"int status = chirp_client_whoareyou ( client , argv [ 2 ] , buffer , CHIRP_LINE_MAX ) ;"	663:1:15621:15697	860589	4	True				
ANR	860638	IdentifierDecl	"status = chirp_client_whoareyou ( client , argv [ 2 ] , buffer , CHIRP_LINE_MAX )"		860589	0					
ANR	860639	IdentifierDeclType	int		860589	0					
ANR	860640	Identifier	status		860589	1					
ANR	860641	AssignmentExpression	"status = chirp_client_whoareyou ( client , argv [ 2 ] , buffer , CHIRP_LINE_MAX )"		860589	2		=			
ANR	860642	Identifier	status		860589	0					
ANR	860643	CallExpression	"chirp_client_whoareyou ( client , argv [ 2 ] , buffer , CHIRP_LINE_MAX )"		860589	1					
ANR	860644	Callee	chirp_client_whoareyou		860589	0					
ANR	860645	Identifier	chirp_client_whoareyou		860589	0					
ANR	860646	ArgumentList	client		860589	1					
ANR	860647	Argument	client		860589	0					
ANR	860648	Identifier	client		860589	0					
ANR	860649	Argument	argv [ 2 ]		860589	1					
ANR	860650	ArrayIndexing	argv [ 2 ]		860589	0					
ANR	860651	Identifier	argv		860589	0					
ANR	860652	PrimaryExpression	2		860589	1					
ANR	860653	Argument	buffer		860589	2					
ANR	860654	Identifier	buffer		860589	0					
ANR	860655	Argument	CHIRP_LINE_MAX		860589	3					
ANR	860656	Identifier	CHIRP_LINE_MAX		860589	0					
ANR	860657	ExpressionStatement	"printf ( ""%s\\n"" , buffer )"	664:1:15700:15722	860589	5	True				
ANR	860658	CallExpression	"printf ( ""%s\\n"" , buffer )"		860589	0					
ANR	860659	Callee	printf		860589	0					
ANR	860660	Identifier	printf		860589	0					
ANR	860661	ArgumentList	"""%s\\n"""		860589	1					
ANR	860662	Argument	"""%s\\n"""		860589	0					
ANR	860663	PrimaryExpression	"""%s\\n"""		860589	0					
ANR	860664	Argument	buffer		860589	1					
ANR	860665	Identifier	buffer		860589	0					
ANR	860666	ExpressionStatement	free ( buffer )	665:1:15725:15737	860589	6	True				
ANR	860667	CallExpression	free ( buffer )		860589	0					
ANR	860668	Callee	free		860589	0					
ANR	860669	Identifier	free		860589	0					
ANR	860670	ArgumentList	buffer		860589	1					
ANR	860671	Argument	buffer		860589	0					
ANR	860672	Identifier	buffer		860589	0					
ANR	860673	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , status )"	666:1:15740:15777	860589	7	True				
ANR	860674	CallExpression	"DISCONNECT_AND_RETURN ( client , status )"		860589	0					
ANR	860675	Callee	DISCONNECT_AND_RETURN		860589	0					
ANR	860676	Identifier	DISCONNECT_AND_RETURN		860589	0					
ANR	860677	ArgumentList	client		860589	1					
ANR	860678	Argument	client		860589	0					
ANR	860679	Identifier	client		860589	0					
ANR	860680	Argument	status		860589	1					
ANR	860681	Identifier	status		860589	0					
ANR	860682	ReturnType	int		860589	1					
ANR	860683	Identifier	chirp_whoareyou		860589	2					
ANR	860684	ParameterList	"int argc , char * * argv"		860589	3					
ANR	860685	Parameter	int argc	653:20:15401:15408	860589	0	True				
ANR	860686	ParameterType	int		860589	0					
ANR	860687	Identifier	argc		860589	1					
ANR	860688	Parameter	char * * argv	653:30:15411:15421	860589	1	True				
ANR	860689	ParameterType	char * *		860589	0					
ANR	860690	Identifier	argv		860589	1					
ANR	860691	CFGEntryNode	ENTRY		860589		True				
ANR	860692	CFGExitNode	EXIT		860589		True				
ANR	860693	Symbol	argc		860589						
ANR	860694	Symbol	malloc		860589						
ANR	860695	Symbol	client		860589						
ANR	860696	Symbol	chirp_client_whoareyou		860589						
ANR	860697	Symbol	* argv		860589						
ANR	860698	Symbol	buffer		860589						
ANR	860699	Symbol	CHIRP_LINE_MAX		860589						
ANR	860700	Symbol	argv		860589						
ANR	860701	Symbol	status		860589						
ANR	860702	Function	chirp_link	669:0:15782:16232							
ANR	860703	FunctionDef	"chirp_link (int argc , char * * argv)"		860702	0					
ANR	860704	CompoundStatement		669:38:15820:16232	860702	0					
ANR	860705	IfStatement	"if ( argc < 4 || argc > 5 || ( argc == 5 && strcmp ( argv [ 2 ] , ""-s"" ) != 0 ) )"		860702	0					
ANR	860706	Condition	"argc < 4 || argc > 5 || ( argc == 5 && strcmp ( argv [ 2 ] , ""-s"" ) != 0 )"	670:5:15827:15891	860702	0	True				
ANR	860707	OrExpression	"argc < 4 || argc > 5 || ( argc == 5 && strcmp ( argv [ 2 ] , ""-s"" ) != 0 )"		860702	0		||			
ANR	860708	RelationalExpression	argc < 4		860702	0		<			
ANR	860709	Identifier	argc		860702	0					
ANR	860710	PrimaryExpression	4		860702	1					
ANR	860711	OrExpression	"argc > 5 || ( argc == 5 && strcmp ( argv [ 2 ] , ""-s"" ) != 0 )"		860702	1		||			
ANR	860712	RelationalExpression	argc > 5		860702	0		>			
ANR	860713	Identifier	argc		860702	0					
ANR	860714	PrimaryExpression	5		860702	1					
ANR	860715	AndExpression	"argc == 5 && strcmp ( argv [ 2 ] , ""-s"" ) != 0"		860702	1		&&			
ANR	860716	EqualityExpression	argc == 5		860702	0		==			
ANR	860717	Identifier	argc		860702	0					
ANR	860718	PrimaryExpression	5		860702	1					
ANR	860719	EqualityExpression	"strcmp ( argv [ 2 ] , ""-s"" ) != 0"		860702	1		!=			
ANR	860720	CallExpression	"strcmp ( argv [ 2 ] , ""-s"" )"		860702	0					
ANR	860721	Callee	strcmp		860702	0					
ANR	860722	Identifier	strcmp		860702	0					
ANR	860723	ArgumentList	argv [ 2 ]		860702	1					
ANR	860724	Argument	argv [ 2 ]		860702	0					
ANR	860725	ArrayIndexing	argv [ 2 ]		860702	0					
ANR	860726	Identifier	argv		860702	0					
ANR	860727	PrimaryExpression	2		860702	1					
ANR	860728	Argument	"""-s"""		860702	1					
ANR	860729	PrimaryExpression	"""-s"""		860702	0					
ANR	860730	PrimaryExpression	0		860702	1					
ANR	860731	CompoundStatement		2:72:73:73	860702	1					
ANR	860732	ExpressionStatement	"printf ( ""condor_chirp link [-s] oldpath newpath\\n"" )"	671:2:15898:15948	860702	0	True				
ANR	860733	CallExpression	"printf ( ""condor_chirp link [-s] oldpath newpath\\n"" )"		860702	0					
ANR	860734	Callee	printf		860702	0					
ANR	860735	Identifier	printf		860702	0					
ANR	860736	ArgumentList	"""condor_chirp link [-s] oldpath newpath\\n"""		860702	1					
ANR	860737	Argument	"""condor_chirp link [-s] oldpath newpath\\n"""		860702	0					
ANR	860738	PrimaryExpression	"""condor_chirp link [-s] oldpath newpath\\n"""		860702	0					
ANR	860739	ReturnStatement	return - 1 ;	672:2:15952:15961	860702	1	True				
ANR	860740	UnaryOperationExpression	- 1		860702	0					
ANR	860741	UnaryOperator	-		860702	0					
ANR	860742	PrimaryExpression	1		860702	1					
ANR	860743	IdentifierDeclStatement	struct chirp_client * client = 0 ;	675:1:15969:16000	860702	1	True				
ANR	860744	IdentifierDecl	* client = 0		860702	0					
ANR	860745	IdentifierDeclType	struct chirp_client *		860702	0					
ANR	860746	Identifier	client		860702	1					
ANR	860747	AssignmentExpression	* client = 0		860702	2		=			
ANR	860748	Identifier	client		860702	0					
ANR	860749	PrimaryExpression	0		860702	1					
ANR	860750	ExpressionStatement	CONNECT_STARTER ( client )	676:1:16003:16026	860702	2	True				
ANR	860751	CallExpression	CONNECT_STARTER ( client )		860702	0					
ANR	860752	Callee	CONNECT_STARTER		860702	0					
ANR	860753	Identifier	CONNECT_STARTER		860702	0					
ANR	860754	ArgumentList	client		860702	1					
ANR	860755	Argument	client		860702	0					
ANR	860756	Identifier	client		860702	0					
ANR	860757	IdentifierDeclStatement	int status = - 1 ;	678:1:16030:16045	860702	3	True				
ANR	860758	IdentifierDecl	status = - 1		860702	0					
ANR	860759	IdentifierDeclType	int		860702	0					
ANR	860760	Identifier	status		860702	1					
ANR	860761	AssignmentExpression	status = - 1		860702	2		=			
ANR	860762	Identifier	status		860702	0					
ANR	860763	UnaryOperationExpression	- 1		860702	1					
ANR	860764	UnaryOperator	-		860702	0					
ANR	860765	PrimaryExpression	1		860702	1					
ANR	860766	IfStatement	if ( argc == 5 )		860702	4					
ANR	860767	Condition	argc == 5	679:4:16051:16059	860702	0	True				
ANR	860768	EqualityExpression	argc == 5		860702	0		==			
ANR	860769	Identifier	argc		860702	0					
ANR	860770	PrimaryExpression	5		860702	1					
ANR	860771	CompoundStatement		11:15:241:241	860702	1					
ANR	860772	ExpressionStatement	"status = chirp_client_symlink ( client , argv [ 3 ] , argv [ 4 ] )"	680:2:16066:16121	860702	0	True				
ANR	860773	AssignmentExpression	"status = chirp_client_symlink ( client , argv [ 3 ] , argv [ 4 ] )"		860702	0		=			
ANR	860774	Identifier	status		860702	0					
ANR	860775	CallExpression	"chirp_client_symlink ( client , argv [ 3 ] , argv [ 4 ] )"		860702	1					
ANR	860776	Callee	chirp_client_symlink		860702	0					
ANR	860777	Identifier	chirp_client_symlink		860702	0					
ANR	860778	ArgumentList	client		860702	1					
ANR	860779	Argument	client		860702	0					
ANR	860780	Identifier	client		860702	0					
ANR	860781	Argument	argv [ 3 ]		860702	1					
ANR	860782	ArrayIndexing	argv [ 3 ]		860702	0					
ANR	860783	Identifier	argv		860702	0					
ANR	860784	PrimaryExpression	3		860702	1					
ANR	860785	Argument	argv [ 4 ]		860702	2					
ANR	860786	ArrayIndexing	argv [ 4 ]		860702	0					
ANR	860787	Identifier	argv		860702	0					
ANR	860788	PrimaryExpression	4		860702	1					
ANR	860789	ElseStatement	else		860702	0					
ANR	860790	CompoundStatement		13:8:310:310	860702	0					
ANR	860791	ExpressionStatement	"status = chirp_client_link ( client , argv [ 2 ] , argv [ 3 ] )"	682:2:16135:16187	860702	0	True				
ANR	860792	AssignmentExpression	"status = chirp_client_link ( client , argv [ 2 ] , argv [ 3 ] )"		860702	0		=			
ANR	860793	Identifier	status		860702	0					
ANR	860794	CallExpression	"chirp_client_link ( client , argv [ 2 ] , argv [ 3 ] )"		860702	1					
ANR	860795	Callee	chirp_client_link		860702	0					
ANR	860796	Identifier	chirp_client_link		860702	0					
ANR	860797	ArgumentList	client		860702	1					
ANR	860798	Argument	client		860702	0					
ANR	860799	Identifier	client		860702	0					
ANR	860800	Argument	argv [ 2 ]		860702	1					
ANR	860801	ArrayIndexing	argv [ 2 ]		860702	0					
ANR	860802	Identifier	argv		860702	0					
ANR	860803	PrimaryExpression	2		860702	1					
ANR	860804	Argument	argv [ 3 ]		860702	2					
ANR	860805	ArrayIndexing	argv [ 3 ]		860702	0					
ANR	860806	Identifier	argv		860702	0					
ANR	860807	PrimaryExpression	3		860702	1					
ANR	860808	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , status )"	684:1:16193:16230	860702	5	True				
ANR	860809	CallExpression	"DISCONNECT_AND_RETURN ( client , status )"		860702	0					
ANR	860810	Callee	DISCONNECT_AND_RETURN		860702	0					
ANR	860811	Identifier	DISCONNECT_AND_RETURN		860702	0					
ANR	860812	ArgumentList	client		860702	1					
ANR	860813	Argument	client		860702	0					
ANR	860814	Identifier	client		860702	0					
ANR	860815	Argument	status		860702	1					
ANR	860816	Identifier	status		860702	0					
ANR	860817	ReturnType	int		860702	1					
ANR	860818	Identifier	chirp_link		860702	2					
ANR	860819	ParameterList	"int argc , char * * argv"		860702	3					
ANR	860820	Parameter	int argc	669:15:15797:15804	860702	0	True				
ANR	860821	ParameterType	int		860702	0					
ANR	860822	Identifier	argc		860702	1					
ANR	860823	Parameter	char * * argv	669:25:15807:15817	860702	1	True				
ANR	860824	ParameterType	char * *		860702	0					
ANR	860825	Identifier	argv		860702	1					
ANR	860826	CFGEntryNode	ENTRY		860702		True				
ANR	860827	CFGExitNode	EXIT		860702		True				
ANR	860828	Symbol	argc		860702						
ANR	860829	Symbol	strcmp		860702						
ANR	860830	Symbol	chirp_client_link		860702						
ANR	860831	Symbol	client		860702						
ANR	860832	Symbol	chirp_client_symlink		860702						
ANR	860833	Symbol	* argv		860702						
ANR	860834	Symbol	argv		860702						
ANR	860835	Symbol	status		860702						
ANR	860836	Function	chirp_readlink	687:0:16235:16657							
ANR	860837	FunctionDef	"chirp_readlink (int argc , char * * argv)"		860836	0					
ANR	860838	CompoundStatement		687:42:16277:16657	860836	0					
ANR	860839	IfStatement	if ( argc != 4 )		860836	0					
ANR	860840	Condition	argc != 4	688:5:16284:16292	860836	0	True				
ANR	860841	EqualityExpression	argc != 4		860836	0		!=			
ANR	860842	Identifier	argc		860836	0					
ANR	860843	PrimaryExpression	4		860836	1					
ANR	860844	CompoundStatement		2:16:17:17	860836	1					
ANR	860845	ExpressionStatement	"printf ( ""condor_chirp readlink remotepath length\\n"" )"	689:2:16299:16350	860836	0	True				
ANR	860846	CallExpression	"printf ( ""condor_chirp readlink remotepath length\\n"" )"		860836	0					
ANR	860847	Callee	printf		860836	0					
ANR	860848	Identifier	printf		860836	0					
ANR	860849	ArgumentList	"""condor_chirp readlink remotepath length\\n"""		860836	1					
ANR	860850	Argument	"""condor_chirp readlink remotepath length\\n"""		860836	0					
ANR	860851	PrimaryExpression	"""condor_chirp readlink remotepath length\\n"""		860836	0					
ANR	860852	ReturnStatement	return - 1 ;	690:2:16354:16363	860836	1	True				
ANR	860853	UnaryOperationExpression	- 1		860836	0					
ANR	860854	UnaryOperator	-		860836	0					
ANR	860855	PrimaryExpression	1		860836	1					
ANR	860856	IdentifierDeclStatement	struct chirp_client * client = 0 ;	693:1:16371:16402	860836	1	True				
ANR	860857	IdentifierDecl	* client = 0		860836	0					
ANR	860858	IdentifierDeclType	struct chirp_client *		860836	0					
ANR	860859	Identifier	client		860836	1					
ANR	860860	AssignmentExpression	* client = 0		860836	2		=			
ANR	860861	Identifier	client		860836	0					
ANR	860862	PrimaryExpression	0		860836	1					
ANR	860863	ExpressionStatement	CONNECT_STARTER ( client )	694:1:16405:16428	860836	2	True				
ANR	860864	CallExpression	CONNECT_STARTER ( client )		860836	0					
ANR	860865	Callee	CONNECT_STARTER		860836	0					
ANR	860866	Identifier	CONNECT_STARTER		860836	0					
ANR	860867	ArgumentList	client		860836	1					
ANR	860868	Argument	client		860836	0					
ANR	860869	Identifier	client		860836	0					
ANR	860870	IdentifierDeclStatement	char * buffer = NULL ;	696:1:16432:16451	860836	3	True				
ANR	860871	IdentifierDecl	* buffer = NULL		860836	0					
ANR	860872	IdentifierDeclType	char *		860836	0					
ANR	860873	Identifier	buffer		860836	1					
ANR	860874	AssignmentExpression	* buffer = NULL		860836	2		=			
ANR	860875	Identifier	NULL		860836	0					
ANR	860876	Identifier	NULL		860836	1					
ANR	860877	IdentifierDeclStatement	int length = atoi ( argv [ 3 ] ) ;	698:1:16455:16481	860836	4	True				
ANR	860878	IdentifierDecl	length = atoi ( argv [ 3 ] )		860836	0					
ANR	860879	IdentifierDeclType	int		860836	0					
ANR	860880	Identifier	length		860836	1					
ANR	860881	AssignmentExpression	length = atoi ( argv [ 3 ] )		860836	2		=			
ANR	860882	Identifier	length		860836	0					
ANR	860883	CallExpression	atoi ( argv [ 3 ] )		860836	1					
ANR	860884	Callee	atoi		860836	0					
ANR	860885	Identifier	atoi		860836	0					
ANR	860886	ArgumentList	argv [ 3 ]		860836	1					
ANR	860887	Argument	argv [ 3 ]		860836	0					
ANR	860888	ArrayIndexing	argv [ 3 ]		860836	0					
ANR	860889	Identifier	argv		860836	0					
ANR	860890	PrimaryExpression	3		860836	1					
ANR	860891	IdentifierDeclStatement	"int status = chirp_client_readlink ( client , argv [ 2 ] , length , & buffer ) ;"	699:1:16484:16552	860836	5	True				
ANR	860892	IdentifierDecl	"status = chirp_client_readlink ( client , argv [ 2 ] , length , & buffer )"		860836	0					
ANR	860893	IdentifierDeclType	int		860836	0					
ANR	860894	Identifier	status		860836	1					
ANR	860895	AssignmentExpression	"status = chirp_client_readlink ( client , argv [ 2 ] , length , & buffer )"		860836	2		=			
ANR	860896	Identifier	status		860836	0					
ANR	860897	CallExpression	"chirp_client_readlink ( client , argv [ 2 ] , length , & buffer )"		860836	1					
ANR	860898	Callee	chirp_client_readlink		860836	0					
ANR	860899	Identifier	chirp_client_readlink		860836	0					
ANR	860900	ArgumentList	client		860836	1					
ANR	860901	Argument	client		860836	0					
ANR	860902	Identifier	client		860836	0					
ANR	860903	Argument	argv [ 2 ]		860836	1					
ANR	860904	ArrayIndexing	argv [ 2 ]		860836	0					
ANR	860905	Identifier	argv		860836	0					
ANR	860906	PrimaryExpression	2		860836	1					
ANR	860907	Argument	length		860836	2					
ANR	860908	Identifier	length		860836	0					
ANR	860909	Argument	& buffer		860836	3					
ANR	860910	UnaryOperationExpression	& buffer		860836	0					
ANR	860911	UnaryOperator	&		860836	0					
ANR	860912	Identifier	buffer		860836	1					
ANR	860913	IfStatement	if ( status >= 0 )		860836	6					
ANR	860914	Condition	status >= 0	700:4:16558:16568	860836	0	True				
ANR	860915	RelationalExpression	status >= 0		860836	0		>=			
ANR	860916	Identifier	status		860836	0					
ANR	860917	PrimaryExpression	0		860836	1					
ANR	860918	CompoundStatement		14:17:293:293	860836	1					
ANR	860919	ExpressionStatement	"printf ( ""%s\\n"" , buffer )"	701:2:16575:16597	860836	0	True				
ANR	860920	CallExpression	"printf ( ""%s\\n"" , buffer )"		860836	0					
ANR	860921	Callee	printf		860836	0					
ANR	860922	Identifier	printf		860836	0					
ANR	860923	ArgumentList	"""%s\\n"""		860836	1					
ANR	860924	Argument	"""%s\\n"""		860836	0					
ANR	860925	PrimaryExpression	"""%s\\n"""		860836	0					
ANR	860926	Argument	buffer		860836	1					
ANR	860927	Identifier	buffer		860836	0					
ANR	860928	ExpressionStatement	free ( buffer )	703:1:16603:16615	860836	7	True				
ANR	860929	CallExpression	free ( buffer )		860836	0					
ANR	860930	Callee	free		860836	0					
ANR	860931	Identifier	free		860836	0					
ANR	860932	ArgumentList	buffer		860836	1					
ANR	860933	Argument	buffer		860836	0					
ANR	860934	Identifier	buffer		860836	0					
ANR	860935	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , status )"	704:1:16618:16655	860836	8	True				
ANR	860936	CallExpression	"DISCONNECT_AND_RETURN ( client , status )"		860836	0					
ANR	860937	Callee	DISCONNECT_AND_RETURN		860836	0					
ANR	860938	Identifier	DISCONNECT_AND_RETURN		860836	0					
ANR	860939	ArgumentList	client		860836	1					
ANR	860940	Argument	client		860836	0					
ANR	860941	Identifier	client		860836	0					
ANR	860942	Argument	status		860836	1					
ANR	860943	Identifier	status		860836	0					
ANR	860944	ReturnType	int		860836	1					
ANR	860945	Identifier	chirp_readlink		860836	2					
ANR	860946	ParameterList	"int argc , char * * argv"		860836	3					
ANR	860947	Parameter	int argc	687:19:16254:16261	860836	0	True				
ANR	860948	ParameterType	int		860836	0					
ANR	860949	Identifier	argc		860836	1					
ANR	860950	Parameter	char * * argv	687:29:16264:16274	860836	1	True				
ANR	860951	ParameterType	char * *		860836	0					
ANR	860952	Identifier	argv		860836	1					
ANR	860953	CFGEntryNode	ENTRY		860836		True				
ANR	860954	CFGExitNode	EXIT		860836		True				
ANR	860955	Symbol	argc		860836						
ANR	860956	Symbol	atoi		860836						
ANR	860957	Symbol	chirp_client_readlink		860836						
ANR	860958	Symbol	NULL		860836						
ANR	860959	Symbol	& buffer		860836						
ANR	860960	Symbol	length		860836						
ANR	860961	Symbol	client		860836						
ANR	860962	Symbol	* argv		860836						
ANR	860963	Symbol	buffer		860836						
ANR	860964	Symbol	argv		860836						
ANR	860965	Symbol	status		860836						
ANR	860966	Function	chirp_do_stat	707:0:16660:17137							
ANR	860967	FunctionDef	"chirp_do_stat (int argc , char * * argv)"		860966	0					
ANR	860968	CompoundStatement		707:41:16701:17137	860966	0					
ANR	860969	IfStatement	if ( argc != 3 )		860966	0					
ANR	860970	Condition	argc != 3	708:5:16708:16716	860966	0	True				
ANR	860971	EqualityExpression	argc != 3		860966	0		!=			
ANR	860972	Identifier	argc		860966	0					
ANR	860973	PrimaryExpression	3		860966	1					
ANR	860974	CompoundStatement		2:16:17:17	860966	1					
ANR	860975	ExpressionStatement	"printf ( ""condor_chirp %s remotepath\\n"" , argv [ 1 ] )"	709:2:16723:16770	860966	0	True				
ANR	860976	CallExpression	"printf ( ""condor_chirp %s remotepath\\n"" , argv [ 1 ] )"		860966	0					
ANR	860977	Callee	printf		860966	0					
ANR	860978	Identifier	printf		860966	0					
ANR	860979	ArgumentList	"""condor_chirp %s remotepath\\n"""		860966	1					
ANR	860980	Argument	"""condor_chirp %s remotepath\\n"""		860966	0					
ANR	860981	PrimaryExpression	"""condor_chirp %s remotepath\\n"""		860966	0					
ANR	860982	Argument	argv [ 1 ]		860966	1					
ANR	860983	ArrayIndexing	argv [ 1 ]		860966	0					
ANR	860984	Identifier	argv		860966	0					
ANR	860985	PrimaryExpression	1		860966	1					
ANR	860986	ReturnStatement	return - 1 ;	710:2:16774:16783	860966	1	True				
ANR	860987	UnaryOperationExpression	- 1		860966	0					
ANR	860988	UnaryOperator	-		860966	0					
ANR	860989	PrimaryExpression	1		860966	1					
ANR	860990	IdentifierDeclStatement	struct chirp_client * client = 0 ;	713:1:16791:16822	860966	1	True				
ANR	860991	IdentifierDecl	* client = 0		860966	0					
ANR	860992	IdentifierDeclType	struct chirp_client *		860966	0					
ANR	860993	Identifier	client		860966	1					
ANR	860994	AssignmentExpression	* client = 0		860966	2		=			
ANR	860995	Identifier	client		860966	0					
ANR	860996	PrimaryExpression	0		860966	1					
ANR	860997	ExpressionStatement	CONNECT_STARTER ( client )	714:1:16825:16848	860966	2	True				
ANR	860998	CallExpression	CONNECT_STARTER ( client )		860966	0					
ANR	860999	Callee	CONNECT_STARTER		860966	0					
ANR	861000	Identifier	CONNECT_STARTER		860966	0					
ANR	861001	ArgumentList	client		860966	1					
ANR	861002	Argument	client		860966	0					
ANR	861003	Identifier	client		860966	0					
ANR	861004	IdentifierDeclStatement	struct chirp_stat stat ;	716:1:16853:16875	860966	3	True				
ANR	861005	IdentifierDecl	stat		860966	0					
ANR	861006	IdentifierDeclType	struct chirp_stat		860966	0					
ANR	861007	Identifier	stat		860966	1					
ANR	861008	IdentifierDeclStatement	int status = - 1 ;	717:1:16878:16893	860966	4	True				
ANR	861009	IdentifierDecl	status = - 1		860966	0					
ANR	861010	IdentifierDeclType	int		860966	0					
ANR	861011	Identifier	status		860966	1					
ANR	861012	AssignmentExpression	status = - 1		860966	2		=			
ANR	861013	Identifier	status		860966	0					
ANR	861014	UnaryOperationExpression	- 1		860966	1					
ANR	861015	UnaryOperator	-		860966	0					
ANR	861016	PrimaryExpression	1		860966	1					
ANR	861017	IfStatement	"if ( strcmp ( argv [ 1 ] , ""lstat"" ) == 0 )"		860966	5					
ANR	861018	Condition	"strcmp ( argv [ 1 ] , ""lstat"" ) == 0"	718:4:16899:16927	860966	0	True				
ANR	861019	EqualityExpression	"strcmp ( argv [ 1 ] , ""lstat"" ) == 0"		860966	0		==			
ANR	861020	CallExpression	"strcmp ( argv [ 1 ] , ""lstat"" )"		860966	0					
ANR	861021	Callee	strcmp		860966	0					
ANR	861022	Identifier	strcmp		860966	0					
ANR	861023	ArgumentList	argv [ 1 ]		860966	1					
ANR	861024	Argument	argv [ 1 ]		860966	0					
ANR	861025	ArrayIndexing	argv [ 1 ]		860966	0					
ANR	861026	Identifier	argv		860966	0					
ANR	861027	PrimaryExpression	1		860966	1					
ANR	861028	Argument	"""lstat"""		860966	1					
ANR	861029	PrimaryExpression	"""lstat"""		860966	0					
ANR	861030	PrimaryExpression	0		860966	1					
ANR	861031	CompoundStatement		12:35:228:228	860966	1					
ANR	861032	ExpressionStatement	"status = chirp_client_lstat ( client , argv [ 2 ] , & stat )"	719:2:16934:16985	860966	0	True				
ANR	861033	AssignmentExpression	"status = chirp_client_lstat ( client , argv [ 2 ] , & stat )"		860966	0		=			
ANR	861034	Identifier	status		860966	0					
ANR	861035	CallExpression	"chirp_client_lstat ( client , argv [ 2 ] , & stat )"		860966	1					
ANR	861036	Callee	chirp_client_lstat		860966	0					
ANR	861037	Identifier	chirp_client_lstat		860966	0					
ANR	861038	ArgumentList	client		860966	1					
ANR	861039	Argument	client		860966	0					
ANR	861040	Identifier	client		860966	0					
ANR	861041	Argument	argv [ 2 ]		860966	1					
ANR	861042	ArrayIndexing	argv [ 2 ]		860966	0					
ANR	861043	Identifier	argv		860966	0					
ANR	861044	PrimaryExpression	2		860966	1					
ANR	861045	Argument	& stat		860966	2					
ANR	861046	UnaryOperationExpression	& stat		860966	0					
ANR	861047	UnaryOperator	&		860966	0					
ANR	861048	Identifier	stat		860966	1					
ANR	861049	ElseStatement	else		860966	0					
ANR	861050	CompoundStatement		14:8:293:293	860966	0					
ANR	861051	ExpressionStatement	"status = chirp_client_stat ( client , argv [ 2 ] , & stat )"	721:2:16999:17049	860966	0	True				
ANR	861052	AssignmentExpression	"status = chirp_client_stat ( client , argv [ 2 ] , & stat )"		860966	0		=			
ANR	861053	Identifier	status		860966	0					
ANR	861054	CallExpression	"chirp_client_stat ( client , argv [ 2 ] , & stat )"		860966	1					
ANR	861055	Callee	chirp_client_stat		860966	0					
ANR	861056	Identifier	chirp_client_stat		860966	0					
ANR	861057	ArgumentList	client		860966	1					
ANR	861058	Argument	client		860966	0					
ANR	861059	Identifier	client		860966	0					
ANR	861060	Argument	argv [ 2 ]		860966	1					
ANR	861061	ArrayIndexing	argv [ 2 ]		860966	0					
ANR	861062	Identifier	argv		860966	0					
ANR	861063	PrimaryExpression	2		860966	1					
ANR	861064	Argument	& stat		860966	2					
ANR	861065	UnaryOperationExpression	& stat		860966	0					
ANR	861066	UnaryOperator	&		860966	0					
ANR	861067	Identifier	stat		860966	1					
ANR	861068	IfStatement	if ( status >= 0 )		860966	6					
ANR	861069	Condition	status >= 0	723:4:17058:17068	860966	0	True				
ANR	861070	RelationalExpression	status >= 0		860966	0		>=			
ANR	861071	Identifier	status		860966	0					
ANR	861072	PrimaryExpression	0		860966	1					
ANR	861073	CompoundStatement		17:17:369:369	860966	1					
ANR	861074	ExpressionStatement	print_stat ( & stat )	724:2:17075:17092	860966	0	True				
ANR	861075	CallExpression	print_stat ( & stat )		860966	0					
ANR	861076	Callee	print_stat		860966	0					
ANR	861077	Identifier	print_stat		860966	0					
ANR	861078	ArgumentList	& stat		860966	1					
ANR	861079	Argument	& stat		860966	0					
ANR	861080	UnaryOperationExpression	& stat		860966	0					
ANR	861081	UnaryOperator	&		860966	0					
ANR	861082	Identifier	stat		860966	1					
ANR	861083	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , status )"	726:1:17098:17135	860966	7	True				
ANR	861084	CallExpression	"DISCONNECT_AND_RETURN ( client , status )"		860966	0					
ANR	861085	Callee	DISCONNECT_AND_RETURN		860966	0					
ANR	861086	Identifier	DISCONNECT_AND_RETURN		860966	0					
ANR	861087	ArgumentList	client		860966	1					
ANR	861088	Argument	client		860966	0					
ANR	861089	Identifier	client		860966	0					
ANR	861090	Argument	status		860966	1					
ANR	861091	Identifier	status		860966	0					
ANR	861092	ReturnType	int		860966	1					
ANR	861093	Identifier	chirp_do_stat		860966	2					
ANR	861094	ParameterList	"int argc , char * * argv"		860966	3					
ANR	861095	Parameter	int argc	707:18:16678:16685	860966	0	True				
ANR	861096	ParameterType	int		860966	0					
ANR	861097	Identifier	argc		860966	1					
ANR	861098	Parameter	char * * argv	707:28:16688:16698	860966	1	True				
ANR	861099	ParameterType	char * *		860966	0					
ANR	861100	Identifier	argv		860966	1					
ANR	861101	CFGEntryNode	ENTRY		860966		True				
ANR	861102	CFGExitNode	EXIT		860966		True				
ANR	861103	Symbol	argc		860966						
ANR	861104	Symbol	strcmp		860966						
ANR	861105	Symbol	chirp_client_stat		860966						
ANR	861106	Symbol	stat		860966						
ANR	861107	Symbol	client		860966						
ANR	861108	Symbol	* argv		860966						
ANR	861109	Symbol	chirp_client_lstat		860966						
ANR	861110	Symbol	argv		860966						
ANR	861111	Symbol	status		860966						
ANR	861112	Symbol	& stat		860966						
ANR	861113	Function	chirp_do_statfs	729:0:17140:17505							
ANR	861114	FunctionDef	"chirp_do_statfs (int argc , char * * argv)"		861113	0					
ANR	861115	CompoundStatement		729:43:17183:17505	861113	0					
ANR	861116	IfStatement	if ( argc != 3 )		861113	0					
ANR	861117	Condition	argc != 3	730:5:17190:17198	861113	0	True				
ANR	861118	EqualityExpression	argc != 3		861113	0		!=			
ANR	861119	Identifier	argc		861113	0					
ANR	861120	PrimaryExpression	3		861113	1					
ANR	861121	CompoundStatement		2:16:17:17	861113	1					
ANR	861122	ExpressionStatement	"printf ( ""condor_chirp statfs remotepath\\n"" )"	731:2:17205:17247	861113	0	True				
ANR	861123	CallExpression	"printf ( ""condor_chirp statfs remotepath\\n"" )"		861113	0					
ANR	861124	Callee	printf		861113	0					
ANR	861125	Identifier	printf		861113	0					
ANR	861126	ArgumentList	"""condor_chirp statfs remotepath\\n"""		861113	1					
ANR	861127	Argument	"""condor_chirp statfs remotepath\\n"""		861113	0					
ANR	861128	PrimaryExpression	"""condor_chirp statfs remotepath\\n"""		861113	0					
ANR	861129	ReturnStatement	return - 1 ;	732:2:17251:17260	861113	1	True				
ANR	861130	UnaryOperationExpression	- 1		861113	0					
ANR	861131	UnaryOperator	-		861113	0					
ANR	861132	PrimaryExpression	1		861113	1					
ANR	861133	IdentifierDeclStatement	struct chirp_client * client = 0 ;	735:1:17268:17299	861113	1	True				
ANR	861134	IdentifierDecl	* client = 0		861113	0					
ANR	861135	IdentifierDeclType	struct chirp_client *		861113	0					
ANR	861136	Identifier	client		861113	1					
ANR	861137	AssignmentExpression	* client = 0		861113	2		=			
ANR	861138	Identifier	client		861113	0					
ANR	861139	PrimaryExpression	0		861113	1					
ANR	861140	ExpressionStatement	CONNECT_STARTER ( client )	736:1:17302:17325	861113	2	True				
ANR	861141	CallExpression	CONNECT_STARTER ( client )		861113	0					
ANR	861142	Callee	CONNECT_STARTER		861113	0					
ANR	861143	Identifier	CONNECT_STARTER		861113	0					
ANR	861144	ArgumentList	client		861113	1					
ANR	861145	Argument	client		861113	0					
ANR	861146	Identifier	client		861113	0					
ANR	861147	IdentifierDeclStatement	struct chirp_statfs statfs ;	738:1:17329:17355	861113	3	True				
ANR	861148	IdentifierDecl	statfs		861113	0					
ANR	861149	IdentifierDeclType	struct chirp_statfs		861113	0					
ANR	861150	Identifier	statfs		861113	1					
ANR	861151	IdentifierDeclStatement	"int status = chirp_client_statfs ( client , argv [ 2 ] , & statfs ) ;"	739:1:17358:17416	861113	4	True				
ANR	861152	IdentifierDecl	"status = chirp_client_statfs ( client , argv [ 2 ] , & statfs )"		861113	0					
ANR	861153	IdentifierDeclType	int		861113	0					
ANR	861154	Identifier	status		861113	1					
ANR	861155	AssignmentExpression	"status = chirp_client_statfs ( client , argv [ 2 ] , & statfs )"		861113	2		=			
ANR	861156	Identifier	status		861113	0					
ANR	861157	CallExpression	"chirp_client_statfs ( client , argv [ 2 ] , & statfs )"		861113	1					
ANR	861158	Callee	chirp_client_statfs		861113	0					
ANR	861159	Identifier	chirp_client_statfs		861113	0					
ANR	861160	ArgumentList	client		861113	1					
ANR	861161	Argument	client		861113	0					
ANR	861162	Identifier	client		861113	0					
ANR	861163	Argument	argv [ 2 ]		861113	1					
ANR	861164	ArrayIndexing	argv [ 2 ]		861113	0					
ANR	861165	Identifier	argv		861113	0					
ANR	861166	PrimaryExpression	2		861113	1					
ANR	861167	Argument	& statfs		861113	2					
ANR	861168	UnaryOperationExpression	& statfs		861113	0					
ANR	861169	UnaryOperator	&		861113	0					
ANR	861170	Identifier	statfs		861113	1					
ANR	861171	IfStatement	if ( status >= 0 )		861113	5					
ANR	861172	Condition	status >= 0	740:4:17422:17432	861113	0	True				
ANR	861173	RelationalExpression	status >= 0		861113	0		>=			
ANR	861174	Identifier	status		861113	0					
ANR	861175	PrimaryExpression	0		861113	1					
ANR	861176	CompoundStatement		12:17:251:251	861113	1					
ANR	861177	ExpressionStatement	print_statfs ( & statfs )	741:2:17439:17460	861113	0	True				
ANR	861178	CallExpression	print_statfs ( & statfs )		861113	0					
ANR	861179	Callee	print_statfs		861113	0					
ANR	861180	Identifier	print_statfs		861113	0					
ANR	861181	ArgumentList	& statfs		861113	1					
ANR	861182	Argument	& statfs		861113	0					
ANR	861183	UnaryOperationExpression	& statfs		861113	0					
ANR	861184	UnaryOperator	&		861113	0					
ANR	861185	Identifier	statfs		861113	1					
ANR	861186	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , status )"	743:1:17466:17503	861113	6	True				
ANR	861187	CallExpression	"DISCONNECT_AND_RETURN ( client , status )"		861113	0					
ANR	861188	Callee	DISCONNECT_AND_RETURN		861113	0					
ANR	861189	Identifier	DISCONNECT_AND_RETURN		861113	0					
ANR	861190	ArgumentList	client		861113	1					
ANR	861191	Argument	client		861113	0					
ANR	861192	Identifier	client		861113	0					
ANR	861193	Argument	status		861113	1					
ANR	861194	Identifier	status		861113	0					
ANR	861195	ReturnType	int		861113	1					
ANR	861196	Identifier	chirp_do_statfs		861113	2					
ANR	861197	ParameterList	"int argc , char * * argv"		861113	3					
ANR	861198	Parameter	int argc	729:20:17160:17167	861113	0	True				
ANR	861199	ParameterType	int		861113	0					
ANR	861200	Identifier	argc		861113	1					
ANR	861201	Parameter	char * * argv	729:30:17170:17180	861113	1	True				
ANR	861202	ParameterType	char * *		861113	0					
ANR	861203	Identifier	argv		861113	1					
ANR	861204	CFGEntryNode	ENTRY		861113		True				
ANR	861205	CFGExitNode	EXIT		861113		True				
ANR	861206	Symbol	argc		861113						
ANR	861207	Symbol	client		861113						
ANR	861208	Symbol	& statfs		861113						
ANR	861209	Symbol	* argv		861113						
ANR	861210	Symbol	statfs		861113						
ANR	861211	Symbol	argv		861113						
ANR	861212	Symbol	chirp_client_statfs		861113						
ANR	861213	Symbol	status		861113						
ANR	861214	Function	chirp_access	746:0:17508:18171							
ANR	861215	FunctionDef	"chirp_access (int argc , char * * argv)"		861214	0					
ANR	861216	CompoundStatement		746:40:17548:18171	861214	0					
ANR	861217	IfStatement	if ( argc != 4 )		861214	0					
ANR	861218	Condition	argc != 4	747:5:17555:17563	861214	0	True				
ANR	861219	EqualityExpression	argc != 4		861214	0		!=			
ANR	861220	Identifier	argc		861214	0					
ANR	861221	PrimaryExpression	4		861214	1					
ANR	861222	CompoundStatement		2:16:17:17	861214	1					
ANR	861223	ExpressionStatement	"printf ( ""condor_chirp access remotepath mode(rwxf)\\n"" )"	748:2:17570:17623	861214	0	True				
ANR	861224	CallExpression	"printf ( ""condor_chirp access remotepath mode(rwxf)\\n"" )"		861214	0					
ANR	861225	Callee	printf		861214	0					
ANR	861226	Identifier	printf		861214	0					
ANR	861227	ArgumentList	"""condor_chirp access remotepath mode(rwxf)\\n"""		861214	1					
ANR	861228	Argument	"""condor_chirp access remotepath mode(rwxf)\\n"""		861214	0					
ANR	861229	PrimaryExpression	"""condor_chirp access remotepath mode(rwxf)\\n"""		861214	0					
ANR	861230	ReturnStatement	return - 1 ;	749:2:17627:17636	861214	1	True				
ANR	861231	UnaryOperationExpression	- 1		861214	0					
ANR	861232	UnaryOperator	-		861214	0					
ANR	861233	PrimaryExpression	1		861214	1					
ANR	861234	IdentifierDeclStatement	struct chirp_client * client = 0 ;	752:1:17644:17675	861214	1	True				
ANR	861235	IdentifierDecl	* client = 0		861214	0					
ANR	861236	IdentifierDeclType	struct chirp_client *		861214	0					
ANR	861237	Identifier	client		861214	1					
ANR	861238	AssignmentExpression	* client = 0		861214	2		=			
ANR	861239	Identifier	client		861214	0					
ANR	861240	PrimaryExpression	0		861214	1					
ANR	861241	ExpressionStatement	CONNECT_STARTER ( client )	753:1:17678:17701	861214	2	True				
ANR	861242	CallExpression	CONNECT_STARTER ( client )		861214	0					
ANR	861243	Callee	CONNECT_STARTER		861214	0					
ANR	861244	Identifier	CONNECT_STARTER		861214	0					
ANR	861245	ArgumentList	client		861214	1					
ANR	861246	Argument	client		861214	0					
ANR	861247	Identifier	client		861214	0					
ANR	861248	IdentifierDeclStatement	int mode = 0 ;	755:1:17705:17717	861214	3	True				
ANR	861249	IdentifierDecl	mode = 0		861214	0					
ANR	861250	IdentifierDeclType	int		861214	0					
ANR	861251	Identifier	mode		861214	1					
ANR	861252	AssignmentExpression	mode = 0		861214	2		=			
ANR	861253	Identifier	mode		861214	0					
ANR	861254	PrimaryExpression	0		861214	1					
ANR	861255	IdentifierDeclStatement	char * m = argv [ 3 ] ;	756:1:17721:17738	861214	4	True				
ANR	861256	IdentifierDecl	* m = argv [ 3 ]		861214	0					
ANR	861257	IdentifierDeclType	char *		861214	0					
ANR	861258	Identifier	m		861214	1					
ANR	861259	AssignmentExpression	* m = argv [ 3 ]		861214	2		=			
ANR	861260	Identifier	m		861214	0					
ANR	861261	ArrayIndexing	argv [ 3 ]		861214	1					
ANR	861262	Identifier	argv		861214	0					
ANR	861263	PrimaryExpression	3		861214	1					
ANR	861264	WhileStatement	while ( * m != '\\0' )		861214	5					
ANR	861265	Condition	* m != '\\0'	757:7:17747:17756	861214	0	True				
ANR	861266	EqualityExpression	* m != '\\0'		861214	0		!=			
ANR	861267	UnaryOperationExpression	* m		861214	0					
ANR	861268	UnaryOperator	*		861214	0					
ANR	861269	Identifier	m		861214	1					
ANR	861270	PrimaryExpression	'\\0'		861214	1					
ANR	861271	CompoundStatement		12:19:210:210	861214	1					
ANR	861272	SwitchStatement	switch ( * m )		861214	0					
ANR	861273	Condition	* m	758:9:17770:17771	861214	0	True				
ANR	861274	UnaryOperationExpression	* m		861214	0					
ANR	861275	UnaryOperator	*		861214	0					
ANR	861276	Identifier	m		861214	1					
ANR	861277	CompoundStatement		13:13:225:225	861214	1					
ANR	861278	Label	case 'r' :	759:3:17779:17787	861214	0	True				
ANR	861279	ExpressionStatement	mode |= R_OK	760:4:17793:17805	861214	1	True				
ANR	861280	AssignmentExpression	mode |= R_OK		861214	0		|=			
ANR	861281	Identifier	mode		861214	0					
ANR	861282	Identifier	R_OK		861214	1					
ANR	861283	BreakStatement	break ;	761:4:17811:17816	861214	2	True				
ANR	861284	Label	case 'w' :	762:3:17821:17829	861214	3	True				
ANR	861285	ExpressionStatement	mode |= W_OK	763:4:17835:17847	861214	4	True				
ANR	861286	AssignmentExpression	mode |= W_OK		861214	0		|=			
ANR	861287	Identifier	mode		861214	0					
ANR	861288	Identifier	W_OK		861214	1					
ANR	861289	BreakStatement	break ;	764:4:17853:17858	861214	5	True				
ANR	861290	Label	case 'x' :	765:3:17863:17871	861214	6	True				
ANR	861291	ExpressionStatement	mode |= X_OK	766:4:17877:17889	861214	7	True				
ANR	861292	AssignmentExpression	mode |= X_OK		861214	0		|=			
ANR	861293	Identifier	mode		861214	0					
ANR	861294	Identifier	X_OK		861214	1					
ANR	861295	BreakStatement	break ;	767:4:17895:17900	861214	8	True				
ANR	861296	Label	case 'f' :	768:3:17905:17913	861214	9	True				
ANR	861297	ExpressionStatement	mode |= F_OK	769:4:17919:17931	861214	10	True				
ANR	861298	AssignmentExpression	mode |= F_OK		861214	0		|=			
ANR	861299	Identifier	mode		861214	0					
ANR	861300	Identifier	F_OK		861214	1					
ANR	861301	BreakStatement	break ;	770:4:17937:17942	861214	11	True				
ANR	861302	Label	default :	771:3:17947:17954	861214	12	True				
ANR	861303	Identifier	default		861214	0					
ANR	861304	ExpressionStatement	"fprintf ( stderr , ""invalid mode char '%c'\\n"" , * m )"	772:4:17960:18007	861214	13	True				
ANR	861305	CallExpression	"fprintf ( stderr , ""invalid mode char '%c'\\n"" , * m )"		861214	0					
ANR	861306	Callee	fprintf		861214	0					
ANR	861307	Identifier	fprintf		861214	0					
ANR	861308	ArgumentList	stderr		861214	1					
ANR	861309	Argument	stderr		861214	0					
ANR	861310	Identifier	stderr		861214	0					
ANR	861311	Argument	"""invalid mode char '%c'\\n"""		861214	1					
ANR	861312	PrimaryExpression	"""invalid mode char '%c'\\n"""		861214	0					
ANR	861313	Argument	* m		861214	2					
ANR	861314	UnaryOperationExpression	* m		861214	0					
ANR	861315	UnaryOperator	*		861214	0					
ANR	861316	Identifier	m		861214	1					
ANR	861317	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , - 1 )"	773:4:18013:18046	861214	14	True				
ANR	861318	CallExpression	"DISCONNECT_AND_RETURN ( client , - 1 )"		861214	0					
ANR	861319	Callee	DISCONNECT_AND_RETURN		861214	0					
ANR	861320	Identifier	DISCONNECT_AND_RETURN		861214	0					
ANR	861321	ArgumentList	client		861214	1					
ANR	861322	Argument	client		861214	0					
ANR	861323	Identifier	client		861214	0					
ANR	861324	Argument	- 1		861214	1					
ANR	861325	UnaryOperationExpression	- 1		861214	0					
ANR	861326	UnaryOperator	-		861214	0					
ANR	861327	PrimaryExpression	1		861214	1					
ANR	861328	BreakStatement	break ;	774:4:18052:18057	861214	15	True				
ANR	861329	ExpressionStatement	m ++	776:2:18065:18068	861214	1	True				
ANR	861330	PostIncDecOperationExpression	m ++		861214	0					
ANR	861331	Identifier	m		861214	0					
ANR	861332	IncDec	++		861214	1					
ANR	861333	IdentifierDeclStatement	"int status = chirp_client_access ( client , argv [ 2 ] , mode ) ;"	778:1:18074:18129	861214	6	True				
ANR	861334	IdentifierDecl	"status = chirp_client_access ( client , argv [ 2 ] , mode )"		861214	0					
ANR	861335	IdentifierDeclType	int		861214	0					
ANR	861336	Identifier	status		861214	1					
ANR	861337	AssignmentExpression	"status = chirp_client_access ( client , argv [ 2 ] , mode )"		861214	2		=			
ANR	861338	Identifier	status		861214	0					
ANR	861339	CallExpression	"chirp_client_access ( client , argv [ 2 ] , mode )"		861214	1					
ANR	861340	Callee	chirp_client_access		861214	0					
ANR	861341	Identifier	chirp_client_access		861214	0					
ANR	861342	ArgumentList	client		861214	1					
ANR	861343	Argument	client		861214	0					
ANR	861344	Identifier	client		861214	0					
ANR	861345	Argument	argv [ 2 ]		861214	1					
ANR	861346	ArrayIndexing	argv [ 2 ]		861214	0					
ANR	861347	Identifier	argv		861214	0					
ANR	861348	PrimaryExpression	2		861214	1					
ANR	861349	Argument	mode		861214	2					
ANR	861350	Identifier	mode		861214	0					
ANR	861351	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , status )"	779:1:18132:18169	861214	7	True				
ANR	861352	CallExpression	"DISCONNECT_AND_RETURN ( client , status )"		861214	0					
ANR	861353	Callee	DISCONNECT_AND_RETURN		861214	0					
ANR	861354	Identifier	DISCONNECT_AND_RETURN		861214	0					
ANR	861355	ArgumentList	client		861214	1					
ANR	861356	Argument	client		861214	0					
ANR	861357	Identifier	client		861214	0					
ANR	861358	Argument	status		861214	1					
ANR	861359	Identifier	status		861214	0					
ANR	861360	ReturnType	int		861214	1					
ANR	861361	Identifier	chirp_access		861214	2					
ANR	861362	ParameterList	"int argc , char * * argv"		861214	3					
ANR	861363	Parameter	int argc	746:17:17525:17532	861214	0	True				
ANR	861364	ParameterType	int		861214	0					
ANR	861365	Identifier	argc		861214	1					
ANR	861366	Parameter	char * * argv	746:27:17535:17545	861214	1	True				
ANR	861367	ParameterType	char * *		861214	0					
ANR	861368	Identifier	argv		861214	1					
ANR	861369	CFGEntryNode	ENTRY		861214		True				
ANR	861370	CFGExitNode	EXIT		861214		True				
ANR	861371	Symbol	argc		861214						
ANR	861372	Symbol	* argv		861214						
ANR	861373	Symbol	X_OK		861214						
ANR	861374	Symbol	W_OK		861214						
ANR	861375	Symbol	stderr		861214						
ANR	861376	Symbol	argv		861214						
ANR	861377	Symbol	m		861214						
ANR	861378	Symbol	R_OK		861214						
ANR	861379	Symbol	mode		861214						
ANR	861380	Symbol	F_OK		861214						
ANR	861381	Symbol	* m		861214						
ANR	861382	Symbol	client		861214						
ANR	861383	Symbol	chirp_client_access		861214						
ANR	861384	Symbol	status		861214						
ANR	861385	Function	chirp_chmod	782:0:18174:18506							
ANR	861386	FunctionDef	"chirp_chmod (int argc , char * * argv)"		861385	0					
ANR	861387	CompoundStatement		782:39:18213:18506	861385	0					
ANR	861388	IfStatement	if ( argc != 4 )		861385	0					
ANR	861389	Condition	argc != 4	783:5:18220:18228	861385	0	True				
ANR	861390	EqualityExpression	argc != 4		861385	0		!=			
ANR	861391	Identifier	argc		861385	0					
ANR	861392	PrimaryExpression	4		861385	1					
ANR	861393	CompoundStatement		2:16:17:17	861385	1					
ANR	861394	ExpressionStatement	"printf ( ""condor_chirp chmod remotepath mode\\n"" )"	784:2:18235:18281	861385	0	True				
ANR	861395	CallExpression	"printf ( ""condor_chirp chmod remotepath mode\\n"" )"		861385	0					
ANR	861396	Callee	printf		861385	0					
ANR	861397	Identifier	printf		861385	0					
ANR	861398	ArgumentList	"""condor_chirp chmod remotepath mode\\n"""		861385	1					
ANR	861399	Argument	"""condor_chirp chmod remotepath mode\\n"""		861385	0					
ANR	861400	PrimaryExpression	"""condor_chirp chmod remotepath mode\\n"""		861385	0					
ANR	861401	ReturnStatement	return - 1 ;	785:2:18285:18294	861385	1	True				
ANR	861402	UnaryOperationExpression	- 1		861385	0					
ANR	861403	UnaryOperator	-		861385	0					
ANR	861404	PrimaryExpression	1		861385	1					
ANR	861405	IdentifierDeclStatement	struct chirp_client * client = 0 ;	788:1:18302:18333	861385	1	True				
ANR	861406	IdentifierDecl	* client = 0		861385	0					
ANR	861407	IdentifierDeclType	struct chirp_client *		861385	0					
ANR	861408	Identifier	client		861385	1					
ANR	861409	AssignmentExpression	* client = 0		861385	2		=			
ANR	861410	Identifier	client		861385	0					
ANR	861411	PrimaryExpression	0		861385	1					
ANR	861412	ExpressionStatement	CONNECT_STARTER ( client )	789:1:18336:18359	861385	2	True				
ANR	861413	CallExpression	CONNECT_STARTER ( client )		861385	0					
ANR	861414	Callee	CONNECT_STARTER		861385	0					
ANR	861415	Identifier	CONNECT_STARTER		861385	0					
ANR	861416	ArgumentList	client		861385	1					
ANR	861417	Argument	client		861385	0					
ANR	861418	Identifier	client		861385	0					
ANR	861419	IdentifierDeclStatement	unsigned mode ;	791:1:18363:18376	861385	3	True				
ANR	861420	IdentifierDecl	mode		861385	0					
ANR	861421	IdentifierDeclType	unsigned		861385	0					
ANR	861422	Identifier	mode		861385	1					
ANR	861423	ExpressionStatement	"sscanf ( argv [ 3 ] , ""%o"" , & mode )"	792:1:18379:18407	861385	4	True				
ANR	861424	CallExpression	"sscanf ( argv [ 3 ] , ""%o"" , & mode )"		861385	0					
ANR	861425	Callee	sscanf		861385	0					
ANR	861426	Identifier	sscanf		861385	0					
ANR	861427	ArgumentList	argv [ 3 ]		861385	1					
ANR	861428	Argument	argv [ 3 ]		861385	0					
ANR	861429	ArrayIndexing	argv [ 3 ]		861385	0					
ANR	861430	Identifier	argv		861385	0					
ANR	861431	PrimaryExpression	3		861385	1					
ANR	861432	Argument	"""%o"""		861385	1					
ANR	861433	PrimaryExpression	"""%o"""		861385	0					
ANR	861434	Argument	& mode		861385	2					
ANR	861435	UnaryOperationExpression	& mode		861385	0					
ANR	861436	UnaryOperator	&		861385	0					
ANR	861437	Identifier	mode		861385	1					
ANR	861438	IdentifierDeclStatement	"int status = chirp_client_chmod ( client , argv [ 2 ] , mode ) ;"	793:1:18410:18464	861385	5	True				
ANR	861439	IdentifierDecl	"status = chirp_client_chmod ( client , argv [ 2 ] , mode )"		861385	0					
ANR	861440	IdentifierDeclType	int		861385	0					
ANR	861441	Identifier	status		861385	1					
ANR	861442	AssignmentExpression	"status = chirp_client_chmod ( client , argv [ 2 ] , mode )"		861385	2		=			
ANR	861443	Identifier	status		861385	0					
ANR	861444	CallExpression	"chirp_client_chmod ( client , argv [ 2 ] , mode )"		861385	1					
ANR	861445	Callee	chirp_client_chmod		861385	0					
ANR	861446	Identifier	chirp_client_chmod		861385	0					
ANR	861447	ArgumentList	client		861385	1					
ANR	861448	Argument	client		861385	0					
ANR	861449	Identifier	client		861385	0					
ANR	861450	Argument	argv [ 2 ]		861385	1					
ANR	861451	ArrayIndexing	argv [ 2 ]		861385	0					
ANR	861452	Identifier	argv		861385	0					
ANR	861453	PrimaryExpression	2		861385	1					
ANR	861454	Argument	mode		861385	2					
ANR	861455	Identifier	mode		861385	0					
ANR	861456	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , status )"	794:1:18467:18504	861385	6	True				
ANR	861457	CallExpression	"DISCONNECT_AND_RETURN ( client , status )"		861385	0					
ANR	861458	Callee	DISCONNECT_AND_RETURN		861385	0					
ANR	861459	Identifier	DISCONNECT_AND_RETURN		861385	0					
ANR	861460	ArgumentList	client		861385	1					
ANR	861461	Argument	client		861385	0					
ANR	861462	Identifier	client		861385	0					
ANR	861463	Argument	status		861385	1					
ANR	861464	Identifier	status		861385	0					
ANR	861465	ReturnType	int		861385	1					
ANR	861466	Identifier	chirp_chmod		861385	2					
ANR	861467	ParameterList	"int argc , char * * argv"		861385	3					
ANR	861468	Parameter	int argc	782:16:18190:18197	861385	0	True				
ANR	861469	ParameterType	int		861385	0					
ANR	861470	Identifier	argc		861385	1					
ANR	861471	Parameter	char * * argv	782:26:18200:18210	861385	1	True				
ANR	861472	ParameterType	char * *		861385	0					
ANR	861473	Identifier	argv		861385	1					
ANR	861474	CFGEntryNode	ENTRY		861385		True				
ANR	861475	CFGExitNode	EXIT		861385		True				
ANR	861476	Symbol	argc		861385						
ANR	861477	Symbol	mode		861385						
ANR	861478	Symbol	& mode		861385						
ANR	861479	Symbol	client		861385						
ANR	861480	Symbol	chirp_client_chmod		861385						
ANR	861481	Symbol	* argv		861385						
ANR	861482	Symbol	argv		861385						
ANR	861483	Symbol	status		861385						
ANR	861484	Function	chirp_chown	797:0:18509:18979							
ANR	861485	FunctionDef	"chirp_chown (int argc , char * * argv)"		861484	0					
ANR	861486	CompoundStatement		797:39:18548:18979	861484	0					
ANR	861487	IfStatement	if ( argc != 5 )		861484	0					
ANR	861488	Condition	argc != 5	798:5:18555:18563	861484	0	True				
ANR	861489	EqualityExpression	argc != 5		861484	0		!=			
ANR	861490	Identifier	argc		861484	0					
ANR	861491	PrimaryExpression	5		861484	1					
ANR	861492	CompoundStatement		2:16:17:17	861484	1					
ANR	861493	ExpressionStatement	"printf ( ""condor_chirp %s remotepath uid gid\\n"" , argv [ 1 ] )"	799:2:18570:18625	861484	0	True				
ANR	861494	CallExpression	"printf ( ""condor_chirp %s remotepath uid gid\\n"" , argv [ 1 ] )"		861484	0					
ANR	861495	Callee	printf		861484	0					
ANR	861496	Identifier	printf		861484	0					
ANR	861497	ArgumentList	"""condor_chirp %s remotepath uid gid\\n"""		861484	1					
ANR	861498	Argument	"""condor_chirp %s remotepath uid gid\\n"""		861484	0					
ANR	861499	PrimaryExpression	"""condor_chirp %s remotepath uid gid\\n"""		861484	0					
ANR	861500	Argument	argv [ 1 ]		861484	1					
ANR	861501	ArrayIndexing	argv [ 1 ]		861484	0					
ANR	861502	Identifier	argv		861484	0					
ANR	861503	PrimaryExpression	1		861484	1					
ANR	861504	ReturnStatement	return - 1 ;	800:2:18629:18638	861484	1	True				
ANR	861505	UnaryOperationExpression	- 1		861484	0					
ANR	861506	UnaryOperator	-		861484	0					
ANR	861507	PrimaryExpression	1		861484	1					
ANR	861508	IdentifierDeclStatement	struct chirp_client * client = 0 ;	803:1:18646:18677	861484	1	True				
ANR	861509	IdentifierDecl	* client = 0		861484	0					
ANR	861510	IdentifierDeclType	struct chirp_client *		861484	0					
ANR	861511	Identifier	client		861484	1					
ANR	861512	AssignmentExpression	* client = 0		861484	2		=			
ANR	861513	Identifier	client		861484	0					
ANR	861514	PrimaryExpression	0		861484	1					
ANR	861515	ExpressionStatement	CONNECT_STARTER ( client )	804:1:18680:18703	861484	2	True				
ANR	861516	CallExpression	CONNECT_STARTER ( client )		861484	0					
ANR	861517	Callee	CONNECT_STARTER		861484	0					
ANR	861518	Identifier	CONNECT_STARTER		861484	0					
ANR	861519	ArgumentList	client		861484	1					
ANR	861520	Argument	client		861484	0					
ANR	861521	Identifier	client		861484	0					
ANR	861522	IdentifierDeclStatement	int uid = atoi ( argv [ 3 ] ) ;	806:1:18707:18730	861484	3	True				
ANR	861523	IdentifierDecl	uid = atoi ( argv [ 3 ] )		861484	0					
ANR	861524	IdentifierDeclType	int		861484	0					
ANR	861525	Identifier	uid		861484	1					
ANR	861526	AssignmentExpression	uid = atoi ( argv [ 3 ] )		861484	2		=			
ANR	861527	Identifier	uid		861484	0					
ANR	861528	CallExpression	atoi ( argv [ 3 ] )		861484	1					
ANR	861529	Callee	atoi		861484	0					
ANR	861530	Identifier	atoi		861484	0					
ANR	861531	ArgumentList	argv [ 3 ]		861484	1					
ANR	861532	Argument	argv [ 3 ]		861484	0					
ANR	861533	ArrayIndexing	argv [ 3 ]		861484	0					
ANR	861534	Identifier	argv		861484	0					
ANR	861535	PrimaryExpression	3		861484	1					
ANR	861536	IdentifierDeclStatement	int gid = atoi ( argv [ 4 ] ) ;	807:1:18733:18756	861484	4	True				
ANR	861537	IdentifierDecl	gid = atoi ( argv [ 4 ] )		861484	0					
ANR	861538	IdentifierDeclType	int		861484	0					
ANR	861539	Identifier	gid		861484	1					
ANR	861540	AssignmentExpression	gid = atoi ( argv [ 4 ] )		861484	2		=			
ANR	861541	Identifier	gid		861484	0					
ANR	861542	CallExpression	atoi ( argv [ 4 ] )		861484	1					
ANR	861543	Callee	atoi		861484	0					
ANR	861544	Identifier	atoi		861484	0					
ANR	861545	ArgumentList	argv [ 4 ]		861484	1					
ANR	861546	Argument	argv [ 4 ]		861484	0					
ANR	861547	ArrayIndexing	argv [ 4 ]		861484	0					
ANR	861548	Identifier	argv		861484	0					
ANR	861549	PrimaryExpression	4		861484	1					
ANR	861550	IdentifierDeclStatement	int status = - 1 ;	808:1:18759:18774	861484	5	True				
ANR	861551	IdentifierDecl	status = - 1		861484	0					
ANR	861552	IdentifierDeclType	int		861484	0					
ANR	861553	Identifier	status		861484	1					
ANR	861554	AssignmentExpression	status = - 1		861484	2		=			
ANR	861555	Identifier	status		861484	0					
ANR	861556	UnaryOperationExpression	- 1		861484	1					
ANR	861557	UnaryOperator	-		861484	0					
ANR	861558	PrimaryExpression	1		861484	1					
ANR	861559	IfStatement	"if ( strcmp ( argv [ 1 ] , ""lchown"" ) )"		861484	6					
ANR	861560	Condition	"strcmp ( argv [ 1 ] , ""lchown"" )"	809:4:18780:18804	861484	0	True				
ANR	861561	CallExpression	"strcmp ( argv [ 1 ] , ""lchown"" )"		861484	0					
ANR	861562	Callee	strcmp		861484	0					
ANR	861563	Identifier	strcmp		861484	0					
ANR	861564	ArgumentList	argv [ 1 ]		861484	1					
ANR	861565	Argument	argv [ 1 ]		861484	0					
ANR	861566	ArrayIndexing	argv [ 1 ]		861484	0					
ANR	861567	Identifier	argv		861484	0					
ANR	861568	PrimaryExpression	1		861484	1					
ANR	861569	Argument	"""lchown"""		861484	1					
ANR	861570	PrimaryExpression	"""lchown"""		861484	0					
ANR	861571	CompoundStatement		13:31:258:258	861484	1					
ANR	861572	ExpressionStatement	"status = chirp_client_lchown ( client , argv [ 2 ] , uid , gid )"	810:2:18811:18866	861484	0	True				
ANR	861573	AssignmentExpression	"status = chirp_client_lchown ( client , argv [ 2 ] , uid , gid )"		861484	0		=			
ANR	861574	Identifier	status		861484	0					
ANR	861575	CallExpression	"chirp_client_lchown ( client , argv [ 2 ] , uid , gid )"		861484	1					
ANR	861576	Callee	chirp_client_lchown		861484	0					
ANR	861577	Identifier	chirp_client_lchown		861484	0					
ANR	861578	ArgumentList	client		861484	1					
ANR	861579	Argument	client		861484	0					
ANR	861580	Identifier	client		861484	0					
ANR	861581	Argument	argv [ 2 ]		861484	1					
ANR	861582	ArrayIndexing	argv [ 2 ]		861484	0					
ANR	861583	Identifier	argv		861484	0					
ANR	861584	PrimaryExpression	2		861484	1					
ANR	861585	Argument	uid		861484	2					
ANR	861586	Identifier	uid		861484	0					
ANR	861587	Argument	gid		861484	3					
ANR	861588	Identifier	gid		861484	0					
ANR	861589	ElseStatement	else		861484	0					
ANR	861590	CompoundStatement		15:8:327:327	861484	0					
ANR	861591	ExpressionStatement	"status = chirp_client_chown ( client , argv [ 2 ] , uid , gid )"	812:2:18880:18934	861484	0	True				
ANR	861592	AssignmentExpression	"status = chirp_client_chown ( client , argv [ 2 ] , uid , gid )"		861484	0		=			
ANR	861593	Identifier	status		861484	0					
ANR	861594	CallExpression	"chirp_client_chown ( client , argv [ 2 ] , uid , gid )"		861484	1					
ANR	861595	Callee	chirp_client_chown		861484	0					
ANR	861596	Identifier	chirp_client_chown		861484	0					
ANR	861597	ArgumentList	client		861484	1					
ANR	861598	Argument	client		861484	0					
ANR	861599	Identifier	client		861484	0					
ANR	861600	Argument	argv [ 2 ]		861484	1					
ANR	861601	ArrayIndexing	argv [ 2 ]		861484	0					
ANR	861602	Identifier	argv		861484	0					
ANR	861603	PrimaryExpression	2		861484	1					
ANR	861604	Argument	uid		861484	2					
ANR	861605	Identifier	uid		861484	0					
ANR	861606	Argument	gid		861484	3					
ANR	861607	Identifier	gid		861484	0					
ANR	861608	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , status )"	814:1:18940:18977	861484	7	True				
ANR	861609	CallExpression	"DISCONNECT_AND_RETURN ( client , status )"		861484	0					
ANR	861610	Callee	DISCONNECT_AND_RETURN		861484	0					
ANR	861611	Identifier	DISCONNECT_AND_RETURN		861484	0					
ANR	861612	ArgumentList	client		861484	1					
ANR	861613	Argument	client		861484	0					
ANR	861614	Identifier	client		861484	0					
ANR	861615	Argument	status		861484	1					
ANR	861616	Identifier	status		861484	0					
ANR	861617	ReturnType	int		861484	1					
ANR	861618	Identifier	chirp_chown		861484	2					
ANR	861619	ParameterList	"int argc , char * * argv"		861484	3					
ANR	861620	Parameter	int argc	797:16:18525:18532	861484	0	True				
ANR	861621	ParameterType	int		861484	0					
ANR	861622	Identifier	argc		861484	1					
ANR	861623	Parameter	char * * argv	797:26:18535:18545	861484	1	True				
ANR	861624	ParameterType	char * *		861484	0					
ANR	861625	Identifier	argv		861484	1					
ANR	861626	CFGEntryNode	ENTRY		861484		True				
ANR	861627	CFGExitNode	EXIT		861484		True				
ANR	861628	Symbol	argc		861484						
ANR	861629	Symbol	atoi		861484						
ANR	861630	Symbol	strcmp		861484						
ANR	861631	Symbol	uid		861484						
ANR	861632	Symbol	gid		861484						
ANR	861633	Symbol	chirp_client_lchown		861484						
ANR	861634	Symbol	chirp_client_chown		861484						
ANR	861635	Symbol	client		861484						
ANR	861636	Symbol	* argv		861484						
ANR	861637	Symbol	argv		861484						
ANR	861638	Symbol	status		861484						
ANR	861639	Function	chirp_truncate	817:0:18982:19303							
ANR	861640	FunctionDef	"chirp_truncate (int argc , char * * argv)"		861639	0					
ANR	861641	CompoundStatement		817:42:19024:19303	861639	0					
ANR	861642	IfStatement	if ( argc != 4 )		861639	0					
ANR	861643	Condition	argc != 4	818:5:19031:19039	861639	0	True				
ANR	861644	EqualityExpression	argc != 4		861639	0		!=			
ANR	861645	Identifier	argc		861639	0					
ANR	861646	PrimaryExpression	4		861639	1					
ANR	861647	CompoundStatement		2:16:17:17	861639	1					
ANR	861648	ExpressionStatement	"printf ( ""condor_chirp truncate remotepath length\\n"" )"	819:2:19046:19097	861639	0	True				
ANR	861649	CallExpression	"printf ( ""condor_chirp truncate remotepath length\\n"" )"		861639	0					
ANR	861650	Callee	printf		861639	0					
ANR	861651	Identifier	printf		861639	0					
ANR	861652	ArgumentList	"""condor_chirp truncate remotepath length\\n"""		861639	1					
ANR	861653	Argument	"""condor_chirp truncate remotepath length\\n"""		861639	0					
ANR	861654	PrimaryExpression	"""condor_chirp truncate remotepath length\\n"""		861639	0					
ANR	861655	ReturnStatement	return - 1 ;	820:2:19101:19110	861639	1	True				
ANR	861656	UnaryOperationExpression	- 1		861639	0					
ANR	861657	UnaryOperator	-		861639	0					
ANR	861658	PrimaryExpression	1		861639	1					
ANR	861659	IdentifierDeclStatement	struct chirp_client * client = 0 ;	823:1:19118:19149	861639	1	True				
ANR	861660	IdentifierDecl	* client = 0		861639	0					
ANR	861661	IdentifierDeclType	struct chirp_client *		861639	0					
ANR	861662	Identifier	client		861639	1					
ANR	861663	AssignmentExpression	* client = 0		861639	2		=			
ANR	861664	Identifier	client		861639	0					
ANR	861665	PrimaryExpression	0		861639	1					
ANR	861666	ExpressionStatement	CONNECT_STARTER ( client )	824:1:19152:19175	861639	2	True				
ANR	861667	CallExpression	CONNECT_STARTER ( client )		861639	0					
ANR	861668	Callee	CONNECT_STARTER		861639	0					
ANR	861669	Identifier	CONNECT_STARTER		861639	0					
ANR	861670	ArgumentList	client		861639	1					
ANR	861671	Argument	client		861639	0					
ANR	861672	Identifier	client		861639	0					
ANR	861673	IdentifierDeclStatement	int len = atoi ( argv [ 3 ] ) ;	826:1:19179:19202	861639	3	True				
ANR	861674	IdentifierDecl	len = atoi ( argv [ 3 ] )		861639	0					
ANR	861675	IdentifierDeclType	int		861639	0					
ANR	861676	Identifier	len		861639	1					
ANR	861677	AssignmentExpression	len = atoi ( argv [ 3 ] )		861639	2		=			
ANR	861678	Identifier	len		861639	0					
ANR	861679	CallExpression	atoi ( argv [ 3 ] )		861639	1					
ANR	861680	Callee	atoi		861639	0					
ANR	861681	Identifier	atoi		861639	0					
ANR	861682	ArgumentList	argv [ 3 ]		861639	1					
ANR	861683	Argument	argv [ 3 ]		861639	0					
ANR	861684	ArrayIndexing	argv [ 3 ]		861639	0					
ANR	861685	Identifier	argv		861639	0					
ANR	861686	PrimaryExpression	3		861639	1					
ANR	861687	IdentifierDeclStatement	"int status = chirp_client_truncate ( client , argv [ 2 ] , len ) ;"	827:1:19205:19261	861639	4	True				
ANR	861688	IdentifierDecl	"status = chirp_client_truncate ( client , argv [ 2 ] , len )"		861639	0					
ANR	861689	IdentifierDeclType	int		861639	0					
ANR	861690	Identifier	status		861639	1					
ANR	861691	AssignmentExpression	"status = chirp_client_truncate ( client , argv [ 2 ] , len )"		861639	2		=			
ANR	861692	Identifier	status		861639	0					
ANR	861693	CallExpression	"chirp_client_truncate ( client , argv [ 2 ] , len )"		861639	1					
ANR	861694	Callee	chirp_client_truncate		861639	0					
ANR	861695	Identifier	chirp_client_truncate		861639	0					
ANR	861696	ArgumentList	client		861639	1					
ANR	861697	Argument	client		861639	0					
ANR	861698	Identifier	client		861639	0					
ANR	861699	Argument	argv [ 2 ]		861639	1					
ANR	861700	ArrayIndexing	argv [ 2 ]		861639	0					
ANR	861701	Identifier	argv		861639	0					
ANR	861702	PrimaryExpression	2		861639	1					
ANR	861703	Argument	len		861639	2					
ANR	861704	Identifier	len		861639	0					
ANR	861705	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , status )"	828:1:19264:19301	861639	5	True				
ANR	861706	CallExpression	"DISCONNECT_AND_RETURN ( client , status )"		861639	0					
ANR	861707	Callee	DISCONNECT_AND_RETURN		861639	0					
ANR	861708	Identifier	DISCONNECT_AND_RETURN		861639	0					
ANR	861709	ArgumentList	client		861639	1					
ANR	861710	Argument	client		861639	0					
ANR	861711	Identifier	client		861639	0					
ANR	861712	Argument	status		861639	1					
ANR	861713	Identifier	status		861639	0					
ANR	861714	ReturnType	int		861639	1					
ANR	861715	Identifier	chirp_truncate		861639	2					
ANR	861716	ParameterList	"int argc , char * * argv"		861639	3					
ANR	861717	Parameter	int argc	817:19:19001:19008	861639	0	True				
ANR	861718	ParameterType	int		861639	0					
ANR	861719	Identifier	argc		861639	1					
ANR	861720	Parameter	char * * argv	817:29:19011:19021	861639	1	True				
ANR	861721	ParameterType	char * *		861639	0					
ANR	861722	Identifier	argv		861639	1					
ANR	861723	CFGEntryNode	ENTRY		861639		True				
ANR	861724	CFGExitNode	EXIT		861639		True				
ANR	861725	Symbol	argc		861639						
ANR	861726	Symbol	atoi		861639						
ANR	861727	Symbol	len		861639						
ANR	861728	Symbol	client		861639						
ANR	861729	Symbol	* argv		861639						
ANR	861730	Symbol	argv		861639						
ANR	861731	Symbol	chirp_client_truncate		861639						
ANR	861732	Symbol	status		861639						
ANR	861733	Function	chirp_utime	831:0:19306:19666							
ANR	861734	FunctionDef	"chirp_utime (int argc , char * * argv)"		861733	0					
ANR	861735	CompoundStatement		831:39:19345:19666	861733	0					
ANR	861736	IfStatement	if ( argc != 5 )		861733	0					
ANR	861737	Condition	argc != 5	832:5:19352:19360	861733	0	True				
ANR	861738	EqualityExpression	argc != 5		861733	0		!=			
ANR	861739	Identifier	argc		861733	0					
ANR	861740	PrimaryExpression	5		861733	1					
ANR	861741	CompoundStatement		2:16:17:17	861733	1					
ANR	861742	ExpressionStatement	"printf ( ""condor_chirp utime remotepath actime mtime\\n"" )"	833:2:19367:19421	861733	0	True				
ANR	861743	CallExpression	"printf ( ""condor_chirp utime remotepath actime mtime\\n"" )"		861733	0					
ANR	861744	Callee	printf		861733	0					
ANR	861745	Identifier	printf		861733	0					
ANR	861746	ArgumentList	"""condor_chirp utime remotepath actime mtime\\n"""		861733	1					
ANR	861747	Argument	"""condor_chirp utime remotepath actime mtime\\n"""		861733	0					
ANR	861748	PrimaryExpression	"""condor_chirp utime remotepath actime mtime\\n"""		861733	0					
ANR	861749	ReturnStatement	return - 1 ;	834:2:19425:19434	861733	1	True				
ANR	861750	UnaryOperationExpression	- 1		861733	0					
ANR	861751	UnaryOperator	-		861733	0					
ANR	861752	PrimaryExpression	1		861733	1					
ANR	861753	IdentifierDeclStatement	struct chirp_client * client = 0 ;	837:1:19442:19473	861733	1	True				
ANR	861754	IdentifierDecl	* client = 0		861733	0					
ANR	861755	IdentifierDeclType	struct chirp_client *		861733	0					
ANR	861756	Identifier	client		861733	1					
ANR	861757	AssignmentExpression	* client = 0		861733	2		=			
ANR	861758	Identifier	client		861733	0					
ANR	861759	PrimaryExpression	0		861733	1					
ANR	861760	ExpressionStatement	CONNECT_STARTER ( client )	838:1:19476:19499	861733	2	True				
ANR	861761	CallExpression	CONNECT_STARTER ( client )		861733	0					
ANR	861762	Callee	CONNECT_STARTER		861733	0					
ANR	861763	Identifier	CONNECT_STARTER		861733	0					
ANR	861764	ArgumentList	client		861733	1					
ANR	861765	Argument	client		861733	0					
ANR	861766	Identifier	client		861733	0					
ANR	861767	IdentifierDeclStatement	int actime = atoi ( argv [ 3 ] ) ;	840:1:19504:19530	861733	3	True				
ANR	861768	IdentifierDecl	actime = atoi ( argv [ 3 ] )		861733	0					
ANR	861769	IdentifierDeclType	int		861733	0					
ANR	861770	Identifier	actime		861733	1					
ANR	861771	AssignmentExpression	actime = atoi ( argv [ 3 ] )		861733	2		=			
ANR	861772	Identifier	actime		861733	0					
ANR	861773	CallExpression	atoi ( argv [ 3 ] )		861733	1					
ANR	861774	Callee	atoi		861733	0					
ANR	861775	Identifier	atoi		861733	0					
ANR	861776	ArgumentList	argv [ 3 ]		861733	1					
ANR	861777	Argument	argv [ 3 ]		861733	0					
ANR	861778	ArrayIndexing	argv [ 3 ]		861733	0					
ANR	861779	Identifier	argv		861733	0					
ANR	861780	PrimaryExpression	3		861733	1					
ANR	861781	IdentifierDeclStatement	int mtime = atoi ( argv [ 4 ] ) ;	841:1:19533:19558	861733	4	True				
ANR	861782	IdentifierDecl	mtime = atoi ( argv [ 4 ] )		861733	0					
ANR	861783	IdentifierDeclType	int		861733	0					
ANR	861784	Identifier	mtime		861733	1					
ANR	861785	AssignmentExpression	mtime = atoi ( argv [ 4 ] )		861733	2		=			
ANR	861786	Identifier	mtime		861733	0					
ANR	861787	CallExpression	atoi ( argv [ 4 ] )		861733	1					
ANR	861788	Callee	atoi		861733	0					
ANR	861789	Identifier	atoi		861733	0					
ANR	861790	ArgumentList	argv [ 4 ]		861733	1					
ANR	861791	Argument	argv [ 4 ]		861733	0					
ANR	861792	ArrayIndexing	argv [ 4 ]		861733	0					
ANR	861793	Identifier	argv		861733	0					
ANR	861794	PrimaryExpression	4		861733	1					
ANR	861795	IdentifierDeclStatement	"int status = chirp_client_utime ( client , argv [ 2 ] , actime , mtime ) ;"	842:1:19561:19624	861733	5	True				
ANR	861796	IdentifierDecl	"status = chirp_client_utime ( client , argv [ 2 ] , actime , mtime )"		861733	0					
ANR	861797	IdentifierDeclType	int		861733	0					
ANR	861798	Identifier	status		861733	1					
ANR	861799	AssignmentExpression	"status = chirp_client_utime ( client , argv [ 2 ] , actime , mtime )"		861733	2		=			
ANR	861800	Identifier	status		861733	0					
ANR	861801	CallExpression	"chirp_client_utime ( client , argv [ 2 ] , actime , mtime )"		861733	1					
ANR	861802	Callee	chirp_client_utime		861733	0					
ANR	861803	Identifier	chirp_client_utime		861733	0					
ANR	861804	ArgumentList	client		861733	1					
ANR	861805	Argument	client		861733	0					
ANR	861806	Identifier	client		861733	0					
ANR	861807	Argument	argv [ 2 ]		861733	1					
ANR	861808	ArrayIndexing	argv [ 2 ]		861733	0					
ANR	861809	Identifier	argv		861733	0					
ANR	861810	PrimaryExpression	2		861733	1					
ANR	861811	Argument	actime		861733	2					
ANR	861812	Identifier	actime		861733	0					
ANR	861813	Argument	mtime		861733	3					
ANR	861814	Identifier	mtime		861733	0					
ANR	861815	ExpressionStatement	"DISCONNECT_AND_RETURN ( client , status )"	843:1:19627:19664	861733	6	True				
ANR	861816	CallExpression	"DISCONNECT_AND_RETURN ( client , status )"		861733	0					
ANR	861817	Callee	DISCONNECT_AND_RETURN		861733	0					
ANR	861818	Identifier	DISCONNECT_AND_RETURN		861733	0					
ANR	861819	ArgumentList	client		861733	1					
ANR	861820	Argument	client		861733	0					
ANR	861821	Identifier	client		861733	0					
ANR	861822	Argument	status		861733	1					
ANR	861823	Identifier	status		861733	0					
ANR	861824	ReturnType	int		861733	1					
ANR	861825	Identifier	chirp_utime		861733	2					
ANR	861826	ParameterList	"int argc , char * * argv"		861733	3					
ANR	861827	Parameter	int argc	831:16:19322:19329	861733	0	True				
ANR	861828	ParameterType	int		861733	0					
ANR	861829	Identifier	argc		861733	1					
ANR	861830	Parameter	char * * argv	831:26:19332:19342	861733	1	True				
ANR	861831	ParameterType	char * *		861733	0					
ANR	861832	Identifier	argv		861733	1					
ANR	861833	CFGEntryNode	ENTRY		861733		True				
ANR	861834	CFGExitNode	EXIT		861733		True				
ANR	861835	Symbol	argc		861733						
ANR	861836	Symbol	atoi		861733						
ANR	861837	Symbol	actime		861733						
ANR	861838	Symbol	client		861733						
ANR	861839	Symbol	chirp_client_utime		861733						
ANR	861840	Symbol	* argv		861733						
ANR	861841	Symbol	mtime		861733						
ANR	861842	Symbol	argv		861733						
ANR	861843	Symbol	status		861733						
ANR	861844	Function	usage	846:0:19669:20998							
ANR	861845	FunctionDef	usage ()		861844	0					
ANR	861846	CompoundStatement		846:13:19682:20998	861844	0					
ANR	861847	ExpressionStatement	"printf ( ""Usage:\\n"" )"	847:1:19685:19703	861844	0	True				
ANR	861848	CallExpression	"printf ( ""Usage:\\n"" )"		861844	0					
ANR	861849	Callee	printf		861844	0					
ANR	861850	Identifier	printf		861844	0					
ANR	861851	ArgumentList	"""Usage:\\n"""		861844	1					
ANR	861852	Argument	"""Usage:\\n"""		861844	0					
ANR	861853	PrimaryExpression	"""Usage:\\n"""		861844	0					
ANR	861854	ExpressionStatement	"printf ( ""condor_chirp fetch remote_file local_file\\n"" )"	848:1:19706:19759	861844	1	True				
ANR	861855	CallExpression	"printf ( ""condor_chirp fetch remote_file local_file\\n"" )"		861844	0					
ANR	861856	Callee	printf		861844	0					
ANR	861857	Identifier	printf		861844	0					
ANR	861858	ArgumentList	"""condor_chirp fetch remote_file local_file\\n"""		861844	1					
ANR	861859	Argument	"""condor_chirp fetch remote_file local_file\\n"""		861844	0					
ANR	861860	PrimaryExpression	"""condor_chirp fetch remote_file local_file\\n"""		861844	0					
ANR	861861	Statement	printf	849:1:19762:19767	861844	2	True				
ANR	861862	Statement	(	849:7:19768:19768	861844	3	True				
ANR	861863	Statement	"""condor_chirp put [-mode mode] [-perm perm] local_file """	849:8:19769:19824	861844	4	True				
ANR	861864	Statement	"""remote_file\\n"""	850:4:19830:19844	861844	5	True				
ANR	861865	Statement	)	850:19:19845:19845	861844	6	True				
ANR	861866	ExpressionStatement		850:20:19846:19846	861844	7	True				
ANR	861867	ExpressionStatement	"printf ( ""condor_chirp remove remote_file\\n"" )"	851:1:19849:19892	861844	8	True				
ANR	861868	CallExpression	"printf ( ""condor_chirp remove remote_file\\n"" )"		861844	0					
ANR	861869	Callee	printf		861844	0					
ANR	861870	Identifier	printf		861844	0					
ANR	861871	ArgumentList	"""condor_chirp remove remote_file\\n"""		861844	1					
ANR	861872	Argument	"""condor_chirp remove remote_file\\n"""		861844	0					
ANR	861873	PrimaryExpression	"""condor_chirp remove remote_file\\n"""		861844	0					
ANR	861874	ExpressionStatement	"printf ( ""condor_chirp get_job_attr job_attribute\\n"" )"	852:1:19895:19946	861844	9	True				
ANR	861875	CallExpression	"printf ( ""condor_chirp get_job_attr job_attribute\\n"" )"		861844	0					
ANR	861876	Callee	printf		861844	0					
ANR	861877	Identifier	printf		861844	0					
ANR	861878	ArgumentList	"""condor_chirp get_job_attr job_attribute\\n"""		861844	1					
ANR	861879	Argument	"""condor_chirp get_job_attr job_attribute\\n"""		861844	0					
ANR	861880	PrimaryExpression	"""condor_chirp get_job_attr job_attribute\\n"""		861844	0					
ANR	861881	ExpressionStatement	"printf ( ""condor_chirp set_job_attr job_attribute attribute_value\\n"" )"	853:1:19949:20016	861844	10	True				
ANR	861882	CallExpression	"printf ( ""condor_chirp set_job_attr job_attribute attribute_value\\n"" )"		861844	0					
ANR	861883	Callee	printf		861844	0					
ANR	861884	Identifier	printf		861844	0					
ANR	861885	ArgumentList	"""condor_chirp set_job_attr job_attribute attribute_value\\n"""		861844	1					
ANR	861886	Argument	"""condor_chirp set_job_attr job_attribute attribute_value\\n"""		861844	0					
ANR	861887	PrimaryExpression	"""condor_chirp set_job_attr job_attribute attribute_value\\n"""		861844	0					
ANR	861888	ExpressionStatement	"printf ( ""condor_chirp ulog text\\n"" )"	854:1:20019:20053	861844	11	True				
ANR	861889	CallExpression	"printf ( ""condor_chirp ulog text\\n"" )"		861844	0					
ANR	861890	Callee	printf		861844	0					
ANR	861891	Identifier	printf		861844	0					
ANR	861892	ArgumentList	"""condor_chirp ulog text\\n"""		861844	1					
ANR	861893	Argument	"""condor_chirp ulog text\\n"""		861844	0					
ANR	861894	PrimaryExpression	"""condor_chirp ulog text\\n"""		861844	0					
ANR	861895	Statement	printf	855:1:20056:20061	861844	12	True				
ANR	861896	Statement	(	855:7:20062:20062	861844	13	True				
ANR	861897	Statement	"""condor_chirp read [-offset offset] [-stride length skip] """	855:8:20063:20121	861844	14	True				
ANR	861898	Statement	"""remote_file length\\n"""	856:2:20125:20146	861844	15	True				
ANR	861899	Statement	)	856:24:20147:20147	861844	16	True				
ANR	861900	ExpressionStatement		856:25:20148:20148	861844	17	True				
ANR	861901	Statement	printf	857:1:20151:20156	861844	18	True				
ANR	861902	Statement	(	857:7:20157:20157	861844	19	True				
ANR	861903	Statement	"""condor_chirp write [-offset remote_offset] [-stride length skip] """	857:8:20158:20224	861844	20	True				
ANR	861904	Statement	"""remote_file local_file\\n"""	858:2:20228:20253	861844	21	True				
ANR	861905	Statement	)	858:28:20254:20254	861844	22	True				
ANR	861906	ExpressionStatement		858:29:20255:20255	861844	23	True				
ANR	861907	ExpressionStatement	"printf ( ""condor_chirp rmdir [-r] remotepath\\n"" )"	859:1:20258:20304	861844	24	True				
ANR	861908	CallExpression	"printf ( ""condor_chirp rmdir [-r] remotepath\\n"" )"		861844	0					
ANR	861909	Callee	printf		861844	0					
ANR	861910	Identifier	printf		861844	0					
ANR	861911	ArgumentList	"""condor_chirp rmdir [-r] remotepath\\n"""		861844	1					
ANR	861912	Argument	"""condor_chirp rmdir [-r] remotepath\\n"""		861844	0					
ANR	861913	PrimaryExpression	"""condor_chirp rmdir [-r] remotepath\\n"""		861844	0					
ANR	861914	ExpressionStatement	"printf ( ""condor_chirp getdir [-l] remotepath\\n"" )"	860:1:20307:20354	861844	25	True				
ANR	861915	CallExpression	"printf ( ""condor_chirp getdir [-l] remotepath\\n"" )"		861844	0					
ANR	861916	Callee	printf		861844	0					
ANR	861917	Identifier	printf		861844	0					
ANR	861918	ArgumentList	"""condor_chirp getdir [-l] remotepath\\n"""		861844	1					
ANR	861919	Argument	"""condor_chirp getdir [-l] remotepath\\n"""		861844	0					
ANR	861920	PrimaryExpression	"""condor_chirp getdir [-l] remotepath\\n"""		861844	0					
ANR	861921	ExpressionStatement	"printf ( ""condor_chirp whoami\\n"" )"	861:1:20357:20388	861844	26	True				
ANR	861922	CallExpression	"printf ( ""condor_chirp whoami\\n"" )"		861844	0					
ANR	861923	Callee	printf		861844	0					
ANR	861924	Identifier	printf		861844	0					
ANR	861925	ArgumentList	"""condor_chirp whoami\\n"""		861844	1					
ANR	861926	Argument	"""condor_chirp whoami\\n"""		861844	0					
ANR	861927	PrimaryExpression	"""condor_chirp whoami\\n"""		861844	0					
ANR	861928	ExpressionStatement	"printf ( ""condor_chirp whoareyou remotepath\\n"" )"	862:1:20391:20436	861844	27	True				
ANR	861929	CallExpression	"printf ( ""condor_chirp whoareyou remotepath\\n"" )"		861844	0					
ANR	861930	Callee	printf		861844	0					
ANR	861931	Identifier	printf		861844	0					
ANR	861932	ArgumentList	"""condor_chirp whoareyou remotepath\\n"""		861844	1					
ANR	861933	Argument	"""condor_chirp whoareyou remotepath\\n"""		861844	0					
ANR	861934	PrimaryExpression	"""condor_chirp whoareyou remotepath\\n"""		861844	0					
ANR	861935	ExpressionStatement	"printf ( ""condor_chirp link [-s] oldpath newpath\\n"" )"	863:1:20439:20489	861844	28	True				
ANR	861936	CallExpression	"printf ( ""condor_chirp link [-s] oldpath newpath\\n"" )"		861844	0					
ANR	861937	Callee	printf		861844	0					
ANR	861938	Identifier	printf		861844	0					
ANR	861939	ArgumentList	"""condor_chirp link [-s] oldpath newpath\\n"""		861844	1					
ANR	861940	Argument	"""condor_chirp link [-s] oldpath newpath\\n"""		861844	0					
ANR	861941	PrimaryExpression	"""condor_chirp link [-s] oldpath newpath\\n"""		861844	0					
ANR	861942	ExpressionStatement	"printf ( ""condor_chirp readlink remotepath length\\n"" )"	864:1:20492:20543	861844	29	True				
ANR	861943	CallExpression	"printf ( ""condor_chirp readlink remotepath length\\n"" )"		861844	0					
ANR	861944	Callee	printf		861844	0					
ANR	861945	Identifier	printf		861844	0					
ANR	861946	ArgumentList	"""condor_chirp readlink remotepath length\\n"""		861844	1					
ANR	861947	Argument	"""condor_chirp readlink remotepath length\\n"""		861844	0					
ANR	861948	PrimaryExpression	"""condor_chirp readlink remotepath length\\n"""		861844	0					
ANR	861949	ExpressionStatement	"printf ( ""condor_chirp stat remotepath\\n"" )"	865:1:20546:20586	861844	30	True				
ANR	861950	CallExpression	"printf ( ""condor_chirp stat remotepath\\n"" )"		861844	0					
ANR	861951	Callee	printf		861844	0					
ANR	861952	Identifier	printf		861844	0					
ANR	861953	ArgumentList	"""condor_chirp stat remotepath\\n"""		861844	1					
ANR	861954	Argument	"""condor_chirp stat remotepath\\n"""		861844	0					
ANR	861955	PrimaryExpression	"""condor_chirp stat remotepath\\n"""		861844	0					
ANR	861956	ExpressionStatement	"printf ( ""condor_chirp lstat remotepath\\n"" )"	866:1:20589:20630	861844	31	True				
ANR	861957	CallExpression	"printf ( ""condor_chirp lstat remotepath\\n"" )"		861844	0					
ANR	861958	Callee	printf		861844	0					
ANR	861959	Identifier	printf		861844	0					
ANR	861960	ArgumentList	"""condor_chirp lstat remotepath\\n"""		861844	1					
ANR	861961	Argument	"""condor_chirp lstat remotepath\\n"""		861844	0					
ANR	861962	PrimaryExpression	"""condor_chirp lstat remotepath\\n"""		861844	0					
ANR	861963	ExpressionStatement	"printf ( ""condor_chirp statfs remotepath\\n"" )"	867:1:20633:20675	861844	32	True				
ANR	861964	CallExpression	"printf ( ""condor_chirp statfs remotepath\\n"" )"		861844	0					
ANR	861965	Callee	printf		861844	0					
ANR	861966	Identifier	printf		861844	0					
ANR	861967	ArgumentList	"""condor_chirp statfs remotepath\\n"""		861844	1					
ANR	861968	Argument	"""condor_chirp statfs remotepath\\n"""		861844	0					
ANR	861969	PrimaryExpression	"""condor_chirp statfs remotepath\\n"""		861844	0					
ANR	861970	ExpressionStatement	"printf ( ""condor_chirp access remotepath mode(rwxf)\\n"" )"	868:1:20678:20731	861844	33	True				
ANR	861971	CallExpression	"printf ( ""condor_chirp access remotepath mode(rwxf)\\n"" )"		861844	0					
ANR	861972	Callee	printf		861844	0					
ANR	861973	Identifier	printf		861844	0					
ANR	861974	ArgumentList	"""condor_chirp access remotepath mode(rwxf)\\n"""		861844	1					
ANR	861975	Argument	"""condor_chirp access remotepath mode(rwxf)\\n"""		861844	0					
ANR	861976	PrimaryExpression	"""condor_chirp access remotepath mode(rwxf)\\n"""		861844	0					
ANR	861977	ExpressionStatement	"printf ( ""condor_chirp chmod remotepath mode\\n"" )"	869:1:20734:20780	861844	34	True				
ANR	861978	CallExpression	"printf ( ""condor_chirp chmod remotepath mode\\n"" )"		861844	0					
ANR	861979	Callee	printf		861844	0					
ANR	861980	Identifier	printf		861844	0					
ANR	861981	ArgumentList	"""condor_chirp chmod remotepath mode\\n"""		861844	1					
ANR	861982	Argument	"""condor_chirp chmod remotepath mode\\n"""		861844	0					
ANR	861983	PrimaryExpression	"""condor_chirp chmod remotepath mode\\n"""		861844	0					
ANR	861984	ExpressionStatement	"printf ( ""condor_chirp chown remotepath uid gid\\n"" )"	870:1:20783:20832	861844	35	True				
ANR	861985	CallExpression	"printf ( ""condor_chirp chown remotepath uid gid\\n"" )"		861844	0					
ANR	861986	Callee	printf		861844	0					
ANR	861987	Identifier	printf		861844	0					
ANR	861988	ArgumentList	"""condor_chirp chown remotepath uid gid\\n"""		861844	1					
ANR	861989	Argument	"""condor_chirp chown remotepath uid gid\\n"""		861844	0					
ANR	861990	PrimaryExpression	"""condor_chirp chown remotepath uid gid\\n"""		861844	0					
ANR	861991	ExpressionStatement	"printf ( ""condor_chirp lchown remotepath uid gid\\n"" )"	871:1:20835:20885	861844	36	True				
ANR	861992	CallExpression	"printf ( ""condor_chirp lchown remotepath uid gid\\n"" )"		861844	0					
ANR	861993	Callee	printf		861844	0					
ANR	861994	Identifier	printf		861844	0					
ANR	861995	ArgumentList	"""condor_chirp lchown remotepath uid gid\\n"""		861844	1					
ANR	861996	Argument	"""condor_chirp lchown remotepath uid gid\\n"""		861844	0					
ANR	861997	PrimaryExpression	"""condor_chirp lchown remotepath uid gid\\n"""		861844	0					
ANR	861998	ExpressionStatement	"printf ( ""condor_chirp truncate remotepath length\\n"" )"	872:1:20888:20939	861844	37	True				
ANR	861999	CallExpression	"printf ( ""condor_chirp truncate remotepath length\\n"" )"		861844	0					
ANR	862000	Callee	printf		861844	0					
ANR	862001	Identifier	printf		861844	0					
ANR	862002	ArgumentList	"""condor_chirp truncate remotepath length\\n"""		861844	1					
ANR	862003	Argument	"""condor_chirp truncate remotepath length\\n"""		861844	0					
ANR	862004	PrimaryExpression	"""condor_chirp truncate remotepath length\\n"""		861844	0					
ANR	862005	ExpressionStatement	"printf ( ""condor_chirp utime remotepath actime mtime\\n"" )"	873:1:20942:20996	861844	38	True				
ANR	862006	CallExpression	"printf ( ""condor_chirp utime remotepath actime mtime\\n"" )"		861844	0					
ANR	862007	Callee	printf		861844	0					
ANR	862008	Identifier	printf		861844	0					
ANR	862009	ArgumentList	"""condor_chirp utime remotepath actime mtime\\n"""		861844	1					
ANR	862010	Argument	"""condor_chirp utime remotepath actime mtime\\n"""		861844	0					
ANR	862011	PrimaryExpression	"""condor_chirp utime remotepath actime mtime\\n"""		861844	0					
ANR	862012	ReturnType	void		861844	1					
ANR	862013	Identifier	usage		861844	2					
ANR	862014	ParameterList			861844	3					
ANR	862015	CFGEntryNode	ENTRY		861844		True				
ANR	862016	CFGExitNode	EXIT		861844		True				
ANR	862017	Function	main	876:0:21001:23170							
ANR	862018	FunctionDef	"main (int argc , char * * argv)"		862017	0					
ANR	862019	CompoundStatement		877:28:21033:23170	862017	0					
ANR	862020	IdentifierDeclStatement	int ret_val = - 1 ;	879:1:21037:21053	862017	0	True				
ANR	862021	IdentifierDecl	ret_val = - 1		862017	0					
ANR	862022	IdentifierDeclType	int		862017	0					
ANR	862023	Identifier	ret_val		862017	1					
ANR	862024	AssignmentExpression	ret_val = - 1		862017	2		=			
ANR	862025	Identifier	ret_val		862017	0					
ANR	862026	UnaryOperationExpression	- 1		862017	1					
ANR	862027	UnaryOperator	-		862017	0					
ANR	862028	PrimaryExpression	1		862017	1					
ANR	862029	IfStatement	"if ( argc == 1 || ( argc == 2 && strcmp ( argv [ 1 ] , ""-h"" ) == 0 ) )"		862017	1					
ANR	862030	Condition	"argc == 1 || ( argc == 2 && strcmp ( argv [ 1 ] , ""-h"" ) == 0 )"	881:5:21061:21114	862017	0	True				
ANR	862031	OrExpression	"argc == 1 || ( argc == 2 && strcmp ( argv [ 1 ] , ""-h"" ) == 0 )"		862017	0		||			
ANR	862032	EqualityExpression	argc == 1		862017	0		==			
ANR	862033	Identifier	argc		862017	0					
ANR	862034	PrimaryExpression	1		862017	1					
ANR	862035	AndExpression	"argc == 2 && strcmp ( argv [ 1 ] , ""-h"" ) == 0"		862017	1		&&			
ANR	862036	EqualityExpression	argc == 2		862017	0		==			
ANR	862037	Identifier	argc		862017	0					
ANR	862038	PrimaryExpression	2		862017	1					
ANR	862039	EqualityExpression	"strcmp ( argv [ 1 ] , ""-h"" ) == 0"		862017	1		==			
ANR	862040	CallExpression	"strcmp ( argv [ 1 ] , ""-h"" )"		862017	0					
ANR	862041	Callee	strcmp		862017	0					
ANR	862042	Identifier	strcmp		862017	0					
ANR	862043	ArgumentList	argv [ 1 ]		862017	1					
ANR	862044	Argument	argv [ 1 ]		862017	0					
ANR	862045	ArrayIndexing	argv [ 1 ]		862017	0					
ANR	862046	Identifier	argv		862017	0					
ANR	862047	PrimaryExpression	1		862017	1					
ANR	862048	Argument	"""-h"""		862017	1					
ANR	862049	PrimaryExpression	"""-h"""		862017	0					
ANR	862050	PrimaryExpression	0		862017	1					
ANR	862051	CompoundStatement		5:61:83:83	862017	1					
ANR	862052	ExpressionStatement	usage ( )	882:2:21121:21128	862017	0	True				
ANR	862053	CallExpression	usage ( )		862017	0					
ANR	862054	Callee	usage		862017	0					
ANR	862055	Identifier	usage		862017	0					
ANR	862056	ArgumentList			862017	1					
ANR	862057	ExpressionStatement	exit ( - 1 )	883:2:21132:21140	862017	1	True				
ANR	862058	CallExpression	exit ( - 1 )		862017	0					
ANR	862059	Callee	exit		862017	0					
ANR	862060	Identifier	exit		862017	0					
ANR	862061	ArgumentList	- 1		862017	1					
ANR	862062	Argument	- 1		862017	0					
ANR	862063	UnaryOperationExpression	- 1		862017	0					
ANR	862064	UnaryOperator	-		862017	0					
ANR	862065	PrimaryExpression	1		862017	1					
ANR	862066	IfStatement	"if ( strcmp ( ""fetch"" , argv [ 1 ] ) == 0 )"		862017	2					
ANR	862067	Condition	"strcmp ( ""fetch"" , argv [ 1 ] ) == 0"	886:5:21151:21179	862017	0	True				
ANR	862068	EqualityExpression	"strcmp ( ""fetch"" , argv [ 1 ] ) == 0"		862017	0		==			
ANR	862069	CallExpression	"strcmp ( ""fetch"" , argv [ 1 ] )"		862017	0					
ANR	862070	Callee	strcmp		862017	0					
ANR	862071	Identifier	strcmp		862017	0					
ANR	862072	ArgumentList	"""fetch"""		862017	1					
ANR	862073	Argument	"""fetch"""		862017	0					
ANR	862074	PrimaryExpression	"""fetch"""		862017	0					
ANR	862075	Argument	argv [ 1 ]		862017	1					
ANR	862076	ArrayIndexing	argv [ 1 ]		862017	0					
ANR	862077	Identifier	argv		862017	0					
ANR	862078	PrimaryExpression	1		862017	1					
ANR	862079	PrimaryExpression	0		862017	1					
ANR	862080	CompoundStatement		10:36:148:148	862017	1					
ANR	862081	ExpressionStatement	"ret_val = chirp_fetch ( argc , argv )"	887:2:21186:21219	862017	0	True				
ANR	862082	AssignmentExpression	"ret_val = chirp_fetch ( argc , argv )"		862017	0		=			
ANR	862083	Identifier	ret_val		862017	0					
ANR	862084	CallExpression	"chirp_fetch ( argc , argv )"		862017	1					
ANR	862085	Callee	chirp_fetch		862017	0					
ANR	862086	Identifier	chirp_fetch		862017	0					
ANR	862087	ArgumentList	argc		862017	1					
ANR	862088	Argument	argc		862017	0					
ANR	862089	Identifier	argc		862017	0					
ANR	862090	Argument	argv		862017	1					
ANR	862091	Identifier	argv		862017	0					
ANR	862092	ElseStatement	else		862017	0					
ANR	862093	IfStatement	"if ( strcmp ( ""put"" , argv [ 1 ] ) == 0 )"		862017	0					
ANR	862094	Condition	"strcmp ( ""put"" , argv [ 1 ] ) == 0"	888:12:21233:21259	862017	0	True				
ANR	862095	EqualityExpression	"strcmp ( ""put"" , argv [ 1 ] ) == 0"		862017	0		==			
ANR	862096	CallExpression	"strcmp ( ""put"" , argv [ 1 ] )"		862017	0					
ANR	862097	Callee	strcmp		862017	0					
ANR	862098	Identifier	strcmp		862017	0					
ANR	862099	ArgumentList	"""put"""		862017	1					
ANR	862100	Argument	"""put"""		862017	0					
ANR	862101	PrimaryExpression	"""put"""		862017	0					
ANR	862102	Argument	argv [ 1 ]		862017	1					
ANR	862103	ArrayIndexing	argv [ 1 ]		862017	0					
ANR	862104	Identifier	argv		862017	0					
ANR	862105	PrimaryExpression	1		862017	1					
ANR	862106	PrimaryExpression	0		862017	1					
ANR	862107	CompoundStatement		12:41:228:228	862017	1					
ANR	862108	ExpressionStatement	"ret_val = chirp_put ( argc , argv )"	889:2:21266:21297	862017	0	True				
ANR	862109	AssignmentExpression	"ret_val = chirp_put ( argc , argv )"		862017	0		=			
ANR	862110	Identifier	ret_val		862017	0					
ANR	862111	CallExpression	"chirp_put ( argc , argv )"		862017	1					
ANR	862112	Callee	chirp_put		862017	0					
ANR	862113	Identifier	chirp_put		862017	0					
ANR	862114	ArgumentList	argc		862017	1					
ANR	862115	Argument	argc		862017	0					
ANR	862116	Identifier	argc		862017	0					
ANR	862117	Argument	argv		862017	1					
ANR	862118	Identifier	argv		862017	0					
ANR	862119	ElseStatement	else		862017	0					
ANR	862120	IfStatement	"if ( strcmp ( ""remove"" , argv [ 1 ] ) == 0 )"		862017	0					
ANR	862121	Condition	"strcmp ( ""remove"" , argv [ 1 ] ) == 0"	890:12:21311:21340	862017	0	True				
ANR	862122	EqualityExpression	"strcmp ( ""remove"" , argv [ 1 ] ) == 0"		862017	0		==			
ANR	862123	CallExpression	"strcmp ( ""remove"" , argv [ 1 ] )"		862017	0					
ANR	862124	Callee	strcmp		862017	0					
ANR	862125	Identifier	strcmp		862017	0					
ANR	862126	ArgumentList	"""remove"""		862017	1					
ANR	862127	Argument	"""remove"""		862017	0					
ANR	862128	PrimaryExpression	"""remove"""		862017	0					
ANR	862129	Argument	argv [ 1 ]		862017	1					
ANR	862130	ArrayIndexing	argv [ 1 ]		862017	0					
ANR	862131	Identifier	argv		862017	0					
ANR	862132	PrimaryExpression	1		862017	1					
ANR	862133	PrimaryExpression	0		862017	1					
ANR	862134	CompoundStatement		14:44:309:309	862017	1					
ANR	862135	ExpressionStatement	"ret_val = chirp_remove ( argc , argv )"	891:2:21347:21381	862017	0	True				
ANR	862136	AssignmentExpression	"ret_val = chirp_remove ( argc , argv )"		862017	0		=			
ANR	862137	Identifier	ret_val		862017	0					
ANR	862138	CallExpression	"chirp_remove ( argc , argv )"		862017	1					
ANR	862139	Callee	chirp_remove		862017	0					
ANR	862140	Identifier	chirp_remove		862017	0					
ANR	862141	ArgumentList	argc		862017	1					
ANR	862142	Argument	argc		862017	0					
ANR	862143	Identifier	argc		862017	0					
ANR	862144	Argument	argv		862017	1					
ANR	862145	Identifier	argv		862017	0					
ANR	862146	ElseStatement	else		862017	0					
ANR	862147	IfStatement	"if ( strcmp ( ""get_job_attr"" , argv [ 1 ] ) == 0 )"		862017	0					
ANR	862148	Condition	"strcmp ( ""get_job_attr"" , argv [ 1 ] ) == 0"	892:12:21395:21430	862017	0	True				
ANR	862149	EqualityExpression	"strcmp ( ""get_job_attr"" , argv [ 1 ] ) == 0"		862017	0		==			
ANR	862150	CallExpression	"strcmp ( ""get_job_attr"" , argv [ 1 ] )"		862017	0					
ANR	862151	Callee	strcmp		862017	0					
ANR	862152	Identifier	strcmp		862017	0					
ANR	862153	ArgumentList	"""get_job_attr"""		862017	1					
ANR	862154	Argument	"""get_job_attr"""		862017	0					
ANR	862155	PrimaryExpression	"""get_job_attr"""		862017	0					
ANR	862156	Argument	argv [ 1 ]		862017	1					
ANR	862157	ArrayIndexing	argv [ 1 ]		862017	0					
ANR	862158	Identifier	argv		862017	0					
ANR	862159	PrimaryExpression	1		862017	1					
ANR	862160	PrimaryExpression	0		862017	1					
ANR	862161	CompoundStatement		16:50:399:399	862017	1					
ANR	862162	ExpressionStatement	"ret_val = chirp_get_job_attr ( argc , argv )"	893:2:21437:21477	862017	0	True				
ANR	862163	AssignmentExpression	"ret_val = chirp_get_job_attr ( argc , argv )"		862017	0		=			
ANR	862164	Identifier	ret_val		862017	0					
ANR	862165	CallExpression	"chirp_get_job_attr ( argc , argv )"		862017	1					
ANR	862166	Callee	chirp_get_job_attr		862017	0					
ANR	862167	Identifier	chirp_get_job_attr		862017	0					
ANR	862168	ArgumentList	argc		862017	1					
ANR	862169	Argument	argc		862017	0					
ANR	862170	Identifier	argc		862017	0					
ANR	862171	Argument	argv		862017	1					
ANR	862172	Identifier	argv		862017	0					
ANR	862173	ElseStatement	else		862017	0					
ANR	862174	IfStatement	"if ( strcmp ( ""set_job_attr"" , argv [ 1 ] ) == 0 )"		862017	0					
ANR	862175	Condition	"strcmp ( ""set_job_attr"" , argv [ 1 ] ) == 0"	894:12:21491:21526	862017	0	True				
ANR	862176	EqualityExpression	"strcmp ( ""set_job_attr"" , argv [ 1 ] ) == 0"		862017	0		==			
ANR	862177	CallExpression	"strcmp ( ""set_job_attr"" , argv [ 1 ] )"		862017	0					
ANR	862178	Callee	strcmp		862017	0					
ANR	862179	Identifier	strcmp		862017	0					
ANR	862180	ArgumentList	"""set_job_attr"""		862017	1					
ANR	862181	Argument	"""set_job_attr"""		862017	0					
ANR	862182	PrimaryExpression	"""set_job_attr"""		862017	0					
ANR	862183	Argument	argv [ 1 ]		862017	1					
ANR	862184	ArrayIndexing	argv [ 1 ]		862017	0					
ANR	862185	Identifier	argv		862017	0					
ANR	862186	PrimaryExpression	1		862017	1					
ANR	862187	PrimaryExpression	0		862017	1					
ANR	862188	CompoundStatement		18:50:495:495	862017	1					
ANR	862189	ExpressionStatement	"ret_val = chirp_set_job_attr ( argc , argv )"	895:2:21533:21573	862017	0	True				
ANR	862190	AssignmentExpression	"ret_val = chirp_set_job_attr ( argc , argv )"		862017	0		=			
ANR	862191	Identifier	ret_val		862017	0					
ANR	862192	CallExpression	"chirp_set_job_attr ( argc , argv )"		862017	1					
ANR	862193	Callee	chirp_set_job_attr		862017	0					
ANR	862194	Identifier	chirp_set_job_attr		862017	0					
ANR	862195	ArgumentList	argc		862017	1					
ANR	862196	Argument	argc		862017	0					
ANR	862197	Identifier	argc		862017	0					
ANR	862198	Argument	argv		862017	1					
ANR	862199	Identifier	argv		862017	0					
ANR	862200	ElseStatement	else		862017	0					
ANR	862201	IfStatement	"if ( strcmp ( ""ulog"" , argv [ 1 ] ) == 0 )"		862017	0					
ANR	862202	Condition	"strcmp ( ""ulog"" , argv [ 1 ] ) == 0"	896:12:21587:21614	862017	0	True				
ANR	862203	EqualityExpression	"strcmp ( ""ulog"" , argv [ 1 ] ) == 0"		862017	0		==			
ANR	862204	CallExpression	"strcmp ( ""ulog"" , argv [ 1 ] )"		862017	0					
ANR	862205	Callee	strcmp		862017	0					
ANR	862206	Identifier	strcmp		862017	0					
ANR	862207	ArgumentList	"""ulog"""		862017	1					
ANR	862208	Argument	"""ulog"""		862017	0					
ANR	862209	PrimaryExpression	"""ulog"""		862017	0					
ANR	862210	Argument	argv [ 1 ]		862017	1					
ANR	862211	ArrayIndexing	argv [ 1 ]		862017	0					
ANR	862212	Identifier	argv		862017	0					
ANR	862213	PrimaryExpression	1		862017	1					
ANR	862214	PrimaryExpression	0		862017	1					
ANR	862215	CompoundStatement		20:42:583:583	862017	1					
ANR	862216	ExpressionStatement	"ret_val = chirp_ulog ( argc , argv )"	897:2:21621:21653	862017	0	True				
ANR	862217	AssignmentExpression	"ret_val = chirp_ulog ( argc , argv )"		862017	0		=			
ANR	862218	Identifier	ret_val		862017	0					
ANR	862219	CallExpression	"chirp_ulog ( argc , argv )"		862017	1					
ANR	862220	Callee	chirp_ulog		862017	0					
ANR	862221	Identifier	chirp_ulog		862017	0					
ANR	862222	ArgumentList	argc		862017	1					
ANR	862223	Argument	argc		862017	0					
ANR	862224	Identifier	argc		862017	0					
ANR	862225	Argument	argv		862017	1					
ANR	862226	Identifier	argv		862017	0					
ANR	862227	ElseStatement	else		862017	0					
ANR	862228	IfStatement	"if ( strcmp ( ""read"" , argv [ 1 ] ) == 0 )"		862017	0					
ANR	862229	Condition	"strcmp ( ""read"" , argv [ 1 ] ) == 0"	898:12:21667:21694	862017	0	True				
ANR	862230	EqualityExpression	"strcmp ( ""read"" , argv [ 1 ] ) == 0"		862017	0		==			
ANR	862231	CallExpression	"strcmp ( ""read"" , argv [ 1 ] )"		862017	0					
ANR	862232	Callee	strcmp		862017	0					
ANR	862233	Identifier	strcmp		862017	0					
ANR	862234	ArgumentList	"""read"""		862017	1					
ANR	862235	Argument	"""read"""		862017	0					
ANR	862236	PrimaryExpression	"""read"""		862017	0					
ANR	862237	Argument	argv [ 1 ]		862017	1					
ANR	862238	ArrayIndexing	argv [ 1 ]		862017	0					
ANR	862239	Identifier	argv		862017	0					
ANR	862240	PrimaryExpression	1		862017	1					
ANR	862241	PrimaryExpression	0		862017	1					
ANR	862242	CompoundStatement		22:42:663:663	862017	1					
ANR	862243	ExpressionStatement	"ret_val = chirp_read ( argc , argv )"	899:2:21701:21733	862017	0	True				
ANR	862244	AssignmentExpression	"ret_val = chirp_read ( argc , argv )"		862017	0		=			
ANR	862245	Identifier	ret_val		862017	0					
ANR	862246	CallExpression	"chirp_read ( argc , argv )"		862017	1					
ANR	862247	Callee	chirp_read		862017	0					
ANR	862248	Identifier	chirp_read		862017	0					
ANR	862249	ArgumentList	argc		862017	1					
ANR	862250	Argument	argc		862017	0					
ANR	862251	Identifier	argc		862017	0					
ANR	862252	Argument	argv		862017	1					
ANR	862253	Identifier	argv		862017	0					
ANR	862254	ElseStatement	else		862017	0					
ANR	862255	IfStatement	"if ( strcmp ( ""write"" , argv [ 1 ] ) == 0 )"		862017	0					
ANR	862256	Condition	"strcmp ( ""write"" , argv [ 1 ] ) == 0"	900:12:21747:21775	862017	0	True				
ANR	862257	EqualityExpression	"strcmp ( ""write"" , argv [ 1 ] ) == 0"		862017	0		==			
ANR	862258	CallExpression	"strcmp ( ""write"" , argv [ 1 ] )"		862017	0					
ANR	862259	Callee	strcmp		862017	0					
ANR	862260	Identifier	strcmp		862017	0					
ANR	862261	ArgumentList	"""write"""		862017	1					
ANR	862262	Argument	"""write"""		862017	0					
ANR	862263	PrimaryExpression	"""write"""		862017	0					
ANR	862264	Argument	argv [ 1 ]		862017	1					
ANR	862265	ArrayIndexing	argv [ 1 ]		862017	0					
ANR	862266	Identifier	argv		862017	0					
ANR	862267	PrimaryExpression	1		862017	1					
ANR	862268	PrimaryExpression	0		862017	1					
ANR	862269	CompoundStatement		24:43:744:744	862017	1					
ANR	862270	ExpressionStatement	"ret_val = chirp_write ( argc , argv )"	901:2:21782:21815	862017	0	True				
ANR	862271	AssignmentExpression	"ret_val = chirp_write ( argc , argv )"		862017	0		=			
ANR	862272	Identifier	ret_val		862017	0					
ANR	862273	CallExpression	"chirp_write ( argc , argv )"		862017	1					
ANR	862274	Callee	chirp_write		862017	0					
ANR	862275	Identifier	chirp_write		862017	0					
ANR	862276	ArgumentList	argc		862017	1					
ANR	862277	Argument	argc		862017	0					
ANR	862278	Identifier	argc		862017	0					
ANR	862279	Argument	argv		862017	1					
ANR	862280	Identifier	argv		862017	0					
ANR	862281	ElseStatement	else		862017	0					
ANR	862282	IfStatement	"if ( strcmp ( ""rmdir"" , argv [ 1 ] ) == 0 )"		862017	0					
ANR	862283	Condition	"strcmp ( ""rmdir"" , argv [ 1 ] ) == 0"	902:12:21829:21857	862017	0	True				
ANR	862284	EqualityExpression	"strcmp ( ""rmdir"" , argv [ 1 ] ) == 0"		862017	0		==			
ANR	862285	CallExpression	"strcmp ( ""rmdir"" , argv [ 1 ] )"		862017	0					
ANR	862286	Callee	strcmp		862017	0					
ANR	862287	Identifier	strcmp		862017	0					
ANR	862288	ArgumentList	"""rmdir"""		862017	1					
ANR	862289	Argument	"""rmdir"""		862017	0					
ANR	862290	PrimaryExpression	"""rmdir"""		862017	0					
ANR	862291	Argument	argv [ 1 ]		862017	1					
ANR	862292	ArrayIndexing	argv [ 1 ]		862017	0					
ANR	862293	Identifier	argv		862017	0					
ANR	862294	PrimaryExpression	1		862017	1					
ANR	862295	PrimaryExpression	0		862017	1					
ANR	862296	CompoundStatement		26:43:826:826	862017	1					
ANR	862297	ExpressionStatement	"ret_val = chirp_rmdir ( argc , argv )"	903:2:21864:21897	862017	0	True				
ANR	862298	AssignmentExpression	"ret_val = chirp_rmdir ( argc , argv )"		862017	0		=			
ANR	862299	Identifier	ret_val		862017	0					
ANR	862300	CallExpression	"chirp_rmdir ( argc , argv )"		862017	1					
ANR	862301	Callee	chirp_rmdir		862017	0					
ANR	862302	Identifier	chirp_rmdir		862017	0					
ANR	862303	ArgumentList	argc		862017	1					
ANR	862304	Argument	argc		862017	0					
ANR	862305	Identifier	argc		862017	0					
ANR	862306	Argument	argv		862017	1					
ANR	862307	Identifier	argv		862017	0					
ANR	862308	ElseStatement	else		862017	0					
ANR	862309	IfStatement	"if ( strcmp ( ""getdir"" , argv [ 1 ] ) == 0 )"		862017	0					
ANR	862310	Condition	"strcmp ( ""getdir"" , argv [ 1 ] ) == 0"	904:12:21912:21941	862017	0	True				
ANR	862311	EqualityExpression	"strcmp ( ""getdir"" , argv [ 1 ] ) == 0"		862017	0		==			
ANR	862312	CallExpression	"strcmp ( ""getdir"" , argv [ 1 ] )"		862017	0					
ANR	862313	Callee	strcmp		862017	0					
ANR	862314	Identifier	strcmp		862017	0					
ANR	862315	ArgumentList	"""getdir"""		862017	1					
ANR	862316	Argument	"""getdir"""		862017	0					
ANR	862317	PrimaryExpression	"""getdir"""		862017	0					
ANR	862318	Argument	argv [ 1 ]		862017	1					
ANR	862319	ArrayIndexing	argv [ 1 ]		862017	0					
ANR	862320	Identifier	argv		862017	0					
ANR	862321	PrimaryExpression	1		862017	1					
ANR	862322	PrimaryExpression	0		862017	1					
ANR	862323	CompoundStatement		28:44:910:910	862017	1					
ANR	862324	ExpressionStatement	"ret_val = chirp_getdir ( argc , argv )"	905:2:21948:21982	862017	0	True				
ANR	862325	AssignmentExpression	"ret_val = chirp_getdir ( argc , argv )"		862017	0		=			
ANR	862326	Identifier	ret_val		862017	0					
ANR	862327	CallExpression	"chirp_getdir ( argc , argv )"		862017	1					
ANR	862328	Callee	chirp_getdir		862017	0					
ANR	862329	Identifier	chirp_getdir		862017	0					
ANR	862330	ArgumentList	argc		862017	1					
ANR	862331	Argument	argc		862017	0					
ANR	862332	Identifier	argc		862017	0					
ANR	862333	Argument	argv		862017	1					
ANR	862334	Identifier	argv		862017	0					
ANR	862335	ElseStatement	else		862017	0					
ANR	862336	IfStatement	"if ( strcmp ( ""whoami"" , argv [ 1 ] ) == 0 )"		862017	0					
ANR	862337	Condition	"strcmp ( ""whoami"" , argv [ 1 ] ) == 0"	906:12:21996:22025	862017	0	True				
ANR	862338	EqualityExpression	"strcmp ( ""whoami"" , argv [ 1 ] ) == 0"		862017	0		==			
ANR	862339	CallExpression	"strcmp ( ""whoami"" , argv [ 1 ] )"		862017	0					
ANR	862340	Callee	strcmp		862017	0					
ANR	862341	Identifier	strcmp		862017	0					
ANR	862342	ArgumentList	"""whoami"""		862017	1					
ANR	862343	Argument	"""whoami"""		862017	0					
ANR	862344	PrimaryExpression	"""whoami"""		862017	0					
ANR	862345	Argument	argv [ 1 ]		862017	1					
ANR	862346	ArrayIndexing	argv [ 1 ]		862017	0					
ANR	862347	Identifier	argv		862017	0					
ANR	862348	PrimaryExpression	1		862017	1					
ANR	862349	PrimaryExpression	0		862017	1					
ANR	862350	CompoundStatement		30:44:994:994	862017	1					
ANR	862351	ExpressionStatement	ret_val = chirp_whoami ( )	907:2:22032:22056	862017	0	True				
ANR	862352	AssignmentExpression	ret_val = chirp_whoami ( )		862017	0		=			
ANR	862353	Identifier	ret_val		862017	0					
ANR	862354	CallExpression	chirp_whoami ( )		862017	1					
ANR	862355	Callee	chirp_whoami		862017	0					
ANR	862356	Identifier	chirp_whoami		862017	0					
ANR	862357	ArgumentList			862017	1					
ANR	862358	ElseStatement	else		862017	0					
ANR	862359	IfStatement	"if ( strcmp ( ""whoareyou"" , argv [ 1 ] ) == 0 )"		862017	0					
ANR	862360	Condition	"strcmp ( ""whoareyou"" , argv [ 1 ] ) == 0"	908:12:22070:22102	862017	0	True				
ANR	862361	EqualityExpression	"strcmp ( ""whoareyou"" , argv [ 1 ] ) == 0"		862017	0		==			
ANR	862362	CallExpression	"strcmp ( ""whoareyou"" , argv [ 1 ] )"		862017	0					
ANR	862363	Callee	strcmp		862017	0					
ANR	862364	Identifier	strcmp		862017	0					
ANR	862365	ArgumentList	"""whoareyou"""		862017	1					
ANR	862366	Argument	"""whoareyou"""		862017	0					
ANR	862367	PrimaryExpression	"""whoareyou"""		862017	0					
ANR	862368	Argument	argv [ 1 ]		862017	1					
ANR	862369	ArrayIndexing	argv [ 1 ]		862017	0					
ANR	862370	Identifier	argv		862017	0					
ANR	862371	PrimaryExpression	1		862017	1					
ANR	862372	PrimaryExpression	0		862017	1					
ANR	862373	CompoundStatement		32:47:1071:1071	862017	1					
ANR	862374	ExpressionStatement	"ret_val = chirp_whoareyou ( argc , argv )"	909:2:22109:22146	862017	0	True				
ANR	862375	AssignmentExpression	"ret_val = chirp_whoareyou ( argc , argv )"		862017	0		=			
ANR	862376	Identifier	ret_val		862017	0					
ANR	862377	CallExpression	"chirp_whoareyou ( argc , argv )"		862017	1					
ANR	862378	Callee	chirp_whoareyou		862017	0					
ANR	862379	Identifier	chirp_whoareyou		862017	0					
ANR	862380	ArgumentList	argc		862017	1					
ANR	862381	Argument	argc		862017	0					
ANR	862382	Identifier	argc		862017	0					
ANR	862383	Argument	argv		862017	1					
ANR	862384	Identifier	argv		862017	0					
ANR	862385	ElseStatement	else		862017	0					
ANR	862386	IfStatement	"if ( strcmp ( ""link"" , argv [ 1 ] ) == 0 )"		862017	0					
ANR	862387	Condition	"strcmp ( ""link"" , argv [ 1 ] ) == 0"	910:12:22160:22187	862017	0	True				
ANR	862388	EqualityExpression	"strcmp ( ""link"" , argv [ 1 ] ) == 0"		862017	0		==			
ANR	862389	CallExpression	"strcmp ( ""link"" , argv [ 1 ] )"		862017	0					
ANR	862390	Callee	strcmp		862017	0					
ANR	862391	Identifier	strcmp		862017	0					
ANR	862392	ArgumentList	"""link"""		862017	1					
ANR	862393	Argument	"""link"""		862017	0					
ANR	862394	PrimaryExpression	"""link"""		862017	0					
ANR	862395	Argument	argv [ 1 ]		862017	1					
ANR	862396	ArrayIndexing	argv [ 1 ]		862017	0					
ANR	862397	Identifier	argv		862017	0					
ANR	862398	PrimaryExpression	1		862017	1					
ANR	862399	PrimaryExpression	0		862017	1					
ANR	862400	CompoundStatement		34:42:1156:1156	862017	1					
ANR	862401	ExpressionStatement	"ret_val = chirp_link ( argc , argv )"	911:2:22194:22226	862017	0	True				
ANR	862402	AssignmentExpression	"ret_val = chirp_link ( argc , argv )"		862017	0		=			
ANR	862403	Identifier	ret_val		862017	0					
ANR	862404	CallExpression	"chirp_link ( argc , argv )"		862017	1					
ANR	862405	Callee	chirp_link		862017	0					
ANR	862406	Identifier	chirp_link		862017	0					
ANR	862407	ArgumentList	argc		862017	1					
ANR	862408	Argument	argc		862017	0					
ANR	862409	Identifier	argc		862017	0					
ANR	862410	Argument	argv		862017	1					
ANR	862411	Identifier	argv		862017	0					
ANR	862412	ElseStatement	else		862017	0					
ANR	862413	IfStatement	"if ( strcmp ( ""readlink"" , argv [ 1 ] ) == 0 )"		862017	0					
ANR	862414	Condition	"strcmp ( ""readlink"" , argv [ 1 ] ) == 0"	912:12:22240:22271	862017	0	True				
ANR	862415	EqualityExpression	"strcmp ( ""readlink"" , argv [ 1 ] ) == 0"		862017	0		==			
ANR	862416	CallExpression	"strcmp ( ""readlink"" , argv [ 1 ] )"		862017	0					
ANR	862417	Callee	strcmp		862017	0					
ANR	862418	Identifier	strcmp		862017	0					
ANR	862419	ArgumentList	"""readlink"""		862017	1					
ANR	862420	Argument	"""readlink"""		862017	0					
ANR	862421	PrimaryExpression	"""readlink"""		862017	0					
ANR	862422	Argument	argv [ 1 ]		862017	1					
ANR	862423	ArrayIndexing	argv [ 1 ]		862017	0					
ANR	862424	Identifier	argv		862017	0					
ANR	862425	PrimaryExpression	1		862017	1					
ANR	862426	PrimaryExpression	0		862017	1					
ANR	862427	CompoundStatement		36:46:1240:1240	862017	1					
ANR	862428	ExpressionStatement	"ret_val = chirp_readlink ( argc , argv )"	913:2:22278:22314	862017	0	True				
ANR	862429	AssignmentExpression	"ret_val = chirp_readlink ( argc , argv )"		862017	0		=			
ANR	862430	Identifier	ret_val		862017	0					
ANR	862431	CallExpression	"chirp_readlink ( argc , argv )"		862017	1					
ANR	862432	Callee	chirp_readlink		862017	0					
ANR	862433	Identifier	chirp_readlink		862017	0					
ANR	862434	ArgumentList	argc		862017	1					
ANR	862435	Argument	argc		862017	0					
ANR	862436	Identifier	argc		862017	0					
ANR	862437	Argument	argv		862017	1					
ANR	862438	Identifier	argv		862017	0					
ANR	862439	ElseStatement	else		862017	0					
ANR	862440	IfStatement	"if ( strcmp ( ""stat"" , argv [ 1 ] ) == 0 || strcmp ( ""lstat"" , argv [ 1 ] ) == 0 )"		862017	0					
ANR	862441	Condition	"strcmp ( ""stat"" , argv [ 1 ] ) == 0 || strcmp ( ""lstat"" , argv [ 1 ] ) == 0"	914:12:22328:22388	862017	0	True				
ANR	862442	OrExpression	"strcmp ( ""stat"" , argv [ 1 ] ) == 0 || strcmp ( ""lstat"" , argv [ 1 ] ) == 0"		862017	0		||			
ANR	862443	EqualityExpression	"strcmp ( ""stat"" , argv [ 1 ] ) == 0"		862017	0		==			
ANR	862444	CallExpression	"strcmp ( ""stat"" , argv [ 1 ] )"		862017	0					
ANR	862445	Callee	strcmp		862017	0					
ANR	862446	Identifier	strcmp		862017	0					
ANR	862447	ArgumentList	"""stat"""		862017	1					
ANR	862448	Argument	"""stat"""		862017	0					
ANR	862449	PrimaryExpression	"""stat"""		862017	0					
ANR	862450	Argument	argv [ 1 ]		862017	1					
ANR	862451	ArrayIndexing	argv [ 1 ]		862017	0					
ANR	862452	Identifier	argv		862017	0					
ANR	862453	PrimaryExpression	1		862017	1					
ANR	862454	PrimaryExpression	0		862017	1					
ANR	862455	EqualityExpression	"strcmp ( ""lstat"" , argv [ 1 ] ) == 0"		862017	1		==			
ANR	862456	CallExpression	"strcmp ( ""lstat"" , argv [ 1 ] )"		862017	0					
ANR	862457	Callee	strcmp		862017	0					
ANR	862458	Identifier	strcmp		862017	0					
ANR	862459	ArgumentList	"""lstat"""		862017	1					
ANR	862460	Argument	"""lstat"""		862017	0					
ANR	862461	PrimaryExpression	"""lstat"""		862017	0					
ANR	862462	Argument	argv [ 1 ]		862017	1					
ANR	862463	ArrayIndexing	argv [ 1 ]		862017	0					
ANR	862464	Identifier	argv		862017	0					
ANR	862465	PrimaryExpression	1		862017	1					
ANR	862466	PrimaryExpression	0		862017	1					
ANR	862467	CompoundStatement		38:75:1357:1357	862017	1					
ANR	862468	ExpressionStatement	"ret_val = chirp_do_stat ( argc , argv )"	915:2:22395:22430	862017	0	True				
ANR	862469	AssignmentExpression	"ret_val = chirp_do_stat ( argc , argv )"		862017	0		=			
ANR	862470	Identifier	ret_val		862017	0					
ANR	862471	CallExpression	"chirp_do_stat ( argc , argv )"		862017	1					
ANR	862472	Callee	chirp_do_stat		862017	0					
ANR	862473	Identifier	chirp_do_stat		862017	0					
ANR	862474	ArgumentList	argc		862017	1					
ANR	862475	Argument	argc		862017	0					
ANR	862476	Identifier	argc		862017	0					
ANR	862477	Argument	argv		862017	1					
ANR	862478	Identifier	argv		862017	0					
ANR	862479	ElseStatement	else		862017	0					
ANR	862480	IfStatement	"if ( strcmp ( ""statfs"" , argv [ 1 ] ) == 0 )"		862017	0					
ANR	862481	Condition	"strcmp ( ""statfs"" , argv [ 1 ] ) == 0"	916:12:22444:22473	862017	0	True				
ANR	862482	EqualityExpression	"strcmp ( ""statfs"" , argv [ 1 ] ) == 0"		862017	0		==			
ANR	862483	CallExpression	"strcmp ( ""statfs"" , argv [ 1 ] )"		862017	0					
ANR	862484	Callee	strcmp		862017	0					
ANR	862485	Identifier	strcmp		862017	0					
ANR	862486	ArgumentList	"""statfs"""		862017	1					
ANR	862487	Argument	"""statfs"""		862017	0					
ANR	862488	PrimaryExpression	"""statfs"""		862017	0					
ANR	862489	Argument	argv [ 1 ]		862017	1					
ANR	862490	ArrayIndexing	argv [ 1 ]		862017	0					
ANR	862491	Identifier	argv		862017	0					
ANR	862492	PrimaryExpression	1		862017	1					
ANR	862493	PrimaryExpression	0		862017	1					
ANR	862494	CompoundStatement		40:44:1442:1442	862017	1					
ANR	862495	ExpressionStatement	"ret_val = chirp_do_statfs ( argc , argv )"	917:2:22480:22517	862017	0	True				
ANR	862496	AssignmentExpression	"ret_val = chirp_do_statfs ( argc , argv )"		862017	0		=			
ANR	862497	Identifier	ret_val		862017	0					
ANR	862498	CallExpression	"chirp_do_statfs ( argc , argv )"		862017	1					
ANR	862499	Callee	chirp_do_statfs		862017	0					
ANR	862500	Identifier	chirp_do_statfs		862017	0					
ANR	862501	ArgumentList	argc		862017	1					
ANR	862502	Argument	argc		862017	0					
ANR	862503	Identifier	argc		862017	0					
ANR	862504	Argument	argv		862017	1					
ANR	862505	Identifier	argv		862017	0					
ANR	862506	ElseStatement	else		862017	0					
ANR	862507	IfStatement	"if ( strcmp ( ""access"" , argv [ 1 ] ) == 0 )"		862017	0					
ANR	862508	Condition	"strcmp ( ""access"" , argv [ 1 ] ) == 0"	918:12:22531:22560	862017	0	True				
ANR	862509	EqualityExpression	"strcmp ( ""access"" , argv [ 1 ] ) == 0"		862017	0		==			
ANR	862510	CallExpression	"strcmp ( ""access"" , argv [ 1 ] )"		862017	0					
ANR	862511	Callee	strcmp		862017	0					
ANR	862512	Identifier	strcmp		862017	0					
ANR	862513	ArgumentList	"""access"""		862017	1					
ANR	862514	Argument	"""access"""		862017	0					
ANR	862515	PrimaryExpression	"""access"""		862017	0					
ANR	862516	Argument	argv [ 1 ]		862017	1					
ANR	862517	ArrayIndexing	argv [ 1 ]		862017	0					
ANR	862518	Identifier	argv		862017	0					
ANR	862519	PrimaryExpression	1		862017	1					
ANR	862520	PrimaryExpression	0		862017	1					
ANR	862521	CompoundStatement		42:44:1529:1529	862017	1					
ANR	862522	ExpressionStatement	"ret_val = chirp_access ( argc , argv )"	919:2:22567:22601	862017	0	True				
ANR	862523	AssignmentExpression	"ret_val = chirp_access ( argc , argv )"		862017	0		=			
ANR	862524	Identifier	ret_val		862017	0					
ANR	862525	CallExpression	"chirp_access ( argc , argv )"		862017	1					
ANR	862526	Callee	chirp_access		862017	0					
ANR	862527	Identifier	chirp_access		862017	0					
ANR	862528	ArgumentList	argc		862017	1					
ANR	862529	Argument	argc		862017	0					
ANR	862530	Identifier	argc		862017	0					
ANR	862531	Argument	argv		862017	1					
ANR	862532	Identifier	argv		862017	0					
ANR	862533	ElseStatement	else		862017	0					
ANR	862534	IfStatement	"if ( strcmp ( ""chmod"" , argv [ 1 ] ) == 0 )"		862017	0					
ANR	862535	Condition	"strcmp ( ""chmod"" , argv [ 1 ] ) == 0"	920:12:22615:22643	862017	0	True				
ANR	862536	EqualityExpression	"strcmp ( ""chmod"" , argv [ 1 ] ) == 0"		862017	0		==			
ANR	862537	CallExpression	"strcmp ( ""chmod"" , argv [ 1 ] )"		862017	0					
ANR	862538	Callee	strcmp		862017	0					
ANR	862539	Identifier	strcmp		862017	0					
ANR	862540	ArgumentList	"""chmod"""		862017	1					
ANR	862541	Argument	"""chmod"""		862017	0					
ANR	862542	PrimaryExpression	"""chmod"""		862017	0					
ANR	862543	Argument	argv [ 1 ]		862017	1					
ANR	862544	ArrayIndexing	argv [ 1 ]		862017	0					
ANR	862545	Identifier	argv		862017	0					
ANR	862546	PrimaryExpression	1		862017	1					
ANR	862547	PrimaryExpression	0		862017	1					
ANR	862548	CompoundStatement		44:43:1612:1612	862017	1					
ANR	862549	ExpressionStatement	"ret_val = chirp_chmod ( argc , argv )"	921:2:22650:22683	862017	0	True				
ANR	862550	AssignmentExpression	"ret_val = chirp_chmod ( argc , argv )"		862017	0		=			
ANR	862551	Identifier	ret_val		862017	0					
ANR	862552	CallExpression	"chirp_chmod ( argc , argv )"		862017	1					
ANR	862553	Callee	chirp_chmod		862017	0					
ANR	862554	Identifier	chirp_chmod		862017	0					
ANR	862555	ArgumentList	argc		862017	1					
ANR	862556	Argument	argc		862017	0					
ANR	862557	Identifier	argc		862017	0					
ANR	862558	Argument	argv		862017	1					
ANR	862559	Identifier	argv		862017	0					
ANR	862560	ElseStatement	else		862017	0					
ANR	862561	IfStatement	"if ( strcmp ( ""chown"" , argv [ 1 ] ) == 0 || strcmp ( ""lchown"" , argv [ 1 ] ) == 0 )"		862017	0					
ANR	862562	Condition	"strcmp ( ""chown"" , argv [ 1 ] ) == 0 || strcmp ( ""lchown"" , argv [ 1 ] ) == 0"	922:12:22697:22759	862017	0	True				
ANR	862563	OrExpression	"strcmp ( ""chown"" , argv [ 1 ] ) == 0 || strcmp ( ""lchown"" , argv [ 1 ] ) == 0"		862017	0		||			
ANR	862564	EqualityExpression	"strcmp ( ""chown"" , argv [ 1 ] ) == 0"		862017	0		==			
ANR	862565	CallExpression	"strcmp ( ""chown"" , argv [ 1 ] )"		862017	0					
ANR	862566	Callee	strcmp		862017	0					
ANR	862567	Identifier	strcmp		862017	0					
ANR	862568	ArgumentList	"""chown"""		862017	1					
ANR	862569	Argument	"""chown"""		862017	0					
ANR	862570	PrimaryExpression	"""chown"""		862017	0					
ANR	862571	Argument	argv [ 1 ]		862017	1					
ANR	862572	ArrayIndexing	argv [ 1 ]		862017	0					
ANR	862573	Identifier	argv		862017	0					
ANR	862574	PrimaryExpression	1		862017	1					
ANR	862575	PrimaryExpression	0		862017	1					
ANR	862576	EqualityExpression	"strcmp ( ""lchown"" , argv [ 1 ] ) == 0"		862017	1		==			
ANR	862577	CallExpression	"strcmp ( ""lchown"" , argv [ 1 ] )"		862017	0					
ANR	862578	Callee	strcmp		862017	0					
ANR	862579	Identifier	strcmp		862017	0					
ANR	862580	ArgumentList	"""lchown"""		862017	1					
ANR	862581	Argument	"""lchown"""		862017	0					
ANR	862582	PrimaryExpression	"""lchown"""		862017	0					
ANR	862583	Argument	argv [ 1 ]		862017	1					
ANR	862584	ArrayIndexing	argv [ 1 ]		862017	0					
ANR	862585	Identifier	argv		862017	0					
ANR	862586	PrimaryExpression	1		862017	1					
ANR	862587	PrimaryExpression	0		862017	1					
ANR	862588	CompoundStatement		46:76:1727:1727	862017	1					
ANR	862589	ExpressionStatement	"ret_val = chirp_chown ( argc , argv )"	923:2:22765:22798	862017	0	True				
ANR	862590	AssignmentExpression	"ret_val = chirp_chown ( argc , argv )"		862017	0		=			
ANR	862591	Identifier	ret_val		862017	0					
ANR	862592	CallExpression	"chirp_chown ( argc , argv )"		862017	1					
ANR	862593	Callee	chirp_chown		862017	0					
ANR	862594	Identifier	chirp_chown		862017	0					
ANR	862595	ArgumentList	argc		862017	1					
ANR	862596	Argument	argc		862017	0					
ANR	862597	Identifier	argc		862017	0					
ANR	862598	Argument	argv		862017	1					
ANR	862599	Identifier	argv		862017	0					
ANR	862600	ElseStatement	else		862017	0					
ANR	862601	IfStatement	"if ( strcmp ( ""truncate"" , argv [ 1 ] ) == 0 )"		862017	0					
ANR	862602	Condition	"strcmp ( ""truncate"" , argv [ 1 ] ) == 0"	924:12:22812:22843	862017	0	True				
ANR	862603	EqualityExpression	"strcmp ( ""truncate"" , argv [ 1 ] ) == 0"		862017	0		==			
ANR	862604	CallExpression	"strcmp ( ""truncate"" , argv [ 1 ] )"		862017	0					
ANR	862605	Callee	strcmp		862017	0					
ANR	862606	Identifier	strcmp		862017	0					
ANR	862607	ArgumentList	"""truncate"""		862017	1					
ANR	862608	Argument	"""truncate"""		862017	0					
ANR	862609	PrimaryExpression	"""truncate"""		862017	0					
ANR	862610	Argument	argv [ 1 ]		862017	1					
ANR	862611	ArrayIndexing	argv [ 1 ]		862017	0					
ANR	862612	Identifier	argv		862017	0					
ANR	862613	PrimaryExpression	1		862017	1					
ANR	862614	PrimaryExpression	0		862017	1					
ANR	862615	CompoundStatement		48:46:1812:1812	862017	1					
ANR	862616	ExpressionStatement	"ret_val = chirp_truncate ( argc , argv )"	925:2:22850:22886	862017	0	True				
ANR	862617	AssignmentExpression	"ret_val = chirp_truncate ( argc , argv )"		862017	0		=			
ANR	862618	Identifier	ret_val		862017	0					
ANR	862619	CallExpression	"chirp_truncate ( argc , argv )"		862017	1					
ANR	862620	Callee	chirp_truncate		862017	0					
ANR	862621	Identifier	chirp_truncate		862017	0					
ANR	862622	ArgumentList	argc		862017	1					
ANR	862623	Argument	argc		862017	0					
ANR	862624	Identifier	argc		862017	0					
ANR	862625	Argument	argv		862017	1					
ANR	862626	Identifier	argv		862017	0					
ANR	862627	ElseStatement	else		862017	0					
ANR	862628	IfStatement	"if ( strcmp ( ""utime"" , argv [ 1 ] ) == 0 )"		862017	0					
ANR	862629	Condition	"strcmp ( ""utime"" , argv [ 1 ] ) == 0"	926:12:22900:22928	862017	0	True				
ANR	862630	EqualityExpression	"strcmp ( ""utime"" , argv [ 1 ] ) == 0"		862017	0		==			
ANR	862631	CallExpression	"strcmp ( ""utime"" , argv [ 1 ] )"		862017	0					
ANR	862632	Callee	strcmp		862017	0					
ANR	862633	Identifier	strcmp		862017	0					
ANR	862634	ArgumentList	"""utime"""		862017	1					
ANR	862635	Argument	"""utime"""		862017	0					
ANR	862636	PrimaryExpression	"""utime"""		862017	0					
ANR	862637	Argument	argv [ 1 ]		862017	1					
ANR	862638	ArrayIndexing	argv [ 1 ]		862017	0					
ANR	862639	Identifier	argv		862017	0					
ANR	862640	PrimaryExpression	1		862017	1					
ANR	862641	PrimaryExpression	0		862017	1					
ANR	862642	CompoundStatement		50:43:1897:1897	862017	1					
ANR	862643	ExpressionStatement	"ret_val = chirp_utime ( argc , argv )"	927:2:22935:22968	862017	0	True				
ANR	862644	AssignmentExpression	"ret_val = chirp_utime ( argc , argv )"		862017	0		=			
ANR	862645	Identifier	ret_val		862017	0					
ANR	862646	CallExpression	"chirp_utime ( argc , argv )"		862017	1					
ANR	862647	Callee	chirp_utime		862017	0					
ANR	862648	Identifier	chirp_utime		862017	0					
ANR	862649	ArgumentList	argc		862017	1					
ANR	862650	Argument	argc		862017	0					
ANR	862651	Identifier	argc		862017	0					
ANR	862652	Argument	argv		862017	1					
ANR	862653	Identifier	argv		862017	0					
ANR	862654	ElseStatement	else		862017	0					
ANR	862655	CompoundStatement		52:8:1944:1944	862017	0					
ANR	862656	ExpressionStatement	"printf ( ""Unknown command %s\\n"" , argv [ 1 ] )"	929:2:22982:23021	862017	0	True				
ANR	862657	CallExpression	"printf ( ""Unknown command %s\\n"" , argv [ 1 ] )"		862017	0					
ANR	862658	Callee	printf		862017	0					
ANR	862659	Identifier	printf		862017	0					
ANR	862660	ArgumentList	"""Unknown command %s\\n"""		862017	1					
ANR	862661	Argument	"""Unknown command %s\\n"""		862017	0					
ANR	862662	PrimaryExpression	"""Unknown command %s\\n"""		862017	0					
ANR	862663	Argument	argv [ 1 ]		862017	1					
ANR	862664	ArrayIndexing	argv [ 1 ]		862017	0					
ANR	862665	Identifier	argv		862017	0					
ANR	862666	PrimaryExpression	1		862017	1					
ANR	862667	ExpressionStatement	usage ( )	930:2:23025:23032	862017	1	True				
ANR	862668	CallExpression	usage ( )		862017	0					
ANR	862669	Callee	usage		862017	0					
ANR	862670	Identifier	usage		862017	0					
ANR	862671	ArgumentList			862017	1					
ANR	862672	ExpressionStatement	exit ( - 1 )	931:2:23036:23044	862017	2	True				
ANR	862673	CallExpression	exit ( - 1 )		862017	0					
ANR	862674	Callee	exit		862017	0					
ANR	862675	Identifier	exit		862017	0					
ANR	862676	ArgumentList	- 1		862017	1					
ANR	862677	Argument	- 1		862017	0					
ANR	862678	UnaryOperationExpression	- 1		862017	0					
ANR	862679	UnaryOperator	-		862017	0					
ANR	862680	PrimaryExpression	1		862017	1					
ANR	862681	IfStatement	if ( ret_val < 0 && errno != 0 )		862017	3					
ANR	862682	Condition	ret_val < 0 && errno != 0	934:4:23054:23078	862017	0	True				
ANR	862683	AndExpression	ret_val < 0 && errno != 0		862017	0		&&			
ANR	862684	RelationalExpression	ret_val < 0		862017	0		<			
ANR	862685	Identifier	ret_val		862017	0					
ANR	862686	PrimaryExpression	0		862017	1					
ANR	862687	EqualityExpression	errno != 0		862017	1		!=			
ANR	862688	Identifier	errno		862017	0					
ANR	862689	PrimaryExpression	0		862017	1					
ANR	862690	CompoundStatement		58:31:2047:2047	862017	1					
ANR	862691	ExpressionStatement	"printf ( ""\\tError: %d (%s)\\n"" , errno , strerror ( errno ) )"	935:2:23085:23137	862017	0	True				
ANR	862692	CallExpression	"printf ( ""\\tError: %d (%s)\\n"" , errno , strerror ( errno ) )"		862017	0					
ANR	862693	Callee	printf		862017	0					
ANR	862694	Identifier	printf		862017	0					
ANR	862695	ArgumentList	"""\\tError: %d (%s)\\n"""		862017	1					
ANR	862696	Argument	"""\\tError: %d (%s)\\n"""		862017	0					
ANR	862697	PrimaryExpression	"""\\tError: %d (%s)\\n"""		862017	0					
ANR	862698	Argument	errno		862017	1					
ANR	862699	Identifier	errno		862017	0					
ANR	862700	Argument	strerror ( errno )		862017	2					
ANR	862701	CallExpression	strerror ( errno )		862017	0					
ANR	862702	Callee	strerror		862017	0					
ANR	862703	Identifier	strerror		862017	0					
ANR	862704	ArgumentList	errno		862017	1					
ANR	862705	Argument	errno		862017	0					
ANR	862706	Identifier	errno		862017	0					
ANR	862707	ReturnStatement	return ret_val ;	937:1:23143:23157	862017	4	True				
ANR	862708	Identifier	ret_val		862017	0					
ANR	862709	ExpressionStatement	exit ( - 1 )	938:1:23160:23168	862017	5	True				
ANR	862710	CallExpression	exit ( - 1 )		862017	0					
ANR	862711	Callee	exit		862017	0					
ANR	862712	Identifier	exit		862017	0					
ANR	862713	ArgumentList	- 1		862017	1					
ANR	862714	Argument	- 1		862017	0					
ANR	862715	UnaryOperationExpression	- 1		862017	0					
ANR	862716	UnaryOperator	-		862017	0					
ANR	862717	PrimaryExpression	1		862017	1					
ANR	862718	ReturnType	int		862017	1					
ANR	862719	Identifier	main		862017	2					
ANR	862720	ParameterList	"int argc , char * * argv"		862017	3					
ANR	862721	Parameter	int argc	877:5:21010:21017	862017	0	True				
ANR	862722	ParameterType	int		862017	0					
ANR	862723	Identifier	argc		862017	1					
ANR	862724	Parameter	char * * argv	877:15:21020:21030	862017	1	True				
ANR	862725	ParameterType	char * *		862017	0					
ANR	862726	Identifier	argv		862017	1					
ANR	862727	CFGEntryNode	ENTRY		862017		True				
ANR	862728	CFGExitNode	EXIT		862017		True				
ANR	862729	Symbol	chirp_do_statfs		862017						
ANR	862730	Symbol	chirp_getdir		862017						
ANR	862731	Symbol	chirp_get_job_attr		862017						
ANR	862732	Symbol	chirp_ulog		862017						
ANR	862733	Symbol	chirp_do_stat		862017						
ANR	862734	Symbol	* argv		862017						
ANR	862735	Symbol	argv		862017						
ANR	862736	Symbol	chirp_put		862017						
ANR	862737	Symbol	chirp_truncate		862017						
ANR	862738	Symbol	chirp_link		862017						
ANR	862739	Symbol	chirp_whoami		862017						
ANR	862740	Symbol	chirp_whoareyou		862017						
ANR	862741	Symbol	chirp_fetch		862017						
ANR	862742	Symbol	chirp_readlink		862017						
ANR	862743	Symbol	argc		862017						
ANR	862744	Symbol	strcmp		862017						
ANR	862745	Symbol	errno		862017						
ANR	862746	Symbol	chirp_set_job_attr		862017						
ANR	862747	Symbol	ret_val		862017						
ANR	862748	Symbol	chirp_access		862017						
ANR	862749	Symbol	strerror		862017						
ANR	862750	Symbol	chirp_remove		862017						
ANR	862751	Symbol	chirp_write		862017						
ANR	862752	Symbol	chirp_read		862017						
ANR	862753	Symbol	chirp_chmod		862017						
ANR	862754	Symbol	chirp_rmdir		862017						
ANR	862755	Symbol	chirp_chown		862017						
ANR	862756	Symbol	chirp_utime		862017						
