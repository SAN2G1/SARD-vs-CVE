command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1127463	File	data/converged/CVE-2011-4930_htcondor/dagman_commands.cpp								
ANR	1127464	Function	PauseDag	28:0:952:1407							
ANR	1127465	FunctionDef	PauseDag (Dagman & dm)		1127464	0					
ANR	1127466	CompoundStatement		30:0:978:1407	1127464	0					
ANR	1127467	IfStatement	if ( dm . paused == true )		1127464	0					
ANR	1127468	Condition	dm . paused == true	31:5:985:1001	1127464	0	True				
ANR	1127469	EqualityExpression	dm . paused == true		1127464	0		==			
ANR	1127470	MemberAccess	dm . paused		1127464	0					
ANR	1127471	Identifier	dm		1127464	0					
ANR	1127472	Identifier	paused		1127464	1					
ANR	1127473	Identifier	true		1127464	1					
ANR	1127474	CompoundStatement		2:25:26:26	1127464	1					
ANR	1127475	Statement	debug_printf	35:2:1190:1201	1127464	0	True				
ANR	1127476	Statement	(	35:14:1202:1202	1127464	1	True				
ANR	1127477	Statement	DEBUG_NORMAL	35:16:1204:1215	1127464	2	True				
ANR	1127478	Statement	","	35:28:1216:1216	1127464	3	True				
ANR	1127479	Statement	"""ERROR: PauseDag() called on an """	35:30:1218:1250	1127464	4	True				
ANR	1127480	Statement	"""already-paused DAG\\n"""	36:7:1259:1280	1127464	5	True				
ANR	1127481	Statement	)	36:30:1282:1282	1127464	6	True				
ANR	1127482	ExpressionStatement		36:31:1283:1283	1127464	7	True				
ANR	1127483	ReturnStatement	return false ;	37:2:1287:1299	1127464	8	True				
ANR	1127484	Identifier	false		1127464	0					
ANR	1127485	ExpressionStatement	"debug_printf ( DEBUG_NORMAL , ""DAGMan event-processing paused...\\n"" )"	39:1:1305:1372	1127464	1	True				
ANR	1127486	CallExpression	"debug_printf ( DEBUG_NORMAL , ""DAGMan event-processing paused...\\n"" )"		1127464	0					
ANR	1127487	Callee	debug_printf		1127464	0					
ANR	1127488	Identifier	debug_printf		1127464	0					
ANR	1127489	ArgumentList	DEBUG_NORMAL		1127464	1					
ANR	1127490	Argument	DEBUG_NORMAL		1127464	0					
ANR	1127491	Identifier	DEBUG_NORMAL		1127464	0					
ANR	1127492	Argument	"""DAGMan event-processing paused...\\n"""		1127464	1					
ANR	1127493	PrimaryExpression	"""DAGMan event-processing paused...\\n"""		1127464	0					
ANR	1127494	ExpressionStatement	dm . paused = true	40:1:1375:1391	1127464	2	True				
ANR	1127495	AssignmentExpression	dm . paused = true		1127464	0		=			
ANR	1127496	MemberAccess	dm . paused		1127464	0					
ANR	1127497	Identifier	dm		1127464	0					
ANR	1127498	Identifier	paused		1127464	1					
ANR	1127499	Identifier	true		1127464	1					
ANR	1127500	ReturnStatement	return true ;	41:1:1394:1405	1127464	3	True				
ANR	1127501	Identifier	true		1127464	0					
ANR	1127502	ReturnType	bool		1127464	1					
ANR	1127503	Identifier	PauseDag		1127464	2					
ANR	1127504	ParameterList	Dagman & dm		1127464	3					
ANR	1127505	Parameter	Dagman & dm	29:9:966:975	1127464	0	True				
ANR	1127506	ParameterType	Dagman &		1127464	0					
ANR	1127507	Identifier	dm		1127464	1					
ANR	1127508	CFGEntryNode	ENTRY		1127464		True				
ANR	1127509	CFGExitNode	EXIT		1127464		True				
ANR	1127510	Symbol	dm . paused		1127464						
ANR	1127511	Symbol	true		1127464						
ANR	1127512	Symbol	false		1127464						
ANR	1127513	Symbol	dm		1127464						
ANR	1127514	Symbol	DEBUG_NORMAL		1127464						
ANR	1127515	Function	ResumeDag	44:0:1410:1958							
ANR	1127516	FunctionDef	ResumeDag (Dagman & dm)		1127515	0					
ANR	1127517	CompoundStatement		46:0:1437:1958	1127515	0					
ANR	1127518	IfStatement	if ( dm . paused != true )		1127515	0					
ANR	1127519	Condition	dm . paused != true	47:5:1444:1460	1127515	0	True				
ANR	1127520	EqualityExpression	dm . paused != true		1127515	0		!=			
ANR	1127521	MemberAccess	dm . paused		1127515	0					
ANR	1127522	Identifier	dm		1127515	0					
ANR	1127523	Identifier	paused		1127515	1					
ANR	1127524	Identifier	true		1127515	1					
ANR	1127525	CompoundStatement		2:25:26:26	1127515	1					
ANR	1127526	Statement	debug_printf	48:2:1468:1479	1127515	0	True				
ANR	1127527	Statement	(	48:14:1480:1480	1127515	1	True				
ANR	1127528	Statement	DEBUG_NORMAL	48:16:1482:1493	1127515	2	True				
ANR	1127529	Statement	","	48:28:1494:1494	1127515	3	True				
ANR	1127530	Statement	"""ERROR: ResumeDag() called on an """	48:30:1496:1529	1127515	4	True				
ANR	1127531	Statement	"""un-paused DAG\\n"""	49:7:1538:1554	1127515	5	True				
ANR	1127532	Statement	)	49:25:1556:1556	1127515	6	True				
ANR	1127533	ExpressionStatement		49:26:1557:1557	1127515	7	True				
ANR	1127534	ReturnStatement	return false ;	50:2:1561:1573	1127515	8	True				
ANR	1127535	Identifier	false		1127515	0					
ANR	1127536	ExpressionStatement	"debug_printf ( DEBUG_NORMAL , ""DAGMan event-processing resuming...\\n"" )"	57:1:1853:1922	1127515	1	True				
ANR	1127537	CallExpression	"debug_printf ( DEBUG_NORMAL , ""DAGMan event-processing resuming...\\n"" )"		1127515	0					
ANR	1127538	Callee	debug_printf		1127515	0					
ANR	1127539	Identifier	debug_printf		1127515	0					
ANR	1127540	ArgumentList	DEBUG_NORMAL		1127515	1					
ANR	1127541	Argument	DEBUG_NORMAL		1127515	0					
ANR	1127542	Identifier	DEBUG_NORMAL		1127515	0					
ANR	1127543	Argument	"""DAGMan event-processing resuming...\\n"""		1127515	1					
ANR	1127544	PrimaryExpression	"""DAGMan event-processing resuming...\\n"""		1127515	0					
ANR	1127545	ExpressionStatement	dm . paused = false	58:1:1925:1942	1127515	2	True				
ANR	1127546	AssignmentExpression	dm . paused = false		1127515	0		=			
ANR	1127547	MemberAccess	dm . paused		1127515	0					
ANR	1127548	Identifier	dm		1127515	0					
ANR	1127549	Identifier	paused		1127515	1					
ANR	1127550	Identifier	false		1127515	1					
ANR	1127551	ReturnStatement	return true ;	59:1:1945:1956	1127515	3	True				
ANR	1127552	Identifier	true		1127515	0					
ANR	1127553	ReturnType	bool		1127515	1					
ANR	1127554	Identifier	ResumeDag		1127515	2					
ANR	1127555	ParameterList	Dagman & dm		1127515	3					
ANR	1127556	Parameter	Dagman & dm	45:10:1425:1434	1127515	0	True				
ANR	1127557	ParameterType	Dagman &		1127515	0					
ANR	1127558	Identifier	dm		1127515	1					
ANR	1127559	CFGEntryNode	ENTRY		1127515		True				
ANR	1127560	CFGExitNode	EXIT		1127515		True				
ANR	1127561	Symbol	dm . paused		1127515						
ANR	1127562	Symbol	true		1127515						
ANR	1127563	Symbol	false		1127515						
ANR	1127564	Symbol	dm		1127515						
ANR	1127565	Symbol	DEBUG_NORMAL		1127515						
ANR	1127566	Function	AddNode	62:0:1961:3217							
ANR	1127567	FunctionDef	"AddNode (Dag * dag , Job :: job_type_t type , const char * name , const char * directory , const char * submitFile , const char * precmd , const char * postcmd , bool noop , bool done , MyString & failReason)"		1127566	0					
ANR	1127568	CompoundStatement		69:0:2173:3217	1127566	0					
ANR	1127569	IdentifierDeclStatement	MyString why ;	70:1:2176:2188	1127566	0	True				
ANR	1127570	IdentifierDecl	why		1127566	0					
ANR	1127571	IdentifierDeclType	MyString		1127566	0					
ANR	1127572	Identifier	why		1127566	1					
ANR	1127573	IfStatement	"if ( ! IsValidNodeName ( dag , name , why ) )"		1127566	1					
ANR	1127574	Condition	"! IsValidNodeName ( dag , name , why )"	71:5:2195:2228	1127566	0	True				
ANR	1127575	UnaryOperationExpression	"! IsValidNodeName ( dag , name , why )"		1127566	0					
ANR	1127576	UnaryOperator	!		1127566	0					
ANR	1127577	CallExpression	"IsValidNodeName ( dag , name , why )"		1127566	1					
ANR	1127578	Callee	IsValidNodeName		1127566	0					
ANR	1127579	Identifier	IsValidNodeName		1127566	0					
ANR	1127580	ArgumentList	dag		1127566	1					
ANR	1127581	Argument	dag		1127566	0					
ANR	1127582	Identifier	dag		1127566	0					
ANR	1127583	Argument	name		1127566	1					
ANR	1127584	Identifier	name		1127566	0					
ANR	1127585	Argument	why		1127566	2					
ANR	1127586	Identifier	why		1127566	0					
ANR	1127587	CompoundStatement		3:42:58:58	1127566	1					
ANR	1127588	ExpressionStatement	failReason = why	72:2:2236:2252	1127566	0	True				
ANR	1127589	AssignmentExpression	failReason = why		1127566	0		=			
ANR	1127590	Identifier	failReason		1127566	0					
ANR	1127591	Identifier	why		1127566	1					
ANR	1127592	ReturnStatement	return false ;	73:2:2256:2268	1127566	1	True				
ANR	1127593	Identifier	false		1127566	0					
ANR	1127594	IfStatement	"if ( ! IsValidSubmitFileName ( submitFile , why ) )"		1127566	2					
ANR	1127595	Condition	"! IsValidSubmitFileName ( submitFile , why )"	75:5:2278:2318	1127566	0	True				
ANR	1127596	UnaryOperationExpression	"! IsValidSubmitFileName ( submitFile , why )"		1127566	0					
ANR	1127597	UnaryOperator	!		1127566	0					
ANR	1127598	CallExpression	"IsValidSubmitFileName ( submitFile , why )"		1127566	1					
ANR	1127599	Callee	IsValidSubmitFileName		1127566	0					
ANR	1127600	Identifier	IsValidSubmitFileName		1127566	0					
ANR	1127601	ArgumentList	submitFile		1127566	1					
ANR	1127602	Argument	submitFile		1127566	0					
ANR	1127603	Identifier	submitFile		1127566	0					
ANR	1127604	Argument	why		1127566	1					
ANR	1127605	Identifier	why		1127566	0					
ANR	1127606	CompoundStatement		7:49:148:148	1127566	1					
ANR	1127607	ExpressionStatement	failReason = why	76:2:2326:2342	1127566	0	True				
ANR	1127608	AssignmentExpression	failReason = why		1127566	0		=			
ANR	1127609	Identifier	failReason		1127566	0					
ANR	1127610	Identifier	why		1127566	1					
ANR	1127611	ReturnStatement	return false ;	77:2:2346:2358	1127566	1	True				
ANR	1127612	Identifier	false		1127566	0					
ANR	1127613	IdentifierDeclStatement	"Job * node = new Job ( type , name , directory , submitFile ) ;"	79:1:2364:2420	1127566	3	True				
ANR	1127614	IdentifierDecl	"* node = new Job ( type , name , directory , submitFile )"		1127566	0					
ANR	1127615	IdentifierDeclType	Job *		1127566	0					
ANR	1127616	Identifier	node		1127566	1					
ANR	1127617	AssignmentExpression	"* node = new Job ( type , name , directory , submitFile )"		1127566	2		=			
ANR	1127618	Identifier	node		1127566	0					
ANR	1127619	Expression	"type , name , directory , submitFile"		1127566	1					
ANR	1127620	Identifier	type		1127566	0					
ANR	1127621	Expression	"name , directory , submitFile"		1127566	1					
ANR	1127622	Identifier	name		1127566	0					
ANR	1127623	Expression	"directory , submitFile"		1127566	1					
ANR	1127624	Identifier	directory		1127566	0					
ANR	1127625	Identifier	submitFile		1127566	1					
ANR	1127626	IfStatement	if ( ! node )		1127566	4					
ANR	1127627	Condition	! node	80:5:2427:2431	1127566	0	True				
ANR	1127628	UnaryOperationExpression	! node		1127566	0					
ANR	1127629	UnaryOperator	!		1127566	0					
ANR	1127630	Identifier	node		1127566	1					
ANR	1127631	CompoundStatement		12:13:261:261	1127566	1					
ANR	1127632	ExpressionStatement	"dprintf ( D_ALWAYS , ""ERROR: out of memory!\\n"" )"	81:2:2439:2485	1127566	0	True				
ANR	1127633	CallExpression	"dprintf ( D_ALWAYS , ""ERROR: out of memory!\\n"" )"		1127566	0					
ANR	1127634	Callee	dprintf		1127566	0					
ANR	1127635	Identifier	dprintf		1127566	0					
ANR	1127636	ArgumentList	D_ALWAYS		1127566	1					
ANR	1127637	Argument	D_ALWAYS		1127566	0					
ANR	1127638	Identifier	D_ALWAYS		1127566	0					
ANR	1127639	Argument	"""ERROR: out of memory!\\n"""		1127566	1					
ANR	1127640	PrimaryExpression	"""ERROR: out of memory!\\n"""		1127566	0					
ANR	1127641	ExpressionStatement	"failReason = ""out of memory!"""	84:2:2603:2632	1127566	1	True				
ANR	1127642	AssignmentExpression	"failReason = ""out of memory!"""		1127566	0		=			
ANR	1127643	Identifier	failReason		1127566	0					
ANR	1127644	PrimaryExpression	"""out of memory!"""		1127566	1					
ANR	1127645	ReturnStatement	return false ;	85:2:2636:2648	1127566	2	True				
ANR	1127646	Identifier	false		1127566	0					
ANR	1127647	IfStatement	if ( precmd )		1127566	5					
ANR	1127648	Condition	precmd	87:5:2658:2663	1127566	0	True				
ANR	1127649	Identifier	precmd		1127566	0					
ANR	1127650	CompoundStatement		19:14:493:493	1127566	1					
ANR	1127651	IfStatement	"if ( ! node -> AddPreScript ( precmd , why ) )"		1127566	0					
ANR	1127652	Condition	"! node -> AddPreScript ( precmd , why )"	88:6:2675:2708	1127566	0	True				
ANR	1127653	UnaryOperationExpression	"! node -> AddPreScript ( precmd , why )"		1127566	0					
ANR	1127654	UnaryOperator	!		1127566	0					
ANR	1127655	CallExpression	"node -> AddPreScript ( precmd , why )"		1127566	1					
ANR	1127656	Callee	node -> AddPreScript		1127566	0					
ANR	1127657	PtrMemberAccess	node -> AddPreScript		1127566	0					
ANR	1127658	Identifier	node		1127566	0					
ANR	1127659	Identifier	AddPreScript		1127566	1					
ANR	1127660	ArgumentList	precmd		1127566	1					
ANR	1127661	Argument	precmd		1127566	0					
ANR	1127662	Identifier	precmd		1127566	0					
ANR	1127663	Argument	why		1127566	1					
ANR	1127664	Identifier	why		1127566	0					
ANR	1127665	CompoundStatement		20:43:538:538	1127566	1					
ANR	1127666	ExpressionStatement	"failReason = ""failed to add PRE script: "" + why"	89:3:2717:2764	1127566	0	True				
ANR	1127667	AssignmentExpression	"failReason = ""failed to add PRE script: "" + why"		1127566	0		=			
ANR	1127668	Identifier	failReason		1127566	0					
ANR	1127669	AdditiveExpression	"""failed to add PRE script: "" + why"		1127566	1		+			
ANR	1127670	PrimaryExpression	"""failed to add PRE script: """		1127566	0					
ANR	1127671	Identifier	why		1127566	1					
ANR	1127672	Statement	delete	90:3:2769:2774	1127566	1	True				
ANR	1127673	ExpressionStatement	node	90:10:2776:2780	1127566	2	True				
ANR	1127674	Identifier	node		1127566	0					
ANR	1127675	ReturnStatement	return false ;	91:3:2785:2797	1127566	3	True				
ANR	1127676	Identifier	false		1127566	0					
ANR	1127677	IfStatement	if ( postcmd )		1127566	6					
ANR	1127678	Condition	postcmd	94:5:2811:2817	1127566	0	True				
ANR	1127679	Identifier	postcmd		1127566	0					
ANR	1127680	CompoundStatement		26:15:647:647	1127566	1					
ANR	1127681	IfStatement	"if ( ! node -> AddPostScript ( postcmd , why ) )"		1127566	0					
ANR	1127682	Condition	"! node -> AddPostScript ( postcmd , why )"	95:6:2829:2864	1127566	0	True				
ANR	1127683	UnaryOperationExpression	"! node -> AddPostScript ( postcmd , why )"		1127566	0					
ANR	1127684	UnaryOperator	!		1127566	0					
ANR	1127685	CallExpression	"node -> AddPostScript ( postcmd , why )"		1127566	1					
ANR	1127686	Callee	node -> AddPostScript		1127566	0					
ANR	1127687	PtrMemberAccess	node -> AddPostScript		1127566	0					
ANR	1127688	Identifier	node		1127566	0					
ANR	1127689	Identifier	AddPostScript		1127566	1					
ANR	1127690	ArgumentList	postcmd		1127566	1					
ANR	1127691	Argument	postcmd		1127566	0					
ANR	1127692	Identifier	postcmd		1127566	0					
ANR	1127693	Argument	why		1127566	1					
ANR	1127694	Identifier	why		1127566	0					
ANR	1127695	CompoundStatement		27:45:694:694	1127566	1					
ANR	1127696	ExpressionStatement	"failReason = ""failed to add POST script: "" + why"	96:3:2873:2921	1127566	0	True				
ANR	1127697	AssignmentExpression	"failReason = ""failed to add POST script: "" + why"		1127566	0		=			
ANR	1127698	Identifier	failReason		1127566	0					
ANR	1127699	AdditiveExpression	"""failed to add POST script: "" + why"		1127566	1		+			
ANR	1127700	PrimaryExpression	"""failed to add POST script: """		1127566	0					
ANR	1127701	Identifier	why		1127566	1					
ANR	1127702	Statement	delete	97:3:2926:2931	1127566	1	True				
ANR	1127703	ExpressionStatement	node	97:10:2933:2937	1127566	2	True				
ANR	1127704	Identifier	node		1127566	0					
ANR	1127705	ReturnStatement	return false ;	98:3:2942:2954	1127566	3	True				
ANR	1127706	Identifier	false		1127566	0					
ANR	1127707	ExpressionStatement	node -> SetNoop ( noop )	101:1:2964:2985	1127566	7	True				
ANR	1127708	CallExpression	node -> SetNoop ( noop )		1127566	0					
ANR	1127709	Callee	node -> SetNoop		1127566	0					
ANR	1127710	PtrMemberAccess	node -> SetNoop		1127566	0					
ANR	1127711	Identifier	node		1127566	0					
ANR	1127712	Identifier	SetNoop		1127566	1					
ANR	1127713	ArgumentList	noop		1127566	1					
ANR	1127714	Argument	noop		1127566	0					
ANR	1127715	Identifier	noop		1127566	0					
ANR	1127716	IfStatement	if ( done )		1127566	8					
ANR	1127717	Condition	done	102:5:2992:2995	1127566	0	True				
ANR	1127718	Identifier	done		1127566	0					
ANR	1127719	CompoundStatement		34:12:825:825	1127566	1					
ANR	1127720	ExpressionStatement	node -> SetStatus ( Job :: STATUS_DONE )	103:2:3003:3038	1127566	0	True				
ANR	1127721	CallExpression	node -> SetStatus ( Job :: STATUS_DONE )		1127566	0					
ANR	1127722	Callee	node -> SetStatus		1127566	0					
ANR	1127723	PtrMemberAccess	node -> SetStatus		1127566	0					
ANR	1127724	Identifier	node		1127566	0					
ANR	1127725	Identifier	SetStatus		1127566	1					
ANR	1127726	ArgumentList	Job :: STATUS_DONE		1127566	1					
ANR	1127727	Argument	Job :: STATUS_DONE		1127566	0					
ANR	1127728	Identifier	Job :: STATUS_DONE		1127566	0					
ANR	1127729	ExpressionStatement	ASSERT ( dag != NULL )	105:1:3044:3065	1127566	9	True				
ANR	1127730	CallExpression	ASSERT ( dag != NULL )		1127566	0					
ANR	1127731	Callee	ASSERT		1127566	0					
ANR	1127732	Identifier	ASSERT		1127566	0					
ANR	1127733	ArgumentList	dag != NULL		1127566	1					
ANR	1127734	Argument	dag != NULL		1127566	0					
ANR	1127735	EqualityExpression	dag != NULL		1127566	0		!=			
ANR	1127736	Identifier	dag		1127566	0					
ANR	1127737	Identifier	NULL		1127566	1					
ANR	1127738	IfStatement	if ( ! dag -> Add ( * node ) )		1127566	10					
ANR	1127739	Condition	! dag -> Add ( * node )	106:5:3072:3089	1127566	0	True				
ANR	1127740	UnaryOperationExpression	! dag -> Add ( * node )		1127566	0					
ANR	1127741	UnaryOperator	!		1127566	0					
ANR	1127742	CallExpression	dag -> Add ( * node )		1127566	1					
ANR	1127743	Callee	dag -> Add		1127566	0					
ANR	1127744	PtrMemberAccess	dag -> Add		1127566	0					
ANR	1127745	Identifier	dag		1127566	0					
ANR	1127746	Identifier	Add		1127566	1					
ANR	1127747	ArgumentList	* node		1127566	1					
ANR	1127748	Argument	* node		1127566	0					
ANR	1127749	UnaryOperationExpression	* node		1127566	0					
ANR	1127750	UnaryOperator	*		1127566	0					
ANR	1127751	Identifier	node		1127566	1					
ANR	1127752	CompoundStatement		38:26:919:919	1127566	1					
ANR	1127753	ExpressionStatement	"failReason = ""unknown failure adding node to DAG"""	107:2:3097:3146	1127566	0	True				
ANR	1127754	AssignmentExpression	"failReason = ""unknown failure adding node to DAG"""		1127566	0		=			
ANR	1127755	Identifier	failReason		1127566	0					
ANR	1127756	PrimaryExpression	"""unknown failure adding node to DAG"""		1127566	1					
ANR	1127757	Statement	delete	108:2:3150:3155	1127566	1	True				
ANR	1127758	ExpressionStatement	node	108:9:3157:3161	1127566	2	True				
ANR	1127759	Identifier	node		1127566	0					
ANR	1127760	ReturnStatement	return false ;	109:2:3165:3177	1127566	3	True				
ANR	1127761	Identifier	false		1127566	0					
ANR	1127762	ExpressionStatement	"failReason = ""n/a"""	111:1:3183:3201	1127566	11	True				
ANR	1127763	AssignmentExpression	"failReason = ""n/a"""		1127566	0		=			
ANR	1127764	Identifier	failReason		1127566	0					
ANR	1127765	PrimaryExpression	"""n/a"""		1127566	1					
ANR	1127766	ReturnStatement	return true ;	112:1:3204:3215	1127566	12	True				
ANR	1127767	Identifier	true		1127566	0					
ANR	1127768	ReturnType	bool		1127566	1					
ANR	1127769	Identifier	AddNode		1127566	2					
ANR	1127770	ParameterList	"Dag * dag , Job :: job_type_t type , const char * name , const char * directory , const char * submitFile , const char * precmd , const char * postcmd , bool noop , bool done , MyString & failReason"		1127566	3					
ANR	1127771	Parameter	Dag * dag	63:9:1975:1982	1127566	0	True				
ANR	1127772	ParameterType	Dag *		1127566	0					
ANR	1127773	Identifier	dag		1127566	1					
ANR	1127774	Parameter	Job :: job_type_t type	63:19:1985:2004	1127566	1	True				
ANR	1127775	ParameterType	Job :: job_type_t		1127566	0					
ANR	1127776	Identifier	type		1127566	1					
ANR	1127777	Parameter	const char * name	63:41:2007:2022	1127566	2	True				
ANR	1127778	ParameterType	const char *		1127566	0					
ANR	1127779	Identifier	name		1127566	1					
ANR	1127780	Parameter	const char * directory	64:3:2028:2048	1127566	3	True				
ANR	1127781	ParameterType	const char *		1127566	0					
ANR	1127782	Identifier	directory		1127566	1					
ANR	1127783	Parameter	const char * submitFile	65:3:2054:2075	1127566	4	True				
ANR	1127784	ParameterType	const char *		1127566	0					
ANR	1127785	Identifier	submitFile		1127566	1					
ANR	1127786	Parameter	const char * precmd	66:3:2081:2098	1127566	5	True				
ANR	1127787	ParameterType	const char *		1127566	0					
ANR	1127788	Identifier	precmd		1127566	1					
ANR	1127789	Parameter	const char * postcmd	66:23:2101:2119	1127566	6	True				
ANR	1127790	ParameterType	const char *		1127566	0					
ANR	1127791	Identifier	postcmd		1127566	1					
ANR	1127792	Parameter	bool noop	66:44:2122:2130	1127566	7	True				
ANR	1127793	ParameterType	bool		1127566	0					
ANR	1127794	Identifier	noop		1127566	1					
ANR	1127795	Parameter	bool done	67:3:2136:2144	1127566	8	True				
ANR	1127796	ParameterType	bool		1127566	0					
ANR	1127797	Identifier	done		1127566	1					
ANR	1127798	Parameter	MyString & failReason	68:3:2150:2169	1127566	9	True				
ANR	1127799	ParameterType	MyString &		1127566	0					
ANR	1127800	Identifier	failReason		1127566	1					
ANR	1127801	CFGEntryNode	ENTRY		1127566		True				
ANR	1127802	CFGExitNode	EXIT		1127566		True				
ANR	1127803	Symbol	precmd		1127566						
ANR	1127804	Symbol	NULL		1127566						
ANR	1127805	Symbol	IsValidSubmitFileName		1127566						
ANR	1127806	Symbol	node -> AddPreScript		1127566						
ANR	1127807	Symbol	false		1127566						
ANR	1127808	Symbol	D_ALWAYS		1127566						
ANR	1127809	Symbol	why		1127566						
ANR	1127810	Symbol	dag -> Add		1127566						
ANR	1127811	Symbol	dag		1127566						
ANR	1127812	Symbol	* dag		1127566						
ANR	1127813	Symbol	type		1127566						
ANR	1127814	Symbol	directory		1127566						
ANR	1127815	Symbol	done		1127566						
ANR	1127816	Symbol	noop		1127566						
ANR	1127817	Symbol	node		1127566						
ANR	1127818	Symbol	postcmd		1127566						
ANR	1127819	Symbol	name		1127566						
ANR	1127820	Symbol	true		1127566						
ANR	1127821	Symbol	Job :: STATUS_DONE		1127566						
ANR	1127822	Symbol	failReason		1127566						
ANR	1127823	Symbol	IsValidNodeName		1127566						
ANR	1127824	Symbol	* node		1127566						
ANR	1127825	Symbol	node -> AddPostScript		1127566						
ANR	1127826	Symbol	submitFile		1127566						
ANR	1127827	Function	SetNodeDagFile	115:0:3220:3520							
ANR	1127828	FunctionDef	"SetNodeDagFile (Dag * dag , const char * nodeName , const char * dagFile , MyString & whynot)"		1127827	0					
ANR	1127829	CompoundStatement		118:0:3326:3520	1127827	0					
ANR	1127830	IdentifierDeclStatement	Job * job = dag -> FindNodeByName ( nodeName ) ;	119:1:3329:3371	1127827	0	True				
ANR	1127831	IdentifierDecl	* job = dag -> FindNodeByName ( nodeName )		1127827	0					
ANR	1127832	IdentifierDeclType	Job *		1127827	0					
ANR	1127833	Identifier	job		1127827	1					
ANR	1127834	AssignmentExpression	* job = dag -> FindNodeByName ( nodeName )		1127827	2		=			
ANR	1127835	Identifier	job		1127827	0					
ANR	1127836	CallExpression	dag -> FindNodeByName ( nodeName )		1127827	1					
ANR	1127837	Callee	dag -> FindNodeByName		1127827	0					
ANR	1127838	PtrMemberAccess	dag -> FindNodeByName		1127827	0					
ANR	1127839	Identifier	dag		1127827	0					
ANR	1127840	Identifier	FindNodeByName		1127827	1					
ANR	1127841	ArgumentList	nodeName		1127827	1					
ANR	1127842	Argument	nodeName		1127827	0					
ANR	1127843	Identifier	nodeName		1127827	0					
ANR	1127844	IfStatement	if ( job )		1127827	1					
ANR	1127845	Condition	job	120:6:3379:3381	1127827	0	True				
ANR	1127846	Identifier	job		1127827	0					
ANR	1127847	CompoundStatement		3:12:58:58	1127827	1					
ANR	1127848	ExpressionStatement	job -> SetDagFile ( dagFile )	121:2:3389:3415	1127827	0	True				
ANR	1127849	CallExpression	job -> SetDagFile ( dagFile )		1127827	0					
ANR	1127850	Callee	job -> SetDagFile		1127827	0					
ANR	1127851	PtrMemberAccess	job -> SetDagFile		1127827	0					
ANR	1127852	Identifier	job		1127827	0					
ANR	1127853	Identifier	SetDagFile		1127827	1					
ANR	1127854	ArgumentList	dagFile		1127827	1					
ANR	1127855	Argument	dagFile		1127827	0					
ANR	1127856	Identifier	dagFile		1127827	0					
ANR	1127857	ReturnStatement	return true ;	122:2:3419:3430	1127827	1	True				
ANR	1127858	Identifier	true		1127827	0					
ANR	1127859	ElseStatement	else		1127827	0					
ANR	1127860	CompoundStatement		6:8:113:113	1127827	0					
ANR	1127861	ExpressionStatement	"whynot = MyString ( ""Node "" ) + nodeName + "" not found!"""	124:2:3444:3499	1127827	0	True				
ANR	1127862	AssignmentExpression	"whynot = MyString ( ""Node "" ) + nodeName + "" not found!"""		1127827	0		=			
ANR	1127863	Identifier	whynot		1127827	0					
ANR	1127864	AdditiveExpression	"MyString ( ""Node "" ) + nodeName + "" not found!"""		1127827	1		+			
ANR	1127865	CallExpression	"MyString ( ""Node "" )"		1127827	0					
ANR	1127866	Callee	MyString		1127827	0					
ANR	1127867	Identifier	MyString		1127827	0					
ANR	1127868	ArgumentList	"""Node """		1127827	1					
ANR	1127869	Argument	"""Node """		1127827	0					
ANR	1127870	PrimaryExpression	"""Node """		1127827	0					
ANR	1127871	AdditiveExpression	"nodeName + "" not found!"""		1127827	1		+			
ANR	1127872	Identifier	nodeName		1127827	0					
ANR	1127873	PrimaryExpression	""" not found!"""		1127827	1					
ANR	1127874	ReturnStatement	return false ;	125:2:3503:3515	1127827	1	True				
ANR	1127875	Identifier	false		1127827	0					
ANR	1127876	ReturnType	bool		1127827	1					
ANR	1127877	Identifier	SetNodeDagFile		1127827	2					
ANR	1127878	ParameterList	"Dag * dag , const char * nodeName , const char * dagFile , MyString & whynot"		1127827	3					
ANR	1127879	Parameter	Dag * dag	116:16:3241:3248	1127827	0	True				
ANR	1127880	ParameterType	Dag *		1127827	0					
ANR	1127881	Identifier	dag		1127827	1					
ANR	1127882	Parameter	const char * nodeName	116:26:3251:3270	1127827	1	True				
ANR	1127883	ParameterType	const char *		1127827	0					
ANR	1127884	Identifier	nodeName		1127827	1					
ANR	1127885	Parameter	const char * dagFile	116:48:3273:3291	1127827	2	True				
ANR	1127886	ParameterType	const char *		1127827	0					
ANR	1127887	Identifier	dagFile		1127827	1					
ANR	1127888	Parameter	MyString & whynot	117:12:3307:3322	1127827	3	True				
ANR	1127889	ParameterType	MyString &		1127827	0					
ANR	1127890	Identifier	whynot		1127827	1					
ANR	1127891	CFGEntryNode	ENTRY		1127827		True				
ANR	1127892	CFGExitNode	EXIT		1127827		True				
ANR	1127893	Symbol	nodeName		1127827						
ANR	1127894	Symbol	dagFile		1127827						
ANR	1127895	Symbol	true		1127827						
ANR	1127896	Symbol	false		1127827						
ANR	1127897	Symbol	whynot		1127827						
ANR	1127898	Symbol	dag		1127827						
ANR	1127899	Symbol	* dag		1127827						
ANR	1127900	Symbol	MyString		1127827						
ANR	1127901	Symbol	job		1127827						
ANR	1127902	Symbol	dag -> FindNodeByName		1127827						
ANR	1127903	Function	IsValidNodeName	129:0:3523:4051							
ANR	1127904	FunctionDef	"IsValidNodeName (Dag * dag , const char * name , MyString & whynot)"		1127903	0					
ANR	1127905	CompoundStatement		131:0:3592:4051	1127903	0					
ANR	1127906	IfStatement	if ( name == NULL )		1127903	0					
ANR	1127907	Condition	name == NULL	132:5:3599:3610	1127903	0	True				
ANR	1127908	EqualityExpression	name == NULL		1127903	0		==			
ANR	1127909	Identifier	name		1127903	0					
ANR	1127910	Identifier	NULL		1127903	1					
ANR	1127911	CompoundStatement		2:20:21:21	1127903	1					
ANR	1127912	ExpressionStatement	"whynot = ""missing node name"""	133:2:3618:3646	1127903	0	True				
ANR	1127913	AssignmentExpression	"whynot = ""missing node name"""		1127903	0		=			
ANR	1127914	Identifier	whynot		1127903	0					
ANR	1127915	PrimaryExpression	"""missing node name"""		1127903	1					
ANR	1127916	ReturnStatement	return false ;	134:2:3650:3662	1127903	1	True				
ANR	1127917	Identifier	false		1127903	0					
ANR	1127918	IfStatement	if ( strlen ( name ) == 0 )		1127903	1					
ANR	1127919	Condition	strlen ( name ) == 0	136:5:3672:3690	1127903	0	True				
ANR	1127920	EqualityExpression	strlen ( name ) == 0		1127903	0		==			
ANR	1127921	CallExpression	strlen ( name )		1127903	0					
ANR	1127922	Callee	strlen		1127903	0					
ANR	1127923	Identifier	strlen		1127903	0					
ANR	1127924	ArgumentList	name		1127903	1					
ANR	1127925	Argument	name		1127903	0					
ANR	1127926	Identifier	name		1127903	0					
ANR	1127927	PrimaryExpression	0		1127903	1					
ANR	1127928	CompoundStatement		6:27:101:101	1127903	1					
ANR	1127929	ExpressionStatement	"whynot = ""empty node name (name == \\""\\"")"""	137:2:3698:3739	1127903	0	True				
ANR	1127930	AssignmentExpression	"whynot = ""empty node name (name == \\""\\"")"""		1127903	0		=			
ANR	1127931	Identifier	whynot		1127903	0					
ANR	1127932	PrimaryExpression	"""empty node name (name == \\""\\"")"""		1127903	1					
ANR	1127933	ReturnStatement	return false ;	138:2:3743:3755	1127903	1	True				
ANR	1127934	Identifier	false		1127903	0					
ANR	1127935	IfStatement	if ( isReservedWord ( name ) )		1127903	2					
ANR	1127936	Condition	isReservedWord ( name )	140:5:3765:3786	1127903	0	True				
ANR	1127937	CallExpression	isReservedWord ( name )		1127903	0					
ANR	1127938	Callee	isReservedWord		1127903	0					
ANR	1127939	Identifier	isReservedWord		1127903	0					
ANR	1127940	ArgumentList	name		1127903	1					
ANR	1127941	Argument	name		1127903	0					
ANR	1127942	Identifier	name		1127903	0					
ANR	1127943	CompoundStatement		10:30:197:197	1127903	1					
ANR	1127944	ExpressionStatement	"whynot . sprintf ( ""invalid node name: '%s' is a DAGMan reserved word"" , name )"	141:2:3794:3874	1127903	0	True				
ANR	1127945	CallExpression	"whynot . sprintf ( ""invalid node name: '%s' is a DAGMan reserved word"" , name )"		1127903	0					
ANR	1127946	Callee	whynot . sprintf		1127903	0					
ANR	1127947	MemberAccess	whynot . sprintf		1127903	0					
ANR	1127948	Identifier	whynot		1127903	0					
ANR	1127949	Identifier	sprintf		1127903	1					
ANR	1127950	ArgumentList	"""invalid node name: '%s' is a DAGMan reserved word"""		1127903	1					
ANR	1127951	Argument	"""invalid node name: '%s' is a DAGMan reserved word"""		1127903	0					
ANR	1127952	PrimaryExpression	"""invalid node name: '%s' is a DAGMan reserved word"""		1127903	0					
ANR	1127953	Argument	name		1127903	1					
ANR	1127954	Identifier	name		1127903	0					
ANR	1127955	ReturnStatement	return false ;	143:2:3878:3890	1127903	1	True				
ANR	1127956	Identifier	false		1127903	0					
ANR	1127957	ExpressionStatement	ASSERT ( dag != NULL )	145:1:3896:3917	1127903	3	True				
ANR	1127958	CallExpression	ASSERT ( dag != NULL )		1127903	0					
ANR	1127959	Callee	ASSERT		1127903	0					
ANR	1127960	Identifier	ASSERT		1127903	0					
ANR	1127961	ArgumentList	dag != NULL		1127903	1					
ANR	1127962	Argument	dag != NULL		1127903	0					
ANR	1127963	EqualityExpression	dag != NULL		1127903	0		!=			
ANR	1127964	Identifier	dag		1127903	0					
ANR	1127965	Identifier	NULL		1127903	1					
ANR	1127966	IfStatement	if ( dag -> NodeExists ( name ) )		1127903	4					
ANR	1127967	Condition	dag -> NodeExists ( name )	146:5:3924:3946	1127903	0	True				
ANR	1127968	CallExpression	dag -> NodeExists ( name )		1127903	0					
ANR	1127969	Callee	dag -> NodeExists		1127903	0					
ANR	1127970	PtrMemberAccess	dag -> NodeExists		1127903	0					
ANR	1127971	Identifier	dag		1127903	0					
ANR	1127972	Identifier	NodeExists		1127903	1					
ANR	1127973	ArgumentList	name		1127903	1					
ANR	1127974	Argument	name		1127903	0					
ANR	1127975	Identifier	name		1127903	0					
ANR	1127976	CompoundStatement		16:31:357:357	1127903	1					
ANR	1127977	ExpressionStatement	"whynot . sprintf ( ""node name '%s' already exists in DAG"" , name )"	147:2:3954:4016	1127903	0	True				
ANR	1127978	CallExpression	"whynot . sprintf ( ""node name '%s' already exists in DAG"" , name )"		1127903	0					
ANR	1127979	Callee	whynot . sprintf		1127903	0					
ANR	1127980	MemberAccess	whynot . sprintf		1127903	0					
ANR	1127981	Identifier	whynot		1127903	0					
ANR	1127982	Identifier	sprintf		1127903	1					
ANR	1127983	ArgumentList	"""node name '%s' already exists in DAG"""		1127903	1					
ANR	1127984	Argument	"""node name '%s' already exists in DAG"""		1127903	0					
ANR	1127985	PrimaryExpression	"""node name '%s' already exists in DAG"""		1127903	0					
ANR	1127986	Argument	name		1127903	1					
ANR	1127987	Identifier	name		1127903	0					
ANR	1127988	ReturnStatement	return false ;	148:2:4020:4032	1127903	1	True				
ANR	1127989	Identifier	false		1127903	0					
ANR	1127990	ReturnStatement	return true ;	150:1:4038:4049	1127903	5	True				
ANR	1127991	Identifier	true		1127903	0					
ANR	1127992	ReturnType	bool		1127903	1					
ANR	1127993	Identifier	IsValidNodeName		1127903	2					
ANR	1127994	ParameterList	"Dag * dag , const char * name , MyString & whynot"		1127903	3					
ANR	1127995	Parameter	Dag * dag	130:17:3545:3552	1127903	0	True				
ANR	1127996	ParameterType	Dag *		1127903	0					
ANR	1127997	Identifier	dag		1127903	1					
ANR	1127998	Parameter	const char * name	130:27:3555:3570	1127903	1	True				
ANR	1127999	ParameterType	const char *		1127903	0					
ANR	1128000	Identifier	name		1127903	1					
ANR	1128001	Parameter	MyString & whynot	130:45:3573:3588	1127903	2	True				
ANR	1128002	ParameterType	MyString &		1127903	0					
ANR	1128003	Identifier	whynot		1127903	1					
ANR	1128004	CFGEntryNode	ENTRY		1127903		True				
ANR	1128005	CFGExitNode	EXIT		1127903		True				
ANR	1128006	Symbol	dag -> NodeExists		1127903						
ANR	1128007	Symbol	strlen		1127903						
ANR	1128008	Symbol	NULL		1127903						
ANR	1128009	Symbol	isReservedWord		1127903						
ANR	1128010	Symbol	name		1127903						
ANR	1128011	Symbol	false		1127903						
ANR	1128012	Symbol	true		1127903						
ANR	1128013	Symbol	whynot		1127903						
ANR	1128014	Symbol	dag		1127903						
ANR	1128015	Symbol	* dag		1127903						
ANR	1128016	Function	IsValidSubmitFileName	153:0:4054:4315							
ANR	1128017	FunctionDef	"IsValidSubmitFileName (const char * name , MyString & whynot)"		1128016	0					
ANR	1128018	CompoundStatement		155:0:4119:4315	1128016	0					
ANR	1128019	IfStatement	if ( name == NULL )		1128016	0					
ANR	1128020	Condition	name == NULL	156:5:4126:4137	1128016	0	True				
ANR	1128021	EqualityExpression	name == NULL		1128016	0		==			
ANR	1128022	Identifier	name		1128016	0					
ANR	1128023	Identifier	NULL		1128016	1					
ANR	1128024	CompoundStatement		2:20:21:21	1128016	1					
ANR	1128025	ExpressionStatement	"whynot = ""missing submit file name"""	157:2:4145:4180	1128016	0	True				
ANR	1128026	AssignmentExpression	"whynot = ""missing submit file name"""		1128016	0		=			
ANR	1128027	Identifier	whynot		1128016	0					
ANR	1128028	PrimaryExpression	"""missing submit file name"""		1128016	1					
ANR	1128029	ReturnStatement	return false ;	158:2:4184:4196	1128016	1	True				
ANR	1128030	Identifier	false		1128016	0					
ANR	1128031	IfStatement	if ( strlen ( name ) == 0 )		1128016	1					
ANR	1128032	Condition	strlen ( name ) == 0	160:5:4206:4224	1128016	0	True				
ANR	1128033	EqualityExpression	strlen ( name ) == 0		1128016	0		==			
ANR	1128034	CallExpression	strlen ( name )		1128016	0					
ANR	1128035	Callee	strlen		1128016	0					
ANR	1128036	Identifier	strlen		1128016	0					
ANR	1128037	ArgumentList	name		1128016	1					
ANR	1128038	Argument	name		1128016	0					
ANR	1128039	Identifier	name		1128016	0					
ANR	1128040	PrimaryExpression	0		1128016	1					
ANR	1128041	CompoundStatement		6:27:108:108	1128016	1					
ANR	1128042	ExpressionStatement	"whynot = ""empty submit file name (name == \\""\\"")"""	161:2:4232:4280	1128016	0	True				
ANR	1128043	AssignmentExpression	"whynot = ""empty submit file name (name == \\""\\"")"""		1128016	0		=			
ANR	1128044	Identifier	whynot		1128016	0					
ANR	1128045	PrimaryExpression	"""empty submit file name (name == \\""\\"")"""		1128016	1					
ANR	1128046	ReturnStatement	return false ;	162:2:4284:4296	1128016	1	True				
ANR	1128047	Identifier	false		1128016	0					
ANR	1128048	ReturnStatement	return true ;	164:1:4302:4313	1128016	2	True				
ANR	1128049	Identifier	true		1128016	0					
ANR	1128050	ReturnType	bool		1128016	1					
ANR	1128051	Identifier	IsValidSubmitFileName		1128016	2					
ANR	1128052	ParameterList	"const char * name , MyString & whynot"		1128016	3					
ANR	1128053	Parameter	const char * name	154:23:4082:4097	1128016	0	True				
ANR	1128054	ParameterType	const char *		1128016	0					
ANR	1128055	Identifier	name		1128016	1					
ANR	1128056	Parameter	MyString & whynot	154:41:4100:4115	1128016	1	True				
ANR	1128057	ParameterType	MyString &		1128016	0					
ANR	1128058	Identifier	whynot		1128016	1					
ANR	1128059	CFGEntryNode	ENTRY		1128016		True				
ANR	1128060	CFGExitNode	EXIT		1128016		True				
ANR	1128061	Symbol	strlen		1128016						
ANR	1128062	Symbol	NULL		1128016						
ANR	1128063	Symbol	name		1128016						
ANR	1128064	Symbol	false		1128016						
ANR	1128065	Symbol	true		1128016						
ANR	1128066	Symbol	whynot		1128016						
