command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	79464	File	data/converged/CVE-2011-4930_htcondor/AviaryJob_ControlJob.cpp								
ANR	79465	Function	AviaryJob :: ControlJob :: ControlJob	26:11:708:964							
ANR	79466	FunctionDef	AviaryJob :: ControlJob :: ControlJob ()		79465	0					
ANR	79467	CompoundStatement		27:8:752:964	79465	0					
ANR	79468	ExpressionStatement	property_Id = NULL	30:16:780:799	79465	0	True				
ANR	79469	AssignmentExpression	property_Id = NULL		79465	0		=			
ANR	79470	Identifier	property_Id		79465	0					
ANR	79471	Identifier	NULL		79465	1					
ANR	79472	ExpressionStatement	isValidId = false	32:12:828:846	79465	1	True				
ANR	79473	AssignmentExpression	isValidId = false		79465	0		=			
ANR	79474	Identifier	isValidId		79465	0					
ANR	79475	Identifier	false		79465	1					
ANR	79476	ExpressionStatement	property_Reason	34:20:877:892	79465	2	True				
ANR	79477	Identifier	property_Reason		79465	0					
ANR	79478	ExpressionStatement	isValidReason = false	36:12:923:945	79465	3	True				
ANR	79479	AssignmentExpression	isValidReason = false		79465	0		=			
ANR	79480	Identifier	isValidReason		79465	0					
ANR	79481	Identifier	false		79465	1					
ANR	79482	Identifier	AviaryJob :: ControlJob :: ControlJob		79465	1					
ANR	79483	ParameterList			79465	2					
ANR	79484	CFGEntryNode	ENTRY		79465		True				
ANR	79485	CFGExitNode	EXIT		79465		True				
ANR	79486	Symbol	isValidReason		79465						
ANR	79487	Symbol	NULL		79465						
ANR	79488	Symbol	isValidId		79465						
ANR	79489	Symbol	false		79465						
ANR	79490	Symbol	property_Id		79465						
ANR	79491	Function	AviaryJob :: ControlJob :: ControlJob	40:7:974:1400							
ANR	79492	FunctionDef	"AviaryJob :: ControlJob :: ControlJob (AviaryCommon :: JobID * arg_Id , std :: string arg_Reason)"		79491	0					
ANR	79493	CompoundStatement		41:8:1068:1400	79491	0					
ANR	79494	ExpressionStatement	property_Id = NULL	43:15:1099:1118	79491	0	True				
ANR	79495	AssignmentExpression	property_Id = NULL		79491	0		=			
ANR	79496	Identifier	property_Id		79491	0					
ANR	79497	Identifier	NULL		79491	1					
ANR	79498	ExpressionStatement	isValidId = true	45:12:1146:1163	79491	1	True				
ANR	79499	AssignmentExpression	isValidId = true		79491	0		=			
ANR	79500	Identifier	isValidId		79491	0					
ANR	79501	Identifier	true		79491	1					
ANR	79502	ExpressionStatement	property_Reason	47:17:1195:1210	79491	2	True				
ANR	79503	Identifier	property_Reason		79491	0					
ANR	79504	ExpressionStatement	isValidReason = true	49:12:1238:1259	79491	3	True				
ANR	79505	AssignmentExpression	isValidReason = true		79491	0		=			
ANR	79506	Identifier	isValidReason		79491	0					
ANR	79507	Identifier	true		79491	1					
ANR	79508	ExpressionStatement	property_Id = arg_Id	51:20:1294:1314	79491	4	True				
ANR	79509	AssignmentExpression	property_Id = arg_Id		79491	0		=			
ANR	79510	Identifier	property_Id		79491	0					
ANR	79511	Identifier	arg_Id		79491	1					
ANR	79512	ExpressionStatement	property_Reason = arg_Reason	53:20:1349:1377	79491	5	True				
ANR	79513	AssignmentExpression	property_Reason = arg_Reason		79491	0		=			
ANR	79514	Identifier	property_Reason		79491	0					
ANR	79515	Identifier	arg_Reason		79491	1					
ANR	79516	Identifier	AviaryJob :: ControlJob :: ControlJob		79491	1					
ANR	79517	ParameterList	"AviaryCommon :: JobID * arg_Id , std :: string arg_Reason"		79491	2					
ANR	79518	Parameter	AviaryCommon :: JobID * arg_Id	40:41:1008:1034	79491	0	True				
ANR	79519	ParameterType	AviaryCommon :: JobID *		79491	0					
ANR	79520	Identifier	arg_Id		79491	1					
ANR	79521	Parameter	std :: string arg_Reason	40:69:1036:1057	79491	1	True				
ANR	79522	ParameterType	std :: string		79491	0					
ANR	79523	Identifier	arg_Reason		79491	1					
ANR	79524	CFGEntryNode	ENTRY		79491		True				
ANR	79525	CFGExitNode	EXIT		79491		True				
ANR	79526	Symbol	isValidReason		79491						
ANR	79527	Symbol	NULL		79491						
ANR	79528	Symbol	isValidId		79491						
ANR	79529	Symbol	arg_Id		79491						
ANR	79530	Symbol	true		79491						
ANR	79531	Symbol	property_Reason		79491						
ANR	79532	Symbol	arg_Reason		79491						
ANR	79533	Symbol	property_Id		79491						
ANR	79534	Function	AviaryJob :: ControlJob :: ~ControlJob	56:8:1410:1514							
ANR	79535	FunctionDef	AviaryJob :: ControlJob :: ~ControlJob ()		79534	0					
ANR	79536	CompoundStatement		57:8:1455:1514	79534	0					
ANR	79537	IfStatement	if ( property_Id )		79534	0					
ANR	79538	Condition	property_Id	58:16:1473:1483	79534	0	True				
ANR	79539	Identifier	property_Id		79534	0					
ANR	79540	Statement	delete	58:29:1486:1491	79534	1	True				
ANR	79541	ExpressionStatement	property_Id	58:36:1493:1504	79534	1	True				
ANR	79542	Identifier	property_Id		79534	0					
ANR	79543	Identifier	AviaryJob :: ControlJob :: ~ControlJob		79534	1					
ANR	79544	ParameterList			79534	2					
ANR	79545	CFGEntryNode	ENTRY		79534		True				
ANR	79546	CFGExitNode	EXIT		79534		True				
ANR	79547	Symbol	property_Id		79534						
ANR	79548	Function	AviaryJob :: ControlJob :: deserialize	63:8:1535:15361							
ANR	79549	FunctionDef	"AviaryJob :: ControlJob :: deserialize (axiom_node_t * * dp_parent , bool * dp_is_early_node_valid , bool dont_care_minoccurs)"		79548	0					
ANR	79550	CompoundStatement		65:8:1681:15361	79548	0					
ANR	79551	IdentifierDeclStatement	axiom_node_t * parent = * dp_parent ;	66:10:1693:1726	79548	0	True				
ANR	79552	IdentifierDecl	* parent = * dp_parent		79548	0					
ANR	79553	IdentifierDeclType	axiom_node_t *		79548	0					
ANR	79554	Identifier	parent		79548	1					
ANR	79555	AssignmentExpression	* parent = * dp_parent		79548	2		=			
ANR	79556	Identifier	parent		79548	0					
ANR	79557	UnaryOperationExpression	* dp_parent		79548	1					
ANR	79558	UnaryOperator	*		79548	0					
ANR	79559	Identifier	dp_parent		79548	1					
ANR	79560	IdentifierDeclStatement	bool status = AXIS2_SUCCESS ;	68:10:1749:1776	79548	1	True				
ANR	79561	IdentifierDecl	status = AXIS2_SUCCESS		79548	0					
ANR	79562	IdentifierDeclType	bool		79548	0					
ANR	79563	Identifier	status		79548	1					
ANR	79564	AssignmentExpression	status = AXIS2_SUCCESS		79548	2		=			
ANR	79565	Identifier	AXIS2_SUCCESS		79548	0					
ANR	79566	Identifier	AXIS2_SUCCESS		79548	1					
ANR	79567	IdentifierDeclStatement	const axis2_char_t * text_value = NULL ;	70:9:1799:1836	79548	2	True				
ANR	79568	IdentifierDecl	* text_value = NULL		79548	0					
ANR	79569	IdentifierDeclType	const axis2_char_t *		79548	0					
ANR	79570	Identifier	text_value		79548	1					
ANR	79571	AssignmentExpression	* text_value = NULL		79548	2		=			
ANR	79572	Identifier	NULL		79548	0					
ANR	79573	Identifier	NULL		79548	1					
ANR	79574	IdentifierDeclStatement	axutil_qname_t * mqname = NULL ;	71:9:1847:1876	79548	3	True				
ANR	79575	IdentifierDecl	* mqname = NULL		79548	0					
ANR	79576	IdentifierDeclType	axutil_qname_t *		79548	0					
ANR	79577	Identifier	mqname		79548	1					
ANR	79578	AssignmentExpression	* mqname = NULL		79548	2		=			
ANR	79579	Identifier	NULL		79548	0					
ANR	79580	Identifier	NULL		79548	1					
ANR	79581	IdentifierDeclStatement	axutil_qname_t * element_qname = NULL ;	73:12:1901:1937	79548	4	True				
ANR	79582	IdentifierDecl	* element_qname = NULL		79548	0					
ANR	79583	IdentifierDeclType	axutil_qname_t *		79548	0					
ANR	79584	Identifier	element_qname		79548	1					
ANR	79585	AssignmentExpression	* element_qname = NULL		79548	2		=			
ANR	79586	Identifier	NULL		79548	0					
ANR	79587	Identifier	NULL		79548	1					
ANR	79588	IdentifierDeclStatement	axiom_node_t * first_node = NULL ;	75:15:1968:1999	79548	5	True				
ANR	79589	IdentifierDecl	* first_node = NULL		79548	0					
ANR	79590	IdentifierDeclType	axiom_node_t *		79548	0					
ANR	79591	Identifier	first_node		79548	1					
ANR	79592	AssignmentExpression	* first_node = NULL		79548	2		=			
ANR	79593	Identifier	NULL		79548	0					
ANR	79594	Identifier	NULL		79548	1					
ANR	79595	IdentifierDeclStatement	bool is_early_node_valid = true ;	76:15:2016:2047	79548	6	True				
ANR	79596	IdentifierDecl	is_early_node_valid = true		79548	0					
ANR	79597	IdentifierDeclType	bool		79548	0					
ANR	79598	Identifier	is_early_node_valid		79548	1					
ANR	79599	AssignmentExpression	is_early_node_valid = true		79548	2		=			
ANR	79600	Identifier	true		79548	0					
ANR	79601	Identifier	true		79548	1					
ANR	79602	IdentifierDeclStatement	axiom_node_t * current_node = NULL ;	77:15:2064:2097	79548	7	True				
ANR	79603	IdentifierDecl	* current_node = NULL		79548	0					
ANR	79604	IdentifierDeclType	axiom_node_t *		79548	0					
ANR	79605	Identifier	current_node		79548	1					
ANR	79606	AssignmentExpression	* current_node = NULL		79548	2		=			
ANR	79607	Identifier	NULL		79548	0					
ANR	79608	Identifier	NULL		79548	1					
ANR	79609	IdentifierDeclStatement	axiom_element_t * current_element = NULL ;	78:15:2114:2153	79548	8	True				
ANR	79610	IdentifierDecl	* current_element = NULL		79548	0					
ANR	79611	IdentifierDeclType	axiom_element_t *		79548	0					
ANR	79612	Identifier	current_element		79548	1					
ANR	79613	AssignmentExpression	* current_element = NULL		79548	2		=			
ANR	79614	Identifier	NULL		79548	0					
ANR	79615	Identifier	NULL		79548	1					
ANR	79616	WhileStatement	"while ( parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		79548	9					
ANR	79617	Condition	"parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	81:20:2203:2284	79548	0	True				
ANR	79618	AndExpression	"parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		79548	0		&&			
ANR	79619	Identifier	parent		79548	0					
ANR	79620	EqualityExpression	"axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		79548	1		!=			
ANR	79621	CallExpression	"axiom_node_get_node_type ( parent , Environment :: getEnv ( ) )"		79548	0					
ANR	79622	Callee	axiom_node_get_node_type		79548	0					
ANR	79623	Identifier	axiom_node_get_node_type		79548	0					
ANR	79624	ArgumentList	parent		79548	1					
ANR	79625	Argument	parent		79548	0					
ANR	79626	Identifier	parent		79548	0					
ANR	79627	Argument	Environment :: getEnv ( )		79548	1					
ANR	79628	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	79629	Callee	Environment :: getEnv		79548	0					
ANR	79630	Identifier	Environment :: getEnv		79548	0					
ANR	79631	ArgumentList			79548	1					
ANR	79632	Identifier	AXIOM_ELEMENT		79548	1					
ANR	79633	CompoundStatement		18:14:619:619	79548	1					
ANR	79634	ExpressionStatement	"parent = axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"	83:18:2321:2388	79548	0	True				
ANR	79635	AssignmentExpression	"parent = axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"		79548	0		=			
ANR	79636	Identifier	parent		79548	0					
ANR	79637	CallExpression	"axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"		79548	1					
ANR	79638	Callee	axiom_node_get_next_sibling		79548	0					
ANR	79639	Identifier	axiom_node_get_next_sibling		79548	0					
ANR	79640	ArgumentList	parent		79548	1					
ANR	79641	Argument	parent		79548	0					
ANR	79642	Identifier	parent		79548	0					
ANR	79643	Argument	Environment :: getEnv ( )		79548	1					
ANR	79644	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	79645	Callee	Environment :: getEnv		79548	0					
ANR	79646	Identifier	Environment :: getEnv		79548	0					
ANR	79647	ArgumentList			79548	1					
ANR	79648	IfStatement	if ( NULL == parent )		79548	10					
ANR	79649	Condition	NULL == parent	85:18:2424:2437	79548	0	True				
ANR	79650	EqualityExpression	NULL == parent		79548	0		==			
ANR	79651	Identifier	NULL		79548	0					
ANR	79652	Identifier	parent		79548	1					
ANR	79653	CompoundStatement		22:14:772:772	79548	1					
ANR	79654	ReturnStatement	return AXIS2_FAILURE ;	87:16:2475:2495	79548	0	True				
ANR	79655	Identifier	AXIS2_FAILURE		79548	0					
ANR	79656	ExpressionStatement	"first_node = axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"	91:22:2573:2643	79548	11	True				
ANR	79657	AssignmentExpression	"first_node = axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"		79548	0		=			
ANR	79658	Identifier	first_node		79548	0					
ANR	79659	CallExpression	"axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"		79548	1					
ANR	79660	Callee	axiom_node_get_first_child		79548	0					
ANR	79661	Identifier	axiom_node_get_first_child		79548	0					
ANR	79662	ArgumentList	parent		79548	1					
ANR	79663	Argument	parent		79548	0					
ANR	79664	Identifier	parent		79548	0					
ANR	79665	Argument	Environment :: getEnv ( )		79548	1					
ANR	79666	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	79667	Callee	Environment :: getEnv		79548	0					
ANR	79668	Identifier	Environment :: getEnv		79548	0					
ANR	79669	ArgumentList			79548	1					
ANR	79670	ExpressionStatement	current_node = first_node	102:35:2906:2931	79548	12	True				
ANR	79671	AssignmentExpression	current_node = first_node		79548	0		=			
ANR	79672	Identifier	current_node		79548	0					
ANR	79673	Identifier	first_node		79548	1					
ANR	79674	ExpressionStatement	is_early_node_valid = false	103:35:2968:2995	79548	13	True				
ANR	79675	AssignmentExpression	is_early_node_valid = false		79548	0		=			
ANR	79676	Identifier	is_early_node_valid		79548	0					
ANR	79677	Identifier	false		79548	1					
ANR	79678	WhileStatement	"while ( current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		79548	14					
ANR	79679	Condition	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	106:42:3111:3204	79548	0	True				
ANR	79680	AndExpression	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		79548	0		&&			
ANR	79681	Identifier	current_node		79548	0					
ANR	79682	EqualityExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		79548	1		!=			
ANR	79683	CallExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) )"		79548	0					
ANR	79684	Callee	axiom_node_get_node_type		79548	0					
ANR	79685	Identifier	axiom_node_get_node_type		79548	0					
ANR	79686	ArgumentList	current_node		79548	1					
ANR	79687	Argument	current_node		79548	0					
ANR	79688	Identifier	current_node		79548	0					
ANR	79689	Argument	Environment :: getEnv ( )		79548	1					
ANR	79690	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	79691	Callee	Environment :: getEnv		79548	0					
ANR	79692	Identifier	Environment :: getEnv		79548	0					
ANR	79693	ArgumentList			79548	1					
ANR	79694	Identifier	AXIOM_ELEMENT		79548	1					
ANR	79695	CompoundStatement		43:36:1561:1561	79548	1					
ANR	79696	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	108:40:3285:3364	79548	0	True				
ANR	79697	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		79548	0		=			
ANR	79698	Identifier	current_node		79548	0					
ANR	79699	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		79548	1					
ANR	79700	Callee	axiom_node_get_next_sibling		79548	0					
ANR	79701	Identifier	axiom_node_get_next_sibling		79548	0					
ANR	79702	ArgumentList	current_node		79548	1					
ANR	79703	Argument	current_node		79548	0					
ANR	79704	Identifier	current_node		79548	0					
ANR	79705	Argument	Environment :: getEnv ( )		79548	1					
ANR	79706	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	79707	Callee	Environment :: getEnv		79548	0					
ANR	79708	Identifier	Environment :: getEnv		79548	0					
ANR	79709	ArgumentList			79548	1					
ANR	79710	IfStatement	if ( current_node != NULL )		79548	15					
ANR	79711	Condition	current_node != NULL	110:39:3443:3462	79548	0	True				
ANR	79712	EqualityExpression	current_node != NULL		79548	0		!=			
ANR	79713	Identifier	current_node		79548	0					
ANR	79714	Identifier	NULL		79548	1					
ANR	79715	CompoundStatement		47:36:1819:1819	79548	1					
ANR	79716	ExpressionStatement	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	112:40:3543:3644	79548	0	True				
ANR	79717	AssignmentExpression	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		79548	0		=			
ANR	79718	Identifier	current_element		79548	0					
ANR	79719	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		79548	1					
ANR	79720	CastTarget	axiom_element_t *		79548	0					
ANR	79721	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		79548	1					
ANR	79722	Callee	axiom_node_get_data_element		79548	0					
ANR	79723	Identifier	axiom_node_get_data_element		79548	0					
ANR	79724	ArgumentList	current_node		79548	1					
ANR	79725	Argument	current_node		79548	0					
ANR	79726	Identifier	current_node		79548	0					
ANR	79727	Argument	Environment :: getEnv ( )		79548	1					
ANR	79728	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	79729	Callee	Environment :: getEnv		79548	0					
ANR	79730	Identifier	Environment :: getEnv		79548	0					
ANR	79731	ArgumentList			79548	1					
ANR	79732	ExpressionStatement	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"	113:40:3686:3772	79548	1	True				
ANR	79733	AssignmentExpression	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		79548	0		=			
ANR	79734	Identifier	mqname		79548	0					
ANR	79735	CallExpression	"axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		79548	1					
ANR	79736	Callee	axiom_element_get_qname		79548	0					
ANR	79737	Identifier	axiom_element_get_qname		79548	0					
ANR	79738	ArgumentList	current_element		79548	1					
ANR	79739	Argument	current_element		79548	0					
ANR	79740	Identifier	current_element		79548	0					
ANR	79741	Argument	Environment :: getEnv ( )		79548	1					
ANR	79742	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	79743	Callee	Environment :: getEnv		79548	0					
ANR	79744	Identifier	Environment :: getEnv		79548	0					
ANR	79745	ArgumentList			79548	1					
ANR	79746	Argument	current_node		79548	2					
ANR	79747	Identifier	current_node		79548	0					
ANR	79748	ExpressionStatement	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""id"" , NULL , NULL )"	116:33:3881:3957	79548	16	True				
ANR	79749	AssignmentExpression	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""id"" , NULL , NULL )"		79548	0		=			
ANR	79750	Identifier	element_qname		79548	0					
ANR	79751	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""id"" , NULL , NULL )"		79548	1					
ANR	79752	Callee	axutil_qname_create		79548	0					
ANR	79753	Identifier	axutil_qname_create		79548	0					
ANR	79754	ArgumentList	Environment :: getEnv ( )		79548	1					
ANR	79755	Argument	Environment :: getEnv ( )		79548	0					
ANR	79756	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	79757	Callee	Environment :: getEnv		79548	0					
ANR	79758	Identifier	Environment :: getEnv		79548	0					
ANR	79759	ArgumentList			79548	1					
ANR	79760	Argument	"""id"""		79548	1					
ANR	79761	PrimaryExpression	"""id"""		79548	0					
ANR	79762	Argument	NULL		79548	2					
ANR	79763	Identifier	NULL		79548	0					
ANR	79764	Argument	NULL		79548	3					
ANR	79765	Identifier	NULL		79548	0					
ANR	79766	IfStatement	"if ( isParticle ( ) || ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) ) )"		79548	17					
ANR	79767	Condition	"isParticle ( ) || ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"	119:31:4025:4273	79548	0	True				
ANR	79768	OrExpression	"isParticle ( ) || ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"		79548	0		||			
ANR	79769	CallExpression	isParticle ( )		79548	0					
ANR	79770	Callee	isParticle		79548	0					
ANR	79771	Identifier	isParticle		79548	0					
ANR	79772	ArgumentList			79548	1					
ANR	79773	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		79548	1		&&			
ANR	79774	Identifier	current_node		79548	0					
ANR	79775	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		79548	1		&&			
ANR	79776	Identifier	current_element		79548	0					
ANR	79777	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		79548	1		||			
ANR	79778	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		79548	0					
ANR	79779	Callee	axutil_qname_equals		79548	0					
ANR	79780	Identifier	axutil_qname_equals		79548	0					
ANR	79781	ArgumentList	element_qname		79548	1					
ANR	79782	Argument	element_qname		79548	0					
ANR	79783	Identifier	element_qname		79548	0					
ANR	79784	Argument	Environment :: getEnv ( )		79548	1					
ANR	79785	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	79786	Callee	Environment :: getEnv		79548	0					
ANR	79787	Identifier	Environment :: getEnv		79548	0					
ANR	79788	ArgumentList			79548	1					
ANR	79789	Argument	mqname		79548	2					
ANR	79790	Identifier	mqname		79548	0					
ANR	79791	UnaryOperationExpression	"! axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		79548	1					
ANR	79792	UnaryOperator	!		79548	0					
ANR	79793	CallExpression	"axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		79548	1					
ANR	79794	Callee	axutil_strcmp		79548	0					
ANR	79795	Identifier	axutil_strcmp		79548	0					
ANR	79796	ArgumentList	"""id"""		79548	1					
ANR	79797	Argument	"""id"""		79548	0					
ANR	79798	PrimaryExpression	"""id"""		79548	0					
ANR	79799	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		79548	1					
ANR	79800	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		79548	0					
ANR	79801	Callee	axiom_element_get_localname		79548	0					
ANR	79802	Identifier	axiom_element_get_localname		79548	0					
ANR	79803	ArgumentList	current_element		79548	1					
ANR	79804	Argument	current_element		79548	0					
ANR	79805	Identifier	current_element		79548	0					
ANR	79806	Argument	Environment :: getEnv ( )		79548	1					
ANR	79807	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	79808	Callee	Environment :: getEnv		79548	0					
ANR	79809	Identifier	Environment :: getEnv		79548	0					
ANR	79810	ArgumentList			79548	1					
ANR	79811	CompoundStatement		63:33:3044:3100	79548	1					
ANR	79812	IfStatement	"if ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"		79548	0					
ANR	79813	Condition	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"	122:34:4339:4535	79548	0	True				
ANR	79814	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		79548	0		&&			
ANR	79815	Identifier	current_node		79548	0					
ANR	79816	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		79548	1		&&			
ANR	79817	Identifier	current_element		79548	0					
ANR	79818	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		79548	1		||			
ANR	79819	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		79548	0					
ANR	79820	Callee	axutil_qname_equals		79548	0					
ANR	79821	Identifier	axutil_qname_equals		79548	0					
ANR	79822	ArgumentList	element_qname		79548	1					
ANR	79823	Argument	element_qname		79548	0					
ANR	79824	Identifier	element_qname		79548	0					
ANR	79825	Argument	Environment :: getEnv ( )		79548	1					
ANR	79826	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	79827	Callee	Environment :: getEnv		79548	0					
ANR	79828	Identifier	Environment :: getEnv		79548	0					
ANR	79829	ArgumentList			79548	1					
ANR	79830	Argument	mqname		79548	2					
ANR	79831	Identifier	mqname		79548	0					
ANR	79832	UnaryOperationExpression	"! axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		79548	1					
ANR	79833	UnaryOperator	!		79548	0					
ANR	79834	CallExpression	"axutil_strcmp ( ""id"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		79548	1					
ANR	79835	Callee	axutil_strcmp		79548	0					
ANR	79836	Identifier	axutil_strcmp		79548	0					
ANR	79837	ArgumentList	"""id"""		79548	1					
ANR	79838	Argument	"""id"""		79548	0					
ANR	79839	PrimaryExpression	"""id"""		79548	0					
ANR	79840	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		79548	1					
ANR	79841	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		79548	0					
ANR	79842	Callee	axiom_element_get_localname		79548	0					
ANR	79843	Identifier	axiom_element_get_localname		79548	0					
ANR	79844	ArgumentList	current_element		79548	1					
ANR	79845	Argument	current_element		79548	0					
ANR	79846	Identifier	current_element		79548	0					
ANR	79847	Argument	Environment :: getEnv ( )		79548	1					
ANR	79848	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	79849	Callee	Environment :: getEnv		79548	0					
ANR	79850	Identifier	Environment :: getEnv		79548	0					
ANR	79851	ArgumentList			79548	1					
ANR	79852	CompoundStatement		59:30:2886:2886	79548	1					
ANR	79853	ExpressionStatement	is_early_node_valid = true	124:32:4602:4628	79548	0	True				
ANR	79854	AssignmentExpression	is_early_node_valid = true		79548	0		=			
ANR	79855	Identifier	is_early_node_valid		79548	0					
ANR	79856	Identifier	true		79548	1					
ANR	79857	IdentifierDeclStatement	AviaryCommon :: JobID * element = new AviaryCommon :: JobID ( ) ;	127:33:4726:4782	79548	1	True				
ANR	79858	IdentifierDecl	* element = new AviaryCommon :: JobID ( )		79548	0					
ANR	79859	IdentifierDeclType	AviaryCommon :: JobID *		79548	0					
ANR	79860	Identifier	element		79548	1					
ANR	79861	AssignmentExpression	* element = new AviaryCommon :: JobID ( )		79548	2		=			
ANR	79862	Identifier	element		79548	0					
ANR	79863	UnaryExpression	new AviaryCommon :: JobID ( )		79548	1					
ANR	79864	ExpressionStatement	"status = element -> deserialize ( & current_node , & is_early_node_valid , false )"	129:38:4823:4897	79548	2	True				
ANR	79865	AssignmentExpression	"status = element -> deserialize ( & current_node , & is_early_node_valid , false )"		79548	0		=			
ANR	79866	Identifier	status		79548	0					
ANR	79867	CallExpression	"element -> deserialize ( & current_node , & is_early_node_valid , false )"		79548	1					
ANR	79868	Callee	element -> deserialize		79548	0					
ANR	79869	PtrMemberAccess	element -> deserialize		79548	0					
ANR	79870	Identifier	element		79548	0					
ANR	79871	Identifier	deserialize		79548	1					
ANR	79872	ArgumentList	& current_node		79548	1					
ANR	79873	Argument	& current_node		79548	0					
ANR	79874	UnaryOperationExpression	& current_node		79548	0					
ANR	79875	UnaryOperator	&		79548	0					
ANR	79876	Identifier	current_node		79548	1					
ANR	79877	Argument	& is_early_node_valid		79548	1					
ANR	79878	UnaryOperationExpression	& is_early_node_valid		79548	0					
ANR	79879	UnaryOperator	&		79548	0					
ANR	79880	Identifier	is_early_node_valid		79548	1					
ANR	79881	Argument	false		79548	2					
ANR	79882	Identifier	false		79548	0					
ANR	79883	IfStatement	if ( AXIS2_FAILURE == status )		79548	3					
ANR	79884	Condition	AXIS2_FAILURE == status	130:41:4940:4962	79548	0	True				
ANR	79885	EqualityExpression	AXIS2_FAILURE == status		79548	0		==			
ANR	79886	Identifier	AXIS2_FAILURE		79548	0					
ANR	79887	Identifier	status		79548	1					
ANR	79888	CompoundStatement		67:38:3321:3321	79548	1					
ANR	79889	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in building adb object for element id"" )"	132:42:5047:5152	79548	0	True				
ANR	79890	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in building adb object for element id"" )"		79548	0					
ANR	79891	Callee	WSF_LOG_ERROR_MSG		79548	0					
ANR	79892	Identifier	WSF_LOG_ERROR_MSG		79548	0					
ANR	79893	ArgumentList	Environment :: getEnv ( ) -> log		79548	1					
ANR	79894	Argument	Environment :: getEnv ( ) -> log		79548	0					
ANR	79895	PtrMemberAccess	Environment :: getEnv ( ) -> log		79548	0					
ANR	79896	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	79897	Callee	Environment :: getEnv		79548	0					
ANR	79898	Identifier	Environment :: getEnv		79548	0					
ANR	79899	ArgumentList			79548	1					
ANR	79900	Identifier	log		79548	1					
ANR	79901	Argument	WSF_LOG_SI		79548	1					
ANR	79902	Identifier	WSF_LOG_SI		79548	0					
ANR	79903	Argument	"""failed in building adb object for element id"""		79548	2					
ANR	79904	PrimaryExpression	"""failed in building adb object for element id"""		79548	0					
ANR	79905	ElseStatement	else		79548	0					
ANR	79906	CompoundStatement		71:38:3593:3593	79548	0					
ANR	79907	ExpressionStatement	status = setId ( element )	136:42:5319:5342	79548	0	True				
ANR	79908	AssignmentExpression	status = setId ( element )		79548	0		=			
ANR	79909	Identifier	status		79548	0					
ANR	79910	CallExpression	setId ( element )		79548	1					
ANR	79911	Callee	setId		79548	0					
ANR	79912	Identifier	setId		79548	0					
ANR	79913	ArgumentList	element		79548	1					
ANR	79914	Argument	element		79548	0					
ANR	79915	Identifier	element		79548	0					
ANR	79916	IfStatement	if ( AXIS2_FAILURE == status )		79548	4					
ANR	79917	Condition	AXIS2_FAILURE == status	139:36:5457:5480	79548	0	True				
ANR	79918	EqualityExpression	AXIS2_FAILURE == status		79548	0		==			
ANR	79919	Identifier	AXIS2_FAILURE		79548	0					
ANR	79920	Identifier	status		79548	1					
ANR	79921	CompoundStatement		76:33:3834:3834	79548	1					
ANR	79922	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for id "" )"	141:37:5555:5650	79548	0	True				
ANR	79923	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for id "" )"		79548	0					
ANR	79924	Callee	WSF_LOG_ERROR_MSG		79548	0					
ANR	79925	Identifier	WSF_LOG_ERROR_MSG		79548	0					
ANR	79926	ArgumentList	Environment :: getEnv ( ) -> log		79548	1					
ANR	79927	Argument	Environment :: getEnv ( ) -> log		79548	0					
ANR	79928	PtrMemberAccess	Environment :: getEnv ( ) -> log		79548	0					
ANR	79929	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	79930	Callee	Environment :: getEnv		79548	0					
ANR	79931	Identifier	Environment :: getEnv		79548	0					
ANR	79932	ArgumentList			79548	1					
ANR	79933	Identifier	log		79548	1					
ANR	79934	Argument	WSF_LOG_SI		79548	1					
ANR	79935	Identifier	WSF_LOG_SI		79548	0					
ANR	79936	Argument	"""failed in setting the value for id """		79548	2					
ANR	79937	PrimaryExpression	"""failed in setting the value for id """		79548	0					
ANR	79938	IfStatement	if ( element_qname )		79548	1					
ANR	79939	Condition	element_qname	142:40:5692:5704	79548	0	True				
ANR	79940	Identifier	element_qname		79548	0					
ANR	79941	CompoundStatement		79:37:4062:4062	79548	1					
ANR	79942	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	144:41:5787:5842	79548	0	True				
ANR	79943	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		79548	0					
ANR	79944	Callee	axutil_qname_free		79548	0					
ANR	79945	Identifier	axutil_qname_free		79548	0					
ANR	79946	ArgumentList	element_qname		79548	1					
ANR	79947	Argument	element_qname		79548	0					
ANR	79948	Identifier	element_qname		79548	0					
ANR	79949	Argument	Environment :: getEnv ( )		79548	1					
ANR	79950	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	79951	Callee	Environment :: getEnv		79548	0					
ANR	79952	Identifier	Environment :: getEnv		79548	0					
ANR	79953	ArgumentList			79548	1					
ANR	79954	ReturnStatement	return AXIS2_FAILURE ;	146:37:5920:5940	79548	2	True				
ANR	79955	Identifier	AXIS2_FAILURE		79548	0					
ANR	79956	ElseStatement	else		79548	0					
ANR	79957	IfStatement	if ( ! dont_care_minoccurs )		79548	0					
ANR	79958	Condition	! dont_care_minoccurs	150:38:6075:6094	79548	0	True				
ANR	79959	UnaryOperationExpression	! dont_care_minoccurs		79548	0					
ANR	79960	UnaryOperator	!		79548	0					
ANR	79961	Identifier	dont_care_minoccurs		79548	1					
ANR	79962	CompoundStatement		87:30:4445:4445	79548	1					
ANR	79963	IfStatement	if ( element_qname )		79548	0					
ANR	79964	Condition	element_qname	152:37:6166:6178	79548	0	True				
ANR	79965	Identifier	element_qname		79548	0					
ANR	79966	CompoundStatement		89:34:4533:4533	79548	1					
ANR	79967	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	154:38:6255:6310	79548	0	True				
ANR	79968	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		79548	0					
ANR	79969	Callee	axutil_qname_free		79548	0					
ANR	79970	Identifier	axutil_qname_free		79548	0					
ANR	79971	ArgumentList	element_qname		79548	1					
ANR	79972	Argument	element_qname		79548	0					
ANR	79973	Identifier	element_qname		79548	0					
ANR	79974	Argument	Environment :: getEnv ( )		79548	1					
ANR	79975	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	79976	Callee	Environment :: getEnv		79548	0					
ANR	79977	Identifier	Environment :: getEnv		79548	0					
ANR	79978	ArgumentList			79548	1					
ANR	79979	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""non nillable or minOuccrs != 0 element id missing"" )"	157:6:6424:6533	79548	1	True				
ANR	79980	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""non nillable or minOuccrs != 0 element id missing"" )"		79548	0					
ANR	79981	Callee	WSF_LOG_ERROR_MSG		79548	0					
ANR	79982	Identifier	WSF_LOG_ERROR_MSG		79548	0					
ANR	79983	ArgumentList	Environment :: getEnv ( ) -> log		79548	1					
ANR	79984	Argument	Environment :: getEnv ( ) -> log		79548	0					
ANR	79985	PtrMemberAccess	Environment :: getEnv ( ) -> log		79548	0					
ANR	79986	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	79987	Callee	Environment :: getEnv		79548	0					
ANR	79988	Identifier	Environment :: getEnv		79548	0					
ANR	79989	ArgumentList			79548	1					
ANR	79990	Identifier	log		79548	1					
ANR	79991	Argument	WSF_LOG_SI		79548	1					
ANR	79992	Identifier	WSF_LOG_SI		79548	0					
ANR	79993	Argument	"""non nillable or minOuccrs != 0 element id missing"""		79548	2					
ANR	79994	PrimaryExpression	"""non nillable or minOuccrs != 0 element id missing"""		79548	0					
ANR	79995	ReturnStatement	return AXIS2_FAILURE ;	158:34:6569:6589	79548	2	True				
ANR	79996	Identifier	AXIS2_FAILURE		79548	0					
ANR	79997	IfStatement	if ( element_qname )		79548	18					
ANR	79998	Condition	element_qname	161:21:6672:6684	79548	0	True				
ANR	79999	Identifier	element_qname		79548	0					
ANR	80000	CompoundStatement		98:18:5023:5023	79548	1					
ANR	80001	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	163:21:6728:6783	79548	0	True				
ANR	80002	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		79548	0					
ANR	80003	Callee	axutil_qname_free		79548	0					
ANR	80004	Identifier	axutil_qname_free		79548	0					
ANR	80005	ArgumentList	element_qname		79548	1					
ANR	80006	Argument	element_qname		79548	0					
ANR	80007	Identifier	element_qname		79548	0					
ANR	80008	Argument	Environment :: getEnv ( )		79548	1					
ANR	80009	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	80010	Callee	Environment :: getEnv		79548	0					
ANR	80011	Identifier	Environment :: getEnv		79548	0					
ANR	80012	ArgumentList			79548	1					
ANR	80013	ExpressionStatement	element_qname = NULL	164:21:6806:6826	79548	1	True				
ANR	80014	AssignmentExpression	element_qname = NULL		79548	0		=			
ANR	80015	Identifier	element_qname		79548	0					
ANR	80016	Identifier	NULL		79548	1					
ANR	80017	IfStatement	if ( current_node != NULL && is_early_node_valid )		79548	19					
ANR	80018	Condition	current_node != NULL && is_early_node_valid	180:38:7324:7366	79548	0	True				
ANR	80019	AndExpression	current_node != NULL && is_early_node_valid		79548	0		&&			
ANR	80020	EqualityExpression	current_node != NULL		79548	0		!=			
ANR	80021	Identifier	current_node		79548	0					
ANR	80022	Identifier	NULL		79548	1					
ANR	80023	Identifier	is_early_node_valid		79548	1					
ANR	80024	CompoundStatement		117:35:5722:5722	79548	1					
ANR	80025	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	182:39:7445:7524	79548	0	True				
ANR	80026	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		79548	0		=			
ANR	80027	Identifier	current_node		79548	0					
ANR	80028	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		79548	1					
ANR	80029	Callee	axiom_node_get_next_sibling		79548	0					
ANR	80030	Identifier	axiom_node_get_next_sibling		79548	0					
ANR	80031	ArgumentList	current_node		79548	1					
ANR	80032	Argument	current_node		79548	0					
ANR	80033	Identifier	current_node		79548	0					
ANR	80034	Argument	Environment :: getEnv ( )		79548	1					
ANR	80035	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	80036	Callee	Environment :: getEnv		79548	0					
ANR	80037	Identifier	Environment :: getEnv		79548	0					
ANR	80038	ArgumentList			79548	1					
ANR	80039	WhileStatement	"while ( current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		79548	1					
ANR	80040	Condition	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	185:46:7652:7745	79548	0	True				
ANR	80041	AndExpression	"current_node && axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		79548	0		&&			
ANR	80042	Identifier	current_node		79548	0					
ANR	80043	EqualityExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		79548	1		!=			
ANR	80044	CallExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) )"		79548	0					
ANR	80045	Callee	axiom_node_get_node_type		79548	0					
ANR	80046	Identifier	axiom_node_get_node_type		79548	0					
ANR	80047	ArgumentList	current_node		79548	1					
ANR	80048	Argument	current_node		79548	0					
ANR	80049	Identifier	current_node		79548	0					
ANR	80050	Argument	Environment :: getEnv ( )		79548	1					
ANR	80051	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	80052	Callee	Environment :: getEnv		79548	0					
ANR	80053	Identifier	Environment :: getEnv		79548	0					
ANR	80054	ArgumentList			79548	1					
ANR	80055	Identifier	AXIOM_ELEMENT		79548	1					
ANR	80056	CompoundStatement		122:40:6106:6106	79548	1					
ANR	80057	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	187:44:7834:7913	79548	0	True				
ANR	80058	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		79548	0		=			
ANR	80059	Identifier	current_node		79548	0					
ANR	80060	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		79548	1					
ANR	80061	Callee	axiom_node_get_next_sibling		79548	0					
ANR	80062	Identifier	axiom_node_get_next_sibling		79548	0					
ANR	80063	ArgumentList	current_node		79548	1					
ANR	80064	Argument	current_node		79548	0					
ANR	80065	Identifier	current_node		79548	0					
ANR	80066	Argument	Environment :: getEnv ( )		79548	1					
ANR	80067	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	80068	Callee	Environment :: getEnv		79548	0					
ANR	80069	Identifier	Environment :: getEnv		79548	0					
ANR	80070	ArgumentList			79548	1					
ANR	80071	IfStatement	if ( current_node != NULL )		79548	2					
ANR	80072	Condition	current_node != NULL	189:43:8000:8019	79548	0	True				
ANR	80073	EqualityExpression	current_node != NULL		79548	0		!=			
ANR	80074	Identifier	current_node		79548	0					
ANR	80075	Identifier	NULL		79548	1					
ANR	80076	CompoundStatement		126:40:6380:6380	79548	1					
ANR	80077	ExpressionStatement	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	191:44:8108:8209	79548	0	True				
ANR	80078	AssignmentExpression	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		79548	0		=			
ANR	80079	Identifier	current_element		79548	0					
ANR	80080	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		79548	1					
ANR	80081	CastTarget	axiom_element_t *		79548	0					
ANR	80082	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		79548	1					
ANR	80083	Callee	axiom_node_get_data_element		79548	0					
ANR	80084	Identifier	axiom_node_get_data_element		79548	0					
ANR	80085	ArgumentList	current_node		79548	1					
ANR	80086	Argument	current_node		79548	0					
ANR	80087	Identifier	current_node		79548	0					
ANR	80088	Argument	Environment :: getEnv ( )		79548	1					
ANR	80089	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	80090	Callee	Environment :: getEnv		79548	0					
ANR	80091	Identifier	Environment :: getEnv		79548	0					
ANR	80092	ArgumentList			79548	1					
ANR	80093	ExpressionStatement	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"	192:44:8255:8341	79548	1	True				
ANR	80094	AssignmentExpression	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		79548	0		=			
ANR	80095	Identifier	mqname		79548	0					
ANR	80096	CallExpression	"axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		79548	1					
ANR	80097	Callee	axiom_element_get_qname		79548	0					
ANR	80098	Identifier	axiom_element_get_qname		79548	0					
ANR	80099	ArgumentList	current_element		79548	1					
ANR	80100	Argument	current_element		79548	0					
ANR	80101	Identifier	current_element		79548	0					
ANR	80102	Argument	Environment :: getEnv ( )		79548	1					
ANR	80103	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	80104	Callee	Environment :: getEnv		79548	0					
ANR	80105	Identifier	Environment :: getEnv		79548	0					
ANR	80106	ArgumentList			79548	1					
ANR	80107	Argument	current_node		79548	2					
ANR	80108	Identifier	current_node		79548	0					
ANR	80109	ExpressionStatement	is_early_node_valid = false	196:35:8497:8524	79548	20	True				
ANR	80110	AssignmentExpression	is_early_node_valid = false		79548	0		=			
ANR	80111	Identifier	is_early_node_valid		79548	0					
ANR	80112	Identifier	false		79548	1					
ANR	80113	ExpressionStatement	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""reason"" , NULL , NULL )"	198:33:8593:8673	79548	21	True				
ANR	80114	AssignmentExpression	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""reason"" , NULL , NULL )"		79548	0		=			
ANR	80115	Identifier	element_qname		79548	0					
ANR	80116	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""reason"" , NULL , NULL )"		79548	1					
ANR	80117	Callee	axutil_qname_create		79548	0					
ANR	80118	Identifier	axutil_qname_create		79548	0					
ANR	80119	ArgumentList	Environment :: getEnv ( )		79548	1					
ANR	80120	Argument	Environment :: getEnv ( )		79548	0					
ANR	80121	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	80122	Callee	Environment :: getEnv		79548	0					
ANR	80123	Identifier	Environment :: getEnv		79548	0					
ANR	80124	ArgumentList			79548	1					
ANR	80125	Argument	"""reason"""		79548	1					
ANR	80126	PrimaryExpression	"""reason"""		79548	0					
ANR	80127	Argument	NULL		79548	2					
ANR	80128	Identifier	NULL		79548	0					
ANR	80129	Argument	NULL		79548	3					
ANR	80130	Identifier	NULL		79548	0					
ANR	80131	IfStatement	"if ( ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""reason"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) ) )"		79548	22					
ANR	80132	Condition	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""reason"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"	202:32:8775:8977	79548	0	True				
ANR	80133	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""reason"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		79548	0		&&			
ANR	80134	Identifier	current_node		79548	0					
ANR	80135	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""reason"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		79548	1		&&			
ANR	80136	Identifier	current_element		79548	0					
ANR	80137	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""reason"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		79548	1		||			
ANR	80138	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		79548	0					
ANR	80139	Callee	axutil_qname_equals		79548	0					
ANR	80140	Identifier	axutil_qname_equals		79548	0					
ANR	80141	ArgumentList	element_qname		79548	1					
ANR	80142	Argument	element_qname		79548	0					
ANR	80143	Identifier	element_qname		79548	0					
ANR	80144	Argument	Environment :: getEnv ( )		79548	1					
ANR	80145	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	80146	Callee	Environment :: getEnv		79548	0					
ANR	80147	Identifier	Environment :: getEnv		79548	0					
ANR	80148	ArgumentList			79548	1					
ANR	80149	Argument	mqname		79548	2					
ANR	80150	Identifier	mqname		79548	0					
ANR	80151	UnaryOperationExpression	"! axutil_strcmp ( ""reason"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		79548	1					
ANR	80152	UnaryOperator	!		79548	0					
ANR	80153	CallExpression	"axutil_strcmp ( ""reason"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		79548	1					
ANR	80154	Callee	axutil_strcmp		79548	0					
ANR	80155	Identifier	axutil_strcmp		79548	0					
ANR	80156	ArgumentList	"""reason"""		79548	1					
ANR	80157	Argument	"""reason"""		79548	0					
ANR	80158	PrimaryExpression	"""reason"""		79548	0					
ANR	80159	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		79548	1					
ANR	80160	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		79548	0					
ANR	80161	Callee	axiom_element_get_localname		79548	0					
ANR	80162	Identifier	axiom_element_get_localname		79548	0					
ANR	80163	ArgumentList	current_element		79548	1					
ANR	80164	Argument	current_element		79548	0					
ANR	80165	Identifier	current_element		79548	0					
ANR	80166	Argument	Environment :: getEnv ( )		79548	1					
ANR	80167	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	80168	Callee	Environment :: getEnv		79548	0					
ANR	80169	Identifier	Environment :: getEnv		79548	0					
ANR	80170	ArgumentList			79548	1					
ANR	80171	CompoundStatement		139:27:7325:7325	79548	1					
ANR	80172	IfStatement	"if ( current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""reason"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) ) )"		79548	0					
ANR	80173	Condition	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""reason"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"	204:34:9043:9243	79548	0	True				
ANR	80174	AndExpression	"current_node && current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""reason"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		79548	0		&&			
ANR	80175	Identifier	current_node		79548	0					
ANR	80176	AndExpression	"current_element && ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""reason"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		79548	1		&&			
ANR	80177	Identifier	current_element		79548	0					
ANR	80178	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""reason"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		79548	1		||			
ANR	80179	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		79548	0					
ANR	80180	Callee	axutil_qname_equals		79548	0					
ANR	80181	Identifier	axutil_qname_equals		79548	0					
ANR	80182	ArgumentList	element_qname		79548	1					
ANR	80183	Argument	element_qname		79548	0					
ANR	80184	Identifier	element_qname		79548	0					
ANR	80185	Argument	Environment :: getEnv ( )		79548	1					
ANR	80186	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	80187	Callee	Environment :: getEnv		79548	0					
ANR	80188	Identifier	Environment :: getEnv		79548	0					
ANR	80189	ArgumentList			79548	1					
ANR	80190	Argument	mqname		79548	2					
ANR	80191	Identifier	mqname		79548	0					
ANR	80192	UnaryOperationExpression	"! axutil_strcmp ( ""reason"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		79548	1					
ANR	80193	UnaryOperator	!		79548	0					
ANR	80194	CallExpression	"axutil_strcmp ( ""reason"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		79548	1					
ANR	80195	Callee	axutil_strcmp		79548	0					
ANR	80196	Identifier	axutil_strcmp		79548	0					
ANR	80197	ArgumentList	"""reason"""		79548	1					
ANR	80198	Argument	"""reason"""		79548	0					
ANR	80199	PrimaryExpression	"""reason"""		79548	0					
ANR	80200	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		79548	1					
ANR	80201	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		79548	0					
ANR	80202	Callee	axiom_element_get_localname		79548	0					
ANR	80203	Identifier	axiom_element_get_localname		79548	0					
ANR	80204	ArgumentList	current_element		79548	1					
ANR	80205	Argument	current_element		79548	0					
ANR	80206	Identifier	current_element		79548	0					
ANR	80207	Argument	Environment :: getEnv ( )		79548	1					
ANR	80208	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	80209	Callee	Environment :: getEnv		79548	0					
ANR	80210	Identifier	Environment :: getEnv		79548	0					
ANR	80211	ArgumentList			79548	1					
ANR	80212	CompoundStatement		141:30:7594:7594	79548	1					
ANR	80213	ExpressionStatement	is_early_node_valid = true	206:32:9310:9336	79548	0	True				
ANR	80214	AssignmentExpression	is_early_node_valid = true		79548	0		=			
ANR	80215	Identifier	is_early_node_valid		79548	0					
ANR	80216	Identifier	true		79548	1					
ANR	80217	ExpressionStatement	"text_value = axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"	210:38:9473:9562	79548	1	True				
ANR	80218	AssignmentExpression	"text_value = axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"		79548	0		=			
ANR	80219	Identifier	text_value		79548	0					
ANR	80220	CallExpression	"axiom_element_get_text ( current_element , Environment :: getEnv ( ) , current_node )"		79548	1					
ANR	80221	Callee	axiom_element_get_text		79548	0					
ANR	80222	Identifier	axiom_element_get_text		79548	0					
ANR	80223	ArgumentList	current_element		79548	1					
ANR	80224	Argument	current_element		79548	0					
ANR	80225	Identifier	current_element		79548	0					
ANR	80226	Argument	Environment :: getEnv ( )		79548	1					
ANR	80227	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	80228	Callee	Environment :: getEnv		79548	0					
ANR	80229	Identifier	Environment :: getEnv		79548	0					
ANR	80230	ArgumentList			79548	1					
ANR	80231	Argument	current_node		79548	2					
ANR	80232	Identifier	current_node		79548	0					
ANR	80233	IfStatement	if ( text_value != NULL )		79548	2					
ANR	80234	Condition	text_value != NULL	211:41:9605:9622	79548	0	True				
ANR	80235	EqualityExpression	text_value != NULL		79548	0		!=			
ANR	80236	Identifier	text_value		79548	0					
ANR	80237	Identifier	NULL		79548	1					
ANR	80238	CompoundStatement		148:38:7981:7981	79548	1					
ANR	80239	ExpressionStatement	status = setReason ( text_value )	213:44:9709:9739	79548	0	True				
ANR	80240	AssignmentExpression	status = setReason ( text_value )		79548	0		=			
ANR	80241	Identifier	status		79548	0					
ANR	80242	CallExpression	setReason ( text_value )		79548	1					
ANR	80243	Callee	setReason		79548	0					
ANR	80244	Identifier	setReason		79548	0					
ANR	80245	ArgumentList	text_value		79548	1					
ANR	80246	Argument	text_value		79548	0					
ANR	80247	Identifier	text_value		79548	0					
ANR	80248	ElseStatement	else		79548	0					
ANR	80249	CompoundStatement		165:44:9167:9203	79548	0					
ANR	80250	IdentifierDeclStatement	axiom_attribute_t * the_attri = NULL ;	227:44:10690:10725	79548	0	True				
ANR	80251	IdentifierDecl	* the_attri = NULL		79548	0					
ANR	80252	IdentifierDeclType	axiom_attribute_t *		79548	0					
ANR	80253	Identifier	the_attri		79548	1					
ANR	80254	AssignmentExpression	* the_attri = NULL		79548	2		=			
ANR	80255	Identifier	NULL		79548	0					
ANR	80256	Identifier	NULL		79548	1					
ANR	80257	IdentifierDeclStatement	axis2_char_t * attrib_text = NULL ;	228:44:10771:10803	79548	1	True				
ANR	80258	IdentifierDecl	* attrib_text = NULL		79548	0					
ANR	80259	IdentifierDeclType	axis2_char_t *		79548	0					
ANR	80260	Identifier	attrib_text		79548	1					
ANR	80261	AssignmentExpression	* attrib_text = NULL		79548	2		=			
ANR	80262	Identifier	NULL		79548	0					
ANR	80263	Identifier	NULL		79548	1					
ANR	80264	IdentifierDeclStatement	axutil_hash_t * attribute_hash = NULL ;	229:44:10849:10885	79548	2	True				
ANR	80265	IdentifierDecl	* attribute_hash = NULL		79548	0					
ANR	80266	IdentifierDeclType	axutil_hash_t *		79548	0					
ANR	80267	Identifier	attribute_hash		79548	1					
ANR	80268	AssignmentExpression	* attribute_hash = NULL		79548	2		=			
ANR	80269	Identifier	NULL		79548	0					
ANR	80270	Identifier	NULL		79548	1					
ANR	80271	ExpressionStatement	"attribute_hash = axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"	231:44:10932:11021	79548	3	True				
ANR	80272	AssignmentExpression	"attribute_hash = axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"		79548	0		=			
ANR	80273	Identifier	attribute_hash		79548	0					
ANR	80274	CallExpression	"axiom_element_get_all_attributes ( current_element , Environment :: getEnv ( ) )"		79548	1					
ANR	80275	Callee	axiom_element_get_all_attributes		79548	0					
ANR	80276	Identifier	axiom_element_get_all_attributes		79548	0					
ANR	80277	ArgumentList	current_element		79548	1					
ANR	80278	Argument	current_element		79548	0					
ANR	80279	Identifier	current_element		79548	0					
ANR	80280	Argument	Environment :: getEnv ( )		79548	1					
ANR	80281	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	80282	Callee	Environment :: getEnv		79548	0					
ANR	80283	Identifier	Environment :: getEnv		79548	0					
ANR	80284	ArgumentList			79548	1					
ANR	80285	ExpressionStatement	attrib_text = NULL	233:44:11068:11086	79548	4	True				
ANR	80286	AssignmentExpression	attrib_text = NULL		79548	0		=			
ANR	80287	Identifier	attrib_text		79548	0					
ANR	80288	Identifier	NULL		79548	1					
ANR	80289	IfStatement	if ( attribute_hash )		79548	5					
ANR	80290	Condition	attribute_hash	234:47:11135:11148	79548	0	True				
ANR	80291	Identifier	attribute_hash		79548	0					
ANR	80292	CompoundStatement		174:49:9698:9713	79548	1					
ANR	80293	IdentifierDeclStatement	axutil_hash_index_t * hi ;	236:49:11246:11269	79548	0	True				
ANR	80294	IdentifierDecl	* hi		79548	0					
ANR	80295	IdentifierDeclType	axutil_hash_index_t *		79548	0					
ANR	80296	Identifier	hi		79548	1					
ANR	80297	IdentifierDeclStatement	void * val ;	237:49:11320:11329	79548	1	True				
ANR	80298	IdentifierDecl	* val		79548	0					
ANR	80299	IdentifierDeclType	void *		79548	0					
ANR	80300	Identifier	val		79548	1					
ANR	80301	IdentifierDeclStatement	const void * key ;	238:49:11380:11395	79548	2	True				
ANR	80302	IdentifierDecl	* key		79548	0					
ANR	80303	IdentifierDeclType	const void *		79548	0					
ANR	80304	Identifier	key		79548	1					
ANR	80305	ForStatement	"for ( hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) ) ; hi ; hi = axutil_hash_next ( Environment :: getEnv ( ) , hi ) )"		79548	3					
ANR	80306	ForInit	"hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) ) ;"	240:54:11492:11553	79548	0	True				
ANR	80307	AssignmentExpression	"hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) )"		79548	0		=			
ANR	80308	Identifier	hi		79548	0					
ANR	80309	CallExpression	"axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) )"		79548	1					
ANR	80310	Callee	axutil_hash_first		79548	0					
ANR	80311	Identifier	axutil_hash_first		79548	0					
ANR	80312	ArgumentList	attribute_hash		79548	1					
ANR	80313	Argument	attribute_hash		79548	0					
ANR	80314	Identifier	attribute_hash		79548	0					
ANR	80315	Argument	Environment :: getEnv ( )		79548	1					
ANR	80316	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	80317	Callee	Environment :: getEnv		79548	0					
ANR	80318	Identifier	Environment :: getEnv		79548	0					
ANR	80319	ArgumentList			79548	1					
ANR	80320	Condition	hi	240:117:11555:11556	79548	1	True				
ANR	80321	Identifier	hi		79548	0					
ANR	80322	AssignmentExpression	"hi = axutil_hash_next ( Environment :: getEnv ( ) , hi )"	240:121:11559:11606	79548	2	True	=			
ANR	80323	Identifier	hi		79548	0					
ANR	80324	CallExpression	"axutil_hash_next ( Environment :: getEnv ( ) , hi )"		79548	1					
ANR	80325	Callee	axutil_hash_next		79548	0					
ANR	80326	Identifier	axutil_hash_next		79548	0					
ANR	80327	ArgumentList	Environment :: getEnv ( )		79548	1					
ANR	80328	Argument	Environment :: getEnv ( )		79548	0					
ANR	80329	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	80330	Callee	Environment :: getEnv		79548	0					
ANR	80331	Identifier	Environment :: getEnv		79548	0					
ANR	80332	ArgumentList			79548	1					
ANR	80333	Argument	hi		79548	1					
ANR	80334	Identifier	hi		79548	0					
ANR	80335	CompoundStatement		177:49:9976:9976	79548	3					
ANR	80336	ExpressionStatement	"axutil_hash_this ( hi , & key , NULL , & val )"	242:53:11713:11751	79548	0	True				
ANR	80337	CallExpression	"axutil_hash_this ( hi , & key , NULL , & val )"		79548	0					
ANR	80338	Callee	axutil_hash_this		79548	0					
ANR	80339	Identifier	axutil_hash_this		79548	0					
ANR	80340	ArgumentList	hi		79548	1					
ANR	80341	Argument	hi		79548	0					
ANR	80342	Identifier	hi		79548	0					
ANR	80343	Argument	& key		79548	1					
ANR	80344	UnaryOperationExpression	& key		79548	0					
ANR	80345	UnaryOperator	&		79548	0					
ANR	80346	Identifier	key		79548	1					
ANR	80347	Argument	NULL		79548	2					
ANR	80348	Identifier	NULL		79548	0					
ANR	80349	Argument	& val		79548	3					
ANR	80350	UnaryOperationExpression	& val		79548	0					
ANR	80351	UnaryOperator	&		79548	0					
ANR	80352	Identifier	val		79548	1					
ANR	80353	IfStatement	"if ( strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" ) )"		79548	1					
ANR	80354	Condition	"strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" )"	244:56:11863:11937	79548	0	True				
ANR	80355	CallExpression	"strstr ( ( axis2_char_t * ) key , ""nil|http://www.w3.org/2001/XMLSchema-instance"" )"		79548	0					
ANR	80356	Callee	strstr		79548	0					
ANR	80357	Identifier	strstr		79548	0					
ANR	80358	ArgumentList	( axis2_char_t * ) key		79548	1					
ANR	80359	Argument	( axis2_char_t * ) key		79548	0					
ANR	80360	CastExpression	( axis2_char_t * ) key		79548	0					
ANR	80361	CastTarget	axis2_char_t *		79548	0					
ANR	80362	Identifier	key		79548	1					
ANR	80363	Argument	"""nil|http://www.w3.org/2001/XMLSchema-instance"""		79548	1					
ANR	80364	PrimaryExpression	"""nil|http://www.w3.org/2001/XMLSchema-instance"""		79548	0					
ANR	80365	CompoundStatement		181:53:10311:10311	79548	1					
ANR	80366	ExpressionStatement	the_attri = ( axiom_attribute_t * ) val	246:57:12052:12087	79548	0	True				
ANR	80367	AssignmentExpression	the_attri = ( axiom_attribute_t * ) val		79548	0		=			
ANR	80368	Identifier	the_attri		79548	0					
ANR	80369	CastExpression	( axiom_attribute_t * ) val		79548	1					
ANR	80370	CastTarget	axiom_attribute_t *		79548	0					
ANR	80371	Identifier	val		79548	1					
ANR	80372	BreakStatement	break ;	247:57:12146:12151	79548	1	True				
ANR	80373	IfStatement	if ( the_attri )		79548	6					
ANR	80374	Condition	the_attri	252:47:12353:12361	79548	0	True				
ANR	80375	Identifier	the_attri		79548	0					
ANR	80376	CompoundStatement		189:44:10726:10726	79548	1					
ANR	80377	ExpressionStatement	"attrib_text = axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"	254:48:12458:12531	79548	0	True				
ANR	80378	AssignmentExpression	"attrib_text = axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"		79548	0		=			
ANR	80379	Identifier	attrib_text		79548	0					
ANR	80380	CallExpression	"axiom_attribute_get_value ( the_attri , Environment :: getEnv ( ) )"		79548	1					
ANR	80381	Callee	axiom_attribute_get_value		79548	0					
ANR	80382	Identifier	axiom_attribute_get_value		79548	0					
ANR	80383	ArgumentList	the_attri		79548	1					
ANR	80384	Argument	the_attri		79548	0					
ANR	80385	Identifier	the_attri		79548	0					
ANR	80386	Argument	Environment :: getEnv ( )		79548	1					
ANR	80387	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	80388	Callee	Environment :: getEnv		79548	0					
ANR	80389	Identifier	Environment :: getEnv		79548	0					
ANR	80390	ArgumentList			79548	1					
ANR	80391	ElseStatement	else		79548	0					
ANR	80392	CompoundStatement		193:44:10990:10990	79548	0					
ANR	80393	ExpressionStatement	"attrib_text = axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"	259:48:12911:13013	79548	0	True				
ANR	80394	AssignmentExpression	"attrib_text = axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"		79548	0		=			
ANR	80395	Identifier	attrib_text		79548	0					
ANR	80396	CallExpression	"axiom_element_get_attribute_value_by_name ( current_element , Environment :: getEnv ( ) , ""nil"" )"		79548	1					
ANR	80397	Callee	axiom_element_get_attribute_value_by_name		79548	0					
ANR	80398	Identifier	axiom_element_get_attribute_value_by_name		79548	0					
ANR	80399	ArgumentList	current_element		79548	1					
ANR	80400	Argument	current_element		79548	0					
ANR	80401	Identifier	current_element		79548	0					
ANR	80402	Argument	Environment :: getEnv ( )		79548	1					
ANR	80403	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	80404	Callee	Environment :: getEnv		79548	0					
ANR	80405	Identifier	Environment :: getEnv		79548	0					
ANR	80406	ArgumentList			79548	1					
ANR	80407	Argument	"""nil"""		79548	2					
ANR	80408	PrimaryExpression	"""nil"""		79548	0					
ANR	80409	IfStatement	"if ( attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" ) )"		79548	7					
ANR	80410	Condition	"attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" )"	262:47:13109:13159	79548	0	True				
ANR	80411	AndExpression	"attrib_text && 0 == axutil_strcmp ( attrib_text , ""1"" )"		79548	0		&&			
ANR	80412	Identifier	attrib_text		79548	0					
ANR	80413	EqualityExpression	"0 == axutil_strcmp ( attrib_text , ""1"" )"		79548	1		==			
ANR	80414	PrimaryExpression	0		79548	0					
ANR	80415	CallExpression	"axutil_strcmp ( attrib_text , ""1"" )"		79548	1					
ANR	80416	Callee	axutil_strcmp		79548	0					
ANR	80417	Identifier	axutil_strcmp		79548	0					
ANR	80418	ArgumentList	attrib_text		79548	1					
ANR	80419	Argument	attrib_text		79548	0					
ANR	80420	Identifier	attrib_text		79548	0					
ANR	80421	Argument	"""1"""		79548	1					
ANR	80422	PrimaryExpression	"""1"""		79548	0					
ANR	80423	CompoundStatement		199:44:11524:11524	79548	1					
ANR	80424	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""NULL value is set to a non nillable element reason"" )"	264:48:13256:13367	79548	0	True				
ANR	80425	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""NULL value is set to a non nillable element reason"" )"		79548	0					
ANR	80426	Callee	WSF_LOG_ERROR_MSG		79548	0					
ANR	80427	Identifier	WSF_LOG_ERROR_MSG		79548	0					
ANR	80428	ArgumentList	Environment :: getEnv ( ) -> log		79548	1					
ANR	80429	Argument	Environment :: getEnv ( ) -> log		79548	0					
ANR	80430	PtrMemberAccess	Environment :: getEnv ( ) -> log		79548	0					
ANR	80431	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	80432	Callee	Environment :: getEnv		79548	0					
ANR	80433	Identifier	Environment :: getEnv		79548	0					
ANR	80434	ArgumentList			79548	1					
ANR	80435	Identifier	log		79548	1					
ANR	80436	Argument	WSF_LOG_SI		79548	1					
ANR	80437	Identifier	WSF_LOG_SI		79548	0					
ANR	80438	Argument	"""NULL value is set to a non nillable element reason"""		79548	2					
ANR	80439	PrimaryExpression	"""NULL value is set to a non nillable element reason"""		79548	0					
ANR	80440	ExpressionStatement	status = AXIS2_FAILURE	265:48:13417:13439	79548	1	True				
ANR	80441	AssignmentExpression	status = AXIS2_FAILURE		79548	0		=			
ANR	80442	Identifier	status		79548	0					
ANR	80443	Identifier	AXIS2_FAILURE		79548	1					
ANR	80444	ElseStatement	else		79548	0					
ANR	80445	CompoundStatement		204:44:11898:11898	79548	0					
ANR	80446	ExpressionStatement	"status = setReason ( """" )"	270:48:13727:13749	79548	0	True				
ANR	80447	AssignmentExpression	"status = setReason ( """" )"		79548	0		=			
ANR	80448	Identifier	status		79548	0					
ANR	80449	CallExpression	"setReason ( """" )"		79548	1					
ANR	80450	Callee	setReason		79548	0					
ANR	80451	Identifier	setReason		79548	0					
ANR	80452	ArgumentList	""""""		79548	1					
ANR	80453	Argument	""""""		79548	0					
ANR	80454	PrimaryExpression	""""""		79548	0					
ANR	80455	IfStatement	if ( AXIS2_FAILURE == status )		79548	3					
ANR	80456	Condition	AXIS2_FAILURE == status	274:36:13912:13935	79548	0	True				
ANR	80457	EqualityExpression	AXIS2_FAILURE == status		79548	0		==			
ANR	80458	Identifier	AXIS2_FAILURE		79548	0					
ANR	80459	Identifier	status		79548	1					
ANR	80460	CompoundStatement		211:33:12289:12289	79548	1					
ANR	80461	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for reason "" )"	276:37:14010:14109	79548	0	True				
ANR	80462	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for reason "" )"		79548	0					
ANR	80463	Callee	WSF_LOG_ERROR_MSG		79548	0					
ANR	80464	Identifier	WSF_LOG_ERROR_MSG		79548	0					
ANR	80465	ArgumentList	Environment :: getEnv ( ) -> log		79548	1					
ANR	80466	Argument	Environment :: getEnv ( ) -> log		79548	0					
ANR	80467	PtrMemberAccess	Environment :: getEnv ( ) -> log		79548	0					
ANR	80468	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	80469	Callee	Environment :: getEnv		79548	0					
ANR	80470	Identifier	Environment :: getEnv		79548	0					
ANR	80471	ArgumentList			79548	1					
ANR	80472	Identifier	log		79548	1					
ANR	80473	Argument	WSF_LOG_SI		79548	1					
ANR	80474	Identifier	WSF_LOG_SI		79548	0					
ANR	80475	Argument	"""failed in setting the value for reason """		79548	2					
ANR	80476	PrimaryExpression	"""failed in setting the value for reason """		79548	0					
ANR	80477	IfStatement	if ( element_qname )		79548	1					
ANR	80478	Condition	element_qname	277:40:14151:14163	79548	0	True				
ANR	80479	Identifier	element_qname		79548	0					
ANR	80480	CompoundStatement		214:37:12521:12521	79548	1					
ANR	80481	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	279:41:14246:14301	79548	0	True				
ANR	80482	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		79548	0					
ANR	80483	Callee	axutil_qname_free		79548	0					
ANR	80484	Identifier	axutil_qname_free		79548	0					
ANR	80485	ArgumentList	element_qname		79548	1					
ANR	80486	Argument	element_qname		79548	0					
ANR	80487	Identifier	element_qname		79548	0					
ANR	80488	Argument	Environment :: getEnv ( )		79548	1					
ANR	80489	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	80490	Callee	Environment :: getEnv		79548	0					
ANR	80491	Identifier	Environment :: getEnv		79548	0					
ANR	80492	ArgumentList			79548	1					
ANR	80493	ReturnStatement	return AXIS2_FAILURE ;	281:37:14379:14399	79548	2	True				
ANR	80494	Identifier	AXIS2_FAILURE		79548	0					
ANR	80495	ElseStatement	else		79548	0					
ANR	80496	IfStatement	if ( ! dont_care_minoccurs )		79548	0					
ANR	80497	Condition	! dont_care_minoccurs	285:38:14534:14553	79548	0	True				
ANR	80498	UnaryOperationExpression	! dont_care_minoccurs		79548	0					
ANR	80499	UnaryOperator	!		79548	0					
ANR	80500	Identifier	dont_care_minoccurs		79548	1					
ANR	80501	CompoundStatement		222:30:12904:12904	79548	1					
ANR	80502	IfStatement	if ( element_qname )		79548	0					
ANR	80503	Condition	element_qname	287:37:14625:14637	79548	0	True				
ANR	80504	Identifier	element_qname		79548	0					
ANR	80505	CompoundStatement		224:34:12992:12992	79548	1					
ANR	80506	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	289:38:14714:14769	79548	0	True				
ANR	80507	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		79548	0					
ANR	80508	Callee	axutil_qname_free		79548	0					
ANR	80509	Identifier	axutil_qname_free		79548	0					
ANR	80510	ArgumentList	element_qname		79548	1					
ANR	80511	Argument	element_qname		79548	0					
ANR	80512	Identifier	element_qname		79548	0					
ANR	80513	Argument	Environment :: getEnv ( )		79548	1					
ANR	80514	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	80515	Callee	Environment :: getEnv		79548	0					
ANR	80516	Identifier	Environment :: getEnv		79548	0					
ANR	80517	ArgumentList			79548	1					
ANR	80518	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""non nillable or minOuccrs != 0 element reason missing"" )"	292:6:14883:14996	79548	1	True				
ANR	80519	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""non nillable or minOuccrs != 0 element reason missing"" )"		79548	0					
ANR	80520	Callee	WSF_LOG_ERROR_MSG		79548	0					
ANR	80521	Identifier	WSF_LOG_ERROR_MSG		79548	0					
ANR	80522	ArgumentList	Environment :: getEnv ( ) -> log		79548	1					
ANR	80523	Argument	Environment :: getEnv ( ) -> log		79548	0					
ANR	80524	PtrMemberAccess	Environment :: getEnv ( ) -> log		79548	0					
ANR	80525	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	80526	Callee	Environment :: getEnv		79548	0					
ANR	80527	Identifier	Environment :: getEnv		79548	0					
ANR	80528	ArgumentList			79548	1					
ANR	80529	Identifier	log		79548	1					
ANR	80530	Argument	WSF_LOG_SI		79548	1					
ANR	80531	Identifier	WSF_LOG_SI		79548	0					
ANR	80532	Argument	"""non nillable or minOuccrs != 0 element reason missing"""		79548	2					
ANR	80533	PrimaryExpression	"""non nillable or minOuccrs != 0 element reason missing"""		79548	0					
ANR	80534	ReturnStatement	return AXIS2_FAILURE ;	293:34:15032:15052	79548	2	True				
ANR	80535	Identifier	AXIS2_FAILURE		79548	0					
ANR	80536	IfStatement	if ( element_qname )		79548	23					
ANR	80537	Condition	element_qname	296:21:15135:15147	79548	0	True				
ANR	80538	Identifier	element_qname		79548	0					
ANR	80539	CompoundStatement		233:18:13486:13486	79548	1					
ANR	80540	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	298:21:15191:15246	79548	0	True				
ANR	80541	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		79548	0					
ANR	80542	Callee	axutil_qname_free		79548	0					
ANR	80543	Identifier	axutil_qname_free		79548	0					
ANR	80544	ArgumentList	element_qname		79548	1					
ANR	80545	Argument	element_qname		79548	0					
ANR	80546	Identifier	element_qname		79548	0					
ANR	80547	Argument	Environment :: getEnv ( )		79548	1					
ANR	80548	CallExpression	Environment :: getEnv ( )		79548	0					
ANR	80549	Callee	Environment :: getEnv		79548	0					
ANR	80550	Identifier	Environment :: getEnv		79548	0					
ANR	80551	ArgumentList			79548	1					
ANR	80552	ExpressionStatement	element_qname = NULL	299:21:15269:15289	79548	1	True				
ANR	80553	AssignmentExpression	element_qname = NULL		79548	0		=			
ANR	80554	Identifier	element_qname		79548	0					
ANR	80555	Identifier	NULL		79548	1					
ANR	80556	ReturnStatement	return status ;	302:10:15339:15352	79548	24	True				
ANR	80557	Identifier	status		79548	0					
ANR	80558	ReturnType	bool WSF_CALL		79548	1					
ANR	80559	Identifier	AviaryJob :: ControlJob :: deserialize		79548	2					
ANR	80560	ParameterList	"axiom_node_t * * dp_parent , bool * dp_is_early_node_valid , bool dont_care_minoccurs"		79548	3					
ANR	80561	Parameter	axiom_node_t * * dp_parent	64:43:1592:1615	79548	0	True				
ANR	80562	ParameterType	axiom_node_t * *		79548	0					
ANR	80563	Identifier	dp_parent		79548	1					
ANR	80564	Parameter	bool * dp_is_early_node_valid	64:68:1617:1644	79548	1	True				
ANR	80565	ParameterType	bool *		79548	0					
ANR	80566	Identifier	dp_is_early_node_valid		79548	1					
ANR	80567	Parameter	bool dont_care_minoccurs	64:98:1647:1670	79548	2	True				
ANR	80568	ParameterType	bool		79548	0					
ANR	80569	Identifier	dont_care_minoccurs		79548	1					
ANR	80570	CFGEntryNode	ENTRY		79548		True				
ANR	80571	CFGExitNode	EXIT		79548		True				
ANR	80572	Symbol	& val		79548						
ANR	80573	Symbol	parent		79548						
ANR	80574	Symbol	hi		79548						
ANR	80575	Symbol	is_early_node_valid		79548						
ANR	80576	Symbol	current_node		79548						
ANR	80577	Symbol	axiom_element_get_qname		79548						
ANR	80578	Symbol	AXIS2_FAILURE		79548						
ANR	80579	Symbol	dp_is_early_node_valid		79548						
ANR	80580	Symbol	WSF_LOG_SI		79548						
ANR	80581	Symbol	& current_node		79548						
ANR	80582	Symbol	& is_early_node_valid		79548						
ANR	80583	Symbol	axutil_hash_next		79548						
ANR	80584	Symbol	setId		79548						
ANR	80585	Symbol	AXIS2_SUCCESS		79548						
ANR	80586	Symbol	element		79548						
ANR	80587	Symbol	val		79548						
ANR	80588	Symbol	NULL		79548						
ANR	80589	Symbol	axiom_node_get_node_type		79548						
ANR	80590	Symbol	axiom_element_get_localname		79548						
ANR	80591	Symbol	text_value		79548						
ANR	80592	Symbol	axiom_node_get_next_sibling		79548						
ANR	80593	Symbol	the_attri		79548						
ANR	80594	Symbol	strstr		79548						
ANR	80595	Symbol	axutil_strcmp		79548						
ANR	80596	Symbol	true		79548						
ANR	80597	Symbol	axutil_qname_equals		79548						
ANR	80598	Symbol	status		79548						
ANR	80599	Symbol	Environment :: getEnv		79548						
ANR	80600	Symbol	& key		79548						
ANR	80601	Symbol	mqname		79548						
ANR	80602	Symbol	attribute_hash		79548						
ANR	80603	Symbol	isParticle		79548						
ANR	80604	Symbol	* element		79548						
ANR	80605	Symbol	axiom_element_get_attribute_value_by_name		79548						
ANR	80606	Symbol	element_qname		79548						
ANR	80607	Symbol	axutil_qname_create		79548						
ANR	80608	Symbol	axiom_attribute_get_value		79548						
ANR	80609	Symbol	* dp_parent		79548						
ANR	80610	Symbol	axiom_node_get_data_element		79548						
ANR	80611	Symbol	axiom_element_get_text		79548						
ANR	80612	Symbol	dont_care_minoccurs		79548						
ANR	80613	Symbol	attrib_text		79548						
ANR	80614	Symbol	first_node		79548						
ANR	80615	Symbol	setReason		79548						
ANR	80616	Symbol	key		79548						
ANR	80617	Symbol	current_element		79548						
ANR	80618	Symbol	dp_parent		79548						
ANR	80619	Symbol	AXIOM_ELEMENT		79548						
ANR	80620	Symbol	false		79548						
ANR	80621	Symbol	Environment :: getEnv ( ) -> log		79548						
ANR	80622	Symbol	axiom_element_get_all_attributes		79548						
ANR	80623	Symbol	axiom_node_get_first_child		79548						
ANR	80624	Symbol	axutil_hash_first		79548						
ANR	80625	Symbol	* Environment :: getEnv		79548						
ANR	80626	Symbol	element -> deserialize		79548						
ANR	80627	Function	AviaryJob :: ControlJob :: isParticle	305:10:15374:15515							
ANR	80628	FunctionDef	AviaryJob :: ControlJob :: isParticle ()		80627	0					
ANR	80629	CompoundStatement		307:10:15444:15515	80627	0					
ANR	80630	ReturnStatement	return false ;	309:17:15476:15488	80627	0	True				
ANR	80631	Identifier	false		80627	0					
ANR	80632	ReturnType	bool WSF_CALL		80627	1					
ANR	80633	Identifier	AviaryJob :: ControlJob :: isParticle		80627	2					
ANR	80634	ParameterList			80627	3					
ANR	80635	CFGEntryNode	ENTRY		80627		True				
ANR	80636	CFGExitNode	EXIT		80627		True				
ANR	80637	Symbol	false		80627						
ANR	80638	Function	AviaryJob :: ControlJob :: declareParentNamespaces	314:10:15529:15849							
ANR	80639	FunctionDef	"AviaryJob :: ControlJob :: declareParentNamespaces (axiom_element_t * parent_element , axutil_hash_t * namespaces , int * next_ns_index)"		80638	0					
ANR	80640	CompoundStatement		318:10:15731:15849	80638	0					
ANR	80641	ReturnType	void WSF_CALL		80638	1					
ANR	80642	Identifier	AviaryJob :: ControlJob :: declareParentNamespaces		80638	2					
ANR	80643	ParameterList	"axiom_element_t * parent_element , axutil_hash_t * namespaces , int * next_ns_index"		80638	3					
ANR	80644	Parameter	axiom_element_t * parent_element	316:20:15621:15651	80638	0	True				
ANR	80645	ParameterType	axiom_element_t *		80638	0					
ANR	80646	Identifier	parent_element		80638	1					
ANR	80647	Parameter	axutil_hash_t * namespaces	317:20:15674:15698	80638	1	True				
ANR	80648	ParameterType	axutil_hash_t *		80638	0					
ANR	80649	Identifier	namespaces		80638	1					
ANR	80650	Parameter	int * next_ns_index	317:47:15701:15718	80638	2	True				
ANR	80651	ParameterType	int *		80638	0					
ANR	80652	Identifier	next_ns_index		80638	1					
ANR	80653	CFGEntryNode	ENTRY		80638		True				
ANR	80654	CFGExitNode	EXIT		80638		True				
ANR	80655	Symbol	parent_element		80638						
ANR	80656	Symbol	next_ns_index		80638						
ANR	80657	Symbol	namespaces		80638						
ANR	80658	Function	AviaryJob :: ControlJob :: serialize	326:22:15892:24058							
ANR	80659	FunctionDef	"AviaryJob :: ControlJob :: serialize (axiom_node_t * parent , axiom_element_t * parent_element , int parent_tag_closed , axutil_hash_t * namespaces , int * next_ns_index)"		80658	0					
ANR	80660	CompoundStatement		332:8:16084:24058	80658	0					
ANR	80661	IdentifierDeclStatement	axis2_char_t * string_to_stream ;	335:13:16125:16155	80658	0	True				
ANR	80662	IdentifierDecl	* string_to_stream		80658	0					
ANR	80663	IdentifierDeclType	axis2_char_t *		80658	0					
ANR	80664	Identifier	string_to_stream		80658	1					
ANR	80665	IdentifierDeclStatement	axiom_node_t * current_node = NULL ;	338:9:16189:16222	80658	1	True				
ANR	80666	IdentifierDecl	* current_node = NULL		80658	0					
ANR	80667	IdentifierDeclType	axiom_node_t *		80658	0					
ANR	80668	Identifier	current_node		80658	1					
ANR	80669	AssignmentExpression	* current_node = NULL		80658	2		=			
ANR	80670	Identifier	NULL		80658	0					
ANR	80671	Identifier	NULL		80658	1					
ANR	80672	IdentifierDeclStatement	int tag_closed = 0 ;	339:9:16233:16251	80658	2	True				
ANR	80673	IdentifierDecl	tag_closed = 0		80658	0					
ANR	80674	IdentifierDeclType	int		80658	0					
ANR	80675	Identifier	tag_closed		80658	1					
ANR	80676	AssignmentExpression	tag_closed = 0		80658	2		=			
ANR	80677	Identifier	tag_closed		80658	0					
ANR	80678	PrimaryExpression	0		80658	1					
ANR	80679	IdentifierDeclStatement	axiom_namespace_t * ns1 = NULL ;	343:16:16290:16319	80658	3	True				
ANR	80680	IdentifierDecl	* ns1 = NULL		80658	0					
ANR	80681	IdentifierDeclType	axiom_namespace_t *		80658	0					
ANR	80682	Identifier	ns1		80658	1					
ANR	80683	AssignmentExpression	* ns1 = NULL		80658	2		=			
ANR	80684	Identifier	NULL		80658	0					
ANR	80685	Identifier	NULL		80658	1					
ANR	80686	IdentifierDeclStatement	axis2_char_t * qname_uri = NULL ;	345:16:16338:16368	80658	4	True				
ANR	80687	IdentifierDecl	* qname_uri = NULL		80658	0					
ANR	80688	IdentifierDeclType	axis2_char_t *		80658	0					
ANR	80689	Identifier	qname_uri		80658	1					
ANR	80690	AssignmentExpression	* qname_uri = NULL		80658	2		=			
ANR	80691	Identifier	NULL		80658	0					
ANR	80692	Identifier	NULL		80658	1					
ANR	80693	IdentifierDeclStatement	axis2_char_t * qname_prefix = NULL ;	346:16:16386:16419	80658	5	True				
ANR	80694	IdentifierDecl	* qname_prefix = NULL		80658	0					
ANR	80695	IdentifierDeclType	axis2_char_t *		80658	0					
ANR	80696	Identifier	qname_prefix		80658	1					
ANR	80697	AssignmentExpression	* qname_prefix = NULL		80658	2		=			
ANR	80698	Identifier	NULL		80658	0					
ANR	80699	Identifier	NULL		80658	1					
ANR	80700	IdentifierDeclStatement	axis2_char_t * p_prefix = NULL ;	347:16:16437:16466	80658	6	True				
ANR	80701	IdentifierDecl	* p_prefix = NULL		80658	0					
ANR	80702	IdentifierDeclType	axis2_char_t *		80658	0					
ANR	80703	Identifier	p_prefix		80658	1					
ANR	80704	AssignmentExpression	* p_prefix = NULL		80658	2		=			
ANR	80705	Identifier	NULL		80658	0					
ANR	80706	Identifier	NULL		80658	1					
ANR	80707	IdentifierDeclStatement	axis2_char_t text_value_1 [ ADB_DEFAULT_DIGIT_LIMIT ] ;	349:20:16501:16551	80658	7	True				
ANR	80708	IdentifierDecl	text_value_1 [ ADB_DEFAULT_DIGIT_LIMIT ]		80658	0					
ANR	80709	IdentifierDeclType	axis2_char_t [ ADB_DEFAULT_DIGIT_LIMIT ]		80658	0					
ANR	80710	Identifier	text_value_1		80658	1					
ANR	80711	Identifier	ADB_DEFAULT_DIGIT_LIMIT		80658	2					
ANR	80712	IdentifierDeclStatement	axis2_char_t * text_value_2 ;	351:20:16594:16620	80658	8	True				
ANR	80713	IdentifierDecl	* text_value_2		80658	0					
ANR	80714	IdentifierDeclType	axis2_char_t *		80658	0					
ANR	80715	Identifier	text_value_2		80658	1					
ANR	80716	IdentifierDeclStatement	axis2_char_t * text_value_2_temp ;	352:20:16642:16673	80658	9	True				
ANR	80717	IdentifierDecl	* text_value_2_temp		80658	0					
ANR	80718	IdentifierDeclType	axis2_char_t *		80658	0					
ANR	80719	Identifier	text_value_2_temp		80658	1					
ANR	80720	IdentifierDeclStatement	axis2_char_t * start_input_str = NULL ;	354:15:16711:16747	80658	10	True				
ANR	80721	IdentifierDecl	* start_input_str = NULL		80658	0					
ANR	80722	IdentifierDeclType	axis2_char_t *		80658	0					
ANR	80723	Identifier	start_input_str		80658	1					
ANR	80724	AssignmentExpression	* start_input_str = NULL		80658	2		=			
ANR	80725	Identifier	NULL		80658	0					
ANR	80726	Identifier	NULL		80658	1					
ANR	80727	IdentifierDeclStatement	axis2_char_t * end_input_str = NULL ;	355:15:16764:16798	80658	11	True				
ANR	80728	IdentifierDecl	* end_input_str = NULL		80658	0					
ANR	80729	IdentifierDeclType	axis2_char_t *		80658	0					
ANR	80730	Identifier	end_input_str		80658	1					
ANR	80731	AssignmentExpression	* end_input_str = NULL		80658	2		=			
ANR	80732	Identifier	NULL		80658	0					
ANR	80733	Identifier	NULL		80658	1					
ANR	80734	IdentifierDeclStatement	unsigned int start_input_str_len = 0 ;	356:15:16815:16851	80658	12	True				
ANR	80735	IdentifierDecl	start_input_str_len = 0		80658	0					
ANR	80736	IdentifierDeclType	unsigned int		80658	0					
ANR	80737	Identifier	start_input_str_len		80658	1					
ANR	80738	AssignmentExpression	start_input_str_len = 0		80658	2		=			
ANR	80739	Identifier	start_input_str_len		80658	0					
ANR	80740	PrimaryExpression	0		80658	1					
ANR	80741	IdentifierDeclStatement	unsigned int end_input_str_len = 0 ;	357:15:16868:16902	80658	13	True				
ANR	80742	IdentifierDecl	end_input_str_len = 0		80658	0					
ANR	80743	IdentifierDeclType	unsigned int		80658	0					
ANR	80744	Identifier	end_input_str_len		80658	1					
ANR	80745	AssignmentExpression	end_input_str_len = 0		80658	2		=			
ANR	80746	Identifier	end_input_str_len		80658	0					
ANR	80747	PrimaryExpression	0		80658	1					
ANR	80748	IdentifierDeclStatement	axiom_data_source_t * data_source = NULL ;	360:15:16945:16984	80658	14	True				
ANR	80749	IdentifierDecl	* data_source = NULL		80658	0					
ANR	80750	IdentifierDeclType	axiom_data_source_t *		80658	0					
ANR	80751	Identifier	data_source		80658	1					
ANR	80752	AssignmentExpression	* data_source = NULL		80658	2		=			
ANR	80753	Identifier	NULL		80658	0					
ANR	80754	Identifier	NULL		80658	1					
ANR	80755	IdentifierDeclStatement	axutil_stream_t * stream = NULL ;	361:15:17001:17031	80658	15	True				
ANR	80756	IdentifierDecl	* stream = NULL		80658	0					
ANR	80757	IdentifierDeclType	axutil_stream_t *		80658	0					
ANR	80758	Identifier	stream		80658	1					
ANR	80759	AssignmentExpression	* stream = NULL		80658	2		=			
ANR	80760	Identifier	NULL		80658	0					
ANR	80761	Identifier	NULL		80658	1					
ANR	80762	ExpressionStatement	current_node = parent	364:20:17067:17088	80658	16	True				
ANR	80763	AssignmentExpression	current_node = parent		80658	0		=			
ANR	80764	Identifier	current_node		80658	0					
ANR	80765	Identifier	parent		80658	1					
ANR	80766	ExpressionStatement	"data_source = ( axiom_data_source_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	365:20:17110:17211	80658	17	True				
ANR	80767	AssignmentExpression	"data_source = ( axiom_data_source_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		80658	0		=			
ANR	80768	Identifier	data_source		80658	0					
ANR	80769	CastExpression	"( axiom_data_source_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		80658	1					
ANR	80770	CastTarget	axiom_data_source_t *		80658	0					
ANR	80771	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		80658	1					
ANR	80772	Callee	axiom_node_get_data_element		80658	0					
ANR	80773	Identifier	axiom_node_get_data_element		80658	0					
ANR	80774	ArgumentList	current_node		80658	1					
ANR	80775	Argument	current_node		80658	0					
ANR	80776	Identifier	current_node		80658	0					
ANR	80777	Argument	Environment :: getEnv ( )		80658	1					
ANR	80778	CallExpression	Environment :: getEnv ( )		80658	0					
ANR	80779	Callee	Environment :: getEnv		80658	0					
ANR	80780	Identifier	Environment :: getEnv		80658	0					
ANR	80781	ArgumentList			80658	1					
ANR	80782	IfStatement	if ( ! data_source )		80658	18					
ANR	80783	Condition	! data_source	366:24:17237:17248	80658	0	True				
ANR	80784	UnaryOperationExpression	! data_source		80658	0					
ANR	80785	UnaryOperator	!		80658	0					
ANR	80786	Identifier	data_source		80658	1					
ANR	80787	ReturnStatement	return NULL ;	367:24:17275:17286	80658	1	True				
ANR	80788	Identifier	NULL		80658	0					
ANR	80789	ExpressionStatement	"stream = axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"	368:20:17308:17381	80658	19	True				
ANR	80790	AssignmentExpression	"stream = axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"		80658	0		=			
ANR	80791	Identifier	stream		80658	0					
ANR	80792	CallExpression	"axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"		80658	1					
ANR	80793	Callee	axiom_data_source_get_stream		80658	0					
ANR	80794	Identifier	axiom_data_source_get_stream		80658	0					
ANR	80795	ArgumentList	data_source		80658	1					
ANR	80796	Argument	data_source		80658	0					
ANR	80797	Identifier	data_source		80658	0					
ANR	80798	Argument	Environment :: getEnv ( )		80658	1					
ANR	80799	CallExpression	Environment :: getEnv ( )		80658	0					
ANR	80800	Callee	Environment :: getEnv		80658	0					
ANR	80801	Identifier	Environment :: getEnv		80658	0					
ANR	80802	ArgumentList			80658	1					
ANR	80803	IfStatement	if ( ! stream )		80658	20					
ANR	80804	Condition	! stream	369:24:17450:17456	80658	0	True				
ANR	80805	UnaryOperationExpression	! stream		80658	0					
ANR	80806	UnaryOperator	!		80658	0					
ANR	80807	Identifier	stream		80658	1					
ANR	80808	ReturnStatement	return NULL ;	370:24:17483:17494	80658	1	True				
ANR	80809	Identifier	NULL		80658	0					
ANR	80810	IfStatement	if ( ! parent_tag_closed )		80658	21					
ANR	80811	Condition	! parent_tag_closed	372:15:17530:17547	80658	0	True				
ANR	80812	UnaryOperationExpression	! parent_tag_closed		80658	0					
ANR	80813	UnaryOperator	!		80658	0					
ANR	80814	Identifier	parent_tag_closed		80658	1					
ANR	80815	CompoundStatement		42:12:1477:1477	80658	1					
ANR	80816	ExpressionStatement	"string_to_stream = "">"""	375:14:17591:17613	80658	0	True				
ANR	80817	AssignmentExpression	"string_to_stream = "">"""		80658	0		=			
ANR	80818	Identifier	string_to_stream		80658	0					
ANR	80819	PrimaryExpression	""">"""		80658	1					
ANR	80820	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , string_to_stream , axutil_strlen ( string_to_stream ) )"	376:14:17630:17731	80658	1	True				
ANR	80821	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , string_to_stream , axutil_strlen ( string_to_stream ) )"		80658	0					
ANR	80822	Callee	axutil_stream_write		80658	0					
ANR	80823	Identifier	axutil_stream_write		80658	0					
ANR	80824	ArgumentList	stream		80658	1					
ANR	80825	Argument	stream		80658	0					
ANR	80826	Identifier	stream		80658	0					
ANR	80827	Argument	Environment :: getEnv ( )		80658	1					
ANR	80828	CallExpression	Environment :: getEnv ( )		80658	0					
ANR	80829	Callee	Environment :: getEnv		80658	0					
ANR	80830	Identifier	Environment :: getEnv		80658	0					
ANR	80831	ArgumentList			80658	1					
ANR	80832	Argument	string_to_stream		80658	2					
ANR	80833	Identifier	string_to_stream		80658	0					
ANR	80834	Argument	axutil_strlen ( string_to_stream )		80658	3					
ANR	80835	CallExpression	axutil_strlen ( string_to_stream )		80658	0					
ANR	80836	Callee	axutil_strlen		80658	0					
ANR	80837	Identifier	axutil_strlen		80658	0					
ANR	80838	ArgumentList	string_to_stream		80658	1					
ANR	80839	Argument	string_to_stream		80658	0					
ANR	80840	Identifier	string_to_stream		80658	0					
ANR	80841	ExpressionStatement	tag_closed = 1	377:14:17747:17761	80658	2	True				
ANR	80842	AssignmentExpression	tag_closed = 1		80658	0		=			
ANR	80843	Identifier	tag_closed		80658	0					
ANR	80844	PrimaryExpression	1		80658	1					
ANR	80845	ExpressionStatement	p_prefix = NULL	381:23:17826:17841	80658	22	True				
ANR	80846	AssignmentExpression	p_prefix = NULL		80658	0		=			
ANR	80847	Identifier	p_prefix		80658	0					
ANR	80848	Identifier	NULL		80658	1					
ANR	80849	IfStatement	if ( ! isValidId )		80658	23					
ANR	80850	Condition	! isValidId	384:23:17890:17899	80658	0	True				
ANR	80851	UnaryOperationExpression	! isValidId		80658	0					
ANR	80852	UnaryOperator	!		80658	0					
ANR	80853	Identifier	isValidId		80658	1					
ANR	80854	CompoundStatement		54:19:1836:1836	80658	1					
ANR	80855	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Nil value found in non-nillable property id"" )"	388:28:18003:18106	80658	0	True				
ANR	80856	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Nil value found in non-nillable property id"" )"		80658	0					
ANR	80857	Callee	WSF_LOG_ERROR_MSG		80658	0					
ANR	80858	Identifier	WSF_LOG_ERROR_MSG		80658	0					
ANR	80859	ArgumentList	Environment :: getEnv ( ) -> log		80658	1					
ANR	80860	Argument	Environment :: getEnv ( ) -> log		80658	0					
ANR	80861	PtrMemberAccess	Environment :: getEnv ( ) -> log		80658	0					
ANR	80862	CallExpression	Environment :: getEnv ( )		80658	0					
ANR	80863	Callee	Environment :: getEnv		80658	0					
ANR	80864	Identifier	Environment :: getEnv		80658	0					
ANR	80865	ArgumentList			80658	1					
ANR	80866	Identifier	log		80658	1					
ANR	80867	Argument	WSF_LOG_SI		80658	1					
ANR	80868	Identifier	WSF_LOG_SI		80658	0					
ANR	80869	Argument	"""Nil value found in non-nillable property id"""		80658	2					
ANR	80870	PrimaryExpression	"""Nil value found in non-nillable property id"""		80658	0					
ANR	80871	ReturnStatement	return NULL ;	389:28:18136:18147	80658	1	True				
ANR	80872	Identifier	NULL		80658	0					
ANR	80873	ElseStatement	else		80658	0					
ANR	80874	CompoundStatement		62:19:2155:2155	80658	0					
ANR	80875	ExpressionStatement	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" ) ) )"	394:21:18263:18486	80658	0	True				
ANR	80876	AssignmentExpression	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" ) ) )"		80658	0		=			
ANR	80877	Identifier	start_input_str		80658	0					
ANR	80878	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" ) ) )"		80658	1					
ANR	80879	CastTarget	axis2_char_t *		80658	0					
ANR	80880	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" ) ) )"		80658	1					
ANR	80881	Callee	AXIS2_MALLOC		80658	0					
ANR	80882	Identifier	AXIS2_MALLOC		80658	0					
ANR	80883	ArgumentList	Environment :: getEnv ( ) -> allocator		80658	1					
ANR	80884	Argument	Environment :: getEnv ( ) -> allocator		80658	0					
ANR	80885	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		80658	0					
ANR	80886	CallExpression	Environment :: getEnv ( )		80658	0					
ANR	80887	Callee	Environment :: getEnv		80658	0					
ANR	80888	Identifier	Environment :: getEnv		80658	0					
ANR	80889	ArgumentList			80658	1					
ANR	80890	Identifier	allocator		80658	1					
ANR	80891	Argument	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" ) )"		80658	1					
ANR	80892	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" ) )"		80658	0		*			
ANR	80893	SizeofExpression	sizeof ( axis2_char_t )		80658	0					
ANR	80894	Sizeof	sizeof		80658	0					
ANR	80895	SizeofOperand	axis2_char_t		80658	1					
ANR	80896	AdditiveExpression	"4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" )"		80658	1		+			
ANR	80897	PrimaryExpression	4		80658	0					
ANR	80898	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" )"		80658	1		+			
ANR	80899	CallExpression	axutil_strlen ( p_prefix )		80658	0					
ANR	80900	Callee	axutil_strlen		80658	0					
ANR	80901	Identifier	axutil_strlen		80658	0					
ANR	80902	ArgumentList	p_prefix		80658	1					
ANR	80903	Argument	p_prefix		80658	0					
ANR	80904	Identifier	p_prefix		80658	0					
ANR	80905	CallExpression	"axutil_strlen ( ""id"" )"		80658	1					
ANR	80906	Callee	axutil_strlen		80658	0					
ANR	80907	Identifier	axutil_strlen		80658	0					
ANR	80908	ArgumentList	"""id"""		80658	1					
ANR	80909	Argument	"""id"""		80658	0					
ANR	80910	PrimaryExpression	"""id"""		80658	0					
ANR	80911	ExpressionStatement	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" ) ) )"	399:21:18612:18798	80658	1	True				
ANR	80912	AssignmentExpression	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" ) ) )"		80658	0		=			
ANR	80913	Identifier	end_input_str		80658	0					
ANR	80914	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" ) ) )"		80658	1					
ANR	80915	CastTarget	axis2_char_t *		80658	0					
ANR	80916	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" ) ) )"		80658	1					
ANR	80917	Callee	AXIS2_MALLOC		80658	0					
ANR	80918	Identifier	AXIS2_MALLOC		80658	0					
ANR	80919	ArgumentList	Environment :: getEnv ( ) -> allocator		80658	1					
ANR	80920	Argument	Environment :: getEnv ( ) -> allocator		80658	0					
ANR	80921	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		80658	0					
ANR	80922	CallExpression	Environment :: getEnv ( )		80658	0					
ANR	80923	Callee	Environment :: getEnv		80658	0					
ANR	80924	Identifier	Environment :: getEnv		80658	0					
ANR	80925	ArgumentList			80658	1					
ANR	80926	Identifier	allocator		80658	1					
ANR	80927	Argument	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" ) )"		80658	1					
ANR	80928	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" ) )"		80658	0		*			
ANR	80929	SizeofExpression	sizeof ( axis2_char_t )		80658	0					
ANR	80930	Sizeof	sizeof		80658	0					
ANR	80931	SizeofOperand	axis2_char_t		80658	1					
ANR	80932	AdditiveExpression	"5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" )"		80658	1		+			
ANR	80933	PrimaryExpression	5		80658	0					
ANR	80934	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""id"" )"		80658	1		+			
ANR	80935	CallExpression	axutil_strlen ( p_prefix )		80658	0					
ANR	80936	Callee	axutil_strlen		80658	0					
ANR	80937	Identifier	axutil_strlen		80658	0					
ANR	80938	ArgumentList	p_prefix		80658	1					
ANR	80939	Argument	p_prefix		80658	0					
ANR	80940	Identifier	p_prefix		80658	0					
ANR	80941	CallExpression	"axutil_strlen ( ""id"" )"		80658	1					
ANR	80942	Callee	axutil_strlen		80658	0					
ANR	80943	Identifier	axutil_strlen		80658	0					
ANR	80944	ArgumentList	"""id"""		80658	1					
ANR	80945	Argument	"""id"""		80658	0					
ANR	80946	PrimaryExpression	"""id"""		80658	0					
ANR	80947	ExpressionStatement	"sprintf ( start_input_str , ""<%s%sid"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	414:28:19153:19326	80658	2	True				
ANR	80948	CallExpression	"sprintf ( start_input_str , ""<%s%sid"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		80658	0					
ANR	80949	Callee	sprintf		80658	0					
ANR	80950	Identifier	sprintf		80658	0					
ANR	80951	ArgumentList	start_input_str		80658	1					
ANR	80952	Argument	start_input_str		80658	0					
ANR	80953	Identifier	start_input_str		80658	0					
ANR	80954	Argument	"""<%s%sid"""		80658	1					
ANR	80955	PrimaryExpression	"""<%s%sid"""		80658	0					
ANR	80956	Argument	"p_prefix ? p_prefix : """""		80658	2					
ANR	80957	ConditionalExpression	"p_prefix ? p_prefix : """""		80658	0					
ANR	80958	Condition	p_prefix		80658	0					
ANR	80959	Identifier	p_prefix		80658	0					
ANR	80960	Identifier	p_prefix		80658	1					
ANR	80961	PrimaryExpression	""""""		80658	2					
ANR	80962	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		80658	3					
ANR	80963	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		80658	0					
ANR	80964	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		80658	0					
ANR	80965	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		80658	0		&&			
ANR	80966	Identifier	p_prefix		80658	0					
ANR	80967	CallExpression	"axutil_strcmp ( p_prefix , """" )"		80658	1					
ANR	80968	Callee	axutil_strcmp		80658	0					
ANR	80969	Identifier	axutil_strcmp		80658	0					
ANR	80970	ArgumentList	p_prefix		80658	1					
ANR	80971	Argument	p_prefix		80658	0					
ANR	80972	Identifier	p_prefix		80658	0					
ANR	80973	Argument	""""""		80658	1					
ANR	80974	PrimaryExpression	""""""		80658	0					
ANR	80975	PrimaryExpression	""":"""		80658	1					
ANR	80976	PrimaryExpression	""""""		80658	2					
ANR	80977	ExpressionStatement	start_input_str_len = axutil_strlen ( start_input_str )	418:24:19382:19434	80658	3	True				
ANR	80978	AssignmentExpression	start_input_str_len = axutil_strlen ( start_input_str )		80658	0		=			
ANR	80979	Identifier	start_input_str_len		80658	0					
ANR	80980	CallExpression	axutil_strlen ( start_input_str )		80658	1					
ANR	80981	Callee	axutil_strlen		80658	0					
ANR	80982	Identifier	axutil_strlen		80658	0					
ANR	80983	ArgumentList	start_input_str		80658	1					
ANR	80984	Argument	start_input_str		80658	0					
ANR	80985	Identifier	start_input_str		80658	0					
ANR	80986	ExpressionStatement	"sprintf ( end_input_str , ""</%s%sid>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	419:24:19460:19633	80658	4	True				
ANR	80987	CallExpression	"sprintf ( end_input_str , ""</%s%sid>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		80658	0					
ANR	80988	Callee	sprintf		80658	0					
ANR	80989	Identifier	sprintf		80658	0					
ANR	80990	ArgumentList	end_input_str		80658	1					
ANR	80991	Argument	end_input_str		80658	0					
ANR	80992	Identifier	end_input_str		80658	0					
ANR	80993	Argument	"""</%s%sid>"""		80658	1					
ANR	80994	PrimaryExpression	"""</%s%sid>"""		80658	0					
ANR	80995	Argument	"p_prefix ? p_prefix : """""		80658	2					
ANR	80996	ConditionalExpression	"p_prefix ? p_prefix : """""		80658	0					
ANR	80997	Condition	p_prefix		80658	0					
ANR	80998	Identifier	p_prefix		80658	0					
ANR	80999	Identifier	p_prefix		80658	1					
ANR	81000	PrimaryExpression	""""""		80658	2					
ANR	81001	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		80658	3					
ANR	81002	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		80658	0					
ANR	81003	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		80658	0					
ANR	81004	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		80658	0		&&			
ANR	81005	Identifier	p_prefix		80658	0					
ANR	81006	CallExpression	"axutil_strcmp ( p_prefix , """" )"		80658	1					
ANR	81007	Callee	axutil_strcmp		80658	0					
ANR	81008	Identifier	axutil_strcmp		80658	0					
ANR	81009	ArgumentList	p_prefix		80658	1					
ANR	81010	Argument	p_prefix		80658	0					
ANR	81011	Identifier	p_prefix		80658	0					
ANR	81012	Argument	""""""		80658	1					
ANR	81013	PrimaryExpression	""""""		80658	0					
ANR	81014	PrimaryExpression	""":"""		80658	1					
ANR	81015	PrimaryExpression	""""""		80658	2					
ANR	81016	ExpressionStatement	end_input_str_len = axutil_strlen ( end_input_str )	422:24:19659:19707	80658	5	True				
ANR	81017	AssignmentExpression	end_input_str_len = axutil_strlen ( end_input_str )		80658	0		=			
ANR	81018	Identifier	end_input_str_len		80658	0					
ANR	81019	CallExpression	axutil_strlen ( end_input_str )		80658	1					
ANR	81020	Callee	axutil_strlen		80658	0					
ANR	81021	Identifier	axutil_strlen		80658	0					
ANR	81022	ArgumentList	end_input_str		80658	1					
ANR	81023	Argument	end_input_str		80658	0					
ANR	81024	Identifier	end_input_str		80658	0					
ANR	81025	IfStatement	if ( ! property_Id -> isParticle ( ) )		80658	6					
ANR	81026	Condition	! property_Id -> isParticle ( )	424:31:19762:19787	80658	0	True				
ANR	81027	UnaryOperationExpression	! property_Id -> isParticle ( )		80658	0					
ANR	81028	UnaryOperator	!		80658	0					
ANR	81029	CallExpression	property_Id -> isParticle ( )		80658	1					
ANR	81030	Callee	property_Id -> isParticle		80658	0					
ANR	81031	PtrMemberAccess	property_Id -> isParticle		80658	0					
ANR	81032	Identifier	property_Id		80658	0					
ANR	81033	Identifier	isParticle		80658	1					
ANR	81034	ArgumentList			80658	1					
ANR	81035	CompoundStatement		94:28:3733:3733	80658	1					
ANR	81036	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"	426:32:19852:19940	80658	0	True				
ANR	81037	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"		80658	0					
ANR	81038	Callee	axutil_stream_write		80658	0					
ANR	81039	Identifier	axutil_stream_write		80658	0					
ANR	81040	ArgumentList	stream		80658	1					
ANR	81041	Argument	stream		80658	0					
ANR	81042	Identifier	stream		80658	0					
ANR	81043	Argument	Environment :: getEnv ( )		80658	1					
ANR	81044	CallExpression	Environment :: getEnv ( )		80658	0					
ANR	81045	Callee	Environment :: getEnv		80658	0					
ANR	81046	Identifier	Environment :: getEnv		80658	0					
ANR	81047	ArgumentList			80658	1					
ANR	81048	Argument	start_input_str		80658	2					
ANR	81049	Identifier	start_input_str		80658	0					
ANR	81050	Argument	start_input_str_len		80658	3					
ANR	81051	Identifier	start_input_str_len		80658	0					
ANR	81052	ExpressionStatement	"property_Id -> serialize ( current_node , parent_element , property_Id -> isParticle ( ) || false , namespaces , next_ns_index )"	428:28:20000:20196	80658	7	True				
ANR	81053	CallExpression	"property_Id -> serialize ( current_node , parent_element , property_Id -> isParticle ( ) || false , namespaces , next_ns_index )"		80658	0					
ANR	81054	Callee	property_Id -> serialize		80658	0					
ANR	81055	PtrMemberAccess	property_Id -> serialize		80658	0					
ANR	81056	Identifier	property_Id		80658	0					
ANR	81057	Identifier	serialize		80658	1					
ANR	81058	ArgumentList	current_node		80658	1					
ANR	81059	Argument	current_node		80658	0					
ANR	81060	Identifier	current_node		80658	0					
ANR	81061	Argument	parent_element		80658	1					
ANR	81062	Identifier	parent_element		80658	0					
ANR	81063	Argument	property_Id -> isParticle ( ) || false		80658	2					
ANR	81064	OrExpression	property_Id -> isParticle ( ) || false		80658	0		||			
ANR	81065	CallExpression	property_Id -> isParticle ( )		80658	0					
ANR	81066	Callee	property_Id -> isParticle		80658	0					
ANR	81067	PtrMemberAccess	property_Id -> isParticle		80658	0					
ANR	81068	Identifier	property_Id		80658	0					
ANR	81069	Identifier	isParticle		80658	1					
ANR	81070	ArgumentList			80658	1					
ANR	81071	Identifier	false		80658	1					
ANR	81072	Argument	namespaces		80658	3					
ANR	81073	Identifier	namespaces		80658	0					
ANR	81074	Argument	next_ns_index		80658	4					
ANR	81075	Identifier	next_ns_index		80658	0					
ANR	81076	IfStatement	if ( ! property_Id -> isParticle ( ) )		80658	8					
ANR	81077	Condition	! property_Id -> isParticle ( )	431:31:20258:20283	80658	0	True				
ANR	81078	UnaryOperationExpression	! property_Id -> isParticle ( )		80658	0					
ANR	81079	UnaryOperator	!		80658	0					
ANR	81080	CallExpression	property_Id -> isParticle ( )		80658	1					
ANR	81081	Callee	property_Id -> isParticle		80658	0					
ANR	81082	PtrMemberAccess	property_Id -> isParticle		80658	0					
ANR	81083	Identifier	property_Id		80658	0					
ANR	81084	Identifier	isParticle		80658	1					
ANR	81085	ArgumentList			80658	1					
ANR	81086	CompoundStatement		101:28:4229:4229	80658	1					
ANR	81087	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"	433:32:20348:20432	80658	0	True				
ANR	81088	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"		80658	0					
ANR	81089	Callee	axutil_stream_write		80658	0					
ANR	81090	Identifier	axutil_stream_write		80658	0					
ANR	81091	ArgumentList	stream		80658	1					
ANR	81092	Argument	stream		80658	0					
ANR	81093	Identifier	stream		80658	0					
ANR	81094	Argument	Environment :: getEnv ( )		80658	1					
ANR	81095	CallExpression	Environment :: getEnv ( )		80658	0					
ANR	81096	Callee	Environment :: getEnv		80658	0					
ANR	81097	Identifier	Environment :: getEnv		80658	0					
ANR	81098	ArgumentList			80658	1					
ANR	81099	Argument	end_input_str		80658	2					
ANR	81100	Identifier	end_input_str		80658	0					
ANR	81101	Argument	end_input_str_len		80658	3					
ANR	81102	Identifier	end_input_str_len		80658	0					
ANR	81103	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"	437:21:20536:20596	80658	9	True				
ANR	81104	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"		80658	0					
ANR	81105	Callee	AXIS2_FREE		80658	0					
ANR	81106	Identifier	AXIS2_FREE		80658	0					
ANR	81107	ArgumentList	Environment :: getEnv ( ) -> allocator		80658	1					
ANR	81108	Argument	Environment :: getEnv ( ) -> allocator		80658	0					
ANR	81109	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		80658	0					
ANR	81110	CallExpression	Environment :: getEnv ( )		80658	0					
ANR	81111	Callee	Environment :: getEnv		80658	0					
ANR	81112	Identifier	Environment :: getEnv		80658	0					
ANR	81113	ArgumentList			80658	1					
ANR	81114	Identifier	allocator		80658	1					
ANR	81115	Argument	start_input_str		80658	1					
ANR	81116	Identifier	start_input_str		80658	0					
ANR	81117	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"	438:21:20619:20677	80658	10	True				
ANR	81118	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"		80658	0					
ANR	81119	Callee	AXIS2_FREE		80658	0					
ANR	81120	Identifier	AXIS2_FREE		80658	0					
ANR	81121	ArgumentList	Environment :: getEnv ( ) -> allocator		80658	1					
ANR	81122	Argument	Environment :: getEnv ( ) -> allocator		80658	0					
ANR	81123	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		80658	0					
ANR	81124	CallExpression	Environment :: getEnv ( )		80658	0					
ANR	81125	Callee	Environment :: getEnv		80658	0					
ANR	81126	Identifier	Environment :: getEnv		80658	0					
ANR	81127	ArgumentList			80658	1					
ANR	81128	Identifier	allocator		80658	1					
ANR	81129	Argument	end_input_str		80658	1					
ANR	81130	Identifier	end_input_str		80658	0					
ANR	81131	ExpressionStatement	p_prefix = NULL	442:23:20741:20756	80658	24	True				
ANR	81132	AssignmentExpression	p_prefix = NULL		80658	0		=			
ANR	81133	Identifier	p_prefix		80658	0					
ANR	81134	Identifier	NULL		80658	1					
ANR	81135	IfStatement	if ( ! isValidReason )		80658	25					
ANR	81136	Condition	! isValidReason	445:23:20805:20818	80658	0	True				
ANR	81137	UnaryOperationExpression	! isValidReason		80658	0					
ANR	81138	UnaryOperator	!		80658	0					
ANR	81139	Identifier	isValidReason		80658	1					
ANR	81140	CompoundStatement		115:19:4755:4755	80658	1					
ANR	81141	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Nil value found in non-nillable property reason"" )"	449:28:20922:21029	80658	0	True				
ANR	81142	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Nil value found in non-nillable property reason"" )"		80658	0					
ANR	81143	Callee	WSF_LOG_ERROR_MSG		80658	0					
ANR	81144	Identifier	WSF_LOG_ERROR_MSG		80658	0					
ANR	81145	ArgumentList	Environment :: getEnv ( ) -> log		80658	1					
ANR	81146	Argument	Environment :: getEnv ( ) -> log		80658	0					
ANR	81147	PtrMemberAccess	Environment :: getEnv ( ) -> log		80658	0					
ANR	81148	CallExpression	Environment :: getEnv ( )		80658	0					
ANR	81149	Callee	Environment :: getEnv		80658	0					
ANR	81150	Identifier	Environment :: getEnv		80658	0					
ANR	81151	ArgumentList			80658	1					
ANR	81152	Identifier	log		80658	1					
ANR	81153	Argument	WSF_LOG_SI		80658	1					
ANR	81154	Identifier	WSF_LOG_SI		80658	0					
ANR	81155	Argument	"""Nil value found in non-nillable property reason"""		80658	2					
ANR	81156	PrimaryExpression	"""Nil value found in non-nillable property reason"""		80658	0					
ANR	81157	ReturnStatement	return NULL ;	450:28:21059:21070	80658	1	True				
ANR	81158	Identifier	NULL		80658	0					
ANR	81159	ElseStatement	else		80658	0					
ANR	81160	CompoundStatement		123:19:5078:5078	80658	0					
ANR	81161	ExpressionStatement	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""reason"" ) ) )"	455:21:21186:21413	80658	0	True				
ANR	81162	AssignmentExpression	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""reason"" ) ) )"		80658	0		=			
ANR	81163	Identifier	start_input_str		80658	0					
ANR	81164	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""reason"" ) ) )"		80658	1					
ANR	81165	CastTarget	axis2_char_t *		80658	0					
ANR	81166	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""reason"" ) ) )"		80658	1					
ANR	81167	Callee	AXIS2_MALLOC		80658	0					
ANR	81168	Identifier	AXIS2_MALLOC		80658	0					
ANR	81169	ArgumentList	Environment :: getEnv ( ) -> allocator		80658	1					
ANR	81170	Argument	Environment :: getEnv ( ) -> allocator		80658	0					
ANR	81171	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		80658	0					
ANR	81172	CallExpression	Environment :: getEnv ( )		80658	0					
ANR	81173	Callee	Environment :: getEnv		80658	0					
ANR	81174	Identifier	Environment :: getEnv		80658	0					
ANR	81175	ArgumentList			80658	1					
ANR	81176	Identifier	allocator		80658	1					
ANR	81177	Argument	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""reason"" ) )"		80658	1					
ANR	81178	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""reason"" ) )"		80658	0		*			
ANR	81179	SizeofExpression	sizeof ( axis2_char_t )		80658	0					
ANR	81180	Sizeof	sizeof		80658	0					
ANR	81181	SizeofOperand	axis2_char_t		80658	1					
ANR	81182	AdditiveExpression	"4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""reason"" )"		80658	1		+			
ANR	81183	PrimaryExpression	4		80658	0					
ANR	81184	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""reason"" )"		80658	1		+			
ANR	81185	CallExpression	axutil_strlen ( p_prefix )		80658	0					
ANR	81186	Callee	axutil_strlen		80658	0					
ANR	81187	Identifier	axutil_strlen		80658	0					
ANR	81188	ArgumentList	p_prefix		80658	1					
ANR	81189	Argument	p_prefix		80658	0					
ANR	81190	Identifier	p_prefix		80658	0					
ANR	81191	CallExpression	"axutil_strlen ( ""reason"" )"		80658	1					
ANR	81192	Callee	axutil_strlen		80658	0					
ANR	81193	Identifier	axutil_strlen		80658	0					
ANR	81194	ArgumentList	"""reason"""		80658	1					
ANR	81195	Argument	"""reason"""		80658	0					
ANR	81196	PrimaryExpression	"""reason"""		80658	0					
ANR	81197	ExpressionStatement	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""reason"" ) ) )"	460:21:21539:21729	80658	1	True				
ANR	81198	AssignmentExpression	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""reason"" ) ) )"		80658	0		=			
ANR	81199	Identifier	end_input_str		80658	0					
ANR	81200	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""reason"" ) ) )"		80658	1					
ANR	81201	CastTarget	axis2_char_t *		80658	0					
ANR	81202	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""reason"" ) ) )"		80658	1					
ANR	81203	Callee	AXIS2_MALLOC		80658	0					
ANR	81204	Identifier	AXIS2_MALLOC		80658	0					
ANR	81205	ArgumentList	Environment :: getEnv ( ) -> allocator		80658	1					
ANR	81206	Argument	Environment :: getEnv ( ) -> allocator		80658	0					
ANR	81207	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		80658	0					
ANR	81208	CallExpression	Environment :: getEnv ( )		80658	0					
ANR	81209	Callee	Environment :: getEnv		80658	0					
ANR	81210	Identifier	Environment :: getEnv		80658	0					
ANR	81211	ArgumentList			80658	1					
ANR	81212	Identifier	allocator		80658	1					
ANR	81213	Argument	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""reason"" ) )"		80658	1					
ANR	81214	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""reason"" ) )"		80658	0		*			
ANR	81215	SizeofExpression	sizeof ( axis2_char_t )		80658	0					
ANR	81216	Sizeof	sizeof		80658	0					
ANR	81217	SizeofOperand	axis2_char_t		80658	1					
ANR	81218	AdditiveExpression	"5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""reason"" )"		80658	1		+			
ANR	81219	PrimaryExpression	5		80658	0					
ANR	81220	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""reason"" )"		80658	1		+			
ANR	81221	CallExpression	axutil_strlen ( p_prefix )		80658	0					
ANR	81222	Callee	axutil_strlen		80658	0					
ANR	81223	Identifier	axutil_strlen		80658	0					
ANR	81224	ArgumentList	p_prefix		80658	1					
ANR	81225	Argument	p_prefix		80658	0					
ANR	81226	Identifier	p_prefix		80658	0					
ANR	81227	CallExpression	"axutil_strlen ( ""reason"" )"		80658	1					
ANR	81228	Callee	axutil_strlen		80658	0					
ANR	81229	Identifier	axutil_strlen		80658	0					
ANR	81230	ArgumentList	"""reason"""		80658	1					
ANR	81231	Argument	"""reason"""		80658	0					
ANR	81232	PrimaryExpression	"""reason"""		80658	0					
ANR	81233	ExpressionStatement	"sprintf ( start_input_str , ""<%s%sreason>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	475:28:22088:22266	80658	2	True				
ANR	81234	CallExpression	"sprintf ( start_input_str , ""<%s%sreason>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		80658	0					
ANR	81235	Callee	sprintf		80658	0					
ANR	81236	Identifier	sprintf		80658	0					
ANR	81237	ArgumentList	start_input_str		80658	1					
ANR	81238	Argument	start_input_str		80658	0					
ANR	81239	Identifier	start_input_str		80658	0					
ANR	81240	Argument	"""<%s%sreason>"""		80658	1					
ANR	81241	PrimaryExpression	"""<%s%sreason>"""		80658	0					
ANR	81242	Argument	"p_prefix ? p_prefix : """""		80658	2					
ANR	81243	ConditionalExpression	"p_prefix ? p_prefix : """""		80658	0					
ANR	81244	Condition	p_prefix		80658	0					
ANR	81245	Identifier	p_prefix		80658	0					
ANR	81246	Identifier	p_prefix		80658	1					
ANR	81247	PrimaryExpression	""""""		80658	2					
ANR	81248	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		80658	3					
ANR	81249	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		80658	0					
ANR	81250	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		80658	0					
ANR	81251	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		80658	0		&&			
ANR	81252	Identifier	p_prefix		80658	0					
ANR	81253	CallExpression	"axutil_strcmp ( p_prefix , """" )"		80658	1					
ANR	81254	Callee	axutil_strcmp		80658	0					
ANR	81255	Identifier	axutil_strcmp		80658	0					
ANR	81256	ArgumentList	p_prefix		80658	1					
ANR	81257	Argument	p_prefix		80658	0					
ANR	81258	Identifier	p_prefix		80658	0					
ANR	81259	Argument	""""""		80658	1					
ANR	81260	PrimaryExpression	""""""		80658	0					
ANR	81261	PrimaryExpression	""":"""		80658	1					
ANR	81262	PrimaryExpression	""""""		80658	2					
ANR	81263	ExpressionStatement	start_input_str_len = axutil_strlen ( start_input_str )	479:24:22321:22373	80658	3	True				
ANR	81264	AssignmentExpression	start_input_str_len = axutil_strlen ( start_input_str )		80658	0		=			
ANR	81265	Identifier	start_input_str_len		80658	0					
ANR	81266	CallExpression	axutil_strlen ( start_input_str )		80658	1					
ANR	81267	Callee	axutil_strlen		80658	0					
ANR	81268	Identifier	axutil_strlen		80658	0					
ANR	81269	ArgumentList	start_input_str		80658	1					
ANR	81270	Argument	start_input_str		80658	0					
ANR	81271	Identifier	start_input_str		80658	0					
ANR	81272	ExpressionStatement	"sprintf ( end_input_str , ""</%s%sreason>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	480:24:22399:22576	80658	4	True				
ANR	81273	CallExpression	"sprintf ( end_input_str , ""</%s%sreason>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		80658	0					
ANR	81274	Callee	sprintf		80658	0					
ANR	81275	Identifier	sprintf		80658	0					
ANR	81276	ArgumentList	end_input_str		80658	1					
ANR	81277	Argument	end_input_str		80658	0					
ANR	81278	Identifier	end_input_str		80658	0					
ANR	81279	Argument	"""</%s%sreason>"""		80658	1					
ANR	81280	PrimaryExpression	"""</%s%sreason>"""		80658	0					
ANR	81281	Argument	"p_prefix ? p_prefix : """""		80658	2					
ANR	81282	ConditionalExpression	"p_prefix ? p_prefix : """""		80658	0					
ANR	81283	Condition	p_prefix		80658	0					
ANR	81284	Identifier	p_prefix		80658	0					
ANR	81285	Identifier	p_prefix		80658	1					
ANR	81286	PrimaryExpression	""""""		80658	2					
ANR	81287	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		80658	3					
ANR	81288	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		80658	0					
ANR	81289	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		80658	0					
ANR	81290	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		80658	0		&&			
ANR	81291	Identifier	p_prefix		80658	0					
ANR	81292	CallExpression	"axutil_strcmp ( p_prefix , """" )"		80658	1					
ANR	81293	Callee	axutil_strcmp		80658	0					
ANR	81294	Identifier	axutil_strcmp		80658	0					
ANR	81295	ArgumentList	p_prefix		80658	1					
ANR	81296	Argument	p_prefix		80658	0					
ANR	81297	Identifier	p_prefix		80658	0					
ANR	81298	Argument	""""""		80658	1					
ANR	81299	PrimaryExpression	""""""		80658	0					
ANR	81300	PrimaryExpression	""":"""		80658	1					
ANR	81301	PrimaryExpression	""""""		80658	2					
ANR	81302	ExpressionStatement	end_input_str_len = axutil_strlen ( end_input_str )	483:24:22602:22650	80658	5	True				
ANR	81303	AssignmentExpression	end_input_str_len = axutil_strlen ( end_input_str )		80658	0		=			
ANR	81304	Identifier	end_input_str_len		80658	0					
ANR	81305	CallExpression	axutil_strlen ( end_input_str )		80658	1					
ANR	81306	Callee	axutil_strlen		80658	0					
ANR	81307	Identifier	axutil_strlen		80658	0					
ANR	81308	ArgumentList	end_input_str		80658	1					
ANR	81309	Argument	end_input_str		80658	0					
ANR	81310	Identifier	end_input_str		80658	0					
ANR	81311	ExpressionStatement	text_value_2 = ( axis2_char_t * ) property_Reason . c_str ( )	485:27:22700:22753	80658	6	True				
ANR	81312	AssignmentExpression	text_value_2 = ( axis2_char_t * ) property_Reason . c_str ( )		80658	0		=			
ANR	81313	Identifier	text_value_2		80658	0					
ANR	81314	CastExpression	( axis2_char_t * ) property_Reason . c_str ( )		80658	1					
ANR	81315	CastTarget	axis2_char_t *		80658	0					
ANR	81316	CallExpression	property_Reason . c_str ( )		80658	1					
ANR	81317	Callee	property_Reason . c_str		80658	0					
ANR	81318	MemberAccess	property_Reason . c_str		80658	0					
ANR	81319	Identifier	property_Reason		80658	0					
ANR	81320	Identifier	c_str		80658	1					
ANR	81321	ArgumentList			80658	1					
ANR	81322	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"	487:27:22810:22898	80658	7	True				
ANR	81323	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"		80658	0					
ANR	81324	Callee	axutil_stream_write		80658	0					
ANR	81325	Identifier	axutil_stream_write		80658	0					
ANR	81326	ArgumentList	stream		80658	1					
ANR	81327	Argument	stream		80658	0					
ANR	81328	Identifier	stream		80658	0					
ANR	81329	Argument	Environment :: getEnv ( )		80658	1					
ANR	81330	CallExpression	Environment :: getEnv ( )		80658	0					
ANR	81331	Callee	Environment :: getEnv		80658	0					
ANR	81332	Identifier	Environment :: getEnv		80658	0					
ANR	81333	ArgumentList			80658	1					
ANR	81334	Argument	start_input_str		80658	2					
ANR	81335	Identifier	start_input_str		80658	0					
ANR	81336	Argument	start_input_str_len		80658	3					
ANR	81337	Identifier	start_input_str_len		80658	0					
ANR	81338	ExpressionStatement	"text_value_2_temp = axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_2 , true )"	490:27:22984:23070	80658	8	True				
ANR	81339	AssignmentExpression	"text_value_2_temp = axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_2 , true )"		80658	0		=			
ANR	81340	Identifier	text_value_2_temp		80658	0					
ANR	81341	CallExpression	"axutil_xml_quote_string ( Environment :: getEnv ( ) , text_value_2 , true )"		80658	1					
ANR	81342	Callee	axutil_xml_quote_string		80658	0					
ANR	81343	Identifier	axutil_xml_quote_string		80658	0					
ANR	81344	ArgumentList	Environment :: getEnv ( )		80658	1					
ANR	81345	Argument	Environment :: getEnv ( )		80658	0					
ANR	81346	CallExpression	Environment :: getEnv ( )		80658	0					
ANR	81347	Callee	Environment :: getEnv		80658	0					
ANR	81348	Identifier	Environment :: getEnv		80658	0					
ANR	81349	ArgumentList			80658	1					
ANR	81350	Argument	text_value_2		80658	1					
ANR	81351	Identifier	text_value_2		80658	0					
ANR	81352	Argument	true		80658	2					
ANR	81353	Identifier	true		80658	0					
ANR	81354	IfStatement	if ( text_value_2_temp )		80658	9					
ANR	81355	Condition	text_value_2_temp	491:31:23103:23119	80658	0	True				
ANR	81356	Identifier	text_value_2_temp		80658	0					
ANR	81357	CompoundStatement		161:27:7064:7064	80658	1					
ANR	81358	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_2_temp , axutil_strlen ( text_value_2_temp ) )"	493:31:23182:23285	80658	0	True				
ANR	81359	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_2_temp , axutil_strlen ( text_value_2_temp ) )"		80658	0					
ANR	81360	Callee	axutil_stream_write		80658	0					
ANR	81361	Identifier	axutil_stream_write		80658	0					
ANR	81362	ArgumentList	stream		80658	1					
ANR	81363	Argument	stream		80658	0					
ANR	81364	Identifier	stream		80658	0					
ANR	81365	Argument	Environment :: getEnv ( )		80658	1					
ANR	81366	CallExpression	Environment :: getEnv ( )		80658	0					
ANR	81367	Callee	Environment :: getEnv		80658	0					
ANR	81368	Identifier	Environment :: getEnv		80658	0					
ANR	81369	ArgumentList			80658	1					
ANR	81370	Argument	text_value_2_temp		80658	2					
ANR	81371	Identifier	text_value_2_temp		80658	0					
ANR	81372	Argument	axutil_strlen ( text_value_2_temp )		80658	3					
ANR	81373	CallExpression	axutil_strlen ( text_value_2_temp )		80658	0					
ANR	81374	Callee	axutil_strlen		80658	0					
ANR	81375	Identifier	axutil_strlen		80658	0					
ANR	81376	ArgumentList	text_value_2_temp		80658	1					
ANR	81377	Argument	text_value_2_temp		80658	0					
ANR	81378	Identifier	text_value_2_temp		80658	0					
ANR	81379	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value_2_temp )"	494:31:23318:23381	80658	1	True				
ANR	81380	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value_2_temp )"		80658	0					
ANR	81381	Callee	AXIS2_FREE		80658	0					
ANR	81382	Identifier	AXIS2_FREE		80658	0					
ANR	81383	ArgumentList	Environment :: getEnv ( ) -> allocator		80658	1					
ANR	81384	Argument	Environment :: getEnv ( ) -> allocator		80658	0					
ANR	81385	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		80658	0					
ANR	81386	CallExpression	Environment :: getEnv ( )		80658	0					
ANR	81387	Callee	Environment :: getEnv		80658	0					
ANR	81388	Identifier	Environment :: getEnv		80658	0					
ANR	81389	ArgumentList			80658	1					
ANR	81390	Identifier	allocator		80658	1					
ANR	81391	Argument	text_value_2_temp		80658	1					
ANR	81392	Identifier	text_value_2_temp		80658	0					
ANR	81393	ElseStatement	else		80658	0					
ANR	81394	CompoundStatement		166:27:7386:7386	80658	0					
ANR	81395	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_2 , axutil_strlen ( text_value_2 ) )"	498:31:23504:23597	80658	0	True				
ANR	81396	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , text_value_2 , axutil_strlen ( text_value_2 ) )"		80658	0					
ANR	81397	Callee	axutil_stream_write		80658	0					
ANR	81398	Identifier	axutil_stream_write		80658	0					
ANR	81399	ArgumentList	stream		80658	1					
ANR	81400	Argument	stream		80658	0					
ANR	81401	Identifier	stream		80658	0					
ANR	81402	Argument	Environment :: getEnv ( )		80658	1					
ANR	81403	CallExpression	Environment :: getEnv ( )		80658	0					
ANR	81404	Callee	Environment :: getEnv		80658	0					
ANR	81405	Identifier	Environment :: getEnv		80658	0					
ANR	81406	ArgumentList			80658	1					
ANR	81407	Argument	text_value_2		80658	2					
ANR	81408	Identifier	text_value_2		80658	0					
ANR	81409	Argument	axutil_strlen ( text_value_2 )		80658	3					
ANR	81410	CallExpression	axutil_strlen ( text_value_2 )		80658	0					
ANR	81411	Callee	axutil_strlen		80658	0					
ANR	81412	Identifier	axutil_strlen		80658	0					
ANR	81413	ArgumentList	text_value_2		80658	1					
ANR	81414	Argument	text_value_2		80658	0					
ANR	81415	Identifier	text_value_2		80658	0					
ANR	81416	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"	501:27:23683:23767	80658	10	True				
ANR	81417	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"		80658	0					
ANR	81418	Callee	axutil_stream_write		80658	0					
ANR	81419	Identifier	axutil_stream_write		80658	0					
ANR	81420	ArgumentList	stream		80658	1					
ANR	81421	Argument	stream		80658	0					
ANR	81422	Identifier	stream		80658	0					
ANR	81423	Argument	Environment :: getEnv ( )		80658	1					
ANR	81424	CallExpression	Environment :: getEnv ( )		80658	0					
ANR	81425	Callee	Environment :: getEnv		80658	0					
ANR	81426	Identifier	Environment :: getEnv		80658	0					
ANR	81427	ArgumentList			80658	1					
ANR	81428	Argument	end_input_str		80658	2					
ANR	81429	Identifier	end_input_str		80658	0					
ANR	81430	Argument	end_input_str_len		80658	3					
ANR	81431	Identifier	end_input_str_len		80658	0					
ANR	81432	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"	504:21:23840:23900	80658	11	True				
ANR	81433	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"		80658	0					
ANR	81434	Callee	AXIS2_FREE		80658	0					
ANR	81435	Identifier	AXIS2_FREE		80658	0					
ANR	81436	ArgumentList	Environment :: getEnv ( ) -> allocator		80658	1					
ANR	81437	Argument	Environment :: getEnv ( ) -> allocator		80658	0					
ANR	81438	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		80658	0					
ANR	81439	CallExpression	Environment :: getEnv ( )		80658	0					
ANR	81440	Callee	Environment :: getEnv		80658	0					
ANR	81441	Identifier	Environment :: getEnv		80658	0					
ANR	81442	ArgumentList			80658	1					
ANR	81443	Identifier	allocator		80658	1					
ANR	81444	Argument	start_input_str		80658	1					
ANR	81445	Identifier	start_input_str		80658	0					
ANR	81446	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"	505:21:23923:23981	80658	12	True				
ANR	81447	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"		80658	0					
ANR	81448	Callee	AXIS2_FREE		80658	0					
ANR	81449	Identifier	AXIS2_FREE		80658	0					
ANR	81450	ArgumentList	Environment :: getEnv ( ) -> allocator		80658	1					
ANR	81451	Argument	Environment :: getEnv ( ) -> allocator		80658	0					
ANR	81452	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		80658	0					
ANR	81453	CallExpression	Environment :: getEnv ( )		80658	0					
ANR	81454	Callee	Environment :: getEnv		80658	0					
ANR	81455	Identifier	Environment :: getEnv		80658	0					
ANR	81456	ArgumentList			80658	1					
ANR	81457	Identifier	allocator		80658	1					
ANR	81458	Argument	end_input_str		80658	1					
ANR	81459	Identifier	end_input_str		80658	0					
ANR	81460	ReturnStatement	return parent ;	510:12:24035:24048	80658	26	True				
ANR	81461	Identifier	parent		80658	0					
ANR	81462	ReturnType	WSF_CALL		80658	1					
ANR	81463	Identifier	AviaryJob :: ControlJob :: serialize		80658	2					
ANR	81464	ParameterList	"axiom_node_t * parent , axiom_element_t * parent_element , int parent_tag_closed , axutil_hash_t * namespaces , int * next_ns_index"		80658	3					
ANR	81465	Parameter	axiom_node_t * parent	327:34:15935:15954	80658	0	True				
ANR	81466	ParameterType	axiom_node_t *		80658	0					
ANR	81467	Identifier	parent		80658	1					
ANR	81468	Parameter	axiom_element_t * parent_element	328:3:15961:15991	80658	1	True				
ANR	81469	ParameterType	axiom_element_t *		80658	0					
ANR	81470	Identifier	parent_element		80658	1					
ANR	81471	Parameter	int parent_tag_closed	329:3:15998:16018	80658	2	True				
ANR	81472	ParameterType	int		80658	0					
ANR	81473	Identifier	parent_tag_closed		80658	1					
ANR	81474	Parameter	axutil_hash_t * namespaces	330:3:16025:16049	80658	3	True				
ANR	81475	ParameterType	axutil_hash_t *		80658	0					
ANR	81476	Identifier	namespaces		80658	1					
ANR	81477	Parameter	int * next_ns_index	331:3:16056:16073	80658	4	True				
ANR	81478	ParameterType	int *		80658	0					
ANR	81479	Identifier	next_ns_index		80658	1					
ANR	81480	CFGEntryNode	ENTRY		80658		True				
ANR	81481	CFGExitNode	EXIT		80658		True				
ANR	81482	Symbol	parent		80658						
ANR	81483	Symbol	Environment :: getEnv		80658						
ANR	81484	Symbol	current_node		80658						
ANR	81485	Symbol	qname_uri		80658						
ANR	81486	Symbol	axutil_strlen		80658						
ANR	81487	Symbol	p_prefix		80658						
ANR	81488	Symbol	property_Reason		80658						
ANR	81489	Symbol	ns1		80658						
ANR	81490	Symbol	axiom_node_get_data_element		80658						
ANR	81491	Symbol	property_Id		80658						
ANR	81492	Symbol	isValidReason		80658						
ANR	81493	Symbol	text_value_2		80658						
ANR	81494	Symbol	isValidId		80658						
ANR	81495	Symbol	WSF_LOG_SI		80658						
ANR	81496	Symbol	stream		80658						
ANR	81497	Symbol	property_Id -> isParticle		80658						
ANR	81498	Symbol	text_value_1		80658						
ANR	81499	Symbol	AXIS2_MALLOC		80658						
ANR	81500	Symbol	Environment :: getEnv ( ) -> allocator		80658						
ANR	81501	Symbol	parent_element		80658						
ANR	81502	Symbol	axiom_data_source_get_stream		80658						
ANR	81503	Symbol	NULL		80658						
ANR	81504	Symbol	end_input_str_len		80658						
ANR	81505	Symbol	tag_closed		80658						
ANR	81506	Symbol	false		80658						
ANR	81507	Symbol	start_input_str		80658						
ANR	81508	Symbol	parent_tag_closed		80658						
ANR	81509	Symbol	next_ns_index		80658						
ANR	81510	Symbol	Environment :: getEnv ( ) -> log		80658						
ANR	81511	Symbol	string_to_stream		80658						
ANR	81512	Symbol	data_source		80658						
ANR	81513	Symbol	start_input_str_len		80658						
ANR	81514	Symbol	* property_Id		80658						
ANR	81515	Symbol	axutil_xml_quote_string		80658						
ANR	81516	Symbol	qname_prefix		80658						
ANR	81517	Symbol	text_value_2_temp		80658						
ANR	81518	Symbol	* Environment :: getEnv		80658						
ANR	81519	Symbol	axutil_strcmp		80658						
ANR	81520	Symbol	end_input_str		80658						
ANR	81521	Symbol	true		80658						
ANR	81522	Symbol	property_Reason . c_str		80658						
ANR	81523	Symbol	namespaces		80658						
ANR	81524	Function	AviaryJob :: ControlJob :: getProperty1	519:33:24188:24305							
ANR	81525	FunctionDef	AviaryJob :: ControlJob :: getProperty1 ()		81524	0					
ANR	81526	CompoundStatement		521:12:24259:24305	81524	0					
ANR	81527	ReturnStatement	return getId ( ) ;	522:16:24277:24291	81524	0	True				
ANR	81528	CallExpression	getId ( )		81524	0					
ANR	81529	Callee	getId		81524	0					
ANR	81530	Identifier	getId		81524	0					
ANR	81531	ArgumentList			81524	1					
ANR	81532	ReturnType	WSF_CALL		81524	1					
ANR	81533	Identifier	AviaryJob :: ControlJob :: getProperty1		81524	2					
ANR	81534	ParameterList			81524	3					
ANR	81535	CFGEntryNode	ENTRY		81524		True				
ANR	81536	CFGExitNode	EXIT		81524		True				
ANR	81537	Symbol	getId		81524						
ANR	81538	Function	AviaryJob :: ControlJob :: getId	528:33:24403:24519							
ANR	81539	FunctionDef	AviaryJob :: ControlJob :: getId ()		81538	0					
ANR	81540	CompoundStatement		530:13:24468:24519	81538	0					
ANR	81541	ReturnStatement	return property_Id ;	531:16:24486:24504	81538	0	True				
ANR	81542	Identifier	property_Id		81538	0					
ANR	81543	ReturnType	WSF_CALL		81538	1					
ANR	81544	Identifier	AviaryJob :: ControlJob :: getId		81538	2					
ANR	81545	ParameterList			81538	3					
ANR	81546	CFGEntryNode	ENTRY		81538		True				
ANR	81547	CFGExitNode	EXIT		81538		True				
ANR	81548	Symbol	property_Id		81538						
ANR	81549	Function	AviaryJob :: ControlJob :: setId	537:12:24595:25635							
ANR	81550	FunctionDef	AviaryJob :: ControlJob :: setId (AviaryCommon :: JobID * arg_Id)		81549	0					
ANR	81551	CompoundStatement		540:13:24714:25635	81549	0					
ANR	81552	IfStatement	if ( isValidId && arg_Id == property_Id )		81549	0					
ANR	81553	Condition	isValidId && arg_Id == property_Id	543:19:24753:24810	81549	0	True				
ANR	81554	AndExpression	isValidId && arg_Id == property_Id		81549	0		&&			
ANR	81555	Identifier	isValidId		81549	0					
ANR	81556	EqualityExpression	arg_Id == property_Id		81549	1		==			
ANR	81557	Identifier	arg_Id		81549	0					
ANR	81558	Identifier	property_Id		81549	1					
ANR	81559	CompoundStatement		6:16:114:114	81549	1					
ANR	81560	ReturnStatement	return true ;	547:20:24872:24883	81549	0	True				
ANR	81561	Identifier	true		81549	0					
ANR	81562	IfStatement	if ( NULL == arg_Id )		81549	1					
ANR	81563	Condition	NULL == arg_Id	551:21:24942:24955	81549	0	True				
ANR	81564	EqualityExpression	NULL == arg_Id		81549	0		==			
ANR	81565	Identifier	NULL		81549	0					
ANR	81566	Identifier	arg_Id		81549	1					
ANR	81567	CompoundStatement		14:18:285:285	81549	1					
ANR	81568	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""id is being set to NULL, but it is not a nullable element"" )"	554:22:25024:25141	81549	0	True				
ANR	81569	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""id is being set to NULL, but it is not a nullable element"" )"		81549	0					
ANR	81570	Callee	WSF_LOG_ERROR_MSG		81549	0					
ANR	81571	Identifier	WSF_LOG_ERROR_MSG		81549	0					
ANR	81572	ArgumentList	Environment :: getEnv ( ) -> log		81549	1					
ANR	81573	Argument	Environment :: getEnv ( ) -> log		81549	0					
ANR	81574	PtrMemberAccess	Environment :: getEnv ( ) -> log		81549	0					
ANR	81575	CallExpression	Environment :: getEnv ( )		81549	0					
ANR	81576	Callee	Environment :: getEnv		81549	0					
ANR	81577	Identifier	Environment :: getEnv		81549	0					
ANR	81578	ArgumentList			81549	1					
ANR	81579	Identifier	log		81549	1					
ANR	81580	Argument	WSF_LOG_SI		81549	1					
ANR	81581	Identifier	WSF_LOG_SI		81549	0					
ANR	81582	Argument	"""id is being set to NULL, but it is not a nullable element"""		81549	2					
ANR	81583	PrimaryExpression	"""id is being set to NULL, but it is not a nullable element"""		81549	0					
ANR	81584	ReturnStatement	return AXIS2_FAILURE ;	555:22:25165:25185	81549	1	True				
ANR	81585	Identifier	AXIS2_FAILURE		81549	0					
ANR	81586	ExpressionStatement	resetId ( )	560:16:25258:25267	81549	2	True				
ANR	81587	CallExpression	resetId ( )		81549	0					
ANR	81588	Callee	resetId		81549	0					
ANR	81589	Identifier	resetId		81549	0					
ANR	81590	ArgumentList			81549	1					
ANR	81591	IfStatement	if ( NULL == arg_Id )		81549	3					
ANR	81592	Condition	NULL == arg_Id	563:23:25310:25323	81549	0	True				
ANR	81593	EqualityExpression	NULL == arg_Id		81549	0		==			
ANR	81594	Identifier	NULL		81549	0					
ANR	81595	Identifier	arg_Id		81549	1					
ANR	81596	CompoundStatement		26:16:653:653	81549	1					
ANR	81597	ReturnStatement	return true ;	567:20:25436:25447	81549	0	True				
ANR	81598	Identifier	true		81549	0					
ANR	81599	ExpressionStatement	property_Id = arg_Id	570:24:25508:25528	81549	4	True				
ANR	81600	AssignmentExpression	property_Id = arg_Id		81549	0		=			
ANR	81601	Identifier	property_Id		81549	0					
ANR	81602	Identifier	arg_Id		81549	1					
ANR	81603	ExpressionStatement	isValidId = true	571:24:25554:25570	81549	5	True				
ANR	81604	AssignmentExpression	isValidId = true		81549	0		=			
ANR	81605	Identifier	isValidId		81549	0					
ANR	81606	Identifier	true		81549	1					
ANR	81607	ReturnStatement	return true ;	573:16:25609:25620	81549	6	True				
ANR	81608	Identifier	true		81549	0					
ANR	81609	ReturnType	bool WSF_CALL		81549	1					
ANR	81610	Identifier	AviaryJob :: ControlJob :: setId		81549	2					
ANR	81611	ParameterList	AviaryCommon :: JobID * arg_Id		81549	3					
ANR	81612	Parameter	AviaryCommon :: JobID * arg_Id	539:20:24671:24698	81549	0	True				
ANR	81613	ParameterType	AviaryCommon :: JobID *		81549	0					
ANR	81614	Identifier	arg_Id		81549	1					
ANR	81615	CFGEntryNode	ENTRY		81549		True				
ANR	81616	CFGExitNode	EXIT		81549		True				
ANR	81617	Symbol	Environment :: getEnv		81549						
ANR	81618	Symbol	NULL		81549						
ANR	81619	Symbol	isValidId		81549						
ANR	81620	Symbol	WSF_LOG_SI		81549						
ANR	81621	Symbol	* Environment :: getEnv		81549						
ANR	81622	Symbol	arg_Id		81549						
ANR	81623	Symbol	true		81549						
ANR	81624	Symbol	Environment :: getEnv ( ) -> log		81549						
ANR	81625	Symbol	AXIS2_FAILURE		81549						
ANR	81626	Symbol	property_Id		81549						
ANR	81627	Function	AviaryJob :: ControlJob :: resetId	581:11:25724:26214							
ANR	81628	FunctionDef	AviaryJob :: ControlJob :: resetId ()		81627	0					
ANR	81629	CompoundStatement		583:11:25793:26214	81627	0					
ANR	81630	IdentifierDeclStatement	int i = 0 ;	584:15:25810:25819	81627	0	True				
ANR	81631	IdentifierDecl	i = 0		81627	0					
ANR	81632	IdentifierDeclType	int		81627	0					
ANR	81633	Identifier	i		81627	1					
ANR	81634	AssignmentExpression	i = 0		81627	2		=			
ANR	81635	Identifier	i		81627	0					
ANR	81636	PrimaryExpression	0		81627	1					
ANR	81637	IdentifierDeclStatement	int count = 0 ;	585:15:25836:25849	81627	1	True				
ANR	81638	IdentifierDecl	count = 0		81627	0					
ANR	81639	IdentifierDeclType	int		81627	0					
ANR	81640	Identifier	count		81627	1					
ANR	81641	AssignmentExpression	count = 0		81627	2		=			
ANR	81642	Identifier	count		81627	0					
ANR	81643	PrimaryExpression	0		81627	1					
ANR	81644	IfStatement	if ( property_Id != NULL )		81627	2					
ANR	81645	Condition	property_Id != NULL	592:19:25919:25937	81627	0	True				
ANR	81646	EqualityExpression	property_Id != NULL		81627	0		!=			
ANR	81647	Identifier	property_Id		81627	0					
ANR	81648	Identifier	NULL		81627	1					
ANR	81649	CompoundStatement		11:16:162:162	81627	1					
ANR	81650	Statement	delete	596:25:26023:26028	81627	0	True				
ANR	81651	ExpressionStatement	property_Id	596:33:26031:26042	81627	1	True				
ANR	81652	Identifier	property_Id		81627	0					
ANR	81653	ExpressionStatement	isValidId = false	604:15:26155:26172	81627	3	True				
ANR	81654	AssignmentExpression	isValidId = false		81627	0		=			
ANR	81655	Identifier	isValidId		81627	0					
ANR	81656	Identifier	false		81627	1					
ANR	81657	ReturnStatement	return true ;	605:15:26190:26201	81627	4	True				
ANR	81658	Identifier	true		81627	0					
ANR	81659	ReturnType	bool WSF_CALL		81627	1					
ANR	81660	Identifier	AviaryJob :: ControlJob :: resetId		81627	2					
ANR	81661	ParameterList			81627	3					
ANR	81662	CFGEntryNode	ENTRY		81627		True				
ANR	81663	CFGExitNode	EXIT		81627		True				
ANR	81664	Symbol	NULL		81627						
ANR	81665	Symbol	isValidId		81627						
ANR	81666	Symbol	count		81627						
ANR	81667	Symbol	false		81627						
ANR	81668	Symbol	true		81627						
ANR	81669	Symbol	i		81627						
ANR	81670	Symbol	property_Id		81627						
ANR	81671	Function	AviaryJob :: ControlJob :: isIdNil	611:11:26297:26413							
ANR	81672	FunctionDef	AviaryJob :: ControlJob :: isIdNil ()		81671	0					
ANR	81673	CompoundStatement		613:11:26366:26413	81671	0					
ANR	81674	ReturnStatement	return ! isValidId ;	614:15:26383:26400	81671	0	True				
ANR	81675	UnaryOperationExpression	! isValidId		81671	0					
ANR	81676	UnaryOperator	!		81671	0					
ANR	81677	Identifier	isValidId		81671	1					
ANR	81678	ReturnType	bool WSF_CALL		81671	1					
ANR	81679	Identifier	AviaryJob :: ControlJob :: isIdNil		81671	2					
ANR	81680	ParameterList			81671	3					
ANR	81681	CFGEntryNode	ENTRY		81671		True				
ANR	81682	CFGExitNode	EXIT		81671		True				
ANR	81683	Symbol	isValidId		81671						
ANR	81684	Function	AviaryJob :: ControlJob :: setIdNil	620:11:26516:26632							
ANR	81685	FunctionDef	AviaryJob :: ControlJob :: setIdNil ()		81684	0					
ANR	81686	CompoundStatement		622:11:26586:26632	81684	0					
ANR	81687	ReturnStatement	return resetId ( ) ;	623:15:26603:26619	81684	0	True				
ANR	81688	CallExpression	resetId ( )		81684	0					
ANR	81689	Callee	resetId		81684	0					
ANR	81690	Identifier	resetId		81684	0					
ANR	81691	ArgumentList			81684	1					
ANR	81692	ReturnType	bool WSF_CALL		81684	1					
ANR	81693	Identifier	AviaryJob :: ControlJob :: setIdNil		81684	2					
ANR	81694	ParameterList			81684	3					
ANR	81695	CFGEntryNode	ENTRY		81684		True				
ANR	81696	CFGExitNode	EXIT		81684		True				
ANR	81697	Symbol	resetId		81684						
ANR	81698	Function	AviaryJob :: ControlJob :: getProperty2	631:12:26747:26880							
ANR	81699	FunctionDef	AviaryJob :: ControlJob :: getProperty2 ()		81698	0					
ANR	81700	CompoundStatement		633:12:26830:26880	81698	0					
ANR	81701	ReturnStatement	return getReason ( ) ;	634:16:26848:26866	81698	0	True				
ANR	81702	CallExpression	getReason ( )		81698	0					
ANR	81703	Callee	getReason		81698	0					
ANR	81704	Identifier	getReason		81698	0					
ANR	81705	ArgumentList			81698	1					
ANR	81706	ReturnType	std :: string WSF_CALL		81698	1					
ANR	81707	Identifier	AviaryJob :: ControlJob :: getProperty2		81698	2					
ANR	81708	ParameterList			81698	3					
ANR	81709	CFGEntryNode	ENTRY		81698		True				
ANR	81710	CFGExitNode	EXIT		81698		True				
ANR	81711	Symbol	getReason		81698						
ANR	81712	Function	AviaryJob :: ControlJob :: getReason	640:12:26961:27097							
ANR	81713	FunctionDef	AviaryJob :: ControlJob :: getReason ()		81712	0					
ANR	81714	CompoundStatement		642:13:27042:27097	81712	0					
ANR	81715	ReturnStatement	return property_Reason ;	643:16:27060:27082	81712	0	True				
ANR	81716	Identifier	property_Reason		81712	0					
ANR	81717	ReturnType	std :: string WSF_CALL		81712	1					
ANR	81718	Identifier	AviaryJob :: ControlJob :: getReason		81712	2					
ANR	81719	ParameterList			81712	3					
ANR	81720	CFGEntryNode	ENTRY		81712		True				
ANR	81721	CFGExitNode	EXIT		81712		True				
ANR	81722	Symbol	property_Reason		81712						
ANR	81723	Function	AviaryJob :: ControlJob :: setReason	649:12:27177:28082							
ANR	81724	FunctionDef	AviaryJob :: ControlJob :: setReason (const std :: string arg_Reason)		81723	0					
ANR	81725	CompoundStatement		652:13:27301:28082	81723	0					
ANR	81726	IfStatement	if ( isValidReason && arg_Reason == property_Reason )		81723	0					
ANR	81727	Condition	isValidReason && arg_Reason == property_Reason	655:19:27340:27409	81723	0	True				
ANR	81728	AndExpression	isValidReason && arg_Reason == property_Reason		81723	0		&&			
ANR	81729	Identifier	isValidReason		81723	0					
ANR	81730	EqualityExpression	arg_Reason == property_Reason		81723	1		==			
ANR	81731	Identifier	arg_Reason		81723	0					
ANR	81732	Identifier	property_Reason		81723	1					
ANR	81733	CompoundStatement		6:16:126:126	81723	1					
ANR	81734	ReturnStatement	return true ;	659:20:27471:27482	81723	0	True				
ANR	81735	Identifier	true		81723	0					
ANR	81736	IfStatement	if ( arg_Reason . empty ( ) )		81723	1					
ANR	81737	Condition	arg_Reason . empty ( )	663:21:27541:27558	81723	0	True				
ANR	81738	CallExpression	arg_Reason . empty ( )		81723	0					
ANR	81739	Callee	arg_Reason . empty		81723	0					
ANR	81740	MemberAccess	arg_Reason . empty		81723	0					
ANR	81741	Identifier	arg_Reason		81723	0					
ANR	81742	Identifier	empty		81723	1					
ANR	81743	ArgumentList			81723	1					
ANR	81744	CompoundStatement		14:18:301:301	81723	1					
ANR	81745	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""reason is being set to NULL, but it is not a nullable element"" )"	666:22:27627:27748	81723	0	True				
ANR	81746	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""reason is being set to NULL, but it is not a nullable element"" )"		81723	0					
ANR	81747	Callee	WSF_LOG_ERROR_MSG		81723	0					
ANR	81748	Identifier	WSF_LOG_ERROR_MSG		81723	0					
ANR	81749	ArgumentList	Environment :: getEnv ( ) -> log		81723	1					
ANR	81750	Argument	Environment :: getEnv ( ) -> log		81723	0					
ANR	81751	PtrMemberAccess	Environment :: getEnv ( ) -> log		81723	0					
ANR	81752	CallExpression	Environment :: getEnv ( )		81723	0					
ANR	81753	Callee	Environment :: getEnv		81723	0					
ANR	81754	Identifier	Environment :: getEnv		81723	0					
ANR	81755	ArgumentList			81723	1					
ANR	81756	Identifier	log		81723	1					
ANR	81757	Argument	WSF_LOG_SI		81723	1					
ANR	81758	Identifier	WSF_LOG_SI		81723	0					
ANR	81759	Argument	"""reason is being set to NULL, but it is not a nullable element"""		81723	2					
ANR	81760	PrimaryExpression	"""reason is being set to NULL, but it is not a nullable element"""		81723	0					
ANR	81761	ReturnStatement	return AXIS2_FAILURE ;	667:22:27772:27792	81723	1	True				
ANR	81762	Identifier	AXIS2_FAILURE		81723	0					
ANR	81763	ExpressionStatement	resetReason ( )	672:16:27865:27878	81723	2	True				
ANR	81764	CallExpression	resetReason ( )		81723	0					
ANR	81765	Callee	resetReason		81723	0					
ANR	81766	Identifier	resetReason		81723	0					
ANR	81767	ArgumentList			81723	1					
ANR	81768	ExpressionStatement	property_Reason = std :: string ( arg_Reason . c_str ( ) )	675:24:27922:27971	81723	3	True				
ANR	81769	AssignmentExpression	property_Reason = std :: string ( arg_Reason . c_str ( ) )		81723	0		=			
ANR	81770	Identifier	property_Reason		81723	0					
ANR	81771	CallExpression	std :: string ( arg_Reason . c_str ( ) )		81723	1					
ANR	81772	Callee	std :: string		81723	0					
ANR	81773	Identifier	std :: string		81723	0					
ANR	81774	ArgumentList	arg_Reason . c_str ( )		81723	1					
ANR	81775	Argument	arg_Reason . c_str ( )		81723	0					
ANR	81776	CallExpression	arg_Reason . c_str ( )		81723	0					
ANR	81777	Callee	arg_Reason . c_str		81723	0					
ANR	81778	MemberAccess	arg_Reason . c_str		81723	0					
ANR	81779	Identifier	arg_Reason		81723	0					
ANR	81780	Identifier	c_str		81723	1					
ANR	81781	ArgumentList			81723	1					
ANR	81782	ExpressionStatement	isValidReason = true	676:24:27997:28017	81723	4	True				
ANR	81783	AssignmentExpression	isValidReason = true		81723	0		=			
ANR	81784	Identifier	isValidReason		81723	0					
ANR	81785	Identifier	true		81723	1					
ANR	81786	ReturnStatement	return true ;	678:16:28056:28067	81723	5	True				
ANR	81787	Identifier	true		81723	0					
ANR	81788	ReturnType	bool WSF_CALL		81723	1					
ANR	81789	Identifier	AviaryJob :: ControlJob :: setReason		81723	2					
ANR	81790	ParameterList	const std :: string arg_Reason		81723	3					
ANR	81791	Parameter	const std :: string arg_Reason	651:20:27257:27285	81723	0	True				
ANR	81792	ParameterType	const std :: string		81723	0					
ANR	81793	Identifier	arg_Reason		81723	1					
ANR	81794	CFGEntryNode	ENTRY		81723		True				
ANR	81795	CFGExitNode	EXIT		81723		True				
ANR	81796	Symbol	isValidReason		81723						
ANR	81797	Symbol	Environment :: getEnv		81723						
ANR	81798	Symbol	WSF_LOG_SI		81723						
ANR	81799	Symbol	std :: string		81723						
ANR	81800	Symbol	* Environment :: getEnv		81723						
ANR	81801	Symbol	true		81723						
ANR	81802	Symbol	arg_Reason . empty		81723						
ANR	81803	Symbol	property_Reason		81723						
ANR	81804	Symbol	arg_Reason		81723						
ANR	81805	Symbol	Environment :: getEnv ( ) -> log		81723						
ANR	81806	Symbol	AXIS2_FAILURE		81723						
ANR	81807	Symbol	arg_Reason . c_str		81723						
ANR	81808	Function	AviaryJob :: ControlJob :: resetReason	686:11:28175:28402							
ANR	81809	FunctionDef	AviaryJob :: ControlJob :: resetReason ()		81808	0					
ANR	81810	CompoundStatement		688:11:28248:28402	81808	0					
ANR	81811	IdentifierDeclStatement	int i = 0 ;	689:15:28265:28274	81808	0	True				
ANR	81812	IdentifierDecl	i = 0		81808	0					
ANR	81813	IdentifierDeclType	int		81808	0					
ANR	81814	Identifier	i		81808	1					
ANR	81815	AssignmentExpression	i = 0		81808	2		=			
ANR	81816	Identifier	i		81808	0					
ANR	81817	PrimaryExpression	0		81808	1					
ANR	81818	IdentifierDeclStatement	int count = 0 ;	690:15:28291:28304	81808	1	True				
ANR	81819	IdentifierDecl	count = 0		81808	0					
ANR	81820	IdentifierDeclType	int		81808	0					
ANR	81821	Identifier	count		81808	1					
ANR	81822	AssignmentExpression	count = 0		81808	2		=			
ANR	81823	Identifier	count		81808	0					
ANR	81824	PrimaryExpression	0		81808	1					
ANR	81825	ExpressionStatement	isValidReason = false	694:15:28339:28360	81808	2	True				
ANR	81826	AssignmentExpression	isValidReason = false		81808	0		=			
ANR	81827	Identifier	isValidReason		81808	0					
ANR	81828	Identifier	false		81808	1					
ANR	81829	ReturnStatement	return true ;	695:15:28378:28389	81808	3	True				
ANR	81830	Identifier	true		81808	0					
ANR	81831	ReturnType	bool WSF_CALL		81808	1					
ANR	81832	Identifier	AviaryJob :: ControlJob :: resetReason		81808	2					
ANR	81833	ParameterList			81808	3					
ANR	81834	CFGEntryNode	ENTRY		81808		True				
ANR	81835	CFGExitNode	EXIT		81808		True				
ANR	81836	Symbol	isValidReason		81808						
ANR	81837	Symbol	count		81808						
ANR	81838	Symbol	false		81808						
ANR	81839	Symbol	true		81808						
ANR	81840	Symbol	i		81808						
ANR	81841	Function	AviaryJob :: ControlJob :: isReasonNil	701:11:28489:28613							
ANR	81842	FunctionDef	AviaryJob :: ControlJob :: isReasonNil ()		81841	0					
ANR	81843	CompoundStatement		703:11:28562:28613	81841	0					
ANR	81844	ReturnStatement	return ! isValidReason ;	704:15:28579:28600	81841	0	True				
ANR	81845	UnaryOperationExpression	! isValidReason		81841	0					
ANR	81846	UnaryOperator	!		81841	0					
ANR	81847	Identifier	isValidReason		81841	1					
ANR	81848	ReturnType	bool WSF_CALL		81841	1					
ANR	81849	Identifier	AviaryJob :: ControlJob :: isReasonNil		81841	2					
ANR	81850	ParameterList			81841	3					
ANR	81851	CFGEntryNode	ENTRY		81841		True				
ANR	81852	CFGExitNode	EXIT		81841		True				
ANR	81853	Symbol	isValidReason		81841						
ANR	81854	Function	AviaryJob :: ControlJob :: setReasonNil	710:11:28720:28844							
ANR	81855	FunctionDef	AviaryJob :: ControlJob :: setReasonNil ()		81854	0					
ANR	81856	CompoundStatement		712:11:28794:28844	81854	0					
ANR	81857	ReturnStatement	return resetReason ( ) ;	713:15:28811:28831	81854	0	True				
ANR	81858	CallExpression	resetReason ( )		81854	0					
ANR	81859	Callee	resetReason		81854	0					
ANR	81860	Identifier	resetReason		81854	0					
ANR	81861	ArgumentList			81854	1					
ANR	81862	ReturnType	bool WSF_CALL		81854	1					
ANR	81863	Identifier	AviaryJob :: ControlJob :: setReasonNil		81854	2					
ANR	81864	ParameterList			81854	3					
ANR	81865	CFGEntryNode	ENTRY		81854		True				
ANR	81866	CFGExitNode	EXIT		81854		True				
ANR	81867	Symbol	resetReason		81854						
