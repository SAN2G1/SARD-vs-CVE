command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4732247	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_executable_scripts.WINDOWS.cpp								
ANR	4732248	DeclStmt									
ANR	4732249	Decl							void	"void ( LPCSTR from , LPCSTR file , LPCSTR params , LPSTR to , DWORD length )"	ExpandArgumentTemplate
ANR	4732250	Function	GetExecutableAndArgumentTemplateByExtention	62:0:2059:6756							
ANR	4732251	FunctionDef	"GetExecutableAndArgumentTemplateByExtention (LPCSTR extension , LPSTR executable , LPSTR arguments)"		4732250	0					
ANR	4732252	CompoundStatement		66:20:2171:6756	4732250	0					
ANR	4732253	IdentifierDeclStatement	DWORD last_error = ERROR_SUCCESS ;	68:1:2175:2211	4732250	0	True				
ANR	4732254	IdentifierDecl	last_error = ERROR_SUCCESS		4732250	0					
ANR	4732255	IdentifierDeclType	DWORD		4732250	0					
ANR	4732256	Identifier	last_error		4732250	1					
ANR	4732257	AssignmentExpression	last_error = ERROR_SUCCESS		4732250	2		=			
ANR	4732258	Identifier	ERROR_SUCCESS		4732250	0					
ANR	4732259	Identifier	ERROR_SUCCESS		4732250	1					
ANR	4732260	IdentifierDeclStatement	"LONG result , length ;"	69:1:2214:2240	4732250	1	True				
ANR	4732261	IdentifierDecl	result		4732250	0					
ANR	4732262	IdentifierDeclType	LONG		4732250	0					
ANR	4732263	Identifier	result		4732250	1					
ANR	4732264	IdentifierDecl	length		4732250	1					
ANR	4732265	IdentifierDeclType	LONG		4732250	0					
ANR	4732266	Identifier	length		4732250	1					
ANR	4732267	IdentifierDeclStatement	"CHAR value [ MAX_PATH + 1 ] , key [ MAX_PATH + 1 ] , name [ MAX_PATH + 1 ] , uppercase [ MAX_PATH + 1 ] , default_verb [ ] = ""Open"" ;"	71:4:2246:2423	4732250	2	True				
ANR	4732268	IdentifierDecl	value [ MAX_PATH + 1 ]		4732250	0					
ANR	4732269	IdentifierDeclType	CHAR [ MAX_PATH + 1 ]		4732250	0					
ANR	4732270	Identifier	value		4732250	1					
ANR	4732271	AdditiveExpression	MAX_PATH + 1		4732250	2		+			
ANR	4732272	Identifier	MAX_PATH		4732250	0					
ANR	4732273	PrimaryExpression	1		4732250	1					
ANR	4732274	IdentifierDecl	key [ MAX_PATH + 1 ]		4732250	1					
ANR	4732275	IdentifierDeclType	CHAR [ MAX_PATH + 1 ]		4732250	0					
ANR	4732276	Identifier	key		4732250	1					
ANR	4732277	AdditiveExpression	MAX_PATH + 1		4732250	2		+			
ANR	4732278	Identifier	MAX_PATH		4732250	0					
ANR	4732279	PrimaryExpression	1		4732250	1					
ANR	4732280	IdentifierDecl	name [ MAX_PATH + 1 ]		4732250	2					
ANR	4732281	IdentifierDeclType	CHAR [ MAX_PATH + 1 ]		4732250	0					
ANR	4732282	Identifier	name		4732250	1					
ANR	4732283	AdditiveExpression	MAX_PATH + 1		4732250	2		+			
ANR	4732284	Identifier	MAX_PATH		4732250	0					
ANR	4732285	PrimaryExpression	1		4732250	1					
ANR	4732286	IdentifierDecl	uppercase [ MAX_PATH + 1 ]		4732250	3					
ANR	4732287	IdentifierDeclType	CHAR [ MAX_PATH + 1 ]		4732250	0					
ANR	4732288	Identifier	uppercase		4732250	1					
ANR	4732289	AdditiveExpression	MAX_PATH + 1		4732250	2		+			
ANR	4732290	Identifier	MAX_PATH		4732250	0					
ANR	4732291	PrimaryExpression	1		4732250	1					
ANR	4732292	IdentifierDecl	"default_verb [ ] = ""Open"""		4732250	4					
ANR	4732293	IdentifierDeclType	CHAR [ ]		4732250	0					
ANR	4732294	Identifier	default_verb		4732250	1					
ANR	4732295	AssignmentExpression	"default_verb [ ] = ""Open"""		4732250	2		=			
ANR	4732296	Identifier	default_verb		4732250	0					
ANR	4732297	PrimaryExpression	"""Open"""		4732250	1					
ANR	4732298	IdentifierDeclStatement	LPSTR verb = NULL ;	76:4:2429:2471	4732250	3	True				
ANR	4732299	IdentifierDecl	verb = NULL		4732250	0					
ANR	4732300	IdentifierDeclType	LPSTR		4732250	0					
ANR	4732301	Identifier	verb		4732250	1					
ANR	4732302	AssignmentExpression	verb = NULL		4732250	2		=			
ANR	4732303	Identifier	NULL		4732250	0					
ANR	4732304	Identifier	NULL		4732250	1					
ANR	4732305	IdentifierDeclStatement	HANDLE found = INVALID_HANDLE_VALUE ;	77:1:2474:2514	4732250	4	True				
ANR	4732306	IdentifierDecl	found = INVALID_HANDLE_VALUE		4732250	0					
ANR	4732307	IdentifierDeclType	HANDLE		4732250	0					
ANR	4732308	Identifier	found		4732250	1					
ANR	4732309	AssignmentExpression	found = INVALID_HANDLE_VALUE		4732250	2		=			
ANR	4732310	Identifier	INVALID_HANDLE_VALUE		4732250	0					
ANR	4732311	Identifier	INVALID_HANDLE_VALUE		4732250	1					
ANR	4732312	IdentifierDeclStatement	WIN32_FIND_DATA find_data ;	78:1:2517:2542	4732250	5	True				
ANR	4732313	IdentifierDecl	find_data		4732250	0					
ANR	4732314	IdentifierDeclType	WIN32_FIND_DATA		4732250	0					
ANR	4732315	Identifier	find_data		4732250	1					
ANR	4732316	IdentifierDeclStatement	"LPSTR tmp , start = NULL ;"	79:1:2545:2579	4732250	6	True				
ANR	4732317	IdentifierDecl	tmp		4732250	0					
ANR	4732318	IdentifierDeclType	LPSTR		4732250	0					
ANR	4732319	Identifier	tmp		4732250	1					
ANR	4732320	IdentifierDecl	start = NULL		4732250	1					
ANR	4732321	IdentifierDeclType	LPSTR		4732250	0					
ANR	4732322	Identifier	start		4732250	1					
ANR	4732323	AssignmentExpression	start = NULL		4732250	2		=			
ANR	4732324	Identifier	NULL		4732250	0					
ANR	4732325	Identifier	NULL		4732250	1					
ANR	4732326	IdentifierDeclStatement	"BOOL quoted = FALSE , expanded = FALSE , ok = FALSE ;"	81:1:2587:2657	4732250	7	True				
ANR	4732327	IdentifierDecl	quoted = FALSE		4732250	0					
ANR	4732328	IdentifierDeclType	BOOL		4732250	0					
ANR	4732329	Identifier	quoted		4732250	1					
ANR	4732330	AssignmentExpression	quoted = FALSE		4732250	2		=			
ANR	4732331	Identifier	FALSE		4732250	0					
ANR	4732332	Identifier	FALSE		4732250	1					
ANR	4732333	IdentifierDecl	expanded = FALSE		4732250	1					
ANR	4732334	IdentifierDeclType	BOOL		4732250	0					
ANR	4732335	Identifier	expanded		4732250	1					
ANR	4732336	AssignmentExpression	expanded = FALSE		4732250	2		=			
ANR	4732337	Identifier	FALSE		4732250	0					
ANR	4732338	Identifier	FALSE		4732250	1					
ANR	4732339	IdentifierDecl	ok = FALSE		4732250	2					
ANR	4732340	IdentifierDeclType	BOOL		4732250	0					
ANR	4732341	Identifier	ok		4732250	1					
ANR	4732342	AssignmentExpression	ok = FALSE		4732250	2		=			
ANR	4732343	Identifier	FALSE		4732250	0					
ANR	4732344	Identifier	FALSE		4732250	1					
ANR	4732345	Statement	__try	85:1:2661:2665	4732250	8	True				
ANR	4732346	CompoundStatement		20:7:495:495	4732250	9					
ANR	4732347	ExpressionStatement	executable [ 0 ] = '\\0'	89:8:2788:2808	4732250	0	True				
ANR	4732348	AssignmentExpression	executable [ 0 ] = '\\0'		4732250	0		=			
ANR	4732349	ArrayIndexing	executable [ 0 ]		4732250	0					
ANR	4732350	Identifier	executable		4732250	0					
ANR	4732351	PrimaryExpression	0		4732250	1					
ANR	4732352	PrimaryExpression	'\\0'		4732250	1					
ANR	4732353	IfStatement	if ( arguments )		4732250	1					
ANR	4732354	Condition	arguments	90:13:2823:2831	4732250	0	True				
ANR	4732355	Identifier	arguments		4732250	0					
ANR	4732356	CompoundStatement		25:25:663:663	4732250	1					
ANR	4732357	ExpressionStatement	arguments [ 0 ] = '\\0'	91:12:2849:2868	4732250	0	True				
ANR	4732358	AssignmentExpression	arguments [ 0 ] = '\\0'		4732250	0		=			
ANR	4732359	ArrayIndexing	arguments [ 0 ]		4732250	0					
ANR	4732360	Identifier	arguments		4732250	0					
ANR	4732361	PrimaryExpression	0		4732250	1					
ANR	4732362	PrimaryExpression	'\\0'		4732250	1					
ANR	4732363	ExpressionStatement	length = MAX_PATH	95:2:2949:2966	4732250	2	True				
ANR	4732364	AssignmentExpression	length = MAX_PATH		4732250	0		=			
ANR	4732365	Identifier	length		4732250	0					
ANR	4732366	Identifier	MAX_PATH		4732250	1					
ANR	4732367	ExpressionStatement	"result = RegQueryValue ( HKEY_CLASSES_ROOT , extension , ( LPSTR ) value , & length )"	96:2:2970:3062	4732250	3	True				
ANR	4732368	AssignmentExpression	"result = RegQueryValue ( HKEY_CLASSES_ROOT , extension , ( LPSTR ) value , & length )"		4732250	0		=			
ANR	4732369	Identifier	result		4732250	0					
ANR	4732370	CallExpression	"RegQueryValue ( HKEY_CLASSES_ROOT , extension , ( LPSTR ) value , & length )"		4732250	1					
ANR	4732371	Callee	RegQueryValue		4732250	0					
ANR	4732372	Identifier	RegQueryValue		4732250	0					
ANR	4732373	ArgumentList	HKEY_CLASSES_ROOT		4732250	1					
ANR	4732374	Argument	HKEY_CLASSES_ROOT		4732250	0					
ANR	4732375	Identifier	HKEY_CLASSES_ROOT		4732250	0					
ANR	4732376	Argument	extension		4732250	1					
ANR	4732377	Identifier	extension		4732250	0					
ANR	4732378	Argument	( LPSTR ) value		4732250	2					
ANR	4732379	CastExpression	( LPSTR ) value		4732250	0					
ANR	4732380	CastTarget	LPSTR		4732250	0					
ANR	4732381	Identifier	value		4732250	1					
ANR	4732382	Argument	& length		4732250	3					
ANR	4732383	UnaryOperationExpression	& length		4732250	0					
ANR	4732384	UnaryOperator	&		4732250	0					
ANR	4732385	Identifier	length		4732250	1					
ANR	4732386	IfStatement	if ( ERROR_SUCCESS != result )		4732250	4					
ANR	4732387	Condition	ERROR_SUCCESS != result	102:7:3072:3094	4732250	0	True				
ANR	4732388	EqualityExpression	ERROR_SUCCESS != result		4732250	0		!=			
ANR	4732389	Identifier	ERROR_SUCCESS		4732250	0					
ANR	4732390	Identifier	result		4732250	1					
ANR	4732391	CompoundStatement		37:33:926:926	4732250	1					
ANR	4732392	ExpressionStatement	last_error = result	104:3:3104:3123	4732250	0	True				
ANR	4732393	AssignmentExpression	last_error = result		4732250	0		=			
ANR	4732394	Identifier	last_error		4732250	0					
ANR	4732395	Identifier	result		4732250	1					
ANR	4732396	Statement	dprintf	106:3:3129:3135	4732250	1	True				
ANR	4732397	Statement	(	106:11:3137:3137	4732250	2	True				
ANR	4732398	Statement	D_ALWAYS	107:16:3155:3162	4732250	3	True				
ANR	4732399	Statement	","	107:24:3163:3163	4732250	4	True				
ANR	4732400	Statement	"""GetExecutableAndArgumentsByExtention: failed to find """	108:4:3169:3223	4732250	5	True				
ANR	4732401	Statement	"""extension *%s in the registry (last-error = %d).\\n"""	109:4:3229:3280	4732250	6	True				
ANR	4732402	Statement	","	109:56:3281:3281	4732250	7	True				
ANR	4732403	Statement	extension	110:4:3287:3295	4732250	8	True				
ANR	4732404	Statement	","	110:13:3296:3296	4732250	9	True				
ANR	4732405	Statement	last_error	111:4:3303:3312	4732250	10	True				
ANR	4732406	Statement	)	111:15:3314:3314	4732250	11	True				
ANR	4732407	ExpressionStatement		111:16:3315:3315	4732250	12	True				
ANR	4732408	ExpressionStatement	__leave	113:3:3321:3328	4732250	13	True				
ANR	4732409	Identifier	__leave		4732250	0					
ANR	4732410	ExpressionStatement	"strcpy ( uppercase , extension + 1 )"	121:8:3568:3628	4732250	5	True				
ANR	4732411	CallExpression	"strcpy ( uppercase , extension + 1 )"		4732250	0					
ANR	4732412	Callee	strcpy		4732250	0					
ANR	4732413	Identifier	strcpy		4732250	0					
ANR	4732414	ArgumentList	uppercase		4732250	1					
ANR	4732415	Argument	uppercase		4732250	0					
ANR	4732416	Identifier	uppercase		4732250	0					
ANR	4732417	Argument	extension + 1		4732250	1					
ANR	4732418	AdditiveExpression	extension + 1		4732250	0		+			
ANR	4732419	Identifier	extension		4732250	0					
ANR	4732420	PrimaryExpression	1		4732250	1					
ANR	4732421	ExpressionStatement	"sprintf ( name , ""OPEN_VERB_FOR_%s_FILES"" , strupr ( uppercase ) )"	125:8:3639:3742	4732250	6	True				
ANR	4732422	CallExpression	"sprintf ( name , ""OPEN_VERB_FOR_%s_FILES"" , strupr ( uppercase ) )"		4732250	0					
ANR	4732423	Callee	sprintf		4732250	0					
ANR	4732424	Identifier	sprintf		4732250	0					
ANR	4732425	ArgumentList	name		4732250	1					
ANR	4732426	Argument	name		4732250	0					
ANR	4732427	Identifier	name		4732250	0					
ANR	4732428	Argument	"""OPEN_VERB_FOR_%s_FILES"""		4732250	1					
ANR	4732429	PrimaryExpression	"""OPEN_VERB_FOR_%s_FILES"""		4732250	0					
ANR	4732430	Argument	strupr ( uppercase )		4732250	2					
ANR	4732431	CallExpression	strupr ( uppercase )		4732250	0					
ANR	4732432	Callee	strupr		4732250	0					
ANR	4732433	Identifier	strupr		4732250	0					
ANR	4732434	ArgumentList	uppercase		4732250	1					
ANR	4732435	Argument	uppercase		4732250	0					
ANR	4732436	Identifier	uppercase		4732250	0					
ANR	4732437	ExpressionStatement	verb = param ( name )	130:8:3753:3774	4732250	7	True				
ANR	4732438	AssignmentExpression	verb = param ( name )		4732250	0		=			
ANR	4732439	Identifier	verb		4732250	0					
ANR	4732440	CallExpression	param ( name )		4732250	1					
ANR	4732441	Callee	param		4732250	0					
ANR	4732442	Identifier	param		4732250	0					
ANR	4732443	ArgumentList	name		4732250	1					
ANR	4732444	Argument	name		4732250	0					
ANR	4732445	Identifier	name		4732250	0					
ANR	4732446	ExpressionStatement	"sprintf ( key , ""%s\\\\Shell\\\\%s\\\\Command"" , value , verb ? verb : default_verb )"	132:8:3785:3913	4732250	8	True				
ANR	4732447	CallExpression	"sprintf ( key , ""%s\\\\Shell\\\\%s\\\\Command"" , value , verb ? verb : default_verb )"		4732250	0					
ANR	4732448	Callee	sprintf		4732250	0					
ANR	4732449	Identifier	sprintf		4732250	0					
ANR	4732450	ArgumentList	key		4732250	1					
ANR	4732451	Argument	key		4732250	0					
ANR	4732452	Identifier	key		4732250	0					
ANR	4732453	Argument	"""%s\\\\Shell\\\\%s\\\\Command"""		4732250	1					
ANR	4732454	PrimaryExpression	"""%s\\\\Shell\\\\%s\\\\Command"""		4732250	0					
ANR	4732455	Argument	value		4732250	2					
ANR	4732456	Identifier	value		4732250	0					
ANR	4732457	Argument	verb ? verb : default_verb		4732250	3					
ANR	4732458	ConditionalExpression	verb ? verb : default_verb		4732250	0					
ANR	4732459	Condition	verb		4732250	0					
ANR	4732460	Identifier	verb		4732250	0					
ANR	4732461	Identifier	verb		4732250	1					
ANR	4732462	Identifier	default_verb		4732250	2					
ANR	4732463	IfStatement	if ( verb )		4732250	9					
ANR	4732464	Condition	verb	138:13:3929:3932	4732250	0	True				
ANR	4732465	Identifier	verb		4732250	0					
ANR	4732466	CompoundStatement		73:20:1764:1764	4732250	1					
ANR	4732467	ExpressionStatement	free ( verb )	139:12:3950:3963	4732250	0	True				
ANR	4732468	CallExpression	free ( verb )		4732250	0					
ANR	4732469	Callee	free		4732250	0					
ANR	4732470	Identifier	free		4732250	0					
ANR	4732471	ArgumentList	verb		4732250	1					
ANR	4732472	Argument	verb		4732250	0					
ANR	4732473	Identifier	verb		4732250	0					
ANR	4732474	ExpressionStatement	length = MAX_PATH	142:8:3984:4001	4732250	10	True				
ANR	4732475	AssignmentExpression	length = MAX_PATH		4732250	0		=			
ANR	4732476	Identifier	length		4732250	0					
ANR	4732477	Identifier	MAX_PATH		4732250	1					
ANR	4732478	ExpressionStatement	"result = RegQueryValue ( HKEY_CLASSES_ROOT , key , ( LPSTR ) value , & length )"	143:5:4008:4106	4732250	11	True				
ANR	4732479	AssignmentExpression	"result = RegQueryValue ( HKEY_CLASSES_ROOT , key , ( LPSTR ) value , & length )"		4732250	0		=			
ANR	4732480	Identifier	result		4732250	0					
ANR	4732481	CallExpression	"RegQueryValue ( HKEY_CLASSES_ROOT , key , ( LPSTR ) value , & length )"		4732250	1					
ANR	4732482	Callee	RegQueryValue		4732250	0					
ANR	4732483	Identifier	RegQueryValue		4732250	0					
ANR	4732484	ArgumentList	HKEY_CLASSES_ROOT		4732250	1					
ANR	4732485	Argument	HKEY_CLASSES_ROOT		4732250	0					
ANR	4732486	Identifier	HKEY_CLASSES_ROOT		4732250	0					
ANR	4732487	Argument	key		4732250	1					
ANR	4732488	Identifier	key		4732250	0					
ANR	4732489	Argument	( LPSTR ) value		4732250	2					
ANR	4732490	CastExpression	( LPSTR ) value		4732250	0					
ANR	4732491	CastTarget	LPSTR		4732250	0					
ANR	4732492	Identifier	value		4732250	1					
ANR	4732493	Argument	& length		4732250	3					
ANR	4732494	UnaryOperationExpression	& length		4732250	0					
ANR	4732495	UnaryOperator	&		4732250	0					
ANR	4732496	Identifier	length		4732250	1					
ANR	4732497	IfStatement	if ( ERROR_SUCCESS != result )		4732250	12					
ANR	4732498	Condition	ERROR_SUCCESS != result	149:13:4122:4144	4732250	0	True				
ANR	4732499	EqualityExpression	ERROR_SUCCESS != result		4732250	0		!=			
ANR	4732500	Identifier	ERROR_SUCCESS		4732250	0					
ANR	4732501	Identifier	result		4732250	1					
ANR	4732502	CompoundStatement		84:39:1976:1976	4732250	1					
ANR	4732503	ExpressionStatement	last_error = result	151:3:4154:4173	4732250	0	True				
ANR	4732504	AssignmentExpression	last_error = result		4732250	0		=			
ANR	4732505	Identifier	last_error		4732250	0					
ANR	4732506	Identifier	result		4732250	1					
ANR	4732507	Statement	dprintf	153:3:4179:4185	4732250	1	True				
ANR	4732508	Statement	(	153:11:4187:4187	4732250	2	True				
ANR	4732509	Statement	D_ALWAYS	154:16:4205:4212	4732250	3	True				
ANR	4732510	Statement	","	154:24:4213:4213	4732250	4	True				
ANR	4732511	Statement	"""GetExecutableAndArgumentsByExtention: failed to """	155:4:4219:4268	4732250	5	True				
ANR	4732512	Statement	"""find a suitable handler for files with extension """	156:4:4274:4324	4732250	6	True				
ANR	4732513	Statement	"""'*%s'. (last-error = %d)\\n"""	157:4:4330:4357	4732250	7	True				
ANR	4732514	Statement	","	157:32:4358:4358	4732250	8	True				
ANR	4732515	Statement	extension	158:4:4364:4372	4732250	9	True				
ANR	4732516	Statement	","	158:13:4373:4373	4732250	10	True				
ANR	4732517	Statement	last_error	159:4:4380:4389	4732250	11	True				
ANR	4732518	Statement	)	159:15:4391:4391	4732250	12	True				
ANR	4732519	ExpressionStatement		159:16:4392:4392	4732250	13	True				
ANR	4732520	ExpressionStatement	__leave	161:3:4398:4405	4732250	14	True				
ANR	4732521	Identifier	__leave		4732250	0					
ANR	4732522	ExpressionStatement	tmp = ( LPSTR ) value	167:2:4508:4527	4732250	13	True				
ANR	4732523	AssignmentExpression	tmp = ( LPSTR ) value		4732250	0		=			
ANR	4732524	Identifier	tmp		4732250	0					
ANR	4732525	CastExpression	( LPSTR ) value		4732250	1					
ANR	4732526	CastTarget	LPSTR		4732250	0					
ANR	4732527	Identifier	value		4732250	1					
ANR	4732528	WhileStatement	while ( * tmp && iswspace ( * tmp ) )		4732250	14					
ANR	4732529	Condition	* tmp && iswspace ( * tmp )	170:16:4575:4599	4732250	0	True				
ANR	4732530	AndExpression	* tmp && iswspace ( * tmp )		4732250	0		&&			
ANR	4732531	UnaryOperationExpression	* tmp		4732250	0					
ANR	4732532	UnaryOperator	*		4732250	0					
ANR	4732533	Identifier	tmp		4732250	1					
ANR	4732534	CallExpression	iswspace ( * tmp )		4732250	1					
ANR	4732535	Callee	iswspace		4732250	0					
ANR	4732536	Identifier	iswspace		4732250	0					
ANR	4732537	ArgumentList	* tmp		4732250	1					
ANR	4732538	Argument	* tmp		4732250	0					
ANR	4732539	UnaryOperationExpression	* tmp		4732250	0					
ANR	4732540	UnaryOperator	*		4732250	0					
ANR	4732541	Identifier	tmp		4732250	1					
ANR	4732542	CompoundStatement		105:44:2431:2431	4732250	1					
ANR	4732543	ExpressionStatement	tmp ++	171:12:4617:4622	4732250	0	True				
ANR	4732544	PostIncDecOperationExpression	tmp ++		4732250	0					
ANR	4732545	Identifier	tmp		4732250	0					
ANR	4732546	IncDec	++		4732250	1					
ANR	4732547	ExpressionStatement	start = tmp	175:2:4700:4711	4732250	15	True				
ANR	4732548	AssignmentExpression	start = tmp		4732250	0		=			
ANR	4732549	Identifier	start		4732250	0					
ANR	4732550	Identifier	tmp		4732250	1					
ANR	4732551	ExpressionStatement	"quoted = ( '""' == * start )"	180:2:4869:4895	4732250	16	True				
ANR	4732552	AssignmentExpression	"quoted = ( '""' == * start )"		4732250	0		=			
ANR	4732553	Identifier	quoted		4732250	0					
ANR	4732554	EqualityExpression	"'""' == * start"		4732250	1		==			
ANR	4732555	PrimaryExpression	"'""'"		4732250	0					
ANR	4732556	UnaryOperationExpression	* start		4732250	1					
ANR	4732557	UnaryOperator	*		4732250	0					
ANR	4732558	Identifier	start		4732250	1					
ANR	4732559	IfStatement	if ( quoted )		4732250	17					
ANR	4732560	Condition	quoted	184:7:5023:5028	4732250	0	True				
ANR	4732561	Identifier	quoted		4732250	0					
ANR	4732562	CompoundStatement		119:16:2860:2860	4732250	1					
ANR	4732563	ExpressionStatement	start = ++ tmp	188:3:5155:5168	4732250	0	True				
ANR	4732564	AssignmentExpression	start = ++ tmp		4732250	0		=			
ANR	4732565	Identifier	start		4732250	0					
ANR	4732566	UnaryExpression	++ tmp		4732250	1					
ANR	4732567	IncDec	++		4732250	0					
ANR	4732568	Identifier	tmp		4732250	1					
ANR	4732569	WhileStatement	"while ( * tmp && ( '""' != * tmp ) )"		4732250	1					
ANR	4732570	Condition	"* tmp && ( '""' != * tmp )"	189:11:5181:5203	4732250	0	True				
ANR	4732571	AndExpression	"* tmp && ( '""' != * tmp )"		4732250	0		&&			
ANR	4732572	UnaryOperationExpression	* tmp		4732250	0					
ANR	4732573	UnaryOperator	*		4732250	0					
ANR	4732574	Identifier	tmp		4732250	1					
ANR	4732575	EqualityExpression	"'""' != * tmp"		4732250	1		!=			
ANR	4732576	PrimaryExpression	"'""'"		4732250	0					
ANR	4732577	UnaryOperationExpression	* tmp		4732250	1					
ANR	4732578	UnaryOperator	*		4732250	0					
ANR	4732579	Identifier	tmp		4732250	1					
ANR	4732580	CompoundStatement		124:37:3035:3035	4732250	1					
ANR	4732581	ExpressionStatement	tmp ++	190:4:5213:5218	4732250	0	True				
ANR	4732582	PostIncDecOperationExpression	tmp ++		4732250	0					
ANR	4732583	Identifier	tmp		4732250	0					
ANR	4732584	IncDec	++		4732250	1					
ANR	4732585	ElseStatement	else		4732250	0					
ANR	4732586	CompoundStatement		128:15:3072:3072	4732250	0					
ANR	4732587	ExpressionStatement	start = tmp	195:3:5250:5261	4732250	0	True				
ANR	4732588	AssignmentExpression	start = tmp		4732250	0		=			
ANR	4732589	Identifier	start		4732250	0					
ANR	4732590	Identifier	tmp		4732250	1					
ANR	4732591	WhileStatement	while ( * tmp && ! iswspace ( * tmp ) )		4732250	1					
ANR	4732592	Condition	* tmp && ! iswspace ( * tmp )	196:20:5283:5308	4732250	0	True				
ANR	4732593	AndExpression	* tmp && ! iswspace ( * tmp )		4732250	0		&&			
ANR	4732594	UnaryOperationExpression	* tmp		4732250	0					
ANR	4732595	UnaryOperator	*		4732250	0					
ANR	4732596	Identifier	tmp		4732250	1					
ANR	4732597	UnaryOperationExpression	! iswspace ( * tmp )		4732250	1					
ANR	4732598	UnaryOperator	!		4732250	0					
ANR	4732599	CallExpression	iswspace ( * tmp )		4732250	1					
ANR	4732600	Callee	iswspace		4732250	0					
ANR	4732601	Identifier	iswspace		4732250	0					
ANR	4732602	ArgumentList	* tmp		4732250	1					
ANR	4732603	Argument	* tmp		4732250	0					
ANR	4732604	UnaryOperationExpression	* tmp		4732250	0					
ANR	4732605	UnaryOperator	*		4732250	0					
ANR	4732606	Identifier	tmp		4732250	1					
ANR	4732607	CompoundStatement		131:49:3140:3140	4732250	1					
ANR	4732608	ExpressionStatement	tmp ++	197:16:5330:5335	4732250	0	True				
ANR	4732609	PostIncDecOperationExpression	tmp ++		4732250	0					
ANR	4732610	Identifier	tmp		4732250	0					
ANR	4732611	IncDec	++		4732250	1					
ANR	4732612	ExpressionStatement	* tmp = '\\0'	204:2:5473:5484	4732250	18	True				
ANR	4732613	AssignmentExpression	* tmp = '\\0'		4732250	0		=			
ANR	4732614	UnaryOperationExpression	* tmp		4732250	0					
ANR	4732615	UnaryOperator	*		4732250	0					
ANR	4732616	Identifier	tmp		4732250	1					
ANR	4732617	PrimaryExpression	'\\0'		4732250	1					
ANR	4732618	ExpressionStatement	"found = FindFirstFile ( start , & find_data )"	207:2:5539:5589	4732250	19	True				
ANR	4732619	AssignmentExpression	"found = FindFirstFile ( start , & find_data )"		4732250	0		=			
ANR	4732620	Identifier	found		4732250	0					
ANR	4732621	CallExpression	"FindFirstFile ( start , & find_data )"		4732250	1					
ANR	4732622	Callee	FindFirstFile		4732250	0					
ANR	4732623	Identifier	FindFirstFile		4732250	0					
ANR	4732624	ArgumentList	start		4732250	1					
ANR	4732625	Argument	start		4732250	0					
ANR	4732626	Identifier	start		4732250	0					
ANR	4732627	Argument	& find_data		4732250	1					
ANR	4732628	UnaryOperationExpression	& find_data		4732250	0					
ANR	4732629	UnaryOperator	&		4732250	0					
ANR	4732630	Identifier	find_data		4732250	1					
ANR	4732631	IfStatement	if ( INVALID_HANDLE_VALUE == found )		4732250	20					
ANR	4732632	Condition	INVALID_HANDLE_VALUE == found	211:7:5599:5627	4732250	0	True				
ANR	4732633	EqualityExpression	INVALID_HANDLE_VALUE == found		4732250	0		==			
ANR	4732634	Identifier	INVALID_HANDLE_VALUE		4732250	0					
ANR	4732635	Identifier	found		4732250	1					
ANR	4732636	CompoundStatement		146:39:3459:3459	4732250	1					
ANR	4732637	ExpressionStatement	last_error = GetLastError ( )	213:3:5637:5665	4732250	0	True				
ANR	4732638	AssignmentExpression	last_error = GetLastError ( )		4732250	0		=			
ANR	4732639	Identifier	last_error		4732250	0					
ANR	4732640	CallExpression	GetLastError ( )		4732250	1					
ANR	4732641	Callee	GetLastError		4732250	0					
ANR	4732642	Identifier	GetLastError		4732250	0					
ANR	4732643	ArgumentList			4732250	1					
ANR	4732644	Statement	dprintf	215:3:5671:5677	4732250	1	True				
ANR	4732645	Statement	(	215:11:5679:5679	4732250	2	True				
ANR	4732646	Statement	D_ALWAYS	216:16:5697:5704	4732250	3	True				
ANR	4732647	Statement	","	216:24:5705:5705	4732250	4	True				
ANR	4732648	Statement	"""GetExecutableAndArgumentsByExtention: failed to """	217:4:5711:5760	4732250	5	True				
ANR	4732649	Statement	"""locate the executable, %s, to handle files """	218:16:5778:5822	4732250	6	True				
ANR	4732650	Statement	"""with extension '*%s'. (last-error = %d)\\n"""	219:16:5840:5882	4732250	7	True				
ANR	4732651	Statement	","	219:59:5883:5883	4732250	8	True				
ANR	4732652	Statement	start	220:4:5889:5893	4732250	9	True				
ANR	4732653	Statement	","	220:9:5894:5894	4732250	10	True				
ANR	4732654	Statement	extension	221:4:5901:5909	4732250	11	True				
ANR	4732655	Statement	","	221:13:5910:5910	4732250	12	True				
ANR	4732656	Statement	last_error	222:4:5917:5926	4732250	13	True				
ANR	4732657	Statement	)	222:15:5928:5928	4732250	14	True				
ANR	4732658	ExpressionStatement		222:16:5929:5929	4732250	15	True				
ANR	4732659	ExpressionStatement	__leave	224:3:5935:5942	4732250	16	True				
ANR	4732660	Identifier	__leave		4732250	0					
ANR	4732661	ExpressionStatement	FindClose ( found )	229:2:5993:6012	4732250	21	True				
ANR	4732662	CallExpression	FindClose ( found )		4732250	0					
ANR	4732663	Callee	FindClose		4732250	0					
ANR	4732664	Identifier	FindClose		4732250	0					
ANR	4732665	ArgumentList	found		4732250	1					
ANR	4732666	Argument	found		4732250	0					
ANR	4732667	Identifier	found		4732250	0					
ANR	4732668	ExpressionStatement	"strcpy ( executable , start )"	232:2:6061:6089	4732250	22	True				
ANR	4732669	CallExpression	"strcpy ( executable , start )"		4732250	0					
ANR	4732670	Callee	strcpy		4732250	0					
ANR	4732671	Identifier	strcpy		4732250	0					
ANR	4732672	ArgumentList	executable		4732250	1					
ANR	4732673	Argument	executable		4732250	0					
ANR	4732674	Identifier	executable		4732250	0					
ANR	4732675	Argument	start		4732250	1					
ANR	4732676	Identifier	start		4732250	0					
ANR	4732677	ExpressionStatement	start = ++ tmp	236:2:6209:6222	4732250	23	True				
ANR	4732678	AssignmentExpression	start = ++ tmp		4732250	0		=			
ANR	4732679	Identifier	start		4732250	0					
ANR	4732680	UnaryExpression	++ tmp		4732250	1					
ANR	4732681	IncDec	++		4732250	0					
ANR	4732682	Identifier	tmp		4732250	1					
ANR	4732683	IfStatement	if ( arguments && value - start < length - 1 )		4732250	24					
ANR	4732684	Condition	arguments && value - start < length - 1	237:7:6231:6269	4732250	0	True				
ANR	4732685	AndExpression	arguments && value - start < length - 1		4732250	0		&&			
ANR	4732686	Identifier	arguments		4732250	0					
ANR	4732687	RelationalExpression	value - start < length - 1		4732250	1		<			
ANR	4732688	AdditiveExpression	value - start		4732250	0		-			
ANR	4732689	Identifier	value		4732250	0					
ANR	4732690	Identifier	start		4732250	1					
ANR	4732691	AdditiveExpression	length - 1		4732250	1		-			
ANR	4732692	Identifier	length		4732250	0					
ANR	4732693	PrimaryExpression	1		4732250	1					
ANR	4732694	CompoundStatement		172:49:4101:4101	4732250	1					
ANR	4732695	WhileStatement	while ( * start && iswspace ( * start ) )		4732250	0					
ANR	4732696	Condition	* start && iswspace ( * start )	241:20:6387:6415	4732250	0	True				
ANR	4732697	AndExpression	* start && iswspace ( * start )		4732250	0		&&			
ANR	4732698	UnaryOperationExpression	* start		4732250	0					
ANR	4732699	UnaryOperator	*		4732250	0					
ANR	4732700	Identifier	start		4732250	1					
ANR	4732701	CallExpression	iswspace ( * start )		4732250	1					
ANR	4732702	Callee	iswspace		4732250	0					
ANR	4732703	Identifier	iswspace		4732250	0					
ANR	4732704	ArgumentList	* start		4732250	1					
ANR	4732705	Argument	* start		4732250	0					
ANR	4732706	UnaryOperationExpression	* start		4732250	0					
ANR	4732707	UnaryOperator	*		4732250	0					
ANR	4732708	Identifier	start		4732250	1					
ANR	4732709	CompoundStatement		176:52:4247:4247	4732250	1					
ANR	4732710	ExpressionStatement	start ++	242:16:6437:6444	4732250	0	True				
ANR	4732711	PostIncDecOperationExpression	start ++		4732250	0					
ANR	4732712	Identifier	start		4732250	0					
ANR	4732713	IncDec	++		4732250	1					
ANR	4732714	ExpressionStatement	"strcpy ( arguments , start )"	246:12:6511:6538	4732250	1	True				
ANR	4732715	CallExpression	"strcpy ( arguments , start )"		4732250	0					
ANR	4732716	Callee	strcpy		4732250	0					
ANR	4732717	Identifier	strcpy		4732250	0					
ANR	4732718	ArgumentList	arguments		4732250	1					
ANR	4732719	Argument	arguments		4732250	0					
ANR	4732720	Identifier	arguments		4732250	0					
ANR	4732721	Argument	start		4732250	1					
ANR	4732722	Identifier	start		4732250	0					
ANR	4732723	ExpressionStatement	ok = TRUE	251:2:6608:6617	4732250	25	True				
ANR	4732724	AssignmentExpression	ok = TRUE		4732250	0		=			
ANR	4732725	Identifier	ok		4732250	0					
ANR	4732726	Identifier	TRUE		4732250	1					
ANR	4732727	Statement	__finally	254:1:6624:6632	4732250	10	True				
ANR	4732728	CompoundStatement		189:11:4462:4462	4732250	11					
ANR	4732729	ExpressionStatement	SetLastError ( ok ? ERROR_SUCCESS : last_error )	257:2:6686:6734	4732250	0	True				
ANR	4732730	CallExpression	SetLastError ( ok ? ERROR_SUCCESS : last_error )		4732250	0					
ANR	4732731	Callee	SetLastError		4732250	0					
ANR	4732732	Identifier	SetLastError		4732250	0					
ANR	4732733	ArgumentList	ok ? ERROR_SUCCESS : last_error		4732250	1					
ANR	4732734	Argument	ok ? ERROR_SUCCESS : last_error		4732250	0					
ANR	4732735	ConditionalExpression	ok ? ERROR_SUCCESS : last_error		4732250	0					
ANR	4732736	Condition	ok		4732250	0					
ANR	4732737	Identifier	ok		4732250	0					
ANR	4732738	Identifier	ERROR_SUCCESS		4732250	1					
ANR	4732739	Identifier	last_error		4732250	2					
ANR	4732740	ExpressionStatement		259:2:6739:6739	4732250	12	True				
ANR	4732741	ReturnStatement	return ok ;	261:1:6744:6753	4732250	13	True				
ANR	4732742	Identifier	ok		4732250	0					
ANR	4732743	ReturnType	BOOL		4732250	1					
ANR	4732744	Identifier	GetExecutableAndArgumentTemplateByExtention		4732250	2					
ANR	4732745	ParameterList	"LPCSTR extension , LPSTR executable , LPSTR arguments"		4732250	3					
ANR	4732746	Parameter	LPCSTR extension	64:1:2112:2127	4732250	0	True				
ANR	4732747	ParameterType	LPCSTR		4732250	0					
ANR	4732748	Identifier	extension		4732250	1					
ANR	4732749	Parameter	LPSTR executable	65:1:2132:2148	4732250	1	True				
ANR	4732750	ParameterType	LPSTR		4732250	0					
ANR	4732751	Identifier	executable		4732250	1					
ANR	4732752	Parameter	LPSTR arguments	66:1:2152:2167	4732250	2	True				
ANR	4732753	ParameterType	LPSTR		4732250	0					
ANR	4732754	Identifier	arguments		4732250	1					
ANR	4732755	CFGEntryNode	ENTRY		4732250		True				
ANR	4732756	CFGExitNode	EXIT		4732250		True				
ANR	4732757	Symbol	uppercase		4732250						
ANR	4732758	Symbol	* tmp		4732250						
ANR	4732759	Symbol	extension		4732250						
ANR	4732760	Symbol	* start		4732250						
ANR	4732761	Symbol	& find_data		4732250						
ANR	4732762	Symbol	RegQueryValue		4732250						
ANR	4732763	Symbol	FindFirstFile		4732250						
ANR	4732764	Symbol	result		4732250						
ANR	4732765	Symbol	quoted		4732250						
ANR	4732766	Symbol	ERROR_SUCCESS		4732250						
ANR	4732767	Symbol	expanded		4732250						
ANR	4732768	Symbol	found		4732250						
ANR	4732769	Symbol	param		4732250						
ANR	4732770	Symbol	tmp		4732250						
ANR	4732771	Symbol	last_error		4732250						
ANR	4732772	Symbol	ok		4732250						
ANR	4732773	Symbol	value		4732250						
ANR	4732774	Symbol	key		4732250						
ANR	4732775	Symbol	* executable		4732250						
ANR	4732776	Symbol	& length		4732250						
ANR	4732777	Symbol	default_verb		4732250						
ANR	4732778	Symbol	NULL		4732250						
ANR	4732779	Symbol	length		4732250						
ANR	4732780	Symbol	verb		4732250						
ANR	4732781	Symbol	start		4732250						
ANR	4732782	Symbol	TRUE		4732250						
ANR	4732783	Symbol	find_data		4732250						
ANR	4732784	Symbol	INVALID_HANDLE_VALUE		4732250						
ANR	4732785	Symbol	executable		4732250						
ANR	4732786	Symbol	HKEY_CLASSES_ROOT		4732250						
ANR	4732787	Symbol	strupr		4732250						
ANR	4732788	Symbol	GetLastError		4732250						
ANR	4732789	Symbol	name		4732250						
ANR	4732790	Symbol	iswspace		4732250						
ANR	4732791	Symbol	arguments		4732250						
ANR	4732792	Symbol	FALSE		4732250						
ANR	4732793	Symbol	MAX_PATH		4732250						
ANR	4732794	Symbol	* arguments		4732250						
ANR	4732795	Function	ExpandArgumentTemplate	266:0:6765:9073							
ANR	4732796	FunctionDef	"ExpandArgumentTemplate (LPCSTR from , LPCSTR file , LPCSTR params , LPSTR to , DWORD length)"		4732795	0					
ANR	4732797	CompoundStatement		272:18:6876:9073	4732795	0					
ANR	4732798	IdentifierDeclStatement	int i ;	274:1:6880:6886	4732795	0	True				
ANR	4732799	IdentifierDecl	i		4732795	0					
ANR	4732800	IdentifierDeclType	int		4732795	0					
ANR	4732801	Identifier	i		4732795	1					
ANR	4732802	IdentifierDeclStatement	LPCSTR tmp ;	275:1:6889:6899	4732795	1	True				
ANR	4732803	IdentifierDecl	tmp		4732795	0					
ANR	4732804	IdentifierDeclType	LPCSTR		4732795	0					
ANR	4732805	Identifier	tmp		4732795	1					
ANR	4732806	IdentifierDeclStatement	BOOL quoted = FALSE ;	276:1:6902:6921	4732795	2	True				
ANR	4732807	IdentifierDecl	quoted = FALSE		4732795	0					
ANR	4732808	IdentifierDeclType	BOOL		4732795	0					
ANR	4732809	Identifier	quoted		4732795	1					
ANR	4732810	AssignmentExpression	quoted = FALSE		4732795	2		=			
ANR	4732811	Identifier	FALSE		4732795	0					
ANR	4732812	Identifier	FALSE		4732795	1					
ANR	4732813	ForStatement	for ( ; * from && -- length ; ++ from )		4732795	3					
ANR	4732814	Condition	* from && -- length	278:8:6932:6948	4732795	0	True				
ANR	4732815	AndExpression	* from && -- length		4732795	0		&&			
ANR	4732816	UnaryOperationExpression	* from		4732795	0					
ANR	4732817	UnaryOperator	*		4732795	0					
ANR	4732818	Identifier	from		4732795	1					
ANR	4732819	UnaryExpression	-- length		4732795	1					
ANR	4732820	IncDec	--		4732795	0					
ANR	4732821	Identifier	length		4732795	1					
ANR	4732822	UnaryExpression	++ from	278:27:6951:6956	4732795	1	True				
ANR	4732823	IncDec	++		4732795	0					
ANR	4732824	Identifier	from		4732795	1					
ANR	4732825	CompoundStatement		7:36:83:83	4732795	2					
ANR	4732826	IfStatement	if ( '%' == * from )		4732795	0					
ANR	4732827	Condition	'%' == * from	280:7:6970:6981	4732795	0	True				
ANR	4732828	EqualityExpression	'%' == * from		4732795	0		==			
ANR	4732829	PrimaryExpression	'%'		4732795	0					
ANR	4732830	UnaryOperationExpression	* from		4732795	1					
ANR	4732831	UnaryOperator	*		4732795	0					
ANR	4732832	Identifier	from		4732795	1					
ANR	4732833	CompoundStatement		9:22:108:108	4732795	1					
ANR	4732834	ExpressionStatement	++ from	283:3:7031:7037	4732795	0	True				
ANR	4732835	UnaryExpression	++ from		4732795	0					
ANR	4732836	IncDec	++		4732795	0					
ANR	4732837	Identifier	from		4732795	1					
ANR	4732838	IfStatement	if ( '0' == * from )		4732795	1					
ANR	4732839	Condition	'0' == * from	287:8:7162:7173	4732795	0	True				
ANR	4732840	EqualityExpression	'0' == * from		4732795	0		==			
ANR	4732841	PrimaryExpression	'0'		4732795	0					
ANR	4732842	UnaryOperationExpression	* from		4732795	1					
ANR	4732843	UnaryOperator	*		4732795	0					
ANR	4732844	Identifier	from		4732795	1					
ANR	4732845	CompoundStatement		16:23:300:300	4732795	1					
ANR	4732846	ExpressionStatement	"strcpy ( to , file )"	288:4:7183:7202	4732795	0	True				
ANR	4732847	CallExpression	"strcpy ( to , file )"		4732795	0					
ANR	4732848	Callee	strcpy		4732795	0					
ANR	4732849	Identifier	strcpy		4732795	0					
ANR	4732850	ArgumentList	to		4732795	1					
ANR	4732851	Argument	to		4732795	0					
ANR	4732852	Identifier	to		4732795	0					
ANR	4732853	Argument	file		4732795	1					
ANR	4732854	Identifier	file		4732795	0					
ANR	4732855	ExpressionStatement	to += strlen ( to )	289:4:7208:7227	4732795	1	True				
ANR	4732856	AssignmentExpression	to += strlen ( to )		4732795	0		+=			
ANR	4732857	Identifier	to		4732795	0					
ANR	4732858	CallExpression	strlen ( to )		4732795	1					
ANR	4732859	Callee	strlen		4732795	0					
ANR	4732860	Identifier	strlen		4732795	0					
ANR	4732861	ArgumentList	to		4732795	1					
ANR	4732862	Argument	to		4732795	0					
ANR	4732863	Identifier	to		4732795	0					
ANR	4732864	ContinueStatement	continue ;	290:4:7233:7241	4732795	2	True				
ANR	4732865	IfStatement	if ( * from < '1' || * from > '9' )		4732795	2					
ANR	4732866	Condition	* from < '1' || * from > '9'	299:8:7593:7618	4732795	0	True				
ANR	4732867	OrExpression	* from < '1' || * from > '9'		4732795	0		||			
ANR	4732868	RelationalExpression	* from < '1'		4732795	0		<			
ANR	4732869	UnaryOperationExpression	* from		4732795	0					
ANR	4732870	UnaryOperator	*		4732795	0					
ANR	4732871	Identifier	from		4732795	1					
ANR	4732872	PrimaryExpression	'1'		4732795	1					
ANR	4732873	RelationalExpression	* from > '9'		4732795	1		>			
ANR	4732874	UnaryOperationExpression	* from		4732795	0					
ANR	4732875	UnaryOperator	*		4732795	0					
ANR	4732876	Identifier	from		4732795	1					
ANR	4732877	PrimaryExpression	'9'		4732795	1					
ANR	4732878	CompoundStatement		28:37:745:745	4732795	1					
ANR	4732879	ExpressionStatement	* to ++ = * from	300:4:7628:7641	4732795	0	True				
ANR	4732880	AssignmentExpression	* to ++ = * from		4732795	0		=			
ANR	4732881	UnaryOperationExpression	* to ++		4732795	0					
ANR	4732882	UnaryOperator	*		4732795	0					
ANR	4732883	PostIncDecOperationExpression	to ++		4732795	1					
ANR	4732884	Identifier	to		4732795	0					
ANR	4732885	IncDec	++		4732795	1					
ANR	4732886	UnaryOperationExpression	* from		4732795	1					
ANR	4732887	UnaryOperator	*		4732795	0					
ANR	4732888	Identifier	from		4732795	1					
ANR	4732889	ContinueStatement	continue ;	301:4:7647:7655	4732795	1	True				
ANR	4732890	IfStatement	if ( '1' == * from )		4732795	3					
ANR	4732891	Condition	'1' == * from	307:8:7856:7867	4732795	0	True				
ANR	4732892	EqualityExpression	'1' == * from		4732795	0		==			
ANR	4732893	PrimaryExpression	'1'		4732795	0					
ANR	4732894	UnaryOperationExpression	* from		4732795	1					
ANR	4732895	UnaryOperator	*		4732795	0					
ANR	4732896	Identifier	from		4732795	1					
ANR	4732897	CompoundStatement		36:23:994:994	4732795	1					
ANR	4732898	ExpressionStatement	tmp = file	308:4:7877:7887	4732795	0	True				
ANR	4732899	AssignmentExpression	tmp = file		4732795	0		=			
ANR	4732900	Identifier	tmp		4732795	0					
ANR	4732901	Identifier	file		4732795	1					
ANR	4732902	IfStatement	"if ( '""' == * file )"		4732795	1					
ANR	4732903	Condition	"'""' == * file"	309:9:7898:7909	4732795	0	True				
ANR	4732904	EqualityExpression	"'""' == * file"		4732795	0		==			
ANR	4732905	PrimaryExpression	"'""'"		4732795	0					
ANR	4732906	UnaryOperationExpression	* file		4732795	1					
ANR	4732907	UnaryOperator	*		4732795	0					
ANR	4732908	Identifier	file		4732795	1					
ANR	4732909	CompoundStatement		38:24:1036:1036	4732795	1					
ANR	4732910	ExpressionStatement	quoted = TRUE	310:5:7920:7933	4732795	0	True				
ANR	4732911	AssignmentExpression	quoted = TRUE		4732795	0		=			
ANR	4732912	Identifier	quoted		4732795	0					
ANR	4732913	Identifier	TRUE		4732795	1					
ANR	4732914	ExpressionStatement	tmp ++	311:5:7940:7945	4732795	1	True				
ANR	4732915	PostIncDecOperationExpression	tmp ++		4732795	0					
ANR	4732916	Identifier	tmp		4732795	0					
ANR	4732917	IncDec	++		4732795	1					
ANR	4732918	ElseStatement	else		4732795	0					
ANR	4732919	CompoundStatement		48:8:1305:1305	4732795	0					
ANR	4732920	ExpressionStatement	i = ( * from - '2' )	320:4:8188:8207	4732795	0	True				
ANR	4732921	AssignmentExpression	i = ( * from - '2' )		4732795	0		=			
ANR	4732922	Identifier	i		4732795	0					
ANR	4732923	AdditiveExpression	* from - '2'		4732795	1		-			
ANR	4732924	UnaryOperationExpression	* from		4732795	0					
ANR	4732925	UnaryOperator	*		4732795	0					
ANR	4732926	Identifier	from		4732795	1					
ANR	4732927	PrimaryExpression	'2'		4732795	1					
ANR	4732928	ExpressionStatement	tmp = params	321:4:8213:8225	4732795	1	True				
ANR	4732929	AssignmentExpression	tmp = params		4732795	0		=			
ANR	4732930	Identifier	tmp		4732795	0					
ANR	4732931	Identifier	params		4732795	1					
ANR	4732932	ForStatement	for ( ; ; )		4732795	2					
ANR	4732933	CompoundStatement		51:13:1363:1363	4732795	0					
ANR	4732934	WhileStatement	while ( iswspace ( * tmp ) )		4732795	0					
ANR	4732935	Condition	iswspace ( * tmp )	323:13:8260:8276	4732795	0	True				
ANR	4732936	CallExpression	iswspace ( * tmp )		4732795	0					
ANR	4732937	Callee	iswspace		4732795	0					
ANR	4732938	Identifier	iswspace		4732795	0					
ANR	4732939	ArgumentList	* tmp		4732795	1					
ANR	4732940	Argument	* tmp		4732795	0					
ANR	4732941	UnaryOperationExpression	* tmp		4732795	0					
ANR	4732942	UnaryOperator	*		4732795	0					
ANR	4732943	Identifier	tmp		4732795	1					
ANR	4732944	CompoundStatement		52:33:1403:1403	4732795	1					
ANR	4732945	ExpressionStatement	tmp ++	324:6:8288:8293	4732795	0	True				
ANR	4732946	PostIncDecOperationExpression	tmp ++		4732795	0					
ANR	4732947	Identifier	tmp		4732795	0					
ANR	4732948	IncDec	++		4732795	1					
ANR	4732949	IfStatement	if ( ! * tmp || ! i )		4732795	1					
ANR	4732950	Condition	! * tmp || ! i	326:10:8312:8322	4732795	0	True				
ANR	4732951	OrExpression	! * tmp || ! i		4732795	0		||			
ANR	4732952	UnaryOperationExpression	! * tmp		4732795	0					
ANR	4732953	UnaryOperator	!		4732795	0					
ANR	4732954	UnaryOperationExpression	* tmp		4732795	1					
ANR	4732955	UnaryOperator	*		4732795	0					
ANR	4732956	Identifier	tmp		4732795	1					
ANR	4732957	UnaryOperationExpression	! i		4732795	1					
ANR	4732958	UnaryOperator	!		4732795	0					
ANR	4732959	Identifier	i		4732795	1					
ANR	4732960	CompoundStatement		55:24:1449:1449	4732795	1					
ANR	4732961	BreakStatement	break ;	327:6:8334:8339	4732795	0	True				
ANR	4732962	ExpressionStatement	i --	329:5:8353:8356	4732795	2	True				
ANR	4732963	PostIncDecOperationExpression	i --		4732795	0					
ANR	4732964	Identifier	i		4732795	0					
ANR	4732965	IncDec	--		4732795	1					
ANR	4732966	WhileStatement	while ( iswspace ( * tmp ) )		4732795	3					
ANR	4732967	Condition	iswspace ( * tmp )	330:13:8371:8387	4732795	0	True				
ANR	4732968	CallExpression	iswspace ( * tmp )		4732795	0					
ANR	4732969	Callee	iswspace		4732795	0					
ANR	4732970	Identifier	iswspace		4732795	0					
ANR	4732971	ArgumentList	* tmp		4732795	1					
ANR	4732972	Argument	* tmp		4732795	0					
ANR	4732973	UnaryOperationExpression	* tmp		4732795	0					
ANR	4732974	UnaryOperator	*		4732795	0					
ANR	4732975	Identifier	tmp		4732795	1					
ANR	4732976	CompoundStatement		59:33:1514:1514	4732795	1					
ANR	4732977	ExpressionStatement	tmp ++	331:6:8399:8404	4732795	0	True				
ANR	4732978	PostIncDecOperationExpression	tmp ++		4732795	0					
ANR	4732979	Identifier	tmp		4732795	0					
ANR	4732980	IncDec	++		4732795	1					
ANR	4732981	IfStatement	if ( ! tmp )		4732795	4					
ANR	4732982	Condition	! tmp	333:10:8423:8426	4732795	0	True				
ANR	4732983	UnaryOperationExpression	! tmp		4732795	0					
ANR	4732984	UnaryOperator	!		4732795	0					
ANR	4732985	Identifier	tmp		4732795	1					
ANR	4732986	CompoundStatement		62:17:1553:1553	4732795	1					
ANR	4732987	ContinueStatement	continue ;	334:6:8438:8446	4732795	0	True				
ANR	4732988	WhileStatement	while ( * tmp )		4732795	4					
ANR	4732989	Condition	* tmp	343:11:8675:8678	4732795	0	True				
ANR	4732990	UnaryOperationExpression	* tmp		4732795	0					
ANR	4732991	UnaryOperator	*		4732795	0					
ANR	4732992	Identifier	tmp		4732795	1					
ANR	4732993	CompoundStatement		72:18:1805:1805	4732795	1					
ANR	4732994	IfStatement	if ( iswspace ( * tmp ) && ! quoted )		4732795	0					
ANR	4732995	Condition	iswspace ( * tmp ) && ! quoted	344:9:8693:8720	4732795	0	True				
ANR	4732996	AndExpression	iswspace ( * tmp ) && ! quoted		4732795	0		&&			
ANR	4732997	CallExpression	iswspace ( * tmp )		4732795	0					
ANR	4732998	Callee	iswspace		4732795	0					
ANR	4732999	Identifier	iswspace		4732795	0					
ANR	4733000	ArgumentList	* tmp		4732795	1					
ANR	4733001	Argument	* tmp		4732795	0					
ANR	4733002	UnaryOperationExpression	* tmp		4732795	0					
ANR	4733003	UnaryOperator	*		4732795	0					
ANR	4733004	Identifier	tmp		4732795	1					
ANR	4733005	UnaryOperationExpression	! quoted		4732795	1					
ANR	4733006	UnaryOperator	!		4732795	0					
ANR	4733007	Identifier	quoted		4732795	1					
ANR	4733008	CompoundStatement		73:40:1847:1847	4732795	1					
ANR	4733009	BreakStatement	break ;	345:5:8731:8736	4732795	0	True				
ANR	4733010	ExpressionStatement	* to ++ = * tmp ++	347:4:8748:8762	4732795	1	True				
ANR	4733011	AssignmentExpression	* to ++ = * tmp ++		4732795	0		=			
ANR	4733012	UnaryOperationExpression	* to ++		4732795	0					
ANR	4733013	UnaryOperator	*		4732795	0					
ANR	4733014	PostIncDecOperationExpression	to ++		4732795	1					
ANR	4733015	Identifier	to		4732795	0					
ANR	4733016	IncDec	++		4732795	1					
ANR	4733017	UnaryOperationExpression	* tmp ++		4732795	1					
ANR	4733018	UnaryOperator	*		4732795	0					
ANR	4733019	PostIncDecOperationExpression	tmp ++		4732795	1					
ANR	4733020	Identifier	tmp		4732795	0					
ANR	4733021	IncDec	++		4732795	1					
ANR	4733022	IfStatement	"if ( '""' == * tmp && quoted )"		4732795	2					
ANR	4733023	Condition	"'""' == * tmp && quoted"	348:9:8773:8793	4732795	0	True				
ANR	4733024	AndExpression	"'""' == * tmp && quoted"		4732795	0		&&			
ANR	4733025	EqualityExpression	"'""' == * tmp"		4732795	0		==			
ANR	4733026	PrimaryExpression	"'""'"		4732795	0					
ANR	4733027	UnaryOperationExpression	* tmp		4732795	1					
ANR	4733028	UnaryOperator	*		4732795	0					
ANR	4733029	Identifier	tmp		4732795	1					
ANR	4733030	Identifier	quoted		4732795	1					
ANR	4733031	CompoundStatement		77:33:1920:1920	4732795	1					
ANR	4733032	BreakStatement	break ;	349:5:8804:8809	4732795	0	True				
ANR	4733033	ExpressionStatement	quoted = FALSE	354:3:8853:8867	4732795	5	True				
ANR	4733034	AssignmentExpression	quoted = FALSE		4732795	0		=			
ANR	4733035	Identifier	quoted		4732795	0					
ANR	4733036	Identifier	FALSE		4732795	1					
ANR	4733037	ElseStatement	else		4732795	0					
ANR	4733038	CompoundStatement		85:9:2002:2002	4732795	0					
ANR	4733039	ExpressionStatement	* to ++ = * from	360:3:8992:9005	4732795	0	True				
ANR	4733040	AssignmentExpression	* to ++ = * from		4732795	0		=			
ANR	4733041	UnaryOperationExpression	* to ++		4732795	0					
ANR	4733042	UnaryOperator	*		4732795	0					
ANR	4733043	PostIncDecOperationExpression	to ++		4732795	1					
ANR	4733044	Identifier	to		4732795	0					
ANR	4733045	IncDec	++		4732795	1					
ANR	4733046	UnaryOperationExpression	* from		4732795	1					
ANR	4733047	UnaryOperator	*		4732795	0					
ANR	4733048	Identifier	from		4732795	1					
ANR	4733049	ExpressionStatement	* to = '\\0'	366:1:9060:9070	4732795	4	True				
ANR	4733050	AssignmentExpression	* to = '\\0'		4732795	0		=			
ANR	4733051	UnaryOperationExpression	* to		4732795	0					
ANR	4733052	UnaryOperator	*		4732795	0					
ANR	4733053	Identifier	to		4732795	1					
ANR	4733054	PrimaryExpression	'\\0'		4732795	1					
ANR	4733055	ReturnType	void		4732795	1					
ANR	4733056	Identifier	ExpandArgumentTemplate		4732795	2					
ANR	4733057	ParameterList	"LPCSTR from , LPCSTR file , LPCSTR params , LPSTR to , DWORD length"		4732795	3					
ANR	4733058	Parameter	LPCSTR from	268:1:6796:6808	4732795	0	True				
ANR	4733059	ParameterType	LPCSTR		4732795	0					
ANR	4733060	Identifier	from		4732795	1					
ANR	4733061	Parameter	LPCSTR file	269:1:6812:6824	4732795	1	True				
ANR	4733062	ParameterType	LPCSTR		4732795	0					
ANR	4733063	Identifier	file		4732795	1					
ANR	4733064	Parameter	LPCSTR params	270:1:6828:6842	4732795	2	True				
ANR	4733065	ParameterType	LPCSTR		4732795	0					
ANR	4733066	Identifier	params		4732795	1					
ANR	4733067	Parameter	LPSTR to	271:1:6846:6855	4732795	3	True				
ANR	4733068	ParameterType	LPSTR		4732795	0					
ANR	4733069	Identifier	to		4732795	1					
ANR	4733070	Parameter	DWORD length	272:1:6859:6872	4732795	4	True				
ANR	4733071	ParameterType	DWORD		4732795	0					
ANR	4733072	Identifier	length		4732795	1					
ANR	4733073	CFGEntryNode	ENTRY		4732795		True				
ANR	4733074	CFGExitNode	EXIT		4732795		True				
ANR	4733075	InfiniteForNode	true		4732795		True				
ANR	4733076	Symbol	* tmp		4732795						
ANR	4733077	Symbol	* tmp ++		4732795						
ANR	4733078	Symbol	* to		4732795						
ANR	4733079	Symbol	length		4732795						
ANR	4733080	Symbol	i		4732795						
ANR	4733081	Symbol	TRUE		4732795						
ANR	4733082	Symbol	params		4732795						
ANR	4733083	Symbol	* file		4732795						
ANR	4733084	Symbol	quoted		4732795						
ANR	4733085	Symbol	strlen		4732795						
ANR	4733086	Symbol	file		4732795						
ANR	4733087	Symbol	tmp		4732795						
ANR	4733088	Symbol	iswspace		4732795						
ANR	4733089	Symbol	* to ++		4732795						
ANR	4733090	Symbol	from		4732795						
ANR	4733091	Symbol	FALSE		4732795						
ANR	4733092	Symbol	to		4732795						
ANR	4733093	Symbol	* from		4732795						
