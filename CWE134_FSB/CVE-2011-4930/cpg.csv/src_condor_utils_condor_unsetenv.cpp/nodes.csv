command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4673262	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_condor_unsetenv.cpp								
ANR	4673263	Function	__findenv	30:0:1072:1677							
ANR	4673264	FunctionDef	"__findenv (const char * name , int * offset)"		4673263	0					
ANR	4673265	CompoundStatement		32:0:1127:1677	4673263	0					
ANR	4673266	IdentifierDeclStatement	extern char * * environ ;	33:8:1137:1158	4673263	0	True				
ANR	4673267	IdentifierDecl	* * environ		4673263	0					
ANR	4673268	IdentifierDeclType	extern char * *		4673263	0					
ANR	4673269	Identifier	environ		4673263	1					
ANR	4673270	Statement	register	34:8:1168:1175	4673263	1	True				
ANR	4673271	IdentifierDeclStatement	int len ;	34:17:1177:1184	4673263	2	True				
ANR	4673272	IdentifierDecl	len		4673263	0					
ANR	4673273	IdentifierDeclType	int		4673263	0					
ANR	4673274	Identifier	len		4673263	1					
ANR	4673275	Statement	register	35:8:1194:1201	4673263	3	True				
ANR	4673276	IdentifierDeclStatement	const char * np ;	35:17:1203:1217	4673263	4	True				
ANR	4673277	IdentifierDecl	* np		4673263	0					
ANR	4673278	IdentifierDeclType	const char *		4673263	0					
ANR	4673279	Identifier	np		4673263	1					
ANR	4673280	Statement	register	36:8:1227:1234	4673263	5	True				
ANR	4673281	IdentifierDeclStatement	"char * * p , * c ;"	36:17:1236:1248	4673263	6	True				
ANR	4673282	IdentifierDecl	* * p		4673263	0					
ANR	4673283	IdentifierDeclType	char * *		4673263	0					
ANR	4673284	Identifier	p		4673263	1					
ANR	4673285	IdentifierDecl	* c		4673263	1					
ANR	4673286	IdentifierDeclType	char *		4673263	0					
ANR	4673287	Identifier	c		4673263	1					
ANR	4673288	IfStatement	if ( name == NULL || environ == NULL )		4673263	7					
ANR	4673289	Condition	name == NULL || environ == NULL	38:12:1263:1293	4673263	0	True				
ANR	4673290	OrExpression	name == NULL || environ == NULL		4673263	0		||			
ANR	4673291	EqualityExpression	name == NULL		4673263	0		==			
ANR	4673292	Identifier	name		4673263	0					
ANR	4673293	Identifier	NULL		4673263	1					
ANR	4673294	EqualityExpression	environ == NULL		4673263	1		==			
ANR	4673295	Identifier	environ		4673263	0					
ANR	4673296	Identifier	NULL		4673263	1					
ANR	4673297	ReturnStatement	return ( NULL ) ;	39:16:1312:1325	4673263	1	True				
ANR	4673298	Identifier	NULL		4673263	0					
ANR	4673299	ForStatement	for ( np = name ; * np && * np != '=' ; ++ np )		4673263	8					
ANR	4673300	ForInit	np = name ;	40:13:1340:1349	4673263	0	True				
ANR	4673301	AssignmentExpression	np = name		4673263	0		=			
ANR	4673302	Identifier	np		4673263	0					
ANR	4673303	Identifier	name		4673263	1					
ANR	4673304	Condition	* np && * np != '='	40:24:1351:1367	4673263	1	True				
ANR	4673305	AndExpression	* np && * np != '='		4673263	0		&&			
ANR	4673306	UnaryOperationExpression	* np		4673263	0					
ANR	4673307	UnaryOperator	*		4673263	0					
ANR	4673308	Identifier	np		4673263	1					
ANR	4673309	EqualityExpression	* np != '='		4673263	1		!=			
ANR	4673310	UnaryOperationExpression	* np		4673263	0					
ANR	4673311	UnaryOperator	*		4673263	0					
ANR	4673312	Identifier	np		4673263	1					
ANR	4673313	PrimaryExpression	'='		4673263	1					
ANR	4673314	UnaryExpression	++ np	40:43:1370:1373	4673263	2	True				
ANR	4673315	IncDec	++		4673263	0					
ANR	4673316	Identifier	np		4673263	1					
ANR	4673317	ContinueStatement	continue ;	41:16:1392:1400	4673263	3	True				
ANR	4673318	ExpressionStatement	len = np - name	42:8:1410:1425	4673263	9	True				
ANR	4673319	AssignmentExpression	len = np - name		4673263	0		=			
ANR	4673320	Identifier	len		4673263	0					
ANR	4673321	AdditiveExpression	np - name		4673263	1		-			
ANR	4673322	Identifier	np		4673263	0					
ANR	4673323	Identifier	name		4673263	1					
ANR	4673324	ForStatement	for ( p = environ ; ( c = * p ) != NULL ; ++ p )		4673263	10					
ANR	4673325	ForInit	p = environ ;	43:13:1440:1451	4673263	0	True				
ANR	4673326	AssignmentExpression	p = environ		4673263	0		=			
ANR	4673327	Identifier	p		4673263	0					
ANR	4673328	Identifier	environ		4673263	1					
ANR	4673329	Condition	( c = * p ) != NULL	43:26:1453:1468	4673263	1	True				
ANR	4673330	EqualityExpression	( c = * p ) != NULL		4673263	0		!=			
ANR	4673331	AssignmentExpression	c = * p		4673263	0		=			
ANR	4673332	Identifier	c		4673263	0					
ANR	4673333	UnaryOperationExpression	* p		4673263	1					
ANR	4673334	UnaryOperator	*		4673263	0					
ANR	4673335	Identifier	p		4673263	1					
ANR	4673336	Identifier	NULL		4673263	1					
ANR	4673337	UnaryExpression	++ p	43:44:1471:1473	4673263	2	True				
ANR	4673338	IncDec	++		4673263	0					
ANR	4673339	Identifier	p		4673263	1					
ANR	4673340	IfStatement	"if ( strncmp ( c , name , len ) == 0 && c [ len ] == '=' )"		4673263	3					
ANR	4673341	Condition	"strncmp ( c , name , len ) == 0 && c [ len ] == '='"	44:20:1496:1538	4673263	0	True				
ANR	4673342	AndExpression	"strncmp ( c , name , len ) == 0 && c [ len ] == '='"		4673263	0		&&			
ANR	4673343	EqualityExpression	"strncmp ( c , name , len ) == 0"		4673263	0		==			
ANR	4673344	CallExpression	"strncmp ( c , name , len )"		4673263	0					
ANR	4673345	Callee	strncmp		4673263	0					
ANR	4673346	Identifier	strncmp		4673263	0					
ANR	4673347	ArgumentList	c		4673263	1					
ANR	4673348	Argument	c		4673263	0					
ANR	4673349	Identifier	c		4673263	0					
ANR	4673350	Argument	name		4673263	1					
ANR	4673351	Identifier	name		4673263	0					
ANR	4673352	Argument	len		4673263	2					
ANR	4673353	Identifier	len		4673263	0					
ANR	4673354	PrimaryExpression	0		4673263	1					
ANR	4673355	EqualityExpression	c [ len ] == '='		4673263	1		==			
ANR	4673356	ArrayIndexing	c [ len ]		4673263	0					
ANR	4673357	Identifier	c		4673263	0					
ANR	4673358	Identifier	len		4673263	1					
ANR	4673359	PrimaryExpression	'='		4673263	1					
ANR	4673360	CompoundStatement		13:65:413:413	4673263	1					
ANR	4673361	ExpressionStatement	* offset = p - environ	45:24:1567:1588	4673263	0	True				
ANR	4673362	AssignmentExpression	* offset = p - environ		4673263	0		=			
ANR	4673363	UnaryOperationExpression	* offset		4673263	0					
ANR	4673364	UnaryOperator	*		4673263	0					
ANR	4673365	Identifier	offset		4673263	1					
ANR	4673366	AdditiveExpression	p - environ		4673263	1		-			
ANR	4673367	Identifier	p		4673263	0					
ANR	4673368	Identifier	environ		4673263	1					
ANR	4673369	ReturnStatement	return ( c + len + 1 ) ;	46:24:1614:1634	4673263	1	True				
ANR	4673370	AdditiveExpression	c + len + 1		4673263	0		+			
ANR	4673371	Identifier	c		4673263	0					
ANR	4673372	AdditiveExpression	len + 1		4673263	1		+			
ANR	4673373	Identifier	len		4673263	0					
ANR	4673374	PrimaryExpression	1		4673263	1					
ANR	4673375	ReturnStatement	return ( NULL ) ;	48:8:1662:1675	4673263	11	True				
ANR	4673376	Identifier	NULL		4673263	0					
ANR	4673377	ReturnType	static char *		4673263	1					
ANR	4673378	Identifier	__findenv		4673263	2					
ANR	4673379	ParameterList	"const char * name , int * offset"		4673263	3					
ANR	4673380	Parameter	const char * name	31:10:1096:1111	4673263	0	True				
ANR	4673381	ParameterType	const char *		4673263	0					
ANR	4673382	Identifier	name		4673263	1					
ANR	4673383	Parameter	int * offset	31:28:1114:1124	4673263	1	True				
ANR	4673384	ParameterType	int *		4673263	0					
ANR	4673385	Identifier	offset		4673263	1					
ANR	4673386	CFGEntryNode	ENTRY		4673263		True				
ANR	4673387	CFGExitNode	EXIT		4673263		True				
ANR	4673388	Symbol	np		4673263						
ANR	4673389	Symbol	c		4673263						
ANR	4673390	Symbol	NULL		4673263						
ANR	4673391	Symbol	offset		4673263						
ANR	4673392	Symbol	* np		4673263						
ANR	4673393	Symbol	* c		4673263						
ANR	4673394	Symbol	environ		4673263						
ANR	4673395	Symbol	p		4673263						
ANR	4673396	Symbol	strncmp		4673263						
ANR	4673397	Symbol	len		4673263						
ANR	4673398	Symbol	name		4673263						
ANR	4673399	Symbol	* offset		4673263						
ANR	4673400	Symbol	* p		4673263						
ANR	4673401	Symbol	* len		4673263						
ANR	4673402	Function	unsetenv	51:0:1680:2003							
ANR	4673403	FunctionDef	unsetenv (const char * name)		4673402	0					
ANR	4673404	CompoundStatement		53:0:1712:2003	4673402	0					
ANR	4673405	IdentifierDeclStatement	extern char * * environ ;	54:8:1722:1743	4673402	0	True				
ANR	4673406	IdentifierDecl	* * environ		4673402	0					
ANR	4673407	IdentifierDeclType	extern char * *		4673402	0					
ANR	4673408	Identifier	environ		4673402	1					
ANR	4673409	Statement	register	55:8:1753:1760	4673402	1	True				
ANR	4673410	IdentifierDeclStatement	char * * p ;	55:17:1762:1770	4673402	2	True				
ANR	4673411	IdentifierDecl	* * p		4673402	0					
ANR	4673412	IdentifierDeclType	char * *		4673402	0					
ANR	4673413	Identifier	p		4673402	1					
ANR	4673414	IdentifierDeclStatement	int offset ;	56:8:1780:1790	4673402	3	True				
ANR	4673415	IdentifierDecl	offset		4673402	0					
ANR	4673416	IdentifierDeclType	int		4673402	0					
ANR	4673417	Identifier	offset		4673402	1					
ANR	4673418	WhileStatement	"while ( __findenv ( name , & offset ) )"		4673402	4					
ANR	4673419	Condition	"__findenv ( name , & offset )"	58:15:1808:1831	4673402	0	True				
ANR	4673420	CallExpression	"__findenv ( name , & offset )"		4673402	0					
ANR	4673421	Callee	__findenv		4673402	0					
ANR	4673422	Identifier	__findenv		4673402	0					
ANR	4673423	ArgumentList	name		4673402	1					
ANR	4673424	Argument	name		4673402	0					
ANR	4673425	Identifier	name		4673402	0					
ANR	4673426	Argument	& offset		4673402	1					
ANR	4673427	UnaryOperationExpression	& offset		4673402	0					
ANR	4673428	UnaryOperator	&		4673402	0					
ANR	4673429	Identifier	offset		4673402	1					
ANR	4673430	ForStatement	for ( p = & environ [ offset ] ; ; ++ p )		4673402	1					
ANR	4673431	ForInit	p = & environ [ offset ] ;	59:21:1890:1910	4673402	0	True				
ANR	4673432	AssignmentExpression	p = & environ [ offset ]		4673402	0		=			
ANR	4673433	Identifier	p		4673402	0					
ANR	4673434	UnaryOperationExpression	& environ [ offset ]		4673402	1					
ANR	4673435	UnaryOperator	&		4673402	0					
ANR	4673436	ArrayIndexing	environ [ offset ]		4673402	1					
ANR	4673437	Identifier	environ		4673402	0					
ANR	4673438	Identifier	offset		4673402	1					
ANR	4673439	UnaryExpression	++ p	59:44:1913:1915	4673402	1	True				
ANR	4673440	IncDec	++		4673402	0					
ANR	4673441	Identifier	p		4673402	1					
ANR	4673442	IfStatement	if ( ! ( * p = * ( p + 1 ) ) )		4673402	2					
ANR	4673443	Condition	! ( * p = * ( p + 1 ) )	60:28:1946:1961	4673402	0	True				
ANR	4673444	UnaryOperationExpression	! ( * p = * ( p + 1 ) )		4673402	0					
ANR	4673445	UnaryOperator	!		4673402	0					
ANR	4673446	AssignmentExpression	* p = * ( p + 1 )		4673402	1		=			
ANR	4673447	UnaryOperationExpression	* p		4673402	0					
ANR	4673448	UnaryOperator	*		4673402	0					
ANR	4673449	Identifier	p		4673402	1					
ANR	4673450	UnaryOperationExpression	* ( p + 1 )		4673402	1					
ANR	4673451	UnaryOperator	*		4673402	0					
ANR	4673452	AdditiveExpression	p + 1		4673402	1		+			
ANR	4673453	Identifier	p		4673402	0					
ANR	4673454	PrimaryExpression	1		4673402	1					
ANR	4673455	BreakStatement	break ;	61:32:1996:2001	4673402	1	True				
ANR	4673456	ReturnType	void		4673402	1					
ANR	4673457	Identifier	unsetenv		4673402	2					
ANR	4673458	ParameterList	const char * name		4673402	3					
ANR	4673459	Parameter	const char * name	52:9:1694:1709	4673402	0	True				
ANR	4673460	ParameterType	const char *		4673402	0					
ANR	4673461	Identifier	name		4673402	1					
ANR	4673462	CFGEntryNode	ENTRY		4673402		True				
ANR	4673463	CFGExitNode	EXIT		4673402		True				
ANR	4673464	InfiniteForNode	true		4673402		True				
ANR	4673465	Symbol	p		4673402						
ANR	4673466	Symbol	offset		4673402						
ANR	4673467	Symbol	& offset		4673402						
ANR	4673468	Symbol	name		4673402						
ANR	4673469	Symbol	* p		4673402						
ANR	4673470	Symbol	* ( p + 1 )		4673402						
ANR	4673471	Symbol	__findenv		4673402						
ANR	4673472	Symbol	environ		4673402						
