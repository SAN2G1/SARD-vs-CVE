command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2662227	File	data/converged/CVE-2011-4930_htcondor/src_condor_ckpt_file_state.cpp								
ANR	2662228	DeclStmt									
ANR	2662229	Decl							int	"int ( char * name , long long open_count , long long read_count , long long write_count , long long seek_count , long long read_bytes , long long write_bytes )"	REMOTE_CONDOR_report_file_info_new
ANR	2662230	DeclStmt									
ANR	2662231	Decl							int	"int ( char * logical_name , char * & actual_url )"	REMOTE_CONDOR_get_file_info_new
ANR	2662232	DeclStmt									
ANR	2662233	Decl							int	"int ( int * bytes , int * block_size , int * prefetch_size )"	REMOTE_CONDOR_get_buffer_info
ANR	2662234	DeclStmt									
ANR	2662235	Decl							int	int ( const char * path )	REMOTE_CONDOR_chdir
ANR	2662236	DeclStmt									
ANR	2662237	Decl							CondorFileTable	CondorFileTable *	FileTab
ANR	2662238	ClassDef	CondorFileInfo	66:0:2173:3055							
ANR	2662239	Function	CondorFileInfo	68:1:2205:2393							
ANR	2662240	FunctionDef	CondorFileInfo (char * n)		2662239	0					
ANR	2662241	CompoundStatement		68:27:2231:2393	2662239	0					
ANR	2662242	ExpressionStatement	info_name = strdup ( n )	69:2:2235:2256	2662239	0	True				
ANR	2662243	AssignmentExpression	info_name = strdup ( n )		2662239	0		=			
ANR	2662244	Identifier	info_name		2662239	0					
ANR	2662245	CallExpression	strdup ( n )		2662239	1					
ANR	2662246	Callee	strdup		2662239	0					
ANR	2662247	Identifier	strdup		2662239	0					
ANR	2662248	ArgumentList	n		2662239	1					
ANR	2662249	Argument	n		2662239	0					
ANR	2662250	Identifier	n		2662239	0					
ANR	2662251	ExpressionStatement	open_count = 0	70:2:2260:2274	2662239	1	True				
ANR	2662252	AssignmentExpression	open_count = 0		2662239	0		=			
ANR	2662253	Identifier	open_count		2662239	0					
ANR	2662254	PrimaryExpression	0		2662239	1					
ANR	2662255	ExpressionStatement	read_count = read_bytes = 0	71:2:2278:2305	2662239	2	True				
ANR	2662256	AssignmentExpression	read_count = read_bytes = 0		2662239	0		=			
ANR	2662257	Identifier	read_count		2662239	0					
ANR	2662258	AssignmentExpression	read_bytes = 0		2662239	1		=			
ANR	2662259	Identifier	read_bytes		2662239	0					
ANR	2662260	PrimaryExpression	0		2662239	1					
ANR	2662261	ExpressionStatement	write_count = write_bytes = 0	72:2:2309:2338	2662239	3	True				
ANR	2662262	AssignmentExpression	write_count = write_bytes = 0		2662239	0		=			
ANR	2662263	Identifier	write_count		2662239	0					
ANR	2662264	AssignmentExpression	write_bytes = 0		2662239	1		=			
ANR	2662265	Identifier	write_bytes		2662239	0					
ANR	2662266	PrimaryExpression	0		2662239	1					
ANR	2662267	ExpressionStatement	seek_count = 0	73:2:2342:2356	2662239	4	True				
ANR	2662268	AssignmentExpression	seek_count = 0		2662239	0		=			
ANR	2662269	Identifier	seek_count		2662239	0					
ANR	2662270	PrimaryExpression	0		2662239	1					
ANR	2662271	ExpressionStatement	already_warned = 0	74:2:2360:2378	2662239	5	True				
ANR	2662272	AssignmentExpression	already_warned = 0		2662239	0		=			
ANR	2662273	Identifier	already_warned		2662239	0					
ANR	2662274	PrimaryExpression	0		2662239	1					
ANR	2662275	ExpressionStatement	next = 0	75:2:2382:2390	2662239	6	True				
ANR	2662276	AssignmentExpression	next = 0		2662239	0		=			
ANR	2662277	Identifier	next		2662239	0					
ANR	2662278	PrimaryExpression	0		2662239	1					
ANR	2662279	Identifier	CondorFileInfo		2662239	1					
ANR	2662280	ParameterList	char * n		2662239	2					
ANR	2662281	Parameter	char * n	68:17:2221:2227	2662239	0	True				
ANR	2662282	ParameterType	char *		2662239	0					
ANR	2662283	Identifier	n		2662239	1					
ANR	2662284	CFGEntryNode	ENTRY		2662239		True				
ANR	2662285	CFGExitNode	EXIT		2662239		True				
ANR	2662286	Symbol	next		2662239						
ANR	2662287	Symbol	write_bytes		2662239						
ANR	2662288	Symbol	write_count		2662239						
ANR	2662289	Symbol	info_name		2662239						
ANR	2662290	Symbol	open_count		2662239						
ANR	2662291	Symbol	seek_count		2662239						
ANR	2662292	Symbol	strdup		2662239						
ANR	2662293	Symbol	already_warned		2662239						
ANR	2662294	Symbol	read_bytes		2662239						
ANR	2662295	Symbol	n		2662239						
ANR	2662296	Symbol	read_count		2662239						
ANR	2662297	Function	~CondorFileInfo	77:1:2396:2438							
ANR	2662298	FunctionDef	~CondorFileInfo ()		2662297	1					
ANR	2662299	CompoundStatement		77:19:2414:2438	2662297	0					
ANR	2662300	ExpressionStatement	free ( info_name )	78:2:2418:2435	2662297	0	True				
ANR	2662301	CallExpression	free ( info_name )		2662297	0					
ANR	2662302	Callee	free		2662297	0					
ANR	2662303	Identifier	free		2662297	0					
ANR	2662304	ArgumentList	info_name		2662297	1					
ANR	2662305	Argument	info_name		2662297	0					
ANR	2662306	Identifier	info_name		2662297	0					
ANR	2662307	Identifier	~CondorFileInfo		2662297	1					
ANR	2662308	ParameterList			2662297	2					
ANR	2662309	CFGEntryNode	ENTRY		2662297		True				
ANR	2662310	CFGExitNode	EXIT		2662297		True				
ANR	2662311	Symbol	info_name		2662297						
ANR	2662312	Function	report	81:1:2442:2621							
ANR	2662313	FunctionDef	report ()		2662312	2					
ANR	2662314	CompoundStatement		81:15:2456:2621	2662312	0					
ANR	2662315	IfStatement	if ( RemoteSysCalls ( ) )		2662312	0					
ANR	2662316	Condition	RemoteSysCalls ( )	82:6:2464:2479	2662312	0	True				
ANR	2662317	CallExpression	RemoteSysCalls ( )		2662312	0					
ANR	2662318	Callee	RemoteSysCalls		2662312	0					
ANR	2662319	Identifier	RemoteSysCalls		2662312	0					
ANR	2662320	ArgumentList			2662312	1					
ANR	2662321	CompoundStatement		2:25:26:26	2662312	1					
ANR	2662322	ExpressionStatement	"REMOTE_CONDOR_report_file_info_new ( info_name , open_count , read_count , write_count , seek_count , read_bytes , write_bytes )"	83:3:2488:2614	2662312	0	True				
ANR	2662323	CallExpression	"REMOTE_CONDOR_report_file_info_new ( info_name , open_count , read_count , write_count , seek_count , read_bytes , write_bytes )"		2662312	0					
ANR	2662324	Callee	REMOTE_CONDOR_report_file_info_new		2662312	0					
ANR	2662325	Identifier	REMOTE_CONDOR_report_file_info_new		2662312	0					
ANR	2662326	ArgumentList	info_name		2662312	1					
ANR	2662327	Argument	info_name		2662312	0					
ANR	2662328	Identifier	info_name		2662312	0					
ANR	2662329	Argument	open_count		2662312	1					
ANR	2662330	Identifier	open_count		2662312	0					
ANR	2662331	Argument	read_count		2662312	2					
ANR	2662332	Identifier	read_count		2662312	0					
ANR	2662333	Argument	write_count		2662312	3					
ANR	2662334	Identifier	write_count		2662312	0					
ANR	2662335	Argument	seek_count		2662312	4					
ANR	2662336	Identifier	seek_count		2662312	0					
ANR	2662337	Argument	read_bytes		2662312	5					
ANR	2662338	Identifier	read_bytes		2662312	0					
ANR	2662339	Argument	write_bytes		2662312	6					
ANR	2662340	Identifier	write_bytes		2662312	0					
ANR	2662341	ReturnType	void		2662312	1					
ANR	2662342	Identifier	report		2662312	2					
ANR	2662343	ParameterList			2662312	3					
ANR	2662344	CFGEntryNode	ENTRY		2662312		True				
ANR	2662345	CFGExitNode	EXIT		2662312		True				
ANR	2662346	Symbol	RemoteSysCalls		2662312						
ANR	2662347	Symbol	write_bytes		2662312						
ANR	2662348	Symbol	write_count		2662312						
ANR	2662349	Symbol	info_name		2662312						
ANR	2662350	Symbol	open_count		2662312						
ANR	2662351	Symbol	seek_count		2662312						
ANR	2662352	Symbol	read_bytes		2662312						
ANR	2662353	Symbol	read_count		2662312						
ANR	2662354	DeclStmt									
ANR	2662355	Decl							char	char *	info_name
ANR	2662356	DeclStmt									
ANR	2662357	Decl							long long	long long	open_count
ANR	2662358	DeclStmt									
ANR	2662359	Decl							long long	long long	read_count
ANR	2662360	Decl							long long	long long	read_bytes
ANR	2662361	DeclStmt									
ANR	2662362	Decl							long long	long long	write_count
ANR	2662363	Decl							long long	long long	write_bytes
ANR	2662364	DeclStmt									
ANR	2662365	Decl							long long	long long	seek_count
ANR	2662366	DeclStmt									
ANR	2662367	Decl							int	int	already_warned
ANR	2662368	DeclStmt									
ANR	2662369	Decl							CondorFileInfo	CondorFileInfo *	next
ANR	2662370	ClassDef	CondorFilePointer	114:0:3424:3759							
ANR	2662371	Function	CondorFilePointer	116:1:3459:3615							
ANR	2662372	FunctionDef	"CondorFilePointer (CondorFile * f , CondorFileInfo * i , int fl , char * n)"		2662371	0					
ANR	2662373	CompoundStatement		116:72:3530:3615	2662371	0					
ANR	2662374	ExpressionStatement	file = f	117:2:3534:3542	2662371	0	True				
ANR	2662375	AssignmentExpression	file = f		2662371	0		=			
ANR	2662376	Identifier	file		2662371	0					
ANR	2662377	Identifier	f		2662371	1					
ANR	2662378	ExpressionStatement	info = i	118:2:3546:3554	2662371	1	True				
ANR	2662379	AssignmentExpression	info = i		2662371	0		=			
ANR	2662380	Identifier	info		2662371	0					
ANR	2662381	Identifier	i		2662371	1					
ANR	2662382	ExpressionStatement	flags = fl	119:2:3558:3568	2662371	2	True				
ANR	2662383	AssignmentExpression	flags = fl		2662371	0		=			
ANR	2662384	Identifier	flags		2662371	0					
ANR	2662385	Identifier	fl		2662371	1					
ANR	2662386	ExpressionStatement	offset = 0	120:2:3572:3582	2662371	3	True				
ANR	2662387	AssignmentExpression	offset = 0		2662371	0		=			
ANR	2662388	Identifier	offset		2662371	0					
ANR	2662389	PrimaryExpression	0		2662371	1					
ANR	2662390	ExpressionStatement	logical_name = strdup ( n )	121:2:3586:3612	2662371	4	True				
ANR	2662391	AssignmentExpression	logical_name = strdup ( n )		2662371	0		=			
ANR	2662392	Identifier	logical_name		2662371	0					
ANR	2662393	CallExpression	strdup ( n )		2662371	1					
ANR	2662394	Callee	strdup		2662371	0					
ANR	2662395	Identifier	strdup		2662371	0					
ANR	2662396	ArgumentList	n		2662371	1					
ANR	2662397	Argument	n		2662371	0					
ANR	2662398	Identifier	n		2662371	0					
ANR	2662399	Identifier	CondorFilePointer		2662371	1					
ANR	2662400	ParameterList	"CondorFile * f , CondorFileInfo * i , int fl , char * n"		2662371	2					
ANR	2662401	Parameter	CondorFile * f	116:20:3478:3490	2662371	0	True				
ANR	2662402	ParameterType	CondorFile *		2662371	0					
ANR	2662403	Identifier	f		2662371	1					
ANR	2662404	Parameter	CondorFileInfo * i	116:35:3493:3509	2662371	1	True				
ANR	2662405	ParameterType	CondorFileInfo *		2662371	0					
ANR	2662406	Identifier	i		2662371	1					
ANR	2662407	Parameter	int fl	116:54:3512:3517	2662371	2	True				
ANR	2662408	ParameterType	int		2662371	0					
ANR	2662409	Identifier	fl		2662371	1					
ANR	2662410	Parameter	char * n	116:62:3520:3526	2662371	3	True				
ANR	2662411	ParameterType	char *		2662371	0					
ANR	2662412	Identifier	n		2662371	1					
ANR	2662413	CFGEntryNode	ENTRY		2662371		True				
ANR	2662414	CFGExitNode	EXIT		2662371		True				
ANR	2662415	Symbol	logical_name		2662371						
ANR	2662416	Symbol	file		2662371						
ANR	2662417	Symbol	offset		2662371						
ANR	2662418	Symbol	f		2662371						
ANR	2662419	Symbol	fl		2662371						
ANR	2662420	Symbol	flags		2662371						
ANR	2662421	Symbol	i		2662371						
ANR	2662422	Symbol	strdup		2662371						
ANR	2662423	Symbol	n		2662371						
ANR	2662424	Symbol	info		2662371						
ANR	2662425	Function	~CondorFilePointer	123:1:3618:3666							
ANR	2662426	FunctionDef	~CondorFilePointer ()		2662425	1					
ANR	2662427	CompoundStatement		123:22:3639:3666	2662425	0					
ANR	2662428	ExpressionStatement	free ( logical_name )	124:2:3643:3663	2662425	0	True				
ANR	2662429	CallExpression	free ( logical_name )		2662425	0					
ANR	2662430	Callee	free		2662425	0					
ANR	2662431	Identifier	free		2662425	0					
ANR	2662432	ArgumentList	logical_name		2662425	1					
ANR	2662433	Argument	logical_name		2662425	0					
ANR	2662434	Identifier	logical_name		2662425	0					
ANR	2662435	Identifier	~CondorFilePointer		2662425	1					
ANR	2662436	ParameterList			2662425	2					
ANR	2662437	CFGEntryNode	ENTRY		2662425		True				
ANR	2662438	CFGExitNode	EXIT		2662425		True				
ANR	2662439	Symbol	logical_name		2662425						
ANR	2662440	DeclStmt									
ANR	2662441	Decl							CondorFile	CondorFile *	file
ANR	2662442	DeclStmt									
ANR	2662443	Decl							CondorFileInfo	CondorFileInfo *	info
ANR	2662444	DeclStmt									
ANR	2662445	Decl							int	int	flags
ANR	2662446	DeclStmt									
ANR	2662447	Decl							off_t	off_t	offset
ANR	2662448	DeclStmt									
ANR	2662449	Decl							char	char *	logical_name
ANR	2662450	Function	_condor_file_table_shutdown	143:0:4208:4311							
ANR	2662451	FunctionDef	_condor_file_table_shutdown ()		2662450	0					
ANR	2662452	CompoundStatement		144:0:4250:4311	2662450	0					
ANR	2662453	ExpressionStatement	fflush ( 0 )	145:1:4253:4262	2662450	0	True				
ANR	2662454	CallExpression	fflush ( 0 )		2662450	0					
ANR	2662455	Callee	fflush		2662450	0					
ANR	2662456	Identifier	fflush		2662450	0					
ANR	2662457	ArgumentList	0		2662450	1					
ANR	2662458	Argument	0		2662450	0					
ANR	2662459	PrimaryExpression	0		2662450	0					
ANR	2662460	ExpressionStatement	FileTab -> close_all ( )	146:1:4265:4285	2662450	1	True				
ANR	2662461	CallExpression	FileTab -> close_all ( )		2662450	0					
ANR	2662462	Callee	FileTab -> close_all		2662450	0					
ANR	2662463	PtrMemberAccess	FileTab -> close_all		2662450	0					
ANR	2662464	Identifier	FileTab		2662450	0					
ANR	2662465	Identifier	close_all		2662450	1					
ANR	2662466	ArgumentList			2662450	1					
ANR	2662467	ExpressionStatement	FileTab -> report_all ( )	147:1:4288:4309	2662450	2	True				
ANR	2662468	CallExpression	FileTab -> report_all ( )		2662450	0					
ANR	2662469	Callee	FileTab -> report_all		2662450	0					
ANR	2662470	PtrMemberAccess	FileTab -> report_all		2662450	0					
ANR	2662471	Identifier	FileTab		2662450	0					
ANR	2662472	Identifier	report_all		2662450	1					
ANR	2662473	ArgumentList			2662450	1					
ANR	2662474	ReturnType	static void		2662450	1					
ANR	2662475	Identifier	_condor_file_table_shutdown		2662450	2					
ANR	2662476	ParameterList			2662450	3					
ANR	2662477	CFGEntryNode	ENTRY		2662450		True				
ANR	2662478	CFGExitNode	EXIT		2662450		True				
ANR	2662479	Symbol	FileTab		2662450						
ANR	2662480	Function	CondorFileTable :: init	158:0:4608:5380							
ANR	2662481	FunctionDef	CondorFileTable :: init ()		2662480	0					
ANR	2662482	CompoundStatement		159:0:4637:5380	2662480	0					
ANR	2662483	ExpressionStatement	got_buffer_info = 0	160:1:4640:4659	2662480	0	True				
ANR	2662484	AssignmentExpression	got_buffer_info = 0		2662480	0		=			
ANR	2662485	Identifier	got_buffer_info		2662480	0					
ANR	2662486	PrimaryExpression	0		2662480	1					
ANR	2662487	ExpressionStatement	buffer_size = 0	161:1:4662:4677	2662480	1	True				
ANR	2662488	AssignmentExpression	buffer_size = 0		2662480	0		=			
ANR	2662489	Identifier	buffer_size		2662480	0					
ANR	2662490	PrimaryExpression	0		2662480	1					
ANR	2662491	ExpressionStatement	buffer_block_size = 0	162:1:4680:4701	2662480	2	True				
ANR	2662492	AssignmentExpression	buffer_block_size = 0		2662480	0		=			
ANR	2662493	Identifier	buffer_block_size		2662480	0					
ANR	2662494	PrimaryExpression	0		2662480	1					
ANR	2662495	ExpressionStatement	info_count = 0	163:1:4704:4718	2662480	3	True				
ANR	2662496	AssignmentExpression	info_count = 0		2662480	0		=			
ANR	2662497	Identifier	info_count		2662480	0					
ANR	2662498	PrimaryExpression	0		2662480	1					
ANR	2662499	ExpressionStatement	aggravate_mode = 0	164:1:4721:4739	2662480	4	True				
ANR	2662500	AssignmentExpression	aggravate_mode = 0		2662480	0		=			
ANR	2662501	Identifier	aggravate_mode		2662480	0					
ANR	2662502	PrimaryExpression	0		2662480	1					
ANR	2662503	IdentifierDeclStatement	int scm = SetSyscalls ( SYS_UNMAPPED | SYS_LOCAL ) ;	166:1:4743:4792	2662480	5	True				
ANR	2662504	IdentifierDecl	scm = SetSyscalls ( SYS_UNMAPPED | SYS_LOCAL )		2662480	0					
ANR	2662505	IdentifierDeclType	int		2662480	0					
ANR	2662506	Identifier	scm		2662480	1					
ANR	2662507	AssignmentExpression	scm = SetSyscalls ( SYS_UNMAPPED | SYS_LOCAL )		2662480	2		=			
ANR	2662508	Identifier	scm		2662480	0					
ANR	2662509	CallExpression	SetSyscalls ( SYS_UNMAPPED | SYS_LOCAL )		2662480	1					
ANR	2662510	Callee	SetSyscalls		2662480	0					
ANR	2662511	Identifier	SetSyscalls		2662480	0					
ANR	2662512	ArgumentList	SYS_UNMAPPED | SYS_LOCAL		2662480	1					
ANR	2662513	Argument	SYS_UNMAPPED | SYS_LOCAL		2662480	0					
ANR	2662514	InclusiveOrExpression	SYS_UNMAPPED | SYS_LOCAL		2662480	0		|			
ANR	2662515	Identifier	SYS_UNMAPPED		2662480	0					
ANR	2662516	Identifier	SYS_LOCAL		2662480	1					
ANR	2662517	ExpressionStatement	length = sysconf ( _SC_OPEN_MAX )	167:1:4795:4825	2662480	6	True				
ANR	2662518	AssignmentExpression	length = sysconf ( _SC_OPEN_MAX )		2662480	0		=			
ANR	2662519	Identifier	length		2662480	0					
ANR	2662520	CallExpression	sysconf ( _SC_OPEN_MAX )		2662480	1					
ANR	2662521	Callee	sysconf		2662480	0					
ANR	2662522	Identifier	sysconf		2662480	0					
ANR	2662523	ArgumentList	_SC_OPEN_MAX		2662480	1					
ANR	2662524	Argument	_SC_OPEN_MAX		2662480	0					
ANR	2662525	Identifier	_SC_OPEN_MAX		2662480	0					
ANR	2662526	ExpressionStatement	SetSyscalls ( scm )	168:1:4828:4844	2662480	7	True				
ANR	2662527	CallExpression	SetSyscalls ( scm )		2662480	0					
ANR	2662528	Callee	SetSyscalls		2662480	0					
ANR	2662529	Identifier	SetSyscalls		2662480	0					
ANR	2662530	ArgumentList	scm		2662480	1					
ANR	2662531	Argument	scm		2662480	0					
ANR	2662532	Identifier	scm		2662480	0					
ANR	2662533	Statement	pointers	170:1:4848:4855	2662480	8	True				
ANR	2662534	Statement	=	170:10:4857:4857	2662480	9	True				
ANR	2662535	Statement	new	170:12:4859:4861	2662480	10	True				
ANR	2662536	Statement	CondorFilePointer	170:16:4863:4879	2662480	11	True				
ANR	2662537	Statement	*	170:34:4881:4881	2662480	12	True				
ANR	2662538	Statement	[	170:35:4882:4882	2662480	13	True				
ANR	2662539	Statement	length	170:36:4883:4888	2662480	14	True				
ANR	2662540	Statement	]	170:42:4889:4889	2662480	15	True				
ANR	2662541	ExpressionStatement		170:43:4890:4890	2662480	16	True				
ANR	2662542	IfStatement	if ( ! pointers )		2662480	17					
ANR	2662543	Condition	! pointers	171:4:4896:4904	2662480	0	True				
ANR	2662544	UnaryOperationExpression	! pointers		2662480	0					
ANR	2662545	UnaryOperator	!		2662480	0					
ANR	2662546	Identifier	pointers		2662480	1					
ANR	2662547	CompoundStatement		13:15:269:269	2662480	1					
ANR	2662548	ExpressionStatement	"_condor_error_retry ( ""Out of memory!\\n"" )"	172:2:4911:4950	2662480	0	True				
ANR	2662549	CallExpression	"_condor_error_retry ( ""Out of memory!\\n"" )"		2662480	0					
ANR	2662550	Callee	_condor_error_retry		2662480	0					
ANR	2662551	Identifier	_condor_error_retry		2662480	0					
ANR	2662552	ArgumentList	"""Out of memory!\\n"""		2662480	1					
ANR	2662553	Argument	"""Out of memory!\\n"""		2662480	0					
ANR	2662554	PrimaryExpression	"""Out of memory!\\n"""		2662480	0					
ANR	2662555	ForStatement	for ( int i = 0 ; i < length ; i ++ )		2662480	18					
ANR	2662556	ForInit	int i = 0 ;	175:6:4962:4969	2662480	0	True				
ANR	2662557	IdentifierDeclStatement	int i = 0 ;		2662480	0					
ANR	2662558	IdentifierDecl	i = 0		2662480	0					
ANR	2662559	IdentifierDeclType	int		2662480	0					
ANR	2662560	Identifier	i		2662480	1					
ANR	2662561	AssignmentExpression	i = 0		2662480	2		=			
ANR	2662562	Identifier	i		2662480	0					
ANR	2662563	PrimaryExpression	0		2662480	1					
ANR	2662564	Condition	i < length	175:15:4971:4978	2662480	1	True				
ANR	2662565	RelationalExpression	i < length		2662480	0		<			
ANR	2662566	Identifier	i		2662480	0					
ANR	2662567	Identifier	length		2662480	1					
ANR	2662568	PostIncDecOperationExpression	i ++	175:25:4981:4983	2662480	2	True				
ANR	2662569	Identifier	i		2662480	0					
ANR	2662570	IncDec	++		2662480	1					
ANR	2662571	CompoundStatement		17:31:349:349	2662480	3					
ANR	2662572	ExpressionStatement	pointers [ i ] = 0	176:2:4991:5004	2662480	0	True				
ANR	2662573	AssignmentExpression	pointers [ i ] = 0		2662480	0		=			
ANR	2662574	ArrayIndexing	pointers [ i ]		2662480	0					
ANR	2662575	Identifier	pointers		2662480	0					
ANR	2662576	Identifier	i		2662480	1					
ANR	2662577	PrimaryExpression	0		2662480	1					
ANR	2662578	ExpressionStatement	info_head = 0	179:1:5011:5024	2662480	19	True				
ANR	2662579	AssignmentExpression	info_head = 0		2662480	0		=			
ANR	2662580	Identifier	info_head		2662480	0					
ANR	2662581	PrimaryExpression	0		2662480	1					
ANR	2662582	ExpressionStatement	"pointers [ 0 ] = new CondorFilePointer ( 0 , make_info ( ""default stdin"" ) , O_RDONLY , ""default stdin"" )"	181:1:5028:5118	2662480	20	True				
ANR	2662583	AssignmentExpression	"pointers [ 0 ] = new CondorFilePointer ( 0 , make_info ( ""default stdin"" ) , O_RDONLY , ""default stdin"" )"		2662480	0		=			
ANR	2662584	ArrayIndexing	pointers [ 0 ]		2662480	0					
ANR	2662585	Identifier	pointers		2662480	0					
ANR	2662586	PrimaryExpression	0		2662480	1					
ANR	2662587	Expression	"0 , make_info ( ""default stdin"" ) , O_RDONLY , ""default stdin"""		2662480	1					
ANR	2662588	PrimaryExpression	0		2662480	0					
ANR	2662589	Expression	"make_info ( ""default stdin"" ) , O_RDONLY , ""default stdin"""		2662480	1					
ANR	2662590	CallExpression	"make_info ( ""default stdin"" )"		2662480	0					
ANR	2662591	Callee	make_info		2662480	0					
ANR	2662592	Identifier	make_info		2662480	0					
ANR	2662593	ArgumentList	"""default stdin"""		2662480	1					
ANR	2662594	Argument	"""default stdin"""		2662480	0					
ANR	2662595	PrimaryExpression	"""default stdin"""		2662480	0					
ANR	2662596	Expression	"O_RDONLY , ""default stdin"""		2662480	1					
ANR	2662597	Identifier	O_RDONLY		2662480	0					
ANR	2662598	PrimaryExpression	"""default stdin"""		2662480	1					
ANR	2662599	ExpressionStatement	"pointers [ 1 ] = new CondorFilePointer ( 0 , make_info ( ""default stdout"" ) , O_WRONLY , ""default stdout"" )"	182:1:5121:5213	2662480	21	True				
ANR	2662600	AssignmentExpression	"pointers [ 1 ] = new CondorFilePointer ( 0 , make_info ( ""default stdout"" ) , O_WRONLY , ""default stdout"" )"		2662480	0		=			
ANR	2662601	ArrayIndexing	pointers [ 1 ]		2662480	0					
ANR	2662602	Identifier	pointers		2662480	0					
ANR	2662603	PrimaryExpression	1		2662480	1					
ANR	2662604	Expression	"0 , make_info ( ""default stdout"" ) , O_WRONLY , ""default stdout"""		2662480	1					
ANR	2662605	PrimaryExpression	0		2662480	0					
ANR	2662606	Expression	"make_info ( ""default stdout"" ) , O_WRONLY , ""default stdout"""		2662480	1					
ANR	2662607	CallExpression	"make_info ( ""default stdout"" )"		2662480	0					
ANR	2662608	Callee	make_info		2662480	0					
ANR	2662609	Identifier	make_info		2662480	0					
ANR	2662610	ArgumentList	"""default stdout"""		2662480	1					
ANR	2662611	Argument	"""default stdout"""		2662480	0					
ANR	2662612	PrimaryExpression	"""default stdout"""		2662480	0					
ANR	2662613	Expression	"O_WRONLY , ""default stdout"""		2662480	1					
ANR	2662614	Identifier	O_WRONLY		2662480	0					
ANR	2662615	PrimaryExpression	"""default stdout"""		2662480	1					
ANR	2662616	ExpressionStatement	"pointers [ 2 ] = new CondorFilePointer ( 0 , make_info ( ""default stderr"" ) , O_WRONLY , ""default stderr"" )"	183:1:5216:5308	2662480	22	True				
ANR	2662617	AssignmentExpression	"pointers [ 2 ] = new CondorFilePointer ( 0 , make_info ( ""default stderr"" ) , O_WRONLY , ""default stderr"" )"		2662480	0		=			
ANR	2662618	ArrayIndexing	pointers [ 2 ]		2662480	0					
ANR	2662619	Identifier	pointers		2662480	0					
ANR	2662620	PrimaryExpression	2		2662480	1					
ANR	2662621	Expression	"0 , make_info ( ""default stderr"" ) , O_WRONLY , ""default stderr"""		2662480	1					
ANR	2662622	PrimaryExpression	0		2662480	0					
ANR	2662623	Expression	"make_info ( ""default stderr"" ) , O_WRONLY , ""default stderr"""		2662480	1					
ANR	2662624	CallExpression	"make_info ( ""default stderr"" )"		2662480	0					
ANR	2662625	Callee	make_info		2662480	0					
ANR	2662626	Identifier	make_info		2662480	0					
ANR	2662627	ArgumentList	"""default stderr"""		2662480	1					
ANR	2662628	Argument	"""default stderr"""		2662480	0					
ANR	2662629	PrimaryExpression	"""default stderr"""		2662480	0					
ANR	2662630	Expression	"O_WRONLY , ""default stderr"""		2662480	1					
ANR	2662631	Identifier	O_WRONLY		2662480	0					
ANR	2662632	PrimaryExpression	"""default stderr"""		2662480	1					
ANR	2662633	ExpressionStatement	"working_dir = strdup ( ""."" )"	185:1:5312:5337	2662480	23	True				
ANR	2662634	AssignmentExpression	"working_dir = strdup ( ""."" )"		2662480	0		=			
ANR	2662635	Identifier	working_dir		2662480	0					
ANR	2662636	CallExpression	"strdup ( ""."" )"		2662480	1					
ANR	2662637	Callee	strdup		2662480	0					
ANR	2662638	Identifier	strdup		2662480	0					
ANR	2662639	ArgumentList	"""."""		2662480	1					
ANR	2662640	Argument	"""."""		2662480	0					
ANR	2662641	PrimaryExpression	"""."""		2662480	0					
ANR	2662642	ExpressionStatement	atexit ( _condor_file_table_shutdown )	187:1:5341:5378	2662480	24	True				
ANR	2662643	CallExpression	atexit ( _condor_file_table_shutdown )		2662480	0					
ANR	2662644	Callee	atexit		2662480	0					
ANR	2662645	Identifier	atexit		2662480	0					
ANR	2662646	ArgumentList	_condor_file_table_shutdown		2662480	1					
ANR	2662647	Argument	_condor_file_table_shutdown		2662480	0					
ANR	2662648	Identifier	_condor_file_table_shutdown		2662480	0					
ANR	2662649	ReturnType	void		2662480	1					
ANR	2662650	Identifier	CondorFileTable :: init		2662480	2					
ANR	2662651	ParameterList			2662480	3					
ANR	2662652	CFGEntryNode	ENTRY		2662480		True				
ANR	2662653	CFGExitNode	EXIT		2662480		True				
ANR	2662654	Symbol	buffer_block_size		2662480						
ANR	2662655	Symbol	SYS_UNMAPPED		2662480						
ANR	2662656	Symbol	working_dir		2662480						
ANR	2662657	Symbol	buffer_size		2662480						
ANR	2662658	Symbol	_condor_file_table_shutdown		2662480						
ANR	2662659	Symbol	info_count		2662480						
ANR	2662660	Symbol	length		2662480						
ANR	2662661	Symbol	i		2662480						
ANR	2662662	Symbol	_SC_OPEN_MAX		2662480						
ANR	2662663	Symbol	make_info		2662480						
ANR	2662664	Symbol	aggravate_mode		2662480						
ANR	2662665	Symbol	* pointers		2662480						
ANR	2662666	Symbol	info_head		2662480						
ANR	2662667	Symbol	* i		2662480						
ANR	2662668	Symbol	O_RDONLY		2662480						
ANR	2662669	Symbol	SYS_LOCAL		2662480						
ANR	2662670	Symbol	SetSyscalls		2662480						
ANR	2662671	Symbol	got_buffer_info		2662480						
ANR	2662672	Symbol	sysconf		2662480						
ANR	2662673	Symbol	strdup		2662480						
ANR	2662674	Symbol	scm		2662480						
ANR	2662675	Symbol	O_WRONLY		2662480						
ANR	2662676	Symbol	pointers		2662480						
ANR	2662677	Function	CondorFileTable :: flush	190:0:5383:5543							
ANR	2662678	FunctionDef	CondorFileTable :: flush ()		2662677	0					
ANR	2662679	CompoundStatement		191:0:5413:5543	2662677	0					
ANR	2662680	ForStatement	for ( int i = 0 ; i < length ; i ++ )		2662677	0					
ANR	2662681	ForInit	int i = 0 ;	192:6:5421:5428	2662677	0	True				
ANR	2662682	IdentifierDeclStatement	int i = 0 ;		2662677	0					
ANR	2662683	IdentifierDecl	i = 0		2662677	0					
ANR	2662684	IdentifierDeclType	int		2662677	0					
ANR	2662685	Identifier	i		2662677	1					
ANR	2662686	AssignmentExpression	i = 0		2662677	2		=			
ANR	2662687	Identifier	i		2662677	0					
ANR	2662688	PrimaryExpression	0		2662677	1					
ANR	2662689	Condition	i < length	192:15:5430:5437	2662677	1	True				
ANR	2662690	RelationalExpression	i < length		2662677	0		<			
ANR	2662691	Identifier	i		2662677	0					
ANR	2662692	Identifier	length		2662677	1					
ANR	2662693	PostIncDecOperationExpression	i ++	192:25:5440:5442	2662677	2	True				
ANR	2662694	Identifier	i		2662677	0					
ANR	2662695	IncDec	++		2662677	1					
ANR	2662696	CompoundStatement		2:31:32:32	2662677	3					
ANR	2662697	IfStatement	if ( pointers [ i ] )		2662677	0					
ANR	2662698	Condition	pointers [ i ]	193:6:5454:5464	2662677	0	True				
ANR	2662699	ArrayIndexing	pointers [ i ]		2662677	0					
ANR	2662700	Identifier	pointers		2662677	0					
ANR	2662701	Identifier	i		2662677	1					
ANR	2662702	CompoundStatement		3:20:54:54	2662677	1					
ANR	2662703	IfStatement	if ( pointers [ i ] -> file )		2662677	0					
ANR	2662704	Condition	pointers [ i ] -> file	194:7:5477:5493	2662677	0	True				
ANR	2662705	PtrMemberAccess	pointers [ i ] -> file		2662677	0					
ANR	2662706	ArrayIndexing	pointers [ i ]		2662677	0					
ANR	2662707	Identifier	pointers		2662677	0					
ANR	2662708	Identifier	i		2662677	1					
ANR	2662709	Identifier	file		2662677	1					
ANR	2662710	CompoundStatement		4:27:83:83	2662677	1					
ANR	2662711	ExpressionStatement	pointers [ i ] -> file -> flush ( )	195:4:5503:5529	2662677	0	True				
ANR	2662712	CallExpression	pointers [ i ] -> file -> flush ( )		2662677	0					
ANR	2662713	Callee	pointers [ i ] -> file -> flush		2662677	0					
ANR	2662714	PtrMemberAccess	pointers [ i ] -> file -> flush		2662677	0					
ANR	2662715	PtrMemberAccess	pointers [ i ] -> file		2662677	0					
ANR	2662716	ArrayIndexing	pointers [ i ]		2662677	0					
ANR	2662717	Identifier	pointers		2662677	0					
ANR	2662718	Identifier	i		2662677	1					
ANR	2662719	Identifier	file		2662677	1					
ANR	2662720	Identifier	flush		2662677	1					
ANR	2662721	ArgumentList			2662677	1					
ANR	2662722	ReturnType	void		2662677	1					
ANR	2662723	Identifier	CondorFileTable :: flush		2662677	2					
ANR	2662724	ParameterList			2662677	3					
ANR	2662725	CFGEntryNode	ENTRY		2662677		True				
ANR	2662726	CFGExitNode	EXIT		2662677		True				
ANR	2662727	Symbol	* * i		2662677						
ANR	2662728	Symbol	* i		2662677						
ANR	2662729	Symbol	pointers [ i ] -> file		2662677						
ANR	2662730	Symbol	length		2662677						
ANR	2662731	Symbol	i		2662677						
ANR	2662732	Symbol	* * pointers		2662677						
ANR	2662733	Symbol	pointers		2662677						
ANR	2662734	Symbol	* pointers		2662677						
ANR	2662735	Function	CondorFileTable :: report_all	201:0:5546:5658							
ANR	2662736	FunctionDef	CondorFileTable :: report_all ()		2662735	0					
ANR	2662737	CompoundStatement		202:0:5581:5658	2662735	0					
ANR	2662738	IdentifierDeclStatement	CondorFileInfo * i ;	203:1:5584:5601	2662735	0	True				
ANR	2662739	IdentifierDecl	* i		2662735	0					
ANR	2662740	IdentifierDeclType	CondorFileInfo *		2662735	0					
ANR	2662741	Identifier	i		2662735	1					
ANR	2662742	ForStatement	for ( i = info_head ; i ; i = i -> next )		2662735	1					
ANR	2662743	ForInit	i = info_head ;	205:6:5610:5621	2662735	0	True				
ANR	2662744	AssignmentExpression	i = info_head		2662735	0		=			
ANR	2662745	Identifier	i		2662735	0					
ANR	2662746	Identifier	info_head		2662735	1					
ANR	2662747	Condition	i	205:19:5623:5623	2662735	1	True				
ANR	2662748	Identifier	i		2662735	0					
ANR	2662749	AssignmentExpression	i = i -> next	205:22:5626:5634	2662735	2	True	=			
ANR	2662750	Identifier	i		2662735	0					
ANR	2662751	PtrMemberAccess	i -> next		2662735	1					
ANR	2662752	Identifier	i		2662735	0					
ANR	2662753	Identifier	next		2662735	1					
ANR	2662754	CompoundStatement		4:34:56:56	2662735	3					
ANR	2662755	ExpressionStatement	i -> report ( )	206:2:5642:5653	2662735	0	True				
ANR	2662756	CallExpression	i -> report ( )		2662735	0					
ANR	2662757	Callee	i -> report		2662735	0					
ANR	2662758	PtrMemberAccess	i -> report		2662735	0					
ANR	2662759	Identifier	i		2662735	0					
ANR	2662760	Identifier	report		2662735	1					
ANR	2662761	ArgumentList			2662735	1					
ANR	2662762	ReturnType	void		2662735	1					
ANR	2662763	Identifier	CondorFileTable :: report_all		2662735	2					
ANR	2662764	ParameterList			2662735	3					
ANR	2662765	CFGEntryNode	ENTRY		2662735		True				
ANR	2662766	CFGExitNode	EXIT		2662735		True				
ANR	2662767	Symbol	info_head		2662735						
ANR	2662768	Symbol	* i		2662735						
ANR	2662769	Symbol	i		2662735						
ANR	2662770	Symbol	i -> next		2662735						
ANR	2662771	Function	CondorFileTable :: close_all	210:0:5661:5745							
ANR	2662772	FunctionDef	CondorFileTable :: close_all ()		2662771	0					
ANR	2662773	CompoundStatement		211:0:5695:5745	2662771	0					
ANR	2662774	ForStatement	for ( int i = 0 ; i < length ; i ++ )		2662771	0					
ANR	2662775	ForInit	int i = 0 ;	212:6:5703:5710	2662771	0	True				
ANR	2662776	IdentifierDeclStatement	int i = 0 ;		2662771	0					
ANR	2662777	IdentifierDecl	i = 0		2662771	0					
ANR	2662778	IdentifierDeclType	int		2662771	0					
ANR	2662779	Identifier	i		2662771	1					
ANR	2662780	AssignmentExpression	i = 0		2662771	2		=			
ANR	2662781	Identifier	i		2662771	0					
ANR	2662782	PrimaryExpression	0		2662771	1					
ANR	2662783	Condition	i < length	212:15:5712:5719	2662771	1	True				
ANR	2662784	RelationalExpression	i < length		2662771	0		<			
ANR	2662785	Identifier	i		2662771	0					
ANR	2662786	Identifier	length		2662771	1					
ANR	2662787	PostIncDecOperationExpression	i ++	212:25:5722:5724	2662771	2	True				
ANR	2662788	Identifier	i		2662771	0					
ANR	2662789	IncDec	++		2662771	1					
ANR	2662790	CompoundStatement		2:31:32:32	2662771	3					
ANR	2662791	ExpressionStatement	close ( i )	213:2:5732:5740	2662771	0	True				
ANR	2662792	CallExpression	close ( i )		2662771	0					
ANR	2662793	Callee	close		2662771	0					
ANR	2662794	Identifier	close		2662771	0					
ANR	2662795	ArgumentList	i		2662771	1					
ANR	2662796	Argument	i		2662771	0					
ANR	2662797	Identifier	i		2662771	0					
ANR	2662798	ReturnType	void		2662771	1					
ANR	2662799	Identifier	CondorFileTable :: close_all		2662771	2					
ANR	2662800	ParameterList			2662771	3					
ANR	2662801	CFGEntryNode	ENTRY		2662771		True				
ANR	2662802	CFGExitNode	EXIT		2662771		True				
ANR	2662803	Symbol	length		2662771						
ANR	2662804	Symbol	i		2662771						
ANR	2662805	Function	CondorFileTable :: set_aggravate_mode	217:0:5748:5831							
ANR	2662806	FunctionDef	CondorFileTable :: set_aggravate_mode (int on_off)		2662805	0					
ANR	2662807	CompoundStatement		218:0:5803:5831	2662805	0					
ANR	2662808	ExpressionStatement	aggravate_mode = on_off	219:1:5806:5829	2662805	0	True				
ANR	2662809	AssignmentExpression	aggravate_mode = on_off		2662805	0		=			
ANR	2662810	Identifier	aggravate_mode		2662805	0					
ANR	2662811	Identifier	on_off		2662805	1					
ANR	2662812	ReturnType	void		2662805	1					
ANR	2662813	Identifier	CondorFileTable :: set_aggravate_mode		2662805	2					
ANR	2662814	ParameterList	int on_off		2662805	3					
ANR	2662815	Parameter	int on_off	217:42:5790:5799	2662805	0	True				
ANR	2662816	ParameterType	int		2662805	0					
ANR	2662817	Identifier	on_off		2662805	1					
ANR	2662818	CFGEntryNode	ENTRY		2662805		True				
ANR	2662819	CFGExitNode	EXIT		2662805		True				
ANR	2662820	Symbol	on_off		2662805						
ANR	2662821	Symbol	aggravate_mode		2662805						
ANR	2662822	Function	CondorFileTable :: dump	222:0:5834:6582							
ANR	2662823	FunctionDef	CondorFileTable :: dump ()		2662822	0					
ANR	2662824	CompoundStatement		223:0:5863:6582	2662822	0					
ANR	2662825	IdentifierDeclStatement	CondorFilePointer * p ;	224:1:5866:5886	2662822	0	True				
ANR	2662826	IdentifierDecl	* p		2662822	0					
ANR	2662827	IdentifierDeclType	CondorFilePointer *		2662822	0					
ANR	2662828	Identifier	p		2662822	1					
ANR	2662829	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\nOPEN FILE TABLE:\\n"" )"	226:1:5890:5930	2662822	1	True				
ANR	2662830	CallExpression	"dprintf ( D_ALWAYS , ""\\nOPEN FILE TABLE:\\n"" )"		2662822	0					
ANR	2662831	Callee	dprintf		2662822	0					
ANR	2662832	Identifier	dprintf		2662822	0					
ANR	2662833	ArgumentList	D_ALWAYS		2662822	1					
ANR	2662834	Argument	D_ALWAYS		2662822	0					
ANR	2662835	Identifier	D_ALWAYS		2662822	0					
ANR	2662836	Argument	"""\\nOPEN FILE TABLE:\\n"""		2662822	1					
ANR	2662837	PrimaryExpression	"""\\nOPEN FILE TABLE:\\n"""		2662822	0					
ANR	2662838	ForStatement	for ( int j = 0 ; j < length ; j ++ )		2662822	2					
ANR	2662839	ForInit	int j = 0 ;	228:6:5939:5946	2662822	0	True				
ANR	2662840	IdentifierDeclStatement	int j = 0 ;		2662822	0					
ANR	2662841	IdentifierDecl	j = 0		2662822	0					
ANR	2662842	IdentifierDeclType	int		2662822	0					
ANR	2662843	Identifier	j		2662822	1					
ANR	2662844	AssignmentExpression	j = 0		2662822	2		=			
ANR	2662845	Identifier	j		2662822	0					
ANR	2662846	PrimaryExpression	0		2662822	1					
ANR	2662847	Condition	j < length	228:15:5948:5955	2662822	1	True				
ANR	2662848	RelationalExpression	j < length		2662822	0		<			
ANR	2662849	Identifier	j		2662822	0					
ANR	2662850	Identifier	length		2662822	1					
ANR	2662851	PostIncDecOperationExpression	j ++	228:25:5958:5960	2662822	2	True				
ANR	2662852	Identifier	j		2662822	0					
ANR	2662853	IncDec	++		2662822	1					
ANR	2662854	CompoundStatement		6:31:100:100	2662822	3					
ANR	2662855	ExpressionStatement	p = pointers [ j ]	230:2:5969:5984	2662822	0	True				
ANR	2662856	AssignmentExpression	p = pointers [ j ]		2662822	0		=			
ANR	2662857	Identifier	p		2662822	0					
ANR	2662858	ArrayIndexing	pointers [ j ]		2662822	1					
ANR	2662859	Identifier	pointers		2662822	0					
ANR	2662860	Identifier	j		2662822	1					
ANR	2662861	IfStatement	if ( p )		2662822	1					
ANR	2662862	Condition	p	231:6:5992:5992	2662822	0	True				
ANR	2662863	Identifier	p		2662822	0					
ANR	2662864	CompoundStatement		9:10:132:132	2662822	1					
ANR	2662865	ExpressionStatement	"dprintf ( D_ALWAYS , ""fd %d\\n"" , j )"	232:3:6001:6030	2662822	0	True				
ANR	2662866	CallExpression	"dprintf ( D_ALWAYS , ""fd %d\\n"" , j )"		2662822	0					
ANR	2662867	Callee	dprintf		2662822	0					
ANR	2662868	Identifier	dprintf		2662822	0					
ANR	2662869	ArgumentList	D_ALWAYS		2662822	1					
ANR	2662870	Argument	D_ALWAYS		2662822	0					
ANR	2662871	Identifier	D_ALWAYS		2662822	0					
ANR	2662872	Argument	"""fd %d\\n"""		2662822	1					
ANR	2662873	PrimaryExpression	"""fd %d\\n"""		2662822	0					
ANR	2662874	Argument	j		2662822	2					
ANR	2662875	Identifier	j		2662822	0					
ANR	2662876	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\tlogical name: %s\\n"" , p -> logical_name )"	233:3:6035:6091	2662822	1	True				
ANR	2662877	CallExpression	"dprintf ( D_ALWAYS , ""\\tlogical name: %s\\n"" , p -> logical_name )"		2662822	0					
ANR	2662878	Callee	dprintf		2662822	0					
ANR	2662879	Identifier	dprintf		2662822	0					
ANR	2662880	ArgumentList	D_ALWAYS		2662822	1					
ANR	2662881	Argument	D_ALWAYS		2662822	0					
ANR	2662882	Identifier	D_ALWAYS		2662822	0					
ANR	2662883	Argument	"""\\tlogical name: %s\\n"""		2662822	1					
ANR	2662884	PrimaryExpression	"""\\tlogical name: %s\\n"""		2662822	0					
ANR	2662885	Argument	p -> logical_name		2662822	2					
ANR	2662886	PtrMemberAccess	p -> logical_name		2662822	0					
ANR	2662887	Identifier	p		2662822	0					
ANR	2662888	Identifier	logical_name		2662822	1					
ANR	2662889	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\toffset:       %d\\n"" , p -> offset )"	234:3:6096:6146	2662822	2	True				
ANR	2662890	CallExpression	"dprintf ( D_ALWAYS , ""\\toffset:       %d\\n"" , p -> offset )"		2662822	0					
ANR	2662891	Callee	dprintf		2662822	0					
ANR	2662892	Identifier	dprintf		2662822	0					
ANR	2662893	ArgumentList	D_ALWAYS		2662822	1					
ANR	2662894	Argument	D_ALWAYS		2662822	0					
ANR	2662895	Identifier	D_ALWAYS		2662822	0					
ANR	2662896	Argument	"""\\toffset:       %d\\n"""		2662822	1					
ANR	2662897	PrimaryExpression	"""\\toffset:       %d\\n"""		2662822	0					
ANR	2662898	Argument	p -> offset		2662822	2					
ANR	2662899	PtrMemberAccess	p -> offset		2662822	0					
ANR	2662900	Identifier	p		2662822	0					
ANR	2662901	Identifier	offset		2662822	1					
ANR	2662902	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\tdups:         %d\\n"" , count_pointer_uses ( p ) )"	235:3:6151:6213	2662822	3	True				
ANR	2662903	CallExpression	"dprintf ( D_ALWAYS , ""\\tdups:         %d\\n"" , count_pointer_uses ( p ) )"		2662822	0					
ANR	2662904	Callee	dprintf		2662822	0					
ANR	2662905	Identifier	dprintf		2662822	0					
ANR	2662906	ArgumentList	D_ALWAYS		2662822	1					
ANR	2662907	Argument	D_ALWAYS		2662822	0					
ANR	2662908	Identifier	D_ALWAYS		2662822	0					
ANR	2662909	Argument	"""\\tdups:         %d\\n"""		2662822	1					
ANR	2662910	PrimaryExpression	"""\\tdups:         %d\\n"""		2662822	0					
ANR	2662911	Argument	count_pointer_uses ( p )		2662822	2					
ANR	2662912	CallExpression	count_pointer_uses ( p )		2662822	0					
ANR	2662913	Callee	count_pointer_uses		2662822	0					
ANR	2662914	Identifier	count_pointer_uses		2662822	0					
ANR	2662915	ArgumentList	p		2662822	1					
ANR	2662916	Argument	p		2662822	0					
ANR	2662917	Identifier	p		2662822	0					
ANR	2662918	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\topen flags:   0x%x\\n"" , p -> flags )"	236:3:6218:6269	2662822	4	True				
ANR	2662919	CallExpression	"dprintf ( D_ALWAYS , ""\\topen flags:   0x%x\\n"" , p -> flags )"		2662822	0					
ANR	2662920	Callee	dprintf		2662822	0					
ANR	2662921	Identifier	dprintf		2662822	0					
ANR	2662922	ArgumentList	D_ALWAYS		2662822	1					
ANR	2662923	Argument	D_ALWAYS		2662822	0					
ANR	2662924	Identifier	D_ALWAYS		2662822	0					
ANR	2662925	Argument	"""\\topen flags:   0x%x\\n"""		2662822	1					
ANR	2662926	PrimaryExpression	"""\\topen flags:   0x%x\\n"""		2662822	0					
ANR	2662927	Argument	p -> flags		2662822	2					
ANR	2662928	PtrMemberAccess	p -> flags		2662822	0					
ANR	2662929	Identifier	p		2662822	0					
ANR	2662930	Identifier	flags		2662822	1					
ANR	2662931	IfStatement	if ( p -> file )		2662822	5					
ANR	2662932	Condition	p -> file	237:7:6278:6284	2662822	0	True				
ANR	2662933	PtrMemberAccess	p -> file		2662822	0					
ANR	2662934	Identifier	p		2662822	0					
ANR	2662935	Identifier	file		2662822	1					
ANR	2662936	CompoundStatement		15:17:424:424	2662822	1					
ANR	2662937	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\turl:          %s\\n"" , p -> file -> get_url ( ) )"	238:4:6294:6353	2662822	0	True				
ANR	2662938	CallExpression	"dprintf ( D_ALWAYS , ""\\turl:          %s\\n"" , p -> file -> get_url ( ) )"		2662822	0					
ANR	2662939	Callee	dprintf		2662822	0					
ANR	2662940	Identifier	dprintf		2662822	0					
ANR	2662941	ArgumentList	D_ALWAYS		2662822	1					
ANR	2662942	Argument	D_ALWAYS		2662822	0					
ANR	2662943	Identifier	D_ALWAYS		2662822	0					
ANR	2662944	Argument	"""\\turl:          %s\\n"""		2662822	1					
ANR	2662945	PrimaryExpression	"""\\turl:          %s\\n"""		2662822	0					
ANR	2662946	Argument	p -> file -> get_url ( )		2662822	2					
ANR	2662947	CallExpression	p -> file -> get_url ( )		2662822	0					
ANR	2662948	Callee	p -> file -> get_url		2662822	0					
ANR	2662949	PtrMemberAccess	p -> file -> get_url		2662822	0					
ANR	2662950	PtrMemberAccess	p -> file		2662822	0					
ANR	2662951	Identifier	p		2662822	0					
ANR	2662952	Identifier	file		2662822	1					
ANR	2662953	Identifier	get_url		2662822	1					
ANR	2662954	ArgumentList			2662822	1					
ANR	2662955	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\tsize:         %ld\\n"" , ( long ) p -> file -> get_size ( ) )"	239:4:6359:6426	2662822	1	True				
ANR	2662956	CallExpression	"dprintf ( D_ALWAYS , ""\\tsize:         %ld\\n"" , ( long ) p -> file -> get_size ( ) )"		2662822	0					
ANR	2662957	Callee	dprintf		2662822	0					
ANR	2662958	Identifier	dprintf		2662822	0					
ANR	2662959	ArgumentList	D_ALWAYS		2662822	1					
ANR	2662960	Argument	D_ALWAYS		2662822	0					
ANR	2662961	Identifier	D_ALWAYS		2662822	0					
ANR	2662962	Argument	"""\\tsize:         %ld\\n"""		2662822	1					
ANR	2662963	PrimaryExpression	"""\\tsize:         %ld\\n"""		2662822	0					
ANR	2662964	Argument	( long ) p -> file -> get_size ( )		2662822	2					
ANR	2662965	CastExpression	( long ) p -> file -> get_size ( )		2662822	0					
ANR	2662966	CastTarget	long		2662822	0					
ANR	2662967	CallExpression	p -> file -> get_size ( )		2662822	1					
ANR	2662968	Callee	p -> file -> get_size		2662822	0					
ANR	2662969	PtrMemberAccess	p -> file -> get_size		2662822	0					
ANR	2662970	PtrMemberAccess	p -> file		2662822	0					
ANR	2662971	Identifier	p		2662822	0					
ANR	2662972	Identifier	file		2662822	1					
ANR	2662973	Identifier	get_size		2662822	1					
ANR	2662974	ArgumentList			2662822	1					
ANR	2662975	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\topens:        %d\\n"" , count_file_uses ( p -> file ) )"	240:4:6432:6497	2662822	2	True				
ANR	2662976	CallExpression	"dprintf ( D_ALWAYS , ""\\topens:        %d\\n"" , count_file_uses ( p -> file ) )"		2662822	0					
ANR	2662977	Callee	dprintf		2662822	0					
ANR	2662978	Identifier	dprintf		2662822	0					
ANR	2662979	ArgumentList	D_ALWAYS		2662822	1					
ANR	2662980	Argument	D_ALWAYS		2662822	0					
ANR	2662981	Identifier	D_ALWAYS		2662822	0					
ANR	2662982	Argument	"""\\topens:        %d\\n"""		2662822	1					
ANR	2662983	PrimaryExpression	"""\\topens:        %d\\n"""		2662822	0					
ANR	2662984	Argument	count_file_uses ( p -> file )		2662822	2					
ANR	2662985	CallExpression	count_file_uses ( p -> file )		2662822	0					
ANR	2662986	Callee	count_file_uses		2662822	0					
ANR	2662987	Identifier	count_file_uses		2662822	0					
ANR	2662988	ArgumentList	p -> file		2662822	1					
ANR	2662989	Argument	p -> file		2662822	0					
ANR	2662990	PtrMemberAccess	p -> file		2662822	0					
ANR	2662991	Identifier	p		2662822	0					
ANR	2662992	Identifier	file		2662822	1					
ANR	2662993	ElseStatement	else		2662822	0					
ANR	2662994	CompoundStatement		19:10:645:645	2662822	0					
ANR	2662995	ExpressionStatement	"dprintf ( D_ALWAYS , ""\\tnot currently bound to a url.\\n"" )"	242:4:6515:6568	2662822	0	True				
ANR	2662996	CallExpression	"dprintf ( D_ALWAYS , ""\\tnot currently bound to a url.\\n"" )"		2662822	0					
ANR	2662997	Callee	dprintf		2662822	0					
ANR	2662998	Identifier	dprintf		2662822	0					
ANR	2662999	ArgumentList	D_ALWAYS		2662822	1					
ANR	2663000	Argument	D_ALWAYS		2662822	0					
ANR	2663001	Identifier	D_ALWAYS		2662822	0					
ANR	2663002	Argument	"""\\tnot currently bound to a url.\\n"""		2662822	1					
ANR	2663003	PrimaryExpression	"""\\tnot currently bound to a url.\\n"""		2662822	0					
ANR	2663004	ReturnType	void		2662822	1					
ANR	2663005	Identifier	CondorFileTable :: dump		2662822	2					
ANR	2663006	ParameterList			2662822	3					
ANR	2663007	CFGEntryNode	ENTRY		2662822		True				
ANR	2663008	CFGExitNode	EXIT		2662822		True				
ANR	2663009	Symbol	* p -> file		2662822						
ANR	2663010	Symbol	D_ALWAYS		2662822						
ANR	2663011	Symbol	length		2662822						
ANR	2663012	Symbol	j		2662822						
ANR	2663013	Symbol	* pointers		2662822						
ANR	2663014	Symbol	p -> file -> get_size		2662822						
ANR	2663015	Symbol	p		2662822						
ANR	2663016	Symbol	* j		2662822						
ANR	2663017	Symbol	p -> file		2662822						
ANR	2663018	Symbol	count_file_uses		2662822						
ANR	2663019	Symbol	p -> logical_name		2662822						
ANR	2663020	Symbol	p -> offset		2662822						
ANR	2663021	Symbol	p -> flags		2662822						
ANR	2663022	Symbol	* p		2662822						
ANR	2663023	Symbol	* * p		2662822						
ANR	2663024	Symbol	count_pointer_uses		2662822						
ANR	2663025	Symbol	p -> file -> get_url		2662822						
ANR	2663026	Symbol	pointers		2662822						
ANR	2663027	Function	CondorFileTable :: find_url	252:0:6649:6852							
ANR	2663028	FunctionDef	CondorFileTable :: find_url (char * url)		2663027	0					
ANR	2663029	CompoundStatement		253:0:6692:6852	2663027	0					
ANR	2663030	ForStatement	for ( int i = 0 ; i < length ; i ++ )		2663027	0					
ANR	2663031	ForInit	int i = 0 ;	254:6:6700:6707	2663027	0	True				
ANR	2663032	IdentifierDeclStatement	int i = 0 ;		2663027	0					
ANR	2663033	IdentifierDecl	i = 0		2663027	0					
ANR	2663034	IdentifierDeclType	int		2663027	0					
ANR	2663035	Identifier	i		2663027	1					
ANR	2663036	AssignmentExpression	i = 0		2663027	2		=			
ANR	2663037	Identifier	i		2663027	0					
ANR	2663038	PrimaryExpression	0		2663027	1					
ANR	2663039	Condition	i < length	254:15:6709:6716	2663027	1	True				
ANR	2663040	RelationalExpression	i < length		2663027	0		<			
ANR	2663041	Identifier	i		2663027	0					
ANR	2663042	Identifier	length		2663027	1					
ANR	2663043	PostIncDecOperationExpression	i ++	254:25:6719:6721	2663027	2	True				
ANR	2663044	Identifier	i		2663027	0					
ANR	2663045	IncDec	++		2663027	1					
ANR	2663046	IfStatement	if ( pointers [ i ] )		2663027	3					
ANR	2663047	Condition	pointers [ i ]	255:6:6731:6741	2663027	0	True				
ANR	2663048	ArrayIndexing	pointers [ i ]		2663027	0					
ANR	2663049	Identifier	pointers		2663027	0					
ANR	2663050	Identifier	i		2663027	1					
ANR	2663051	IfStatement	if ( pointers [ i ] -> file )		2663027	1					
ANR	2663052	Condition	pointers [ i ] -> file	256:7:6752:6768	2663027	0	True				
ANR	2663053	PtrMemberAccess	pointers [ i ] -> file		2663027	0					
ANR	2663054	ArrayIndexing	pointers [ i ]		2663027	0					
ANR	2663055	Identifier	pointers		2663027	0					
ANR	2663056	Identifier	i		2663027	1					
ANR	2663057	Identifier	file		2663027	1					
ANR	2663058	IfStatement	"if ( ! strcmp ( pointers [ i ] -> file -> get_url ( ) , url ) )"		2663027	1					
ANR	2663059	Condition	"! strcmp ( pointers [ i ] -> file -> get_url ( ) , url )"	257:8:6780:6820	2663027	0	True				
ANR	2663060	UnaryOperationExpression	"! strcmp ( pointers [ i ] -> file -> get_url ( ) , url )"		2663027	0					
ANR	2663061	UnaryOperator	!		2663027	0					
ANR	2663062	CallExpression	"strcmp ( pointers [ i ] -> file -> get_url ( ) , url )"		2663027	1					
ANR	2663063	Callee	strcmp		2663027	0					
ANR	2663064	Identifier	strcmp		2663027	0					
ANR	2663065	ArgumentList	pointers [ i ] -> file -> get_url ( )		2663027	1					
ANR	2663066	Argument	pointers [ i ] -> file -> get_url ( )		2663027	0					
ANR	2663067	CallExpression	pointers [ i ] -> file -> get_url ( )		2663027	0					
ANR	2663068	Callee	pointers [ i ] -> file -> get_url		2663027	0					
ANR	2663069	PtrMemberAccess	pointers [ i ] -> file -> get_url		2663027	0					
ANR	2663070	PtrMemberAccess	pointers [ i ] -> file		2663027	0					
ANR	2663071	ArrayIndexing	pointers [ i ]		2663027	0					
ANR	2663072	Identifier	pointers		2663027	0					
ANR	2663073	Identifier	i		2663027	1					
ANR	2663074	Identifier	file		2663027	1					
ANR	2663075	Identifier	get_url		2663027	1					
ANR	2663076	ArgumentList			2663027	1					
ANR	2663077	Argument	url		2663027	1					
ANR	2663078	Identifier	url		2663027	0					
ANR	2663079	ReturnStatement	return i ;	258:5:6829:6837	2663027	1	True				
ANR	2663080	Identifier	i		2663027	0					
ANR	2663081	ReturnStatement	return - 1 ;	260:1:6841:6850	2663027	1	True				
ANR	2663082	UnaryOperationExpression	- 1		2663027	0					
ANR	2663083	UnaryOperator	-		2663027	0					
ANR	2663084	PrimaryExpression	1		2663027	1					
ANR	2663085	ReturnType	int		2663027	1					
ANR	2663086	Identifier	CondorFileTable :: find_url		2663027	2					
ANR	2663087	ParameterList	char * url		2663027	3					
ANR	2663088	Parameter	char * url	252:31:6680:6688	2663027	0	True				
ANR	2663089	ParameterType	char *		2663027	0					
ANR	2663090	Identifier	url		2663027	1					
ANR	2663091	CFGEntryNode	ENTRY		2663027		True				
ANR	2663092	CFGExitNode	EXIT		2663027		True				
ANR	2663093	Symbol	strcmp		2663027						
ANR	2663094	Symbol	* * i		2663027						
ANR	2663095	Symbol	* pointers [ i ] -> file		2663027						
ANR	2663096	Symbol	pointers [ i ] -> file		2663027						
ANR	2663097	Symbol	length		2663027						
ANR	2663098	Symbol	i		2663027						
ANR	2663099	Symbol	url		2663027						
ANR	2663100	Symbol	* pointers		2663027						
ANR	2663101	Symbol	* i		2663027						
ANR	2663102	Symbol	pointers [ i ] -> file -> get_url		2663027						
ANR	2663103	Symbol	* * * i		2663027						
ANR	2663104	Symbol	* * * pointers		2663027						
ANR	2663105	Symbol	* * pointers		2663027						
ANR	2663106	Symbol	pointers		2663027						
ANR	2663107	Function	CondorFileTable :: find_logical_name	268:0:6929:7133							
ANR	2663108	FunctionDef	CondorFileTable :: find_logical_name (const char * logical_name)		2663107	0					
ANR	2663109	CompoundStatement		269:0:6996:7133	2663107	0					
ANR	2663110	ForStatement	for ( int i = 0 ; i < length ; i ++ )		2663107	0					
ANR	2663111	ForInit	int i = 0 ;	270:6:7004:7011	2663107	0	True				
ANR	2663112	IdentifierDeclStatement	int i = 0 ;		2663107	0					
ANR	2663113	IdentifierDecl	i = 0		2663107	0					
ANR	2663114	IdentifierDeclType	int		2663107	0					
ANR	2663115	Identifier	i		2663107	1					
ANR	2663116	AssignmentExpression	i = 0		2663107	2		=			
ANR	2663117	Identifier	i		2663107	0					
ANR	2663118	PrimaryExpression	0		2663107	1					
ANR	2663119	Condition	i < length	270:15:7013:7020	2663107	1	True				
ANR	2663120	RelationalExpression	i < length		2663107	0		<			
ANR	2663121	Identifier	i		2663107	0					
ANR	2663122	Identifier	length		2663107	1					
ANR	2663123	PostIncDecOperationExpression	i ++	270:25:7023:7025	2663107	2	True				
ANR	2663124	Identifier	i		2663107	0					
ANR	2663125	IncDec	++		2663107	1					
ANR	2663126	IfStatement	if ( pointers [ i ] )		2663107	3					
ANR	2663127	Condition	pointers [ i ]	271:6:7035:7045	2663107	0	True				
ANR	2663128	ArrayIndexing	pointers [ i ]		2663107	0					
ANR	2663129	Identifier	pointers		2663107	0					
ANR	2663130	Identifier	i		2663107	1					
ANR	2663131	IfStatement	"if ( ! strcmp ( pointers [ i ] -> logical_name , logical_name ) )"		2663107	1					
ANR	2663132	Condition	"! strcmp ( pointers [ i ] -> logical_name , logical_name )"	272:7:7056:7102	2663107	0	True				
ANR	2663133	UnaryOperationExpression	"! strcmp ( pointers [ i ] -> logical_name , logical_name )"		2663107	0					
ANR	2663134	UnaryOperator	!		2663107	0					
ANR	2663135	CallExpression	"strcmp ( pointers [ i ] -> logical_name , logical_name )"		2663107	1					
ANR	2663136	Callee	strcmp		2663107	0					
ANR	2663137	Identifier	strcmp		2663107	0					
ANR	2663138	ArgumentList	pointers [ i ] -> logical_name		2663107	1					
ANR	2663139	Argument	pointers [ i ] -> logical_name		2663107	0					
ANR	2663140	PtrMemberAccess	pointers [ i ] -> logical_name		2663107	0					
ANR	2663141	ArrayIndexing	pointers [ i ]		2663107	0					
ANR	2663142	Identifier	pointers		2663107	0					
ANR	2663143	Identifier	i		2663107	1					
ANR	2663144	Identifier	logical_name		2663107	1					
ANR	2663145	Argument	logical_name		2663107	1					
ANR	2663146	Identifier	logical_name		2663107	0					
ANR	2663147	ReturnStatement	return i ;	273:4:7110:7118	2663107	1	True				
ANR	2663148	Identifier	i		2663107	0					
ANR	2663149	ReturnStatement	return - 1 ;	275:1:7122:7131	2663107	1	True				
ANR	2663150	UnaryOperationExpression	- 1		2663107	0					
ANR	2663151	UnaryOperator	-		2663107	0					
ANR	2663152	PrimaryExpression	1		2663107	1					
ANR	2663153	ReturnType	int		2663107	1					
ANR	2663154	Identifier	CondorFileTable :: find_logical_name		2663107	2					
ANR	2663155	ParameterList	const char * logical_name		2663107	3					
ANR	2663156	Parameter	const char * logical_name	268:40:6969:6992	2663107	0	True				
ANR	2663157	ParameterType	const char *		2663107	0					
ANR	2663158	Identifier	logical_name		2663107	1					
ANR	2663159	CFGEntryNode	ENTRY		2663107		True				
ANR	2663160	CFGExitNode	EXIT		2663107		True				
ANR	2663161	Symbol	strcmp		2663107						
ANR	2663162	Symbol	logical_name		2663107						
ANR	2663163	Symbol	* * i		2663107						
ANR	2663164	Symbol	* i		2663107						
ANR	2663165	Symbol	pointers [ i ] -> logical_name		2663107						
ANR	2663166	Symbol	length		2663107						
ANR	2663167	Symbol	i		2663107						
ANR	2663168	Symbol	* * pointers		2663107						
ANR	2663169	Symbol	* pointers		2663107						
ANR	2663170	Symbol	pointers		2663107						
ANR	2663171	Function	CondorFileTable :: make_info	285:0:7383:7858							
ANR	2663172	FunctionDef	CondorFileTable :: make_info (char * logical_name)		2663171	0					
ANR	2663173	CompoundStatement		286:0:7449:7858	2663171	0					
ANR	2663174	IdentifierDeclStatement	CondorFileInfo * i ;	287:1:7452:7469	2663171	0	True				
ANR	2663175	IdentifierDecl	* i		2663171	0					
ANR	2663176	IdentifierDeclType	CondorFileInfo *		2663171	0					
ANR	2663177	Identifier	i		2663171	1					
ANR	2663178	ForStatement	for ( i = info_head ; i ; i = i -> next )		2663171	1					
ANR	2663179	ForInit	i = info_head ;	289:6:7478:7489	2663171	0	True				
ANR	2663180	AssignmentExpression	i = info_head		2663171	0		=			
ANR	2663181	Identifier	i		2663171	0					
ANR	2663182	Identifier	info_head		2663171	1					
ANR	2663183	Condition	i	289:19:7491:7491	2663171	1	True				
ANR	2663184	Identifier	i		2663171	0					
ANR	2663185	AssignmentExpression	i = i -> next	289:22:7494:7502	2663171	2	True	=			
ANR	2663186	Identifier	i		2663171	0					
ANR	2663187	PtrMemberAccess	i -> next		2663171	1					
ANR	2663188	Identifier	i		2663171	0					
ANR	2663189	Identifier	next		2663171	1					
ANR	2663190	IfStatement	"if ( ! strcmp ( logical_name , i -> info_name ) )"		2663171	3					
ANR	2663191	Condition	"! strcmp ( logical_name , i -> info_name )"	290:6:7512:7545	2663171	0	True				
ANR	2663192	UnaryOperationExpression	"! strcmp ( logical_name , i -> info_name )"		2663171	0					
ANR	2663193	UnaryOperator	!		2663171	0					
ANR	2663194	CallExpression	"strcmp ( logical_name , i -> info_name )"		2663171	1					
ANR	2663195	Callee	strcmp		2663171	0					
ANR	2663196	Identifier	strcmp		2663171	0					
ANR	2663197	ArgumentList	logical_name		2663171	1					
ANR	2663198	Argument	logical_name		2663171	0					
ANR	2663199	Identifier	logical_name		2663171	0					
ANR	2663200	Argument	i -> info_name		2663171	1					
ANR	2663201	PtrMemberAccess	i -> info_name		2663171	0					
ANR	2663202	Identifier	i		2663171	0					
ANR	2663203	Identifier	info_name		2663171	1					
ANR	2663204	ReturnStatement	return i ;	291:3:7552:7560	2663171	1	True				
ANR	2663205	Identifier	i		2663171	0					
ANR	2663206	IfStatement	if ( info_count < 100 )		2663171	2					
ANR	2663207	Condition	info_count < 100	293:5:7568:7581	2663171	0	True				
ANR	2663208	RelationalExpression	info_count < 100		2663171	0		<			
ANR	2663209	Identifier	info_count		2663171	0					
ANR	2663210	PrimaryExpression	100		2663171	1					
ANR	2663211	CompoundStatement		8:22:135:135	2663171	1					
ANR	2663212	ExpressionStatement	i = new CondorFileInfo ( logical_name )	294:2:7589:7627	2663171	0	True				
ANR	2663213	AssignmentExpression	i = new CondorFileInfo ( logical_name )		2663171	0		=			
ANR	2663214	Identifier	i		2663171	0					
ANR	2663215	Identifier	logical_name		2663171	1					
ANR	2663216	ExpressionStatement	i -> next = info_head	295:2:7631:7650	2663171	1	True				
ANR	2663217	AssignmentExpression	i -> next = info_head		2663171	0		=			
ANR	2663218	PtrMemberAccess	i -> next		2663171	0					
ANR	2663219	Identifier	i		2663171	0					
ANR	2663220	Identifier	next		2663171	1					
ANR	2663221	Identifier	info_head		2663171	1					
ANR	2663222	ExpressionStatement	info_head = i	296:2:7654:7667	2663171	2	True				
ANR	2663223	AssignmentExpression	info_head = i		2663171	0		=			
ANR	2663224	Identifier	info_head		2663171	0					
ANR	2663225	Identifier	i		2663171	1					
ANR	2663226	ElseStatement	else		2663171	0					
ANR	2663227	IfStatement	if ( info_count == 100 )		2663171	0					
ANR	2663228	Condition	info_count == 100	297:12:7681:7695	2663171	0	True				
ANR	2663229	EqualityExpression	info_count == 100		2663171	0		==			
ANR	2663230	Identifier	info_count		2663171	0					
ANR	2663231	PrimaryExpression	100		2663171	1					
ANR	2663232	CompoundStatement		12:30:249:249	2663171	1					
ANR	2663233	ExpressionStatement	"i = new CondorFileInfo ( ""everything else"" )"	298:2:7703:7746	2663171	0	True				
ANR	2663234	AssignmentExpression	"i = new CondorFileInfo ( ""everything else"" )"		2663171	0		=			
ANR	2663235	Identifier	i		2663171	0					
ANR	2663236	PrimaryExpression	"""everything else"""		2663171	1					
ANR	2663237	ExpressionStatement	i -> next = info_head	299:2:7750:7769	2663171	1	True				
ANR	2663238	AssignmentExpression	i -> next = info_head		2663171	0		=			
ANR	2663239	PtrMemberAccess	i -> next		2663171	0					
ANR	2663240	Identifier	i		2663171	0					
ANR	2663241	Identifier	next		2663171	1					
ANR	2663242	Identifier	info_head		2663171	1					
ANR	2663243	ExpressionStatement	info_head = i	300:2:7773:7786	2663171	2	True				
ANR	2663244	AssignmentExpression	info_head = i		2663171	0		=			
ANR	2663245	Identifier	info_head		2663171	0					
ANR	2663246	Identifier	i		2663171	1					
ANR	2663247	ElseStatement	else		2663171	0					
ANR	2663248	CompoundStatement		16:8:346:346	2663171	0					
ANR	2663249	ExpressionStatement	info_count ++	305:1:7824:7836	2663171	3	True				
ANR	2663250	PostIncDecOperationExpression	info_count ++		2663171	0					
ANR	2663251	Identifier	info_count		2663171	0					
ANR	2663252	IncDec	++		2663171	1					
ANR	2663253	ReturnStatement	return info_head ;	307:1:7840:7856	2663171	4	True				
ANR	2663254	Identifier	info_head		2663171	0					
ANR	2663255	ReturnType	CondorFileInfo *		2663171	1					
ANR	2663256	Identifier	CondorFileTable :: make_info		2663171	2					
ANR	2663257	ParameterList	char * logical_name		2663171	3					
ANR	2663258	Parameter	char * logical_name	285:45:7428:7445	2663171	0	True				
ANR	2663259	ParameterType	char *		2663171	0					
ANR	2663260	Identifier	logical_name		2663171	1					
ANR	2663261	CFGEntryNode	ENTRY		2663171		True				
ANR	2663262	CFGExitNode	EXIT		2663171		True				
ANR	2663263	Symbol	strcmp		2663171						
ANR	2663264	Symbol	logical_name		2663171						
ANR	2663265	Symbol	info_head		2663171						
ANR	2663266	Symbol	* i		2663171						
ANR	2663267	Symbol	info_count		2663171						
ANR	2663268	Symbol	i		2663171						
ANR	2663269	Symbol	i -> next		2663171						
ANR	2663270	Symbol	i -> info_name		2663171						
ANR	2663271	Function	CondorFileTable :: find_empty	316:0:8070:8279							
ANR	2663272	FunctionDef	CondorFileTable :: find_empty ()		2663271	0					
ANR	2663273	CompoundStatement		317:0:8104:8279	2663271	0					
ANR	2663274	IdentifierDeclStatement	int fd ;	318:1:8107:8113	2663271	0	True				
ANR	2663275	IdentifierDecl	fd		2663271	0					
ANR	2663276	IdentifierDeclType	int		2663271	0					
ANR	2663277	Identifier	fd		2663271	1					
ANR	2663278	ForStatement	for ( fd = 0 ; fd < length ; fd ++ )		2663271	1					
ANR	2663279	ForInit	fd = 0 ;	320:6:8122:8126	2663271	0	True				
ANR	2663280	AssignmentExpression	fd = 0		2663271	0		=			
ANR	2663281	Identifier	fd		2663271	0					
ANR	2663282	PrimaryExpression	0		2663271	1					
ANR	2663283	Condition	fd < length	320:12:8128:8136	2663271	1	True				
ANR	2663284	RelationalExpression	fd < length		2663271	0		<			
ANR	2663285	Identifier	fd		2663271	0					
ANR	2663286	Identifier	length		2663271	1					
ANR	2663287	PostIncDecOperationExpression	fd ++	320:23:8139:8142	2663271	2	True				
ANR	2663288	Identifier	fd		2663271	0					
ANR	2663289	IncDec	++		2663271	1					
ANR	2663290	CompoundStatement		4:30:41:41	2663271	3					
ANR	2663291	IfStatement	if ( aggravate_mode )		2663271	0					
ANR	2663292	Condition	aggravate_mode	321:6:8154:8167	2663271	0	True				
ANR	2663293	Identifier	aggravate_mode		2663271	0					
ANR	2663294	CompoundStatement		5:23:66:66	2663271	1					
ANR	2663295	IfStatement	if ( fd > 2 && fd < 32 )		2663271	0					
ANR	2663296	Condition	fd > 2 && fd < 32	322:7:8180:8192	2663271	0	True				
ANR	2663297	AndExpression	fd > 2 && fd < 32		2663271	0		&&			
ANR	2663298	RelationalExpression	fd > 2		2663271	0		>			
ANR	2663299	Identifier	fd		2663271	0					
ANR	2663300	PrimaryExpression	2		2663271	1					
ANR	2663301	RelationalExpression	fd < 32		2663271	1		<			
ANR	2663302	Identifier	fd		2663271	0					
ANR	2663303	PrimaryExpression	32		2663271	1					
ANR	2663304	CompoundStatement		6:23:91:91	2663271	1					
ANR	2663305	ContinueStatement	continue ;	323:4:8202:8210	2663271	0	True				
ANR	2663306	IfStatement	if ( ! pointers [ fd ] )		2663271	1					
ANR	2663307	Condition	! pointers [ fd ]	326:6:8227:8239	2663271	0	True				
ANR	2663308	UnaryOperationExpression	! pointers [ fd ]		2663271	0					
ANR	2663309	UnaryOperator	!		2663271	0					
ANR	2663310	ArrayIndexing	pointers [ fd ]		2663271	1					
ANR	2663311	Identifier	pointers		2663271	0					
ANR	2663312	Identifier	fd		2663271	1					
ANR	2663313	CompoundStatement		10:22:138:138	2663271	1					
ANR	2663314	ReturnStatement	return fd ;	327:3:8248:8257	2663271	0	True				
ANR	2663315	Identifier	fd		2663271	0					
ANR	2663316	ReturnStatement	return - 1 ;	331:1:8268:8277	2663271	2	True				
ANR	2663317	UnaryOperationExpression	- 1		2663271	0					
ANR	2663318	UnaryOperator	-		2663271	0					
ANR	2663319	PrimaryExpression	1		2663271	1					
ANR	2663320	ReturnType	int		2663271	1					
ANR	2663321	Identifier	CondorFileTable :: find_empty		2663271	2					
ANR	2663322	ParameterList			2663271	3					
ANR	2663323	CFGEntryNode	ENTRY		2663271		True				
ANR	2663324	CFGExitNode	EXIT		2663271		True				
ANR	2663325	Symbol	* fd		2663271						
ANR	2663326	Symbol	length		2663271						
ANR	2663327	Symbol	aggravate_mode		2663271						
ANR	2663328	Symbol	fd		2663271						
ANR	2663329	Symbol	* pointers		2663271						
ANR	2663330	Symbol	pointers		2663271						
ANR	2663331	Function	CondorFileTable :: count_pointer_uses	334:0:8282:8448							
ANR	2663332	FunctionDef	CondorFileTable :: count_pointer_uses (CondorFilePointer * p)		2663331	0					
ANR	2663333	CompoundStatement		335:0:8346:8448	2663331	0					
ANR	2663334	IdentifierDeclStatement	int count = 0 ;	336:1:8349:8360	2663331	0	True				
ANR	2663335	IdentifierDecl	count = 0		2663331	0					
ANR	2663336	IdentifierDeclType	int		2663331	0					
ANR	2663337	Identifier	count		2663331	1					
ANR	2663338	AssignmentExpression	count = 0		2663331	2		=			
ANR	2663339	Identifier	count		2663331	0					
ANR	2663340	PrimaryExpression	0		2663331	1					
ANR	2663341	ForStatement	for ( int fd = 0 ; fd < length ; fd ++ )		2663331	1					
ANR	2663342	ForInit	int fd = 0 ;	338:6:8369:8377	2663331	0	True				
ANR	2663343	IdentifierDeclStatement	int fd = 0 ;		2663331	0					
ANR	2663344	IdentifierDecl	fd = 0		2663331	0					
ANR	2663345	IdentifierDeclType	int		2663331	0					
ANR	2663346	Identifier	fd		2663331	1					
ANR	2663347	AssignmentExpression	fd = 0		2663331	2		=			
ANR	2663348	Identifier	fd		2663331	0					
ANR	2663349	PrimaryExpression	0		2663331	1					
ANR	2663350	Condition	fd < length	338:16:8379:8387	2663331	1	True				
ANR	2663351	RelationalExpression	fd < length		2663331	0		<			
ANR	2663352	Identifier	fd		2663331	0					
ANR	2663353	Identifier	length		2663331	1					
ANR	2663354	PostIncDecOperationExpression	fd ++	338:27:8390:8393	2663331	2	True				
ANR	2663355	Identifier	fd		2663331	0					
ANR	2663356	IncDec	++		2663331	1					
ANR	2663357	IfStatement	if ( pointers [ fd ] == p )		2663331	3					
ANR	2663358	Condition	pointers [ fd ] == p	339:5:8402:8416	2663331	0	True				
ANR	2663359	EqualityExpression	pointers [ fd ] == p		2663331	0		==			
ANR	2663360	ArrayIndexing	pointers [ fd ]		2663331	0					
ANR	2663361	Identifier	pointers		2663331	0					
ANR	2663362	Identifier	fd		2663331	1					
ANR	2663363	Identifier	p		2663331	1					
ANR	2663364	ExpressionStatement	count ++	340:3:8422:8429	2663331	1	True				
ANR	2663365	PostIncDecOperationExpression	count ++		2663331	0					
ANR	2663366	Identifier	count		2663331	0					
ANR	2663367	IncDec	++		2663331	1					
ANR	2663368	ReturnStatement	return count ;	342:1:8434:8446	2663331	2	True				
ANR	2663369	Identifier	count		2663331	0					
ANR	2663370	ReturnType	int		2663331	1					
ANR	2663371	Identifier	CondorFileTable :: count_pointer_uses		2663331	2					
ANR	2663372	ParameterList	CondorFilePointer * p		2663331	3					
ANR	2663373	Parameter	CondorFilePointer * p	334:41:8323:8342	2663331	0	True				
ANR	2663374	ParameterType	CondorFilePointer *		2663331	0					
ANR	2663375	Identifier	p		2663331	1					
ANR	2663376	CFGEntryNode	ENTRY		2663331		True				
ANR	2663377	CFGExitNode	EXIT		2663331		True				
ANR	2663378	Symbol	p		2663331						
ANR	2663379	Symbol	* fd		2663331						
ANR	2663380	Symbol	count		2663331						
ANR	2663381	Symbol	length		2663331						
ANR	2663382	Symbol	fd		2663331						
ANR	2663383	Symbol	* pointers		2663331						
ANR	2663384	Symbol	pointers		2663331						
ANR	2663385	Function	CondorFileTable :: count_file_uses	345:0:8451:8633							
ANR	2663386	FunctionDef	CondorFileTable :: count_file_uses (CondorFile * f)		2663385	0					
ANR	2663387	CompoundStatement		346:0:8505:8633	2663385	0					
ANR	2663388	IdentifierDeclStatement	int count = 0 ;	347:1:8508:8519	2663385	0	True				
ANR	2663389	IdentifierDecl	count = 0		2663385	0					
ANR	2663390	IdentifierDeclType	int		2663385	0					
ANR	2663391	Identifier	count		2663385	1					
ANR	2663392	AssignmentExpression	count = 0		2663385	2		=			
ANR	2663393	Identifier	count		2663385	0					
ANR	2663394	PrimaryExpression	0		2663385	1					
ANR	2663395	ForStatement	for ( int fd = 0 ; fd < length ; fd ++ )		2663385	1					
ANR	2663396	ForInit	int fd = 0 ;	349:6:8528:8536	2663385	0	True				
ANR	2663397	IdentifierDeclStatement	int fd = 0 ;		2663385	0					
ANR	2663398	IdentifierDecl	fd = 0		2663385	0					
ANR	2663399	IdentifierDeclType	int		2663385	0					
ANR	2663400	Identifier	fd		2663385	1					
ANR	2663401	AssignmentExpression	fd = 0		2663385	2		=			
ANR	2663402	Identifier	fd		2663385	0					
ANR	2663403	PrimaryExpression	0		2663385	1					
ANR	2663404	Condition	fd < length	349:16:8538:8546	2663385	1	True				
ANR	2663405	RelationalExpression	fd < length		2663385	0		<			
ANR	2663406	Identifier	fd		2663385	0					
ANR	2663407	Identifier	length		2663385	1					
ANR	2663408	PostIncDecOperationExpression	fd ++	349:27:8549:8552	2663385	2	True				
ANR	2663409	Identifier	fd		2663385	0					
ANR	2663410	IncDec	++		2663385	1					
ANR	2663411	IfStatement	if ( pointers [ fd ] )		2663385	3					
ANR	2663412	Condition	pointers [ fd ]	350:5:8561:8572	2663385	0	True				
ANR	2663413	ArrayIndexing	pointers [ fd ]		2663385	0					
ANR	2663414	Identifier	pointers		2663385	0					
ANR	2663415	Identifier	fd		2663385	1					
ANR	2663416	IfStatement	if ( pointers [ fd ] -> file == f )		2663385	1					
ANR	2663417	Condition	pointers [ fd ] -> file == f	351:6:8581:8601	2663385	0	True				
ANR	2663418	EqualityExpression	pointers [ fd ] -> file == f		2663385	0		==			
ANR	2663419	PtrMemberAccess	pointers [ fd ] -> file		2663385	0					
ANR	2663420	ArrayIndexing	pointers [ fd ]		2663385	0					
ANR	2663421	Identifier	pointers		2663385	0					
ANR	2663422	Identifier	fd		2663385	1					
ANR	2663423	Identifier	file		2663385	1					
ANR	2663424	Identifier	f		2663385	1					
ANR	2663425	ExpressionStatement	count ++	352:4:8608:8615	2663385	1	True				
ANR	2663426	PostIncDecOperationExpression	count ++		2663385	0					
ANR	2663427	Identifier	count		2663385	0					
ANR	2663428	IncDec	++		2663385	1					
ANR	2663429	ReturnStatement	return count ;	354:1:8619:8631	2663385	2	True				
ANR	2663430	Identifier	count		2663385	0					
ANR	2663431	ReturnType	int		2663385	1					
ANR	2663432	Identifier	CondorFileTable :: count_file_uses		2663385	2					
ANR	2663433	ParameterList	CondorFile * f		2663385	3					
ANR	2663434	Parameter	CondorFile * f	345:38:8489:8501	2663385	0	True				
ANR	2663435	ParameterType	CondorFile *		2663385	0					
ANR	2663436	Identifier	f		2663385	1					
ANR	2663437	CFGEntryNode	ENTRY		2663385		True				
ANR	2663438	CFGExitNode	EXIT		2663385		True				
ANR	2663439	Symbol	f		2663385						
ANR	2663440	Symbol	* fd		2663385						
ANR	2663441	Symbol	count		2663385						
ANR	2663442	Symbol	length		2663385						
ANR	2663443	Symbol	* * fd		2663385						
ANR	2663444	Symbol	pointers [ fd ] -> file		2663385						
ANR	2663445	Symbol	* * pointers		2663385						
ANR	2663446	Symbol	fd		2663385						
ANR	2663447	Symbol	pointers		2663385						
ANR	2663448	Symbol	* pointers		2663385						
ANR	2663449	Function	CondorFileTable :: lookup_url	361:0:8881:10596							
ANR	2663450	FunctionDef	"CondorFileTable :: lookup_url (char * logical_name , char * * url)"		2663449	0					
ANR	2663451	CompoundStatement		362:0:8948:10596	2663449	0					
ANR	2663452	Statement	static	363:1:8951:8956	2663449	0	True				
ANR	2663453	IdentifierDeclStatement	int never_ask_shadow = FALSE ;	363:8:8958:8986	2663449	1	True				
ANR	2663454	IdentifierDecl	never_ask_shadow = FALSE		2663449	0					
ANR	2663455	IdentifierDeclType	int		2663449	0					
ANR	2663456	Identifier	never_ask_shadow		2663449	1					
ANR	2663457	AssignmentExpression	never_ask_shadow = FALSE		2663449	2		=			
ANR	2663458	Identifier	FALSE		2663449	0					
ANR	2663459	Identifier	FALSE		2663449	1					
ANR	2663460	IfStatement	"if ( ! strcmp ( logical_name , ""default stdin"" ) )"		2663449	2					
ANR	2663461	Condition	"! strcmp ( logical_name , ""default stdin"" )"	368:4:9107:9143	2663449	0	True				
ANR	2663462	UnaryOperationExpression	"! strcmp ( logical_name , ""default stdin"" )"		2663449	0					
ANR	2663463	UnaryOperator	!		2663449	0					
ANR	2663464	CallExpression	"strcmp ( logical_name , ""default stdin"" )"		2663449	1					
ANR	2663465	Callee	strcmp		2663449	0					
ANR	2663466	Identifier	strcmp		2663449	0					
ANR	2663467	ArgumentList	logical_name		2663449	1					
ANR	2663468	Argument	logical_name		2663449	0					
ANR	2663469	Identifier	logical_name		2663449	0					
ANR	2663470	Argument	"""default stdin"""		2663449	1					
ANR	2663471	PrimaryExpression	"""default stdin"""		2663449	0					
ANR	2663472	CompoundStatement		7:43:197:197	2663449	1					
ANR	2663473	ExpressionStatement	"* url = strdup ( ""fd:0"" )"	369:2:9150:9171	2663449	0	True				
ANR	2663474	AssignmentExpression	"* url = strdup ( ""fd:0"" )"		2663449	0		=			
ANR	2663475	UnaryOperationExpression	* url		2663449	0					
ANR	2663476	UnaryOperator	*		2663449	0					
ANR	2663477	Identifier	url		2663449	1					
ANR	2663478	CallExpression	"strdup ( ""fd:0"" )"		2663449	1					
ANR	2663479	Callee	strdup		2663449	0					
ANR	2663480	Identifier	strdup		2663449	0					
ANR	2663481	ArgumentList	"""fd:0"""		2663449	1					
ANR	2663482	Argument	"""fd:0"""		2663449	0					
ANR	2663483	PrimaryExpression	"""fd:0"""		2663449	0					
ANR	2663484	ReturnStatement	return ;	370:2:9175:9181	2663449	1	True				
ANR	2663485	ElseStatement	else		2663449	0					
ANR	2663486	IfStatement	"if ( ! strcmp ( logical_name , ""default stdout"" ) )"		2663449	0					
ANR	2663487	Condition	"! strcmp ( logical_name , ""default stdout"" )"	371:11:9194:9231	2663449	0	True				
ANR	2663488	UnaryOperationExpression	"! strcmp ( logical_name , ""default stdout"" )"		2663449	0					
ANR	2663489	UnaryOperator	!		2663449	0					
ANR	2663490	CallExpression	"strcmp ( logical_name , ""default stdout"" )"		2663449	1					
ANR	2663491	Callee	strcmp		2663449	0					
ANR	2663492	Identifier	strcmp		2663449	0					
ANR	2663493	ArgumentList	logical_name		2663449	1					
ANR	2663494	Argument	logical_name		2663449	0					
ANR	2663495	Identifier	logical_name		2663449	0					
ANR	2663496	Argument	"""default stdout"""		2663449	1					
ANR	2663497	PrimaryExpression	"""default stdout"""		2663449	0					
ANR	2663498	CompoundStatement		10:51:285:285	2663449	1					
ANR	2663499	ExpressionStatement	"* url = strdup ( ""fd:1"" )"	372:2:9238:9259	2663449	0	True				
ANR	2663500	AssignmentExpression	"* url = strdup ( ""fd:1"" )"		2663449	0		=			
ANR	2663501	UnaryOperationExpression	* url		2663449	0					
ANR	2663502	UnaryOperator	*		2663449	0					
ANR	2663503	Identifier	url		2663449	1					
ANR	2663504	CallExpression	"strdup ( ""fd:1"" )"		2663449	1					
ANR	2663505	Callee	strdup		2663449	0					
ANR	2663506	Identifier	strdup		2663449	0					
ANR	2663507	ArgumentList	"""fd:1"""		2663449	1					
ANR	2663508	Argument	"""fd:1"""		2663449	0					
ANR	2663509	PrimaryExpression	"""fd:1"""		2663449	0					
ANR	2663510	ReturnStatement	return ;	373:2:9263:9269	2663449	1	True				
ANR	2663511	ElseStatement	else		2663449	0					
ANR	2663512	IfStatement	"if ( ! strcmp ( logical_name , ""default stderr"" ) )"		2663449	0					
ANR	2663513	Condition	"! strcmp ( logical_name , ""default stderr"" )"	374:11:9282:9319	2663449	0	True				
ANR	2663514	UnaryOperationExpression	"! strcmp ( logical_name , ""default stderr"" )"		2663449	0					
ANR	2663515	UnaryOperator	!		2663449	0					
ANR	2663516	CallExpression	"strcmp ( logical_name , ""default stderr"" )"		2663449	1					
ANR	2663517	Callee	strcmp		2663449	0					
ANR	2663518	Identifier	strcmp		2663449	0					
ANR	2663519	ArgumentList	logical_name		2663449	1					
ANR	2663520	Argument	logical_name		2663449	0					
ANR	2663521	Identifier	logical_name		2663449	0					
ANR	2663522	Argument	"""default stderr"""		2663449	1					
ANR	2663523	PrimaryExpression	"""default stderr"""		2663449	0					
ANR	2663524	CompoundStatement		13:51:373:373	2663449	1					
ANR	2663525	ExpressionStatement	"* url = strdup ( ""fd:2"" )"	375:2:9326:9347	2663449	0	True				
ANR	2663526	AssignmentExpression	"* url = strdup ( ""fd:2"" )"		2663449	0		=			
ANR	2663527	UnaryOperationExpression	* url		2663449	0					
ANR	2663528	UnaryOperator	*		2663449	0					
ANR	2663529	Identifier	url		2663449	1					
ANR	2663530	CallExpression	"strdup ( ""fd:2"" )"		2663449	1					
ANR	2663531	Callee	strdup		2663449	0					
ANR	2663532	Identifier	strdup		2663449	0					
ANR	2663533	ArgumentList	"""fd:2"""		2663449	1					
ANR	2663534	Argument	"""fd:2"""		2663449	0					
ANR	2663535	PrimaryExpression	"""fd:2"""		2663449	0					
ANR	2663536	ReturnStatement	return ;	376:2:9351:9357	2663449	1	True				
ANR	2663537	IfStatement	if ( LocalSysCalls ( ) || ( never_ask_shadow == TRUE ) )		2663449	3					
ANR	2663538	Condition	LocalSysCalls ( ) || ( never_ask_shadow == TRUE )	382:5:9495:9539	2663449	0	True				
ANR	2663539	OrExpression	LocalSysCalls ( ) || ( never_ask_shadow == TRUE )		2663449	0		||			
ANR	2663540	CallExpression	LocalSysCalls ( )		2663449	0					
ANR	2663541	Callee	LocalSysCalls		2663449	0					
ANR	2663542	Identifier	LocalSysCalls		2663449	0					
ANR	2663543	ArgumentList			2663449	1					
ANR	2663544	EqualityExpression	never_ask_shadow == TRUE		2663449	1		==			
ANR	2663545	Identifier	never_ask_shadow		2663449	0					
ANR	2663546	Identifier	TRUE		2663449	1					
ANR	2663547	CompoundStatement		21:52:593:593	2663449	1					
ANR	2663548	ExpressionStatement	* url = ( char * ) malloc ( strlen ( logical_name ) + 7 )	383:2:9546:9591	2663449	0	True				
ANR	2663549	AssignmentExpression	* url = ( char * ) malloc ( strlen ( logical_name ) + 7 )		2663449	0		=			
ANR	2663550	UnaryOperationExpression	* url		2663449	0					
ANR	2663551	UnaryOperator	*		2663449	0					
ANR	2663552	Identifier	url		2663449	1					
ANR	2663553	CastExpression	( char * ) malloc ( strlen ( logical_name ) + 7 )		2663449	1					
ANR	2663554	CastTarget	char *		2663449	0					
ANR	2663555	CallExpression	malloc ( strlen ( logical_name ) + 7 )		2663449	1					
ANR	2663556	Callee	malloc		2663449	0					
ANR	2663557	Identifier	malloc		2663449	0					
ANR	2663558	ArgumentList	strlen ( logical_name ) + 7		2663449	1					
ANR	2663559	Argument	strlen ( logical_name ) + 7		2663449	0					
ANR	2663560	AdditiveExpression	strlen ( logical_name ) + 7		2663449	0		+			
ANR	2663561	CallExpression	strlen ( logical_name )		2663449	0					
ANR	2663562	Callee	strlen		2663449	0					
ANR	2663563	Identifier	strlen		2663449	0					
ANR	2663564	ArgumentList	logical_name		2663449	1					
ANR	2663565	Argument	logical_name		2663449	0					
ANR	2663566	Identifier	logical_name		2663449	0					
ANR	2663567	PrimaryExpression	7		2663449	1					
ANR	2663568	ExpressionStatement	"sprintf ( * url , ""local:%s"" , logical_name )"	384:2:9595:9632	2663449	1	True				
ANR	2663569	CallExpression	"sprintf ( * url , ""local:%s"" , logical_name )"		2663449	0					
ANR	2663570	Callee	sprintf		2663449	0					
ANR	2663571	Identifier	sprintf		2663449	0					
ANR	2663572	ArgumentList	* url		2663449	1					
ANR	2663573	Argument	* url		2663449	0					
ANR	2663574	UnaryOperationExpression	* url		2663449	0					
ANR	2663575	UnaryOperator	*		2663449	0					
ANR	2663576	Identifier	url		2663449	1					
ANR	2663577	Argument	"""local:%s"""		2663449	1					
ANR	2663578	PrimaryExpression	"""local:%s"""		2663449	0					
ANR	2663579	Argument	logical_name		2663449	2					
ANR	2663580	Identifier	logical_name		2663449	0					
ANR	2663581	ElseStatement	else		2663449	0					
ANR	2663582	CompoundStatement		24:8:693:693	2663449	0					
ANR	2663583	IfStatement	if ( never_ask_shadow == FALSE )		2663449	0					
ANR	2663584	Condition	never_ask_shadow == FALSE	386:6:9650:9674	2663449	0	True				
ANR	2663585	EqualityExpression	never_ask_shadow == FALSE		2663449	0		==			
ANR	2663586	Identifier	never_ask_shadow		2663449	0					
ANR	2663587	Identifier	FALSE		2663449	1					
ANR	2663588	CompoundStatement		26:3:734:744	2663449	1					
ANR	2663589	IdentifierDeclStatement	int result ;	387:3:9683:9693	2663449	0	True				
ANR	2663590	IdentifierDecl	result		2663449	0					
ANR	2663591	IdentifierDeclType	int		2663449	0					
ANR	2663592	Identifier	result		2663449	1					
ANR	2663593	ExpressionStatement	"result = REMOTE_CONDOR_get_file_info_new ( logical_name , * url )"	399:3:10156:10218	2663449	1	True				
ANR	2663594	AssignmentExpression	"result = REMOTE_CONDOR_get_file_info_new ( logical_name , * url )"		2663449	0		=			
ANR	2663595	Identifier	result		2663449	0					
ANR	2663596	CallExpression	"REMOTE_CONDOR_get_file_info_new ( logical_name , * url )"		2663449	1					
ANR	2663597	Callee	REMOTE_CONDOR_get_file_info_new		2663449	0					
ANR	2663598	Identifier	REMOTE_CONDOR_get_file_info_new		2663449	0					
ANR	2663599	ArgumentList	logical_name		2663449	1					
ANR	2663600	Argument	logical_name		2663449	0					
ANR	2663601	Identifier	logical_name		2663449	0					
ANR	2663602	Argument	* url		2663449	1					
ANR	2663603	UnaryOperationExpression	* url		2663449	0					
ANR	2663604	UnaryOperator	*		2663449	0					
ANR	2663605	Identifier	url		2663449	1					
ANR	2663606	IfStatement	if ( result == 1 )		2663449	2					
ANR	2663607	Condition	result == 1	401:7:10228:10238	2663449	0	True				
ANR	2663608	EqualityExpression	result == 1		2663449	0		==			
ANR	2663609	Identifier	result		2663449	0					
ANR	2663610	PrimaryExpression	1		2663449	1					
ANR	2663611	CompoundStatement		40:20:1292:1292	2663449	1					
ANR	2663612	ExpressionStatement	never_ask_shadow = TRUE	402:4:10247:10270	2663449	0	True				
ANR	2663613	AssignmentExpression	never_ask_shadow = TRUE		2663449	0		=			
ANR	2663614	Identifier	never_ask_shadow		2663449	0					
ANR	2663615	Identifier	TRUE		2663449	1					
ANR	2663616	ElseStatement	else		2663449	0					
ANR	2663617	IfStatement	if ( result < 0 )		2663449	0					
ANR	2663618	Condition	result < 0	403:14:10286:10295	2663449	0	True				
ANR	2663619	RelationalExpression	result < 0		2663449	0		<			
ANR	2663620	Identifier	result		2663449	0					
ANR	2663621	PrimaryExpression	0		2663449	1					
ANR	2663622	CompoundStatement		42:27:1350:1350	2663449	1					
ANR	2663623	ExpressionStatement	free ( * url )	404:4:10305:10317	2663449	0	True				
ANR	2663624	CallExpression	free ( * url )		2663449	0					
ANR	2663625	Callee	free		2663449	0					
ANR	2663626	Identifier	free		2663449	0					
ANR	2663627	ArgumentList	* url		2663449	1					
ANR	2663628	Argument	* url		2663449	0					
ANR	2663629	UnaryOperationExpression	* url		2663449	0					
ANR	2663630	UnaryOperator	*		2663449	0					
ANR	2663631	Identifier	url		2663449	1					
ANR	2663632	ExpressionStatement	* url = ( char * ) malloc ( strlen ( logical_name ) + 8 )	405:4:10323:10368	2663449	1	True				
ANR	2663633	AssignmentExpression	* url = ( char * ) malloc ( strlen ( logical_name ) + 8 )		2663449	0		=			
ANR	2663634	UnaryOperationExpression	* url		2663449	0					
ANR	2663635	UnaryOperator	*		2663449	0					
ANR	2663636	Identifier	url		2663449	1					
ANR	2663637	CastExpression	( char * ) malloc ( strlen ( logical_name ) + 8 )		2663449	1					
ANR	2663638	CastTarget	char *		2663449	0					
ANR	2663639	CallExpression	malloc ( strlen ( logical_name ) + 8 )		2663449	1					
ANR	2663640	Callee	malloc		2663449	0					
ANR	2663641	Identifier	malloc		2663449	0					
ANR	2663642	ArgumentList	strlen ( logical_name ) + 8		2663449	1					
ANR	2663643	Argument	strlen ( logical_name ) + 8		2663449	0					
ANR	2663644	AdditiveExpression	strlen ( logical_name ) + 8		2663449	0		+			
ANR	2663645	CallExpression	strlen ( logical_name )		2663449	0					
ANR	2663646	Callee	strlen		2663449	0					
ANR	2663647	Identifier	strlen		2663449	0					
ANR	2663648	ArgumentList	logical_name		2663449	1					
ANR	2663649	Argument	logical_name		2663449	0					
ANR	2663650	Identifier	logical_name		2663449	0					
ANR	2663651	PrimaryExpression	8		2663449	1					
ANR	2663652	ExpressionStatement	"sprintf ( * url , ""buffer:remote:%s"" , logical_name )"	406:4:10374:10419	2663449	2	True				
ANR	2663653	CallExpression	"sprintf ( * url , ""buffer:remote:%s"" , logical_name )"		2663449	0					
ANR	2663654	Callee	sprintf		2663449	0					
ANR	2663655	Identifier	sprintf		2663449	0					
ANR	2663656	ArgumentList	* url		2663449	1					
ANR	2663657	Argument	* url		2663449	0					
ANR	2663658	UnaryOperationExpression	* url		2663449	0					
ANR	2663659	UnaryOperator	*		2663449	0					
ANR	2663660	Identifier	url		2663449	1					
ANR	2663661	Argument	"""buffer:remote:%s"""		2663449	1					
ANR	2663662	PrimaryExpression	"""buffer:remote:%s"""		2663449	0					
ANR	2663663	Argument	logical_name		2663449	2					
ANR	2663664	Identifier	logical_name		2663449	0					
ANR	2663665	IfStatement	if ( ! got_buffer_info )		2663449	3					
ANR	2663666	Condition	! got_buffer_info	409:6:10434:10449	2663449	0	True				
ANR	2663667	UnaryOperationExpression	! got_buffer_info		2663449	0					
ANR	2663668	UnaryOperator	!		2663449	0					
ANR	2663669	Identifier	got_buffer_info		2663449	1					
ANR	2663670	CompoundStatement		49:4:1509:1517	2663449	1					
ANR	2663671	IdentifierDeclStatement	int temp ;	410:4:10458:10466	2663449	0	True				
ANR	2663672	IdentifierDecl	temp		2663449	0					
ANR	2663673	IdentifierDeclType	int		2663449	0					
ANR	2663674	Identifier	temp		2663449	1					
ANR	2663675	ExpressionStatement	"REMOTE_CONDOR_get_buffer_info ( & buffer_size , & buffer_block_size , & temp )"	411:4:10472:10557	2663449	1	True				
ANR	2663676	CallExpression	"REMOTE_CONDOR_get_buffer_info ( & buffer_size , & buffer_block_size , & temp )"		2663449	0					
ANR	2663677	Callee	REMOTE_CONDOR_get_buffer_info		2663449	0					
ANR	2663678	Identifier	REMOTE_CONDOR_get_buffer_info		2663449	0					
ANR	2663679	ArgumentList	& buffer_size		2663449	1					
ANR	2663680	Argument	& buffer_size		2663449	0					
ANR	2663681	UnaryOperationExpression	& buffer_size		2663449	0					
ANR	2663682	UnaryOperator	&		2663449	0					
ANR	2663683	Identifier	buffer_size		2663449	1					
ANR	2663684	Argument	& buffer_block_size		2663449	1					
ANR	2663685	UnaryOperationExpression	& buffer_block_size		2663449	0					
ANR	2663686	UnaryOperator	&		2663449	0					
ANR	2663687	Identifier	buffer_block_size		2663449	1					
ANR	2663688	Argument	& temp		2663449	2					
ANR	2663689	UnaryOperationExpression	& temp		2663449	0					
ANR	2663690	UnaryOperator	&		2663449	0					
ANR	2663691	Identifier	temp		2663449	1					
ANR	2663692	ExpressionStatement	got_buffer_info = 1	413:4:10563:10582	2663449	2	True				
ANR	2663693	AssignmentExpression	got_buffer_info = 1		2663449	0		=			
ANR	2663694	Identifier	got_buffer_info		2663449	0					
ANR	2663695	PrimaryExpression	1		2663449	1					
ANR	2663696	ReturnType	void		2663449	1					
ANR	2663697	Identifier	CondorFileTable :: lookup_url		2663449	2					
ANR	2663698	ParameterList	"char * logical_name , char * * url"		2663449	3					
ANR	2663699	Parameter	char * logical_name	361:34:8915:8932	2663449	0	True				
ANR	2663700	ParameterType	char *		2663449	0					
ANR	2663701	Identifier	logical_name		2663449	1					
ANR	2663702	Parameter	char * * url	361:54:8935:8944	2663449	1	True				
ANR	2663703	ParameterType	char * *		2663449	0					
ANR	2663704	Identifier	url		2663449	1					
ANR	2663705	CFGEntryNode	ENTRY		2663449		True				
ANR	2663706	CFGExitNode	EXIT		2663449		True				
ANR	2663707	Symbol	strcmp		2663449						
ANR	2663708	Symbol	malloc		2663449						
ANR	2663709	Symbol	logical_name		2663449						
ANR	2663710	Symbol	temp		2663449						
ANR	2663711	Symbol	& buffer_block_size		2663449						
ANR	2663712	Symbol	TRUE		2663449						
ANR	2663713	Symbol	& buffer_size		2663449						
ANR	2663714	Symbol	LocalSysCalls		2663449						
ANR	2663715	Symbol	REMOTE_CONDOR_get_file_info_new		2663449						
ANR	2663716	Symbol	url		2663449						
ANR	2663717	Symbol	result		2663449						
ANR	2663718	Symbol	never_ask_shadow		2663449						
ANR	2663719	Symbol	strlen		2663449						
ANR	2663720	Symbol	* url		2663449						
ANR	2663721	Symbol	FALSE		2663449						
ANR	2663722	Symbol	got_buffer_info		2663449						
ANR	2663723	Symbol	strdup		2663449						
ANR	2663724	Symbol	& temp		2663449						
ANR	2663725	Function	CondorFileTable :: create_url_chain	424:0:10757:11030							
ANR	2663726	FunctionDef	CondorFileTable :: create_url_chain (char const * url)		2663725	0					
ANR	2663727	CompoundStatement		425:0:10823:11030	2663725	0					
ANR	2663728	IdentifierDeclStatement	char * method = ( char * ) malloc ( strlen ( url ) + 1 ) ;	426:1:10826:10870	2663725	0	True				
ANR	2663729	IdentifierDecl	* method = ( char * ) malloc ( strlen ( url ) + 1 )		2663725	0					
ANR	2663730	IdentifierDeclType	char *		2663725	0					
ANR	2663731	Identifier	method		2663725	1					
ANR	2663732	AssignmentExpression	* method = ( char * ) malloc ( strlen ( url ) + 1 )		2663725	2		=			
ANR	2663733	Identifier	method		2663725	0					
ANR	2663734	CastExpression	( char * ) malloc ( strlen ( url ) + 1 )		2663725	1					
ANR	2663735	CastTarget	char *		2663725	0					
ANR	2663736	CallExpression	malloc ( strlen ( url ) + 1 )		2663725	1					
ANR	2663737	Callee	malloc		2663725	0					
ANR	2663738	Identifier	malloc		2663725	0					
ANR	2663739	ArgumentList	strlen ( url ) + 1		2663725	1					
ANR	2663740	Argument	strlen ( url ) + 1		2663725	0					
ANR	2663741	AdditiveExpression	strlen ( url ) + 1		2663725	0		+			
ANR	2663742	CallExpression	strlen ( url )		2663725	0					
ANR	2663743	Callee	strlen		2663725	0					
ANR	2663744	Identifier	strlen		2663725	0					
ANR	2663745	ArgumentList	url		2663725	1					
ANR	2663746	Argument	url		2663725	0					
ANR	2663747	Identifier	url		2663725	0					
ANR	2663748	PrimaryExpression	1		2663725	1					
ANR	2663749	IdentifierDeclStatement	char * rest = ( char * ) malloc ( strlen ( url ) + 1 ) ;	427:1:10873:10915	2663725	1	True				
ANR	2663750	IdentifierDecl	* rest = ( char * ) malloc ( strlen ( url ) + 1 )		2663725	0					
ANR	2663751	IdentifierDeclType	char *		2663725	0					
ANR	2663752	Identifier	rest		2663725	1					
ANR	2663753	AssignmentExpression	* rest = ( char * ) malloc ( strlen ( url ) + 1 )		2663725	2		=			
ANR	2663754	Identifier	rest		2663725	0					
ANR	2663755	CastExpression	( char * ) malloc ( strlen ( url ) + 1 )		2663725	1					
ANR	2663756	CastTarget	char *		2663725	0					
ANR	2663757	CallExpression	malloc ( strlen ( url ) + 1 )		2663725	1					
ANR	2663758	Callee	malloc		2663725	0					
ANR	2663759	Identifier	malloc		2663725	0					
ANR	2663760	ArgumentList	strlen ( url ) + 1		2663725	1					
ANR	2663761	Argument	strlen ( url ) + 1		2663725	0					
ANR	2663762	AdditiveExpression	strlen ( url ) + 1		2663725	0		+			
ANR	2663763	CallExpression	strlen ( url )		2663725	0					
ANR	2663764	Callee	strlen		2663725	0					
ANR	2663765	Identifier	strlen		2663725	0					
ANR	2663766	ArgumentList	url		2663725	1					
ANR	2663767	Argument	url		2663725	0					
ANR	2663768	Identifier	url		2663725	0					
ANR	2663769	PrimaryExpression	1		2663725	1					
ANR	2663770	IdentifierDeclStatement	"CondorFile * result = create_url_chain ( url , method , rest ) ;"	429:1:10919:10978	2663725	2	True				
ANR	2663771	IdentifierDecl	"* result = create_url_chain ( url , method , rest )"		2663725	0					
ANR	2663772	IdentifierDeclType	CondorFile *		2663725	0					
ANR	2663773	Identifier	result		2663725	1					
ANR	2663774	AssignmentExpression	"* result = create_url_chain ( url , method , rest )"		2663725	2		=			
ANR	2663775	Identifier	result		2663725	0					
ANR	2663776	CallExpression	"create_url_chain ( url , method , rest )"		2663725	1					
ANR	2663777	Callee	create_url_chain		2663725	0					
ANR	2663778	Identifier	create_url_chain		2663725	0					
ANR	2663779	ArgumentList	url		2663725	1					
ANR	2663780	Argument	url		2663725	0					
ANR	2663781	Identifier	url		2663725	0					
ANR	2663782	Argument	method		2663725	1					
ANR	2663783	Identifier	method		2663725	0					
ANR	2663784	Argument	rest		2663725	2					
ANR	2663785	Identifier	rest		2663725	0					
ANR	2663786	ExpressionStatement	free ( method )	431:1:10982:10996	2663725	3	True				
ANR	2663787	CallExpression	free ( method )		2663725	0					
ANR	2663788	Callee	free		2663725	0					
ANR	2663789	Identifier	free		2663725	0					
ANR	2663790	ArgumentList	method		2663725	1					
ANR	2663791	Argument	method		2663725	0					
ANR	2663792	Identifier	method		2663725	0					
ANR	2663793	ExpressionStatement	free ( rest )	432:1:10999:11011	2663725	4	True				
ANR	2663794	CallExpression	free ( rest )		2663725	0					
ANR	2663795	Callee	free		2663725	0					
ANR	2663796	Identifier	free		2663725	0					
ANR	2663797	ArgumentList	rest		2663725	1					
ANR	2663798	Argument	rest		2663725	0					
ANR	2663799	Identifier	rest		2663725	0					
ANR	2663800	ReturnStatement	return result ;	434:1:11015:11028	2663725	5	True				
ANR	2663801	Identifier	result		2663725	0					
ANR	2663802	ReturnType	CondorFile *		2663725	1					
ANR	2663803	Identifier	CondorFileTable :: create_url_chain		2663725	2					
ANR	2663804	ParameterList	char const * url		2663725	3					
ANR	2663805	Parameter	char const * url	424:48:10805:10819	2663725	0	True				
ANR	2663806	ParameterType	char const *		2663725	0					
ANR	2663807	Identifier	url		2663725	1					
ANR	2663808	CFGEntryNode	ENTRY		2663725		True				
ANR	2663809	CFGExitNode	EXIT		2663725		True				
ANR	2663810	Symbol	result		2663725						
ANR	2663811	Symbol	malloc		2663725						
ANR	2663812	Symbol	strlen		2663725						
ANR	2663813	Symbol	rest		2663725						
ANR	2663814	Symbol	create_url_chain		2663725						
ANR	2663815	Symbol	method		2663725						
ANR	2663816	Symbol	url		2663725						
ANR	2663817	Function	CondorFileTable :: create_url_chain	437:0:11033:12738							
ANR	2663818	FunctionDef	"CondorFileTable :: create_url_chain (char const * url , char * method , char * rest)"		2663817	0					
ANR	2663819	CompoundStatement		438:0:11125:12738	2663817	0					
ANR	2663820	IdentifierDeclStatement	char * next ;	439:1:11128:11138	2663817	0	True				
ANR	2663821	IdentifierDecl	* next		2663817	0					
ANR	2663822	IdentifierDeclType	char *		2663817	0					
ANR	2663823	Identifier	next		2663817	1					
ANR	2663824	IdentifierDeclStatement	CondorFile * f ;	440:1:11141:11154	2663817	1	True				
ANR	2663825	IdentifierDecl	* f		2663817	0					
ANR	2663826	IdentifierDeclType	CondorFile *		2663817	0					
ANR	2663827	Identifier	f		2663817	1					
ANR	2663828	IdentifierDeclStatement	"int fields = sscanf ( url , ""%[^:]:%[\\x1-\\x7F]"" , method , rest ) ;"	446:1:11322:11383	2663817	2	True				
ANR	2663829	IdentifierDecl	"fields = sscanf ( url , ""%[^:]:%[\\x1-\\x7F]"" , method , rest )"		2663817	0					
ANR	2663830	IdentifierDeclType	int		2663817	0					
ANR	2663831	Identifier	fields		2663817	1					
ANR	2663832	AssignmentExpression	"fields = sscanf ( url , ""%[^:]:%[\\x1-\\x7F]"" , method , rest )"		2663817	2		=			
ANR	2663833	Identifier	fields		2663817	0					
ANR	2663834	CallExpression	"sscanf ( url , ""%[^:]:%[\\x1-\\x7F]"" , method , rest )"		2663817	1					
ANR	2663835	Callee	sscanf		2663817	0					
ANR	2663836	Identifier	sscanf		2663817	0					
ANR	2663837	ArgumentList	url		2663817	1					
ANR	2663838	Argument	url		2663817	0					
ANR	2663839	Identifier	url		2663817	0					
ANR	2663840	Argument	"""%[^:]:%[\\x1-\\x7F]"""		2663817	1					
ANR	2663841	PrimaryExpression	"""%[^:]:%[\\x1-\\x7F]"""		2663817	0					
ANR	2663842	Argument	method		2663817	2					
ANR	2663843	Identifier	method		2663817	0					
ANR	2663844	Argument	rest		2663817	3					
ANR	2663845	Identifier	rest		2663817	0					
ANR	2663846	IfStatement	if ( fields != 2 )		2663817	3					
ANR	2663847	Condition	fields != 2	451:5:11470:11478	2663817	0	True				
ANR	2663848	EqualityExpression	fields != 2		2663817	0		!=			
ANR	2663849	Identifier	fields		2663817	0					
ANR	2663850	PrimaryExpression	2		2663817	1					
ANR	2663851	ReturnStatement	return 0 ;	451:17:11482:11490	2663817	1	True				
ANR	2663852	PrimaryExpression	0		2663817	0					
ANR	2663853	ExpressionStatement	next = rest	456:1:11604:11615	2663817	4	True				
ANR	2663854	AssignmentExpression	next = rest		2663817	0		=			
ANR	2663855	Identifier	next		2663817	0					
ANR	2663856	Identifier	rest		2663817	1					
ANR	2663857	IfStatement	if ( * next == '(' )		2663817	5					
ANR	2663858	Condition	* next == '('	457:5:11622:11631	2663817	0	True				
ANR	2663859	EqualityExpression	* next == '('		2663817	0		==			
ANR	2663860	UnaryOperationExpression	* next		2663817	0					
ANR	2663861	UnaryOperator	*		2663817	0					
ANR	2663862	Identifier	next		2663817	1					
ANR	2663863	PrimaryExpression	'('		2663817	1					
ANR	2663864	CompoundStatement		20:18:509:509	2663817	1					
ANR	2663865	WhileStatement	while ( * next )		2663817	0					
ANR	2663866	Condition	* next	458:8:11645:11649	2663817	0	True				
ANR	2663867	UnaryOperationExpression	* next		2663817	0					
ANR	2663868	UnaryOperator	*		2663817	0					
ANR	2663869	Identifier	next		2663817	1					
ANR	2663870	CompoundStatement		21:15:526:526	2663817	1					
ANR	2663871	ExpressionStatement	next ++	459:3:11657:11663	2663817	0	True				
ANR	2663872	PostIncDecOperationExpression	next ++		2663817	0					
ANR	2663873	Identifier	next		2663817	0					
ANR	2663874	IncDec	++		2663817	1					
ANR	2663875	IfStatement	if ( * next == ')' )		2663817	1					
ANR	2663876	Condition	* next == ')'	460:6:11671:11680	2663817	0	True				
ANR	2663877	EqualityExpression	* next == ')'		2663817	0		==			
ANR	2663878	UnaryOperationExpression	* next		2663817	0					
ANR	2663879	UnaryOperator	*		2663817	0					
ANR	2663880	Identifier	next		2663817	1					
ANR	2663881	PrimaryExpression	')'		2663817	1					
ANR	2663882	CompoundStatement		23:18:557:557	2663817	1					
ANR	2663883	ExpressionStatement	next ++	461:4:11689:11695	2663817	0	True				
ANR	2663884	PostIncDecOperationExpression	next ++		2663817	0					
ANR	2663885	Identifier	next		2663817	0					
ANR	2663886	IncDec	++		2663817	1					
ANR	2663887	BreakStatement	break ;	462:4:11701:11706	2663817	1	True				
ANR	2663888	IfStatement	"if ( ! strcmp ( method , ""local"" ) )"		2663817	6					
ANR	2663889	Condition	"! strcmp ( method , ""local"" )"	469:5:11758:11783	2663817	0	True				
ANR	2663890	UnaryOperationExpression	"! strcmp ( method , ""local"" )"		2663817	0					
ANR	2663891	UnaryOperator	!		2663817	0					
ANR	2663892	CallExpression	"strcmp ( method , ""local"" )"		2663817	1					
ANR	2663893	Callee	strcmp		2663817	0					
ANR	2663894	Identifier	strcmp		2663817	0					
ANR	2663895	ArgumentList	method		2663817	1					
ANR	2663896	Argument	method		2663817	0					
ANR	2663897	Identifier	method		2663817	0					
ANR	2663898	Argument	"""local"""		2663817	1					
ANR	2663899	PrimaryExpression	"""local"""		2663817	0					
ANR	2663900	CompoundStatement		32:34:661:661	2663817	1					
ANR	2663901	Statement	return	470:2:11791:11796	2663817	0	True				
ANR	2663902	Statement	new	470:9:11798:11800	2663817	1	True				
ANR	2663903	ExpressionStatement	CondorFileLocal	470:13:11802:11817	2663817	2	True				
ANR	2663904	Identifier	CondorFileLocal		2663817	0					
ANR	2663905	ElseStatement	else		2663817	0					
ANR	2663906	IfStatement	"if ( ! strcmp ( method , ""fd"" ) )"		2663817	0					
ANR	2663907	Condition	"! strcmp ( method , ""fd"" )"	471:12:11831:11853	2663817	0	True				
ANR	2663908	UnaryOperationExpression	"! strcmp ( method , ""fd"" )"		2663817	0					
ANR	2663909	UnaryOperator	!		2663817	0					
ANR	2663910	CallExpression	"strcmp ( method , ""fd"" )"		2663817	1					
ANR	2663911	Callee	strcmp		2663817	0					
ANR	2663912	Identifier	strcmp		2663817	0					
ANR	2663913	ArgumentList	method		2663817	1					
ANR	2663914	Argument	method		2663817	0					
ANR	2663915	Identifier	method		2663817	0					
ANR	2663916	Argument	"""fd"""		2663817	1					
ANR	2663917	PrimaryExpression	"""fd"""		2663817	0					
ANR	2663918	CompoundStatement		34:39:732:732	2663817	1					
ANR	2663919	Statement	return	472:2:11862:11867	2663817	0	True				
ANR	2663920	Statement	new	472:9:11869:11871	2663817	1	True				
ANR	2663921	ExpressionStatement	CondorFileFD	472:13:11873:11885	2663817	2	True				
ANR	2663922	Identifier	CondorFileFD		2663817	0					
ANR	2663923	ElseStatement	else		2663817	0					
ANR	2663924	IfStatement	"if ( ! strcmp ( method , ""special"" ) )"		2663817	0					
ANR	2663925	Condition	"! strcmp ( method , ""special"" )"	473:12:11899:11926	2663817	0	True				
ANR	2663926	UnaryOperationExpression	"! strcmp ( method , ""special"" )"		2663817	0					
ANR	2663927	UnaryOperator	!		2663817	0					
ANR	2663928	CallExpression	"strcmp ( method , ""special"" )"		2663817	1					
ANR	2663929	Callee	strcmp		2663817	0					
ANR	2663930	Identifier	strcmp		2663817	0					
ANR	2663931	ArgumentList	method		2663817	1					
ANR	2663932	Argument	method		2663817	0					
ANR	2663933	Identifier	method		2663817	0					
ANR	2663934	Argument	"""special"""		2663817	1					
ANR	2663935	PrimaryExpression	"""special"""		2663817	0					
ANR	2663936	CompoundStatement		36:43:804:804	2663817	1					
ANR	2663937	Statement	return	474:2:11934:11939	2663817	0	True				
ANR	2663938	Statement	new	474:9:11941:11943	2663817	1	True				
ANR	2663939	ExpressionStatement	CondorFileSpecial	474:13:11945:11962	2663817	2	True				
ANR	2663940	Identifier	CondorFileSpecial		2663817	0					
ANR	2663941	ElseStatement	else		2663817	0					
ANR	2663942	IfStatement	"if ( ! strcmp ( method , ""remote"" ) )"		2663817	0					
ANR	2663943	Condition	"! strcmp ( method , ""remote"" )"	475:12:11976:12002	2663817	0	True				
ANR	2663944	UnaryOperationExpression	"! strcmp ( method , ""remote"" )"		2663817	0					
ANR	2663945	UnaryOperator	!		2663817	0					
ANR	2663946	CallExpression	"strcmp ( method , ""remote"" )"		2663817	1					
ANR	2663947	Callee	strcmp		2663817	0					
ANR	2663948	Identifier	strcmp		2663817	0					
ANR	2663949	ArgumentList	method		2663817	1					
ANR	2663950	Argument	method		2663817	0					
ANR	2663951	Identifier	method		2663817	0					
ANR	2663952	Argument	"""remote"""		2663817	1					
ANR	2663953	PrimaryExpression	"""remote"""		2663817	0					
ANR	2663954	CompoundStatement		38:42:880:880	2663817	1					
ANR	2663955	Statement	return	476:2:12010:12015	2663817	0	True				
ANR	2663956	Statement	new	476:9:12017:12019	2663817	1	True				
ANR	2663957	ExpressionStatement	CondorFileRemote	476:13:12021:12037	2663817	2	True				
ANR	2663958	Identifier	CondorFileRemote		2663817	0					
ANR	2663959	ElseStatement	else		2663817	0					
ANR	2663960	IfStatement	"if ( ! strcmp ( method , ""buffer"" ) )"		2663817	0					
ANR	2663961	Condition	"! strcmp ( method , ""buffer"" )"	477:12:12051:12077	2663817	0	True				
ANR	2663962	UnaryOperationExpression	"! strcmp ( method , ""buffer"" )"		2663817	0					
ANR	2663963	UnaryOperator	!		2663817	0					
ANR	2663964	CallExpression	"strcmp ( method , ""buffer"" )"		2663817	1					
ANR	2663965	Callee	strcmp		2663817	0					
ANR	2663966	Identifier	strcmp		2663817	0					
ANR	2663967	ArgumentList	method		2663817	1					
ANR	2663968	Argument	method		2663817	0					
ANR	2663969	Identifier	method		2663817	0					
ANR	2663970	Argument	"""buffer"""		2663817	1					
ANR	2663971	PrimaryExpression	"""buffer"""		2663817	0					
ANR	2663972	CompoundStatement		40:42:955:955	2663817	1					
ANR	2663973	ExpressionStatement	f = create_url_chain ( next )	478:2:12085:12113	2663817	0	True				
ANR	2663974	AssignmentExpression	f = create_url_chain ( next )		2663817	0		=			
ANR	2663975	Identifier	f		2663817	0					
ANR	2663976	CallExpression	create_url_chain ( next )		2663817	1					
ANR	2663977	Callee	create_url_chain		2663817	0					
ANR	2663978	Identifier	create_url_chain		2663817	0					
ANR	2663979	ArgumentList	next		2663817	1					
ANR	2663980	Argument	next		2663817	0					
ANR	2663981	Identifier	next		2663817	0					
ANR	2663982	IfStatement	if ( f )		2663817	1					
ANR	2663983	Condition	f	479:5:12120:12120	2663817	0	True				
ANR	2663984	Identifier	f		2663817	0					
ANR	2663985	ReturnStatement	"return new CondorFileBuffer ( f , buffer_size , buffer_block_size ) ;"	479:8:12123:12187	2663817	1	True				
ANR	2663986	Expression	"f , buffer_size , buffer_block_size"		2663817	0					
ANR	2663987	Identifier	f		2663817	0					
ANR	2663988	Expression	"buffer_size , buffer_block_size"		2663817	1					
ANR	2663989	Identifier	buffer_size		2663817	0					
ANR	2663990	Identifier	buffer_block_size		2663817	1					
ANR	2663991	ElseStatement	else		2663817	0					
ANR	2663992	ReturnStatement	return 0 ;	480:7:12196:12204	2663817	0	True				
ANR	2663993	PrimaryExpression	0		2663817	0					
ANR	2663994	ElseStatement	else		2663817	0					
ANR	2663995	IfStatement	"if ( ! strcmp ( method , ""fetch"" ) )"		2663817	0					
ANR	2663996	Condition	"! strcmp ( method , ""fetch"" )"	481:12:12218:12243	2663817	0	True				
ANR	2663997	UnaryOperationExpression	"! strcmp ( method , ""fetch"" )"		2663817	0					
ANR	2663998	UnaryOperator	!		2663817	0					
ANR	2663999	CallExpression	"strcmp ( method , ""fetch"" )"		2663817	1					
ANR	2664000	Callee	strcmp		2663817	0					
ANR	2664001	Identifier	strcmp		2663817	0					
ANR	2664002	ArgumentList	method		2663817	1					
ANR	2664003	Argument	method		2663817	0					
ANR	2664004	Identifier	method		2663817	0					
ANR	2664005	Argument	"""fetch"""		2663817	1					
ANR	2664006	PrimaryExpression	"""fetch"""		2663817	0					
ANR	2664007	CompoundStatement		44:41:1121:1121	2663817	1					
ANR	2664008	ExpressionStatement	f = create_url_chain ( next )	482:2:12251:12279	2663817	0	True				
ANR	2664009	AssignmentExpression	f = create_url_chain ( next )		2663817	0		=			
ANR	2664010	Identifier	f		2663817	0					
ANR	2664011	CallExpression	create_url_chain ( next )		2663817	1					
ANR	2664012	Callee	create_url_chain		2663817	0					
ANR	2664013	Identifier	create_url_chain		2663817	0					
ANR	2664014	ArgumentList	next		2663817	1					
ANR	2664015	Argument	next		2663817	0					
ANR	2664016	Identifier	next		2663817	0					
ANR	2664017	IfStatement	if ( f )		2663817	1					
ANR	2664018	Condition	f	483:5:12286:12286	2663817	0	True				
ANR	2664019	Identifier	f		2663817	0					
ANR	2664020	ReturnStatement	return new CondorFileAgent ( f ) ;	483:8:12289:12320	2663817	1	True				
ANR	2664021	Identifier	f		2663817	0					
ANR	2664022	ElseStatement	else		2663817	0					
ANR	2664023	ReturnStatement	return 0 ;	484:7:12329:12337	2663817	0	True				
ANR	2664024	PrimaryExpression	0		2663817	0					
ANR	2664025	ElseStatement	else		2663817	0					
ANR	2664026	IfStatement	"if ( ! strcmp ( method , ""compress"" ) )"		2663817	0					
ANR	2664027	Condition	"! strcmp ( method , ""compress"" )"	485:12:12351:12379	2663817	0	True				
ANR	2664028	UnaryOperationExpression	"! strcmp ( method , ""compress"" )"		2663817	0					
ANR	2664029	UnaryOperator	!		2663817	0					
ANR	2664030	CallExpression	"strcmp ( method , ""compress"" )"		2663817	1					
ANR	2664031	Callee	strcmp		2663817	0					
ANR	2664032	Identifier	strcmp		2663817	0					
ANR	2664033	ArgumentList	method		2663817	1					
ANR	2664034	Argument	method		2663817	0					
ANR	2664035	Identifier	method		2663817	0					
ANR	2664036	Argument	"""compress"""		2663817	1					
ANR	2664037	PrimaryExpression	"""compress"""		2663817	0					
ANR	2664038	CompoundStatement		48:44:1257:1257	2663817	1					
ANR	2664039	ExpressionStatement	f = create_url_chain ( next )	486:2:12387:12415	2663817	0	True				
ANR	2664040	AssignmentExpression	f = create_url_chain ( next )		2663817	0		=			
ANR	2664041	Identifier	f		2663817	0					
ANR	2664042	CallExpression	create_url_chain ( next )		2663817	1					
ANR	2664043	Callee	create_url_chain		2663817	0					
ANR	2664044	Identifier	create_url_chain		2663817	0					
ANR	2664045	ArgumentList	next		2663817	1					
ANR	2664046	Argument	next		2663817	0					
ANR	2664047	Identifier	next		2663817	0					
ANR	2664048	IfStatement	if ( f )		2663817	1					
ANR	2664049	Condition	f	487:5:12422:12422	2663817	0	True				
ANR	2664050	Identifier	f		2663817	0					
ANR	2664051	ReturnStatement	return new CondorFileCompress ( f ) ;	487:8:12425:12459	2663817	1	True				
ANR	2664052	Identifier	f		2663817	0					
ANR	2664053	ElseStatement	else		2663817	0					
ANR	2664054	ReturnStatement	return 0 ;	488:7:12468:12476	2663817	0	True				
ANR	2664055	PrimaryExpression	0		2663817	0					
ANR	2664056	ElseStatement	else		2663817	0					
ANR	2664057	IfStatement	"if ( ! strcmp ( method , ""append"" ) )"		2663817	0					
ANR	2664058	Condition	"! strcmp ( method , ""append"" )"	489:12:12490:12516	2663817	0	True				
ANR	2664059	UnaryOperationExpression	"! strcmp ( method , ""append"" )"		2663817	0					
ANR	2664060	UnaryOperator	!		2663817	0					
ANR	2664061	CallExpression	"strcmp ( method , ""append"" )"		2663817	1					
ANR	2664062	Callee	strcmp		2663817	0					
ANR	2664063	Identifier	strcmp		2663817	0					
ANR	2664064	ArgumentList	method		2663817	1					
ANR	2664065	Argument	method		2663817	0					
ANR	2664066	Identifier	method		2663817	0					
ANR	2664067	Argument	"""append"""		2663817	1					
ANR	2664068	PrimaryExpression	"""append"""		2663817	0					
ANR	2664069	CompoundStatement		52:42:1394:1394	2663817	1					
ANR	2664070	ExpressionStatement	f = create_url_chain ( next )	490:2:12524:12552	2663817	0	True				
ANR	2664071	AssignmentExpression	f = create_url_chain ( next )		2663817	0		=			
ANR	2664072	Identifier	f		2663817	0					
ANR	2664073	CallExpression	create_url_chain ( next )		2663817	1					
ANR	2664074	Callee	create_url_chain		2663817	0					
ANR	2664075	Identifier	create_url_chain		2663817	0					
ANR	2664076	ArgumentList	next		2663817	1					
ANR	2664077	Argument	next		2663817	0					
ANR	2664078	Identifier	next		2663817	0					
ANR	2664079	IfStatement	if ( f )		2663817	1					
ANR	2664080	Condition	f	491:5:12559:12559	2663817	0	True				
ANR	2664081	Identifier	f		2663817	0					
ANR	2664082	ReturnStatement	return new CondorFileAppend ( f ) ;	491:8:12562:12594	2663817	1	True				
ANR	2664083	Identifier	f		2663817	0					
ANR	2664084	ElseStatement	else		2663817	0					
ANR	2664085	ReturnStatement	return 0 ;	492:7:12603:12611	2663817	0	True				
ANR	2664086	PrimaryExpression	0		2663817	0					
ANR	2664087	ElseStatement	else		2663817	0					
ANR	2664088	CompoundStatement		56:8:1495:1495	2663817	0					
ANR	2664089	ExpressionStatement	"_condor_warning ( CONDOR_WARNING_KIND_BADURL , ""I don't understand url (%s)."" , url )"	494:2:12625:12703	2663817	0	True				
ANR	2664090	CallExpression	"_condor_warning ( CONDOR_WARNING_KIND_BADURL , ""I don't understand url (%s)."" , url )"		2663817	0					
ANR	2664091	Callee	_condor_warning		2663817	0					
ANR	2664092	Identifier	_condor_warning		2663817	0					
ANR	2664093	ArgumentList	CONDOR_WARNING_KIND_BADURL		2663817	1					
ANR	2664094	Argument	CONDOR_WARNING_KIND_BADURL		2663817	0					
ANR	2664095	Identifier	CONDOR_WARNING_KIND_BADURL		2663817	0					
ANR	2664096	Argument	"""I don't understand url (%s)."""		2663817	1					
ANR	2664097	PrimaryExpression	"""I don't understand url (%s)."""		2663817	0					
ANR	2664098	Argument	url		2663817	2					
ANR	2664099	Identifier	url		2663817	0					
ANR	2664100	ExpressionStatement	errno = ENOENT	495:2:12707:12721	2663817	1	True				
ANR	2664101	AssignmentExpression	errno = ENOENT		2663817	0		=			
ANR	2664102	Identifier	errno		2663817	0					
ANR	2664103	Identifier	ENOENT		2663817	1					
ANR	2664104	ReturnStatement	return 0 ;	496:2:12725:12733	2663817	2	True				
ANR	2664105	PrimaryExpression	0		2663817	0					
ANR	2664106	ReturnType	CondorFile *		2663817	1					
ANR	2664107	Identifier	CondorFileTable :: create_url_chain		2663817	2					
ANR	2664108	ParameterList	"char const * url , char * method , char * rest"		2663817	3					
ANR	2664109	Parameter	char const * url	437:48:11081:11095	2663817	0	True				
ANR	2664110	ParameterType	char const *		2663817	0					
ANR	2664111	Identifier	url		2663817	1					
ANR	2664112	Parameter	char * method	437:65:11098:11109	2663817	1	True				
ANR	2664113	ParameterType	char *		2663817	0					
ANR	2664114	Identifier	method		2663817	1					
ANR	2664115	Parameter	char * rest	437:79:11112:11121	2663817	2	True				
ANR	2664116	ParameterType	char *		2663817	0					
ANR	2664117	Identifier	rest		2663817	1					
ANR	2664118	CFGEntryNode	ENTRY		2663817		True				
ANR	2664119	CFGExitNode	EXIT		2663817		True				
ANR	2664120	Symbol	next		2663817						
ANR	2664121	Symbol	strcmp		2663817						
ANR	2664122	Symbol	rest		2663817						
ANR	2664123	Symbol	create_url_chain		2663817						
ANR	2664124	Symbol	errno		2663817						
ANR	2664125	Symbol	method		2663817						
ANR	2664126	Symbol	buffer_block_size		2663817						
ANR	2664127	Symbol	f		2663817						
ANR	2664128	Symbol	buffer_size		2663817						
ANR	2664129	Symbol	* next		2663817						
ANR	2664130	Symbol	ENOENT		2663817						
ANR	2664131	Symbol	CONDOR_WARNING_KIND_BADURL		2663817						
ANR	2664132	Symbol	url		2663817						
ANR	2664133	Symbol	sscanf		2663817						
ANR	2664134	Symbol	fields		2663817						
ANR	2664135	Function	CondorFileTable :: open_url	502:0:12790:13142							
ANR	2664136	FunctionDef	"CondorFileTable :: open_url (char const * url , int flags , int mode)"		2664135	0					
ANR	2664137	CompoundStatement		503:0:12869:13142	2664135	0					
ANR	2664138	IdentifierDeclStatement	CondorFile * f = create_url_chain ( url ) ;	504:1:12872:12911	2664135	0	True				
ANR	2664139	IdentifierDecl	* f = create_url_chain ( url )		2664135	0					
ANR	2664140	IdentifierDeclType	CondorFile *		2664135	0					
ANR	2664141	Identifier	f		2664135	1					
ANR	2664142	AssignmentExpression	* f = create_url_chain ( url )		2664135	2		=			
ANR	2664143	Identifier	f		2664135	0					
ANR	2664144	CallExpression	create_url_chain ( url )		2664135	1					
ANR	2664145	Callee	create_url_chain		2664135	0					
ANR	2664146	Identifier	create_url_chain		2664135	0					
ANR	2664147	ArgumentList	url		2664135	1					
ANR	2664148	Argument	url		2664135	0					
ANR	2664149	Identifier	url		2664135	0					
ANR	2664150	IfStatement	if ( ! f )		2664135	1					
ANR	2664151	Condition	! f	506:5:12919:12920	2664135	0	True				
ANR	2664152	UnaryOperationExpression	! f		2664135	0					
ANR	2664153	UnaryOperator	!		2664135	0					
ANR	2664154	Identifier	f		2664135	1					
ANR	2664155	CompoundStatement		4:10:54:54	2664135	1					
ANR	2664156	ExpressionStatement	"_condor_warning ( CONDOR_WARNING_KIND_BADURL , ""I can't parse url type (%s)."" , url )"	507:2:12928:13006	2664135	0	True				
ANR	2664157	CallExpression	"_condor_warning ( CONDOR_WARNING_KIND_BADURL , ""I can't parse url type (%s)."" , url )"		2664135	0					
ANR	2664158	Callee	_condor_warning		2664135	0					
ANR	2664159	Identifier	_condor_warning		2664135	0					
ANR	2664160	ArgumentList	CONDOR_WARNING_KIND_BADURL		2664135	1					
ANR	2664161	Argument	CONDOR_WARNING_KIND_BADURL		2664135	0					
ANR	2664162	Identifier	CONDOR_WARNING_KIND_BADURL		2664135	0					
ANR	2664163	Argument	"""I can't parse url type (%s)."""		2664135	1					
ANR	2664164	PrimaryExpression	"""I can't parse url type (%s)."""		2664135	0					
ANR	2664165	Argument	url		2664135	2					
ANR	2664166	Identifier	url		2664135	0					
ANR	2664167	ExpressionStatement	errno = ENOENT	508:2:13010:13024	2664135	1	True				
ANR	2664168	AssignmentExpression	errno = ENOENT		2664135	0		=			
ANR	2664169	Identifier	errno		2664135	0					
ANR	2664170	Identifier	ENOENT		2664135	1					
ANR	2664171	ReturnStatement	return 0 ;	509:2:13028:13036	2664135	2	True				
ANR	2664172	PrimaryExpression	0		2664135	0					
ANR	2664173	ElseStatement	else		2664135	0					
ANR	2664174	CompoundStatement		8:8:176:176	2664135	0					
ANR	2664175	IfStatement	"if ( f -> open ( url , flags , mode ) >= 0 )"		2664135	0					
ANR	2664176	Condition	"f -> open ( url , flags , mode ) >= 0"	511:6:13054:13079	2664135	0	True				
ANR	2664177	RelationalExpression	"f -> open ( url , flags , mode ) >= 0"		2664135	0		>=			
ANR	2664178	CallExpression	"f -> open ( url , flags , mode )"		2664135	0					
ANR	2664179	Callee	f -> open		2664135	0					
ANR	2664180	PtrMemberAccess	f -> open		2664135	0					
ANR	2664181	Identifier	f		2664135	0					
ANR	2664182	Identifier	open		2664135	1					
ANR	2664183	ArgumentList	url		2664135	1					
ANR	2664184	Argument	url		2664135	0					
ANR	2664185	Identifier	url		2664135	0					
ANR	2664186	Argument	flags		2664135	1					
ANR	2664187	Identifier	flags		2664135	0					
ANR	2664188	Argument	mode		2664135	2					
ANR	2664189	Identifier	mode		2664135	0					
ANR	2664190	PrimaryExpression	0		2664135	1					
ANR	2664191	CompoundStatement		9:35:213:213	2664135	1					
ANR	2664192	ReturnStatement	return f ;	512:3:13088:13096	2664135	0	True				
ANR	2664193	Identifier	f		2664135	0					
ANR	2664194	ElseStatement	else		2664135	0					
ANR	2664195	CompoundStatement		11:9:237:237	2664135	0					
ANR	2664196	Statement	delete	514:3:13112:13117	2664135	0	True				
ANR	2664197	ExpressionStatement	f	514:10:13119:13120	2664135	1	True				
ANR	2664198	Identifier	f		2664135	0					
ANR	2664199	ReturnStatement	return 0 ;	515:3:13125:13133	2664135	2	True				
ANR	2664200	PrimaryExpression	0		2664135	0					
ANR	2664201	ReturnType	CondorFile *		2664135	1					
ANR	2664202	Identifier	CondorFileTable :: open_url		2664135	2					
ANR	2664203	ParameterList	"char const * url , int flags , int mode"		2664135	3					
ANR	2664204	Parameter	char const * url	502:40:12830:12844	2664135	0	True				
ANR	2664205	ParameterType	char const *		2664135	0					
ANR	2664206	Identifier	url		2664135	1					
ANR	2664207	Parameter	int flags	502:57:12847:12855	2664135	1	True				
ANR	2664208	ParameterType	int		2664135	0					
ANR	2664209	Identifier	flags		2664135	1					
ANR	2664210	Parameter	int mode	502:68:12858:12865	2664135	2	True				
ANR	2664211	ParameterType	int		2664135	0					
ANR	2664212	Identifier	mode		2664135	1					
ANR	2664213	CFGEntryNode	ENTRY		2664135		True				
ANR	2664214	CFGExitNode	EXIT		2664135		True				
ANR	2664215	Symbol	mode		2664135						
ANR	2664216	Symbol	* f		2664135						
ANR	2664217	Symbol	create_url_chain		2664135						
ANR	2664218	Symbol	errno		2664135						
ANR	2664219	Symbol	f		2664135						
ANR	2664220	Symbol	flags		2664135						
ANR	2664221	Symbol	f -> open		2664135						
ANR	2664222	Symbol	ENOENT		2664135						
ANR	2664223	Symbol	CONDOR_WARNING_KIND_BADURL		2664135						
ANR	2664224	Symbol	url		2664135						
ANR	2664225	Function	CondorFileTable :: open_url_retry	522:0:13227:13760							
ANR	2664226	FunctionDef	"CondorFileTable :: open_url_retry (char const * url , int flags , int mode)"		2664225	0					
ANR	2664227	CompoundStatement		523:0:13312:13760	2664225	0					
ANR	2664228	IdentifierDeclStatement	CondorFile * f ;	524:1:13315:13328	2664225	0	True				
ANR	2664229	IdentifierDecl	* f		2664225	0					
ANR	2664230	IdentifierDeclType	CondorFile *		2664225	0					
ANR	2664231	Identifier	f		2664225	1					
ANR	2664232	ExpressionStatement	"f = open_url ( url , flags , mode )"	526:1:13332:13364	2664225	1	True				
ANR	2664233	AssignmentExpression	"f = open_url ( url , flags , mode )"		2664225	0		=			
ANR	2664234	Identifier	f		2664225	0					
ANR	2664235	CallExpression	"open_url ( url , flags , mode )"		2664225	1					
ANR	2664236	Callee	open_url		2664225	0					
ANR	2664237	Identifier	open_url		2664225	0					
ANR	2664238	ArgumentList	url		2664225	1					
ANR	2664239	Argument	url		2664225	0					
ANR	2664240	Identifier	url		2664225	0					
ANR	2664241	Argument	flags		2664225	1					
ANR	2664242	Identifier	flags		2664225	0					
ANR	2664243	Argument	mode		2664225	2					
ANR	2664244	Identifier	mode		2664225	0					
ANR	2664245	IfStatement	if ( f )		2664225	2					
ANR	2664246	Condition	f	527:4:13370:13370	2664225	0	True				
ANR	2664247	Identifier	f		2664225	0					
ANR	2664248	ReturnStatement	return f ;	527:7:13373:13381	2664225	1	True				
ANR	2664249	Identifier	f		2664225	0					
ANR	2664250	IfStatement	if ( RemoteSysCalls ( ) )		2664225	3					
ANR	2664251	Condition	RemoteSysCalls ( )	529:5:13389:13404	2664225	0	True				
ANR	2664252	CallExpression	RemoteSysCalls ( )		2664225	0					
ANR	2664253	Callee	RemoteSysCalls		2664225	0					
ANR	2664254	Identifier	RemoteSysCalls		2664225	0					
ANR	2664255	ArgumentList			2664225	1					
ANR	2664256	CompoundStatement		20:2:341:394	2664225	1					
ANR	2664257	IdentifierDeclStatement	char * path ;	530:2:13412:13422	2664225	0	True				
ANR	2664258	IdentifierDecl	* path		2664225	0					
ANR	2664259	IdentifierDeclType	char *		2664225	0					
ANR	2664260	Identifier	path		2664225	1					
ANR	2664261	IfStatement	"if ( strstr ( url , ""remote:"" ) )"		2664225	1					
ANR	2664262	Condition	"strstr ( url , ""remote:"" )"	532:6:13431:13451	2664225	0	True				
ANR	2664263	CallExpression	"strstr ( url , ""remote:"" )"		2664225	0					
ANR	2664264	Callee	strstr		2664225	0					
ANR	2664265	Identifier	strstr		2664225	0					
ANR	2664266	ArgumentList	url		2664225	1					
ANR	2664267	Argument	url		2664225	0					
ANR	2664268	Identifier	url		2664225	0					
ANR	2664269	Argument	"""remote:"""		2664225	1					
ANR	2664270	PrimaryExpression	"""remote:"""		2664225	0					
ANR	2664271	ReturnStatement	return 0 ;	532:30:13455:13463	2664225	1	True				
ANR	2664272	PrimaryExpression	0		2664225	0					
ANR	2664273	ExpressionStatement	"path = ( char * ) strrchr ( url , ':' )"	534:2:13468:13498	2664225	2	True				
ANR	2664274	AssignmentExpression	"path = ( char * ) strrchr ( url , ':' )"		2664225	0		=			
ANR	2664275	Identifier	path		2664225	0					
ANR	2664276	CastExpression	"( char * ) strrchr ( url , ':' )"		2664225	1					
ANR	2664277	CastTarget	char *		2664225	0					
ANR	2664278	CallExpression	"strrchr ( url , ':' )"		2664225	1					
ANR	2664279	Callee	strrchr		2664225	0					
ANR	2664280	Identifier	strrchr		2664225	0					
ANR	2664281	ArgumentList	url		2664225	1					
ANR	2664282	Argument	url		2664225	0					
ANR	2664283	Identifier	url		2664225	0					
ANR	2664284	Argument	':'		2664225	1					
ANR	2664285	PrimaryExpression	':'		2664225	0					
ANR	2664286	IfStatement	if ( ! path )		2664225	3					
ANR	2664287	Condition	! path	535:5:13505:13509	2664225	0	True				
ANR	2664288	UnaryOperationExpression	! path		2664225	0					
ANR	2664289	UnaryOperator	!		2664225	0					
ANR	2664290	Identifier	path		2664225	1					
ANR	2664291	ReturnStatement	return 0 ;	535:12:13512:13520	2664225	1	True				
ANR	2664292	PrimaryExpression	0		2664225	0					
ANR	2664293	ExpressionStatement	path ++	537:2:13525:13531	2664225	4	True				
ANR	2664294	PostIncDecOperationExpression	path ++		2664225	0					
ANR	2664295	Identifier	path		2664225	0					
ANR	2664296	IncDec	++		2664225	1					
ANR	2664297	IfStatement	if ( ! * path )		2664225	5					
ANR	2664298	Condition	! * path	538:5:13538:13543	2664225	0	True				
ANR	2664299	UnaryOperationExpression	! * path		2664225	0					
ANR	2664300	UnaryOperator	!		2664225	0					
ANR	2664301	UnaryOperationExpression	* path		2664225	1					
ANR	2664302	UnaryOperator	*		2664225	0					
ANR	2664303	Identifier	path		2664225	1					
ANR	2664304	ReturnStatement	return 0 ;	538:13:13546:13554	2664225	1	True				
ANR	2664305	PrimaryExpression	0		2664225	0					
ANR	2664306	IdentifierDeclStatement	char * new_url = ( char * ) malloc ( strlen ( path ) + 15 ) ;	540:2:13559:13606	2664225	6	True				
ANR	2664307	IdentifierDecl	* new_url = ( char * ) malloc ( strlen ( path ) + 15 )		2664225	0					
ANR	2664308	IdentifierDeclType	char *		2664225	0					
ANR	2664309	Identifier	new_url		2664225	1					
ANR	2664310	AssignmentExpression	* new_url = ( char * ) malloc ( strlen ( path ) + 15 )		2664225	2		=			
ANR	2664311	Identifier	new_url		2664225	0					
ANR	2664312	CastExpression	( char * ) malloc ( strlen ( path ) + 15 )		2664225	1					
ANR	2664313	CastTarget	char *		2664225	0					
ANR	2664314	CallExpression	malloc ( strlen ( path ) + 15 )		2664225	1					
ANR	2664315	Callee	malloc		2664225	0					
ANR	2664316	Identifier	malloc		2664225	0					
ANR	2664317	ArgumentList	strlen ( path ) + 15		2664225	1					
ANR	2664318	Argument	strlen ( path ) + 15		2664225	0					
ANR	2664319	AdditiveExpression	strlen ( path ) + 15		2664225	0		+			
ANR	2664320	CallExpression	strlen ( path )		2664225	0					
ANR	2664321	Callee	strlen		2664225	0					
ANR	2664322	Identifier	strlen		2664225	0					
ANR	2664323	ArgumentList	path		2664225	1					
ANR	2664324	Argument	path		2664225	0					
ANR	2664325	Identifier	path		2664225	0					
ANR	2664326	PrimaryExpression	15		2664225	1					
ANR	2664327	ExpressionStatement	"sprintf ( new_url , ""buffer:remote:%s"" , path )"	541:2:13610:13650	2664225	7	True				
ANR	2664328	CallExpression	"sprintf ( new_url , ""buffer:remote:%s"" , path )"		2664225	0					
ANR	2664329	Callee	sprintf		2664225	0					
ANR	2664330	Identifier	sprintf		2664225	0					
ANR	2664331	ArgumentList	new_url		2664225	1					
ANR	2664332	Argument	new_url		2664225	0					
ANR	2664333	Identifier	new_url		2664225	0					
ANR	2664334	Argument	"""buffer:remote:%s"""		2664225	1					
ANR	2664335	PrimaryExpression	"""buffer:remote:%s"""		2664225	0					
ANR	2664336	Argument	path		2664225	2					
ANR	2664337	Identifier	path		2664225	0					
ANR	2664338	IdentifierDeclStatement	"CondorFile * result = open_url ( new_url , flags , mode ) ;"	542:2:13654:13707	2664225	8	True				
ANR	2664339	IdentifierDecl	"* result = open_url ( new_url , flags , mode )"		2664225	0					
ANR	2664340	IdentifierDeclType	CondorFile *		2664225	0					
ANR	2664341	Identifier	result		2664225	1					
ANR	2664342	AssignmentExpression	"* result = open_url ( new_url , flags , mode )"		2664225	2		=			
ANR	2664343	Identifier	result		2664225	0					
ANR	2664344	CallExpression	"open_url ( new_url , flags , mode )"		2664225	1					
ANR	2664345	Callee	open_url		2664225	0					
ANR	2664346	Identifier	open_url		2664225	0					
ANR	2664347	ArgumentList	new_url		2664225	1					
ANR	2664348	Argument	new_url		2664225	0					
ANR	2664349	Identifier	new_url		2664225	0					
ANR	2664350	Argument	flags		2664225	1					
ANR	2664351	Identifier	flags		2664225	0					
ANR	2664352	Argument	mode		2664225	2					
ANR	2664353	Identifier	mode		2664225	0					
ANR	2664354	ExpressionStatement	free ( new_url )	543:2:13711:13726	2664225	9	True				
ANR	2664355	CallExpression	free ( new_url )		2664225	0					
ANR	2664356	Callee	free		2664225	0					
ANR	2664357	Identifier	free		2664225	0					
ANR	2664358	ArgumentList	new_url		2664225	1					
ANR	2664359	Argument	new_url		2664225	0					
ANR	2664360	Identifier	new_url		2664225	0					
ANR	2664361	ReturnStatement	return result ;	544:2:13730:13743	2664225	10	True				
ANR	2664362	Identifier	result		2664225	0					
ANR	2664363	ReturnStatement	return 0 ;	547:1:13750:13758	2664225	4	True				
ANR	2664364	PrimaryExpression	0		2664225	0					
ANR	2664365	ReturnType	CondorFile *		2664225	1					
ANR	2664366	Identifier	CondorFileTable :: open_url_retry		2664225	2					
ANR	2664367	ParameterList	"char const * url , int flags , int mode"		2664225	3					
ANR	2664368	Parameter	char const * url	522:46:13273:13287	2664225	0	True				
ANR	2664369	ParameterType	char const *		2664225	0					
ANR	2664370	Identifier	url		2664225	1					
ANR	2664371	Parameter	int flags	522:63:13290:13298	2664225	1	True				
ANR	2664372	ParameterType	int		2664225	0					
ANR	2664373	Identifier	flags		2664225	1					
ANR	2664374	Parameter	int mode	522:74:13301:13308	2664225	2	True				
ANR	2664375	ParameterType	int		2664225	0					
ANR	2664376	Identifier	mode		2664225	1					
ANR	2664377	CFGEntryNode	ENTRY		2664225		True				
ANR	2664378	CFGExitNode	EXIT		2664225		True				
ANR	2664379	Symbol	malloc		2664225						
ANR	2664380	Symbol	f		2664225						
ANR	2664381	Symbol	flags		2664225						
ANR	2664382	Symbol	open_url		2664225						
ANR	2664383	Symbol	url		2664225						
ANR	2664384	Symbol	mode		2664225						
ANR	2664385	Symbol	RemoteSysCalls		2664225						
ANR	2664386	Symbol	new_url		2664225						
ANR	2664387	Symbol	result		2664225						
ANR	2664388	Symbol	path		2664225						
ANR	2664389	Symbol	strlen		2664225						
ANR	2664390	Symbol	strstr		2664225						
ANR	2664391	Symbol	strrchr		2664225						
ANR	2664392	Symbol	* path		2664225						
ANR	2664393	Function	needs_reopen	554:0:13928:14137							
ANR	2664394	FunctionDef	"needs_reopen (int old_flags , int new_flags)"		2664393	0					
ANR	2664395	CompoundStatement		555:0:13984:14137	2664393	0					
ANR	2664396	IdentifierDeclStatement	int mask = ( O_RDONLY | O_WRONLY | O_RDWR ) ;	556:1:13987:14024	2664393	0	True				
ANR	2664397	IdentifierDecl	mask = ( O_RDONLY | O_WRONLY | O_RDWR )		2664393	0					
ANR	2664398	IdentifierDeclType	int		2664393	0					
ANR	2664399	Identifier	mask		2664393	1					
ANR	2664400	AssignmentExpression	mask = ( O_RDONLY | O_WRONLY | O_RDWR )		2664393	2		=			
ANR	2664401	Identifier	mask		2664393	0					
ANR	2664402	InclusiveOrExpression	O_RDONLY | O_WRONLY | O_RDWR		2664393	1		|			
ANR	2664403	Identifier	O_RDONLY		2664393	0					
ANR	2664404	InclusiveOrExpression	O_WRONLY | O_RDWR		2664393	1		|			
ANR	2664405	Identifier	O_WRONLY		2664393	0					
ANR	2664406	Identifier	O_RDWR		2664393	1					
ANR	2664407	IfStatement	if ( ( old_flags & mask ) == ( new_flags & mask ) )		2664393	1					
ANR	2664408	Condition	( old_flags & mask ) == ( new_flags & mask )	558:5:14032:14067	2664393	0	True				
ANR	2664409	EqualityExpression	( old_flags & mask ) == ( new_flags & mask )		2664393	0		==			
ANR	2664410	BitAndExpression	old_flags & mask		2664393	0		&			
ANR	2664411	Identifier	old_flags		2664393	0					
ANR	2664412	Identifier	mask		2664393	1					
ANR	2664413	BitAndExpression	new_flags & mask		2664393	1		&			
ANR	2664414	Identifier	new_flags		2664393	0					
ANR	2664415	Identifier	mask		2664393	1					
ANR	2664416	ReturnStatement	return 0 ;	558:44:14071:14079	2664393	1	True				
ANR	2664417	PrimaryExpression	0		2664393	0					
ANR	2664418	IfStatement	if ( ( old_flags & mask ) == O_RDWR )		2664393	2					
ANR	2664419	Condition	( old_flags & mask ) == O_RDWR	559:5:14086:14111	2664393	0	True				
ANR	2664420	EqualityExpression	( old_flags & mask ) == O_RDWR		2664393	0		==			
ANR	2664421	BitAndExpression	old_flags & mask		2664393	0		&			
ANR	2664422	Identifier	old_flags		2664393	0					
ANR	2664423	Identifier	mask		2664393	1					
ANR	2664424	Identifier	O_RDWR		2664393	1					
ANR	2664425	ReturnStatement	return 0 ;	559:34:14115:14123	2664393	1	True				
ANR	2664426	PrimaryExpression	0		2664393	0					
ANR	2664427	ReturnStatement	return 1 ;	561:1:14127:14135	2664393	3	True				
ANR	2664428	PrimaryExpression	1		2664393	0					
ANR	2664429	ReturnType	static int		2664393	1					
ANR	2664430	Identifier	needs_reopen		2664393	2					
ANR	2664431	ParameterList	"int old_flags , int new_flags"		2664393	3					
ANR	2664432	Parameter	int old_flags	554:25:13953:13965	2664393	0	True				
ANR	2664433	ParameterType	int		2664393	0					
ANR	2664434	Identifier	old_flags		2664393	1					
ANR	2664435	Parameter	int new_flags	554:40:13968:13980	2664393	1	True				
ANR	2664436	ParameterType	int		2664393	0					
ANR	2664437	Identifier	new_flags		2664393	1					
ANR	2664438	CFGEntryNode	ENTRY		2664393		True				
ANR	2664439	CFGExitNode	EXIT		2664393		True				
ANR	2664440	Symbol	O_RDWR		2664393						
ANR	2664441	Symbol	O_RDONLY		2664393						
ANR	2664442	Symbol	new_flags		2664393						
ANR	2664443	Symbol	old_flags		2664393						
ANR	2664444	Symbol	O_WRONLY		2664393						
ANR	2664445	Symbol	mask		2664393						
ANR	2664446	Function	CondorFileTable :: replace_file	568:0:14206:14415							
ANR	2664447	FunctionDef	"CondorFileTable :: replace_file (CondorFile * old_file , CondorFile * new_file)"		2664446	0					
ANR	2664448	CompoundStatement		569:0:14287:14415	2664446	0					
ANR	2664449	IdentifierDeclStatement	int i ;	570:1:14290:14295	2664446	0	True				
ANR	2664450	IdentifierDecl	i		2664446	0					
ANR	2664451	IdentifierDeclType	int		2664446	0					
ANR	2664452	Identifier	i		2664446	1					
ANR	2664453	ForStatement	for ( i = 0 ; i < length ; i ++ )		2664446	1					
ANR	2664454	ForInit	i = 0 ;	572:6:14304:14307	2664446	0	True				
ANR	2664455	AssignmentExpression	i = 0		2664446	0		=			
ANR	2664456	Identifier	i		2664446	0					
ANR	2664457	PrimaryExpression	0		2664446	1					
ANR	2664458	Condition	i < length	572:10:14308:14315	2664446	1	True				
ANR	2664459	RelationalExpression	i < length		2664446	0		<			
ANR	2664460	Identifier	i		2664446	0					
ANR	2664461	Identifier	length		2664446	1					
ANR	2664462	PostIncDecOperationExpression	i ++	572:20:14318:14320	2664446	2	True				
ANR	2664463	Identifier	i		2664446	0					
ANR	2664464	IncDec	++		2664446	1					
ANR	2664465	CompoundStatement		4:26:36:36	2664446	3					
ANR	2664466	IfStatement	if ( pointers [ i ] && pointers [ i ] -> file == old_file )		2664446	0					
ANR	2664467	Condition	pointers [ i ] && pointers [ i ] -> file == old_file	573:5:14331:14372	2664446	0	True				
ANR	2664468	AndExpression	pointers [ i ] && pointers [ i ] -> file == old_file		2664446	0		&&			
ANR	2664469	ArrayIndexing	pointers [ i ]		2664446	0					
ANR	2664470	Identifier	pointers		2664446	0					
ANR	2664471	Identifier	i		2664446	1					
ANR	2664472	EqualityExpression	pointers [ i ] -> file == old_file		2664446	1		==			
ANR	2664473	PtrMemberAccess	pointers [ i ] -> file		2664446	0					
ANR	2664474	ArrayIndexing	pointers [ i ]		2664446	0					
ANR	2664475	Identifier	pointers		2664446	0					
ANR	2664476	Identifier	i		2664446	1					
ANR	2664477	Identifier	file		2664446	1					
ANR	2664478	Identifier	old_file		2664446	1					
ANR	2664479	CompoundStatement		5:49:87:87	2664446	1					
ANR	2664480	ExpressionStatement	pointers [ i ] -> file = new_file	574:3:14380:14406	2664446	0	True				
ANR	2664481	AssignmentExpression	pointers [ i ] -> file = new_file		2664446	0		=			
ANR	2664482	PtrMemberAccess	pointers [ i ] -> file		2664446	0					
ANR	2664483	ArrayIndexing	pointers [ i ]		2664446	0					
ANR	2664484	Identifier	pointers		2664446	0					
ANR	2664485	Identifier	i		2664446	1					
ANR	2664486	Identifier	file		2664446	1					
ANR	2664487	Identifier	new_file		2664446	1					
ANR	2664488	ReturnType	void		2664446	1					
ANR	2664489	Identifier	CondorFileTable :: replace_file		2664446	2					
ANR	2664490	ParameterList	"CondorFile * old_file , CondorFile * new_file"		2664446	3					
ANR	2664491	Parameter	CondorFile * old_file	568:36:14242:14261	2664446	0	True				
ANR	2664492	ParameterType	CondorFile *		2664446	0					
ANR	2664493	Identifier	old_file		2664446	1					
ANR	2664494	Parameter	CondorFile * new_file	568:58:14264:14283	2664446	1	True				
ANR	2664495	ParameterType	CondorFile *		2664446	0					
ANR	2664496	Identifier	new_file		2664446	1					
ANR	2664497	CFGEntryNode	ENTRY		2664446		True				
ANR	2664498	CFGExitNode	EXIT		2664446		True				
ANR	2664499	Symbol	* * i		2664446						
ANR	2664500	Symbol	* i		2664446						
ANR	2664501	Symbol	old_file		2664446						
ANR	2664502	Symbol	pointers [ i ] -> file		2664446						
ANR	2664503	Symbol	length		2664446						
ANR	2664504	Symbol	new_file		2664446						
ANR	2664505	Symbol	i		2664446						
ANR	2664506	Symbol	* * pointers		2664446						
ANR	2664507	Symbol	* pointers		2664446						
ANR	2664508	Symbol	pointers		2664446						
ANR	2664509	Function	CondorFileTable :: open_file_unique	588:0:14724:15932							
ANR	2664510	FunctionDef	"CondorFileTable :: open_file_unique (char * logical_name , int flags , int mode)"		2664509	0					
ANR	2664511	CompoundStatement		589:0:14814:15932	2664509	0					
ANR	2664512	IdentifierDeclStatement	int match = find_logical_name ( logical_name ) ;	591:1:14818:14863	2664509	0	True				
ANR	2664513	IdentifierDecl	match = find_logical_name ( logical_name )		2664509	0					
ANR	2664514	IdentifierDeclType	int		2664509	0					
ANR	2664515	Identifier	match		2664509	1					
ANR	2664516	AssignmentExpression	match = find_logical_name ( logical_name )		2664509	2		=			
ANR	2664517	Identifier	match		2664509	0					
ANR	2664518	CallExpression	find_logical_name ( logical_name )		2664509	1					
ANR	2664519	Callee	find_logical_name		2664509	0					
ANR	2664520	Identifier	find_logical_name		2664509	0					
ANR	2664521	ArgumentList	logical_name		2664509	1					
ANR	2664522	Argument	logical_name		2664509	0					
ANR	2664523	Identifier	logical_name		2664509	0					
ANR	2664524	IfStatement	if ( match == - 1 || ! pointers [ match ] -> file )		2664509	1					
ANR	2664525	Condition	match == - 1 || ! pointers [ match ] -> file	592:5:14870:14904	2664509	0	True				
ANR	2664526	OrExpression	match == - 1 || ! pointers [ match ] -> file		2664509	0		||			
ANR	2664527	EqualityExpression	match == - 1		2664509	0		==			
ANR	2664528	Identifier	match		2664509	0					
ANR	2664529	UnaryOperationExpression	- 1		2664509	1					
ANR	2664530	UnaryOperator	-		2664509	0					
ANR	2664531	PrimaryExpression	1		2664509	1					
ANR	2664532	UnaryOperationExpression	! pointers [ match ] -> file		2664509	1					
ANR	2664533	UnaryOperator	!		2664509	0					
ANR	2664534	PtrMemberAccess	pointers [ match ] -> file		2664509	1					
ANR	2664535	ArrayIndexing	pointers [ match ]		2664509	0					
ANR	2664536	Identifier	pointers		2664509	0					
ANR	2664537	Identifier	match		2664509	1					
ANR	2664538	Identifier	file		2664509	1					
ANR	2664539	CompoundStatement		5:2:97:113	2664509	1					
ANR	2664540	IdentifierDeclStatement	char * url = NULL ;	593:2:14912:14928	2664509	0	True				
ANR	2664541	IdentifierDecl	* url = NULL		2664509	0					
ANR	2664542	IdentifierDeclType	char *		2664509	0					
ANR	2664543	Identifier	url		2664509	1					
ANR	2664544	AssignmentExpression	* url = NULL		2664509	2		=			
ANR	2664545	Identifier	NULL		2664509	0					
ANR	2664546	Identifier	NULL		2664509	1					
ANR	2664547	ExpressionStatement	"lookup_url ( ( char * ) logical_name , & url )"	594:2:14932:14971	2664509	1	True				
ANR	2664548	CallExpression	"lookup_url ( ( char * ) logical_name , & url )"		2664509	0					
ANR	2664549	Callee	lookup_url		2664509	0					
ANR	2664550	Identifier	lookup_url		2664509	0					
ANR	2664551	ArgumentList	( char * ) logical_name		2664509	1					
ANR	2664552	Argument	( char * ) logical_name		2664509	0					
ANR	2664553	CastExpression	( char * ) logical_name		2664509	0					
ANR	2664554	CastTarget	char *		2664509	0					
ANR	2664555	Identifier	logical_name		2664509	1					
ANR	2664556	Argument	& url		2664509	1					
ANR	2664557	UnaryOperationExpression	& url		2664509	0					
ANR	2664558	UnaryOperator	&		2664509	0					
ANR	2664559	Identifier	url		2664509	1					
ANR	2664560	IfStatement	if ( url )		2664509	2					
ANR	2664561	Condition	url	595:6:14979:14981	2664509	0	True				
ANR	2664562	Identifier	url		2664509	0					
ANR	2664563	CompoundStatement		7:12:170:170	2664509	1					
ANR	2664564	ExpressionStatement	match = find_url ( url )	596:3:14990:15013	2664509	0	True				
ANR	2664565	AssignmentExpression	match = find_url ( url )		2664509	0		=			
ANR	2664566	Identifier	match		2664509	0					
ANR	2664567	CallExpression	find_url ( url )		2664509	1					
ANR	2664568	Callee	find_url		2664509	0					
ANR	2664569	Identifier	find_url		2664509	0					
ANR	2664570	ArgumentList	url		2664509	1					
ANR	2664571	Argument	url		2664509	0					
ANR	2664572	Identifier	url		2664509	0					
ANR	2664573	IfStatement	if ( match == - 1 )		2664509	1					
ANR	2664574	Condition	match == - 1	597:7:15022:15030	2664509	0	True				
ANR	2664575	EqualityExpression	match == - 1		2664509	0		==			
ANR	2664576	Identifier	match		2664509	0					
ANR	2664577	UnaryOperationExpression	- 1		2664509	1					
ANR	2664578	UnaryOperator	-		2664509	0					
ANR	2664579	PrimaryExpression	1		2664509	1					
ANR	2664580	CompoundStatement		10:4:225:275	2664509	1					
ANR	2664581	IdentifierDeclStatement	"CondorFile * f = open_url_retry ( url , flags , mode ) ;"	598:4:15040:15090	2664509	0	True				
ANR	2664582	IdentifierDecl	"* f = open_url_retry ( url , flags , mode )"		2664509	0					
ANR	2664583	IdentifierDeclType	CondorFile *		2664509	0					
ANR	2664584	Identifier	f		2664509	1					
ANR	2664585	AssignmentExpression	"* f = open_url_retry ( url , flags , mode )"		2664509	2		=			
ANR	2664586	Identifier	f		2664509	0					
ANR	2664587	CallExpression	"open_url_retry ( url , flags , mode )"		2664509	1					
ANR	2664588	Callee	open_url_retry		2664509	0					
ANR	2664589	Identifier	open_url_retry		2664509	0					
ANR	2664590	ArgumentList	url		2664509	1					
ANR	2664591	Argument	url		2664509	0					
ANR	2664592	Identifier	url		2664509	0					
ANR	2664593	Argument	flags		2664509	1					
ANR	2664594	Identifier	flags		2664509	0					
ANR	2664595	Argument	mode		2664509	2					
ANR	2664596	Identifier	mode		2664509	0					
ANR	2664597	ExpressionStatement	free ( url )	599:4:15096:15107	2664509	1	True				
ANR	2664598	CallExpression	free ( url )		2664509	0					
ANR	2664599	Callee	free		2664509	0					
ANR	2664600	Identifier	free		2664509	0					
ANR	2664601	ArgumentList	url		2664509	1					
ANR	2664602	Argument	url		2664509	0					
ANR	2664603	Identifier	url		2664509	0					
ANR	2664604	ReturnStatement	return f ;	600:4:15113:15121	2664509	2	True				
ANR	2664605	Identifier	f		2664509	0					
ANR	2664606	ExpressionStatement	free ( url )	602:3:15131:15142	2664509	2	True				
ANR	2664607	CallExpression	free ( url )		2664509	0					
ANR	2664608	Callee	free		2664509	0					
ANR	2664609	Identifier	free		2664509	0					
ANR	2664610	ArgumentList	url		2664509	1					
ANR	2664611	Argument	url		2664509	0					
ANR	2664612	Identifier	url		2664509	0					
ANR	2664613	IdentifierDeclStatement	CondorFilePointer * p = pointers [ match ] ;	606:1:15153:15191	2664509	2	True				
ANR	2664614	IdentifierDecl	* p = pointers [ match ]		2664509	0					
ANR	2664615	IdentifierDeclType	CondorFilePointer *		2664509	0					
ANR	2664616	Identifier	p		2664509	1					
ANR	2664617	AssignmentExpression	* p = pointers [ match ]		2664509	2		=			
ANR	2664618	Identifier	p		2664509	0					
ANR	2664619	ArrayIndexing	pointers [ match ]		2664509	1					
ANR	2664620	Identifier	pointers		2664509	0					
ANR	2664621	Identifier	match		2664509	1					
ANR	2664622	IdentifierDeclStatement	CondorFile * old_file ;	607:1:15194:15214	2664509	3	True				
ANR	2664623	IdentifierDecl	* old_file		2664509	0					
ANR	2664624	IdentifierDeclType	CondorFile *		2664509	0					
ANR	2664625	Identifier	old_file		2664509	1					
ANR	2664626	IfStatement	"if ( needs_reopen ( p -> flags , flags ) )"		2664509	4					
ANR	2664627	Condition	"needs_reopen ( p -> flags , flags )"	609:5:15222:15252	2664509	0	True				
ANR	2664628	CallExpression	"needs_reopen ( p -> flags , flags )"		2664509	0					
ANR	2664629	Callee	needs_reopen		2664509	0					
ANR	2664630	Identifier	needs_reopen		2664509	0					
ANR	2664631	ArgumentList	p -> flags		2664509	1					
ANR	2664632	Argument	p -> flags		2664509	0					
ANR	2664633	PtrMemberAccess	p -> flags		2664509	0					
ANR	2664634	Identifier	p		2664509	0					
ANR	2664635	Identifier	flags		2664509	1					
ANR	2664636	Argument	flags		2664509	1					
ANR	2664637	Identifier	flags		2664509	0					
ANR	2664638	CompoundStatement		28:2:534:599	2664509	1					
ANR	2664639	ExpressionStatement	flags &= ~ ( O_RDONLY )	610:2:15260:15280	2664509	0	True				
ANR	2664640	AssignmentExpression	flags &= ~ ( O_RDONLY )		2664509	0		&=			
ANR	2664641	Identifier	flags		2664509	0					
ANR	2664642	UnaryOperationExpression	~ ( O_RDONLY )		2664509	1					
ANR	2664643	UnaryOperator	~		2664509	0					
ANR	2664644	Identifier	O_RDONLY		2664509	1					
ANR	2664645	ExpressionStatement	flags &= ~ ( O_WRONLY )	611:2:15284:15304	2664509	1	True				
ANR	2664646	AssignmentExpression	flags &= ~ ( O_WRONLY )		2664509	0		&=			
ANR	2664647	Identifier	flags		2664509	0					
ANR	2664648	UnaryOperationExpression	~ ( O_WRONLY )		2664509	1					
ANR	2664649	UnaryOperator	~		2664509	0					
ANR	2664650	Identifier	O_WRONLY		2664509	1					
ANR	2664651	ExpressionStatement	flags |= O_RDWR	612:2:15308:15323	2664509	2	True				
ANR	2664652	AssignmentExpression	flags |= O_RDWR		2664509	0		|=			
ANR	2664653	Identifier	flags		2664509	0					
ANR	2664654	Identifier	O_RDWR		2664509	1					
ANR	2664655	ExpressionStatement	p -> file -> flush ( )	614:2:15328:15344	2664509	3	True				
ANR	2664656	CallExpression	p -> file -> flush ( )		2664509	0					
ANR	2664657	Callee	p -> file -> flush		2664509	0					
ANR	2664658	PtrMemberAccess	p -> file -> flush		2664509	0					
ANR	2664659	PtrMemberAccess	p -> file		2664509	0					
ANR	2664660	Identifier	p		2664509	0					
ANR	2664661	Identifier	file		2664509	1					
ANR	2664662	Identifier	flush		2664509	1					
ANR	2664663	ArgumentList			2664509	1					
ANR	2664664	IdentifierDeclStatement	"CondorFile * f = open_url_retry ( p -> file -> get_url ( ) , flags , mode ) ;"	616:2:15349:15414	2664509	4	True				
ANR	2664665	IdentifierDecl	"* f = open_url_retry ( p -> file -> get_url ( ) , flags , mode )"		2664509	0					
ANR	2664666	IdentifierDeclType	CondorFile *		2664509	0					
ANR	2664667	Identifier	f		2664509	1					
ANR	2664668	AssignmentExpression	"* f = open_url_retry ( p -> file -> get_url ( ) , flags , mode )"		2664509	2		=			
ANR	2664669	Identifier	f		2664509	0					
ANR	2664670	CallExpression	"open_url_retry ( p -> file -> get_url ( ) , flags , mode )"		2664509	1					
ANR	2664671	Callee	open_url_retry		2664509	0					
ANR	2664672	Identifier	open_url_retry		2664509	0					
ANR	2664673	ArgumentList	p -> file -> get_url ( )		2664509	1					
ANR	2664674	Argument	p -> file -> get_url ( )		2664509	0					
ANR	2664675	CallExpression	p -> file -> get_url ( )		2664509	0					
ANR	2664676	Callee	p -> file -> get_url		2664509	0					
ANR	2664677	PtrMemberAccess	p -> file -> get_url		2664509	0					
ANR	2664678	PtrMemberAccess	p -> file		2664509	0					
ANR	2664679	Identifier	p		2664509	0					
ANR	2664680	Identifier	file		2664509	1					
ANR	2664681	Identifier	get_url		2664509	1					
ANR	2664682	ArgumentList			2664509	1					
ANR	2664683	Argument	flags		2664509	1					
ANR	2664684	Identifier	flags		2664509	0					
ANR	2664685	Argument	mode		2664509	2					
ANR	2664686	Identifier	mode		2664509	0					
ANR	2664687	IfStatement	if ( ! f )		2664509	5					
ANR	2664688	Condition	! f	617:5:15421:15422	2664509	0	True				
ANR	2664689	UnaryOperationExpression	! f		2664509	0					
ANR	2664690	UnaryOperator	!		2664509	0					
ANR	2664691	Identifier	f		2664509	1					
ANR	2664692	ReturnStatement	return 0 ;	617:9:15425:15433	2664509	1	True				
ANR	2664693	PrimaryExpression	0		2664509	0					
ANR	2664694	ExpressionStatement	old_file = p -> file	619:2:15438:15456	2664509	6	True				
ANR	2664695	AssignmentExpression	old_file = p -> file		2664509	0		=			
ANR	2664696	Identifier	old_file		2664509	0					
ANR	2664697	PtrMemberAccess	p -> file		2664509	1					
ANR	2664698	Identifier	p		2664509	0					
ANR	2664699	Identifier	file		2664509	1					
ANR	2664700	IfStatement	if ( old_file -> close ( ) != 0 )		2664509	7					
ANR	2664701	Condition	old_file -> close ( ) != 0	620:6:15464:15483	2664509	0	True				
ANR	2664702	EqualityExpression	old_file -> close ( ) != 0		2664509	0		!=			
ANR	2664703	CallExpression	old_file -> close ( )		2664509	0					
ANR	2664704	Callee	old_file -> close		2664509	0					
ANR	2664705	PtrMemberAccess	old_file -> close		2664509	0					
ANR	2664706	Identifier	old_file		2664509	0					
ANR	2664707	Identifier	close		2664509	1					
ANR	2664708	ArgumentList			2664509	1					
ANR	2664709	PrimaryExpression	0		2664509	1					
ANR	2664710	ReturnStatement	return 0 ;	620:29:15487:15495	2664509	1	True				
ANR	2664711	PrimaryExpression	0		2664509	0					
ANR	2664712	ExpressionStatement	"replace_file ( old_file , f )"	622:2:15500:15527	2664509	8	True				
ANR	2664713	CallExpression	"replace_file ( old_file , f )"		2664509	0					
ANR	2664714	Callee	replace_file		2664509	0					
ANR	2664715	Identifier	replace_file		2664509	0					
ANR	2664716	ArgumentList	old_file		2664509	1					
ANR	2664717	Argument	old_file		2664509	0					
ANR	2664718	Identifier	old_file		2664509	0					
ANR	2664719	Argument	f		2664509	1					
ANR	2664720	Identifier	f		2664509	0					
ANR	2664721	Statement	delete	633:2:15894:15899	2664509	9	True				
ANR	2664722	ExpressionStatement	old_file	633:9:15901:15909	2664509	10	True				
ANR	2664723	Identifier	old_file		2664509	0					
ANR	2664724	ReturnStatement	return p -> file ;	636:1:15916:15930	2664509	5	True				
ANR	2664725	PtrMemberAccess	p -> file		2664509	0					
ANR	2664726	Identifier	p		2664509	0					
ANR	2664727	Identifier	file		2664509	1					
ANR	2664728	ReturnType	CondorFile *		2664509	1					
ANR	2664729	Identifier	CondorFileTable :: open_file_unique		2664509	2					
ANR	2664730	ParameterList	"char * logical_name , int flags , int mode"		2664509	3					
ANR	2664731	Parameter	char * logical_name	588:48:14772:14789	2664509	0	True				
ANR	2664732	ParameterType	char *		2664509	0					
ANR	2664733	Identifier	logical_name		2664509	1					
ANR	2664734	Parameter	int flags	588:68:14792:14800	2664509	1	True				
ANR	2664735	ParameterType	int		2664509	0					
ANR	2664736	Identifier	flags		2664509	1					
ANR	2664737	Parameter	int mode	588:79:14803:14810	2664509	2	True				
ANR	2664738	ParameterType	int		2664509	0					
ANR	2664739	Identifier	mode		2664509	1					
ANR	2664740	CFGEntryNode	ENTRY		2664509		True				
ANR	2664741	CFGExitNode	EXIT		2664509		True				
ANR	2664742	Symbol	* match		2664509						
ANR	2664743	Symbol	logical_name		2664509						
ANR	2664744	Symbol	old_file		2664509						
ANR	2664745	Symbol	flags		2664509						
ANR	2664746	Symbol	find_logical_name		2664509						
ANR	2664747	Symbol	mode		2664509						
ANR	2664748	Symbol	& url		2664509						
ANR	2664749	Symbol	O_RDWR		2664509						
ANR	2664750	Symbol	p -> file		2664509						
ANR	2664751	Symbol	* * p		2664509						
ANR	2664752	Symbol	* * pointers		2664509						
ANR	2664753	Symbol	p -> file -> get_url		2664509						
ANR	2664754	Symbol	pointers		2664509						
ANR	2664755	Symbol	find_url		2664509						
ANR	2664756	Symbol	NULL		2664509						
ANR	2664757	Symbol	* p -> file		2664509						
ANR	2664758	Symbol	f		2664509						
ANR	2664759	Symbol	* old_file		2664509						
ANR	2664760	Symbol	match		2664509						
ANR	2664761	Symbol	pointers [ match ] -> file		2664509						
ANR	2664762	Symbol	* pointers		2664509						
ANR	2664763	Symbol	url		2664509						
ANR	2664764	Symbol	p		2664509						
ANR	2664765	Symbol	O_RDONLY		2664509						
ANR	2664766	Symbol	old_file -> close		2664509						
ANR	2664767	Symbol	* * match		2664509						
ANR	2664768	Symbol	needs_reopen		2664509						
ANR	2664769	Symbol	p -> flags		2664509						
ANR	2664770	Symbol	open_url_retry		2664509						
ANR	2664771	Symbol	* p		2664509						
ANR	2664772	Symbol	O_WRONLY		2664509						
ANR	2664773	Function	CondorFileTable :: complete_path	645:0:16095:16496							
ANR	2664774	FunctionDef	"CondorFileTable :: complete_path (const char * short_path , char * * full_path)"		2664773	0					
ANR	2664775	CompoundStatement		646:0:16175:16496	2664773	0					
ANR	2664776	IfStatement	if ( short_path [ 0 ] == '/' )		2664773	0					
ANR	2664777	Condition	short_path [ 0 ] == '/'	647:11:16188:16205	2664773	0	True				
ANR	2664778	EqualityExpression	short_path [ 0 ] == '/'		2664773	0		==			
ANR	2664779	ArrayIndexing	short_path [ 0 ]		2664773	0					
ANR	2664780	Identifier	short_path		2664773	0					
ANR	2664781	PrimaryExpression	0		2664773	1					
ANR	2664782	PrimaryExpression	'/'		2664773	1					
ANR	2664783	CompoundStatement		2:31:32:32	2664773	1					
ANR	2664784	ExpressionStatement	* full_path = strdup ( short_path )	648:16:16226:16257	2664773	0	True				
ANR	2664785	AssignmentExpression	* full_path = strdup ( short_path )		2664773	0		=			
ANR	2664786	UnaryOperationExpression	* full_path		2664773	0					
ANR	2664787	UnaryOperator	*		2664773	0					
ANR	2664788	Identifier	full_path		2664773	1					
ANR	2664789	CallExpression	strdup ( short_path )		2664773	1					
ANR	2664790	Callee	strdup		2664773	0					
ANR	2664791	Identifier	strdup		2664773	0					
ANR	2664792	ArgumentList	short_path		2664773	1					
ANR	2664793	Argument	short_path		2664773	0					
ANR	2664794	Identifier	short_path		2664773	0					
ANR	2664795	ElseStatement	else		2664773	0					
ANR	2664796	CompoundStatement		4:15:98:98	2664773	0					
ANR	2664797	ExpressionStatement	* full_path = ( char * ) malloc ( strlen ( working_dir ) + strlen ( short_path ) + 2 )	650:16:16292:16361	2664773	0	True				
ANR	2664798	AssignmentExpression	* full_path = ( char * ) malloc ( strlen ( working_dir ) + strlen ( short_path ) + 2 )		2664773	0		=			
ANR	2664799	UnaryOperationExpression	* full_path		2664773	0					
ANR	2664800	UnaryOperator	*		2664773	0					
ANR	2664801	Identifier	full_path		2664773	1					
ANR	2664802	CastExpression	( char * ) malloc ( strlen ( working_dir ) + strlen ( short_path ) + 2 )		2664773	1					
ANR	2664803	CastTarget	char *		2664773	0					
ANR	2664804	CallExpression	malloc ( strlen ( working_dir ) + strlen ( short_path ) + 2 )		2664773	1					
ANR	2664805	Callee	malloc		2664773	0					
ANR	2664806	Identifier	malloc		2664773	0					
ANR	2664807	ArgumentList	strlen ( working_dir ) + strlen ( short_path ) + 2		2664773	1					
ANR	2664808	Argument	strlen ( working_dir ) + strlen ( short_path ) + 2		2664773	0					
ANR	2664809	AdditiveExpression	strlen ( working_dir ) + strlen ( short_path ) + 2		2664773	0		+			
ANR	2664810	CallExpression	strlen ( working_dir )		2664773	0					
ANR	2664811	Callee	strlen		2664773	0					
ANR	2664812	Identifier	strlen		2664773	0					
ANR	2664813	ArgumentList	working_dir		2664773	1					
ANR	2664814	Argument	working_dir		2664773	0					
ANR	2664815	Identifier	working_dir		2664773	0					
ANR	2664816	AdditiveExpression	strlen ( short_path ) + 2		2664773	1		+			
ANR	2664817	CallExpression	strlen ( short_path )		2664773	0					
ANR	2664818	Callee	strlen		2664773	0					
ANR	2664819	Identifier	strlen		2664773	0					
ANR	2664820	ArgumentList	short_path		2664773	1					
ANR	2664821	Argument	short_path		2664773	0					
ANR	2664822	Identifier	short_path		2664773	0					
ANR	2664823	PrimaryExpression	2		2664773	1					
ANR	2664824	ExpressionStatement	"strcpy ( * full_path , working_dir )"	651:4:16367:16397	2664773	1	True				
ANR	2664825	CallExpression	"strcpy ( * full_path , working_dir )"		2664773	0					
ANR	2664826	Callee	strcpy		2664773	0					
ANR	2664827	Identifier	strcpy		2664773	0					
ANR	2664828	ArgumentList	* full_path		2664773	1					
ANR	2664829	Argument	* full_path		2664773	0					
ANR	2664830	UnaryOperationExpression	* full_path		2664773	0					
ANR	2664831	UnaryOperator	*		2664773	0					
ANR	2664832	Identifier	full_path		2664773	1					
ANR	2664833	Argument	working_dir		2664773	1					
ANR	2664834	Identifier	working_dir		2664773	0					
ANR	2664835	ExpressionStatement	"strcat ( * full_path , ""/"" )"	652:16:16415:16437	2664773	2	True				
ANR	2664836	CallExpression	"strcat ( * full_path , ""/"" )"		2664773	0					
ANR	2664837	Callee	strcat		2664773	0					
ANR	2664838	Identifier	strcat		2664773	0					
ANR	2664839	ArgumentList	* full_path		2664773	1					
ANR	2664840	Argument	* full_path		2664773	0					
ANR	2664841	UnaryOperationExpression	* full_path		2664773	0					
ANR	2664842	UnaryOperator	*		2664773	0					
ANR	2664843	Identifier	full_path		2664773	1					
ANR	2664844	Argument	"""/"""		2664773	1					
ANR	2664845	PrimaryExpression	"""/"""		2664773	0					
ANR	2664846	ExpressionStatement	"strcat ( * full_path , short_path )"	653:16:16455:16484	2664773	3	True				
ANR	2664847	CallExpression	"strcat ( * full_path , short_path )"		2664773	0					
ANR	2664848	Callee	strcat		2664773	0					
ANR	2664849	Identifier	strcat		2664773	0					
ANR	2664850	ArgumentList	* full_path		2664773	1					
ANR	2664851	Argument	* full_path		2664773	0					
ANR	2664852	UnaryOperationExpression	* full_path		2664773	0					
ANR	2664853	UnaryOperator	*		2664773	0					
ANR	2664854	Identifier	full_path		2664773	1					
ANR	2664855	Argument	short_path		2664773	1					
ANR	2664856	Identifier	short_path		2664773	0					
ANR	2664857	ReturnType	void		2664773	1					
ANR	2664858	Identifier	CondorFileTable :: complete_path		2664773	2					
ANR	2664859	ParameterList	"const char * short_path , char * * full_path"		2664773	3					
ANR	2664860	Parameter	const char * short_path	645:37:16132:16153	2664773	0	True				
ANR	2664861	ParameterType	const char *		2664773	0					
ANR	2664862	Identifier	short_path		2664773	1					
ANR	2664863	Parameter	char * * full_path	645:61:16156:16171	2664773	1	True				
ANR	2664864	ParameterType	char * *		2664773	0					
ANR	2664865	Identifier	full_path		2664773	1					
ANR	2664866	CFGEntryNode	ENTRY		2664773		True				
ANR	2664867	CFGExitNode	EXIT		2664773		True				
ANR	2664868	Symbol	malloc		2664773						
ANR	2664869	Symbol	strlen		2664773						
ANR	2664870	Symbol	* full_path		2664773						
ANR	2664871	Symbol	working_dir		2664773						
ANR	2664872	Symbol	strdup		2664773						
ANR	2664873	Symbol	full_path		2664773						
ANR	2664874	Symbol	short_path		2664773						
ANR	2664875	Symbol	* short_path		2664773						
ANR	2664876	Function	CondorFileTable :: open	657:0:16499:17332							
ANR	2664877	FunctionDef	"CondorFileTable :: open (const char * logical_name , int flags , int mode)"		2664876	0					
ANR	2664878	CompoundStatement		658:0:16574:17332	2664876	0					
ANR	2664879	IdentifierDeclStatement	char * full_logical_name = NULL ;	659:1:16577:16607	2664876	0	True				
ANR	2664880	IdentifierDecl	* full_logical_name = NULL		2664876	0					
ANR	2664881	IdentifierDeclType	char *		2664876	0					
ANR	2664882	Identifier	full_logical_name		2664876	1					
ANR	2664883	AssignmentExpression	* full_logical_name = NULL		2664876	2		=			
ANR	2664884	Identifier	NULL		2664876	0					
ANR	2664885	Identifier	NULL		2664876	1					
ANR	2664886	IdentifierDeclStatement	CondorFile * file = 0 ;	661:1:16611:16629	2664876	1	True				
ANR	2664887	IdentifierDecl	* file = 0		2664876	0					
ANR	2664888	IdentifierDeclType	CondorFile *		2664876	0					
ANR	2664889	Identifier	file		2664876	1					
ANR	2664890	AssignmentExpression	* file = 0		2664876	2		=			
ANR	2664891	Identifier	file		2664876	0					
ANR	2664892	PrimaryExpression	0		2664876	1					
ANR	2664893	IdentifierDeclStatement	CondorFileInfo * info = 0 ;	662:1:16632:16654	2664876	2	True				
ANR	2664894	IdentifierDecl	* info = 0		2664876	0					
ANR	2664895	IdentifierDeclType	CondorFileInfo *		2664876	0					
ANR	2664896	Identifier	info		2664876	1					
ANR	2664897	AssignmentExpression	* info = 0		2664876	2		=			
ANR	2664898	Identifier	info		2664876	0					
ANR	2664899	PrimaryExpression	0		2664876	1					
ANR	2664900	ExpressionStatement	"complete_path ( logical_name , & full_logical_name )"	666:1:16708:16757	2664876	3	True				
ANR	2664901	CallExpression	"complete_path ( logical_name , & full_logical_name )"		2664876	0					
ANR	2664902	Callee	complete_path		2664876	0					
ANR	2664903	Identifier	complete_path		2664876	0					
ANR	2664904	ArgumentList	logical_name		2664876	1					
ANR	2664905	Argument	logical_name		2664876	0					
ANR	2664906	Identifier	logical_name		2664876	0					
ANR	2664907	Argument	& full_logical_name		2664876	1					
ANR	2664908	UnaryOperationExpression	& full_logical_name		2664876	0					
ANR	2664909	UnaryOperator	&		2664876	0					
ANR	2664910	Identifier	full_logical_name		2664876	1					
ANR	2664911	IdentifierDeclStatement	int fd = find_empty ( ) ;	670:1:16795:16816	2664876	4	True				
ANR	2664912	IdentifierDecl	fd = find_empty ( )		2664876	0					
ANR	2664913	IdentifierDeclType	int		2664876	0					
ANR	2664914	Identifier	fd		2664876	1					
ANR	2664915	AssignmentExpression	fd = find_empty ( )		2664876	2		=			
ANR	2664916	Identifier	fd		2664876	0					
ANR	2664917	CallExpression	find_empty ( )		2664876	1					
ANR	2664918	Callee	find_empty		2664876	0					
ANR	2664919	Identifier	find_empty		2664876	0					
ANR	2664920	ArgumentList			2664876	1					
ANR	2664921	IfStatement	if ( fd < 0 )		2664876	5					
ANR	2664922	Condition	fd < 0	671:4:16822:16825	2664876	0	True				
ANR	2664923	RelationalExpression	fd < 0		2664876	0		<			
ANR	2664924	Identifier	fd		2664876	0					
ANR	2664925	PrimaryExpression	0		2664876	1					
ANR	2664926	CompoundStatement		14:10:253:253	2664876	1					
ANR	2664927	ExpressionStatement	errno = EMFILE	672:2:16832:16846	2664876	0	True				
ANR	2664928	AssignmentExpression	errno = EMFILE		2664876	0		=			
ANR	2664929	Identifier	errno		2664876	0					
ANR	2664930	Identifier	EMFILE		2664876	1					
ANR	2664931	ExpressionStatement	free ( full_logical_name )	673:2:16850:16875	2664876	1	True				
ANR	2664932	CallExpression	free ( full_logical_name )		2664876	0					
ANR	2664933	Callee	free		2664876	0					
ANR	2664934	Identifier	free		2664876	0					
ANR	2664935	ArgumentList	full_logical_name		2664876	1					
ANR	2664936	Argument	full_logical_name		2664876	0					
ANR	2664937	Identifier	full_logical_name		2664876	0					
ANR	2664938	ReturnStatement	return - 1 ;	674:2:16879:16888	2664876	2	True				
ANR	2664939	UnaryOperationExpression	- 1		2664876	0					
ANR	2664940	UnaryOperator	-		2664876	0					
ANR	2664941	PrimaryExpression	1		2664876	1					
ANR	2664942	ExpressionStatement	"file = open_file_unique ( full_logical_name , flags , mode )"	677:1:16895:16952	2664876	6	True				
ANR	2664943	AssignmentExpression	"file = open_file_unique ( full_logical_name , flags , mode )"		2664876	0		=			
ANR	2664944	Identifier	file		2664876	0					
ANR	2664945	CallExpression	"open_file_unique ( full_logical_name , flags , mode )"		2664876	1					
ANR	2664946	Callee	open_file_unique		2664876	0					
ANR	2664947	Identifier	open_file_unique		2664876	0					
ANR	2664948	ArgumentList	full_logical_name		2664876	1					
ANR	2664949	Argument	full_logical_name		2664876	0					
ANR	2664950	Identifier	full_logical_name		2664876	0					
ANR	2664951	Argument	flags		2664876	1					
ANR	2664952	Identifier	flags		2664876	0					
ANR	2664953	Argument	mode		2664876	2					
ANR	2664954	Identifier	mode		2664876	0					
ANR	2664955	IfStatement	if ( ! file )		2664876	7					
ANR	2664956	Condition	! file	678:4:16958:16962	2664876	0	True				
ANR	2664957	UnaryOperationExpression	! file		2664876	0					
ANR	2664958	UnaryOperator	!		2664876	0					
ANR	2664959	Identifier	file		2664876	1					
ANR	2664960	CompoundStatement		21:11:390:390	2664876	1					
ANR	2664961	ExpressionStatement	free ( full_logical_name )	679:2:16969:16994	2664876	0	True				
ANR	2664962	CallExpression	free ( full_logical_name )		2664876	0					
ANR	2664963	Callee	free		2664876	0					
ANR	2664964	Identifier	free		2664876	0					
ANR	2664965	ArgumentList	full_logical_name		2664876	1					
ANR	2664966	Argument	full_logical_name		2664876	0					
ANR	2664967	Identifier	full_logical_name		2664876	0					
ANR	2664968	ReturnStatement	return - 1 ;	680:2:16998:17007	2664876	1	True				
ANR	2664969	UnaryOperationExpression	- 1		2664876	0					
ANR	2664970	UnaryOperator	-		2664876	0					
ANR	2664971	PrimaryExpression	1		2664876	1					
ANR	2664972	ExpressionStatement	info = make_info ( full_logical_name )	683:1:17014:17051	2664876	8	True				
ANR	2664973	AssignmentExpression	info = make_info ( full_logical_name )		2664876	0		=			
ANR	2664974	Identifier	info		2664876	0					
ANR	2664975	CallExpression	make_info ( full_logical_name )		2664876	1					
ANR	2664976	Callee	make_info		2664876	0					
ANR	2664977	Identifier	make_info		2664876	0					
ANR	2664978	ArgumentList	full_logical_name		2664876	1					
ANR	2664979	Argument	full_logical_name		2664876	0					
ANR	2664980	Identifier	full_logical_name		2664876	0					
ANR	2664981	ExpressionStatement	info -> open_count ++	684:1:17054:17072	2664876	9	True				
ANR	2664982	PostIncDecOperationExpression	info -> open_count ++		2664876	0					
ANR	2664983	PtrMemberAccess	info -> open_count		2664876	0					
ANR	2664984	Identifier	info		2664876	0					
ANR	2664985	Identifier	open_count		2664876	1					
ANR	2664986	IncDec	++		2664876	1					
ANR	2664987	ExpressionStatement	flags &= ~ ( O_TRUNC )	688:1:17136:17155	2664876	10	True				
ANR	2664988	AssignmentExpression	flags &= ~ ( O_TRUNC )		2664876	0		&=			
ANR	2664989	Identifier	flags		2664876	0					
ANR	2664990	UnaryOperationExpression	~ ( O_TRUNC )		2664876	1					
ANR	2664991	UnaryOperator	~		2664876	0					
ANR	2664992	Identifier	O_TRUNC		2664876	1					
ANR	2664993	ExpressionStatement	flags &= ~ ( O_CREAT )	689:1:17158:17177	2664876	11	True				
ANR	2664994	AssignmentExpression	flags &= ~ ( O_CREAT )		2664876	0		&=			
ANR	2664995	Identifier	flags		2664876	0					
ANR	2664996	UnaryOperationExpression	~ ( O_CREAT )		2664876	1					
ANR	2664997	UnaryOperator	~		2664876	0					
ANR	2664998	Identifier	O_CREAT		2664876	1					
ANR	2664999	ExpressionStatement	"pointers [ fd ] = new CondorFilePointer ( file , info , flags , full_logical_name )"	693:1:17219:17290	2664876	12	True				
ANR	2665000	AssignmentExpression	"pointers [ fd ] = new CondorFilePointer ( file , info , flags , full_logical_name )"		2664876	0		=			
ANR	2665001	ArrayIndexing	pointers [ fd ]		2664876	0					
ANR	2665002	Identifier	pointers		2664876	0					
ANR	2665003	Identifier	fd		2664876	1					
ANR	2665004	Expression	"file , info , flags , full_logical_name"		2664876	1					
ANR	2665005	Identifier	file		2664876	0					
ANR	2665006	Expression	"info , flags , full_logical_name"		2664876	1					
ANR	2665007	Identifier	info		2664876	0					
ANR	2665008	Expression	"flags , full_logical_name"		2664876	1					
ANR	2665009	Identifier	flags		2664876	0					
ANR	2665010	Identifier	full_logical_name		2664876	1					
ANR	2665011	ExpressionStatement	free ( full_logical_name )	694:1:17293:17318	2664876	13	True				
ANR	2665012	CallExpression	free ( full_logical_name )		2664876	0					
ANR	2665013	Callee	free		2664876	0					
ANR	2665014	Identifier	free		2664876	0					
ANR	2665015	ArgumentList	full_logical_name		2664876	1					
ANR	2665016	Argument	full_logical_name		2664876	0					
ANR	2665017	Identifier	full_logical_name		2664876	0					
ANR	2665018	ReturnStatement	return fd ;	695:1:17321:17330	2664876	14	True				
ANR	2665019	Identifier	fd		2664876	0					
ANR	2665020	ReturnType	int		2664876	1					
ANR	2665021	Identifier	CondorFileTable :: open		2664876	2					
ANR	2665022	ParameterList	"const char * logical_name , int flags , int mode"		2664876	3					
ANR	2665023	Parameter	const char * logical_name	657:27:16526:16549	2664876	0	True				
ANR	2665024	ParameterType	const char *		2664876	0					
ANR	2665025	Identifier	logical_name		2664876	1					
ANR	2665026	Parameter	int flags	657:53:16552:16560	2664876	1	True				
ANR	2665027	ParameterType	int		2664876	0					
ANR	2665028	Identifier	flags		2664876	1					
ANR	2665029	Parameter	int mode	657:64:16563:16570	2664876	2	True				
ANR	2665030	ParameterType	int		2664876	0					
ANR	2665031	Identifier	mode		2664876	1					
ANR	2665032	CFGEntryNode	ENTRY		2664876		True				
ANR	2665033	CFGExitNode	EXIT		2664876		True				
ANR	2665034	Symbol	logical_name		2664876						
ANR	2665035	Symbol	errno		2664876						
ANR	2665036	Symbol	NULL		2664876						
ANR	2665037	Symbol	find_empty		2664876						
ANR	2665038	Symbol	O_CREAT		2664876						
ANR	2665039	Symbol	* fd		2664876						
ANR	2665040	Symbol	flags		2664876						
ANR	2665041	Symbol	make_info		2664876						
ANR	2665042	Symbol	full_logical_name		2664876						
ANR	2665043	Symbol	* pointers		2664876						
ANR	2665044	Symbol	mode		2664876						
ANR	2665045	Symbol	O_TRUNC		2664876						
ANR	2665046	Symbol	file		2664876						
ANR	2665047	Symbol	& full_logical_name		2664876						
ANR	2665048	Symbol	info -> open_count		2664876						
ANR	2665049	Symbol	EMFILE		2664876						
ANR	2665050	Symbol	* info		2664876						
ANR	2665051	Symbol	open_file_unique		2664876						
ANR	2665052	Symbol	fd		2664876						
ANR	2665053	Symbol	pointers		2664876						
ANR	2665054	Symbol	info		2664876						
ANR	2665055	Function	CondorFileTable :: install_special	698:0:17335:17674							
ANR	2665056	FunctionDef	"CondorFileTable :: install_special (int real_fd , char * kind)"		2665055	0					
ANR	2665057	CompoundStatement		699:0:17399:17674	2665055	0					
ANR	2665058	IdentifierDeclStatement	int fd = find_empty ( ) ;	700:1:17402:17423	2665055	0	True				
ANR	2665059	IdentifierDecl	fd = find_empty ( )		2665055	0					
ANR	2665060	IdentifierDeclType	int		2665055	0					
ANR	2665061	Identifier	fd		2665055	1					
ANR	2665062	AssignmentExpression	fd = find_empty ( )		2665055	2		=			
ANR	2665063	Identifier	fd		2665055	0					
ANR	2665064	CallExpression	find_empty ( )		2665055	1					
ANR	2665065	Callee	find_empty		2665055	0					
ANR	2665066	Identifier	find_empty		2665055	0					
ANR	2665067	ArgumentList			2665055	1					
ANR	2665068	IfStatement	if ( fd < 0 )		2665055	1					
ANR	2665069	Condition	fd < 0	701:4:17429:17432	2665055	0	True				
ANR	2665070	RelationalExpression	fd < 0		2665055	0		<			
ANR	2665071	Identifier	fd		2665055	0					
ANR	2665072	PrimaryExpression	0		2665055	1					
ANR	2665073	ReturnStatement	return - 1 ;	701:10:17435:17444	2665055	1	True				
ANR	2665074	UnaryOperationExpression	- 1		2665055	0					
ANR	2665075	UnaryOperator	-		2665055	0					
ANR	2665076	PrimaryExpression	1		2665055	1					
ANR	2665077	IdentifierDeclStatement	CondorFileInfo * i = make_info ( kind ) ;	703:1:17448:17482	2665055	2	True				
ANR	2665078	IdentifierDecl	* i = make_info ( kind )		2665055	0					
ANR	2665079	IdentifierDeclType	CondorFileInfo *		2665055	0					
ANR	2665080	Identifier	i		2665055	1					
ANR	2665081	AssignmentExpression	* i = make_info ( kind )		2665055	2		=			
ANR	2665082	Identifier	i		2665055	0					
ANR	2665083	CallExpression	make_info ( kind )		2665055	1					
ANR	2665084	Callee	make_info		2665055	0					
ANR	2665085	Identifier	make_info		2665055	0					
ANR	2665086	ArgumentList	kind		2665055	1					
ANR	2665087	Argument	kind		2665055	0					
ANR	2665088	Identifier	kind		2665055	0					
ANR	2665089	ExpressionStatement	i -> already_warned = 1	704:1:17485:17506	2665055	3	True				
ANR	2665090	AssignmentExpression	i -> already_warned = 1		2665055	0		=			
ANR	2665091	PtrMemberAccess	i -> already_warned		2665055	0					
ANR	2665092	Identifier	i		2665055	0					
ANR	2665093	Identifier	already_warned		2665055	1					
ANR	2665094	PrimaryExpression	1		2665055	1					
ANR	2665095	ExpressionStatement	i -> open_count ++	705:1:17509:17524	2665055	4	True				
ANR	2665096	PostIncDecOperationExpression	i -> open_count ++		2665055	0					
ANR	2665097	PtrMemberAccess	i -> open_count		2665055	0					
ANR	2665098	Identifier	i		2665055	0					
ANR	2665099	Identifier	open_count		2665055	1					
ANR	2665100	IncDec	++		2665055	1					
ANR	2665101	IdentifierDeclStatement	CondorFileSpecial * s = new CondorFileSpecial ( ) ;	707:1:17528:17574	2665055	5	True				
ANR	2665102	IdentifierDecl	* s = new CondorFileSpecial ( )		2665055	0					
ANR	2665103	IdentifierDeclType	CondorFileSpecial *		2665055	0					
ANR	2665104	Identifier	s		2665055	1					
ANR	2665105	AssignmentExpression	* s = new CondorFileSpecial ( )		2665055	2		=			
ANR	2665106	Identifier	s		2665055	0					
ANR	2665107	UnaryExpression	new CondorFileSpecial ( )		2665055	1					
ANR	2665108	ExpressionStatement	s -> attach ( real_fd )	708:1:17577:17597	2665055	6	True				
ANR	2665109	CallExpression	s -> attach ( real_fd )		2665055	0					
ANR	2665110	Callee	s -> attach		2665055	0					
ANR	2665111	PtrMemberAccess	s -> attach		2665055	0					
ANR	2665112	Identifier	s		2665055	0					
ANR	2665113	Identifier	attach		2665055	1					
ANR	2665114	ArgumentList	real_fd		2665055	1					
ANR	2665115	Argument	real_fd		2665055	0					
ANR	2665116	Identifier	real_fd		2665055	0					
ANR	2665117	ExpressionStatement	"pointers [ fd ] = new CondorFilePointer ( s , i , O_RDWR , kind )"	710:1:17601:17659	2665055	7	True				
ANR	2665118	AssignmentExpression	"pointers [ fd ] = new CondorFilePointer ( s , i , O_RDWR , kind )"		2665055	0		=			
ANR	2665119	ArrayIndexing	pointers [ fd ]		2665055	0					
ANR	2665120	Identifier	pointers		2665055	0					
ANR	2665121	Identifier	fd		2665055	1					
ANR	2665122	Expression	"s , i , O_RDWR , kind"		2665055	1					
ANR	2665123	Identifier	s		2665055	0					
ANR	2665124	Expression	"i , O_RDWR , kind"		2665055	1					
ANR	2665125	Identifier	i		2665055	0					
ANR	2665126	Expression	"O_RDWR , kind"		2665055	1					
ANR	2665127	Identifier	O_RDWR		2665055	0					
ANR	2665128	Identifier	kind		2665055	1					
ANR	2665129	ReturnStatement	return fd ;	712:1:17663:17672	2665055	8	True				
ANR	2665130	Identifier	fd		2665055	0					
ANR	2665131	ReturnType	int		2665055	1					
ANR	2665132	Identifier	CondorFileTable :: install_special		2665055	2					
ANR	2665133	ParameterList	"int real_fd , char * kind"		2665055	3					
ANR	2665134	Parameter	int real_fd	698:38:17373:17383	2665055	0	True				
ANR	2665135	ParameterType	int		2665055	0					
ANR	2665136	Identifier	real_fd		2665055	1					
ANR	2665137	Parameter	char * kind	698:51:17386:17395	2665055	1	True				
ANR	2665138	ParameterType	char *		2665055	0					
ANR	2665139	Identifier	kind		2665055	1					
ANR	2665140	CFGEntryNode	ENTRY		2665055		True				
ANR	2665141	CFGExitNode	EXIT		2665055		True				
ANR	2665142	Symbol	find_empty		2665055						
ANR	2665143	Symbol	kind		2665055						
ANR	2665144	Symbol	* fd		2665055						
ANR	2665145	Symbol	i -> already_warned		2665055						
ANR	2665146	Symbol	i		2665055						
ANR	2665147	Symbol	make_info		2665055						
ANR	2665148	Symbol	* pointers		2665055						
ANR	2665149	Symbol	O_RDWR		2665055						
ANR	2665150	Symbol	* i		2665055						
ANR	2665151	Symbol	s		2665055						
ANR	2665152	Symbol	real_fd		2665055						
ANR	2665153	Symbol	fd		2665055						
ANR	2665154	Symbol	i -> open_count		2665055						
ANR	2665155	Symbol	pointers		2665055						
ANR	2665156	Function	CondorFileTable :: pipe	721:0:17879:18213							
ANR	2665157	FunctionDef	CondorFileTable :: pipe (int fds [ ])		2665156	0					
ANR	2665158	CompoundStatement		722:0:17916:18213	2665156	0					
ANR	2665159	IdentifierDeclStatement	int real_fds [ 2 ] ;	723:1:17919:17934	2665156	0	True				
ANR	2665160	IdentifierDecl	real_fds [ 2 ]		2665156	0					
ANR	2665161	IdentifierDeclType	int [ 2 ]		2665156	0					
ANR	2665162	Identifier	real_fds		2665156	1					
ANR	2665163	PrimaryExpression	2		2665156	2					
ANR	2665164	IdentifierDeclStatement	int scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED ) ;	725:1:17938:17985	2665156	1	True				
ANR	2665165	IdentifierDecl	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2665156	0					
ANR	2665166	IdentifierDeclType	int		2665156	0					
ANR	2665167	Identifier	scm		2665156	1					
ANR	2665168	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2665156	2		=			
ANR	2665169	Identifier	scm		2665156	0					
ANR	2665170	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2665156	1					
ANR	2665171	Callee	SetSyscalls		2665156	0					
ANR	2665172	Identifier	SetSyscalls		2665156	0					
ANR	2665173	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		2665156	1					
ANR	2665174	Argument	SYS_LOCAL | SYS_UNMAPPED		2665156	0					
ANR	2665175	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		2665156	0		|			
ANR	2665176	Identifier	SYS_LOCAL		2665156	0					
ANR	2665177	Identifier	SYS_UNMAPPED		2665156	1					
ANR	2665178	Statement	int	726:1:17988:17990	2665156	2	True				
ANR	2665179	Statement	result	726:5:17992:17997	2665156	3	True				
ANR	2665180	Statement	=	726:12:17999:17999	2665156	4	True				
ANR	2665181	Statement	::	726:14:18001:18002	2665156	5	True				
ANR	2665182	ExpressionStatement	pipe ( real_fds )	726:16:18003:18017	2665156	6	True				
ANR	2665183	CallExpression	pipe ( real_fds )		2665156	0					
ANR	2665184	Callee	pipe		2665156	0					
ANR	2665185	Identifier	pipe		2665156	0					
ANR	2665186	ArgumentList	real_fds		2665156	1					
ANR	2665187	Argument	real_fds		2665156	0					
ANR	2665188	Identifier	real_fds		2665156	0					
ANR	2665189	ExpressionStatement	SetSyscalls ( scm )	727:1:18020:18036	2665156	7	True				
ANR	2665190	CallExpression	SetSyscalls ( scm )		2665156	0					
ANR	2665191	Callee	SetSyscalls		2665156	0					
ANR	2665192	Identifier	SetSyscalls		2665156	0					
ANR	2665193	ArgumentList	scm		2665156	1					
ANR	2665194	Argument	scm		2665156	0					
ANR	2665195	Identifier	scm		2665156	0					
ANR	2665196	IfStatement	if ( result < 0 )		2665156	8					
ANR	2665197	Condition	result < 0	729:4:18043:18050	2665156	0	True				
ANR	2665198	RelationalExpression	result < 0		2665156	0		<			
ANR	2665199	Identifier	result		2665156	0					
ANR	2665200	PrimaryExpression	0		2665156	1					
ANR	2665201	ReturnStatement	return - 1 ;	729:14:18053:18062	2665156	1	True				
ANR	2665202	UnaryOperationExpression	- 1		2665156	0					
ANR	2665203	UnaryOperator	-		2665156	0					
ANR	2665204	PrimaryExpression	1		2665156	1					
ANR	2665205	ExpressionStatement	"fds [ 0 ] = install_special ( real_fds [ 0 ] , ""pipes"" )"	731:1:18066:18111	2665156	9	True				
ANR	2665206	AssignmentExpression	"fds [ 0 ] = install_special ( real_fds [ 0 ] , ""pipes"" )"		2665156	0		=			
ANR	2665207	ArrayIndexing	fds [ 0 ]		2665156	0					
ANR	2665208	Identifier	fds		2665156	0					
ANR	2665209	PrimaryExpression	0		2665156	1					
ANR	2665210	CallExpression	"install_special ( real_fds [ 0 ] , ""pipes"" )"		2665156	1					
ANR	2665211	Callee	install_special		2665156	0					
ANR	2665212	Identifier	install_special		2665156	0					
ANR	2665213	ArgumentList	real_fds [ 0 ]		2665156	1					
ANR	2665214	Argument	real_fds [ 0 ]		2665156	0					
ANR	2665215	ArrayIndexing	real_fds [ 0 ]		2665156	0					
ANR	2665216	Identifier	real_fds		2665156	0					
ANR	2665217	PrimaryExpression	0		2665156	1					
ANR	2665218	Argument	"""pipes"""		2665156	1					
ANR	2665219	PrimaryExpression	"""pipes"""		2665156	0					
ANR	2665220	ExpressionStatement	"fds [ 1 ] = install_special ( real_fds [ 1 ] , ""pipes"" )"	732:1:18114:18159	2665156	10	True				
ANR	2665221	AssignmentExpression	"fds [ 1 ] = install_special ( real_fds [ 1 ] , ""pipes"" )"		2665156	0		=			
ANR	2665222	ArrayIndexing	fds [ 1 ]		2665156	0					
ANR	2665223	Identifier	fds		2665156	0					
ANR	2665224	PrimaryExpression	1		2665156	1					
ANR	2665225	CallExpression	"install_special ( real_fds [ 1 ] , ""pipes"" )"		2665156	1					
ANR	2665226	Callee	install_special		2665156	0					
ANR	2665227	Identifier	install_special		2665156	0					
ANR	2665228	ArgumentList	real_fds [ 1 ]		2665156	1					
ANR	2665229	Argument	real_fds [ 1 ]		2665156	0					
ANR	2665230	ArrayIndexing	real_fds [ 1 ]		2665156	0					
ANR	2665231	Identifier	real_fds		2665156	0					
ANR	2665232	PrimaryExpression	1		2665156	1					
ANR	2665233	Argument	"""pipes"""		2665156	1					
ANR	2665234	PrimaryExpression	"""pipes"""		2665156	0					
ANR	2665235	IfStatement	if ( fds [ 0 ] < 0 || fds [ 1 ] < 0 )		2665156	11					
ANR	2665236	Condition	fds [ 0 ] < 0 || fds [ 1 ] < 0	734:5:18167:18186	2665156	0	True				
ANR	2665237	OrExpression	fds [ 0 ] < 0 || fds [ 1 ] < 0		2665156	0		||			
ANR	2665238	RelationalExpression	fds [ 0 ] < 0		2665156	0		<			
ANR	2665239	ArrayIndexing	fds [ 0 ]		2665156	0					
ANR	2665240	Identifier	fds		2665156	0					
ANR	2665241	PrimaryExpression	0		2665156	1					
ANR	2665242	PrimaryExpression	0		2665156	1					
ANR	2665243	RelationalExpression	fds [ 1 ] < 0		2665156	1		<			
ANR	2665244	ArrayIndexing	fds [ 1 ]		2665156	0					
ANR	2665245	Identifier	fds		2665156	0					
ANR	2665246	PrimaryExpression	1		2665156	1					
ANR	2665247	PrimaryExpression	0		2665156	1					
ANR	2665248	ReturnStatement	return - 1 ;	734:28:18190:18199	2665156	1	True				
ANR	2665249	UnaryOperationExpression	- 1		2665156	0					
ANR	2665250	UnaryOperator	-		2665156	0					
ANR	2665251	PrimaryExpression	1		2665156	1					
ANR	2665252	ReturnStatement	return 0 ;	736:1:18203:18211	2665156	12	True				
ANR	2665253	PrimaryExpression	0		2665156	0					
ANR	2665254	ReturnType	int		2665156	1					
ANR	2665255	Identifier	CondorFileTable :: pipe		2665156	2					
ANR	2665256	ParameterList	int fds [ ]		2665156	3					
ANR	2665257	Parameter	int fds [ ]	721:26:17905:17913	2665156	0	True				
ANR	2665258	ParameterType	int [ ]		2665156	0					
ANR	2665259	Identifier	fds		2665156	1					
ANR	2665260	CFGEntryNode	ENTRY		2665156		True				
ANR	2665261	CFGExitNode	EXIT		2665156		True				
ANR	2665262	Symbol	result		2665156						
ANR	2665263	Symbol	* real_fds		2665156						
ANR	2665264	Symbol	* fds		2665156						
ANR	2665265	Symbol	fds		2665156						
ANR	2665266	Symbol	real_fds		2665156						
ANR	2665267	Symbol	install_special		2665156						
ANR	2665268	Symbol	SYS_UNMAPPED		2665156						
ANR	2665269	Symbol	SYS_LOCAL		2665156						
ANR	2665270	Symbol	SetSyscalls		2665156						
ANR	2665271	Symbol	scm		2665156						
ANR	2665272	Function	CondorFileTable :: socket	745:0:18397:18666							
ANR	2665273	FunctionDef	"CondorFileTable :: socket (int domain , int type , int protocol)"		2665272	0					
ANR	2665274	CompoundStatement		746:0:18463:18666	2665272	0					
ANR	2665275	IdentifierDeclStatement	int scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED ) ;	747:1:18466:18513	2665272	0	True				
ANR	2665276	IdentifierDecl	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2665272	0					
ANR	2665277	IdentifierDeclType	int		2665272	0					
ANR	2665278	Identifier	scm		2665272	1					
ANR	2665279	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2665272	2		=			
ANR	2665280	Identifier	scm		2665272	0					
ANR	2665281	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2665272	1					
ANR	2665282	Callee	SetSyscalls		2665272	0					
ANR	2665283	Identifier	SetSyscalls		2665272	0					
ANR	2665284	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		2665272	1					
ANR	2665285	Argument	SYS_LOCAL | SYS_UNMAPPED		2665272	0					
ANR	2665286	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		2665272	0		|			
ANR	2665287	Identifier	SYS_LOCAL		2665272	0					
ANR	2665288	Identifier	SYS_UNMAPPED		2665272	1					
ANR	2665289	Statement	int	748:1:18517:18519	2665272	1	True				
ANR	2665290	Statement	real_fd	748:5:18521:18527	2665272	2	True				
ANR	2665291	Statement	=	748:13:18529:18529	2665272	3	True				
ANR	2665292	Statement	::	748:15:18531:18532	2665272	4	True				
ANR	2665293	ExpressionStatement	"socket ( domain , type , protocol )"	748:17:18533:18561	2665272	5	True				
ANR	2665294	CallExpression	"socket ( domain , type , protocol )"		2665272	0					
ANR	2665295	Callee	socket		2665272	0					
ANR	2665296	Identifier	socket		2665272	0					
ANR	2665297	ArgumentList	domain		2665272	1					
ANR	2665298	Argument	domain		2665272	0					
ANR	2665299	Identifier	domain		2665272	0					
ANR	2665300	Argument	type		2665272	1					
ANR	2665301	Identifier	type		2665272	0					
ANR	2665302	Argument	protocol		2665272	2					
ANR	2665303	Identifier	protocol		2665272	0					
ANR	2665304	ExpressionStatement	SetSyscalls ( scm )	749:1:18564:18580	2665272	6	True				
ANR	2665305	CallExpression	SetSyscalls ( scm )		2665272	0					
ANR	2665306	Callee	SetSyscalls		2665272	0					
ANR	2665307	Identifier	SetSyscalls		2665272	0					
ANR	2665308	ArgumentList	scm		2665272	1					
ANR	2665309	Argument	scm		2665272	0					
ANR	2665310	Identifier	scm		2665272	0					
ANR	2665311	IfStatement	if ( real_fd < 0 )		2665272	7					
ANR	2665312	Condition	real_fd < 0	751:4:18587:18595	2665272	0	True				
ANR	2665313	RelationalExpression	real_fd < 0		2665272	0		<			
ANR	2665314	Identifier	real_fd		2665272	0					
ANR	2665315	PrimaryExpression	0		2665272	1					
ANR	2665316	ReturnStatement	return - 1 ;	751:15:18598:18607	2665272	1	True				
ANR	2665317	UnaryOperationExpression	- 1		2665272	0					
ANR	2665318	UnaryOperator	-		2665272	0					
ANR	2665319	PrimaryExpression	1		2665272	1					
ANR	2665320	ReturnStatement	"return install_special ( real_fd , ""network connections"" ) ;"	753:1:18611:18664	2665272	8	True				
ANR	2665321	CallExpression	"install_special ( real_fd , ""network connections"" )"		2665272	0					
ANR	2665322	Callee	install_special		2665272	0					
ANR	2665323	Identifier	install_special		2665272	0					
ANR	2665324	ArgumentList	real_fd		2665272	1					
ANR	2665325	Argument	real_fd		2665272	0					
ANR	2665326	Identifier	real_fd		2665272	0					
ANR	2665327	Argument	"""network connections"""		2665272	1					
ANR	2665328	PrimaryExpression	"""network connections"""		2665272	0					
ANR	2665329	ReturnType	int		2665272	1					
ANR	2665330	Identifier	CondorFileTable :: socket		2665272	2					
ANR	2665331	ParameterList	"int domain , int type , int protocol"		2665272	3					
ANR	2665332	Parameter	int domain	745:29:18426:18435	2665272	0	True				
ANR	2665333	ParameterType	int		2665272	0					
ANR	2665334	Identifier	domain		2665272	1					
ANR	2665335	Parameter	int type	745:41:18438:18445	2665272	1	True				
ANR	2665336	ParameterType	int		2665272	0					
ANR	2665337	Identifier	type		2665272	1					
ANR	2665338	Parameter	int protocol	745:51:18448:18459	2665272	2	True				
ANR	2665339	ParameterType	int		2665272	0					
ANR	2665340	Identifier	protocol		2665272	1					
ANR	2665341	CFGEntryNode	ENTRY		2665272		True				
ANR	2665342	CFGExitNode	EXIT		2665272		True				
ANR	2665343	Symbol	protocol		2665272						
ANR	2665344	Symbol	install_special		2665272						
ANR	2665345	Symbol	SYS_UNMAPPED		2665272						
ANR	2665346	Symbol	real_fd		2665272						
ANR	2665347	Symbol	domain		2665272						
ANR	2665348	Symbol	SYS_LOCAL		2665272						
ANR	2665349	Symbol	SetSyscalls		2665272						
ANR	2665350	Symbol	type		2665272						
ANR	2665351	Symbol	scm		2665272						
ANR	2665352	Function	CondorFileTable :: close	765:0:18912:20280							
ANR	2665353	FunctionDef	CondorFileTable :: close (int fd)		2665352	0					
ANR	2665354	CompoundStatement		766:0:18949:20280	2665352	0					
ANR	2665355	IfStatement	if ( ( fd < 0 ) || ( fd >= length ) || ( pointers [ fd ] == 0 ) )		2665352	0					
ANR	2665356	Condition	( fd < 0 ) || ( fd >= length ) || ( pointers [ fd ] == 0 )	767:5:18956:18998	2665352	0	True				
ANR	2665357	OrExpression	( fd < 0 ) || ( fd >= length ) || ( pointers [ fd ] == 0 )		2665352	0		||			
ANR	2665358	RelationalExpression	fd < 0		2665352	0		<			
ANR	2665359	Identifier	fd		2665352	0					
ANR	2665360	PrimaryExpression	0		2665352	1					
ANR	2665361	OrExpression	( fd >= length ) || ( pointers [ fd ] == 0 )		2665352	1		||			
ANR	2665362	RelationalExpression	fd >= length		2665352	0		>=			
ANR	2665363	Identifier	fd		2665352	0					
ANR	2665364	Identifier	length		2665352	1					
ANR	2665365	EqualityExpression	pointers [ fd ] == 0		2665352	1		==			
ANR	2665366	ArrayIndexing	pointers [ fd ]		2665352	0					
ANR	2665367	Identifier	pointers		2665352	0					
ANR	2665368	Identifier	fd		2665352	1					
ANR	2665369	PrimaryExpression	0		2665352	1					
ANR	2665370	CompoundStatement		2:51:52:52	2665352	1					
ANR	2665371	ExpressionStatement	errno = EBADF	768:2:19006:19019	2665352	0	True				
ANR	2665372	AssignmentExpression	errno = EBADF		2665352	0		=			
ANR	2665373	Identifier	errno		2665352	0					
ANR	2665374	Identifier	EBADF		2665352	1					
ANR	2665375	ReturnStatement	return - 1 ;	769:2:19023:19032	2665352	1	True				
ANR	2665376	UnaryOperationExpression	- 1		2665352	0					
ANR	2665377	UnaryOperator	-		2665352	0					
ANR	2665378	PrimaryExpression	1		2665352	1					
ANR	2665379	IdentifierDeclStatement	CondorFilePointer * p = pointers [ fd ] ;	772:1:19039:19074	2665352	1	True				
ANR	2665380	IdentifierDecl	* p = pointers [ fd ]		2665352	0					
ANR	2665381	IdentifierDeclType	CondorFilePointer *		2665352	0					
ANR	2665382	Identifier	p		2665352	1					
ANR	2665383	AssignmentExpression	* p = pointers [ fd ]		2665352	2		=			
ANR	2665384	Identifier	p		2665352	0					
ANR	2665385	ArrayIndexing	pointers [ fd ]		2665352	1					
ANR	2665386	Identifier	pointers		2665352	0					
ANR	2665387	Identifier	fd		2665352	1					
ANR	2665388	IdentifierDeclStatement	CondorFile * f = p -> file ;	774:1:19109:19132	2665352	2	True				
ANR	2665389	IdentifierDecl	* f = p -> file		2665352	0					
ANR	2665390	IdentifierDeclType	CondorFile *		2665352	0					
ANR	2665391	Identifier	f		2665352	1					
ANR	2665392	AssignmentExpression	* f = p -> file		2665352	2		=			
ANR	2665393	Identifier	f		2665352	0					
ANR	2665394	PtrMemberAccess	p -> file		2665352	1					
ANR	2665395	Identifier	p		2665352	0					
ANR	2665396	Identifier	file		2665352	1					
ANR	2665397	IfStatement	if ( f && count_file_uses ( f ) == 1 )		2665352	3					
ANR	2665398	Condition	f && count_file_uses ( f ) == 1	780:4:19302:19327	2665352	0	True				
ANR	2665399	AndExpression	f && count_file_uses ( f ) == 1		2665352	0		&&			
ANR	2665400	Identifier	f		2665352	0					
ANR	2665401	EqualityExpression	count_file_uses ( f ) == 1		2665352	1		==			
ANR	2665402	CallExpression	count_file_uses ( f )		2665352	0					
ANR	2665403	Callee	count_file_uses		2665352	0					
ANR	2665404	Identifier	count_file_uses		2665352	0					
ANR	2665405	ArgumentList	f		2665352	1					
ANR	2665406	Argument	f		2665352	0					
ANR	2665407	Identifier	f		2665352	0					
ANR	2665408	PrimaryExpression	1		2665352	1					
ANR	2665409	CompoundStatement		31:2:973:996	2665352	1					
ANR	2665410	IdentifierDeclStatement	int result = f -> close ( ) ;	796:2:19923:19946	2665352	0	True				
ANR	2665411	IdentifierDecl	result = f -> close ( )		2665352	0					
ANR	2665412	IdentifierDeclType	int		2665352	0					
ANR	2665413	Identifier	result		2665352	1					
ANR	2665414	AssignmentExpression	result = f -> close ( )		2665352	2		=			
ANR	2665415	Identifier	result		2665352	0					
ANR	2665416	CallExpression	f -> close ( )		2665352	1					
ANR	2665417	Callee	f -> close		2665352	0					
ANR	2665418	PtrMemberAccess	f -> close		2665352	0					
ANR	2665419	Identifier	f		2665352	0					
ANR	2665420	Identifier	close		2665352	1					
ANR	2665421	ArgumentList			2665352	1					
ANR	2665422	IfStatement	if ( result != 0 )		2665352	1					
ANR	2665423	Condition	result != 0	797:6:19954:19962	2665352	0	True				
ANR	2665424	EqualityExpression	result != 0		2665352	0		!=			
ANR	2665425	Identifier	result		2665352	0					
ANR	2665426	PrimaryExpression	0		2665352	1					
ANR	2665427	CompoundStatement		32:18:1016:1016	2665352	1					
ANR	2665428	ReturnStatement	return result ;	798:3:19971:19984	2665352	0	True				
ANR	2665429	Identifier	result		2665352	0					
ANR	2665430	Statement	delete	800:2:19992:19997	2665352	2	True				
ANR	2665431	ExpressionStatement	f	800:9:19999:20000	2665352	3	True				
ANR	2665432	Identifier	f		2665352	0					
ANR	2665433	IfStatement	if ( count_pointer_uses ( p ) == 1 )		2665352	4					
ANR	2665434	Condition	count_pointer_uses ( p ) == 1	807:4:20152:20175	2665352	0	True				
ANR	2665435	EqualityExpression	count_pointer_uses ( p ) == 1		2665352	0		==			
ANR	2665436	CallExpression	count_pointer_uses ( p )		2665352	0					
ANR	2665437	Callee	count_pointer_uses		2665352	0					
ANR	2665438	Identifier	count_pointer_uses		2665352	0					
ANR	2665439	ArgumentList	p		2665352	1					
ANR	2665440	Argument	p		2665352	0					
ANR	2665441	Identifier	p		2665352	0					
ANR	2665442	PrimaryExpression	1		2665352	1					
ANR	2665443	CompoundStatement		42:30:1228:1228	2665352	1					
ANR	2665444	Statement	delete	808:2:20182:20187	2665352	0	True				
ANR	2665445	ExpressionStatement	p	808:9:20189:20190	2665352	1	True				
ANR	2665446	Identifier	p		2665352	0					
ANR	2665447	ExpressionStatement	pointers [ fd ] = 0	814:1:20253:20267	2665352	5	True				
ANR	2665448	AssignmentExpression	pointers [ fd ] = 0		2665352	0		=			
ANR	2665449	ArrayIndexing	pointers [ fd ]		2665352	0					
ANR	2665450	Identifier	pointers		2665352	0					
ANR	2665451	Identifier	fd		2665352	1					
ANR	2665452	PrimaryExpression	0		2665352	1					
ANR	2665453	ReturnStatement	return 0 ;	815:1:20270:20278	2665352	6	True				
ANR	2665454	PrimaryExpression	0		2665352	0					
ANR	2665455	ReturnType	int		2665352	1					
ANR	2665456	Identifier	CondorFileTable :: close		2665352	2					
ANR	2665457	ParameterList	int fd		2665352	3					
ANR	2665458	Parameter	int fd	765:28:18940:18945	2665352	0	True				
ANR	2665459	ParameterType	int		2665352	0					
ANR	2665460	Identifier	fd		2665352	1					
ANR	2665461	CFGEntryNode	ENTRY		2665352		True				
ANR	2665462	CFGExitNode	EXIT		2665352		True				
ANR	2665463	Symbol	errno		2665352						
ANR	2665464	Symbol	f		2665352						
ANR	2665465	Symbol	* fd		2665352						
ANR	2665466	Symbol	length		2665352						
ANR	2665467	Symbol	f -> close		2665352						
ANR	2665468	Symbol	EBADF		2665352						
ANR	2665469	Symbol	* pointers		2665352						
ANR	2665470	Symbol	p		2665352						
ANR	2665471	Symbol	result		2665352						
ANR	2665472	Symbol	* f		2665352						
ANR	2665473	Symbol	p -> file		2665352						
ANR	2665474	Symbol	count_file_uses		2665352						
ANR	2665475	Symbol	* p		2665352						
ANR	2665476	Symbol	count_pointer_uses		2665352						
ANR	2665477	Symbol	fd		2665352						
ANR	2665478	Symbol	pointers		2665352						
ANR	2665479	Function	CondorFileTable :: read	818:0:20283:21031							
ANR	2665480	FunctionDef	"CondorFileTable :: read (int fd , void * data , size_t nbyte)"		2665479	0					
ANR	2665481	CompoundStatement		819:0:20349:21031	2665479	0					
ANR	2665482	IfStatement	if ( resume ( fd ) < 0 )		2665479	0					
ANR	2665483	Condition	resume ( fd ) < 0	820:5:20356:20367	2665479	0	True				
ANR	2665484	RelationalExpression	resume ( fd ) < 0		2665479	0		<			
ANR	2665485	CallExpression	resume ( fd )		2665479	0					
ANR	2665486	Callee	resume		2665479	0					
ANR	2665487	Identifier	resume		2665479	0					
ANR	2665488	ArgumentList	fd		2665479	1					
ANR	2665489	Argument	fd		2665479	0					
ANR	2665490	Identifier	fd		2665479	0					
ANR	2665491	PrimaryExpression	0		2665479	1					
ANR	2665492	ReturnStatement	return - 1 ;	820:20:20371:20380	2665479	1	True				
ANR	2665493	UnaryOperationExpression	- 1		2665479	0					
ANR	2665494	UnaryOperator	-		2665479	0					
ANR	2665495	PrimaryExpression	1		2665479	1					
ANR	2665496	IfStatement	if ( ! pointers [ fd ] -> file -> is_readable ( ) )		2665479	1					
ANR	2665497	Condition	! pointers [ fd ] -> file -> is_readable ( )	822:5:20388:20421	2665479	0	True				
ANR	2665498	UnaryOperationExpression	! pointers [ fd ] -> file -> is_readable ( )		2665479	0					
ANR	2665499	UnaryOperator	!		2665479	0					
ANR	2665500	CallExpression	pointers [ fd ] -> file -> is_readable ( )		2665479	1					
ANR	2665501	Callee	pointers [ fd ] -> file -> is_readable		2665479	0					
ANR	2665502	PtrMemberAccess	pointers [ fd ] -> file -> is_readable		2665479	0					
ANR	2665503	PtrMemberAccess	pointers [ fd ] -> file		2665479	0					
ANR	2665504	ArrayIndexing	pointers [ fd ]		2665479	0					
ANR	2665505	Identifier	pointers		2665479	0					
ANR	2665506	Identifier	fd		2665479	1					
ANR	2665507	Identifier	file		2665479	1					
ANR	2665508	Identifier	is_readable		2665479	1					
ANR	2665509	ArgumentList			2665479	1					
ANR	2665510	CompoundStatement		4:42:75:75	2665479	1					
ANR	2665511	ExpressionStatement	errno = EBADF	823:2:20429:20442	2665479	0	True				
ANR	2665512	AssignmentExpression	errno = EBADF		2665479	0		=			
ANR	2665513	Identifier	errno		2665479	0					
ANR	2665514	Identifier	EBADF		2665479	1					
ANR	2665515	ReturnStatement	return - 1 ;	824:2:20446:20455	2665479	1	True				
ANR	2665516	UnaryOperationExpression	- 1		2665479	0					
ANR	2665517	UnaryOperator	-		2665479	0					
ANR	2665518	PrimaryExpression	1		2665479	1					
ANR	2665519	IfStatement	if ( ( ! data ) || ( nbyte < 0 ) )		2665479	2					
ANR	2665520	Condition	( ! data ) || ( nbyte < 0 )	827:5:20467:20486	2665479	0	True				
ANR	2665521	OrExpression	( ! data ) || ( nbyte < 0 )		2665479	0		||			
ANR	2665522	UnaryOperationExpression	! data		2665479	0					
ANR	2665523	UnaryOperator	!		2665479	0					
ANR	2665524	Identifier	data		2665479	1					
ANR	2665525	RelationalExpression	nbyte < 0		2665479	1		<			
ANR	2665526	Identifier	nbyte		2665479	0					
ANR	2665527	PrimaryExpression	0		2665479	1					
ANR	2665528	CompoundStatement		9:28:140:140	2665479	1					
ANR	2665529	ExpressionStatement	errno = EINVAL	828:2:20494:20508	2665479	0	True				
ANR	2665530	AssignmentExpression	errno = EINVAL		2665479	0		=			
ANR	2665531	Identifier	errno		2665479	0					
ANR	2665532	Identifier	EINVAL		2665479	1					
ANR	2665533	ReturnStatement	return - 1 ;	829:2:20512:20521	2665479	1	True				
ANR	2665534	UnaryOperationExpression	- 1		2665479	0					
ANR	2665535	UnaryOperator	-		2665479	0					
ANR	2665536	PrimaryExpression	1		2665479	1					
ANR	2665537	IdentifierDeclStatement	CondorFilePointer * fp = pointers [ fd ] ;	832:1:20528:20564	2665479	3	True				
ANR	2665538	IdentifierDecl	* fp = pointers [ fd ]		2665479	0					
ANR	2665539	IdentifierDeclType	CondorFilePointer *		2665479	0					
ANR	2665540	Identifier	fp		2665479	1					
ANR	2665541	AssignmentExpression	* fp = pointers [ fd ]		2665479	2		=			
ANR	2665542	Identifier	fp		2665479	0					
ANR	2665543	ArrayIndexing	pointers [ fd ]		2665479	1					
ANR	2665544	Identifier	pointers		2665479	0					
ANR	2665545	Identifier	fd		2665479	1					
ANR	2665546	IdentifierDeclStatement	CondorFile * f = fp -> file ;	833:1:20567:20591	2665479	4	True				
ANR	2665547	IdentifierDecl	* f = fp -> file		2665479	0					
ANR	2665548	IdentifierDeclType	CondorFile *		2665479	0					
ANR	2665549	Identifier	f		2665479	1					
ANR	2665550	AssignmentExpression	* f = fp -> file		2665479	2		=			
ANR	2665551	Identifier	f		2665479	0					
ANR	2665552	PtrMemberAccess	fp -> file		2665479	1					
ANR	2665553	Identifier	fp		2665479	0					
ANR	2665554	Identifier	file		2665479	1					
ANR	2665555	IfStatement	if ( nbyte == 0 )		2665479	5					
ANR	2665556	Condition	nbyte == 0	835:5:20599:20606	2665479	0	True				
ANR	2665557	EqualityExpression	nbyte == 0		2665479	0		==			
ANR	2665558	Identifier	nbyte		2665479	0					
ANR	2665559	PrimaryExpression	0		2665479	1					
ANR	2665560	ReturnStatement	return 0 ;	835:16:20610:20618	2665479	1	True				
ANR	2665561	PrimaryExpression	0		2665479	0					
ANR	2665562	IdentifierDeclStatement	"int actual = f -> read ( fp -> offset , ( char * ) data , nbyte ) ;"	838:1:20655:20710	2665479	6	True				
ANR	2665563	IdentifierDecl	"actual = f -> read ( fp -> offset , ( char * ) data , nbyte )"		2665479	0					
ANR	2665564	IdentifierDeclType	int		2665479	0					
ANR	2665565	Identifier	actual		2665479	1					
ANR	2665566	AssignmentExpression	"actual = f -> read ( fp -> offset , ( char * ) data , nbyte )"		2665479	2		=			
ANR	2665567	Identifier	actual		2665479	0					
ANR	2665568	CallExpression	"f -> read ( fp -> offset , ( char * ) data , nbyte )"		2665479	1					
ANR	2665569	Callee	f -> read		2665479	0					
ANR	2665570	PtrMemberAccess	f -> read		2665479	0					
ANR	2665571	Identifier	f		2665479	0					
ANR	2665572	Identifier	read		2665479	1					
ANR	2665573	ArgumentList	fp -> offset		2665479	1					
ANR	2665574	Argument	fp -> offset		2665479	0					
ANR	2665575	PtrMemberAccess	fp -> offset		2665479	0					
ANR	2665576	Identifier	fp		2665479	0					
ANR	2665577	Identifier	offset		2665479	1					
ANR	2665578	Argument	( char * ) data		2665479	1					
ANR	2665579	CastExpression	( char * ) data		2665479	0					
ANR	2665580	CastTarget	char *		2665479	0					
ANR	2665581	Identifier	data		2665479	1					
ANR	2665582	Argument	nbyte		2665479	2					
ANR	2665583	Identifier	nbyte		2665479	0					
ANR	2665584	IfStatement	if ( actual < 0 )		2665479	7					
ANR	2665585	Condition	actual < 0	841:4:20767:20774	2665479	0	True				
ANR	2665586	RelationalExpression	actual < 0		2665479	0		<			
ANR	2665587	Identifier	actual		2665479	0					
ANR	2665588	PrimaryExpression	0		2665479	1					
ANR	2665589	ReturnStatement	return - 1 ;	841:14:20777:20786	2665479	1	True				
ANR	2665590	UnaryOperationExpression	- 1		2665479	0					
ANR	2665591	UnaryOperator	-		2665479	0					
ANR	2665592	PrimaryExpression	1		2665479	1					
ANR	2665593	ExpressionStatement	fp -> offset += actual	844:1:20812:20832	2665479	8	True				
ANR	2665594	AssignmentExpression	fp -> offset += actual		2665479	0		+=			
ANR	2665595	PtrMemberAccess	fp -> offset		2665479	0					
ANR	2665596	Identifier	fp		2665479	0					
ANR	2665597	Identifier	offset		2665479	1					
ANR	2665598	Identifier	actual		2665479	1					
ANR	2665599	ExpressionStatement	fp -> info -> read_count ++	847:1:20868:20890	2665479	9	True				
ANR	2665600	PostIncDecOperationExpression	fp -> info -> read_count ++		2665479	0					
ANR	2665601	PtrMemberAccess	fp -> info -> read_count		2665479	0					
ANR	2665602	PtrMemberAccess	fp -> info		2665479	0					
ANR	2665603	Identifier	fp		2665479	0					
ANR	2665604	Identifier	info		2665479	1					
ANR	2665605	Identifier	read_count		2665479	1					
ANR	2665606	IncDec	++		2665479	1					
ANR	2665607	ExpressionStatement	fp -> info -> read_bytes += actual	848:1:20893:20921	2665479	10	True				
ANR	2665608	AssignmentExpression	fp -> info -> read_bytes += actual		2665479	0		+=			
ANR	2665609	PtrMemberAccess	fp -> info -> read_bytes		2665479	0					
ANR	2665610	PtrMemberAccess	fp -> info		2665479	0					
ANR	2665611	Identifier	fp		2665479	0					
ANR	2665612	Identifier	info		2665479	1					
ANR	2665613	Identifier	read_bytes		2665479	1					
ANR	2665614	Identifier	actual		2665479	1					
ANR	2665615	ExpressionStatement	check_safety ( fp )	851:1:20960:20976	2665479	11	True				
ANR	2665616	CallExpression	check_safety ( fp )		2665479	0					
ANR	2665617	Callee	check_safety		2665479	0					
ANR	2665618	Identifier	check_safety		2665479	0					
ANR	2665619	ArgumentList	fp		2665479	1					
ANR	2665620	Argument	fp		2665479	0					
ANR	2665621	Identifier	fp		2665479	0					
ANR	2665622	ReturnStatement	return actual ;	854:1:21016:21029	2665479	12	True				
ANR	2665623	Identifier	actual		2665479	0					
ANR	2665624	ReturnType	ssize_t		2665479	1					
ANR	2665625	Identifier	CondorFileTable :: read		2665479	2					
ANR	2665626	ParameterList	"int fd , void * data , size_t nbyte"		2665479	3					
ANR	2665627	Parameter	int fd	818:31:20314:20319	2665479	0	True				
ANR	2665628	ParameterType	int		2665479	0					
ANR	2665629	Identifier	fd		2665479	1					
ANR	2665630	Parameter	void * data	818:39:20322:20331	2665479	1	True				
ANR	2665631	ParameterType	void *		2665479	0					
ANR	2665632	Identifier	data		2665479	1					
ANR	2665633	Parameter	size_t nbyte	818:51:20334:20345	2665479	2	True				
ANR	2665634	ParameterType	size_t		2665479	0					
ANR	2665635	Identifier	nbyte		2665479	1					
ANR	2665636	CFGEntryNode	ENTRY		2665479		True				
ANR	2665637	CFGExitNode	EXIT		2665479		True				
ANR	2665638	Symbol	data		2665479						
ANR	2665639	Symbol	nbyte		2665479						
ANR	2665640	Symbol	fp		2665479						
ANR	2665641	Symbol	f -> read		2665479						
ANR	2665642	Symbol	* fp -> info		2665479						
ANR	2665643	Symbol	* fp		2665479						
ANR	2665644	Symbol	fp -> info -> read_bytes		2665479						
ANR	2665645	Symbol	pointers [ fd ] -> file -> is_readable		2665479						
ANR	2665646	Symbol	* * * pointers		2665479						
ANR	2665647	Symbol	* * * fd		2665479						
ANR	2665648	Symbol	pointers [ fd ] -> file		2665479						
ANR	2665649	Symbol	* * pointers		2665479						
ANR	2665650	Symbol	pointers		2665479						
ANR	2665651	Symbol	fp -> offset		2665479						
ANR	2665652	Symbol	resume		2665479						
ANR	2665653	Symbol	actual		2665479						
ANR	2665654	Symbol	errno		2665479						
ANR	2665655	Symbol	fp -> file		2665479						
ANR	2665656	Symbol	f		2665479						
ANR	2665657	Symbol	* fd		2665479						
ANR	2665658	Symbol	* * fd		2665479						
ANR	2665659	Symbol	fp -> info -> read_count		2665479						
ANR	2665660	Symbol	EBADF		2665479						
ANR	2665661	Symbol	* pointers		2665479						
ANR	2665662	Symbol	EINVAL		2665479						
ANR	2665663	Symbol	* f		2665479						
ANR	2665664	Symbol	* pointers [ fd ] -> file		2665479						
ANR	2665665	Symbol	* * fp		2665479						
ANR	2665666	Symbol	fp -> info		2665479						
ANR	2665667	Symbol	fd		2665479						
ANR	2665668	Function	CondorFileTable :: write	857:0:21034:22242							
ANR	2665669	FunctionDef	"CondorFileTable :: write (int fd , const void * data , size_t nbyte)"		2665668	0					
ANR	2665670	CompoundStatement		858:0:21107:22242	2665668	0					
ANR	2665671	IfStatement	if ( resume ( fd ) < 0 )		2665668	0					
ANR	2665672	Condition	resume ( fd ) < 0	859:5:21114:21125	2665668	0	True				
ANR	2665673	RelationalExpression	resume ( fd ) < 0		2665668	0		<			
ANR	2665674	CallExpression	resume ( fd )		2665668	0					
ANR	2665675	Callee	resume		2665668	0					
ANR	2665676	Identifier	resume		2665668	0					
ANR	2665677	ArgumentList	fd		2665668	1					
ANR	2665678	Argument	fd		2665668	0					
ANR	2665679	Identifier	fd		2665668	0					
ANR	2665680	PrimaryExpression	0		2665668	1					
ANR	2665681	ReturnStatement	return - 1 ;	859:20:21129:21138	2665668	1	True				
ANR	2665682	UnaryOperationExpression	- 1		2665668	0					
ANR	2665683	UnaryOperator	-		2665668	0					
ANR	2665684	PrimaryExpression	1		2665668	1					
ANR	2665685	IfStatement	if ( ! pointers [ fd ] -> file -> is_writeable ( ) )		2665668	1					
ANR	2665686	Condition	! pointers [ fd ] -> file -> is_writeable ( )	861:5:21146:21180	2665668	0	True				
ANR	2665687	UnaryOperationExpression	! pointers [ fd ] -> file -> is_writeable ( )		2665668	0					
ANR	2665688	UnaryOperator	!		2665668	0					
ANR	2665689	CallExpression	pointers [ fd ] -> file -> is_writeable ( )		2665668	1					
ANR	2665690	Callee	pointers [ fd ] -> file -> is_writeable		2665668	0					
ANR	2665691	PtrMemberAccess	pointers [ fd ] -> file -> is_writeable		2665668	0					
ANR	2665692	PtrMemberAccess	pointers [ fd ] -> file		2665668	0					
ANR	2665693	ArrayIndexing	pointers [ fd ]		2665668	0					
ANR	2665694	Identifier	pointers		2665668	0					
ANR	2665695	Identifier	fd		2665668	1					
ANR	2665696	Identifier	file		2665668	1					
ANR	2665697	Identifier	is_writeable		2665668	1					
ANR	2665698	ArgumentList			2665668	1					
ANR	2665699	CompoundStatement		4:43:76:76	2665668	1					
ANR	2665700	ExpressionStatement	errno = EBADF	862:2:21188:21201	2665668	0	True				
ANR	2665701	AssignmentExpression	errno = EBADF		2665668	0		=			
ANR	2665702	Identifier	errno		2665668	0					
ANR	2665703	Identifier	EBADF		2665668	1					
ANR	2665704	ReturnStatement	return - 1 ;	863:2:21205:21214	2665668	1	True				
ANR	2665705	UnaryOperationExpression	- 1		2665668	0					
ANR	2665706	UnaryOperator	-		2665668	0					
ANR	2665707	PrimaryExpression	1		2665668	1					
ANR	2665708	IfStatement	if ( ( ! data ) || ( nbyte < 0 ) )		2665668	2					
ANR	2665709	Condition	( ! data ) || ( nbyte < 0 )	866:5:21225:21244	2665668	0	True				
ANR	2665710	OrExpression	( ! data ) || ( nbyte < 0 )		2665668	0		||			
ANR	2665711	UnaryOperationExpression	! data		2665668	0					
ANR	2665712	UnaryOperator	!		2665668	0					
ANR	2665713	Identifier	data		2665668	1					
ANR	2665714	RelationalExpression	nbyte < 0		2665668	1		<			
ANR	2665715	Identifier	nbyte		2665668	0					
ANR	2665716	PrimaryExpression	0		2665668	1					
ANR	2665717	CompoundStatement		9:28:140:140	2665668	1					
ANR	2665718	ExpressionStatement	errno = EINVAL	867:2:21252:21266	2665668	0	True				
ANR	2665719	AssignmentExpression	errno = EINVAL		2665668	0		=			
ANR	2665720	Identifier	errno		2665668	0					
ANR	2665721	Identifier	EINVAL		2665668	1					
ANR	2665722	ReturnStatement	return - 1 ;	868:2:21270:21279	2665668	1	True				
ANR	2665723	UnaryOperationExpression	- 1		2665668	0					
ANR	2665724	UnaryOperator	-		2665668	0					
ANR	2665725	PrimaryExpression	1		2665668	1					
ANR	2665726	IfStatement	if ( nbyte == 0 )		2665668	3					
ANR	2665727	Condition	nbyte == 0	871:5:21290:21297	2665668	0	True				
ANR	2665728	EqualityExpression	nbyte == 0		2665668	0		==			
ANR	2665729	Identifier	nbyte		2665668	0					
ANR	2665730	PrimaryExpression	0		2665668	1					
ANR	2665731	ReturnStatement	return 0 ;	871:16:21301:21309	2665668	1	True				
ANR	2665732	PrimaryExpression	0		2665668	0					
ANR	2665733	IdentifierDeclStatement	CondorFilePointer * fp = pointers [ fd ] ;	873:1:21313:21349	2665668	4	True				
ANR	2665734	IdentifierDecl	* fp = pointers [ fd ]		2665668	0					
ANR	2665735	IdentifierDeclType	CondorFilePointer *		2665668	0					
ANR	2665736	Identifier	fp		2665668	1					
ANR	2665737	AssignmentExpression	* fp = pointers [ fd ]		2665668	2		=			
ANR	2665738	Identifier	fp		2665668	0					
ANR	2665739	ArrayIndexing	pointers [ fd ]		2665668	1					
ANR	2665740	Identifier	pointers		2665668	0					
ANR	2665741	Identifier	fd		2665668	1					
ANR	2665742	IdentifierDeclStatement	CondorFile * f = fp -> file ;	874:1:21352:21376	2665668	5	True				
ANR	2665743	IdentifierDecl	* f = fp -> file		2665668	0					
ANR	2665744	IdentifierDeclType	CondorFile *		2665668	0					
ANR	2665745	Identifier	f		2665668	1					
ANR	2665746	AssignmentExpression	* f = fp -> file		2665668	2		=			
ANR	2665747	Identifier	f		2665668	0					
ANR	2665748	PtrMemberAccess	fp -> file		2665668	1					
ANR	2665749	Identifier	fp		2665668	0					
ANR	2665750	Identifier	file		2665668	1					
ANR	2665751	IdentifierDeclStatement	"int actual = f -> write ( fp -> offset , ( char * ) data , nbyte ) ;"	883:1:21767:21822	2665668	6	True				
ANR	2665752	IdentifierDecl	"actual = f -> write ( fp -> offset , ( char * ) data , nbyte )"		2665668	0					
ANR	2665753	IdentifierDeclType	int		2665668	0					
ANR	2665754	Identifier	actual		2665668	1					
ANR	2665755	AssignmentExpression	"actual = f -> write ( fp -> offset , ( char * ) data , nbyte )"		2665668	2		=			
ANR	2665756	Identifier	actual		2665668	0					
ANR	2665757	CallExpression	"f -> write ( fp -> offset , ( char * ) data , nbyte )"		2665668	1					
ANR	2665758	Callee	f -> write		2665668	0					
ANR	2665759	PtrMemberAccess	f -> write		2665668	0					
ANR	2665760	Identifier	f		2665668	0					
ANR	2665761	Identifier	write		2665668	1					
ANR	2665762	ArgumentList	fp -> offset		2665668	1					
ANR	2665763	Argument	fp -> offset		2665668	0					
ANR	2665764	PtrMemberAccess	fp -> offset		2665668	0					
ANR	2665765	Identifier	fp		2665668	0					
ANR	2665766	Identifier	offset		2665668	1					
ANR	2665767	Argument	( char * ) data		2665668	1					
ANR	2665768	CastExpression	( char * ) data		2665668	0					
ANR	2665769	CastTarget	char *		2665668	0					
ANR	2665770	Identifier	data		2665668	1					
ANR	2665771	Argument	nbyte		2665668	2					
ANR	2665772	Identifier	nbyte		2665668	0					
ANR	2665773	IfStatement	if ( actual < 0 )		2665668	7					
ANR	2665774	Condition	actual < 0	886:4:21880:21887	2665668	0	True				
ANR	2665775	RelationalExpression	actual < 0		2665668	0		<			
ANR	2665776	Identifier	actual		2665668	0					
ANR	2665777	PrimaryExpression	0		2665668	1					
ANR	2665778	ReturnStatement	return - 1 ;	886:14:21890:21899	2665668	1	True				
ANR	2665779	UnaryOperationExpression	- 1		2665668	0					
ANR	2665780	UnaryOperator	-		2665668	0					
ANR	2665781	PrimaryExpression	1		2665668	1					
ANR	2665782	IfStatement	if ( fd == 2 )		2665668	8					
ANR	2665783	Condition	fd == 2	889:4:21952:21956	2665668	0	True				
ANR	2665784	EqualityExpression	fd == 2		2665668	0		==			
ANR	2665785	Identifier	fd		2665668	0					
ANR	2665786	PrimaryExpression	2		2665668	1					
ANR	2665787	ExpressionStatement	f -> flush ( )	889:11:21959:21969	2665668	1	True				
ANR	2665788	CallExpression	f -> flush ( )		2665668	0					
ANR	2665789	Callee	f -> flush		2665668	0					
ANR	2665790	PtrMemberAccess	f -> flush		2665668	0					
ANR	2665791	Identifier	f		2665668	0					
ANR	2665792	Identifier	flush		2665668	1					
ANR	2665793	ArgumentList			2665668	1					
ANR	2665794	ExpressionStatement	fp -> offset += actual	892:1:22017:22037	2665668	9	True				
ANR	2665795	AssignmentExpression	fp -> offset += actual		2665668	0		+=			
ANR	2665796	PtrMemberAccess	fp -> offset		2665668	0					
ANR	2665797	Identifier	fp		2665668	0					
ANR	2665798	Identifier	offset		2665668	1					
ANR	2665799	Identifier	actual		2665668	1					
ANR	2665800	ExpressionStatement	fp -> info -> write_count ++	895:1:22074:22097	2665668	10	True				
ANR	2665801	PostIncDecOperationExpression	fp -> info -> write_count ++		2665668	0					
ANR	2665802	PtrMemberAccess	fp -> info -> write_count		2665668	0					
ANR	2665803	PtrMemberAccess	fp -> info		2665668	0					
ANR	2665804	Identifier	fp		2665668	0					
ANR	2665805	Identifier	info		2665668	1					
ANR	2665806	Identifier	write_count		2665668	1					
ANR	2665807	IncDec	++		2665668	1					
ANR	2665808	ExpressionStatement	fp -> info -> write_bytes += actual	896:1:22100:22129	2665668	11	True				
ANR	2665809	AssignmentExpression	fp -> info -> write_bytes += actual		2665668	0		+=			
ANR	2665810	PtrMemberAccess	fp -> info -> write_bytes		2665668	0					
ANR	2665811	PtrMemberAccess	fp -> info		2665668	0					
ANR	2665812	Identifier	fp		2665668	0					
ANR	2665813	Identifier	info		2665668	1					
ANR	2665814	Identifier	write_bytes		2665668	1					
ANR	2665815	Identifier	actual		2665668	1					
ANR	2665816	ExpressionStatement	check_safety ( fp )	899:1:22168:22184	2665668	12	True				
ANR	2665817	CallExpression	check_safety ( fp )		2665668	0					
ANR	2665818	Callee	check_safety		2665668	0					
ANR	2665819	Identifier	check_safety		2665668	0					
ANR	2665820	ArgumentList	fp		2665668	1					
ANR	2665821	Argument	fp		2665668	0					
ANR	2665822	Identifier	fp		2665668	0					
ANR	2665823	ReturnStatement	return actual ;	902:1:22227:22240	2665668	13	True				
ANR	2665824	Identifier	actual		2665668	0					
ANR	2665825	ReturnType	ssize_t		2665668	1					
ANR	2665826	Identifier	CondorFileTable :: write		2665668	2					
ANR	2665827	ParameterList	"int fd , const void * data , size_t nbyte"		2665668	3					
ANR	2665828	Parameter	int fd	857:32:21066:21071	2665668	0	True				
ANR	2665829	ParameterType	int		2665668	0					
ANR	2665830	Identifier	fd		2665668	1					
ANR	2665831	Parameter	const void * data	857:40:21074:21089	2665668	1	True				
ANR	2665832	ParameterType	const void *		2665668	0					
ANR	2665833	Identifier	data		2665668	1					
ANR	2665834	Parameter	size_t nbyte	857:58:21092:21103	2665668	2	True				
ANR	2665835	ParameterType	size_t		2665668	0					
ANR	2665836	Identifier	nbyte		2665668	1					
ANR	2665837	CFGEntryNode	ENTRY		2665668		True				
ANR	2665838	CFGExitNode	EXIT		2665668		True				
ANR	2665839	Symbol	data		2665668						
ANR	2665840	Symbol	nbyte		2665668						
ANR	2665841	Symbol	fp		2665668						
ANR	2665842	Symbol	pointers [ fd ] -> file -> is_writeable		2665668						
ANR	2665843	Symbol	* fp -> info		2665668						
ANR	2665844	Symbol	* fp		2665668						
ANR	2665845	Symbol	* * * fd		2665668						
ANR	2665846	Symbol	* * * pointers		2665668						
ANR	2665847	Symbol	pointers [ fd ] -> file		2665668						
ANR	2665848	Symbol	fp -> info -> write_bytes		2665668						
ANR	2665849	Symbol	* * pointers		2665668						
ANR	2665850	Symbol	pointers		2665668						
ANR	2665851	Symbol	fp -> offset		2665668						
ANR	2665852	Symbol	resume		2665668						
ANR	2665853	Symbol	actual		2665668						
ANR	2665854	Symbol	errno		2665668						
ANR	2665855	Symbol	fp -> file		2665668						
ANR	2665856	Symbol	f		2665668						
ANR	2665857	Symbol	* fd		2665668						
ANR	2665858	Symbol	* * fd		2665668						
ANR	2665859	Symbol	EBADF		2665668						
ANR	2665860	Symbol	* pointers		2665668						
ANR	2665861	Symbol	fp -> info -> write_count		2665668						
ANR	2665862	Symbol	f -> write		2665668						
ANR	2665863	Symbol	EINVAL		2665668						
ANR	2665864	Symbol	* f		2665668						
ANR	2665865	Symbol	* pointers [ fd ] -> file		2665668						
ANR	2665866	Symbol	* * fp		2665668						
ANR	2665867	Symbol	fp -> info		2665668						
ANR	2665868	Symbol	fd		2665668						
ANR	2665869	Function	CondorFileTable :: check_safety	905:0:22245:22572							
ANR	2665870	FunctionDef	CondorFileTable :: check_safety (CondorFilePointer * fp)		2665869	0					
ANR	2665871	CompoundStatement		906:0:22305:22572	2665869	0					
ANR	2665872	IfStatement	if ( fp -> info -> read_bytes && fp -> info -> write_bytes && ! fp -> info -> already_warned )		2665869	0					
ANR	2665873	Condition	fp -> info -> read_bytes && fp -> info -> write_bytes && ! fp -> info -> already_warned	907:5:22312:22385	2665869	0	True				
ANR	2665874	AndExpression	fp -> info -> read_bytes && fp -> info -> write_bytes && ! fp -> info -> already_warned		2665869	0		&&			
ANR	2665875	PtrMemberAccess	fp -> info -> read_bytes		2665869	0					
ANR	2665876	PtrMemberAccess	fp -> info		2665869	0					
ANR	2665877	Identifier	fp		2665869	0					
ANR	2665878	Identifier	info		2665869	1					
ANR	2665879	Identifier	read_bytes		2665869	1					
ANR	2665880	AndExpression	fp -> info -> write_bytes && ! fp -> info -> already_warned		2665869	1		&&			
ANR	2665881	PtrMemberAccess	fp -> info -> write_bytes		2665869	0					
ANR	2665882	PtrMemberAccess	fp -> info		2665869	0					
ANR	2665883	Identifier	fp		2665869	0					
ANR	2665884	Identifier	info		2665869	1					
ANR	2665885	Identifier	write_bytes		2665869	1					
ANR	2665886	UnaryOperationExpression	! fp -> info -> already_warned		2665869	1					
ANR	2665887	UnaryOperator	!		2665869	0					
ANR	2665888	PtrMemberAccess	fp -> info -> already_warned		2665869	1					
ANR	2665889	PtrMemberAccess	fp -> info		2665869	0					
ANR	2665890	Identifier	fp		2665869	0					
ANR	2665891	Identifier	info		2665869	1					
ANR	2665892	Identifier	already_warned		2665869	1					
ANR	2665893	CompoundStatement		2:82:83:83	2665869	1					
ANR	2665894	ExpressionStatement	fp -> info -> already_warned = 1	908:2:22393:22421	2665869	0	True				
ANR	2665895	AssignmentExpression	fp -> info -> already_warned = 1		2665869	0		=			
ANR	2665896	PtrMemberAccess	fp -> info -> already_warned		2665869	0					
ANR	2665897	PtrMemberAccess	fp -> info		2665869	0					
ANR	2665898	Identifier	fp		2665869	0					
ANR	2665899	Identifier	info		2665869	1					
ANR	2665900	Identifier	already_warned		2665869	1					
ANR	2665901	PrimaryExpression	1		2665869	1					
ANR	2665902	ExpressionStatement	"_condor_warning ( CONDOR_WARNING_KIND_READWRITE , ""File '%s' used for both reading and writing.  This is not checkpoint-safe.\\n"" , fp -> logical_name )"	909:2:22425:22567	2665869	1	True				
ANR	2665903	CallExpression	"_condor_warning ( CONDOR_WARNING_KIND_READWRITE , ""File '%s' used for both reading and writing.  This is not checkpoint-safe.\\n"" , fp -> logical_name )"		2665869	0					
ANR	2665904	Callee	_condor_warning		2665869	0					
ANR	2665905	Identifier	_condor_warning		2665869	0					
ANR	2665906	ArgumentList	CONDOR_WARNING_KIND_READWRITE		2665869	1					
ANR	2665907	Argument	CONDOR_WARNING_KIND_READWRITE		2665869	0					
ANR	2665908	Identifier	CONDOR_WARNING_KIND_READWRITE		2665869	0					
ANR	2665909	Argument	"""File '%s' used for both reading and writing.  This is not checkpoint-safe.\\n"""		2665869	1					
ANR	2665910	PrimaryExpression	"""File '%s' used for both reading and writing.  This is not checkpoint-safe.\\n"""		2665869	0					
ANR	2665911	Argument	fp -> logical_name		2665869	2					
ANR	2665912	PtrMemberAccess	fp -> logical_name		2665869	0					
ANR	2665913	Identifier	fp		2665869	0					
ANR	2665914	Identifier	logical_name		2665869	1					
ANR	2665915	ReturnType	void		2665869	1					
ANR	2665916	Identifier	CondorFileTable :: check_safety		2665869	2					
ANR	2665917	ParameterList	CondorFilePointer * fp		2665869	3					
ANR	2665918	Parameter	CondorFilePointer * fp	905:36:22281:22301	2665869	0	True				
ANR	2665919	ParameterType	CondorFilePointer *		2665869	0					
ANR	2665920	Identifier	fp		2665869	1					
ANR	2665921	CFGEntryNode	ENTRY		2665869		True				
ANR	2665922	CFGExitNode	EXIT		2665869		True				
ANR	2665923	Symbol	* fp -> info		2665869						
ANR	2665924	Symbol	* fp		2665869						
ANR	2665925	Symbol	fp -> logical_name		2665869						
ANR	2665926	Symbol	* * fp		2665869						
ANR	2665927	Symbol	fp -> info -> read_bytes		2665869						
ANR	2665928	Symbol	CONDOR_WARNING_KIND_READWRITE		2665869						
ANR	2665929	Symbol	fp -> info		2665869						
ANR	2665930	Symbol	fp -> info -> already_warned		2665869						
ANR	2665931	Symbol	fp		2665869						
ANR	2665932	Symbol	fp -> info -> write_bytes		2665869						
ANR	2665933	Function	CondorFileTable :: lseek	913:0:22575:23639							
ANR	2665934	FunctionDef	"CondorFileTable :: lseek (int fd , off_t offset , int whence)"		2665933	0					
ANR	2665935	CompoundStatement		914:0:22640:23639	2665933	0					
ANR	2665936	IfStatement	if ( resume ( fd ) < 0 )		2665933	0					
ANR	2665937	Condition	resume ( fd ) < 0	915:5:22647:22658	2665933	0	True				
ANR	2665938	RelationalExpression	resume ( fd ) < 0		2665933	0		<			
ANR	2665939	CallExpression	resume ( fd )		2665933	0					
ANR	2665940	Callee	resume		2665933	0					
ANR	2665941	Identifier	resume		2665933	0					
ANR	2665942	ArgumentList	fd		2665933	1					
ANR	2665943	Argument	fd		2665933	0					
ANR	2665944	Identifier	fd		2665933	0					
ANR	2665945	PrimaryExpression	0		2665933	1					
ANR	2665946	ReturnStatement	return - 1 ;	915:20:22662:22671	2665933	1	True				
ANR	2665947	UnaryOperationExpression	- 1		2665933	0					
ANR	2665948	UnaryOperator	-		2665933	0					
ANR	2665949	PrimaryExpression	1		2665933	1					
ANR	2665950	IfStatement	if ( ( fd < 0 ) || ( fd >= length ) || ( pointers [ fd ] == 0 ) )		2665933	1					
ANR	2665951	Condition	( fd < 0 ) || ( fd >= length ) || ( pointers [ fd ] == 0 )	917:5:22679:22721	2665933	0	True				
ANR	2665952	OrExpression	( fd < 0 ) || ( fd >= length ) || ( pointers [ fd ] == 0 )		2665933	0		||			
ANR	2665953	RelationalExpression	fd < 0		2665933	0		<			
ANR	2665954	Identifier	fd		2665933	0					
ANR	2665955	PrimaryExpression	0		2665933	1					
ANR	2665956	OrExpression	( fd >= length ) || ( pointers [ fd ] == 0 )		2665933	1		||			
ANR	2665957	RelationalExpression	fd >= length		2665933	0		>=			
ANR	2665958	Identifier	fd		2665933	0					
ANR	2665959	Identifier	length		2665933	1					
ANR	2665960	EqualityExpression	pointers [ fd ] == 0		2665933	1		==			
ANR	2665961	ArrayIndexing	pointers [ fd ]		2665933	0					
ANR	2665962	Identifier	pointers		2665933	0					
ANR	2665963	Identifier	fd		2665933	1					
ANR	2665964	PrimaryExpression	0		2665933	1					
ANR	2665965	CompoundStatement		4:51:84:84	2665933	1					
ANR	2665966	ExpressionStatement	errno = EBADF	918:2:22729:22742	2665933	0	True				
ANR	2665967	AssignmentExpression	errno = EBADF		2665933	0		=			
ANR	2665968	Identifier	errno		2665933	0					
ANR	2665969	Identifier	EBADF		2665933	1					
ANR	2665970	ReturnStatement	return - 1 ;	919:2:22746:22755	2665933	1	True				
ANR	2665971	UnaryOperationExpression	- 1		2665933	0					
ANR	2665972	UnaryOperator	-		2665933	0					
ANR	2665973	PrimaryExpression	1		2665933	1					
ANR	2665974	IdentifierDeclStatement	CondorFilePointer * fp = pointers [ fd ] ;	922:1:22762:22798	2665933	2	True				
ANR	2665975	IdentifierDecl	* fp = pointers [ fd ]		2665933	0					
ANR	2665976	IdentifierDeclType	CondorFilePointer *		2665933	0					
ANR	2665977	Identifier	fp		2665933	1					
ANR	2665978	AssignmentExpression	* fp = pointers [ fd ]		2665933	2		=			
ANR	2665979	Identifier	fp		2665933	0					
ANR	2665980	ArrayIndexing	pointers [ fd ]		2665933	1					
ANR	2665981	Identifier	pointers		2665933	0					
ANR	2665982	Identifier	fd		2665933	1					
ANR	2665983	IdentifierDeclStatement	CondorFile * f = fp -> file ;	923:1:22801:22825	2665933	3	True				
ANR	2665984	IdentifierDecl	* f = fp -> file		2665933	0					
ANR	2665985	IdentifierDeclType	CondorFile *		2665933	0					
ANR	2665986	Identifier	f		2665933	1					
ANR	2665987	AssignmentExpression	* f = fp -> file		2665933	2		=			
ANR	2665988	Identifier	f		2665933	0					
ANR	2665989	PtrMemberAccess	fp -> file		2665933	1					
ANR	2665990	Identifier	fp		2665933	0					
ANR	2665991	Identifier	file		2665933	1					
ANR	2665992	IdentifierDeclStatement	off_t temp ;	924:1:22828:22838	2665933	4	True				
ANR	2665993	IdentifierDecl	temp		2665933	0					
ANR	2665994	IdentifierDeclType	off_t		2665933	0					
ANR	2665995	Identifier	temp		2665933	1					
ANR	2665996	IfStatement	if ( ! f -> is_seekable ( ) )		2665933	5					
ANR	2665997	Condition	! f -> is_seekable ( )	930:5:23092:23108	2665933	0	True				
ANR	2665998	UnaryOperationExpression	! f -> is_seekable ( )		2665933	0					
ANR	2665999	UnaryOperator	!		2665933	0					
ANR	2666000	CallExpression	f -> is_seekable ( )		2665933	1					
ANR	2666001	Callee	f -> is_seekable		2665933	0					
ANR	2666002	PtrMemberAccess	f -> is_seekable		2665933	0					
ANR	2666003	Identifier	f		2665933	0					
ANR	2666004	Identifier	is_seekable		2665933	1					
ANR	2666005	ArgumentList			2665933	1					
ANR	2666006	CompoundStatement		17:25:471:471	2665933	1					
ANR	2666007	ExpressionStatement	"_condor_error_fatal ( ""Seek operation attempted on non-seekable file %s."" , f -> get_url ( ) )"	931:2:23116:23201	2665933	0	True				
ANR	2666008	CallExpression	"_condor_error_fatal ( ""Seek operation attempted on non-seekable file %s."" , f -> get_url ( ) )"		2665933	0					
ANR	2666009	Callee	_condor_error_fatal		2665933	0					
ANR	2666010	Identifier	_condor_error_fatal		2665933	0					
ANR	2666011	ArgumentList	"""Seek operation attempted on non-seekable file %s."""		2665933	1					
ANR	2666012	Argument	"""Seek operation attempted on non-seekable file %s."""		2665933	0					
ANR	2666013	PrimaryExpression	"""Seek operation attempted on non-seekable file %s."""		2665933	0					
ANR	2666014	Argument	f -> get_url ( )		2665933	1					
ANR	2666015	CallExpression	f -> get_url ( )		2665933	0					
ANR	2666016	Callee	f -> get_url		2665933	0					
ANR	2666017	PtrMemberAccess	f -> get_url		2665933	0					
ANR	2666018	Identifier	f		2665933	0					
ANR	2666019	Identifier	get_url		2665933	1					
ANR	2666020	ArgumentList			2665933	1					
ANR	2666021	IfStatement	if ( whence == SEEK_SET )		2665933	6					
ANR	2666022	Condition	whence == SEEK_SET	937:5:23298:23315	2665933	0	True				
ANR	2666023	EqualityExpression	whence == SEEK_SET		2665933	0		==			
ANR	2666024	Identifier	whence		2665933	0					
ANR	2666025	Identifier	SEEK_SET		2665933	1					
ANR	2666026	CompoundStatement		24:26:678:678	2665933	1					
ANR	2666027	ExpressionStatement	temp = offset	938:2:23323:23336	2665933	0	True				
ANR	2666028	AssignmentExpression	temp = offset		2665933	0		=			
ANR	2666029	Identifier	temp		2665933	0					
ANR	2666030	Identifier	offset		2665933	1					
ANR	2666031	ElseStatement	else		2665933	0					
ANR	2666032	IfStatement	if ( whence == SEEK_CUR )		2665933	0					
ANR	2666033	Condition	whence == SEEK_CUR	939:12:23350:23367	2665933	0	True				
ANR	2666034	EqualityExpression	whence == SEEK_CUR		2665933	0		==			
ANR	2666035	Identifier	whence		2665933	0					
ANR	2666036	Identifier	SEEK_CUR		2665933	1					
ANR	2666037	CompoundStatement		26:33:730:730	2665933	1					
ANR	2666038	ExpressionStatement	temp = fp -> offset + offset	940:9:23382:23406	2665933	0	True				
ANR	2666039	AssignmentExpression	temp = fp -> offset + offset		2665933	0		=			
ANR	2666040	Identifier	temp		2665933	0					
ANR	2666041	AdditiveExpression	fp -> offset + offset		2665933	1		+			
ANR	2666042	PtrMemberAccess	fp -> offset		2665933	0					
ANR	2666043	Identifier	fp		2665933	0					
ANR	2666044	Identifier	offset		2665933	1					
ANR	2666045	Identifier	offset		2665933	1					
ANR	2666046	ElseStatement	else		2665933	0					
ANR	2666047	IfStatement	if ( whence == SEEK_END )		2665933	0					
ANR	2666048	Condition	whence == SEEK_END	941:12:23420:23437	2665933	0	True				
ANR	2666049	EqualityExpression	whence == SEEK_END		2665933	0		==			
ANR	2666050	Identifier	whence		2665933	0					
ANR	2666051	Identifier	SEEK_END		2665933	1					
ANR	2666052	CompoundStatement		28:33:800:800	2665933	1					
ANR	2666053	ExpressionStatement	temp = f -> get_size ( ) + offset	942:2:23445:23472	2665933	0	True				
ANR	2666054	AssignmentExpression	temp = f -> get_size ( ) + offset		2665933	0		=			
ANR	2666055	Identifier	temp		2665933	0					
ANR	2666056	AdditiveExpression	f -> get_size ( ) + offset		2665933	1		+			
ANR	2666057	CallExpression	f -> get_size ( )		2665933	0					
ANR	2666058	Callee	f -> get_size		2665933	0					
ANR	2666059	PtrMemberAccess	f -> get_size		2665933	0					
ANR	2666060	Identifier	f		2665933	0					
ANR	2666061	Identifier	get_size		2665933	1					
ANR	2666062	ArgumentList			2665933	1					
ANR	2666063	Identifier	offset		2665933	1					
ANR	2666064	ElseStatement	else		2665933	0					
ANR	2666065	CompoundStatement		30:8:841:841	2665933	0					
ANR	2666066	ExpressionStatement	errno = EINVAL	944:2:23486:23500	2665933	0	True				
ANR	2666067	AssignmentExpression	errno = EINVAL		2665933	0		=			
ANR	2666068	Identifier	errno		2665933	0					
ANR	2666069	Identifier	EINVAL		2665933	1					
ANR	2666070	ReturnStatement	return - 1 ;	945:2:23504:23513	2665933	1	True				
ANR	2666071	UnaryOperationExpression	- 1		2665933	0					
ANR	2666072	UnaryOperator	-		2665933	0					
ANR	2666073	PrimaryExpression	1		2665933	1					
ANR	2666074	IfStatement	if ( temp < 0 )		2665933	7					
ANR	2666075	Condition	temp < 0	948:4:23523:23528	2665933	0	True				
ANR	2666076	RelationalExpression	temp < 0		2665933	0		<			
ANR	2666077	Identifier	temp		2665933	0					
ANR	2666078	PrimaryExpression	0		2665933	1					
ANR	2666079	CompoundStatement		35:12:890:890	2665933	1					
ANR	2666080	ExpressionStatement	errno = EINVAL	949:2:23535:23549	2665933	0	True				
ANR	2666081	AssignmentExpression	errno = EINVAL		2665933	0		=			
ANR	2666082	Identifier	errno		2665933	0					
ANR	2666083	Identifier	EINVAL		2665933	1					
ANR	2666084	ReturnStatement	return - 1 ;	950:2:23553:23562	2665933	1	True				
ANR	2666085	UnaryOperationExpression	- 1		2665933	0					
ANR	2666086	UnaryOperator	-		2665933	0					
ANR	2666087	PrimaryExpression	1		2665933	1					
ANR	2666088	ElseStatement	else		2665933	0					
ANR	2666089	CompoundStatement		38:8:931:931	2665933	0					
ANR	2666090	ExpressionStatement	fp -> offset = temp	952:2:23576:23593	2665933	0	True				
ANR	2666091	AssignmentExpression	fp -> offset = temp		2665933	0		=			
ANR	2666092	PtrMemberAccess	fp -> offset		2665933	0					
ANR	2666093	Identifier	fp		2665933	0					
ANR	2666094	Identifier	offset		2665933	1					
ANR	2666095	Identifier	temp		2665933	1					
ANR	2666096	ExpressionStatement	fp -> info -> seek_count ++	953:2:23597:23619	2665933	1	True				
ANR	2666097	PostIncDecOperationExpression	fp -> info -> seek_count ++		2665933	0					
ANR	2666098	PtrMemberAccess	fp -> info -> seek_count		2665933	0					
ANR	2666099	PtrMemberAccess	fp -> info		2665933	0					
ANR	2666100	Identifier	fp		2665933	0					
ANR	2666101	Identifier	info		2665933	1					
ANR	2666102	Identifier	seek_count		2665933	1					
ANR	2666103	IncDec	++		2665933	1					
ANR	2666104	ReturnStatement	return temp ;	954:2:23623:23634	2665933	2	True				
ANR	2666105	Identifier	temp		2665933	0					
ANR	2666106	ReturnType	off_t		2665933	1					
ANR	2666107	Identifier	CondorFileTable :: lseek		2665933	2					
ANR	2666108	ParameterList	"int fd , off_t offset , int whence"		2665933	3					
ANR	2666109	Parameter	int fd	913:30:22605:22610	2665933	0	True				
ANR	2666110	ParameterType	int		2665933	0					
ANR	2666111	Identifier	fd		2665933	1					
ANR	2666112	Parameter	off_t offset	913:38:22613:22624	2665933	1	True				
ANR	2666113	ParameterType	off_t		2665933	0					
ANR	2666114	Identifier	offset		2665933	1					
ANR	2666115	Parameter	int whence	913:52:22627:22636	2665933	2	True				
ANR	2666116	ParameterType	int		2665933	0					
ANR	2666117	Identifier	whence		2665933	1					
ANR	2666118	CFGEntryNode	ENTRY		2665933		True				
ANR	2666119	CFGExitNode	EXIT		2665933		True				
ANR	2666120	Symbol	f -> is_seekable		2665933						
ANR	2666121	Symbol	SEEK_CUR		2665933						
ANR	2666122	Symbol	fp		2665933						
ANR	2666123	Symbol	* fp -> info		2665933						
ANR	2666124	Symbol	* fp		2665933						
ANR	2666125	Symbol	f -> get_size		2665933						
ANR	2666126	Symbol	f -> get_url		2665933						
ANR	2666127	Symbol	pointers		2665933						
ANR	2666128	Symbol	fp -> offset		2665933						
ANR	2666129	Symbol	resume		2665933						
ANR	2666130	Symbol	SEEK_SET		2665933						
ANR	2666131	Symbol	errno		2665933						
ANR	2666132	Symbol	temp		2665933						
ANR	2666133	Symbol	offset		2665933						
ANR	2666134	Symbol	fp -> file		2665933						
ANR	2666135	Symbol	whence		2665933						
ANR	2666136	Symbol	f		2665933						
ANR	2666137	Symbol	* fd		2665933						
ANR	2666138	Symbol	length		2665933						
ANR	2666139	Symbol	EBADF		2665933						
ANR	2666140	Symbol	* pointers		2665933						
ANR	2666141	Symbol	SEEK_END		2665933						
ANR	2666142	Symbol	* f		2665933						
ANR	2666143	Symbol	EINVAL		2665933						
ANR	2666144	Symbol	fp -> info -> seek_count		2665933						
ANR	2666145	Symbol	* * fp		2665933						
ANR	2666146	Symbol	fp -> info		2665933						
ANR	2666147	Symbol	fd		2665933						
ANR	2666148	Function	CondorFileTable :: dup	958:0:23642:23709							
ANR	2666149	FunctionDef	CondorFileTable :: dup (int fd)		2666148	0					
ANR	2666150	CompoundStatement		959:0:23677:23709	2666148	0					
ANR	2666151	ReturnStatement	"return search_dup2 ( fd , 0 ) ;"	960:1:23680:23707	2666148	0	True				
ANR	2666152	CallExpression	"search_dup2 ( fd , 0 )"		2666148	0					
ANR	2666153	Callee	search_dup2		2666148	0					
ANR	2666154	Identifier	search_dup2		2666148	0					
ANR	2666155	ArgumentList	fd		2666148	1					
ANR	2666156	Argument	fd		2666148	0					
ANR	2666157	Identifier	fd		2666148	0					
ANR	2666158	Argument	0		2666148	1					
ANR	2666159	PrimaryExpression	0		2666148	0					
ANR	2666160	ReturnType	int		2666148	1					
ANR	2666161	Identifier	CondorFileTable :: dup		2666148	2					
ANR	2666162	ParameterList	int fd		2666148	3					
ANR	2666163	Parameter	int fd	958:26:23668:23673	2666148	0	True				
ANR	2666164	ParameterType	int		2666148	0					
ANR	2666165	Identifier	fd		2666148	1					
ANR	2666166	CFGEntryNode	ENTRY		2666148		True				
ANR	2666167	CFGExitNode	EXIT		2666148		True				
ANR	2666168	Symbol	fd		2666148						
ANR	2666169	Symbol	search_dup2		2666148						
ANR	2666170	Function	CondorFileTable :: search_dup2	963:0:23712:24042							
ANR	2666171	FunctionDef	"CondorFileTable :: search_dup2 (int fd , int search)"		2666170	0					
ANR	2666172	CompoundStatement		964:0:23767:24042	2666170	0					
ANR	2666173	IfStatement	if ( ( fd < 0 ) || ( fd >= length ) || ( pointers [ fd ] == 0 ) || ( search < 0 ) || ( search >= length ) )		2666170	0					
ANR	2666174	Condition	( fd < 0 ) || ( fd >= length ) || ( pointers [ fd ] == 0 ) || ( search < 0 ) || ( search >= length )	965:5:23774:23850	2666170	0	True				
ANR	2666175	OrExpression	( fd < 0 ) || ( fd >= length ) || ( pointers [ fd ] == 0 ) || ( search < 0 ) || ( search >= length )		2666170	0		||			
ANR	2666176	RelationalExpression	fd < 0		2666170	0		<			
ANR	2666177	Identifier	fd		2666170	0					
ANR	2666178	PrimaryExpression	0		2666170	1					
ANR	2666179	OrExpression	( fd >= length ) || ( pointers [ fd ] == 0 ) || ( search < 0 ) || ( search >= length )		2666170	1		||			
ANR	2666180	RelationalExpression	fd >= length		2666170	0		>=			
ANR	2666181	Identifier	fd		2666170	0					
ANR	2666182	Identifier	length		2666170	1					
ANR	2666183	OrExpression	( pointers [ fd ] == 0 ) || ( search < 0 ) || ( search >= length )		2666170	1		||			
ANR	2666184	EqualityExpression	pointers [ fd ] == 0		2666170	0		==			
ANR	2666185	ArrayIndexing	pointers [ fd ]		2666170	0					
ANR	2666186	Identifier	pointers		2666170	0					
ANR	2666187	Identifier	fd		2666170	1					
ANR	2666188	PrimaryExpression	0		2666170	1					
ANR	2666189	OrExpression	( search < 0 ) || ( search >= length )		2666170	1		||			
ANR	2666190	RelationalExpression	search < 0		2666170	0		<			
ANR	2666191	Identifier	search		2666170	0					
ANR	2666192	PrimaryExpression	0		2666170	1					
ANR	2666193	RelationalExpression	search >= length		2666170	1		>=			
ANR	2666194	Identifier	search		2666170	0					
ANR	2666195	Identifier	length		2666170	1					
ANR	2666196	CompoundStatement		2:85:86:86	2666170	1					
ANR	2666197	ExpressionStatement	errno = EBADF	966:2:23858:23871	2666170	0	True				
ANR	2666198	AssignmentExpression	errno = EBADF		2666170	0		=			
ANR	2666199	Identifier	errno		2666170	0					
ANR	2666200	Identifier	EBADF		2666170	1					
ANR	2666201	ReturnStatement	return - 1 ;	967:2:23875:23884	2666170	1	True				
ANR	2666202	UnaryOperationExpression	- 1		2666170	0					
ANR	2666203	UnaryOperator	-		2666170	0					
ANR	2666204	PrimaryExpression	1		2666170	1					
ANR	2666205	IdentifierDeclStatement	int i ;	970:1:23891:23896	2666170	1	True				
ANR	2666206	IdentifierDecl	i		2666170	0					
ANR	2666207	IdentifierDeclType	int		2666170	0					
ANR	2666208	Identifier	i		2666170	1					
ANR	2666209	ForStatement	for ( i = search ; i < length ; i ++ )		2666170	2					
ANR	2666210	ForInit	i = search ;	972:6:23905:23913	2666170	0	True				
ANR	2666211	AssignmentExpression	i = search		2666170	0		=			
ANR	2666212	Identifier	i		2666170	0					
ANR	2666213	Identifier	search		2666170	1					
ANR	2666214	Condition	i < length	972:16:23915:23922	2666170	1	True				
ANR	2666215	RelationalExpression	i < length		2666170	0		<			
ANR	2666216	Identifier	i		2666170	0					
ANR	2666217	Identifier	length		2666170	1					
ANR	2666218	PostIncDecOperationExpression	i ++	972:26:23925:23927	2666170	2	True				
ANR	2666219	Identifier	i		2666170	0					
ANR	2666220	IncDec	++		2666170	1					
ANR	2666221	IfStatement	if ( ! pointers [ i ] )		2666170	3					
ANR	2666222	Condition	! pointers [ i ]	973:5:23936:23947	2666170	0	True				
ANR	2666223	UnaryOperationExpression	! pointers [ i ]		2666170	0					
ANR	2666224	UnaryOperator	!		2666170	0					
ANR	2666225	ArrayIndexing	pointers [ i ]		2666170	1					
ANR	2666226	Identifier	pointers		2666170	0					
ANR	2666227	Identifier	i		2666170	1					
ANR	2666228	BreakStatement	break ;	973:19:23950:23955	2666170	1	True				
ANR	2666229	IfStatement	if ( i == length )		2666170	3					
ANR	2666230	Condition	i == length	975:5:23963:23971	2666170	0	True				
ANR	2666231	EqualityExpression	i == length		2666170	0		==			
ANR	2666232	Identifier	i		2666170	0					
ANR	2666233	Identifier	length		2666170	1					
ANR	2666234	CompoundStatement		12:17:207:207	2666170	1					
ANR	2666235	ExpressionStatement	errno = EMFILE	976:2:23979:23993	2666170	0	True				
ANR	2666236	AssignmentExpression	errno = EMFILE		2666170	0		=			
ANR	2666237	Identifier	errno		2666170	0					
ANR	2666238	Identifier	EMFILE		2666170	1					
ANR	2666239	ReturnStatement	return - 1 ;	977:2:23997:24006	2666170	1	True				
ANR	2666240	UnaryOperationExpression	- 1		2666170	0					
ANR	2666241	UnaryOperator	-		2666170	0					
ANR	2666242	PrimaryExpression	1		2666170	1					
ANR	2666243	ElseStatement	else		2666170	0					
ANR	2666244	CompoundStatement		15:8:248:248	2666170	0					
ANR	2666245	ReturnStatement	"return dup2 ( fd , i ) ;"	979:2:24020:24037	2666170	0	True				
ANR	2666246	CallExpression	"dup2 ( fd , i )"		2666170	0					
ANR	2666247	Callee	dup2		2666170	0					
ANR	2666248	Identifier	dup2		2666170	0					
ANR	2666249	ArgumentList	fd		2666170	1					
ANR	2666250	Argument	fd		2666170	0					
ANR	2666251	Identifier	fd		2666170	0					
ANR	2666252	Argument	i		2666170	1					
ANR	2666253	Identifier	i		2666170	0					
ANR	2666254	ReturnType	int		2666170	1					
ANR	2666255	Identifier	CondorFileTable :: search_dup2		2666170	2					
ANR	2666256	ParameterList	"int fd , int search"		2666170	3					
ANR	2666257	Parameter	int fd	963:34:23746:23751	2666170	0	True				
ANR	2666258	ParameterType	int		2666170	0					
ANR	2666259	Identifier	fd		2666170	1					
ANR	2666260	Parameter	int search	963:42:23754:23763	2666170	1	True				
ANR	2666261	ParameterType	int		2666170	0					
ANR	2666262	Identifier	search		2666170	1					
ANR	2666263	CFGEntryNode	ENTRY		2666170		True				
ANR	2666264	CFGExitNode	EXIT		2666170		True				
ANR	2666265	Symbol	search		2666170						
ANR	2666266	Symbol	errno		2666170						
ANR	2666267	Symbol	* i		2666170						
ANR	2666268	Symbol	* fd		2666170						
ANR	2666269	Symbol	length		2666170						
ANR	2666270	Symbol	EMFILE		2666170						
ANR	2666271	Symbol	i		2666170						
ANR	2666272	Symbol	dup2		2666170						
ANR	2666273	Symbol	EBADF		2666170						
ANR	2666274	Symbol	fd		2666170						
ANR	2666275	Symbol	pointers		2666170						
ANR	2666276	Symbol	* pointers		2666170						
ANR	2666277	Function	CondorFileTable :: dup2	983:0:24045:24518							
ANR	2666278	FunctionDef	"CondorFileTable :: dup2 (int fd , int nfd)"		2666277	0					
ANR	2666279	CompoundStatement		984:0:24090:24518	2666277	0					
ANR	2666280	IdentifierDeclStatement	int result ;	985:1:24093:24103	2666277	0	True				
ANR	2666281	IdentifierDecl	result		2666277	0					
ANR	2666282	IdentifierDeclType	int		2666277	0					
ANR	2666283	Identifier	result		2666277	1					
ANR	2666284	IfStatement	if ( resume ( fd ) < 0 )		2666277	1					
ANR	2666285	Condition	resume ( fd ) < 0	987:5:24111:24122	2666277	0	True				
ANR	2666286	RelationalExpression	resume ( fd ) < 0		2666277	0		<			
ANR	2666287	CallExpression	resume ( fd )		2666277	0					
ANR	2666288	Callee	resume		2666277	0					
ANR	2666289	Identifier	resume		2666277	0					
ANR	2666290	ArgumentList	fd		2666277	1					
ANR	2666291	Argument	fd		2666277	0					
ANR	2666292	Identifier	fd		2666277	0					
ANR	2666293	PrimaryExpression	0		2666277	1					
ANR	2666294	ReturnStatement	return - 1 ;	987:20:24126:24135	2666277	1	True				
ANR	2666295	UnaryOperationExpression	- 1		2666277	0					
ANR	2666296	UnaryOperator	-		2666277	0					
ANR	2666297	PrimaryExpression	1		2666277	1					
ANR	2666298	IfStatement	if ( ( nfd < 0 ) || ( nfd >= length ) )		2666277	2					
ANR	2666299	Condition	( nfd < 0 ) || ( nfd >= length )	989:5:24143:24166	2666277	0	True				
ANR	2666300	OrExpression	( nfd < 0 ) || ( nfd >= length )		2666277	0		||			
ANR	2666301	RelationalExpression	nfd < 0		2666277	0		<			
ANR	2666302	Identifier	nfd		2666277	0					
ANR	2666303	PrimaryExpression	0		2666277	1					
ANR	2666304	RelationalExpression	nfd >= length		2666277	1		>=			
ANR	2666305	Identifier	nfd		2666277	0					
ANR	2666306	Identifier	length		2666277	1					
ANR	2666307	CompoundStatement		6:32:79:79	2666277	1					
ANR	2666308	ExpressionStatement	errno = EBADF	990:2:24174:24187	2666277	0	True				
ANR	2666309	AssignmentExpression	errno = EBADF		2666277	0		=			
ANR	2666310	Identifier	errno		2666277	0					
ANR	2666311	Identifier	EBADF		2666277	1					
ANR	2666312	ReturnStatement	return - 1 ;	991:2:24191:24200	2666277	1	True				
ANR	2666313	UnaryOperationExpression	- 1		2666277	0					
ANR	2666314	UnaryOperator	-		2666277	0					
ANR	2666315	PrimaryExpression	1		2666277	1					
ANR	2666316	IfStatement	if ( fd == nfd )		2666277	3					
ANR	2666317	Condition	fd == nfd	994:5:24211:24217	2666277	0	True				
ANR	2666318	EqualityExpression	fd == nfd		2666277	0		==			
ANR	2666319	Identifier	fd		2666277	0					
ANR	2666320	Identifier	nfd		2666277	1					
ANR	2666321	ReturnStatement	return fd ;	994:15:24221:24230	2666277	1	True				
ANR	2666322	Identifier	fd		2666277	0					
ANR	2666323	IfStatement	if ( pointers [ nfd ] != 0 )		2666277	4					
ANR	2666324	Condition	pointers [ nfd ] != 0	1000:5:24377:24392	2666277	0	True				
ANR	2666325	EqualityExpression	pointers [ nfd ] != 0		2666277	0		!=			
ANR	2666326	ArrayIndexing	pointers [ nfd ]		2666277	0					
ANR	2666327	Identifier	pointers		2666277	0					
ANR	2666328	Identifier	nfd		2666277	1					
ANR	2666329	PrimaryExpression	0		2666277	1					
ANR	2666330	CompoundStatement		17:24:305:305	2666277	1					
ANR	2666331	ExpressionStatement	result = close ( nfd )	1001:2:24400:24419	2666277	0	True				
ANR	2666332	AssignmentExpression	result = close ( nfd )		2666277	0		=			
ANR	2666333	Identifier	result		2666277	0					
ANR	2666334	CallExpression	close ( nfd )		2666277	1					
ANR	2666335	Callee	close		2666277	0					
ANR	2666336	Identifier	close		2666277	0					
ANR	2666337	ArgumentList	nfd		2666277	1					
ANR	2666338	Argument	nfd		2666277	0					
ANR	2666339	Identifier	nfd		2666277	0					
ANR	2666340	IfStatement	if ( result == - 1 )		2666277	1					
ANR	2666341	Condition	result == - 1	1002:6:24427:24436	2666277	0	True				
ANR	2666342	EqualityExpression	result == - 1		2666277	0		==			
ANR	2666343	Identifier	result		2666277	0					
ANR	2666344	UnaryOperationExpression	- 1		2666277	1					
ANR	2666345	UnaryOperator	-		2666277	0					
ANR	2666346	PrimaryExpression	1		2666277	1					
ANR	2666347	CompoundStatement		19:19:349:349	2666277	1					
ANR	2666348	ReturnStatement	return result ;	1003:3:24445:24458	2666277	0	True				
ANR	2666349	Identifier	result		2666277	0					
ANR	2666350	ExpressionStatement	pointers [ nfd ] = pointers [ fd ]	1007:1:24469:24497	2666277	5	True				
ANR	2666351	AssignmentExpression	pointers [ nfd ] = pointers [ fd ]		2666277	0		=			
ANR	2666352	ArrayIndexing	pointers [ nfd ]		2666277	0					
ANR	2666353	Identifier	pointers		2666277	0					
ANR	2666354	Identifier	nfd		2666277	1					
ANR	2666355	ArrayIndexing	pointers [ fd ]		2666277	1					
ANR	2666356	Identifier	pointers		2666277	0					
ANR	2666357	Identifier	fd		2666277	1					
ANR	2666358	ReturnStatement	return nfd ;	1009:1:24506:24516	2666277	6	True				
ANR	2666359	Identifier	nfd		2666277	0					
ANR	2666360	ReturnType	int		2666277	1					
ANR	2666361	Identifier	CondorFileTable :: dup2		2666277	2					
ANR	2666362	ParameterList	"int fd , int nfd"		2666277	3					
ANR	2666363	Parameter	int fd	983:27:24072:24077	2666277	0	True				
ANR	2666364	ParameterType	int		2666277	0					
ANR	2666365	Identifier	fd		2666277	1					
ANR	2666366	Parameter	int nfd	983:35:24080:24086	2666277	1	True				
ANR	2666367	ParameterType	int		2666277	0					
ANR	2666368	Identifier	nfd		2666277	1					
ANR	2666369	CFGEntryNode	ENTRY		2666277		True				
ANR	2666370	CFGExitNode	EXIT		2666277		True				
ANR	2666371	Symbol	result		2666277						
ANR	2666372	Symbol	resume		2666277						
ANR	2666373	Symbol	errno		2666277						
ANR	2666374	Symbol	* nfd		2666277						
ANR	2666375	Symbol	* fd		2666277						
ANR	2666376	Symbol	length		2666277						
ANR	2666377	Symbol	nfd		2666277						
ANR	2666378	Symbol	EBADF		2666277						
ANR	2666379	Symbol	close		2666277						
ANR	2666380	Symbol	fd		2666277						
ANR	2666381	Symbol	pointers		2666277						
ANR	2666382	Symbol	* pointers		2666277						
ANR	2666383	Function	CondorFileTable :: fchdir	1024:0:24867:25091							
ANR	2666384	FunctionDef	CondorFileTable :: fchdir (int fd)		2666383	0					
ANR	2666385	CompoundStatement		1025:0:24905:25091	2666383	0					
ANR	2666386	IfStatement	if ( resume ( fd ) < 0 )		2666383	0					
ANR	2666387	Condition	resume ( fd ) < 0	1026:5:24912:24923	2666383	0	True				
ANR	2666388	RelationalExpression	resume ( fd ) < 0		2666383	0		<			
ANR	2666389	CallExpression	resume ( fd )		2666383	0					
ANR	2666390	Callee	resume		2666383	0					
ANR	2666391	Identifier	resume		2666383	0					
ANR	2666392	ArgumentList	fd		2666383	1					
ANR	2666393	Argument	fd		2666383	0					
ANR	2666394	Identifier	fd		2666383	0					
ANR	2666395	PrimaryExpression	0		2666383	1					
ANR	2666396	ReturnStatement	return - 1 ;	1026:20:24927:24936	2666383	1	True				
ANR	2666397	UnaryOperationExpression	- 1		2666383	0					
ANR	2666398	UnaryOperator	-		2666383	0					
ANR	2666399	PrimaryExpression	1		2666383	1					
ANR	2666400	ExpressionStatement	"dprintf ( D_ALWAYS , ""CondorFileTable::fchdir(%d) will try chdir(%s)\\n"" , fd , pointers [ fd ] -> logical_name )"	1028:1:24940:25043	2666383	1	True				
ANR	2666401	CallExpression	"dprintf ( D_ALWAYS , ""CondorFileTable::fchdir(%d) will try chdir(%s)\\n"" , fd , pointers [ fd ] -> logical_name )"		2666383	0					
ANR	2666402	Callee	dprintf		2666383	0					
ANR	2666403	Identifier	dprintf		2666383	0					
ANR	2666404	ArgumentList	D_ALWAYS		2666383	1					
ANR	2666405	Argument	D_ALWAYS		2666383	0					
ANR	2666406	Identifier	D_ALWAYS		2666383	0					
ANR	2666407	Argument	"""CondorFileTable::fchdir(%d) will try chdir(%s)\\n"""		2666383	1					
ANR	2666408	PrimaryExpression	"""CondorFileTable::fchdir(%d) will try chdir(%s)\\n"""		2666383	0					
ANR	2666409	Argument	fd		2666383	2					
ANR	2666410	Identifier	fd		2666383	0					
ANR	2666411	Argument	pointers [ fd ] -> logical_name		2666383	3					
ANR	2666412	PtrMemberAccess	pointers [ fd ] -> logical_name		2666383	0					
ANR	2666413	ArrayIndexing	pointers [ fd ]		2666383	0					
ANR	2666414	Identifier	pointers		2666383	0					
ANR	2666415	Identifier	fd		2666383	1					
ANR	2666416	Identifier	logical_name		2666383	1					
ANR	2666417	ReturnStatement	return chdir ( pointers [ fd ] -> logical_name ) ;	1031:1:25047:25089	2666383	2	True				
ANR	2666418	CallExpression	chdir ( pointers [ fd ] -> logical_name )		2666383	0					
ANR	2666419	Callee	chdir		2666383	0					
ANR	2666420	Identifier	chdir		2666383	0					
ANR	2666421	ArgumentList	pointers [ fd ] -> logical_name		2666383	1					
ANR	2666422	Argument	pointers [ fd ] -> logical_name		2666383	0					
ANR	2666423	PtrMemberAccess	pointers [ fd ] -> logical_name		2666383	0					
ANR	2666424	ArrayIndexing	pointers [ fd ]		2666383	0					
ANR	2666425	Identifier	pointers		2666383	0					
ANR	2666426	Identifier	fd		2666383	1					
ANR	2666427	Identifier	logical_name		2666383	1					
ANR	2666428	ReturnType	int		2666383	1					
ANR	2666429	Identifier	CondorFileTable :: fchdir		2666383	2					
ANR	2666430	ParameterList	int fd		2666383	3					
ANR	2666431	Parameter	int fd	1024:29:24896:24901	2666383	0	True				
ANR	2666432	ParameterType	int		2666383	0					
ANR	2666433	Identifier	fd		2666383	1					
ANR	2666434	CFGEntryNode	ENTRY		2666383		True				
ANR	2666435	CFGExitNode	EXIT		2666383		True				
ANR	2666436	Symbol	resume		2666383						
ANR	2666437	Symbol	pointers [ fd ] -> logical_name		2666383						
ANR	2666438	Symbol	* fd		2666383						
ANR	2666439	Symbol	* * fd		2666383						
ANR	2666440	Symbol	D_ALWAYS		2666383						
ANR	2666441	Symbol	chdir		2666383						
ANR	2666442	Symbol	* * pointers		2666383						
ANR	2666443	Symbol	fd		2666383						
ANR	2666444	Symbol	pointers		2666383						
ANR	2666445	Symbol	* pointers		2666383						
ANR	2666446	Function	CondorFileTable :: chdir	1042:0:25362:26487							
ANR	2666447	FunctionDef	CondorFileTable :: chdir (const char * path)		2666446	0					
ANR	2666448	CompoundStatement		1043:0:25409:26487	2666446	0					
ANR	2666449	IdentifierDeclStatement	int result ;	1044:1:25412:25422	2666446	0	True				
ANR	2666450	IdentifierDecl	result		2666446	0					
ANR	2666451	IdentifierDeclType	int		2666446	0					
ANR	2666452	Identifier	result		2666446	1					
ANR	2666453	IdentifierDeclStatement	char * nmem = NULL ;	1045:1:25425:25442	2666446	1	True				
ANR	2666454	IdentifierDecl	* nmem = NULL		2666446	0					
ANR	2666455	IdentifierDeclType	char *		2666446	0					
ANR	2666456	Identifier	nmem		2666446	1					
ANR	2666457	AssignmentExpression	* nmem = NULL		2666446	2		=			
ANR	2666458	Identifier	NULL		2666446	0					
ANR	2666459	Identifier	NULL		2666446	1					
ANR	2666460	IfStatement	if ( MyImage . GetMode ( ) != STANDALONE )		2666446	2					
ANR	2666461	Condition	MyImage . GetMode ( ) != STANDALONE	1047:5:25450:25480	2666446	0	True				
ANR	2666462	EqualityExpression	MyImage . GetMode ( ) != STANDALONE		2666446	0		!=			
ANR	2666463	CallExpression	MyImage . GetMode ( )		2666446	0					
ANR	2666464	Callee	MyImage . GetMode		2666446	0					
ANR	2666465	MemberAccess	MyImage . GetMode		2666446	0					
ANR	2666466	Identifier	MyImage		2666446	0					
ANR	2666467	Identifier	GetMode		2666446	1					
ANR	2666468	ArgumentList			2666446	1					
ANR	2666469	Identifier	STANDALONE		2666446	1					
ANR	2666470	CompoundStatement		5:39:74:74	2666446	1					
ANR	2666471	ExpressionStatement	result = REMOTE_CONDOR_chdir ( path )	1048:2:25488:25524	2666446	0	True				
ANR	2666472	AssignmentExpression	result = REMOTE_CONDOR_chdir ( path )		2666446	0		=			
ANR	2666473	Identifier	result		2666446	0					
ANR	2666474	CallExpression	REMOTE_CONDOR_chdir ( path )		2666446	1					
ANR	2666475	Callee	REMOTE_CONDOR_chdir		2666446	0					
ANR	2666476	Identifier	REMOTE_CONDOR_chdir		2666446	0					
ANR	2666477	ArgumentList	path		2666446	1					
ANR	2666478	Argument	path		2666446	0					
ANR	2666479	Identifier	path		2666446	0					
ANR	2666480	ElseStatement	else		2666446	0					
ANR	2666481	CompoundStatement		7:8:124:124	2666446	0					
ANR	2666482	ExpressionStatement	"result = syscall ( SYS_chdir , path )"	1050:2:25538:25573	2666446	0	True				
ANR	2666483	AssignmentExpression	"result = syscall ( SYS_chdir , path )"		2666446	0		=			
ANR	2666484	Identifier	result		2666446	0					
ANR	2666485	CallExpression	"syscall ( SYS_chdir , path )"		2666446	1					
ANR	2666486	Callee	syscall		2666446	0					
ANR	2666487	Identifier	syscall		2666446	0					
ANR	2666488	ArgumentList	SYS_chdir		2666446	1					
ANR	2666489	Argument	SYS_chdir		2666446	0					
ANR	2666490	Identifier	SYS_chdir		2666446	0					
ANR	2666491	Argument	path		2666446	1					
ANR	2666492	Identifier	path		2666446	0					
ANR	2666493	IfStatement	if ( result == - 1 )		2666446	3					
ANR	2666494	Condition	result == - 1	1053:5:25584:25593	2666446	0	True				
ANR	2666495	EqualityExpression	result == - 1		2666446	0		==			
ANR	2666496	Identifier	result		2666446	0					
ANR	2666497	UnaryOperationExpression	- 1		2666446	1					
ANR	2666498	UnaryOperator	-		2666446	0					
ANR	2666499	PrimaryExpression	1		2666446	1					
ANR	2666500	ReturnStatement	return result ;	1053:18:25597:25610	2666446	1	True				
ANR	2666501	Identifier	result		2666446	0					
ANR	2666502	IfStatement	if ( path [ 0 ] == '/' )		2666446	4					
ANR	2666503	Condition	path [ 0 ] == '/'	1055:5:25618:25629	2666446	0	True				
ANR	2666504	EqualityExpression	path [ 0 ] == '/'		2666446	0		==			
ANR	2666505	ArrayIndexing	path [ 0 ]		2666446	0					
ANR	2666506	Identifier	path		2666446	0					
ANR	2666507	PrimaryExpression	0		2666446	1					
ANR	2666508	PrimaryExpression	'/'		2666446	1					
ANR	2666509	CompoundStatement		13:20:223:223	2666446	1					
ANR	2666510	ExpressionStatement	nmem = strdup ( path )	1058:2:25744:25765	2666446	0	True				
ANR	2666511	AssignmentExpression	nmem = strdup ( path )		2666446	0		=			
ANR	2666512	Identifier	nmem		2666446	0					
ANR	2666513	CallExpression	strdup ( path )		2666446	1					
ANR	2666514	Callee	strdup		2666446	0					
ANR	2666515	Identifier	strdup		2666446	0					
ANR	2666516	ArgumentList	path		2666446	1					
ANR	2666517	Argument	path		2666446	0					
ANR	2666518	Identifier	path		2666446	0					
ANR	2666519	ExpressionStatement	free ( working_dir )	1059:2:25769:25788	2666446	1	True				
ANR	2666520	CallExpression	free ( working_dir )		2666446	0					
ANR	2666521	Callee	free		2666446	0					
ANR	2666522	Identifier	free		2666446	0					
ANR	2666523	ArgumentList	working_dir		2666446	1					
ANR	2666524	Argument	working_dir		2666446	0					
ANR	2666525	Identifier	working_dir		2666446	0					
ANR	2666526	ExpressionStatement	working_dir = nmem	1060:2:25792:25810	2666446	2	True				
ANR	2666527	AssignmentExpression	working_dir = nmem		2666446	0		=			
ANR	2666528	Identifier	working_dir		2666446	0					
ANR	2666529	Identifier	nmem		2666446	1					
ANR	2666530	ElseStatement	else		2666446	0					
ANR	2666531	CompoundStatement		19:8:410:410	2666446	0					
ANR	2666532	ExpressionStatement	"nmem = ( char * ) realloc ( working_dir , strlen ( path ) + strlen ( working_dir ) + 2 )"	1062:2:25824:25894	2666446	0	True				
ANR	2666533	AssignmentExpression	"nmem = ( char * ) realloc ( working_dir , strlen ( path ) + strlen ( working_dir ) + 2 )"		2666446	0		=			
ANR	2666534	Identifier	nmem		2666446	0					
ANR	2666535	CastExpression	"( char * ) realloc ( working_dir , strlen ( path ) + strlen ( working_dir ) + 2 )"		2666446	1					
ANR	2666536	CastTarget	char *		2666446	0					
ANR	2666537	CallExpression	"realloc ( working_dir , strlen ( path ) + strlen ( working_dir ) + 2 )"		2666446	1					
ANR	2666538	Callee	realloc		2666446	0					
ANR	2666539	Identifier	realloc		2666446	0					
ANR	2666540	ArgumentList	working_dir		2666446	1					
ANR	2666541	Argument	working_dir		2666446	0					
ANR	2666542	Identifier	working_dir		2666446	0					
ANR	2666543	Argument	strlen ( path ) + strlen ( working_dir ) + 2		2666446	1					
ANR	2666544	AdditiveExpression	strlen ( path ) + strlen ( working_dir ) + 2		2666446	0		+			
ANR	2666545	CallExpression	strlen ( path )		2666446	0					
ANR	2666546	Callee	strlen		2666446	0					
ANR	2666547	Identifier	strlen		2666446	0					
ANR	2666548	ArgumentList	path		2666446	1					
ANR	2666549	Argument	path		2666446	0					
ANR	2666550	Identifier	path		2666446	0					
ANR	2666551	AdditiveExpression	strlen ( working_dir ) + 2		2666446	1		+			
ANR	2666552	CallExpression	strlen ( working_dir )		2666446	0					
ANR	2666553	Callee	strlen		2666446	0					
ANR	2666554	Identifier	strlen		2666446	0					
ANR	2666555	ArgumentList	working_dir		2666446	1					
ANR	2666556	Argument	working_dir		2666446	0					
ANR	2666557	Identifier	working_dir		2666446	0					
ANR	2666558	PrimaryExpression	2		2666446	1					
ANR	2666559	IfStatement	if ( nmem == NULL )		2666446	1					
ANR	2666560	Condition	nmem == NULL	1063:6:25902:25913	2666446	0	True				
ANR	2666561	EqualityExpression	nmem == NULL		2666446	0		==			
ANR	2666562	Identifier	nmem		2666446	0					
ANR	2666563	Identifier	NULL		2666446	1					
ANR	2666564	CompoundStatement		21:20:506:506	2666446	1					
ANR	2666565	ExpressionStatement	errno = ENOMEM	1069:3:26171:26185	2666446	0	True				
ANR	2666566	AssignmentExpression	errno = ENOMEM		2666446	0		=			
ANR	2666567	Identifier	errno		2666446	0					
ANR	2666568	Identifier	ENOMEM		2666446	1					
ANR	2666569	ReturnStatement	return - 1 ;	1070:3:26190:26199	2666446	1	True				
ANR	2666570	UnaryOperationExpression	- 1		2666446	0					
ANR	2666571	UnaryOperator	-		2666446	0					
ANR	2666572	PrimaryExpression	1		2666446	1					
ANR	2666573	ExpressionStatement	working_dir = nmem	1075:2:26386:26404	2666446	2	True				
ANR	2666574	AssignmentExpression	working_dir = nmem		2666446	0		=			
ANR	2666575	Identifier	working_dir		2666446	0					
ANR	2666576	Identifier	nmem		2666446	1					
ANR	2666577	ExpressionStatement	"strcat ( working_dir , ""/"" )"	1076:2:26408:26434	2666446	3	True				
ANR	2666578	CallExpression	"strcat ( working_dir , ""/"" )"		2666446	0					
ANR	2666579	Callee	strcat		2666446	0					
ANR	2666580	Identifier	strcat		2666446	0					
ANR	2666581	ArgumentList	working_dir		2666446	1					
ANR	2666582	Argument	working_dir		2666446	0					
ANR	2666583	Identifier	working_dir		2666446	0					
ANR	2666584	Argument	"""/"""		2666446	1					
ANR	2666585	PrimaryExpression	"""/"""		2666446	0					
ANR	2666586	ExpressionStatement	"strcat ( working_dir , path )"	1077:2:26438:26465	2666446	4	True				
ANR	2666587	CallExpression	"strcat ( working_dir , path )"		2666446	0					
ANR	2666588	Callee	strcat		2666446	0					
ANR	2666589	Identifier	strcat		2666446	0					
ANR	2666590	ArgumentList	working_dir		2666446	1					
ANR	2666591	Argument	working_dir		2666446	0					
ANR	2666592	Identifier	working_dir		2666446	0					
ANR	2666593	Argument	path		2666446	1					
ANR	2666594	Identifier	path		2666446	0					
ANR	2666595	ReturnStatement	return result ;	1080:1:26472:26485	2666446	5	True				
ANR	2666596	Identifier	result		2666446	0					
ANR	2666597	ReturnType	int		2666446	1					
ANR	2666598	Identifier	CondorFileTable :: chdir		2666446	2					
ANR	2666599	ParameterList	const char * path		2666446	3					
ANR	2666600	Parameter	const char * path	1042:28:25390:25405	2666446	0	True				
ANR	2666601	ParameterType	const char *		2666446	0					
ANR	2666602	Identifier	path		2666446	1					
ANR	2666603	CFGEntryNode	ENTRY		2666446		True				
ANR	2666604	CFGExitNode	EXIT		2666446		True				
ANR	2666605	Symbol	syscall		2666446						
ANR	2666606	Symbol	ENOMEM		2666446						
ANR	2666607	Symbol	errno		2666446						
ANR	2666608	Symbol	NULL		2666446						
ANR	2666609	Symbol	REMOTE_CONDOR_chdir		2666446						
ANR	2666610	Symbol	working_dir		2666446						
ANR	2666611	Symbol	MyImage . GetMode		2666446						
ANR	2666612	Symbol	SYS_chdir		2666446						
ANR	2666613	Symbol	realloc		2666446						
ANR	2666614	Symbol	result		2666446						
ANR	2666615	Symbol	path		2666446						
ANR	2666616	Symbol	strlen		2666446						
ANR	2666617	Symbol	STANDALONE		2666446						
ANR	2666618	Symbol	nmem		2666446						
ANR	2666619	Symbol	* path		2666446						
ANR	2666620	Symbol	strdup		2666446						
ANR	2666621	Symbol	MyImage		2666446						
ANR	2666622	Function	CondorFileTable :: ioctl	1089:0:26640:26773							
ANR	2666623	FunctionDef	"CondorFileTable :: ioctl (int fd , int cmd , long arg)"		2666622	0					
ANR	2666624	CompoundStatement		1090:0:26696:26773	2666622	0					
ANR	2666625	IfStatement	if ( resume ( fd ) < 0 )		2666622	0					
ANR	2666626	Condition	resume ( fd ) < 0	1091:5:26703:26714	2666622	0	True				
ANR	2666627	RelationalExpression	resume ( fd ) < 0		2666622	0		<			
ANR	2666628	CallExpression	resume ( fd )		2666622	0					
ANR	2666629	Callee	resume		2666622	0					
ANR	2666630	Identifier	resume		2666622	0					
ANR	2666631	ArgumentList	fd		2666622	1					
ANR	2666632	Argument	fd		2666622	0					
ANR	2666633	Identifier	fd		2666622	0					
ANR	2666634	PrimaryExpression	0		2666622	1					
ANR	2666635	ReturnStatement	return - 1 ;	1091:20:26718:26727	2666622	1	True				
ANR	2666636	UnaryOperationExpression	- 1		2666622	0					
ANR	2666637	UnaryOperator	-		2666622	0					
ANR	2666638	PrimaryExpression	1		2666622	1					
ANR	2666639	ReturnStatement	"return pointers [ fd ] -> file -> ioctl ( cmd , arg ) ;"	1092:1:26730:26771	2666622	1	True				
ANR	2666640	CallExpression	"pointers [ fd ] -> file -> ioctl ( cmd , arg )"		2666622	0					
ANR	2666641	Callee	pointers [ fd ] -> file -> ioctl		2666622	0					
ANR	2666642	PtrMemberAccess	pointers [ fd ] -> file -> ioctl		2666622	0					
ANR	2666643	PtrMemberAccess	pointers [ fd ] -> file		2666622	0					
ANR	2666644	ArrayIndexing	pointers [ fd ]		2666622	0					
ANR	2666645	Identifier	pointers		2666622	0					
ANR	2666646	Identifier	fd		2666622	1					
ANR	2666647	Identifier	file		2666622	1					
ANR	2666648	Identifier	ioctl		2666622	1					
ANR	2666649	ArgumentList	cmd		2666622	1					
ANR	2666650	Argument	cmd		2666622	0					
ANR	2666651	Identifier	cmd		2666622	0					
ANR	2666652	Argument	arg		2666622	1					
ANR	2666653	Identifier	arg		2666622	0					
ANR	2666654	ReturnType	int		2666622	1					
ANR	2666655	Identifier	CondorFileTable :: ioctl		2666622	2					
ANR	2666656	ParameterList	"int fd , int cmd , long arg"		2666622	3					
ANR	2666657	Parameter	int fd	1089:28:26668:26673	2666622	0	True				
ANR	2666658	ParameterType	int		2666622	0					
ANR	2666659	Identifier	fd		2666622	1					
ANR	2666660	Parameter	int cmd	1089:36:26676:26682	2666622	1	True				
ANR	2666661	ParameterType	int		2666622	0					
ANR	2666662	Identifier	cmd		2666622	1					
ANR	2666663	Parameter	long arg	1089:45:26685:26692	2666622	2	True				
ANR	2666664	ParameterType	long		2666622	0					
ANR	2666665	Identifier	arg		2666622	1					
ANR	2666666	CFGEntryNode	ENTRY		2666622		True				
ANR	2666667	CFGExitNode	EXIT		2666622		True				
ANR	2666668	Symbol	resume		2666622						
ANR	2666669	Symbol	* fd		2666622						
ANR	2666670	Symbol	* * fd		2666622						
ANR	2666671	Symbol	pointers [ fd ] -> file -> ioctl		2666622						
ANR	2666672	Symbol	* pointers		2666622						
ANR	2666673	Symbol	* pointers [ fd ] -> file		2666622						
ANR	2666674	Symbol	arg		2666622						
ANR	2666675	Symbol	* * * pointers		2666622						
ANR	2666676	Symbol	* * * fd		2666622						
ANR	2666677	Symbol	cmd		2666622						
ANR	2666678	Symbol	pointers [ fd ] -> file		2666622						
ANR	2666679	Symbol	* * pointers		2666622						
ANR	2666680	Symbol	fd		2666622						
ANR	2666681	Symbol	pointers		2666622						
ANR	2666682	Function	CondorFileTable :: ftruncate	1095:0:26776:26909							
ANR	2666683	FunctionDef	"CondorFileTable :: ftruncate (int fd , size_t size)"		2666682	0					
ANR	2666684	CompoundStatement		1096:0:26830:26909	2666682	0					
ANR	2666685	IfStatement	if ( resume ( fd ) < 0 )		2666682	0					
ANR	2666686	Condition	resume ( fd ) < 0	1097:5:26837:26848	2666682	0	True				
ANR	2666687	RelationalExpression	resume ( fd ) < 0		2666682	0		<			
ANR	2666688	CallExpression	resume ( fd )		2666682	0					
ANR	2666689	Callee	resume		2666682	0					
ANR	2666690	Identifier	resume		2666682	0					
ANR	2666691	ArgumentList	fd		2666682	1					
ANR	2666692	Argument	fd		2666682	0					
ANR	2666693	Identifier	fd		2666682	0					
ANR	2666694	PrimaryExpression	0		2666682	1					
ANR	2666695	ReturnStatement	return - 1 ;	1097:20:26852:26861	2666682	1	True				
ANR	2666696	UnaryOperationExpression	- 1		2666682	0					
ANR	2666697	UnaryOperator	-		2666682	0					
ANR	2666698	PrimaryExpression	1		2666682	1					
ANR	2666699	ReturnStatement	return pointers [ fd ] -> file -> ftruncate ( size ) ;	1099:1:26865:26907	2666682	1	True				
ANR	2666700	CallExpression	pointers [ fd ] -> file -> ftruncate ( size )		2666682	0					
ANR	2666701	Callee	pointers [ fd ] -> file -> ftruncate		2666682	0					
ANR	2666702	PtrMemberAccess	pointers [ fd ] -> file -> ftruncate		2666682	0					
ANR	2666703	PtrMemberAccess	pointers [ fd ] -> file		2666682	0					
ANR	2666704	ArrayIndexing	pointers [ fd ]		2666682	0					
ANR	2666705	Identifier	pointers		2666682	0					
ANR	2666706	Identifier	fd		2666682	1					
ANR	2666707	Identifier	file		2666682	1					
ANR	2666708	Identifier	ftruncate		2666682	1					
ANR	2666709	ArgumentList	size		2666682	1					
ANR	2666710	Argument	size		2666682	0					
ANR	2666711	Identifier	size		2666682	0					
ANR	2666712	ReturnType	int		2666682	1					
ANR	2666713	Identifier	CondorFileTable :: ftruncate		2666682	2					
ANR	2666714	ParameterList	"int fd , size_t size"		2666682	3					
ANR	2666715	Parameter	int fd	1095:32:26808:26813	2666682	0	True				
ANR	2666716	ParameterType	int		2666682	0					
ANR	2666717	Identifier	fd		2666682	1					
ANR	2666718	Parameter	size_t size	1095:40:26816:26826	2666682	1	True				
ANR	2666719	ParameterType	size_t		2666682	0					
ANR	2666720	Identifier	size		2666682	1					
ANR	2666721	CFGEntryNode	ENTRY		2666682		True				
ANR	2666722	CFGExitNode	EXIT		2666682		True				
ANR	2666723	Symbol	resume		2666682						
ANR	2666724	Symbol	* fd		2666682						
ANR	2666725	Symbol	pointers [ fd ] -> file -> ftruncate		2666682						
ANR	2666726	Symbol	* * fd		2666682						
ANR	2666727	Symbol	* pointers		2666682						
ANR	2666728	Symbol	* pointers [ fd ] -> file		2666682						
ANR	2666729	Symbol	size		2666682						
ANR	2666730	Symbol	* * * fd		2666682						
ANR	2666731	Symbol	* * * pointers		2666682						
ANR	2666732	Symbol	pointers [ fd ] -> file		2666682						
ANR	2666733	Symbol	* * pointers		2666682						
ANR	2666734	Symbol	fd		2666682						
ANR	2666735	Symbol	pointers		2666682						
ANR	2666736	Function	CondorFileTable :: fcntl	1111:0:27155:28335							
ANR	2666737	FunctionDef	"CondorFileTable :: fcntl (int fd , int cmd , int arg)"		2666736	0					
ANR	2666738	CompoundStatement		1112:0:27210:28335	2666736	0					
ANR	2666739	IfStatement	if ( resume ( fd ) < 0 )		2666736	0					
ANR	2666740	Condition	resume ( fd ) < 0	1114:5:27218:27229	2666736	0	True				
ANR	2666741	RelationalExpression	resume ( fd ) < 0		2666736	0		<			
ANR	2666742	CallExpression	resume ( fd )		2666736	0					
ANR	2666743	Callee	resume		2666736	0					
ANR	2666744	Identifier	resume		2666736	0					
ANR	2666745	ArgumentList	fd		2666736	1					
ANR	2666746	Argument	fd		2666736	0					
ANR	2666747	Identifier	fd		2666736	0					
ANR	2666748	PrimaryExpression	0		2666736	1					
ANR	2666749	ReturnStatement	return - 1 ;	1114:20:27233:27242	2666736	1	True				
ANR	2666750	UnaryOperationExpression	- 1		2666736	0					
ANR	2666751	UnaryOperator	-		2666736	0					
ANR	2666752	PrimaryExpression	1		2666736	1					
ANR	2666753	SwitchStatement	switch ( cmd )		2666736	1					
ANR	2666754	Condition	cmd	1116:8:27253:27255	2666736	0	True				
ANR	2666755	Identifier	cmd		2666736	0					
ANR	2666756	CompoundStatement		5:13:47:47	2666736	1					
ANR	2666757	Label	case F_DUPFD :	1118:2:27279:27291	2666736	0	True				
ANR	2666758	Identifier	F_DUPFD		2666736	0					
ANR	2666759	ReturnStatement	"return search_dup2 ( fd , arg ) ;"	1119:3:27296:27322	2666736	1	True				
ANR	2666760	CallExpression	"search_dup2 ( fd , arg )"		2666736	0					
ANR	2666761	Callee	search_dup2		2666736	0					
ANR	2666762	Identifier	search_dup2		2666736	0					
ANR	2666763	ArgumentList	fd		2666736	1					
ANR	2666764	Argument	fd		2666736	0					
ANR	2666765	Identifier	fd		2666736	0					
ANR	2666766	Argument	arg		2666736	1					
ANR	2666767	Identifier	arg		2666736	0					
ANR	2666768	BreakStatement	break ;	1120:3:27327:27332	2666736	2	True				
ANR	2666769	Label	case F_DUP2FD :	1124:2:27364:27377	2666736	3	True				
ANR	2666770	Identifier	F_DUP2FD		2666736	0					
ANR	2666771	ReturnStatement	"return dup2 ( fd , arg ) ;"	1125:3:27382:27401	2666736	4	True				
ANR	2666772	CallExpression	"dup2 ( fd , arg )"		2666736	0					
ANR	2666773	Callee	dup2		2666736	0					
ANR	2666774	Identifier	dup2		2666736	0					
ANR	2666775	ArgumentList	fd		2666736	1					
ANR	2666776	Argument	fd		2666736	0					
ANR	2666777	Identifier	fd		2666736	0					
ANR	2666778	Argument	arg		2666736	1					
ANR	2666779	Identifier	arg		2666736	0					
ANR	2666780	BreakStatement	break ;	1126:3:27406:27411	2666736	5	True				
ANR	2666781	Label	case F_FREESP :	1140:2:27758:27771	2666736	6	True				
ANR	2666782	Identifier	F_FREESP		2666736	0					
ANR	2666783	CompoundStatement		31:4:571:608	2666736	7					
ANR	2666784	IdentifierDeclStatement	struct flock * f = ( struct flock * ) arg ;	1142:4:27782:27819	2666736	0	True				
ANR	2666785	IdentifierDecl	* f = ( struct flock * ) arg		2666736	0					
ANR	2666786	IdentifierDeclType	struct flock *		2666736	0					
ANR	2666787	Identifier	f		2666736	1					
ANR	2666788	AssignmentExpression	* f = ( struct flock * ) arg		2666736	2		=			
ANR	2666789	Identifier	f		2666736	0					
ANR	2666790	CastExpression	( struct flock * ) arg		2666736	1					
ANR	2666791	CastTarget	struct flock *		2666736	0					
ANR	2666792	Identifier	arg		2666736	1					
ANR	2666793	IfStatement	if ( ( f -> l_whence == 0 ) && ( f -> l_len == 0 ) )		2666736	1					
ANR	2666794	Condition	( f -> l_whence == 0 ) && ( f -> l_len == 0 )	1144:8:27830:27862	2666736	0	True				
ANR	2666795	AndExpression	( f -> l_whence == 0 ) && ( f -> l_len == 0 )		2666736	0		&&			
ANR	2666796	EqualityExpression	f -> l_whence == 0		2666736	0		==			
ANR	2666797	PtrMemberAccess	f -> l_whence		2666736	0					
ANR	2666798	Identifier	f		2666736	0					
ANR	2666799	Identifier	l_whence		2666736	1					
ANR	2666800	PrimaryExpression	0		2666736	1					
ANR	2666801	EqualityExpression	f -> l_len == 0		2666736	1		==			
ANR	2666802	PtrMemberAccess	f -> l_len		2666736	0					
ANR	2666803	Identifier	f		2666736	0					
ANR	2666804	Identifier	l_len		2666736	1					
ANR	2666805	PrimaryExpression	0		2666736	1					
ANR	2666806	CompoundStatement		33:44:655:655	2666736	1					
ANR	2666807	ReturnStatement	"return FileTab -> ftruncate ( fd , f -> l_start ) ;"	1145:5:27873:27913	2666736	0	True				
ANR	2666808	CallExpression	"FileTab -> ftruncate ( fd , f -> l_start )"		2666736	0					
ANR	2666809	Callee	FileTab -> ftruncate		2666736	0					
ANR	2666810	PtrMemberAccess	FileTab -> ftruncate		2666736	0					
ANR	2666811	Identifier	FileTab		2666736	0					
ANR	2666812	Identifier	ftruncate		2666736	1					
ANR	2666813	ArgumentList	fd		2666736	1					
ANR	2666814	Argument	fd		2666736	0					
ANR	2666815	Identifier	fd		2666736	0					
ANR	2666816	Argument	f -> l_start		2666736	1					
ANR	2666817	PtrMemberAccess	f -> l_start		2666736	0					
ANR	2666818	Identifier	f		2666736	0					
ANR	2666819	Identifier	l_start		2666736	1					
ANR	2666820	ReturnStatement	"return pointers [ fd ] -> file -> fcntl ( cmd , arg ) ;"	1147:4:27925:27966	2666736	2	True				
ANR	2666821	CallExpression	"pointers [ fd ] -> file -> fcntl ( cmd , arg )"		2666736	0					
ANR	2666822	Callee	pointers [ fd ] -> file -> fcntl		2666736	0					
ANR	2666823	PtrMemberAccess	pointers [ fd ] -> file -> fcntl		2666736	0					
ANR	2666824	PtrMemberAccess	pointers [ fd ] -> file		2666736	0					
ANR	2666825	ArrayIndexing	pointers [ fd ]		2666736	0					
ANR	2666826	Identifier	pointers		2666736	0					
ANR	2666827	Identifier	fd		2666736	1					
ANR	2666828	Identifier	file		2666736	1					
ANR	2666829	Identifier	fcntl		2666736	1					
ANR	2666830	ArgumentList	cmd		2666736	1					
ANR	2666831	Argument	cmd		2666736	0					
ANR	2666832	Identifier	cmd		2666736	0					
ANR	2666833	Argument	arg		2666736	1					
ANR	2666834	Identifier	arg		2666736	0					
ANR	2666835	BreakStatement	break ;	1149:3:27976:27981	2666736	8	True				
ANR	2666836	Label	case F_FREESP64 :	1153:2:28015:28030	2666736	9	True				
ANR	2666837	Identifier	F_FREESP64		2666736	0					
ANR	2666838	CompoundStatement		44:4:830:873	2666736	10					
ANR	2666839	IdentifierDeclStatement	struct flock64 * f64 = ( struct flock64 * ) arg ;	1155:4:28041:28084	2666736	0	True				
ANR	2666840	IdentifierDecl	* f64 = ( struct flock64 * ) arg		2666736	0					
ANR	2666841	IdentifierDeclType	struct flock64 *		2666736	0					
ANR	2666842	Identifier	f64		2666736	1					
ANR	2666843	AssignmentExpression	* f64 = ( struct flock64 * ) arg		2666736	2		=			
ANR	2666844	Identifier	f64		2666736	0					
ANR	2666845	CastExpression	( struct flock64 * ) arg		2666736	1					
ANR	2666846	CastTarget	struct flock64 *		2666736	0					
ANR	2666847	Identifier	arg		2666736	1					
ANR	2666848	IfStatement	if ( ( f64 -> l_whence == 0 ) && ( f64 -> l_len == 0 ) )		2666736	1					
ANR	2666849	Condition	( f64 -> l_whence == 0 ) && ( f64 -> l_len == 0 )	1157:8:28095:28131	2666736	0	True				
ANR	2666850	AndExpression	( f64 -> l_whence == 0 ) && ( f64 -> l_len == 0 )		2666736	0		&&			
ANR	2666851	EqualityExpression	f64 -> l_whence == 0		2666736	0		==			
ANR	2666852	PtrMemberAccess	f64 -> l_whence		2666736	0					
ANR	2666853	Identifier	f64		2666736	0					
ANR	2666854	Identifier	l_whence		2666736	1					
ANR	2666855	PrimaryExpression	0		2666736	1					
ANR	2666856	EqualityExpression	f64 -> l_len == 0		2666736	1		==			
ANR	2666857	PtrMemberAccess	f64 -> l_len		2666736	0					
ANR	2666858	Identifier	f64		2666736	0					
ANR	2666859	Identifier	l_len		2666736	1					
ANR	2666860	PrimaryExpression	0		2666736	1					
ANR	2666861	CompoundStatement		46:48:924:924	2666736	1					
ANR	2666862	ReturnStatement	"return FileTab -> ftruncate ( fd , f64 -> l_start ) ;"	1158:5:28142:28184	2666736	0	True				
ANR	2666863	CallExpression	"FileTab -> ftruncate ( fd , f64 -> l_start )"		2666736	0					
ANR	2666864	Callee	FileTab -> ftruncate		2666736	0					
ANR	2666865	PtrMemberAccess	FileTab -> ftruncate		2666736	0					
ANR	2666866	Identifier	FileTab		2666736	0					
ANR	2666867	Identifier	ftruncate		2666736	1					
ANR	2666868	ArgumentList	fd		2666736	1					
ANR	2666869	Argument	fd		2666736	0					
ANR	2666870	Identifier	fd		2666736	0					
ANR	2666871	Argument	f64 -> l_start		2666736	1					
ANR	2666872	PtrMemberAccess	f64 -> l_start		2666736	0					
ANR	2666873	Identifier	f64		2666736	0					
ANR	2666874	Identifier	l_start		2666736	1					
ANR	2666875	ReturnStatement	"return pointers [ fd ] -> file -> fcntl ( cmd , arg ) ;"	1161:4:28197:28238	2666736	2	True				
ANR	2666876	CallExpression	"pointers [ fd ] -> file -> fcntl ( cmd , arg )"		2666736	0					
ANR	2666877	Callee	pointers [ fd ] -> file -> fcntl		2666736	0					
ANR	2666878	PtrMemberAccess	pointers [ fd ] -> file -> fcntl		2666736	0					
ANR	2666879	PtrMemberAccess	pointers [ fd ] -> file		2666736	0					
ANR	2666880	ArrayIndexing	pointers [ fd ]		2666736	0					
ANR	2666881	Identifier	pointers		2666736	0					
ANR	2666882	Identifier	fd		2666736	1					
ANR	2666883	Identifier	file		2666736	1					
ANR	2666884	Identifier	fcntl		2666736	1					
ANR	2666885	ArgumentList	cmd		2666736	1					
ANR	2666886	Argument	cmd		2666736	0					
ANR	2666887	Identifier	cmd		2666736	0					
ANR	2666888	Argument	arg		2666736	1					
ANR	2666889	Identifier	arg		2666736	0					
ANR	2666890	BreakStatement	break ;	1163:3:28248:28253	2666736	11	True				
ANR	2666891	Label	default :	1166:2:28267:28274	2666736	12	True				
ANR	2666892	Identifier	default		2666736	0					
ANR	2666893	ReturnStatement	"return pointers [ fd ] -> file -> fcntl ( cmd , arg ) ;"	1167:3:28279:28320	2666736	13	True				
ANR	2666894	CallExpression	"pointers [ fd ] -> file -> fcntl ( cmd , arg )"		2666736	0					
ANR	2666895	Callee	pointers [ fd ] -> file -> fcntl		2666736	0					
ANR	2666896	PtrMemberAccess	pointers [ fd ] -> file -> fcntl		2666736	0					
ANR	2666897	PtrMemberAccess	pointers [ fd ] -> file		2666736	0					
ANR	2666898	ArrayIndexing	pointers [ fd ]		2666736	0					
ANR	2666899	Identifier	pointers		2666736	0					
ANR	2666900	Identifier	fd		2666736	1					
ANR	2666901	Identifier	file		2666736	1					
ANR	2666902	Identifier	fcntl		2666736	1					
ANR	2666903	ArgumentList	cmd		2666736	1					
ANR	2666904	Argument	cmd		2666736	0					
ANR	2666905	Identifier	cmd		2666736	0					
ANR	2666906	Argument	arg		2666736	1					
ANR	2666907	Identifier	arg		2666736	0					
ANR	2666908	BreakStatement	break ;	1168:3:28325:28330	2666736	14	True				
ANR	2666909	ReturnType	int		2666736	1					
ANR	2666910	Identifier	CondorFileTable :: fcntl		2666736	2					
ANR	2666911	ParameterList	"int fd , int cmd , int arg"		2666736	3					
ANR	2666912	Parameter	int fd	1111:28:27183:27188	2666736	0	True				
ANR	2666913	ParameterType	int		2666736	0					
ANR	2666914	Identifier	fd		2666736	1					
ANR	2666915	Parameter	int cmd	1111:36:27191:27197	2666736	1	True				
ANR	2666916	ParameterType	int		2666736	0					
ANR	2666917	Identifier	cmd		2666736	1					
ANR	2666918	Parameter	int arg	1111:45:27200:27206	2666736	2	True				
ANR	2666919	ParameterType	int		2666736	0					
ANR	2666920	Identifier	arg		2666736	1					
ANR	2666921	CFGEntryNode	ENTRY		2666736		True				
ANR	2666922	CFGExitNode	EXIT		2666736		True				
ANR	2666923	Symbol	f64 -> l_len		2666736						
ANR	2666924	Symbol	* FileTab		2666736						
ANR	2666925	Symbol	f64 -> l_start		2666736						
ANR	2666926	Symbol	arg		2666736						
ANR	2666927	Symbol	f64 -> l_whence		2666736						
ANR	2666928	Symbol	* * * fd		2666736						
ANR	2666929	Symbol	* * * pointers		2666736						
ANR	2666930	Symbol	FileTab		2666736						
ANR	2666931	Symbol	pointers [ fd ] -> file		2666736						
ANR	2666932	Symbol	* * pointers		2666736						
ANR	2666933	Symbol	f -> l_start		2666736						
ANR	2666934	Symbol	search_dup2		2666736						
ANR	2666935	Symbol	pointers		2666736						
ANR	2666936	Symbol	resume		2666736						
ANR	2666937	Symbol	f64		2666736						
ANR	2666938	Symbol	f		2666736						
ANR	2666939	Symbol	* fd		2666736						
ANR	2666940	Symbol	* * fd		2666736						
ANR	2666941	Symbol	pointers [ fd ] -> file -> fcntl		2666736						
ANR	2666942	Symbol	f -> l_len		2666736						
ANR	2666943	Symbol	* pointers		2666736						
ANR	2666944	Symbol	* f		2666736						
ANR	2666945	Symbol	* f64		2666736						
ANR	2666946	Symbol	* pointers [ fd ] -> file		2666736						
ANR	2666947	Symbol	f -> l_whence		2666736						
ANR	2666948	Symbol	FileTab -> ftruncate		2666736						
ANR	2666949	Symbol	cmd		2666736						
ANR	2666950	Symbol	dup2		2666736						
ANR	2666951	Symbol	fd		2666736						
ANR	2666952	Function	CondorFileTable :: fsync	1172:0:28338:28445							
ANR	2666953	FunctionDef	CondorFileTable :: fsync (int fd)		2666952	0					
ANR	2666954	CompoundStatement		1173:0:28375:28445	2666952	0					
ANR	2666955	IfStatement	if ( resume ( fd ) < 0 )		2666952	0					
ANR	2666956	Condition	resume ( fd ) < 0	1174:5:28382:28393	2666952	0	True				
ANR	2666957	RelationalExpression	resume ( fd ) < 0		2666952	0		<			
ANR	2666958	CallExpression	resume ( fd )		2666952	0					
ANR	2666959	Callee	resume		2666952	0					
ANR	2666960	Identifier	resume		2666952	0					
ANR	2666961	ArgumentList	fd		2666952	1					
ANR	2666962	Argument	fd		2666952	0					
ANR	2666963	Identifier	fd		2666952	0					
ANR	2666964	PrimaryExpression	0		2666952	1					
ANR	2666965	ReturnStatement	return - 1 ;	1174:20:28397:28406	2666952	1	True				
ANR	2666966	UnaryOperationExpression	- 1		2666952	0					
ANR	2666967	UnaryOperator	-		2666952	0					
ANR	2666968	PrimaryExpression	1		2666952	1					
ANR	2666969	ReturnStatement	return pointers [ fd ] -> file -> fsync ( ) ;	1175:1:28409:28443	2666952	1	True				
ANR	2666970	CallExpression	pointers [ fd ] -> file -> fsync ( )		2666952	0					
ANR	2666971	Callee	pointers [ fd ] -> file -> fsync		2666952	0					
ANR	2666972	PtrMemberAccess	pointers [ fd ] -> file -> fsync		2666952	0					
ANR	2666973	PtrMemberAccess	pointers [ fd ] -> file		2666952	0					
ANR	2666974	ArrayIndexing	pointers [ fd ]		2666952	0					
ANR	2666975	Identifier	pointers		2666952	0					
ANR	2666976	Identifier	fd		2666952	1					
ANR	2666977	Identifier	file		2666952	1					
ANR	2666978	Identifier	fsync		2666952	1					
ANR	2666979	ArgumentList			2666952	1					
ANR	2666980	ReturnType	int		2666952	1					
ANR	2666981	Identifier	CondorFileTable :: fsync		2666952	2					
ANR	2666982	ParameterList	int fd		2666952	3					
ANR	2666983	Parameter	int fd	1172:28:28366:28371	2666952	0	True				
ANR	2666984	ParameterType	int		2666952	0					
ANR	2666985	Identifier	fd		2666952	1					
ANR	2666986	CFGEntryNode	ENTRY		2666952		True				
ANR	2666987	CFGExitNode	EXIT		2666952		True				
ANR	2666988	Symbol	resume		2666952						
ANR	2666989	Symbol	* pointers [ fd ] -> file		2666952						
ANR	2666990	Symbol	* fd		2666952						
ANR	2666991	Symbol	* * fd		2666952						
ANR	2666992	Symbol	pointers [ fd ] -> file -> fsync		2666952						
ANR	2666993	Symbol	* * * pointers		2666952						
ANR	2666994	Symbol	* * * fd		2666952						
ANR	2666995	Symbol	pointers [ fd ] -> file		2666952						
ANR	2666996	Symbol	* * pointers		2666952						
ANR	2666997	Symbol	fd		2666952						
ANR	2666998	Symbol	* pointers		2666952						
ANR	2666999	Symbol	pointers		2666952						
ANR	2667000	Function	CondorFileTable :: fstat	1178:0:28448:28575							
ANR	2667001	FunctionDef	"CondorFileTable :: fstat (int fd , struct stat * buf)"		2667000	0					
ANR	2667002	CompoundStatement		1179:0:28502:28575	2667000	0					
ANR	2667003	IfStatement	if ( resume ( fd ) < 0 )		2667000	0					
ANR	2667004	Condition	resume ( fd ) < 0	1180:5:28509:28520	2667000	0	True				
ANR	2667005	RelationalExpression	resume ( fd ) < 0		2667000	0		<			
ANR	2667006	CallExpression	resume ( fd )		2667000	0					
ANR	2667007	Callee	resume		2667000	0					
ANR	2667008	Identifier	resume		2667000	0					
ANR	2667009	ArgumentList	fd		2667000	1					
ANR	2667010	Argument	fd		2667000	0					
ANR	2667011	Identifier	fd		2667000	0					
ANR	2667012	PrimaryExpression	0		2667000	1					
ANR	2667013	ReturnStatement	return - 1 ;	1180:20:28524:28533	2667000	1	True				
ANR	2667014	UnaryOperationExpression	- 1		2667000	0					
ANR	2667015	UnaryOperator	-		2667000	0					
ANR	2667016	PrimaryExpression	1		2667000	1					
ANR	2667017	ReturnStatement	return pointers [ fd ] -> file -> fstat ( buf ) ;	1181:1:28536:28573	2667000	1	True				
ANR	2667018	CallExpression	pointers [ fd ] -> file -> fstat ( buf )		2667000	0					
ANR	2667019	Callee	pointers [ fd ] -> file -> fstat		2667000	0					
ANR	2667020	PtrMemberAccess	pointers [ fd ] -> file -> fstat		2667000	0					
ANR	2667021	PtrMemberAccess	pointers [ fd ] -> file		2667000	0					
ANR	2667022	ArrayIndexing	pointers [ fd ]		2667000	0					
ANR	2667023	Identifier	pointers		2667000	0					
ANR	2667024	Identifier	fd		2667000	1					
ANR	2667025	Identifier	file		2667000	1					
ANR	2667026	Identifier	fstat		2667000	1					
ANR	2667027	ArgumentList	buf		2667000	1					
ANR	2667028	Argument	buf		2667000	0					
ANR	2667029	Identifier	buf		2667000	0					
ANR	2667030	ReturnType	int		2667000	1					
ANR	2667031	Identifier	CondorFileTable :: fstat		2667000	2					
ANR	2667032	ParameterList	"int fd , struct stat * buf"		2667000	3					
ANR	2667033	Parameter	int fd	1178:28:28476:28481	2667000	0	True				
ANR	2667034	ParameterType	int		2667000	0					
ANR	2667035	Identifier	fd		2667000	1					
ANR	2667036	Parameter	struct stat * buf	1178:36:28484:28499	2667000	1	True				
ANR	2667037	ParameterType	struct stat *		2667000	0					
ANR	2667038	Identifier	buf		2667000	1					
ANR	2667039	CFGEntryNode	ENTRY		2667000		True				
ANR	2667040	CFGExitNode	EXIT		2667000		True				
ANR	2667041	Symbol	resume		2667000						
ANR	2667042	Symbol	pointers [ fd ] -> file -> fstat		2667000						
ANR	2667043	Symbol	* fd		2667000						
ANR	2667044	Symbol	* * fd		2667000						
ANR	2667045	Symbol	* pointers		2667000						
ANR	2667046	Symbol	buf		2667000						
ANR	2667047	Symbol	* pointers [ fd ] -> file		2667000						
ANR	2667048	Symbol	* * * fd		2667000						
ANR	2667049	Symbol	* * * pointers		2667000						
ANR	2667050	Symbol	pointers [ fd ] -> file		2667000						
ANR	2667051	Symbol	* * pointers		2667000						
ANR	2667052	Symbol	fd		2667000						
ANR	2667053	Symbol	pointers		2667000						
ANR	2667054	Function	CondorFileTable :: stat	1184:0:28578:29760							
ANR	2667055	FunctionDef	"CondorFileTable :: stat (const char * name , struct stat * buf)"		2667054	0					
ANR	2667056	CompoundStatement		1185:0:28641:29760	2667054	0					
ANR	2667057	IdentifierDeclStatement	int fd ;	1186:1:28644:28650	2667054	0	True				
ANR	2667058	IdentifierDecl	fd		2667054	0					
ANR	2667059	IdentifierDeclType	int		2667054	0					
ANR	2667060	Identifier	fd		2667054	1					
ANR	2667061	IdentifierDeclStatement	"int scm , oscm ;"	1187:1:28653:28666	2667054	1	True				
ANR	2667062	IdentifierDecl	scm		2667054	0					
ANR	2667063	IdentifierDeclType	int		2667054	0					
ANR	2667064	Identifier	scm		2667054	1					
ANR	2667065	IdentifierDecl	oscm		2667054	1					
ANR	2667066	IdentifierDeclType	int		2667054	0					
ANR	2667067	Identifier	oscm		2667054	1					
ANR	2667068	IdentifierDeclStatement	int ret ;	1188:1:28669:28676	2667054	2	True				
ANR	2667069	IdentifierDecl	ret		2667054	0					
ANR	2667070	IdentifierDeclType	int		2667054	0					
ANR	2667071	Identifier	ret		2667054	1					
ANR	2667072	IdentifierDeclStatement	int do_local ;	1189:1:28679:28691	2667054	3	True				
ANR	2667073	IdentifierDecl	do_local		2667054	0					
ANR	2667074	IdentifierDeclType	int		2667054	0					
ANR	2667075	Identifier	do_local		2667054	1					
ANR	2667076	ExpressionStatement	fd = find_logical_name ( name )	1194:1:28881:28911	2667054	4	True				
ANR	2667077	AssignmentExpression	fd = find_logical_name ( name )		2667054	0		=			
ANR	2667078	Identifier	fd		2667054	0					
ANR	2667079	CallExpression	find_logical_name ( name )		2667054	1					
ANR	2667080	Callee	find_logical_name		2667054	0					
ANR	2667081	Identifier	find_logical_name		2667054	0					
ANR	2667082	ArgumentList	name		2667054	1					
ANR	2667083	Argument	name		2667054	0					
ANR	2667084	Identifier	name		2667054	0					
ANR	2667085	IfStatement	if ( fd == - 1 )		2667054	5					
ANR	2667086	Condition	fd == - 1	1195:5:28918:28925	2667054	0	True				
ANR	2667087	EqualityExpression	fd == - 1		2667054	0		==			
ANR	2667088	Identifier	fd		2667054	0					
ANR	2667089	UnaryOperationExpression	- 1		2667054	1					
ANR	2667090	UnaryOperator	-		2667054	0					
ANR	2667091	PrimaryExpression	1		2667054	1					
ANR	2667092	CompoundStatement		16:2:389:409	2667054	1					
ANR	2667093	ExpressionStatement	oscm = scm = GetSyscallMode ( )	1197:2:28933:28962	2667054	0	True				
ANR	2667094	AssignmentExpression	oscm = scm = GetSyscallMode ( )		2667054	0		=			
ANR	2667095	Identifier	oscm		2667054	0					
ANR	2667096	AssignmentExpression	scm = GetSyscallMode ( )		2667054	1		=			
ANR	2667097	Identifier	scm		2667054	0					
ANR	2667098	CallExpression	GetSyscallMode ( )		2667054	1					
ANR	2667099	Callee	GetSyscallMode		2667054	0					
ANR	2667100	Identifier	GetSyscallMode		2667054	0					
ANR	2667101	ArgumentList			2667054	1					
ANR	2667102	IdentifierDeclStatement	char * newname = NULL ;	1200:2:29031:29051	2667054	1	True				
ANR	2667103	IdentifierDecl	* newname = NULL		2667054	0					
ANR	2667104	IdentifierDeclType	char *		2667054	0					
ANR	2667105	Identifier	newname		2667054	1					
ANR	2667106	AssignmentExpression	* newname = NULL		2667054	2		=			
ANR	2667107	Identifier	NULL		2667054	0					
ANR	2667108	Identifier	NULL		2667054	1					
ANR	2667109	ExpressionStatement	"do_local = _condor_is_file_name_local ( name , & newname )"	1201:2:29055:29110	2667054	2	True				
ANR	2667110	AssignmentExpression	"do_local = _condor_is_file_name_local ( name , & newname )"		2667054	0		=			
ANR	2667111	Identifier	do_local		2667054	0					
ANR	2667112	CallExpression	"_condor_is_file_name_local ( name , & newname )"		2667054	1					
ANR	2667113	Callee	_condor_is_file_name_local		2667054	0					
ANR	2667114	Identifier	_condor_is_file_name_local		2667054	0					
ANR	2667115	ArgumentList	name		2667054	1					
ANR	2667116	Argument	name		2667054	0					
ANR	2667117	Identifier	name		2667054	0					
ANR	2667118	Argument	& newname		2667054	1					
ANR	2667119	UnaryOperationExpression	& newname		2667054	0					
ANR	2667120	UnaryOperator	&		2667054	0					
ANR	2667121	Identifier	newname		2667054	1					
ANR	2667122	IfStatement	if ( LocalSysCalls ( ) || do_local )		2667054	3					
ANR	2667123	Condition	LocalSysCalls ( ) || do_local	1202:6:29118:29144	2667054	0	True				
ANR	2667124	OrExpression	LocalSysCalls ( ) || do_local		2667054	0		||			
ANR	2667125	CallExpression	LocalSysCalls ( )		2667054	0					
ANR	2667126	Callee	LocalSysCalls		2667054	0					
ANR	2667127	Identifier	LocalSysCalls		2667054	0					
ANR	2667128	ArgumentList			2667054	1					
ANR	2667129	Identifier	do_local		2667054	1					
ANR	2667130	CompoundStatement		18:35:505:505	2667054	1					
ANR	2667131	ExpressionStatement	scm |= SYS_LOCAL	1203:3:29152:29168	2667054	0	True				
ANR	2667132	AssignmentExpression	scm |= SYS_LOCAL		2667054	0		|=			
ANR	2667133	Identifier	scm		2667054	0					
ANR	2667134	Identifier	SYS_LOCAL		2667054	1					
ANR	2667135	ExpressionStatement	scm &= ~ ( SYS_REMOTE )	1204:3:29198:29218	2667054	1	True				
ANR	2667136	AssignmentExpression	scm &= ~ ( SYS_REMOTE )		2667054	0		&=			
ANR	2667137	Identifier	scm		2667054	0					
ANR	2667138	UnaryOperationExpression	~ ( SYS_REMOTE )		2667054	1					
ANR	2667139	UnaryOperator	~		2667054	0					
ANR	2667140	Identifier	SYS_REMOTE		2667054	1					
ANR	2667141	ElseStatement	else		2667054	0					
ANR	2667142	CompoundStatement		22:7:615:615	2667054	0					
ANR	2667143	ExpressionStatement	scm |= SYS_REMOTE	1207:3:29262:29279	2667054	0	True				
ANR	2667144	AssignmentExpression	scm |= SYS_REMOTE		2667054	0		|=			
ANR	2667145	Identifier	scm		2667054	0					
ANR	2667146	Identifier	SYS_REMOTE		2667054	1					
ANR	2667147	ExpressionStatement	scm &= ~ ( SYS_LOCAL )	1208:3:29310:29329	2667054	1	True				
ANR	2667148	AssignmentExpression	scm &= ~ ( SYS_LOCAL )		2667054	0		&=			
ANR	2667149	Identifier	scm		2667054	0					
ANR	2667150	UnaryOperationExpression	~ ( SYS_LOCAL )		2667054	1					
ANR	2667151	UnaryOperator	~		2667054	0					
ANR	2667152	Identifier	SYS_LOCAL		2667054	1					
ANR	2667153	ExpressionStatement	scm |= SYS_UNMAPPED	1212:2:29437:29456	2667054	4	True				
ANR	2667154	AssignmentExpression	scm |= SYS_UNMAPPED		2667054	0		|=			
ANR	2667155	Identifier	scm		2667054	0					
ANR	2667156	Identifier	SYS_UNMAPPED		2667054	1					
ANR	2667157	ExpressionStatement	scm &= ~ ( SYS_MAPPED )	1213:2:29487:29507	2667054	5	True				
ANR	2667158	AssignmentExpression	scm &= ~ ( SYS_MAPPED )		2667054	0		&=			
ANR	2667159	Identifier	scm		2667054	0					
ANR	2667160	UnaryOperationExpression	~ ( SYS_MAPPED )		2667054	1					
ANR	2667161	UnaryOperator	~		2667054	0					
ANR	2667162	Identifier	SYS_MAPPED		2667054	1					
ANR	2667163	ExpressionStatement	SetSyscalls ( scm )	1216:2:29596:29612	2667054	6	True				
ANR	2667164	CallExpression	SetSyscalls ( scm )		2667054	0					
ANR	2667165	Callee	SetSyscalls		2667054	0					
ANR	2667166	Identifier	SetSyscalls		2667054	0					
ANR	2667167	ArgumentList	scm		2667054	1					
ANR	2667168	Argument	scm		2667054	0					
ANR	2667169	Identifier	scm		2667054	0					
ANR	2667170	Statement	ret	1217:2:29616:29618	2667054	7	True				
ANR	2667171	Statement	=	1217:6:29620:29620	2667054	8	True				
ANR	2667172	Statement	::	1217:8:29622:29623	2667054	9	True				
ANR	2667173	ExpressionStatement	"stat ( newname , buf )"	1217:10:29624:29642	2667054	10	True				
ANR	2667174	CallExpression	"stat ( newname , buf )"		2667054	0					
ANR	2667175	Callee	stat		2667054	0					
ANR	2667176	Identifier	stat		2667054	0					
ANR	2667177	ArgumentList	newname		2667054	1					
ANR	2667178	Argument	newname		2667054	0					
ANR	2667179	Identifier	newname		2667054	0					
ANR	2667180	Argument	buf		2667054	1					
ANR	2667181	Identifier	buf		2667054	0					
ANR	2667182	ExpressionStatement	SetSyscalls ( oscm )	1218:2:29646:29663	2667054	11	True				
ANR	2667183	CallExpression	SetSyscalls ( oscm )		2667054	0					
ANR	2667184	Callee	SetSyscalls		2667054	0					
ANR	2667185	Identifier	SetSyscalls		2667054	0					
ANR	2667186	ArgumentList	oscm		2667054	1					
ANR	2667187	Argument	oscm		2667054	0					
ANR	2667188	Identifier	oscm		2667054	0					
ANR	2667189	ExpressionStatement	free ( newname )	1220:2:29701:29716	2667054	12	True				
ANR	2667190	CallExpression	free ( newname )		2667054	0					
ANR	2667191	Callee	free		2667054	0					
ANR	2667192	Identifier	free		2667054	0					
ANR	2667193	ArgumentList	newname		2667054	1					
ANR	2667194	Argument	newname		2667054	0					
ANR	2667195	Identifier	newname		2667054	0					
ANR	2667196	ReturnStatement	return ret ;	1222:2:29721:29731	2667054	13	True				
ANR	2667197	Identifier	ret		2667054	0					
ANR	2667198	ReturnStatement	"return fstat ( fd , buf ) ;"	1224:1:29737:29758	2667054	6	True				
ANR	2667199	CallExpression	"fstat ( fd , buf )"		2667054	0					
ANR	2667200	Callee	fstat		2667054	0					
ANR	2667201	Identifier	fstat		2667054	0					
ANR	2667202	ArgumentList	fd		2667054	1					
ANR	2667203	Argument	fd		2667054	0					
ANR	2667204	Identifier	fd		2667054	0					
ANR	2667205	Argument	buf		2667054	1					
ANR	2667206	Identifier	buf		2667054	0					
ANR	2667207	ReturnType	int		2667054	1					
ANR	2667208	Identifier	CondorFileTable :: stat		2667054	2					
ANR	2667209	ParameterList	"const char * name , struct stat * buf"		2667054	3					
ANR	2667210	Parameter	const char * name	1184:27:28605:28620	2667054	0	True				
ANR	2667211	ParameterType	const char *		2667054	0					
ANR	2667212	Identifier	name		2667054	1					
ANR	2667213	Parameter	struct stat * buf	1184:45:28623:28638	2667054	1	True				
ANR	2667214	ParameterType	struct stat *		2667054	0					
ANR	2667215	Identifier	buf		2667054	1					
ANR	2667216	CFGEntryNode	ENTRY		2667054		True				
ANR	2667217	CFGExitNode	EXIT		2667054		True				
ANR	2667218	Symbol	ret		2667054						
ANR	2667219	Symbol	NULL		2667054						
ANR	2667220	Symbol	& newname		2667054						
ANR	2667221	Symbol	_condor_is_file_name_local		2667054						
ANR	2667222	Symbol	SYS_UNMAPPED		2667054						
ANR	2667223	Symbol	find_logical_name		2667054						
ANR	2667224	Symbol	fstat		2667054						
ANR	2667225	Symbol	newname		2667054						
ANR	2667226	Symbol	LocalSysCalls		2667054						
ANR	2667227	Symbol	SYS_MAPPED		2667054						
ANR	2667228	Symbol	SYS_REMOTE		2667054						
ANR	2667229	Symbol	buf		2667054						
ANR	2667230	Symbol	SYS_LOCAL		2667054						
ANR	2667231	Symbol	name		2667054						
ANR	2667232	Symbol	GetSyscallMode		2667054						
ANR	2667233	Symbol	oscm		2667054						
ANR	2667234	Symbol	scm		2667054						
ANR	2667235	Symbol	do_local		2667054						
ANR	2667236	Symbol	fd		2667054						
ANR	2667237	Function	CondorFileTable :: lstat	1227:0:29763:30890							
ANR	2667238	FunctionDef	"CondorFileTable :: lstat (const char * name , struct stat * buf)"		2667237	0					
ANR	2667239	CompoundStatement		1228:0:29827:30890	2667237	0					
ANR	2667240	IdentifierDeclStatement	int fd ;	1229:1:29830:29836	2667237	0	True				
ANR	2667241	IdentifierDecl	fd		2667237	0					
ANR	2667242	IdentifierDeclType	int		2667237	0					
ANR	2667243	Identifier	fd		2667237	1					
ANR	2667244	IdentifierDeclStatement	"int scm , oscm ;"	1230:1:29839:29852	2667237	1	True				
ANR	2667245	IdentifierDecl	scm		2667237	0					
ANR	2667246	IdentifierDeclType	int		2667237	0					
ANR	2667247	Identifier	scm		2667237	1					
ANR	2667248	IdentifierDecl	oscm		2667237	1					
ANR	2667249	IdentifierDeclType	int		2667237	0					
ANR	2667250	Identifier	oscm		2667237	1					
ANR	2667251	IdentifierDeclStatement	int ret ;	1231:1:29855:29862	2667237	2	True				
ANR	2667252	IdentifierDecl	ret		2667237	0					
ANR	2667253	IdentifierDeclType	int		2667237	0					
ANR	2667254	Identifier	ret		2667237	1					
ANR	2667255	IdentifierDeclStatement	int do_local ;	1232:1:29865:29877	2667237	3	True				
ANR	2667256	IdentifierDecl	do_local		2667237	0					
ANR	2667257	IdentifierDeclType	int		2667237	0					
ANR	2667258	Identifier	do_local		2667237	1					
ANR	2667259	ExpressionStatement	fd = find_logical_name ( name )	1237:1:30068:30098	2667237	4	True				
ANR	2667260	AssignmentExpression	fd = find_logical_name ( name )		2667237	0		=			
ANR	2667261	Identifier	fd		2667237	0					
ANR	2667262	CallExpression	find_logical_name ( name )		2667237	1					
ANR	2667263	Callee	find_logical_name		2667237	0					
ANR	2667264	Identifier	find_logical_name		2667237	0					
ANR	2667265	ArgumentList	name		2667237	1					
ANR	2667266	Argument	name		2667237	0					
ANR	2667267	Identifier	name		2667237	0					
ANR	2667268	IfStatement	if ( fd == - 1 )		2667237	5					
ANR	2667269	Condition	fd == - 1	1238:5:30105:30112	2667237	0	True				
ANR	2667270	EqualityExpression	fd == - 1		2667237	0		==			
ANR	2667271	Identifier	fd		2667237	0					
ANR	2667272	UnaryOperationExpression	- 1		2667237	1					
ANR	2667273	UnaryOperator	-		2667237	0					
ANR	2667274	PrimaryExpression	1		2667237	1					
ANR	2667275	CompoundStatement		16:2:390:410	2667237	1					
ANR	2667276	ExpressionStatement	oscm = scm = GetSyscallMode ( )	1240:2:30120:30149	2667237	0	True				
ANR	2667277	AssignmentExpression	oscm = scm = GetSyscallMode ( )		2667237	0		=			
ANR	2667278	Identifier	oscm		2667237	0					
ANR	2667279	AssignmentExpression	scm = GetSyscallMode ( )		2667237	1		=			
ANR	2667280	Identifier	scm		2667237	0					
ANR	2667281	CallExpression	GetSyscallMode ( )		2667237	1					
ANR	2667282	Callee	GetSyscallMode		2667237	0					
ANR	2667283	Identifier	GetSyscallMode		2667237	0					
ANR	2667284	ArgumentList			2667237	1					
ANR	2667285	IdentifierDeclStatement	char * newname = NULL ;	1243:2:30218:30238	2667237	1	True				
ANR	2667286	IdentifierDecl	* newname = NULL		2667237	0					
ANR	2667287	IdentifierDeclType	char *		2667237	0					
ANR	2667288	Identifier	newname		2667237	1					
ANR	2667289	AssignmentExpression	* newname = NULL		2667237	2		=			
ANR	2667290	Identifier	NULL		2667237	0					
ANR	2667291	Identifier	NULL		2667237	1					
ANR	2667292	ExpressionStatement	"do_local = _condor_is_file_name_local ( name , & newname )"	1244:2:30242:30297	2667237	2	True				
ANR	2667293	AssignmentExpression	"do_local = _condor_is_file_name_local ( name , & newname )"		2667237	0		=			
ANR	2667294	Identifier	do_local		2667237	0					
ANR	2667295	CallExpression	"_condor_is_file_name_local ( name , & newname )"		2667237	1					
ANR	2667296	Callee	_condor_is_file_name_local		2667237	0					
ANR	2667297	Identifier	_condor_is_file_name_local		2667237	0					
ANR	2667298	ArgumentList	name		2667237	1					
ANR	2667299	Argument	name		2667237	0					
ANR	2667300	Identifier	name		2667237	0					
ANR	2667301	Argument	& newname		2667237	1					
ANR	2667302	UnaryOperationExpression	& newname		2667237	0					
ANR	2667303	UnaryOperator	&		2667237	0					
ANR	2667304	Identifier	newname		2667237	1					
ANR	2667305	IfStatement	if ( LocalSysCalls ( ) || do_local )		2667237	3					
ANR	2667306	Condition	LocalSysCalls ( ) || do_local	1245:6:30305:30331	2667237	0	True				
ANR	2667307	OrExpression	LocalSysCalls ( ) || do_local		2667237	0		||			
ANR	2667308	CallExpression	LocalSysCalls ( )		2667237	0					
ANR	2667309	Callee	LocalSysCalls		2667237	0					
ANR	2667310	Identifier	LocalSysCalls		2667237	0					
ANR	2667311	ArgumentList			2667237	1					
ANR	2667312	Identifier	do_local		2667237	1					
ANR	2667313	CompoundStatement		18:35:506:506	2667237	1					
ANR	2667314	ExpressionStatement	scm |= SYS_LOCAL	1246:3:30339:30355	2667237	0	True				
ANR	2667315	AssignmentExpression	scm |= SYS_LOCAL		2667237	0		|=			
ANR	2667316	Identifier	scm		2667237	0					
ANR	2667317	Identifier	SYS_LOCAL		2667237	1					
ANR	2667318	ExpressionStatement	scm &= ~ ( SYS_REMOTE )	1247:3:30385:30405	2667237	1	True				
ANR	2667319	AssignmentExpression	scm &= ~ ( SYS_REMOTE )		2667237	0		&=			
ANR	2667320	Identifier	scm		2667237	0					
ANR	2667321	UnaryOperationExpression	~ ( SYS_REMOTE )		2667237	1					
ANR	2667322	UnaryOperator	~		2667237	0					
ANR	2667323	Identifier	SYS_REMOTE		2667237	1					
ANR	2667324	ElseStatement	else		2667237	0					
ANR	2667325	CompoundStatement		22:7:616:616	2667237	0					
ANR	2667326	ExpressionStatement	scm |= SYS_REMOTE	1250:3:30449:30466	2667237	0	True				
ANR	2667327	AssignmentExpression	scm |= SYS_REMOTE		2667237	0		|=			
ANR	2667328	Identifier	scm		2667237	0					
ANR	2667329	Identifier	SYS_REMOTE		2667237	1					
ANR	2667330	ExpressionStatement	scm &= ~ ( SYS_LOCAL )	1251:3:30497:30516	2667237	1	True				
ANR	2667331	AssignmentExpression	scm &= ~ ( SYS_LOCAL )		2667237	0		&=			
ANR	2667332	Identifier	scm		2667237	0					
ANR	2667333	UnaryOperationExpression	~ ( SYS_LOCAL )		2667237	1					
ANR	2667334	UnaryOperator	~		2667237	0					
ANR	2667335	Identifier	SYS_LOCAL		2667237	1					
ANR	2667336	ExpressionStatement	scm |= SYS_UNMAPPED	1255:2:30624:30643	2667237	4	True				
ANR	2667337	AssignmentExpression	scm |= SYS_UNMAPPED		2667237	0		|=			
ANR	2667338	Identifier	scm		2667237	0					
ANR	2667339	Identifier	SYS_UNMAPPED		2667237	1					
ANR	2667340	ExpressionStatement	scm &= ~ ( SYS_MAPPED )	1256:2:30674:30694	2667237	5	True				
ANR	2667341	AssignmentExpression	scm &= ~ ( SYS_MAPPED )		2667237	0		&=			
ANR	2667342	Identifier	scm		2667237	0					
ANR	2667343	UnaryOperationExpression	~ ( SYS_MAPPED )		2667237	1					
ANR	2667344	UnaryOperator	~		2667237	0					
ANR	2667345	Identifier	SYS_MAPPED		2667237	1					
ANR	2667346	ExpressionStatement	SetSyscalls ( scm )	1258:2:30725:30741	2667237	6	True				
ANR	2667347	CallExpression	SetSyscalls ( scm )		2667237	0					
ANR	2667348	Callee	SetSyscalls		2667237	0					
ANR	2667349	Identifier	SetSyscalls		2667237	0					
ANR	2667350	ArgumentList	scm		2667237	1					
ANR	2667351	Argument	scm		2667237	0					
ANR	2667352	Identifier	scm		2667237	0					
ANR	2667353	Statement	ret	1259:2:30745:30747	2667237	7	True				
ANR	2667354	Statement	=	1259:6:30749:30749	2667237	8	True				
ANR	2667355	Statement	::	1259:8:30751:30752	2667237	9	True				
ANR	2667356	ExpressionStatement	"lstat ( newname , buf )"	1259:10:30753:30772	2667237	10	True				
ANR	2667357	CallExpression	"lstat ( newname , buf )"		2667237	0					
ANR	2667358	Callee	lstat		2667237	0					
ANR	2667359	Identifier	lstat		2667237	0					
ANR	2667360	ArgumentList	newname		2667237	1					
ANR	2667361	Argument	newname		2667237	0					
ANR	2667362	Identifier	newname		2667237	0					
ANR	2667363	Argument	buf		2667237	1					
ANR	2667364	Identifier	buf		2667237	0					
ANR	2667365	ExpressionStatement	SetSyscalls ( oscm )	1260:2:30776:30793	2667237	11	True				
ANR	2667366	CallExpression	SetSyscalls ( oscm )		2667237	0					
ANR	2667367	Callee	SetSyscalls		2667237	0					
ANR	2667368	Identifier	SetSyscalls		2667237	0					
ANR	2667369	ArgumentList	oscm		2667237	1					
ANR	2667370	Argument	oscm		2667237	0					
ANR	2667371	Identifier	oscm		2667237	0					
ANR	2667372	ExpressionStatement	free ( newname )	1262:2:30831:30846	2667237	12	True				
ANR	2667373	CallExpression	free ( newname )		2667237	0					
ANR	2667374	Callee	free		2667237	0					
ANR	2667375	Identifier	free		2667237	0					
ANR	2667376	ArgumentList	newname		2667237	1					
ANR	2667377	Argument	newname		2667237	0					
ANR	2667378	Identifier	newname		2667237	0					
ANR	2667379	ReturnStatement	return ret ;	1264:2:30851:30861	2667237	13	True				
ANR	2667380	Identifier	ret		2667237	0					
ANR	2667381	ReturnStatement	"return fstat ( fd , buf ) ;"	1266:1:30867:30888	2667237	6	True				
ANR	2667382	CallExpression	"fstat ( fd , buf )"		2667237	0					
ANR	2667383	Callee	fstat		2667237	0					
ANR	2667384	Identifier	fstat		2667237	0					
ANR	2667385	ArgumentList	fd		2667237	1					
ANR	2667386	Argument	fd		2667237	0					
ANR	2667387	Identifier	fd		2667237	0					
ANR	2667388	Argument	buf		2667237	1					
ANR	2667389	Identifier	buf		2667237	0					
ANR	2667390	ReturnType	int		2667237	1					
ANR	2667391	Identifier	CondorFileTable :: lstat		2667237	2					
ANR	2667392	ParameterList	"const char * name , struct stat * buf"		2667237	3					
ANR	2667393	Parameter	const char * name	1227:28:29791:29806	2667237	0	True				
ANR	2667394	ParameterType	const char *		2667237	0					
ANR	2667395	Identifier	name		2667237	1					
ANR	2667396	Parameter	struct stat * buf	1227:46:29809:29824	2667237	1	True				
ANR	2667397	ParameterType	struct stat *		2667237	0					
ANR	2667398	Identifier	buf		2667237	1					
ANR	2667399	CFGEntryNode	ENTRY		2667237		True				
ANR	2667400	CFGExitNode	EXIT		2667237		True				
ANR	2667401	Symbol	ret		2667237						
ANR	2667402	Symbol	NULL		2667237						
ANR	2667403	Symbol	& newname		2667237						
ANR	2667404	Symbol	_condor_is_file_name_local		2667237						
ANR	2667405	Symbol	SYS_UNMAPPED		2667237						
ANR	2667406	Symbol	find_logical_name		2667237						
ANR	2667407	Symbol	fstat		2667237						
ANR	2667408	Symbol	newname		2667237						
ANR	2667409	Symbol	LocalSysCalls		2667237						
ANR	2667410	Symbol	SYS_MAPPED		2667237						
ANR	2667411	Symbol	SYS_REMOTE		2667237						
ANR	2667412	Symbol	buf		2667237						
ANR	2667413	Symbol	SYS_LOCAL		2667237						
ANR	2667414	Symbol	name		2667237						
ANR	2667415	Symbol	GetSyscallMode		2667237						
ANR	2667416	Symbol	oscm		2667237						
ANR	2667417	Symbol	scm		2667237						
ANR	2667418	Symbol	do_local		2667237						
ANR	2667419	Symbol	fd		2667237						
ANR	2667420	Function	CondorFileTable :: poll	1273:0:31048:31813							
ANR	2667421	FunctionDef	"CondorFileTable :: poll (struct pollfd * fds , int nfds , int timeout)"		2667420	0					
ANR	2667422	CompoundStatement		1274:0:31119:31813	2667420	0					
ANR	2667423	IdentifierDeclStatement	struct pollfd * realfds ;	1275:1:31122:31144	2667420	0	True				
ANR	2667424	IdentifierDecl	* realfds		2667420	0					
ANR	2667425	IdentifierDeclType	struct pollfd *		2667420	0					
ANR	2667426	Identifier	realfds		2667420	1					
ANR	2667427	ExpressionStatement	realfds = ( struct pollfd * ) malloc ( sizeof ( struct pollfd ) * nfds )	1277:1:31148:31212	2667420	1	True				
ANR	2667428	AssignmentExpression	realfds = ( struct pollfd * ) malloc ( sizeof ( struct pollfd ) * nfds )		2667420	0		=			
ANR	2667429	Identifier	realfds		2667420	0					
ANR	2667430	CastExpression	( struct pollfd * ) malloc ( sizeof ( struct pollfd ) * nfds )		2667420	1					
ANR	2667431	CastTarget	struct pollfd *		2667420	0					
ANR	2667432	CallExpression	malloc ( sizeof ( struct pollfd ) * nfds )		2667420	1					
ANR	2667433	Callee	malloc		2667420	0					
ANR	2667434	Identifier	malloc		2667420	0					
ANR	2667435	ArgumentList	sizeof ( struct pollfd ) * nfds		2667420	1					
ANR	2667436	Argument	sizeof ( struct pollfd ) * nfds		2667420	0					
ANR	2667437	MultiplicativeExpression	sizeof ( struct pollfd ) * nfds		2667420	0		*			
ANR	2667438	SizeofExpression	sizeof ( struct pollfd )		2667420	0					
ANR	2667439	Sizeof	sizeof		2667420	0					
ANR	2667440	SizeofOperand	struct pollfd		2667420	1					
ANR	2667441	Identifier	nfds		2667420	1					
ANR	2667442	IfStatement	if ( ! realfds )		2667420	2					
ANR	2667443	Condition	! realfds	1278:4:31218:31225	2667420	0	True				
ANR	2667444	UnaryOperationExpression	! realfds		2667420	0					
ANR	2667445	UnaryOperator	!		2667420	0					
ANR	2667446	Identifier	realfds		2667420	1					
ANR	2667447	CompoundStatement		5:14:108:108	2667420	1					
ANR	2667448	ExpressionStatement	errno = ENOMEM	1279:2:31232:31246	2667420	0	True				
ANR	2667449	AssignmentExpression	errno = ENOMEM		2667420	0		=			
ANR	2667450	Identifier	errno		2667420	0					
ANR	2667451	Identifier	ENOMEM		2667420	1					
ANR	2667452	ReturnStatement	return - 1 ;	1280:2:31250:31259	2667420	1	True				
ANR	2667453	UnaryOperationExpression	- 1		2667420	0					
ANR	2667454	UnaryOperator	-		2667420	0					
ANR	2667455	PrimaryExpression	1		2667420	1					
ANR	2667456	ForStatement	for ( int i = 0 ; i < nfds ; i ++ )		2667420	3					
ANR	2667457	ForInit	int i = 0 ;	1283:6:31271:31278	2667420	0	True				
ANR	2667458	IdentifierDeclStatement	int i = 0 ;		2667420	0					
ANR	2667459	IdentifierDecl	i = 0		2667420	0					
ANR	2667460	IdentifierDeclType	int		2667420	0					
ANR	2667461	Identifier	i		2667420	1					
ANR	2667462	AssignmentExpression	i = 0		2667420	2		=			
ANR	2667463	Identifier	i		2667420	0					
ANR	2667464	PrimaryExpression	0		2667420	1					
ANR	2667465	Condition	i < nfds	1283:15:31280:31285	2667420	1	True				
ANR	2667466	RelationalExpression	i < nfds		2667420	0		<			
ANR	2667467	Identifier	i		2667420	0					
ANR	2667468	Identifier	nfds		2667420	1					
ANR	2667469	PostIncDecOperationExpression	i ++	1283:23:31288:31290	2667420	2	True				
ANR	2667470	Identifier	i		2667420	0					
ANR	2667471	IncDec	++		2667420	1					
ANR	2667472	CompoundStatement		10:29:174:174	2667420	3					
ANR	2667473	IfStatement	if ( _condor_is_fd_local ( fds [ i ] . fd ) )		2667420	0					
ANR	2667474	Condition	_condor_is_fd_local ( fds [ i ] . fd )	1284:5:31301:31330	2667420	0	True				
ANR	2667475	CallExpression	_condor_is_fd_local ( fds [ i ] . fd )		2667420	0					
ANR	2667476	Callee	_condor_is_fd_local		2667420	0					
ANR	2667477	Identifier	_condor_is_fd_local		2667420	0					
ANR	2667478	ArgumentList	fds [ i ] . fd		2667420	1					
ANR	2667479	Argument	fds [ i ] . fd		2667420	0					
ANR	2667480	MemberAccess	fds [ i ] . fd		2667420	0					
ANR	2667481	ArrayIndexing	fds [ i ]		2667420	0					
ANR	2667482	Identifier	fds		2667420	0					
ANR	2667483	Identifier	i		2667420	1					
ANR	2667484	Identifier	fd		2667420	1					
ANR	2667485	CompoundStatement		11:37:213:213	2667420	1					
ANR	2667486	ExpressionStatement	realfds [ i ] . fd = _condor_get_unmapped_fd ( fds [ i ] . fd )	1285:3:31338:31388	2667420	0	True				
ANR	2667487	AssignmentExpression	realfds [ i ] . fd = _condor_get_unmapped_fd ( fds [ i ] . fd )		2667420	0		=			
ANR	2667488	MemberAccess	realfds [ i ] . fd		2667420	0					
ANR	2667489	ArrayIndexing	realfds [ i ]		2667420	0					
ANR	2667490	Identifier	realfds		2667420	0					
ANR	2667491	Identifier	i		2667420	1					
ANR	2667492	Identifier	fd		2667420	1					
ANR	2667493	CallExpression	_condor_get_unmapped_fd ( fds [ i ] . fd )		2667420	1					
ANR	2667494	Callee	_condor_get_unmapped_fd		2667420	0					
ANR	2667495	Identifier	_condor_get_unmapped_fd		2667420	0					
ANR	2667496	ArgumentList	fds [ i ] . fd		2667420	1					
ANR	2667497	Argument	fds [ i ] . fd		2667420	0					
ANR	2667498	MemberAccess	fds [ i ] . fd		2667420	0					
ANR	2667499	ArrayIndexing	fds [ i ]		2667420	0					
ANR	2667500	Identifier	fds		2667420	0					
ANR	2667501	Identifier	i		2667420	1					
ANR	2667502	Identifier	fd		2667420	1					
ANR	2667503	ExpressionStatement	realfds [ i ] . events = fds [ i ] . events	1286:3:31393:31426	2667420	1	True				
ANR	2667504	AssignmentExpression	realfds [ i ] . events = fds [ i ] . events		2667420	0		=			
ANR	2667505	MemberAccess	realfds [ i ] . events		2667420	0					
ANR	2667506	ArrayIndexing	realfds [ i ]		2667420	0					
ANR	2667507	Identifier	realfds		2667420	0					
ANR	2667508	Identifier	i		2667420	1					
ANR	2667509	Identifier	events		2667420	1					
ANR	2667510	MemberAccess	fds [ i ] . events		2667420	1					
ANR	2667511	ArrayIndexing	fds [ i ]		2667420	0					
ANR	2667512	Identifier	fds		2667420	0					
ANR	2667513	Identifier	i		2667420	1					
ANR	2667514	Identifier	events		2667420	1					
ANR	2667515	ElseStatement	else		2667420	0					
ANR	2667516	CompoundStatement		14:9:317:317	2667420	0					
ANR	2667517	ExpressionStatement	"_condor_warning ( CONDOR_WARNING_KIND_UNSUP , ""poll() is not supported for remote files"" )"	1288:3:31442:31527	2667420	0	True				
ANR	2667518	CallExpression	"_condor_warning ( CONDOR_WARNING_KIND_UNSUP , ""poll() is not supported for remote files"" )"		2667420	0					
ANR	2667519	Callee	_condor_warning		2667420	0					
ANR	2667520	Identifier	_condor_warning		2667420	0					
ANR	2667521	ArgumentList	CONDOR_WARNING_KIND_UNSUP		2667420	1					
ANR	2667522	Argument	CONDOR_WARNING_KIND_UNSUP		2667420	0					
ANR	2667523	Identifier	CONDOR_WARNING_KIND_UNSUP		2667420	0					
ANR	2667524	Argument	"""poll() is not supported for remote files"""		2667420	1					
ANR	2667525	PrimaryExpression	"""poll() is not supported for remote files"""		2667420	0					
ANR	2667526	ExpressionStatement	free ( realfds )	1289:3:31532:31545	2667420	1	True				
ANR	2667527	CallExpression	free ( realfds )		2667420	0					
ANR	2667528	Callee	free		2667420	0					
ANR	2667529	Identifier	free		2667420	0					
ANR	2667530	ArgumentList	realfds		2667420	1					
ANR	2667531	Argument	realfds		2667420	0					
ANR	2667532	Identifier	realfds		2667420	0					
ANR	2667533	ExpressionStatement	errno = EINVAL	1290:3:31550:31564	2667420	2	True				
ANR	2667534	AssignmentExpression	errno = EINVAL		2667420	0		=			
ANR	2667535	Identifier	errno		2667420	0					
ANR	2667536	Identifier	EINVAL		2667420	1					
ANR	2667537	ReturnStatement	return - 1 ;	1291:3:31569:31578	2667420	3	True				
ANR	2667538	UnaryOperationExpression	- 1		2667420	0					
ANR	2667539	UnaryOperator	-		2667420	0					
ANR	2667540	PrimaryExpression	1		2667420	1					
ANR	2667541	IdentifierDeclStatement	int scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED ) ;	1295:1:31589:31636	2667420	4	True				
ANR	2667542	IdentifierDecl	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2667420	0					
ANR	2667543	IdentifierDeclType	int		2667420	0					
ANR	2667544	Identifier	scm		2667420	1					
ANR	2667545	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2667420	2		=			
ANR	2667546	Identifier	scm		2667420	0					
ANR	2667547	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2667420	1					
ANR	2667548	Callee	SetSyscalls		2667420	0					
ANR	2667549	Identifier	SetSyscalls		2667420	0					
ANR	2667550	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		2667420	1					
ANR	2667551	Argument	SYS_LOCAL | SYS_UNMAPPED		2667420	0					
ANR	2667552	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		2667420	0		|			
ANR	2667553	Identifier	SYS_LOCAL		2667420	0					
ANR	2667554	Identifier	SYS_UNMAPPED		2667420	1					
ANR	2667555	Statement	int	1296:1:31639:31641	2667420	5	True				
ANR	2667556	Statement	result	1296:5:31643:31648	2667420	6	True				
ANR	2667557	Statement	=	1296:12:31650:31650	2667420	7	True				
ANR	2667558	Statement	::	1296:14:31652:31653	2667420	8	True				
ANR	2667559	ExpressionStatement	"poll ( realfds , nfds , timeout )"	1296:16:31654:31684	2667420	9	True				
ANR	2667560	CallExpression	"poll ( realfds , nfds , timeout )"		2667420	0					
ANR	2667561	Callee	poll		2667420	0					
ANR	2667562	Identifier	poll		2667420	0					
ANR	2667563	ArgumentList	realfds		2667420	1					
ANR	2667564	Argument	realfds		2667420	0					
ANR	2667565	Identifier	realfds		2667420	0					
ANR	2667566	Argument	nfds		2667420	1					
ANR	2667567	Identifier	nfds		2667420	0					
ANR	2667568	Argument	timeout		2667420	2					
ANR	2667569	Identifier	timeout		2667420	0					
ANR	2667570	ExpressionStatement	SetSyscalls ( scm )	1297:1:31687:31703	2667420	10	True				
ANR	2667571	CallExpression	SetSyscalls ( scm )		2667420	0					
ANR	2667572	Callee	SetSyscalls		2667420	0					
ANR	2667573	Identifier	SetSyscalls		2667420	0					
ANR	2667574	ArgumentList	scm		2667420	1					
ANR	2667575	Argument	scm		2667420	0					
ANR	2667576	Identifier	scm		2667420	0					
ANR	2667577	ForStatement	for ( int i = 0 ; i < nfds ; i ++ )		2667420	11					
ANR	2667578	ForInit	int i = 0 ;	1299:6:31712:31719	2667420	0	True				
ANR	2667579	IdentifierDeclStatement	int i = 0 ;		2667420	0					
ANR	2667580	IdentifierDecl	i = 0		2667420	0					
ANR	2667581	IdentifierDeclType	int		2667420	0					
ANR	2667582	Identifier	i		2667420	1					
ANR	2667583	AssignmentExpression	i = 0		2667420	2		=			
ANR	2667584	Identifier	i		2667420	0					
ANR	2667585	PrimaryExpression	0		2667420	1					
ANR	2667586	Condition	i < nfds	1299:15:31721:31726	2667420	1	True				
ANR	2667587	RelationalExpression	i < nfds		2667420	0		<			
ANR	2667588	Identifier	i		2667420	0					
ANR	2667589	Identifier	nfds		2667420	1					
ANR	2667590	PostIncDecOperationExpression	i ++	1299:23:31729:31731	2667420	2	True				
ANR	2667591	Identifier	i		2667420	0					
ANR	2667592	IncDec	++		2667420	1					
ANR	2667593	CompoundStatement		26:29:615:615	2667420	3					
ANR	2667594	ExpressionStatement	fds [ i ] . revents = realfds [ i ] . revents	1300:2:31739:31774	2667420	0	True				
ANR	2667595	AssignmentExpression	fds [ i ] . revents = realfds [ i ] . revents		2667420	0		=			
ANR	2667596	MemberAccess	fds [ i ] . revents		2667420	0					
ANR	2667597	ArrayIndexing	fds [ i ]		2667420	0					
ANR	2667598	Identifier	fds		2667420	0					
ANR	2667599	Identifier	i		2667420	1					
ANR	2667600	Identifier	revents		2667420	1					
ANR	2667601	MemberAccess	realfds [ i ] . revents		2667420	1					
ANR	2667602	ArrayIndexing	realfds [ i ]		2667420	0					
ANR	2667603	Identifier	realfds		2667420	0					
ANR	2667604	Identifier	i		2667420	1					
ANR	2667605	Identifier	revents		2667420	1					
ANR	2667606	ExpressionStatement	free ( realfds )	1303:1:31781:31794	2667420	12	True				
ANR	2667607	CallExpression	free ( realfds )		2667420	0					
ANR	2667608	Callee	free		2667420	0					
ANR	2667609	Identifier	free		2667420	0					
ANR	2667610	ArgumentList	realfds		2667420	1					
ANR	2667611	Argument	realfds		2667420	0					
ANR	2667612	Identifier	realfds		2667420	0					
ANR	2667613	ReturnStatement	return result ;	1305:1:31798:31811	2667420	13	True				
ANR	2667614	Identifier	result		2667420	0					
ANR	2667615	ReturnType	int		2667420	1					
ANR	2667616	Identifier	CondorFileTable :: poll		2667420	2					
ANR	2667617	ParameterList	"struct pollfd * fds , int nfds , int timeout"		2667420	3					
ANR	2667618	Parameter	struct pollfd * fds	1273:27:31075:31092	2667420	0	True				
ANR	2667619	ParameterType	struct pollfd *		2667420	0					
ANR	2667620	Identifier	fds		2667420	1					
ANR	2667621	Parameter	int nfds	1273:47:31095:31102	2667420	1	True				
ANR	2667622	ParameterType	int		2667420	0					
ANR	2667623	Identifier	nfds		2667420	1					
ANR	2667624	Parameter	int timeout	1273:57:31105:31115	2667420	2	True				
ANR	2667625	ParameterType	int		2667420	0					
ANR	2667626	Identifier	timeout		2667420	1					
ANR	2667627	CFGEntryNode	ENTRY		2667420		True				
ANR	2667628	CFGExitNode	EXIT		2667420		True				
ANR	2667629	Symbol	ENOMEM		2667420						
ANR	2667630	Symbol	SYS_UNMAPPED		2667420						
ANR	2667631	Symbol	_condor_get_unmapped_fd		2667420						
ANR	2667632	Symbol	timeout		2667420						
ANR	2667633	Symbol	result		2667420						
ANR	2667634	Symbol	SetSyscalls		2667420						
ANR	2667635	Symbol	scm		2667420						
ANR	2667636	Symbol	fds [ i ] . fd		2667420						
ANR	2667637	Symbol	* fds		2667420						
ANR	2667638	Symbol	realfds [ i ] . fd		2667420						
ANR	2667639	Symbol	malloc		2667420						
ANR	2667640	Symbol	errno		2667420						
ANR	2667641	Symbol	realfds [ i ] . events		2667420						
ANR	2667642	Symbol	* realfds		2667420						
ANR	2667643	Symbol	i		2667420						
ANR	2667644	Symbol	fds [ i ] . events		2667420						
ANR	2667645	Symbol	EINVAL		2667420						
ANR	2667646	Symbol	CONDOR_WARNING_KIND_UNSUP		2667420						
ANR	2667647	Symbol	* i		2667420						
ANR	2667648	Symbol	fds		2667420						
ANR	2667649	Symbol	nfds		2667420						
ANR	2667650	Symbol	SYS_LOCAL		2667420						
ANR	2667651	Symbol	fds [ i ] . revents		2667420						
ANR	2667652	Symbol	realfds [ i ] . revents		2667420						
ANR	2667653	Symbol	_condor_is_fd_local		2667420						
ANR	2667654	Symbol	realfds		2667420						
ANR	2667655	Function	CondorFileTable :: select	1312:0:31979:33511							
ANR	2667656	FunctionDef	"CondorFileTable :: select (int n , fd_set * r , fd_set * w , fd_set * e , struct timeval * timeout)"		2667655	0					
ANR	2667657	CompoundStatement		1313:0:32074:33511	2667655	0					
ANR	2667658	IdentifierDeclStatement	"fd_set r_real , w_real , e_real ;"	1314:1:32077:32106	2667655	0	True				
ANR	2667659	IdentifierDecl	r_real		2667655	0					
ANR	2667660	IdentifierDeclType	fd_set		2667655	0					
ANR	2667661	Identifier	r_real		2667655	1					
ANR	2667662	IdentifierDecl	w_real		2667655	1					
ANR	2667663	IdentifierDeclType	fd_set		2667655	0					
ANR	2667664	Identifier	w_real		2667655	1					
ANR	2667665	IdentifierDecl	e_real		2667655	2					
ANR	2667666	IdentifierDeclType	fd_set		2667655	0					
ANR	2667667	Identifier	e_real		2667655	1					
ANR	2667668	IdentifierDeclStatement	"int n_real , fd , fd_real ;"	1315:1:32109:32132	2667655	1	True				
ANR	2667669	IdentifierDecl	n_real		2667655	0					
ANR	2667670	IdentifierDeclType	int		2667655	0					
ANR	2667671	Identifier	n_real		2667655	1					
ANR	2667672	IdentifierDecl	fd		2667655	1					
ANR	2667673	IdentifierDeclType	int		2667655	0					
ANR	2667674	Identifier	fd		2667655	1					
ANR	2667675	IdentifierDecl	fd_real		2667655	2					
ANR	2667676	IdentifierDeclType	int		2667655	0					
ANR	2667677	Identifier	fd_real		2667655	1					
ANR	2667678	IdentifierDeclStatement	"int result , scm ;"	1316:1:32135:32150	2667655	2	True				
ANR	2667679	IdentifierDecl	result		2667655	0					
ANR	2667680	IdentifierDeclType	int		2667655	0					
ANR	2667681	Identifier	result		2667655	1					
ANR	2667682	IdentifierDecl	scm		2667655	1					
ANR	2667683	IdentifierDeclType	int		2667655	0					
ANR	2667684	Identifier	scm		2667655	1					
ANR	2667685	ExpressionStatement	FD_ZERO ( & r_real )	1318:1:32154:32172	2667655	3	True				
ANR	2667686	CallExpression	FD_ZERO ( & r_real )		2667655	0					
ANR	2667687	Callee	FD_ZERO		2667655	0					
ANR	2667688	Identifier	FD_ZERO		2667655	0					
ANR	2667689	ArgumentList	& r_real		2667655	1					
ANR	2667690	Argument	& r_real		2667655	0					
ANR	2667691	UnaryOperationExpression	& r_real		2667655	0					
ANR	2667692	UnaryOperator	&		2667655	0					
ANR	2667693	Identifier	r_real		2667655	1					
ANR	2667694	ExpressionStatement	FD_ZERO ( & w_real )	1319:1:32175:32193	2667655	4	True				
ANR	2667695	CallExpression	FD_ZERO ( & w_real )		2667655	0					
ANR	2667696	Callee	FD_ZERO		2667655	0					
ANR	2667697	Identifier	FD_ZERO		2667655	0					
ANR	2667698	ArgumentList	& w_real		2667655	1					
ANR	2667699	Argument	& w_real		2667655	0					
ANR	2667700	UnaryOperationExpression	& w_real		2667655	0					
ANR	2667701	UnaryOperator	&		2667655	0					
ANR	2667702	Identifier	w_real		2667655	1					
ANR	2667703	ExpressionStatement	FD_ZERO ( & e_real )	1320:1:32196:32214	2667655	5	True				
ANR	2667704	CallExpression	FD_ZERO ( & e_real )		2667655	0					
ANR	2667705	Callee	FD_ZERO		2667655	0					
ANR	2667706	Identifier	FD_ZERO		2667655	0					
ANR	2667707	ArgumentList	& e_real		2667655	1					
ANR	2667708	Argument	& e_real		2667655	0					
ANR	2667709	UnaryOperationExpression	& e_real		2667655	0					
ANR	2667710	UnaryOperator	&		2667655	0					
ANR	2667711	Identifier	e_real		2667655	1					
ANR	2667712	ExpressionStatement	n_real = 0	1322:1:32218:32228	2667655	6	True				
ANR	2667713	AssignmentExpression	n_real = 0		2667655	0		=			
ANR	2667714	Identifier	n_real		2667655	0					
ANR	2667715	PrimaryExpression	0		2667655	1					
ANR	2667716	ForStatement	for ( fd = 0 ; fd < n ; fd ++ )		2667655	7					
ANR	2667717	ForInit	fd = 0 ;	1326:6:32307:32311	2667655	0	True				
ANR	2667718	AssignmentExpression	fd = 0		2667655	0		=			
ANR	2667719	Identifier	fd		2667655	0					
ANR	2667720	PrimaryExpression	0		2667655	1					
ANR	2667721	Condition	fd < n	1326:12:32313:32316	2667655	1	True				
ANR	2667722	RelationalExpression	fd < n		2667655	0		<			
ANR	2667723	Identifier	fd		2667655	0					
ANR	2667724	Identifier	n		2667655	1					
ANR	2667725	PostIncDecOperationExpression	fd ++	1326:18:32319:32322	2667655	2	True				
ANR	2667726	Identifier	fd		2667655	0					
ANR	2667727	IncDec	++		2667655	1					
ANR	2667728	CompoundStatement		14:25:251:251	2667655	3					
ANR	2667729	ExpressionStatement	fd_real = _condor_get_unmapped_fd ( fd )	1327:2:32330:32367	2667655	0	True				
ANR	2667730	AssignmentExpression	fd_real = _condor_get_unmapped_fd ( fd )		2667655	0		=			
ANR	2667731	Identifier	fd_real		2667655	0					
ANR	2667732	CallExpression	_condor_get_unmapped_fd ( fd )		2667655	1					
ANR	2667733	Callee	_condor_get_unmapped_fd		2667655	0					
ANR	2667734	Identifier	_condor_get_unmapped_fd		2667655	0					
ANR	2667735	ArgumentList	fd		2667655	1					
ANR	2667736	Argument	fd		2667655	0					
ANR	2667737	Identifier	fd		2667655	0					
ANR	2667738	IfStatement	if ( fd_real >= 0 )		2667655	1					
ANR	2667739	Condition	fd_real >= 0	1328:6:32375:32384	2667655	0	True				
ANR	2667740	RelationalExpression	fd_real >= 0		2667655	0		>=			
ANR	2667741	Identifier	fd_real		2667655	0					
ANR	2667742	PrimaryExpression	0		2667655	1					
ANR	2667743	CompoundStatement		16:19:313:313	2667655	1					
ANR	2667744	IfStatement	if ( _condor_is_fd_local ( fd ) )		2667655	0					
ANR	2667745	Condition	_condor_is_fd_local ( fd )	1329:7:32397:32419	2667655	0	True				
ANR	2667746	CallExpression	_condor_is_fd_local ( fd )		2667655	0					
ANR	2667747	Callee	_condor_is_fd_local		2667655	0					
ANR	2667748	Identifier	_condor_is_fd_local		2667655	0					
ANR	2667749	ArgumentList	fd		2667655	1					
ANR	2667750	Argument	fd		2667655	0					
ANR	2667751	Identifier	fd		2667655	0					
ANR	2667752	CompoundStatement		17:33:348:348	2667655	1					
ANR	2667753	IfStatement	"if ( r && FD_ISSET ( fd , r ) )"		2667655	0					
ANR	2667754	Condition	"r && FD_ISSET ( fd , r )"	1330:8:32433:32451	2667655	0	True				
ANR	2667755	AndExpression	"r && FD_ISSET ( fd , r )"		2667655	0		&&			
ANR	2667756	Identifier	r		2667655	0					
ANR	2667757	CallExpression	"FD_ISSET ( fd , r )"		2667655	1					
ANR	2667758	Callee	FD_ISSET		2667655	0					
ANR	2667759	Identifier	FD_ISSET		2667655	0					
ANR	2667760	ArgumentList	fd		2667655	1					
ANR	2667761	Argument	fd		2667655	0					
ANR	2667762	Identifier	fd		2667655	0					
ANR	2667763	Argument	r		2667655	1					
ANR	2667764	Identifier	r		2667655	0					
ANR	2667765	ExpressionStatement	"FD_SET ( fd_real , & r_real )"	1331:5:32460:32483	2667655	1	True				
ANR	2667766	CallExpression	"FD_SET ( fd_real , & r_real )"		2667655	0					
ANR	2667767	Callee	FD_SET		2667655	0					
ANR	2667768	Identifier	FD_SET		2667655	0					
ANR	2667769	ArgumentList	fd_real		2667655	1					
ANR	2667770	Argument	fd_real		2667655	0					
ANR	2667771	Identifier	fd_real		2667655	0					
ANR	2667772	Argument	& r_real		2667655	1					
ANR	2667773	UnaryOperationExpression	& r_real		2667655	0					
ANR	2667774	UnaryOperator	&		2667655	0					
ANR	2667775	Identifier	r_real		2667655	1					
ANR	2667776	IfStatement	"if ( w && FD_ISSET ( fd , w ) )"		2667655	1					
ANR	2667777	Condition	"w && FD_ISSET ( fd , w )"	1332:8:32493:32511	2667655	0	True				
ANR	2667778	AndExpression	"w && FD_ISSET ( fd , w )"		2667655	0		&&			
ANR	2667779	Identifier	w		2667655	0					
ANR	2667780	CallExpression	"FD_ISSET ( fd , w )"		2667655	1					
ANR	2667781	Callee	FD_ISSET		2667655	0					
ANR	2667782	Identifier	FD_ISSET		2667655	0					
ANR	2667783	ArgumentList	fd		2667655	1					
ANR	2667784	Argument	fd		2667655	0					
ANR	2667785	Identifier	fd		2667655	0					
ANR	2667786	Argument	w		2667655	1					
ANR	2667787	Identifier	w		2667655	0					
ANR	2667788	ExpressionStatement	"FD_SET ( fd_real , & w_real )"	1333:5:32520:32543	2667655	1	True				
ANR	2667789	CallExpression	"FD_SET ( fd_real , & w_real )"		2667655	0					
ANR	2667790	Callee	FD_SET		2667655	0					
ANR	2667791	Identifier	FD_SET		2667655	0					
ANR	2667792	ArgumentList	fd_real		2667655	1					
ANR	2667793	Argument	fd_real		2667655	0					
ANR	2667794	Identifier	fd_real		2667655	0					
ANR	2667795	Argument	& w_real		2667655	1					
ANR	2667796	UnaryOperationExpression	& w_real		2667655	0					
ANR	2667797	UnaryOperator	&		2667655	0					
ANR	2667798	Identifier	w_real		2667655	1					
ANR	2667799	IfStatement	"if ( e && FD_ISSET ( fd , e ) )"		2667655	2					
ANR	2667800	Condition	"e && FD_ISSET ( fd , e )"	1334:8:32553:32571	2667655	0	True				
ANR	2667801	AndExpression	"e && FD_ISSET ( fd , e )"		2667655	0		&&			
ANR	2667802	Identifier	e		2667655	0					
ANR	2667803	CallExpression	"FD_ISSET ( fd , e )"		2667655	1					
ANR	2667804	Callee	FD_ISSET		2667655	0					
ANR	2667805	Identifier	FD_ISSET		2667655	0					
ANR	2667806	ArgumentList	fd		2667655	1					
ANR	2667807	Argument	fd		2667655	0					
ANR	2667808	Identifier	fd		2667655	0					
ANR	2667809	Argument	e		2667655	1					
ANR	2667810	Identifier	e		2667655	0					
ANR	2667811	ExpressionStatement	"FD_SET ( fd_real , & e_real )"	1335:5:32580:32603	2667655	1	True				
ANR	2667812	CallExpression	"FD_SET ( fd_real , & e_real )"		2667655	0					
ANR	2667813	Callee	FD_SET		2667655	0					
ANR	2667814	Identifier	FD_SET		2667655	0					
ANR	2667815	ArgumentList	fd_real		2667655	1					
ANR	2667816	Argument	fd_real		2667655	0					
ANR	2667817	Identifier	fd_real		2667655	0					
ANR	2667818	Argument	& e_real		2667655	1					
ANR	2667819	UnaryOperationExpression	& e_real		2667655	0					
ANR	2667820	UnaryOperator	&		2667655	0					
ANR	2667821	Identifier	e_real		2667655	1					
ANR	2667822	ExpressionStatement	"n_real = MAX ( n_real , fd_real + 1 )"	1336:4:32609:32642	2667655	3	True				
ANR	2667823	AssignmentExpression	"n_real = MAX ( n_real , fd_real + 1 )"		2667655	0		=			
ANR	2667824	Identifier	n_real		2667655	0					
ANR	2667825	CallExpression	"MAX ( n_real , fd_real + 1 )"		2667655	1					
ANR	2667826	Callee	MAX		2667655	0					
ANR	2667827	Identifier	MAX		2667655	0					
ANR	2667828	ArgumentList	n_real		2667655	1					
ANR	2667829	Argument	n_real		2667655	0					
ANR	2667830	Identifier	n_real		2667655	0					
ANR	2667831	Argument	fd_real + 1		2667655	1					
ANR	2667832	AdditiveExpression	fd_real + 1		2667655	0		+			
ANR	2667833	Identifier	fd_real		2667655	0					
ANR	2667834	PrimaryExpression	1		2667655	1					
ANR	2667835	ElseStatement	else		2667655	0					
ANR	2667836	CompoundStatement		25:10:579:579	2667655	0					
ANR	2667837	IfStatement	"if ( ( r && FD_ISSET ( fd , r ) ) || ( w && FD_ISSET ( fd , w ) ) || ( e && FD_ISSET ( fd , e ) ) )"		2667655	0					
ANR	2667838	Condition	"( r && FD_ISSET ( fd , r ) ) || ( w && FD_ISSET ( fd , w ) ) || ( e && FD_ISSET ( fd , e ) )"	1338:8:32664:32750	2667655	0	True				
ANR	2667839	OrExpression	"( r && FD_ISSET ( fd , r ) ) || ( w && FD_ISSET ( fd , w ) ) || ( e && FD_ISSET ( fd , e ) )"		2667655	0		||			
ANR	2667840	AndExpression	"r && FD_ISSET ( fd , r )"		2667655	0		&&			
ANR	2667841	Identifier	r		2667655	0					
ANR	2667842	CallExpression	"FD_ISSET ( fd , r )"		2667655	1					
ANR	2667843	Callee	FD_ISSET		2667655	0					
ANR	2667844	Identifier	FD_ISSET		2667655	0					
ANR	2667845	ArgumentList	fd		2667655	1					
ANR	2667846	Argument	fd		2667655	0					
ANR	2667847	Identifier	fd		2667655	0					
ANR	2667848	Argument	r		2667655	1					
ANR	2667849	Identifier	r		2667655	0					
ANR	2667850	OrExpression	"( w && FD_ISSET ( fd , w ) ) || ( e && FD_ISSET ( fd , e ) )"		2667655	1		||			
ANR	2667851	AndExpression	"w && FD_ISSET ( fd , w )"		2667655	0		&&			
ANR	2667852	Identifier	w		2667655	0					
ANR	2667853	CallExpression	"FD_ISSET ( fd , w )"		2667655	1					
ANR	2667854	Callee	FD_ISSET		2667655	0					
ANR	2667855	Identifier	FD_ISSET		2667655	0					
ANR	2667856	ArgumentList	fd		2667655	1					
ANR	2667857	Argument	fd		2667655	0					
ANR	2667858	Identifier	fd		2667655	0					
ANR	2667859	Argument	w		2667655	1					
ANR	2667860	Identifier	w		2667655	0					
ANR	2667861	AndExpression	"e && FD_ISSET ( fd , e )"		2667655	1		&&			
ANR	2667862	Identifier	e		2667655	0					
ANR	2667863	CallExpression	"FD_ISSET ( fd , e )"		2667655	1					
ANR	2667864	Callee	FD_ISSET		2667655	0					
ANR	2667865	Identifier	FD_ISSET		2667655	0					
ANR	2667866	ArgumentList	fd		2667655	1					
ANR	2667867	Argument	fd		2667655	0					
ANR	2667868	Identifier	fd		2667655	0					
ANR	2667869	Argument	e		2667655	1					
ANR	2667870	Identifier	e		2667655	0					
ANR	2667871	CompoundStatement		28:32:679:679	2667655	1					
ANR	2667872	ExpressionStatement	"_condor_warning ( CONDOR_WARNING_KIND_UNSUP , ""select() is not supported for remote files."" )"	1341:5:32761:32849	2667655	0	True				
ANR	2667873	CallExpression	"_condor_warning ( CONDOR_WARNING_KIND_UNSUP , ""select() is not supported for remote files."" )"		2667655	0					
ANR	2667874	Callee	_condor_warning		2667655	0					
ANR	2667875	Identifier	_condor_warning		2667655	0					
ANR	2667876	ArgumentList	CONDOR_WARNING_KIND_UNSUP		2667655	1					
ANR	2667877	Argument	CONDOR_WARNING_KIND_UNSUP		2667655	0					
ANR	2667878	Identifier	CONDOR_WARNING_KIND_UNSUP		2667655	0					
ANR	2667879	Argument	"""select() is not supported for remote files."""		2667655	1					
ANR	2667880	PrimaryExpression	"""select() is not supported for remote files."""		2667655	0					
ANR	2667881	ExpressionStatement	errno = EINVAL	1342:5:32856:32870	2667655	1	True				
ANR	2667882	AssignmentExpression	errno = EINVAL		2667655	0		=			
ANR	2667883	Identifier	errno		2667655	0					
ANR	2667884	Identifier	EINVAL		2667655	1					
ANR	2667885	ReturnStatement	return - 1 ;	1343:5:32877:32886	2667655	2	True				
ANR	2667886	UnaryOperationExpression	- 1		2667655	0					
ANR	2667887	UnaryOperator	-		2667655	0					
ANR	2667888	PrimaryExpression	1		2667655	1					
ANR	2667889	ExpressionStatement	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )	1351:1:32934:32977	2667655	8	True				
ANR	2667890	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2667655	0		=			
ANR	2667891	Identifier	scm		2667655	0					
ANR	2667892	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2667655	1					
ANR	2667893	Callee	SetSyscalls		2667655	0					
ANR	2667894	Identifier	SetSyscalls		2667655	0					
ANR	2667895	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		2667655	1					
ANR	2667896	Argument	SYS_LOCAL | SYS_UNMAPPED		2667655	0					
ANR	2667897	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		2667655	0		|			
ANR	2667898	Identifier	SYS_LOCAL		2667655	0					
ANR	2667899	Identifier	SYS_UNMAPPED		2667655	1					
ANR	2667900	Statement	result	1352:1:32980:32985	2667655	9	True				
ANR	2667901	Statement	=	1352:8:32987:32987	2667655	10	True				
ANR	2667902	Statement	::	1352:10:32989:32990	2667655	11	True				
ANR	2667903	ExpressionStatement	"select ( n_real , & r_real , & w_real , & e_real , timeout )"	1352:12:32991:33043	2667655	12	True				
ANR	2667904	CallExpression	"select ( n_real , & r_real , & w_real , & e_real , timeout )"		2667655	0					
ANR	2667905	Callee	select		2667655	0					
ANR	2667906	Identifier	select		2667655	0					
ANR	2667907	ArgumentList	n_real		2667655	1					
ANR	2667908	Argument	n_real		2667655	0					
ANR	2667909	Identifier	n_real		2667655	0					
ANR	2667910	Argument	& r_real		2667655	1					
ANR	2667911	UnaryOperationExpression	& r_real		2667655	0					
ANR	2667912	UnaryOperator	&		2667655	0					
ANR	2667913	Identifier	r_real		2667655	1					
ANR	2667914	Argument	& w_real		2667655	2					
ANR	2667915	UnaryOperationExpression	& w_real		2667655	0					
ANR	2667916	UnaryOperator	&		2667655	0					
ANR	2667917	Identifier	w_real		2667655	1					
ANR	2667918	Argument	& e_real		2667655	3					
ANR	2667919	UnaryOperationExpression	& e_real		2667655	0					
ANR	2667920	UnaryOperator	&		2667655	0					
ANR	2667921	Identifier	e_real		2667655	1					
ANR	2667922	Argument	timeout		2667655	4					
ANR	2667923	Identifier	timeout		2667655	0					
ANR	2667924	ExpressionStatement	SetSyscalls ( scm )	1353:1:33046:33062	2667655	13	True				
ANR	2667925	CallExpression	SetSyscalls ( scm )		2667655	0					
ANR	2667926	Callee	SetSyscalls		2667655	0					
ANR	2667927	Identifier	SetSyscalls		2667655	0					
ANR	2667928	ArgumentList	scm		2667655	1					
ANR	2667929	Argument	scm		2667655	0					
ANR	2667930	Identifier	scm		2667655	0					
ANR	2667931	IfStatement	if ( r )		2667655	14					
ANR	2667932	Condition	r	1355:5:33070:33070	2667655	0	True				
ANR	2667933	Identifier	r		2667655	0					
ANR	2667934	ExpressionStatement	FD_ZERO ( r )	1355:9:33074:33086	2667655	1	True				
ANR	2667935	CallExpression	FD_ZERO ( r )		2667655	0					
ANR	2667936	Callee	FD_ZERO		2667655	0					
ANR	2667937	Identifier	FD_ZERO		2667655	0					
ANR	2667938	ArgumentList	r		2667655	1					
ANR	2667939	Argument	r		2667655	0					
ANR	2667940	Identifier	r		2667655	0					
ANR	2667941	IfStatement	if ( w )		2667655	15					
ANR	2667942	Condition	w	1356:5:33093:33093	2667655	0	True				
ANR	2667943	Identifier	w		2667655	0					
ANR	2667944	ExpressionStatement	FD_ZERO ( w )	1356:9:33097:33109	2667655	1	True				
ANR	2667945	CallExpression	FD_ZERO ( w )		2667655	0					
ANR	2667946	Callee	FD_ZERO		2667655	0					
ANR	2667947	Identifier	FD_ZERO		2667655	0					
ANR	2667948	ArgumentList	w		2667655	1					
ANR	2667949	Argument	w		2667655	0					
ANR	2667950	Identifier	w		2667655	0					
ANR	2667951	IfStatement	if ( e )		2667655	16					
ANR	2667952	Condition	e	1357:5:33116:33116	2667655	0	True				
ANR	2667953	Identifier	e		2667655	0					
ANR	2667954	ExpressionStatement	FD_ZERO ( e )	1357:9:33120:33132	2667655	1	True				
ANR	2667955	CallExpression	FD_ZERO ( e )		2667655	0					
ANR	2667956	Callee	FD_ZERO		2667655	0					
ANR	2667957	Identifier	FD_ZERO		2667655	0					
ANR	2667958	ArgumentList	e		2667655	1					
ANR	2667959	Argument	e		2667655	0					
ANR	2667960	Identifier	e		2667655	0					
ANR	2667961	ForStatement	for ( fd = 0 ; fd < n ; fd ++ )		2667655	17					
ANR	2667962	ForInit	fd = 0 ;	1361:6:33203:33207	2667655	0	True				
ANR	2667963	AssignmentExpression	fd = 0		2667655	0		=			
ANR	2667964	Identifier	fd		2667655	0					
ANR	2667965	PrimaryExpression	0		2667655	1					
ANR	2667966	Condition	fd < n	1361:12:33209:33212	2667655	1	True				
ANR	2667967	RelationalExpression	fd < n		2667655	0		<			
ANR	2667968	Identifier	fd		2667655	0					
ANR	2667969	Identifier	n		2667655	1					
ANR	2667970	PostIncDecOperationExpression	fd ++	1361:18:33215:33218	2667655	2	True				
ANR	2667971	Identifier	fd		2667655	0					
ANR	2667972	IncDec	++		2667655	1					
ANR	2667973	CompoundStatement		49:25:1147:1147	2667655	3					
ANR	2667974	ExpressionStatement	fd_real = _condor_get_unmapped_fd ( fd )	1362:2:33226:33263	2667655	0	True				
ANR	2667975	AssignmentExpression	fd_real = _condor_get_unmapped_fd ( fd )		2667655	0		=			
ANR	2667976	Identifier	fd_real		2667655	0					
ANR	2667977	CallExpression	_condor_get_unmapped_fd ( fd )		2667655	1					
ANR	2667978	Callee	_condor_get_unmapped_fd		2667655	0					
ANR	2667979	Identifier	_condor_get_unmapped_fd		2667655	0					
ANR	2667980	ArgumentList	fd		2667655	1					
ANR	2667981	Argument	fd		2667655	0					
ANR	2667982	Identifier	fd		2667655	0					
ANR	2667983	IfStatement	if ( fd_real >= 0 && _condor_is_fd_local ( fd ) )		2667655	1					
ANR	2667984	Condition	fd_real >= 0 && _condor_is_fd_local ( fd )	1363:6:33271:33307	2667655	0	True				
ANR	2667985	AndExpression	fd_real >= 0 && _condor_is_fd_local ( fd )		2667655	0		&&			
ANR	2667986	RelationalExpression	fd_real >= 0		2667655	0		>=			
ANR	2667987	Identifier	fd_real		2667655	0					
ANR	2667988	PrimaryExpression	0		2667655	1					
ANR	2667989	CallExpression	_condor_is_fd_local ( fd )		2667655	1					
ANR	2667990	Callee	_condor_is_fd_local		2667655	0					
ANR	2667991	Identifier	_condor_is_fd_local		2667655	0					
ANR	2667992	ArgumentList	fd		2667655	1					
ANR	2667993	Argument	fd		2667655	0					
ANR	2667994	Identifier	fd		2667655	0					
ANR	2667995	CompoundStatement		51:46:1236:1236	2667655	1					
ANR	2667996	IfStatement	"if ( r && FD_ISSET ( fd_real , & r_real ) )"		2667655	0					
ANR	2667997	Condition	"r && FD_ISSET ( fd_real , & r_real )"	1364:7:33320:33349	2667655	0	True				
ANR	2667998	AndExpression	"r && FD_ISSET ( fd_real , & r_real )"		2667655	0		&&			
ANR	2667999	Identifier	r		2667655	0					
ANR	2668000	CallExpression	"FD_ISSET ( fd_real , & r_real )"		2667655	1					
ANR	2668001	Callee	FD_ISSET		2667655	0					
ANR	2668002	Identifier	FD_ISSET		2667655	0					
ANR	2668003	ArgumentList	fd_real		2667655	1					
ANR	2668004	Argument	fd_real		2667655	0					
ANR	2668005	Identifier	fd_real		2667655	0					
ANR	2668006	Argument	& r_real		2667655	1					
ANR	2668007	UnaryOperationExpression	& r_real		2667655	0					
ANR	2668008	UnaryOperator	&		2667655	0					
ANR	2668009	Identifier	r_real		2667655	1					
ANR	2668010	ExpressionStatement	"FD_SET ( fd , r )"	1365:4:33357:33369	2667655	1	True				
ANR	2668011	CallExpression	"FD_SET ( fd , r )"		2667655	0					
ANR	2668012	Callee	FD_SET		2667655	0					
ANR	2668013	Identifier	FD_SET		2667655	0					
ANR	2668014	ArgumentList	fd		2667655	1					
ANR	2668015	Argument	fd		2667655	0					
ANR	2668016	Identifier	fd		2667655	0					
ANR	2668017	Argument	r		2667655	1					
ANR	2668018	Identifier	r		2667655	0					
ANR	2668019	IfStatement	"if ( w && FD_ISSET ( fd_real , & w_real ) )"		2667655	1					
ANR	2668020	Condition	"w && FD_ISSET ( fd_real , & w_real )"	1366:7:33378:33407	2667655	0	True				
ANR	2668021	AndExpression	"w && FD_ISSET ( fd_real , & w_real )"		2667655	0		&&			
ANR	2668022	Identifier	w		2667655	0					
ANR	2668023	CallExpression	"FD_ISSET ( fd_real , & w_real )"		2667655	1					
ANR	2668024	Callee	FD_ISSET		2667655	0					
ANR	2668025	Identifier	FD_ISSET		2667655	0					
ANR	2668026	ArgumentList	fd_real		2667655	1					
ANR	2668027	Argument	fd_real		2667655	0					
ANR	2668028	Identifier	fd_real		2667655	0					
ANR	2668029	Argument	& w_real		2667655	1					
ANR	2668030	UnaryOperationExpression	& w_real		2667655	0					
ANR	2668031	UnaryOperator	&		2667655	0					
ANR	2668032	Identifier	w_real		2667655	1					
ANR	2668033	ExpressionStatement	"FD_SET ( fd , w )"	1367:4:33415:33427	2667655	1	True				
ANR	2668034	CallExpression	"FD_SET ( fd , w )"		2667655	0					
ANR	2668035	Callee	FD_SET		2667655	0					
ANR	2668036	Identifier	FD_SET		2667655	0					
ANR	2668037	ArgumentList	fd		2667655	1					
ANR	2668038	Argument	fd		2667655	0					
ANR	2668039	Identifier	fd		2667655	0					
ANR	2668040	Argument	w		2667655	1					
ANR	2668041	Identifier	w		2667655	0					
ANR	2668042	IfStatement	"if ( e && FD_ISSET ( fd_real , & e_real ) )"		2667655	2					
ANR	2668043	Condition	"e && FD_ISSET ( fd_real , & e_real )"	1368:7:33436:33465	2667655	0	True				
ANR	2668044	AndExpression	"e && FD_ISSET ( fd_real , & e_real )"		2667655	0		&&			
ANR	2668045	Identifier	e		2667655	0					
ANR	2668046	CallExpression	"FD_ISSET ( fd_real , & e_real )"		2667655	1					
ANR	2668047	Callee	FD_ISSET		2667655	0					
ANR	2668048	Identifier	FD_ISSET		2667655	0					
ANR	2668049	ArgumentList	fd_real		2667655	1					
ANR	2668050	Argument	fd_real		2667655	0					
ANR	2668051	Identifier	fd_real		2667655	0					
ANR	2668052	Argument	& e_real		2667655	1					
ANR	2668053	UnaryOperationExpression	& e_real		2667655	0					
ANR	2668054	UnaryOperator	&		2667655	0					
ANR	2668055	Identifier	e_real		2667655	1					
ANR	2668056	ExpressionStatement	"FD_SET ( fd , e )"	1369:4:33473:33485	2667655	1	True				
ANR	2668057	CallExpression	"FD_SET ( fd , e )"		2667655	0					
ANR	2668058	Callee	FD_SET		2667655	0					
ANR	2668059	Identifier	FD_SET		2667655	0					
ANR	2668060	ArgumentList	fd		2667655	1					
ANR	2668061	Argument	fd		2667655	0					
ANR	2668062	Identifier	fd		2667655	0					
ANR	2668063	Argument	e		2667655	1					
ANR	2668064	Identifier	e		2667655	0					
ANR	2668065	ReturnStatement	return result ;	1373:1:33496:33509	2667655	18	True				
ANR	2668066	Identifier	result		2667655	0					
ANR	2668067	ReturnType	int		2667655	1					
ANR	2668068	Identifier	CondorFileTable :: select		2667655	2					
ANR	2668069	ParameterList	"int n , fd_set * r , fd_set * w , fd_set * e , struct timeval * timeout"		2667655	3					
ANR	2668070	Parameter	int n	1312:29:32008:32012	2667655	0	True				
ANR	2668071	ParameterType	int		2667655	0					
ANR	2668072	Identifier	n		2667655	1					
ANR	2668073	Parameter	fd_set * r	1312:36:32015:32023	2667655	1	True				
ANR	2668074	ParameterType	fd_set *		2667655	0					
ANR	2668075	Identifier	r		2667655	1					
ANR	2668076	Parameter	fd_set * w	1312:47:32026:32034	2667655	2	True				
ANR	2668077	ParameterType	fd_set *		2667655	0					
ANR	2668078	Identifier	w		2667655	1					
ANR	2668079	Parameter	fd_set * e	1312:58:32037:32045	2667655	3	True				
ANR	2668080	ParameterType	fd_set *		2667655	0					
ANR	2668081	Identifier	e		2667655	1					
ANR	2668082	Parameter	struct timeval * timeout	1312:69:32048:32070	2667655	4	True				
ANR	2668083	ParameterType	struct timeval *		2667655	0					
ANR	2668084	Identifier	timeout		2667655	1					
ANR	2668085	CFGEntryNode	ENTRY		2667655		True				
ANR	2668086	CFGExitNode	EXIT		2667655		True				
ANR	2668087	Symbol	MAX		2667655						
ANR	2668088	Symbol	SYS_UNMAPPED		2667655						
ANR	2668089	Symbol	_condor_get_unmapped_fd		2667655						
ANR	2668090	Symbol	timeout		2667655						
ANR	2668091	Symbol	& e_real		2667655						
ANR	2668092	Symbol	result		2667655						
ANR	2668093	Symbol	& w_real		2667655						
ANR	2668094	Symbol	FD_ISSET		2667655						
ANR	2668095	Symbol	SetSyscalls		2667655						
ANR	2668096	Symbol	scm		2667655						
ANR	2668097	Symbol	errno		2667655						
ANR	2668098	Symbol	e		2667655						
ANR	2668099	Symbol	w_real		2667655						
ANR	2668100	Symbol	& r_real		2667655						
ANR	2668101	Symbol	n_real		2667655						
ANR	2668102	Symbol	n		2667655						
ANR	2668103	Symbol	fd_real		2667655						
ANR	2668104	Symbol	EINVAL		2667655						
ANR	2668105	Symbol	e_real		2667655						
ANR	2668106	Symbol	CONDOR_WARNING_KIND_UNSUP		2667655						
ANR	2668107	Symbol	r		2667655						
ANR	2668108	Symbol	r_real		2667655						
ANR	2668109	Symbol	w		2667655						
ANR	2668110	Symbol	SYS_LOCAL		2667655						
ANR	2668111	Symbol	_condor_is_fd_local		2667655						
ANR	2668112	Symbol	fd		2667655						
ANR	2668113	Function	CondorFileTable :: checkpoint	1380:0:33975:34659							
ANR	2668114	FunctionDef	CondorFileTable :: checkpoint ()		2668113	0					
ANR	2668115	CompoundStatement		1381:0:34010:34659	2668113	0					
ANR	2668116	IdentifierDeclStatement	int temp ;	1382:1:34013:34021	2668113	0	True				
ANR	2668117	IdentifierDecl	temp		2668113	0					
ANR	2668118	IdentifierDeclType	int		2668113	0					
ANR	2668119	Identifier	temp		2668113	1					
ANR	2668120	ExpressionStatement	"dprintf ( D_ALWAYS , ""CondorFileTable::checkpoint\\n"" )"	1384:1:34025:34074	2668113	1	True				
ANR	2668121	CallExpression	"dprintf ( D_ALWAYS , ""CondorFileTable::checkpoint\\n"" )"		2668113	0					
ANR	2668122	Callee	dprintf		2668113	0					
ANR	2668123	Identifier	dprintf		2668113	0					
ANR	2668124	ArgumentList	D_ALWAYS		2668113	1					
ANR	2668125	Argument	D_ALWAYS		2668113	0					
ANR	2668126	Identifier	D_ALWAYS		2668113	0					
ANR	2668127	Argument	"""CondorFileTable::checkpoint\\n"""		2668113	1					
ANR	2668128	PrimaryExpression	"""CondorFileTable::checkpoint\\n"""		2668113	0					
ANR	2668129	ExpressionStatement	dump ( )	1386:1:34078:34084	2668113	2	True				
ANR	2668130	CallExpression	dump ( )		2668113	0					
ANR	2668131	Callee	dump		2668113	0					
ANR	2668132	Identifier	dump		2668113	0					
ANR	2668133	ArgumentList			2668113	1					
ANR	2668134	IfStatement	if ( MyImage . GetMode ( ) != STANDALONE )		2668113	3					
ANR	2668135	Condition	MyImage . GetMode ( ) != STANDALONE	1388:5:34092:34122	2668113	0	True				
ANR	2668136	EqualityExpression	MyImage . GetMode ( ) != STANDALONE		2668113	0		!=			
ANR	2668137	CallExpression	MyImage . GetMode ( )		2668113	0					
ANR	2668138	Callee	MyImage . GetMode		2668113	0					
ANR	2668139	MemberAccess	MyImage . GetMode		2668113	0					
ANR	2668140	Identifier	MyImage		2668113	0					
ANR	2668141	Identifier	GetMode		2668113	1					
ANR	2668142	ArgumentList			2668113	1					
ANR	2668143	Identifier	STANDALONE		2668113	1					
ANR	2668144	CompoundStatement		8:39:115:115	2668113	1					
ANR	2668145	ExpressionStatement	"REMOTE_CONDOR_get_buffer_info ( & buffer_size , & buffer_block_size , & temp )"	1389:2:34130:34206	2668113	0	True				
ANR	2668146	CallExpression	"REMOTE_CONDOR_get_buffer_info ( & buffer_size , & buffer_block_size , & temp )"		2668113	0					
ANR	2668147	Callee	REMOTE_CONDOR_get_buffer_info		2668113	0					
ANR	2668148	Identifier	REMOTE_CONDOR_get_buffer_info		2668113	0					
ANR	2668149	ArgumentList	& buffer_size		2668113	1					
ANR	2668150	Argument	& buffer_size		2668113	0					
ANR	2668151	UnaryOperationExpression	& buffer_size		2668113	0					
ANR	2668152	UnaryOperator	&		2668113	0					
ANR	2668153	Identifier	buffer_size		2668113	1					
ANR	2668154	Argument	& buffer_block_size		2668113	1					
ANR	2668155	UnaryOperationExpression	& buffer_block_size		2668113	0					
ANR	2668156	UnaryOperator	&		2668113	0					
ANR	2668157	Identifier	buffer_block_size		2668113	1					
ANR	2668158	Argument	& temp		2668113	2					
ANR	2668159	UnaryOperationExpression	& temp		2668113	0					
ANR	2668160	UnaryOperator	&		2668113	0					
ANR	2668161	Identifier	temp		2668113	1					
ANR	2668162	ExpressionStatement	"dprintf ( D_ALWAYS , ""working dir = %s\\n"" , working_dir )"	1392:1:34212:34262	2668113	4	True				
ANR	2668163	CallExpression	"dprintf ( D_ALWAYS , ""working dir = %s\\n"" , working_dir )"		2668113	0					
ANR	2668164	Callee	dprintf		2668113	0					
ANR	2668165	Identifier	dprintf		2668113	0					
ANR	2668166	ArgumentList	D_ALWAYS		2668113	1					
ANR	2668167	Argument	D_ALWAYS		2668113	0					
ANR	2668168	Identifier	D_ALWAYS		2668113	0					
ANR	2668169	Argument	"""working dir = %s\\n"""		2668113	1					
ANR	2668170	PrimaryExpression	"""working dir = %s\\n"""		2668113	0					
ANR	2668171	Argument	working_dir		2668113	2					
ANR	2668172	Identifier	working_dir		2668113	0					
ANR	2668173	ForStatement	for ( int i = 0 ; i < length ; i ++ )		2668113	5					
ANR	2668174	ForInit	int i = 0 ;	1394:6:34271:34278	2668113	0	True				
ANR	2668175	IdentifierDeclStatement	int i = 0 ;		2668113	0					
ANR	2668176	IdentifierDecl	i = 0		2668113	0					
ANR	2668177	IdentifierDeclType	int		2668113	0					
ANR	2668178	Identifier	i		2668113	1					
ANR	2668179	AssignmentExpression	i = 0		2668113	2		=			
ANR	2668180	Identifier	i		2668113	0					
ANR	2668181	PrimaryExpression	0		2668113	1					
ANR	2668182	Condition	i < length	1394:15:34280:34287	2668113	1	True				
ANR	2668183	RelationalExpression	i < length		2668113	0		<			
ANR	2668184	Identifier	i		2668113	0					
ANR	2668185	Identifier	length		2668113	1					
ANR	2668186	PostIncDecOperationExpression	i ++	1394:25:34290:34292	2668113	2	True				
ANR	2668187	Identifier	i		2668113	0					
ANR	2668188	IncDec	++		2668113	1					
ANR	2668189	CompoundStatement		14:31:285:285	2668113	3					
ANR	2668190	IfStatement	if ( pointers [ i ] )		2668113	0					
ANR	2668191	Condition	pointers [ i ]	1395:6:34304:34314	2668113	0	True				
ANR	2668192	ArrayIndexing	pointers [ i ]		2668113	0					
ANR	2668193	Identifier	pointers		2668113	0					
ANR	2668194	Identifier	i		2668113	1					
ANR	2668195	CompoundStatement		15:20:307:307	2668113	1					
ANR	2668196	IfStatement	if ( pointers [ i ] -> file )		2668113	0					
ANR	2668197	Condition	pointers [ i ] -> file	1396:7:34327:34343	2668113	0	True				
ANR	2668198	PtrMemberAccess	pointers [ i ] -> file		2668113	0					
ANR	2668199	ArrayIndexing	pointers [ i ]		2668113	0					
ANR	2668200	Identifier	pointers		2668113	0					
ANR	2668201	Identifier	i		2668113	1					
ANR	2668202	Identifier	file		2668113	1					
ANR	2668203	CompoundStatement		16:27:336:336	2668113	1					
ANR	2668204	IfStatement	if ( count_file_uses ( pointers [ i ] -> file ) == 1 )		2668113	0					
ANR	2668205	Condition	count_file_uses ( pointers [ i ] -> file ) == 1	1397:8:34357:34393	2668113	0	True				
ANR	2668206	EqualityExpression	count_file_uses ( pointers [ i ] -> file ) == 1		2668113	0		==			
ANR	2668207	CallExpression	count_file_uses ( pointers [ i ] -> file )		2668113	0					
ANR	2668208	Callee	count_file_uses		2668113	0					
ANR	2668209	Identifier	count_file_uses		2668113	0					
ANR	2668210	ArgumentList	pointers [ i ] -> file		2668113	1					
ANR	2668211	Argument	pointers [ i ] -> file		2668113	0					
ANR	2668212	PtrMemberAccess	pointers [ i ] -> file		2668113	0					
ANR	2668213	ArrayIndexing	pointers [ i ]		2668113	0					
ANR	2668214	Identifier	pointers		2668113	0					
ANR	2668215	Identifier	i		2668113	1					
ANR	2668216	Identifier	file		2668113	1					
ANR	2668217	PrimaryExpression	1		2668113	1					
ANR	2668218	CompoundStatement		17:48:386:386	2668113	1					
ANR	2668219	ExpressionStatement	temp = pointers [ i ] -> file -> close ( )	1398:5:34404:34437	2668113	0	True				
ANR	2668220	AssignmentExpression	temp = pointers [ i ] -> file -> close ( )		2668113	0		=			
ANR	2668221	Identifier	temp		2668113	0					
ANR	2668222	CallExpression	pointers [ i ] -> file -> close ( )		2668113	1					
ANR	2668223	Callee	pointers [ i ] -> file -> close		2668113	0					
ANR	2668224	PtrMemberAccess	pointers [ i ] -> file -> close		2668113	0					
ANR	2668225	PtrMemberAccess	pointers [ i ] -> file		2668113	0					
ANR	2668226	ArrayIndexing	pointers [ i ]		2668113	0					
ANR	2668227	Identifier	pointers		2668113	0					
ANR	2668228	Identifier	i		2668113	1					
ANR	2668229	Identifier	file		2668113	1					
ANR	2668230	Identifier	close		2668113	1					
ANR	2668231	ArgumentList			2668113	1					
ANR	2668232	IfStatement	if ( temp == - 1 )		2668113	1					
ANR	2668233	Condition	temp == - 1	1399:9:34448:34455	2668113	0	True				
ANR	2668234	EqualityExpression	temp == - 1		2668113	0		==			
ANR	2668235	Identifier	temp		2668113	0					
ANR	2668236	UnaryOperationExpression	- 1		2668113	1					
ANR	2668237	UnaryOperator	-		2668113	0					
ANR	2668238	PrimaryExpression	1		2668113	1					
ANR	2668239	CompoundStatement		19:20:448:448	2668113	1					
ANR	2668240	ExpressionStatement	"_condor_error_retry ( ""Unable to commit data to file %s!\\n"" , pointers [ i ] -> file -> get_url ( ) )"	1400:6:34467:34554	2668113	0	True				
ANR	2668241	CallExpression	"_condor_error_retry ( ""Unable to commit data to file %s!\\n"" , pointers [ i ] -> file -> get_url ( ) )"		2668113	0					
ANR	2668242	Callee	_condor_error_retry		2668113	0					
ANR	2668243	Identifier	_condor_error_retry		2668113	0					
ANR	2668244	ArgumentList	"""Unable to commit data to file %s!\\n"""		2668113	1					
ANR	2668245	Argument	"""Unable to commit data to file %s!\\n"""		2668113	0					
ANR	2668246	PrimaryExpression	"""Unable to commit data to file %s!\\n"""		2668113	0					
ANR	2668247	Argument	pointers [ i ] -> file -> get_url ( )		2668113	1					
ANR	2668248	CallExpression	pointers [ i ] -> file -> get_url ( )		2668113	0					
ANR	2668249	Callee	pointers [ i ] -> file -> get_url		2668113	0					
ANR	2668250	PtrMemberAccess	pointers [ i ] -> file -> get_url		2668113	0					
ANR	2668251	PtrMemberAccess	pointers [ i ] -> file		2668113	0					
ANR	2668252	ArrayIndexing	pointers [ i ]		2668113	0					
ANR	2668253	Identifier	pointers		2668113	0					
ANR	2668254	Identifier	i		2668113	1					
ANR	2668255	Identifier	file		2668113	1					
ANR	2668256	Identifier	get_url		2668113	1					
ANR	2668257	ArgumentList			2668113	1					
ANR	2668258	Statement	delete	1402:5:34568:34573	2668113	2	True				
ANR	2668259	ExpressionStatement	pointers [ i ] -> file	1402:12:34575:34592	2668113	3	True				
ANR	2668260	PtrMemberAccess	pointers [ i ] -> file		2668113	0					
ANR	2668261	ArrayIndexing	pointers [ i ]		2668113	0					
ANR	2668262	Identifier	pointers		2668113	0					
ANR	2668263	Identifier	i		2668113	1					
ANR	2668264	Identifier	file		2668113	1					
ANR	2668265	ExpressionStatement	pointers [ i ] -> file = 0	1404:4:34604:34623	2668113	1	True				
ANR	2668266	AssignmentExpression	pointers [ i ] -> file = 0		2668113	0		=			
ANR	2668267	PtrMemberAccess	pointers [ i ] -> file		2668113	0					
ANR	2668268	ArrayIndexing	pointers [ i ]		2668113	0					
ANR	2668269	Identifier	pointers		2668113	0					
ANR	2668270	Identifier	i		2668113	1					
ANR	2668271	Identifier	file		2668113	1					
ANR	2668272	PrimaryExpression	0		2668113	1					
ANR	2668273	ExpressionStatement	report_all ( )	1409:1:34645:34657	2668113	6	True				
ANR	2668274	CallExpression	report_all ( )		2668113	0					
ANR	2668275	Callee	report_all		2668113	0					
ANR	2668276	Identifier	report_all		2668113	0					
ANR	2668277	ArgumentList			2668113	1					
ANR	2668278	ReturnType	void		2668113	1					
ANR	2668279	Identifier	CondorFileTable :: checkpoint		2668113	2					
ANR	2668280	ParameterList			2668113	3					
ANR	2668281	CFGEntryNode	ENTRY		2668113		True				
ANR	2668282	CFGExitNode	EXIT		2668113		True				
ANR	2668283	Symbol	temp		2668113						
ANR	2668284	Symbol	* * i		2668113						
ANR	2668285	Symbol	* pointers [ i ] -> file		2668113						
ANR	2668286	Symbol	& buffer_block_size		2668113						
ANR	2668287	Symbol	working_dir		2668113						
ANR	2668288	Symbol	pointers [ i ] -> file		2668113						
ANR	2668289	Symbol	D_ALWAYS		2668113						
ANR	2668290	Symbol	MyImage . GetMode		2668113						
ANR	2668291	Symbol	length		2668113						
ANR	2668292	Symbol	& buffer_size		2668113						
ANR	2668293	Symbol	i		2668113						
ANR	2668294	Symbol	pointers [ i ] -> file -> close		2668113						
ANR	2668295	Symbol	* pointers		2668113						
ANR	2668296	Symbol	STANDALONE		2668113						
ANR	2668297	Symbol	* i		2668113						
ANR	2668298	Symbol	pointers [ i ] -> file -> get_url		2668113						
ANR	2668299	Symbol	count_file_uses		2668113						
ANR	2668300	Symbol	* * * i		2668113						
ANR	2668301	Symbol	* * * pointers		2668113						
ANR	2668302	Symbol	* * pointers		2668113						
ANR	2668303	Symbol	MyImage		2668113						
ANR	2668304	Symbol	pointers		2668113						
ANR	2668305	Symbol	& temp		2668113						
ANR	2668306	Function	CondorFileTable :: resume	1416:0:34845:35338							
ANR	2668307	FunctionDef	CondorFileTable :: resume ()		2668306	0					
ANR	2668308	CompoundStatement		1417:0:34876:35338	2668306	0					
ANR	2668309	IdentifierDeclStatement	int result ;	1418:1:34879:34889	2668306	0	True				
ANR	2668310	IdentifierDecl	result		2668306	0					
ANR	2668311	IdentifierDeclType	int		2668306	0					
ANR	2668312	Identifier	result		2668306	1					
ANR	2668313	IdentifierDeclStatement	int temp ;	1419:1:34892:34900	2668306	1	True				
ANR	2668314	IdentifierDecl	temp		2668306	0					
ANR	2668315	IdentifierDeclType	int		2668306	0					
ANR	2668316	Identifier	temp		2668306	1					
ANR	2668317	ExpressionStatement	"dprintf ( D_ALWAYS , ""CondorFileTable::resume\\n"" )"	1421:1:34904:34949	2668306	2	True				
ANR	2668318	CallExpression	"dprintf ( D_ALWAYS , ""CondorFileTable::resume\\n"" )"		2668306	0					
ANR	2668319	Callee	dprintf		2668306	0					
ANR	2668320	Identifier	dprintf		2668306	0					
ANR	2668321	ArgumentList	D_ALWAYS		2668306	1					
ANR	2668322	Argument	D_ALWAYS		2668306	0					
ANR	2668323	Identifier	D_ALWAYS		2668306	0					
ANR	2668324	Argument	"""CondorFileTable::resume\\n"""		2668306	1					
ANR	2668325	PrimaryExpression	"""CondorFileTable::resume\\n"""		2668306	0					
ANR	2668326	ExpressionStatement	"dprintf ( D_ALWAYS , ""working dir = %s\\n"" , working_dir )"	1422:1:34952:35002	2668306	3	True				
ANR	2668327	CallExpression	"dprintf ( D_ALWAYS , ""working dir = %s\\n"" , working_dir )"		2668306	0					
ANR	2668328	Callee	dprintf		2668306	0					
ANR	2668329	Identifier	dprintf		2668306	0					
ANR	2668330	ArgumentList	D_ALWAYS		2668306	1					
ANR	2668331	Argument	D_ALWAYS		2668306	0					
ANR	2668332	Identifier	D_ALWAYS		2668306	0					
ANR	2668333	Argument	"""working dir = %s\\n"""		2668306	1					
ANR	2668334	PrimaryExpression	"""working dir = %s\\n"""		2668306	0					
ANR	2668335	Argument	working_dir		2668306	2					
ANR	2668336	Identifier	working_dir		2668306	0					
ANR	2668337	IfStatement	if ( MyImage . GetMode ( ) != STANDALONE )		2668306	4					
ANR	2668338	Condition	MyImage . GetMode ( ) != STANDALONE	1424:4:35009:35037	2668306	0	True				
ANR	2668339	EqualityExpression	MyImage . GetMode ( ) != STANDALONE		2668306	0		!=			
ANR	2668340	CallExpression	MyImage . GetMode ( )		2668306	0					
ANR	2668341	Callee	MyImage . GetMode		2668306	0					
ANR	2668342	MemberAccess	MyImage . GetMode		2668306	0					
ANR	2668343	Identifier	MyImage		2668306	0					
ANR	2668344	Identifier	GetMode		2668306	1					
ANR	2668345	ArgumentList			2668306	1					
ANR	2668346	Identifier	STANDALONE		2668306	1					
ANR	2668347	CompoundStatement		8:35:163:163	2668306	1					
ANR	2668348	ExpressionStatement	"REMOTE_CONDOR_get_buffer_info ( & buffer_size , & buffer_block_size , & temp )"	1425:2:35044:35120	2668306	0	True				
ANR	2668349	CallExpression	"REMOTE_CONDOR_get_buffer_info ( & buffer_size , & buffer_block_size , & temp )"		2668306	0					
ANR	2668350	Callee	REMOTE_CONDOR_get_buffer_info		2668306	0					
ANR	2668351	Identifier	REMOTE_CONDOR_get_buffer_info		2668306	0					
ANR	2668352	ArgumentList	& buffer_size		2668306	1					
ANR	2668353	Argument	& buffer_size		2668306	0					
ANR	2668354	UnaryOperationExpression	& buffer_size		2668306	0					
ANR	2668355	UnaryOperator	&		2668306	0					
ANR	2668356	Identifier	buffer_size		2668306	1					
ANR	2668357	Argument	& buffer_block_size		2668306	1					
ANR	2668358	UnaryOperationExpression	& buffer_block_size		2668306	0					
ANR	2668359	UnaryOperator	&		2668306	0					
ANR	2668360	Identifier	buffer_block_size		2668306	1					
ANR	2668361	Argument	& temp		2668306	2					
ANR	2668362	UnaryOperationExpression	& temp		2668306	0					
ANR	2668363	UnaryOperator	&		2668306	0					
ANR	2668364	Identifier	temp		2668306	1					
ANR	2668365	ExpressionStatement	result = REMOTE_CONDOR_chdir ( working_dir )	1427:2:35124:35165	2668306	1	True				
ANR	2668366	AssignmentExpression	result = REMOTE_CONDOR_chdir ( working_dir )		2668306	0		=			
ANR	2668367	Identifier	result		2668306	0					
ANR	2668368	CallExpression	REMOTE_CONDOR_chdir ( working_dir )		2668306	1					
ANR	2668369	Callee	REMOTE_CONDOR_chdir		2668306	0					
ANR	2668370	Identifier	REMOTE_CONDOR_chdir		2668306	0					
ANR	2668371	ArgumentList	working_dir		2668306	1					
ANR	2668372	Argument	working_dir		2668306	0					
ANR	2668373	Identifier	working_dir		2668306	0					
ANR	2668374	ElseStatement	else		2668306	0					
ANR	2668375	CompoundStatement		12:8:298:298	2668306	0					
ANR	2668376	Statement	result	1429:2:35179:35184	2668306	0	True				
ANR	2668377	Statement	=	1429:9:35186:35186	2668306	1	True				
ANR	2668378	Statement	::	1429:11:35188:35189	2668306	2	True				
ANR	2668379	ExpressionStatement	chdir ( working_dir )	1429:13:35190:35210	2668306	3	True				
ANR	2668380	CallExpression	chdir ( working_dir )		2668306	0					
ANR	2668381	Callee	chdir		2668306	0					
ANR	2668382	Identifier	chdir		2668306	0					
ANR	2668383	ArgumentList	working_dir		2668306	1					
ANR	2668384	Argument	working_dir		2668306	0					
ANR	2668385	Identifier	working_dir		2668306	0					
ANR	2668386	IfStatement	if ( result < 0 )		2668306	5					
ANR	2668387	Condition	result < 0	1432:4:35220:35227	2668306	0	True				
ANR	2668388	RelationalExpression	result < 0		2668306	0		<			
ANR	2668389	Identifier	result		2668306	0					
ANR	2668390	PrimaryExpression	0		2668306	1					
ANR	2668391	ExpressionStatement	"_condor_error_retry ( ""Couldn't move to '%s' (%s).  Please fix it.\\n"" , working_dir , strerror ( errno ) )"	1432:14:35230:35326	2668306	1	True				
ANR	2668392	CallExpression	"_condor_error_retry ( ""Couldn't move to '%s' (%s).  Please fix it.\\n"" , working_dir , strerror ( errno ) )"		2668306	0					
ANR	2668393	Callee	_condor_error_retry		2668306	0					
ANR	2668394	Identifier	_condor_error_retry		2668306	0					
ANR	2668395	ArgumentList	"""Couldn't move to '%s' (%s).  Please fix it.\\n"""		2668306	1					
ANR	2668396	Argument	"""Couldn't move to '%s' (%s).  Please fix it.\\n"""		2668306	0					
ANR	2668397	PrimaryExpression	"""Couldn't move to '%s' (%s).  Please fix it.\\n"""		2668306	0					
ANR	2668398	Argument	working_dir		2668306	1					
ANR	2668399	Identifier	working_dir		2668306	0					
ANR	2668400	Argument	strerror ( errno )		2668306	2					
ANR	2668401	CallExpression	strerror ( errno )		2668306	0					
ANR	2668402	Callee	strerror		2668306	0					
ANR	2668403	Identifier	strerror		2668306	0					
ANR	2668404	ArgumentList	errno		2668306	1					
ANR	2668405	Argument	errno		2668306	0					
ANR	2668406	Identifier	errno		2668306	0					
ANR	2668407	ExpressionStatement	dump ( )	1434:1:35330:35336	2668306	6	True				
ANR	2668408	CallExpression	dump ( )		2668306	0					
ANR	2668409	Callee	dump		2668306	0					
ANR	2668410	Identifier	dump		2668306	0					
ANR	2668411	ArgumentList			2668306	1					
ANR	2668412	ReturnType	void		2668306	1					
ANR	2668413	Identifier	CondorFileTable :: resume		2668306	2					
ANR	2668414	ParameterList			2668306	3					
ANR	2668415	CFGEntryNode	ENTRY		2668306		True				
ANR	2668416	CFGExitNode	EXIT		2668306		True				
ANR	2668417	Symbol	temp		2668306						
ANR	2668418	Symbol	errno		2668306						
ANR	2668419	Symbol	& buffer_block_size		2668306						
ANR	2668420	Symbol	working_dir		2668306						
ANR	2668421	Symbol	REMOTE_CONDOR_chdir		2668306						
ANR	2668422	Symbol	D_ALWAYS		2668306						
ANR	2668423	Symbol	MyImage . GetMode		2668306						
ANR	2668424	Symbol	& buffer_size		2668306						
ANR	2668425	Symbol	result		2668306						
ANR	2668426	Symbol	strerror		2668306						
ANR	2668427	Symbol	STANDALONE		2668306						
ANR	2668428	Symbol	MyImage		2668306						
ANR	2668429	Symbol	& temp		2668306						
ANR	2668430	Function	CondorFileTable :: resume	1441:0:35612:35993							
ANR	2668431	FunctionDef	CondorFileTable :: resume (int fd)		2668430	0					
ANR	2668432	CompoundStatement		1442:0:35650:35993	2668430	0					
ANR	2668433	IdentifierDeclStatement	CondorFilePointer * p ;	1443:1:35653:35673	2668430	0	True				
ANR	2668434	IdentifierDecl	* p		2668430	0					
ANR	2668435	IdentifierDeclType	CondorFilePointer *		2668430	0					
ANR	2668436	Identifier	p		2668430	1					
ANR	2668437	IfStatement	if ( fd < 0 || fd >= length || ! pointers [ fd ] )		2668430	1					
ANR	2668438	Condition	fd < 0 || fd >= length || ! pointers [ fd ]	1445:5:35681:35715	2668430	0	True				
ANR	2668439	OrExpression	fd < 0 || fd >= length || ! pointers [ fd ]		2668430	0		||			
ANR	2668440	RelationalExpression	fd < 0		2668430	0		<			
ANR	2668441	Identifier	fd		2668430	0					
ANR	2668442	PrimaryExpression	0		2668430	1					
ANR	2668443	OrExpression	fd >= length || ! pointers [ fd ]		2668430	1		||			
ANR	2668444	RelationalExpression	fd >= length		2668430	0		>=			
ANR	2668445	Identifier	fd		2668430	0					
ANR	2668446	Identifier	length		2668430	1					
ANR	2668447	UnaryOperationExpression	! pointers [ fd ]		2668430	1					
ANR	2668448	UnaryOperator	!		2668430	0					
ANR	2668449	ArrayIndexing	pointers [ fd ]		2668430	1					
ANR	2668450	Identifier	pointers		2668430	0					
ANR	2668451	Identifier	fd		2668430	1					
ANR	2668452	CompoundStatement		4:43:68:68	2668430	1					
ANR	2668453	ExpressionStatement	errno = EBADF	1446:2:35723:35736	2668430	0	True				
ANR	2668454	AssignmentExpression	errno = EBADF		2668430	0		=			
ANR	2668455	Identifier	errno		2668430	0					
ANR	2668456	Identifier	EBADF		2668430	1					
ANR	2668457	ReturnStatement	return - 1 ;	1447:2:35740:35749	2668430	1	True				
ANR	2668458	UnaryOperationExpression	- 1		2668430	0					
ANR	2668459	UnaryOperator	-		2668430	0					
ANR	2668460	PrimaryExpression	1		2668430	1					
ANR	2668461	ExpressionStatement	p = pointers [ fd ]	1450:1:35756:35772	2668430	2	True				
ANR	2668462	AssignmentExpression	p = pointers [ fd ]		2668430	0		=			
ANR	2668463	Identifier	p		2668430	0					
ANR	2668464	ArrayIndexing	pointers [ fd ]		2668430	1					
ANR	2668465	Identifier	pointers		2668430	0					
ANR	2668466	Identifier	fd		2668430	1					
ANR	2668467	IfStatement	if ( ! p -> file )		2668430	3					
ANR	2668468	Condition	! p -> file	1452:5:35780:35787	2668430	0	True				
ANR	2668469	UnaryOperationExpression	! p -> file		2668430	0					
ANR	2668470	UnaryOperator	!		2668430	0					
ANR	2668471	PtrMemberAccess	p -> file		2668430	1					
ANR	2668472	Identifier	p		2668430	0					
ANR	2668473	Identifier	file		2668430	1					
ANR	2668474	CompoundStatement		11:16:140:140	2668430	1					
ANR	2668475	ExpressionStatement	"p -> file = open_file_unique ( p -> logical_name , p -> flags , 0 )"	1453:2:35795:35853	2668430	0	True				
ANR	2668476	AssignmentExpression	"p -> file = open_file_unique ( p -> logical_name , p -> flags , 0 )"		2668430	0		=			
ANR	2668477	PtrMemberAccess	p -> file		2668430	0					
ANR	2668478	Identifier	p		2668430	0					
ANR	2668479	Identifier	file		2668430	1					
ANR	2668480	CallExpression	"open_file_unique ( p -> logical_name , p -> flags , 0 )"		2668430	1					
ANR	2668481	Callee	open_file_unique		2668430	0					
ANR	2668482	Identifier	open_file_unique		2668430	0					
ANR	2668483	ArgumentList	p -> logical_name		2668430	1					
ANR	2668484	Argument	p -> logical_name		2668430	0					
ANR	2668485	PtrMemberAccess	p -> logical_name		2668430	0					
ANR	2668486	Identifier	p		2668430	0					
ANR	2668487	Identifier	logical_name		2668430	1					
ANR	2668488	Argument	p -> flags		2668430	1					
ANR	2668489	PtrMemberAccess	p -> flags		2668430	0					
ANR	2668490	Identifier	p		2668430	0					
ANR	2668491	Identifier	flags		2668430	1					
ANR	2668492	Argument	0		2668430	2					
ANR	2668493	PrimaryExpression	0		2668430	0					
ANR	2668494	IfStatement	if ( ! p -> file )		2668430	1					
ANR	2668495	Condition	! p -> file	1454:6:35861:35868	2668430	0	True				
ANR	2668496	UnaryOperationExpression	! p -> file		2668430	0					
ANR	2668497	UnaryOperator	!		2668430	0					
ANR	2668498	PtrMemberAccess	p -> file		2668430	1					
ANR	2668499	Identifier	p		2668430	0					
ANR	2668500	Identifier	file		2668430	1					
ANR	2668501	CompoundStatement		13:17:221:221	2668430	1					
ANR	2668502	ExpressionStatement	"_condor_error_retry ( ""Couldn't re-open '%s' after a restart.  Please fix it.\\n"" , p -> logical_name )"	1455:3:35877:35972	2668430	0	True				
ANR	2668503	CallExpression	"_condor_error_retry ( ""Couldn't re-open '%s' after a restart.  Please fix it.\\n"" , p -> logical_name )"		2668430	0					
ANR	2668504	Callee	_condor_error_retry		2668430	0					
ANR	2668505	Identifier	_condor_error_retry		2668430	0					
ANR	2668506	ArgumentList	"""Couldn't re-open '%s' after a restart.  Please fix it.\\n"""		2668430	1					
ANR	2668507	Argument	"""Couldn't re-open '%s' after a restart.  Please fix it.\\n"""		2668430	0					
ANR	2668508	PrimaryExpression	"""Couldn't re-open '%s' after a restart.  Please fix it.\\n"""		2668430	0					
ANR	2668509	Argument	p -> logical_name		2668430	1					
ANR	2668510	PtrMemberAccess	p -> logical_name		2668430	0					
ANR	2668511	Identifier	p		2668430	0					
ANR	2668512	Identifier	logical_name		2668430	1					
ANR	2668513	ReturnStatement	return 0 ;	1459:1:35983:35991	2668430	4	True				
ANR	2668514	PrimaryExpression	0		2668430	0					
ANR	2668515	ReturnType	int		2668430	1					
ANR	2668516	Identifier	CondorFileTable :: resume		2668430	2					
ANR	2668517	ParameterList	int fd		2668430	3					
ANR	2668518	Parameter	int fd	1441:29:35641:35646	2668430	0	True				
ANR	2668519	ParameterType	int		2668430	0					
ANR	2668520	Identifier	fd		2668430	1					
ANR	2668521	CFGEntryNode	ENTRY		2668430		True				
ANR	2668522	CFGExitNode	EXIT		2668430		True				
ANR	2668523	Symbol	errno		2668430						
ANR	2668524	Symbol	* fd		2668430						
ANR	2668525	Symbol	length		2668430						
ANR	2668526	Symbol	EBADF		2668430						
ANR	2668527	Symbol	* pointers		2668430						
ANR	2668528	Symbol	p		2668430						
ANR	2668529	Symbol	p -> file		2668430						
ANR	2668530	Symbol	p -> flags		2668430						
ANR	2668531	Symbol	p -> logical_name		2668430						
ANR	2668532	Symbol	* p		2668430						
ANR	2668533	Symbol	open_file_unique		2668430						
ANR	2668534	Symbol	fd		2668430						
ANR	2668535	Symbol	pointers		2668430						
ANR	2668536	Function	CondorFileTable :: get_unmapped_fd	1462:0:35996:36123							
ANR	2668537	FunctionDef	CondorFileTable :: get_unmapped_fd (int fd)		2668536	0					
ANR	2668538	CompoundStatement		1463:0:36043:36123	2668536	0					
ANR	2668539	IfStatement	if ( resume ( fd ) < 0 )		2668536	0					
ANR	2668540	Condition	resume ( fd ) < 0	1464:5:36050:36061	2668536	0	True				
ANR	2668541	RelationalExpression	resume ( fd ) < 0		2668536	0		<			
ANR	2668542	CallExpression	resume ( fd )		2668536	0					
ANR	2668543	Callee	resume		2668536	0					
ANR	2668544	Identifier	resume		2668536	0					
ANR	2668545	ArgumentList	fd		2668536	1					
ANR	2668546	Argument	fd		2668536	0					
ANR	2668547	Identifier	fd		2668536	0					
ANR	2668548	PrimaryExpression	0		2668536	1					
ANR	2668549	ReturnStatement	return - 1 ;	1464:20:36065:36074	2668536	1	True				
ANR	2668550	UnaryOperationExpression	- 1		2668536	0					
ANR	2668551	UnaryOperator	-		2668536	0					
ANR	2668552	PrimaryExpression	1		2668536	1					
ANR	2668553	ReturnStatement	return pointers [ fd ] -> file -> get_unmapped_fd ( ) ;	1465:1:36077:36121	2668536	1	True				
ANR	2668554	CallExpression	pointers [ fd ] -> file -> get_unmapped_fd ( )		2668536	0					
ANR	2668555	Callee	pointers [ fd ] -> file -> get_unmapped_fd		2668536	0					
ANR	2668556	PtrMemberAccess	pointers [ fd ] -> file -> get_unmapped_fd		2668536	0					
ANR	2668557	PtrMemberAccess	pointers [ fd ] -> file		2668536	0					
ANR	2668558	ArrayIndexing	pointers [ fd ]		2668536	0					
ANR	2668559	Identifier	pointers		2668536	0					
ANR	2668560	Identifier	fd		2668536	1					
ANR	2668561	Identifier	file		2668536	1					
ANR	2668562	Identifier	get_unmapped_fd		2668536	1					
ANR	2668563	ArgumentList			2668536	1					
ANR	2668564	ReturnType	int		2668536	1					
ANR	2668565	Identifier	CondorFileTable :: get_unmapped_fd		2668536	2					
ANR	2668566	ParameterList	int fd		2668536	3					
ANR	2668567	Parameter	int fd	1462:38:36034:36039	2668536	0	True				
ANR	2668568	ParameterType	int		2668536	0					
ANR	2668569	Identifier	fd		2668536	1					
ANR	2668570	CFGEntryNode	ENTRY		2668536		True				
ANR	2668571	CFGExitNode	EXIT		2668536		True				
ANR	2668572	Symbol	resume		2668536						
ANR	2668573	Symbol	* pointers [ fd ] -> file		2668536						
ANR	2668574	Symbol	pointers [ fd ] -> file -> get_unmapped_fd		2668536						
ANR	2668575	Symbol	* fd		2668536						
ANR	2668576	Symbol	* * fd		2668536						
ANR	2668577	Symbol	* * * pointers		2668536						
ANR	2668578	Symbol	* * * fd		2668536						
ANR	2668579	Symbol	pointers [ fd ] -> file		2668536						
ANR	2668580	Symbol	* * pointers		2668536						
ANR	2668581	Symbol	fd		2668536						
ANR	2668582	Symbol	* pointers		2668536						
ANR	2668583	Symbol	pointers		2668536						
ANR	2668584	Function	CondorFileTable :: is_fd_local	1468:0:36126:36247							
ANR	2668585	FunctionDef	CondorFileTable :: is_fd_local (int fd)		2668584	0					
ANR	2668586	CompoundStatement		1469:0:36169:36247	2668584	0					
ANR	2668587	IfStatement	if ( resume ( fd ) < 0 )		2668584	0					
ANR	2668588	Condition	resume ( fd ) < 0	1470:5:36176:36187	2668584	0	True				
ANR	2668589	RelationalExpression	resume ( fd ) < 0		2668584	0		<			
ANR	2668590	CallExpression	resume ( fd )		2668584	0					
ANR	2668591	Callee	resume		2668584	0					
ANR	2668592	Identifier	resume		2668584	0					
ANR	2668593	ArgumentList	fd		2668584	1					
ANR	2668594	Argument	fd		2668584	0					
ANR	2668595	Identifier	fd		2668584	0					
ANR	2668596	PrimaryExpression	0		2668584	1					
ANR	2668597	ReturnStatement	return - 1 ;	1470:20:36191:36200	2668584	1	True				
ANR	2668598	UnaryOperationExpression	- 1		2668584	0					
ANR	2668599	UnaryOperator	-		2668584	0					
ANR	2668600	PrimaryExpression	1		2668584	1					
ANR	2668601	ReturnStatement	return pointers [ fd ] -> file -> is_file_local ( ) ;	1471:1:36203:36245	2668584	1	True				
ANR	2668602	CallExpression	pointers [ fd ] -> file -> is_file_local ( )		2668584	0					
ANR	2668603	Callee	pointers [ fd ] -> file -> is_file_local		2668584	0					
ANR	2668604	PtrMemberAccess	pointers [ fd ] -> file -> is_file_local		2668584	0					
ANR	2668605	PtrMemberAccess	pointers [ fd ] -> file		2668584	0					
ANR	2668606	ArrayIndexing	pointers [ fd ]		2668584	0					
ANR	2668607	Identifier	pointers		2668584	0					
ANR	2668608	Identifier	fd		2668584	1					
ANR	2668609	Identifier	file		2668584	1					
ANR	2668610	Identifier	is_file_local		2668584	1					
ANR	2668611	ArgumentList			2668584	1					
ANR	2668612	ReturnType	int		2668584	1					
ANR	2668613	Identifier	CondorFileTable :: is_fd_local		2668584	2					
ANR	2668614	ParameterList	int fd		2668584	3					
ANR	2668615	Parameter	int fd	1468:34:36160:36165	2668584	0	True				
ANR	2668616	ParameterType	int		2668584	0					
ANR	2668617	Identifier	fd		2668584	1					
ANR	2668618	CFGEntryNode	ENTRY		2668584		True				
ANR	2668619	CFGExitNode	EXIT		2668584		True				
ANR	2668620	Symbol	resume		2668584						
ANR	2668621	Symbol	* pointers [ fd ] -> file		2668584						
ANR	2668622	Symbol	* fd		2668584						
ANR	2668623	Symbol	* * fd		2668584						
ANR	2668624	Symbol	* * * pointers		2668584						
ANR	2668625	Symbol	* * * fd		2668584						
ANR	2668626	Symbol	pointers [ fd ] -> file		2668584						
ANR	2668627	Symbol	* * pointers		2668584						
ANR	2668628	Symbol	fd		2668584						
ANR	2668629	Symbol	pointers [ fd ] -> file -> is_file_local		2668584						
ANR	2668630	Symbol	pointers		2668584						
ANR	2668631	Symbol	* pointers		2668584						
ANR	2668632	Function	CondorFileTable :: is_file_name_local	1474:0:36250:37302							
ANR	2668633	FunctionDef	"CondorFileTable :: is_file_name_local (const char * incomplete_name , char * * local_name)"		2668632	0					
ANR	2668634	CompoundStatement		1475:0:36340:37302	2668632	0					
ANR	2668635	IdentifierDeclStatement	char * url = NULL ;	1476:1:36343:36359	2668632	0	True				
ANR	2668636	IdentifierDecl	* url = NULL		2668632	0					
ANR	2668637	IdentifierDeclType	char *		2668632	0					
ANR	2668638	Identifier	url		2668632	1					
ANR	2668639	AssignmentExpression	* url = NULL		2668632	2		=			
ANR	2668640	Identifier	NULL		2668632	0					
ANR	2668641	Identifier	NULL		2668632	1					
ANR	2668642	IdentifierDeclStatement	char * logical_name = NULL ;	1477:1:36362:36387	2668632	1	True				
ANR	2668643	IdentifierDecl	* logical_name = NULL		2668632	0					
ANR	2668644	IdentifierDeclType	char *		2668632	0					
ANR	2668645	Identifier	logical_name		2668632	1					
ANR	2668646	AssignmentExpression	* logical_name = NULL		2668632	2		=			
ANR	2668647	Identifier	NULL		2668632	0					
ANR	2668648	Identifier	NULL		2668632	1					
ANR	2668649	ExpressionStatement	assert ( local_name != NULL && * local_name == NULL )	1479:1:36391:36442	2668632	2	True				
ANR	2668650	CallExpression	assert ( local_name != NULL && * local_name == NULL )		2668632	0					
ANR	2668651	Callee	assert		2668632	0					
ANR	2668652	Identifier	assert		2668632	0					
ANR	2668653	ArgumentList	local_name != NULL && * local_name == NULL		2668632	1					
ANR	2668654	Argument	local_name != NULL && * local_name == NULL		2668632	0					
ANR	2668655	AndExpression	local_name != NULL && * local_name == NULL		2668632	0		&&			
ANR	2668656	EqualityExpression	local_name != NULL		2668632	0		!=			
ANR	2668657	Identifier	local_name		2668632	0					
ANR	2668658	Identifier	NULL		2668632	1					
ANR	2668659	EqualityExpression	* local_name == NULL		2668632	1		==			
ANR	2668660	UnaryOperationExpression	* local_name		2668632	0					
ANR	2668661	UnaryOperator	*		2668632	0					
ANR	2668662	Identifier	local_name		2668632	1					
ANR	2668663	Identifier	NULL		2668632	1					
ANR	2668664	ExpressionStatement	"complete_path ( incomplete_name , & logical_name )"	1482:1:36499:36546	2668632	3	True				
ANR	2668665	CallExpression	"complete_path ( incomplete_name , & logical_name )"		2668632	0					
ANR	2668666	Callee	complete_path		2668632	0					
ANR	2668667	Identifier	complete_path		2668632	0					
ANR	2668668	ArgumentList	incomplete_name		2668632	1					
ANR	2668669	Argument	incomplete_name		2668632	0					
ANR	2668670	Identifier	incomplete_name		2668632	0					
ANR	2668671	Argument	& logical_name		2668632	1					
ANR	2668672	UnaryOperationExpression	& logical_name		2668632	0					
ANR	2668673	UnaryOperator	&		2668632	0					
ANR	2668674	Identifier	logical_name		2668632	1					
ANR	2668675	IdentifierDeclStatement	int match = find_logical_name ( logical_name ) ;	1487:1:36643:36688	2668632	4	True				
ANR	2668676	IdentifierDecl	match = find_logical_name ( logical_name )		2668632	0					
ANR	2668677	IdentifierDeclType	int		2668632	0					
ANR	2668678	Identifier	match		2668632	1					
ANR	2668679	AssignmentExpression	match = find_logical_name ( logical_name )		2668632	2		=			
ANR	2668680	Identifier	match		2668632	0					
ANR	2668681	CallExpression	find_logical_name ( logical_name )		2668632	1					
ANR	2668682	Callee	find_logical_name		2668632	0					
ANR	2668683	Identifier	find_logical_name		2668632	0					
ANR	2668684	ArgumentList	logical_name		2668632	1					
ANR	2668685	Argument	logical_name		2668632	0					
ANR	2668686	Identifier	logical_name		2668632	0					
ANR	2668687	IfStatement	if ( match != - 1 )		2668632	5					
ANR	2668688	Condition	match != - 1	1488:4:36694:36702	2668632	0	True				
ANR	2668689	EqualityExpression	match != - 1		2668632	0		!=			
ANR	2668690	Identifier	match		2668632	0					
ANR	2668691	UnaryOperationExpression	- 1		2668632	1					
ANR	2668692	UnaryOperator	-		2668632	0					
ANR	2668693	PrimaryExpression	1		2668632	1					
ANR	2668694	CompoundStatement		15:2:368:384	2668632	1					
ANR	2668695	IdentifierDeclStatement	CondorFile * file ;	1489:2:36709:36725	2668632	0	True				
ANR	2668696	IdentifierDecl	* file		2668632	0					
ANR	2668697	IdentifierDeclType	CondorFile *		2668632	0					
ANR	2668698	Identifier	file		2668632	1					
ANR	2668699	ExpressionStatement	resume ( match )	1490:2:36729:36742	2668632	1	True				
ANR	2668700	CallExpression	resume ( match )		2668632	0					
ANR	2668701	Callee	resume		2668632	0					
ANR	2668702	Identifier	resume		2668632	0					
ANR	2668703	ArgumentList	match		2668632	1					
ANR	2668704	Argument	match		2668632	0					
ANR	2668705	Identifier	match		2668632	0					
ANR	2668706	ExpressionStatement	file = pointers [ match ] -> file	1491:2:36746:36774	2668632	2	True				
ANR	2668707	AssignmentExpression	file = pointers [ match ] -> file		2668632	0		=			
ANR	2668708	Identifier	file		2668632	0					
ANR	2668709	PtrMemberAccess	pointers [ match ] -> file		2668632	1					
ANR	2668710	ArrayIndexing	pointers [ match ]		2668632	0					
ANR	2668711	Identifier	pointers		2668632	0					
ANR	2668712	Identifier	match		2668632	1					
ANR	2668713	Identifier	file		2668632	1					
ANR	2668714	ExpressionStatement	"* local_name = strdup ( strrchr ( file -> get_url ( ) , ':' ) + 1 )"	1492:2:36778:36830	2668632	3	True				
ANR	2668715	AssignmentExpression	"* local_name = strdup ( strrchr ( file -> get_url ( ) , ':' ) + 1 )"		2668632	0		=			
ANR	2668716	UnaryOperationExpression	* local_name		2668632	0					
ANR	2668717	UnaryOperator	*		2668632	0					
ANR	2668718	Identifier	local_name		2668632	1					
ANR	2668719	CallExpression	"strdup ( strrchr ( file -> get_url ( ) , ':' ) + 1 )"		2668632	1					
ANR	2668720	Callee	strdup		2668632	0					
ANR	2668721	Identifier	strdup		2668632	0					
ANR	2668722	ArgumentList	"strrchr ( file -> get_url ( ) , ':' ) + 1"		2668632	1					
ANR	2668723	Argument	"strrchr ( file -> get_url ( ) , ':' ) + 1"		2668632	0					
ANR	2668724	AdditiveExpression	"strrchr ( file -> get_url ( ) , ':' ) + 1"		2668632	0		+			
ANR	2668725	CallExpression	"strrchr ( file -> get_url ( ) , ':' )"		2668632	0					
ANR	2668726	Callee	strrchr		2668632	0					
ANR	2668727	Identifier	strrchr		2668632	0					
ANR	2668728	ArgumentList	file -> get_url ( )		2668632	1					
ANR	2668729	Argument	file -> get_url ( )		2668632	0					
ANR	2668730	CallExpression	file -> get_url ( )		2668632	0					
ANR	2668731	Callee	file -> get_url		2668632	0					
ANR	2668732	PtrMemberAccess	file -> get_url		2668632	0					
ANR	2668733	Identifier	file		2668632	0					
ANR	2668734	Identifier	get_url		2668632	1					
ANR	2668735	ArgumentList			2668632	1					
ANR	2668736	Argument	':'		2668632	1					
ANR	2668737	PrimaryExpression	':'		2668632	0					
ANR	2668738	PrimaryExpression	1		2668632	1					
ANR	2668739	ExpressionStatement	free ( logical_name )	1493:2:36835:36855	2668632	4	True				
ANR	2668740	CallExpression	free ( logical_name )		2668632	0					
ANR	2668741	Callee	free		2668632	0					
ANR	2668742	Identifier	free		2668632	0					
ANR	2668743	ArgumentList	logical_name		2668632	1					
ANR	2668744	Argument	logical_name		2668632	0					
ANR	2668745	Identifier	logical_name		2668632	0					
ANR	2668746	ReturnStatement	return file -> is_file_local ( ) ;	1494:2:36859:36887	2668632	5	True				
ANR	2668747	CallExpression	file -> is_file_local ( )		2668632	0					
ANR	2668748	Callee	file -> is_file_local		2668632	0					
ANR	2668749	PtrMemberAccess	file -> is_file_local		2668632	0					
ANR	2668750	Identifier	file		2668632	0					
ANR	2668751	Identifier	is_file_local		2668632	1					
ANR	2668752	ArgumentList			2668632	1					
ANR	2668753	ExpressionStatement	"lookup_url ( logical_name , & url )"	1498:1:36944:36976	2668632	6	True				
ANR	2668754	CallExpression	"lookup_url ( logical_name , & url )"		2668632	0					
ANR	2668755	Callee	lookup_url		2668632	0					
ANR	2668756	Identifier	lookup_url		2668632	0					
ANR	2668757	ArgumentList	logical_name		2668632	1					
ANR	2668758	Argument	logical_name		2668632	0					
ANR	2668759	Identifier	logical_name		2668632	0					
ANR	2668760	Argument	& url		2668632	1					
ANR	2668761	UnaryOperationExpression	& url		2668632	0					
ANR	2668762	UnaryOperator	&		2668632	0					
ANR	2668763	Identifier	url		2668632	1					
ANR	2668764	ExpressionStatement	free ( logical_name )	1499:1:36979:36999	2668632	7	True				
ANR	2668765	CallExpression	free ( logical_name )		2668632	0					
ANR	2668766	Callee	free		2668632	0					
ANR	2668767	Identifier	free		2668632	0					
ANR	2668768	ArgumentList	logical_name		2668632	1					
ANR	2668769	Argument	logical_name		2668632	0					
ANR	2668770	Identifier	logical_name		2668632	0					
ANR	2668771	ExpressionStatement	"* local_name = strdup ( strrchr ( url , ':' ) + 1 )"	1502:1:37036:37076	2668632	8	True				
ANR	2668772	AssignmentExpression	"* local_name = strdup ( strrchr ( url , ':' ) + 1 )"		2668632	0		=			
ANR	2668773	UnaryOperationExpression	* local_name		2668632	0					
ANR	2668774	UnaryOperator	*		2668632	0					
ANR	2668775	Identifier	local_name		2668632	1					
ANR	2668776	CallExpression	"strdup ( strrchr ( url , ':' ) + 1 )"		2668632	1					
ANR	2668777	Callee	strdup		2668632	0					
ANR	2668778	Identifier	strdup		2668632	0					
ANR	2668779	ArgumentList	"strrchr ( url , ':' ) + 1"		2668632	1					
ANR	2668780	Argument	"strrchr ( url , ':' ) + 1"		2668632	0					
ANR	2668781	AdditiveExpression	"strrchr ( url , ':' ) + 1"		2668632	0		+			
ANR	2668782	CallExpression	"strrchr ( url , ':' )"		2668632	0					
ANR	2668783	Callee	strrchr		2668632	0					
ANR	2668784	Identifier	strrchr		2668632	0					
ANR	2668785	ArgumentList	url		2668632	1					
ANR	2668786	Argument	url		2668632	0					
ANR	2668787	Identifier	url		2668632	0					
ANR	2668788	Argument	':'		2668632	1					
ANR	2668789	PrimaryExpression	':'		2668632	0					
ANR	2668790	PrimaryExpression	1		2668632	1					
ANR	2668791	IdentifierDeclStatement	CondorFile * f = create_url_chain ( url ) ;	1505:1:37130:37167	2668632	9	True				
ANR	2668792	IdentifierDecl	* f = create_url_chain ( url )		2668632	0					
ANR	2668793	IdentifierDeclType	CondorFile *		2668632	0					
ANR	2668794	Identifier	f		2668632	1					
ANR	2668795	AssignmentExpression	* f = create_url_chain ( url )		2668632	2		=			
ANR	2668796	Identifier	f		2668632	0					
ANR	2668797	CallExpression	create_url_chain ( url )		2668632	1					
ANR	2668798	Callee	create_url_chain		2668632	0					
ANR	2668799	Identifier	create_url_chain		2668632	0					
ANR	2668800	ArgumentList	url		2668632	1					
ANR	2668801	Argument	url		2668632	0					
ANR	2668802	Identifier	url		2668632	0					
ANR	2668803	ExpressionStatement	free ( url )	1506:1:37170:37181	2668632	10	True				
ANR	2668804	CallExpression	free ( url )		2668632	0					
ANR	2668805	Callee	free		2668632	0					
ANR	2668806	Identifier	free		2668632	0					
ANR	2668807	ArgumentList	url		2668632	1					
ANR	2668808	Argument	url		2668632	0					
ANR	2668809	Identifier	url		2668632	0					
ANR	2668810	IfStatement	if ( f )		2668632	11					
ANR	2668811	Condition	f	1507:4:37187:37187	2668632	0	True				
ANR	2668812	Identifier	f		2668632	0					
ANR	2668813	CompoundStatement		33:7:849:849	2668632	1					
ANR	2668814	IfStatement	if ( f -> is_file_local ( ) )		2668632	0					
ANR	2668815	Condition	f -> is_file_local ( )	1508:6:37198:37215	2668632	0	True				
ANR	2668816	CallExpression	f -> is_file_local ( )		2668632	0					
ANR	2668817	Callee	f -> is_file_local		2668632	0					
ANR	2668818	PtrMemberAccess	f -> is_file_local		2668632	0					
ANR	2668819	Identifier	f		2668632	0					
ANR	2668820	Identifier	is_file_local		2668632	1					
ANR	2668821	ArgumentList			2668632	1					
ANR	2668822	CompoundStatement		34:27:878:878	2668632	1					
ANR	2668823	Statement	delete	1509:3:37224:37229	2668632	0	True				
ANR	2668824	ExpressionStatement	f	1509:10:37231:37232	2668632	1	True				
ANR	2668825	Identifier	f		2668632	0					
ANR	2668826	ReturnStatement	return 1 ;	1510:3:37237:37245	2668632	2	True				
ANR	2668827	PrimaryExpression	1		2668632	0					
ANR	2668828	ElseStatement	else		2668632	0					
ANR	2668829	CompoundStatement		37:9:915:915	2668632	0					
ANR	2668830	Statement	delete	1512:3:37261:37266	2668632	0	True				
ANR	2668831	ExpressionStatement	f	1512:10:37268:37269	2668632	1	True				
ANR	2668832	Identifier	f		2668632	0					
ANR	2668833	ReturnStatement	return 0 ;	1513:3:37274:37282	2668632	2	True				
ANR	2668834	PrimaryExpression	0		2668632	0					
ANR	2668835	ReturnStatement	return 0 ;	1516:1:37292:37300	2668632	12	True				
ANR	2668836	PrimaryExpression	0		2668632	0					
ANR	2668837	ReturnType	int		2668632	1					
ANR	2668838	Identifier	CondorFileTable :: is_file_name_local		2668632	2					
ANR	2668839	ParameterList	"const char * incomplete_name , char * * local_name"		2668632	3					
ANR	2668840	Parameter	const char * incomplete_name	1474:41:36291:36317	2668632	0	True				
ANR	2668841	ParameterType	const char *		2668632	0					
ANR	2668842	Identifier	incomplete_name		2668632	1					
ANR	2668843	Parameter	char * * local_name	1474:70:36320:36336	2668632	1	True				
ANR	2668844	ParameterType	char * *		2668632	0					
ANR	2668845	Identifier	local_name		2668632	1					
ANR	2668846	CFGEntryNode	ENTRY		2668632		True				
ANR	2668847	CFGExitNode	EXIT		2668632		True				
ANR	2668848	Symbol	* match		2668632						
ANR	2668849	Symbol	file -> is_file_local		2668632						
ANR	2668850	Symbol	logical_name		2668632						
ANR	2668851	Symbol	create_url_chain		2668632						
ANR	2668852	Symbol	incomplete_name		2668632						
ANR	2668853	Symbol	find_logical_name		2668632						
ANR	2668854	Symbol	& url		2668632						
ANR	2668855	Symbol	file		2668632						
ANR	2668856	Symbol	f -> is_file_local		2668632						
ANR	2668857	Symbol	* * pointers		2668632						
ANR	2668858	Symbol	pointers		2668632						
ANR	2668859	Symbol	NULL		2668632						
ANR	2668860	Symbol	f		2668632						
ANR	2668861	Symbol	match		2668632						
ANR	2668862	Symbol	pointers [ match ] -> file		2668632						
ANR	2668863	Symbol	& logical_name		2668632						
ANR	2668864	Symbol	* file		2668632						
ANR	2668865	Symbol	local_name		2668632						
ANR	2668866	Symbol	url		2668632						
ANR	2668867	Symbol	* pointers		2668632						
ANR	2668868	Symbol	* f		2668632						
ANR	2668869	Symbol	strrchr		2668632						
ANR	2668870	Symbol	* * match		2668632						
ANR	2668871	Symbol	* local_name		2668632						
ANR	2668872	Symbol	file -> get_url		2668632						
ANR	2668873	Symbol	strdup		2668632						
