command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3808338	File	data/converged/CVE-2011-4930_htcondor/src_condor_schedd.V6_tdman.cpp								
ANR	3808339	Function	TransferDaemon :: TransferDaemon	32:0:1073:1451							
ANR	3808340	FunctionDef	"TransferDaemon :: TransferDaemon (MyString fquser , MyString id , TDMode status)"		3808339	0					
ANR	3808341	CompoundStatement		34:0:1195:1451	3808339	0					
ANR	3808342	ExpressionStatement	m_fquser = fquser	35:1:1198:1215	3808339	0	True				
ANR	3808343	AssignmentExpression	m_fquser = fquser		3808339	0		=			
ANR	3808344	Identifier	m_fquser		3808339	0					
ANR	3808345	Identifier	fquser		3808339	1					
ANR	3808346	ExpressionStatement	m_id = id	36:1:1218:1227	3808339	1	True				
ANR	3808347	AssignmentExpression	m_id = id		3808339	0		=			
ANR	3808348	Identifier	m_id		3808339	0					
ANR	3808349	Identifier	id		3808339	1					
ANR	3808350	ExpressionStatement	m_status = status	37:1:1230:1247	3808339	2	True				
ANR	3808351	AssignmentExpression	m_status = status		3808339	0		=			
ANR	3808352	Identifier	m_status		3808339	0					
ANR	3808353	Identifier	status		3808339	1					
ANR	3808354	ExpressionStatement	"m_sinful = """""	39:1:1251:1264	3808339	3	True				
ANR	3808355	AssignmentExpression	"m_sinful = """""		3808339	0		=			
ANR	3808356	Identifier	m_sinful		3808339	0					
ANR	3808357	PrimaryExpression	""""""		3808339	1					
ANR	3808358	ExpressionStatement	m_update_sock = NULL	40:1:1267:1287	3808339	4	True				
ANR	3808359	AssignmentExpression	m_update_sock = NULL		3808339	0		=			
ANR	3808360	Identifier	m_update_sock		3808339	0					
ANR	3808361	Identifier	NULL		3808339	1					
ANR	3808362	ExpressionStatement	m_treq_sock = NULL	41:1:1290:1308	3808339	5	True				
ANR	3808363	AssignmentExpression	m_treq_sock = NULL		3808339	0		=			
ANR	3808364	Identifier	m_treq_sock		3808339	0					
ANR	3808365	Identifier	NULL		3808339	1					
ANR	3808366	ExpressionStatement	"m_reg_func_desc = """""	43:1:1312:1332	3808339	6	True				
ANR	3808367	AssignmentExpression	"m_reg_func_desc = """""		3808339	0		=			
ANR	3808368	Identifier	m_reg_func_desc		3808339	0					
ANR	3808369	PrimaryExpression	""""""		3808339	1					
ANR	3808370	ExpressionStatement	m_reg_func = NULL	44:1:1335:1352	3808339	7	True				
ANR	3808371	AssignmentExpression	m_reg_func = NULL		3808339	0		=			
ANR	3808372	Identifier	m_reg_func		3808339	0					
ANR	3808373	Identifier	NULL		3808339	1					
ANR	3808374	ExpressionStatement	m_reg_func_this = NULL	45:1:1355:1377	3808339	8	True				
ANR	3808375	AssignmentExpression	m_reg_func_this = NULL		3808339	0		=			
ANR	3808376	Identifier	m_reg_func_this		3808339	0					
ANR	3808377	Identifier	NULL		3808339	1					
ANR	3808378	ExpressionStatement	"m_reap_func_desc = """""	47:1:1381:1402	3808339	9	True				
ANR	3808379	AssignmentExpression	"m_reap_func_desc = """""		3808339	0		=			
ANR	3808380	Identifier	m_reap_func_desc		3808339	0					
ANR	3808381	PrimaryExpression	""""""		3808339	1					
ANR	3808382	ExpressionStatement	m_reap_func = NULL	48:1:1405:1423	3808339	10	True				
ANR	3808383	AssignmentExpression	m_reap_func = NULL		3808339	0		=			
ANR	3808384	Identifier	m_reap_func		3808339	0					
ANR	3808385	Identifier	NULL		3808339	1					
ANR	3808386	ExpressionStatement	m_reap_func_this = NULL	49:1:1426:1449	3808339	11	True				
ANR	3808387	AssignmentExpression	m_reap_func_this = NULL		3808339	0		=			
ANR	3808388	Identifier	m_reap_func_this		3808339	0					
ANR	3808389	Identifier	NULL		3808339	1					
ANR	3808390	Identifier	TransferDaemon :: TransferDaemon		3808339	1					
ANR	3808391	ParameterList	"MyString fquser , MyString id , TDMode status"		3808339	2					
ANR	3808392	Parameter	MyString fquser	32:31:1104:1118	3808339	0	True				
ANR	3808393	ParameterType	MyString		3808339	0					
ANR	3808394	Identifier	fquser		3808339	1					
ANR	3808395	Parameter	MyString id	32:48:1121:1131	3808339	1	True				
ANR	3808396	ParameterType	MyString		3808339	0					
ANR	3808397	Identifier	id		3808339	1					
ANR	3808398	Parameter	TDMode status	32:61:1134:1146	3808339	2	True				
ANR	3808399	ParameterType	TDMode		3808339	0					
ANR	3808400	Identifier	status		3808339	1					
ANR	3808401	CFGEntryNode	ENTRY		3808339		True				
ANR	3808402	CFGExitNode	EXIT		3808339		True				
ANR	3808403	Symbol	NULL		3808339						
ANR	3808404	Symbol	m_treq_sock		3808339						
ANR	3808405	Symbol	m_fquser		3808339						
ANR	3808406	Symbol	fquser		3808339						
ANR	3808407	Symbol	m_reg_func_desc		3808339						
ANR	3808408	Symbol	m_update_sock		3808339						
ANR	3808409	Symbol	m_reap_func_desc		3808339						
ANR	3808410	Symbol	m_reg_func		3808339						
ANR	3808411	Symbol	m_reg_func_this		3808339						
ANR	3808412	Symbol	m_reap_func_this		3808339						
ANR	3808413	Symbol	m_reap_func		3808339						
ANR	3808414	Symbol	m_status		3808339						
ANR	3808415	Symbol	id		3808339						
ANR	3808416	Symbol	status		3808339						
ANR	3808417	Symbol	m_id		3808339						
ANR	3808418	Symbol	m_sinful		3808339						
ANR	3808419	Function	TransferDaemon :: ~TransferDaemon	52:0:1454:1503							
ANR	3808420	FunctionDef	TransferDaemon :: ~TransferDaemon ()		3808419	0					
ANR	3808421	CompoundStatement		53:0:1488:1503	3808419	0					
ANR	3808422	Identifier	TransferDaemon :: ~TransferDaemon		3808419	1					
ANR	3808423	ParameterList			3808419	2					
ANR	3808424	CFGEntryNode	ENTRY		3808419		True				
ANR	3808425	CFGExitNode	EXIT		3808419		True				
ANR	3808426	Function	TransferDaemon :: clear	57:0:1506:1629							
ANR	3808427	FunctionDef	TransferDaemon :: clear ()		3808426	0					
ANR	3808428	CompoundStatement		59:0:1539:1629	3808426	0					
ANR	3808429	ExpressionStatement	m_status = TD_PRE_INVOKED	60:1:1542:1567	3808426	0	True				
ANR	3808430	AssignmentExpression	m_status = TD_PRE_INVOKED		3808426	0		=			
ANR	3808431	Identifier	m_status		3808426	0					
ANR	3808432	Identifier	TD_PRE_INVOKED		3808426	1					
ANR	3808433	ExpressionStatement	"m_sinful = """""	61:1:1570:1583	3808426	1	True				
ANR	3808434	AssignmentExpression	"m_sinful = """""		3808426	0		=			
ANR	3808435	Identifier	m_sinful		3808426	0					
ANR	3808436	PrimaryExpression	""""""		3808426	1					
ANR	3808437	ExpressionStatement	m_update_sock = NULL	62:1:1586:1606	3808426	2	True				
ANR	3808438	AssignmentExpression	m_update_sock = NULL		3808426	0		=			
ANR	3808439	Identifier	m_update_sock		3808426	0					
ANR	3808440	Identifier	NULL		3808426	1					
ANR	3808441	ExpressionStatement	m_treq_sock = NULL	63:1:1609:1627	3808426	3	True				
ANR	3808442	AssignmentExpression	m_treq_sock = NULL		3808426	0		=			
ANR	3808443	Identifier	m_treq_sock		3808426	0					
ANR	3808444	Identifier	NULL		3808426	1					
ANR	3808445	ReturnType	void		3808426	1					
ANR	3808446	Identifier	TransferDaemon :: clear		3808426	2					
ANR	3808447	ParameterList			3808426	3					
ANR	3808448	CFGEntryNode	ENTRY		3808426		True				
ANR	3808449	CFGExitNode	EXIT		3808426		True				
ANR	3808450	Symbol	TD_PRE_INVOKED		3808426						
ANR	3808451	Symbol	NULL		3808426						
ANR	3808452	Symbol	m_treq_sock		3808426						
ANR	3808453	Symbol	m_status		3808426						
ANR	3808454	Symbol	m_sinful		3808426						
ANR	3808455	Symbol	m_update_sock		3808426						
ANR	3808456	Function	TransferDaemon :: set_fquser	66:0:1632:1703							
ANR	3808457	FunctionDef	TransferDaemon :: set_fquser (MyString fquser)		3808456	0					
ANR	3808458	CompoundStatement		68:0:1681:1703	3808456	0					
ANR	3808459	ExpressionStatement	m_fquser = fquser	69:1:1684:1701	3808456	0	True				
ANR	3808460	AssignmentExpression	m_fquser = fquser		3808456	0		=			
ANR	3808461	Identifier	m_fquser		3808456	0					
ANR	3808462	Identifier	fquser		3808456	1					
ANR	3808463	ReturnType	void		3808456	1					
ANR	3808464	Identifier	TransferDaemon :: set_fquser		3808456	2					
ANR	3808465	ParameterList	MyString fquser		3808456	3					
ANR	3808466	Parameter	MyString fquser	67:27:1664:1678	3808456	0	True				
ANR	3808467	ParameterType	MyString		3808456	0					
ANR	3808468	Identifier	fquser		3808456	1					
ANR	3808469	CFGEntryNode	ENTRY		3808456		True				
ANR	3808470	CFGExitNode	EXIT		3808456		True				
ANR	3808471	Symbol	m_fquser		3808456						
ANR	3808472	Symbol	fquser		3808456						
ANR	3808473	Function	TransferDaemon :: get_fquser	72:0:1706:1768							
ANR	3808474	FunctionDef	TransferDaemon :: get_fquser ()		3808473	0					
ANR	3808475	CompoundStatement		74:0:1748:1768	3808473	0					
ANR	3808476	ReturnStatement	return m_fquser ;	75:1:1751:1766	3808473	0	True				
ANR	3808477	Identifier	m_fquser		3808473	0					
ANR	3808478	ReturnType	MyString		3808473	1					
ANR	3808479	Identifier	TransferDaemon :: get_fquser		3808473	2					
ANR	3808480	ParameterList			3808473	3					
ANR	3808481	CFGEntryNode	ENTRY		3808473		True				
ANR	3808482	CFGExitNode	EXIT		3808473		True				
ANR	3808483	Symbol	m_fquser		3808473						
ANR	3808484	Function	TransferDaemon :: set_id	78:0:1771:1826							
ANR	3808485	FunctionDef	TransferDaemon :: set_id (MyString id)		3808484	0					
ANR	3808486	CompoundStatement		80:0:1812:1826	3808484	0					
ANR	3808487	ExpressionStatement	m_id = id	81:1:1815:1824	3808484	0	True				
ANR	3808488	AssignmentExpression	m_id = id		3808484	0		=			
ANR	3808489	Identifier	m_id		3808484	0					
ANR	3808490	Identifier	id		3808484	1					
ANR	3808491	ReturnType	void		3808484	1					
ANR	3808492	Identifier	TransferDaemon :: set_id		3808484	2					
ANR	3808493	ParameterList	MyString id		3808484	3					
ANR	3808494	Parameter	MyString id	79:23:1799:1809	3808484	0	True				
ANR	3808495	ParameterType	MyString		3808484	0					
ANR	3808496	Identifier	id		3808484	1					
ANR	3808497	CFGEntryNode	ENTRY		3808484		True				
ANR	3808498	CFGExitNode	EXIT		3808484		True				
ANR	3808499	Symbol	id		3808484						
ANR	3808500	Symbol	m_id		3808484						
ANR	3808501	Function	TransferDaemon :: get_id	84:0:1829:1883							
ANR	3808502	FunctionDef	TransferDaemon :: get_id ()		3808501	0					
ANR	3808503	CompoundStatement		86:0:1867:1883	3808501	0					
ANR	3808504	ReturnStatement	return m_id ;	87:1:1870:1881	3808501	0	True				
ANR	3808505	Identifier	m_id		3808501	0					
ANR	3808506	ReturnType	MyString		3808501	1					
ANR	3808507	Identifier	TransferDaemon :: get_id		3808501	2					
ANR	3808508	ParameterList			3808501	3					
ANR	3808509	CFGEntryNode	ENTRY		3808501		True				
ANR	3808510	CFGExitNode	EXIT		3808501		True				
ANR	3808511	Symbol	m_id		3808501						
ANR	3808512	Function	TransferDaemon :: set_status	90:0:1886:1949							
ANR	3808513	FunctionDef	TransferDaemon :: set_status (TDMode tds)		3808512	0					
ANR	3808514	CompoundStatement		92:0:1930:1949	3808512	0					
ANR	3808515	ExpressionStatement	m_status = tds	93:1:1933:1947	3808512	0	True				
ANR	3808516	AssignmentExpression	m_status = tds		3808512	0		=			
ANR	3808517	Identifier	m_status		3808512	0					
ANR	3808518	Identifier	tds		3808512	1					
ANR	3808519	ReturnType	void		3808512	1					
ANR	3808520	Identifier	TransferDaemon :: set_status		3808512	2					
ANR	3808521	ParameterList	TDMode tds		3808512	3					
ANR	3808522	Parameter	TDMode tds	91:27:1918:1927	3808512	0	True				
ANR	3808523	ParameterType	TDMode		3808512	0					
ANR	3808524	Identifier	tds		3808512	1					
ANR	3808525	CFGEntryNode	ENTRY		3808512		True				
ANR	3808526	CFGExitNode	EXIT		3808512		True				
ANR	3808527	Symbol	tds		3808512						
ANR	3808528	Symbol	m_status		3808512						
ANR	3808529	Function	TransferDaemon :: get_status	96:0:1952:2008							
ANR	3808530	FunctionDef	TransferDaemon :: get_status ()		3808529	0					
ANR	3808531	CompoundStatement		98:0:1988:2008	3808529	0					
ANR	3808532	ReturnStatement	return m_status ;	99:1:1991:2006	3808529	0	True				
ANR	3808533	Identifier	m_status		3808529	0					
ANR	3808534	ReturnType	TDMode		3808529	1					
ANR	3808535	Identifier	TransferDaemon :: get_status		3808529	2					
ANR	3808536	ParameterList			3808529	3					
ANR	3808537	CFGEntryNode	ENTRY		3808529		True				
ANR	3808538	CFGExitNode	EXIT		3808529		True				
ANR	3808539	Symbol	m_status		3808529						
ANR	3808540	Function	TransferDaemon :: set_schedd_sinful	102:0:2011:2096							
ANR	3808541	FunctionDef	TransferDaemon :: set_schedd_sinful (MyString sinful)		3808540	0					
ANR	3808542	CompoundStatement		104:0:2067:2096	3808540	0					
ANR	3808543	ExpressionStatement	m_schedd_sinful = sinful	105:1:2070:2094	3808540	0	True				
ANR	3808544	AssignmentExpression	m_schedd_sinful = sinful		3808540	0		=			
ANR	3808545	Identifier	m_schedd_sinful		3808540	0					
ANR	3808546	Identifier	sinful		3808540	1					
ANR	3808547	ReturnType	void		3808540	1					
ANR	3808548	Identifier	TransferDaemon :: set_schedd_sinful		3808540	2					
ANR	3808549	ParameterList	MyString sinful		3808540	3					
ANR	3808550	Parameter	MyString sinful	103:34:2050:2064	3808540	0	True				
ANR	3808551	ParameterType	MyString		3808540	0					
ANR	3808552	Identifier	sinful		3808540	1					
ANR	3808553	CFGEntryNode	ENTRY		3808540		True				
ANR	3808554	CFGExitNode	EXIT		3808540		True				
ANR	3808555	Symbol	m_schedd_sinful		3808540						
ANR	3808556	Symbol	sinful		3808540						
ANR	3808557	Function	TransferDaemon :: get_schedd_sinful	108:0:2099:2171							
ANR	3808558	FunctionDef	TransferDaemon :: get_schedd_sinful ()		3808557	0					
ANR	3808559	CompoundStatement		110:0:2144:2171	3808557	0					
ANR	3808560	ReturnStatement	return m_schedd_sinful ;	111:1:2147:2169	3808557	0	True				
ANR	3808561	Identifier	m_schedd_sinful		3808557	0					
ANR	3808562	ReturnType	MyString		3808557	1					
ANR	3808563	Identifier	TransferDaemon :: get_schedd_sinful		3808557	2					
ANR	3808564	ParameterList			3808557	3					
ANR	3808565	CFGEntryNode	ENTRY		3808557		True				
ANR	3808566	CFGExitNode	EXIT		3808557		True				
ANR	3808567	Symbol	m_schedd_sinful		3808557						
ANR	3808568	Function	TransferDaemon :: set_sinful	114:0:2174:2245							
ANR	3808569	FunctionDef	TransferDaemon :: set_sinful (MyString sinful)		3808568	0					
ANR	3808570	CompoundStatement		116:0:2223:2245	3808568	0					
ANR	3808571	ExpressionStatement	m_sinful = sinful	117:1:2226:2243	3808568	0	True				
ANR	3808572	AssignmentExpression	m_sinful = sinful		3808568	0		=			
ANR	3808573	Identifier	m_sinful		3808568	0					
ANR	3808574	Identifier	sinful		3808568	1					
ANR	3808575	ReturnType	void		3808568	1					
ANR	3808576	Identifier	TransferDaemon :: set_sinful		3808568	2					
ANR	3808577	ParameterList	MyString sinful		3808568	3					
ANR	3808578	Parameter	MyString sinful	115:27:2206:2220	3808568	0	True				
ANR	3808579	ParameterType	MyString		3808568	0					
ANR	3808580	Identifier	sinful		3808568	1					
ANR	3808581	CFGEntryNode	ENTRY		3808568		True				
ANR	3808582	CFGExitNode	EXIT		3808568		True				
ANR	3808583	Symbol	sinful		3808568						
ANR	3808584	Symbol	m_sinful		3808568						
ANR	3808585	Function	TransferDaemon :: set_sinful	120:0:2248:2345							
ANR	3808586	FunctionDef	TransferDaemon :: set_sinful (char * sinful)		3808585	0					
ANR	3808587	CompoundStatement		122:0:2294:2345	3808585	0					
ANR	3808588	IdentifierDeclStatement	MyString sin ;	123:1:2297:2309	3808585	0	True				
ANR	3808589	IdentifierDecl	sin		3808585	0					
ANR	3808590	IdentifierDeclType	MyString		3808585	0					
ANR	3808591	Identifier	sin		3808585	1					
ANR	3808592	ExpressionStatement	sin = sinful	124:1:2312:2324	3808585	1	True				
ANR	3808593	AssignmentExpression	sin = sinful		3808585	0		=			
ANR	3808594	Identifier	sin		3808585	0					
ANR	3808595	Identifier	sinful		3808585	1					
ANR	3808596	ExpressionStatement	set_sinful ( sin )	126:1:2328:2343	3808585	2	True				
ANR	3808597	CallExpression	set_sinful ( sin )		3808585	0					
ANR	3808598	Callee	set_sinful		3808585	0					
ANR	3808599	Identifier	set_sinful		3808585	0					
ANR	3808600	ArgumentList	sin		3808585	1					
ANR	3808601	Argument	sin		3808585	0					
ANR	3808602	Identifier	sin		3808585	0					
ANR	3808603	ReturnType	void		3808585	1					
ANR	3808604	Identifier	TransferDaemon :: set_sinful		3808585	2					
ANR	3808605	ParameterList	char * sinful		3808585	3					
ANR	3808606	Parameter	char * sinful	121:27:2280:2291	3808585	0	True				
ANR	3808607	ParameterType	char *		3808585	0					
ANR	3808608	Identifier	sinful		3808585	1					
ANR	3808609	CFGEntryNode	ENTRY		3808585		True				
ANR	3808610	CFGExitNode	EXIT		3808585		True				
ANR	3808611	Symbol	sin		3808585						
ANR	3808612	Symbol	sinful		3808585						
ANR	3808613	Function	TransferDaemon :: get_sinful	129:0:2348:2406							
ANR	3808614	FunctionDef	TransferDaemon :: get_sinful ()		3808613	0					
ANR	3808615	CompoundStatement		131:0:2386:2406	3808613	0					
ANR	3808616	ReturnStatement	return m_sinful ;	132:1:2389:2404	3808613	0	True				
ANR	3808617	Identifier	m_sinful		3808613	0					
ANR	3808618	ReturnType	MyString		3808613	1					
ANR	3808619	Identifier	TransferDaemon :: get_sinful		3808613	2					
ANR	3808620	ParameterList			3808613	3					
ANR	3808621	CFGEntryNode	ENTRY		3808613		True				
ANR	3808622	CFGExitNode	EXIT		3808613		True				
ANR	3808623	Symbol	m_sinful		3808613						
ANR	3808624	Function	TransferDaemon :: set_update_sock	135:0:2409:2501							
ANR	3808625	FunctionDef	TransferDaemon :: set_update_sock (ReliSock * update_sock)		3808624	0					
ANR	3808626	CompoundStatement		137:0:2469:2501	3808624	0					
ANR	3808627	ExpressionStatement	m_update_sock = update_sock	138:1:2472:2499	3808624	0	True				
ANR	3808628	AssignmentExpression	m_update_sock = update_sock		3808624	0		=			
ANR	3808629	Identifier	m_update_sock		3808624	0					
ANR	3808630	Identifier	update_sock		3808624	1					
ANR	3808631	ReturnType	void		3808624	1					
ANR	3808632	Identifier	TransferDaemon :: set_update_sock		3808624	2					
ANR	3808633	ParameterList	ReliSock * update_sock		3808624	3					
ANR	3808634	Parameter	ReliSock * update_sock	136:32:2446:2466	3808624	0	True				
ANR	3808635	ParameterType	ReliSock *		3808624	0					
ANR	3808636	Identifier	update_sock		3808624	1					
ANR	3808637	CFGEntryNode	ENTRY		3808624		True				
ANR	3808638	CFGExitNode	EXIT		3808624		True				
ANR	3808639	Symbol	update_sock		3808624						
ANR	3808640	Symbol	m_update_sock		3808624						
ANR	3808641	Function	TransferDaemon :: get_update_sock	141:0:2504:2577							
ANR	3808642	FunctionDef	TransferDaemon :: get_update_sock ()		3808641	0					
ANR	3808643	CompoundStatement		143:0:2552:2577	3808641	0					
ANR	3808644	ReturnStatement	return m_update_sock ;	144:1:2555:2575	3808641	0	True				
ANR	3808645	Identifier	m_update_sock		3808641	0					
ANR	3808646	ReturnType	ReliSock *		3808641	1					
ANR	3808647	Identifier	TransferDaemon :: get_update_sock		3808641	2					
ANR	3808648	ParameterList			3808641	3					
ANR	3808649	CFGEntryNode	ENTRY		3808641		True				
ANR	3808650	CFGExitNode	EXIT		3808641		True				
ANR	3808651	Symbol	m_update_sock		3808641						
ANR	3808652	Function	TransferDaemon :: set_treq_sock	147:0:2580:2664							
ANR	3808653	FunctionDef	TransferDaemon :: set_treq_sock (ReliSock * treq_sock)		3808652	0					
ANR	3808654	CompoundStatement		149:0:2636:2664	3808652	0					
ANR	3808655	ExpressionStatement	m_treq_sock = treq_sock	150:1:2639:2662	3808652	0	True				
ANR	3808656	AssignmentExpression	m_treq_sock = treq_sock		3808652	0		=			
ANR	3808657	Identifier	m_treq_sock		3808652	0					
ANR	3808658	Identifier	treq_sock		3808652	1					
ANR	3808659	ReturnType	void		3808652	1					
ANR	3808660	Identifier	TransferDaemon :: set_treq_sock		3808652	2					
ANR	3808661	ParameterList	ReliSock * treq_sock		3808652	3					
ANR	3808662	Parameter	ReliSock * treq_sock	148:30:2615:2633	3808652	0	True				
ANR	3808663	ParameterType	ReliSock *		3808652	0					
ANR	3808664	Identifier	treq_sock		3808652	1					
ANR	3808665	CFGEntryNode	ENTRY		3808652		True				
ANR	3808666	CFGExitNode	EXIT		3808652		True				
ANR	3808667	Symbol	m_treq_sock		3808652						
ANR	3808668	Symbol	treq_sock		3808652						
ANR	3808669	Function	TransferDaemon :: get_treq_sock	153:0:2667:2736							
ANR	3808670	FunctionDef	TransferDaemon :: get_treq_sock ()		3808669	0					
ANR	3808671	CompoundStatement		155:0:2713:2736	3808669	0					
ANR	3808672	ReturnStatement	return m_treq_sock ;	156:1:2716:2734	3808669	0	True				
ANR	3808673	Identifier	m_treq_sock		3808669	0					
ANR	3808674	ReturnType	ReliSock *		3808669	1					
ANR	3808675	Identifier	TransferDaemon :: get_treq_sock		3808669	2					
ANR	3808676	ParameterList			3808669	3					
ANR	3808677	CFGEntryNode	ENTRY		3808669		True				
ANR	3808678	CFGExitNode	EXIT		3808669		True				
ANR	3808679	Symbol	m_treq_sock		3808669						
ANR	3808680	Function	TransferDaemon :: add_transfer_request	159:0:2739:2836							
ANR	3808681	FunctionDef	TransferDaemon :: add_transfer_request (TransferRequest * treq)		3808680	0					
ANR	3808682	CompoundStatement		161:0:2804:2836	3808680	0					
ANR	3808683	ReturnStatement	return m_treqs . Append ( treq ) ;	162:1:2807:2834	3808680	0	True				
ANR	3808684	CallExpression	m_treqs . Append ( treq )		3808680	0					
ANR	3808685	Callee	m_treqs . Append		3808680	0					
ANR	3808686	MemberAccess	m_treqs . Append		3808680	0					
ANR	3808687	Identifier	m_treqs		3808680	0					
ANR	3808688	Identifier	Append		3808680	1					
ANR	3808689	ArgumentList	treq		3808680	1					
ANR	3808690	Argument	treq		3808680	0					
ANR	3808691	Identifier	treq		3808680	0					
ANR	3808692	ReturnType	bool		3808680	1					
ANR	3808693	Identifier	TransferDaemon :: add_transfer_request		3808680	2					
ANR	3808694	ParameterList	TransferRequest * treq		3808680	3					
ANR	3808695	Parameter	TransferRequest * treq	160:37:2781:2801	3808680	0	True				
ANR	3808696	ParameterType	TransferRequest *		3808680	0					
ANR	3808697	Identifier	treq		3808680	1					
ANR	3808698	CFGEntryNode	ENTRY		3808680		True				
ANR	3808699	CFGExitNode	EXIT		3808680		True				
ANR	3808700	Symbol	m_treqs . Append		3808680						
ANR	3808701	Symbol	treq		3808680						
ANR	3808702	Symbol	m_treqs		3808680						
ANR	3808703	Function	TransferDaemon :: push_transfer_requests	165:0:2839:9616							
ANR	3808704	FunctionDef	TransferDaemon :: push_transfer_requests ()		3808703	0					
ANR	3808705	CompoundStatement		167:0:2889:9616	3808703	0					
ANR	3808706	IdentifierDeclStatement	TransferRequest * treq = NULL ;	168:1:2892:2920	3808703	0	True				
ANR	3808707	IdentifierDecl	* treq = NULL		3808703	0					
ANR	3808708	IdentifierDeclType	TransferRequest *		3808703	0					
ANR	3808709	Identifier	treq		3808703	1					
ANR	3808710	AssignmentExpression	* treq = NULL		3808703	2		=			
ANR	3808711	Identifier	NULL		3808703	0					
ANR	3808712	Identifier	NULL		3808703	1					
ANR	3808713	IdentifierDeclStatement	TreqAction ret ;	169:1:2923:2937	3808703	1	True				
ANR	3808714	IdentifierDecl	ret		3808703	0					
ANR	3808715	IdentifierDeclType	TreqAction		3808703	0					
ANR	3808716	Identifier	ret		3808703	1					
ANR	3808717	IdentifierDeclStatement	MyString capability ;	170:1:2940:2959	3808703	2	True				
ANR	3808718	IdentifierDecl	capability		3808703	0					
ANR	3808719	IdentifierDeclType	MyString		3808703	0					
ANR	3808720	Identifier	capability		3808703	1					
ANR	3808721	IdentifierDeclStatement	MyString rej_reason ;	171:1:2962:2981	3808703	3	True				
ANR	3808722	IdentifierDecl	rej_reason		3808703	0					
ANR	3808723	IdentifierDeclType	MyString		3808703	0					
ANR	3808724	Identifier	rej_reason		3808703	1					
ANR	3808725	IdentifierDeclStatement	"char encap [ ] = ""ENCAPSULATION_METHOD_OLD_CLASSADS\\n"" ;"	172:1:2984:3036	3808703	4	True				
ANR	3808726	IdentifierDecl	"encap [ ] = ""ENCAPSULATION_METHOD_OLD_CLASSADS\\n"""		3808703	0					
ANR	3808727	IdentifierDeclType	char [ ]		3808703	0					
ANR	3808728	Identifier	encap		3808703	1					
ANR	3808729	AssignmentExpression	"encap [ ] = ""ENCAPSULATION_METHOD_OLD_CLASSADS\\n"""		3808703	2		=			
ANR	3808730	Identifier	encap		3808703	0					
ANR	3808731	PrimaryExpression	"""ENCAPSULATION_METHOD_OLD_CLASSADS\\n"""		3808703	1					
ANR	3808732	IdentifierDeclStatement	ClassAd respad ;	173:1:3039:3053	3808703	5	True				
ANR	3808733	IdentifierDecl	respad		3808703	0					
ANR	3808734	IdentifierDeclType	ClassAd		3808703	0					
ANR	3808735	Identifier	respad		3808703	1					
ANR	3808736	IdentifierDeclStatement	int invalid ;	174:1:3056:3067	3808703	6	True				
ANR	3808737	IdentifierDecl	invalid		3808703	0					
ANR	3808738	IdentifierDeclType	int		3808703	0					
ANR	3808739	Identifier	invalid		3808703	1					
ANR	3808740	ExpressionStatement	"dprintf ( D_ALWAYS , ""Entering TransferDaemon::push_transfer_requests()\\n"" )"	176:1:3071:3146	3808703	7	True				
ANR	3808741	CallExpression	"dprintf ( D_ALWAYS , ""Entering TransferDaemon::push_transfer_requests()\\n"" )"		3808703	0					
ANR	3808742	Callee	dprintf		3808703	0					
ANR	3808743	Identifier	dprintf		3808703	0					
ANR	3808744	ArgumentList	D_ALWAYS		3808703	1					
ANR	3808745	Argument	D_ALWAYS		3808703	0					
ANR	3808746	Identifier	D_ALWAYS		3808703	0					
ANR	3808747	Argument	"""Entering TransferDaemon::push_transfer_requests()\\n"""		3808703	1					
ANR	3808748	PrimaryExpression	"""Entering TransferDaemon::push_transfer_requests()\\n"""		3808703	0					
ANR	3808749	IfStatement	if ( m_treq_sock == NULL )		3808703	8					
ANR	3808750	Condition	m_treq_sock == NULL	179:5:3154:3172	3808703	0	True				
ANR	3808751	EqualityExpression	m_treq_sock == NULL		3808703	0		==			
ANR	3808752	Identifier	m_treq_sock		3808703	0					
ANR	3808753	Identifier	NULL		3808703	1					
ANR	3808754	CompoundStatement		13:26:285:285	3808703	1					
ANR	3808755	Statement	EXCEPT	180:2:3179:3184	3808703	0	True				
ANR	3808756	Statement	(	180:8:3185:3185	3808703	1	True				
ANR	3808757	Statement	"""TransferDaemon::push_transfer_requests(): TD object was not """	180:9:3186:3247	3808703	2	True				
ANR	3808758	Statement	"""up to have a real daemon backend prior to pushing requests"""	181:4:3253:3312	3808703	3	True				
ANR	3808759	Statement	)	181:64:3313:3313	3808703	4	True				
ANR	3808760	ExpressionStatement		181:65:3314:3314	3808703	5	True				
ANR	3808761	ExpressionStatement	m_treqs . Rewind ( )	185:1:3363:3379	3808703	9	True				
ANR	3808762	CallExpression	m_treqs . Rewind ( )		3808703	0					
ANR	3808763	Callee	m_treqs . Rewind		3808703	0					
ANR	3808764	MemberAccess	m_treqs . Rewind		3808703	0					
ANR	3808765	Identifier	m_treqs		3808703	0					
ANR	3808766	Identifier	Rewind		3808703	1					
ANR	3808767	ArgumentList			3808703	1					
ANR	3808768	WhileStatement	while ( m_treqs . Next ( treq ) )		3808703	10					
ANR	3808769	Condition	m_treqs . Next ( treq )	186:7:3388:3405	3808703	0	True				
ANR	3808770	CallExpression	m_treqs . Next ( treq )		3808703	0					
ANR	3808771	Callee	m_treqs . Next		3808703	0					
ANR	3808772	MemberAccess	m_treqs . Next		3808703	0					
ANR	3808773	Identifier	m_treqs		3808703	0					
ANR	3808774	Identifier	Next		3808703	1					
ANR	3808775	ArgumentList	treq		3808703	1					
ANR	3808776	Argument	treq		3808703	0					
ANR	3808777	Identifier	treq		3808703	0					
ANR	3808778	CompoundStatement		21:1:519:519	3808703	1					
ANR	3808779	ExpressionStatement	"ret = treq -> call_pre_push_callback ( treq , this )"	196:2:3775:3821	3808703	0	True				
ANR	3808780	AssignmentExpression	"ret = treq -> call_pre_push_callback ( treq , this )"		3808703	0		=			
ANR	3808781	Identifier	ret		3808703	0					
ANR	3808782	CallExpression	"treq -> call_pre_push_callback ( treq , this )"		3808703	1					
ANR	3808783	Callee	treq -> call_pre_push_callback		3808703	0					
ANR	3808784	PtrMemberAccess	treq -> call_pre_push_callback		3808703	0					
ANR	3808785	Identifier	treq		3808703	0					
ANR	3808786	Identifier	call_pre_push_callback		3808703	1					
ANR	3808787	ArgumentList	treq		3808703	1					
ANR	3808788	Argument	treq		3808703	0					
ANR	3808789	Identifier	treq		3808703	0					
ANR	3808790	Argument	this		3808703	1					
ANR	3808791	Identifier	this		3808703	0					
ANR	3808792	SwitchStatement	switch ( ret )		3808703	1					
ANR	3808793	Condition	ret	198:9:3833:3835	3808703	0	True				
ANR	3808794	Identifier	ret		3808703	0					
ANR	3808795	CompoundStatement		32:14:948:948	3808703	1					
ANR	3808796	Label	case TREQ_ACTION_CONTINUE :	199:3:3843:3868	3808703	0	True				
ANR	3808797	Identifier	TREQ_ACTION_CONTINUE		3808703	0					
ANR	3808798	BreakStatement	break ;	202:4:3995:4000	3808703	1	True				
ANR	3808799	Label	case TREQ_ACTION_FORGET :	204:3:4006:4029	3808703	2	True				
ANR	3808800	Identifier	TREQ_ACTION_FORGET		3808703	0					
ANR	3808801	ExpressionStatement	m_treqs . DeleteCurrent ( )	210:4:4291:4314	3808703	3	True				
ANR	3808802	CallExpression	m_treqs . DeleteCurrent ( )		3808703	0					
ANR	3808803	Callee	m_treqs . DeleteCurrent		3808703	0					
ANR	3808804	MemberAccess	m_treqs . DeleteCurrent		3808703	0					
ANR	3808805	Identifier	m_treqs		3808703	0					
ANR	3808806	Identifier	DeleteCurrent		3808703	1					
ANR	3808807	ArgumentList			3808703	1					
ANR	3808808	ContinueStatement	continue ;	214:4:4420:4428	3808703	4	True				
ANR	3808809	BreakStatement	break ;	216:4:4435:4440	3808703	5	True				
ANR	3808810	Label	case TREQ_ACTION_TERMINATE :	218:3:4446:4472	3808703	6	True				
ANR	3808811	Identifier	TREQ_ACTION_TERMINATE		3808703	0					
ANR	3808812	ExpressionStatement	m_treqs . DeleteCurrent ( )	221:4:4577:4600	3808703	7	True				
ANR	3808813	CallExpression	m_treqs . DeleteCurrent ( )		3808703	0					
ANR	3808814	Callee	m_treqs . DeleteCurrent		3808703	0					
ANR	3808815	MemberAccess	m_treqs . DeleteCurrent		3808703	0					
ANR	3808816	Identifier	m_treqs		3808703	0					
ANR	3808817	Identifier	DeleteCurrent		3808703	1					
ANR	3808818	ArgumentList			3808703	1					
ANR	3808819	Statement	delete	223:4:4607:4612	3808703	8	True				
ANR	3808820	ExpressionStatement	treq	223:11:4614:4618	3808703	9	True				
ANR	3808821	Identifier	treq		3808703	0					
ANR	3808822	ContinueStatement	continue ;	227:4:4724:4732	3808703	10	True				
ANR	3808823	BreakStatement	break ;	229:4:4739:4744	3808703	11	True				
ANR	3808824	Label	default :	231:3:4750:4757	3808703	12	True				
ANR	3808825	Identifier	default		3808703	0					
ANR	3808826	Statement	EXCEPT	232:4:4763:4768	3808703	13	True				
ANR	3808827	Statement	(	232:10:4769:4769	3808703	14	True				
ANR	3808828	Statement	"""TransferDaemon::push_transfer_requests(): Programmer """	232:11:4770:4824	3808703	15	True				
ANR	3808829	Statement	"""Error. Unknown pre TreqAction\\n"""	233:5:4831:4863	3808703	16	True				
ANR	3808830	Statement	)	233:38:4864:4864	3808703	17	True				
ANR	3808831	ExpressionStatement		233:39:4865:4865	3808703	18	True				
ANR	3808832	BreakStatement	break ;	234:4:4871:4876	3808703	19	True				
ANR	3808833	ExpressionStatement	m_treq_sock -> encode ( )	242:2:5099:5120	3808703	2	True				
ANR	3808834	CallExpression	m_treq_sock -> encode ( )		3808703	0					
ANR	3808835	Callee	m_treq_sock -> encode		3808703	0					
ANR	3808836	PtrMemberAccess	m_treq_sock -> encode		3808703	0					
ANR	3808837	Identifier	m_treq_sock		3808703	0					
ANR	3808838	Identifier	encode		3808703	1					
ANR	3808839	ArgumentList			3808703	1					
ANR	3808840	ExpressionStatement	m_treq_sock -> code ( ( unsigned char * ) encap )	243:2:5124:5165	3808703	3	True				
ANR	3808841	CallExpression	m_treq_sock -> code ( ( unsigned char * ) encap )		3808703	0					
ANR	3808842	Callee	m_treq_sock -> code		3808703	0					
ANR	3808843	PtrMemberAccess	m_treq_sock -> code		3808703	0					
ANR	3808844	Identifier	m_treq_sock		3808703	0					
ANR	3808845	Identifier	code		3808703	1					
ANR	3808846	ArgumentList	( unsigned char * ) encap		3808703	1					
ANR	3808847	Argument	( unsigned char * ) encap		3808703	0					
ANR	3808848	CastExpression	( unsigned char * ) encap		3808703	0					
ANR	3808849	CastTarget	unsigned char *		3808703	0					
ANR	3808850	Identifier	encap		3808703	1					
ANR	3808851	ExpressionStatement	m_treq_sock -> end_of_message ( )	244:2:5169:5198	3808703	4	True				
ANR	3808852	CallExpression	m_treq_sock -> end_of_message ( )		3808703	0					
ANR	3808853	Callee	m_treq_sock -> end_of_message		3808703	0					
ANR	3808854	PtrMemberAccess	m_treq_sock -> end_of_message		3808703	0					
ANR	3808855	Identifier	m_treq_sock		3808703	0					
ANR	3808856	Identifier	end_of_message		3808703	1					
ANR	3808857	ArgumentList			3808703	1					
ANR	3808858	ExpressionStatement	treq -> put ( m_treq_sock )	249:2:5365:5387	3808703	5	True				
ANR	3808859	CallExpression	treq -> put ( m_treq_sock )		3808703	0					
ANR	3808860	Callee	treq -> put		3808703	0					
ANR	3808861	PtrMemberAccess	treq -> put		3808703	0					
ANR	3808862	Identifier	treq		3808703	0					
ANR	3808863	Identifier	put		3808703	1					
ANR	3808864	ArgumentList	m_treq_sock		3808703	1					
ANR	3808865	Argument	m_treq_sock		3808703	0					
ANR	3808866	Identifier	m_treq_sock		3808703	0					
ANR	3808867	ExpressionStatement	m_treq_sock -> end_of_message ( )	250:2:5391:5420	3808703	6	True				
ANR	3808868	CallExpression	m_treq_sock -> end_of_message ( )		3808703	0					
ANR	3808869	Callee	m_treq_sock -> end_of_message		3808703	0					
ANR	3808870	PtrMemberAccess	m_treq_sock -> end_of_message		3808703	0					
ANR	3808871	Identifier	m_treq_sock		3808703	0					
ANR	3808872	Identifier	end_of_message		3808703	1					
ANR	3808873	ArgumentList			3808703	1					
ANR	3808874	ExpressionStatement	m_treq_sock -> decode ( )	257:2:5629:5650	3808703	7	True				
ANR	3808875	CallExpression	m_treq_sock -> decode ( )		3808703	0					
ANR	3808876	Callee	m_treq_sock -> decode		3808703	0					
ANR	3808877	PtrMemberAccess	m_treq_sock -> decode		3808703	0					
ANR	3808878	Identifier	m_treq_sock		3808703	0					
ANR	3808879	Identifier	decode		3808703	1					
ANR	3808880	ArgumentList			3808703	1					
ANR	3808881	ExpressionStatement	respad . initFromStream ( * m_treq_sock )	279:2:6380:6415	3808703	8	True				
ANR	3808882	CallExpression	respad . initFromStream ( * m_treq_sock )		3808703	0					
ANR	3808883	Callee	respad . initFromStream		3808703	0					
ANR	3808884	MemberAccess	respad . initFromStream		3808703	0					
ANR	3808885	Identifier	respad		3808703	0					
ANR	3808886	Identifier	initFromStream		3808703	1					
ANR	3808887	ArgumentList	* m_treq_sock		3808703	1					
ANR	3808888	Argument	* m_treq_sock		3808703	0					
ANR	3808889	UnaryOperationExpression	* m_treq_sock		3808703	0					
ANR	3808890	UnaryOperator	*		3808703	0					
ANR	3808891	Identifier	m_treq_sock		3808703	1					
ANR	3808892	ExpressionStatement	m_treq_sock -> end_of_message ( )	280:2:6419:6448	3808703	9	True				
ANR	3808893	CallExpression	m_treq_sock -> end_of_message ( )		3808703	0					
ANR	3808894	Callee	m_treq_sock -> end_of_message		3808703	0					
ANR	3808895	PtrMemberAccess	m_treq_sock -> end_of_message		3808703	0					
ANR	3808896	Identifier	m_treq_sock		3808703	0					
ANR	3808897	Identifier	end_of_message		3808703	1					
ANR	3808898	ArgumentList			3808703	1					
ANR	3808899	ExpressionStatement	"respad . LookupInteger ( ATTR_TREQ_INVALID_REQUEST , invalid )"	286:2:6609:6665	3808703	10	True				
ANR	3808900	CallExpression	"respad . LookupInteger ( ATTR_TREQ_INVALID_REQUEST , invalid )"		3808703	0					
ANR	3808901	Callee	respad . LookupInteger		3808703	0					
ANR	3808902	MemberAccess	respad . LookupInteger		3808703	0					
ANR	3808903	Identifier	respad		3808703	0					
ANR	3808904	Identifier	LookupInteger		3808703	1					
ANR	3808905	ArgumentList	ATTR_TREQ_INVALID_REQUEST		3808703	1					
ANR	3808906	Argument	ATTR_TREQ_INVALID_REQUEST		3808703	0					
ANR	3808907	Identifier	ATTR_TREQ_INVALID_REQUEST		3808703	0					
ANR	3808908	Argument	invalid		3808703	1					
ANR	3808909	Identifier	invalid		3808703	0					
ANR	3808910	IfStatement	if ( invalid == FALSE )		3808703	11					
ANR	3808911	Condition	invalid == FALSE	287:6:6673:6688	3808703	0	True				
ANR	3808912	EqualityExpression	invalid == FALSE		3808703	0		==			
ANR	3808913	Identifier	invalid		3808703	0					
ANR	3808914	Identifier	FALSE		3808703	1					
ANR	3808915	CompoundStatement		121:24:3801:3801	3808703	1					
ANR	3808916	ExpressionStatement	"dprintf ( D_ALWAYS , ""Transferd said request was valid.\\n"" )"	288:3:6696:6752	3808703	0	True				
ANR	3808917	CallExpression	"dprintf ( D_ALWAYS , ""Transferd said request was valid.\\n"" )"		3808703	0					
ANR	3808918	Callee	dprintf		3808703	0					
ANR	3808919	Identifier	dprintf		3808703	0					
ANR	3808920	ArgumentList	D_ALWAYS		3808703	1					
ANR	3808921	Argument	D_ALWAYS		3808703	0					
ANR	3808922	Identifier	D_ALWAYS		3808703	0					
ANR	3808923	Argument	"""Transferd said request was valid.\\n"""		3808703	1					
ANR	3808924	PrimaryExpression	"""Transferd said request was valid.\\n"""		3808703	0					
ANR	3808925	ExpressionStatement	"respad . LookupString ( ATTR_TREQ_CAPABILITY , capability )"	290:3:6758:6811	3808703	1	True				
ANR	3808926	CallExpression	"respad . LookupString ( ATTR_TREQ_CAPABILITY , capability )"		3808703	0					
ANR	3808927	Callee	respad . LookupString		3808703	0					
ANR	3808928	MemberAccess	respad . LookupString		3808703	0					
ANR	3808929	Identifier	respad		3808703	0					
ANR	3808930	Identifier	LookupString		3808703	1					
ANR	3808931	ArgumentList	ATTR_TREQ_CAPABILITY		3808703	1					
ANR	3808932	Argument	ATTR_TREQ_CAPABILITY		3808703	0					
ANR	3808933	Identifier	ATTR_TREQ_CAPABILITY		3808703	0					
ANR	3808934	Argument	capability		3808703	1					
ANR	3808935	Identifier	capability		3808703	0					
ANR	3808936	ExpressionStatement	treq -> set_capability ( capability )	291:3:6816:6848	3808703	2	True				
ANR	3808937	CallExpression	treq -> set_capability ( capability )		3808703	0					
ANR	3808938	Callee	treq -> set_capability		3808703	0					
ANR	3808939	PtrMemberAccess	treq -> set_capability		3808703	0					
ANR	3808940	Identifier	treq		3808703	0					
ANR	3808941	Identifier	set_capability		3808703	1					
ANR	3808942	ArgumentList	capability		3808703	1					
ANR	3808943	Argument	capability		3808703	0					
ANR	3808944	Identifier	capability		3808703	0					
ANR	3808945	ExpressionStatement	m_treqs . DeleteCurrent ( )	295:3:6953:6976	3808703	3	True				
ANR	3808946	CallExpression	m_treqs . DeleteCurrent ( )		3808703	0					
ANR	3808947	Callee	m_treqs . DeleteCurrent		3808703	0					
ANR	3808948	MemberAccess	m_treqs . DeleteCurrent		3808703	0					
ANR	3808949	Identifier	m_treqs		3808703	0					
ANR	3808950	Identifier	DeleteCurrent		3808703	1					
ANR	3808951	ArgumentList			3808703	1					
ANR	3808952	ExpressionStatement	"m_treqs_in_progress . insert ( treq -> get_capability ( ) , treq )"	296:3:6981:7037	3808703	4	True				
ANR	3808953	CallExpression	"m_treqs_in_progress . insert ( treq -> get_capability ( ) , treq )"		3808703	0					
ANR	3808954	Callee	m_treqs_in_progress . insert		3808703	0					
ANR	3808955	MemberAccess	m_treqs_in_progress . insert		3808703	0					
ANR	3808956	Identifier	m_treqs_in_progress		3808703	0					
ANR	3808957	Identifier	insert		3808703	1					
ANR	3808958	ArgumentList	treq -> get_capability ( )		3808703	1					
ANR	3808959	Argument	treq -> get_capability ( )		3808703	0					
ANR	3808960	CallExpression	treq -> get_capability ( )		3808703	0					
ANR	3808961	Callee	treq -> get_capability		3808703	0					
ANR	3808962	PtrMemberAccess	treq -> get_capability		3808703	0					
ANR	3808963	Identifier	treq		3808703	0					
ANR	3808964	Identifier	get_capability		3808703	1					
ANR	3808965	ArgumentList			3808703	1					
ANR	3808966	Argument	treq		3808703	1					
ANR	3808967	Identifier	treq		3808703	0					
ANR	3808968	ElseStatement	else		3808703	0					
ANR	3808969	CompoundStatement		132:9:4159:4159	3808703	0					
ANR	3808970	ExpressionStatement	"dprintf ( D_ALWAYS , ""Transferd said request was invalid.\\n"" )"	299:3:7054:7112	3808703	0	True				
ANR	3808971	CallExpression	"dprintf ( D_ALWAYS , ""Transferd said request was invalid.\\n"" )"		3808703	0					
ANR	3808972	Callee	dprintf		3808703	0					
ANR	3808973	Identifier	dprintf		3808703	0					
ANR	3808974	ArgumentList	D_ALWAYS		3808703	1					
ANR	3808975	Argument	D_ALWAYS		3808703	0					
ANR	3808976	Identifier	D_ALWAYS		3808703	0					
ANR	3808977	Argument	"""Transferd said request was invalid.\\n"""		3808703	1					
ANR	3808978	PrimaryExpression	"""Transferd said request was invalid.\\n"""		3808703	0					
ANR	3808979	ExpressionStatement	treq -> set_rejected ( true )	302:3:7177:7201	3808703	1	True				
ANR	3808980	CallExpression	treq -> set_rejected ( true )		3808703	0					
ANR	3808981	Callee	treq -> set_rejected		3808703	0					
ANR	3808982	PtrMemberAccess	treq -> set_rejected		3808703	0					
ANR	3808983	Identifier	treq		3808703	0					
ANR	3808984	Identifier	set_rejected		3808703	1					
ANR	3808985	ArgumentList	true		3808703	1					
ANR	3808986	Argument	true		3808703	0					
ANR	3808987	Identifier	true		3808703	0					
ANR	3808988	ExpressionStatement	"respad . LookupString ( ATTR_TREQ_INVALID_REASON , rej_reason )"	303:3:7206:7263	3808703	2	True				
ANR	3808989	CallExpression	"respad . LookupString ( ATTR_TREQ_INVALID_REASON , rej_reason )"		3808703	0					
ANR	3808990	Callee	respad . LookupString		3808703	0					
ANR	3808991	MemberAccess	respad . LookupString		3808703	0					
ANR	3808992	Identifier	respad		3808703	0					
ANR	3808993	Identifier	LookupString		3808703	1					
ANR	3808994	ArgumentList	ATTR_TREQ_INVALID_REASON		3808703	1					
ANR	3808995	Argument	ATTR_TREQ_INVALID_REASON		3808703	0					
ANR	3808996	Identifier	ATTR_TREQ_INVALID_REASON		3808703	0					
ANR	3808997	Argument	rej_reason		3808703	1					
ANR	3808998	Identifier	rej_reason		3808703	0					
ANR	3808999	ExpressionStatement	treq -> set_rejected_reason ( rej_reason )	304:3:7268:7305	3808703	3	True				
ANR	3809000	CallExpression	treq -> set_rejected_reason ( rej_reason )		3808703	0					
ANR	3809001	Callee	treq -> set_rejected_reason		3808703	0					
ANR	3809002	PtrMemberAccess	treq -> set_rejected_reason		3808703	0					
ANR	3809003	Identifier	treq		3808703	0					
ANR	3809004	Identifier	set_rejected_reason		3808703	1					
ANR	3809005	ArgumentList	rej_reason		3808703	1					
ANR	3809006	Argument	rej_reason		3808703	0					
ANR	3809007	Identifier	rej_reason		3808703	0					
ANR	3809008	ExpressionStatement	"ret = treq -> call_post_push_callback ( treq , this )"	314:2:7642:7689	3808703	12	True				
ANR	3809009	AssignmentExpression	"ret = treq -> call_post_push_callback ( treq , this )"		3808703	0		=			
ANR	3809010	Identifier	ret		3808703	0					
ANR	3809011	CallExpression	"treq -> call_post_push_callback ( treq , this )"		3808703	1					
ANR	3809012	Callee	treq -> call_post_push_callback		3808703	0					
ANR	3809013	PtrMemberAccess	treq -> call_post_push_callback		3808703	0					
ANR	3809014	Identifier	treq		3808703	0					
ANR	3809015	Identifier	call_post_push_callback		3808703	1					
ANR	3809016	ArgumentList	treq		3808703	1					
ANR	3809017	Argument	treq		3808703	0					
ANR	3809018	Identifier	treq		3808703	0					
ANR	3809019	Argument	this		3808703	1					
ANR	3809020	Identifier	this		3808703	0					
ANR	3809021	SwitchStatement	switch ( ret )		3808703	13					
ANR	3809022	Condition	ret	321:9:7971:7973	3808703	0	True				
ANR	3809023	Identifier	ret		3808703	0					
ANR	3809024	CompoundStatement		155:14:5086:5086	3808703	1					
ANR	3809025	Label	case TREQ_ACTION_CONTINUE :	322:3:7981:8006	3808703	0	True				
ANR	3809026	Identifier	TREQ_ACTION_CONTINUE		3808703	0					
ANR	3809027	BreakStatement	break ;	325:4:8134:8139	3808703	1	True				
ANR	3809028	Label	case TREQ_ACTION_FORGET :	327:3:8145:8168	3808703	2	True				
ANR	3809029	Identifier	TREQ_ACTION_FORGET		3808703	0					
ANR	3809030	ExpressionStatement	m_treqs . DeleteCurrent ( )	331:4:8352:8375	3808703	3	True				
ANR	3809031	CallExpression	m_treqs . DeleteCurrent ( )		3808703	0					
ANR	3809032	Callee	m_treqs . DeleteCurrent		3808703	0					
ANR	3809033	MemberAccess	m_treqs . DeleteCurrent		3808703	0					
ANR	3809034	Identifier	m_treqs		3808703	0					
ANR	3809035	Identifier	DeleteCurrent		3808703	1					
ANR	3809036	ArgumentList			3808703	1					
ANR	3809037	Statement	EXCEPT	337:4:8533:8538	3808703	4	True				
ANR	3809038	Statement	(	337:10:8539:8539	3808703	5	True				
ANR	3809039	Statement	"""TransferDaemon::push_transfer_requests(): NOT """	337:11:8540:8587	3808703	6	True				
ANR	3809040	Statement	"""IMPLEMENTED: aborting an treq after the push to the """	338:5:8594:8647	3808703	7	True				
ANR	3809041	Statement	"""transferd. To implement this functionality, you must """	339:5:8654:8708	3808703	8	True				
ANR	3809042	Statement	"""contact the transferd here and have it also abort """	340:5:8715:8766	3808703	9	True				
ANR	3809043	Statement	"""the request."""	341:5:8773:8786	3808703	10	True				
ANR	3809044	Statement	)	341:19:8787:8787	3808703	11	True				
ANR	3809045	ExpressionStatement		341:20:8788:8788	3808703	12	True				
ANR	3809046	BreakStatement	break ;	343:4:8795:8800	3808703	13	True				
ANR	3809047	Label	case TREQ_ACTION_TERMINATE :	345:3:8806:8832	3808703	14	True				
ANR	3809048	Identifier	TREQ_ACTION_TERMINATE		3808703	0					
ANR	3809049	ExpressionStatement	m_treqs . DeleteCurrent ( )	348:4:8917:8940	3808703	15	True				
ANR	3809050	CallExpression	m_treqs . DeleteCurrent ( )		3808703	0					
ANR	3809051	Callee	m_treqs . DeleteCurrent		3808703	0					
ANR	3809052	MemberAccess	m_treqs . DeleteCurrent		3808703	0					
ANR	3809053	Identifier	m_treqs		3808703	0					
ANR	3809054	Identifier	DeleteCurrent		3808703	1					
ANR	3809055	ArgumentList			3808703	1					
ANR	3809056	Statement	delete	349:4:8946:8951	3808703	16	True				
ANR	3809057	ExpressionStatement	treq	349:11:8953:8957	3808703	17	True				
ANR	3809058	Identifier	treq		3808703	0					
ANR	3809059	Statement	EXCEPT	355:4:9115:9120	3808703	18	True				
ANR	3809060	Statement	(	355:10:9121:9121	3808703	19	True				
ANR	3809061	Statement	"""TransferDaemon::push_transfer_requests(): NOT """	355:11:9122:9169	3808703	20	True				
ANR	3809062	Statement	"""IMPLEMENTED: aborting an treq after the push to the """	356:5:9176:9229	3808703	21	True				
ANR	3809063	Statement	"""transferd. To implement this functionality, you must """	357:5:9236:9290	3808703	22	True				
ANR	3809064	Statement	"""contact the transferd here and have it also abort """	358:5:9297:9348	3808703	23	True				
ANR	3809065	Statement	"""the request."""	359:5:9355:9368	3808703	24	True				
ANR	3809066	Statement	)	359:19:9369:9369	3808703	25	True				
ANR	3809067	ExpressionStatement		359:20:9370:9370	3808703	26	True				
ANR	3809068	BreakStatement	break ;	361:4:9377:9382	3808703	27	True				
ANR	3809069	Label	default :	363:3:9388:9395	3808703	28	True				
ANR	3809070	Identifier	default		3808703	0					
ANR	3809071	Statement	EXCEPT	364:4:9401:9406	3808703	29	True				
ANR	3809072	Statement	(	364:10:9407:9407	3808703	30	True				
ANR	3809073	Statement	"""TransferDaemon::push_transfer_requests(): Programmer """	364:11:9408:9462	3808703	31	True				
ANR	3809074	Statement	"""Error. Unknown post TreqAction\\n"""	365:5:9469:9502	3808703	32	True				
ANR	3809075	Statement	)	365:39:9503:9503	3808703	33	True				
ANR	3809076	ExpressionStatement		365:40:9504:9504	3808703	34	True				
ANR	3809077	BreakStatement	break ;	366:4:9510:9515	3808703	35	True				
ANR	3809078	ExpressionStatement	"dprintf ( D_ALWAYS , ""Leaving TransferDaemon::push_transfer_requests()\\n"" )"	370:1:9526:9599	3808703	11	True				
ANR	3809079	CallExpression	"dprintf ( D_ALWAYS , ""Leaving TransferDaemon::push_transfer_requests()\\n"" )"		3808703	0					
ANR	3809080	Callee	dprintf		3808703	0					
ANR	3809081	Identifier	dprintf		3808703	0					
ANR	3809082	ArgumentList	D_ALWAYS		3808703	1					
ANR	3809083	Argument	D_ALWAYS		3808703	0					
ANR	3809084	Identifier	D_ALWAYS		3808703	0					
ANR	3809085	Argument	"""Leaving TransferDaemon::push_transfer_requests()\\n"""		3808703	1					
ANR	3809086	PrimaryExpression	"""Leaving TransferDaemon::push_transfer_requests()\\n"""		3808703	0					
ANR	3809087	ReturnStatement	return true ;	373:1:9603:9614	3808703	12	True				
ANR	3809088	Identifier	true		3808703	0					
ANR	3809089	ReturnType	bool		3808703	1					
ANR	3809090	Identifier	TransferDaemon :: push_transfer_requests		3808703	2					
ANR	3809091	ParameterList			3808703	3					
ANR	3809092	CFGEntryNode	ENTRY		3808703		True				
ANR	3809093	CFGExitNode	EXIT		3808703		True				
ANR	3809094	Symbol	ret		3808703						
ANR	3809095	Symbol	NULL		3808703						
ANR	3809096	Symbol	m_treq_sock		3808703						
ANR	3809097	Symbol	* treq		3808703						
ANR	3809098	Symbol	treq -> call_post_push_callback		3808703						
ANR	3809099	Symbol	m_treqs . Next		3808703						
ANR	3809100	Symbol	* m_treq_sock		3808703						
ANR	3809101	Symbol	D_ALWAYS		3808703						
ANR	3809102	Symbol	this		3808703						
ANR	3809103	Symbol	treq -> get_capability		3808703						
ANR	3809104	Symbol	rej_reason		3808703						
ANR	3809105	Symbol	encap		3808703						
ANR	3809106	Symbol	m_treqs		3808703						
ANR	3809107	Symbol	m_treqs_in_progress		3808703						
ANR	3809108	Symbol	capability		3808703						
ANR	3809109	Symbol	ATTR_TREQ_CAPABILITY		3808703						
ANR	3809110	Symbol	ATTR_TREQ_INVALID_REQUEST		3808703						
ANR	3809111	Symbol	invalid		3808703						
ANR	3809112	Symbol	true		3808703						
ANR	3809113	Symbol	treq -> call_pre_push_callback		3808703						
ANR	3809114	Symbol	FALSE		3808703						
ANR	3809115	Symbol	treq		3808703						
ANR	3809116	Symbol	respad		3808703						
ANR	3809117	Symbol	ATTR_TREQ_INVALID_REASON		3808703						
ANR	3809118	Function	TransferDaemon :: update_transfer_request	376:0:9619:11977							
ANR	3809119	FunctionDef	TransferDaemon :: update_transfer_request (ClassAd * update)		3809118	0					
ANR	3809120	CompoundStatement		378:0:9681:11977	3809118	0					
ANR	3809121	IdentifierDeclStatement	MyString cap ;	379:1:9684:9696	3809118	0	True				
ANR	3809122	IdentifierDecl	cap		3809118	0					
ANR	3809123	IdentifierDeclType	MyString		3809118	0					
ANR	3809124	Identifier	cap		3809118	1					
ANR	3809125	IdentifierDeclStatement	TransferRequest * treq = NULL ;	380:1:9699:9727	3809118	1	True				
ANR	3809126	IdentifierDecl	* treq = NULL		3809118	0					
ANR	3809127	IdentifierDeclType	TransferRequest *		3809118	0					
ANR	3809128	Identifier	treq		3809118	1					
ANR	3809129	AssignmentExpression	* treq = NULL		3809118	2		=			
ANR	3809130	Identifier	NULL		3809118	0					
ANR	3809131	Identifier	NULL		3809118	1					
ANR	3809132	IdentifierDeclStatement	int ret ;	381:1:9730:9737	3809118	2	True				
ANR	3809133	IdentifierDecl	ret		3809118	0					
ANR	3809134	IdentifierDeclType	int		3809118	0					
ANR	3809135	Identifier	ret		3809118	1					
ANR	3809136	IdentifierDeclStatement	TransferDaemon * td = NULL ;	382:1:9740:9765	3809118	3	True				
ANR	3809137	IdentifierDecl	* td = NULL		3809118	0					
ANR	3809138	IdentifierDeclType	TransferDaemon *		3809118	0					
ANR	3809139	Identifier	td		3809118	1					
ANR	3809140	AssignmentExpression	* td = NULL		3809118	2		=			
ANR	3809141	Identifier	NULL		3809118	0					
ANR	3809142	Identifier	NULL		3809118	1					
ANR	3809143	ExpressionStatement	"dprintf ( D_ALWAYS , ""Entering TransferDaemon::update_transfer_request()\\n"" )"	384:1:9769:9844	3809118	4	True				
ANR	3809144	CallExpression	"dprintf ( D_ALWAYS , ""Entering TransferDaemon::update_transfer_request()\\n"" )"		3809118	0					
ANR	3809145	Callee	dprintf		3809118	0					
ANR	3809146	Identifier	dprintf		3809118	0					
ANR	3809147	ArgumentList	D_ALWAYS		3809118	1					
ANR	3809148	Argument	D_ALWAYS		3809118	0					
ANR	3809149	Identifier	D_ALWAYS		3809118	0					
ANR	3809150	Argument	"""Entering TransferDaemon::update_transfer_request()\\n"""		3809118	1					
ANR	3809151	PrimaryExpression	"""Entering TransferDaemon::update_transfer_request()\\n"""		3809118	0					
ANR	3809152	ExpressionStatement	"update -> LookupString ( ATTR_TREQ_CAPABILITY , cap )"	391:1:10079:10126	3809118	5	True				
ANR	3809153	CallExpression	"update -> LookupString ( ATTR_TREQ_CAPABILITY , cap )"		3809118	0					
ANR	3809154	Callee	update -> LookupString		3809118	0					
ANR	3809155	PtrMemberAccess	update -> LookupString		3809118	0					
ANR	3809156	Identifier	update		3809118	0					
ANR	3809157	Identifier	LookupString		3809118	1					
ANR	3809158	ArgumentList	ATTR_TREQ_CAPABILITY		3809118	1					
ANR	3809159	Argument	ATTR_TREQ_CAPABILITY		3809118	0					
ANR	3809160	Identifier	ATTR_TREQ_CAPABILITY		3809118	0					
ANR	3809161	Argument	cap		3809118	1					
ANR	3809162	Identifier	cap		3809118	0					
ANR	3809163	IfStatement	"if ( m_treqs_in_progress . lookup ( cap , treq ) != 0 )"		3809118	6					
ANR	3809164	Condition	"m_treqs_in_progress . lookup ( cap , treq ) != 0"	398:5:10468:10509	3809118	0	True				
ANR	3809165	EqualityExpression	"m_treqs_in_progress . lookup ( cap , treq ) != 0"		3809118	0		!=			
ANR	3809166	CallExpression	"m_treqs_in_progress . lookup ( cap , treq )"		3809118	0					
ANR	3809167	Callee	m_treqs_in_progress . lookup		3809118	0					
ANR	3809168	MemberAccess	m_treqs_in_progress . lookup		3809118	0					
ANR	3809169	Identifier	m_treqs_in_progress		3809118	0					
ANR	3809170	Identifier	lookup		3809118	1					
ANR	3809171	ArgumentList	cap		3809118	1					
ANR	3809172	Argument	cap		3809118	0					
ANR	3809173	Identifier	cap		3809118	0					
ANR	3809174	Argument	treq		3809118	1					
ANR	3809175	Identifier	treq		3809118	0					
ANR	3809176	PrimaryExpression	0		3809118	1					
ANR	3809177	CompoundStatement		21:49:830:830	3809118	1					
ANR	3809178	Statement	dprintf	399:2:10516:10522	3809118	0	True				
ANR	3809179	Statement	(	399:9:10523:10523	3809118	1	True				
ANR	3809180	Statement	D_ALWAYS	399:10:10524:10531	3809118	2	True				
ANR	3809181	Statement	","	399:18:10532:10532	3809118	3	True				
ANR	3809182	Statement	"""TransferDaemon::update_transfer_request(): """	399:20:10534:10578	3809118	4	True				
ANR	3809183	Statement	"""Got update for treq that the schedd had already thrown away, """	400:3:10583:10645	3809118	5	True				
ANR	3809184	Statement	"""ignoring.\\n"""	401:3:10650:10662	3809118	6	True				
ANR	3809185	Statement	)	401:16:10663:10663	3809118	7	True				
ANR	3809186	ExpressionStatement		401:17:10664:10664	3809118	8	True				
ANR	3809187	ReturnStatement	return TRUE ;	402:2:10668:10679	3809118	9	True				
ANR	3809188	Identifier	TRUE		3809118	0					
ANR	3809189	Statement	dprintf	407:1:10779:10785	3809118	7	True				
ANR	3809190	Statement	(	407:8:10786:10786	3809118	8	True				
ANR	3809191	Statement	D_ALWAYS	407:9:10787:10794	3809118	9	True				
ANR	3809192	Statement	","	407:17:10795:10795	3809118	10	True				
ANR	3809193	Statement	"""TransferDaemon::update_transfer_request(): """	407:19:10797:10841	3809118	11	True				
ANR	3809194	Statement	"""Calling schedd update callback\\n"""	408:2:10845:10878	3809118	12	True				
ANR	3809195	Statement	)	408:36:10879:10879	3809118	13	True				
ANR	3809196	ExpressionStatement		408:37:10880:10880	3809118	14	True				
ANR	3809197	ExpressionStatement	"ret = treq -> call_update_callback ( treq , td , update )"	410:1:10884:10934	3809118	15	True				
ANR	3809198	AssignmentExpression	"ret = treq -> call_update_callback ( treq , td , update )"		3809118	0		=			
ANR	3809199	Identifier	ret		3809118	0					
ANR	3809200	CallExpression	"treq -> call_update_callback ( treq , td , update )"		3809118	1					
ANR	3809201	Callee	treq -> call_update_callback		3809118	0					
ANR	3809202	PtrMemberAccess	treq -> call_update_callback		3809118	0					
ANR	3809203	Identifier	treq		3809118	0					
ANR	3809204	Identifier	call_update_callback		3809118	1					
ANR	3809205	ArgumentList	treq		3809118	1					
ANR	3809206	Argument	treq		3809118	0					
ANR	3809207	Identifier	treq		3809118	0					
ANR	3809208	Argument	td		3809118	1					
ANR	3809209	Identifier	td		3809118	0					
ANR	3809210	Argument	update		3809118	2					
ANR	3809211	Identifier	update		3809118	0					
ANR	3809212	SwitchStatement	switch ( ret )		3809118	16					
ANR	3809213	Condition	ret	412:8:10945:10947	3809118	0	True				
ANR	3809214	Identifier	ret		3809118	0					
ANR	3809215	CompoundStatement		35:13:1268:1268	3809118	1					
ANR	3809216	Label	case TREQ_ACTION_CONTINUE :	413:2:10954:10979	3809118	0	True				
ANR	3809217	Identifier	TREQ_ACTION_CONTINUE		3809118	0					
ANR	3809218	BreakStatement	break ;	417:3:11169:11174	3809118	1	True				
ANR	3809219	Label	case TREQ_ACTION_FORGET :	419:2:11179:11202	3809118	2	True				
ANR	3809220	Identifier	TREQ_ACTION_FORGET		3809118	0					
ANR	3809221	ExpressionStatement	ASSERT ( m_treqs_in_progress . remove ( cap ) == 0 )	425:3:11497:11541	3809118	3	True				
ANR	3809222	CallExpression	ASSERT ( m_treqs_in_progress . remove ( cap ) == 0 )		3809118	0					
ANR	3809223	Callee	ASSERT		3809118	0					
ANR	3809224	Identifier	ASSERT		3809118	0					
ANR	3809225	ArgumentList	m_treqs_in_progress . remove ( cap ) == 0		3809118	1					
ANR	3809226	Argument	m_treqs_in_progress . remove ( cap ) == 0		3809118	0					
ANR	3809227	EqualityExpression	m_treqs_in_progress . remove ( cap ) == 0		3809118	0		==			
ANR	3809228	CallExpression	m_treqs_in_progress . remove ( cap )		3809118	0					
ANR	3809229	Callee	m_treqs_in_progress . remove		3809118	0					
ANR	3809230	MemberAccess	m_treqs_in_progress . remove		3809118	0					
ANR	3809231	Identifier	m_treqs_in_progress		3809118	0					
ANR	3809232	Identifier	remove		3809118	1					
ANR	3809233	ArgumentList	cap		3809118	1					
ANR	3809234	Argument	cap		3809118	0					
ANR	3809235	Identifier	cap		3809118	0					
ANR	3809236	PrimaryExpression	0		3809118	1					
ANR	3809237	BreakStatement	break ;	427:3:11547:11552	3809118	4	True				
ANR	3809238	Label	case TREQ_ACTION_TERMINATE :	429:2:11557:11583	3809118	5	True				
ANR	3809239	Identifier	TREQ_ACTION_TERMINATE		3809118	0					
ANR	3809240	ExpressionStatement	ASSERT ( m_treqs_in_progress . remove ( cap ) == 0 )	432:3:11674:11718	3809118	6	True				
ANR	3809241	CallExpression	ASSERT ( m_treqs_in_progress . remove ( cap ) == 0 )		3809118	0					
ANR	3809242	Callee	ASSERT		3809118	0					
ANR	3809243	Identifier	ASSERT		3809118	0					
ANR	3809244	ArgumentList	m_treqs_in_progress . remove ( cap ) == 0		3809118	1					
ANR	3809245	Argument	m_treqs_in_progress . remove ( cap ) == 0		3809118	0					
ANR	3809246	EqualityExpression	m_treqs_in_progress . remove ( cap ) == 0		3809118	0		==			
ANR	3809247	CallExpression	m_treqs_in_progress . remove ( cap )		3809118	0					
ANR	3809248	Callee	m_treqs_in_progress . remove		3809118	0					
ANR	3809249	MemberAccess	m_treqs_in_progress . remove		3809118	0					
ANR	3809250	Identifier	m_treqs_in_progress		3809118	0					
ANR	3809251	Identifier	remove		3809118	1					
ANR	3809252	ArgumentList	cap		3809118	1					
ANR	3809253	Argument	cap		3809118	0					
ANR	3809254	Identifier	cap		3809118	0					
ANR	3809255	PrimaryExpression	0		3809118	1					
ANR	3809256	Statement	delete	434:3:11724:11729	3809118	7	True				
ANR	3809257	ExpressionStatement	treq	434:10:11731:11735	3809118	8	True				
ANR	3809258	Identifier	treq		3809118	0					
ANR	3809259	BreakStatement	break ;	436:3:11741:11746	3809118	9	True				
ANR	3809260	Label	default :	438:2:11751:11758	3809118	10	True				
ANR	3809261	Identifier	default		3809118	0					
ANR	3809262	Statement	EXCEPT	439:3:11763:11768	3809118	11	True				
ANR	3809263	Statement	(	439:9:11769:11769	3809118	12	True				
ANR	3809264	Statement	"""TransferDaemon::update_transfer_request(): Programmer """	439:10:11770:11825	3809118	13	True				
ANR	3809265	Statement	"""Error. Unknown update TreqAction\\n"""	440:4:11831:11866	3809118	14	True				
ANR	3809266	Statement	)	440:40:11867:11867	3809118	15	True				
ANR	3809267	ExpressionStatement		440:41:11868:11868	3809118	16	True				
ANR	3809268	BreakStatement	break ;	441:3:11873:11878	3809118	17	True				
ANR	3809269	ExpressionStatement	"dprintf ( D_ALWAYS , ""Leaving TransferDaemon::update_transfer_request()\\n"" )"	444:1:11885:11959	3809118	17	True				
ANR	3809270	CallExpression	"dprintf ( D_ALWAYS , ""Leaving TransferDaemon::update_transfer_request()\\n"" )"		3809118	0					
ANR	3809271	Callee	dprintf		3809118	0					
ANR	3809272	Identifier	dprintf		3809118	0					
ANR	3809273	ArgumentList	D_ALWAYS		3809118	1					
ANR	3809274	Argument	D_ALWAYS		3809118	0					
ANR	3809275	Identifier	D_ALWAYS		3809118	0					
ANR	3809276	Argument	"""Leaving TransferDaemon::update_transfer_request()\\n"""		3809118	1					
ANR	3809277	PrimaryExpression	"""Leaving TransferDaemon::update_transfer_request()\\n"""		3809118	0					
ANR	3809278	ReturnStatement	return TRUE ;	447:1:11964:11975	3809118	18	True				
ANR	3809279	Identifier	TRUE		3809118	0					
ANR	3809280	ReturnType	bool		3809118	1					
ANR	3809281	Identifier	TransferDaemon :: update_transfer_request		3809118	2					
ANR	3809282	ParameterList	ClassAd * update		3809118	3					
ANR	3809283	Parameter	ClassAd * update	377:40:9664:9678	3809118	0	True				
ANR	3809284	ParameterType	ClassAd *		3809118	0					
ANR	3809285	Identifier	update		3809118	1					
ANR	3809286	CFGEntryNode	ENTRY		3809118		True				
ANR	3809287	CFGExitNode	EXIT		3809118		True				
ANR	3809288	Symbol	ret		3809118						
ANR	3809289	Symbol	treq -> call_update_callback		3809118						
ANR	3809290	Symbol	NULL		3809118						
ANR	3809291	Symbol	* treq		3809118						
ANR	3809292	Symbol	D_ALWAYS		3809118						
ANR	3809293	Symbol	update		3809118						
ANR	3809294	Symbol	TRUE		3809118						
ANR	3809295	Symbol	m_treqs_in_progress		3809118						
ANR	3809296	Symbol	td		3809118						
ANR	3809297	Symbol	m_treqs_in_progress . remove		3809118						
ANR	3809298	Symbol	cap		3809118						
ANR	3809299	Symbol	ATTR_TREQ_CAPABILITY		3809118						
ANR	3809300	Symbol	m_treqs_in_progress . lookup		3809118						
ANR	3809301	Symbol	treq		3809118						
ANR	3809302	Function	TransferDaemon :: reap_all_transfer_requests	450:0:11980:13138							
ANR	3809303	FunctionDef	TransferDaemon :: reap_all_transfer_requests ()		3809302	0					
ANR	3809304	CompoundStatement		452:0:12034:13138	3809302	0					
ANR	3809305	IdentifierDeclStatement	TransferRequest * treq = NULL ;	453:1:12037:12065	3809302	0	True				
ANR	3809306	IdentifierDecl	* treq = NULL		3809302	0					
ANR	3809307	IdentifierDeclType	TransferRequest *		3809302	0					
ANR	3809308	Identifier	treq		3809302	1					
ANR	3809309	AssignmentExpression	* treq = NULL		3809302	2		=			
ANR	3809310	Identifier	NULL		3809302	0					
ANR	3809311	Identifier	NULL		3809302	1					
ANR	3809312	IdentifierDeclStatement	TreqAction ret ;	454:1:12068:12082	3809302	1	True				
ANR	3809313	IdentifierDecl	ret		3809302	0					
ANR	3809314	IdentifierDeclType	TreqAction		3809302	0					
ANR	3809315	Identifier	ret		3809302	1					
ANR	3809316	IdentifierDeclStatement	MyString key ;	455:1:12085:12097	3809302	2	True				
ANR	3809317	IdentifierDecl	key		3809302	0					
ANR	3809318	IdentifierDeclType	MyString		3809302	0					
ANR	3809319	Identifier	key		3809302	1					
ANR	3809320	ExpressionStatement	m_treqs . Rewind ( )	465:1:12512:12528	3809302	3	True				
ANR	3809321	CallExpression	m_treqs . Rewind ( )		3809302	0					
ANR	3809322	Callee	m_treqs . Rewind		3809302	0					
ANR	3809323	MemberAccess	m_treqs . Rewind		3809302	0					
ANR	3809324	Identifier	m_treqs		3809302	0					
ANR	3809325	Identifier	Rewind		3809302	1					
ANR	3809326	ArgumentList			3809302	1					
ANR	3809327	WhileStatement	while ( m_treqs . Next ( treq ) )		3809302	4					
ANR	3809328	Condition	m_treqs . Next ( treq )	466:7:12537:12554	3809302	0	True				
ANR	3809329	CallExpression	m_treqs . Next ( treq )		3809302	0					
ANR	3809330	Callee	m_treqs . Next		3809302	0					
ANR	3809331	MemberAccess	m_treqs . Next		3809302	0					
ANR	3809332	Identifier	m_treqs		3809302	0					
ANR	3809333	Identifier	Next		3809302	1					
ANR	3809334	ArgumentList	treq		3809302	1					
ANR	3809335	Argument	treq		3809302	0					
ANR	3809336	Identifier	treq		3809302	0					
ANR	3809337	CompoundStatement		16:1:523:523	3809302	1					
ANR	3809338	ExpressionStatement	m_treqs . DeleteCurrent ( )	468:2:12562:12585	3809302	0	True				
ANR	3809339	CallExpression	m_treqs . DeleteCurrent ( )		3809302	0					
ANR	3809340	Callee	m_treqs . DeleteCurrent		3809302	0					
ANR	3809341	MemberAccess	m_treqs . DeleteCurrent		3809302	0					
ANR	3809342	Identifier	m_treqs		3809302	0					
ANR	3809343	Identifier	DeleteCurrent		3809302	1					
ANR	3809344	ArgumentList			3809302	1					
ANR	3809345	ExpressionStatement	ret = treq -> call_reaper_callback ( treq )	470:2:12592:12630	3809302	1	True				
ANR	3809346	AssignmentExpression	ret = treq -> call_reaper_callback ( treq )		3809302	0		=			
ANR	3809347	Identifier	ret		3809302	0					
ANR	3809348	CallExpression	treq -> call_reaper_callback ( treq )		3809302	1					
ANR	3809349	Callee	treq -> call_reaper_callback		3809302	0					
ANR	3809350	PtrMemberAccess	treq -> call_reaper_callback		3809302	0					
ANR	3809351	Identifier	treq		3809302	0					
ANR	3809352	Identifier	call_reaper_callback		3809302	1					
ANR	3809353	ArgumentList	treq		3809302	1					
ANR	3809354	Argument	treq		3809302	0					
ANR	3809355	Identifier	treq		3809302	0					
ANR	3809356	ExpressionStatement	ASSERT ( ret == TREQ_ACTION_TERMINATE )	473:2:12700:12736	3809302	2	True				
ANR	3809357	CallExpression	ASSERT ( ret == TREQ_ACTION_TERMINATE )		3809302	0					
ANR	3809358	Callee	ASSERT		3809302	0					
ANR	3809359	Identifier	ASSERT		3809302	0					
ANR	3809360	ArgumentList	ret == TREQ_ACTION_TERMINATE		3809302	1					
ANR	3809361	Argument	ret == TREQ_ACTION_TERMINATE		3809302	0					
ANR	3809362	EqualityExpression	ret == TREQ_ACTION_TERMINATE		3809302	0		==			
ANR	3809363	Identifier	ret		3809302	0					
ANR	3809364	Identifier	TREQ_ACTION_TERMINATE		3809302	1					
ANR	3809365	Statement	delete	475:2:12741:12746	3809302	3	True				
ANR	3809366	ExpressionStatement	treq	475:9:12748:12752	3809302	4	True				
ANR	3809367	Identifier	treq		3809302	0					
ANR	3809368	ExpressionStatement	m_treqs_in_progress . startIterations ( )	480:1:12846:12883	3809302	5	True				
ANR	3809369	CallExpression	m_treqs_in_progress . startIterations ( )		3809302	0					
ANR	3809370	Callee	m_treqs_in_progress . startIterations		3809302	0					
ANR	3809371	MemberAccess	m_treqs_in_progress . startIterations		3809302	0					
ANR	3809372	Identifier	m_treqs_in_progress		3809302	0					
ANR	3809373	Identifier	startIterations		3809302	1					
ANR	3809374	ArgumentList			3809302	1					
ANR	3809375	WhileStatement	"while ( m_treqs_in_progress . iterate ( key , treq ) )"		3809302	6					
ANR	3809376	Condition	"m_treqs_in_progress . iterate ( key , treq )"	481:7:12892:12929	3809302	0	True				
ANR	3809377	CallExpression	"m_treqs_in_progress . iterate ( key , treq )"		3809302	0					
ANR	3809378	Callee	m_treqs_in_progress . iterate		3809302	0					
ANR	3809379	MemberAccess	m_treqs_in_progress . iterate		3809302	0					
ANR	3809380	Identifier	m_treqs_in_progress		3809302	0					
ANR	3809381	Identifier	iterate		3809302	1					
ANR	3809382	ArgumentList	key		3809302	1					
ANR	3809383	Argument	key		3809302	0					
ANR	3809384	Identifier	key		3809302	0					
ANR	3809385	Argument	treq		3809302	1					
ANR	3809386	Identifier	treq		3809302	0					
ANR	3809387	CompoundStatement		31:1:898:898	3809302	1					
ANR	3809388	ExpressionStatement	m_treqs_in_progress . remove ( key )	483:2:12937:12968	3809302	0	True				
ANR	3809389	CallExpression	m_treqs_in_progress . remove ( key )		3809302	0					
ANR	3809390	Callee	m_treqs_in_progress . remove		3809302	0					
ANR	3809391	MemberAccess	m_treqs_in_progress . remove		3809302	0					
ANR	3809392	Identifier	m_treqs_in_progress		3809302	0					
ANR	3809393	Identifier	remove		3809302	1					
ANR	3809394	ArgumentList	key		3809302	1					
ANR	3809395	Argument	key		3809302	0					
ANR	3809396	Identifier	key		3809302	0					
ANR	3809397	ExpressionStatement	ret = treq -> call_reaper_callback ( treq )	485:2:12973:13011	3809302	1	True				
ANR	3809398	AssignmentExpression	ret = treq -> call_reaper_callback ( treq )		3809302	0		=			
ANR	3809399	Identifier	ret		3809302	0					
ANR	3809400	CallExpression	treq -> call_reaper_callback ( treq )		3809302	1					
ANR	3809401	Callee	treq -> call_reaper_callback		3809302	0					
ANR	3809402	PtrMemberAccess	treq -> call_reaper_callback		3809302	0					
ANR	3809403	Identifier	treq		3809302	0					
ANR	3809404	Identifier	call_reaper_callback		3809302	1					
ANR	3809405	ArgumentList	treq		3809302	1					
ANR	3809406	Argument	treq		3809302	0					
ANR	3809407	Identifier	treq		3809302	0					
ANR	3809408	ExpressionStatement	ASSERT ( ret == TREQ_ACTION_TERMINATE )	488:2:13081:13117	3809302	2	True				
ANR	3809409	CallExpression	ASSERT ( ret == TREQ_ACTION_TERMINATE )		3809302	0					
ANR	3809410	Callee	ASSERT		3809302	0					
ANR	3809411	Identifier	ASSERT		3809302	0					
ANR	3809412	ArgumentList	ret == TREQ_ACTION_TERMINATE		3809302	1					
ANR	3809413	Argument	ret == TREQ_ACTION_TERMINATE		3809302	0					
ANR	3809414	EqualityExpression	ret == TREQ_ACTION_TERMINATE		3809302	0		==			
ANR	3809415	Identifier	ret		3809302	0					
ANR	3809416	Identifier	TREQ_ACTION_TERMINATE		3809302	1					
ANR	3809417	Statement	delete	490:2:13122:13127	3809302	3	True				
ANR	3809418	ExpressionStatement	treq	490:9:13129:13133	3809302	4	True				
ANR	3809419	Identifier	treq		3809302	0					
ANR	3809420	ReturnType	void		3809302	1					
ANR	3809421	Identifier	TransferDaemon :: reap_all_transfer_requests		3809302	2					
ANR	3809422	ParameterList			3809302	3					
ANR	3809423	CFGEntryNode	ENTRY		3809302		True				
ANR	3809424	CFGExitNode	EXIT		3809302		True				
ANR	3809425	Symbol	ret		3809302						
ANR	3809426	Symbol	NULL		3809302						
ANR	3809427	Symbol	* treq		3809302						
ANR	3809428	Symbol	m_treqs_in_progress . iterate		3809302						
ANR	3809429	Symbol	m_treqs . Next		3809302						
ANR	3809430	Symbol	treq -> call_reaper_callback		3809302						
ANR	3809431	Symbol	treq		3809302						
ANR	3809432	Symbol	m_treqs		3809302						
ANR	3809433	Symbol	key		3809302						
ANR	3809434	Symbol	m_treqs_in_progress		3809302						
ANR	3809435	Symbol	TREQ_ACTION_TERMINATE		3809302						
ANR	3809436	Function	TransferDaemon :: set_reg_callback	494:0:13141:13317							
ANR	3809437	FunctionDef	"TransferDaemon :: set_reg_callback (MyString desc , TDRegisterCallback callback , Service * base)"		3809436	0					
ANR	3809438	CompoundStatement		497:0:13241:13317	3809436	0					
ANR	3809439	ExpressionStatement	m_reg_func_desc = desc	498:1:13244:13266	3809436	0	True				
ANR	3809440	AssignmentExpression	m_reg_func_desc = desc		3809436	0		=			
ANR	3809441	Identifier	m_reg_func_desc		3809436	0					
ANR	3809442	Identifier	desc		3809436	1					
ANR	3809443	ExpressionStatement	m_reg_func = callback	499:1:13269:13290	3809436	1	True				
ANR	3809444	AssignmentExpression	m_reg_func = callback		3809436	0		=			
ANR	3809445	Identifier	m_reg_func		3809436	0					
ANR	3809446	Identifier	callback		3809436	1					
ANR	3809447	ExpressionStatement	m_reg_func_this = base	500:1:13293:13315	3809436	2	True				
ANR	3809448	AssignmentExpression	m_reg_func_this = base		3809436	0		=			
ANR	3809449	Identifier	m_reg_func_this		3809436	0					
ANR	3809450	Identifier	base		3809436	1					
ANR	3809451	ReturnType	void		3809436	1					
ANR	3809452	Identifier	TransferDaemon :: set_reg_callback		3809436	2					
ANR	3809453	ParameterList	"MyString desc , TDRegisterCallback callback , Service * base"		3809436	3					
ANR	3809454	Parameter	MyString desc	495:33:13180:13192	3809436	0	True				
ANR	3809455	ParameterType	MyString		3809436	0					
ANR	3809456	Identifier	desc		3809436	1					
ANR	3809457	Parameter	TDRegisterCallback callback	495:48:13195:13221	3809436	1	True				
ANR	3809458	ParameterType	TDRegisterCallback		3809436	0					
ANR	3809459	Identifier	callback		3809436	1					
ANR	3809460	Parameter	Service * base	496:1:13226:13238	3809436	2	True				
ANR	3809461	ParameterType	Service *		3809436	0					
ANR	3809462	Identifier	base		3809436	1					
ANR	3809463	CFGEntryNode	ENTRY		3809436		True				
ANR	3809464	CFGExitNode	EXIT		3809436		True				
ANR	3809465	Symbol	m_reg_func		3809436						
ANR	3809466	Symbol	m_reg_func_this		3809436						
ANR	3809467	Symbol	callback		3809436						
ANR	3809468	Symbol	m_reg_func_desc		3809436						
ANR	3809469	Symbol	desc		3809436						
ANR	3809470	Symbol	base		3809436						
ANR	3809471	Function	TransferDaemon :: get_reg_callback	503:0:13320:13499							
ANR	3809472	FunctionDef	"TransferDaemon :: get_reg_callback (MyString & desc , TDRegisterCallback & callback , Service * & base)"		3809471	0					
ANR	3809473	CompoundStatement		506:0:13423:13499	3809471	0					
ANR	3809474	ExpressionStatement	desc = m_reg_func_desc	507:1:13426:13448	3809471	0	True				
ANR	3809475	AssignmentExpression	desc = m_reg_func_desc		3809471	0		=			
ANR	3809476	Identifier	desc		3809471	0					
ANR	3809477	Identifier	m_reg_func_desc		3809471	1					
ANR	3809478	ExpressionStatement	callback = m_reg_func	508:1:13451:13472	3809471	1	True				
ANR	3809479	AssignmentExpression	callback = m_reg_func		3809471	0		=			
ANR	3809480	Identifier	callback		3809471	0					
ANR	3809481	Identifier	m_reg_func		3809471	1					
ANR	3809482	ExpressionStatement	base = m_reg_func_this	509:1:13475:13497	3809471	2	True				
ANR	3809483	AssignmentExpression	base = m_reg_func_this		3809471	0		=			
ANR	3809484	Identifier	base		3809471	0					
ANR	3809485	Identifier	m_reg_func_this		3809471	1					
ANR	3809486	ReturnType	void		3809471	1					
ANR	3809487	Identifier	TransferDaemon :: get_reg_callback		3809471	2					
ANR	3809488	ParameterList	"MyString & desc , TDRegisterCallback & callback , Service * & base"		3809471	3					
ANR	3809489	Parameter	MyString & desc	504:33:13359:13372	3809471	0	True				
ANR	3809490	ParameterType	MyString &		3809471	0					
ANR	3809491	Identifier	desc		3809471	1					
ANR	3809492	Parameter	TDRegisterCallback & callback	504:49:13375:13402	3809471	1	True				
ANR	3809493	ParameterType	TDRegisterCallback &		3809471	0					
ANR	3809494	Identifier	callback		3809471	1					
ANR	3809495	Parameter	Service * & base	505:1:13407:13420	3809471	2	True				
ANR	3809496	ParameterType	Service * &		3809471	0					
ANR	3809497	Identifier	base		3809471	1					
ANR	3809498	CFGEntryNode	ENTRY		3809471		True				
ANR	3809499	CFGExitNode	EXIT		3809471		True				
ANR	3809500	Symbol	m_reg_func		3809471						
ANR	3809501	Symbol	m_reg_func_this		3809471						
ANR	3809502	Symbol	callback		3809471						
ANR	3809503	Symbol	m_reg_func_desc		3809471						
ANR	3809504	Symbol	desc		3809471						
ANR	3809505	Symbol	base		3809471						
ANR	3809506	Function	TransferDaemon :: call_reg_callback	512:0:13502:13852							
ANR	3809507	FunctionDef	TransferDaemon :: call_reg_callback (TransferDaemon * td)		3809506	0					
ANR	3809508	CompoundStatement		514:0:13566:13852	3809506	0					
ANR	3809509	IfStatement	if ( m_reg_func == NULL )		3809506	0					
ANR	3809510	Condition	m_reg_func == NULL	519:5:13751:13768	3809506	0	True				
ANR	3809511	EqualityExpression	m_reg_func == NULL		3809506	0		==			
ANR	3809512	Identifier	m_reg_func		3809506	0					
ANR	3809513	Identifier	NULL		3809506	1					
ANR	3809514	CompoundStatement		6:25:204:204	3809506	1					
ANR	3809515	ReturnStatement	return TD_ACTION_CONTINUE ;	520:2:13775:13800	3809506	0	True				
ANR	3809516	Identifier	TD_ACTION_CONTINUE		3809506	0					
ANR	3809517	Statement	return	523:1:13807:13812	3809506	1	True				
ANR	3809518	Statement	(	523:8:13814:13814	3809506	2	True				
ANR	3809519	Statement	m_reg_func_this	523:9:13815:13829	3809506	3	True				
ANR	3809520	Statement	->*	523:24:13830:13832	3809506	4	True				
ANR	3809521	Statement	(	523:27:13833:13833	3809506	5	True				
ANR	3809522	Statement	m_reg_func	523:28:13834:13843	3809506	6	True				
ANR	3809523	Statement	)	523:38:13844:13844	3809506	7	True				
ANR	3809524	Statement	)	523:39:13845:13845	3809506	8	True				
ANR	3809525	ExpressionStatement	td	523:40:13846:13850	3809506	9	True				
ANR	3809526	Identifier	td		3809506	0					
ANR	3809527	ReturnType	TdAction		3809506	1					
ANR	3809528	Identifier	TransferDaemon :: call_reg_callback		3809506	2					
ANR	3809529	ParameterList	TransferDaemon * td		3809506	3					
ANR	3809530	Parameter	TransferDaemon * td	513:34:13546:13563	3809506	0	True				
ANR	3809531	ParameterType	TransferDaemon *		3809506	0					
ANR	3809532	Identifier	td		3809506	1					
ANR	3809533	CFGEntryNode	ENTRY		3809506		True				
ANR	3809534	CFGExitNode	EXIT		3809506		True				
ANR	3809535	Symbol	td		3809506						
ANR	3809536	Symbol	m_reg_func		3809506						
ANR	3809537	Symbol	NULL		3809506						
ANR	3809538	Symbol	TD_ACTION_CONTINUE		3809506						
ANR	3809539	Function	TransferDaemon :: set_reaper_callback	526:0:13855:14034							
ANR	3809540	FunctionDef	"TransferDaemon :: set_reaper_callback (MyString desc , TDReaperCallback callback , Service * base)"		3809539	0					
ANR	3809541	CompoundStatement		529:0:13955:14034	3809539	0					
ANR	3809542	ExpressionStatement	m_reap_func_desc = desc	530:1:13958:13981	3809539	0	True				
ANR	3809543	AssignmentExpression	m_reap_func_desc = desc		3809539	0		=			
ANR	3809544	Identifier	m_reap_func_desc		3809539	0					
ANR	3809545	Identifier	desc		3809539	1					
ANR	3809546	ExpressionStatement	m_reap_func = callback	531:1:13984:14006	3809539	1	True				
ANR	3809547	AssignmentExpression	m_reap_func = callback		3809539	0		=			
ANR	3809548	Identifier	m_reap_func		3809539	0					
ANR	3809549	Identifier	callback		3809539	1					
ANR	3809550	ExpressionStatement	m_reap_func_this = base	532:1:14009:14032	3809539	2	True				
ANR	3809551	AssignmentExpression	m_reap_func_this = base		3809539	0		=			
ANR	3809552	Identifier	m_reap_func_this		3809539	0					
ANR	3809553	Identifier	base		3809539	1					
ANR	3809554	ReturnType	void		3809539	1					
ANR	3809555	Identifier	TransferDaemon :: set_reaper_callback		3809539	2					
ANR	3809556	ParameterList	"MyString desc , TDReaperCallback callback , Service * base"		3809539	3					
ANR	3809557	Parameter	MyString desc	527:36:13897:13909	3809539	0	True				
ANR	3809558	ParameterType	MyString		3809539	0					
ANR	3809559	Identifier	desc		3809539	1					
ANR	3809560	Parameter	TDReaperCallback callback	527:51:13912:13936	3809539	1	True				
ANR	3809561	ParameterType	TDReaperCallback		3809539	0					
ANR	3809562	Identifier	callback		3809539	1					
ANR	3809563	Parameter	Service * base	528:1:13940:13952	3809539	2	True				
ANR	3809564	ParameterType	Service *		3809539	0					
ANR	3809565	Identifier	base		3809539	1					
ANR	3809566	CFGEntryNode	ENTRY		3809539		True				
ANR	3809567	CFGExitNode	EXIT		3809539		True				
ANR	3809568	Symbol	m_reap_func_desc		3809539						
ANR	3809569	Symbol	m_reap_func_this		3809539						
ANR	3809570	Symbol	m_reap_func		3809539						
ANR	3809571	Symbol	callback		3809539						
ANR	3809572	Symbol	desc		3809539						
ANR	3809573	Symbol	base		3809539						
ANR	3809574	Function	TransferDaemon :: get_reaper_callback	535:0:14037:14220							
ANR	3809575	FunctionDef	"TransferDaemon :: get_reaper_callback (MyString & desc , TDReaperCallback & callback , Service * & base)"		3809574	0					
ANR	3809576	CompoundStatement		538:0:14141:14220	3809574	0					
ANR	3809577	ExpressionStatement	desc = m_reap_func_desc	539:1:14144:14167	3809574	0	True				
ANR	3809578	AssignmentExpression	desc = m_reap_func_desc		3809574	0		=			
ANR	3809579	Identifier	desc		3809574	0					
ANR	3809580	Identifier	m_reap_func_desc		3809574	1					
ANR	3809581	ExpressionStatement	callback = m_reap_func	540:1:14170:14192	3809574	1	True				
ANR	3809582	AssignmentExpression	callback = m_reap_func		3809574	0		=			
ANR	3809583	Identifier	callback		3809574	0					
ANR	3809584	Identifier	m_reap_func		3809574	1					
ANR	3809585	ExpressionStatement	base = m_reap_func_this	541:1:14195:14218	3809574	2	True				
ANR	3809586	AssignmentExpression	base = m_reap_func_this		3809574	0		=			
ANR	3809587	Identifier	base		3809574	0					
ANR	3809588	Identifier	m_reap_func_this		3809574	1					
ANR	3809589	ReturnType	void		3809574	1					
ANR	3809590	Identifier	TransferDaemon :: get_reaper_callback		3809574	2					
ANR	3809591	ParameterList	"MyString & desc , TDReaperCallback & callback , Service * & base"		3809574	3					
ANR	3809592	Parameter	MyString & desc	536:36:14079:14092	3809574	0	True				
ANR	3809593	ParameterType	MyString &		3809574	0					
ANR	3809594	Identifier	desc		3809574	1					
ANR	3809595	Parameter	TDReaperCallback & callback	537:1:14097:14122	3809574	1	True				
ANR	3809596	ParameterType	TDReaperCallback &		3809574	0					
ANR	3809597	Identifier	callback		3809574	1					
ANR	3809598	Parameter	Service * & base	537:29:14125:14138	3809574	2	True				
ANR	3809599	ParameterType	Service * &		3809574	0					
ANR	3809600	Identifier	base		3809574	1					
ANR	3809601	CFGEntryNode	ENTRY		3809574		True				
ANR	3809602	CFGExitNode	EXIT		3809574		True				
ANR	3809603	Symbol	m_reap_func_desc		3809574						
ANR	3809604	Symbol	m_reap_func_this		3809574						
ANR	3809605	Symbol	m_reap_func		3809574						
ANR	3809606	Symbol	callback		3809574						
ANR	3809607	Symbol	desc		3809574						
ANR	3809608	Symbol	base		3809574						
ANR	3809609	Function	TransferDaemon :: call_reaper_callback	544:0:14223:14606							
ANR	3809610	FunctionDef	"TransferDaemon :: call_reaper_callback (long pid , int status , TransferDaemon * td)"		3809609	0					
ANR	3809611	CompoundStatement		546:0:14312:14606	3809609	0					
ANR	3809612	IfStatement	if ( m_reap_func == NULL )		3809609	0					
ANR	3809613	Condition	m_reap_func == NULL	551:5:14488:14506	3809609	0	True				
ANR	3809614	EqualityExpression	m_reap_func == NULL		3809609	0		==			
ANR	3809615	Identifier	m_reap_func		3809609	0					
ANR	3809616	Identifier	NULL		3809609	1					
ANR	3809617	CompoundStatement		6:26:196:196	3809609	1					
ANR	3809618	ReturnStatement	return TD_ACTION_TERMINATE ;	552:2:14513:14539	3809609	0	True				
ANR	3809619	Identifier	TD_ACTION_TERMINATE		3809609	0					
ANR	3809620	Statement	return	555:1:14546:14551	3809609	1	True				
ANR	3809621	Statement	(	555:8:14553:14553	3809609	2	True				
ANR	3809622	Statement	m_reap_func_this	555:9:14554:14569	3809609	3	True				
ANR	3809623	Statement	->*	555:25:14570:14572	3809609	4	True				
ANR	3809624	Statement	(	555:28:14573:14573	3809609	5	True				
ANR	3809625	Statement	m_reap_func	555:29:14574:14584	3809609	6	True				
ANR	3809626	Statement	)	555:40:14585:14585	3809609	7	True				
ANR	3809627	Statement	)	555:41:14586:14586	3809609	8	True				
ANR	3809628	ExpressionStatement	"pid , status , td"	555:42:14587:14604	3809609	9	True				
ANR	3809629	Expression	"pid , status , td"		3809609	0					
ANR	3809630	Identifier	pid		3809609	0					
ANR	3809631	Expression	"status , td"		3809609	1					
ANR	3809632	Identifier	status		3809609	0					
ANR	3809633	Identifier	td		3809609	1					
ANR	3809634	ReturnType	TdAction		3809609	1					
ANR	3809635	Identifier	TransferDaemon :: call_reaper_callback		3809609	2					
ANR	3809636	ParameterList	"long pid , int status , TransferDaemon * td"		3809609	3					
ANR	3809637	Parameter	long pid	545:37:14270:14277	3809609	0	True				
ANR	3809638	ParameterType	long		3809609	0					
ANR	3809639	Identifier	pid		3809609	1					
ANR	3809640	Parameter	int status	545:47:14280:14289	3809609	1	True				
ANR	3809641	ParameterType	int		3809609	0					
ANR	3809642	Identifier	status		3809609	1					
ANR	3809643	Parameter	TransferDaemon * td	545:59:14292:14309	3809609	2	True				
ANR	3809644	ParameterType	TransferDaemon *		3809609	0					
ANR	3809645	Identifier	td		3809609	1					
ANR	3809646	CFGEntryNode	ENTRY		3809609		True				
ANR	3809647	CFGExitNode	EXIT		3809609		True				
ANR	3809648	Symbol	td		3809609						
ANR	3809649	Symbol	NULL		3809609						
ANR	3809650	Symbol	m_reap_func		3809609						
ANR	3809651	Symbol	TD_ACTION_TERMINATE		3809609						
ANR	3809652	Symbol	pid		3809609						
ANR	3809653	Symbol	status		3809609						
ANR	3809654	Function	TDMan :: TDMan	563:0:14802:15054							
ANR	3809655	FunctionDef	TDMan :: TDMan ()		3809654	0					
ANR	3809656	CompoundStatement		564:0:14817:15054	3809654	0					
ANR	3809657	ExpressionStatement	"m_td_table = new HashTable < MyString , TransferDaemon * > ( 200 , hashFuncMyString )"	565:1:14820:14899	3809654	0	True				
ANR	3809658	AssignmentExpression	"m_td_table = new HashTable < MyString , TransferDaemon * > ( 200 , hashFuncMyString )"		3809654	0		=			
ANR	3809659	Identifier	m_td_table		3809654	0					
ANR	3809660	Expression	"200 , hashFuncMyString"		3809654	1					
ANR	3809661	PrimaryExpression	200		3809654	0					
ANR	3809662	Identifier	hashFuncMyString		3809654	1					
ANR	3809663	ExpressionStatement	"m_id_table = new HashTable < MyString , MyString > ( 200 , hashFuncMyString )"	567:1:14902:14974	3809654	1	True				
ANR	3809664	AssignmentExpression	"m_id_table = new HashTable < MyString , MyString > ( 200 , hashFuncMyString )"		3809654	0		=			
ANR	3809665	Identifier	m_id_table		3809654	0					
ANR	3809666	Expression	"200 , hashFuncMyString"		3809654	1					
ANR	3809667	PrimaryExpression	200		3809654	0					
ANR	3809668	Identifier	hashFuncMyString		3809654	1					
ANR	3809669	ExpressionStatement	"m_td_pid_table = new HashTable < long , TransferDaemon * > ( 200 , hashFuncLong )"	569:1:14977:15052	3809654	2	True				
ANR	3809670	AssignmentExpression	"m_td_pid_table = new HashTable < long , TransferDaemon * > ( 200 , hashFuncLong )"		3809654	0		=			
ANR	3809671	Identifier	m_td_pid_table		3809654	0					
ANR	3809672	Expression	"200 , hashFuncLong"		3809654	1					
ANR	3809673	PrimaryExpression	200		3809654	0					
ANR	3809674	Identifier	hashFuncLong		3809654	1					
ANR	3809675	Identifier	TDMan :: TDMan		3809654	1					
ANR	3809676	ParameterList			3809654	2					
ANR	3809677	CFGEntryNode	ENTRY		3809654		True				
ANR	3809678	CFGExitNode	EXIT		3809654		True				
ANR	3809679	Symbol	m_td_pid_table		3809654						
ANR	3809680	Symbol	hashFuncMyString		3809654						
ANR	3809681	Symbol	hashFuncLong		3809654						
ANR	3809682	Symbol	m_id_table		3809654						
ANR	3809683	Symbol	m_td_table		3809654						
ANR	3809684	Function	TDMan :: ~TDMan	573:0:15057:15214							
ANR	3809685	FunctionDef	TDMan :: ~TDMan ()		3809684	0					
ANR	3809686	CompoundStatement		574:0:15073:15214	3809684	0					
ANR	3809687	Statement	delete	576:1:15151:15156	3809684	0	True				
ANR	3809688	ExpressionStatement	m_td_table	576:8:15158:15168	3809684	1	True				
ANR	3809689	Identifier	m_td_table		3809684	0					
ANR	3809690	Statement	delete	577:1:15171:15176	3809684	2	True				
ANR	3809691	ExpressionStatement	m_id_table	577:8:15178:15188	3809684	3	True				
ANR	3809692	Identifier	m_id_table		3809684	0					
ANR	3809693	Statement	delete	578:1:15191:15196	3809684	4	True				
ANR	3809694	ExpressionStatement	m_td_pid_table	578:8:15198:15212	3809684	5	True				
ANR	3809695	Identifier	m_td_pid_table		3809684	0					
ANR	3809696	Identifier	TDMan :: ~TDMan		3809684	1					
ANR	3809697	ParameterList			3809684	2					
ANR	3809698	CFGEntryNode	ENTRY		3809684		True				
ANR	3809699	CFGExitNode	EXIT		3809684		True				
ANR	3809700	Function	TDMan :: register_handlers	581:0:15217:15428							
ANR	3809701	FunctionDef	TDMan :: register_handlers ()		3809700	0					
ANR	3809702	CompoundStatement		582:0:15253:15428	3809700	0					
ANR	3809703	ExpressionStatement	"daemonCore -> Register_Command ( TRANSFERD_REGISTER , ""TRANSFERD_REGISTER"" , ( CommandHandlercpp ) & TDMan :: transferd_registration , ""transferd_registration"" , this , WRITE )"	583:2:15257:15426	3809700	0	True				
ANR	3809704	CallExpression	"daemonCore -> Register_Command ( TRANSFERD_REGISTER , ""TRANSFERD_REGISTER"" , ( CommandHandlercpp ) & TDMan :: transferd_registration , ""transferd_registration"" , this , WRITE )"		3809700	0					
ANR	3809705	Callee	daemonCore -> Register_Command		3809700	0					
ANR	3809706	PtrMemberAccess	daemonCore -> Register_Command		3809700	0					
ANR	3809707	Identifier	daemonCore		3809700	0					
ANR	3809708	Identifier	Register_Command		3809700	1					
ANR	3809709	ArgumentList	TRANSFERD_REGISTER		3809700	1					
ANR	3809710	Argument	TRANSFERD_REGISTER		3809700	0					
ANR	3809711	Identifier	TRANSFERD_REGISTER		3809700	0					
ANR	3809712	Argument	"""TRANSFERD_REGISTER"""		3809700	1					
ANR	3809713	PrimaryExpression	"""TRANSFERD_REGISTER"""		3809700	0					
ANR	3809714	Argument	( CommandHandlercpp ) & TDMan :: transferd_registration		3809700	2					
ANR	3809715	CastExpression	( CommandHandlercpp ) & TDMan :: transferd_registration		3809700	0					
ANR	3809716	CastTarget	CommandHandlercpp		3809700	0					
ANR	3809717	UnaryOperationExpression	& TDMan :: transferd_registration		3809700	1					
ANR	3809718	UnaryOperator	&		3809700	0					
ANR	3809719	Identifier	TDMan :: transferd_registration		3809700	1					
ANR	3809720	Argument	"""transferd_registration"""		3809700	3					
ANR	3809721	PrimaryExpression	"""transferd_registration"""		3809700	0					
ANR	3809722	Argument	this		3809700	4					
ANR	3809723	Identifier	this		3809700	0					
ANR	3809724	Argument	WRITE		3809700	5					
ANR	3809725	Identifier	WRITE		3809700	0					
ANR	3809726	ReturnType	void		3809700	1					
ANR	3809727	Identifier	TDMan :: register_handlers		3809700	2					
ANR	3809728	ParameterList			3809700	3					
ANR	3809729	CFGEntryNode	ENTRY		3809700		True				
ANR	3809730	CFGExitNode	EXIT		3809700		True				
ANR	3809731	Symbol	daemonCore		3809700						
ANR	3809732	Symbol	this		3809700						
ANR	3809733	Symbol	TRANSFERD_REGISTER		3809700						
ANR	3809734	Symbol	& TDMan :: transferd_registration		3809700						
ANR	3809735	Symbol	WRITE		3809700						
ANR	3809736	Function	TDMan :: find_td_by_user	589:0:15431:15631							
ANR	3809737	FunctionDef	TDMan :: find_td_by_user (MyString fquser)		3809736	0					
ANR	3809738	CompoundStatement		591:0:15487:15631	3809736	0					
ANR	3809739	IdentifierDeclStatement	int ret ;	592:1:15490:15497	3809736	0	True				
ANR	3809740	IdentifierDecl	ret		3809736	0					
ANR	3809741	IdentifierDeclType	int		3809736	0					
ANR	3809742	Identifier	ret		3809736	1					
ANR	3809743	IdentifierDeclStatement	TransferDaemon * td = NULL ;	593:1:15500:15525	3809736	1	True				
ANR	3809744	IdentifierDecl	* td = NULL		3809736	0					
ANR	3809745	IdentifierDeclType	TransferDaemon *		3809736	0					
ANR	3809746	Identifier	td		3809736	1					
ANR	3809747	AssignmentExpression	* td = NULL		3809736	2		=			
ANR	3809748	Identifier	NULL		3809736	0					
ANR	3809749	Identifier	NULL		3809736	1					
ANR	3809750	ExpressionStatement	"ret = m_td_table -> lookup ( fquser , td )"	595:1:15529:15565	3809736	2	True				
ANR	3809751	AssignmentExpression	"ret = m_td_table -> lookup ( fquser , td )"		3809736	0		=			
ANR	3809752	Identifier	ret		3809736	0					
ANR	3809753	CallExpression	"m_td_table -> lookup ( fquser , td )"		3809736	1					
ANR	3809754	Callee	m_td_table -> lookup		3809736	0					
ANR	3809755	PtrMemberAccess	m_td_table -> lookup		3809736	0					
ANR	3809756	Identifier	m_td_table		3809736	0					
ANR	3809757	Identifier	lookup		3809736	1					
ANR	3809758	ArgumentList	fquser		3809736	1					
ANR	3809759	Argument	fquser		3809736	0					
ANR	3809760	Identifier	fquser		3809736	0					
ANR	3809761	Argument	td		3809736	1					
ANR	3809762	Identifier	td		3809736	0					
ANR	3809763	IfStatement	if ( ret != 0 )		3809736	3					
ANR	3809764	Condition	ret != 0	597:5:15573:15580	3809736	0	True				
ANR	3809765	EqualityExpression	ret != 0		3809736	0		!=			
ANR	3809766	Identifier	ret		3809736	0					
ANR	3809767	PrimaryExpression	0		3809736	1					
ANR	3809768	CompoundStatement		7:15:95:95	3809736	1					
ANR	3809769	ReturnStatement	return NULL ;	599:2:15602:15613	3809736	0	True				
ANR	3809770	Identifier	NULL		3809736	0					
ANR	3809771	ReturnStatement	return td ;	602:1:15620:15629	3809736	4	True				
ANR	3809772	Identifier	td		3809736	0					
ANR	3809773	ReturnType	TransferDaemon *		3809736	1					
ANR	3809774	Identifier	TDMan :: find_td_by_user		3809736	2					
ANR	3809775	ParameterList	MyString fquser		3809736	3					
ANR	3809776	Parameter	MyString fquser	590:23:15470:15484	3809736	0	True				
ANR	3809777	ParameterType	MyString		3809736	0					
ANR	3809778	Identifier	fquser		3809736	1					
ANR	3809779	CFGEntryNode	ENTRY		3809736		True				
ANR	3809780	CFGExitNode	EXIT		3809736		True				
ANR	3809781	Symbol	ret		3809736						
ANR	3809782	Symbol	td		3809736						
ANR	3809783	Symbol	NULL		3809736						
ANR	3809784	Symbol	fquser		3809736						
ANR	3809785	Symbol	* m_td_table		3809736						
ANR	3809786	Symbol	m_td_table -> lookup		3809736						
ANR	3809787	Symbol	m_td_table		3809736						
ANR	3809788	Function	TDMan :: find_td_by_user	605:0:15634:15751							
ANR	3809789	FunctionDef	TDMan :: find_td_by_user (char * fquser)		3809788	0					
ANR	3809790	CompoundStatement		607:0:15687:15751	3809788	0					
ANR	3809791	IdentifierDeclStatement	MyString str ;	608:1:15690:15702	3809788	0	True				
ANR	3809792	IdentifierDecl	str		3809788	0					
ANR	3809793	IdentifierDeclType	MyString		3809788	0					
ANR	3809794	Identifier	str		3809788	1					
ANR	3809795	ExpressionStatement	str = fquser	610:1:15706:15718	3809788	1	True				
ANR	3809796	AssignmentExpression	str = fquser		3809788	0		=			
ANR	3809797	Identifier	str		3809788	0					
ANR	3809798	Identifier	fquser		3809788	1					
ANR	3809799	ReturnStatement	return find_td_by_user ( str ) ;	612:1:15722:15749	3809788	2	True				
ANR	3809800	CallExpression	find_td_by_user ( str )		3809788	0					
ANR	3809801	Callee	find_td_by_user		3809788	0					
ANR	3809802	Identifier	find_td_by_user		3809788	0					
ANR	3809803	ArgumentList	str		3809788	1					
ANR	3809804	Argument	str		3809788	0					
ANR	3809805	Identifier	str		3809788	0					
ANR	3809806	ReturnType	TransferDaemon *		3809788	1					
ANR	3809807	Identifier	TDMan :: find_td_by_user		3809788	2					
ANR	3809808	ParameterList	char * fquser		3809788	3					
ANR	3809809	Parameter	char * fquser	606:23:15673:15684	3809788	0	True				
ANR	3809810	ParameterType	char *		3809788	0					
ANR	3809811	Identifier	fquser		3809788	1					
ANR	3809812	CFGEntryNode	ENTRY		3809788		True				
ANR	3809813	CFGExitNode	EXIT		3809788		True				
ANR	3809814	Symbol	str		3809788						
ANR	3809815	Symbol	fquser		3809788						
ANR	3809816	Symbol	find_td_by_user		3809788						
ANR	3809817	Function	TDMan :: find_td_by_ident	615:0:15754:16146							
ANR	3809818	FunctionDef	TDMan :: find_td_by_ident (MyString id)		3809817	0					
ANR	3809819	CompoundStatement		617:0:15807:16146	3809817	0					
ANR	3809820	IdentifierDeclStatement	int ret ;	618:1:15810:15817	3809817	0	True				
ANR	3809821	IdentifierDecl	ret		3809817	0					
ANR	3809822	IdentifierDeclType	int		3809817	0					
ANR	3809823	Identifier	ret		3809817	1					
ANR	3809824	IdentifierDeclStatement	MyString fquser ;	619:1:15820:15835	3809817	1	True				
ANR	3809825	IdentifierDecl	fquser		3809817	0					
ANR	3809826	IdentifierDeclType	MyString		3809817	0					
ANR	3809827	Identifier	fquser		3809817	1					
ANR	3809828	IdentifierDeclStatement	TransferDaemon * td = NULL ;	620:1:15838:15863	3809817	2	True				
ANR	3809829	IdentifierDecl	* td = NULL		3809817	0					
ANR	3809830	IdentifierDeclType	TransferDaemon *		3809817	0					
ANR	3809831	Identifier	td		3809817	1					
ANR	3809832	AssignmentExpression	* td = NULL		3809817	2		=			
ANR	3809833	Identifier	NULL		3809817	0					
ANR	3809834	Identifier	NULL		3809817	1					
ANR	3809835	ExpressionStatement	"ret = m_id_table -> lookup ( id , fquser )"	623:1:15914:15950	3809817	3	True				
ANR	3809836	AssignmentExpression	"ret = m_id_table -> lookup ( id , fquser )"		3809817	0		=			
ANR	3809837	Identifier	ret		3809817	0					
ANR	3809838	CallExpression	"m_id_table -> lookup ( id , fquser )"		3809817	1					
ANR	3809839	Callee	m_id_table -> lookup		3809817	0					
ANR	3809840	PtrMemberAccess	m_id_table -> lookup		3809817	0					
ANR	3809841	Identifier	m_id_table		3809817	0					
ANR	3809842	Identifier	lookup		3809817	1					
ANR	3809843	ArgumentList	id		3809817	1					
ANR	3809844	Argument	id		3809817	0					
ANR	3809845	Identifier	id		3809817	0					
ANR	3809846	Argument	fquser		3809817	1					
ANR	3809847	Identifier	fquser		3809817	0					
ANR	3809848	IfStatement	if ( ret != 0 )		3809817	4					
ANR	3809849	Condition	ret != 0	624:5:15957:15964	3809817	0	True				
ANR	3809850	EqualityExpression	ret != 0		3809817	0		!=			
ANR	3809851	Identifier	ret		3809817	0					
ANR	3809852	PrimaryExpression	0		3809817	1					
ANR	3809853	CompoundStatement		8:15:159:159	3809817	1					
ANR	3809854	ReturnStatement	return NULL ;	626:2:15986:15997	3809817	0	True				
ANR	3809855	Identifier	NULL		3809817	0					
ANR	3809856	ExpressionStatement	"ret = m_td_table -> lookup ( fquser , td )"	630:1:16045:16081	3809817	5	True				
ANR	3809857	AssignmentExpression	"ret = m_td_table -> lookup ( fquser , td )"		3809817	0		=			
ANR	3809858	Identifier	ret		3809817	0					
ANR	3809859	CallExpression	"m_td_table -> lookup ( fquser , td )"		3809817	1					
ANR	3809860	Callee	m_td_table -> lookup		3809817	0					
ANR	3809861	PtrMemberAccess	m_td_table -> lookup		3809817	0					
ANR	3809862	Identifier	m_td_table		3809817	0					
ANR	3809863	Identifier	lookup		3809817	1					
ANR	3809864	ArgumentList	fquser		3809817	1					
ANR	3809865	Argument	fquser		3809817	0					
ANR	3809866	Identifier	fquser		3809817	0					
ANR	3809867	Argument	td		3809817	1					
ANR	3809868	Identifier	td		3809817	0					
ANR	3809869	IfStatement	if ( ret != 0 )		3809817	6					
ANR	3809870	Condition	ret != 0	631:5:16088:16095	3809817	0	True				
ANR	3809871	EqualityExpression	ret != 0		3809817	0		!=			
ANR	3809872	Identifier	ret		3809817	0					
ANR	3809873	PrimaryExpression	0		3809817	1					
ANR	3809874	CompoundStatement		15:15:290:290	3809817	1					
ANR	3809875	ReturnStatement	return NULL ;	633:2:16117:16128	3809817	0	True				
ANR	3809876	Identifier	NULL		3809817	0					
ANR	3809877	ReturnStatement	return td ;	636:1:16135:16144	3809817	7	True				
ANR	3809878	Identifier	td		3809817	0					
ANR	3809879	ReturnType	TransferDaemon *		3809817	1					
ANR	3809880	Identifier	TDMan :: find_td_by_ident		3809817	2					
ANR	3809881	ParameterList	MyString id		3809817	3					
ANR	3809882	Parameter	MyString id	616:24:15794:15804	3809817	0	True				
ANR	3809883	ParameterType	MyString		3809817	0					
ANR	3809884	Identifier	id		3809817	1					
ANR	3809885	CFGEntryNode	ENTRY		3809817		True				
ANR	3809886	CFGExitNode	EXIT		3809817		True				
ANR	3809887	Symbol	ret		3809817						
ANR	3809888	Symbol	td		3809817						
ANR	3809889	Symbol	NULL		3809817						
ANR	3809890	Symbol	m_id_table -> lookup		3809817						
ANR	3809891	Symbol	id		3809817						
ANR	3809892	Symbol	fquser		3809817						
ANR	3809893	Symbol	m_id_table		3809817						
ANR	3809894	Symbol	m_td_table -> lookup		3809817						
ANR	3809895	Symbol	* m_td_table		3809817						
ANR	3809896	Symbol	* m_id_table		3809817						
ANR	3809897	Symbol	m_td_table		3809817						
ANR	3809898	Function	TDMan :: find_td_by_ident	639:0:16149:16263							
ANR	3809899	FunctionDef	TDMan :: find_td_by_ident (char * ident)		3809898	0					
ANR	3809900	CompoundStatement		641:0:16202:16263	3809898	0					
ANR	3809901	IdentifierDeclStatement	MyString id ;	642:1:16205:16216	3809898	0	True				
ANR	3809902	IdentifierDecl	id		3809898	0					
ANR	3809903	IdentifierDeclType	MyString		3809898	0					
ANR	3809904	Identifier	id		3809898	1					
ANR	3809905	ExpressionStatement	id = ident	644:1:16220:16230	3809898	1	True				
ANR	3809906	AssignmentExpression	id = ident		3809898	0		=			
ANR	3809907	Identifier	id		3809898	0					
ANR	3809908	Identifier	ident		3809898	1					
ANR	3809909	ReturnStatement	return find_td_by_ident ( id ) ;	646:1:16234:16261	3809898	2	True				
ANR	3809910	CallExpression	find_td_by_ident ( id )		3809898	0					
ANR	3809911	Callee	find_td_by_ident		3809898	0					
ANR	3809912	Identifier	find_td_by_ident		3809898	0					
ANR	3809913	ArgumentList	id		3809898	1					
ANR	3809914	Argument	id		3809898	0					
ANR	3809915	Identifier	id		3809898	0					
ANR	3809916	ReturnType	TransferDaemon *		3809898	1					
ANR	3809917	Identifier	TDMan :: find_td_by_ident		3809898	2					
ANR	3809918	ParameterList	char * ident		3809898	3					
ANR	3809919	Parameter	char * ident	640:24:16189:16199	3809898	0	True				
ANR	3809920	ParameterType	char *		3809898	0					
ANR	3809921	Identifier	ident		3809898	1					
ANR	3809922	CFGEntryNode	ENTRY		3809898		True				
ANR	3809923	CFGExitNode	EXIT		3809898		True				
ANR	3809924	Symbol	find_td_by_ident		3809898						
ANR	3809925	Symbol	ident		3809898						
ANR	3809926	Symbol	id		3809898						
ANR	3809927	Function	TDMan :: invoke_a_td	650:0:16267:19537							
ANR	3809928	FunctionDef	TDMan :: invoke_a_td (TransferDaemon * td)		3809927	0					
ANR	3809929	CompoundStatement		652:0:16311:19537	3809927	0					
ANR	3809930	IdentifierDeclStatement	TransferDaemon * found_td = NULL ;	653:1:16314:16345	3809927	0	True				
ANR	3809931	IdentifierDecl	* found_td = NULL		3809927	0					
ANR	3809932	IdentifierDeclType	TransferDaemon *		3809927	0					
ANR	3809933	Identifier	found_td		3809927	1					
ANR	3809934	AssignmentExpression	* found_td = NULL		3809927	2		=			
ANR	3809935	Identifier	NULL		3809927	0					
ANR	3809936	Identifier	NULL		3809927	1					
ANR	3809937	IdentifierDeclStatement	MyString found_id ;	654:1:16348:16365	3809927	1	True				
ANR	3809938	IdentifierDecl	found_id		3809927	0					
ANR	3809939	IdentifierDeclType	MyString		3809927	0					
ANR	3809940	Identifier	found_id		3809927	1					
ANR	3809941	IdentifierDeclStatement	ArgList args ;	655:1:16368:16380	3809927	2	True				
ANR	3809942	IdentifierDecl	args		3809927	0					
ANR	3809943	IdentifierDeclType	ArgList		3809927	0					
ANR	3809944	Identifier	args		3809927	1					
ANR	3809945	IdentifierDeclStatement	char * td_path = NULL ;	656:1:16383:16403	3809927	3	True				
ANR	3809946	IdentifierDecl	* td_path = NULL		3809927	0					
ANR	3809947	IdentifierDeclType	char *		3809927	0					
ANR	3809948	Identifier	td_path		3809927	1					
ANR	3809949	AssignmentExpression	* td_path = NULL		3809927	2		=			
ANR	3809950	Identifier	NULL		3809927	0					
ANR	3809951	Identifier	NULL		3809927	1					
ANR	3809952	IdentifierDeclStatement	pid_t pid ;	657:1:16406:16415	3809927	4	True				
ANR	3809953	IdentifierDecl	pid		3809927	0					
ANR	3809954	IdentifierDeclType	pid_t		3809927	0					
ANR	3809955	Identifier	pid		3809927	1					
ANR	3809956	IdentifierDeclStatement	MyString args_display ;	658:1:16418:16439	3809927	5	True				
ANR	3809957	IdentifierDecl	args_display		3809927	0					
ANR	3809958	IdentifierDeclType	MyString		3809927	0					
ANR	3809959	Identifier	args_display		3809927	1					
ANR	3809960	Statement	static	659:1:16442:16447	3809927	6	True				
ANR	3809961	IdentifierDeclStatement	int rid = - 1 ;	659:8:16449:16461	3809927	7	True				
ANR	3809962	IdentifierDecl	rid = - 1		3809927	0					
ANR	3809963	IdentifierDeclType	int		3809927	0					
ANR	3809964	Identifier	rid		3809927	1					
ANR	3809965	AssignmentExpression	rid = - 1		3809927	2		=			
ANR	3809966	Identifier	rid		3809927	0					
ANR	3809967	UnaryOperationExpression	- 1		3809927	1					
ANR	3809968	UnaryOperator	-		3809927	0					
ANR	3809969	PrimaryExpression	1		3809927	1					
ANR	3809970	ExpressionStatement	ASSERT ( td != NULL )	661:1:16465:16483	3809927	8	True				
ANR	3809971	CallExpression	ASSERT ( td != NULL )		3809927	0					
ANR	3809972	Callee	ASSERT		3809927	0					
ANR	3809973	Identifier	ASSERT		3809927	0					
ANR	3809974	ArgumentList	td != NULL		3809927	1					
ANR	3809975	Argument	td != NULL		3809927	0					
ANR	3809976	EqualityExpression	td != NULL		3809927	0		!=			
ANR	3809977	Identifier	td		3809927	0					
ANR	3809978	Identifier	NULL		3809927	1					
ANR	3809979	SwitchStatement	switch ( td -> get_status ( ) )		3809927	9					
ANR	3809980	Condition	td -> get_status ( )	666:8:16621:16636	3809927	0	True				
ANR	3809981	CallExpression	td -> get_status ( )		3809927	0					
ANR	3809982	Callee	td -> get_status		3809927	0					
ANR	3809983	PtrMemberAccess	td -> get_status		3809927	0					
ANR	3809984	Identifier	td		3809927	0					
ANR	3809985	Identifier	get_status		3809927	1					
ANR	3809986	ArgumentList			3809927	1					
ANR	3809987	CompoundStatement		15:26:327:327	3809927	1					
ANR	3809988	Label	case TD_PRE_INVOKED :	667:2:16643:16662	3809927	0	True				
ANR	3809989	Identifier	TD_PRE_INVOKED		3809927	0					
ANR	3809990	BreakStatement	break ;	669:3:16682:16687	3809927	1	True				
ANR	3809991	Label	case TD_INVOKED :	670:2:16691:16706	3809927	2	True				
ANR	3809992	Identifier	TD_INVOKED		3809927	0					
ANR	3809993	BreakStatement	break ;	672:3:16771:16776	3809927	3	True				
ANR	3809994	Label	case TD_REGISTERED :	673:2:16780:16798	3809927	4	True				
ANR	3809995	Identifier	TD_REGISTERED		3809927	0					
ANR	3809996	ReturnStatement	return false ;	675:3:16869:16881	3809927	5	True				
ANR	3809997	Identifier	false		3809927	0					
ANR	3809998	BreakStatement	break ;	676:3:16886:16891	3809927	6	True				
ANR	3809999	Label	case TD_MIA :	677:2:16895:16906	3809927	7	True				
ANR	3810000	Identifier	TD_MIA		3809927	0					
ANR	3810001	BreakStatement	break ;	679:3:16937:16942	3809927	8	True				
ANR	3810002	IfStatement	"if ( m_td_table -> lookup ( td -> get_fquser ( ) , found_td ) != 0 )"		3809927	10					
ANR	3810003	Condition	"m_td_table -> lookup ( td -> get_fquser ( ) , found_td ) != 0"	690:5:17223:17273	3809927	0	True				
ANR	3810004	EqualityExpression	"m_td_table -> lookup ( td -> get_fquser ( ) , found_td ) != 0"		3809927	0		!=			
ANR	3810005	CallExpression	"m_td_table -> lookup ( td -> get_fquser ( ) , found_td )"		3809927	0					
ANR	3810006	Callee	m_td_table -> lookup		3809927	0					
ANR	3810007	PtrMemberAccess	m_td_table -> lookup		3809927	0					
ANR	3810008	Identifier	m_td_table		3809927	0					
ANR	3810009	Identifier	lookup		3809927	1					
ANR	3810010	ArgumentList	td -> get_fquser ( )		3809927	1					
ANR	3810011	Argument	td -> get_fquser ( )		3809927	0					
ANR	3810012	CallExpression	td -> get_fquser ( )		3809927	0					
ANR	3810013	Callee	td -> get_fquser		3809927	0					
ANR	3810014	PtrMemberAccess	td -> get_fquser		3809927	0					
ANR	3810015	Identifier	td		3809927	0					
ANR	3810016	Identifier	get_fquser		3809927	1					
ANR	3810017	ArgumentList			3809927	1					
ANR	3810018	Argument	found_td		3809927	1					
ANR	3810019	Identifier	found_td		3809927	0					
ANR	3810020	PrimaryExpression	0		3809927	1					
ANR	3810021	CompoundStatement		39:58:964:964	3809927	1					
ANR	3810022	ExpressionStatement	"m_td_table -> insert ( td -> get_fquser ( ) , td )"	691:2:17280:17320	3809927	0	True				
ANR	3810023	CallExpression	"m_td_table -> insert ( td -> get_fquser ( ) , td )"		3809927	0					
ANR	3810024	Callee	m_td_table -> insert		3809927	0					
ANR	3810025	PtrMemberAccess	m_td_table -> insert		3809927	0					
ANR	3810026	Identifier	m_td_table		3809927	0					
ANR	3810027	Identifier	insert		3809927	1					
ANR	3810028	ArgumentList	td -> get_fquser ( )		3809927	1					
ANR	3810029	Argument	td -> get_fquser ( )		3809927	0					
ANR	3810030	CallExpression	td -> get_fquser ( )		3809927	0					
ANR	3810031	Callee	td -> get_fquser		3809927	0					
ANR	3810032	PtrMemberAccess	td -> get_fquser		3809927	0					
ANR	3810033	Identifier	td		3809927	0					
ANR	3810034	Identifier	get_fquser		3809927	1					
ANR	3810035	ArgumentList			3809927	1					
ANR	3810036	Argument	td		3809927	1					
ANR	3810037	Identifier	td		3809927	0					
ANR	3810038	IfStatement	"if ( m_id_table -> lookup ( td -> get_id ( ) , found_id ) != 0 )"		3809927	11					
ANR	3810039	Condition	"m_id_table -> lookup ( td -> get_id ( ) , found_id ) != 0"	695:5:17369:17415	3809927	0	True				
ANR	3810040	EqualityExpression	"m_id_table -> lookup ( td -> get_id ( ) , found_id ) != 0"		3809927	0		!=			
ANR	3810041	CallExpression	"m_id_table -> lookup ( td -> get_id ( ) , found_id )"		3809927	0					
ANR	3810042	Callee	m_id_table -> lookup		3809927	0					
ANR	3810043	PtrMemberAccess	m_id_table -> lookup		3809927	0					
ANR	3810044	Identifier	m_id_table		3809927	0					
ANR	3810045	Identifier	lookup		3809927	1					
ANR	3810046	ArgumentList	td -> get_id ( )		3809927	1					
ANR	3810047	Argument	td -> get_id ( )		3809927	0					
ANR	3810048	CallExpression	td -> get_id ( )		3809927	0					
ANR	3810049	Callee	td -> get_id		3809927	0					
ANR	3810050	PtrMemberAccess	td -> get_id		3809927	0					
ANR	3810051	Identifier	td		3809927	0					
ANR	3810052	Identifier	get_id		3809927	1					
ANR	3810053	ArgumentList			3809927	1					
ANR	3810054	Argument	found_id		3809927	1					
ANR	3810055	Identifier	found_id		3809927	0					
ANR	3810056	PrimaryExpression	0		3809927	1					
ANR	3810057	CompoundStatement		44:54:1106:1106	3809927	1					
ANR	3810058	ExpressionStatement	"m_id_table -> insert ( td -> get_id ( ) , td -> get_fquser ( ) )"	696:2:17422:17472	3809927	0	True				
ANR	3810059	CallExpression	"m_id_table -> insert ( td -> get_id ( ) , td -> get_fquser ( ) )"		3809927	0					
ANR	3810060	Callee	m_id_table -> insert		3809927	0					
ANR	3810061	PtrMemberAccess	m_id_table -> insert		3809927	0					
ANR	3810062	Identifier	m_id_table		3809927	0					
ANR	3810063	Identifier	insert		3809927	1					
ANR	3810064	ArgumentList	td -> get_id ( )		3809927	1					
ANR	3810065	Argument	td -> get_id ( )		3809927	0					
ANR	3810066	CallExpression	td -> get_id ( )		3809927	0					
ANR	3810067	Callee	td -> get_id		3809927	0					
ANR	3810068	PtrMemberAccess	td -> get_id		3809927	0					
ANR	3810069	Identifier	td		3809927	0					
ANR	3810070	Identifier	get_id		3809927	1					
ANR	3810071	ArgumentList			3809927	1					
ANR	3810072	Argument	td -> get_fquser ( )		3809927	1					
ANR	3810073	CallExpression	td -> get_fquser ( )		3809927	0					
ANR	3810074	Callee	td -> get_fquser		3809927	0					
ANR	3810075	PtrMemberAccess	td -> get_fquser		3809927	0					
ANR	3810076	Identifier	td		3809927	0					
ANR	3810077	Identifier	get_fquser		3809927	1					
ANR	3810078	ArgumentList			3809927	1					
ANR	3810079	ExpressionStatement	"td_path = param ( ""TRANSFERD"" )"	703:1:17599:17627	3809927	12	True				
ANR	3810080	AssignmentExpression	"td_path = param ( ""TRANSFERD"" )"		3809927	0		=			
ANR	3810081	Identifier	td_path		3809927	0					
ANR	3810082	CallExpression	"param ( ""TRANSFERD"" )"		3809927	1					
ANR	3810083	Callee	param		3809927	0					
ANR	3810084	Identifier	param		3809927	0					
ANR	3810085	ArgumentList	"""TRANSFERD"""		3809927	1					
ANR	3810086	Argument	"""TRANSFERD"""		3809927	0					
ANR	3810087	PrimaryExpression	"""TRANSFERD"""		3809927	0					
ANR	3810088	IfStatement	if ( td_path == NULL )		3809927	13					
ANR	3810089	Condition	td_path == NULL	704:5:17634:17648	3809927	0	True				
ANR	3810090	EqualityExpression	td_path == NULL		3809927	0		==			
ANR	3810091	Identifier	td_path		3809927	0					
ANR	3810092	Identifier	NULL		3809927	1					
ANR	3810093	CompoundStatement		53:22:1339:1339	3809927	1					
ANR	3810094	ExpressionStatement	"EXCEPT ( ""TRANSFERD must be defined in the config file!"" )"	705:2:17655:17710	3809927	0	True				
ANR	3810095	CallExpression	"EXCEPT ( ""TRANSFERD must be defined in the config file!"" )"		3809927	0					
ANR	3810096	Callee	EXCEPT		3809927	0					
ANR	3810097	Identifier	EXCEPT		3809927	0					
ANR	3810098	ArgumentList	"""TRANSFERD must be defined in the config file!"""		3809927	1					
ANR	3810099	Argument	"""TRANSFERD must be defined in the config file!"""		3809927	0					
ANR	3810100	PrimaryExpression	"""TRANSFERD must be defined in the config file!"""		3809927	0					
ANR	3810101	ExpressionStatement	args . AppendArg ( condor_basename ( td_path ) )	712:1:17870:17910	3809927	14	True				
ANR	3810102	CallExpression	args . AppendArg ( condor_basename ( td_path ) )		3809927	0					
ANR	3810103	Callee	args . AppendArg		3809927	0					
ANR	3810104	MemberAccess	args . AppendArg		3809927	0					
ANR	3810105	Identifier	args		3809927	0					
ANR	3810106	Identifier	AppendArg		3809927	1					
ANR	3810107	ArgumentList	condor_basename ( td_path )		3809927	1					
ANR	3810108	Argument	condor_basename ( td_path )		3809927	0					
ANR	3810109	CallExpression	condor_basename ( td_path )		3809927	0					
ANR	3810110	Callee	condor_basename		3809927	0					
ANR	3810111	Identifier	condor_basename		3809927	0					
ANR	3810112	ArgumentList	td_path		3809927	1					
ANR	3810113	Argument	td_path		3809927	0					
ANR	3810114	Identifier	td_path		3809927	0					
ANR	3810115	ExpressionStatement	"args . AppendArg ( ""-f"" )"	715:1:17947:17967	3809927	15	True				
ANR	3810116	CallExpression	"args . AppendArg ( ""-f"" )"		3809927	0					
ANR	3810117	Callee	args . AppendArg		3809927	0					
ANR	3810118	MemberAccess	args . AppendArg		3809927	0					
ANR	3810119	Identifier	args		3809927	0					
ANR	3810120	Identifier	AppendArg		3809927	1					
ANR	3810121	ArgumentList	"""-f"""		3809927	1					
ANR	3810122	Argument	"""-f"""		3809927	0					
ANR	3810123	PrimaryExpression	"""-f"""		3809927	0					
ANR	3810124	ExpressionStatement	"args . AppendArg ( ""--schedd"" )"	718:1:18002:18028	3809927	16	True				
ANR	3810125	CallExpression	"args . AppendArg ( ""--schedd"" )"		3809927	0					
ANR	3810126	Callee	args . AppendArg		3809927	0					
ANR	3810127	MemberAccess	args . AppendArg		3809927	0					
ANR	3810128	Identifier	args		3809927	0					
ANR	3810129	Identifier	AppendArg		3809927	1					
ANR	3810130	ArgumentList	"""--schedd"""		3809927	1					
ANR	3810131	Argument	"""--schedd"""		3809927	0					
ANR	3810132	PrimaryExpression	"""--schedd"""		3809927	0					
ANR	3810133	ExpressionStatement	args . AppendArg ( daemonCore -> InfoCommandSinfulString ( ) )	719:1:18031:18084	3809927	17	True				
ANR	3810134	CallExpression	args . AppendArg ( daemonCore -> InfoCommandSinfulString ( ) )		3809927	0					
ANR	3810135	Callee	args . AppendArg		3809927	0					
ANR	3810136	MemberAccess	args . AppendArg		3809927	0					
ANR	3810137	Identifier	args		3809927	0					
ANR	3810138	Identifier	AppendArg		3809927	1					
ANR	3810139	ArgumentList	daemonCore -> InfoCommandSinfulString ( )		3809927	1					
ANR	3810140	Argument	daemonCore -> InfoCommandSinfulString ( )		3809927	0					
ANR	3810141	CallExpression	daemonCore -> InfoCommandSinfulString ( )		3809927	0					
ANR	3810142	Callee	daemonCore -> InfoCommandSinfulString		3809927	0					
ANR	3810143	PtrMemberAccess	daemonCore -> InfoCommandSinfulString		3809927	0					
ANR	3810144	Identifier	daemonCore		3809927	0					
ANR	3810145	Identifier	InfoCommandSinfulString		3809927	1					
ANR	3810146	ArgumentList			3809927	1					
ANR	3810147	ExpressionStatement	"args . AppendArg ( ""--id"" )"	722:1:18114:18136	3809927	18	True				
ANR	3810148	CallExpression	"args . AppendArg ( ""--id"" )"		3809927	0					
ANR	3810149	Callee	args . AppendArg		3809927	0					
ANR	3810150	MemberAccess	args . AppendArg		3809927	0					
ANR	3810151	Identifier	args		3809927	0					
ANR	3810152	Identifier	AppendArg		3809927	1					
ANR	3810153	ArgumentList	"""--id"""		3809927	1					
ANR	3810154	Argument	"""--id"""		3809927	0					
ANR	3810155	PrimaryExpression	"""--id"""		3809927	0					
ANR	3810156	ExpressionStatement	args . AppendArg ( td -> get_id ( ) )	723:1:18139:18167	3809927	19	True				
ANR	3810157	CallExpression	args . AppendArg ( td -> get_id ( ) )		3809927	0					
ANR	3810158	Callee	args . AppendArg		3809927	0					
ANR	3810159	MemberAccess	args . AppendArg		3809927	0					
ANR	3810160	Identifier	args		3809927	0					
ANR	3810161	Identifier	AppendArg		3809927	1					
ANR	3810162	ArgumentList	td -> get_id ( )		3809927	1					
ANR	3810163	Argument	td -> get_id ( )		3809927	0					
ANR	3810164	CallExpression	td -> get_id ( )		3809927	0					
ANR	3810165	Callee	td -> get_id		3809927	0					
ANR	3810166	PtrMemberAccess	td -> get_id		3809927	0					
ANR	3810167	Identifier	td		3809927	0					
ANR	3810168	Identifier	get_id		3809927	1					
ANR	3810169	ArgumentList			3809927	1					
ANR	3810170	ExpressionStatement	"args . AppendArg ( ""--timeout"" )"	726:1:18231:18258	3809927	20	True				
ANR	3810171	CallExpression	"args . AppendArg ( ""--timeout"" )"		3809927	0					
ANR	3810172	Callee	args . AppendArg		3809927	0					
ANR	3810173	MemberAccess	args . AppendArg		3809927	0					
ANR	3810174	Identifier	args		3809927	0					
ANR	3810175	Identifier	AppendArg		3809927	1					
ANR	3810176	ArgumentList	"""--timeout"""		3809927	1					
ANR	3810177	Argument	"""--timeout"""		3809927	0					
ANR	3810178	PrimaryExpression	"""--timeout"""		3809927	0					
ANR	3810179	ExpressionStatement	args . AppendArg ( 20 * 60 )	727:1:18261:18282	3809927	21	True				
ANR	3810180	CallExpression	args . AppendArg ( 20 * 60 )		3809927	0					
ANR	3810181	Callee	args . AppendArg		3809927	0					
ANR	3810182	MemberAccess	args . AppendArg		3809927	0					
ANR	3810183	Identifier	args		3809927	0					
ANR	3810184	Identifier	AppendArg		3809927	1					
ANR	3810185	ArgumentList	20 * 60		3809927	1					
ANR	3810186	Argument	20 * 60		3809927	0					
ANR	3810187	MultiplicativeExpression	20 * 60		3809927	0		*			
ANR	3810188	PrimaryExpression	20		3809927	0					
ANR	3810189	PrimaryExpression	60		3809927	1					
ANR	3810190	IfStatement	if ( rid == - 1 )		3809927	22					
ANR	3810191	Condition	rid == - 1	733:5:18479:18487	3809927	0	True				
ANR	3810192	EqualityExpression	rid == - 1		3809927	0		==			
ANR	3810193	Identifier	rid		3809927	0					
ANR	3810194	UnaryOperationExpression	- 1		3809927	1					
ANR	3810195	UnaryOperator	-		3809927	0					
ANR	3810196	PrimaryExpression	1		3809927	1					
ANR	3810197	CompoundStatement		82:16:2178:2178	3809927	1					
ANR	3810198	ExpressionStatement	"rid = daemonCore -> Register_Reaper ( ""transferd_reaper"" , ( ReaperHandlercpp ) & TDMan :: transferd_reaper , ""transferd_reaper"" , this )"	734:2:18494:18626	3809927	0	True				
ANR	3810199	AssignmentExpression	"rid = daemonCore -> Register_Reaper ( ""transferd_reaper"" , ( ReaperHandlercpp ) & TDMan :: transferd_reaper , ""transferd_reaper"" , this )"		3809927	0		=			
ANR	3810200	Identifier	rid		3809927	0					
ANR	3810201	CallExpression	"daemonCore -> Register_Reaper ( ""transferd_reaper"" , ( ReaperHandlercpp ) & TDMan :: transferd_reaper , ""transferd_reaper"" , this )"		3809927	1					
ANR	3810202	Callee	daemonCore -> Register_Reaper		3809927	0					
ANR	3810203	PtrMemberAccess	daemonCore -> Register_Reaper		3809927	0					
ANR	3810204	Identifier	daemonCore		3809927	0					
ANR	3810205	Identifier	Register_Reaper		3809927	1					
ANR	3810206	ArgumentList	"""transferd_reaper"""		3809927	1					
ANR	3810207	Argument	"""transferd_reaper"""		3809927	0					
ANR	3810208	PrimaryExpression	"""transferd_reaper"""		3809927	0					
ANR	3810209	Argument	( ReaperHandlercpp ) & TDMan :: transferd_reaper		3809927	1					
ANR	3810210	CastExpression	( ReaperHandlercpp ) & TDMan :: transferd_reaper		3809927	0					
ANR	3810211	CastTarget	ReaperHandlercpp		3809927	0					
ANR	3810212	UnaryOperationExpression	& TDMan :: transferd_reaper		3809927	1					
ANR	3810213	UnaryOperator	&		3809927	0					
ANR	3810214	Identifier	TDMan :: transferd_reaper		3809927	1					
ANR	3810215	Argument	"""transferd_reaper"""		3809927	2					
ANR	3810216	PrimaryExpression	"""transferd_reaper"""		3809927	0					
ANR	3810217	Argument	this		3809927	3					
ANR	3810218	Identifier	this		3809927	0					
ANR	3810219	ExpressionStatement	args . GetArgsStringForDisplay ( & args_display )	743:1:18729:18772	3809927	23	True				
ANR	3810220	CallExpression	args . GetArgsStringForDisplay ( & args_display )		3809927	0					
ANR	3810221	Callee	args . GetArgsStringForDisplay		3809927	0					
ANR	3810222	MemberAccess	args . GetArgsStringForDisplay		3809927	0					
ANR	3810223	Identifier	args		3809927	0					
ANR	3810224	Identifier	GetArgsStringForDisplay		3809927	1					
ANR	3810225	ArgumentList	& args_display		3809927	1					
ANR	3810226	Argument	& args_display		3809927	0					
ANR	3810227	UnaryOperationExpression	& args_display		3809927	0					
ANR	3810228	UnaryOperator	&		3809927	0					
ANR	3810229	Identifier	args_display		3809927	1					
ANR	3810230	ExpressionStatement	"dprintf ( D_ALWAYS , ""Invoking for user '%s' a transferd: %s\\n"" , td -> get_fquser ( ) . Value ( ) , args_display . Value ( ) )"	744:1:18775:18889	3809927	24	True				
ANR	3810231	CallExpression	"dprintf ( D_ALWAYS , ""Invoking for user '%s' a transferd: %s\\n"" , td -> get_fquser ( ) . Value ( ) , args_display . Value ( ) )"		3809927	0					
ANR	3810232	Callee	dprintf		3809927	0					
ANR	3810233	Identifier	dprintf		3809927	0					
ANR	3810234	ArgumentList	D_ALWAYS		3809927	1					
ANR	3810235	Argument	D_ALWAYS		3809927	0					
ANR	3810236	Identifier	D_ALWAYS		3809927	0					
ANR	3810237	Argument	"""Invoking for user '%s' a transferd: %s\\n"""		3809927	1					
ANR	3810238	PrimaryExpression	"""Invoking for user '%s' a transferd: %s\\n"""		3809927	0					
ANR	3810239	Argument	td -> get_fquser ( ) . Value ( )		3809927	2					
ANR	3810240	CallExpression	td -> get_fquser ( ) . Value ( )		3809927	0					
ANR	3810241	Callee	td -> get_fquser ( ) . Value		3809927	0					
ANR	3810242	MemberAccess	td -> get_fquser ( ) . Value		3809927	0					
ANR	3810243	CallExpression	td -> get_fquser ( )		3809927	0					
ANR	3810244	Callee	td -> get_fquser		3809927	0					
ANR	3810245	PtrMemberAccess	td -> get_fquser		3809927	0					
ANR	3810246	Identifier	td		3809927	0					
ANR	3810247	Identifier	get_fquser		3809927	1					
ANR	3810248	ArgumentList			3809927	1					
ANR	3810249	Identifier	Value		3809927	1					
ANR	3810250	ArgumentList			3809927	1					
ANR	3810251	Argument	args_display . Value ( )		3809927	3					
ANR	3810252	CallExpression	args_display . Value ( )		3809927	0					
ANR	3810253	Callee	args_display . Value		3809927	0					
ANR	3810254	MemberAccess	args_display . Value		3809927	0					
ANR	3810255	Identifier	args_display		3809927	0					
ANR	3810256	Identifier	Value		3809927	1					
ANR	3810257	ArgumentList			3809927	1					
ANR	3810258	ExpressionStatement	"pid = daemonCore -> Create_Process ( td_path , args , PRIV_ROOT , rid )"	749:1:18933:18998	3809927	25	True				
ANR	3810259	AssignmentExpression	"pid = daemonCore -> Create_Process ( td_path , args , PRIV_ROOT , rid )"		3809927	0		=			
ANR	3810260	Identifier	pid		3809927	0					
ANR	3810261	CallExpression	"daemonCore -> Create_Process ( td_path , args , PRIV_ROOT , rid )"		3809927	1					
ANR	3810262	Callee	daemonCore -> Create_Process		3809927	0					
ANR	3810263	PtrMemberAccess	daemonCore -> Create_Process		3809927	0					
ANR	3810264	Identifier	daemonCore		3809927	0					
ANR	3810265	Identifier	Create_Process		3809927	1					
ANR	3810266	ArgumentList	td_path		3809927	1					
ANR	3810267	Argument	td_path		3809927	0					
ANR	3810268	Identifier	td_path		3809927	0					
ANR	3810269	Argument	args		3809927	1					
ANR	3810270	Identifier	args		3809927	0					
ANR	3810271	Argument	PRIV_ROOT		3809927	2					
ANR	3810272	Identifier	PRIV_ROOT		3809927	0					
ANR	3810273	Argument	rid		3809927	3					
ANR	3810274	Identifier	rid		3809927	0					
ANR	3810275	ExpressionStatement	"dprintf ( D_ALWAYS , ""Created transferd with pid %d\\n"" , pid )"	750:1:19001:19058	3809927	26	True				
ANR	3810276	CallExpression	"dprintf ( D_ALWAYS , ""Created transferd with pid %d\\n"" , pid )"		3809927	0					
ANR	3810277	Callee	dprintf		3809927	0					
ANR	3810278	Identifier	dprintf		3809927	0					
ANR	3810279	ArgumentList	D_ALWAYS		3809927	1					
ANR	3810280	Argument	D_ALWAYS		3809927	0					
ANR	3810281	Identifier	D_ALWAYS		3809927	0					
ANR	3810282	Argument	"""Created transferd with pid %d\\n"""		3809927	1					
ANR	3810283	PrimaryExpression	"""Created transferd with pid %d\\n"""		3809927	0					
ANR	3810284	Argument	pid		3809927	2					
ANR	3810285	Identifier	pid		3809927	0					
ANR	3810286	IfStatement	if ( pid == FALSE )		3809927	27					
ANR	3810287	Condition	pid == FALSE	752:5:19066:19077	3809927	0	True				
ANR	3810288	EqualityExpression	pid == FALSE		3809927	0		==			
ANR	3810289	Identifier	pid		3809927	0					
ANR	3810290	Identifier	FALSE		3809927	1					
ANR	3810291	CompoundStatement		101:19:2768:2768	3809927	1					
ANR	3810292	ExpressionStatement	"EXCEPT ( ""failed to create transferd process."" )"	754:2:19098:19143	3809927	0	True				
ANR	3810293	CallExpression	"EXCEPT ( ""failed to create transferd process."" )"		3809927	0					
ANR	3810294	Callee	EXCEPT		3809927	0					
ANR	3810295	Identifier	EXCEPT		3809927	0					
ANR	3810296	ArgumentList	"""failed to create transferd process."""		3809927	1					
ANR	3810297	Argument	"""failed to create transferd process."""		3809927	0					
ANR	3810298	PrimaryExpression	"""failed to create transferd process."""		3809927	0					
ANR	3810299	ReturnStatement	return FALSE ;	755:2:19147:19159	3809927	1	True				
ANR	3810300	Identifier	FALSE		3809927	0					
ANR	3810301	ExpressionStatement	"ASSERT ( m_td_pid_table -> lookup ( ( long ) pid , found_td ) != 0 )"	762:1:19317:19373	3809927	28	True				
ANR	3810302	CallExpression	"ASSERT ( m_td_pid_table -> lookup ( ( long ) pid , found_td ) != 0 )"		3809927	0					
ANR	3810303	Callee	ASSERT		3809927	0					
ANR	3810304	Identifier	ASSERT		3809927	0					
ANR	3810305	ArgumentList	"m_td_pid_table -> lookup ( ( long ) pid , found_td ) != 0"		3809927	1					
ANR	3810306	Argument	"m_td_pid_table -> lookup ( ( long ) pid , found_td ) != 0"		3809927	0					
ANR	3810307	EqualityExpression	"m_td_pid_table -> lookup ( ( long ) pid , found_td ) != 0"		3809927	0		!=			
ANR	3810308	CallExpression	"m_td_pid_table -> lookup ( ( long ) pid , found_td )"		3809927	0					
ANR	3810309	Callee	m_td_pid_table -> lookup		3809927	0					
ANR	3810310	PtrMemberAccess	m_td_pid_table -> lookup		3809927	0					
ANR	3810311	Identifier	m_td_pid_table		3809927	0					
ANR	3810312	Identifier	lookup		3809927	1					
ANR	3810313	ArgumentList	( long ) pid		3809927	1					
ANR	3810314	Argument	( long ) pid		3809927	0					
ANR	3810315	CastExpression	( long ) pid		3809927	0					
ANR	3810316	CastTarget	long		3809927	0					
ANR	3810317	Identifier	pid		3809927	1					
ANR	3810318	Argument	found_td		3809927	1					
ANR	3810319	Identifier	found_td		3809927	0					
ANR	3810320	PrimaryExpression	0		3809927	1					
ANR	3810321	ExpressionStatement	"m_td_pid_table -> insert ( ( long ) pid , td )"	765:1:19435:19472	3809927	29	True				
ANR	3810322	CallExpression	"m_td_pid_table -> insert ( ( long ) pid , td )"		3809927	0					
ANR	3810323	Callee	m_td_pid_table -> insert		3809927	0					
ANR	3810324	PtrMemberAccess	m_td_pid_table -> insert		3809927	0					
ANR	3810325	Identifier	m_td_pid_table		3809927	0					
ANR	3810326	Identifier	insert		3809927	1					
ANR	3810327	ArgumentList	( long ) pid		3809927	1					
ANR	3810328	Argument	( long ) pid		3809927	0					
ANR	3810329	CastExpression	( long ) pid		3809927	0					
ANR	3810330	CastTarget	long		3809927	0					
ANR	3810331	Identifier	pid		3809927	1					
ANR	3810332	Argument	td		3809927	1					
ANR	3810333	Identifier	td		3809927	0					
ANR	3810334	ExpressionStatement	free ( td_path )	767:1:19477:19490	3809927	30	True				
ANR	3810335	CallExpression	free ( td_path )		3809927	0					
ANR	3810336	Callee	free		3809927	0					
ANR	3810337	Identifier	free		3809927	0					
ANR	3810338	ArgumentList	td_path		3809927	1					
ANR	3810339	Argument	td_path		3809927	0					
ANR	3810340	Identifier	td_path		3809927	0					
ANR	3810341	ExpressionStatement	td -> set_status ( TD_INVOKED )	769:1:19494:19520	3809927	31	True				
ANR	3810342	CallExpression	td -> set_status ( TD_INVOKED )		3809927	0					
ANR	3810343	Callee	td -> set_status		3809927	0					
ANR	3810344	PtrMemberAccess	td -> set_status		3809927	0					
ANR	3810345	Identifier	td		3809927	0					
ANR	3810346	Identifier	set_status		3809927	1					
ANR	3810347	ArgumentList	TD_INVOKED		3809927	1					
ANR	3810348	Argument	TD_INVOKED		3809927	0					
ANR	3810349	Identifier	TD_INVOKED		3809927	0					
ANR	3810350	ReturnStatement	return TRUE ;	771:1:19524:19535	3809927	32	True				
ANR	3810351	Identifier	TRUE		3809927	0					
ANR	3810352	ReturnType	bool		3809927	1					
ANR	3810353	Identifier	TDMan :: invoke_a_td		3809927	2					
ANR	3810354	ParameterList	TransferDaemon * td		3809927	3					
ANR	3810355	Parameter	TransferDaemon * td	651:19:16291:16308	3809927	0	True				
ANR	3810356	ParameterType	TransferDaemon *		3809927	0					
ANR	3810357	Identifier	td		3809927	1					
ANR	3810358	CFGEntryNode	ENTRY		3809927		True				
ANR	3810359	CFGExitNode	EXIT		3809927		True				
ANR	3810360	Symbol	daemonCore -> Create_Process		3809927						
ANR	3810361	Symbol	m_id_table -> lookup		3809927						
ANR	3810362	Symbol	TD_INVOKED		3809927						
ANR	3810363	Symbol	args_display		3809927						
ANR	3810364	Symbol	m_td_pid_table -> lookup		3809927						
ANR	3810365	Symbol	pid		3809927						
ANR	3810366	Symbol	rid		3809927						
ANR	3810367	Symbol	* m_td_table		3809927						
ANR	3810368	Symbol	td -> get_fquser		3809927						
ANR	3810369	Symbol	param		3809927						
ANR	3810370	Symbol	m_td_pid_table		3809927						
ANR	3810371	Symbol	found_id		3809927						
ANR	3810372	Symbol	daemonCore		3809927						
ANR	3810373	Symbol	& TDMan :: transferd_reaper		3809927						
ANR	3810374	Symbol	args_display . Value		3809927						
ANR	3810375	Symbol	m_id_table		3809927						
ANR	3810376	Symbol	m_td_table -> lookup		3809927						
ANR	3810377	Symbol	m_td_table		3809927						
ANR	3810378	Symbol	td -> get_id		3809927						
ANR	3810379	Symbol	daemonCore -> InfoCommandSinfulString		3809927						
ANR	3810380	Symbol	found_td		3809927						
ANR	3810381	Symbol	NULL		3809927						
ANR	3810382	Symbol	td -> get_status		3809927						
ANR	3810383	Symbol	false		3809927						
ANR	3810384	Symbol	this		3809927						
ANR	3810385	Symbol	D_ALWAYS		3809927						
ANR	3810386	Symbol	& args_display		3809927						
ANR	3810387	Symbol	TRUE		3809927						
ANR	3810388	Symbol	* m_id_table		3809927						
ANR	3810389	Symbol	td -> get_fquser ( ) . Value		3809927						
ANR	3810390	Symbol	td		3809927						
ANR	3810391	Symbol	args		3809927						
ANR	3810392	Symbol	daemonCore -> Register_Reaper		3809927						
ANR	3810393	Symbol	td_path		3809927						
ANR	3810394	Symbol	* m_td_pid_table		3809927						
ANR	3810395	Symbol	* td		3809927						
ANR	3810396	Symbol	* daemonCore		3809927						
ANR	3810397	Symbol	PRIV_ROOT		3809927						
ANR	3810398	Symbol	FALSE		3809927						
ANR	3810399	Symbol	condor_basename		3809927						
ANR	3810400	Function	TDMan :: refuse	774:0:19540:19627							
ANR	3810401	FunctionDef	TDMan :: refuse (Stream * s)		3810400	0					
ANR	3810402	CompoundStatement		776:0:19570:19627	3810400	0					
ANR	3810403	ExpressionStatement	s -> encode ( )	777:1:19573:19584	3810400	0	True				
ANR	3810404	CallExpression	s -> encode ( )		3810400	0					
ANR	3810405	Callee	s -> encode		3810400	0					
ANR	3810406	PtrMemberAccess	s -> encode		3810400	0					
ANR	3810407	Identifier	s		3810400	0					
ANR	3810408	Identifier	encode		3810400	1					
ANR	3810409	ArgumentList			3810400	1					
ANR	3810410	ExpressionStatement	s -> put ( NOT_OK )	778:1:19587:19603	3810400	1	True				
ANR	3810411	CallExpression	s -> put ( NOT_OK )		3810400	0					
ANR	3810412	Callee	s -> put		3810400	0					
ANR	3810413	PtrMemberAccess	s -> put		3810400	0					
ANR	3810414	Identifier	s		3810400	0					
ANR	3810415	Identifier	put		3810400	1					
ANR	3810416	ArgumentList	NOT_OK		3810400	1					
ANR	3810417	Argument	NOT_OK		3810400	0					
ANR	3810418	Identifier	NOT_OK		3810400	0					
ANR	3810419	ExpressionStatement	s -> end_of_message ( )	779:1:19606:19625	3810400	2	True				
ANR	3810420	CallExpression	s -> end_of_message ( )		3810400	0					
ANR	3810421	Callee	s -> end_of_message		3810400	0					
ANR	3810422	PtrMemberAccess	s -> end_of_message		3810400	0					
ANR	3810423	Identifier	s		3810400	0					
ANR	3810424	Identifier	end_of_message		3810400	1					
ANR	3810425	ArgumentList			3810400	1					
ANR	3810426	ReturnType	void		3810400	1					
ANR	3810427	Identifier	TDMan :: refuse		3810400	2					
ANR	3810428	ParameterList	Stream * s		3810400	3					
ANR	3810429	Parameter	Stream * s	775:14:19559:19567	3810400	0	True				
ANR	3810430	ParameterType	Stream *		3810400	0					
ANR	3810431	Identifier	s		3810400	1					
ANR	3810432	CFGEntryNode	ENTRY		3810400		True				
ANR	3810433	CFGExitNode	EXIT		3810400		True				
ANR	3810434	Symbol	NOT_OK		3810400						
ANR	3810435	Symbol	s		3810400						
ANR	3810436	Function	TDMan :: transferd_reaper	783:0:19684:21428							
ANR	3810437	FunctionDef	"TDMan :: transferd_reaper (long pid , int status)"		3810436	0					
ANR	3810438	CompoundStatement		785:0:19735:21428	3810436	0					
ANR	3810439	IdentifierDeclStatement	MyString fquser ;	786:1:19738:19753	3810436	0	True				
ANR	3810440	IdentifierDecl	fquser		3810436	0					
ANR	3810441	IdentifierDeclType	MyString		3810436	0					
ANR	3810442	Identifier	fquser		3810436	1					
ANR	3810443	IdentifierDeclStatement	MyString id ;	787:1:19756:19767	3810436	1	True				
ANR	3810444	IdentifierDecl	id		3810436	0					
ANR	3810445	IdentifierDeclType	MyString		3810436	0					
ANR	3810446	Identifier	id		3810436	1					
ANR	3810447	IdentifierDeclStatement	TransferDaemon * dead_td = NULL ;	788:1:19770:19800	3810436	2	True				
ANR	3810448	IdentifierDecl	* dead_td = NULL		3810436	0					
ANR	3810449	IdentifierDeclType	TransferDaemon *		3810436	0					
ANR	3810450	Identifier	dead_td		3810436	1					
ANR	3810451	AssignmentExpression	* dead_td = NULL		3810436	2		=			
ANR	3810452	Identifier	NULL		3810436	0					
ANR	3810453	Identifier	NULL		3810436	1					
ANR	3810454	IdentifierDeclStatement	TdAction ret ;	789:1:19803:19815	3810436	3	True				
ANR	3810455	IdentifierDecl	ret		3810436	0					
ANR	3810456	IdentifierDeclType	TdAction		3810436	0					
ANR	3810457	Identifier	ret		3810436	1					
ANR	3810458	ExpressionStatement	"dprintf ( D_ALWAYS , ""TDMan: Reaped transferd pid %ld with status %d\\n"" , pid , status )"	791:1:19819:19904	3810436	4	True				
ANR	3810459	CallExpression	"dprintf ( D_ALWAYS , ""TDMan: Reaped transferd pid %ld with status %d\\n"" , pid , status )"		3810436	0					
ANR	3810460	Callee	dprintf		3810436	0					
ANR	3810461	Identifier	dprintf		3810436	0					
ANR	3810462	ArgumentList	D_ALWAYS		3810436	1					
ANR	3810463	Argument	D_ALWAYS		3810436	0					
ANR	3810464	Identifier	D_ALWAYS		3810436	0					
ANR	3810465	Argument	"""TDMan: Reaped transferd pid %ld with status %d\\n"""		3810436	1					
ANR	3810466	PrimaryExpression	"""TDMan: Reaped transferd pid %ld with status %d\\n"""		3810436	0					
ANR	3810467	Argument	pid		3810436	2					
ANR	3810468	Identifier	pid		3810436	0					
ANR	3810469	Argument	status		3810436	3					
ANR	3810470	Identifier	status		3810436	0					
ANR	3810471	ExpressionStatement	"m_td_pid_table -> lookup ( ( long ) pid , dead_td )"	801:1:20287:20329	3810436	5	True				
ANR	3810472	CallExpression	"m_td_pid_table -> lookup ( ( long ) pid , dead_td )"		3810436	0					
ANR	3810473	Callee	m_td_pid_table -> lookup		3810436	0					
ANR	3810474	PtrMemberAccess	m_td_pid_table -> lookup		3810436	0					
ANR	3810475	Identifier	m_td_pid_table		3810436	0					
ANR	3810476	Identifier	lookup		3810436	1					
ANR	3810477	ArgumentList	( long ) pid		3810436	1					
ANR	3810478	Argument	( long ) pid		3810436	0					
ANR	3810479	CastExpression	( long ) pid		3810436	0					
ANR	3810480	CastTarget	long		3810436	0					
ANR	3810481	Identifier	pid		3810436	1					
ANR	3810482	Argument	dead_td		3810436	1					
ANR	3810483	Identifier	dead_td		3810436	0					
ANR	3810484	ExpressionStatement	ASSERT ( dead_td != NULL )	802:1:20332:20355	3810436	6	True				
ANR	3810485	CallExpression	ASSERT ( dead_td != NULL )		3810436	0					
ANR	3810486	Callee	ASSERT		3810436	0					
ANR	3810487	Identifier	ASSERT		3810436	0					
ANR	3810488	ArgumentList	dead_td != NULL		3810436	1					
ANR	3810489	Argument	dead_td != NULL		3810436	0					
ANR	3810490	EqualityExpression	dead_td != NULL		3810436	0		!=			
ANR	3810491	Identifier	dead_td		3810436	0					
ANR	3810492	Identifier	NULL		3810436	1					
ANR	3810493	ExpressionStatement	ASSERT ( m_td_pid_table -> remove ( ( long ) pid ) == 0 )	803:1:20358:20404	3810436	7	True				
ANR	3810494	CallExpression	ASSERT ( m_td_pid_table -> remove ( ( long ) pid ) == 0 )		3810436	0					
ANR	3810495	Callee	ASSERT		3810436	0					
ANR	3810496	Identifier	ASSERT		3810436	0					
ANR	3810497	ArgumentList	m_td_pid_table -> remove ( ( long ) pid ) == 0		3810436	1					
ANR	3810498	Argument	m_td_pid_table -> remove ( ( long ) pid ) == 0		3810436	0					
ANR	3810499	EqualityExpression	m_td_pid_table -> remove ( ( long ) pid ) == 0		3810436	0		==			
ANR	3810500	CallExpression	m_td_pid_table -> remove ( ( long ) pid )		3810436	0					
ANR	3810501	Callee	m_td_pid_table -> remove		3810436	0					
ANR	3810502	PtrMemberAccess	m_td_pid_table -> remove		3810436	0					
ANR	3810503	Identifier	m_td_pid_table		3810436	0					
ANR	3810504	Identifier	remove		3810436	1					
ANR	3810505	ArgumentList	( long ) pid		3810436	1					
ANR	3810506	Argument	( long ) pid		3810436	0					
ANR	3810507	CastExpression	( long ) pid		3810436	0					
ANR	3810508	CastTarget	long		3810436	0					
ANR	3810509	Identifier	pid		3810436	1					
ANR	3810510	PrimaryExpression	0		3810436	1					
ANR	3810511	ExpressionStatement	id = dead_td -> get_id ( )	805:1:20408:20430	3810436	8	True				
ANR	3810512	AssignmentExpression	id = dead_td -> get_id ( )		3810436	0		=			
ANR	3810513	Identifier	id		3810436	0					
ANR	3810514	CallExpression	dead_td -> get_id ( )		3810436	1					
ANR	3810515	Callee	dead_td -> get_id		3810436	0					
ANR	3810516	PtrMemberAccess	dead_td -> get_id		3810436	0					
ANR	3810517	Identifier	dead_td		3810436	0					
ANR	3810518	Identifier	get_id		3810436	1					
ANR	3810519	ArgumentList			3810436	1					
ANR	3810520	ExpressionStatement	fquser = dead_td -> get_fquser ( )	806:1:20433:20463	3810436	9	True				
ANR	3810521	AssignmentExpression	fquser = dead_td -> get_fquser ( )		3810436	0		=			
ANR	3810522	Identifier	fquser		3810436	0					
ANR	3810523	CallExpression	dead_td -> get_fquser ( )		3810436	1					
ANR	3810524	Callee	dead_td -> get_fquser		3810436	0					
ANR	3810525	PtrMemberAccess	dead_td -> get_fquser		3810436	0					
ANR	3810526	Identifier	dead_td		3810436	0					
ANR	3810527	Identifier	get_fquser		3810436	1					
ANR	3810528	ArgumentList			3810436	1					
ANR	3810529	ExpressionStatement	ASSERT ( m_id_table -> remove ( id ) == 0 )	809:1:20518:20553	3810436	10	True				
ANR	3810530	CallExpression	ASSERT ( m_id_table -> remove ( id ) == 0 )		3810436	0					
ANR	3810531	Callee	ASSERT		3810436	0					
ANR	3810532	Identifier	ASSERT		3810436	0					
ANR	3810533	ArgumentList	m_id_table -> remove ( id ) == 0		3810436	1					
ANR	3810534	Argument	m_id_table -> remove ( id ) == 0		3810436	0					
ANR	3810535	EqualityExpression	m_id_table -> remove ( id ) == 0		3810436	0		==			
ANR	3810536	CallExpression	m_id_table -> remove ( id )		3810436	0					
ANR	3810537	Callee	m_id_table -> remove		3810436	0					
ANR	3810538	PtrMemberAccess	m_id_table -> remove		3810436	0					
ANR	3810539	Identifier	m_id_table		3810436	0					
ANR	3810540	Identifier	remove		3810436	1					
ANR	3810541	ArgumentList	id		3810436	1					
ANR	3810542	Argument	id		3810436	0					
ANR	3810543	Identifier	id		3810436	0					
ANR	3810544	PrimaryExpression	0		3810436	1					
ANR	3810545	ExpressionStatement	ASSERT ( m_td_table -> remove ( fquser ) == 0 )	812:1:20612:20651	3810436	11	True				
ANR	3810546	CallExpression	ASSERT ( m_td_table -> remove ( fquser ) == 0 )		3810436	0					
ANR	3810547	Callee	ASSERT		3810436	0					
ANR	3810548	Identifier	ASSERT		3810436	0					
ANR	3810549	ArgumentList	m_td_table -> remove ( fquser ) == 0		3810436	1					
ANR	3810550	Argument	m_td_table -> remove ( fquser ) == 0		3810436	0					
ANR	3810551	EqualityExpression	m_td_table -> remove ( fquser ) == 0		3810436	0		==			
ANR	3810552	CallExpression	m_td_table -> remove ( fquser )		3810436	0					
ANR	3810553	Callee	m_td_table -> remove		3810436	0					
ANR	3810554	PtrMemberAccess	m_td_table -> remove		3810436	0					
ANR	3810555	Identifier	m_td_table		3810436	0					
ANR	3810556	Identifier	remove		3810436	1					
ANR	3810557	ArgumentList	fquser		3810436	1					
ANR	3810558	Argument	fquser		3810436	0					
ANR	3810559	Identifier	fquser		3810436	0					
ANR	3810560	PrimaryExpression	0		3810436	1					
ANR	3810561	ExpressionStatement	"ret = dead_td -> call_reaper_callback ( pid , status , dead_td )"	819:1:20934:20991	3810436	12	True				
ANR	3810562	AssignmentExpression	"ret = dead_td -> call_reaper_callback ( pid , status , dead_td )"		3810436	0		=			
ANR	3810563	Identifier	ret		3810436	0					
ANR	3810564	CallExpression	"dead_td -> call_reaper_callback ( pid , status , dead_td )"		3810436	1					
ANR	3810565	Callee	dead_td -> call_reaper_callback		3810436	0					
ANR	3810566	PtrMemberAccess	dead_td -> call_reaper_callback		3810436	0					
ANR	3810567	Identifier	dead_td		3810436	0					
ANR	3810568	Identifier	call_reaper_callback		3810436	1					
ANR	3810569	ArgumentList	pid		3810436	1					
ANR	3810570	Argument	pid		3810436	0					
ANR	3810571	Identifier	pid		3810436	0					
ANR	3810572	Argument	status		3810436	1					
ANR	3810573	Identifier	status		3810436	0					
ANR	3810574	Argument	dead_td		3810436	2					
ANR	3810575	Identifier	dead_td		3810436	0					
ANR	3810576	SwitchStatement	switch ( ret )		3810436	13					
ANR	3810577	Condition	ret	820:8:21001:21003	3810436	0	True				
ANR	3810578	Identifier	ret		3810436	0					
ANR	3810579	CompoundStatement		36:13:1270:1270	3810436	1					
ANR	3810580	Label	case TD_ACTION_TERMINATE :	821:2:21010:21034	3810436	0	True				
ANR	3810581	Identifier	TD_ACTION_TERMINATE		3810436	0					
ANR	3810582	Statement	delete	823:3:21081:21086	3810436	1	True				
ANR	3810583	ExpressionStatement	dead_td	823:10:21088:21095	3810436	2	True				
ANR	3810584	Identifier	dead_td		3810436	0					
ANR	3810585	BreakStatement	break ;	824:3:21100:21105	3810436	3	True				
ANR	3810586	Label	case TD_ACTION_CONTINUE :	826:2:21110:21133	3810436	4	True				
ANR	3810587	Identifier	TD_ACTION_CONTINUE		3810436	0					
ANR	3810588	Statement	EXCEPT	827:3:21138:21143	3810436	5	True				
ANR	3810589	Statement	(	827:9:21144:21144	3810436	6	True				
ANR	3810590	Statement	"""TDMan::transferd_reaper(): Programmer Error! You must """	827:10:21145:21200	3810436	7	True				
ANR	3810591	Statement	"""return TD_ACTION_TERMINATE only from a transferd reaper!"""	828:4:21206:21263	3810436	8	True				
ANR	3810592	Statement	)	828:62:21264:21264	3810436	9	True				
ANR	3810593	ExpressionStatement		828:63:21265:21265	3810436	10	True				
ANR	3810594	BreakStatement	break ;	829:3:21270:21275	3810436	11	True				
ANR	3810595	Label	default :	831:2:21280:21287	3810436	12	True				
ANR	3810596	Identifier	default		3810436	0					
ANR	3810597	Statement	EXCEPT	832:3:21292:21297	3810436	13	True				
ANR	3810598	Statement	(	832:9:21298:21298	3810436	14	True				
ANR	3810599	Statement	"""TDMan::transferd_reaper(): Programmer Error! """	832:10:21299:21345	3810436	15	True				
ANR	3810600	Statement	"""Unknown return code from td reaper callback"""	833:4:21351:21395	3810436	16	True				
ANR	3810601	Statement	)	833:49:21396:21396	3810436	17	True				
ANR	3810602	ExpressionStatement		833:50:21397:21397	3810436	18	True				
ANR	3810603	BreakStatement	break ;	834:3:21402:21407	3810436	19	True				
ANR	3810604	ReturnStatement	return TRUE ;	837:1:21415:21426	3810436	14	True				
ANR	3810605	Identifier	TRUE		3810436	0					
ANR	3810606	ReturnType	int		3810436	1					
ANR	3810607	Identifier	TDMan :: transferd_reaper		3810436	2					
ANR	3810608	ParameterList	"long pid , int status"		3810436	3					
ANR	3810609	Parameter	long pid	784:24:19712:19719	3810436	0	True				
ANR	3810610	ParameterType	long		3810436	0					
ANR	3810611	Identifier	pid		3810436	1					
ANR	3810612	Parameter	int status	784:34:19722:19731	3810436	1	True				
ANR	3810613	ParameterType	int		3810436	0					
ANR	3810614	Identifier	status		3810436	1					
ANR	3810615	CFGEntryNode	ENTRY		3810436		True				
ANR	3810616	CFGExitNode	EXIT		3810436		True				
ANR	3810617	Symbol	ret		3810436						
ANR	3810618	Symbol	m_td_pid_table -> remove		3810436						
ANR	3810619	Symbol	m_id_table -> remove		3810436						
ANR	3810620	Symbol	NULL		3810436						
ANR	3810621	Symbol	dead_td		3810436						
ANR	3810622	Symbol	dead_td -> get_fquser		3810436						
ANR	3810623	Symbol	D_ALWAYS		3810436						
ANR	3810624	Symbol	TRUE		3810436						
ANR	3810625	Symbol	pid		3810436						
ANR	3810626	Symbol	fquser		3810436						
ANR	3810627	Symbol	* m_td_table		3810436						
ANR	3810628	Symbol	* m_id_table		3810436						
ANR	3810629	Symbol	m_td_table -> remove		3810436						
ANR	3810630	Symbol	dead_td -> get_id		3810436						
ANR	3810631	Symbol	* m_td_pid_table		3810436						
ANR	3810632	Symbol	m_td_pid_table		3810436						
ANR	3810633	Symbol	id		3810436						
ANR	3810634	Symbol	* dead_td		3810436						
ANR	3810635	Symbol	dead_td -> call_reaper_callback		3810436						
ANR	3810636	Symbol	m_id_table		3810436						
ANR	3810637	Symbol	status		3810436						
ANR	3810638	Symbol	m_td_table		3810436						
ANR	3810639	Function	TDMan :: transferd_registration	846:0:21760:30525							
ANR	3810640	FunctionDef	"TDMan :: transferd_registration (int cmd , Stream * sock)"		3810639	0					
ANR	3810641	CompoundStatement		848:0:21818:30525	3810639	0					
ANR	3810642	IdentifierDeclStatement	ReliSock * rsock = ( ReliSock * ) sock ;	849:1:21821:21854	3810639	0	True				
ANR	3810643	IdentifierDecl	* rsock = ( ReliSock * ) sock		3810639	0					
ANR	3810644	IdentifierDeclType	ReliSock *		3810639	0					
ANR	3810645	Identifier	rsock		3810639	1					
ANR	3810646	AssignmentExpression	* rsock = ( ReliSock * ) sock		3810639	2		=			
ANR	3810647	Identifier	rsock		3810639	0					
ANR	3810648	CastExpression	( ReliSock * ) sock		3810639	1					
ANR	3810649	CastTarget	ReliSock *		3810639	0					
ANR	3810650	Identifier	sock		3810639	1					
ANR	3810651	IdentifierDeclStatement	MyString td_sinful ;	850:1:21857:21875	3810639	1	True				
ANR	3810652	IdentifierDecl	td_sinful		3810639	0					
ANR	3810653	IdentifierDeclType	MyString		3810639	0					
ANR	3810654	Identifier	td_sinful		3810639	1					
ANR	3810655	IdentifierDeclStatement	MyString td_id ;	851:1:21878:21892	3810639	2	True				
ANR	3810656	IdentifierDecl	td_id		3810639	0					
ANR	3810657	IdentifierDeclType	MyString		3810639	0					
ANR	3810658	Identifier	td_id		3810639	1					
ANR	3810659	IdentifierDeclStatement	MyString fquser ;	852:1:21895:21910	3810639	3	True				
ANR	3810660	IdentifierDecl	fquser		3810639	0					
ANR	3810661	IdentifierDeclType	MyString		3810639	0					
ANR	3810662	Identifier	fquser		3810639	1					
ANR	3810663	IdentifierDeclStatement	TDUpdateContinuation * tdup = NULL ;	853:1:21913:21946	3810639	4	True				
ANR	3810664	IdentifierDecl	* tdup = NULL		3810639	0					
ANR	3810665	IdentifierDeclType	TDUpdateContinuation *		3810639	0					
ANR	3810666	Identifier	tdup		3810639	1					
ANR	3810667	AssignmentExpression	* tdup = NULL		3810639	2		=			
ANR	3810668	Identifier	NULL		3810639	0					
ANR	3810669	Identifier	NULL		3810639	1					
ANR	3810670	IdentifierDeclStatement	TransferDaemon * td = NULL ;	854:1:21949:21974	3810639	5	True				
ANR	3810671	IdentifierDecl	* td = NULL		3810639	0					
ANR	3810672	IdentifierDeclType	TransferDaemon *		3810639	0					
ANR	3810673	Identifier	td		3810639	1					
ANR	3810674	AssignmentExpression	* td = NULL		3810639	2		=			
ANR	3810675	Identifier	NULL		3810639	0					
ANR	3810676	Identifier	NULL		3810639	1					
ANR	3810677	IdentifierDeclStatement	TdAction ret ;	855:1:21977:21989	3810639	6	True				
ANR	3810678	IdentifierDecl	ret		3810639	0					
ANR	3810679	IdentifierDeclType	TdAction		3810639	0					
ANR	3810680	Identifier	ret		3810639	1					
ANR	3810681	IdentifierDeclStatement	ClassAd regad ;	856:1:21992:22005	3810639	7	True				
ANR	3810682	IdentifierDecl	regad		3810639	0					
ANR	3810683	IdentifierDeclType	ClassAd		3810639	0					
ANR	3810684	Identifier	regad		3810639	1					
ANR	3810685	IdentifierDeclStatement	ClassAd respad ;	857:1:22008:22022	3810639	8	True				
ANR	3810686	IdentifierDecl	respad		3810639	0					
ANR	3810687	IdentifierDeclType	ClassAd		3810639	0					
ANR	3810688	Identifier	respad		3810639	1					
ANR	3810689	ExpressionStatement	cmd = cmd	859:1:22026:22035	3810639	9	True				
ANR	3810690	AssignmentExpression	cmd = cmd		3810639	0		=			
ANR	3810691	Identifier	cmd		3810639	0					
ANR	3810692	Identifier	cmd		3810639	1					
ANR	3810693	ExpressionStatement	"dprintf ( D_ALWAYS , ""Entering TDMan::transferd_registration()\\n"" )"	861:1:22061:22124	3810639	10	True				
ANR	3810694	CallExpression	"dprintf ( D_ALWAYS , ""Entering TDMan::transferd_registration()\\n"" )"		3810639	0					
ANR	3810695	Callee	dprintf		3810639	0					
ANR	3810696	Identifier	dprintf		3810639	0					
ANR	3810697	ArgumentList	D_ALWAYS		3810639	1					
ANR	3810698	Argument	D_ALWAYS		3810639	0					
ANR	3810699	Identifier	D_ALWAYS		3810639	0					
ANR	3810700	Argument	"""Entering TDMan::transferd_registration()\\n"""		3810639	1					
ANR	3810701	PrimaryExpression	"""Entering TDMan::transferd_registration()\\n"""		3810639	0					
ANR	3810702	ExpressionStatement	"dprintf ( D_ALWAYS , ""Got TRANSFERD_REGISTER message!\\n"" )"	863:1:22128:22182	3810639	11	True				
ANR	3810703	CallExpression	"dprintf ( D_ALWAYS , ""Got TRANSFERD_REGISTER message!\\n"" )"		3810639	0					
ANR	3810704	Callee	dprintf		3810639	0					
ANR	3810705	Identifier	dprintf		3810639	0					
ANR	3810706	ArgumentList	D_ALWAYS		3810639	1					
ANR	3810707	Argument	D_ALWAYS		3810639	0					
ANR	3810708	Identifier	D_ALWAYS		3810639	0					
ANR	3810709	Argument	"""Got TRANSFERD_REGISTER message!\\n"""		3810639	1					
ANR	3810710	PrimaryExpression	"""Got TRANSFERD_REGISTER message!\\n"""		3810639	0					
ANR	3810711	ExpressionStatement	rsock -> decode ( )	865:1:22186:22201	3810639	12	True				
ANR	3810712	CallExpression	rsock -> decode ( )		3810639	0					
ANR	3810713	Callee	rsock -> decode		3810639	0					
ANR	3810714	PtrMemberAccess	rsock -> decode		3810639	0					
ANR	3810715	Identifier	rsock		3810639	0					
ANR	3810716	Identifier	decode		3810639	1					
ANR	3810717	ArgumentList			3810639	1					
ANR	3810718	IfStatement	if ( ! rsock -> triedAuthentication ( ) )		3810639	13					
ANR	3810719	Condition	! rsock -> triedAuthentication ( )	870:5:22374:22403	3810639	0	True				
ANR	3810720	UnaryOperationExpression	! rsock -> triedAuthentication ( )		3810639	0					
ANR	3810721	UnaryOperator	!		3810639	0					
ANR	3810722	CallExpression	rsock -> triedAuthentication ( )		3810639	1					
ANR	3810723	Callee	rsock -> triedAuthentication		3810639	0					
ANR	3810724	PtrMemberAccess	rsock -> triedAuthentication		3810639	0					
ANR	3810725	Identifier	rsock		3810639	0					
ANR	3810726	Identifier	triedAuthentication		3810639	1					
ANR	3810727	ArgumentList			3810639	1					
ANR	3810728	CompoundStatement		24:2:592:612	3810639	1					
ANR	3810729	IdentifierDeclStatement	CondorError errstack ;	871:2:22411:22431	3810639	0	True				
ANR	3810730	IdentifierDecl	errstack		3810639	0					
ANR	3810731	IdentifierDeclType	CondorError		3810639	0					
ANR	3810732	Identifier	errstack		3810639	1					
ANR	3810733	IfStatement	"if ( ! SecMan :: authenticate_sock ( rsock , WRITE , & errstack ) )"		3810639	1					
ANR	3810734	Condition	"! SecMan :: authenticate_sock ( rsock , WRITE , & errstack )"	872:6:22439:22490	3810639	0	True				
ANR	3810735	UnaryOperationExpression	"! SecMan :: authenticate_sock ( rsock , WRITE , & errstack )"		3810639	0					
ANR	3810736	UnaryOperator	!		3810639	0					
ANR	3810737	CallExpression	"SecMan :: authenticate_sock ( rsock , WRITE , & errstack )"		3810639	1					
ANR	3810738	Callee	SecMan :: authenticate_sock		3810639	0					
ANR	3810739	Identifier	SecMan :: authenticate_sock		3810639	0					
ANR	3810740	ArgumentList	rsock		3810639	1					
ANR	3810741	Argument	rsock		3810639	0					
ANR	3810742	Identifier	rsock		3810639	0					
ANR	3810743	Argument	WRITE		3810639	1					
ANR	3810744	Identifier	WRITE		3810639	0					
ANR	3810745	Argument	& errstack		3810639	2					
ANR	3810746	UnaryOperationExpression	& errstack		3810639	0					
ANR	3810747	UnaryOperator	&		3810639	0					
ANR	3810748	Identifier	errstack		3810639	1					
ANR	3810749	CompoundStatement		25:61:675:675	3810639	1					
ANR	3810750	ExpressionStatement	"errstack . push ( ""SCHEDD::TDMan"" , 42 , ""Failure to register transferd - Authentication failed"" )"	878:3:22742:22840	3810639	0	True				
ANR	3810751	CallExpression	"errstack . push ( ""SCHEDD::TDMan"" , 42 , ""Failure to register transferd - Authentication failed"" )"		3810639	0					
ANR	3810752	Callee	errstack . push		3810639	0					
ANR	3810753	MemberAccess	errstack . push		3810639	0					
ANR	3810754	Identifier	errstack		3810639	0					
ANR	3810755	Identifier	push		3810639	1					
ANR	3810756	ArgumentList	"""SCHEDD::TDMan"""		3810639	1					
ANR	3810757	Argument	"""SCHEDD::TDMan"""		3810639	0					
ANR	3810758	PrimaryExpression	"""SCHEDD::TDMan"""		3810639	0					
ANR	3810759	Argument	42		3810639	1					
ANR	3810760	PrimaryExpression	42		3810639	0					
ANR	3810761	Argument	"""Failure to register transferd - Authentication failed"""		3810639	2					
ANR	3810762	PrimaryExpression	"""Failure to register transferd - Authentication failed"""		3810639	0					
ANR	3810763	ExpressionStatement	"dprintf ( D_ALWAYS , ""transferd_registration() aborting: %s\\n"" , errstack . getFullText ( ) )"	880:3:22845:22937	3810639	1	True				
ANR	3810764	CallExpression	"dprintf ( D_ALWAYS , ""transferd_registration() aborting: %s\\n"" , errstack . getFullText ( ) )"		3810639	0					
ANR	3810765	Callee	dprintf		3810639	0					
ANR	3810766	Identifier	dprintf		3810639	0					
ANR	3810767	ArgumentList	D_ALWAYS		3810639	1					
ANR	3810768	Argument	D_ALWAYS		3810639	0					
ANR	3810769	Identifier	D_ALWAYS		3810639	0					
ANR	3810770	Argument	"""transferd_registration() aborting: %s\\n"""		3810639	1					
ANR	3810771	PrimaryExpression	"""transferd_registration() aborting: %s\\n"""		3810639	0					
ANR	3810772	Argument	errstack . getFullText ( )		3810639	2					
ANR	3810773	CallExpression	errstack . getFullText ( )		3810639	0					
ANR	3810774	Callee	errstack . getFullText		3810639	0					
ANR	3810775	MemberAccess	errstack . getFullText		3810639	0					
ANR	3810776	Identifier	errstack		3810639	0					
ANR	3810777	Identifier	getFullText		3810639	1					
ANR	3810778	ArgumentList			3810639	1					
ANR	3810779	ExpressionStatement	refuse ( rsock )	882:3:22942:22957	3810639	2	True				
ANR	3810780	CallExpression	refuse ( rsock )		3810639	0					
ANR	3810781	Callee	refuse		3810639	0					
ANR	3810782	Identifier	refuse		3810639	0					
ANR	3810783	ArgumentList	rsock		3810639	1					
ANR	3810784	Argument	rsock		3810639	0					
ANR	3810785	Identifier	rsock		3810639	0					
ANR	3810786	ExpressionStatement	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"	883:3:22962:23024	3810639	3	True				
ANR	3810787	CallExpression	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"		3810639	0					
ANR	3810788	Callee	dprintf		3810639	0					
ANR	3810789	Identifier	dprintf		3810639	0					
ANR	3810790	ArgumentList	D_ALWAYS		3810639	1					
ANR	3810791	Argument	D_ALWAYS		3810639	0					
ANR	3810792	Identifier	D_ALWAYS		3810639	0					
ANR	3810793	Argument	"""Leaving TDMan::transferd_registration()\\n"""		3810639	1					
ANR	3810794	PrimaryExpression	"""Leaving TDMan::transferd_registration()\\n"""		3810639	0					
ANR	3810795	ReturnStatement	return CLOSE_STREAM ;	884:3:23029:23048	3810639	4	True				
ANR	3810796	Identifier	CLOSE_STREAM		3810639	0					
ANR	3810797	ExpressionStatement	fquser = rsock -> getFullyQualifiedUser ( )	892:1:23224:23263	3810639	14	True				
ANR	3810798	AssignmentExpression	fquser = rsock -> getFullyQualifiedUser ( )		3810639	0		=			
ANR	3810799	Identifier	fquser		3810639	0					
ANR	3810800	CallExpression	rsock -> getFullyQualifiedUser ( )		3810639	1					
ANR	3810801	Callee	rsock -> getFullyQualifiedUser		3810639	0					
ANR	3810802	PtrMemberAccess	rsock -> getFullyQualifiedUser		3810639	0					
ANR	3810803	Identifier	rsock		3810639	0					
ANR	3810804	Identifier	getFullyQualifiedUser		3810639	1					
ANR	3810805	ArgumentList			3810639	1					
ANR	3810806	IfStatement	"if ( fquser == """" )"		3810639	15					
ANR	3810807	Condition	"fquser == """""	893:5:23270:23281	3810639	0	True				
ANR	3810808	EqualityExpression	"fquser == """""		3810639	0		==			
ANR	3810809	Identifier	fquser		3810639	0					
ANR	3810810	PrimaryExpression	""""""		3810639	1					
ANR	3810811	CompoundStatement		46:19:1465:1465	3810639	1					
ANR	3810812	ExpressionStatement	"dprintf ( D_ALWAYS , ""Transferd identity is unverifiable. Denied.\\n"" )"	894:2:23288:23354	3810639	0	True				
ANR	3810813	CallExpression	"dprintf ( D_ALWAYS , ""Transferd identity is unverifiable. Denied.\\n"" )"		3810639	0					
ANR	3810814	Callee	dprintf		3810639	0					
ANR	3810815	Identifier	dprintf		3810639	0					
ANR	3810816	ArgumentList	D_ALWAYS		3810639	1					
ANR	3810817	Argument	D_ALWAYS		3810639	0					
ANR	3810818	Identifier	D_ALWAYS		3810639	0					
ANR	3810819	Argument	"""Transferd identity is unverifiable. Denied.\\n"""		3810639	1					
ANR	3810820	PrimaryExpression	"""Transferd identity is unverifiable. Denied.\\n"""		3810639	0					
ANR	3810821	ExpressionStatement	refuse ( rsock )	895:2:23358:23371	3810639	1	True				
ANR	3810822	CallExpression	refuse ( rsock )		3810639	0					
ANR	3810823	Callee	refuse		3810639	0					
ANR	3810824	Identifier	refuse		3810639	0					
ANR	3810825	ArgumentList	rsock		3810639	1					
ANR	3810826	Argument	rsock		3810639	0					
ANR	3810827	Identifier	rsock		3810639	0					
ANR	3810828	ExpressionStatement	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"	896:2:23375:23437	3810639	2	True				
ANR	3810829	CallExpression	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"		3810639	0					
ANR	3810830	Callee	dprintf		3810639	0					
ANR	3810831	Identifier	dprintf		3810639	0					
ANR	3810832	ArgumentList	D_ALWAYS		3810639	1					
ANR	3810833	Argument	D_ALWAYS		3810639	0					
ANR	3810834	Identifier	D_ALWAYS		3810639	0					
ANR	3810835	Argument	"""Leaving TDMan::transferd_registration()\\n"""		3810639	1					
ANR	3810836	PrimaryExpression	"""Leaving TDMan::transferd_registration()\\n"""		3810639	0					
ANR	3810837	ReturnStatement	return CLOSE_STREAM ;	897:2:23441:23460	3810639	3	True				
ANR	3810838	Identifier	CLOSE_STREAM		3810639	0					
ANR	3810839	ExpressionStatement	rsock -> decode ( )	904:1:23653:23668	3810639	16	True				
ANR	3810840	CallExpression	rsock -> decode ( )		3810639	0					
ANR	3810841	Callee	rsock -> decode		3810639	0					
ANR	3810842	PtrMemberAccess	rsock -> decode		3810639	0					
ANR	3810843	Identifier	rsock		3810639	0					
ANR	3810844	Identifier	decode		3810639	1					
ANR	3810845	ArgumentList			3810639	1					
ANR	3810846	ExpressionStatement	regad . initFromStream ( * rsock )	909:1:23766:23794	3810639	17	True				
ANR	3810847	CallExpression	regad . initFromStream ( * rsock )		3810639	0					
ANR	3810848	Callee	regad . initFromStream		3810639	0					
ANR	3810849	MemberAccess	regad . initFromStream		3810639	0					
ANR	3810850	Identifier	regad		3810639	0					
ANR	3810851	Identifier	initFromStream		3810639	1					
ANR	3810852	ArgumentList	* rsock		3810639	1					
ANR	3810853	Argument	* rsock		3810639	0					
ANR	3810854	UnaryOperationExpression	* rsock		3810639	0					
ANR	3810855	UnaryOperator	*		3810639	0					
ANR	3810856	Identifier	rsock		3810639	1					
ANR	3810857	ExpressionStatement	rsock -> end_of_message ( )	910:1:23797:23820	3810639	18	True				
ANR	3810858	CallExpression	rsock -> end_of_message ( )		3810639	0					
ANR	3810859	Callee	rsock -> end_of_message		3810639	0					
ANR	3810860	PtrMemberAccess	rsock -> end_of_message		3810639	0					
ANR	3810861	Identifier	rsock		3810639	0					
ANR	3810862	Identifier	end_of_message		3810639	1					
ANR	3810863	ArgumentList			3810639	1					
ANR	3810864	ExpressionStatement	"regad . LookupString ( ATTR_TREQ_TD_SINFUL , td_sinful )"	911:1:23823:23873	3810639	19	True				
ANR	3810865	CallExpression	"regad . LookupString ( ATTR_TREQ_TD_SINFUL , td_sinful )"		3810639	0					
ANR	3810866	Callee	regad . LookupString		3810639	0					
ANR	3810867	MemberAccess	regad . LookupString		3810639	0					
ANR	3810868	Identifier	regad		3810639	0					
ANR	3810869	Identifier	LookupString		3810639	1					
ANR	3810870	ArgumentList	ATTR_TREQ_TD_SINFUL		3810639	1					
ANR	3810871	Argument	ATTR_TREQ_TD_SINFUL		3810639	0					
ANR	3810872	Identifier	ATTR_TREQ_TD_SINFUL		3810639	0					
ANR	3810873	Argument	td_sinful		3810639	1					
ANR	3810874	Identifier	td_sinful		3810639	0					
ANR	3810875	ExpressionStatement	"regad . LookupString ( ATTR_TREQ_TD_ID , td_id )"	912:1:23876:23918	3810639	20	True				
ANR	3810876	CallExpression	"regad . LookupString ( ATTR_TREQ_TD_ID , td_id )"		3810639	0					
ANR	3810877	Callee	regad . LookupString		3810639	0					
ANR	3810878	MemberAccess	regad . LookupString		3810639	0					
ANR	3810879	Identifier	regad		3810639	0					
ANR	3810880	Identifier	LookupString		3810639	1					
ANR	3810881	ArgumentList	ATTR_TREQ_TD_ID		3810639	1					
ANR	3810882	Argument	ATTR_TREQ_TD_ID		3810639	0					
ANR	3810883	Identifier	ATTR_TREQ_TD_ID		3810639	0					
ANR	3810884	Argument	td_id		3810639	1					
ANR	3810885	Identifier	td_id		3810639	0					
ANR	3810886	Statement	dprintf	914:1:23922:23928	3810639	21	True				
ANR	3810887	Statement	(	914:8:23929:23929	3810639	22	True				
ANR	3810888	Statement	D_ALWAYS	914:9:23930:23937	3810639	23	True				
ANR	3810889	Statement	","	914:17:23938:23938	3810639	24	True				
ANR	3810890	Statement	"""Transferd %s, id: %s, owned by '%s' """	914:19:23940:23977	3810639	25	True				
ANR	3810891	Statement	"""attempting to register!\\n"""	915:2:23981:24007	3810639	26	True				
ANR	3810892	Statement	","	915:29:24008:24008	3810639	27	True				
ANR	3810893	Statement	td_sinful	916:2:24012:24020	3810639	28	True				
ANR	3810894	Statement	.	916:11:24021:24021	3810639	29	True				
ANR	3810895	Statement	Value	916:12:24022:24026	3810639	30	True				
ANR	3810896	Statement	(	916:17:24027:24027	3810639	31	True				
ANR	3810897	Statement	)	916:18:24028:24028	3810639	32	True				
ANR	3810898	Statement	","	916:19:24029:24029	3810639	33	True				
ANR	3810899	Statement	td_id	916:21:24031:24035	3810639	34	True				
ANR	3810900	Statement	.	916:26:24036:24036	3810639	35	True				
ANR	3810901	Statement	Value	916:27:24037:24041	3810639	36	True				
ANR	3810902	Statement	(	916:32:24042:24042	3810639	37	True				
ANR	3810903	Statement	)	916:33:24043:24043	3810639	38	True				
ANR	3810904	Statement	","	916:34:24044:24044	3810639	39	True				
ANR	3810905	Statement	fquser	916:36:24046:24051	3810639	40	True				
ANR	3810906	Statement	.	916:42:24052:24052	3810639	41	True				
ANR	3810907	Statement	Value	916:43:24053:24057	3810639	42	True				
ANR	3810908	Statement	(	916:48:24058:24058	3810639	43	True				
ANR	3810909	Statement	)	916:49:24059:24059	3810639	44	True				
ANR	3810910	Statement	)	916:50:24060:24060	3810639	45	True				
ANR	3810911	ExpressionStatement		916:51:24061:24061	3810639	46	True				
ANR	3810912	ExpressionStatement	rsock -> encode ( )	922:1:24270:24285	3810639	47	True				
ANR	3810913	CallExpression	rsock -> encode ( )		3810639	0					
ANR	3810914	Callee	rsock -> encode		3810639	0					
ANR	3810915	PtrMemberAccess	rsock -> encode		3810639	0					
ANR	3810916	Identifier	rsock		3810639	0					
ANR	3810917	Identifier	encode		3810639	1					
ANR	3810918	ArgumentList			3810639	1					
ANR	3810919	ExpressionStatement	td = find_td_by_ident ( td_id )	925:1:24330:24358	3810639	48	True				
ANR	3810920	AssignmentExpression	td = find_td_by_ident ( td_id )		3810639	0		=			
ANR	3810921	Identifier	td		3810639	0					
ANR	3810922	CallExpression	find_td_by_ident ( td_id )		3810639	1					
ANR	3810923	Callee	find_td_by_ident		3810639	0					
ANR	3810924	Identifier	find_td_by_ident		3810639	0					
ANR	3810925	ArgumentList	td_id		3810639	1					
ANR	3810926	Argument	td_id		3810639	0					
ANR	3810927	Identifier	td_id		3810639	0					
ANR	3810928	IfStatement	if ( td == NULL )		3810639	49					
ANR	3810929	Condition	td == NULL	926:5:24365:24374	3810639	0	True				
ANR	3810930	EqualityExpression	td == NULL		3810639	0		==			
ANR	3810931	Identifier	td		3810639	0					
ANR	3810932	Identifier	NULL		3810639	1					
ANR	3810933	CompoundStatement		79:17:2558:2558	3810639	1					
ANR	3810934	Statement	dprintf	928:2:24407:24413	3810639	0	True				
ANR	3810935	Statement	(	928:9:24414:24414	3810639	1	True				
ANR	3810936	Statement	D_ALWAYS	928:10:24415:24422	3810639	2	True				
ANR	3810937	Statement	","	928:18:24423:24423	3810639	3	True				
ANR	3810938	Statement	"""Did not request a transferd with that id for any user. """	929:3:24429:24485	3810639	4	True				
ANR	3810939	Statement	"""Refuse.\\n"""	930:3:24490:24500	3810639	5	True				
ANR	3810940	Statement	)	930:14:24501:24501	3810639	6	True				
ANR	3810941	ExpressionStatement		930:15:24502:24502	3810639	7	True				
ANR	3810942	ExpressionStatement	"respad . Assign ( ATTR_TREQ_INVALID_REQUEST , TRUE )"	932:2:24507:24553	3810639	8	True				
ANR	3810943	CallExpression	"respad . Assign ( ATTR_TREQ_INVALID_REQUEST , TRUE )"		3810639	0					
ANR	3810944	Callee	respad . Assign		3810639	0					
ANR	3810945	MemberAccess	respad . Assign		3810639	0					
ANR	3810946	Identifier	respad		3810639	0					
ANR	3810947	Identifier	Assign		3810639	1					
ANR	3810948	ArgumentList	ATTR_TREQ_INVALID_REQUEST		3810639	1					
ANR	3810949	Argument	ATTR_TREQ_INVALID_REQUEST		3810639	0					
ANR	3810950	Identifier	ATTR_TREQ_INVALID_REQUEST		3810639	0					
ANR	3810951	Argument	TRUE		3810639	1					
ANR	3810952	Identifier	TRUE		3810639	0					
ANR	3810953	ExpressionStatement	"respad . Assign ( ATTR_TREQ_INVALID_REASON , ""Did not request a transferd with that id for any user."" )"	933:2:24557:24658	3810639	9	True				
ANR	3810954	CallExpression	"respad . Assign ( ATTR_TREQ_INVALID_REASON , ""Did not request a transferd with that id for any user."" )"		3810639	0					
ANR	3810955	Callee	respad . Assign		3810639	0					
ANR	3810956	MemberAccess	respad . Assign		3810639	0					
ANR	3810957	Identifier	respad		3810639	0					
ANR	3810958	Identifier	Assign		3810639	1					
ANR	3810959	ArgumentList	ATTR_TREQ_INVALID_REASON		3810639	1					
ANR	3810960	Argument	ATTR_TREQ_INVALID_REASON		3810639	0					
ANR	3810961	Identifier	ATTR_TREQ_INVALID_REASON		3810639	0					
ANR	3810962	Argument	"""Did not request a transferd with that id for any user."""		3810639	1					
ANR	3810963	PrimaryExpression	"""Did not request a transferd with that id for any user."""		3810639	0					
ANR	3810964	ExpressionStatement	respad . put ( * rsock )	935:2:24662:24680	3810639	10	True				
ANR	3810965	CallExpression	respad . put ( * rsock )		3810639	0					
ANR	3810966	Callee	respad . put		3810639	0					
ANR	3810967	MemberAccess	respad . put		3810639	0					
ANR	3810968	Identifier	respad		3810639	0					
ANR	3810969	Identifier	put		3810639	1					
ANR	3810970	ArgumentList	* rsock		3810639	1					
ANR	3810971	Argument	* rsock		3810639	0					
ANR	3810972	UnaryOperationExpression	* rsock		3810639	0					
ANR	3810973	UnaryOperator	*		3810639	0					
ANR	3810974	Identifier	rsock		3810639	1					
ANR	3810975	ExpressionStatement	rsock -> end_of_message ( )	936:2:24684:24707	3810639	11	True				
ANR	3810976	CallExpression	rsock -> end_of_message ( )		3810639	0					
ANR	3810977	Callee	rsock -> end_of_message		3810639	0					
ANR	3810978	PtrMemberAccess	rsock -> end_of_message		3810639	0					
ANR	3810979	Identifier	rsock		3810639	0					
ANR	3810980	Identifier	end_of_message		3810639	1					
ANR	3810981	ArgumentList			3810639	1					
ANR	3810982	ExpressionStatement	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"	938:2:24712:24774	3810639	12	True				
ANR	3810983	CallExpression	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"		3810639	0					
ANR	3810984	Callee	dprintf		3810639	0					
ANR	3810985	Identifier	dprintf		3810639	0					
ANR	3810986	ArgumentList	D_ALWAYS		3810639	1					
ANR	3810987	Argument	D_ALWAYS		3810639	0					
ANR	3810988	Identifier	D_ALWAYS		3810639	0					
ANR	3810989	Argument	"""Leaving TDMan::transferd_registration()\\n"""		3810639	1					
ANR	3810990	PrimaryExpression	"""Leaving TDMan::transferd_registration()\\n"""		3810639	0					
ANR	3810991	ReturnStatement	return CLOSE_STREAM ;	939:2:24778:24797	3810639	13	True				
ANR	3810992	Identifier	CLOSE_STREAM		3810639	0					
ANR	3810993	IfStatement	if ( td -> get_fquser ( ) != fquser )		3810639	50					
ANR	3810994	Condition	td -> get_fquser ( ) != fquser	943:5:24876:24901	3810639	0	True				
ANR	3810995	EqualityExpression	td -> get_fquser ( ) != fquser		3810639	0		!=			
ANR	3810996	CallExpression	td -> get_fquser ( )		3810639	0					
ANR	3810997	Callee	td -> get_fquser		3810639	0					
ANR	3810998	PtrMemberAccess	td -> get_fquser		3810639	0					
ANR	3810999	Identifier	td		3810639	0					
ANR	3811000	Identifier	get_fquser		3810639	1					
ANR	3811001	ArgumentList			3810639	1					
ANR	3811002	Identifier	fquser		3810639	1					
ANR	3811003	CompoundStatement		96:33:3085:3085	3810639	1					
ANR	3811004	Statement	dprintf	945:2:24934:24940	3810639	0	True				
ANR	3811005	Statement	(	945:9:24941:24941	3810639	1	True				
ANR	3811006	Statement	D_ALWAYS	945:10:24942:24949	3810639	2	True				
ANR	3811007	Statement	","	945:18:24950:24950	3810639	3	True				
ANR	3811008	Statement	"""Did not request a transferd with that id for this specific user. """	946:3:24956:25022	3810639	4	True				
ANR	3811009	Statement	"""Refuse.\\n"""	947:3:25027:25037	3810639	5	True				
ANR	3811010	Statement	)	947:14:25038:25038	3810639	6	True				
ANR	3811011	ExpressionStatement		947:15:25039:25039	3810639	7	True				
ANR	3811012	ExpressionStatement	"respad . Assign ( ATTR_TREQ_INVALID_REQUEST , TRUE )"	949:2:25044:25090	3810639	8	True				
ANR	3811013	CallExpression	"respad . Assign ( ATTR_TREQ_INVALID_REQUEST , TRUE )"		3810639	0					
ANR	3811014	Callee	respad . Assign		3810639	0					
ANR	3811015	MemberAccess	respad . Assign		3810639	0					
ANR	3811016	Identifier	respad		3810639	0					
ANR	3811017	Identifier	Assign		3810639	1					
ANR	3811018	ArgumentList	ATTR_TREQ_INVALID_REQUEST		3810639	1					
ANR	3811019	Argument	ATTR_TREQ_INVALID_REQUEST		3810639	0					
ANR	3811020	Identifier	ATTR_TREQ_INVALID_REQUEST		3810639	0					
ANR	3811021	Argument	TRUE		3810639	1					
ANR	3811022	Identifier	TRUE		3810639	0					
ANR	3811023	ExpressionStatement	"respad . Assign ( ATTR_TREQ_INVALID_REASON , ""Did not request a transferd with that id for this specific user."" )"	950:2:25094:25205	3810639	9	True				
ANR	3811024	CallExpression	"respad . Assign ( ATTR_TREQ_INVALID_REASON , ""Did not request a transferd with that id for this specific user."" )"		3810639	0					
ANR	3811025	Callee	respad . Assign		3810639	0					
ANR	3811026	MemberAccess	respad . Assign		3810639	0					
ANR	3811027	Identifier	respad		3810639	0					
ANR	3811028	Identifier	Assign		3810639	1					
ANR	3811029	ArgumentList	ATTR_TREQ_INVALID_REASON		3810639	1					
ANR	3811030	Argument	ATTR_TREQ_INVALID_REASON		3810639	0					
ANR	3811031	Identifier	ATTR_TREQ_INVALID_REASON		3810639	0					
ANR	3811032	Argument	"""Did not request a transferd with that id for this specific user."""		3810639	1					
ANR	3811033	PrimaryExpression	"""Did not request a transferd with that id for this specific user."""		3810639	0					
ANR	3811034	ExpressionStatement	respad . put ( * rsock )	952:2:25209:25227	3810639	10	True				
ANR	3811035	CallExpression	respad . put ( * rsock )		3810639	0					
ANR	3811036	Callee	respad . put		3810639	0					
ANR	3811037	MemberAccess	respad . put		3810639	0					
ANR	3811038	Identifier	respad		3810639	0					
ANR	3811039	Identifier	put		3810639	1					
ANR	3811040	ArgumentList	* rsock		3810639	1					
ANR	3811041	Argument	* rsock		3810639	0					
ANR	3811042	UnaryOperationExpression	* rsock		3810639	0					
ANR	3811043	UnaryOperator	*		3810639	0					
ANR	3811044	Identifier	rsock		3810639	1					
ANR	3811045	ExpressionStatement	rsock -> end_of_message ( )	953:2:25231:25254	3810639	11	True				
ANR	3811046	CallExpression	rsock -> end_of_message ( )		3810639	0					
ANR	3811047	Callee	rsock -> end_of_message		3810639	0					
ANR	3811048	PtrMemberAccess	rsock -> end_of_message		3810639	0					
ANR	3811049	Identifier	rsock		3810639	0					
ANR	3811050	Identifier	end_of_message		3810639	1					
ANR	3811051	ArgumentList			3810639	1					
ANR	3811052	ExpressionStatement	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"	955:2:25259:25321	3810639	12	True				
ANR	3811053	CallExpression	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"		3810639	0					
ANR	3811054	Callee	dprintf		3810639	0					
ANR	3811055	Identifier	dprintf		3810639	0					
ANR	3811056	ArgumentList	D_ALWAYS		3810639	1					
ANR	3811057	Argument	D_ALWAYS		3810639	0					
ANR	3811058	Identifier	D_ALWAYS		3810639	0					
ANR	3811059	Argument	"""Leaving TDMan::transferd_registration()\\n"""		3810639	1					
ANR	3811060	PrimaryExpression	"""Leaving TDMan::transferd_registration()\\n"""		3810639	0					
ANR	3811061	ReturnStatement	return CLOSE_STREAM ;	956:2:25325:25344	3810639	13	True				
ANR	3811062	Identifier	CLOSE_STREAM		3810639	0					
ANR	3811063	IfStatement	if ( td -> get_status ( ) != TD_INVOKED )		3810639	51					
ANR	3811064	Condition	td -> get_status ( ) != TD_INVOKED	960:5:25390:25419	3810639	0	True				
ANR	3811065	EqualityExpression	td -> get_status ( ) != TD_INVOKED		3810639	0		!=			
ANR	3811066	CallExpression	td -> get_status ( )		3810639	0					
ANR	3811067	Callee	td -> get_status		3810639	0					
ANR	3811068	PtrMemberAccess	td -> get_status		3810639	0					
ANR	3811069	Identifier	td		3810639	0					
ANR	3811070	Identifier	get_status		3810639	1					
ANR	3811071	ArgumentList			3810639	1					
ANR	3811072	Identifier	TD_INVOKED		3810639	1					
ANR	3811073	CompoundStatement		113:37:3603:3603	3810639	1					
ANR	3811074	ExpressionStatement	"dprintf ( D_ALWAYS , ""Transferd for user not in TD_PRE_INVOKED state. Refuse.\\n"" )"	963:2:25453:25535	3810639	0	True				
ANR	3811075	CallExpression	"dprintf ( D_ALWAYS , ""Transferd for user not in TD_PRE_INVOKED state. Refuse.\\n"" )"		3810639	0					
ANR	3811076	Callee	dprintf		3810639	0					
ANR	3811077	Identifier	dprintf		3810639	0					
ANR	3811078	ArgumentList	D_ALWAYS		3810639	1					
ANR	3811079	Argument	D_ALWAYS		3810639	0					
ANR	3811080	Identifier	D_ALWAYS		3810639	0					
ANR	3811081	Argument	"""Transferd for user not in TD_PRE_INVOKED state. Refuse.\\n"""		3810639	1					
ANR	3811082	PrimaryExpression	"""Transferd for user not in TD_PRE_INVOKED state. Refuse.\\n"""		3810639	0					
ANR	3811083	ExpressionStatement	"respad . Assign ( ATTR_TREQ_INVALID_REQUEST , TRUE )"	966:2:25540:25586	3810639	1	True				
ANR	3811084	CallExpression	"respad . Assign ( ATTR_TREQ_INVALID_REQUEST , TRUE )"		3810639	0					
ANR	3811085	Callee	respad . Assign		3810639	0					
ANR	3811086	MemberAccess	respad . Assign		3810639	0					
ANR	3811087	Identifier	respad		3810639	0					
ANR	3811088	Identifier	Assign		3810639	1					
ANR	3811089	ArgumentList	ATTR_TREQ_INVALID_REQUEST		3810639	1					
ANR	3811090	Argument	ATTR_TREQ_INVALID_REQUEST		3810639	0					
ANR	3811091	Identifier	ATTR_TREQ_INVALID_REQUEST		3810639	0					
ANR	3811092	Argument	TRUE		3810639	1					
ANR	3811093	Identifier	TRUE		3810639	0					
ANR	3811094	ExpressionStatement	"respad . Assign ( ATTR_TREQ_INVALID_REASON , ""Transferd for user not in TD_PRE_INVOKED state.\\n"" )"	967:2:25590:25686	3810639	2	True				
ANR	3811095	CallExpression	"respad . Assign ( ATTR_TREQ_INVALID_REASON , ""Transferd for user not in TD_PRE_INVOKED state.\\n"" )"		3810639	0					
ANR	3811096	Callee	respad . Assign		3810639	0					
ANR	3811097	MemberAccess	respad . Assign		3810639	0					
ANR	3811098	Identifier	respad		3810639	0					
ANR	3811099	Identifier	Assign		3810639	1					
ANR	3811100	ArgumentList	ATTR_TREQ_INVALID_REASON		3810639	1					
ANR	3811101	Argument	ATTR_TREQ_INVALID_REASON		3810639	0					
ANR	3811102	Identifier	ATTR_TREQ_INVALID_REASON		3810639	0					
ANR	3811103	Argument	"""Transferd for user not in TD_PRE_INVOKED state.\\n"""		3810639	1					
ANR	3811104	PrimaryExpression	"""Transferd for user not in TD_PRE_INVOKED state.\\n"""		3810639	0					
ANR	3811105	ExpressionStatement	respad . put ( * rsock )	969:2:25690:25708	3810639	3	True				
ANR	3811106	CallExpression	respad . put ( * rsock )		3810639	0					
ANR	3811107	Callee	respad . put		3810639	0					
ANR	3811108	MemberAccess	respad . put		3810639	0					
ANR	3811109	Identifier	respad		3810639	0					
ANR	3811110	Identifier	put		3810639	1					
ANR	3811111	ArgumentList	* rsock		3810639	1					
ANR	3811112	Argument	* rsock		3810639	0					
ANR	3811113	UnaryOperationExpression	* rsock		3810639	0					
ANR	3811114	UnaryOperator	*		3810639	0					
ANR	3811115	Identifier	rsock		3810639	1					
ANR	3811116	ExpressionStatement	rsock -> end_of_message ( )	970:2:25712:25735	3810639	4	True				
ANR	3811117	CallExpression	rsock -> end_of_message ( )		3810639	0					
ANR	3811118	Callee	rsock -> end_of_message		3810639	0					
ANR	3811119	PtrMemberAccess	rsock -> end_of_message		3810639	0					
ANR	3811120	Identifier	rsock		3810639	0					
ANR	3811121	Identifier	end_of_message		3810639	1					
ANR	3811122	ArgumentList			3810639	1					
ANR	3811123	ExpressionStatement	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"	972:2:25740:25802	3810639	5	True				
ANR	3811124	CallExpression	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"		3810639	0					
ANR	3811125	Callee	dprintf		3810639	0					
ANR	3811126	Identifier	dprintf		3810639	0					
ANR	3811127	ArgumentList	D_ALWAYS		3810639	1					
ANR	3811128	Argument	D_ALWAYS		3810639	0					
ANR	3811129	Identifier	D_ALWAYS		3810639	0					
ANR	3811130	Argument	"""Leaving TDMan::transferd_registration()\\n"""		3810639	1					
ANR	3811131	PrimaryExpression	"""Leaving TDMan::transferd_registration()\\n"""		3810639	0					
ANR	3811132	ReturnStatement	return CLOSE_STREAM ;	973:2:25806:25825	3810639	6	True				
ANR	3811133	Identifier	CLOSE_STREAM		3810639	0					
ANR	3811134	ExpressionStatement	"respad . Assign ( ATTR_TREQ_INVALID_REQUEST , FALSE )"	977:1:25883:25930	3810639	52	True				
ANR	3811135	CallExpression	"respad . Assign ( ATTR_TREQ_INVALID_REQUEST , FALSE )"		3810639	0					
ANR	3811136	Callee	respad . Assign		3810639	0					
ANR	3811137	MemberAccess	respad . Assign		3810639	0					
ANR	3811138	Identifier	respad		3810639	0					
ANR	3811139	Identifier	Assign		3810639	1					
ANR	3811140	ArgumentList	ATTR_TREQ_INVALID_REQUEST		3810639	1					
ANR	3811141	Argument	ATTR_TREQ_INVALID_REQUEST		3810639	0					
ANR	3811142	Identifier	ATTR_TREQ_INVALID_REQUEST		3810639	0					
ANR	3811143	Argument	FALSE		3810639	1					
ANR	3811144	Identifier	FALSE		3810639	0					
ANR	3811145	ExpressionStatement	respad . put ( * rsock )	978:1:25933:25951	3810639	53	True				
ANR	3811146	CallExpression	respad . put ( * rsock )		3810639	0					
ANR	3811147	Callee	respad . put		3810639	0					
ANR	3811148	MemberAccess	respad . put		3810639	0					
ANR	3811149	Identifier	respad		3810639	0					
ANR	3811150	Identifier	put		3810639	1					
ANR	3811151	ArgumentList	* rsock		3810639	1					
ANR	3811152	Argument	* rsock		3810639	0					
ANR	3811153	UnaryOperationExpression	* rsock		3810639	0					
ANR	3811154	UnaryOperator	*		3810639	0					
ANR	3811155	Identifier	rsock		3810639	1					
ANR	3811156	ExpressionStatement	rsock -> end_of_message ( )	979:1:25954:25977	3810639	54	True				
ANR	3811157	CallExpression	rsock -> end_of_message ( )		3810639	0					
ANR	3811158	Callee	rsock -> end_of_message		3810639	0					
ANR	3811159	PtrMemberAccess	rsock -> end_of_message		3810639	0					
ANR	3811160	Identifier	rsock		3810639	0					
ANR	3811161	Identifier	end_of_message		3810639	1					
ANR	3811162	ArgumentList			3810639	1					
ANR	3811163	ExpressionStatement	td -> set_status ( TD_REGISTERED )	986:1:26228:26257	3810639	55	True				
ANR	3811164	CallExpression	td -> set_status ( TD_REGISTERED )		3810639	0					
ANR	3811165	Callee	td -> set_status		3810639	0					
ANR	3811166	PtrMemberAccess	td -> set_status		3810639	0					
ANR	3811167	Identifier	td		3810639	0					
ANR	3811168	Identifier	set_status		3810639	1					
ANR	3811169	ArgumentList	TD_REGISTERED		3810639	1					
ANR	3811170	Argument	TD_REGISTERED		3810639	0					
ANR	3811171	Identifier	TD_REGISTERED		3810639	0					
ANR	3811172	ExpressionStatement	td -> set_sinful ( td_sinful )	987:1:26260:26285	3810639	56	True				
ANR	3811173	CallExpression	td -> set_sinful ( td_sinful )		3810639	0					
ANR	3811174	Callee	td -> set_sinful		3810639	0					
ANR	3811175	PtrMemberAccess	td -> set_sinful		3810639	0					
ANR	3811176	Identifier	td		3810639	0					
ANR	3811177	Identifier	set_sinful		3810639	1					
ANR	3811178	ArgumentList	td_sinful		3810639	1					
ANR	3811179	Argument	td_sinful		3810639	0					
ANR	3811180	Identifier	td_sinful		3810639	0					
ANR	3811181	ExpressionStatement	td -> set_update_sock ( rsock )	988:1:26288:26314	3810639	57	True				
ANR	3811182	CallExpression	td -> set_update_sock ( rsock )		3810639	0					
ANR	3811183	Callee	td -> set_update_sock		3810639	0					
ANR	3811184	PtrMemberAccess	td -> set_update_sock		3810639	0					
ANR	3811185	Identifier	td		3810639	0					
ANR	3811186	Identifier	set_update_sock		3810639	1					
ANR	3811187	ArgumentList	rsock		3810639	1					
ANR	3811188	Argument	rsock		3810639	0					
ANR	3811189	Identifier	rsock		3810639	0					
ANR	3811190	ExpressionStatement	"dprintf ( D_ALWAYS , ""Registration is valid...\\n"" )"	1006:1:27045:27092	3810639	58	True				
ANR	3811191	CallExpression	"dprintf ( D_ALWAYS , ""Registration is valid...\\n"" )"		3810639	0					
ANR	3811192	Callee	dprintf		3810639	0					
ANR	3811193	Identifier	dprintf		3810639	0					
ANR	3811194	ArgumentList	D_ALWAYS		3810639	1					
ANR	3811195	Argument	D_ALWAYS		3810639	0					
ANR	3811196	Identifier	D_ALWAYS		3810639	0					
ANR	3811197	Argument	"""Registration is valid...\\n"""		3810639	1					
ANR	3811198	PrimaryExpression	"""Registration is valid...\\n"""		3810639	0					
ANR	3811199	ExpressionStatement	"dprintf ( D_ALWAYS , ""Creating TransferRequest channel to transferd.\\n"" )"	1007:1:27095:27164	3810639	59	True				
ANR	3811200	CallExpression	"dprintf ( D_ALWAYS , ""Creating TransferRequest channel to transferd.\\n"" )"		3810639	0					
ANR	3811201	Callee	dprintf		3810639	0					
ANR	3811202	Identifier	dprintf		3810639	0					
ANR	3811203	ArgumentList	D_ALWAYS		3810639	1					
ANR	3811204	Argument	D_ALWAYS		3810639	0					
ANR	3811205	Identifier	D_ALWAYS		3810639	0					
ANR	3811206	Argument	"""Creating TransferRequest channel to transferd.\\n"""		3810639	1					
ANR	3811207	PrimaryExpression	"""Creating TransferRequest channel to transferd.\\n"""		3810639	0					
ANR	3811208	IdentifierDeclStatement	CondorError errstack ;	1008:1:27167:27187	3810639	60	True				
ANR	3811209	IdentifierDecl	errstack		3810639	0					
ANR	3811210	IdentifierDeclType	CondorError		3810639	0					
ANR	3811211	Identifier	errstack		3810639	1					
ANR	3811212	IdentifierDeclStatement	ReliSock * td_req_sock = NULL ;	1009:1:27190:27218	3810639	61	True				
ANR	3811213	IdentifierDecl	* td_req_sock = NULL		3810639	0					
ANR	3811214	IdentifierDeclType	ReliSock *		3810639	0					
ANR	3811215	Identifier	td_req_sock		3810639	1					
ANR	3811216	AssignmentExpression	* td_req_sock = NULL		3810639	2		=			
ANR	3811217	Identifier	NULL		3810639	0					
ANR	3811218	Identifier	NULL		3810639	1					
ANR	3811219	IdentifierDeclStatement	DCTransferD dctd ( td_sinful . Value ( ) ) ;	1010:1:27221:27256	3810639	62	True				
ANR	3811220	IdentifierDecl	dctd ( td_sinful . Value ( ) )		3810639	0					
ANR	3811221	IdentifierDeclType	DCTransferD		3810639	0					
ANR	3811222	Identifier	dctd		3810639	1					
ANR	3811223	CallExpression	td_sinful . Value ( )		3810639	2					
ANR	3811224	Callee	td_sinful . Value		3810639	0					
ANR	3811225	MemberAccess	td_sinful . Value		3810639	0					
ANR	3811226	Identifier	td_sinful		3810639	0					
ANR	3811227	Identifier	Value		3810639	1					
ANR	3811228	ArgumentList			3810639	1					
ANR	3811229	IfStatement	"if ( dctd . setup_treq_channel ( & td_req_sock , 20 , & errstack ) == false )"		3810639	63					
ANR	3811230	Condition	"dctd . setup_treq_channel ( & td_req_sock , 20 , & errstack ) == false"	1013:5:27320:27380	3810639	0	True				
ANR	3811231	EqualityExpression	"dctd . setup_treq_channel ( & td_req_sock , 20 , & errstack ) == false"		3810639	0		==			
ANR	3811232	CallExpression	"dctd . setup_treq_channel ( & td_req_sock , 20 , & errstack )"		3810639	0					
ANR	3811233	Callee	dctd . setup_treq_channel		3810639	0					
ANR	3811234	MemberAccess	dctd . setup_treq_channel		3810639	0					
ANR	3811235	Identifier	dctd		3810639	0					
ANR	3811236	Identifier	setup_treq_channel		3810639	1					
ANR	3811237	ArgumentList	& td_req_sock		3810639	1					
ANR	3811238	Argument	& td_req_sock		3810639	0					
ANR	3811239	UnaryOperationExpression	& td_req_sock		3810639	0					
ANR	3811240	UnaryOperator	&		3810639	0					
ANR	3811241	Identifier	td_req_sock		3810639	1					
ANR	3811242	Argument	20		3810639	1					
ANR	3811243	PrimaryExpression	20		3810639	0					
ANR	3811244	Argument	& errstack		3810639	2					
ANR	3811245	UnaryOperationExpression	& errstack		3810639	0					
ANR	3811246	UnaryOperator	&		3810639	0					
ANR	3811247	Identifier	errstack		3810639	1					
ANR	3811248	Identifier	false		3810639	1					
ANR	3811249	CompoundStatement		166:68:5564:5564	3810639	1					
ANR	3811250	ExpressionStatement	"dprintf ( D_ALWAYS , ""Refusing errant transferd.\\n"" )"	1014:2:27387:27436	3810639	0	True				
ANR	3811251	CallExpression	"dprintf ( D_ALWAYS , ""Refusing errant transferd.\\n"" )"		3810639	0					
ANR	3811252	Callee	dprintf		3810639	0					
ANR	3811253	Identifier	dprintf		3810639	0					
ANR	3811254	ArgumentList	D_ALWAYS		3810639	1					
ANR	3811255	Argument	D_ALWAYS		3810639	0					
ANR	3811256	Identifier	D_ALWAYS		3810639	0					
ANR	3811257	Argument	"""Refusing errant transferd.\\n"""		3810639	1					
ANR	3811258	PrimaryExpression	"""Refusing errant transferd.\\n"""		3810639	0					
ANR	3811259	ExpressionStatement	refuse ( rsock )	1015:2:27440:27453	3810639	1	True				
ANR	3811260	CallExpression	refuse ( rsock )		3810639	0					
ANR	3811261	Callee	refuse		3810639	0					
ANR	3811262	Identifier	refuse		3810639	0					
ANR	3811263	ArgumentList	rsock		3810639	1					
ANR	3811264	Argument	rsock		3810639	0					
ANR	3811265	Identifier	rsock		3810639	0					
ANR	3811266	ExpressionStatement	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"	1016:2:27457:27519	3810639	2	True				
ANR	3811267	CallExpression	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"		3810639	0					
ANR	3811268	Callee	dprintf		3810639	0					
ANR	3811269	Identifier	dprintf		3810639	0					
ANR	3811270	ArgumentList	D_ALWAYS		3810639	1					
ANR	3811271	Argument	D_ALWAYS		3810639	0					
ANR	3811272	Identifier	D_ALWAYS		3810639	0					
ANR	3811273	Argument	"""Leaving TDMan::transferd_registration()\\n"""		3810639	1					
ANR	3811274	PrimaryExpression	"""Leaving TDMan::transferd_registration()\\n"""		3810639	0					
ANR	3811275	ReturnStatement	return CLOSE_STREAM ;	1017:2:27523:27542	3810639	3	True				
ANR	3811276	Identifier	CLOSE_STREAM		3810639	0					
ANR	3811277	ExpressionStatement	td -> set_treq_sock ( td_req_sock )	1027:1:27757:27787	3810639	64	True				
ANR	3811278	CallExpression	td -> set_treq_sock ( td_req_sock )		3810639	0					
ANR	3811279	Callee	td -> set_treq_sock		3810639	0					
ANR	3811280	PtrMemberAccess	td -> set_treq_sock		3810639	0					
ANR	3811281	Identifier	td		3810639	0					
ANR	3811282	Identifier	set_treq_sock		3810639	1					
ANR	3811283	ArgumentList	td_req_sock		3810639	1					
ANR	3811284	Argument	td_req_sock		3810639	0					
ANR	3811285	Identifier	td_req_sock		3810639	0					
ANR	3811286	ExpressionStatement	"dprintf ( D_ALWAYS , ""TransferRequest channel created. Transferd appears stable.\\n"" )"	1028:1:27790:27874	3810639	65	True				
ANR	3811287	CallExpression	"dprintf ( D_ALWAYS , ""TransferRequest channel created. Transferd appears stable.\\n"" )"		3810639	0					
ANR	3811288	Callee	dprintf		3810639	0					
ANR	3811289	Identifier	dprintf		3810639	0					
ANR	3811290	ArgumentList	D_ALWAYS		3810639	1					
ANR	3811291	Argument	D_ALWAYS		3810639	0					
ANR	3811292	Identifier	D_ALWAYS		3810639	0					
ANR	3811293	Argument	"""TransferRequest channel created. Transferd appears stable.\\n"""		3810639	1					
ANR	3811294	PrimaryExpression	"""TransferRequest channel created. Transferd appears stable.\\n"""		3810639	0					
ANR	3811295	IdentifierDeclStatement	MyString sock_id ;	1036:1:28135:28151	3810639	66	True				
ANR	3811296	IdentifierDecl	sock_id		3810639	0					
ANR	3811297	IdentifierDeclType	MyString		3810639	0					
ANR	3811298	Identifier	sock_id		3810639	1					
ANR	3811299	ExpressionStatement	"sock_id += ""<Update-Socket-For-TD-"""	1037:1:28154:28189	3810639	67	True				
ANR	3811300	AssignmentExpression	"sock_id += ""<Update-Socket-For-TD-"""		3810639	0		+=			
ANR	3811301	Identifier	sock_id		3810639	0					
ANR	3811302	PrimaryExpression	"""<Update-Socket-For-TD-"""		3810639	1					
ANR	3811303	ExpressionStatement	sock_id += td_sinful	1038:1:28192:28212	3810639	68	True				
ANR	3811304	AssignmentExpression	sock_id += td_sinful		3810639	0		+=			
ANR	3811305	Identifier	sock_id		3810639	0					
ANR	3811306	Identifier	td_sinful		3810639	1					
ANR	3811307	ExpressionStatement	"sock_id += ""-"""	1039:1:28215:28229	3810639	69	True				
ANR	3811308	AssignmentExpression	"sock_id += ""-"""		3810639	0		+=			
ANR	3811309	Identifier	sock_id		3810639	0					
ANR	3811310	PrimaryExpression	"""-"""		3810639	1					
ANR	3811311	ExpressionStatement	sock_id += fquser	1040:1:28232:28249	3810639	70	True				
ANR	3811312	AssignmentExpression	sock_id += fquser		3810639	0		+=			
ANR	3811313	Identifier	sock_id		3810639	0					
ANR	3811314	Identifier	fquser		3810639	1					
ANR	3811315	ExpressionStatement	"sock_id += ""-"""	1041:1:28252:28266	3810639	71	True				
ANR	3811316	AssignmentExpression	"sock_id += ""-"""		3810639	0		+=			
ANR	3811317	Identifier	sock_id		3810639	0					
ANR	3811318	PrimaryExpression	"""-"""		3810639	1					
ANR	3811319	ExpressionStatement	sock_id += td_id	1042:1:28269:28285	3810639	72	True				
ANR	3811320	AssignmentExpression	sock_id += td_id		3810639	0		+=			
ANR	3811321	Identifier	sock_id		3810639	0					
ANR	3811322	Identifier	td_id		3810639	1					
ANR	3811323	ExpressionStatement	"sock_id += "">"""	1043:1:28288:28302	3810639	73	True				
ANR	3811324	AssignmentExpression	"sock_id += "">"""		3810639	0		+=			
ANR	3811325	Identifier	sock_id		3810639	0					
ANR	3811326	PrimaryExpression	""">"""		3810639	1					
ANR	3811327	ExpressionStatement	"daemonCore -> Register_Socket ( sock , sock_id . Value ( ) , ( SocketHandlercpp ) & TDMan :: transferd_update , ""TDMan::transferd_update"" , this , ALLOW )"	1045:1:28306:28444	3810639	74	True				
ANR	3811328	CallExpression	"daemonCore -> Register_Socket ( sock , sock_id . Value ( ) , ( SocketHandlercpp ) & TDMan :: transferd_update , ""TDMan::transferd_update"" , this , ALLOW )"		3810639	0					
ANR	3811329	Callee	daemonCore -> Register_Socket		3810639	0					
ANR	3811330	PtrMemberAccess	daemonCore -> Register_Socket		3810639	0					
ANR	3811331	Identifier	daemonCore		3810639	0					
ANR	3811332	Identifier	Register_Socket		3810639	1					
ANR	3811333	ArgumentList	sock		3810639	1					
ANR	3811334	Argument	sock		3810639	0					
ANR	3811335	Identifier	sock		3810639	0					
ANR	3811336	Argument	sock_id . Value ( )		3810639	1					
ANR	3811337	CallExpression	sock_id . Value ( )		3810639	0					
ANR	3811338	Callee	sock_id . Value		3810639	0					
ANR	3811339	MemberAccess	sock_id . Value		3810639	0					
ANR	3811340	Identifier	sock_id		3810639	0					
ANR	3811341	Identifier	Value		3810639	1					
ANR	3811342	ArgumentList			3810639	1					
ANR	3811343	Argument	( SocketHandlercpp ) & TDMan :: transferd_update		3810639	2					
ANR	3811344	CastExpression	( SocketHandlercpp ) & TDMan :: transferd_update		3810639	0					
ANR	3811345	CastTarget	SocketHandlercpp		3810639	0					
ANR	3811346	UnaryOperationExpression	& TDMan :: transferd_update		3810639	1					
ANR	3811347	UnaryOperator	&		3810639	0					
ANR	3811348	Identifier	TDMan :: transferd_update		3810639	1					
ANR	3811349	Argument	"""TDMan::transferd_update"""		3810639	3					
ANR	3811350	PrimaryExpression	"""TDMan::transferd_update"""		3810639	0					
ANR	3811351	Argument	this		3810639	4					
ANR	3811352	Identifier	this		3810639	0					
ANR	3811353	Argument	ALLOW		3810639	5					
ANR	3811354	Identifier	ALLOW		3810639	0					
ANR	3811355	ExpressionStatement	"tdup = new TDUpdateContinuation ( td_sinful , fquser , td_id , sock_id . Value ( ) )"	1055:1:28827:28901	3810639	75	True				
ANR	3811356	AssignmentExpression	"tdup = new TDUpdateContinuation ( td_sinful , fquser , td_id , sock_id . Value ( ) )"		3810639	0		=			
ANR	3811357	Identifier	tdup		3810639	0					
ANR	3811358	Expression	"td_sinful , fquser , td_id , sock_id . Value ( )"		3810639	1					
ANR	3811359	Identifier	td_sinful		3810639	0					
ANR	3811360	Expression	"fquser , td_id , sock_id . Value ( )"		3810639	1					
ANR	3811361	Identifier	fquser		3810639	0					
ANR	3811362	Expression	"td_id , sock_id . Value ( )"		3810639	1					
ANR	3811363	Identifier	td_id		3810639	0					
ANR	3811364	CallExpression	sock_id . Value ( )		3810639	1					
ANR	3811365	Callee	sock_id . Value		3810639	0					
ANR	3811366	MemberAccess	sock_id . Value		3810639	0					
ANR	3811367	Identifier	sock_id		3810639	0					
ANR	3811368	Identifier	Value		3810639	1					
ANR	3811369	ArgumentList			3810639	1					
ANR	3811370	ExpressionStatement	ASSERT ( tdup )	1056:1:28904:28916	3810639	76	True				
ANR	3811371	CallExpression	ASSERT ( tdup )		3810639	0					
ANR	3811372	Callee	ASSERT		3810639	0					
ANR	3811373	Identifier	ASSERT		3810639	0					
ANR	3811374	ArgumentList	tdup		3810639	1					
ANR	3811375	Argument	tdup		3810639	0					
ANR	3811376	Identifier	tdup		3810639	0					
ANR	3811377	ExpressionStatement	daemonCore -> Register_DataPtr ( tdup )	1059:1:28978:29012	3810639	77	True				
ANR	3811378	CallExpression	daemonCore -> Register_DataPtr ( tdup )		3810639	0					
ANR	3811379	Callee	daemonCore -> Register_DataPtr		3810639	0					
ANR	3811380	PtrMemberAccess	daemonCore -> Register_DataPtr		3810639	0					
ANR	3811381	Identifier	daemonCore		3810639	0					
ANR	3811382	Identifier	Register_DataPtr		3810639	1					
ANR	3811383	ArgumentList	tdup		3810639	1					
ANR	3811384	Argument	tdup		3810639	0					
ANR	3811385	Identifier	tdup		3810639	0					
ANR	3811386	ExpressionStatement	ret = td -> call_reg_callback ( td )	1068:1:29369:29400	3810639	78	True				
ANR	3811387	AssignmentExpression	ret = td -> call_reg_callback ( td )		3810639	0		=			
ANR	3811388	Identifier	ret		3810639	0					
ANR	3811389	CallExpression	td -> call_reg_callback ( td )		3810639	1					
ANR	3811390	Callee	td -> call_reg_callback		3810639	0					
ANR	3811391	PtrMemberAccess	td -> call_reg_callback		3810639	0					
ANR	3811392	Identifier	td		3810639	0					
ANR	3811393	Identifier	call_reg_callback		3810639	1					
ANR	3811394	ArgumentList	td		3810639	1					
ANR	3811395	Argument	td		3810639	0					
ANR	3811396	Identifier	td		3810639	0					
ANR	3811397	SwitchStatement	switch ( ret )		3810639	79					
ANR	3811398	Condition	ret	1069:8:29410:29412	3810639	0	True				
ANR	3811399	Identifier	ret		3810639	0					
ANR	3811400	CompoundStatement		222:13:7596:7596	3810639	1					
ANR	3811401	Label	case TD_ACTION_CONTINUE :	1070:2:29419:29442	3810639	0	True				
ANR	3811402	Identifier	TD_ACTION_CONTINUE		3810639	0					
ANR	3811403	BreakStatement	break ;	1072:3:29484:29489	3810639	1	True				
ANR	3811404	Label	case TD_ACTION_TERMINATE :	1074:2:29494:29518	3810639	2	True				
ANR	3811405	Identifier	TD_ACTION_TERMINATE		3810639	0					
ANR	3811406	Statement	EXCEPT	1075:3:29523:29528	3810639	3	True				
ANR	3811407	Statement	(	1075:9:29529:29529	3810639	4	True				
ANR	3811408	Statement	"""TDMan::transferd_registration() Programmer Error! """	1075:10:29530:29581	3810639	5	True				
ANR	3811409	Statement	"""Termination of transferd in registration callback not """	1076:4:29587:29642	3810639	6	True				
ANR	3811410	Statement	"""implemented."""	1077:4:29648:29661	3810639	7	True				
ANR	3811411	Statement	)	1077:18:29662:29662	3810639	8	True				
ANR	3811412	ExpressionStatement		1077:19:29663:29663	3810639	9	True				
ANR	3811413	BreakStatement	break ;	1078:3:29668:29673	3810639	10	True				
ANR	3811414	Label	default :	1080:2:29678:29685	3810639	11	True				
ANR	3811415	Identifier	default		3810639	0					
ANR	3811416	Statement	EXCEPT	1081:3:29690:29695	3810639	12	True				
ANR	3811417	Statement	(	1081:9:29696:29696	3810639	13	True				
ANR	3811418	Statement	"""TDMan::transferd_registration() Programmer Error! """	1081:10:29697:29748	3810639	14	True				
ANR	3811419	Statement	"""Unknown return code from the registration callback!"""	1082:4:29754:29806	3810639	15	True				
ANR	3811420	Statement	)	1082:57:29807:29807	3810639	16	True				
ANR	3811421	ExpressionStatement		1082:58:29808:29808	3810639	17	True				
ANR	3811422	BreakStatement	break ;	1083:3:29813:29818	3810639	18	True				
ANR	3811423	ExpressionStatement	"dprintf ( D_ALWAYS , ""TDMan::transferd_registration() pushing queued requests\\n"" )"	1095:1:30323:30404	3810639	80	True				
ANR	3811424	CallExpression	"dprintf ( D_ALWAYS , ""TDMan::transferd_registration() pushing queued requests\\n"" )"		3810639	0					
ANR	3811425	Callee	dprintf		3810639	0					
ANR	3811426	Identifier	dprintf		3810639	0					
ANR	3811427	ArgumentList	D_ALWAYS		3810639	1					
ANR	3811428	Argument	D_ALWAYS		3810639	0					
ANR	3811429	Identifier	D_ALWAYS		3810639	0					
ANR	3811430	Argument	"""TDMan::transferd_registration() pushing queued requests\\n"""		3810639	1					
ANR	3811431	PrimaryExpression	"""TDMan::transferd_registration() pushing queued requests\\n"""		3810639	0					
ANR	3811432	ExpressionStatement	td -> push_transfer_requests ( )	1098:1:30408:30436	3810639	81	True				
ANR	3811433	CallExpression	td -> push_transfer_requests ( )		3810639	0					
ANR	3811434	Callee	td -> push_transfer_requests		3810639	0					
ANR	3811435	PtrMemberAccess	td -> push_transfer_requests		3810639	0					
ANR	3811436	Identifier	td		3810639	0					
ANR	3811437	Identifier	push_transfer_requests		3810639	1					
ANR	3811438	ArgumentList			3810639	1					
ANR	3811439	ExpressionStatement	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"	1100:1:30440:30502	3810639	82	True				
ANR	3811440	CallExpression	"dprintf ( D_ALWAYS , ""Leaving TDMan::transferd_registration()\\n"" )"		3810639	0					
ANR	3811441	Callee	dprintf		3810639	0					
ANR	3811442	Identifier	dprintf		3810639	0					
ANR	3811443	ArgumentList	D_ALWAYS		3810639	1					
ANR	3811444	Argument	D_ALWAYS		3810639	0					
ANR	3811445	Identifier	D_ALWAYS		3810639	0					
ANR	3811446	Argument	"""Leaving TDMan::transferd_registration()\\n"""		3810639	1					
ANR	3811447	PrimaryExpression	"""Leaving TDMan::transferd_registration()\\n"""		3810639	0					
ANR	3811448	ReturnStatement	return KEEP_STREAM ;	1101:1:30505:30523	3810639	83	True				
ANR	3811449	Identifier	KEEP_STREAM		3810639	0					
ANR	3811450	ReturnType	int		3810639	1					
ANR	3811451	Identifier	TDMan :: transferd_registration		3810639	2					
ANR	3811452	ParameterList	"int cmd , Stream * sock"		3810639	3					
ANR	3811453	Parameter	int cmd	847:30:21795:21801	3810639	0	True				
ANR	3811454	ParameterType	int		3810639	0					
ANR	3811455	Identifier	cmd		3810639	1					
ANR	3811456	Parameter	Stream * sock	847:39:21804:21815	3810639	1	True				
ANR	3811457	ParameterType	Stream *		3810639	0					
ANR	3811458	Identifier	sock		3810639	1					
ANR	3811459	CFGEntryNode	ENTRY		3810639		True				
ANR	3811460	CFGExitNode	EXIT		3810639		True				
ANR	3811461	Symbol	CLOSE_STREAM		3810639						
ANR	3811462	Symbol	dctd		3810639						
ANR	3811463	Symbol	regad		3810639						
ANR	3811464	Symbol	TD_INVOKED		3810639						
ANR	3811465	Symbol	& td_req_sock		3810639						
ANR	3811466	Symbol	rsock		3810639						
ANR	3811467	Symbol	ATTR_TREQ_TD_SINFUL		3810639						
ANR	3811468	Symbol	sock_id		3810639						
ANR	3811469	Symbol	KEEP_STREAM		3810639						
ANR	3811470	Symbol	rsock -> triedAuthentication		3810639						
ANR	3811471	Symbol	WRITE		3810639						
ANR	3811472	Symbol	td -> get_fquser		3810639						
ANR	3811473	Symbol	dctd . setup_treq_channel		3810639						
ANR	3811474	Symbol	td -> call_reg_callback		3810639						
ANR	3811475	Symbol	daemonCore		3810639						
ANR	3811476	Symbol	& errstack		3810639						
ANR	3811477	Symbol	td_id		3810639						
ANR	3811478	Symbol	* rsock		3810639						
ANR	3811479	Symbol	sock_id . Value		3810639						
ANR	3811480	Symbol	ALLOW		3810639						
ANR	3811481	Symbol	ret		3810639						
ANR	3811482	Symbol	SecMan :: authenticate_sock		3810639						
ANR	3811483	Symbol	find_td_by_ident		3810639						
ANR	3811484	Symbol	td_req_sock		3810639						
ANR	3811485	Symbol	NULL		3810639						
ANR	3811486	Symbol	td -> get_status		3810639						
ANR	3811487	Symbol	D_ALWAYS		3810639						
ANR	3811488	Symbol	false		3810639						
ANR	3811489	Symbol	this		3810639						
ANR	3811490	Symbol	ATTR_TREQ_TD_ID		3810639						
ANR	3811491	Symbol	TRUE		3810639						
ANR	3811492	Symbol	fquser		3810639						
ANR	3811493	Symbol	td		3810639						
ANR	3811494	Symbol	TD_REGISTERED		3810639						
ANR	3811495	Symbol	sock		3810639						
ANR	3811496	Symbol	& TDMan :: transferd_update		3810639						
ANR	3811497	Symbol	errstack		3810639						
ANR	3811498	Symbol	td_sinful		3810639						
ANR	3811499	Symbol	* td		3810639						
ANR	3811500	Symbol	ATTR_TREQ_INVALID_REQUEST		3810639						
ANR	3811501	Symbol	errstack . getFullText		3810639						
ANR	3811502	Symbol	FALSE		3810639						
ANR	3811503	Symbol	cmd		3810639						
ANR	3811504	Symbol	rsock -> getFullyQualifiedUser		3810639						
ANR	3811505	Symbol	tdup		3810639						
ANR	3811506	Symbol	respad		3810639						
ANR	3811507	Symbol	ATTR_TREQ_INVALID_REASON		3810639						
ANR	3811508	Function	TDMan :: transferd_update	1108:0:30748:33577							
ANR	3811509	FunctionDef	TDMan :: transferd_update (Stream * sock)		3811508	0					
ANR	3811510	CompoundStatement		1110:0:30791:33577	3811508	0					
ANR	3811511	IdentifierDeclStatement	ReliSock * rsock = ( ReliSock * ) sock ;	1111:1:30794:30827	3811508	0	True				
ANR	3811512	IdentifierDecl	* rsock = ( ReliSock * ) sock		3811508	0					
ANR	3811513	IdentifierDeclType	ReliSock *		3811508	0					
ANR	3811514	Identifier	rsock		3811508	1					
ANR	3811515	AssignmentExpression	* rsock = ( ReliSock * ) sock		3811508	2		=			
ANR	3811516	Identifier	rsock		3811508	0					
ANR	3811517	CastExpression	( ReliSock * ) sock		3811508	1					
ANR	3811518	CastTarget	ReliSock *		3811508	0					
ANR	3811519	Identifier	sock		3811508	1					
ANR	3811520	IdentifierDeclStatement	TDUpdateContinuation * tdup = NULL ;	1112:1:30830:30863	3811508	1	True				
ANR	3811521	IdentifierDecl	* tdup = NULL		3811508	0					
ANR	3811522	IdentifierDeclType	TDUpdateContinuation *		3811508	0					
ANR	3811523	Identifier	tdup		3811508	1					
ANR	3811524	AssignmentExpression	* tdup = NULL		3811508	2		=			
ANR	3811525	Identifier	NULL		3811508	0					
ANR	3811526	Identifier	NULL		3811508	1					
ANR	3811527	IdentifierDeclStatement	ClassAd update ;	1113:1:30866:30880	3811508	2	True				
ANR	3811528	IdentifierDecl	update		3811508	0					
ANR	3811529	IdentifierDeclType	ClassAd		3811508	0					
ANR	3811530	Identifier	update		3811508	1					
ANR	3811531	IdentifierDeclStatement	MyString cap ;	1114:1:30883:30895	3811508	3	True				
ANR	3811532	IdentifierDecl	cap		3811508	0					
ANR	3811533	IdentifierDeclType	MyString		3811508	0					
ANR	3811534	Identifier	cap		3811508	1					
ANR	3811535	IdentifierDeclStatement	MyString status ;	1115:1:30898:30913	3811508	4	True				
ANR	3811536	IdentifierDecl	status		3811508	0					
ANR	3811537	IdentifierDeclType	MyString		3811508	0					
ANR	3811538	Identifier	status		3811508	1					
ANR	3811539	IdentifierDeclStatement	MyString reason ;	1116:1:30916:30931	3811508	5	True				
ANR	3811540	IdentifierDecl	reason		3811508	0					
ANR	3811541	IdentifierDeclType	MyString		3811508	0					
ANR	3811542	Identifier	reason		3811508	1					
ANR	3811543	IdentifierDeclStatement	TransferDaemon * td = NULL ;	1117:1:30934:30959	3811508	6	True				
ANR	3811544	IdentifierDecl	* td = NULL		3811508	0					
ANR	3811545	IdentifierDeclType	TransferDaemon *		3811508	0					
ANR	3811546	Identifier	td		3811508	1					
ANR	3811547	AssignmentExpression	* td = NULL		3811508	2		=			
ANR	3811548	Identifier	NULL		3811508	0					
ANR	3811549	Identifier	NULL		3811508	1					
ANR	3811550	ExpressionStatement	tdup = ( TDUpdateContinuation * ) daemonCore -> GetDataPtr ( )	1125:1:31314:31368	3811508	7	True				
ANR	3811551	AssignmentExpression	tdup = ( TDUpdateContinuation * ) daemonCore -> GetDataPtr ( )		3811508	0		=			
ANR	3811552	Identifier	tdup		3811508	0					
ANR	3811553	CastExpression	( TDUpdateContinuation * ) daemonCore -> GetDataPtr ( )		3811508	1					
ANR	3811554	CastTarget	TDUpdateContinuation *		3811508	0					
ANR	3811555	CallExpression	daemonCore -> GetDataPtr ( )		3811508	1					
ANR	3811556	Callee	daemonCore -> GetDataPtr		3811508	0					
ANR	3811557	PtrMemberAccess	daemonCore -> GetDataPtr		3811508	0					
ANR	3811558	Identifier	daemonCore		3811508	0					
ANR	3811559	Identifier	GetDataPtr		3811508	1					
ANR	3811560	ArgumentList			3811508	1					
ANR	3811561	ExpressionStatement	ASSERT ( tdup != NULL )	1126:1:31371:31391	3811508	8	True				
ANR	3811562	CallExpression	ASSERT ( tdup != NULL )		3811508	0					
ANR	3811563	Callee	ASSERT		3811508	0					
ANR	3811564	Identifier	ASSERT		3811508	0					
ANR	3811565	ArgumentList	tdup != NULL		3811508	1					
ANR	3811566	Argument	tdup != NULL		3811508	0					
ANR	3811567	EqualityExpression	tdup != NULL		3811508	0		!=			
ANR	3811568	Identifier	tdup		3811508	0					
ANR	3811569	Identifier	NULL		3811508	1					
ANR	3811570	ExpressionStatement	"dprintf ( D_ALWAYS , ""Transferd update from: addr(%s) fquser(%s) id(%s)\\n"" , tdup -> sinful . Value ( ) , tdup -> fquser . Value ( ) , tdup -> id . Value ( ) )"	1128:1:31395:31532	3811508	9	True				
ANR	3811571	CallExpression	"dprintf ( D_ALWAYS , ""Transferd update from: addr(%s) fquser(%s) id(%s)\\n"" , tdup -> sinful . Value ( ) , tdup -> fquser . Value ( ) , tdup -> id . Value ( ) )"		3811508	0					
ANR	3811572	Callee	dprintf		3811508	0					
ANR	3811573	Identifier	dprintf		3811508	0					
ANR	3811574	ArgumentList	D_ALWAYS		3811508	1					
ANR	3811575	Argument	D_ALWAYS		3811508	0					
ANR	3811576	Identifier	D_ALWAYS		3811508	0					
ANR	3811577	Argument	"""Transferd update from: addr(%s) fquser(%s) id(%s)\\n"""		3811508	1					
ANR	3811578	PrimaryExpression	"""Transferd update from: addr(%s) fquser(%s) id(%s)\\n"""		3811508	0					
ANR	3811579	Argument	tdup -> sinful . Value ( )		3811508	2					
ANR	3811580	CallExpression	tdup -> sinful . Value ( )		3811508	0					
ANR	3811581	Callee	tdup -> sinful . Value		3811508	0					
ANR	3811582	MemberAccess	tdup -> sinful . Value		3811508	0					
ANR	3811583	PtrMemberAccess	tdup -> sinful		3811508	0					
ANR	3811584	Identifier	tdup		3811508	0					
ANR	3811585	Identifier	sinful		3811508	1					
ANR	3811586	Identifier	Value		3811508	1					
ANR	3811587	ArgumentList			3811508	1					
ANR	3811588	Argument	tdup -> fquser . Value ( )		3811508	3					
ANR	3811589	CallExpression	tdup -> fquser . Value ( )		3811508	0					
ANR	3811590	Callee	tdup -> fquser . Value		3811508	0					
ANR	3811591	MemberAccess	tdup -> fquser . Value		3811508	0					
ANR	3811592	PtrMemberAccess	tdup -> fquser		3811508	0					
ANR	3811593	Identifier	tdup		3811508	0					
ANR	3811594	Identifier	fquser		3811508	1					
ANR	3811595	Identifier	Value		3811508	1					
ANR	3811596	ArgumentList			3811508	1					
ANR	3811597	Argument	tdup -> id . Value ( )		3811508	4					
ANR	3811598	CallExpression	tdup -> id . Value ( )		3811508	0					
ANR	3811599	Callee	tdup -> id . Value		3811508	0					
ANR	3811600	MemberAccess	tdup -> id . Value		3811508	0					
ANR	3811601	PtrMemberAccess	tdup -> id		3811508	0					
ANR	3811602	Identifier	tdup		3811508	0					
ANR	3811603	Identifier	id		3811508	1					
ANR	3811604	Identifier	Value		3811508	1					
ANR	3811605	ArgumentList			3811508	1					
ANR	3811606	IfStatement	if ( update . initFromStream ( * rsock ) == 0 )		3811508	10					
ANR	3811607	Condition	update . initFromStream ( * rsock ) == 0	1136:5:31787:31820	3811508	0	True				
ANR	3811608	EqualityExpression	update . initFromStream ( * rsock ) == 0		3811508	0		==			
ANR	3811609	CallExpression	update . initFromStream ( * rsock )		3811508	0					
ANR	3811610	Callee	update . initFromStream		3811508	0					
ANR	3811611	MemberAccess	update . initFromStream		3811508	0					
ANR	3811612	Identifier	update		3811508	0					
ANR	3811613	Identifier	initFromStream		3811508	1					
ANR	3811614	ArgumentList	* rsock		3811508	1					
ANR	3811615	Argument	* rsock		3811508	0					
ANR	3811616	UnaryOperationExpression	* rsock		3811508	0					
ANR	3811617	UnaryOperator	*		3811508	0					
ANR	3811618	Identifier	rsock		3811508	1					
ANR	3811619	PrimaryExpression	0		3811508	1					
ANR	3811620	CompoundStatement		27:41:1031:1031	3811508	1					
ANR	3811621	Statement	dprintf	1138:2:31877:31883	3811508	0	True				
ANR	3811622	Statement	(	1138:9:31884:31884	3811508	1	True				
ANR	3811623	Statement	D_ALWAYS	1138:10:31885:31892	3811508	2	True				
ANR	3811624	Statement	","	1138:18:31893:31893	3811508	3	True				
ANR	3811625	Statement	"""Update socket was closed. """	1138:20:31895:31922	3811508	4	True				
ANR	3811626	Statement	"""Transferd for user: %s with id: %s at location: %s will soon be """	1139:3:31927:31992	3811508	5	True				
ANR	3811627	Statement	"""reaped.\\n"""	1140:3:31997:32007	3811508	6	True				
ANR	3811628	Statement	","	1140:14:32008:32008	3811508	7	True				
ANR	3811629	Statement	tdup	1141:3:32014:32017	3811508	8	True				
ANR	3811630	Statement	->	1141:7:32018:32019	3811508	9	True				
ANR	3811631	Statement	fquser	1141:9:32020:32025	3811508	10	True				
ANR	3811632	Statement	.	1141:15:32026:32026	3811508	11	True				
ANR	3811633	Statement	Value	1141:16:32027:32031	3811508	12	True				
ANR	3811634	Statement	(	1141:21:32032:32032	3811508	13	True				
ANR	3811635	Statement	)	1141:22:32033:32033	3811508	14	True				
ANR	3811636	Statement	","	1141:23:32034:32034	3811508	15	True				
ANR	3811637	Statement	tdup	1141:25:32036:32039	3811508	16	True				
ANR	3811638	Statement	->	1141:29:32040:32041	3811508	17	True				
ANR	3811639	Statement	id	1141:31:32042:32043	3811508	18	True				
ANR	3811640	Statement	.	1141:33:32044:32044	3811508	19	True				
ANR	3811641	Statement	Value	1141:34:32045:32049	3811508	20	True				
ANR	3811642	Statement	(	1141:39:32050:32050	3811508	21	True				
ANR	3811643	Statement	)	1141:40:32051:32051	3811508	22	True				
ANR	3811644	Statement	","	1141:41:32052:32052	3811508	23	True				
ANR	3811645	Statement	tdup	1141:43:32054:32057	3811508	24	True				
ANR	3811646	Statement	->	1141:47:32058:32059	3811508	25	True				
ANR	3811647	Statement	sinful	1141:49:32060:32065	3811508	26	True				
ANR	3811648	Statement	.	1141:55:32066:32066	3811508	27	True				
ANR	3811649	Statement	Value	1141:56:32067:32071	3811508	28	True				
ANR	3811650	Statement	(	1141:61:32072:32072	3811508	29	True				
ANR	3811651	Statement	)	1141:62:32073:32073	3811508	30	True				
ANR	3811652	Statement	)	1141:63:32074:32074	3811508	31	True				
ANR	3811653	ExpressionStatement		1141:64:32075:32075	3811508	32	True				
ANR	3811654	Statement	delete	1143:2:32080:32085	3811508	33	True				
ANR	3811655	ExpressionStatement	tdup	1143:9:32087:32091	3811508	34	True				
ANR	3811656	Identifier	tdup		3811508	0					
ANR	3811657	ExpressionStatement	daemonCore -> SetDataPtr ( NULL )	1144:2:32095:32123	3811508	35	True				
ANR	3811658	CallExpression	daemonCore -> SetDataPtr ( NULL )		3811508	0					
ANR	3811659	Callee	daemonCore -> SetDataPtr		3811508	0					
ANR	3811660	PtrMemberAccess	daemonCore -> SetDataPtr		3811508	0					
ANR	3811661	Identifier	daemonCore		3811508	0					
ANR	3811662	Identifier	SetDataPtr		3811508	1					
ANR	3811663	ArgumentList	NULL		3811508	1					
ANR	3811664	Argument	NULL		3811508	0					
ANR	3811665	Identifier	NULL		3811508	0					
ANR	3811666	ReturnStatement	return CLOSE_STREAM ;	1145:2:32127:32146	3811508	36	True				
ANR	3811667	Identifier	CLOSE_STREAM		3811508	0					
ANR	3811668	ExpressionStatement	rsock -> end_of_message ( )	1147:1:32152:32175	3811508	11	True				
ANR	3811669	CallExpression	rsock -> end_of_message ( )		3811508	0					
ANR	3811670	Callee	rsock -> end_of_message		3811508	0					
ANR	3811671	PtrMemberAccess	rsock -> end_of_message		3811508	0					
ANR	3811672	Identifier	rsock		3811508	0					
ANR	3811673	Identifier	end_of_message		3811508	1					
ANR	3811674	ArgumentList			3811508	1					
ANR	3811675	ExpressionStatement	"update . LookupString ( ATTR_TREQ_CAPABILITY , cap )"	1149:1:32179:32225	3811508	12	True				
ANR	3811676	CallExpression	"update . LookupString ( ATTR_TREQ_CAPABILITY , cap )"		3811508	0					
ANR	3811677	Callee	update . LookupString		3811508	0					
ANR	3811678	MemberAccess	update . LookupString		3811508	0					
ANR	3811679	Identifier	update		3811508	0					
ANR	3811680	Identifier	LookupString		3811508	1					
ANR	3811681	ArgumentList	ATTR_TREQ_CAPABILITY		3811508	1					
ANR	3811682	Argument	ATTR_TREQ_CAPABILITY		3811508	0					
ANR	3811683	Identifier	ATTR_TREQ_CAPABILITY		3811508	0					
ANR	3811684	Argument	cap		3811508	1					
ANR	3811685	Identifier	cap		3811508	0					
ANR	3811686	ExpressionStatement	"update . LookupString ( ATTR_TREQ_UPDATE_STATUS , status )"	1150:1:32228:32280	3811508	13	True				
ANR	3811687	CallExpression	"update . LookupString ( ATTR_TREQ_UPDATE_STATUS , status )"		3811508	0					
ANR	3811688	Callee	update . LookupString		3811508	0					
ANR	3811689	MemberAccess	update . LookupString		3811508	0					
ANR	3811690	Identifier	update		3811508	0					
ANR	3811691	Identifier	LookupString		3811508	1					
ANR	3811692	ArgumentList	ATTR_TREQ_UPDATE_STATUS		3811508	1					
ANR	3811693	Argument	ATTR_TREQ_UPDATE_STATUS		3811508	0					
ANR	3811694	Identifier	ATTR_TREQ_UPDATE_STATUS		3811508	0					
ANR	3811695	Argument	status		3811508	1					
ANR	3811696	Identifier	status		3811508	0					
ANR	3811697	ExpressionStatement	"update . LookupString ( ATTR_TREQ_UPDATE_REASON , reason )"	1151:1:32283:32335	3811508	14	True				
ANR	3811698	CallExpression	"update . LookupString ( ATTR_TREQ_UPDATE_REASON , reason )"		3811508	0					
ANR	3811699	Callee	update . LookupString		3811508	0					
ANR	3811700	MemberAccess	update . LookupString		3811508	0					
ANR	3811701	Identifier	update		3811508	0					
ANR	3811702	Identifier	LookupString		3811508	1					
ANR	3811703	ArgumentList	ATTR_TREQ_UPDATE_REASON		3811508	1					
ANR	3811704	Argument	ATTR_TREQ_UPDATE_REASON		3811508	0					
ANR	3811705	Identifier	ATTR_TREQ_UPDATE_REASON		3811508	0					
ANR	3811706	Argument	reason		3811508	1					
ANR	3811707	Identifier	reason		3811508	0					
ANR	3811708	ExpressionStatement	"dprintf ( D_ALWAYS , ""Update was: cap = %s, status = %s,  reason = %s\\n"" , cap . Value ( ) , status . Value ( ) , reason . Value ( ) )"	1153:1:32339:32456	3811508	15	True				
ANR	3811709	CallExpression	"dprintf ( D_ALWAYS , ""Update was: cap = %s, status = %s,  reason = %s\\n"" , cap . Value ( ) , status . Value ( ) , reason . Value ( ) )"		3811508	0					
ANR	3811710	Callee	dprintf		3811508	0					
ANR	3811711	Identifier	dprintf		3811508	0					
ANR	3811712	ArgumentList	D_ALWAYS		3811508	1					
ANR	3811713	Argument	D_ALWAYS		3811508	0					
ANR	3811714	Identifier	D_ALWAYS		3811508	0					
ANR	3811715	Argument	"""Update was: cap = %s, status = %s,  reason = %s\\n"""		3811508	1					
ANR	3811716	PrimaryExpression	"""Update was: cap = %s, status = %s,  reason = %s\\n"""		3811508	0					
ANR	3811717	Argument	cap . Value ( )		3811508	2					
ANR	3811718	CallExpression	cap . Value ( )		3811508	0					
ANR	3811719	Callee	cap . Value		3811508	0					
ANR	3811720	MemberAccess	cap . Value		3811508	0					
ANR	3811721	Identifier	cap		3811508	0					
ANR	3811722	Identifier	Value		3811508	1					
ANR	3811723	ArgumentList			3811508	1					
ANR	3811724	Argument	status . Value ( )		3811508	3					
ANR	3811725	CallExpression	status . Value ( )		3811508	0					
ANR	3811726	Callee	status . Value		3811508	0					
ANR	3811727	MemberAccess	status . Value		3811508	0					
ANR	3811728	Identifier	status		3811508	0					
ANR	3811729	Identifier	Value		3811508	1					
ANR	3811730	ArgumentList			3811508	1					
ANR	3811731	Argument	reason . Value ( )		3811508	4					
ANR	3811732	CallExpression	reason . Value ( )		3811508	0					
ANR	3811733	Callee	reason . Value		3811508	0					
ANR	3811734	MemberAccess	reason . Value		3811508	0					
ANR	3811735	Identifier	reason		3811508	0					
ANR	3811736	Identifier	Value		3811508	1					
ANR	3811737	ArgumentList			3811508	1					
ANR	3811738	ExpressionStatement	td = find_td_by_ident ( tdup -> id )	1160:1:32674:32705	3811508	16	True				
ANR	3811739	AssignmentExpression	td = find_td_by_ident ( tdup -> id )		3811508	0		=			
ANR	3811740	Identifier	td		3811508	0					
ANR	3811741	CallExpression	find_td_by_ident ( tdup -> id )		3811508	1					
ANR	3811742	Callee	find_td_by_ident		3811508	0					
ANR	3811743	Identifier	find_td_by_ident		3811508	0					
ANR	3811744	ArgumentList	tdup -> id		3811508	1					
ANR	3811745	Argument	tdup -> id		3811508	0					
ANR	3811746	PtrMemberAccess	tdup -> id		3811508	0					
ANR	3811747	Identifier	tdup		3811508	0					
ANR	3811748	Identifier	id		3811508	1					
ANR	3811749	ExpressionStatement	ASSERT ( td != NULL )	1166:1:33014:33032	3811508	17	True				
ANR	3811750	CallExpression	ASSERT ( td != NULL )		3811508	0					
ANR	3811751	Callee	ASSERT		3811508	0					
ANR	3811752	Identifier	ASSERT		3811508	0					
ANR	3811753	ArgumentList	td != NULL		3811508	1					
ANR	3811754	Argument	td != NULL		3811508	0					
ANR	3811755	EqualityExpression	td != NULL		3811508	0		!=			
ANR	3811756	Identifier	td		3811508	0					
ANR	3811757	Identifier	NULL		3811508	1					
ANR	3811758	ExpressionStatement	td -> update_transfer_request ( & update )	1173:1:33326:33362	3811508	18	True				
ANR	3811759	CallExpression	td -> update_transfer_request ( & update )		3811508	0					
ANR	3811760	Callee	td -> update_transfer_request		3811508	0					
ANR	3811761	PtrMemberAccess	td -> update_transfer_request		3811508	0					
ANR	3811762	Identifier	td		3811508	0					
ANR	3811763	Identifier	update_transfer_request		3811508	1					
ANR	3811764	ArgumentList	& update		3811508	1					
ANR	3811765	Argument	& update		3811508	0					
ANR	3811766	UnaryOperationExpression	& update		3811508	0					
ANR	3811767	UnaryOperator	&		3811508	0					
ANR	3811768	Identifier	update		3811508	1					
ANR	3811769	ReturnStatement	return KEEP_STREAM ;	1179:1:33557:33575	3811508	19	True				
ANR	3811770	Identifier	KEEP_STREAM		3811508	0					
ANR	3811771	ReturnType	int		3811508	1					
ANR	3811772	Identifier	TDMan :: transferd_update		3811508	2					
ANR	3811773	ParameterList	Stream * sock		3811508	3					
ANR	3811774	Parameter	Stream * sock	1109:24:30777:30788	3811508	0	True				
ANR	3811775	ParameterType	Stream *		3811508	0					
ANR	3811776	Identifier	sock		3811508	1					
ANR	3811777	CFGEntryNode	ENTRY		3811508		True				
ANR	3811778	CFGExitNode	EXIT		3811508		True				
ANR	3811779	Symbol	reason		3811508						
ANR	3811780	Symbol	CLOSE_STREAM		3811508						
ANR	3811781	Symbol	tdup -> id		3811508						
ANR	3811782	Symbol	update		3811508						
ANR	3811783	Symbol	daemonCore -> GetDataPtr		3811508						
ANR	3811784	Symbol	reason . Value		3811508						
ANR	3811785	Symbol	rsock		3811508						
ANR	3811786	Symbol	tdup -> id . Value		3811508						
ANR	3811787	Symbol	ATTR_TREQ_UPDATE_STATUS		3811508						
ANR	3811788	Symbol	KEEP_STREAM		3811508						
ANR	3811789	Symbol	cap		3811508						
ANR	3811790	Symbol	ATTR_TREQ_UPDATE_REASON		3811508						
ANR	3811791	Symbol	daemonCore		3811508						
ANR	3811792	Symbol	* rsock		3811508						
ANR	3811793	Symbol	tdup -> fquser . Value		3811508						
ANR	3811794	Symbol	tdup -> fquser		3811508						
ANR	3811795	Symbol	tdup -> sinful . Value		3811508						
ANR	3811796	Symbol	find_td_by_ident		3811508						
ANR	3811797	Symbol	NULL		3811508						
ANR	3811798	Symbol	* tdup		3811508						
ANR	3811799	Symbol	D_ALWAYS		3811508						
ANR	3811800	Symbol	cap . Value		3811508						
ANR	3811801	Symbol	td		3811508						
ANR	3811802	Symbol	sock		3811508						
ANR	3811803	Symbol	tdup -> sinful		3811508						
ANR	3811804	Symbol	ATTR_TREQ_CAPABILITY		3811508						
ANR	3811805	Symbol	* daemonCore		3811508						
ANR	3811806	Symbol	update . initFromStream		3811508						
ANR	3811807	Symbol	& update		3811508						
ANR	3811808	Symbol	status . Value		3811508						
ANR	3811809	Symbol	tdup		3811508						
ANR	3811810	Symbol	status		3811508						
