command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1275794	File	data/converged/CVE-2011-4930_htcondor/drain.cpp								
ANR	1275795	DeclStmt									
ANR	1275796	Decl							int	int	cmd
ANR	1275797	DeclStmt									
ANR	1275798	Decl							char	char *	pool
ANR	1275799	DeclStmt									
ANR	1275800	Decl							char	char *	target
ANR	1275801	DeclStmt									
ANR	1275802	Decl							char	char *	my_name
ANR	1275803	DeclStmt									
ANR	1275804	Decl							int	int	how_fast
ANR	1275805	DeclStmt									
ANR	1275806	Decl							bool	bool	resume_on_completion
ANR	1275807	DeclStmt									
ANR	1275808	Decl							char	char *	cancel_request_id
ANR	1275809	DeclStmt									
ANR	1275810	Decl							char	char *	draining_check_expr
ANR	1275811	DeclStmt									
ANR	1275812	Decl							void	void ( const char * )	usage
ANR	1275813	DeclStmt									
ANR	1275814	Decl							void	void ( void )	version
ANR	1275815	DeclStmt									
ANR	1275816	Decl							void	void ( const char * opt )	invalid
ANR	1275817	DeclStmt									
ANR	1275818	Decl							void	void ( const char * opt )	ambiguous
ANR	1275819	DeclStmt									
ANR	1275820	Decl							void	void ( const char * opt )	another
ANR	1275821	DeclStmt									
ANR	1275822	Decl							void	"void ( int argc , char * argv [ ] )"	parseArgv
ANR	1275823	Function	main	67:0:2004:2845							
ANR	1275824	FunctionDef	"main (int argc , char * argv [ ])"		1275823	0					
ANR	1275825	CompoundStatement		69:0:2039:2845	1275823	0					
ANR	1275826	ExpressionStatement	"myDistro -> Init ( argc , argv )"	71:1:2043:2071	1275823	0	True				
ANR	1275827	CallExpression	"myDistro -> Init ( argc , argv )"		1275823	0					
ANR	1275828	Callee	myDistro -> Init		1275823	0					
ANR	1275829	PtrMemberAccess	myDistro -> Init		1275823	0					
ANR	1275830	Identifier	myDistro		1275823	0					
ANR	1275831	Identifier	Init		1275823	1					
ANR	1275832	ArgumentList	argc		1275823	1					
ANR	1275833	Argument	argc		1275823	0					
ANR	1275834	Identifier	argc		1275823	0					
ANR	1275835	Argument	argv		1275823	1					
ANR	1275836	Identifier	argv		1275823	0					
ANR	1275837	ExpressionStatement	config ( )	73:1:2075:2083	1275823	1	True				
ANR	1275838	CallExpression	config ( )		1275823	0					
ANR	1275839	Callee	config		1275823	0					
ANR	1275840	Identifier	config		1275823	0					
ANR	1275841	ArgumentList			1275823	1					
ANR	1275842	ExpressionStatement	"parseArgv ( argc , argv )"	75:1:2087:2110	1275823	2	True				
ANR	1275843	CallExpression	"parseArgv ( argc , argv )"		1275823	0					
ANR	1275844	Callee	parseArgv		1275823	0					
ANR	1275845	Identifier	parseArgv		1275823	0					
ANR	1275846	ArgumentList	argc		1275823	1					
ANR	1275847	Argument	argc		1275823	0					
ANR	1275848	Identifier	argc		1275823	0					
ANR	1275849	Argument	argv		1275823	1					
ANR	1275850	Identifier	argv		1275823	0					
ANR	1275851	IdentifierDeclStatement	"DCStartd startd ( target , pool ) ;"	77:1:2114:2145	1275823	3	True				
ANR	1275852	IdentifierDecl	"startd ( target , pool )"		1275823	0					
ANR	1275853	IdentifierDeclType	DCStartd		1275823	0					
ANR	1275854	Identifier	startd		1275823	1					
ANR	1275855	Expression	"target , pool"		1275823	2					
ANR	1275856	Identifier	target		1275823	0					
ANR	1275857	Identifier	pool		1275823	1					
ANR	1275858	IfStatement	if ( ! startd . locate ( ) )		1275823	4					
ANR	1275859	Condition	! startd . locate ( )	79:5:2153:2169	1275823	0	True				
ANR	1275860	UnaryOperationExpression	! startd . locate ( )		1275823	0					
ANR	1275861	UnaryOperator	!		1275823	0					
ANR	1275862	CallExpression	startd . locate ( )		1275823	1					
ANR	1275863	Callee	startd . locate		1275823	0					
ANR	1275864	MemberAccess	startd . locate		1275823	0					
ANR	1275865	Identifier	startd		1275823	0					
ANR	1275866	Identifier	locate		1275823	1					
ANR	1275867	ArgumentList			1275823	1					
ANR	1275868	CompoundStatement		11:25:133:133	1275823	1					
ANR	1275869	ExpressionStatement	"fprintf ( stderr , ""ERROR: %s\\n"" , startd . error ( ) )"	80:2:2177:2225	1275823	0	True				
ANR	1275870	CallExpression	"fprintf ( stderr , ""ERROR: %s\\n"" , startd . error ( ) )"		1275823	0					
ANR	1275871	Callee	fprintf		1275823	0					
ANR	1275872	Identifier	fprintf		1275823	0					
ANR	1275873	ArgumentList	stderr		1275823	1					
ANR	1275874	Argument	stderr		1275823	0					
ANR	1275875	Identifier	stderr		1275823	0					
ANR	1275876	Argument	"""ERROR: %s\\n"""		1275823	1					
ANR	1275877	PrimaryExpression	"""ERROR: %s\\n"""		1275823	0					
ANR	1275878	Argument	startd . error ( )		1275823	2					
ANR	1275879	CallExpression	startd . error ( )		1275823	0					
ANR	1275880	Callee	startd . error		1275823	0					
ANR	1275881	MemberAccess	startd . error		1275823	0					
ANR	1275882	Identifier	startd		1275823	0					
ANR	1275883	Identifier	error		1275823	1					
ANR	1275884	ArgumentList			1275823	1					
ANR	1275885	ExpressionStatement	exit ( 1 )	81:2:2229:2238	1275823	1	True				
ANR	1275886	CallExpression	exit ( 1 )		1275823	0					
ANR	1275887	Callee	exit		1275823	0					
ANR	1275888	Identifier	exit		1275823	0					
ANR	1275889	ArgumentList	1		1275823	1					
ANR	1275890	Argument	1		1275823	0					
ANR	1275891	PrimaryExpression	1		1275823	0					
ANR	1275892	IdentifierDeclStatement	bool rval = false ;	84:1:2245:2262	1275823	5	True				
ANR	1275893	IdentifierDecl	rval = false		1275823	0					
ANR	1275894	IdentifierDeclType	bool		1275823	0					
ANR	1275895	Identifier	rval		1275823	1					
ANR	1275896	AssignmentExpression	rval = false		1275823	2		=			
ANR	1275897	Identifier	false		1275823	0					
ANR	1275898	Identifier	false		1275823	1					
ANR	1275899	IfStatement	if ( cmd == DRAIN_JOBS )		1275823	6					
ANR	1275900	Condition	cmd == DRAIN_JOBS	86:5:2270:2286	1275823	0	True				
ANR	1275901	EqualityExpression	cmd == DRAIN_JOBS		1275823	0		==			
ANR	1275902	Identifier	cmd		1275823	0					
ANR	1275903	Identifier	DRAIN_JOBS		1275823	1					
ANR	1275904	CompoundStatement		19:2:254:276	1275823	1					
ANR	1275905	IdentifierDeclStatement	std :: string request_id ;	87:2:2294:2316	1275823	0	True				
ANR	1275906	IdentifierDecl	request_id		1275823	0					
ANR	1275907	IdentifierDeclType	std :: string		1275823	0					
ANR	1275908	Identifier	request_id		1275823	1					
ANR	1275909	ExpressionStatement	"rval = startd . drainJobs ( how_fast , resume_on_completion , draining_check_expr , request_id )"	88:2:2320:2410	1275823	1	True				
ANR	1275910	AssignmentExpression	"rval = startd . drainJobs ( how_fast , resume_on_completion , draining_check_expr , request_id )"		1275823	0		=			
ANR	1275911	Identifier	rval		1275823	0					
ANR	1275912	CallExpression	"startd . drainJobs ( how_fast , resume_on_completion , draining_check_expr , request_id )"		1275823	1					
ANR	1275913	Callee	startd . drainJobs		1275823	0					
ANR	1275914	MemberAccess	startd . drainJobs		1275823	0					
ANR	1275915	Identifier	startd		1275823	0					
ANR	1275916	Identifier	drainJobs		1275823	1					
ANR	1275917	ArgumentList	how_fast		1275823	1					
ANR	1275918	Argument	how_fast		1275823	0					
ANR	1275919	Identifier	how_fast		1275823	0					
ANR	1275920	Argument	resume_on_completion		1275823	1					
ANR	1275921	Identifier	resume_on_completion		1275823	0					
ANR	1275922	Argument	draining_check_expr		1275823	2					
ANR	1275923	Identifier	draining_check_expr		1275823	0					
ANR	1275924	Argument	request_id		1275823	3					
ANR	1275925	Identifier	request_id		1275823	0					
ANR	1275926	IfStatement	if ( rval )		1275823	2					
ANR	1275927	Condition	rval	89:6:2418:2421	1275823	0	True				
ANR	1275928	Identifier	rval		1275823	0					
ANR	1275929	CompoundStatement		21:13:385:385	1275823	1					
ANR	1275930	ExpressionStatement	"printf ( ""Sent request to drain %s\\n"" , startd . name ( ) )"	90:3:2430:2480	1275823	0	True				
ANR	1275931	CallExpression	"printf ( ""Sent request to drain %s\\n"" , startd . name ( ) )"		1275823	0					
ANR	1275932	Callee	printf		1275823	0					
ANR	1275933	Identifier	printf		1275823	0					
ANR	1275934	ArgumentList	"""Sent request to drain %s\\n"""		1275823	1					
ANR	1275935	Argument	"""Sent request to drain %s\\n"""		1275823	0					
ANR	1275936	PrimaryExpression	"""Sent request to drain %s\\n"""		1275823	0					
ANR	1275937	Argument	startd . name ( )		1275823	1					
ANR	1275938	CallExpression	startd . name ( )		1275823	0					
ANR	1275939	Callee	startd . name		1275823	0					
ANR	1275940	MemberAccess	startd . name		1275823	0					
ANR	1275941	Identifier	startd		1275823	0					
ANR	1275942	Identifier	name		1275823	1					
ANR	1275943	ArgumentList			1275823	1					
ANR	1275944	ElseStatement	else		1275823	0					
ANR	1275945	IfStatement	if ( cmd == CANCEL_DRAIN_JOBS )		1275823	0					
ANR	1275946	Condition	cmd == CANCEL_DRAIN_JOBS	93:10:2499:2522	1275823	0	True				
ANR	1275947	EqualityExpression	cmd == CANCEL_DRAIN_JOBS		1275823	0		==			
ANR	1275948	Identifier	cmd		1275823	0					
ANR	1275949	Identifier	CANCEL_DRAIN_JOBS		1275823	1					
ANR	1275950	CompoundStatement		25:37:486:486	1275823	1					
ANR	1275951	ExpressionStatement	rval = startd . cancelDrainJobs ( cancel_request_id )	94:2:2530:2580	1275823	0	True				
ANR	1275952	AssignmentExpression	rval = startd . cancelDrainJobs ( cancel_request_id )		1275823	0		=			
ANR	1275953	Identifier	rval		1275823	0					
ANR	1275954	CallExpression	startd . cancelDrainJobs ( cancel_request_id )		1275823	1					
ANR	1275955	Callee	startd . cancelDrainJobs		1275823	0					
ANR	1275956	MemberAccess	startd . cancelDrainJobs		1275823	0					
ANR	1275957	Identifier	startd		1275823	0					
ANR	1275958	Identifier	cancelDrainJobs		1275823	1					
ANR	1275959	ArgumentList	cancel_request_id		1275823	1					
ANR	1275960	Argument	cancel_request_id		1275823	0					
ANR	1275961	Identifier	cancel_request_id		1275823	0					
ANR	1275962	IfStatement	if ( rval )		1275823	1					
ANR	1275963	Condition	rval	95:6:2588:2591	1275823	0	True				
ANR	1275964	Identifier	rval		1275823	0					
ANR	1275965	CompoundStatement		27:13:555:555	1275823	1					
ANR	1275966	ExpressionStatement	"printf ( ""Sent request to cancel draining on %s\\n"" , startd . name ( ) )"	96:3:2600:2663	1275823	0	True				
ANR	1275967	CallExpression	"printf ( ""Sent request to cancel draining on %s\\n"" , startd . name ( ) )"		1275823	0					
ANR	1275968	Callee	printf		1275823	0					
ANR	1275969	Identifier	printf		1275823	0					
ANR	1275970	ArgumentList	"""Sent request to cancel draining on %s\\n"""		1275823	1					
ANR	1275971	Argument	"""Sent request to cancel draining on %s\\n"""		1275823	0					
ANR	1275972	PrimaryExpression	"""Sent request to cancel draining on %s\\n"""		1275823	0					
ANR	1275973	Argument	startd . name ( )		1275823	1					
ANR	1275974	CallExpression	startd . name ( )		1275823	0					
ANR	1275975	Callee	startd . name		1275823	0					
ANR	1275976	MemberAccess	startd . name		1275823	0					
ANR	1275977	Identifier	startd		1275823	0					
ANR	1275978	Identifier	name		1275823	1					
ANR	1275979	ArgumentList			1275823	1					
ANR	1275980	IfStatement	if ( ! rval )		1275823	7					
ANR	1275981	Condition	! rval	100:5:2678:2683	1275823	0	True				
ANR	1275982	UnaryOperationExpression	! rval		1275823	0					
ANR	1275983	UnaryOperator	!		1275823	0					
ANR	1275984	Identifier	rval		1275823	1					
ANR	1275985	CompoundStatement		32:14:647:647	1275823	1					
ANR	1275986	ExpressionStatement	"fprintf ( stderr , ""Attempt to send %s to startd %s failed\\n%s\\n"" , getCommandString ( cmd ) , startd . addr ( ) , startd . error ( ) )"	101:2:2691:2815	1275823	0	True				
ANR	1275987	CallExpression	"fprintf ( stderr , ""Attempt to send %s to startd %s failed\\n%s\\n"" , getCommandString ( cmd ) , startd . addr ( ) , startd . error ( ) )"		1275823	0					
ANR	1275988	Callee	fprintf		1275823	0					
ANR	1275989	Identifier	fprintf		1275823	0					
ANR	1275990	ArgumentList	stderr		1275823	1					
ANR	1275991	Argument	stderr		1275823	0					
ANR	1275992	Identifier	stderr		1275823	0					
ANR	1275993	Argument	"""Attempt to send %s to startd %s failed\\n%s\\n"""		1275823	1					
ANR	1275994	PrimaryExpression	"""Attempt to send %s to startd %s failed\\n%s\\n"""		1275823	0					
ANR	1275995	Argument	getCommandString ( cmd )		1275823	2					
ANR	1275996	CallExpression	getCommandString ( cmd )		1275823	0					
ANR	1275997	Callee	getCommandString		1275823	0					
ANR	1275998	Identifier	getCommandString		1275823	0					
ANR	1275999	ArgumentList	cmd		1275823	1					
ANR	1276000	Argument	cmd		1275823	0					
ANR	1276001	Identifier	cmd		1275823	0					
ANR	1276002	Argument	startd . addr ( )		1275823	3					
ANR	1276003	CallExpression	startd . addr ( )		1275823	0					
ANR	1276004	Callee	startd . addr		1275823	0					
ANR	1276005	MemberAccess	startd . addr		1275823	0					
ANR	1276006	Identifier	startd		1275823	0					
ANR	1276007	Identifier	addr		1275823	1					
ANR	1276008	ArgumentList			1275823	1					
ANR	1276009	Argument	startd . error ( )		1275823	4					
ANR	1276010	CallExpression	startd . error ( )		1275823	0					
ANR	1276011	Callee	startd . error		1275823	0					
ANR	1276012	MemberAccess	startd . error		1275823	0					
ANR	1276013	Identifier	startd		1275823	0					
ANR	1276014	Identifier	error		1275823	1					
ANR	1276015	ArgumentList			1275823	1					
ANR	1276016	ReturnStatement	return 1 ;	103:2:2820:2828	1275823	1	True				
ANR	1276017	PrimaryExpression	1		1275823	0					
ANR	1276018	ReturnStatement	return 0 ;	106:1:2835:2843	1275823	8	True				
ANR	1276019	PrimaryExpression	0		1275823	0					
ANR	1276020	ReturnType	int		1275823	1					
ANR	1276021	Identifier	main		1275823	2					
ANR	1276022	ParameterList	"int argc , char * argv [ ]"		1275823	3					
ANR	1276023	Parameter	int argc	68:6:2014:2021	1275823	0	True				
ANR	1276024	ParameterType	int		1275823	0					
ANR	1276025	Identifier	argc		1275823	1					
ANR	1276026	Parameter	char * argv [ ]	68:16:2024:2035	1275823	1	True				
ANR	1276027	ParameterType	char * [ ]		1275823	0					
ANR	1276028	Identifier	argv		1275823	1					
ANR	1276029	CFGEntryNode	ENTRY		1275823		True				
ANR	1276030	CFGExitNode	EXIT		1275823		True				
ANR	1276031	Symbol	argc		1275823						
ANR	1276032	Symbol	startd . locate		1275823						
ANR	1276033	Symbol	how_fast		1275823						
ANR	1276034	Symbol	startd . addr		1275823						
ANR	1276035	Symbol	DRAIN_JOBS		1275823						
ANR	1276036	Symbol	false		1275823						
ANR	1276037	Symbol	cancel_request_id		1275823						
ANR	1276038	Symbol	CANCEL_DRAIN_JOBS		1275823						
ANR	1276039	Symbol	stderr		1275823						
ANR	1276040	Symbol	argv		1275823						
ANR	1276041	Symbol	startd		1275823						
ANR	1276042	Symbol	draining_check_expr		1275823						
ANR	1276043	Symbol	startd . name		1275823						
ANR	1276044	Symbol	myDistro		1275823						
ANR	1276045	Symbol	startd . error		1275823						
ANR	1276046	Symbol	getCommandString		1275823						
ANR	1276047	Symbol	rval		1275823						
ANR	1276048	Symbol	resume_on_completion		1275823						
ANR	1276049	Symbol	startd . cancelDrainJobs		1275823						
ANR	1276050	Symbol	cmd		1275823						
ANR	1276051	Symbol	request_id		1275823						
ANR	1276052	Symbol	startd . drainJobs		1275823						
ANR	1276053	Function	version	120:0:3219:3306							
ANR	1276054	FunctionDef	version ()		1276053	0					
ANR	1276055	CompoundStatement		122:0:3234:3306	1276053	0					
ANR	1276056	ExpressionStatement	"printf ( ""%s\\n%s\\n"" , CondorVersion ( ) , CondorPlatform ( ) )"	123:1:3237:3292	1276053	0	True				
ANR	1276057	CallExpression	"printf ( ""%s\\n%s\\n"" , CondorVersion ( ) , CondorPlatform ( ) )"		1276053	0					
ANR	1276058	Callee	printf		1276053	0					
ANR	1276059	Identifier	printf		1276053	0					
ANR	1276060	ArgumentList	"""%s\\n%s\\n"""		1276053	1					
ANR	1276061	Argument	"""%s\\n%s\\n"""		1276053	0					
ANR	1276062	PrimaryExpression	"""%s\\n%s\\n"""		1276053	0					
ANR	1276063	Argument	CondorVersion ( )		1276053	1					
ANR	1276064	CallExpression	CondorVersion ( )		1276053	0					
ANR	1276065	Callee	CondorVersion		1276053	0					
ANR	1276066	Identifier	CondorVersion		1276053	0					
ANR	1276067	ArgumentList			1276053	1					
ANR	1276068	Argument	CondorPlatform ( )		1276053	2					
ANR	1276069	CallExpression	CondorPlatform ( )		1276053	0					
ANR	1276070	Callee	CondorPlatform		1276053	0					
ANR	1276071	Identifier	CondorPlatform		1276053	0					
ANR	1276072	ArgumentList			1276053	1					
ANR	1276073	ExpressionStatement	exit ( 0 )	124:1:3295:3304	1276053	1	True				
ANR	1276074	CallExpression	exit ( 0 )		1276053	0					
ANR	1276075	Callee	exit		1276053	0					
ANR	1276076	Identifier	exit		1276053	0					
ANR	1276077	ArgumentList	0		1276053	1					
ANR	1276078	Argument	0		1276053	0					
ANR	1276079	PrimaryExpression	0		1276053	0					
ANR	1276080	ReturnType	void		1276053	1					
ANR	1276081	Identifier	version		1276053	2					
ANR	1276082	ParameterList			1276053	3					
ANR	1276083	CFGEntryNode	ENTRY		1276053		True				
ANR	1276084	CFGExitNode	EXIT		1276053		True				
ANR	1276085	Symbol	CondorVersion		1276053						
ANR	1276086	Symbol	CondorPlatform		1276053						
ANR	1276087	Function	invalid	127:0:3309:3421							
ANR	1276088	FunctionDef	invalid (const char * opt)		1276087	0					
ANR	1276089	CompoundStatement		129:0:3341:3421	1276087	0					
ANR	1276090	ExpressionStatement	"fprintf ( stderr , ""%s: '%s' is invalid\\n"" , my_name , opt )"	130:1:3344:3400	1276087	0	True				
ANR	1276091	CallExpression	"fprintf ( stderr , ""%s: '%s' is invalid\\n"" , my_name , opt )"		1276087	0					
ANR	1276092	Callee	fprintf		1276087	0					
ANR	1276093	Identifier	fprintf		1276087	0					
ANR	1276094	ArgumentList	stderr		1276087	1					
ANR	1276095	Argument	stderr		1276087	0					
ANR	1276096	Identifier	stderr		1276087	0					
ANR	1276097	Argument	"""%s: '%s' is invalid\\n"""		1276087	1					
ANR	1276098	PrimaryExpression	"""%s: '%s' is invalid\\n"""		1276087	0					
ANR	1276099	Argument	my_name		1276087	2					
ANR	1276100	Identifier	my_name		1276087	0					
ANR	1276101	Argument	opt		1276087	3					
ANR	1276102	Identifier	opt		1276087	0					
ANR	1276103	ExpressionStatement	usage ( my_name )	131:1:3403:3419	1276087	1	True				
ANR	1276104	CallExpression	usage ( my_name )		1276087	0					
ANR	1276105	Callee	usage		1276087	0					
ANR	1276106	Identifier	usage		1276087	0					
ANR	1276107	ArgumentList	my_name		1276087	1					
ANR	1276108	Argument	my_name		1276087	0					
ANR	1276109	Identifier	my_name		1276087	0					
ANR	1276110	ReturnType	void		1276087	1					
ANR	1276111	Identifier	invalid		1276087	2					
ANR	1276112	ParameterList	const char * opt		1276087	3					
ANR	1276113	Parameter	const char * opt	128:9:3323:3337	1276087	0	True				
ANR	1276114	ParameterType	const char *		1276087	0					
ANR	1276115	Identifier	opt		1276087	1					
ANR	1276116	CFGEntryNode	ENTRY		1276087		True				
ANR	1276117	CFGExitNode	EXIT		1276087		True				
ANR	1276118	Symbol	my_name		1276087						
ANR	1276119	Symbol	opt		1276087						
ANR	1276120	Symbol	stderr		1276087						
ANR	1276121	Function	ambiguous	135:0:3425:3542							
ANR	1276122	FunctionDef	ambiguous (const char * opt)		1276121	0					
ANR	1276123	CompoundStatement		137:0:3459:3542	1276121	0					
ANR	1276124	ExpressionStatement	"fprintf ( stderr , ""%s: '%s' is ambiguous\\n"" , my_name , opt )"	138:1:3462:3520	1276121	0	True				
ANR	1276125	CallExpression	"fprintf ( stderr , ""%s: '%s' is ambiguous\\n"" , my_name , opt )"		1276121	0					
ANR	1276126	Callee	fprintf		1276121	0					
ANR	1276127	Identifier	fprintf		1276121	0					
ANR	1276128	ArgumentList	stderr		1276121	1					
ANR	1276129	Argument	stderr		1276121	0					
ANR	1276130	Identifier	stderr		1276121	0					
ANR	1276131	Argument	"""%s: '%s' is ambiguous\\n"""		1276121	1					
ANR	1276132	PrimaryExpression	"""%s: '%s' is ambiguous\\n"""		1276121	0					
ANR	1276133	Argument	my_name		1276121	2					
ANR	1276134	Identifier	my_name		1276121	0					
ANR	1276135	Argument	opt		1276121	3					
ANR	1276136	Identifier	opt		1276121	0					
ANR	1276137	ExpressionStatement	usage ( my_name )	139:1:3524:3540	1276121	1	True				
ANR	1276138	CallExpression	usage ( my_name )		1276121	0					
ANR	1276139	Callee	usage		1276121	0					
ANR	1276140	Identifier	usage		1276121	0					
ANR	1276141	ArgumentList	my_name		1276121	1					
ANR	1276142	Argument	my_name		1276121	0					
ANR	1276143	Identifier	my_name		1276121	0					
ANR	1276144	ReturnType	void		1276121	1					
ANR	1276145	Identifier	ambiguous		1276121	2					
ANR	1276146	ParameterList	const char * opt		1276121	3					
ANR	1276147	Parameter	const char * opt	136:11:3441:3455	1276121	0	True				
ANR	1276148	ParameterType	const char *		1276121	0					
ANR	1276149	Identifier	opt		1276121	1					
ANR	1276150	CFGEntryNode	ENTRY		1276121		True				
ANR	1276151	CFGExitNode	EXIT		1276121		True				
ANR	1276152	Symbol	my_name		1276121						
ANR	1276153	Symbol	opt		1276121						
ANR	1276154	Symbol	stderr		1276121						
ANR	1276155	Function	another	143:0:3546:3678							
ANR	1276156	FunctionDef	another (const char * opt)		1276155	0					
ANR	1276157	CompoundStatement		145:0:3578:3678	1276155	0					
ANR	1276158	ExpressionStatement	"fprintf ( stderr , ""%s: '%s' requires another argument\\n"" , my_name , opt )"	146:1:3581:3656	1276155	0	True				
ANR	1276159	CallExpression	"fprintf ( stderr , ""%s: '%s' requires another argument\\n"" , my_name , opt )"		1276155	0					
ANR	1276160	Callee	fprintf		1276155	0					
ANR	1276161	Identifier	fprintf		1276155	0					
ANR	1276162	ArgumentList	stderr		1276155	1					
ANR	1276163	Argument	stderr		1276155	0					
ANR	1276164	Identifier	stderr		1276155	0					
ANR	1276165	Argument	"""%s: '%s' requires another argument\\n"""		1276155	1					
ANR	1276166	PrimaryExpression	"""%s: '%s' requires another argument\\n"""		1276155	0					
ANR	1276167	Argument	my_name		1276155	2					
ANR	1276168	Identifier	my_name		1276155	0					
ANR	1276169	Argument	opt		1276155	3					
ANR	1276170	Identifier	opt		1276155	0					
ANR	1276171	ExpressionStatement	usage ( my_name )	148:1:3660:3676	1276155	1	True				
ANR	1276172	CallExpression	usage ( my_name )		1276155	0					
ANR	1276173	Callee	usage		1276155	0					
ANR	1276174	Identifier	usage		1276155	0					
ANR	1276175	ArgumentList	my_name		1276155	1					
ANR	1276176	Argument	my_name		1276155	0					
ANR	1276177	Identifier	my_name		1276155	0					
ANR	1276178	ReturnType	void		1276155	1					
ANR	1276179	Identifier	another		1276155	2					
ANR	1276180	ParameterList	const char * opt		1276155	3					
ANR	1276181	Parameter	const char * opt	144:9:3560:3574	1276155	0	True				
ANR	1276182	ParameterType	const char *		1276155	0					
ANR	1276183	Identifier	opt		1276155	1					
ANR	1276184	CFGEntryNode	ENTRY		1276155		True				
ANR	1276185	CFGExitNode	EXIT		1276155		True				
ANR	1276186	Symbol	my_name		1276155						
ANR	1276187	Symbol	opt		1276155						
ANR	1276188	Symbol	stderr		1276155						
ANR	1276189	Function	parseArgv	151:0:3681:5366							
ANR	1276190	FunctionDef	"parseArgv (int argc , char * argv [ ])"		1276189	0					
ANR	1276191	CompoundStatement		153:0:3722:5366	1276189	0					
ANR	1276192	IdentifierDeclStatement	int i ;	154:1:3725:3730	1276189	0	True				
ANR	1276193	IdentifierDecl	i		1276189	0					
ANR	1276194	IdentifierDeclType	int		1276189	0					
ANR	1276195	Identifier	i		1276189	1					
ANR	1276196	ExpressionStatement	my_name = strdup ( argv [ 0 ] )	156:1:3734:3759	1276189	1	True				
ANR	1276197	AssignmentExpression	my_name = strdup ( argv [ 0 ] )		1276189	0		=			
ANR	1276198	Identifier	my_name		1276189	0					
ANR	1276199	CallExpression	strdup ( argv [ 0 ] )		1276189	1					
ANR	1276200	Callee	strdup		1276189	0					
ANR	1276201	Identifier	strdup		1276189	0					
ANR	1276202	ArgumentList	argv [ 0 ]		1276189	1					
ANR	1276203	Argument	argv [ 0 ]		1276189	0					
ANR	1276204	ArrayIndexing	argv [ 0 ]		1276189	0					
ANR	1276205	Identifier	argv		1276189	0					
ANR	1276206	PrimaryExpression	0		1276189	1					
ANR	1276207	ExpressionStatement	cmd = DRAIN_JOBS	157:1:3762:3778	1276189	2	True				
ANR	1276208	AssignmentExpression	cmd = DRAIN_JOBS		1276189	0		=			
ANR	1276209	Identifier	cmd		1276189	0					
ANR	1276210	Identifier	DRAIN_JOBS		1276189	1					
ANR	1276211	ForStatement	for ( i = 1 ; i < argc ; i ++ )		1276189	3					
ANR	1276212	ForInit	i = 1 ;	159:6:3787:3790	1276189	0	True				
ANR	1276213	AssignmentExpression	i = 1		1276189	0		=			
ANR	1276214	Identifier	i		1276189	0					
ANR	1276215	PrimaryExpression	1		1276189	1					
ANR	1276216	Condition	i < argc	159:11:3792:3797	1276189	1	True				
ANR	1276217	RelationalExpression	i < argc		1276189	0		<			
ANR	1276218	Identifier	i		1276189	0					
ANR	1276219	Identifier	argc		1276189	1					
ANR	1276220	PostIncDecOperationExpression	i ++	159:19:3800:3802	1276189	2	True				
ANR	1276221	Identifier	i		1276189	0					
ANR	1276222	IncDec	++		1276189	1					
ANR	1276223	CompoundStatement		7:25:83:83	1276189	3					
ANR	1276224	IfStatement	"if ( match_prefix ( argv [ i ] , ""-help"" ) )"		1276189	0					
ANR	1276225	Condition	"match_prefix ( argv [ i ] , ""-help"" )"	160:6:3814:3845	1276189	0	True				
ANR	1276226	CallExpression	"match_prefix ( argv [ i ] , ""-help"" )"		1276189	0					
ANR	1276227	Callee	match_prefix		1276189	0					
ANR	1276228	Identifier	match_prefix		1276189	0					
ANR	1276229	ArgumentList	argv [ i ]		1276189	1					
ANR	1276230	Argument	argv [ i ]		1276189	0					
ANR	1276231	ArrayIndexing	argv [ i ]		1276189	0					
ANR	1276232	Identifier	argv		1276189	0					
ANR	1276233	Identifier	i		1276189	1					
ANR	1276234	Argument	"""-help"""		1276189	1					
ANR	1276235	PrimaryExpression	"""-help"""		1276189	0					
ANR	1276236	CompoundStatement		8:41:126:126	1276189	1					
ANR	1276237	ExpressionStatement	usage ( my_name )	161:3:3854:3868	1276189	0	True				
ANR	1276238	CallExpression	usage ( my_name )		1276189	0					
ANR	1276239	Callee	usage		1276189	0					
ANR	1276240	Identifier	usage		1276189	0					
ANR	1276241	ArgumentList	my_name		1276189	1					
ANR	1276242	Argument	my_name		1276189	0					
ANR	1276243	Identifier	my_name		1276189	0					
ANR	1276244	ElseStatement	else		1276189	0					
ANR	1276245	IfStatement	"if ( match_prefix ( argv [ i ] , ""-version"" ) )"		1276189	0					
ANR	1276246	Condition	"match_prefix ( argv [ i ] , ""-version"" )"	163:11:3885:3919	1276189	0	True				
ANR	1276247	CallExpression	"match_prefix ( argv [ i ] , ""-version"" )"		1276189	0					
ANR	1276248	Callee	match_prefix		1276189	0					
ANR	1276249	Identifier	match_prefix		1276189	0					
ANR	1276250	ArgumentList	argv [ i ]		1276189	1					
ANR	1276251	Argument	argv [ i ]		1276189	0					
ANR	1276252	ArrayIndexing	argv [ i ]		1276189	0					
ANR	1276253	Identifier	argv		1276189	0					
ANR	1276254	Identifier	i		1276189	1					
ANR	1276255	Argument	"""-version"""		1276189	1					
ANR	1276256	PrimaryExpression	"""-version"""		1276189	0					
ANR	1276257	CompoundStatement		11:49:200:200	1276189	1					
ANR	1276258	ExpressionStatement	version ( )	164:3:3928:3937	1276189	0	True				
ANR	1276259	CallExpression	version ( )		1276189	0					
ANR	1276260	Callee	version		1276189	0					
ANR	1276261	Identifier	version		1276189	0					
ANR	1276262	ArgumentList			1276189	1					
ANR	1276263	ElseStatement	else		1276189	0					
ANR	1276264	IfStatement	"if ( match_prefix ( argv [ i ] , ""-pool"" ) )"		1276189	0					
ANR	1276265	Condition	"match_prefix ( argv [ i ] , ""-pool"" )"	166:11:3954:3985	1276189	0	True				
ANR	1276266	CallExpression	"match_prefix ( argv [ i ] , ""-pool"" )"		1276189	0					
ANR	1276267	Callee	match_prefix		1276189	0					
ANR	1276268	Identifier	match_prefix		1276189	0					
ANR	1276269	ArgumentList	argv [ i ]		1276189	1					
ANR	1276270	Argument	argv [ i ]		1276189	0					
ANR	1276271	ArrayIndexing	argv [ i ]		1276189	0					
ANR	1276272	Identifier	argv		1276189	0					
ANR	1276273	Identifier	i		1276189	1					
ANR	1276274	Argument	"""-pool"""		1276189	1					
ANR	1276275	PrimaryExpression	"""-pool"""		1276189	0					
ANR	1276276	CompoundStatement		14:46:266:266	1276189	1					
ANR	1276277	IfStatement	if ( i + 1 >= argc )		1276189	0					
ANR	1276278	Condition	i + 1 >= argc	167:7:3998:4008	1276189	0	True				
ANR	1276279	RelationalExpression	i + 1 >= argc		1276189	0		>=			
ANR	1276280	AdditiveExpression	i + 1		1276189	0		+			
ANR	1276281	Identifier	i		1276189	0					
ANR	1276282	PrimaryExpression	1		1276189	1					
ANR	1276283	Identifier	argc		1276189	1					
ANR	1276284	ExpressionStatement	another ( argv [ i ] )	167:21:4012:4028	1276189	1	True				
ANR	1276285	CallExpression	another ( argv [ i ] )		1276189	0					
ANR	1276286	Callee	another		1276189	0					
ANR	1276287	Identifier	another		1276189	0					
ANR	1276288	ArgumentList	argv [ i ]		1276189	1					
ANR	1276289	Argument	argv [ i ]		1276189	0					
ANR	1276290	ArrayIndexing	argv [ i ]		1276189	0					
ANR	1276291	Identifier	argv		1276189	0					
ANR	1276292	Identifier	i		1276189	1					
ANR	1276293	ExpressionStatement	pool = strdup ( argv [ ++ i ] )	168:3:4033:4057	1276189	1	True				
ANR	1276294	AssignmentExpression	pool = strdup ( argv [ ++ i ] )		1276189	0		=			
ANR	1276295	Identifier	pool		1276189	0					
ANR	1276296	CallExpression	strdup ( argv [ ++ i ] )		1276189	1					
ANR	1276297	Callee	strdup		1276189	0					
ANR	1276298	Identifier	strdup		1276189	0					
ANR	1276299	ArgumentList	argv [ ++ i ]		1276189	1					
ANR	1276300	Argument	argv [ ++ i ]		1276189	0					
ANR	1276301	ArrayIndexing	argv [ ++ i ]		1276189	0					
ANR	1276302	Identifier	argv		1276189	0					
ANR	1276303	UnaryExpression	++ i		1276189	1					
ANR	1276304	IncDec	++		1276189	0					
ANR	1276305	Identifier	i		1276189	1					
ANR	1276306	ElseStatement	else		1276189	0					
ANR	1276307	IfStatement	"if ( match_prefix ( argv [ i ] , ""-cancel"" ) )"		1276189	0					
ANR	1276308	Condition	"match_prefix ( argv [ i ] , ""-cancel"" )"	170:11:4074:4107	1276189	0	True				
ANR	1276309	CallExpression	"match_prefix ( argv [ i ] , ""-cancel"" )"		1276189	0					
ANR	1276310	Callee	match_prefix		1276189	0					
ANR	1276311	Identifier	match_prefix		1276189	0					
ANR	1276312	ArgumentList	argv [ i ]		1276189	1					
ANR	1276313	Argument	argv [ i ]		1276189	0					
ANR	1276314	ArrayIndexing	argv [ i ]		1276189	0					
ANR	1276315	Identifier	argv		1276189	0					
ANR	1276316	Identifier	i		1276189	1					
ANR	1276317	Argument	"""-cancel"""		1276189	1					
ANR	1276318	PrimaryExpression	"""-cancel"""		1276189	0					
ANR	1276319	CompoundStatement		18:48:388:388	1276189	1					
ANR	1276320	ExpressionStatement	cmd = CANCEL_DRAIN_JOBS	171:3:4116:4139	1276189	0	True				
ANR	1276321	AssignmentExpression	cmd = CANCEL_DRAIN_JOBS		1276189	0		=			
ANR	1276322	Identifier	cmd		1276189	0					
ANR	1276323	Identifier	CANCEL_DRAIN_JOBS		1276189	1					
ANR	1276324	ElseStatement	else		1276189	0					
ANR	1276325	IfStatement	"if ( match_prefix ( argv [ i ] , ""-fast"" ) )"		1276189	0					
ANR	1276326	Condition	"match_prefix ( argv [ i ] , ""-fast"" )"	173:11:4156:4187	1276189	0	True				
ANR	1276327	CallExpression	"match_prefix ( argv [ i ] , ""-fast"" )"		1276189	0					
ANR	1276328	Callee	match_prefix		1276189	0					
ANR	1276329	Identifier	match_prefix		1276189	0					
ANR	1276330	ArgumentList	argv [ i ]		1276189	1					
ANR	1276331	Argument	argv [ i ]		1276189	0					
ANR	1276332	ArrayIndexing	argv [ i ]		1276189	0					
ANR	1276333	Identifier	argv		1276189	0					
ANR	1276334	Identifier	i		1276189	1					
ANR	1276335	Argument	"""-fast"""		1276189	1					
ANR	1276336	PrimaryExpression	"""-fast"""		1276189	0					
ANR	1276337	CompoundStatement		21:46:468:468	1276189	1					
ANR	1276338	ExpressionStatement	how_fast = DRAIN_FAST	174:3:4196:4217	1276189	0	True				
ANR	1276339	AssignmentExpression	how_fast = DRAIN_FAST		1276189	0		=			
ANR	1276340	Identifier	how_fast		1276189	0					
ANR	1276341	Identifier	DRAIN_FAST		1276189	1					
ANR	1276342	ElseStatement	else		1276189	0					
ANR	1276343	IfStatement	"if ( match_prefix ( argv [ i ] , ""-quick"" ) )"		1276189	0					
ANR	1276344	Condition	"match_prefix ( argv [ i ] , ""-quick"" )"	176:11:4234:4266	1276189	0	True				
ANR	1276345	CallExpression	"match_prefix ( argv [ i ] , ""-quick"" )"		1276189	0					
ANR	1276346	Callee	match_prefix		1276189	0					
ANR	1276347	Identifier	match_prefix		1276189	0					
ANR	1276348	ArgumentList	argv [ i ]		1276189	1					
ANR	1276349	Argument	argv [ i ]		1276189	0					
ANR	1276350	ArrayIndexing	argv [ i ]		1276189	0					
ANR	1276351	Identifier	argv		1276189	0					
ANR	1276352	Identifier	i		1276189	1					
ANR	1276353	Argument	"""-quick"""		1276189	1					
ANR	1276354	PrimaryExpression	"""-quick"""		1276189	0					
ANR	1276355	CompoundStatement		24:47:547:547	1276189	1					
ANR	1276356	ExpressionStatement	how_fast = DRAIN_QUICK	177:3:4275:4297	1276189	0	True				
ANR	1276357	AssignmentExpression	how_fast = DRAIN_QUICK		1276189	0		=			
ANR	1276358	Identifier	how_fast		1276189	0					
ANR	1276359	Identifier	DRAIN_QUICK		1276189	1					
ANR	1276360	ElseStatement	else		1276189	0					
ANR	1276361	IfStatement	"if ( match_prefix ( argv [ i ] , ""-graceful"" ) )"		1276189	0					
ANR	1276362	Condition	"match_prefix ( argv [ i ] , ""-graceful"" )"	179:11:4314:4349	1276189	0	True				
ANR	1276363	CallExpression	"match_prefix ( argv [ i ] , ""-graceful"" )"		1276189	0					
ANR	1276364	Callee	match_prefix		1276189	0					
ANR	1276365	Identifier	match_prefix		1276189	0					
ANR	1276366	ArgumentList	argv [ i ]		1276189	1					
ANR	1276367	Argument	argv [ i ]		1276189	0					
ANR	1276368	ArrayIndexing	argv [ i ]		1276189	0					
ANR	1276369	Identifier	argv		1276189	0					
ANR	1276370	Identifier	i		1276189	1					
ANR	1276371	Argument	"""-graceful"""		1276189	1					
ANR	1276372	PrimaryExpression	"""-graceful"""		1276189	0					
ANR	1276373	CompoundStatement		27:50:630:630	1276189	1					
ANR	1276374	ExpressionStatement	how_fast = DRAIN_GRACEFUL	180:3:4358:4383	1276189	0	True				
ANR	1276375	AssignmentExpression	how_fast = DRAIN_GRACEFUL		1276189	0		=			
ANR	1276376	Identifier	how_fast		1276189	0					
ANR	1276377	Identifier	DRAIN_GRACEFUL		1276189	1					
ANR	1276378	ElseStatement	else		1276189	0					
ANR	1276379	IfStatement	"if ( match_prefix ( argv [ i ] , ""-resume-on-completion"" ) )"		1276189	0					
ANR	1276380	Condition	"match_prefix ( argv [ i ] , ""-resume-on-completion"" )"	182:11:4400:4447	1276189	0	True				
ANR	1276381	CallExpression	"match_prefix ( argv [ i ] , ""-resume-on-completion"" )"		1276189	0					
ANR	1276382	Callee	match_prefix		1276189	0					
ANR	1276383	Identifier	match_prefix		1276189	0					
ANR	1276384	ArgumentList	argv [ i ]		1276189	1					
ANR	1276385	Argument	argv [ i ]		1276189	0					
ANR	1276386	ArrayIndexing	argv [ i ]		1276189	0					
ANR	1276387	Identifier	argv		1276189	0					
ANR	1276388	Identifier	i		1276189	1					
ANR	1276389	Argument	"""-resume-on-completion"""		1276189	1					
ANR	1276390	PrimaryExpression	"""-resume-on-completion"""		1276189	0					
ANR	1276391	CompoundStatement		30:62:728:728	1276189	1					
ANR	1276392	ExpressionStatement	resume_on_completion = true	183:3:4456:4483	1276189	0	True				
ANR	1276393	AssignmentExpression	resume_on_completion = true		1276189	0		=			
ANR	1276394	Identifier	resume_on_completion		1276189	0					
ANR	1276395	Identifier	true		1276189	1					
ANR	1276396	ElseStatement	else		1276189	0					
ANR	1276397	IfStatement	"if ( match_prefix ( argv [ i ] , ""-request-id"" ) )"		1276189	0					
ANR	1276398	Condition	"match_prefix ( argv [ i ] , ""-request-id"" )"	185:11:4500:4537	1276189	0	True				
ANR	1276399	CallExpression	"match_prefix ( argv [ i ] , ""-request-id"" )"		1276189	0					
ANR	1276400	Callee	match_prefix		1276189	0					
ANR	1276401	Identifier	match_prefix		1276189	0					
ANR	1276402	ArgumentList	argv [ i ]		1276189	1					
ANR	1276403	Argument	argv [ i ]		1276189	0					
ANR	1276404	ArrayIndexing	argv [ i ]		1276189	0					
ANR	1276405	Identifier	argv		1276189	0					
ANR	1276406	Identifier	i		1276189	1					
ANR	1276407	Argument	"""-request-id"""		1276189	1					
ANR	1276408	PrimaryExpression	"""-request-id"""		1276189	0					
ANR	1276409	CompoundStatement		33:52:818:818	1276189	1					
ANR	1276410	IfStatement	if ( i + 1 >= argc )		1276189	0					
ANR	1276411	Condition	i + 1 >= argc	186:7:4550:4560	1276189	0	True				
ANR	1276412	RelationalExpression	i + 1 >= argc		1276189	0		>=			
ANR	1276413	AdditiveExpression	i + 1		1276189	0		+			
ANR	1276414	Identifier	i		1276189	0					
ANR	1276415	PrimaryExpression	1		1276189	1					
ANR	1276416	Identifier	argc		1276189	1					
ANR	1276417	ExpressionStatement	another ( argv [ i ] )	186:21:4564:4580	1276189	1	True				
ANR	1276418	CallExpression	another ( argv [ i ] )		1276189	0					
ANR	1276419	Callee	another		1276189	0					
ANR	1276420	Identifier	another		1276189	0					
ANR	1276421	ArgumentList	argv [ i ]		1276189	1					
ANR	1276422	Argument	argv [ i ]		1276189	0					
ANR	1276423	ArrayIndexing	argv [ i ]		1276189	0					
ANR	1276424	Identifier	argv		1276189	0					
ANR	1276425	Identifier	i		1276189	1					
ANR	1276426	ExpressionStatement	cancel_request_id = strdup ( argv [ ++ i ] )	187:3:4585:4622	1276189	1	True				
ANR	1276427	AssignmentExpression	cancel_request_id = strdup ( argv [ ++ i ] )		1276189	0		=			
ANR	1276428	Identifier	cancel_request_id		1276189	0					
ANR	1276429	CallExpression	strdup ( argv [ ++ i ] )		1276189	1					
ANR	1276430	Callee	strdup		1276189	0					
ANR	1276431	Identifier	strdup		1276189	0					
ANR	1276432	ArgumentList	argv [ ++ i ]		1276189	1					
ANR	1276433	Argument	argv [ ++ i ]		1276189	0					
ANR	1276434	ArrayIndexing	argv [ ++ i ]		1276189	0					
ANR	1276435	Identifier	argv		1276189	0					
ANR	1276436	UnaryExpression	++ i		1276189	1					
ANR	1276437	IncDec	++		1276189	0					
ANR	1276438	Identifier	i		1276189	1					
ANR	1276439	ElseStatement	else		1276189	0					
ANR	1276440	IfStatement	"if ( match_prefix ( argv [ i ] , ""-check"" ) )"		1276189	0					
ANR	1276441	Condition	"match_prefix ( argv [ i ] , ""-check"" )"	189:11:4639:4671	1276189	0	True				
ANR	1276442	CallExpression	"match_prefix ( argv [ i ] , ""-check"" )"		1276189	0					
ANR	1276443	Callee	match_prefix		1276189	0					
ANR	1276444	Identifier	match_prefix		1276189	0					
ANR	1276445	ArgumentList	argv [ i ]		1276189	1					
ANR	1276446	Argument	argv [ i ]		1276189	0					
ANR	1276447	ArrayIndexing	argv [ i ]		1276189	0					
ANR	1276448	Identifier	argv		1276189	0					
ANR	1276449	Identifier	i		1276189	1					
ANR	1276450	Argument	"""-check"""		1276189	1					
ANR	1276451	PrimaryExpression	"""-check"""		1276189	0					
ANR	1276452	CompoundStatement		37:47:952:952	1276189	1					
ANR	1276453	IfStatement	if ( i + 1 >= argc )		1276189	0					
ANR	1276454	Condition	i + 1 >= argc	190:7:4684:4694	1276189	0	True				
ANR	1276455	RelationalExpression	i + 1 >= argc		1276189	0		>=			
ANR	1276456	AdditiveExpression	i + 1		1276189	0		+			
ANR	1276457	Identifier	i		1276189	0					
ANR	1276458	PrimaryExpression	1		1276189	1					
ANR	1276459	Identifier	argc		1276189	1					
ANR	1276460	ExpressionStatement	another ( argv [ i ] )	190:21:4698:4714	1276189	1	True				
ANR	1276461	CallExpression	another ( argv [ i ] )		1276189	0					
ANR	1276462	Callee	another		1276189	0					
ANR	1276463	Identifier	another		1276189	0					
ANR	1276464	ArgumentList	argv [ i ]		1276189	1					
ANR	1276465	Argument	argv [ i ]		1276189	0					
ANR	1276466	ArrayIndexing	argv [ i ]		1276189	0					
ANR	1276467	Identifier	argv		1276189	0					
ANR	1276468	Identifier	i		1276189	1					
ANR	1276469	ExpressionStatement	draining_check_expr = strdup ( argv [ ++ i ] )	191:3:4719:4758	1276189	1	True				
ANR	1276470	AssignmentExpression	draining_check_expr = strdup ( argv [ ++ i ] )		1276189	0		=			
ANR	1276471	Identifier	draining_check_expr		1276189	0					
ANR	1276472	CallExpression	strdup ( argv [ ++ i ] )		1276189	1					
ANR	1276473	Callee	strdup		1276189	0					
ANR	1276474	Identifier	strdup		1276189	0					
ANR	1276475	ArgumentList	argv [ ++ i ]		1276189	1					
ANR	1276476	Argument	argv [ ++ i ]		1276189	0					
ANR	1276477	ArrayIndexing	argv [ ++ i ]		1276189	0					
ANR	1276478	Identifier	argv		1276189	0					
ANR	1276479	UnaryExpression	++ i		1276189	1					
ANR	1276480	IncDec	++		1276189	0					
ANR	1276481	Identifier	i		1276189	1					
ANR	1276482	ElseStatement	else		1276189	0					
ANR	1276483	IfStatement	if ( argv [ i ] [ 0 ] != '-' )		1276189	0					
ANR	1276484	Condition	argv [ i ] [ 0 ] != '-'	193:17:4781:4797	1276189	0	True				
ANR	1276485	EqualityExpression	argv [ i ] [ 0 ] != '-'		1276189	0		!=			
ANR	1276486	ArrayIndexing	argv [ i ] [ 0 ]		1276189	0					
ANR	1276487	ArrayIndexing	argv [ i ]		1276189	0					
ANR	1276488	Identifier	argv		1276189	0					
ANR	1276489	Identifier	i		1276189	1					
ANR	1276490	PrimaryExpression	0		1276189	1					
ANR	1276491	PrimaryExpression	'-'		1276189	1					
ANR	1276492	CompoundStatement		41:37:1078:1078	1276189	1					
ANR	1276493	BreakStatement	break ;	194:12:4815:4820	1276189	0	True				
ANR	1276494	ElseStatement	else		1276189	0					
ANR	1276495	CompoundStatement		44:7:1116:1116	1276189	0					
ANR	1276496	ExpressionStatement	"fprintf ( stderr , ""ERROR: unexpected argument: %s\\n"" , argv [ i ] )"	197:3:4844:4903	1276189	0	True				
ANR	1276497	CallExpression	"fprintf ( stderr , ""ERROR: unexpected argument: %s\\n"" , argv [ i ] )"		1276189	0					
ANR	1276498	Callee	fprintf		1276189	0					
ANR	1276499	Identifier	fprintf		1276189	0					
ANR	1276500	ArgumentList	stderr		1276189	1					
ANR	1276501	Argument	stderr		1276189	0					
ANR	1276502	Identifier	stderr		1276189	0					
ANR	1276503	Argument	"""ERROR: unexpected argument: %s\\n"""		1276189	1					
ANR	1276504	PrimaryExpression	"""ERROR: unexpected argument: %s\\n"""		1276189	0					
ANR	1276505	Argument	argv [ i ]		1276189	2					
ANR	1276506	ArrayIndexing	argv [ i ]		1276189	0					
ANR	1276507	Identifier	argv		1276189	0					
ANR	1276508	Identifier	i		1276189	1					
ANR	1276509	ExpressionStatement	exit ( 2 )	198:3:4908:4915	1276189	1	True				
ANR	1276510	CallExpression	exit ( 2 )		1276189	0					
ANR	1276511	Callee	exit		1276189	0					
ANR	1276512	Identifier	exit		1276189	0					
ANR	1276513	ArgumentList	2		1276189	1					
ANR	1276514	Argument	2		1276189	0					
ANR	1276515	PrimaryExpression	2		1276189	0					
ANR	1276516	IfStatement	if ( i != argc - 1 )		1276189	4					
ANR	1276517	Condition	i != argc - 1	202:8:4933:4943	1276189	0	True				
ANR	1276518	EqualityExpression	i != argc - 1		1276189	0		!=			
ANR	1276519	Identifier	i		1276189	0					
ANR	1276520	AdditiveExpression	argc - 1		1276189	1		-			
ANR	1276521	Identifier	argc		1276189	0					
ANR	1276522	PrimaryExpression	1		1276189	1					
ANR	1276523	CompoundStatement		50:22:1224:1224	1276189	1					
ANR	1276524	ExpressionStatement	"fprintf ( stderr , ""ERROR: must specify one target machine\\n"" )"	203:8:4957:5015	1276189	0	True				
ANR	1276525	CallExpression	"fprintf ( stderr , ""ERROR: must specify one target machine\\n"" )"		1276189	0					
ANR	1276526	Callee	fprintf		1276189	0					
ANR	1276527	Identifier	fprintf		1276189	0					
ANR	1276528	ArgumentList	stderr		1276189	1					
ANR	1276529	Argument	stderr		1276189	0					
ANR	1276530	Identifier	stderr		1276189	0					
ANR	1276531	Argument	"""ERROR: must specify one target machine\\n"""		1276189	1					
ANR	1276532	PrimaryExpression	"""ERROR: must specify one target machine\\n"""		1276189	0					
ANR	1276533	ExpressionStatement	exit ( 2 )	204:8:5025:5032	1276189	1	True				
ANR	1276534	CallExpression	exit ( 2 )		1276189	0					
ANR	1276535	Callee	exit		1276189	0					
ANR	1276536	Identifier	exit		1276189	0					
ANR	1276537	ArgumentList	2		1276189	1					
ANR	1276538	Argument	2		1276189	0					
ANR	1276539	PrimaryExpression	2		1276189	0					
ANR	1276540	ExpressionStatement	target = strdup ( argv [ i ] )	207:1:5042:5066	1276189	5	True				
ANR	1276541	AssignmentExpression	target = strdup ( argv [ i ] )		1276189	0		=			
ANR	1276542	Identifier	target		1276189	0					
ANR	1276543	CallExpression	strdup ( argv [ i ] )		1276189	1					
ANR	1276544	Callee	strdup		1276189	0					
ANR	1276545	Identifier	strdup		1276189	0					
ANR	1276546	ArgumentList	argv [ i ]		1276189	1					
ANR	1276547	Argument	argv [ i ]		1276189	0					
ANR	1276548	ArrayIndexing	argv [ i ]		1276189	0					
ANR	1276549	Identifier	argv		1276189	0					
ANR	1276550	Identifier	i		1276189	1					
ANR	1276551	IfStatement	if ( cmd == DRAIN_JOBS )		1276189	6					
ANR	1276552	Condition	cmd == DRAIN_JOBS	209:5:5074:5090	1276189	0	True				
ANR	1276553	EqualityExpression	cmd == DRAIN_JOBS		1276189	0		==			
ANR	1276554	Identifier	cmd		1276189	0					
ANR	1276555	Identifier	DRAIN_JOBS		1276189	1					
ANR	1276556	CompoundStatement		57:25:1371:1371	1276189	1					
ANR	1276557	IfStatement	if ( cancel_request_id )		1276189	0					
ANR	1276558	Condition	cancel_request_id	210:6:5102:5118	1276189	0	True				
ANR	1276559	Identifier	cancel_request_id		1276189	0					
ANR	1276560	CompoundStatement		58:26:1399:1399	1276189	1					
ANR	1276561	ExpressionStatement	"fprintf ( stderr , ""ERROR: -request-id may only be used with -cancel\\n"" )"	211:3:5127:5195	1276189	0	True				
ANR	1276562	CallExpression	"fprintf ( stderr , ""ERROR: -request-id may only be used with -cancel\\n"" )"		1276189	0					
ANR	1276563	Callee	fprintf		1276189	0					
ANR	1276564	Identifier	fprintf		1276189	0					
ANR	1276565	ArgumentList	stderr		1276189	1					
ANR	1276566	Argument	stderr		1276189	0					
ANR	1276567	Identifier	stderr		1276189	0					
ANR	1276568	Argument	"""ERROR: -request-id may only be used with -cancel\\n"""		1276189	1					
ANR	1276569	PrimaryExpression	"""ERROR: -request-id may only be used with -cancel\\n"""		1276189	0					
ANR	1276570	ExpressionStatement	exit ( 2 )	212:3:5200:5207	1276189	1	True				
ANR	1276571	CallExpression	exit ( 2 )		1276189	0					
ANR	1276572	Callee	exit		1276189	0					
ANR	1276573	Identifier	exit		1276189	0					
ANR	1276574	ArgumentList	2		1276189	1					
ANR	1276575	Argument	2		1276189	0					
ANR	1276576	PrimaryExpression	2		1276189	0					
ANR	1276577	IfStatement	if ( cmd == CANCEL_DRAIN_JOBS )		1276189	7					
ANR	1276578	Condition	cmd == CANCEL_DRAIN_JOBS	215:5:5221:5244	1276189	0	True				
ANR	1276579	EqualityExpression	cmd == CANCEL_DRAIN_JOBS		1276189	0		==			
ANR	1276580	Identifier	cmd		1276189	0					
ANR	1276581	Identifier	CANCEL_DRAIN_JOBS		1276189	1					
ANR	1276582	CompoundStatement		63:32:1525:1525	1276189	1					
ANR	1276583	IfStatement	if ( draining_check_expr )		1276189	0					
ANR	1276584	Condition	draining_check_expr	216:6:5256:5274	1276189	0	True				
ANR	1276585	Identifier	draining_check_expr		1276189	0					
ANR	1276586	CompoundStatement		64:28:1555:1555	1276189	1					
ANR	1276587	ExpressionStatement	"fprintf ( stderr , ""ERROR: -check may not be used with -cancel\\n"" )"	217:3:5283:5345	1276189	0	True				
ANR	1276588	CallExpression	"fprintf ( stderr , ""ERROR: -check may not be used with -cancel\\n"" )"		1276189	0					
ANR	1276589	Callee	fprintf		1276189	0					
ANR	1276590	Identifier	fprintf		1276189	0					
ANR	1276591	ArgumentList	stderr		1276189	1					
ANR	1276592	Argument	stderr		1276189	0					
ANR	1276593	Identifier	stderr		1276189	0					
ANR	1276594	Argument	"""ERROR: -check may not be used with -cancel\\n"""		1276189	1					
ANR	1276595	PrimaryExpression	"""ERROR: -check may not be used with -cancel\\n"""		1276189	0					
ANR	1276596	ExpressionStatement	exit ( 2 )	218:3:5350:5357	1276189	1	True				
ANR	1276597	CallExpression	exit ( 2 )		1276189	0					
ANR	1276598	Callee	exit		1276189	0					
ANR	1276599	Identifier	exit		1276189	0					
ANR	1276600	ArgumentList	2		1276189	1					
ANR	1276601	Argument	2		1276189	0					
ANR	1276602	PrimaryExpression	2		1276189	0					
ANR	1276603	ReturnType	void		1276189	1					
ANR	1276604	Identifier	parseArgv		1276189	2					
ANR	1276605	ParameterList	"int argc , char * argv [ ]"		1276189	3					
ANR	1276606	Parameter	int argc	152:11:3697:3704	1276189	0	True				
ANR	1276607	ParameterType	int		1276189	0					
ANR	1276608	Identifier	argc		1276189	1					
ANR	1276609	Parameter	char * argv [ ]	152:21:3707:3718	1276189	1	True				
ANR	1276610	ParameterType	char * [ ]		1276189	0					
ANR	1276611	Identifier	argv		1276189	1					
ANR	1276612	CFGEntryNode	ENTRY		1276189		True				
ANR	1276613	CFGExitNode	EXIT		1276189		True				
ANR	1276614	Symbol	argc		1276189						
ANR	1276615	Symbol	how_fast		1276189						
ANR	1276616	Symbol	* * i		1276189						
ANR	1276617	Symbol	match_prefix		1276189						
ANR	1276618	Symbol	DRAIN_JOBS		1276189						
ANR	1276619	Symbol	pool		1276189						
ANR	1276620	Symbol	i		1276189						
ANR	1276621	Symbol	* argv		1276189						
ANR	1276622	Symbol	cancel_request_id		1276189						
ANR	1276623	Symbol	CANCEL_DRAIN_JOBS		1276189						
ANR	1276624	Symbol	DRAIN_GRACEFUL		1276189						
ANR	1276625	Symbol	stderr		1276189						
ANR	1276626	Symbol	argv		1276189						
ANR	1276627	Symbol	draining_check_expr		1276189						
ANR	1276628	Symbol	target		1276189						
ANR	1276629	Symbol	my_name		1276189						
ANR	1276630	Symbol	* i		1276189						
ANR	1276631	Symbol	DRAIN_FAST		1276189						
ANR	1276632	Symbol	true		1276189						
ANR	1276633	Symbol	* * argv		1276189						
ANR	1276634	Symbol	resume_on_completion		1276189						
ANR	1276635	Symbol	strdup		1276189						
ANR	1276636	Symbol	cmd		1276189						
ANR	1276637	Symbol	DRAIN_QUICK		1276189						
ANR	1276638	Function	usage	223:0:5369:6240							
ANR	1276639	FunctionDef	usage (const char * str)		1276638	0					
ANR	1276640	CompoundStatement		225:0:5399:6240	1276638	0					
ANR	1276641	IfStatement	if ( ! str )		1276638	0					
ANR	1276642	Condition	! str	226:5:5406:5410	1276638	0	True				
ANR	1276643	UnaryOperationExpression	! str		1276638	0					
ANR	1276644	UnaryOperator	!		1276638	0					
ANR	1276645	Identifier	str		1276638	1					
ANR	1276646	CompoundStatement		2:13:14:14	1276638	1					
ANR	1276647	ExpressionStatement	"fprintf ( stderr , ""Use \\""-help\\"" to see usage information\\n"" )"	227:2:5418:5479	1276638	0	True				
ANR	1276648	CallExpression	"fprintf ( stderr , ""Use \\""-help\\"" to see usage information\\n"" )"		1276638	0					
ANR	1276649	Callee	fprintf		1276638	0					
ANR	1276650	Identifier	fprintf		1276638	0					
ANR	1276651	ArgumentList	stderr		1276638	1					
ANR	1276652	Argument	stderr		1276638	0					
ANR	1276653	Identifier	stderr		1276638	0					
ANR	1276654	Argument	"""Use \\""-help\\"" to see usage information\\n"""		1276638	1					
ANR	1276655	PrimaryExpression	"""Use \\""-help\\"" to see usage information\\n"""		1276638	0					
ANR	1276656	ExpressionStatement	exit ( 1 )	228:2:5483:5492	1276638	1	True				
ANR	1276657	CallExpression	exit ( 1 )		1276638	0					
ANR	1276658	Callee	exit		1276638	0					
ANR	1276659	Identifier	exit		1276638	0					
ANR	1276660	ArgumentList	1		1276638	1					
ANR	1276661	Argument	1		1276638	0					
ANR	1276662	PrimaryExpression	1		1276638	0					
ANR	1276663	ExpressionStatement	"fprintf ( stderr , ""Usage: %s [OPTIONS] machine\\n"" , str )"	230:1:5498:5553	1276638	1	True				
ANR	1276664	CallExpression	"fprintf ( stderr , ""Usage: %s [OPTIONS] machine\\n"" , str )"		1276638	0					
ANR	1276665	Callee	fprintf		1276638	0					
ANR	1276666	Identifier	fprintf		1276638	0					
ANR	1276667	ArgumentList	stderr		1276638	1					
ANR	1276668	Argument	stderr		1276638	0					
ANR	1276669	Identifier	stderr		1276638	0					
ANR	1276670	Argument	"""Usage: %s [OPTIONS] machine\\n"""		1276638	1					
ANR	1276671	PrimaryExpression	"""Usage: %s [OPTIONS] machine\\n"""		1276638	0					
ANR	1276672	Argument	str		1276638	2					
ANR	1276673	Identifier	str		1276638	0					
ANR	1276674	ExpressionStatement	"fprintf ( stderr , ""\\nOPTIONS:\\n"" )"	231:1:5556:5589	1276638	2	True				
ANR	1276675	CallExpression	"fprintf ( stderr , ""\\nOPTIONS:\\n"" )"		1276638	0					
ANR	1276676	Callee	fprintf		1276638	0					
ANR	1276677	Identifier	fprintf		1276638	0					
ANR	1276678	ArgumentList	stderr		1276638	1					
ANR	1276679	Argument	stderr		1276638	0					
ANR	1276680	Identifier	stderr		1276638	0					
ANR	1276681	Argument	"""\\nOPTIONS:\\n"""		1276638	1					
ANR	1276682	PrimaryExpression	"""\\nOPTIONS:\\n"""		1276638	0					
ANR	1276683	ExpressionStatement	"fprintf ( stderr , ""-cancel          Stop draining.\\n"" )"	232:1:5592:5646	1276638	3	True				
ANR	1276684	CallExpression	"fprintf ( stderr , ""-cancel          Stop draining.\\n"" )"		1276638	0					
ANR	1276685	Callee	fprintf		1276638	0					
ANR	1276686	Identifier	fprintf		1276638	0					
ANR	1276687	ArgumentList	stderr		1276638	1					
ANR	1276688	Argument	stderr		1276638	0					
ANR	1276689	Identifier	stderr		1276638	0					
ANR	1276690	Argument	"""-cancel          Stop draining.\\n"""		1276638	1					
ANR	1276691	PrimaryExpression	"""-cancel          Stop draining.\\n"""		1276638	0					
ANR	1276692	ExpressionStatement	"fprintf ( stderr , ""-graceful         (the default) Honor MaxVacateTime and MaxJobRetirementTime.\\n"" )"	233:1:5649:5749	1276638	4	True				
ANR	1276693	CallExpression	"fprintf ( stderr , ""-graceful         (the default) Honor MaxVacateTime and MaxJobRetirementTime.\\n"" )"		1276638	0					
ANR	1276694	Callee	fprintf		1276638	0					
ANR	1276695	Identifier	fprintf		1276638	0					
ANR	1276696	ArgumentList	stderr		1276638	1					
ANR	1276697	Argument	stderr		1276638	0					
ANR	1276698	Identifier	stderr		1276638	0					
ANR	1276699	Argument	"""-graceful         (the default) Honor MaxVacateTime and MaxJobRetirementTime.\\n"""		1276638	1					
ANR	1276700	PrimaryExpression	"""-graceful         (the default) Honor MaxVacateTime and MaxJobRetirementTime.\\n"""		1276638	0					
ANR	1276701	ExpressionStatement	"fprintf ( stderr , ""-quick            Honor MaxVacateTime but not MaxJobRetirementTime.\\n"" )"	234:1:5752:5842	1276638	5	True				
ANR	1276702	CallExpression	"fprintf ( stderr , ""-quick            Honor MaxVacateTime but not MaxJobRetirementTime.\\n"" )"		1276638	0					
ANR	1276703	Callee	fprintf		1276638	0					
ANR	1276704	Identifier	fprintf		1276638	0					
ANR	1276705	ArgumentList	stderr		1276638	1					
ANR	1276706	Argument	stderr		1276638	0					
ANR	1276707	Identifier	stderr		1276638	0					
ANR	1276708	Argument	"""-quick            Honor MaxVacateTime but not MaxJobRetirementTime.\\n"""		1276638	1					
ANR	1276709	PrimaryExpression	"""-quick            Honor MaxVacateTime but not MaxJobRetirementTime.\\n"""		1276638	0					
ANR	1276710	ExpressionStatement	"fprintf ( stderr , ""-fast             Honor neither MaxVacateTime nor MaxJobRetirementTime.\\n"" )"	235:1:5845:5939	1276638	6	True				
ANR	1276711	CallExpression	"fprintf ( stderr , ""-fast             Honor neither MaxVacateTime nor MaxJobRetirementTime.\\n"" )"		1276638	0					
ANR	1276712	Callee	fprintf		1276638	0					
ANR	1276713	Identifier	fprintf		1276638	0					
ANR	1276714	ArgumentList	stderr		1276638	1					
ANR	1276715	Argument	stderr		1276638	0					
ANR	1276716	Identifier	stderr		1276638	0					
ANR	1276717	Argument	"""-fast             Honor neither MaxVacateTime nor MaxJobRetirementTime.\\n"""		1276638	1					
ANR	1276718	PrimaryExpression	"""-fast             Honor neither MaxVacateTime nor MaxJobRetirementTime.\\n"""		1276638	0					
ANR	1276719	ExpressionStatement	"fprintf ( stderr , ""-resume-on-completion    When done draining, resume normal operation.\\n"" )"	236:1:5942:6034	1276638	7	True				
ANR	1276720	CallExpression	"fprintf ( stderr , ""-resume-on-completion    When done draining, resume normal operation.\\n"" )"		1276638	0					
ANR	1276721	Callee	fprintf		1276638	0					
ANR	1276722	Identifier	fprintf		1276638	0					
ANR	1276723	ArgumentList	stderr		1276638	1					
ANR	1276724	Argument	stderr		1276638	0					
ANR	1276725	Identifier	stderr		1276638	0					
ANR	1276726	Argument	"""-resume-on-completion    When done draining, resume normal operation.\\n"""		1276638	1					
ANR	1276727	PrimaryExpression	"""-resume-on-completion    When done draining, resume normal operation.\\n"""		1276638	0					
ANR	1276728	ExpressionStatement	"fprintf ( stderr , ""-request-id <id>  Specific request id to cancel (optional).\\n"" )"	237:1:6037:6119	1276638	8	True				
ANR	1276729	CallExpression	"fprintf ( stderr , ""-request-id <id>  Specific request id to cancel (optional).\\n"" )"		1276638	0					
ANR	1276730	Callee	fprintf		1276638	0					
ANR	1276731	Identifier	fprintf		1276638	0					
ANR	1276732	ArgumentList	stderr		1276638	1					
ANR	1276733	Argument	stderr		1276638	0					
ANR	1276734	Identifier	stderr		1276638	0					
ANR	1276735	Argument	"""-request-id <id>  Specific request id to cancel (optional).\\n"""		1276638	1					
ANR	1276736	PrimaryExpression	"""-request-id <id>  Specific request id to cancel (optional).\\n"""		1276638	0					
ANR	1276737	ExpressionStatement	"fprintf ( stderr , ""-check <expr>     Must be true for all slots to be drained or request is aborted.\\n"" )"	238:1:6122:6226	1276638	9	True				
ANR	1276738	CallExpression	"fprintf ( stderr , ""-check <expr>     Must be true for all slots to be drained or request is aborted.\\n"" )"		1276638	0					
ANR	1276739	Callee	fprintf		1276638	0					
ANR	1276740	Identifier	fprintf		1276638	0					
ANR	1276741	ArgumentList	stderr		1276638	1					
ANR	1276742	Argument	stderr		1276638	0					
ANR	1276743	Identifier	stderr		1276638	0					
ANR	1276744	Argument	"""-check <expr>     Must be true for all slots to be drained or request is aborted.\\n"""		1276638	1					
ANR	1276745	PrimaryExpression	"""-check <expr>     Must be true for all slots to be drained or request is aborted.\\n"""		1276638	0					
ANR	1276746	ExpressionStatement	exit ( 1 )	239:1:6229:6238	1276638	10	True				
ANR	1276747	CallExpression	exit ( 1 )		1276638	0					
ANR	1276748	Callee	exit		1276638	0					
ANR	1276749	Identifier	exit		1276638	0					
ANR	1276750	ArgumentList	1		1276638	1					
ANR	1276751	Argument	1		1276638	0					
ANR	1276752	PrimaryExpression	1		1276638	0					
ANR	1276753	ReturnType	void		1276638	1					
ANR	1276754	Identifier	usage		1276638	2					
ANR	1276755	ParameterList	const char * str		1276638	3					
ANR	1276756	Parameter	const char * str	224:7:5381:5395	1276638	0	True				
ANR	1276757	ParameterType	const char *		1276638	0					
ANR	1276758	Identifier	str		1276638	1					
ANR	1276759	CFGEntryNode	ENTRY		1276638		True				
ANR	1276760	CFGExitNode	EXIT		1276638		True				
ANR	1276761	Symbol	str		1276638						
ANR	1276762	Symbol	stderr		1276638						
