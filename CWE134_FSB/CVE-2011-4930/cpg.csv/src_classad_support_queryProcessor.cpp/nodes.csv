command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2588808	File	data/converged/CVE-2011-4930_htcondor/src_classad_support_queryProcessor.cpp								
ANR	2588809	DeclStmt									
ANR	2588810	Decl							int	int	QueryProcessor :: numQueries
ANR	2588811	Function	QueryProcessor :: QueryProcessor	34:0:1052:1128							
ANR	2588812	FunctionDef	QueryProcessor :: QueryProcessor ()		2588811	0					
ANR	2588813	CompoundStatement		35:0:1086:1128	2588811	0					
ANR	2588814	ExpressionStatement	rectangles = NULL	36:1:1089:1106	2588811	0	True				
ANR	2588815	AssignmentExpression	rectangles = NULL		2588811	0		=			
ANR	2588816	Identifier	rectangles		2588811	0					
ANR	2588817	Identifier	NULL		2588811	1					
ANR	2588818	ExpressionStatement	summarize = true	37:1:1109:1126	2588811	1	True				
ANR	2588819	AssignmentExpression	summarize = true		2588811	0		=			
ANR	2588820	Identifier	summarize		2588811	0					
ANR	2588821	Identifier	true		2588811	1					
ANR	2588822	Identifier	QueryProcessor :: QueryProcessor		2588811	1					
ANR	2588823	ParameterList			2588811	2					
ANR	2588824	CFGEntryNode	ENTRY		2588811		True				
ANR	2588825	CFGExitNode	EXIT		2588811		True				
ANR	2588826	Symbol	NULL		2588811						
ANR	2588827	Symbol	rectangles		2588811						
ANR	2588828	Symbol	true		2588811						
ANR	2588829	Symbol	summarize		2588811						
ANR	2588830	Function	QueryProcessor :: ~QueryProcessor	41:0:1132:1187							
ANR	2588831	FunctionDef	QueryProcessor :: ~QueryProcessor ()		2588830	0					
ANR	2588832	CompoundStatement		42:0:1167:1187	2588830	0					
ANR	2588833	ExpressionStatement	ClearIndexes ( )	43:1:1170:1185	2588830	0	True				
ANR	2588834	CallExpression	ClearIndexes ( )		2588830	0					
ANR	2588835	Callee	ClearIndexes		2588830	0					
ANR	2588836	Identifier	ClearIndexes		2588830	0					
ANR	2588837	ArgumentList			2588830	1					
ANR	2588838	Identifier	QueryProcessor :: ~QueryProcessor		2588830	1					
ANR	2588839	ParameterList			2588830	2					
ANR	2588840	CFGEntryNode	ENTRY		2588830		True				
ANR	2588841	CFGExitNode	EXIT		2588830		True				
ANR	2588842	Function	QueryProcessor :: ClearIndexes	47:0:1191:1478							
ANR	2588843	FunctionDef	QueryProcessor :: ClearIndexes ()		2588842	0					
ANR	2588844	CompoundStatement		49:0:1228:1478	2588842	0					
ANR	2588845	IdentifierDeclStatement	Indexes :: iterator itr ;	50:1:1231:1254	2588842	0	True				
ANR	2588846	IdentifierDecl	itr		2588842	0					
ANR	2588847	IdentifierDeclType	Indexes :: iterator		2588842	0					
ANR	2588848	Identifier	itr		2588842	1					
ANR	2588849	ForStatement	for ( itr = imported . begin ( ) ; itr != imported . end ( ) ; itr ++ )		2588842	1					
ANR	2588850	ForInit	itr = imported . begin ( ) ;	52:6:1263:1286	2588842	0	True				
ANR	2588851	AssignmentExpression	itr = imported . begin ( )		2588842	0		=			
ANR	2588852	Identifier	itr		2588842	0					
ANR	2588853	CallExpression	imported . begin ( )		2588842	1					
ANR	2588854	Callee	imported . begin		2588842	0					
ANR	2588855	MemberAccess	imported . begin		2588842	0					
ANR	2588856	Identifier	imported		2588842	0					
ANR	2588857	Identifier	begin		2588842	1					
ANR	2588858	ArgumentList			2588842	1					
ANR	2588859	Condition	itr != imported . end ( )	52:31:1288:1309	2588842	1	True				
ANR	2588860	EqualityExpression	itr != imported . end ( )		2588842	0		!=			
ANR	2588861	Identifier	itr		2588842	0					
ANR	2588862	CallExpression	imported . end ( )		2588842	1					
ANR	2588863	Callee	imported . end		2588842	0					
ANR	2588864	MemberAccess	imported . end		2588842	0					
ANR	2588865	Identifier	imported		2588842	0					
ANR	2588866	Identifier	end		2588842	1					
ANR	2588867	ArgumentList			2588842	1					
ANR	2588868	PostIncDecOperationExpression	itr ++	52:55:1312:1316	2588842	2	True				
ANR	2588869	Identifier	itr		2588842	0					
ANR	2588870	IncDec	++		2588842	1					
ANR	2588871	CompoundStatement		4:63:91:91	2588842	3					
ANR	2588872	Statement	delete	53:2:1324:1329	2588842	0	True				
ANR	2588873	ExpressionStatement	itr -> second	53:9:1331:1342	2588842	1	True				
ANR	2588874	PtrMemberAccess	itr -> second		2588842	0					
ANR	2588875	Identifier	itr		2588842	0					
ANR	2588876	Identifier	second		2588842	1					
ANR	2588877	ExpressionStatement	imported . clear ( )	55:1:1348:1365	2588842	2	True				
ANR	2588878	CallExpression	imported . clear ( )		2588842	0					
ANR	2588879	Callee	imported . clear		2588842	0					
ANR	2588880	MemberAccess	imported . clear		2588842	0					
ANR	2588881	Identifier	imported		2588842	0					
ANR	2588882	Identifier	clear		2588842	1					
ANR	2588883	ArgumentList			2588842	1					
ANR	2588884	ForStatement	for ( itr = exported . begin ( ) ; itr != exported . end ( ) ; itr ++ )		2588842	3					
ANR	2588885	ForInit	itr = exported . begin ( ) ;	57:6:1374:1397	2588842	0	True				
ANR	2588886	AssignmentExpression	itr = exported . begin ( )		2588842	0		=			
ANR	2588887	Identifier	itr		2588842	0					
ANR	2588888	CallExpression	exported . begin ( )		2588842	1					
ANR	2588889	Callee	exported . begin		2588842	0					
ANR	2588890	MemberAccess	exported . begin		2588842	0					
ANR	2588891	Identifier	exported		2588842	0					
ANR	2588892	Identifier	begin		2588842	1					
ANR	2588893	ArgumentList			2588842	1					
ANR	2588894	Condition	itr != exported . end ( )	57:31:1399:1420	2588842	1	True				
ANR	2588895	EqualityExpression	itr != exported . end ( )		2588842	0		!=			
ANR	2588896	Identifier	itr		2588842	0					
ANR	2588897	CallExpression	exported . end ( )		2588842	1					
ANR	2588898	Callee	exported . end		2588842	0					
ANR	2588899	MemberAccess	exported . end		2588842	0					
ANR	2588900	Identifier	exported		2588842	0					
ANR	2588901	Identifier	end		2588842	1					
ANR	2588902	ArgumentList			2588842	1					
ANR	2588903	PostIncDecOperationExpression	itr ++	57:55:1423:1427	2588842	2	True				
ANR	2588904	Identifier	itr		2588842	0					
ANR	2588905	IncDec	++		2588842	1					
ANR	2588906	CompoundStatement		9:63:202:202	2588842	3					
ANR	2588907	Statement	delete	58:2:1435:1440	2588842	0	True				
ANR	2588908	ExpressionStatement	itr -> second	58:9:1442:1453	2588842	1	True				
ANR	2588909	PtrMemberAccess	itr -> second		2588842	0					
ANR	2588910	Identifier	itr		2588842	0					
ANR	2588911	Identifier	second		2588842	1					
ANR	2588912	ExpressionStatement	exported . clear ( )	60:1:1459:1476	2588842	4	True				
ANR	2588913	CallExpression	exported . clear ( )		2588842	0					
ANR	2588914	Callee	exported . clear		2588842	0					
ANR	2588915	MemberAccess	exported . clear		2588842	0					
ANR	2588916	Identifier	exported		2588842	0					
ANR	2588917	Identifier	clear		2588842	1					
ANR	2588918	ArgumentList			2588842	1					
ANR	2588919	ReturnType	void		2588842	1					
ANR	2588920	Identifier	QueryProcessor :: ClearIndexes		2588842	2					
ANR	2588921	ParameterList			2588842	3					
ANR	2588922	CFGEntryNode	ENTRY		2588842		True				
ANR	2588923	CFGExitNode	EXIT		2588842		True				
ANR	2588924	Symbol	exported		2588842						
ANR	2588925	Symbol	exported . end		2588842						
ANR	2588926	Symbol	itr		2588842						
ANR	2588927	Symbol	imported . begin		2588842						
ANR	2588928	Symbol	imported		2588842						
ANR	2588929	Symbol	exported . begin		2588842						
ANR	2588930	Symbol	imported . end		2588842						
ANR	2588931	Function	QueryProcessor :: InitializeIndexes	64:0:1482:3346							
ANR	2588932	FunctionDef	"QueryProcessor :: InitializeIndexes (Rectangles & r , bool useSummaries)"		2588931	0					
ANR	2588933	CompoundStatement		66:0:1557:3346	2588931	0					
ANR	2588934	IdentifierDeclStatement	AllDimensions :: iterator aitr ;	67:1:1560:1589	2588931	0	True				
ANR	2588935	IdentifierDecl	aitr		2588931	0					
ANR	2588936	IdentifierDeclType	AllDimensions :: iterator		2588931	0					
ANR	2588937	Identifier	aitr		2588931	1					
ANR	2588938	IdentifierDeclStatement	ClassAdIndex * index ;	68:1:1592:1614	2588931	1	True				
ANR	2588939	IdentifierDecl	* index		2588931	0					
ANR	2588940	IdentifierDeclType	ClassAdIndex *		2588931	0					
ANR	2588941	Identifier	index		2588931	1					
ANR	2588942	IdentifierDeclStatement	Rectangles * rec = useSummaries ? & summaries : & r ;	69:1:1617:1669	2588931	2	True				
ANR	2588943	IdentifierDecl	* rec = useSummaries ? & summaries : & r		2588931	0					
ANR	2588944	IdentifierDeclType	Rectangles *		2588931	0					
ANR	2588945	Identifier	rec		2588931	1					
ANR	2588946	AssignmentExpression	* rec = useSummaries ? & summaries : & r		2588931	2		=			
ANR	2588947	Identifier	rec		2588931	0					
ANR	2588948	ConditionalExpression	useSummaries ? & summaries : & r		2588931	1					
ANR	2588949	Condition	useSummaries		2588931	0					
ANR	2588950	Identifier	useSummaries		2588931	0					
ANR	2588951	UnaryOperationExpression	& summaries		2588931	1					
ANR	2588952	UnaryOperator	&		2588931	0					
ANR	2588953	Identifier	summaries		2588931	1					
ANR	2588954	UnaryOperationExpression	& r		2588931	2					
ANR	2588955	UnaryOperator	&		2588931	0					
ANR	2588956	Identifier	r		2588931	1					
ANR	2588957	ExpressionStatement	ClearIndexes ( )	71:1:1674:1689	2588931	3	True				
ANR	2588958	CallExpression	ClearIndexes ( )		2588931	0					
ANR	2588959	Callee	ClearIndexes		2588931	0					
ANR	2588960	Identifier	ClearIndexes		2588931	0					
ANR	2588961	ArgumentList			2588931	1					
ANR	2588962	ExpressionStatement	summarize = useSummaries	73:1:1693:1717	2588931	4	True				
ANR	2588963	AssignmentExpression	summarize = useSummaries		2588931	0		=			
ANR	2588964	Identifier	summarize		2588931	0					
ANR	2588965	Identifier	useSummaries		2588931	1					
ANR	2588966	ExpressionStatement	rectangles = & r	74:1:1720:1735	2588931	5	True				
ANR	2588967	AssignmentExpression	rectangles = & r		2588931	0		=			
ANR	2588968	Identifier	rectangles		2588931	0					
ANR	2588969	UnaryOperationExpression	& r		2588931	1					
ANR	2588970	UnaryOperator	&		2588931	0					
ANR	2588971	Identifier	r		2588931	1					
ANR	2588972	IfStatement	if ( useSummaries )		2588931	6					
ANR	2588973	Condition	useSummaries	77:5:1773:1784	2588931	0	True				
ANR	2588974	Identifier	useSummaries		2588931	0					
ANR	2588975	CompoundStatement		12:20:230:230	2588931	1					
ANR	2588976	IfStatement	"if ( ! summaries . Summarize ( r , reps , consts , constRepMap ) )"		2588931	0					
ANR	2588977	Condition	"! summaries . Summarize ( r , reps , consts , constRepMap )"	78:6:1796:1847	2588931	0	True				
ANR	2588978	UnaryOperationExpression	"! summaries . Summarize ( r , reps , consts , constRepMap )"		2588931	0					
ANR	2588979	UnaryOperator	!		2588931	0					
ANR	2588980	CallExpression	"summaries . Summarize ( r , reps , consts , constRepMap )"		2588931	1					
ANR	2588981	Callee	summaries . Summarize		2588931	0					
ANR	2588982	MemberAccess	summaries . Summarize		2588931	0					
ANR	2588983	Identifier	summaries		2588931	0					
ANR	2588984	Identifier	Summarize		2588931	1					
ANR	2588985	ArgumentList	r		2588931	1					
ANR	2588986	Argument	r		2588931	0					
ANR	2588987	Identifier	r		2588931	0					
ANR	2588988	Argument	reps		2588931	1					
ANR	2588989	Identifier	reps		2588931	0					
ANR	2588990	Argument	consts		2588931	2					
ANR	2588991	Identifier	consts		2588931	0					
ANR	2588992	Argument	constRepMap		2588931	3					
ANR	2588993	Identifier	constRepMap		2588931	0					
ANR	2588994	CompoundStatement		13:61:293:293	2588931	1					
ANR	2588995	ExpressionStatement	"printf ( ""Failed to summarize\\n"" )"	79:3:1856:1889	2588931	0	True				
ANR	2588996	CallExpression	"printf ( ""Failed to summarize\\n"" )"		2588931	0					
ANR	2588997	Callee	printf		2588931	0					
ANR	2588998	Identifier	printf		2588931	0					
ANR	2588999	ArgumentList	"""Failed to summarize\\n"""		2588931	1					
ANR	2589000	Argument	"""Failed to summarize\\n"""		2588931	0					
ANR	2589001	PrimaryExpression	"""Failed to summarize\\n"""		2588931	0					
ANR	2589002	ReturnStatement	return ( false ) ;	80:3:1894:1909	2588931	1	True				
ANR	2589003	Identifier	false		2588931	0					
ANR	2589004	ExpressionStatement	summaries . Complete ( true )	82:2:1917:1943	2588931	1	True				
ANR	2589005	CallExpression	summaries . Complete ( true )		2588931	0					
ANR	2589006	Callee	summaries . Complete		2588931	0					
ANR	2589007	MemberAccess	summaries . Complete		2588931	0					
ANR	2589008	Identifier	summaries		2588931	0					
ANR	2589009	Identifier	Complete		2588931	1					
ANR	2589010	ArgumentList	true		2588931	1					
ANR	2589011	Argument	true		2588931	0					
ANR	2589012	Identifier	true		2588931	0					
ANR	2589013	ExpressionStatement	r . Complete ( true )	84:1:1949:1967	2588931	7	True				
ANR	2589014	CallExpression	r . Complete ( true )		2588931	0					
ANR	2589015	Callee	r . Complete		2588931	0					
ANR	2589016	MemberAccess	r . Complete		2588931	0					
ANR	2589017	Identifier	r		2588931	0					
ANR	2589018	Identifier	Complete		2588931	1					
ANR	2589019	ArgumentList	true		2588931	1					
ANR	2589020	Argument	true		2588931	0					
ANR	2589021	Identifier	true		2588931	0					
ANR	2589022	ForStatement	for ( aitr = rec -> exportedBoxes . begin ( ) ; aitr != rec -> exportedBoxes . end ( ) ; aitr ++ )		2588931	8					
ANR	2589023	ForInit	aitr = rec -> exportedBoxes . begin ( ) ;	86:5:1975:2006	2588931	0	True				
ANR	2589024	AssignmentExpression	aitr = rec -> exportedBoxes . begin ( )		2588931	0		=			
ANR	2589025	Identifier	aitr		2588931	0					
ANR	2589026	CallExpression	rec -> exportedBoxes . begin ( )		2588931	1					
ANR	2589027	Callee	rec -> exportedBoxes . begin		2588931	0					
ANR	2589028	MemberAccess	rec -> exportedBoxes . begin		2588931	0					
ANR	2589029	PtrMemberAccess	rec -> exportedBoxes		2588931	0					
ANR	2589030	Identifier	rec		2588931	0					
ANR	2589031	Identifier	exportedBoxes		2588931	1					
ANR	2589032	Identifier	begin		2588931	1					
ANR	2589033	ArgumentList			2588931	1					
ANR	2589034	Condition	aitr != rec -> exportedBoxes . end ( )	86:37:2007:2036	2588931	1	True				
ANR	2589035	EqualityExpression	aitr != rec -> exportedBoxes . end ( )		2588931	0		!=			
ANR	2589036	Identifier	aitr		2588931	0					
ANR	2589037	CallExpression	rec -> exportedBoxes . end ( )		2588931	1					
ANR	2589038	Callee	rec -> exportedBoxes . end		2588931	0					
ANR	2589039	MemberAccess	rec -> exportedBoxes . end		2588931	0					
ANR	2589040	PtrMemberAccess	rec -> exportedBoxes		2588931	0					
ANR	2589041	Identifier	rec		2588931	0					
ANR	2589042	Identifier	exportedBoxes		2588931	1					
ANR	2589043	Identifier	end		2588931	1					
ANR	2589044	ArgumentList			2588931	1					
ANR	2589045	PostIncDecOperationExpression	aitr ++	86:68:2038:2043	2588931	2	True				
ANR	2589046	Identifier	aitr		2588931	0					
ANR	2589047	IncDec	++		2588931	1					
ANR	2589048	CompoundStatement		21:76:488:488	2588931	3					
ANR	2589049	IfStatement	if ( ( aitr -> first ) [ 1 ] != ':' )		2588931	0					
ANR	2589050	Condition	( aitr -> first ) [ 1 ] != ':'	87:6:2054:2076	2588931	0	True				
ANR	2589051	EqualityExpression	( aitr -> first ) [ 1 ] != ':'		2588931	0		!=			
ANR	2589052	ArrayIndexing	( aitr -> first ) [ 1 ]		2588931	0					
ANR	2589053	PtrMemberAccess	aitr -> first		2588931	0					
ANR	2589054	Identifier	aitr		2588931	0					
ANR	2589055	Identifier	first		2588931	1					
ANR	2589056	PrimaryExpression	1		2588931	1					
ANR	2589057	PrimaryExpression	':'		2588931	1					
ANR	2589058	ReturnStatement	return ( false ) ;	87:32:2080:2095	2588931	1	True				
ANR	2589059	Identifier	false		2588931	0					
ANR	2589060	SwitchStatement	switch ( ( aitr -> first ) [ 0 ] )		2588931	1					
ANR	2589061	Condition	( aitr -> first ) [ 0 ]	88:10:2107:2122	2588931	0	True				
ANR	2589062	ArrayIndexing	( aitr -> first ) [ 0 ]		2588931	0					
ANR	2589063	PtrMemberAccess	aitr -> first		2588931	0					
ANR	2589064	Identifier	aitr		2588931	0					
ANR	2589065	Identifier	first		2588931	1					
ANR	2589066	PrimaryExpression	0		2588931	1					
ANR	2589067	CompoundStatement		23:29:568:568	2588931	1					
ANR	2589068	Label	case 'n' :	89:3:2131:2139	2588931	0	True				
ANR	2589069	Label	case 'i' :	90:3:2144:2152	2588931	1	True				
ANR	2589070	Label	case 't' :	91:3:2157:2165	2588931	2	True				
ANR	2589071	ExpressionStatement	index = ClassAdNumericIndex :: MakeNumericIndex ( aitr -> second )	92:4:2171:2232	2588931	3	True				
ANR	2589072	AssignmentExpression	index = ClassAdNumericIndex :: MakeNumericIndex ( aitr -> second )		2588931	0		=			
ANR	2589073	Identifier	index		2588931	0					
ANR	2589074	CallExpression	ClassAdNumericIndex :: MakeNumericIndex ( aitr -> second )		2588931	1					
ANR	2589075	Callee	ClassAdNumericIndex :: MakeNumericIndex		2588931	0					
ANR	2589076	Identifier	ClassAdNumericIndex :: MakeNumericIndex		2588931	0					
ANR	2589077	ArgumentList	aitr -> second		2588931	1					
ANR	2589078	Argument	aitr -> second		2588931	0					
ANR	2589079	PtrMemberAccess	aitr -> second		2588931	0					
ANR	2589080	Identifier	aitr		2588931	0					
ANR	2589081	Identifier	second		2588931	1					
ANR	2589082	BreakStatement	break ;	93:4:2238:2243	2588931	4	True				
ANR	2589083	Label	case 'b' :	95:3:2254:2262	2588931	5	True				
ANR	2589084	Label	case 'u' :	96:3:2267:2275	2588931	6	True				
ANR	2589085	ExpressionStatement	index = ClassAdBooleanIndex :: MakeBooleanIndex ( aitr -> second )	97:4:2281:2342	2588931	7	True				
ANR	2589086	AssignmentExpression	index = ClassAdBooleanIndex :: MakeBooleanIndex ( aitr -> second )		2588931	0		=			
ANR	2589087	Identifier	index		2588931	0					
ANR	2589088	CallExpression	ClassAdBooleanIndex :: MakeBooleanIndex ( aitr -> second )		2588931	1					
ANR	2589089	Callee	ClassAdBooleanIndex :: MakeBooleanIndex		2588931	0					
ANR	2589090	Identifier	ClassAdBooleanIndex :: MakeBooleanIndex		2588931	0					
ANR	2589091	ArgumentList	aitr -> second		2588931	1					
ANR	2589092	Argument	aitr -> second		2588931	0					
ANR	2589093	PtrMemberAccess	aitr -> second		2588931	0					
ANR	2589094	Identifier	aitr		2588931	0					
ANR	2589095	Identifier	second		2588931	1					
ANR	2589096	BreakStatement	break ;	98:4:2348:2353	2588931	8	True				
ANR	2589097	Label	case 's' :	100:3:2359:2367	2588931	9	True				
ANR	2589098	ExpressionStatement	index = ClassAdStringIndex :: MakeStringIndex ( aitr -> second )	101:4:2373:2432	2588931	10	True				
ANR	2589099	AssignmentExpression	index = ClassAdStringIndex :: MakeStringIndex ( aitr -> second )		2588931	0		=			
ANR	2589100	Identifier	index		2588931	0					
ANR	2589101	CallExpression	ClassAdStringIndex :: MakeStringIndex ( aitr -> second )		2588931	1					
ANR	2589102	Callee	ClassAdStringIndex :: MakeStringIndex		2588931	0					
ANR	2589103	Identifier	ClassAdStringIndex :: MakeStringIndex		2588931	0					
ANR	2589104	ArgumentList	aitr -> second		2588931	1					
ANR	2589105	Argument	aitr -> second		2588931	0					
ANR	2589106	PtrMemberAccess	aitr -> second		2588931	0					
ANR	2589107	Identifier	aitr		2588931	0					
ANR	2589108	Identifier	second		2588931	1					
ANR	2589109	BreakStatement	break ;	102:4:2438:2443	2588931	11	True				
ANR	2589110	Label	default :	104:3:2449:2456	2588931	12	True				
ANR	2589111	Identifier	default		2588931	0					
ANR	2589112	ExpressionStatement	"printf ( ""Error:  Unknown type prefix %c\\n"" , ( aitr -> first ) [ 0 ] )"	105:4:2462:2524	2588931	13	True				
ANR	2589113	CallExpression	"printf ( ""Error:  Unknown type prefix %c\\n"" , ( aitr -> first ) [ 0 ] )"		2588931	0					
ANR	2589114	Callee	printf		2588931	0					
ANR	2589115	Identifier	printf		2588931	0					
ANR	2589116	ArgumentList	"""Error:  Unknown type prefix %c\\n"""		2588931	1					
ANR	2589117	Argument	"""Error:  Unknown type prefix %c\\n"""		2588931	0					
ANR	2589118	PrimaryExpression	"""Error:  Unknown type prefix %c\\n"""		2588931	0					
ANR	2589119	Argument	( aitr -> first ) [ 0 ]		2588931	1					
ANR	2589120	ArrayIndexing	( aitr -> first ) [ 0 ]		2588931	0					
ANR	2589121	PtrMemberAccess	aitr -> first		2588931	0					
ANR	2589122	Identifier	aitr		2588931	0					
ANR	2589123	Identifier	first		2588931	1					
ANR	2589124	PrimaryExpression	0		2588931	1					
ANR	2589125	ReturnStatement	return ( false ) ;	106:4:2530:2545	2588931	14	True				
ANR	2589126	Identifier	false		2588931	0					
ANR	2589127	IfStatement	if ( ! index )		2588931	2					
ANR	2589128	Condition	! index	108:6:2557:2562	2588931	0	True				
ANR	2589129	UnaryOperationExpression	! index		2588931	0					
ANR	2589130	UnaryOperator	!		2588931	0					
ANR	2589131	Identifier	index		2588931	1					
ANR	2589132	CompoundStatement		43:15:1008:1008	2588931	1					
ANR	2589133	ExpressionStatement	ClearIndexes ( )	109:3:2571:2586	2588931	0	True				
ANR	2589134	CallExpression	ClearIndexes ( )		2588931	0					
ANR	2589135	Callee	ClearIndexes		2588931	0					
ANR	2589136	Identifier	ClearIndexes		2588931	0					
ANR	2589137	ArgumentList			2588931	1					
ANR	2589138	ReturnStatement	return ( false ) ;	110:3:2591:2606	2588931	1	True				
ANR	2589139	Identifier	false		2588931	0					
ANR	2589140	ExpressionStatement	exported [ aitr -> first ] = index	112:2:2614:2643	2588931	3	True				
ANR	2589141	AssignmentExpression	exported [ aitr -> first ] = index		2588931	0		=			
ANR	2589142	ArrayIndexing	exported [ aitr -> first ]		2588931	0					
ANR	2589143	Identifier	exported		2588931	0					
ANR	2589144	PtrMemberAccess	aitr -> first		2588931	1					
ANR	2589145	Identifier	aitr		2588931	0					
ANR	2589146	Identifier	first		2588931	1					
ANR	2589147	Identifier	index		2588931	1					
ANR	2589148	ForStatement	for ( aitr = rec -> importedBoxes . begin ( ) ; aitr != rec -> importedBoxes . end ( ) ; aitr ++ )		2588931	9					
ANR	2589149	ForInit	aitr = rec -> importedBoxes . begin ( ) ;	116:5:2655:2686	2588931	0	True				
ANR	2589150	AssignmentExpression	aitr = rec -> importedBoxes . begin ( )		2588931	0		=			
ANR	2589151	Identifier	aitr		2588931	0					
ANR	2589152	CallExpression	rec -> importedBoxes . begin ( )		2588931	1					
ANR	2589153	Callee	rec -> importedBoxes . begin		2588931	0					
ANR	2589154	MemberAccess	rec -> importedBoxes . begin		2588931	0					
ANR	2589155	PtrMemberAccess	rec -> importedBoxes		2588931	0					
ANR	2589156	Identifier	rec		2588931	0					
ANR	2589157	Identifier	importedBoxes		2588931	1					
ANR	2589158	Identifier	begin		2588931	1					
ANR	2589159	ArgumentList			2588931	1					
ANR	2589160	Condition	aitr != rec -> importedBoxes . end ( )	116:37:2687:2716	2588931	1	True				
ANR	2589161	EqualityExpression	aitr != rec -> importedBoxes . end ( )		2588931	0		!=			
ANR	2589162	Identifier	aitr		2588931	0					
ANR	2589163	CallExpression	rec -> importedBoxes . end ( )		2588931	1					
ANR	2589164	Callee	rec -> importedBoxes . end		2588931	0					
ANR	2589165	MemberAccess	rec -> importedBoxes . end		2588931	0					
ANR	2589166	PtrMemberAccess	rec -> importedBoxes		2588931	0					
ANR	2589167	Identifier	rec		2588931	0					
ANR	2589168	Identifier	importedBoxes		2588931	1					
ANR	2589169	Identifier	end		2588931	1					
ANR	2589170	ArgumentList			2588931	1					
ANR	2589171	PostIncDecOperationExpression	aitr ++	116:68:2718:2723	2588931	2	True				
ANR	2589172	Identifier	aitr		2588931	0					
ANR	2589173	IncDec	++		2588931	1					
ANR	2589174	CompoundStatement		51:76:1168:1168	2588931	3					
ANR	2589175	IfStatement	if ( ( aitr -> first ) [ 1 ] != ':' )		2588931	0					
ANR	2589176	Condition	( aitr -> first ) [ 1 ] != ':'	117:6:2734:2756	2588931	0	True				
ANR	2589177	EqualityExpression	( aitr -> first ) [ 1 ] != ':'		2588931	0		!=			
ANR	2589178	ArrayIndexing	( aitr -> first ) [ 1 ]		2588931	0					
ANR	2589179	PtrMemberAccess	aitr -> first		2588931	0					
ANR	2589180	Identifier	aitr		2588931	0					
ANR	2589181	Identifier	first		2588931	1					
ANR	2589182	PrimaryExpression	1		2588931	1					
ANR	2589183	PrimaryExpression	':'		2588931	1					
ANR	2589184	ReturnStatement	return ( false ) ;	117:32:2760:2775	2588931	1	True				
ANR	2589185	Identifier	false		2588931	0					
ANR	2589186	SwitchStatement	switch ( ( aitr -> first ) [ 0 ] )		2588931	1					
ANR	2589187	Condition	( aitr -> first ) [ 0 ]	118:10:2787:2802	2588931	0	True				
ANR	2589188	ArrayIndexing	( aitr -> first ) [ 0 ]		2588931	0					
ANR	2589189	PtrMemberAccess	aitr -> first		2588931	0					
ANR	2589190	Identifier	aitr		2588931	0					
ANR	2589191	Identifier	first		2588931	1					
ANR	2589192	PrimaryExpression	0		2588931	1					
ANR	2589193	CompoundStatement		53:29:1248:1248	2588931	1					
ANR	2589194	Label	case 'n' :	119:3:2811:2819	2588931	0	True				
ANR	2589195	Label	case 'i' :	120:3:2824:2832	2588931	1	True				
ANR	2589196	Label	case 't' :	121:3:2837:2845	2588931	2	True				
ANR	2589197	ExpressionStatement	index = ClassAdNumericIndex :: MakeNumericIndex ( aitr -> second )	122:4:2851:2912	2588931	3	True				
ANR	2589198	AssignmentExpression	index = ClassAdNumericIndex :: MakeNumericIndex ( aitr -> second )		2588931	0		=			
ANR	2589199	Identifier	index		2588931	0					
ANR	2589200	CallExpression	ClassAdNumericIndex :: MakeNumericIndex ( aitr -> second )		2588931	1					
ANR	2589201	Callee	ClassAdNumericIndex :: MakeNumericIndex		2588931	0					
ANR	2589202	Identifier	ClassAdNumericIndex :: MakeNumericIndex		2588931	0					
ANR	2589203	ArgumentList	aitr -> second		2588931	1					
ANR	2589204	Argument	aitr -> second		2588931	0					
ANR	2589205	PtrMemberAccess	aitr -> second		2588931	0					
ANR	2589206	Identifier	aitr		2588931	0					
ANR	2589207	Identifier	second		2588931	1					
ANR	2589208	BreakStatement	break ;	123:4:2918:2923	2588931	4	True				
ANR	2589209	Label	case 'b' :	125:3:2934:2942	2588931	5	True				
ANR	2589210	Label	case 'u' :	126:3:2947:2955	2588931	6	True				
ANR	2589211	ExpressionStatement	index = ClassAdBooleanIndex :: MakeBooleanIndex ( aitr -> second )	127:4:2961:3022	2588931	7	True				
ANR	2589212	AssignmentExpression	index = ClassAdBooleanIndex :: MakeBooleanIndex ( aitr -> second )		2588931	0		=			
ANR	2589213	Identifier	index		2588931	0					
ANR	2589214	CallExpression	ClassAdBooleanIndex :: MakeBooleanIndex ( aitr -> second )		2588931	1					
ANR	2589215	Callee	ClassAdBooleanIndex :: MakeBooleanIndex		2588931	0					
ANR	2589216	Identifier	ClassAdBooleanIndex :: MakeBooleanIndex		2588931	0					
ANR	2589217	ArgumentList	aitr -> second		2588931	1					
ANR	2589218	Argument	aitr -> second		2588931	0					
ANR	2589219	PtrMemberAccess	aitr -> second		2588931	0					
ANR	2589220	Identifier	aitr		2588931	0					
ANR	2589221	Identifier	second		2588931	1					
ANR	2589222	BreakStatement	break ;	128:4:3028:3033	2588931	8	True				
ANR	2589223	Label	case 's' :	130:3:3039:3047	2588931	9	True				
ANR	2589224	ExpressionStatement	index = ClassAdStringIndex :: MakeStringIndex ( aitr -> second )	131:4:3053:3112	2588931	10	True				
ANR	2589225	AssignmentExpression	index = ClassAdStringIndex :: MakeStringIndex ( aitr -> second )		2588931	0		=			
ANR	2589226	Identifier	index		2588931	0					
ANR	2589227	CallExpression	ClassAdStringIndex :: MakeStringIndex ( aitr -> second )		2588931	1					
ANR	2589228	Callee	ClassAdStringIndex :: MakeStringIndex		2588931	0					
ANR	2589229	Identifier	ClassAdStringIndex :: MakeStringIndex		2588931	0					
ANR	2589230	ArgumentList	aitr -> second		2588931	1					
ANR	2589231	Argument	aitr -> second		2588931	0					
ANR	2589232	PtrMemberAccess	aitr -> second		2588931	0					
ANR	2589233	Identifier	aitr		2588931	0					
ANR	2589234	Identifier	second		2588931	1					
ANR	2589235	BreakStatement	break ;	132:4:3118:3123	2588931	11	True				
ANR	2589236	Label	default :	134:3:3129:3136	2588931	12	True				
ANR	2589237	Identifier	default		2588931	0					
ANR	2589238	ExpressionStatement	"printf ( ""Error:  Unknown type prefix %c\\n"" , ( aitr -> first ) [ 0 ] )"	135:4:3142:3204	2588931	13	True				
ANR	2589239	CallExpression	"printf ( ""Error:  Unknown type prefix %c\\n"" , ( aitr -> first ) [ 0 ] )"		2588931	0					
ANR	2589240	Callee	printf		2588931	0					
ANR	2589241	Identifier	printf		2588931	0					
ANR	2589242	ArgumentList	"""Error:  Unknown type prefix %c\\n"""		2588931	1					
ANR	2589243	Argument	"""Error:  Unknown type prefix %c\\n"""		2588931	0					
ANR	2589244	PrimaryExpression	"""Error:  Unknown type prefix %c\\n"""		2588931	0					
ANR	2589245	Argument	( aitr -> first ) [ 0 ]		2588931	1					
ANR	2589246	ArrayIndexing	( aitr -> first ) [ 0 ]		2588931	0					
ANR	2589247	PtrMemberAccess	aitr -> first		2588931	0					
ANR	2589248	Identifier	aitr		2588931	0					
ANR	2589249	Identifier	first		2588931	1					
ANR	2589250	PrimaryExpression	0		2588931	1					
ANR	2589251	ReturnStatement	return ( false ) ;	136:4:3210:3225	2588931	14	True				
ANR	2589252	Identifier	false		2588931	0					
ANR	2589253	IfStatement	if ( ! index )		2588931	2					
ANR	2589254	Condition	! index	138:6:3237:3242	2588931	0	True				
ANR	2589255	UnaryOperationExpression	! index		2588931	0					
ANR	2589256	UnaryOperator	!		2588931	0					
ANR	2589257	Identifier	index		2588931	1					
ANR	2589258	CompoundStatement		73:15:1688:1688	2588931	1					
ANR	2589259	ExpressionStatement	ClearIndexes ( )	139:3:3251:3266	2588931	0	True				
ANR	2589260	CallExpression	ClearIndexes ( )		2588931	0					
ANR	2589261	Callee	ClearIndexes		2588931	0					
ANR	2589262	Identifier	ClearIndexes		2588931	0					
ANR	2589263	ArgumentList			2588931	1					
ANR	2589264	ReturnStatement	return ( false ) ;	140:3:3271:3286	2588931	1	True				
ANR	2589265	Identifier	false		2588931	0					
ANR	2589266	ExpressionStatement	imported [ aitr -> first ] = index	142:2:3294:3323	2588931	3	True				
ANR	2589267	AssignmentExpression	imported [ aitr -> first ] = index		2588931	0		=			
ANR	2589268	ArrayIndexing	imported [ aitr -> first ]		2588931	0					
ANR	2589269	Identifier	imported		2588931	0					
ANR	2589270	PtrMemberAccess	aitr -> first		2588931	1					
ANR	2589271	Identifier	aitr		2588931	0					
ANR	2589272	Identifier	first		2588931	1					
ANR	2589273	Identifier	index		2588931	1					
ANR	2589274	ReturnStatement	return ( true ) ;	145:1:3330:3344	2588931	10	True				
ANR	2589275	Identifier	true		2588931	0					
ANR	2589276	ReturnType	bool		2588931	1					
ANR	2589277	Identifier	QueryProcessor :: InitializeIndexes		2588931	2					
ANR	2589278	ParameterList	"Rectangles & r , bool useSummaries"		2588931	3					
ANR	2589279	Parameter	Rectangles & r	65:35:1522:1534	2588931	0	True				
ANR	2589280	ParameterType	Rectangles &		2588931	0					
ANR	2589281	Identifier	r		2588931	1					
ANR	2589282	Parameter	bool useSummaries	65:50:1537:1553	2588931	1	True				
ANR	2589283	ParameterType	bool		2588931	0					
ANR	2589284	Identifier	useSummaries		2588931	1					
ANR	2589285	CFGEntryNode	ENTRY		2588931		True				
ANR	2589286	CFGExitNode	EXIT		2588931		True				
ANR	2589287	Symbol	* aitr		2588931						
ANR	2589288	Symbol	reps		2588931						
ANR	2589289	Symbol	rectangles		2588931						
ANR	2589290	Symbol	* exported		2588931						
ANR	2589291	Symbol	* * aitr		2588931						
ANR	2589292	Symbol	aitr		2588931						
ANR	2589293	Symbol	consts		2588931						
ANR	2589294	Symbol	ClassAdStringIndex :: MakeStringIndex		2588931						
ANR	2589295	Symbol	rec		2588931						
ANR	2589296	Symbol	& summaries		2588931						
ANR	2589297	Symbol	ClassAdNumericIndex :: MakeNumericIndex		2588931						
ANR	2589298	Symbol	aitr -> second		2588931						
ANR	2589299	Symbol	* imported		2588931						
ANR	2589300	Symbol	imported		2588931						
ANR	2589301	Symbol	constRepMap		2588931						
ANR	2589302	Symbol	* aitr -> first		2588931						
ANR	2589303	Symbol	rec -> exportedBoxes . begin		2588931						
ANR	2589304	Symbol	aitr -> first		2588931						
ANR	2589305	Symbol	exported		2588931						
ANR	2589306	Symbol	rec -> importedBoxes . end		2588931						
ANR	2589307	Symbol	rec -> exportedBoxes		2588931						
ANR	2589308	Symbol	false		2588931						
ANR	2589309	Symbol	index		2588931						
ANR	2589310	Symbol	rec -> exportedBoxes . end		2588931						
ANR	2589311	Symbol	useSummaries		2588931						
ANR	2589312	Symbol	r		2588931						
ANR	2589313	Symbol	ClassAdBooleanIndex :: MakeBooleanIndex		2588931						
ANR	2589314	Symbol	& r		2588931						
ANR	2589315	Symbol	summaries . Summarize		2588931						
ANR	2589316	Symbol	true		2588931						
ANR	2589317	Symbol	rec -> importedBoxes . begin		2588931						
ANR	2589318	Symbol	summarize		2588931						
ANR	2589319	Symbol	* rec		2588931						
ANR	2589320	Symbol	rec -> importedBoxes		2588931						
ANR	2589321	Symbol	summaries		2588931						
ANR	2589322	Function	QueryProcessor :: PurgeRectangle	149:0:3350:5392							
ANR	2589323	FunctionDef	QueryProcessor :: PurgeRectangle (int rId)		2589322	0					
ANR	2589324	CompoundStatement		151:0:3398:5392	2589322	0					
ANR	2589325	IdentifierDeclStatement	AllDimensions :: iterator aitr ;	152:1:3401:3430	2589322	0	True				
ANR	2589326	IdentifierDecl	aitr		2589322	0					
ANR	2589327	IdentifierDeclType	AllDimensions :: iterator		2589322	0					
ANR	2589328	Identifier	aitr		2589322	1					
ANR	2589329	IdentifierDeclStatement	OneDimension :: iterator oitr ;	153:1:3433:3461	2589322	1	True				
ANR	2589330	IdentifierDecl	oitr		2589322	0					
ANR	2589331	IdentifierDeclType	OneDimension :: iterator		2589322	0					
ANR	2589332	Identifier	oitr		2589322	1					
ANR	2589333	IdentifierDeclStatement	Indexes :: iterator iitr ;	154:1:3464:3488	2589322	2	True				
ANR	2589334	IdentifierDecl	iitr		2589322	0					
ANR	2589335	IdentifierDeclType	Indexes :: iterator		2589322	0					
ANR	2589336	Identifier	iitr		2589322	1					
ANR	2589337	IdentifierDeclStatement	KeyMap :: iterator kitr ;	155:1:3491:3514	2589322	3	True				
ANR	2589338	IdentifierDecl	kitr		2589322	0					
ANR	2589339	IdentifierDeclType	KeyMap :: iterator		2589322	0					
ANR	2589340	Identifier	kitr		2589322	1					
ANR	2589341	IdentifierDeclStatement	Constituents :: iterator citr ;	156:1:3517:3545	2589322	4	True				
ANR	2589342	IdentifierDecl	citr		2589322	0					
ANR	2589343	IdentifierDeclType	Constituents :: iterator		2589322	0					
ANR	2589344	Identifier	citr		2589322	1					
ANR	2589345	IdentifierDeclStatement	int repId ;	157:1:3548:3563	2589322	5	True				
ANR	2589346	IdentifierDecl	repId		2589322	0					
ANR	2589347	IdentifierDeclType	int		2589322	0					
ANR	2589348	Identifier	repId		2589322	1					
ANR	2589349	IdentifierDeclStatement	Rectangles * rec = summarize ? & summaries : rectangles ;	158:1:3566:3623	2589322	6	True				
ANR	2589350	IdentifierDecl	* rec = summarize ? & summaries : rectangles		2589322	0					
ANR	2589351	IdentifierDeclType	Rectangles *		2589322	0					
ANR	2589352	Identifier	rec		2589322	1					
ANR	2589353	AssignmentExpression	* rec = summarize ? & summaries : rectangles		2589322	2		=			
ANR	2589354	Identifier	rec		2589322	0					
ANR	2589355	ConditionalExpression	summarize ? & summaries : rectangles		2589322	1					
ANR	2589356	Condition	summarize		2589322	0					
ANR	2589357	Identifier	summarize		2589322	0					
ANR	2589358	UnaryOperationExpression	& summaries		2589322	1					
ANR	2589359	UnaryOperator	&		2589322	0					
ANR	2589360	Identifier	summaries		2589322	1					
ANR	2589361	Identifier	rectangles		2589322	2					
ANR	2589362	IfStatement	if ( summarize )		2589322	7					
ANR	2589363	Condition	summarize	160:5:3631:3639	2589322	0	True				
ANR	2589364	Identifier	summarize		2589322	0					
ANR	2589365	CompoundStatement		10:17:244:244	2589322	1					
ANR	2589366	IfStatement	if ( ( kitr = constRepMap . find ( rId ) ) == constRepMap . end ( ) )		2589322	0					
ANR	2589367	Condition	( kitr = constRepMap . find ( rId ) ) == constRepMap . end ( )	162:6:3683:3738	2589322	0	True				
ANR	2589368	EqualityExpression	( kitr = constRepMap . find ( rId ) ) == constRepMap . end ( )		2589322	0		==			
ANR	2589369	AssignmentExpression	kitr = constRepMap . find ( rId )		2589322	0		=			
ANR	2589370	Identifier	kitr		2589322	0					
ANR	2589371	CallExpression	constRepMap . find ( rId )		2589322	1					
ANR	2589372	Callee	constRepMap . find		2589322	0					
ANR	2589373	MemberAccess	constRepMap . find		2589322	0					
ANR	2589374	Identifier	constRepMap		2589322	0					
ANR	2589375	Identifier	find		2589322	1					
ANR	2589376	ArgumentList	rId		2589322	1					
ANR	2589377	Argument	rId		2589322	0					
ANR	2589378	Identifier	rId		2589322	0					
ANR	2589379	CallExpression	constRepMap . end ( )		2589322	1					
ANR	2589380	Callee	constRepMap . end		2589322	0					
ANR	2589381	MemberAccess	constRepMap . end		2589322	0					
ANR	2589382	Identifier	constRepMap		2589322	0					
ANR	2589383	Identifier	end		2589322	1					
ANR	2589384	ArgumentList			2589322	1					
ANR	2589385	CompoundStatement		12:65:343:343	2589322	1					
ANR	2589386	ExpressionStatement	"printf ( ""Error: No entry for constituent!\\n"" )"	164:3:3760:3806	2589322	0	True				
ANR	2589387	CallExpression	"printf ( ""Error: No entry for constituent!\\n"" )"		2589322	0					
ANR	2589388	Callee	printf		2589322	0					
ANR	2589389	Identifier	printf		2589322	0					
ANR	2589390	ArgumentList	"""Error: No entry for constituent!\\n"""		2589322	1					
ANR	2589391	Argument	"""Error: No entry for constituent!\\n"""		2589322	0					
ANR	2589392	PrimaryExpression	"""Error: No entry for constituent!\\n"""		2589322	0					
ANR	2589393	ExpressionStatement	exit ( 1 )	165:3:3811:3820	2589322	1	True				
ANR	2589394	CallExpression	exit ( 1 )		2589322	0					
ANR	2589395	Callee	exit		2589322	0					
ANR	2589396	Identifier	exit		2589322	0					
ANR	2589397	ArgumentList	1		2589322	1					
ANR	2589398	Argument	1		2589322	0					
ANR	2589399	PrimaryExpression	1		2589322	0					
ANR	2589400	ReturnStatement	return ;	166:3:3825:3831	2589322	2	True				
ANR	2589401	ExpressionStatement	repId = kitr -> second	168:2:3840:3860	2589322	1	True				
ANR	2589402	AssignmentExpression	repId = kitr -> second		2589322	0		=			
ANR	2589403	Identifier	repId		2589322	0					
ANR	2589404	PtrMemberAccess	kitr -> second		2589322	1					
ANR	2589405	Identifier	kitr		2589322	0					
ANR	2589406	Identifier	second		2589322	1					
ANR	2589407	IfStatement	if ( ( citr = consts . find ( repId ) ) == consts . end ( ) )		2589322	2					
ANR	2589408	Condition	( citr = consts . find ( repId ) ) == consts . end ( )	170:6:3913:3960	2589322	0	True				
ANR	2589409	EqualityExpression	( citr = consts . find ( repId ) ) == consts . end ( )		2589322	0		==			
ANR	2589410	AssignmentExpression	citr = consts . find ( repId )		2589322	0		=			
ANR	2589411	Identifier	citr		2589322	0					
ANR	2589412	CallExpression	consts . find ( repId )		2589322	1					
ANR	2589413	Callee	consts . find		2589322	0					
ANR	2589414	MemberAccess	consts . find		2589322	0					
ANR	2589415	Identifier	consts		2589322	0					
ANR	2589416	Identifier	find		2589322	1					
ANR	2589417	ArgumentList	repId		2589322	1					
ANR	2589418	Argument	repId		2589322	0					
ANR	2589419	Identifier	repId		2589322	0					
ANR	2589420	CallExpression	consts . end ( )		2589322	1					
ANR	2589421	Callee	consts . end		2589322	0					
ANR	2589422	MemberAccess	consts . end		2589322	0					
ANR	2589423	Identifier	consts		2589322	0					
ANR	2589424	Identifier	end		2589322	1					
ANR	2589425	ArgumentList			2589322	1					
ANR	2589426	CompoundStatement		20:57:565:565	2589322	1					
ANR	2589427	ExpressionStatement	"printf ( ""Error: No representative for constituent!\\n"" )"	171:3:3969:4024	2589322	0	True				
ANR	2589428	CallExpression	"printf ( ""Error: No representative for constituent!\\n"" )"		2589322	0					
ANR	2589429	Callee	printf		2589322	0					
ANR	2589430	Identifier	printf		2589322	0					
ANR	2589431	ArgumentList	"""Error: No representative for constituent!\\n"""		2589322	1					
ANR	2589432	Argument	"""Error: No representative for constituent!\\n"""		2589322	0					
ANR	2589433	PrimaryExpression	"""Error: No representative for constituent!\\n"""		2589322	0					
ANR	2589434	ExpressionStatement	exit ( 1 )	172:3:4029:4038	2589322	1	True				
ANR	2589435	CallExpression	exit ( 1 )		2589322	0					
ANR	2589436	Callee	exit		2589322	0					
ANR	2589437	Identifier	exit		2589322	0					
ANR	2589438	ArgumentList	1		2589322	1					
ANR	2589439	Argument	1		2589322	0					
ANR	2589440	PrimaryExpression	1		2589322	0					
ANR	2589441	ReturnStatement	return ;	173:3:4043:4049	2589322	2	True				
ANR	2589442	ExpressionStatement	citr -> second . erase ( rId )	176:2:4060:4085	2589322	3	True				
ANR	2589443	CallExpression	citr -> second . erase ( rId )		2589322	0					
ANR	2589444	Callee	citr -> second . erase		2589322	0					
ANR	2589445	MemberAccess	citr -> second . erase		2589322	0					
ANR	2589446	PtrMemberAccess	citr -> second		2589322	0					
ANR	2589447	Identifier	citr		2589322	0					
ANR	2589448	Identifier	second		2589322	1					
ANR	2589449	Identifier	erase		2589322	1					
ANR	2589450	ArgumentList	rId		2589322	1					
ANR	2589451	Argument	rId		2589322	0					
ANR	2589452	Identifier	rId		2589322	0					
ANR	2589453	ExpressionStatement	rectangles -> PurgeRectangle ( rId )	178:2:4125:4158	2589322	4	True				
ANR	2589454	CallExpression	rectangles -> PurgeRectangle ( rId )		2589322	0					
ANR	2589455	Callee	rectangles -> PurgeRectangle		2589322	0					
ANR	2589456	PtrMemberAccess	rectangles -> PurgeRectangle		2589322	0					
ANR	2589457	Identifier	rectangles		2589322	0					
ANR	2589458	Identifier	PurgeRectangle		2589322	1					
ANR	2589459	ArgumentList	rId		2589322	1					
ANR	2589460	Argument	rId		2589322	0					
ANR	2589461	Identifier	rId		2589322	0					
ANR	2589462	IfStatement	if ( ! citr -> second . empty ( ) )		2589322	5					
ANR	2589463	Condition	! citr -> second . empty ( )	180:6:4196:4217	2589322	0	True				
ANR	2589464	UnaryOperationExpression	! citr -> second . empty ( )		2589322	0					
ANR	2589465	UnaryOperator	!		2589322	0					
ANR	2589466	CallExpression	citr -> second . empty ( )		2589322	1					
ANR	2589467	Callee	citr -> second . empty		2589322	0					
ANR	2589468	MemberAccess	citr -> second . empty		2589322	0					
ANR	2589469	PtrMemberAccess	citr -> second		2589322	0					
ANR	2589470	Identifier	citr		2589322	0					
ANR	2589471	Identifier	second		2589322	1					
ANR	2589472	Identifier	empty		2589322	1					
ANR	2589473	ArgumentList			2589322	1					
ANR	2589474	CompoundStatement		30:31:822:822	2589322	1					
ANR	2589475	ReturnStatement	return ;	182:3:4238:4244	2589322	0	True				
ANR	2589476	ElseStatement	else		2589322	0					
ANR	2589477	CompoundStatement		34:8:859:859	2589322	0					
ANR	2589478	ExpressionStatement	repId = rId	185:2:4262:4273	2589322	0	True				
ANR	2589479	AssignmentExpression	repId = rId		2589322	0		=			
ANR	2589480	Identifier	repId		2589322	0					
ANR	2589481	Identifier	rId		2589322	1					
ANR	2589482	ForStatement	for ( aitr = rec -> importedBoxes . begin ( ) ; aitr != rec -> importedBoxes . end ( ) ; aitr ++ )		2589322	8					
ANR	2589483	ForInit	aitr = rec -> importedBoxes . begin ( ) ;	192:5:4371:4402	2589322	0	True				
ANR	2589484	AssignmentExpression	aitr = rec -> importedBoxes . begin ( )		2589322	0		=			
ANR	2589485	Identifier	aitr		2589322	0					
ANR	2589486	CallExpression	rec -> importedBoxes . begin ( )		2589322	1					
ANR	2589487	Callee	rec -> importedBoxes . begin		2589322	0					
ANR	2589488	MemberAccess	rec -> importedBoxes . begin		2589322	0					
ANR	2589489	PtrMemberAccess	rec -> importedBoxes		2589322	0					
ANR	2589490	Identifier	rec		2589322	0					
ANR	2589491	Identifier	importedBoxes		2589322	1					
ANR	2589492	Identifier	begin		2589322	1					
ANR	2589493	ArgumentList			2589322	1					
ANR	2589494	Condition	aitr != rec -> importedBoxes . end ( )	192:37:4403:4432	2589322	1	True				
ANR	2589495	EqualityExpression	aitr != rec -> importedBoxes . end ( )		2589322	0		!=			
ANR	2589496	Identifier	aitr		2589322	0					
ANR	2589497	CallExpression	rec -> importedBoxes . end ( )		2589322	1					
ANR	2589498	Callee	rec -> importedBoxes . end		2589322	0					
ANR	2589499	MemberAccess	rec -> importedBoxes . end		2589322	0					
ANR	2589500	PtrMemberAccess	rec -> importedBoxes		2589322	0					
ANR	2589501	Identifier	rec		2589322	0					
ANR	2589502	Identifier	importedBoxes		2589322	1					
ANR	2589503	Identifier	end		2589322	1					
ANR	2589504	ArgumentList			2589322	1					
ANR	2589505	PostIncDecOperationExpression	aitr ++	192:68:4434:4439	2589322	2	True				
ANR	2589506	Identifier	aitr		2589322	0					
ANR	2589507	IncDec	++		2589322	1					
ANR	2589508	CompoundStatement		42:75:1042:1042	2589322	3					
ANR	2589509	IfStatement	if ( ( iitr = imported . find ( aitr -> first ) ) == imported . end ( ) || ( oitr = aitr -> second . find ( repId ) ) == aitr -> second . end ( ) )		2589322	0					
ANR	2589510	Condition	( iitr = imported . find ( aitr -> first ) ) == imported . end ( ) || ( oitr = aitr -> second . find ( repId ) ) == aitr -> second . end ( )	194:6:4513:4629	2589322	0	True				
ANR	2589511	OrExpression	( iitr = imported . find ( aitr -> first ) ) == imported . end ( ) || ( oitr = aitr -> second . find ( repId ) ) == aitr -> second . end ( )		2589322	0		||			
ANR	2589512	EqualityExpression	( iitr = imported . find ( aitr -> first ) ) == imported . end ( )		2589322	0		==			
ANR	2589513	AssignmentExpression	iitr = imported . find ( aitr -> first )		2589322	0		=			
ANR	2589514	Identifier	iitr		2589322	0					
ANR	2589515	CallExpression	imported . find ( aitr -> first )		2589322	1					
ANR	2589516	Callee	imported . find		2589322	0					
ANR	2589517	MemberAccess	imported . find		2589322	0					
ANR	2589518	Identifier	imported		2589322	0					
ANR	2589519	Identifier	find		2589322	1					
ANR	2589520	ArgumentList	aitr -> first		2589322	1					
ANR	2589521	Argument	aitr -> first		2589322	0					
ANR	2589522	PtrMemberAccess	aitr -> first		2589322	0					
ANR	2589523	Identifier	aitr		2589322	0					
ANR	2589524	Identifier	first		2589322	1					
ANR	2589525	CallExpression	imported . end ( )		2589322	1					
ANR	2589526	Callee	imported . end		2589322	0					
ANR	2589527	MemberAccess	imported . end		2589322	0					
ANR	2589528	Identifier	imported		2589322	0					
ANR	2589529	Identifier	end		2589322	1					
ANR	2589530	ArgumentList			2589322	1					
ANR	2589531	EqualityExpression	( oitr = aitr -> second . find ( repId ) ) == aitr -> second . end ( )		2589322	1		==			
ANR	2589532	AssignmentExpression	oitr = aitr -> second . find ( repId )		2589322	0		=			
ANR	2589533	Identifier	oitr		2589322	0					
ANR	2589534	CallExpression	aitr -> second . find ( repId )		2589322	1					
ANR	2589535	Callee	aitr -> second . find		2589322	0					
ANR	2589536	MemberAccess	aitr -> second . find		2589322	0					
ANR	2589537	PtrMemberAccess	aitr -> second		2589322	0					
ANR	2589538	Identifier	aitr		2589322	0					
ANR	2589539	Identifier	second		2589322	1					
ANR	2589540	Identifier	find		2589322	1					
ANR	2589541	ArgumentList	repId		2589322	1					
ANR	2589542	Argument	repId		2589322	0					
ANR	2589543	Identifier	repId		2589322	0					
ANR	2589544	CallExpression	aitr -> second . end ( )		2589322	1					
ANR	2589545	Callee	aitr -> second . end		2589322	0					
ANR	2589546	MemberAccess	aitr -> second . end		2589322	0					
ANR	2589547	PtrMemberAccess	aitr -> second		2589322	0					
ANR	2589548	Identifier	aitr		2589322	0					
ANR	2589549	Identifier	second		2589322	1					
ANR	2589550	Identifier	end		2589322	1					
ANR	2589551	ArgumentList			2589322	1					
ANR	2589552	CompoundStatement		45:62:1234:1234	2589322	1					
ANR	2589553	ContinueStatement	continue ;	196:3:4638:4646	2589322	0	True				
ANR	2589554	IfStatement	"if ( ! iitr -> second -> Delete ( repId , oitr -> second ) )"		2589322	1					
ANR	2589555	Condition	"! iitr -> second -> Delete ( repId , oitr -> second )"	199:6:4686:4729	2589322	0	True				
ANR	2589556	UnaryOperationExpression	"! iitr -> second -> Delete ( repId , oitr -> second )"		2589322	0					
ANR	2589557	UnaryOperator	!		2589322	0					
ANR	2589558	CallExpression	"iitr -> second -> Delete ( repId , oitr -> second )"		2589322	1					
ANR	2589559	Callee	iitr -> second -> Delete		2589322	0					
ANR	2589560	PtrMemberAccess	iitr -> second -> Delete		2589322	0					
ANR	2589561	PtrMemberAccess	iitr -> second		2589322	0					
ANR	2589562	Identifier	iitr		2589322	0					
ANR	2589563	Identifier	second		2589322	1					
ANR	2589564	Identifier	Delete		2589322	1					
ANR	2589565	ArgumentList	repId		2589322	1					
ANR	2589566	Argument	repId		2589322	0					
ANR	2589567	Identifier	repId		2589322	0					
ANR	2589568	Argument	oitr -> second		2589322	1					
ANR	2589569	PtrMemberAccess	oitr -> second		2589322	0					
ANR	2589570	Identifier	oitr		2589322	0					
ANR	2589571	Identifier	second		2589322	1					
ANR	2589572	CompoundStatement		49:53:1334:1334	2589322	1					
ANR	2589573	ExpressionStatement	"printf ( ""Error:  Failed delete from imported index %s\\n"" , iitr -> first . c_str ( ) )"	200:3:4738:4822	2589322	0	True				
ANR	2589574	CallExpression	"printf ( ""Error:  Failed delete from imported index %s\\n"" , iitr -> first . c_str ( ) )"		2589322	0					
ANR	2589575	Callee	printf		2589322	0					
ANR	2589576	Identifier	printf		2589322	0					
ANR	2589577	ArgumentList	"""Error:  Failed delete from imported index %s\\n"""		2589322	1					
ANR	2589578	Argument	"""Error:  Failed delete from imported index %s\\n"""		2589322	0					
ANR	2589579	PrimaryExpression	"""Error:  Failed delete from imported index %s\\n"""		2589322	0					
ANR	2589580	Argument	iitr -> first . c_str ( )		2589322	1					
ANR	2589581	CallExpression	iitr -> first . c_str ( )		2589322	0					
ANR	2589582	Callee	iitr -> first . c_str		2589322	0					
ANR	2589583	MemberAccess	iitr -> first . c_str		2589322	0					
ANR	2589584	PtrMemberAccess	iitr -> first		2589322	0					
ANR	2589585	Identifier	iitr		2589322	0					
ANR	2589586	Identifier	first		2589322	1					
ANR	2589587	Identifier	c_str		2589322	1					
ANR	2589588	ArgumentList			2589322	1					
ANR	2589589	ForStatement	for ( aitr = rec -> exportedBoxes . begin ( ) ; aitr != rec -> exportedBoxes . end ( ) ; aitr ++ )		2589322	9					
ANR	2589590	ForInit	aitr = rec -> exportedBoxes . begin ( ) ;	206:5:4885:4916	2589322	0	True				
ANR	2589591	AssignmentExpression	aitr = rec -> exportedBoxes . begin ( )		2589322	0		=			
ANR	2589592	Identifier	aitr		2589322	0					
ANR	2589593	CallExpression	rec -> exportedBoxes . begin ( )		2589322	1					
ANR	2589594	Callee	rec -> exportedBoxes . begin		2589322	0					
ANR	2589595	MemberAccess	rec -> exportedBoxes . begin		2589322	0					
ANR	2589596	PtrMemberAccess	rec -> exportedBoxes		2589322	0					
ANR	2589597	Identifier	rec		2589322	0					
ANR	2589598	Identifier	exportedBoxes		2589322	1					
ANR	2589599	Identifier	begin		2589322	1					
ANR	2589600	ArgumentList			2589322	1					
ANR	2589601	Condition	aitr != rec -> exportedBoxes . end ( )	206:37:4917:4946	2589322	1	True				
ANR	2589602	EqualityExpression	aitr != rec -> exportedBoxes . end ( )		2589322	0		!=			
ANR	2589603	Identifier	aitr		2589322	0					
ANR	2589604	CallExpression	rec -> exportedBoxes . end ( )		2589322	1					
ANR	2589605	Callee	rec -> exportedBoxes . end		2589322	0					
ANR	2589606	MemberAccess	rec -> exportedBoxes . end		2589322	0					
ANR	2589607	PtrMemberAccess	rec -> exportedBoxes		2589322	0					
ANR	2589608	Identifier	rec		2589322	0					
ANR	2589609	Identifier	exportedBoxes		2589322	1					
ANR	2589610	Identifier	end		2589322	1					
ANR	2589611	ArgumentList			2589322	1					
ANR	2589612	PostIncDecOperationExpression	aitr ++	206:68:4948:4953	2589322	2	True				
ANR	2589613	Identifier	aitr		2589322	0					
ANR	2589614	IncDec	++		2589322	1					
ANR	2589615	CompoundStatement		56:75:1556:1556	2589322	3					
ANR	2589616	IfStatement	if ( ( iitr = exported . find ( aitr -> first ) ) == exported . end ( ) || ( oitr = aitr -> second . find ( repId ) ) == aitr -> second . end ( ) )		2589322	0					
ANR	2589617	Condition	( iitr = exported . find ( aitr -> first ) ) == exported . end ( ) || ( oitr = aitr -> second . find ( repId ) ) == aitr -> second . end ( )	208:6:5027:5143	2589322	0	True				
ANR	2589618	OrExpression	( iitr = exported . find ( aitr -> first ) ) == exported . end ( ) || ( oitr = aitr -> second . find ( repId ) ) == aitr -> second . end ( )		2589322	0		||			
ANR	2589619	EqualityExpression	( iitr = exported . find ( aitr -> first ) ) == exported . end ( )		2589322	0		==			
ANR	2589620	AssignmentExpression	iitr = exported . find ( aitr -> first )		2589322	0		=			
ANR	2589621	Identifier	iitr		2589322	0					
ANR	2589622	CallExpression	exported . find ( aitr -> first )		2589322	1					
ANR	2589623	Callee	exported . find		2589322	0					
ANR	2589624	MemberAccess	exported . find		2589322	0					
ANR	2589625	Identifier	exported		2589322	0					
ANR	2589626	Identifier	find		2589322	1					
ANR	2589627	ArgumentList	aitr -> first		2589322	1					
ANR	2589628	Argument	aitr -> first		2589322	0					
ANR	2589629	PtrMemberAccess	aitr -> first		2589322	0					
ANR	2589630	Identifier	aitr		2589322	0					
ANR	2589631	Identifier	first		2589322	1					
ANR	2589632	CallExpression	exported . end ( )		2589322	1					
ANR	2589633	Callee	exported . end		2589322	0					
ANR	2589634	MemberAccess	exported . end		2589322	0					
ANR	2589635	Identifier	exported		2589322	0					
ANR	2589636	Identifier	end		2589322	1					
ANR	2589637	ArgumentList			2589322	1					
ANR	2589638	EqualityExpression	( oitr = aitr -> second . find ( repId ) ) == aitr -> second . end ( )		2589322	1		==			
ANR	2589639	AssignmentExpression	oitr = aitr -> second . find ( repId )		2589322	0		=			
ANR	2589640	Identifier	oitr		2589322	0					
ANR	2589641	CallExpression	aitr -> second . find ( repId )		2589322	1					
ANR	2589642	Callee	aitr -> second . find		2589322	0					
ANR	2589643	MemberAccess	aitr -> second . find		2589322	0					
ANR	2589644	PtrMemberAccess	aitr -> second		2589322	0					
ANR	2589645	Identifier	aitr		2589322	0					
ANR	2589646	Identifier	second		2589322	1					
ANR	2589647	Identifier	find		2589322	1					
ANR	2589648	ArgumentList	repId		2589322	1					
ANR	2589649	Argument	repId		2589322	0					
ANR	2589650	Identifier	repId		2589322	0					
ANR	2589651	CallExpression	aitr -> second . end ( )		2589322	1					
ANR	2589652	Callee	aitr -> second . end		2589322	0					
ANR	2589653	MemberAccess	aitr -> second . end		2589322	0					
ANR	2589654	PtrMemberAccess	aitr -> second		2589322	0					
ANR	2589655	Identifier	aitr		2589322	0					
ANR	2589656	Identifier	second		2589322	1					
ANR	2589657	Identifier	end		2589322	1					
ANR	2589658	ArgumentList			2589322	1					
ANR	2589659	CompoundStatement		59:62:1748:1748	2589322	1					
ANR	2589660	ContinueStatement	continue ;	210:3:5152:5160	2589322	0	True				
ANR	2589661	IfStatement	"if ( ! iitr -> second -> Delete ( repId , oitr -> second ) )"		2589322	1					
ANR	2589662	Condition	"! iitr -> second -> Delete ( repId , oitr -> second )"	213:6:5200:5243	2589322	0	True				
ANR	2589663	UnaryOperationExpression	"! iitr -> second -> Delete ( repId , oitr -> second )"		2589322	0					
ANR	2589664	UnaryOperator	!		2589322	0					
ANR	2589665	CallExpression	"iitr -> second -> Delete ( repId , oitr -> second )"		2589322	1					
ANR	2589666	Callee	iitr -> second -> Delete		2589322	0					
ANR	2589667	PtrMemberAccess	iitr -> second -> Delete		2589322	0					
ANR	2589668	PtrMemberAccess	iitr -> second		2589322	0					
ANR	2589669	Identifier	iitr		2589322	0					
ANR	2589670	Identifier	second		2589322	1					
ANR	2589671	Identifier	Delete		2589322	1					
ANR	2589672	ArgumentList	repId		2589322	1					
ANR	2589673	Argument	repId		2589322	0					
ANR	2589674	Identifier	repId		2589322	0					
ANR	2589675	Argument	oitr -> second		2589322	1					
ANR	2589676	PtrMemberAccess	oitr -> second		2589322	0					
ANR	2589677	Identifier	oitr		2589322	0					
ANR	2589678	Identifier	second		2589322	1					
ANR	2589679	CompoundStatement		63:53:1848:1848	2589322	1					
ANR	2589680	ExpressionStatement	"printf ( ""Error:  Failed delete from exported index %s\\n"" , iitr -> first . c_str ( ) )"	214:3:5252:5336	2589322	0	True				
ANR	2589681	CallExpression	"printf ( ""Error:  Failed delete from exported index %s\\n"" , iitr -> first . c_str ( ) )"		2589322	0					
ANR	2589682	Callee	printf		2589322	0					
ANR	2589683	Identifier	printf		2589322	0					
ANR	2589684	ArgumentList	"""Error:  Failed delete from exported index %s\\n"""		2589322	1					
ANR	2589685	Argument	"""Error:  Failed delete from exported index %s\\n"""		2589322	0					
ANR	2589686	PrimaryExpression	"""Error:  Failed delete from exported index %s\\n"""		2589322	0					
ANR	2589687	Argument	iitr -> first . c_str ( )		2589322	1					
ANR	2589688	CallExpression	iitr -> first . c_str ( )		2589322	0					
ANR	2589689	Callee	iitr -> first . c_str		2589322	0					
ANR	2589690	MemberAccess	iitr -> first . c_str		2589322	0					
ANR	2589691	PtrMemberAccess	iitr -> first		2589322	0					
ANR	2589692	Identifier	iitr		2589322	0					
ANR	2589693	Identifier	first		2589322	1					
ANR	2589694	Identifier	c_str		2589322	1					
ANR	2589695	ArgumentList			2589322	1					
ANR	2589696	ExpressionStatement	rec -> PurgeRectangle ( repId )	220:1:5362:5390	2589322	10	True				
ANR	2589697	CallExpression	rec -> PurgeRectangle ( repId )		2589322	0					
ANR	2589698	Callee	rec -> PurgeRectangle		2589322	0					
ANR	2589699	PtrMemberAccess	rec -> PurgeRectangle		2589322	0					
ANR	2589700	Identifier	rec		2589322	0					
ANR	2589701	Identifier	PurgeRectangle		2589322	1					
ANR	2589702	ArgumentList	repId		2589322	1					
ANR	2589703	Argument	repId		2589322	0					
ANR	2589704	Identifier	repId		2589322	0					
ANR	2589705	ReturnType	void		2589322	1					
ANR	2589706	Identifier	QueryProcessor :: PurgeRectangle		2589322	2					
ANR	2589707	ParameterList	int rId		2589322	3					
ANR	2589708	Parameter	int rId	150:16:3388:3394	2589322	0	True				
ANR	2589709	ParameterType	int		2589322	0					
ANR	2589710	Identifier	rId		2589322	1					
ANR	2589711	CFGEntryNode	ENTRY		2589322		True				
ANR	2589712	CFGExitNode	EXIT		2589322		True				
ANR	2589713	Symbol	rectangles		2589322						
ANR	2589714	Symbol	aitr -> second . end		2589322						
ANR	2589715	Symbol	* citr		2589322						
ANR	2589716	Symbol	aitr		2589322						
ANR	2589717	Symbol	rec		2589322						
ANR	2589718	Symbol	& summaries		2589322						
ANR	2589719	Symbol	imported . find		2589322						
ANR	2589720	Symbol	constRepMap		2589322						
ANR	2589721	Symbol	rec -> exportedBoxes . begin		2589322						
ANR	2589722	Symbol	aitr -> first		2589322						
ANR	2589723	Symbol	imported . end		2589322						
ANR	2589724	Symbol	citr -> second . empty		2589322						
ANR	2589725	Symbol	* iitr -> second		2589322						
ANR	2589726	Symbol	rec -> importedBoxes . end		2589322						
ANR	2589727	Symbol	exported . end		2589322						
ANR	2589728	Symbol	constRepMap . find		2589322						
ANR	2589729	Symbol	rec -> exportedBoxes		2589322						
ANR	2589730	Symbol	rec -> exportedBoxes . end		2589322						
ANR	2589731	Symbol	iitr -> first . c_str		2589322						
ANR	2589732	Symbol	rId		2589322						
ANR	2589733	Symbol	* oitr		2589322						
ANR	2589734	Symbol	aitr -> second . find		2589322						
ANR	2589735	Symbol	iitr		2589322						
ANR	2589736	Symbol	* kitr		2589322						
ANR	2589737	Symbol	kitr -> second		2589322						
ANR	2589738	Symbol	* aitr		2589322						
ANR	2589739	Symbol	constRepMap . end		2589322						
ANR	2589740	Symbol	oitr -> second		2589322						
ANR	2589741	Symbol	citr		2589322						
ANR	2589742	Symbol	* iitr		2589322						
ANR	2589743	Symbol	consts . find		2589322						
ANR	2589744	Symbol	iitr -> second		2589322						
ANR	2589745	Symbol	consts		2589322						
ANR	2589746	Symbol	* * iitr		2589322						
ANR	2589747	Symbol	aitr -> second		2589322						
ANR	2589748	Symbol	imported		2589322						
ANR	2589749	Symbol	citr -> second		2589322						
ANR	2589750	Symbol	exported		2589322						
ANR	2589751	Symbol	iitr -> second -> Delete		2589322						
ANR	2589752	Symbol	consts . end		2589322						
ANR	2589753	Symbol	oitr		2589322						
ANR	2589754	Symbol	kitr		2589322						
ANR	2589755	Symbol	repId		2589322						
ANR	2589756	Symbol	exported . find		2589322						
ANR	2589757	Symbol	rec -> importedBoxes . begin		2589322						
ANR	2589758	Symbol	summarize		2589322						
ANR	2589759	Symbol	* rec		2589322						
ANR	2589760	Symbol	rec -> importedBoxes		2589322						
ANR	2589761	Symbol	iitr -> first		2589322						
ANR	2589762	Function	QueryProcessor :: Display	224:0:5396:5756							
ANR	2589763	FunctionDef	QueryProcessor :: Display (FILE * fp)		2589762	0					
ANR	2589764	CompoundStatement		226:0:5438:5756	2589762	0					
ANR	2589765	IdentifierDeclStatement	Indexes :: iterator itr ;	227:1:5441:5464	2589762	0	True				
ANR	2589766	IdentifierDecl	itr		2589762	0					
ANR	2589767	IdentifierDeclType	Indexes :: iterator		2589762	0					
ANR	2589768	Identifier	itr		2589762	1					
ANR	2589769	ExpressionStatement	"fprintf ( fp , ""Exported: "" )"	229:1:5468:5495	2589762	1	True				
ANR	2589770	CallExpression	"fprintf ( fp , ""Exported: "" )"		2589762	0					
ANR	2589771	Callee	fprintf		2589762	0					
ANR	2589772	Identifier	fprintf		2589762	0					
ANR	2589773	ArgumentList	fp		2589762	1					
ANR	2589774	Argument	fp		2589762	0					
ANR	2589775	Identifier	fp		2589762	0					
ANR	2589776	Argument	"""Exported: """		2589762	1					
ANR	2589777	PrimaryExpression	"""Exported: """		2589762	0					
ANR	2589778	ForStatement	for ( itr = exported . begin ( ) ; itr != exported . end ( ) ; itr ++ )		2589762	2					
ANR	2589779	ForInit	itr = exported . begin ( ) ;	230:6:5503:5526	2589762	0	True				
ANR	2589780	AssignmentExpression	itr = exported . begin ( )		2589762	0		=			
ANR	2589781	Identifier	itr		2589762	0					
ANR	2589782	CallExpression	exported . begin ( )		2589762	1					
ANR	2589783	Callee	exported . begin		2589762	0					
ANR	2589784	MemberAccess	exported . begin		2589762	0					
ANR	2589785	Identifier	exported		2589762	0					
ANR	2589786	Identifier	begin		2589762	1					
ANR	2589787	ArgumentList			2589762	1					
ANR	2589788	Condition	itr != exported . end ( )	230:31:5528:5549	2589762	1	True				
ANR	2589789	EqualityExpression	itr != exported . end ( )		2589762	0		!=			
ANR	2589790	Identifier	itr		2589762	0					
ANR	2589791	CallExpression	exported . end ( )		2589762	1					
ANR	2589792	Callee	exported . end		2589762	0					
ANR	2589793	MemberAccess	exported . end		2589762	0					
ANR	2589794	Identifier	exported		2589762	0					
ANR	2589795	Identifier	end		2589762	1					
ANR	2589796	ArgumentList			2589762	1					
ANR	2589797	PostIncDecOperationExpression	itr ++	230:55:5552:5556	2589762	2	True				
ANR	2589798	Identifier	itr		2589762	0					
ANR	2589799	IncDec	++		2589762	1					
ANR	2589800	CompoundStatement		5:63:121:121	2589762	3					
ANR	2589801	ExpressionStatement	"fprintf ( fp , ""%s "" , itr -> first . c_str ( ) )"	231:2:5564:5605	2589762	0	True				
ANR	2589802	CallExpression	"fprintf ( fp , ""%s "" , itr -> first . c_str ( ) )"		2589762	0					
ANR	2589803	Callee	fprintf		2589762	0					
ANR	2589804	Identifier	fprintf		2589762	0					
ANR	2589805	ArgumentList	fp		2589762	1					
ANR	2589806	Argument	fp		2589762	0					
ANR	2589807	Identifier	fp		2589762	0					
ANR	2589808	Argument	"""%s """		2589762	1					
ANR	2589809	PrimaryExpression	"""%s """		2589762	0					
ANR	2589810	Argument	itr -> first . c_str ( )		2589762	2					
ANR	2589811	CallExpression	itr -> first . c_str ( )		2589762	0					
ANR	2589812	Callee	itr -> first . c_str		2589762	0					
ANR	2589813	MemberAccess	itr -> first . c_str		2589762	0					
ANR	2589814	PtrMemberAccess	itr -> first		2589762	0					
ANR	2589815	Identifier	itr		2589762	0					
ANR	2589816	Identifier	first		2589762	1					
ANR	2589817	Identifier	c_str		2589762	1					
ANR	2589818	ArgumentList			2589762	1					
ANR	2589819	ExpressionStatement	"fprintf ( fp , ""\\nImported:  "" )"	233:1:5611:5641	2589762	3	True				
ANR	2589820	CallExpression	"fprintf ( fp , ""\\nImported:  "" )"		2589762	0					
ANR	2589821	Callee	fprintf		2589762	0					
ANR	2589822	Identifier	fprintf		2589762	0					
ANR	2589823	ArgumentList	fp		2589762	1					
ANR	2589824	Argument	fp		2589762	0					
ANR	2589825	Identifier	fp		2589762	0					
ANR	2589826	Argument	"""\\nImported:  """		2589762	1					
ANR	2589827	PrimaryExpression	"""\\nImported:  """		2589762	0					
ANR	2589828	ForStatement	for ( itr = imported . begin ( ) ; itr != imported . end ( ) ; itr ++ )		2589762	4					
ANR	2589829	ForInit	itr = imported . begin ( ) ;	234:6:5649:5672	2589762	0	True				
ANR	2589830	AssignmentExpression	itr = imported . begin ( )		2589762	0		=			
ANR	2589831	Identifier	itr		2589762	0					
ANR	2589832	CallExpression	imported . begin ( )		2589762	1					
ANR	2589833	Callee	imported . begin		2589762	0					
ANR	2589834	MemberAccess	imported . begin		2589762	0					
ANR	2589835	Identifier	imported		2589762	0					
ANR	2589836	Identifier	begin		2589762	1					
ANR	2589837	ArgumentList			2589762	1					
ANR	2589838	Condition	itr != imported . end ( )	234:31:5674:5695	2589762	1	True				
ANR	2589839	EqualityExpression	itr != imported . end ( )		2589762	0		!=			
ANR	2589840	Identifier	itr		2589762	0					
ANR	2589841	CallExpression	imported . end ( )		2589762	1					
ANR	2589842	Callee	imported . end		2589762	0					
ANR	2589843	MemberAccess	imported . end		2589762	0					
ANR	2589844	Identifier	imported		2589762	0					
ANR	2589845	Identifier	end		2589762	1					
ANR	2589846	ArgumentList			2589762	1					
ANR	2589847	PostIncDecOperationExpression	itr ++	234:55:5698:5702	2589762	2	True				
ANR	2589848	Identifier	itr		2589762	0					
ANR	2589849	IncDec	++		2589762	1					
ANR	2589850	CompoundStatement		9:63:267:267	2589762	3					
ANR	2589851	ExpressionStatement	"fprintf ( fp , ""%s "" , itr -> first . c_str ( ) )"	235:2:5710:5751	2589762	0	True				
ANR	2589852	CallExpression	"fprintf ( fp , ""%s "" , itr -> first . c_str ( ) )"		2589762	0					
ANR	2589853	Callee	fprintf		2589762	0					
ANR	2589854	Identifier	fprintf		2589762	0					
ANR	2589855	ArgumentList	fp		2589762	1					
ANR	2589856	Argument	fp		2589762	0					
ANR	2589857	Identifier	fp		2589762	0					
ANR	2589858	Argument	"""%s """		2589762	1					
ANR	2589859	PrimaryExpression	"""%s """		2589762	0					
ANR	2589860	Argument	itr -> first . c_str ( )		2589762	2					
ANR	2589861	CallExpression	itr -> first . c_str ( )		2589762	0					
ANR	2589862	Callee	itr -> first . c_str		2589762	0					
ANR	2589863	MemberAccess	itr -> first . c_str		2589762	0					
ANR	2589864	PtrMemberAccess	itr -> first		2589762	0					
ANR	2589865	Identifier	itr		2589762	0					
ANR	2589866	Identifier	first		2589762	1					
ANR	2589867	Identifier	c_str		2589762	1					
ANR	2589868	ArgumentList			2589762	1					
ANR	2589869	ReturnType	void		2589762	1					
ANR	2589870	Identifier	QueryProcessor :: Display		2589762	2					
ANR	2589871	ParameterList	FILE * fp		2589762	3					
ANR	2589872	Parameter	FILE * fp	225:9:5427:5434	2589762	0	True				
ANR	2589873	ParameterType	FILE *		2589762	0					
ANR	2589874	Identifier	fp		2589762	1					
ANR	2589875	CFGEntryNode	ENTRY		2589762		True				
ANR	2589876	CFGExitNode	EXIT		2589762		True				
ANR	2589877	Symbol	exported		2589762						
ANR	2589878	Symbol	exported . end		2589762						
ANR	2589879	Symbol	itr		2589762						
ANR	2589880	Symbol	imported . begin		2589762						
ANR	2589881	Symbol	imported		2589762						
ANR	2589882	Symbol	exported . begin		2589762						
ANR	2589883	Symbol	fp		2589762						
ANR	2589884	Symbol	itr -> first		2589762						
ANR	2589885	Symbol	itr -> first . c_str		2589762						
ANR	2589886	Symbol	* itr		2589762						
ANR	2589887	Symbol	imported . end		2589762						
ANR	2589888	Function	QueryProcessor :: DumpQState	240:0:5760:6113							
ANR	2589889	FunctionDef	QueryProcessor :: DumpQState (QueryOutcome & qo)		2589888	0					
ANR	2589890	CompoundStatement		242:0:5813:6113	2589888	0					
ANR	2589891	IdentifierDeclStatement	QueryOutcome :: iterator qitr ;	243:1:5816:5843	2589888	0	True				
ANR	2589892	IdentifierDecl	qitr		2589888	0					
ANR	2589893	IdentifierDeclType	QueryOutcome :: iterator		2589888	0					
ANR	2589894	Identifier	qitr		2589888	1					
ANR	2589895	IdentifierDeclStatement	KeySet :: iterator kitr ;	244:1:5846:5868	2589888	1	True				
ANR	2589896	IdentifierDecl	kitr		2589888	0					
ANR	2589897	IdentifierDeclType	KeySet :: iterator		2589888	0					
ANR	2589898	Identifier	kitr		2589888	1					
ANR	2589899	IdentifierDeclStatement	int elt ;	245:1:5871:5883	2589888	2	True				
ANR	2589900	IdentifierDecl	elt		2589888	0					
ANR	2589901	IdentifierDeclType	int		2589888	0					
ANR	2589902	Identifier	elt		2589888	1					
ANR	2589903	ExpressionStatement	"printf ( ""\\tResult:\\n"" )"	247:1:5887:5910	2589888	3	True				
ANR	2589904	CallExpression	"printf ( ""\\tResult:\\n"" )"		2589888	0					
ANR	2589905	Callee	printf		2589888	0					
ANR	2589906	Identifier	printf		2589888	0					
ANR	2589907	ArgumentList	"""\\tResult:\\n"""		2589888	1					
ANR	2589908	Argument	"""\\tResult:\\n"""		2589888	0					
ANR	2589909	PrimaryExpression	"""\\tResult:\\n"""		2589888	0					
ANR	2589910	ForStatement	for ( qitr = qo . begin ( ) ; qitr != qo . end ( ) ; qitr ++ )		2589888	4					
ANR	2589911	ForInit	qitr = qo . begin ( ) ;	248:6:5918:5934	2589888	0	True				
ANR	2589912	AssignmentExpression	qitr = qo . begin ( )		2589888	0		=			
ANR	2589913	Identifier	qitr		2589888	0					
ANR	2589914	CallExpression	qo . begin ( )		2589888	1					
ANR	2589915	Callee	qo . begin		2589888	0					
ANR	2589916	MemberAccess	qo . begin		2589888	0					
ANR	2589917	Identifier	qo		2589888	0					
ANR	2589918	Identifier	begin		2589888	1					
ANR	2589919	ArgumentList			2589888	1					
ANR	2589920	Condition	qitr != qo . end ( )	248:24:5936:5950	2589888	1	True				
ANR	2589921	EqualityExpression	qitr != qo . end ( )		2589888	0		!=			
ANR	2589922	Identifier	qitr		2589888	0					
ANR	2589923	CallExpression	qo . end ( )		2589888	1					
ANR	2589924	Callee	qo . end		2589888	0					
ANR	2589925	MemberAccess	qo . end		2589888	0					
ANR	2589926	Identifier	qo		2589888	0					
ANR	2589927	Identifier	end		2589888	1					
ANR	2589928	ArgumentList			2589888	1					
ANR	2589929	PostIncDecOperationExpression	qitr ++	248:41:5953:5958	2589888	2	True				
ANR	2589930	Identifier	qitr		2589888	0					
ANR	2589931	IncDec	++		2589888	1					
ANR	2589932	CompoundStatement		7:50:148:148	2589888	3					
ANR	2589933	ExpressionStatement	"printf ( ""\\t  %d: "" , qitr -> first )"	249:2:5966:6000	2589888	0	True				
ANR	2589934	CallExpression	"printf ( ""\\t  %d: "" , qitr -> first )"		2589888	0					
ANR	2589935	Callee	printf		2589888	0					
ANR	2589936	Identifier	printf		2589888	0					
ANR	2589937	ArgumentList	"""\\t  %d: """		2589888	1					
ANR	2589938	Argument	"""\\t  %d: """		2589888	0					
ANR	2589939	PrimaryExpression	"""\\t  %d: """		2589888	0					
ANR	2589940	Argument	qitr -> first		2589888	1					
ANR	2589941	PtrMemberAccess	qitr -> first		2589888	0					
ANR	2589942	Identifier	qitr		2589888	0					
ANR	2589943	Identifier	first		2589888	1					
ANR	2589944	ExpressionStatement	kitr . Initialize ( qitr -> second )	250:2:6004:6033	2589888	1	True				
ANR	2589945	CallExpression	kitr . Initialize ( qitr -> second )		2589888	0					
ANR	2589946	Callee	kitr . Initialize		2589888	0					
ANR	2589947	MemberAccess	kitr . Initialize		2589888	0					
ANR	2589948	Identifier	kitr		2589888	0					
ANR	2589949	Identifier	Initialize		2589888	1					
ANR	2589950	ArgumentList	qitr -> second		2589888	1					
ANR	2589951	Argument	qitr -> second		2589888	0					
ANR	2589952	PtrMemberAccess	qitr -> second		2589888	0					
ANR	2589953	Identifier	qitr		2589888	0					
ANR	2589954	Identifier	second		2589888	1					
ANR	2589955	WhileStatement	while ( kitr . Next ( elt ) )		2589888	2					
ANR	2589956	Condition	kitr . Next ( elt )	251:9:6044:6057	2589888	0	True				
ANR	2589957	CallExpression	kitr . Next ( elt )		2589888	0					
ANR	2589958	Callee	kitr . Next		2589888	0					
ANR	2589959	MemberAccess	kitr . Next		2589888	0					
ANR	2589960	Identifier	kitr		2589888	0					
ANR	2589961	Identifier	Next		2589888	1					
ANR	2589962	ArgumentList	elt		2589888	1					
ANR	2589963	Argument	elt		2589888	0					
ANR	2589964	Identifier	elt		2589888	0					
ANR	2589965	CompoundStatement		10:26:247:247	2589888	1					
ANR	2589966	ExpressionStatement	"printf ( ""%d "" , elt )"	252:3:6066:6086	2589888	0	True				
ANR	2589967	CallExpression	"printf ( ""%d "" , elt )"		2589888	0					
ANR	2589968	Callee	printf		2589888	0					
ANR	2589969	Identifier	printf		2589888	0					
ANR	2589970	ArgumentList	"""%d """		2589888	1					
ANR	2589971	Argument	"""%d """		2589888	0					
ANR	2589972	PrimaryExpression	"""%d """		2589888	0					
ANR	2589973	Argument	elt		2589888	1					
ANR	2589974	Identifier	elt		2589888	0					
ANR	2589975	ExpressionStatement	"printf ( ""\\n"" )"	254:2:6094:6108	2589888	3	True				
ANR	2589976	CallExpression	"printf ( ""\\n"" )"		2589888	0					
ANR	2589977	Callee	printf		2589888	0					
ANR	2589978	Identifier	printf		2589888	0					
ANR	2589979	ArgumentList	"""\\n"""		2589888	1					
ANR	2589980	Argument	"""\\n"""		2589888	0					
ANR	2589981	PrimaryExpression	"""\\n"""		2589888	0					
ANR	2589982	ReturnType	void		2589888	1					
ANR	2589983	Identifier	QueryProcessor :: DumpQState		2589888	2					
ANR	2589984	ParameterList	QueryOutcome & qo		2589888	3					
ANR	2589985	Parameter	QueryOutcome & qo	241:12:5794:5809	2589888	0	True				
ANR	2589986	ParameterType	QueryOutcome &		2589888	0					
ANR	2589987	Identifier	qo		2589888	1					
ANR	2589988	CFGEntryNode	ENTRY		2589888		True				
ANR	2589989	CFGExitNode	EXIT		2589888		True				
ANR	2589990	Symbol	qitr		2589888						
ANR	2589991	Symbol	qitr -> second		2589888						
ANR	2589992	Symbol	kitr . Next		2589888						
ANR	2589993	Symbol	elt		2589888						
ANR	2589994	Symbol	qo . end		2589888						
ANR	2589995	Symbol	qitr -> first		2589888						
ANR	2589996	Symbol	qo		2589888						
ANR	2589997	Symbol	kitr		2589888						
ANR	2589998	Symbol	qo . begin		2589888						
ANR	2589999	Symbol	* qitr		2589888						
ANR	2590000	Function	QueryProcessor :: DoQuery	259:0:6117:9358							
ANR	2590001	FunctionDef	"QueryProcessor :: DoQuery (Rectangles & window , KeySet & result)"		2590000	0					
ANR	2590002	CompoundStatement		261:0:6185:9358	2590000	0					
ANR	2590003	IdentifierDeclStatement	AllDimensions :: iterator aitr ;	262:1:6188:6217	2590000	0	True				
ANR	2590004	IdentifierDecl	aitr		2590000	0					
ANR	2590005	IdentifierDeclType	AllDimensions :: iterator		2590000	0					
ANR	2590006	Identifier	aitr		2590000	1					
ANR	2590007	IdentifierDeclStatement	OneDimension :: iterator oitr ;	263:1:6220:6248	2590000	1	True				
ANR	2590008	IdentifierDecl	oitr		2590000	0					
ANR	2590009	IdentifierDeclType	OneDimension :: iterator		2590000	0					
ANR	2590010	Identifier	oitr		2590000	1					
ANR	2590011	IdentifierDeclStatement	Indexes :: iterator iitr ;	264:1:6251:6275	2590000	2	True				
ANR	2590012	IdentifierDecl	iitr		2590000	0					
ANR	2590013	IdentifierDeclType	Indexes :: iterator		2590000	0					
ANR	2590014	Identifier	iitr		2590000	1					
ANR	2590015	IdentifierDeclStatement	KeySet deviantExportedSet ;	265:1:6278:6308	2590000	3	True				
ANR	2590016	IdentifierDecl	deviantExportedSet		2590000	0					
ANR	2590017	IdentifierDeclType	KeySet		2590000	0					
ANR	2590018	Identifier	deviantExportedSet		2590000	1					
ANR	2590019	IdentifierDeclStatement	KeySet tmpResult ;	266:1:6311:6332	2590000	4	True				
ANR	2590020	IdentifierDecl	tmpResult		2590000	0					
ANR	2590021	IdentifierDeclType	KeySet		2590000	0					
ANR	2590022	Identifier	tmpResult		2590000	1					
ANR	2590023	IdentifierDeclStatement	QueryOutcome qo ;	267:1:6335:6353	2590000	5	True				
ANR	2590024	IdentifierDecl	qo		2590000	0					
ANR	2590025	IdentifierDeclType	QueryOutcome		2590000	0					
ANR	2590026	Identifier	qo		2590000	1					
ANR	2590027	IdentifierDeclStatement	string demangled ;	268:1:6356:6377	2590000	6	True				
ANR	2590028	IdentifierDecl	demangled		2590000	0					
ANR	2590029	IdentifierDeclType	string		2590000	0					
ANR	2590030	Identifier	demangled		2590000	1					
ANR	2590031	IdentifierDeclStatement	"DimRectangleMap :: iterator ditr , daxitr ;"	269:1:6380:6418	2590000	7	True				
ANR	2590032	IdentifierDecl	ditr		2590000	0					
ANR	2590033	IdentifierDeclType	DimRectangleMap :: iterator		2590000	0					
ANR	2590034	Identifier	ditr		2590000	1					
ANR	2590035	IdentifierDecl	daxitr		2590000	1					
ANR	2590036	IdentifierDeclType	DimRectangleMap :: iterator		2590000	0					
ANR	2590037	Identifier	daxitr		2590000	1					
ANR	2590038	IdentifierDeclStatement	KeySet :: iterator ksitr ;	270:1:6421:6445	2590000	8	True				
ANR	2590039	IdentifierDecl	ksitr		2590000	0					
ANR	2590040	IdentifierDeclType	KeySet :: iterator		2590000	0					
ANR	2590041	Identifier	ksitr		2590000	1					
ANR	2590042	IdentifierDeclStatement	int tmp ;	271:1:6448:6461	2590000	9	True				
ANR	2590043	IdentifierDecl	tmp		2590000	0					
ANR	2590044	IdentifierDeclType	int		2590000	0					
ANR	2590045	Identifier	tmp		2590000	1					
ANR	2590046	IdentifierDeclStatement	Rectangles * rec = summarize ? & summaries : rectangles ;	272:1:6464:6521	2590000	10	True				
ANR	2590047	IdentifierDecl	* rec = summarize ? & summaries : rectangles		2590000	0					
ANR	2590048	IdentifierDeclType	Rectangles *		2590000	0					
ANR	2590049	Identifier	rec		2590000	1					
ANR	2590050	AssignmentExpression	* rec = summarize ? & summaries : rectangles		2590000	2		=			
ANR	2590051	Identifier	rec		2590000	0					
ANR	2590052	ConditionalExpression	summarize ? & summaries : rectangles		2590000	1					
ANR	2590053	Condition	summarize		2590000	0					
ANR	2590054	Identifier	summarize		2590000	0					
ANR	2590055	UnaryOperationExpression	& summaries		2590000	1					
ANR	2590056	UnaryOperator	&		2590000	0					
ANR	2590057	Identifier	summaries		2590000	1					
ANR	2590058	Identifier	rectangles		2590000	2					
ANR	2590059	ExpressionStatement	numQueries ++	274:1:6525:6537	2590000	11	True				
ANR	2590060	PostIncDecOperationExpression	numQueries ++		2590000	0					
ANR	2590061	Identifier	numQueries		2590000	0					
ANR	2590062	IncDec	++		2590000	1					
ANR	2590063	ForStatement	for ( int i = 0 ; i <= window . rId ; i ++ )		2590000	12					
ANR	2590064	ForInit	int i = 0 ;	278:6:6602:6611	2590000	0	True				
ANR	2590065	IdentifierDeclStatement	int i = 0 ;		2590000	0					
ANR	2590066	IdentifierDecl	i = 0		2590000	0					
ANR	2590067	IdentifierDeclType	int		2590000	0					
ANR	2590068	Identifier	i		2590000	1					
ANR	2590069	AssignmentExpression	i = 0		2590000	2		=			
ANR	2590070	Identifier	i		2590000	0					
ANR	2590071	PrimaryExpression	0		2590000	1					
ANR	2590072	Condition	i <= window . rId	278:17:6613:6627	2590000	1	True				
ANR	2590073	RelationalExpression	i <= window . rId		2590000	0		<=			
ANR	2590074	Identifier	i		2590000	0					
ANR	2590075	MemberAccess	window . rId		2590000	1					
ANR	2590076	Identifier	window		2590000	0					
ANR	2590077	Identifier	rId		2590000	1					
ANR	2590078	PostIncDecOperationExpression	i ++	278:35:6631:6633	2590000	2	True				
ANR	2590079	Identifier	i		2590000	0					
ANR	2590080	IncDec	++		2590000	1					
ANR	2590081	CompoundStatement		18:41:451:451	2590000	3					
ANR	2590082	ExpressionStatement	qo [ i ] . MakeUniversal ( )	279:2:6641:6663	2590000	0	True				
ANR	2590083	CallExpression	qo [ i ] . MakeUniversal ( )		2590000	0					
ANR	2590084	Callee	qo [ i ] . MakeUniversal		2590000	0					
ANR	2590085	MemberAccess	qo [ i ] . MakeUniversal		2590000	0					
ANR	2590086	ArrayIndexing	qo [ i ]		2590000	0					
ANR	2590087	Identifier	qo		2590000	0					
ANR	2590088	Identifier	i		2590000	1					
ANR	2590089	Identifier	MakeUniversal		2590000	1					
ANR	2590090	ArgumentList			2590000	1					
ANR	2590091	ForStatement	for ( aitr = window . importedBoxes . begin ( ) ; aitr != window . importedBoxes . end ( ) ; aitr ++ )		2590000	13					
ANR	2590092	ForInit	aitr = window . importedBoxes . begin ( ) ;	283:6:6717:6751	2590000	0	True				
ANR	2590093	AssignmentExpression	aitr = window . importedBoxes . begin ( )		2590000	0		=			
ANR	2590094	Identifier	aitr		2590000	0					
ANR	2590095	CallExpression	window . importedBoxes . begin ( )		2590000	1					
ANR	2590096	Callee	window . importedBoxes . begin		2590000	0					
ANR	2590097	MemberAccess	window . importedBoxes . begin		2590000	0					
ANR	2590098	MemberAccess	window . importedBoxes		2590000	0					
ANR	2590099	Identifier	window		2590000	0					
ANR	2590100	Identifier	importedBoxes		2590000	1					
ANR	2590101	Identifier	begin		2590000	1					
ANR	2590102	ArgumentList			2590000	1					
ANR	2590103	Condition	aitr != window . importedBoxes . end ( )	283:42:6753:6785	2590000	1	True				
ANR	2590104	EqualityExpression	aitr != window . importedBoxes . end ( )		2590000	0		!=			
ANR	2590105	Identifier	aitr		2590000	0					
ANR	2590106	CallExpression	window . importedBoxes . end ( )		2590000	1					
ANR	2590107	Callee	window . importedBoxes . end		2590000	0					
ANR	2590108	MemberAccess	window . importedBoxes . end		2590000	0					
ANR	2590109	MemberAccess	window . importedBoxes		2590000	0					
ANR	2590110	Identifier	window		2590000	0					
ANR	2590111	Identifier	importedBoxes		2590000	1					
ANR	2590112	Identifier	end		2590000	1					
ANR	2590113	ArgumentList			2590000	1					
ANR	2590114	PostIncDecOperationExpression	aitr ++	284:3:6791:6796	2590000	2	True				
ANR	2590115	Identifier	aitr		2590000	0					
ANR	2590116	IncDec	++		2590000	1					
ANR	2590117	CompoundStatement		24:12:614:614	2590000	3					
ANR	2590118	ExpressionStatement	"demangled . assign ( aitr -> first , 2 , aitr -> first . size ( ) - 2 )"	286:2:6805:6864	2590000	0	True				
ANR	2590119	CallExpression	"demangled . assign ( aitr -> first , 2 , aitr -> first . size ( ) - 2 )"		2590000	0					
ANR	2590120	Callee	demangled . assign		2590000	0					
ANR	2590121	MemberAccess	demangled . assign		2590000	0					
ANR	2590122	Identifier	demangled		2590000	0					
ANR	2590123	Identifier	assign		2590000	1					
ANR	2590124	ArgumentList	aitr -> first		2590000	1					
ANR	2590125	Argument	aitr -> first		2590000	0					
ANR	2590126	PtrMemberAccess	aitr -> first		2590000	0					
ANR	2590127	Identifier	aitr		2590000	0					
ANR	2590128	Identifier	first		2590000	1					
ANR	2590129	Argument	2		2590000	1					
ANR	2590130	PrimaryExpression	2		2590000	0					
ANR	2590131	Argument	aitr -> first . size ( ) - 2		2590000	2					
ANR	2590132	AdditiveExpression	aitr -> first . size ( ) - 2		2590000	0		-			
ANR	2590133	CallExpression	aitr -> first . size ( )		2590000	0					
ANR	2590134	Callee	aitr -> first . size		2590000	0					
ANR	2590135	MemberAccess	aitr -> first . size		2590000	0					
ANR	2590136	PtrMemberAccess	aitr -> first		2590000	0					
ANR	2590137	Identifier	aitr		2590000	0					
ANR	2590138	Identifier	first		2590000	1					
ANR	2590139	Identifier	size		2590000	1					
ANR	2590140	ArgumentList			2590000	1					
ANR	2590141	PrimaryExpression	2		2590000	1					
ANR	2590142	ExpressionStatement	ditr = rec -> unexported . find ( demangled )	287:2:6868:6908	2590000	1	True				
ANR	2590143	AssignmentExpression	ditr = rec -> unexported . find ( demangled )		2590000	0		=			
ANR	2590144	Identifier	ditr		2590000	0					
ANR	2590145	CallExpression	rec -> unexported . find ( demangled )		2590000	1					
ANR	2590146	Callee	rec -> unexported . find		2590000	0					
ANR	2590147	MemberAccess	rec -> unexported . find		2590000	0					
ANR	2590148	PtrMemberAccess	rec -> unexported		2590000	0					
ANR	2590149	Identifier	rec		2590000	0					
ANR	2590150	Identifier	unexported		2590000	1					
ANR	2590151	Identifier	find		2590000	1					
ANR	2590152	ArgumentList	demangled		2590000	1					
ANR	2590153	Argument	demangled		2590000	0					
ANR	2590154	Identifier	demangled		2590000	0					
ANR	2590155	ForStatement	for ( oitr = aitr -> second . begin ( ) ; oitr != aitr -> second . end ( ) ; oitr ++ )		2590000	2					
ANR	2590156	ForInit	oitr = aitr -> second . begin ( ) ;	289:7:6918:6944	2590000	0	True				
ANR	2590157	AssignmentExpression	oitr = aitr -> second . begin ( )		2590000	0		=			
ANR	2590158	Identifier	oitr		2590000	0					
ANR	2590159	CallExpression	aitr -> second . begin ( )		2590000	1					
ANR	2590160	Callee	aitr -> second . begin		2590000	0					
ANR	2590161	MemberAccess	aitr -> second . begin		2590000	0					
ANR	2590162	PtrMemberAccess	aitr -> second		2590000	0					
ANR	2590163	Identifier	aitr		2590000	0					
ANR	2590164	Identifier	second		2590000	1					
ANR	2590165	Identifier	begin		2590000	1					
ANR	2590166	ArgumentList			2590000	1					
ANR	2590167	Condition	oitr != aitr -> second . end ( )	289:35:6946:6970	2590000	1	True				
ANR	2590168	EqualityExpression	oitr != aitr -> second . end ( )		2590000	0		!=			
ANR	2590169	Identifier	oitr		2590000	0					
ANR	2590170	CallExpression	aitr -> second . end ( )		2590000	1					
ANR	2590171	Callee	aitr -> second . end		2590000	0					
ANR	2590172	MemberAccess	aitr -> second . end		2590000	0					
ANR	2590173	PtrMemberAccess	aitr -> second		2590000	0					
ANR	2590174	Identifier	aitr		2590000	0					
ANR	2590175	Identifier	second		2590000	1					
ANR	2590176	Identifier	end		2590000	1					
ANR	2590177	ArgumentList			2590000	1					
ANR	2590178	PostIncDecOperationExpression	oitr ++	289:62:6973:6978	2590000	2	True				
ANR	2590179	Identifier	oitr		2590000	0					
ANR	2590180	IncDec	++		2590000	1					
ANR	2590181	CompoundStatement		29:71:796:796	2590000	3					
ANR	2590182	ExpressionStatement	tmpResult . Clear ( )	290:3:6987:7005	2590000	0	True				
ANR	2590183	CallExpression	tmpResult . Clear ( )		2590000	0					
ANR	2590184	Callee	tmpResult . Clear		2590000	0					
ANR	2590185	MemberAccess	tmpResult . Clear		2590000	0					
ANR	2590186	Identifier	tmpResult		2590000	0					
ANR	2590187	Identifier	Clear		2590000	1					
ANR	2590188	ArgumentList			2590000	1					
ANR	2590189	IfStatement	if ( ( iitr = exported . find ( aitr -> first ) ) != exported . end ( ) )		2590000	1					
ANR	2590190	Condition	( iitr = exported . find ( aitr -> first ) ) != exported . end ( )	292:7:7076:7133	2590000	0	True				
ANR	2590191	EqualityExpression	( iitr = exported . find ( aitr -> first ) ) != exported . end ( )		2590000	0		!=			
ANR	2590192	AssignmentExpression	iitr = exported . find ( aitr -> first )		2590000	0		=			
ANR	2590193	Identifier	iitr		2590000	0					
ANR	2590194	CallExpression	exported . find ( aitr -> first )		2590000	1					
ANR	2590195	Callee	exported . find		2590000	0					
ANR	2590196	MemberAccess	exported . find		2590000	0					
ANR	2590197	Identifier	exported		2590000	0					
ANR	2590198	Identifier	find		2590000	1					
ANR	2590199	ArgumentList	aitr -> first		2590000	1					
ANR	2590200	Argument	aitr -> first		2590000	0					
ANR	2590201	PtrMemberAccess	aitr -> first		2590000	0					
ANR	2590202	Identifier	aitr		2590000	0					
ANR	2590203	Identifier	first		2590000	1					
ANR	2590204	CallExpression	exported . end ( )		2590000	1					
ANR	2590205	Callee	exported . end		2590000	0					
ANR	2590206	MemberAccess	exported . end		2590000	0					
ANR	2590207	Identifier	exported		2590000	0					
ANR	2590208	Identifier	end		2590000	1					
ANR	2590209	ArgumentList			2590000	1					
ANR	2590210	CompoundStatement		32:68:951:951	2590000	1					
ANR	2590211	IfStatement	"if ( ! iitr -> second -> Filter ( oitr -> second , tmpResult ) )"		2590000	0					
ANR	2590212	Condition	"! iitr -> second -> Filter ( oitr -> second , tmpResult )"	293:8:7147:7194	2590000	0	True				
ANR	2590213	UnaryOperationExpression	"! iitr -> second -> Filter ( oitr -> second , tmpResult )"		2590000	0					
ANR	2590214	UnaryOperator	!		2590000	0					
ANR	2590215	CallExpression	"iitr -> second -> Filter ( oitr -> second , tmpResult )"		2590000	1					
ANR	2590216	Callee	iitr -> second -> Filter		2590000	0					
ANR	2590217	PtrMemberAccess	iitr -> second -> Filter		2590000	0					
ANR	2590218	PtrMemberAccess	iitr -> second		2590000	0					
ANR	2590219	Identifier	iitr		2590000	0					
ANR	2590220	Identifier	second		2590000	1					
ANR	2590221	Identifier	Filter		2590000	1					
ANR	2590222	ArgumentList	oitr -> second		2590000	1					
ANR	2590223	Argument	oitr -> second		2590000	0					
ANR	2590224	PtrMemberAccess	oitr -> second		2590000	0					
ANR	2590225	Identifier	oitr		2590000	0					
ANR	2590226	Identifier	second		2590000	1					
ANR	2590227	Argument	tmpResult		2590000	1					
ANR	2590228	Identifier	tmpResult		2590000	0					
ANR	2590229	CompoundStatement		33:59:1012:1012	2590000	1					
ANR	2590230	ExpressionStatement	"printf ( ""Failed exported index lookup\\n"" )"	294:5:7205:7247	2590000	0	True				
ANR	2590231	CallExpression	"printf ( ""Failed exported index lookup\\n"" )"		2590000	0					
ANR	2590232	Callee	printf		2590000	0					
ANR	2590233	Identifier	printf		2590000	0					
ANR	2590234	ArgumentList	"""Failed exported index lookup\\n"""		2590000	1					
ANR	2590235	Argument	"""Failed exported index lookup\\n"""		2590000	0					
ANR	2590236	PrimaryExpression	"""Failed exported index lookup\\n"""		2590000	0					
ANR	2590237	ReturnStatement	return ( false ) ;	295:5:7254:7269	2590000	1	True				
ANR	2590238	Identifier	false		2590000	0					
ANR	2590239	IfStatement	if ( ditr == rec -> unexported . end ( ) )		2590000	2					
ANR	2590240	Condition	ditr == rec -> unexported . end ( )	301:7:7406:7435	2590000	0	True				
ANR	2590241	EqualityExpression	ditr == rec -> unexported . end ( )		2590000	0		==			
ANR	2590242	Identifier	ditr		2590000	0					
ANR	2590243	CallExpression	rec -> unexported . end ( )		2590000	1					
ANR	2590244	Callee	rec -> unexported . end		2590000	0					
ANR	2590245	MemberAccess	rec -> unexported . end		2590000	0					
ANR	2590246	PtrMemberAccess	rec -> unexported		2590000	0					
ANR	2590247	Identifier	rec		2590000	0					
ANR	2590248	Identifier	unexported		2590000	1					
ANR	2590249	Identifier	end		2590000	1					
ANR	2590250	ArgumentList			2590000	1					
ANR	2590251	CompoundStatement		41:40:1253:1253	2590000	1					
ANR	2590252	ExpressionStatement	"qo [ oitr -> first ] . IntersectWithUnionOf ( tmpResult , rec -> deviantExported )"	302:4:7445:7522	2590000	0	True				
ANR	2590253	CallExpression	"qo [ oitr -> first ] . IntersectWithUnionOf ( tmpResult , rec -> deviantExported )"		2590000	0					
ANR	2590254	Callee	qo [ oitr -> first ] . IntersectWithUnionOf		2590000	0					
ANR	2590255	MemberAccess	qo [ oitr -> first ] . IntersectWithUnionOf		2590000	0					
ANR	2590256	ArrayIndexing	qo [ oitr -> first ]		2590000	0					
ANR	2590257	Identifier	qo		2590000	0					
ANR	2590258	PtrMemberAccess	oitr -> first		2590000	1					
ANR	2590259	Identifier	oitr		2590000	0					
ANR	2590260	Identifier	first		2590000	1					
ANR	2590261	Identifier	IntersectWithUnionOf		2590000	1					
ANR	2590262	ArgumentList	tmpResult		2590000	1					
ANR	2590263	Argument	tmpResult		2590000	0					
ANR	2590264	Identifier	tmpResult		2590000	0					
ANR	2590265	Argument	rec -> deviantExported		2590000	1					
ANR	2590266	PtrMemberAccess	rec -> deviantExported		2590000	0					
ANR	2590267	Identifier	rec		2590000	0					
ANR	2590268	Identifier	deviantExported		2590000	1					
ANR	2590269	ElseStatement	else		2590000	0					
ANR	2590270	CompoundStatement		44:10:1348:1348	2590000	0					
ANR	2590271	ExpressionStatement	"qo [ oitr -> first ] . IntersectWithUnionOf ( tmpResult , ditr -> second , rec -> deviantExported )"	305:4:7540:7630	2590000	0	True				
ANR	2590272	CallExpression	"qo [ oitr -> first ] . IntersectWithUnionOf ( tmpResult , ditr -> second , rec -> deviantExported )"		2590000	0					
ANR	2590273	Callee	qo [ oitr -> first ] . IntersectWithUnionOf		2590000	0					
ANR	2590274	MemberAccess	qo [ oitr -> first ] . IntersectWithUnionOf		2590000	0					
ANR	2590275	ArrayIndexing	qo [ oitr -> first ]		2590000	0					
ANR	2590276	Identifier	qo		2590000	0					
ANR	2590277	PtrMemberAccess	oitr -> first		2590000	1					
ANR	2590278	Identifier	oitr		2590000	0					
ANR	2590279	Identifier	first		2590000	1					
ANR	2590280	Identifier	IntersectWithUnionOf		2590000	1					
ANR	2590281	ArgumentList	tmpResult		2590000	1					
ANR	2590282	Argument	tmpResult		2590000	0					
ANR	2590283	Identifier	tmpResult		2590000	0					
ANR	2590284	Argument	ditr -> second		2590000	1					
ANR	2590285	PtrMemberAccess	ditr -> second		2590000	0					
ANR	2590286	Identifier	ditr		2590000	0					
ANR	2590287	Identifier	second		2590000	1					
ANR	2590288	Argument	rec -> deviantExported		2590000	2					
ANR	2590289	PtrMemberAccess	rec -> deviantExported		2590000	0					
ANR	2590290	Identifier	rec		2590000	0					
ANR	2590291	Identifier	deviantExported		2590000	1					
ANR	2590292	ForStatement	for ( ditr = window . unimported . begin ( ) ; ditr != window . unimported . end ( ) ; ditr ++ )		2590000	14					
ANR	2590293	ForInit	ditr = window . unimported . begin ( ) ;	312:5:7717:7747	2590000	0	True				
ANR	2590294	AssignmentExpression	ditr = window . unimported . begin ( )		2590000	0		=			
ANR	2590295	Identifier	ditr		2590000	0					
ANR	2590296	CallExpression	window . unimported . begin ( )		2590000	1					
ANR	2590297	Callee	window . unimported . begin		2590000	0					
ANR	2590298	MemberAccess	window . unimported . begin		2590000	0					
ANR	2590299	MemberAccess	window . unimported		2590000	0					
ANR	2590300	Identifier	window		2590000	0					
ANR	2590301	Identifier	unimported		2590000	1					
ANR	2590302	Identifier	begin		2590000	1					
ANR	2590303	ArgumentList			2590000	1					
ANR	2590304	Condition	ditr != window . unimported . end ( )	312:36:7748:7776	2590000	1	True				
ANR	2590305	EqualityExpression	ditr != window . unimported . end ( )		2590000	0		!=			
ANR	2590306	Identifier	ditr		2590000	0					
ANR	2590307	CallExpression	window . unimported . end ( )		2590000	1					
ANR	2590308	Callee	window . unimported . end		2590000	0					
ANR	2590309	MemberAccess	window . unimported . end		2590000	0					
ANR	2590310	MemberAccess	window . unimported		2590000	0					
ANR	2590311	Identifier	window		2590000	0					
ANR	2590312	Identifier	unimported		2590000	1					
ANR	2590313	Identifier	end		2590000	1					
ANR	2590314	ArgumentList			2590000	1					
ANR	2590315	PostIncDecOperationExpression	ditr ++	312:66:7778:7783	2590000	2	True				
ANR	2590316	Identifier	ditr		2590000	0					
ANR	2590317	IncDec	++		2590000	1					
ANR	2590318	CompoundStatement		52:74:1600:1600	2590000	3					
ANR	2590319	ExpressionStatement	daxitr = rec -> allExported . find ( ditr -> first )	314:2:7858:7903	2590000	0	True				
ANR	2590320	AssignmentExpression	daxitr = rec -> allExported . find ( ditr -> first )		2590000	0		=			
ANR	2590321	Identifier	daxitr		2590000	0					
ANR	2590322	CallExpression	rec -> allExported . find ( ditr -> first )		2590000	1					
ANR	2590323	Callee	rec -> allExported . find		2590000	0					
ANR	2590324	MemberAccess	rec -> allExported . find		2590000	0					
ANR	2590325	PtrMemberAccess	rec -> allExported		2590000	0					
ANR	2590326	Identifier	rec		2590000	0					
ANR	2590327	Identifier	allExported		2590000	1					
ANR	2590328	Identifier	find		2590000	1					
ANR	2590329	ArgumentList	ditr -> first		2590000	1					
ANR	2590330	Argument	ditr -> first		2590000	0					
ANR	2590331	PtrMemberAccess	ditr -> first		2590000	0					
ANR	2590332	Identifier	ditr		2590000	0					
ANR	2590333	Identifier	first		2590000	1					
ANR	2590334	IfStatement	if ( daxitr == rec -> allExported . end ( ) )		2590000	1					
ANR	2590335	Condition	daxitr == rec -> allExported . end ( )	315:6:7911:7943	2590000	0	True				
ANR	2590336	EqualityExpression	daxitr == rec -> allExported . end ( )		2590000	0		==			
ANR	2590337	Identifier	daxitr		2590000	0					
ANR	2590338	CallExpression	rec -> allExported . end ( )		2590000	1					
ANR	2590339	Callee	rec -> allExported . end		2590000	0					
ANR	2590340	MemberAccess	rec -> allExported . end		2590000	0					
ANR	2590341	PtrMemberAccess	rec -> allExported		2590000	0					
ANR	2590342	Identifier	rec		2590000	0					
ANR	2590343	Identifier	allExported		2590000	1					
ANR	2590344	Identifier	end		2590000	1					
ANR	2590345	ArgumentList			2590000	1					
ANR	2590346	ContinueStatement	continue ;	315:42:7947:7955	2590000	1	True				
ANR	2590347	ExpressionStatement	ksitr . Initialize ( ditr -> second )	317:2:8024:8056	2590000	2	True				
ANR	2590348	CallExpression	ksitr . Initialize ( ditr -> second )		2590000	0					
ANR	2590349	Callee	ksitr . Initialize		2590000	0					
ANR	2590350	MemberAccess	ksitr . Initialize		2590000	0					
ANR	2590351	Identifier	ksitr		2590000	0					
ANR	2590352	Identifier	Initialize		2590000	1					
ANR	2590353	ArgumentList	ditr -> second		2590000	1					
ANR	2590354	Argument	ditr -> second		2590000	0					
ANR	2590355	PtrMemberAccess	ditr -> second		2590000	0					
ANR	2590356	Identifier	ditr		2590000	0					
ANR	2590357	Identifier	second		2590000	1					
ANR	2590358	WhileStatement	while ( ksitr . Next ( tmp ) )		2590000	3					
ANR	2590359	Condition	ksitr . Next ( tmp )	318:9:8067:8083	2590000	0	True				
ANR	2590360	CallExpression	ksitr . Next ( tmp )		2590000	0					
ANR	2590361	Callee	ksitr . Next		2590000	0					
ANR	2590362	MemberAccess	ksitr . Next		2590000	0					
ANR	2590363	Identifier	ksitr		2590000	0					
ANR	2590364	Identifier	Next		2590000	1					
ANR	2590365	ArgumentList	tmp		2590000	1					
ANR	2590366	Argument	tmp		2590000	0					
ANR	2590367	Identifier	tmp		2590000	0					
ANR	2590368	CompoundStatement		58:29:1901:1901	2590000	1					
ANR	2590369	ExpressionStatement	qo [ tmp ] . Subtract ( daxitr -> second )	319:3:8092:8126	2590000	0	True				
ANR	2590370	CallExpression	qo [ tmp ] . Subtract ( daxitr -> second )		2590000	0					
ANR	2590371	Callee	qo [ tmp ] . Subtract		2590000	0					
ANR	2590372	MemberAccess	qo [ tmp ] . Subtract		2590000	0					
ANR	2590373	ArrayIndexing	qo [ tmp ]		2590000	0					
ANR	2590374	Identifier	qo		2590000	0					
ANR	2590375	Identifier	tmp		2590000	1					
ANR	2590376	Identifier	Subtract		2590000	1					
ANR	2590377	ArgumentList	daxitr -> second		2590000	1					
ANR	2590378	Argument	daxitr -> second		2590000	0					
ANR	2590379	PtrMemberAccess	daxitr -> second		2590000	0					
ANR	2590380	Identifier	daxitr		2590000	0					
ANR	2590381	Identifier	second		2590000	1					
ANR	2590382	ForStatement	for ( aitr = window . exportedBoxes . begin ( ) ; aitr != window . exportedBoxes . end ( ) ; aitr ++ )		2590000	15					
ANR	2590383	ForInit	aitr = window . exportedBoxes . begin ( ) ;	324:6:8185:8219	2590000	0	True				
ANR	2590384	AssignmentExpression	aitr = window . exportedBoxes . begin ( )		2590000	0		=			
ANR	2590385	Identifier	aitr		2590000	0					
ANR	2590386	CallExpression	window . exportedBoxes . begin ( )		2590000	1					
ANR	2590387	Callee	window . exportedBoxes . begin		2590000	0					
ANR	2590388	MemberAccess	window . exportedBoxes . begin		2590000	0					
ANR	2590389	MemberAccess	window . exportedBoxes		2590000	0					
ANR	2590390	Identifier	window		2590000	0					
ANR	2590391	Identifier	exportedBoxes		2590000	1					
ANR	2590392	Identifier	begin		2590000	1					
ANR	2590393	ArgumentList			2590000	1					
ANR	2590394	Condition	aitr != window . exportedBoxes . end ( )	324:42:8221:8253	2590000	1	True				
ANR	2590395	EqualityExpression	aitr != window . exportedBoxes . end ( )		2590000	0		!=			
ANR	2590396	Identifier	aitr		2590000	0					
ANR	2590397	CallExpression	window . exportedBoxes . end ( )		2590000	1					
ANR	2590398	Callee	window . exportedBoxes . end		2590000	0					
ANR	2590399	MemberAccess	window . exportedBoxes . end		2590000	0					
ANR	2590400	MemberAccess	window . exportedBoxes		2590000	0					
ANR	2590401	Identifier	window		2590000	0					
ANR	2590402	Identifier	exportedBoxes		2590000	1					
ANR	2590403	Identifier	end		2590000	1					
ANR	2590404	ArgumentList			2590000	1					
ANR	2590405	PostIncDecOperationExpression	aitr ++	325:3:8259:8264	2590000	2	True				
ANR	2590406	Identifier	aitr		2590000	0					
ANR	2590407	IncDec	++		2590000	1					
ANR	2590408	CompoundStatement		65:12:2082:2082	2590000	3					
ANR	2590409	ExpressionStatement	"demangled . assign ( aitr -> first , 2 , aitr -> first . size ( ) - 2 )"	327:2:8341:8400	2590000	0	True				
ANR	2590410	CallExpression	"demangled . assign ( aitr -> first , 2 , aitr -> first . size ( ) - 2 )"		2590000	0					
ANR	2590411	Callee	demangled . assign		2590000	0					
ANR	2590412	MemberAccess	demangled . assign		2590000	0					
ANR	2590413	Identifier	demangled		2590000	0					
ANR	2590414	Identifier	assign		2590000	1					
ANR	2590415	ArgumentList	aitr -> first		2590000	1					
ANR	2590416	Argument	aitr -> first		2590000	0					
ANR	2590417	PtrMemberAccess	aitr -> first		2590000	0					
ANR	2590418	Identifier	aitr		2590000	0					
ANR	2590419	Identifier	first		2590000	1					
ANR	2590420	Argument	2		2590000	1					
ANR	2590421	PrimaryExpression	2		2590000	0					
ANR	2590422	Argument	aitr -> first . size ( ) - 2		2590000	2					
ANR	2590423	AdditiveExpression	aitr -> first . size ( ) - 2		2590000	0		-			
ANR	2590424	CallExpression	aitr -> first . size ( )		2590000	0					
ANR	2590425	Callee	aitr -> first . size		2590000	0					
ANR	2590426	MemberAccess	aitr -> first . size		2590000	0					
ANR	2590427	PtrMemberAccess	aitr -> first		2590000	0					
ANR	2590428	Identifier	aitr		2590000	0					
ANR	2590429	Identifier	first		2590000	1					
ANR	2590430	Identifier	size		2590000	1					
ANR	2590431	ArgumentList			2590000	1					
ANR	2590432	PrimaryExpression	2		2590000	1					
ANR	2590433	ExpressionStatement	ditr = rec -> deviantImported . find ( demangled )	328:2:8404:8449	2590000	1	True				
ANR	2590434	AssignmentExpression	ditr = rec -> deviantImported . find ( demangled )		2590000	0		=			
ANR	2590435	Identifier	ditr		2590000	0					
ANR	2590436	CallExpression	rec -> deviantImported . find ( demangled )		2590000	1					
ANR	2590437	Callee	rec -> deviantImported . find		2590000	0					
ANR	2590438	MemberAccess	rec -> deviantImported . find		2590000	0					
ANR	2590439	PtrMemberAccess	rec -> deviantImported		2590000	0					
ANR	2590440	Identifier	rec		2590000	0					
ANR	2590441	Identifier	deviantImported		2590000	1					
ANR	2590442	Identifier	find		2590000	1					
ANR	2590443	ArgumentList	demangled		2590000	1					
ANR	2590444	Argument	demangled		2590000	0					
ANR	2590445	Identifier	demangled		2590000	0					
ANR	2590446	ForStatement	for ( oitr = aitr -> second . begin ( ) ; oitr != aitr -> second . end ( ) ; oitr ++ )		2590000	2					
ANR	2590447	ForInit	oitr = aitr -> second . begin ( ) ;	330:7:8459:8485	2590000	0	True				
ANR	2590448	AssignmentExpression	oitr = aitr -> second . begin ( )		2590000	0		=			
ANR	2590449	Identifier	oitr		2590000	0					
ANR	2590450	CallExpression	aitr -> second . begin ( )		2590000	1					
ANR	2590451	Callee	aitr -> second . begin		2590000	0					
ANR	2590452	MemberAccess	aitr -> second . begin		2590000	0					
ANR	2590453	PtrMemberAccess	aitr -> second		2590000	0					
ANR	2590454	Identifier	aitr		2590000	0					
ANR	2590455	Identifier	second		2590000	1					
ANR	2590456	Identifier	begin		2590000	1					
ANR	2590457	ArgumentList			2590000	1					
ANR	2590458	Condition	oitr != aitr -> second . end ( )	330:35:8487:8511	2590000	1	True				
ANR	2590459	EqualityExpression	oitr != aitr -> second . end ( )		2590000	0		!=			
ANR	2590460	Identifier	oitr		2590000	0					
ANR	2590461	CallExpression	aitr -> second . end ( )		2590000	1					
ANR	2590462	Callee	aitr -> second . end		2590000	0					
ANR	2590463	MemberAccess	aitr -> second . end		2590000	0					
ANR	2590464	PtrMemberAccess	aitr -> second		2590000	0					
ANR	2590465	Identifier	aitr		2590000	0					
ANR	2590466	Identifier	second		2590000	1					
ANR	2590467	Identifier	end		2590000	1					
ANR	2590468	ArgumentList			2590000	1					
ANR	2590469	PostIncDecOperationExpression	oitr ++	330:62:8514:8519	2590000	2	True				
ANR	2590470	Identifier	oitr		2590000	0					
ANR	2590471	IncDec	++		2590000	1					
ANR	2590472	CompoundStatement		70:71:2337:2337	2590000	3					
ANR	2590473	ExpressionStatement	tmpResult . Clear ( )	331:3:8528:8546	2590000	0	True				
ANR	2590474	CallExpression	tmpResult . Clear ( )		2590000	0					
ANR	2590475	Callee	tmpResult . Clear		2590000	0					
ANR	2590476	MemberAccess	tmpResult . Clear		2590000	0					
ANR	2590477	Identifier	tmpResult		2590000	0					
ANR	2590478	Identifier	Clear		2590000	1					
ANR	2590479	ArgumentList			2590000	1					
ANR	2590480	IfStatement	if ( ( iitr = imported . find ( aitr -> first ) ) != imported . end ( ) )		2590000	1					
ANR	2590481	Condition	( iitr = imported . find ( aitr -> first ) ) != imported . end ( )	333:7:8615:8672	2590000	0	True				
ANR	2590482	EqualityExpression	( iitr = imported . find ( aitr -> first ) ) != imported . end ( )		2590000	0		!=			
ANR	2590483	AssignmentExpression	iitr = imported . find ( aitr -> first )		2590000	0		=			
ANR	2590484	Identifier	iitr		2590000	0					
ANR	2590485	CallExpression	imported . find ( aitr -> first )		2590000	1					
ANR	2590486	Callee	imported . find		2590000	0					
ANR	2590487	MemberAccess	imported . find		2590000	0					
ANR	2590488	Identifier	imported		2590000	0					
ANR	2590489	Identifier	find		2590000	1					
ANR	2590490	ArgumentList	aitr -> first		2590000	1					
ANR	2590491	Argument	aitr -> first		2590000	0					
ANR	2590492	PtrMemberAccess	aitr -> first		2590000	0					
ANR	2590493	Identifier	aitr		2590000	0					
ANR	2590494	Identifier	first		2590000	1					
ANR	2590495	CallExpression	imported . end ( )		2590000	1					
ANR	2590496	Callee	imported . end		2590000	0					
ANR	2590497	MemberAccess	imported . end		2590000	0					
ANR	2590498	Identifier	imported		2590000	0					
ANR	2590499	Identifier	end		2590000	1					
ANR	2590500	ArgumentList			2590000	1					
ANR	2590501	CompoundStatement		73:68:2490:2490	2590000	1					
ANR	2590502	IfStatement	"if ( ! iitr -> second -> Filter ( oitr -> second , tmpResult ) )"		2590000	0					
ANR	2590503	Condition	"! iitr -> second -> Filter ( oitr -> second , tmpResult )"	334:8:8686:8733	2590000	0	True				
ANR	2590504	UnaryOperationExpression	"! iitr -> second -> Filter ( oitr -> second , tmpResult )"		2590000	0					
ANR	2590505	UnaryOperator	!		2590000	0					
ANR	2590506	CallExpression	"iitr -> second -> Filter ( oitr -> second , tmpResult )"		2590000	1					
ANR	2590507	Callee	iitr -> second -> Filter		2590000	0					
ANR	2590508	PtrMemberAccess	iitr -> second -> Filter		2590000	0					
ANR	2590509	PtrMemberAccess	iitr -> second		2590000	0					
ANR	2590510	Identifier	iitr		2590000	0					
ANR	2590511	Identifier	second		2590000	1					
ANR	2590512	Identifier	Filter		2590000	1					
ANR	2590513	ArgumentList	oitr -> second		2590000	1					
ANR	2590514	Argument	oitr -> second		2590000	0					
ANR	2590515	PtrMemberAccess	oitr -> second		2590000	0					
ANR	2590516	Identifier	oitr		2590000	0					
ANR	2590517	Identifier	second		2590000	1					
ANR	2590518	Argument	tmpResult		2590000	1					
ANR	2590519	Identifier	tmpResult		2590000	0					
ANR	2590520	CompoundStatement		74:59:2551:2551	2590000	1					
ANR	2590521	ExpressionStatement	"printf ( ""Failed imported index lookup\\n"" )"	335:5:8744:8786	2590000	0	True				
ANR	2590522	CallExpression	"printf ( ""Failed imported index lookup\\n"" )"		2590000	0					
ANR	2590523	Callee	printf		2590000	0					
ANR	2590524	Identifier	printf		2590000	0					
ANR	2590525	ArgumentList	"""Failed imported index lookup\\n"""		2590000	1					
ANR	2590526	Argument	"""Failed imported index lookup\\n"""		2590000	0					
ANR	2590527	PrimaryExpression	"""Failed imported index lookup\\n"""		2590000	0					
ANR	2590528	ReturnStatement	return ( false ) ;	336:5:8793:8808	2590000	1	True				
ANR	2590529	Identifier	false		2590000	0					
ANR	2590530	IfStatement	if ( ditr == rec -> deviantImported . end ( ) )		2590000	2					
ANR	2590531	Condition	ditr == rec -> deviantImported . end ( )	340:7:8891:8925	2590000	0	True				
ANR	2590532	EqualityExpression	ditr == rec -> deviantImported . end ( )		2590000	0		==			
ANR	2590533	Identifier	ditr		2590000	0					
ANR	2590534	CallExpression	rec -> deviantImported . end ( )		2590000	1					
ANR	2590535	Callee	rec -> deviantImported . end		2590000	0					
ANR	2590536	MemberAccess	rec -> deviantImported . end		2590000	0					
ANR	2590537	PtrMemberAccess	rec -> deviantImported		2590000	0					
ANR	2590538	Identifier	rec		2590000	0					
ANR	2590539	Identifier	deviantImported		2590000	1					
ANR	2590540	Identifier	end		2590000	1					
ANR	2590541	ArgumentList			2590000	1					
ANR	2590542	CompoundStatement		80:45:2743:2743	2590000	1					
ANR	2590543	ExpressionStatement	qo [ oitr -> first ] . Intersect ( tmpResult )	342:4:8992:9030	2590000	0	True				
ANR	2590544	CallExpression	qo [ oitr -> first ] . Intersect ( tmpResult )		2590000	0					
ANR	2590545	Callee	qo [ oitr -> first ] . Intersect		2590000	0					
ANR	2590546	MemberAccess	qo [ oitr -> first ] . Intersect		2590000	0					
ANR	2590547	ArrayIndexing	qo [ oitr -> first ]		2590000	0					
ANR	2590548	Identifier	qo		2590000	0					
ANR	2590549	PtrMemberAccess	oitr -> first		2590000	1					
ANR	2590550	Identifier	oitr		2590000	0					
ANR	2590551	Identifier	first		2590000	1					
ANR	2590552	Identifier	Intersect		2590000	1					
ANR	2590553	ArgumentList	tmpResult		2590000	1					
ANR	2590554	Argument	tmpResult		2590000	0					
ANR	2590555	Identifier	tmpResult		2590000	0					
ANR	2590556	ElseStatement	else		2590000	0					
ANR	2590557	CompoundStatement		83:10:2856:2856	2590000	0					
ANR	2590558	ExpressionStatement	"qo [ oitr -> first ] . IntersectWithUnionOf ( ditr -> second , tmpResult )"	345:4:9107:9167	2590000	0	True				
ANR	2590559	CallExpression	"qo [ oitr -> first ] . IntersectWithUnionOf ( ditr -> second , tmpResult )"		2590000	0					
ANR	2590560	Callee	qo [ oitr -> first ] . IntersectWithUnionOf		2590000	0					
ANR	2590561	MemberAccess	qo [ oitr -> first ] . IntersectWithUnionOf		2590000	0					
ANR	2590562	ArrayIndexing	qo [ oitr -> first ]		2590000	0					
ANR	2590563	Identifier	qo		2590000	0					
ANR	2590564	PtrMemberAccess	oitr -> first		2590000	1					
ANR	2590565	Identifier	oitr		2590000	0					
ANR	2590566	Identifier	first		2590000	1					
ANR	2590567	Identifier	IntersectWithUnionOf		2590000	1					
ANR	2590568	ArgumentList	ditr -> second		2590000	1					
ANR	2590569	Argument	ditr -> second		2590000	0					
ANR	2590570	PtrMemberAccess	ditr -> second		2590000	0					
ANR	2590571	Identifier	ditr		2590000	0					
ANR	2590572	Identifier	second		2590000	1					
ANR	2590573	Argument	tmpResult		2590000	1					
ANR	2590574	Identifier	tmpResult		2590000	0					
ANR	2590575	ExpressionStatement	result . Clear ( )	351:1:9241:9256	2590000	16	True				
ANR	2590576	CallExpression	result . Clear ( )		2590000	0					
ANR	2590577	Callee	result . Clear		2590000	0					
ANR	2590578	MemberAccess	result . Clear		2590000	0					
ANR	2590579	Identifier	result		2590000	0					
ANR	2590580	Identifier	Clear		2590000	1					
ANR	2590581	ArgumentList			2590000	1					
ANR	2590582	ForStatement	for ( int i = 0 ; i <= window . rId ; i ++ )		2590000	17					
ANR	2590583	ForInit	int i = 0 ;	352:6:9264:9274	2590000	0	True				
ANR	2590584	IdentifierDeclStatement	int i = 0 ;		2590000	0					
ANR	2590585	IdentifierDecl	i = 0		2590000	0					
ANR	2590586	IdentifierDeclType	int		2590000	0					
ANR	2590587	Identifier	i		2590000	1					
ANR	2590588	AssignmentExpression	i = 0		2590000	2		=			
ANR	2590589	Identifier	i		2590000	0					
ANR	2590590	PrimaryExpression	0		2590000	1					
ANR	2590591	Condition	i <= window . rId	352:18:9276:9290	2590000	1	True				
ANR	2590592	RelationalExpression	i <= window . rId		2590000	0		<=			
ANR	2590593	Identifier	i		2590000	0					
ANR	2590594	MemberAccess	window . rId		2590000	1					
ANR	2590595	Identifier	window		2590000	0					
ANR	2590596	Identifier	rId		2590000	1					
ANR	2590597	PostIncDecOperationExpression	i ++	352:36:9294:9296	2590000	2	True				
ANR	2590598	Identifier	i		2590000	0					
ANR	2590599	IncDec	++		2590000	1					
ANR	2590600	CompoundStatement		92:42:3114:3114	2590000	3					
ANR	2590601	ExpressionStatement	result . Unify ( qo [ i ] )	353:2:9304:9325	2590000	0	True				
ANR	2590602	CallExpression	result . Unify ( qo [ i ] )		2590000	0					
ANR	2590603	Callee	result . Unify		2590000	0					
ANR	2590604	MemberAccess	result . Unify		2590000	0					
ANR	2590605	Identifier	result		2590000	0					
ANR	2590606	Identifier	Unify		2590000	1					
ANR	2590607	ArgumentList	qo [ i ]		2590000	1					
ANR	2590608	Argument	qo [ i ]		2590000	0					
ANR	2590609	ArrayIndexing	qo [ i ]		2590000	0					
ANR	2590610	Identifier	qo		2590000	0					
ANR	2590611	Identifier	i		2590000	1					
ANR	2590612	ReturnStatement	return ( true ) ;	357:1:9342:9356	2590000	18	True				
ANR	2590613	Identifier	true		2590000	0					
ANR	2590614	ReturnType	bool		2590000	1					
ANR	2590615	Identifier	QueryProcessor :: DoQuery		2590000	2					
ANR	2590616	ParameterList	"Rectangles & window , KeySet & result"		2590000	3					
ANR	2590617	Parameter	Rectangles & window	260:9:6148:6165	2590000	0	True				
ANR	2590618	ParameterType	Rectangles &		2590000	0					
ANR	2590619	Identifier	window		2590000	1					
ANR	2590620	Parameter	KeySet & result	260:29:6168:6181	2590000	1	True				
ANR	2590621	ParameterType	KeySet &		2590000	0					
ANR	2590622	Identifier	result		2590000	1					
ANR	2590623	CFGEntryNode	ENTRY		2590000		True				
ANR	2590624	CFGExitNode	EXIT		2590000		True				
ANR	2590625	Symbol	rectangles		2590000						
ANR	2590626	Symbol	aitr -> second . end		2590000						
ANR	2590627	Symbol	rec -> unexported . find		2590000						
ANR	2590628	Symbol	aitr		2590000						
ANR	2590629	Symbol	window . rId		2590000						
ANR	2590630	Symbol	rec -> deviantExported		2590000						
ANR	2590631	Symbol	* daxitr		2590000						
ANR	2590632	Symbol	rec		2590000						
ANR	2590633	Symbol	& summaries		2590000						
ANR	2590634	Symbol	ditr -> first		2590000						
ANR	2590635	Symbol	rec -> deviantImported		2590000						
ANR	2590636	Symbol	imported . find		2590000						
ANR	2590637	Symbol	window . unimported		2590000						
ANR	2590638	Symbol	tmp		2590000						
ANR	2590639	Symbol	rec -> allExported . find		2590000						
ANR	2590640	Symbol	oitr -> first		2590000						
ANR	2590641	Symbol	rec -> unexported . end		2590000						
ANR	2590642	Symbol	aitr -> first		2590000						
ANR	2590643	Symbol	qo		2590000						
ANR	2590644	Symbol	ditr -> second		2590000						
ANR	2590645	Symbol	imported . end		2590000						
ANR	2590646	Symbol	daxitr		2590000						
ANR	2590647	Symbol	aitr -> first . size		2590000						
ANR	2590648	Symbol	* iitr -> second		2590000						
ANR	2590649	Symbol	* * oitr		2590000						
ANR	2590650	Symbol	demangled		2590000						
ANR	2590651	Symbol	exported . end		2590000						
ANR	2590652	Symbol	ksitr		2590000						
ANR	2590653	Symbol	* oitr		2590000						
ANR	2590654	Symbol	rec -> deviantImported . end		2590000						
ANR	2590655	Symbol	iitr		2590000						
ANR	2590656	Symbol	true		2590000						
ANR	2590657	Symbol	window . unimported . end		2590000						
ANR	2590658	Symbol	rec -> unexported		2590000						
ANR	2590659	Symbol	* aitr		2590000						
ANR	2590660	Symbol	* tmp		2590000						
ANR	2590661	Symbol	window . importedBoxes		2590000						
ANR	2590662	Symbol	aitr -> second . begin		2590000						
ANR	2590663	Symbol	window . exportedBoxes		2590000						
ANR	2590664	Symbol	oitr -> second		2590000						
ANR	2590665	Symbol	* qo		2590000						
ANR	2590666	Symbol	* iitr		2590000						
ANR	2590667	Symbol	iitr -> second		2590000						
ANR	2590668	Symbol	result		2590000						
ANR	2590669	Symbol	* * iitr		2590000						
ANR	2590670	Symbol	ksitr . Next		2590000						
ANR	2590671	Symbol	window . unimported . begin		2590000						
ANR	2590672	Symbol	aitr -> second		2590000						
ANR	2590673	Symbol	imported		2590000						
ANR	2590674	Symbol	* oitr -> first		2590000						
ANR	2590675	Symbol	tmpResult		2590000						
ANR	2590676	Symbol	window . importedBoxes . begin		2590000						
ANR	2590677	Symbol	exported		2590000						
ANR	2590678	Symbol	* ditr		2590000						
ANR	2590679	Symbol	daxitr -> second		2590000						
ANR	2590680	Symbol	rec -> deviantImported . find		2590000						
ANR	2590681	Symbol	false		2590000						
ANR	2590682	Symbol	i		2590000						
ANR	2590683	Symbol	oitr		2590000						
ANR	2590684	Symbol	ditr		2590000						
ANR	2590685	Symbol	window . exportedBoxes . end		2590000						
ANR	2590686	Symbol	iitr -> second -> Filter		2590000						
ANR	2590687	Symbol	* i		2590000						
ANR	2590688	Symbol	exported . find		2590000						
ANR	2590689	Symbol	deviantExportedSet		2590000						
ANR	2590690	Symbol	rec -> allExported		2590000						
ANR	2590691	Symbol	numQueries		2590000						
ANR	2590692	Symbol	rec -> allExported . end		2590000						
ANR	2590693	Symbol	summarize		2590000						
ANR	2590694	Symbol	window . importedBoxes . end		2590000						
ANR	2590695	Symbol	* rec		2590000						
ANR	2590696	Symbol	window		2590000						
ANR	2590697	Symbol	window . exportedBoxes . begin		2590000						
ANR	2590698	Function	QueryProcessor :: MapRectangleID	360:0:9361:10372							
ANR	2590699	FunctionDef	"QueryProcessor :: MapRectangleID (int srId , int & rId , int & portNum , int & pId , int & cId)"		2590698	0					
ANR	2590700	CompoundStatement		362:0:9454:10372	2590698	0					
ANR	2590701	IfStatement	if ( summarize )		2590698	0					
ANR	2590702	Condition	summarize	363:5:9461:9469	2590698	0	True				
ANR	2590703	Identifier	summarize		2590698	0					
ANR	2590704	CompoundStatement		4:2:54:82	2590698	1					
ANR	2590705	IdentifierDeclStatement	Constituents :: iterator citr ;	364:2:9477:9505	2590698	0	True				
ANR	2590706	IdentifierDecl	citr		2590698	0					
ANR	2590707	IdentifierDeclType	Constituents :: iterator		2590698	0					
ANR	2590708	Identifier	citr		2590698	1					
ANR	2590709	IdentifierDeclStatement	set < int > :: iterator sitr ;	365:2:9509:9537	2590698	1	True				
ANR	2590710	IdentifierDecl	sitr		2590698	0					
ANR	2590711	IdentifierDeclType	set < int > :: iterator		2590698	0					
ANR	2590712	Identifier	sitr		2590698	1					
ANR	2590713	IfStatement	if ( ( citr = consts . find ( srId ) ) == consts . end ( ) )		2590698	2					
ANR	2590714	Condition	( citr = consts . find ( srId ) ) == consts . end ( )	367:6:9546:9592	2590698	0	True				
ANR	2590715	EqualityExpression	( citr = consts . find ( srId ) ) == consts . end ( )		2590698	0		==			
ANR	2590716	AssignmentExpression	citr = consts . find ( srId )		2590698	0		=			
ANR	2590717	Identifier	citr		2590698	0					
ANR	2590718	CallExpression	consts . find ( srId )		2590698	1					
ANR	2590719	Callee	consts . find		2590698	0					
ANR	2590720	MemberAccess	consts . find		2590698	0					
ANR	2590721	Identifier	consts		2590698	0					
ANR	2590722	Identifier	find		2590698	1					
ANR	2590723	ArgumentList	srId		2590698	1					
ANR	2590724	Argument	srId		2590698	0					
ANR	2590725	Identifier	srId		2590698	0					
ANR	2590726	CallExpression	consts . end ( )		2590698	1					
ANR	2590727	Callee	consts . end		2590698	0					
ANR	2590728	MemberAccess	consts . end		2590698	0					
ANR	2590729	Identifier	consts		2590698	0					
ANR	2590730	Identifier	end		2590698	1					
ANR	2590731	ArgumentList			2590698	1					
ANR	2590732	CompoundStatement		6:56:141:141	2590698	1					
ANR	2590733	ReturnStatement	return ( false ) ;	368:3:9601:9616	2590698	0	True				
ANR	2590734	Identifier	false		2590698	0					
ANR	2590735	IfStatement	if ( citr -> second . empty ( ) )		2590698	3					
ANR	2590736	Condition	citr -> second . empty ( )	370:6:9628:9648	2590698	0	True				
ANR	2590737	CallExpression	citr -> second . empty ( )		2590698	0					
ANR	2590738	Callee	citr -> second . empty		2590698	0					
ANR	2590739	MemberAccess	citr -> second . empty		2590698	0					
ANR	2590740	PtrMemberAccess	citr -> second		2590698	0					
ANR	2590741	Identifier	citr		2590698	0					
ANR	2590742	Identifier	second		2590698	1					
ANR	2590743	Identifier	empty		2590698	1					
ANR	2590744	ArgumentList			2590698	1					
ANR	2590745	CompoundStatement		9:30:197:197	2590698	1					
ANR	2590746	ReturnStatement	return ( false ) ;	371:3:9657:9672	2590698	0	True				
ANR	2590747	Identifier	false		2590698	0					
ANR	2590748	ForStatement	for ( sitr = citr -> second . begin ( ) ; sitr != citr -> second . end ( ) ; sitr ++ )		2590698	4					
ANR	2590749	ForInit	sitr = citr -> second . begin ( ) ;	378:7:9945:9971	2590698	0	True				
ANR	2590750	AssignmentExpression	sitr = citr -> second . begin ( )		2590698	0		=			
ANR	2590751	Identifier	sitr		2590698	0					
ANR	2590752	CallExpression	citr -> second . begin ( )		2590698	1					
ANR	2590753	Callee	citr -> second . begin		2590698	0					
ANR	2590754	MemberAccess	citr -> second . begin		2590698	0					
ANR	2590755	PtrMemberAccess	citr -> second		2590698	0					
ANR	2590756	Identifier	citr		2590698	0					
ANR	2590757	Identifier	second		2590698	1					
ANR	2590758	Identifier	begin		2590698	1					
ANR	2590759	ArgumentList			2590698	1					
ANR	2590760	Condition	sitr != citr -> second . end ( )	378:35:9973:9997	2590698	1	True				
ANR	2590761	EqualityExpression	sitr != citr -> second . end ( )		2590698	0		!=			
ANR	2590762	Identifier	sitr		2590698	0					
ANR	2590763	CallExpression	citr -> second . end ( )		2590698	1					
ANR	2590764	Callee	citr -> second . end		2590698	0					
ANR	2590765	MemberAccess	citr -> second . end		2590698	0					
ANR	2590766	PtrMemberAccess	citr -> second		2590698	0					
ANR	2590767	Identifier	citr		2590698	0					
ANR	2590768	Identifier	second		2590698	1					
ANR	2590769	Identifier	end		2590698	1					
ANR	2590770	ArgumentList			2590698	1					
ANR	2590771	PostIncDecOperationExpression	sitr ++	378:62:10000:10005	2590698	2	True				
ANR	2590772	Identifier	sitr		2590698	0					
ANR	2590773	IncDec	++		2590698	1					
ANR	2590774	CompoundStatement		17:71:554:554	2590698	3					
ANR	2590775	ExpressionStatement	rId = * sitr	379:3:10014:10025	2590698	0	True				
ANR	2590776	AssignmentExpression	rId = * sitr		2590698	0		=			
ANR	2590777	Identifier	rId		2590698	0					
ANR	2590778	UnaryOperationExpression	* sitr		2590698	1					
ANR	2590779	UnaryOperator	*		2590698	0					
ANR	2590780	Identifier	sitr		2590698	1					
ANR	2590781	IfStatement	"if ( rectangles -> MapRectangleID ( rId , portNum , pId , cId ) && Gangster :: keysInBundle . find ( cId ) == Gangster :: keysInBundle . end ( ) )"		2590698	1					
ANR	2590782	Condition	"rectangles -> MapRectangleID ( rId , portNum , pId , cId ) && Gangster :: keysInBundle . find ( cId ) == Gangster :: keysInBundle . end ( )"	380:7:10034:10156	2590698	0	True				
ANR	2590783	AndExpression	"rectangles -> MapRectangleID ( rId , portNum , pId , cId ) && Gangster :: keysInBundle . find ( cId ) == Gangster :: keysInBundle . end ( )"		2590698	0		&&			
ANR	2590784	CallExpression	"rectangles -> MapRectangleID ( rId , portNum , pId , cId )"		2590698	0					
ANR	2590785	Callee	rectangles -> MapRectangleID		2590698	0					
ANR	2590786	PtrMemberAccess	rectangles -> MapRectangleID		2590698	0					
ANR	2590787	Identifier	rectangles		2590698	0					
ANR	2590788	Identifier	MapRectangleID		2590698	1					
ANR	2590789	ArgumentList	rId		2590698	1					
ANR	2590790	Argument	rId		2590698	0					
ANR	2590791	Identifier	rId		2590698	0					
ANR	2590792	Argument	portNum		2590698	1					
ANR	2590793	Identifier	portNum		2590698	0					
ANR	2590794	Argument	pId		2590698	2					
ANR	2590795	Identifier	pId		2590698	0					
ANR	2590796	Argument	cId		2590698	3					
ANR	2590797	Identifier	cId		2590698	0					
ANR	2590798	EqualityExpression	Gangster :: keysInBundle . find ( cId ) == Gangster :: keysInBundle . end ( )		2590698	1		==			
ANR	2590799	CallExpression	Gangster :: keysInBundle . find ( cId )		2590698	0					
ANR	2590800	Callee	Gangster :: keysInBundle . find		2590698	0					
ANR	2590801	MemberAccess	Gangster :: keysInBundle . find		2590698	0					
ANR	2590802	Identifier	Gangster :: keysInBundle		2590698	0					
ANR	2590803	Identifier	find		2590698	1					
ANR	2590804	ArgumentList	cId		2590698	1					
ANR	2590805	Argument	cId		2590698	0					
ANR	2590806	Identifier	cId		2590698	0					
ANR	2590807	CallExpression	Gangster :: keysInBundle . end ( )		2590698	1					
ANR	2590808	Callee	Gangster :: keysInBundle . end		2590698	0					
ANR	2590809	MemberAccess	Gangster :: keysInBundle . end		2590698	0					
ANR	2590810	Identifier	Gangster :: keysInBundle		2590698	0					
ANR	2590811	Identifier	end		2590698	1					
ANR	2590812	ArgumentList			2590698	1					
ANR	2590813	CompoundStatement		20:67:703:703	2590698	1					
ANR	2590814	ReturnStatement	return ( true ) ;	382:4:10164:10178	2590698	0	True				
ANR	2590815	Identifier	true		2590698	0					
ANR	2590816	ElseStatement	else		2590698	0					
ANR	2590817	CompoundStatement		24:8:742:742	2590698	0					
ANR	2590818	ExpressionStatement	rId = srId	386:2:10201:10211	2590698	0	True				
ANR	2590819	AssignmentExpression	rId = srId		2590698	0		=			
ANR	2590820	Identifier	rId		2590698	0					
ANR	2590821	Identifier	srId		2590698	1					
ANR	2590822	ReturnStatement	"return ( rectangles -> MapRectangleID ( rId , portNum , pId , cId ) && Gangster :: keysInBundle . find ( cId ) == Gangster :: keysInBundle . end ( ) ) ;"	387:2:10215:10345	2590698	1	True				
ANR	2590823	AndExpression	"rectangles -> MapRectangleID ( rId , portNum , pId , cId ) && Gangster :: keysInBundle . find ( cId ) == Gangster :: keysInBundle . end ( )"		2590698	0		&&			
ANR	2590824	CallExpression	"rectangles -> MapRectangleID ( rId , portNum , pId , cId )"		2590698	0					
ANR	2590825	Callee	rectangles -> MapRectangleID		2590698	0					
ANR	2590826	PtrMemberAccess	rectangles -> MapRectangleID		2590698	0					
ANR	2590827	Identifier	rectangles		2590698	0					
ANR	2590828	Identifier	MapRectangleID		2590698	1					
ANR	2590829	ArgumentList	rId		2590698	1					
ANR	2590830	Argument	rId		2590698	0					
ANR	2590831	Identifier	rId		2590698	0					
ANR	2590832	Argument	portNum		2590698	1					
ANR	2590833	Identifier	portNum		2590698	0					
ANR	2590834	Argument	pId		2590698	2					
ANR	2590835	Identifier	pId		2590698	0					
ANR	2590836	Argument	cId		2590698	3					
ANR	2590837	Identifier	cId		2590698	0					
ANR	2590838	EqualityExpression	Gangster :: keysInBundle . find ( cId ) == Gangster :: keysInBundle . end ( )		2590698	1		==			
ANR	2590839	CallExpression	Gangster :: keysInBundle . find ( cId )		2590698	0					
ANR	2590840	Callee	Gangster :: keysInBundle . find		2590698	0					
ANR	2590841	MemberAccess	Gangster :: keysInBundle . find		2590698	0					
ANR	2590842	Identifier	Gangster :: keysInBundle		2590698	0					
ANR	2590843	Identifier	find		2590698	1					
ANR	2590844	ArgumentList	cId		2590698	1					
ANR	2590845	Argument	cId		2590698	0					
ANR	2590846	Identifier	cId		2590698	0					
ANR	2590847	CallExpression	Gangster :: keysInBundle . end ( )		2590698	1					
ANR	2590848	Callee	Gangster :: keysInBundle . end		2590698	0					
ANR	2590849	MemberAccess	Gangster :: keysInBundle . end		2590698	0					
ANR	2590850	Identifier	Gangster :: keysInBundle		2590698	0					
ANR	2590851	Identifier	end		2590698	1					
ANR	2590852	ArgumentList			2590698	1					
ANR	2590853	ReturnStatement	return ( false ) ;	391:4:10355:10370	2590698	1	True				
ANR	2590854	Identifier	false		2590698	0					
ANR	2590855	ReturnType	bool		2590698	1					
ANR	2590856	Identifier	QueryProcessor :: MapRectangleID		2590698	2					
ANR	2590857	ParameterList	"int srId , int & rId , int & portNum , int & pId , int & cId"		2590698	3					
ANR	2590858	Parameter	int srId	361:16:9399:9406	2590698	0	True				
ANR	2590859	ParameterType	int		2590698	0					
ANR	2590860	Identifier	srId		2590698	1					
ANR	2590861	Parameter	int & rId	361:26:9409:9416	2590698	1	True				
ANR	2590862	ParameterType	int &		2590698	0					
ANR	2590863	Identifier	rId		2590698	1					
ANR	2590864	Parameter	int & portNum	361:36:9419:9430	2590698	2	True				
ANR	2590865	ParameterType	int &		2590698	0					
ANR	2590866	Identifier	portNum		2590698	1					
ANR	2590867	Parameter	int & pId	361:50:9433:9440	2590698	3	True				
ANR	2590868	ParameterType	int &		2590698	0					
ANR	2590869	Identifier	pId		2590698	1					
ANR	2590870	Parameter	int & cId	361:60:9443:9450	2590698	4	True				
ANR	2590871	ParameterType	int &		2590698	0					
ANR	2590872	Identifier	cId		2590698	1					
ANR	2590873	CFGEntryNode	ENTRY		2590698		True				
ANR	2590874	CFGExitNode	EXIT		2590698		True				
ANR	2590875	Symbol	* rectangles		2590698						
ANR	2590876	Symbol	rectangles		2590698						
ANR	2590877	Symbol	* citr		2590698						
ANR	2590878	Symbol	citr		2590698						
ANR	2590879	Symbol	citr -> second . end		2590698						
ANR	2590880	Symbol	consts . find		2590698						
ANR	2590881	Symbol	consts		2590698						
ANR	2590882	Symbol	rectangles -> MapRectangleID		2590698						
ANR	2590883	Symbol	citr -> second		2590698						
ANR	2590884	Symbol	cId		2590698						
ANR	2590885	Symbol	citr -> second . empty		2590698						
ANR	2590886	Symbol	sitr		2590698						
ANR	2590887	Symbol	Gangster :: keysInBundle		2590698						
ANR	2590888	Symbol	portNum		2590698						
ANR	2590889	Symbol	consts . end		2590698						
ANR	2590890	Symbol	false		2590698						
ANR	2590891	Symbol	pId		2590698						
ANR	2590892	Symbol	rId		2590698						
ANR	2590893	Symbol	* sitr		2590698						
ANR	2590894	Symbol	srId		2590698						
ANR	2590895	Symbol	Gangster :: keysInBundle . find		2590698						
ANR	2590896	Symbol	citr -> second . begin		2590698						
ANR	2590897	Symbol	Gangster :: keysInBundle . end		2590698						
ANR	2590898	Symbol	true		2590698						
ANR	2590899	Symbol	summarize		2590698						
ANR	2590900	Function	QueryProcessor :: UnMapClassAdID	395:0:10376:10525							
ANR	2590901	FunctionDef	"QueryProcessor :: UnMapClassAdID (int cId , int & brId , int & erId)"		2590900	0					
ANR	2590902	CompoundStatement		397:0:10446:10525	2590900	0					
ANR	2590903	ReturnStatement	"return ( rectangles ? rectangles -> UnMapClassAdID ( cId , brId , erId ) : false ) ;"	398:1:10449:10523	2590900	0	True				
ANR	2590904	ConditionalExpression	"rectangles ? rectangles -> UnMapClassAdID ( cId , brId , erId ) : false"		2590900	0					
ANR	2590905	Condition	rectangles		2590900	0					
ANR	2590906	Identifier	rectangles		2590900	0					
ANR	2590907	CallExpression	"rectangles -> UnMapClassAdID ( cId , brId , erId )"		2590900	1					
ANR	2590908	Callee	rectangles -> UnMapClassAdID		2590900	0					
ANR	2590909	PtrMemberAccess	rectangles -> UnMapClassAdID		2590900	0					
ANR	2590910	Identifier	rectangles		2590900	0					
ANR	2590911	Identifier	UnMapClassAdID		2590900	1					
ANR	2590912	ArgumentList	cId		2590900	1					
ANR	2590913	Argument	cId		2590900	0					
ANR	2590914	Identifier	cId		2590900	0					
ANR	2590915	Argument	brId		2590900	1					
ANR	2590916	Identifier	brId		2590900	0					
ANR	2590917	Argument	erId		2590900	2					
ANR	2590918	Identifier	erId		2590900	0					
ANR	2590919	Identifier	false		2590900	2					
ANR	2590920	ReturnType	bool		2590900	1					
ANR	2590921	Identifier	QueryProcessor :: UnMapClassAdID		2590900	2					
ANR	2590922	ParameterList	"int cId , int & brId , int & erId"		2590900	3					
ANR	2590923	Parameter	int cId	396:16:10414:10420	2590900	0	True				
ANR	2590924	ParameterType	int		2590900	0					
ANR	2590925	Identifier	cId		2590900	1					
ANR	2590926	Parameter	int & brId	396:25:10423:10431	2590900	1	True				
ANR	2590927	ParameterType	int &		2590900	0					
ANR	2590928	Identifier	brId		2590900	1					
ANR	2590929	Parameter	int & erId	396:36:10434:10442	2590900	2	True				
ANR	2590930	ParameterType	int &		2590900	0					
ANR	2590931	Identifier	erId		2590900	1					
ANR	2590932	CFGEntryNode	ENTRY		2590900		True				
ANR	2590933	CFGExitNode	EXIT		2590900		True				
ANR	2590934	Symbol	rectangles -> UnMapClassAdID		2590900						
ANR	2590935	Symbol	* rectangles		2590900						
ANR	2590936	Symbol	rectangles		2590900						
ANR	2590937	Symbol	brId		2590900						
ANR	2590938	Symbol	erId		2590900						
ANR	2590939	Symbol	false		2590900						
ANR	2590940	Symbol	cId		2590900						
ANR	2590941	Function	Query :: Query	403:0:10608:10682							
ANR	2590942	FunctionDef	Query :: Query ()		2590941	0					
ANR	2590943	CompoundStatement		405:0:10625:10682	2590941	0					
ANR	2590944	ExpressionStatement	op = IDENT	406:1:10628:10638	2590941	0	True				
ANR	2590945	AssignmentExpression	op = IDENT		2590941	0		=			
ANR	2590946	Identifier	op		2590941	0					
ANR	2590947	Identifier	IDENT		2590941	1					
ANR	2590948	ExpressionStatement	rectangles = NULL	407:1:10641:10658	2590941	1	True				
ANR	2590949	AssignmentExpression	rectangles = NULL		2590941	0		=			
ANR	2590950	Identifier	rectangles		2590941	0					
ANR	2590951	Identifier	NULL		2590941	1					
ANR	2590952	ExpressionStatement	left = right = NULL	408:1:10661:10680	2590941	2	True				
ANR	2590953	AssignmentExpression	left = right = NULL		2590941	0		=			
ANR	2590954	Identifier	left		2590941	0					
ANR	2590955	AssignmentExpression	right = NULL		2590941	1		=			
ANR	2590956	Identifier	right		2590941	0					
ANR	2590957	Identifier	NULL		2590941	1					
ANR	2590958	Identifier	Query :: Query		2590941	1					
ANR	2590959	ParameterList			2590941	2					
ANR	2590960	CFGEntryNode	ENTRY		2590941		True				
ANR	2590961	CFGExitNode	EXIT		2590941		True				
ANR	2590962	Symbol	op		2590941						
ANR	2590963	Symbol	NULL		2590941						
ANR	2590964	Symbol	IDENT		2590941						
ANR	2590965	Symbol	rectangles		2590941						
ANR	2590966	Symbol	left		2590941						
ANR	2590967	Symbol	right		2590941						
ANR	2590968	Function	Query :: ~Query	411:0:10685:10794							
ANR	2590969	FunctionDef	Query :: ~Query ()		2590968	0					
ANR	2590970	CompoundStatement		413:0:10703:10794	2590968	0					
ANR	2590971	IfStatement	if ( rectangles )		2590968	0					
ANR	2590972	Condition	rectangles	414:5:10710:10719	2590968	0	True				
ANR	2590973	Identifier	rectangles		2590968	0					
ANR	2590974	Statement	delete	414:18:10723:10728	2590968	1	True				
ANR	2590975	ExpressionStatement	rectangles	414:25:10730:10740	2590968	1	True				
ANR	2590976	Identifier	rectangles		2590968	0					
ANR	2590977	IfStatement	if ( left )		2590968	2					
ANR	2590978	Condition	left	415:5:10747:10750	2590968	0	True				
ANR	2590979	Identifier	left		2590968	0					
ANR	2590980	Statement	delete	415:12:10754:10759	2590968	1	True				
ANR	2590981	ExpressionStatement	left	415:19:10761:10765	2590968	3	True				
ANR	2590982	Identifier	left		2590968	0					
ANR	2590983	IfStatement	if ( right )		2590968	4					
ANR	2590984	Condition	right	416:5:10772:10776	2590968	0	True				
ANR	2590985	Identifier	right		2590968	0					
ANR	2590986	Statement	delete	416:13:10780:10785	2590968	1	True				
ANR	2590987	ExpressionStatement	right	416:20:10787:10792	2590968	5	True				
ANR	2590988	Identifier	right		2590968	0					
ANR	2590989	Identifier	Query :: ~Query		2590968	1					
ANR	2590990	ParameterList			2590968	2					
ANR	2590991	CFGEntryNode	ENTRY		2590968		True				
ANR	2590992	CFGExitNode	EXIT		2590968		True				
ANR	2590993	Symbol	rectangles		2590968						
ANR	2590994	Symbol	left		2590968						
ANR	2590995	Symbol	right		2590968						
ANR	2590996	Function	Query :: MakeQuery	419:0:10797:10901							
ANR	2590997	FunctionDef	Query :: MakeQuery (Rectangles * r)		2590996	0					
ANR	2590998	CompoundStatement		421:0:10839:10901	2590996	0					
ANR	2590999	IdentifierDeclStatement	Query * q = new Query ( ) ;	422:1:10842:10865	2590996	0	True				
ANR	2591000	IdentifierDecl	* q = new Query ( )		2590996	0					
ANR	2591001	IdentifierDeclType	Query *		2590996	0					
ANR	2591002	Identifier	q		2590996	1					
ANR	2591003	AssignmentExpression	* q = new Query ( )		2590996	2		=			
ANR	2591004	Identifier	q		2590996	0					
ANR	2591005	UnaryExpression	new Query ( )		2590996	1					
ANR	2591006	ExpressionStatement	q -> rectangles = r	423:1:10868:10885	2590996	1	True				
ANR	2591007	AssignmentExpression	q -> rectangles = r		2590996	0		=			
ANR	2591008	PtrMemberAccess	q -> rectangles		2590996	0					
ANR	2591009	Identifier	q		2590996	0					
ANR	2591010	Identifier	rectangles		2590996	1					
ANR	2591011	Identifier	r		2590996	1					
ANR	2591012	ReturnStatement	return ( q ) ;	424:1:10888:10899	2590996	2	True				
ANR	2591013	Identifier	q		2590996	0					
ANR	2591014	ReturnType	Query *		2590996	1					
ANR	2591015	Identifier	Query :: MakeQuery		2590996	2					
ANR	2591016	ParameterList	Rectangles * r		2590996	3					
ANR	2591017	Parameter	Rectangles * r	420:11:10823:10835	2590996	0	True				
ANR	2591018	ParameterType	Rectangles *		2590996	0					
ANR	2591019	Identifier	r		2590996	1					
ANR	2591020	CFGEntryNode	ENTRY		2590996		True				
ANR	2591021	CFGExitNode	EXIT		2590996		True				
ANR	2591022	Symbol	q		2590996						
ANR	2591023	Symbol	r		2590996						
ANR	2591024	Symbol	q -> rectangles		2590996						
ANR	2591025	Symbol	* q		2590996						
ANR	2591026	Function	Query :: MakeConjunctQuery	427:0:10904:11048							
ANR	2591027	FunctionDef	"Query :: MakeConjunctQuery (Query * q1 , Query * q2)"		2591026	0					
ANR	2591028	CompoundStatement		429:0:10961:11048	2591026	0					
ANR	2591029	IdentifierDeclStatement	Query * q = new Query ( ) ;	430:1:10964:10987	2591026	0	True				
ANR	2591030	IdentifierDecl	* q = new Query ( )		2591026	0					
ANR	2591031	IdentifierDeclType	Query *		2591026	0					
ANR	2591032	Identifier	q		2591026	1					
ANR	2591033	AssignmentExpression	* q = new Query ( )		2591026	2		=			
ANR	2591034	Identifier	q		2591026	0					
ANR	2591035	UnaryExpression	new Query ( )		2591026	1					
ANR	2591036	ExpressionStatement	q -> op = AND	431:1:10990:11001	2591026	1	True				
ANR	2591037	AssignmentExpression	q -> op = AND		2591026	0		=			
ANR	2591038	PtrMemberAccess	q -> op		2591026	0					
ANR	2591039	Identifier	q		2591026	0					
ANR	2591040	Identifier	op		2591026	1					
ANR	2591041	Identifier	AND		2591026	1					
ANR	2591042	ExpressionStatement	q -> left = q1	432:1:11004:11016	2591026	2	True				
ANR	2591043	AssignmentExpression	q -> left = q1		2591026	0		=			
ANR	2591044	PtrMemberAccess	q -> left		2591026	0					
ANR	2591045	Identifier	q		2591026	0					
ANR	2591046	Identifier	left		2591026	1					
ANR	2591047	Identifier	q1		2591026	1					
ANR	2591048	ExpressionStatement	q -> right = q2	433:1:11019:11032	2591026	3	True				
ANR	2591049	AssignmentExpression	q -> right = q2		2591026	0		=			
ANR	2591050	PtrMemberAccess	q -> right		2591026	0					
ANR	2591051	Identifier	q		2591026	0					
ANR	2591052	Identifier	right		2591026	1					
ANR	2591053	Identifier	q2		2591026	1					
ANR	2591054	ReturnStatement	return ( q ) ;	434:1:11035:11046	2591026	4	True				
ANR	2591055	Identifier	q		2591026	0					
ANR	2591056	ReturnType	Query *		2591026	1					
ANR	2591057	Identifier	Query :: MakeConjunctQuery		2591026	2					
ANR	2591058	ParameterList	"Query * q1 , Query * q2"		2591026	3					
ANR	2591059	Parameter	Query * q1	428:19:10938:10946	2591026	0	True				
ANR	2591060	ParameterType	Query *		2591026	0					
ANR	2591061	Identifier	q1		2591026	1					
ANR	2591062	Parameter	Query * q2	428:30:10949:10957	2591026	1	True				
ANR	2591063	ParameterType	Query *		2591026	0					
ANR	2591064	Identifier	q2		2591026	1					
ANR	2591065	CFGEntryNode	ENTRY		2591026		True				
ANR	2591066	CFGExitNode	EXIT		2591026		True				
ANR	2591067	Symbol	q1		2591026						
ANR	2591068	Symbol	q2		2591026						
ANR	2591069	Symbol	q		2591026						
ANR	2591070	Symbol	q -> left		2591026						
ANR	2591071	Symbol	q -> op		2591026						
ANR	2591072	Symbol	AND		2591026						
ANR	2591073	Symbol	* q		2591026						
ANR	2591074	Symbol	q -> right		2591026						
ANR	2591075	Function	Query :: MakeDisjunctQuery	437:0:11051:11194							
ANR	2591076	FunctionDef	"Query :: MakeDisjunctQuery (Query * q1 , Query * q2)"		2591075	0					
ANR	2591077	CompoundStatement		439:0:11108:11194	2591075	0					
ANR	2591078	IdentifierDeclStatement	Query * q = new Query ( ) ;	440:1:11111:11134	2591075	0	True				
ANR	2591079	IdentifierDecl	* q = new Query ( )		2591075	0					
ANR	2591080	IdentifierDeclType	Query *		2591075	0					
ANR	2591081	Identifier	q		2591075	1					
ANR	2591082	AssignmentExpression	* q = new Query ( )		2591075	2		=			
ANR	2591083	Identifier	q		2591075	0					
ANR	2591084	UnaryExpression	new Query ( )		2591075	1					
ANR	2591085	ExpressionStatement	q -> op = OR	441:1:11137:11147	2591075	1	True				
ANR	2591086	AssignmentExpression	q -> op = OR		2591075	0		=			
ANR	2591087	PtrMemberAccess	q -> op		2591075	0					
ANR	2591088	Identifier	q		2591075	0					
ANR	2591089	Identifier	op		2591075	1					
ANR	2591090	Identifier	OR		2591075	1					
ANR	2591091	ExpressionStatement	q -> left = q1	442:1:11150:11162	2591075	2	True				
ANR	2591092	AssignmentExpression	q -> left = q1		2591075	0		=			
ANR	2591093	PtrMemberAccess	q -> left		2591075	0					
ANR	2591094	Identifier	q		2591075	0					
ANR	2591095	Identifier	left		2591075	1					
ANR	2591096	Identifier	q1		2591075	1					
ANR	2591097	ExpressionStatement	q -> right = q2	443:1:11165:11178	2591075	3	True				
ANR	2591098	AssignmentExpression	q -> right = q2		2591075	0		=			
ANR	2591099	PtrMemberAccess	q -> right		2591075	0					
ANR	2591100	Identifier	q		2591075	0					
ANR	2591101	Identifier	right		2591075	1					
ANR	2591102	Identifier	q2		2591075	1					
ANR	2591103	ReturnStatement	return ( q ) ;	444:1:11181:11192	2591075	4	True				
ANR	2591104	Identifier	q		2591075	0					
ANR	2591105	ReturnType	Query *		2591075	1					
ANR	2591106	Identifier	Query :: MakeDisjunctQuery		2591075	2					
ANR	2591107	ParameterList	"Query * q1 , Query * q2"		2591075	3					
ANR	2591108	Parameter	Query * q1	438:19:11085:11093	2591075	0	True				
ANR	2591109	ParameterType	Query *		2591075	0					
ANR	2591110	Identifier	q1		2591075	1					
ANR	2591111	Parameter	Query * q2	438:30:11096:11104	2591075	1	True				
ANR	2591112	ParameterType	Query *		2591075	0					
ANR	2591113	Identifier	q2		2591075	1					
ANR	2591114	CFGEntryNode	ENTRY		2591075		True				
ANR	2591115	CFGExitNode	EXIT		2591075		True				
ANR	2591116	Symbol	q1		2591075						
ANR	2591117	Symbol	q2		2591075						
ANR	2591118	Symbol	q		2591075						
ANR	2591119	Symbol	q -> left		2591075						
ANR	2591120	Symbol	q -> op		2591075						
ANR	2591121	Symbol	OR		2591075						
ANR	2591122	Symbol	* q		2591075						
ANR	2591123	Symbol	q -> right		2591075						
ANR	2591124	Function	Query :: RunQuery	447:0:11197:11640							
ANR	2591125	FunctionDef	"Query :: RunQuery (QueryProcessor & qp , KeySet & result)"		2591124	0					
ANR	2591126	CompoundStatement		449:0:11257:11640	2591124	0					
ANR	2591127	SwitchStatement	switch ( op )		2591124	0					
ANR	2591128	Condition	op	450:9:11268:11269	2591124	0	True				
ANR	2591129	Identifier	op		2591124	0					
ANR	2591130	CompoundStatement		2:14:15:15	2591124	1					
ANR	2591131	Label	case IDENT :	451:2:11277:11287	2591124	0	True				
ANR	2591132	Identifier	IDENT		2591124	0					
ANR	2591133	CompoundStatement		3:14:31:31	2591124	1					
ANR	2591134	ReturnStatement	"return ( qp . DoQuery ( * rectangles , result ) ) ;"	452:3:11294:11337	2591124	0	True				
ANR	2591135	CallExpression	"qp . DoQuery ( * rectangles , result )"		2591124	0					
ANR	2591136	Callee	qp . DoQuery		2591124	0					
ANR	2591137	MemberAccess	qp . DoQuery		2591124	0					
ANR	2591138	Identifier	qp		2591124	0					
ANR	2591139	Identifier	DoQuery		2591124	1					
ANR	2591140	ArgumentList	* rectangles		2591124	1					
ANR	2591141	Argument	* rectangles		2591124	0					
ANR	2591142	UnaryOperationExpression	* rectangles		2591124	0					
ANR	2591143	UnaryOperator	*		2591124	0					
ANR	2591144	Identifier	rectangles		2591124	1					
ANR	2591145	Argument	result		2591124	1					
ANR	2591146	Identifier	result		2591124	0					
ANR	2591147	Label	case AND :	455:2:11346:11354	2591124	2	True				
ANR	2591148	Identifier	AND		2591124	0					
ANR	2591149	CompoundStatement		8:3:103:113	2591124	3					
ANR	2591150	IdentifierDeclStatement	KeySet tmp ;	456:3:11361:11371	2591124	0	True				
ANR	2591151	IdentifierDecl	tmp		2591124	0					
ANR	2591152	IdentifierDeclType	KeySet		2591124	0					
ANR	2591153	Identifier	tmp		2591124	1					
ANR	2591154	IfStatement	"if ( ! left -> RunQuery ( qp , result ) || ! right -> RunQuery ( qp , tmp ) )"		2591124	1					
ANR	2591155	Condition	"! left -> RunQuery ( qp , result ) || ! right -> RunQuery ( qp , tmp )"	457:7:11380:11439	2591124	0	True				
ANR	2591156	OrExpression	"! left -> RunQuery ( qp , result ) || ! right -> RunQuery ( qp , tmp )"		2591124	0		||			
ANR	2591157	UnaryOperationExpression	"! left -> RunQuery ( qp , result )"		2591124	0					
ANR	2591158	UnaryOperator	!		2591124	0					
ANR	2591159	CallExpression	"left -> RunQuery ( qp , result )"		2591124	1					
ANR	2591160	Callee	left -> RunQuery		2591124	0					
ANR	2591161	PtrMemberAccess	left -> RunQuery		2591124	0					
ANR	2591162	Identifier	left		2591124	0					
ANR	2591163	Identifier	RunQuery		2591124	1					
ANR	2591164	ArgumentList	qp		2591124	1					
ANR	2591165	Argument	qp		2591124	0					
ANR	2591166	Identifier	qp		2591124	0					
ANR	2591167	Argument	result		2591124	1					
ANR	2591168	Identifier	result		2591124	0					
ANR	2591169	UnaryOperationExpression	"! right -> RunQuery ( qp , tmp )"		2591124	1					
ANR	2591170	UnaryOperator	!		2591124	0					
ANR	2591171	CallExpression	"right -> RunQuery ( qp , tmp )"		2591124	1					
ANR	2591172	Callee	right -> RunQuery		2591124	0					
ANR	2591173	PtrMemberAccess	right -> RunQuery		2591124	0					
ANR	2591174	Identifier	right		2591124	0					
ANR	2591175	Identifier	RunQuery		2591124	1					
ANR	2591176	ArgumentList	qp		2591124	1					
ANR	2591177	Argument	qp		2591124	0					
ANR	2591178	Identifier	qp		2591124	0					
ANR	2591179	Argument	tmp		2591124	1					
ANR	2591180	Identifier	tmp		2591124	0					
ANR	2591181	CompoundStatement		9:70:185:185	2591124	1					
ANR	2591182	ReturnStatement	return ( false ) ;	458:4:11449:11464	2591124	0	True				
ANR	2591183	Identifier	false		2591124	0					
ANR	2591184	ExpressionStatement	result . Intersect ( tmp )	460:3:11474:11497	2591124	2	True				
ANR	2591185	CallExpression	result . Intersect ( tmp )		2591124	0					
ANR	2591186	Callee	result . Intersect		2591124	0					
ANR	2591187	MemberAccess	result . Intersect		2591124	0					
ANR	2591188	Identifier	result		2591124	0					
ANR	2591189	Identifier	Intersect		2591124	1					
ANR	2591190	ArgumentList	tmp		2591124	1					
ANR	2591191	Argument	tmp		2591124	0					
ANR	2591192	Identifier	tmp		2591124	0					
ANR	2591193	ReturnStatement	return ( true ) ;	461:3:11502:11516	2591124	3	True				
ANR	2591194	Identifier	true		2591124	0					
ANR	2591195	Label	case OR :	464:2:11525:11532	2591124	4	True				
ANR	2591196	Identifier	OR		2591124	0					
ANR	2591197	ReturnStatement	"return ( left -> RunQuery ( qp , result ) && right -> RunQuery ( qp , result ) ) ;"	465:3:11538:11603	2591124	5	True				
ANR	2591198	AndExpression	"left -> RunQuery ( qp , result ) && right -> RunQuery ( qp , result )"		2591124	0		&&			
ANR	2591199	CallExpression	"left -> RunQuery ( qp , result )"		2591124	0					
ANR	2591200	Callee	left -> RunQuery		2591124	0					
ANR	2591201	PtrMemberAccess	left -> RunQuery		2591124	0					
ANR	2591202	Identifier	left		2591124	0					
ANR	2591203	Identifier	RunQuery		2591124	1					
ANR	2591204	ArgumentList	qp		2591124	1					
ANR	2591205	Argument	qp		2591124	0					
ANR	2591206	Identifier	qp		2591124	0					
ANR	2591207	Argument	result		2591124	1					
ANR	2591208	Identifier	result		2591124	0					
ANR	2591209	CallExpression	"right -> RunQuery ( qp , result )"		2591124	1					
ANR	2591210	Callee	right -> RunQuery		2591124	0					
ANR	2591211	PtrMemberAccess	right -> RunQuery		2591124	0					
ANR	2591212	Identifier	right		2591124	0					
ANR	2591213	Identifier	RunQuery		2591124	1					
ANR	2591214	ArgumentList	qp		2591124	1					
ANR	2591215	Argument	qp		2591124	0					
ANR	2591216	Identifier	qp		2591124	0					
ANR	2591217	Argument	result		2591124	1					
ANR	2591218	Identifier	result		2591124	0					
ANR	2591219	Label	default :	467:2:11608:11615	2591124	6	True				
ANR	2591220	Identifier	default		2591124	0					
ANR	2591221	ReturnStatement	return ( false ) ;	468:3:11620:11635	2591124	7	True				
ANR	2591222	Identifier	false		2591124	0					
ANR	2591223	ReturnType	bool		2591124	1					
ANR	2591224	Identifier	Query :: RunQuery		2591124	2					
ANR	2591225	ParameterList	"QueryProcessor & qp , KeySet & result"		2591124	3					
ANR	2591226	Parameter	QueryProcessor & qp	448:10:11220:11237	2591124	0	True				
ANR	2591227	ParameterType	QueryProcessor &		2591124	0					
ANR	2591228	Identifier	qp		2591124	1					
ANR	2591229	Parameter	KeySet & result	448:30:11240:11253	2591124	1	True				
ANR	2591230	ParameterType	KeySet &		2591124	0					
ANR	2591231	Identifier	result		2591124	1					
ANR	2591232	CFGEntryNode	ENTRY		2591124		True				
ANR	2591233	CFGExitNode	EXIT		2591124		True				
ANR	2591234	Symbol	op		2591124						
ANR	2591235	Symbol	* rectangles		2591124						
ANR	2591236	Symbol	left -> RunQuery		2591124						
ANR	2591237	Symbol	rectangles		2591124						
ANR	2591238	Symbol	false		2591124						
ANR	2591239	Symbol	right		2591124						
ANR	2591240	Symbol	result		2591124						
ANR	2591241	Symbol	left		2591124						
ANR	2591242	Symbol	tmp		2591124						
ANR	2591243	Symbol	true		2591124						
ANR	2591244	Symbol	right -> RunQuery		2591124						
ANR	2591245	Symbol	* left		2591124						
ANR	2591246	Symbol	* right		2591124						
ANR	2591247	Symbol	qp		2591124						
ANR	2591248	Symbol	qp . DoQuery		2591124						
ANR	2591249	Function	ClassAdIndex :: ClassAdIndex	475:0:11748:11780							
ANR	2591250	FunctionDef	ClassAdIndex :: ClassAdIndex ()		2591249	0					
ANR	2591251	CompoundStatement		476:0:11778:11780	2591249	0					
ANR	2591252	Identifier	ClassAdIndex :: ClassAdIndex		2591249	1					
ANR	2591253	ParameterList			2591249	2					
ANR	2591254	CFGEntryNode	ENTRY		2591249		True				
ANR	2591255	CFGExitNode	EXIT		2591249		True				
ANR	2591256	Function	ClassAdIndex :: ~ClassAdIndex	479:0:11783:11816							
ANR	2591257	FunctionDef	ClassAdIndex :: ~ClassAdIndex ()		2591256	0					
ANR	2591258	CompoundStatement		480:0:11814:11816	2591256	0					
ANR	2591259	Identifier	ClassAdIndex :: ~ClassAdIndex		2591256	1					
ANR	2591260	ParameterList			2591256	2					
ANR	2591261	CFGEntryNode	ENTRY		2591256		True				
ANR	2591262	CFGExitNode	EXIT		2591256		True				
ANR	2591263	Function	ClassAdNumericIndex :: ClassAdNumericIndex	487:0:11939:12007							
ANR	2591264	FunctionDef	ClassAdNumericIndex :: ClassAdNumericIndex ()		2591263	0					
ANR	2591265	CompoundStatement		488:0:11983:12007	2591263	0					
ANR	2591266	ExpressionStatement	intervalTree = NULL	489:1:11986:12005	2591263	0	True				
ANR	2591267	AssignmentExpression	intervalTree = NULL		2591263	0		=			
ANR	2591268	Identifier	intervalTree		2591263	0					
ANR	2591269	Identifier	NULL		2591263	1					
ANR	2591270	Identifier	ClassAdNumericIndex :: ClassAdNumericIndex		2591263	1					
ANR	2591271	ParameterList			2591263	2					
ANR	2591272	CFGEntryNode	ENTRY		2591263		True				
ANR	2591273	CFGExitNode	EXIT		2591263		True				
ANR	2591274	Symbol	NULL		2591263						
ANR	2591275	Symbol	intervalTree		2591263						
ANR	2591276	Function	ClassAdNumericIndex :: ~ClassAdNumericIndex	493:0:12011:12099							
ANR	2591277	FunctionDef	ClassAdNumericIndex :: ~ClassAdNumericIndex ()		2591276	0					
ANR	2591278	CompoundStatement		494:0:12056:12099	2591276	0					
ANR	2591279	IfStatement	if ( intervalTree )		2591276	0					
ANR	2591280	Condition	intervalTree	495:5:12063:12074	2591276	0	True				
ANR	2591281	Identifier	intervalTree		2591276	0					
ANR	2591282	Statement	delete	495:20:12078:12083	2591276	1	True				
ANR	2591283	ExpressionStatement	intervalTree	495:27:12085:12097	2591276	1	True				
ANR	2591284	Identifier	intervalTree		2591276	0					
ANR	2591285	Identifier	ClassAdNumericIndex :: ~ClassAdNumericIndex		2591276	1					
ANR	2591286	ParameterList			2591276	2					
ANR	2591287	CFGEntryNode	ENTRY		2591276		True				
ANR	2591288	CFGExitNode	EXIT		2591276		True				
ANR	2591289	Symbol	intervalTree		2591276						
ANR	2591290	Function	ClassAdNumericIndex :: MakeNumericIndex	498:0:12102:12353							
ANR	2591291	FunctionDef	ClassAdNumericIndex :: MakeNumericIndex (OneDimension & dim)		2591290	0					
ANR	2591292	CompoundStatement		500:0:12183:12353	2591290	0					
ANR	2591293	IdentifierDeclStatement	ClassAdNumericIndex * index = new ClassAdNumericIndex ( ) ;	501:1:12186:12241	2591290	0	True				
ANR	2591294	IdentifierDecl	* index = new ClassAdNumericIndex ( )		2591290	0					
ANR	2591295	IdentifierDeclType	ClassAdNumericIndex *		2591290	0					
ANR	2591296	Identifier	index		2591290	1					
ANR	2591297	AssignmentExpression	* index = new ClassAdNumericIndex ( )		2591290	2		=			
ANR	2591298	Identifier	index		2591290	0					
ANR	2591299	UnaryExpression	new ClassAdNumericIndex ( )		2591290	1					
ANR	2591300	IfStatement	if ( ! index )		2591290	1					
ANR	2591301	Condition	! index	502:5:12248:12253	2591290	0	True				
ANR	2591302	UnaryOperationExpression	! index		2591290	0					
ANR	2591303	UnaryOperator	!		2591290	0					
ANR	2591304	Identifier	index		2591290	1					
ANR	2591305	ReturnStatement	return ( NULL ) ;	502:14:12257:12271	2591290	1	True				
ANR	2591306	Identifier	NULL		2591290	0					
ANR	2591307	ExpressionStatement	index -> intervalTree = IntervalTree :: MakeIntervalTree ( dim )	503:1:12274:12333	2591290	2	True				
ANR	2591308	AssignmentExpression	index -> intervalTree = IntervalTree :: MakeIntervalTree ( dim )		2591290	0		=			
ANR	2591309	PtrMemberAccess	index -> intervalTree		2591290	0					
ANR	2591310	Identifier	index		2591290	0					
ANR	2591311	Identifier	intervalTree		2591290	1					
ANR	2591312	CallExpression	IntervalTree :: MakeIntervalTree ( dim )		2591290	1					
ANR	2591313	Callee	IntervalTree :: MakeIntervalTree		2591290	0					
ANR	2591314	Identifier	IntervalTree :: MakeIntervalTree		2591290	0					
ANR	2591315	ArgumentList	dim		2591290	1					
ANR	2591316	Argument	dim		2591290	0					
ANR	2591317	Identifier	dim		2591290	0					
ANR	2591318	ReturnStatement	return ( index ) ;	504:1:12336:12351	2591290	3	True				
ANR	2591319	Identifier	index		2591290	0					
ANR	2591320	ReturnType	ClassAdNumericIndex *		2591290	1					
ANR	2591321	Identifier	ClassAdNumericIndex :: MakeNumericIndex		2591290	2					
ANR	2591322	ParameterList	OneDimension & dim		2591290	3					
ANR	2591323	Parameter	OneDimension & dim	499:39:12163:12179	2591290	0	True				
ANR	2591324	ParameterType	OneDimension &		2591290	0					
ANR	2591325	Identifier	dim		2591290	1					
ANR	2591326	CFGEntryNode	ENTRY		2591290		True				
ANR	2591327	CFGExitNode	EXIT		2591290		True				
ANR	2591328	Symbol	index -> intervalTree		2591290						
ANR	2591329	Symbol	NULL		2591290						
ANR	2591330	Symbol	* index		2591290						
ANR	2591331	Symbol	dim		2591290						
ANR	2591332	Symbol	index		2591290						
ANR	2591333	Symbol	IntervalTree :: MakeIntervalTree		2591290						
ANR	2591334	Function	ClassAdNumericIndex :: Delete	507:0:12356:12504							
ANR	2591335	FunctionDef	"ClassAdNumericIndex :: Delete (int rkey , const Interval & interval)"		2591334	0					
ANR	2591336	CompoundStatement		509:0:12427:12504	2591334	0					
ANR	2591337	ReturnStatement	"return ( intervalTree && intervalTree -> DeleteInterval ( rkey , interval ) ) ;"	510:1:12430:12502	2591334	0	True				
ANR	2591338	AndExpression	"intervalTree && intervalTree -> DeleteInterval ( rkey , interval )"		2591334	0		&&			
ANR	2591339	Identifier	intervalTree		2591334	0					
ANR	2591340	CallExpression	"intervalTree -> DeleteInterval ( rkey , interval )"		2591334	1					
ANR	2591341	Callee	intervalTree -> DeleteInterval		2591334	0					
ANR	2591342	PtrMemberAccess	intervalTree -> DeleteInterval		2591334	0					
ANR	2591343	Identifier	intervalTree		2591334	0					
ANR	2591344	Identifier	DeleteInterval		2591334	1					
ANR	2591345	ArgumentList	rkey		2591334	1					
ANR	2591346	Argument	rkey		2591334	0					
ANR	2591347	Identifier	rkey		2591334	0					
ANR	2591348	Argument	interval		2591334	1					
ANR	2591349	Identifier	interval		2591334	0					
ANR	2591350	ReturnType	bool		2591334	1					
ANR	2591351	Identifier	ClassAdNumericIndex :: Delete		2591334	2					
ANR	2591352	ParameterList	"int rkey , const Interval & interval"		2591334	3					
ANR	2591353	Parameter	int rkey	508:29:12390:12397	2591334	0	True				
ANR	2591354	ParameterType	int		2591334	0					
ANR	2591355	Identifier	rkey		2591334	1					
ANR	2591356	Parameter	const Interval & interval	508:39:12400:12423	2591334	1	True				
ANR	2591357	ParameterType	const Interval &		2591334	0					
ANR	2591358	Identifier	interval		2591334	1					
ANR	2591359	CFGEntryNode	ENTRY		2591334		True				
ANR	2591360	CFGExitNode	EXIT		2591334		True				
ANR	2591361	Symbol	rkey		2591334						
ANR	2591362	Symbol	* intervalTree		2591334						
ANR	2591363	Symbol	intervalTree -> DeleteInterval		2591334						
ANR	2591364	Symbol	interval		2591334						
ANR	2591365	Symbol	intervalTree		2591334						
ANR	2591366	Function	ClassAdNumericIndex :: Filter	513:0:12507:12661							
ANR	2591367	FunctionDef	"ClassAdNumericIndex :: Filter (const Interval & interval , KeySet & result)"		2591366	0					
ANR	2591368	CompoundStatement		515:0:12585:12661	2591366	0					
ANR	2591369	ReturnStatement	"return ( intervalTree && intervalTree -> WindowQuery ( interval , result ) ) ;"	516:1:12588:12659	2591366	0	True				
ANR	2591370	AndExpression	"intervalTree && intervalTree -> WindowQuery ( interval , result )"		2591366	0		&&			
ANR	2591371	Identifier	intervalTree		2591366	0					
ANR	2591372	CallExpression	"intervalTree -> WindowQuery ( interval , result )"		2591366	1					
ANR	2591373	Callee	intervalTree -> WindowQuery		2591366	0					
ANR	2591374	PtrMemberAccess	intervalTree -> WindowQuery		2591366	0					
ANR	2591375	Identifier	intervalTree		2591366	0					
ANR	2591376	Identifier	WindowQuery		2591366	1					
ANR	2591377	ArgumentList	interval		2591366	1					
ANR	2591378	Argument	interval		2591366	0					
ANR	2591379	Identifier	interval		2591366	0					
ANR	2591380	Argument	result		2591366	1					
ANR	2591381	Identifier	result		2591366	0					
ANR	2591382	ReturnType	bool		2591366	1					
ANR	2591383	Identifier	ClassAdNumericIndex :: Filter		2591366	2					
ANR	2591384	ParameterList	"const Interval & interval , KeySet & result"		2591366	3					
ANR	2591385	Parameter	const Interval & interval	514:29:12541:12564	2591366	0	True				
ANR	2591386	ParameterType	const Interval &		2591366	0					
ANR	2591387	Identifier	interval		2591366	1					
ANR	2591388	Parameter	KeySet & result	514:55:12567:12580	2591366	1	True				
ANR	2591389	ParameterType	KeySet &		2591366	0					
ANR	2591390	Identifier	result		2591366	1					
ANR	2591391	CFGEntryNode	ENTRY		2591366		True				
ANR	2591392	CFGExitNode	EXIT		2591366		True				
ANR	2591393	Symbol	result		2591366						
ANR	2591394	Symbol	intervalTree -> WindowQuery		2591366						
ANR	2591395	Symbol	* intervalTree		2591366						
ANR	2591396	Symbol	interval		2591366						
ANR	2591397	Symbol	intervalTree		2591366						
ANR	2591398	Function	ClassAdNumericIndex :: FilterAll	519:0:12664:12899							
ANR	2591399	FunctionDef	ClassAdNumericIndex :: FilterAll (KeySet & result)		2591398	0					
ANR	2591400	CompoundStatement		521:0:12718:12899	2591398	0					
ANR	2591401	IdentifierDeclStatement	Interval interval ;	522:1:12721:12738	2591398	0	True				
ANR	2591402	IdentifierDecl	interval		2591398	0					
ANR	2591403	IdentifierDeclType	Interval		2591398	0					
ANR	2591404	Identifier	interval		2591398	1					
ANR	2591405	ExpressionStatement	interval . lower . SetRealValue ( - ( FLT_MAX ) )	523:1:12741:12782	2591398	1	True				
ANR	2591406	CallExpression	interval . lower . SetRealValue ( - ( FLT_MAX ) )		2591398	0					
ANR	2591407	Callee	interval . lower . SetRealValue		2591398	0					
ANR	2591408	MemberAccess	interval . lower . SetRealValue		2591398	0					
ANR	2591409	MemberAccess	interval . lower		2591398	0					
ANR	2591410	Identifier	interval		2591398	0					
ANR	2591411	Identifier	lower		2591398	1					
ANR	2591412	Identifier	SetRealValue		2591398	1					
ANR	2591413	ArgumentList	- ( FLT_MAX )		2591398	1					
ANR	2591414	Argument	- ( FLT_MAX )		2591398	0					
ANR	2591415	UnaryOperationExpression	- ( FLT_MAX )		2591398	0					
ANR	2591416	UnaryOperator	-		2591398	0					
ANR	2591417	Identifier	FLT_MAX		2591398	1					
ANR	2591418	ExpressionStatement	interval . upper . SetRealValue ( FLT_MAX )	524:1:12785:12823	2591398	2	True				
ANR	2591419	CallExpression	interval . upper . SetRealValue ( FLT_MAX )		2591398	0					
ANR	2591420	Callee	interval . upper . SetRealValue		2591398	0					
ANR	2591421	MemberAccess	interval . upper . SetRealValue		2591398	0					
ANR	2591422	MemberAccess	interval . upper		2591398	0					
ANR	2591423	Identifier	interval		2591398	0					
ANR	2591424	Identifier	upper		2591398	1					
ANR	2591425	Identifier	SetRealValue		2591398	1					
ANR	2591426	ArgumentList	FLT_MAX		2591398	1					
ANR	2591427	Argument	FLT_MAX		2591398	0					
ANR	2591428	Identifier	FLT_MAX		2591398	0					
ANR	2591429	ReturnStatement	"return ( intervalTree && intervalTree -> WindowQuery ( interval , result ) ) ;"	525:1:12826:12897	2591398	3	True				
ANR	2591430	AndExpression	"intervalTree && intervalTree -> WindowQuery ( interval , result )"		2591398	0		&&			
ANR	2591431	Identifier	intervalTree		2591398	0					
ANR	2591432	CallExpression	"intervalTree -> WindowQuery ( interval , result )"		2591398	1					
ANR	2591433	Callee	intervalTree -> WindowQuery		2591398	0					
ANR	2591434	PtrMemberAccess	intervalTree -> WindowQuery		2591398	0					
ANR	2591435	Identifier	intervalTree		2591398	0					
ANR	2591436	Identifier	WindowQuery		2591398	1					
ANR	2591437	ArgumentList	interval		2591398	1					
ANR	2591438	Argument	interval		2591398	0					
ANR	2591439	Identifier	interval		2591398	0					
ANR	2591440	Argument	result		2591398	1					
ANR	2591441	Identifier	result		2591398	0					
ANR	2591442	ReturnType	bool		2591398	1					
ANR	2591443	Identifier	ClassAdNumericIndex :: FilterAll		2591398	2					
ANR	2591444	ParameterList	KeySet & result		2591398	3					
ANR	2591445	Parameter	KeySet & result	520:32:12701:12714	2591398	0	True				
ANR	2591446	ParameterType	KeySet &		2591398	0					
ANR	2591447	Identifier	result		2591398	1					
ANR	2591448	CFGEntryNode	ENTRY		2591398		True				
ANR	2591449	CFGExitNode	EXIT		2591398		True				
ANR	2591450	Symbol	result		2591398						
ANR	2591451	Symbol	intervalTree -> WindowQuery		2591398						
ANR	2591452	Symbol	FLT_MAX		2591398						
ANR	2591453	Symbol	* intervalTree		2591398						
ANR	2591454	Symbol	interval		2591398						
ANR	2591455	Symbol	interval . upper		2591398						
ANR	2591456	Symbol	interval . lower		2591398						
ANR	2591457	Symbol	intervalTree		2591398						
ANR	2591458	Function	ClassAdStringIndex :: ClassAdStringIndex	531:0:13013:13057							
ANR	2591459	FunctionDef	ClassAdStringIndex :: ClassAdStringIndex ()		2591458	0					
ANR	2591460	CompoundStatement		532:0:13055:13057	2591458	0					
ANR	2591461	Identifier	ClassAdStringIndex :: ClassAdStringIndex		2591458	1					
ANR	2591462	ParameterList			2591458	2					
ANR	2591463	CFGEntryNode	ENTRY		2591458		True				
ANR	2591464	CFGExitNode	EXIT		2591458		True				
ANR	2591465	Function	ClassAdStringIndex :: ~ClassAdStringIndex	535:0:13060:13105							
ANR	2591466	FunctionDef	ClassAdStringIndex :: ~ClassAdStringIndex ()		2591465	0					
ANR	2591467	CompoundStatement		536:0:13103:13105	2591465	0					
ANR	2591468	Identifier	ClassAdStringIndex :: ~ClassAdStringIndex		2591465	1					
ANR	2591469	ParameterList			2591465	2					
ANR	2591470	CFGEntryNode	ENTRY		2591465		True				
ANR	2591471	CFGExitNode	EXIT		2591465		True				
ANR	2591472	Function	ClassAdStringIndex :: MakeStringIndex	539:0:13108:13666							
ANR	2591473	FunctionDef	ClassAdStringIndex :: MakeStringIndex (OneDimension & dim)		2591472	0					
ANR	2591474	CompoundStatement		541:0:13186:13666	2591472	0					
ANR	2591475	IdentifierDeclStatement	ClassAdStringIndex * si = new ClassAdStringIndex ( ) ;	542:1:13189:13240	2591472	0	True				
ANR	2591476	IdentifierDecl	* si = new ClassAdStringIndex ( )		2591472	0					
ANR	2591477	IdentifierDeclType	ClassAdStringIndex *		2591472	0					
ANR	2591478	Identifier	si		2591472	1					
ANR	2591479	AssignmentExpression	* si = new ClassAdStringIndex ( )		2591472	2		=			
ANR	2591480	Identifier	si		2591472	0					
ANR	2591481	UnaryExpression	new ClassAdStringIndex ( )		2591472	1					
ANR	2591482	IdentifierDeclStatement	OneDimension :: iterator itr ;	543:1:13243:13269	2591472	1	True				
ANR	2591483	IdentifierDecl	itr		2591472	0					
ANR	2591484	IdentifierDeclType	OneDimension :: iterator		2591472	0					
ANR	2591485	Identifier	itr		2591472	1					
ANR	2591486	IdentifierDeclStatement	StringIndex :: iterator sitr ;	544:1:13272:13298	2591472	2	True				
ANR	2591487	IdentifierDecl	sitr		2591472	0					
ANR	2591488	IdentifierDeclType	StringIndex :: iterator		2591472	0					
ANR	2591489	Identifier	sitr		2591472	1					
ANR	2591490	IdentifierDeclStatement	string str ;	545:1:13301:13315	2591472	3	True				
ANR	2591491	IdentifierDecl	str		2591472	0					
ANR	2591492	IdentifierDeclType	string		2591472	0					
ANR	2591493	Identifier	str		2591472	1					
ANR	2591494	IfStatement	if ( ! si )		2591472	4					
ANR	2591495	Condition	! si	547:5:13323:13325	2591472	0	True				
ANR	2591496	UnaryOperationExpression	! si		2591472	0					
ANR	2591497	UnaryOperator	!		2591472	0					
ANR	2591498	Identifier	si		2591472	1					
ANR	2591499	ReturnStatement	return ( NULL ) ;	547:11:13329:13343	2591472	1	True				
ANR	2591500	Identifier	NULL		2591472	0					
ANR	2591501	ForStatement	for ( itr = dim . begin ( ) ; itr != dim . end ( ) ; itr ++ )		2591472	5					
ANR	2591502	ForInit	itr = dim . begin ( ) ;	548:6:13351:13369	2591472	0	True				
ANR	2591503	AssignmentExpression	itr = dim . begin ( )		2591472	0		=			
ANR	2591504	Identifier	itr		2591472	0					
ANR	2591505	CallExpression	dim . begin ( )		2591472	1					
ANR	2591506	Callee	dim . begin		2591472	0					
ANR	2591507	MemberAccess	dim . begin		2591472	0					
ANR	2591508	Identifier	dim		2591472	0					
ANR	2591509	Identifier	begin		2591472	1					
ANR	2591510	ArgumentList			2591472	1					
ANR	2591511	Condition	itr != dim . end ( )	548:26:13371:13387	2591472	1	True				
ANR	2591512	EqualityExpression	itr != dim . end ( )		2591472	0		!=			
ANR	2591513	Identifier	itr		2591472	0					
ANR	2591514	CallExpression	dim . end ( )		2591472	1					
ANR	2591515	Callee	dim . end		2591472	0					
ANR	2591516	MemberAccess	dim . end		2591472	0					
ANR	2591517	Identifier	dim		2591472	0					
ANR	2591518	Identifier	end		2591472	1					
ANR	2591519	ArgumentList			2591472	1					
ANR	2591520	PostIncDecOperationExpression	itr ++	548:45:13390:13394	2591472	2	True				
ANR	2591521	Identifier	itr		2591472	0					
ANR	2591522	IncDec	++		2591472	1					
ANR	2591523	CompoundStatement		8:53:211:211	2591472	3					
ANR	2591524	ExpressionStatement	itr -> second . lower . IsStringValue ( str )	549:2:13402:13440	2591472	0	True				
ANR	2591525	CallExpression	itr -> second . lower . IsStringValue ( str )		2591472	0					
ANR	2591526	Callee	itr -> second . lower . IsStringValue		2591472	0					
ANR	2591527	MemberAccess	itr -> second . lower . IsStringValue		2591472	0					
ANR	2591528	MemberAccess	itr -> second . lower		2591472	0					
ANR	2591529	PtrMemberAccess	itr -> second		2591472	0					
ANR	2591530	Identifier	itr		2591472	0					
ANR	2591531	Identifier	second		2591472	1					
ANR	2591532	Identifier	lower		2591472	1					
ANR	2591533	Identifier	IsStringValue		2591472	1					
ANR	2591534	ArgumentList	str		2591472	1					
ANR	2591535	Argument	str		2591472	0					
ANR	2591536	Identifier	str		2591472	0					
ANR	2591537	IfStatement	if ( ( sitr = si -> stringIndex . find ( str ) ) == si -> stringIndex . end ( ) )		2591472	1					
ANR	2591538	Condition	( sitr = si -> stringIndex . find ( str ) ) == si -> stringIndex . end ( )	550:6:13448:13511	2591472	0	True				
ANR	2591539	EqualityExpression	( sitr = si -> stringIndex . find ( str ) ) == si -> stringIndex . end ( )		2591472	0		==			
ANR	2591540	AssignmentExpression	sitr = si -> stringIndex . find ( str )		2591472	0		=			
ANR	2591541	Identifier	sitr		2591472	0					
ANR	2591542	CallExpression	si -> stringIndex . find ( str )		2591472	1					
ANR	2591543	Callee	si -> stringIndex . find		2591472	0					
ANR	2591544	MemberAccess	si -> stringIndex . find		2591472	0					
ANR	2591545	PtrMemberAccess	si -> stringIndex		2591472	0					
ANR	2591546	Identifier	si		2591472	0					
ANR	2591547	Identifier	stringIndex		2591472	1					
ANR	2591548	Identifier	find		2591472	1					
ANR	2591549	ArgumentList	str		2591472	1					
ANR	2591550	Argument	str		2591472	0					
ANR	2591551	Identifier	str		2591472	0					
ANR	2591552	CallExpression	si -> stringIndex . end ( )		2591472	1					
ANR	2591553	Callee	si -> stringIndex . end		2591472	0					
ANR	2591554	MemberAccess	si -> stringIndex . end		2591472	0					
ANR	2591555	PtrMemberAccess	si -> stringIndex		2591472	0					
ANR	2591556	Identifier	si		2591472	0					
ANR	2591557	Identifier	stringIndex		2591472	1					
ANR	2591558	Identifier	end		2591472	1					
ANR	2591559	ArgumentList			2591472	1					
ANR	2591560	CompoundStatement		11:3:333:348	2591472	1					
ANR	2591561	IdentifierDeclStatement	IndexEntries ie ;	551:3:13520:13535	2591472	0	True				
ANR	2591562	IdentifierDecl	ie		2591472	0					
ANR	2591563	IdentifierDeclType	IndexEntries		2591472	0					
ANR	2591564	Identifier	ie		2591472	1					
ANR	2591565	ExpressionStatement	ie . insert ( itr -> first )	552:3:13540:13563	2591472	1	True				
ANR	2591566	CallExpression	ie . insert ( itr -> first )		2591472	0					
ANR	2591567	Callee	ie . insert		2591472	0					
ANR	2591568	MemberAccess	ie . insert		2591472	0					
ANR	2591569	Identifier	ie		2591472	0					
ANR	2591570	Identifier	insert		2591472	1					
ANR	2591571	ArgumentList	itr -> first		2591472	1					
ANR	2591572	Argument	itr -> first		2591472	0					
ANR	2591573	PtrMemberAccess	itr -> first		2591472	0					
ANR	2591574	Identifier	itr		2591472	0					
ANR	2591575	Identifier	first		2591472	1					
ANR	2591576	ExpressionStatement	si -> stringIndex [ str ] = ie	553:3:13568:13593	2591472	2	True				
ANR	2591577	AssignmentExpression	si -> stringIndex [ str ] = ie		2591472	0		=			
ANR	2591578	ArrayIndexing	si -> stringIndex [ str ]		2591472	0					
ANR	2591579	PtrMemberAccess	si -> stringIndex		2591472	0					
ANR	2591580	Identifier	si		2591472	0					
ANR	2591581	Identifier	stringIndex		2591472	1					
ANR	2591582	Identifier	str		2591472	1					
ANR	2591583	Identifier	ie		2591472	1					
ANR	2591584	ElseStatement	else		2591472	0					
ANR	2591585	CompoundStatement		14:9:417:417	2591472	0					
ANR	2591586	ExpressionStatement	sitr -> second . insert ( itr -> first )	555:3:13609:13642	2591472	0	True				
ANR	2591587	CallExpression	sitr -> second . insert ( itr -> first )		2591472	0					
ANR	2591588	Callee	sitr -> second . insert		2591472	0					
ANR	2591589	MemberAccess	sitr -> second . insert		2591472	0					
ANR	2591590	PtrMemberAccess	sitr -> second		2591472	0					
ANR	2591591	Identifier	sitr		2591472	0					
ANR	2591592	Identifier	second		2591472	1					
ANR	2591593	Identifier	insert		2591472	1					
ANR	2591594	ArgumentList	itr -> first		2591472	1					
ANR	2591595	Argument	itr -> first		2591472	0					
ANR	2591596	PtrMemberAccess	itr -> first		2591472	0					
ANR	2591597	Identifier	itr		2591472	0					
ANR	2591598	Identifier	first		2591472	1					
ANR	2591599	ReturnStatement	return ( si ) ;	558:1:13652:13664	2591472	6	True				
ANR	2591600	Identifier	si		2591472	0					
ANR	2591601	ReturnType	ClassAdStringIndex *		2591472	1					
ANR	2591602	Identifier	ClassAdStringIndex :: MakeStringIndex		2591472	2					
ANR	2591603	ParameterList	OneDimension & dim		2591472	3					
ANR	2591604	Parameter	OneDimension & dim	540:37:13166:13182	2591472	0	True				
ANR	2591605	ParameterType	OneDimension &		2591472	0					
ANR	2591606	Identifier	dim		2591472	1					
ANR	2591607	CFGEntryNode	ENTRY		2591472		True				
ANR	2591608	CFGExitNode	EXIT		2591472		True				
ANR	2591609	Symbol	dim . end		2591472						
ANR	2591610	Symbol	* * si		2591472						
ANR	2591611	Symbol	sitr		2591472						
ANR	2591612	Symbol	si -> stringIndex		2591472						
ANR	2591613	Symbol	si -> stringIndex . end		2591472						
ANR	2591614	Symbol	sitr -> second		2591472						
ANR	2591615	Symbol	NULL		2591472						
ANR	2591616	Symbol	itr		2591472						
ANR	2591617	Symbol	* si -> stringIndex		2591472						
ANR	2591618	Symbol	dim		2591472						
ANR	2591619	Symbol	* itr		2591472						
ANR	2591620	Symbol	* sitr		2591472						
ANR	2591621	Symbol	str		2591472						
ANR	2591622	Symbol	itr -> second . lower		2591472						
ANR	2591623	Symbol	si -> stringIndex . find		2591472						
ANR	2591624	Symbol	dim . begin		2591472						
ANR	2591625	Symbol	si		2591472						
ANR	2591626	Symbol	itr -> first		2591472						
ANR	2591627	Symbol	* str		2591472						
ANR	2591628	Symbol	ie		2591472						
ANR	2591629	Symbol	itr -> second		2591472						
ANR	2591630	Symbol	* si		2591472						
ANR	2591631	Function	ClassAdStringIndex :: Delete	562:0:13670:13984							
ANR	2591632	FunctionDef	"ClassAdStringIndex :: Delete (int rkey , const Interval & interval)"		2591631	0					
ANR	2591633	CompoundStatement		564:0:13740:13984	2591631	0					
ANR	2591634	IdentifierDeclStatement	string str ;	565:1:13743:13757	2591631	0	True				
ANR	2591635	IdentifierDecl	str		2591631	0					
ANR	2591636	IdentifierDeclType	string		2591631	0					
ANR	2591637	Identifier	str		2591631	1					
ANR	2591638	IdentifierDeclStatement	StringIndex :: iterator sitr ;	566:1:13760:13786	2591631	1	True				
ANR	2591639	IdentifierDecl	sitr		2591631	0					
ANR	2591640	IdentifierDeclType	StringIndex :: iterator		2591631	0					
ANR	2591641	Identifier	sitr		2591631	1					
ANR	2591642	IfStatement	if ( ! interval . lower . IsStringValue ( str ) )		2591631	2					
ANR	2591643	Condition	! interval . lower . IsStringValue ( str )	568:5:13794:13829	2591631	0	True				
ANR	2591644	UnaryOperationExpression	! interval . lower . IsStringValue ( str )		2591631	0					
ANR	2591645	UnaryOperator	!		2591631	0					
ANR	2591646	CallExpression	interval . lower . IsStringValue ( str )		2591631	1					
ANR	2591647	Callee	interval . lower . IsStringValue		2591631	0					
ANR	2591648	MemberAccess	interval . lower . IsStringValue		2591631	0					
ANR	2591649	MemberAccess	interval . lower		2591631	0					
ANR	2591650	Identifier	interval		2591631	0					
ANR	2591651	Identifier	lower		2591631	1					
ANR	2591652	Identifier	IsStringValue		2591631	1					
ANR	2591653	ArgumentList	str		2591631	1					
ANR	2591654	Argument	str		2591631	0					
ANR	2591655	Identifier	str		2591631	0					
ANR	2591656	ReturnStatement	return ( false ) ;	568:44:13833:13848	2591631	1	True				
ANR	2591657	Identifier	false		2591631	0					
ANR	2591658	IfStatement	if ( ( sitr = stringIndex . find ( str ) ) == stringIndex . end ( ) )		2591631	3					
ANR	2591659	Condition	( sitr = stringIndex . find ( str ) ) == stringIndex . end ( )	569:5:13855:13910	2591631	0	True				
ANR	2591660	EqualityExpression	( sitr = stringIndex . find ( str ) ) == stringIndex . end ( )		2591631	0		==			
ANR	2591661	AssignmentExpression	sitr = stringIndex . find ( str )		2591631	0		=			
ANR	2591662	Identifier	sitr		2591631	0					
ANR	2591663	CallExpression	stringIndex . find ( str )		2591631	1					
ANR	2591664	Callee	stringIndex . find		2591631	0					
ANR	2591665	MemberAccess	stringIndex . find		2591631	0					
ANR	2591666	Identifier	stringIndex		2591631	0					
ANR	2591667	Identifier	find		2591631	1					
ANR	2591668	ArgumentList	str		2591631	1					
ANR	2591669	Argument	str		2591631	0					
ANR	2591670	Identifier	str		2591631	0					
ANR	2591671	CallExpression	stringIndex . end ( )		2591631	1					
ANR	2591672	Callee	stringIndex . end		2591631	0					
ANR	2591673	MemberAccess	stringIndex . end		2591631	0					
ANR	2591674	Identifier	stringIndex		2591631	0					
ANR	2591675	Identifier	end		2591631	1					
ANR	2591676	ArgumentList			2591631	1					
ANR	2591677	CompoundStatement		6:64:173:173	2591631	1					
ANR	2591678	ReturnStatement	return ( false ) ;	570:2:13918:13933	2591631	0	True				
ANR	2591679	Identifier	false		2591631	0					
ANR	2591680	ExpressionStatement	sitr -> second . erase ( rkey )	572:1:13939:13965	2591631	4	True				
ANR	2591681	CallExpression	sitr -> second . erase ( rkey )		2591631	0					
ANR	2591682	Callee	sitr -> second . erase		2591631	0					
ANR	2591683	MemberAccess	sitr -> second . erase		2591631	0					
ANR	2591684	PtrMemberAccess	sitr -> second		2591631	0					
ANR	2591685	Identifier	sitr		2591631	0					
ANR	2591686	Identifier	second		2591631	1					
ANR	2591687	Identifier	erase		2591631	1					
ANR	2591688	ArgumentList	rkey		2591631	1					
ANR	2591689	Argument	rkey		2591631	0					
ANR	2591690	Identifier	rkey		2591631	0					
ANR	2591691	ReturnStatement	return ( true ) ;	573:1:13968:13982	2591631	5	True				
ANR	2591692	Identifier	true		2591631	0					
ANR	2591693	ReturnType	bool		2591631	1					
ANR	2591694	Identifier	ClassAdStringIndex :: Delete		2591631	2					
ANR	2591695	ParameterList	"int rkey , const Interval & interval"		2591631	3					
ANR	2591696	Parameter	int rkey	563:28:13703:13710	2591631	0	True				
ANR	2591697	ParameterType	int		2591631	0					
ANR	2591698	Identifier	rkey		2591631	1					
ANR	2591699	Parameter	const Interval & interval	563:38:13713:13736	2591631	1	True				
ANR	2591700	ParameterType	const Interval &		2591631	0					
ANR	2591701	Identifier	interval		2591631	1					
ANR	2591702	CFGEntryNode	ENTRY		2591631		True				
ANR	2591703	CFGExitNode	EXIT		2591631		True				
ANR	2591704	Symbol	stringIndex		2591631						
ANR	2591705	Symbol	sitr		2591631						
ANR	2591706	Symbol	sitr -> second		2591631						
ANR	2591707	Symbol	false		2591631						
ANR	2591708	Symbol	interval . lower . IsStringValue		2591631						
ANR	2591709	Symbol	* sitr		2591631						
ANR	2591710	Symbol	str		2591631						
ANR	2591711	Symbol	stringIndex . find		2591631						
ANR	2591712	Symbol	rkey		2591631						
ANR	2591713	Symbol	true		2591631						
ANR	2591714	Symbol	interval		2591631						
ANR	2591715	Symbol	stringIndex . end		2591631						
ANR	2591716	Symbol	interval . lower		2591631						
ANR	2591717	Function	ClassAdStringIndex :: Filter	577:0:13988:14991							
ANR	2591718	FunctionDef	"ClassAdStringIndex :: Filter (const Interval & interval , KeySet & result)"		2591717	0					
ANR	2591719	CompoundStatement		579:0:14064:14991	2591717	0					
ANR	2591720	IdentifierDeclStatement	string str ;	580:1:14067:14081	2591717	0	True				
ANR	2591721	IdentifierDecl	str		2591717	0					
ANR	2591722	IdentifierDeclType	string		2591717	0					
ANR	2591723	Identifier	str		2591717	1					
ANR	2591724	IdentifierDeclStatement	"StringIndex :: iterator bitr , eitr ;"	581:1:14084:14116	2591717	1	True				
ANR	2591725	IdentifierDecl	bitr		2591717	0					
ANR	2591726	IdentifierDeclType	StringIndex :: iterator		2591717	0					
ANR	2591727	Identifier	bitr		2591717	1					
ANR	2591728	IdentifierDecl	eitr		2591717	1					
ANR	2591729	IdentifierDeclType	StringIndex :: iterator		2591717	0					
ANR	2591730	Identifier	eitr		2591717	1					
ANR	2591731	IdentifierDeclStatement	IndexEntries :: iterator nitr ;	582:1:14119:14146	2591717	2	True				
ANR	2591732	IdentifierDecl	nitr		2591717	0					
ANR	2591733	IdentifierDeclType	IndexEntries :: iterator		2591717	0					
ANR	2591734	Identifier	nitr		2591717	1					
ANR	2591735	IfStatement	if ( ! interval . lower . IsStringValue ( str ) )		2591717	3					
ANR	2591736	Condition	! interval . lower . IsStringValue ( str )	585:5:14214:14249	2591717	0	True				
ANR	2591737	UnaryOperationExpression	! interval . lower . IsStringValue ( str )		2591717	0					
ANR	2591738	UnaryOperator	!		2591717	0					
ANR	2591739	CallExpression	interval . lower . IsStringValue ( str )		2591717	1					
ANR	2591740	Callee	interval . lower . IsStringValue		2591717	0					
ANR	2591741	MemberAccess	interval . lower . IsStringValue		2591717	0					
ANR	2591742	MemberAccess	interval . lower		2591717	0					
ANR	2591743	Identifier	interval		2591717	0					
ANR	2591744	Identifier	lower		2591717	1					
ANR	2591745	Identifier	IsStringValue		2591717	1					
ANR	2591746	ArgumentList	str		2591717	1					
ANR	2591747	Argument	str		2591717	0					
ANR	2591748	Identifier	str		2591717	0					
ANR	2591749	CompoundStatement		7:44:188:188	2591717	1					
ANR	2591750	ExpressionStatement	bitr = stringIndex . begin ( )	586:2:14257:14284	2591717	0	True				
ANR	2591751	AssignmentExpression	bitr = stringIndex . begin ( )		2591717	0		=			
ANR	2591752	Identifier	bitr		2591717	0					
ANR	2591753	CallExpression	stringIndex . begin ( )		2591717	1					
ANR	2591754	Callee	stringIndex . begin		2591717	0					
ANR	2591755	MemberAccess	stringIndex . begin		2591717	0					
ANR	2591756	Identifier	stringIndex		2591717	0					
ANR	2591757	Identifier	begin		2591717	1					
ANR	2591758	ArgumentList			2591717	1					
ANR	2591759	ElseStatement	else		2591717	0					
ANR	2591760	IfStatement	if ( interval . openLower )		2591717	0					
ANR	2591761	Condition	interval . openLower	587:12:14298:14315	2591717	0	True				
ANR	2591762	MemberAccess	interval . openLower		2591717	0					
ANR	2591763	Identifier	interval		2591717	0					
ANR	2591764	Identifier	openLower		2591717	1					
ANR	2591765	CompoundStatement		9:33:254:254	2591717	1					
ANR	2591766	ExpressionStatement	bitr = stringIndex . upper_bound ( str )	588:2:14323:14360	2591717	0	True				
ANR	2591767	AssignmentExpression	bitr = stringIndex . upper_bound ( str )		2591717	0		=			
ANR	2591768	Identifier	bitr		2591717	0					
ANR	2591769	CallExpression	stringIndex . upper_bound ( str )		2591717	1					
ANR	2591770	Callee	stringIndex . upper_bound		2591717	0					
ANR	2591771	MemberAccess	stringIndex . upper_bound		2591717	0					
ANR	2591772	Identifier	stringIndex		2591717	0					
ANR	2591773	Identifier	upper_bound		2591717	1					
ANR	2591774	ArgumentList	str		2591717	1					
ANR	2591775	Argument	str		2591717	0					
ANR	2591776	Identifier	str		2591717	0					
ANR	2591777	ElseStatement	else		2591717	0					
ANR	2591778	CompoundStatement		11:8:305:305	2591717	0					
ANR	2591779	ExpressionStatement	bitr = stringIndex . lower_bound ( str )	590:2:14374:14411	2591717	0	True				
ANR	2591780	AssignmentExpression	bitr = stringIndex . lower_bound ( str )		2591717	0		=			
ANR	2591781	Identifier	bitr		2591717	0					
ANR	2591782	CallExpression	stringIndex . lower_bound ( str )		2591717	1					
ANR	2591783	Callee	stringIndex . lower_bound		2591717	0					
ANR	2591784	MemberAccess	stringIndex . lower_bound		2591717	0					
ANR	2591785	Identifier	stringIndex		2591717	0					
ANR	2591786	Identifier	lower_bound		2591717	1					
ANR	2591787	ArgumentList	str		2591717	1					
ANR	2591788	Argument	str		2591717	0					
ANR	2591789	Identifier	str		2591717	0					
ANR	2591790	IfStatement	if ( ! interval . upper . IsStringValue ( str ) )		2591717	4					
ANR	2591791	Condition	! interval . upper . IsStringValue ( str )	594:5:14482:14517	2591717	0	True				
ANR	2591792	UnaryOperationExpression	! interval . upper . IsStringValue ( str )		2591717	0					
ANR	2591793	UnaryOperator	!		2591717	0					
ANR	2591794	CallExpression	interval . upper . IsStringValue ( str )		2591717	1					
ANR	2591795	Callee	interval . upper . IsStringValue		2591717	0					
ANR	2591796	MemberAccess	interval . upper . IsStringValue		2591717	0					
ANR	2591797	MemberAccess	interval . upper		2591717	0					
ANR	2591798	Identifier	interval		2591717	0					
ANR	2591799	Identifier	upper		2591717	1					
ANR	2591800	Identifier	IsStringValue		2591717	1					
ANR	2591801	ArgumentList	str		2591717	1					
ANR	2591802	Argument	str		2591717	0					
ANR	2591803	Identifier	str		2591717	0					
ANR	2591804	CompoundStatement		16:44:456:456	2591717	1					
ANR	2591805	ExpressionStatement	eitr = stringIndex . end ( )	595:2:14525:14550	2591717	0	True				
ANR	2591806	AssignmentExpression	eitr = stringIndex . end ( )		2591717	0		=			
ANR	2591807	Identifier	eitr		2591717	0					
ANR	2591808	CallExpression	stringIndex . end ( )		2591717	1					
ANR	2591809	Callee	stringIndex . end		2591717	0					
ANR	2591810	MemberAccess	stringIndex . end		2591717	0					
ANR	2591811	Identifier	stringIndex		2591717	0					
ANR	2591812	Identifier	end		2591717	1					
ANR	2591813	ArgumentList			2591717	1					
ANR	2591814	ElseStatement	else		2591717	0					
ANR	2591815	CompoundStatement		18:8:495:495	2591717	0					
ANR	2591816	IfStatement	if ( ( eitr = stringIndex . find ( str ) ) != stringIndex . end ( ) )		2591717	0					
ANR	2591817	Condition	( eitr = stringIndex . find ( str ) ) != stringIndex . end ( )	597:6:14568:14623	2591717	0	True				
ANR	2591818	EqualityExpression	( eitr = stringIndex . find ( str ) ) != stringIndex . end ( )		2591717	0		!=			
ANR	2591819	AssignmentExpression	eitr = stringIndex . find ( str )		2591717	0		=			
ANR	2591820	Identifier	eitr		2591717	0					
ANR	2591821	CallExpression	stringIndex . find ( str )		2591717	1					
ANR	2591822	Callee	stringIndex . find		2591717	0					
ANR	2591823	MemberAccess	stringIndex . find		2591717	0					
ANR	2591824	Identifier	stringIndex		2591717	0					
ANR	2591825	Identifier	find		2591717	1					
ANR	2591826	ArgumentList	str		2591717	1					
ANR	2591827	Argument	str		2591717	0					
ANR	2591828	Identifier	str		2591717	0					
ANR	2591829	CallExpression	stringIndex . end ( )		2591717	1					
ANR	2591830	Callee	stringIndex . end		2591717	0					
ANR	2591831	MemberAccess	stringIndex . end		2591717	0					
ANR	2591832	Identifier	stringIndex		2591717	0					
ANR	2591833	Identifier	end		2591717	1					
ANR	2591834	ArgumentList			2591717	1					
ANR	2591835	CompoundStatement		19:65:562:562	2591717	1					
ANR	2591836	IfStatement	if ( ! interval . openUpper )		2591717	0					
ANR	2591837	Condition	! interval . openUpper	598:7:14636:14654	2591717	0	True				
ANR	2591838	UnaryOperationExpression	! interval . openUpper		2591717	0					
ANR	2591839	UnaryOperator	!		2591717	0					
ANR	2591840	MemberAccess	interval . openUpper		2591717	1					
ANR	2591841	Identifier	interval		2591717	0					
ANR	2591842	Identifier	openUpper		2591717	1					
ANR	2591843	CompoundStatement		20:29:593:593	2591717	1					
ANR	2591844	ExpressionStatement	eitr ++	599:4:14664:14670	2591717	0	True				
ANR	2591845	PostIncDecOperationExpression	eitr ++		2591717	0					
ANR	2591846	Identifier	eitr		2591717	0					
ANR	2591847	IncDec	++		2591717	1					
ANR	2591848	ElseStatement	else		2591717	0					
ANR	2591849	CompoundStatement		23:9:621:621	2591717	0					
ANR	2591850	ExpressionStatement	eitr = stringIndex . upper_bound ( str )	602:3:14691:14728	2591717	0	True				
ANR	2591851	AssignmentExpression	eitr = stringIndex . upper_bound ( str )		2591717	0		=			
ANR	2591852	Identifier	eitr		2591717	0					
ANR	2591853	CallExpression	stringIndex . upper_bound ( str )		2591717	1					
ANR	2591854	Callee	stringIndex . upper_bound		2591717	0					
ANR	2591855	MemberAccess	stringIndex . upper_bound		2591717	0					
ANR	2591856	Identifier	stringIndex		2591717	0					
ANR	2591857	Identifier	upper_bound		2591717	1					
ANR	2591858	ArgumentList	str		2591717	1					
ANR	2591859	Argument	str		2591717	0					
ANR	2591860	Identifier	str		2591717	0					
ANR	2591861	ForStatement	for ( ; bitr != eitr ; bitr ++ )		2591717	5					
ANR	2591862	Condition	bitr != eitr	607:7:14794:14805	2591717	0	True				
ANR	2591863	EqualityExpression	bitr != eitr		2591717	0		!=			
ANR	2591864	Identifier	bitr		2591717	0					
ANR	2591865	Identifier	eitr		2591717	1					
ANR	2591866	PostIncDecOperationExpression	bitr ++	607:21:14808:14813	2591717	1	True				
ANR	2591867	Identifier	bitr		2591717	0					
ANR	2591868	IncDec	++		2591717	1					
ANR	2591869	CompoundStatement		29:30:752:752	2591717	2					
ANR	2591870	ForStatement	for ( nitr = bitr -> second . begin ( ) ; nitr != bitr -> second . end ( ) ; nitr ++ )		2591717	0					
ANR	2591871	ForInit	nitr = bitr -> second . begin ( ) ;	609:7:14873:14899	2591717	0	True				
ANR	2591872	AssignmentExpression	nitr = bitr -> second . begin ( )		2591717	0		=			
ANR	2591873	Identifier	nitr		2591717	0					
ANR	2591874	CallExpression	bitr -> second . begin ( )		2591717	1					
ANR	2591875	Callee	bitr -> second . begin		2591717	0					
ANR	2591876	MemberAccess	bitr -> second . begin		2591717	0					
ANR	2591877	PtrMemberAccess	bitr -> second		2591717	0					
ANR	2591878	Identifier	bitr		2591717	0					
ANR	2591879	Identifier	second		2591717	1					
ANR	2591880	Identifier	begin		2591717	1					
ANR	2591881	ArgumentList			2591717	1					
ANR	2591882	Condition	nitr != bitr -> second . end ( )	609:35:14901:14925	2591717	1	True				
ANR	2591883	EqualityExpression	nitr != bitr -> second . end ( )		2591717	0		!=			
ANR	2591884	Identifier	nitr		2591717	0					
ANR	2591885	CallExpression	bitr -> second . end ( )		2591717	1					
ANR	2591886	Callee	bitr -> second . end		2591717	0					
ANR	2591887	MemberAccess	bitr -> second . end		2591717	0					
ANR	2591888	PtrMemberAccess	bitr -> second		2591717	0					
ANR	2591889	Identifier	bitr		2591717	0					
ANR	2591890	Identifier	second		2591717	1					
ANR	2591891	Identifier	end		2591717	1					
ANR	2591892	ArgumentList			2591717	1					
ANR	2591893	PostIncDecOperationExpression	nitr ++	609:62:14928:14933	2591717	2	True				
ANR	2591894	Identifier	nitr		2591717	0					
ANR	2591895	IncDec	++		2591717	1					
ANR	2591896	CompoundStatement		31:71:872:872	2591717	3					
ANR	2591897	ExpressionStatement	result . Insert ( * nitr )	610:3:14942:14964	2591717	0	True				
ANR	2591898	CallExpression	result . Insert ( * nitr )		2591717	0					
ANR	2591899	Callee	result . Insert		2591717	0					
ANR	2591900	MemberAccess	result . Insert		2591717	0					
ANR	2591901	Identifier	result		2591717	0					
ANR	2591902	Identifier	Insert		2591717	1					
ANR	2591903	ArgumentList	* nitr		2591717	1					
ANR	2591904	Argument	* nitr		2591717	0					
ANR	2591905	UnaryOperationExpression	* nitr		2591717	0					
ANR	2591906	UnaryOperator	*		2591717	0					
ANR	2591907	Identifier	nitr		2591717	1					
ANR	2591908	ReturnStatement	return ( true ) ;	614:1:14975:14989	2591717	6	True				
ANR	2591909	Identifier	true		2591717	0					
ANR	2591910	ReturnType	bool		2591717	1					
ANR	2591911	Identifier	ClassAdStringIndex :: Filter		2591717	2					
ANR	2591912	ParameterList	"const Interval & interval , KeySet & result"		2591717	3					
ANR	2591913	Parameter	const Interval & interval	578:28:14021:14044	2591717	0	True				
ANR	2591914	ParameterType	const Interval &		2591717	0					
ANR	2591915	Identifier	interval		2591717	1					
ANR	2591916	Parameter	KeySet & result	578:54:14047:14060	2591717	1	True				
ANR	2591917	ParameterType	KeySet &		2591717	0					
ANR	2591918	Identifier	result		2591717	1					
ANR	2591919	CFGEntryNode	ENTRY		2591717		True				
ANR	2591920	CFGExitNode	EXIT		2591717		True				
ANR	2591921	Symbol	stringIndex		2591717						
ANR	2591922	Symbol	stringIndex . upper_bound		2591717						
ANR	2591923	Symbol	* bitr		2591717						
ANR	2591924	Symbol	bitr -> second . end		2591717						
ANR	2591925	Symbol	nitr		2591717						
ANR	2591926	Symbol	bitr		2591717						
ANR	2591927	Symbol	interval . lower . IsStringValue		2591717						
ANR	2591928	Symbol	eitr		2591717						
ANR	2591929	Symbol	stringIndex . lower_bound		2591717						
ANR	2591930	Symbol	* nitr		2591717						
ANR	2591931	Symbol	result		2591717						
ANR	2591932	Symbol	str		2591717						
ANR	2591933	Symbol	stringIndex . begin		2591717						
ANR	2591934	Symbol	bitr -> second		2591717						
ANR	2591935	Symbol	stringIndex . find		2591717						
ANR	2591936	Symbol	bitr -> second . begin		2591717						
ANR	2591937	Symbol	interval . upper . IsStringValue		2591717						
ANR	2591938	Symbol	true		2591717						
ANR	2591939	Symbol	interval		2591717						
ANR	2591940	Symbol	stringIndex . end		2591717						
ANR	2591941	Symbol	interval . openLower		2591717						
ANR	2591942	Symbol	interval . upper		2591717						
ANR	2591943	Symbol	interval . lower		2591717						
ANR	2591944	Symbol	interval . openUpper		2591717						
ANR	2591945	Function	ClassAdStringIndex :: FilterAll	617:0:14994:15184							
ANR	2591946	FunctionDef	ClassAdStringIndex :: FilterAll (KeySet & result)		2591945	0					
ANR	2591947	CompoundStatement		619:0:15047:15184	2591945	0					
ANR	2591948	IdentifierDeclStatement	Interval interval ;	620:1:15050:15067	2591945	0	True				
ANR	2591949	IdentifierDecl	interval		2591945	0					
ANR	2591950	IdentifierDeclType	Interval		2591945	0					
ANR	2591951	Identifier	interval		2591945	1					
ANR	2591952	ExpressionStatement	interval . lower . SetUndefinedValue ( )	621:1:15070:15105	2591945	1	True				
ANR	2591953	CallExpression	interval . lower . SetUndefinedValue ( )		2591945	0					
ANR	2591954	Callee	interval . lower . SetUndefinedValue		2591945	0					
ANR	2591955	MemberAccess	interval . lower . SetUndefinedValue		2591945	0					
ANR	2591956	MemberAccess	interval . lower		2591945	0					
ANR	2591957	Identifier	interval		2591945	0					
ANR	2591958	Identifier	lower		2591945	1					
ANR	2591959	Identifier	SetUndefinedValue		2591945	1					
ANR	2591960	ArgumentList			2591945	1					
ANR	2591961	ExpressionStatement	interval . upper . SetUndefinedValue ( )	622:1:15108:15143	2591945	2	True				
ANR	2591962	CallExpression	interval . upper . SetUndefinedValue ( )		2591945	0					
ANR	2591963	Callee	interval . upper . SetUndefinedValue		2591945	0					
ANR	2591964	MemberAccess	interval . upper . SetUndefinedValue		2591945	0					
ANR	2591965	MemberAccess	interval . upper		2591945	0					
ANR	2591966	Identifier	interval		2591945	0					
ANR	2591967	Identifier	upper		2591945	1					
ANR	2591968	Identifier	SetUndefinedValue		2591945	1					
ANR	2591969	ArgumentList			2591945	1					
ANR	2591970	ReturnStatement	"return ( Filter ( interval , result ) ) ;"	623:1:15146:15182	2591945	3	True				
ANR	2591971	CallExpression	"Filter ( interval , result )"		2591945	0					
ANR	2591972	Callee	Filter		2591945	0					
ANR	2591973	Identifier	Filter		2591945	0					
ANR	2591974	ArgumentList	interval		2591945	1					
ANR	2591975	Argument	interval		2591945	0					
ANR	2591976	Identifier	interval		2591945	0					
ANR	2591977	Argument	result		2591945	1					
ANR	2591978	Identifier	result		2591945	0					
ANR	2591979	ReturnType	bool		2591945	1					
ANR	2591980	Identifier	ClassAdStringIndex :: FilterAll		2591945	2					
ANR	2591981	ParameterList	KeySet & result		2591945	3					
ANR	2591982	Parameter	KeySet & result	618:31:15030:15043	2591945	0	True				
ANR	2591983	ParameterType	KeySet &		2591945	0					
ANR	2591984	Identifier	result		2591945	1					
ANR	2591985	CFGEntryNode	ENTRY		2591945		True				
ANR	2591986	CFGExitNode	EXIT		2591945		True				
ANR	2591987	Symbol	result		2591945						
ANR	2591988	Symbol	Filter		2591945						
ANR	2591989	Symbol	interval		2591945						
ANR	2591990	Symbol	interval . upper		2591945						
ANR	2591991	Symbol	interval . lower		2591945						
ANR	2591992	Function	ClassAdBooleanIndex :: ClassAdBooleanIndex	630:0:15286:15332							
ANR	2591993	FunctionDef	ClassAdBooleanIndex :: ClassAdBooleanIndex ()		2591992	0					
ANR	2591994	CompoundStatement		631:0:15330:15332	2591992	0					
ANR	2591995	Identifier	ClassAdBooleanIndex :: ClassAdBooleanIndex		2591992	1					
ANR	2591996	ParameterList			2591992	2					
ANR	2591997	CFGEntryNode	ENTRY		2591992		True				
ANR	2591998	CFGExitNode	EXIT		2591992		True				
ANR	2591999	Function	ClassAdBooleanIndex :: ~ClassAdBooleanIndex	634:0:15335:15382							
ANR	2592000	FunctionDef	ClassAdBooleanIndex :: ~ClassAdBooleanIndex ()		2591999	0					
ANR	2592001	CompoundStatement		635:0:15380:15382	2591999	0					
ANR	2592002	Identifier	ClassAdBooleanIndex :: ~ClassAdBooleanIndex		2591999	1					
ANR	2592003	ParameterList			2591999	2					
ANR	2592004	CFGEntryNode	ENTRY		2591999		True				
ANR	2592005	CFGExitNode	EXIT		2591999		True				
ANR	2592006	Function	ClassAdBooleanIndex :: MakeBooleanIndex	638:0:15385:15872							
ANR	2592007	FunctionDef	ClassAdBooleanIndex :: MakeBooleanIndex (OneDimension & dim)		2592006	0					
ANR	2592008	CompoundStatement		640:0:15465:15872	2592006	0					
ANR	2592009	IdentifierDeclStatement	ClassAdBooleanIndex * bi = new ClassAdBooleanIndex ( ) ;	641:1:15468:15520	2592006	0	True				
ANR	2592010	IdentifierDecl	* bi = new ClassAdBooleanIndex ( )		2592006	0					
ANR	2592011	IdentifierDeclType	ClassAdBooleanIndex *		2592006	0					
ANR	2592012	Identifier	bi		2592006	1					
ANR	2592013	AssignmentExpression	* bi = new ClassAdBooleanIndex ( )		2592006	2		=			
ANR	2592014	Identifier	bi		2592006	0					
ANR	2592015	UnaryExpression	new ClassAdBooleanIndex ( )		2592006	1					
ANR	2592016	IdentifierDeclStatement	OneDimension :: iterator itr ;	642:1:15523:15549	2592006	1	True				
ANR	2592017	IdentifierDecl	itr		2592006	0					
ANR	2592018	IdentifierDeclType	OneDimension :: iterator		2592006	0					
ANR	2592019	Identifier	itr		2592006	1					
ANR	2592020	IdentifierDeclStatement	"bool b1 , b2 ;"	643:1:15552:15567	2592006	2	True				
ANR	2592021	IdentifierDecl	b1		2592006	0					
ANR	2592022	IdentifierDeclType	bool		2592006	0					
ANR	2592023	Identifier	b1		2592006	1					
ANR	2592024	IdentifierDecl	b2		2592006	1					
ANR	2592025	IdentifierDeclType	bool		2592006	0					
ANR	2592026	Identifier	b2		2592006	1					
ANR	2592027	IfStatement	if ( ! bi )		2592006	3					
ANR	2592028	Condition	! bi	645:5:15575:15577	2592006	0	True				
ANR	2592029	UnaryOperationExpression	! bi		2592006	0					
ANR	2592030	UnaryOperator	!		2592006	0					
ANR	2592031	Identifier	bi		2592006	1					
ANR	2592032	ReturnStatement	return ( NULL ) ;	645:11:15581:15595	2592006	1	True				
ANR	2592033	Identifier	NULL		2592006	0					
ANR	2592034	ForStatement	for ( itr = dim . begin ( ) ; itr != dim . end ( ) ; itr ++ )		2592006	4					
ANR	2592035	ForInit	itr = dim . begin ( ) ;	646:6:15603:15621	2592006	0	True				
ANR	2592036	AssignmentExpression	itr = dim . begin ( )		2592006	0		=			
ANR	2592037	Identifier	itr		2592006	0					
ANR	2592038	CallExpression	dim . begin ( )		2592006	1					
ANR	2592039	Callee	dim . begin		2592006	0					
ANR	2592040	MemberAccess	dim . begin		2592006	0					
ANR	2592041	Identifier	dim		2592006	0					
ANR	2592042	Identifier	begin		2592006	1					
ANR	2592043	ArgumentList			2592006	1					
ANR	2592044	Condition	itr != dim . end ( )	646:26:15623:15639	2592006	1	True				
ANR	2592045	EqualityExpression	itr != dim . end ( )		2592006	0		!=			
ANR	2592046	Identifier	itr		2592006	0					
ANR	2592047	CallExpression	dim . end ( )		2592006	1					
ANR	2592048	Callee	dim . end		2592006	0					
ANR	2592049	MemberAccess	dim . end		2592006	0					
ANR	2592050	Identifier	dim		2592006	0					
ANR	2592051	Identifier	end		2592006	1					
ANR	2592052	ArgumentList			2592006	1					
ANR	2592053	PostIncDecOperationExpression	itr ++	646:45:15642:15646	2592006	2	True				
ANR	2592054	Identifier	itr		2592006	0					
ANR	2592055	IncDec	++		2592006	1					
ANR	2592056	CompoundStatement		7:53:184:184	2592006	3					
ANR	2592057	IfStatement	if ( itr -> second . lower . IsBooleanValue ( b1 ) && itr -> second . upper . IsBooleanValue ( b2 ) )		2592006	0					
ANR	2592058	Condition	itr -> second . lower . IsBooleanValue ( b1 ) && itr -> second . upper . IsBooleanValue ( b2 )	647:6:15658:15741	2592006	0	True				
ANR	2592059	AndExpression	itr -> second . lower . IsBooleanValue ( b1 ) && itr -> second . upper . IsBooleanValue ( b2 )		2592006	0		&&			
ANR	2592060	CallExpression	itr -> second . lower . IsBooleanValue ( b1 )		2592006	0					
ANR	2592061	Callee	itr -> second . lower . IsBooleanValue		2592006	0					
ANR	2592062	MemberAccess	itr -> second . lower . IsBooleanValue		2592006	0					
ANR	2592063	MemberAccess	itr -> second . lower		2592006	0					
ANR	2592064	PtrMemberAccess	itr -> second		2592006	0					
ANR	2592065	Identifier	itr		2592006	0					
ANR	2592066	Identifier	second		2592006	1					
ANR	2592067	Identifier	lower		2592006	1					
ANR	2592068	Identifier	IsBooleanValue		2592006	1					
ANR	2592069	ArgumentList	b1		2592006	1					
ANR	2592070	Argument	b1		2592006	0					
ANR	2592071	Identifier	b1		2592006	0					
ANR	2592072	CallExpression	itr -> second . upper . IsBooleanValue ( b2 )		2592006	1					
ANR	2592073	Callee	itr -> second . upper . IsBooleanValue		2592006	0					
ANR	2592074	MemberAccess	itr -> second . upper . IsBooleanValue		2592006	0					
ANR	2592075	MemberAccess	itr -> second . upper		2592006	0					
ANR	2592076	PtrMemberAccess	itr -> second		2592006	0					
ANR	2592077	Identifier	itr		2592006	0					
ANR	2592078	Identifier	second		2592006	1					
ANR	2592079	Identifier	upper		2592006	1					
ANR	2592080	Identifier	IsBooleanValue		2592006	1					
ANR	2592081	ArgumentList	b2		2592006	1					
ANR	2592082	Argument	b2		2592006	0					
ANR	2592083	Identifier	b2		2592006	0					
ANR	2592084	CompoundStatement		9:45:279:279	2592006	1					
ANR	2592085	IfStatement	if ( b1 || b2 )		2592006	0					
ANR	2592086	Condition	b1 || b2	649:8:15755:15763	2592006	0	True				
ANR	2592087	OrExpression	b1 || b2		2592006	0		||			
ANR	2592088	Identifier	b1		2592006	0					
ANR	2592089	Identifier	b2		2592006	1					
ANR	2592090	ExpressionStatement	bi -> yup . insert ( itr -> first )	649:20:15767:15795	2592006	1	True				
ANR	2592091	CallExpression	bi -> yup . insert ( itr -> first )		2592006	0					
ANR	2592092	Callee	bi -> yup . insert		2592006	0					
ANR	2592093	MemberAccess	bi -> yup . insert		2592006	0					
ANR	2592094	PtrMemberAccess	bi -> yup		2592006	0					
ANR	2592095	Identifier	bi		2592006	0					
ANR	2592096	Identifier	yup		2592006	1					
ANR	2592097	Identifier	insert		2592006	1					
ANR	2592098	ArgumentList	itr -> first		2592006	1					
ANR	2592099	Argument	itr -> first		2592006	0					
ANR	2592100	PtrMemberAccess	itr -> first		2592006	0					
ANR	2592101	Identifier	itr		2592006	0					
ANR	2592102	Identifier	first		2592006	1					
ANR	2592103	IfStatement	if ( ! b1 || ! b2 )		2592006	1					
ANR	2592104	Condition	! b1 || ! b2	650:7:15805:15814	2592006	0	True				
ANR	2592105	OrExpression	! b1 || ! b2		2592006	0		||			
ANR	2592106	UnaryOperationExpression	! b1		2592006	0					
ANR	2592107	UnaryOperator	!		2592006	0					
ANR	2592108	Identifier	b1		2592006	1					
ANR	2592109	UnaryOperationExpression	! b2		2592006	1					
ANR	2592110	UnaryOperator	!		2592006	0					
ANR	2592111	Identifier	b2		2592006	1					
ANR	2592112	ExpressionStatement	bi -> nope . insert ( itr -> first )	650:20:15818:15847	2592006	1	True				
ANR	2592113	CallExpression	bi -> nope . insert ( itr -> first )		2592006	0					
ANR	2592114	Callee	bi -> nope . insert		2592006	0					
ANR	2592115	MemberAccess	bi -> nope . insert		2592006	0					
ANR	2592116	PtrMemberAccess	bi -> nope		2592006	0					
ANR	2592117	Identifier	bi		2592006	0					
ANR	2592118	Identifier	nope		2592006	1					
ANR	2592119	Identifier	insert		2592006	1					
ANR	2592120	ArgumentList	itr -> first		2592006	1					
ANR	2592121	Argument	itr -> first		2592006	0					
ANR	2592122	PtrMemberAccess	itr -> first		2592006	0					
ANR	2592123	Identifier	itr		2592006	0					
ANR	2592124	Identifier	first		2592006	1					
ANR	2592125	ReturnStatement	return ( bi ) ;	654:1:15858:15870	2592006	5	True				
ANR	2592126	Identifier	bi		2592006	0					
ANR	2592127	ReturnType	ClassAdBooleanIndex *		2592006	1					
ANR	2592128	Identifier	ClassAdBooleanIndex :: MakeBooleanIndex		2592006	2					
ANR	2592129	ParameterList	OneDimension & dim		2592006	3					
ANR	2592130	Parameter	OneDimension & dim	639:39:15445:15461	2592006	0	True				
ANR	2592131	ParameterType	OneDimension &		2592006	0					
ANR	2592132	Identifier	dim		2592006	1					
ANR	2592133	CFGEntryNode	ENTRY		2592006		True				
ANR	2592134	CFGExitNode	EXIT		2592006		True				
ANR	2592135	Symbol	dim . end		2592006						
ANR	2592136	Symbol	NULL		2592006						
ANR	2592137	Symbol	bi -> nope		2592006						
ANR	2592138	Symbol	itr		2592006						
ANR	2592139	Symbol	bi		2592006						
ANR	2592140	Symbol	bi -> yup		2592006						
ANR	2592141	Symbol	dim		2592006						
ANR	2592142	Symbol	itr -> second . upper . IsBooleanValue		2592006						
ANR	2592143	Symbol	itr -> second . lower . IsBooleanValue		2592006						
ANR	2592144	Symbol	* itr		2592006						
ANR	2592145	Symbol	* bi		2592006						
ANR	2592146	Symbol	b1		2592006						
ANR	2592147	Symbol	b2		2592006						
ANR	2592148	Symbol	itr -> second . lower		2592006						
ANR	2592149	Symbol	itr -> second . upper		2592006						
ANR	2592150	Symbol	dim . begin		2592006						
ANR	2592151	Symbol	itr -> first		2592006						
ANR	2592152	Symbol	itr -> second		2592006						
ANR	2592153	Function	ClassAdBooleanIndex :: Filter	667:0:16002:16806							
ANR	2592154	FunctionDef	"ClassAdBooleanIndex :: Filter (const Interval & interval , KeySet & result)"		2592153	0					
ANR	2592155	CompoundStatement		669:0:16079:16806	2592153	0					
ANR	2592156	IdentifierDeclStatement	"bool ol , l , ou , u ;"	670:1:16082:16099	2592153	0	True				
ANR	2592157	IdentifierDecl	ol		2592153	0					
ANR	2592158	IdentifierDeclType	bool		2592153	0					
ANR	2592159	Identifier	ol		2592153	1					
ANR	2592160	IdentifierDecl	l		2592153	1					
ANR	2592161	IdentifierDeclType	bool		2592153	0					
ANR	2592162	Identifier	l		2592153	1					
ANR	2592163	IdentifierDecl	ou		2592153	2					
ANR	2592164	IdentifierDeclType	bool		2592153	0					
ANR	2592165	Identifier	ou		2592153	1					
ANR	2592166	IdentifierDecl	u		2592153	3					
ANR	2592167	IdentifierDeclType	bool		2592153	0					
ANR	2592168	Identifier	u		2592153	1					
ANR	2592169	IdentifierDeclStatement	"bool qf , qt ;"	671:1:16102:16113	2592153	1	True				
ANR	2592170	IdentifierDecl	qf		2592153	0					
ANR	2592171	IdentifierDeclType	bool		2592153	0					
ANR	2592172	Identifier	qf		2592153	1					
ANR	2592173	IdentifierDecl	qt		2592153	1					
ANR	2592174	IdentifierDeclType	bool		2592153	0					
ANR	2592175	Identifier	qt		2592153	1					
ANR	2592176	ExpressionStatement	ol = interval . openLower	674:1:16164:16187	2592153	2	True				
ANR	2592177	AssignmentExpression	ol = interval . openLower		2592153	0		=			
ANR	2592178	Identifier	ol		2592153	0					
ANR	2592179	MemberAccess	interval . openLower		2592153	1					
ANR	2592180	Identifier	interval		2592153	0					
ANR	2592181	Identifier	openLower		2592153	1					
ANR	2592182	ExpressionStatement	interval . lower . IsBooleanValue ( l )	675:1:16190:16224	2592153	3	True				
ANR	2592183	CallExpression	interval . lower . IsBooleanValue ( l )		2592153	0					
ANR	2592184	Callee	interval . lower . IsBooleanValue		2592153	0					
ANR	2592185	MemberAccess	interval . lower . IsBooleanValue		2592153	0					
ANR	2592186	MemberAccess	interval . lower		2592153	0					
ANR	2592187	Identifier	interval		2592153	0					
ANR	2592188	Identifier	lower		2592153	1					
ANR	2592189	Identifier	IsBooleanValue		2592153	1					
ANR	2592190	ArgumentList	l		2592153	1					
ANR	2592191	Argument	l		2592153	0					
ANR	2592192	Identifier	l		2592153	0					
ANR	2592193	ExpressionStatement	interval . upper . IsBooleanValue ( u )	676:1:16227:16261	2592153	4	True				
ANR	2592194	CallExpression	interval . upper . IsBooleanValue ( u )		2592153	0					
ANR	2592195	Callee	interval . upper . IsBooleanValue		2592153	0					
ANR	2592196	MemberAccess	interval . upper . IsBooleanValue		2592153	0					
ANR	2592197	MemberAccess	interval . upper		2592153	0					
ANR	2592198	Identifier	interval		2592153	0					
ANR	2592199	Identifier	upper		2592153	1					
ANR	2592200	Identifier	IsBooleanValue		2592153	1					
ANR	2592201	ArgumentList	u		2592153	1					
ANR	2592202	Argument	u		2592153	0					
ANR	2592203	Identifier	u		2592153	0					
ANR	2592204	ExpressionStatement	ou = interval . openUpper	677:1:16264:16287	2592153	5	True				
ANR	2592205	AssignmentExpression	ou = interval . openUpper		2592153	0		=			
ANR	2592206	Identifier	ou		2592153	0					
ANR	2592207	MemberAccess	interval . openUpper		2592153	1					
ANR	2592208	Identifier	interval		2592153	0					
ANR	2592209	Identifier	openUpper		2592153	1					
ANR	2592210	IfStatement	if ( ! ol && ! l )		2592153	6					
ANR	2592211	Condition	! ol && ! l	678:5:16294:16302	2592153	0	True				
ANR	2592212	AndExpression	! ol && ! l		2592153	0		&&			
ANR	2592213	UnaryOperationExpression	! ol		2592153	0					
ANR	2592214	UnaryOperator	!		2592153	0					
ANR	2592215	Identifier	ol		2592153	1					
ANR	2592216	UnaryOperationExpression	! l		2592153	1					
ANR	2592217	UnaryOperator	!		2592153	0					
ANR	2592218	Identifier	l		2592153	1					
ANR	2592219	CompoundStatement		10:17:226:226	2592153	1					
ANR	2592220	IfStatement	if ( ! u && ! ou )		2592153	0					
ANR	2592221	Condition	! u && ! ou	679:6:16314:16322	2592153	0	True				
ANR	2592222	AndExpression	! u && ! ou		2592153	0		&&			
ANR	2592223	UnaryOperationExpression	! u		2592153	0					
ANR	2592224	UnaryOperator	!		2592153	0					
ANR	2592225	Identifier	u		2592153	1					
ANR	2592226	UnaryOperationExpression	! ou		2592153	1					
ANR	2592227	UnaryOperator	!		2592153	0					
ANR	2592228	Identifier	ou		2592153	1					
ANR	2592229	CompoundStatement		11:18:246:246	2592153	1					
ANR	2592230	ExpressionStatement	qf = true	680:3:16331:16340	2592153	0	True				
ANR	2592231	AssignmentExpression	qf = true		2592153	0		=			
ANR	2592232	Identifier	qf		2592153	0					
ANR	2592233	Identifier	true		2592153	1					
ANR	2592234	ElseStatement	else		2592153	0					
ANR	2592235	IfStatement	if ( u && ! ou )		2592153	0					
ANR	2592236	Condition	u && ! ou	681:13:16355:16362	2592153	0	True				
ANR	2592237	AndExpression	u && ! ou		2592153	0		&&			
ANR	2592238	Identifier	u		2592153	0					
ANR	2592239	UnaryOperationExpression	! ou		2592153	1					
ANR	2592240	UnaryOperator	!		2592153	0					
ANR	2592241	Identifier	ou		2592153	1					
ANR	2592242	CompoundStatement		13:24:286:286	2592153	1					
ANR	2592243	ExpressionStatement	qf = qt = true	682:3:16371:16385	2592153	0	True				
ANR	2592244	AssignmentExpression	qf = qt = true		2592153	0		=			
ANR	2592245	Identifier	qf		2592153	0					
ANR	2592246	AssignmentExpression	qt = true		2592153	1		=			
ANR	2592247	Identifier	qt		2592153	0					
ANR	2592248	Identifier	true		2592153	1					
ANR	2592249	ElseStatement	else		2592153	0					
ANR	2592250	IfStatement	if ( u && ou )		2592153	0					
ANR	2592251	Condition	u && ou	683:13:16400:16406	2592153	0	True				
ANR	2592252	AndExpression	u && ou		2592153	0		&&			
ANR	2592253	Identifier	u		2592153	0					
ANR	2592254	Identifier	ou		2592153	1					
ANR	2592255	CompoundStatement		15:23:330:330	2592153	1					
ANR	2592256	ExpressionStatement	qf = true	684:3:16415:16424	2592153	0	True				
ANR	2592257	AssignmentExpression	qf = true		2592153	0		=			
ANR	2592258	Identifier	qf		2592153	0					
ANR	2592259	Identifier	true		2592153	1					
ANR	2592260	ElseStatement	else		2592153	0					
ANR	2592261	IfStatement	if ( u && ! ou )		2592153	0					
ANR	2592262	Condition	u && ! ou	686:12:16443:16450	2592153	0	True				
ANR	2592263	AndExpression	u && ! ou		2592153	0		&&			
ANR	2592264	Identifier	u		2592153	0					
ANR	2592265	UnaryOperationExpression	! ou		2592153	1					
ANR	2592266	UnaryOperator	!		2592153	0					
ANR	2592267	Identifier	ou		2592153	1					
ANR	2592268	CompoundStatement		18:23:374:374	2592153	1					
ANR	2592269	IfStatement	if ( ol ^ l )		2592153	0					
ANR	2592270	Condition	ol ^ l	687:6:16462:16467	2592153	0	True				
ANR	2592271	ExclusiveOrExpression	ol ^ l		2592153	0		^			
ANR	2592272	Identifier	ol		2592153	0					
ANR	2592273	Identifier	l		2592153	1					
ANR	2592274	CompoundStatement		19:15:391:391	2592153	1					
ANR	2592275	ExpressionStatement	qt = true	688:3:16476:16485	2592153	0	True				
ANR	2592276	AssignmentExpression	qt = true		2592153	0		=			
ANR	2592277	Identifier	qt		2592153	0					
ANR	2592278	Identifier	true		2592153	1					
ANR	2592279	IfStatement	if ( ! qt && ! qf )		2592153	7					
ANR	2592280	Condition	! qt && ! qf	692:5:16504:16513	2592153	0	True				
ANR	2592281	AndExpression	! qt && ! qf		2592153	0		&&			
ANR	2592282	UnaryOperationExpression	! qt		2592153	0					
ANR	2592283	UnaryOperator	!		2592153	0					
ANR	2592284	Identifier	qt		2592153	1					
ANR	2592285	UnaryOperationExpression	! qf		2592153	1					
ANR	2592286	UnaryOperator	!		2592153	0					
ANR	2592287	Identifier	qf		2592153	1					
ANR	2592288	ReturnStatement	return ( true ) ;	692:18:16517:16531	2592153	1	True				
ANR	2592289	Identifier	true		2592153	0					
ANR	2592290	IdentifierDeclStatement	IndexEntries :: iterator itr ;	695:1:16555:16581	2592153	8	True				
ANR	2592291	IdentifierDecl	itr		2592153	0					
ANR	2592292	IdentifierDeclType	IndexEntries :: iterator		2592153	0					
ANR	2592293	Identifier	itr		2592153	1					
ANR	2592294	IfStatement	if ( qf )		2592153	9					
ANR	2592295	Condition	qf	696:5:16588:16589	2592153	0	True				
ANR	2592296	Identifier	qf		2592153	0					
ANR	2592297	CompoundStatement		28:10:513:513	2592153	1					
ANR	2592298	ForStatement	for ( itr = nope . begin ( ) ; itr != nope . end ( ) ; itr ++ )		2592153	0					
ANR	2592299	ForInit	itr = nope . begin ( ) ;	697:7:16602:16621	2592153	0	True				
ANR	2592300	AssignmentExpression	itr = nope . begin ( )		2592153	0		=			
ANR	2592301	Identifier	itr		2592153	0					
ANR	2592302	CallExpression	nope . begin ( )		2592153	1					
ANR	2592303	Callee	nope . begin		2592153	0					
ANR	2592304	MemberAccess	nope . begin		2592153	0					
ANR	2592305	Identifier	nope		2592153	0					
ANR	2592306	Identifier	begin		2592153	1					
ANR	2592307	ArgumentList			2592153	1					
ANR	2592308	Condition	itr != nope . end ( )	697:28:16623:16640	2592153	1	True				
ANR	2592309	EqualityExpression	itr != nope . end ( )		2592153	0		!=			
ANR	2592310	Identifier	itr		2592153	0					
ANR	2592311	CallExpression	nope . end ( )		2592153	1					
ANR	2592312	Callee	nope . end		2592153	0					
ANR	2592313	MemberAccess	nope . end		2592153	0					
ANR	2592314	Identifier	nope		2592153	0					
ANR	2592315	Identifier	end		2592153	1					
ANR	2592316	ArgumentList			2592153	1					
ANR	2592317	PostIncDecOperationExpression	itr ++	697:48:16643:16647	2592153	2	True				
ANR	2592318	Identifier	itr		2592153	0					
ANR	2592319	IncDec	++		2592153	1					
ANR	2592320	CompoundStatement		29:56:571:571	2592153	3					
ANR	2592321	ExpressionStatement	result . Insert ( * itr )	698:3:16656:16677	2592153	0	True				
ANR	2592322	CallExpression	result . Insert ( * itr )		2592153	0					
ANR	2592323	Callee	result . Insert		2592153	0					
ANR	2592324	MemberAccess	result . Insert		2592153	0					
ANR	2592325	Identifier	result		2592153	0					
ANR	2592326	Identifier	Insert		2592153	1					
ANR	2592327	ArgumentList	* itr		2592153	1					
ANR	2592328	Argument	* itr		2592153	0					
ANR	2592329	UnaryOperationExpression	* itr		2592153	0					
ANR	2592330	UnaryOperator	*		2592153	0					
ANR	2592331	Identifier	itr		2592153	1					
ANR	2592332	IfStatement	if ( qt )		2592153	10					
ANR	2592333	Condition	qt	701:5:16691:16692	2592153	0	True				
ANR	2592334	Identifier	qt		2592153	0					
ANR	2592335	CompoundStatement		33:10:616:616	2592153	1					
ANR	2592336	ForStatement	for ( itr = yup . begin ( ) ; itr != yup . end ( ) ; itr ++ )		2592153	0					
ANR	2592337	ForInit	itr = yup . begin ( ) ;	702:7:16705:16723	2592153	0	True				
ANR	2592338	AssignmentExpression	itr = yup . begin ( )		2592153	0		=			
ANR	2592339	Identifier	itr		2592153	0					
ANR	2592340	CallExpression	yup . begin ( )		2592153	1					
ANR	2592341	Callee	yup . begin		2592153	0					
ANR	2592342	MemberAccess	yup . begin		2592153	0					
ANR	2592343	Identifier	yup		2592153	0					
ANR	2592344	Identifier	begin		2592153	1					
ANR	2592345	ArgumentList			2592153	1					
ANR	2592346	Condition	itr != yup . end ( )	702:27:16725:16741	2592153	1	True				
ANR	2592347	EqualityExpression	itr != yup . end ( )		2592153	0		!=			
ANR	2592348	Identifier	itr		2592153	0					
ANR	2592349	CallExpression	yup . end ( )		2592153	1					
ANR	2592350	Callee	yup . end		2592153	0					
ANR	2592351	MemberAccess	yup . end		2592153	0					
ANR	2592352	Identifier	yup		2592153	0					
ANR	2592353	Identifier	end		2592153	1					
ANR	2592354	ArgumentList			2592153	1					
ANR	2592355	PostIncDecOperationExpression	itr ++	702:46:16744:16748	2592153	2	True				
ANR	2592356	Identifier	itr		2592153	0					
ANR	2592357	IncDec	++		2592153	1					
ANR	2592358	CompoundStatement		34:54:672:672	2592153	3					
ANR	2592359	ExpressionStatement	result . Insert ( * itr )	703:3:16757:16778	2592153	0	True				
ANR	2592360	CallExpression	result . Insert ( * itr )		2592153	0					
ANR	2592361	Callee	result . Insert		2592153	0					
ANR	2592362	MemberAccess	result . Insert		2592153	0					
ANR	2592363	Identifier	result		2592153	0					
ANR	2592364	Identifier	Insert		2592153	1					
ANR	2592365	ArgumentList	* itr		2592153	1					
ANR	2592366	Argument	* itr		2592153	0					
ANR	2592367	UnaryOperationExpression	* itr		2592153	0					
ANR	2592368	UnaryOperator	*		2592153	0					
ANR	2592369	Identifier	itr		2592153	1					
ANR	2592370	ReturnStatement	return ( true ) ;	707:1:16790:16804	2592153	11	True				
ANR	2592371	Identifier	true		2592153	0					
ANR	2592372	ReturnType	bool		2592153	1					
ANR	2592373	Identifier	ClassAdBooleanIndex :: Filter		2592153	2					
ANR	2592374	ParameterList	"const Interval & interval , KeySet & result"		2592153	3					
ANR	2592375	Parameter	const Interval & interval	668:29:16036:16059	2592153	0	True				
ANR	2592376	ParameterType	const Interval &		2592153	0					
ANR	2592377	Identifier	interval		2592153	1					
ANR	2592378	Parameter	KeySet & result	668:55:16062:16075	2592153	1	True				
ANR	2592379	ParameterType	KeySet &		2592153	0					
ANR	2592380	Identifier	result		2592153	1					
ANR	2592381	CFGEntryNode	ENTRY		2592153		True				
ANR	2592382	CFGExitNode	EXIT		2592153		True				
ANR	2592383	Symbol	qt		2592153						
ANR	2592384	Symbol	nope		2592153						
ANR	2592385	Symbol	ou		2592153						
ANR	2592386	Symbol	itr		2592153						
ANR	2592387	Symbol	yup . begin		2592153						
ANR	2592388	Symbol	l		2592153						
ANR	2592389	Symbol	* itr		2592153						
ANR	2592390	Symbol	result		2592153						
ANR	2592391	Symbol	yup . end		2592153						
ANR	2592392	Symbol	u		2592153						
ANR	2592393	Symbol	qf		2592153						
ANR	2592394	Symbol	yup		2592153						
ANR	2592395	Symbol	true		2592153						
ANR	2592396	Symbol	nope . end		2592153						
ANR	2592397	Symbol	interval		2592153						
ANR	2592398	Symbol	interval . openLower		2592153						
ANR	2592399	Symbol	interval . upper		2592153						
ANR	2592400	Symbol	ol		2592153						
ANR	2592401	Symbol	interval . lower		2592153						
ANR	2592402	Symbol	interval . openUpper		2592153						
ANR	2592403	Symbol	nope . begin		2592153						
ANR	2592404	Function	ClassAdBooleanIndex :: FilterAll	710:0:16809:17081							
ANR	2592405	FunctionDef	ClassAdBooleanIndex :: FilterAll (KeySet & result)		2592404	0					
ANR	2592406	CompoundStatement		712:0:16863:17081	2592404	0					
ANR	2592407	IdentifierDeclStatement	IndexEntries :: iterator itr ;	713:1:16866:16892	2592404	0	True				
ANR	2592408	IdentifierDecl	itr		2592404	0					
ANR	2592409	IdentifierDeclType	IndexEntries :: iterator		2592404	0					
ANR	2592410	Identifier	itr		2592404	1					
ANR	2592411	ForStatement	for ( itr = nope . begin ( ) ; itr != nope . end ( ) ; itr ++ )		2592404	1					
ANR	2592412	ForInit	itr = nope . begin ( ) ;	715:6:16901:16920	2592404	0	True				
ANR	2592413	AssignmentExpression	itr = nope . begin ( )		2592404	0		=			
ANR	2592414	Identifier	itr		2592404	0					
ANR	2592415	CallExpression	nope . begin ( )		2592404	1					
ANR	2592416	Callee	nope . begin		2592404	0					
ANR	2592417	MemberAccess	nope . begin		2592404	0					
ANR	2592418	Identifier	nope		2592404	0					
ANR	2592419	Identifier	begin		2592404	1					
ANR	2592420	ArgumentList			2592404	1					
ANR	2592421	Condition	itr != nope . end ( )	715:27:16922:16939	2592404	1	True				
ANR	2592422	EqualityExpression	itr != nope . end ( )		2592404	0		!=			
ANR	2592423	Identifier	itr		2592404	0					
ANR	2592424	CallExpression	nope . end ( )		2592404	1					
ANR	2592425	Callee	nope . end		2592404	0					
ANR	2592426	MemberAccess	nope . end		2592404	0					
ANR	2592427	Identifier	nope		2592404	0					
ANR	2592428	Identifier	end		2592404	1					
ANR	2592429	ArgumentList			2592404	1					
ANR	2592430	PostIncDecOperationExpression	itr ++	715:48:16943:16947	2592404	2	True				
ANR	2592431	Identifier	itr		2592404	0					
ANR	2592432	IncDec	++		2592404	1					
ANR	2592433	CompoundStatement		4:56:87:87	2592404	3					
ANR	2592434	ExpressionStatement	result . Insert ( * itr )	716:2:16955:16976	2592404	0	True				
ANR	2592435	CallExpression	result . Insert ( * itr )		2592404	0					
ANR	2592436	Callee	result . Insert		2592404	0					
ANR	2592437	MemberAccess	result . Insert		2592404	0					
ANR	2592438	Identifier	result		2592404	0					
ANR	2592439	Identifier	Insert		2592404	1					
ANR	2592440	ArgumentList	* itr		2592404	1					
ANR	2592441	Argument	* itr		2592404	0					
ANR	2592442	UnaryOperationExpression	* itr		2592404	0					
ANR	2592443	UnaryOperator	*		2592404	0					
ANR	2592444	Identifier	itr		2592404	1					
ANR	2592445	ForStatement	for ( itr = yup . begin ( ) ; itr != yup . end ( ) ; itr ++ )		2592404	2					
ANR	2592446	ForInit	itr = yup . begin ( ) ;	718:6:16987:17005	2592404	0	True				
ANR	2592447	AssignmentExpression	itr = yup . begin ( )		2592404	0		=			
ANR	2592448	Identifier	itr		2592404	0					
ANR	2592449	CallExpression	yup . begin ( )		2592404	1					
ANR	2592450	Callee	yup . begin		2592404	0					
ANR	2592451	MemberAccess	yup . begin		2592404	0					
ANR	2592452	Identifier	yup		2592404	0					
ANR	2592453	Identifier	begin		2592404	1					
ANR	2592454	ArgumentList			2592404	1					
ANR	2592455	Condition	itr != yup . end ( )	718:26:17007:17023	2592404	1	True				
ANR	2592456	EqualityExpression	itr != yup . end ( )		2592404	0		!=			
ANR	2592457	Identifier	itr		2592404	0					
ANR	2592458	CallExpression	yup . end ( )		2592404	1					
ANR	2592459	Callee	yup . end		2592404	0					
ANR	2592460	MemberAccess	yup . end		2592404	0					
ANR	2592461	Identifier	yup		2592404	0					
ANR	2592462	Identifier	end		2592404	1					
ANR	2592463	ArgumentList			2592404	1					
ANR	2592464	PostIncDecOperationExpression	itr ++	718:45:17026:17030	2592404	2	True				
ANR	2592465	Identifier	itr		2592404	0					
ANR	2592466	IncDec	++		2592404	1					
ANR	2592467	CompoundStatement		7:53:170:170	2592404	3					
ANR	2592468	ExpressionStatement	result . Insert ( * itr )	719:2:17038:17059	2592404	0	True				
ANR	2592469	CallExpression	result . Insert ( * itr )		2592404	0					
ANR	2592470	Callee	result . Insert		2592404	0					
ANR	2592471	MemberAccess	result . Insert		2592404	0					
ANR	2592472	Identifier	result		2592404	0					
ANR	2592473	Identifier	Insert		2592404	1					
ANR	2592474	ArgumentList	* itr		2592404	1					
ANR	2592475	Argument	* itr		2592404	0					
ANR	2592476	UnaryOperationExpression	* itr		2592404	0					
ANR	2592477	UnaryOperator	*		2592404	0					
ANR	2592478	Identifier	itr		2592404	1					
ANR	2592479	ReturnStatement	return ( true ) ;	721:1:17065:17079	2592404	3	True				
ANR	2592480	Identifier	true		2592404	0					
ANR	2592481	ReturnType	bool		2592404	1					
ANR	2592482	Identifier	ClassAdBooleanIndex :: FilterAll		2592404	2					
ANR	2592483	ParameterList	KeySet & result		2592404	3					
ANR	2592484	Parameter	KeySet & result	711:32:16846:16859	2592404	0	True				
ANR	2592485	ParameterType	KeySet &		2592404	0					
ANR	2592486	Identifier	result		2592404	1					
ANR	2592487	CFGEntryNode	ENTRY		2592404		True				
ANR	2592488	CFGExitNode	EXIT		2592404		True				
ANR	2592489	Symbol	result		2592404						
ANR	2592490	Symbol	yup . end		2592404						
ANR	2592491	Symbol	nope		2592404						
ANR	2592492	Symbol	yup		2592404						
ANR	2592493	Symbol	itr		2592404						
ANR	2592494	Symbol	yup . begin		2592404						
ANR	2592495	Symbol	nope . end		2592404						
ANR	2592496	Symbol	true		2592404						
ANR	2592497	Symbol	nope . begin		2592404						
ANR	2592498	Symbol	* itr		2592404						
