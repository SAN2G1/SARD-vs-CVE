command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1039038	File	data/converged/CVE-2011-4930_htcondor/cron_job_list.cpp								
ANR	1039039	Function	CondorCronJobList :: CondorCronJobList	33:0:1099:1174							
ANR	1039040	FunctionDef	CondorCronJobList :: CondorCronJobList (CronJobMgr & mgr)		1039039	0					
ANR	1039041	CompoundStatement		35:0:1172:1174	1039039	0					
ANR	1039042	Identifier	CondorCronJobList :: CondorCronJobList		1039039	1					
ANR	1039043	ParameterList	CronJobMgr & mgr		1039039	2					
ANR	1039044	Parameter	CronJobMgr & mgr	33:38:1137:1151	1039039	0	True				
ANR	1039045	ParameterType	CronJobMgr &		1039039	0					
ANR	1039046	Identifier	mgr		1039039	1					
ANR	1039047	CFGEntryNode	ENTRY		1039039		True				
ANR	1039048	CFGExitNode	EXIT		1039039		True				
ANR	1039049	Symbol	mgr		1039039						
ANR	1039050	Function	CondorCronJobList :: ~CondorCronJobList	39:0:1197:1286							
ANR	1039051	FunctionDef	CondorCronJobList :: ~CondorCronJobList ()		1039050	0					
ANR	1039052	CompoundStatement		40:0:1243:1286	1039050	0					
ANR	1039053	ExpressionStatement	DeleteAll ( )	42:1:1272:1284	1039050	0	True				
ANR	1039054	CallExpression	DeleteAll ( )		1039050	0					
ANR	1039055	Callee	DeleteAll		1039050	0					
ANR	1039056	Identifier	DeleteAll		1039050	0					
ANR	1039057	ArgumentList			1039050	1					
ANR	1039058	Identifier	CondorCronJobList :: ~CondorCronJobList		1039050	1					
ANR	1039059	ParameterList			1039050	2					
ANR	1039060	CFGEntryNode	ENTRY		1039050		True				
ANR	1039061	CFGExitNode	EXIT		1039050		True				
ANR	1039062	Function	CondorCronJobList :: DeleteAll	46:0:1323:1722							
ANR	1039063	FunctionDef	CondorCronJobList :: DeleteAll ()		1039062	0					
ANR	1039064	CompoundStatement		48:0:1364:1722	1039062	0					
ANR	1039065	ExpressionStatement	KillAll ( true )	50:1:1384:1399	1039062	0	True				
ANR	1039066	CallExpression	KillAll ( true )		1039062	0					
ANR	1039067	Callee	KillAll		1039062	0					
ANR	1039068	Identifier	KillAll		1039062	0					
ANR	1039069	ArgumentList	true		1039062	1					
ANR	1039070	Argument	true		1039062	0					
ANR	1039071	Identifier	true		1039062	0					
ANR	1039072	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJobList: Deleting all jobs\\n"" )"	52:1:1403:1458	1039062	1	True				
ANR	1039073	CallExpression	"dprintf ( D_ALWAYS , ""CronJobList: Deleting all jobs\\n"" )"		1039062	0					
ANR	1039074	Callee	dprintf		1039062	0					
ANR	1039075	Identifier	dprintf		1039062	0					
ANR	1039076	ArgumentList	D_ALWAYS		1039062	1					
ANR	1039077	Argument	D_ALWAYS		1039062	0					
ANR	1039078	Identifier	D_ALWAYS		1039062	0					
ANR	1039079	Argument	"""CronJobList: Deleting all jobs\\n"""		1039062	1					
ANR	1039080	PrimaryExpression	"""CronJobList: Deleting all jobs\\n"""		1039062	0					
ANR	1039081	IdentifierDeclStatement	list < CronJob * > :: iterator iter ;	53:1:1461:1491	1039062	2	True				
ANR	1039082	IdentifierDecl	iter		1039062	0					
ANR	1039083	IdentifierDeclType	list < CronJob * > :: iterator		1039062	0					
ANR	1039084	Identifier	iter		1039062	1					
ANR	1039085	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		1039062	3					
ANR	1039086	ForInit	iter = m_job_list . begin ( ) ;	54:6:1499:1524	1039062	0	True				
ANR	1039087	AssignmentExpression	iter = m_job_list . begin ( )		1039062	0		=			
ANR	1039088	Identifier	iter		1039062	0					
ANR	1039089	CallExpression	m_job_list . begin ( )		1039062	1					
ANR	1039090	Callee	m_job_list . begin		1039062	0					
ANR	1039091	MemberAccess	m_job_list . begin		1039062	0					
ANR	1039092	Identifier	m_job_list		1039062	0					
ANR	1039093	Identifier	begin		1039062	1					
ANR	1039094	ArgumentList			1039062	1					
ANR	1039095	Condition	iter != m_job_list . end ( )	54:33:1526:1549	1039062	1	True				
ANR	1039096	EqualityExpression	iter != m_job_list . end ( )		1039062	0		!=			
ANR	1039097	Identifier	iter		1039062	0					
ANR	1039098	CallExpression	m_job_list . end ( )		1039062	1					
ANR	1039099	Callee	m_job_list . end		1039062	0					
ANR	1039100	MemberAccess	m_job_list . end		1039062	0					
ANR	1039101	Identifier	m_job_list		1039062	0					
ANR	1039102	Identifier	end		1039062	1					
ANR	1039103	ArgumentList			1039062	1					
ANR	1039104	PostIncDecOperationExpression	iter ++	54:59:1552:1557	1039062	2	True				
ANR	1039105	Identifier	iter		1039062	0					
ANR	1039106	IncDec	++		1039062	1					
ANR	1039107	CompoundStatement		8:2:200:220	1039062	3					
ANR	1039108	IdentifierDeclStatement	CronJob * job = * iter ;	55:2:1565:1585	1039062	0	True				
ANR	1039109	IdentifierDecl	* job = * iter		1039062	0					
ANR	1039110	IdentifierDeclType	CronJob *		1039062	0					
ANR	1039111	Identifier	job		1039062	1					
ANR	1039112	AssignmentExpression	* job = * iter		1039062	2		=			
ANR	1039113	Identifier	job		1039062	0					
ANR	1039114	UnaryOperationExpression	* iter		1039062	1					
ANR	1039115	UnaryOperator	*		1039062	0					
ANR	1039116	Identifier	iter		1039062	1					
ANR	1039117	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJobList: Deleting job '%s'\\n"" , job -> GetName ( ) )"	56:2:1589:1670	1039062	1	True				
ANR	1039118	CallExpression	"dprintf ( D_ALWAYS , ""CronJobList: Deleting job '%s'\\n"" , job -> GetName ( ) )"		1039062	0					
ANR	1039119	Callee	dprintf		1039062	0					
ANR	1039120	Identifier	dprintf		1039062	0					
ANR	1039121	ArgumentList	D_ALWAYS		1039062	1					
ANR	1039122	Argument	D_ALWAYS		1039062	0					
ANR	1039123	Identifier	D_ALWAYS		1039062	0					
ANR	1039124	Argument	"""CronJobList: Deleting job '%s'\\n"""		1039062	1					
ANR	1039125	PrimaryExpression	"""CronJobList: Deleting job '%s'\\n"""		1039062	0					
ANR	1039126	Argument	job -> GetName ( )		1039062	2					
ANR	1039127	CallExpression	job -> GetName ( )		1039062	0					
ANR	1039128	Callee	job -> GetName		1039062	0					
ANR	1039129	PtrMemberAccess	job -> GetName		1039062	0					
ANR	1039130	Identifier	job		1039062	0					
ANR	1039131	Identifier	GetName		1039062	1					
ANR	1039132	ArgumentList			1039062	1					
ANR	1039133	Statement	delete	59:2:1674:1679	1039062	2	True				
ANR	1039134	ExpressionStatement	job	59:9:1681:1684	1039062	3	True				
ANR	1039135	Identifier	job		1039062	0					
ANR	1039136	ExpressionStatement	m_job_list . clear ( )	61:1:1690:1708	1039062	4	True				
ANR	1039137	CallExpression	m_job_list . clear ( )		1039062	0					
ANR	1039138	Callee	m_job_list . clear		1039062	0					
ANR	1039139	MemberAccess	m_job_list . clear		1039062	0					
ANR	1039140	Identifier	m_job_list		1039062	0					
ANR	1039141	Identifier	clear		1039062	1					
ANR	1039142	ArgumentList			1039062	1					
ANR	1039143	ReturnStatement	return 0 ;	63:1:1712:1720	1039062	5	True				
ANR	1039144	PrimaryExpression	0		1039062	0					
ANR	1039145	ReturnType	int		1039062	1					
ANR	1039146	Identifier	CondorCronJobList :: DeleteAll		1039062	2					
ANR	1039147	ParameterList			1039062	3					
ANR	1039148	CFGEntryNode	ENTRY		1039062		True				
ANR	1039149	CFGExitNode	EXIT		1039062		True				
ANR	1039150	Symbol	m_job_list		1039062						
ANR	1039151	Symbol	m_job_list . begin		1039062						
ANR	1039152	Symbol	* iter		1039062						
ANR	1039153	Symbol	* job		1039062						
ANR	1039154	Symbol	true		1039062						
ANR	1039155	Symbol	D_ALWAYS		1039062						
ANR	1039156	Symbol	iter		1039062						
ANR	1039157	Symbol	m_job_list . end		1039062						
ANR	1039158	Symbol	job		1039062						
ANR	1039159	Symbol	job -> GetName		1039062						
ANR	1039160	Function	CondorCronJobList :: KillAll	67:0:1750:2098							
ANR	1039161	FunctionDef	CondorCronJobList :: KillAll (bool force)		1039160	0					
ANR	1039162	CompoundStatement		69:0:1795:2098	1039160	0					
ANR	1039163	ExpressionStatement	"dprintf ( D_ALWAYS , ""Cron: Killing all jobs\\n"" )"	71:1:1824:1871	1039160	0	True				
ANR	1039164	CallExpression	"dprintf ( D_ALWAYS , ""Cron: Killing all jobs\\n"" )"		1039160	0					
ANR	1039165	Callee	dprintf		1039160	0					
ANR	1039166	Identifier	dprintf		1039160	0					
ANR	1039167	ArgumentList	D_ALWAYS		1039160	1					
ANR	1039168	Argument	D_ALWAYS		1039160	0					
ANR	1039169	Identifier	D_ALWAYS		1039160	0					
ANR	1039170	Argument	"""Cron: Killing all jobs\\n"""		1039160	1					
ANR	1039171	PrimaryExpression	"""Cron: Killing all jobs\\n"""		1039160	0					
ANR	1039172	IdentifierDeclStatement	list < CronJob * > :: iterator iter ;	72:1:1874:1904	1039160	1	True				
ANR	1039173	IdentifierDecl	iter		1039160	0					
ANR	1039174	IdentifierDeclType	list < CronJob * > :: iterator		1039160	0					
ANR	1039175	Identifier	iter		1039160	1					
ANR	1039176	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		1039160	2					
ANR	1039177	ForInit	iter = m_job_list . begin ( ) ;	73:6:1912:1937	1039160	0	True				
ANR	1039178	AssignmentExpression	iter = m_job_list . begin ( )		1039160	0		=			
ANR	1039179	Identifier	iter		1039160	0					
ANR	1039180	CallExpression	m_job_list . begin ( )		1039160	1					
ANR	1039181	Callee	m_job_list . begin		1039160	0					
ANR	1039182	MemberAccess	m_job_list . begin		1039160	0					
ANR	1039183	Identifier	m_job_list		1039160	0					
ANR	1039184	Identifier	begin		1039160	1					
ANR	1039185	ArgumentList			1039160	1					
ANR	1039186	Condition	iter != m_job_list . end ( )	73:33:1939:1962	1039160	1	True				
ANR	1039187	EqualityExpression	iter != m_job_list . end ( )		1039160	0		!=			
ANR	1039188	Identifier	iter		1039160	0					
ANR	1039189	CallExpression	m_job_list . end ( )		1039160	1					
ANR	1039190	Callee	m_job_list . end		1039160	0					
ANR	1039191	MemberAccess	m_job_list . end		1039160	0					
ANR	1039192	Identifier	m_job_list		1039160	0					
ANR	1039193	Identifier	end		1039160	1					
ANR	1039194	ArgumentList			1039160	1					
ANR	1039195	PostIncDecOperationExpression	iter ++	73:59:1965:1970	1039160	2	True				
ANR	1039196	Identifier	iter		1039160	0					
ANR	1039197	IncDec	++		1039160	1					
ANR	1039198	CompoundStatement		6:2:182:202	1039160	3					
ANR	1039199	IdentifierDeclStatement	CronJob * job = * iter ;	74:2:1978:1998	1039160	0	True				
ANR	1039200	IdentifierDecl	* job = * iter		1039160	0					
ANR	1039201	IdentifierDeclType	CronJob *		1039160	0					
ANR	1039202	Identifier	job		1039160	1					
ANR	1039203	AssignmentExpression	* job = * iter		1039160	2		=			
ANR	1039204	Identifier	job		1039160	0					
ANR	1039205	UnaryOperationExpression	* iter		1039160	1					
ANR	1039206	UnaryOperator	*		1039160	0					
ANR	1039207	Identifier	iter		1039160	1					
ANR	1039208	ExpressionStatement	"dprintf ( D_ALWAYS , ""Killing job %s\\n"" , job -> GetName ( ) )"	75:2:2002:2057	1039160	1	True				
ANR	1039209	CallExpression	"dprintf ( D_ALWAYS , ""Killing job %s\\n"" , job -> GetName ( ) )"		1039160	0					
ANR	1039210	Callee	dprintf		1039160	0					
ANR	1039211	Identifier	dprintf		1039160	0					
ANR	1039212	ArgumentList	D_ALWAYS		1039160	1					
ANR	1039213	Argument	D_ALWAYS		1039160	0					
ANR	1039214	Identifier	D_ALWAYS		1039160	0					
ANR	1039215	Argument	"""Killing job %s\\n"""		1039160	1					
ANR	1039216	PrimaryExpression	"""Killing job %s\\n"""		1039160	0					
ANR	1039217	Argument	job -> GetName ( )		1039160	2					
ANR	1039218	CallExpression	job -> GetName ( )		1039160	0					
ANR	1039219	Callee	job -> GetName		1039160	0					
ANR	1039220	PtrMemberAccess	job -> GetName		1039160	0					
ANR	1039221	Identifier	job		1039160	0					
ANR	1039222	Identifier	GetName		1039160	1					
ANR	1039223	ArgumentList			1039160	1					
ANR	1039224	ExpressionStatement	job -> KillJob ( force )	76:2:2061:2082	1039160	2	True				
ANR	1039225	CallExpression	job -> KillJob ( force )		1039160	0					
ANR	1039226	Callee	job -> KillJob		1039160	0					
ANR	1039227	PtrMemberAccess	job -> KillJob		1039160	0					
ANR	1039228	Identifier	job		1039160	0					
ANR	1039229	Identifier	KillJob		1039160	1					
ANR	1039230	ArgumentList	force		1039160	1					
ANR	1039231	Argument	force		1039160	0					
ANR	1039232	Identifier	force		1039160	0					
ANR	1039233	ReturnStatement	return 0 ;	78:1:2088:2096	1039160	3	True				
ANR	1039234	PrimaryExpression	0		1039160	0					
ANR	1039235	ReturnType	int		1039160	1					
ANR	1039236	Identifier	CondorCronJobList :: KillAll		1039160	2					
ANR	1039237	ParameterList	bool force		1039160	3					
ANR	1039238	Parameter	bool force	68:28:1782:1791	1039160	0	True				
ANR	1039239	ParameterType	bool		1039160	0					
ANR	1039240	Identifier	force		1039160	1					
ANR	1039241	CFGEntryNode	ENTRY		1039160		True				
ANR	1039242	CFGExitNode	EXIT		1039160		True				
ANR	1039243	Symbol	m_job_list		1039160						
ANR	1039244	Symbol	m_job_list . begin		1039160						
ANR	1039245	Symbol	* iter		1039160						
ANR	1039246	Symbol	* job		1039160						
ANR	1039247	Symbol	D_ALWAYS		1039160						
ANR	1039248	Symbol	iter		1039160						
ANR	1039249	Symbol	force		1039160						
ANR	1039250	Symbol	m_job_list . end		1039160						
ANR	1039251	Symbol	job		1039160						
ANR	1039252	Symbol	job -> GetName		1039160						
ANR	1039253	Function	CondorCronJobList :: NumAliveJobs	82:0:2149:2459							
ANR	1039254	FunctionDef	CondorCronJobList :: NumAliveJobs ()		1039253	0					
ANR	1039255	CompoundStatement		84:0:2199:2459	1039253	0					
ANR	1039256	IdentifierDeclStatement	int num_alive = 0 ;	85:1:2202:2222	1039253	0	True				
ANR	1039257	IdentifierDecl	num_alive = 0		1039253	0					
ANR	1039258	IdentifierDeclType	int		1039253	0					
ANR	1039259	Identifier	num_alive		1039253	1					
ANR	1039260	AssignmentExpression	num_alive = 0		1039253	2		=			
ANR	1039261	Identifier	num_alive		1039253	0					
ANR	1039262	PrimaryExpression	0		1039253	1					
ANR	1039263	IdentifierDeclStatement	list < CronJob * > :: const_iterator iter ;	88:1:2252:2288	1039253	1	True				
ANR	1039264	IdentifierDecl	iter		1039253	0					
ANR	1039265	IdentifierDeclType	list < CronJob * > :: const_iterator		1039253	0					
ANR	1039266	Identifier	iter		1039253	1					
ANR	1039267	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		1039253	2					
ANR	1039268	ForInit	iter = m_job_list . begin ( ) ;	89:6:2296:2321	1039253	0	True				
ANR	1039269	AssignmentExpression	iter = m_job_list . begin ( )		1039253	0		=			
ANR	1039270	Identifier	iter		1039253	0					
ANR	1039271	CallExpression	m_job_list . begin ( )		1039253	1					
ANR	1039272	Callee	m_job_list . begin		1039253	0					
ANR	1039273	MemberAccess	m_job_list . begin		1039253	0					
ANR	1039274	Identifier	m_job_list		1039253	0					
ANR	1039275	Identifier	begin		1039253	1					
ANR	1039276	ArgumentList			1039253	1					
ANR	1039277	Condition	iter != m_job_list . end ( )	89:33:2323:2346	1039253	1	True				
ANR	1039278	EqualityExpression	iter != m_job_list . end ( )		1039253	0		!=			
ANR	1039279	Identifier	iter		1039253	0					
ANR	1039280	CallExpression	m_job_list . end ( )		1039253	1					
ANR	1039281	Callee	m_job_list . end		1039253	0					
ANR	1039282	MemberAccess	m_job_list . end		1039253	0					
ANR	1039283	Identifier	m_job_list		1039253	0					
ANR	1039284	Identifier	end		1039253	1					
ANR	1039285	ArgumentList			1039253	1					
ANR	1039286	PostIncDecOperationExpression	iter ++	89:59:2349:2354	1039253	2	True				
ANR	1039287	Identifier	iter		1039253	0					
ANR	1039288	IncDec	++		1039253	1					
ANR	1039289	CompoundStatement		7:2:162:188	1039253	3					
ANR	1039290	IdentifierDeclStatement	const CronJob * job = * iter ;	90:2:2362:2388	1039253	0	True				
ANR	1039291	IdentifierDecl	* job = * iter		1039253	0					
ANR	1039292	IdentifierDeclType	const CronJob *		1039253	0					
ANR	1039293	Identifier	job		1039253	1					
ANR	1039294	AssignmentExpression	* job = * iter		1039253	2		=			
ANR	1039295	Identifier	job		1039253	0					
ANR	1039296	UnaryOperationExpression	* iter		1039253	1					
ANR	1039297	UnaryOperator	*		1039253	0					
ANR	1039298	Identifier	iter		1039253	1					
ANR	1039299	IfStatement	if ( job -> IsAlive ( ) )		1039253	1					
ANR	1039300	Condition	job -> IsAlive ( )	91:7:2397:2411	1039253	0	True				
ANR	1039301	CallExpression	job -> IsAlive ( )		1039253	0					
ANR	1039302	Callee	job -> IsAlive		1039253	0					
ANR	1039303	PtrMemberAccess	job -> IsAlive		1039253	0					
ANR	1039304	Identifier	job		1039253	0					
ANR	1039305	Identifier	IsAlive		1039253	1					
ANR	1039306	ArgumentList			1039253	1					
ANR	1039307	CompoundStatement		8:25:215:215	1039253	1					
ANR	1039308	ExpressionStatement	num_alive ++	92:3:2420:2431	1039253	0	True				
ANR	1039309	PostIncDecOperationExpression	num_alive ++		1039253	0					
ANR	1039310	Identifier	num_alive		1039253	0					
ANR	1039311	IncDec	++		1039253	1					
ANR	1039312	ReturnStatement	return num_alive ;	95:1:2441:2457	1039253	3	True				
ANR	1039313	Identifier	num_alive		1039253	0					
ANR	1039314	ReturnType	int		1039253	1					
ANR	1039315	Identifier	CondorCronJobList :: NumAliveJobs		1039253	2					
ANR	1039316	ParameterList			1039253	3					
ANR	1039317	CFGEntryNode	ENTRY		1039253		True				
ANR	1039318	CFGExitNode	EXIT		1039253		True				
ANR	1039319	Symbol	m_job_list		1039253						
ANR	1039320	Symbol	m_job_list . begin		1039253						
ANR	1039321	Symbol	* iter		1039253						
ANR	1039322	Symbol	* job		1039253						
ANR	1039323	Symbol	iter		1039253						
ANR	1039324	Symbol	num_alive		1039253						
ANR	1039325	Symbol	m_job_list . end		1039253						
ANR	1039326	Symbol	job		1039253						
ANR	1039327	Symbol	job -> IsAlive		1039253						
ANR	1039328	Function	CondorCronJobList :: RunningJobLoad	99:0:2510:2801							
ANR	1039329	FunctionDef	CondorCronJobList :: RunningJobLoad ()		1039328	0					
ANR	1039330	CompoundStatement		101:0:2565:2801	1039328	0					
ANR	1039331	IdentifierDeclStatement	double load = 0.0 ;	102:1:2568:2587	1039328	0	True				
ANR	1039332	IdentifierDecl	load = 0.0		1039328	0					
ANR	1039333	IdentifierDeclType	double		1039328	0					
ANR	1039334	Identifier	load		1039328	1					
ANR	1039335	AssignmentExpression	load = 0.0		1039328	2		=			
ANR	1039336	Identifier	load		1039328	0					
ANR	1039337	PrimaryExpression	0.0		1039328	1					
ANR	1039338	IdentifierDeclStatement	list < CronJob * > :: const_iterator iter ;	105:1:2617:2653	1039328	1	True				
ANR	1039339	IdentifierDecl	iter		1039328	0					
ANR	1039340	IdentifierDeclType	list < CronJob * > :: const_iterator		1039328	0					
ANR	1039341	Identifier	iter		1039328	1					
ANR	1039342	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		1039328	2					
ANR	1039343	ForInit	iter = m_job_list . begin ( ) ;	106:6:2661:2686	1039328	0	True				
ANR	1039344	AssignmentExpression	iter = m_job_list . begin ( )		1039328	0		=			
ANR	1039345	Identifier	iter		1039328	0					
ANR	1039346	CallExpression	m_job_list . begin ( )		1039328	1					
ANR	1039347	Callee	m_job_list . begin		1039328	0					
ANR	1039348	MemberAccess	m_job_list . begin		1039328	0					
ANR	1039349	Identifier	m_job_list		1039328	0					
ANR	1039350	Identifier	begin		1039328	1					
ANR	1039351	ArgumentList			1039328	1					
ANR	1039352	Condition	iter != m_job_list . end ( )	106:33:2688:2711	1039328	1	True				
ANR	1039353	EqualityExpression	iter != m_job_list . end ( )		1039328	0		!=			
ANR	1039354	Identifier	iter		1039328	0					
ANR	1039355	CallExpression	m_job_list . end ( )		1039328	1					
ANR	1039356	Callee	m_job_list . end		1039328	0					
ANR	1039357	MemberAccess	m_job_list . end		1039328	0					
ANR	1039358	Identifier	m_job_list		1039328	0					
ANR	1039359	Identifier	end		1039328	1					
ANR	1039360	ArgumentList			1039328	1					
ANR	1039361	PostIncDecOperationExpression	iter ++	106:59:2714:2719	1039328	2	True				
ANR	1039362	Identifier	iter		1039328	0					
ANR	1039363	IncDec	++		1039328	1					
ANR	1039364	CompoundStatement		7:2:161:187	1039328	3					
ANR	1039365	IdentifierDeclStatement	const CronJob * job = * iter ;	107:2:2727:2753	1039328	0	True				
ANR	1039366	IdentifierDecl	* job = * iter		1039328	0					
ANR	1039367	IdentifierDeclType	const CronJob *		1039328	0					
ANR	1039368	Identifier	job		1039328	1					
ANR	1039369	AssignmentExpression	* job = * iter		1039328	2		=			
ANR	1039370	Identifier	job		1039328	0					
ANR	1039371	UnaryOperationExpression	* iter		1039328	1					
ANR	1039372	UnaryOperator	*		1039328	0					
ANR	1039373	Identifier	iter		1039328	1					
ANR	1039374	ExpressionStatement	load += job -> GetRunLoad ( )	108:2:2757:2782	1039328	1	True				
ANR	1039375	AssignmentExpression	load += job -> GetRunLoad ( )		1039328	0		+=			
ANR	1039376	Identifier	load		1039328	0					
ANR	1039377	CallExpression	job -> GetRunLoad ( )		1039328	1					
ANR	1039378	Callee	job -> GetRunLoad		1039328	0					
ANR	1039379	PtrMemberAccess	job -> GetRunLoad		1039328	0					
ANR	1039380	Identifier	job		1039328	0					
ANR	1039381	Identifier	GetRunLoad		1039328	1					
ANR	1039382	ArgumentList			1039328	1					
ANR	1039383	ReturnStatement	return load ;	110:1:2788:2799	1039328	3	True				
ANR	1039384	Identifier	load		1039328	0					
ANR	1039385	ReturnType	double		1039328	1					
ANR	1039386	Identifier	CondorCronJobList :: RunningJobLoad		1039328	2					
ANR	1039387	ParameterList			1039328	3					
ANR	1039388	CFGEntryNode	ENTRY		1039328		True				
ANR	1039389	CFGExitNode	EXIT		1039328		True				
ANR	1039390	Symbol	m_job_list		1039328						
ANR	1039391	Symbol	m_job_list . begin		1039328						
ANR	1039392	Symbol	* iter		1039328						
ANR	1039393	Symbol	load		1039328						
ANR	1039394	Symbol	job -> GetRunLoad		1039328						
ANR	1039395	Symbol	* job		1039328						
ANR	1039396	Symbol	iter		1039328						
ANR	1039397	Symbol	m_job_list . end		1039328						
ANR	1039398	Symbol	job		1039328						
ANR	1039399	Function	CondorCronJobList :: NumActiveJobs	114:0:2846:3161							
ANR	1039400	FunctionDef	CondorCronJobList :: NumActiveJobs ()		1039399	0					
ANR	1039401	CompoundStatement		116:0:2897:3161	1039399	0					
ANR	1039402	IdentifierDeclStatement	int num_active = 0 ;	117:1:2900:2921	1039399	0	True				
ANR	1039403	IdentifierDecl	num_active = 0		1039399	0					
ANR	1039404	IdentifierDeclType	int		1039399	0					
ANR	1039405	Identifier	num_active		1039399	1					
ANR	1039406	AssignmentExpression	num_active = 0		1039399	2		=			
ANR	1039407	Identifier	num_active		1039399	0					
ANR	1039408	PrimaryExpression	0		1039399	1					
ANR	1039409	IdentifierDeclStatement	list < CronJob * > :: const_iterator iter ;	120:1:2951:2987	1039399	1	True				
ANR	1039410	IdentifierDecl	iter		1039399	0					
ANR	1039411	IdentifierDeclType	list < CronJob * > :: const_iterator		1039399	0					
ANR	1039412	Identifier	iter		1039399	1					
ANR	1039413	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		1039399	2					
ANR	1039414	ForInit	iter = m_job_list . begin ( ) ;	121:6:2995:3020	1039399	0	True				
ANR	1039415	AssignmentExpression	iter = m_job_list . begin ( )		1039399	0		=			
ANR	1039416	Identifier	iter		1039399	0					
ANR	1039417	CallExpression	m_job_list . begin ( )		1039399	1					
ANR	1039418	Callee	m_job_list . begin		1039399	0					
ANR	1039419	MemberAccess	m_job_list . begin		1039399	0					
ANR	1039420	Identifier	m_job_list		1039399	0					
ANR	1039421	Identifier	begin		1039399	1					
ANR	1039422	ArgumentList			1039399	1					
ANR	1039423	Condition	iter != m_job_list . end ( )	121:33:3022:3045	1039399	1	True				
ANR	1039424	EqualityExpression	iter != m_job_list . end ( )		1039399	0		!=			
ANR	1039425	Identifier	iter		1039399	0					
ANR	1039426	CallExpression	m_job_list . end ( )		1039399	1					
ANR	1039427	Callee	m_job_list . end		1039399	0					
ANR	1039428	MemberAccess	m_job_list . end		1039399	0					
ANR	1039429	Identifier	m_job_list		1039399	0					
ANR	1039430	Identifier	end		1039399	1					
ANR	1039431	ArgumentList			1039399	1					
ANR	1039432	PostIncDecOperationExpression	iter ++	121:59:3048:3053	1039399	2	True				
ANR	1039433	Identifier	iter		1039399	0					
ANR	1039434	IncDec	++		1039399	1					
ANR	1039435	CompoundStatement		7:2:163:189	1039399	3					
ANR	1039436	IdentifierDeclStatement	const CronJob * job = * iter ;	122:2:3061:3087	1039399	0	True				
ANR	1039437	IdentifierDecl	* job = * iter		1039399	0					
ANR	1039438	IdentifierDeclType	const CronJob *		1039399	0					
ANR	1039439	Identifier	job		1039399	1					
ANR	1039440	AssignmentExpression	* job = * iter		1039399	2		=			
ANR	1039441	Identifier	job		1039399	0					
ANR	1039442	UnaryOperationExpression	* iter		1039399	1					
ANR	1039443	UnaryOperator	*		1039399	0					
ANR	1039444	Identifier	iter		1039399	1					
ANR	1039445	IfStatement	if ( job -> IsActive ( ) )		1039399	1					
ANR	1039446	Condition	job -> IsActive ( )	123:7:3096:3111	1039399	0	True				
ANR	1039447	CallExpression	job -> IsActive ( )		1039399	0					
ANR	1039448	Callee	job -> IsActive		1039399	0					
ANR	1039449	PtrMemberAccess	job -> IsActive		1039399	0					
ANR	1039450	Identifier	job		1039399	0					
ANR	1039451	Identifier	IsActive		1039399	1					
ANR	1039452	ArgumentList			1039399	1					
ANR	1039453	CompoundStatement		8:26:217:217	1039399	1					
ANR	1039454	ExpressionStatement	num_active ++	124:3:3120:3132	1039399	0	True				
ANR	1039455	PostIncDecOperationExpression	num_active ++		1039399	0					
ANR	1039456	Identifier	num_active		1039399	0					
ANR	1039457	IncDec	++		1039399	1					
ANR	1039458	ReturnStatement	return num_active ;	127:1:3142:3159	1039399	3	True				
ANR	1039459	Identifier	num_active		1039399	0					
ANR	1039460	ReturnType	int		1039399	1					
ANR	1039461	Identifier	CondorCronJobList :: NumActiveJobs		1039399	2					
ANR	1039462	ParameterList			1039399	3					
ANR	1039463	CFGEntryNode	ENTRY		1039399		True				
ANR	1039464	CFGExitNode	EXIT		1039399		True				
ANR	1039465	Symbol	m_job_list		1039399						
ANR	1039466	Symbol	m_job_list . begin		1039399						
ANR	1039467	Symbol	* iter		1039399						
ANR	1039468	Symbol	* job		1039399						
ANR	1039469	Symbol	iter		1039399						
ANR	1039470	Symbol	num_active		1039399						
ANR	1039471	Symbol	m_job_list . end		1039399						
ANR	1039472	Symbol	job		1039399						
ANR	1039473	Symbol	job -> IsActive		1039399						
ANR	1039474	Function	CondorCronJobList :: GetStringList	131:0:3224:3519							
ANR	1039475	FunctionDef	CondorCronJobList :: GetStringList (StringList & sl)		1039474	0					
ANR	1039476	CompoundStatement		133:0:3286:3519	1039474	0					
ANR	1039477	ExpressionStatement	sl . clearAll ( )	134:1:3289:3303	1039474	0	True				
ANR	1039478	CallExpression	sl . clearAll ( )		1039474	0					
ANR	1039479	Callee	sl . clearAll		1039474	0					
ANR	1039480	MemberAccess	sl . clearAll		1039474	0					
ANR	1039481	Identifier	sl		1039474	0					
ANR	1039482	Identifier	clearAll		1039474	1					
ANR	1039483	ArgumentList			1039474	1					
ANR	1039484	IdentifierDeclStatement	list < CronJob * > :: const_iterator iter ;	137:1:3333:3369	1039474	1	True				
ANR	1039485	IdentifierDecl	iter		1039474	0					
ANR	1039486	IdentifierDeclType	list < CronJob * > :: const_iterator		1039474	0					
ANR	1039487	Identifier	iter		1039474	1					
ANR	1039488	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		1039474	2					
ANR	1039489	ForInit	iter = m_job_list . begin ( ) ;	138:6:3377:3402	1039474	0	True				
ANR	1039490	AssignmentExpression	iter = m_job_list . begin ( )		1039474	0		=			
ANR	1039491	Identifier	iter		1039474	0					
ANR	1039492	CallExpression	m_job_list . begin ( )		1039474	1					
ANR	1039493	Callee	m_job_list . begin		1039474	0					
ANR	1039494	MemberAccess	m_job_list . begin		1039474	0					
ANR	1039495	Identifier	m_job_list		1039474	0					
ANR	1039496	Identifier	begin		1039474	1					
ANR	1039497	ArgumentList			1039474	1					
ANR	1039498	Condition	iter != m_job_list . end ( )	138:33:3404:3427	1039474	1	True				
ANR	1039499	EqualityExpression	iter != m_job_list . end ( )		1039474	0		!=			
ANR	1039500	Identifier	iter		1039474	0					
ANR	1039501	CallExpression	m_job_list . end ( )		1039474	1					
ANR	1039502	Callee	m_job_list . end		1039474	0					
ANR	1039503	MemberAccess	m_job_list . end		1039474	0					
ANR	1039504	Identifier	m_job_list		1039474	0					
ANR	1039505	Identifier	end		1039474	1					
ANR	1039506	ArgumentList			1039474	1					
ANR	1039507	PostIncDecOperationExpression	iter ++	138:59:3430:3435	1039474	2	True				
ANR	1039508	Identifier	iter		1039474	0					
ANR	1039509	IncDec	++		1039474	1					
ANR	1039510	CompoundStatement		7:2:156:182	1039474	3					
ANR	1039511	IdentifierDeclStatement	const CronJob * job = * iter ;	139:2:3443:3469	1039474	0	True				
ANR	1039512	IdentifierDecl	* job = * iter		1039474	0					
ANR	1039513	IdentifierDeclType	const CronJob *		1039474	0					
ANR	1039514	Identifier	job		1039474	1					
ANR	1039515	AssignmentExpression	* job = * iter		1039474	2		=			
ANR	1039516	Identifier	job		1039474	0					
ANR	1039517	UnaryOperationExpression	* iter		1039474	1					
ANR	1039518	UnaryOperator	*		1039474	0					
ANR	1039519	Identifier	iter		1039474	1					
ANR	1039520	ExpressionStatement	sl . append ( job -> GetName ( ) )	140:2:3473:3500	1039474	1	True				
ANR	1039521	CallExpression	sl . append ( job -> GetName ( ) )		1039474	0					
ANR	1039522	Callee	sl . append		1039474	0					
ANR	1039523	MemberAccess	sl . append		1039474	0					
ANR	1039524	Identifier	sl		1039474	0					
ANR	1039525	Identifier	append		1039474	1					
ANR	1039526	ArgumentList	job -> GetName ( )		1039474	1					
ANR	1039527	Argument	job -> GetName ( )		1039474	0					
ANR	1039528	CallExpression	job -> GetName ( )		1039474	0					
ANR	1039529	Callee	job -> GetName		1039474	0					
ANR	1039530	PtrMemberAccess	job -> GetName		1039474	0					
ANR	1039531	Identifier	job		1039474	0					
ANR	1039532	Identifier	GetName		1039474	1					
ANR	1039533	ArgumentList			1039474	1					
ANR	1039534	ReturnStatement	return true ;	142:1:3506:3517	1039474	3	True				
ANR	1039535	Identifier	true		1039474	0					
ANR	1039536	ReturnType	bool		1039474	1					
ANR	1039537	Identifier	CondorCronJobList :: GetStringList		1039474	2					
ANR	1039538	ParameterList	StringList & sl		1039474	3					
ANR	1039539	Parameter	StringList & sl	132:34:3263:3276	1039474	0	True				
ANR	1039540	ParameterType	StringList &		1039474	0					
ANR	1039541	Identifier	sl		1039474	1					
ANR	1039542	CFGEntryNode	ENTRY		1039474		True				
ANR	1039543	CFGExitNode	EXIT		1039474		True				
ANR	1039544	Symbol	m_job_list		1039474						
ANR	1039545	Symbol	m_job_list . begin		1039474						
ANR	1039546	Symbol	* iter		1039474						
ANR	1039547	Symbol	* job		1039474						
ANR	1039548	Symbol	true		1039474						
ANR	1039549	Symbol	sl		1039474						
ANR	1039550	Symbol	iter		1039474						
ANR	1039551	Symbol	m_job_list . end		1039474						
ANR	1039552	Symbol	job		1039474						
ANR	1039553	Symbol	job -> GetName		1039474						
ANR	1039554	Function	CondorCronJobList :: HandleReconfig	146:0:3546:3787							
ANR	1039555	FunctionDef	CondorCronJobList :: HandleReconfig ()		1039554	0					
ANR	1039556	CompoundStatement		148:0:3592:3787	1039554	0					
ANR	1039557	IdentifierDeclStatement	list < CronJob * > :: iterator iter ;	150:1:3621:3651	1039554	0	True				
ANR	1039558	IdentifierDecl	iter		1039554	0					
ANR	1039559	IdentifierDeclType	list < CronJob * > :: iterator		1039554	0					
ANR	1039560	Identifier	iter		1039554	1					
ANR	1039561	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		1039554	1					
ANR	1039562	ForInit	iter = m_job_list . begin ( ) ;	151:6:3659:3684	1039554	0	True				
ANR	1039563	AssignmentExpression	iter = m_job_list . begin ( )		1039554	0		=			
ANR	1039564	Identifier	iter		1039554	0					
ANR	1039565	CallExpression	m_job_list . begin ( )		1039554	1					
ANR	1039566	Callee	m_job_list . begin		1039554	0					
ANR	1039567	MemberAccess	m_job_list . begin		1039554	0					
ANR	1039568	Identifier	m_job_list		1039554	0					
ANR	1039569	Identifier	begin		1039554	1					
ANR	1039570	ArgumentList			1039554	1					
ANR	1039571	Condition	iter != m_job_list . end ( )	151:33:3686:3709	1039554	1	True				
ANR	1039572	EqualityExpression	iter != m_job_list . end ( )		1039554	0		!=			
ANR	1039573	Identifier	iter		1039554	0					
ANR	1039574	CallExpression	m_job_list . end ( )		1039554	1					
ANR	1039575	Callee	m_job_list . end		1039554	0					
ANR	1039576	MemberAccess	m_job_list . end		1039554	0					
ANR	1039577	Identifier	m_job_list		1039554	0					
ANR	1039578	Identifier	end		1039554	1					
ANR	1039579	ArgumentList			1039554	1					
ANR	1039580	PostIncDecOperationExpression	iter ++	151:59:3712:3717	1039554	2	True				
ANR	1039581	Identifier	iter		1039554	0					
ANR	1039582	IncDec	++		1039554	1					
ANR	1039583	CompoundStatement		5:2:132:152	1039554	3					
ANR	1039584	IdentifierDeclStatement	CronJob * job = * iter ;	152:2:3725:3745	1039554	0	True				
ANR	1039585	IdentifierDecl	* job = * iter		1039554	0					
ANR	1039586	IdentifierDeclType	CronJob *		1039554	0					
ANR	1039587	Identifier	job		1039554	1					
ANR	1039588	AssignmentExpression	* job = * iter		1039554	2		=			
ANR	1039589	Identifier	job		1039554	0					
ANR	1039590	UnaryOperationExpression	* iter		1039554	1					
ANR	1039591	UnaryOperator	*		1039554	0					
ANR	1039592	Identifier	iter		1039554	1					
ANR	1039593	ExpressionStatement	job -> HandleReconfig ( )	153:2:3749:3771	1039554	1	True				
ANR	1039594	CallExpression	job -> HandleReconfig ( )		1039554	0					
ANR	1039595	Callee	job -> HandleReconfig		1039554	0					
ANR	1039596	PtrMemberAccess	job -> HandleReconfig		1039554	0					
ANR	1039597	Identifier	job		1039554	0					
ANR	1039598	Identifier	HandleReconfig		1039554	1					
ANR	1039599	ArgumentList			1039554	1					
ANR	1039600	ReturnStatement	return 0 ;	155:1:3777:3785	1039554	2	True				
ANR	1039601	PrimaryExpression	0		1039554	0					
ANR	1039602	ReturnType	int		1039554	1					
ANR	1039603	Identifier	CondorCronJobList :: HandleReconfig		1039554	2					
ANR	1039604	ParameterList			1039554	3					
ANR	1039605	CFGEntryNode	ENTRY		1039554		True				
ANR	1039606	CFGExitNode	EXIT		1039554		True				
ANR	1039607	Symbol	m_job_list		1039554						
ANR	1039608	Symbol	m_job_list . begin		1039554						
ANR	1039609	Symbol	* iter		1039554						
ANR	1039610	Symbol	iter		1039554						
ANR	1039611	Symbol	m_job_list . end		1039554						
ANR	1039612	Symbol	job		1039554						
ANR	1039613	Function	CondorCronJobList :: InitializeAll	159:0:3813:4049							
ANR	1039614	FunctionDef	CondorCronJobList :: InitializeAll ()		1039613	0					
ANR	1039615	CompoundStatement		161:0:3858:4049	1039613	0					
ANR	1039616	IdentifierDeclStatement	list < CronJob * > :: iterator iter ;	163:1:3887:3917	1039613	0	True				
ANR	1039617	IdentifierDecl	iter		1039613	0					
ANR	1039618	IdentifierDeclType	list < CronJob * > :: iterator		1039613	0					
ANR	1039619	Identifier	iter		1039613	1					
ANR	1039620	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		1039613	1					
ANR	1039621	ForInit	iter = m_job_list . begin ( ) ;	164:6:3925:3950	1039613	0	True				
ANR	1039622	AssignmentExpression	iter = m_job_list . begin ( )		1039613	0		=			
ANR	1039623	Identifier	iter		1039613	0					
ANR	1039624	CallExpression	m_job_list . begin ( )		1039613	1					
ANR	1039625	Callee	m_job_list . begin		1039613	0					
ANR	1039626	MemberAccess	m_job_list . begin		1039613	0					
ANR	1039627	Identifier	m_job_list		1039613	0					
ANR	1039628	Identifier	begin		1039613	1					
ANR	1039629	ArgumentList			1039613	1					
ANR	1039630	Condition	iter != m_job_list . end ( )	164:33:3952:3975	1039613	1	True				
ANR	1039631	EqualityExpression	iter != m_job_list . end ( )		1039613	0		!=			
ANR	1039632	Identifier	iter		1039613	0					
ANR	1039633	CallExpression	m_job_list . end ( )		1039613	1					
ANR	1039634	Callee	m_job_list . end		1039613	0					
ANR	1039635	MemberAccess	m_job_list . end		1039613	0					
ANR	1039636	Identifier	m_job_list		1039613	0					
ANR	1039637	Identifier	end		1039613	1					
ANR	1039638	ArgumentList			1039613	1					
ANR	1039639	PostIncDecOperationExpression	iter ++	164:59:3978:3983	1039613	2	True				
ANR	1039640	Identifier	iter		1039613	0					
ANR	1039641	IncDec	++		1039613	1					
ANR	1039642	CompoundStatement		5:2:132:152	1039613	3					
ANR	1039643	IdentifierDeclStatement	CronJob * job = * iter ;	165:2:3991:4011	1039613	0	True				
ANR	1039644	IdentifierDecl	* job = * iter		1039613	0					
ANR	1039645	IdentifierDeclType	CronJob *		1039613	0					
ANR	1039646	Identifier	job		1039613	1					
ANR	1039647	AssignmentExpression	* job = * iter		1039613	2		=			
ANR	1039648	Identifier	job		1039613	0					
ANR	1039649	UnaryOperationExpression	* iter		1039613	1					
ANR	1039650	UnaryOperator	*		1039613	0					
ANR	1039651	Identifier	iter		1039613	1					
ANR	1039652	ExpressionStatement	job -> Initialize ( )	166:2:4015:4033	1039613	1	True				
ANR	1039653	CallExpression	job -> Initialize ( )		1039613	0					
ANR	1039654	Callee	job -> Initialize		1039613	0					
ANR	1039655	PtrMemberAccess	job -> Initialize		1039613	0					
ANR	1039656	Identifier	job		1039613	0					
ANR	1039657	Identifier	Initialize		1039613	1					
ANR	1039658	ArgumentList			1039613	1					
ANR	1039659	ReturnStatement	return 0 ;	168:1:4039:4047	1039613	2	True				
ANR	1039660	PrimaryExpression	0		1039613	0					
ANR	1039661	ReturnType	int		1039613	1					
ANR	1039662	Identifier	CondorCronJobList :: InitializeAll		1039613	2					
ANR	1039663	ParameterList			1039613	3					
ANR	1039664	CFGEntryNode	ENTRY		1039613		True				
ANR	1039665	CFGExitNode	EXIT		1039613		True				
ANR	1039666	Symbol	m_job_list		1039613						
ANR	1039667	Symbol	m_job_list . begin		1039613						
ANR	1039668	Symbol	* iter		1039613						
ANR	1039669	Symbol	iter		1039613						
ANR	1039670	Symbol	m_job_list . end		1039613						
ANR	1039671	Symbol	job		1039613						
ANR	1039672	Function	CondorCronJobList :: ScheduleAll	172:0:4073:4305							
ANR	1039673	FunctionDef	CondorCronJobList :: ScheduleAll ()		1039672	0					
ANR	1039674	CompoundStatement		174:0:4116:4305	1039672	0					
ANR	1039675	IdentifierDeclStatement	list < CronJob * > :: iterator iter ;	176:1:4145:4175	1039672	0	True				
ANR	1039676	IdentifierDecl	iter		1039672	0					
ANR	1039677	IdentifierDeclType	list < CronJob * > :: iterator		1039672	0					
ANR	1039678	Identifier	iter		1039672	1					
ANR	1039679	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		1039672	1					
ANR	1039680	ForInit	iter = m_job_list . begin ( ) ;	177:6:4183:4208	1039672	0	True				
ANR	1039681	AssignmentExpression	iter = m_job_list . begin ( )		1039672	0		=			
ANR	1039682	Identifier	iter		1039672	0					
ANR	1039683	CallExpression	m_job_list . begin ( )		1039672	1					
ANR	1039684	Callee	m_job_list . begin		1039672	0					
ANR	1039685	MemberAccess	m_job_list . begin		1039672	0					
ANR	1039686	Identifier	m_job_list		1039672	0					
ANR	1039687	Identifier	begin		1039672	1					
ANR	1039688	ArgumentList			1039672	1					
ANR	1039689	Condition	iter != m_job_list . end ( )	177:33:4210:4233	1039672	1	True				
ANR	1039690	EqualityExpression	iter != m_job_list . end ( )		1039672	0		!=			
ANR	1039691	Identifier	iter		1039672	0					
ANR	1039692	CallExpression	m_job_list . end ( )		1039672	1					
ANR	1039693	Callee	m_job_list . end		1039672	0					
ANR	1039694	MemberAccess	m_job_list . end		1039672	0					
ANR	1039695	Identifier	m_job_list		1039672	0					
ANR	1039696	Identifier	end		1039672	1					
ANR	1039697	ArgumentList			1039672	1					
ANR	1039698	PostIncDecOperationExpression	iter ++	177:59:4236:4241	1039672	2	True				
ANR	1039699	Identifier	iter		1039672	0					
ANR	1039700	IncDec	++		1039672	1					
ANR	1039701	CompoundStatement		5:2:132:152	1039672	3					
ANR	1039702	IdentifierDeclStatement	CronJob * job = * iter ;	178:2:4249:4269	1039672	0	True				
ANR	1039703	IdentifierDecl	* job = * iter		1039672	0					
ANR	1039704	IdentifierDeclType	CronJob *		1039672	0					
ANR	1039705	Identifier	job		1039672	1					
ANR	1039706	AssignmentExpression	* job = * iter		1039672	2		=			
ANR	1039707	Identifier	job		1039672	0					
ANR	1039708	UnaryOperationExpression	* iter		1039672	1					
ANR	1039709	UnaryOperator	*		1039672	0					
ANR	1039710	Identifier	iter		1039672	1					
ANR	1039711	ExpressionStatement	job -> Schedule ( )	179:2:4273:4289	1039672	1	True				
ANR	1039712	CallExpression	job -> Schedule ( )		1039672	0					
ANR	1039713	Callee	job -> Schedule		1039672	0					
ANR	1039714	PtrMemberAccess	job -> Schedule		1039672	0					
ANR	1039715	Identifier	job		1039672	0					
ANR	1039716	Identifier	Schedule		1039672	1					
ANR	1039717	ArgumentList			1039672	1					
ANR	1039718	ReturnStatement	return 0 ;	181:1:4295:4303	1039672	2	True				
ANR	1039719	PrimaryExpression	0		1039672	0					
ANR	1039720	ReturnType	int		1039672	1					
ANR	1039721	Identifier	CondorCronJobList :: ScheduleAll		1039672	2					
ANR	1039722	ParameterList			1039672	3					
ANR	1039723	CFGEntryNode	ENTRY		1039672		True				
ANR	1039724	CFGExitNode	EXIT		1039672		True				
ANR	1039725	Symbol	m_job_list		1039672						
ANR	1039726	Symbol	m_job_list . begin		1039672						
ANR	1039727	Symbol	* iter		1039672						
ANR	1039728	Symbol	iter		1039672						
ANR	1039729	Symbol	m_job_list . end		1039672						
ANR	1039730	Symbol	job		1039672						
ANR	1039731	Function	CondorCronJobList :: StartOnDemandJobs	185:0:4329:4645							
ANR	1039732	FunctionDef	CondorCronJobList :: StartOnDemandJobs ()		1039731	0					
ANR	1039733	CompoundStatement		187:0:4378:4645	1039731	0					
ANR	1039734	IdentifierDeclStatement	int num = 0 ;	188:1:4381:4395	1039731	0	True				
ANR	1039735	IdentifierDecl	num = 0		1039731	0					
ANR	1039736	IdentifierDeclType	int		1039731	0					
ANR	1039737	Identifier	num		1039731	1					
ANR	1039738	AssignmentExpression	num = 0		1039731	2		=			
ANR	1039739	Identifier	num		1039731	0					
ANR	1039740	PrimaryExpression	0		1039731	1					
ANR	1039741	IdentifierDeclStatement	list < CronJob * > :: iterator iter ;	191:1:4425:4455	1039731	1	True				
ANR	1039742	IdentifierDecl	iter		1039731	0					
ANR	1039743	IdentifierDeclType	list < CronJob * > :: iterator		1039731	0					
ANR	1039744	Identifier	iter		1039731	1					
ANR	1039745	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		1039731	2					
ANR	1039746	ForInit	iter = m_job_list . begin ( ) ;	192:6:4463:4488	1039731	0	True				
ANR	1039747	AssignmentExpression	iter = m_job_list . begin ( )		1039731	0		=			
ANR	1039748	Identifier	iter		1039731	0					
ANR	1039749	CallExpression	m_job_list . begin ( )		1039731	1					
ANR	1039750	Callee	m_job_list . begin		1039731	0					
ANR	1039751	MemberAccess	m_job_list . begin		1039731	0					
ANR	1039752	Identifier	m_job_list		1039731	0					
ANR	1039753	Identifier	begin		1039731	1					
ANR	1039754	ArgumentList			1039731	1					
ANR	1039755	Condition	iter != m_job_list . end ( )	192:33:4490:4513	1039731	1	True				
ANR	1039756	EqualityExpression	iter != m_job_list . end ( )		1039731	0		!=			
ANR	1039757	Identifier	iter		1039731	0					
ANR	1039758	CallExpression	m_job_list . end ( )		1039731	1					
ANR	1039759	Callee	m_job_list . end		1039731	0					
ANR	1039760	MemberAccess	m_job_list . end		1039731	0					
ANR	1039761	Identifier	m_job_list		1039731	0					
ANR	1039762	Identifier	end		1039731	1					
ANR	1039763	ArgumentList			1039731	1					
ANR	1039764	PostIncDecOperationExpression	iter ++	192:59:4516:4521	1039731	2	True				
ANR	1039765	Identifier	iter		1039731	0					
ANR	1039766	IncDec	++		1039731	1					
ANR	1039767	CompoundStatement		7:2:150:170	1039731	3					
ANR	1039768	IdentifierDeclStatement	CronJob * job = * iter ;	193:2:4529:4549	1039731	0	True				
ANR	1039769	IdentifierDecl	* job = * iter		1039731	0					
ANR	1039770	IdentifierDeclType	CronJob *		1039731	0					
ANR	1039771	Identifier	job		1039731	1					
ANR	1039772	AssignmentExpression	* job = * iter		1039731	2		=			
ANR	1039773	Identifier	job		1039731	0					
ANR	1039774	UnaryOperationExpression	* iter		1039731	1					
ANR	1039775	UnaryOperator	*		1039731	0					
ANR	1039776	Identifier	iter		1039731	1					
ANR	1039777	IfStatement	if ( job -> Params ( ) . IsOnDemand ( ) )		1039731	1					
ANR	1039778	Condition	job -> Params ( ) . IsOnDemand ( )	194:7:4558:4583	1039731	0	True				
ANR	1039779	CallExpression	job -> Params ( ) . IsOnDemand ( )		1039731	0					
ANR	1039780	Callee	job -> Params ( ) . IsOnDemand		1039731	0					
ANR	1039781	MemberAccess	job -> Params ( ) . IsOnDemand		1039731	0					
ANR	1039782	CallExpression	job -> Params ( )		1039731	0					
ANR	1039783	Callee	job -> Params		1039731	0					
ANR	1039784	PtrMemberAccess	job -> Params		1039731	0					
ANR	1039785	Identifier	job		1039731	0					
ANR	1039786	Identifier	Params		1039731	1					
ANR	1039787	ArgumentList			1039731	1					
ANR	1039788	Identifier	IsOnDemand		1039731	1					
ANR	1039789	ArgumentList			1039731	1					
ANR	1039790	CompoundStatement		8:36:208:208	1039731	1					
ANR	1039791	ExpressionStatement	job -> StartOnDemand ( )	195:3:4592:4613	1039731	0	True				
ANR	1039792	CallExpression	job -> StartOnDemand ( )		1039731	0					
ANR	1039793	Callee	job -> StartOnDemand		1039731	0					
ANR	1039794	PtrMemberAccess	job -> StartOnDemand		1039731	0					
ANR	1039795	Identifier	job		1039731	0					
ANR	1039796	Identifier	StartOnDemand		1039731	1					
ANR	1039797	ArgumentList			1039731	1					
ANR	1039798	ExpressionStatement	num ++	196:3:4618:4623	1039731	1	True				
ANR	1039799	PostIncDecOperationExpression	num ++		1039731	0					
ANR	1039800	Identifier	num		1039731	0					
ANR	1039801	IncDec	++		1039731	1					
ANR	1039802	ReturnStatement	return num ;	199:1:4633:4643	1039731	3	True				
ANR	1039803	Identifier	num		1039731	0					
ANR	1039804	ReturnType	int		1039731	1					
ANR	1039805	Identifier	CondorCronJobList :: StartOnDemandJobs		1039731	2					
ANR	1039806	ParameterList			1039731	3					
ANR	1039807	CFGEntryNode	ENTRY		1039731		True				
ANR	1039808	CFGExitNode	EXIT		1039731		True				
ANR	1039809	Symbol	m_job_list		1039731						
ANR	1039810	Symbol	m_job_list . begin		1039731						
ANR	1039811	Symbol	* iter		1039731						
ANR	1039812	Symbol	job -> Params ( ) . IsOnDemand		1039731						
ANR	1039813	Symbol	num		1039731						
ANR	1039814	Symbol	* job		1039731						
ANR	1039815	Symbol	iter		1039731						
ANR	1039816	Symbol	job -> Params		1039731						
ANR	1039817	Symbol	m_job_list . end		1039731						
ANR	1039818	Symbol	job		1039731						
ANR	1039819	Function	CondorCronJobList :: ClearAllMarks	203:0:4671:4896							
ANR	1039820	FunctionDef	CondorCronJobList :: ClearAllMarks ()		1039819	0					
ANR	1039821	CompoundStatement		205:0:4717:4896	1039819	0					
ANR	1039822	IdentifierDeclStatement	list < CronJob * > :: iterator iter ;	207:1:4746:4776	1039819	0	True				
ANR	1039823	IdentifierDecl	iter		1039819	0					
ANR	1039824	IdentifierDeclType	list < CronJob * > :: iterator		1039819	0					
ANR	1039825	Identifier	iter		1039819	1					
ANR	1039826	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		1039819	1					
ANR	1039827	ForInit	iter = m_job_list . begin ( ) ;	208:6:4784:4809	1039819	0	True				
ANR	1039828	AssignmentExpression	iter = m_job_list . begin ( )		1039819	0		=			
ANR	1039829	Identifier	iter		1039819	0					
ANR	1039830	CallExpression	m_job_list . begin ( )		1039819	1					
ANR	1039831	Callee	m_job_list . begin		1039819	0					
ANR	1039832	MemberAccess	m_job_list . begin		1039819	0					
ANR	1039833	Identifier	m_job_list		1039819	0					
ANR	1039834	Identifier	begin		1039819	1					
ANR	1039835	ArgumentList			1039819	1					
ANR	1039836	Condition	iter != m_job_list . end ( )	208:33:4811:4834	1039819	1	True				
ANR	1039837	EqualityExpression	iter != m_job_list . end ( )		1039819	0		!=			
ANR	1039838	Identifier	iter		1039819	0					
ANR	1039839	CallExpression	m_job_list . end ( )		1039819	1					
ANR	1039840	Callee	m_job_list . end		1039819	0					
ANR	1039841	MemberAccess	m_job_list . end		1039819	0					
ANR	1039842	Identifier	m_job_list		1039819	0					
ANR	1039843	Identifier	end		1039819	1					
ANR	1039844	ArgumentList			1039819	1					
ANR	1039845	PostIncDecOperationExpression	iter ++	208:59:4837:4842	1039819	2	True				
ANR	1039846	Identifier	iter		1039819	0					
ANR	1039847	IncDec	++		1039819	1					
ANR	1039848	CompoundStatement		5:2:132:152	1039819	3					
ANR	1039849	IdentifierDeclStatement	CronJob * job = * iter ;	209:2:4850:4870	1039819	0	True				
ANR	1039850	IdentifierDecl	* job = * iter		1039819	0					
ANR	1039851	IdentifierDeclType	CronJob *		1039819	0					
ANR	1039852	Identifier	job		1039819	1					
ANR	1039853	AssignmentExpression	* job = * iter		1039819	2		=			
ANR	1039854	Identifier	job		1039819	0					
ANR	1039855	UnaryOperationExpression	* iter		1039819	1					
ANR	1039856	UnaryOperator	*		1039819	0					
ANR	1039857	Identifier	iter		1039819	1					
ANR	1039858	ExpressionStatement	job -> ClearMark ( )	210:2:4874:4891	1039819	1	True				
ANR	1039859	CallExpression	job -> ClearMark ( )		1039819	0					
ANR	1039860	Callee	job -> ClearMark		1039819	0					
ANR	1039861	PtrMemberAccess	job -> ClearMark		1039819	0					
ANR	1039862	Identifier	job		1039819	0					
ANR	1039863	Identifier	ClearMark		1039819	1					
ANR	1039864	ArgumentList			1039819	1					
ANR	1039865	ReturnType	void		1039819	1					
ANR	1039866	Identifier	CondorCronJobList :: ClearAllMarks		1039819	2					
ANR	1039867	ParameterList			1039819	3					
ANR	1039868	CFGEntryNode	ENTRY		1039819		True				
ANR	1039869	CFGExitNode	EXIT		1039819		True				
ANR	1039870	Symbol	m_job_list		1039819						
ANR	1039871	Symbol	m_job_list . begin		1039819						
ANR	1039872	Symbol	* iter		1039819						
ANR	1039873	Symbol	iter		1039819						
ANR	1039874	Symbol	m_job_list . end		1039819						
ANR	1039875	Symbol	job		1039819						
ANR	1039876	Function	CondorCronJobList :: DeleteUnmarked	215:0:4927:5588							
ANR	1039877	FunctionDef	CondorCronJobList :: DeleteUnmarked ()		1039876	0					
ANR	1039878	CompoundStatement		217:0:4974:5588	1039876	0					
ANR	1039879	IdentifierDeclStatement	list < CronJob * > kill_list ;	218:1:4977:5004	1039876	0	True				
ANR	1039880	IdentifierDecl	kill_list		1039876	0					
ANR	1039881	IdentifierDeclType	list < CronJob * >		1039876	0					
ANR	1039882	Identifier	kill_list		1039876	1					
ANR	1039883	IdentifierDeclStatement	list < CronJob * > :: iterator iter ;	221:1:5069:5099	1039876	1	True				
ANR	1039884	IdentifierDecl	iter		1039876	0					
ANR	1039885	IdentifierDeclType	list < CronJob * > :: iterator		1039876	0					
ANR	1039886	Identifier	iter		1039876	1					
ANR	1039887	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		1039876	2					
ANR	1039888	ForInit	iter = m_job_list . begin ( ) ;	222:6:5107:5132	1039876	0	True				
ANR	1039889	AssignmentExpression	iter = m_job_list . begin ( )		1039876	0		=			
ANR	1039890	Identifier	iter		1039876	0					
ANR	1039891	CallExpression	m_job_list . begin ( )		1039876	1					
ANR	1039892	Callee	m_job_list . begin		1039876	0					
ANR	1039893	MemberAccess	m_job_list . begin		1039876	0					
ANR	1039894	Identifier	m_job_list		1039876	0					
ANR	1039895	Identifier	begin		1039876	1					
ANR	1039896	ArgumentList			1039876	1					
ANR	1039897	Condition	iter != m_job_list . end ( )	222:33:5134:5157	1039876	1	True				
ANR	1039898	EqualityExpression	iter != m_job_list . end ( )		1039876	0		!=			
ANR	1039899	Identifier	iter		1039876	0					
ANR	1039900	CallExpression	m_job_list . end ( )		1039876	1					
ANR	1039901	Callee	m_job_list . end		1039876	0					
ANR	1039902	MemberAccess	m_job_list . end		1039876	0					
ANR	1039903	Identifier	m_job_list		1039876	0					
ANR	1039904	Identifier	end		1039876	1					
ANR	1039905	ArgumentList			1039876	1					
ANR	1039906	PostIncDecOperationExpression	iter ++	222:59:5160:5165	1039876	2	True				
ANR	1039907	Identifier	iter		1039876	0					
ANR	1039908	IncDec	++		1039876	1					
ANR	1039909	CompoundStatement		7:2:198:218	1039876	3					
ANR	1039910	IdentifierDeclStatement	CronJob * job = * iter ;	223:2:5173:5193	1039876	0	True				
ANR	1039911	IdentifierDecl	* job = * iter		1039876	0					
ANR	1039912	IdentifierDeclType	CronJob *		1039876	0					
ANR	1039913	Identifier	job		1039876	1					
ANR	1039914	AssignmentExpression	* job = * iter		1039876	2		=			
ANR	1039915	Identifier	job		1039876	0					
ANR	1039916	UnaryOperationExpression	* iter		1039876	1					
ANR	1039917	UnaryOperator	*		1039876	0					
ANR	1039918	Identifier	iter		1039876	1					
ANR	1039919	IfStatement	if ( ! job -> IsMarked ( ) )		1039876	1					
ANR	1039920	Condition	! job -> IsMarked ( )	224:7:5202:5219	1039876	0	True				
ANR	1039921	UnaryOperationExpression	! job -> IsMarked ( )		1039876	0					
ANR	1039922	UnaryOperator	!		1039876	0					
ANR	1039923	CallExpression	job -> IsMarked ( )		1039876	1					
ANR	1039924	Callee	job -> IsMarked		1039876	0					
ANR	1039925	PtrMemberAccess	job -> IsMarked		1039876	0					
ANR	1039926	Identifier	job		1039876	0					
ANR	1039927	Identifier	IsMarked		1039876	1					
ANR	1039928	ArgumentList			1039876	1					
ANR	1039929	CompoundStatement		8:28:248:248	1039876	1					
ANR	1039930	ExpressionStatement	kill_list . push_back ( job )	225:3:5228:5254	1039876	0	True				
ANR	1039931	CallExpression	kill_list . push_back ( job )		1039876	0					
ANR	1039932	Callee	kill_list . push_back		1039876	0					
ANR	1039933	MemberAccess	kill_list . push_back		1039876	0					
ANR	1039934	Identifier	kill_list		1039876	0					
ANR	1039935	Identifier	push_back		1039876	1					
ANR	1039936	ArgumentList	job		1039876	1					
ANR	1039937	Argument	job		1039876	0					
ANR	1039938	Identifier	job		1039876	0					
ANR	1039939	ForStatement	for ( iter = kill_list . begin ( ) ; iter != kill_list . end ( ) ; iter ++ )		1039876	3					
ANR	1039940	ForInit	iter = kill_list . begin ( ) ;	229:6:5270:5294	1039876	0	True				
ANR	1039941	AssignmentExpression	iter = kill_list . begin ( )		1039876	0		=			
ANR	1039942	Identifier	iter		1039876	0					
ANR	1039943	CallExpression	kill_list . begin ( )		1039876	1					
ANR	1039944	Callee	kill_list . begin		1039876	0					
ANR	1039945	MemberAccess	kill_list . begin		1039876	0					
ANR	1039946	Identifier	kill_list		1039876	0					
ANR	1039947	Identifier	begin		1039876	1					
ANR	1039948	ArgumentList			1039876	1					
ANR	1039949	Condition	iter != kill_list . end ( )	229:32:5296:5318	1039876	1	True				
ANR	1039950	EqualityExpression	iter != kill_list . end ( )		1039876	0		!=			
ANR	1039951	Identifier	iter		1039876	0					
ANR	1039952	CallExpression	kill_list . end ( )		1039876	1					
ANR	1039953	Callee	kill_list . end		1039876	0					
ANR	1039954	MemberAccess	kill_list . end		1039876	0					
ANR	1039955	Identifier	kill_list		1039876	0					
ANR	1039956	Identifier	end		1039876	1					
ANR	1039957	ArgumentList			1039876	1					
ANR	1039958	PostIncDecOperationExpression	iter ++	229:57:5321:5326	1039876	2	True				
ANR	1039959	Identifier	iter		1039876	0					
ANR	1039960	IncDec	++		1039876	1					
ANR	1039961	CompoundStatement		14:2:359:379	1039876	3					
ANR	1039962	IdentifierDeclStatement	CronJob * job = * iter ;	230:2:5334:5354	1039876	0	True				
ANR	1039963	IdentifierDecl	* job = * iter		1039876	0					
ANR	1039964	IdentifierDeclType	CronJob *		1039876	0					
ANR	1039965	Identifier	job		1039876	1					
ANR	1039966	AssignmentExpression	* job = * iter		1039876	2		=			
ANR	1039967	Identifier	job		1039876	0					
ANR	1039968	UnaryOperationExpression	* iter		1039876	1					
ANR	1039969	UnaryOperator	*		1039876	0					
ANR	1039970	Identifier	iter		1039876	1					
ANR	1039971	ExpressionStatement	"dprintf ( D_ALWAYS , ""Killing job %p '%s'\\n"" , job , job -> GetName ( ) )"	231:2:5358:5423	1039876	1	True				
ANR	1039972	CallExpression	"dprintf ( D_ALWAYS , ""Killing job %p '%s'\\n"" , job , job -> GetName ( ) )"		1039876	0					
ANR	1039973	Callee	dprintf		1039876	0					
ANR	1039974	Identifier	dprintf		1039876	0					
ANR	1039975	ArgumentList	D_ALWAYS		1039876	1					
ANR	1039976	Argument	D_ALWAYS		1039876	0					
ANR	1039977	Identifier	D_ALWAYS		1039876	0					
ANR	1039978	Argument	"""Killing job %p '%s'\\n"""		1039876	1					
ANR	1039979	PrimaryExpression	"""Killing job %p '%s'\\n"""		1039876	0					
ANR	1039980	Argument	job		1039876	2					
ANR	1039981	Identifier	job		1039876	0					
ANR	1039982	Argument	job -> GetName ( )		1039876	3					
ANR	1039983	CallExpression	job -> GetName ( )		1039876	0					
ANR	1039984	Callee	job -> GetName		1039876	0					
ANR	1039985	PtrMemberAccess	job -> GetName		1039876	0					
ANR	1039986	Identifier	job		1039876	0					
ANR	1039987	Identifier	GetName		1039876	1					
ANR	1039988	ArgumentList			1039876	1					
ANR	1039989	ExpressionStatement	job -> KillJob ( true )	232:2:5427:5447	1039876	2	True				
ANR	1039990	CallExpression	job -> KillJob ( true )		1039876	0					
ANR	1039991	Callee	job -> KillJob		1039876	0					
ANR	1039992	PtrMemberAccess	job -> KillJob		1039876	0					
ANR	1039993	Identifier	job		1039876	0					
ANR	1039994	Identifier	KillJob		1039876	1					
ANR	1039995	ArgumentList	true		1039876	1					
ANR	1039996	Argument	true		1039876	0					
ANR	1039997	Identifier	true		1039876	0					
ANR	1039998	ExpressionStatement	"dprintf ( D_ALWAYS , ""Erasing iterator\\n"" )"	233:2:5451:5492	1039876	3	True				
ANR	1039999	CallExpression	"dprintf ( D_ALWAYS , ""Erasing iterator\\n"" )"		1039876	0					
ANR	1040000	Callee	dprintf		1039876	0					
ANR	1040001	Identifier	dprintf		1039876	0					
ANR	1040002	ArgumentList	D_ALWAYS		1039876	1					
ANR	1040003	Argument	D_ALWAYS		1039876	0					
ANR	1040004	Identifier	D_ALWAYS		1039876	0					
ANR	1040005	Argument	"""Erasing iterator\\n"""		1039876	1					
ANR	1040006	PrimaryExpression	"""Erasing iterator\\n"""		1039876	0					
ANR	1040007	ExpressionStatement	m_job_list . remove ( job )	234:2:5496:5520	1039876	4	True				
ANR	1040008	CallExpression	m_job_list . remove ( job )		1039876	0					
ANR	1040009	Callee	m_job_list . remove		1039876	0					
ANR	1040010	MemberAccess	m_job_list . remove		1039876	0					
ANR	1040011	Identifier	m_job_list		1039876	0					
ANR	1040012	Identifier	remove		1039876	1					
ANR	1040013	ArgumentList	job		1039876	1					
ANR	1040014	Argument	job		1039876	0					
ANR	1040015	Identifier	job		1039876	0					
ANR	1040016	ExpressionStatement	"dprintf ( D_ALWAYS , ""Deleting job %p\\n"" , job )"	235:2:5524:5569	1039876	5	True				
ANR	1040017	CallExpression	"dprintf ( D_ALWAYS , ""Deleting job %p\\n"" , job )"		1039876	0					
ANR	1040018	Callee	dprintf		1039876	0					
ANR	1040019	Identifier	dprintf		1039876	0					
ANR	1040020	ArgumentList	D_ALWAYS		1039876	1					
ANR	1040021	Argument	D_ALWAYS		1039876	0					
ANR	1040022	Identifier	D_ALWAYS		1039876	0					
ANR	1040023	Argument	"""Deleting job %p\\n"""		1039876	1					
ANR	1040024	PrimaryExpression	"""Deleting job %p\\n"""		1039876	0					
ANR	1040025	Argument	job		1039876	2					
ANR	1040026	Identifier	job		1039876	0					
ANR	1040027	Statement	delete	236:2:5573:5578	1039876	6	True				
ANR	1040028	ExpressionStatement	job	236:9:5580:5583	1039876	7	True				
ANR	1040029	Identifier	job		1039876	0					
ANR	1040030	ReturnType	void		1039876	1					
ANR	1040031	Identifier	CondorCronJobList :: DeleteUnmarked		1039876	2					
ANR	1040032	ParameterList			1039876	3					
ANR	1040033	CFGEntryNode	ENTRY		1039876		True				
ANR	1040034	CFGExitNode	EXIT		1039876		True				
ANR	1040035	Symbol	m_job_list . begin		1039876						
ANR	1040036	Symbol	job -> IsMarked		1039876						
ANR	1040037	Symbol	* job		1039876						
ANR	1040038	Symbol	D_ALWAYS		1039876						
ANR	1040039	Symbol	iter		1039876						
ANR	1040040	Symbol	job -> GetName		1039876						
ANR	1040041	Symbol	kill_list		1039876						
ANR	1040042	Symbol	m_job_list		1039876						
ANR	1040043	Symbol	* iter		1039876						
ANR	1040044	Symbol	kill_list . end		1039876						
ANR	1040045	Symbol	true		1039876						
ANR	1040046	Symbol	m_job_list . end		1039876						
ANR	1040047	Symbol	job		1039876						
ANR	1040048	Symbol	kill_list . begin		1039876						
ANR	1040049	Function	CondorCronJobList :: AddJob	240:0:5591:5995							
ANR	1040050	FunctionDef	"CondorCronJobList :: AddJob (const char * name , CronJob * job)"		1040049	0					
ANR	1040051	CompoundStatement		242:0:5656:5995	1040049	0					
ANR	1040052	IfStatement	if ( NULL != FindJob ( name ) )		1040049	0					
ANR	1040053	Condition	NULL != FindJob ( name )	244:6:5707:5729	1040049	0	True				
ANR	1040054	EqualityExpression	NULL != FindJob ( name )		1040049	0		!=			
ANR	1040055	Identifier	NULL		1040049	0					
ANR	1040056	CallExpression	FindJob ( name )		1040049	1					
ANR	1040057	Callee	FindJob		1040049	0					
ANR	1040058	Identifier	FindJob		1040049	0					
ANR	1040059	ArgumentList	name		1040049	1					
ANR	1040060	Argument	name		1040049	0					
ANR	1040061	Identifier	name		1040049	0					
ANR	1040062	CompoundStatement		3:32:76:76	1040049	1					
ANR	1040063	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJobList: Not creating duplicate job '%s'\\n"" , name )"	245:2:5737:5817	1040049	0	True				
ANR	1040064	CallExpression	"dprintf ( D_ALWAYS , ""CronJobList: Not creating duplicate job '%s'\\n"" , name )"		1040049	0					
ANR	1040065	Callee	dprintf		1040049	0					
ANR	1040066	Identifier	dprintf		1040049	0					
ANR	1040067	ArgumentList	D_ALWAYS		1040049	1					
ANR	1040068	Argument	D_ALWAYS		1040049	0					
ANR	1040069	Identifier	D_ALWAYS		1040049	0					
ANR	1040070	Argument	"""CronJobList: Not creating duplicate job '%s'\\n"""		1040049	1					
ANR	1040071	PrimaryExpression	"""CronJobList: Not creating duplicate job '%s'\\n"""		1040049	0					
ANR	1040072	Argument	name		1040049	2					
ANR	1040073	Identifier	name		1040049	0					
ANR	1040074	ReturnStatement	return false ;	247:2:5821:5833	1040049	1	True				
ANR	1040075	Identifier	false		1040049	0					
ANR	1040076	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJobList: Adding job '%s'\\n"" , name )"	251:1:5880:5939	1040049	1	True				
ANR	1040077	CallExpression	"dprintf ( D_ALWAYS , ""CronJobList: Adding job '%s'\\n"" , name )"		1040049	0					
ANR	1040078	Callee	dprintf		1040049	0					
ANR	1040079	Identifier	dprintf		1040049	0					
ANR	1040080	ArgumentList	D_ALWAYS		1040049	1					
ANR	1040081	Argument	D_ALWAYS		1040049	0					
ANR	1040082	Identifier	D_ALWAYS		1040049	0					
ANR	1040083	Argument	"""CronJobList: Adding job '%s'\\n"""		1040049	1					
ANR	1040084	PrimaryExpression	"""CronJobList: Adding job '%s'\\n"""		1040049	0					
ANR	1040085	Argument	name		1040049	2					
ANR	1040086	Identifier	name		1040049	0					
ANR	1040087	ExpressionStatement	m_job_list . push_back ( job )	252:1:5942:5969	1040049	2	True				
ANR	1040088	CallExpression	m_job_list . push_back ( job )		1040049	0					
ANR	1040089	Callee	m_job_list . push_back		1040049	0					
ANR	1040090	MemberAccess	m_job_list . push_back		1040049	0					
ANR	1040091	Identifier	m_job_list		1040049	0					
ANR	1040092	Identifier	push_back		1040049	1					
ANR	1040093	ArgumentList	job		1040049	1					
ANR	1040094	Argument	job		1040049	0					
ANR	1040095	Identifier	job		1040049	0					
ANR	1040096	ReturnStatement	return true ;	255:1:5982:5993	1040049	3	True				
ANR	1040097	Identifier	true		1040049	0					
ANR	1040098	ReturnType	bool		1040049	1					
ANR	1040099	Identifier	CondorCronJobList :: AddJob		1040049	2					
ANR	1040100	ParameterList	"const char * name , CronJob * job"		1040049	3					
ANR	1040101	Parameter	const char * name	241:27:5623:5638	1040049	0	True				
ANR	1040102	ParameterType	const char *		1040049	0					
ANR	1040103	Identifier	name		1040049	1					
ANR	1040104	Parameter	CronJob * job	241:45:5641:5652	1040049	1	True				
ANR	1040105	ParameterType	CronJob *		1040049	0					
ANR	1040106	Identifier	job		1040049	1					
ANR	1040107	CFGEntryNode	ENTRY		1040049		True				
ANR	1040108	CFGExitNode	EXIT		1040049		True				
ANR	1040109	Symbol	m_job_list		1040049						
ANR	1040110	Symbol	NULL		1040049						
ANR	1040111	Symbol	name		1040049						
ANR	1040112	Symbol	D_ALWAYS		1040049						
ANR	1040113	Symbol	false		1040049						
ANR	1040114	Symbol	true		1040049						
ANR	1040115	Symbol	FindJob		1040049						
ANR	1040116	Symbol	job		1040049						
ANR	1040117	Function	CondorCronJobList :: DeleteJob	259:0:6014:6484							
ANR	1040118	FunctionDef	CondorCronJobList :: DeleteJob (const char * job_name)		1040117	0					
ANR	1040119	CompoundStatement		261:0:6071:6484	1040117	0					
ANR	1040120	IdentifierDeclStatement	list < CronJob * > :: iterator iter ;	263:1:6135:6165	1040117	0	True				
ANR	1040121	IdentifierDecl	iter		1040117	0					
ANR	1040122	IdentifierDeclType	list < CronJob * > :: iterator		1040117	0					
ANR	1040123	Identifier	iter		1040117	1					
ANR	1040124	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		1040117	1					
ANR	1040125	ForInit	iter = m_job_list . begin ( ) ;	264:6:6173:6198	1040117	0	True				
ANR	1040126	AssignmentExpression	iter = m_job_list . begin ( )		1040117	0		=			
ANR	1040127	Identifier	iter		1040117	0					
ANR	1040128	CallExpression	m_job_list . begin ( )		1040117	1					
ANR	1040129	Callee	m_job_list . begin		1040117	0					
ANR	1040130	MemberAccess	m_job_list . begin		1040117	0					
ANR	1040131	Identifier	m_job_list		1040117	0					
ANR	1040132	Identifier	begin		1040117	1					
ANR	1040133	ArgumentList			1040117	1					
ANR	1040134	Condition	iter != m_job_list . end ( )	264:33:6200:6223	1040117	1	True				
ANR	1040135	EqualityExpression	iter != m_job_list . end ( )		1040117	0		!=			
ANR	1040136	Identifier	iter		1040117	0					
ANR	1040137	CallExpression	m_job_list . end ( )		1040117	1					
ANR	1040138	Callee	m_job_list . end		1040117	0					
ANR	1040139	MemberAccess	m_job_list . end		1040117	0					
ANR	1040140	Identifier	m_job_list		1040117	0					
ANR	1040141	Identifier	end		1040117	1					
ANR	1040142	ArgumentList			1040117	1					
ANR	1040143	PostIncDecOperationExpression	iter ++	264:59:6226:6231	1040117	2	True				
ANR	1040144	Identifier	iter		1040117	0					
ANR	1040145	IncDec	++		1040117	1					
ANR	1040146	CompoundStatement		5:2:167:187	1040117	3					
ANR	1040147	IdentifierDeclStatement	CronJob * job = * iter ;	265:2:6239:6259	1040117	0	True				
ANR	1040148	IdentifierDecl	* job = * iter		1040117	0					
ANR	1040149	IdentifierDeclType	CronJob *		1040117	0					
ANR	1040150	Identifier	job		1040117	1					
ANR	1040151	AssignmentExpression	* job = * iter		1040117	2		=			
ANR	1040152	Identifier	job		1040117	0					
ANR	1040153	UnaryOperationExpression	* iter		1040117	1					
ANR	1040154	UnaryOperator	*		1040117	0					
ANR	1040155	Identifier	iter		1040117	1					
ANR	1040156	IfStatement	"if ( ! strcmp ( job_name , job -> GetName ( ) ) )"		1040117	1					
ANR	1040157	Condition	"! strcmp ( job_name , job -> GetName ( ) )"	266:7:6268:6304	1040117	0	True				
ANR	1040158	UnaryOperationExpression	"! strcmp ( job_name , job -> GetName ( ) )"		1040117	0					
ANR	1040159	UnaryOperator	!		1040117	0					
ANR	1040160	CallExpression	"strcmp ( job_name , job -> GetName ( ) )"		1040117	1					
ANR	1040161	Callee	strcmp		1040117	0					
ANR	1040162	Identifier	strcmp		1040117	0					
ANR	1040163	ArgumentList	job_name		1040117	1					
ANR	1040164	Argument	job_name		1040117	0					
ANR	1040165	Identifier	job_name		1040117	0					
ANR	1040166	Argument	job -> GetName ( )		1040117	1					
ANR	1040167	CallExpression	job -> GetName ( )		1040117	0					
ANR	1040168	Callee	job -> GetName		1040117	0					
ANR	1040169	PtrMemberAccess	job -> GetName		1040117	0					
ANR	1040170	Identifier	job		1040117	0					
ANR	1040171	Identifier	GetName		1040117	1					
ANR	1040172	ArgumentList			1040117	1					
ANR	1040173	CompoundStatement		6:47:236:236	1040117	1					
ANR	1040174	ExpressionStatement	m_job_list . erase ( iter )	267:3:6313:6337	1040117	0	True				
ANR	1040175	CallExpression	m_job_list . erase ( iter )		1040117	0					
ANR	1040176	Callee	m_job_list . erase		1040117	0					
ANR	1040177	MemberAccess	m_job_list . erase		1040117	0					
ANR	1040178	Identifier	m_job_list		1040117	0					
ANR	1040179	Identifier	erase		1040117	1					
ANR	1040180	ArgumentList	iter		1040117	1					
ANR	1040181	Argument	iter		1040117	0					
ANR	1040182	Identifier	iter		1040117	0					
ANR	1040183	Statement	delete	268:3:6342:6347	1040117	1	True				
ANR	1040184	ExpressionStatement	job	268:10:6349:6352	1040117	2	True				
ANR	1040185	Identifier	job		1040117	0					
ANR	1040186	ReturnStatement	return 0 ;	269:3:6357:6365	1040117	3	True				
ANR	1040187	PrimaryExpression	0		1040117	0					
ANR	1040188	ExpressionStatement	"dprintf ( D_ALWAYS , ""CronJobList: Attempt to delete non-existent job '%s'\\n"" , job_name )"	273:1:6376:6471	1040117	2	True				
ANR	1040189	CallExpression	"dprintf ( D_ALWAYS , ""CronJobList: Attempt to delete non-existent job '%s'\\n"" , job_name )"		1040117	0					
ANR	1040190	Callee	dprintf		1040117	0					
ANR	1040191	Identifier	dprintf		1040117	0					
ANR	1040192	ArgumentList	D_ALWAYS		1040117	1					
ANR	1040193	Argument	D_ALWAYS		1040117	0					
ANR	1040194	Identifier	D_ALWAYS		1040117	0					
ANR	1040195	Argument	"""CronJobList: Attempt to delete non-existent job '%s'\\n"""		1040117	1					
ANR	1040196	PrimaryExpression	"""CronJobList: Attempt to delete non-existent job '%s'\\n"""		1040117	0					
ANR	1040197	Argument	job_name		1040117	2					
ANR	1040198	Identifier	job_name		1040117	0					
ANR	1040199	ReturnStatement	return 1 ;	276:1:6474:6482	1040117	3	True				
ANR	1040200	PrimaryExpression	1		1040117	0					
ANR	1040201	ReturnType	int		1040117	1					
ANR	1040202	Identifier	CondorCronJobList :: DeleteJob		1040117	2					
ANR	1040203	ParameterList	const char * job_name		1040117	3					
ANR	1040204	Parameter	const char * job_name	260:30:6048:6067	1040117	0	True				
ANR	1040205	ParameterType	const char *		1040117	0					
ANR	1040206	Identifier	job_name		1040117	1					
ANR	1040207	CFGEntryNode	ENTRY		1040117		True				
ANR	1040208	CFGExitNode	EXIT		1040117		True				
ANR	1040209	Symbol	m_job_list		1040117						
ANR	1040210	Symbol	m_job_list . begin		1040117						
ANR	1040211	Symbol	strcmp		1040117						
ANR	1040212	Symbol	* iter		1040117						
ANR	1040213	Symbol	job_name		1040117						
ANR	1040214	Symbol	* job		1040117						
ANR	1040215	Symbol	D_ALWAYS		1040117						
ANR	1040216	Symbol	iter		1040117						
ANR	1040217	Symbol	m_job_list . end		1040117						
ANR	1040218	Symbol	job		1040117						
ANR	1040219	Symbol	job -> GetName		1040117						
ANR	1040220	Function	CondorCronJobList :: FindJob	280:0:6515:6838							
ANR	1040221	FunctionDef	CondorCronJobList :: FindJob (const char * job_name)		1040220	0					
ANR	1040222	CompoundStatement		282:0:6576:6838	1040220	0					
ANR	1040223	IdentifierDeclStatement	list < CronJob * > :: iterator iter ;	284:1:6605:6635	1040220	0	True				
ANR	1040224	IdentifierDecl	iter		1040220	0					
ANR	1040225	IdentifierDeclType	list < CronJob * > :: iterator		1040220	0					
ANR	1040226	Identifier	iter		1040220	1					
ANR	1040227	ForStatement	for ( iter = m_job_list . begin ( ) ; iter != m_job_list . end ( ) ; iter ++ )		1040220	1					
ANR	1040228	ForInit	iter = m_job_list . begin ( ) ;	285:6:6643:6668	1040220	0	True				
ANR	1040229	AssignmentExpression	iter = m_job_list . begin ( )		1040220	0		=			
ANR	1040230	Identifier	iter		1040220	0					
ANR	1040231	CallExpression	m_job_list . begin ( )		1040220	1					
ANR	1040232	Callee	m_job_list . begin		1040220	0					
ANR	1040233	MemberAccess	m_job_list . begin		1040220	0					
ANR	1040234	Identifier	m_job_list		1040220	0					
ANR	1040235	Identifier	begin		1040220	1					
ANR	1040236	ArgumentList			1040220	1					
ANR	1040237	Condition	iter != m_job_list . end ( )	285:33:6670:6693	1040220	1	True				
ANR	1040238	EqualityExpression	iter != m_job_list . end ( )		1040220	0		!=			
ANR	1040239	Identifier	iter		1040220	0					
ANR	1040240	CallExpression	m_job_list . end ( )		1040220	1					
ANR	1040241	Callee	m_job_list . end		1040220	0					
ANR	1040242	MemberAccess	m_job_list . end		1040220	0					
ANR	1040243	Identifier	m_job_list		1040220	0					
ANR	1040244	Identifier	end		1040220	1					
ANR	1040245	ArgumentList			1040220	1					
ANR	1040246	PostIncDecOperationExpression	iter ++	285:59:6696:6701	1040220	2	True				
ANR	1040247	Identifier	iter		1040220	0					
ANR	1040248	IncDec	++		1040220	1					
ANR	1040249	CompoundStatement		5:2:132:152	1040220	3					
ANR	1040250	IdentifierDeclStatement	CronJob * job = * iter ;	286:2:6709:6729	1040220	0	True				
ANR	1040251	IdentifierDecl	* job = * iter		1040220	0					
ANR	1040252	IdentifierDeclType	CronJob *		1040220	0					
ANR	1040253	Identifier	job		1040220	1					
ANR	1040254	AssignmentExpression	* job = * iter		1040220	2		=			
ANR	1040255	Identifier	job		1040220	0					
ANR	1040256	UnaryOperationExpression	* iter		1040220	1					
ANR	1040257	UnaryOperator	*		1040220	0					
ANR	1040258	Identifier	iter		1040220	1					
ANR	1040259	IfStatement	"if ( ! strcmp ( job_name , job -> GetName ( ) ) )"		1040220	1					
ANR	1040260	Condition	"! strcmp ( job_name , job -> GetName ( ) )"	287:7:6738:6774	1040220	0	True				
ANR	1040261	UnaryOperationExpression	"! strcmp ( job_name , job -> GetName ( ) )"		1040220	0					
ANR	1040262	UnaryOperator	!		1040220	0					
ANR	1040263	CallExpression	"strcmp ( job_name , job -> GetName ( ) )"		1040220	1					
ANR	1040264	Callee	strcmp		1040220	0					
ANR	1040265	Identifier	strcmp		1040220	0					
ANR	1040266	ArgumentList	job_name		1040220	1					
ANR	1040267	Argument	job_name		1040220	0					
ANR	1040268	Identifier	job_name		1040220	0					
ANR	1040269	Argument	job -> GetName ( )		1040220	1					
ANR	1040270	CallExpression	job -> GetName ( )		1040220	0					
ANR	1040271	Callee	job -> GetName		1040220	0					
ANR	1040272	PtrMemberAccess	job -> GetName		1040220	0					
ANR	1040273	Identifier	job		1040220	0					
ANR	1040274	Identifier	GetName		1040220	1					
ANR	1040275	ArgumentList			1040220	1					
ANR	1040276	CompoundStatement		6:47:201:201	1040220	1					
ANR	1040277	ReturnStatement	return job ;	288:3:6783:6793	1040220	0	True				
ANR	1040278	Identifier	job		1040220	0					
ANR	1040279	ReturnStatement	return NULL ;	293:1:6825:6836	1040220	2	True				
ANR	1040280	Identifier	NULL		1040220	0					
ANR	1040281	ReturnType	CronJob *		1040220	1					
ANR	1040282	Identifier	CondorCronJobList :: FindJob		1040220	2					
ANR	1040283	ParameterList	const char * job_name		1040220	3					
ANR	1040284	Parameter	const char * job_name	281:28:6553:6572	1040220	0	True				
ANR	1040285	ParameterType	const char *		1040220	0					
ANR	1040286	Identifier	job_name		1040220	1					
ANR	1040287	CFGEntryNode	ENTRY		1040220		True				
ANR	1040288	CFGExitNode	EXIT		1040220		True				
ANR	1040289	Symbol	m_job_list		1040220						
ANR	1040290	Symbol	m_job_list . begin		1040220						
ANR	1040291	Symbol	strcmp		1040220						
ANR	1040292	Symbol	* iter		1040220						
ANR	1040293	Symbol	NULL		1040220						
ANR	1040294	Symbol	job_name		1040220						
ANR	1040295	Symbol	* job		1040220						
ANR	1040296	Symbol	iter		1040220						
ANR	1040297	Symbol	m_job_list . end		1040220						
ANR	1040298	Symbol	job		1040220						
ANR	1040299	Symbol	job -> GetName		1040220						
