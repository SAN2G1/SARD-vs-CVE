command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1055320	File	data/converged/CVE-2011-4930_htcondor/daemon.t.cpp								
ANR	1055321	DeclStmt									
ANR	1055322	Decl							const int	const int	dflag
ANR	1055323	Function	makeAndDisplayCM	43:0:1603:2266							
ANR	1055324	FunctionDef	"makeAndDisplayCM (char * name , char * pool)"		1055323	0					
ANR	1055325	CompoundStatement		45:0:1651:2266	1055323	0					
ANR	1055326	IdentifierDeclStatement	"Daemon collector ( DT_COLLECTOR , name , pool ) ;"	46:1:1654:1698	1055323	0	True				
ANR	1055327	IdentifierDecl	"collector ( DT_COLLECTOR , name , pool )"		1055323	0					
ANR	1055328	IdentifierDeclType	Daemon		1055323	0					
ANR	1055329	Identifier	collector		1055323	1					
ANR	1055330	Expression	"DT_COLLECTOR , name , pool"		1055323	2					
ANR	1055331	Identifier	DT_COLLECTOR		1055323	0					
ANR	1055332	Expression	"name , pool"		1055323	1					
ANR	1055333	Identifier	name		1055323	0					
ANR	1055334	Identifier	pool		1055323	1					
ANR	1055335	IdentifierDeclStatement	"Daemon negotiator ( DT_NEGOTIATOR , name , pool ) ;"	47:1:1701:1747	1055323	1	True				
ANR	1055336	IdentifierDecl	"negotiator ( DT_NEGOTIATOR , name , pool )"		1055323	0					
ANR	1055337	IdentifierDeclType	Daemon		1055323	0					
ANR	1055338	Identifier	negotiator		1055323	1					
ANR	1055339	Expression	"DT_NEGOTIATOR , name , pool"		1055323	2					
ANR	1055340	Identifier	DT_NEGOTIATOR		1055323	0					
ANR	1055341	Expression	"name , pool"		1055323	1					
ANR	1055342	Identifier	name		1055323	0					
ANR	1055343	Identifier	pool		1055323	1					
ANR	1055344	IdentifierDeclStatement	"Daemon view_collector ( DT_VIEW_COLLECTOR , name , pool ) ;"	48:1:1750:1804	1055323	2	True				
ANR	1055345	IdentifierDecl	"view_collector ( DT_VIEW_COLLECTOR , name , pool )"		1055323	0					
ANR	1055346	IdentifierDeclType	Daemon		1055323	0					
ANR	1055347	Identifier	view_collector		1055323	1					
ANR	1055348	Expression	"DT_VIEW_COLLECTOR , name , pool"		1055323	2					
ANR	1055349	Identifier	DT_VIEW_COLLECTOR		1055323	0					
ANR	1055350	Expression	"name , pool"		1055323	1					
ANR	1055351	Identifier	name		1055323	0					
ANR	1055352	Identifier	pool		1055323	1					
ANR	1055353	IfStatement	if ( ! collector . locate ( ) )		1055323	3					
ANR	1055354	Condition	! collector . locate ( )	50:5:1812:1831	1055323	0	True				
ANR	1055355	UnaryOperationExpression	! collector . locate ( )		1055323	0					
ANR	1055356	UnaryOperator	!		1055323	0					
ANR	1055357	CallExpression	collector . locate ( )		1055323	1					
ANR	1055358	Callee	collector . locate		1055323	0					
ANR	1055359	MemberAccess	collector . locate		1055323	0					
ANR	1055360	Identifier	collector		1055323	0					
ANR	1055361	Identifier	locate		1055323	1					
ANR	1055362	ArgumentList			1055323	1					
ANR	1055363	CompoundStatement		6:28:183:183	1055323	1					
ANR	1055364	ExpressionStatement	"dprintf ( dflag , ""%s\\n"" , collector . error ( ) )"	51:2:1839:1882	1055323	0	True				
ANR	1055365	CallExpression	"dprintf ( dflag , ""%s\\n"" , collector . error ( ) )"		1055323	0					
ANR	1055366	Callee	dprintf		1055323	0					
ANR	1055367	Identifier	dprintf		1055323	0					
ANR	1055368	ArgumentList	dflag		1055323	1					
ANR	1055369	Argument	dflag		1055323	0					
ANR	1055370	Identifier	dflag		1055323	0					
ANR	1055371	Argument	"""%s\\n"""		1055323	1					
ANR	1055372	PrimaryExpression	"""%s\\n"""		1055323	0					
ANR	1055373	Argument	collector . error ( )		1055323	2					
ANR	1055374	CallExpression	collector . error ( )		1055323	0					
ANR	1055375	Callee	collector . error		1055323	0					
ANR	1055376	MemberAccess	collector . error		1055323	0					
ANR	1055377	Identifier	collector		1055323	0					
ANR	1055378	Identifier	error		1055323	1					
ANR	1055379	ArgumentList			1055323	1					
ANR	1055380	ElseStatement	else		1055323	0					
ANR	1055381	CompoundStatement		8:8:240:240	1055323	0					
ANR	1055382	ExpressionStatement	collector . display ( dflag )	53:2:1897:1923	1055323	0	True				
ANR	1055383	CallExpression	collector . display ( dflag )		1055323	0					
ANR	1055384	Callee	collector . display		1055323	0					
ANR	1055385	MemberAccess	collector . display		1055323	0					
ANR	1055386	Identifier	collector		1055323	0					
ANR	1055387	Identifier	display		1055323	1					
ANR	1055388	ArgumentList	dflag		1055323	1					
ANR	1055389	Argument	dflag		1055323	0					
ANR	1055390	Identifier	dflag		1055323	0					
ANR	1055391	ExpressionStatement	"dprintf ( dflag , ""\\n"" )"	55:1:1930:1952	1055323	4	True				
ANR	1055392	CallExpression	"dprintf ( dflag , ""\\n"" )"		1055323	0					
ANR	1055393	Callee	dprintf		1055323	0					
ANR	1055394	Identifier	dprintf		1055323	0					
ANR	1055395	ArgumentList	dflag		1055323	1					
ANR	1055396	Argument	dflag		1055323	0					
ANR	1055397	Identifier	dflag		1055323	0					
ANR	1055398	Argument	"""\\n"""		1055323	1					
ANR	1055399	PrimaryExpression	"""\\n"""		1055323	0					
ANR	1055400	IfStatement	if ( ! negotiator . locate ( ) )		1055323	5					
ANR	1055401	Condition	! negotiator . locate ( )	56:5:1959:1979	1055323	0	True				
ANR	1055402	UnaryOperationExpression	! negotiator . locate ( )		1055323	0					
ANR	1055403	UnaryOperator	!		1055323	0					
ANR	1055404	CallExpression	negotiator . locate ( )		1055323	1					
ANR	1055405	Callee	negotiator . locate		1055323	0					
ANR	1055406	MemberAccess	negotiator . locate		1055323	0					
ANR	1055407	Identifier	negotiator		1055323	0					
ANR	1055408	Identifier	locate		1055323	1					
ANR	1055409	ArgumentList			1055323	1					
ANR	1055410	CompoundStatement		12:29:331:331	1055323	1					
ANR	1055411	ExpressionStatement	"dprintf ( dflag , ""%s\\n"" , negotiator . error ( ) )"	57:2:1987:2031	1055323	0	True				
ANR	1055412	CallExpression	"dprintf ( dflag , ""%s\\n"" , negotiator . error ( ) )"		1055323	0					
ANR	1055413	Callee	dprintf		1055323	0					
ANR	1055414	Identifier	dprintf		1055323	0					
ANR	1055415	ArgumentList	dflag		1055323	1					
ANR	1055416	Argument	dflag		1055323	0					
ANR	1055417	Identifier	dflag		1055323	0					
ANR	1055418	Argument	"""%s\\n"""		1055323	1					
ANR	1055419	PrimaryExpression	"""%s\\n"""		1055323	0					
ANR	1055420	Argument	negotiator . error ( )		1055323	2					
ANR	1055421	CallExpression	negotiator . error ( )		1055323	0					
ANR	1055422	Callee	negotiator . error		1055323	0					
ANR	1055423	MemberAccess	negotiator . error		1055323	0					
ANR	1055424	Identifier	negotiator		1055323	0					
ANR	1055425	Identifier	error		1055323	1					
ANR	1055426	ArgumentList			1055323	1					
ANR	1055427	ElseStatement	else		1055323	0					
ANR	1055428	CompoundStatement		14:8:389:389	1055323	0					
ANR	1055429	ExpressionStatement	negotiator . display ( dflag )	59:2:2046:2073	1055323	0	True				
ANR	1055430	CallExpression	negotiator . display ( dflag )		1055323	0					
ANR	1055431	Callee	negotiator . display		1055323	0					
ANR	1055432	MemberAccess	negotiator . display		1055323	0					
ANR	1055433	Identifier	negotiator		1055323	0					
ANR	1055434	Identifier	display		1055323	1					
ANR	1055435	ArgumentList	dflag		1055323	1					
ANR	1055436	Argument	dflag		1055323	0					
ANR	1055437	Identifier	dflag		1055323	0					
ANR	1055438	ExpressionStatement	"dprintf ( dflag , ""\\n"" )"	61:1:2080:2102	1055323	6	True				
ANR	1055439	CallExpression	"dprintf ( dflag , ""\\n"" )"		1055323	0					
ANR	1055440	Callee	dprintf		1055323	0					
ANR	1055441	Identifier	dprintf		1055323	0					
ANR	1055442	ArgumentList	dflag		1055323	1					
ANR	1055443	Argument	dflag		1055323	0					
ANR	1055444	Identifier	dflag		1055323	0					
ANR	1055445	Argument	"""\\n"""		1055323	1					
ANR	1055446	PrimaryExpression	"""\\n"""		1055323	0					
ANR	1055447	IfStatement	if ( ! view_collector . locate ( ) )		1055323	7					
ANR	1055448	Condition	! view_collector . locate ( )	62:5:2109:2133	1055323	0	True				
ANR	1055449	UnaryOperationExpression	! view_collector . locate ( )		1055323	0					
ANR	1055450	UnaryOperator	!		1055323	0					
ANR	1055451	CallExpression	view_collector . locate ( )		1055323	1					
ANR	1055452	Callee	view_collector . locate		1055323	0					
ANR	1055453	MemberAccess	view_collector . locate		1055323	0					
ANR	1055454	Identifier	view_collector		1055323	0					
ANR	1055455	Identifier	locate		1055323	1					
ANR	1055456	ArgumentList			1055323	1					
ANR	1055457	CompoundStatement		18:33:485:485	1055323	1					
ANR	1055458	ExpressionStatement	"dprintf ( dflag , ""%s\\n"" , view_collector . error ( ) )"	63:2:2141:2189	1055323	0	True				
ANR	1055459	CallExpression	"dprintf ( dflag , ""%s\\n"" , view_collector . error ( ) )"		1055323	0					
ANR	1055460	Callee	dprintf		1055323	0					
ANR	1055461	Identifier	dprintf		1055323	0					
ANR	1055462	ArgumentList	dflag		1055323	1					
ANR	1055463	Argument	dflag		1055323	0					
ANR	1055464	Identifier	dflag		1055323	0					
ANR	1055465	Argument	"""%s\\n"""		1055323	1					
ANR	1055466	PrimaryExpression	"""%s\\n"""		1055323	0					
ANR	1055467	Argument	view_collector . error ( )		1055323	2					
ANR	1055468	CallExpression	view_collector . error ( )		1055323	0					
ANR	1055469	Callee	view_collector . error		1055323	0					
ANR	1055470	MemberAccess	view_collector . error		1055323	0					
ANR	1055471	Identifier	view_collector		1055323	0					
ANR	1055472	Identifier	error		1055323	1					
ANR	1055473	ArgumentList			1055323	1					
ANR	1055474	ElseStatement	else		1055323	0					
ANR	1055475	CompoundStatement		20:8:547:547	1055323	0					
ANR	1055476	ExpressionStatement	view_collector . display ( dflag )	65:2:2204:2235	1055323	0	True				
ANR	1055477	CallExpression	view_collector . display ( dflag )		1055323	0					
ANR	1055478	Callee	view_collector . display		1055323	0					
ANR	1055479	MemberAccess	view_collector . display		1055323	0					
ANR	1055480	Identifier	view_collector		1055323	0					
ANR	1055481	Identifier	display		1055323	1					
ANR	1055482	ArgumentList	dflag		1055323	1					
ANR	1055483	Argument	dflag		1055323	0					
ANR	1055484	Identifier	dflag		1055323	0					
ANR	1055485	ExpressionStatement	"dprintf ( dflag , ""\\n"" )"	67:1:2242:2264	1055323	8	True				
ANR	1055486	CallExpression	"dprintf ( dflag , ""\\n"" )"		1055323	0					
ANR	1055487	Callee	dprintf		1055323	0					
ANR	1055488	Identifier	dprintf		1055323	0					
ANR	1055489	ArgumentList	dflag		1055323	1					
ANR	1055490	Argument	dflag		1055323	0					
ANR	1055491	Identifier	dflag		1055323	0					
ANR	1055492	Argument	"""\\n"""		1055323	1					
ANR	1055493	PrimaryExpression	"""\\n"""		1055323	0					
ANR	1055494	ReturnType	void		1055323	1					
ANR	1055495	Identifier	makeAndDisplayCM		1055323	2					
ANR	1055496	ParameterList	"char * name , char * pool"		1055323	3					
ANR	1055497	Parameter	char * name	44:18:1626:1635	1055323	0	True				
ANR	1055498	ParameterType	char *		1055323	0					
ANR	1055499	Identifier	name		1055323	1					
ANR	1055500	Parameter	char * pool	44:30:1638:1647	1055323	1	True				
ANR	1055501	ParameterType	char *		1055323	0					
ANR	1055502	Identifier	pool		1055323	1					
ANR	1055503	CFGEntryNode	ENTRY		1055323		True				
ANR	1055504	CFGExitNode	EXIT		1055323		True				
ANR	1055505	Symbol	view_collector		1055323						
ANR	1055506	Symbol	collector . locate		1055323						
ANR	1055507	Symbol	dflag		1055323						
ANR	1055508	Symbol	view_collector . error		1055323						
ANR	1055509	Symbol	name		1055323						
ANR	1055510	Symbol	pool		1055323						
ANR	1055511	Symbol	negotiator		1055323						
ANR	1055512	Symbol	negotiator . locate		1055323						
ANR	1055513	Symbol	negotiator . error		1055323						
ANR	1055514	Symbol	view_collector . locate		1055323						
ANR	1055515	Symbol	collector		1055323						
ANR	1055516	Symbol	collector . error		1055323						
ANR	1055517	Function	makeAndDisplayRegular	70:0:2269:2862							
ANR	1055518	FunctionDef	"makeAndDisplayRegular (char * name , char * pool)"		1055517	0					
ANR	1055519	CompoundStatement		72:0:2322:2862	1055517	0					
ANR	1055520	IdentifierDeclStatement	"Daemon startd ( DT_STARTD , name , pool ) ;"	73:1:2325:2363	1055517	0	True				
ANR	1055521	IdentifierDecl	"startd ( DT_STARTD , name , pool )"		1055517	0					
ANR	1055522	IdentifierDeclType	Daemon		1055517	0					
ANR	1055523	Identifier	startd		1055517	1					
ANR	1055524	Expression	"DT_STARTD , name , pool"		1055517	2					
ANR	1055525	Identifier	DT_STARTD		1055517	0					
ANR	1055526	Expression	"name , pool"		1055517	1					
ANR	1055527	Identifier	name		1055517	0					
ANR	1055528	Identifier	pool		1055517	1					
ANR	1055529	IdentifierDeclStatement	"Daemon schedd ( DT_SCHEDD , name , pool ) ;"	74:1:2366:2404	1055517	1	True				
ANR	1055530	IdentifierDecl	"schedd ( DT_SCHEDD , name , pool )"		1055517	0					
ANR	1055531	IdentifierDeclType	Daemon		1055517	0					
ANR	1055532	Identifier	schedd		1055517	1					
ANR	1055533	Expression	"DT_SCHEDD , name , pool"		1055517	2					
ANR	1055534	Identifier	DT_SCHEDD		1055517	0					
ANR	1055535	Expression	"name , pool"		1055517	1					
ANR	1055536	Identifier	name		1055517	0					
ANR	1055537	Identifier	pool		1055517	1					
ANR	1055538	IdentifierDeclStatement	"Daemon master ( DT_MASTER , name , pool ) ;"	75:1:2407:2445	1055517	2	True				
ANR	1055539	IdentifierDecl	"master ( DT_MASTER , name , pool )"		1055517	0					
ANR	1055540	IdentifierDeclType	Daemon		1055517	0					
ANR	1055541	Identifier	master		1055517	1					
ANR	1055542	Expression	"DT_MASTER , name , pool"		1055517	2					
ANR	1055543	Identifier	DT_MASTER		1055517	0					
ANR	1055544	Expression	"name , pool"		1055517	1					
ANR	1055545	Identifier	name		1055517	0					
ANR	1055546	Identifier	pool		1055517	1					
ANR	1055547	IfStatement	if ( ! startd . locate ( ) )		1055517	3					
ANR	1055548	Condition	! startd . locate ( )	77:5:2453:2469	1055517	0	True				
ANR	1055549	UnaryOperationExpression	! startd . locate ( )		1055517	0					
ANR	1055550	UnaryOperator	!		1055517	0					
ANR	1055551	CallExpression	startd . locate ( )		1055517	1					
ANR	1055552	Callee	startd . locate		1055517	0					
ANR	1055553	MemberAccess	startd . locate		1055517	0					
ANR	1055554	Identifier	startd		1055517	0					
ANR	1055555	Identifier	locate		1055517	1					
ANR	1055556	ArgumentList			1055517	1					
ANR	1055557	CompoundStatement		6:25:150:150	1055517	1					
ANR	1055558	ExpressionStatement	"dprintf ( dflag , ""%s\\n"" , startd . error ( ) )"	78:2:2477:2517	1055517	0	True				
ANR	1055559	CallExpression	"dprintf ( dflag , ""%s\\n"" , startd . error ( ) )"		1055517	0					
ANR	1055560	Callee	dprintf		1055517	0					
ANR	1055561	Identifier	dprintf		1055517	0					
ANR	1055562	ArgumentList	dflag		1055517	1					
ANR	1055563	Argument	dflag		1055517	0					
ANR	1055564	Identifier	dflag		1055517	0					
ANR	1055565	Argument	"""%s\\n"""		1055517	1					
ANR	1055566	PrimaryExpression	"""%s\\n"""		1055517	0					
ANR	1055567	Argument	startd . error ( )		1055517	2					
ANR	1055568	CallExpression	startd . error ( )		1055517	0					
ANR	1055569	Callee	startd . error		1055517	0					
ANR	1055570	MemberAccess	startd . error		1055517	0					
ANR	1055571	Identifier	startd		1055517	0					
ANR	1055572	Identifier	error		1055517	1					
ANR	1055573	ArgumentList			1055517	1					
ANR	1055574	ElseStatement	else		1055517	0					
ANR	1055575	CompoundStatement		8:8:204:204	1055517	0					
ANR	1055576	ExpressionStatement	startd . display ( dflag )	80:2:2532:2555	1055517	0	True				
ANR	1055577	CallExpression	startd . display ( dflag )		1055517	0					
ANR	1055578	Callee	startd . display		1055517	0					
ANR	1055579	MemberAccess	startd . display		1055517	0					
ANR	1055580	Identifier	startd		1055517	0					
ANR	1055581	Identifier	display		1055517	1					
ANR	1055582	ArgumentList	dflag		1055517	1					
ANR	1055583	Argument	dflag		1055517	0					
ANR	1055584	Identifier	dflag		1055517	0					
ANR	1055585	ExpressionStatement	"dprintf ( dflag , ""\\n"" )"	82:1:2562:2584	1055517	4	True				
ANR	1055586	CallExpression	"dprintf ( dflag , ""\\n"" )"		1055517	0					
ANR	1055587	Callee	dprintf		1055517	0					
ANR	1055588	Identifier	dprintf		1055517	0					
ANR	1055589	ArgumentList	dflag		1055517	1					
ANR	1055590	Argument	dflag		1055517	0					
ANR	1055591	Identifier	dflag		1055517	0					
ANR	1055592	Argument	"""\\n"""		1055517	1					
ANR	1055593	PrimaryExpression	"""\\n"""		1055517	0					
ANR	1055594	IfStatement	if ( ! schedd . locate ( ) )		1055517	5					
ANR	1055595	Condition	! schedd . locate ( )	83:5:2591:2607	1055517	0	True				
ANR	1055596	UnaryOperationExpression	! schedd . locate ( )		1055517	0					
ANR	1055597	UnaryOperator	!		1055517	0					
ANR	1055598	CallExpression	schedd . locate ( )		1055517	1					
ANR	1055599	Callee	schedd . locate		1055517	0					
ANR	1055600	MemberAccess	schedd . locate		1055517	0					
ANR	1055601	Identifier	schedd		1055517	0					
ANR	1055602	Identifier	locate		1055517	1					
ANR	1055603	ArgumentList			1055517	1					
ANR	1055604	CompoundStatement		12:25:288:288	1055517	1					
ANR	1055605	ExpressionStatement	"dprintf ( dflag , ""%s\\n"" , schedd . error ( ) )"	84:2:2615:2655	1055517	0	True				
ANR	1055606	CallExpression	"dprintf ( dflag , ""%s\\n"" , schedd . error ( ) )"		1055517	0					
ANR	1055607	Callee	dprintf		1055517	0					
ANR	1055608	Identifier	dprintf		1055517	0					
ANR	1055609	ArgumentList	dflag		1055517	1					
ANR	1055610	Argument	dflag		1055517	0					
ANR	1055611	Identifier	dflag		1055517	0					
ANR	1055612	Argument	"""%s\\n"""		1055517	1					
ANR	1055613	PrimaryExpression	"""%s\\n"""		1055517	0					
ANR	1055614	Argument	schedd . error ( )		1055517	2					
ANR	1055615	CallExpression	schedd . error ( )		1055517	0					
ANR	1055616	Callee	schedd . error		1055517	0					
ANR	1055617	MemberAccess	schedd . error		1055517	0					
ANR	1055618	Identifier	schedd		1055517	0					
ANR	1055619	Identifier	error		1055517	1					
ANR	1055620	ArgumentList			1055517	1					
ANR	1055621	ElseStatement	else		1055517	0					
ANR	1055622	CompoundStatement		14:8:342:342	1055517	0					
ANR	1055623	ExpressionStatement	schedd . display ( dflag )	86:2:2670:2693	1055517	0	True				
ANR	1055624	CallExpression	schedd . display ( dflag )		1055517	0					
ANR	1055625	Callee	schedd . display		1055517	0					
ANR	1055626	MemberAccess	schedd . display		1055517	0					
ANR	1055627	Identifier	schedd		1055517	0					
ANR	1055628	Identifier	display		1055517	1					
ANR	1055629	ArgumentList	dflag		1055517	1					
ANR	1055630	Argument	dflag		1055517	0					
ANR	1055631	Identifier	dflag		1055517	0					
ANR	1055632	ExpressionStatement	"dprintf ( dflag , ""\\n"" )"	88:1:2700:2722	1055517	6	True				
ANR	1055633	CallExpression	"dprintf ( dflag , ""\\n"" )"		1055517	0					
ANR	1055634	Callee	dprintf		1055517	0					
ANR	1055635	Identifier	dprintf		1055517	0					
ANR	1055636	ArgumentList	dflag		1055517	1					
ANR	1055637	Argument	dflag		1055517	0					
ANR	1055638	Identifier	dflag		1055517	0					
ANR	1055639	Argument	"""\\n"""		1055517	1					
ANR	1055640	PrimaryExpression	"""\\n"""		1055517	0					
ANR	1055641	IfStatement	if ( ! master . locate ( ) )		1055517	7					
ANR	1055642	Condition	! master . locate ( )	89:5:2729:2745	1055517	0	True				
ANR	1055643	UnaryOperationExpression	! master . locate ( )		1055517	0					
ANR	1055644	UnaryOperator	!		1055517	0					
ANR	1055645	CallExpression	master . locate ( )		1055517	1					
ANR	1055646	Callee	master . locate		1055517	0					
ANR	1055647	MemberAccess	master . locate		1055517	0					
ANR	1055648	Identifier	master		1055517	0					
ANR	1055649	Identifier	locate		1055517	1					
ANR	1055650	ArgumentList			1055517	1					
ANR	1055651	CompoundStatement		18:25:426:426	1055517	1					
ANR	1055652	ExpressionStatement	"dprintf ( dflag , ""%s\\n"" , master . error ( ) )"	90:2:2753:2793	1055517	0	True				
ANR	1055653	CallExpression	"dprintf ( dflag , ""%s\\n"" , master . error ( ) )"		1055517	0					
ANR	1055654	Callee	dprintf		1055517	0					
ANR	1055655	Identifier	dprintf		1055517	0					
ANR	1055656	ArgumentList	dflag		1055517	1					
ANR	1055657	Argument	dflag		1055517	0					
ANR	1055658	Identifier	dflag		1055517	0					
ANR	1055659	Argument	"""%s\\n"""		1055517	1					
ANR	1055660	PrimaryExpression	"""%s\\n"""		1055517	0					
ANR	1055661	Argument	master . error ( )		1055517	2					
ANR	1055662	CallExpression	master . error ( )		1055517	0					
ANR	1055663	Callee	master . error		1055517	0					
ANR	1055664	MemberAccess	master . error		1055517	0					
ANR	1055665	Identifier	master		1055517	0					
ANR	1055666	Identifier	error		1055517	1					
ANR	1055667	ArgumentList			1055517	1					
ANR	1055668	ElseStatement	else		1055517	0					
ANR	1055669	CompoundStatement		20:8:480:480	1055517	0					
ANR	1055670	ExpressionStatement	master . display ( dflag )	92:2:2808:2831	1055517	0	True				
ANR	1055671	CallExpression	master . display ( dflag )		1055517	0					
ANR	1055672	Callee	master . display		1055517	0					
ANR	1055673	MemberAccess	master . display		1055517	0					
ANR	1055674	Identifier	master		1055517	0					
ANR	1055675	Identifier	display		1055517	1					
ANR	1055676	ArgumentList	dflag		1055517	1					
ANR	1055677	Argument	dflag		1055517	0					
ANR	1055678	Identifier	dflag		1055517	0					
ANR	1055679	ExpressionStatement	"dprintf ( dflag , ""\\n"" )"	94:1:2838:2860	1055517	8	True				
ANR	1055680	CallExpression	"dprintf ( dflag , ""\\n"" )"		1055517	0					
ANR	1055681	Callee	dprintf		1055517	0					
ANR	1055682	Identifier	dprintf		1055517	0					
ANR	1055683	ArgumentList	dflag		1055517	1					
ANR	1055684	Argument	dflag		1055517	0					
ANR	1055685	Identifier	dflag		1055517	0					
ANR	1055686	Argument	"""\\n"""		1055517	1					
ANR	1055687	PrimaryExpression	"""\\n"""		1055517	0					
ANR	1055688	ReturnType	void		1055517	1					
ANR	1055689	Identifier	makeAndDisplayRegular		1055517	2					
ANR	1055690	ParameterList	"char * name , char * pool"		1055517	3					
ANR	1055691	Parameter	char * name	71:23:2297:2306	1055517	0	True				
ANR	1055692	ParameterType	char *		1055517	0					
ANR	1055693	Identifier	name		1055517	1					
ANR	1055694	Parameter	char * pool	71:35:2309:2318	1055517	1	True				
ANR	1055695	ParameterType	char *		1055517	0					
ANR	1055696	Identifier	pool		1055517	1					
ANR	1055697	CFGEntryNode	ENTRY		1055517		True				
ANR	1055698	CFGExitNode	EXIT		1055517		True				
ANR	1055699	Symbol	startd . locate		1055517						
ANR	1055700	Symbol	dflag		1055517						
ANR	1055701	Symbol	schedd . error		1055517						
ANR	1055702	Symbol	master . error		1055517						
ANR	1055703	Symbol	master . locate		1055517						
ANR	1055704	Symbol	startd . error		1055517						
ANR	1055705	Symbol	name		1055517						
ANR	1055706	Symbol	pool		1055517						
ANR	1055707	Symbol	schedd . locate		1055517						
ANR	1055708	Symbol	schedd		1055517						
ANR	1055709	Symbol	startd		1055517						
ANR	1055710	Symbol	master		1055517						
ANR	1055711	Function	testSocks	98:0:2866:8300							
ANR	1055712	FunctionDef	testSocks (Daemon * d)		1055711	0					
ANR	1055713	CompoundStatement		100:0:2894:8300	1055711	0					
ANR	1055714	IdentifierDeclStatement	ReliSock reli ;	101:1:2897:2910	1055711	0	True				
ANR	1055715	IdentifierDecl	reli		1055711	0					
ANR	1055716	IdentifierDeclType	ReliSock		1055711	0					
ANR	1055717	Identifier	reli		1055711	1					
ANR	1055718	IdentifierDeclStatement	ReliSock * reli_p ;	102:1:2913:2929	1055711	1	True				
ANR	1055719	IdentifierDecl	* reli_p		1055711	0					
ANR	1055720	IdentifierDeclType	ReliSock *		1055711	0					
ANR	1055721	Identifier	reli_p		1055711	1					
ANR	1055722	IdentifierDeclStatement	SafeSock safe ;	103:1:2932:2945	1055711	2	True				
ANR	1055723	IdentifierDecl	safe		1055711	0					
ANR	1055724	IdentifierDeclType	SafeSock		1055711	0					
ANR	1055725	Identifier	safe		1055711	1					
ANR	1055726	IdentifierDeclStatement	SafeSock * safe_p ;	104:1:2948:2964	1055711	3	True				
ANR	1055727	IdentifierDecl	* safe_p		1055711	0					
ANR	1055728	IdentifierDeclType	SafeSock *		1055711	0					
ANR	1055729	Identifier	safe_p		1055711	1					
ANR	1055730	IdentifierDeclStatement	char * state = NULL ;	105:1:2967:2985	1055711	4	True				
ANR	1055731	IdentifierDecl	* state = NULL		1055711	0					
ANR	1055732	IdentifierDeclType	char *		1055711	0					
ANR	1055733	Identifier	state		1055711	1					
ANR	1055734	AssignmentExpression	* state = NULL		1055711	2		=			
ANR	1055735	Identifier	NULL		1055711	0					
ANR	1055736	Identifier	NULL		1055711	1					
ANR	1055737	ExpressionStatement	"dprintf ( dflag , ""Using reliSock() method...\\n"" )"	107:1:2989:3037	1055711	5	True				
ANR	1055738	CallExpression	"dprintf ( dflag , ""Using reliSock() method...\\n"" )"		1055711	0					
ANR	1055739	Callee	dprintf		1055711	0					
ANR	1055740	Identifier	dprintf		1055711	0					
ANR	1055741	ArgumentList	dflag		1055711	1					
ANR	1055742	Argument	dflag		1055711	0					
ANR	1055743	Identifier	dflag		1055711	0					
ANR	1055744	Argument	"""Using reliSock() method...\\n"""		1055711	1					
ANR	1055745	PrimaryExpression	"""Using reliSock() method...\\n"""		1055711	0					
ANR	1055746	ExpressionStatement	reli_p = d -> reliSock ( )	108:1:3040:3062	1055711	6	True				
ANR	1055747	AssignmentExpression	reli_p = d -> reliSock ( )		1055711	0		=			
ANR	1055748	Identifier	reli_p		1055711	0					
ANR	1055749	CallExpression	d -> reliSock ( )		1055711	1					
ANR	1055750	Callee	d -> reliSock		1055711	0					
ANR	1055751	PtrMemberAccess	d -> reliSock		1055711	0					
ANR	1055752	Identifier	d		1055711	0					
ANR	1055753	Identifier	reliSock		1055711	1					
ANR	1055754	ArgumentList			1055711	1					
ANR	1055755	IfStatement	if ( reli_p )		1055711	7					
ANR	1055756	Condition	reli_p	109:5:3069:3074	1055711	0	True				
ANR	1055757	Identifier	reli_p		1055711	0					
ANR	1055758	CompoundStatement		10:14:183:183	1055711	1					
ANR	1055759	ExpressionStatement	reli_p -> encode ( )	110:2:3082:3098	1055711	0	True				
ANR	1055760	CallExpression	reli_p -> encode ( )		1055711	0					
ANR	1055761	Callee	reli_p -> encode		1055711	0					
ANR	1055762	PtrMemberAccess	reli_p -> encode		1055711	0					
ANR	1055763	Identifier	reli_p		1055711	0					
ANR	1055764	Identifier	encode		1055711	1					
ANR	1055765	ArgumentList			1055711	1					
ANR	1055766	IfStatement	if ( ! reli_p -> put ( GIVE_STATE ) )		1055711	1					
ANR	1055767	Condition	! reli_p -> put ( GIVE_STATE )	111:6:3106:3132	1055711	0	True				
ANR	1055768	UnaryOperationExpression	! reli_p -> put ( GIVE_STATE )		1055711	0					
ANR	1055769	UnaryOperator	!		1055711	0					
ANR	1055770	CallExpression	reli_p -> put ( GIVE_STATE )		1055711	1					
ANR	1055771	Callee	reli_p -> put		1055711	0					
ANR	1055772	PtrMemberAccess	reli_p -> put		1055711	0					
ANR	1055773	Identifier	reli_p		1055711	0					
ANR	1055774	Identifier	put		1055711	1					
ANR	1055775	ArgumentList	GIVE_STATE		1055711	1					
ANR	1055776	Argument	GIVE_STATE		1055711	0					
ANR	1055777	Identifier	GIVE_STATE		1055711	0					
ANR	1055778	CompoundStatement		12:36:241:241	1055711	1					
ANR	1055779	ExpressionStatement	"dprintf ( dflag , ""Can't encode GIVE_STATE\\n"" )"	112:3:3141:3186	1055711	0	True				
ANR	1055780	CallExpression	"dprintf ( dflag , ""Can't encode GIVE_STATE\\n"" )"		1055711	0					
ANR	1055781	Callee	dprintf		1055711	0					
ANR	1055782	Identifier	dprintf		1055711	0					
ANR	1055783	ArgumentList	dflag		1055711	1					
ANR	1055784	Argument	dflag		1055711	0					
ANR	1055785	Identifier	dflag		1055711	0					
ANR	1055786	Argument	"""Can't encode GIVE_STATE\\n"""		1055711	1					
ANR	1055787	PrimaryExpression	"""Can't encode GIVE_STATE\\n"""		1055711	0					
ANR	1055788	IfStatement	if ( ! reli_p -> end_of_message ( ) )		1055711	2					
ANR	1055789	Condition	! reli_p -> end_of_message ( )	114:6:3198:3223	1055711	0	True				
ANR	1055790	UnaryOperationExpression	! reli_p -> end_of_message ( )		1055711	0					
ANR	1055791	UnaryOperator	!		1055711	0					
ANR	1055792	CallExpression	reli_p -> end_of_message ( )		1055711	1					
ANR	1055793	Callee	reli_p -> end_of_message		1055711	0					
ANR	1055794	PtrMemberAccess	reli_p -> end_of_message		1055711	0					
ANR	1055795	Identifier	reli_p		1055711	0					
ANR	1055796	Identifier	end_of_message		1055711	1					
ANR	1055797	ArgumentList			1055711	1					
ANR	1055798	CompoundStatement		15:35:332:332	1055711	1					
ANR	1055799	ExpressionStatement	"dprintf ( dflag , ""Can't send eom\\n"" )"	115:3:3232:3268	1055711	0	True				
ANR	1055800	CallExpression	"dprintf ( dflag , ""Can't send eom\\n"" )"		1055711	0					
ANR	1055801	Callee	dprintf		1055711	0					
ANR	1055802	Identifier	dprintf		1055711	0					
ANR	1055803	ArgumentList	dflag		1055711	1					
ANR	1055804	Argument	dflag		1055711	0					
ANR	1055805	Identifier	dflag		1055711	0					
ANR	1055806	Argument	"""Can't send eom\\n"""		1055711	1					
ANR	1055807	PrimaryExpression	"""Can't send eom\\n"""		1055711	0					
ANR	1055808	ExpressionStatement	reli_p -> decode ( )	117:2:3276:3292	1055711	3	True				
ANR	1055809	CallExpression	reli_p -> decode ( )		1055711	0					
ANR	1055810	Callee	reli_p -> decode		1055711	0					
ANR	1055811	PtrMemberAccess	reli_p -> decode		1055711	0					
ANR	1055812	Identifier	reli_p		1055711	0					
ANR	1055813	Identifier	decode		1055711	1					
ANR	1055814	ArgumentList			1055711	1					
ANR	1055815	IfStatement	if ( ! reli_p -> code ( state ) )		1055711	4					
ANR	1055816	Condition	! reli_p -> code ( state )	118:6:3300:3322	1055711	0	True				
ANR	1055817	UnaryOperationExpression	! reli_p -> code ( state )		1055711	0					
ANR	1055818	UnaryOperator	!		1055711	0					
ANR	1055819	CallExpression	reli_p -> code ( state )		1055711	1					
ANR	1055820	Callee	reli_p -> code		1055711	0					
ANR	1055821	PtrMemberAccess	reli_p -> code		1055711	0					
ANR	1055822	Identifier	reli_p		1055711	0					
ANR	1055823	Identifier	code		1055711	1					
ANR	1055824	ArgumentList	state		1055711	1					
ANR	1055825	Argument	state		1055711	0					
ANR	1055826	Identifier	state		1055711	0					
ANR	1055827	CompoundStatement		19:32:431:431	1055711	1					
ANR	1055828	ExpressionStatement	"dprintf ( dflag , ""Can't decode state\\n"" )"	119:3:3331:3371	1055711	0	True				
ANR	1055829	CallExpression	"dprintf ( dflag , ""Can't decode state\\n"" )"		1055711	0					
ANR	1055830	Callee	dprintf		1055711	0					
ANR	1055831	Identifier	dprintf		1055711	0					
ANR	1055832	ArgumentList	dflag		1055711	1					
ANR	1055833	Argument	dflag		1055711	0					
ANR	1055834	Identifier	dflag		1055711	0					
ANR	1055835	Argument	"""Can't decode state\\n"""		1055711	1					
ANR	1055836	PrimaryExpression	"""Can't decode state\\n"""		1055711	0					
ANR	1055837	ElseStatement	else		1055711	0					
ANR	1055838	CompoundStatement		21:9:487:487	1055711	0					
ANR	1055839	ExpressionStatement	"dprintf ( dflag , ""State of %s is %s\\n"" , d -> idStr ( ) , state )"	121:3:3387:3445	1055711	0	True				
ANR	1055840	CallExpression	"dprintf ( dflag , ""State of %s is %s\\n"" , d -> idStr ( ) , state )"		1055711	0					
ANR	1055841	Callee	dprintf		1055711	0					
ANR	1055842	Identifier	dprintf		1055711	0					
ANR	1055843	ArgumentList	dflag		1055711	1					
ANR	1055844	Argument	dflag		1055711	0					
ANR	1055845	Identifier	dflag		1055711	0					
ANR	1055846	Argument	"""State of %s is %s\\n"""		1055711	1					
ANR	1055847	PrimaryExpression	"""State of %s is %s\\n"""		1055711	0					
ANR	1055848	Argument	d -> idStr ( )		1055711	2					
ANR	1055849	CallExpression	d -> idStr ( )		1055711	0					
ANR	1055850	Callee	d -> idStr		1055711	0					
ANR	1055851	PtrMemberAccess	d -> idStr		1055711	0					
ANR	1055852	Identifier	d		1055711	0					
ANR	1055853	Identifier	idStr		1055711	1					
ANR	1055854	ArgumentList			1055711	1					
ANR	1055855	Argument	state		1055711	3					
ANR	1055856	Identifier	state		1055711	0					
ANR	1055857	IfStatement	if ( state )		1055711	5					
ANR	1055858	Condition	state	123:6:3457:3461	1055711	0	True				
ANR	1055859	Identifier	state		1055711	0					
ANR	1055860	CompoundStatement		24:14:570:570	1055711	1					
ANR	1055861	Statement	delete	124:3:3470:3475	1055711	0	True				
ANR	1055862	Statement	[	124:10:3477:3477	1055711	1	True				
ANR	1055863	Statement	]	124:11:3478:3478	1055711	2	True				
ANR	1055864	ExpressionStatement	state	124:13:3480:3485	1055711	3	True				
ANR	1055865	Identifier	state		1055711	0					
ANR	1055866	ExpressionStatement	state = NULL	125:3:3490:3502	1055711	4	True				
ANR	1055867	AssignmentExpression	state = NULL		1055711	0		=			
ANR	1055868	Identifier	state		1055711	0					
ANR	1055869	Identifier	NULL		1055711	1					
ANR	1055870	Statement	delete	127:2:3510:3515	1055711	6	True				
ANR	1055871	ExpressionStatement	reli_p	127:9:3517:3523	1055711	7	True				
ANR	1055872	Identifier	reli_p		1055711	0					
ANR	1055873	ExpressionStatement	"dprintf ( dflag , ""Using ReliSock startCommand() method #1...\\n"" )"	130:1:3530:3594	1055711	8	True				
ANR	1055874	CallExpression	"dprintf ( dflag , ""Using ReliSock startCommand() method #1...\\n"" )"		1055711	0					
ANR	1055875	Callee	dprintf		1055711	0					
ANR	1055876	Identifier	dprintf		1055711	0					
ANR	1055877	ArgumentList	dflag		1055711	1					
ANR	1055878	Argument	dflag		1055711	0					
ANR	1055879	Identifier	dflag		1055711	0					
ANR	1055880	Argument	"""Using ReliSock startCommand() method #1...\\n"""		1055711	1					
ANR	1055881	PrimaryExpression	"""Using ReliSock startCommand() method #1...\\n"""		1055711	0					
ANR	1055882	ExpressionStatement	reli_p = ( ReliSock * ) d -> startCommand ( GIVE_STATE )	131:1:3597:3646	1055711	9	True				
ANR	1055883	AssignmentExpression	reli_p = ( ReliSock * ) d -> startCommand ( GIVE_STATE )		1055711	0		=			
ANR	1055884	Identifier	reli_p		1055711	0					
ANR	1055885	CastExpression	( ReliSock * ) d -> startCommand ( GIVE_STATE )		1055711	1					
ANR	1055886	CastTarget	ReliSock *		1055711	0					
ANR	1055887	CallExpression	d -> startCommand ( GIVE_STATE )		1055711	1					
ANR	1055888	Callee	d -> startCommand		1055711	0					
ANR	1055889	PtrMemberAccess	d -> startCommand		1055711	0					
ANR	1055890	Identifier	d		1055711	0					
ANR	1055891	Identifier	startCommand		1055711	1					
ANR	1055892	ArgumentList	GIVE_STATE		1055711	1					
ANR	1055893	Argument	GIVE_STATE		1055711	0					
ANR	1055894	Identifier	GIVE_STATE		1055711	0					
ANR	1055895	IfStatement	if ( reli_p )		1055711	10					
ANR	1055896	Condition	reli_p	132:5:3653:3658	1055711	0	True				
ANR	1055897	Identifier	reli_p		1055711	0					
ANR	1055898	CompoundStatement		33:14:767:767	1055711	1					
ANR	1055899	IfStatement	if ( ! reli_p -> end_of_message ( ) )		1055711	0					
ANR	1055900	Condition	! reli_p -> end_of_message ( )	133:6:3670:3695	1055711	0	True				
ANR	1055901	UnaryOperationExpression	! reli_p -> end_of_message ( )		1055711	0					
ANR	1055902	UnaryOperator	!		1055711	0					
ANR	1055903	CallExpression	reli_p -> end_of_message ( )		1055711	1					
ANR	1055904	Callee	reli_p -> end_of_message		1055711	0					
ANR	1055905	PtrMemberAccess	reli_p -> end_of_message		1055711	0					
ANR	1055906	Identifier	reli_p		1055711	0					
ANR	1055907	Identifier	end_of_message		1055711	1					
ANR	1055908	ArgumentList			1055711	1					
ANR	1055909	CompoundStatement		34:35:804:804	1055711	1					
ANR	1055910	ExpressionStatement	"dprintf ( dflag , ""Can't send eom\\n"" )"	134:3:3704:3740	1055711	0	True				
ANR	1055911	CallExpression	"dprintf ( dflag , ""Can't send eom\\n"" )"		1055711	0					
ANR	1055912	Callee	dprintf		1055711	0					
ANR	1055913	Identifier	dprintf		1055711	0					
ANR	1055914	ArgumentList	dflag		1055711	1					
ANR	1055915	Argument	dflag		1055711	0					
ANR	1055916	Identifier	dflag		1055711	0					
ANR	1055917	Argument	"""Can't send eom\\n"""		1055711	1					
ANR	1055918	PrimaryExpression	"""Can't send eom\\n"""		1055711	0					
ANR	1055919	ExpressionStatement	reli_p -> decode ( )	136:2:3748:3764	1055711	1	True				
ANR	1055920	CallExpression	reli_p -> decode ( )		1055711	0					
ANR	1055921	Callee	reli_p -> decode		1055711	0					
ANR	1055922	PtrMemberAccess	reli_p -> decode		1055711	0					
ANR	1055923	Identifier	reli_p		1055711	0					
ANR	1055924	Identifier	decode		1055711	1					
ANR	1055925	ArgumentList			1055711	1					
ANR	1055926	IfStatement	if ( ! reli_p -> code ( state ) )		1055711	2					
ANR	1055927	Condition	! reli_p -> code ( state )	137:6:3772:3794	1055711	0	True				
ANR	1055928	UnaryOperationExpression	! reli_p -> code ( state )		1055711	0					
ANR	1055929	UnaryOperator	!		1055711	0					
ANR	1055930	CallExpression	reli_p -> code ( state )		1055711	1					
ANR	1055931	Callee	reli_p -> code		1055711	0					
ANR	1055932	PtrMemberAccess	reli_p -> code		1055711	0					
ANR	1055933	Identifier	reli_p		1055711	0					
ANR	1055934	Identifier	code		1055711	1					
ANR	1055935	ArgumentList	state		1055711	1					
ANR	1055936	Argument	state		1055711	0					
ANR	1055937	Identifier	state		1055711	0					
ANR	1055938	CompoundStatement		38:32:903:903	1055711	1					
ANR	1055939	ExpressionStatement	"dprintf ( dflag , ""Can't decode state\\n"" )"	138:3:3803:3843	1055711	0	True				
ANR	1055940	CallExpression	"dprintf ( dflag , ""Can't decode state\\n"" )"		1055711	0					
ANR	1055941	Callee	dprintf		1055711	0					
ANR	1055942	Identifier	dprintf		1055711	0					
ANR	1055943	ArgumentList	dflag		1055711	1					
ANR	1055944	Argument	dflag		1055711	0					
ANR	1055945	Identifier	dflag		1055711	0					
ANR	1055946	Argument	"""Can't decode state\\n"""		1055711	1					
ANR	1055947	PrimaryExpression	"""Can't decode state\\n"""		1055711	0					
ANR	1055948	ElseStatement	else		1055711	0					
ANR	1055949	CompoundStatement		40:9:959:959	1055711	0					
ANR	1055950	ExpressionStatement	"dprintf ( dflag , ""State of %s is %s\\n"" , d -> idStr ( ) , state )"	140:3:3859:3917	1055711	0	True				
ANR	1055951	CallExpression	"dprintf ( dflag , ""State of %s is %s\\n"" , d -> idStr ( ) , state )"		1055711	0					
ANR	1055952	Callee	dprintf		1055711	0					
ANR	1055953	Identifier	dprintf		1055711	0					
ANR	1055954	ArgumentList	dflag		1055711	1					
ANR	1055955	Argument	dflag		1055711	0					
ANR	1055956	Identifier	dflag		1055711	0					
ANR	1055957	Argument	"""State of %s is %s\\n"""		1055711	1					
ANR	1055958	PrimaryExpression	"""State of %s is %s\\n"""		1055711	0					
ANR	1055959	Argument	d -> idStr ( )		1055711	2					
ANR	1055960	CallExpression	d -> idStr ( )		1055711	0					
ANR	1055961	Callee	d -> idStr		1055711	0					
ANR	1055962	PtrMemberAccess	d -> idStr		1055711	0					
ANR	1055963	Identifier	d		1055711	0					
ANR	1055964	Identifier	idStr		1055711	1					
ANR	1055965	ArgumentList			1055711	1					
ANR	1055966	Argument	state		1055711	3					
ANR	1055967	Identifier	state		1055711	0					
ANR	1055968	IfStatement	if ( state )		1055711	3					
ANR	1055969	Condition	state	142:6:3929:3933	1055711	0	True				
ANR	1055970	Identifier	state		1055711	0					
ANR	1055971	CompoundStatement		43:14:1042:1042	1055711	1					
ANR	1055972	Statement	delete	143:3:3942:3947	1055711	0	True				
ANR	1055973	Statement	[	143:10:3949:3949	1055711	1	True				
ANR	1055974	Statement	]	143:11:3950:3950	1055711	2	True				
ANR	1055975	ExpressionStatement	state	143:13:3952:3957	1055711	3	True				
ANR	1055976	Identifier	state		1055711	0					
ANR	1055977	ExpressionStatement	state = NULL	144:3:3962:3974	1055711	4	True				
ANR	1055978	AssignmentExpression	state = NULL		1055711	0		=			
ANR	1055979	Identifier	state		1055711	0					
ANR	1055980	Identifier	NULL		1055711	1					
ANR	1055981	Statement	delete	146:2:3982:3987	1055711	4	True				
ANR	1055982	ExpressionStatement	reli_p	146:9:3989:3995	1055711	5	True				
ANR	1055983	Identifier	reli_p		1055711	0					
ANR	1055984	ExpressionStatement	"dprintf ( dflag , ""Using ReliSock startCommand() method #2...\\n"" )"	149:1:4002:4066	1055711	11	True				
ANR	1055985	CallExpression	"dprintf ( dflag , ""Using ReliSock startCommand() method #2...\\n"" )"		1055711	0					
ANR	1055986	Callee	dprintf		1055711	0					
ANR	1055987	Identifier	dprintf		1055711	0					
ANR	1055988	ArgumentList	dflag		1055711	1					
ANR	1055989	Argument	dflag		1055711	0					
ANR	1055990	Identifier	dflag		1055711	0					
ANR	1055991	Argument	"""Using ReliSock startCommand() method #2...\\n"""		1055711	1					
ANR	1055992	PrimaryExpression	"""Using ReliSock startCommand() method #2...\\n"""		1055711	0					
ANR	1055993	IfStatement	if ( ! d -> addr ( ) || ! reli . connect ( d -> addr ( ) ) )		1055711	12					
ANR	1055994	Condition	! d -> addr ( ) || ! reli . connect ( d -> addr ( ) )	150:5:4073:4112	1055711	0	True				
ANR	1055995	OrExpression	! d -> addr ( ) || ! reli . connect ( d -> addr ( ) )		1055711	0		||			
ANR	1055996	UnaryOperationExpression	! d -> addr ( )		1055711	0					
ANR	1055997	UnaryOperator	!		1055711	0					
ANR	1055998	CallExpression	d -> addr ( )		1055711	1					
ANR	1055999	Callee	d -> addr		1055711	0					
ANR	1056000	PtrMemberAccess	d -> addr		1055711	0					
ANR	1056001	Identifier	d		1055711	0					
ANR	1056002	Identifier	addr		1055711	1					
ANR	1056003	ArgumentList			1055711	1					
ANR	1056004	UnaryOperationExpression	! reli . connect ( d -> addr ( ) )		1055711	1					
ANR	1056005	UnaryOperator	!		1055711	0					
ANR	1056006	CallExpression	reli . connect ( d -> addr ( ) )		1055711	1					
ANR	1056007	Callee	reli . connect		1055711	0					
ANR	1056008	MemberAccess	reli . connect		1055711	0					
ANR	1056009	Identifier	reli		1055711	0					
ANR	1056010	Identifier	connect		1055711	1					
ANR	1056011	ArgumentList	d -> addr ( )		1055711	1					
ANR	1056012	Argument	d -> addr ( )		1055711	0					
ANR	1056013	CallExpression	d -> addr ( )		1055711	0					
ANR	1056014	Callee	d -> addr		1055711	0					
ANR	1056015	PtrMemberAccess	d -> addr		1055711	0					
ANR	1056016	Identifier	d		1055711	0					
ANR	1056017	Identifier	addr		1055711	1					
ANR	1056018	ArgumentList			1055711	1					
ANR	1056019	CompoundStatement		51:48:1221:1221	1055711	1					
ANR	1056020	ExpressionStatement	"dprintf ( dflag , ""Can't connect to %s\\n"" , d -> idStr ( ) )"	151:2:4120:4173	1055711	0	True				
ANR	1056021	CallExpression	"dprintf ( dflag , ""Can't connect to %s\\n"" , d -> idStr ( ) )"		1055711	0					
ANR	1056022	Callee	dprintf		1055711	0					
ANR	1056023	Identifier	dprintf		1055711	0					
ANR	1056024	ArgumentList	dflag		1055711	1					
ANR	1056025	Argument	dflag		1055711	0					
ANR	1056026	Identifier	dflag		1055711	0					
ANR	1056027	Argument	"""Can't connect to %s\\n"""		1055711	1					
ANR	1056028	PrimaryExpression	"""Can't connect to %s\\n"""		1055711	0					
ANR	1056029	Argument	d -> idStr ( )		1055711	2					
ANR	1056030	CallExpression	d -> idStr ( )		1055711	0					
ANR	1056031	Callee	d -> idStr		1055711	0					
ANR	1056032	PtrMemberAccess	d -> idStr		1055711	0					
ANR	1056033	Identifier	d		1055711	0					
ANR	1056034	Identifier	idStr		1055711	1					
ANR	1056035	ArgumentList			1055711	1					
ANR	1056036	ElseStatement	else		1055711	0					
ANR	1056037	CompoundStatement		53:8:1288:1288	1055711	0					
ANR	1056038	ExpressionStatement	"reli_p = ( ReliSock * ) d -> startCommand ( GIVE_STATE , & reli )"	153:2:4187:4243	1055711	0	True				
ANR	1056039	AssignmentExpression	"reli_p = ( ReliSock * ) d -> startCommand ( GIVE_STATE , & reli )"		1055711	0		=			
ANR	1056040	Identifier	reli_p		1055711	0					
ANR	1056041	CastExpression	"( ReliSock * ) d -> startCommand ( GIVE_STATE , & reli )"		1055711	1					
ANR	1056042	CastTarget	ReliSock *		1055711	0					
ANR	1056043	CallExpression	"d -> startCommand ( GIVE_STATE , & reli )"		1055711	1					
ANR	1056044	Callee	d -> startCommand		1055711	0					
ANR	1056045	PtrMemberAccess	d -> startCommand		1055711	0					
ANR	1056046	Identifier	d		1055711	0					
ANR	1056047	Identifier	startCommand		1055711	1					
ANR	1056048	ArgumentList	GIVE_STATE		1055711	1					
ANR	1056049	Argument	GIVE_STATE		1055711	0					
ANR	1056050	Identifier	GIVE_STATE		1055711	0					
ANR	1056051	Argument	& reli		1055711	1					
ANR	1056052	UnaryOperationExpression	& reli		1055711	0					
ANR	1056053	UnaryOperator	&		1055711	0					
ANR	1056054	Identifier	reli		1055711	1					
ANR	1056055	IfStatement	if ( reli_p )		1055711	1					
ANR	1056056	Condition	reli_p	154:6:4251:4256	1055711	0	True				
ANR	1056057	Identifier	reli_p		1055711	0					
ANR	1056058	CompoundStatement		55:15:1365:1365	1055711	1					
ANR	1056059	IfStatement	if ( ! reli_p -> end_of_message ( ) )		1055711	0					
ANR	1056060	Condition	! reli_p -> end_of_message ( )	155:7:4269:4294	1055711	0	True				
ANR	1056061	UnaryOperationExpression	! reli_p -> end_of_message ( )		1055711	0					
ANR	1056062	UnaryOperator	!		1055711	0					
ANR	1056063	CallExpression	reli_p -> end_of_message ( )		1055711	1					
ANR	1056064	Callee	reli_p -> end_of_message		1055711	0					
ANR	1056065	PtrMemberAccess	reli_p -> end_of_message		1055711	0					
ANR	1056066	Identifier	reli_p		1055711	0					
ANR	1056067	Identifier	end_of_message		1055711	1					
ANR	1056068	ArgumentList			1055711	1					
ANR	1056069	CompoundStatement		56:36:1403:1403	1055711	1					
ANR	1056070	ExpressionStatement	"dprintf ( dflag , ""Can't send eom\\n"" )"	156:4:4304:4340	1055711	0	True				
ANR	1056071	CallExpression	"dprintf ( dflag , ""Can't send eom\\n"" )"		1055711	0					
ANR	1056072	Callee	dprintf		1055711	0					
ANR	1056073	Identifier	dprintf		1055711	0					
ANR	1056074	ArgumentList	dflag		1055711	1					
ANR	1056075	Argument	dflag		1055711	0					
ANR	1056076	Identifier	dflag		1055711	0					
ANR	1056077	Argument	"""Can't send eom\\n"""		1055711	1					
ANR	1056078	PrimaryExpression	"""Can't send eom\\n"""		1055711	0					
ANR	1056079	ExpressionStatement	reli_p -> decode ( )	158:3:4350:4366	1055711	1	True				
ANR	1056080	CallExpression	reli_p -> decode ( )		1055711	0					
ANR	1056081	Callee	reli_p -> decode		1055711	0					
ANR	1056082	PtrMemberAccess	reli_p -> decode		1055711	0					
ANR	1056083	Identifier	reli_p		1055711	0					
ANR	1056084	Identifier	decode		1055711	1					
ANR	1056085	ArgumentList			1055711	1					
ANR	1056086	IfStatement	if ( ! reli_p -> code ( state ) )		1055711	2					
ANR	1056087	Condition	! reli_p -> code ( state )	159:7:4375:4397	1055711	0	True				
ANR	1056088	UnaryOperationExpression	! reli_p -> code ( state )		1055711	0					
ANR	1056089	UnaryOperator	!		1055711	0					
ANR	1056090	CallExpression	reli_p -> code ( state )		1055711	1					
ANR	1056091	Callee	reli_p -> code		1055711	0					
ANR	1056092	PtrMemberAccess	reli_p -> code		1055711	0					
ANR	1056093	Identifier	reli_p		1055711	0					
ANR	1056094	Identifier	code		1055711	1					
ANR	1056095	ArgumentList	state		1055711	1					
ANR	1056096	Argument	state		1055711	0					
ANR	1056097	Identifier	state		1055711	0					
ANR	1056098	CompoundStatement		60:33:1506:1506	1055711	1					
ANR	1056099	ExpressionStatement	"dprintf ( dflag , ""Can't decode state\\n"" )"	160:4:4407:4447	1055711	0	True				
ANR	1056100	CallExpression	"dprintf ( dflag , ""Can't decode state\\n"" )"		1055711	0					
ANR	1056101	Callee	dprintf		1055711	0					
ANR	1056102	Identifier	dprintf		1055711	0					
ANR	1056103	ArgumentList	dflag		1055711	1					
ANR	1056104	Argument	dflag		1055711	0					
ANR	1056105	Identifier	dflag		1055711	0					
ANR	1056106	Argument	"""Can't decode state\\n"""		1055711	1					
ANR	1056107	PrimaryExpression	"""Can't decode state\\n"""		1055711	0					
ANR	1056108	ElseStatement	else		1055711	0					
ANR	1056109	CompoundStatement		62:10:1564:1564	1055711	0					
ANR	1056110	ExpressionStatement	"dprintf ( dflag , ""State of %s is %s\\n"" , d -> idStr ( ) , state )"	162:4:4465:4523	1055711	0	True				
ANR	1056111	CallExpression	"dprintf ( dflag , ""State of %s is %s\\n"" , d -> idStr ( ) , state )"		1055711	0					
ANR	1056112	Callee	dprintf		1055711	0					
ANR	1056113	Identifier	dprintf		1055711	0					
ANR	1056114	ArgumentList	dflag		1055711	1					
ANR	1056115	Argument	dflag		1055711	0					
ANR	1056116	Identifier	dflag		1055711	0					
ANR	1056117	Argument	"""State of %s is %s\\n"""		1055711	1					
ANR	1056118	PrimaryExpression	"""State of %s is %s\\n"""		1055711	0					
ANR	1056119	Argument	d -> idStr ( )		1055711	2					
ANR	1056120	CallExpression	d -> idStr ( )		1055711	0					
ANR	1056121	Callee	d -> idStr		1055711	0					
ANR	1056122	PtrMemberAccess	d -> idStr		1055711	0					
ANR	1056123	Identifier	d		1055711	0					
ANR	1056124	Identifier	idStr		1055711	1					
ANR	1056125	ArgumentList			1055711	1					
ANR	1056126	Argument	state		1055711	3					
ANR	1056127	Identifier	state		1055711	0					
ANR	1056128	IfStatement	if ( state )		1055711	3					
ANR	1056129	Condition	state	164:7:4537:4541	1055711	0	True				
ANR	1056130	Identifier	state		1055711	0					
ANR	1056131	CompoundStatement		65:15:1650:1650	1055711	1					
ANR	1056132	Statement	delete	165:4:4551:4556	1055711	0	True				
ANR	1056133	Statement	[	165:11:4558:4558	1055711	1	True				
ANR	1056134	Statement	]	165:12:4559:4559	1055711	2	True				
ANR	1056135	ExpressionStatement	state	165:14:4561:4566	1055711	3	True				
ANR	1056136	Identifier	state		1055711	0					
ANR	1056137	ExpressionStatement	state = NULL	166:4:4572:4584	1055711	4	True				
ANR	1056138	AssignmentExpression	state = NULL		1055711	0		=			
ANR	1056139	Identifier	state		1055711	0					
ANR	1056140	Identifier	NULL		1055711	1					
ANR	1056141	Statement	delete	168:3:4594:4599	1055711	4	True				
ANR	1056142	ExpressionStatement	reli_p	168:10:4601:4607	1055711	5	True				
ANR	1056143	Identifier	reli_p		1055711	0					
ANR	1056144	ExpressionStatement	"dprintf ( dflag , ""Using sendCommand() method #1...\\n"" )"	172:1:4618:4672	1055711	13	True				
ANR	1056145	CallExpression	"dprintf ( dflag , ""Using sendCommand() method #1...\\n"" )"		1055711	0					
ANR	1056146	Callee	dprintf		1055711	0					
ANR	1056147	Identifier	dprintf		1055711	0					
ANR	1056148	ArgumentList	dflag		1055711	1					
ANR	1056149	Argument	dflag		1055711	0					
ANR	1056150	Identifier	dflag		1055711	0					
ANR	1056151	Argument	"""Using sendCommand() method #1...\\n"""		1055711	1					
ANR	1056152	PrimaryExpression	"""Using sendCommand() method #1...\\n"""		1055711	0					
ANR	1056153	IfStatement	if ( ! d -> sendCommand ( X_EVENT_NOTIFICATION ) )		1055711	14					
ANR	1056154	Condition	! d -> sendCommand ( X_EVENT_NOTIFICATION )	173:5:4679:4716	1055711	0	True				
ANR	1056155	UnaryOperationExpression	! d -> sendCommand ( X_EVENT_NOTIFICATION )		1055711	0					
ANR	1056156	UnaryOperator	!		1055711	0					
ANR	1056157	CallExpression	d -> sendCommand ( X_EVENT_NOTIFICATION )		1055711	1					
ANR	1056158	Callee	d -> sendCommand		1055711	0					
ANR	1056159	PtrMemberAccess	d -> sendCommand		1055711	0					
ANR	1056160	Identifier	d		1055711	0					
ANR	1056161	Identifier	sendCommand		1055711	1					
ANR	1056162	ArgumentList	X_EVENT_NOTIFICATION		1055711	1					
ANR	1056163	Argument	X_EVENT_NOTIFICATION		1055711	0					
ANR	1056164	Identifier	X_EVENT_NOTIFICATION		1055711	0					
ANR	1056165	CompoundStatement		74:46:1825:1825	1055711	1					
ANR	1056166	ExpressionStatement	"dprintf ( dflag , ""Couldn't send X_EVENT_NOTIFICATION to %s\\n"" , d -> idStr ( ) )"	174:2:4724:4798	1055711	0	True				
ANR	1056167	CallExpression	"dprintf ( dflag , ""Couldn't send X_EVENT_NOTIFICATION to %s\\n"" , d -> idStr ( ) )"		1055711	0					
ANR	1056168	Callee	dprintf		1055711	0					
ANR	1056169	Identifier	dprintf		1055711	0					
ANR	1056170	ArgumentList	dflag		1055711	1					
ANR	1056171	Argument	dflag		1055711	0					
ANR	1056172	Identifier	dflag		1055711	0					
ANR	1056173	Argument	"""Couldn't send X_EVENT_NOTIFICATION to %s\\n"""		1055711	1					
ANR	1056174	PrimaryExpression	"""Couldn't send X_EVENT_NOTIFICATION to %s\\n"""		1055711	0					
ANR	1056175	Argument	d -> idStr ( )		1055711	2					
ANR	1056176	CallExpression	d -> idStr ( )		1055711	0					
ANR	1056177	Callee	d -> idStr		1055711	0					
ANR	1056178	PtrMemberAccess	d -> idStr		1055711	0					
ANR	1056179	Identifier	d		1055711	0					
ANR	1056180	Identifier	idStr		1055711	1					
ANR	1056181	ArgumentList			1055711	1					
ANR	1056182	ElseStatement	else		1055711	0					
ANR	1056183	CompoundStatement		76:8:1914:1914	1055711	0					
ANR	1056184	ExpressionStatement	"dprintf ( dflag , ""Sent X_EVENT_NOTIFICATION to %s\\n"" , d -> idStr ( ) )"	176:2:4813:4878	1055711	0	True				
ANR	1056185	CallExpression	"dprintf ( dflag , ""Sent X_EVENT_NOTIFICATION to %s\\n"" , d -> idStr ( ) )"		1055711	0					
ANR	1056186	Callee	dprintf		1055711	0					
ANR	1056187	Identifier	dprintf		1055711	0					
ANR	1056188	ArgumentList	dflag		1055711	1					
ANR	1056189	Argument	dflag		1055711	0					
ANR	1056190	Identifier	dflag		1055711	0					
ANR	1056191	Argument	"""Sent X_EVENT_NOTIFICATION to %s\\n"""		1055711	1					
ANR	1056192	PrimaryExpression	"""Sent X_EVENT_NOTIFICATION to %s\\n"""		1055711	0					
ANR	1056193	Argument	d -> idStr ( )		1055711	2					
ANR	1056194	CallExpression	d -> idStr ( )		1055711	0					
ANR	1056195	Callee	d -> idStr		1055711	0					
ANR	1056196	PtrMemberAccess	d -> idStr		1055711	0					
ANR	1056197	Identifier	d		1055711	0					
ANR	1056198	Identifier	idStr		1055711	1					
ANR	1056199	ArgumentList			1055711	1					
ANR	1056200	ExpressionStatement	reli_p = new ReliSock ( )	179:1:4886:4909	1055711	15	True				
ANR	1056201	AssignmentExpression	reli_p = new ReliSock ( )		1055711	0		=			
ANR	1056202	Identifier	reli_p		1055711	0					
ANR	1056203	UnaryExpression	new ReliSock ( )		1055711	1					
ANR	1056204	ExpressionStatement	"dprintf ( dflag , ""Using sendCommand() method #2 (should fail)...\\n"" )"	180:1:4912:4980	1055711	16	True				
ANR	1056205	CallExpression	"dprintf ( dflag , ""Using sendCommand() method #2 (should fail)...\\n"" )"		1055711	0					
ANR	1056206	Callee	dprintf		1055711	0					
ANR	1056207	Identifier	dprintf		1055711	0					
ANR	1056208	ArgumentList	dflag		1055711	1					
ANR	1056209	Argument	dflag		1055711	0					
ANR	1056210	Identifier	dflag		1055711	0					
ANR	1056211	Argument	"""Using sendCommand() method #2 (should fail)...\\n"""		1055711	1					
ANR	1056212	PrimaryExpression	"""Using sendCommand() method #2 (should fail)...\\n"""		1055711	0					
ANR	1056213	IfStatement	"if ( ! d -> sendCommand ( X_EVENT_NOTIFICATION , reli_p ) )"		1055711	17					
ANR	1056214	Condition	"! d -> sendCommand ( X_EVENT_NOTIFICATION , reli_p )"	181:5:4987:5032	1055711	0	True				
ANR	1056215	UnaryOperationExpression	"! d -> sendCommand ( X_EVENT_NOTIFICATION , reli_p )"		1055711	0					
ANR	1056216	UnaryOperator	!		1055711	0					
ANR	1056217	CallExpression	"d -> sendCommand ( X_EVENT_NOTIFICATION , reli_p )"		1055711	1					
ANR	1056218	Callee	d -> sendCommand		1055711	0					
ANR	1056219	PtrMemberAccess	d -> sendCommand		1055711	0					
ANR	1056220	Identifier	d		1055711	0					
ANR	1056221	Identifier	sendCommand		1055711	1					
ANR	1056222	ArgumentList	X_EVENT_NOTIFICATION		1055711	1					
ANR	1056223	Argument	X_EVENT_NOTIFICATION		1055711	0					
ANR	1056224	Identifier	X_EVENT_NOTIFICATION		1055711	0					
ANR	1056225	Argument	reli_p		1055711	1					
ANR	1056226	Identifier	reli_p		1055711	0					
ANR	1056227	CompoundStatement		82:54:2141:2141	1055711	1					
ANR	1056228	ExpressionStatement	"dprintf ( dflag , ""Couldn't send X_EVENT_NOTIFICATION to %s\\n"" , d -> idStr ( ) )"	182:2:5040:5114	1055711	0	True				
ANR	1056229	CallExpression	"dprintf ( dflag , ""Couldn't send X_EVENT_NOTIFICATION to %s\\n"" , d -> idStr ( ) )"		1055711	0					
ANR	1056230	Callee	dprintf		1055711	0					
ANR	1056231	Identifier	dprintf		1055711	0					
ANR	1056232	ArgumentList	dflag		1055711	1					
ANR	1056233	Argument	dflag		1055711	0					
ANR	1056234	Identifier	dflag		1055711	0					
ANR	1056235	Argument	"""Couldn't send X_EVENT_NOTIFICATION to %s\\n"""		1055711	1					
ANR	1056236	PrimaryExpression	"""Couldn't send X_EVENT_NOTIFICATION to %s\\n"""		1055711	0					
ANR	1056237	Argument	d -> idStr ( )		1055711	2					
ANR	1056238	CallExpression	d -> idStr ( )		1055711	0					
ANR	1056239	Callee	d -> idStr		1055711	0					
ANR	1056240	PtrMemberAccess	d -> idStr		1055711	0					
ANR	1056241	Identifier	d		1055711	0					
ANR	1056242	Identifier	idStr		1055711	1					
ANR	1056243	ArgumentList			1055711	1					
ANR	1056244	ElseStatement	else		1055711	0					
ANR	1056245	CompoundStatement		84:8:2230:2230	1055711	0					
ANR	1056246	ExpressionStatement	"dprintf ( dflag , ""Sent X_EVENT_NOTIFICATION to %s\\n"" , d -> idStr ( ) )"	184:2:5129:5194	1055711	0	True				
ANR	1056247	CallExpression	"dprintf ( dflag , ""Sent X_EVENT_NOTIFICATION to %s\\n"" , d -> idStr ( ) )"		1055711	0					
ANR	1056248	Callee	dprintf		1055711	0					
ANR	1056249	Identifier	dprintf		1055711	0					
ANR	1056250	ArgumentList	dflag		1055711	1					
ANR	1056251	Argument	dflag		1055711	0					
ANR	1056252	Identifier	dflag		1055711	0					
ANR	1056253	Argument	"""Sent X_EVENT_NOTIFICATION to %s\\n"""		1055711	1					
ANR	1056254	PrimaryExpression	"""Sent X_EVENT_NOTIFICATION to %s\\n"""		1055711	0					
ANR	1056255	Argument	d -> idStr ( )		1055711	2					
ANR	1056256	CallExpression	d -> idStr ( )		1055711	0					
ANR	1056257	Callee	d -> idStr		1055711	0					
ANR	1056258	PtrMemberAccess	d -> idStr		1055711	0					
ANR	1056259	Identifier	d		1055711	0					
ANR	1056260	Identifier	idStr		1055711	1					
ANR	1056261	ArgumentList			1055711	1					
ANR	1056262	IfStatement	if ( d -> addr ( ) )		1055711	18					
ANR	1056263	Condition	d -> addr ( )	187:5:5206:5214	1055711	0	True				
ANR	1056264	CallExpression	d -> addr ( )		1055711	0					
ANR	1056265	Callee	d -> addr		1055711	0					
ANR	1056266	PtrMemberAccess	d -> addr		1055711	0					
ANR	1056267	Identifier	d		1055711	0					
ANR	1056268	Identifier	addr		1055711	1					
ANR	1056269	ArgumentList			1055711	1					
ANR	1056270	CompoundStatement		88:17:2323:2323	1055711	1					
ANR	1056271	ExpressionStatement	reli_p -> connect ( d -> addr ( ) )	188:2:5222:5250	1055711	0	True				
ANR	1056272	CallExpression	reli_p -> connect ( d -> addr ( ) )		1055711	0					
ANR	1056273	Callee	reli_p -> connect		1055711	0					
ANR	1056274	PtrMemberAccess	reli_p -> connect		1055711	0					
ANR	1056275	Identifier	reli_p		1055711	0					
ANR	1056276	Identifier	connect		1055711	1					
ANR	1056277	ArgumentList	d -> addr ( )		1055711	1					
ANR	1056278	Argument	d -> addr ( )		1055711	0					
ANR	1056279	CallExpression	d -> addr ( )		1055711	0					
ANR	1056280	Callee	d -> addr		1055711	0					
ANR	1056281	PtrMemberAccess	d -> addr		1055711	0					
ANR	1056282	Identifier	d		1055711	0					
ANR	1056283	Identifier	addr		1055711	1					
ANR	1056284	ArgumentList			1055711	1					
ANR	1056285	ExpressionStatement	"dprintf ( dflag , ""Using sendCommand() method #2 (should work)...\\n"" )"	189:2:5254:5322	1055711	1	True				
ANR	1056286	CallExpression	"dprintf ( dflag , ""Using sendCommand() method #2 (should work)...\\n"" )"		1055711	0					
ANR	1056287	Callee	dprintf		1055711	0					
ANR	1056288	Identifier	dprintf		1055711	0					
ANR	1056289	ArgumentList	dflag		1055711	1					
ANR	1056290	Argument	dflag		1055711	0					
ANR	1056291	Identifier	dflag		1055711	0					
ANR	1056292	Argument	"""Using sendCommand() method #2 (should work)...\\n"""		1055711	1					
ANR	1056293	PrimaryExpression	"""Using sendCommand() method #2 (should work)...\\n"""		1055711	0					
ANR	1056294	IfStatement	if ( ! d -> sendCommand ( X_EVENT_NOTIFICATION ) )		1055711	2					
ANR	1056295	Condition	! d -> sendCommand ( X_EVENT_NOTIFICATION )	190:6:5330:5367	1055711	0	True				
ANR	1056296	UnaryOperationExpression	! d -> sendCommand ( X_EVENT_NOTIFICATION )		1055711	0					
ANR	1056297	UnaryOperator	!		1055711	0					
ANR	1056298	CallExpression	d -> sendCommand ( X_EVENT_NOTIFICATION )		1055711	1					
ANR	1056299	Callee	d -> sendCommand		1055711	0					
ANR	1056300	PtrMemberAccess	d -> sendCommand		1055711	0					
ANR	1056301	Identifier	d		1055711	0					
ANR	1056302	Identifier	sendCommand		1055711	1					
ANR	1056303	ArgumentList	X_EVENT_NOTIFICATION		1055711	1					
ANR	1056304	Argument	X_EVENT_NOTIFICATION		1055711	0					
ANR	1056305	Identifier	X_EVENT_NOTIFICATION		1055711	0					
ANR	1056306	CompoundStatement		91:47:2476:2476	1055711	1					
ANR	1056307	ExpressionStatement	"dprintf ( dflag , ""Couldn't send X_EVENT_NOTIFICATION to %s\\n"" , d -> idStr ( ) )"	191:3:5376:5450	1055711	0	True				
ANR	1056308	CallExpression	"dprintf ( dflag , ""Couldn't send X_EVENT_NOTIFICATION to %s\\n"" , d -> idStr ( ) )"		1055711	0					
ANR	1056309	Callee	dprintf		1055711	0					
ANR	1056310	Identifier	dprintf		1055711	0					
ANR	1056311	ArgumentList	dflag		1055711	1					
ANR	1056312	Argument	dflag		1055711	0					
ANR	1056313	Identifier	dflag		1055711	0					
ANR	1056314	Argument	"""Couldn't send X_EVENT_NOTIFICATION to %s\\n"""		1055711	1					
ANR	1056315	PrimaryExpression	"""Couldn't send X_EVENT_NOTIFICATION to %s\\n"""		1055711	0					
ANR	1056316	Argument	d -> idStr ( )		1055711	2					
ANR	1056317	CallExpression	d -> idStr ( )		1055711	0					
ANR	1056318	Callee	d -> idStr		1055711	0					
ANR	1056319	PtrMemberAccess	d -> idStr		1055711	0					
ANR	1056320	Identifier	d		1055711	0					
ANR	1056321	Identifier	idStr		1055711	1					
ANR	1056322	ArgumentList			1055711	1					
ANR	1056323	ElseStatement	else		1055711	0					
ANR	1056324	CompoundStatement		93:9:2567:2567	1055711	0					
ANR	1056325	ExpressionStatement	"dprintf ( dflag , ""Sent X_EVENT_NOTIFICATION to %s\\n"" , d -> idStr ( ) )"	193:3:5467:5532	1055711	0	True				
ANR	1056326	CallExpression	"dprintf ( dflag , ""Sent X_EVENT_NOTIFICATION to %s\\n"" , d -> idStr ( ) )"		1055711	0					
ANR	1056327	Callee	dprintf		1055711	0					
ANR	1056328	Identifier	dprintf		1055711	0					
ANR	1056329	ArgumentList	dflag		1055711	1					
ANR	1056330	Argument	dflag		1055711	0					
ANR	1056331	Identifier	dflag		1055711	0					
ANR	1056332	Argument	"""Sent X_EVENT_NOTIFICATION to %s\\n"""		1055711	1					
ANR	1056333	PrimaryExpression	"""Sent X_EVENT_NOTIFICATION to %s\\n"""		1055711	0					
ANR	1056334	Argument	d -> idStr ( )		1055711	2					
ANR	1056335	CallExpression	d -> idStr ( )		1055711	0					
ANR	1056336	Callee	d -> idStr		1055711	0					
ANR	1056337	PtrMemberAccess	d -> idStr		1055711	0					
ANR	1056338	Identifier	d		1055711	0					
ANR	1056339	Identifier	idStr		1055711	1					
ANR	1056340	ArgumentList			1055711	1					
ANR	1056341	Statement	delete	197:1:5544:5549	1055711	19	True				
ANR	1056342	ExpressionStatement	reli_p	197:8:5551:5557	1055711	20	True				
ANR	1056343	Identifier	reli_p		1055711	0					
ANR	1056344	ExpressionStatement	"dprintf ( dflag , ""Using safeSock() method...\\n"" )"	199:1:5561:5609	1055711	21	True				
ANR	1056345	CallExpression	"dprintf ( dflag , ""Using safeSock() method...\\n"" )"		1055711	0					
ANR	1056346	Callee	dprintf		1055711	0					
ANR	1056347	Identifier	dprintf		1055711	0					
ANR	1056348	ArgumentList	dflag		1055711	1					
ANR	1056349	Argument	dflag		1055711	0					
ANR	1056350	Identifier	dflag		1055711	0					
ANR	1056351	Argument	"""Using safeSock() method...\\n"""		1055711	1					
ANR	1056352	PrimaryExpression	"""Using safeSock() method...\\n"""		1055711	0					
ANR	1056353	ExpressionStatement	safe_p = d -> safeSock ( 3 )	200:1:5612:5637	1055711	22	True				
ANR	1056354	AssignmentExpression	safe_p = d -> safeSock ( 3 )		1055711	0		=			
ANR	1056355	Identifier	safe_p		1055711	0					
ANR	1056356	CallExpression	d -> safeSock ( 3 )		1055711	1					
ANR	1056357	Callee	d -> safeSock		1055711	0					
ANR	1056358	PtrMemberAccess	d -> safeSock		1055711	0					
ANR	1056359	Identifier	d		1055711	0					
ANR	1056360	Identifier	safeSock		1055711	1					
ANR	1056361	ArgumentList	3		1055711	1					
ANR	1056362	Argument	3		1055711	0					
ANR	1056363	PrimaryExpression	3		1055711	0					
ANR	1056364	IfStatement	if ( safe_p )		1055711	23					
ANR	1056365	Condition	safe_p	201:5:5644:5649	1055711	0	True				
ANR	1056366	Identifier	safe_p		1055711	0					
ANR	1056367	CompoundStatement		102:14:2758:2758	1055711	1					
ANR	1056368	ExpressionStatement	safe_p -> encode ( )	202:2:5657:5673	1055711	0	True				
ANR	1056369	CallExpression	safe_p -> encode ( )		1055711	0					
ANR	1056370	Callee	safe_p -> encode		1055711	0					
ANR	1056371	PtrMemberAccess	safe_p -> encode		1055711	0					
ANR	1056372	Identifier	safe_p		1055711	0					
ANR	1056373	Identifier	encode		1055711	1					
ANR	1056374	ArgumentList			1055711	1					
ANR	1056375	IfStatement	if ( ! safe_p -> put ( GIVE_STATE ) )		1055711	1					
ANR	1056376	Condition	! safe_p -> put ( GIVE_STATE )	203:6:5681:5707	1055711	0	True				
ANR	1056377	UnaryOperationExpression	! safe_p -> put ( GIVE_STATE )		1055711	0					
ANR	1056378	UnaryOperator	!		1055711	0					
ANR	1056379	CallExpression	safe_p -> put ( GIVE_STATE )		1055711	1					
ANR	1056380	Callee	safe_p -> put		1055711	0					
ANR	1056381	PtrMemberAccess	safe_p -> put		1055711	0					
ANR	1056382	Identifier	safe_p		1055711	0					
ANR	1056383	Identifier	put		1055711	1					
ANR	1056384	ArgumentList	GIVE_STATE		1055711	1					
ANR	1056385	Argument	GIVE_STATE		1055711	0					
ANR	1056386	Identifier	GIVE_STATE		1055711	0					
ANR	1056387	CompoundStatement		104:36:2816:2816	1055711	1					
ANR	1056388	ExpressionStatement	"dprintf ( dflag , ""Can't encode GIVE_STATE\\n"" )"	204:3:5716:5761	1055711	0	True				
ANR	1056389	CallExpression	"dprintf ( dflag , ""Can't encode GIVE_STATE\\n"" )"		1055711	0					
ANR	1056390	Callee	dprintf		1055711	0					
ANR	1056391	Identifier	dprintf		1055711	0					
ANR	1056392	ArgumentList	dflag		1055711	1					
ANR	1056393	Argument	dflag		1055711	0					
ANR	1056394	Identifier	dflag		1055711	0					
ANR	1056395	Argument	"""Can't encode GIVE_STATE\\n"""		1055711	1					
ANR	1056396	PrimaryExpression	"""Can't encode GIVE_STATE\\n"""		1055711	0					
ANR	1056397	IfStatement	if ( ! safe_p -> end_of_message ( ) )		1055711	2					
ANR	1056398	Condition	! safe_p -> end_of_message ( )	206:6:5773:5798	1055711	0	True				
ANR	1056399	UnaryOperationExpression	! safe_p -> end_of_message ( )		1055711	0					
ANR	1056400	UnaryOperator	!		1055711	0					
ANR	1056401	CallExpression	safe_p -> end_of_message ( )		1055711	1					
ANR	1056402	Callee	safe_p -> end_of_message		1055711	0					
ANR	1056403	PtrMemberAccess	safe_p -> end_of_message		1055711	0					
ANR	1056404	Identifier	safe_p		1055711	0					
ANR	1056405	Identifier	end_of_message		1055711	1					
ANR	1056406	ArgumentList			1055711	1					
ANR	1056407	CompoundStatement		107:35:2907:2907	1055711	1					
ANR	1056408	ExpressionStatement	"dprintf ( dflag , ""Can't send eom\\n"" )"	207:3:5807:5843	1055711	0	True				
ANR	1056409	CallExpression	"dprintf ( dflag , ""Can't send eom\\n"" )"		1055711	0					
ANR	1056410	Callee	dprintf		1055711	0					
ANR	1056411	Identifier	dprintf		1055711	0					
ANR	1056412	ArgumentList	dflag		1055711	1					
ANR	1056413	Argument	dflag		1055711	0					
ANR	1056414	Identifier	dflag		1055711	0					
ANR	1056415	Argument	"""Can't send eom\\n"""		1055711	1					
ANR	1056416	PrimaryExpression	"""Can't send eom\\n"""		1055711	0					
ANR	1056417	ExpressionStatement	safe_p -> decode ( )	209:2:5851:5867	1055711	3	True				
ANR	1056418	CallExpression	safe_p -> decode ( )		1055711	0					
ANR	1056419	Callee	safe_p -> decode		1055711	0					
ANR	1056420	PtrMemberAccess	safe_p -> decode		1055711	0					
ANR	1056421	Identifier	safe_p		1055711	0					
ANR	1056422	Identifier	decode		1055711	1					
ANR	1056423	ArgumentList			1055711	1					
ANR	1056424	IfStatement	if ( ! safe_p -> code ( state ) )		1055711	4					
ANR	1056425	Condition	! safe_p -> code ( state )	210:6:5875:5897	1055711	0	True				
ANR	1056426	UnaryOperationExpression	! safe_p -> code ( state )		1055711	0					
ANR	1056427	UnaryOperator	!		1055711	0					
ANR	1056428	CallExpression	safe_p -> code ( state )		1055711	1					
ANR	1056429	Callee	safe_p -> code		1055711	0					
ANR	1056430	PtrMemberAccess	safe_p -> code		1055711	0					
ANR	1056431	Identifier	safe_p		1055711	0					
ANR	1056432	Identifier	code		1055711	1					
ANR	1056433	ArgumentList	state		1055711	1					
ANR	1056434	Argument	state		1055711	0					
ANR	1056435	Identifier	state		1055711	0					
ANR	1056436	CompoundStatement		111:32:3006:3006	1055711	1					
ANR	1056437	ExpressionStatement	"dprintf ( dflag , ""Can't decode state\\n"" )"	211:3:5906:5946	1055711	0	True				
ANR	1056438	CallExpression	"dprintf ( dflag , ""Can't decode state\\n"" )"		1055711	0					
ANR	1056439	Callee	dprintf		1055711	0					
ANR	1056440	Identifier	dprintf		1055711	0					
ANR	1056441	ArgumentList	dflag		1055711	1					
ANR	1056442	Argument	dflag		1055711	0					
ANR	1056443	Identifier	dflag		1055711	0					
ANR	1056444	Argument	"""Can't decode state\\n"""		1055711	1					
ANR	1056445	PrimaryExpression	"""Can't decode state\\n"""		1055711	0					
ANR	1056446	ElseStatement	else		1055711	0					
ANR	1056447	CompoundStatement		113:9:3062:3062	1055711	0					
ANR	1056448	ExpressionStatement	"dprintf ( dflag , ""State of %s is %s\\n"" , d -> idStr ( ) , state )"	213:3:5962:6020	1055711	0	True				
ANR	1056449	CallExpression	"dprintf ( dflag , ""State of %s is %s\\n"" , d -> idStr ( ) , state )"		1055711	0					
ANR	1056450	Callee	dprintf		1055711	0					
ANR	1056451	Identifier	dprintf		1055711	0					
ANR	1056452	ArgumentList	dflag		1055711	1					
ANR	1056453	Argument	dflag		1055711	0					
ANR	1056454	Identifier	dflag		1055711	0					
ANR	1056455	Argument	"""State of %s is %s\\n"""		1055711	1					
ANR	1056456	PrimaryExpression	"""State of %s is %s\\n"""		1055711	0					
ANR	1056457	Argument	d -> idStr ( )		1055711	2					
ANR	1056458	CallExpression	d -> idStr ( )		1055711	0					
ANR	1056459	Callee	d -> idStr		1055711	0					
ANR	1056460	PtrMemberAccess	d -> idStr		1055711	0					
ANR	1056461	Identifier	d		1055711	0					
ANR	1056462	Identifier	idStr		1055711	1					
ANR	1056463	ArgumentList			1055711	1					
ANR	1056464	Argument	state		1055711	3					
ANR	1056465	Identifier	state		1055711	0					
ANR	1056466	IfStatement	if ( state )		1055711	5					
ANR	1056467	Condition	state	215:6:6032:6036	1055711	0	True				
ANR	1056468	Identifier	state		1055711	0					
ANR	1056469	CompoundStatement		116:14:3145:3145	1055711	1					
ANR	1056470	Statement	delete	216:3:6045:6050	1055711	0	True				
ANR	1056471	Statement	[	216:10:6052:6052	1055711	1	True				
ANR	1056472	Statement	]	216:11:6053:6053	1055711	2	True				
ANR	1056473	ExpressionStatement	state	216:13:6055:6060	1055711	3	True				
ANR	1056474	Identifier	state		1055711	0					
ANR	1056475	ExpressionStatement	state = NULL	217:3:6065:6077	1055711	4	True				
ANR	1056476	AssignmentExpression	state = NULL		1055711	0		=			
ANR	1056477	Identifier	state		1055711	0					
ANR	1056478	Identifier	NULL		1055711	1					
ANR	1056479	Statement	delete	219:2:6085:6090	1055711	6	True				
ANR	1056480	ExpressionStatement	safe_p	219:9:6092:6098	1055711	7	True				
ANR	1056481	Identifier	safe_p		1055711	0					
ANR	1056482	ExpressionStatement	"dprintf ( dflag , ""Using SafeSock startCommand() method #1...\\n"" )"	222:1:6105:6169	1055711	24	True				
ANR	1056483	CallExpression	"dprintf ( dflag , ""Using SafeSock startCommand() method #1...\\n"" )"		1055711	0					
ANR	1056484	Callee	dprintf		1055711	0					
ANR	1056485	Identifier	dprintf		1055711	0					
ANR	1056486	ArgumentList	dflag		1055711	1					
ANR	1056487	Argument	dflag		1055711	0					
ANR	1056488	Identifier	dflag		1055711	0					
ANR	1056489	Argument	"""Using SafeSock startCommand() method #1...\\n"""		1055711	1					
ANR	1056490	PrimaryExpression	"""Using SafeSock startCommand() method #1...\\n"""		1055711	0					
ANR	1056491	ExpressionStatement	"safe_p = ( SafeSock * ) d -> startCommand ( GIVE_STATE , Stream :: safe_sock , 3 )"	223:1:6172:6243	1055711	25	True				
ANR	1056492	AssignmentExpression	"safe_p = ( SafeSock * ) d -> startCommand ( GIVE_STATE , Stream :: safe_sock , 3 )"		1055711	0		=			
ANR	1056493	Identifier	safe_p		1055711	0					
ANR	1056494	CastExpression	"( SafeSock * ) d -> startCommand ( GIVE_STATE , Stream :: safe_sock , 3 )"		1055711	1					
ANR	1056495	CastTarget	SafeSock *		1055711	0					
ANR	1056496	CallExpression	"d -> startCommand ( GIVE_STATE , Stream :: safe_sock , 3 )"		1055711	1					
ANR	1056497	Callee	d -> startCommand		1055711	0					
ANR	1056498	PtrMemberAccess	d -> startCommand		1055711	0					
ANR	1056499	Identifier	d		1055711	0					
ANR	1056500	Identifier	startCommand		1055711	1					
ANR	1056501	ArgumentList	GIVE_STATE		1055711	1					
ANR	1056502	Argument	GIVE_STATE		1055711	0					
ANR	1056503	Identifier	GIVE_STATE		1055711	0					
ANR	1056504	Argument	Stream :: safe_sock		1055711	1					
ANR	1056505	Identifier	Stream :: safe_sock		1055711	0					
ANR	1056506	Argument	3		1055711	2					
ANR	1056507	PrimaryExpression	3		1055711	0					
ANR	1056508	IfStatement	if ( safe_p )		1055711	26					
ANR	1056509	Condition	safe_p	224:5:6250:6255	1055711	0	True				
ANR	1056510	Identifier	safe_p		1055711	0					
ANR	1056511	CompoundStatement		125:14:3364:3364	1055711	1					
ANR	1056512	IfStatement	if ( ! safe_p -> end_of_message ( ) )		1055711	0					
ANR	1056513	Condition	! safe_p -> end_of_message ( )	225:6:6267:6292	1055711	0	True				
ANR	1056514	UnaryOperationExpression	! safe_p -> end_of_message ( )		1055711	0					
ANR	1056515	UnaryOperator	!		1055711	0					
ANR	1056516	CallExpression	safe_p -> end_of_message ( )		1055711	1					
ANR	1056517	Callee	safe_p -> end_of_message		1055711	0					
ANR	1056518	PtrMemberAccess	safe_p -> end_of_message		1055711	0					
ANR	1056519	Identifier	safe_p		1055711	0					
ANR	1056520	Identifier	end_of_message		1055711	1					
ANR	1056521	ArgumentList			1055711	1					
ANR	1056522	CompoundStatement		126:35:3401:3401	1055711	1					
ANR	1056523	ExpressionStatement	"dprintf ( dflag , ""Can't send eom\\n"" )"	226:3:6301:6337	1055711	0	True				
ANR	1056524	CallExpression	"dprintf ( dflag , ""Can't send eom\\n"" )"		1055711	0					
ANR	1056525	Callee	dprintf		1055711	0					
ANR	1056526	Identifier	dprintf		1055711	0					
ANR	1056527	ArgumentList	dflag		1055711	1					
ANR	1056528	Argument	dflag		1055711	0					
ANR	1056529	Identifier	dflag		1055711	0					
ANR	1056530	Argument	"""Can't send eom\\n"""		1055711	1					
ANR	1056531	PrimaryExpression	"""Can't send eom\\n"""		1055711	0					
ANR	1056532	ExpressionStatement	safe_p -> decode ( )	228:2:6345:6361	1055711	1	True				
ANR	1056533	CallExpression	safe_p -> decode ( )		1055711	0					
ANR	1056534	Callee	safe_p -> decode		1055711	0					
ANR	1056535	PtrMemberAccess	safe_p -> decode		1055711	0					
ANR	1056536	Identifier	safe_p		1055711	0					
ANR	1056537	Identifier	decode		1055711	1					
ANR	1056538	ArgumentList			1055711	1					
ANR	1056539	IfStatement	if ( ! safe_p -> code ( state ) )		1055711	2					
ANR	1056540	Condition	! safe_p -> code ( state )	229:6:6369:6391	1055711	0	True				
ANR	1056541	UnaryOperationExpression	! safe_p -> code ( state )		1055711	0					
ANR	1056542	UnaryOperator	!		1055711	0					
ANR	1056543	CallExpression	safe_p -> code ( state )		1055711	1					
ANR	1056544	Callee	safe_p -> code		1055711	0					
ANR	1056545	PtrMemberAccess	safe_p -> code		1055711	0					
ANR	1056546	Identifier	safe_p		1055711	0					
ANR	1056547	Identifier	code		1055711	1					
ANR	1056548	ArgumentList	state		1055711	1					
ANR	1056549	Argument	state		1055711	0					
ANR	1056550	Identifier	state		1055711	0					
ANR	1056551	CompoundStatement		130:32:3500:3500	1055711	1					
ANR	1056552	ExpressionStatement	"dprintf ( dflag , ""Can't decode state\\n"" )"	230:3:6400:6440	1055711	0	True				
ANR	1056553	CallExpression	"dprintf ( dflag , ""Can't decode state\\n"" )"		1055711	0					
ANR	1056554	Callee	dprintf		1055711	0					
ANR	1056555	Identifier	dprintf		1055711	0					
ANR	1056556	ArgumentList	dflag		1055711	1					
ANR	1056557	Argument	dflag		1055711	0					
ANR	1056558	Identifier	dflag		1055711	0					
ANR	1056559	Argument	"""Can't decode state\\n"""		1055711	1					
ANR	1056560	PrimaryExpression	"""Can't decode state\\n"""		1055711	0					
ANR	1056561	ElseStatement	else		1055711	0					
ANR	1056562	CompoundStatement		132:9:3556:3556	1055711	0					
ANR	1056563	ExpressionStatement	"dprintf ( dflag , ""State of %s is %s\\n"" , d -> idStr ( ) , state )"	232:3:6456:6514	1055711	0	True				
ANR	1056564	CallExpression	"dprintf ( dflag , ""State of %s is %s\\n"" , d -> idStr ( ) , state )"		1055711	0					
ANR	1056565	Callee	dprintf		1055711	0					
ANR	1056566	Identifier	dprintf		1055711	0					
ANR	1056567	ArgumentList	dflag		1055711	1					
ANR	1056568	Argument	dflag		1055711	0					
ANR	1056569	Identifier	dflag		1055711	0					
ANR	1056570	Argument	"""State of %s is %s\\n"""		1055711	1					
ANR	1056571	PrimaryExpression	"""State of %s is %s\\n"""		1055711	0					
ANR	1056572	Argument	d -> idStr ( )		1055711	2					
ANR	1056573	CallExpression	d -> idStr ( )		1055711	0					
ANR	1056574	Callee	d -> idStr		1055711	0					
ANR	1056575	PtrMemberAccess	d -> idStr		1055711	0					
ANR	1056576	Identifier	d		1055711	0					
ANR	1056577	Identifier	idStr		1055711	1					
ANR	1056578	ArgumentList			1055711	1					
ANR	1056579	Argument	state		1055711	3					
ANR	1056580	Identifier	state		1055711	0					
ANR	1056581	IfStatement	if ( state )		1055711	3					
ANR	1056582	Condition	state	234:6:6526:6530	1055711	0	True				
ANR	1056583	Identifier	state		1055711	0					
ANR	1056584	CompoundStatement		135:14:3639:3639	1055711	1					
ANR	1056585	Statement	delete	235:3:6539:6544	1055711	0	True				
ANR	1056586	Statement	[	235:10:6546:6546	1055711	1	True				
ANR	1056587	Statement	]	235:11:6547:6547	1055711	2	True				
ANR	1056588	ExpressionStatement	state	235:13:6549:6554	1055711	3	True				
ANR	1056589	Identifier	state		1055711	0					
ANR	1056590	ExpressionStatement	state = NULL	236:3:6559:6571	1055711	4	True				
ANR	1056591	AssignmentExpression	state = NULL		1055711	0		=			
ANR	1056592	Identifier	state		1055711	0					
ANR	1056593	Identifier	NULL		1055711	1					
ANR	1056594	Statement	delete	238:2:6579:6584	1055711	4	True				
ANR	1056595	ExpressionStatement	safe_p	238:9:6586:6592	1055711	5	True				
ANR	1056596	Identifier	safe_p		1055711	0					
ANR	1056597	ExpressionStatement	"dprintf ( dflag , ""Using SafeSock startCommand() method #2...\\n"" )"	241:1:6599:6663	1055711	27	True				
ANR	1056598	CallExpression	"dprintf ( dflag , ""Using SafeSock startCommand() method #2...\\n"" )"		1055711	0					
ANR	1056599	Callee	dprintf		1055711	0					
ANR	1056600	Identifier	dprintf		1055711	0					
ANR	1056601	ArgumentList	dflag		1055711	1					
ANR	1056602	Argument	dflag		1055711	0					
ANR	1056603	Identifier	dflag		1055711	0					
ANR	1056604	Argument	"""Using SafeSock startCommand() method #2...\\n"""		1055711	1					
ANR	1056605	PrimaryExpression	"""Using SafeSock startCommand() method #2...\\n"""		1055711	0					
ANR	1056606	IfStatement	"if ( ! d -> addr ( ) || ! safe . connect ( d -> addr ( ) , 3 ) )"		1055711	28					
ANR	1056607	Condition	"! d -> addr ( ) || ! safe . connect ( d -> addr ( ) , 3 )"	242:5:6670:6712	1055711	0	True				
ANR	1056608	OrExpression	"! d -> addr ( ) || ! safe . connect ( d -> addr ( ) , 3 )"		1055711	0		||			
ANR	1056609	UnaryOperationExpression	! d -> addr ( )		1055711	0					
ANR	1056610	UnaryOperator	!		1055711	0					
ANR	1056611	CallExpression	d -> addr ( )		1055711	1					
ANR	1056612	Callee	d -> addr		1055711	0					
ANR	1056613	PtrMemberAccess	d -> addr		1055711	0					
ANR	1056614	Identifier	d		1055711	0					
ANR	1056615	Identifier	addr		1055711	1					
ANR	1056616	ArgumentList			1055711	1					
ANR	1056617	UnaryOperationExpression	"! safe . connect ( d -> addr ( ) , 3 )"		1055711	1					
ANR	1056618	UnaryOperator	!		1055711	0					
ANR	1056619	CallExpression	"safe . connect ( d -> addr ( ) , 3 )"		1055711	1					
ANR	1056620	Callee	safe . connect		1055711	0					
ANR	1056621	MemberAccess	safe . connect		1055711	0					
ANR	1056622	Identifier	safe		1055711	0					
ANR	1056623	Identifier	connect		1055711	1					
ANR	1056624	ArgumentList	d -> addr ( )		1055711	1					
ANR	1056625	Argument	d -> addr ( )		1055711	0					
ANR	1056626	CallExpression	d -> addr ( )		1055711	0					
ANR	1056627	Callee	d -> addr		1055711	0					
ANR	1056628	PtrMemberAccess	d -> addr		1055711	0					
ANR	1056629	Identifier	d		1055711	0					
ANR	1056630	Identifier	addr		1055711	1					
ANR	1056631	ArgumentList			1055711	1					
ANR	1056632	Argument	3		1055711	1					
ANR	1056633	PrimaryExpression	3		1055711	0					
ANR	1056634	CompoundStatement		143:51:3821:3821	1055711	1					
ANR	1056635	ExpressionStatement	"dprintf ( dflag , ""Can't connect to %s\\n"" , d -> idStr ( ) )"	243:2:6720:6773	1055711	0	True				
ANR	1056636	CallExpression	"dprintf ( dflag , ""Can't connect to %s\\n"" , d -> idStr ( ) )"		1055711	0					
ANR	1056637	Callee	dprintf		1055711	0					
ANR	1056638	Identifier	dprintf		1055711	0					
ANR	1056639	ArgumentList	dflag		1055711	1					
ANR	1056640	Argument	dflag		1055711	0					
ANR	1056641	Identifier	dflag		1055711	0					
ANR	1056642	Argument	"""Can't connect to %s\\n"""		1055711	1					
ANR	1056643	PrimaryExpression	"""Can't connect to %s\\n"""		1055711	0					
ANR	1056644	Argument	d -> idStr ( )		1055711	2					
ANR	1056645	CallExpression	d -> idStr ( )		1055711	0					
ANR	1056646	Callee	d -> idStr		1055711	0					
ANR	1056647	PtrMemberAccess	d -> idStr		1055711	0					
ANR	1056648	Identifier	d		1055711	0					
ANR	1056649	Identifier	idStr		1055711	1					
ANR	1056650	ArgumentList			1055711	1					
ANR	1056651	ElseStatement	else		1055711	0					
ANR	1056652	CompoundStatement		145:8:3888:3888	1055711	0					
ANR	1056653	ExpressionStatement	"safe_p = ( SafeSock * ) d -> startCommand ( GIVE_STATE , & safe )"	245:2:6787:6843	1055711	0	True				
ANR	1056654	AssignmentExpression	"safe_p = ( SafeSock * ) d -> startCommand ( GIVE_STATE , & safe )"		1055711	0		=			
ANR	1056655	Identifier	safe_p		1055711	0					
ANR	1056656	CastExpression	"( SafeSock * ) d -> startCommand ( GIVE_STATE , & safe )"		1055711	1					
ANR	1056657	CastTarget	SafeSock *		1055711	0					
ANR	1056658	CallExpression	"d -> startCommand ( GIVE_STATE , & safe )"		1055711	1					
ANR	1056659	Callee	d -> startCommand		1055711	0					
ANR	1056660	PtrMemberAccess	d -> startCommand		1055711	0					
ANR	1056661	Identifier	d		1055711	0					
ANR	1056662	Identifier	startCommand		1055711	1					
ANR	1056663	ArgumentList	GIVE_STATE		1055711	1					
ANR	1056664	Argument	GIVE_STATE		1055711	0					
ANR	1056665	Identifier	GIVE_STATE		1055711	0					
ANR	1056666	Argument	& safe		1055711	1					
ANR	1056667	UnaryOperationExpression	& safe		1055711	0					
ANR	1056668	UnaryOperator	&		1055711	0					
ANR	1056669	Identifier	safe		1055711	1					
ANR	1056670	IfStatement	if ( safe_p )		1055711	1					
ANR	1056671	Condition	safe_p	246:6:6851:6856	1055711	0	True				
ANR	1056672	Identifier	safe_p		1055711	0					
ANR	1056673	CompoundStatement		147:15:3965:3965	1055711	1					
ANR	1056674	IfStatement	if ( ! safe_p -> end_of_message ( ) )		1055711	0					
ANR	1056675	Condition	! safe_p -> end_of_message ( )	247:7:6869:6894	1055711	0	True				
ANR	1056676	UnaryOperationExpression	! safe_p -> end_of_message ( )		1055711	0					
ANR	1056677	UnaryOperator	!		1055711	0					
ANR	1056678	CallExpression	safe_p -> end_of_message ( )		1055711	1					
ANR	1056679	Callee	safe_p -> end_of_message		1055711	0					
ANR	1056680	PtrMemberAccess	safe_p -> end_of_message		1055711	0					
ANR	1056681	Identifier	safe_p		1055711	0					
ANR	1056682	Identifier	end_of_message		1055711	1					
ANR	1056683	ArgumentList			1055711	1					
ANR	1056684	CompoundStatement		148:36:4003:4003	1055711	1					
ANR	1056685	ExpressionStatement	"dprintf ( dflag , ""Can't send eom\\n"" )"	248:4:6904:6940	1055711	0	True				
ANR	1056686	CallExpression	"dprintf ( dflag , ""Can't send eom\\n"" )"		1055711	0					
ANR	1056687	Callee	dprintf		1055711	0					
ANR	1056688	Identifier	dprintf		1055711	0					
ANR	1056689	ArgumentList	dflag		1055711	1					
ANR	1056690	Argument	dflag		1055711	0					
ANR	1056691	Identifier	dflag		1055711	0					
ANR	1056692	Argument	"""Can't send eom\\n"""		1055711	1					
ANR	1056693	PrimaryExpression	"""Can't send eom\\n"""		1055711	0					
ANR	1056694	ExpressionStatement	safe_p -> decode ( )	250:3:6950:6966	1055711	1	True				
ANR	1056695	CallExpression	safe_p -> decode ( )		1055711	0					
ANR	1056696	Callee	safe_p -> decode		1055711	0					
ANR	1056697	PtrMemberAccess	safe_p -> decode		1055711	0					
ANR	1056698	Identifier	safe_p		1055711	0					
ANR	1056699	Identifier	decode		1055711	1					
ANR	1056700	ArgumentList			1055711	1					
ANR	1056701	IfStatement	if ( ! safe_p -> code ( state ) )		1055711	2					
ANR	1056702	Condition	! safe_p -> code ( state )	251:7:6975:6997	1055711	0	True				
ANR	1056703	UnaryOperationExpression	! safe_p -> code ( state )		1055711	0					
ANR	1056704	UnaryOperator	!		1055711	0					
ANR	1056705	CallExpression	safe_p -> code ( state )		1055711	1					
ANR	1056706	Callee	safe_p -> code		1055711	0					
ANR	1056707	PtrMemberAccess	safe_p -> code		1055711	0					
ANR	1056708	Identifier	safe_p		1055711	0					
ANR	1056709	Identifier	code		1055711	1					
ANR	1056710	ArgumentList	state		1055711	1					
ANR	1056711	Argument	state		1055711	0					
ANR	1056712	Identifier	state		1055711	0					
ANR	1056713	CompoundStatement		152:33:4106:4106	1055711	1					
ANR	1056714	ExpressionStatement	"dprintf ( dflag , ""Can't decode state\\n"" )"	252:4:7007:7047	1055711	0	True				
ANR	1056715	CallExpression	"dprintf ( dflag , ""Can't decode state\\n"" )"		1055711	0					
ANR	1056716	Callee	dprintf		1055711	0					
ANR	1056717	Identifier	dprintf		1055711	0					
ANR	1056718	ArgumentList	dflag		1055711	1					
ANR	1056719	Argument	dflag		1055711	0					
ANR	1056720	Identifier	dflag		1055711	0					
ANR	1056721	Argument	"""Can't decode state\\n"""		1055711	1					
ANR	1056722	PrimaryExpression	"""Can't decode state\\n"""		1055711	0					
ANR	1056723	ElseStatement	else		1055711	0					
ANR	1056724	CompoundStatement		154:10:4164:4164	1055711	0					
ANR	1056725	ExpressionStatement	"dprintf ( dflag , ""State of %s is %s\\n"" , d -> idStr ( ) , state )"	254:4:7065:7123	1055711	0	True				
ANR	1056726	CallExpression	"dprintf ( dflag , ""State of %s is %s\\n"" , d -> idStr ( ) , state )"		1055711	0					
ANR	1056727	Callee	dprintf		1055711	0					
ANR	1056728	Identifier	dprintf		1055711	0					
ANR	1056729	ArgumentList	dflag		1055711	1					
ANR	1056730	Argument	dflag		1055711	0					
ANR	1056731	Identifier	dflag		1055711	0					
ANR	1056732	Argument	"""State of %s is %s\\n"""		1055711	1					
ANR	1056733	PrimaryExpression	"""State of %s is %s\\n"""		1055711	0					
ANR	1056734	Argument	d -> idStr ( )		1055711	2					
ANR	1056735	CallExpression	d -> idStr ( )		1055711	0					
ANR	1056736	Callee	d -> idStr		1055711	0					
ANR	1056737	PtrMemberAccess	d -> idStr		1055711	0					
ANR	1056738	Identifier	d		1055711	0					
ANR	1056739	Identifier	idStr		1055711	1					
ANR	1056740	ArgumentList			1055711	1					
ANR	1056741	Argument	state		1055711	3					
ANR	1056742	Identifier	state		1055711	0					
ANR	1056743	IfStatement	if ( state )		1055711	3					
ANR	1056744	Condition	state	256:7:7137:7141	1055711	0	True				
ANR	1056745	Identifier	state		1055711	0					
ANR	1056746	CompoundStatement		157:15:4250:4250	1055711	1					
ANR	1056747	Statement	delete	257:4:7151:7156	1055711	0	True				
ANR	1056748	Statement	[	257:11:7158:7158	1055711	1	True				
ANR	1056749	Statement	]	257:12:7159:7159	1055711	2	True				
ANR	1056750	ExpressionStatement	state	257:14:7161:7166	1055711	3	True				
ANR	1056751	Identifier	state		1055711	0					
ANR	1056752	ExpressionStatement	state = NULL	258:4:7172:7184	1055711	4	True				
ANR	1056753	AssignmentExpression	state = NULL		1055711	0		=			
ANR	1056754	Identifier	state		1055711	0					
ANR	1056755	Identifier	NULL		1055711	1					
ANR	1056756	Statement	delete	260:3:7194:7199	1055711	4	True				
ANR	1056757	ExpressionStatement	safe_p	260:10:7201:7207	1055711	5	True				
ANR	1056758	Identifier	safe_p		1055711	0					
ANR	1056759	ExpressionStatement	"dprintf ( dflag , ""Using SafeSock sendCommand() method #1...\\n"" )"	264:1:7218:7281	1055711	29	True				
ANR	1056760	CallExpression	"dprintf ( dflag , ""Using SafeSock sendCommand() method #1...\\n"" )"		1055711	0					
ANR	1056761	Callee	dprintf		1055711	0					
ANR	1056762	Identifier	dprintf		1055711	0					
ANR	1056763	ArgumentList	dflag		1055711	1					
ANR	1056764	Argument	dflag		1055711	0					
ANR	1056765	Identifier	dflag		1055711	0					
ANR	1056766	Argument	"""Using SafeSock sendCommand() method #1...\\n"""		1055711	1					
ANR	1056767	PrimaryExpression	"""Using SafeSock sendCommand() method #1...\\n"""		1055711	0					
ANR	1056768	IfStatement	"if ( ! d -> sendCommand ( X_EVENT_NOTIFICATION , Stream :: safe_sock , 3 ) )"		1055711	30					
ANR	1056769	Condition	"! d -> sendCommand ( X_EVENT_NOTIFICATION , Stream :: safe_sock , 3 )"	265:5:7288:7347	1055711	0	True				
ANR	1056770	UnaryOperationExpression	"! d -> sendCommand ( X_EVENT_NOTIFICATION , Stream :: safe_sock , 3 )"		1055711	0					
ANR	1056771	UnaryOperator	!		1055711	0					
ANR	1056772	CallExpression	"d -> sendCommand ( X_EVENT_NOTIFICATION , Stream :: safe_sock , 3 )"		1055711	1					
ANR	1056773	Callee	d -> sendCommand		1055711	0					
ANR	1056774	PtrMemberAccess	d -> sendCommand		1055711	0					
ANR	1056775	Identifier	d		1055711	0					
ANR	1056776	Identifier	sendCommand		1055711	1					
ANR	1056777	ArgumentList	X_EVENT_NOTIFICATION		1055711	1					
ANR	1056778	Argument	X_EVENT_NOTIFICATION		1055711	0					
ANR	1056779	Identifier	X_EVENT_NOTIFICATION		1055711	0					
ANR	1056780	Argument	Stream :: safe_sock		1055711	1					
ANR	1056781	Identifier	Stream :: safe_sock		1055711	0					
ANR	1056782	Argument	3		1055711	2					
ANR	1056783	PrimaryExpression	3		1055711	0					
ANR	1056784	CompoundStatement		166:68:4456:4456	1055711	1					
ANR	1056785	ExpressionStatement	"dprintf ( dflag , ""Couldn't send X_EVENT_NOTIFICATION to %s\\n"" , d -> idStr ( ) )"	266:2:7355:7429	1055711	0	True				
ANR	1056786	CallExpression	"dprintf ( dflag , ""Couldn't send X_EVENT_NOTIFICATION to %s\\n"" , d -> idStr ( ) )"		1055711	0					
ANR	1056787	Callee	dprintf		1055711	0					
ANR	1056788	Identifier	dprintf		1055711	0					
ANR	1056789	ArgumentList	dflag		1055711	1					
ANR	1056790	Argument	dflag		1055711	0					
ANR	1056791	Identifier	dflag		1055711	0					
ANR	1056792	Argument	"""Couldn't send X_EVENT_NOTIFICATION to %s\\n"""		1055711	1					
ANR	1056793	PrimaryExpression	"""Couldn't send X_EVENT_NOTIFICATION to %s\\n"""		1055711	0					
ANR	1056794	Argument	d -> idStr ( )		1055711	2					
ANR	1056795	CallExpression	d -> idStr ( )		1055711	0					
ANR	1056796	Callee	d -> idStr		1055711	0					
ANR	1056797	PtrMemberAccess	d -> idStr		1055711	0					
ANR	1056798	Identifier	d		1055711	0					
ANR	1056799	Identifier	idStr		1055711	1					
ANR	1056800	ArgumentList			1055711	1					
ANR	1056801	ElseStatement	else		1055711	0					
ANR	1056802	CompoundStatement		168:8:4545:4545	1055711	0					
ANR	1056803	ExpressionStatement	"dprintf ( dflag , ""Sent X_EVENT_NOTIFICATION to %s\\n"" , d -> idStr ( ) )"	268:2:7444:7509	1055711	0	True				
ANR	1056804	CallExpression	"dprintf ( dflag , ""Sent X_EVENT_NOTIFICATION to %s\\n"" , d -> idStr ( ) )"		1055711	0					
ANR	1056805	Callee	dprintf		1055711	0					
ANR	1056806	Identifier	dprintf		1055711	0					
ANR	1056807	ArgumentList	dflag		1055711	1					
ANR	1056808	Argument	dflag		1055711	0					
ANR	1056809	Identifier	dflag		1055711	0					
ANR	1056810	Argument	"""Sent X_EVENT_NOTIFICATION to %s\\n"""		1055711	1					
ANR	1056811	PrimaryExpression	"""Sent X_EVENT_NOTIFICATION to %s\\n"""		1055711	0					
ANR	1056812	Argument	d -> idStr ( )		1055711	2					
ANR	1056813	CallExpression	d -> idStr ( )		1055711	0					
ANR	1056814	Callee	d -> idStr		1055711	0					
ANR	1056815	PtrMemberAccess	d -> idStr		1055711	0					
ANR	1056816	Identifier	d		1055711	0					
ANR	1056817	Identifier	idStr		1055711	1					
ANR	1056818	ArgumentList			1055711	1					
ANR	1056819	ExpressionStatement	safe_p = new SafeSock ( )	271:1:7517:7540	1055711	31	True				
ANR	1056820	AssignmentExpression	safe_p = new SafeSock ( )		1055711	0		=			
ANR	1056821	Identifier	safe_p		1055711	0					
ANR	1056822	UnaryExpression	new SafeSock ( )		1055711	1					
ANR	1056823	ExpressionStatement	"dprintf ( dflag , ""Using SafeSock sendCommand() method #2 (should fail)...\\n"" )"	272:1:7543:7620	1055711	32	True				
ANR	1056824	CallExpression	"dprintf ( dflag , ""Using SafeSock sendCommand() method #2 (should fail)...\\n"" )"		1055711	0					
ANR	1056825	Callee	dprintf		1055711	0					
ANR	1056826	Identifier	dprintf		1055711	0					
ANR	1056827	ArgumentList	dflag		1055711	1					
ANR	1056828	Argument	dflag		1055711	0					
ANR	1056829	Identifier	dflag		1055711	0					
ANR	1056830	Argument	"""Using SafeSock sendCommand() method #2 (should fail)...\\n"""		1055711	1					
ANR	1056831	PrimaryExpression	"""Using SafeSock sendCommand() method #2 (should fail)...\\n"""		1055711	0					
ANR	1056832	IfStatement	"if ( ! d -> sendCommand ( X_EVENT_NOTIFICATION , safe_p ) )"		1055711	33					
ANR	1056833	Condition	"! d -> sendCommand ( X_EVENT_NOTIFICATION , safe_p )"	273:5:7627:7672	1055711	0	True				
ANR	1056834	UnaryOperationExpression	"! d -> sendCommand ( X_EVENT_NOTIFICATION , safe_p )"		1055711	0					
ANR	1056835	UnaryOperator	!		1055711	0					
ANR	1056836	CallExpression	"d -> sendCommand ( X_EVENT_NOTIFICATION , safe_p )"		1055711	1					
ANR	1056837	Callee	d -> sendCommand		1055711	0					
ANR	1056838	PtrMemberAccess	d -> sendCommand		1055711	0					
ANR	1056839	Identifier	d		1055711	0					
ANR	1056840	Identifier	sendCommand		1055711	1					
ANR	1056841	ArgumentList	X_EVENT_NOTIFICATION		1055711	1					
ANR	1056842	Argument	X_EVENT_NOTIFICATION		1055711	0					
ANR	1056843	Identifier	X_EVENT_NOTIFICATION		1055711	0					
ANR	1056844	Argument	safe_p		1055711	1					
ANR	1056845	Identifier	safe_p		1055711	0					
ANR	1056846	CompoundStatement		174:54:4781:4781	1055711	1					
ANR	1056847	ExpressionStatement	"dprintf ( dflag , ""Couldn't send X_EVENT_NOTIFICATION to %s\\n"" , d -> idStr ( ) )"	274:2:7680:7754	1055711	0	True				
ANR	1056848	CallExpression	"dprintf ( dflag , ""Couldn't send X_EVENT_NOTIFICATION to %s\\n"" , d -> idStr ( ) )"		1055711	0					
ANR	1056849	Callee	dprintf		1055711	0					
ANR	1056850	Identifier	dprintf		1055711	0					
ANR	1056851	ArgumentList	dflag		1055711	1					
ANR	1056852	Argument	dflag		1055711	0					
ANR	1056853	Identifier	dflag		1055711	0					
ANR	1056854	Argument	"""Couldn't send X_EVENT_NOTIFICATION to %s\\n"""		1055711	1					
ANR	1056855	PrimaryExpression	"""Couldn't send X_EVENT_NOTIFICATION to %s\\n"""		1055711	0					
ANR	1056856	Argument	d -> idStr ( )		1055711	2					
ANR	1056857	CallExpression	d -> idStr ( )		1055711	0					
ANR	1056858	Callee	d -> idStr		1055711	0					
ANR	1056859	PtrMemberAccess	d -> idStr		1055711	0					
ANR	1056860	Identifier	d		1055711	0					
ANR	1056861	Identifier	idStr		1055711	1					
ANR	1056862	ArgumentList			1055711	1					
ANR	1056863	ElseStatement	else		1055711	0					
ANR	1056864	CompoundStatement		176:8:4870:4870	1055711	0					
ANR	1056865	ExpressionStatement	"dprintf ( dflag , ""Sent X_EVENT_NOTIFICATION to %s\\n"" , d -> idStr ( ) )"	276:2:7769:7834	1055711	0	True				
ANR	1056866	CallExpression	"dprintf ( dflag , ""Sent X_EVENT_NOTIFICATION to %s\\n"" , d -> idStr ( ) )"		1055711	0					
ANR	1056867	Callee	dprintf		1055711	0					
ANR	1056868	Identifier	dprintf		1055711	0					
ANR	1056869	ArgumentList	dflag		1055711	1					
ANR	1056870	Argument	dflag		1055711	0					
ANR	1056871	Identifier	dflag		1055711	0					
ANR	1056872	Argument	"""Sent X_EVENT_NOTIFICATION to %s\\n"""		1055711	1					
ANR	1056873	PrimaryExpression	"""Sent X_EVENT_NOTIFICATION to %s\\n"""		1055711	0					
ANR	1056874	Argument	d -> idStr ( )		1055711	2					
ANR	1056875	CallExpression	d -> idStr ( )		1055711	0					
ANR	1056876	Callee	d -> idStr		1055711	0					
ANR	1056877	PtrMemberAccess	d -> idStr		1055711	0					
ANR	1056878	Identifier	d		1055711	0					
ANR	1056879	Identifier	idStr		1055711	1					
ANR	1056880	ArgumentList			1055711	1					
ANR	1056881	IfStatement	if ( d -> addr ( ) )		1055711	34					
ANR	1056882	Condition	d -> addr ( )	279:5:7846:7854	1055711	0	True				
ANR	1056883	CallExpression	d -> addr ( )		1055711	0					
ANR	1056884	Callee	d -> addr		1055711	0					
ANR	1056885	PtrMemberAccess	d -> addr		1055711	0					
ANR	1056886	Identifier	d		1055711	0					
ANR	1056887	Identifier	addr		1055711	1					
ANR	1056888	ArgumentList			1055711	1					
ANR	1056889	CompoundStatement		180:17:4963:4963	1055711	1					
ANR	1056890	ExpressionStatement	safe_p -> connect ( d -> addr ( ) )	280:2:7862:7890	1055711	0	True				
ANR	1056891	CallExpression	safe_p -> connect ( d -> addr ( ) )		1055711	0					
ANR	1056892	Callee	safe_p -> connect		1055711	0					
ANR	1056893	PtrMemberAccess	safe_p -> connect		1055711	0					
ANR	1056894	Identifier	safe_p		1055711	0					
ANR	1056895	Identifier	connect		1055711	1					
ANR	1056896	ArgumentList	d -> addr ( )		1055711	1					
ANR	1056897	Argument	d -> addr ( )		1055711	0					
ANR	1056898	CallExpression	d -> addr ( )		1055711	0					
ANR	1056899	Callee	d -> addr		1055711	0					
ANR	1056900	PtrMemberAccess	d -> addr		1055711	0					
ANR	1056901	Identifier	d		1055711	0					
ANR	1056902	Identifier	addr		1055711	1					
ANR	1056903	ArgumentList			1055711	1					
ANR	1056904	ExpressionStatement	"dprintf ( dflag , ""Using SafeSock sendCommand() method #2 (should work)...\\n"" )"	281:2:7894:7971	1055711	1	True				
ANR	1056905	CallExpression	"dprintf ( dflag , ""Using SafeSock sendCommand() method #2 (should work)...\\n"" )"		1055711	0					
ANR	1056906	Callee	dprintf		1055711	0					
ANR	1056907	Identifier	dprintf		1055711	0					
ANR	1056908	ArgumentList	dflag		1055711	1					
ANR	1056909	Argument	dflag		1055711	0					
ANR	1056910	Identifier	dflag		1055711	0					
ANR	1056911	Argument	"""Using SafeSock sendCommand() method #2 (should work)...\\n"""		1055711	1					
ANR	1056912	PrimaryExpression	"""Using SafeSock sendCommand() method #2 (should work)...\\n"""		1055711	0					
ANR	1056913	IfStatement	if ( ! d -> sendCommand ( X_EVENT_NOTIFICATION ) )		1055711	2					
ANR	1056914	Condition	! d -> sendCommand ( X_EVENT_NOTIFICATION )	282:6:7979:8016	1055711	0	True				
ANR	1056915	UnaryOperationExpression	! d -> sendCommand ( X_EVENT_NOTIFICATION )		1055711	0					
ANR	1056916	UnaryOperator	!		1055711	0					
ANR	1056917	CallExpression	d -> sendCommand ( X_EVENT_NOTIFICATION )		1055711	1					
ANR	1056918	Callee	d -> sendCommand		1055711	0					
ANR	1056919	PtrMemberAccess	d -> sendCommand		1055711	0					
ANR	1056920	Identifier	d		1055711	0					
ANR	1056921	Identifier	sendCommand		1055711	1					
ANR	1056922	ArgumentList	X_EVENT_NOTIFICATION		1055711	1					
ANR	1056923	Argument	X_EVENT_NOTIFICATION		1055711	0					
ANR	1056924	Identifier	X_EVENT_NOTIFICATION		1055711	0					
ANR	1056925	CompoundStatement		183:47:5125:5125	1055711	1					
ANR	1056926	ExpressionStatement	"dprintf ( dflag , ""Couldn't send X_EVENT_NOTIFICATION to %s\\n"" , d -> idStr ( ) )"	283:3:8025:8099	1055711	0	True				
ANR	1056927	CallExpression	"dprintf ( dflag , ""Couldn't send X_EVENT_NOTIFICATION to %s\\n"" , d -> idStr ( ) )"		1055711	0					
ANR	1056928	Callee	dprintf		1055711	0					
ANR	1056929	Identifier	dprintf		1055711	0					
ANR	1056930	ArgumentList	dflag		1055711	1					
ANR	1056931	Argument	dflag		1055711	0					
ANR	1056932	Identifier	dflag		1055711	0					
ANR	1056933	Argument	"""Couldn't send X_EVENT_NOTIFICATION to %s\\n"""		1055711	1					
ANR	1056934	PrimaryExpression	"""Couldn't send X_EVENT_NOTIFICATION to %s\\n"""		1055711	0					
ANR	1056935	Argument	d -> idStr ( )		1055711	2					
ANR	1056936	CallExpression	d -> idStr ( )		1055711	0					
ANR	1056937	Callee	d -> idStr		1055711	0					
ANR	1056938	PtrMemberAccess	d -> idStr		1055711	0					
ANR	1056939	Identifier	d		1055711	0					
ANR	1056940	Identifier	idStr		1055711	1					
ANR	1056941	ArgumentList			1055711	1					
ANR	1056942	ElseStatement	else		1055711	0					
ANR	1056943	CompoundStatement		185:9:5216:5216	1055711	0					
ANR	1056944	ExpressionStatement	"dprintf ( dflag , ""Sent X_EVENT_NOTIFICATION to %s\\n"" , d -> idStr ( ) )"	285:3:8116:8181	1055711	0	True				
ANR	1056945	CallExpression	"dprintf ( dflag , ""Sent X_EVENT_NOTIFICATION to %s\\n"" , d -> idStr ( ) )"		1055711	0					
ANR	1056946	Callee	dprintf		1055711	0					
ANR	1056947	Identifier	dprintf		1055711	0					
ANR	1056948	ArgumentList	dflag		1055711	1					
ANR	1056949	Argument	dflag		1055711	0					
ANR	1056950	Identifier	dflag		1055711	0					
ANR	1056951	Argument	"""Sent X_EVENT_NOTIFICATION to %s\\n"""		1055711	1					
ANR	1056952	PrimaryExpression	"""Sent X_EVENT_NOTIFICATION to %s\\n"""		1055711	0					
ANR	1056953	Argument	d -> idStr ( )		1055711	2					
ANR	1056954	CallExpression	d -> idStr ( )		1055711	0					
ANR	1056955	Callee	d -> idStr		1055711	0					
ANR	1056956	PtrMemberAccess	d -> idStr		1055711	0					
ANR	1056957	Identifier	d		1055711	0					
ANR	1056958	Identifier	idStr		1055711	1					
ANR	1056959	ArgumentList			1055711	1					
ANR	1056960	Statement	delete	288:1:8193:8198	1055711	35	True				
ANR	1056961	ExpressionStatement	safe_p	288:8:8200:8206	1055711	36	True				
ANR	1056962	Identifier	safe_p		1055711	0					
ANR	1056963	ExpressionStatement	"d -> startCommand ( GIVE_STATE , NULL , 0 )"	290:1:8210:8248	1055711	37	True				
ANR	1056964	CallExpression	"d -> startCommand ( GIVE_STATE , NULL , 0 )"		1055711	0					
ANR	1056965	Callee	d -> startCommand		1055711	0					
ANR	1056966	PtrMemberAccess	d -> startCommand		1055711	0					
ANR	1056967	Identifier	d		1055711	0					
ANR	1056968	Identifier	startCommand		1055711	1					
ANR	1056969	ArgumentList	GIVE_STATE		1055711	1					
ANR	1056970	Argument	GIVE_STATE		1055711	0					
ANR	1056971	Identifier	GIVE_STATE		1055711	0					
ANR	1056972	Argument	NULL		1055711	1					
ANR	1056973	Identifier	NULL		1055711	0					
ANR	1056974	Argument	0		1055711	2					
ANR	1056975	PrimaryExpression	0		1055711	0					
ANR	1056976	ExpressionStatement	"d -> sendCommand ( X_EVENT_NOTIFICATION , NULL , 0 )"	291:1:8251:8298	1055711	38	True				
ANR	1056977	CallExpression	"d -> sendCommand ( X_EVENT_NOTIFICATION , NULL , 0 )"		1055711	0					
ANR	1056978	Callee	d -> sendCommand		1055711	0					
ANR	1056979	PtrMemberAccess	d -> sendCommand		1055711	0					
ANR	1056980	Identifier	d		1055711	0					
ANR	1056981	Identifier	sendCommand		1055711	1					
ANR	1056982	ArgumentList	X_EVENT_NOTIFICATION		1055711	1					
ANR	1056983	Argument	X_EVENT_NOTIFICATION		1055711	0					
ANR	1056984	Identifier	X_EVENT_NOTIFICATION		1055711	0					
ANR	1056985	Argument	NULL		1055711	1					
ANR	1056986	Identifier	NULL		1055711	0					
ANR	1056987	Argument	0		1055711	2					
ANR	1056988	PrimaryExpression	0		1055711	0					
ANR	1056989	ReturnType	void		1055711	1					
ANR	1056990	Identifier	testSocks		1055711	2					
ANR	1056991	ParameterList	Daemon * d		1055711	3					
ANR	1056992	Parameter	Daemon * d	99:11:2882:2890	1055711	0	True				
ANR	1056993	ParameterType	Daemon *		1055711	0					
ANR	1056994	Identifier	d		1055711	1					
ANR	1056995	CFGEntryNode	ENTRY		1055711		True				
ANR	1056996	CFGExitNode	EXIT		1055711		True				
ANR	1056997	Symbol	reli . connect		1055711						
ANR	1056998	Symbol	reli_p -> put		1055711						
ANR	1056999	Symbol	reli		1055711						
ANR	1057000	Symbol	d -> idStr		1055711						
ANR	1057001	Symbol	Stream :: safe_sock		1055711						
ANR	1057002	Symbol	* safe_p		1055711						
ANR	1057003	Symbol	safe_p -> end_of_message		1055711						
ANR	1057004	Symbol	safe_p -> code		1055711						
ANR	1057005	Symbol	d -> addr		1055711						
ANR	1057006	Symbol	d -> safeSock		1055711						
ANR	1057007	Symbol	* reli_p		1055711						
ANR	1057008	Symbol	reli_p -> end_of_message		1055711						
ANR	1057009	Symbol	& safe		1055711						
ANR	1057010	Symbol	state		1055711						
ANR	1057011	Symbol	dflag		1055711						
ANR	1057012	Symbol	NULL		1055711						
ANR	1057013	Symbol	d		1055711						
ANR	1057014	Symbol	d -> reliSock		1055711						
ANR	1057015	Symbol	GIVE_STATE		1055711						
ANR	1057016	Symbol	reli_p		1055711						
ANR	1057017	Symbol	* d		1055711						
ANR	1057018	Symbol	d -> sendCommand		1055711						
ANR	1057019	Symbol	safe		1055711						
ANR	1057020	Symbol	safe . connect		1055711						
ANR	1057021	Symbol	safe_p		1055711						
ANR	1057022	Symbol	& reli		1055711						
ANR	1057023	Symbol	safe_p -> put		1055711						
ANR	1057024	Symbol	d -> startCommand		1055711						
ANR	1057025	Symbol	reli_p -> code		1055711						
ANR	1057026	Symbol	X_EVENT_NOTIFICATION		1055711						
ANR	1057027	Function	testAPI	294:0:8303:9288							
ANR	1057028	FunctionDef	"testAPI (char * my_name , bool do_socks)"		1057027	0					
ANR	1057029	CompoundStatement		296:0:8348:9288	1057027	0					
ANR	1057030	IdentifierDeclStatement	"char * name , * addr , * fullhost , * host , * pool , * error , * id ;"	297:1:8351:8406	1057027	0	True				
ANR	1057031	IdentifierDecl	* name		1057027	0					
ANR	1057032	IdentifierDeclType	char *		1057027	0					
ANR	1057033	Identifier	name		1057027	1					
ANR	1057034	IdentifierDecl	* addr		1057027	1					
ANR	1057035	IdentifierDeclType	char *		1057027	0					
ANR	1057036	Identifier	addr		1057027	1					
ANR	1057037	IdentifierDecl	* fullhost		1057027	2					
ANR	1057038	IdentifierDeclType	char *		1057027	0					
ANR	1057039	Identifier	fullhost		1057027	1					
ANR	1057040	IdentifierDecl	* host		1057027	3					
ANR	1057041	IdentifierDeclType	char *		1057027	0					
ANR	1057042	Identifier	host		1057027	1					
ANR	1057043	IdentifierDecl	* pool		1057027	4					
ANR	1057044	IdentifierDeclType	char *		1057027	0					
ANR	1057045	Identifier	pool		1057027	1					
ANR	1057046	IdentifierDecl	* error		1057027	5					
ANR	1057047	IdentifierDeclType	char *		1057027	0					
ANR	1057048	Identifier	error		1057027	1					
ANR	1057049	IdentifierDecl	* id		1057027	6					
ANR	1057050	IdentifierDeclType	char *		1057027	0					
ANR	1057051	Identifier	id		1057027	1					
ANR	1057052	IdentifierDeclStatement	"Daemon startd ( DT_STARTD , my_name ) ;"	299:1:8410:8445	1057027	1	True				
ANR	1057053	IdentifierDecl	"startd ( DT_STARTD , my_name )"		1057027	0					
ANR	1057054	IdentifierDeclType	Daemon		1057027	0					
ANR	1057055	Identifier	startd		1057027	1					
ANR	1057056	Expression	"DT_STARTD , my_name"		1057027	2					
ANR	1057057	Identifier	DT_STARTD		1057027	0					
ANR	1057058	Identifier	my_name		1057027	1					
ANR	1057059	IfStatement	if ( ! startd . locate ( ) )		1057027	2					
ANR	1057060	Condition	! startd . locate ( )	300:5:8452:8468	1057027	0	True				
ANR	1057061	UnaryOperationExpression	! startd . locate ( )		1057027	0					
ANR	1057062	UnaryOperator	!		1057027	0					
ANR	1057063	CallExpression	startd . locate ( )		1057027	1					
ANR	1057064	Callee	startd . locate		1057027	0					
ANR	1057065	MemberAccess	startd . locate		1057027	0					
ANR	1057066	Identifier	startd		1057027	0					
ANR	1057067	Identifier	locate		1057027	1					
ANR	1057068	ArgumentList			1057027	1					
ANR	1057069	CompoundStatement		5:25:123:123	1057027	1					
ANR	1057070	ExpressionStatement	"dprintf ( dflag , ""%s\\n"" , startd . error ( ) )"	301:2:8476:8516	1057027	0	True				
ANR	1057071	CallExpression	"dprintf ( dflag , ""%s\\n"" , startd . error ( ) )"		1057027	0					
ANR	1057072	Callee	dprintf		1057027	0					
ANR	1057073	Identifier	dprintf		1057027	0					
ANR	1057074	ArgumentList	dflag		1057027	1					
ANR	1057075	Argument	dflag		1057027	0					
ANR	1057076	Identifier	dflag		1057027	0					
ANR	1057077	Argument	"""%s\\n"""		1057027	1					
ANR	1057078	PrimaryExpression	"""%s\\n"""		1057027	0					
ANR	1057079	Argument	startd . error ( )		1057027	2					
ANR	1057080	CallExpression	startd . error ( )		1057027	0					
ANR	1057081	Callee	startd . error		1057027	0					
ANR	1057082	MemberAccess	startd . error		1057027	0					
ANR	1057083	Identifier	startd		1057027	0					
ANR	1057084	Identifier	error		1057027	1					
ANR	1057085	ArgumentList			1057027	1					
ANR	1057086	ExpressionStatement	name = startd . name ( )	303:1:8522:8542	1057027	3	True				
ANR	1057087	AssignmentExpression	name = startd . name ( )		1057027	0		=			
ANR	1057088	Identifier	name		1057027	0					
ANR	1057089	CallExpression	startd . name ( )		1057027	1					
ANR	1057090	Callee	startd . name		1057027	0					
ANR	1057091	MemberAccess	startd . name		1057027	0					
ANR	1057092	Identifier	startd		1057027	0					
ANR	1057093	Identifier	name		1057027	1					
ANR	1057094	ArgumentList			1057027	1					
ANR	1057095	ExpressionStatement	addr = startd . addr ( )	304:1:8545:8565	1057027	4	True				
ANR	1057096	AssignmentExpression	addr = startd . addr ( )		1057027	0		=			
ANR	1057097	Identifier	addr		1057027	0					
ANR	1057098	CallExpression	startd . addr ( )		1057027	1					
ANR	1057099	Callee	startd . addr		1057027	0					
ANR	1057100	MemberAccess	startd . addr		1057027	0					
ANR	1057101	Identifier	startd		1057027	0					
ANR	1057102	Identifier	addr		1057027	1					
ANR	1057103	ArgumentList			1057027	1					
ANR	1057104	ExpressionStatement	fullhost = startd . fullHostname ( )	305:1:8568:8600	1057027	5	True				
ANR	1057105	AssignmentExpression	fullhost = startd . fullHostname ( )		1057027	0		=			
ANR	1057106	Identifier	fullhost		1057027	0					
ANR	1057107	CallExpression	startd . fullHostname ( )		1057027	1					
ANR	1057108	Callee	startd . fullHostname		1057027	0					
ANR	1057109	MemberAccess	startd . fullHostname		1057027	0					
ANR	1057110	Identifier	startd		1057027	0					
ANR	1057111	Identifier	fullHostname		1057027	1					
ANR	1057112	ArgumentList			1057027	1					
ANR	1057113	ExpressionStatement	host = startd . hostname ( )	306:1:8603:8627	1057027	6	True				
ANR	1057114	AssignmentExpression	host = startd . hostname ( )		1057027	0		=			
ANR	1057115	Identifier	host		1057027	0					
ANR	1057116	CallExpression	startd . hostname ( )		1057027	1					
ANR	1057117	Callee	startd . hostname		1057027	0					
ANR	1057118	MemberAccess	startd . hostname		1057027	0					
ANR	1057119	Identifier	startd		1057027	0					
ANR	1057120	Identifier	hostname		1057027	1					
ANR	1057121	ArgumentList			1057027	1					
ANR	1057122	ExpressionStatement	pool = startd . pool ( )	307:1:8630:8650	1057027	7	True				
ANR	1057123	AssignmentExpression	pool = startd . pool ( )		1057027	0		=			
ANR	1057124	Identifier	pool		1057027	0					
ANR	1057125	CallExpression	startd . pool ( )		1057027	1					
ANR	1057126	Callee	startd . pool		1057027	0					
ANR	1057127	MemberAccess	startd . pool		1057027	0					
ANR	1057128	Identifier	startd		1057027	0					
ANR	1057129	Identifier	pool		1057027	1					
ANR	1057130	ArgumentList			1057027	1					
ANR	1057131	ExpressionStatement	error = ( char * ) startd . error ( )	308:1:8653:8682	1057027	8	True				
ANR	1057132	AssignmentExpression	error = ( char * ) startd . error ( )		1057027	0		=			
ANR	1057133	Identifier	error		1057027	0					
ANR	1057134	CastExpression	( char * ) startd . error ( )		1057027	1					
ANR	1057135	CastTarget	char *		1057027	0					
ANR	1057136	CallExpression	startd . error ( )		1057027	1					
ANR	1057137	Callee	startd . error		1057027	0					
ANR	1057138	MemberAccess	startd . error		1057027	0					
ANR	1057139	Identifier	startd		1057027	0					
ANR	1057140	Identifier	error		1057027	1					
ANR	1057141	ArgumentList			1057027	1					
ANR	1057142	ExpressionStatement	id = startd . idStr ( )	309:1:8685:8704	1057027	9	True				
ANR	1057143	AssignmentExpression	id = startd . idStr ( )		1057027	0		=			
ANR	1057144	Identifier	id		1057027	0					
ANR	1057145	CallExpression	startd . idStr ( )		1057027	1					
ANR	1057146	Callee	startd . idStr		1057027	0					
ANR	1057147	MemberAccess	startd . idStr		1057027	0					
ANR	1057148	Identifier	startd		1057027	0					
ANR	1057149	Identifier	idStr		1057027	1					
ANR	1057150	ArgumentList			1057027	1					
ANR	1057151	ExpressionStatement	"dprintf ( dflag , ""Type: %d (%s), Name: %s, Addr: %s\\n"" , ( int ) startd . type ( ) , daemonString ( startd . type ( ) ) , name ? name : ""(null)"" , addr ? addr : ""(null)"" )"	311:1:8708:8875	1057027	10	True				
ANR	1057152	CallExpression	"dprintf ( dflag , ""Type: %d (%s), Name: %s, Addr: %s\\n"" , ( int ) startd . type ( ) , daemonString ( startd . type ( ) ) , name ? name : ""(null)"" , addr ? addr : ""(null)"" )"		1057027	0					
ANR	1057153	Callee	dprintf		1057027	0					
ANR	1057154	Identifier	dprintf		1057027	0					
ANR	1057155	ArgumentList	dflag		1057027	1					
ANR	1057156	Argument	dflag		1057027	0					
ANR	1057157	Identifier	dflag		1057027	0					
ANR	1057158	Argument	"""Type: %d (%s), Name: %s, Addr: %s\\n"""		1057027	1					
ANR	1057159	PrimaryExpression	"""Type: %d (%s), Name: %s, Addr: %s\\n"""		1057027	0					
ANR	1057160	Argument	( int ) startd . type ( )		1057027	2					
ANR	1057161	CastExpression	( int ) startd . type ( )		1057027	0					
ANR	1057162	CastTarget	int		1057027	0					
ANR	1057163	CallExpression	startd . type ( )		1057027	1					
ANR	1057164	Callee	startd . type		1057027	0					
ANR	1057165	MemberAccess	startd . type		1057027	0					
ANR	1057166	Identifier	startd		1057027	0					
ANR	1057167	Identifier	type		1057027	1					
ANR	1057168	ArgumentList			1057027	1					
ANR	1057169	Argument	daemonString ( startd . type ( ) )		1057027	3					
ANR	1057170	CallExpression	daemonString ( startd . type ( ) )		1057027	0					
ANR	1057171	Callee	daemonString		1057027	0					
ANR	1057172	Identifier	daemonString		1057027	0					
ANR	1057173	ArgumentList	startd . type ( )		1057027	1					
ANR	1057174	Argument	startd . type ( )		1057027	0					
ANR	1057175	CallExpression	startd . type ( )		1057027	0					
ANR	1057176	Callee	startd . type		1057027	0					
ANR	1057177	MemberAccess	startd . type		1057027	0					
ANR	1057178	Identifier	startd		1057027	0					
ANR	1057179	Identifier	type		1057027	1					
ANR	1057180	ArgumentList			1057027	1					
ANR	1057181	Argument	"name ? name : ""(null)"""		1057027	4					
ANR	1057182	ConditionalExpression	"name ? name : ""(null)"""		1057027	0					
ANR	1057183	Condition	name		1057027	0					
ANR	1057184	Identifier	name		1057027	0					
ANR	1057185	Identifier	name		1057027	1					
ANR	1057186	PrimaryExpression	"""(null)"""		1057027	2					
ANR	1057187	Argument	"addr ? addr : ""(null)"""		1057027	5					
ANR	1057188	ConditionalExpression	"addr ? addr : ""(null)"""		1057027	0					
ANR	1057189	Condition	addr		1057027	0					
ANR	1057190	Identifier	addr		1057027	0					
ANR	1057191	Identifier	addr		1057027	1					
ANR	1057192	PrimaryExpression	"""(null)"""		1057027	2					
ANR	1057193	ExpressionStatement	"dprintf ( dflag , ""FullHost: %s, Host: %s, Pool: %s, Port: %d\\n"" , fullhost ? fullhost : ""(null)"" , host ? host : ""(null)"" , pool ? pool : ""(null)"" , startd . port ( ) )"	315:1:8878:9051	1057027	11	True				
ANR	1057194	CallExpression	"dprintf ( dflag , ""FullHost: %s, Host: %s, Pool: %s, Port: %d\\n"" , fullhost ? fullhost : ""(null)"" , host ? host : ""(null)"" , pool ? pool : ""(null)"" , startd . port ( ) )"		1057027	0					
ANR	1057195	Callee	dprintf		1057027	0					
ANR	1057196	Identifier	dprintf		1057027	0					
ANR	1057197	ArgumentList	dflag		1057027	1					
ANR	1057198	Argument	dflag		1057027	0					
ANR	1057199	Identifier	dflag		1057027	0					
ANR	1057200	Argument	"""FullHost: %s, Host: %s, Pool: %s, Port: %d\\n"""		1057027	1					
ANR	1057201	PrimaryExpression	"""FullHost: %s, Host: %s, Pool: %s, Port: %d\\n"""		1057027	0					
ANR	1057202	Argument	"fullhost ? fullhost : ""(null)"""		1057027	2					
ANR	1057203	ConditionalExpression	"fullhost ? fullhost : ""(null)"""		1057027	0					
ANR	1057204	Condition	fullhost		1057027	0					
ANR	1057205	Identifier	fullhost		1057027	0					
ANR	1057206	Identifier	fullhost		1057027	1					
ANR	1057207	PrimaryExpression	"""(null)"""		1057027	2					
ANR	1057208	Argument	"host ? host : ""(null)"""		1057027	3					
ANR	1057209	ConditionalExpression	"host ? host : ""(null)"""		1057027	0					
ANR	1057210	Condition	host		1057027	0					
ANR	1057211	Identifier	host		1057027	0					
ANR	1057212	Identifier	host		1057027	1					
ANR	1057213	PrimaryExpression	"""(null)"""		1057027	2					
ANR	1057214	Argument	"pool ? pool : ""(null)"""		1057027	4					
ANR	1057215	ConditionalExpression	"pool ? pool : ""(null)"""		1057027	0					
ANR	1057216	Condition	pool		1057027	0					
ANR	1057217	Identifier	pool		1057027	0					
ANR	1057218	Identifier	pool		1057027	1					
ANR	1057219	PrimaryExpression	"""(null)"""		1057027	2					
ANR	1057220	Argument	startd . port ( )		1057027	5					
ANR	1057221	CallExpression	startd . port ( )		1057027	0					
ANR	1057222	Callee	startd . port		1057027	0					
ANR	1057223	MemberAccess	startd . port		1057027	0					
ANR	1057224	Identifier	startd		1057027	0					
ANR	1057225	Identifier	port		1057027	1					
ANR	1057226	ArgumentList			1057027	1					
ANR	1057227	ExpressionStatement	"dprintf ( dflag , ""IsLocal: %s, IsFound: %s, IdStr: %s, Error: %s\\n"" , startd . isLocal ? ""Y"" : ""N"" , startd . isFound ? ""Y"" : ""N"" , id ? id : ""(null)"" , error ? error : ""(null)"" )"	319:1:9054:9241	1057027	12	True				
ANR	1057228	CallExpression	"dprintf ( dflag , ""IsLocal: %s, IsFound: %s, IdStr: %s, Error: %s\\n"" , startd . isLocal ? ""Y"" : ""N"" , startd . isFound ? ""Y"" : ""N"" , id ? id : ""(null)"" , error ? error : ""(null)"" )"		1057027	0					
ANR	1057229	Callee	dprintf		1057027	0					
ANR	1057230	Identifier	dprintf		1057027	0					
ANR	1057231	ArgumentList	dflag		1057027	1					
ANR	1057232	Argument	dflag		1057027	0					
ANR	1057233	Identifier	dflag		1057027	0					
ANR	1057234	Argument	"""IsLocal: %s, IsFound: %s, IdStr: %s, Error: %s\\n"""		1057027	1					
ANR	1057235	PrimaryExpression	"""IsLocal: %s, IsFound: %s, IdStr: %s, Error: %s\\n"""		1057027	0					
ANR	1057236	Argument	"startd . isLocal ? ""Y"" : ""N"""		1057027	2					
ANR	1057237	ConditionalExpression	"startd . isLocal ? ""Y"" : ""N"""		1057027	0					
ANR	1057238	Condition	startd . isLocal		1057027	0					
ANR	1057239	MemberAccess	startd . isLocal		1057027	0					
ANR	1057240	Identifier	startd		1057027	0					
ANR	1057241	Identifier	isLocal		1057027	1					
ANR	1057242	PrimaryExpression	"""Y"""		1057027	1					
ANR	1057243	PrimaryExpression	"""N"""		1057027	2					
ANR	1057244	Argument	"startd . isFound ? ""Y"" : ""N"""		1057027	3					
ANR	1057245	ConditionalExpression	"startd . isFound ? ""Y"" : ""N"""		1057027	0					
ANR	1057246	Condition	startd . isFound		1057027	0					
ANR	1057247	MemberAccess	startd . isFound		1057027	0					
ANR	1057248	Identifier	startd		1057027	0					
ANR	1057249	Identifier	isFound		1057027	1					
ANR	1057250	PrimaryExpression	"""Y"""		1057027	1					
ANR	1057251	PrimaryExpression	"""N"""		1057027	2					
ANR	1057252	Argument	"id ? id : ""(null)"""		1057027	4					
ANR	1057253	ConditionalExpression	"id ? id : ""(null)"""		1057027	0					
ANR	1057254	Condition	id		1057027	0					
ANR	1057255	Identifier	id		1057027	0					
ANR	1057256	Identifier	id		1057027	1					
ANR	1057257	PrimaryExpression	"""(null)"""		1057027	2					
ANR	1057258	Argument	"error ? error : ""(null)"""		1057027	5					
ANR	1057259	ConditionalExpression	"error ? error : ""(null)"""		1057027	0					
ANR	1057260	Condition	error		1057027	0					
ANR	1057261	Identifier	error		1057027	0					
ANR	1057262	Identifier	error		1057027	1					
ANR	1057263	PrimaryExpression	"""(null)"""		1057027	2					
ANR	1057264	IfStatement	if ( do_socks )		1057027	13					
ANR	1057265	Condition	do_socks	324:5:9248:9255	1057027	0	True				
ANR	1057266	Identifier	do_socks		1057027	0					
ANR	1057267	CompoundStatement		29:16:910:910	1057027	1					
ANR	1057268	ExpressionStatement	testSocks ( & startd )	325:2:9263:9283	1057027	0	True				
ANR	1057269	CallExpression	testSocks ( & startd )		1057027	0					
ANR	1057270	Callee	testSocks		1057027	0					
ANR	1057271	Identifier	testSocks		1057027	0					
ANR	1057272	ArgumentList	& startd		1057027	1					
ANR	1057273	Argument	& startd		1057027	0					
ANR	1057274	UnaryOperationExpression	& startd		1057027	0					
ANR	1057275	UnaryOperator	&		1057027	0					
ANR	1057276	Identifier	startd		1057027	1					
ANR	1057277	ReturnType	void		1057027	1					
ANR	1057278	Identifier	testAPI		1057027	2					
ANR	1057279	ParameterList	"char * my_name , bool do_socks"		1057027	3					
ANR	1057280	Parameter	char * my_name	295:9:8317:8329	1057027	0	True				
ANR	1057281	ParameterType	char *		1057027	0					
ANR	1057282	Identifier	my_name		1057027	1					
ANR	1057283	Parameter	bool do_socks	295:24:8332:8344	1057027	1	True				
ANR	1057284	ParameterType	bool		1057027	0					
ANR	1057285	Identifier	do_socks		1057027	1					
ANR	1057286	CFGEntryNode	ENTRY		1057027		True				
ANR	1057287	CFGExitNode	EXIT		1057027		True				
ANR	1057288	Symbol	startd . pool		1057027						
ANR	1057289	Symbol	startd . idStr		1057027						
ANR	1057290	Symbol	daemonString		1057027						
ANR	1057291	Symbol	startd . isLocal		1057027						
ANR	1057292	Symbol	startd . hostname		1057027						
ANR	1057293	Symbol	error		1057027						
ANR	1057294	Symbol	startd		1057027						
ANR	1057295	Symbol	my_name		1057027						
ANR	1057296	Symbol	do_socks		1057027						
ANR	1057297	Symbol	host		1057027						
ANR	1057298	Symbol	id		1057027						
ANR	1057299	Symbol	addr		1057027						
ANR	1057300	Symbol	startd . locate		1057027						
ANR	1057301	Symbol	dflag		1057027						
ANR	1057302	Symbol	startd . fullHostname		1057027						
ANR	1057303	Symbol	startd . addr		1057027						
ANR	1057304	Symbol	startd . type		1057027						
ANR	1057305	Symbol	pool		1057027						
ANR	1057306	Symbol	fullhost		1057027						
ANR	1057307	Symbol	startd . isFound		1057027						
ANR	1057308	Symbol	startd . name		1057027						
ANR	1057309	Symbol	startd . error		1057027						
ANR	1057310	Symbol	name		1057027						
ANR	1057311	Symbol	startd . port		1057027						
ANR	1057312	Symbol	& startd		1057027						
ANR	1057313	Function	main	330:0:9292:11663							
ANR	1057314	FunctionDef	"main (int argc , char * argv)"		1057313	0					
ANR	1057315	CompoundStatement		331:0:9320:11663	1057313	0					
ANR	1057316	ExpressionStatement	config ( )	332:1:9323:9331	1057313	0	True				
ANR	1057317	CallExpression	config ( )		1057313	0					
ANR	1057318	Callee	config		1057313	0					
ANR	1057319	Identifier	config		1057313	0					
ANR	1057320	ArgumentList			1057313	1					
ANR	1057321	IdentifierDeclStatement	bool do_socks = false ;	333:1:9334:9355	1057313	1	True				
ANR	1057322	IdentifierDecl	do_socks = false		1057313	0					
ANR	1057323	IdentifierDeclType	bool		1057313	0					
ANR	1057324	Identifier	do_socks		1057313	1					
ANR	1057325	AssignmentExpression	do_socks = false		1057313	2		=			
ANR	1057326	Identifier	false		1057313	0					
ANR	1057327	Identifier	false		1057313	1					
ANR	1057328	IfStatement	if ( argc > 1 )		1057313	2					
ANR	1057329	Condition	argc > 1	335:5:9363:9370	1057313	0	True				
ANR	1057330	RelationalExpression	argc > 1		1057313	0		>			
ANR	1057331	Identifier	argc		1057313	0					
ANR	1057332	PrimaryExpression	1		1057313	1					
ANR	1057333	CompoundStatement		5:16:53:53	1057313	1					
ANR	1057334	ExpressionStatement	do_socks = true	336:2:9378:9393	1057313	0	True				
ANR	1057335	AssignmentExpression	do_socks = true		1057313	0		=			
ANR	1057336	Identifier	do_socks		1057313	0					
ANR	1057337	Identifier	true		1057313	1					
ANR	1057338	ExpressionStatement	"dprintf ( dflag , ""\\nExternal interface (local daemon)\\n\\n"" )"	339:1:9400:9459	1057313	3	True				
ANR	1057339	CallExpression	"dprintf ( dflag , ""\\nExternal interface (local daemon)\\n\\n"" )"		1057313	0					
ANR	1057340	Callee	dprintf		1057313	0					
ANR	1057341	Identifier	dprintf		1057313	0					
ANR	1057342	ArgumentList	dflag		1057313	1					
ANR	1057343	Argument	dflag		1057313	0					
ANR	1057344	Identifier	dflag		1057313	0					
ANR	1057345	Argument	"""\\nExternal interface (local daemon)\\n\\n"""		1057313	1					
ANR	1057346	PrimaryExpression	"""\\nExternal interface (local daemon)\\n\\n"""		1057313	0					
ANR	1057347	ExpressionStatement	"testAPI ( NULL , do_socks )"	340:1:9462:9487	1057313	4	True				
ANR	1057348	CallExpression	"testAPI ( NULL , do_socks )"		1057313	0					
ANR	1057349	Callee	testAPI		1057313	0					
ANR	1057350	Identifier	testAPI		1057313	0					
ANR	1057351	ArgumentList	NULL		1057313	1					
ANR	1057352	Argument	NULL		1057313	0					
ANR	1057353	Identifier	NULL		1057313	0					
ANR	1057354	Argument	do_socks		1057313	1					
ANR	1057355	Identifier	do_socks		1057313	0					
ANR	1057356	ExpressionStatement	"dprintf ( dflag , ""\\nExternal interface (bad hostname)\\n\\n"" )"	342:1:9491:9550	1057313	5	True				
ANR	1057357	CallExpression	"dprintf ( dflag , ""\\nExternal interface (bad hostname)\\n\\n"" )"		1057313	0					
ANR	1057358	Callee	dprintf		1057313	0					
ANR	1057359	Identifier	dprintf		1057313	0					
ANR	1057360	ArgumentList	dflag		1057313	1					
ANR	1057361	Argument	dflag		1057313	0					
ANR	1057362	Identifier	dflag		1057313	0					
ANR	1057363	Argument	"""\\nExternal interface (bad hostname)\\n\\n"""		1057313	1					
ANR	1057364	PrimaryExpression	"""\\nExternal interface (bad hostname)\\n\\n"""		1057313	0					
ANR	1057365	ExpressionStatement	"testAPI ( ""bazzle"" , do_socks )"	343:1:9553:9582	1057313	6	True				
ANR	1057366	CallExpression	"testAPI ( ""bazzle"" , do_socks )"		1057313	0					
ANR	1057367	Callee	testAPI		1057313	0					
ANR	1057368	Identifier	testAPI		1057313	0					
ANR	1057369	ArgumentList	"""bazzle"""		1057313	1					
ANR	1057370	Argument	"""bazzle"""		1057313	0					
ANR	1057371	PrimaryExpression	"""bazzle"""		1057313	0					
ANR	1057372	Argument	do_socks		1057313	1					
ANR	1057373	Identifier	do_socks		1057313	0					
ANR	1057374	ExpressionStatement	"dprintf ( dflag , ""\\nLocal daemons\\n\\n"" )"	345:1:9586:9625	1057313	7	True				
ANR	1057375	CallExpression	"dprintf ( dflag , ""\\nLocal daemons\\n\\n"" )"		1057313	0					
ANR	1057376	Callee	dprintf		1057313	0					
ANR	1057377	Identifier	dprintf		1057313	0					
ANR	1057378	ArgumentList	dflag		1057313	1					
ANR	1057379	Argument	dflag		1057313	0					
ANR	1057380	Identifier	dflag		1057313	0					
ANR	1057381	Argument	"""\\nLocal daemons\\n\\n"""		1057313	1					
ANR	1057382	PrimaryExpression	"""\\nLocal daemons\\n\\n"""		1057313	0					
ANR	1057383	ExpressionStatement	"makeAndDisplayCM ( NULL , NULL )"	346:1:9628:9658	1057313	8	True				
ANR	1057384	CallExpression	"makeAndDisplayCM ( NULL , NULL )"		1057313	0					
ANR	1057385	Callee	makeAndDisplayCM		1057313	0					
ANR	1057386	Identifier	makeAndDisplayCM		1057313	0					
ANR	1057387	ArgumentList	NULL		1057313	1					
ANR	1057388	Argument	NULL		1057313	0					
ANR	1057389	Identifier	NULL		1057313	0					
ANR	1057390	Argument	NULL		1057313	1					
ANR	1057391	Identifier	NULL		1057313	0					
ANR	1057392	ExpressionStatement	"makeAndDisplayRegular ( NULL , NULL )"	347:1:9661:9696	1057313	9	True				
ANR	1057393	CallExpression	"makeAndDisplayRegular ( NULL , NULL )"		1057313	0					
ANR	1057394	Callee	makeAndDisplayRegular		1057313	0					
ANR	1057395	Identifier	makeAndDisplayRegular		1057313	0					
ANR	1057396	ArgumentList	NULL		1057313	1					
ANR	1057397	Argument	NULL		1057313	0					
ANR	1057398	Identifier	NULL		1057313	0					
ANR	1057399	Argument	NULL		1057313	1					
ANR	1057400	Identifier	NULL		1057313	0					
ANR	1057401	ExpressionStatement	"dprintf ( dflag , ""\\nRemote daemons we should find\\n\\n"" )"	349:1:9700:9755	1057313	10	True				
ANR	1057402	CallExpression	"dprintf ( dflag , ""\\nRemote daemons we should find\\n\\n"" )"		1057313	0					
ANR	1057403	Callee	dprintf		1057313	0					
ANR	1057404	Identifier	dprintf		1057313	0					
ANR	1057405	ArgumentList	dflag		1057313	1					
ANR	1057406	Argument	dflag		1057313	0					
ANR	1057407	Identifier	dflag		1057313	0					
ANR	1057408	Argument	"""\\nRemote daemons we should find\\n\\n"""		1057313	1					
ANR	1057409	PrimaryExpression	"""\\nRemote daemons we should find\\n\\n"""		1057313	0					
ANR	1057410	ExpressionStatement	"makeAndDisplayCM ( ""condor"" , ""condor"" )"	350:1:9758:9796	1057313	11	True				
ANR	1057411	CallExpression	"makeAndDisplayCM ( ""condor"" , ""condor"" )"		1057313	0					
ANR	1057412	Callee	makeAndDisplayCM		1057313	0					
ANR	1057413	Identifier	makeAndDisplayCM		1057313	0					
ANR	1057414	ArgumentList	"""condor"""		1057313	1					
ANR	1057415	Argument	"""condor"""		1057313	0					
ANR	1057416	PrimaryExpression	"""condor"""		1057313	0					
ANR	1057417	Argument	"""condor"""		1057313	1					
ANR	1057418	PrimaryExpression	"""condor"""		1057313	0					
ANR	1057419	ExpressionStatement	"makeAndDisplayRegular ( ""puck.cs.wisc.edu"" , ""condor"" )"	351:1:9799:9852	1057313	12	True				
ANR	1057420	CallExpression	"makeAndDisplayRegular ( ""puck.cs.wisc.edu"" , ""condor"" )"		1057313	0					
ANR	1057421	Callee	makeAndDisplayRegular		1057313	0					
ANR	1057422	Identifier	makeAndDisplayRegular		1057313	0					
ANR	1057423	ArgumentList	"""puck.cs.wisc.edu"""		1057313	1					
ANR	1057424	Argument	"""puck.cs.wisc.edu"""		1057313	0					
ANR	1057425	PrimaryExpression	"""puck.cs.wisc.edu"""		1057313	0					
ANR	1057426	Argument	"""condor"""		1057313	1					
ANR	1057427	PrimaryExpression	"""condor"""		1057313	0					
ANR	1057428	ExpressionStatement	"dprintf ( dflag , ""\\nWe should find the startd, but not the others\\n\\n"" )"	353:1:9856:9927	1057313	13	True				
ANR	1057429	CallExpression	"dprintf ( dflag , ""\\nWe should find the startd, but not the others\\n\\n"" )"		1057313	0					
ANR	1057430	Callee	dprintf		1057313	0					
ANR	1057431	Identifier	dprintf		1057313	0					
ANR	1057432	ArgumentList	dflag		1057313	1					
ANR	1057433	Argument	dflag		1057313	0					
ANR	1057434	Identifier	dflag		1057313	0					
ANR	1057435	Argument	"""\\nWe should find the startd, but not the others\\n\\n"""		1057313	1					
ANR	1057436	PrimaryExpression	"""\\nWe should find the startd, but not the others\\n\\n"""		1057313	0					
ANR	1057437	ExpressionStatement	"makeAndDisplayRegular ( ""slot1@raven.cs.wisc.edu"" , NULL )"	354:1:9930:9986	1057313	14	True				
ANR	1057438	CallExpression	"makeAndDisplayRegular ( ""slot1@raven.cs.wisc.edu"" , NULL )"		1057313	0					
ANR	1057439	Callee	makeAndDisplayRegular		1057313	0					
ANR	1057440	Identifier	makeAndDisplayRegular		1057313	0					
ANR	1057441	ArgumentList	"""slot1@raven.cs.wisc.edu"""		1057313	1					
ANR	1057442	Argument	"""slot1@raven.cs.wisc.edu"""		1057313	0					
ANR	1057443	PrimaryExpression	"""slot1@raven.cs.wisc.edu"""		1057313	0					
ANR	1057444	Argument	NULL		1057313	1					
ANR	1057445	Identifier	NULL		1057313	0					
ANR	1057446	ExpressionStatement	"dprintf ( dflag , ""\\nUsing a bogus sinful string\\n\\n"" )"	356:1:9990:10043	1057313	15	True				
ANR	1057447	CallExpression	"dprintf ( dflag , ""\\nUsing a bogus sinful string\\n\\n"" )"		1057313	0					
ANR	1057448	Callee	dprintf		1057313	0					
ANR	1057449	Identifier	dprintf		1057313	0					
ANR	1057450	ArgumentList	dflag		1057313	1					
ANR	1057451	Argument	dflag		1057313	0					
ANR	1057452	Identifier	dflag		1057313	0					
ANR	1057453	Argument	"""\\nUsing a bogus sinful string\\n\\n"""		1057313	1					
ANR	1057454	PrimaryExpression	"""\\nUsing a bogus sinful string\\n\\n"""		1057313	0					
ANR	1057455	IdentifierDeclStatement	"Daemon d ( DT_NEGOTIATOR , ""<128.105.232.240:23232>"" ) ;"	357:1:10046:10098	1057313	16	True				
ANR	1057456	IdentifierDecl	"d ( DT_NEGOTIATOR , ""<128.105.232.240:23232>"" )"		1057313	0					
ANR	1057457	IdentifierDeclType	Daemon		1057313	0					
ANR	1057458	Identifier	d		1057313	1					
ANR	1057459	Expression	"DT_NEGOTIATOR , ""<128.105.232.240:23232>"""		1057313	2					
ANR	1057460	Identifier	DT_NEGOTIATOR		1057313	0					
ANR	1057461	PrimaryExpression	"""<128.105.232.240:23232>"""		1057313	1					
ANR	1057462	IfStatement	if ( d . locate ( ) )		1057313	17					
ANR	1057463	Condition	d . locate ( )	358:5:10105:10114	1057313	0	True				
ANR	1057464	CallExpression	d . locate ( )		1057313	0					
ANR	1057465	Callee	d . locate		1057313	0					
ANR	1057466	MemberAccess	d . locate		1057313	0					
ANR	1057467	Identifier	d		1057313	0					
ANR	1057468	Identifier	locate		1057313	1					
ANR	1057469	ArgumentList			1057313	1					
ANR	1057470	CompoundStatement		28:18:797:797	1057313	1					
ANR	1057471	ExpressionStatement	"dprintf ( dflag , ""Found %s\\n"" , d . idStr ( ) )"	359:2:10122:10163	1057313	0	True				
ANR	1057472	CallExpression	"dprintf ( dflag , ""Found %s\\n"" , d . idStr ( ) )"		1057313	0					
ANR	1057473	Callee	dprintf		1057313	0					
ANR	1057474	Identifier	dprintf		1057313	0					
ANR	1057475	ArgumentList	dflag		1057313	1					
ANR	1057476	Argument	dflag		1057313	0					
ANR	1057477	Identifier	dflag		1057313	0					
ANR	1057478	Argument	"""Found %s\\n"""		1057313	1					
ANR	1057479	PrimaryExpression	"""Found %s\\n"""		1057313	0					
ANR	1057480	Argument	d . idStr ( )		1057313	2					
ANR	1057481	CallExpression	d . idStr ( )		1057313	0					
ANR	1057482	Callee	d . idStr		1057313	0					
ANR	1057483	MemberAccess	d . idStr		1057313	0					
ANR	1057484	Identifier	d		1057313	0					
ANR	1057485	Identifier	idStr		1057313	1					
ANR	1057486	ArgumentList			1057313	1					
ANR	1057487	ExpressionStatement	d . display ( dflag )	360:2:10167:10185	1057313	1	True				
ANR	1057488	CallExpression	d . display ( dflag )		1057313	0					
ANR	1057489	Callee	d . display		1057313	0					
ANR	1057490	MemberAccess	d . display		1057313	0					
ANR	1057491	Identifier	d		1057313	0					
ANR	1057492	Identifier	display		1057313	1					
ANR	1057493	ArgumentList	dflag		1057313	1					
ANR	1057494	Argument	dflag		1057313	0					
ANR	1057495	Identifier	dflag		1057313	0					
ANR	1057496	ElseStatement	else		1057313	0					
ANR	1057497	CompoundStatement		31:8:874:874	1057313	0					
ANR	1057498	ExpressionStatement	"dprintf ( dflag , ""%s\\n"" , d . error ( ) )"	362:2:10199:10234	1057313	0	True				
ANR	1057499	CallExpression	"dprintf ( dflag , ""%s\\n"" , d . error ( ) )"		1057313	0					
ANR	1057500	Callee	dprintf		1057313	0					
ANR	1057501	Identifier	dprintf		1057313	0					
ANR	1057502	ArgumentList	dflag		1057313	1					
ANR	1057503	Argument	dflag		1057313	0					
ANR	1057504	Identifier	dflag		1057313	0					
ANR	1057505	Argument	"""%s\\n"""		1057313	1					
ANR	1057506	PrimaryExpression	"""%s\\n"""		1057313	0					
ANR	1057507	Argument	d . error ( )		1057313	2					
ANR	1057508	CallExpression	d . error ( )		1057313	0					
ANR	1057509	Callee	d . error		1057313	0					
ANR	1057510	MemberAccess	d . error		1057313	0					
ANR	1057511	Identifier	d		1057313	0					
ANR	1057512	Identifier	error		1057313	1					
ANR	1057513	ArgumentList			1057313	1					
ANR	1057514	ExpressionStatement	"dprintf ( dflag , ""\\nMake a local STARTD w/ explicit name\\n\\n"" )"	365:1:10241:10303	1057313	18	True				
ANR	1057515	CallExpression	"dprintf ( dflag , ""\\nMake a local STARTD w/ explicit name\\n\\n"" )"		1057313	0					
ANR	1057516	Callee	dprintf		1057313	0					
ANR	1057517	Identifier	dprintf		1057313	0					
ANR	1057518	ArgumentList	dflag		1057313	1					
ANR	1057519	Argument	dflag		1057313	0					
ANR	1057520	Identifier	dflag		1057313	0					
ANR	1057521	Argument	"""\\nMake a local STARTD w/ explicit name\\n\\n"""		1057313	1					
ANR	1057522	PrimaryExpression	"""\\nMake a local STARTD w/ explicit name\\n\\n"""		1057313	0					
ANR	1057523	IdentifierDeclStatement	"Daemon d2 ( DT_STARTD , my_full_hostname ( ) ) ;"	366:1:10306:10348	1057313	19	True				
ANR	1057524	IdentifierDecl	"d2 ( DT_STARTD , my_full_hostname ( ) )"		1057313	0					
ANR	1057525	IdentifierDeclType	Daemon		1057313	0					
ANR	1057526	Identifier	d2		1057313	1					
ANR	1057527	Expression	"DT_STARTD , my_full_hostname ( )"		1057313	2					
ANR	1057528	Identifier	DT_STARTD		1057313	0					
ANR	1057529	CallExpression	my_full_hostname ( )		1057313	1					
ANR	1057530	Callee	my_full_hostname		1057313	0					
ANR	1057531	Identifier	my_full_hostname		1057313	0					
ANR	1057532	ArgumentList			1057313	1					
ANR	1057533	IfStatement	if ( d2 . locate ( ) )		1057313	20					
ANR	1057534	Condition	d2 . locate ( )	367:5:10355:10365	1057313	0	True				
ANR	1057535	CallExpression	d2 . locate ( )		1057313	0					
ANR	1057536	Callee	d2 . locate		1057313	0					
ANR	1057537	MemberAccess	d2 . locate		1057313	0					
ANR	1057538	Identifier	d2		1057313	0					
ANR	1057539	Identifier	locate		1057313	1					
ANR	1057540	ArgumentList			1057313	1					
ANR	1057541	CompoundStatement		37:19:1048:1048	1057313	1					
ANR	1057542	ExpressionStatement	d2 . display ( dflag )	368:2:10373:10392	1057313	0	True				
ANR	1057543	CallExpression	d2 . display ( dflag )		1057313	0					
ANR	1057544	Callee	d2 . display		1057313	0					
ANR	1057545	MemberAccess	d2 . display		1057313	0					
ANR	1057546	Identifier	d2		1057313	0					
ANR	1057547	Identifier	display		1057313	1					
ANR	1057548	ArgumentList	dflag		1057313	1					
ANR	1057549	Argument	dflag		1057313	0					
ANR	1057550	Identifier	dflag		1057313	0					
ANR	1057551	ElseStatement	else		1057313	0					
ANR	1057552	CompoundStatement		39:8:1081:1081	1057313	0					
ANR	1057553	ExpressionStatement	"dprintf ( dflag , ""%s\\n"" , d2 . error ( ) )"	370:2:10406:10442	1057313	0	True				
ANR	1057554	CallExpression	"dprintf ( dflag , ""%s\\n"" , d2 . error ( ) )"		1057313	0					
ANR	1057555	Callee	dprintf		1057313	0					
ANR	1057556	Identifier	dprintf		1057313	0					
ANR	1057557	ArgumentList	dflag		1057313	1					
ANR	1057558	Argument	dflag		1057313	0					
ANR	1057559	Identifier	dflag		1057313	0					
ANR	1057560	Argument	"""%s\\n"""		1057313	1					
ANR	1057561	PrimaryExpression	"""%s\\n"""		1057313	0					
ANR	1057562	Argument	d2 . error ( )		1057313	2					
ANR	1057563	CallExpression	d2 . error ( )		1057313	0					
ANR	1057564	Callee	d2 . error		1057313	0					
ANR	1057565	MemberAccess	d2 . error		1057313	0					
ANR	1057566	Identifier	d2		1057313	0					
ANR	1057567	Identifier	error		1057313	1					
ANR	1057568	ArgumentList			1057313	1					
ANR	1057569	ExpressionStatement	"dprintf ( dflag , ""\\nMake a local COLLECTOR w/ explicit name\\n\\n"" )"	373:1:10449:10514	1057313	21	True				
ANR	1057570	CallExpression	"dprintf ( dflag , ""\\nMake a local COLLECTOR w/ explicit name\\n\\n"" )"		1057313	0					
ANR	1057571	Callee	dprintf		1057313	0					
ANR	1057572	Identifier	dprintf		1057313	0					
ANR	1057573	ArgumentList	dflag		1057313	1					
ANR	1057574	Argument	dflag		1057313	0					
ANR	1057575	Identifier	dflag		1057313	0					
ANR	1057576	Argument	"""\\nMake a local COLLECTOR w/ explicit name\\n\\n"""		1057313	1					
ANR	1057577	PrimaryExpression	"""\\nMake a local COLLECTOR w/ explicit name\\n\\n"""		1057313	0					
ANR	1057578	IdentifierDeclStatement	"Daemon d3 ( DT_COLLECTOR , ""turkey.cs.wisc.edu"" ) ;"	374:1:10517:10564	1057313	22	True				
ANR	1057579	IdentifierDecl	"d3 ( DT_COLLECTOR , ""turkey.cs.wisc.edu"" )"		1057313	0					
ANR	1057580	IdentifierDeclType	Daemon		1057313	0					
ANR	1057581	Identifier	d3		1057313	1					
ANR	1057582	Expression	"DT_COLLECTOR , ""turkey.cs.wisc.edu"""		1057313	2					
ANR	1057583	Identifier	DT_COLLECTOR		1057313	0					
ANR	1057584	PrimaryExpression	"""turkey.cs.wisc.edu"""		1057313	1					
ANR	1057585	IfStatement	if ( d3 . locate ( ) )		1057313	23					
ANR	1057586	Condition	d3 . locate ( )	375:5:10571:10581	1057313	0	True				
ANR	1057587	CallExpression	d3 . locate ( )		1057313	0					
ANR	1057588	Callee	d3 . locate		1057313	0					
ANR	1057589	MemberAccess	d3 . locate		1057313	0					
ANR	1057590	Identifier	d3		1057313	0					
ANR	1057591	Identifier	locate		1057313	1					
ANR	1057592	ArgumentList			1057313	1					
ANR	1057593	CompoundStatement		45:19:1264:1264	1057313	1					
ANR	1057594	ExpressionStatement	d3 . display ( dflag )	376:2:10589:10608	1057313	0	True				
ANR	1057595	CallExpression	d3 . display ( dflag )		1057313	0					
ANR	1057596	Callee	d3 . display		1057313	0					
ANR	1057597	MemberAccess	d3 . display		1057313	0					
ANR	1057598	Identifier	d3		1057313	0					
ANR	1057599	Identifier	display		1057313	1					
ANR	1057600	ArgumentList	dflag		1057313	1					
ANR	1057601	Argument	dflag		1057313	0					
ANR	1057602	Identifier	dflag		1057313	0					
ANR	1057603	ElseStatement	else		1057313	0					
ANR	1057604	CompoundStatement		47:8:1297:1297	1057313	0					
ANR	1057605	ExpressionStatement	"dprintf ( dflag , ""%s\\n"" , d3 . error ( ) )"	378:2:10622:10658	1057313	0	True				
ANR	1057606	CallExpression	"dprintf ( dflag , ""%s\\n"" , d3 . error ( ) )"		1057313	0					
ANR	1057607	Callee	dprintf		1057313	0					
ANR	1057608	Identifier	dprintf		1057313	0					
ANR	1057609	ArgumentList	dflag		1057313	1					
ANR	1057610	Argument	dflag		1057313	0					
ANR	1057611	Identifier	dflag		1057313	0					
ANR	1057612	Argument	"""%s\\n"""		1057313	1					
ANR	1057613	PrimaryExpression	"""%s\\n"""		1057313	0					
ANR	1057614	Argument	d3 . error ( )		1057313	2					
ANR	1057615	CallExpression	d3 . error ( )		1057313	0					
ANR	1057616	Callee	d3 . error		1057313	0					
ANR	1057617	MemberAccess	d3 . error		1057313	0					
ANR	1057618	Identifier	d3		1057313	0					
ANR	1057619	Identifier	error		1057313	1					
ANR	1057620	ArgumentList			1057313	1					
ANR	1057621	ExpressionStatement	"dprintf ( dflag , ""\\nUse idStr for a remote STARTD\\n\\n"" )"	381:1:10665:10720	1057313	24	True				
ANR	1057622	CallExpression	"dprintf ( dflag , ""\\nUse idStr for a remote STARTD\\n\\n"" )"		1057313	0					
ANR	1057623	Callee	dprintf		1057313	0					
ANR	1057624	Identifier	dprintf		1057313	0					
ANR	1057625	ArgumentList	dflag		1057313	1					
ANR	1057626	Argument	dflag		1057313	0					
ANR	1057627	Identifier	dflag		1057313	0					
ANR	1057628	Argument	"""\\nUse idStr for a remote STARTD\\n\\n"""		1057313	1					
ANR	1057629	PrimaryExpression	"""\\nUse idStr for a remote STARTD\\n\\n"""		1057313	0					
ANR	1057630	IdentifierDeclStatement	"Daemon d4 ( DT_STARTD , ""puck.cs.wisc.edu"" ) ;"	382:1:10723:10765	1057313	25	True				
ANR	1057631	IdentifierDecl	"d4 ( DT_STARTD , ""puck.cs.wisc.edu"" )"		1057313	0					
ANR	1057632	IdentifierDeclType	Daemon		1057313	0					
ANR	1057633	Identifier	d4		1057313	1					
ANR	1057634	Expression	"DT_STARTD , ""puck.cs.wisc.edu"""		1057313	2					
ANR	1057635	Identifier	DT_STARTD		1057313	0					
ANR	1057636	PrimaryExpression	"""puck.cs.wisc.edu"""		1057313	1					
ANR	1057637	IfStatement	if ( d4 . locate ( ) )		1057313	26					
ANR	1057638	Condition	d4 . locate ( )	383:5:10772:10782	1057313	0	True				
ANR	1057639	CallExpression	d4 . locate ( )		1057313	0					
ANR	1057640	Callee	d4 . locate		1057313	0					
ANR	1057641	MemberAccess	d4 . locate		1057313	0					
ANR	1057642	Identifier	d4		1057313	0					
ANR	1057643	Identifier	locate		1057313	1					
ANR	1057644	ArgumentList			1057313	1					
ANR	1057645	CompoundStatement		53:19:1465:1465	1057313	1					
ANR	1057646	ExpressionStatement	"dprintf ( dflag , ""Found %s\\n"" , d4 . idStr ( ) )"	384:2:10790:10832	1057313	0	True				
ANR	1057647	CallExpression	"dprintf ( dflag , ""Found %s\\n"" , d4 . idStr ( ) )"		1057313	0					
ANR	1057648	Callee	dprintf		1057313	0					
ANR	1057649	Identifier	dprintf		1057313	0					
ANR	1057650	ArgumentList	dflag		1057313	1					
ANR	1057651	Argument	dflag		1057313	0					
ANR	1057652	Identifier	dflag		1057313	0					
ANR	1057653	Argument	"""Found %s\\n"""		1057313	1					
ANR	1057654	PrimaryExpression	"""Found %s\\n"""		1057313	0					
ANR	1057655	Argument	d4 . idStr ( )		1057313	2					
ANR	1057656	CallExpression	d4 . idStr ( )		1057313	0					
ANR	1057657	Callee	d4 . idStr		1057313	0					
ANR	1057658	MemberAccess	d4 . idStr		1057313	0					
ANR	1057659	Identifier	d4		1057313	0					
ANR	1057660	Identifier	idStr		1057313	1					
ANR	1057661	ArgumentList			1057313	1					
ANR	1057662	ElseStatement	else		1057313	0					
ANR	1057663	CompoundStatement		55:8:1521:1521	1057313	0					
ANR	1057664	ExpressionStatement	"dprintf ( dflag , ""%s\\n"" , d4 . error ( ) )"	386:2:10846:10882	1057313	0	True				
ANR	1057665	CallExpression	"dprintf ( dflag , ""%s\\n"" , d4 . error ( ) )"		1057313	0					
ANR	1057666	Callee	dprintf		1057313	0					
ANR	1057667	Identifier	dprintf		1057313	0					
ANR	1057668	ArgumentList	dflag		1057313	1					
ANR	1057669	Argument	dflag		1057313	0					
ANR	1057670	Identifier	dflag		1057313	0					
ANR	1057671	Argument	"""%s\\n"""		1057313	1					
ANR	1057672	PrimaryExpression	"""%s\\n"""		1057313	0					
ANR	1057673	Argument	d4 . error ( )		1057313	2					
ANR	1057674	CallExpression	d4 . error ( )		1057313	0					
ANR	1057675	Callee	d4 . error		1057313	0					
ANR	1057676	MemberAccess	d4 . error		1057313	0					
ANR	1057677	Identifier	d4		1057313	0					
ANR	1057678	Identifier	error		1057313	1					
ANR	1057679	ArgumentList			1057313	1					
ANR	1057680	ExpressionStatement	"dprintf ( dflag , ""\\nTest socks on a valid Daemon that isn't up\\n\\n"" )"	389:1:10889:10957	1057313	27	True				
ANR	1057681	CallExpression	"dprintf ( dflag , ""\\nTest socks on a valid Daemon that isn't up\\n\\n"" )"		1057313	0					
ANR	1057682	Callee	dprintf		1057313	0					
ANR	1057683	Identifier	dprintf		1057313	0					
ANR	1057684	ArgumentList	dflag		1057313	1					
ANR	1057685	Argument	dflag		1057313	0					
ANR	1057686	Identifier	dflag		1057313	0					
ANR	1057687	Argument	"""\\nTest socks on a valid Daemon that isn't up\\n\\n"""		1057313	1					
ANR	1057688	PrimaryExpression	"""\\nTest socks on a valid Daemon that isn't up\\n\\n"""		1057313	0					
ANR	1057689	IdentifierDeclStatement	"Daemon d5 ( DT_SCHEDD , ""cabernet.cs.wisc.edu"" ) ;"	390:1:10960:11006	1057313	28	True				
ANR	1057690	IdentifierDecl	"d5 ( DT_SCHEDD , ""cabernet.cs.wisc.edu"" )"		1057313	0					
ANR	1057691	IdentifierDeclType	Daemon		1057313	0					
ANR	1057692	Identifier	d5		1057313	1					
ANR	1057693	Expression	"DT_SCHEDD , ""cabernet.cs.wisc.edu"""		1057313	2					
ANR	1057694	Identifier	DT_SCHEDD		1057313	0					
ANR	1057695	PrimaryExpression	"""cabernet.cs.wisc.edu"""		1057313	1					
ANR	1057696	ExpressionStatement	testSocks ( & d5 )	391:1:11009:11025	1057313	29	True				
ANR	1057697	CallExpression	testSocks ( & d5 )		1057313	0					
ANR	1057698	Callee	testSocks		1057313	0					
ANR	1057699	Identifier	testSocks		1057313	0					
ANR	1057700	ArgumentList	& d5		1057313	1					
ANR	1057701	Argument	& d5		1057313	0					
ANR	1057702	UnaryOperationExpression	& d5		1057313	0					
ANR	1057703	UnaryOperator	&		1057313	0					
ANR	1057704	Identifier	d5		1057313	1					
ANR	1057705	ExpressionStatement	"dprintf ( dflag , ""\\nCM where you specify pool and not name\\n\\n"" )"	393:1:11029:11093	1057313	30	True				
ANR	1057706	CallExpression	"dprintf ( dflag , ""\\nCM where you specify pool and not name\\n\\n"" )"		1057313	0					
ANR	1057707	Callee	dprintf		1057313	0					
ANR	1057708	Identifier	dprintf		1057313	0					
ANR	1057709	ArgumentList	dflag		1057313	1					
ANR	1057710	Argument	dflag		1057313	0					
ANR	1057711	Identifier	dflag		1057313	0					
ANR	1057712	Argument	"""\\nCM where you specify pool and not name\\n\\n"""		1057313	1					
ANR	1057713	PrimaryExpression	"""\\nCM where you specify pool and not name\\n\\n"""		1057313	0					
ANR	1057714	IdentifierDeclStatement	"Daemon d6 ( DT_COLLECTOR , NULL , ""condor"" ) ;"	394:1:11097:11138	1057313	31	True				
ANR	1057715	IdentifierDecl	"d6 ( DT_COLLECTOR , NULL , ""condor"" )"		1057313	0					
ANR	1057716	IdentifierDeclType	Daemon		1057313	0					
ANR	1057717	Identifier	d6		1057313	1					
ANR	1057718	Expression	"DT_COLLECTOR , NULL , ""condor"""		1057313	2					
ANR	1057719	Identifier	DT_COLLECTOR		1057313	0					
ANR	1057720	Expression	"NULL , ""condor"""		1057313	1					
ANR	1057721	Identifier	NULL		1057313	0					
ANR	1057722	PrimaryExpression	"""condor"""		1057313	1					
ANR	1057723	IfStatement	if ( d6 . locate ( ) )		1057313	32					
ANR	1057724	Condition	d6 . locate ( )	395:5:11145:11155	1057313	0	True				
ANR	1057725	CallExpression	d6 . locate ( )		1057313	0					
ANR	1057726	Callee	d6 . locate		1057313	0					
ANR	1057727	MemberAccess	d6 . locate		1057313	0					
ANR	1057728	Identifier	d6		1057313	0					
ANR	1057729	Identifier	locate		1057313	1					
ANR	1057730	ArgumentList			1057313	1					
ANR	1057731	CompoundStatement		65:19:1838:1838	1057313	1					
ANR	1057732	ExpressionStatement	d6 . display ( dflag )	396:2:11163:11182	1057313	0	True				
ANR	1057733	CallExpression	d6 . display ( dflag )		1057313	0					
ANR	1057734	Callee	d6 . display		1057313	0					
ANR	1057735	MemberAccess	d6 . display		1057313	0					
ANR	1057736	Identifier	d6		1057313	0					
ANR	1057737	Identifier	display		1057313	1					
ANR	1057738	ArgumentList	dflag		1057313	1					
ANR	1057739	Argument	dflag		1057313	0					
ANR	1057740	Identifier	dflag		1057313	0					
ANR	1057741	ElseStatement	else		1057313	0					
ANR	1057742	CompoundStatement		67:8:1871:1871	1057313	0					
ANR	1057743	ExpressionStatement	"dprintf ( dflag , ""%s\\n"" , d6 . error ( ) )"	398:2:11196:11232	1057313	0	True				
ANR	1057744	CallExpression	"dprintf ( dflag , ""%s\\n"" , d6 . error ( ) )"		1057313	0					
ANR	1057745	Callee	dprintf		1057313	0					
ANR	1057746	Identifier	dprintf		1057313	0					
ANR	1057747	ArgumentList	dflag		1057313	1					
ANR	1057748	Argument	dflag		1057313	0					
ANR	1057749	Identifier	dflag		1057313	0					
ANR	1057750	Argument	"""%s\\n"""		1057313	1					
ANR	1057751	PrimaryExpression	"""%s\\n"""		1057313	0					
ANR	1057752	Argument	d6 . error ( )		1057313	2					
ANR	1057753	CallExpression	d6 . error ( )		1057313	0					
ANR	1057754	Callee	d6 . error		1057313	0					
ANR	1057755	MemberAccess	d6 . error		1057313	0					
ANR	1057756	Identifier	d6		1057313	0					
ANR	1057757	Identifier	error		1057313	1					
ANR	1057758	ArgumentList			1057313	1					
ANR	1057759	ExpressionStatement	"dprintf ( dflag , ""\\nUsing sinful string for the collector\\n\\n"" )"	401:1:11240:11303	1057313	33	True				
ANR	1057760	CallExpression	"dprintf ( dflag , ""\\nUsing sinful string for the collector\\n\\n"" )"		1057313	0					
ANR	1057761	Callee	dprintf		1057313	0					
ANR	1057762	Identifier	dprintf		1057313	0					
ANR	1057763	ArgumentList	dflag		1057313	1					
ANR	1057764	Argument	dflag		1057313	0					
ANR	1057765	Identifier	dflag		1057313	0					
ANR	1057766	Argument	"""\\nUsing sinful string for the collector\\n\\n"""		1057313	1					
ANR	1057767	PrimaryExpression	"""\\nUsing sinful string for the collector\\n\\n"""		1057313	0					
ANR	1057768	IdentifierDeclStatement	"Daemon d7 ( DT_COLLECTOR , ""<128.105.143.16:9618>"" ) ;"	402:1:11306:11356	1057313	34	True				
ANR	1057769	IdentifierDecl	"d7 ( DT_COLLECTOR , ""<128.105.143.16:9618>"" )"		1057313	0					
ANR	1057770	IdentifierDeclType	Daemon		1057313	0					
ANR	1057771	Identifier	d7		1057313	1					
ANR	1057772	Expression	"DT_COLLECTOR , ""<128.105.143.16:9618>"""		1057313	2					
ANR	1057773	Identifier	DT_COLLECTOR		1057313	0					
ANR	1057774	PrimaryExpression	"""<128.105.143.16:9618>"""		1057313	1					
ANR	1057775	IfStatement	if ( d7 . locate ( ) )		1057313	35					
ANR	1057776	Condition	d7 . locate ( )	403:5:11363:11373	1057313	0	True				
ANR	1057777	CallExpression	d7 . locate ( )		1057313	0					
ANR	1057778	Callee	d7 . locate		1057313	0					
ANR	1057779	MemberAccess	d7 . locate		1057313	0					
ANR	1057780	Identifier	d7		1057313	0					
ANR	1057781	Identifier	locate		1057313	1					
ANR	1057782	ArgumentList			1057313	1					
ANR	1057783	CompoundStatement		73:19:2056:2056	1057313	1					
ANR	1057784	ExpressionStatement	"dprintf ( dflag , ""Found %s\\n"" , d7 . idStr ( ) )"	404:2:11381:11423	1057313	0	True				
ANR	1057785	CallExpression	"dprintf ( dflag , ""Found %s\\n"" , d7 . idStr ( ) )"		1057313	0					
ANR	1057786	Callee	dprintf		1057313	0					
ANR	1057787	Identifier	dprintf		1057313	0					
ANR	1057788	ArgumentList	dflag		1057313	1					
ANR	1057789	Argument	dflag		1057313	0					
ANR	1057790	Identifier	dflag		1057313	0					
ANR	1057791	Argument	"""Found %s\\n"""		1057313	1					
ANR	1057792	PrimaryExpression	"""Found %s\\n"""		1057313	0					
ANR	1057793	Argument	d7 . idStr ( )		1057313	2					
ANR	1057794	CallExpression	d7 . idStr ( )		1057313	0					
ANR	1057795	Callee	d7 . idStr		1057313	0					
ANR	1057796	MemberAccess	d7 . idStr		1057313	0					
ANR	1057797	Identifier	d7		1057313	0					
ANR	1057798	Identifier	idStr		1057313	1					
ANR	1057799	ArgumentList			1057313	1					
ANR	1057800	ExpressionStatement	d7 . display ( dflag )	405:2:11427:11446	1057313	1	True				
ANR	1057801	CallExpression	d7 . display ( dflag )		1057313	0					
ANR	1057802	Callee	d7 . display		1057313	0					
ANR	1057803	MemberAccess	d7 . display		1057313	0					
ANR	1057804	Identifier	d7		1057313	0					
ANR	1057805	Identifier	display		1057313	1					
ANR	1057806	ArgumentList	dflag		1057313	1					
ANR	1057807	Argument	dflag		1057313	0					
ANR	1057808	Identifier	dflag		1057313	0					
ANR	1057809	ElseStatement	else		1057313	0					
ANR	1057810	CompoundStatement		76:8:2135:2135	1057313	0					
ANR	1057811	ExpressionStatement	"dprintf ( dflag , ""%s\\n"" , d7 . error ( ) )"	407:2:11460:11496	1057313	0	True				
ANR	1057812	CallExpression	"dprintf ( dflag , ""%s\\n"" , d7 . error ( ) )"		1057313	0					
ANR	1057813	Callee	dprintf		1057313	0					
ANR	1057814	Identifier	dprintf		1057313	0					
ANR	1057815	ArgumentList	dflag		1057313	1					
ANR	1057816	Argument	dflag		1057313	0					
ANR	1057817	Identifier	dflag		1057313	0					
ANR	1057818	Argument	"""%s\\n"""		1057313	1					
ANR	1057819	PrimaryExpression	"""%s\\n"""		1057313	0					
ANR	1057820	Argument	d7 . error ( )		1057313	2					
ANR	1057821	CallExpression	d7 . error ( )		1057313	0					
ANR	1057822	Callee	d7 . error		1057313	0					
ANR	1057823	MemberAccess	d7 . error		1057313	0					
ANR	1057824	Identifier	d7		1057313	0					
ANR	1057825	Identifier	error		1057313	1					
ANR	1057826	ArgumentList			1057313	1					
ANR	1057827	ExpressionStatement	"dprintf ( dflag , ""\\nRemote daemons we should NOT find\\n\\n"" )"	410:1:11503:11562	1057313	36	True				
ANR	1057828	CallExpression	"dprintf ( dflag , ""\\nRemote daemons we should NOT find\\n\\n"" )"		1057313	0					
ANR	1057829	Callee	dprintf		1057313	0					
ANR	1057830	Identifier	dprintf		1057313	0					
ANR	1057831	ArgumentList	dflag		1057313	1					
ANR	1057832	Argument	dflag		1057313	0					
ANR	1057833	Identifier	dflag		1057313	0					
ANR	1057834	Argument	"""\\nRemote daemons we should NOT find\\n\\n"""		1057313	1					
ANR	1057835	PrimaryExpression	"""\\nRemote daemons we should NOT find\\n\\n"""		1057313	0					
ANR	1057836	ExpressionStatement	"makeAndDisplayRegular ( ""bazzle.cs.wisc.edu"" , ""condor"" )"	411:1:11565:11620	1057313	37	True				
ANR	1057837	CallExpression	"makeAndDisplayRegular ( ""bazzle.cs.wisc.edu"" , ""condor"" )"		1057313	0					
ANR	1057838	Callee	makeAndDisplayRegular		1057313	0					
ANR	1057839	Identifier	makeAndDisplayRegular		1057313	0					
ANR	1057840	ArgumentList	"""bazzle.cs.wisc.edu"""		1057313	1					
ANR	1057841	Argument	"""bazzle.cs.wisc.edu"""		1057313	0					
ANR	1057842	PrimaryExpression	"""bazzle.cs.wisc.edu"""		1057313	0					
ANR	1057843	Argument	"""condor"""		1057313	1					
ANR	1057844	PrimaryExpression	"""condor"""		1057313	0					
ANR	1057845	ExpressionStatement	"makeAndDisplayCM ( ""bazzle"" , ""bazzle"" )"	412:1:11623:11661	1057313	38	True				
ANR	1057846	CallExpression	"makeAndDisplayCM ( ""bazzle"" , ""bazzle"" )"		1057313	0					
ANR	1057847	Callee	makeAndDisplayCM		1057313	0					
ANR	1057848	Identifier	makeAndDisplayCM		1057313	0					
ANR	1057849	ArgumentList	"""bazzle"""		1057313	1					
ANR	1057850	Argument	"""bazzle"""		1057313	0					
ANR	1057851	PrimaryExpression	"""bazzle"""		1057313	0					
ANR	1057852	Argument	"""bazzle"""		1057313	1					
ANR	1057853	PrimaryExpression	"""bazzle"""		1057313	0					
ANR	1057854	Identifier	main		1057313	1					
ANR	1057855	ParameterList	"int argc , char * argv"		1057313	2					
ANR	1057856	Parameter	int argc	330:5:9297:9304	1057313	0	True				
ANR	1057857	ParameterType	int		1057313	0					
ANR	1057858	Identifier	argc		1057313	1					
ANR	1057859	Parameter	char * argv	330:15:9307:9316	1057313	1	True				
ANR	1057860	ParameterType	char *		1057313	0					
ANR	1057861	Identifier	argv		1057313	1					
ANR	1057862	CFGEntryNode	ENTRY		1057313		True				
ANR	1057863	CFGExitNode	EXIT		1057313		True				
ANR	1057864	Symbol	d7 . error		1057313						
ANR	1057865	Symbol	d . error		1057313						
ANR	1057866	Symbol	d6 . error		1057313						
ANR	1057867	Symbol	argv		1057313						
ANR	1057868	Symbol	d2		1057313						
ANR	1057869	Symbol	d3		1057313						
ANR	1057870	Symbol	d7 . locate		1057313						
ANR	1057871	Symbol	d4		1057313						
ANR	1057872	Symbol	d . locate		1057313						
ANR	1057873	Symbol	d5		1057313						
ANR	1057874	Symbol	d6		1057313						
ANR	1057875	Symbol	d7		1057313						
ANR	1057876	Symbol	do_socks		1057313						
ANR	1057877	Symbol	d2 . locate		1057313						
ANR	1057878	Symbol	& d5		1057313						
ANR	1057879	Symbol	argc		1057313						
ANR	1057880	Symbol	dflag		1057313						
ANR	1057881	Symbol	NULL		1057313						
ANR	1057882	Symbol	d		1057313						
ANR	1057883	Symbol	d6 . locate		1057313						
ANR	1057884	Symbol	false		1057313						
ANR	1057885	Symbol	d3 . locate		1057313						
ANR	1057886	Symbol	d7 . idStr		1057313						
ANR	1057887	Symbol	d3 . error		1057313						
ANR	1057888	Symbol	d2 . error		1057313						
ANR	1057889	Symbol	d4 . locate		1057313						
ANR	1057890	Symbol	true		1057313						
ANR	1057891	Symbol	d4 . idStr		1057313						
ANR	1057892	Symbol	d . idStr		1057313						
ANR	1057893	Symbol	d4 . error		1057313						
