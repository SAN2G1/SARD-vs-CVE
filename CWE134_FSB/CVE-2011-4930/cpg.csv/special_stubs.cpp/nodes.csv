command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	2383364	File	data/converged/CVE-2011-4930_htcondor/special_stubs.cpp								
ANR	2383365	DeclStmt									
ANR	2383366	Decl							extern StdUnivSock	extern StdUnivSock *	syscall_sock
ANR	2383367	Function	get_local_ipaddr	41:0:1278:1349							
ANR	2383368	FunctionDef	get_local_ipaddr ()		2383367	0					
ANR	2383369	CompoundStatement		42:19:1313:1349	2383367	0					
ANR	2383370	ReturnStatement	return syscall_sock -> my_addr ( ) ;	43:1:1316:1346	2383367	0	True				
ANR	2383371	CallExpression	syscall_sock -> my_addr ( )		2383367	0					
ANR	2383372	Callee	syscall_sock -> my_addr		2383367	0					
ANR	2383373	PtrMemberAccess	syscall_sock -> my_addr		2383367	0					
ANR	2383374	Identifier	syscall_sock		2383367	0					
ANR	2383375	Identifier	my_addr		2383367	1					
ANR	2383376	ArgumentList			2383367	1					
ANR	2383377	ReturnType	condor_sockaddr		2383367	1					
ANR	2383378	Identifier	get_local_ipaddr		2383367	2					
ANR	2383379	ParameterList			2383367	3					
ANR	2383380	CFGEntryNode	ENTRY		2383367		True				
ANR	2383381	CFGExitNode	EXIT		2383367		True				
ANR	2383382	Symbol	syscall_sock		2383367						
ANR	2383383	Symbol	* syscall_sock		2383367						
ANR	2383384	Symbol	syscall_sock -> my_addr		2383367						
ANR	2383385	DeclStmt									
ANR	2383386	Decl							extern int	extern int	DebugFlags
ANR	2383387	DeclStmt									
ANR	2383388	Decl							int	int	_condor_DebugFD
ANR	2383389	DeclStmt									
ANR	2383390	Decl							extern int	extern int ( int )	SetSyscalls
ANR	2383391	Function	REMOTE_syscall	64:0:1953:1980							
ANR	2383392	FunctionDef	REMOTE_syscall ()		2383391	0					
ANR	2383393	CompoundStatement		64:26:1979:1980	2383391	0					
ANR	2383394	ReturnType	void		2383391	1					
ANR	2383395	Identifier	REMOTE_syscall		2383391	2					
ANR	2383396	ParameterList			2383391	3					
ANR	2383397	CFGEntryNode	ENTRY		2383391		True				
ANR	2383398	CFGExitNode	EXIT		2383391		True				
ANR	2383399	Function	_condor_dprintf_va	73:0:2262:3048							
ANR	2383400	FunctionDef	"_condor_dprintf_va (int flags , const char * fmt , va_list args)"		2383399	0					
ANR	2383401	CompoundStatement		75:0:2330:3048	2383399	0					
ANR	2383402	IdentifierDeclStatement	int scm ;	76:1:2333:2340	2383399	0	True				
ANR	2383403	IdentifierDecl	scm		2383399	0					
ANR	2383404	IdentifierDeclType	int		2383399	0					
ANR	2383405	Identifier	scm		2383399	1					
ANR	2383406	IdentifierDeclStatement	int no_fd = FALSE ;	77:1:2343:2360	2383399	1	True				
ANR	2383407	IdentifierDecl	no_fd = FALSE		2383399	0					
ANR	2383408	IdentifierDeclType	int		2383399	0					
ANR	2383409	Identifier	no_fd		2383399	1					
ANR	2383410	AssignmentExpression	no_fd = FALSE		2383399	2		=			
ANR	2383411	Identifier	FALSE		2383399	0					
ANR	2383412	Identifier	FALSE		2383399	1					
ANR	2383413	IfStatement	if ( ! ( flags & DebugFlags ) )		2383399	2					
ANR	2383414	Condition	! ( flags & DebugFlags )	80:5:2426:2444	2383399	0	True				
ANR	2383415	UnaryOperationExpression	! ( flags & DebugFlags )		2383399	0					
ANR	2383416	UnaryOperator	!		2383399	0					
ANR	2383417	BitAndExpression	flags & DebugFlags		2383399	1		&			
ANR	2383418	Identifier	flags		2383399	0					
ANR	2383419	Identifier	DebugFlags		2383399	1					
ANR	2383420	CompoundStatement		6:27:117:117	2383399	1					
ANR	2383421	ReturnStatement	return ;	81:2:2452:2458	2383399	0	True				
ANR	2383422	IfStatement	if ( ! _condor_DebugFD )		2383399	3					
ANR	2383423	Condition	! _condor_DebugFD	85:5:2525:2541	2383399	0	True				
ANR	2383424	UnaryOperationExpression	! _condor_DebugFD		2383399	0					
ANR	2383425	UnaryOperator	!		2383399	0					
ANR	2383426	Identifier	_condor_DebugFD		2383399	1					
ANR	2383427	CompoundStatement		11:25:214:214	2383399	1					
ANR	2383428	ExpressionStatement	_condor_DebugFD = 2	86:2:2549:2568	2383399	0	True				
ANR	2383429	AssignmentExpression	_condor_DebugFD = 2		2383399	0		=			
ANR	2383430	Identifier	_condor_DebugFD		2383399	0					
ANR	2383431	PrimaryExpression	2		2383399	1					
ANR	2383432	ExpressionStatement	no_fd = TRUE	87:2:2585:2597	2383399	1	True				
ANR	2383433	AssignmentExpression	no_fd = TRUE		2383399	0		=			
ANR	2383434	Identifier	no_fd		2383399	0					
ANR	2383435	Identifier	TRUE		2383399	1					
ANR	2383436	ExpressionStatement	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )	96:1:2808:2853	2383399	4	True				
ANR	2383437	AssignmentExpression	scm = SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2383399	0		=			
ANR	2383438	Identifier	scm		2383399	0					
ANR	2383439	CallExpression	SetSyscalls ( SYS_LOCAL | SYS_UNMAPPED )		2383399	1					
ANR	2383440	Callee	SetSyscalls		2383399	0					
ANR	2383441	Identifier	SetSyscalls		2383399	0					
ANR	2383442	ArgumentList	SYS_LOCAL | SYS_UNMAPPED		2383399	1					
ANR	2383443	Argument	SYS_LOCAL | SYS_UNMAPPED		2383399	0					
ANR	2383444	InclusiveOrExpression	SYS_LOCAL | SYS_UNMAPPED		2383399	0		|			
ANR	2383445	Identifier	SYS_LOCAL		2383399	0					
ANR	2383446	Identifier	SYS_UNMAPPED		2383399	1					
ANR	2383447	ExpressionStatement	"_condor_vfprintf_va ( _condor_DebugFD , fmt , args )"	99:1:2892:2941	2383399	5	True				
ANR	2383448	CallExpression	"_condor_vfprintf_va ( _condor_DebugFD , fmt , args )"		2383399	0					
ANR	2383449	Callee	_condor_vfprintf_va		2383399	0					
ANR	2383450	Identifier	_condor_vfprintf_va		2383399	0					
ANR	2383451	ArgumentList	_condor_DebugFD		2383399	1					
ANR	2383452	Argument	_condor_DebugFD		2383399	0					
ANR	2383453	Identifier	_condor_DebugFD		2383399	0					
ANR	2383454	Argument	fmt		2383399	1					
ANR	2383455	Identifier	fmt		2383399	0					
ANR	2383456	Argument	args		2383399	2					
ANR	2383457	Identifier	args		2383399	0					
ANR	2383458	ExpressionStatement	( void ) SetSyscalls ( scm )	102:1:2979:3004	2383399	6	True				
ANR	2383459	CastExpression	( void ) SetSyscalls ( scm )		2383399	0					
ANR	2383460	CastTarget	void		2383399	0					
ANR	2383461	CallExpression	SetSyscalls ( scm )		2383399	1					
ANR	2383462	Callee	SetSyscalls		2383399	0					
ANR	2383463	Identifier	SetSyscalls		2383399	0					
ANR	2383464	ArgumentList	scm		2383399	1					
ANR	2383465	Argument	scm		2383399	0					
ANR	2383466	Identifier	scm		2383399	0					
ANR	2383467	IfStatement	if ( no_fd )		2383399	7					
ANR	2383468	Condition	no_fd	104:5:3012:3016	2383399	0	True				
ANR	2383469	Identifier	no_fd		2383399	0					
ANR	2383470	CompoundStatement		30:13:689:689	2383399	1					
ANR	2383471	ExpressionStatement	_condor_DebugFD = 0	105:2:3024:3043	2383399	0	True				
ANR	2383472	AssignmentExpression	_condor_DebugFD = 0		2383399	0		=			
ANR	2383473	Identifier	_condor_DebugFD		2383399	0					
ANR	2383474	PrimaryExpression	0		2383399	1					
ANR	2383475	ReturnType	void		2383399	1					
ANR	2383476	Identifier	_condor_dprintf_va		2383399	2					
ANR	2383477	ParameterList	"int flags , const char * fmt , va_list args"		2383399	3					
ANR	2383478	Parameter	int flags	74:20:2287:2295	2383399	0	True				
ANR	2383479	ParameterType	int		2383399	0					
ANR	2383480	Identifier	flags		2383399	1					
ANR	2383481	Parameter	const char * fmt	74:31:2298:2312	2383399	1	True				
ANR	2383482	ParameterType	const char *		2383399	0					
ANR	2383483	Identifier	fmt		2383399	1					
ANR	2383484	Parameter	va_list args	74:48:2315:2326	2383399	2	True				
ANR	2383485	ParameterType	va_list		2383399	0					
ANR	2383486	Identifier	args		2383399	1					
ANR	2383487	CFGEntryNode	ENTRY		2383399		True				
ANR	2383488	CFGExitNode	EXIT		2383399		True				
ANR	2383489	Symbol	args		2383399						
ANR	2383490	Symbol	SYS_UNMAPPED		2383399						
ANR	2383491	Symbol	SYS_LOCAL		2383399						
ANR	2383492	Symbol	flags		2383399						
ANR	2383493	Symbol	TRUE		2383399						
ANR	2383494	Symbol	SetSyscalls		2383399						
ANR	2383495	Symbol	FALSE		2383399						
ANR	2383496	Symbol	DebugFlags		2383399						
ANR	2383497	Symbol	fmt		2383399						
ANR	2383498	Symbol	scm		2383399						
ANR	2383499	Symbol	_condor_DebugFD		2383399						
ANR	2383500	Symbol	no_fd		2383399						
ANR	2383501	Function	get_port_range	110:0:3052:3910							
ANR	2383502	FunctionDef	"get_port_range (int is_outgoing , int * low_port , int * high_port)"		2383501	0					
ANR	2383503	CompoundStatement		111:0:3119:3910	2383501	0					
ANR	2383504	IdentifierDeclStatement	"char * low = NULL , * high = NULL ;"	112:1:3122:3152	2383501	0	True				
ANR	2383505	IdentifierDecl	* low = NULL		2383501	0					
ANR	2383506	IdentifierDeclType	char *		2383501	0					
ANR	2383507	Identifier	low		2383501	1					
ANR	2383508	AssignmentExpression	* low = NULL		2383501	2		=			
ANR	2383509	Identifier	NULL		2383501	0					
ANR	2383510	Identifier	NULL		2383501	1					
ANR	2383511	IdentifierDecl	* high = NULL		2383501	1					
ANR	2383512	IdentifierDeclType	char *		2383501	0					
ANR	2383513	Identifier	high		2383501	1					
ANR	2383514	AssignmentExpression	* high = NULL		2383501	2		=			
ANR	2383515	Identifier	NULL		2383501	0					
ANR	2383516	Identifier	NULL		2383501	1					
ANR	2383517	IfStatement	"if ( ( low = getenv ( ""_condor_LOWPORT"" ) ) == NULL )"		2383501	1					
ANR	2383518	Condition	"( low = getenv ( ""_condor_LOWPORT"" ) ) == NULL"	117:6:3312:3352	2383501	0	True				
ANR	2383519	EqualityExpression	"( low = getenv ( ""_condor_LOWPORT"" ) ) == NULL"		2383501	0		==			
ANR	2383520	AssignmentExpression	"low = getenv ( ""_condor_LOWPORT"" )"		2383501	0		=			
ANR	2383521	Identifier	low		2383501	0					
ANR	2383522	CallExpression	"getenv ( ""_condor_LOWPORT"" )"		2383501	1					
ANR	2383523	Callee	getenv		2383501	0					
ANR	2383524	Identifier	getenv		2383501	0					
ANR	2383525	ArgumentList	"""_condor_LOWPORT"""		2383501	1					
ANR	2383526	Argument	"""_condor_LOWPORT"""		2383501	0					
ANR	2383527	PrimaryExpression	"""_condor_LOWPORT"""		2383501	0					
ANR	2383528	Identifier	NULL		2383501	1					
ANR	2383529	CompoundStatement		7:50:236:236	2383501	1					
ANR	2383530	ExpressionStatement	"dprintf ( D_NETWORK , ""_condor_LOWPORT undefined\\n"" )"	118:8:3366:3415	2383501	0	True				
ANR	2383531	CallExpression	"dprintf ( D_NETWORK , ""_condor_LOWPORT undefined\\n"" )"		2383501	0					
ANR	2383532	Callee	dprintf		2383501	0					
ANR	2383533	Identifier	dprintf		2383501	0					
ANR	2383534	ArgumentList	D_NETWORK		2383501	1					
ANR	2383535	Argument	D_NETWORK		2383501	0					
ANR	2383536	Identifier	D_NETWORK		2383501	0					
ANR	2383537	Argument	"""_condor_LOWPORT undefined\\n"""		2383501	1					
ANR	2383538	PrimaryExpression	"""_condor_LOWPORT undefined\\n"""		2383501	0					
ANR	2383539	ReturnStatement	return FALSE ;	119:2:3419:3431	2383501	1	True				
ANR	2383540	Identifier	FALSE		2383501	0					
ANR	2383541	IfStatement	"if ( ( high = getenv ( ""_condor_HIGHPORT"" ) ) == NULL )"		2383501	2					
ANR	2383542	Condition	"( high = getenv ( ""_condor_HIGHPORT"" ) ) == NULL"	121:6:3445:3487	2383501	0	True				
ANR	2383543	EqualityExpression	"( high = getenv ( ""_condor_HIGHPORT"" ) ) == NULL"		2383501	0		==			
ANR	2383544	AssignmentExpression	"high = getenv ( ""_condor_HIGHPORT"" )"		2383501	0		=			
ANR	2383545	Identifier	high		2383501	0					
ANR	2383546	CallExpression	"getenv ( ""_condor_HIGHPORT"" )"		2383501	1					
ANR	2383547	Callee	getenv		2383501	0					
ANR	2383548	Identifier	getenv		2383501	0					
ANR	2383549	ArgumentList	"""_condor_HIGHPORT"""		2383501	1					
ANR	2383550	Argument	"""_condor_HIGHPORT"""		2383501	0					
ANR	2383551	PrimaryExpression	"""_condor_HIGHPORT"""		2383501	0					
ANR	2383552	Identifier	NULL		2383501	1					
ANR	2383553	CompoundStatement		11:52:371:371	2383501	1					
ANR	2383554	ExpressionStatement	"dprintf ( D_ALWAYS , ""_condor_LOWPORT is defined but _condor_HIGHPORT undefined!\\n"" )"	122:8:3501:3582	2383501	0	True				
ANR	2383555	CallExpression	"dprintf ( D_ALWAYS , ""_condor_LOWPORT is defined but _condor_HIGHPORT undefined!\\n"" )"		2383501	0					
ANR	2383556	Callee	dprintf		2383501	0					
ANR	2383557	Identifier	dprintf		2383501	0					
ANR	2383558	ArgumentList	D_ALWAYS		2383501	1					
ANR	2383559	Argument	D_ALWAYS		2383501	0					
ANR	2383560	Identifier	D_ALWAYS		2383501	0					
ANR	2383561	Argument	"""_condor_LOWPORT is defined but _condor_HIGHPORT undefined!\\n"""		2383501	1					
ANR	2383562	PrimaryExpression	"""_condor_LOWPORT is defined but _condor_HIGHPORT undefined!\\n"""		2383501	0					
ANR	2383563	ReturnStatement	return FALSE ;	123:2:3586:3598	2383501	1	True				
ANR	2383564	Identifier	FALSE		2383501	0					
ANR	2383565	ExpressionStatement	* low_port = atoi ( low )	126:1:3605:3626	2383501	3	True				
ANR	2383566	AssignmentExpression	* low_port = atoi ( low )		2383501	0		=			
ANR	2383567	UnaryOperationExpression	* low_port		2383501	0					
ANR	2383568	UnaryOperator	*		2383501	0					
ANR	2383569	Identifier	low_port		2383501	1					
ANR	2383570	CallExpression	atoi ( low )		2383501	1					
ANR	2383571	Callee	atoi		2383501	0					
ANR	2383572	Identifier	atoi		2383501	0					
ANR	2383573	ArgumentList	low		2383501	1					
ANR	2383574	Argument	low		2383501	0					
ANR	2383575	Identifier	low		2383501	0					
ANR	2383576	ExpressionStatement	* high_port = atoi ( high )	127:1:3629:3652	2383501	4	True				
ANR	2383577	AssignmentExpression	* high_port = atoi ( high )		2383501	0		=			
ANR	2383578	UnaryOperationExpression	* high_port		2383501	0					
ANR	2383579	UnaryOperator	*		2383501	0					
ANR	2383580	Identifier	high_port		2383501	1					
ANR	2383581	CallExpression	atoi ( high )		2383501	1					
ANR	2383582	Callee	atoi		2383501	0					
ANR	2383583	Identifier	atoi		2383501	0					
ANR	2383584	ArgumentList	high		2383501	1					
ANR	2383585	Argument	high		2383501	0					
ANR	2383586	Identifier	high		2383501	0					
ANR	2383587	IfStatement	if ( * low_port < 1024 || * high_port < 1024 || * low_port > * high_port )		2383501	5					
ANR	2383588	Condition	* low_port < 1024 || * high_port < 1024 || * low_port > * high_port	129:4:3659:3721	2383501	0	True				
ANR	2383589	OrExpression	* low_port < 1024 || * high_port < 1024 || * low_port > * high_port		2383501	0		||			
ANR	2383590	RelationalExpression	* low_port < 1024		2383501	0		<			
ANR	2383591	UnaryOperationExpression	* low_port		2383501	0					
ANR	2383592	UnaryOperator	*		2383501	0					
ANR	2383593	Identifier	low_port		2383501	1					
ANR	2383594	PrimaryExpression	1024		2383501	1					
ANR	2383595	OrExpression	* high_port < 1024 || * low_port > * high_port		2383501	1		||			
ANR	2383596	RelationalExpression	* high_port < 1024		2383501	0		<			
ANR	2383597	UnaryOperationExpression	* high_port		2383501	0					
ANR	2383598	UnaryOperator	*		2383501	0					
ANR	2383599	Identifier	high_port		2383501	1					
ANR	2383600	PrimaryExpression	1024		2383501	1					
ANR	2383601	RelationalExpression	* low_port > * high_port		2383501	1		>			
ANR	2383602	UnaryOperationExpression	* low_port		2383501	0					
ANR	2383603	UnaryOperator	*		2383501	0					
ANR	2383604	Identifier	low_port		2383501	1					
ANR	2383605	UnaryOperationExpression	* high_port		2383501	1					
ANR	2383606	UnaryOperator	*		2383501	0					
ANR	2383607	Identifier	high_port		2383501	1					
ANR	2383608	CompoundStatement		19:69:604:604	2383501	1					
ANR	2383609	ExpressionStatement	"dprintf ( D_ALWAYS , ""get_port_range - invalid LOWPORT(%d) \\\\n\\t\\t                   and/or HIGHPORT(%d)\\n"" , * low_port , * high_port )"	130:2:3728:3874	2383501	0	True				
ANR	2383610	CallExpression	"dprintf ( D_ALWAYS , ""get_port_range - invalid LOWPORT(%d) \\\\n\\t\\t                   and/or HIGHPORT(%d)\\n"" , * low_port , * high_port )"		2383501	0					
ANR	2383611	Callee	dprintf		2383501	0					
ANR	2383612	Identifier	dprintf		2383501	0					
ANR	2383613	ArgumentList	D_ALWAYS		2383501	1					
ANR	2383614	Argument	D_ALWAYS		2383501	0					
ANR	2383615	Identifier	D_ALWAYS		2383501	0					
ANR	2383616	Argument	"""get_port_range - invalid LOWPORT(%d) \\\\n\\t\\t                   and/or HIGHPORT(%d)\\n"""		2383501	1					
ANR	2383617	PrimaryExpression	"""get_port_range - invalid LOWPORT(%d) \\\\n\\t\\t                   and/or HIGHPORT(%d)\\n"""		2383501	0					
ANR	2383618	Argument	* low_port		2383501	2					
ANR	2383619	UnaryOperationExpression	* low_port		2383501	0					
ANR	2383620	UnaryOperator	*		2383501	0					
ANR	2383621	Identifier	low_port		2383501	1					
ANR	2383622	Argument	* high_port		2383501	3					
ANR	2383623	UnaryOperationExpression	* high_port		2383501	0					
ANR	2383624	UnaryOperator	*		2383501	0					
ANR	2383625	Identifier	high_port		2383501	1					
ANR	2383626	ReturnStatement	return FALSE ;	133:2:3878:3890	2383501	1	True				
ANR	2383627	Identifier	FALSE		2383501	0					
ANR	2383628	ReturnStatement	return TRUE ;	136:1:3897:3908	2383501	6	True				
ANR	2383629	Identifier	TRUE		2383501	0					
ANR	2383630	ReturnType	int		2383501	1					
ANR	2383631	Identifier	get_port_range		2383501	2					
ANR	2383632	ParameterList	"int is_outgoing , int * low_port , int * high_port"		2383501	3					
ANR	2383633	Parameter	int is_outgoing	110:19:3071:3085	2383501	0	True				
ANR	2383634	ParameterType	int		2383501	0					
ANR	2383635	Identifier	is_outgoing		2383501	1					
ANR	2383636	Parameter	int * low_port	110:36:3088:3100	2383501	1	True				
ANR	2383637	ParameterType	int *		2383501	0					
ANR	2383638	Identifier	low_port		2383501	1					
ANR	2383639	Parameter	int * high_port	110:51:3103:3116	2383501	2	True				
ANR	2383640	ParameterType	int *		2383501	0					
ANR	2383641	Identifier	high_port		2383501	1					
ANR	2383642	CFGEntryNode	ENTRY		2383501		True				
ANR	2383643	CFGExitNode	EXIT		2383501		True				
ANR	2383644	Symbol	atoi		2383501						
ANR	2383645	Symbol	NULL		2383501						
ANR	2383646	Symbol	D_ALWAYS		2383501						
ANR	2383647	Symbol	TRUE		2383501						
ANR	2383648	Symbol	* high_port		2383501						
ANR	2383649	Symbol	high_port		2383501						
ANR	2383650	Symbol	* low_port		2383501						
ANR	2383651	Symbol	high		2383501						
ANR	2383652	Symbol	low		2383501						
ANR	2383653	Symbol	D_NETWORK		2383501						
ANR	2383654	Symbol	FALSE		2383501						
ANR	2383655	Symbol	is_outgoing		2383501						
ANR	2383656	Symbol	low_port		2383501						
ANR	2383657	Symbol	getenv		2383501						
ANR	2383658	Function	_condor_bind_all_interfaces	140:0:3914:4287							
ANR	2383659	FunctionDef	_condor_bind_all_interfaces ()		2383658	0					
ANR	2383660	CompoundStatement		142:0:3954:4287	2383658	0					
ANR	2383661	IdentifierDeclStatement	char * tmp = NULL ;	143:1:3957:3973	2383658	0	True				
ANR	2383662	IdentifierDecl	* tmp = NULL		2383658	0					
ANR	2383663	IdentifierDeclType	char *		2383658	0					
ANR	2383664	Identifier	tmp		2383658	1					
ANR	2383665	AssignmentExpression	* tmp = NULL		2383658	2		=			
ANR	2383666	Identifier	NULL		2383658	0					
ANR	2383667	Identifier	NULL		2383658	1					
ANR	2383668	IdentifierDeclStatement	int bind_all = FALSE ;	144:1:3976:3996	2383658	1	True				
ANR	2383669	IdentifierDecl	bind_all = FALSE		2383658	0					
ANR	2383670	IdentifierDeclType	int		2383658	0					
ANR	2383671	Identifier	bind_all		2383658	1					
ANR	2383672	AssignmentExpression	bind_all = FALSE		2383658	2		=			
ANR	2383673	Identifier	FALSE		2383658	0					
ANR	2383674	Identifier	FALSE		2383658	1					
ANR	2383675	IfStatement	"if ( ( tmp = getenv ( ""_condor_BIND_ALL_INTERFACES"" ) ) == NULL )"		2383658	2					
ANR	2383676	Condition	"( tmp = getenv ( ""_condor_BIND_ALL_INTERFACES"" ) ) == NULL"	146:5:4004:4056	2383658	0	True				
ANR	2383677	EqualityExpression	"( tmp = getenv ( ""_condor_BIND_ALL_INTERFACES"" ) ) == NULL"		2383658	0		==			
ANR	2383678	AssignmentExpression	"tmp = getenv ( ""_condor_BIND_ALL_INTERFACES"" )"		2383658	0		=			
ANR	2383679	Identifier	tmp		2383658	0					
ANR	2383680	CallExpression	"getenv ( ""_condor_BIND_ALL_INTERFACES"" )"		2383658	1					
ANR	2383681	Callee	getenv		2383658	0					
ANR	2383682	Identifier	getenv		2383658	0					
ANR	2383683	ArgumentList	"""_condor_BIND_ALL_INTERFACES"""		2383658	1					
ANR	2383684	Argument	"""_condor_BIND_ALL_INTERFACES"""		2383658	0					
ANR	2383685	PrimaryExpression	"""_condor_BIND_ALL_INTERFACES"""		2383658	0					
ANR	2383686	Identifier	NULL		2383658	1					
ANR	2383687	CompoundStatement		5:61:105:105	2383658	1					
ANR	2383688	ExpressionStatement	"dprintf ( D_NETWORK , ""_condor_BIND_ALL_INTERFACES undefined\\n"" )"	147:8:4070:4131	2383658	0	True				
ANR	2383689	CallExpression	"dprintf ( D_NETWORK , ""_condor_BIND_ALL_INTERFACES undefined\\n"" )"		2383658	0					
ANR	2383690	Callee	dprintf		2383658	0					
ANR	2383691	Identifier	dprintf		2383658	0					
ANR	2383692	ArgumentList	D_NETWORK		2383658	1					
ANR	2383693	Argument	D_NETWORK		2383658	0					
ANR	2383694	Identifier	D_NETWORK		2383658	0					
ANR	2383695	Argument	"""_condor_BIND_ALL_INTERFACES undefined\\n"""		2383658	1					
ANR	2383696	PrimaryExpression	"""_condor_BIND_ALL_INTERFACES undefined\\n"""		2383658	0					
ANR	2383697	ReturnStatement	return TRUE ;	148:2:4135:4146	2383658	1	True				
ANR	2383698	Identifier	TRUE		2383658	0					
ANR	2383699	SwitchStatement	switch ( tmp [ 0 ] )		2383658	3					
ANR	2383700	Condition	tmp [ 0 ]	151:9:4165:4170	2383658	0	True				
ANR	2383701	ArrayIndexing	tmp [ 0 ]		2383658	0					
ANR	2383702	Identifier	tmp		2383658	0					
ANR	2383703	PrimaryExpression	0		2383658	1					
ANR	2383704	CompoundStatement		10:18:219:219	2383658	1					
ANR	2383705	Label	case 'T' :	152:1:4177:4185	2383658	0	True				
ANR	2383706	Label	case 't' :	153:1:4188:4196	2383658	1	True				
ANR	2383707	ExpressionStatement	bind_all = TRUE	154:2:4200:4215	2383658	2	True				
ANR	2383708	AssignmentExpression	bind_all = TRUE		2383658	0		=			
ANR	2383709	Identifier	bind_all		2383658	0					
ANR	2383710	Identifier	TRUE		2383658	1					
ANR	2383711	BreakStatement	break ;	155:2:4219:4224	2383658	3	True				
ANR	2383712	Label	default :	156:1:4227:4234	2383658	4	True				
ANR	2383713	Identifier	default		2383658	0					
ANR	2383714	ExpressionStatement	bind_all = FALSE	157:2:4238:4254	2383658	5	True				
ANR	2383715	AssignmentExpression	bind_all = FALSE		2383658	0		=			
ANR	2383716	Identifier	bind_all		2383658	0					
ANR	2383717	Identifier	FALSE		2383658	1					
ANR	2383718	BreakStatement	break ;	158:2:4258:4263	2383658	6	True				
ANR	2383719	ReturnStatement	return bind_all ;	161:1:4270:4285	2383658	4	True				
ANR	2383720	Identifier	bind_all		2383658	0					
ANR	2383721	ReturnType	int		2383658	1					
ANR	2383722	Identifier	_condor_bind_all_interfaces		2383658	2					
ANR	2383723	ParameterList			2383658	3					
ANR	2383724	CFGEntryNode	ENTRY		2383658		True				
ANR	2383725	CFGExitNode	EXIT		2383658		True				
ANR	2383726	Symbol	* tmp		2383658						
ANR	2383727	Symbol	NULL		2383658						
ANR	2383728	Symbol	tmp		2383658						
ANR	2383729	Symbol	D_NETWORK		2383658						
ANR	2383730	Symbol	TRUE		2383658						
ANR	2383731	Symbol	FALSE		2383658						
ANR	2383732	Symbol	bind_all		2383658						
ANR	2383733	Symbol	getenv		2383658						
ANR	2383734	Function	condor_gethostbyname	165:0:4291:4382							
ANR	2383735	FunctionDef	condor_gethostbyname (const char * name)		2383734	0					
ANR	2383736	CompoundStatement		167:0:4349:4382	2383734	0					
ANR	2383737	ReturnStatement	return gethostbyname ( name ) ;	168:1:4352:4380	2383734	0	True				
ANR	2383738	CallExpression	gethostbyname ( name )		2383734	0					
ANR	2383739	Callee	gethostbyname		2383734	0					
ANR	2383740	Identifier	gethostbyname		2383734	0					
ANR	2383741	ArgumentList	name		2383734	1					
ANR	2383742	Argument	name		2383734	0					
ANR	2383743	Identifier	name		2383734	0					
ANR	2383744	ReturnType	struct hostent *		2383734	1					
ANR	2383745	Identifier	condor_gethostbyname		2383734	2					
ANR	2383746	ParameterList	const char * name		2383734	3					
ANR	2383747	Parameter	const char * name	166:22:4330:4345	2383734	0	True				
ANR	2383748	ParameterType	const char *		2383734	0					
ANR	2383749	Identifier	name		2383734	1					
ANR	2383750	CFGEntryNode	ENTRY		2383734		True				
ANR	2383751	CFGExitNode	EXIT		2383734		True				
ANR	2383752	Symbol	gethostbyname		2383734						
ANR	2383753	Symbol	name		2383734						
ANR	2383754	Function	condor_gethostbyaddr	171:0:4385:4522							
ANR	2383755	FunctionDef	"condor_gethostbyaddr (const char * addr , SOCKET_LENGTH_TYPE len , int type)"		2383754	0					
ANR	2383756	CompoundStatement		174:0:4478:4522	2383754	0					
ANR	2383757	ReturnStatement	"return gethostbyaddr ( addr , len , type ) ;"	175:1:4481:4520	2383754	0	True				
ANR	2383758	CallExpression	"gethostbyaddr ( addr , len , type )"		2383754	0					
ANR	2383759	Callee	gethostbyaddr		2383754	0					
ANR	2383760	Identifier	gethostbyaddr		2383754	0					
ANR	2383761	ArgumentList	addr		2383754	1					
ANR	2383762	Argument	addr		2383754	0					
ANR	2383763	Identifier	addr		2383754	0					
ANR	2383764	Argument	len		2383754	1					
ANR	2383765	Identifier	len		2383754	0					
ANR	2383766	Argument	type		2383754	2					
ANR	2383767	Identifier	type		2383754	0					
ANR	2383768	ReturnType	struct hostent *		2383754	1					
ANR	2383769	Identifier	condor_gethostbyaddr		2383754	2					
ANR	2383770	ParameterList	"const char * addr , SOCKET_LENGTH_TYPE len , int type"		2383754	3					
ANR	2383771	Parameter	const char * addr	172:22:4424:4439	2383754	0	True				
ANR	2383772	ParameterType	const char *		2383754	0					
ANR	2383773	Identifier	addr		2383754	1					
ANR	2383774	Parameter	SOCKET_LENGTH_TYPE len	172:40:4442:4463	2383754	1	True				
ANR	2383775	ParameterType	SOCKET_LENGTH_TYPE		2383754	0					
ANR	2383776	Identifier	len		2383754	1					
ANR	2383777	Parameter	int type	172:64:4466:4473	2383754	2	True				
ANR	2383778	ParameterType	int		2383754	0					
ANR	2383779	Identifier	type		2383754	1					
ANR	2383780	CFGEntryNode	ENTRY		2383754		True				
ANR	2383781	CFGExitNode	EXIT		2383754		True				
ANR	2383782	Symbol	len		2383754						
ANR	2383783	Symbol	gethostbyaddr		2383754						
ANR	2383784	Symbol	addr		2383754						
ANR	2383785	Symbol	type		2383754						
ANR	2383786	Function	condor_gethostname	178:0:4525:4618							
ANR	2383787	FunctionDef	"condor_gethostname (char * name , size_t namelen)"		2383786	0					
ANR	2383788	CompoundStatement		180:0:4578:4618	2383786	0					
ANR	2383789	ReturnStatement	"return gethostname ( name , namelen ) ;"	181:1:4581:4616	2383786	0	True				
ANR	2383790	CallExpression	"gethostname ( name , namelen )"		2383786	0					
ANR	2383791	Callee	gethostname		2383786	0					
ANR	2383792	Identifier	gethostname		2383786	0					
ANR	2383793	ArgumentList	name		2383786	1					
ANR	2383794	Argument	name		2383786	0					
ANR	2383795	Identifier	name		2383786	0					
ANR	2383796	Argument	namelen		2383786	1					
ANR	2383797	Identifier	namelen		2383786	0					
ANR	2383798	ReturnType	int		2383786	1					
ANR	2383799	Identifier	condor_gethostname		2383786	2					
ANR	2383800	ParameterList	"char * name , size_t namelen"		2383786	3					
ANR	2383801	Parameter	char * name	179:20:4549:4558	2383786	0	True				
ANR	2383802	ParameterType	char *		2383786	0					
ANR	2383803	Identifier	name		2383786	1					
ANR	2383804	Parameter	size_t namelen	179:32:4561:4574	2383786	1	True				
ANR	2383805	ParameterType	size_t		2383786	0					
ANR	2383806	Identifier	namelen		2383786	1					
ANR	2383807	CFGEntryNode	ENTRY		2383786		True				
ANR	2383808	CFGExitNode	EXIT		2383786		True				
ANR	2383809	Symbol	name		2383786						
ANR	2383810	Symbol	gethostname		2383786						
ANR	2383811	Symbol	namelen		2383786						
ANR	2383812	Function	_condor_fd_panic	194:0:5044:5213							
ANR	2383813	FunctionDef	"_condor_fd_panic (int line , const char * file)"		2383812	0					
ANR	2383814	CompoundStatement		196:0:5096:5213	2383812	0					
ANR	2383815	ExpressionStatement	"dprintf ( D_ALWAYS , ""**** PANIC -- OUT OF FILE DESCRIPTORS at line %d in %s\\n"" , line , file )"	197:1:5099:5199	2383812	0	True				
ANR	2383816	CallExpression	"dprintf ( D_ALWAYS , ""**** PANIC -- OUT OF FILE DESCRIPTORS at line %d in %s\\n"" , line , file )"		2383812	0					
ANR	2383817	Callee	dprintf		2383812	0					
ANR	2383818	Identifier	dprintf		2383812	0					
ANR	2383819	ArgumentList	D_ALWAYS		2383812	1					
ANR	2383820	Argument	D_ALWAYS		2383812	0					
ANR	2383821	Identifier	D_ALWAYS		2383812	0					
ANR	2383822	Argument	"""**** PANIC -- OUT OF FILE DESCRIPTORS at line %d in %s\\n"""		2383812	1					
ANR	2383823	PrimaryExpression	"""**** PANIC -- OUT OF FILE DESCRIPTORS at line %d in %s\\n"""		2383812	0					
ANR	2383824	Argument	line		2383812	2					
ANR	2383825	Identifier	line		2383812	0					
ANR	2383826	Argument	file		2383812	3					
ANR	2383827	Identifier	file		2383812	0					
ANR	2383828	ExpressionStatement	Suicide ( )	200:1:5202:5211	2383812	1	True				
ANR	2383829	CallExpression	Suicide ( )		2383812	0					
ANR	2383830	Callee	Suicide		2383812	0					
ANR	2383831	Identifier	Suicide		2383812	0					
ANR	2383832	ArgumentList			2383812	1					
ANR	2383833	ReturnType	void		2383812	1					
ANR	2383834	Identifier	_condor_fd_panic		2383812	2					
ANR	2383835	ParameterList	"int line , const char * file"		2383812	3					
ANR	2383836	Parameter	int line	195:18:5067:5074	2383812	0	True				
ANR	2383837	ParameterType	int		2383812	0					
ANR	2383838	Identifier	line		2383812	1					
ANR	2383839	Parameter	const char * file	195:28:5077:5092	2383812	1	True				
ANR	2383840	ParameterType	const char *		2383812	0					
ANR	2383841	Identifier	file		2383812	1					
ANR	2383842	CFGEntryNode	ENTRY		2383812		True				
ANR	2383843	CFGExitNode	EXIT		2383812		True				
ANR	2383844	Symbol	file		2383812						
ANR	2383845	Symbol	line		2383812						
ANR	2383846	Symbol	D_ALWAYS		2383812						
ANR	2383847	Function	GCB_local_bind	205:0:5256:5366							
ANR	2383848	FunctionDef	"GCB_local_bind (int fd , struct sockaddr * my_addr , socklen_t addrlen)"		2383847	0					
ANR	2383849	CompoundStatement		207:0:5328:5366	2383847	0					
ANR	2383850	ReturnStatement	"return bind ( fd , my_addr , addrlen ) ;"	208:1:5331:5364	2383847	0	True				
ANR	2383851	CallExpression	"bind ( fd , my_addr , addrlen )"		2383847	0					
ANR	2383852	Callee	bind		2383847	0					
ANR	2383853	Identifier	bind		2383847	0					
ANR	2383854	ArgumentList	fd		2383847	1					
ANR	2383855	Argument	fd		2383847	0					
ANR	2383856	Identifier	fd		2383847	0					
ANR	2383857	Argument	my_addr		2383847	1					
ANR	2383858	Identifier	my_addr		2383847	0					
ANR	2383859	Argument	addrlen		2383847	2					
ANR	2383860	Identifier	addrlen		2383847	0					
ANR	2383861	ReturnType	int		2383847	1					
ANR	2383862	Identifier	GCB_local_bind		2383847	2					
ANR	2383863	ParameterList	"int fd , struct sockaddr * my_addr , socklen_t addrlen"		2383847	3					
ANR	2383864	Parameter	int fd	206:15:5275:5280	2383847	0	True				
ANR	2383865	ParameterType	int		2383847	0					
ANR	2383866	Identifier	fd		2383847	1					
ANR	2383867	Parameter	struct sockaddr * my_addr	206:23:5283:5306	2383847	1	True				
ANR	2383868	ParameterType	struct sockaddr *		2383847	0					
ANR	2383869	Identifier	my_addr		2383847	1					
ANR	2383870	Parameter	socklen_t addrlen	206:49:5309:5325	2383847	2	True				
ANR	2383871	ParameterType	socklen_t		2383847	0					
ANR	2383872	Identifier	addrlen		2383847	1					
ANR	2383873	CFGEntryNode	ENTRY		2383847		True				
ANR	2383874	CFGExitNode	EXIT		2383847		True				
ANR	2383875	Symbol	addrlen		2383847						
ANR	2383876	Symbol	bind		2383847						
ANR	2383877	Symbol	my_addr		2383847						
ANR	2383878	Symbol	fd		2383847						
ANR	2383879	Function	vprintf_length	213:0:5414:5479							
ANR	2383880	FunctionDef	"vprintf_length (const char * format , va_list args)"		2383879	0					
ANR	2383881	CompoundStatement		213:53:5467:5479	2383879	0					
ANR	2383882	ReturnStatement	return 0 ;	213:1:5469:5477	2383879	0	True				
ANR	2383883	PrimaryExpression	0		2383879	0					
ANR	2383884	ReturnType	int		2383879	1					
ANR	2383885	Identifier	vprintf_length		2383879	2					
ANR	2383886	ParameterList	"const char * format , va_list args"		2383879	3					
ANR	2383887	Parameter	const char * format	213:19:5433:5450	2383879	0	True				
ANR	2383888	ParameterType	const char *		2383879	0					
ANR	2383889	Identifier	format		2383879	1					
ANR	2383890	Parameter	va_list args	213:39:5453:5464	2383879	1	True				
ANR	2383891	ParameterType	va_list		2383879	0					
ANR	2383892	Identifier	args		2383879	1					
ANR	2383893	CFGEntryNode	ENTRY		2383879		True				
ANR	2383894	CFGExitNode	EXIT		2383879		True				
ANR	2383895	Symbol	args		2383879						
ANR	2383896	Symbol	format		2383879						
ANR	2383897	Function	my_ip_string	226:0:5793:5937							
ANR	2383898	FunctionDef	my_ip_string ()		2383897	0					
ANR	2383899	CompoundStatement		228:0:5814:5937	2383897	0					
ANR	2383900	Statement	static	229:1:5817:5822	2383897	0	True				
ANR	2383901	Statement	char	229:8:5824:5827	2383897	1	True				
ANR	2383902	Statement	ipbuf	229:13:5829:5833	2383897	2	True				
ANR	2383903	Statement	[	229:18:5834:5834	2383897	3	True				
ANR	2383904	Statement	INET6_ADDRSTRLEN	229:19:5835:5850	2383897	4	True				
ANR	2383905	Statement	]	229:35:5851:5851	2383897	5	True				
ANR	2383906	Statement	=	229:37:5853:5853	2383897	6	True				
ANR	2383907	CompoundStatement		2:39:40:40	2383897	7					
ANR	2383908	Statement	0	229:40:5856:5856	2383897	0	True				
ANR	2383909	Statement	","	229:41:5857:5857	2383897	1	True				
ANR	2383910	ExpressionStatement		229:43:5859:5859	2383897	8	True				
ANR	2383911	ExpressionStatement	"syscall_sock -> my_addr ( ) . to_ip_string ( ipbuf , sizeof ( ipbuf ) )"	230:1:5862:5920	2383897	9	True				
ANR	2383912	CallExpression	"syscall_sock -> my_addr ( ) . to_ip_string ( ipbuf , sizeof ( ipbuf ) )"		2383897	0					
ANR	2383913	Callee	syscall_sock -> my_addr ( ) . to_ip_string		2383897	0					
ANR	2383914	MemberAccess	syscall_sock -> my_addr ( ) . to_ip_string		2383897	0					
ANR	2383915	CallExpression	syscall_sock -> my_addr ( )		2383897	0					
ANR	2383916	Callee	syscall_sock -> my_addr		2383897	0					
ANR	2383917	PtrMemberAccess	syscall_sock -> my_addr		2383897	0					
ANR	2383918	Identifier	syscall_sock		2383897	0					
ANR	2383919	Identifier	my_addr		2383897	1					
ANR	2383920	ArgumentList			2383897	1					
ANR	2383921	Identifier	to_ip_string		2383897	1					
ANR	2383922	ArgumentList	ipbuf		2383897	1					
ANR	2383923	Argument	ipbuf		2383897	0					
ANR	2383924	Identifier	ipbuf		2383897	0					
ANR	2383925	Argument	sizeof ( ipbuf )		2383897	1					
ANR	2383926	SizeofExpression	sizeof ( ipbuf )		2383897	0					
ANR	2383927	Sizeof	sizeof		2383897	0					
ANR	2383928	SizeofOperand	ipbuf		2383897	1					
ANR	2383929	ReturnStatement	return ipbuf ;	231:1:5923:5935	2383897	10	True				
ANR	2383930	Identifier	ipbuf		2383897	0					
ANR	2383931	ReturnType	char *		2383897	1					
ANR	2383932	Identifier	my_ip_string		2383897	2					
ANR	2383933	ParameterList			2383897	3					
ANR	2383934	CFGEntryNode	ENTRY		2383897		True				
ANR	2383935	CFGExitNode	EXIT		2383897		True				
ANR	2383936	Symbol	ipbuf		2383897						
ANR	2383937	Symbol	syscall_sock		2383897						
ANR	2383938	Symbol	* syscall_sock		2383897						
ANR	2383939	Symbol	syscall_sock -> my_addr		2383897						
ANR	2383940	Function	resolve_hostname	234:0:5940:6753							
ANR	2383941	FunctionDef	resolve_hostname (const char * hostname)		2383940	0					
ANR	2383942	CompoundStatement		234:68:6008:6753	2383940	0					
ANR	2383943	IdentifierDeclStatement	std :: vector < condor_sockaddr > ret ;	235:1:6011:6043	2383940	0	True				
ANR	2383944	IdentifierDecl	ret		2383940	0					
ANR	2383945	IdentifierDeclType	std :: vector < condor_sockaddr >		2383940	0					
ANR	2383946	Identifier	ret		2383940	1					
ANR	2383947	IdentifierDeclStatement	addrinfo * addrs = 0 ;	236:1:6046:6065	2383940	1	True				
ANR	2383948	IdentifierDecl	* addrs = 0		2383940	0					
ANR	2383949	IdentifierDeclType	addrinfo *		2383940	0					
ANR	2383950	Identifier	addrs		2383940	1					
ANR	2383951	AssignmentExpression	* addrs = 0		2383940	2		=			
ANR	2383952	Identifier	addrs		2383940	0					
ANR	2383953	PrimaryExpression	0		2383940	1					
ANR	2383954	IdentifierDeclStatement	int result ;	237:1:6068:6078	2383940	2	True				
ANR	2383955	IdentifierDecl	result		2383940	0					
ANR	2383956	IdentifierDeclType	int		2383940	0					
ANR	2383957	Identifier	result		2383940	1					
ANR	2383958	ExpressionStatement	"result = getaddrinfo ( hostname , NULL , NULL , & addrs )"	239:1:6082:6132	2383940	3	True				
ANR	2383959	AssignmentExpression	"result = getaddrinfo ( hostname , NULL , NULL , & addrs )"		2383940	0		=			
ANR	2383960	Identifier	result		2383940	0					
ANR	2383961	CallExpression	"getaddrinfo ( hostname , NULL , NULL , & addrs )"		2383940	1					
ANR	2383962	Callee	getaddrinfo		2383940	0					
ANR	2383963	Identifier	getaddrinfo		2383940	0					
ANR	2383964	ArgumentList	hostname		2383940	1					
ANR	2383965	Argument	hostname		2383940	0					
ANR	2383966	Identifier	hostname		2383940	0					
ANR	2383967	Argument	NULL		2383940	1					
ANR	2383968	Identifier	NULL		2383940	0					
ANR	2383969	Argument	NULL		2383940	2					
ANR	2383970	Identifier	NULL		2383940	0					
ANR	2383971	Argument	& addrs		2383940	3					
ANR	2383972	UnaryOperationExpression	& addrs		2383940	0					
ANR	2383973	UnaryOperator	&		2383940	0					
ANR	2383974	Identifier	addrs		2383940	1					
ANR	2383975	IfStatement	if ( result != 0 || ! addrs )		2383940	4					
ANR	2383976	Condition	result != 0 || ! addrs	240:5:6139:6159	2383940	0	True				
ANR	2383977	OrExpression	result != 0 || ! addrs		2383940	0		||			
ANR	2383978	EqualityExpression	result != 0		2383940	0		!=			
ANR	2383979	Identifier	result		2383940	0					
ANR	2383980	PrimaryExpression	0		2383940	1					
ANR	2383981	UnaryOperationExpression	! addrs		2383940	1					
ANR	2383982	UnaryOperator	!		2383940	0					
ANR	2383983	Identifier	addrs		2383940	1					
ANR	2383984	CompoundStatement		7:28:153:153	2383940	1					
ANR	2383985	ReturnStatement	return ret ;	241:2:6166:6176	2383940	0	True				
ANR	2383986	Identifier	ret		2383940	0					
ANR	2383987	IdentifierDeclStatement	addrinfo * iter = addrs ;	244:1:6183:6205	2383940	5	True				
ANR	2383988	IdentifierDecl	* iter = addrs		2383940	0					
ANR	2383989	IdentifierDeclType	addrinfo *		2383940	0					
ANR	2383990	Identifier	iter		2383940	1					
ANR	2383991	AssignmentExpression	* iter = addrs		2383940	2		=			
ANR	2383992	Identifier	addrs		2383940	0					
ANR	2383993	Identifier	addrs		2383940	1					
ANR	2383994	WhileStatement	while ( iter )		2383940	6					
ANR	2383995	Condition	iter	245:8:6215:6218	2383940	0	True				
ANR	2383996	Identifier	iter		2383940	0					
ANR	2383997	CompoundStatement		12:14:212:212	2383940	1					
ANR	2383998	ExpressionStatement	ret . push_back ( condor_sockaddr ( iter -> ai_addr ) )	246:2:6225:6270	2383940	0	True				
ANR	2383999	CallExpression	ret . push_back ( condor_sockaddr ( iter -> ai_addr ) )		2383940	0					
ANR	2384000	Callee	ret . push_back		2383940	0					
ANR	2384001	MemberAccess	ret . push_back		2383940	0					
ANR	2384002	Identifier	ret		2383940	0					
ANR	2384003	Identifier	push_back		2383940	1					
ANR	2384004	ArgumentList	condor_sockaddr ( iter -> ai_addr )		2383940	1					
ANR	2384005	Argument	condor_sockaddr ( iter -> ai_addr )		2383940	0					
ANR	2384006	CallExpression	condor_sockaddr ( iter -> ai_addr )		2383940	0					
ANR	2384007	Callee	condor_sockaddr		2383940	0					
ANR	2384008	Identifier	condor_sockaddr		2383940	0					
ANR	2384009	ArgumentList	iter -> ai_addr		2383940	1					
ANR	2384010	Argument	iter -> ai_addr		2383940	0					
ANR	2384011	PtrMemberAccess	iter -> ai_addr		2383940	0					
ANR	2384012	Identifier	iter		2383940	0					
ANR	2384013	Identifier	ai_addr		2383940	1					
ANR	2384014	ExpressionStatement	iter = iter -> ai_next	247:2:6274:6294	2383940	1	True				
ANR	2384015	AssignmentExpression	iter = iter -> ai_next		2383940	0		=			
ANR	2384016	Identifier	iter		2383940	0					
ANR	2384017	PtrMemberAccess	iter -> ai_next		2383940	1					
ANR	2384018	Identifier	iter		2383940	0					
ANR	2384019	Identifier	ai_next		2383940	1					
ANR	2384020	ExpressionStatement	freeaddrinfo ( addrs )	249:1:6300:6319	2383940	7	True				
ANR	2384021	CallExpression	freeaddrinfo ( addrs )		2383940	0					
ANR	2384022	Callee	freeaddrinfo		2383940	0					
ANR	2384023	Identifier	freeaddrinfo		2383940	0					
ANR	2384024	ArgumentList	addrs		2383940	1					
ANR	2384025	Argument	addrs		2383940	0					
ANR	2384026	Identifier	addrs		2383940	0					
ANR	2384027	IdentifierDeclStatement	std :: vector < condor_sockaddr > :: iterator it ;	259:1:6623:6664	2383940	8	True				
ANR	2384028	IdentifierDecl	it		2383940	0					
ANR	2384029	IdentifierDeclType	std :: vector < condor_sockaddr > :: iterator		2383940	0					
ANR	2384030	Identifier	it		2383940	1					
ANR	2384031	ExpressionStatement	"it = std :: unique ( ret . begin ( ) , ret . end ( ) )"	260:1:6667:6707	2383940	9	True				
ANR	2384032	AssignmentExpression	"it = std :: unique ( ret . begin ( ) , ret . end ( ) )"		2383940	0		=			
ANR	2384033	Identifier	it		2383940	0					
ANR	2384034	CallExpression	"std :: unique ( ret . begin ( ) , ret . end ( ) )"		2383940	1					
ANR	2384035	Callee	std :: unique		2383940	0					
ANR	2384036	Identifier	std :: unique		2383940	0					
ANR	2384037	ArgumentList	ret . begin ( )		2383940	1					
ANR	2384038	Argument	ret . begin ( )		2383940	0					
ANR	2384039	CallExpression	ret . begin ( )		2383940	0					
ANR	2384040	Callee	ret . begin		2383940	0					
ANR	2384041	MemberAccess	ret . begin		2383940	0					
ANR	2384042	Identifier	ret		2383940	0					
ANR	2384043	Identifier	begin		2383940	1					
ANR	2384044	ArgumentList			2383940	1					
ANR	2384045	Argument	ret . end ( )		2383940	1					
ANR	2384046	CallExpression	ret . end ( )		2383940	0					
ANR	2384047	Callee	ret . end		2383940	0					
ANR	2384048	MemberAccess	ret . end		2383940	0					
ANR	2384049	Identifier	ret		2383940	0					
ANR	2384050	Identifier	end		2383940	1					
ANR	2384051	ArgumentList			2383940	1					
ANR	2384052	ExpressionStatement	ret . resize ( it - ret . begin ( ) )	261:1:6710:6738	2383940	10	True				
ANR	2384053	CallExpression	ret . resize ( it - ret . begin ( ) )		2383940	0					
ANR	2384054	Callee	ret . resize		2383940	0					
ANR	2384055	MemberAccess	ret . resize		2383940	0					
ANR	2384056	Identifier	ret		2383940	0					
ANR	2384057	Identifier	resize		2383940	1					
ANR	2384058	ArgumentList	it - ret . begin ( )		2383940	1					
ANR	2384059	Argument	it - ret . begin ( )		2383940	0					
ANR	2384060	AdditiveExpression	it - ret . begin ( )		2383940	0		-			
ANR	2384061	Identifier	it		2383940	0					
ANR	2384062	CallExpression	ret . begin ( )		2383940	1					
ANR	2384063	Callee	ret . begin		2383940	0					
ANR	2384064	MemberAccess	ret . begin		2383940	0					
ANR	2384065	Identifier	ret		2383940	0					
ANR	2384066	Identifier	begin		2383940	1					
ANR	2384067	ArgumentList			2383940	1					
ANR	2384068	ReturnStatement	return ret ;	262:1:6741:6751	2383940	11	True				
ANR	2384069	Identifier	ret		2383940	0					
ANR	2384070	ReturnType	std :: vector < condor_sockaddr >		2383940	1					
ANR	2384071	Identifier	resolve_hostname		2383940	2					
ANR	2384072	ParameterList	const char * hostname		2383940	3					
ANR	2384073	Parameter	const char * hostname	234:46:5986:6005	2383940	0	True				
ANR	2384074	ParameterType	const char *		2383940	0					
ANR	2384075	Identifier	hostname		2383940	1					
ANR	2384076	CFGEntryNode	ENTRY		2383940		True				
ANR	2384077	CFGExitNode	EXIT		2383940		True				
ANR	2384078	Symbol	ret		2383940						
ANR	2384079	Symbol	NULL		2383940						
ANR	2384080	Symbol	& addrs		2383940						
ANR	2384081	Symbol	std :: unique		2383940						
ANR	2384082	Symbol	addrs		2383940						
ANR	2384083	Symbol	getaddrinfo		2383940						
ANR	2384084	Symbol	iter		2383940						
ANR	2384085	Symbol	it		2383940						
ANR	2384086	Symbol	result		2383940						
ANR	2384087	Symbol	* iter		2383940						
ANR	2384088	Symbol	hostname		2383940						
ANR	2384089	Symbol	iter -> ai_addr		2383940						
ANR	2384090	Symbol	iter -> ai_next		2383940						
ANR	2384091	Symbol	condor_sockaddr		2383940						
ANR	2384092	Symbol	ret . end		2383940						
ANR	2384093	Symbol	ret . begin		2383940						
ANR	2384094	Function	resolve_hostname	265:0:6756:6874							
ANR	2384095	FunctionDef	resolve_hostname (const MyString & hostname)		2384094	0					
ANR	2384096	CompoundStatement		265:72:6828:6874	2384094	0					
ANR	2384097	ReturnStatement	return resolve_hostname ( hostname . Value ( ) ) ;	266:1:6831:6872	2384094	0	True				
ANR	2384098	CallExpression	resolve_hostname ( hostname . Value ( ) )		2384094	0					
ANR	2384099	Callee	resolve_hostname		2384094	0					
ANR	2384100	Identifier	resolve_hostname		2384094	0					
ANR	2384101	ArgumentList	hostname . Value ( )		2384094	1					
ANR	2384102	Argument	hostname . Value ( )		2384094	0					
ANR	2384103	CallExpression	hostname . Value ( )		2384094	0					
ANR	2384104	Callee	hostname . Value		2384094	0					
ANR	2384105	MemberAccess	hostname . Value		2384094	0					
ANR	2384106	Identifier	hostname		2384094	0					
ANR	2384107	Identifier	Value		2384094	1					
ANR	2384108	ArgumentList			2384094	1					
ANR	2384109	ReturnType	std :: vector < condor_sockaddr >		2384094	1					
ANR	2384110	Identifier	resolve_hostname		2384094	2					
ANR	2384111	ParameterList	const MyString & hostname		2384094	3					
ANR	2384112	Parameter	const MyString & hostname	265:46:6802:6825	2384094	0	True				
ANR	2384113	ParameterType	const MyString &		2384094	0					
ANR	2384114	Identifier	hostname		2384094	1					
ANR	2384115	CFGEntryNode	ENTRY		2384094		True				
ANR	2384116	CFGExitNode	EXIT		2384094		True				
ANR	2384117	Symbol	hostname		2384094						
ANR	2384118	Symbol	hostname . Value		2384094						
ANR	2384119	Symbol	resolve_hostname		2384094						
