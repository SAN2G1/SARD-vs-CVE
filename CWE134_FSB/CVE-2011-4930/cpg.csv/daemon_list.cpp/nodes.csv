command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1107154	File	data/converged/CVE-2011-4930_htcondor/daemon_list.cpp								
ANR	1107155	Function	DaemonList :: DaemonList	30:0:1019:1046							
ANR	1107156	FunctionDef	DaemonList :: DaemonList ()		1107155	0					
ANR	1107157	CompoundStatement		31:0:1044:1046	1107155	0					
ANR	1107158	Identifier	DaemonList :: DaemonList		1107155	1					
ANR	1107159	ParameterList			1107155	2					
ANR	1107160	CFGEntryNode	ENTRY		1107155		True				
ANR	1107161	CFGExitNode	EXIT		1107155		True				
ANR	1107162	Function	DaemonList :: ~DaemonList	35:0:1050:1158							
ANR	1107163	FunctionDef	DaemonList :: ~DaemonList ()		1107162	0					
ANR	1107164	CompoundStatement		36:0:1082:1158	1107162	0					
ANR	1107165	IdentifierDeclStatement	Daemon * tmp ;	37:1:1085:1096	1107162	0	True				
ANR	1107166	IdentifierDecl	* tmp		1107162	0					
ANR	1107167	IdentifierDeclType	Daemon *		1107162	0					
ANR	1107168	Identifier	tmp		1107162	1					
ANR	1107169	ExpressionStatement	list . Rewind ( )	38:1:1099:1112	1107162	1	True				
ANR	1107170	CallExpression	list . Rewind ( )		1107162	0					
ANR	1107171	Callee	list . Rewind		1107162	0					
ANR	1107172	MemberAccess	list . Rewind		1107162	0					
ANR	1107173	Identifier	list		1107162	0					
ANR	1107174	Identifier	Rewind		1107162	1					
ANR	1107175	ArgumentList			1107162	1					
ANR	1107176	WhileStatement	while ( list . Next ( tmp ) )		1107162	2					
ANR	1107177	Condition	list . Next ( tmp )	39:8:1122:1135	1107162	0	True				
ANR	1107178	CallExpression	list . Next ( tmp )		1107162	0					
ANR	1107179	Callee	list . Next		1107162	0					
ANR	1107180	MemberAccess	list . Next		1107162	0					
ANR	1107181	Identifier	list		1107162	0					
ANR	1107182	Identifier	Next		1107162	1					
ANR	1107183	ArgumentList	tmp		1107162	1					
ANR	1107184	Argument	tmp		1107162	0					
ANR	1107185	Identifier	tmp		1107162	0					
ANR	1107186	CompoundStatement		4:25:56:56	1107162	1					
ANR	1107187	Statement	delete	40:2:1143:1148	1107162	0	True				
ANR	1107188	ExpressionStatement	tmp	40:9:1150:1153	1107162	1	True				
ANR	1107189	Identifier	tmp		1107162	0					
ANR	1107190	Identifier	DaemonList :: ~DaemonList		1107162	1					
ANR	1107191	ParameterList			1107162	2					
ANR	1107192	CFGEntryNode	ENTRY		1107162		True				
ANR	1107193	CFGExitNode	EXIT		1107162		True				
ANR	1107194	Symbol	tmp		1107162						
ANR	1107195	Symbol	list . Next		1107162						
ANR	1107196	Symbol	list		1107162						
ANR	1107197	Function	DaemonList :: init	45:0:1162:1661							
ANR	1107198	FunctionDef	"DaemonList :: init (daemon_t type , const char * host_list , const char * pool_list)"		1107197	0					
ANR	1107199	CompoundStatement		47:0:1247:1661	1107197	0					
ANR	1107200	IdentifierDeclStatement	Daemon * tmp ;	48:1:1250:1261	1107197	0	True				
ANR	1107201	IdentifierDecl	* tmp		1107197	0					
ANR	1107202	IdentifierDeclType	Daemon *		1107197	0					
ANR	1107203	Identifier	tmp		1107197	1					
ANR	1107204	IdentifierDeclStatement	char * host ;	49:1:1264:1274	1107197	1	True				
ANR	1107205	IdentifierDecl	* host		1107197	0					
ANR	1107206	IdentifierDeclType	char *		1107197	0					
ANR	1107207	Identifier	host		1107197	1					
ANR	1107208	IdentifierDeclStatement	char const * pool = NULL ;	50:1:1277:1300	1107197	2	True				
ANR	1107209	IdentifierDecl	* pool = NULL		1107197	0					
ANR	1107210	IdentifierDeclType	char const *		1107197	0					
ANR	1107211	Identifier	pool		1107197	1					
ANR	1107212	AssignmentExpression	* pool = NULL		1107197	2		=			
ANR	1107213	Identifier	NULL		1107197	0					
ANR	1107214	Identifier	NULL		1107197	1					
ANR	1107215	IdentifierDeclStatement	StringList foo ;	51:1:1303:1317	1107197	3	True				
ANR	1107216	IdentifierDecl	foo		1107197	0					
ANR	1107217	IdentifierDeclType	StringList		1107197	0					
ANR	1107218	Identifier	foo		1107197	1					
ANR	1107219	IdentifierDeclStatement	StringList pools ;	52:1:1320:1336	1107197	4	True				
ANR	1107220	IdentifierDecl	pools		1107197	0					
ANR	1107221	IdentifierDeclType	StringList		1107197	0					
ANR	1107222	Identifier	pools		1107197	1					
ANR	1107223	IfStatement	if ( host_list )		1107197	5					
ANR	1107224	Condition	host_list	53:5:1343:1351	1107197	0	True				
ANR	1107225	Identifier	host_list		1107197	0					
ANR	1107226	CompoundStatement		7:17:107:107	1107197	1					
ANR	1107227	ExpressionStatement	foo . initializeFromString ( host_list )	54:2:1359:1396	1107197	0	True				
ANR	1107228	CallExpression	foo . initializeFromString ( host_list )		1107197	0					
ANR	1107229	Callee	foo . initializeFromString		1107197	0					
ANR	1107230	MemberAccess	foo . initializeFromString		1107197	0					
ANR	1107231	Identifier	foo		1107197	0					
ANR	1107232	Identifier	initializeFromString		1107197	1					
ANR	1107233	ArgumentList	host_list		1107197	1					
ANR	1107234	Argument	host_list		1107197	0					
ANR	1107235	Identifier	host_list		1107197	0					
ANR	1107236	ExpressionStatement	foo . rewind ( )	55:2:1400:1412	1107197	1	True				
ANR	1107237	CallExpression	foo . rewind ( )		1107197	0					
ANR	1107238	Callee	foo . rewind		1107197	0					
ANR	1107239	MemberAccess	foo . rewind		1107197	0					
ANR	1107240	Identifier	foo		1107197	0					
ANR	1107241	Identifier	rewind		1107197	1					
ANR	1107242	ArgumentList			1107197	1					
ANR	1107243	IfStatement	if ( pool_list )		1107197	6					
ANR	1107244	Condition	pool_list	57:5:1422:1430	1107197	0	True				
ANR	1107245	Identifier	pool_list		1107197	0					
ANR	1107246	CompoundStatement		11:17:186:186	1107197	1					
ANR	1107247	ExpressionStatement	pools . initializeFromString ( pool_list )	58:2:1438:1477	1107197	0	True				
ANR	1107248	CallExpression	pools . initializeFromString ( pool_list )		1107197	0					
ANR	1107249	Callee	pools . initializeFromString		1107197	0					
ANR	1107250	MemberAccess	pools . initializeFromString		1107197	0					
ANR	1107251	Identifier	pools		1107197	0					
ANR	1107252	Identifier	initializeFromString		1107197	1					
ANR	1107253	ArgumentList	pool_list		1107197	1					
ANR	1107254	Argument	pool_list		1107197	0					
ANR	1107255	Identifier	pool_list		1107197	0					
ANR	1107256	ExpressionStatement	pools . rewind ( )	59:2:1481:1495	1107197	1	True				
ANR	1107257	CallExpression	pools . rewind ( )		1107197	0					
ANR	1107258	Callee	pools . rewind		1107197	0					
ANR	1107259	MemberAccess	pools . rewind		1107197	0					
ANR	1107260	Identifier	pools		1107197	0					
ANR	1107261	Identifier	rewind		1107197	1					
ANR	1107262	ArgumentList			1107197	1					
ANR	1107263	WhileStatement	while ( true )		1107197	7					
ANR	1107264	Condition	true	61:8:1508:1511	1107197	0	True				
ANR	1107265	Identifier	true		1107197	0					
ANR	1107266	CompoundStatement		15:15:267:267	1107197	1					
ANR	1107267	ExpressionStatement	host = foo . next ( )	62:2:1519:1536	1107197	0	True				
ANR	1107268	AssignmentExpression	host = foo . next ( )		1107197	0		=			
ANR	1107269	Identifier	host		1107197	0					
ANR	1107270	CallExpression	foo . next ( )		1107197	1					
ANR	1107271	Callee	foo . next		1107197	0					
ANR	1107272	MemberAccess	foo . next		1107197	0					
ANR	1107273	Identifier	foo		1107197	0					
ANR	1107274	Identifier	next		1107197	1					
ANR	1107275	ArgumentList			1107197	1					
ANR	1107276	ExpressionStatement	pool = pools . next ( )	63:2:1540:1559	1107197	1	True				
ANR	1107277	AssignmentExpression	pool = pools . next ( )		1107197	0		=			
ANR	1107278	Identifier	pool		1107197	0					
ANR	1107279	CallExpression	pools . next ( )		1107197	1					
ANR	1107280	Callee	pools . next		1107197	0					
ANR	1107281	MemberAccess	pools . next		1107197	0					
ANR	1107282	Identifier	pools		1107197	0					
ANR	1107283	Identifier	next		1107197	1					
ANR	1107284	ArgumentList			1107197	1					
ANR	1107285	IfStatement	if ( ! host && ! pool )		1107197	2					
ANR	1107286	Condition	! host && ! pool	64:6:1567:1580	1107197	0	True				
ANR	1107287	AndExpression	! host && ! pool		1107197	0		&&			
ANR	1107288	UnaryOperationExpression	! host		1107197	0					
ANR	1107289	UnaryOperator	!		1107197	0					
ANR	1107290	Identifier	host		1107197	1					
ANR	1107291	UnaryOperationExpression	! pool		1107197	1					
ANR	1107292	UnaryOperator	!		1107197	0					
ANR	1107293	Identifier	pool		1107197	1					
ANR	1107294	CompoundStatement		18:23:336:336	1107197	1					
ANR	1107295	BreakStatement	break ;	65:3:1589:1594	1107197	0	True				
ANR	1107296	ExpressionStatement	"tmp = buildDaemon ( type , host , pool )"	67:2:1602:1639	1107197	3	True				
ANR	1107297	AssignmentExpression	"tmp = buildDaemon ( type , host , pool )"		1107197	0		=			
ANR	1107298	Identifier	tmp		1107197	0					
ANR	1107299	CallExpression	"buildDaemon ( type , host , pool )"		1107197	1					
ANR	1107300	Callee	buildDaemon		1107197	0					
ANR	1107301	Identifier	buildDaemon		1107197	0					
ANR	1107302	ArgumentList	type		1107197	1					
ANR	1107303	Argument	type		1107197	0					
ANR	1107304	Identifier	type		1107197	0					
ANR	1107305	Argument	host		1107197	1					
ANR	1107306	Identifier	host		1107197	0					
ANR	1107307	Argument	pool		1107197	2					
ANR	1107308	Identifier	pool		1107197	0					
ANR	1107309	ExpressionStatement	append ( tmp )	68:2:1643:1656	1107197	4	True				
ANR	1107310	CallExpression	append ( tmp )		1107197	0					
ANR	1107311	Callee	append		1107197	0					
ANR	1107312	Identifier	append		1107197	0					
ANR	1107313	ArgumentList	tmp		1107197	1					
ANR	1107314	Argument	tmp		1107197	0					
ANR	1107315	Identifier	tmp		1107197	0					
ANR	1107316	ReturnType	void		1107197	1					
ANR	1107317	Identifier	DaemonList :: init		1107197	2					
ANR	1107318	ParameterList	"daemon_t type , const char * host_list , const char * pool_list"		1107197	3					
ANR	1107319	Parameter	daemon_t type	46:18:1185:1197	1107197	0	True				
ANR	1107320	ParameterType	daemon_t		1107197	0					
ANR	1107321	Identifier	type		1107197	1					
ANR	1107322	Parameter	const char * host_list	46:33:1200:1220	1107197	1	True				
ANR	1107323	ParameterType	const char *		1107197	0					
ANR	1107324	Identifier	host_list		1107197	1					
ANR	1107325	Parameter	const char * pool_list	46:56:1223:1243	1107197	2	True				
ANR	1107326	ParameterType	const char *		1107197	0					
ANR	1107327	Identifier	pool_list		1107197	1					
ANR	1107328	CFGEntryNode	ENTRY		1107197		True				
ANR	1107329	CFGExitNode	EXIT		1107197		True				
ANR	1107330	Symbol	NULL		1107197						
ANR	1107331	Symbol	foo		1107197						
ANR	1107332	Symbol	pool		1107197						
ANR	1107333	Symbol	pools		1107197						
ANR	1107334	Symbol	type		1107197						
ANR	1107335	Symbol	host_list		1107197						
ANR	1107336	Symbol	foo . next		1107197						
ANR	1107337	Symbol	pools . next		1107197						
ANR	1107338	Symbol	tmp		1107197						
ANR	1107339	Symbol	host		1107197						
ANR	1107340	Symbol	true		1107197						
ANR	1107341	Symbol	pool_list		1107197						
ANR	1107342	Symbol	buildDaemon		1107197						
ANR	1107343	Function	DaemonList :: buildDaemon	73:0:1665:1921							
ANR	1107344	FunctionDef	"DaemonList :: buildDaemon (daemon_t type , const char * host , char const * pool)"		1107343	0					
ANR	1107345	CompoundStatement		75:0:1750:1921	1107343	0					
ANR	1107346	IdentifierDeclStatement	Daemon * tmp ;	76:1:1753:1764	1107343	0	True				
ANR	1107347	IdentifierDecl	* tmp		1107343	0					
ANR	1107348	IdentifierDeclType	Daemon *		1107343	0					
ANR	1107349	Identifier	tmp		1107343	1					
ANR	1107350	SwitchStatement	switch ( type )		1107343	1					
ANR	1107351	Condition	type	77:9:1775:1778	1107343	0	True				
ANR	1107352	Identifier	type		1107343	0					
ANR	1107353	CompoundStatement		3:16:31:31	1107343	1					
ANR	1107354	Label	case DT_COLLECTOR :	78:1:1785:1802	1107343	0	True				
ANR	1107355	Identifier	DT_COLLECTOR		1107343	0					
ANR	1107356	ExpressionStatement	tmp = new DCCollector ( host )	79:2:1806:1835	1107343	1	True				
ANR	1107357	AssignmentExpression	tmp = new DCCollector ( host )		1107343	0		=			
ANR	1107358	Identifier	tmp		1107343	0					
ANR	1107359	Identifier	host		1107343	1					
ANR	1107360	BreakStatement	break ;	80:2:1839:1844	1107343	2	True				
ANR	1107361	Label	default :	81:1:1847:1854	1107343	3	True				
ANR	1107362	Identifier	default		1107343	0					
ANR	1107363	ExpressionStatement	"tmp = new Daemon ( type , host , pool )"	82:2:1858:1894	1107343	4	True				
ANR	1107364	AssignmentExpression	"tmp = new Daemon ( type , host , pool )"		1107343	0		=			
ANR	1107365	Identifier	tmp		1107343	0					
ANR	1107366	Expression	"type , host , pool"		1107343	1					
ANR	1107367	Identifier	type		1107343	0					
ANR	1107368	Expression	"host , pool"		1107343	1					
ANR	1107369	Identifier	host		1107343	0					
ANR	1107370	Identifier	pool		1107343	1					
ANR	1107371	BreakStatement	break ;	83:2:1898:1903	1107343	5	True				
ANR	1107372	ReturnStatement	return tmp ;	85:1:1909:1919	1107343	2	True				
ANR	1107373	Identifier	tmp		1107343	0					
ANR	1107374	ReturnType	Daemon *		1107343	1					
ANR	1107375	Identifier	DaemonList :: buildDaemon		1107343	2					
ANR	1107376	ParameterList	"daemon_t type , const char * host , char const * pool"		1107343	3					
ANR	1107377	Parameter	daemon_t type	74:25:1698:1710	1107343	0	True				
ANR	1107378	ParameterType	daemon_t		1107343	0					
ANR	1107379	Identifier	type		1107343	1					
ANR	1107380	Parameter	const char * host	74:40:1713:1728	1107343	1	True				
ANR	1107381	ParameterType	const char *		1107343	0					
ANR	1107382	Identifier	host		1107343	1					
ANR	1107383	Parameter	char const * pool	74:58:1731:1746	1107343	2	True				
ANR	1107384	ParameterType	char const *		1107343	0					
ANR	1107385	Identifier	pool		1107343	1					
ANR	1107386	CFGEntryNode	ENTRY		1107343		True				
ANR	1107387	CFGExitNode	EXIT		1107343		True				
ANR	1107388	Symbol	tmp		1107343						
ANR	1107389	Symbol	host		1107343						
ANR	1107390	Symbol	pool		1107343						
ANR	1107391	Symbol	type		1107343						
ANR	1107392	Function	DaemonList :: append	94:0:2072:2133							
ANR	1107393	FunctionDef	DaemonList :: append (Daemon * d)		1107392	0					
ANR	1107394	CompoundStatement		95:31:2108:2133	1107392	0					
ANR	1107395	ReturnStatement	return list . Append ( d ) ;	95:1:2110:2131	1107392	0	True				
ANR	1107396	CallExpression	list . Append ( d )		1107392	0					
ANR	1107397	Callee	list . Append		1107392	0					
ANR	1107398	MemberAccess	list . Append		1107392	0					
ANR	1107399	Identifier	list		1107392	0					
ANR	1107400	Identifier	Append		1107392	1					
ANR	1107401	ArgumentList	d		1107392	1					
ANR	1107402	Argument	d		1107392	0					
ANR	1107403	Identifier	d		1107392	0					
ANR	1107404	ReturnType	bool		1107392	1					
ANR	1107405	Identifier	DaemonList :: append		1107392	2					
ANR	1107406	ParameterList	Daemon * d		1107392	3					
ANR	1107407	Parameter	Daemon * d	95:20:2097:2105	1107392	0	True				
ANR	1107408	ParameterType	Daemon *		1107392	0					
ANR	1107409	Identifier	d		1107392	1					
ANR	1107410	CFGEntryNode	ENTRY		1107392		True				
ANR	1107411	CFGExitNode	EXIT		1107392		True				
ANR	1107412	Symbol	list . Append		1107392						
ANR	1107413	Symbol	d		1107392						
ANR	1107414	Symbol	list		1107392						
ANR	1107415	Function	DaemonList :: Append	97:0:2136:2197							
ANR	1107416	FunctionDef	DaemonList :: Append (Daemon * d)		1107415	0					
ANR	1107417	CompoundStatement		98:31:2172:2197	1107415	0					
ANR	1107418	ReturnStatement	return list . Append ( d ) ;	98:1:2174:2195	1107415	0	True				
ANR	1107419	CallExpression	list . Append ( d )		1107415	0					
ANR	1107420	Callee	list . Append		1107415	0					
ANR	1107421	MemberAccess	list . Append		1107415	0					
ANR	1107422	Identifier	list		1107415	0					
ANR	1107423	Identifier	Append		1107415	1					
ANR	1107424	ArgumentList	d		1107415	1					
ANR	1107425	Argument	d		1107415	0					
ANR	1107426	Identifier	d		1107415	0					
ANR	1107427	ReturnType	bool		1107415	1					
ANR	1107428	Identifier	DaemonList :: Append		1107415	2					
ANR	1107429	ParameterList	Daemon * d		1107415	3					
ANR	1107430	Parameter	Daemon * d	98:20:2161:2169	1107415	0	True				
ANR	1107431	ParameterType	Daemon *		1107415	0					
ANR	1107432	Identifier	d		1107415	1					
ANR	1107433	CFGEntryNode	ENTRY		1107415		True				
ANR	1107434	CFGExitNode	EXIT		1107415		True				
ANR	1107435	Symbol	list . Append		1107415						
ANR	1107436	Symbol	d		1107415						
ANR	1107437	Symbol	list		1107415						
ANR	1107438	Function	DaemonList :: isEmpty	100:0:2200:2258							
ANR	1107439	FunctionDef	DaemonList :: isEmpty ()		1107438	0					
ANR	1107440	CompoundStatement		101:28:2233:2258	1107438	0					
ANR	1107441	ReturnStatement	return list . IsEmpty ( ) ;	101:1:2235:2256	1107438	0	True				
ANR	1107442	CallExpression	list . IsEmpty ( )		1107438	0					
ANR	1107443	Callee	list . IsEmpty		1107438	0					
ANR	1107444	MemberAccess	list . IsEmpty		1107438	0					
ANR	1107445	Identifier	list		1107438	0					
ANR	1107446	Identifier	IsEmpty		1107438	1					
ANR	1107447	ArgumentList			1107438	1					
ANR	1107448	ReturnType	bool		1107438	1					
ANR	1107449	Identifier	DaemonList :: isEmpty		1107438	2					
ANR	1107450	ParameterList			1107438	3					
ANR	1107451	CFGEntryNode	ENTRY		1107438		True				
ANR	1107452	CFGExitNode	EXIT		1107438		True				
ANR	1107453	Symbol	list		1107438						
ANR	1107454	Symbol	list . IsEmpty		1107438						
ANR	1107455	Function	DaemonList :: IsEmpty	103:0:2262:2320							
ANR	1107456	FunctionDef	DaemonList :: IsEmpty ()		1107455	0					
ANR	1107457	CompoundStatement		104:28:2295:2320	1107455	0					
ANR	1107458	ReturnStatement	return list . IsEmpty ( ) ;	104:1:2297:2318	1107455	0	True				
ANR	1107459	CallExpression	list . IsEmpty ( )		1107455	0					
ANR	1107460	Callee	list . IsEmpty		1107455	0					
ANR	1107461	MemberAccess	list . IsEmpty		1107455	0					
ANR	1107462	Identifier	list		1107455	0					
ANR	1107463	Identifier	IsEmpty		1107455	1					
ANR	1107464	ArgumentList			1107455	1					
ANR	1107465	ReturnType	bool		1107455	1					
ANR	1107466	Identifier	DaemonList :: IsEmpty		1107455	2					
ANR	1107467	ParameterList			1107455	3					
ANR	1107468	CFGEntryNode	ENTRY		1107455		True				
ANR	1107469	CFGExitNode	EXIT		1107455		True				
ANR	1107470	Symbol	list		1107455						
ANR	1107471	Symbol	list . IsEmpty		1107455						
ANR	1107472	Function	DaemonList :: number	106:0:2324:2379							
ANR	1107473	FunctionDef	DaemonList :: number ()		1107472	0					
ANR	1107474	CompoundStatement		107:27:2355:2379	1107472	0					
ANR	1107475	ReturnStatement	return list . Number ( ) ;	107:1:2357:2377	1107472	0	True				
ANR	1107476	CallExpression	list . Number ( )		1107472	0					
ANR	1107477	Callee	list . Number		1107472	0					
ANR	1107478	MemberAccess	list . Number		1107472	0					
ANR	1107479	Identifier	list		1107472	0					
ANR	1107480	Identifier	Number		1107472	1					
ANR	1107481	ArgumentList			1107472	1					
ANR	1107482	ReturnType	int		1107472	1					
ANR	1107483	Identifier	DaemonList :: number		1107472	2					
ANR	1107484	ParameterList			1107472	3					
ANR	1107485	CFGEntryNode	ENTRY		1107472		True				
ANR	1107486	CFGExitNode	EXIT		1107472		True				
ANR	1107487	Symbol	list		1107472						
ANR	1107488	Symbol	list . Number		1107472						
ANR	1107489	Function	DaemonList :: Number	109:0:2383:2438							
ANR	1107490	FunctionDef	DaemonList :: Number ()		1107489	0					
ANR	1107491	CompoundStatement		110:27:2414:2438	1107489	0					
ANR	1107492	ReturnStatement	return list . Number ( ) ;	110:1:2416:2436	1107489	0	True				
ANR	1107493	CallExpression	list . Number ( )		1107489	0					
ANR	1107494	Callee	list . Number		1107489	0					
ANR	1107495	MemberAccess	list . Number		1107489	0					
ANR	1107496	Identifier	list		1107489	0					
ANR	1107497	Identifier	Number		1107489	1					
ANR	1107498	ArgumentList			1107489	1					
ANR	1107499	ReturnType	int		1107489	1					
ANR	1107500	Identifier	DaemonList :: Number		1107489	2					
ANR	1107501	ParameterList			1107489	3					
ANR	1107502	CFGEntryNode	ENTRY		1107489		True				
ANR	1107503	CFGExitNode	EXIT		1107489		True				
ANR	1107504	Symbol	list		1107489						
ANR	1107505	Symbol	list . Number		1107489						
ANR	1107506	Function	DaemonList :: rewind	112:0:2442:2491							
ANR	1107507	FunctionDef	DaemonList :: rewind ()		1107506	0					
ANR	1107508	CompoundStatement		113:27:2474:2491	1107506	0					
ANR	1107509	ExpressionStatement	list . Rewind ( )	113:1:2476:2489	1107506	0	True				
ANR	1107510	CallExpression	list . Rewind ( )		1107506	0					
ANR	1107511	Callee	list . Rewind		1107506	0					
ANR	1107512	MemberAccess	list . Rewind		1107506	0					
ANR	1107513	Identifier	list		1107506	0					
ANR	1107514	Identifier	Rewind		1107506	1					
ANR	1107515	ArgumentList			1107506	1					
ANR	1107516	ReturnType	void		1107506	1					
ANR	1107517	Identifier	DaemonList :: rewind		1107506	2					
ANR	1107518	ParameterList			1107506	3					
ANR	1107519	CFGEntryNode	ENTRY		1107506		True				
ANR	1107520	CFGExitNode	EXIT		1107506		True				
ANR	1107521	Symbol	list		1107506						
ANR	1107522	Function	DaemonList :: Rewind	115:0:2495:2544							
ANR	1107523	FunctionDef	DaemonList :: Rewind ()		1107522	0					
ANR	1107524	CompoundStatement		116:27:2527:2544	1107522	0					
ANR	1107525	ExpressionStatement	list . Rewind ( )	116:1:2529:2542	1107522	0	True				
ANR	1107526	CallExpression	list . Rewind ( )		1107522	0					
ANR	1107527	Callee	list . Rewind		1107522	0					
ANR	1107528	MemberAccess	list . Rewind		1107522	0					
ANR	1107529	Identifier	list		1107522	0					
ANR	1107530	Identifier	Rewind		1107522	1					
ANR	1107531	ArgumentList			1107522	1					
ANR	1107532	ReturnType	void		1107522	1					
ANR	1107533	Identifier	DaemonList :: Rewind		1107522	2					
ANR	1107534	ParameterList			1107522	3					
ANR	1107535	CFGEntryNode	ENTRY		1107522		True				
ANR	1107536	CFGExitNode	EXIT		1107522		True				
ANR	1107537	Symbol	list		1107522						
ANR	1107538	Function	DaemonList :: current	118:0:2548:2614							
ANR	1107539	FunctionDef	DaemonList :: current (Daemon * & d)		1107538	0					
ANR	1107540	CompoundStatement		119:35:2588:2614	1107538	0					
ANR	1107541	ReturnStatement	return list . Current ( d ) ;	119:1:2590:2612	1107538	0	True				
ANR	1107542	CallExpression	list . Current ( d )		1107538	0					
ANR	1107543	Callee	list . Current		1107538	0					
ANR	1107544	MemberAccess	list . Current		1107538	0					
ANR	1107545	Identifier	list		1107538	0					
ANR	1107546	Identifier	Current		1107538	1					
ANR	1107547	ArgumentList	d		1107538	1					
ANR	1107548	Argument	d		1107538	0					
ANR	1107549	Identifier	d		1107538	0					
ANR	1107550	ReturnType	bool		1107538	1					
ANR	1107551	Identifier	DaemonList :: current		1107538	2					
ANR	1107552	ParameterList	Daemon * & d		1107538	3					
ANR	1107553	Parameter	Daemon * & d	119:21:2574:2584	1107538	0	True				
ANR	1107554	ParameterType	Daemon * &		1107538	0					
ANR	1107555	Identifier	d		1107538	1					
ANR	1107556	CFGEntryNode	ENTRY		1107538		True				
ANR	1107557	CFGExitNode	EXIT		1107538		True				
ANR	1107558	Symbol	d		1107538						
ANR	1107559	Symbol	list . Current		1107538						
ANR	1107560	Symbol	list		1107538						
ANR	1107561	Function	DaemonList :: Current	121:0:2618:2684							
ANR	1107562	FunctionDef	DaemonList :: Current (Daemon * & d)		1107561	0					
ANR	1107563	CompoundStatement		122:35:2658:2684	1107561	0					
ANR	1107564	ReturnStatement	return list . Current ( d ) ;	122:1:2660:2682	1107561	0	True				
ANR	1107565	CallExpression	list . Current ( d )		1107561	0					
ANR	1107566	Callee	list . Current		1107561	0					
ANR	1107567	MemberAccess	list . Current		1107561	0					
ANR	1107568	Identifier	list		1107561	0					
ANR	1107569	Identifier	Current		1107561	1					
ANR	1107570	ArgumentList	d		1107561	1					
ANR	1107571	Argument	d		1107561	0					
ANR	1107572	Identifier	d		1107561	0					
ANR	1107573	ReturnType	bool		1107561	1					
ANR	1107574	Identifier	DaemonList :: Current		1107561	2					
ANR	1107575	ParameterList	Daemon * & d		1107561	3					
ANR	1107576	Parameter	Daemon * & d	122:21:2644:2654	1107561	0	True				
ANR	1107577	ParameterType	Daemon * &		1107561	0					
ANR	1107578	Identifier	d		1107561	1					
ANR	1107579	CFGEntryNode	ENTRY		1107561		True				
ANR	1107580	CFGExitNode	EXIT		1107561		True				
ANR	1107581	Symbol	d		1107561						
ANR	1107582	Symbol	list . Current		1107561						
ANR	1107583	Symbol	list		1107561						
ANR	1107584	Function	DaemonList :: next	124:0:2688:2748							
ANR	1107585	FunctionDef	DaemonList :: next (Daemon * & d)		1107584	0					
ANR	1107586	CompoundStatement		125:32:2725:2748	1107584	0					
ANR	1107587	ReturnStatement	return list . Next ( d ) ;	125:1:2727:2746	1107584	0	True				
ANR	1107588	CallExpression	list . Next ( d )		1107584	0					
ANR	1107589	Callee	list . Next		1107584	0					
ANR	1107590	MemberAccess	list . Next		1107584	0					
ANR	1107591	Identifier	list		1107584	0					
ANR	1107592	Identifier	Next		1107584	1					
ANR	1107593	ArgumentList	d		1107584	1					
ANR	1107594	Argument	d		1107584	0					
ANR	1107595	Identifier	d		1107584	0					
ANR	1107596	ReturnType	bool		1107584	1					
ANR	1107597	Identifier	DaemonList :: next		1107584	2					
ANR	1107598	ParameterList	Daemon * & d		1107584	3					
ANR	1107599	Parameter	Daemon * & d	125:18:2711:2721	1107584	0	True				
ANR	1107600	ParameterType	Daemon * &		1107584	0					
ANR	1107601	Identifier	d		1107584	1					
ANR	1107602	CFGEntryNode	ENTRY		1107584		True				
ANR	1107603	CFGExitNode	EXIT		1107584		True				
ANR	1107604	Symbol	d		1107584						
ANR	1107605	Symbol	list . Next		1107584						
ANR	1107606	Symbol	list		1107584						
ANR	1107607	Function	DaemonList :: Next	127:0:2752:2812							
ANR	1107608	FunctionDef	DaemonList :: Next (Daemon * & d)		1107607	0					
ANR	1107609	CompoundStatement		128:32:2789:2812	1107607	0					
ANR	1107610	ReturnStatement	return list . Next ( d ) ;	128:1:2791:2810	1107607	0	True				
ANR	1107611	CallExpression	list . Next ( d )		1107607	0					
ANR	1107612	Callee	list . Next		1107607	0					
ANR	1107613	MemberAccess	list . Next		1107607	0					
ANR	1107614	Identifier	list		1107607	0					
ANR	1107615	Identifier	Next		1107607	1					
ANR	1107616	ArgumentList	d		1107607	1					
ANR	1107617	Argument	d		1107607	0					
ANR	1107618	Identifier	d		1107607	0					
ANR	1107619	ReturnType	bool		1107607	1					
ANR	1107620	Identifier	DaemonList :: Next		1107607	2					
ANR	1107621	ParameterList	Daemon * & d		1107607	3					
ANR	1107622	Parameter	Daemon * & d	128:18:2775:2785	1107607	0	True				
ANR	1107623	ParameterType	Daemon * &		1107607	0					
ANR	1107624	Identifier	d		1107607	1					
ANR	1107625	CFGEntryNode	ENTRY		1107607		True				
ANR	1107626	CFGExitNode	EXIT		1107607		True				
ANR	1107627	Symbol	d		1107607						
ANR	1107628	Symbol	list . Next		1107607						
ANR	1107629	Symbol	list		1107607						
ANR	1107630	Function	DaemonList :: atEnd	130:0:2816:2864							
ANR	1107631	FunctionDef	DaemonList :: atEnd ()		1107630	0					
ANR	1107632	CompoundStatement		131:20:2841:2864	1107630	0					
ANR	1107633	ReturnStatement	return list . AtEnd ( ) ;	131:1:2843:2862	1107630	0	True				
ANR	1107634	CallExpression	list . AtEnd ( )		1107630	0					
ANR	1107635	Callee	list . AtEnd		1107630	0					
ANR	1107636	MemberAccess	list . AtEnd		1107630	0					
ANR	1107637	Identifier	list		1107630	0					
ANR	1107638	Identifier	AtEnd		1107630	1					
ANR	1107639	ArgumentList			1107630	1					
ANR	1107640	ReturnType	bool		1107630	1					
ANR	1107641	Identifier	DaemonList :: atEnd		1107630	2					
ANR	1107642	ParameterList			1107630	3					
ANR	1107643	CFGEntryNode	ENTRY		1107630		True				
ANR	1107644	CFGExitNode	EXIT		1107630		True				
ANR	1107645	Symbol	list		1107630						
ANR	1107646	Symbol	list . AtEnd		1107630						
ANR	1107647	Function	DaemonList :: AtEnd	133:0:2868:2916							
ANR	1107648	FunctionDef	DaemonList :: AtEnd ()		1107647	0					
ANR	1107649	CompoundStatement		134:20:2893:2916	1107647	0					
ANR	1107650	ReturnStatement	return list . AtEnd ( ) ;	134:1:2895:2914	1107647	0	True				
ANR	1107651	CallExpression	list . AtEnd ( )		1107647	0					
ANR	1107652	Callee	list . AtEnd		1107647	0					
ANR	1107653	MemberAccess	list . AtEnd		1107647	0					
ANR	1107654	Identifier	list		1107647	0					
ANR	1107655	Identifier	AtEnd		1107647	1					
ANR	1107656	ArgumentList			1107647	1					
ANR	1107657	ReturnType	bool		1107647	1					
ANR	1107658	Identifier	DaemonList :: AtEnd		1107647	2					
ANR	1107659	ParameterList			1107647	3					
ANR	1107660	CFGEntryNode	ENTRY		1107647		True				
ANR	1107661	CFGExitNode	EXIT		1107647		True				
ANR	1107662	Symbol	list		1107647						
ANR	1107663	Symbol	list . AtEnd		1107647						
ANR	1107664	Function	DaemonList :: deleteCurrent	136:0:2920:2978							
ANR	1107665	FunctionDef	DaemonList :: deleteCurrent ()		1107664	0					
ANR	1107666	CompoundStatement		137:28:2953:2978	1107664	0					
ANR	1107667	ExpressionStatement	this -> DeleteCurrent ( )	137:1:2955:2976	1107664	0	True				
ANR	1107668	CallExpression	this -> DeleteCurrent ( )		1107664	0					
ANR	1107669	Callee	this -> DeleteCurrent		1107664	0					
ANR	1107670	PtrMemberAccess	this -> DeleteCurrent		1107664	0					
ANR	1107671	Identifier	this		1107664	0					
ANR	1107672	Identifier	DeleteCurrent		1107664	1					
ANR	1107673	ArgumentList			1107664	1					
ANR	1107674	ReturnType	void		1107664	1					
ANR	1107675	Identifier	DaemonList :: deleteCurrent		1107664	2					
ANR	1107676	ParameterList			1107664	3					
ANR	1107677	CFGEntryNode	ENTRY		1107664		True				
ANR	1107678	CFGExitNode	EXIT		1107664		True				
ANR	1107679	Symbol	this		1107664						
ANR	1107680	Function	DaemonList :: DeleteCurrent	148:0:3446:3576							
ANR	1107681	FunctionDef	DaemonList :: DeleteCurrent ()		1107680	0					
ANR	1107682	CompoundStatement		149:28:3479:3576	1107680	0					
ANR	1107683	IdentifierDeclStatement	Daemon * cur = NULL ;	150:1:3482:3500	1107680	0	True				
ANR	1107684	IdentifierDecl	* cur = NULL		1107680	0					
ANR	1107685	IdentifierDeclType	Daemon *		1107680	0					
ANR	1107686	Identifier	cur		1107680	1					
ANR	1107687	AssignmentExpression	* cur = NULL		1107680	2		=			
ANR	1107688	Identifier	NULL		1107680	0					
ANR	1107689	Identifier	NULL		1107680	1					
ANR	1107690	IfStatement	if ( list . Current ( cur ) && cur )		1107680	1					
ANR	1107691	Condition	list . Current ( cur ) && cur	151:5:3507:3530	1107680	0	True				
ANR	1107692	AndExpression	list . Current ( cur ) && cur		1107680	0		&&			
ANR	1107693	CallExpression	list . Current ( cur )		1107680	0					
ANR	1107694	Callee	list . Current		1107680	0					
ANR	1107695	MemberAccess	list . Current		1107680	0					
ANR	1107696	Identifier	list		1107680	0					
ANR	1107697	Identifier	Current		1107680	1					
ANR	1107698	ArgumentList	cur		1107680	1					
ANR	1107699	Argument	cur		1107680	0					
ANR	1107700	Identifier	cur		1107680	0					
ANR	1107701	Identifier	cur		1107680	1					
ANR	1107702	CompoundStatement		3:32:54:54	1107680	1					
ANR	1107703	Statement	delete	152:2:3538:3543	1107680	0	True				
ANR	1107704	ExpressionStatement	cur	152:9:3545:3548	1107680	1	True				
ANR	1107705	Identifier	cur		1107680	0					
ANR	1107706	ExpressionStatement	list . DeleteCurrent ( )	154:1:3554:3574	1107680	2	True				
ANR	1107707	CallExpression	list . DeleteCurrent ( )		1107680	0					
ANR	1107708	Callee	list . DeleteCurrent		1107680	0					
ANR	1107709	MemberAccess	list . DeleteCurrent		1107680	0					
ANR	1107710	Identifier	list		1107680	0					
ANR	1107711	Identifier	DeleteCurrent		1107680	1					
ANR	1107712	ArgumentList			1107680	1					
ANR	1107713	ReturnType	void		1107680	1					
ANR	1107714	Identifier	DaemonList :: DeleteCurrent		1107680	2					
ANR	1107715	ParameterList			1107680	3					
ANR	1107716	CFGEntryNode	ENTRY		1107680		True				
ANR	1107717	CFGExitNode	EXIT		1107680		True				
ANR	1107718	Symbol	cur		1107680						
ANR	1107719	Symbol	NULL		1107680						
ANR	1107720	Symbol	list . Current		1107680						
ANR	1107721	Symbol	list		1107680						
ANR	1107722	Function	CollectorList :: CollectorList	158:0:3580:3613							
ANR	1107723	FunctionDef	CollectorList :: CollectorList ()		1107722	0					
ANR	1107724	CompoundStatement		158:31:3611:3613	1107722	0					
ANR	1107725	Identifier	CollectorList :: CollectorList		1107722	1					
ANR	1107726	ParameterList			1107722	2					
ANR	1107727	CFGEntryNode	ENTRY		1107722		True				
ANR	1107728	CFGExitNode	EXIT		1107722		True				
ANR	1107729	Function	CollectorList :: ~CollectorList	161:0:3616:3650							
ANR	1107730	FunctionDef	CollectorList :: ~CollectorList ()		1107729	0					
ANR	1107731	CompoundStatement		161:32:3648:3650	1107729	0					
ANR	1107732	Identifier	CollectorList :: ~CollectorList		1107729	1					
ANR	1107733	ParameterList			1107729	2					
ANR	1107734	CFGEntryNode	ENTRY		1107729		True				
ANR	1107735	CFGExitNode	EXIT		1107729		True				
ANR	1107736	Function	CollectorList :: create	165:0:3654:4824							
ANR	1107737	FunctionDef	CollectorList :: create (const char * pool)		1107736	0					
ANR	1107738	CompoundStatement		167:0:3713:4824	1107736	0					
ANR	1107739	IdentifierDeclStatement	CollectorList * result = new CollectorList ( ) ;	168:1:3716:3760	1107736	0	True				
ANR	1107740	IdentifierDecl	* result = new CollectorList ( )		1107736	0					
ANR	1107741	IdentifierDeclType	CollectorList *		1107736	0					
ANR	1107742	Identifier	result		1107736	1					
ANR	1107743	AssignmentExpression	* result = new CollectorList ( )		1107736	2		=			
ANR	1107744	Identifier	result		1107736	0					
ANR	1107745	UnaryExpression	new CollectorList ( )		1107736	1					
ANR	1107746	IdentifierDeclStatement	DCCollector * collector = NULL ;	169:1:3763:3793	1107736	1	True				
ANR	1107747	IdentifierDecl	* collector = NULL		1107736	0					
ANR	1107748	IdentifierDeclType	DCCollector *		1107736	0					
ANR	1107749	Identifier	collector		1107736	1					
ANR	1107750	AssignmentExpression	* collector = NULL		1107736	2		=			
ANR	1107751	Identifier	NULL		1107736	0					
ANR	1107752	Identifier	NULL		1107736	1					
ANR	1107753	IfStatement	if ( pool )		1107736	2					
ANR	1107754	Condition	pool	171:5:3801:3804	1107736	0	True				
ANR	1107755	Identifier	pool		1107736	0					
ANR	1107756	CompoundStatement		5:11:93:93	1107736	1					
ANR	1107757	ExpressionStatement	result -> append ( new DCCollector ( pool ) )	174:2:3917:3956	1107736	0	True				
ANR	1107758	CallExpression	result -> append ( new DCCollector ( pool ) )		1107736	0					
ANR	1107759	Callee	result -> append		1107736	0					
ANR	1107760	PtrMemberAccess	result -> append		1107736	0					
ANR	1107761	Identifier	result		1107736	0					
ANR	1107762	Identifier	append		1107736	1					
ANR	1107763	ArgumentList	pool		1107736	1					
ANR	1107764	Argument	pool		1107736	0					
ANR	1107765	Identifier	pool		1107736	0					
ANR	1107766	ReturnStatement	return result ;	175:2:3960:3973	1107736	1	True				
ANR	1107767	Identifier	result		1107736	0					
ANR	1107768	IdentifierDeclStatement	StringList collector_name_list ;	179:1:4021:4051	1107736	3	True				
ANR	1107769	IdentifierDecl	collector_name_list		1107736	0					
ANR	1107770	IdentifierDeclType	StringList		1107736	0					
ANR	1107771	Identifier	collector_name_list		1107736	1					
ANR	1107772	IdentifierDeclStatement	char * collector_name_param = NULL ;	180:1:4054:4088	1107736	4	True				
ANR	1107773	IdentifierDecl	* collector_name_param = NULL		1107736	0					
ANR	1107774	IdentifierDeclType	char *		1107736	0					
ANR	1107775	Identifier	collector_name_param		1107736	1					
ANR	1107776	AssignmentExpression	* collector_name_param = NULL		1107736	2		=			
ANR	1107777	Identifier	NULL		1107736	0					
ANR	1107778	Identifier	NULL		1107736	1					
ANR	1107779	ExpressionStatement	"collector_name_param = getCmHostFromConfig ( ""COLLECTOR"" )"	181:1:4091:4148	1107736	5	True				
ANR	1107780	AssignmentExpression	"collector_name_param = getCmHostFromConfig ( ""COLLECTOR"" )"		1107736	0		=			
ANR	1107781	Identifier	collector_name_param		1107736	0					
ANR	1107782	CallExpression	"getCmHostFromConfig ( ""COLLECTOR"" )"		1107736	1					
ANR	1107783	Callee	getCmHostFromConfig		1107736	0					
ANR	1107784	Identifier	getCmHostFromConfig		1107736	0					
ANR	1107785	ArgumentList	"""COLLECTOR"""		1107736	1					
ANR	1107786	Argument	"""COLLECTOR"""		1107736	0					
ANR	1107787	PrimaryExpression	"""COLLECTOR"""		1107736	0					
ANR	1107788	IfStatement	if ( collector_name_param )		1107736	6					
ANR	1107789	Condition	collector_name_param	182:5:4155:4174	1107736	0	True				
ANR	1107790	Identifier	collector_name_param		1107736	0					
ANR	1107791	CompoundStatement		21:2:599:627	1107736	1					
ANR	1107792	ExpressionStatement	collector_name_list . initializeFromString ( collector_name_param )	183:2:4182:4244	1107736	0	True				
ANR	1107793	CallExpression	collector_name_list . initializeFromString ( collector_name_param )		1107736	0					
ANR	1107794	Callee	collector_name_list . initializeFromString		1107736	0					
ANR	1107795	MemberAccess	collector_name_list . initializeFromString		1107736	0					
ANR	1107796	Identifier	collector_name_list		1107736	0					
ANR	1107797	Identifier	initializeFromString		1107736	1					
ANR	1107798	ArgumentList	collector_name_param		1107736	1					
ANR	1107799	Argument	collector_name_param		1107736	0					
ANR	1107800	Identifier	collector_name_param		1107736	0					
ANR	1107801	ExpressionStatement	collector_name_list . rewind ( )	186:2:4281:4309	1107736	1	True				
ANR	1107802	CallExpression	collector_name_list . rewind ( )		1107736	0					
ANR	1107803	Callee	collector_name_list . rewind		1107736	0					
ANR	1107804	MemberAccess	collector_name_list . rewind		1107736	0					
ANR	1107805	Identifier	collector_name_list		1107736	0					
ANR	1107806	Identifier	rewind		1107736	1					
ANR	1107807	ArgumentList			1107736	1					
ANR	1107808	IdentifierDeclStatement	char * collector_name = NULL ;	187:2:4313:4341	1107736	2	True				
ANR	1107809	IdentifierDecl	* collector_name = NULL		1107736	0					
ANR	1107810	IdentifierDeclType	char *		1107736	0					
ANR	1107811	Identifier	collector_name		1107736	1					
ANR	1107812	AssignmentExpression	* collector_name = NULL		1107736	2		=			
ANR	1107813	Identifier	NULL		1107736	0					
ANR	1107814	Identifier	NULL		1107736	1					
ANR	1107815	WhileStatement	while ( ( collector_name = collector_name_list . next ( ) ) != NULL )		1107736	3					
ANR	1107816	Condition	( collector_name = collector_name_list . next ( ) ) != NULL	188:9:4352:4404	1107736	0	True				
ANR	1107817	EqualityExpression	( collector_name = collector_name_list . next ( ) ) != NULL		1107736	0		!=			
ANR	1107818	AssignmentExpression	collector_name = collector_name_list . next ( )		1107736	0		=			
ANR	1107819	Identifier	collector_name		1107736	0					
ANR	1107820	CallExpression	collector_name_list . next ( )		1107736	1					
ANR	1107821	Callee	collector_name_list . next		1107736	0					
ANR	1107822	MemberAccess	collector_name_list . next		1107736	0					
ANR	1107823	Identifier	collector_name_list		1107736	0					
ANR	1107824	Identifier	next		1107736	1					
ANR	1107825	ArgumentList			1107736	1					
ANR	1107826	Identifier	NULL		1107736	1					
ANR	1107827	CompoundStatement		22:64:693:693	1107736	1					
ANR	1107828	ExpressionStatement	collector = new DCCollector ( collector_name )	189:3:4412:4456	1107736	0	True				
ANR	1107829	AssignmentExpression	collector = new DCCollector ( collector_name )		1107736	0		=			
ANR	1107830	Identifier	collector		1107736	0					
ANR	1107831	Identifier	collector_name		1107736	1					
ANR	1107832	ExpressionStatement	result -> append ( collector )	190:3:4461:4487	1107736	1	True				
ANR	1107833	CallExpression	result -> append ( collector )		1107736	0					
ANR	1107834	Callee	result -> append		1107736	0					
ANR	1107835	PtrMemberAccess	result -> append		1107736	0					
ANR	1107836	Identifier	result		1107736	0					
ANR	1107837	Identifier	append		1107736	1					
ANR	1107838	ArgumentList	collector		1107736	1					
ANR	1107839	Argument	collector		1107736	0					
ANR	1107840	Identifier	collector		1107736	0					
ANR	1107841	ElseStatement	else		1107736	0					
ANR	1107842	CompoundStatement		26:8:787:787	1107736	0					
ANR	1107843	ExpressionStatement	"dprintf ( D_ALWAYS , ""Warning: Collector information was not found in the configuration file. ClassAds will not be sent to the collector and this daemon will not join a larger Condor pool.\\n"" )"	194:2:4548:4738	1107736	0	True				
ANR	1107844	CallExpression	"dprintf ( D_ALWAYS , ""Warning: Collector information was not found in the configuration file. ClassAds will not be sent to the collector and this daemon will not join a larger Condor pool.\\n"" )"		1107736	0					
ANR	1107845	Callee	dprintf		1107736	0					
ANR	1107846	Identifier	dprintf		1107736	0					
ANR	1107847	ArgumentList	D_ALWAYS		1107736	1					
ANR	1107848	Argument	D_ALWAYS		1107736	0					
ANR	1107849	Identifier	D_ALWAYS		1107736	0					
ANR	1107850	Argument	"""Warning: Collector information was not found in the configuration file. ClassAds will not be sent to the collector and this daemon will not join a larger Condor pool.\\n"""		1107736	1					
ANR	1107851	PrimaryExpression	"""Warning: Collector information was not found in the configuration file. ClassAds will not be sent to the collector and this daemon will not join a larger Condor pool.\\n"""		1107736	0					
ANR	1107852	IfStatement	if ( collector_name_param )		1107736	7					
ANR	1107853	Condition	collector_name_param	196:5:4748:4767	1107736	0	True				
ANR	1107854	Identifier	collector_name_param		1107736	0					
ANR	1107855	CompoundStatement		30:28:1057:1057	1107736	1					
ANR	1107856	ExpressionStatement	free ( collector_name_param )	197:2:4775:4803	1107736	0	True				
ANR	1107857	CallExpression	free ( collector_name_param )		1107736	0					
ANR	1107858	Callee	free		1107736	0					
ANR	1107859	Identifier	free		1107736	0					
ANR	1107860	ArgumentList	collector_name_param		1107736	1					
ANR	1107861	Argument	collector_name_param		1107736	0					
ANR	1107862	Identifier	collector_name_param		1107736	0					
ANR	1107863	ReturnStatement	return result ;	199:1:4809:4822	1107736	8	True				
ANR	1107864	Identifier	result		1107736	0					
ANR	1107865	ReturnType	CollectorList *		1107736	1					
ANR	1107866	Identifier	CollectorList :: create		1107736	2					
ANR	1107867	ParameterList	const char * pool		1107736	3					
ANR	1107868	Parameter	const char * pool	166:23:3693:3709	1107736	0	True				
ANR	1107869	ParameterType	const char *		1107736	0					
ANR	1107870	Identifier	pool		1107736	1					
ANR	1107871	CFGEntryNode	ENTRY		1107736		True				
ANR	1107872	CFGExitNode	EXIT		1107736		True				
ANR	1107873	Symbol	result		1107736						
ANR	1107874	Symbol	NULL		1107736						
ANR	1107875	Symbol	collector_name_list		1107736						
ANR	1107876	Symbol	pool		1107736						
ANR	1107877	Symbol	collector_name		1107736						
ANR	1107878	Symbol	D_ALWAYS		1107736						
ANR	1107879	Symbol	collector_name_param		1107736						
ANR	1107880	Symbol	getCmHostFromConfig		1107736						
ANR	1107881	Symbol	collector		1107736						
ANR	1107882	Symbol	collector_name_list . next		1107736						
ANR	1107883	Function	CollectorList :: resortLocal	213:0:5111:6478							
ANR	1107884	FunctionDef	CollectorList :: resortLocal (const char * preferred_collector)		1107883	0					
ANR	1107885	CompoundStatement		215:0:5177:6478	1107883	0					
ANR	1107886	IdentifierDeclStatement	char * tmp_preferred_collector = NULL ;	220:1:5398:5435	1107883	0	True				
ANR	1107887	IdentifierDecl	* tmp_preferred_collector = NULL		1107883	0					
ANR	1107888	IdentifierDeclType	char *		1107883	0					
ANR	1107889	Identifier	tmp_preferred_collector		1107883	1					
ANR	1107890	AssignmentExpression	* tmp_preferred_collector = NULL		1107883	2		=			
ANR	1107891	Identifier	NULL		1107883	0					
ANR	1107892	Identifier	NULL		1107883	1					
ANR	1107893	IfStatement	if ( ! preferred_collector )		1107883	1					
ANR	1107894	Condition	! preferred_collector	222:6:5444:5463	1107883	0	True				
ANR	1107895	UnaryOperationExpression	! preferred_collector		1107883	0					
ANR	1107896	UnaryOperator	!		1107883	0					
ANR	1107897	Identifier	preferred_collector		1107883	1					
ANR	1107898	CompoundStatement		11:2:391:437	1107883	1					
ANR	1107899	IdentifierDeclStatement	MyString _hostname_str = get_local_fqdn ( ) ;	224:2:5524:5565	1107883	0	True				
ANR	1107900	IdentifierDecl	_hostname_str = get_local_fqdn ( )		1107883	0					
ANR	1107901	IdentifierDeclType	MyString		1107883	0					
ANR	1107902	Identifier	_hostname_str		1107883	1					
ANR	1107903	AssignmentExpression	_hostname_str = get_local_fqdn ( )		1107883	2		=			
ANR	1107904	Identifier	_hostname_str		1107883	0					
ANR	1107905	CallExpression	get_local_fqdn ( )		1107883	1					
ANR	1107906	Callee	get_local_fqdn		1107883	0					
ANR	1107907	Identifier	get_local_fqdn		1107883	0					
ANR	1107908	ArgumentList			1107883	1					
ANR	1107909	IdentifierDeclStatement	const char * _hostname = _hostname_str . Value ( ) ;	225:2:5569:5615	1107883	1	True				
ANR	1107910	IdentifierDecl	* _hostname = _hostname_str . Value ( )		1107883	0					
ANR	1107911	IdentifierDeclType	const char *		1107883	0					
ANR	1107912	Identifier	_hostname		1107883	1					
ANR	1107913	AssignmentExpression	* _hostname = _hostname_str . Value ( )		1107883	2		=			
ANR	1107914	Identifier	_hostname		1107883	0					
ANR	1107915	CallExpression	_hostname_str . Value ( )		1107883	1					
ANR	1107916	Callee	_hostname_str . Value		1107883	0					
ANR	1107917	MemberAccess	_hostname_str . Value		1107883	0					
ANR	1107918	Identifier	_hostname_str		1107883	0					
ANR	1107919	Identifier	Value		1107883	1					
ANR	1107920	ArgumentList			1107883	1					
ANR	1107921	IfStatement	if ( ! ( * _hostname ) )		1107883	2					
ANR	1107922	Condition	! ( * _hostname )	226:6:5623:5635	1107883	0	True				
ANR	1107923	UnaryOperationExpression	! ( * _hostname )		1107883	0					
ANR	1107924	UnaryOperator	!		1107883	0					
ANR	1107925	UnaryOperationExpression	* _hostname		1107883	1					
ANR	1107926	UnaryOperator	*		1107883	0					
ANR	1107927	Identifier	_hostname		1107883	1					
ANR	1107928	CompoundStatement		12:21:460:460	1107883	1					
ANR	1107929	ReturnStatement	return - 1 ;	228:3:5685:5694	1107883	0	True				
ANR	1107930	UnaryOperationExpression	- 1		1107883	0					
ANR	1107931	UnaryOperator	-		1107883	0					
ANR	1107932	PrimaryExpression	1		1107883	1					
ANR	1107933	ExpressionStatement	tmp_preferred_collector = strdup ( _hostname )	231:2:5703:5746	1107883	3	True				
ANR	1107934	AssignmentExpression	tmp_preferred_collector = strdup ( _hostname )		1107883	0		=			
ANR	1107935	Identifier	tmp_preferred_collector		1107883	0					
ANR	1107936	CallExpression	strdup ( _hostname )		1107883	1					
ANR	1107937	Callee	strdup		1107883	0					
ANR	1107938	Identifier	strdup		1107883	0					
ANR	1107939	ArgumentList	_hostname		1107883	1					
ANR	1107940	Argument	_hostname		1107883	0					
ANR	1107941	Identifier	_hostname		1107883	0					
ANR	1107942	ExpressionStatement	preferred_collector = preferred_collector	232:2:5750:5791	1107883	4	True				
ANR	1107943	AssignmentExpression	preferred_collector = preferred_collector		1107883	0		=			
ANR	1107944	Identifier	preferred_collector		1107883	0					
ANR	1107945	Identifier	preferred_collector		1107883	1					
ANR	1107946	IdentifierDeclStatement	Daemon * daemon ;	237:1:5882:5896	1107883	2	True				
ANR	1107947	IdentifierDecl	* daemon		1107883	0					
ANR	1107948	IdentifierDeclType	Daemon *		1107883	0					
ANR	1107949	Identifier	daemon		1107883	1					
ANR	1107950	IdentifierDeclStatement	SimpleList < Daemon * > prefer_list ;	238:1:5899:5930	1107883	3	True				
ANR	1107951	IdentifierDecl	prefer_list		1107883	0					
ANR	1107952	IdentifierDeclType	SimpleList < Daemon * >		1107883	0					
ANR	1107953	Identifier	prefer_list		1107883	1					
ANR	1107954	ExpressionStatement	this -> list . Rewind ( )	239:1:5933:5952	1107883	4	True				
ANR	1107955	CallExpression	this -> list . Rewind ( )		1107883	0					
ANR	1107956	Callee	this -> list . Rewind		1107883	0					
ANR	1107957	MemberAccess	this -> list . Rewind		1107883	0					
ANR	1107958	PtrMemberAccess	this -> list		1107883	0					
ANR	1107959	Identifier	this		1107883	0					
ANR	1107960	Identifier	list		1107883	1					
ANR	1107961	Identifier	Rewind		1107883	1					
ANR	1107962	ArgumentList			1107883	1					
ANR	1107963	WhileStatement	while ( this -> list . Next ( daemon ) )		1107883	5					
ANR	1107964	Condition	this -> list . Next ( daemon )	240:9:5963:5985	1107883	0	True				
ANR	1107965	CallExpression	this -> list . Next ( daemon )		1107883	0					
ANR	1107966	Callee	this -> list . Next		1107883	0					
ANR	1107967	MemberAccess	this -> list . Next		1107883	0					
ANR	1107968	PtrMemberAccess	this -> list		1107883	0					
ANR	1107969	Identifier	this		1107883	0					
ANR	1107970	Identifier	list		1107883	1					
ANR	1107971	Identifier	Next		1107883	1					
ANR	1107972	ArgumentList	daemon		1107883	1					
ANR	1107973	Argument	daemon		1107883	0					
ANR	1107974	Identifier	daemon		1107883	0					
ANR	1107975	CompoundStatement		26:35:811:811	1107883	1					
ANR	1107976	IfStatement	"if ( same_host ( preferred_collector , daemon -> fullHostname ( ) ) )"		1107883	0					
ANR	1107977	Condition	"same_host ( preferred_collector , daemon -> fullHostname ( ) )"	241:7:5998:6052	1107883	0	True				
ANR	1107978	CallExpression	"same_host ( preferred_collector , daemon -> fullHostname ( ) )"		1107883	0					
ANR	1107979	Callee	same_host		1107883	0					
ANR	1107980	Identifier	same_host		1107883	0					
ANR	1107981	ArgumentList	preferred_collector		1107883	1					
ANR	1107982	Argument	preferred_collector		1107883	0					
ANR	1107983	Identifier	preferred_collector		1107883	0					
ANR	1107984	Argument	daemon -> fullHostname ( )		1107883	1					
ANR	1107985	CallExpression	daemon -> fullHostname ( )		1107883	0					
ANR	1107986	Callee	daemon -> fullHostname		1107883	0					
ANR	1107987	PtrMemberAccess	daemon -> fullHostname		1107883	0					
ANR	1107988	Identifier	daemon		1107883	0					
ANR	1107989	Identifier	fullHostname		1107883	1					
ANR	1107990	ArgumentList			1107883	1					
ANR	1107991	CompoundStatement		27:65:878:878	1107883	1					
ANR	1107992	ExpressionStatement	this -> list . DeleteCurrent ( )	242:3:6061:6087	1107883	0	True				
ANR	1107993	CallExpression	this -> list . DeleteCurrent ( )		1107883	0					
ANR	1107994	Callee	this -> list . DeleteCurrent		1107883	0					
ANR	1107995	MemberAccess	this -> list . DeleteCurrent		1107883	0					
ANR	1107996	PtrMemberAccess	this -> list		1107883	0					
ANR	1107997	Identifier	this		1107883	0					
ANR	1107998	Identifier	list		1107883	1					
ANR	1107999	Identifier	DeleteCurrent		1107883	1					
ANR	1108000	ArgumentList			1107883	1					
ANR	1108001	ExpressionStatement	prefer_list . Prepend ( daemon )	243:3:6092:6121	1107883	1	True				
ANR	1108002	CallExpression	prefer_list . Prepend ( daemon )		1107883	0					
ANR	1108003	Callee	prefer_list . Prepend		1107883	0					
ANR	1108004	MemberAccess	prefer_list . Prepend		1107883	0					
ANR	1108005	Identifier	prefer_list		1107883	0					
ANR	1108006	Identifier	Prepend		1107883	1					
ANR	1108007	ArgumentList	daemon		1107883	1					
ANR	1108008	Argument	daemon		1107883	0					
ANR	1108009	Identifier	daemon		1107883	0					
ANR	1108010	ExpressionStatement	this -> list . Rewind ( )	249:1:6218:6237	1107883	6	True				
ANR	1108011	CallExpression	this -> list . Rewind ( )		1107883	0					
ANR	1108012	Callee	this -> list . Rewind		1107883	0					
ANR	1108013	MemberAccess	this -> list . Rewind		1107883	0					
ANR	1108014	PtrMemberAccess	this -> list		1107883	0					
ANR	1108015	Identifier	this		1107883	0					
ANR	1108016	Identifier	list		1107883	1					
ANR	1108017	Identifier	Rewind		1107883	1					
ANR	1108018	ArgumentList			1107883	1					
ANR	1108019	ExpressionStatement	prefer_list . Rewind ( )	250:1:6240:6260	1107883	7	True				
ANR	1108020	CallExpression	prefer_list . Rewind ( )		1107883	0					
ANR	1108021	Callee	prefer_list . Rewind		1107883	0					
ANR	1108022	MemberAccess	prefer_list . Rewind		1107883	0					
ANR	1108023	Identifier	prefer_list		1107883	0					
ANR	1108024	Identifier	Rewind		1107883	1					
ANR	1108025	ArgumentList			1107883	1					
ANR	1108026	WhileStatement	while ( prefer_list . Next ( daemon ) )		1107883	8					
ANR	1108027	Condition	prefer_list . Next ( daemon )	251:9:6271:6294	1107883	0	True				
ANR	1108028	CallExpression	prefer_list . Next ( daemon )		1107883	0					
ANR	1108029	Callee	prefer_list . Next		1107883	0					
ANR	1108030	MemberAccess	prefer_list . Next		1107883	0					
ANR	1108031	Identifier	prefer_list		1107883	0					
ANR	1108032	Identifier	Next		1107883	1					
ANR	1108033	ArgumentList	daemon		1107883	1					
ANR	1108034	Argument	daemon		1107883	0					
ANR	1108035	Identifier	daemon		1107883	0					
ANR	1108036	CompoundStatement		37:36:1120:1120	1107883	1					
ANR	1108037	ExpressionStatement	this -> list . Prepend ( daemon )	252:2:6302:6330	1107883	0	True				
ANR	1108038	CallExpression	this -> list . Prepend ( daemon )		1107883	0					
ANR	1108039	Callee	this -> list . Prepend		1107883	0					
ANR	1108040	MemberAccess	this -> list . Prepend		1107883	0					
ANR	1108041	PtrMemberAccess	this -> list		1107883	0					
ANR	1108042	Identifier	this		1107883	0					
ANR	1108043	Identifier	list		1107883	1					
ANR	1108044	Identifier	Prepend		1107883	1					
ANR	1108045	ArgumentList	daemon		1107883	1					
ANR	1108046	Argument	daemon		1107883	0					
ANR	1108047	Identifier	daemon		1107883	0					
ANR	1108048	ExpressionStatement	free ( tmp_preferred_collector )	255:1:6338:6367	1107883	9	True				
ANR	1108049	CallExpression	free ( tmp_preferred_collector )		1107883	0					
ANR	1108050	Callee	free		1107883	0					
ANR	1108051	Identifier	free		1107883	0					
ANR	1108052	ArgumentList	tmp_preferred_collector		1107883	1					
ANR	1108053	Argument	tmp_preferred_collector		1107883	0					
ANR	1108054	Identifier	tmp_preferred_collector		1107883	0					
ANR	1108055	ReturnStatement	return 0 ;	256:1:6468:6476	1107883	10	True				
ANR	1108056	PrimaryExpression	0		1107883	0					
ANR	1108057	ReturnType	int		1107883	1					
ANR	1108058	Identifier	CollectorList :: resortLocal		1107883	2					
ANR	1108059	ParameterList	const char * preferred_collector		1107883	3					
ANR	1108060	Parameter	const char * preferred_collector	214:28:5143:5173	1107883	0	True				
ANR	1108061	ParameterType	const char *		1107883	0					
ANR	1108062	Identifier	preferred_collector		1107883	1					
ANR	1108063	CFGEntryNode	ENTRY		1107883		True				
ANR	1108064	CFGExitNode	EXIT		1107883		True				
ANR	1108065	Symbol	tmp_preferred_collector		1107883						
ANR	1108066	Symbol	NULL		1107883						
ANR	1108067	Symbol	_hostname_str . Value		1107883						
ANR	1108068	Symbol	* _hostname		1107883						
ANR	1108069	Symbol	prefer_list		1107883						
ANR	1108070	Symbol	this		1107883						
ANR	1108071	Symbol	_hostname_str		1107883						
ANR	1108072	Symbol	get_local_fqdn		1107883						
ANR	1108073	Symbol	daemon -> fullHostname		1107883						
ANR	1108074	Symbol	preferred_collector		1107883						
ANR	1108075	Symbol	this -> list . Next		1107883						
ANR	1108076	Symbol	daemon		1107883						
ANR	1108077	Symbol	this -> list		1107883						
ANR	1108078	Symbol	* this		1107883						
ANR	1108079	Symbol	_hostname		1107883						
ANR	1108080	Symbol	* daemon		1107883						
ANR	1108081	Symbol	strdup		1107883						
ANR	1108082	Symbol	same_host		1107883						
ANR	1108083	Symbol	prefer_list . Next		1107883						
ANR	1108084	Function	CollectorList :: sendUpdates	260:0:6482:6865							
ANR	1108085	FunctionDef	"CollectorList :: sendUpdates (int cmd , ClassAd * ad1 , ClassAd * ad2 , bool nonblocking)"		1108084	0					
ANR	1108086	CompoundStatement		261:84:6570:6865	1108084	0					
ANR	1108087	IdentifierDeclStatement	int success_count = 0 ;	262:1:6573:6594	1108084	0	True				
ANR	1108088	IdentifierDecl	success_count = 0		1108084	0					
ANR	1108089	IdentifierDeclType	int		1108084	0					
ANR	1108090	Identifier	success_count		1108084	1					
ANR	1108091	AssignmentExpression	success_count = 0		1108084	2		=			
ANR	1108092	Identifier	success_count		1108084	0					
ANR	1108093	PrimaryExpression	0		1108084	1					
ANR	1108094	ExpressionStatement	this -> rewind ( )	264:1:6598:6612	1108084	1	True				
ANR	1108095	CallExpression	this -> rewind ( )		1108084	0					
ANR	1108096	Callee	this -> rewind		1108084	0					
ANR	1108097	PtrMemberAccess	this -> rewind		1108084	0					
ANR	1108098	Identifier	this		1108084	0					
ANR	1108099	Identifier	rewind		1108084	1					
ANR	1108100	ArgumentList			1108084	1					
ANR	1108101	IdentifierDeclStatement	DCCollector * daemon ;	265:1:6615:6635	1108084	2	True				
ANR	1108102	IdentifierDecl	* daemon		1108084	0					
ANR	1108103	IdentifierDeclType	DCCollector *		1108084	0					
ANR	1108104	Identifier	daemon		1108084	1					
ANR	1108105	WhileStatement	while ( this -> next ( daemon ) )		1108084	3					
ANR	1108106	Condition	this -> next ( daemon )	266:8:6645:6662	1108084	0	True				
ANR	1108107	CallExpression	this -> next ( daemon )		1108084	0					
ANR	1108108	Callee	this -> next		1108084	0					
ANR	1108109	PtrMemberAccess	this -> next		1108084	0					
ANR	1108110	Identifier	this		1108084	0					
ANR	1108111	Identifier	next		1108084	1					
ANR	1108112	ArgumentList	daemon		1108084	1					
ANR	1108113	Argument	daemon		1108084	0					
ANR	1108114	Identifier	daemon		1108084	0					
ANR	1108115	CompoundStatement		6:28:94:94	1108084	1					
ANR	1108116	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Trying to update collector %s\\n"" , daemon -> addr ( ) )"	267:2:6669:6754	1108084	0	True				
ANR	1108117	CallExpression	"dprintf ( D_FULLDEBUG , ""Trying to update collector %s\\n"" , daemon -> addr ( ) )"		1108084	0					
ANR	1108118	Callee	dprintf		1108084	0					
ANR	1108119	Identifier	dprintf		1108084	0					
ANR	1108120	ArgumentList	D_FULLDEBUG		1108084	1					
ANR	1108121	Argument	D_FULLDEBUG		1108084	0					
ANR	1108122	Identifier	D_FULLDEBUG		1108084	0					
ANR	1108123	Argument	"""Trying to update collector %s\\n"""		1108084	1					
ANR	1108124	PrimaryExpression	"""Trying to update collector %s\\n"""		1108084	0					
ANR	1108125	Argument	daemon -> addr ( )		1108084	2					
ANR	1108126	CallExpression	daemon -> addr ( )		1108084	0					
ANR	1108127	Callee	daemon -> addr		1108084	0					
ANR	1108128	PtrMemberAccess	daemon -> addr		1108084	0					
ANR	1108129	Identifier	daemon		1108084	0					
ANR	1108130	Identifier	addr		1108084	1					
ANR	1108131	ArgumentList			1108084	1					
ANR	1108132	IfStatement	"if ( daemon -> sendUpdate ( cmd , ad1 , ad2 , nonblocking ) )"		1108084	1					
ANR	1108133	Condition	"daemon -> sendUpdate ( cmd , ad1 , ad2 , nonblocking )"	270:6:6762:6807	1108084	0	True				
ANR	1108134	CallExpression	"daemon -> sendUpdate ( cmd , ad1 , ad2 , nonblocking )"		1108084	0					
ANR	1108135	Callee	daemon -> sendUpdate		1108084	0					
ANR	1108136	PtrMemberAccess	daemon -> sendUpdate		1108084	0					
ANR	1108137	Identifier	daemon		1108084	0					
ANR	1108138	Identifier	sendUpdate		1108084	1					
ANR	1108139	ArgumentList	cmd		1108084	1					
ANR	1108140	Argument	cmd		1108084	0					
ANR	1108141	Identifier	cmd		1108084	0					
ANR	1108142	Argument	ad1		1108084	1					
ANR	1108143	Identifier	ad1		1108084	0					
ANR	1108144	Argument	ad2		1108084	2					
ANR	1108145	Identifier	ad2		1108084	0					
ANR	1108146	Argument	nonblocking		1108084	3					
ANR	1108147	Identifier	nonblocking		1108084	0					
ANR	1108148	CompoundStatement		10:55:240:240	1108084	1					
ANR	1108149	ExpressionStatement	success_count ++	271:3:6816:6831	1108084	0	True				
ANR	1108150	PostIncDecOperationExpression	success_count ++		1108084	0					
ANR	1108151	Identifier	success_count		1108084	0					
ANR	1108152	IncDec	++		1108084	1					
ANR	1108153	ReturnStatement	return success_count ;	275:1:6843:6863	1108084	4	True				
ANR	1108154	Identifier	success_count		1108084	0					
ANR	1108155	ReturnType	int		1108084	1					
ANR	1108156	Identifier	CollectorList :: sendUpdates		1108084	2					
ANR	1108157	ParameterList	"int cmd , ClassAd * ad1 , ClassAd * ad2 , bool nonblocking"		1108084	3					
ANR	1108158	Parameter	int cmd	261:28:6514:6520	1108084	0	True				
ANR	1108159	ParameterType	int		1108084	0					
ANR	1108160	Identifier	cmd		1108084	1					
ANR	1108161	Parameter	ClassAd * ad1	261:37:6523:6535	1108084	1	True				
ANR	1108162	ParameterType	ClassAd *		1108084	0					
ANR	1108163	Identifier	ad1		1108084	1					
ANR	1108164	Parameter	ClassAd * ad2	261:52:6538:6549	1108084	2	True				
ANR	1108165	ParameterType	ClassAd *		1108084	0					
ANR	1108166	Identifier	ad2		1108084	1					
ANR	1108167	Parameter	bool nonblocking	261:66:6552:6567	1108084	3	True				
ANR	1108168	ParameterType	bool		1108084	0					
ANR	1108169	Identifier	nonblocking		1108084	1					
ANR	1108170	CFGEntryNode	ENTRY		1108084		True				
ANR	1108171	CFGExitNode	EXIT		1108084		True				
ANR	1108172	Symbol	daemon -> sendUpdate		1108084						
ANR	1108173	Symbol	nonblocking		1108084						
ANR	1108174	Symbol	this -> next		1108084						
ANR	1108175	Symbol	success_count		1108084						
ANR	1108176	Symbol	this		1108084						
ANR	1108177	Symbol	D_FULLDEBUG		1108084						
ANR	1108178	Symbol	ad2		1108084						
ANR	1108179	Symbol	ad1		1108084						
ANR	1108180	Symbol	daemon		1108084						
ANR	1108181	Symbol	* this		1108084						
ANR	1108182	Symbol	* daemon		1108084						
ANR	1108183	Symbol	cmd		1108084						
ANR	1108184	Symbol	daemon -> addr		1108084						
ANR	1108185	Function	CollectorList :: query	278:0:6868:8994							
ANR	1108186	FunctionDef	"CollectorList :: query (CondorQuery & cQuery , ClassAdList & adList , CondorError * errstack)"		1108185	0					
ANR	1108187	CompoundStatement		279:88:6968:8994	1108185	0					
ANR	1108188	IdentifierDeclStatement	int num_collectors = this -> number ( ) ;	281:1:6972:7007	1108185	0	True				
ANR	1108189	IdentifierDecl	num_collectors = this -> number ( )		1108185	0					
ANR	1108190	IdentifierDeclType	int		1108185	0					
ANR	1108191	Identifier	num_collectors		1108185	1					
ANR	1108192	AssignmentExpression	num_collectors = this -> number ( )		1108185	2		=			
ANR	1108193	Identifier	num_collectors		1108185	0					
ANR	1108194	CallExpression	this -> number ( )		1108185	1					
ANR	1108195	Callee	this -> number		1108185	0					
ANR	1108196	PtrMemberAccess	this -> number		1108185	0					
ANR	1108197	Identifier	this		1108185	0					
ANR	1108198	Identifier	number		1108185	1					
ANR	1108199	ArgumentList			1108185	1					
ANR	1108200	IfStatement	if ( num_collectors < 1 )		1108185	1					
ANR	1108201	Condition	num_collectors < 1	282:5:7014:7031	1108185	0	True				
ANR	1108202	RelationalExpression	num_collectors < 1		1108185	0		<			
ANR	1108203	Identifier	num_collectors		1108185	0					
ANR	1108204	PrimaryExpression	1		1108185	1					
ANR	1108205	CompoundStatement		4:25:65:65	1108185	1					
ANR	1108206	ReturnStatement	return Q_NO_COLLECTOR_HOST ;	283:2:7038:7064	1108185	0	True				
ANR	1108207	Identifier	Q_NO_COLLECTOR_HOST		1108185	0					
ANR	1108208	IdentifierDeclStatement	SimpleList < DCCollector * > sorted_collectors ;	286:1:7071:7114	1108185	2	True				
ANR	1108209	IdentifierDecl	sorted_collectors		1108185	0					
ANR	1108210	IdentifierDeclType	SimpleList < DCCollector * >		1108185	0					
ANR	1108211	Identifier	sorted_collectors		1108185	1					
ANR	1108212	IdentifierDeclStatement	DCCollector * daemon ;	287:1:7117:7137	1108185	3	True				
ANR	1108213	IdentifierDecl	* daemon		1108185	0					
ANR	1108214	IdentifierDeclType	DCCollector *		1108185	0					
ANR	1108215	Identifier	daemon		1108185	1					
ANR	1108216	IdentifierDeclStatement	QueryResult result ;	288:1:7140:7158	1108185	4	True				
ANR	1108217	IdentifierDecl	result		1108185	0					
ANR	1108218	IdentifierDeclType	QueryResult		1108185	0					
ANR	1108219	Identifier	result		1108185	1					
ANR	1108220	IdentifierDeclStatement	int pass = 0 ;	289:1:7161:7173	1108185	5	True				
ANR	1108221	IdentifierDecl	pass = 0		1108185	0					
ANR	1108222	IdentifierDeclType	int		1108185	0					
ANR	1108223	Identifier	pass		1108185	1					
ANR	1108224	AssignmentExpression	pass = 0		1108185	2		=			
ANR	1108225	Identifier	pass		1108185	0					
ANR	1108226	PrimaryExpression	0		1108185	1					
ANR	1108227	IdentifierDeclStatement	bool problems_resolving = false ;	291:1:7177:7208	1108185	6	True				
ANR	1108228	IdentifierDecl	problems_resolving = false		1108185	0					
ANR	1108229	IdentifierDeclType	bool		1108185	0					
ANR	1108230	Identifier	problems_resolving		1108185	1					
ANR	1108231	AssignmentExpression	problems_resolving = false		1108185	2		=			
ANR	1108232	Identifier	false		1108185	0					
ANR	1108233	Identifier	false		1108185	1					
ANR	1108234	ForStatement	for ( pass = 1 ; pass <= 2 ; pass ++ )		1108185	7					
ANR	1108235	ForInit	pass = 1 ;	293:6:7217:7225	1108185	0	True				
ANR	1108236	AssignmentExpression	pass = 1		1108185	0		=			
ANR	1108237	Identifier	pass		1108185	0					
ANR	1108238	PrimaryExpression	1		1108185	1					
ANR	1108239	Condition	pass <= 2	293:16:7227:7235	1108185	1	True				
ANR	1108240	RelationalExpression	pass <= 2		1108185	0		<=			
ANR	1108241	Identifier	pass		1108185	0					
ANR	1108242	PrimaryExpression	2		1108185	1					
ANR	1108243	PostIncDecOperationExpression	pass ++	293:27:7238:7243	1108185	2	True				
ANR	1108244	Identifier	pass		1108185	0					
ANR	1108245	IncDec	++		1108185	1					
ANR	1108246	CompoundStatement		15:36:278:278	1108185	3					
ANR	1108247	ExpressionStatement	this -> rewind ( )	294:2:7251:7265	1108185	0	True				
ANR	1108248	CallExpression	this -> rewind ( )		1108185	0					
ANR	1108249	Callee	this -> rewind		1108185	0					
ANR	1108250	PtrMemberAccess	this -> rewind		1108185	0					
ANR	1108251	Identifier	this		1108185	0					
ANR	1108252	Identifier	rewind		1108185	1					
ANR	1108253	ArgumentList			1108185	1					
ANR	1108254	WhileStatement	while ( this -> next ( daemon ) )		1108185	1					
ANR	1108255	Condition	this -> next ( daemon )	295:9:7276:7293	1108185	0	True				
ANR	1108256	CallExpression	this -> next ( daemon )		1108185	0					
ANR	1108257	Callee	this -> next		1108185	0					
ANR	1108258	PtrMemberAccess	this -> next		1108185	0					
ANR	1108259	Identifier	this		1108185	0					
ANR	1108260	Identifier	next		1108185	1					
ANR	1108261	ArgumentList	daemon		1108185	1					
ANR	1108262	Argument	daemon		1108185	0					
ANR	1108263	Identifier	daemon		1108185	0					
ANR	1108264	CompoundStatement		17:29:327:327	1108185	1					
ANR	1108265	IfStatement	if ( daemon -> isBlacklisted ( ) )		1108185	0					
ANR	1108266	Condition	daemon -> isBlacklisted ( )	297:7:7363:7385	1108185	0	True				
ANR	1108267	CallExpression	daemon -> isBlacklisted ( )		1108185	0					
ANR	1108268	Callee	daemon -> isBlacklisted		1108185	0					
ANR	1108269	PtrMemberAccess	daemon -> isBlacklisted		1108185	0					
ANR	1108270	Identifier	daemon		1108185	0					
ANR	1108271	Identifier	isBlacklisted		1108185	1					
ANR	1108272	ArgumentList			1108185	1					
ANR	1108273	CompoundStatement		19:33:420:420	1108185	1					
ANR	1108274	IfStatement	if ( pass == 1 )		1108185	0					
ANR	1108275	Condition	pass == 1	298:8:7399:7407	1108185	0	True				
ANR	1108276	EqualityExpression	pass == 1		1108185	0		==			
ANR	1108277	Identifier	pass		1108185	0					
ANR	1108278	PrimaryExpression	1		1108185	1					
ANR	1108279	CompoundStatement		20:20:442:442	1108185	1					
ANR	1108280	IfStatement	if ( num_collectors > 1 )		1108185	0					
ANR	1108281	Condition	num_collectors > 1	299:9:7422:7439	1108185	0	True				
ANR	1108282	RelationalExpression	num_collectors > 1		1108185	0		>			
ANR	1108283	Identifier	num_collectors		1108185	0					
ANR	1108284	PrimaryExpression	1		1108185	1					
ANR	1108285	CompoundStatement		21:30:474:474	1108185	1					
ANR	1108286	Statement	dprintf	300:6:7451:7457	1108185	0	True				
ANR	1108287	Statement	(	300:13:7458:7458	1108185	1	True				
ANR	1108288	Statement	D_ALWAYS	300:15:7460:7467	1108185	2	True				
ANR	1108289	Statement	","	300:23:7468:7468	1108185	3	True				
ANR	1108290	Statement	"""Collector %s %s is still being avoided if """	301:9:7479:7522	1108185	4	True				
ANR	1108291	Statement	"""an alternative succeeds.\\n"""	302:9:7533:7560	1108185	5	True				
ANR	1108292	Statement	","	302:37:7561:7561	1108185	6	True				
ANR	1108293	Statement	daemon	303:9:7572:7577	1108185	7	True				
ANR	1108294	Statement	->	303:15:7578:7579	1108185	8	True				
ANR	1108295	Statement	name	303:17:7580:7583	1108185	9	True				
ANR	1108296	Statement	(	303:21:7584:7584	1108185	10	True				
ANR	1108297	Statement	)	303:22:7585:7585	1108185	11	True				
ANR	1108298	Statement	?	303:24:7587:7587	1108185	12	True				
ANR	1108299	Statement	daemon	303:26:7589:7594	1108185	13	True				
ANR	1108300	Statement	->	303:32:7595:7596	1108185	14	True				
ANR	1108301	Statement	name	303:34:7597:7600	1108185	15	True				
ANR	1108302	Statement	(	303:38:7601:7601	1108185	16	True				
ANR	1108303	Statement	)	303:39:7602:7602	1108185	17	True				
ANR	1108304	Statement	:	303:41:7604:7604	1108185	18	True				
ANR	1108305	Statement	"""unknown"""	303:43:7606:7614	1108185	19	True				
ANR	1108306	Statement	","	303:52:7615:7615	1108185	20	True				
ANR	1108307	Statement	daemon	304:9:7626:7631	1108185	21	True				
ANR	1108308	Statement	->	304:15:7632:7633	1108185	22	True				
ANR	1108309	Statement	addr	304:17:7634:7637	1108185	23	True				
ANR	1108310	Statement	(	304:21:7638:7638	1108185	24	True				
ANR	1108311	Statement	)	304:22:7639:7639	1108185	25	True				
ANR	1108312	Statement	?	304:24:7641:7641	1108185	26	True				
ANR	1108313	Statement	daemon	304:26:7643:7648	1108185	27	True				
ANR	1108314	Statement	->	304:32:7649:7650	1108185	28	True				
ANR	1108315	Statement	addr	304:34:7651:7654	1108185	29	True				
ANR	1108316	Statement	(	304:38:7655:7655	1108185	30	True				
ANR	1108317	Statement	)	304:39:7656:7656	1108185	31	True				
ANR	1108318	Statement	:	304:41:7658:7658	1108185	32	True				
ANR	1108319	Statement	"""unknown"""	304:43:7660:7668	1108185	33	True				
ANR	1108320	Statement	)	304:52:7669:7669	1108185	34	True				
ANR	1108321	ExpressionStatement		304:53:7670:7670	1108185	35	True				
ANR	1108322	ContinueStatement	continue ;	306:5:7684:7692	1108185	1	True				
ANR	1108323	ElseStatement	else		1108185	0					
ANR	1108324	CompoundStatement		31:8:744:744	1108185	0					
ANR	1108325	IfStatement	if ( pass == 2 )		1108185	0					
ANR	1108326	Condition	pass == 2	310:8:7723:7731	1108185	0	True				
ANR	1108327	EqualityExpression	pass == 2		1108185	0		==			
ANR	1108328	Identifier	pass		1108185	0					
ANR	1108329	PrimaryExpression	2		1108185	1					
ANR	1108330	CompoundStatement		32:20:766:766	1108185	1					
ANR	1108331	ContinueStatement	continue ;	311:5:7742:7750	1108185	0	True				
ANR	1108332	ExpressionStatement	sorted_collectors . Append ( daemon )	314:3:7766:7800	1108185	1	True				
ANR	1108333	CallExpression	sorted_collectors . Append ( daemon )		1108185	0					
ANR	1108334	Callee	sorted_collectors . Append		1108185	0					
ANR	1108335	MemberAccess	sorted_collectors . Append		1108185	0					
ANR	1108336	Identifier	sorted_collectors		1108185	0					
ANR	1108337	Identifier	Append		1108185	1					
ANR	1108338	ArgumentList	daemon		1108185	1					
ANR	1108339	Argument	daemon		1108185	0					
ANR	1108340	Identifier	daemon		1108185	0					
ANR	1108341	ExpressionStatement	sorted_collectors . Rewind ( )	318:1:7811:7837	1108185	8	True				
ANR	1108342	CallExpression	sorted_collectors . Rewind ( )		1108185	0					
ANR	1108343	Callee	sorted_collectors . Rewind		1108185	0					
ANR	1108344	MemberAccess	sorted_collectors . Rewind		1108185	0					
ANR	1108345	Identifier	sorted_collectors		1108185	0					
ANR	1108346	Identifier	Rewind		1108185	1					
ANR	1108347	ArgumentList			1108185	1					
ANR	1108348	WhileStatement	while ( sorted_collectors . Next ( daemon ) )		1108185	9					
ANR	1108349	Condition	sorted_collectors . Next ( daemon )	319:8:7847:7878	1108185	0	True				
ANR	1108350	CallExpression	sorted_collectors . Next ( daemon )		1108185	0					
ANR	1108351	Callee	sorted_collectors . Next		1108185	0					
ANR	1108352	MemberAccess	sorted_collectors . Next		1108185	0					
ANR	1108353	Identifier	sorted_collectors		1108185	0					
ANR	1108354	Identifier	Next		1108185	1					
ANR	1108355	ArgumentList	daemon		1108185	1					
ANR	1108356	Argument	daemon		1108185	0					
ANR	1108357	Identifier	daemon		1108185	0					
ANR	1108358	CompoundStatement		41:43:913:913	1108185	1					
ANR	1108359	IfStatement	if ( ! daemon -> addr ( ) )		1108185	0					
ANR	1108360	Condition	! daemon -> addr ( )	320:7:7891:7906	1108185	0	True				
ANR	1108361	UnaryOperationExpression	! daemon -> addr ( )		1108185	0					
ANR	1108362	UnaryOperator	!		1108185	0					
ANR	1108363	CallExpression	daemon -> addr ( )		1108185	1					
ANR	1108364	Callee	daemon -> addr		1108185	0					
ANR	1108365	PtrMemberAccess	daemon -> addr		1108185	0					
ANR	1108366	Identifier	daemon		1108185	0					
ANR	1108367	Identifier	addr		1108185	1					
ANR	1108368	ArgumentList			1108185	1					
ANR	1108369	CompoundStatement		42:26:941:941	1108185	1					
ANR	1108370	IfStatement	if ( daemon -> name ( ) )		1108185	0					
ANR	1108371	Condition	daemon -> name ( )	321:8:7920:7933	1108185	0	True				
ANR	1108372	CallExpression	daemon -> name ( )		1108185	0					
ANR	1108373	Callee	daemon -> name		1108185	0					
ANR	1108374	PtrMemberAccess	daemon -> name		1108185	0					
ANR	1108375	Identifier	daemon		1108185	0					
ANR	1108376	Identifier	name		1108185	1					
ANR	1108377	ArgumentList			1108185	1					
ANR	1108378	CompoundStatement		43:25:968:968	1108185	1					
ANR	1108379	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't resolve collector %s; skipping\\n"" , daemon -> name ( ) )"	322:4:7943:8034	1108185	0	True				
ANR	1108380	CallExpression	"dprintf ( D_ALWAYS , ""Can't resolve collector %s; skipping\\n"" , daemon -> name ( ) )"		1108185	0					
ANR	1108381	Callee	dprintf		1108185	0					
ANR	1108382	Identifier	dprintf		1108185	0					
ANR	1108383	ArgumentList	D_ALWAYS		1108185	1					
ANR	1108384	Argument	D_ALWAYS		1108185	0					
ANR	1108385	Identifier	D_ALWAYS		1108185	0					
ANR	1108386	Argument	"""Can't resolve collector %s; skipping\\n"""		1108185	1					
ANR	1108387	PrimaryExpression	"""Can't resolve collector %s; skipping\\n"""		1108185	0					
ANR	1108388	Argument	daemon -> name ( )		1108185	2					
ANR	1108389	CallExpression	daemon -> name ( )		1108185	0					
ANR	1108390	Callee	daemon -> name		1108185	0					
ANR	1108391	PtrMemberAccess	daemon -> name		1108185	0					
ANR	1108392	Identifier	daemon		1108185	0					
ANR	1108393	Identifier	name		1108185	1					
ANR	1108394	ArgumentList			1108185	1					
ANR	1108395	ElseStatement	else		1108185	0					
ANR	1108396	CompoundStatement		47:10:1077:1077	1108185	0					
ANR	1108397	ExpressionStatement	"dprintf ( D_ALWAYS , ""Can't resolve nameless collector; skipping\\n"" )"	326:4:8052:8126	1108185	0	True				
ANR	1108398	CallExpression	"dprintf ( D_ALWAYS , ""Can't resolve nameless collector; skipping\\n"" )"		1108185	0					
ANR	1108399	Callee	dprintf		1108185	0					
ANR	1108400	Identifier	dprintf		1108185	0					
ANR	1108401	ArgumentList	D_ALWAYS		1108185	1					
ANR	1108402	Argument	D_ALWAYS		1108185	0					
ANR	1108403	Identifier	D_ALWAYS		1108185	0					
ANR	1108404	Argument	"""Can't resolve nameless collector; skipping\\n"""		1108185	1					
ANR	1108405	PrimaryExpression	"""Can't resolve nameless collector; skipping\\n"""		1108185	0					
ANR	1108406	ExpressionStatement	problems_resolving = true	329:3:8136:8161	1108185	1	True				
ANR	1108407	AssignmentExpression	problems_resolving = true		1108185	0		=			
ANR	1108408	Identifier	problems_resolving		1108185	0					
ANR	1108409	Identifier	true		1108185	1					
ANR	1108410	ContinueStatement	continue ;	330:3:8166:8174	1108185	2	True				
ANR	1108411	ExpressionStatement	"dprintf ( D_FULLDEBUG , ""Trying to query collector %s\\n"" , daemon -> addr ( ) )"	332:2:8182:8265	1108185	1	True				
ANR	1108412	CallExpression	"dprintf ( D_FULLDEBUG , ""Trying to query collector %s\\n"" , daemon -> addr ( ) )"		1108185	0					
ANR	1108413	Callee	dprintf		1108185	0					
ANR	1108414	Identifier	dprintf		1108185	0					
ANR	1108415	ArgumentList	D_FULLDEBUG		1108185	1					
ANR	1108416	Argument	D_FULLDEBUG		1108185	0					
ANR	1108417	Identifier	D_FULLDEBUG		1108185	0					
ANR	1108418	Argument	"""Trying to query collector %s\\n"""		1108185	1					
ANR	1108419	PrimaryExpression	"""Trying to query collector %s\\n"""		1108185	0					
ANR	1108420	Argument	daemon -> addr ( )		1108185	2					
ANR	1108421	CallExpression	daemon -> addr ( )		1108185	0					
ANR	1108422	Callee	daemon -> addr		1108185	0					
ANR	1108423	PtrMemberAccess	daemon -> addr		1108185	0					
ANR	1108424	Identifier	daemon		1108185	0					
ANR	1108425	Identifier	addr		1108185	1					
ANR	1108426	ArgumentList			1108185	1					
ANR	1108427	IfStatement	if ( num_collectors > 1 )		1108185	2					
ANR	1108428	Condition	num_collectors > 1	336:6:8274:8291	1108185	0	True				
ANR	1108429	RelationalExpression	num_collectors > 1		1108185	0		>			
ANR	1108430	Identifier	num_collectors		1108185	0					
ANR	1108431	PrimaryExpression	1		1108185	1					
ANR	1108432	CompoundStatement		58:27:1326:1326	1108185	1					
ANR	1108433	ExpressionStatement	daemon -> blacklistMonitorQueryStarted ( )	337:3:8300:8338	1108185	0	True				
ANR	1108434	CallExpression	daemon -> blacklistMonitorQueryStarted ( )		1108185	0					
ANR	1108435	Callee	daemon -> blacklistMonitorQueryStarted		1108185	0					
ANR	1108436	PtrMemberAccess	daemon -> blacklistMonitorQueryStarted		1108185	0					
ANR	1108437	Identifier	daemon		1108185	0					
ANR	1108438	Identifier	blacklistMonitorQueryStarted		1108185	1					
ANR	1108439	ArgumentList			1108185	1					
ANR	1108440	ExpressionStatement	"result = cQuery . fetchAds ( adList , daemon -> addr ( ) , errstack )"	340:2:8347:8410	1108185	3	True				
ANR	1108441	AssignmentExpression	"result = cQuery . fetchAds ( adList , daemon -> addr ( ) , errstack )"		1108185	0		=			
ANR	1108442	Identifier	result		1108185	0					
ANR	1108443	CallExpression	"cQuery . fetchAds ( adList , daemon -> addr ( ) , errstack )"		1108185	1					
ANR	1108444	Callee	cQuery . fetchAds		1108185	0					
ANR	1108445	MemberAccess	cQuery . fetchAds		1108185	0					
ANR	1108446	Identifier	cQuery		1108185	0					
ANR	1108447	Identifier	fetchAds		1108185	1					
ANR	1108448	ArgumentList	adList		1108185	1					
ANR	1108449	Argument	adList		1108185	0					
ANR	1108450	Identifier	adList		1108185	0					
ANR	1108451	Argument	daemon -> addr ( )		1108185	1					
ANR	1108452	CallExpression	daemon -> addr ( )		1108185	0					
ANR	1108453	Callee	daemon -> addr		1108185	0					
ANR	1108454	PtrMemberAccess	daemon -> addr		1108185	0					
ANR	1108455	Identifier	daemon		1108185	0					
ANR	1108456	Identifier	addr		1108185	1					
ANR	1108457	ArgumentList			1108185	1					
ANR	1108458	Argument	errstack		1108185	2					
ANR	1108459	Identifier	errstack		1108185	0					
ANR	1108460	IfStatement	if ( num_collectors > 1 )		1108185	4					
ANR	1108461	Condition	num_collectors > 1	343:6:8419:8436	1108185	0	True				
ANR	1108462	RelationalExpression	num_collectors > 1		1108185	0		>			
ANR	1108463	Identifier	num_collectors		1108185	0					
ANR	1108464	PrimaryExpression	1		1108185	1					
ANR	1108465	CompoundStatement		65:27:1471:1471	1108185	1					
ANR	1108466	ExpressionStatement	daemon -> blacklistMonitorQueryFinished ( result == Q_OK )	344:3:8445:8500	1108185	0	True				
ANR	1108467	CallExpression	daemon -> blacklistMonitorQueryFinished ( result == Q_OK )		1108185	0					
ANR	1108468	Callee	daemon -> blacklistMonitorQueryFinished		1108185	0					
ANR	1108469	PtrMemberAccess	daemon -> blacklistMonitorQueryFinished		1108185	0					
ANR	1108470	Identifier	daemon		1108185	0					
ANR	1108471	Identifier	blacklistMonitorQueryFinished		1108185	1					
ANR	1108472	ArgumentList	result == Q_OK		1108185	1					
ANR	1108473	Argument	result == Q_OK		1108185	0					
ANR	1108474	EqualityExpression	result == Q_OK		1108185	0		==			
ANR	1108475	Identifier	result		1108185	0					
ANR	1108476	Identifier	Q_OK		1108185	1					
ANR	1108477	IfStatement	if ( result == Q_OK )		1108185	5					
ANR	1108478	Condition	result == Q_OK	347:6:8513:8526	1108185	0	True				
ANR	1108479	EqualityExpression	result == Q_OK		1108185	0		==			
ANR	1108480	Identifier	result		1108185	0					
ANR	1108481	Identifier	Q_OK		1108185	1					
ANR	1108482	CompoundStatement		69:22:1560:1560	1108185	1					
ANR	1108483	ReturnStatement	return result ;	348:3:8534:8547	1108185	0	True				
ANR	1108484	Identifier	result		1108185	0					
ANR	1108485	IfStatement	if ( problems_resolving && errstack && ! errstack -> code ( 0 ) )		1108185	10					
ANR	1108486	Condition	problems_resolving && errstack && ! errstack -> code ( 0 )	353:4:8636:8687	1108185	0	True				
ANR	1108487	AndExpression	problems_resolving && errstack && ! errstack -> code ( 0 )		1108185	0		&&			
ANR	1108488	Identifier	problems_resolving		1108185	0					
ANR	1108489	AndExpression	errstack && ! errstack -> code ( 0 )		1108185	1		&&			
ANR	1108490	Identifier	errstack		1108185	0					
ANR	1108491	UnaryOperationExpression	! errstack -> code ( 0 )		1108185	1					
ANR	1108492	UnaryOperator	!		1108185	0					
ANR	1108493	CallExpression	errstack -> code ( 0 )		1108185	1					
ANR	1108494	Callee	errstack -> code		1108185	0					
ANR	1108495	PtrMemberAccess	errstack -> code		1108185	0					
ANR	1108496	Identifier	errstack		1108185	0					
ANR	1108497	Identifier	code		1108185	1					
ANR	1108498	ArgumentList	0		1108185	1					
ANR	1108499	Argument	0		1108185	0					
ANR	1108500	PrimaryExpression	0		1108185	0					
ANR	1108501	CompoundStatement		77:2:1744:1794	1108185	1					
ANR	1108502	IdentifierDeclStatement	MyString errmsg ;	354:2:8694:8709	1108185	0	True				
ANR	1108503	IdentifierDecl	errmsg		1108185	0					
ANR	1108504	IdentifierDeclType	MyString		1108185	0					
ANR	1108505	Identifier	errmsg		1108185	1					
ANR	1108506	IdentifierDeclStatement	"char * tmplist = getCmHostFromConfig ( ""COLLECTOR"" ) ;"	355:2:8713:8763	1108185	1	True				
ANR	1108507	IdentifierDecl	"* tmplist = getCmHostFromConfig ( ""COLLECTOR"" )"		1108185	0					
ANR	1108508	IdentifierDeclType	char *		1108185	0					
ANR	1108509	Identifier	tmplist		1108185	1					
ANR	1108510	AssignmentExpression	"* tmplist = getCmHostFromConfig ( ""COLLECTOR"" )"		1108185	2		=			
ANR	1108511	Identifier	tmplist		1108185	0					
ANR	1108512	CallExpression	"getCmHostFromConfig ( ""COLLECTOR"" )"		1108185	1					
ANR	1108513	Callee	getCmHostFromConfig		1108185	0					
ANR	1108514	Identifier	getCmHostFromConfig		1108185	0					
ANR	1108515	ArgumentList	"""COLLECTOR"""		1108185	1					
ANR	1108516	Argument	"""COLLECTOR"""		1108185	0					
ANR	1108517	PrimaryExpression	"""COLLECTOR"""		1108185	0					
ANR	1108518	ExpressionStatement	"errmsg . sprintf ( ""Unable to resolve COLLECTOR_HOST (%s)."" , tmplist ? tmplist : ""(null)"" )"	356:2:8767:8849	1108185	2	True				
ANR	1108519	CallExpression	"errmsg . sprintf ( ""Unable to resolve COLLECTOR_HOST (%s)."" , tmplist ? tmplist : ""(null)"" )"		1108185	0					
ANR	1108520	Callee	errmsg . sprintf		1108185	0					
ANR	1108521	MemberAccess	errmsg . sprintf		1108185	0					
ANR	1108522	Identifier	errmsg		1108185	0					
ANR	1108523	Identifier	sprintf		1108185	1					
ANR	1108524	ArgumentList	"""Unable to resolve COLLECTOR_HOST (%s)."""		1108185	1					
ANR	1108525	Argument	"""Unable to resolve COLLECTOR_HOST (%s)."""		1108185	0					
ANR	1108526	PrimaryExpression	"""Unable to resolve COLLECTOR_HOST (%s)."""		1108185	0					
ANR	1108527	Argument	"tmplist ? tmplist : ""(null)"""		1108185	1					
ANR	1108528	ConditionalExpression	"tmplist ? tmplist : ""(null)"""		1108185	0					
ANR	1108529	Condition	tmplist		1108185	0					
ANR	1108530	Identifier	tmplist		1108185	0					
ANR	1108531	Identifier	tmplist		1108185	1					
ANR	1108532	PrimaryExpression	"""(null)"""		1108185	2					
ANR	1108533	ExpressionStatement	"errstack -> push ( ""CONDOR_STATUS"" , 1 , errmsg . Value ( ) )"	357:2:8853:8901	1108185	3	True				
ANR	1108534	CallExpression	"errstack -> push ( ""CONDOR_STATUS"" , 1 , errmsg . Value ( ) )"		1108185	0					
ANR	1108535	Callee	errstack -> push		1108185	0					
ANR	1108536	PtrMemberAccess	errstack -> push		1108185	0					
ANR	1108537	Identifier	errstack		1108185	0					
ANR	1108538	Identifier	push		1108185	1					
ANR	1108539	ArgumentList	"""CONDOR_STATUS"""		1108185	1					
ANR	1108540	Argument	"""CONDOR_STATUS"""		1108185	0					
ANR	1108541	PrimaryExpression	"""CONDOR_STATUS"""		1108185	0					
ANR	1108542	Argument	1		1108185	1					
ANR	1108543	PrimaryExpression	1		1108185	0					
ANR	1108544	Argument	errmsg . Value ( )		1108185	2					
ANR	1108545	CallExpression	errmsg . Value ( )		1108185	0					
ANR	1108546	Callee	errmsg . Value		1108185	0					
ANR	1108547	MemberAccess	errmsg . Value		1108185	0					
ANR	1108548	Identifier	errmsg		1108185	0					
ANR	1108549	Identifier	Value		1108185	1					
ANR	1108550	ArgumentList			1108185	1					
ANR	1108551	ReturnStatement	return Q_COMMUNICATION_ERROR ;	361:1:8964:8992	1108185	11	True				
ANR	1108552	Identifier	Q_COMMUNICATION_ERROR		1108185	0					
ANR	1108553	ReturnType	QueryResult		1108185	1					
ANR	1108554	Identifier	CollectorList :: query		1108185	2					
ANR	1108555	ParameterList	"CondorQuery & cQuery , ClassAdList & adList , CondorError * errstack"		1108185	3					
ANR	1108556	Parameter	CondorQuery & cQuery	279:21:6901:6920	1108185	0	True				
ANR	1108557	ParameterType	CondorQuery &		1108185	0					
ANR	1108558	Identifier	cQuery		1108185	1					
ANR	1108559	Parameter	ClassAdList & adList	279:43:6923:6942	1108185	1	True				
ANR	1108560	ParameterType	ClassAdList &		1108185	0					
ANR	1108561	Identifier	adList		1108185	1					
ANR	1108562	Parameter	CondorError * errstack	279:65:6945:6965	1108185	2	True				
ANR	1108563	ParameterType	CondorError *		1108185	0					
ANR	1108564	Identifier	errstack		1108185	1					
ANR	1108565	CFGEntryNode	ENTRY		1108185		True				
ANR	1108566	CFGExitNode	EXIT		1108185		True				
ANR	1108567	Symbol	Q_COMMUNICATION_ERROR		1108185						
ANR	1108568	Symbol	daemon -> isBlacklisted		1108185						
ANR	1108569	Symbol	tmplist		1108185						
ANR	1108570	Symbol	sorted_collectors . Next		1108185						
ANR	1108571	Symbol	adList		1108185						
ANR	1108572	Symbol	cQuery . fetchAds		1108185						
ANR	1108573	Symbol	Q_NO_COLLECTOR_HOST		1108185						
ANR	1108574	Symbol	result		1108185						
ANR	1108575	Symbol	* daemon		1108185						
ANR	1108576	Symbol	errmsg . Value		1108185						
ANR	1108577	Symbol	daemon -> name		1108185						
ANR	1108578	Symbol	sorted_collectors		1108185						
ANR	1108579	Symbol	pass		1108185						
ANR	1108580	Symbol	this -> next		1108185						
ANR	1108581	Symbol	this -> number		1108185						
ANR	1108582	Symbol	this		1108185						
ANR	1108583	Symbol	false		1108185						
ANR	1108584	Symbol	D_ALWAYS		1108185						
ANR	1108585	Symbol	errmsg		1108185						
ANR	1108586	Symbol	D_FULLDEBUG		1108185						
ANR	1108587	Symbol	Q_OK		1108185						
ANR	1108588	Symbol	daemon		1108185						
ANR	1108589	Symbol	* this		1108185						
ANR	1108590	Symbol	errstack		1108185						
ANR	1108591	Symbol	* errstack		1108185						
ANR	1108592	Symbol	problems_resolving		1108185						
ANR	1108593	Symbol	true		1108185						
ANR	1108594	Symbol	num_collectors		1108185						
ANR	1108595	Symbol	errstack -> code		1108185						
ANR	1108596	Symbol	getCmHostFromConfig		1108185						
ANR	1108597	Symbol	daemon -> addr		1108185						
ANR	1108598	Symbol	cQuery		1108185						
ANR	1108599	Function	CollectorList :: next	366:0:8999:9087							
ANR	1108600	FunctionDef	CollectorList :: next (DCCollector * & d)		1108599	0					
ANR	1108601	CompoundStatement		368:0:9044:9087	1108599	0					
ANR	1108602	ReturnStatement	return DaemonList :: Next ( ( Daemon * & ) d ) ;	369:1:9047:9085	1108599	0	True				
ANR	1108603	CallExpression	DaemonList :: Next ( ( Daemon * & ) d )		1108599	0					
ANR	1108604	Callee	DaemonList :: Next		1108599	0					
ANR	1108605	Identifier	DaemonList :: Next		1108599	0					
ANR	1108606	ArgumentList	( Daemon * & ) d		1108599	1					
ANR	1108607	Argument	( Daemon * & ) d		1108599	0					
ANR	1108608	CastExpression	( Daemon * & ) d		1108599	0					
ANR	1108609	CastTarget	Daemon * &		1108599	0					
ANR	1108610	Identifier	d		1108599	1					
ANR	1108611	ReturnType	bool		1108599	1					
ANR	1108612	Identifier	CollectorList :: next		1108599	2					
ANR	1108613	ParameterList	DCCollector * & d		1108599	3					
ANR	1108614	Parameter	DCCollector * & d	367:21:9025:9040	1108599	0	True				
ANR	1108615	ParameterType	DCCollector * &		1108599	0					
ANR	1108616	Identifier	d		1108599	1					
ANR	1108617	CFGEntryNode	ENTRY		1108599		True				
ANR	1108618	CFGExitNode	EXIT		1108599		True				
ANR	1108619	Symbol	DaemonList :: Next		1108599						
ANR	1108620	Symbol	d		1108599						
ANR	1108621	Function	CollectorList :: Next	373:0:9091:9157							
ANR	1108622	FunctionDef	CollectorList :: Next (DCCollector * & d)		1108621	0					
ANR	1108623	CompoundStatement		375:0:9136:9157	1108621	0					
ANR	1108624	ReturnStatement	return next ( d ) ;	376:1:9139:9155	1108621	0	True				
ANR	1108625	CallExpression	next ( d )		1108621	0					
ANR	1108626	Callee	next		1108621	0					
ANR	1108627	Identifier	next		1108621	0					
ANR	1108628	ArgumentList	d		1108621	1					
ANR	1108629	Argument	d		1108621	0					
ANR	1108630	Identifier	d		1108621	0					
ANR	1108631	ReturnType	bool		1108621	1					
ANR	1108632	Identifier	CollectorList :: Next		1108621	2					
ANR	1108633	ParameterList	DCCollector * & d		1108621	3					
ANR	1108634	Parameter	DCCollector * & d	374:21:9117:9132	1108621	0	True				
ANR	1108635	ParameterType	DCCollector * &		1108621	0					
ANR	1108636	Identifier	d		1108621	1					
ANR	1108637	CFGEntryNode	ENTRY		1108621		True				
ANR	1108638	CFGExitNode	EXIT		1108621		True				
ANR	1108639	Symbol	next		1108621						
ANR	1108640	Symbol	d		1108621						
ANR	1108641	Function	CollectorList :: next	380:0:9161:9234							
ANR	1108642	FunctionDef	CollectorList :: next (Daemon * & d)		1108641	0					
ANR	1108643	CompoundStatement		382:0:9201:9234	1108641	0					
ANR	1108644	ReturnStatement	return DaemonList :: Next ( d ) ;	383:1:9204:9232	1108641	0	True				
ANR	1108645	CallExpression	DaemonList :: Next ( d )		1108641	0					
ANR	1108646	Callee	DaemonList :: Next		1108641	0					
ANR	1108647	Identifier	DaemonList :: Next		1108641	0					
ANR	1108648	ArgumentList	d		1108641	1					
ANR	1108649	Argument	d		1108641	0					
ANR	1108650	Identifier	d		1108641	0					
ANR	1108651	ReturnType	bool		1108641	1					
ANR	1108652	Identifier	CollectorList :: next		1108641	2					
ANR	1108653	ParameterList	Daemon * & d		1108641	3					
ANR	1108654	Parameter	Daemon * & d	381:21:9187:9197	1108641	0	True				
ANR	1108655	ParameterType	Daemon * &		1108641	0					
ANR	1108656	Identifier	d		1108641	1					
ANR	1108657	CFGEntryNode	ENTRY		1108641		True				
ANR	1108658	CFGExitNode	EXIT		1108641		True				
ANR	1108659	Symbol	DaemonList :: Next		1108641						
ANR	1108660	Symbol	d		1108641						
ANR	1108661	Function	CollectorList :: Next	387:0:9238:9299							
ANR	1108662	FunctionDef	CollectorList :: Next (Daemon * & d)		1108661	0					
ANR	1108663	CompoundStatement		389:0:9278:9299	1108661	0					
ANR	1108664	ReturnStatement	return next ( d ) ;	390:1:9281:9297	1108661	0	True				
ANR	1108665	CallExpression	next ( d )		1108661	0					
ANR	1108666	Callee	next		1108661	0					
ANR	1108667	Identifier	next		1108661	0					
ANR	1108668	ArgumentList	d		1108661	1					
ANR	1108669	Argument	d		1108661	0					
ANR	1108670	Identifier	d		1108661	0					
ANR	1108671	ReturnType	bool		1108661	1					
ANR	1108672	Identifier	CollectorList :: Next		1108661	2					
ANR	1108673	ParameterList	Daemon * & d		1108661	3					
ANR	1108674	Parameter	Daemon * & d	388:21:9264:9274	1108661	0	True				
ANR	1108675	ParameterType	Daemon * &		1108661	0					
ANR	1108676	Identifier	d		1108661	1					
ANR	1108677	CFGEntryNode	ENTRY		1108661		True				
ANR	1108678	CFGExitNode	EXIT		1108661		True				
ANR	1108679	Symbol	next		1108661						
ANR	1108680	Symbol	d		1108661						
