command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	126567	File	data/converged/CVE-2011-4930_htcondor/AviaryQuery_GetJobStatus.cpp								
ANR	126568	Function	AviaryQuery :: GetJobStatus :: GetJobStatus	23:11:586:1061							
ANR	126569	FunctionDef	AviaryQuery :: GetJobStatus :: GetJobStatus ()		126568	0					
ANR	126570	CompoundStatement		24:8:636:1061	126568	0					
ANR	126571	ExpressionStatement	qname = NULL	27:12:660:672	126568	0	True				
ANR	126572	AssignmentExpression	qname = NULL		126568	0		=			
ANR	126573	Identifier	qname		126568	0					
ANR	126574	Identifier	NULL		126568	1					
ANR	126575	ExpressionStatement	property_Ids = NULL	29:16:699:719	126568	1	True				
ANR	126576	AssignmentExpression	property_Ids = NULL		126568	0		=			
ANR	126577	Identifier	property_Ids		126568	0					
ANR	126578	Identifier	NULL		126568	1					
ANR	126579	ExpressionStatement	isValidIds = false	31:12:748:767	126568	2	True				
ANR	126580	AssignmentExpression	isValidIds = false		126568	0		=			
ANR	126581	Identifier	isValidIds		126568	0					
ANR	126582	Identifier	false		126568	1					
ANR	126583	ExpressionStatement	isValidPartialMatches = false	33:12:790:820	126568	3	True				
ANR	126584	AssignmentExpression	isValidPartialMatches = false		126568	0		=			
ANR	126585	Identifier	isValidPartialMatches		126568	0					
ANR	126586	Identifier	false		126568	1					
ANR	126587	ExpressionStatement	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""GetJobStatus"" , ""http://query.aviary.grid.redhat.com"" , NULL )"	35:18:849:1034	126568	4	True				
ANR	126588	AssignmentExpression	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""GetJobStatus"" , ""http://query.aviary.grid.redhat.com"" , NULL )"		126568	0		=			
ANR	126589	Identifier	qname		126568	0					
ANR	126590	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""GetJobStatus"" , ""http://query.aviary.grid.redhat.com"" , NULL )"		126568	1					
ANR	126591	Callee	axutil_qname_create		126568	0					
ANR	126592	Identifier	axutil_qname_create		126568	0					
ANR	126593	ArgumentList	Environment :: getEnv ( )		126568	1					
ANR	126594	Argument	Environment :: getEnv ( )		126568	0					
ANR	126595	CallExpression	Environment :: getEnv ( )		126568	0					
ANR	126596	Callee	Environment :: getEnv		126568	0					
ANR	126597	Identifier	Environment :: getEnv		126568	0					
ANR	126598	ArgumentList			126568	1					
ANR	126599	Argument	"""GetJobStatus"""		126568	1					
ANR	126600	PrimaryExpression	"""GetJobStatus"""		126568	0					
ANR	126601	Argument	"""http://query.aviary.grid.redhat.com"""		126568	2					
ANR	126602	PrimaryExpression	"""http://query.aviary.grid.redhat.com"""		126568	0					
ANR	126603	Argument	NULL		126568	3					
ANR	126604	Identifier	NULL		126568	0					
ANR	126605	Identifier	AviaryQuery :: GetJobStatus :: GetJobStatus		126568	1					
ANR	126606	ParameterList			126568	2					
ANR	126607	CFGEntryNode	ENTRY		126568		True				
ANR	126608	CFGExitNode	EXIT		126568		True				
ANR	126609	Symbol	Environment :: getEnv		126568						
ANR	126610	Symbol	NULL		126568						
ANR	126611	Symbol	property_Ids		126568						
ANR	126612	Symbol	isValidIds		126568						
ANR	126613	Symbol	qname		126568						
ANR	126614	Symbol	false		126568						
ANR	126615	Symbol	axutil_qname_create		126568						
ANR	126616	Symbol	isValidPartialMatches		126568						
ANR	126617	Function	AviaryQuery :: GetJobStatus :: GetJobStatus	42:7:1071:1763							
ANR	126618	FunctionDef	"AviaryQuery :: GetJobStatus :: GetJobStatus (std :: vector < AviaryCommon :: JobID * > * arg_Ids , bool arg_PartialMatches)"		126617	0					
ANR	126619	CompoundStatement		43:8:1187:1763	126617	0					
ANR	126620	ExpressionStatement	qname = NULL	45:19:1222:1234	126617	0	True				
ANR	126621	AssignmentExpression	qname = NULL		126617	0		=			
ANR	126622	Identifier	qname		126617	0					
ANR	126623	Identifier	NULL		126617	1					
ANR	126624	ExpressionStatement	property_Ids = NULL	47:15:1265:1285	126617	1	True				
ANR	126625	AssignmentExpression	property_Ids = NULL		126617	0		=			
ANR	126626	Identifier	property_Ids		126617	0					
ANR	126627	Identifier	NULL		126617	1					
ANR	126628	ExpressionStatement	isValidIds = true	49:12:1313:1331	126617	2	True				
ANR	126629	AssignmentExpression	isValidIds = true		126617	0		=			
ANR	126630	Identifier	isValidIds		126617	0					
ANR	126631	Identifier	true		126617	1					
ANR	126632	ExpressionStatement	isValidPartialMatches = true	51:12:1358:1387	126617	3	True				
ANR	126633	AssignmentExpression	isValidPartialMatches = true		126617	0		=			
ANR	126634	Identifier	isValidPartialMatches		126617	0					
ANR	126635	Identifier	true		126617	1					
ANR	126636	ExpressionStatement	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""GetJobStatus"" , ""http://query.aviary.grid.redhat.com"" , NULL )"	53:17:1419:1601	126617	4	True				
ANR	126637	AssignmentExpression	"qname = axutil_qname_create ( Environment :: getEnv ( ) , ""GetJobStatus"" , ""http://query.aviary.grid.redhat.com"" , NULL )"		126617	0		=			
ANR	126638	Identifier	qname		126617	0					
ANR	126639	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""GetJobStatus"" , ""http://query.aviary.grid.redhat.com"" , NULL )"		126617	1					
ANR	126640	Callee	axutil_qname_create		126617	0					
ANR	126641	Identifier	axutil_qname_create		126617	0					
ANR	126642	ArgumentList	Environment :: getEnv ( )		126617	1					
ANR	126643	Argument	Environment :: getEnv ( )		126617	0					
ANR	126644	CallExpression	Environment :: getEnv ( )		126617	0					
ANR	126645	Callee	Environment :: getEnv		126617	0					
ANR	126646	Identifier	Environment :: getEnv		126617	0					
ANR	126647	ArgumentList			126617	1					
ANR	126648	Argument	"""GetJobStatus"""		126617	1					
ANR	126649	PrimaryExpression	"""GetJobStatus"""		126617	0					
ANR	126650	Argument	"""http://query.aviary.grid.redhat.com"""		126617	2					
ANR	126651	PrimaryExpression	"""http://query.aviary.grid.redhat.com"""		126617	0					
ANR	126652	Argument	NULL		126617	3					
ANR	126653	Identifier	NULL		126617	0					
ANR	126654	ExpressionStatement	property_Ids = arg_Ids	58:20:1639:1661	126617	5	True				
ANR	126655	AssignmentExpression	property_Ids = arg_Ids		126617	0		=			
ANR	126656	Identifier	property_Ids		126617	0					
ANR	126657	Identifier	arg_Ids		126617	1					
ANR	126658	ExpressionStatement	property_PartialMatches = arg_PartialMatches	60:20:1696:1740	126617	6	True				
ANR	126659	AssignmentExpression	property_PartialMatches = arg_PartialMatches		126617	0		=			
ANR	126660	Identifier	property_PartialMatches		126617	0					
ANR	126661	Identifier	arg_PartialMatches		126617	1					
ANR	126662	Identifier	AviaryQuery :: GetJobStatus :: GetJobStatus		126617	1					
ANR	126663	ParameterList	"std :: vector < AviaryCommon :: JobID * > * arg_Ids , bool arg_PartialMatches"		126617	2					
ANR	126664	Parameter	std :: vector < AviaryCommon :: JobID * > * arg_Ids	42:47:1111:1152	126617	0	True				
ANR	126665	ParameterType	std :: vector < AviaryCommon :: JobID * > *		126617	0					
ANR	126666	Identifier	arg_Ids		126617	1					
ANR	126667	Parameter	bool arg_PartialMatches	42:90:1154:1176	126617	1	True				
ANR	126668	ParameterType	bool		126617	0					
ANR	126669	Identifier	arg_PartialMatches		126617	1					
ANR	126670	CFGEntryNode	ENTRY		126617		True				
ANR	126671	CFGExitNode	EXIT		126617		True				
ANR	126672	Symbol	Environment :: getEnv		126617						
ANR	126673	Symbol	arg_Ids		126617						
ANR	126674	Symbol	NULL		126617						
ANR	126675	Symbol	property_Ids		126617						
ANR	126676	Symbol	isValidIds		126617						
ANR	126677	Symbol	arg_PartialMatches		126617						
ANR	126678	Symbol	qname		126617						
ANR	126679	Symbol	property_PartialMatches		126617						
ANR	126680	Symbol	true		126617						
ANR	126681	Symbol	axutil_qname_create		126617						
ANR	126682	Symbol	isValidPartialMatches		126617						
ANR	126683	Function	AviaryQuery :: GetJobStatus :: ~GetJobStatus	63:8:1773:2078							
ANR	126684	FunctionDef	AviaryQuery :: GetJobStatus :: ~GetJobStatus ()		126683	0					
ANR	126685	CompoundStatement		64:8:1824:2078	126683	0					
ANR	126686	IfStatement	if ( property_Ids )		126683	0					
ANR	126687	Condition	property_Ids	65:16:1842:1853	126683	0	True				
ANR	126688	Identifier	property_Ids		126683	0					
ANR	126689	CompoundStatement		2:30:31:31	126683	1					
ANR	126690	WhileStatement	while ( ! property_Ids -> empty ( ) )		126683	0					
ANR	126691	Condition	! property_Ids -> empty ( )	66:22:1880:1901	126683	0	True				
ANR	126692	UnaryOperationExpression	! property_Ids -> empty ( )		126683	0					
ANR	126693	UnaryOperator	!		126683	0					
ANR	126694	CallExpression	property_Ids -> empty ( )		126683	1					
ANR	126695	Callee	property_Ids -> empty		126683	0					
ANR	126696	PtrMemberAccess	property_Ids -> empty		126683	0					
ANR	126697	Identifier	property_Ids		126683	0					
ANR	126698	Identifier	empty		126683	1					
ANR	126699	ArgumentList			126683	1					
ANR	126700	Statement	delete	66:46:1904:1909	126683	1	True				
ANR	126701	ExpressionStatement	"property_Ids -> back ( ) , property_Ids -> pop_back ( )"	66:53:1911:1957	126683	1	True				
ANR	126702	Expression	"property_Ids -> back ( ) , property_Ids -> pop_back ( )"		126683	0					
ANR	126703	CallExpression	property_Ids -> back ( )		126683	0					
ANR	126704	Callee	property_Ids -> back		126683	0					
ANR	126705	PtrMemberAccess	property_Ids -> back		126683	0					
ANR	126706	Identifier	property_Ids		126683	0					
ANR	126707	Identifier	back		126683	1					
ANR	126708	ArgumentList			126683	1					
ANR	126709	CallExpression	property_Ids -> pop_back ( )		126683	1					
ANR	126710	Callee	property_Ids -> pop_back		126683	0					
ANR	126711	PtrMemberAccess	property_Ids -> pop_back		126683	0					
ANR	126712	Identifier	property_Ids		126683	0					
ANR	126713	Identifier	pop_back		126683	1					
ANR	126714	ArgumentList			126683	1					
ANR	126715	Statement	delete	67:16:1975:1980	126683	2	True				
ANR	126716	ExpressionStatement	property_Ids	67:23:1982:1994	126683	3	True				
ANR	126717	Identifier	property_Ids		126683	0					
ANR	126718	ExpressionStatement	"axutil_qname_free ( qname , Environment :: getEnv ( ) )"	69:12:2022:2068	126683	1	True				
ANR	126719	CallExpression	"axutil_qname_free ( qname , Environment :: getEnv ( ) )"		126683	0					
ANR	126720	Callee	axutil_qname_free		126683	0					
ANR	126721	Identifier	axutil_qname_free		126683	0					
ANR	126722	ArgumentList	qname		126683	1					
ANR	126723	Argument	qname		126683	0					
ANR	126724	Identifier	qname		126683	0					
ANR	126725	Argument	Environment :: getEnv ( )		126683	1					
ANR	126726	CallExpression	Environment :: getEnv ( )		126683	0					
ANR	126727	Callee	Environment :: getEnv		126683	0					
ANR	126728	Identifier	Environment :: getEnv		126683	0					
ANR	126729	ArgumentList			126683	1					
ANR	126730	Identifier	AviaryQuery :: GetJobStatus :: ~GetJobStatus		126683	1					
ANR	126731	ParameterList			126683	2					
ANR	126732	CFGEntryNode	ENTRY		126683		True				
ANR	126733	CFGExitNode	EXIT		126683		True				
ANR	126734	Symbol	Environment :: getEnv		126683						
ANR	126735	Symbol	property_Ids		126683						
ANR	126736	Symbol	* property_Ids		126683						
ANR	126737	Symbol	property_Ids -> empty		126683						
ANR	126738	Symbol	qname		126683						
ANR	126739	Function	AviaryQuery :: GetJobStatus :: deserialize	74:8:2099:12514							
ANR	126740	FunctionDef	"AviaryQuery :: GetJobStatus :: deserialize (axiom_node_t * * dp_parent , bool * dp_is_early_node_valid , bool dont_care_minoccurs)"		126739	0					
ANR	126741	CompoundStatement		76:8:2249:12514	126739	0					
ANR	126742	IdentifierDeclStatement	axiom_node_t * parent = * dp_parent ;	77:10:2261:2294	126739	0	True				
ANR	126743	IdentifierDecl	* parent = * dp_parent		126739	0					
ANR	126744	IdentifierDeclType	axiom_node_t *		126739	0					
ANR	126745	Identifier	parent		126739	1					
ANR	126746	AssignmentExpression	* parent = * dp_parent		126739	2		=			
ANR	126747	Identifier	parent		126739	0					
ANR	126748	UnaryOperationExpression	* dp_parent		126739	1					
ANR	126749	UnaryOperator	*		126739	0					
ANR	126750	Identifier	dp_parent		126739	1					
ANR	126751	IdentifierDeclStatement	bool status = AXIS2_SUCCESS ;	79:10:2317:2344	126739	1	True				
ANR	126752	IdentifierDecl	status = AXIS2_SUCCESS		126739	0					
ANR	126753	IdentifierDeclType	bool		126739	0					
ANR	126754	Identifier	status		126739	1					
ANR	126755	AssignmentExpression	status = AXIS2_SUCCESS		126739	2		=			
ANR	126756	Identifier	AXIS2_SUCCESS		126739	0					
ANR	126757	Identifier	AXIS2_SUCCESS		126739	1					
ANR	126758	IdentifierDeclStatement	axiom_attribute_t * parent_attri = NULL ;	81:10:2367:2405	126739	2	True				
ANR	126759	IdentifierDecl	* parent_attri = NULL		126739	0					
ANR	126760	IdentifierDeclType	axiom_attribute_t *		126739	0					
ANR	126761	Identifier	parent_attri		126739	1					
ANR	126762	AssignmentExpression	* parent_attri = NULL		126739	2		=			
ANR	126763	Identifier	NULL		126739	0					
ANR	126764	Identifier	NULL		126739	1					
ANR	126765	IdentifierDeclStatement	axiom_element_t * parent_element = NULL ;	82:10:2417:2455	126739	3	True				
ANR	126766	IdentifierDecl	* parent_element = NULL		126739	0					
ANR	126767	IdentifierDeclType	axiom_element_t *		126739	0					
ANR	126768	Identifier	parent_element		126739	1					
ANR	126769	AssignmentExpression	* parent_element = NULL		126739	2		=			
ANR	126770	Identifier	NULL		126739	0					
ANR	126771	Identifier	NULL		126739	1					
ANR	126772	IdentifierDeclStatement	axis2_char_t * attrib_text = NULL ;	83:10:2467:2499	126739	4	True				
ANR	126773	IdentifierDecl	* attrib_text = NULL		126739	0					
ANR	126774	IdentifierDeclType	axis2_char_t *		126739	0					
ANR	126775	Identifier	attrib_text		126739	1					
ANR	126776	AssignmentExpression	* attrib_text = NULL		126739	2		=			
ANR	126777	Identifier	NULL		126739	0					
ANR	126778	Identifier	NULL		126739	1					
ANR	126779	IdentifierDeclStatement	axutil_hash_t * attribute_hash = NULL ;	85:10:2512:2548	126739	5	True				
ANR	126780	IdentifierDecl	* attribute_hash = NULL		126739	0					
ANR	126781	IdentifierDeclType	axutil_hash_t *		126739	0					
ANR	126782	Identifier	attribute_hash		126739	1					
ANR	126783	AssignmentExpression	* attribute_hash = NULL		126739	2		=			
ANR	126784	Identifier	NULL		126739	0					
ANR	126785	Identifier	NULL		126739	1					
ANR	126786	IdentifierDeclStatement	const axis2_char_t * text_value = NULL ;	88:9:2572:2609	126739	6	True				
ANR	126787	IdentifierDecl	* text_value = NULL		126739	0					
ANR	126788	IdentifierDeclType	const axis2_char_t *		126739	0					
ANR	126789	Identifier	text_value		126739	1					
ANR	126790	AssignmentExpression	* text_value = NULL		126739	2		=			
ANR	126791	Identifier	NULL		126739	0					
ANR	126792	Identifier	NULL		126739	1					
ANR	126793	IdentifierDeclStatement	axutil_qname_t * mqname = NULL ;	89:9:2620:2649	126739	7	True				
ANR	126794	IdentifierDecl	* mqname = NULL		126739	0					
ANR	126795	IdentifierDeclType	axutil_qname_t *		126739	0					
ANR	126796	Identifier	mqname		126739	1					
ANR	126797	AssignmentExpression	* mqname = NULL		126739	2		=			
ANR	126798	Identifier	NULL		126739	0					
ANR	126799	Identifier	NULL		126739	1					
ANR	126800	IdentifierDeclStatement	int i = 0 ;	91:15:2677:2686	126739	8	True				
ANR	126801	IdentifierDecl	i = 0		126739	0					
ANR	126802	IdentifierDeclType	int		126739	0					
ANR	126803	Identifier	i		126739	1					
ANR	126804	AssignmentExpression	i = 0		126739	2		=			
ANR	126805	Identifier	i		126739	0					
ANR	126806	PrimaryExpression	0		126739	1					
ANR	126807	IdentifierDeclStatement	int sequence_broken = 0 ;	93:15:2716:2739	126739	9	True				
ANR	126808	IdentifierDecl	sequence_broken = 0		126739	0					
ANR	126809	IdentifierDeclType	int		126739	0					
ANR	126810	Identifier	sequence_broken		126739	1					
ANR	126811	AssignmentExpression	sequence_broken = 0		126739	2		=			
ANR	126812	Identifier	sequence_broken		126739	0					
ANR	126813	PrimaryExpression	0		126739	1					
ANR	126814	IdentifierDeclStatement	axiom_node_t * tmp_node = NULL ;	94:15:2756:2785	126739	10	True				
ANR	126815	IdentifierDecl	* tmp_node = NULL		126739	0					
ANR	126816	IdentifierDeclType	axiom_node_t *		126739	0					
ANR	126817	Identifier	tmp_node		126739	1					
ANR	126818	AssignmentExpression	* tmp_node = NULL		126739	2		=			
ANR	126819	Identifier	NULL		126739	0					
ANR	126820	Identifier	NULL		126739	1					
ANR	126821	IdentifierDeclStatement	axutil_qname_t * element_qname = NULL ;	96:12:2812:2848	126739	11	True				
ANR	126822	IdentifierDecl	* element_qname = NULL		126739	0					
ANR	126823	IdentifierDeclType	axutil_qname_t *		126739	0					
ANR	126824	Identifier	element_qname		126739	1					
ANR	126825	AssignmentExpression	* element_qname = NULL		126739	2		=			
ANR	126826	Identifier	NULL		126739	0					
ANR	126827	Identifier	NULL		126739	1					
ANR	126828	IdentifierDeclStatement	axiom_node_t * first_node = NULL ;	98:15:2879:2910	126739	12	True				
ANR	126829	IdentifierDecl	* first_node = NULL		126739	0					
ANR	126830	IdentifierDeclType	axiom_node_t *		126739	0					
ANR	126831	Identifier	first_node		126739	1					
ANR	126832	AssignmentExpression	* first_node = NULL		126739	2		=			
ANR	126833	Identifier	NULL		126739	0					
ANR	126834	Identifier	NULL		126739	1					
ANR	126835	IdentifierDeclStatement	bool is_early_node_valid = true ;	99:15:2927:2958	126739	13	True				
ANR	126836	IdentifierDecl	is_early_node_valid = true		126739	0					
ANR	126837	IdentifierDeclType	bool		126739	0					
ANR	126838	Identifier	is_early_node_valid		126739	1					
ANR	126839	AssignmentExpression	is_early_node_valid = true		126739	2		=			
ANR	126840	Identifier	true		126739	0					
ANR	126841	Identifier	true		126739	1					
ANR	126842	IdentifierDeclStatement	axiom_node_t * current_node = NULL ;	100:15:2975:3008	126739	14	True				
ANR	126843	IdentifierDecl	* current_node = NULL		126739	0					
ANR	126844	IdentifierDeclType	axiom_node_t *		126739	0					
ANR	126845	Identifier	current_node		126739	1					
ANR	126846	AssignmentExpression	* current_node = NULL		126739	2		=			
ANR	126847	Identifier	NULL		126739	0					
ANR	126848	Identifier	NULL		126739	1					
ANR	126849	IdentifierDeclStatement	axiom_element_t * current_element = NULL ;	101:15:3025:3064	126739	15	True				
ANR	126850	IdentifierDecl	* current_element = NULL		126739	0					
ANR	126851	IdentifierDeclType	axiom_element_t *		126739	0					
ANR	126852	Identifier	current_element		126739	1					
ANR	126853	AssignmentExpression	* current_element = NULL		126739	2		=			
ANR	126854	Identifier	NULL		126739	0					
ANR	126855	Identifier	NULL		126739	1					
ANR	126856	WhileStatement	"while ( parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		126739	16					
ANR	126857	Condition	"parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	104:20:3114:3195	126739	0	True				
ANR	126858	AndExpression	"parent && axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		126739	0		&&			
ANR	126859	Identifier	parent		126739	0					
ANR	126860	EqualityExpression	"axiom_node_get_node_type ( parent , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		126739	1		!=			
ANR	126861	CallExpression	"axiom_node_get_node_type ( parent , Environment :: getEnv ( ) )"		126739	0					
ANR	126862	Callee	axiom_node_get_node_type		126739	0					
ANR	126863	Identifier	axiom_node_get_node_type		126739	0					
ANR	126864	ArgumentList	parent		126739	1					
ANR	126865	Argument	parent		126739	0					
ANR	126866	Identifier	parent		126739	0					
ANR	126867	Argument	Environment :: getEnv ( )		126739	1					
ANR	126868	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	126869	Callee	Environment :: getEnv		126739	0					
ANR	126870	Identifier	Environment :: getEnv		126739	0					
ANR	126871	ArgumentList			126739	1					
ANR	126872	Identifier	AXIOM_ELEMENT		126739	1					
ANR	126873	CompoundStatement		30:14:962:962	126739	1					
ANR	126874	ExpressionStatement	"parent = axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"	106:18:3232:3299	126739	0	True				
ANR	126875	AssignmentExpression	"parent = axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"		126739	0		=			
ANR	126876	Identifier	parent		126739	0					
ANR	126877	CallExpression	"axiom_node_get_next_sibling ( parent , Environment :: getEnv ( ) )"		126739	1					
ANR	126878	Callee	axiom_node_get_next_sibling		126739	0					
ANR	126879	Identifier	axiom_node_get_next_sibling		126739	0					
ANR	126880	ArgumentList	parent		126739	1					
ANR	126881	Argument	parent		126739	0					
ANR	126882	Identifier	parent		126739	0					
ANR	126883	Argument	Environment :: getEnv ( )		126739	1					
ANR	126884	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	126885	Callee	Environment :: getEnv		126739	0					
ANR	126886	Identifier	Environment :: getEnv		126739	0					
ANR	126887	ArgumentList			126739	1					
ANR	126888	IfStatement	if ( NULL == parent )		126739	17					
ANR	126889	Condition	NULL == parent	108:18:3335:3348	126739	0	True				
ANR	126890	EqualityExpression	NULL == parent		126739	0		==			
ANR	126891	Identifier	NULL		126739	0					
ANR	126892	Identifier	parent		126739	1					
ANR	126893	CompoundStatement		34:14:1115:1115	126739	1					
ANR	126894	ReturnStatement	return AXIS2_FAILURE ;	110:16:3386:3406	126739	0	True				
ANR	126895	Identifier	AXIS2_FAILURE		126739	0					
ANR	126896	ExpressionStatement	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"	114:20:3460:3555	126739	18	True				
ANR	126897	AssignmentExpression	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		126739	0		=			
ANR	126898	Identifier	current_element		126739	0					
ANR	126899	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		126739	1					
ANR	126900	CastTarget	axiom_element_t *		126739	0					
ANR	126901	CallExpression	"axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		126739	1					
ANR	126902	Callee	axiom_node_get_data_element		126739	0					
ANR	126903	Identifier	axiom_node_get_data_element		126739	0					
ANR	126904	ArgumentList	parent		126739	1					
ANR	126905	Argument	parent		126739	0					
ANR	126906	Identifier	parent		126739	0					
ANR	126907	Argument	Environment :: getEnv ( )		126739	1					
ANR	126908	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	126909	Callee	Environment :: getEnv		126739	0					
ANR	126910	Identifier	Environment :: getEnv		126739	0					
ANR	126911	ArgumentList			126739	1					
ANR	126912	ExpressionStatement	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , parent )"	115:20:3577:3657	126739	19	True				
ANR	126913	AssignmentExpression	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , parent )"		126739	0		=			
ANR	126914	Identifier	mqname		126739	0					
ANR	126915	CallExpression	"axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , parent )"		126739	1					
ANR	126916	Callee	axiom_element_get_qname		126739	0					
ANR	126917	Identifier	axiom_element_get_qname		126739	0					
ANR	126918	ArgumentList	current_element		126739	1					
ANR	126919	Argument	current_element		126739	0					
ANR	126920	Identifier	current_element		126739	0					
ANR	126921	Argument	Environment :: getEnv ( )		126739	1					
ANR	126922	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	126923	Callee	Environment :: getEnv		126739	0					
ANR	126924	Identifier	Environment :: getEnv		126739	0					
ANR	126925	ArgumentList			126739	1					
ANR	126926	Argument	parent		126739	2					
ANR	126927	Identifier	parent		126739	0					
ANR	126928	IfStatement	"if ( axutil_qname_equals ( mqname , Environment :: getEnv ( ) , this -> qname ) )"		126739	20					
ANR	126929	Condition	"axutil_qname_equals ( mqname , Environment :: getEnv ( ) , this -> qname )"	116:24:3683:3745	126739	0	True				
ANR	126930	CallExpression	"axutil_qname_equals ( mqname , Environment :: getEnv ( ) , this -> qname )"		126739	0					
ANR	126931	Callee	axutil_qname_equals		126739	0					
ANR	126932	Identifier	axutil_qname_equals		126739	0					
ANR	126933	ArgumentList	mqname		126739	1					
ANR	126934	Argument	mqname		126739	0					
ANR	126935	Identifier	mqname		126739	0					
ANR	126936	Argument	Environment :: getEnv ( )		126739	1					
ANR	126937	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	126938	Callee	Environment :: getEnv		126739	0					
ANR	126939	Identifier	Environment :: getEnv		126739	0					
ANR	126940	ArgumentList			126739	1					
ANR	126941	Argument	this -> qname		126739	2					
ANR	126942	PtrMemberAccess	this -> qname		126739	0					
ANR	126943	Identifier	this		126739	0					
ANR	126944	Identifier	qname		126739	1					
ANR	126945	CompoundStatement		42:20:1518:1518	126739	1					
ANR	126946	ExpressionStatement	"first_node = axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"	119:26:3821:3891	126739	0	True				
ANR	126947	AssignmentExpression	"first_node = axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"		126739	0		=			
ANR	126948	Identifier	first_node		126739	0					
ANR	126949	CallExpression	"axiom_node_get_first_child ( parent , Environment :: getEnv ( ) )"		126739	1					
ANR	126950	Callee	axiom_node_get_first_child		126739	0					
ANR	126951	Identifier	axiom_node_get_first_child		126739	0					
ANR	126952	ArgumentList	parent		126739	1					
ANR	126953	Argument	parent		126739	0					
ANR	126954	Identifier	parent		126739	0					
ANR	126955	Argument	Environment :: getEnv ( )		126739	1					
ANR	126956	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	126957	Callee	Environment :: getEnv		126739	0					
ANR	126958	Identifier	Environment :: getEnv		126739	0					
ANR	126959	ArgumentList			126739	1					
ANR	126960	ElseStatement	else		126739	0					
ANR	126961	CompoundStatement		48:20:1737:1737	126739	0					
ANR	126962	Statement	WSF_LOG_ERROR_MSG	124:24:4013:4029	126739	0	True				
ANR	126963	Statement	(	124:41:4030:4030	126739	1	True				
ANR	126964	Statement	Environment	124:42:4031:4041	126739	2	True				
ANR	126965	Statement	::	124:53:4042:4043	126739	3	True				
ANR	126966	Statement	getEnv	124:55:4044:4049	126739	4	True				
ANR	126967	Statement	(	124:61:4050:4050	126739	5	True				
ANR	126968	Statement	)	124:62:4051:4051	126739	6	True				
ANR	126969	Statement	->	124:63:4052:4053	126739	7	True				
ANR	126970	Statement	log	124:65:4054:4056	126739	8	True				
ANR	126971	Statement	","	124:68:4057:4057	126739	9	True				
ANR	126972	Statement	WSF_LOG_SI	124:70:4059:4068	126739	10	True				
ANR	126973	Statement	","	124:80:4069:4069	126739	11	True				
ANR	126974	Statement	"""Failed in building adb object for GetJobStatus : """	125:30:4101:4151	126739	12	True				
ANR	126975	Statement	"""Expected %s but returned %s"""	126:30:4183:4211	126739	13	True				
ANR	126976	Statement	","	126:59:4212:4212	126739	14	True				
ANR	126977	Statement	axutil_qname_to_string	127:30:4244:4265	126739	15	True				
ANR	126978	Statement	(	127:52:4266:4266	126739	16	True				
ANR	126979	Statement	qname	127:53:4267:4271	126739	17	True				
ANR	126980	Statement	","	127:58:4272:4272	126739	18	True				
ANR	126981	Statement	Environment	127:60:4274:4284	126739	19	True				
ANR	126982	Statement	::	127:71:4285:4286	126739	20	True				
ANR	126983	Statement	getEnv	127:73:4287:4292	126739	21	True				
ANR	126984	Statement	(	127:79:4293:4293	126739	22	True				
ANR	126985	Statement	)	127:80:4294:4294	126739	23	True				
ANR	126986	Statement	)	127:81:4295:4295	126739	24	True				
ANR	126987	Statement	","	127:82:4296:4296	126739	25	True				
ANR	126988	Statement	axutil_qname_to_string	128:30:4328:4349	126739	26	True				
ANR	126989	Statement	(	128:52:4350:4350	126739	27	True				
ANR	126990	Statement	mqname	128:53:4351:4356	126739	28	True				
ANR	126991	Statement	","	128:59:4357:4357	126739	29	True				
ANR	126992	Statement	Environment	128:61:4359:4369	126739	30	True				
ANR	126993	Statement	::	128:72:4370:4371	126739	31	True				
ANR	126994	Statement	getEnv	128:74:4372:4377	126739	32	True				
ANR	126995	Statement	(	128:80:4378:4378	126739	33	True				
ANR	126996	Statement	)	128:81:4379:4379	126739	34	True				
ANR	126997	Statement	)	128:82:4380:4380	126739	35	True				
ANR	126998	Statement	)	128:83:4381:4381	126739	36	True				
ANR	126999	ExpressionStatement		128:84:4382:4382	126739	37	True				
ANR	127000	ReturnStatement	return AXIS2_FAILURE ;	130:24:4433:4453	126739	38	True				
ANR	127001	Identifier	AXIS2_FAILURE		126739	0					
ANR	127002	ExpressionStatement	"parent_element = ( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"	133:17:4515:4609	126739	21	True				
ANR	127003	AssignmentExpression	"parent_element = ( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		126739	0		=			
ANR	127004	Identifier	parent_element		126739	0					
ANR	127005	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		126739	1					
ANR	127006	CastTarget	axiom_element_t *		126739	0					
ANR	127007	CallExpression	"axiom_node_get_data_element ( parent , Environment :: getEnv ( ) )"		126739	1					
ANR	127008	Callee	axiom_node_get_data_element		126739	0					
ANR	127009	Identifier	axiom_node_get_data_element		126739	0					
ANR	127010	ArgumentList	parent		126739	1					
ANR	127011	Argument	parent		126739	0					
ANR	127012	Identifier	parent		126739	0					
ANR	127013	Argument	Environment :: getEnv ( )		126739	1					
ANR	127014	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	127015	Callee	Environment :: getEnv		126739	0					
ANR	127016	Identifier	Environment :: getEnv		126739	0					
ANR	127017	ArgumentList			126739	1					
ANR	127018	ExpressionStatement	"attribute_hash = axiom_element_get_all_attributes ( parent_element , Environment :: getEnv ( ) )"	134:17:4628:4716	126739	22	True				
ANR	127019	AssignmentExpression	"attribute_hash = axiom_element_get_all_attributes ( parent_element , Environment :: getEnv ( ) )"		126739	0		=			
ANR	127020	Identifier	attribute_hash		126739	0					
ANR	127021	CallExpression	"axiom_element_get_all_attributes ( parent_element , Environment :: getEnv ( ) )"		126739	1					
ANR	127022	Callee	axiom_element_get_all_attributes		126739	0					
ANR	127023	Identifier	axiom_element_get_all_attributes		126739	0					
ANR	127024	ArgumentList	parent_element		126739	1					
ANR	127025	Argument	parent_element		126739	0					
ANR	127026	Identifier	parent_element		126739	0					
ANR	127027	Argument	Environment :: getEnv ( )		126739	1					
ANR	127028	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	127029	Callee	Environment :: getEnv		126739	0					
ANR	127030	Identifier	Environment :: getEnv		126739	0					
ANR	127031	ArgumentList			126739	1					
ANR	127032	CompoundStatement		65:23:2621:2705	126739	23					
ANR	127033	IdentifierDeclStatement	std :: vector < AviaryCommon :: JobID * > * arr_list = new std :: vector < AviaryCommon :: JobID * > ( ) ;	140:23:4871:4955	126739	0	True				
ANR	127034	IdentifierDecl	* arr_list = new std :: vector < AviaryCommon :: JobID * > ( )		126739	0					
ANR	127035	IdentifierDeclType	std :: vector < AviaryCommon :: JobID * > *		126739	0					
ANR	127036	Identifier	arr_list		126739	1					
ANR	127037	AssignmentExpression	* arr_list = new std :: vector < AviaryCommon :: JobID * > ( )		126739	2		=			
ANR	127038	Identifier	arr_list		126739	0					
ANR	127039	UnaryExpression	new std :: vector < AviaryCommon :: JobID * > ( )		126739	1					
ANR	127040	ExpressionStatement	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""ids"" , NULL , NULL )"	150:36:5196:5273	126739	1	True				
ANR	127041	AssignmentExpression	"element_qname = axutil_qname_create ( Environment :: getEnv ( ) , ""ids"" , NULL , NULL )"		126739	0		=			
ANR	127042	Identifier	element_qname		126739	0					
ANR	127043	CallExpression	"axutil_qname_create ( Environment :: getEnv ( ) , ""ids"" , NULL , NULL )"		126739	1					
ANR	127044	Callee	axutil_qname_create		126739	0					
ANR	127045	Identifier	axutil_qname_create		126739	0					
ANR	127046	ArgumentList	Environment :: getEnv ( )		126739	1					
ANR	127047	Argument	Environment :: getEnv ( )		126739	0					
ANR	127048	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	127049	Callee	Environment :: getEnv		126739	0					
ANR	127050	Identifier	Environment :: getEnv		126739	0					
ANR	127051	ArgumentList			126739	1					
ANR	127052	Argument	"""ids"""		126739	1					
ANR	127053	PrimaryExpression	"""ids"""		126739	0					
ANR	127054	Argument	NULL		126739	2					
ANR	127055	Identifier	NULL		126739	0					
ANR	127056	Argument	NULL		126739	3					
ANR	127057	Identifier	NULL		126739	0					
ANR	127058	ForStatement	"for ( i = 0 , sequence_broken = 0 , current_node = first_node ; ! sequence_broken && current_node != NULL ; )"		126739	2					
ANR	127059	ForInit	"i = 0 , sequence_broken = 0 , current_node = first_node ;"	153:36:5378:5431	126739	0	True				
ANR	127060	Expression	"i = 0 , sequence_broken = 0 , current_node = first_node"		126739	0					
ANR	127061	AssignmentExpression	i = 0		126739	0		=			
ANR	127062	Identifier	i		126739	0					
ANR	127063	PrimaryExpression	0		126739	1					
ANR	127064	Expression	"sequence_broken = 0 , current_node = first_node"		126739	1					
ANR	127065	AssignmentExpression	sequence_broken = 0		126739	0		=			
ANR	127066	Identifier	sequence_broken		126739	0					
ANR	127067	PrimaryExpression	0		126739	1					
ANR	127068	AssignmentExpression	current_node = first_node		126739	1		=			
ANR	127069	Identifier	current_node		126739	0					
ANR	127070	Identifier	first_node		126739	1					
ANR	127071	Condition	! sequence_broken && current_node != NULL	153:91:5433:5472	126739	1	True				
ANR	127072	AndExpression	! sequence_broken && current_node != NULL		126739	0		&&			
ANR	127073	UnaryOperationExpression	! sequence_broken		126739	0					
ANR	127074	UnaryOperator	!		126739	0					
ANR	127075	Identifier	sequence_broken		126739	1					
ANR	127076	EqualityExpression	current_node != NULL		126739	1		!=			
ANR	127077	Identifier	current_node		126739	0					
ANR	127078	Identifier	NULL		126739	1					
ANR	127079	CompoundStatement		80:31:3303:3303	126739	2					
ANR	127080	IfStatement	"if ( axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT )"		126739	0					
ANR	127081	Condition	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"	156:37:5592:5669	126739	0	True				
ANR	127082	EqualityExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) ) != AXIOM_ELEMENT"		126739	0		!=			
ANR	127083	CallExpression	"axiom_node_get_node_type ( current_node , Environment :: getEnv ( ) )"		126739	0					
ANR	127084	Callee	axiom_node_get_node_type		126739	0					
ANR	127085	Identifier	axiom_node_get_node_type		126739	0					
ANR	127086	ArgumentList	current_node		126739	1					
ANR	127087	Argument	current_node		126739	0					
ANR	127088	Identifier	current_node		126739	0					
ANR	127089	Argument	Environment :: getEnv ( )		126739	1					
ANR	127090	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	127091	Callee	Environment :: getEnv		126739	0					
ANR	127092	Identifier	Environment :: getEnv		126739	0					
ANR	127093	ArgumentList			126739	1					
ANR	127094	Identifier	AXIOM_ELEMENT		126739	1					
ANR	127095	CompoundStatement		82:34:3456:3456	126739	1					
ANR	127096	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	158:37:5745:5823	126739	0	True				
ANR	127097	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		126739	0		=			
ANR	127098	Identifier	current_node		126739	0					
ANR	127099	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		126739	1					
ANR	127100	Callee	axiom_node_get_next_sibling		126739	0					
ANR	127101	Identifier	axiom_node_get_next_sibling		126739	0					
ANR	127102	ArgumentList	current_node		126739	1					
ANR	127103	Argument	current_node		126739	0					
ANR	127104	Identifier	current_node		126739	0					
ANR	127105	Argument	Environment :: getEnv ( )		126739	1					
ANR	127106	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	127107	Callee	Environment :: getEnv		126739	0					
ANR	127108	Identifier	Environment :: getEnv		126739	0					
ANR	127109	ArgumentList			126739	1					
ANR	127110	ExpressionStatement	is_early_node_valid = false	159:37:5862:5889	126739	1	True				
ANR	127111	AssignmentExpression	is_early_node_valid = false		126739	0		=			
ANR	127112	Identifier	is_early_node_valid		126739	0					
ANR	127113	Identifier	false		126739	1					
ANR	127114	ContinueStatement	continue ;	160:37:5928:5936	126739	2	True				
ANR	127115	ExpressionStatement	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"	163:34:6043:6144	126739	1	True				
ANR	127116	AssignmentExpression	"current_element = ( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		126739	0		=			
ANR	127117	Identifier	current_element		126739	0					
ANR	127118	CastExpression	"( axiom_element_t * ) axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		126739	1					
ANR	127119	CastTarget	axiom_element_t *		126739	0					
ANR	127120	CallExpression	"axiom_node_get_data_element ( current_node , Environment :: getEnv ( ) )"		126739	1					
ANR	127121	Callee	axiom_node_get_data_element		126739	0					
ANR	127122	Identifier	axiom_node_get_data_element		126739	0					
ANR	127123	ArgumentList	current_node		126739	1					
ANR	127124	Argument	current_node		126739	0					
ANR	127125	Identifier	current_node		126739	0					
ANR	127126	Argument	Environment :: getEnv ( )		126739	1					
ANR	127127	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	127128	Callee	Environment :: getEnv		126739	0					
ANR	127129	Identifier	Environment :: getEnv		126739	0					
ANR	127130	ArgumentList			126739	1					
ANR	127131	ExpressionStatement	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"	164:34:6180:6266	126739	2	True				
ANR	127132	AssignmentExpression	"mqname = axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		126739	0		=			
ANR	127133	Identifier	mqname		126739	0					
ANR	127134	CallExpression	"axiom_element_get_qname ( current_element , Environment :: getEnv ( ) , current_node )"		126739	1					
ANR	127135	Callee	axiom_element_get_qname		126739	0					
ANR	127136	Identifier	axiom_element_get_qname		126739	0					
ANR	127137	ArgumentList	current_element		126739	1					
ANR	127138	Argument	current_element		126739	0					
ANR	127139	Identifier	current_element		126739	0					
ANR	127140	Argument	Environment :: getEnv ( )		126739	1					
ANR	127141	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	127142	Callee	Environment :: getEnv		126739	0					
ANR	127143	Identifier	Environment :: getEnv		126739	0					
ANR	127144	ArgumentList			126739	1					
ANR	127145	Argument	current_node		126739	2					
ANR	127146	Identifier	current_node		126739	0					
ANR	127147	IfStatement	"if ( axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""ids"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) ) )"		126739	3					
ANR	127148	Condition	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""ids"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"	166:38:6307:6465	126739	0	True				
ANR	127149	OrExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname ) || ! axutil_strcmp ( ""ids"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		126739	0		||			
ANR	127150	CallExpression	"axutil_qname_equals ( element_qname , Environment :: getEnv ( ) , mqname )"		126739	0					
ANR	127151	Callee	axutil_qname_equals		126739	0					
ANR	127152	Identifier	axutil_qname_equals		126739	0					
ANR	127153	ArgumentList	element_qname		126739	1					
ANR	127154	Argument	element_qname		126739	0					
ANR	127155	Identifier	element_qname		126739	0					
ANR	127156	Argument	Environment :: getEnv ( )		126739	1					
ANR	127157	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	127158	Callee	Environment :: getEnv		126739	0					
ANR	127159	Identifier	Environment :: getEnv		126739	0					
ANR	127160	ArgumentList			126739	1					
ANR	127161	Argument	mqname		126739	2					
ANR	127162	Identifier	mqname		126739	0					
ANR	127163	UnaryOperationExpression	"! axutil_strcmp ( ""ids"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		126739	1					
ANR	127164	UnaryOperator	!		126739	0					
ANR	127165	CallExpression	"axutil_strcmp ( ""ids"" , axiom_element_get_localname ( current_element , Environment :: getEnv ( ) ) )"		126739	1					
ANR	127166	Callee	axutil_strcmp		126739	0					
ANR	127167	Identifier	axutil_strcmp		126739	0					
ANR	127168	ArgumentList	"""ids"""		126739	1					
ANR	127169	Argument	"""ids"""		126739	0					
ANR	127170	PrimaryExpression	"""ids"""		126739	0					
ANR	127171	Argument	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		126739	1					
ANR	127172	CallExpression	"axiom_element_get_localname ( current_element , Environment :: getEnv ( ) )"		126739	0					
ANR	127173	Callee	axiom_element_get_localname		126739	0					
ANR	127174	Identifier	axiom_element_get_localname		126739	0					
ANR	127175	ArgumentList	current_element		126739	1					
ANR	127176	Argument	current_element		126739	0					
ANR	127177	Identifier	current_element		126739	0					
ANR	127178	Argument	Environment :: getEnv ( )		126739	1					
ANR	127179	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	127180	Callee	Environment :: getEnv		126739	0					
ANR	127181	Identifier	Environment :: getEnv		126739	0					
ANR	127182	ArgumentList			126739	1					
ANR	127183	CompoundStatement		96:37:4431:4487	126739	1					
ANR	127184	ExpressionStatement	is_early_node_valid = true	169:38:6577:6603	126739	0	True				
ANR	127185	AssignmentExpression	is_early_node_valid = true		126739	0		=			
ANR	127186	Identifier	is_early_node_valid		126739	0					
ANR	127187	Identifier	true		126739	1					
ANR	127188	IdentifierDeclStatement	AviaryCommon :: JobID * element = new AviaryCommon :: JobID ( ) ;	171:37:6681:6737	126739	1	True				
ANR	127189	IdentifierDecl	* element = new AviaryCommon :: JobID ( )		126739	0					
ANR	127190	IdentifierDeclType	AviaryCommon :: JobID *		126739	0					
ANR	127191	Identifier	element		126739	1					
ANR	127192	AssignmentExpression	* element = new AviaryCommon :: JobID ( )		126739	2		=			
ANR	127193	Identifier	element		126739	0					
ANR	127194	UnaryExpression	new AviaryCommon :: JobID ( )		126739	1					
ANR	127195	ExpressionStatement	"status = element -> deserialize ( & current_node , & is_early_node_valid , false )"	173:42:6824:6898	126739	2	True				
ANR	127196	AssignmentExpression	"status = element -> deserialize ( & current_node , & is_early_node_valid , false )"		126739	0		=			
ANR	127197	Identifier	status		126739	0					
ANR	127198	CallExpression	"element -> deserialize ( & current_node , & is_early_node_valid , false )"		126739	1					
ANR	127199	Callee	element -> deserialize		126739	0					
ANR	127200	PtrMemberAccess	element -> deserialize		126739	0					
ANR	127201	Identifier	element		126739	0					
ANR	127202	Identifier	deserialize		126739	1					
ANR	127203	ArgumentList	& current_node		126739	1					
ANR	127204	Argument	& current_node		126739	0					
ANR	127205	UnaryOperationExpression	& current_node		126739	0					
ANR	127206	UnaryOperator	&		126739	0					
ANR	127207	Identifier	current_node		126739	1					
ANR	127208	Argument	& is_early_node_valid		126739	1					
ANR	127209	UnaryOperationExpression	& is_early_node_valid		126739	0					
ANR	127210	UnaryOperator	&		126739	0					
ANR	127211	Identifier	is_early_node_valid		126739	1					
ANR	127212	Argument	false		126739	2					
ANR	127213	Identifier	false		126739	0					
ANR	127214	IfStatement	if ( AXIS2_FAILURE == status )		126739	3					
ANR	127215	Condition	AXIS2_FAILURE == status	175:45:6988:7011	126739	0	True				
ANR	127216	EqualityExpression	AXIS2_FAILURE == status		126739	0		==			
ANR	127217	Identifier	AXIS2_FAILURE		126739	0					
ANR	127218	Identifier	status		126739	1					
ANR	127219	CompoundStatement		101:42:4806:4806	126739	1					
ANR	127220	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in building element ids "" )"	177:7:7065:7156	126739	0	True				
ANR	127221	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in building element ids "" )"		126739	0					
ANR	127222	Callee	WSF_LOG_ERROR_MSG		126739	0					
ANR	127223	Identifier	WSF_LOG_ERROR_MSG		126739	0					
ANR	127224	ArgumentList	Environment :: getEnv ( ) -> log		126739	1					
ANR	127225	Argument	Environment :: getEnv ( ) -> log		126739	0					
ANR	127226	PtrMemberAccess	Environment :: getEnv ( ) -> log		126739	0					
ANR	127227	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	127228	Callee	Environment :: getEnv		126739	0					
ANR	127229	Identifier	Environment :: getEnv		126739	0					
ANR	127230	ArgumentList			126739	1					
ANR	127231	Identifier	log		126739	1					
ANR	127232	Argument	WSF_LOG_SI		126739	1					
ANR	127233	Identifier	WSF_LOG_SI		126739	0					
ANR	127234	Argument	"""failed in building element ids """		126739	2					
ANR	127235	PrimaryExpression	"""failed in building element ids """		126739	0					
ANR	127236	ElseStatement	else		126739	0					
ANR	127237	CompoundStatement		105:42:5041:5041	126739	0					
ANR	127238	ExpressionStatement	arr_list -> push_back ( element )	181:44:7337:7365	126739	0	True				
ANR	127239	CallExpression	arr_list -> push_back ( element )		126739	0					
ANR	127240	Callee	arr_list -> push_back		126739	0					
ANR	127241	PtrMemberAccess	arr_list -> push_back		126739	0					
ANR	127242	Identifier	arr_list		126739	0					
ANR	127243	Identifier	push_back		126739	1					
ANR	127244	ArgumentList	element		126739	1					
ANR	127245	Argument	element		126739	0					
ANR	127246	Identifier	element		126739	0					
ANR	127247	IfStatement	if ( AXIS2_FAILURE == status )		126739	4					
ANR	127248	Condition	AXIS2_FAILURE == status	185:40:7537:7560	126739	0	True				
ANR	127249	EqualityExpression	AXIS2_FAILURE == status		126739	0		==			
ANR	127250	Identifier	AXIS2_FAILURE		126739	0					
ANR	127251	Identifier	status		126739	1					
ANR	127252	CompoundStatement		111:37:5350:5350	126739	1					
ANR	127253	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for ids "" )"	187:41:7643:7740	126739	0	True				
ANR	127254	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""failed in setting the value for ids "" )"		126739	0					
ANR	127255	Callee	WSF_LOG_ERROR_MSG		126739	0					
ANR	127256	Identifier	WSF_LOG_ERROR_MSG		126739	0					
ANR	127257	ArgumentList	Environment :: getEnv ( ) -> log		126739	1					
ANR	127258	Argument	Environment :: getEnv ( ) -> log		126739	0					
ANR	127259	PtrMemberAccess	Environment :: getEnv ( ) -> log		126739	0					
ANR	127260	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	127261	Callee	Environment :: getEnv		126739	0					
ANR	127262	Identifier	Environment :: getEnv		126739	0					
ANR	127263	ArgumentList			126739	1					
ANR	127264	Identifier	log		126739	1					
ANR	127265	Argument	WSF_LOG_SI		126739	1					
ANR	127266	Identifier	WSF_LOG_SI		126739	0					
ANR	127267	Argument	"""failed in setting the value for ids """		126739	2					
ANR	127268	PrimaryExpression	"""failed in setting the value for ids """		126739	0					
ANR	127269	IfStatement	if ( element_qname )		126739	1					
ANR	127270	Condition	element_qname	188:44:7786:7798	126739	0	True				
ANR	127271	Identifier	element_qname		126739	0					
ANR	127272	CompoundStatement		114:41:5592:5592	126739	1					
ANR	127273	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	190:44:7888:7943	126739	0	True				
ANR	127274	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		126739	0					
ANR	127275	Callee	axutil_qname_free		126739	0					
ANR	127276	Identifier	axutil_qname_free		126739	0					
ANR	127277	ArgumentList	element_qname		126739	1					
ANR	127278	Argument	element_qname		126739	0					
ANR	127279	Identifier	element_qname		126739	0					
ANR	127280	Argument	Environment :: getEnv ( )		126739	1					
ANR	127281	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	127282	Callee	Environment :: getEnv		126739	0					
ANR	127283	Identifier	Environment :: getEnv		126739	0					
ANR	127284	ArgumentList			126739	1					
ANR	127285	IfStatement	if ( arr_list )		126739	2					
ANR	127286	Condition	arr_list	192:44:8032:8039	126739	0	True				
ANR	127287	Identifier	arr_list		126739	0					
ANR	127288	CompoundStatement		118:41:5833:5833	126739	1					
ANR	127289	Statement	delete	194:44:8129:8134	126739	0	True				
ANR	127290	ExpressionStatement	arr_list	194:51:8136:8144	126739	1	True				
ANR	127291	Identifier	arr_list		126739	0					
ANR	127292	ReturnStatement	return false ;	196:41:8230:8242	126739	3	True				
ANR	127293	Identifier	false		126739	0					
ANR	127294	ExpressionStatement	i ++	199:37:8321:8324	126739	5	True				
ANR	127295	PostIncDecOperationExpression	i ++		126739	0					
ANR	127296	Identifier	i		126739	0					
ANR	127297	IncDec	++		126739	1					
ANR	127298	ExpressionStatement	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"	200:36:8362:8441	126739	6	True				
ANR	127299	AssignmentExpression	"current_node = axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		126739	0		=			
ANR	127300	Identifier	current_node		126739	0					
ANR	127301	CallExpression	"axiom_node_get_next_sibling ( current_node , Environment :: getEnv ( ) )"		126739	1					
ANR	127302	Callee	axiom_node_get_next_sibling		126739	0					
ANR	127303	Identifier	axiom_node_get_next_sibling		126739	0					
ANR	127304	ArgumentList	current_node		126739	1					
ANR	127305	Argument	current_node		126739	0					
ANR	127306	Identifier	current_node		126739	0					
ANR	127307	Argument	Environment :: getEnv ( )		126739	1					
ANR	127308	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	127309	Callee	Environment :: getEnv		126739	0					
ANR	127310	Identifier	Environment :: getEnv		126739	0					
ANR	127311	ArgumentList			126739	1					
ANR	127312	ElseStatement	else		126739	0					
ANR	127313	CompoundStatement		128:34:6302:6302	126739	0					
ANR	127314	ExpressionStatement	is_early_node_valid = false	204:38:8592:8619	126739	0	True				
ANR	127315	AssignmentExpression	is_early_node_valid = false		126739	0		=			
ANR	127316	Identifier	is_early_node_valid		126739	0					
ANR	127317	Identifier	false		126739	1					
ANR	127318	ExpressionStatement	sequence_broken = 1	205:38:8659:8678	126739	1	True				
ANR	127319	AssignmentExpression	sequence_broken = 1		126739	0		=			
ANR	127320	Identifier	sequence_broken		126739	0					
ANR	127321	PrimaryExpression	1		126739	1					
ANR	127322	IfStatement	if ( i < 0 )		126739	3					
ANR	127323	Condition	i < 0	211:39:8856:8860	126739	0	True				
ANR	127324	RelationalExpression	i < 0		126739	0		<			
ANR	127325	Identifier	i		126739	0					
ANR	127326	PrimaryExpression	0		126739	1					
ANR	127327	CompoundStatement		137:35:6648:6648	126739	1					
ANR	127328	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""ids (@minOccurs = '0') only have %d elements"" , i )"	214:37:9007:9114	126739	0	True				
ANR	127329	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""ids (@minOccurs = '0') only have %d elements"" , i )"		126739	0					
ANR	127330	Callee	WSF_LOG_ERROR_MSG		126739	0					
ANR	127331	Identifier	WSF_LOG_ERROR_MSG		126739	0					
ANR	127332	ArgumentList	Environment :: getEnv ( ) -> log		126739	1					
ANR	127333	Argument	Environment :: getEnv ( ) -> log		126739	0					
ANR	127334	PtrMemberAccess	Environment :: getEnv ( ) -> log		126739	0					
ANR	127335	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	127336	Callee	Environment :: getEnv		126739	0					
ANR	127337	Identifier	Environment :: getEnv		126739	0					
ANR	127338	ArgumentList			126739	1					
ANR	127339	Identifier	log		126739	1					
ANR	127340	Argument	WSF_LOG_SI		126739	1					
ANR	127341	Identifier	WSF_LOG_SI		126739	0					
ANR	127342	Argument	"""ids (@minOccurs = '0') only have %d elements"""		126739	2					
ANR	127343	PrimaryExpression	"""ids (@minOccurs = '0') only have %d elements"""		126739	0					
ANR	127344	Argument	i		126739	3					
ANR	127345	Identifier	i		126739	0					
ANR	127346	IfStatement	if ( element_qname )		126739	1					
ANR	127347	Condition	element_qname	215:40:9156:9168	126739	0	True				
ANR	127348	Identifier	element_qname		126739	0					
ANR	127349	CompoundStatement		141:37:6958:6958	126739	1					
ANR	127350	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	217:40:9250:9305	126739	0	True				
ANR	127351	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		126739	0					
ANR	127352	Callee	axutil_qname_free		126739	0					
ANR	127353	Identifier	axutil_qname_free		126739	0					
ANR	127354	ArgumentList	element_qname		126739	1					
ANR	127355	Argument	element_qname		126739	0					
ANR	127356	Identifier	element_qname		126739	0					
ANR	127357	Argument	Environment :: getEnv ( )		126739	1					
ANR	127358	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	127359	Callee	Environment :: getEnv		126739	0					
ANR	127360	Identifier	Environment :: getEnv		126739	0					
ANR	127361	ArgumentList			126739	1					
ANR	127362	IfStatement	if ( arr_list )		126739	2					
ANR	127363	Condition	arr_list	219:40:9386:9393	126739	0	True				
ANR	127364	Identifier	arr_list		126739	0					
ANR	127365	CompoundStatement		145:37:7183:7183	126739	1					
ANR	127366	Statement	delete	221:40:9475:9480	126739	0	True				
ANR	127367	ExpressionStatement	arr_list	221:47:9482:9490	126739	1	True				
ANR	127368	Identifier	arr_list		126739	0					
ANR	127369	ReturnStatement	return false ;	223:37:9568:9580	126739	3	True				
ANR	127370	Identifier	false		126739	0					
ANR	127371	IfStatement	if ( 0 == arr_list -> size ( ) )		126739	4					
ANR	127372	Condition	0 == arr_list -> size ( )	227:34:9686:9706	126739	0	True				
ANR	127373	EqualityExpression	0 == arr_list -> size ( )		126739	0		==			
ANR	127374	PrimaryExpression	0		126739	0					
ANR	127375	CallExpression	arr_list -> size ( )		126739	1					
ANR	127376	Callee	arr_list -> size		126739	0					
ANR	127377	PtrMemberAccess	arr_list -> size		126739	0					
ANR	127378	Identifier	arr_list		126739	0					
ANR	127379	Identifier	size		126739	1					
ANR	127380	ArgumentList			126739	1					
ANR	127381	CompoundStatement		153:31:7490:7490	126739	1					
ANR	127382	Statement	delete	229:36:9778:9783	126739	0	True				
ANR	127383	ExpressionStatement	arr_list	229:43:9785:9793	126739	1	True				
ANR	127384	Identifier	arr_list		126739	0					
ANR	127385	ElseStatement	else		126739	0					
ANR	127386	CompoundStatement		157:31:7645:7645	126739	0					
ANR	127387	ExpressionStatement	status = setIds ( arr_list )	233:36:9933:9958	126739	0	True				
ANR	127388	AssignmentExpression	status = setIds ( arr_list )		126739	0		=			
ANR	127389	Identifier	status		126739	0					
ANR	127390	CallExpression	setIds ( arr_list )		126739	1					
ANR	127391	Callee	setIds		126739	0					
ANR	127392	Identifier	setIds		126739	0					
ANR	127393	ArgumentList	arr_list		126739	1					
ANR	127394	Argument	arr_list		126739	0					
ANR	127395	Identifier	arr_list		126739	0					
ANR	127396	IfStatement	if ( element_qname )		126739	24					
ANR	127397	Condition	element_qname	239:21:10102:10114	126739	0	True				
ANR	127398	Identifier	element_qname		126739	0					
ANR	127399	CompoundStatement		165:18:7885:7885	126739	1					
ANR	127400	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	241:21:10158:10213	126739	0	True				
ANR	127401	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		126739	0					
ANR	127402	Callee	axutil_qname_free		126739	0					
ANR	127403	Identifier	axutil_qname_free		126739	0					
ANR	127404	ArgumentList	element_qname		126739	1					
ANR	127405	Argument	element_qname		126739	0					
ANR	127406	Identifier	element_qname		126739	0					
ANR	127407	Argument	Environment :: getEnv ( )		126739	1					
ANR	127408	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	127409	Callee	Environment :: getEnv		126739	0					
ANR	127410	Identifier	Environment :: getEnv		126739	0					
ANR	127411	ArgumentList			126739	1					
ANR	127412	ExpressionStatement	element_qname = NULL	242:21:10236:10256	126739	1	True				
ANR	127413	AssignmentExpression	element_qname = NULL		126739	0		=			
ANR	127414	Identifier	element_qname		126739	0					
ANR	127415	Identifier	NULL		126739	1					
ANR	127416	ExpressionStatement	parent_attri = NULL	247:18:10348:10367	126739	25	True				
ANR	127417	AssignmentExpression	parent_attri = NULL		126739	0		=			
ANR	127418	Identifier	parent_attri		126739	0					
ANR	127419	Identifier	NULL		126739	1					
ANR	127420	ExpressionStatement	attrib_text = NULL	248:18:10387:10405	126739	26	True				
ANR	127421	AssignmentExpression	attrib_text = NULL		126739	0		=			
ANR	127422	Identifier	attrib_text		126739	0					
ANR	127423	Identifier	NULL		126739	1					
ANR	127424	IfStatement	if ( attribute_hash )		126739	27					
ANR	127425	Condition	attribute_hash	249:21:10428:10441	126739	0	True				
ANR	127426	Identifier	attribute_hash		126739	0					
ANR	127427	CompoundStatement		178:23:8319:8334	126739	1					
ANR	127428	IdentifierDeclStatement	axutil_hash_index_t * hi ;	251:23:10487:10510	126739	0	True				
ANR	127429	IdentifierDecl	* hi		126739	0					
ANR	127430	IdentifierDeclType	axutil_hash_index_t *		126739	0					
ANR	127431	Identifier	hi		126739	1					
ANR	127432	IdentifierDeclStatement	void * val ;	252:23:10535:10544	126739	1	True				
ANR	127433	IdentifierDecl	* val		126739	0					
ANR	127434	IdentifierDeclType	void *		126739	0					
ANR	127435	Identifier	val		126739	1					
ANR	127436	IdentifierDeclStatement	const void * key ;	253:23:10569:10584	126739	2	True				
ANR	127437	IdentifierDecl	* key		126739	0					
ANR	127438	IdentifierDeclType	const void *		126739	0					
ANR	127439	Identifier	key		126739	1					
ANR	127440	ForStatement	"for ( hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) ) ; hi ; hi = axutil_hash_next ( Environment :: getEnv ( ) , hi ) )"		126739	3					
ANR	127441	ForInit	"hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) ) ;"	255:28:10615:10676	126739	0	True				
ANR	127442	AssignmentExpression	"hi = axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) )"		126739	0		=			
ANR	127443	Identifier	hi		126739	0					
ANR	127444	CallExpression	"axutil_hash_first ( attribute_hash , Environment :: getEnv ( ) )"		126739	1					
ANR	127445	Callee	axutil_hash_first		126739	0					
ANR	127446	Identifier	axutil_hash_first		126739	0					
ANR	127447	ArgumentList	attribute_hash		126739	1					
ANR	127448	Argument	attribute_hash		126739	0					
ANR	127449	Identifier	attribute_hash		126739	0					
ANR	127450	Argument	Environment :: getEnv ( )		126739	1					
ANR	127451	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	127452	Callee	Environment :: getEnv		126739	0					
ANR	127453	Identifier	Environment :: getEnv		126739	0					
ANR	127454	ArgumentList			126739	1					
ANR	127455	Condition	hi	255:91:10678:10679	126739	1	True				
ANR	127456	Identifier	hi		126739	0					
ANR	127457	AssignmentExpression	"hi = axutil_hash_next ( Environment :: getEnv ( ) , hi )"	255:95:10682:10729	126739	2	True	=			
ANR	127458	Identifier	hi		126739	0					
ANR	127459	CallExpression	"axutil_hash_next ( Environment :: getEnv ( ) , hi )"		126739	1					
ANR	127460	Callee	axutil_hash_next		126739	0					
ANR	127461	Identifier	axutil_hash_next		126739	0					
ANR	127462	ArgumentList	Environment :: getEnv ( )		126739	1					
ANR	127463	Argument	Environment :: getEnv ( )		126739	0					
ANR	127464	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	127465	Callee	Environment :: getEnv		126739	0					
ANR	127466	Identifier	Environment :: getEnv		126739	0					
ANR	127467	ArgumentList			126739	1					
ANR	127468	Argument	hi		126739	1					
ANR	127469	Identifier	hi		126739	0					
ANR	127470	CompoundStatement		181:23:8505:8505	126739	3					
ANR	127471	ExpressionStatement	"axutil_hash_this ( hi , & key , NULL , & val )"	257:27:10784:10822	126739	0	True				
ANR	127472	CallExpression	"axutil_hash_this ( hi , & key , NULL , & val )"		126739	0					
ANR	127473	Callee	axutil_hash_this		126739	0					
ANR	127474	Identifier	axutil_hash_this		126739	0					
ANR	127475	ArgumentList	hi		126739	1					
ANR	127476	Argument	hi		126739	0					
ANR	127477	Identifier	hi		126739	0					
ANR	127478	Argument	& key		126739	1					
ANR	127479	UnaryOperationExpression	& key		126739	0					
ANR	127480	UnaryOperator	&		126739	0					
ANR	127481	Identifier	key		126739	1					
ANR	127482	Argument	NULL		126739	2					
ANR	127483	Identifier	NULL		126739	0					
ANR	127484	Argument	& val		126739	3					
ANR	127485	UnaryOperationExpression	& val		126739	0					
ANR	127486	UnaryOperator	&		126739	0					
ANR	127487	Identifier	val		126739	1					
ANR	127488	IfStatement	"if ( ! strcmp ( ( axis2_char_t * ) key , ""partialMatches"" ) )"		126739	1					
ANR	127489	Condition	"! strcmp ( ( axis2_char_t * ) key , ""partialMatches"" )"	260:34:10914:10958	126739	0	True				
ANR	127490	UnaryOperationExpression	"! strcmp ( ( axis2_char_t * ) key , ""partialMatches"" )"		126739	0					
ANR	127491	UnaryOperator	!		126739	0					
ANR	127492	CallExpression	"strcmp ( ( axis2_char_t * ) key , ""partialMatches"" )"		126739	1					
ANR	127493	Callee	strcmp		126739	0					
ANR	127494	Identifier	strcmp		126739	0					
ANR	127495	ArgumentList	( axis2_char_t * ) key		126739	1					
ANR	127496	Argument	( axis2_char_t * ) key		126739	0					
ANR	127497	CastExpression	( axis2_char_t * ) key		126739	0					
ANR	127498	CastTarget	axis2_char_t *		126739	0					
ANR	127499	Identifier	key		126739	1					
ANR	127500	Argument	"""partialMatches"""		126739	1					
ANR	127501	PrimaryExpression	"""partialMatches"""		126739	0					
ANR	127502	CompoundStatement		187:31:8772:8772	126739	1					
ANR	127503	ExpressionStatement	parent_attri = ( axiom_attribute_t * ) val	263:35:11059:11097	126739	0	True				
ANR	127504	AssignmentExpression	parent_attri = ( axiom_attribute_t * ) val		126739	0		=			
ANR	127505	Identifier	parent_attri		126739	0					
ANR	127506	CastExpression	( axiom_attribute_t * ) val		126739	1					
ANR	127507	CastTarget	axiom_attribute_t *		126739	0					
ANR	127508	Identifier	val		126739	1					
ANR	127509	BreakStatement	break ;	264:35:11134:11139	126739	1	True				
ANR	127510	IfStatement	if ( parent_attri )		126739	28					
ANR	127511	Condition	parent_attri	269:21:11241:11252	126739	0	True				
ANR	127512	Identifier	parent_attri		126739	0					
ANR	127513	CompoundStatement		195:18:9023:9023	126739	1					
ANR	127514	ExpressionStatement	"attrib_text = axiom_attribute_get_value ( parent_attri , Environment :: getEnv ( ) )"	271:20:11295:11371	126739	0	True				
ANR	127515	AssignmentExpression	"attrib_text = axiom_attribute_get_value ( parent_attri , Environment :: getEnv ( ) )"		126739	0		=			
ANR	127516	Identifier	attrib_text		126739	0					
ANR	127517	CallExpression	"axiom_attribute_get_value ( parent_attri , Environment :: getEnv ( ) )"		126739	1					
ANR	127518	Callee	axiom_attribute_get_value		126739	0					
ANR	127519	Identifier	axiom_attribute_get_value		126739	0					
ANR	127520	ArgumentList	parent_attri		126739	1					
ANR	127521	Argument	parent_attri		126739	0					
ANR	127522	Identifier	parent_attri		126739	0					
ANR	127523	Argument	Environment :: getEnv ( )		126739	1					
ANR	127524	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	127525	Callee	Environment :: getEnv		126739	0					
ANR	127526	Identifier	Environment :: getEnv		126739	0					
ANR	127527	ArgumentList			126739	1					
ANR	127528	ElseStatement	else		126739	0					
ANR	127529	CompoundStatement		199:18:9184:9184	126739	0					
ANR	127530	ExpressionStatement	"attrib_text = axiom_element_get_attribute_value_by_name ( parent_element , Environment :: getEnv ( ) , ""partialMatches"" )"	276:20:11590:11702	126739	0	True				
ANR	127531	AssignmentExpression	"attrib_text = axiom_element_get_attribute_value_by_name ( parent_element , Environment :: getEnv ( ) , ""partialMatches"" )"		126739	0		=			
ANR	127532	Identifier	attrib_text		126739	0					
ANR	127533	CallExpression	"axiom_element_get_attribute_value_by_name ( parent_element , Environment :: getEnv ( ) , ""partialMatches"" )"		126739	1					
ANR	127534	Callee	axiom_element_get_attribute_value_by_name		126739	0					
ANR	127535	Identifier	axiom_element_get_attribute_value_by_name		126739	0					
ANR	127536	ArgumentList	parent_element		126739	1					
ANR	127537	Argument	parent_element		126739	0					
ANR	127538	Identifier	parent_element		126739	0					
ANR	127539	Argument	Environment :: getEnv ( )		126739	1					
ANR	127540	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	127541	Callee	Environment :: getEnv		126739	0					
ANR	127542	Identifier	Environment :: getEnv		126739	0					
ANR	127543	ArgumentList			126739	1					
ANR	127544	Argument	"""partialMatches"""		126739	2					
ANR	127545	PrimaryExpression	"""partialMatches"""		126739	0					
ANR	127546	IfStatement	if ( attrib_text != NULL )		126739	29					
ANR	127547	Condition	attrib_text != NULL	279:21:11746:11764	126739	0	True				
ANR	127548	EqualityExpression	attrib_text != NULL		126739	0		!=			
ANR	127549	Identifier	attrib_text		126739	0					
ANR	127550	Identifier	NULL		126739	1					
ANR	127551	CompoundStatement		205:18:9535:9535	126739	1					
ANR	127552	IfStatement	"if ( ! axutil_strcmp ( attrib_text , ""TRUE"" ) || ! axutil_strcmp ( attrib_text , ""true"" ) )"		126739	0					
ANR	127553	Condition	"! axutil_strcmp ( attrib_text , ""TRUE"" ) || ! axutil_strcmp ( attrib_text , ""true"" )"	283:31:11864:11937	126739	0	True				
ANR	127554	OrExpression	"! axutil_strcmp ( attrib_text , ""TRUE"" ) || ! axutil_strcmp ( attrib_text , ""true"" )"		126739	0		||			
ANR	127555	UnaryOperationExpression	"! axutil_strcmp ( attrib_text , ""TRUE"" )"		126739	0					
ANR	127556	UnaryOperator	!		126739	0					
ANR	127557	CallExpression	"axutil_strcmp ( attrib_text , ""TRUE"" )"		126739	1					
ANR	127558	Callee	axutil_strcmp		126739	0					
ANR	127559	Identifier	axutil_strcmp		126739	0					
ANR	127560	ArgumentList	attrib_text		126739	1					
ANR	127561	Argument	attrib_text		126739	0					
ANR	127562	Identifier	attrib_text		126739	0					
ANR	127563	Argument	"""TRUE"""		126739	1					
ANR	127564	PrimaryExpression	"""TRUE"""		126739	0					
ANR	127565	UnaryOperationExpression	"! axutil_strcmp ( attrib_text , ""true"" )"		126739	1					
ANR	127566	UnaryOperator	!		126739	0					
ANR	127567	CallExpression	"axutil_strcmp ( attrib_text , ""true"" )"		126739	1					
ANR	127568	Callee	axutil_strcmp		126739	0					
ANR	127569	Identifier	axutil_strcmp		126739	0					
ANR	127570	ArgumentList	attrib_text		126739	1					
ANR	127571	Argument	attrib_text		126739	0					
ANR	127572	Identifier	attrib_text		126739	0					
ANR	127573	Argument	"""true"""		126739	1					
ANR	127574	PrimaryExpression	"""true"""		126739	0					
ANR	127575	CompoundStatement		209:27:9717:9717	126739	1					
ANR	127576	ExpressionStatement	setPartialMatches ( true )	285:31:12000:12023	126739	0	True				
ANR	127577	CallExpression	setPartialMatches ( true )		126739	0					
ANR	127578	Callee	setPartialMatches		126739	0					
ANR	127579	Identifier	setPartialMatches		126739	0					
ANR	127580	ArgumentList	true		126739	1					
ANR	127581	Argument	true		126739	0					
ANR	127582	Identifier	true		126739	0					
ANR	127583	ElseStatement	else		126739	0					
ANR	127584	CompoundStatement		213:27:9863:9863	126739	0					
ANR	127585	ExpressionStatement	setPartialMatches ( false )	289:31:12146:12170	126739	0	True				
ANR	127586	CallExpression	setPartialMatches ( false )		126739	0					
ANR	127587	Callee	setPartialMatches		126739	0					
ANR	127588	Identifier	setPartialMatches		126739	0					
ANR	127589	ArgumentList	false		126739	1					
ANR	127590	Argument	false		126739	0					
ANR	127591	Identifier	false		126739	0					
ANR	127592	IfStatement	if ( element_qname )		126739	30					
ANR	127593	Condition	element_qname	294:21:12288:12300	126739	0	True				
ANR	127594	Identifier	element_qname		126739	0					
ANR	127595	CompoundStatement		220:18:10071:10071	126739	1					
ANR	127596	ExpressionStatement	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"	296:21:12344:12399	126739	0	True				
ANR	127597	CallExpression	"axutil_qname_free ( element_qname , Environment :: getEnv ( ) )"		126739	0					
ANR	127598	Callee	axutil_qname_free		126739	0					
ANR	127599	Identifier	axutil_qname_free		126739	0					
ANR	127600	ArgumentList	element_qname		126739	1					
ANR	127601	Argument	element_qname		126739	0					
ANR	127602	Identifier	element_qname		126739	0					
ANR	127603	Argument	Environment :: getEnv ( )		126739	1					
ANR	127604	CallExpression	Environment :: getEnv ( )		126739	0					
ANR	127605	Callee	Environment :: getEnv		126739	0					
ANR	127606	Identifier	Environment :: getEnv		126739	0					
ANR	127607	ArgumentList			126739	1					
ANR	127608	ExpressionStatement	element_qname = NULL	297:21:12422:12442	126739	1	True				
ANR	127609	AssignmentExpression	element_qname = NULL		126739	0		=			
ANR	127610	Identifier	element_qname		126739	0					
ANR	127611	Identifier	NULL		126739	1					
ANR	127612	ReturnStatement	return status ;	300:10:12492:12505	126739	31	True				
ANR	127613	Identifier	status		126739	0					
ANR	127614	ReturnType	bool WSF_CALL		126739	1					
ANR	127615	Identifier	AviaryQuery :: GetJobStatus :: deserialize		126739	2					
ANR	127616	ParameterList	"axiom_node_t * * dp_parent , bool * dp_is_early_node_valid , bool dont_care_minoccurs"		126739	3					
ANR	127617	Parameter	axiom_node_t * * dp_parent	75:47:2160:2183	126739	0	True				
ANR	127618	ParameterType	axiom_node_t * *		126739	0					
ANR	127619	Identifier	dp_parent		126739	1					
ANR	127620	Parameter	bool * dp_is_early_node_valid	75:72:2185:2212	126739	1	True				
ANR	127621	ParameterType	bool *		126739	0					
ANR	127622	Identifier	dp_is_early_node_valid		126739	1					
ANR	127623	Parameter	bool dont_care_minoccurs	75:102:2215:2238	126739	2	True				
ANR	127624	ParameterType	bool		126739	0					
ANR	127625	Identifier	dont_care_minoccurs		126739	1					
ANR	127626	CFGEntryNode	ENTRY		126739		True				
ANR	127627	CFGExitNode	EXIT		126739		True				
ANR	127628	Symbol	& val		126739						
ANR	127629	Symbol	parent		126739						
ANR	127630	Symbol	hi		126739						
ANR	127631	Symbol	is_early_node_valid		126739						
ANR	127632	Symbol	current_node		126739						
ANR	127633	Symbol	axiom_element_get_qname		126739						
ANR	127634	Symbol	AXIS2_FAILURE		126739						
ANR	127635	Symbol	parent_attri		126739						
ANR	127636	Symbol	dp_is_early_node_valid		126739						
ANR	127637	Symbol	WSF_LOG_SI		126739						
ANR	127638	Symbol	& current_node		126739						
ANR	127639	Symbol	& is_early_node_valid		126739						
ANR	127640	Symbol	axutil_hash_next		126739						
ANR	127641	Symbol	* arr_list		126739						
ANR	127642	Symbol	AXIS2_SUCCESS		126739						
ANR	127643	Symbol	element		126739						
ANR	127644	Symbol	val		126739						
ANR	127645	Symbol	strcmp		126739						
ANR	127646	Symbol	NULL		126739						
ANR	127647	Symbol	this		126739						
ANR	127648	Symbol	axiom_node_get_node_type		126739						
ANR	127649	Symbol	axiom_element_get_localname		126739						
ANR	127650	Symbol	arr_list -> size		126739						
ANR	127651	Symbol	text_value		126739						
ANR	127652	Symbol	axiom_node_get_next_sibling		126739						
ANR	127653	Symbol	tmp_node		126739						
ANR	127654	Symbol	axutil_strcmp		126739						
ANR	127655	Symbol	true		126739						
ANR	127656	Symbol	axutil_qname_equals		126739						
ANR	127657	Symbol	status		126739						
ANR	127658	Symbol	sequence_broken		126739						
ANR	127659	Symbol	Environment :: getEnv		126739						
ANR	127660	Symbol	& key		126739						
ANR	127661	Symbol	attribute_hash		126739						
ANR	127662	Symbol	mqname		126739						
ANR	127663	Symbol	* element		126739						
ANR	127664	Symbol	axiom_element_get_attribute_value_by_name		126739						
ANR	127665	Symbol	element_qname		126739						
ANR	127666	Symbol	axutil_qname_create		126739						
ANR	127667	Symbol	axiom_attribute_get_value		126739						
ANR	127668	Symbol	* dp_parent		126739						
ANR	127669	Symbol	axiom_node_get_data_element		126739						
ANR	127670	Symbol	this -> qname		126739						
ANR	127671	Symbol	dont_care_minoccurs		126739						
ANR	127672	Symbol	attrib_text		126739						
ANR	127673	Symbol	first_node		126739						
ANR	127674	Symbol	key		126739						
ANR	127675	Symbol	current_element		126739						
ANR	127676	Symbol	parent_element		126739						
ANR	127677	Symbol	dp_parent		126739						
ANR	127678	Symbol	AXIOM_ELEMENT		126739						
ANR	127679	Symbol	false		126739						
ANR	127680	Symbol	i		126739						
ANR	127681	Symbol	Environment :: getEnv ( ) -> log		126739						
ANR	127682	Symbol	* this		126739						
ANR	127683	Symbol	axiom_element_get_all_attributes		126739						
ANR	127684	Symbol	axiom_node_get_first_child		126739						
ANR	127685	Symbol	arr_list		126739						
ANR	127686	Symbol	setIds		126739						
ANR	127687	Symbol	axutil_hash_first		126739						
ANR	127688	Symbol	* Environment :: getEnv		126739						
ANR	127689	Symbol	element -> deserialize		126739						
ANR	127690	Function	AviaryQuery :: GetJobStatus :: isParticle	303:10:12527:12672							
ANR	127691	FunctionDef	AviaryQuery :: GetJobStatus :: isParticle ()		127690	0					
ANR	127692	CompoundStatement		305:10:12601:12672	127690	0					
ANR	127693	ReturnStatement	return false ;	307:17:12633:12645	127690	0	True				
ANR	127694	Identifier	false		127690	0					
ANR	127695	ReturnType	bool WSF_CALL		127690	1					
ANR	127696	Identifier	AviaryQuery :: GetJobStatus :: isParticle		127690	2					
ANR	127697	ParameterList			127690	3					
ANR	127698	CFGEntryNode	ENTRY		127690		True				
ANR	127699	CFGExitNode	EXIT		127690		True				
ANR	127700	Symbol	false		127690						
ANR	127701	Function	AviaryQuery :: GetJobStatus :: declareParentNamespaces	312:10:12686:13010							
ANR	127702	FunctionDef	"AviaryQuery :: GetJobStatus :: declareParentNamespaces (axiom_element_t * parent_element , axutil_hash_t * namespaces , int * next_ns_index)"		127701	0					
ANR	127703	CompoundStatement		316:10:12892:13010	127701	0					
ANR	127704	ReturnType	void WSF_CALL		127701	1					
ANR	127705	Identifier	AviaryQuery :: GetJobStatus :: declareParentNamespaces		127701	2					
ANR	127706	ParameterList	"axiom_element_t * parent_element , axutil_hash_t * namespaces , int * next_ns_index"		127701	3					
ANR	127707	Parameter	axiom_element_t * parent_element	314:20:12782:12812	127701	0	True				
ANR	127708	ParameterType	axiom_element_t *		127701	0					
ANR	127709	Identifier	parent_element		127701	1					
ANR	127710	Parameter	axutil_hash_t * namespaces	315:20:12835:12859	127701	1	True				
ANR	127711	ParameterType	axutil_hash_t *		127701	0					
ANR	127712	Identifier	namespaces		127701	1					
ANR	127713	Parameter	int * next_ns_index	315:47:12862:12879	127701	2	True				
ANR	127714	ParameterType	int *		127701	0					
ANR	127715	Identifier	next_ns_index		127701	1					
ANR	127716	CFGEntryNode	ENTRY		127701		True				
ANR	127717	CFGExitNode	EXIT		127701		True				
ANR	127718	Symbol	parent_element		127701						
ANR	127719	Symbol	next_ns_index		127701						
ANR	127720	Symbol	namespaces		127701						
ANR	127721	Function	AviaryQuery :: GetJobStatus :: serialize	324:22:13053:21835							
ANR	127722	FunctionDef	"AviaryQuery :: GetJobStatus :: serialize (axiom_node_t * parent , axiom_element_t * parent_element , int parent_tag_closed , axutil_hash_t * namespaces , int * next_ns_index)"		127721	0					
ANR	127723	CompoundStatement		330:8:13249:21835	127721	0					
ANR	127724	IdentifierDeclStatement	axiom_attribute_t * text_attri = NULL ;	333:15:13292:13328	127721	0	True				
ANR	127725	IdentifierDecl	* text_attri = NULL		127721	0					
ANR	127726	IdentifierDeclType	axiom_attribute_t *		127721	0					
ANR	127727	Identifier	text_attri		127721	1					
ANR	127728	AssignmentExpression	* text_attri = NULL		127721	2		=			
ANR	127729	Identifier	NULL		127721	0					
ANR	127730	Identifier	NULL		127721	1					
ANR	127731	IdentifierDeclStatement	axis2_char_t * string_to_stream ;	335:13:13357:13387	127721	1	True				
ANR	127732	IdentifierDecl	* string_to_stream		127721	0					
ANR	127733	IdentifierDeclType	axis2_char_t *		127721	0					
ANR	127734	Identifier	string_to_stream		127721	1					
ANR	127735	IdentifierDeclStatement	axiom_node_t * current_node = NULL ;	338:9:13421:13454	127721	2	True				
ANR	127736	IdentifierDecl	* current_node = NULL		127721	0					
ANR	127737	IdentifierDeclType	axiom_node_t *		127721	0					
ANR	127738	Identifier	current_node		127721	1					
ANR	127739	AssignmentExpression	* current_node = NULL		127721	2		=			
ANR	127740	Identifier	NULL		127721	0					
ANR	127741	Identifier	NULL		127721	1					
ANR	127742	IdentifierDeclStatement	int tag_closed = 0 ;	339:9:13465:13483	127721	3	True				
ANR	127743	IdentifierDecl	tag_closed = 0		127721	0					
ANR	127744	IdentifierDeclType	int		127721	0					
ANR	127745	Identifier	tag_closed		127721	1					
ANR	127746	AssignmentExpression	tag_closed = 0		127721	2		=			
ANR	127747	Identifier	tag_closed		127721	0					
ANR	127748	PrimaryExpression	0		127721	1					
ANR	127749	IdentifierDeclStatement	axiom_namespace_t * ns1 = NULL ;	343:16:13522:13551	127721	4	True				
ANR	127750	IdentifierDecl	* ns1 = NULL		127721	0					
ANR	127751	IdentifierDeclType	axiom_namespace_t *		127721	0					
ANR	127752	Identifier	ns1		127721	1					
ANR	127753	AssignmentExpression	* ns1 = NULL		127721	2		=			
ANR	127754	Identifier	NULL		127721	0					
ANR	127755	Identifier	NULL		127721	1					
ANR	127756	IdentifierDeclStatement	axis2_char_t * qname_uri = NULL ;	345:16:13570:13600	127721	5	True				
ANR	127757	IdentifierDecl	* qname_uri = NULL		127721	0					
ANR	127758	IdentifierDeclType	axis2_char_t *		127721	0					
ANR	127759	Identifier	qname_uri		127721	1					
ANR	127760	AssignmentExpression	* qname_uri = NULL		127721	2		=			
ANR	127761	Identifier	NULL		127721	0					
ANR	127762	Identifier	NULL		127721	1					
ANR	127763	IdentifierDeclStatement	axis2_char_t * qname_prefix = NULL ;	346:16:13618:13651	127721	6	True				
ANR	127764	IdentifierDecl	* qname_prefix = NULL		127721	0					
ANR	127765	IdentifierDeclType	axis2_char_t *		127721	0					
ANR	127766	Identifier	qname_prefix		127721	1					
ANR	127767	AssignmentExpression	* qname_prefix = NULL		127721	2		=			
ANR	127768	Identifier	NULL		127721	0					
ANR	127769	Identifier	NULL		127721	1					
ANR	127770	IdentifierDeclStatement	axis2_char_t * p_prefix = NULL ;	347:16:13669:13698	127721	7	True				
ANR	127771	IdentifierDecl	* p_prefix = NULL		127721	0					
ANR	127772	IdentifierDeclType	axis2_char_t *		127721	0					
ANR	127773	Identifier	p_prefix		127721	1					
ANR	127774	AssignmentExpression	* p_prefix = NULL		127721	2		=			
ANR	127775	Identifier	NULL		127721	0					
ANR	127776	Identifier	NULL		127721	1					
ANR	127777	IdentifierDeclStatement	int i = 0 ;	349:15:13728:13737	127721	8	True				
ANR	127778	IdentifierDecl	i = 0		127721	0					
ANR	127779	IdentifierDeclType	int		127721	0					
ANR	127780	Identifier	i		127721	1					
ANR	127781	AssignmentExpression	i = 0		127721	2		=			
ANR	127782	Identifier	i		127721	0					
ANR	127783	PrimaryExpression	0		127721	1					
ANR	127784	IdentifierDeclStatement	int count = 0 ;	350:15:13754:13767	127721	9	True				
ANR	127785	IdentifierDecl	count = 0		127721	0					
ANR	127786	IdentifierDeclType	int		127721	0					
ANR	127787	Identifier	count		127721	1					
ANR	127788	AssignmentExpression	count = 0		127721	2		=			
ANR	127789	Identifier	count		127721	0					
ANR	127790	PrimaryExpression	0		127721	1					
ANR	127791	IdentifierDeclStatement	void * element = NULL ;	351:15:13784:13804	127721	10	True				
ANR	127792	IdentifierDecl	* element = NULL		127721	0					
ANR	127793	IdentifierDeclType	void *		127721	0					
ANR	127794	Identifier	element		127721	1					
ANR	127795	AssignmentExpression	* element = NULL		127721	2		=			
ANR	127796	Identifier	NULL		127721	0					
ANR	127797	Identifier	NULL		127721	1					
ANR	127798	IdentifierDeclStatement	axis2_char_t text_value_1 [ ADB_DEFAULT_DIGIT_LIMIT ] ;	353:20:13840:13890	127721	11	True				
ANR	127799	IdentifierDecl	text_value_1 [ ADB_DEFAULT_DIGIT_LIMIT ]		127721	0					
ANR	127800	IdentifierDeclType	axis2_char_t [ ADB_DEFAULT_DIGIT_LIMIT ]		127721	0					
ANR	127801	Identifier	text_value_1		127721	1					
ANR	127802	Identifier	ADB_DEFAULT_DIGIT_LIMIT		127721	2					
ANR	127803	IdentifierDeclStatement	axis2_char_t text_value_2 [ ADB_DEFAULT_DIGIT_LIMIT ] ;	355:20:13933:13983	127721	12	True				
ANR	127804	IdentifierDecl	text_value_2 [ ADB_DEFAULT_DIGIT_LIMIT ]		127721	0					
ANR	127805	IdentifierDeclType	axis2_char_t [ ADB_DEFAULT_DIGIT_LIMIT ]		127721	0					
ANR	127806	Identifier	text_value_2		127721	1					
ANR	127807	Identifier	ADB_DEFAULT_DIGIT_LIMIT		127721	2					
ANR	127808	IdentifierDeclStatement	axis2_char_t * text_value = NULL ;	357:16:14022:14053	127721	13	True				
ANR	127809	IdentifierDecl	* text_value = NULL		127721	0					
ANR	127810	IdentifierDeclType	axis2_char_t *		127721	0					
ANR	127811	Identifier	text_value		127721	1					
ANR	127812	AssignmentExpression	* text_value = NULL		127721	2		=			
ANR	127813	Identifier	NULL		127721	0					
ANR	127814	Identifier	NULL		127721	1					
ANR	127815	IdentifierDeclStatement	axis2_char_t * start_input_str = NULL ;	359:15:14084:14120	127721	14	True				
ANR	127816	IdentifierDecl	* start_input_str = NULL		127721	0					
ANR	127817	IdentifierDeclType	axis2_char_t *		127721	0					
ANR	127818	Identifier	start_input_str		127721	1					
ANR	127819	AssignmentExpression	* start_input_str = NULL		127721	2		=			
ANR	127820	Identifier	NULL		127721	0					
ANR	127821	Identifier	NULL		127721	1					
ANR	127822	IdentifierDeclStatement	axis2_char_t * end_input_str = NULL ;	360:15:14137:14171	127721	15	True				
ANR	127823	IdentifierDecl	* end_input_str = NULL		127721	0					
ANR	127824	IdentifierDeclType	axis2_char_t *		127721	0					
ANR	127825	Identifier	end_input_str		127721	1					
ANR	127826	AssignmentExpression	* end_input_str = NULL		127721	2		=			
ANR	127827	Identifier	NULL		127721	0					
ANR	127828	Identifier	NULL		127721	1					
ANR	127829	IdentifierDeclStatement	unsigned int start_input_str_len = 0 ;	361:15:14188:14224	127721	16	True				
ANR	127830	IdentifierDecl	start_input_str_len = 0		127721	0					
ANR	127831	IdentifierDeclType	unsigned int		127721	0					
ANR	127832	Identifier	start_input_str_len		127721	1					
ANR	127833	AssignmentExpression	start_input_str_len = 0		127721	2		=			
ANR	127834	Identifier	start_input_str_len		127721	0					
ANR	127835	PrimaryExpression	0		127721	1					
ANR	127836	IdentifierDeclStatement	unsigned int end_input_str_len = 0 ;	362:15:14241:14275	127721	17	True				
ANR	127837	IdentifierDecl	end_input_str_len = 0		127721	0					
ANR	127838	IdentifierDeclType	unsigned int		127721	0					
ANR	127839	Identifier	end_input_str_len		127721	1					
ANR	127840	AssignmentExpression	end_input_str_len = 0		127721	2		=			
ANR	127841	Identifier	end_input_str_len		127721	0					
ANR	127842	PrimaryExpression	0		127721	1					
ANR	127843	IdentifierDeclStatement	axiom_data_source_t * data_source = NULL ;	365:15:14318:14357	127721	18	True				
ANR	127844	IdentifierDecl	* data_source = NULL		127721	0					
ANR	127845	IdentifierDeclType	axiom_data_source_t *		127721	0					
ANR	127846	Identifier	data_source		127721	1					
ANR	127847	AssignmentExpression	* data_source = NULL		127721	2		=			
ANR	127848	Identifier	NULL		127721	0					
ANR	127849	Identifier	NULL		127721	1					
ANR	127850	IdentifierDeclStatement	axutil_stream_t * stream = NULL ;	366:15:14374:14404	127721	19	True				
ANR	127851	IdentifierDecl	* stream = NULL		127721	0					
ANR	127852	IdentifierDeclType	axutil_stream_t *		127721	0					
ANR	127853	Identifier	stream		127721	1					
ANR	127854	AssignmentExpression	* stream = NULL		127721	2		=			
ANR	127855	Identifier	NULL		127721	0					
ANR	127856	Identifier	NULL		127721	1					
ANR	127857	IdentifierDeclStatement	int next_ns_index_value = 0 ;	369:16:14437:14464	127721	20	True				
ANR	127858	IdentifierDecl	next_ns_index_value = 0		127721	0					
ANR	127859	IdentifierDeclType	int		127721	0					
ANR	127860	Identifier	next_ns_index_value		127721	1					
ANR	127861	AssignmentExpression	next_ns_index_value = 0		127721	2		=			
ANR	127862	Identifier	next_ns_index_value		127721	0					
ANR	127863	PrimaryExpression	0		127721	1					
ANR	127864	ExpressionStatement	namespaces = axutil_hash_make ( Environment :: getEnv ( ) )	371:20:14500:14552	127721	21	True				
ANR	127865	AssignmentExpression	namespaces = axutil_hash_make ( Environment :: getEnv ( ) )		127721	0		=			
ANR	127866	Identifier	namespaces		127721	0					
ANR	127867	CallExpression	axutil_hash_make ( Environment :: getEnv ( ) )		127721	1					
ANR	127868	Callee	axutil_hash_make		127721	0					
ANR	127869	Identifier	axutil_hash_make		127721	0					
ANR	127870	ArgumentList	Environment :: getEnv ( )		127721	1					
ANR	127871	Argument	Environment :: getEnv ( )		127721	0					
ANR	127872	CallExpression	Environment :: getEnv ( )		127721	0					
ANR	127873	Callee	Environment :: getEnv		127721	0					
ANR	127874	Identifier	Environment :: getEnv		127721	0					
ANR	127875	ArgumentList			127721	1					
ANR	127876	ExpressionStatement	next_ns_index = & next_ns_index_value	372:20:14574:14610	127721	22	True				
ANR	127877	AssignmentExpression	next_ns_index = & next_ns_index_value		127721	0		=			
ANR	127878	Identifier	next_ns_index		127721	0					
ANR	127879	UnaryOperationExpression	& next_ns_index_value		127721	1					
ANR	127880	UnaryOperator	&		127721	0					
ANR	127881	Identifier	next_ns_index_value		127721	1					
ANR	127882	ExpressionStatement	"ns1 = axiom_namespace_create ( Environment :: getEnv ( ) , ""http://query.aviary.grid.redhat.com"" , ""n"" )"	374:27:14661:14847	127721	23	True				
ANR	127883	AssignmentExpression	"ns1 = axiom_namespace_create ( Environment :: getEnv ( ) , ""http://query.aviary.grid.redhat.com"" , ""n"" )"		127721	0		=			
ANR	127884	Identifier	ns1		127721	0					
ANR	127885	CallExpression	"axiom_namespace_create ( Environment :: getEnv ( ) , ""http://query.aviary.grid.redhat.com"" , ""n"" )"		127721	1					
ANR	127886	Callee	axiom_namespace_create		127721	0					
ANR	127887	Identifier	axiom_namespace_create		127721	0					
ANR	127888	ArgumentList	Environment :: getEnv ( )		127721	1					
ANR	127889	Argument	Environment :: getEnv ( )		127721	0					
ANR	127890	CallExpression	Environment :: getEnv ( )		127721	0					
ANR	127891	Callee	Environment :: getEnv		127721	0					
ANR	127892	Identifier	Environment :: getEnv		127721	0					
ANR	127893	ArgumentList			127721	1					
ANR	127894	Argument	"""http://query.aviary.grid.redhat.com"""		127721	1					
ANR	127895	PrimaryExpression	"""http://query.aviary.grid.redhat.com"""		127721	0					
ANR	127896	Argument	"""n"""		127721	2					
ANR	127897	PrimaryExpression	"""n"""		127721	0					
ANR	127898	ExpressionStatement	"axutil_hash_set ( namespaces , ""http://query.aviary.grid.redhat.com"" , AXIS2_HASH_KEY_STRING , axutil_strdup ( Environment :: getEnv ( ) , ""n"" ) )"	377:27:14877:15009	127721	24	True				
ANR	127899	CallExpression	"axutil_hash_set ( namespaces , ""http://query.aviary.grid.redhat.com"" , AXIS2_HASH_KEY_STRING , axutil_strdup ( Environment :: getEnv ( ) , ""n"" ) )"		127721	0					
ANR	127900	Callee	axutil_hash_set		127721	0					
ANR	127901	Identifier	axutil_hash_set		127721	0					
ANR	127902	ArgumentList	namespaces		127721	1					
ANR	127903	Argument	namespaces		127721	0					
ANR	127904	Identifier	namespaces		127721	0					
ANR	127905	Argument	"""http://query.aviary.grid.redhat.com"""		127721	1					
ANR	127906	PrimaryExpression	"""http://query.aviary.grid.redhat.com"""		127721	0					
ANR	127907	Argument	AXIS2_HASH_KEY_STRING		127721	2					
ANR	127908	Identifier	AXIS2_HASH_KEY_STRING		127721	0					
ANR	127909	Argument	"axutil_strdup ( Environment :: getEnv ( ) , ""n"" )"		127721	3					
ANR	127910	CallExpression	"axutil_strdup ( Environment :: getEnv ( ) , ""n"" )"		127721	0					
ANR	127911	Callee	axutil_strdup		127721	0					
ANR	127912	Identifier	axutil_strdup		127721	0					
ANR	127913	ArgumentList	Environment :: getEnv ( )		127721	1					
ANR	127914	Argument	Environment :: getEnv ( )		127721	0					
ANR	127915	CallExpression	Environment :: getEnv ( )		127721	0					
ANR	127916	Callee	Environment :: getEnv		127721	0					
ANR	127917	Identifier	Environment :: getEnv		127721	0					
ANR	127918	ArgumentList			127721	1					
ANR	127919	Argument	"""n"""		127721	1					
ANR	127920	PrimaryExpression	"""n"""		127721	0					
ANR	127921	ExpressionStatement	"parent_element = axiom_element_create ( Environment :: getEnv ( ) , NULL , ""GetJobStatus"" , ns1 , & parent )"	380:20:15077:15175	127721	25	True				
ANR	127922	AssignmentExpression	"parent_element = axiom_element_create ( Environment :: getEnv ( ) , NULL , ""GetJobStatus"" , ns1 , & parent )"		127721	0		=			
ANR	127923	Identifier	parent_element		127721	0					
ANR	127924	CallExpression	"axiom_element_create ( Environment :: getEnv ( ) , NULL , ""GetJobStatus"" , ns1 , & parent )"		127721	1					
ANR	127925	Callee	axiom_element_create		127721	0					
ANR	127926	Identifier	axiom_element_create		127721	0					
ANR	127927	ArgumentList	Environment :: getEnv ( )		127721	1					
ANR	127928	Argument	Environment :: getEnv ( )		127721	0					
ANR	127929	CallExpression	Environment :: getEnv ( )		127721	0					
ANR	127930	Callee	Environment :: getEnv		127721	0					
ANR	127931	Identifier	Environment :: getEnv		127721	0					
ANR	127932	ArgumentList			127721	1					
ANR	127933	Argument	NULL		127721	1					
ANR	127934	Identifier	NULL		127721	0					
ANR	127935	Argument	"""GetJobStatus"""		127721	2					
ANR	127936	PrimaryExpression	"""GetJobStatus"""		127721	0					
ANR	127937	Argument	ns1		127721	3					
ANR	127938	Identifier	ns1		127721	0					
ANR	127939	Argument	& parent		127721	4					
ANR	127940	UnaryOperationExpression	& parent		127721	0					
ANR	127941	UnaryOperator	&		127721	0					
ANR	127942	Identifier	parent		127721	1					
ANR	127943	ExpressionStatement	"axiom_element_set_namespace ( parent_element , Environment :: getEnv ( ) , ns1 , parent )"	383:20:15239:15318	127721	26	True				
ANR	127944	CallExpression	"axiom_element_set_namespace ( parent_element , Environment :: getEnv ( ) , ns1 , parent )"		127721	0					
ANR	127945	Callee	axiom_element_set_namespace		127721	0					
ANR	127946	Identifier	axiom_element_set_namespace		127721	0					
ANR	127947	ArgumentList	parent_element		127721	1					
ANR	127948	Argument	parent_element		127721	0					
ANR	127949	Identifier	parent_element		127721	0					
ANR	127950	Argument	Environment :: getEnv ( )		127721	1					
ANR	127951	CallExpression	Environment :: getEnv ( )		127721	0					
ANR	127952	Callee	Environment :: getEnv		127721	0					
ANR	127953	Identifier	Environment :: getEnv		127721	0					
ANR	127954	ArgumentList			127721	1					
ANR	127955	Argument	ns1		127721	2					
ANR	127956	Identifier	ns1		127721	0					
ANR	127957	Argument	parent		127721	3					
ANR	127958	Identifier	parent		127721	0					
ANR	127959	ExpressionStatement	"data_source = axiom_data_source_create ( Environment :: getEnv ( ) , parent , & current_node )"	387:20:15355:15439	127721	27	True				
ANR	127960	AssignmentExpression	"data_source = axiom_data_source_create ( Environment :: getEnv ( ) , parent , & current_node )"		127721	0		=			
ANR	127961	Identifier	data_source		127721	0					
ANR	127962	CallExpression	"axiom_data_source_create ( Environment :: getEnv ( ) , parent , & current_node )"		127721	1					
ANR	127963	Callee	axiom_data_source_create		127721	0					
ANR	127964	Identifier	axiom_data_source_create		127721	0					
ANR	127965	ArgumentList	Environment :: getEnv ( )		127721	1					
ANR	127966	Argument	Environment :: getEnv ( )		127721	0					
ANR	127967	CallExpression	Environment :: getEnv ( )		127721	0					
ANR	127968	Callee	Environment :: getEnv		127721	0					
ANR	127969	Identifier	Environment :: getEnv		127721	0					
ANR	127970	ArgumentList			127721	1					
ANR	127971	Argument	parent		127721	1					
ANR	127972	Identifier	parent		127721	0					
ANR	127973	Argument	& current_node		127721	2					
ANR	127974	UnaryOperationExpression	& current_node		127721	0					
ANR	127975	UnaryOperator	&		127721	0					
ANR	127976	Identifier	current_node		127721	1					
ANR	127977	ExpressionStatement	"stream = axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"	388:20:15461:15534	127721	28	True				
ANR	127978	AssignmentExpression	"stream = axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"		127721	0		=			
ANR	127979	Identifier	stream		127721	0					
ANR	127980	CallExpression	"axiom_data_source_get_stream ( data_source , Environment :: getEnv ( ) )"		127721	1					
ANR	127981	Callee	axiom_data_source_get_stream		127721	0					
ANR	127982	Identifier	axiom_data_source_get_stream		127721	0					
ANR	127983	ArgumentList	data_source		127721	1					
ANR	127984	Argument	data_source		127721	0					
ANR	127985	Identifier	data_source		127721	0					
ANR	127986	Argument	Environment :: getEnv ( )		127721	1					
ANR	127987	CallExpression	Environment :: getEnv ( )		127721	0					
ANR	127988	Callee	Environment :: getEnv		127721	0					
ANR	127989	Identifier	Environment :: getEnv		127721	0					
ANR	127990	ArgumentList			127721	1					
ANR	127991	IfStatement	if ( ! parent_tag_closed )		127721	29					
ANR	127992	Condition	! parent_tag_closed	390:15:15570:15587	127721	0	True				
ANR	127993	UnaryOperationExpression	! parent_tag_closed		127721	0					
ANR	127994	UnaryOperator	!		127721	0					
ANR	127995	Identifier	parent_tag_closed		127721	1					
ANR	127996	CompoundStatement		62:12:2352:2352	127721	1					
ANR	127997	IfStatement	if ( isValidPartialMatches )		127721	0					
ANR	127998	Condition	isValidPartialMatches	393:19:15636:15656	127721	0	True				
ANR	127999	Identifier	isValidPartialMatches		127721	0					
ANR	128000	CompoundStatement		65:16:2425:2425	127721	1					
ANR	128001	ExpressionStatement	p_prefix = NULL	396:24:15718:15733	127721	0	True				
ANR	128002	AssignmentExpression	p_prefix = NULL		127721	0		=			
ANR	128003	Identifier	p_prefix		127721	0					
ANR	128004	Identifier	NULL		127721	1					
ANR	128005	ExpressionStatement	"text_value = ( axis2_char_t * ) ( ( property_PartialMatches ) ? ""true"" : ""false"" )"	399:27:15813:15883	127721	1	True				
ANR	128006	AssignmentExpression	"text_value = ( axis2_char_t * ) ( ( property_PartialMatches ) ? ""true"" : ""false"" )"		127721	0		=			
ANR	128007	Identifier	text_value		127721	0					
ANR	128008	CastExpression	"( axis2_char_t * ) ( ( property_PartialMatches ) ? ""true"" : ""false"" )"		127721	1					
ANR	128009	CastTarget	axis2_char_t *		127721	0					
ANR	128010	ConditionalExpression	"( property_PartialMatches ) ? ""true"" : ""false"""		127721	1					
ANR	128011	Condition	property_PartialMatches		127721	0					
ANR	128012	Identifier	property_PartialMatches		127721	0					
ANR	128013	PrimaryExpression	"""true"""		127721	1					
ANR	128014	PrimaryExpression	"""false"""		127721	2					
ANR	128015	ExpressionStatement	"string_to_stream = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT + axutil_strlen ( text_value ) + axutil_strlen ( ""partialMatches"" ) ) )"	400:27:15912:16307	127721	2	True				
ANR	128016	AssignmentExpression	"string_to_stream = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT + axutil_strlen ( text_value ) + axutil_strlen ( ""partialMatches"" ) ) )"		127721	0		=			
ANR	128017	Identifier	string_to_stream		127721	0					
ANR	128018	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT + axutil_strlen ( text_value ) + axutil_strlen ( ""partialMatches"" ) ) )"		127721	1					
ANR	128019	CastTarget	axis2_char_t *		127721	0					
ANR	128020	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT + axutil_strlen ( text_value ) + axutil_strlen ( ""partialMatches"" ) ) )"		127721	1					
ANR	128021	Callee	AXIS2_MALLOC		127721	0					
ANR	128022	Identifier	AXIS2_MALLOC		127721	0					
ANR	128023	ArgumentList	Environment :: getEnv ( ) -> allocator		127721	1					
ANR	128024	Argument	Environment :: getEnv ( ) -> allocator		127721	0					
ANR	128025	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		127721	0					
ANR	128026	CallExpression	Environment :: getEnv ( )		127721	0					
ANR	128027	Callee	Environment :: getEnv		127721	0					
ANR	128028	Identifier	Environment :: getEnv		127721	0					
ANR	128029	ArgumentList			127721	1					
ANR	128030	Identifier	allocator		127721	1					
ANR	128031	Argument	"sizeof ( axis2_char_t ) * ( 5 + ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT + axutil_strlen ( text_value ) + axutil_strlen ( ""partialMatches"" ) )"		127721	1					
ANR	128032	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 5 + ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT + axutil_strlen ( text_value ) + axutil_strlen ( ""partialMatches"" ) )"		127721	0		*			
ANR	128033	SizeofExpression	sizeof ( axis2_char_t )		127721	0					
ANR	128034	Sizeof	sizeof		127721	0					
ANR	128035	SizeofOperand	axis2_char_t		127721	1					
ANR	128036	AdditiveExpression	"5 + ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT + axutil_strlen ( text_value ) + axutil_strlen ( ""partialMatches"" )"		127721	1		+			
ANR	128037	PrimaryExpression	5		127721	0					
ANR	128038	AdditiveExpression	"ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT + axutil_strlen ( text_value ) + axutil_strlen ( ""partialMatches"" )"		127721	1		+			
ANR	128039	Identifier	ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT		127721	0					
ANR	128040	AdditiveExpression	"axutil_strlen ( text_value ) + axutil_strlen ( ""partialMatches"" )"		127721	1		+			
ANR	128041	CallExpression	axutil_strlen ( text_value )		127721	0					
ANR	128042	Callee	axutil_strlen		127721	0					
ANR	128043	Identifier	axutil_strlen		127721	0					
ANR	128044	ArgumentList	text_value		127721	1					
ANR	128045	Argument	text_value		127721	0					
ANR	128046	Identifier	text_value		127721	0					
ANR	128047	CallExpression	"axutil_strlen ( ""partialMatches"" )"		127721	1					
ANR	128048	Callee	axutil_strlen		127721	0					
ANR	128049	Identifier	axutil_strlen		127721	0					
ANR	128050	ArgumentList	"""partialMatches"""		127721	1					
ANR	128051	Argument	"""partialMatches"""		127721	0					
ANR	128052	PrimaryExpression	"""partialMatches"""		127721	0					
ANR	128053	ExpressionStatement	"sprintf ( string_to_stream , "" %s%s%s=\\""%s\\"""" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" , ""partialMatches"" , text_value )"	404:27:16336:16530	127721	3	True				
ANR	128054	CallExpression	"sprintf ( string_to_stream , "" %s%s%s=\\""%s\\"""" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" , ""partialMatches"" , text_value )"		127721	0					
ANR	128055	Callee	sprintf		127721	0					
ANR	128056	Identifier	sprintf		127721	0					
ANR	128057	ArgumentList	string_to_stream		127721	1					
ANR	128058	Argument	string_to_stream		127721	0					
ANR	128059	Identifier	string_to_stream		127721	0					
ANR	128060	Argument	""" %s%s%s=\\""%s\\"""""		127721	1					
ANR	128061	PrimaryExpression	""" %s%s%s=\\""%s\\"""""		127721	0					
ANR	128062	Argument	"p_prefix ? p_prefix : """""		127721	2					
ANR	128063	ConditionalExpression	"p_prefix ? p_prefix : """""		127721	0					
ANR	128064	Condition	p_prefix		127721	0					
ANR	128065	Identifier	p_prefix		127721	0					
ANR	128066	Identifier	p_prefix		127721	1					
ANR	128067	PrimaryExpression	""""""		127721	2					
ANR	128068	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		127721	3					
ANR	128069	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		127721	0					
ANR	128070	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		127721	0					
ANR	128071	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		127721	0		&&			
ANR	128072	Identifier	p_prefix		127721	0					
ANR	128073	CallExpression	"axutil_strcmp ( p_prefix , """" )"		127721	1					
ANR	128074	Callee	axutil_strcmp		127721	0					
ANR	128075	Identifier	axutil_strcmp		127721	0					
ANR	128076	ArgumentList	p_prefix		127721	1					
ANR	128077	Argument	p_prefix		127721	0					
ANR	128078	Identifier	p_prefix		127721	0					
ANR	128079	Argument	""""""		127721	1					
ANR	128080	PrimaryExpression	""""""		127721	0					
ANR	128081	PrimaryExpression	""":"""		127721	1					
ANR	128082	PrimaryExpression	""""""		127721	2					
ANR	128083	Argument	"""partialMatches"""		127721	4					
ANR	128084	PrimaryExpression	"""partialMatches"""		127721	0					
ANR	128085	Argument	text_value		127721	5					
ANR	128086	Identifier	text_value		127721	0					
ANR	128087	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , string_to_stream , axutil_strlen ( string_to_stream ) )"	406:27:16559:16660	127721	4	True				
ANR	128088	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , string_to_stream , axutil_strlen ( string_to_stream ) )"		127721	0					
ANR	128089	Callee	axutil_stream_write		127721	0					
ANR	128090	Identifier	axutil_stream_write		127721	0					
ANR	128091	ArgumentList	stream		127721	1					
ANR	128092	Argument	stream		127721	0					
ANR	128093	Identifier	stream		127721	0					
ANR	128094	Argument	Environment :: getEnv ( )		127721	1					
ANR	128095	CallExpression	Environment :: getEnv ( )		127721	0					
ANR	128096	Callee	Environment :: getEnv		127721	0					
ANR	128097	Identifier	Environment :: getEnv		127721	0					
ANR	128098	ArgumentList			127721	1					
ANR	128099	Argument	string_to_stream		127721	2					
ANR	128100	Identifier	string_to_stream		127721	0					
ANR	128101	Argument	axutil_strlen ( string_to_stream )		127721	3					
ANR	128102	CallExpression	axutil_strlen ( string_to_stream )		127721	0					
ANR	128103	Callee	axutil_strlen		127721	0					
ANR	128104	Identifier	axutil_strlen		127721	0					
ANR	128105	ArgumentList	string_to_stream		127721	1					
ANR	128106	Argument	string_to_stream		127721	0					
ANR	128107	Identifier	string_to_stream		127721	0					
ANR	128108	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , string_to_stream )"	407:27:16689:16752	127721	5	True				
ANR	128109	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , string_to_stream )"		127721	0					
ANR	128110	Callee	AXIS2_FREE		127721	0					
ANR	128111	Identifier	AXIS2_FREE		127721	0					
ANR	128112	ArgumentList	Environment :: getEnv ( ) -> allocator		127721	1					
ANR	128113	Argument	Environment :: getEnv ( ) -> allocator		127721	0					
ANR	128114	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		127721	0					
ANR	128115	CallExpression	Environment :: getEnv ( )		127721	0					
ANR	128116	Callee	Environment :: getEnv		127721	0					
ANR	128117	Identifier	Environment :: getEnv		127721	0					
ANR	128118	ArgumentList			127721	1					
ANR	128119	Identifier	allocator		127721	1					
ANR	128120	Argument	string_to_stream		127721	1					
ANR	128121	Identifier	string_to_stream		127721	0					
ANR	128122	ExpressionStatement	p_prefix = NULL	413:23:16870:16885	127721	30	True				
ANR	128123	AssignmentExpression	p_prefix = NULL		127721	0		=			
ANR	128124	Identifier	p_prefix		127721	0					
ANR	128125	Identifier	NULL		127721	1					
ANR	128126	IfStatement	if ( ! isValidIds )		127721	31					
ANR	128127	Condition	! isValidIds	416:23:16934:16944	127721	0	True				
ANR	128128	UnaryOperationExpression	! isValidIds		127721	0					
ANR	128129	UnaryOperator	!		127721	0					
ANR	128130	Identifier	isValidIds		127721	1					
ANR	128131	CompoundStatement		88:19:3716:3716	127721	1					
ANR	128132	ElseStatement	else		127721	0					
ANR	128133	CompoundStatement		95:19:3938:3938	127721	0					
ANR	128134	ExpressionStatement	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" ) ) )"	425:21:17211:17435	127721	0	True				
ANR	128135	AssignmentExpression	"start_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" ) ) )"		127721	0		=			
ANR	128136	Identifier	start_input_str		127721	0					
ANR	128137	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" ) ) )"		127721	1					
ANR	128138	CastTarget	axis2_char_t *		127721	0					
ANR	128139	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" ) ) )"		127721	1					
ANR	128140	Callee	AXIS2_MALLOC		127721	0					
ANR	128141	Identifier	AXIS2_MALLOC		127721	0					
ANR	128142	ArgumentList	Environment :: getEnv ( ) -> allocator		127721	1					
ANR	128143	Argument	Environment :: getEnv ( ) -> allocator		127721	0					
ANR	128144	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		127721	0					
ANR	128145	CallExpression	Environment :: getEnv ( )		127721	0					
ANR	128146	Callee	Environment :: getEnv		127721	0					
ANR	128147	Identifier	Environment :: getEnv		127721	0					
ANR	128148	ArgumentList			127721	1					
ANR	128149	Identifier	allocator		127721	1					
ANR	128150	Argument	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" ) )"		127721	1					
ANR	128151	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" ) )"		127721	0		*			
ANR	128152	SizeofExpression	sizeof ( axis2_char_t )		127721	0					
ANR	128153	Sizeof	sizeof		127721	0					
ANR	128154	SizeofOperand	axis2_char_t		127721	1					
ANR	128155	AdditiveExpression	"4 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" )"		127721	1		+			
ANR	128156	PrimaryExpression	4		127721	0					
ANR	128157	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" )"		127721	1		+			
ANR	128158	CallExpression	axutil_strlen ( p_prefix )		127721	0					
ANR	128159	Callee	axutil_strlen		127721	0					
ANR	128160	Identifier	axutil_strlen		127721	0					
ANR	128161	ArgumentList	p_prefix		127721	1					
ANR	128162	Argument	p_prefix		127721	0					
ANR	128163	Identifier	p_prefix		127721	0					
ANR	128164	CallExpression	"axutil_strlen ( ""ids"" )"		127721	1					
ANR	128165	Callee	axutil_strlen		127721	0					
ANR	128166	Identifier	axutil_strlen		127721	0					
ANR	128167	ArgumentList	"""ids"""		127721	1					
ANR	128168	Argument	"""ids"""		127721	0					
ANR	128169	PrimaryExpression	"""ids"""		127721	0					
ANR	128170	ExpressionStatement	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" ) ) )"	430:21:17561:17748	127721	1	True				
ANR	128171	AssignmentExpression	"end_input_str = ( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" ) ) )"		127721	0		=			
ANR	128172	Identifier	end_input_str		127721	0					
ANR	128173	CastExpression	"( axis2_char_t * ) AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" ) ) )"		127721	1					
ANR	128174	CastTarget	axis2_char_t *		127721	0					
ANR	128175	CallExpression	"AXIS2_MALLOC ( Environment :: getEnv ( ) -> allocator , sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" ) ) )"		127721	1					
ANR	128176	Callee	AXIS2_MALLOC		127721	0					
ANR	128177	Identifier	AXIS2_MALLOC		127721	0					
ANR	128178	ArgumentList	Environment :: getEnv ( ) -> allocator		127721	1					
ANR	128179	Argument	Environment :: getEnv ( ) -> allocator		127721	0					
ANR	128180	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		127721	0					
ANR	128181	CallExpression	Environment :: getEnv ( )		127721	0					
ANR	128182	Callee	Environment :: getEnv		127721	0					
ANR	128183	Identifier	Environment :: getEnv		127721	0					
ANR	128184	ArgumentList			127721	1					
ANR	128185	Identifier	allocator		127721	1					
ANR	128186	Argument	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" ) )"		127721	1					
ANR	128187	MultiplicativeExpression	"sizeof ( axis2_char_t ) * ( 5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" ) )"		127721	0		*			
ANR	128188	SizeofExpression	sizeof ( axis2_char_t )		127721	0					
ANR	128189	Sizeof	sizeof		127721	0					
ANR	128190	SizeofOperand	axis2_char_t		127721	1					
ANR	128191	AdditiveExpression	"5 + axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" )"		127721	1		+			
ANR	128192	PrimaryExpression	5		127721	0					
ANR	128193	AdditiveExpression	"axutil_strlen ( p_prefix ) + axutil_strlen ( ""ids"" )"		127721	1		+			
ANR	128194	CallExpression	axutil_strlen ( p_prefix )		127721	0					
ANR	128195	Callee	axutil_strlen		127721	0					
ANR	128196	Identifier	axutil_strlen		127721	0					
ANR	128197	ArgumentList	p_prefix		127721	1					
ANR	128198	Argument	p_prefix		127721	0					
ANR	128199	Identifier	p_prefix		127721	0					
ANR	128200	CallExpression	"axutil_strlen ( ""ids"" )"		127721	1					
ANR	128201	Callee	axutil_strlen		127721	0					
ANR	128202	Identifier	axutil_strlen		127721	0					
ANR	128203	ArgumentList	"""ids"""		127721	1					
ANR	128204	Argument	"""ids"""		127721	0					
ANR	128205	PrimaryExpression	"""ids"""		127721	0					
ANR	128206	IfStatement	if ( property_Ids != NULL )		127721	2					
ANR	128207	Condition	property_Ids != NULL	441:25:18034:18053	127721	0	True				
ANR	128208	EqualityExpression	property_Ids != NULL		127721	0		!=			
ANR	128209	Identifier	property_Ids		127721	0					
ANR	128210	Identifier	NULL		127721	1					
ANR	128211	CompoundStatement		113:21:4827:4827	127721	1					
ANR	128212	ExpressionStatement	"sprintf ( start_input_str , ""<%s%sids"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	445:28:18133:18307	127721	0	True				
ANR	128213	CallExpression	"sprintf ( start_input_str , ""<%s%sids"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		127721	0					
ANR	128214	Callee	sprintf		127721	0					
ANR	128215	Identifier	sprintf		127721	0					
ANR	128216	ArgumentList	start_input_str		127721	1					
ANR	128217	Argument	start_input_str		127721	0					
ANR	128218	Identifier	start_input_str		127721	0					
ANR	128219	Argument	"""<%s%sids"""		127721	1					
ANR	128220	PrimaryExpression	"""<%s%sids"""		127721	0					
ANR	128221	Argument	"p_prefix ? p_prefix : """""		127721	2					
ANR	128222	ConditionalExpression	"p_prefix ? p_prefix : """""		127721	0					
ANR	128223	Condition	p_prefix		127721	0					
ANR	128224	Identifier	p_prefix		127721	0					
ANR	128225	Identifier	p_prefix		127721	1					
ANR	128226	PrimaryExpression	""""""		127721	2					
ANR	128227	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		127721	3					
ANR	128228	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		127721	0					
ANR	128229	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		127721	0					
ANR	128230	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		127721	0		&&			
ANR	128231	Identifier	p_prefix		127721	0					
ANR	128232	CallExpression	"axutil_strcmp ( p_prefix , """" )"		127721	1					
ANR	128233	Callee	axutil_strcmp		127721	0					
ANR	128234	Identifier	axutil_strcmp		127721	0					
ANR	128235	ArgumentList	p_prefix		127721	1					
ANR	128236	Argument	p_prefix		127721	0					
ANR	128237	Identifier	p_prefix		127721	0					
ANR	128238	Argument	""""""		127721	1					
ANR	128239	PrimaryExpression	""""""		127721	0					
ANR	128240	PrimaryExpression	""":"""		127721	1					
ANR	128241	PrimaryExpression	""""""		127721	2					
ANR	128242	ExpressionStatement	start_input_str_len = axutil_strlen ( start_input_str )	449:25:18363:18415	127721	1	True				
ANR	128243	AssignmentExpression	start_input_str_len = axutil_strlen ( start_input_str )		127721	0		=			
ANR	128244	Identifier	start_input_str_len		127721	0					
ANR	128245	CallExpression	axutil_strlen ( start_input_str )		127721	1					
ANR	128246	Callee	axutil_strlen		127721	0					
ANR	128247	Identifier	axutil_strlen		127721	0					
ANR	128248	ArgumentList	start_input_str		127721	1					
ANR	128249	Argument	start_input_str		127721	0					
ANR	128250	Identifier	start_input_str		127721	0					
ANR	128251	ExpressionStatement	"sprintf ( end_input_str , ""</%s%sids>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"	451:25:18443:18617	127721	2	True				
ANR	128252	CallExpression	"sprintf ( end_input_str , ""</%s%sids>"" , p_prefix ? p_prefix : """" , ( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """" )"		127721	0					
ANR	128253	Callee	sprintf		127721	0					
ANR	128254	Identifier	sprintf		127721	0					
ANR	128255	ArgumentList	end_input_str		127721	1					
ANR	128256	Argument	end_input_str		127721	0					
ANR	128257	Identifier	end_input_str		127721	0					
ANR	128258	Argument	"""</%s%sids>"""		127721	1					
ANR	128259	PrimaryExpression	"""</%s%sids>"""		127721	0					
ANR	128260	Argument	"p_prefix ? p_prefix : """""		127721	2					
ANR	128261	ConditionalExpression	"p_prefix ? p_prefix : """""		127721	0					
ANR	128262	Condition	p_prefix		127721	0					
ANR	128263	Identifier	p_prefix		127721	0					
ANR	128264	Identifier	p_prefix		127721	1					
ANR	128265	PrimaryExpression	""""""		127721	2					
ANR	128266	Argument	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		127721	3					
ANR	128267	ConditionalExpression	"( p_prefix && axutil_strcmp ( p_prefix , """" ) ) ? "":"" : """""		127721	0					
ANR	128268	Condition	"p_prefix && axutil_strcmp ( p_prefix , """" )"		127721	0					
ANR	128269	AndExpression	"p_prefix && axutil_strcmp ( p_prefix , """" )"		127721	0		&&			
ANR	128270	Identifier	p_prefix		127721	0					
ANR	128271	CallExpression	"axutil_strcmp ( p_prefix , """" )"		127721	1					
ANR	128272	Callee	axutil_strcmp		127721	0					
ANR	128273	Identifier	axutil_strcmp		127721	0					
ANR	128274	ArgumentList	p_prefix		127721	1					
ANR	128275	Argument	p_prefix		127721	0					
ANR	128276	Identifier	p_prefix		127721	0					
ANR	128277	Argument	""""""		127721	1					
ANR	128278	PrimaryExpression	""""""		127721	0					
ANR	128279	PrimaryExpression	""":"""		127721	1					
ANR	128280	PrimaryExpression	""""""		127721	2					
ANR	128281	ExpressionStatement	end_input_str_len = axutil_strlen ( end_input_str )	454:25:18644:18692	127721	3	True				
ANR	128282	AssignmentExpression	end_input_str_len = axutil_strlen ( end_input_str )		127721	0		=			
ANR	128283	Identifier	end_input_str_len		127721	0					
ANR	128284	CallExpression	axutil_strlen ( end_input_str )		127721	1					
ANR	128285	Callee	axutil_strlen		127721	0					
ANR	128286	Identifier	axutil_strlen		127721	0					
ANR	128287	ArgumentList	end_input_str		127721	1					
ANR	128288	Argument	end_input_str		127721	0					
ANR	128289	Identifier	end_input_str		127721	0					
ANR	128290	ExpressionStatement	count = property_Ids -> size ( )	456:25:18720:18748	127721	4	True				
ANR	128291	AssignmentExpression	count = property_Ids -> size ( )		127721	0		=			
ANR	128292	Identifier	count		127721	0					
ANR	128293	CallExpression	property_Ids -> size ( )		127721	1					
ANR	128294	Callee	property_Ids -> size		127721	0					
ANR	128295	PtrMemberAccess	property_Ids -> size		127721	0					
ANR	128296	Identifier	property_Ids		127721	0					
ANR	128297	Identifier	size		127721	1					
ANR	128298	ArgumentList			127721	1					
ANR	128299	ForStatement	for ( i = 0 ; i < count ; i ++ )		127721	5					
ANR	128300	ForInit	i = 0 ;	457:29:18779:18784	127721	0	True				
ANR	128301	AssignmentExpression	i = 0		127721	0		=			
ANR	128302	Identifier	i		127721	0					
ANR	128303	PrimaryExpression	0		127721	1					
ANR	128304	Condition	i < count	457:36:18786:18794	127721	1	True				
ANR	128305	RelationalExpression	i < count		127721	0		<			
ANR	128306	Identifier	i		127721	0					
ANR	128307	Identifier	count		127721	1					
ANR	128308	PostIncDecOperationExpression	i ++	457:47:18797:18799	127721	2	True				
ANR	128309	Identifier	i		127721	0					
ANR	128310	IncDec	++		127721	1					
ANR	128311	CompoundStatement		130:28:5607:5656	127721	3					
ANR	128312	IdentifierDeclStatement	AviaryCommon :: JobID * element = ( * property_Ids ) [ i ] ;	459:28:18857:18906	127721	0	True				
ANR	128313	IdentifierDecl	* element = ( * property_Ids ) [ i ]		127721	0					
ANR	128314	IdentifierDeclType	AviaryCommon :: JobID *		127721	0					
ANR	128315	Identifier	element		127721	1					
ANR	128316	AssignmentExpression	* element = ( * property_Ids ) [ i ]		127721	2		=			
ANR	128317	Identifier	element		127721	0					
ANR	128318	ArrayIndexing	( * property_Ids ) [ i ]		127721	1					
ANR	128319	UnaryOperationExpression	* property_Ids		127721	0					
ANR	128320	UnaryOperator	*		127721	0					
ANR	128321	Identifier	property_Ids		127721	1					
ANR	128322	Identifier	i		127721	1					
ANR	128323	IfStatement	if ( NULL == element )		127721	1					
ANR	128324	Condition	NULL == element	461:31:18940:18954	127721	0	True				
ANR	128325	EqualityExpression	NULL == element		127721	0		==			
ANR	128326	Identifier	NULL		127721	0					
ANR	128327	Identifier	element		127721	1					
ANR	128328	CompoundStatement		133:28:5736:5736	127721	1					
ANR	128329	ContinueStatement	continue ;	463:32:19020:19028	127721	0	True				
ANR	128330	IfStatement	if ( ! element -> isParticle ( ) )		127721	2					
ANR	128331	Condition	! element -> isParticle ( )	474:31:19272:19293	127721	0	True				
ANR	128332	UnaryOperationExpression	! element -> isParticle ( )		127721	0					
ANR	128333	UnaryOperator	!		127721	0					
ANR	128334	CallExpression	element -> isParticle ( )		127721	1					
ANR	128335	Callee	element -> isParticle		127721	0					
ANR	128336	PtrMemberAccess	element -> isParticle		127721	0					
ANR	128337	Identifier	element		127721	0					
ANR	128338	Identifier	isParticle		127721	1					
ANR	128339	ArgumentList			127721	1					
ANR	128340	CompoundStatement		146:28:6074:6074	127721	1					
ANR	128341	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"	476:32:19358:19446	127721	0	True				
ANR	128342	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , start_input_str , start_input_str_len )"		127721	0					
ANR	128343	Callee	axutil_stream_write		127721	0					
ANR	128344	Identifier	axutil_stream_write		127721	0					
ANR	128345	ArgumentList	stream		127721	1					
ANR	128346	Argument	stream		127721	0					
ANR	128347	Identifier	stream		127721	0					
ANR	128348	Argument	Environment :: getEnv ( )		127721	1					
ANR	128349	CallExpression	Environment :: getEnv ( )		127721	0					
ANR	128350	Callee	Environment :: getEnv		127721	0					
ANR	128351	Identifier	Environment :: getEnv		127721	0					
ANR	128352	ArgumentList			127721	1					
ANR	128353	Argument	start_input_str		127721	2					
ANR	128354	Identifier	start_input_str		127721	0					
ANR	128355	Argument	start_input_str_len		127721	3					
ANR	128356	Identifier	start_input_str_len		127721	0					
ANR	128357	ExpressionStatement	"element -> serialize ( current_node , parent_element , element -> isParticle ( ) || false , namespaces , next_ns_index )"	478:28:19506:19694	127721	3	True				
ANR	128358	CallExpression	"element -> serialize ( current_node , parent_element , element -> isParticle ( ) || false , namespaces , next_ns_index )"		127721	0					
ANR	128359	Callee	element -> serialize		127721	0					
ANR	128360	PtrMemberAccess	element -> serialize		127721	0					
ANR	128361	Identifier	element		127721	0					
ANR	128362	Identifier	serialize		127721	1					
ANR	128363	ArgumentList	current_node		127721	1					
ANR	128364	Argument	current_node		127721	0					
ANR	128365	Identifier	current_node		127721	0					
ANR	128366	Argument	parent_element		127721	1					
ANR	128367	Identifier	parent_element		127721	0					
ANR	128368	Argument	element -> isParticle ( ) || false		127721	2					
ANR	128369	OrExpression	element -> isParticle ( ) || false		127721	0		||			
ANR	128370	CallExpression	element -> isParticle ( )		127721	0					
ANR	128371	Callee	element -> isParticle		127721	0					
ANR	128372	PtrMemberAccess	element -> isParticle		127721	0					
ANR	128373	Identifier	element		127721	0					
ANR	128374	Identifier	isParticle		127721	1					
ANR	128375	ArgumentList			127721	1					
ANR	128376	Identifier	false		127721	1					
ANR	128377	Argument	namespaces		127721	3					
ANR	128378	Identifier	namespaces		127721	0					
ANR	128379	Argument	next_ns_index		127721	4					
ANR	128380	Identifier	next_ns_index		127721	0					
ANR	128381	IfStatement	if ( ! element -> isParticle ( ) )		127721	4					
ANR	128382	Condition	! element -> isParticle ( )	481:31:19756:19777	127721	0	True				
ANR	128383	UnaryOperationExpression	! element -> isParticle ( )		127721	0					
ANR	128384	UnaryOperator	!		127721	0					
ANR	128385	CallExpression	element -> isParticle ( )		127721	1					
ANR	128386	Callee	element -> isParticle		127721	0					
ANR	128387	PtrMemberAccess	element -> isParticle		127721	0					
ANR	128388	Identifier	element		127721	0					
ANR	128389	Identifier	isParticle		127721	1					
ANR	128390	ArgumentList			127721	1					
ANR	128391	CompoundStatement		153:28:6558:6558	127721	1					
ANR	128392	ExpressionStatement	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"	483:32:19842:19926	127721	0	True				
ANR	128393	CallExpression	"axutil_stream_write ( stream , Environment :: getEnv ( ) , end_input_str , end_input_str_len )"		127721	0					
ANR	128394	Callee	axutil_stream_write		127721	0					
ANR	128395	Identifier	axutil_stream_write		127721	0					
ANR	128396	ArgumentList	stream		127721	1					
ANR	128397	Argument	stream		127721	0					
ANR	128398	Identifier	stream		127721	0					
ANR	128399	Argument	Environment :: getEnv ( )		127721	1					
ANR	128400	CallExpression	Environment :: getEnv ( )		127721	0					
ANR	128401	Callee	Environment :: getEnv		127721	0					
ANR	128402	Identifier	Environment :: getEnv		127721	0					
ANR	128403	ArgumentList			127721	1					
ANR	128404	Argument	end_input_str		127721	2					
ANR	128405	Identifier	end_input_str		127721	0					
ANR	128406	Argument	end_input_str_len		127721	3					
ANR	128407	Identifier	end_input_str_len		127721	0					
ANR	128408	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"	490:21:20100:20160	127721	3	True				
ANR	128409	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , start_input_str )"		127721	0					
ANR	128410	Callee	AXIS2_FREE		127721	0					
ANR	128411	Identifier	AXIS2_FREE		127721	0					
ANR	128412	ArgumentList	Environment :: getEnv ( ) -> allocator		127721	1					
ANR	128413	Argument	Environment :: getEnv ( ) -> allocator		127721	0					
ANR	128414	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		127721	0					
ANR	128415	CallExpression	Environment :: getEnv ( )		127721	0					
ANR	128416	Callee	Environment :: getEnv		127721	0					
ANR	128417	Identifier	Environment :: getEnv		127721	0					
ANR	128418	ArgumentList			127721	1					
ANR	128419	Identifier	allocator		127721	1					
ANR	128420	Argument	start_input_str		127721	1					
ANR	128421	Identifier	start_input_str		127721	0					
ANR	128422	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"	491:21:20183:20241	127721	4	True				
ANR	128423	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , end_input_str )"		127721	0					
ANR	128424	Callee	AXIS2_FREE		127721	0					
ANR	128425	Identifier	AXIS2_FREE		127721	0					
ANR	128426	ArgumentList	Environment :: getEnv ( ) -> allocator		127721	1					
ANR	128427	Argument	Environment :: getEnv ( ) -> allocator		127721	0					
ANR	128428	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		127721	0					
ANR	128429	CallExpression	Environment :: getEnv ( )		127721	0					
ANR	128430	Callee	Environment :: getEnv		127721	0					
ANR	128431	Identifier	Environment :: getEnv		127721	0					
ANR	128432	ArgumentList			127721	1					
ANR	128433	Identifier	allocator		127721	1					
ANR	128434	Argument	end_input_str		127721	1					
ANR	128435	Identifier	end_input_str		127721	0					
ANR	128436	IfStatement	if ( parent_tag_closed )		127721	32					
ANR	128437	Condition	parent_tag_closed	496:23:20326:20342	127721	0	True				
ANR	128438	Identifier	parent_tag_closed		127721	0					
ANR	128439	CompoundStatement		168:20:7115:7115	127721	1					
ANR	128440	IfStatement	if ( isValidPartialMatches )		127721	0					
ANR	128441	Condition	isValidPartialMatches	498:26:20393:20413	127721	0	True				
ANR	128442	Identifier	isValidPartialMatches		127721	0					
ANR	128443	CompoundStatement		170:23:7189:7189	127721	1					
ANR	128444	ExpressionStatement	p_prefix = NULL	501:27:20492:20507	127721	0	True				
ANR	128445	AssignmentExpression	p_prefix = NULL		127721	0		=			
ANR	128446	Identifier	p_prefix		127721	0					
ANR	128447	Identifier	NULL		127721	1					
ANR	128448	ExpressionStatement	ns1 = NULL	502:27:20536:20546	127721	1	True				
ANR	128449	AssignmentExpression	ns1 = NULL		127721	0		=			
ANR	128450	Identifier	ns1		127721	0					
ANR	128451	Identifier	NULL		127721	1					
ANR	128452	ExpressionStatement	"text_value = ( axis2_char_t * ) ( ( property_PartialMatches ) ? axutil_strdup ( Environment :: getEnv ( ) , ""true"" ) : axutil_strdup ( Environment :: getEnv ( ) , ""false"" ) )"	505:27:20629:20776	127721	2	True				
ANR	128453	AssignmentExpression	"text_value = ( axis2_char_t * ) ( ( property_PartialMatches ) ? axutil_strdup ( Environment :: getEnv ( ) , ""true"" ) : axutil_strdup ( Environment :: getEnv ( ) , ""false"" ) )"		127721	0		=			
ANR	128454	Identifier	text_value		127721	0					
ANR	128455	CastExpression	"( axis2_char_t * ) ( ( property_PartialMatches ) ? axutil_strdup ( Environment :: getEnv ( ) , ""true"" ) : axutil_strdup ( Environment :: getEnv ( ) , ""false"" ) )"		127721	1					
ANR	128456	CastTarget	axis2_char_t *		127721	0					
ANR	128457	ConditionalExpression	"( property_PartialMatches ) ? axutil_strdup ( Environment :: getEnv ( ) , ""true"" ) : axutil_strdup ( Environment :: getEnv ( ) , ""false"" )"		127721	1					
ANR	128458	Condition	property_PartialMatches		127721	0					
ANR	128459	Identifier	property_PartialMatches		127721	0					
ANR	128460	CallExpression	"axutil_strdup ( Environment :: getEnv ( ) , ""true"" )"		127721	1					
ANR	128461	Callee	axutil_strdup		127721	0					
ANR	128462	Identifier	axutil_strdup		127721	0					
ANR	128463	ArgumentList	Environment :: getEnv ( )		127721	1					
ANR	128464	Argument	Environment :: getEnv ( )		127721	0					
ANR	128465	CallExpression	Environment :: getEnv ( )		127721	0					
ANR	128466	Callee	Environment :: getEnv		127721	0					
ANR	128467	Identifier	Environment :: getEnv		127721	0					
ANR	128468	ArgumentList			127721	1					
ANR	128469	Argument	"""true"""		127721	1					
ANR	128470	PrimaryExpression	"""true"""		127721	0					
ANR	128471	CallExpression	"axutil_strdup ( Environment :: getEnv ( ) , ""false"" )"		127721	2					
ANR	128472	Callee	axutil_strdup		127721	0					
ANR	128473	Identifier	axutil_strdup		127721	0					
ANR	128474	ArgumentList	Environment :: getEnv ( )		127721	1					
ANR	128475	Argument	Environment :: getEnv ( )		127721	0					
ANR	128476	CallExpression	Environment :: getEnv ( )		127721	0					
ANR	128477	Callee	Environment :: getEnv		127721	0					
ANR	128478	Identifier	Environment :: getEnv		127721	0					
ANR	128479	ArgumentList			127721	1					
ANR	128480	Argument	"""false"""		127721	1					
ANR	128481	PrimaryExpression	"""false"""		127721	0					
ANR	128482	ExpressionStatement	"text_attri = axiom_attribute_create ( Environment :: getEnv ( ) , ""partialMatches"" , text_value , ns1 )"	506:27:20805:20899	127721	3	True				
ANR	128483	AssignmentExpression	"text_attri = axiom_attribute_create ( Environment :: getEnv ( ) , ""partialMatches"" , text_value , ns1 )"		127721	0		=			
ANR	128484	Identifier	text_attri		127721	0					
ANR	128485	CallExpression	"axiom_attribute_create ( Environment :: getEnv ( ) , ""partialMatches"" , text_value , ns1 )"		127721	1					
ANR	128486	Callee	axiom_attribute_create		127721	0					
ANR	128487	Identifier	axiom_attribute_create		127721	0					
ANR	128488	ArgumentList	Environment :: getEnv ( )		127721	1					
ANR	128489	Argument	Environment :: getEnv ( )		127721	0					
ANR	128490	CallExpression	Environment :: getEnv ( )		127721	0					
ANR	128491	Callee	Environment :: getEnv		127721	0					
ANR	128492	Identifier	Environment :: getEnv		127721	0					
ANR	128493	ArgumentList			127721	1					
ANR	128494	Argument	"""partialMatches"""		127721	1					
ANR	128495	PrimaryExpression	"""partialMatches"""		127721	0					
ANR	128496	Argument	text_value		127721	2					
ANR	128497	Identifier	text_value		127721	0					
ANR	128498	Argument	ns1		127721	3					
ANR	128499	Identifier	ns1		127721	0					
ANR	128500	ExpressionStatement	"axiom_element_add_attribute ( parent_element , Environment :: getEnv ( ) , text_attri , parent )"	507:27:20928:21015	127721	4	True				
ANR	128501	CallExpression	"axiom_element_add_attribute ( parent_element , Environment :: getEnv ( ) , text_attri , parent )"		127721	0					
ANR	128502	Callee	axiom_element_add_attribute		127721	0					
ANR	128503	Identifier	axiom_element_add_attribute		127721	0					
ANR	128504	ArgumentList	parent_element		127721	1					
ANR	128505	Argument	parent_element		127721	0					
ANR	128506	Identifier	parent_element		127721	0					
ANR	128507	Argument	Environment :: getEnv ( )		127721	1					
ANR	128508	CallExpression	Environment :: getEnv ( )		127721	0					
ANR	128509	Callee	Environment :: getEnv		127721	0					
ANR	128510	Identifier	Environment :: getEnv		127721	0					
ANR	128511	ArgumentList			127721	1					
ANR	128512	Argument	text_attri		127721	2					
ANR	128513	Identifier	text_attri		127721	0					
ANR	128514	Argument	parent		127721	3					
ANR	128515	Identifier	parent		127721	0					
ANR	128516	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value )"	508:27:21044:21100	127721	5	True				
ANR	128517	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , text_value )"		127721	0					
ANR	128518	Callee	AXIS2_FREE		127721	0					
ANR	128519	Identifier	AXIS2_FREE		127721	0					
ANR	128520	ArgumentList	Environment :: getEnv ( ) -> allocator		127721	1					
ANR	128521	Argument	Environment :: getEnv ( ) -> allocator		127721	0					
ANR	128522	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		127721	0					
ANR	128523	CallExpression	Environment :: getEnv ( )		127721	0					
ANR	128524	Callee	Environment :: getEnv		127721	0					
ANR	128525	Identifier	Environment :: getEnv		127721	0					
ANR	128526	ArgumentList			127721	1					
ANR	128527	Identifier	allocator		127721	1					
ANR	128528	Argument	text_value		127721	1					
ANR	128529	Identifier	text_value		127721	0					
ANR	128530	IfStatement	if ( namespaces )		127721	33					
ANR	128531	Condition	namespaces	514:22:21234:21243	127721	0	True				
ANR	128532	Identifier	namespaces		127721	0					
ANR	128533	CompoundStatement		188:23:8088:8097	127721	1					
ANR	128534	IdentifierDeclStatement	axutil_hash_index_t * hi ;	516:23:21290:21313	127721	0	True				
ANR	128535	IdentifierDecl	* hi		127721	0					
ANR	128536	IdentifierDeclType	axutil_hash_index_t *		127721	0					
ANR	128537	Identifier	hi		127721	1					
ANR	128538	IdentifierDeclStatement	void * val ;	517:23:21338:21347	127721	1	True				
ANR	128539	IdentifierDecl	* val		127721	0					
ANR	128540	IdentifierDeclType	void *		127721	0					
ANR	128541	Identifier	val		127721	1					
ANR	128542	ForStatement	"for ( hi = axutil_hash_first ( namespaces , Environment :: getEnv ( ) ) ; hi ; hi = axutil_hash_next ( Environment :: getEnv ( ) , hi ) )"		127721	2					
ANR	128543	ForInit	"hi = axutil_hash_first ( namespaces , Environment :: getEnv ( ) ) ;"	518:28:21377:21434	127721	0	True				
ANR	128544	AssignmentExpression	"hi = axutil_hash_first ( namespaces , Environment :: getEnv ( ) )"		127721	0		=			
ANR	128545	Identifier	hi		127721	0					
ANR	128546	CallExpression	"axutil_hash_first ( namespaces , Environment :: getEnv ( ) )"		127721	1					
ANR	128547	Callee	axutil_hash_first		127721	0					
ANR	128548	Identifier	axutil_hash_first		127721	0					
ANR	128549	ArgumentList	namespaces		127721	1					
ANR	128550	Argument	namespaces		127721	0					
ANR	128551	Identifier	namespaces		127721	0					
ANR	128552	Argument	Environment :: getEnv ( )		127721	1					
ANR	128553	CallExpression	Environment :: getEnv ( )		127721	0					
ANR	128554	Callee	Environment :: getEnv		127721	0					
ANR	128555	Identifier	Environment :: getEnv		127721	0					
ANR	128556	ArgumentList			127721	1					
ANR	128557	Condition	hi	518:87:21436:21437	127721	1	True				
ANR	128558	Identifier	hi		127721	0					
ANR	128559	AssignmentExpression	"hi = axutil_hash_next ( Environment :: getEnv ( ) , hi )"	518:91:21440:21487	127721	2	True	=			
ANR	128560	Identifier	hi		127721	0					
ANR	128561	CallExpression	"axutil_hash_next ( Environment :: getEnv ( ) , hi )"		127721	1					
ANR	128562	Callee	axutil_hash_next		127721	0					
ANR	128563	Identifier	axutil_hash_next		127721	0					
ANR	128564	ArgumentList	Environment :: getEnv ( )		127721	1					
ANR	128565	Argument	Environment :: getEnv ( )		127721	0					
ANR	128566	CallExpression	Environment :: getEnv ( )		127721	0					
ANR	128567	Callee	Environment :: getEnv		127721	0					
ANR	128568	Identifier	Environment :: getEnv		127721	0					
ANR	128569	ArgumentList			127721	1					
ANR	128570	Argument	hi		127721	1					
ANR	128571	Identifier	hi		127721	0					
ANR	128572	CompoundStatement		190:23:8263:8263	127721	3					
ANR	128573	ExpressionStatement	"axutil_hash_this ( hi , NULL , NULL , & val )"	520:27:21542:21580	127721	0	True				
ANR	128574	CallExpression	"axutil_hash_this ( hi , NULL , NULL , & val )"		127721	0					
ANR	128575	Callee	axutil_hash_this		127721	0					
ANR	128576	Identifier	axutil_hash_this		127721	0					
ANR	128577	ArgumentList	hi		127721	1					
ANR	128578	Argument	hi		127721	0					
ANR	128579	Identifier	hi		127721	0					
ANR	128580	Argument	NULL		127721	1					
ANR	128581	Identifier	NULL		127721	0					
ANR	128582	Argument	NULL		127721	2					
ANR	128583	Identifier	NULL		127721	0					
ANR	128584	Argument	& val		127721	3					
ANR	128585	UnaryOperationExpression	& val		127721	0					
ANR	128586	UnaryOperator	&		127721	0					
ANR	128587	Identifier	val		127721	1					
ANR	128588	ExpressionStatement	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , val )"	521:27:21609:21658	127721	1	True				
ANR	128589	CallExpression	"AXIS2_FREE ( Environment :: getEnv ( ) -> allocator , val )"		127721	0					
ANR	128590	Callee	AXIS2_FREE		127721	0					
ANR	128591	Identifier	AXIS2_FREE		127721	0					
ANR	128592	ArgumentList	Environment :: getEnv ( ) -> allocator		127721	1					
ANR	128593	Argument	Environment :: getEnv ( ) -> allocator		127721	0					
ANR	128594	PtrMemberAccess	Environment :: getEnv ( ) -> allocator		127721	0					
ANR	128595	CallExpression	Environment :: getEnv ( )		127721	0					
ANR	128596	Callee	Environment :: getEnv		127721	0					
ANR	128597	Identifier	Environment :: getEnv		127721	0					
ANR	128598	ArgumentList			127721	1					
ANR	128599	Identifier	allocator		127721	1					
ANR	128600	Argument	val		127721	1					
ANR	128601	Identifier	val		127721	0					
ANR	128602	ExpressionStatement	"axutil_hash_free ( namespaces , Environment :: getEnv ( ) )"	523:23:21708:21759	127721	3	True				
ANR	128603	CallExpression	"axutil_hash_free ( namespaces , Environment :: getEnv ( ) )"		127721	0					
ANR	128604	Callee	axutil_hash_free		127721	0					
ANR	128605	Identifier	axutil_hash_free		127721	0					
ANR	128606	ArgumentList	namespaces		127721	1					
ANR	128607	Argument	namespaces		127721	0					
ANR	128608	Identifier	namespaces		127721	0					
ANR	128609	Argument	Environment :: getEnv ( )		127721	1					
ANR	128610	CallExpression	Environment :: getEnv ( )		127721	0					
ANR	128611	Callee	Environment :: getEnv		127721	0					
ANR	128612	Identifier	Environment :: getEnv		127721	0					
ANR	128613	ArgumentList			127721	1					
ANR	128614	ReturnStatement	return parent ;	527:12:21812:21825	127721	34	True				
ANR	128615	Identifier	parent		127721	0					
ANR	128616	ReturnType	WSF_CALL		127721	1					
ANR	128617	Identifier	AviaryQuery :: GetJobStatus :: serialize		127721	2					
ANR	128618	ParameterList	"axiom_node_t * parent , axiom_element_t * parent_element , int parent_tag_closed , axutil_hash_t * namespaces , int * next_ns_index"		127721	3					
ANR	128619	Parameter	axiom_node_t * parent	325:38:13100:13119	127721	0	True				
ANR	128620	ParameterType	axiom_node_t *		127721	0					
ANR	128621	Identifier	parent		127721	1					
ANR	128622	Parameter	axiom_element_t * parent_element	326:3:13126:13156	127721	1	True				
ANR	128623	ParameterType	axiom_element_t *		127721	0					
ANR	128624	Identifier	parent_element		127721	1					
ANR	128625	Parameter	int parent_tag_closed	327:3:13163:13183	127721	2	True				
ANR	128626	ParameterType	int		127721	0					
ANR	128627	Identifier	parent_tag_closed		127721	1					
ANR	128628	Parameter	axutil_hash_t * namespaces	328:3:13190:13214	127721	3	True				
ANR	128629	ParameterType	axutil_hash_t *		127721	0					
ANR	128630	Identifier	namespaces		127721	1					
ANR	128631	Parameter	int * next_ns_index	329:3:13221:13238	127721	4	True				
ANR	128632	ParameterType	int *		127721	0					
ANR	128633	Identifier	next_ns_index		127721	1					
ANR	128634	CFGEntryNode	ENTRY		127721		True				
ANR	128635	CFGExitNode	EXIT		127721		True				
ANR	128636	Symbol	& val		127721						
ANR	128637	Symbol	parent		127721						
ANR	128638	Symbol	hi		127721						
ANR	128639	Symbol	current_node		127721						
ANR	128640	Symbol	* * property_Ids		127721						
ANR	128641	Symbol	axutil_strlen		127721						
ANR	128642	Symbol	& next_ns_index_value		127721						
ANR	128643	Symbol	ns1		127721						
ANR	128644	Symbol	& current_node		127721						
ANR	128645	Symbol	axiom_attribute_create		127721						
ANR	128646	Symbol	axutil_hash_next		127721						
ANR	128647	Symbol	axutil_hash_make		127721						
ANR	128648	Symbol	element		127721						
ANR	128649	Symbol	val		127721						
ANR	128650	Symbol	axiom_data_source_get_stream		127721						
ANR	128651	Symbol	NULL		127721						
ANR	128652	Symbol	* property_Ids		127721						
ANR	128653	Symbol	count		127721						
ANR	128654	Symbol	parent_tag_closed		127721						
ANR	128655	Symbol	next_ns_index		127721						
ANR	128656	Symbol	data_source		127721						
ANR	128657	Symbol	text_value		127721						
ANR	128658	Symbol	start_input_str_len		127721						
ANR	128659	Symbol	axiom_data_source_create		127721						
ANR	128660	Symbol	qname_prefix		127721						
ANR	128661	Symbol	next_ns_index_value		127721						
ANR	128662	Symbol	axutil_strcmp		127721						
ANR	128663	Symbol	end_input_str		127721						
ANR	128664	Symbol	& parent		127721						
ANR	128665	Symbol	namespaces		127721						
ANR	128666	Symbol	isValidPartialMatches		127721						
ANR	128667	Symbol	AXIS2_HASH_KEY_STRING		127721						
ANR	128668	Symbol	Environment :: getEnv		127721						
ANR	128669	Symbol	* element		127721						
ANR	128670	Symbol	axiom_namespace_create		127721						
ANR	128671	Symbol	qname_uri		127721						
ANR	128672	Symbol	property_PartialMatches		127721						
ANR	128673	Symbol	p_prefix		127721						
ANR	128674	Symbol	property_Ids		127721						
ANR	128675	Symbol	text_value_2		127721						
ANR	128676	Symbol	stream		127721						
ANR	128677	Symbol	text_attri		127721						
ANR	128678	Symbol	text_value_1		127721						
ANR	128679	Symbol	AXIS2_MALLOC		127721						
ANR	128680	Symbol	Environment :: getEnv ( ) -> allocator		127721						
ANR	128681	Symbol	parent_element		127721						
ANR	128682	Symbol	end_input_str_len		127721						
ANR	128683	Symbol	tag_closed		127721						
ANR	128684	Symbol	isValidIds		127721						
ANR	128685	Symbol	false		127721						
ANR	128686	Symbol	i		127721						
ANR	128687	Symbol	start_input_str		127721						
ANR	128688	Symbol	ADB_DEFAULT_NAMESPACE_PREFIX_LIMIT		127721						
ANR	128689	Symbol	string_to_stream		127721						
ANR	128690	Symbol	* i		127721						
ANR	128691	Symbol	axutil_hash_first		127721						
ANR	128692	Symbol	* Environment :: getEnv		127721						
ANR	128693	Symbol	axutil_strdup		127721						
ANR	128694	Symbol	property_Ids -> size		127721						
ANR	128695	Symbol	element -> isParticle		127721						
ANR	128696	Symbol	axiom_element_create		127721						
ANR	128697	Function	AviaryQuery :: GetJobStatus :: getProperty1	536:47:21980:22102							
ANR	128698	FunctionDef	AviaryQuery :: GetJobStatus :: getProperty1 ()		128697	0					
ANR	128699	CompoundStatement		538:12:22055:22102	128697	0					
ANR	128700	ReturnStatement	return getIds ( ) ;	539:16:22073:22088	128697	0	True				
ANR	128701	CallExpression	getIds ( )		128697	0					
ANR	128702	Callee	getIds		128697	0					
ANR	128703	Identifier	getIds		128697	0					
ANR	128704	ArgumentList			128697	1					
ANR	128705	ReturnType	WSF_CALL		128697	1					
ANR	128706	Identifier	AviaryQuery :: GetJobStatus :: getProperty1		128697	2					
ANR	128707	ParameterList			128697	3					
ANR	128708	CFGEntryNode	ENTRY		128697		True				
ANR	128709	CFGExitNode	EXIT		128697		True				
ANR	128710	Symbol	getIds		128697						
ANR	128711	Function	AviaryQuery :: GetJobStatus :: getIds	545:47:22215:22337							
ANR	128712	FunctionDef	AviaryQuery :: GetJobStatus :: getIds ()		128711	0					
ANR	128713	CompoundStatement		547:13:22285:22337	128711	0					
ANR	128714	ReturnStatement	return property_Ids ;	548:16:22303:22322	128711	0	True				
ANR	128715	Identifier	property_Ids		128711	0					
ANR	128716	ReturnType	WSF_CALL		128711	1					
ANR	128717	Identifier	AviaryQuery :: GetJobStatus :: getIds		128711	2					
ANR	128718	ParameterList			128711	3					
ANR	128719	CFGEntryNode	ENTRY		128711		True				
ANR	128720	CFGExitNode	EXIT		128711		True				
ANR	128721	Symbol	property_Ids		128711						
ANR	128722	Function	AviaryQuery :: GetJobStatus :: setIds	554:12:22414:23976							
ANR	128723	FunctionDef	AviaryQuery :: GetJobStatus :: setIds (std :: vector < AviaryCommon :: JobID * > * arg_Ids)		128722	0					
ANR	128724	CompoundStatement		557:13:22553:23976	128722	0					
ANR	128725	IdentifierDeclStatement	int size = 0 ;	559:17:22589:22601	128722	0	True				
ANR	128726	IdentifierDecl	size = 0		128722	0					
ANR	128727	IdentifierDeclType	int		128722	0					
ANR	128728	Identifier	size		128722	1					
ANR	128729	AssignmentExpression	size = 0		128722	2		=			
ANR	128730	Identifier	size		128722	0					
ANR	128731	PrimaryExpression	0		128722	1					
ANR	128732	IdentifierDeclStatement	int i = 0 ;	560:17:22620:22629	128722	1	True				
ANR	128733	IdentifierDecl	i = 0		128722	0					
ANR	128734	IdentifierDeclType	int		128722	0					
ANR	128735	Identifier	i		128722	1					
ANR	128736	AssignmentExpression	i = 0		128722	2		=			
ANR	128737	Identifier	i		128722	0					
ANR	128738	PrimaryExpression	0		128722	1					
ANR	128739	IdentifierDeclStatement	bool non_nil_exists = false ;	561:17:22648:22675	128722	2	True				
ANR	128740	IdentifierDecl	non_nil_exists = false		128722	0					
ANR	128741	IdentifierDeclType	bool		128722	0					
ANR	128742	Identifier	non_nil_exists		128722	1					
ANR	128743	AssignmentExpression	non_nil_exists = false		128722	2		=			
ANR	128744	Identifier	false		128722	0					
ANR	128745	Identifier	false		128722	1					
ANR	128746	IfStatement	if ( isValidIds && arg_Ids == property_Ids )		128722	3					
ANR	128747	Condition	isValidIds && arg_Ids == property_Ids	564:19:22714:22774	128722	0	True				
ANR	128748	AndExpression	isValidIds && arg_Ids == property_Ids		128722	0		&&			
ANR	128749	Identifier	isValidIds		128722	0					
ANR	128750	EqualityExpression	arg_Ids == property_Ids		128722	1		==			
ANR	128751	Identifier	arg_Ids		128722	0					
ANR	128752	Identifier	property_Ids		128722	1					
ANR	128753	CompoundStatement		10:16:239:239	128722	1					
ANR	128754	ReturnStatement	return true ;	568:20:22836:22847	128722	0	True				
ANR	128755	Identifier	true		128722	0					
ANR	128756	ExpressionStatement	size = arg_Ids -> size ( )	572:17:22902:22924	128722	4	True				
ANR	128757	AssignmentExpression	size = arg_Ids -> size ( )		128722	0		=			
ANR	128758	Identifier	size		128722	0					
ANR	128759	CallExpression	arg_Ids -> size ( )		128722	1					
ANR	128760	Callee	arg_Ids -> size		128722	0					
ANR	128761	PtrMemberAccess	arg_Ids -> size		128722	0					
ANR	128762	Identifier	arg_Ids		128722	0					
ANR	128763	Identifier	size		128722	1					
ANR	128764	ArgumentList			128722	1					
ANR	128765	IfStatement	if ( size < 0 )		128722	5					
ANR	128766	Condition	size < 0	574:21:22965:22972	128722	0	True				
ANR	128767	RelationalExpression	size < 0		128722	0		<			
ANR	128768	Identifier	size		128722	0					
ANR	128769	PrimaryExpression	0		128722	1					
ANR	128770	CompoundStatement		19:17:438:438	128722	1					
ANR	128771	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""ids has less than minOccurs(0)"" )"	576:21:23015:23105	128722	0	True				
ANR	128772	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""ids has less than minOccurs(0)"" )"		128722	0					
ANR	128773	Callee	WSF_LOG_ERROR_MSG		128722	0					
ANR	128774	Identifier	WSF_LOG_ERROR_MSG		128722	0					
ANR	128775	ArgumentList	Environment :: getEnv ( ) -> log		128722	1					
ANR	128776	Argument	Environment :: getEnv ( ) -> log		128722	0					
ANR	128777	PtrMemberAccess	Environment :: getEnv ( ) -> log		128722	0					
ANR	128778	CallExpression	Environment :: getEnv ( )		128722	0					
ANR	128779	Callee	Environment :: getEnv		128722	0					
ANR	128780	Identifier	Environment :: getEnv		128722	0					
ANR	128781	ArgumentList			128722	1					
ANR	128782	Identifier	log		128722	1					
ANR	128783	Argument	WSF_LOG_SI		128722	1					
ANR	128784	Identifier	WSF_LOG_SI		128722	0					
ANR	128785	Argument	"""ids has less than minOccurs(0)"""		128722	2					
ANR	128786	PrimaryExpression	"""ids has less than minOccurs(0)"""		128722	0					
ANR	128787	ReturnStatement	return false ;	577:21:23128:23140	128722	1	True				
ANR	128788	Identifier	false		128722	0					
ANR	128789	ForStatement	for ( i = 0 ; i < size ; i ++ )		128722	6					
ANR	128790	ForInit	i = 0 ;	579:21:23182:23187	128722	0	True				
ANR	128791	AssignmentExpression	i = 0		128722	0		=			
ANR	128792	Identifier	i		128722	0					
ANR	128793	PrimaryExpression	0		128722	1					
ANR	128794	Condition	i < size	579:28:23189:23196	128722	1	True				
ANR	128795	RelationalExpression	i < size		128722	0		<			
ANR	128796	Identifier	i		128722	0					
ANR	128797	Identifier	size		128722	1					
ANR	128798	PostIncDecOperationExpression	i ++	579:38:23199:23202	128722	2	True				
ANR	128799	Identifier	i		128722	0					
ANR	128800	IncDec	++		128722	1					
ANR	128801	CompoundStatement		24:17:669:669	128722	3					
ANR	128802	IfStatement	if ( NULL != ( * arg_Ids ) [ i ] )		128722	0					
ANR	128803	Condition	NULL != ( * arg_Ids ) [ i ]	581:24:23249:23269	128722	0	True				
ANR	128804	EqualityExpression	NULL != ( * arg_Ids ) [ i ]		128722	0		!=			
ANR	128805	Identifier	NULL		128722	0					
ANR	128806	ArrayIndexing	( * arg_Ids ) [ i ]		128722	1					
ANR	128807	UnaryOperationExpression	* arg_Ids		128722	0					
ANR	128808	UnaryOperator	*		128722	0					
ANR	128809	Identifier	arg_Ids		128722	1					
ANR	128810	Identifier	i		128722	1					
ANR	128811	CompoundStatement		26:21:739:739	128722	1					
ANR	128812	ExpressionStatement	non_nil_exists = true	583:25:23320:23341	128722	0	True				
ANR	128813	AssignmentExpression	non_nil_exists = true		128722	0		=			
ANR	128814	Identifier	non_nil_exists		128722	0					
ANR	128815	Identifier	true		128722	1					
ANR	128816	BreakStatement	break ;	584:25:23368:23373	128722	1	True				
ANR	128817	ExpressionStatement	resetIds ( )	591:16:23470:23480	128722	7	True				
ANR	128818	CallExpression	resetIds ( )		128722	0					
ANR	128819	Callee	resetIds		128722	0					
ANR	128820	Identifier	resetIds		128722	0					
ANR	128821	ArgumentList			128722	1					
ANR	128822	IfStatement	if ( NULL == arg_Ids )		128722	8					
ANR	128823	Condition	NULL == arg_Ids	594:23:23523:23537	128722	0	True				
ANR	128824	EqualityExpression	NULL == arg_Ids		128722	0		==			
ANR	128825	Identifier	NULL		128722	0					
ANR	128826	Identifier	arg_Ids		128722	1					
ANR	128827	CompoundStatement		40:16:1028:1028	128722	1					
ANR	128828	ReturnStatement	return true ;	598:20:23650:23661	128722	0	True				
ANR	128829	Identifier	true		128722	0					
ANR	128830	ExpressionStatement	property_Ids = arg_Ids	601:24:23722:23744	128722	9	True				
ANR	128831	AssignmentExpression	property_Ids = arg_Ids		128722	0		=			
ANR	128832	Identifier	property_Ids		128722	0					
ANR	128833	Identifier	arg_Ids		128722	1					
ANR	128834	IfStatement	if ( non_nil_exists )		128722	10					
ANR	128835	Condition	non_nil_exists	602:27:23773:23786	128722	0	True				
ANR	128836	Identifier	non_nil_exists		128722	0					
ANR	128837	CompoundStatement		47:24:1259:1259	128722	1					
ANR	128838	ExpressionStatement	isValidIds = true	604:28:23843:23860	128722	0	True				
ANR	128839	AssignmentExpression	isValidIds = true		128722	0		=			
ANR	128840	Identifier	isValidIds		128722	0					
ANR	128841	Identifier	true		128722	1					
ANR	128842	ReturnStatement	return true ;	608:16:23950:23961	128722	11	True				
ANR	128843	Identifier	true		128722	0					
ANR	128844	ReturnType	bool WSF_CALL		128722	1					
ANR	128845	Identifier	AviaryQuery :: GetJobStatus :: setIds		128722	2					
ANR	128846	ParameterList	std :: vector < AviaryCommon :: JobID * > * arg_Ids		128722	3					
ANR	128847	Parameter	std :: vector < AviaryCommon :: JobID * > * arg_Ids	556:20:22495:22537	128722	0	True				
ANR	128848	ParameterType	std :: vector < AviaryCommon :: JobID * > *		128722	0					
ANR	128849	Identifier	arg_Ids		128722	1					
ANR	128850	CFGEntryNode	ENTRY		128722		True				
ANR	128851	CFGExitNode	EXIT		128722		True				
ANR	128852	Symbol	Environment :: getEnv		128722						
ANR	128853	Symbol	NULL		128722						
ANR	128854	Symbol	* arg_Ids		128722						
ANR	128855	Symbol	isValidIds		128722						
ANR	128856	Symbol	false		128722						
ANR	128857	Symbol	i		128722						
ANR	128858	Symbol	arg_Ids -> size		128722						
ANR	128859	Symbol	* * arg_Ids		128722						
ANR	128860	Symbol	Environment :: getEnv ( ) -> log		128722						
ANR	128861	Symbol	arg_Ids		128722						
ANR	128862	Symbol	property_Ids		128722						
ANR	128863	Symbol	* i		128722						
ANR	128864	Symbol	size		128722						
ANR	128865	Symbol	WSF_LOG_SI		128722						
ANR	128866	Symbol	* Environment :: getEnv		128722						
ANR	128867	Symbol	non_nil_exists		128722						
ANR	128868	Symbol	true		128722						
ANR	128869	Function	AviaryQuery :: GetJobStatus :: getIdsAt	615:33:24096:24481							
ANR	128870	FunctionDef	AviaryQuery :: GetJobStatus :: getIdsAt (int i)		128869	0					
ANR	128871	CompoundStatement		617:12:24172:24481	128869	0					
ANR	128872	IdentifierDeclStatement	AviaryCommon :: JobID * ret_val ;	618:16:24190:24218	128869	0	True				
ANR	128873	IdentifierDecl	* ret_val		128869	0					
ANR	128874	IdentifierDeclType	AviaryCommon :: JobID *		128869	0					
ANR	128875	Identifier	ret_val		128869	1					
ANR	128876	IfStatement	if ( property_Ids == NULL )		128869	1					
ANR	128877	Condition	property_Ids == NULL	619:19:24239:24258	128869	0	True				
ANR	128878	EqualityExpression	property_Ids == NULL		128869	0		==			
ANR	128879	Identifier	property_Ids		128869	0					
ANR	128880	Identifier	NULL		128869	1					
ANR	128881	CompoundStatement		4:16:104:104	128869	1					
ANR	128882	ReturnStatement	return ( AviaryCommon :: JobID * ) 0 ;	621:20:24299:24329	128869	0	True				
ANR	128883	CastExpression	( AviaryCommon :: JobID * ) 0		128869	0					
ANR	128884	CastTarget	AviaryCommon :: JobID *		128869	0					
ANR	128885	PrimaryExpression	0		128869	1					
ANR	128886	ExpressionStatement	ret_val = ( * property_Ids ) [ i ]	623:16:24365:24395	128869	2	True				
ANR	128887	AssignmentExpression	ret_val = ( * property_Ids ) [ i ]		128869	0		=			
ANR	128888	Identifier	ret_val		128869	0					
ANR	128889	ArrayIndexing	( * property_Ids ) [ i ]		128869	1					
ANR	128890	UnaryOperationExpression	* property_Ids		128869	0					
ANR	128891	UnaryOperator	*		128869	0					
ANR	128892	Identifier	property_Ids		128869	1					
ANR	128893	Identifier	i		128869	1					
ANR	128894	ReturnStatement	return ret_val ;	625:20:24434:24448	128869	3	True				
ANR	128895	Identifier	ret_val		128869	0					
ANR	128896	ReturnType	WSF_CALL		128869	1					
ANR	128897	Identifier	AviaryQuery :: GetJobStatus :: getIdsAt		128869	2					
ANR	128898	ParameterList	int i		128869	3					
ANR	128899	Parameter	int i	616:48:24153:24157	128869	0	True				
ANR	128900	ParameterType	int		128869	0					
ANR	128901	Identifier	i		128869	1					
ANR	128902	CFGEntryNode	ENTRY		128869		True				
ANR	128903	CFGExitNode	EXIT		128869		True				
ANR	128904	Symbol	NULL		128869						
ANR	128905	Symbol	property_Ids		128869						
ANR	128906	Symbol	* i		128869						
ANR	128907	Symbol	* property_Ids		128869						
ANR	128908	Symbol	* * property_Ids		128869						
ANR	128909	Symbol	i		128869						
ANR	128910	Symbol	ret_val		128869						
ANR	128911	Function	AviaryQuery :: GetJobStatus :: setIdsAt	632:11:24570:26312							
ANR	128912	FunctionDef	"AviaryQuery :: GetJobStatus :: setIdsAt (int i , AviaryCommon :: JobID * arg_Ids)"		128911	0					
ANR	128913	CompoundStatement		635:12:24701:26312	128911	0					
ANR	128914	IdentifierDeclStatement	AviaryCommon :: JobID * element ;	636:17:24720:24748	128911	0	True				
ANR	128915	IdentifierDecl	* element		128911	0					
ANR	128916	IdentifierDeclType	AviaryCommon :: JobID *		128911	0					
ANR	128917	Identifier	element		128911	1					
ANR	128918	IdentifierDeclStatement	int size = 0 ;	637:16:24766:24778	128911	1	True				
ANR	128919	IdentifierDecl	size = 0		128911	0					
ANR	128920	IdentifierDeclType	int		128911	0					
ANR	128921	Identifier	size		128911	1					
ANR	128922	AssignmentExpression	size = 0		128911	2		=			
ANR	128923	Identifier	size		128911	0					
ANR	128924	PrimaryExpression	0		128911	1					
ANR	128925	IdentifierDeclStatement	int non_nil_count ;	639:16:24797:24814	128911	2	True				
ANR	128926	IdentifierDecl	non_nil_count		128911	0					
ANR	128927	IdentifierDeclType	int		128911	0					
ANR	128928	Identifier	non_nil_count		128911	1					
ANR	128929	IdentifierDeclStatement	bool non_nil_exists = false ;	640:16:24832:24859	128911	3	True				
ANR	128930	IdentifierDecl	non_nil_exists = false		128911	0					
ANR	128931	IdentifierDeclType	bool		128911	0					
ANR	128932	Identifier	non_nil_exists		128911	1					
ANR	128933	AssignmentExpression	non_nil_exists = false		128911	2		=			
ANR	128934	Identifier	false		128911	0					
ANR	128935	Identifier	false		128911	1					
ANR	128936	IfStatement	if ( isValidIds && property_Ids && arg_Ids == ( * property_Ids ) [ i ] )		128911	4					
ANR	128937	Condition	isValidIds && property_Ids && arg_Ids == ( * property_Ids ) [ i ]	644:20:24901:25018	128911	0	True				
ANR	128938	AndExpression	isValidIds && property_Ids && arg_Ids == ( * property_Ids ) [ i ]		128911	0		&&			
ANR	128939	Identifier	isValidIds		128911	0					
ANR	128940	AndExpression	property_Ids && arg_Ids == ( * property_Ids ) [ i ]		128911	1		&&			
ANR	128941	Identifier	property_Ids		128911	0					
ANR	128942	EqualityExpression	arg_Ids == ( * property_Ids ) [ i ]		128911	1		==			
ANR	128943	Identifier	arg_Ids		128911	0					
ANR	128944	ArrayIndexing	( * property_Ids ) [ i ]		128911	1					
ANR	128945	UnaryOperationExpression	* property_Ids		128911	0					
ANR	128946	UnaryOperator	*		128911	0					
ANR	128947	Identifier	property_Ids		128911	1					
ANR	128948	Identifier	i		128911	1					
ANR	128949	CompoundStatement		15:17:355:355	128911	1					
ANR	128950	ReturnStatement	return AXIS2_SUCCESS ;	651:20:25100:25120	128911	0	True				
ANR	128951	Identifier	AXIS2_SUCCESS		128911	0					
ANR	128952	ExpressionStatement	non_nil_exists = true	655:21:25183:25204	128911	5	True				
ANR	128953	AssignmentExpression	non_nil_exists = true		128911	0		=			
ANR	128954	Identifier	non_nil_exists		128911	0					
ANR	128955	Identifier	true		128911	1					
ANR	128956	IfStatement	if ( property_Ids == NULL )		128911	6					
ANR	128957	Condition	property_Ids == NULL	658:19:25245:25264	128911	0	True				
ANR	128958	EqualityExpression	property_Ids == NULL		128911	0		==			
ANR	128959	Identifier	property_Ids		128911	0					
ANR	128960	Identifier	NULL		128911	1					
ANR	128961	CompoundStatement		25:16:581:581	128911	1					
ANR	128962	ExpressionStatement	property_Ids = new std :: vector < AviaryCommon :: JobID * > ( )	660:20:25305:25359	128911	0	True				
ANR	128963	AssignmentExpression	property_Ids = new std :: vector < AviaryCommon :: JobID * > ( )		128911	0		=			
ANR	128964	Identifier	property_Ids		128911	0					
ANR	128965	UnaryExpression	new std :: vector < AviaryCommon :: JobID * > ( )		128911	1					
ANR	128966	ElseStatement	else		128911	0					
ANR	128967	CompoundStatement		28:20:697:697	128911	0					
ANR	128968	ExpressionStatement	element = ( * property_Ids ) [ i ]	664:16:25484:25512	128911	0	True				
ANR	128969	AssignmentExpression	element = ( * property_Ids ) [ i ]		128911	0		=			
ANR	128970	Identifier	element		128911	0					
ANR	128971	ArrayIndexing	( * property_Ids ) [ i ]		128911	1					
ANR	128972	UnaryOperationExpression	* property_Ids		128911	0					
ANR	128973	UnaryOperator	*		128911	0					
ANR	128974	Identifier	property_Ids		128911	1					
ANR	128975	Identifier	i		128911	1					
ANR	128976	IfStatement	if ( NULL != element )		128911	7					
ANR	128977	Condition	NULL != element	668:27:25577:25591	128911	0	True				
ANR	128978	EqualityExpression	NULL != element		128911	0		!=			
ANR	128979	Identifier	NULL		128911	0					
ANR	128980	Identifier	element		128911	1					
ANR	128981	CompoundStatement		35:24:916:916	128911	1					
ANR	128982	Statement	delete	673:32:25733:25738	128911	0	True				
ANR	128983	ExpressionStatement	element	673:39:25740:25747	128911	1	True				
ANR	128984	Identifier	element		128911	0					
ANR	128985	IfStatement	if ( ! non_nil_exists )		128911	8					
ANR	128986	Condition	! non_nil_exists	678:23:25874:25888	128911	0	True				
ANR	128987	UnaryOperationExpression	! non_nil_exists		128911	0					
ANR	128988	UnaryOperator	!		128911	0					
ANR	128989	Identifier	non_nil_exists		128911	1					
ANR	128990	CompoundStatement		45:20:1209:1209	128911	1					
ANR	128991	ExpressionStatement	isValidIds = true	681:24:25962:25979	128911	0	True				
ANR	128992	AssignmentExpression	isValidIds = true		128911	0		=			
ANR	128993	Identifier	isValidIds		128911	0					
ANR	128994	Identifier	true		128911	1					
ANR	128995	ExpressionStatement	( * property_Ids ) [ i ] = NULL	682:24:26005:26029	128911	1	True				
ANR	128996	AssignmentExpression	( * property_Ids ) [ i ] = NULL		128911	0		=			
ANR	128997	ArrayIndexing	( * property_Ids ) [ i ]		128911	0					
ANR	128998	UnaryOperationExpression	* property_Ids		128911	0					
ANR	128999	UnaryOperator	*		128911	0					
ANR	129000	Identifier	property_Ids		128911	1					
ANR	129001	Identifier	i		128911	1					
ANR	129002	Identifier	NULL		128911	1					
ANR	129003	ReturnStatement	return AXIS2_SUCCESS ;	684:24:26080:26100	128911	2	True				
ANR	129004	Identifier	AXIS2_SUCCESS		128911	0					
ANR	129005	ExpressionStatement	( * property_Ids ) [ i ] = arg_Ids	687:20:26161:26189	128911	9	True				
ANR	129006	AssignmentExpression	( * property_Ids ) [ i ] = arg_Ids		128911	0		=			
ANR	129007	ArrayIndexing	( * property_Ids ) [ i ]		128911	0					
ANR	129008	UnaryOperationExpression	* property_Ids		128911	0					
ANR	129009	UnaryOperator	*		128911	0					
ANR	129010	Identifier	property_Ids		128911	1					
ANR	129011	Identifier	i		128911	1					
ANR	129012	Identifier	arg_Ids		128911	1					
ANR	129013	ExpressionStatement	isValidIds = true	690:15:26226:26243	128911	10	True				
ANR	129014	AssignmentExpression	isValidIds = true		128911	0		=			
ANR	129015	Identifier	isValidIds		128911	0					
ANR	129016	Identifier	true		128911	1					
ANR	129017	ReturnStatement	return AXIS2_SUCCESS ;	692:16:26278:26298	128911	11	True				
ANR	129018	Identifier	AXIS2_SUCCESS		128911	0					
ANR	129019	ReturnType	bool WSF_CALL		128911	1					
ANR	129020	Identifier	AviaryQuery :: GetJobStatus :: setIdsAt		128911	2					
ANR	129021	ParameterList	"int i , AviaryCommon :: JobID * arg_Ids"		128911	3					
ANR	129022	Parameter	int i	633:48:24632:24636	128911	0	True				
ANR	129023	ParameterType	int		128911	0					
ANR	129024	Identifier	i		128911	1					
ANR	129025	Parameter	AviaryCommon :: JobID * arg_Ids	634:20:24659:24686	128911	1	True				
ANR	129026	ParameterType	AviaryCommon :: JobID *		128911	0					
ANR	129027	Identifier	arg_Ids		128911	1					
ANR	129028	CFGEntryNode	ENTRY		128911		True				
ANR	129029	CFGExitNode	EXIT		128911		True				
ANR	129030	Symbol	NULL		128911						
ANR	129031	Symbol	* property_Ids		128911						
ANR	129032	Symbol	isValidIds		128911						
ANR	129033	Symbol	* * property_Ids		128911						
ANR	129034	Symbol	false		128911						
ANR	129035	Symbol	i		128911						
ANR	129036	Symbol	non_nil_count		128911						
ANR	129037	Symbol	arg_Ids		128911						
ANR	129038	Symbol	property_Ids		128911						
ANR	129039	Symbol	* i		128911						
ANR	129040	Symbol	size		128911						
ANR	129041	Symbol	non_nil_exists		128911						
ANR	129042	Symbol	true		128911						
ANR	129043	Symbol	element		128911						
ANR	129044	Symbol	AXIS2_SUCCESS		128911						
ANR	129045	Function	AviaryQuery :: GetJobStatus :: addIds	698:12:26386:27055							
ANR	129046	FunctionDef	AviaryQuery :: GetJobStatus :: addIds (AviaryCommon :: JobID * arg_Ids)		129045	0					
ANR	129047	CompoundStatement		701:13:26510:27055	129045	0					
ANR	129048	IfStatement	if ( NULL == arg_Ids )		129045	0					
ANR	129049	Condition	NULL == arg_Ids	704:24:26554:26568	129045	0	True				
ANR	129050	EqualityExpression	NULL == arg_Ids		129045	0		==			
ANR	129051	Identifier	NULL		129045	0					
ANR	129052	Identifier	arg_Ids		129045	1					
ANR	129053	CompoundStatement		6:20:102:102	129045	1					
ANR	129054	ReturnStatement	return true ;	708:27:26665:26676	129045	0	True				
ANR	129055	Identifier	true		129045	0					
ANR	129056	IfStatement	if ( property_Ids == NULL )		129045	1					
ANR	129057	Condition	property_Ids == NULL	713:19:26765:26784	129045	0	True				
ANR	129058	EqualityExpression	property_Ids == NULL		129045	0		==			
ANR	129059	Identifier	property_Ids		129045	0					
ANR	129060	Identifier	NULL		129045	1					
ANR	129061	CompoundStatement		14:16:292:292	129045	1					
ANR	129062	ExpressionStatement	property_Ids = new std :: vector < AviaryCommon :: JobID * > ( )	715:20:26825:26879	129045	0	True				
ANR	129063	AssignmentExpression	property_Ids = new std :: vector < AviaryCommon :: JobID * > ( )		129045	0		=			
ANR	129064	Identifier	property_Ids		129045	0					
ANR	129065	UnaryExpression	new std :: vector < AviaryCommon :: JobID * > ( )		129045	1					
ANR	129066	ExpressionStatement	property_Ids -> push_back ( arg_Ids )	718:15:26929:26961	129045	2	True				
ANR	129067	CallExpression	property_Ids -> push_back ( arg_Ids )		129045	0					
ANR	129068	Callee	property_Ids -> push_back		129045	0					
ANR	129069	PtrMemberAccess	property_Ids -> push_back		129045	0					
ANR	129070	Identifier	property_Ids		129045	0					
ANR	129071	Identifier	push_back		129045	1					
ANR	129072	ArgumentList	arg_Ids		129045	1					
ANR	129073	Argument	arg_Ids		129045	0					
ANR	129074	Identifier	arg_Ids		129045	0					
ANR	129075	ExpressionStatement	isValidIds = true	720:16:26994:27011	129045	3	True				
ANR	129076	AssignmentExpression	isValidIds = true		129045	0		=			
ANR	129077	Identifier	isValidIds		129045	0					
ANR	129078	Identifier	true		129045	1					
ANR	129079	ReturnStatement	return true ;	721:16:27029:27040	129045	4	True				
ANR	129080	Identifier	true		129045	0					
ANR	129081	ReturnType	bool WSF_CALL		129045	1					
ANR	129082	Identifier	AviaryQuery :: GetJobStatus :: addIds		129045	2					
ANR	129083	ParameterList	AviaryCommon :: JobID * arg_Ids		129045	3					
ANR	129084	Parameter	AviaryCommon :: JobID * arg_Ids	700:20:26467:26494	129045	0	True				
ANR	129085	ParameterType	AviaryCommon :: JobID *		129045	0					
ANR	129086	Identifier	arg_Ids		129045	1					
ANR	129087	CFGEntryNode	ENTRY		129045		True				
ANR	129088	CFGExitNode	EXIT		129045		True				
ANR	129089	Symbol	arg_Ids		129045						
ANR	129090	Symbol	NULL		129045						
ANR	129091	Symbol	property_Ids		129045						
ANR	129092	Symbol	isValidIds		129045						
ANR	129093	Symbol	true		129045						
ANR	129094	Function	AviaryQuery :: GetJobStatus :: sizeofIds	727:12:27148:27391							
ANR	129095	FunctionDef	AviaryQuery :: GetJobStatus :: sizeofIds ()		129094	0					
ANR	129096	CompoundStatement		729:12:27224:27391	129094	0					
ANR	129097	IfStatement	if ( property_Ids == NULL )		129094	0					
ANR	129098	Condition	property_Ids == NULL	731:19:27246:27265	129094	0	True				
ANR	129099	EqualityExpression	property_Ids == NULL		129094	0		==			
ANR	129100	Identifier	property_Ids		129094	0					
ANR	129101	Identifier	NULL		129094	1					
ANR	129102	CompoundStatement		4:16:59:59	129094	1					
ANR	129103	ReturnStatement	return 0 ;	733:20:27306:27314	129094	0	True				
ANR	129104	PrimaryExpression	0		129094	0					
ANR	129105	ReturnStatement	return property_Ids -> size ( ) ;	735:16:27350:27377	129094	1	True				
ANR	129106	CallExpression	property_Ids -> size ( )		129094	0					
ANR	129107	Callee	property_Ids -> size		129094	0					
ANR	129108	PtrMemberAccess	property_Ids -> size		129094	0					
ANR	129109	Identifier	property_Ids		129094	0					
ANR	129110	Identifier	size		129094	1					
ANR	129111	ArgumentList			129094	1					
ANR	129112	ReturnType	int WSF_CALL		129094	1					
ANR	129113	Identifier	AviaryQuery :: GetJobStatus :: sizeofIds		129094	2					
ANR	129114	ParameterList			129094	3					
ANR	129115	CFGEntryNode	ENTRY		129094		True				
ANR	129116	CFGExitNode	EXIT		129094		True				
ANR	129117	Symbol	NULL		129094						
ANR	129118	Symbol	property_Ids		129094						
ANR	129119	Symbol	* property_Ids		129094						
ANR	129120	Symbol	property_Ids -> size		129094						
ANR	129121	Function	AviaryQuery :: GetJobStatus :: removeIdsAt	741:12:27497:27634							
ANR	129122	FunctionDef	AviaryQuery :: GetJobStatus :: removeIdsAt (int i)		129121	0					
ANR	129123	CompoundStatement		743:12:27581:27634	129121	0					
ANR	129124	ReturnStatement	return setIdsNilAt ( i ) ;	744:16:27599:27620	129121	0	True				
ANR	129125	CallExpression	setIdsNilAt ( i )		129121	0					
ANR	129126	Callee	setIdsNilAt		129121	0					
ANR	129127	Identifier	setIdsNilAt		129121	0					
ANR	129128	ArgumentList	i		129121	1					
ANR	129129	Argument	i		129121	0					
ANR	129130	Identifier	i		129121	0					
ANR	129131	ReturnType	bool WSF_CALL		129121	1					
ANR	129132	Identifier	AviaryQuery :: GetJobStatus :: removeIdsAt		129121	2					
ANR	129133	ParameterList	int i		129121	3					
ANR	129134	Parameter	int i	742:51:27562:27566	129121	0	True				
ANR	129135	ParameterType	int		129121	0					
ANR	129136	Identifier	i		129121	1					
ANR	129137	CFGEntryNode	ENTRY		129121		True				
ANR	129138	CFGExitNode	EXIT		129121		True				
ANR	129139	Symbol	setIdsNilAt		129121						
ANR	129140	Symbol	i		129121						
ANR	129141	Function	AviaryQuery :: GetJobStatus :: resetIds	752:11:27723:28665							
ANR	129142	FunctionDef	AviaryQuery :: GetJobStatus :: resetIds ()		129141	0					
ANR	129143	CompoundStatement		754:11:27797:28665	129141	0					
ANR	129144	IdentifierDeclStatement	int i = 0 ;	755:15:27814:27823	129141	0	True				
ANR	129145	IdentifierDecl	i = 0		129141	0					
ANR	129146	IdentifierDeclType	int		129141	0					
ANR	129147	Identifier	i		129141	1					
ANR	129148	AssignmentExpression	i = 0		129141	2		=			
ANR	129149	Identifier	i		129141	0					
ANR	129150	PrimaryExpression	0		129141	1					
ANR	129151	IdentifierDeclStatement	int count = 0 ;	756:15:27840:27853	129141	1	True				
ANR	129152	IdentifierDecl	count = 0		129141	0					
ANR	129153	IdentifierDeclType	int		129141	0					
ANR	129154	Identifier	count		129141	1					
ANR	129155	AssignmentExpression	count = 0		129141	2		=			
ANR	129156	Identifier	count		129141	0					
ANR	129157	PrimaryExpression	0		129141	1					
ANR	129158	IfStatement	if ( property_Ids != NULL )		129141	2					
ANR	129159	Condition	property_Ids != NULL	760:20:27893:27912	129141	0	True				
ANR	129160	EqualityExpression	property_Ids != NULL		129141	0		!=			
ANR	129161	Identifier	property_Ids		129141	0					
ANR	129162	Identifier	NULL		129141	1					
ANR	129163	CompoundStatement		9:18:153:224	129141	1					
ANR	129164	IdentifierDeclStatement	std :: vector < AviaryCommon :: JobID * > :: iterator it = property_Ids -> begin ( ) ;	762:18:27951:28022	129141	0	True				
ANR	129165	IdentifierDecl	it = property_Ids -> begin ( )		129141	0					
ANR	129166	IdentifierDeclType	std :: vector < AviaryCommon :: JobID * > :: iterator		129141	0					
ANR	129167	Identifier	it		129141	1					
ANR	129168	AssignmentExpression	it = property_Ids -> begin ( )		129141	2		=			
ANR	129169	Identifier	it		129141	0					
ANR	129170	CallExpression	property_Ids -> begin ( )		129141	1					
ANR	129171	Callee	property_Ids -> begin		129141	0					
ANR	129172	PtrMemberAccess	property_Ids -> begin		129141	0					
ANR	129173	Identifier	property_Ids		129141	0					
ANR	129174	Identifier	begin		129141	1					
ANR	129175	ArgumentList			129141	1					
ANR	129176	ForStatement	for ( ; it < property_Ids -> end ( ) ; ++ it )		129141	1					
ANR	129177	Condition	it < property_Ids -> end ( )	763:25:28049:28073	129141	0	True				
ANR	129178	RelationalExpression	it < property_Ids -> end ( )		129141	0		<			
ANR	129179	Identifier	it		129141	0					
ANR	129180	CallExpression	property_Ids -> end ( )		129141	1					
ANR	129181	Callee	property_Ids -> end		129141	0					
ANR	129182	PtrMemberAccess	property_Ids -> end		129141	0					
ANR	129183	Identifier	property_Ids		129141	0					
ANR	129184	Identifier	end		129141	1					
ANR	129185	ArgumentList			129141	1					
ANR	129186	UnaryExpression	++ it	763:53:28077:28080	129141	1	True				
ANR	129187	IncDec	++		129141	0					
ANR	129188	Identifier	it		129141	1					
ANR	129189	CompoundStatement		12:21:326:360	129141	2					
ANR	129190	IdentifierDeclStatement	AviaryCommon :: JobID * element = * it ;	765:21:28124:28158	129141	0	True				
ANR	129191	IdentifierDecl	* element = * it		129141	0					
ANR	129192	IdentifierDeclType	AviaryCommon :: JobID *		129141	0					
ANR	129193	Identifier	element		129141	1					
ANR	129194	AssignmentExpression	* element = * it		129141	2		=			
ANR	129195	Identifier	element		129141	0					
ANR	129196	UnaryOperationExpression	* it		129141	1					
ANR	129197	UnaryOperator	*		129141	0					
ANR	129198	Identifier	it		129141	1					
ANR	129199	IfStatement	if ( element != NULL )		129141	1					
ANR	129200	Condition	element != NULL	770:19:28227:28241	129141	0	True				
ANR	129201	EqualityExpression	element != NULL		129141	0		!=			
ANR	129202	Identifier	element		129141	0					
ANR	129203	Identifier	NULL		129141	1					
ANR	129204	CompoundStatement		18:16:462:462	129141	1					
ANR	129205	Statement	delete	774:25:28327:28332	129141	0	True				
ANR	129206	ExpressionStatement	element	774:33:28335:28342	129141	1	True				
ANR	129207	Identifier	element		129141	0					
ANR	129208	IfStatement	if ( NULL != property_Ids )		129141	3					
ANR	129209	Condition	NULL != property_Ids	786:23:28513:28532	129141	0	True				
ANR	129210	EqualityExpression	NULL != property_Ids		129141	0		!=			
ANR	129211	Identifier	NULL		129141	0					
ANR	129212	Identifier	property_Ids		129141	1					
ANR	129213	Statement	delete	787:17:28552:28557	129141	1	True				
ANR	129214	ExpressionStatement	property_Ids	787:24:28559:28571	129141	4	True				
ANR	129215	Identifier	property_Ids		129141	0					
ANR	129216	ExpressionStatement	isValidIds = false	789:15:28605:28623	129141	5	True				
ANR	129217	AssignmentExpression	isValidIds = false		129141	0		=			
ANR	129218	Identifier	isValidIds		129141	0					
ANR	129219	Identifier	false		129141	1					
ANR	129220	ReturnStatement	return true ;	790:15:28641:28652	129141	6	True				
ANR	129221	Identifier	true		129141	0					
ANR	129222	ReturnType	bool WSF_CALL		129141	1					
ANR	129223	Identifier	AviaryQuery :: GetJobStatus :: resetIds		129141	2					
ANR	129224	ParameterList			129141	3					
ANR	129225	CFGEntryNode	ENTRY		129141		True				
ANR	129226	CFGExitNode	EXIT		129141		True				
ANR	129227	Symbol	NULL		129141						
ANR	129228	Symbol	* property_Ids		129141						
ANR	129229	Symbol	isValidIds		129141						
ANR	129230	Symbol	count		129141						
ANR	129231	Symbol	false		129141						
ANR	129232	Symbol	i		129141						
ANR	129233	Symbol	it		129141						
ANR	129234	Symbol	* it		129141						
ANR	129235	Symbol	property_Ids		129141						
ANR	129236	Symbol	property_Ids -> begin		129141						
ANR	129237	Symbol	true		129141						
ANR	129238	Symbol	property_Ids -> end		129141						
ANR	129239	Symbol	element		129141						
ANR	129240	Function	AviaryQuery :: GetJobStatus :: isIdsNil	796:11:28749:28871							
ANR	129241	FunctionDef	AviaryQuery :: GetJobStatus :: isIdsNil ()		129240	0					
ANR	129242	CompoundStatement		798:11:28823:28871	129240	0					
ANR	129243	ReturnStatement	return ! isValidIds ;	799:15:28840:28858	129240	0	True				
ANR	129244	UnaryOperationExpression	! isValidIds		129240	0					
ANR	129245	UnaryOperator	!		129240	0					
ANR	129246	Identifier	isValidIds		129240	1					
ANR	129247	ReturnType	bool WSF_CALL		129240	1					
ANR	129248	Identifier	AviaryQuery :: GetJobStatus :: isIdsNil		129240	2					
ANR	129249	ParameterList			129240	3					
ANR	129250	CFGEntryNode	ENTRY		129240		True				
ANR	129251	CFGExitNode	EXIT		129240		True				
ANR	129252	Symbol	isValidIds		129240						
ANR	129253	Function	AviaryQuery :: GetJobStatus :: setIdsNil	805:11:28975:29097							
ANR	129254	FunctionDef	AviaryQuery :: GetJobStatus :: setIdsNil ()		129253	0					
ANR	129255	CompoundStatement		807:11:29050:29097	129253	0					
ANR	129256	ReturnStatement	return resetIds ( ) ;	808:15:29067:29084	129253	0	True				
ANR	129257	CallExpression	resetIds ( )		129253	0					
ANR	129258	Callee	resetIds		129253	0					
ANR	129259	Identifier	resetIds		129253	0					
ANR	129260	ArgumentList			129253	1					
ANR	129261	ReturnType	bool WSF_CALL		129253	1					
ANR	129262	Identifier	AviaryQuery :: GetJobStatus :: setIdsNil		129253	2					
ANR	129263	ParameterList			129253	3					
ANR	129264	CFGEntryNode	ENTRY		129253		True				
ANR	129265	CFGExitNode	EXIT		129253		True				
ANR	129266	Symbol	resetIds		129253						
ANR	129267	Function	AviaryQuery :: GetJobStatus :: isIdsNilAt	815:11:29198:29436							
ANR	129268	FunctionDef	AviaryQuery :: GetJobStatus :: isIdsNilAt (int i)		129267	0					
ANR	129269	CompoundStatement		817:11:29279:29436	129267	0					
ANR	129270	ReturnStatement	return ( isValidIds == false || NULL == property_Ids || NULL == ( * property_Ids ) [ i ] ) ;	818:15:29296:29422	129267	0	True				
ANR	129271	OrExpression	isValidIds == false || NULL == property_Ids || NULL == ( * property_Ids ) [ i ]		129267	0		||			
ANR	129272	EqualityExpression	isValidIds == false		129267	0		==			
ANR	129273	Identifier	isValidIds		129267	0					
ANR	129274	Identifier	false		129267	1					
ANR	129275	OrExpression	NULL == property_Ids || NULL == ( * property_Ids ) [ i ]		129267	1		||			
ANR	129276	EqualityExpression	NULL == property_Ids		129267	0		==			
ANR	129277	Identifier	NULL		129267	0					
ANR	129278	Identifier	property_Ids		129267	1					
ANR	129279	EqualityExpression	NULL == ( * property_Ids ) [ i ]		129267	1		==			
ANR	129280	Identifier	NULL		129267	0					
ANR	129281	ArrayIndexing	( * property_Ids ) [ i ]		129267	1					
ANR	129282	UnaryOperationExpression	* property_Ids		129267	0					
ANR	129283	UnaryOperator	*		129267	0					
ANR	129284	Identifier	property_Ids		129267	1					
ANR	129285	Identifier	i		129267	1					
ANR	129286	ReturnType	bool WSF_CALL		129267	1					
ANR	129287	Identifier	AviaryQuery :: GetJobStatus :: isIdsNilAt		129267	2					
ANR	129288	ParameterList	int i		129267	3					
ANR	129289	Parameter	int i	816:49:29261:29265	129267	0	True				
ANR	129290	ParameterType	int		129267	0					
ANR	129291	Identifier	i		129267	1					
ANR	129292	CFGEntryNode	ENTRY		129267		True				
ANR	129293	CFGExitNode	EXIT		129267		True				
ANR	129294	Symbol	property_Ids		129267						
ANR	129295	Symbol	* i		129267						
ANR	129296	Symbol	NULL		129267						
ANR	129297	Symbol	* property_Ids		129267						
ANR	129298	Symbol	* * property_Ids		129267						
ANR	129299	Symbol	isValidIds		129267						
ANR	129300	Symbol	false		129267						
ANR	129301	Symbol	i		129267						
ANR	129302	Function	AviaryQuery :: GetJobStatus :: setIdsNilAt	826:11:29514:31738							
ANR	129303	FunctionDef	AviaryQuery :: GetJobStatus :: setIdsNilAt (int i)		129302	0					
ANR	129304	CompoundStatement		828:11:29596:31738	129302	0					
ANR	129305	IdentifierDeclStatement	int size = 0 ;	829:16:29614:29626	129302	0	True				
ANR	129306	IdentifierDecl	size = 0		129302	0					
ANR	129307	IdentifierDeclType	int		129302	0					
ANR	129308	Identifier	size		129302	1					
ANR	129309	AssignmentExpression	size = 0		129302	2		=			
ANR	129310	Identifier	size		129302	0					
ANR	129311	PrimaryExpression	0		129302	1					
ANR	129312	IdentifierDeclStatement	int j ;	830:16:29644:29649	129302	1	True				
ANR	129313	IdentifierDecl	j		129302	0					
ANR	129314	IdentifierDeclType	int		129302	0					
ANR	129315	Identifier	j		129302	1					
ANR	129316	IdentifierDeclStatement	bool non_nil_exists = false ;	831:16:29667:29694	129302	2	True				
ANR	129317	IdentifierDecl	non_nil_exists = false		129302	0					
ANR	129318	IdentifierDeclType	bool		129302	0					
ANR	129319	Identifier	non_nil_exists		129302	1					
ANR	129320	AssignmentExpression	non_nil_exists = false		129302	2		=			
ANR	129321	Identifier	false		129302	0					
ANR	129322	Identifier	false		129302	1					
ANR	129323	IdentifierDeclStatement	int k = 0 ;	833:16:29713:29722	129302	3	True				
ANR	129324	IdentifierDecl	k = 0		129302	0					
ANR	129325	IdentifierDeclType	int		129302	0					
ANR	129326	Identifier	k		129302	1					
ANR	129327	AssignmentExpression	k = 0		129302	2		=			
ANR	129328	Identifier	k		129302	0					
ANR	129329	PrimaryExpression	0		129302	1					
ANR	129330	IfStatement	if ( property_Ids == NULL || isValidIds == false )		129302	4					
ANR	129331	Condition	property_Ids == NULL || isValidIds == false	835:19:29744:29814	129302	0	True				
ANR	129332	OrExpression	property_Ids == NULL || isValidIds == false		129302	0		||			
ANR	129333	EqualityExpression	property_Ids == NULL		129302	0		==			
ANR	129334	Identifier	property_Ids		129302	0					
ANR	129335	Identifier	NULL		129302	1					
ANR	129336	EqualityExpression	isValidIds == false		129302	1		==			
ANR	129337	Identifier	isValidIds		129302	0					
ANR	129338	Identifier	false		129302	1					
ANR	129339	CompoundStatement		10:16:236:236	129302	1					
ANR	129340	ExpressionStatement	non_nil_exists = false	839:20:29876:29898	129302	0	True				
ANR	129341	AssignmentExpression	non_nil_exists = false		129302	0		=			
ANR	129342	Identifier	non_nil_exists		129302	0					
ANR	129343	Identifier	false		129302	1					
ANR	129344	ElseStatement	else		129302	0					
ANR	129345	CompoundStatement		15:16:358:358	129302	0					
ANR	129346	ExpressionStatement	size = property_Ids -> size ( )	843:20:29977:30004	129302	0	True				
ANR	129347	AssignmentExpression	size = property_Ids -> size ( )		129302	0		=			
ANR	129348	Identifier	size		129302	0					
ANR	129349	CallExpression	property_Ids -> size ( )		129302	1					
ANR	129350	Callee	property_Ids -> size		129302	0					
ANR	129351	PtrMemberAccess	property_Ids -> size		129302	0					
ANR	129352	Identifier	property_Ids		129302	0					
ANR	129353	Identifier	size		129302	1					
ANR	129354	ArgumentList			129302	1					
ANR	129355	ForStatement	"for ( j = 0 , k = 0 ; j < size ; j ++ )"		129302	1					
ANR	129356	ForInit	"j = 0 , k = 0 ;"	844:24:30030:30042	129302	0	True				
ANR	129357	Expression	"j = 0 , k = 0"		129302	0					
ANR	129358	AssignmentExpression	j = 0		129302	0		=			
ANR	129359	Identifier	j		129302	0					
ANR	129360	PrimaryExpression	0		129302	1					
ANR	129361	AssignmentExpression	k = 0		129302	1		=			
ANR	129362	Identifier	k		129302	0					
ANR	129363	PrimaryExpression	0		129302	1					
ANR	129364	Condition	j < size	844:38:30044:30051	129302	1	True				
ANR	129365	RelationalExpression	j < size		129302	0		<			
ANR	129366	Identifier	j		129302	0					
ANR	129367	Identifier	size		129302	1					
ANR	129368	PostIncDecOperationExpression	j ++	844:48:30054:30057	129302	2	True				
ANR	129369	Identifier	j		129302	0					
ANR	129370	IncDec	++		129302	1					
ANR	129371	CompoundStatement		18:20:484:484	129302	3					
ANR	129372	IfStatement	if ( i == j )		129302	0					
ANR	129373	Condition	i == j	846:27:30110:30115	129302	0	True				
ANR	129374	EqualityExpression	i == j		129302	0		==			
ANR	129375	Identifier	i		129302	0					
ANR	129376	Identifier	j		129302	1					
ANR	129377	ContinueStatement	continue ;	846:35:30118:30126	129302	1	True				
ANR	129378	IfStatement	if ( NULL != ( * property_Ids ) [ i ] )		129302	1					
ANR	129379	Condition	NULL != ( * property_Ids ) [ i ]	847:27:30156:30181	129302	0	True				
ANR	129380	EqualityExpression	NULL != ( * property_Ids ) [ i ]		129302	0		!=			
ANR	129381	Identifier	NULL		129302	0					
ANR	129382	ArrayIndexing	( * property_Ids ) [ i ]		129302	1					
ANR	129383	UnaryOperationExpression	* property_Ids		129302	0					
ANR	129384	UnaryOperator	*		129302	0					
ANR	129385	Identifier	property_Ids		129302	1					
ANR	129386	Identifier	i		129302	1					
ANR	129387	CompoundStatement		21:24:611:611	129302	1					
ANR	129388	ExpressionStatement	k ++	849:28:30238:30241	129302	0	True				
ANR	129389	PostIncDecOperationExpression	k ++		129302	0					
ANR	129390	Identifier	k		129302	0					
ANR	129391	IncDec	++		129302	1					
ANR	129392	ExpressionStatement	non_nil_exists = true	850:28:30271:30292	129302	1	True				
ANR	129393	AssignmentExpression	non_nil_exists = true		129302	0		=			
ANR	129394	Identifier	non_nil_exists		129302	0					
ANR	129395	Identifier	true		129302	1					
ANR	129396	IfStatement	if ( k >= 0 )		129302	2					
ANR	129397	Condition	k >= 0	851:32:30326:30331	129302	0	True				
ANR	129398	RelationalExpression	k >= 0		129302	0		>=			
ANR	129399	Identifier	k		129302	0					
ANR	129400	PrimaryExpression	0		129302	1					
ANR	129401	CompoundStatement		25:28:765:765	129302	1					
ANR	129402	BreakStatement	break ;	853:32:30396:30401	129302	0	True				
ANR	129403	IfStatement	if ( k < 0 )		129302	5					
ANR	129404	Condition	k < 0	860:20:30537:30541	129302	0	True				
ANR	129405	RelationalExpression	k < 0		129302	0		<			
ANR	129406	Identifier	k		129302	0					
ANR	129407	PrimaryExpression	0		129302	1					
ANR	129408	CompoundStatement		34:16:963:963	129302	1					
ANR	129409	ExpressionStatement	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Size of the array of ids is beinng set to be smaller than the specificed number of minOccurs(0)"" )"	862:23:30585:30741	129302	0	True				
ANR	129410	CallExpression	"WSF_LOG_ERROR_MSG ( Environment :: getEnv ( ) -> log , WSF_LOG_SI , ""Size of the array of ids is beinng set to be smaller than the specificed number of minOccurs(0)"" )"		129302	0					
ANR	129411	Callee	WSF_LOG_ERROR_MSG		129302	0					
ANR	129412	Identifier	WSF_LOG_ERROR_MSG		129302	0					
ANR	129413	ArgumentList	Environment :: getEnv ( ) -> log		129302	1					
ANR	129414	Argument	Environment :: getEnv ( ) -> log		129302	0					
ANR	129415	PtrMemberAccess	Environment :: getEnv ( ) -> log		129302	0					
ANR	129416	CallExpression	Environment :: getEnv ( )		129302	0					
ANR	129417	Callee	Environment :: getEnv		129302	0					
ANR	129418	Identifier	Environment :: getEnv		129302	0					
ANR	129419	ArgumentList			129302	1					
ANR	129420	Identifier	log		129302	1					
ANR	129421	Argument	WSF_LOG_SI		129302	1					
ANR	129422	Identifier	WSF_LOG_SI		129302	0					
ANR	129423	Argument	"""Size of the array of ids is beinng set to be smaller than the specificed number of minOccurs(0)"""		129302	2					
ANR	129424	PrimaryExpression	"""Size of the array of ids is beinng set to be smaller than the specificed number of minOccurs(0)"""		129302	0					
ANR	129425	ReturnStatement	return AXIS2_FAILURE ;	863:23:30766:30786	129302	1	True				
ANR	129426	Identifier	AXIS2_FAILURE		129302	0					
ANR	129427	IfStatement	if ( property_Ids == NULL )		129302	6					
ANR	129428	Condition	property_Ids == NULL	866:19:30827:30846	129302	0	True				
ANR	129429	EqualityExpression	property_Ids == NULL		129302	0		==			
ANR	129430	Identifier	property_Ids		129302	0					
ANR	129431	Identifier	NULL		129302	1					
ANR	129432	CompoundStatement		40:16:1268:1268	129302	1					
ANR	129433	ExpressionStatement	isValidIds = false	868:20:30887:30905	129302	0	True				
ANR	129434	AssignmentExpression	isValidIds = false		129302	0		=			
ANR	129435	Identifier	isValidIds		129302	0					
ANR	129436	Identifier	false		129302	1					
ANR	129437	ReturnStatement	return true ;	870:20:30948:30959	129302	1	True				
ANR	129438	Identifier	true		129302	0					
ANR	129439	IdentifierDeclStatement	AviaryCommon :: JobID * element = ( * property_Ids ) [ i ] ;	874:17:31082:31131	129302	7	True				
ANR	129440	IdentifierDecl	* element = ( * property_Ids ) [ i ]		129302	0					
ANR	129441	IdentifierDeclType	AviaryCommon :: JobID *		129302	0					
ANR	129442	Identifier	element		129302	1					
ANR	129443	AssignmentExpression	* element = ( * property_Ids ) [ i ]		129302	2		=			
ANR	129444	Identifier	element		129302	0					
ANR	129445	ArrayIndexing	( * property_Ids ) [ i ]		129302	1					
ANR	129446	UnaryOperationExpression	* property_Ids		129302	0					
ANR	129447	UnaryOperator	*		129302	0					
ANR	129448	Identifier	property_Ids		129302	1					
ANR	129449	Identifier	i		129302	1					
ANR	129450	IfStatement	if ( NULL != element )		129302	8					
ANR	129451	Condition	NULL != element	875:19:31152:31166	129302	0	True				
ANR	129452	EqualityExpression	NULL != element		129302	0		!=			
ANR	129453	Identifier	NULL		129302	0					
ANR	129454	Identifier	element		129302	1					
ANR	129455	CompoundStatement		49:16:1588:1588	129302	1					
ANR	129456	Statement	delete	880:24:31268:31273	129302	0	True				
ANR	129457	ExpressionStatement	element	880:31:31275:31282	129302	1	True				
ANR	129458	Identifier	element		129302	0					
ANR	129459	IfStatement	if ( ! non_nil_exists )		129302	9					
ANR	129460	Condition	! non_nil_exists	884:23:31366:31380	129302	0	True				
ANR	129461	UnaryOperationExpression	! non_nil_exists		129302	0					
ANR	129462	UnaryOperator	!		129302	0					
ANR	129463	Identifier	non_nil_exists		129302	1					
ANR	129464	CompoundStatement		58:20:1806:1806	129302	1					
ANR	129465	ExpressionStatement	isValidIds = false	887:24:31454:31472	129302	0	True				
ANR	129466	AssignmentExpression	isValidIds = false		129302	0		=			
ANR	129467	Identifier	isValidIds		129302	0					
ANR	129468	Identifier	false		129302	1					
ANR	129469	ExpressionStatement	( * property_Ids ) [ i ] = NULL	888:24:31498:31523	129302	1	True				
ANR	129470	AssignmentExpression	( * property_Ids ) [ i ] = NULL		129302	0		=			
ANR	129471	ArrayIndexing	( * property_Ids ) [ i ]		129302	0					
ANR	129472	UnaryOperationExpression	* property_Ids		129302	0					
ANR	129473	UnaryOperator	*		129302	0					
ANR	129474	Identifier	property_Ids		129302	1					
ANR	129475	Identifier	i		129302	1					
ANR	129476	Identifier	NULL		129302	1					
ANR	129477	ReturnStatement	return AXIS2_SUCCESS ;	889:24:31549:31569	129302	2	True				
ANR	129478	Identifier	AXIS2_SUCCESS		129302	0					
ANR	129479	ExpressionStatement	( * property_Ids ) [ i ] = NULL	894:16:31644:31669	129302	10	True				
ANR	129480	AssignmentExpression	( * property_Ids ) [ i ] = NULL		129302	0		=			
ANR	129481	ArrayIndexing	( * property_Ids ) [ i ]		129302	0					
ANR	129482	UnaryOperationExpression	* property_Ids		129302	0					
ANR	129483	UnaryOperator	*		129302	0					
ANR	129484	Identifier	property_Ids		129302	1					
ANR	129485	Identifier	i		129302	1					
ANR	129486	Identifier	NULL		129302	1					
ANR	129487	ReturnStatement	return AXIS2_SUCCESS ;	896:16:31704:31724	129302	11	True				
ANR	129488	Identifier	AXIS2_SUCCESS		129302	0					
ANR	129489	ReturnType	bool WSF_CALL		129302	1					
ANR	129490	Identifier	AviaryQuery :: GetJobStatus :: setIdsNilAt		129302	2					
ANR	129491	ParameterList	int i		129302	3					
ANR	129492	Parameter	int i	827:50:29578:29582	129302	0	True				
ANR	129493	ParameterType	int		129302	0					
ANR	129494	Identifier	i		129302	1					
ANR	129495	CFGEntryNode	ENTRY		129302		True				
ANR	129496	CFGExitNode	EXIT		129302		True				
ANR	129497	Symbol	Environment :: getEnv		129302						
ANR	129498	Symbol	NULL		129302						
ANR	129499	Symbol	* property_Ids		129302						
ANR	129500	Symbol	isValidIds		129302						
ANR	129501	Symbol	* * property_Ids		129302						
ANR	129502	Symbol	false		129302						
ANR	129503	Symbol	i		129302						
ANR	129504	Symbol	j		129302						
ANR	129505	Symbol	k		129302						
ANR	129506	Symbol	Environment :: getEnv ( ) -> log		129302						
ANR	129507	Symbol	AXIS2_FAILURE		129302						
ANR	129508	Symbol	property_Ids		129302						
ANR	129509	Symbol	* i		129302						
ANR	129510	Symbol	size		129302						
ANR	129511	Symbol	WSF_LOG_SI		129302						
ANR	129512	Symbol	* Environment :: getEnv		129302						
ANR	129513	Symbol	non_nil_exists		129302						
ANR	129514	Symbol	true		129302						
ANR	129515	Symbol	property_Ids -> size		129302						
ANR	129516	Symbol	element		129302						
ANR	129517	Symbol	AXIS2_SUCCESS		129302						
ANR	129518	Function	AviaryQuery :: GetJobStatus :: getProperty2	905:12:31861:31999							
ANR	129519	FunctionDef	AviaryQuery :: GetJobStatus :: getProperty2 ()		129518	0					
ANR	129520	CompoundStatement		907:12:31941:31999	129518	0					
ANR	129521	ReturnStatement	return getPartialMatches ( ) ;	908:16:31959:31985	129518	0	True				
ANR	129522	CallExpression	getPartialMatches ( )		129518	0					
ANR	129523	Callee	getPartialMatches		129518	0					
ANR	129524	Identifier	getPartialMatches		129518	0					
ANR	129525	ArgumentList			129518	1					
ANR	129526	ReturnType	bool WSF_CALL		129518	1					
ANR	129527	Identifier	AviaryQuery :: GetJobStatus :: getProperty2		129518	2					
ANR	129528	ParameterList			129518	3					
ANR	129529	CFGEntryNode	ENTRY		129518		True				
ANR	129530	CFGExitNode	EXIT		129518		True				
ANR	129531	Symbol	getPartialMatches		129518						
ANR	129532	Function	AviaryQuery :: GetJobStatus :: getPartialMatches	914:12:32088:32237							
ANR	129533	FunctionDef	AviaryQuery :: GetJobStatus :: getPartialMatches ()		129532	0					
ANR	129534	CompoundStatement		916:13:32174:32237	129532	0					
ANR	129535	ReturnStatement	return property_PartialMatches ;	917:16:32192:32222	129532	0	True				
ANR	129536	Identifier	property_PartialMatches		129532	0					
ANR	129537	ReturnType	bool WSF_CALL		129532	1					
ANR	129538	Identifier	AviaryQuery :: GetJobStatus :: getPartialMatches		129532	2					
ANR	129539	ParameterList			129532	3					
ANR	129540	CFGEntryNode	ENTRY		129532		True				
ANR	129541	CFGExitNode	EXIT		129532		True				
ANR	129542	Symbol	property_PartialMatches		129532						
ANR	129543	Function	AviaryQuery :: GetJobStatus :: setPartialMatches	923:12:32325:32961							
ANR	129544	FunctionDef	AviaryQuery :: GetJobStatus :: setPartialMatches (bool arg_PartialMatches)		129543	0					
ANR	129545	CompoundStatement		926:13:32456:32961	129543	0					
ANR	129546	IfStatement	if ( isValidPartialMatches && arg_PartialMatches == property_PartialMatches )		129543	0					
ANR	129547	Condition	isValidPartialMatches && arg_PartialMatches == property_PartialMatches	929:19:32495:32588	129543	0	True				
ANR	129548	AndExpression	isValidPartialMatches && arg_PartialMatches == property_PartialMatches		129543	0		&&			
ANR	129549	Identifier	isValidPartialMatches		129543	0					
ANR	129550	EqualityExpression	arg_PartialMatches == property_PartialMatches		129543	1		==			
ANR	129551	Identifier	arg_PartialMatches		129543	0					
ANR	129552	Identifier	property_PartialMatches		129543	1					
ANR	129553	CompoundStatement		6:16:150:150	129543	1					
ANR	129554	ReturnStatement	return true ;	933:20:32650:32661	129543	0	True				
ANR	129555	Identifier	true		129543	0					
ANR	129556	ExpressionStatement	resetPartialMatches ( )	939:16:32733:32754	129543	1	True				
ANR	129557	CallExpression	resetPartialMatches ( )		129543	0					
ANR	129558	Callee	resetPartialMatches		129543	0					
ANR	129559	Identifier	resetPartialMatches		129543	0					
ANR	129560	ArgumentList			129543	1					
ANR	129561	ExpressionStatement	property_PartialMatches = arg_PartialMatches	942:24:32798:32842	129543	2	True				
ANR	129562	AssignmentExpression	property_PartialMatches = arg_PartialMatches		129543	0		=			
ANR	129563	Identifier	property_PartialMatches		129543	0					
ANR	129564	Identifier	arg_PartialMatches		129543	1					
ANR	129565	ExpressionStatement	isValidPartialMatches = true	943:24:32868:32896	129543	3	True				
ANR	129566	AssignmentExpression	isValidPartialMatches = true		129543	0		=			
ANR	129567	Identifier	isValidPartialMatches		129543	0					
ANR	129568	Identifier	true		129543	1					
ANR	129569	ReturnStatement	return true ;	945:16:32935:32946	129543	4	True				
ANR	129570	Identifier	true		129543	0					
ANR	129571	ReturnType	bool WSF_CALL		129543	1					
ANR	129572	Identifier	AviaryQuery :: GetJobStatus :: setPartialMatches		129543	2					
ANR	129573	ParameterList	bool arg_PartialMatches		129543	3					
ANR	129574	Parameter	bool arg_PartialMatches	925:20:32417:32440	129543	0	True				
ANR	129575	ParameterType	bool		129543	0					
ANR	129576	Identifier	arg_PartialMatches		129543	1					
ANR	129577	CFGEntryNode	ENTRY		129543		True				
ANR	129578	CFGExitNode	EXIT		129543		True				
ANR	129579	Symbol	arg_PartialMatches		129543						
ANR	129580	Symbol	property_PartialMatches		129543						
ANR	129581	Symbol	true		129543						
ANR	129582	Symbol	isValidPartialMatches		129543						
ANR	129583	Function	AviaryQuery :: GetJobStatus :: resetPartialMatches	953:11:33062:33309							
ANR	129584	FunctionDef	AviaryQuery :: GetJobStatus :: resetPartialMatches ()		129583	0					
ANR	129585	CompoundStatement		955:11:33147:33309	129583	0					
ANR	129586	IdentifierDeclStatement	int i = 0 ;	956:15:33164:33173	129583	0	True				
ANR	129587	IdentifierDecl	i = 0		129583	0					
ANR	129588	IdentifierDeclType	int		129583	0					
ANR	129589	Identifier	i		129583	1					
ANR	129590	AssignmentExpression	i = 0		129583	2		=			
ANR	129591	Identifier	i		129583	0					
ANR	129592	PrimaryExpression	0		129583	1					
ANR	129593	IdentifierDeclStatement	int count = 0 ;	957:15:33190:33203	129583	1	True				
ANR	129594	IdentifierDecl	count = 0		129583	0					
ANR	129595	IdentifierDeclType	int		129583	0					
ANR	129596	Identifier	count		129583	1					
ANR	129597	AssignmentExpression	count = 0		129583	2		=			
ANR	129598	Identifier	count		129583	0					
ANR	129599	PrimaryExpression	0		129583	1					
ANR	129600	ExpressionStatement	isValidPartialMatches = false	961:15:33238:33267	129583	2	True				
ANR	129601	AssignmentExpression	isValidPartialMatches = false		129583	0		=			
ANR	129602	Identifier	isValidPartialMatches		129583	0					
ANR	129603	Identifier	false		129583	1					
ANR	129604	ReturnStatement	return true ;	962:15:33285:33296	129583	3	True				
ANR	129605	Identifier	true		129583	0					
ANR	129606	ReturnType	bool WSF_CALL		129583	1					
ANR	129607	Identifier	AviaryQuery :: GetJobStatus :: resetPartialMatches		129583	2					
ANR	129608	ParameterList			129583	3					
ANR	129609	CFGEntryNode	ENTRY		129583		True				
ANR	129610	CFGExitNode	EXIT		129583		True				
ANR	129611	Symbol	count		129583						
ANR	129612	Symbol	false		129583						
ANR	129613	Symbol	true		129583						
ANR	129614	Symbol	i		129583						
ANR	129615	Symbol	isValidPartialMatches		129583						
ANR	129616	Function	AviaryQuery :: GetJobStatus :: isPartialMatchesNil	968:11:33404:33548							
ANR	129617	FunctionDef	AviaryQuery :: GetJobStatus :: isPartialMatchesNil ()		129616	0					
ANR	129618	CompoundStatement		970:11:33489:33548	129616	0					
ANR	129619	ReturnStatement	return ! isValidPartialMatches ;	971:15:33506:33535	129616	0	True				
ANR	129620	UnaryOperationExpression	! isValidPartialMatches		129616	0					
ANR	129621	UnaryOperator	!		129616	0					
ANR	129622	Identifier	isValidPartialMatches		129616	1					
ANR	129623	ReturnType	bool WSF_CALL		129616	1					
ANR	129624	Identifier	AviaryQuery :: GetJobStatus :: isPartialMatchesNil		129616	2					
ANR	129625	ParameterList			129616	3					
ANR	129626	CFGEntryNode	ENTRY		129616		True				
ANR	129627	CFGExitNode	EXIT		129616		True				
ANR	129628	Symbol	isValidPartialMatches		129616						
ANR	129629	Function	AviaryQuery :: GetJobStatus :: setPartialMatchesNil	977:11:33663:33807							
ANR	129630	FunctionDef	AviaryQuery :: GetJobStatus :: setPartialMatchesNil ()		129629	0					
ANR	129631	CompoundStatement		979:11:33749:33807	129629	0					
ANR	129632	ReturnStatement	return resetPartialMatches ( ) ;	980:15:33766:33794	129629	0	True				
ANR	129633	CallExpression	resetPartialMatches ( )		129629	0					
ANR	129634	Callee	resetPartialMatches		129629	0					
ANR	129635	Identifier	resetPartialMatches		129629	0					
ANR	129636	ArgumentList			129629	1					
ANR	129637	ReturnType	bool WSF_CALL		129629	1					
ANR	129638	Identifier	AviaryQuery :: GetJobStatus :: setPartialMatchesNil		129629	2					
ANR	129639	ParameterList			129629	3					
ANR	129640	CFGEntryNode	ENTRY		129629		True				
ANR	129641	CFGExitNode	EXIT		129629		True				
ANR	129642	Symbol	resetPartialMatches		129629						
