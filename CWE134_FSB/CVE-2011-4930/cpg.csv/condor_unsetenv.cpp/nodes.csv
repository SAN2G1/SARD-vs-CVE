command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	980787	File	data/converged/CVE-2011-4930_htcondor/condor_unsetenv.cpp								
ANR	980788	Function	__findenv	30:0:1072:1677							
ANR	980789	FunctionDef	"__findenv (const char * name , int * offset)"		980788	0					
ANR	980790	CompoundStatement		32:0:1127:1677	980788	0					
ANR	980791	IdentifierDeclStatement	extern char * * environ ;	33:8:1137:1158	980788	0	True				
ANR	980792	IdentifierDecl	* * environ		980788	0					
ANR	980793	IdentifierDeclType	extern char * *		980788	0					
ANR	980794	Identifier	environ		980788	1					
ANR	980795	Statement	register	34:8:1168:1175	980788	1	True				
ANR	980796	IdentifierDeclStatement	int len ;	34:17:1177:1184	980788	2	True				
ANR	980797	IdentifierDecl	len		980788	0					
ANR	980798	IdentifierDeclType	int		980788	0					
ANR	980799	Identifier	len		980788	1					
ANR	980800	Statement	register	35:8:1194:1201	980788	3	True				
ANR	980801	IdentifierDeclStatement	const char * np ;	35:17:1203:1217	980788	4	True				
ANR	980802	IdentifierDecl	* np		980788	0					
ANR	980803	IdentifierDeclType	const char *		980788	0					
ANR	980804	Identifier	np		980788	1					
ANR	980805	Statement	register	36:8:1227:1234	980788	5	True				
ANR	980806	IdentifierDeclStatement	"char * * p , * c ;"	36:17:1236:1248	980788	6	True				
ANR	980807	IdentifierDecl	* * p		980788	0					
ANR	980808	IdentifierDeclType	char * *		980788	0					
ANR	980809	Identifier	p		980788	1					
ANR	980810	IdentifierDecl	* c		980788	1					
ANR	980811	IdentifierDeclType	char *		980788	0					
ANR	980812	Identifier	c		980788	1					
ANR	980813	IfStatement	if ( name == NULL || environ == NULL )		980788	7					
ANR	980814	Condition	name == NULL || environ == NULL	38:12:1263:1293	980788	0	True				
ANR	980815	OrExpression	name == NULL || environ == NULL		980788	0		||			
ANR	980816	EqualityExpression	name == NULL		980788	0		==			
ANR	980817	Identifier	name		980788	0					
ANR	980818	Identifier	NULL		980788	1					
ANR	980819	EqualityExpression	environ == NULL		980788	1		==			
ANR	980820	Identifier	environ		980788	0					
ANR	980821	Identifier	NULL		980788	1					
ANR	980822	ReturnStatement	return ( NULL ) ;	39:16:1312:1325	980788	1	True				
ANR	980823	Identifier	NULL		980788	0					
ANR	980824	ForStatement	for ( np = name ; * np && * np != '=' ; ++ np )		980788	8					
ANR	980825	ForInit	np = name ;	40:13:1340:1349	980788	0	True				
ANR	980826	AssignmentExpression	np = name		980788	0		=			
ANR	980827	Identifier	np		980788	0					
ANR	980828	Identifier	name		980788	1					
ANR	980829	Condition	* np && * np != '='	40:24:1351:1367	980788	1	True				
ANR	980830	AndExpression	* np && * np != '='		980788	0		&&			
ANR	980831	UnaryOperationExpression	* np		980788	0					
ANR	980832	UnaryOperator	*		980788	0					
ANR	980833	Identifier	np		980788	1					
ANR	980834	EqualityExpression	* np != '='		980788	1		!=			
ANR	980835	UnaryOperationExpression	* np		980788	0					
ANR	980836	UnaryOperator	*		980788	0					
ANR	980837	Identifier	np		980788	1					
ANR	980838	PrimaryExpression	'='		980788	1					
ANR	980839	UnaryExpression	++ np	40:43:1370:1373	980788	2	True				
ANR	980840	IncDec	++		980788	0					
ANR	980841	Identifier	np		980788	1					
ANR	980842	ContinueStatement	continue ;	41:16:1392:1400	980788	3	True				
ANR	980843	ExpressionStatement	len = np - name	42:8:1410:1425	980788	9	True				
ANR	980844	AssignmentExpression	len = np - name		980788	0		=			
ANR	980845	Identifier	len		980788	0					
ANR	980846	AdditiveExpression	np - name		980788	1		-			
ANR	980847	Identifier	np		980788	0					
ANR	980848	Identifier	name		980788	1					
ANR	980849	ForStatement	for ( p = environ ; ( c = * p ) != NULL ; ++ p )		980788	10					
ANR	980850	ForInit	p = environ ;	43:13:1440:1451	980788	0	True				
ANR	980851	AssignmentExpression	p = environ		980788	0		=			
ANR	980852	Identifier	p		980788	0					
ANR	980853	Identifier	environ		980788	1					
ANR	980854	Condition	( c = * p ) != NULL	43:26:1453:1468	980788	1	True				
ANR	980855	EqualityExpression	( c = * p ) != NULL		980788	0		!=			
ANR	980856	AssignmentExpression	c = * p		980788	0		=			
ANR	980857	Identifier	c		980788	0					
ANR	980858	UnaryOperationExpression	* p		980788	1					
ANR	980859	UnaryOperator	*		980788	0					
ANR	980860	Identifier	p		980788	1					
ANR	980861	Identifier	NULL		980788	1					
ANR	980862	UnaryExpression	++ p	43:44:1471:1473	980788	2	True				
ANR	980863	IncDec	++		980788	0					
ANR	980864	Identifier	p		980788	1					
ANR	980865	IfStatement	"if ( strncmp ( c , name , len ) == 0 && c [ len ] == '=' )"		980788	3					
ANR	980866	Condition	"strncmp ( c , name , len ) == 0 && c [ len ] == '='"	44:20:1496:1538	980788	0	True				
ANR	980867	AndExpression	"strncmp ( c , name , len ) == 0 && c [ len ] == '='"		980788	0		&&			
ANR	980868	EqualityExpression	"strncmp ( c , name , len ) == 0"		980788	0		==			
ANR	980869	CallExpression	"strncmp ( c , name , len )"		980788	0					
ANR	980870	Callee	strncmp		980788	0					
ANR	980871	Identifier	strncmp		980788	0					
ANR	980872	ArgumentList	c		980788	1					
ANR	980873	Argument	c		980788	0					
ANR	980874	Identifier	c		980788	0					
ANR	980875	Argument	name		980788	1					
ANR	980876	Identifier	name		980788	0					
ANR	980877	Argument	len		980788	2					
ANR	980878	Identifier	len		980788	0					
ANR	980879	PrimaryExpression	0		980788	1					
ANR	980880	EqualityExpression	c [ len ] == '='		980788	1		==			
ANR	980881	ArrayIndexing	c [ len ]		980788	0					
ANR	980882	Identifier	c		980788	0					
ANR	980883	Identifier	len		980788	1					
ANR	980884	PrimaryExpression	'='		980788	1					
ANR	980885	CompoundStatement		13:65:413:413	980788	1					
ANR	980886	ExpressionStatement	* offset = p - environ	45:24:1567:1588	980788	0	True				
ANR	980887	AssignmentExpression	* offset = p - environ		980788	0		=			
ANR	980888	UnaryOperationExpression	* offset		980788	0					
ANR	980889	UnaryOperator	*		980788	0					
ANR	980890	Identifier	offset		980788	1					
ANR	980891	AdditiveExpression	p - environ		980788	1		-			
ANR	980892	Identifier	p		980788	0					
ANR	980893	Identifier	environ		980788	1					
ANR	980894	ReturnStatement	return ( c + len + 1 ) ;	46:24:1614:1634	980788	1	True				
ANR	980895	AdditiveExpression	c + len + 1		980788	0		+			
ANR	980896	Identifier	c		980788	0					
ANR	980897	AdditiveExpression	len + 1		980788	1		+			
ANR	980898	Identifier	len		980788	0					
ANR	980899	PrimaryExpression	1		980788	1					
ANR	980900	ReturnStatement	return ( NULL ) ;	48:8:1662:1675	980788	11	True				
ANR	980901	Identifier	NULL		980788	0					
ANR	980902	ReturnType	static char *		980788	1					
ANR	980903	Identifier	__findenv		980788	2					
ANR	980904	ParameterList	"const char * name , int * offset"		980788	3					
ANR	980905	Parameter	const char * name	31:10:1096:1111	980788	0	True				
ANR	980906	ParameterType	const char *		980788	0					
ANR	980907	Identifier	name		980788	1					
ANR	980908	Parameter	int * offset	31:28:1114:1124	980788	1	True				
ANR	980909	ParameterType	int *		980788	0					
ANR	980910	Identifier	offset		980788	1					
ANR	980911	CFGEntryNode	ENTRY		980788		True				
ANR	980912	CFGExitNode	EXIT		980788		True				
ANR	980913	Symbol	np		980788						
ANR	980914	Symbol	c		980788						
ANR	980915	Symbol	NULL		980788						
ANR	980916	Symbol	offset		980788						
ANR	980917	Symbol	* np		980788						
ANR	980918	Symbol	* c		980788						
ANR	980919	Symbol	environ		980788						
ANR	980920	Symbol	p		980788						
ANR	980921	Symbol	strncmp		980788						
ANR	980922	Symbol	len		980788						
ANR	980923	Symbol	name		980788						
ANR	980924	Symbol	* offset		980788						
ANR	980925	Symbol	* p		980788						
ANR	980926	Symbol	* len		980788						
ANR	980927	Function	unsetenv	51:0:1680:2003							
ANR	980928	FunctionDef	unsetenv (const char * name)		980927	0					
ANR	980929	CompoundStatement		53:0:1712:2003	980927	0					
ANR	980930	IdentifierDeclStatement	extern char * * environ ;	54:8:1722:1743	980927	0	True				
ANR	980931	IdentifierDecl	* * environ		980927	0					
ANR	980932	IdentifierDeclType	extern char * *		980927	0					
ANR	980933	Identifier	environ		980927	1					
ANR	980934	Statement	register	55:8:1753:1760	980927	1	True				
ANR	980935	IdentifierDeclStatement	char * * p ;	55:17:1762:1770	980927	2	True				
ANR	980936	IdentifierDecl	* * p		980927	0					
ANR	980937	IdentifierDeclType	char * *		980927	0					
ANR	980938	Identifier	p		980927	1					
ANR	980939	IdentifierDeclStatement	int offset ;	56:8:1780:1790	980927	3	True				
ANR	980940	IdentifierDecl	offset		980927	0					
ANR	980941	IdentifierDeclType	int		980927	0					
ANR	980942	Identifier	offset		980927	1					
ANR	980943	WhileStatement	"while ( __findenv ( name , & offset ) )"		980927	4					
ANR	980944	Condition	"__findenv ( name , & offset )"	58:15:1808:1831	980927	0	True				
ANR	980945	CallExpression	"__findenv ( name , & offset )"		980927	0					
ANR	980946	Callee	__findenv		980927	0					
ANR	980947	Identifier	__findenv		980927	0					
ANR	980948	ArgumentList	name		980927	1					
ANR	980949	Argument	name		980927	0					
ANR	980950	Identifier	name		980927	0					
ANR	980951	Argument	& offset		980927	1					
ANR	980952	UnaryOperationExpression	& offset		980927	0					
ANR	980953	UnaryOperator	&		980927	0					
ANR	980954	Identifier	offset		980927	1					
ANR	980955	ForStatement	for ( p = & environ [ offset ] ; ; ++ p )		980927	1					
ANR	980956	ForInit	p = & environ [ offset ] ;	59:21:1890:1910	980927	0	True				
ANR	980957	AssignmentExpression	p = & environ [ offset ]		980927	0		=			
ANR	980958	Identifier	p		980927	0					
ANR	980959	UnaryOperationExpression	& environ [ offset ]		980927	1					
ANR	980960	UnaryOperator	&		980927	0					
ANR	980961	ArrayIndexing	environ [ offset ]		980927	1					
ANR	980962	Identifier	environ		980927	0					
ANR	980963	Identifier	offset		980927	1					
ANR	980964	UnaryExpression	++ p	59:44:1913:1915	980927	1	True				
ANR	980965	IncDec	++		980927	0					
ANR	980966	Identifier	p		980927	1					
ANR	980967	IfStatement	if ( ! ( * p = * ( p + 1 ) ) )		980927	2					
ANR	980968	Condition	! ( * p = * ( p + 1 ) )	60:28:1946:1961	980927	0	True				
ANR	980969	UnaryOperationExpression	! ( * p = * ( p + 1 ) )		980927	0					
ANR	980970	UnaryOperator	!		980927	0					
ANR	980971	AssignmentExpression	* p = * ( p + 1 )		980927	1		=			
ANR	980972	UnaryOperationExpression	* p		980927	0					
ANR	980973	UnaryOperator	*		980927	0					
ANR	980974	Identifier	p		980927	1					
ANR	980975	UnaryOperationExpression	* ( p + 1 )		980927	1					
ANR	980976	UnaryOperator	*		980927	0					
ANR	980977	AdditiveExpression	p + 1		980927	1		+			
ANR	980978	Identifier	p		980927	0					
ANR	980979	PrimaryExpression	1		980927	1					
ANR	980980	BreakStatement	break ;	61:32:1996:2001	980927	1	True				
ANR	980981	ReturnType	void		980927	1					
ANR	980982	Identifier	unsetenv		980927	2					
ANR	980983	ParameterList	const char * name		980927	3					
ANR	980984	Parameter	const char * name	52:9:1694:1709	980927	0	True				
ANR	980985	ParameterType	const char *		980927	0					
ANR	980986	Identifier	name		980927	1					
ANR	980987	CFGEntryNode	ENTRY		980927		True				
ANR	980988	CFGExitNode	EXIT		980927		True				
ANR	980989	InfiniteForNode	true		980927		True				
ANR	980990	Symbol	p		980927						
ANR	980991	Symbol	offset		980927						
ANR	980992	Symbol	& offset		980927						
ANR	980993	Symbol	name		980927						
ANR	980994	Symbol	* p		980927						
ANR	980995	Symbol	* ( p + 1 )		980927						
ANR	980996	Symbol	__findenv		980927						
ANR	980997	Symbol	environ		980927						
