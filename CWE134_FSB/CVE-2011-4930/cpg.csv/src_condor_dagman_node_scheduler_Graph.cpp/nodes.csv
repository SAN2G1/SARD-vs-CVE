command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	3150883	File	data/converged/CVE-2011-4930_htcondor/src_condor_dagman_node_scheduler_Graph.cpp								
ANR	3150884	Function	Graph :: Graph	40:0:809:830							
ANR	3150885	FunctionDef	Graph :: Graph ()		3150884	0					
ANR	3150886	CompoundStatement		41:0:828:830	3150884	0					
ANR	3150887	Identifier	Graph :: Graph		3150884	1					
ANR	3150888	ParameterList			3150884	2					
ANR	3150889	CFGEntryNode	ENTRY		3150884		True				
ANR	3150890	CFGExitNode	EXIT		3150884		True				
ANR	3150891	Function	Graph :: ~Graph	59:0:1029:1259							
ANR	3150892	FunctionDef	Graph :: ~Graph ()		3150891	0					
ANR	3150893	CompoundStatement		60:0:1049:1259	3150891	0					
ANR	3150894	ForStatement	for ( int i = 0 ; i < nodeToLabelString . getNumElem ( ) ; i ++ )		3150891	0					
ANR	3150895	ForInit	int i = 0 ;	61:6:1057:1064	3150891	0	True				
ANR	3150896	IdentifierDeclStatement	int i = 0 ;		3150891	0					
ANR	3150897	IdentifierDecl	i = 0		3150891	0					
ANR	3150898	IdentifierDeclType	int		3150891	0					
ANR	3150899	Identifier	i		3150891	1					
ANR	3150900	AssignmentExpression	i = 0		3150891	2		=			
ANR	3150901	Identifier	i		3150891	0					
ANR	3150902	PrimaryExpression	0		3150891	1					
ANR	3150903	Condition	i < nodeToLabelString . getNumElem ( )	61:15:1066:1097	3150891	1	True				
ANR	3150904	RelationalExpression	i < nodeToLabelString . getNumElem ( )		3150891	0		<			
ANR	3150905	Identifier	i		3150891	0					
ANR	3150906	CallExpression	nodeToLabelString . getNumElem ( )		3150891	1					
ANR	3150907	Callee	nodeToLabelString . getNumElem		3150891	0					
ANR	3150908	MemberAccess	nodeToLabelString . getNumElem		3150891	0					
ANR	3150909	Identifier	nodeToLabelString		3150891	0					
ANR	3150910	Identifier	getNumElem		3150891	1					
ANR	3150911	ArgumentList			3150891	1					
ANR	3150912	PostIncDecOperationExpression	i ++	61:49:1100:1102	3150891	2	True				
ANR	3150913	Identifier	i		3150891	0					
ANR	3150914	IncDec	++		3150891	1					
ANR	3150915	CompoundStatement		2:55:56:56	3150891	3					
ANR	3150916	IfStatement	if ( NULL != nodeToLabelString . getElem ( i ) )		3150891	0					
ANR	3150917	Condition	NULL != nodeToLabelString . getElem ( i )	62:6:1114:1147	3150891	0	True				
ANR	3150918	EqualityExpression	NULL != nodeToLabelString . getElem ( i )		3150891	0		!=			
ANR	3150919	Identifier	NULL		3150891	0					
ANR	3150920	CallExpression	nodeToLabelString . getElem ( i )		3150891	1					
ANR	3150921	Callee	nodeToLabelString . getElem		3150891	0					
ANR	3150922	MemberAccess	nodeToLabelString . getElem		3150891	0					
ANR	3150923	Identifier	nodeToLabelString		3150891	0					
ANR	3150924	Identifier	getElem		3150891	1					
ANR	3150925	ArgumentList	i		3150891	1					
ANR	3150926	Argument	i		3150891	0					
ANR	3150927	Identifier	i		3150891	0					
ANR	3150928	Statement	delete	63:3:1154:1159	3150891	1	True				
ANR	3150929	ExpressionStatement	nodeToLabelString . getElem ( i )	63:10:1161:1189	3150891	1	True				
ANR	3150930	CallExpression	nodeToLabelString . getElem ( i )		3150891	0					
ANR	3150931	Callee	nodeToLabelString . getElem		3150891	0					
ANR	3150932	MemberAccess	nodeToLabelString . getElem		3150891	0					
ANR	3150933	Identifier	nodeToLabelString		3150891	0					
ANR	3150934	Identifier	getElem		3150891	1					
ANR	3150935	ArgumentList	i		3150891	1					
ANR	3150936	Argument	i		3150891	0					
ANR	3150937	Identifier	i		3150891	0					
ANR	3150938	ExpressionStatement		64:2:1257:1257	3150891	1	True				
ANR	3150939	Identifier	Graph :: ~Graph		3150891	1					
ANR	3150940	ParameterList			3150891	2					
ANR	3150941	CFGEntryNode	ENTRY		3150891		True				
ANR	3150942	CFGExitNode	EXIT		3150891		True				
ANR	3150943	Symbol	nodeToLabelString . getElem		3150891						
ANR	3150944	Symbol	NULL		3150891						
ANR	3150945	Symbol	i		3150891						
ANR	3150946	Symbol	nodeToLabelString		3150891						
ANR	3150947	Symbol	nodeToLabelString . getNumElem		3150891						
ANR	3150948	Function	Graph :: addNode	83:0:1526:1734							
ANR	3150949	FunctionDef	Graph :: addNode ()		3150948	0					
ANR	3150950	CompoundStatement		84:0:1551:1734	3150948	0					
ANR	3150951	ExpressionStatement	arcTable . appendRow ( )	85:1:1554:1574	3150948	0	True				
ANR	3150952	CallExpression	arcTable . appendRow ( )		3150948	0					
ANR	3150953	Callee	arcTable . appendRow		3150948	0					
ANR	3150954	MemberAccess	arcTable . appendRow		3150948	0					
ANR	3150955	Identifier	arcTable		3150948	0					
ANR	3150956	Identifier	appendRow		3150948	1					
ANR	3150957	ArgumentList			3150948	1					
ANR	3150958	ExpressionStatement	nodeToLabelInt . append ( - 1 )	86:1:1577:1602	3150948	1	True				
ANR	3150959	CallExpression	nodeToLabelInt . append ( - 1 )		3150948	0					
ANR	3150960	Callee	nodeToLabelInt . append		3150948	0					
ANR	3150961	MemberAccess	nodeToLabelInt . append		3150948	0					
ANR	3150962	Identifier	nodeToLabelInt		3150948	0					
ANR	3150963	Identifier	append		3150948	1					
ANR	3150964	ArgumentList	- 1		3150948	1					
ANR	3150965	Argument	- 1		3150948	0					
ANR	3150966	UnaryOperationExpression	- 1		3150948	0					
ANR	3150967	UnaryOperator	-		3150948	0					
ANR	3150968	PrimaryExpression	1		3150948	1					
ANR	3150969	ExpressionStatement	nodeToLabelString . append ( NULL )	87:1:1637:1667	3150948	2	True				
ANR	3150970	CallExpression	nodeToLabelString . append ( NULL )		3150948	0					
ANR	3150971	Callee	nodeToLabelString . append		3150948	0					
ANR	3150972	MemberAccess	nodeToLabelString . append		3150948	0					
ANR	3150973	Identifier	nodeToLabelString		3150948	0					
ANR	3150974	Identifier	append		3150948	1					
ANR	3150975	ArgumentList	NULL		3150948	1					
ANR	3150976	Argument	NULL		3150948	0					
ANR	3150977	Identifier	NULL		3150948	0					
ANR	3150978	ReturnStatement	return arcTable . getNumRow ( ) - 1 ;	88:1:1703:1732	3150948	3	True				
ANR	3150979	AdditiveExpression	arcTable . getNumRow ( ) - 1		3150948	0		-			
ANR	3150980	CallExpression	arcTable . getNumRow ( )		3150948	0					
ANR	3150981	Callee	arcTable . getNumRow		3150948	0					
ANR	3150982	MemberAccess	arcTable . getNumRow		3150948	0					
ANR	3150983	Identifier	arcTable		3150948	0					
ANR	3150984	Identifier	getNumRow		3150948	1					
ANR	3150985	ArgumentList			3150948	1					
ANR	3150986	PrimaryExpression	1		3150948	1					
ANR	3150987	ReturnType	int		3150948	1					
ANR	3150988	Identifier	Graph :: addNode		3150948	2					
ANR	3150989	ParameterList			3150948	3					
ANR	3150990	CFGEntryNode	ENTRY		3150948		True				
ANR	3150991	CFGExitNode	EXIT		3150948		True				
ANR	3150992	Symbol	NULL		3150948						
ANR	3150993	Symbol	arcTable		3150948						
ANR	3150994	Symbol	nodeToLabelInt		3150948						
ANR	3150995	Symbol	nodeToLabelString		3150948						
ANR	3150996	Symbol	arcTable . getNumRow		3150948						
ANR	3150997	Function	Graph :: addArc	109:0:2090:2372							
ANR	3150998	FunctionDef	"Graph :: addArc (int nodeSrc , int nodeDst)"		3150997	0					
ANR	3150999	CompoundStatement		110:0:2135:2372	3150997	0					
ANR	3151000	IfStatement	if ( nodeSrc < 0 || nodeSrc >= arcTable . getNumRow ( ) )		3150997	0					
ANR	3151001	Condition	nodeSrc < 0 || nodeSrc >= arcTable . getNumRow ( )	111:5:2142:2183	3150997	0	True				
ANR	3151002	OrExpression	nodeSrc < 0 || nodeSrc >= arcTable . getNumRow ( )		3150997	0		||			
ANR	3151003	RelationalExpression	nodeSrc < 0		3150997	0		<			
ANR	3151004	Identifier	nodeSrc		3150997	0					
ANR	3151005	PrimaryExpression	0		3150997	1					
ANR	3151006	RelationalExpression	nodeSrc >= arcTable . getNumRow ( )		3150997	1		>=			
ANR	3151007	Identifier	nodeSrc		3150997	0					
ANR	3151008	CallExpression	arcTable . getNumRow ( )		3150997	1					
ANR	3151009	Callee	arcTable . getNumRow		3150997	0					
ANR	3151010	MemberAccess	arcTable . getNumRow		3150997	0					
ANR	3151011	Identifier	arcTable		3150997	0					
ANR	3151012	Identifier	getNumRow		3150997	1					
ANR	3151013	ArgumentList			3150997	1					
ANR	3151014	ThrowStatement	"throw ""Graph::appendArc, nodeSrc out of range"" ;"	112:2:2189:2235	3150997	1	True				
ANR	3151015	PrimaryExpression	"""Graph::appendArc, nodeSrc out of range"""		3150997	0					
ANR	3151016	IfStatement	if ( nodeDst < 0 || nodeDst >= arcTable . getNumRow ( ) )		3150997	1					
ANR	3151017	Condition	nodeDst < 0 || nodeDst >= arcTable . getNumRow ( )	113:5:2242:2283	3150997	0	True				
ANR	3151018	OrExpression	nodeDst < 0 || nodeDst >= arcTable . getNumRow ( )		3150997	0		||			
ANR	3151019	RelationalExpression	nodeDst < 0		3150997	0		<			
ANR	3151020	Identifier	nodeDst		3150997	0					
ANR	3151021	PrimaryExpression	0		3150997	1					
ANR	3151022	RelationalExpression	nodeDst >= arcTable . getNumRow ( )		3150997	1		>=			
ANR	3151023	Identifier	nodeDst		3150997	0					
ANR	3151024	CallExpression	arcTable . getNumRow ( )		3150997	1					
ANR	3151025	Callee	arcTable . getNumRow		3150997	0					
ANR	3151026	MemberAccess	arcTable . getNumRow		3150997	0					
ANR	3151027	Identifier	arcTable		3150997	0					
ANR	3151028	Identifier	getNumRow		3150997	1					
ANR	3151029	ArgumentList			3150997	1					
ANR	3151030	ThrowStatement	"throw ""Graph::appendArc, nodeDst out of range"" ;"	114:2:2289:2335	3150997	1	True				
ANR	3151031	PrimaryExpression	"""Graph::appendArc, nodeDst out of range"""		3150997	0					
ANR	3151032	ExpressionStatement	"arcTable . append ( nodeSrc , nodeDst )"	115:1:2338:2370	3150997	2	True				
ANR	3151033	CallExpression	"arcTable . append ( nodeSrc , nodeDst )"		3150997	0					
ANR	3151034	Callee	arcTable . append		3150997	0					
ANR	3151035	MemberAccess	arcTable . append		3150997	0					
ANR	3151036	Identifier	arcTable		3150997	0					
ANR	3151037	Identifier	append		3150997	1					
ANR	3151038	ArgumentList	nodeSrc		3150997	1					
ANR	3151039	Argument	nodeSrc		3150997	0					
ANR	3151040	Identifier	nodeSrc		3150997	0					
ANR	3151041	Argument	nodeDst		3150997	1					
ANR	3151042	Identifier	nodeDst		3150997	0					
ANR	3151043	ReturnType	void		3150997	1					
ANR	3151044	Identifier	Graph :: addArc		3150997	2					
ANR	3151045	ParameterList	"int nodeSrc , int nodeDst"		3150997	3					
ANR	3151046	Parameter	int nodeSrc	109:19:2109:2119	3150997	0	True				
ANR	3151047	ParameterType	int		3150997	0					
ANR	3151048	Identifier	nodeSrc		3150997	1					
ANR	3151049	Parameter	int nodeDst	109:32:2122:2132	3150997	1	True				
ANR	3151050	ParameterType	int		3150997	0					
ANR	3151051	Identifier	nodeDst		3150997	1					
ANR	3151052	CFGEntryNode	ENTRY		3150997		True				
ANR	3151053	CFGExitNode	EXIT		3150997		True				
ANR	3151054	CFGExceptionNode	EXCEPTION		3150997		True				
ANR	3151055	CFGExceptionNode	EXCEPTION		3150997		True				
ANR	3151056	CFGExceptionNode	EXCEPTION		3150997		True				
ANR	3151057	Symbol	nodeDst		3150997						
ANR	3151058	Symbol	nodeSrc		3150997						
ANR	3151059	Symbol	arcTable		3150997						
ANR	3151060	Symbol	arcTable . getNumRow		3150997						
ANR	3151061	Function	Graph :: addArcNoDuplicates	137:0:2835:3335							
ANR	3151062	FunctionDef	"Graph :: addArcNoDuplicates (int nodeSrc , int nodeDst)"		3151061	0					
ANR	3151063	CompoundStatement		138:0:2892:3335	3151061	0					
ANR	3151064	IfStatement	if ( nodeSrc < 0 || nodeSrc >= arcTable . getNumRow ( ) )		3151061	0					
ANR	3151065	Condition	nodeSrc < 0 || nodeSrc >= arcTable . getNumRow ( )	139:5:2899:2940	3151061	0	True				
ANR	3151066	OrExpression	nodeSrc < 0 || nodeSrc >= arcTable . getNumRow ( )		3151061	0		||			
ANR	3151067	RelationalExpression	nodeSrc < 0		3151061	0		<			
ANR	3151068	Identifier	nodeSrc		3151061	0					
ANR	3151069	PrimaryExpression	0		3151061	1					
ANR	3151070	RelationalExpression	nodeSrc >= arcTable . getNumRow ( )		3151061	1		>=			
ANR	3151071	Identifier	nodeSrc		3151061	0					
ANR	3151072	CallExpression	arcTable . getNumRow ( )		3151061	1					
ANR	3151073	Callee	arcTable . getNumRow		3151061	0					
ANR	3151074	MemberAccess	arcTable . getNumRow		3151061	0					
ANR	3151075	Identifier	arcTable		3151061	0					
ANR	3151076	Identifier	getNumRow		3151061	1					
ANR	3151077	ArgumentList			3151061	1					
ANR	3151078	ThrowStatement	"throw ""Graph::appendArc, nodeSrc out of range"" ;"	140:2:2946:2992	3151061	1	True				
ANR	3151079	PrimaryExpression	"""Graph::appendArc, nodeSrc out of range"""		3151061	0					
ANR	3151080	IfStatement	if ( nodeDst < 0 || nodeDst >= arcTable . getNumRow ( ) )		3151061	1					
ANR	3151081	Condition	nodeDst < 0 || nodeDst >= arcTable . getNumRow ( )	141:5:2999:3040	3151061	0	True				
ANR	3151082	OrExpression	nodeDst < 0 || nodeDst >= arcTable . getNumRow ( )		3151061	0		||			
ANR	3151083	RelationalExpression	nodeDst < 0		3151061	0		<			
ANR	3151084	Identifier	nodeDst		3151061	0					
ANR	3151085	PrimaryExpression	0		3151061	1					
ANR	3151086	RelationalExpression	nodeDst >= arcTable . getNumRow ( )		3151061	1		>=			
ANR	3151087	Identifier	nodeDst		3151061	0					
ANR	3151088	CallExpression	arcTable . getNumRow ( )		3151061	1					
ANR	3151089	Callee	arcTable . getNumRow		3151061	0					
ANR	3151090	MemberAccess	arcTable . getNumRow		3151061	0					
ANR	3151091	Identifier	arcTable		3151061	0					
ANR	3151092	Identifier	getNumRow		3151061	1					
ANR	3151093	ArgumentList			3151061	1					
ANR	3151094	ThrowStatement	"throw ""Graph::appendArc, nodeDst out of range"" ;"	142:2:3046:3092	3151061	1	True				
ANR	3151095	PrimaryExpression	"""Graph::appendArc, nodeDst out of range"""		3151061	0					
ANR	3151096	ForStatement	for ( int i = 0 ; i < getNumArcs ( nodeSrc ) ; i ++ )		3151061	2					
ANR	3151097	ForInit	int i = 0 ;	145:6:3138:3145	3151061	0	True				
ANR	3151098	IdentifierDeclStatement	int i = 0 ;		3151061	0					
ANR	3151099	IdentifierDecl	i = 0		3151061	0					
ANR	3151100	IdentifierDeclType	int		3151061	0					
ANR	3151101	Identifier	i		3151061	1					
ANR	3151102	AssignmentExpression	i = 0		3151061	2		=			
ANR	3151103	Identifier	i		3151061	0					
ANR	3151104	PrimaryExpression	0		3151061	1					
ANR	3151105	Condition	i < getNumArcs ( nodeSrc )	145:15:3147:3167	3151061	1	True				
ANR	3151106	RelationalExpression	i < getNumArcs ( nodeSrc )		3151061	0		<			
ANR	3151107	Identifier	i		3151061	0					
ANR	3151108	CallExpression	getNumArcs ( nodeSrc )		3151061	1					
ANR	3151109	Callee	getNumArcs		3151061	0					
ANR	3151110	Identifier	getNumArcs		3151061	0					
ANR	3151111	ArgumentList	nodeSrc		3151061	1					
ANR	3151112	Argument	nodeSrc		3151061	0					
ANR	3151113	Identifier	nodeSrc		3151061	0					
ANR	3151114	PostIncDecOperationExpression	i ++	145:38:3170:3172	3151061	2	True				
ANR	3151115	Identifier	i		3151061	0					
ANR	3151116	IncDec	++		3151061	1					
ANR	3151117	CompoundStatement		8:44:283:283	3151061	3					
ANR	3151118	IfStatement	"if ( getArc ( nodeSrc , i ) == nodeDst )"		3151061	0					
ANR	3151119	Condition	"getArc ( nodeSrc , i ) == nodeDst"	146:6:3184:3209	3151061	0	True				
ANR	3151120	EqualityExpression	"getArc ( nodeSrc , i ) == nodeDst"		3151061	0		==			
ANR	3151121	CallExpression	"getArc ( nodeSrc , i )"		3151061	0					
ANR	3151122	Callee	getArc		3151061	0					
ANR	3151123	Identifier	getArc		3151061	0					
ANR	3151124	ArgumentList	nodeSrc		3151061	1					
ANR	3151125	Argument	nodeSrc		3151061	0					
ANR	3151126	Identifier	nodeSrc		3151061	0					
ANR	3151127	Argument	i		3151061	1					
ANR	3151128	Identifier	i		3151061	0					
ANR	3151129	Identifier	nodeDst		3151061	1					
ANR	3151130	ReturnStatement	return false ;	147:3:3216:3228	3151061	1	True				
ANR	3151131	Identifier	false		3151061	0					
ANR	3151132	ExpressionStatement		148:2:3232:3232	3151061	3	True				
ANR	3151133	ExpressionStatement	"arcTable . append ( nodeSrc , nodeDst )"	152:1:3286:3318	3151061	4	True				
ANR	3151134	CallExpression	"arcTable . append ( nodeSrc , nodeDst )"		3151061	0					
ANR	3151135	Callee	arcTable . append		3151061	0					
ANR	3151136	MemberAccess	arcTable . append		3151061	0					
ANR	3151137	Identifier	arcTable		3151061	0					
ANR	3151138	Identifier	append		3151061	1					
ANR	3151139	ArgumentList	nodeSrc		3151061	1					
ANR	3151140	Argument	nodeSrc		3151061	0					
ANR	3151141	Identifier	nodeSrc		3151061	0					
ANR	3151142	Argument	nodeDst		3151061	1					
ANR	3151143	Identifier	nodeDst		3151061	0					
ANR	3151144	ReturnStatement	return true ;	154:1:3322:3333	3151061	5	True				
ANR	3151145	Identifier	true		3151061	0					
ANR	3151146	ReturnType	bool		3151061	1					
ANR	3151147	Identifier	Graph :: addArcNoDuplicates		3151061	2					
ANR	3151148	ParameterList	"int nodeSrc , int nodeDst"		3151061	3					
ANR	3151149	Parameter	int nodeSrc	137:31:2866:2876	3151061	0	True				
ANR	3151150	ParameterType	int		3151061	0					
ANR	3151151	Identifier	nodeSrc		3151061	1					
ANR	3151152	Parameter	int nodeDst	137:44:2879:2889	3151061	1	True				
ANR	3151153	ParameterType	int		3151061	0					
ANR	3151154	Identifier	nodeDst		3151061	1					
ANR	3151155	CFGEntryNode	ENTRY		3151061		True				
ANR	3151156	CFGExitNode	EXIT		3151061		True				
ANR	3151157	CFGExceptionNode	EXCEPTION		3151061		True				
ANR	3151158	CFGExceptionNode	EXCEPTION		3151061		True				
ANR	3151159	CFGExceptionNode	EXCEPTION		3151061		True				
ANR	3151160	Symbol	getNumArcs		3151061						
ANR	3151161	Symbol	nodeDst		3151061						
ANR	3151162	Symbol	getArc		3151061						
ANR	3151163	Symbol	nodeSrc		3151061						
ANR	3151164	Symbol	false		3151061						
ANR	3151165	Symbol	true		3151061						
ANR	3151166	Symbol	arcTable		3151061						
ANR	3151167	Symbol	i		3151061						
ANR	3151168	Symbol	arcTable . getNumRow		3151061						
ANR	3151169	Function	Graph :: deappendArc	171:0:3524:3592							
ANR	3151170	FunctionDef	Graph :: deappendArc (int node)		3151169	0					
ANR	3151171	CompoundStatement		172:0:3557:3592	3151169	0					
ANR	3151172	ReturnStatement	return arcTable . deappend ( node ) ;	173:1:3560:3590	3151169	0	True				
ANR	3151173	CallExpression	arcTable . deappend ( node )		3151169	0					
ANR	3151174	Callee	arcTable . deappend		3151169	0					
ANR	3151175	MemberAccess	arcTable . deappend		3151169	0					
ANR	3151176	Identifier	arcTable		3151169	0					
ANR	3151177	Identifier	deappend		3151169	1					
ANR	3151178	ArgumentList	node		3151169	1					
ANR	3151179	Argument	node		3151169	0					
ANR	3151180	Identifier	node		3151169	0					
ANR	3151181	ReturnType	int		3151169	1					
ANR	3151182	Identifier	Graph :: deappendArc		3151169	2					
ANR	3151183	ParameterList	int node		3151169	3					
ANR	3151184	Parameter	int node	171:23:3547:3554	3151169	0	True				
ANR	3151185	ParameterType	int		3151169	0					
ANR	3151186	Identifier	node		3151169	1					
ANR	3151187	CFGEntryNode	ENTRY		3151169		True				
ANR	3151188	CFGExitNode	EXIT		3151169		True				
ANR	3151189	Symbol	arcTable . deappend		3151169						
ANR	3151190	Symbol	node		3151169						
ANR	3151191	Symbol	arcTable		3151169						
ANR	3151192	Function	Graph :: getNumNodes	190:0:3766:3833							
ANR	3151193	FunctionDef	Graph :: getNumNodes ()		3151192	0					
ANR	3151194	CompoundStatement		191:0:3801:3833	3151192	0					
ANR	3151195	ReturnStatement	return arcTable . getNumRow ( ) ;	192:1:3804:3831	3151192	0	True				
ANR	3151196	CallExpression	arcTable . getNumRow ( )		3151192	0					
ANR	3151197	Callee	arcTable . getNumRow		3151192	0					
ANR	3151198	MemberAccess	arcTable . getNumRow		3151192	0					
ANR	3151199	Identifier	arcTable		3151192	0					
ANR	3151200	Identifier	getNumRow		3151192	1					
ANR	3151201	ArgumentList			3151192	1					
ANR	3151202	ReturnType	int		3151192	1					
ANR	3151203	Identifier	Graph :: getNumNodes		3151192	2					
ANR	3151204	ParameterList			3151192	3					
ANR	3151205	CFGEntryNode	ENTRY		3151192		True				
ANR	3151206	CFGExitNode	EXIT		3151192		True				
ANR	3151207	Symbol	arcTable		3151192						
ANR	3151208	Symbol	arcTable . getNumRow		3151192						
ANR	3151209	Function	Graph :: getNumArcs	209:0:4034:4109							
ANR	3151210	FunctionDef	Graph :: getNumArcs (int node)		3151209	0					
ANR	3151211	CompoundStatement		210:0:4072:4109	3151209	0					
ANR	3151212	ReturnStatement	return arcTable . getNumElem ( node ) ;	211:1:4075:4107	3151209	0	True				
ANR	3151213	CallExpression	arcTable . getNumElem ( node )		3151209	0					
ANR	3151214	Callee	arcTable . getNumElem		3151209	0					
ANR	3151215	MemberAccess	arcTable . getNumElem		3151209	0					
ANR	3151216	Identifier	arcTable		3151209	0					
ANR	3151217	Identifier	getNumElem		3151209	1					
ANR	3151218	ArgumentList	node		3151209	1					
ANR	3151219	Argument	node		3151209	0					
ANR	3151220	Identifier	node		3151209	0					
ANR	3151221	ReturnType	int		3151209	1					
ANR	3151222	Identifier	Graph :: getNumArcs		3151209	2					
ANR	3151223	ParameterList	int node		3151209	3					
ANR	3151224	Parameter	int node	209:22:4056:4063	3151209	0	True				
ANR	3151225	ParameterType	int		3151209	0					
ANR	3151226	Identifier	node		3151209	1					
ANR	3151227	CFGEntryNode	ENTRY		3151209		True				
ANR	3151228	CFGExitNode	EXIT		3151209		True				
ANR	3151229	Symbol	node		3151209						
ANR	3151230	Symbol	arcTable . getNumElem		3151209						
ANR	3151231	Symbol	arcTable		3151209						
ANR	3151232	Function	Graph :: getArc	229:0:4363:4444							
ANR	3151233	FunctionDef	"Graph :: getArc (int node , int loc)"		3151232	0					
ANR	3151234	CompoundStatement		230:0:4406:4444	3151232	0					
ANR	3151235	ReturnStatement	"return arcTable . getElem ( node , loc ) ;"	231:1:4409:4442	3151232	0	True				
ANR	3151236	CallExpression	"arcTable . getElem ( node , loc )"		3151232	0					
ANR	3151237	Callee	arcTable . getElem		3151232	0					
ANR	3151238	MemberAccess	arcTable . getElem		3151232	0					
ANR	3151239	Identifier	arcTable		3151232	0					
ANR	3151240	Identifier	getElem		3151232	1					
ANR	3151241	ArgumentList	node		3151232	1					
ANR	3151242	Argument	node		3151232	0					
ANR	3151243	Identifier	node		3151232	0					
ANR	3151244	Argument	loc		3151232	1					
ANR	3151245	Identifier	loc		3151232	0					
ANR	3151246	ReturnType	int		3151232	1					
ANR	3151247	Identifier	Graph :: getArc		3151232	2					
ANR	3151248	ParameterList	"int node , int loc"		3151232	3					
ANR	3151249	Parameter	int node	229:18:4381:4388	3151232	0	True				
ANR	3151250	ParameterType	int		3151232	0					
ANR	3151251	Identifier	node		3151232	1					
ANR	3151252	Parameter	int loc	229:28:4391:4397	3151232	1	True				
ANR	3151253	ParameterType	int		3151232	0					
ANR	3151254	Identifier	loc		3151232	1					
ANR	3151255	CFGEntryNode	ENTRY		3151232		True				
ANR	3151256	CFGExitNode	EXIT		3151232		True				
ANR	3151257	Symbol	node		3151232						
ANR	3151258	Symbol	loc		3151232						
ANR	3151259	Symbol	arcTable		3151232						
ANR	3151260	Symbol	arcTable . getElem		3151232						
ANR	3151261	Function	Graph :: setLabelString	252:0:4872:5465							
ANR	3151262	FunctionDef	"Graph :: setLabelString (int node , const char * labelString)"		3151261	0					
ANR	3151263	CompoundStatement		253:0:4934:5465	3151261	0					
ANR	3151264	IfStatement	if ( NULL == labelString )		3151261	0					
ANR	3151265	Condition	NULL == labelString	255:5:4966:4982	3151261	0	True				
ANR	3151266	EqualityExpression	NULL == labelString		3151261	0		==			
ANR	3151267	Identifier	NULL		3151261	0					
ANR	3151268	Identifier	labelString		3151261	1					
ANR	3151269	ThrowStatement	"throw ""Graph::setLabelString, labelString is NULL"" ;"	256:2:4988:5038	3151261	1	True				
ANR	3151270	PrimaryExpression	"""Graph::setLabelString, labelString is NULL"""		3151261	0					
ANR	3151271	IfStatement	if ( - 1 != getNode ( labelString ) )		3151261	1					
ANR	3151272	Condition	- 1 != getNode ( labelString )	259:5:5072:5095	3151261	0	True				
ANR	3151273	EqualityExpression	- 1 != getNode ( labelString )		3151261	0		!=			
ANR	3151274	UnaryOperationExpression	- 1		3151261	0					
ANR	3151275	UnaryOperator	-		3151261	0					
ANR	3151276	PrimaryExpression	1		3151261	1					
ANR	3151277	CallExpression	getNode ( labelString )		3151261	1					
ANR	3151278	Callee	getNode		3151261	0					
ANR	3151279	Identifier	getNode		3151261	0					
ANR	3151280	ArgumentList	labelString		3151261	1					
ANR	3151281	Argument	labelString		3151261	0					
ANR	3151282	Identifier	labelString		3151261	0					
ANR	3151283	ThrowStatement	"throw ""Graph::setLabelString, labelString already exists"" ;"	260:2:5101:5158	3151261	1	True				
ANR	3151284	PrimaryExpression	"""Graph::setLabelString, labelString already exists"""		3151261	0					
ANR	3151285	ExpressionStatement		260:60:5159:5159	3151261	2	True				
ANR	3151286	IdentifierDeclStatement	char * str = strdup ( labelString ) ;	263:1:5188:5220	3151261	3	True				
ANR	3151287	IdentifierDecl	* str = strdup ( labelString )		3151261	0					
ANR	3151288	IdentifierDeclType	char *		3151261	0					
ANR	3151289	Identifier	str		3151261	1					
ANR	3151290	AssignmentExpression	* str = strdup ( labelString )		3151261	2		=			
ANR	3151291	Identifier	str		3151261	0					
ANR	3151292	CallExpression	strdup ( labelString )		3151261	1					
ANR	3151293	Callee	strdup		3151261	0					
ANR	3151294	Identifier	strdup		3151261	0					
ANR	3151295	ArgumentList	labelString		3151261	1					
ANR	3151296	Argument	labelString		3151261	0					
ANR	3151297	Identifier	labelString		3151261	0					
ANR	3151298	IfStatement	if ( NULL == str )		3151261	4					
ANR	3151299	Condition	NULL == str	264:5:5291:5299	3151261	0	True				
ANR	3151300	EqualityExpression	NULL == str		3151261	0		==			
ANR	3151301	Identifier	NULL		3151261	0					
ANR	3151302	Identifier	str		3151261	1					
ANR	3151303	ThrowStatement	"throw ""Graph::setLabelString, str is NULL"" ;"	265:2:5305:5347	3151261	1	True				
ANR	3151304	PrimaryExpression	"""Graph::setLabelString, str is NULL"""		3151261	0					
ANR	3151305	ExpressionStatement	"nodeToLabelString . putElem ( str , node )"	268:1:5375:5410	3151261	5	True				
ANR	3151306	CallExpression	"nodeToLabelString . putElem ( str , node )"		3151261	0					
ANR	3151307	Callee	nodeToLabelString . putElem		3151261	0					
ANR	3151308	MemberAccess	nodeToLabelString . putElem		3151261	0					
ANR	3151309	Identifier	nodeToLabelString		3151261	0					
ANR	3151310	Identifier	putElem		3151261	1					
ANR	3151311	ArgumentList	str		3151261	1					
ANR	3151312	Argument	str		3151261	0					
ANR	3151313	Identifier	str		3151261	0					
ANR	3151314	Argument	node		3151261	1					
ANR	3151315	Identifier	node		3151261	0					
ANR	3151316	ExpressionStatement	"labelStringToNode . add ( str , node )"	269:1:5413:5444	3151261	6	True				
ANR	3151317	CallExpression	"labelStringToNode . add ( str , node )"		3151261	0					
ANR	3151318	Callee	labelStringToNode . add		3151261	0					
ANR	3151319	MemberAccess	labelStringToNode . add		3151261	0					
ANR	3151320	Identifier	labelStringToNode		3151261	0					
ANR	3151321	Identifier	add		3151261	1					
ANR	3151322	ArgumentList	str		3151261	1					
ANR	3151323	Argument	str		3151261	0					
ANR	3151324	Identifier	str		3151261	0					
ANR	3151325	Argument	node		3151261	1					
ANR	3151326	Identifier	node		3151261	0					
ANR	3151327	ReturnType	void		3151261	1					
ANR	3151328	Identifier	Graph :: setLabelString		3151261	2					
ANR	3151329	ParameterList	"int node , const char * labelString"		3151261	3					
ANR	3151330	Parameter	int node	252:27:4899:4906	3151261	0	True				
ANR	3151331	ParameterType	int		3151261	0					
ANR	3151332	Identifier	node		3151261	1					
ANR	3151333	Parameter	const char * labelString	252:37:4909:4931	3151261	1	True				
ANR	3151334	ParameterType	const char *		3151261	0					
ANR	3151335	Identifier	labelString		3151261	1					
ANR	3151336	CFGEntryNode	ENTRY		3151261		True				
ANR	3151337	CFGExitNode	EXIT		3151261		True				
ANR	3151338	CFGExceptionNode	EXCEPTION		3151261		True				
ANR	3151339	CFGExceptionNode	EXCEPTION		3151261		True				
ANR	3151340	CFGExceptionNode	EXCEPTION		3151261		True				
ANR	3151341	CFGExceptionNode	EXCEPTION		3151261		True				
ANR	3151342	CFGExceptionNode	EXCEPTION		3151261		True				
ANR	3151343	Symbol	str		3151261						
ANR	3151344	Symbol	node		3151261						
ANR	3151345	Symbol	NULL		3151261						
ANR	3151346	Symbol	labelString		3151261						
ANR	3151347	Symbol	getNode		3151261						
ANR	3151348	Symbol	strdup		3151261						
ANR	3151349	Symbol	nodeToLabelString		3151261						
ANR	3151350	Symbol	labelStringToNode		3151261						
ANR	3151351	Function	Graph :: setLabelInt	290:0:5896:6245							
ANR	3151352	FunctionDef	"Graph :: setLabelInt (int node , int labelInt)"		3151351	0					
ANR	3151353	CompoundStatement		291:0:5944:6245	3151351	0					
ANR	3151354	IfStatement	if ( labelInt < 0 )		3151351	0					
ANR	3151355	Condition	labelInt < 0	293:5:5980:5989	3151351	0	True				
ANR	3151356	RelationalExpression	labelInt < 0		3151351	0		<			
ANR	3151357	Identifier	labelInt		3151351	0					
ANR	3151358	PrimaryExpression	0		3151351	1					
ANR	3151359	ThrowStatement	"throw ""Graph::setLabelInt, labelInt must be at least 0"" ;"	294:2:5995:6050	3151351	1	True				
ANR	3151360	PrimaryExpression	"""Graph::setLabelInt, labelInt must be at least 0"""		3151351	0					
ANR	3151361	IfStatement	if ( - 1 != getNode ( labelInt ) )		3151351	1					
ANR	3151362	Condition	- 1 != getNode ( labelInt )	297:5:6084:6106	3151351	0	True				
ANR	3151363	EqualityExpression	- 1 != getNode ( labelInt )		3151351	0		!=			
ANR	3151364	UnaryOperationExpression	- 1		3151351	0					
ANR	3151365	UnaryOperator	-		3151351	0					
ANR	3151366	PrimaryExpression	1		3151351	1					
ANR	3151367	CallExpression	getNode ( labelInt )		3151351	1					
ANR	3151368	Callee	getNode		3151351	0					
ANR	3151369	Identifier	getNode		3151351	0					
ANR	3151370	ArgumentList	labelInt		3151351	1					
ANR	3151371	Argument	labelInt		3151351	0					
ANR	3151372	Identifier	labelInt		3151351	0					
ANR	3151373	ThrowStatement	"throw ""Graph::setLabelInt, labelInt already exists"" ;"	298:2:6112:6163	3151351	1	True				
ANR	3151374	PrimaryExpression	"""Graph::setLabelInt, labelInt already exists"""		3151351	0					
ANR	3151375	ExpressionStatement	"nodeToLabelInt . putElem ( labelInt , node )"	300:1:6167:6204	3151351	2	True				
ANR	3151376	CallExpression	"nodeToLabelInt . putElem ( labelInt , node )"		3151351	0					
ANR	3151377	Callee	nodeToLabelInt . putElem		3151351	0					
ANR	3151378	MemberAccess	nodeToLabelInt . putElem		3151351	0					
ANR	3151379	Identifier	nodeToLabelInt		3151351	0					
ANR	3151380	Identifier	putElem		3151351	1					
ANR	3151381	ArgumentList	labelInt		3151351	1					
ANR	3151382	Argument	labelInt		3151351	0					
ANR	3151383	Identifier	labelInt		3151351	0					
ANR	3151384	Argument	node		3151351	1					
ANR	3151385	Identifier	node		3151351	0					
ANR	3151386	ExpressionStatement	"labelIntToNode . insert ( labelInt , node )"	301:1:6207:6243	3151351	3	True				
ANR	3151387	CallExpression	"labelIntToNode . insert ( labelInt , node )"		3151351	0					
ANR	3151388	Callee	labelIntToNode . insert		3151351	0					
ANR	3151389	MemberAccess	labelIntToNode . insert		3151351	0					
ANR	3151390	Identifier	labelIntToNode		3151351	0					
ANR	3151391	Identifier	insert		3151351	1					
ANR	3151392	ArgumentList	labelInt		3151351	1					
ANR	3151393	Argument	labelInt		3151351	0					
ANR	3151394	Identifier	labelInt		3151351	0					
ANR	3151395	Argument	node		3151351	1					
ANR	3151396	Identifier	node		3151351	0					
ANR	3151397	ReturnType	void		3151351	1					
ANR	3151398	Identifier	Graph :: setLabelInt		3151351	2					
ANR	3151399	ParameterList	"int node , int labelInt"		3151351	3					
ANR	3151400	Parameter	int node	290:24:5920:5927	3151351	0	True				
ANR	3151401	ParameterType	int		3151351	0					
ANR	3151402	Identifier	node		3151351	1					
ANR	3151403	Parameter	int labelInt	290:34:5930:5941	3151351	1	True				
ANR	3151404	ParameterType	int		3151351	0					
ANR	3151405	Identifier	labelInt		3151351	1					
ANR	3151406	CFGEntryNode	ENTRY		3151351		True				
ANR	3151407	CFGExitNode	EXIT		3151351		True				
ANR	3151408	CFGExceptionNode	EXCEPTION		3151351		True				
ANR	3151409	CFGExceptionNode	EXCEPTION		3151351		True				
ANR	3151410	CFGExceptionNode	EXCEPTION		3151351		True				
ANR	3151411	Symbol	node		3151351						
ANR	3151412	Symbol	labelIntToNode		3151351						
ANR	3151413	Symbol	getNode		3151351						
ANR	3151414	Symbol	nodeToLabelInt		3151351						
ANR	3151415	Symbol	labelInt		3151351						
ANR	3151416	Function	Graph :: getLabelString	321:0:6609:6702							
ANR	3151417	FunctionDef	Graph :: getLabelString (int node)		3151416	0					
ANR	3151418	CompoundStatement		322:0:6659:6702	3151416	0					
ANR	3151419	ReturnStatement	return nodeToLabelString . getElem ( node ) ;	323:1:6662:6700	3151416	0	True				
ANR	3151420	CallExpression	nodeToLabelString . getElem ( node )		3151416	0					
ANR	3151421	Callee	nodeToLabelString . getElem		3151416	0					
ANR	3151422	MemberAccess	nodeToLabelString . getElem		3151416	0					
ANR	3151423	Identifier	nodeToLabelString		3151416	0					
ANR	3151424	Identifier	getElem		3151416	1					
ANR	3151425	ArgumentList	node		3151416	1					
ANR	3151426	Argument	node		3151416	0					
ANR	3151427	Identifier	node		3151416	0					
ANR	3151428	ReturnType	const char *		3151416	1					
ANR	3151429	Identifier	Graph :: getLabelString		3151416	2					
ANR	3151430	ParameterList	int node		3151416	3					
ANR	3151431	Parameter	int node	321:34:6643:6650	3151416	0	True				
ANR	3151432	ParameterType	int		3151416	0					
ANR	3151433	Identifier	node		3151416	1					
ANR	3151434	CFGEntryNode	ENTRY		3151416		True				
ANR	3151435	CFGExitNode	EXIT		3151416		True				
ANR	3151436	Symbol	node		3151416						
ANR	3151437	Symbol	nodeToLabelString . getElem		3151416						
ANR	3151438	Symbol	nodeToLabelString		3151416						
ANR	3151439	Function	Graph :: getLabelInt	342:0:6998:7077							
ANR	3151440	FunctionDef	Graph :: getLabelInt (int node)		3151439	0					
ANR	3151441	CompoundStatement		343:0:7037:7077	3151439	0					
ANR	3151442	ReturnStatement	return nodeToLabelInt . getElem ( node ) ;	344:1:7040:7075	3151439	0	True				
ANR	3151443	CallExpression	nodeToLabelInt . getElem ( node )		3151439	0					
ANR	3151444	Callee	nodeToLabelInt . getElem		3151439	0					
ANR	3151445	MemberAccess	nodeToLabelInt . getElem		3151439	0					
ANR	3151446	Identifier	nodeToLabelInt		3151439	0					
ANR	3151447	Identifier	getElem		3151439	1					
ANR	3151448	ArgumentList	node		3151439	1					
ANR	3151449	Argument	node		3151439	0					
ANR	3151450	Identifier	node		3151439	0					
ANR	3151451	ReturnType	int		3151439	1					
ANR	3151452	Identifier	Graph :: getLabelInt		3151439	2					
ANR	3151453	ParameterList	int node		3151439	3					
ANR	3151454	Parameter	int node	342:23:7021:7028	3151439	0	True				
ANR	3151455	ParameterType	int		3151439	0					
ANR	3151456	Identifier	node		3151439	1					
ANR	3151457	CFGEntryNode	ENTRY		3151439		True				
ANR	3151458	CFGExitNode	EXIT		3151439		True				
ANR	3151459	Symbol	node		3151439						
ANR	3151460	Symbol	nodeToLabelInt		3151439						
ANR	3151461	Symbol	nodeToLabelInt . getElem		3151439						
ANR	3151462	Function	Graph :: getNode	363:0:7393:7490							
ANR	3151463	FunctionDef	Graph :: getNode (const char * labelString)		3151462	0					
ANR	3151464	CompoundStatement		364:0:7443:7490	3151462	0					
ANR	3151465	ReturnStatement	return labelStringToNode . find ( labelString ) ;	365:1:7446:7488	3151462	0	True				
ANR	3151466	CallExpression	labelStringToNode . find ( labelString )		3151462	0					
ANR	3151467	Callee	labelStringToNode . find		3151462	0					
ANR	3151468	MemberAccess	labelStringToNode . find		3151462	0					
ANR	3151469	Identifier	labelStringToNode		3151462	0					
ANR	3151470	Identifier	find		3151462	1					
ANR	3151471	ArgumentList	labelString		3151462	1					
ANR	3151472	Argument	labelString		3151462	0					
ANR	3151473	Identifier	labelString		3151462	0					
ANR	3151474	ReturnType	int		3151462	1					
ANR	3151475	Identifier	Graph :: getNode		3151462	2					
ANR	3151476	ParameterList	const char * labelString		3151462	3					
ANR	3151477	Parameter	const char * labelString	363:19:7412:7434	3151462	0	True				
ANR	3151478	ParameterType	const char *		3151462	0					
ANR	3151479	Identifier	labelString		3151462	1					
ANR	3151480	CFGEntryNode	ENTRY		3151462		True				
ANR	3151481	CFGExitNode	EXIT		3151462		True				
ANR	3151482	Symbol	labelString		3151462						
ANR	3151483	Symbol	labelStringToNode . find		3151462						
ANR	3151484	Symbol	labelStringToNode		3151462						
ANR	3151485	Function	Graph :: getNode	384:0:7778:7946							
ANR	3151486	FunctionDef	Graph :: getNode (int labelInt)		3151485	0					
ANR	3151487	CompoundStatement		385:0:7817:7946	3151485	0					
ANR	3151488	IdentifierDeclStatement	unsigned long val ;	386:1:7820:7837	3151485	0	True				
ANR	3151489	IdentifierDecl	val		3151485	0					
ANR	3151490	IdentifierDeclType	unsigned long		3151485	0					
ANR	3151491	Identifier	val		3151485	1					
ANR	3151492	IfStatement	if ( ! labelIntToNode . exists ( labelInt ) )		3151485	1					
ANR	3151493	Condition	! labelIntToNode . exists ( labelInt )	388:5:7845:7877	3151485	0	True				
ANR	3151494	UnaryOperationExpression	! labelIntToNode . exists ( labelInt )		3151485	0					
ANR	3151495	UnaryOperator	!		3151485	0					
ANR	3151496	CallExpression	labelIntToNode . exists ( labelInt )		3151485	1					
ANR	3151497	Callee	labelIntToNode . exists		3151485	0					
ANR	3151498	MemberAccess	labelIntToNode . exists		3151485	0					
ANR	3151499	Identifier	labelIntToNode		3151485	0					
ANR	3151500	Identifier	exists		3151485	1					
ANR	3151501	ArgumentList	labelInt		3151485	1					
ANR	3151502	Argument	labelInt		3151485	0					
ANR	3151503	Identifier	labelInt		3151485	0					
ANR	3151504	ReturnStatement	return - 1 ;	389:2:7883:7892	3151485	1	True				
ANR	3151505	UnaryOperationExpression	- 1		3151485	0					
ANR	3151506	UnaryOperator	-		3151485	0					
ANR	3151507	PrimaryExpression	1		3151485	1					
ANR	3151508	ExpressionStatement	val = labelIntToNode . findVal ( labelInt )	390:1:7895:7931	3151485	2	True				
ANR	3151509	AssignmentExpression	val = labelIntToNode . findVal ( labelInt )		3151485	0		=			
ANR	3151510	Identifier	val		3151485	0					
ANR	3151511	CallExpression	labelIntToNode . findVal ( labelInt )		3151485	1					
ANR	3151512	Callee	labelIntToNode . findVal		3151485	0					
ANR	3151513	MemberAccess	labelIntToNode . findVal		3151485	0					
ANR	3151514	Identifier	labelIntToNode		3151485	0					
ANR	3151515	Identifier	findVal		3151485	1					
ANR	3151516	ArgumentList	labelInt		3151485	1					
ANR	3151517	Argument	labelInt		3151485	0					
ANR	3151518	Identifier	labelInt		3151485	0					
ANR	3151519	ReturnStatement	return val ;	391:1:7934:7944	3151485	3	True				
ANR	3151520	Identifier	val		3151485	0					
ANR	3151521	ReturnType	int		3151485	1					
ANR	3151522	Identifier	Graph :: getNode		3151485	2					
ANR	3151523	ParameterList	int labelInt		3151485	3					
ANR	3151524	Parameter	int labelInt	384:19:7797:7808	3151485	0	True				
ANR	3151525	ParameterType	int		3151485	0					
ANR	3151526	Identifier	labelInt		3151485	1					
ANR	3151527	CFGEntryNode	ENTRY		3151485		True				
ANR	3151528	CFGExitNode	EXIT		3151485		True				
ANR	3151529	Symbol	val		3151485						
ANR	3151530	Symbol	labelIntToNode		3151485						
ANR	3151531	Symbol	labelIntToNode . findVal		3151485						
ANR	3151532	Symbol	labelIntToNode . exists		3151485						
ANR	3151533	Symbol	labelInt		3151485						
ANR	3151534	Function	Graph :: isDag	410:0:8177:8712							
ANR	3151535	FunctionDef	Graph :: isDag ()		3151534	0					
ANR	3151536	CompoundStatement		411:0:8207:8712	3151534	0					
ANR	3151537	IdentifierDeclStatement	int i ;	412:1:8210:8215	3151534	0	True				
ANR	3151538	IdentifierDecl	i		3151534	0					
ANR	3151539	IdentifierDeclType	int		3151534	0					
ANR	3151540	Identifier	i		3151534	1					
ANR	3151541	IdentifierDeclStatement	int numNodes = getNumNodes ( ) ;	414:1:8219:8247	3151534	1	True				
ANR	3151542	IdentifierDecl	numNodes = getNumNodes ( )		3151534	0					
ANR	3151543	IdentifierDeclType	int		3151534	0					
ANR	3151544	Identifier	numNodes		3151534	1					
ANR	3151545	AssignmentExpression	numNodes = getNumNodes ( )		3151534	2		=			
ANR	3151546	Identifier	numNodes		3151534	0					
ANR	3151547	CallExpression	getNumNodes ( )		3151534	1					
ANR	3151548	Callee	getNumNodes		3151534	0					
ANR	3151549	Identifier	getNumNodes		3151534	0					
ANR	3151550	ArgumentList			3151534	1					
ANR	3151551	IdentifierDeclStatement	int * colorTable = new int [ numNodes ] ;	417:1:8274:8310	3151534	2	True				
ANR	3151552	IdentifierDecl	* colorTable = new int [ numNodes ]		3151534	0					
ANR	3151553	IdentifierDeclType	int *		3151534	0					
ANR	3151554	Identifier	colorTable		3151534	1					
ANR	3151555	AssignmentExpression	* colorTable = new int [ numNodes ]		3151534	2		=			
ANR	3151556	Identifier	numNodes		3151534	0					
ANR	3151557	Identifier	numNodes		3151534	1					
ANR	3151558	IfStatement	if ( NULL == colorTable )		3151534	3					
ANR	3151559	Condition	NULL == colorTable	418:5:8317:8332	3151534	0	True				
ANR	3151560	EqualityExpression	NULL == colorTable		3151534	0		==			
ANR	3151561	Identifier	NULL		3151534	0					
ANR	3151562	Identifier	colorTable		3151534	1					
ANR	3151563	ThrowStatement	"throw ""Graph::isDag, colorTable is NULL"" ;"	419:2:8338:8378	3151534	1	True				
ANR	3151564	PrimaryExpression	"""Graph::isDag, colorTable is NULL"""		3151534	0					
ANR	3151565	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		3151534	4					
ANR	3151566	ForInit	i = 0 ;	420:6:8386:8389	3151534	0	True				
ANR	3151567	AssignmentExpression	i = 0		3151534	0		=			
ANR	3151568	Identifier	i		3151534	0					
ANR	3151569	PrimaryExpression	0		3151534	1					
ANR	3151570	Condition	i < numNodes	420:11:8391:8400	3151534	1	True				
ANR	3151571	RelationalExpression	i < numNodes		3151534	0		<			
ANR	3151572	Identifier	i		3151534	0					
ANR	3151573	Identifier	numNodes		3151534	1					
ANR	3151574	PostIncDecOperationExpression	i ++	420:23:8403:8405	3151534	2	True				
ANR	3151575	Identifier	i		3151534	0					
ANR	3151576	IncDec	++		3151534	1					
ANR	3151577	ExpressionStatement	colorTable [ i ] = 0	421:2:8411:8428	3151534	3	True				
ANR	3151578	AssignmentExpression	colorTable [ i ] = 0		3151534	0		=			
ANR	3151579	ArrayIndexing	colorTable [ i ]		3151534	0					
ANR	3151580	Identifier	colorTable		3151534	0					
ANR	3151581	Identifier	i		3151534	1					
ANR	3151582	PrimaryExpression	0		3151534	1					
ANR	3151583	IdentifierDeclStatement	bool hasBackEdge = false ;	424:1:8487:8511	3151534	5	True				
ANR	3151584	IdentifierDecl	hasBackEdge = false		3151534	0					
ANR	3151585	IdentifierDeclType	bool		3151534	0					
ANR	3151586	Identifier	hasBackEdge		3151534	1					
ANR	3151587	AssignmentExpression	hasBackEdge = false		3151534	2		=			
ANR	3151588	Identifier	false		3151534	0					
ANR	3151589	Identifier	false		3151534	1					
ANR	3151590	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		3151534	6					
ANR	3151591	ForInit	i = 0 ;	425:6:8519:8522	3151534	0	True				
ANR	3151592	AssignmentExpression	i = 0		3151534	0		=			
ANR	3151593	Identifier	i		3151534	0					
ANR	3151594	PrimaryExpression	0		3151534	1					
ANR	3151595	Condition	i < numNodes	425:11:8524:8533	3151534	1	True				
ANR	3151596	RelationalExpression	i < numNodes		3151534	0		<			
ANR	3151597	Identifier	i		3151534	0					
ANR	3151598	Identifier	numNodes		3151534	1					
ANR	3151599	PostIncDecOperationExpression	i ++	425:23:8536:8538	3151534	2	True				
ANR	3151600	Identifier	i		3151534	0					
ANR	3151601	IncDec	++		3151534	1					
ANR	3151602	IfStatement	if ( 0 == colorTable [ i ] )		3151534	3					
ANR	3151603	Condition	0 == colorTable [ i ]	426:6:8548:8565	3151534	0	True				
ANR	3151604	EqualityExpression	0 == colorTable [ i ]		3151534	0		==			
ANR	3151605	PrimaryExpression	0		3151534	0					
ANR	3151606	ArrayIndexing	colorTable [ i ]		3151534	1					
ANR	3151607	Identifier	colorTable		3151534	0					
ANR	3151608	Identifier	i		3151534	1					
ANR	3151609	ExpressionStatement	"DFS_visit ( i , colorTable , hasBackEdge )"	427:3:8587:8622	3151534	1	True				
ANR	3151610	CallExpression	"DFS_visit ( i , colorTable , hasBackEdge )"		3151534	0					
ANR	3151611	Callee	DFS_visit		3151534	0					
ANR	3151612	Identifier	DFS_visit		3151534	0					
ANR	3151613	ArgumentList	i		3151534	1					
ANR	3151614	Argument	i		3151534	0					
ANR	3151615	Identifier	i		3151534	0					
ANR	3151616	Argument	colorTable		3151534	1					
ANR	3151617	Identifier	colorTable		3151534	0					
ANR	3151618	Argument	hasBackEdge		3151534	2					
ANR	3151619	Identifier	hasBackEdge		3151534	0					
ANR	3151620	Statement	delete	429:1:8667:8672	3151534	7	True				
ANR	3151621	Statement	[	429:7:8673:8673	3151534	8	True				
ANR	3151622	Statement	]	429:8:8674:8674	3151534	9	True				
ANR	3151623	ExpressionStatement	colorTable	429:10:8676:8686	3151534	10	True				
ANR	3151624	Identifier	colorTable		3151534	0					
ANR	3151625	ReturnStatement	return ! hasBackEdge ;	431:1:8690:8710	3151534	11	True				
ANR	3151626	UnaryOperationExpression	! hasBackEdge		3151534	0					
ANR	3151627	UnaryOperator	!		3151534	0					
ANR	3151628	Identifier	hasBackEdge		3151534	1					
ANR	3151629	ReturnType	bool		3151534	1					
ANR	3151630	Identifier	Graph :: isDag		3151534	2					
ANR	3151631	ParameterList			3151534	3					
ANR	3151632	CFGEntryNode	ENTRY		3151534		True				
ANR	3151633	CFGExitNode	EXIT		3151534		True				
ANR	3151634	CFGExceptionNode	EXCEPTION		3151534		True				
ANR	3151635	Symbol	colorTable		3151534						
ANR	3151636	Symbol	getNumNodes		3151534						
ANR	3151637	Symbol	numNodes		3151534						
ANR	3151638	Symbol	NULL		3151534						
ANR	3151639	Symbol	* i		3151534						
ANR	3151640	Symbol	hasBackEdge		3151534						
ANR	3151641	Symbol	* colorTable		3151534						
ANR	3151642	Symbol	false		3151534						
ANR	3151643	Symbol	i		3151534						
ANR	3151644	Function	Graph :: DFS_visit	450:0:9074:9604							
ANR	3151645	FunctionDef	"Graph :: DFS_visit (int u , int * colorTable , bool & hasBackEdge)"		3151644	0					
ANR	3151646	CompoundStatement		451:0:9145:9604	3151644	0					
ANR	3151647	IfStatement	if ( NULL == colorTable )		3151644	0					
ANR	3151648	Condition	NULL == colorTable	452:5:9152:9167	3151644	0	True				
ANR	3151649	EqualityExpression	NULL == colorTable		3151644	0		==			
ANR	3151650	Identifier	NULL		3151644	0					
ANR	3151651	Identifier	colorTable		3151644	1					
ANR	3151652	ThrowStatement	"throw ""Graph::DFS_visit, colorTable is NULL"" ;"	453:2:9173:9217	3151644	1	True				
ANR	3151653	PrimaryExpression	"""Graph::DFS_visit, colorTable is NULL"""		3151644	0					
ANR	3151654	ExpressionStatement	colorTable [ u ] = 1	455:1:9221:9238	3151644	1	True				
ANR	3151655	AssignmentExpression	colorTable [ u ] = 1		3151644	0		=			
ANR	3151656	ArrayIndexing	colorTable [ u ]		3151644	0					
ANR	3151657	Identifier	colorTable		3151644	0					
ANR	3151658	Identifier	u		3151644	1					
ANR	3151659	PrimaryExpression	1		3151644	1					
ANR	3151660	IdentifierDeclStatement	int numArcs = getNumArcs ( u ) ;	456:1:9259:9286	3151644	2	True				
ANR	3151661	IdentifierDecl	numArcs = getNumArcs ( u )		3151644	0					
ANR	3151662	IdentifierDeclType	int		3151644	0					
ANR	3151663	Identifier	numArcs		3151644	1					
ANR	3151664	AssignmentExpression	numArcs = getNumArcs ( u )		3151644	2		=			
ANR	3151665	Identifier	numArcs		3151644	0					
ANR	3151666	CallExpression	getNumArcs ( u )		3151644	1					
ANR	3151667	Callee	getNumArcs		3151644	0					
ANR	3151668	Identifier	getNumArcs		3151644	0					
ANR	3151669	ArgumentList	u		3151644	1					
ANR	3151670	Argument	u		3151644	0					
ANR	3151671	Identifier	u		3151644	0					
ANR	3151672	ForStatement	for ( int i = 0 ; i < numArcs ; i ++ )		3151644	3					
ANR	3151673	ForInit	int i = 0 ;	457:6:9294:9301	3151644	0	True				
ANR	3151674	IdentifierDeclStatement	int i = 0 ;		3151644	0					
ANR	3151675	IdentifierDecl	i = 0		3151644	0					
ANR	3151676	IdentifierDeclType	int		3151644	0					
ANR	3151677	Identifier	i		3151644	1					
ANR	3151678	AssignmentExpression	i = 0		3151644	2		=			
ANR	3151679	Identifier	i		3151644	0					
ANR	3151680	PrimaryExpression	0		3151644	1					
ANR	3151681	Condition	i < numArcs	457:15:9303:9311	3151644	1	True				
ANR	3151682	RelationalExpression	i < numArcs		3151644	0		<			
ANR	3151683	Identifier	i		3151644	0					
ANR	3151684	Identifier	numArcs		3151644	1					
ANR	3151685	PostIncDecOperationExpression	i ++	457:26:9314:9316	3151644	2	True				
ANR	3151686	Identifier	i		3151644	0					
ANR	3151687	IncDec	++		3151644	1					
ANR	3151688	CompoundStatement		8:2:178:201	3151644	3					
ANR	3151689	IdentifierDeclStatement	"int child = getArc ( u , i ) ;"	458:2:9324:9347	3151644	0	True				
ANR	3151690	IdentifierDecl	"child = getArc ( u , i )"		3151644	0					
ANR	3151691	IdentifierDeclType	int		3151644	0					
ANR	3151692	Identifier	child		3151644	1					
ANR	3151693	AssignmentExpression	"child = getArc ( u , i )"		3151644	2		=			
ANR	3151694	Identifier	child		3151644	0					
ANR	3151695	CallExpression	"getArc ( u , i )"		3151644	1					
ANR	3151696	Callee	getArc		3151644	0					
ANR	3151697	Identifier	getArc		3151644	0					
ANR	3151698	ArgumentList	u		3151644	1					
ANR	3151699	Argument	u		3151644	0					
ANR	3151700	Identifier	u		3151644	0					
ANR	3151701	Argument	i		3151644	1					
ANR	3151702	Identifier	i		3151644	0					
ANR	3151703	IfStatement	if ( 1 == colorTable [ child ] )		3151644	1					
ANR	3151704	Condition	1 == colorTable [ child ]	459:6:9355:9376	3151644	0	True				
ANR	3151705	EqualityExpression	1 == colorTable [ child ]		3151644	0		==			
ANR	3151706	PrimaryExpression	1		3151644	0					
ANR	3151707	ArrayIndexing	colorTable [ child ]		3151644	1					
ANR	3151708	Identifier	colorTable		3151644	0					
ANR	3151709	Identifier	child		3151644	1					
ANR	3151710	ExpressionStatement	hasBackEdge = true	460:3:9445:9463	3151644	1	True				
ANR	3151711	AssignmentExpression	hasBackEdge = true		3151644	0		=			
ANR	3151712	Identifier	hasBackEdge		3151644	0					
ANR	3151713	Identifier	true		3151644	1					
ANR	3151714	IfStatement	if ( 0 == colorTable [ child ] )		3151644	2					
ANR	3151715	Condition	0 == colorTable [ child ]	461:6:9471:9492	3151644	0	True				
ANR	3151716	EqualityExpression	0 == colorTable [ child ]		3151644	0		==			
ANR	3151717	PrimaryExpression	0		3151644	0					
ANR	3151718	ArrayIndexing	colorTable [ child ]		3151644	1					
ANR	3151719	Identifier	colorTable		3151644	0					
ANR	3151720	Identifier	child		3151644	1					
ANR	3151721	ExpressionStatement	"DFS_visit ( child , colorTable , hasBackEdge )"	462:3:9520:9559	3151644	1	True				
ANR	3151722	CallExpression	"DFS_visit ( child , colorTable , hasBackEdge )"		3151644	0					
ANR	3151723	Callee	DFS_visit		3151644	0					
ANR	3151724	Identifier	DFS_visit		3151644	0					
ANR	3151725	ArgumentList	child		3151644	1					
ANR	3151726	Argument	child		3151644	0					
ANR	3151727	Identifier	child		3151644	0					
ANR	3151728	Argument	colorTable		3151644	1					
ANR	3151729	Identifier	colorTable		3151644	0					
ANR	3151730	Argument	hasBackEdge		3151644	2					
ANR	3151731	Identifier	hasBackEdge		3151644	0					
ANR	3151732	ExpressionStatement		463:2:9563:9563	3151644	4	True				
ANR	3151733	ExpressionStatement	colorTable [ u ] = 2	464:1:9566:9583	3151644	5	True				
ANR	3151734	AssignmentExpression	colorTable [ u ] = 2		3151644	0		=			
ANR	3151735	ArrayIndexing	colorTable [ u ]		3151644	0					
ANR	3151736	Identifier	colorTable		3151644	0					
ANR	3151737	Identifier	u		3151644	1					
ANR	3151738	PrimaryExpression	2		3151644	1					
ANR	3151739	ReturnType	void		3151644	1					
ANR	3151740	Identifier	Graph :: DFS_visit		3151644	2					
ANR	3151741	ParameterList	"int u , int * colorTable , bool & hasBackEdge"		3151644	3					
ANR	3151742	Parameter	int u	450:22:9096:9100	3151644	0	True				
ANR	3151743	ParameterType	int		3151644	0					
ANR	3151744	Identifier	u		3151644	1					
ANR	3151745	Parameter	int * colorTable	450:29:9103:9117	3151644	1	True				
ANR	3151746	ParameterType	int *		3151644	0					
ANR	3151747	Identifier	colorTable		3151644	1					
ANR	3151748	Parameter	bool & hasBackEdge	450:46:9120:9136	3151644	2	True				
ANR	3151749	ParameterType	bool &		3151644	0					
ANR	3151750	Identifier	hasBackEdge		3151644	1					
ANR	3151751	CFGEntryNode	ENTRY		3151644		True				
ANR	3151752	CFGExitNode	EXIT		3151644		True				
ANR	3151753	CFGExceptionNode	EXCEPTION		3151644		True				
ANR	3151754	Symbol	* child		3151644						
ANR	3151755	Symbol	NULL		3151644						
ANR	3151756	Symbol	hasBackEdge		3151644						
ANR	3151757	Symbol	i		3151644						
ANR	3151758	Symbol	colorTable		3151644						
ANR	3151759	Symbol	getNumArcs		3151644						
ANR	3151760	Symbol	numArcs		3151644						
ANR	3151761	Symbol	getArc		3151644						
ANR	3151762	Symbol	u		3151644						
ANR	3151763	Symbol	* colorTable		3151644						
ANR	3151764	Symbol	true		3151644						
ANR	3151765	Symbol	* u		3151644						
ANR	3151766	Symbol	child		3151644						
ANR	3151767	Function	Graph :: saveAsDot	483:0:9890:10806							
ANR	3151768	FunctionDef	Graph :: saveAsDot (FILE * stream)		3151767	0					
ANR	3151769	CompoundStatement		484:0:9932:10806	3151767	0					
ANR	3151770	IfStatement	if ( NULL == stream )		3151767	0					
ANR	3151771	Condition	NULL == stream	485:5:9939:9950	3151767	0	True				
ANR	3151772	EqualityExpression	NULL == stream		3151767	0		==			
ANR	3151773	Identifier	NULL		3151767	0					
ANR	3151774	Identifier	stream		3151767	1					
ANR	3151775	ThrowStatement	"throw ""Graph::saveAsDot, stream is NULL"" ;"	486:2:9956:9996	3151767	1	True				
ANR	3151776	PrimaryExpression	"""Graph::saveAsDot, stream is NULL"""		3151767	0					
ANR	3151777	ExpressionStatement	"fprintf ( stream , ""digraph G {\\n"" )"	488:1:10000:10033	3151767	1	True				
ANR	3151778	CallExpression	"fprintf ( stream , ""digraph G {\\n"" )"		3151767	0					
ANR	3151779	Callee	fprintf		3151767	0					
ANR	3151780	Identifier	fprintf		3151767	0					
ANR	3151781	ArgumentList	stream		3151767	1					
ANR	3151782	Argument	stream		3151767	0					
ANR	3151783	Identifier	stream		3151767	0					
ANR	3151784	Argument	"""digraph G {\\n"""		3151767	1					
ANR	3151785	PrimaryExpression	"""digraph G {\\n"""		3151767	0					
ANR	3151786	ExpressionStatement	"fprintf ( stream , ""rankdir=BT;\\n"" )"	489:1:10036:10069	3151767	2	True				
ANR	3151787	CallExpression	"fprintf ( stream , ""rankdir=BT;\\n"" )"		3151767	0					
ANR	3151788	Callee	fprintf		3151767	0					
ANR	3151789	Identifier	fprintf		3151767	0					
ANR	3151790	ArgumentList	stream		3151767	1					
ANR	3151791	Argument	stream		3151767	0					
ANR	3151792	Identifier	stream		3151767	0					
ANR	3151793	Argument	"""rankdir=BT;\\n"""		3151767	1					
ANR	3151794	PrimaryExpression	"""rankdir=BT;\\n"""		3151767	0					
ANR	3151795	ExpressionStatement	"fprintf ( stream , ""size=\\""7.5,10\\"";\\n"" )"	490:1:10072:10110	3151767	3	True				
ANR	3151796	CallExpression	"fprintf ( stream , ""size=\\""7.5,10\\"";\\n"" )"		3151767	0					
ANR	3151797	Callee	fprintf		3151767	0					
ANR	3151798	Identifier	fprintf		3151767	0					
ANR	3151799	ArgumentList	stream		3151767	1					
ANR	3151800	Argument	stream		3151767	0					
ANR	3151801	Identifier	stream		3151767	0					
ANR	3151802	Argument	"""size=\\""7.5,10\\"";\\n"""		3151767	1					
ANR	3151803	PrimaryExpression	"""size=\\""7.5,10\\"";\\n"""		3151767	0					
ANR	3151804	IdentifierDeclStatement	int numNodes = getNumNodes ( ) ;	493:1:10138:10166	3151767	4	True				
ANR	3151805	IdentifierDecl	numNodes = getNumNodes ( )		3151767	0					
ANR	3151806	IdentifierDeclType	int		3151767	0					
ANR	3151807	Identifier	numNodes		3151767	1					
ANR	3151808	AssignmentExpression	numNodes = getNumNodes ( )		3151767	2		=			
ANR	3151809	Identifier	numNodes		3151767	0					
ANR	3151810	CallExpression	getNumNodes ( )		3151767	1					
ANR	3151811	Callee	getNumNodes		3151767	0					
ANR	3151812	Identifier	getNumNodes		3151767	0					
ANR	3151813	ArgumentList			3151767	1					
ANR	3151814	ForStatement	for ( int i = 0 ; i < numNodes ; i ++ )		3151767	5					
ANR	3151815	ForInit	int i = 0 ;	494:6:10174:10181	3151767	0	True				
ANR	3151816	IdentifierDeclStatement	int i = 0 ;		3151767	0					
ANR	3151817	IdentifierDecl	i = 0		3151767	0					
ANR	3151818	IdentifierDeclType	int		3151767	0					
ANR	3151819	Identifier	i		3151767	1					
ANR	3151820	AssignmentExpression	i = 0		3151767	2		=			
ANR	3151821	Identifier	i		3151767	0					
ANR	3151822	PrimaryExpression	0		3151767	1					
ANR	3151823	Condition	i < numNodes	494:15:10183:10192	3151767	1	True				
ANR	3151824	RelationalExpression	i < numNodes		3151767	0		<			
ANR	3151825	Identifier	i		3151767	0					
ANR	3151826	Identifier	numNodes		3151767	1					
ANR	3151827	PostIncDecOperationExpression	i ++	494:27:10195:10197	3151767	2	True				
ANR	3151828	Identifier	i		3151767	0					
ANR	3151829	IncDec	++		3151767	1					
ANR	3151830	CompoundStatement		13:2:308:335	3151767	3					
ANR	3151831	ExpressionStatement	"fprintf ( stream , ""%d -> { "" , i )"	495:2:10205:10237	3151767	0	True				
ANR	3151832	CallExpression	"fprintf ( stream , ""%d -> { "" , i )"		3151767	0					
ANR	3151833	Callee	fprintf		3151767	0					
ANR	3151834	Identifier	fprintf		3151767	0					
ANR	3151835	ArgumentList	stream		3151767	1					
ANR	3151836	Argument	stream		3151767	0					
ANR	3151837	Identifier	stream		3151767	0					
ANR	3151838	Argument	"""%d -> { """		3151767	1					
ANR	3151839	PrimaryExpression	"""%d -> { """		3151767	0					
ANR	3151840	Argument	i		3151767	2					
ANR	3151841	Identifier	i		3151767	0					
ANR	3151842	IdentifierDeclStatement	int numArcs = getNumArcs ( i ) ;	496:2:10241:10268	3151767	1	True				
ANR	3151843	IdentifierDecl	numArcs = getNumArcs ( i )		3151767	0					
ANR	3151844	IdentifierDeclType	int		3151767	0					
ANR	3151845	Identifier	numArcs		3151767	1					
ANR	3151846	AssignmentExpression	numArcs = getNumArcs ( i )		3151767	2		=			
ANR	3151847	Identifier	numArcs		3151767	0					
ANR	3151848	CallExpression	getNumArcs ( i )		3151767	1					
ANR	3151849	Callee	getNumArcs		3151767	0					
ANR	3151850	Identifier	getNumArcs		3151767	0					
ANR	3151851	ArgumentList	i		3151767	1					
ANR	3151852	Argument	i		3151767	0					
ANR	3151853	Identifier	i		3151767	0					
ANR	3151854	ForStatement	for ( int j = 0 ; j < numArcs ; j ++ )		3151767	2					
ANR	3151855	ForInit	int j = 0 ;	497:7:10277:10284	3151767	0	True				
ANR	3151856	IdentifierDeclStatement	int j = 0 ;		3151767	0					
ANR	3151857	IdentifierDecl	j = 0		3151767	0					
ANR	3151858	IdentifierDeclType	int		3151767	0					
ANR	3151859	Identifier	j		3151767	1					
ANR	3151860	AssignmentExpression	j = 0		3151767	2		=			
ANR	3151861	Identifier	j		3151767	0					
ANR	3151862	PrimaryExpression	0		3151767	1					
ANR	3151863	Condition	j < numArcs	497:16:10286:10294	3151767	1	True				
ANR	3151864	RelationalExpression	j < numArcs		3151767	0		<			
ANR	3151865	Identifier	j		3151767	0					
ANR	3151866	Identifier	numArcs		3151767	1					
ANR	3151867	PostIncDecOperationExpression	j ++	497:27:10297:10299	3151767	2	True				
ANR	3151868	Identifier	j		3151767	0					
ANR	3151869	IncDec	++		3151767	1					
ANR	3151870	ExpressionStatement	"fprintf ( stream , ""%d ; "" , getArc ( i , j ) )"	498:3:10306:10345	3151767	3	True				
ANR	3151871	CallExpression	"fprintf ( stream , ""%d ; "" , getArc ( i , j ) )"		3151767	0					
ANR	3151872	Callee	fprintf		3151767	0					
ANR	3151873	Identifier	fprintf		3151767	0					
ANR	3151874	ArgumentList	stream		3151767	1					
ANR	3151875	Argument	stream		3151767	0					
ANR	3151876	Identifier	stream		3151767	0					
ANR	3151877	Argument	"""%d ; """		3151767	1					
ANR	3151878	PrimaryExpression	"""%d ; """		3151767	0					
ANR	3151879	Argument	"getArc ( i , j )"		3151767	2					
ANR	3151880	CallExpression	"getArc ( i , j )"		3151767	0					
ANR	3151881	Callee	getArc		3151767	0					
ANR	3151882	Identifier	getArc		3151767	0					
ANR	3151883	ArgumentList	i		3151767	1					
ANR	3151884	Argument	i		3151767	0					
ANR	3151885	Identifier	i		3151767	0					
ANR	3151886	Argument	j		3151767	1					
ANR	3151887	Identifier	j		3151767	0					
ANR	3151888	ExpressionStatement	"fprintf ( stream , ""}; \\n"" )"	499:2:10349:10375	3151767	3	True				
ANR	3151889	CallExpression	"fprintf ( stream , ""}; \\n"" )"		3151767	0					
ANR	3151890	Callee	fprintf		3151767	0					
ANR	3151891	Identifier	fprintf		3151767	0					
ANR	3151892	ArgumentList	stream		3151767	1					
ANR	3151893	Argument	stream		3151767	0					
ANR	3151894	Identifier	stream		3151767	0					
ANR	3151895	Argument	"""}; \\n"""		3151767	1					
ANR	3151896	PrimaryExpression	"""}; \\n"""		3151767	0					
ANR	3151897	ExpressionStatement		500:2:10379:10379	3151767	6	True				
ANR	3151898	ForStatement	for ( int i = 0 ; i < numNodes ; i ++ )		3151767	7					
ANR	3151899	ForInit	int i = 0 ;	503:6:10413:10420	3151767	0	True				
ANR	3151900	IdentifierDeclStatement	int i = 0 ;		3151767	0					
ANR	3151901	IdentifierDecl	i = 0		3151767	0					
ANR	3151902	IdentifierDeclType	int		3151767	0					
ANR	3151903	Identifier	i		3151767	1					
ANR	3151904	AssignmentExpression	i = 0		3151767	2		=			
ANR	3151905	Identifier	i		3151767	0					
ANR	3151906	PrimaryExpression	0		3151767	1					
ANR	3151907	Condition	i < numNodes	503:15:10422:10431	3151767	1	True				
ANR	3151908	RelationalExpression	i < numNodes		3151767	0		<			
ANR	3151909	Identifier	i		3151767	0					
ANR	3151910	Identifier	numNodes		3151767	1					
ANR	3151911	PostIncDecOperationExpression	i ++	503:27:10434:10436	3151767	2	True				
ANR	3151912	Identifier	i		3151767	0					
ANR	3151913	IncDec	++		3151767	1					
ANR	3151914	CompoundStatement		22:2:544:587	3151767	3					
ANR	3151915	IdentifierDeclStatement	int labelInt = getLabelInt ( i ) ;	504:2:10444:10473	3151767	0	True				
ANR	3151916	IdentifierDecl	labelInt = getLabelInt ( i )		3151767	0					
ANR	3151917	IdentifierDeclType	int		3151767	0					
ANR	3151918	Identifier	labelInt		3151767	1					
ANR	3151919	AssignmentExpression	labelInt = getLabelInt ( i )		3151767	2		=			
ANR	3151920	Identifier	labelInt		3151767	0					
ANR	3151921	CallExpression	getLabelInt ( i )		3151767	1					
ANR	3151922	Callee	getLabelInt		3151767	0					
ANR	3151923	Identifier	getLabelInt		3151767	0					
ANR	3151924	ArgumentList	i		3151767	1					
ANR	3151925	Argument	i		3151767	0					
ANR	3151926	Identifier	i		3151767	0					
ANR	3151927	IdentifierDeclStatement	const char * labelString = getLabelString ( i ) ;	505:2:10477:10520	3151767	1	True				
ANR	3151928	IdentifierDecl	* labelString = getLabelString ( i )		3151767	0					
ANR	3151929	IdentifierDeclType	const char *		3151767	0					
ANR	3151930	Identifier	labelString		3151767	1					
ANR	3151931	AssignmentExpression	* labelString = getLabelString ( i )		3151767	2		=			
ANR	3151932	Identifier	labelString		3151767	0					
ANR	3151933	CallExpression	getLabelString ( i )		3151767	1					
ANR	3151934	Callee	getLabelString		3151767	0					
ANR	3151935	Identifier	getLabelString		3151767	0					
ANR	3151936	ArgumentList	i		3151767	1					
ANR	3151937	Argument	i		3151767	0					
ANR	3151938	Identifier	i		3151767	0					
ANR	3151939	IfStatement	if ( NULL != labelString )		3151767	2					
ANR	3151940	Condition	NULL != labelString	506:6:10528:10544	3151767	0	True				
ANR	3151941	EqualityExpression	NULL != labelString		3151767	0		!=			
ANR	3151942	Identifier	NULL		3151767	0					
ANR	3151943	Identifier	labelString		3151767	1					
ANR	3151944	CompoundStatement		23:26:615:615	3151767	1					
ANR	3151945	ExpressionStatement	"fprintf ( stream , ""%d [label=\\""%d\\\\n%s\\""];\\n"" , i , i , labelString )"	507:3:10553:10618	3151767	0	True				
ANR	3151946	CallExpression	"fprintf ( stream , ""%d [label=\\""%d\\\\n%s\\""];\\n"" , i , i , labelString )"		3151767	0					
ANR	3151947	Callee	fprintf		3151767	0					
ANR	3151948	Identifier	fprintf		3151767	0					
ANR	3151949	ArgumentList	stream		3151767	1					
ANR	3151950	Argument	stream		3151767	0					
ANR	3151951	Identifier	stream		3151767	0					
ANR	3151952	Argument	"""%d [label=\\""%d\\\\n%s\\""];\\n"""		3151767	1					
ANR	3151953	PrimaryExpression	"""%d [label=\\""%d\\\\n%s\\""];\\n"""		3151767	0					
ANR	3151954	Argument	i		3151767	2					
ANR	3151955	Identifier	i		3151767	0					
ANR	3151956	Argument	i		3151767	3					
ANR	3151957	Identifier	i		3151767	0					
ANR	3151958	Argument	labelString		3151767	4					
ANR	3151959	Identifier	labelString		3151767	0					
ANR	3151960	ElseStatement	else		3151767	0					
ANR	3151961	IfStatement	if ( - 1 != labelInt )		3151767	0					
ANR	3151962	Condition	- 1 != labelInt	509:6:10636:10647	3151767	0	True				
ANR	3151963	EqualityExpression	- 1 != labelInt		3151767	0		!=			
ANR	3151964	UnaryOperationExpression	- 1		3151767	0					
ANR	3151965	UnaryOperator	-		3151767	0					
ANR	3151966	PrimaryExpression	1		3151767	1					
ANR	3151967	Identifier	labelInt		3151767	1					
ANR	3151968	CompoundStatement		26:21:718:718	3151767	1					
ANR	3151969	ExpressionStatement	"fprintf ( stream , ""%d [label=\\""%d\\""];\\n"" , i , labelInt )"	510:3:10656:10710	3151767	0	True				
ANR	3151970	CallExpression	"fprintf ( stream , ""%d [label=\\""%d\\""];\\n"" , i , labelInt )"		3151767	0					
ANR	3151971	Callee	fprintf		3151767	0					
ANR	3151972	Identifier	fprintf		3151767	0					
ANR	3151973	ArgumentList	stream		3151767	1					
ANR	3151974	Argument	stream		3151767	0					
ANR	3151975	Identifier	stream		3151767	0					
ANR	3151976	Argument	"""%d [label=\\""%d\\""];\\n"""		3151767	1					
ANR	3151977	PrimaryExpression	"""%d [label=\\""%d\\""];\\n"""		3151767	0					
ANR	3151978	Argument	i		3151767	2					
ANR	3151979	Identifier	i		3151767	0					
ANR	3151980	Argument	labelInt		3151767	3					
ANR	3151981	Identifier	labelInt		3151767	0					
ANR	3151982	ExpressionStatement		511:3:10715:10715	3151767	3	True				
ANR	3151983	ExpressionStatement		513:2:10776:10776	3151767	8	True				
ANR	3151984	ExpressionStatement	"fprintf ( stream , ""}\\n"" )"	516:1:10781:10804	3151767	9	True				
ANR	3151985	CallExpression	"fprintf ( stream , ""}\\n"" )"		3151767	0					
ANR	3151986	Callee	fprintf		3151767	0					
ANR	3151987	Identifier	fprintf		3151767	0					
ANR	3151988	ArgumentList	stream		3151767	1					
ANR	3151989	Argument	stream		3151767	0					
ANR	3151990	Identifier	stream		3151767	0					
ANR	3151991	Argument	"""}\\n"""		3151767	1					
ANR	3151992	PrimaryExpression	"""}\\n"""		3151767	0					
ANR	3151993	ReturnType	void		3151767	1					
ANR	3151994	Identifier	Graph :: saveAsDot		3151767	2					
ANR	3151995	ParameterList	FILE * stream		3151767	3					
ANR	3151996	Parameter	FILE * stream	483:22:9912:9923	3151767	0	True				
ANR	3151997	ParameterType	FILE *		3151767	0					
ANR	3151998	Identifier	stream		3151767	1					
ANR	3151999	CFGEntryNode	ENTRY		3151767		True				
ANR	3152000	CFGExitNode	EXIT		3151767		True				
ANR	3152001	CFGExceptionNode	EXCEPTION		3151767		True				
ANR	3152002	Symbol	NULL		3151767						
ANR	3152003	Symbol	getLabelInt		3151767						
ANR	3152004	Symbol	getLabelString		3151767						
ANR	3152005	Symbol	i		3151767						
ANR	3152006	Symbol	j		3151767						
ANR	3152007	Symbol	labelInt		3151767						
ANR	3152008	Symbol	getNumArcs		3151767						
ANR	3152009	Symbol	numNodes		3151767						
ANR	3152010	Symbol	getNumNodes		3151767						
ANR	3152011	Symbol	numArcs		3151767						
ANR	3152012	Symbol	getArc		3151767						
ANR	3152013	Symbol	stream		3151767						
ANR	3152014	Symbol	labelString		3151767						
ANR	3152015	Function	Graph :: printLabels	535:0:11098:11355							
ANR	3152016	FunctionDef	"Graph :: printLabels (FILE * stream , int node)"		3152015	0					
ANR	3152017	CompoundStatement		536:0:11152:11355	3152015	0					
ANR	3152018	ExpressionStatement	"fprintf ( stream , ""il %d, "" , nodeToLabelInt . getElem ( node ) )"	537:1:11155:11211	3152015	0	True				
ANR	3152019	CallExpression	"fprintf ( stream , ""il %d, "" , nodeToLabelInt . getElem ( node ) )"		3152015	0					
ANR	3152020	Callee	fprintf		3152015	0					
ANR	3152021	Identifier	fprintf		3152015	0					
ANR	3152022	ArgumentList	stream		3152015	1					
ANR	3152023	Argument	stream		3152015	0					
ANR	3152024	Identifier	stream		3152015	0					
ANR	3152025	Argument	"""il %d, """		3152015	1					
ANR	3152026	PrimaryExpression	"""il %d, """		3152015	0					
ANR	3152027	Argument	nodeToLabelInt . getElem ( node )		3152015	2					
ANR	3152028	CallExpression	nodeToLabelInt . getElem ( node )		3152015	0					
ANR	3152029	Callee	nodeToLabelInt . getElem		3152015	0					
ANR	3152030	MemberAccess	nodeToLabelInt . getElem		3152015	0					
ANR	3152031	Identifier	nodeToLabelInt		3152015	0					
ANR	3152032	Identifier	getElem		3152015	1					
ANR	3152033	ArgumentList	node		3152015	1					
ANR	3152034	Argument	node		3152015	0					
ANR	3152035	Identifier	node		3152015	0					
ANR	3152036	IfStatement	if ( NULL == nodeToLabelString . getElem ( node ) )		3152015	1					
ANR	3152037	Condition	NULL == nodeToLabelString . getElem ( node )	538:5:11218:11254	3152015	0	True				
ANR	3152038	EqualityExpression	NULL == nodeToLabelString . getElem ( node )		3152015	0		==			
ANR	3152039	Identifier	NULL		3152015	0					
ANR	3152040	CallExpression	nodeToLabelString . getElem ( node )		3152015	1					
ANR	3152041	Callee	nodeToLabelString . getElem		3152015	0					
ANR	3152042	MemberAccess	nodeToLabelString . getElem		3152015	0					
ANR	3152043	Identifier	nodeToLabelString		3152015	0					
ANR	3152044	Identifier	getElem		3152015	1					
ANR	3152045	ArgumentList	node		3152015	1					
ANR	3152046	Argument	node		3152015	0					
ANR	3152047	Identifier	node		3152015	0					
ANR	3152048	ExpressionStatement	"fprintf ( stream , ""sl NULL "" )"	539:2:11260:11286	3152015	1	True				
ANR	3152049	CallExpression	"fprintf ( stream , ""sl NULL "" )"		3152015	0					
ANR	3152050	Callee	fprintf		3152015	0					
ANR	3152051	Identifier	fprintf		3152015	0					
ANR	3152052	ArgumentList	stream		3152015	1					
ANR	3152053	Argument	stream		3152015	0					
ANR	3152054	Identifier	stream		3152015	0					
ANR	3152055	Argument	"""sl NULL """		3152015	1					
ANR	3152056	PrimaryExpression	"""sl NULL """		3152015	0					
ANR	3152057	ElseStatement	else		3152015	0					
ANR	3152058	ExpressionStatement	"fprintf ( stream , ""sl %s "" , nodeToLabelString . getElem ( node ) )"	541:2:11296:11353	3152015	0	True				
ANR	3152059	CallExpression	"fprintf ( stream , ""sl %s "" , nodeToLabelString . getElem ( node ) )"		3152015	0					
ANR	3152060	Callee	fprintf		3152015	0					
ANR	3152061	Identifier	fprintf		3152015	0					
ANR	3152062	ArgumentList	stream		3152015	1					
ANR	3152063	Argument	stream		3152015	0					
ANR	3152064	Identifier	stream		3152015	0					
ANR	3152065	Argument	"""sl %s """		3152015	1					
ANR	3152066	PrimaryExpression	"""sl %s """		3152015	0					
ANR	3152067	Argument	nodeToLabelString . getElem ( node )		3152015	2					
ANR	3152068	CallExpression	nodeToLabelString . getElem ( node )		3152015	0					
ANR	3152069	Callee	nodeToLabelString . getElem		3152015	0					
ANR	3152070	MemberAccess	nodeToLabelString . getElem		3152015	0					
ANR	3152071	Identifier	nodeToLabelString		3152015	0					
ANR	3152072	Identifier	getElem		3152015	1					
ANR	3152073	ArgumentList	node		3152015	1					
ANR	3152074	Argument	node		3152015	0					
ANR	3152075	Identifier	node		3152015	0					
ANR	3152076	ReturnType	void		3152015	1					
ANR	3152077	Identifier	Graph :: printLabels		3152015	2					
ANR	3152078	ParameterList	"FILE * stream , int node"		3152015	3					
ANR	3152079	Parameter	FILE * stream	535:24:11122:11133	3152015	0	True				
ANR	3152080	ParameterType	FILE *		3152015	0					
ANR	3152081	Identifier	stream		3152015	1					
ANR	3152082	Parameter	int node	535:38:11136:11143	3152015	1	True				
ANR	3152083	ParameterType	int		3152015	0					
ANR	3152084	Identifier	node		3152015	1					
ANR	3152085	CFGEntryNode	ENTRY		3152015		True				
ANR	3152086	CFGExitNode	EXIT		3152015		True				
ANR	3152087	Symbol	node		3152015						
ANR	3152088	Symbol	nodeToLabelString . getElem		3152015						
ANR	3152089	Symbol	NULL		3152015						
ANR	3152090	Symbol	stream		3152015						
ANR	3152091	Symbol	nodeToLabelInt		3152015						
ANR	3152092	Symbol	nodeToLabelString		3152015						
ANR	3152093	Symbol	nodeToLabelInt . getElem		3152015						
ANR	3152094	Function	Graph :: saveAsText	560:0:11642:12118							
ANR	3152095	FunctionDef	Graph :: saveAsText (FILE * stream)		3152094	0					
ANR	3152096	CompoundStatement		561:0:11685:12118	3152094	0					
ANR	3152097	IfStatement	if ( NULL == stream )		3152094	0					
ANR	3152098	Condition	NULL == stream	562:5:11692:11703	3152094	0	True				
ANR	3152099	EqualityExpression	NULL == stream		3152094	0		==			
ANR	3152100	Identifier	NULL		3152094	0					
ANR	3152101	Identifier	stream		3152094	1					
ANR	3152102	ThrowStatement	"throw ""Graph::saveAsText, stream is NULL"" ;"	563:2:11709:11750	3152094	1	True				
ANR	3152103	PrimaryExpression	"""Graph::saveAsText, stream is NULL"""		3152094	0					
ANR	3152104	IfStatement	if ( 0 == arcTable . getNumRow ( ) )		3152094	1					
ANR	3152105	Condition	0 == arcTable . getNumRow ( )	565:5:11758:11780	3152094	0	True				
ANR	3152106	EqualityExpression	0 == arcTable . getNumRow ( )		3152094	0		==			
ANR	3152107	PrimaryExpression	0		3152094	0					
ANR	3152108	CallExpression	arcTable . getNumRow ( )		3152094	1					
ANR	3152109	Callee	arcTable . getNumRow		3152094	0					
ANR	3152110	MemberAccess	arcTable . getNumRow		3152094	0					
ANR	3152111	Identifier	arcTable		3152094	0					
ANR	3152112	Identifier	getNumRow		3152094	1					
ANR	3152113	ArgumentList			3152094	1					
ANR	3152114	CompoundStatement		5:31:98:98	3152094	1					
ANR	3152115	ExpressionStatement	"fprintf ( stream , ""empty graph\\n"" )"	566:2:11788:11820	3152094	0	True				
ANR	3152116	CallExpression	"fprintf ( stream , ""empty graph\\n"" )"		3152094	0					
ANR	3152117	Callee	fprintf		3152094	0					
ANR	3152118	Identifier	fprintf		3152094	0					
ANR	3152119	ArgumentList	stream		3152094	1					
ANR	3152120	Argument	stream		3152094	0					
ANR	3152121	Identifier	stream		3152094	0					
ANR	3152122	Argument	"""empty graph\\n"""		3152094	1					
ANR	3152123	PrimaryExpression	"""empty graph\\n"""		3152094	0					
ANR	3152124	ReturnStatement	return ;	567:2:11824:11830	3152094	1	True				
ANR	3152125	ExpressionStatement		568:2:11834:11834	3152094	2	True				
ANR	3152126	ForStatement	for ( int node = 0 ; node < arcTable . getNumRow ( ) ; node ++ )		3152094	3					
ANR	3152127	ForInit	int node = 0 ;	569:6:11842:11852	3152094	0	True				
ANR	3152128	IdentifierDeclStatement	int node = 0 ;		3152094	0					
ANR	3152129	IdentifierDecl	node = 0		3152094	0					
ANR	3152130	IdentifierDeclType	int		3152094	0					
ANR	3152131	Identifier	node		3152094	1					
ANR	3152132	AssignmentExpression	node = 0		3152094	2		=			
ANR	3152133	Identifier	node		3152094	0					
ANR	3152134	PrimaryExpression	0		3152094	1					
ANR	3152135	Condition	node < arcTable . getNumRow ( )	569:18:11854:11878	3152094	1	True				
ANR	3152136	RelationalExpression	node < arcTable . getNumRow ( )		3152094	0		<			
ANR	3152137	Identifier	node		3152094	0					
ANR	3152138	CallExpression	arcTable . getNumRow ( )		3152094	1					
ANR	3152139	Callee	arcTable . getNumRow		3152094	0					
ANR	3152140	MemberAccess	arcTable . getNumRow		3152094	0					
ANR	3152141	Identifier	arcTable		3152094	0					
ANR	3152142	Identifier	getNumRow		3152094	1					
ANR	3152143	ArgumentList			3152094	1					
ANR	3152144	PostIncDecOperationExpression	node ++	569:45:11881:11886	3152094	2	True				
ANR	3152145	Identifier	node		3152094	0					
ANR	3152146	IncDec	++		3152094	1					
ANR	3152147	CompoundStatement		9:54:204:204	3152094	3					
ANR	3152148	ExpressionStatement	"fprintf ( stream , ""node %d, "" , node )"	570:2:11894:11928	3152094	0	True				
ANR	3152149	CallExpression	"fprintf ( stream , ""node %d, "" , node )"		3152094	0					
ANR	3152150	Callee	fprintf		3152094	0					
ANR	3152151	Identifier	fprintf		3152094	0					
ANR	3152152	ArgumentList	stream		3152094	1					
ANR	3152153	Argument	stream		3152094	0					
ANR	3152154	Identifier	stream		3152094	0					
ANR	3152155	Argument	"""node %d, """		3152094	1					
ANR	3152156	PrimaryExpression	"""node %d, """		3152094	0					
ANR	3152157	Argument	node		3152094	2					
ANR	3152158	Identifier	node		3152094	0					
ANR	3152159	ExpressionStatement	"printLabels ( stream , node )"	571:2:11932:11956	3152094	1	True				
ANR	3152160	CallExpression	"printLabels ( stream , node )"		3152094	0					
ANR	3152161	Callee	printLabels		3152094	0					
ANR	3152162	Identifier	printLabels		3152094	0					
ANR	3152163	ArgumentList	stream		3152094	1					
ANR	3152164	Argument	stream		3152094	0					
ANR	3152165	Identifier	stream		3152094	0					
ANR	3152166	Argument	node		3152094	1					
ANR	3152167	Identifier	node		3152094	0					
ANR	3152168	ExpressionStatement	"fprintf ( stream , "" --> "" )"	572:2:11960:11983	3152094	2	True				
ANR	3152169	CallExpression	"fprintf ( stream , "" --> "" )"		3152094	0					
ANR	3152170	Callee	fprintf		3152094	0					
ANR	3152171	Identifier	fprintf		3152094	0					
ANR	3152172	ArgumentList	stream		3152094	1					
ANR	3152173	Argument	stream		3152094	0					
ANR	3152174	Identifier	stream		3152094	0					
ANR	3152175	Argument	""" --> """		3152094	1					
ANR	3152176	PrimaryExpression	""" --> """		3152094	0					
ANR	3152177	ForStatement	for ( int i = 0 ; i < arcTable . getNumElem ( node ) ; i ++ )		3152094	3					
ANR	3152178	ForInit	int i = 0 ;	573:7:11992:11999	3152094	0	True				
ANR	3152179	IdentifierDeclStatement	int i = 0 ;		3152094	0					
ANR	3152180	IdentifierDecl	i = 0		3152094	0					
ANR	3152181	IdentifierDeclType	int		3152094	0					
ANR	3152182	Identifier	i		3152094	1					
ANR	3152183	AssignmentExpression	i = 0		3152094	2		=			
ANR	3152184	Identifier	i		3152094	0					
ANR	3152185	PrimaryExpression	0		3152094	1					
ANR	3152186	Condition	i < arcTable . getNumElem ( node )	573:16:12001:12027	3152094	1	True				
ANR	3152187	RelationalExpression	i < arcTable . getNumElem ( node )		3152094	0		<			
ANR	3152188	Identifier	i		3152094	0					
ANR	3152189	CallExpression	arcTable . getNumElem ( node )		3152094	1					
ANR	3152190	Callee	arcTable . getNumElem		3152094	0					
ANR	3152191	MemberAccess	arcTable . getNumElem		3152094	0					
ANR	3152192	Identifier	arcTable		3152094	0					
ANR	3152193	Identifier	getNumElem		3152094	1					
ANR	3152194	ArgumentList	node		3152094	1					
ANR	3152195	Argument	node		3152094	0					
ANR	3152196	Identifier	node		3152094	0					
ANR	3152197	PostIncDecOperationExpression	i ++	573:45:12030:12032	3152094	2	True				
ANR	3152198	Identifier	i		3152094	0					
ANR	3152199	IncDec	++		3152094	1					
ANR	3152200	ExpressionStatement	"fprintf ( stream , ""%d, "" , arcTable . getElem ( node , i ) )"	574:3:12039:12088	3152094	3	True				
ANR	3152201	CallExpression	"fprintf ( stream , ""%d, "" , arcTable . getElem ( node , i ) )"		3152094	0					
ANR	3152202	Callee	fprintf		3152094	0					
ANR	3152203	Identifier	fprintf		3152094	0					
ANR	3152204	ArgumentList	stream		3152094	1					
ANR	3152205	Argument	stream		3152094	0					
ANR	3152206	Identifier	stream		3152094	0					
ANR	3152207	Argument	"""%d, """		3152094	1					
ANR	3152208	PrimaryExpression	"""%d, """		3152094	0					
ANR	3152209	Argument	"arcTable . getElem ( node , i )"		3152094	2					
ANR	3152210	CallExpression	"arcTable . getElem ( node , i )"		3152094	0					
ANR	3152211	Callee	arcTable . getElem		3152094	0					
ANR	3152212	MemberAccess	arcTable . getElem		3152094	0					
ANR	3152213	Identifier	arcTable		3152094	0					
ANR	3152214	Identifier	getElem		3152094	1					
ANR	3152215	ArgumentList	node		3152094	1					
ANR	3152216	Argument	node		3152094	0					
ANR	3152217	Identifier	node		3152094	0					
ANR	3152218	Argument	i		3152094	1					
ANR	3152219	Identifier	i		3152094	0					
ANR	3152220	ExpressionStatement	"fprintf ( stream , ""\\n"" )"	575:2:12092:12112	3152094	4	True				
ANR	3152221	CallExpression	"fprintf ( stream , ""\\n"" )"		3152094	0					
ANR	3152222	Callee	fprintf		3152094	0					
ANR	3152223	Identifier	fprintf		3152094	0					
ANR	3152224	ArgumentList	stream		3152094	1					
ANR	3152225	Argument	stream		3152094	0					
ANR	3152226	Identifier	stream		3152094	0					
ANR	3152227	Argument	"""\\n"""		3152094	1					
ANR	3152228	PrimaryExpression	"""\\n"""		3152094	0					
ANR	3152229	ExpressionStatement		576:2:12116:12116	3152094	4	True				
ANR	3152230	ReturnType	void		3152094	1					
ANR	3152231	Identifier	Graph :: saveAsText		3152094	2					
ANR	3152232	ParameterList	FILE * stream		3152094	3					
ANR	3152233	Parameter	FILE * stream	560:23:11665:11676	3152094	0	True				
ANR	3152234	ParameterType	FILE *		3152094	0					
ANR	3152235	Identifier	stream		3152094	1					
ANR	3152236	CFGEntryNode	ENTRY		3152094		True				
ANR	3152237	CFGExitNode	EXIT		3152094		True				
ANR	3152238	CFGExceptionNode	EXCEPTION		3152094		True				
ANR	3152239	Symbol	node		3152094						
ANR	3152240	Symbol	NULL		3152094						
ANR	3152241	Symbol	stream		3152094						
ANR	3152242	Symbol	arcTable . getNumElem		3152094						
ANR	3152243	Symbol	arcTable		3152094						
ANR	3152244	Symbol	i		3152094						
ANR	3152245	Symbol	arcTable . getNumRow		3152094						
ANR	3152246	Symbol	arcTable . getElem		3152094						
ANR	3152247	Function	Graph :: printAsDot	593:0:12292:12349							
ANR	3152248	FunctionDef	Graph :: printAsDot ()		3152247	0					
ANR	3152249	CompoundStatement		594:0:12327:12349	3152247	0					
ANR	3152250	ExpressionStatement	saveAsDot ( stdout )	595:1:12330:12347	3152247	0	True				
ANR	3152251	CallExpression	saveAsDot ( stdout )		3152247	0					
ANR	3152252	Callee	saveAsDot		3152247	0					
ANR	3152253	Identifier	saveAsDot		3152247	0					
ANR	3152254	ArgumentList	stdout		3152247	1					
ANR	3152255	Argument	stdout		3152247	0					
ANR	3152256	Identifier	stdout		3152247	0					
ANR	3152257	ReturnType	void		3152247	1					
ANR	3152258	Identifier	Graph :: printAsDot		3152247	2					
ANR	3152259	ParameterList			3152247	3					
ANR	3152260	CFGEntryNode	ENTRY		3152247		True				
ANR	3152261	CFGExitNode	EXIT		3152247		True				
ANR	3152262	Symbol	stdout		3152247						
ANR	3152263	Function	Graph :: printAsText	612:0:12528:12587							
ANR	3152264	FunctionDef	Graph :: printAsText ()		3152263	0					
ANR	3152265	CompoundStatement		613:0:12564:12587	3152263	0					
ANR	3152266	ExpressionStatement	saveAsText ( stdout )	614:1:12567:12585	3152263	0	True				
ANR	3152267	CallExpression	saveAsText ( stdout )		3152263	0					
ANR	3152268	Callee	saveAsText		3152263	0					
ANR	3152269	Identifier	saveAsText		3152263	0					
ANR	3152270	ArgumentList	stdout		3152263	1					
ANR	3152271	Argument	stdout		3152263	0					
ANR	3152272	Identifier	stdout		3152263	0					
ANR	3152273	ReturnType	void		3152263	1					
ANR	3152274	Identifier	Graph :: printAsText		3152263	2					
ANR	3152275	ParameterList			3152263	3					
ANR	3152276	CFGEntryNode	ENTRY		3152263		True				
ANR	3152277	CFGExitNode	EXIT		3152263		True				
ANR	3152278	Symbol	stdout		3152263						
ANR	3152279	Function	Graph :: saveAsDot	632:0:12855:13126							
ANR	3152280	FunctionDef	Graph :: saveAsDot (const char * fileName)		3152279	0					
ANR	3152281	CompoundStatement		633:0:12905:13126	3152279	0					
ANR	3152282	IfStatement	if ( NULL == fileName )		3152279	0					
ANR	3152283	Condition	NULL == fileName	634:5:12912:12925	3152279	0	True				
ANR	3152284	EqualityExpression	NULL == fileName		3152279	0		==			
ANR	3152285	Identifier	NULL		3152279	0					
ANR	3152286	Identifier	fileName		3152279	1					
ANR	3152287	ThrowStatement	"throw ""Graph::saveAsDot, fileName is NULL"" ;"	635:2:12931:12973	3152279	1	True				
ANR	3152288	PrimaryExpression	"""Graph::saveAsDot, fileName is NULL"""		3152279	0					
ANR	3152289	IdentifierDeclStatement	FILE * stream ;	637:1:12977:12989	3152279	1	True				
ANR	3152290	IdentifierDecl	* stream		3152279	0					
ANR	3152291	IdentifierDeclType	FILE *		3152279	0					
ANR	3152292	Identifier	stream		3152279	1					
ANR	3152293	ExpressionStatement	"stream = fopen ( fileName , ""wt"" )"	638:1:12992:13021	3152279	2	True				
ANR	3152294	AssignmentExpression	"stream = fopen ( fileName , ""wt"" )"		3152279	0		=			
ANR	3152295	Identifier	stream		3152279	0					
ANR	3152296	CallExpression	"fopen ( fileName , ""wt"" )"		3152279	1					
ANR	3152297	Callee	fopen		3152279	0					
ANR	3152298	Identifier	fopen		3152279	0					
ANR	3152299	ArgumentList	fileName		3152279	1					
ANR	3152300	Argument	fileName		3152279	0					
ANR	3152301	Identifier	fileName		3152279	0					
ANR	3152302	Argument	"""wt"""		3152279	1					
ANR	3152303	PrimaryExpression	"""wt"""		3152279	0					
ANR	3152304	IfStatement	if ( NULL == stream )		3152279	3					
ANR	3152305	Condition	NULL == stream	639:5:13028:13039	3152279	0	True				
ANR	3152306	EqualityExpression	NULL == stream		3152279	0		==			
ANR	3152307	Identifier	NULL		3152279	0					
ANR	3152308	Identifier	stream		3152279	1					
ANR	3152309	ThrowStatement	"throw ""Graph::saveAsDot, stream is NULL"" ;"	640:2:13045:13085	3152279	1	True				
ANR	3152310	PrimaryExpression	"""Graph::saveAsDot, stream is NULL"""		3152279	0					
ANR	3152311	ExpressionStatement	saveAsDot ( stream )	642:1:13089:13106	3152279	4	True				
ANR	3152312	CallExpression	saveAsDot ( stream )		3152279	0					
ANR	3152313	Callee	saveAsDot		3152279	0					
ANR	3152314	Identifier	saveAsDot		3152279	0					
ANR	3152315	ArgumentList	stream		3152279	1					
ANR	3152316	Argument	stream		3152279	0					
ANR	3152317	Identifier	stream		3152279	0					
ANR	3152318	ExpressionStatement	fclose ( stream )	644:1:13110:13124	3152279	5	True				
ANR	3152319	CallExpression	fclose ( stream )		3152279	0					
ANR	3152320	Callee	fclose		3152279	0					
ANR	3152321	Identifier	fclose		3152279	0					
ANR	3152322	ArgumentList	stream		3152279	1					
ANR	3152323	Argument	stream		3152279	0					
ANR	3152324	Identifier	stream		3152279	0					
ANR	3152325	ReturnType	void		3152279	1					
ANR	3152326	Identifier	Graph :: saveAsDot		3152279	2					
ANR	3152327	ParameterList	const char * fileName		3152279	3					
ANR	3152328	Parameter	const char * fileName	632:22:12877:12896	3152279	0	True				
ANR	3152329	ParameterType	const char *		3152279	0					
ANR	3152330	Identifier	fileName		3152279	1					
ANR	3152331	CFGEntryNode	ENTRY		3152279		True				
ANR	3152332	CFGExitNode	EXIT		3152279		True				
ANR	3152333	CFGExceptionNode	EXCEPTION		3152279		True				
ANR	3152334	CFGExceptionNode	EXCEPTION		3152279		True				
ANR	3152335	CFGExceptionNode	EXCEPTION		3152279		True				
ANR	3152336	Symbol	fopen		3152279						
ANR	3152337	Symbol	fileName		3152279						
ANR	3152338	Symbol	NULL		3152279						
ANR	3152339	Symbol	stream		3152279						
ANR	3152340	Function	Graph :: saveAsText	662:0:13394:13669							
ANR	3152341	FunctionDef	Graph :: saveAsText (const char * fileName)		3152340	0					
ANR	3152342	CompoundStatement		663:0:13445:13669	3152340	0					
ANR	3152343	IfStatement	if ( NULL == fileName )		3152340	0					
ANR	3152344	Condition	NULL == fileName	664:5:13452:13465	3152340	0	True				
ANR	3152345	EqualityExpression	NULL == fileName		3152340	0		==			
ANR	3152346	Identifier	NULL		3152340	0					
ANR	3152347	Identifier	fileName		3152340	1					
ANR	3152348	ThrowStatement	"throw ""Graph::saveAsText, fileName is NULL"" ;"	665:2:13471:13514	3152340	1	True				
ANR	3152349	PrimaryExpression	"""Graph::saveAsText, fileName is NULL"""		3152340	0					
ANR	3152350	IdentifierDeclStatement	FILE * stream ;	667:1:13518:13530	3152340	1	True				
ANR	3152351	IdentifierDecl	* stream		3152340	0					
ANR	3152352	IdentifierDeclType	FILE *		3152340	0					
ANR	3152353	Identifier	stream		3152340	1					
ANR	3152354	ExpressionStatement	"stream = fopen ( fileName , ""wt"" )"	668:1:13533:13562	3152340	2	True				
ANR	3152355	AssignmentExpression	"stream = fopen ( fileName , ""wt"" )"		3152340	0		=			
ANR	3152356	Identifier	stream		3152340	0					
ANR	3152357	CallExpression	"fopen ( fileName , ""wt"" )"		3152340	1					
ANR	3152358	Callee	fopen		3152340	0					
ANR	3152359	Identifier	fopen		3152340	0					
ANR	3152360	ArgumentList	fileName		3152340	1					
ANR	3152361	Argument	fileName		3152340	0					
ANR	3152362	Identifier	fileName		3152340	0					
ANR	3152363	Argument	"""wt"""		3152340	1					
ANR	3152364	PrimaryExpression	"""wt"""		3152340	0					
ANR	3152365	IfStatement	if ( NULL == stream )		3152340	3					
ANR	3152366	Condition	NULL == stream	669:5:13569:13580	3152340	0	True				
ANR	3152367	EqualityExpression	NULL == stream		3152340	0		==			
ANR	3152368	Identifier	NULL		3152340	0					
ANR	3152369	Identifier	stream		3152340	1					
ANR	3152370	ThrowStatement	"throw ""Graph::saveAsText, stream is NULL"" ;"	670:2:13586:13627	3152340	1	True				
ANR	3152371	PrimaryExpression	"""Graph::saveAsText, stream is NULL"""		3152340	0					
ANR	3152372	ExpressionStatement	saveAsText ( stream )	672:1:13631:13649	3152340	4	True				
ANR	3152373	CallExpression	saveAsText ( stream )		3152340	0					
ANR	3152374	Callee	saveAsText		3152340	0					
ANR	3152375	Identifier	saveAsText		3152340	0					
ANR	3152376	ArgumentList	stream		3152340	1					
ANR	3152377	Argument	stream		3152340	0					
ANR	3152378	Identifier	stream		3152340	0					
ANR	3152379	ExpressionStatement	fclose ( stream )	674:1:13653:13667	3152340	5	True				
ANR	3152380	CallExpression	fclose ( stream )		3152340	0					
ANR	3152381	Callee	fclose		3152340	0					
ANR	3152382	Identifier	fclose		3152340	0					
ANR	3152383	ArgumentList	stream		3152340	1					
ANR	3152384	Argument	stream		3152340	0					
ANR	3152385	Identifier	stream		3152340	0					
ANR	3152386	ReturnType	void		3152340	1					
ANR	3152387	Identifier	Graph :: saveAsText		3152340	2					
ANR	3152388	ParameterList	const char * fileName		3152340	3					
ANR	3152389	Parameter	const char * fileName	662:23:13417:13436	3152340	0	True				
ANR	3152390	ParameterType	const char *		3152340	0					
ANR	3152391	Identifier	fileName		3152340	1					
ANR	3152392	CFGEntryNode	ENTRY		3152340		True				
ANR	3152393	CFGExitNode	EXIT		3152340		True				
ANR	3152394	CFGExceptionNode	EXCEPTION		3152340		True				
ANR	3152395	CFGExceptionNode	EXCEPTION		3152340		True				
ANR	3152396	CFGExceptionNode	EXCEPTION		3152340		True				
ANR	3152397	Symbol	fopen		3152340						
ANR	3152398	Symbol	fileName		3152340						
ANR	3152399	Symbol	NULL		3152340						
ANR	3152400	Symbol	stream		3152340						
ANR	3152401	Function	Graph :: reverseArcs	691:0:13832:14508							
ANR	3152402	FunctionDef	Graph :: reverseArcs ()		3152401	0					
ANR	3152403	CompoundStatement		692:0:13862:14508	3152401	0					
ANR	3152404	IdentifierDeclStatement	"int i , j ;"	693:1:13865:13872	3152401	0	True				
ANR	3152405	IdentifierDecl	i		3152401	0					
ANR	3152406	IdentifierDeclType	int		3152401	0					
ANR	3152407	Identifier	i		3152401	1					
ANR	3152408	IdentifierDecl	j		3152401	1					
ANR	3152409	IdentifierDeclType	int		3152401	0					
ANR	3152410	Identifier	j		3152401	1					
ANR	3152411	IdentifierDeclStatement	Resizable2DArray < int > revArcTable ;	696:1:13923:13956	3152401	1	True				
ANR	3152412	IdentifierDecl	revArcTable		3152401	0					
ANR	3152413	IdentifierDeclType	Resizable2DArray < int >		3152401	0					
ANR	3152414	Identifier	revArcTable		3152401	1					
ANR	3152415	IdentifierDeclStatement	int numNodes = getNumNodes ( ) ;	697:1:13959:13985	3152401	2	True				
ANR	3152416	IdentifierDecl	numNodes = getNumNodes ( )		3152401	0					
ANR	3152417	IdentifierDeclType	int		3152401	0					
ANR	3152418	Identifier	numNodes		3152401	1					
ANR	3152419	AssignmentExpression	numNodes = getNumNodes ( )		3152401	2		=			
ANR	3152420	Identifier	numNodes		3152401	0					
ANR	3152421	CallExpression	getNumNodes ( )		3152401	1					
ANR	3152422	Callee	getNumNodes		3152401	0					
ANR	3152423	Identifier	getNumNodes		3152401	0					
ANR	3152424	ArgumentList			3152401	1					
ANR	3152425	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		3152401	3					
ANR	3152426	ForInit	i = 0 ;	698:6:13993:13996	3152401	0	True				
ANR	3152427	AssignmentExpression	i = 0		3152401	0		=			
ANR	3152428	Identifier	i		3152401	0					
ANR	3152429	PrimaryExpression	0		3152401	1					
ANR	3152430	Condition	i < numNodes	698:11:13998:14007	3152401	1	True				
ANR	3152431	RelationalExpression	i < numNodes		3152401	0		<			
ANR	3152432	Identifier	i		3152401	0					
ANR	3152433	Identifier	numNodes		3152401	1					
ANR	3152434	PostIncDecOperationExpression	i ++	698:23:14010:14012	3152401	2	True				
ANR	3152435	Identifier	i		3152401	0					
ANR	3152436	IncDec	++		3152401	1					
ANR	3152437	ExpressionStatement	revArcTable . appendRow ( )	699:2:14018:14041	3152401	3	True				
ANR	3152438	CallExpression	revArcTable . appendRow ( )		3152401	0					
ANR	3152439	Callee	revArcTable . appendRow		3152401	0					
ANR	3152440	MemberAccess	revArcTable . appendRow		3152401	0					
ANR	3152441	Identifier	revArcTable		3152401	0					
ANR	3152442	Identifier	appendRow		3152401	1					
ANR	3152443	ArgumentList			3152401	1					
ANR	3152444	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		3152401	4					
ANR	3152445	ForInit	i = 0 ;	702:6:14090:14093	3152401	0	True				
ANR	3152446	AssignmentExpression	i = 0		3152401	0		=			
ANR	3152447	Identifier	i		3152401	0					
ANR	3152448	PrimaryExpression	0		3152401	1					
ANR	3152449	Condition	i < numNodes	702:11:14095:14104	3152401	1	True				
ANR	3152450	RelationalExpression	i < numNodes		3152401	0		<			
ANR	3152451	Identifier	i		3152401	0					
ANR	3152452	Identifier	numNodes		3152401	1					
ANR	3152453	PostIncDecOperationExpression	i ++	702:23:14107:14109	3152401	2	True				
ANR	3152454	Identifier	i		3152401	0					
ANR	3152455	IncDec	++		3152401	1					
ANR	3152456	CompoundStatement		12:2:254:281	3152401	3					
ANR	3152457	IdentifierDeclStatement	int numArcs = getNumArcs ( i ) ;	703:2:14117:14144	3152401	0	True				
ANR	3152458	IdentifierDecl	numArcs = getNumArcs ( i )		3152401	0					
ANR	3152459	IdentifierDeclType	int		3152401	0					
ANR	3152460	Identifier	numArcs		3152401	1					
ANR	3152461	AssignmentExpression	numArcs = getNumArcs ( i )		3152401	2		=			
ANR	3152462	Identifier	numArcs		3152401	0					
ANR	3152463	CallExpression	getNumArcs ( i )		3152401	1					
ANR	3152464	Callee	getNumArcs		3152401	0					
ANR	3152465	Identifier	getNumArcs		3152401	0					
ANR	3152466	ArgumentList	i		3152401	1					
ANR	3152467	Argument	i		3152401	0					
ANR	3152468	Identifier	i		3152401	0					
ANR	3152469	ForStatement	for ( j = 0 ; j < numArcs ; j ++ )		3152401	1					
ANR	3152470	ForInit	j = 0 ;	704:7:14153:14156	3152401	0	True				
ANR	3152471	AssignmentExpression	j = 0		3152401	0		=			
ANR	3152472	Identifier	j		3152401	0					
ANR	3152473	PrimaryExpression	0		3152401	1					
ANR	3152474	Condition	j < numArcs	704:12:14158:14166	3152401	1	True				
ANR	3152475	RelationalExpression	j < numArcs		3152401	0		<			
ANR	3152476	Identifier	j		3152401	0					
ANR	3152477	Identifier	numArcs		3152401	1					
ANR	3152478	PostIncDecOperationExpression	j ++	704:23:14169:14171	3152401	2	True				
ANR	3152479	Identifier	j		3152401	0					
ANR	3152480	IncDec	++		3152401	1					
ANR	3152481	CompoundStatement		14:3:317:340	3152401	3					
ANR	3152482	IdentifierDeclStatement	"int child = getArc ( i , j ) ;"	705:3:14180:14203	3152401	0	True				
ANR	3152483	IdentifierDecl	"child = getArc ( i , j )"		3152401	0					
ANR	3152484	IdentifierDeclType	int		3152401	0					
ANR	3152485	Identifier	child		3152401	1					
ANR	3152486	AssignmentExpression	"child = getArc ( i , j )"		3152401	2		=			
ANR	3152487	Identifier	child		3152401	0					
ANR	3152488	CallExpression	"getArc ( i , j )"		3152401	1					
ANR	3152489	Callee	getArc		3152401	0					
ANR	3152490	Identifier	getArc		3152401	0					
ANR	3152491	ArgumentList	i		3152401	1					
ANR	3152492	Argument	i		3152401	0					
ANR	3152493	Identifier	i		3152401	0					
ANR	3152494	Argument	j		3152401	1					
ANR	3152495	Identifier	j		3152401	0					
ANR	3152496	ExpressionStatement	"revArcTable . append ( child , i )"	706:3:14208:14235	3152401	1	True				
ANR	3152497	CallExpression	"revArcTable . append ( child , i )"		3152401	0					
ANR	3152498	Callee	revArcTable . append		3152401	0					
ANR	3152499	MemberAccess	revArcTable . append		3152401	0					
ANR	3152500	Identifier	revArcTable		3152401	0					
ANR	3152501	Identifier	append		3152401	1					
ANR	3152502	ArgumentList	child		3152401	1					
ANR	3152503	Argument	child		3152401	0					
ANR	3152504	Identifier	child		3152401	0					
ANR	3152505	Argument	i		3152401	1					
ANR	3152506	Identifier	i		3152401	0					
ANR	3152507	ExpressionStatement		707:3:14240:14240	3152401	2	True				
ANR	3152508	ExpressionStatement		708:2:14244:14244	3152401	5	True				
ANR	3152509	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		3152401	6					
ANR	3152510	ForInit	i = 0 ;	711:6:14308:14311	3152401	0	True				
ANR	3152511	AssignmentExpression	i = 0		3152401	0		=			
ANR	3152512	Identifier	i		3152401	0					
ANR	3152513	PrimaryExpression	0		3152401	1					
ANR	3152514	Condition	i < numNodes	711:11:14313:14322	3152401	1	True				
ANR	3152515	RelationalExpression	i < numNodes		3152401	0		<			
ANR	3152516	Identifier	i		3152401	0					
ANR	3152517	Identifier	numNodes		3152401	1					
ANR	3152518	PostIncDecOperationExpression	i ++	711:23:14325:14327	3152401	2	True				
ANR	3152519	Identifier	i		3152401	0					
ANR	3152520	IncDec	++		3152401	1					
ANR	3152521	CompoundStatement		22:2:496:533	3152401	3					
ANR	3152522	ExpressionStatement	arcTable . resetRow ( i )	712:2:14335:14355	3152401	0	True				
ANR	3152523	CallExpression	arcTable . resetRow ( i )		3152401	0					
ANR	3152524	Callee	arcTable . resetRow		3152401	0					
ANR	3152525	MemberAccess	arcTable . resetRow		3152401	0					
ANR	3152526	Identifier	arcTable		3152401	0					
ANR	3152527	Identifier	resetRow		3152401	1					
ANR	3152528	ArgumentList	i		3152401	1					
ANR	3152529	Argument	i		3152401	0					
ANR	3152530	Identifier	i		3152401	0					
ANR	3152531	IdentifierDeclStatement	int numArcs = revArcTable . getNumElem ( i ) ;	713:2:14359:14396	3152401	1	True				
ANR	3152532	IdentifierDecl	numArcs = revArcTable . getNumElem ( i )		3152401	0					
ANR	3152533	IdentifierDeclType	int		3152401	0					
ANR	3152534	Identifier	numArcs		3152401	1					
ANR	3152535	AssignmentExpression	numArcs = revArcTable . getNumElem ( i )		3152401	2		=			
ANR	3152536	Identifier	numArcs		3152401	0					
ANR	3152537	CallExpression	revArcTable . getNumElem ( i )		3152401	1					
ANR	3152538	Callee	revArcTable . getNumElem		3152401	0					
ANR	3152539	MemberAccess	revArcTable . getNumElem		3152401	0					
ANR	3152540	Identifier	revArcTable		3152401	0					
ANR	3152541	Identifier	getNumElem		3152401	1					
ANR	3152542	ArgumentList	i		3152401	1					
ANR	3152543	Argument	i		3152401	0					
ANR	3152544	Identifier	i		3152401	0					
ANR	3152545	ForStatement	for ( j = 0 ; j < numArcs ; j ++ )		3152401	2					
ANR	3152546	ForInit	j = 0 ;	714:7:14405:14408	3152401	0	True				
ANR	3152547	AssignmentExpression	j = 0		3152401	0		=			
ANR	3152548	Identifier	j		3152401	0					
ANR	3152549	PrimaryExpression	0		3152401	1					
ANR	3152550	Condition	j < numArcs	714:12:14410:14418	3152401	1	True				
ANR	3152551	RelationalExpression	j < numArcs		3152401	0		<			
ANR	3152552	Identifier	j		3152401	0					
ANR	3152553	Identifier	numArcs		3152401	1					
ANR	3152554	PostIncDecOperationExpression	j ++	714:23:14421:14423	3152401	2	True				
ANR	3152555	Identifier	j		3152401	0					
ANR	3152556	IncDec	++		3152401	1					
ANR	3152557	CompoundStatement		24:3:569:605	3152401	3					
ANR	3152558	IdentifierDeclStatement	"int child = revArcTable . getElem ( i , j ) ;"	715:3:14432:14468	3152401	0	True				
ANR	3152559	IdentifierDecl	"child = revArcTable . getElem ( i , j )"		3152401	0					
ANR	3152560	IdentifierDeclType	int		3152401	0					
ANR	3152561	Identifier	child		3152401	1					
ANR	3152562	AssignmentExpression	"child = revArcTable . getElem ( i , j )"		3152401	2		=			
ANR	3152563	Identifier	child		3152401	0					
ANR	3152564	CallExpression	"revArcTable . getElem ( i , j )"		3152401	1					
ANR	3152565	Callee	revArcTable . getElem		3152401	0					
ANR	3152566	MemberAccess	revArcTable . getElem		3152401	0					
ANR	3152567	Identifier	revArcTable		3152401	0					
ANR	3152568	Identifier	getElem		3152401	1					
ANR	3152569	ArgumentList	i		3152401	1					
ANR	3152570	Argument	i		3152401	0					
ANR	3152571	Identifier	i		3152401	0					
ANR	3152572	Argument	j		3152401	1					
ANR	3152573	Identifier	j		3152401	0					
ANR	3152574	ExpressionStatement	"arcTable . append ( i , child )"	716:3:14473:14497	3152401	1	True				
ANR	3152575	CallExpression	"arcTable . append ( i , child )"		3152401	0					
ANR	3152576	Callee	arcTable . append		3152401	0					
ANR	3152577	MemberAccess	arcTable . append		3152401	0					
ANR	3152578	Identifier	arcTable		3152401	0					
ANR	3152579	Identifier	append		3152401	1					
ANR	3152580	ArgumentList	i		3152401	1					
ANR	3152581	Argument	i		3152401	0					
ANR	3152582	Identifier	i		3152401	0					
ANR	3152583	Argument	child		3152401	1					
ANR	3152584	Identifier	child		3152401	0					
ANR	3152585	ExpressionStatement		717:3:14502:14502	3152401	3	True				
ANR	3152586	ExpressionStatement		718:2:14506:14506	3152401	7	True				
ANR	3152587	ReturnType	void		3152401	1					
ANR	3152588	Identifier	Graph :: reverseArcs		3152401	2					
ANR	3152589	ParameterList			3152401	3					
ANR	3152590	CFGEntryNode	ENTRY		3152401		True				
ANR	3152591	CFGExitNode	EXIT		3152401		True				
ANR	3152592	Symbol	getNumArcs		3152401						
ANR	3152593	Symbol	revArcTable . getElem		3152401						
ANR	3152594	Symbol	numNodes		3152401						
ANR	3152595	Symbol	getNumNodes		3152401						
ANR	3152596	Symbol	revArcTable		3152401						
ANR	3152597	Symbol	numArcs		3152401						
ANR	3152598	Symbol	getArc		3152401						
ANR	3152599	Symbol	i		3152401						
ANR	3152600	Symbol	arcTable		3152401						
ANR	3152601	Symbol	revArcTable . getNumElem		3152401						
ANR	3152602	Symbol	j		3152401						
ANR	3152603	Symbol	child		3152401						
ANR	3152604	Function	Graph :: closeTransitively	738:0:14846:16057							
ANR	3152605	FunctionDef	Graph :: closeTransitively ()		3152604	0					
ANR	3152606	CompoundStatement		739:0:14882:16057	3152604	0					
ANR	3152607	IdentifierDeclStatement	"int i , j , v ;"	740:1:14885:14894	3152604	0	True				
ANR	3152608	IdentifierDecl	i		3152604	0					
ANR	3152609	IdentifierDeclType	int		3152604	0					
ANR	3152610	Identifier	i		3152604	1					
ANR	3152611	IdentifierDecl	j		3152604	1					
ANR	3152612	IdentifierDeclType	int		3152604	0					
ANR	3152613	Identifier	j		3152604	1					
ANR	3152614	IdentifierDecl	v		3152604	2					
ANR	3152615	IdentifierDeclType	int		3152604	0					
ANR	3152616	Identifier	v		3152604	1					
ANR	3152617	IdentifierDeclStatement	int numNodes = getNumNodes ( ) ;	743:1:14921:14947	3152604	1	True				
ANR	3152618	IdentifierDecl	numNodes = getNumNodes ( )		3152604	0					
ANR	3152619	IdentifierDeclType	int		3152604	0					
ANR	3152620	Identifier	numNodes		3152604	1					
ANR	3152621	AssignmentExpression	numNodes = getNumNodes ( )		3152604	2		=			
ANR	3152622	Identifier	numNodes		3152604	0					
ANR	3152623	CallExpression	getNumNodes ( )		3152604	1					
ANR	3152624	Callee	getNumNodes		3152604	0					
ANR	3152625	Identifier	getNumNodes		3152604	0					
ANR	3152626	ArgumentList			3152604	1					
ANR	3152627	IdentifierDeclStatement	int * colorTable = new int [ numNodes ] ;	744:1:14950:14986	3152604	2	True				
ANR	3152628	IdentifierDecl	* colorTable = new int [ numNodes ]		3152604	0					
ANR	3152629	IdentifierDeclType	int *		3152604	0					
ANR	3152630	Identifier	colorTable		3152604	1					
ANR	3152631	AssignmentExpression	* colorTable = new int [ numNodes ]		3152604	2		=			
ANR	3152632	Identifier	numNodes		3152604	0					
ANR	3152633	Identifier	numNodes		3152604	1					
ANR	3152634	IfStatement	if ( NULL == colorTable )		3152604	3					
ANR	3152635	Condition	NULL == colorTable	745:5:14993:15008	3152604	0	True				
ANR	3152636	EqualityExpression	NULL == colorTable		3152604	0		==			
ANR	3152637	Identifier	NULL		3152604	0					
ANR	3152638	Identifier	colorTable		3152604	1					
ANR	3152639	ThrowStatement	"throw ""Graph::closeTransitively, colorTable is NULL"" ;"	746:2:15014:15066	3152604	1	True				
ANR	3152640	PrimaryExpression	"""Graph::closeTransitively, colorTable is NULL"""		3152604	0					
ANR	3152641	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		3152604	4					
ANR	3152642	ForInit	i = 0 ;	747:6:15074:15077	3152604	0	True				
ANR	3152643	AssignmentExpression	i = 0		3152604	0		=			
ANR	3152644	Identifier	i		3152604	0					
ANR	3152645	PrimaryExpression	0		3152604	1					
ANR	3152646	Condition	i < numNodes	747:11:15079:15088	3152604	1	True				
ANR	3152647	RelationalExpression	i < numNodes		3152604	0		<			
ANR	3152648	Identifier	i		3152604	0					
ANR	3152649	Identifier	numNodes		3152604	1					
ANR	3152650	PostIncDecOperationExpression	i ++	747:23:15091:15093	3152604	2	True				
ANR	3152651	Identifier	i		3152604	0					
ANR	3152652	IncDec	++		3152604	1					
ANR	3152653	ExpressionStatement	colorTable [ i ] = - 1	748:2:15099:15117	3152604	3	True				
ANR	3152654	AssignmentExpression	colorTable [ i ] = - 1		3152604	0		=			
ANR	3152655	ArrayIndexing	colorTable [ i ]		3152604	0					
ANR	3152656	Identifier	colorTable		3152604	0					
ANR	3152657	Identifier	i		3152604	1					
ANR	3152658	UnaryOperationExpression	- 1		3152604	1					
ANR	3152659	UnaryOperator	-		3152604	0					
ANR	3152660	PrimaryExpression	1		3152604	1					
ANR	3152661	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		3152604	5					
ANR	3152662	ForInit	i = 0 ;	750:6:15126:15129	3152604	0	True				
ANR	3152663	AssignmentExpression	i = 0		3152604	0		=			
ANR	3152664	Identifier	i		3152604	0					
ANR	3152665	PrimaryExpression	0		3152604	1					
ANR	3152666	Condition	i < numNodes	750:11:15131:15140	3152604	1	True				
ANR	3152667	RelationalExpression	i < numNodes		3152604	0		<			
ANR	3152668	Identifier	i		3152604	0					
ANR	3152669	Identifier	numNodes		3152604	1					
ANR	3152670	PostIncDecOperationExpression	i ++	750:23:15143:15145	3152604	2	True				
ANR	3152671	Identifier	i		3152604	0					
ANR	3152672	IncDec	++		3152604	1					
ANR	3152673	CompoundStatement		24:2:573:588	3152604	3					
ANR	3152674	IdentifierDeclStatement	int numArcs = getNumArcs ( i ) ;	755:2:15248:15275	3152604	0	True				
ANR	3152675	IdentifierDecl	numArcs = getNumArcs ( i )		3152604	0					
ANR	3152676	IdentifierDeclType	int		3152604	0					
ANR	3152677	Identifier	numArcs		3152604	1					
ANR	3152678	AssignmentExpression	numArcs = getNumArcs ( i )		3152604	2		=			
ANR	3152679	Identifier	numArcs		3152604	0					
ANR	3152680	CallExpression	getNumArcs ( i )		3152604	1					
ANR	3152681	Callee	getNumArcs		3152604	0					
ANR	3152682	Identifier	getNumArcs		3152604	0					
ANR	3152683	ArgumentList	i		3152604	1					
ANR	3152684	Argument	i		3152604	0					
ANR	3152685	Identifier	i		3152604	0					
ANR	3152686	ForStatement	for ( j = 0 ; j < numArcs ; j ++ )		3152604	1					
ANR	3152687	ForInit	j = 0 ;	756:6:15283:15286	3152604	0	True				
ANR	3152688	AssignmentExpression	j = 0		3152604	0		=			
ANR	3152689	Identifier	j		3152604	0					
ANR	3152690	PrimaryExpression	0		3152604	1					
ANR	3152691	Condition	j < numArcs	756:11:15288:15296	3152604	1	True				
ANR	3152692	RelationalExpression	j < numArcs		3152604	0		<			
ANR	3152693	Identifier	j		3152604	0					
ANR	3152694	Identifier	numArcs		3152604	1					
ANR	3152695	PostIncDecOperationExpression	j ++	756:22:15299:15301	3152604	2	True				
ANR	3152696	Identifier	j		3152604	0					
ANR	3152697	IncDec	++		3152604	1					
ANR	3152698	CompoundStatement		19:3:427:450	3152604	3					
ANR	3152699	IdentifierDeclStatement	"int child = getArc ( i , j ) ;"	757:3:15310:15333	3152604	0	True				
ANR	3152700	IdentifierDecl	"child = getArc ( i , j )"		3152604	0					
ANR	3152701	IdentifierDeclType	int		3152604	0					
ANR	3152702	Identifier	child		3152604	1					
ANR	3152703	AssignmentExpression	"child = getArc ( i , j )"		3152604	2		=			
ANR	3152704	Identifier	child		3152604	0					
ANR	3152705	CallExpression	"getArc ( i , j )"		3152604	1					
ANR	3152706	Callee	getArc		3152604	0					
ANR	3152707	Identifier	getArc		3152604	0					
ANR	3152708	ArgumentList	i		3152604	1					
ANR	3152709	Argument	i		3152604	0					
ANR	3152710	Identifier	i		3152604	0					
ANR	3152711	Argument	j		3152604	1					
ANR	3152712	Identifier	j		3152604	0					
ANR	3152713	ExpressionStatement	colorTable [ child ] = i	758:3:15338:15359	3152604	1	True				
ANR	3152714	AssignmentExpression	colorTable [ child ] = i		3152604	0		=			
ANR	3152715	ArrayIndexing	colorTable [ child ]		3152604	0					
ANR	3152716	Identifier	colorTable		3152604	0					
ANR	3152717	Identifier	child		3152604	1					
ANR	3152718	Identifier	i		3152604	1					
ANR	3152719	ExpressionStatement		759:3:15402:15402	3152604	2	True				
ANR	3152720	IdentifierDeclStatement	int current = 0 ;	762:2:15456:15471	3152604	3	True				
ANR	3152721	IdentifierDecl	current = 0		3152604	0					
ANR	3152722	IdentifierDeclType	int		3152604	0					
ANR	3152723	Identifier	current		3152604	1					
ANR	3152724	AssignmentExpression	current = 0		3152604	2		=			
ANR	3152725	Identifier	current		3152604	0					
ANR	3152726	PrimaryExpression	0		3152604	1					
ANR	3152727	WhileStatement	while ( current < getNumArcs ( i ) )		3152604	4					
ANR	3152728	Condition	current < getNumArcs ( i )	763:9:15482:15504	3152604	0	True				
ANR	3152729	RelationalExpression	current < getNumArcs ( i )		3152604	0		<			
ANR	3152730	Identifier	current		3152604	0					
ANR	3152731	CallExpression	getNumArcs ( i )		3152604	1					
ANR	3152732	Callee	getNumArcs		3152604	0					
ANR	3152733	Identifier	getNumArcs		3152604	0					
ANR	3152734	ArgumentList	i		3152604	1					
ANR	3152735	Argument	i		3152604	0					
ANR	3152736	Identifier	i		3152604	0					
ANR	3152737	CompoundStatement		31:3:805:832	3152604	1					
ANR	3152738	ExpressionStatement	"v = getArc ( i , current )"	766:3:15595:15616	3152604	0	True				
ANR	3152739	AssignmentExpression	"v = getArc ( i , current )"		3152604	0		=			
ANR	3152740	Identifier	v		3152604	0					
ANR	3152741	CallExpression	"getArc ( i , current )"		3152604	1					
ANR	3152742	Callee	getArc		3152604	0					
ANR	3152743	Identifier	getArc		3152604	0					
ANR	3152744	ArgumentList	i		3152604	1					
ANR	3152745	Argument	i		3152604	0					
ANR	3152746	Identifier	i		3152604	0					
ANR	3152747	Argument	current		3152604	1					
ANR	3152748	Identifier	current		3152604	0					
ANR	3152749	IdentifierDeclStatement	int numArcs = getNumArcs ( v ) ;	769:3:15688:15715	3152604	1	True				
ANR	3152750	IdentifierDecl	numArcs = getNumArcs ( v )		3152604	0					
ANR	3152751	IdentifierDeclType	int		3152604	0					
ANR	3152752	Identifier	numArcs		3152604	1					
ANR	3152753	AssignmentExpression	numArcs = getNumArcs ( v )		3152604	2		=			
ANR	3152754	Identifier	numArcs		3152604	0					
ANR	3152755	CallExpression	getNumArcs ( v )		3152604	1					
ANR	3152756	Callee	getNumArcs		3152604	0					
ANR	3152757	Identifier	getNumArcs		3152604	0					
ANR	3152758	ArgumentList	v		3152604	1					
ANR	3152759	Argument	v		3152604	0					
ANR	3152760	Identifier	v		3152604	0					
ANR	3152761	ForStatement	for ( j = 0 ; j < numArcs ; j ++ )		3152604	2					
ANR	3152762	ForInit	j = 0 ;	770:7:15724:15727	3152604	0	True				
ANR	3152763	AssignmentExpression	j = 0		3152604	0		=			
ANR	3152764	Identifier	j		3152604	0					
ANR	3152765	PrimaryExpression	0		3152604	1					
ANR	3152766	Condition	j < numArcs	770:12:15729:15737	3152604	1	True				
ANR	3152767	RelationalExpression	j < numArcs		3152604	0		<			
ANR	3152768	Identifier	j		3152604	0					
ANR	3152769	Identifier	numArcs		3152604	1					
ANR	3152770	PostIncDecOperationExpression	j ++	770:23:15740:15742	3152604	2	True				
ANR	3152771	Identifier	j		3152604	0					
ANR	3152772	IncDec	++		3152604	1					
ANR	3152773	CompoundStatement		33:4:869:892	3152604	3					
ANR	3152774	IdentifierDeclStatement	"int child = getArc ( v , j ) ;"	771:4:15752:15775	3152604	0	True				
ANR	3152775	IdentifierDecl	"child = getArc ( v , j )"		3152604	0					
ANR	3152776	IdentifierDeclType	int		3152604	0					
ANR	3152777	Identifier	child		3152604	1					
ANR	3152778	AssignmentExpression	"child = getArc ( v , j )"		3152604	2		=			
ANR	3152779	Identifier	child		3152604	0					
ANR	3152780	CallExpression	"getArc ( v , j )"		3152604	1					
ANR	3152781	Callee	getArc		3152604	0					
ANR	3152782	Identifier	getArc		3152604	0					
ANR	3152783	ArgumentList	v		3152604	1					
ANR	3152784	Argument	v		3152604	0					
ANR	3152785	Identifier	v		3152604	0					
ANR	3152786	Argument	j		3152604	1					
ANR	3152787	Identifier	j		3152604	0					
ANR	3152788	IfStatement	if ( colorTable [ child ] < i )		3152604	1					
ANR	3152789	Condition	colorTable [ child ] < i	772:8:15785:15805	3152604	0	True				
ANR	3152790	RelationalExpression	colorTable [ child ] < i		3152604	0		<			
ANR	3152791	ArrayIndexing	colorTable [ child ]		3152604	0					
ANR	3152792	Identifier	colorTable		3152604	0					
ANR	3152793	Identifier	child		3152604	1					
ANR	3152794	Identifier	i		3152604	1					
ANR	3152795	CompoundStatement		34:32:926:926	3152604	1					
ANR	3152796	ExpressionStatement	"addArc ( i , child )"	773:5:15816:15831	3152604	0	True				
ANR	3152797	CallExpression	"addArc ( i , child )"		3152604	0					
ANR	3152798	Callee	addArc		3152604	0					
ANR	3152799	Identifier	addArc		3152604	0					
ANR	3152800	ArgumentList	i		3152604	1					
ANR	3152801	Argument	i		3152604	0					
ANR	3152802	Identifier	i		3152604	0					
ANR	3152803	Argument	child		3152604	1					
ANR	3152804	Identifier	child		3152604	0					
ANR	3152805	ExpressionStatement	colorTable [ child ] = i	774:5:15880:15901	3152604	1	True				
ANR	3152806	AssignmentExpression	colorTable [ child ] = i		3152604	0		=			
ANR	3152807	ArrayIndexing	colorTable [ child ]		3152604	0					
ANR	3152808	Identifier	colorTable		3152604	0					
ANR	3152809	Identifier	child		3152604	1					
ANR	3152810	Identifier	i		3152604	1					
ANR	3152811	ExpressionStatement		775:5:15946:15946	3152604	2	True				
ANR	3152812	ExpressionStatement		776:4:15952:15952	3152604	3	True				
ANR	3152813	ExpressionStatement	current ++	779:3:16014:16023	3152604	4	True				
ANR	3152814	PostIncDecOperationExpression	current ++		3152604	0					
ANR	3152815	Identifier	current		3152604	0					
ANR	3152816	IncDec	++		3152604	1					
ANR	3152817	ExpressionStatement		780:3:16028:16028	3152604	5	True				
ANR	3152818	ExpressionStatement		781:2:16032:16032	3152604	6	True				
ANR	3152819	Statement	delete	783:1:16036:16041	3152604	7	True				
ANR	3152820	Statement	[	783:7:16042:16042	3152604	8	True				
ANR	3152821	Statement	]	783:8:16043:16043	3152604	9	True				
ANR	3152822	ExpressionStatement	colorTable	783:10:16045:16055	3152604	10	True				
ANR	3152823	Identifier	colorTable		3152604	0					
ANR	3152824	ReturnType	void		3152604	1					
ANR	3152825	Identifier	Graph :: closeTransitively		3152604	2					
ANR	3152826	ParameterList			3152604	3					
ANR	3152827	CFGEntryNode	ENTRY		3152604		True				
ANR	3152828	CFGExitNode	EXIT		3152604		True				
ANR	3152829	CFGExceptionNode	EXCEPTION		3152604		True				
ANR	3152830	Symbol	* child		3152604						
ANR	3152831	Symbol	NULL		3152604						
ANR	3152832	Symbol	i		3152604						
ANR	3152833	Symbol	j		3152604						
ANR	3152834	Symbol	colorTable		3152604						
ANR	3152835	Symbol	getNumArcs		3152604						
ANR	3152836	Symbol	numNodes		3152604						
ANR	3152837	Symbol	getNumNodes		3152604						
ANR	3152838	Symbol	current		3152604						
ANR	3152839	Symbol	* i		3152604						
ANR	3152840	Symbol	numArcs		3152604						
ANR	3152841	Symbol	getArc		3152604						
ANR	3152842	Symbol	v		3152604						
ANR	3152843	Symbol	* colorTable		3152604						
ANR	3152844	Symbol	child		3152604						
ANR	3152845	Function	Graph :: square	805:0:16529:17768							
ANR	3152846	FunctionDef	Graph :: square ()		3152845	0					
ANR	3152847	CompoundStatement		806:0:16554:17768	3152845	0					
ANR	3152848	IdentifierDeclStatement	"int i , j , k , u , v , w ;"	807:1:16557:16572	3152845	0	True				
ANR	3152849	IdentifierDecl	i		3152845	0					
ANR	3152850	IdentifierDeclType	int		3152845	0					
ANR	3152851	Identifier	i		3152845	1					
ANR	3152852	IdentifierDecl	j		3152845	1					
ANR	3152853	IdentifierDeclType	int		3152845	0					
ANR	3152854	Identifier	j		3152845	1					
ANR	3152855	IdentifierDecl	k		3152845	2					
ANR	3152856	IdentifierDeclType	int		3152845	0					
ANR	3152857	Identifier	k		3152845	1					
ANR	3152858	IdentifierDecl	u		3152845	3					
ANR	3152859	IdentifierDeclType	int		3152845	0					
ANR	3152860	Identifier	u		3152845	1					
ANR	3152861	IdentifierDecl	v		3152845	4					
ANR	3152862	IdentifierDeclType	int		3152845	0					
ANR	3152863	Identifier	v		3152845	1					
ANR	3152864	IdentifierDecl	w		3152845	5					
ANR	3152865	IdentifierDeclType	int		3152845	0					
ANR	3152866	Identifier	w		3152845	1					
ANR	3152867	IdentifierDeclStatement	Resizable2DArray < int > twoHopArcTable ;	810:1:16622:16658	3152845	1	True				
ANR	3152868	IdentifierDecl	twoHopArcTable		3152845	0					
ANR	3152869	IdentifierDeclType	Resizable2DArray < int >		3152845	0					
ANR	3152870	Identifier	twoHopArcTable		3152845	1					
ANR	3152871	IdentifierDeclStatement	int numNodes = getNumNodes ( ) ;	811:1:16661:16687	3152845	2	True				
ANR	3152872	IdentifierDecl	numNodes = getNumNodes ( )		3152845	0					
ANR	3152873	IdentifierDeclType	int		3152845	0					
ANR	3152874	Identifier	numNodes		3152845	1					
ANR	3152875	AssignmentExpression	numNodes = getNumNodes ( )		3152845	2		=			
ANR	3152876	Identifier	numNodes		3152845	0					
ANR	3152877	CallExpression	getNumNodes ( )		3152845	1					
ANR	3152878	Callee	getNumNodes		3152845	0					
ANR	3152879	Identifier	getNumNodes		3152845	0					
ANR	3152880	ArgumentList			3152845	1					
ANR	3152881	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		3152845	3					
ANR	3152882	ForInit	i = 0 ;	812:6:16695:16698	3152845	0	True				
ANR	3152883	AssignmentExpression	i = 0		3152845	0		=			
ANR	3152884	Identifier	i		3152845	0					
ANR	3152885	PrimaryExpression	0		3152845	1					
ANR	3152886	Condition	i < numNodes	812:11:16700:16709	3152845	1	True				
ANR	3152887	RelationalExpression	i < numNodes		3152845	0		<			
ANR	3152888	Identifier	i		3152845	0					
ANR	3152889	Identifier	numNodes		3152845	1					
ANR	3152890	PostIncDecOperationExpression	i ++	812:23:16712:16714	3152845	2	True				
ANR	3152891	Identifier	i		3152845	0					
ANR	3152892	IncDec	++		3152845	1					
ANR	3152893	ExpressionStatement	twoHopArcTable . appendRow ( )	813:2:16720:16746	3152845	3	True				
ANR	3152894	CallExpression	twoHopArcTable . appendRow ( )		3152845	0					
ANR	3152895	Callee	twoHopArcTable . appendRow		3152845	0					
ANR	3152896	MemberAccess	twoHopArcTable . appendRow		3152845	0					
ANR	3152897	Identifier	twoHopArcTable		3152845	0					
ANR	3152898	Identifier	appendRow		3152845	1					
ANR	3152899	ArgumentList			3152845	1					
ANR	3152900	IdentifierDeclStatement	int * colorTable ;	816:1:16773:16788	3152845	4	True				
ANR	3152901	IdentifierDecl	* colorTable		3152845	0					
ANR	3152902	IdentifierDeclType	int *		3152845	0					
ANR	3152903	Identifier	colorTable		3152845	1					
ANR	3152904	ExpressionStatement	colorTable = new int [ numNodes ]	817:1:16791:16821	3152845	5	True				
ANR	3152905	AssignmentExpression	colorTable = new int [ numNodes ]		3152845	0		=			
ANR	3152906	Identifier	colorTable		3152845	0					
ANR	3152907	Identifier	numNodes		3152845	1					
ANR	3152908	IfStatement	if ( NULL == colorTable )		3152845	6					
ANR	3152909	Condition	NULL == colorTable	818:5:16828:16843	3152845	0	True				
ANR	3152910	EqualityExpression	NULL == colorTable		3152845	0		==			
ANR	3152911	Identifier	NULL		3152845	0					
ANR	3152912	Identifier	colorTable		3152845	1					
ANR	3152913	ThrowStatement	"throw ""Graph::makeSquareGraph(void), colorTable is NULL"" ;"	819:2:16849:16905	3152845	1	True				
ANR	3152914	PrimaryExpression	"""Graph::makeSquareGraph(void), colorTable is NULL"""		3152845	0					
ANR	3152915	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		3152845	7					
ANR	3152916	ForInit	i = 0 ;	820:6:16913:16916	3152845	0	True				
ANR	3152917	AssignmentExpression	i = 0		3152845	0		=			
ANR	3152918	Identifier	i		3152845	0					
ANR	3152919	PrimaryExpression	0		3152845	1					
ANR	3152920	Condition	i < numNodes	820:11:16918:16927	3152845	1	True				
ANR	3152921	RelationalExpression	i < numNodes		3152845	0		<			
ANR	3152922	Identifier	i		3152845	0					
ANR	3152923	Identifier	numNodes		3152845	1					
ANR	3152924	PostIncDecOperationExpression	i ++	820:23:16930:16932	3152845	2	True				
ANR	3152925	Identifier	i		3152845	0					
ANR	3152926	IncDec	++		3152845	1					
ANR	3152927	ExpressionStatement	colorTable [ i ] = - 1	821:2:16938:16956	3152845	3	True				
ANR	3152928	AssignmentExpression	colorTable [ i ] = - 1		3152845	0		=			
ANR	3152929	ArrayIndexing	colorTable [ i ]		3152845	0					
ANR	3152930	Identifier	colorTable		3152845	0					
ANR	3152931	Identifier	i		3152845	1					
ANR	3152932	UnaryOperationExpression	- 1		3152845	1					
ANR	3152933	UnaryOperator	-		3152845	0					
ANR	3152934	PrimaryExpression	1		3152845	1					
ANR	3152935	ForStatement	for ( u = 0 ; u < numNodes ; u ++ )		3152845	8					
ANR	3152936	ForInit	u = 0 ;	823:6:16965:16968	3152845	0	True				
ANR	3152937	AssignmentExpression	u = 0		3152845	0		=			
ANR	3152938	Identifier	u		3152845	0					
ANR	3152939	PrimaryExpression	0		3152845	1					
ANR	3152940	Condition	u < numNodes	823:11:16970:16979	3152845	1	True				
ANR	3152941	RelationalExpression	u < numNodes		3152845	0		<			
ANR	3152942	Identifier	u		3152845	0					
ANR	3152943	Identifier	numNodes		3152845	1					
ANR	3152944	PostIncDecOperationExpression	u ++	823:23:16982:16984	3152845	2	True				
ANR	3152945	Identifier	u		3152845	0					
ANR	3152946	IncDec	++		3152845	1					
ANR	3152947	CompoundStatement		23:2:536:564	3152845	3					
ANR	3152948	IdentifierDeclStatement	int numArcsU = getNumArcs ( u ) ;	828:2:17091:17119	3152845	0	True				
ANR	3152949	IdentifierDecl	numArcsU = getNumArcs ( u )		3152845	0					
ANR	3152950	IdentifierDeclType	int		3152845	0					
ANR	3152951	Identifier	numArcsU		3152845	1					
ANR	3152952	AssignmentExpression	numArcsU = getNumArcs ( u )		3152845	2		=			
ANR	3152953	Identifier	numArcsU		3152845	0					
ANR	3152954	CallExpression	getNumArcs ( u )		3152845	1					
ANR	3152955	Callee	getNumArcs		3152845	0					
ANR	3152956	Identifier	getNumArcs		3152845	0					
ANR	3152957	ArgumentList	u		3152845	1					
ANR	3152958	Argument	u		3152845	0					
ANR	3152959	Identifier	u		3152845	0					
ANR	3152960	ForStatement	for ( j = 0 ; j < numArcsU ; j ++ )		3152845	1					
ANR	3152961	ForInit	j = 0 ;	829:6:17127:17130	3152845	0	True				
ANR	3152962	AssignmentExpression	j = 0		3152845	0		=			
ANR	3152963	Identifier	j		3152845	0					
ANR	3152964	PrimaryExpression	0		3152845	1					
ANR	3152965	Condition	j < numArcsU	829:11:17132:17141	3152845	1	True				
ANR	3152966	RelationalExpression	j < numArcsU		3152845	0		<			
ANR	3152967	Identifier	j		3152845	0					
ANR	3152968	Identifier	numArcsU		3152845	1					
ANR	3152969	PostIncDecOperationExpression	j ++	829:23:17144:17146	3152845	2	True				
ANR	3152970	Identifier	j		3152845	0					
ANR	3152971	IncDec	++		3152845	1					
ANR	3152972	CompoundStatement		30:3:689:717	3152845	3					
ANR	3152973	ExpressionStatement	"v = getArc ( u , j )"	832:3:17186:17201	3152845	0	True				
ANR	3152974	AssignmentExpression	"v = getArc ( u , j )"		3152845	0		=			
ANR	3152975	Identifier	v		3152845	0					
ANR	3152976	CallExpression	"getArc ( u , j )"		3152845	1					
ANR	3152977	Callee	getArc		3152845	0					
ANR	3152978	Identifier	getArc		3152845	0					
ANR	3152979	ArgumentList	u		3152845	1					
ANR	3152980	Argument	u		3152845	0					
ANR	3152981	Identifier	u		3152845	0					
ANR	3152982	Argument	j		3152845	1					
ANR	3152983	Identifier	j		3152845	0					
ANR	3152984	IdentifierDeclStatement	int numArcsV = getNumArcs ( v ) ;	835:3:17244:17272	3152845	1	True				
ANR	3152985	IdentifierDecl	numArcsV = getNumArcs ( v )		3152845	0					
ANR	3152986	IdentifierDeclType	int		3152845	0					
ANR	3152987	Identifier	numArcsV		3152845	1					
ANR	3152988	AssignmentExpression	numArcsV = getNumArcs ( v )		3152845	2		=			
ANR	3152989	Identifier	numArcsV		3152845	0					
ANR	3152990	CallExpression	getNumArcs ( v )		3152845	1					
ANR	3152991	Callee	getNumArcs		3152845	0					
ANR	3152992	Identifier	getNumArcs		3152845	0					
ANR	3152993	ArgumentList	v		3152845	1					
ANR	3152994	Argument	v		3152845	0					
ANR	3152995	Identifier	v		3152845	0					
ANR	3152996	ForStatement	for ( k = 0 ; k < numArcsV ; k ++ )		3152845	2					
ANR	3152997	ForInit	k = 0 ;	836:7:17281:17284	3152845	0	True				
ANR	3152998	AssignmentExpression	k = 0		3152845	0		=			
ANR	3152999	Identifier	k		3152845	0					
ANR	3153000	PrimaryExpression	0		3152845	1					
ANR	3153001	Condition	k < numArcsV	836:12:17286:17295	3152845	1	True				
ANR	3153002	RelationalExpression	k < numArcsV		3152845	0		<			
ANR	3153003	Identifier	k		3152845	0					
ANR	3153004	Identifier	numArcsV		3152845	1					
ANR	3153005	PostIncDecOperationExpression	k ++	836:24:17298:17300	3152845	2	True				
ANR	3153006	Identifier	k		3152845	0					
ANR	3153007	IncDec	++		3152845	1					
ANR	3153008	CompoundStatement		31:30:749:749	3152845	3					
ANR	3153009	ExpressionStatement	"w = getArc ( v , k )"	837:4:17310:17325	3152845	0	True				
ANR	3153010	AssignmentExpression	"w = getArc ( v , k )"		3152845	0		=			
ANR	3153011	Identifier	w		3152845	0					
ANR	3153012	CallExpression	"getArc ( v , k )"		3152845	1					
ANR	3153013	Callee	getArc		3152845	0					
ANR	3153014	Identifier	getArc		3152845	0					
ANR	3153015	ArgumentList	v		3152845	1					
ANR	3153016	Argument	v		3152845	0					
ANR	3153017	Identifier	v		3152845	0					
ANR	3153018	Argument	k		3152845	1					
ANR	3153019	Identifier	k		3152845	0					
ANR	3153020	IfStatement	if ( colorTable [ w ] < u )		3152845	1					
ANR	3153021	Condition	colorTable [ w ] < u	838:8:17335:17351	3152845	0	True				
ANR	3153022	RelationalExpression	colorTable [ w ] < u		3152845	0		<			
ANR	3153023	ArrayIndexing	colorTable [ w ]		3152845	0					
ANR	3153024	Identifier	colorTable		3152845	0					
ANR	3153025	Identifier	w		3152845	1					
ANR	3153026	Identifier	u		3152845	1					
ANR	3153027	CompoundStatement		33:28:800:800	3152845	1					
ANR	3153028	ExpressionStatement	"twoHopArcTable . append ( u , w )"	839:5:17362:17388	3152845	0	True				
ANR	3153029	CallExpression	"twoHopArcTable . append ( u , w )"		3152845	0					
ANR	3153030	Callee	twoHopArcTable . append		3152845	0					
ANR	3153031	MemberAccess	twoHopArcTable . append		3152845	0					
ANR	3153032	Identifier	twoHopArcTable		3152845	0					
ANR	3153033	Identifier	append		3152845	1					
ANR	3153034	ArgumentList	u		3152845	1					
ANR	3153035	Argument	u		3152845	0					
ANR	3153036	Identifier	u		3152845	0					
ANR	3153037	Argument	w		3152845	1					
ANR	3153038	Identifier	w		3152845	0					
ANR	3153039	ExpressionStatement	colorTable [ w ] = u	840:5:17436:17453	3152845	1	True				
ANR	3153040	AssignmentExpression	colorTable [ w ] = u		3152845	0		=			
ANR	3153041	ArrayIndexing	colorTable [ w ]		3152845	0					
ANR	3153042	Identifier	colorTable		3152845	0					
ANR	3153043	Identifier	w		3152845	1					
ANR	3153044	Identifier	u		3152845	1					
ANR	3153045	ExpressionStatement		841:5:17460:17460	3152845	2	True				
ANR	3153046	ExpressionStatement		842:4:17466:17466	3152845	3	True				
ANR	3153047	ExpressionStatement		843:3:17471:17471	3152845	2	True				
ANR	3153048	ExpressionStatement		844:2:17475:17475	3152845	9	True				
ANR	3153049	Statement	delete	846:1:17479:17484	3152845	10	True				
ANR	3153050	Statement	[	846:7:17485:17485	3152845	11	True				
ANR	3153051	Statement	]	846:8:17486:17486	3152845	12	True				
ANR	3153052	ExpressionStatement	colorTable	846:10:17488:17498	3152845	13	True				
ANR	3153053	Identifier	colorTable		3152845	0					
ANR	3153054	ForStatement	for ( i = 0 ; i < numNodes ; i ++ )		3152845	14					
ANR	3153055	ForInit	i = 0 ;	849:6:17562:17565	3152845	0	True				
ANR	3153056	AssignmentExpression	i = 0		3152845	0		=			
ANR	3153057	Identifier	i		3152845	0					
ANR	3153058	PrimaryExpression	0		3152845	1					
ANR	3153059	Condition	i < numNodes	849:11:17567:17576	3152845	1	True				
ANR	3153060	RelationalExpression	i < numNodes		3152845	0		<			
ANR	3153061	Identifier	i		3152845	0					
ANR	3153062	Identifier	numNodes		3152845	1					
ANR	3153063	PostIncDecOperationExpression	i ++	849:23:17579:17581	3152845	2	True				
ANR	3153064	Identifier	i		3152845	0					
ANR	3153065	IncDec	++		3152845	1					
ANR	3153066	CompoundStatement		46:2:1058:1098	3152845	3					
ANR	3153067	ExpressionStatement	arcTable . resetRow ( i )	850:2:17589:17609	3152845	0	True				
ANR	3153068	CallExpression	arcTable . resetRow ( i )		3152845	0					
ANR	3153069	Callee	arcTable . resetRow		3152845	0					
ANR	3153070	MemberAccess	arcTable . resetRow		3152845	0					
ANR	3153071	Identifier	arcTable		3152845	0					
ANR	3153072	Identifier	resetRow		3152845	1					
ANR	3153073	ArgumentList	i		3152845	1					
ANR	3153074	Argument	i		3152845	0					
ANR	3153075	Identifier	i		3152845	0					
ANR	3153076	IdentifierDeclStatement	int numArcs = twoHopArcTable . getNumElem ( i ) ;	851:2:17613:17653	3152845	1	True				
ANR	3153077	IdentifierDecl	numArcs = twoHopArcTable . getNumElem ( i )		3152845	0					
ANR	3153078	IdentifierDeclType	int		3152845	0					
ANR	3153079	Identifier	numArcs		3152845	1					
ANR	3153080	AssignmentExpression	numArcs = twoHopArcTable . getNumElem ( i )		3152845	2		=			
ANR	3153081	Identifier	numArcs		3152845	0					
ANR	3153082	CallExpression	twoHopArcTable . getNumElem ( i )		3152845	1					
ANR	3153083	Callee	twoHopArcTable . getNumElem		3152845	0					
ANR	3153084	MemberAccess	twoHopArcTable . getNumElem		3152845	0					
ANR	3153085	Identifier	twoHopArcTable		3152845	0					
ANR	3153086	Identifier	getNumElem		3152845	1					
ANR	3153087	ArgumentList	i		3152845	1					
ANR	3153088	Argument	i		3152845	0					
ANR	3153089	Identifier	i		3152845	0					
ANR	3153090	ForStatement	for ( j = 0 ; j < numArcs ; j ++ )		3152845	2					
ANR	3153091	ForInit	j = 0 ;	852:7:17662:17665	3152845	0	True				
ANR	3153092	AssignmentExpression	j = 0		3152845	0		=			
ANR	3153093	Identifier	j		3152845	0					
ANR	3153094	PrimaryExpression	0		3152845	1					
ANR	3153095	Condition	j < numArcs	852:12:17667:17675	3152845	1	True				
ANR	3153096	RelationalExpression	j < numArcs		3152845	0		<			
ANR	3153097	Identifier	j		3152845	0					
ANR	3153098	Identifier	numArcs		3152845	1					
ANR	3153099	PostIncDecOperationExpression	j ++	852:23:17678:17680	3152845	2	True				
ANR	3153100	Identifier	j		3152845	0					
ANR	3153101	IncDec	++		3152845	1					
ANR	3153102	CompoundStatement		48:3:1134:1173	3152845	3					
ANR	3153103	IdentifierDeclStatement	"int child = twoHopArcTable . getElem ( i , j ) ;"	853:3:17689:17728	3152845	0	True				
ANR	3153104	IdentifierDecl	"child = twoHopArcTable . getElem ( i , j )"		3152845	0					
ANR	3153105	IdentifierDeclType	int		3152845	0					
ANR	3153106	Identifier	child		3152845	1					
ANR	3153107	AssignmentExpression	"child = twoHopArcTable . getElem ( i , j )"		3152845	2		=			
ANR	3153108	Identifier	child		3152845	0					
ANR	3153109	CallExpression	"twoHopArcTable . getElem ( i , j )"		3152845	1					
ANR	3153110	Callee	twoHopArcTable . getElem		3152845	0					
ANR	3153111	MemberAccess	twoHopArcTable . getElem		3152845	0					
ANR	3153112	Identifier	twoHopArcTable		3152845	0					
ANR	3153113	Identifier	getElem		3152845	1					
ANR	3153114	ArgumentList	i		3152845	1					
ANR	3153115	Argument	i		3152845	0					
ANR	3153116	Identifier	i		3152845	0					
ANR	3153117	Argument	j		3152845	1					
ANR	3153118	Identifier	j		3152845	0					
ANR	3153119	ExpressionStatement	"arcTable . append ( i , child )"	854:3:17733:17757	3152845	1	True				
ANR	3153120	CallExpression	"arcTable . append ( i , child )"		3152845	0					
ANR	3153121	Callee	arcTable . append		3152845	0					
ANR	3153122	MemberAccess	arcTable . append		3152845	0					
ANR	3153123	Identifier	arcTable		3152845	0					
ANR	3153124	Identifier	append		3152845	1					
ANR	3153125	ArgumentList	i		3152845	1					
ANR	3153126	Argument	i		3152845	0					
ANR	3153127	Identifier	i		3152845	0					
ANR	3153128	Argument	child		3152845	1					
ANR	3153129	Identifier	child		3152845	0					
ANR	3153130	ExpressionStatement		855:3:17762:17762	3152845	3	True				
ANR	3153131	ExpressionStatement		856:2:17766:17766	3152845	15	True				
ANR	3153132	ReturnType	void		3152845	1					
ANR	3153133	Identifier	Graph :: square		3152845	2					
ANR	3153134	ParameterList			3152845	3					
ANR	3153135	CFGEntryNode	ENTRY		3152845		True				
ANR	3153136	CFGExitNode	EXIT		3152845		True				
ANR	3153137	CFGExceptionNode	EXCEPTION		3152845		True				
ANR	3153138	Symbol	twoHopArcTable		3152845						
ANR	3153139	Symbol	* w		3152845						
ANR	3153140	Symbol	twoHopArcTable . getNumElem		3152845						
ANR	3153141	Symbol	twoHopArcTable . getElem		3152845						
ANR	3153142	Symbol	NULL		3152845						
ANR	3153143	Symbol	i		3152845						
ANR	3153144	Symbol	arcTable		3152845						
ANR	3153145	Symbol	j		3152845						
ANR	3153146	Symbol	k		3152845						
ANR	3153147	Symbol	numArcsV		3152845						
ANR	3153148	Symbol	numArcsU		3152845						
ANR	3153149	Symbol	colorTable		3152845						
ANR	3153150	Symbol	getNumArcs		3152845						
ANR	3153151	Symbol	getNumNodes		3152845						
ANR	3153152	Symbol	numNodes		3152845						
ANR	3153153	Symbol	* i		3152845						
ANR	3153154	Symbol	getArc		3152845						
ANR	3153155	Symbol	numArcs		3152845						
ANR	3153156	Symbol	u		3152845						
ANR	3153157	Symbol	v		3152845						
ANR	3153158	Symbol	w		3152845						
ANR	3153159	Symbol	* colorTable		3152845						
ANR	3153160	Symbol	child		3152845						
ANR	3153161	Function	Graph :: initializeWith	875:0:18049:18445							
ANR	3153162	FunctionDef	Graph :: initializeWith (const Graph & g)		3153161	0					
ANR	3153163	CompoundStatement		876:0:18092:18445	3153161	0					
ANR	3153164	IfStatement	if ( 0 != getNumNodes ( ) )		3153161	0					
ANR	3153165	Condition	0 != getNumNodes ( )	877:5:18099:18114	3153161	0	True				
ANR	3153166	EqualityExpression	0 != getNumNodes ( )		3153161	0		!=			
ANR	3153167	PrimaryExpression	0		3153161	0					
ANR	3153168	CallExpression	getNumNodes ( )		3153161	1					
ANR	3153169	Callee	getNumNodes		3153161	0					
ANR	3153170	Identifier	getNumNodes		3153161	0					
ANR	3153171	ArgumentList			3153161	1					
ANR	3153172	ThrowStatement	"throw ""Graph::absorbTopology, getNumNodes is not zero"" ;"	878:2:18120:18174	3153161	1	True				
ANR	3153173	PrimaryExpression	"""Graph::absorbTopology, getNumNodes is not zero"""		3153161	0					
ANR	3153174	IdentifierDeclStatement	int numNodes = g . getNumNodes ( ) ;	881:1:18193:18221	3153161	1	True				
ANR	3153175	IdentifierDecl	numNodes = g . getNumNodes ( )		3153161	0					
ANR	3153176	IdentifierDeclType	int		3153161	0					
ANR	3153177	Identifier	numNodes		3153161	1					
ANR	3153178	AssignmentExpression	numNodes = g . getNumNodes ( )		3153161	2		=			
ANR	3153179	Identifier	numNodes		3153161	0					
ANR	3153180	CallExpression	g . getNumNodes ( )		3153161	1					
ANR	3153181	Callee	g . getNumNodes		3153161	0					
ANR	3153182	MemberAccess	g . getNumNodes		3153161	0					
ANR	3153183	Identifier	g		3153161	0					
ANR	3153184	Identifier	getNumNodes		3153161	1					
ANR	3153185	ArgumentList			3153161	1					
ANR	3153186	ForStatement	for ( int i = 0 ; i < numNodes ; i ++ )		3153161	2					
ANR	3153187	ForInit	int i = 0 ;	882:6:18229:18236	3153161	0	True				
ANR	3153188	IdentifierDeclStatement	int i = 0 ;		3153161	0					
ANR	3153189	IdentifierDecl	i = 0		3153161	0					
ANR	3153190	IdentifierDeclType	int		3153161	0					
ANR	3153191	Identifier	i		3153161	1					
ANR	3153192	AssignmentExpression	i = 0		3153161	2		=			
ANR	3153193	Identifier	i		3153161	0					
ANR	3153194	PrimaryExpression	0		3153161	1					
ANR	3153195	Condition	i < numNodes	882:15:18238:18247	3153161	1	True				
ANR	3153196	RelationalExpression	i < numNodes		3153161	0		<			
ANR	3153197	Identifier	i		3153161	0					
ANR	3153198	Identifier	numNodes		3153161	1					
ANR	3153199	PostIncDecOperationExpression	i ++	882:27:18250:18252	3153161	2	True				
ANR	3153200	Identifier	i		3153161	0					
ANR	3153201	IncDec	++		3153161	1					
ANR	3153202	ExpressionStatement	addNode ( )	883:2:18258:18267	3153161	3	True				
ANR	3153203	CallExpression	addNode ( )		3153161	0					
ANR	3153204	Callee	addNode		3153161	0					
ANR	3153205	Identifier	addNode		3153161	0					
ANR	3153206	ArgumentList			3153161	1					
ANR	3153207	ForStatement	for ( int i = 0 ; i < numNodes ; i ++ )		3153161	3					
ANR	3153208	ForInit	int i = 0 ;	886:6:18290:18297	3153161	0	True				
ANR	3153209	IdentifierDeclStatement	int i = 0 ;		3153161	0					
ANR	3153210	IdentifierDecl	i = 0		3153161	0					
ANR	3153211	IdentifierDeclType	int		3153161	0					
ANR	3153212	Identifier	i		3153161	1					
ANR	3153213	AssignmentExpression	i = 0		3153161	2		=			
ANR	3153214	Identifier	i		3153161	0					
ANR	3153215	PrimaryExpression	0		3153161	1					
ANR	3153216	Condition	i < numNodes	886:15:18299:18308	3153161	1	True				
ANR	3153217	RelationalExpression	i < numNodes		3153161	0		<			
ANR	3153218	Identifier	i		3153161	0					
ANR	3153219	Identifier	numNodes		3153161	1					
ANR	3153220	PostIncDecOperationExpression	i ++	886:27:18311:18313	3153161	2	True				
ANR	3153221	Identifier	i		3153161	0					
ANR	3153222	IncDec	++		3153161	1					
ANR	3153223	CompoundStatement		12:2:228:255	3153161	3					
ANR	3153224	IdentifierDeclStatement	int numArcs = g . getNumArcs ( i ) ;	887:2:18321:18348	3153161	0	True				
ANR	3153225	IdentifierDecl	numArcs = g . getNumArcs ( i )		3153161	0					
ANR	3153226	IdentifierDeclType	int		3153161	0					
ANR	3153227	Identifier	numArcs		3153161	1					
ANR	3153228	AssignmentExpression	numArcs = g . getNumArcs ( i )		3153161	2		=			
ANR	3153229	Identifier	numArcs		3153161	0					
ANR	3153230	CallExpression	g . getNumArcs ( i )		3153161	1					
ANR	3153231	Callee	g . getNumArcs		3153161	0					
ANR	3153232	MemberAccess	g . getNumArcs		3153161	0					
ANR	3153233	Identifier	g		3153161	0					
ANR	3153234	Identifier	getNumArcs		3153161	1					
ANR	3153235	ArgumentList	i		3153161	1					
ANR	3153236	Argument	i		3153161	0					
ANR	3153237	Identifier	i		3153161	0					
ANR	3153238	ForStatement	for ( int j = 0 ; j < numArcs ; j ++ )		3153161	1					
ANR	3153239	ForInit	int j = 0 ;	888:7:18357:18364	3153161	0	True				
ANR	3153240	IdentifierDeclStatement	int j = 0 ;		3153161	0					
ANR	3153241	IdentifierDecl	j = 0		3153161	0					
ANR	3153242	IdentifierDeclType	int		3153161	0					
ANR	3153243	Identifier	j		3153161	1					
ANR	3153244	AssignmentExpression	j = 0		3153161	2		=			
ANR	3153245	Identifier	j		3153161	0					
ANR	3153246	PrimaryExpression	0		3153161	1					
ANR	3153247	Condition	j < numArcs	888:16:18366:18374	3153161	1	True				
ANR	3153248	RelationalExpression	j < numArcs		3153161	0		<			
ANR	3153249	Identifier	j		3153161	0					
ANR	3153250	Identifier	numArcs		3153161	1					
ANR	3153251	PostIncDecOperationExpression	j ++	888:27:18377:18379	3153161	2	True				
ANR	3153252	Identifier	j		3153161	0					
ANR	3153253	IncDec	++		3153161	1					
ANR	3153254	CompoundStatement		14:3:295:320	3153161	3					
ANR	3153255	IdentifierDeclStatement	"int child = g . getArc ( i , j ) ;"	889:3:18388:18413	3153161	0	True				
ANR	3153256	IdentifierDecl	"child = g . getArc ( i , j )"		3153161	0					
ANR	3153257	IdentifierDeclType	int		3153161	0					
ANR	3153258	Identifier	child		3153161	1					
ANR	3153259	AssignmentExpression	"child = g . getArc ( i , j )"		3153161	2		=			
ANR	3153260	Identifier	child		3153161	0					
ANR	3153261	CallExpression	"g . getArc ( i , j )"		3153161	1					
ANR	3153262	Callee	g . getArc		3153161	0					
ANR	3153263	MemberAccess	g . getArc		3153161	0					
ANR	3153264	Identifier	g		3153161	0					
ANR	3153265	Identifier	getArc		3153161	1					
ANR	3153266	ArgumentList	i		3153161	1					
ANR	3153267	Argument	i		3153161	0					
ANR	3153268	Identifier	i		3153161	0					
ANR	3153269	Argument	j		3153161	1					
ANR	3153270	Identifier	j		3153161	0					
ANR	3153271	ExpressionStatement	"addArc ( i , child )"	890:3:18418:18433	3153161	1	True				
ANR	3153272	CallExpression	"addArc ( i , child )"		3153161	0					
ANR	3153273	Callee	addArc		3153161	0					
ANR	3153274	Identifier	addArc		3153161	0					
ANR	3153275	ArgumentList	i		3153161	1					
ANR	3153276	Argument	i		3153161	0					
ANR	3153277	Identifier	i		3153161	0					
ANR	3153278	Argument	child		3153161	1					
ANR	3153279	Identifier	child		3153161	0					
ANR	3153280	ExpressionStatement		891:3:18438:18438	3153161	2	True				
ANR	3153281	ExpressionStatement		892:2:18442:18442	3153161	4	True				
ANR	3153282	ReturnType	void		3153161	1					
ANR	3153283	Identifier	Graph :: initializeWith		3153161	2					
ANR	3153284	ParameterList	const Graph & g		3153161	3					
ANR	3153285	Parameter	const Graph & g	875:27:18076:18089	3153161	0	True				
ANR	3153286	ParameterType	const Graph &		3153161	0					
ANR	3153287	Identifier	g		3153161	1					
ANR	3153288	CFGEntryNode	ENTRY		3153161		True				
ANR	3153289	CFGExitNode	EXIT		3153161		True				
ANR	3153290	CFGExceptionNode	EXCEPTION		3153161		True				
ANR	3153291	Symbol	getNumNodes		3153161						
ANR	3153292	Symbol	numNodes		3153161						
ANR	3153293	Symbol	g . getNumNodes		3153161						
ANR	3153294	Symbol	g . getNumArcs		3153161						
ANR	3153295	Symbol	numArcs		3153161						
ANR	3153296	Symbol	g		3153161						
ANR	3153297	Symbol	g . getArc		3153161						
ANR	3153298	Symbol	i		3153161						
ANR	3153299	Symbol	j		3153161						
ANR	3153300	Symbol	child		3153161						
ANR	3153301	Function	Graph_test	910:0:18587:20599							
ANR	3153302	FunctionDef	Graph_test ()		3153301	0					
ANR	3153303	CompoundStatement		911:0:18609:20599	3153301	0					
ANR	3153304	ExpressionStatement	"printf ( ""[[[ BEGIN testing Graph\\n"" )"	912:1:18612:18647	3153301	0	True				
ANR	3153305	CallExpression	"printf ( ""[[[ BEGIN testing Graph\\n"" )"		3153301	0					
ANR	3153306	Callee	printf		3153301	0					
ANR	3153307	Identifier	printf		3153301	0					
ANR	3153308	ArgumentList	"""[[[ BEGIN testing Graph\\n"""		3153301	1					
ANR	3153309	Argument	"""[[[ BEGIN testing Graph\\n"""		3153301	0					
ANR	3153310	PrimaryExpression	"""[[[ BEGIN testing Graph\\n"""		3153301	0					
ANR	3153311	IdentifierDeclStatement	Graph g ;	914:1:18651:18658	3153301	1	True				
ANR	3153312	IdentifierDecl	g		3153301	0					
ANR	3153313	IdentifierDeclType	Graph		3153301	0					
ANR	3153314	Identifier	g		3153301	1					
ANR	3153315	ExpressionStatement	g . printAsText ( )	916:1:18662:18677	3153301	2	True				
ANR	3153316	CallExpression	g . printAsText ( )		3153301	0					
ANR	3153317	Callee	g . printAsText		3153301	0					
ANR	3153318	MemberAccess	g . printAsText		3153301	0					
ANR	3153319	Identifier	g		3153301	0					
ANR	3153320	Identifier	printAsText		3153301	1					
ANR	3153321	ArgumentList			3153301	1					
ANR	3153322	IfStatement	if ( 0 != g . addNode ( ) )		3153301	3					
ANR	3153323	Condition	0 != g . addNode ( )	917:5:18694:18707	3153301	0	True				
ANR	3153324	EqualityExpression	0 != g . addNode ( )		3153301	0		!=			
ANR	3153325	PrimaryExpression	0		3153301	0					
ANR	3153326	CallExpression	g . addNode ( )		3153301	1					
ANR	3153327	Callee	g . addNode		3153301	0					
ANR	3153328	MemberAccess	g . addNode		3153301	0					
ANR	3153329	Identifier	g		3153301	0					
ANR	3153330	Identifier	addNode		3153301	1					
ANR	3153331	ArgumentList			3153301	1					
ANR	3153332	ThrowStatement	"throw ""Graph_test, 1"" ;"	918:2:18740:18761	3153301	1	True				
ANR	3153333	PrimaryExpression	"""Graph_test, 1"""		3153301	0					
ANR	3153334	ExpressionStatement	g . printAsText ( )	919:1:18764:18779	3153301	4	True				
ANR	3153335	CallExpression	g . printAsText ( )		3153301	0					
ANR	3153336	Callee	g . printAsText		3153301	0					
ANR	3153337	MemberAccess	g . printAsText		3153301	0					
ANR	3153338	Identifier	g		3153301	0					
ANR	3153339	Identifier	printAsText		3153301	1					
ANR	3153340	ArgumentList			3153301	1					
ANR	3153341	IfStatement	if ( 1 != g . addNode ( ) )		3153301	5					
ANR	3153342	Condition	1 != g . addNode ( )	920:5:18786:18799	3153301	0	True				
ANR	3153343	EqualityExpression	1 != g . addNode ( )		3153301	0		!=			
ANR	3153344	PrimaryExpression	1		3153301	0					
ANR	3153345	CallExpression	g . addNode ( )		3153301	1					
ANR	3153346	Callee	g . addNode		3153301	0					
ANR	3153347	MemberAccess	g . addNode		3153301	0					
ANR	3153348	Identifier	g		3153301	0					
ANR	3153349	Identifier	addNode		3153301	1					
ANR	3153350	ArgumentList			3153301	1					
ANR	3153351	ThrowStatement	"throw ""Graph_test, 2"" ;"	921:2:18805:18826	3153301	1	True				
ANR	3153352	PrimaryExpression	"""Graph_test, 2"""		3153301	0					
ANR	3153353	ExpressionStatement	"g . addArc ( 0 , 1 )"	922:1:18829:18842	3153301	6	True				
ANR	3153354	CallExpression	"g . addArc ( 0 , 1 )"		3153301	0					
ANR	3153355	Callee	g . addArc		3153301	0					
ANR	3153356	MemberAccess	g . addArc		3153301	0					
ANR	3153357	Identifier	g		3153301	0					
ANR	3153358	Identifier	addArc		3153301	1					
ANR	3153359	ArgumentList	0		3153301	1					
ANR	3153360	Argument	0		3153301	0					
ANR	3153361	PrimaryExpression	0		3153301	0					
ANR	3153362	Argument	1		3153301	1					
ANR	3153363	PrimaryExpression	1		3153301	0					
ANR	3153364	ExpressionStatement	g . printAsText ( )	923:1:18845:18860	3153301	7	True				
ANR	3153365	CallExpression	g . printAsText ( )		3153301	0					
ANR	3153366	Callee	g . printAsText		3153301	0					
ANR	3153367	MemberAccess	g . printAsText		3153301	0					
ANR	3153368	Identifier	g		3153301	0					
ANR	3153369	Identifier	printAsText		3153301	1					
ANR	3153370	ArgumentList			3153301	1					
ANR	3153371	TryStatement	try		3153301	8					
ANR	3153372	CompoundStatement		15:4:280:280	3153301	0					
ANR	3153373	ExpressionStatement	"g . addArc ( 2 , 0 )"		3153301	0					
ANR	3153374	CallExpression	"g . addArc ( 2 , 0 )"		3153301	0					
ANR	3153375	Callee	g . addArc		3153301	0					
ANR	3153376	MemberAccess	g . addArc		3153301	0					
ANR	3153377	Identifier	g		3153301	0					
ANR	3153378	Identifier	addArc		3153301	1					
ANR	3153379	ArgumentList	2		3153301	1					
ANR	3153380	Argument	2		3153301	0					
ANR	3153381	PrimaryExpression	2		3153301	0					
ANR	3153382	Argument	0		3153301	1					
ANR	3153383	PrimaryExpression	0		3153301	0					
ANR	3153384	CatchList			3153301	1					
ANR	3153385	CatchStatement	catch ( char * s )		3153301	0					
ANR	3153386	Identifier	s		3153301	0					
ANR	3153387	CompoundStatement		17:19:318:318	3153301	1					
ANR	3153388	ExpressionStatement	alert ( s )	928:2:18932:18940	3153301	0	True				
ANR	3153389	CallExpression	alert ( s )		3153301	0					
ANR	3153390	Callee	alert		3153301	0					
ANR	3153391	Identifier	alert		3153301	0					
ANR	3153392	ArgumentList	s		3153301	1					
ANR	3153393	Argument	s		3153301	0					
ANR	3153394	Identifier	s		3153301	0					
ANR	3153395	ExpressionStatement		929:2:18944:18944	3153301	9	True				
ANR	3153396	TryStatement	try		3153301	10					
ANR	3153397	CompoundStatement		20:4:340:340	3153301	0					
ANR	3153398	ExpressionStatement	"g . addArc ( 1 , 2 )"		3153301	0					
ANR	3153399	CallExpression	"g . addArc ( 1 , 2 )"		3153301	0					
ANR	3153400	Callee	g . addArc		3153301	0					
ANR	3153401	MemberAccess	g . addArc		3153301	0					
ANR	3153402	Identifier	g		3153301	0					
ANR	3153403	Identifier	addArc		3153301	1					
ANR	3153404	ArgumentList	1		3153301	1					
ANR	3153405	Argument	1		3153301	0					
ANR	3153406	PrimaryExpression	1		3153301	0					
ANR	3153407	Argument	2		3153301	1					
ANR	3153408	PrimaryExpression	2		3153301	0					
ANR	3153409	CatchList			3153301	1					
ANR	3153410	CatchStatement	catch ( char * s )		3153301	0					
ANR	3153411	Identifier	s		3153301	0					
ANR	3153412	CompoundStatement		22:19:378:378	3153301	1					
ANR	3153413	ExpressionStatement	alert ( s )	933:2:18992:19000	3153301	0	True				
ANR	3153414	CallExpression	alert ( s )		3153301	0					
ANR	3153415	Callee	alert		3153301	0					
ANR	3153416	Identifier	alert		3153301	0					
ANR	3153417	ArgumentList	s		3153301	1					
ANR	3153418	Argument	s		3153301	0					
ANR	3153419	Identifier	s		3153301	0					
ANR	3153420	ExpressionStatement		934:2:19004:19004	3153301	11	True				
ANR	3153421	IfStatement	if ( 2 != g . getNumNodes ( ) )		3153301	12					
ANR	3153422	Condition	2 != g . getNumNodes ( )	936:5:19012:19029	3153301	0	True				
ANR	3153423	EqualityExpression	2 != g . getNumNodes ( )		3153301	0		!=			
ANR	3153424	PrimaryExpression	2		3153301	0					
ANR	3153425	CallExpression	g . getNumNodes ( )		3153301	1					
ANR	3153426	Callee	g . getNumNodes		3153301	0					
ANR	3153427	MemberAccess	g . getNumNodes		3153301	0					
ANR	3153428	Identifier	g		3153301	0					
ANR	3153429	Identifier	getNumNodes		3153301	1					
ANR	3153430	ArgumentList			3153301	1					
ANR	3153431	ThrowStatement	"throw ""Graph_test, 3"" ;"	937:2:19035:19056	3153301	1	True				
ANR	3153432	PrimaryExpression	"""Graph_test, 3"""		3153301	0					
ANR	3153433	IfStatement	if ( 1 != g . getNumArcs ( 0 ) )		3153301	13					
ANR	3153434	Condition	1 != g . getNumArcs ( 0 )	938:5:19063:19080	3153301	0	True				
ANR	3153435	EqualityExpression	1 != g . getNumArcs ( 0 )		3153301	0		!=			
ANR	3153436	PrimaryExpression	1		3153301	0					
ANR	3153437	CallExpression	g . getNumArcs ( 0 )		3153301	1					
ANR	3153438	Callee	g . getNumArcs		3153301	0					
ANR	3153439	MemberAccess	g . getNumArcs		3153301	0					
ANR	3153440	Identifier	g		3153301	0					
ANR	3153441	Identifier	getNumArcs		3153301	1					
ANR	3153442	ArgumentList	0		3153301	1					
ANR	3153443	Argument	0		3153301	0					
ANR	3153444	PrimaryExpression	0		3153301	0					
ANR	3153445	ThrowStatement	"throw ""Graph_test, 4"" ;"	939:2:19086:19107	3153301	1	True				
ANR	3153446	PrimaryExpression	"""Graph_test, 4"""		3153301	0					
ANR	3153447	IfStatement	if ( 0 != g . getNumArcs ( 1 ) )		3153301	14					
ANR	3153448	Condition	0 != g . getNumArcs ( 1 )	940:5:19114:19131	3153301	0	True				
ANR	3153449	EqualityExpression	0 != g . getNumArcs ( 1 )		3153301	0		!=			
ANR	3153450	PrimaryExpression	0		3153301	0					
ANR	3153451	CallExpression	g . getNumArcs ( 1 )		3153301	1					
ANR	3153452	Callee	g . getNumArcs		3153301	0					
ANR	3153453	MemberAccess	g . getNumArcs		3153301	0					
ANR	3153454	Identifier	g		3153301	0					
ANR	3153455	Identifier	getNumArcs		3153301	1					
ANR	3153456	ArgumentList	1		3153301	1					
ANR	3153457	Argument	1		3153301	0					
ANR	3153458	PrimaryExpression	1		3153301	0					
ANR	3153459	ThrowStatement	"throw ""Graph_test, 5"" ;"	941:2:19137:19158	3153301	1	True				
ANR	3153460	PrimaryExpression	"""Graph_test, 5"""		3153301	0					
ANR	3153461	IfStatement	"if ( 1 != g . getArc ( 0 , 0 ) )"		3153301	15					
ANR	3153462	Condition	"1 != g . getArc ( 0 , 0 )"	943:5:19166:19181	3153301	0	True				
ANR	3153463	EqualityExpression	"1 != g . getArc ( 0 , 0 )"		3153301	0		!=			
ANR	3153464	PrimaryExpression	1		3153301	0					
ANR	3153465	CallExpression	"g . getArc ( 0 , 0 )"		3153301	1					
ANR	3153466	Callee	g . getArc		3153301	0					
ANR	3153467	MemberAccess	g . getArc		3153301	0					
ANR	3153468	Identifier	g		3153301	0					
ANR	3153469	Identifier	getArc		3153301	1					
ANR	3153470	ArgumentList	0		3153301	1					
ANR	3153471	Argument	0		3153301	0					
ANR	3153472	PrimaryExpression	0		3153301	0					
ANR	3153473	Argument	0		3153301	1					
ANR	3153474	PrimaryExpression	0		3153301	0					
ANR	3153475	ThrowStatement	"throw ""Graph_test, 6"" ;"	944:2:19187:19208	3153301	1	True				
ANR	3153476	PrimaryExpression	"""Graph_test, 6"""		3153301	0					
ANR	3153477	ExpressionStatement	"g . setLabelInt ( 0 , 10 )"	946:1:19212:19231	3153301	16	True				
ANR	3153478	CallExpression	"g . setLabelInt ( 0 , 10 )"		3153301	0					
ANR	3153479	Callee	g . setLabelInt		3153301	0					
ANR	3153480	MemberAccess	g . setLabelInt		3153301	0					
ANR	3153481	Identifier	g		3153301	0					
ANR	3153482	Identifier	setLabelInt		3153301	1					
ANR	3153483	ArgumentList	0		3153301	1					
ANR	3153484	Argument	0		3153301	0					
ANR	3153485	PrimaryExpression	0		3153301	0					
ANR	3153486	Argument	10		3153301	1					
ANR	3153487	PrimaryExpression	10		3153301	0					
ANR	3153488	ExpressionStatement	"g . setLabelString ( 1 , ""one"" )"	947:1:19234:19259	3153301	17	True				
ANR	3153489	CallExpression	"g . setLabelString ( 1 , ""one"" )"		3153301	0					
ANR	3153490	Callee	g . setLabelString		3153301	0					
ANR	3153491	MemberAccess	g . setLabelString		3153301	0					
ANR	3153492	Identifier	g		3153301	0					
ANR	3153493	Identifier	setLabelString		3153301	1					
ANR	3153494	ArgumentList	1		3153301	1					
ANR	3153495	Argument	1		3153301	0					
ANR	3153496	PrimaryExpression	1		3153301	0					
ANR	3153497	Argument	"""one"""		3153301	1					
ANR	3153498	PrimaryExpression	"""one"""		3153301	0					
ANR	3153499	ExpressionStatement	g . printAsText ( )	948:1:19262:19277	3153301	18	True				
ANR	3153500	CallExpression	g . printAsText ( )		3153301	0					
ANR	3153501	Callee	g . printAsText		3153301	0					
ANR	3153502	MemberAccess	g . printAsText		3153301	0					
ANR	3153503	Identifier	g		3153301	0					
ANR	3153504	Identifier	printAsText		3153301	1					
ANR	3153505	ArgumentList			3153301	1					
ANR	3153506	TryStatement	try		3153301	19					
ANR	3153507	CompoundStatement		41:5:719:719	3153301	0					
ANR	3153508	ExpressionStatement	"g . setLabelInt ( 1 , 10 )"		3153301	0					
ANR	3153509	CallExpression	"g . setLabelInt ( 1 , 10 )"		3153301	0					
ANR	3153510	Callee	g . setLabelInt		3153301	0					
ANR	3153511	MemberAccess	g . setLabelInt		3153301	0					
ANR	3153512	Identifier	g		3153301	0					
ANR	3153513	Identifier	setLabelInt		3153301	1					
ANR	3153514	ArgumentList	1		3153301	1					
ANR	3153515	Argument	1		3153301	0					
ANR	3153516	PrimaryExpression	1		3153301	0					
ANR	3153517	Argument	10		3153301	1					
ANR	3153518	PrimaryExpression	10		3153301	0					
ANR	3153519	CatchList			3153301	1					
ANR	3153520	CatchStatement	catch ( char * s )		3153301	0					
ANR	3153521	Identifier	s		3153301	0					
ANR	3153522	CompoundStatement		43:18:763:763	3153301	1					
ANR	3153523	ExpressionStatement	alert ( s )	954:2:19377:19385	3153301	0	True				
ANR	3153524	CallExpression	alert ( s )		3153301	0					
ANR	3153525	Callee	alert		3153301	0					
ANR	3153526	Identifier	alert		3153301	0					
ANR	3153527	ArgumentList	s		3153301	1					
ANR	3153528	Argument	s		3153301	0					
ANR	3153529	Identifier	s		3153301	0					
ANR	3153530	ExpressionStatement		955:2:19389:19389	3153301	20	True				
ANR	3153531	TryStatement	try		3153301	21					
ANR	3153532	CompoundStatement		46:5:786:786	3153301	0					
ANR	3153533	ExpressionStatement	"g . setLabelString ( 0 , ""one"" )"		3153301	0					
ANR	3153534	CallExpression	"g . setLabelString ( 0 , ""one"" )"		3153301	0					
ANR	3153535	Callee	g . setLabelString		3153301	0					
ANR	3153536	MemberAccess	g . setLabelString		3153301	0					
ANR	3153537	Identifier	g		3153301	0					
ANR	3153538	Identifier	setLabelString		3153301	1					
ANR	3153539	ArgumentList	0		3153301	1					
ANR	3153540	Argument	0		3153301	0					
ANR	3153541	PrimaryExpression	0		3153301	0					
ANR	3153542	Argument	"""one"""		3153301	1					
ANR	3153543	PrimaryExpression	"""one"""		3153301	0					
ANR	3153544	CatchList			3153301	1					
ANR	3153545	CatchStatement	catch ( char * s )		3153301	0					
ANR	3153546	Identifier	s		3153301	0					
ANR	3153547	CompoundStatement		48:18:835:835	3153301	1					
ANR	3153548	ExpressionStatement	alert ( s )	959:2:19449:19457	3153301	0	True				
ANR	3153549	CallExpression	alert ( s )		3153301	0					
ANR	3153550	Callee	alert		3153301	0					
ANR	3153551	Identifier	alert		3153301	0					
ANR	3153552	ArgumentList	s		3153301	1					
ANR	3153553	Argument	s		3153301	0					
ANR	3153554	Identifier	s		3153301	0					
ANR	3153555	ExpressionStatement		960:2:19461:19461	3153301	22	True				
ANR	3153556	IfStatement	if ( 10 != g . getLabelInt ( 0 ) )		3153301	23					
ANR	3153557	Condition	10 != g . getLabelInt ( 0 )	962:5:19469:19488	3153301	0	True				
ANR	3153558	EqualityExpression	10 != g . getLabelInt ( 0 )		3153301	0		!=			
ANR	3153559	PrimaryExpression	10		3153301	0					
ANR	3153560	CallExpression	g . getLabelInt ( 0 )		3153301	1					
ANR	3153561	Callee	g . getLabelInt		3153301	0					
ANR	3153562	MemberAccess	g . getLabelInt		3153301	0					
ANR	3153563	Identifier	g		3153301	0					
ANR	3153564	Identifier	getLabelInt		3153301	1					
ANR	3153565	ArgumentList	0		3153301	1					
ANR	3153566	Argument	0		3153301	0					
ANR	3153567	PrimaryExpression	0		3153301	0					
ANR	3153568	ThrowStatement	"throw ""Graph_test, 7"" ;"	963:2:19494:19515	3153301	1	True				
ANR	3153569	PrimaryExpression	"""Graph_test, 7"""		3153301	0					
ANR	3153570	IfStatement	"if ( 0 != strcmp ( g . getLabelString ( 1 ) , ""one"" ) )"		3153301	24					
ANR	3153571	Condition	"0 != strcmp ( g . getLabelString ( 1 ) , ""one"" )"	964:5:19522:19559	3153301	0	True				
ANR	3153572	EqualityExpression	"0 != strcmp ( g . getLabelString ( 1 ) , ""one"" )"		3153301	0		!=			
ANR	3153573	PrimaryExpression	0		3153301	0					
ANR	3153574	CallExpression	"strcmp ( g . getLabelString ( 1 ) , ""one"" )"		3153301	1					
ANR	3153575	Callee	strcmp		3153301	0					
ANR	3153576	Identifier	strcmp		3153301	0					
ANR	3153577	ArgumentList	g . getLabelString ( 1 )		3153301	1					
ANR	3153578	Argument	g . getLabelString ( 1 )		3153301	0					
ANR	3153579	CallExpression	g . getLabelString ( 1 )		3153301	0					
ANR	3153580	Callee	g . getLabelString		3153301	0					
ANR	3153581	MemberAccess	g . getLabelString		3153301	0					
ANR	3153582	Identifier	g		3153301	0					
ANR	3153583	Identifier	getLabelString		3153301	1					
ANR	3153584	ArgumentList	1		3153301	1					
ANR	3153585	Argument	1		3153301	0					
ANR	3153586	PrimaryExpression	1		3153301	0					
ANR	3153587	Argument	"""one"""		3153301	1					
ANR	3153588	PrimaryExpression	"""one"""		3153301	0					
ANR	3153589	ThrowStatement	"throw ""Graph_test, 8"" ;"	965:2:19565:19586	3153301	1	True				
ANR	3153590	PrimaryExpression	"""Graph_test, 8"""		3153301	0					
ANR	3153591	IfStatement	if ( 0 != g . getNode ( 10 ) )		3153301	25					
ANR	3153592	Condition	0 != g . getNode ( 10 )	966:5:19593:19608	3153301	0	True				
ANR	3153593	EqualityExpression	0 != g . getNode ( 10 )		3153301	0		!=			
ANR	3153594	PrimaryExpression	0		3153301	0					
ANR	3153595	CallExpression	g . getNode ( 10 )		3153301	1					
ANR	3153596	Callee	g . getNode		3153301	0					
ANR	3153597	MemberAccess	g . getNode		3153301	0					
ANR	3153598	Identifier	g		3153301	0					
ANR	3153599	Identifier	getNode		3153301	1					
ANR	3153600	ArgumentList	10		3153301	1					
ANR	3153601	Argument	10		3153301	0					
ANR	3153602	PrimaryExpression	10		3153301	0					
ANR	3153603	ThrowStatement	"throw ""Graph_test, 9"" ;"	967:2:19614:19635	3153301	1	True				
ANR	3153604	PrimaryExpression	"""Graph_test, 9"""		3153301	0					
ANR	3153605	IfStatement	if ( - 1 != g . getNode ( 100 ) )		3153301	26					
ANR	3153606	Condition	- 1 != g . getNode ( 100 )	968:5:19642:19659	3153301	0	True				
ANR	3153607	EqualityExpression	- 1 != g . getNode ( 100 )		3153301	0		!=			
ANR	3153608	UnaryOperationExpression	- 1		3153301	0					
ANR	3153609	UnaryOperator	-		3153301	0					
ANR	3153610	PrimaryExpression	1		3153301	1					
ANR	3153611	CallExpression	g . getNode ( 100 )		3153301	1					
ANR	3153612	Callee	g . getNode		3153301	0					
ANR	3153613	MemberAccess	g . getNode		3153301	0					
ANR	3153614	Identifier	g		3153301	0					
ANR	3153615	Identifier	getNode		3153301	1					
ANR	3153616	ArgumentList	100		3153301	1					
ANR	3153617	Argument	100		3153301	0					
ANR	3153618	PrimaryExpression	100		3153301	0					
ANR	3153619	ThrowStatement	"throw ""Graph_test, 10"" ;"	969:2:19665:19687	3153301	1	True				
ANR	3153620	PrimaryExpression	"""Graph_test, 10"""		3153301	0					
ANR	3153621	IfStatement	"if ( 1 != g . getNode ( ""one"" ) )"		3153301	27					
ANR	3153622	Condition	"1 != g . getNode ( ""one"" )"	970:5:19694:19712	3153301	0	True				
ANR	3153623	EqualityExpression	"1 != g . getNode ( ""one"" )"		3153301	0		!=			
ANR	3153624	PrimaryExpression	1		3153301	0					
ANR	3153625	CallExpression	"g . getNode ( ""one"" )"		3153301	1					
ANR	3153626	Callee	g . getNode		3153301	0					
ANR	3153627	MemberAccess	g . getNode		3153301	0					
ANR	3153628	Identifier	g		3153301	0					
ANR	3153629	Identifier	getNode		3153301	1					
ANR	3153630	ArgumentList	"""one"""		3153301	1					
ANR	3153631	Argument	"""one"""		3153301	0					
ANR	3153632	PrimaryExpression	"""one"""		3153301	0					
ANR	3153633	ThrowStatement	"throw ""Graph_test, 11"" ;"	971:2:19718:19740	3153301	1	True				
ANR	3153634	PrimaryExpression	"""Graph_test, 11"""		3153301	0					
ANR	3153635	IfStatement	"if ( - 1 != g . getNode ( ""two"" ) )"		3153301	28					
ANR	3153636	Condition	"- 1 != g . getNode ( ""two"" )"	972:5:19747:19766	3153301	0	True				
ANR	3153637	EqualityExpression	"- 1 != g . getNode ( ""two"" )"		3153301	0		!=			
ANR	3153638	UnaryOperationExpression	- 1		3153301	0					
ANR	3153639	UnaryOperator	-		3153301	0					
ANR	3153640	PrimaryExpression	1		3153301	1					
ANR	3153641	CallExpression	"g . getNode ( ""two"" )"		3153301	1					
ANR	3153642	Callee	g . getNode		3153301	0					
ANR	3153643	MemberAccess	g . getNode		3153301	0					
ANR	3153644	Identifier	g		3153301	0					
ANR	3153645	Identifier	getNode		3153301	1					
ANR	3153646	ArgumentList	"""two"""		3153301	1					
ANR	3153647	Argument	"""two"""		3153301	0					
ANR	3153648	PrimaryExpression	"""two"""		3153301	0					
ANR	3153649	ThrowStatement	"throw ""Graph_test, 12"" ;"	973:2:19790:19812	3153301	1	True				
ANR	3153650	PrimaryExpression	"""Graph_test, 12"""		3153301	0					
ANR	3153651	IfStatement	if ( true != g . isDag ( ) )		3153301	29					
ANR	3153652	Condition	true != g . isDag ( )	975:5:19820:19834	3153301	0	True				
ANR	3153653	EqualityExpression	true != g . isDag ( )		3153301	0		!=			
ANR	3153654	Identifier	true		3153301	0					
ANR	3153655	CallExpression	g . isDag ( )		3153301	1					
ANR	3153656	Callee	g . isDag		3153301	0					
ANR	3153657	MemberAccess	g . isDag		3153301	0					
ANR	3153658	Identifier	g		3153301	0					
ANR	3153659	Identifier	isDag		3153301	1					
ANR	3153660	ArgumentList			3153301	1					
ANR	3153661	ThrowStatement	"throw ""Graph_test, 13"" ;"	976:2:19840:19862	3153301	1	True				
ANR	3153662	PrimaryExpression	"""Graph_test, 13"""		3153301	0					
ANR	3153663	IfStatement	if ( 2 != g . addNode ( ) )		3153301	30					
ANR	3153664	Condition	2 != g . addNode ( )	977:5:19869:19882	3153301	0	True				
ANR	3153665	EqualityExpression	2 != g . addNode ( )		3153301	0		!=			
ANR	3153666	PrimaryExpression	2		3153301	0					
ANR	3153667	CallExpression	g . addNode ( )		3153301	1					
ANR	3153668	Callee	g . addNode		3153301	0					
ANR	3153669	MemberAccess	g . addNode		3153301	0					
ANR	3153670	Identifier	g		3153301	0					
ANR	3153671	Identifier	addNode		3153301	1					
ANR	3153672	ArgumentList			3153301	1					
ANR	3153673	ThrowStatement	"throw ""Graph_test, 14"" ;"	978:2:19888:19910	3153301	1	True				
ANR	3153674	PrimaryExpression	"""Graph_test, 14"""		3153301	0					
ANR	3153675	ExpressionStatement	"g . addArc ( 1 , 2 )"	979:1:19913:19926	3153301	31	True				
ANR	3153676	CallExpression	"g . addArc ( 1 , 2 )"		3153301	0					
ANR	3153677	Callee	g . addArc		3153301	0					
ANR	3153678	MemberAccess	g . addArc		3153301	0					
ANR	3153679	Identifier	g		3153301	0					
ANR	3153680	Identifier	addArc		3153301	1					
ANR	3153681	ArgumentList	1		3153301	1					
ANR	3153682	Argument	1		3153301	0					
ANR	3153683	PrimaryExpression	1		3153301	0					
ANR	3153684	Argument	2		3153301	1					
ANR	3153685	PrimaryExpression	2		3153301	0					
ANR	3153686	IfStatement	if ( true != g . isDag ( ) )		3153301	32					
ANR	3153687	Condition	true != g . isDag ( )	980:5:19933:19947	3153301	0	True				
ANR	3153688	EqualityExpression	true != g . isDag ( )		3153301	0		!=			
ANR	3153689	Identifier	true		3153301	0					
ANR	3153690	CallExpression	g . isDag ( )		3153301	1					
ANR	3153691	Callee	g . isDag		3153301	0					
ANR	3153692	MemberAccess	g . isDag		3153301	0					
ANR	3153693	Identifier	g		3153301	0					
ANR	3153694	Identifier	isDag		3153301	1					
ANR	3153695	ArgumentList			3153301	1					
ANR	3153696	ThrowStatement	"throw ""Graph_test, 15"" ;"	981:2:19953:19975	3153301	1	True				
ANR	3153697	PrimaryExpression	"""Graph_test, 15"""		3153301	0					
ANR	3153698	ExpressionStatement	"g . addArc ( 2 , 0 )"	982:1:19978:19991	3153301	33	True				
ANR	3153699	CallExpression	"g . addArc ( 2 , 0 )"		3153301	0					
ANR	3153700	Callee	g . addArc		3153301	0					
ANR	3153701	MemberAccess	g . addArc		3153301	0					
ANR	3153702	Identifier	g		3153301	0					
ANR	3153703	Identifier	addArc		3153301	1					
ANR	3153704	ArgumentList	2		3153301	1					
ANR	3153705	Argument	2		3153301	0					
ANR	3153706	PrimaryExpression	2		3153301	0					
ANR	3153707	Argument	0		3153301	1					
ANR	3153708	PrimaryExpression	0		3153301	0					
ANR	3153709	IfStatement	if ( false != g . isDag ( ) )		3153301	34					
ANR	3153710	Condition	false != g . isDag ( )	983:5:19998:20013	3153301	0	True				
ANR	3153711	EqualityExpression	false != g . isDag ( )		3153301	0		!=			
ANR	3153712	Identifier	false		3153301	0					
ANR	3153713	CallExpression	g . isDag ( )		3153301	1					
ANR	3153714	Callee	g . isDag		3153301	0					
ANR	3153715	MemberAccess	g . isDag		3153301	0					
ANR	3153716	Identifier	g		3153301	0					
ANR	3153717	Identifier	isDag		3153301	1					
ANR	3153718	ArgumentList			3153301	1					
ANR	3153719	ThrowStatement	"throw ""Graph_test, 16"" ;"	984:2:20019:20041	3153301	1	True				
ANR	3153720	PrimaryExpression	"""Graph_test, 16"""		3153301	0					
ANR	3153721	ExpressionStatement	"g . saveAsDot ( ""g.dot"" )"	985:1:20044:20064	3153301	35	True				
ANR	3153722	CallExpression	"g . saveAsDot ( ""g.dot"" )"		3153301	0					
ANR	3153723	Callee	g . saveAsDot		3153301	0					
ANR	3153724	MemberAccess	g . saveAsDot		3153301	0					
ANR	3153725	Identifier	g		3153301	0					
ANR	3153726	Identifier	saveAsDot		3153301	1					
ANR	3153727	ArgumentList	"""g.dot"""		3153301	1					
ANR	3153728	Argument	"""g.dot"""		3153301	0					
ANR	3153729	PrimaryExpression	"""g.dot"""		3153301	0					
ANR	3153730	ExpressionStatement	"g . saveAsText ( ""g.txt"" )"	986:1:20093:20114	3153301	36	True				
ANR	3153731	CallExpression	"g . saveAsText ( ""g.txt"" )"		3153301	0					
ANR	3153732	Callee	g . saveAsText		3153301	0					
ANR	3153733	MemberAccess	g . saveAsText		3153301	0					
ANR	3153734	Identifier	g		3153301	0					
ANR	3153735	Identifier	saveAsText		3153301	1					
ANR	3153736	ArgumentList	"""g.txt"""		3153301	1					
ANR	3153737	Argument	"""g.txt"""		3153301	0					
ANR	3153738	PrimaryExpression	"""g.txt"""		3153301	0					
ANR	3153739	ExpressionStatement	g . printAsText ( )	987:1:20143:20158	3153301	37	True				
ANR	3153740	CallExpression	g . printAsText ( )		3153301	0					
ANR	3153741	Callee	g . printAsText		3153301	0					
ANR	3153742	MemberAccess	g . printAsText		3153301	0					
ANR	3153743	Identifier	g		3153301	0					
ANR	3153744	Identifier	printAsText		3153301	1					
ANR	3153745	ArgumentList			3153301	1					
ANR	3153746	ExpressionStatement	g . reverseArcs ( )	988:1:20161:20176	3153301	38	True				
ANR	3153747	CallExpression	g . reverseArcs ( )		3153301	0					
ANR	3153748	Callee	g . reverseArcs		3153301	0					
ANR	3153749	MemberAccess	g . reverseArcs		3153301	0					
ANR	3153750	Identifier	g		3153301	0					
ANR	3153751	Identifier	reverseArcs		3153301	1					
ANR	3153752	ArgumentList			3153301	1					
ANR	3153753	ExpressionStatement	g . printAsText ( )	989:1:20179:20194	3153301	39	True				
ANR	3153754	CallExpression	g . printAsText ( )		3153301	0					
ANR	3153755	Callee	g . printAsText		3153301	0					
ANR	3153756	MemberAccess	g . printAsText		3153301	0					
ANR	3153757	Identifier	g		3153301	0					
ANR	3153758	Identifier	printAsText		3153301	1					
ANR	3153759	ArgumentList			3153301	1					
ANR	3153760	ExpressionStatement	g . square ( )	991:1:20198:20208	3153301	40	True				
ANR	3153761	CallExpression	g . square ( )		3153301	0					
ANR	3153762	Callee	g . square		3153301	0					
ANR	3153763	MemberAccess	g . square		3153301	0					
ANR	3153764	Identifier	g		3153301	0					
ANR	3153765	Identifier	square		3153301	1					
ANR	3153766	ArgumentList			3153301	1					
ANR	3153767	ExpressionStatement	g . printAsText ( )	992:1:20211:20226	3153301	41	True				
ANR	3153768	CallExpression	g . printAsText ( )		3153301	0					
ANR	3153769	Callee	g . printAsText		3153301	0					
ANR	3153770	MemberAccess	g . printAsText		3153301	0					
ANR	3153771	Identifier	g		3153301	0					
ANR	3153772	Identifier	printAsText		3153301	1					
ANR	3153773	ArgumentList			3153301	1					
ANR	3153774	IdentifierDeclStatement	Graph h ;	994:1:20230:20237	3153301	42	True				
ANR	3153775	IdentifierDecl	h		3153301	0					
ANR	3153776	IdentifierDeclType	Graph		3153301	0					
ANR	3153777	Identifier	h		3153301	1					
ANR	3153778	ExpressionStatement	h . printAsText ( )	995:1:20240:20255	3153301	43	True				
ANR	3153779	CallExpression	h . printAsText ( )		3153301	0					
ANR	3153780	Callee	h . printAsText		3153301	0					
ANR	3153781	MemberAccess	h . printAsText		3153301	0					
ANR	3153782	Identifier	h		3153301	0					
ANR	3153783	Identifier	printAsText		3153301	1					
ANR	3153784	ArgumentList			3153301	1					
ANR	3153785	ExpressionStatement	h . initializeWith ( g )	996:1:20258:20277	3153301	44	True				
ANR	3153786	CallExpression	h . initializeWith ( g )		3153301	0					
ANR	3153787	Callee	h . initializeWith		3153301	0					
ANR	3153788	MemberAccess	h . initializeWith		3153301	0					
ANR	3153789	Identifier	h		3153301	0					
ANR	3153790	Identifier	initializeWith		3153301	1					
ANR	3153791	ArgumentList	g		3153301	1					
ANR	3153792	Argument	g		3153301	0					
ANR	3153793	Identifier	g		3153301	0					
ANR	3153794	ExpressionStatement	h . printAsText ( )	997:1:20280:20295	3153301	45	True				
ANR	3153795	CallExpression	h . printAsText ( )		3153301	0					
ANR	3153796	Callee	h . printAsText		3153301	0					
ANR	3153797	MemberAccess	h . printAsText		3153301	0					
ANR	3153798	Identifier	h		3153301	0					
ANR	3153799	Identifier	printAsText		3153301	1					
ANR	3153800	ArgumentList			3153301	1					
ANR	3153801	IfStatement	"if ( true != g . addArcNoDuplicates ( 1 , 0 ) )"		3153301	46					
ANR	3153802	Condition	"true != g . addArcNoDuplicates ( 1 , 0 )"	999:5:20303:20333	3153301	0	True				
ANR	3153803	EqualityExpression	"true != g . addArcNoDuplicates ( 1 , 0 )"		3153301	0		!=			
ANR	3153804	Identifier	true		3153301	0					
ANR	3153805	CallExpression	"g . addArcNoDuplicates ( 1 , 0 )"		3153301	1					
ANR	3153806	Callee	g . addArcNoDuplicates		3153301	0					
ANR	3153807	MemberAccess	g . addArcNoDuplicates		3153301	0					
ANR	3153808	Identifier	g		3153301	0					
ANR	3153809	Identifier	addArcNoDuplicates		3153301	1					
ANR	3153810	ArgumentList	1		3153301	1					
ANR	3153811	Argument	1		3153301	0					
ANR	3153812	PrimaryExpression	1		3153301	0					
ANR	3153813	Argument	0		3153301	1					
ANR	3153814	PrimaryExpression	0		3153301	0					
ANR	3153815	ThrowStatement	"throw ""Graph_test, 17"" ;"	1000:2:20339:20361	3153301	1	True				
ANR	3153816	PrimaryExpression	"""Graph_test, 17"""		3153301	0					
ANR	3153817	ExpressionStatement	g . printAsText ( )	1001:1:20364:20379	3153301	47	True				
ANR	3153818	CallExpression	g . printAsText ( )		3153301	0					
ANR	3153819	Callee	g . printAsText		3153301	0					
ANR	3153820	MemberAccess	g . printAsText		3153301	0					
ANR	3153821	Identifier	g		3153301	0					
ANR	3153822	Identifier	printAsText		3153301	1					
ANR	3153823	ArgumentList			3153301	1					
ANR	3153824	ExpressionStatement	g . closeTransitively ( )	1003:1:20383:20404	3153301	48	True				
ANR	3153825	CallExpression	g . closeTransitively ( )		3153301	0					
ANR	3153826	Callee	g . closeTransitively		3153301	0					
ANR	3153827	MemberAccess	g . closeTransitively		3153301	0					
ANR	3153828	Identifier	g		3153301	0					
ANR	3153829	Identifier	closeTransitively		3153301	1					
ANR	3153830	ArgumentList			3153301	1					
ANR	3153831	ExpressionStatement	g . printAsText ( )	1004:1:20407:20422	3153301	49	True				
ANR	3153832	CallExpression	g . printAsText ( )		3153301	0					
ANR	3153833	Callee	g . printAsText		3153301	0					
ANR	3153834	MemberAccess	g . printAsText		3153301	0					
ANR	3153835	Identifier	g		3153301	0					
ANR	3153836	Identifier	printAsText		3153301	1					
ANR	3153837	ArgumentList			3153301	1					
ANR	3153838	IfStatement	"if ( false != g . addArcNoDuplicates ( 1 , 2 ) )"		3153301	50					
ANR	3153839	Condition	"false != g . addArcNoDuplicates ( 1 , 2 )"	1005:5:20429:20460	3153301	0	True				
ANR	3153840	EqualityExpression	"false != g . addArcNoDuplicates ( 1 , 2 )"		3153301	0		!=			
ANR	3153841	Identifier	false		3153301	0					
ANR	3153842	CallExpression	"g . addArcNoDuplicates ( 1 , 2 )"		3153301	1					
ANR	3153843	Callee	g . addArcNoDuplicates		3153301	0					
ANR	3153844	MemberAccess	g . addArcNoDuplicates		3153301	0					
ANR	3153845	Identifier	g		3153301	0					
ANR	3153846	Identifier	addArcNoDuplicates		3153301	1					
ANR	3153847	ArgumentList	1		3153301	1					
ANR	3153848	Argument	1		3153301	0					
ANR	3153849	PrimaryExpression	1		3153301	0					
ANR	3153850	Argument	2		3153301	1					
ANR	3153851	PrimaryExpression	2		3153301	0					
ANR	3153852	ThrowStatement	"throw ""Graph_test, 18"" ;"	1006:2:20466:20488	3153301	1	True				
ANR	3153853	PrimaryExpression	"""Graph_test, 18"""		3153301	0					
ANR	3153854	IfStatement	if ( 1 != g . deappendArc ( 1 ) )		3153301	51					
ANR	3153855	Condition	1 != g . deappendArc ( 1 )	1008:5:20496:20514	3153301	0	True				
ANR	3153856	EqualityExpression	1 != g . deappendArc ( 1 )		3153301	0		!=			
ANR	3153857	PrimaryExpression	1		3153301	0					
ANR	3153858	CallExpression	g . deappendArc ( 1 )		3153301	1					
ANR	3153859	Callee	g . deappendArc		3153301	0					
ANR	3153860	MemberAccess	g . deappendArc		3153301	0					
ANR	3153861	Identifier	g		3153301	0					
ANR	3153862	Identifier	deappendArc		3153301	1					
ANR	3153863	ArgumentList	1		3153301	1					
ANR	3153864	Argument	1		3153301	0					
ANR	3153865	PrimaryExpression	1		3153301	0					
ANR	3153866	ThrowStatement	"throw ""Graph_test, 19"" ;"	1009:2:20520:20542	3153301	1	True				
ANR	3153867	PrimaryExpression	"""Graph_test, 19"""		3153301	0					
ANR	3153868	ExpressionStatement	g . printAsText ( )	1010:1:20545:20560	3153301	52	True				
ANR	3153869	CallExpression	g . printAsText ( )		3153301	0					
ANR	3153870	Callee	g . printAsText		3153301	0					
ANR	3153871	MemberAccess	g . printAsText		3153301	0					
ANR	3153872	Identifier	g		3153301	0					
ANR	3153873	Identifier	printAsText		3153301	1					
ANR	3153874	ArgumentList			3153301	1					
ANR	3153875	ExpressionStatement	"printf ( ""]]] END testing Graph\\n"" )"	1012:1:20564:20597	3153301	53	True				
ANR	3153876	CallExpression	"printf ( ""]]] END testing Graph\\n"" )"		3153301	0					
ANR	3153877	Callee	printf		3153301	0					
ANR	3153878	Identifier	printf		3153301	0					
ANR	3153879	ArgumentList	"""]]] END testing Graph\\n"""		3153301	1					
ANR	3153880	Argument	"""]]] END testing Graph\\n"""		3153301	0					
ANR	3153881	PrimaryExpression	"""]]] END testing Graph\\n"""		3153301	0					
ANR	3153882	ReturnType	void		3153301	1					
ANR	3153883	Identifier	Graph_test		3153301	2					
ANR	3153884	ParameterList			3153301	3					
ANR	3153885	CFGEntryNode	ENTRY		3153301		True				
ANR	3153886	CFGExitNode	EXIT		3153301		True				
ANR	3153887	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153888	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153889	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153890	CFGErrorNode	ERROR		3153301		True				
ANR	3153891	CFGErrorNode	ERROR		3153301		True				
ANR	3153892	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153893	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153894	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153895	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153896	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153897	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153898	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153899	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153900	CFGErrorNode	ERROR		3153301		True				
ANR	3153901	CFGErrorNode	ERROR		3153301		True				
ANR	3153902	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153903	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153904	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153905	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153906	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153907	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153908	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153909	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153910	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153911	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153912	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153913	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153914	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153915	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153916	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153917	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153918	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153919	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153920	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153921	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153922	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153923	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153924	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153925	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153926	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153927	CFGExceptionNode	EXCEPTION		3153301		True				
ANR	3153928	Symbol	g . getLabelString		3153301						
ANR	3153929	Symbol	strcmp		3153301						
ANR	3153930	Symbol	g . getNumNodes		3153301						
ANR	3153931	Symbol	g . getNumArcs		3153301						
ANR	3153932	Symbol	g		3153301						
ANR	3153933	Symbol	g . getArc		3153301						
ANR	3153934	Symbol	false		3153301						
ANR	3153935	Symbol	h		3153301						
ANR	3153936	Symbol	g . getNode		3153301						
ANR	3153937	Symbol	g . isDag		3153301						
ANR	3153938	Symbol	g . addNode		3153301						
ANR	3153939	Symbol	g . getLabelInt		3153301						
ANR	3153940	Symbol	g . addArcNoDuplicates		3153301						
ANR	3153941	Symbol	true		3153301						
ANR	3153942	Symbol	g . deappendArc		3153301						
