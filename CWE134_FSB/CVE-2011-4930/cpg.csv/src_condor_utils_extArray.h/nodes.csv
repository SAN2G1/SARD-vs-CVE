command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	4733659	File	data/converged/CVE-2011-4930_htcondor/src_condor_utils_extArray.h								
ANR	4733660	ClassDef	ExtArray	26:0:911:1699							
ANR	4733661	DeclStmt									
ANR	4733662	Decl							Element	Element * ( void )	getarray
ANR	4733663	DeclStmt									
ANR	4733664	Decl							void	void ( int )	resize
ANR	4733665	DeclStmt									
ANR	4733666	Decl							void	void ( int )	truncate
ANR	4733667	DeclStmt									
ANR	4733668	Decl							void	void ( Element )	fill
ANR	4733669	DeclStmt									
ANR	4733670	Decl							void	void ( Element )	setFiller
ANR	4733671	DeclStmt									
ANR	4733672	Decl							Element	"Element ( int , Element )"	set
ANR	4733673	DeclStmt									
ANR	4733674	Decl							Element	Element ( Element )	add
ANR	4733675	DeclStmt									
ANR	4733676	Decl							Element	Element & ( int )	getElementAt
ANR	4733677	DeclStmt									
ANR	4733678	Decl							Element	Element *	array
ANR	4733679	DeclStmt									
ANR	4733680	Decl							int	int	size
ANR	4733681	DeclStmt									
ANR	4733682	Decl							int	int	last
ANR	4733683	DeclStmt									
ANR	4733684	Decl							Element	Element	filler
ANR	4733685	Function	ExtArray	69:0:1749:1935							
ANR	4733686	FunctionDef	ExtArray (int sz)		4733685	0					
ANR	4733687	CompoundStatement		70:0:1767:1935	4733685	0					
ANR	4733688	ExpressionStatement	size = sz	72:1:1804:1813	4733685	0	True				
ANR	4733689	AssignmentExpression	size = sz		4733685	0		=			
ANR	4733690	Identifier	size		4733685	0					
ANR	4733691	Identifier	sz		4733685	1					
ANR	4733692	ExpressionStatement	last = - 1	73:1:1816:1825	4733685	1	True				
ANR	4733693	AssignmentExpression	last = - 1		4733685	0		=			
ANR	4733694	Identifier	last		4733685	0					
ANR	4733695	UnaryOperationExpression	- 1		4733685	1					
ANR	4733696	UnaryOperator	-		4733685	0					
ANR	4733697	PrimaryExpression	1		4733685	1					
ANR	4733698	ExpressionStatement	array = new Element [ size ]	74:1:1828:1853	4733685	2	True				
ANR	4733699	AssignmentExpression	array = new Element [ size ]		4733685	0		=			
ANR	4733700	Identifier	array		4733685	0					
ANR	4733701	Identifier	size		4733685	1					
ANR	4733702	IfStatement	if ( ! array )		4733685	3					
ANR	4733703	Condition	! array	75:5:1860:1865	4733685	0	True				
ANR	4733704	UnaryOperationExpression	! array		4733685	0					
ANR	4733705	UnaryOperator	!		4733685	0					
ANR	4733706	Identifier	array		4733685	1					
ANR	4733707	CompoundStatement		7:1:101:101	4733685	1					
ANR	4733708	ExpressionStatement	"dprintf ( D_ALWAYS , ""ExtArray: Out of memory"" )"	77:2:1873:1918	4733685	0	True				
ANR	4733709	CallExpression	"dprintf ( D_ALWAYS , ""ExtArray: Out of memory"" )"		4733685	0					
ANR	4733710	Callee	dprintf		4733685	0					
ANR	4733711	Identifier	dprintf		4733685	0					
ANR	4733712	ArgumentList	D_ALWAYS		4733685	1					
ANR	4733713	Argument	D_ALWAYS		4733685	0					
ANR	4733714	Identifier	D_ALWAYS		4733685	0					
ANR	4733715	Argument	"""ExtArray: Out of memory"""		4733685	1					
ANR	4733716	PrimaryExpression	"""ExtArray: Out of memory"""		4733685	0					
ANR	4733717	ExpressionStatement	exit ( 1 )	78:2:1922:1930	4733685	1	True				
ANR	4733718	CallExpression	exit ( 1 )		4733685	0					
ANR	4733719	Callee	exit		4733685	0					
ANR	4733720	Identifier	exit		4733685	0					
ANR	4733721	ArgumentList	1		4733685	1					
ANR	4733722	Argument	1		4733685	0					
ANR	4733723	PrimaryExpression	1		4733685	0					
ANR	4733724	Identifier	ExtArray		4733685	1					
ANR	4733725	ParameterList	int sz		4733685	2					
ANR	4733726	Parameter	int sz	69:10:1759:1764	4733685	0	True				
ANR	4733727	ParameterType	int		4733685	0					
ANR	4733728	Identifier	sz		4733685	1					
ANR	4733729	CFGEntryNode	ENTRY		4733685		True				
ANR	4733730	CFGExitNode	EXIT		4733685		True				
ANR	4733731	Symbol	size		4733685						
ANR	4733732	Symbol	last		4733685						
ANR	4733733	Symbol	array		4733685						
ANR	4733734	Symbol	sz		4733685						
ANR	4733735	Symbol	D_ALWAYS		4733685						
ANR	4733736	Function	ExtArray	84:0:1983:2354							
ANR	4733737	FunctionDef	ExtArray (const ExtArray & old)		4733736	0					
ANR	4733738	CompoundStatement		85:0:2014:2354	4733736	0					
ANR	4733739	IdentifierDeclStatement	int i ;	86:1:2017:2022	4733736	0	True				
ANR	4733740	IdentifierDecl	i		4733736	0					
ANR	4733741	IdentifierDeclType	int		4733736	0					
ANR	4733742	Identifier	i		4733736	1					
ANR	4733743	ExpressionStatement	size = old . size	89:1:2068:2083	4733736	1	True				
ANR	4733744	AssignmentExpression	size = old . size		4733736	0		=			
ANR	4733745	Identifier	size		4733736	0					
ANR	4733746	MemberAccess	old . size		4733736	1					
ANR	4733747	Identifier	old		4733736	0					
ANR	4733748	Identifier	size		4733736	1					
ANR	4733749	ExpressionStatement	last = old . last	90:1:2086:2101	4733736	2	True				
ANR	4733750	AssignmentExpression	last = old . last		4733736	0		=			
ANR	4733751	Identifier	last		4733736	0					
ANR	4733752	MemberAccess	old . last		4733736	1					
ANR	4733753	Identifier	old		4733736	0					
ANR	4733754	Identifier	last		4733736	1					
ANR	4733755	ExpressionStatement	array = new Element [ size ]	91:1:2104:2129	4733736	3	True				
ANR	4733756	AssignmentExpression	array = new Element [ size ]		4733736	0		=			
ANR	4733757	Identifier	array		4733736	0					
ANR	4733758	Identifier	size		4733736	1					
ANR	4733759	IfStatement	if ( ! array )		4733736	4					
ANR	4733760	Condition	! array	92:5:2136:2141	4733736	0	True				
ANR	4733761	UnaryOperationExpression	! array		4733736	0					
ANR	4733762	UnaryOperator	!		4733736	0					
ANR	4733763	Identifier	array		4733736	1					
ANR	4733764	CompoundStatement		9:1:131:131	4733736	1					
ANR	4733765	ExpressionStatement	"dprintf ( D_ALWAYS , ""ExtArray: Out of memory"" )"	94:2:2150:2195	4733736	0	True				
ANR	4733766	CallExpression	"dprintf ( D_ALWAYS , ""ExtArray: Out of memory"" )"		4733736	0					
ANR	4733767	Callee	dprintf		4733736	0					
ANR	4733768	Identifier	dprintf		4733736	0					
ANR	4733769	ArgumentList	D_ALWAYS		4733736	1					
ANR	4733770	Argument	D_ALWAYS		4733736	0					
ANR	4733771	Identifier	D_ALWAYS		4733736	0					
ANR	4733772	Argument	"""ExtArray: Out of memory"""		4733736	1					
ANR	4733773	PrimaryExpression	"""ExtArray: Out of memory"""		4733736	0					
ANR	4733774	ExpressionStatement	exit ( 1 )	95:2:2199:2207	4733736	1	True				
ANR	4733775	CallExpression	exit ( 1 )		4733736	0					
ANR	4733776	Callee	exit		4733736	0					
ANR	4733777	Identifier	exit		4733736	0					
ANR	4733778	ArgumentList	1		4733736	1					
ANR	4733779	Argument	1		4733736	0					
ANR	4733780	PrimaryExpression	1		4733736	0					
ANR	4733781	ForStatement	for ( i = 0 ; i < size ; i ++ )		4733736	5					
ANR	4733782	ForInit	i = 0 ;	99:6:2242:2247	4733736	0	True				
ANR	4733783	AssignmentExpression	i = 0		4733736	0		=			
ANR	4733784	Identifier	i		4733736	0					
ANR	4733785	PrimaryExpression	0		4733736	1					
ANR	4733786	Condition	i < size	99:13:2249:2256	4733736	1	True				
ANR	4733787	RelationalExpression	i < size		4733736	0		<			
ANR	4733788	Identifier	i		4733736	0					
ANR	4733789	Identifier	size		4733736	1					
ANR	4733790	PostIncDecOperationExpression	i ++	99:23:2259:2261	4733736	2	True				
ANR	4733791	Identifier	i		4733736	0					
ANR	4733792	IncDec	++		4733736	1					
ANR	4733793	CompoundStatement		16:1:251:251	4733736	3					
ANR	4733794	ExpressionStatement	array [ i ] = old . array [ i ]	101:2:2270:2293	4733736	0	True				
ANR	4733795	AssignmentExpression	array [ i ] = old . array [ i ]		4733736	0		=			
ANR	4733796	ArrayIndexing	array [ i ]		4733736	0					
ANR	4733797	Identifier	array		4733736	0					
ANR	4733798	Identifier	i		4733736	1					
ANR	4733799	ArrayIndexing	old . array [ i ]		4733736	1					
ANR	4733800	MemberAccess	old . array		4733736	0					
ANR	4733801	Identifier	old		4733736	0					
ANR	4733802	Identifier	array		4733736	1					
ANR	4733803	Identifier	i		4733736	1					
ANR	4733804	ExpressionStatement	filler = old . filler	105:1:2333:2352	4733736	6	True				
ANR	4733805	AssignmentExpression	filler = old . filler		4733736	0		=			
ANR	4733806	Identifier	filler		4733736	0					
ANR	4733807	MemberAccess	old . filler		4733736	1					
ANR	4733808	Identifier	old		4733736	0					
ANR	4733809	Identifier	filler		4733736	1					
ANR	4733810	Identifier	ExtArray		4733736	1					
ANR	4733811	ParameterList	const ExtArray & old		4733736	2					
ANR	4733812	Parameter	const ExtArray & old	84:10:1993:2011	4733736	0	True				
ANR	4733813	ParameterType	const ExtArray &		4733736	0					
ANR	4733814	Identifier	old		4733736	1					
ANR	4733815	CFGEntryNode	ENTRY		4733736		True				
ANR	4733816	CFGExitNode	EXIT		4733736		True				
ANR	4733817	Symbol	old . array		4733736						
ANR	4733818	Symbol	last		4733736						
ANR	4733819	Symbol	old		4733736						
ANR	4733820	Symbol	old . size		4733736						
ANR	4733821	Symbol	D_ALWAYS		4733736						
ANR	4733822	Symbol	i		4733736						
ANR	4733823	Symbol	old . last		4733736						
ANR	4733824	Symbol	* array		4733736						
ANR	4733825	Symbol	* old		4733736						
ANR	4733826	Symbol	* i		4733736						
ANR	4733827	Symbol	size		4733736						
ANR	4733828	Symbol	array		4733736						
ANR	4733829	Symbol	* old . array		4733736						
ANR	4733830	Symbol	filler		4733736						
ANR	4733831	Symbol	old . filler		4733736						
ANR	4733832	Function	~ExtArray	111:0:2403:2436							
ANR	4733833	FunctionDef	~ExtArray ()		4733832	0					
ANR	4733834	CompoundStatement		112:0:2416:2436	4733832	0					
ANR	4733835	Statement	delete	113:1:2419:2424	4733832	0	True				
ANR	4733836	Statement	[	113:8:2426:2426	4733832	1	True				
ANR	4733837	Statement	]	113:9:2427:2427	4733832	2	True				
ANR	4733838	ExpressionStatement	array	113:11:2429:2434	4733832	3	True				
ANR	4733839	Identifier	array		4733832	0					
ANR	4733840	Identifier	~ExtArray		4733832	1					
ANR	4733841	ParameterList			4733832	2					
ANR	4733842	CFGEntryNode	ENTRY		4733832		True				
ANR	4733843	CFGExitNode	EXIT		4733832		True				
ANR	4733844	Function	operator [ ]	119:0:2500:2651							
ANR	4733845	FunctionDef	operator [ ] (int i)		4733844	0					
ANR	4733846	CompoundStatement		120:0:2525:2651	4733844	0					
ANR	4733847	IfStatement	if ( i < 0 )		4733844	0					
ANR	4733848	Condition	i < 0	122:5:2549:2553	4733844	0	True				
ANR	4733849	RelationalExpression	i < 0		4733844	0		<			
ANR	4733850	Identifier	i		4733844	0					
ANR	4733851	PrimaryExpression	0		4733844	1					
ANR	4733852	CompoundStatement		4:1:32:32	4733844	1					
ANR	4733853	ExpressionStatement	i = 0	124:2:2562:2567	4733844	0	True				
ANR	4733854	AssignmentExpression	i = 0		4733844	0		=			
ANR	4733855	Identifier	i		4733844	0					
ANR	4733856	PrimaryExpression	0		4733844	1					
ANR	4733857	ElseStatement	else		4733844	0					
ANR	4733858	IfStatement	if ( i > last )		4733844	0					
ANR	4733859	Condition	i > last	126:10:2582:2589	4733844	0	True				
ANR	4733860	RelationalExpression	i > last		4733844	0		>			
ANR	4733861	Identifier	i		4733844	0					
ANR	4733862	Identifier	last		4733844	1					
ANR	4733863	CompoundStatement		8:1:68:68	4733844	1					
ANR	4733864	ReturnStatement	return filler ;	128:2:2598:2611	4733844	0	True				
ANR	4733865	Identifier	filler		4733844	0					
ANR	4733866	ReturnStatement	return array [ i ] ;	132:1:2634:2649	4733844	1	True				
ANR	4733867	ArrayIndexing	array [ i ]		4733844	0					
ANR	4733868	Identifier	array		4733844	0					
ANR	4733869	Identifier	i		4733844	1					
ANR	4733870	Identifier	operator [ ]		4733844	1					
ANR	4733871	ParameterList	int i		4733844	2					
ANR	4733872	Parameter	int i	119:12:2512:2516	4733844	0	True				
ANR	4733873	ParameterType	int		4733844	0					
ANR	4733874	Identifier	i		4733844	1					
ANR	4733875	CFGEntryNode	ENTRY		4733844		True				
ANR	4733876	CFGExitNode	EXIT		4733844		True				
ANR	4733877	Symbol	* i		4733844						
ANR	4733878	Symbol	last		4733844						
ANR	4733879	Symbol	array		4733844						
ANR	4733880	Symbol	filler		4733844						
ANR	4733881	Symbol	i		4733844						
ANR	4733882	Symbol	* array		4733844						
ANR	4733883	Function	operator [ ]	138:0:2716:2893							
ANR	4733884	FunctionDef	operator [ ] (int i)		4733883	0					
ANR	4733885	CompoundStatement		139:0:2735:2893	4733883	0					
ANR	4733886	IfStatement	if ( i < 0 )		4733883	0					
ANR	4733887	Condition	i < 0	141:5:2763:2767	4733883	0	True				
ANR	4733888	RelationalExpression	i < 0		4733883	0		<			
ANR	4733889	Identifier	i		4733883	0					
ANR	4733890	PrimaryExpression	0		4733883	1					
ANR	4733891	CompoundStatement		4:1:36:36	4733883	1					
ANR	4733892	ExpressionStatement	i = 0	143:2:2776:2781	4733883	0	True				
ANR	4733893	AssignmentExpression	i = 0		4733883	0		=			
ANR	4733894	Identifier	i		4733883	0					
ANR	4733895	PrimaryExpression	0		4733883	1					
ANR	4733896	ElseStatement	else		4733883	0					
ANR	4733897	IfStatement	if ( i >= size )		4733883	0					
ANR	4733898	Condition	i >= size	146:5:2798:2806	4733883	0	True				
ANR	4733899	RelationalExpression	i >= size		4733883	0		>=			
ANR	4733900	Identifier	i		4733883	0					
ANR	4733901	Identifier	size		4733883	1					
ANR	4733902	CompoundStatement		9:1:75:75	4733883	1					
ANR	4733903	ExpressionStatement	resize ( 2 * i )	148:2:2815:2827	4733883	0	True				
ANR	4733904	CallExpression	resize ( 2 * i )		4733883	0					
ANR	4733905	Callee	resize		4733883	0					
ANR	4733906	Identifier	resize		4733883	0					
ANR	4733907	ArgumentList	2 * i		4733883	1					
ANR	4733908	Argument	2 * i		4733883	0					
ANR	4733909	MultiplicativeExpression	2 * i		4733883	0		*			
ANR	4733910	PrimaryExpression	2		4733883	0					
ANR	4733911	Identifier	i		4733883	1					
ANR	4733912	IfStatement	if ( i > last )		4733883	1					
ANR	4733913	Condition	i > last	152:5:2854:2861	4733883	0	True				
ANR	4733914	RelationalExpression	i > last		4733883	0		>			
ANR	4733915	Identifier	i		4733883	0					
ANR	4733916	Identifier	last		4733883	1					
ANR	4733917	ExpressionStatement	last = i	152:16:2865:2873	4733883	1	True				
ANR	4733918	AssignmentExpression	last = i		4733883	0		=			
ANR	4733919	Identifier	last		4733883	0					
ANR	4733920	Identifier	i		4733883	1					
ANR	4733921	ReturnStatement	return array [ i ] ;	153:1:2876:2891	4733883	2	True				
ANR	4733922	ArrayIndexing	array [ i ]		4733883	0					
ANR	4733923	Identifier	array		4733883	0					
ANR	4733924	Identifier	i		4733883	1					
ANR	4733925	Identifier	operator [ ]		4733883	1					
ANR	4733926	ParameterList	int i		4733883	2					
ANR	4733927	Parameter	int i	138:12:2728:2732	4733883	0	True				
ANR	4733928	ParameterType	int		4733883	0					
ANR	4733929	Identifier	i		4733883	1					
ANR	4733930	CFGEntryNode	ENTRY		4733883		True				
ANR	4733931	CFGExitNode	EXIT		4733883		True				
ANR	4733932	Symbol	* i		4733883						
ANR	4733933	Symbol	size		4733883						
ANR	4733934	Symbol	last		4733883						
ANR	4733935	Symbol	array		4733883						
ANR	4733936	Symbol	i		4733883						
ANR	4733937	Symbol	* array		4733883						
ANR	4733938	Function	set	163:0:3067:3806							
ANR	4733939	FunctionDef	"set (int idx , Element elt)"		4733938	0					
ANR	4733940	CompoundStatement		164:0:3096:3806	4733938	0					
ANR	4733941	IfStatement	if ( idx < 0 )		4733938	0					
ANR	4733942	Condition	idx < 0	171:6:3291:3297	4733938	0	True				
ANR	4733943	RelationalExpression	idx < 0		4733938	0		<			
ANR	4733944	Identifier	idx		4733938	0					
ANR	4733945	PrimaryExpression	0		4733938	1					
ANR	4733946	CompoundStatement		8:16:204:204	4733938	1					
ANR	4733947	ExpressionStatement	idx = 0	172:2:3306:3313	4733938	0	True				
ANR	4733948	AssignmentExpression	idx = 0		4733938	0		=			
ANR	4733949	Identifier	idx		4733938	0					
ANR	4733950	PrimaryExpression	0		4733938	1					
ANR	4733951	ElseStatement	else		4733938	0					
ANR	4733952	IfStatement	if ( idx >= this -> size )		4733938	0					
ANR	4733953	Condition	idx >= this -> size	177:13:3412:3428	4733938	0	True				
ANR	4733954	RelationalExpression	idx >= this -> size		4733938	0		>=			
ANR	4733955	Identifier	idx		4733938	0					
ANR	4733956	PtrMemberAccess	this -> size		4733938	1					
ANR	4733957	Identifier	this		4733938	0					
ANR	4733958	Identifier	size		4733938	1					
ANR	4733959	CompoundStatement		15:2:339:364	4733938	1					
ANR	4733960	IdentifierDeclStatement	int newSize = idx * 2 + 2 ;	178:2:3436:3461	4733938	0	True				
ANR	4733961	IdentifierDecl	newSize = idx * 2 + 2		4733938	0					
ANR	4733962	IdentifierDeclType	int		4733938	0					
ANR	4733963	Identifier	newSize		4733938	1					
ANR	4733964	AssignmentExpression	newSize = idx * 2 + 2		4733938	2		=			
ANR	4733965	Identifier	newSize		4733938	0					
ANR	4733966	AdditiveExpression	idx * 2 + 2		4733938	1		+			
ANR	4733967	MultiplicativeExpression	idx * 2		4733938	0		*			
ANR	4733968	Identifier	idx		4733938	0					
ANR	4733969	PrimaryExpression	2		4733938	1					
ANR	4733970	PrimaryExpression	2		4733938	1					
ANR	4733971	ExpressionStatement	this -> resize ( newSize )	179:2:3490:3513	4733938	1	True				
ANR	4733972	CallExpression	this -> resize ( newSize )		4733938	0					
ANR	4733973	Callee	this -> resize		4733938	0					
ANR	4733974	PtrMemberAccess	this -> resize		4733938	0					
ANR	4733975	Identifier	this		4733938	0					
ANR	4733976	Identifier	resize		4733938	1					
ANR	4733977	ArgumentList	newSize		4733938	1					
ANR	4733978	Argument	newSize		4733938	0					
ANR	4733979	Identifier	newSize		4733938	0					
ANR	4733980	IfStatement	if ( idx > this -> last )		4733938	1					
ANR	4733981	Condition	idx > this -> last	185:6:3625:3640	4733938	0	True				
ANR	4733982	RelationalExpression	idx > this -> last		4733938	0		>			
ANR	4733983	Identifier	idx		4733938	0					
ANR	4733984	PtrMemberAccess	this -> last		4733938	1					
ANR	4733985	Identifier	this		4733938	0					
ANR	4733986	Identifier	last		4733938	1					
ANR	4733987	CompoundStatement		22:25:547:547	4733938	1					
ANR	4733988	ExpressionStatement	this -> last = idx	186:2:3648:3664	4733938	0	True				
ANR	4733989	AssignmentExpression	this -> last = idx		4733938	0		=			
ANR	4733990	PtrMemberAccess	this -> last		4733938	0					
ANR	4733991	Identifier	this		4733938	0					
ANR	4733992	Identifier	last		4733938	1					
ANR	4733993	Identifier	idx		4733938	1					
ANR	4733994	IdentifierDeclStatement	Element orig = this -> array [ idx ] ;	192:1:3730:3761	4733938	2	True				
ANR	4733995	IdentifierDecl	orig = this -> array [ idx ]		4733938	0					
ANR	4733996	IdentifierDeclType	Element		4733938	0					
ANR	4733997	Identifier	orig		4733938	1					
ANR	4733998	AssignmentExpression	orig = this -> array [ idx ]		4733938	2		=			
ANR	4733999	Identifier	orig		4733938	0					
ANR	4734000	ArrayIndexing	this -> array [ idx ]		4733938	1					
ANR	4734001	PtrMemberAccess	this -> array		4733938	0					
ANR	4734002	Identifier	this		4733938	0					
ANR	4734003	Identifier	array		4733938	1					
ANR	4734004	Identifier	idx		4733938	1					
ANR	4734005	ExpressionStatement	this -> array [ idx ] = elt	193:1:3764:3786	4733938	3	True				
ANR	4734006	AssignmentExpression	this -> array [ idx ] = elt		4733938	0		=			
ANR	4734007	ArrayIndexing	this -> array [ idx ]		4733938	0					
ANR	4734008	PtrMemberAccess	this -> array		4733938	0					
ANR	4734009	Identifier	this		4733938	0					
ANR	4734010	Identifier	array		4733938	1					
ANR	4734011	Identifier	idx		4733938	1					
ANR	4734012	Identifier	elt		4733938	1					
ANR	4734013	ReturnStatement	return ( orig ) ;	194:1:3789:3804	4733938	4	True				
ANR	4734014	Identifier	orig		4733938	0					
ANR	4734015	Identifier	set		4733938	1					
ANR	4734016	ParameterList	"int idx , Element elt"		4733938	2					
ANR	4734017	Parameter	int idx	163:5:3072:3078	4733938	0	True				
ANR	4734018	ParameterType	int		4733938	0					
ANR	4734019	Identifier	idx		4733938	1					
ANR	4734020	Parameter	Element elt	163:14:3081:3091	4733938	1	True				
ANR	4734021	ParameterType	Element		4733938	0					
ANR	4734022	Identifier	elt		4733938	1					
ANR	4734023	CFGEntryNode	ENTRY		4733938		True				
ANR	4734024	CFGExitNode	EXIT		4733938		True				
ANR	4734025	Symbol	* this		4733938						
ANR	4734026	Symbol	orig		4733938						
ANR	4734027	Symbol	this -> size		4733938						
ANR	4734028	Symbol	this -> last		4733938						
ANR	4734029	Symbol	* * this		4733938						
ANR	4734030	Symbol	this		4733938						
ANR	4734031	Symbol	* idx		4733938						
ANR	4734032	Symbol	newSize		4733938						
ANR	4734033	Symbol	idx		4733938						
ANR	4734034	Symbol	elt		4733938						
ANR	4734035	Symbol	* this -> array		4733938						
ANR	4734036	Symbol	this -> array		4733938						
ANR	4734037	Function	add	204:0:3990:4175							
ANR	4734038	FunctionDef	add (Element elt)		4734037	0					
ANR	4734039	CompoundStatement		205:0:4010:4175	4734037	0					
ANR	4734040	ReturnStatement	"return ( this -> set ( this -> last + 1 , elt ) ) ;"	211:1:4130:4173	4734037	0	True				
ANR	4734041	CallExpression	"this -> set ( this -> last + 1 , elt )"		4734037	0					
ANR	4734042	Callee	this -> set		4734037	0					
ANR	4734043	PtrMemberAccess	this -> set		4734037	0					
ANR	4734044	Identifier	this		4734037	0					
ANR	4734045	Identifier	set		4734037	1					
ANR	4734046	ArgumentList	this -> last + 1		4734037	1					
ANR	4734047	Argument	this -> last + 1		4734037	0					
ANR	4734048	AdditiveExpression	this -> last + 1		4734037	0		+			
ANR	4734049	PtrMemberAccess	this -> last		4734037	0					
ANR	4734050	Identifier	this		4734037	0					
ANR	4734051	Identifier	last		4734037	1					
ANR	4734052	PrimaryExpression	1		4734037	1					
ANR	4734053	Argument	elt		4734037	1					
ANR	4734054	Identifier	elt		4734037	0					
ANR	4734055	Identifier	add		4734037	1					
ANR	4734056	ParameterList	Element elt		4734037	2					
ANR	4734057	Parameter	Element elt	204:5:3995:4005	4734037	0	True				
ANR	4734058	ParameterType	Element		4734037	0					
ANR	4734059	Identifier	elt		4734037	1					
ANR	4734060	CFGEntryNode	ENTRY		4734037		True				
ANR	4734061	CFGExitNode	EXIT		4734037		True				
ANR	4734062	Symbol	* this		4734037						
ANR	4734063	Symbol	this -> last		4734037						
ANR	4734064	Symbol	this		4734037						
ANR	4734065	Symbol	elt		4734037						
ANR	4734066	Symbol	this -> set		4734037						
ANR	4734067	Function	getElementAt	220:0:4267:4454							
ANR	4734068	FunctionDef	getElementAt (int idx)		4734067	0					
ANR	4734069	CompoundStatement		221:0:4291:4454	4734067	0					
ANR	4734070	IfStatement	if ( idx < 0 )		4734067	0					
ANR	4734071	Condition	idx < 0	225:6:4360:4366	4734067	0	True				
ANR	4734072	RelationalExpression	idx < 0		4734067	0		<			
ANR	4734073	Identifier	idx		4734067	0					
ANR	4734074	PrimaryExpression	0		4734067	1					
ANR	4734075	CompoundStatement		5:17:79:79	4734067	1					
ANR	4734076	ExpressionStatement	idx = 0	226:2:4375:4382	4734067	0	True				
ANR	4734077	AssignmentExpression	idx = 0		4734067	0		=			
ANR	4734078	Identifier	idx		4734067	0					
ANR	4734079	PrimaryExpression	0		4734067	1					
ANR	4734080	ElseStatement	else		4734067	0					
ANR	4734081	IfStatement	if ( idx >= size )		4734067	0					
ANR	4734082	Condition	idx >= size	227:13:4397:4407	4734067	0	True				
ANR	4734083	RelationalExpression	idx >= size		4734067	0		>=			
ANR	4734084	Identifier	idx		4734067	0					
ANR	4734085	Identifier	size		4734067	1					
ANR	4734086	CompoundStatement		7:27:119:119	4734067	1					
ANR	4734087	ExpressionStatement	idx = size	228:2:4415:4425	4734067	0	True				
ANR	4734088	AssignmentExpression	idx = size		4734067	0		=			
ANR	4734089	Identifier	idx		4734067	0					
ANR	4734090	Identifier	size		4734067	1					
ANR	4734091	ReturnStatement	return ( array [ idx ] ) ;	230:1:4431:4452	4734067	1	True				
ANR	4734092	ArrayIndexing	array [ idx ]		4734067	0					
ANR	4734093	Identifier	array		4734067	0					
ANR	4734094	Identifier	idx		4734067	1					
ANR	4734095	Identifier	getElementAt		4734067	1					
ANR	4734096	ParameterList	int idx		4734067	2					
ANR	4734097	Parameter	int idx	220:14:4281:4287	4734067	0	True				
ANR	4734098	ParameterType	int		4734067	0					
ANR	4734099	Identifier	idx		4734067	1					
ANR	4734100	CFGEntryNode	ENTRY		4734067		True				
ANR	4734101	CFGExitNode	EXIT		4734067		True				
ANR	4734102	Symbol	size		4734067						
ANR	4734103	Symbol	array		4734067						
ANR	4734104	Symbol	* idx		4734067						
ANR	4734105	Symbol	idx		4734067						
ANR	4734106	Symbol	* array		4734067						
ANR	4734107	Function	getsize	235:0:4513:4550							
ANR	4734108	FunctionDef	getsize ()		4734107	0					
ANR	4734109	CompoundStatement		236:0:4534:4550	4734107	0					
ANR	4734110	ReturnStatement	return size ;	237:1:4537:4548	4734107	0	True				
ANR	4734111	Identifier	size		4734107	0					
ANR	4734112	Identifier	getsize		4734107	1					
ANR	4734113	ParameterList			4734107	2					
ANR	4734114	CFGEntryNode	ENTRY		4734107		True				
ANR	4734115	CFGExitNode	EXIT		4734107		True				
ANR	4734116	Symbol	size		4734107						
ANR	4734117	Function	length	242:0:4609:4716							
ANR	4734118	FunctionDef	length ()		4734117	0					
ANR	4734119	CompoundStatement		243:0:4629:4716	4734117	0					
ANR	4734120	ReturnStatement	return this -> getlast ( ) + 1 ;	245:1:4688:4714	4734117	0	True				
ANR	4734121	AdditiveExpression	this -> getlast ( ) + 1		4734117	0		+			
ANR	4734122	CallExpression	this -> getlast ( )		4734117	0					
ANR	4734123	Callee	this -> getlast		4734117	0					
ANR	4734124	PtrMemberAccess	this -> getlast		4734117	0					
ANR	4734125	Identifier	this		4734117	0					
ANR	4734126	Identifier	getlast		4734117	1					
ANR	4734127	ArgumentList			4734117	1					
ANR	4734128	PrimaryExpression	1		4734117	1					
ANR	4734129	Identifier	length		4734117	1					
ANR	4734130	ParameterList			4734117	2					
ANR	4734131	CFGEntryNode	ENTRY		4734117		True				
ANR	4734132	CFGExitNode	EXIT		4734117		True				
ANR	4734133	Symbol	* this		4734117						
ANR	4734134	Symbol	this -> getlast		4734117						
ANR	4734135	Symbol	this		4734117						
ANR	4734136	Function	getlast	251:0:4776:4813							
ANR	4734137	FunctionDef	getlast ()		4734136	0					
ANR	4734138	CompoundStatement		252:0:4797:4813	4734136	0					
ANR	4734139	ReturnStatement	return last ;	253:1:4800:4811	4734136	0	True				
ANR	4734140	Identifier	last		4734136	0					
ANR	4734141	Identifier	getlast		4734136	1					
ANR	4734142	ParameterList			4734136	2					
ANR	4734143	CFGEntryNode	ENTRY		4734136		True				
ANR	4734144	CFGExitNode	EXIT		4734136		True				
ANR	4734145	Symbol	last		4734136						
ANR	4734146	Function	getarray	258:0:4877:4911							
ANR	4734147	FunctionDef	getarray ()		4734146	0					
ANR	4734148	CompoundStatement		259:0:4894:4911	4734146	0					
ANR	4734149	ReturnStatement	return array ;	260:1:4897:4909	4734146	0	True				
ANR	4734150	Identifier	array		4734146	0					
ANR	4734151	Identifier	getarray		4734146	1					
ANR	4734152	ParameterList			4734146	2					
ANR	4734153	CFGEntryNode	ENTRY		4734146		True				
ANR	4734154	CFGExitNode	EXIT		4734146		True				
ANR	4734155	Symbol	array		4734146						
ANR	4734156	Function	resize	266:0:4965:5538							
ANR	4734157	FunctionDef	resize (int newsz)		4734156	0					
ANR	4734158	CompoundStatement		266:19:4984:5538	4734156	0					
ANR	4734159	IdentifierDeclStatement	Element * newarray = new Element [ newsz ] ;	267:1:4987:5025	4734156	0	True				
ANR	4734160	IdentifierDecl	* newarray = new Element [ newsz ]		4734156	0					
ANR	4734161	IdentifierDeclType	Element *		4734156	0					
ANR	4734162	Identifier	newarray		4734156	1					
ANR	4734163	AssignmentExpression	* newarray = new Element [ newsz ]		4734156	2		=			
ANR	4734164	Identifier	newsz		4734156	0					
ANR	4734165	Identifier	newsz		4734156	1					
ANR	4734166	IdentifierDeclStatement	int index = ( size < newsz ) ? size : newsz ;	268:1:5028:5070	4734156	1	True				
ANR	4734167	IdentifierDecl	index = ( size < newsz ) ? size : newsz		4734156	0					
ANR	4734168	IdentifierDeclType	int		4734156	0					
ANR	4734169	Identifier	index		4734156	1					
ANR	4734170	AssignmentExpression	index = ( size < newsz ) ? size : newsz		4734156	2		=			
ANR	4734171	Identifier	index		4734156	0					
ANR	4734172	ConditionalExpression	( size < newsz ) ? size : newsz		4734156	1					
ANR	4734173	Condition	size < newsz		4734156	0					
ANR	4734174	RelationalExpression	size < newsz		4734156	0		<			
ANR	4734175	Identifier	size		4734156	0					
ANR	4734176	Identifier	newsz		4734156	1					
ANR	4734177	Identifier	size		4734156	1					
ANR	4734178	Identifier	newsz		4734156	2					
ANR	4734179	IdentifierDeclStatement	int i ;	269:1:5073:5078	4734156	2	True				
ANR	4734180	IdentifierDecl	i		4734156	0					
ANR	4734181	IdentifierDeclType	int		4734156	0					
ANR	4734182	Identifier	i		4734156	1					
ANR	4734183	IfStatement	if ( ! newarray )		4734156	3					
ANR	4734184	Condition	! newarray	272:5:5132:5140	4734156	0	True				
ANR	4734185	UnaryOperationExpression	! newarray		4734156	0					
ANR	4734186	UnaryOperator	!		4734156	0					
ANR	4734187	Identifier	newarray		4734156	1					
ANR	4734188	CompoundStatement		8:1:160:160	4734156	1					
ANR	4734189	ExpressionStatement	"dprintf ( D_ALWAYS , ""ExtArray: Out of memory"" )"	274:2:5149:5194	4734156	0	True				
ANR	4734190	CallExpression	"dprintf ( D_ALWAYS , ""ExtArray: Out of memory"" )"		4734156	0					
ANR	4734191	Callee	dprintf		4734156	0					
ANR	4734192	Identifier	dprintf		4734156	0					
ANR	4734193	ArgumentList	D_ALWAYS		4734156	1					
ANR	4734194	Argument	D_ALWAYS		4734156	0					
ANR	4734195	Identifier	D_ALWAYS		4734156	0					
ANR	4734196	Argument	"""ExtArray: Out of memory"""		4734156	1					
ANR	4734197	PrimaryExpression	"""ExtArray: Out of memory"""		4734156	0					
ANR	4734198	ExpressionStatement	exit ( 1 )	275:2:5198:5206	4734156	1	True				
ANR	4734199	CallExpression	exit ( 1 )		4734156	0					
ANR	4734200	Callee	exit		4734156	0					
ANR	4734201	Identifier	exit		4734156	0					
ANR	4734202	ArgumentList	1		4734156	1					
ANR	4734203	Argument	1		4734156	0					
ANR	4734204	PrimaryExpression	1		4734156	0					
ANR	4734205	ForStatement	for ( i = index ; i < newsz ; i ++ )		4734156	4					
ANR	4734206	ForInit	i = index ;	280:6:5314:5321	4734156	0	True				
ANR	4734207	AssignmentExpression	i = index		4734156	0		=			
ANR	4734208	Identifier	i		4734156	0					
ANR	4734209	Identifier	index		4734156	1					
ANR	4734210	Condition	i < newsz	280:14:5322:5328	4734156	1	True				
ANR	4734211	RelationalExpression	i < newsz		4734156	0		<			
ANR	4734212	Identifier	i		4734156	0					
ANR	4734213	Identifier	newsz		4734156	1					
ANR	4734214	PostIncDecOperationExpression	i ++	280:22:5330:5332	4734156	2	True				
ANR	4734215	Identifier	i		4734156	0					
ANR	4734216	IncDec	++		4734156	1					
ANR	4734217	CompoundStatement		16:1:352:352	4734156	3					
ANR	4734218	ExpressionStatement	newarray [ i ] = filler	282:2:5341:5361	4734156	0	True				
ANR	4734219	AssignmentExpression	newarray [ i ] = filler		4734156	0		=			
ANR	4734220	ArrayIndexing	newarray [ i ]		4734156	0					
ANR	4734221	Identifier	newarray		4734156	0					
ANR	4734222	Identifier	i		4734156	1					
ANR	4734223	Identifier	filler		4734156	1					
ANR	4734224	WhileStatement	while ( -- index >= 0 )		4734156	5					
ANR	4734225	Condition	-- index >= 0	286:8:5411:5422	4734156	0	True				
ANR	4734226	RelationalExpression	-- index >= 0		4734156	0		>=			
ANR	4734227	UnaryExpression	-- index		4734156	0					
ANR	4734228	IncDec	--		4734156	0					
ANR	4734229	Identifier	index		4734156	1					
ANR	4734230	PrimaryExpression	0		4734156	1					
ANR	4734231	CompoundStatement		22:1:442:442	4734156	1					
ANR	4734232	ExpressionStatement	newarray [ index ] = array [ index ]	288:2:5431:5461	4734156	0	True				
ANR	4734233	AssignmentExpression	newarray [ index ] = array [ index ]		4734156	0		=			
ANR	4734234	ArrayIndexing	newarray [ index ]		4734156	0					
ANR	4734235	Identifier	newarray		4734156	0					
ANR	4734236	Identifier	index		4734156	1					
ANR	4734237	ArrayIndexing	array [ index ]		4734156	1					
ANR	4734238	Identifier	array		4734156	0					
ANR	4734239	Identifier	index		4734156	1					
ANR	4734240	Statement	delete	292:1:5486:5491	4734156	6	True				
ANR	4734241	Statement	[	292:8:5493:5493	4734156	7	True				
ANR	4734242	Statement	]	292:9:5494:5494	4734156	8	True				
ANR	4734243	ExpressionStatement	array	292:11:5496:5501	4734156	9	True				
ANR	4734244	Identifier	array		4734156	0					
ANR	4734245	ExpressionStatement	size = newsz	293:1:5504:5516	4734156	10	True				
ANR	4734246	AssignmentExpression	size = newsz		4734156	0		=			
ANR	4734247	Identifier	size		4734156	0					
ANR	4734248	Identifier	newsz		4734156	1					
ANR	4734249	ExpressionStatement	array = newarray	294:1:5520:5536	4734156	11	True				
ANR	4734250	AssignmentExpression	array = newarray		4734156	0		=			
ANR	4734251	Identifier	array		4734156	0					
ANR	4734252	Identifier	newarray		4734156	1					
ANR	4734253	Identifier	resize		4734156	1					
ANR	4734254	ParameterList	int newsz		4734156	2					
ANR	4734255	Parameter	int newsz	266:8:4973:4981	4734156	0	True				
ANR	4734256	ParameterType	int		4734156	0					
ANR	4734257	Identifier	newsz		4734156	1					
ANR	4734258	CFGEntryNode	ENTRY		4734156		True				
ANR	4734259	CFGExitNode	EXIT		4734156		True				
ANR	4734260	Symbol	* newarray		4734156						
ANR	4734261	Symbol	* i		4734156						
ANR	4734262	Symbol	size		4734156						
ANR	4734263	Symbol	array		4734156						
ANR	4734264	Symbol	* index		4734156						
ANR	4734265	Symbol	D_ALWAYS		4734156						
ANR	4734266	Symbol	filler		4734156						
ANR	4734267	Symbol	index		4734156						
ANR	4734268	Symbol	i		4734156						
ANR	4734269	Symbol	newsz		4734156						
ANR	4734270	Symbol	newarray		4734156						
ANR	4734271	Symbol	* array		4734156						
ANR	4734272	Function	truncate	300:0:5592:5634							
ANR	4734273	FunctionDef	truncate (int newlast)		4734272	0					
ANR	4734274	CompoundStatement		301:0:5615:5634	4734272	0					
ANR	4734275	ExpressionStatement	last = newlast	302:1:5618:5632	4734272	0	True				
ANR	4734276	AssignmentExpression	last = newlast		4734272	0		=			
ANR	4734277	Identifier	last		4734272	0					
ANR	4734278	Identifier	newlast		4734272	1					
ANR	4734279	Identifier	truncate		4734272	1					
ANR	4734280	ParameterList	int newlast		4734272	2					
ANR	4734281	Parameter	int newlast	300:10:5602:5612	4734272	0	True				
ANR	4734282	ParameterType	int		4734272	0					
ANR	4734283	Identifier	newlast		4734272	1					
ANR	4734284	CFGEntryNode	ENTRY		4734272		True				
ANR	4734285	CFGExitNode	EXIT		4734272		True				
ANR	4734286	Symbol	newlast		4734272						
ANR	4734287	Symbol	last		4734272						
ANR	4734288	Function	fill	308:0:5690:5780							
ANR	4734289	FunctionDef	fill (Element elt)		4734288	0					
ANR	4734290	CompoundStatement		309:0:5709:5780	4734288	0					
ANR	4734291	IdentifierDeclStatement	int i ;	310:1:5712:5717	4734288	0	True				
ANR	4734292	IdentifierDecl	i		4734288	0					
ANR	4734293	IdentifierDeclType	int		4734288	0					
ANR	4734294	Identifier	i		4734288	1					
ANR	4734295	ForStatement	for ( i = 0 ; i < size ; i ++ )		4734288	1					
ANR	4734296	ForInit	i = 0 ;	311:6:5725:5730	4734288	0	True				
ANR	4734297	AssignmentExpression	i = 0		4734288	0		=			
ANR	4734298	Identifier	i		4734288	0					
ANR	4734299	PrimaryExpression	0		4734288	1					
ANR	4734300	Condition	i < size	311:13:5732:5739	4734288	1	True				
ANR	4734301	RelationalExpression	i < size		4734288	0		<			
ANR	4734302	Identifier	i		4734288	0					
ANR	4734303	Identifier	size		4734288	1					
ANR	4734304	PostIncDecOperationExpression	i ++	311:23:5742:5744	4734288	2	True				
ANR	4734305	Identifier	i		4734288	0					
ANR	4734306	IncDec	++		4734288	1					
ANR	4734307	ExpressionStatement	array [ i ] = elt	312:2:5749:5763	4734288	3	True				
ANR	4734308	AssignmentExpression	array [ i ] = elt		4734288	0		=			
ANR	4734309	ArrayIndexing	array [ i ]		4734288	0					
ANR	4734310	Identifier	array		4734288	0					
ANR	4734311	Identifier	i		4734288	1					
ANR	4734312	Identifier	elt		4734288	1					
ANR	4734313	ExpressionStatement	filler = elt	313:1:5766:5778	4734288	2	True				
ANR	4734314	AssignmentExpression	filler = elt		4734288	0		=			
ANR	4734315	Identifier	filler		4734288	0					
ANR	4734316	Identifier	elt		4734288	1					
ANR	4734317	Identifier	fill		4734288	1					
ANR	4734318	ParameterList	Element elt		4734288	2					
ANR	4734319	Parameter	Element elt	308:6:5696:5706	4734288	0	True				
ANR	4734320	ParameterType	Element		4734288	0					
ANR	4734321	Identifier	elt		4734288	1					
ANR	4734322	CFGEntryNode	ENTRY		4734288		True				
ANR	4734323	CFGExitNode	EXIT		4734288		True				
ANR	4734324	Symbol	* i		4734288						
ANR	4734325	Symbol	size		4734288						
ANR	4734326	Symbol	array		4734288						
ANR	4734327	Symbol	filler		4734288						
ANR	4734328	Symbol	i		4734288						
ANR	4734329	Symbol	elt		4734288						
ANR	4734330	Symbol	* array		4734288						
ANR	4734331	Function	setFiller	318:0:5833:5875							
ANR	4734332	FunctionDef	setFiller (Element elt)		4734331	0					
ANR	4734333	CompoundStatement		319:0:5858:5875	4734331	0					
ANR	4734334	ExpressionStatement	filler = elt	320:1:5861:5873	4734331	0	True				
ANR	4734335	AssignmentExpression	filler = elt		4734331	0		=			
ANR	4734336	Identifier	filler		4734331	0					
ANR	4734337	Identifier	elt		4734331	1					
ANR	4734338	Identifier	setFiller		4734331	1					
ANR	4734339	ParameterList	Element elt		4734331	2					
ANR	4734340	Parameter	Element elt	318:11:5844:5854	4734331	0	True				
ANR	4734341	ParameterType	Element		4734331	0					
ANR	4734342	Identifier	elt		4734331	1					
ANR	4734343	CFGEntryNode	ENTRY		4734331		True				
ANR	4734344	CFGExitNode	EXIT		4734331		True				
ANR	4734345	Symbol	filler		4734331						
ANR	4734346	Symbol	elt		4734331						
