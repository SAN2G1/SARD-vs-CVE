command	key	type	code	location	functionId	childNum	isCFGNode	operator	baseType	completeType	identifier
ANR	1146885	File	data/converged/CVE-2011-4930_htcondor/dap_q.cpp								
ANR	1146886	Function	main	36:0:1185:2670							
ANR	1146887	FunctionDef	"main (int argc , char * * argv)"		1146886	0					
ANR	1146888	CompoundStatement		37:0:1217:2670	1146886	0					
ANR	1146889	IdentifierDeclStatement	struct stork_global_opts global_opts ;	38:1:1220:1256	1146886	0	True				
ANR	1146890	IdentifierDecl	global_opts		1146886	0					
ANR	1146891	IdentifierDeclType	struct stork_global_opts		1146886	0					
ANR	1146892	Identifier	global_opts		1146886	1					
ANR	1146893	ExpressionStatement	config ( )	39:1:1259:1267	1146886	1	True				
ANR	1146894	CallExpression	config ( )		1146886	0					
ANR	1146895	Callee	config		1146886	0					
ANR	1146896	Identifier	config		1146886	0					
ANR	1146897	ArgumentList			1146886	1					
ANR	1146898	ExpressionStatement	"stork_parse_global_opts ( argc , argv , USAGE , & global_opts , true )"	42:1:1327:1389	1146886	2	True				
ANR	1146899	CallExpression	"stork_parse_global_opts ( argc , argv , USAGE , & global_opts , true )"		1146886	0					
ANR	1146900	Callee	stork_parse_global_opts		1146886	0					
ANR	1146901	Identifier	stork_parse_global_opts		1146886	0					
ANR	1146902	ArgumentList	argc		1146886	1					
ANR	1146903	Argument	argc		1146886	0					
ANR	1146904	Identifier	argc		1146886	0					
ANR	1146905	Argument	argv		1146886	1					
ANR	1146906	Identifier	argv		1146886	0					
ANR	1146907	Argument	USAGE		1146886	2					
ANR	1146908	Identifier	USAGE		1146886	0					
ANR	1146909	Argument	& global_opts		1146886	3					
ANR	1146910	UnaryOperationExpression	& global_opts		1146886	0					
ANR	1146911	UnaryOperator	&		1146886	0					
ANR	1146912	Identifier	global_opts		1146886	1					
ANR	1146913	Argument	true		1146886	4					
ANR	1146914	Identifier	true		1146886	0					
ANR	1146915	SwitchStatement	switch ( argc )		1146886	3					
ANR	1146916	Condition	argc	45:9:1430:1433	1146886	0	True				
ANR	1146917	Identifier	argc		1146886	0					
ANR	1146918	CompoundStatement		9:15:218:218	1146886	1					
ANR	1146919	Label	case 1 :	46:2:1440:1446	1146886	0	True				
ANR	1146920	BreakStatement	break ;	48:3:1468:1473	1146886	1	True				
ANR	1146921	Label	case 2 :	49:2:1477:1483	1146886	2	True				
ANR	1146922	IfStatement	if ( argv [ 1 ] [ 0 ] == '-' )		1146886	3					
ANR	1146923	Condition	argv [ 1 ] [ 0 ] == '-'	51:7:1554:1570	1146886	0	True				
ANR	1146924	EqualityExpression	argv [ 1 ] [ 0 ] == '-'		1146886	0		==			
ANR	1146925	ArrayIndexing	argv [ 1 ] [ 0 ]		1146886	0					
ANR	1146926	ArrayIndexing	argv [ 1 ]		1146886	0					
ANR	1146927	Identifier	argv		1146886	0					
ANR	1146928	PrimaryExpression	1		1146886	1					
ANR	1146929	PrimaryExpression	0		1146886	1					
ANR	1146930	PrimaryExpression	'-'		1146886	1					
ANR	1146931	CompoundStatement		15:26:355:355	1146886	1					
ANR	1146932	ExpressionStatement	"fprintf ( stderr , ""unknown option: '%s'\\n"" , argv [ 1 ] )"	53:4:1613:1663	1146886	0	True				
ANR	1146933	CallExpression	"fprintf ( stderr , ""unknown option: '%s'\\n"" , argv [ 1 ] )"		1146886	0					
ANR	1146934	Callee	fprintf		1146886	0					
ANR	1146935	Identifier	fprintf		1146886	0					
ANR	1146936	ArgumentList	stderr		1146886	1					
ANR	1146937	Argument	stderr		1146886	0					
ANR	1146938	Identifier	stderr		1146886	0					
ANR	1146939	Argument	"""unknown option: '%s'\\n"""		1146886	1					
ANR	1146940	PrimaryExpression	"""unknown option: '%s'\\n"""		1146886	0					
ANR	1146941	Argument	argv [ 1 ]		1146886	2					
ANR	1146942	ArrayIndexing	argv [ 1 ]		1146886	0					
ANR	1146943	Identifier	argv		1146886	0					
ANR	1146944	PrimaryExpression	1		1146886	1					
ANR	1146945	ExpressionStatement	"stork_print_usage ( stderr , argv [ 0 ] , USAGE , true )"	54:4:1669:1716	1146886	1	True				
ANR	1146946	CallExpression	"stork_print_usage ( stderr , argv [ 0 ] , USAGE , true )"		1146886	0					
ANR	1146947	Callee	stork_print_usage		1146886	0					
ANR	1146948	Identifier	stork_print_usage		1146886	0					
ANR	1146949	ArgumentList	stderr		1146886	1					
ANR	1146950	Argument	stderr		1146886	0					
ANR	1146951	Identifier	stderr		1146886	0					
ANR	1146952	Argument	argv [ 0 ]		1146886	1					
ANR	1146953	ArrayIndexing	argv [ 0 ]		1146886	0					
ANR	1146954	Identifier	argv		1146886	0					
ANR	1146955	PrimaryExpression	0		1146886	1					
ANR	1146956	Argument	USAGE		1146886	2					
ANR	1146957	Identifier	USAGE		1146886	0					
ANR	1146958	Argument	true		1146886	3					
ANR	1146959	Identifier	true		1146886	0					
ANR	1146960	ExpressionStatement	exit ( 1 )	55:4:1722:1729	1146886	2	True				
ANR	1146961	CallExpression	exit ( 1 )		1146886	0					
ANR	1146962	Callee	exit		1146886	0					
ANR	1146963	Identifier	exit		1146886	0					
ANR	1146964	ArgumentList	1		1146886	1					
ANR	1146965	Argument	1		1146886	0					
ANR	1146966	PrimaryExpression	1		1146886	0					
ANR	1146967	ExpressionStatement	global_opts . server = argv [ 1 ]	57:3:1739:1767	1146886	4	True				
ANR	1146968	AssignmentExpression	global_opts . server = argv [ 1 ]		1146886	0		=			
ANR	1146969	MemberAccess	global_opts . server		1146886	0					
ANR	1146970	Identifier	global_opts		1146886	0					
ANR	1146971	Identifier	server		1146886	1					
ANR	1146972	ArrayIndexing	argv [ 1 ]		1146886	1					
ANR	1146973	Identifier	argv		1146886	0					
ANR	1146974	PrimaryExpression	1		1146886	1					
ANR	1146975	BreakStatement	break ;	58:3:1772:1777	1146886	5	True				
ANR	1146976	Label	default :	59:2:1781:1788	1146886	6	True				
ANR	1146977	Identifier	default		1146886	0					
ANR	1146978	ExpressionStatement	"fprintf ( stderr , ""too many arguments\\n"" )"	60:3:1793:1832	1146886	7	True				
ANR	1146979	CallExpression	"fprintf ( stderr , ""too many arguments\\n"" )"		1146886	0					
ANR	1146980	Callee	fprintf		1146886	0					
ANR	1146981	Identifier	fprintf		1146886	0					
ANR	1146982	ArgumentList	stderr		1146886	1					
ANR	1146983	Argument	stderr		1146886	0					
ANR	1146984	Identifier	stderr		1146886	0					
ANR	1146985	Argument	"""too many arguments\\n"""		1146886	1					
ANR	1146986	PrimaryExpression	"""too many arguments\\n"""		1146886	0					
ANR	1146987	ExpressionStatement	"stork_print_usage ( stderr , argv [ 0 ] , USAGE , true )"	61:3:1837:1884	1146886	8	True				
ANR	1146988	CallExpression	"stork_print_usage ( stderr , argv [ 0 ] , USAGE , true )"		1146886	0					
ANR	1146989	Callee	stork_print_usage		1146886	0					
ANR	1146990	Identifier	stork_print_usage		1146886	0					
ANR	1146991	ArgumentList	stderr		1146886	1					
ANR	1146992	Argument	stderr		1146886	0					
ANR	1146993	Identifier	stderr		1146886	0					
ANR	1146994	Argument	argv [ 0 ]		1146886	1					
ANR	1146995	ArrayIndexing	argv [ 0 ]		1146886	0					
ANR	1146996	Identifier	argv		1146886	0					
ANR	1146997	PrimaryExpression	0		1146886	1					
ANR	1146998	Argument	USAGE		1146886	2					
ANR	1146999	Identifier	USAGE		1146886	0					
ANR	1147000	Argument	true		1146886	3					
ANR	1147001	Identifier	true		1146886	0					
ANR	1147002	ExpressionStatement	exit ( 1 )	62:3:1889:1896	1146886	9	True				
ANR	1147003	CallExpression	exit ( 1 )		1146886	0					
ANR	1147004	Callee	exit		1146886	0					
ANR	1147005	Identifier	exit		1146886	0					
ANR	1147006	ArgumentList	1		1146886	1					
ANR	1147007	Argument	1		1146886	0					
ANR	1147008	PrimaryExpression	1		1146886	0					
ANR	1147009	IdentifierDeclStatement	char * error_reason = NULL ;	66:2:1905:1931	1146886	4	True				
ANR	1147010	IdentifierDecl	* error_reason = NULL		1146886	0					
ANR	1147011	IdentifierDeclType	char *		1146886	0					
ANR	1147012	Identifier	error_reason		1146886	1					
ANR	1147013	AssignmentExpression	* error_reason = NULL		1146886	2		=			
ANR	1147014	Identifier	NULL		1146886	0					
ANR	1147015	Identifier	NULL		1146886	1					
ANR	1147016	IdentifierDeclStatement	int result_size = 0 ;	67:2:1935:1954	1146886	5	True				
ANR	1147017	IdentifierDecl	result_size = 0		1146886	0					
ANR	1147018	IdentifierDeclType	int		1146886	0					
ANR	1147019	Identifier	result_size		1146886	1					
ANR	1147020	AssignmentExpression	result_size = 0		1146886	2		=			
ANR	1147021	Identifier	result_size		1146886	0					
ANR	1147022	PrimaryExpression	0		1146886	1					
ANR	1147023	IdentifierDeclStatement	classad :: ClassAd * * result = NULL ;	68:2:1958:1991	1146886	6	True				
ANR	1147024	IdentifierDecl	* * result = NULL		1146886	0					
ANR	1147025	IdentifierDeclType	classad :: ClassAd * *		1146886	0					
ANR	1147026	Identifier	result		1146886	1					
ANR	1147027	AssignmentExpression	* * result = NULL		1146886	2		=			
ANR	1147028	Identifier	NULL		1146886	0					
ANR	1147029	Identifier	NULL		1146886	1					
ANR	1147030	IdentifierDeclStatement	"int rc = stork_list ( global_opts . server , result_size , result , error_reason ) ;"	70:2:1996:2094	1146886	7	True				
ANR	1147031	IdentifierDecl	"rc = stork_list ( global_opts . server , result_size , result , error_reason )"		1146886	0					
ANR	1147032	IdentifierDeclType	int		1146886	0					
ANR	1147033	Identifier	rc		1146886	1					
ANR	1147034	AssignmentExpression	"rc = stork_list ( global_opts . server , result_size , result , error_reason )"		1146886	2		=			
ANR	1147035	Identifier	rc		1146886	0					
ANR	1147036	CallExpression	"stork_list ( global_opts . server , result_size , result , error_reason )"		1146886	1					
ANR	1147037	Callee	stork_list		1146886	0					
ANR	1147038	Identifier	stork_list		1146886	0					
ANR	1147039	ArgumentList	global_opts . server		1146886	1					
ANR	1147040	Argument	global_opts . server		1146886	0					
ANR	1147041	MemberAccess	global_opts . server		1146886	0					
ANR	1147042	Identifier	global_opts		1146886	0					
ANR	1147043	Identifier	server		1146886	1					
ANR	1147044	Argument	result_size		1146886	1					
ANR	1147045	Identifier	result_size		1146886	0					
ANR	1147046	Argument	result		1146886	2					
ANR	1147047	Identifier	result		1146886	0					
ANR	1147048	Argument	error_reason		1146886	3					
ANR	1147049	Identifier	error_reason		1146886	0					
ANR	1147050	IfStatement	if ( ! rc )		1146886	8					
ANR	1147051	Condition	! rc	77:6:2106:2108	1146886	0	True				
ANR	1147052	UnaryOperationExpression	! rc		1146886	0					
ANR	1147053	UnaryOperator	!		1146886	0					
ANR	1147054	Identifier	rc		1146886	1					
ANR	1147055	CompoundStatement		41:11:893:893	1146886	1					
ANR	1147056	ExpressionStatement	"fprintf ( stderr , ""ERROR getting list of jobs (%s)\\n"" , error_reason )"	78:3:2116:2190	1146886	0	True				
ANR	1147057	CallExpression	"fprintf ( stderr , ""ERROR getting list of jobs (%s)\\n"" , error_reason )"		1146886	0					
ANR	1147058	Callee	fprintf		1146886	0					
ANR	1147059	Identifier	fprintf		1146886	0					
ANR	1147060	ArgumentList	stderr		1146886	1					
ANR	1147061	Argument	stderr		1146886	0					
ANR	1147062	Identifier	stderr		1146886	0					
ANR	1147063	Argument	"""ERROR getting list of jobs (%s)\\n"""		1146886	1					
ANR	1147064	PrimaryExpression	"""ERROR getting list of jobs (%s)\\n"""		1146886	0					
ANR	1147065	Argument	error_reason		1146886	2					
ANR	1147066	Identifier	error_reason		1146886	0					
ANR	1147067	ElseStatement	else		1146886	0					
ANR	1147068	CompoundStatement		52:3:1165:1170	1146886	0					
ANR	1147069	ExpressionStatement	"fprintf ( stdout , ""===============\\n"" )"	81:3:2206:2242	1146886	0	True				
ANR	1147070	CallExpression	"fprintf ( stdout , ""===============\\n"" )"		1146886	0					
ANR	1147071	Callee	fprintf		1146886	0					
ANR	1147072	Identifier	fprintf		1146886	0					
ANR	1147073	ArgumentList	stdout		1146886	1					
ANR	1147074	Argument	stdout		1146886	0					
ANR	1147075	Identifier	stdout		1146886	0					
ANR	1147076	Argument	"""===============\\n"""		1146886	1					
ANR	1147077	PrimaryExpression	"""===============\\n"""		1146886	0					
ANR	1147078	ExpressionStatement	"fprintf ( stdout , ""job queue:\\n"" )"	82:3:2247:2278	1146886	1	True				
ANR	1147079	CallExpression	"fprintf ( stdout , ""job queue:\\n"" )"		1146886	0					
ANR	1147080	Callee	fprintf		1146886	0					
ANR	1147081	Identifier	fprintf		1146886	0					
ANR	1147082	ArgumentList	stdout		1146886	1					
ANR	1147083	Argument	stdout		1146886	0					
ANR	1147084	Identifier	stdout		1146886	0					
ANR	1147085	Argument	"""job queue:\\n"""		1146886	1					
ANR	1147086	PrimaryExpression	"""job queue:\\n"""		1146886	0					
ANR	1147087	ExpressionStatement	"fprintf ( stdout , ""===============\\n"" )"	83:3:2283:2319	1146886	2	True				
ANR	1147088	CallExpression	"fprintf ( stdout , ""===============\\n"" )"		1146886	0					
ANR	1147089	Callee	fprintf		1146886	0					
ANR	1147090	Identifier	fprintf		1146886	0					
ANR	1147091	ArgumentList	stdout		1146886	1					
ANR	1147092	Argument	stdout		1146886	0					
ANR	1147093	Identifier	stdout		1146886	0					
ANR	1147094	Argument	"""===============\\n"""		1146886	1					
ANR	1147095	PrimaryExpression	"""===============\\n"""		1146886	0					
ANR	1147096	IdentifierDeclStatement	classad :: PrettyPrint unparser ;	85:3:2325:2354	1146886	3	True				
ANR	1147097	IdentifierDecl	unparser		1146886	0					
ANR	1147098	IdentifierDeclType	classad :: PrettyPrint		1146886	0					
ANR	1147099	Identifier	unparser		1146886	1					
ANR	1147100	IdentifierDeclStatement	std :: string buffer ;	86:3:2359:2377	1146886	4	True				
ANR	1147101	IdentifierDecl	buffer		1146886	0					
ANR	1147102	IdentifierDeclType	std :: string		1146886	0					
ANR	1147103	Identifier	buffer		1146886	1					
ANR	1147104	IdentifierDeclStatement	int i ;	88:3:2383:2388	1146886	5	True				
ANR	1147105	IdentifierDecl	i		1146886	0					
ANR	1147106	IdentifierDeclType	int		1146886	0					
ANR	1147107	Identifier	i		1146886	1					
ANR	1147108	ForStatement	for ( i = 0 ; i < result_size ; i ++ )		1146886	6					
ANR	1147109	ForInit	i = 0 ;	89:8:2398:2401	1146886	0	True				
ANR	1147110	AssignmentExpression	i = 0		1146886	0		=			
ANR	1147111	Identifier	i		1146886	0					
ANR	1147112	PrimaryExpression	0		1146886	1					
ANR	1147113	Condition	i < result_size	89:13:2403:2415	1146886	1	True				
ANR	1147114	RelationalExpression	i < result_size		1146886	0		<			
ANR	1147115	Identifier	i		1146886	0					
ANR	1147116	Identifier	result_size		1146886	1					
ANR	1147117	PostIncDecOperationExpression	i ++	89:28:2418:2420	1146886	2	True				
ANR	1147118	Identifier	i		1146886	0					
ANR	1147119	IncDec	++		1146886	1					
ANR	1147120	CompoundStatement		53:33:1205:1205	1146886	3					
ANR	1147121	ExpressionStatement	"buffer = """""	90:4:2429:2440	1146886	0	True				
ANR	1147122	AssignmentExpression	"buffer = """""		1146886	0		=			
ANR	1147123	Identifier	buffer		1146886	0					
ANR	1147124	PrimaryExpression	""""""		1146886	1					
ANR	1147125	ExpressionStatement	"unparser . Unparse ( buffer , result [ i ] )"	91:4:2490:2526	1146886	1	True				
ANR	1147126	CallExpression	"unparser . Unparse ( buffer , result [ i ] )"		1146886	0					
ANR	1147127	Callee	unparser . Unparse		1146886	0					
ANR	1147128	MemberAccess	unparser . Unparse		1146886	0					
ANR	1147129	Identifier	unparser		1146886	0					
ANR	1147130	Identifier	Unparse		1146886	1					
ANR	1147131	ArgumentList	buffer		1146886	1					
ANR	1147132	Argument	buffer		1146886	0					
ANR	1147133	Identifier	buffer		1146886	0					
ANR	1147134	Argument	result [ i ]		1146886	1					
ANR	1147135	ArrayIndexing	result [ i ]		1146886	0					
ANR	1147136	Identifier	result		1146886	0					
ANR	1147137	Identifier	i		1146886	1					
ANR	1147138	ExpressionStatement	"fprintf ( stdout , ""\\n%s\\n"" , buffer . c_str ( ) )"	92:4:2532:2574	1146886	2	True				
ANR	1147139	CallExpression	"fprintf ( stdout , ""\\n%s\\n"" , buffer . c_str ( ) )"		1146886	0					
ANR	1147140	Callee	fprintf		1146886	0					
ANR	1147141	Identifier	fprintf		1146886	0					
ANR	1147142	ArgumentList	stdout		1146886	1					
ANR	1147143	Argument	stdout		1146886	0					
ANR	1147144	Identifier	stdout		1146886	0					
ANR	1147145	Argument	"""\\n%s\\n"""		1146886	1					
ANR	1147146	PrimaryExpression	"""\\n%s\\n"""		1146886	0					
ANR	1147147	Argument	buffer . c_str ( )		1146886	2					
ANR	1147148	CallExpression	buffer . c_str ( )		1146886	0					
ANR	1147149	Callee	buffer . c_str		1146886	0					
ANR	1147150	MemberAccess	buffer . c_str		1146886	0					
ANR	1147151	Identifier	buffer		1146886	0					
ANR	1147152	Identifier	c_str		1146886	1					
ANR	1147153	ArgumentList			1146886	1					
ANR	1147154	ExpressionStatement	"fprintf ( stdout , ""===============\\n"" )"	94:3:2584:2620	1146886	7	True				
ANR	1147155	CallExpression	"fprintf ( stdout , ""===============\\n"" )"		1146886	0					
ANR	1147156	Callee	fprintf		1146886	0					
ANR	1147157	Identifier	fprintf		1146886	0					
ANR	1147158	ArgumentList	stdout		1146886	1					
ANR	1147159	Argument	stdout		1146886	0					
ANR	1147160	Identifier	stdout		1146886	0					
ANR	1147161	Argument	"""===============\\n"""		1146886	1					
ANR	1147162	PrimaryExpression	"""===============\\n"""		1146886	0					
ANR	1147163	Statement	delete	95:3:2625:2630	1146886	8	True				
ANR	1147164	Statement	[	95:10:2632:2632	1146886	9	True				
ANR	1147165	Statement	]	95:11:2633:2633	1146886	10	True				
ANR	1147166	ExpressionStatement	result	95:13:2635:2641	1146886	11	True				
ANR	1147167	Identifier	result		1146886	0					
ANR	1147168	ReturnStatement	return ( rc ) ? 0 : 1 ;	98:2:2652:2667	1146886	9	True				
ANR	1147169	ConditionalExpression	( rc ) ? 0 : 1		1146886	0					
ANR	1147170	Condition	rc		1146886	0					
ANR	1147171	Identifier	rc		1146886	0					
ANR	1147172	PrimaryExpression	0		1146886	1					
ANR	1147173	PrimaryExpression	1		1146886	2					
ANR	1147174	ReturnType	int		1146886	1					
ANR	1147175	Identifier	main		1146886	2					
ANR	1147176	ParameterList	"int argc , char * * argv"		1146886	3					
ANR	1147177	Parameter	int argc	36:9:1194:1201	1146886	0	True				
ANR	1147178	ParameterType	int		1146886	0					
ANR	1147179	Identifier	argc		1146886	1					
ANR	1147180	Parameter	char * * argv	36:19:1204:1214	1146886	1	True				
ANR	1147181	ParameterType	char * *		1146886	0					
ANR	1147182	Identifier	argv		1146886	1					
ANR	1147183	CFGEntryNode	ENTRY		1146886		True				
ANR	1147184	CFGExitNode	EXIT		1146886		True				
ANR	1147185	Symbol	argc		1146886						
ANR	1147186	Symbol	buffer . c_str		1146886						
ANR	1147187	Symbol	NULL		1146886						
ANR	1147188	Symbol	stdout		1146886						
ANR	1147189	Symbol	global_opts . server		1146886						
ANR	1147190	Symbol	global_opts		1146886						
ANR	1147191	Symbol	i		1146886						
ANR	1147192	Symbol	* argv		1146886						
ANR	1147193	Symbol	stderr		1146886						
ANR	1147194	Symbol	argv		1146886						
ANR	1147195	Symbol	result		1146886						
ANR	1147196	Symbol	rc		1146886						
ANR	1147197	Symbol	error_reason		1146886						
ANR	1147198	Symbol	* i		1146886						
ANR	1147199	Symbol	USAGE		1146886						
ANR	1147200	Symbol	* result		1146886						
ANR	1147201	Symbol	true		1146886						
ANR	1147202	Symbol	* * argv		1146886						
ANR	1147203	Symbol	stork_list		1146886						
ANR	1147204	Symbol	unparser		1146886						
ANR	1147205	Symbol	buffer		1146886						
ANR	1147206	Symbol	& global_opts		1146886						
ANR	1147207	Symbol	result_size		1146886						
